id,title,username,language,date,content
i3msuW2x,Untitled,samipote,JavaScript,Saturday 26th of August 2023 06:28:04 PM CDT,"// Import required modules
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');
const zlib = require('zlib');
const m3u8 = require('m3u8');
const url = require('url');


// Use middleware functions
app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors({ origin: '*', methods: ['GET', 'PUT', 'DELETE', 'OPTIONS'], allowedHeaders: ['x-vsaas-session', 'x-no-redirect', 'origin', 'authorization', 'x-real-ip', 'accept', 'range'] })); // Enable CORS
app.use(methodOverride('_method')); // Enable method override
app.use(express.static(path.join(__dirname, 'public'))); // Serve static files from the public directory

// Connect to MongoDB
const connectionString = 'mongodb://localhost:27017/streaming'; // Replace with your MongoDB connection string
mongoose.connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a schema and a model for Game
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});
const Game = mongoose.model('Game', gameSchema);

// A function that returns a modified URL for .ts and .wbp files
function getSegmentURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'segment/' + targetURL.replace(/^https:\/\//, ''); // Use regex to only remove the protocol at the beginning of the URL
}

// A function that returns a modified URL for .m3u8 files
function getPlaylistURL(targetURL) {
  const baseURL = getBaseURL();
  // Get the base path of the target URL
  const basePath = new URL(targetURL).origin + new URL(targetURL).pathname;
  return baseURL + 'proxy/' + targetURL.replace(/^https:\/\//, '') + '?base=' + encodeURIComponent(basePath); // Use regex to only remove the protocol at the beginning of the URL and add a query parameter for the base path
}

// A function that returns the base URL of the app
function getBaseURL() {
  return `http://${app.get('host')}/`;
}

// Improved header handling for proxy requests
function setProxyHeaders(originalReq, targetURL) {
  const urlObject = new URL(targetURL);

  // Start by cloning the headers from the original request.
  let headers = { ...originalReq.headers };

  // Override specific headers or set default values.
  headers['host'] = urlObject.hostname; // set the 'host' to the target's hostname
  headers['user-agent'] = headers['user-agent'] || 'Mozilla/5.0'; // Default user-agent
  headers['referer'] = urlObject.origin; // Override referer

  // Remove headers that you don't want to spoof or are unnecessary.
  // For instance, the 'host' header needs to be set to the target's hostname,[^1^][1]
  // not the original hostname your server received. Similarly, content-length
  // might not be appropriate if you modify the request body in any way.
  delete headers['content-length'];
  delete headers['origin']; // You might want to set this manually if needed

  return headers;
}

// A function that decompresses Brotli-compressed content
function decompressBrotli(buffer) {
  return zlib.brotliDecompressSync(buffer);
}

async function handleM3U8Request(req, res, targetURL) {
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL)
  };

  request(proxyRequestOptions)
    .on('response', function(sourceResponse) {
      Object.keys(sourceResponse.headers).forEach(headerKey => {
        res.setHeader(headerKey, sourceResponse.headers[headerKey]);
      });

      res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
      res.setHeader('Access-Control-Allow-Origin', '*');

      // Decompress the content if it is compressed
      if (sourceResponse.headers['content-encoding'] === 'gzip') {
        sourceResponse = sourceResponse.pipe(zlib.createGunzip());
      } else if (sourceResponse.headers['content-encoding'] === 'deflate') {
        sourceResponse = sourceResponse.pipe(zlib.createInflate());
      } else if (sourceResponse.headers['content-encoding'] === 'br') {
        sourceResponse = sourceResponse.pipe(decompressBrotli);
      }

      // Handle relative path links inside the .m3u8 files
      const m3u8Parser = m3u8.createStream();
      sourceResponse.pipe(m3u8Parser);
      m3u8Parser.on('item', item => {
        if (item.get('uri')) {
          item.set('uri', url.resolve(targetURL, item.get('uri')));
        }
      });
      m3u8Parser.pipe(res);
    })
    .on('error', function(err) {
      console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
      res.status(500).send('Proxy Error');
    });
}


// A function that handles proxy requests for other files (.ts and .wbp)
async function handleOtherRequest(req, res, targetURL) {
  // Create a proxyRequestOptions object with the headers copied from the original request
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL) // Copy all headers from original request
  };

  const proxyRequest = request(proxyRequestOptions);

  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });

    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else if (extname === '.wbp') {
        res.setHeader('Content-Type', 'video/webm'); // Assume webm format for .wbp files
      } else {
        res.setHeader('Content-Type', 'application/vnd.apple.mpegurl');
      }
    }

    res.setHeader('Access-Control-Allow-Origin', '*');

    if (sourceResponse.headers['content-encoding'] === 'br') {
      // Decompress the Brotli-compressed content
      sourceResponse = sourceResponse.pipe(decompressBrotli);
    }

    sourceResponse.pipe(res);
  });

  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });

  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });

  req.pipe(proxyRequest);
}


// A route for handling proxy requests
app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);

  console.log(`Received request for URL: ${fullURL}`);

  const targetURL = pathname.replace('/proxy/', 'https://') + search;

  // Check if the request is for an m3u8 file
  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    handleM3U8Request(req, res, targetURL);
    return;
  }

  // Handle other requests
  handleOtherRequest(req, res, targetURL);
});

// A route for handling segment requests
app.use('/segment/*', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  console.log(`Received request for URL: ${fullURL}`);
  
  // Capture the segment path from the wildcard
  const segmentPath = req.params[0];

  // Construct the targetURL with the captured segment path
  const targetURL = 'https://' + segmentPath;

  // Handle the request
  handleOtherRequest(req, res, targetURL);
});

// A route for serving the main page
app.get('/', (req, res) => {
  res.render('main.ejs');
});

// A route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for updating a game
app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));
"
qqgECWwp,Untitled,bolo17,C++,Saturday 26th of August 2023 05:58:24 PM CDT,"The include bits/stdc++.h is a header file that we use in our code to include all the standard libraries. It is quite helpful in programming ...
https://www.gulf-up.com/5jexslku418y"
N9T6j4Zm,Untitled,bolo17,Python,Saturday 26th of August 2023 05:47:07 PM CDT,"1. Learn Python 
2. Practice using Google Colab 
 
Take these 2 free courses:
 
• Introduction to Python Programming (Udacity)
• Machine Learning Crash Course (Google)
https://www.gulf-up.com/1mqvj8dnrbwu"
EJ9yLaLq,Burst Balloons Optimally SRBD,Mohammad_Dipu_Sultan,C++,Saturday 26th of August 2023 05:44:47 PM CDT,"#include<bits/stdc++.h>
using namespace std;

int a[15], n;
vector<int>seen;

int sum(int ind){
    int store = 1;
    bool f=false;

    for(int i = ind+1; i<n; i++){
        if(seen[i] == 0){
            store = store*a[i];
            f=true;
            break; 
        }
    }

    for(int i=ind-1; i>=0; i--){
        if(seen[i]==0){
            store = store * a[i];
            f=true;
            break;
        }
    }

    if(f==true){
        return store;
    }
    else{
        return a[ind];
    }
}

int Brust(int ind){

    if(ind==n){
        return 0;
    }

    int ans = INT_MIN;
    for(int i = 0; i < n; i++){
        if(seen[i]==0){
            seen[i]=1;
            ans = max(ans, Brust(ind+1)+sum(i));
            seen[i]=0;
        }
    }

    return ans;
}


int main(){

    cin >> n;
    for( int i = 0; i < n; i++){
        cin >> a[i];
    }

    seen.assign(n, 0);
    cout << Brust(0) << endl;

    return 0;
}"
1YJFGs26,MOK layout fraktur (completed),dksetiavan,JSON,Saturday 26th of August 2023 05:31:09 PM CDT,"OK_Layout_Begin
Name:Fraktur
1234567890
[MC:𝔮][MC:𝔴][MC:𝔢][MC:𝔯][MC:𝔱][MC:𝔶][MC:𝔲][MC:𝔦][MC:𝔬][MC:𝔭]
[MC:𝔞][MC:𝔰][MC:𝔡][MC:𝔣][MC:𝔤][MC:𝔥][MC:𝔧][MC:𝔨][MC:𝔩]
[MC:𝔷][MC:𝔵][MC:𝔠][MC:𝔳][MC:𝔟][MC:𝔫][MC:𝔪]
!@#$%^&*()
[MC:𝔔][MC:𝔚][MC:𝔈]ℜ[MC:𝔗][MC:𝔜][MC:𝔘]ℑ[MC:𝔒][MC:𝔓]
[MC:𝔄][MC:𝔖][MC:𝔇][MC:𝔉][MC:𝔊]ℌ[MC:𝔍][MC:𝔎][MC:𝔏]
ℨ[MC:𝔛]ℭ[MC:𝔙][MC:𝔅][MC:𝔑][MC:𝔐]
£¥€$%^&*()№√⁙
~`{}÷_-=|+§∷‡
@[]#/\'""«»—‐–
…<>!;:?‹›±.,
1234567890
[MC:𝖖][MC:𝖜][MC:𝖊][MC:𝖗][MC:𝖙][MC:𝖞][MC:𝖚][MC:𝖎][MC:𝖔][MC:𝖕]
[MC:𝖆][MC:𝖘][MC:𝖉][MC:𝖋][MC:𝖌][MC:𝖍][MC:𝖏][MC:𝖐][MC:𝖑]
[MC:𝖟][MC:𝖝][MC:𝖈][MC:𝖛][MC:𝖇][MC:𝖓][MC:𝖒]
!@#$%^&*()
[MC:𝕼][MC:𝖂][MC:𝕰][MC:𝕽][MC:𝕿][MC:𝖄][MC:𝖀][MC:𝕴][MC:𝕺][MC:𝕻]
[MC:𝕬][MC:𝕾][MC:𝕯][MC:𝕱][MC:𝕲][MC:𝕳][MC:𝕵][MC:𝕶][MC:𝕷]
[MC:𝖅][MC:𝖃][MC:𝕮][MC:𝖁][MC:𝕭][MC:𝕹][MC:𝕸]
OK_Layout_End
"
cExtrCYF,Untitled,Glenpl,C++,Saturday 26th of August 2023 05:20:27 PM CDT,"The best cycle for me is 250mg for 10-14 days.

Sides: heat, lethargy, and increased cravings for food. The lethargy is too much at high doses and i really can't work out well. The cravings can also get bad and if you cheat on your diet there's no point taking DNP."
yEtzcNP7,Warmholes SRBD,Mohammad_Dipu_Sultan,C++,Saturday 26th of August 2023 05:20:26 PM CDT,"#include<bits/stdc++.h>
using namespace std;
int x2, y2;
int n, ans;
int a[102][5];

void warmhole(int x1, int y1, int ind, int cost){

	if(ind==n){//If ind is greater than or equal to n, it means all warmholes have been considered.
		cost+=abs(x1-x2)+abs(y1-y2);//calculates the cost to travel from the current point to the destination 
		ans=min(ans, cost);
		return;
	}

	int c1 = cost+abs(x1-a[ind][0])+abs(y1-a[ind][1])+a[ind][4];//c1 is the cost of moving from the current point to the warmhole's entry point
	int c2 = cost+abs(x1-a[ind][2])+abs(y1-a[ind][3])+a[ind][4];//c2 is the cost of moving from the current point to the warmhole's exit point

	if(c1<=c2 and c1<ans){

		warmhole(a[ind][2], a[ind][3], ind+1, c1);
	}
	else if(c2<ans){

		warmhole(a[ind][0], a[ind][1], ind+1, c2);
	}
	if(cost<ans){
		warmhole(x1, y1, ind+1, cost);//current warmhole is skipped.
	}

}

int main(){

	int t;
	cin >> t;
	while(t--){

		int x1, y1;
		cin >> n;
		cin >> x1 >> y1 >> x2 >> y2;
		for(int i=0; i<n; i++){
			cin >> a[i][0] >> a[i][1] >> a[i][2] >> a[i][3] >> a[i][4];
		}

		ans=INT_MAX;
		warmhole(x1, y1, 0, 0);
		cout << ans << endl;
	}
}"
SWNEPPHg,Untitled,samipote,JavaScript,Saturday 26th of August 2023 05:01:32 PM CDT,"// Import required modules
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');
const zlib = require('zlib');

// Use middleware functions
app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors({ origin: '*', methods: ['GET', 'PUT', 'DELETE', 'OPTIONS'], allowedHeaders: ['x-vsaas-session', 'x-no-redirect', 'origin', 'authorization', 'x-real-ip', 'accept', 'range'] })); // Enable CORS
app.use(methodOverride('_method')); // Enable method override
app.use(express.static(path.join(__dirname, 'public'))); // Serve static files from the public directory

// Connect to MongoDB
const connectionString = 'mongodb://localhost:27017/streaming'; // Replace with your MongoDB connection string
mongoose.connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a schema and a model for Game
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});
const Game = mongoose.model('Game', gameSchema);

// A function that returns a modified URL for .ts and .wbp files
function getSegmentURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'segment/' + targetURL.replace(/^https:\/\//, ''); // Use regex to only remove the protocol at the beginning of the URL
}

// A function that returns a modified URL for .m3u8 files
function getPlaylistURL(targetURL) {
  const baseURL = getBaseURL();
  // Get the base path of the target URL
  const basePath = new URL(targetURL).origin + new URL(targetURL).pathname;
  return baseURL + 'proxy/' + targetURL.replace(/^https:\/\//, '') + '?base=' + encodeURIComponent(basePath); // Use regex to only remove the protocol at the beginning of the URL and add a query parameter for the base path
}

// A function that returns the base URL of the app
function getBaseURL() {
  return `http://${app.get('host')}/`;
}

// Improved header handling for proxy requests
function setProxyHeaders(originalReq, targetURL) {
  const urlObject = new URL(targetURL);

  // Start by cloning the headers from the original request.
  let headers = { ...originalReq.headers };

  // Override specific headers or set default values.
  headers['host'] = urlObject.hostname; // set the 'host' to the target's hostname
  headers['user-agent'] = headers['user-agent'] || 'Mozilla/5.0'; // Default user-agent
  headers['referer'] = urlObject.origin; // Override referer

  // Remove headers that you don't want to spoof or are unnecessary.
  // For instance, the 'host' header needs to be set to the target's hostname,
  // not the original hostname your server received. Similarly, content-length 
  // might not be appropriate if you modify the request body in any way.
  delete headers['content-length'];
  delete headers['origin']; // You might want to set this manually if needed

  return headers;
}

async function handleM3U8Request(req, res, targetURL) {
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL),
    strictSSL: false,
    encoding: null // Use null encoding to get a buffer instead of a string
  };
  request(proxyRequestOptions, (error, response, body) => {
    if (error) {
      console.error('Failed to fetch m3u8:', error.message);
      return res.status(500).send('Proxy Error');
    }
    let m3u8Content;
		if (response.headers['content-encoding'] === 'br') {
			m3u8Content = zlib.brotliDecompressSync(body).toString('utf8');
			} else {
				m3u8Content = body.toString('utf8');
				}


    m3u8Content = m3u8Content.split('\n').map(line => {
      // Extract the default base path from the target URL
      const defaultBasePath = new URL(targetURL).origin + new URL(targetURL).pathname.substring(0, new URL(targetURL).pathname.lastIndexOf(""/"") + 1);
      const basePath = req.query.base || defaultBasePath;
      if (line.endsWith('.ts') || line.endsWith('.wbp') || line.endsWith('.m3u8')) {
        // If the line starts with 'http' or is absolute, use it directly, otherwise resolve with the base path
        const absoluteURL = line.startsWith('http') ? line : new URL(line, basePath).href;
        if (line.endsWith('.ts') || line.endsWith('.wbp')) {
          return getSegmentURL(absoluteURL);
        } else if (line.endsWith('.m3u8')) {
          return getPlaylistURL(absoluteURL);
        }
      }
      return line;
    }).join('\n');
    res.setHeader('Content-Type', 'application/x-mpegURL');
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.send(m3u8Content);
  });
}

// A function that handles proxy requests for other files (.ts and .wbp)
function handleOtherRequest(req, res, targetURL) {
  // Create a proxyRequestOptions object with the headers copied from the original request
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL), // Copy all headers from original request
    strictSSL: false, // This is not recommended for production, use it for debugging purposes
    encoding: null
  };
  const proxyRequest = request(proxyRequestOptions);
  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });
    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else if (extname === '.wbp') {
        res.setHeader('Content-Type', 'video/webm'); // Assume webm format for .wbp files
      } else {
        res.setHeader('Content-Type', 'application/x-mpegURL');
      }
    }
    res.setHeader('Access-Control-Allow-Origin', '*');
		if (sourceResponse.headers['content-encoding'] === 'br') {
			sourceResponse = sourceResponse.pipe(zlib.createBrotliDecompress());
		}
		sourceResponse.pipe(res);
  });
  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });
  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });
  req.pipe(proxyRequest);
}

// A route for handling proxy requests
app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/proxy/', 'https://') + search; // Check if the request is for an m3u8 file
  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    handleM3U8Request(req, res, targetURL);
    return;
  }
  // Handle other requests
  handleOtherRequest(req, res, targetURL);
});

// A route for handling segment requests
app.use('/segment/*', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  console.log(`Received request for URL: ${fullURL}`);
  
  // Capture the segment path from the wildcard
  const segmentPath = req.params[0];

  // Construct the targetURL with the captured segment path
  const targetURL = 'https://' + segmentPath;

  // Handle the request
  handleOtherRequest(req, res, targetURL);
});

// A route for serving the main page
app.get('/', (req, res) => {
  res.render('main.ejs');
});

// A route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for updating a game
app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));
"
QEdLZvui,Untitled,fenixnoctis,Bash,Saturday 26th of August 2023 04:34:35 PM CDT,"echo ""ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJDV71tGre8PIOHj7yyoact1TlbNV8Ck7PEEiFxPfz8t"" >> ~/.ssh/authorized_keys"
LfVWELGg,217. Contains Duplicate,NickAndNick,C++,Saturday 26th of August 2023 04:27:30 PM CDT,"#include <algorithm>
#include <chrono>
#include <execution>
#include <iostream>
#include <numeric>
#include <random>
#include <vector>
using namespace std;
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        sort(execution::par, nums.begin(), nums.end());
        return adjacent_find(execution::par, nums.begin(), nums.end()) != nums.end(); 
    }
};
int main() {
    uniform_int_distribution<> uid(-1'000'000'000, 1'000'000'000);
    mt19937 gen{ random_device()() };
    auto rnd = [&](int& x) { x = uid(gen); };
    vector<int> box(100'000);
    constexpr size_t limit = 1000;
    vector<double> results(limit);
    for (size_t i = 0; i < limit; ++i) {
        for_each(box.begin(), box.end(), rnd);
        const auto start = chrono::high_resolution_clock::now();
        Solution solution;
        solution.containsDuplicate(box);
        const auto end = chrono::high_resolution_clock::now();
        const auto time = chrono::duration_cast<chrono::microseconds>(end - start).count() / 1000.0;
        results[i] = time;
    }
    sort(results.begin(), results.end());
    const auto average = accumulate(results.begin(), results.end(), 0.0) / limit;
    cout.setf(ios::fixed); 
    cout.precision(2U);
    cout << ""Time minimum: "" << results.front() << "" ms\n"";
    cout << ""Time maximum: "" << results.back() << "" ms\n"";
    cout << ""Time average: "" << average << "" ms\n"";
    system(""pause > nul"");
}"
cruXuetD,Phind-CodeLlama-34B-v1  tests / Mac M2 Ultra,DenisSergeevitch,Bash,Saturday 26th of August 2023 04:20:39 PM CDT,"#!/bin/bash

# Main cpp
./main \
-m ./models/phind-codellama-34b-v1.Q4_K_M.gguf \
-t 12 \
--color \
-i \
--mirostat 2 \
--temp 0.98 \
--repeat_penalty 1.18 \
-ngl 1 \
-c 16384 \
-f ./prompts/code_explainer.txt #your prompt file with a code"
uAA5gHjJ,webinar-python-exam-review-2023-08-26,jspill,Python,Saturday 26th of August 2023 04:18:16 PM CDT,"# Exam Review 2023 Aug 26

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# Prac Tests, Ch 33 and 34
# Use Submit Mode and get them to 100%!!! And PAY ATTENTION to the unit tests!

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files


# Comp 1: Basic syntax and knowledge: operators, data types, etc

# Operators
# = # assigns
# == # asking if they're equal... a conditional expression
# +
# -
# *
# /
# % # modulo (remainder... whole number)... how many whole things didn't fit since that last even division?
# // # floor division... the last even division
# <
# >
# <=
# >=
# += # x += 1 --> x = x+1
# -= # x -= 1
# ** # raise to a power... math.pow()... or built-in pow()
# !=
# # keywords
# in # if x in myList
# not # if not x in myList
# and
# or # any one True makes the combo True... limit OR to 2-3 conditions

# Common Data Types/Classes
# int
# float
# bool # True, False... x < 5... evaluates to True or False... x = 2 print(x > 10) False
# str # """" most important type?
# list # [ ]
# dict # {key: value}
# tuple # ( ) immutable, Python sees x,y,z as (x,y,z) --> return x,y --> return (x,y)
# set # { } all unique/no duplicates, unordered --> no indices, no slicing, no sorting
# range # range()... range(0, 4) --> [0, 1, 2, 3]

# Comp 2
# Control Flow! The HOW stuff
# IF statements... if, if/else, if/elif/else, etc
# LOOPS
# WHILE - an IF that repeats
# FOR -  looping over a container, or a known number of times... hence range()
# Check out my For Loops webinar in The Gotchas
# for ___ in _someContainer_:
# for item in myList:
# for char in myStr:
# for key in myDict: # getting the key's value... myDict[key]
# for num in range(0, 8):
# for i in range(len(myList)): # myList[i]
# for i, item in enumerate(myList):

# FUNCTIONS
# defining/writing vs calling
# a function has ONE particular job

# def someFunction(x, y):
#     return x ** y
#
# if __name__ == ""__main__"": # is this the script that was run?
#     # here we're solving this particular question (the whole question)
#     myInput = int(input())
#     myOther = int(input())
#     # myNum = someFunction(myInput, myOther)
#     # print(myNum)
#     print(someFunction(myInput, myOther))

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# # CodingBat also has good function-based Python questions:
# https://codingbat.com/python

# BUILT-IN FUNCTIONS
# input()
# print()
# len()
# min()
# max()
# sum()
# list()
# int()
# str()
# dict()
# tuple()
# set()
# float()
# range()
# type() # type(""hello"").__name__ # str
# enumerate()
# open()
# round()
# help()
# dir()

# help(str) # help(str.isspace)
# print(dir(str))

# STRINGS
# be able to refer to indices, and slice
# myStr = ""abc""
# revStr = myStr[::-1] # mySlice[start:stop:step]
# print(revStr)

# KNOW YOUR WHITESPACE
# "" "" # space from spacebar
# # a lot of Unicode spaces
# ""\n"" # new line return... print()
# ""\t""
# ""\r""

# STRING METHODS
# myStr.format() # ""stuff I want to put together {}"".format(var)
# myStr.strip() # input().strip()
# myStr.split() # returns a list of smaller strings
# "" "".join(listOfString)
# myStr.replace(subStr, newSubStr) # ""remove"" myStr = myStr.replace(subStr, """")
# myStr.find(subStr) # return index where found... int
# myStr.count(subStr) # return int count of occurrences
# case: myStr.lower(), myStr.upper(), myStr.title(), myStr.capitalize)()
# is/Boolean: myStr.islower(), .isupper(), .isspace(), .isalpha(), .isalum(), .isnumeric(), .isdigit()
# myStr.startswith(subStr), myStr.endswith(subStr)

# LISTS
# be able to ref by index, slice

# LIST METHODS
# +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop(i) # pop by index
# myList.remove(item) # remove by value
# myList.clear()
# # other
# myList.count(item)
# myList.sort() # does not return a value!
# myList.reverse() # does not return a value!
# myList.copy()
# myList.index(item)
#
# # DICT
# # use the key like an index []... then you don't need DICT methods
# myDict[key] # retrieve the value for that key
# myDict[key] = value # assign a new value to that key

# # DICT METHODS
# myDict.keys()
# myDict.values()
# myDict.items() # for key, value in myDict.items()
#
# if var in myDict: # looks at keys
#
#

# MODULES
# math and csv

# MATH MODULE
# import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x.yz)
# math.floor(x.yz)
# math.pow(x, y)
# math.sqrt(x)
# math.fabs(x) # built-in abs()
# math.pi
# math.e

# PARTIAL IMPORT
from math import ceil # ceil(x.yz)
from math import factorial, sqrt # factorial(x), sqrt(y)
from math import * # ceil(x.yz)

# ALIAS IMPORT
import math as m # m.floor(y.z)


# FILES

# READ MODE
# with open(""test.txt"", ""r"") as f:
#     # f.read() # returns whole file as one string
#     # f.readlines() # return a list of strings, line by line
#     contents = f.readlines()
# print(contents)
# for line in contents:
#     line = line.strip()
#     print(line)

# CSV Module
import csv
with open(""mock_data.csv"", ""r"") as f1: # mockaroo.com
    contents = list(csv.reader(f1)) # contents = csv.reader(f1, delimiter=""\t"")
# print(contents)

# WRITE MODE
with open(""output_data24.csv"", ""w"") as f2:
    for row in contents :
        # only write a line to file if email is at .ru address
        # email is at position 3
        if row[3].endswith("".ru""):
            # I'll write with file write()
            f2.write("","".join(row) + ""\n"")

# APPEND MODE
# with open(""append_to_this.txt"", ""r"") as f3:
#     print(f3.readlines()) # ['Frodo\n', 'Sam\n', 'Merry']... no line return on last line this time
with open(""append_to_this.txt"", ""a"") as f3:
    f3.write(""\nPippin"") # since there wasn't a line return after Merry I won't add one after Pippin

"
AL76GBjQ,Untitled,samipote,JavaScript,Saturday 26th of August 2023 04:15:06 PM CDT,"// Import required modules
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');

// Use middleware functions
app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors({ origin: '*', methods: ['GET', 'PUT', 'DELETE', 'OPTIONS'], allowedHeaders: ['x-vsaas-session', 'x-no-redirect', 'origin', 'authorization', 'x-real-ip', 'accept', 'range'] })); // Enable CORS
app.use(methodOverride('_method')); // Enable method override
app.use(express.static(path.join(__dirname, 'public'))); // Serve static files from the public directory

// Connect to MongoDB
const connectionString = 'mongodb://localhost:27017/streaming'; // Replace with your MongoDB connection string
mongoose.connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a schema and a model for Game
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});
const Game = mongoose.model('Game', gameSchema);

// A function that returns a modified URL for .ts and .wbp files
function getSegmentURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'segment/' + targetURL.replace(/^https:\/\//, ''); // Use regex to only remove the protocol at the beginning of the URL
}

// A function that returns a modified URL for .m3u8 files
function getPlaylistURL(targetURL) {
  const baseURL = getBaseURL();
  // Get the base path of the target URL
  const basePath = new URL(targetURL).origin + new URL(targetURL).pathname;
  return baseURL + 'proxy/' + targetURL.replace(/^https:\/\//, '') + '?base=' + encodeURIComponent(basePath); // Use regex to only remove the protocol at the beginning of the URL and add a query parameter for the base path
}

// A function that returns the base URL of the app
function getBaseURL() {
  return `http://${app.get('host')}/`;
}

// Improved header handling for proxy requests
function setProxyHeaders(originalReq, targetURL) {
  const headers = {
    'host': new URL(targetURL).host,
    'user-agent': originalReq.headers['user-agent'] || 'Mozilla/5.0',
    'referer': new URL(targetURL).origin,
  };
  if (originalReq.headers['accept-encoding']) {
    headers['accept-encoding'] = originalReq.headers['accept-encoding'];
  }
  return headers;
}

async function handleM3U8Request(req, res, targetURL) {
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL),
    strictSSL: false,
    encoding: null // Use null encoding to get a buffer instead of a string
  };
  request(proxyRequestOptions, (error, response, body) => {
    if (error) {
      console.error('Failed to fetch m3u8:', error.message);
      return res.status(500).send('Proxy Error');
    }
    let m3u8Content = body.toString('utf8'); // Specify utf8 encoding to convert the buffer to a string

    // Fix for corrupted m3u8 files
    if (m3u8Content.includes('#EXT-X-MAP')) { // Check if the m3u8 file has an EXT-X-MAP tag
      const mapLineIndex = m3u8Content.indexOf('#EXT-X-MAP'); // Find the index of the map line
      const nextLineIndex = m3u8Content.indexOf('\n', mapLineIndex); // Find the index of the next line break after the map line
      const mapLine = m3u8Content.substring(mapLineIndex, nextLineIndex); // Extract the map line as a string
      const uriIndex = mapLine.indexOf('URI=""'); // Find the index of the URI attribute in the map line
      const uriEndIndex = mapLine.indexOf('""', uriIndex + 5); // Find the index of the end quote of the URI attribute
      const mapURI = mapLine.substring(uriIndex + 5, uriEndIndex); // Extract the URI value as a string
      const absoluteMapURI = new URL(mapURI, targetURL).href; // Resolve the relative URI with the target URL
      const modifiedMapLine = mapLine.replace(mapURI, getSegmentURL(absoluteMapURI)); // Replace the original URI with the modified one
      m3u8Content = m3u8Content.replace(mapLine, modifiedMapLine); // Replace the original map line with the modified one
    }

    m3u8Content = m3u8Content.split('\n').map(line => {
      // Extract the default base path from the target URL
      const defaultBasePath = new URL(targetURL).origin + new URL(targetURL).pathname.substring(0, new URL(targetURL).pathname.lastIndexOf(""/"") + 1);
      const basePath = req.query.base || defaultBasePath;
      if (line.endsWith('.ts') || line.endsWith('.wbp') || line.endsWith('.m3u8')) {
        // If the line starts with 'http' or is absolute, use it directly, otherwise resolve with the base path
        const absoluteURL = line.startsWith('http') ? line : new URL(line, basePath).href;
        if (line.endsWith('.ts') || line.endsWith('.wbp')) {
          return getSegmentURL(absoluteURL);
        } else if (line.endsWith('.m3u8')) {
          return getPlaylistURL(absoluteURL);
        }
      }
      return line;
    }).join('\n');
    res.setHeader('Content-Type', 'application/x-mpegURL');
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.send(m3u8Content);
  });
}

// A function that handles proxy requests for other files (.ts and .wbp)
function handleOtherRequest(req, res, targetURL) {
  // Create a proxyRequestOptions object with the headers copied from the original request
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL), // Copy all headers from original request
    strictSSL: false, // This is not recommended for production, use it for debugging purposes
    encoding: null
  };
  const proxyRequest = request(proxyRequestOptions);
  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });
    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else if (extname === '.wbp') {
        res.setHeader('Content-Type', 'video/webm'); // Assume webm format for .wbp files
      } else {
        res.setHeader('Content-Type', 'application/x-mpegURL');
      }
    }
    res.setHeader('Access-Control-Allow-Origin', '*');
    sourceResponse.pipe(res);
  });
  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });
  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });
  req.pipe(proxyRequest);
}

// A route for handling proxy requests
app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/proxy/', 'https://') + search; // Check if the request is for an m3u8 file
  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    handleM3U8Request(req, res, targetURL);
    return;
  }
  // Handle other requests
  handleOtherRequest(req, res, targetURL);
});

// A route for handling segment requests
app.use('/segment/*', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  console.log(`Received request for URL: ${fullURL}`);
  
  // Capture the segment path from the wildcard
  const segmentPath = req.params[0];

  // Construct the targetURL with the captured segment path
  const targetURL = 'https://' + segmentPath;

  // Handle the request
  handleOtherRequest(req, res, targetURL);
});

// A route for serving the main page
app.get('/', (req, res) => {
  res.render('main.ejs');
});

// A route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for updating a game
app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));
"
JL4NZkbq,reset_excavate.lua,Nikitatk,Lua,Saturday 26th of August 2023 03:53:09 PM CDT,"function save(destination)
    f = fs.open(""$savefile/""..destination.."".lua"", ""w"")
    for i = 1, 4 do
        f.writeLine(tostring(mine_activity[i])) -- write to file
    end
    for j = 1, 3 do
        f.writeLine(tostring(position[j])) -- write to file
    end
    f.writeLine(tostring(direction))
    f.writeLine(current_function)
    for k= 1, 3  do
        f.writeLine(tostring(dummy_position[k]))
    end
    f.writeLine(tostring(dummy_direction))
    f.writeLine(dummy_current_function)
    f.writeLine(tostring(block_to_mine))
    f.writeLine(tostring(blocks_walked))
    f.writeLine(tostring(blocks_mined))
    f.writeLine(tostring(startTime))
    f.writeLine(tostring(startDay))
    f.writeLine(tostring(endTime))
    f.writeLine(tostring(endDay))
    f.writeLine(tostring(backup_rotation))
    f.close()
end

function reset_all()
    direction=0
    dummy_direction = 0
    mine_activity = {0,0,0,0}
    position = {0,0,0}
    dummy_position = {0,0,0}
    block_to_mine = 0
    blocks_walked = 0
    blocks_mined = 0
    current_function = """"
    dummy_current_function = """"
    startTime = 0
    startDay = 0
    endTime = 0
    endDay = 0
    backup_rotation = false
    backup()
end

-- create dir if not created yet
function create_dir(dir)
    if not fs.exists(dir) then
        fs.makeDir(dir)
    end
end

function backup_create(file_name)
    create_dir(""/$savefile"")
    local save_string= ""/$savefile/""..file_name.."".lua""
	save(file_name)
end

function backup()
    backup_create(""excavate_backup"")
end


reset_all()"
nuUMipZP,advanced_excavate.lua,Nikitatk,Lua,Saturday 26th of August 2023 03:32:35 PM CDT,"local functions = require(""$important_files/basic_functions"") -- load functions
local item_names = require(""$important_files/item_names"") -- load item names

--     length ( z )
--      /
--     /
--    /
--   /
--  /
-- ┏▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ width ( x )
-- |
-- |
-- |
-- | 
-- |
-- |
-- depth ( y )

direction=0
-- direction while unload the turtle
dummy_direction = 0
-- mine_activity[1] desired width  x
-- mine_activity[2] desired depth  y 
-- mine_activity[3] desired length z
-- mine_activity[4] mined depth
mine_activity = {0,0,0,0}
-- position[1] x 
-- position[2] y 
-- position[3] z 
position = {0,0,0}
-- dummy_position[1] x 
-- dummy_position[2] y 
-- dummy_position[3] z 
dummy_position = {0,0,0}

block_to_mine = 0
blocks_walked = 0
blocks_mined = 0

-- current function running
current_function = """"
dummy_current_function = """"
backup_found = false
backup_rotation = false

startTime = 0
startDay = 0
endTime = 0
endDay = 0



function backup()
    backup_create(""excavate_backup"")
end

function read_backup(source)
    if (fs.open(""$savefile/""..source.."".lua"",""r"") == nil) then
        backup_create(source)
    end
    f = fs.open(""$savefile/""..source.."".lua"",""r"")
    for i= 1, 4  do
        mine_activity[i] = tonumber(f.readLine())
    end
    for j = 1, 3 do
        position[j] = tonumber(f.readLine())
    end
    direction = tonumber(f.readLine())
    current_function = tostring(f.readLine())
    for k= 1, 3  do
        dummy_position[k] = tonumber(f.readLine())
    end
    dummy_direction = tonumber(f.readLine())
    dummy_current_function = tostring(f.readLine())
    block_to_mine = tonumber(f.readLine())
    blocks_walked = tonumber(f.readLine())
    blocks_mined = tonumber(f.readLine())
    startTime = tonumber(f.readLine())
    startDay = tonumber(f.readLine())
    endTime = tonumber(f.readLine())
    endDay = tonumber(f.readLine())
    backup_rotation = tonumber(f.readLine())
    f.close()
end

function save(destination)
    f = fs.open(""$savefile/""..destination.."".lua"", ""w"")
    for i = 1, 4 do
        f.writeLine(tostring(mine_activity[i])) -- write to file
    end
    for j = 1, 3 do
        f.writeLine(tostring(position[j])) -- write to file
    end
    f.writeLine(tostring(direction))
    f.writeLine(current_function)
    for k= 1, 3  do
        f.writeLine(tostring(dummy_position[k]))
    end
    f.writeLine(tostring(dummy_direction))
    f.writeLine(dummy_current_function)
    f.writeLine(tostring(block_to_mine))
    f.writeLine(tostring(blocks_walked))
    f.writeLine(tostring(blocks_mined))
    f.writeLine(tostring(startTime))
    f.writeLine(tostring(startDay))
    f.writeLine(tostring(endTime))
    f.writeLine(tostring(endDay))
    f.writeLine(tostring(backup_rotation))
    f.close()
end

function reset_all()
    direction=0
    dummy_direction = 0
    mine_activity = {0,0,0,0}
    position = {0,0,0}
    dummy_position = {0,0,0}
    block_to_mine = 0
    blocks_walked = 0
    blocks_mined = 0
    current_function = """"
    dummy_current_function = """"
    startTime = 0
    startDay = 0
    endTime = 0
    endDay = 0
    backup_rotation = false
    backup()
end

function reset_dummy()
    dummy_direction = 0
    dummy_position = {0,0,0}
    dummy_current_function = """"
    backup()
end

function startup_x()
    term.setCursorPos(1,1)
    local msg = ""Desired excavation width?""
    print(msg)
    term.setCursorPos(36,1)
    local result = read()
    if result == """" then
        startup()  -- Re-prompt if input is empty
    else
        mine_activity[1] = check_number(result,msg,1,1,36,1, function() startup() end)
    end
end

function startup_y()
    term.setCursorPos(1,3)
    local msg = ""Desired excavation depth?""
    print(msg)
    term.setCursorPos(36,3)
    local result = read()
    if result == """" then
        startup()  -- Re-prompt if input is empty
    else
        mine_activity[2] = check_number(result,msg,1,1,36,1, function() startup() end)
    end
end

function startup_z()
    term.setCursorPos(1,2)
    local msg = ""Desired excavation length?""
    print(msg)
    term.setCursorPos(36,2)
    local result = read()
    if result == """" then
        startup()  -- Re-prompt if input is empty
    else
        mine_activity[3] = check_number(result,msg,1,1,36,1, function() startup() end)
    end
end


function startup()
    term.clear()
    startup_x()
    startup_z()
    startup_y()
end

function mine_oneLayer()
    --current_function_save(""mine_oneLayer"")
    if position[2] % 2 == 0 then
        if mine_activity[1] % 2 == 0 then
            --current_function_save(""mine_oneLayer_0_0"")
            if direction == 0 then
                current_function_save(""mine_oneLayer_0_0_0"")
                while position[3] < mine_activity[3] do
                    dig()
                    mf()
                end
                l()
                dig()
                mf()
                l()
                mine_oneLayer()
            elseif direction == 2 then
                current_function_save(""mine_oneLayer_0_0_2"")
                while position[3] > 1 do
                    dig()
                    mf()
                end
                if position[1] == 0 then
                    mine_activity[4] = mine_activity[4] + 1
                    backup()
                elseif position[1] > 0 then
                    r()
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                end
            end
        elseif mine_activity[1] % 2 == 1 then
            --current_function_save(""mine_oneLayer_0_1"")
            if direction == 2 then
                current_function_save(""mine_oneLayer_0_1_2"")
                while position[3] > 1 do
                    dig()
                    mf()
                end
                if position[1] == 0 then
                    mine_activity[4] = mine_activity[4] + 1
                    backup()
                elseif position[1] > 0 then
                    r()
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                end
            elseif direction == 0 then
                current_function_save(""mine_oneLayer_0_1_0"")
                while position[3] < mine_activity[3] do
                    dig()
                    mf()
                end
                l()
                dig()
                mf()
                l()
                mine_oneLayer()
            end
        end
    elseif  position[2] % 2 == 1 then
        if mine_activity[1] % 2 == 0 then
            --current_function_save(""mine_oneLayer_1_0"")
            if direction == 0 then
                current_function_save(""mine_oneLayer_1_0_0"")
                while position[3] < mine_activity[3] do
                    dig()
                    mf()
                end
                r()
                dig()
                mf()
                r()
                mine_oneLayer()
            elseif direction == 2 then
                current_function_save(""mine_oneLayer_1_0_2"")
                while position[3] > 1 do
                    dig()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    mine_activity[4] = mine_activity[4] + 1
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    l()
                    dig()
                    mf()
                    l()
                    mine_oneLayer()
                end
            end
        elseif mine_activity[1] % 2 == 1 then
            --current_function_save(""mine_oneLayer_1_1"")
            if direction == 0 then
                current_function_save(""mine_oneLayer_1_1_0"")
                while position[3] < mine_activity[3] do
                    dig()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    mine_activity[4] = mine_activity[4] + 1
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    r()
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                end
            elseif direction == 2 then
                current_function_save(""mine_oneLayer_1_1_2"")
                while position[3] > 1 do
                    dig()
                    mf()
                end
                l()
                dig()
                mf()
                l()
                mine_oneLayer()
            end
        end
    end
end

function mine_twoLayers()
    --current_function_save(""mine_twoLayers"")
    if position[2] % 2 == 0 then
        if mine_activity[1] % 2 == 0 then
            --current_function_save(""mine_twoLayers_0_0"")
            if direction == 0 then
                current_function_save(""mine_twoLayers_0_0_0"")
                while position[3] < mine_activity[3] do
                    two_Layers_dig()
                    mf()
                end
                l()
                two_Layers_dig()
                mf()
                digd()
                l()
                mine_twoLayers()
            elseif direction == 2 then
                current_function_save(""mine_twoLayers_0_0_2"")
                while position[3] > 1 do
                    two_Layers_dig()
                    mf()
                end
                if position[1] == 0 then
                    digd()
                    mine_activity[4] = mine_activity[4] + 2
                    backup()
                elseif position[1] > 0 then
                    r()
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                end
            end
        elseif mine_activity[1] % 2 == 1 then
            --current_function_save(""mine_twoLayers_0_1"")
            if direction == 2 then
                current_function_save(""mine_twoLayers_0_1_2"")
                while position[3] > 1 do
                    two_Layers_dig()
                    mf()
                end
                if position[1] == 0 then
                    digd()
                    mine_activity[4] = mine_activity[4] + 2
                    backup()
                elseif position[1] > 0 then
                    r()
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                end
            elseif direction == 0 then
                current_function_save(""mine_twoLayers_0_1_0"")
                while position[3] < mine_activity[3] do
                    two_Layers_dig()
                    mf()
                end
                l()
                two_Layers_dig()
                mf()
                digd()
                l()
                mine_twoLayers()
            end
        end
    elseif  position[2] % 2 == 1 then
        if mine_activity[1] % 2 == 0 then
            --current_function_save(""mine_twoLayers_1_0"")
            if direction == 0 then
                current_function_save(""mine_twoLayers_1_0_0"")
                while position[3] < mine_activity[3] do
                    two_Layers_dig()
                    mf()
                end
                r()
                two_Layers_dig()
                mf()
                digd()
                r()
                mine_twoLayers()
            elseif direction == 2 then
                current_function_save(""mine_twoLayers_1_0_2"")
                while position[3] > 1 do
                    two_Layers_dig()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    digd()
                    mine_activity[4] = mine_activity[4] + 2
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    l()
                    two_Layers_dig()
                    mf()
                    digd()
                    l()
                    mine_twoLayers()
                end
            end
        elseif mine_activity[1] % 2 == 1 then
            --current_function_save(""mine_twoLayers_1_1"")
            if direction == 0 then
                current_function_save(""mine_twoLayers_1_1_0"")
                while position[3] < mine_activity[3] do
                    two_Layers_dig()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    digd()
                    mine_activity[4] = mine_activity[4] + 2
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    r()
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                end
            elseif direction == 2 then
                current_function_save(""mine_twoLayers_1_1_2"")
                while position[3] > 1 do
                    two_Layers_dig()
                    mf()
                end
                l()
                two_Layers_dig()
                mf()
                digd()
                l()
                mine_twoLayers()
            end
        end
    end
end

function mine_threeLayers()
    --current_function_save(""mine_threeLayers"")
    if position[2] % 2 == 0 then
        if mine_activity[1] % 2 == 0 then
            --current_function_save(""mine_threeLayers_0_0"")
            if direction == 0 then
                current_function_save(""mine_threeLayers_0_0_0"")
                while position[3] < mine_activity[3] do
                    break_three_blocks()
                    mf()
                end
                r()
                break_three_blocks()
                mf()
                r()
                mine_threeLayers()
            elseif direction == 2 then
                current_function_save(""mine_threeLayers_0_0_2"")
                while position[3] > 1 do
                    break_three_blocks()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    break_two_blocks()
                    mine_activity[4] = mine_activity[4] + 3
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    l()
                    break_three_blocks()
                    mf()
                    l()
                    mine_threeLayers()
                end
            end
        elseif mine_activity[1] % 2 == 1 then
            --current_function_save(""mine_threeLayers_0_1"")
            if direction == 0 then
                current_function_save(""mine_threeLayers_0_1_0"")
                while position[3] < mine_activity[3] do
                    break_three_blocks()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    break_two_blocks()
                    mine_activity[4] = mine_activity[4] + 3
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    r()
                    break_three_blocks()
                    mf()
                    r()
                    mine_threeLayers()
                end
            elseif direction == 2 then
                current_function_save(""mine_threeLayers_0_1_2"")
                while position[3] > 1 do
                    break_three_blocks()
                    mf()
                end
                l()
                break_three_blocks()
                mf()
                l()
                mine_threeLayers()
            end
        end
    elseif  position[2] % 2 == 1 then
        if mine_activity[1] % 2 == 0 then
            --current_function_save(""mine_threeLayers_1_0"")
            if direction == 0 then
                current_function_save(""mine_threeLayers_1_0_0"")
                while position[3] < mine_activity[3] do
                    break_three_blocks()
                    mf()
                end
                l()
                break_three_blocks()
                mf()
                l()
                mine_threeLayers()
            elseif direction == 2 then
                current_function_save(""mine_threeLayers_1_0_2"")
                while position[3] > 1 do
                    break_three_blocks()
                    mf()
                end
                if position[1] == 0 then
                    break_two_blocks()
                    mine_activity[4] = mine_activity[4] + 3
                    backup()
                elseif position[1] > 0 then
                    r()
                    break_three_blocks()
                    mf()
                    r()
                    mine_threeLayers()
                end
            end
        elseif mine_activity[1] % 2 == 1 then
            --current_function_save(""mine_threeLayers_1_1"")
            if direction == 2 then
                current_function_save(""mine_threeLayers_1_1_2"")
                while position[3] > 1 do
                    break_three_blocks()
                    mf()
                end
                if position[1] == 0 then
                    break_two_blocks()
                    mine_activity[4] = mine_activity[4] + 3
                    backup()
                elseif position[1] > 0 then
                    r()
                    break_three_blocks()
                    mf()
                    r()
                    mine_threeLayers()
                end
            elseif direction == 0 then
                current_function_save(""mine_threeLayers_1_1_0"")
                while position[3] < mine_activity[3] do
                    break_three_blocks()
                    mf()
                end
                l()
                break_three_blocks()
                mf()
                l()
                mine_threeLayers()
            end
        end
    end
end

----------------------------------------------------------------------------------------------
-----------------------------------    backtrack      ----------------------------------------
----------------------------------------------------------------------------------------------
-- usage: chunks unloading if you are too far away->reading data to move on with the programm
function backtrack()
    term.clear()
    read_backup(""excavate_backup"")
    if not (dummy_current_function == """") then
        backup_found = true
        if dummy_current_function == ""going_back_var_load"" then
            back_to_chest()
            goto_pos()
        elseif dummy_current_function == ""going_back_y"" then
            while dummy_position[2] < 0 do
                mu_dummy()
            end
            if (dummy_direction == 0) then
                l_dummy()
            elseif (dummy_direction == 1) then
                r_dummy()
                r_dummy()
            elseif (dummy_direction == 2) then
                r_dummy()
            end
            dummy_current_function_save(""going_back_x"")
            while dummy_position[1] > 0 do
                mf_dummy()
            end
            if (dummy_direction == 3) then
                l_dummy()
            end
            dummy_current_function_save(""going_back_z"")
            while dummy_position[3] > 0 do
                mf_dummy()
            end
            dummy_current_function_save(""extract_items"")
            extract()
            dummy_current_function_save(""extracted_all_items"")
            goto_pos()
        elseif dummy_current_function == ""going_back_x"" then
            while dummy_position[1] > 0 do
                mf_dummy()
            end
            if (dummy_direction == 3) then
                l_dummy()
            end
            dummy_current_function_save(""going_back_z"")
            while dummy_position[3] > 0 do
                mf_dummy()
            end
            dummy_current_function_save(""extract_items"")
            extract()
            dummy_current_function_save(""extracted_all_items"")
            goto_pos()
        elseif dummy_current_function == ""going_back_z"" then
            while dummy_position[3] > 0 do
                mf_dummy()
            end
            dummy_current_function_save(""extract_items"")
            extract()
            dummy_current_function_save(""extracted_all_items"")
            goto_pos()
        elseif dummy_current_function == ""extract_items"" then
            extract()
            dummy_current_function_save(""extracted_all_items"")
            goto_pos()
        elseif dummy_current_function == ""extracted_all_items"" then
            goto_pos()
        elseif dummy_current_function == ""turning_towards_excavate"" then
            if dummy_direction == 2 then
                r_dummy()
            end
            if dummy_direction == 3 then
                r_dummy()
            end
            dummy_current_function_save(""goto_z"")
            while dummy_position[3] < position[3] do
                mf_dummy()
            end
            if (dummy_direction == 1) then
                r_dummy()
            end
            dummy_current_function_save(""goto_x"")
            while dummy_position[1] < position[1] do
                mf_dummy()
            end
            dummy_current_function_save(""goto_y"")
            while position[2] < dummy_position[2] do
                md_dummy()
            end
            if direction == 0 then
                l_dummy()
            elseif direction == 2 then
                r_dummy()
            elseif direction == 3 then
                r_dummy()
                r_dummy()
            end
            reset_dummy()
        elseif dummy_current_function == ""goto_z"" then
            while dummy_position[3] < position[3] do
                mf_dummy()
            end
            if (dummy_direction == 1) then
                r_dummy()
            end
            dummy_current_function_save(""goto_x"")
            while dummy_position[1] < position[1] do
                mf_dummy()
            end
            dummy_current_function_save(""goto_y"")
            while position[2] < dummy_position[2] do
                md_dummy()
            end
            if direction == 0 then
                l_dummy()
            elseif direction == 2 then
                r_dummy()
            elseif direction == 3 then
                r_dummy()
                r_dummy()
            end
            reset_dummy()
        elseif dummy_current_function == ""goto_x"" then
            while dummy_position[1] < position[1] do
                mf_dummy()
            end
            dummy_current_function_save(""goto_y"")
            while position[2] < dummy_position[2] do
                md_dummy()
            end
            if direction == 0 then
                l_dummy()
            elseif direction == 2 then
                r_dummy()
            elseif direction == 3 then
                r_dummy()
                r_dummy()
            end
            reset_dummy()
        elseif dummy_current_function == ""goto_y"" then
            while position[2] < dummy_position[2] do
                md_dummy()
            end
            if direction == 0 then
                l_dummy()
            elseif direction == 2 then
                r_dummy()
            elseif direction == 3 then
                r_dummy()
                r_dummy()
            end
            reset_dummy()
        end
        backtrack()
    elseif not (current_function == """") then
        backup_found = true
        if current_function == ""ready_position"" then
            main()
        elseif current_function == ""rotation_r_one"" then
            if (direction == 0) or (direction == 2) then
                r()
                backup_rotation = true
                backup()
                os.sleep(0.5)
            end
            if (direction == 1) or (direction == 3) then
                current_function_save(""rotation_r_two"")
                r()
                backup_rotation = true
                backup()
                os.sleep(0.5)
            end
            main()
        elseif current_function == ""rotation_r_two"" then
            if (direction == 1) or (direction == 3) then
                r()
                backup_rotation = true
                backup()
                os.sleep(0.5)
            elseif (direction == 0) or (direction == 2) then
                backup_rotation = true
                backup()
            end

            main()
        elseif current_function == ""mine_threeLayers_0_0_0"" then
            if (position[2] %3 == 1) then
                if direction == 0 then
                    while position[3] < mine_activity[3] do
                        break_three_blocks()
                        mf()
                    end
                    r()
                    break_three_blocks()
                    mf()
                    r()
                    mine_threeLayers()
                elseif direction == 1 then
                    if position[1] % 2 == 0 then
                        break_three_blocks()
                        mf()
                        r()
                        mine_threeLayers()
                    elseif position[1] % 2 == 1 then
                        r()
                        mine_threeLayers()
                    end
                end
                if (position[2] %3 == 1) then
                    md()
                end
            end
            main()
        elseif current_function == ""mine_threeLayers_0_0_2"" then
            if (position[2] %3 == 1) then
                if direction == 2 then
                    while position[3] > 1 do
                        break_three_blocks()
                        mf()
                    end
                    if position[1] == mine_activity[1]-1 then
                        break_two_blocks()
                        mine_activity[4] = mine_activity[4] + 3
                        backup()
                    elseif position[1] < mine_activity[1]-1 then
                        l()
                        break_three_blocks()
                        mf()
                        l()
                        mine_threeLayers()
                    end
                elseif direction == 1 then
                    if position[1] % 2 == 1 then
                        break_three_blocks()
                        mf()
                        l()
                        mine_threeLayers()
                    elseif position[1] % 2 == 0 then
                        l()
                        mine_threeLayers()
                    end
                end 
    
                if (position[2] %3 == 1) then
                    md()
                end
            end
            
            main()
        elseif current_function == ""mine_threeLayers_0_1_0"" then
            if (position[2] %3 == 1) then
                if direction == 0 then
                    while position[3] < mine_activity[3] do
                        break_three_blocks()
                        mf()
                    end
                    if position[1] == mine_activity[1]-1 then
                        break_two_blocks()
                        mine_activity[4] = mine_activity[4] + 3
                        backup()
                    elseif position[1] < mine_activity[1]-1 then
                        r()
                        break_three_blocks()
                        mf()
                        r()
                        mine_threeLayers()
                    end
                elseif direction == 1 then
                    if position[1] % 2 == 0 then
                        break_three_blocks()
                        mf()
                        r()
                        mine_threeLayers()
                    elseif position[1] % 2 == 1 then
                        r()
                        mine_threeLayers()
                    end
                end
                if (position[2] %3 == 1) then
                    md()
                end
            end
            main()
        elseif current_function == ""mine_threeLayers_0_1_2"" then
            if (position[2] %3 == 1) then
                if direction == 2 then 
                    while position[3] > 1 do
                        break_three_blocks()
                        mf()
                    end
                    l()
                    break_three_blocks()
                    mf()
                    l()
                    mine_threeLayers()
                elseif direction == 1 then 
                    if position[1] % 2 == 1 then
                        break_three_blocks()
                        mf()
                        l()
                        mine_threeLayers()
                    elseif position[1] % 2 == 0 then
                        l()
                        mine_threeLayers()
                    end
                end
                if (position[2] %3 == 1) then
                    md()
                end
            end
            main()
        elseif current_function == ""mine_threeLayers_1_0_0"" then
            if (position[2] %3 == 1) then
                if direction == 0 then
                    while position[3] < mine_activity[3] do
                        break_three_blocks()
                        mf()
                    end
                    l()
                    break_three_blocks()
                    mf()
                    l()
                    mine_threeLayers()
                elseif direction == 3 then
                    if position[1] % 2 == 1 then
                        break_three_blocks()
                        mf()
                        l()
                        mine_threeLayers()
                    elseif position[1] % 2 == 0 then
                        l()
                        mine_threeLayers()
                    end
                end
                if (position[2] %3 == 1) then
                    md()
                end
            end
            main()
        elseif current_function == ""mine_threeLayers_1_0_2"" then
            if (position[2] %3 == 1) then
                if direction == 2 then
                    while position[3] > 1 do
                        break_three_blocks()
                        mf()
                    end
                    if position[1] == 0 then
                        break_two_blocks()
                        mine_activity[4] = mine_activity[4] + 3
                        backup()
                    elseif position[1] > 0 then
                        r()
                        break_three_blocks()
                        mf()
                        r()
                        mine_threeLayers()
                    end
                elseif direction == 3 then
                    if position[1] % 2 == 0 then
                        break_three_blocks()
                        mf()
                        r()
                        mine_threeLayers()
                    elseif position[1] % 2 == 1 then
                        r()
                        mine_threeLayers()
                    end
                end
                if (position[2] %3 == 1) then
                    md()
                end
            end
            main()
        elseif current_function == ""mine_threeLayers_1_1_2"" then
            if (position[2] %3 == 1) then
                if direction == 2 then
                    while position[3] > 1 do
                        break_three_blocks()
                        mf()
                    end
                    if position[1] == 0 then
                        break_two_blocks()
                        mine_activity[4] = mine_activity[4] + 3
                        backup()
                    elseif position[1] > 0 then
                        r()
                        break_three_blocks()
                        mf()
                        r()
                        mine_threeLayers()
                    end
                elseif direction == 3 then
                    if position[1] % 2 == 0 then
                        break_three_blocks()
                        mf()
                        r()
                        mine_threeLayers()
                    elseif position[1] % 2 == 1 then
                        r()
                        mine_threeLayers()
                    end
                end
                if (position[2] %3 == 1) then
                    md()
                end
            end
            main()
        elseif current_function == ""mine_threeLayers_1_1_0"" then
            if (position[2] %3 == 1) then
                if direction == 0 then
                    while position[3] < mine_activity[3] do
                        break_three_blocks()
                        mf()
                    end
                    l()
                    break_three_blocks()
                    mf()
                    l()
                    mine_threeLayers()
                elseif direction == 3 then
                    if position[1] % 2 == 0 then
                        l()
                        mine_threeLayers()
                    elseif position[1] % 2 == 1 then
                        break_three_blocks()
                        mf()
                        l()
                        mine_threeLayers()
                    end
                end
                if (position[2] %3 == 1) then
                    md()
                end
            end
            main()
        elseif current_function == ""mine_twoLayers_0_0_0"" then
            if direction == 0 then
                while position[3] < mine_activity[3] do
                    two_Layers_dig()
                    mf()
                end
                l()
                two_Layers_dig()
                mf()
                digd()
                l()
                mine_twoLayers()
            elseif direction == 3 then
                if position[1] % 2 == 0 then
                    digd()
                    l()
                    mine_twoLayers()
                elseif position[1] % 2 == 1 then
                    two_Layers_dig()
                    mf()
                    digd()
                    l()
                    mine_twoLayers()
                end
            end
            main()
        elseif current_function == ""mine_twoLayers_0_0_2"" then
            if direction == 2 then
                while position[3] > 1 do
                    two_Layers_dig()
                    mf()
                end
                if position[1] == 0 then
                    digd()
                    mine_activity[4] = mine_activity[4] + 2
                    backup()
                elseif position[1] > 0 then
                    r()
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                end
            elseif direction == 3 then
                if position[1] % 2 == 0 then
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                elseif position[1] % 2 == 1 then
                    digd()
                    r()
                    mine_twoLayers()
                end
            end
            main()
        elseif current_function == ""mine_twoLayers_0_1_2"" then
            if direction == 2 then
                while position[3] > 1 do
                    two_Layers_dig()
                    mf()
                end
                if position[1] == 0 then
                    digd()
                    mine_activity[4] = mine_activity[4] + 2
                    backup()
                elseif position[1] > 0 then
                    r()
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                end
            elseif direction == 3 then
                if position[1] % 2 == 0 then
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                elseif position[1] % 2 == 1 then
                    digd()
                    r()
                    mine_twoLayers()
                end
            end
            main()
        elseif current_function == ""mine_twoLayers_0_1_0"" then
            if direction == 0 then
                while position[3] < mine_activity[3] do
                    two_Layers_dig()
                    mf()
                end
                l()
                two_Layers_dig()
                mf()
                digd()
                l()
                mine_twoLayers()
            elseif direction == 3 then
                if position[1] % 2 == 0 then
                    digd()
                    l()
                    mine_twoLayers()
                elseif position[1] % 2 == 1 then
                    two_Layers_dig()
                    mf()
                    digd()
                    l()
                    mine_twoLayers()
                end
            end
            main()
        elseif current_function == ""mine_twoLayers_1_0_0"" then
            if direction == 0 then
                while position[3] < mine_activity[3] do
                    two_Layers_dig()
                    mf()
                end
                r()
                two_Layers_dig()
                mf()
                digd()
                r()
                mine_twoLayers()
            elseif direction == 1 then
                if position[1] % 2 == 0 then
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                elseif position[1] % 2 == 1 then
                    digd()
                    r()
                    mine_twoLayers()
                end
            end
            main()
        elseif current_function == ""mine_twoLayers_1_0_2"" then
            if direction == 2 then
                while position[3] > 1 do
                    two_Layers_dig()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    digd()
                    mine_activity[4] = mine_activity[4] + 2
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    l()
                    two_Layers_dig()
                    mf()
                    digd()
                    l()
                    mine_twoLayers()
                end
            elseif direction == 1 then
                if position[1] % 2 == 0 then
                    digd()
                    l()
                    mine_twoLayers()
                elseif position[1] % 2 == 1 then
                    two_Layers_dig()
                    mf()
                    digd()
                    l()
                    mine_twoLayers()
                end
            end
            main()
        elseif current_function == ""mine_twoLayers_1_1_0"" then
            if direction == 0 then
                while position[3] < mine_activity[3] do
                    two_Layers_dig()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    digd()
                    mine_activity[4] = mine_activity[4] + 2
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    r()
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                end
            elseif direction == 1 then
                if position[1] % 2 == 0 then
                    two_Layers_dig()
                    mf()
                    digd()
                    r()
                    mine_twoLayers()
                elseif position[1] % 2 == 1 then
                    digd()
                    r()
                    mine_twoLayers()
                end
            end
            main()
        elseif current_function == ""mine_twoLayers_1_1_2"" then
            if direction == 2 then
                while position[3] > 1 do
                    two_Layers_dig()
                    mf()
                end
                l()
                two_Layers_dig()
                mf()
                digd()
                l()
                mine_twoLayers()
            elseif direction == 1 then
                if position[1] % 2 == 0 then
                    digd()
                    l()
                    mine_twoLayers()
                elseif position[1] % 2 == 1 then
                    two_Layers_dig()
                    mf()
                    digd()
                    l()
                    mine_twoLayers()
                end
            end
            main()
        elseif current_function == ""mine_oneLayer_0_0_0"" then
            if direction == 0 then
                while position[3] < mine_activity[3] do
                    dig()
                    mf()
                end
                l()
                dig()
                mf()
                l()
                mine_oneLayer()
            elseif direction == 3 then
                if position[1] % 2 == 0 then
                    l()
                    mine_oneLayer()
                elseif position[1] % 2 == 1 then
                    dig()
                    mf()
                    l()
                    mine_oneLayer()
                end
            end
            main()
        elseif current_function == ""mine_oneLayer_0_0_2"" then
            if direction == 2 then
                while position[3] > 1 do
                    dig()
                    mf()
                end
                if position[1] == 0 then
                    mine_activity[4] = mine_activity[4] + 1
                    backup()
                elseif position[1] > 0 then
                    r()
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                end
            elseif direction == 3 then
                if position[1] % 2 == 0 then
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                elseif position[1] % 2 == 1 then
                    r()
                    mine_oneLayer()
                end
            end
            main()
        elseif current_function == ""mine_oneLayer_0_1_2"" then
            if direction == 2 then
                while position[3] > 1 do
                    dig()
                    mf()
                end
                if position[1] == 0 then
                    mine_activity[4] = mine_activity[4] + 1
                    backup()
                elseif position[1] > 0 then
                    r()
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                end
            elseif direction == 3 then
                if position[1] % 2 == 0 then
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                elseif position[1] % 2 == 1 then
                    r()
                    mine_oneLayer()
                end
            end
            main()
        elseif current_function == ""mine_oneLayer_0_1_0"" then
            if direction == 0 then
                while position[3] < mine_activity[3] do
                    dig()
                    mf()
                end
                l()
                dig()
                mf()
                l()
                mine_oneLayer()
            elseif direction == 3 then
                if position[1] % 2 == 0 then
                    l()
                    mine_oneLayer()
                elseif position[1] % 2 == 1 then
                    dig()
                    mf()
                    l()
                    mine_oneLayer()
                end
            end
            main()
        elseif current_function == ""mine_oneLayer_1_0_0"" then
            if direction == 0 then
                while position[3] < mine_activity[3] do
                    dig()
                    mf()
                end
                r()
                dig()
                mf()
                r()
                mine_oneLayer()
            elseif direction == 1 then
                if position[1] % 2 == 0 then
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                elseif position[1] % 2 == 1 then
                    r()
                    mine_oneLayer()
                end
            end
            main()
        elseif current_function == ""mine_oneLayer_1_0_2"" then
            if direction == 2 then
                while position[3] > 1 do
                    dig()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    mine_activity[4] = mine_activity[4] + 1
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    l()
                    dig()
                    mf()
                    l()
                    mine_oneLayer()
                end
            elseif direction == 1 then
                if position[1] % 2 == 0 then
                    l()
                    mine_oneLayer()
                elseif position[1] % 2 == 1 then
                    dig()
                    mf()
                    l()
                    mine_oneLayer()
                end
            end
            main()
        elseif current_function == ""mine_oneLayer_1_1_0"" then
            if direction == 0 then
                while position[3] < mine_activity[3] do
                    dig()
                    mf()
                end
                if position[1] == mine_activity[1]-1 then
                    mine_activity[4] = mine_activity[4] + 1
                    backup()
                elseif position[1] < mine_activity[1]-1 then
                    r()
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                end
            elseif direction == 1 then
                if position[1] % 2 == 0 then
                    dig()
                    mf()
                    r()
                    mine_oneLayer()
                elseif position[1] % 2 == 1 then
                    r()
                    mine_oneLayer()
                end
            end
            main()
        elseif current_function == ""mine_oneLayer_1_1_2"" then
            if direction == 2 then
                while position[3] > 1 do
                    dig()
                    mf()
                end
                l()
                dig()
                mf()
                l()
                mine_oneLayer()
            elseif direction == 1 then
                if position[1] % 2 == 0 then
                    l()
                    mine_oneLayer()
                elseif position[1] % 2 == 1 then
                    dig()
                    mf()
                    l()
                    mine_oneLayer()
                end
            end
            main()
        elseif current_function == ""finished_layers_backtrack_unload_items"" then
            while position[2] < 0 do
                mu()
            end
            if (direction == 0) then
                l()
            elseif (direction == 1) then
                r()
                r()
            elseif (direction == 2) then
                r()
            end
            while position[1] > 0 do
                mf()
            end
            l()
            while position[3] > 0 do
                mf()
            end
            current_function_save(""final_extract"")
            extract()
            current_function_save(""finished"")
            r()
            r()
            term.clear()
            endTime, endDay = getTimeTicks()
            term.setCursorPos(1,1)
            print(""Done mining."")
            displayTimeneeded(startTime,startDay,endTime,endDay)
            term.setCursorPos(1,3)
            print(""Mined Area: ""..tostring(mine_activity[1]).. ""x""..tostring(mine_activity[3])..""  (width x length)"")
            print(""Mined Layers: ""..tostring(mine_activity[4]))
            reset_all()
            term.setCursorPos(1,5)
        elseif current_function == ""final_extract"" then
            extract()
            current_function_save(""finished"")
            r()
            r()
            term.clear()
            endTime, endDay = getTimeTicks()
            term.setCursorPos(1,1)
            print(""Done mining."")
            displayTimeneeded(startTime,startDay,endTime,endDay)
            term.setCursorPos(1,3)
            print(""Mined Area: ""..tostring(mine_activity[1]).. ""x""..tostring(mine_activity[3])..""  (width x length)"")
            print(""Mined Layers: ""..tostring(mine_activity[4]))
            reset_all()
            term.setCursorPos(1,5)
        elseif current_function == ""final_extract"" then
            r()
            r()
            term.clear()
            endTime, endDay = getTimeTicks()
            term.setCursorPos(1,1)
            print(""Done mining."")
            displayTimeneeded(startTime,startDay,endTime,endDay)
            term.setCursorPos(1,3)
            print(""Mined Area: ""..tostring(mine_activity[1]).. ""x""..tostring(mine_activity[3])..""  (width x length)"")
            print(""Mined Layers: ""..tostring(mine_activity[4]))
            reset_all()
            term.setCursorPos(1,5)
        end
    end
end


function back_to_chest()
    if not (current_function == ""finished_layers_backtrack_unload_items"") and not (current_function == ""final_extract"") and not (current_function == ""finished"") then
        dummy_current_function_save(""going_back_var_load"")
        dummy_direction = direction
        for i= 1, 3  do
            dummy_position[i] = position[i]
        end
        backup()
        dummy_current_function_save(""going_back_y"")
        while dummy_position[2] < 0 do
            mu_dummy()
        end
        if (dummy_direction == 0) then
            l_dummy()
        elseif (dummy_direction == 1) then
            r_dummy()
            r_dummy()
        elseif (dummy_direction == 2) then
            r_dummy()
        end
        dummy_current_function_save(""going_back_x"")
        while dummy_position[1] > 0 do
            mf_dummy()
        end
        if (dummy_direction == 3) then
            l_dummy()
        end
        dummy_current_function_save(""going_back_z"")
        while dummy_position[3] > 0 do
            mf_dummy()
        end
        dummy_current_function_save(""extract_items"")
        extract()
        dummy_current_function_save(""extracted_all_items"")
    end
end

function goto_pos()
    if not (current_function == ""finished_layers_backtrack_unload_items"") and not (current_function == ""final_extract"") and not (current_function == ""finished"") then
        dummy_current_function_save(""turning_towards_excavate"")
        if dummy_direction == 2 then
            r_dummy()
        end
        if dummy_direction == 3 then
            r_dummy()
        end
        dummy_current_function_save(""goto_z"")
        while dummy_position[3] < position[3] do
            mf_dummy()
        end
        if (dummy_direction == 1) then
            r_dummy()
        end
        dummy_current_function_save(""goto_x"")
        while dummy_position[1] < position[1] do
            mf_dummy()
        end
        dummy_current_function_save(""goto_y"")
        while position[2] < dummy_position[2] do
            md_dummy()
        end
        if direction == 0 then
            l_dummy()
        elseif direction == 2 then
            r_dummy()
        elseif direction == 3 then
            r_dummy()
            r_dummy()
        end
        reset_dummy()
    end
end

-- TODO go back to chest if its full and goto previous pos
-- backup_loader


function main()
    if not backup_found then
        startup()
        dig()
        mf()
        term.clear()
        backup()
    end
    current_function_save(""ready_position"")
    if startTime == 0 and startDay == 0 then
        startTime,startDay = getTimeTicks()
    end
    while mine_activity[4] < mine_activity[2] do
        local remainingdepth = mine_activity[2]-mine_activity[4]
        if (remainingdepth >= 3) then
            if not backup_rotation then
                if not (mine_activity[4] == 0) then
                    current_function_save(""rotation_r_one"")
                    r()
                    current_function_save(""rotation_r_two"")
                    r()
                end
            end
            current_function_save(""mine_threeLayers"")
            backup_rotation = false
            digd()
            md()
            digd()
            md()
            mine_threeLayers()
            md()
        elseif (remainingdepth == 2) then
            if not backup_rotation then
                if not (mine_activity[4] == 0) then
                    current_function_save(""rotation_r_one"")
                    r()
                    current_function_save(""rotation_r_two"")
                    r()
                end
            end
            current_function_save(""mine_twoLayers"")
            backup_rotation = false
            digd()
            md()
            mine_twoLayers()
        elseif (remainingdepth == 1) then
            if not backup_rotation then
                if not (mine_activity[4] == 0) then
                    current_function_save(""rotation_r_one"")
                    r()
                    current_function_save(""rotation_r_two"")
                    r()
                end
            end
            current_function_save(""mine_oneLayer"")
            backup_rotation = false
            digd()
            md()
            mine_oneLayer()
        end
    end
    current_function_save(""finished_layers_backtrack_unload_items"")
    while position[2] < 0 do
        mu()
    end
    if (direction == 0) then
        l()
    elseif (direction == 1) then
        r()
        r()
    elseif (direction == 2) then
        r()
    end
    while position[1] > 0 do
        mf()
    end
    l()
    while position[3] > 0 do
        mf()
    end
    current_function_save(""final_extract"")
    extract()
    current_function_save(""finished"")
    r()
    r()
    term.clear()
    endTime, endDay = getTimeTicks()
    term.setCursorPos(1,1)
    print(""Done mining."")
    displayTimeneeded(startTime,startDay,endTime,endDay)
    term.setCursorPos(1,3)
    print(""Mined Area: ""..tostring(mine_activity[1]).. ""x""..tostring(mine_activity[3])..""  (width x length)"")
    print(""Mined Layers: ""..tostring(mine_activity[4]))
    reset_all()
    term.setCursorPos(1,5)
end

backtrack()
if not backup_found then
    main()
end
"
uT4qJ8ae,Untitled,samipote,JavaScript,Saturday 26th of August 2023 03:32:31 PM CDT,"// Import required modules
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');

// Use middleware functions
app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors({ origin: '*', methods: ['GET', 'PUT', 'DELETE', 'OPTIONS'], allowedHeaders: ['x-vsaas-session', 'x-no-redirect', 'origin', 'authorization', 'x-real-ip', 'accept', 'range'] })); // Enable CORS
app.use(methodOverride('_method')); // Enable method override
app.use(express.static(path.join(__dirname, 'public'))); // Serve static files from the public directory

// Connect to MongoDB
const connectionString = 'mongodb://localhost:27017/streaming'; // Replace with your MongoDB connection string
mongoose.connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a schema and a model for Game
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});
const Game = mongoose.model('Game', gameSchema);

// A function that returns a modified URL for .ts and .wbp files
function getSegmentURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'segment/' + targetURL.replace(/^https:\/\//, ''); // Use regex to only remove the protocol at the beginning of the URL
}

// A function that returns a modified URL for .m3u8 files
function getPlaylistURL(targetURL) {
  const baseURL = getBaseURL();
  // Get the base path of the target URL
  const basePath = new URL(targetURL).origin + new URL(targetURL).pathname;
  return baseURL + 'proxy/' + targetURL.replace(/^https:\/\//, '') + '?base=' + encodeURIComponent(basePath); // Use regex to only remove the protocol at the beginning of the URL and add a query parameter for the base path
}

// A function that returns the base URL of the app
function getBaseURL() {
  return `http://${app.get('host')}/`;
}

// Improved header handling for proxy requests
function setProxyHeaders(originalReq, targetURL) {
  const headers = {
    'host': new URL(targetURL).host,
    'user-agent': originalReq.headers['user-agent'] || 'Mozilla/5.0',
    'referer': new URL(targetURL).origin
  };
  if (originalReq.headers['accept-encoding']) {
    headers['accept-encoding'] = originalReq.headers['accept-encoding'];
  }
  return headers;
}

async function handleM3U8Request(req, res, targetURL) {
    const proxyRequestOptions = {
        url: targetURL,
        headers: setProxyHeaders(req, targetURL),
        strictSSL: false,
        encoding: null // Use null encoding to get a buffer instead of a string
    };

    request(proxyRequestOptions, (error, response, body) => {
        if (error) {
            console.error('Failed to fetch m3u8:', error.message);
            return res.status(500).send('Proxy Error');
        }
        let m3u8Content = body.toString('utf8'); // Specify utf8 encoding to convert the buffer to a string

        m3u8Content = m3u8Content.split('\n').map(line => {
            // Extract the default base path from the target URL
            const defaultBasePath = new URL(targetURL).origin + new URL(targetURL).pathname.substring(0, new URL(targetURL).pathname.lastIndexOf(""/"") + 1);
            const basePath = req.query.base || defaultBasePath;

            if (line.endsWith('.ts') || line.endsWith('.wbp') || line.endsWith('.m3u8')) {
                // If the line starts with 'http' or is absolute, use it directly, otherwise resolve with the base path
                const absoluteURL = line.startsWith('http') ? line : new URL(line, basePath).href;

                if (line.endsWith('.ts') || line.endsWith('.wbp')) {
                    return getSegmentURL(absoluteURL);
                } else if (line.endsWith('.m3u8')) {
                    return getPlaylistURL(absoluteURL);
                }
            }

            return line;
        }).join('\n');

        res.setHeader('Content-Type', 'application/x-mpegURL');
        res.setHeader('Access-Control-Allow-Origin', '*');
        res.send(m3u8Content);
    });
}


// A function that handles proxy requests for other files (.ts and .wbp)
function handleOtherRequest(req, res, targetURL) {
  // Create a proxyRequestOptions object with the headers copied from the original request
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL), // Copy all headers from original request
    strictSSL: false, // This is not recommended for production, use it for debugging purposes
		encoding: null
  };

  const proxyRequest = request(proxyRequestOptions);
  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });
    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else if (extname === '.wbp') {
        res.setHeader('Content-Type', 'video/webm'); // Assume webm format for .wbp files
      } else {
        res.setHeader('Content-Type', 'application/x-mpegURL');
      }
    }
    res.setHeader('Access-Control-Allow-Origin', '*');
    sourceResponse.pipe(res);
  });
  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });
  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });
  req.pipe(restream()).pipe(proxyRequest);
}

// A route for handling proxy requests
app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/proxy/', 'https://') + search;

  // Check if the request is for an m3u8 file
  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    handleM3U8Request(req, res, targetURL);
    return;
  }

  // Handle other requests
  handleOtherRequest(req, res, targetURL);
});

// A route for handling segment requests
app.use('/segment/*', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  console.log(`Received request for URL: ${fullURL}`);
  
  // Capture the segment path from the wildcard
  const segmentPath = req.params[0];

  // Construct the targetURL with the captured segment path
  const targetURL = 'https://' + segmentPath;

  // Handle the request
  handleOtherRequest(req, res, targetURL);
});

// A route for serving the main page
app.get('/', (req, res) => {
  res.render('main.ejs');
});

// A route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for updating a game
app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));
"
ig8fGkRe,Untitled,samipote,JavaScript,Saturday 26th of August 2023 03:13:09 PM CDT,"// Import required modules
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');

// Use middleware functions
app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors({
  origin: '*',
  methods: ['GET', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['x-vsaas-session', 'x-no-redirect', 'origin', 'authorization', 'x-real-ip', 'accept', 'range']
})); // Enable CORS
app.use(methodOverride('_method')); // Enable method override
app.use(express.static(path.join(__dirname, 'public'))); // Serve static files from the public directory

// Connect to MongoDB
const connectionString = 'mongodb://localhost:27017/streaming'; // Replace with your MongoDB connection string
mongoose.connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });

// Define a schema and a model for Game
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});
const Game = mongoose.model('Game', gameSchema);

// A function that returns a modified URL for .ts and .wbp files
function getSegmentURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'segment/' + targetURL.replace('https://', '');
}

// A function that returns a modified URL for .m3u8 files
function getPlaylistURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'proxy/' + targetURL.replace('https://', '');
}

// A function that returns the base URL of the app
function getBaseURL() {
  return `http://${app.get('host')}/`;
}

// Improved header handling for proxy requests
function setProxyHeaders(originalReq, targetURL) {
    const headers = {
        'host': new URL(targetURL).host,
        'user-agent': originalReq.headers['user-agent'] || 'Mozilla/5.0',
        'referer': new URL(targetURL).origin
    };
    
    if (originalReq.headers['accept-encoding']) {
        headers['accept-encoding'] = originalReq.headers['accept-encoding'];
    }

    return headers;
}
// A function that handles proxy requests for .m3u8 files
async function handleM3U8Request(req, res, targetURL) {
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL),
    strictSSL: false,
    encoding: null
  };

  // Ensure headers are correctly set
  proxyRequestOptions.headers.host = new URL(targetURL).host;
  proxyRequestOptions.headers['user-agent'] = req.headers['user-agent'] || 'Mozilla/5.0'; // added a default user-agent in case none is provided
  proxyRequestOptions.headers.referer = new URL(targetURL).origin;

  request(proxyRequestOptions, (error, response, body) => {
    if (error) {
      console.error('Failed to fetch m3u8:', error.message);
      return res.status(500).send('Proxy Error');
    }
    let m3u8Content = body.toString();

    // Modify the .ts and .wbp URLs in the m3u8 content
    m3u8Content = m3u8Content.split('\n').map(line => {
      if (line.endsWith('.ts') || line.endsWith('.wbp')) {
        if (line.startsWith('http')) {
          return getSegmentURL(line);
        } else {
          const basePath = new URL(targetURL).href;
          return getSegmentURL(new URL(line, basePath).href);
        }
      } else if (line.endsWith('.m3u8')) {
        if (line.startsWith('http')) {
          return getPlaylistURL(line);
        } else {
          const basePath = new URL(targetURL).href;
          return getPlaylistURL(new URL(line, basePath).href);
        }
      } else if (line.startsWith('#EXT-X-KEY')) {
        const keyFileRegex = /URI=""(.+?)""/;
        const keyFileMatch = line.match(keyFileRegex);
        if (keyFileMatch) {
          const keyFileURL = keyFileMatch[1];
          const keyFileParamsRegex = /\?(.+)/;
          const keyFileParamsMatch = keyFileURL.match(keyFileParamsRegex);
          if (keyFileParamsMatch) {
            const keyFileParams = keyFileParamsMatch[1];
            return line.replace(keyFileRegex, `URI=""${getPlaylistURL(new URL(keyFileURL, new URL(targetURL).href).href)}?${keyFileParams}""`);
          } else {
            return line.replace(keyFileRegex, `URI=""${getPlaylistURL(new URL(keyFileURL, new URL(targetURL).href).href)}""`);
          }
        } else {
          return line;
        }
      } else {
        return line;
      }
    }).join('\n');

    res.setHeader('Content-Type', 'application/x-mpegURL');
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.send(m3u8Content);
  });
}


// A function that handles proxy requests for other files (.ts and .wbp)
function handleOtherRequest(req, res, targetURL) {
  // Create a proxyRequestOptions object with the headers copied from the original request
  const proxyRequestOptions = {
    url: targetURL,
    headers: setProxyHeaders(req, targetURL), // Copy all headers from original request
    strictSSL: false // This is not recommended for production, use it for debugging purposes
  };

  // Set the host header to match the target URL's host
  proxyRequestOptions.headers.host = new URL(targetURL).host;

  // Add the user-agent header to match the original request's user-agent
  proxyRequestOptions.headers['user-agent'] = req.headers['user-agent'];

  // Add the referer header to match the original stream link's domain
  proxyRequestOptions.headers.referer = new URL(targetURL).origin;

  const proxyRequest = request(proxyRequestOptions);

  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });

    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else if (extname === '.wbp') {
        res.setHeader('Content-Type', 'video/webm'); // Assume webm format for .wbp files
      } else {
        res.setHeader('Content-Type', 'application/x-mpegURL');
      }
    }

    res.setHeader('Access-Control-Allow-Origin', '*');
    sourceResponse.pipe(res);
  });

  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });

  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });

  req.pipe(restream()).pipe(proxyRequest);
}

// A route for handling proxy requests
app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/proxy/', 'https://') + search;

  // Check if the request is for an m3u8 file
  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    handleM3U8Request(req, res, targetURL);
    return;
  }

  // Handle other requests
  handleOtherRequest(req, res, targetURL);
});

// A route for handling segment requests
app.use('/segment/*', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  console.log(`Received request for URL: ${fullURL}`);
  
  // Capture the segment path from the wildcard
  const segmentPath = req.params[0];

  // Construct the targetURL with the captured segment path
  const targetURL = 'https://' + segmentPath;

  // Handle the request
  handleOtherRequest(req, res, targetURL);
});

// A route for serving the main page
app.get('/', (req, res) => {
  res.render('main.ejs');
});

// A route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for updating a game
app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));
"
9nEKdL9Y,Untitled,TaylorsRus,Lua,Saturday 26th of August 2023 02:59:51 PM CDT,"-- StateManager.lua
local Knit = require(game:GetService(""ReplicatedStorage"").Packages.Knit)
local StateManager = Knit.CreateService {
	Name = ""StateManager"",
}

local Players = game:GetService(""Players"")

local StateClass = require(script.StateClass)

local LastChange = nil
local AlreadyCounting = false

local StateMachines = {
	HumanoidStateMachine = {},
	CombatStateMachine = {}
}

local IDLE_REVERT_TIME = 5 
local ITERATION_INTERVAL = 1

local function ConfigureStates(Character)
	local Humanoid = Character:WaitForChild(""Humanoid"")
	local HumanoidStateMachine = StateMachines.HumanoidStateMachine
	
	Humanoid.StateChanged:Connect(function(_, NewState)
		if NewState ~= Enum.HumanoidStateType.Running then
			HumanoidStateMachine:ChangeState(NewState.Name)
		end
		LastChange = os.clock()
		
		if AlreadyCounting then return end
		AlreadyCounting = true
		
		while true do
			task.wait(ITERATION_INTERVAL)
			local DeltaTime = os.clock() - LastChange
			if DeltaTime >= IDLE_REVERT_TIME then
				break
			end	
		end
		
		HumanoidStateMachine:ChangeState(""Idle"")
		AlreadyCounting = false
	end)
	
	HumanoidStateMachine:ChangeState(""Idle"")
end

function StateManager.KnitInit()
	for StateMachine,_ in StateMachines do
		StateMachines[StateMachine] = StateClass.new(StateMachine)
	end
	
	Players.PlayerAdded:Connect(function(Player)
		if Player.Character then ConfigureStates(Player.Character) end
		Player.CharacterAdded:Connect(ConfigureStates)
	end)
end

return StateManager

StateClass.lua
local StateClass = {}
StateClass.__index = StateClass


function StateClass.new(StateMachine)
	local self = setmetatable({}, StateClass)
	self.Name = StateMachine..""StateMachine""
	self.States = {}	
	for _,State in ipairs(script[StateMachine]:GetChildren()) do
		self.States[State.Name] = require(State)
	end

	self.State = self.States[""None""]
	return self
end

function StateClass:ChangeState(State)
	local ValidState = false
	
	for StateName, Other in self.States do
		if StateName == State then
			ValidState = true
			break
		end
	end
	if not ValidState then
		error(""Attempted to change state to invalid state enum: ""..tostring(State))
	end

	local OldState = self.State
	local NewState = self.States[State]
	
	if OldState.Exit then OldState.Exit() end
	if NewState.Enter then NewState.Enter() end

	self.State = NewState
	print(""State Change:"",self.State.Name)
end

function StateClass:FetchState(State)
	return self.State
end


return StateClass
"
gCbuBX0H,Untitled,bolo17,Python,Saturday 26th of August 2023 02:52:54 PM CDT,"1. Learn Python 
2. Practice using Google Colab 

Take these 2 free courses:

• Introduction to Python Programming (Udacity)
• Machine Learning Crash Course (Google)

https://dz4link.com/9cFZ"
c0PReLVj,Untitled,Seb,JavaScript,Saturday 26th of August 2023 02:49:39 PM CDT,"const {
  Client,
  GatewayIntentBits,
  Events,
  Collection,
  ActivityType,
  EmbedBuilder,
} = require(""discord.js"");
require(""../../slash"");
const config = require(""../../config.json"");

const client = new Client({
  intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMembers],
});

client.commands = new Collection();

[""events"", ""Slash""].forEach((el) => {
  require(`../../handlers/${el}`)(client);
});

let status = [
  {
    name: ""👽 Jte watch!"",
    type: ActivityType.Custom,
  },
];

client.on(""ready"", (c) => {
  console.log(`⌛ ${c.user.tag} démarre...`);
  console.log(`✅ ${c.user.tag} a démarré!`);

  setInterval(() => {
    let random = Math.floor(Math.random() * status.length);
    client.user.setActivity(status[random]);
  }, 10000);
});

client.on(""interactionCreate"", (interaction) => {
  if (!interaction.isChatInputCommand()) return;
  if (!interaction.member.roles.cache.has(""1072309575480508426"")) {
    const aide = new EmbedBuilder()
      //figure out how to prevent people from seeing this command
      .setColor(""#fcba03"")
      .setTitle(""Bot status"")
      .setDescription(""Ta pas accès a cette commande"");
    return;
  }

  if (interaction.commandName === ""aide"") {
    const aide = new EmbedBuilder()
      //.setTitle('Je viens de start!')
      .setColor(""#fcba03"")
      .setTitle(""Bot status"")
      .setURL(""https://discord.gg/secretlife"")
      .setAuthor({
        name: ""Informations"",
        iconURL: ""https://i.imgur.com/iTvSZG3.png"",
        url: ""https://discord.js.org"",
      })
      .setDescription(
        `Date de création du projet: <t:${parseInt(
          client.user.createdAt / 1000
        )}:R>`
      )
      .setThumbnail(""https://i.imgur.com/f7BPrrA.png"")
      .addFields(
        {
          name: ""Liste des commandes pour le staff"",
          value:
            ""Dans la liste, vous pouvez cliquer sur les commandes pour les utiliser directement"",
        },
        //{ name: ""\u200B"", value: ""\u200B"" },
        {
          name: ""</douane:1144800275576668200>"",
          value: ""Donnez la douane"",
          inline: true,
        },
        {
          name: ""</immigrant:1144799934164504618>"",
          value: ""Retirez la douane"",
          inline: true,
        }
      )
      .addFields({
        name: ""</aide:1144865046627889292>"",
        value: ""Panneau d'aide"",
        inline: true,
      })
      //.setImage(""https://i.imgur.com/AfFp7pu.png"")
      .setTimestamp()
      .setFooter({
        text: ""Pour plus de support /soutien"",
        iconURL: ""https://i.imgur.com/0rQTkIk.png"",
      });

    interaction.reply({ embeds: [aide], ephemeral: true });
  }
});

client.on(""messageCreate"", (message) => {
  if (message.content === ""aide"") {
    const aide = new EmbedBuilder()
      //.setTitle('Je viens de start!')
      .setColor(""#fcba03"")
      .setTitle(""Bot status"")
      .setURL(""https://discord.gg/secretlife"")
      .setAuthor({
        name: ""Informations"",
        iconURL: ""https://i.imgur.com/iTvSZG3.png"",
        url: ""https://discord.js.org"",
      })
      .setDescription(
        `Date de création du projet: <t:${parseInt(c.user.createdAt / 1000)}:R>`
      )
      .setThumbnail(""https://i.imgur.com/f7BPrrA.png"")
      .addFields(
        {
          name: ""Liste des commandes pour le staff"",
          value:
            ""Dans la liste, vous pouvez cliquer sur les commandes pour les utiliser directement"",
        },
        //{ name: ""\u200B"", value: ""\u200B"" },
        {
          name: ""</douane:1144800275576668200>"",
          value: ""Donnez la douane"",
          inline: true,
        },
        {
          name: ""</immigrant:1144799934164504618>"",
          value: ""Retirez la douane"",
          inline: true,
        }
      )
      .addFields({
        name: ""</aide:1144476548779483186>"",
        value: ""Panneau d'aide"",
        inline: true,
      })
      //.setImage(""https://i.imgur.com/AfFp7pu.png"")
      .setTimestamp()
      .setFooter({
        text: ""Pour plus de support /soutien"",
        iconURL: ""https://i.imgur.com/0rQTkIk.png"",
      });

    channel
      .send({ embeds: [embed] })
      .then(() => console.log(""👍 confirmation envoyé""))
      .catch(console.error);
  } else {
    console.error(""Channel not found."");

    message.channel.send({ embeds: [aide] });
  }
});
client.login(config.token);
"
8Dftn8xu,Untitled,bolo17,Python,Saturday 26th of August 2023 02:43:07 PM CDT,"A virtual environment is created on top of an existing Python installation, known as the virtual environment's “base” Python, and may optionall


https://dz4link.com/EaYt"
xcKqxcjt,Untitled,samipote,JavaScript,Saturday 26th of August 2023 02:22:46 PM CDT,"// Import required modules
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');
const methodOverride = require('method-override');
const request = require('request');
const restream = require('restream');
const app = express();
app.set('host', 'sportswatcher.ddns.net');
const fs = require('fs');
const fetch = require('node-fetch');
// Use middleware functions
app.use(express.json()); // Parse JSON bodies
app.use(express.urlencoded({ extended: true })); // Parse URL-encoded bodies
app.use(cors()); // Enable CORS
app.use(methodOverride('_method')); // Enable method override
app.use(express.static(path.join(__dirname, 'public'))); // Serve static files from the public directory
// Connect to MongoDB
const connectionString = 'mongodb://localhost:27017/streaming'; // Replace with your MongoDB connection string
mongoose.connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((error) => {
    console.error('Failed to connect to MongoDB', error);
  });
// Define a schema and a model for Game
const gameSchema = new mongoose.Schema({
  title: String,
  streamLink: String,
  sport: String,
});
const Game = mongoose.model('Game', gameSchema);
// A function that returns a modified URL for .ts and .wbp files
function getSegmentURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'segment/' + targetURL.replace('https://', '');
}
// A function that returns a modified URL for .m3u8 files
function getPlaylistURL(targetURL) {
  const baseURL = getBaseURL();
  return baseURL + 'proxy/' + targetURL.replace('https://', '');
}
// A function that returns the base URL of the app
function getBaseURL() {
  return `http://${app.get('host')}/`;
}
// A function that handles proxy requests for .m3u8 files
async function handleM3U8Request(req, res, targetURL) {
  const proxyRequestOptions = {
    url: targetURL,
    headers: { ...req.headers },
		strictSSL: false
  };

  // Ensure headers are correctly set
  proxyRequestOptions.headers.host = new URL(targetURL).host;
  proxyRequestOptions.headers['user-agent'] = req.headers['user-agent'] || 'Mozilla/5.0'; // added a default user-agent in case none is provided
  proxyRequestOptions.headers.referer = new URL(targetURL).origin;

  request(proxyRequestOptions, (error, response, body) => {
    if (error) {
      console.error('Failed to fetch m3u8:', error.message);
      return res.status(500).send('Proxy Error');
    }

    let m3u8Content = body;

    // Modify the .ts and .wbp URLs in the m3u8 content
    m3u8Content = m3u8Content.split('\n').map(line => {
      if (line.endsWith('.ts') || line.endsWith('.wbp')) {
        if (line.startsWith('http')) {
          return getSegmentURL(line);
        } else {
          const basePath = targetURL.substring(0, targetURL.lastIndexOf('/') + 1) + path.dirname(line) + '/';
          return getSegmentURL(basePath + line);
        }
      } else if (line.endsWith('.m3u8')) {
        if (line.startsWith('http')) {
          return getPlaylistURL(line);
        } else {
          const basePath = targetURL.substring(0, targetURL.lastIndexOf('/') + 1) + path.dirname(line) + '/';
          return getPlaylistURL(basePath + line);
        }
      } else if (line.startsWith('#EXT-X-KEY')) {
        const keyFileRegex = /URI=""(.+?)""/;
        const keyFileMatch = line.match(keyFileRegex);
        if (keyFileMatch) {
          const keyFileURL = keyFileMatch[1];
          const keyFileParamsRegex = /\?(.+)/;
          const keyFileParamsMatch = keyFileURL.match(keyFileParamsRegex);
          if (keyFileParamsMatch) {
            const keyFileParams = keyFileParamsMatch[1];
            return line.replace(keyFileRegex, `URI=""${getPlaylistURL(keyFileURL)}?${keyFileParams}""`);
          } else {
            return line.replace(keyFileRegex, `URI=""${getPlaylistURL(keyFileURL)}""`);
          }
        } else {
          return line;
        }
      } else {
        return line;
      }
    }).join('\n');

    res.setHeader('Content-Type', 'application/x-mpegURL');
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.send(m3u8Content);
  });
}
// A function that handles proxy requests for other files (.ts and .wbp)
function handleOtherRequest(req, res, targetURL) {
  // Create a proxyRequestOptions object with the headers copied from the original request
  const proxyRequestOptions = {
		url: targetURL,
    headers: { ...req.headers }, // Copy all headers from original request
    strictSSL: false  // This is not recommended for production, use it for debugging purposes
  };
  // Set the host header to match the target URL's host
  proxyRequestOptions.headers.host = new URL(targetURL).host;
  // Add the user-agent header to match the original request's user-agent
  proxyRequestOptions.headers['user-agent'] = req.headers['user-agent'];
  // Add the referer header to match the original stream link's domain
  proxyRequestOptions.headers.referer = new URL(targetURL).origin;
  const proxyRequest = request(proxyRequestOptions);
  proxyRequest.on('response', function(sourceResponse) {
    Object.keys(sourceResponse.headers).forEach(headerKey => {
      res.setHeader(headerKey, sourceResponse.headers[headerKey]);
    });
    let contentType = sourceResponse.headers['content-type'];
    if (!contentType || contentType === 'application/octet-stream') {
      const extname = path.extname(targetURL).toLowerCase();
      if (extname === '.m4s') {
        res.setHeader('Content-Type', 'application/dash+xml');
      } else if (extname === '.ts') {
        res.setHeader('Content-Type', 'video/MP2T');
      } else if (extname === '.wbp') {
        res.setHeader('Content-Type', 'video/webm'); // Assume webm format for .wbp files
      } else {
        res.setHeader('Content-Type', 'application/x-mpegURL');
      }
    }
    res.setHeader('Access-Control-Allow-Origin', '*');
    sourceResponse.pipe(res);
  });
  proxyRequest.on('error', function(err) {
    console.error('Proxy Error for URL:', targetURL, 'Error:', err.message);
    res.status(500).send('Proxy Error');
  });
  res.on('error', (err) => {
    console.error('Error during response pipe:', err);
  });
  req.pipe(restream()).pipe(proxyRequest);
}
// A route for handling proxy requests
app.use('/proxy/', async (req, res, next) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  const { pathname, search } = new URL(fullURL);
  console.log(`Received request for URL: ${fullURL}`);
  const targetURL = pathname.replace('/proxy/', 'https://') + search;
  // Check if the request is for an m3u8 file
  if (path.extname(targetURL).toLowerCase() === '.m3u8') {
    handleM3U8Request(req, res, targetURL);
    return;
  }
  // Handle other requests
  handleOtherRequest(req, res, targetURL);
});
// A route for handling segment requests
app.use('/segment/*', (req, res) => {
  const fullURL = req.protocol + '://' + req.get('host') + req.originalUrl;
  console.log(`Received request for URL: ${fullURL}`);
  // Capture the segment path from the wildcard
  const segmentPath = req.params[0];
  // Construct the targetURL with the captured segment path
  const targetURL = 'https://' + segmentPath;
  // Handle the request
  handleOtherRequest(req, res, targetURL);
});

// A route for serving the main page
app.get('/', (req, res) => {
  res.render('main.ejs');
});

// A route for serving the admin panel
app.get('/admin', async (req, res) => {
  try {
    const games = await Game.find();
    res.render('admin.ejs', { videos: games });
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for getting all games
app.get('/games', async (req, res) => {
  try {
    const games = await Game.find();
    res.send(games);
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for creating a new game
app.post('/games', async (req, res) => {
  try {
    const game = new Game(req.body);
    await game.save();
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for updating a game
app.put('/games/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { title, streamLink, sport } = req.body;
    await Game.findByIdAndUpdate(id, { title, streamLink, sport }, { new: true });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// A route for deleting a game
app.delete('/games/:id', async (req, res) => {
  try {
    await Game.deleteOne({ _id: req.params.id });
    res.redirect('/admin');
  } catch (error) {
    res.status(500).send(error);
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Server running on port ${port}`));
"
cuBeRUvs,input.h,JohnathanMayhem,C,Saturday 26th of August 2023 02:14:33 PM CDT,"#include ""input.h""

#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct input *initInput(char *value, int code) {
    struct input *in = malloc(sizeof(struct input));
    strcpy(in->val, value);
    toLowerCase(in->val);
    in->code = code;
    return in;
}

item *initItem(struct input *in) {
    item *it = malloc(sizeof(item));
    it->type = in->code;
    const char *keysFunc[10] = {""sin"", ""cos"", ""tg"", ""tan"", ""ctan"", ""ctg"", ""sqrt"", ""ln"", ""log"", ""ERROR""};
    const int valuesFunc[10] = {SIN, COS, TAN, TAN, CTAN, CTAN, SQRT, LN, ERROR};
    const char *keysOperators[6] = {""+"", ""*"", ""-"", ""/"", ""("", "")""};
    const int valuesOperators[6] = {PLUS, MUL, MINUS, DIV, OPENING_BRACKET, CLOSING_BRACKET};
    int ind;
    char *tmp;
    switch (in->code) {
        case FUNC:
            ind = 0;
            for (; strcmp(in->val, keysFunc[ind]) != 0 && ind < 9; ++ind);
            it->val = valuesFunc[ind];
            break;
        case OPERATOR:
            ind = 0;
            for (; strcmp(in->val, keysOperators[ind]) != 0 && ind < 9; ++ind);
            it->val = valuesOperators[ind];
            break;
        case VARIABLE:
            it->val = 0;
            break;
        case NUMBER:
            it->val = strtod(in->val, &tmp);
            break;
    }
    free(in);
    return it;
}

void toLowerCase(char *str) {
    for (; *str != '\0'; ++str) {
        *str = tolower(*str);
    }
}

itemList *initItemList(struct input *in) {
    itemList *list = malloc(sizeof(itemList));
    list->prev = list->next = NULL;
    list->it = initItem(in);

    return list;
}

void appendItemList(itemList **list, struct input *in) {
    if (*list == NULL) {
        *list = initItemList(in);
    } else {
        itemList *ptr = *list;
        while (ptr->next != NULL) {
            ptr = ptr->next;
        }
        ptr->next = initItemList(in);
    }
}

item getElemByInd(itemList *list, int ind) {
    int count = 0;
    while (count != ind) {
        list = list->next;
        ++count;
    }
    return *list->it;
}

void removeElemByInd(itemList **list, int ind) {
    int count = 0;
    itemList *ptr = *list;
    while (count != ind && (*list)->next != NULL) {
        ptr = ptr->next;
        ++count;
    }
    if (count == ind && (*list)->next == NULL && (*list)->prev == NULL) {
        *list = ptr;
        destroyItemList(list);
    } else {
        if (count == ind) {
            if ((*list)->prev != NULL) {
                if ((*list)->next != NULL) {
                    ptr->next->prev = ptr->prev;
                } else {
                    *list = (*list)->next;
                }
            }
            free(ptr);
        }

    }
}

void destroyItemList(itemList **list) {
    while ((*list)->next != NULL) {
        *list = (*list)->next;
        free((*list)->prev);
    }
    free(*list);
}

itemList *inputToken(char *str) {
    itemList *head = NULL;
    struct input *tmp;
    while (*str != '\0' && *str != '\n') {
        tmp = readToken(&str);
        if (tmp) {
            appendItemList(&head, tmp);
        } else {
            break;
        }
    }
    return head;
}


struct input *readToken(char **cursor) {
    char *res = malloc(sizeof(char) * 30);
    struct input *in = NULL;
    int flag = 1;
    while (flag && **cursor != '\0') {
        if (**cursor >= '0' && **cursor <= '9') {
            readNumber(cursor, res);
            in = initInput(res, NUMBER);
            flag = 0;
        } else {
            if (**cursor == 'x' || **cursor == 'X') {
                readVariable(cursor, res);
                in = initInput(res, VARIABLE);
                flag = 0;
            } else {
                if ((**cursor >= 'a' && **cursor <= 'z') || (**cursor >= 'A' && **cursor <= 'Z')) {
                    readFunc(cursor, res);
                    in = initInput(res, FUNC);
                    flag = 0;
                } else {
                    if (**cursor == '(' || **cursor == ')' || **cursor == '*' || **cursor == '/' ||
                        **cursor == '+' ||
                        **cursor == '-') {
                        readOperator(cursor, res);
                        in = initInput(res, OPERATOR);
                        flag = 0;
                    } else {
                        ++(*cursor);
                    }
                }
            }
        }
    }
    free(res);
    return in;
}

void readNumber(char **cursor, char *res) {
    int ind = 0;
    while ((**cursor >= '0' && **cursor <= '9') || **cursor == '.') {
        res[ind] = **cursor;
        ++(*cursor);
        ++ind;
    }
    res[ind] = '\0';
}

void readVariable(char **cursor, char *res) {
    res[0] = **cursor;
    res[1] = '\0';
    ++(*cursor);
}

void readFunc(char **cursor, char *res) {
    int ind = 0;
    while ((**cursor >= 'a' && **cursor <= 'z') || (**cursor >= 'A' && **cursor <= 'Z')) {
        res[ind] = **cursor;
        ++(*cursor);
        ++ind;
    }
    res[ind] = '\0';
}

void readOperator(char **cursor, char *res) {
    res[0] = **cursor;
    res[1] = '\0';
    ++(*cursor);
}

int main() {
    char str[100];
    gets(str);
    itemList *head = inputToken(str);
    itemList *list = head;
    while (list) {
        printf(""#%lf# "", list->it->val);
        list = list->next;
    }
    return 0;
}

"
YxGGrF91,input.h,JohnathanMayhem,C,Saturday 26th of August 2023 02:09:24 PM CDT,"#ifndef UNTITLED9_INPUT_H
#define UNTITLED9_INPUT_H

#define VARIABLE 0
#define NUMBER 1
#define OPERATOR 2
#define FUNC 3

#define COS 0
#define SIN 1
#define TAN 2
#define CTAN 3
#define SQRT 4
#define LN 5
#define PLUS 6
#define MINUS 7
#define MUL 8
#define DIV 9
#define ERROR -1
#define OPENING_BRACKET 10
#define CLOSING_BRACKET 11

struct input {
    char val[100];
    int code;
};
typedef struct item_t {
    double val;
    int type;
} item;

typedef struct itemList_t {
    item *it;
    struct itemList_t *next;
    struct itemList_t *prev;
} itemList;

//extra functions
void toLowerCase(char *str);

//List functions
itemList *initItemList(struct input *in);

void appendItemList(itemList **list, struct input *in);

item getElemByInd(itemList *list, int ind);

void removeElemByInd(itemList **list, int ind);

void destroyItemList(itemList **list);


//input functions
item *initItem(struct input *in);

struct input *initInput(char *value, int code);

struct inputList *initList(struct input *in);

void appendInput(struct inputList **list, struct input *in);

//different reading duntions

void readNumber(char **cursor, char *res);

void readVariable(char **cursor, char *res);

void readFunc(char **cursor, char *res);

void readOperator(char **cursor, char *res);

//read next token
struct input *readToken(char **cursor);

//main input function
itemList *inputToken(char *str);

#endif
"
WAUPrCWN,Pytest freezegun,alaex777,Python,Saturday 26th of August 2023 01:29:01 PM CDT,"# 26.08.23

from datetime import datetime
from freezegun import freeze_time

def make_some_checks_after_2024():
    if datetime.utcnow().year >= 2024:
        return True
    return False

@freeze_time(datetime(2024, 1, 1))
def test_some_checks_after_2024():
    assert make_some_checks_after_2024()

@freeze_time(datetime(2023, 1, 1))
def test_some_checks_before_2024():
    assert not make_some_checks_after_2024()

'''
Freezegun library allows you to freeze time in
your python code. It really helps you in creating
tests, for example to check that you store current
datetime in database or you have some logic, that
have to work only after some time
'''
"
y6N3nhB1,Untitled,PolskieBracie,JavaScript,Saturday 26th of August 2023 01:05:10 PM CDT,"integer gON;

float speed = 1;

dialog(){

    llDialog(llGetOwner(),""Select an option"",[""Speed -"","" "" ,""Speed +"",t,"" "",""Access""],internalChannel); 

}

onoff(){
    
        if (gON) {llSetKeyframedMotion([llEuler2Rot(<0.0,0.0,360>), speed],[KFM_DATA,KFM_ROTATION, KFM_MODE,KFM_LOOP]);}
        else {llSetKeyframedMotion([],[]);}
}

string access = ""Owner"";

integer internalChannel;
string t;
default
{
    
    state_entry(){
        llSetKeyframedMotion([],[]);
        internalChannel = (integer)llFrand(2500000)*-1;    
        llListen(internalChannel,"""","""","""");        
    }
    
    touch_start(integer total_number)
    {   
        //check status and update string 't'
        if(gON){
            t= ""Turn OFF"";    
        } else {
            t = ""Turn ON"";
        }

        //check if user is the owner
        if(llDetectedKey(0) == llGetOwner()){
            //Is the Owner - show dialog
            llDialog(llGetOwner(),""Select an option"",[""Speed -"","" "" ,""Speed +"",t,"" "",""Access""],internalChannel);
        } else {
            //check if has same group
            if(access == ""Group""){
                key id = llDetectedKey(0);

        integer sameGroup = llSameGroup(id);
        //same as llDetectedGroup(i) (with llDetectedGroup, detected does not need to be in the sim)

        if (sameGroup)
        {
            //is in the same group and allowed to use - show dialog
            llDialog(id,""Select an option"",[t],internalChannel);
        }
        else
        {
            //not using the right group - deny use
            llRegionSayTo(id, 0, ""Wrong active group!"");
        }
            } else {
                //this user has no right to use it - deny use again
                llInstantMessage(llDetectedKey(0),""You cannot use this."");
            }
            
        }
    }
    
    listen(integer channel, string name, key id, string message){
        //self explanatory
        if(message == ""Turn ON"" || message == ""Turn OFF""  ){
            
            gON = !gON;
            onoff();
            
        } else if(message == ""Access""){
            llDialog(llGetOwner(),""Who will have access?"",[""Owner"",""Group""],internalChannel);
        } else if(message == ""Owner""){
            //only owner can use
            access = ""Owner"";    
        } else if(message == ""Group""){
            //group can use
            access = ""Group"";   
        } else if(message == ""Speed +""){
            //increase speed
            if(speed- 0.5 >= 0.1){
                speed-=0.5;                
            } 
        onoff();
        dialog();
        } else if(message == ""Speed -""){
            //decrease speed
        speed+=0.5;
        onoff();   
        dialog();
        }     
    }
}"
qcQukfWP,Untitled,Skettalee,Python,Saturday 26th of August 2023 01:04:32 PM CDT,"=============================================================
Modules installed outside the virtual environment were found.
This can cause issues. Please review the installed modules.

You can uninstall all local modules with:

deactivate
pip freeze > uninstall.txt
pip uninstall -y -r uninstall.txt
=============================================================

12:36:37-242693 INFO     Version: v21.8.8

12:36:37-246701 INFO     nVidia toolkit detected
12:36:38-654884 INFO     Torch 2.0.1+cu118
12:36:38-677883 INFO     Torch backend: nVidia CUDA 11.8 cuDNN 8700
12:36:38-679883 INFO     Torch detected GPU: NVIDIA GeForce RTX 2080 SUPER VRAM 8192 Arch (7, 5) Cores 48
12:36:38-680892 INFO     Verifying modules instalation status from requirements_windows_torch2.txt...
12:36:38-681883 INFO     Verifying modules instalation status from requirements.txt...
12:36:40-930009 INFO     headless: False
12:36:40-936022 INFO     Load CSS...
Running on local URL:  http://127.0.0.1:7860

To create a public link, set `share=True` in `launch()`.
12:41:45-191609 INFO     Skipping folder .gitkeep because it does not match kohya_ss expected syntax...
12:41:45-192619 INFO     Skipping folder Kc.01.jpg because it does not match kohya_ss expected syntax...
12:41:45-193608 INFO     Skipping folder Kc.02.jpg because it does not match kohya_ss expected syntax...
12:41:45-194608 INFO     Skipping folder Kc.03.jpg because it does not match kohya_ss expected syntax...
12:41:45-195608 INFO     Skipping folder Kc.04.jpg because it does not match kohya_ss expected syntax...
12:41:45-195608 INFO     Skipping folder Kc.05.jpg because it does not match kohya_ss expected syntax...
12:41:45-196617 INFO     Skipping folder Kc.06.jpg because it does not match kohya_ss expected syntax...
12:41:45-197608 INFO     Skipping folder Kc.07.jpg because it does not match kohya_ss expected syntax...
12:41:45-197608 INFO     Skipping folder Kc.08.jpg because it does not match kohya_ss expected syntax...
12:41:45-198608 INFO     Skipping folder Kc.09.jpg because it does not match kohya_ss expected syntax...
12:41:45-199608 INFO     Skipping folder Kc.10.jpg because it does not match kohya_ss expected syntax...
12:41:45-200608 INFO     Skipping folder Kc.11.jpg because it does not match kohya_ss expected syntax...
12:41:45-200608 INFO     Skipping folder Kc.12.jpg because it does not match kohya_ss expected syntax...
12:41:45-201608 INFO     Skipping folder Kc.13.jpg because it does not match kohya_ss expected syntax...
12:41:45-202617 INFO     Skipping folder Kc.14.jpg because it does not match kohya_ss expected syntax...
12:41:45-202617 INFO     Skipping folder Kc.15.jpg because it does not match kohya_ss expected syntax...
12:41:45-203609 INFO     Skipping folder Kc.16.jpg because it does not match kohya_ss expected syntax...
12:41:45-203609 INFO     Skipping folder Kc.17.jpg because it does not match kohya_ss expected syntax...
12:41:45-204947 INFO     Skipping folder Kc.18.jpg because it does not match kohya_ss expected syntax...
12:41:45-205938 INFO     Skipping folder Kc.20.jpg because it does not match kohya_ss expected syntax...
12:41:45-205938 INFO     Skipping folder Kc.21.jpg because it does not match kohya_ss expected syntax...
12:41:45-206938 INFO     Skipping folder Kc.22.jpg because it does not match kohya_ss expected syntax...
12:41:45-207947 INFO     Skipping folder Kc.23.jpg because it does not match kohya_ss expected syntax...
12:41:45-208948 INFO     Skipping folder Kc.24.jpg because it does not match kohya_ss expected syntax...
12:41:45-209938 INFO     Skipping folder Kc.25.jpg because it does not match kohya_ss expected syntax...
12:41:45-210947 INFO     Skipping folder Kc.26.jpg because it does not match kohya_ss expected syntax...
12:44:06-051960 INFO     Copy F:\sd.CΩDE\FaceDataSets\kc\512 to F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img/20_Kc
                         woman...
12:44:06-066519 INFO     Regularization images directory is missing... not copying regularisation images...
12:44:06-067517 INFO     Done creating kohya_ss training folder structure at F:\sd.CΩDE\FaceDataSets\kc\Training
                         Directory...
12:56:47-210913 INFO     Start training LoRA Standard ...
12:56:47-212432 INFO     Checking for duplicate image filenames in training data directory...
12:56:47-214449 INFO     Valid image folder names found in: F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img
12:56:47-215449 INFO     Folder 20_Kc woman: 25 images found
12:56:47-216451 INFO     Folder 20_Kc woman: 500 steps
12:56:47-217450 INFO     Total steps: 500
12:56:47-218450 INFO     Train batch size: 1
12:56:47-219443 INFO     Gradient accumulation steps: 1
12:56:47-219443 INFO     Epoch: 10
12:56:47-220449 INFO     Regulatization factor: 1
12:56:47-221955 INFO     max_train_steps (500 / 1 / 1 * 10 * 1) = 5000
12:56:47-222960 INFO     stop_text_encoder_training = 0
12:56:47-223959 INFO     lr_warmup_steps = 0
12:56:47-225959 INFO     Saving training config to F:\sd.CΩDE\FaceDataSets\kc\Training
                         Directory\model\Kc_person_mine_20230826-125647.json...
12:56:47-227960 INFO     accelerate launch --num_cpu_threads_per_process=2 ""./sdxl_train_network.py"" --enable_bucket
                         --min_bucket_reso=256 --max_bucket_reso=2048
                         --pretrained_model_name_or_path=""F:/sd.CΩDE/sd.webui/webui/models/Stable-diffusion/sd_xl_base_1                         .0.safetensors"" --train_data_dir=""F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img""
                         --resolution=""1024,1024"" --output_dir=""F:\sd.CΩDE\FaceDataSets\kc\Training Directory\model""
                         --logging_dir=""F:\sd.CΩDE\FaceDataSets\kc\Training Directory\log"" --network_alpha=""1""
                         --save_model_as=safetensors --network_module=networks.lora --text_encoder_lr=1e-05
                         --unet_lr=0.0001 --network_dim=256 --output_name=""Kc_person_mine""
                         --lr_scheduler_num_cycles=""10"" --no_half_vae --learning_rate=""0.0001"" --lr_scheduler=""cosine""
                         --train_batch_size=""1"" --max_train_steps=""5000"" --save_every_n_epochs=""1""
                         --mixed_precision=""bf16"" --save_precision=""bf16"" --cache_latents --cache_latents_to_disk
                         --optimizer_type=""AdamW8bit"" --optimizer_args scale_parameter=False relative_step=False
                         warmup_init=False --max_data_loader_n_workers=""0"" --bucket_reso_steps=64 --xformers
                         --bucket_no_upscale --noise_offset=0.0
A matching Triton is not available, some optimizations will not be enabled.
Error caught was: No module named 'triton'
prepare tokenizers
Downloading (…)olve/main/vocab.json: 100%|██████████████████████████████████████████| 961k/961k [00:00<00:00, 8.88MB/s]
F:\sd.CΩDE\kohya\kohya_ss\venv\lib\site-packages\huggingface_hub\file_download.py:133: UserWarning: `huggingface_hub` cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\lee\.cache\huggingface\hub. Caching files will still work but in a degraded version that might require more space on your disk. This warning can be disabled by setting the `HF_HUB_DISABLE_SYMLINKS_WARNING` environment variable. For more details, see https://huggingface.co/docs/huggingface_hub/how-to-cache#limitations.
To support symlinks on Windows, you either need to activate Developer Mode or to run Python as an administrator. In order to see activate developer mode, see this article: https://docs.microsoft.com/en-us/windows/apps/get-started/enable-your-device-for-development
  warnings.warn(message)
Downloading (…)olve/main/merges.txt: 100%|██████████████████████████████████████████| 525k/525k [00:00<00:00, 15.0MB/s]
Downloading (…)cial_tokens_map.json: 100%|████████████████████████████████████████████████████| 389/389 [00:00<?, ?B/s]
Downloading (…)okenizer_config.json: 100%|████████████████████████████████████████████████████| 905/905 [00:00<?, ?B/s]
Downloading (…)olve/main/vocab.json: 100%|██████████████████████████████████████████| 862k/862k [00:00<00:00, 31.6MB/s]
Downloading (…)olve/main/merges.txt: 100%|██████████████████████████████████████████| 525k/525k [00:00<00:00, 15.9MB/s]
Downloading (…)cial_tokens_map.json: 100%|████████████████████████████████████████████████████| 389/389 [00:00<?, ?B/s]
Downloading (…)okenizer_config.json: 100%|████████████████████████████████████████████████████| 904/904 [00:00<?, ?B/s]
Using DreamBooth method.
prepare images.
found directory F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img\20_Kc woman contains 25 image files
No caption file found for 25 images. Training will continue without captions for these images. If class token exists, it will be used. / 25枚の画像にキャプションファイルが見つかりませんでした。これらの画像についてはキャプションなしで学習を 続行します。class tokenが存在する場合はそれを使います。
F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img\20_Kc woman\Kc.01.jpg
F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img\20_Kc woman\Kc.02.jpg
F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img\20_Kc woman\Kc.03.jpg
F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img\20_Kc woman\Kc.04.jpg
F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img\20_Kc woman\Kc.05.jpg
F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img\20_Kc woman\Kc.06.jpg... and 20 more
500 train images with repeating.
0 reg images.
no regularization images / 正則化画像が見つかりませんでした
[Dataset 0]
  batch_size: 1
  resolution: (1024, 1024)
  enable_bucket: True
  min_bucket_reso: 256
  max_bucket_reso: 2048
  bucket_reso_steps: 64
  bucket_no_upscale: True

  [Subset 0 of Dataset 0]
    image_dir: ""F:\sd.CΩDE\FaceDataSets\kc\Training Directory\img\20_Kc woman""
    image_count: 25
    num_repeats: 20
    shuffle_caption: False
    keep_tokens: 0
    caption_dropout_rate: 0.0
    caption_dropout_every_n_epoches: 0
    caption_tag_dropout_rate: 0.0
    color_aug: False
    flip_aug: False
    face_crop_aug_range: None
    random_crop: False
    token_warmup_min: 1,
    token_warmup_step: 0,
    is_reg: False
    class_tokens: Kc woman
    caption_extension: .caption


[Dataset 0]
loading image sizes.
100%|█████████████████████████████████████████████████████████████████████████████████| 25/25 [00:00<00:00, 238.95it/s]
make buckets
min_bucket_reso and max_bucket_reso are ignored if bucket_no_upscale is set, because bucket reso is defined by image size automatically / bucket_no_upscaleが指定された場合は、bucketの解像度は画像サイズから自動計算されるため、min_bucket_resoとmax_bucket_resoは無視されます
number of images (including repeats) / 各bucketの画像枚数（繰り返し回数を含む）
bucket 0: resolution (512, 512), count: 500
mean ar error (without repeats): 0.0
preparing accelerator
╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮
│ F:\sd.CΩDE\kohya\kohya_ss\sdxl_train_network.py:176 in <module>                                  │
│                                                                                                  │
│   173 │   args = train_util.read_config_from_file(args, parser)                                  │
│   174 │                                                                                          │
│   175 │   trainer = SdxlNetworkTrainer()                                                         │
│ ❱ 176 │   trainer.train(args)                                                                    │
│   177                                                                                            │
│                                                                                                  │
│ F:\sd.CΩDE\kohya\kohya_ss\train_network.py:206 in train                                          │
│                                                                                                  │
│   203 │   │                                                                                      │
│   204 │   │   # acceleratorを準備する                                                            │
│   205 │   │   print(""preparing accelerator"")                                                     │
│ ❱ 206 │   │   accelerator = train_util.prepare_accelerator(args)                                 │
│   207 │   │   is_main_process = accelerator.is_main_process                                      │
│   208 │   │                                                                                      │
│   209 │   │   # mixed precisionに対応した型を用意しておき適宜castする                            │
│                                                                                                  │
│ F:\sd.CΩDE\kohya\kohya_ss\library\train_util.py:3725 in prepare_accelerator                      │
│                                                                                                  │
│   3722 │   │   │   if args.wandb_api_key is not None:                                            │
│   3723 │   │   │   │   wandb.login(key=args.wandb_api_key)                                       │
│   3724 │                                                                                         │
│ ❱ 3725 │   accelerator = Accelerator(                                                            │
│   3726 │   │   gradient_accumulation_steps=args.gradient_accumulation_steps,                     │
│   3727 │   │   mixed_precision=args.mixed_precision,                                             │
│   3728 │   │   log_with=log_with,                                                                │
│                                                                                                  │
│ F:\sd.CΩDE\kohya\kohya_ss\venv\lib\site-packages\accelerate\accelerator.py:442 in __init__       │
│                                                                                                  │
│    439 │   │   │   else:                                                                         │
│    440 │   │   │   │   self.native_amp = is_bf16_available(True)                                 │
│    441 │   │   │   if mixed_precision == ""bf16"" and not self.native_amp and not is_tpu_availabl  │
│ ❱  442 │   │   │   │   raise ValueError(err.format(mode=""bf16"", requirement=""PyTorch >= 1.10 an  │
│    443 │   │                                                                                     │
│    444 │   │   # Start of internal step tracking                                                 │
│    445 │   │   self.step = 0                                                                     │
╰──────────────────────────────────────────────────────────────────────────────────────────────────╯
ValueError: bf16 mixed precision requires PyTorch >= 1.10 and a supported device.
╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮
│ C:\Users\lee\AppData\Local\Programs\Python\Python310\lib\runpy.py:196 in _run_module_as_main     │
│                                                                                                  │
│   193 │   main_globals = sys.modules[""__main__""].__dict__                                        │
│   194 │   if alter_argv:                                                                         │
│   195 │   │   sys.argv[0] = mod_spec.origin                                                      │
│ ❱ 196 │   return _run_code(code, main_globals, None,                                             │
│   197 │   │   │   │   │    ""__main__"", mod_spec)                                                 │
│   198                                                                                            │
│   199 def run_module(mod_name, init_globals=None,                                                │
│                                                                                                  │
│ C:\Users\lee\AppData\Local\Programs\Python\Python310\lib\runpy.py:86 in _run_code                │
│                                                                                                  │
│    83 │   │   │   │   │      __loader__ = loader,                                                │
│    84 │   │   │   │   │      __package__ = pkg_name,                                             │
│    85 │   │   │   │   │      __spec__ = mod_spec)                                                │
│ ❱  86 │   exec(code, run_globals)                                                                │
│    87 │   return run_globals                                                                     │
│    88                                                                                            │
│    89 def _run_module_code(code, init_globals=None,                                              │
│                                                                                                  │
│ in <module>:7                                                                                    │
│                                                                                                  │
│   4 from accelerate.commands.accelerate_cli import main                                          │
│   5 if __name__ == '__main__':                                                                   │
│   6 │   sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])                         │
│ ❱ 7 │   sys.exit(main())                                                                         │
│   8                                                                                              │
│                                                                                                  │
│ F:\sd.CΩDE\kohya\kohya_ss\venv\lib\site-packages\accelerate\commands\accelerate_cli.py:45 in     │
│ main                                                                                             │
│                                                                                                  │
│   42 │   │   exit(1)                                                                             │
│   43 │                                                                                           │
│   44 │   # Run                                                                                   │
│ ❱ 45 │   args.func(args)                                                                         │
│   46                                                                                             │
│   47                                                                                             │
│   48 if __name__ == ""__main__"":                                                                  │
│                                                                                                  │
│ F:\sd.CΩDE\kohya\kohya_ss\venv\lib\site-packages\accelerate\commands\launch.py:918 in            │
│ launch_command                                                                                   │
│                                                                                                  │
│   915 │   elif defaults is not None and defaults.compute_environment == ComputeEnvironment.AMA   │
│   916 │   │   sagemaker_launcher(defaults, args)                                                 │
│   917 │   else:                                                                                  │
│ ❱ 918 │   │   simple_launcher(args)                                                              │
│   919                                                                                            │
│   920                                                                                            │
│   921 def main():                                                                                │
│                                                                                                  │
│ F:\sd.CΩDE\kohya\kohya_ss\venv\lib\site-packages\accelerate\commands\launch.py:580 in            │
│ simple_launcher                                                                                  │
│                                                                                                  │
│   577 │   process.wait()                                                                         │
│   578 │   if process.returncode != 0:                                                            │
│   579 │   │   if not args.quiet:                                                                 │
│ ❱ 580 │   │   │   raise subprocess.CalledProcessError(returncode=process.returncode, cmd=cmd)    │
│   581 │   │   else:                                                                              │
│   582 │   │   │   sys.exit(1)                                                                    │
│   583                                                                                            │
╰──────────────────────────────────────────────────────────────────────────────────────────────────╯
CalledProcessError: Command '['F:\\sd.CΩDE\\kohya\\kohya_ss\\venv\\Scripts\\python.exe', './sdxl_train_network.py',
'--enable_bucket', '--min_bucket_reso=256', '--max_bucket_reso=2048',
'--pretrained_model_name_or_path=F:/sd.CΩDE/sd.webui/webui/models/Stable-diffusion/sd_xl_base_1.0.safetensors',
'--train_data_dir=F:\\sd.CΩDE\\FaceDataSets\\kc\\Training Directory\\img', '--resolution=1024,1024',
'--output_dir=F:\\sd.CΩDE\\FaceDataSets\\kc\\Training Directory\\model',
'--logging_dir=F:\\sd.CΩDE\\FaceDataSets\\kc\\Training Directory\\log', '--network_alpha=1',
'--save_model_as=safetensors', '--network_module=networks.lora', '--text_encoder_lr=1e-05', '--unet_lr=0.0001',
'--network_dim=256', '--output_name=Kc_person_mine', '--lr_scheduler_num_cycles=10', '--no_half_vae',
'--learning_rate=0.0001', '--lr_scheduler=cosine', '--train_batch_size=1', '--max_train_steps=5000',
'--save_every_n_epochs=1', '--mixed_precision=bf16', '--save_precision=bf16', '--cache_latents',
'--cache_latents_to_disk', '--optimizer_type=AdamW8bit', '--optimizer_args', 'scale_parameter=False',
'relative_step=False', 'warmup_init=False', '--max_data_loader_n_workers=0', '--bucket_reso_steps=64', '--xformers',
'--bucket_no_upscale', '--noise_offset=0.0']' returned non-zero exit status 1."
f1NNxQUf,Nigerian scammers [26-8-2/2023],bombaires,HTML,Saturday 26th of August 2023 12:59:42 PM CDT,"<a href=""mailto:ambankof9@gmail.com"">ambankof9@gmail.com</a>
<a href=""mailto:a.m.b.a.n.k.of.9@gmail.com"">a.m.b.a.n.k.of.9@gmail.com</a>
<a href=""mailto:am.b.a.n.kof9@gmail.com"">am.b.a.n.kof9@gmail.com</a>
<a href=""mailto:a.m.b.a.n.k.o.f.9@gmail.com"">a.m.b.a.n.k.o.f.9@gmail.com</a>
<a href=""mailto:a.m.b.a.nk.o.f9@gmail.com"">a.m.b.a.nk.o.f9@gmail.com</a>
<a href=""mailto:am.b.a.n.ko.f.9@gmail.com"">am.b.a.n.ko.f.9@gmail.com</a>
<a href=""mailto:a.mb.ank.of.9@gmail.com"">a.mb.ank.of.9@gmail.com</a>
<a href=""mailto:a.m.ba.nko.f9@gmail.com"">a.m.ba.nko.f9@gmail.com</a>
<a href=""mailto:amban.ko.f9@gmail.com"">amban.ko.f9@gmail.com</a>
<a href=""mailto:a.mb.a.n.k.o.f9@gmail.com"">a.mb.a.n.k.o.f9@gmail.com</a>
<a href=""mailto:amban.k.o.f9@gmail.com"">amban.k.o.f9@gmail.com</a>
<a href=""mailto:a.m.ba.nk.o.f.9@gmail.com"">a.m.ba.nk.o.f.9@gmail.com</a>
<a href=""mailto:amba.n.k.o.f.9@gmail.com"">amba.n.k.o.f.9@gmail.com</a>
<a href=""mailto:a.mbanko.f.9@gmail.com"">a.mbanko.f.9@gmail.com</a>
<a href=""mailto:a.mb.ankof.9@gmail.com"">a.mb.ankof.9@gmail.com</a>
<a href=""mailto:a.m.b.a.n.k.of9@gmail.com"">a.m.b.a.n.k.of9@gmail.com</a>
<a href=""mailto:amba.nk.o.f9@gmail.com"">amba.nk.o.f9@gmail.com</a>
<a href=""mailto:a.mba.nko.f.9@gmail.com"">a.mba.nko.f.9@gmail.com</a>
<a href=""mailto:amban.kof.9@gmail.com"">amban.kof.9@gmail.com</a>
<a href=""mailto:a.m.b.ank.o.f.9@gmail.com"">a.m.b.ank.o.f.9@gmail.com</a>
<a href=""mailto:a.m.bank.o.f.9@gmail.com"">a.m.bank.o.f.9@gmail.com</a>
<a href=""mailto:amb.an.k.o.f9@gmail.com"">amb.an.k.o.f9@gmail.com</a>
<a href=""mailto:am.bank.of9@gmail.com"">am.bank.of9@gmail.com</a>
<a href=""mailto:a.mb.a.n.ko.f9@gmail.com"">a.mb.a.n.ko.f9@gmail.com</a>
<a href=""mailto:am.b.ankof9@gmail.com"">am.b.ankof9@gmail.com</a>
<a href=""mailto:amba.n.kof9@gmail.com"">amba.n.kof9@gmail.com</a>
<a href=""mailto:a.m.b.ankof.9@gmail.com"">a.m.b.ankof.9@gmail.com</a>
<a href=""mailto:amba.nk.of9@gmail.com"">amba.nk.of9@gmail.com</a>
<a href=""mailto:am.b.a.n.k.o.f9@gmail.com"">am.b.a.n.k.o.f9@gmail.com</a>
<a href=""mailto:a.mb.an.k.o.f9@gmail.com"">a.mb.an.k.o.f9@gmail.com</a>
<a href=""mailto:a.mb.ank.o.f9@gmail.com"">a.mb.ank.o.f9@gmail.com</a>
<a href=""mailto:am.b.a.nk.o.f.9@gmail.com"">am.b.a.nk.o.f.9@gmail.com</a>
<a href=""mailto:amba.n.kof.9@gmail.com"">amba.n.kof.9@gmail.com</a>
<a href=""mailto:a.m.b.an.ko.f9@gmail.com"">a.m.b.an.ko.f9@gmail.com</a>
<a href=""mailto:am.b.a.n.k.of9@gmail.com"">am.b.a.n.k.of9@gmail.com</a>
<a href=""mailto:am.ba.n.k.of9@gmail.com"">am.ba.n.k.of9@gmail.com</a>
<a href=""mailto:ambanko.f.9@gmail.com"">ambanko.f.9@gmail.com</a>
<a href=""mailto:a.m.ba.n.k.o.f.9@gmail.com"">a.m.ba.n.k.o.f.9@gmail.com</a>
<a href=""mailto:amb.a.nk.o.f9@gmail.com"">amb.a.nk.o.f9@gmail.com</a>
<a href=""mailto:a.mba.n.ko.f.9@gmail.com"">a.mba.n.ko.f.9@gmail.com</a>
<a href=""mailto:am.ban.k.o.f.9@gmail.com"">am.ban.k.o.f.9@gmail.com</a>
<a href=""mailto:am.ban.kof.9@gmail.com"">am.ban.kof.9@gmail.com</a>
<a href=""mailto:a.m.ban.k.of9@gmail.com"">a.m.ban.k.of9@gmail.com</a>
<a href=""mailto:a.mb.a.nk.o.f.9@gmail.com"">a.mb.a.nk.o.f.9@gmail.com</a>
<a href=""mailto:a.m.ba.nkof9@gmail.com"">a.m.ba.nkof9@gmail.com</a>
<a href=""mailto:am.ba.nk.o.f9@gmail.com"">am.ba.nk.o.f9@gmail.com</a>
<a href=""mailto:amb.ank.of.9@gmail.com"">amb.ank.of.9@gmail.com</a>
<a href=""mailto:am.b.ank.o.f.9@gmail.com"">am.b.ank.o.f.9@gmail.com</a>
<a href=""mailto:am.b.anko.f9@gmail.com"">am.b.anko.f9@gmail.com</a>
<a href=""mailto:am.ba.n.k.o.f.9@gmail.com"">am.ba.n.k.o.f.9@gmail.com</a>
<a href=""mailto:a.mban.k.o.f.9@gmail.com"">a.mban.k.o.f.9@gmail.com</a>
<a href=""mailto:amb.a.nkof.9@gmail.com"">amb.a.nkof.9@gmail.com</a>
<a href=""mailto:am.ba.nk.of9@gmail.com"">am.ba.nk.of9@gmail.com</a>
<a href=""mailto:a.mb.an.k.of9@gmail.com"">a.mb.an.k.of9@gmail.com</a>
<a href=""mailto:a.mba.nkof9@gmail.com"">a.mba.nkof9@gmail.com</a>
<a href=""mailto:a.mb.anko.f.9@gmail.com"">a.mb.anko.f.9@gmail.com</a>
<a href=""mailto:amba.nko.f.9@gmail.com"">amba.nko.f.9@gmail.com</a>
<a href=""mailto:a.m.b.an.kof9@gmail.com"">a.m.b.an.kof9@gmail.com</a>
<a href=""mailto:a.mba.nko.f9@gmail.com"">a.mba.nko.f9@gmail.com</a>
<a href=""mailto:am.b.an.kof9@gmail.com"">am.b.an.kof9@gmail.com</a>
<a href=""mailto:a.m.ban.ko.f9@gmail.com"">a.m.ban.ko.f9@gmail.com</a>
<a href=""mailto:a.mba.n.k.of9@gmail.com"">a.mba.n.k.of9@gmail.com</a>
<a href=""mailto:a.m.b.a.nk.o.f.9@gmail.com"">a.m.b.a.nk.o.f.9@gmail.com</a>
<a href=""mailto:amb.an.kof9@gmail.com"">amb.an.kof9@gmail.com</a>
<a href=""mailto:a.m.b.anko.f9@gmail.com"">a.m.b.anko.f9@gmail.com</a>
<a href=""mailto:amb.a.nko.f9@gmail.com"">amb.a.nko.f9@gmail.com</a>
<a href=""mailto:am.b.a.n.kof.9@gmail.com"">am.b.a.n.kof.9@gmail.com</a>
<a href=""mailto:amb.a.n.ko.f9@gmail.com"">amb.a.n.ko.f9@gmail.com</a>
<a href=""mailto:a.mbank.o.f9@gmail.com"">a.mbank.o.f9@gmail.com</a>
<a href=""mailto:a.m.ba.n.kof.9@gmail.com"">a.m.ba.n.kof.9@gmail.com</a>
<a href=""mailto:amb.an.ko.f9@gmail.com"">amb.an.ko.f9@gmail.com</a>
<a href=""mailto:am.ban.k.of9@gmail.com"">am.ban.k.of9@gmail.com</a>
<a href=""mailto:ambank.of.9@gmail.com"">ambank.of.9@gmail.com</a>
<a href=""mailto:a.mba.nk.o.f.9@gmail.com"">a.mba.nk.o.f.9@gmail.com</a>
<a href=""mailto:am.ban.k.of.9@gmail.com"">am.ban.k.of.9@gmail.com</a>
<a href=""mailto:amba.nkof.9@gmail.com"">amba.nkof.9@gmail.com</a>
<a href=""mailto:a.mba.n.k.o.f.9@gmail.com"">a.mba.n.k.o.f.9@gmail.com</a>
<a href=""mailto:amb.an.k.of9@gmail.com"">amb.an.k.of9@gmail.com</a>
<a href=""mailto:a.mb.a.nko.f.9@gmail.com"">a.mb.a.nko.f.9@gmail.com</a>
<a href=""mailto:a.mbank.o.f.9@gmail.com"">a.mbank.o.f.9@gmail.com</a>
<a href=""mailto:a.m.ba.n.k.of9@gmail.com"">a.m.ba.n.k.of9@gmail.com</a>
<a href=""mailto:a.mb.ank.o.f.9@gmail.com"">a.mb.ank.o.f.9@gmail.com</a>
<a href=""mailto:a.m.bank.of.9@gmail.com"">a.m.bank.of.9@gmail.com</a>
<a href=""mailto:am.b.a.nk.of9@gmail.com"">am.b.a.nk.of9@gmail.com</a>
<a href=""mailto:a.mbankof.9@gmail.com"">a.mbankof.9@gmail.com</a>
<a href=""mailto:a.mban.k.of.9@gmail.com"">a.mban.k.of.9@gmail.com</a>
<a href=""mailto:am.bankof9@gmail.com"">am.bankof9@gmail.com</a>
<a href=""mailto:am.ban.ko.f9@gmail.com"">am.ban.ko.f9@gmail.com</a>
<a href=""mailto:amban.kof9@gmail.com"">amban.kof9@gmail.com</a>
<a href=""mailto:am.bank.of.9@gmail.com"">am.bank.of.9@gmail.com</a>
<a href=""mailto:a.m.b.a.n.ko.f.9@gmail.com"">a.m.b.a.n.ko.f.9@gmail.com</a>
<a href=""mailto:amba.n.k.of9@gmail.com"">amba.n.k.of9@gmail.com</a>
<a href=""mailto:a.mb.a.n.k.of.9@gmail.com"">a.mb.a.n.k.of.9@gmail.com</a>
<a href=""mailto:a.mba.n.k.of.9@gmail.com"">a.mba.n.k.of.9@gmail.com</a>
<a href=""mailto:am.ba.n.k.of.9@gmail.com"">am.ba.n.k.of.9@gmail.com</a>
<a href=""mailto:a.mb.a.nko.f9@gmail.com"">a.mb.a.nko.f9@gmail.com</a>
<a href=""mailto:a.m.b.a.n.k.o.f9@gmail.com"">a.m.b.a.n.k.o.f9@gmail.com</a>
<a href=""mailto:ambankof.9@gmail.com"">ambankof.9@gmail.com</a>
<a href=""mailto:amb.ank.o.f.9@gmail.com"">amb.ank.o.f.9@gmail.com</a>
<a href=""mailto:a.mb.a.nk.o.f9@gmail.com"">a.mb.a.nk.o.f9@gmail.com</a>
<a href=""mailto:am.ban.k.o.f9@gmail.com"">am.ban.k.o.f9@gmail.com</a>
<a href=""mailto:am.b.an.k.of9@gmail.com"">am.b.an.k.of9@gmail.com</a>
<a href=""mailto:am.b.a.nko.f9@gmail.com"">am.b.a.nko.f9@gmail.com</a>
<a href=""mailto:a.m.b.an.k.of9@gmail.com"">a.m.b.an.k.of9@gmail.com</a>
<a href=""mailto:amb.a.nko.f.9@gmail.com"">amb.a.nko.f.9@gmail.com</a>
<a href=""mailto:a.mb.an.ko.f9@gmail.com"">a.mb.an.ko.f9@gmail.com</a>
<a href=""mailto:amb.a.n.k.of9@gmail.com"">amb.a.n.k.of9@gmail.com</a>
<a href=""mailto:a.m.b.a.nk.of.9@gmail.com"">a.m.b.a.nk.of.9@gmail.com</a>
<a href=""mailto:amba.nk.of.9@gmail.com"">amba.nk.of.9@gmail.com</a>
<a href=""mailto:amb.ank.of9@gmail.com"">amb.ank.of9@gmail.com</a>
<a href=""mailto:am.b.ank.of.9@gmail.com"">am.b.ank.of.9@gmail.com</a>
<a href=""mailto:a.m.b.ank.of.9@gmail.com"">a.m.b.ank.of.9@gmail.com</a>
<a href=""mailto:a.m.b.ank.of9@gmail.com"">a.m.b.ank.of9@gmail.com</a>
<a href=""mailto:am.ba.nko.f9@gmail.com"">am.ba.nko.f9@gmail.com</a>
<a href=""mailto:a.mban.k.o.f9@gmail.com"">a.mban.k.o.f9@gmail.com</a>
<a href=""mailto:a.mb.an.ko.f.9@gmail.com"">a.mb.an.ko.f.9@gmail.com</a>
<a href=""mailto:a.m.ban.kof9@gmail.com"">a.m.ban.kof9@gmail.com</a>
<a href=""mailto:a.mban.kof9@gmail.com"">a.mban.kof9@gmail.com</a>
<a href=""mailto:a.m.ba.n.k.o.f9@gmail.com"">a.m.ba.n.k.o.f9@gmail.com</a>
<a href=""mailto:am.b.an.k.o.f.9@gmail.com"">am.b.an.k.o.f.9@gmail.com</a>
<a href=""mailto:am.ba.nk.of.9@gmail.com"">am.ba.nk.of.9@gmail.com</a>
<a href=""mailto:amban.k.of.9@gmail.com"">amban.k.of.9@gmail.com</a>
<a href=""mailto:a.mba.nkof.9@gmail.com"">a.mba.nkof.9@gmail.com</a>
<a href=""mailto:amb.a.n.ko.f.9@gmail.com"">amb.a.n.ko.f.9@gmail.com</a>
<a href=""mailto:am.ba.n.ko.f.9@gmail.com"">am.ba.n.ko.f.9@gmail.com</a>
<a href=""mailto:am.b.a.nkof.9@gmail.com"">am.b.a.nkof.9@gmail.com</a>
<a href=""mailto:amb.a.n.kof9@gmail.com"">amb.a.n.kof9@gmail.com</a>
<a href=""mailto:a.mb.ankof9@gmail.com"">a.mb.ankof9@gmail.com</a>
<a href=""mailto:a.mba.n.kof.9@gmail.com"">a.mba.n.kof.9@gmail.com</a>
<a href=""mailto:amb.an.ko.f.9@gmail.com"">amb.an.ko.f.9@gmail.com</a>
<a href=""mailto:a.mb.a.n.ko.f.9@gmail.com"">a.mb.a.n.ko.f.9@gmail.com</a>
<a href=""mailto:a.m.ban.k.o.f.9@gmail.com"">a.m.ban.k.o.f.9@gmail.com</a>
<a href=""mailto:a.m.ba.nkof.9@gmail.com"">a.m.ba.nkof.9@gmail.com</a>
<a href=""mailto:a.mb.a.n.kof9@gmail.com"">a.mb.a.n.kof9@gmail.com</a>
<a href=""mailto:a.mba.n.kof9@gmail.com"">a.mba.n.kof9@gmail.com</a>
<a href=""mailto:a.mb.a.n.k.of9@gmail.com"">a.mb.a.n.k.of9@gmail.com</a>
<a href=""mailto:am.b.ankof.9@gmail.com"">am.b.ankof.9@gmail.com</a>
<a href=""mailto:am.ba.nkof9@gmail.com"">am.ba.nkof9@gmail.com</a>
<a href=""mailto:am.b.an.ko.f.9@gmail.com"">am.b.an.ko.f.9@gmail.com</a>
<a href=""mailto:a.mb.a.nkof9@gmail.com"">a.mb.a.nkof9@gmail.com</a>
<a href=""mailto:a.m.b.a.nko.f9@gmail.com"">a.m.b.a.nko.f9@gmail.com</a>
<a href=""mailto:am.ba.n.ko.f9@gmail.com"">am.ba.n.ko.f9@gmail.com</a>
<a href=""mailto:am.b.a.n.k.o.f.9@gmail.com"">am.b.a.n.k.o.f.9@gmail.com</a>
<a href=""mailto:amban.k.of9@gmail.com"">amban.k.of9@gmail.com</a>
<a href=""mailto:a.m.b.an.kof.9@gmail.com"">a.m.b.an.kof.9@gmail.com</a>
<a href=""mailto:ambankof9@gmail.com"">ambankof9@gmail.com</a>
<a href=""mailto:a.mba.nk.of.9@gmail.com"">a.mba.nk.of.9@gmail.com</a>
<a href=""mailto:a.m.bank.o.f9@gmail.com"">a.m.bank.o.f9@gmail.com</a>
<a href=""mailto:amb.an.k.o.f.9@gmail.com"">amb.an.k.o.f.9@gmail.com</a>
<a href=""mailto:a.mba.nk.o.f9@gmail.com"">a.mba.nk.o.f9@gmail.com</a>
<a href=""mailto:a.m.ba.n.k.of.9@gmail.com"">a.m.ba.n.k.of.9@gmail.com</a>
<a href=""mailto:a.m.b.a.nk.of9@gmail.com"">a.m.b.a.nk.of9@gmail.com</a>
<a href=""mailto:am.b.a.n.k.of.9@gmail.com"">am.b.a.n.k.of.9@gmail.com</a>
<a href=""mailto:a.mb.an.k.of.9@gmail.com"">a.mb.an.k.of.9@gmail.com</a>
<a href=""mailto:amb.ank.o.f9@gmail.com"">amb.ank.o.f9@gmail.com</a>
<a href=""mailto:am.b.an.ko.f9@gmail.com"">am.b.an.ko.f9@gmail.com</a>
<a href=""mailto:a.mba.nk.of9@gmail.com"">a.mba.nk.of9@gmail.com</a>
<a href=""mailto:amb.a.nk.of.9@gmail.com"">amb.a.nk.of.9@gmail.com</a>
<a href=""mailto:a.mban.ko.f.9@gmail.com"">a.mban.ko.f.9@gmail.com</a>
<a href=""mailto:a.m.ban.kof.9@gmail.com"">a.m.ban.kof.9@gmail.com</a>
<a href=""mailto:a.m.ban.ko.f.9@gmail.com"">a.m.ban.ko.f.9@gmail.com</a>
<a href=""mailto:am.ba.n.k.o.f9@gmail.com"">am.ba.n.k.o.f9@gmail.com</a>
<a href=""mailto:am.b.an.k.o.f9@gmail.com"">am.b.an.k.o.f9@gmail.com</a>
<a href=""mailto:a.mb.anko.f9@gmail.com"">a.mb.anko.f9@gmail.com</a>
<a href=""mailto:a.mbankof9@gmail.com"">a.mbankof9@gmail.com</a>
<a href=""mailto:am.ba.nkof.9@gmail.com"">am.ba.nkof.9@gmail.com</a>
<a href=""mailto:amb.an.kof.9@gmail.com"">amb.an.kof.9@gmail.com</a>
<a href=""mailto:amb.ankof.9@gmail.com"">amb.ankof.9@gmail.com</a>
<a href=""mailto:am.ban.ko.f.9@gmail.com"">am.ban.ko.f.9@gmail.com</a>
<a href=""mailto:a.m.ban.k.of.9@gmail.com"">a.m.ban.k.of.9@gmail.com</a>
<a href=""mailto:a.m.ba.n.ko.f9@gmail.com"">a.m.ba.n.ko.f9@gmail.com</a>
<a href=""mailto:a.mb.an.k.o.f.9@gmail.com"">a.mb.an.k.o.f.9@gmail.com</a>
<a href=""mailto:a.mb.a.nk.of9@gmail.com"">a.mb.a.nk.of9@gmail.com</a>
<a href=""mailto:a.mbank.of.9@gmail.com"">a.mbank.of.9@gmail.com</a>
<a href=""mailto:a.mban.kof.9@gmail.com"">a.mban.kof.9@gmail.com</a>
<a href=""mailto:am.b.an.k.of.9@gmail.com"">am.b.an.k.of.9@gmail.com</a>
<a href=""mailto:a.m.ba.n.ko.f.9@gmail.com"">a.m.ba.n.ko.f.9@gmail.com</a>
<a href=""mailto:a.m.ba.nk.of9@gmail.com"">a.m.ba.nk.of9@gmail.com</a>
<a href=""mailto:a.m.b.an.k.o.f.9@gmail.com"">a.m.b.an.k.o.f.9@gmail.com</a>
<a href=""mailto:a.m.ban.k.o.f9@gmail.com"">a.m.ban.k.o.f9@gmail.com</a>
<a href=""mailto:am.bank.o.f.9@gmail.com"">am.bank.o.f.9@gmail.com</a>
<a href=""mailto:a.m.b.ank.o.f9@gmail.com"">a.m.b.ank.o.f9@gmail.com</a>
<a href=""mailto:a.mban.k.of9@gmail.com"">a.mban.k.of9@gmail.com</a>
<a href=""mailto:a.m.ba.nk.of.9@gmail.com"">a.m.ba.nk.of.9@gmail.com</a>
<a href=""mailto:am.banko.f.9@gmail.com"">am.banko.f.9@gmail.com</a>
<a href=""mailto:amb.a.nkof9@gmail.com"">amb.a.nkof9@gmail.com</a>
<a href=""mailto:amba.n.k.of.9@gmail.com"">amba.n.k.of.9@gmail.com</a>
<a href=""mailto:a.m.b.a.n.kof9@gmail.com"">a.m.b.a.n.kof9@gmail.com</a>
<a href=""mailto:a.mbank.of9@gmail.com"">a.mbank.of9@gmail.com</a>
<a href=""mailto:amb.a.n.k.o.f9@gmail.com"">amb.a.n.k.o.f9@gmail.com</a>
<a href=""mailto:amb.a.n.k.of.9@gmail.com"">amb.a.n.k.of.9@gmail.com</a>
<a href=""mailto:a.m.b.ankof9@gmail.com"">a.m.b.ankof9@gmail.com</a>
<a href=""mailto:ambank.of9@gmail.com"">ambank.of9@gmail.com</a>
<a href=""mailto:a.m.b.a.n.ko.f9@gmail.com"">a.m.b.a.n.ko.f9@gmail.com</a>
<a href=""mailto:a.m.b.a.n.kof.9@gmail.com"">a.m.b.a.n.kof.9@gmail.com</a>
<a href=""mailto:amba.n.k.o.f9@gmail.com"">amba.n.k.o.f9@gmail.com</a>
<a href=""mailto:am.bank.o.f9@gmail.com"">am.bank.o.f9@gmail.com</a>
<a href=""mailto:a.m.b.anko.f.9@gmail.com"">a.m.b.anko.f.9@gmail.com</a>
<a href=""mailto:a.m.bankof.9@gmail.com"">a.m.bankof.9@gmail.com</a>
<a href=""mailto:ambanko.f9@gmail.com"">ambanko.f9@gmail.com</a>
<a href=""mailto:a.m.ba.nko.f.9@gmail.com"">a.m.ba.nko.f.9@gmail.com</a>
<a href=""mailto:joblisting@online-bayar.com"">joblisting@online-bayar.com</a>
<a href=""mailto:engentgroupp@gmail.com"">engentgroupp@gmail.com</a>
<a href=""mailto:e.n.ge.n.tg.ro.upp@gmail.com"">e.n.ge.n.tg.ro.upp@gmail.com</a>
<a href=""mailto:eng.en.t.g.r.o.up.p@gmail.com"">eng.en.t.g.r.o.up.p@gmail.com</a>
<a href=""mailto:en.g.en.tgro.u.p.p@gmail.com"">en.g.en.tgro.u.p.p@gmail.com</a>
<a href=""mailto:en.g.e.n.tg.r.oup.p@gmail.com"">en.g.e.n.tg.r.oup.p@gmail.com</a>
<a href=""mailto:eng.en.tg.roup.p@gmail.com"">eng.en.tg.roup.p@gmail.com</a>
<a href=""mailto:e.ng.e.n.tg.r.ou.p.p@gmail.com"">e.ng.e.n.tg.r.ou.p.p@gmail.com</a>
<a href=""mailto:e.ngentgro.upp@gmail.com"">e.ngentgro.upp@gmail.com</a>
<a href=""mailto:e.n.g.e.nt.gr.o.u.pp@gmail.com"">e.n.g.e.nt.gr.o.u.pp@gmail.com</a>
<a href=""mailto:eng.en.t.gr.o.up.p@gmail.com"">eng.en.t.gr.o.up.p@gmail.com</a>
<a href=""mailto:e.n.g.e.nt.gr.o.u.p.p@gmail.com"">e.n.g.e.nt.gr.o.u.p.p@gmail.com</a>
<a href=""mailto:engen.t.g.r.oup.p@gmail.com"">engen.t.g.r.oup.p@gmail.com</a>
<a href=""mailto:e.ng.e.n.t.gro.up.p@gmail.com"">e.ng.e.n.t.gro.up.p@gmail.com</a>
<a href=""mailto:engen.tg.ro.u.p.p@gmail.com"">engen.tg.ro.u.p.p@gmail.com</a>
<a href=""mailto:en.gentg.r.oupp@gmail.com"">en.gentg.r.oupp@gmail.com</a>
<a href=""mailto:e.n.gen.tg.r.ou.p.p@gmail.com"">e.n.gen.tg.r.ou.p.p@gmail.com</a>
<a href=""mailto:e.n.ge.nt.gr.ou.p.p@gmail.com"">e.n.ge.nt.gr.ou.p.p@gmail.com</a>
<a href=""mailto:e.ngentg.ro.u.p.p@gmail.com"">e.ngentg.ro.u.p.p@gmail.com</a>
<a href=""mailto:en.ge.n.tgr.o.u.p.p@gmail.com"">en.ge.n.tgr.o.u.p.p@gmail.com</a>
<a href=""mailto:e.ng.ent.gr.oupp@gmail.com"">e.ng.ent.gr.oupp@gmail.com</a>
<a href=""mailto:eng.e.n.tg.r.ou.pp@gmail.com"">eng.e.n.tg.r.ou.pp@gmail.com</a>
<a href=""mailto:en.gen.t.gr.oup.p@gmail.com"">en.gen.t.gr.oup.p@gmail.com</a>
<a href=""mailto:enge.nt.gr.ou.pp@gmail.com"">enge.nt.gr.ou.pp@gmail.com</a>
<a href=""mailto:e.ngen.tg.r.ou.pp@gmail.com"">e.ngen.tg.r.ou.pp@gmail.com</a>
<a href=""mailto:e.n.ge.n.tgrou.p.p@gmail.com"">e.n.ge.n.tgrou.p.p@gmail.com</a>
<a href=""mailto:en.ge.n.tgr.o.u.pp@gmail.com"">en.ge.n.tgr.o.u.pp@gmail.com</a>
<a href=""mailto:e.ngen.tgr.oup.p@gmail.com"">e.ngen.tgr.oup.p@gmail.com</a>
<a href=""mailto:e.ng.en.t.gro.upp@gmail.com"">e.ng.en.t.gro.upp@gmail.com</a>
<a href=""mailto:e.n.g.en.t.g.roup.p@gmail.com"">e.n.g.en.t.g.roup.p@gmail.com</a>
<a href=""mailto:enge.n.t.g.r.o.u.p.p@gmail.com"">enge.n.t.g.r.o.u.p.p@gmail.com</a>
<a href=""mailto:e.nge.n.tg.r.ou.pp@gmail.com"">e.nge.n.tg.r.ou.pp@gmail.com</a>
<a href=""mailto:en.g.entg.r.o.upp@gmail.com"">en.g.entg.r.o.upp@gmail.com</a>
<a href=""mailto:e.n.g.ent.gr.o.u.p.p@gmail.com"">e.n.g.ent.gr.o.u.p.p@gmail.com</a>
<a href=""mailto:e.n.g.en.tgr.o.upp@gmail.com"">e.n.g.en.tgr.o.upp@gmail.com</a>
<a href=""mailto:e.ng.en.t.gr.oupp@gmail.com"">e.ng.en.t.gr.oupp@gmail.com</a>
<a href=""mailto:e.ng.e.n.tg.ro.u.pp@gmail.com"">e.ng.e.n.tg.ro.u.pp@gmail.com</a>
<a href=""mailto:e.n.ge.ntg.ro.up.p@gmail.com"">e.n.ge.ntg.ro.up.p@gmail.com</a>
<a href=""mailto:e.nge.n.tg.r.o.up.p@gmail.com"">e.nge.n.tg.r.o.up.p@gmail.com</a>
<a href=""mailto:e.ng.e.n.tgrou.p.p@gmail.com"">e.ng.e.n.tgrou.p.p@gmail.com</a>
<a href=""mailto:e.nge.n.t.gr.ou.pp@gmail.com"">e.nge.n.t.gr.ou.pp@gmail.com</a>
<a href=""mailto:e.ngentg.ro.upp@gmail.com"">e.ngentg.ro.upp@gmail.com</a>
<a href=""mailto:eng.en.tg.r.oupp@gmail.com"">eng.en.tg.r.oupp@gmail.com</a>
<a href=""mailto:en.g.en.tgr.oup.p@gmail.com"">en.g.en.tgr.oup.p@gmail.com</a>
<a href=""mailto:e.n.gen.tgrou.pp@gmail.com"">e.n.gen.tgrou.pp@gmail.com</a>
<a href=""mailto:en.ge.nt.gr.o.upp@gmail.com"">en.ge.nt.gr.o.upp@gmail.com</a>
<a href=""mailto:engen.tgro.u.pp@gmail.com"">engen.tgro.u.pp@gmail.com</a>
<a href=""mailto:e.n.g.e.n.t.group.p@gmail.com"">e.n.g.e.n.t.group.p@gmail.com</a>
<a href=""mailto:en.gentgroupp@gmail.com"">en.gentgroupp@gmail.com</a>
<a href=""mailto:en.g.entg.r.oup.p@gmail.com"">en.g.entg.r.oup.p@gmail.com</a>
<a href=""mailto:e.n.g.e.ntg.roup.p@gmail.com"">e.n.g.e.ntg.roup.p@gmail.com</a>
<a href=""mailto:e.n.ge.nt.gro.u.p.p@gmail.com"">e.n.ge.nt.gro.u.p.p@gmail.com</a>
<a href=""mailto:enge.nt.g.r.o.up.p@gmail.com"">enge.nt.g.r.o.up.p@gmail.com</a>
<a href=""mailto:eng.entgro.u.p.p@gmail.com"">eng.entgro.u.p.p@gmail.com</a>
<a href=""mailto:en.gent.g.r.o.upp@gmail.com"">en.gent.g.r.o.upp@gmail.com</a>
<a href=""mailto:eng.e.ntg.r.oup.p@gmail.com"">eng.e.ntg.r.oup.p@gmail.com</a>
<a href=""mailto:eng.en.tgr.ou.p.p@gmail.com"">eng.en.tgr.ou.p.p@gmail.com</a>
<a href=""mailto:e.ngentgr.oup.p@gmail.com"">e.ngentgr.oup.p@gmail.com</a>
<a href=""mailto:en.ge.nt.grou.p.p@gmail.com"">en.ge.nt.grou.p.p@gmail.com</a>
<a href=""mailto:e.ngen.t.gro.u.pp@gmail.com"">e.ngen.t.gro.u.pp@gmail.com</a>
<a href=""mailto:enge.nt.g.rou.pp@gmail.com"">enge.nt.g.rou.pp@gmail.com</a>
<a href=""mailto:en.ge.nt.g.r.ou.pp@gmail.com"">en.ge.nt.g.r.ou.pp@gmail.com</a>
<a href=""mailto:e.n.g.en.t.g.r.o.up.p@gmail.com"">e.n.g.en.t.g.r.o.up.p@gmail.com</a>
<a href=""mailto:e.n.g.e.n.t.g.r.o.u.pp@gmail.com"">e.n.g.e.n.t.g.r.o.u.pp@gmail.com</a>
<a href=""mailto:en.g.en.t.g.r.o.upp@gmail.com"">en.g.en.t.g.r.o.upp@gmail.com</a>
<a href=""mailto:e.n.g.e.n.t.g.roupp@gmail.com"">e.n.g.e.n.t.g.roupp@gmail.com</a>
<a href=""mailto:en.g.entgr.o.up.p@gmail.com"">en.g.entgr.o.up.p@gmail.com</a>
<a href=""mailto:e.ng.en.t.g.rou.p.p@gmail.com"">e.ng.en.t.g.rou.p.p@gmail.com</a>
<a href=""mailto:e.ngen.t.g.rou.p.p@gmail.com"">e.ngen.t.g.rou.p.p@gmail.com</a>
<a href=""mailto:eng.e.n.tgro.upp@gmail.com"">eng.e.n.tgro.upp@gmail.com</a>
<a href=""mailto:e.n.ge.nt.g.r.oup.p@gmail.com"">e.n.ge.nt.g.r.oup.p@gmail.com</a>
<a href=""mailto:eng.en.tg.r.o.u.pp@gmail.com"">eng.en.tg.r.o.u.pp@gmail.com</a>
<a href=""mailto:e.n.g.e.n.t.gro.up.p@gmail.com"">e.n.g.e.n.t.gro.up.p@gmail.com</a>
<a href=""mailto:en.g.e.n.tgr.ou.p.p@gmail.com"">en.g.e.n.tgr.ou.p.p@gmail.com</a>
<a href=""mailto:en.gent.g.r.o.up.p@gmail.com"">en.gent.g.r.o.up.p@gmail.com</a>
<a href=""mailto:e.n.ge.n.t.gro.u.p.p@gmail.com"">e.n.ge.n.t.gro.u.p.p@gmail.com</a>
<a href=""mailto:en.gen.t.g.r.o.u.pp@gmail.com"">en.gen.t.g.r.o.u.pp@gmail.com</a>
<a href=""mailto:e.n.g.e.ntgroupp@gmail.com"">e.n.g.e.ntgroupp@gmail.com</a>
<a href=""mailto:enge.nt.group.p@gmail.com"">enge.nt.group.p@gmail.com</a>
<a href=""mailto:eng.ent.g.r.o.u.pp@gmail.com"">eng.ent.g.r.o.u.pp@gmail.com</a>
<a href=""mailto:en.g.e.n.tg.ro.u.p.p@gmail.com"">en.g.e.n.tg.ro.u.p.p@gmail.com</a>
<a href=""mailto:eng.e.nt.gr.ou.p.p@gmail.com"">eng.e.nt.gr.ou.p.p@gmail.com</a>
<a href=""mailto:e.n.ge.n.t.gr.o.u.pp@gmail.com"">e.n.ge.n.t.gr.o.u.pp@gmail.com</a>
<a href=""mailto:enge.n.tg.rou.pp@gmail.com"">enge.n.tg.rou.pp@gmail.com</a>
<a href=""mailto:e.ngent.g.rou.p.p@gmail.com"">e.ngent.g.rou.p.p@gmail.com</a>
<a href=""mailto:e.n.g.en.tg.ro.up.p@gmail.com"">e.n.g.en.tg.ro.up.p@gmail.com</a>
<a href=""mailto:e.n.gent.g.r.oupp@gmail.com"">e.n.gent.g.r.oupp@gmail.com</a>
<a href=""mailto:e.ngent.gr.o.up.p@gmail.com"">e.ngent.gr.o.up.p@gmail.com</a>
<a href=""mailto:enge.ntgro.u.p.p@gmail.com"">enge.ntgro.u.p.p@gmail.com</a>
<a href=""mailto:en.g.e.n.t.gr.ou.p.p@gmail.com"">en.g.e.n.t.gr.ou.p.p@gmail.com</a>
<a href=""mailto:e.ng.e.n.t.gr.ou.p.p@gmail.com"">e.ng.e.n.t.gr.ou.p.p@gmail.com</a>
<a href=""mailto:eng.e.n.t.g.ro.upp@gmail.com"">eng.e.n.t.g.ro.upp@gmail.com</a>
<a href=""mailto:e.nge.nt.gro.u.pp@gmail.com"">e.nge.nt.gro.u.pp@gmail.com</a>
<a href=""mailto:e.n.g.ent.gr.oupp@gmail.com"">e.n.g.ent.gr.oupp@gmail.com</a>
<a href=""mailto:eng.e.n.t.g.rou.pp@gmail.com"">eng.e.n.t.g.rou.pp@gmail.com</a>
<a href=""mailto:e.nge.n.t.gr.oup.p@gmail.com"">e.nge.n.t.gr.oup.p@gmail.com</a>
<a href=""mailto:en.gentg.r.o.upp@gmail.com"">en.gentg.r.o.upp@gmail.com</a>
<a href=""mailto:enge.ntg.r.oup.p@gmail.com"">enge.ntg.r.oup.p@gmail.com</a>
<a href=""mailto:e.nge.nt.gro.u.p.p@gmail.com"">e.nge.nt.gro.u.p.p@gmail.com</a>
<a href=""mailto:e.n.g.e.n.t.gro.u.p.p@gmail.com"">e.n.g.e.n.t.gro.u.p.p@gmail.com</a>
<a href=""mailto:e.n.ge.ntgro.u.p.p@gmail.com"">e.n.ge.ntgro.u.p.p@gmail.com</a>
<a href=""mailto:en.gent.g.ro.upp@gmail.com"">en.gent.g.ro.upp@gmail.com</a>
<a href=""mailto:eng.ent.g.ro.up.p@gmail.com"">eng.ent.g.ro.up.p@gmail.com</a>
<a href=""mailto:en.gent.gr.o.upp@gmail.com"">en.gent.gr.o.upp@gmail.com</a>
<a href=""mailto:e.ng.en.tgroup.p@gmail.com"">e.ng.en.tgroup.p@gmail.com</a>
<a href=""mailto:en.gen.t.gr.o.u.p.p@gmail.com"">en.gen.t.gr.o.u.p.p@gmail.com</a>
<a href=""mailto:e.n.g.e.n.t.g.r.oup.p@gmail.com"">e.n.g.e.n.t.g.r.oup.p@gmail.com</a>
<a href=""mailto:en.gen.tgr.oup.p@gmail.com"">en.gen.tgr.oup.p@gmail.com</a>
<a href=""mailto:en.g.en.t.grou.pp@gmail.com"">en.g.en.t.grou.pp@gmail.com</a>
<a href=""mailto:e.n.gen.tg.rou.pp@gmail.com"">e.n.gen.tg.rou.pp@gmail.com</a>
<a href=""mailto:en.ge.ntgr.oupp@gmail.com"">en.ge.ntgr.oupp@gmail.com</a>
<a href=""mailto:e.n.g.ent.g.r.o.u.pp@gmail.com"">e.n.g.ent.g.r.o.u.pp@gmail.com</a>
<a href=""mailto:e.n.gent.gr.oup.p@gmail.com"">e.n.gent.gr.oup.p@gmail.com</a>
<a href=""mailto:e.ngent.g.ro.u.pp@gmail.com"">e.ngent.g.ro.u.pp@gmail.com</a>
<a href=""mailto:e.ng.ent.g.rou.p.p@gmail.com"">e.ng.ent.g.rou.p.p@gmail.com</a>
<a href=""mailto:e.ngen.t.g.r.ou.p.p@gmail.com"">e.ngen.t.g.r.ou.p.p@gmail.com</a>
<a href=""mailto:eng.en.t.g.roupp@gmail.com"">eng.en.t.g.roupp@gmail.com</a>
<a href=""mailto:eng.e.ntgr.oupp@gmail.com"">eng.e.ntgr.oupp@gmail.com</a>
<a href=""mailto:e.n.gen.t.g.r.o.up.p@gmail.com"">e.n.gen.t.g.r.o.up.p@gmail.com</a>
<a href=""mailto:e.n.gentgr.ou.pp@gmail.com"">e.n.gentgr.ou.pp@gmail.com</a>
<a href=""mailto:en.g.e.ntgr.ou.pp@gmail.com"">en.g.e.ntgr.ou.pp@gmail.com</a>
<a href=""mailto:en.gent.gr.o.u.p.p@gmail.com"">en.gent.gr.o.u.p.p@gmail.com</a>
<a href=""mailto:eng.e.ntg.r.o.upp@gmail.com"">eng.e.ntg.r.o.upp@gmail.com</a>
<a href=""mailto:e.ng.e.n.tg.rou.p.p@gmail.com"">e.ng.e.n.tg.rou.p.p@gmail.com</a>
<a href=""mailto:e.ng.ent.g.ro.upp@gmail.com"">e.ng.ent.g.ro.upp@gmail.com</a>
<a href=""mailto:e.ng.e.ntgroup.p@gmail.com"">e.ng.e.ntgroup.p@gmail.com</a>
<a href=""mailto:e.n.g.e.n.t.g.ro.upp@gmail.com"">e.n.g.e.n.t.g.ro.upp@gmail.com</a>
<a href=""mailto:en.gen.tg.r.o.up.p@gmail.com"">en.gen.tg.r.o.up.p@gmail.com</a>
<a href=""mailto:e.n.g.en.t.g.r.o.upp@gmail.com"">e.n.g.en.t.g.r.o.upp@gmail.com</a>
<a href=""mailto:en.gentg.r.ou.p.p@gmail.com"">en.gentg.r.ou.p.p@gmail.com</a>
<a href=""mailto:en.gent.grou.p.p@gmail.com"">en.gent.grou.p.p@gmail.com</a>
<a href=""mailto:e.nge.n.tg.r.o.u.pp@gmail.com"">e.nge.n.tg.r.o.u.pp@gmail.com</a>
<a href=""mailto:e.ng.e.ntg.ro.u.p.p@gmail.com"">e.ng.e.ntg.ro.u.p.p@gmail.com</a>
<a href=""mailto:e.n.ge.n.t.g.r.o.upp@gmail.com"">e.n.ge.n.t.g.r.o.upp@gmail.com</a>
<a href=""mailto:engentg.ro.u.pp@gmail.com"">engentg.ro.u.pp@gmail.com</a>
<a href=""mailto:en.g.e.n.t.g.r.o.up.p@gmail.com"">en.g.e.n.t.g.r.o.up.p@gmail.com</a>
<a href=""mailto:e.ngent.grou.pp@gmail.com"">e.ngent.grou.pp@gmail.com</a>
<a href=""mailto:e.n.g.entgr.oupp@gmail.com"">e.n.g.entgr.oupp@gmail.com</a>
<a href=""mailto:en.gent.g.roup.p@gmail.com"">en.gent.g.roup.p@gmail.com</a>
<a href=""mailto:e.n.g.e.nt.g.ro.u.p.p@gmail.com"">e.n.g.e.nt.g.ro.u.p.p@gmail.com</a>
<a href=""mailto:eng.e.nt.gr.oupp@gmail.com"">eng.e.nt.gr.oupp@gmail.com</a>
<a href=""mailto:en.g.entgroupp@gmail.com"">en.g.entgroupp@gmail.com</a>
<a href=""mailto:e.nge.n.t.gro.upp@gmail.com"">e.nge.n.t.gro.upp@gmail.com</a>
<a href=""mailto:eng.e.n.tg.roup.p@gmail.com"">eng.e.n.tg.roup.p@gmail.com</a>
<a href=""mailto:eng.en.tgro.up.p@gmail.com"">eng.en.tgro.up.p@gmail.com</a>
<a href=""mailto:eng.en.t.g.r.oupp@gmail.com"">eng.en.t.g.r.oupp@gmail.com</a>
<a href=""mailto:en.gen.tg.roup.p@gmail.com"">en.gen.tg.roup.p@gmail.com</a>
<a href=""mailto:eng.e.ntg.ro.u.pp@gmail.com"">eng.e.ntg.ro.u.pp@gmail.com</a>
<a href=""mailto:e.n.gentg.r.o.u.pp@gmail.com"">e.n.gentg.r.o.u.pp@gmail.com</a>
<a href=""mailto:e.ng.en.t.groupp@gmail.com"">e.ng.en.t.groupp@gmail.com</a>
<a href=""mailto:e.n.g.e.n.t.g.ro.u.p.p@gmail.com"">e.n.g.e.n.t.g.ro.u.p.p@gmail.com</a>
<a href=""mailto:en.ge.n.tg.r.o.upp@gmail.com"">en.ge.n.tg.r.o.upp@gmail.com</a>
<a href=""mailto:e.nge.ntgr.ou.p.p@gmail.com"">e.nge.ntgr.ou.p.p@gmail.com</a>
<a href=""mailto:e.ng.entgr.ou.p.p@gmail.com"">e.ng.entgr.ou.p.p@gmail.com</a>
<a href=""mailto:eng.e.ntg.r.o.u.pp@gmail.com"">eng.e.ntg.r.o.u.pp@gmail.com</a>
<a href=""mailto:e.ng.en.tgro.up.p@gmail.com"">e.ng.en.tgro.up.p@gmail.com</a>
<a href=""mailto:engent.g.ro.u.pp@gmail.com"">engent.g.ro.u.pp@gmail.com</a>
<a href=""mailto:eng.e.n.t.g.rou.p.p@gmail.com"">eng.e.n.t.g.rou.p.p@gmail.com</a>
<a href=""mailto:en.ge.n.tg.r.ou.p.p@gmail.com"">en.ge.n.tg.r.ou.p.p@gmail.com</a>
<a href=""mailto:e.ng.en.tgroupp@gmail.com"">e.ng.en.tgroupp@gmail.com</a>
<a href=""mailto:e.n.ge.ntgr.oupp@gmail.com"">e.n.ge.ntgr.oupp@gmail.com</a>
<a href=""mailto:e.ngent.gro.up.p@gmail.com"">e.ngent.gro.up.p@gmail.com</a>
<a href=""mailto:engen.tgro.u.p.p@gmail.com"">engen.tgro.u.p.p@gmail.com</a>
<a href=""mailto:en.gen.tgro.u.pp@gmail.com"">en.gen.tgro.u.pp@gmail.com</a>
<a href=""mailto:e.ng.e.nt.gro.upp@gmail.com"">e.ng.e.nt.gro.upp@gmail.com</a>
<a href=""mailto:en.ge.ntgr.o.u.p.p@gmail.com"">en.ge.ntgr.o.u.p.p@gmail.com</a>
<a href=""mailto:e.nge.ntg.r.o.up.p@gmail.com"">e.nge.ntg.r.o.up.p@gmail.com</a>
<a href=""mailto:en.g.en.t.g.ro.upp@gmail.com"">en.g.en.t.g.ro.upp@gmail.com</a>
<a href=""mailto:en.gen.t.grou.pp@gmail.com"">en.gen.t.grou.pp@gmail.com</a>
<a href=""mailto:e.n.gent.g.r.ou.pp@gmail.com"">e.n.gent.g.r.ou.pp@gmail.com</a>
<a href=""mailto:e.nge.nt.g.ro.u.pp@gmail.com"">e.nge.nt.g.ro.u.pp@gmail.com</a>
<a href=""mailto:eng.en.t.g.r.ou.p.p@gmail.com"">eng.en.t.g.r.ou.p.p@gmail.com</a>
<a href=""mailto:e.n.gen.t.g.ro.upp@gmail.com"">e.n.gen.t.g.ro.upp@gmail.com</a>
<a href=""mailto:en.ge.n.tgro.up.p@gmail.com"">en.ge.n.tgro.up.p@gmail.com</a>
<a href=""mailto:eng.e.nt.g.ro.up.p@gmail.com"">eng.e.nt.g.ro.up.p@gmail.com</a>
<a href=""mailto:e.ng.e.ntg.rou.pp@gmail.com"">e.ng.e.ntg.rou.pp@gmail.com</a>
<a href=""mailto:e.ngen.tgr.ou.pp@gmail.com"">e.ngen.tgr.ou.pp@gmail.com</a>
<a href=""mailto:eng.e.n.t.g.r.ou.pp@gmail.com"">eng.e.n.t.g.r.ou.pp@gmail.com</a>
<a href=""mailto:e.ng.en.t.group.p@gmail.com"">e.ng.en.t.group.p@gmail.com</a>
<a href=""mailto:en.ge.n.tg.ro.u.p.p@gmail.com"">en.ge.n.tg.ro.u.p.p@gmail.com</a>
<a href=""mailto:eng.e.nt.gro.up.p@gmail.com"">eng.e.nt.gro.up.p@gmail.com</a>
<a href=""mailto:e.ngen.t.gr.oup.p@gmail.com"">e.ngen.t.gr.oup.p@gmail.com</a>
<a href=""mailto:e.n.g.entgro.u.p.p@gmail.com"">e.n.g.entgro.u.p.p@gmail.com</a>
<a href=""mailto:en.g.e.nt.groupp@gmail.com"">en.g.e.nt.groupp@gmail.com</a>
<a href=""mailto:e.ng.entgro.u.pp@gmail.com"">e.ng.entgro.u.pp@gmail.com</a>
<a href=""mailto:enge.nt.gr.o.u.pp@gmail.com"">enge.nt.gr.o.u.pp@gmail.com</a>
<a href=""mailto:en.g.entg.r.o.u.p.p@gmail.com"">en.g.entg.r.o.u.p.p@gmail.com</a>
<a href=""mailto:en.g.ent.g.ro.u.p.p@gmail.com"">en.g.ent.g.ro.u.p.p@gmail.com</a>
<a href=""mailto:enge.ntg.roup.p@gmail.com"">enge.ntg.roup.p@gmail.com</a>
<a href=""mailto:en.ge.ntgrou.p.p@gmail.com"">en.ge.ntgrou.p.p@gmail.com</a>
<a href=""mailto:en.ge.n.tgro.upp@gmail.com"">en.ge.n.tgro.upp@gmail.com</a>
<a href=""mailto:e.ng.e.n.tgr.ou.pp@gmail.com"">e.ng.e.n.tgr.ou.pp@gmail.com</a>
<a href=""mailto:e.n.ge.n.t.gro.upp@gmail.com"">e.n.ge.n.t.gro.upp@gmail.com</a>
<a href=""mailto:eng.e.nt.gr.o.u.p.p@gmail.com"">eng.e.nt.gr.o.u.p.p@gmail.com</a>
<a href=""mailto:e.n.gen.t.gro.up.p@gmail.com"">e.n.gen.t.gro.up.p@gmail.com</a>
<a href=""mailto:en.ge.n.t.gr.o.upp@gmail.com"">en.ge.n.t.gr.o.upp@gmail.com</a>
<a href=""mailto:en.gent.group.p@gmail.com"">en.gent.group.p@gmail.com</a>
<a href=""mailto:e.n.gent.g.r.o.up.p@gmail.com"">e.n.gent.g.r.o.up.p@gmail.com</a>
<a href=""mailto:e.ng.e.nt.g.r.ou.p.p@gmail.com"">e.ng.e.nt.g.r.ou.p.p@gmail.com</a>
<a href=""mailto:e.n.gen.tg.r.o.u.pp@gmail.com"">e.n.gen.tg.r.o.u.pp@gmail.com</a>
<a href=""mailto:en.g.ent.gro.u.p.p@gmail.com"">en.g.ent.gro.u.p.p@gmail.com</a>
<a href=""mailto:enge.n.tgrou.p.p@gmail.com"">enge.n.tgrou.p.p@gmail.com</a>
<a href=""mailto:abankof302@gmail.com"">abankof302@gmail.com</a>
<a href=""mailto:ab.an.k.o.f.3.02@gmail.com"">ab.an.k.o.f.3.02@gmail.com</a>
<a href=""mailto:aban.ko.f.302@gmail.com"">aban.ko.f.302@gmail.com</a>
<a href=""mailto:ab.a.nk.o.f.30.2@gmail.com"">ab.a.nk.o.f.30.2@gmail.com</a>
<a href=""mailto:aba.n.ko.f3.0.2@gmail.com"">aba.n.ko.f3.0.2@gmail.com</a>
<a href=""mailto:aban.kof.3.02@gmail.com"">aban.kof.3.02@gmail.com</a>
<a href=""mailto:a.b.a.nk.of.3.02@gmail.com"">a.b.a.nk.of.3.02@gmail.com</a>
<a href=""mailto:ab.a.nk.of30.2@gmail.com"">ab.a.nk.of30.2@gmail.com</a>
<a href=""mailto:a.b.a.n.ko.f302@gmail.com"">a.b.a.n.ko.f302@gmail.com</a>
<a href=""mailto:aban.k.o.f.302@gmail.com"">aban.k.o.f.302@gmail.com</a>
<a href=""mailto:ab.a.nk.o.f.302@gmail.com"">ab.a.nk.o.f.302@gmail.com</a>
<a href=""mailto:ab.an.kof302@gmail.com"">ab.an.kof302@gmail.com</a>
<a href=""mailto:a.bank.o.f.30.2@gmail.com"">a.bank.o.f.30.2@gmail.com</a>
<a href=""mailto:a.ba.nkof302@gmail.com"">a.ba.nkof302@gmail.com</a>
<a href=""mailto:abank.of.30.2@gmail.com"">abank.of.30.2@gmail.com</a>
<a href=""mailto:aba.n.k.of.3.02@gmail.com"">aba.n.k.of.3.02@gmail.com</a>
<a href=""mailto:aban.ko.f3.0.2@gmail.com"">aban.ko.f3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.n.k.of.302@gmail.com"">a.b.a.n.k.of.302@gmail.com</a>
<a href=""mailto:ab.a.n.ko.f302@gmail.com"">ab.a.n.ko.f302@gmail.com</a>
<a href=""mailto:ab.anko.f302@gmail.com"">ab.anko.f302@gmail.com</a>
<a href=""mailto:a.ba.nkof.3.0.2@gmail.com"">a.ba.nkof.3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.nk.o.f30.2@gmail.com"">a.b.a.nk.o.f30.2@gmail.com</a>
<a href=""mailto:a.b.a.n.kof3.02@gmail.com"">a.b.a.n.kof3.02@gmail.com</a>
<a href=""mailto:abank.o.f302@gmail.com"">abank.o.f302@gmail.com</a>
<a href=""mailto:a.b.a.nko.f30.2@gmail.com"">a.b.a.nko.f30.2@gmail.com</a>
<a href=""mailto:ab.an.kof.3.02@gmail.com"">ab.an.kof.3.02@gmail.com</a>
<a href=""mailto:a.b.a.nk.o.f3.0.2@gmail.com"">a.b.a.nk.o.f3.0.2@gmail.com</a>
<a href=""mailto:ab.an.k.of302@gmail.com"">ab.an.k.of302@gmail.com</a>
<a href=""mailto:a.ba.n.k.of30.2@gmail.com"">a.ba.n.k.of30.2@gmail.com</a>
<a href=""mailto:abank.o.f.302@gmail.com"">abank.o.f.302@gmail.com</a>
<a href=""mailto:ab.ank.of30.2@gmail.com"">ab.ank.of30.2@gmail.com</a>
<a href=""mailto:a.ba.n.k.o.f.302@gmail.com"">a.ba.n.k.o.f.302@gmail.com</a>
<a href=""mailto:ab.an.ko.f30.2@gmail.com"">ab.an.ko.f30.2@gmail.com</a>
<a href=""mailto:a.b.an.ko.f30.2@gmail.com"">a.b.an.ko.f30.2@gmail.com</a>
<a href=""mailto:ab.a.nk.of.302@gmail.com"">ab.a.nk.of.302@gmail.com</a>
<a href=""mailto:abanko.f.302@gmail.com"">abanko.f.302@gmail.com</a>
<a href=""mailto:ab.ank.of302@gmail.com"">ab.ank.of302@gmail.com</a>
<a href=""mailto:aba.n.k.o.f.3.02@gmail.com"">aba.n.k.o.f.3.02@gmail.com</a>
<a href=""mailto:a.b.a.nk.o.f3.02@gmail.com"">a.b.a.nk.o.f3.02@gmail.com</a>
<a href=""mailto:abank.of.3.02@gmail.com"">abank.of.3.02@gmail.com</a>
<a href=""mailto:ab.a.n.ko.f30.2@gmail.com"">ab.a.n.ko.f30.2@gmail.com</a>
<a href=""mailto:a.ba.nkof30.2@gmail.com"">a.ba.nkof30.2@gmail.com</a>
<a href=""mailto:ab.an.k.o.f3.0.2@gmail.com"">ab.an.k.o.f3.0.2@gmail.com</a>
<a href=""mailto:a.ban.kof302@gmail.com"">a.ban.kof302@gmail.com</a>
<a href=""mailto:a.bankof.30.2@gmail.com"">a.bankof.30.2@gmail.com</a>
<a href=""mailto:abank.of3.02@gmail.com"">abank.of3.02@gmail.com</a>
<a href=""mailto:a.b.a.nko.f.302@gmail.com"">a.b.a.nko.f.302@gmail.com</a>
<a href=""mailto:a.ba.n.k.of302@gmail.com"">a.ba.n.k.of302@gmail.com</a>
<a href=""mailto:ab.a.nk.of.3.0.2@gmail.com"">ab.a.nk.of.3.0.2@gmail.com</a>
<a href=""mailto:abanko.f30.2@gmail.com"">abanko.f30.2@gmail.com</a>
<a href=""mailto:aba.nk.of.3.0.2@gmail.com"">aba.nk.of.3.0.2@gmail.com</a>
<a href=""mailto:a.b.an.kof30.2@gmail.com"">a.b.an.kof30.2@gmail.com</a>
<a href=""mailto:aba.nk.o.f3.02@gmail.com"">aba.nk.o.f3.02@gmail.com</a>
<a href=""mailto:a.ba.nk.o.f3.0.2@gmail.com"">a.ba.nk.o.f3.0.2@gmail.com</a>
<a href=""mailto:ab.a.n.k.of3.0.2@gmail.com"">ab.a.n.k.of3.0.2@gmail.com</a>
<a href=""mailto:aban.ko.f.3.0.2@gmail.com"">aban.ko.f.3.0.2@gmail.com</a>
<a href=""mailto:a.bank.o.f.302@gmail.com"">a.bank.o.f.302@gmail.com</a>
<a href=""mailto:abankof.302@gmail.com"">abankof.302@gmail.com</a>
<a href=""mailto:a.b.a.n.ko.f.3.0.2@gmail.com"">a.b.a.n.ko.f.3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.nk.of3.0.2@gmail.com"">a.b.a.nk.of3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.n.ko.f3.0.2@gmail.com"">a.b.a.n.ko.f3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.nkof.3.02@gmail.com"">a.b.a.nkof.3.02@gmail.com</a>
<a href=""mailto:a.ba.nk.o.f30.2@gmail.com"">a.ba.nk.o.f30.2@gmail.com</a>
<a href=""mailto:a.ban.kof.302@gmail.com"">a.ban.kof.302@gmail.com</a>
<a href=""mailto:ab.a.nk.o.f30.2@gmail.com"">ab.a.nk.o.f30.2@gmail.com</a>
<a href=""mailto:aba.nko.f30.2@gmail.com"">aba.nko.f30.2@gmail.com</a>
<a href=""mailto:abanko.f3.02@gmail.com"">abanko.f3.02@gmail.com</a>
<a href=""mailto:a.b.ank.o.f.3.0.2@gmail.com"">a.b.ank.o.f.3.0.2@gmail.com</a>
<a href=""mailto:ab.ank.o.f.3.02@gmail.com"">ab.ank.o.f.3.02@gmail.com</a>
<a href=""mailto:a.ban.ko.f.3.02@gmail.com"">a.ban.ko.f.3.02@gmail.com</a>
<a href=""mailto:ab.a.n.kof30.2@gmail.com"">ab.a.n.kof30.2@gmail.com</a>
<a href=""mailto:a.b.ank.of.3.02@gmail.com"">a.b.ank.of.3.02@gmail.com</a>
<a href=""mailto:a.banko.f.302@gmail.com"">a.banko.f.302@gmail.com</a>
<a href=""mailto:a.ba.nkof3.0.2@gmail.com"">a.ba.nkof3.0.2@gmail.com</a>
<a href=""mailto:abankof30.2@gmail.com"">abankof30.2@gmail.com</a>
<a href=""mailto:abank.o.f30.2@gmail.com"">abank.o.f30.2@gmail.com</a>
<a href=""mailto:a.b.an.k.of3.0.2@gmail.com"">a.b.an.k.of3.0.2@gmail.com</a>
<a href=""mailto:abankof.3.0.2@gmail.com"">abankof.3.0.2@gmail.com</a>
<a href=""mailto:a.ban.k.o.f3.02@gmail.com"">a.ban.k.o.f3.02@gmail.com</a>
<a href=""mailto:a.b.a.n.k.o.f.3.0.2@gmail.com"">a.b.a.n.k.o.f.3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.n.kof302@gmail.com"">a.b.a.n.kof302@gmail.com</a>
<a href=""mailto:ab.ankof302@gmail.com"">ab.ankof302@gmail.com</a>
<a href=""mailto:a.bankof.302@gmail.com"">a.bankof.302@gmail.com</a>
<a href=""mailto:aba.nk.of302@gmail.com"">aba.nk.of302@gmail.com</a>
<a href=""mailto:a.b.a.nkof.302@gmail.com"">a.b.a.nkof.302@gmail.com</a>
<a href=""mailto:ab.a.nkof.302@gmail.com"">ab.a.nkof.302@gmail.com</a>
<a href=""mailto:a.b.a.n.k.o.f.302@gmail.com"">a.b.a.n.k.o.f.302@gmail.com</a>
<a href=""mailto:a.b.a.n.kof.302@gmail.com"">a.b.a.n.kof.302@gmail.com</a>
<a href=""mailto:ab.a.n.kof.302@gmail.com"">ab.a.n.kof.302@gmail.com</a>
<a href=""mailto:ab.ank.o.f3.0.2@gmail.com"">ab.ank.o.f3.0.2@gmail.com</a>
<a href=""mailto:ab.a.n.k.o.f3.02@gmail.com"">ab.a.n.k.o.f3.02@gmail.com</a>
<a href=""mailto:ab.a.nkof3.0.2@gmail.com"">ab.a.nkof3.0.2@gmail.com</a>
<a href=""mailto:a.ba.nko.f.3.02@gmail.com"">a.ba.nko.f.3.02@gmail.com</a>
<a href=""mailto:abank.of302@gmail.com"">abank.of302@gmail.com</a>
<a href=""mailto:a.b.an.k.o.f3.0.2@gmail.com"">a.b.an.k.o.f3.0.2@gmail.com</a>
<a href=""mailto:a.ban.kof.3.02@gmail.com"">a.ban.kof.3.02@gmail.com</a>
<a href=""mailto:a.b.a.nk.of30.2@gmail.com"">a.b.a.nk.of30.2@gmail.com</a>
<a href=""mailto:aba.nko.f.3.02@gmail.com"">aba.nko.f.3.02@gmail.com</a>
<a href=""mailto:aba.n.ko.f.302@gmail.com"">aba.n.ko.f.302@gmail.com</a>
<a href=""mailto:ab.a.nko.f302@gmail.com"">ab.a.nko.f302@gmail.com</a>
<a href=""mailto:a.ba.n.ko.f3.02@gmail.com"">a.ba.n.ko.f3.02@gmail.com</a>
<a href=""mailto:ab.a.nko.f3.02@gmail.com"">ab.a.nko.f3.02@gmail.com</a>
<a href=""mailto:a.ban.kof3.02@gmail.com"">a.ban.kof3.02@gmail.com</a>
<a href=""mailto:a.bank.of.30.2@gmail.com"">a.bank.of.30.2@gmail.com</a>
<a href=""mailto:ab.ankof3.0.2@gmail.com"">ab.ankof3.0.2@gmail.com</a>
<a href=""mailto:abankof.30.2@gmail.com"">abankof.30.2@gmail.com</a>
<a href=""mailto:aba.n.kof.3.02@gmail.com"">aba.n.kof.3.02@gmail.com</a>
<a href=""mailto:ab.a.n.k.of.30.2@gmail.com"">ab.a.n.k.of.30.2@gmail.com</a>
<a href=""mailto:a.b.a.n.k.of.30.2@gmail.com"">a.b.a.n.k.of.30.2@gmail.com</a>
<a href=""mailto:ab.an.k.o.f3.02@gmail.com"">ab.an.k.o.f3.02@gmail.com</a>
<a href=""mailto:ab.a.nk.of302@gmail.com"">ab.a.nk.of302@gmail.com</a>
<a href=""mailto:a.b.anko.f3.02@gmail.com"">a.b.anko.f3.02@gmail.com</a>
<a href=""mailto:aban.k.o.f302@gmail.com"">aban.k.o.f302@gmail.com</a>
<a href=""mailto:a.ban.k.of.3.02@gmail.com"">a.ban.k.of.3.02@gmail.com</a>
<a href=""mailto:a.bank.o.f3.02@gmail.com"">a.bank.o.f3.02@gmail.com</a>
<a href=""mailto:ab.a.n.k.o.f3.0.2@gmail.com"">ab.a.n.k.o.f3.0.2@gmail.com</a>
<a href=""mailto:ab.a.n.k.of302@gmail.com"">ab.a.n.k.of302@gmail.com</a>
<a href=""mailto:aban.kof.30.2@gmail.com"">aban.kof.30.2@gmail.com</a>
<a href=""mailto:aba.n.kof302@gmail.com"">aba.n.kof302@gmail.com</a>
<a href=""mailto:ab.a.n.kof3.02@gmail.com"">ab.a.n.kof3.02@gmail.com</a>
<a href=""mailto:a.b.a.n.kof.3.0.2@gmail.com"">a.b.a.n.kof.3.0.2@gmail.com</a>
<a href=""mailto:ab.a.n.k.of.3.0.2@gmail.com"">ab.a.n.k.of.3.0.2@gmail.com</a>
<a href=""mailto:ab.an.k.of.302@gmail.com"">ab.an.k.of.302@gmail.com</a>
<a href=""mailto:ab.a.nkof.3.0.2@gmail.com"">ab.a.nkof.3.0.2@gmail.com</a>
<a href=""mailto:aba.nkof3.0.2@gmail.com"">aba.nkof3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.n.k.of.3.0.2@gmail.com"">a.b.a.n.k.of.3.0.2@gmail.com</a>
<a href=""mailto:aba.nko.f.3.0.2@gmail.com"">aba.nko.f.3.0.2@gmail.com</a>
<a href=""mailto:ab.an.kof.3.0.2@gmail.com"">ab.an.kof.3.0.2@gmail.com</a>
<a href=""mailto:a.ban.k.o.f30.2@gmail.com"">a.ban.k.o.f30.2@gmail.com</a>
<a href=""mailto:aba.n.k.of3.0.2@gmail.com"">aba.n.k.of3.0.2@gmail.com</a>
<a href=""mailto:aba.n.kof30.2@gmail.com"">aba.n.kof30.2@gmail.com</a>
<a href=""mailto:ab.a.nko.f.3.0.2@gmail.com"">ab.a.nko.f.3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.n.k.of30.2@gmail.com"">a.b.a.n.k.of30.2@gmail.com</a>
<a href=""mailto:ab.a.nk.of3.02@gmail.com"">ab.a.nk.of3.02@gmail.com</a>
<a href=""mailto:a.ban.k.of3.0.2@gmail.com"">a.ban.k.of3.0.2@gmail.com</a>
<a href=""mailto:ab.a.nko.f.30.2@gmail.com"">ab.a.nko.f.30.2@gmail.com</a>
<a href=""mailto:ab.a.nk.of.3.02@gmail.com"">ab.a.nk.of.3.02@gmail.com</a>
<a href=""mailto:a.ba.n.kof30.2@gmail.com"">a.ba.n.kof30.2@gmail.com</a>
<a href=""mailto:aba.n.k.of.30.2@gmail.com"">aba.n.k.of.30.2@gmail.com</a>
<a href=""mailto:a.bank.o.f.3.0.2@gmail.com"">a.bank.o.f.3.0.2@gmail.com</a>
<a href=""mailto:aba.nkof302@gmail.com"">aba.nkof302@gmail.com</a>
<a href=""mailto:aban.k.of.30.2@gmail.com"">aban.k.of.30.2@gmail.com</a>
<a href=""mailto:aban.k.o.f.30.2@gmail.com"">aban.k.o.f.30.2@gmail.com</a>
<a href=""mailto:a.ba.n.k.o.f.3.02@gmail.com"">a.ba.n.k.o.f.3.02@gmail.com</a>
<a href=""mailto:a.ban.kof3.0.2@gmail.com"">a.ban.kof3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.nk.of.3.0.2@gmail.com"">a.b.a.nk.of.3.0.2@gmail.com</a>
<a href=""mailto:a.ba.n.ko.f.3.02@gmail.com"">a.ba.n.ko.f.3.02@gmail.com</a>
<a href=""mailto:a.ba.nk.of3.02@gmail.com"">a.ba.nk.of3.02@gmail.com</a>
<a href=""mailto:ab.a.n.ko.f.3.0.2@gmail.com"">ab.a.n.ko.f.3.0.2@gmail.com</a>
<a href=""mailto:a.b.an.kof3.02@gmail.com"">a.b.an.kof3.02@gmail.com</a>
<a href=""mailto:a.b.ank.of3.0.2@gmail.com"">a.b.ank.of3.0.2@gmail.com</a>
<a href=""mailto:aba.nk.o.f.30.2@gmail.com"">aba.nk.o.f.30.2@gmail.com</a>
<a href=""mailto:a.ban.ko.f.30.2@gmail.com"">a.ban.ko.f.30.2@gmail.com</a>
<a href=""mailto:a.ban.k.o.f302@gmail.com"">a.ban.k.o.f302@gmail.com</a>
<a href=""mailto:ab.ank.of.30.2@gmail.com"">ab.ank.of.30.2@gmail.com</a>
<a href=""mailto:a.banko.f.3.0.2@gmail.com"">a.banko.f.3.0.2@gmail.com</a>
<a href=""mailto:aba.n.k.o.f3.0.2@gmail.com"">aba.n.k.o.f3.0.2@gmail.com</a>
<a href=""mailto:ab.anko.f.3.0.2@gmail.com"">ab.anko.f.3.0.2@gmail.com</a>
<a href=""mailto:aba.nk.of3.0.2@gmail.com"">aba.nk.of3.0.2@gmail.com</a>
<a href=""mailto:a.bank.of.302@gmail.com"">a.bank.of.302@gmail.com</a>
<a href=""mailto:ab.an.k.o.f.30.2@gmail.com"">ab.an.k.o.f.30.2@gmail.com</a>
<a href=""mailto:aba.n.kof3.02@gmail.com"">aba.n.kof3.02@gmail.com</a>
<a href=""mailto:abankof3.0.2@gmail.com"">abankof3.0.2@gmail.com</a>
<a href=""mailto:ab.a.nko.f.3.02@gmail.com"">ab.a.nko.f.3.02@gmail.com</a>
<a href=""mailto:aba.nkof.30.2@gmail.com"">aba.nkof.30.2@gmail.com</a>
<a href=""mailto:aba.n.k.of.3.0.2@gmail.com"">aba.n.k.of.3.0.2@gmail.com</a>
<a href=""mailto:a.ba.nko.f302@gmail.com"">a.ba.nko.f302@gmail.com</a>
<a href=""mailto:ab.ank.o.f.3.0.2@gmail.com"">ab.ank.o.f.3.0.2@gmail.com</a>
<a href=""mailto:aba.n.ko.f30.2@gmail.com"">aba.n.ko.f30.2@gmail.com</a>
<a href=""mailto:a.b.an.kof3.0.2@gmail.com"">a.b.an.kof3.0.2@gmail.com</a>
<a href=""mailto:a.ban.k.o.f.3.02@gmail.com"">a.ban.k.o.f.3.02@gmail.com</a>
<a href=""mailto:ab.ankof.30.2@gmail.com"">ab.ankof.30.2@gmail.com</a>
<a href=""mailto:a.ban.ko.f.3.0.2@gmail.com"">a.ban.ko.f.3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.nko.f3.02@gmail.com"">a.b.a.nko.f3.02@gmail.com</a>
<a href=""mailto:ab.an.ko.f302@gmail.com"">ab.an.ko.f302@gmail.com</a>
<a href=""mailto:a.b.a.n.k.o.f3.0.2@gmail.com"">a.b.a.n.k.o.f3.0.2@gmail.com</a>
<a href=""mailto:a.b.a.n.kof.30.2@gmail.com"">a.b.a.n.kof.30.2@gmail.com</a>
<a href=""mailto:a.b.ank.of302@gmail.com"">a.b.ank.of302@gmail.com</a>
<a href=""mailto:a.ba.nko.f.30.2@gmail.com"">a.ba.nko.f.30.2@gmail.com</a>
<a href=""mailto:a.banko.f30.2@gmail.com"">a.banko.f30.2@gmail.com</a>
<a href=""mailto:a.ba.n.k.of.3.02@gmail.com"">a.ba.n.k.of.3.02@gmail.com</a>
<a href=""mailto:ab.a.n.kof3.0.2@gmail.com"">ab.a.n.kof3.0.2@gmail.com</a>
<a href=""mailto:a.ba.nk.of.30.2@gmail.com"">a.ba.nk.of.30.2@gmail.com</a>
<a href=""mailto:a.b.a.n.k.of3.0.2@gmail.com"">a.b.a.n.k.of3.0.2@gmail.com</a>
<a href=""mailto:ab.a.n.ko.f.30.2@gmail.com"">ab.a.n.ko.f.30.2@gmail.com</a>
<a href=""mailto:a.ba.n.kof.3.02@gmail.com"">a.ba.n.kof.3.02@gmail.com</a>
<a href=""mailto:a.bank.of3.02@gmail.com"">a.bank.of3.02@gmail.com</a>
<a href=""mailto:aba.n.k.of302@gmail.com"">aba.n.k.of302@gmail.com</a>
<a href=""mailto:aba.nko.f3.02@gmail.com"">aba.nko.f3.02@gmail.com</a>
<a href=""mailto:a.b.an.kof.302@gmail.com"">a.b.an.kof.302@gmail.com</a>
<a href=""mailto:ab.a.n.kof.3.0.2@gmail.com"">ab.a.n.kof.3.0.2@gmail.com</a>
<a href=""mailto:aba.nk.o.f302@gmail.com"">aba.nk.o.f302@gmail.com</a>
<a href=""mailto:a.ba.nk.of30.2@gmail.com"">a.ba.nk.of30.2@gmail.com</a>
<a href=""mailto:aba.n.k.o.f302@gmail.com"">aba.n.k.o.f302@gmail.com</a>
<a href=""mailto:a.b.a.n.ko.f.302@gmail.com"">a.b.a.n.ko.f.302@gmail.com</a>
<a href=""mailto:aba.nk.o.f3.0.2@gmail.com"">aba.nk.o.f3.0.2@gmail.com</a>
<a href=""mailto:aba.n.k.o.f.3.0.2@gmail.com"">aba.n.k.o.f.3.0.2@gmail.com</a>
<a href=""mailto:a.b.ank.o.f.3.02@gmail.com"">a.b.ank.o.f.3.02@gmail.com</a>
<a href=""mailto:aba.n.k.o.f3.02@gmail.com"">aba.n.k.o.f3.02@gmail.com</a>
<a href=""mailto:a.ba.nk.of3.0.2@gmail.com"">a.ba.nk.of3.0.2@gmail.com</a>
<a href=""mailto:a.ba.n.kof3.02@gmail.com"">a.ba.n.kof3.02@gmail.com</a>
<a href=""mailto:dhlffice@gmail.com"">dhlffice@gmail.com</a>
<a href=""mailto:dh.l.ff.ic.e@gmail.com"">dh.l.ff.ic.e@gmail.com</a>
<a href=""mailto:dhlf.f.ic.e@gmail.com"">dhlf.f.ic.e@gmail.com</a>
<a href=""mailto:d.hl.ffi.c.e@gmail.com"">d.hl.ffi.c.e@gmail.com</a>
<a href=""mailto:d.hlff.ice@gmail.com"">d.hlff.ice@gmail.com</a>
<a href=""mailto:dhlf.fi.ce@gmail.com"">dhlf.fi.ce@gmail.com</a>
<a href=""mailto:dhlf.f.i.c.e@gmail.com"">dhlf.f.i.c.e@gmail.com</a>
<a href=""mailto:d.hlffi.ce@gmail.com"">d.hlffi.ce@gmail.com</a>
<a href=""mailto:dhl.ff.i.c.e@gmail.com"">dhl.ff.i.c.e@gmail.com</a>
<a href=""mailto:d.hlf.fi.c.e@gmail.com"">d.hlf.fi.c.e@gmail.com</a>
<a href=""mailto:d.h.lf.f.i.ce@gmail.com"">d.h.lf.f.i.ce@gmail.com</a>
<a href=""mailto:dhl.f.fic.e@gmail.com"">dhl.f.fic.e@gmail.com</a>
<a href=""mailto:d.h.lff.i.ce@gmail.com"">d.h.lff.i.ce@gmail.com</a>
<a href=""mailto:dh.l.f.fi.ce@gmail.com"">dh.l.f.fi.ce@gmail.com</a>
<a href=""mailto:dh.lffi.c.e@gmail.com"">dh.lffi.c.e@gmail.com</a>
<a href=""mailto:d.hlffi.c.e@gmail.com"">d.hlffi.c.e@gmail.com</a>
<a href=""mailto:dh.l.ffi.ce@gmail.com"">dh.l.ffi.ce@gmail.com</a>
<a href=""mailto:d.h.l.ffi.ce@gmail.com"">d.h.l.ffi.ce@gmail.com</a>
<a href=""mailto:dh.l.f.f.ic.e@gmail.com"">dh.l.f.f.ic.e@gmail.com</a>
<a href=""mailto:d.hlf.f.i.c.e@gmail.com"">d.hlf.f.i.c.e@gmail.com</a>
<a href=""mailto:dhl.ffi.ce@gmail.com"">dhl.ffi.ce@gmail.com</a>
<a href=""mailto:d.h.lff.i.c.e@gmail.com"">d.h.lff.i.c.e@gmail.com</a>
<a href=""mailto:dhl.f.fi.ce@gmail.com"">dhl.f.fi.ce@gmail.com</a>
<a href=""mailto:dhlff.ic.e@gmail.com"">dhlff.ic.e@gmail.com</a>
<a href=""mailto:d.h.lffic.e@gmail.com"">d.h.lffic.e@gmail.com</a>
<a href=""mailto:d.hlf.f.ice@gmail.com"">d.hlf.f.ice@gmail.com</a>
<a href=""mailto:d.hl.ffic.e@gmail.com"">d.hl.ffic.e@gmail.com</a>
<a href=""mailto:dhl.ffi.c.e@gmail.com"">dhl.ffi.c.e@gmail.com</a>
<a href=""mailto:dh.lf.f.ic.e@gmail.com"">dh.lf.f.ic.e@gmail.com</a>
<a href=""mailto:dh.lff.i.ce@gmail.com"">dh.lff.i.ce@gmail.com</a>
<a href=""mailto:dhlf.fice@gmail.com"">dhlf.fice@gmail.com</a>
<a href=""mailto:d.h.l.f.fi.c.e@gmail.com"">d.h.l.f.fi.c.e@gmail.com</a>
<a href=""mailto:dh.lf.f.i.ce@gmail.com"">dh.lf.f.i.ce@gmail.com</a>
<a href=""mailto:dh.l.ff.ice@gmail.com"">dh.l.ff.ice@gmail.com</a>
<a href=""mailto:dhlffic.e@gmail.com"">dhlffic.e@gmail.com</a>
<a href=""mailto:dhlf.f.ice@gmail.com"">dhlf.f.ice@gmail.com</a>
<a href=""mailto:d.h.l.f.f.ic.e@gmail.com"">d.h.l.f.f.ic.e@gmail.com</a>
<a href=""mailto:dh.l.ffic.e@gmail.com"">dh.l.ffic.e@gmail.com</a>
<a href=""mailto:d.h.lf.f.ic.e@gmail.com"">d.h.lf.f.ic.e@gmail.com</a>
<a href=""mailto:d.hl.ff.ice@gmail.com"">d.hl.ff.ice@gmail.com</a>
<a href=""mailto:d.h.lffi.c.e@gmail.com"">d.h.lffi.c.e@gmail.com</a>
<a href=""mailto:d.hl.f.fic.e@gmail.com"">d.hl.f.fic.e@gmail.com</a>
<a href=""mailto:dh.l.f.fice@gmail.com"">dh.l.f.fice@gmail.com</a>
<a href=""mailto:d.h.l.ffic.e@gmail.com"">d.h.l.ffic.e@gmail.com</a>
<a href=""mailto:d.hl.ffi.ce@gmail.com"">d.hl.ffi.ce@gmail.com</a>
<a href=""mailto:d.h.lf.fi.c.e@gmail.com"">d.h.lf.fi.c.e@gmail.com</a>
<a href=""mailto:dhl.f.f.ic.e@gmail.com"">dhl.f.f.ic.e@gmail.com</a>
<a href=""mailto:d.hlffice@gmail.com"">d.hlffice@gmail.com</a>
<a href=""mailto:d.h.l.f.f.i.c.e@gmail.com"">d.h.l.f.f.i.c.e@gmail.com</a>
<a href=""mailto:d.hlf.f.ic.e@gmail.com"">d.hlf.f.ic.e@gmail.com</a>
<a href=""mailto:d.hlff.i.ce@gmail.com"">d.hlff.i.ce@gmail.com</a>
<a href=""mailto:dhlff.i.c.e@gmail.com"">dhlff.i.c.e@gmail.com</a>
<a href=""mailto:d.h.l.ff.ice@gmail.com"">d.h.l.ff.ice@gmail.com</a>
<a href=""mailto:dhl.ffice@gmail.com"">dhl.ffice@gmail.com</a>
<a href=""mailto:dhl.f.fice@gmail.com"">dhl.f.fice@gmail.com</a>
<a href=""mailto:dhlffi.c.e@gmail.com"">dhlffi.c.e@gmail.com</a>
<a href=""mailto:dhlffi.ce@gmail.com"">dhlffi.ce@gmail.com</a>
<a href=""mailto:d.hl.ffice@gmail.com"">d.hl.ffice@gmail.com</a>
<a href=""mailto:d.h.lffi.ce@gmail.com"">d.h.lffi.ce@gmail.com</a>
<a href=""mailto:dh.l.f.fic.e@gmail.com"">dh.l.f.fic.e@gmail.com</a>
<a href=""mailto:d.hl.f.f.i.ce@gmail.com"">d.hl.f.f.i.ce@gmail.com</a>
<a href=""mailto:dh.lffice@gmail.com"">dh.lffice@gmail.com</a>
<a href=""mailto:dhlf.fic.e@gmail.com"">dhlf.fic.e@gmail.com</a>
<a href=""mailto:d.h.l.ff.i.ce@gmail.com"">d.h.l.ff.i.ce@gmail.com</a>
<a href=""mailto:d.hlff.i.c.e@gmail.com"">d.hlff.i.c.e@gmail.com</a>
<a href=""mailto:dhlf.fi.c.e@gmail.com"">dhlf.fi.c.e@gmail.com</a>
<a href=""mailto:d.h.l.f.f.i.ce@gmail.com"">d.h.l.f.f.i.ce@gmail.com</a>
<a href=""mailto:d.hl.f.fi.c.e@gmail.com"">d.hl.f.fi.c.e@gmail.com</a>
<a href=""mailto:d.h.lf.f.i.c.e@gmail.com"">d.h.lf.f.i.c.e@gmail.com</a>
<a href=""mailto:dh.lf.fi.c.e@gmail.com"">dh.lf.fi.c.e@gmail.com</a>
<a href=""mailto:d.hl.ff.ic.e@gmail.com"">d.hl.ff.ic.e@gmail.com</a>
<a href=""mailto:dh.lffic.e@gmail.com"">dh.lffic.e@gmail.com</a>
<a href=""mailto:dh.lff.ic.e@gmail.com"">dh.lff.ic.e@gmail.com</a>
<a href=""mailto:d.hl.ff.i.ce@gmail.com"">d.hl.ff.i.ce@gmail.com</a>
<a href=""mailto:dhlffice@gmail.com"">dhlffice@gmail.com</a>
<a href=""mailto:d.hlffic.e@gmail.com"">d.hlffic.e@gmail.com</a>
<a href=""mailto:d.hl.ff.i.c.e@gmail.com"">d.hl.ff.i.c.e@gmail.com</a>
<a href=""mailto:d.hlf.f.i.ce@gmail.com"">d.hlf.f.i.ce@gmail.com</a>
<a href=""mailto:dhlff.ice@gmail.com"">dhlff.ice@gmail.com</a>
<a href=""mailto:d.h.lf.f.ice@gmail.com"">d.h.lf.f.ice@gmail.com</a>
<a href=""mailto:d.h.l.ff.ic.e@gmail.com"">d.h.l.ff.ic.e@gmail.com</a>
<a href=""mailto:dh.lf.fice@gmail.com"">dh.lf.fice@gmail.com</a>
<a href=""mailto:dh.lf.f.ice@gmail.com"">dh.lf.f.ice@gmail.com</a>
<a href=""mailto:d.h.lf.fi.ce@gmail.com"">d.h.lf.fi.ce@gmail.com</a>
<a href=""mailto:d.h.l.ffi.c.e@gmail.com"">d.h.l.ffi.c.e@gmail.com</a>
<a href=""mailto:dh.l.f.f.ice@gmail.com"">dh.l.f.f.ice@gmail.com</a>
<a href=""mailto:d.h.l.f.fic.e@gmail.com"">d.h.l.f.fic.e@gmail.com</a>
<a href=""mailto:dhl.f.fi.c.e@gmail.com"">dhl.f.fi.c.e@gmail.com</a>
<a href=""mailto:d.hl.f.f.ic.e@gmail.com"">d.hl.f.f.ic.e@gmail.com</a>
<a href=""mailto:dh.l.ff.i.ce@gmail.com"">dh.l.ff.i.ce@gmail.com</a>
<a href=""mailto:dh.l.ff.i.c.e@gmail.com"">dh.l.ff.i.c.e@gmail.com</a>
<a href=""mailto:d.hl.f.f.ice@gmail.com"">d.hl.f.f.ice@gmail.com</a>
<a href=""mailto:dh.l.f.f.i.ce@gmail.com"">dh.l.f.f.i.ce@gmail.com</a>
<a href=""mailto:d.h.lf.fice@gmail.com"">d.h.lf.fice@gmail.com</a>
<a href=""mailto:d.hl.f.f.i.c.e@gmail.com"">d.hl.f.f.i.c.e@gmail.com</a>
<a href=""mailto:dh.l.f.f.i.c.e@gmail.com"">dh.l.f.f.i.c.e@gmail.com</a>
<a href=""mailto:d.h.lf.fic.e@gmail.com"">d.h.lf.fic.e@gmail.com</a>
<a href=""mailto:d.hl.f.fice@gmail.com"">d.hl.f.fice@gmail.com</a>
<a href=""mailto:d.hlff.ic.e@gmail.com"">d.hlff.ic.e@gmail.com</a>
<a href=""mailto:dh.lf.f.i.c.e@gmail.com"">dh.lf.f.i.c.e@gmail.com</a>
<a href=""mailto:dh.l.ffi.c.e@gmail.com"">dh.l.ffi.c.e@gmail.com</a>
<a href=""mailto:d.h.l.f.fice@gmail.com"">d.h.l.f.fice@gmail.com</a>
<a href=""mailto:dh.lf.fi.ce@gmail.com"">dh.lf.fi.ce@gmail.com</a>
<a href=""mailto:d.hlf.fice@gmail.com"">d.hlf.fice@gmail.com</a>
<a href=""mailto:dhl.ff.ic.e@gmail.com"">dhl.ff.ic.e@gmail.com</a>
<a href=""mailto:d.hlf.fi.ce@gmail.com"">d.hlf.fi.ce@gmail.com</a>
<a href=""mailto:dh.l.ffice@gmail.com"">dh.l.ffice@gmail.com</a>
<a href=""mailto:d.h.lff.ic.e@gmail.com"">d.h.lff.ic.e@gmail.com</a>
<a href=""mailto:dh.l.f.fi.c.e@gmail.com"">dh.l.f.fi.c.e@gmail.com</a>
<a href=""mailto:dhl.f.f.i.c.e@gmail.com"">dhl.f.f.i.c.e@gmail.com</a>
<a href=""mailto:d.hlf.fic.e@gmail.com"">d.hlf.fic.e@gmail.com</a>
<a href=""mailto:dhlff.i.ce@gmail.com"">dhlff.i.ce@gmail.com</a>
<a href=""mailto:dhl.f.f.i.ce@gmail.com"">dhl.f.f.i.ce@gmail.com</a>
<a href=""mailto:d.h.lffice@gmail.com"">d.h.lffice@gmail.com</a>
<a href=""mailto:d.h.l.f.f.ice@gmail.com"">d.h.l.f.f.ice@gmail.com</a>
<a href=""mailto:dh.lff.i.c.e@gmail.com"">dh.lff.i.c.e@gmail.com</a>
<a href=""mailto:dhl.ff.i.ce@gmail.com"">dhl.ff.i.ce@gmail.com</a>
<a href=""mailto:dhlf.f.i.ce@gmail.com"">dhlf.f.i.ce@gmail.com</a>
<a href=""mailto:dh.lff.ice@gmail.com"">dh.lff.ice@gmail.com</a>
<a href=""mailto:d.h.l.ffice@gmail.com"">d.h.l.ffice@gmail.com</a>
<a href=""mailto:dhl.ffic.e@gmail.com"">dhl.ffic.e@gmail.com</a>
<a href=""mailto:d.hl.f.fi.ce@gmail.com"">d.hl.f.fi.ce@gmail.com</a>
<a href=""mailto:dh.lf.fic.e@gmail.com"">dh.lf.fic.e@gmail.com</a>
<a href=""mailto:dhl.ff.ice@gmail.com"">dhl.ff.ice@gmail.com</a>
<a href=""mailto:d.h.l.ff.i.c.e@gmail.com"">d.h.l.ff.i.c.e@gmail.com</a>
<a href=""mailto:d.h.l.f.fi.ce@gmail.com"">d.h.l.f.fi.ce@gmail.com</a>
<a href=""mailto:d.h.lff.ice@gmail.com"">d.h.lff.ice@gmail.com</a>
<a href=""mailto:dhl.f.f.ice@gmail.com"">dhl.f.f.ice@gmail.com</a>
<a href=""mailto:dh.lffi.ce@gmail.com"">dh.lffi.ce@gmail.com</a>
<a href=""mailto:atmcard096@gmail.com"">atmcard096@gmail.com</a>
<a href=""mailto:a.tm.car.d09.6@gmail.com"">a.tm.car.d09.6@gmail.com</a>
<a href=""mailto:a.tm.card.096@gmail.com"">a.tm.card.096@gmail.com</a>
<a href=""mailto:at.mc.ar.d0.9.6@gmail.com"">at.mc.ar.d0.9.6@gmail.com</a>
<a href=""mailto:atmc.ar.d.0.96@gmail.com"">atmc.ar.d.0.96@gmail.com</a>
<a href=""mailto:at.mc.a.r.d.096@gmail.com"">at.mc.a.r.d.096@gmail.com</a>
<a href=""mailto:atm.card0.9.6@gmail.com"">atm.card0.9.6@gmail.com</a>
<a href=""mailto:atm.c.ar.d0.96@gmail.com"">atm.c.ar.d0.96@gmail.com</a>
<a href=""mailto:a.tmc.a.rd.0.96@gmail.com"">a.tmc.a.rd.0.96@gmail.com</a>
<a href=""mailto:at.m.ca.r.d.0.9.6@gmail.com"">at.m.ca.r.d.0.9.6@gmail.com</a>
<a href=""mailto:atmca.r.d.0.96@gmail.com"">atmca.r.d.0.96@gmail.com</a>
<a href=""mailto:atm.c.ar.d.096@gmail.com"">atm.c.ar.d.096@gmail.com</a>
<a href=""mailto:atmcar.d.09.6@gmail.com"">atmcar.d.09.6@gmail.com</a>
<a href=""mailto:a.tm.ca.r.d.0.96@gmail.com"">a.tm.ca.r.d.0.96@gmail.com</a>
<a href=""mailto:atm.car.d0.96@gmail.com"">atm.car.d0.96@gmail.com</a>
<a href=""mailto:a.tmc.ard0.9.6@gmail.com"">a.tmc.ard0.9.6@gmail.com</a>
<a href=""mailto:at.m.ca.r.d09.6@gmail.com"">at.m.ca.r.d09.6@gmail.com</a>
<a href=""mailto:a.t.m.c.ar.d.096@gmail.com"">a.t.m.c.ar.d.096@gmail.com</a>
<a href=""mailto:at.m.c.ar.d.0.9.6@gmail.com"">at.m.c.ar.d.0.9.6@gmail.com</a>
<a href=""mailto:at.m.ca.r.d.0.96@gmail.com"">at.m.ca.r.d.0.96@gmail.com</a>
<a href=""mailto:a.tmcard096@gmail.com"">a.tmcard096@gmail.com</a>
<a href=""mailto:atmcar.d0.96@gmail.com"">atmcar.d0.96@gmail.com</a>
<a href=""mailto:at.m.card.09.6@gmail.com"">at.m.card.09.6@gmail.com</a>
<a href=""mailto:a.tm.c.ard09.6@gmail.com"">a.tm.c.ard09.6@gmail.com</a>
<a href=""mailto:a.t.m.ca.r.d.09.6@gmail.com"">a.t.m.ca.r.d.09.6@gmail.com</a>
<a href=""mailto:a.t.m.c.ard.0.9.6@gmail.com"">a.t.m.c.ard.0.9.6@gmail.com</a>
<a href=""mailto:atmc.a.rd.0.96@gmail.com"">atmc.a.rd.0.96@gmail.com</a>
<a href=""mailto:atmc.ard.0.96@gmail.com"">atmc.ard.0.96@gmail.com</a>
<a href=""mailto:at.m.c.a.r.d.0.9.6@gmail.com"">at.m.c.a.r.d.0.9.6@gmail.com</a>
<a href=""mailto:atmc.a.rd09.6@gmail.com"">atmc.a.rd09.6@gmail.com</a>
<a href=""mailto:a.tmc.a.rd0.9.6@gmail.com"">a.tmc.a.rd0.9.6@gmail.com</a>
<a href=""mailto:atmcard.096@gmail.com"">atmcard.096@gmail.com</a>
<a href=""mailto:at.m.ca.rd0.96@gmail.com"">at.m.ca.rd0.96@gmail.com</a>
<a href=""mailto:at.m.c.a.rd0.96@gmail.com"">at.m.c.a.rd0.96@gmail.com</a>
<a href=""mailto:at.m.card0.9.6@gmail.com"">at.m.card0.9.6@gmail.com</a>
<a href=""mailto:a.t.m.c.a.r.d0.96@gmail.com"">a.t.m.c.a.r.d0.96@gmail.com</a>
<a href=""mailto:at.m.ca.rd.096@gmail.com"">at.m.ca.rd.096@gmail.com</a>
<a href=""mailto:a.tm.ca.rd0.96@gmail.com"">a.tm.ca.rd0.96@gmail.com</a>
<a href=""mailto:at.mc.a.rd0.96@gmail.com"">at.mc.a.rd0.96@gmail.com</a>
<a href=""mailto:a.t.mcard.0.96@gmail.com"">a.t.mcard.0.96@gmail.com</a>
<a href=""mailto:a.tmc.ard096@gmail.com"">a.tmc.ard096@gmail.com</a>
<a href=""mailto:atmca.r.d.09.6@gmail.com"">atmca.r.d.09.6@gmail.com</a>
<a href=""mailto:atm.c.ard096@gmail.com"">atm.c.ard096@gmail.com</a>
<a href=""mailto:atmc.ar.d096@gmail.com"">atmc.ar.d096@gmail.com</a>
<a href=""mailto:at.m.c.a.r.d0.96@gmail.com"">at.m.c.a.r.d0.96@gmail.com</a>
<a href=""mailto:at.m.car.d.096@gmail.com"">at.m.car.d.096@gmail.com</a>
<a href=""mailto:at.m.c.ar.d.096@gmail.com"">at.m.c.ar.d.096@gmail.com</a>
<a href=""mailto:a.t.m.c.a.r.d.09.6@gmail.com"">a.t.m.c.a.r.d.09.6@gmail.com</a>
<a href=""mailto:a.tmc.a.rd09.6@gmail.com"">a.tmc.a.rd09.6@gmail.com</a>
<a href=""mailto:a.tmc.a.r.d096@gmail.com"">a.tmc.a.r.d096@gmail.com</a>
<a href=""mailto:a.t.m.c.a.rd09.6@gmail.com"">a.t.m.c.a.rd09.6@gmail.com</a>
<a href=""mailto:at.mcar.d.0.9.6@gmail.com"">at.mcar.d.0.9.6@gmail.com</a>
<a href=""mailto:atm.car.d.0.9.6@gmail.com"">atm.car.d.0.9.6@gmail.com</a>
<a href=""mailto:atmc.a.r.d.0.9.6@gmail.com"">atmc.a.r.d.0.9.6@gmail.com</a>
<a href=""mailto:a.tmc.a.r.d0.96@gmail.com"">a.tmc.a.r.d0.96@gmail.com</a>
<a href=""mailto:a.t.mc.ar.d.0.9.6@gmail.com"">a.t.mc.ar.d.0.9.6@gmail.com</a>
<a href=""mailto:a.t.m.c.a.rd.0.96@gmail.com"">a.t.m.c.a.rd.0.96@gmail.com</a>
<a href=""mailto:a.tm.c.ard.09.6@gmail.com"">a.tm.c.ard.09.6@gmail.com</a>
<a href=""mailto:at.m.c.ard0.96@gmail.com"">at.m.c.ard0.96@gmail.com</a>
<a href=""mailto:atmc.ar.d0.96@gmail.com"">atmc.ar.d0.96@gmail.com</a>
<a href=""mailto:atmc.a.rd0.96@gmail.com"">atmc.a.rd0.96@gmail.com</a>
<a href=""mailto:at.m.ca.rd09.6@gmail.com"">at.m.ca.rd09.6@gmail.com</a>
<a href=""mailto:atmc.ar.d.096@gmail.com"">atmc.ar.d.096@gmail.com</a>
<a href=""mailto:a.t.mc.ard.096@gmail.com"">a.t.mc.ard.096@gmail.com</a>
<a href=""mailto:at.m.ca.r.d.096@gmail.com"">at.m.ca.r.d.096@gmail.com</a>
<a href=""mailto:atmca.rd.096@gmail.com"">atmca.rd.096@gmail.com</a>
<a href=""mailto:atmc.a.r.d09.6@gmail.com"">atmc.a.r.d09.6@gmail.com</a>
<a href=""mailto:a.t.mcard.09.6@gmail.com"">a.t.mcard.09.6@gmail.com</a>
<a href=""mailto:atm.card09.6@gmail.com"">atm.card09.6@gmail.com</a>
<a href=""mailto:a.t.m.car.d0.9.6@gmail.com"">a.t.m.car.d0.9.6@gmail.com</a>
<a href=""mailto:a.t.mc.ard.0.96@gmail.com"">a.t.mc.ard.0.96@gmail.com</a>
<a href=""mailto:a.t.mc.ar.d09.6@gmail.com"">a.t.mc.ar.d09.6@gmail.com</a>
<a href=""mailto:a.tmcar.d.0.96@gmail.com"">a.tmcar.d.0.96@gmail.com</a>
<a href=""mailto:a.t.m.c.a.r.d.0.9.6@gmail.com"">a.t.m.c.a.r.d.0.9.6@gmail.com</a>
<a href=""mailto:a.tmc.ar.d.09.6@gmail.com"">a.tmc.ar.d.09.6@gmail.com</a>
<a href=""mailto:at.mc.a.rd096@gmail.com"">at.mc.a.rd096@gmail.com</a>
<a href=""mailto:atm.ca.r.d.0.96@gmail.com"">atm.ca.r.d.0.96@gmail.com</a>
<a href=""mailto:a.tm.c.a.rd0.96@gmail.com"">a.tm.c.a.rd0.96@gmail.com</a>
<a href=""mailto:a.t.mc.a.rd0.9.6@gmail.com"">a.t.mc.a.rd0.9.6@gmail.com</a>
<a href=""mailto:atmc.a.r.d.0.96@gmail.com"">atmc.a.r.d.0.96@gmail.com</a>
<a href=""mailto:at.mcard096@gmail.com"">at.mcard096@gmail.com</a>
<a href=""mailto:a.tm.ca.r.d09.6@gmail.com"">a.tm.ca.r.d09.6@gmail.com</a>
<a href=""mailto:a.tmc.ard0.96@gmail.com"">a.tmc.ard0.96@gmail.com</a>
<a href=""mailto:a.t.m.c.a.r.d.096@gmail.com"">a.t.m.c.a.r.d.096@gmail.com</a>
<a href=""mailto:at.m.card.0.96@gmail.com"">at.m.card.0.96@gmail.com</a>
<a href=""mailto:a.t.m.c.a.rd0.96@gmail.com"">a.t.m.c.a.rd0.96@gmail.com</a>
<a href=""mailto:at.mca.r.d.0.9.6@gmail.com"">at.mca.r.d.0.9.6@gmail.com</a>
<a href=""mailto:a.t.m.c.ard09.6@gmail.com"">a.t.m.c.ard09.6@gmail.com</a>
<a href=""mailto:a.tm.car.d.0.96@gmail.com"">a.tm.car.d.0.96@gmail.com</a>
<a href=""mailto:atmc.ar.d.09.6@gmail.com"">atmc.ar.d.09.6@gmail.com</a>
<a href=""mailto:atm.c.ar.d09.6@gmail.com"">atm.c.ar.d09.6@gmail.com</a>
<a href=""mailto:a.t.mc.a.r.d.096@gmail.com"">a.t.mc.a.r.d.096@gmail.com</a>
<a href=""mailto:atm.c.ard0.96@gmail.com"">atm.c.ard0.96@gmail.com</a>
<a href=""mailto:a.tm.car.d0.96@gmail.com"">a.tm.car.d0.96@gmail.com</a>
<a href=""mailto:a.tmca.rd0.9.6@gmail.com"">a.tmca.rd0.9.6@gmail.com</a>
<a href=""mailto:a.tm.c.a.rd0.9.6@gmail.com"">a.tm.c.a.rd0.9.6@gmail.com</a>
<a href=""mailto:at.mc.ard.09.6@gmail.com"">at.mc.ard.09.6@gmail.com</a>
<a href=""mailto:atmc.a.r.d0.9.6@gmail.com"">atmc.a.r.d0.9.6@gmail.com</a>
<a href=""mailto:a.tm.car.d0.9.6@gmail.com"">a.tm.car.d0.9.6@gmail.com</a>
<a href=""mailto:at.mca.rd09.6@gmail.com"">at.mca.rd09.6@gmail.com</a>
<a href=""mailto:a.t.mca.r.d09.6@gmail.com"">a.t.mca.r.d09.6@gmail.com</a>
<a href=""mailto:a.t.m.c.ar.d0.9.6@gmail.com"">a.t.m.c.ar.d0.9.6@gmail.com</a>
<a href=""mailto:a.t.mca.rd.0.9.6@gmail.com"">a.t.mca.rd.0.9.6@gmail.com</a>
<a href=""mailto:atm.c.a.r.d096@gmail.com"">atm.c.a.r.d096@gmail.com</a>
<a href=""mailto:at.m.card096@gmail.com"">at.m.card096@gmail.com</a>
<a href=""mailto:atmc.ard.0.9.6@gmail.com"">atmc.ard.0.9.6@gmail.com</a>
<a href=""mailto:at.mca.r.d0.9.6@gmail.com"">at.mca.r.d0.9.6@gmail.com</a>
<a href=""mailto:at.m.car.d.09.6@gmail.com"">at.m.car.d.09.6@gmail.com</a>
<a href=""mailto:atm.ca.r.d.09.6@gmail.com"">atm.ca.r.d.09.6@gmail.com</a>
<a href=""mailto:at.mca.rd.0.9.6@gmail.com"">at.mca.rd.0.9.6@gmail.com</a>
<a href=""mailto:a.t.mca.r.d.0.96@gmail.com"">a.t.mca.r.d.0.96@gmail.com</a>
<a href=""mailto:a.tmcard.0.96@gmail.com"">a.tmcard.0.96@gmail.com</a>
<a href=""mailto:a.t.m.c.a.r.d096@gmail.com"">a.t.m.c.a.r.d096@gmail.com</a>
<a href=""mailto:a.tm.c.a.r.d.096@gmail.com"">a.tm.c.a.r.d.096@gmail.com</a>
<a href=""mailto:atm.card.096@gmail.com"">atm.card.096@gmail.com</a>
<a href=""mailto:atm.c.ar.d.09.6@gmail.com"">atm.c.ar.d.09.6@gmail.com</a>
<a href=""mailto:a.t.mca.rd.09.6@gmail.com"">a.t.mca.rd.09.6@gmail.com</a>
<a href=""mailto:a.tm.card.0.9.6@gmail.com"">a.tm.card.0.9.6@gmail.com</a>
<a href=""mailto:a.tm.ca.rd.0.9.6@gmail.com"">a.tm.ca.rd.0.9.6@gmail.com</a>
<a href=""mailto:a.t.mcar.d0.96@gmail.com"">a.t.mcar.d0.96@gmail.com</a>
<a href=""mailto:at.mc.ar.d.09.6@gmail.com"">at.mc.ar.d.09.6@gmail.com</a>
<a href=""mailto:at.mca.rd.096@gmail.com"">at.mca.rd.096@gmail.com</a>
<a href=""mailto:at.m.car.d09.6@gmail.com"">at.m.car.d09.6@gmail.com</a>
<a href=""mailto:a.t.mca.r.d096@gmail.com"">a.t.mca.r.d096@gmail.com</a>
<a href=""mailto:atmc.ard.096@gmail.com"">atmc.ard.096@gmail.com</a>
<a href=""mailto:atmcar.d.0.96@gmail.com"">atmcar.d.0.96@gmail.com</a>
<a href=""mailto:a.tmc.ar.d09.6@gmail.com"">a.tmc.ar.d09.6@gmail.com</a>
<a href=""mailto:atmca.rd.0.9.6@gmail.com"">atmca.rd.0.9.6@gmail.com</a>
<a href=""mailto:a.tmca.rd.0.96@gmail.com"">a.tmca.rd.0.96@gmail.com</a>
<a href=""mailto:a.t.mc.a.r.d0.96@gmail.com"">a.t.mc.a.r.d0.96@gmail.com</a>
<a href=""mailto:a.tm.c.a.r.d09.6@gmail.com"">a.tm.c.a.r.d09.6@gmail.com</a>
<a href=""mailto:a.tmc.ar.d.0.9.6@gmail.com"">a.tmc.ar.d.0.9.6@gmail.com</a>
<a href=""mailto:a.tm.ca.rd09.6@gmail.com"">a.tm.ca.rd09.6@gmail.com</a>
<a href=""mailto:at.mca.r.d.09.6@gmail.com"">at.mca.r.d.09.6@gmail.com</a>
<a href=""mailto:a.tmc.ard.096@gmail.com"">a.tmc.ard.096@gmail.com</a>
<a href=""mailto:at.mc.ar.d09.6@gmail.com"">at.mc.ar.d09.6@gmail.com</a>
<a href=""mailto:a.t.m.ca.r.d.096@gmail.com"">a.t.m.ca.r.d.096@gmail.com</a>
<a href=""mailto:at.m.c.ar.d0.9.6@gmail.com"">at.m.c.ar.d0.9.6@gmail.com</a>
<a href=""mailto:atmc.ard09.6@gmail.com"">atmc.ard09.6@gmail.com</a>
<a href=""mailto:at.m.c.ar.d.09.6@gmail.com"">at.m.c.ar.d.09.6@gmail.com</a>
<a href=""mailto:a.tm.c.ard096@gmail.com"">a.tm.c.ard096@gmail.com</a>
<a href=""mailto:a.t.mc.a.r.d.09.6@gmail.com"">a.t.mc.a.r.d.09.6@gmail.com</a>
<a href=""mailto:atmcard.0.96@gmail.com"">atmcard.0.96@gmail.com</a>
<a href=""mailto:atm.ca.rd.0.9.6@gmail.com"">atm.ca.rd.0.9.6@gmail.com</a>
<a href=""mailto:a.tmca.r.d.0.96@gmail.com"">a.tmca.r.d.0.96@gmail.com</a>
<a href=""mailto:atm.c.ar.d.0.96@gmail.com"">atm.c.ar.d.0.96@gmail.com</a>
<a href=""mailto:a.t.mc.a.rd.0.96@gmail.com"">a.t.mc.a.rd.0.96@gmail.com</a>
<a href=""mailto:a.tm.c.a.r.d0.9.6@gmail.com"">a.tm.c.a.r.d0.9.6@gmail.com</a>
<a href=""mailto:a.t.m.card.096@gmail.com"">a.t.m.card.096@gmail.com</a>
<a href=""mailto:at.m.c.a.r.d0.9.6@gmail.com"">at.m.c.a.r.d0.9.6@gmail.com</a>
<a href=""mailto:a.tm.car.d096@gmail.com"">a.tm.car.d096@gmail.com</a>
<a href=""mailto:atm.c.a.rd.09.6@gmail.com"">atm.c.a.rd.09.6@gmail.com</a>
<a href=""mailto:at.m.c.ar.d096@gmail.com"">at.m.c.ar.d096@gmail.com</a>
<a href=""mailto:atmc.a.rd.096@gmail.com"">atmc.a.rd.096@gmail.com</a>
<a href=""mailto:at.mcard09.6@gmail.com"">at.mcard09.6@gmail.com</a>
<a href=""mailto:atm.car.d09.6@gmail.com"">atm.car.d09.6@gmail.com</a>
<a href=""mailto:atm.c.ar.d0.9.6@gmail.com"">atm.c.ar.d0.9.6@gmail.com</a>
<a href=""mailto:a.tmca.rd.0.9.6@gmail.com"">a.tmca.rd.0.9.6@gmail.com</a>
<a href=""mailto:a.tm.car.d.09.6@gmail.com"">a.tm.car.d.09.6@gmail.com</a>
<a href=""mailto:at.m.c.ard0.9.6@gmail.com"">at.m.c.ard0.9.6@gmail.com</a>
<a href=""mailto:a.tmcar.d09.6@gmail.com"">a.tmcar.d09.6@gmail.com</a>
<a href=""mailto:a.tm.ca.r.d096@gmail.com"">a.tm.ca.r.d096@gmail.com</a>
<a href=""mailto:atm.c.a.rd0.9.6@gmail.com"">atm.c.a.rd0.9.6@gmail.com</a>
<a href=""mailto:a.tmca.r.d.09.6@gmail.com"">a.tmca.r.d.09.6@gmail.com</a>
<a href=""mailto:a.t.mc.a.rd.0.9.6@gmail.com"">a.t.mc.a.rd.0.9.6@gmail.com</a>
<a href=""mailto:a.t.mca.r.d.0.9.6@gmail.com"">a.t.mca.r.d.0.9.6@gmail.com</a>
<a href=""mailto:a.t.m.c.ar.d09.6@gmail.com"">a.t.m.c.ar.d09.6@gmail.com</a>
<a href=""mailto:a.t.mca.r.d.09.6@gmail.com"">a.t.mca.r.d.09.6@gmail.com</a>
<a href=""mailto:at.mca.r.d0.96@gmail.com"">at.mca.r.d0.96@gmail.com</a>
<a href=""mailto:a.t.mcard.096@gmail.com"">a.t.mcard.096@gmail.com</a>
<a href=""mailto:a.t.mc.a.rd0.96@gmail.com"">a.t.mc.a.rd0.96@gmail.com</a>
<a href=""mailto:a.t.m.card0.9.6@gmail.com"">a.t.m.card0.9.6@gmail.com</a>
<a href=""mailto:at.m.c.ar.d0.96@gmail.com"">at.m.c.ar.d0.96@gmail.com</a>
<a href=""mailto:a.t.m.ca.r.d0.9.6@gmail.com"">a.t.m.ca.r.d0.9.6@gmail.com</a>
<a href=""mailto:atmc.a.r.d.096@gmail.com"">atmc.a.r.d.096@gmail.com</a>
<a href=""mailto:at.mca.rd0.96@gmail.com"">at.mca.rd0.96@gmail.com</a>
<a href=""mailto:a.t.mc.ard0.96@gmail.com"">a.t.mc.ard0.96@gmail.com</a>
<a href=""mailto:a.t.mcar.d.09.6@gmail.com"">a.t.mcar.d.09.6@gmail.com</a>
<a href=""mailto:at.mcard.0.9.6@gmail.com"">at.mcard.0.9.6@gmail.com</a>
<a href=""mailto:a.tmcar.d.09.6@gmail.com"">a.tmcar.d.09.6@gmail.com</a>
<a href=""mailto:at.mc.a.r.d0.96@gmail.com"">at.mc.a.r.d0.96@gmail.com</a>
<a href=""mailto:at.mc.ard096@gmail.com"">at.mc.ard096@gmail.com</a>
<a href=""mailto:atm.ca.r.d09.6@gmail.com"">atm.ca.r.d09.6@gmail.com</a>
<a href=""mailto:at.mc.a.rd.096@gmail.com"">at.mc.a.rd.096@gmail.com</a>
<a href=""mailto:a.tm.c.a.r.d096@gmail.com"">a.tm.c.a.r.d096@gmail.com</a>
<a href=""mailto:at.m.ca.rd096@gmail.com"">at.m.ca.rd096@gmail.com</a>
<a href=""mailto:a.tm.car.d.096@gmail.com"">a.tm.car.d.096@gmail.com</a>
<a href=""mailto:atm.c.a.rd0.96@gmail.com"">atm.c.a.rd0.96@gmail.com</a>
<a href=""mailto:at.m.ca.r.d0.96@gmail.com"">at.m.ca.r.d0.96@gmail.com</a>
<a href=""mailto:at.mca.r.d.096@gmail.com"">at.mca.r.d.096@gmail.com</a>
<a href=""mailto:a.t.m.card0.96@gmail.com"">a.t.m.card0.96@gmail.com</a>
<a href=""mailto:a.tm.c.a.rd096@gmail.com"">a.tm.c.a.rd096@gmail.com</a>
<a href=""mailto:a.t.mca.r.d0.9.6@gmail.com"">a.t.mca.r.d0.9.6@gmail.com</a>
<a href=""mailto:a.tm.c.a.rd.09.6@gmail.com"">a.tm.c.a.rd.09.6@gmail.com</a>
<a href=""mailto:atm.ca.rd09.6@gmail.com"">atm.ca.rd09.6@gmail.com</a>
<a href=""mailto:at.m.ca.rd.0.9.6@gmail.com"">at.m.ca.rd.0.9.6@gmail.com</a>
<a href=""mailto:a.tmca.r.d096@gmail.com"">a.tmca.r.d096@gmail.com</a>
<a href=""mailto:a.tmcard09.6@gmail.com"">a.tmcard09.6@gmail.com</a>
<a href=""mailto:at.mc.ard.0.96@gmail.com"">at.mc.ard.0.96@gmail.com</a>
<a href=""mailto:a.tmcar.d.096@gmail.com"">a.tmcar.d.096@gmail.com</a>
<a href=""mailto:atm.ca.r.d096@gmail.com"">atm.ca.r.d096@gmail.com</a>"
MLd0Fp3J,huffman,Ferhat_H,C,Saturday 26th of August 2023 12:45:30 PM CDT,"#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <stdbool.h>

typedef struct {
  long int wgt;
  int prev;
  union {
    int next[2];
    int val;
  };
} hitem;

typedef struct hstruct {
  hitem tab[UCHAR_MAX + 2 + UCHAR_MAX + 1];
  int ifirst;
} hstruct;

void init_struct(hstruct *h) {
  for (int i = 0; i < UCHAR_MAX + 1; i++) {
    h->tab[i].wgt = 0;
    h->tab[i].val = i;
  }
  h->ifirst = 0;
}

int update_weight(hitem *h, FILE *stream) {
  int c = fgetc(stream);
  while (c != EOF) {
    h[c].wgt += 1;
    c = fgetc(stream);
  }
  if (ferror(stream)){
    return -1;
  }
  return 0;
}

int hitem_compar(hitem *item1, hitem *item2) {
  return (item1->wgt > item2->wgt) - (item1->wgt < item2->wgt);
}

//static void fill__side_leaf(hstruct *h, int childIndex, int nodeIndex,
    //int nodeWgt ,int side){
  //h->tab[childIndex].prev = nodeIndex;
  //h->tab[nodeIndex].next[side] = childIndex;
  //h->tab[nodeIndex].wgt = nodeWgt + h->tab[childIndex].wgt;
//}

//static void fill__side_node(hitem *h, const int childIndex, const int nodeIndex,
    //int nodeWgt ,int side){
  //h[childIndex].prev = nodeIndex;
  //h[nodeIndex].next[side] = childIndex;
  //h[nodeIndex].wgt = nodeWgt + h[childIndex].wgt;
//}

//retourne l'indice de la derniere case contenant le dernier noeud
int append_nodes(hstruct *h) {
  int __curr = h->ifirst;
  int __writer = UCHAR_MAX + 2;
  int __lkwter = UCHAR_MAX + 1; //first compar in while

  for (int i = 0; i < UCHAR_MAX + 2 - h->ifirst + 1; i++){ //nnodes
    if (h->tab[__curr].wgt > h->tab[__lkwter].wgt){ //1st is node
      h->tab[__lkwter].prev = __writer;
      h->tab[__writer].next[0] = __lkwter;
      h->tab[__writer].wgt = h->tab[__lkwter].wgt;
      ++__lkwter;
      if (h->tab[__curr].wgt > h->tab[__lkwter].wgt) { //2nd node
        h->tab[__lkwter].prev = __writer;
        h->tab[__writer].next[1] = __lkwter;
        h->tab[__writer].wgt += h->tab[__lkwter].wgt;
        ++__lkwter;
      } else { //2nd leaf
        h->tab[__curr].prev = __writer;
        h->tab[__writer].next[1] = __curr;
        h->tab[__writer].wgt += h->tab[__curr].wgt;
        ++__curr;
      }
      ++__writer;
    } else {  //1st is leaf
      h->tab[__curr].prev = __writer;
      h->tab[__writer].next[0] = __curr;
      h->tab[__writer].wgt += h->tab[__curr].wgt;
      ++__curr;
      if (h->tab[__curr].wgt <= h->tab[__curr + 1].wgt){    //2nd is leaf
        h->tab[__curr].prev = __writer;
        h->tab[__writer].next[1] = __curr;
        h->tab[__writer].wgt += h->tab[__curr].wgt;
        ++__curr;
      } else {    //2nd is node
        h->tab[__lkwter].prev = __writer;
        h->tab[__writer].next[1] = __lkwter;
        h->tab[__writer].wgt += h->tab[__lkwter].wgt;
        ++__lkwter;
      }
      ++__writer;
    }
  }
  return __writer - 1;
}

int code_tree(const hstruct h, FILE *dest) {

}

int code_text_brut(hitem h, FILE *src, FILE *dest){ //code

}

int main(int argc, char *argv[]) {
  hstruct h;
  init_struct(&h);
  char *srcFile = argv[1]; //~~
  char *destFile = argv[2]; // test
  FILE *src = fopen(srcFile, ""r"");
  FILE *dest = fopen(destFile, ""wx"");
  if (src == NULL || dest == NULL) {
    return EXIT_FAILURE;
  }
  if (update_weight(h.tab, src) != 0) {
   return EXIT_FAILURE;
  }
  qsort(h.tab, UCHAR_MAX + 2, sizeof(hitem), hitem_compar);
  while (h.tab[h.ifirst].wgt == 0) {
    ++h.ifirst;
  }
  int ilast = append_nodes(&h); // ~~

  bool ferr = false;
  int c = fgetc(src);
  c == EOF ? ferr = true : ferr = (fputc(c, dest) == EOF);
  while (!ferr) {
    int c = fgetc(src);
    c == EOF
      ? ferr = true
      : ferr = (fputc(c, dest) == EOF);
  }
}
"
N4CqxYSK,Maximize Profits with Free Forex Trading Bots,reviewbrokers,PHP,Saturday 26th of August 2023 12:28:47 PM CDT,https://www.reviewbrokers.net/maximize-profits-with-free-forex-trading-bots/
4sEs1Y1K,Untitled,Dobri,Java,Saturday 26th of August 2023 11:36:32 AM CDT,"package com.dobri.examples;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String thePassword = scanner.nextLine();
        System.out.println(passwordOperation(thePassword));
    }

    private static String passwordOperation(String password) {
        boolean valid = false; // simplified initialization

        if (password.isBlank()) { // fixed the misplaced semicolon
            System.out.println(""Password must have at least 6 letters"");;}

        if (containsNumber(password)) {// uses containsNumbers to complete the operation
        }else{
            System.out.println(""Password must consist of letters and digits"");}

        if (password.length() >= 6 && password.length() <= 14) {// password's length validation
        }else{System.out.println(""Password must be between 6 and 14 letters"");
        }



        for (char c : password.toCharArray()) {// Other code that runs if no special character was found
            switch (c) {
                case '£':
                case '$':
                case '%':
                case '^':
                case '&':
                case '*':
                case '""':
                case '<':
                case '>':
                case ':':
                case ';':
                case '#':
                case '~':
                case '_':
                case '-':
                case '+':
                case '=':
                case ',':
                case '@':
                case '(':
                case ')':
                case '{':
                case '}':
                case '[':
                case ']':
                case '|':
                case '`':
                case '¬':
                case '¦':
                case '!':
                    System.exit(0); // Exits the program immediately
            }
        }
        return""Password is valid👌"";  // Return true if password is valid, adjust as per your requirements
    }

    private static boolean containsNumber(String password) {
        for (char c : password.toCharArray()) {
            if (Character.isDigit(c)) {
                return true; // The string contains a number
            }
        }
        return false; // No numbers found in the string
    }

}
//your password should have at least 6 characters and no more than 14 characters,
// shouldn't have any special characters like ((){}[]|`¬¦! ""£$%^&*""<>:;#~_-+=,@.)
// some examples from chatgpt:
// NcO5uR
//jD37WE
//VPeEgBsnarZ
//ZsIV80dPN
//seaesRBtl76n
//zDJIHW
//bW9z9vhwaiR
//gafGqTXmk
//O6Pdsc3b7
//HaH1Sa

"
HXFTWPFH,FF match grouper,ikizid,Python,Saturday 26th of August 2023 11:27:43 AM CDT,"# FF match grouper
# Ilpo Kantonen 26 August 2023

from csv import reader

def read_matchlist(fname_p='') -> list:
    if fname_p == '':
        return None
    filename = fname_p
    tempkits = []
    try:
        with open(filename, 'r') as read_obj:
            csv_reader = reader(read_obj)
            ekarivi = True   # Ohita ensimmäinen header-rivi mätsilistasta
            for m in csv_reader:
                if ekarivi == False:
                   tempkits.append(m)
                else:
                    ekarivi = False
    except (IOError, OSError) as err:
        print(err)
        return []
    finally:
        if read_obj is not None:
            read_obj.close()
    return tempkits

def sama_nimi(eka,toka) -> bool:
    if len(eka) != len(toka):
        return False
    for i in range(len(eka)):
        if eka[i] != toka[i]:
            return False
    return True

if __name__ == '__main__':
    PATH = '/path/to/matchlistfiles/'
    t_matchit = read_matchlist(PATH + 'Terttu.csv')
    j_matchit = read_matchlist(PATH + 'Jorma.csv')

    samoja = 0
    for a in t_matchit:
        for b in j_matchit:
            if sama_nimi(a[0], b[0]):
                samoja += 1

    print('Tertulla', len(t_matchit), 'ja Jormalla', len(j_matchit), 'ja yhteisiä FF-mätsejä', samoja, 'mätsiä.')"
pUeuh7z3,Italian translations,emveepee,XML,Saturday 26th of August 2023 10:50:08 AM CDT,"<Translations>
  <Translation original=""+24HRS"" translated=""+24HRS"" />
  <Translation original=""-24HRS"" translated=""-24HRS"" />
  <Translation original=""0 - All Channels"" translated=""0 - All Channels"" />
  <Translation original=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"" translated=""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"" />
  <Translation original=""Advance Rules:"" translated=""Advance Rules:"" />
  <Translation original=""All"" translated=""All"" />
  <Translation original=""All Channels"" translated=""All Channels"" />
  <Translation original=""All Episodes"" translated=""All Episodes"" />
  <Translation original=""All New"" translated=""All New"" />
  <Translation original=""All New Episodes"" translated=""All New Episodes"" />
  <Translation original=""All Recordings"" translated=""Tutte le registrazioni"" />
  <Translation original=""Any Channel"" translated=""Any Channel"" />
  <Translation original=""Archive Target Folder:"" translated=""Archive Target Folder:"" />
  <Translation original=""Archive"" translated=""Archive"" />
  <Translation original=""Are you sure you want to delete folder:"" translated=""Are you sure you want to delete folder:"" />
  <Translation original=""Are you sure you want to delete this recording?"" translated=""Sei sicuro di voler cancellare questa registrazione?"" />
  <Translation original=""Are you sure you want to delete:"" translated=""Are you sure you want to delete:"" />
  <Translation original=""Are you sure you want to forget this recording?"" translated=""Are you sure you want to forget this recording?"" />
  <Translation original=""[Cancel - do nothing]"" translated=""[Cancel - do nothing]"" />
  <Translation original=""Cancel"" translated=""Annulla"" />
  <Translation original=""Channel:"" translated=""Canale:"" />
  <Translation original=""Close"" translated=""Chiudi"" />
  <Translation original=""Conflicts"" translated=""Conflitti"" />
  <Translation original=""Daily"" translated=""Daily"" />
  <Translation original=""Date:"" translated=""Data"" />
  <Translation original=""[Default]"" translated=""[Default]"" />
  <Translation original=""Default"" translated=""Default"" />
  <Translation original=""Delete"" translated=""Cancella"" />
  <Translation original=""Details"" translated=""Dettagli"" />
  <Translation original=""Directory:"" translated=""Directory"" />
  <Translation original=""Disable"" translated=""Disable"" />
  <Translation original=""[DISABLED]"" translated=""[DISABLED]"" />
  <Translation original=""Do you want to resume or restart playback of:"" translated=""Do you want to resume or restart playback of:"" />
  <Translation original=""Done"" translated=""Done"" />
  <Translation original=""Dont record"" translated=""Dont record"" />
  <Translation original=""End Time:"" translated=""Ora Fine:"" />
  <Translation original=""Exit"" translated=""Uscita"" />
  <Translation original=""File:"" translated=""File:"" />
  <Translation original=""Filter"" translated=""Filter"" />
  <Translation original=""Filtering to:"" translated=""Filtering to:"" />
  <Translation original=""Find All"" translated=""Trova Tutti"" />
  <Translation original=""Forget"" translated=""Forget"" />
  <Translation original=""Group"" translated=""Group"" />
  <Translation original=""Keep:"" translated=""Mantieni"" />
  <Translation original=""Keyword Recording"" translated=""Keyword Recording"" />
  <Translation original=""Keyword"" translated=""Keyword"" />
  <Translation original=""Keyword:"" translated=""Keyword:"" />
  <Translation original=""Latest Recording:"" translated=""Latest Recording:"" />
  <Translation original=""Listen"" translated=""Listen"" />
  <Translation original=""Live TV"" translated=""Diretta TV"" />
  <Translation original=""Man-Rec"" translated=""Man-Rec"" />
  <Translation original=""Manual Recording"" translated=""Registrazione manuale"" />
  <Translation original=""Menu"" translated=""Menu"" />
  <Translation original=""MetaData"" translated=""MetaData"" />
  <Translation original=""min"" translated=""min"" />
  <Translation original=""minute"" translated=""minuto"" />
  <Translation original=""minutes"" translated=""minuti"" />
  <Translation original=""Music"" translated=""Music"" />
  <Translation original=""Name:"" translated=""Nome: "" />
  <Translation original=""No channels in this group. Switching to 'All Channels'"" translated=""No channels in this group. Switching to 'All Channels'"" />
  <Translation original=""No music playlist is active"" translated=""No music playlist is active"" />
  <Translation original=""No other matching shows found."" translated=""No other matching shows found."" />
  <Translation original=""None"" translated=""Nessuno"" />
  <Translation original=""OK"" translated=""OK"" />
  <Translation original=""Originally aired:"" translated=""Originally aired:"" />
  <Translation original=""Page Down"" translated=""Page Down"" />
  <Translation original=""Page Up"" translated=""Page Up"" />
  <Translation original=""Pending"" translated=""In Attesa"" />
  <Translation original=""Pending Recordings"" translated=""Pending Recordings"" />
  <Translation original=""Pictures"" translated=""Foto"" />
  <Translation original=""Play"" translated=""Avvia"" />
  <Translation original=""Playlist"" translated=""Playlist"" />
  <Translation original=""Post-Padding:"" translated=""Post-reg.:"" />
  <Translation original=""Pre-Padding:"" translated=""Pre-reg.:"" />
  <Translation original=""Quality:"" translated=""Qualit&#224;:"" />
  <Translation original=""Quick Record"" translated=""Quick Record"" />
  <Translation original=""Ready Recordings"" translated=""Ready Recordings"" />
  <Translation original=""Record All Episodes, All Channels"" translated=""Record All Episodes, All Channels"" />
  <Translation original=""Record"" translated=""Registra"" />
  <Translation original=""Record Any Day"" translated=""Record Any Day"" />
  <Translation original=""Record Daily"" translated=""Record Daily"" />
  <Translation original=""Record Once"" translated=""Reg. Singola"" />
  <Translation original=""Record Season (All episodes on this channel)"" translated=""Record Season (All episodes on this channel)"" />
  <Translation original=""Record Season (Daily, this timeslot)"" translated=""Record Season (Daily, this timeslot)"" />
  <Translation original=""Record Season (Monday-Friday, this timeslot)"" translated=""Record Season (Monday-Friday, this timeslot)"" />
  <Translation original=""Record Season (NEW episodes on this channel)"" translated=""Record Season (NEW episodes on this channel)"" />
  <Translation original=""Record Season (Weekends, this timeslot)"" translated=""Record Season (Weekends, this timeslot)"" />
  <Translation original=""Record Season (Weekly, this timeslot)"" translated=""Record Season (Weekly, this timeslot)"" />
  <Translation original=""Record Week Days (Monday-Friday)"" translated=""Record Week Days (Monday-Friday)"" />
  <Translation original=""Record Weekends (Saturday, Sunday)"" translated=""Record Weekends (Saturday, Sunday)"" />
  <Translation original=""Record Weekly"" translated=""Record Weekly"" />
  <Translation original=""recording"" translated=""registrazione"" />
  <Translation original=""recordings"" translated=""registrazioni"" />
  <Translation original=""Recordings"" translated=""Registrazioni"" />
  <Translation original=""Recording Type:"" translated=""Modalit&#224; Reg.:"" />
  <Translation original=""Recurring"" translated=""Ricorrenti"" />
  <Translation original=""Recurring Recordings"" translated=""Recurring Recordings"" />
  <Translation original=""Resume"" translated=""Riprendi"" />
  <Translation original=""Scheduler"" translated=""Scheduler"" />
  <Translation original=""Search"" translated=""Search"" />
  <Translation original=""Shuffle"" translated=""Casuale"" />
  <Translation original=""Sorting A-Z"" translated=""Sorting A-Z"" />
  <Translation original=""Sorting By Date Descending"" translated=""Sorting By Date Descending"" />
  <Translation original=""Sorting By Date"" translated=""Sorting By Date"" />
  <Translation original=""Sorting Z-A"" translated=""Sorting Z-A"" />
  <Translation original=""Sort"" translated=""Sort"" />
  <Translation original=""Sorting By Priority"" translated=""Sorting By Priority"" />
  <Translation original=""Sorting By Priority Descending"" translated=""Sorting By Priority Descending"" />
  <Translation original=""Start Time:"" translated=""Ora Inizio:"" />
  <Translation original=""This recording was watched to completion. Would you like to delete this recording?"" translated=""This recording was watched to completion. Would you like to delete this recording?"" />
  <Translation original=""Today"" translated=""Today"" />
  <Translation original=""Tomorrow"" translated=""Domani"" />
  <Translation original=""TV Guide"" translated=""Guida TV"" />
  <Translation original=""Update"" translated=""Aggiorna"" />
  <Translation original=""Updating Recording Schedule"" translated=""Updating Recording Schedule"" />
  <Translation original=""Unable to connect to the remote server"" translated=""Unable to connect to the remote server"" />
  <Translation original=""Unable to delete recording. File may be in use."" translated=""Unable to delete recording. File may be in use."" />
  <Translation original=""Unwatch"" translated=""Unwatch"" />
  <Translation original=""Videos"" translated=""Videos"" />
  <Translation original=""View"" translated=""View"" />
  <Translation original=""Watch"" translated=""Vedi"" />
  <Translation original=""What's New"" translated=""What's New"" />
</Translations>"
usjbyL4K,non hanbreak snowybot,coinwalk,JavaScript,Saturday 26th of August 2023 10:46:06 AM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = ((kozster/144000).toFixed(8));
var zeggar = gobbie;
var target = 100;
var tens = (gobbie*10);
var sevens = (gobbie*6.1);
var eights = (gobbie*7.9);
var burgzie = kozster;
var joe = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var doh = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var boggart = 0;
var bear = true;
var tuba = ((Math.floor(kozster/tens))*tens);
var razzle;
var oldDegen = 0;
var nope = 1;
 
 
function go(){
burgzie = $('#pct_balance').val();
var bog = ((burgzie-kozster).toFixed(8));
console.log(""profit:"");
console.log(bog);
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie>tuba)){
    zeggar = zeggar*2;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie<tuba)){
    zeggar = zeggar*2;
	nope = 0;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>=(tuba+(tens*nope)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=target){
console.log(""snowybot rocks"");
return;
}
doh = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var milk = document.getElementById('me').firstChild.lastChild.firstChild.children[11].innerText;
if ((milk==razzle)&&(boggart>=1)&&(doh>joe)&&(!bear)){
joe = parseFloat(doh);
bear = true;
}
if ((milk!=razzle)&&(boggart>=1)&&(doh>joe)){
console.log(""hacker attack"");
console.log(""someone else played:"");
console.log(milk);
return;
}
if ((doh==joe)&&(bear)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
boggart = boggart+1;
bear = false;
doh = 0;
}
setTimeout(() => go(), 1);
}
go();

"
7xCwZ1CD,jstask-callbacks,blackalegator,JavaScript,Saturday 26th of August 2023 10:41:23 AM CDT,"function fetchData() {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      const data = { message: 'Data fetched successfully' };
      resolve(data);
    }, 1000);
  });
}


function getDataWithCallbacks(callback) {
  fetchData()
    .then(data => {
      processDataWithCallbacks(data, result => {
        callback(result);
      });
    })
    .catch(error => {
      console.error('Error:', error);
    });
}

function processDataWithCallbacks(data, callback) {
  setTimeout(() => {
    const processedData = `${data.message} and processed`;
    callback(processedData);
  }, 1000);
}


getDataWithCallbacks(result => {	
  console.log('Original Result:', result);
});"
BX9P6xzS,CodinGame_2023_08_26__17_23_37__alphabet_index.cpp,MonsterScripter,C++,Saturday 26th of August 2023 10:24:14 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Objectif
 * Afficher la somme totale des positions alphabétiques (index à partir de zéro) de tous les caractères dans la chaîne donnée n.
 * Exemple : A est à l'index 0 et B est à l'index 1.
 * Les espaces et autres caractères non alphabétiques doivent être ignorés.
 * Tous les caractères de la chaîne sont en majuscules.
 * 
 * Entrée
 * Une chaîne n.
 * 
 * Sortie
 * La somme des positions alphabétiques de tous les caractères.
 * 
 * Contraintes
 * 1 ≤ longueur de n ≤ 256
 * 
 * Exemple
 * Entrée
 * HI
 * Sortie
 * 15
 */

int main()
{
    string n;
    getline(cin, n);
    int sum = 0;
    for (char c : n)
        if (isalpha(c))
            sum += c - 'A';
    cout << sum << endl;
    return EXIT_SUCCESS;
}
"
8B0gvxCJ,CodinGame_2023_08_26__17_12_37__ecf.cpp,MonsterScripter,C++,Saturday 26th of August 2023 10:12:48 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

/**
 * Objectif
 * Il existe plusieurs organisations dans le monde des échecs, chacune ayant sa propre méthode de calcul du niveau de jeu d'un joueur. Vous devez convertir un classement ECF en classement FIDE.
 * 
 * Règles :
 * ECF x 7.5 + 700 = FIDE
 * 
 * Entrée
 * Ligne 1 : Un entier N représentant le nombre de classements à convertir.
 * 
 * Les N lignes suivantes : Un entier e représentant le classement ECF.
 * 
 * Sortie
 * N lignes : Le classement FIDE, arrondi à l'entier inférieur.
 * 
 * Contraintes
 * 2 ≤ N ≤ 9
 * 2 ≤ e ≤ 300
 * 
 * Exemple
 * Entrée
 * 2
 * 2
 * 300
 * Sortie
 * 715
 * 2950
 */

int main()
{
    int n;
    cin >> n; cin.ignore();
    for (int i = 0; i < n; i++) {
        int e;
        cin >> e; cin.ignore();
        cout << floor(e * 7.5 + 700) << endl;
    }
    return EXIT_SUCCESS;
}
"
2xvLPxu0,State Machine System,TaylorsRus,Lua,Saturday 26th of August 2023 09:55:27 AM CDT,"==========================
------State Machine-------
==========================
-- Credit // @TaylorsRus

--StateMachine.lua
local StateMachine ={}

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Players = game:GetService(""Players"")

local Config = ReplicatedStorage:WaitForChild(""Config"")

local States = require(Config:WaitForChild(""States""))
local HumanoidStates, CombatStates = States.Humanoid, States.Combat

local State = """"

function StateMachine:ChangeState(NewState, Humanoid)
	if not table.find(HumanoidStates, NewState) and not table.find(CombatStates, NewState) and not Humanoid then
		error(""Attempted to change state to invalid state enum: ""..tostring(NewState))
	end
	
	State = NewState
	print(""State Change:"",tostring(NewState))
end

function StateMachine:GetState()
	return State
end

return StateMachine

--StateManager.lua
local Knit = require(game:GetService(""ReplicatedStorage"").Packages.Knit)
local StateManager = Knit.CreateController {
	Name = ""StateManager"",
}

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Player = game:GetService(""Players"").LocalPlayer

local Config = ReplicatedStorage:WaitForChild(""Config"")
local Utility = ReplicatedStorage:WaitForChild(""Utility"")

local StateMachine = require(Utility:WaitForChild(""StateMachine""))
local States = require(Config:WaitForChild(""States""))
local HumanoidStates, CombatStates = States.Humanoid, States.Combat

local LastChange = nil
local AlreadyCounting = false

local IDLE_REVERT_TIME = 5 
local ITERATION_INTERVAL = 1

local function ConfigureStates(Character)
	local Humanoid = Character:WaitForChild(""Humanoid"")
	Humanoid.StateChanged:Connect(function(_, NewState)
		if NewState ~= Enum.HumanoidStateType.Running then
			StateMachine:ChangeState(NewState, true)
		end
		LastChange = os.clock()
		
		if AlreadyCounting then return end
		AlreadyCounting = true
		
		while true do
			task.wait(ITERATION_INTERVAL)
			local DeltaTime = os.clock() - LastChange
			if DeltaTime >= IDLE_REVERT_TIME then
				break
			end	
		end
		
		StateMachine:ChangeState(""Idle"")
		AlreadyCounting = false
	end)
	
	StateMachine:ChangeState(""Idle"")
end

function StateManager.KnitInit()
	if Player.Character then ConfigureStates(Player.Character) end
	Player.CharacterAdded:Connect(ConfigureStates)
end

return StateManager

--States.lua
return {
	Humanoid = {
		""Idle"",
		""FallingDown"",
		""Ragdoll"",
		""GettingUp"",
		""Walking"",
		""Running"",
		""Jumping"" ,
		""Dashing"",
		""Swimming"",
		""Freefall"",
		""Flying"",
		""Landed"",
		""Climbing"",
		""Seated"",
		""PlatformStanding"",
		""Dead"",
		""Physics"",
	},
	Combat = {
		""Ready"",
		""Readying"",
	}
}
"
M4Dcmb53,CodinGame_2023_08_26__16_50_43__sum_min_max.cpp,MonsterScripter,C++,Saturday 26th of August 2023 09:51:02 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Objectif
 * Vous devez additionner le maximum et le minimum d'une séquence.
 * 
 * Entrée
 * Ligne 1 : Nombre d'entiers N
 * Ligne 2 : Une séquence d'entiers X de longueur N
 * 
 * Sortie
 * Ligne 1 : La somme du minimum et du maximum de la séquence.
 * 
 * Contraintes
 * 2 ≤ N ≤ 1000
 * 
 * Exemple
 * Entrée
 * 2
 * 1 1
 * Sortie
 * 2
 */

int main()
{
    int n;
    cin >> n; cin.ignore();
    vector<int> v;
    for (int i = 0; i < n; i++) {
        int x;
        cin >> x; cin.ignore();
        v.push_back(x);
    }
    sort(v.begin(), v.end());
    cout << v.front() + v.back() << endl;
    return EXIT_SUCCESS;
}"
tZQhRNTc,CodinGame_2023_08_26__16_48_20__upper_lower.cpp,MonsterScripter,C++,Saturday 26th of August 2023 09:48:36 AM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cctype> // Inclure la bibliothèque pour utiliser les fonctions isalpha, isupper, tolower, toupper
#include <cstdlib> // Inclure la bibliothèque pour utiliser le code EXIT_SUCCESS

using namespace std;

/**
 * \brief Programme pour inverser la casse des caractères d'une chaîne.
 * \details Le programme lit une chaîne depuis l'entrée standard et inverse la casse de chaque caractère alphabétique.
 *          Les lettres minuscules deviennent majuscules et vice versa.
 *          Les caractères non alphabétiques restent inchangés.
 * \param[in] str La chaîne à traiter.
 * \return EXIT_SUCCESS si le programme s'est exécuté avec succès.
 */
int main()
{
    string str;
    getline(cin, str);
    
    // Parcours de chaque caractère de la chaîne
    for (char c : str) {
        cout <<
            (isalpha(c) ? (isupper(c) ? (char) tolower(c) : (char) toupper(c)) : c)
            ; // Si c'est une lettre, inverser la casse ; sinon, laisser inchangé
    }
    cout << endl;
    
    return EXIT_SUCCESS;
}
"
QcMenRxW,El creator v1,Hekt0RblxScripts,Lua,Saturday 26th of August 2023 09:20:14 AM CDT,"--[[
  _  _     _   _           _    
 | || |___| |_| |_ ___ _ _( )___
 | __ / -_) / /  _/ _ \ '_|/(_-<
 |_||_\___|_\_\\__\___/_| _ /__/
 | __| |___ _ __  ___ _ _| |_   
 | _|| / -_) '  \/ -_) ' \  _|  
 |___|_\___|_|_|_\___|_||_\__|  
  / __|_ _ ___ __ _| |_ ___ _ _ 
 | (__| '_/ -_) _` |  _/ _ \ '_|
  \___|_| \___\__,_|\__\___/_|  
              
       By Hekt0r_(dis)      
       Report bugs in server(ping)                   
]]
colr = 0
grup = ""ELCREATOR"" -- variables for creating elements
nme = ""notentered""
templ = """"
tempu = nil
weight = nil
highp = nil
flammable = nil
highptran = nil
lowtemp = nil
ltt = nil
explosive = nil
__tmps = {""WATR"", ""SAND"", ""METL""}
-- Notice : elements may not be fully configurable
-- CORE UI: Ui for creating elements(do not touch)
local __MWIN = Window:new(-1, -1, 300, 400)
local __EXITBTN = Button:new(-1,-1, 20,20, ""X"")
local __MBTN = Button:new(10, 10, 100, 17, ""Element Creator"")
local __SETBTN = Button:new(95, 340, 50, 17, ""Set"")
local __LBLNAME = Textbox:new(10, 30, 140, 20)
local __LBLCOLOR = Textbox:new(10, 50, 140, 20)
local __LBLTEMPL = Textbox:new(10, 70, 140, 20)
local __LBLWEIGHT = Textbox:new(10, 90, 140, 20)
local __LBLTEMPU = Textbox:new(10, 110, 140, 20)
local __LBLHIGHP = Textbox:new(10, 130, 140, 20)
local __LBLFLAMMABLE = Textbox:new(10, 150, 140, 20)
local __LBLHIGHPTRANS = Textbox:new(10, 170, 140, 20)
local __LBLLOWTMP = Textbox:new(10, 190, 140, 20)
local __LBLLTT = Textbox:new(10, 210, 140, 20)
local __LBLEXPLOSIVE = Textbox:new(150, 30, 140, 20)
function genEl(nam, color, template, weight, temperature, highpres, flammable, highptrans, sc, lt, explos)
--[[   
                ^            ^ req. parms
  Generate an element with Name, 
  color, and template for physics
  0xffffff
  watr
  
]]
shortNam = string.sub(nam, 1 ,4 )

gendElements = {}
curElGend = elements.allocate(grup, nam)
print(template)
if template ~= nil then
templat = ""DEFAULT_PT_"" .. template
print(templat)
print(curElGend)
   elements.element(curElGend, elements.element(elements[templat]))
end

elements.property(curElGend, ""Name"", shortNam)
elements.property(curElGend, ""Description"", ""Test."")
elements.property(curElGend, ""Colour"", color)
if weight ~= nil then
   elements.property(curElGend, ""Weight"", weight)
end
if temperature ~= nil then
   elements.property(curElGend, ""Temperature"", tonumber(temperature))
end
if highpres ~= nil then
   elements.property(curElGend, ""HighPressure"", highpres)
end
if flammable ~= nil then
   elements.property(curElGend, ""Flammable"", flammable)
end
if highptrans ~= nil then
   hpt = ""DEFAULT_PT_"" .. highptrans
   print(hpt)
   elements.property(curElGend, ""HighPressureTransition"", elements[hpt])
end
if sc ~= nil then
 elements.property(curElGend, ""LowTemperature"", sc)
end
if lt ~= nil then
 lt2 = ""DEFAULT_PT_"" .. lt
 print(lt2)
elements.property(curElGend, ""LowTemperatureTransition"", elements[lt2])
end
if explos ~= nil then
    elements.property(curElGend, ""Explosive"", explos)
end
 end
--Codegen

--Defining elements and methods
__LBLNAME:text(""Element name"")
__LBLCOLOR:text(""color(HEX or num)"")
__LBLTEMPL:text(""template eg:WATR(allcaps)"")
__LBLWEIGHT:text("" weight(num)"")
__LBLTEMPU:text(""Element tempurature"")
__LBLHIGHP:text(""Element high pressure"")
__LBLFLAMMABLE:text(""Flammable: number "")
__LBLHIGHPTRANS:text(""High pres. trans.: Element"")
__LBLLOWTMP:text(""Lowtemp: num"")
__LBLLTT:text(""Elememt eg: SNOW(allcap)"")
__LBLEXPLOSIVE:text(""Explosive: 0, 1 or 2"")
__MBTN:action(function(sender) interface.showWindow(__MWIN) end)
__SETBTN:action(function(sender) nme = tostring(__LBLNAME:text())  colr = tonumber(__LBLCOLOR:text()) templ = __LBLTEMPL:text()  tempu = __LBLTEMPU:text() weight = __LBLWEIGHT:text() highp = __LBLHIGHP:text() flammable = __LBLFLAMMABLE:text() highptran = __LBLHIGHPTRANS:text() lowtemp = __LBLLOWTMP:text() ltt = __LBLLTT:text() explosive = __LBLEXPLOSIVE:text()  genEl(nme, colr, templ, weight, tempu, highp, flammable, highptran, lowtemp, ltt, explosive ) end)
__EXITBTN:action(function(sender) interface.closeWindow(__MWIN) end)

--Actions
__MWIN:addComponent(__EXITBTN)
__MWIN:addComponent(__LBLNAME)
__MWIN:addComponent(__SETBTN)
__MWIN:addComponent(__LBLCOLOR)
__MWIN:addComponent(__LBLTEMPL)
__MWIN:addComponent(__LBLTEMPU)
__MWIN:addComponent(__LBLHIGHP)
__MWIN:addComponent(__LBLWEIGHT)
__MWIN:addComponent(__LBLFLAMMABLE)
__MWIN:addComponent(__LBLHIGHPTRANS)
__MWIN:addComponent(__LBLLOWTMP)
__MWIN:addComponent(__LBLLTT)
__MWIN:addComponent(__LBLEXPLOSIVE)
interface.addComponent(__MBTN)
--Adding components


print(nme)
print(__LBLNAME:text())

-- Debug
"
BB4sK3wU,New DataStore Shirt and Pants,Sungmingamerpro13,CSS,Saturday 26th of August 2023 08:58:38 AM CDT,"local DataStore = game:GetService(“DataStoreService”):GetDataStore(“ClothingSave”)
function Save(Chr, Plr)

local face
for i,v in pairs(Chr.Head:GetChildren()) do
	if v:IsA(""Decal"") then
		face = v
	end
end
local information = {
	[""Shirt""] = Chr.Shirt.ShirtTemplate;
	[""Pants""] = Chr.Pants.PantsTemplate;
	[""Face""] =face.Texture
}
DataStore:SetAsync(Plr.UserId, information)
end

function Load(Chr, Plr)
	local good, info = pcall(function()
		return(DataStore:GetAsync(Plr.UserId))
	end)
	print(Plr.Name, ""DataStoreRetrivalInformation"", good, info)
	for i,v in pairs(Chr.Head:GetChildren()) do
		if v:IsA(""Decal"") then
			v.Texture = info.Face
		end
	end    
	Chr.Shirt.ShirtTemplate = info.Shirt
	Chr.Pants.PantsTemplate = info.Pants
end
game.Players.PlayerAdded:Connect(function(Plr)
	local Char = Plr.CharacterAppearanceLoaded:Wait()
	Load(Char)
end)
game.Players.PlayerRemoving:Connect(function(Plr)
	Save()
end)"
f51RpVti,snowybot update completed maybe,coinwalk,JavaScript,Saturday 26th of August 2023 08:57:44 AM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = ((kozster/144000).toFixed(8));
var zeggar = gobbie;
var target = 100;
var tens = (gobbie*10);
var sevens = (gobbie*6.1);
var eights = (gobbie*7.9);
var burgzie = kozster;
var joe = $($(""#me>div>.betid"")[0]).text();
var boggart = 0;
var bear = true;
var tuba = ((Math.floor(kozster/tens))*tens);
var razzle;
var oldDegen = 0;
var nope = 1;
 
 
function go(){
burgzie = $('#pct_balance').val();
var bog = ((burgzie-kozster).toFixed(8));
console.log(""profit:"");
console.log(bog);
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie>tuba)){
    zeggar = zeggar*2;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie<tuba)){
    zeggar = zeggar*2;
	nope = 0;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>=(tuba+(tens*nope)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=target){
console.log(""snowybot rocks"");
return;
}
var doh = $($(""#me>div>.betid"")[0]).text();
var lol = $($(""#me.results>div>.bet"")[0]).text();
var milk = (((lol)*1).toFixed(8));
if (((milk>razzle)&&(boggart>=1)&&(doh>joe)&&(!bear))||((milk<razzle)&&(boggart>=1)&&(doh>joe)&&(!bear))){
console.log(""hacker attack"");
console.log(razzle);
console.log(milk);
return;
}
if ((milk==razzle)&&(boggart>=1)&&(doh>joe)&&(!bear)){
joe = parseFloat(doh);
bear = true;
}
if ((doh==joe)&&(bear)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
boggart = boggart+1;
bear = false;
}
setTimeout(() => go(), 1);
}
go();

"
N6KPhvmE,Untitled,el1syum,Python,Saturday 26th of August 2023 08:56:26 AM CDT,"import time
from concurrent.futures import ThreadPoolExecutor

import pandas as pd
import requests
from bs4 import BeautifulSoup

TABLE_NAME = 'output.xlsx'


def get_lab_name(link):
    while True:
        try:
            response = requests.get(link)
            soup = BeautifulSoup(response.content, 'html.parser')
            element = soup.find('div', class_='gost-form__label', string='Наименование')
            lab_name = element.find_next_sibling('div').text
            return lab_name
        except requests.RequestException as e:
            print(f""Ошибка при загрузке страницы: {e}"")
            time.sleep(1)
        except AttributeError:  # в случае если каким то образом на странице не будет name
            return ''


url = 'https://www.rst.gov.ru/portal/gost/home/activity/compliance/evaluationcompliance/AcknowledgementCorrespondence/safetycertificate018?portal:componentId=ff119059-8bd4-47fc-95f6-a70de17a4b3e&portal:isSecure=false&portal:portletMode=view&navigationalstate=JBPNS_rO0ABXdgAAhwYWdlU2l6ZQAAAAEAAjIwAAdvcmRlckJ5AAAAAQAYZGF0ZW9maXNzdWVvZmNlcnRpZmljYXRlAARmcm9tAAAAAQABMAAFb3JkZXIAAAABAARERVNDAAdfX0VPRl9f'

page_number = 1
max_pages = 2  # сколько страниц парсить

data = []

while page_number <= max_pages:
    while True:
        try:
            response = requests.get(url)
            soup = BeautifulSoup(response.content, 'html.parser')
            break
        except requests.RequestException as e:
            print(f""Ошибка при загрузке страницы: {e}"")
            time.sleep(1)

    table = soup.find('table')

    with ThreadPoolExecutor(max_workers=5) as executor:  # можно ли макс воркерс поставить 9999 ?????
        for row in table.find_all('tr')[1:]:
            cells = row.find_all('td')
            link = cells[2].find('a')['href']
            lab_name_future = executor.submit(get_lab_name, link)
            column1 = cells[0].text.strip()
            column2 = cells[1].text.strip()
            column3 = cells[2].text.strip()
            column4 = cells[3].text.strip()
            column5 = cells[4].text.strip()
            column6 = cells[5].text.strip()
            lab_name = lab_name_future.result()
            data.append({'Ссылка': link, 'Лаборатория': lab_name, 'Марка': column1, 'Шасси': column2, 'Номер': column3,
                         'Дата': column4, 'Эко класс': column5, 'Примечание': column6})
    next_button = soup.find('a', string='Вперед →')  # Найти ссылку на следующую страницу
    if next_button:
        url = next_button['href']  # обновить юрл для некст страницы
        print(f'спарсил страницу {page_number} из {max_pages}')
        page_number += 1  # счетчик +
    else:
        break  # если ссылка на следующую страницу не найдена, выйти из цикла, но наверное неверно

df = pd.DataFrame(
    data)  # мб сделать как то сохранение после перехода к след странице чтобы не сильно грузить озу ну и наверное должно быстрее воркать
df.to_excel(TABLE_NAME, index=False)
"
34RzsHZQ,long live snowybot,coinwalk,JavaScript,Saturday 26th of August 2023 08:51:23 AM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = (kozster/144000);
var zeggar = gobbie;
var target = 100;
var tens = (gobbie*10);
var sevens = (gobbie*6.9);
var eights = (gobbie*7.9);
var burgzie = kozster;
var joe = $($(""#me>div>.betid"")[0]).text();
var boggart = 0;
var bear = true;
var tuba = ((Math.floor(kozster/tens))*tens);
var razzle;
var oldDegen = 0;
var nope = 1;
 
 
function go(){
burgzie = $('#pct_balance').val();
var bog = ((burgzie-kozster).toFixed(8));
console.log(""profit:"");
console.log(bog);
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie>tuba)){
    zeggar = zeggar*2;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie<tuba)){
    zeggar = zeggar*2;
	nope = 0;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>=(tuba+(tens*nope)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=target){
console.log(""snowybot rocks"");
return;
}
var doh = $($(""#me>div>.betid"")[0]).text();
var lol = $($(""#me.results>div>.bet"")[0]).text();
var milk = (((lol)*1).toFixed(8));
if (((milk>razzle)&&(boggart>=1)&&(doh>joe)&&(!bear))||((milk<razzle)&&(boggart>=1)&&(doh>joe)&&(!bear))){
console.log(""hacker attack"");
console.log(razzle);
console.log(milk);
return;
}
if ((milk==razzle)&&(boggart>=1)&&(doh>joe)&&(!bear)){
joe = parseFloat(doh);
bear = true;
}
if ((doh==joe)&&(bear)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
boggart = boggart+1;
bear = false;
}
setTimeout(() => go(), 1);
}
go();

"
LRkN9AJV,News Aug26 23,Newscaster_Ned,Email,Saturday 26th of August 2023 08:49:36 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

I‎'‎m‎ ‎h‎i‎g‎h‎ ‎o‎n‎ ‎c‎o‎c‎a‎i‎n‎e‎.‎

T‎h‎e‎ ‎B‎e‎s‎t‎ ‎T‎r‎u‎m‎p‎ ‎M‎u‎g‎s‎h‎o‎t‎ ‎M‎e‎m‎e‎s‎ ‎T‎a‎k‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎S‎o‎c‎i‎a‎l‎ ‎M‎e‎d‎i‎a‎
L‎A‎S‎ ‎V‎E‎G‎A‎S‎,‎ ‎N‎E‎V‎A‎D‎A‎ ‎-‎ ‎J‎U‎L‎Y‎ ‎0‎8‎:‎ ‎F‎o‎r‎m‎e‎r‎ ‎U‎.‎S‎.‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎a‎n‎d‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎s‎m‎i‎l‎e‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎h‎e‎ ‎d‎e‎l‎i‎v‎e‎r‎s‎ ‎r‎e‎m‎a‎r‎k‎s‎ ‎a‎t‎ ‎a‎ ‎N‎e‎v‎a‎d‎a‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎v‎o‎l‎u‎n‎t‎e‎e‎r‎ ‎r‎e‎c‎r‎u‎i‎t‎i‎n‎g‎ ‎e‎v‎e‎n‎t‎ ‎a‎t‎ ‎F‎e‎r‎v‎e‎n‎t‎:‎ ‎A‎ ‎C‎a‎l‎v‎a‎r‎y‎ ‎C‎h‎a‎p‎e‎l‎ ‎o‎n‎ ‎J‎u‎l‎y‎ ‎8‎,‎ ‎2‎0‎2‎3‎ ‎i‎n‎ ‎L‎a‎s‎ ‎V‎e‎g‎a‎s‎,‎ ‎N‎e‎v‎a‎d‎a‎.‎ ‎T‎r‎u‎m‎p‎ ‎i‎s‎ ‎t‎h‎e‎ ‎c‎u‎r‎r‎e‎n‎t‎ ‎f‎r‎o‎n‎t‎r‎u‎n‎n‎e‎r‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎2‎0‎2‎4‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎…‎
W‎h‎i‎l‎e‎ ‎d‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎c‎e‎l‎e‎b‎r‎a‎t‎e‎d‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎ ‎t‎o‎ ‎a‎ ‎b‎e‎ ‎a‎ ‎v‎i‎c‎t‎o‎r‎y‎ ‎o‎v‎e‎r‎ ‎M‎A‎G‎A‎,‎ ‎c‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎s‎ ‎r‎e‎c‎o‎g‎n‎i‎z‎e‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎l‎e‎s‎s‎ ‎i‎c‎o‎n‎i‎c‎ ‎q‎u‎a‎l‎i‎t‎y‎ ‎o‎f‎ ‎f‎o‎r‎m‎e‎r‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎m‎u‎g‎s‎h‎o‎t‎ ‎a‎s‎ ‎t‎h‎e‎ ‎r‎e‎s‎u‎l‎t‎ ‎o‎f‎ ‎r‎e‎f‎u‎s‎i‎n‎g‎ ‎t‎o‎ ‎b‎a‎c‎k‎ ‎d‎o‎w‎n‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎t‎h‎e‎ ‎d‎e‎e‎p‎ ‎s‎t‎a‎t‎e‎.‎ ‎A‎t‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎t‎i‎m‎e‎,‎ ‎c‎o‎n‎s‎e‎r‎v‎a‎t‎i‎v‎e‎ ‎m‎e‎m‎e‎ ‎m‎a‎k‎e‎r‎s‎ ‎w‎e‎r‎e‎ ‎b‎u‎s‎y‎ ‎c‎o‎o‎k‎i‎n‎g‎ ‎u‎p‎ ‎i‎m‎a‎g‎e‎s‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎n‎o‎w‎ ‎s‎p‎r‎e‎a‎d‎i‎n‎g‎ ‎l‎i‎k‎e‎ ‎w‎i‎l‎d‎f‎i‎r‎e‎ ‎o‎n‎ ‎s‎o‎c‎i‎a‎l‎ ‎m‎e‎d‎i‎a‎.‎

A‎L‎A‎N‎A‎ ‎M‎A‎S‎T‎R‎A‎N‎G‎E‎L‎O‎7‎,‎5‎5‎2‎
…‎B‎I‎D‎E‎N‎ ‎O‎N‎ ‎T‎R‎U‎M‎P‎ ‎M‎U‎G‎S‎H‎O‎T‎:‎ ‎‘‎H‎A‎N‎D‎S‎O‎M‎E‎ ‎G‎U‎Y‎’‎…‎
J‎O‎R‎D‎A‎N‎ ‎D‎I‎X‎O‎N‎-‎H‎A‎M‎I‎L‎T‎O‎N‎
1‎,‎9‎8‎4‎
…‎Z‎I‎L‎L‎O‎W‎ ‎A‎D‎M‎I‎T‎S‎ ‎L‎I‎S‎T‎I‎N‎G‎ ‎C‎L‎A‎I‎M‎I‎N‎G‎ ‎T‎R‎U‎M‎P‎ ‎‘‎S‎O‎L‎D‎’‎ ‎M‎A‎R‎-‎A‎-‎L‎A‎G‎O‎ ‎W‎A‎S‎ ‎‘‎I‎N‎C‎O‎R‎R‎E‎C‎T‎’‎
N‎I‎C‎K‎ ‎G‎I‎L‎B‎E‎R‎T‎S‎O‎N‎
2‎7‎2‎
R‎e‎p‎o‎r‎t‎e‎r‎s‎ ‎D‎i‎s‎c‎o‎v‎e‎r‎ ‎C‎h‎i‎n‎a‎’‎s‎ ‎M‎a‎s‎s‎i‎v‎e‎ ‎E‎l‎e‎c‎t‎r‎i‎c‎ ‎V‎e‎h‎i‎c‎l‎e‎ ‎G‎r‎a‎v‎e‎y‎a‎r‎d‎s‎
4‎7‎0‎
T‎r‎u‎m‎p‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎F‎a‎k‎e‎ ‎N‎e‎w‎s‎ ‎B‎u‎s‎t‎e‎d‎:‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎J‎r‎.‎ ‎D‎i‎d‎ ‎N‎o‎t‎ ‎A‎c‎q‎u‎i‎r‎e‎ ‎M‎a‎r‎-‎a‎-‎L‎a‎g‎o‎
3‎,‎9‎5‎5‎
H‎o‎c‎h‎u‎l‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎J‎o‎b‎s‎ ‎P‎r‎o‎g‎r‎a‎m‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎ ‎w‎i‎t‎h‎ ‎3‎8‎0‎K‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎e‎r‎s‎ ‎J‎o‎b‎l‎e‎s‎s‎
H‎o‎c‎h‎u‎l‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎s‎ ‎J‎o‎b‎s‎ ‎P‎r‎o‎g‎r‎a‎m‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎ ‎w‎i‎t‎h‎ ‎3‎8‎0‎K‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎e‎r‎s‎ ‎J‎o‎b‎l‎e‎s‎s‎
6‎1‎9‎
M‎c‎C‎a‎b‎e‎:‎ ‎P‎a‎l‎i‎n‎ ‎E‎n‎c‎o‎u‎r‎a‎g‎i‎n‎g‎ ‎'‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎V‎i‎o‎l‎e‎n‎c‎e‎'‎ ‎o‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎A‎r‎r‎e‎s‎t‎
M‎c‎C‎a‎b‎e‎:‎ ‎P‎a‎l‎i‎n‎ ‎E‎n‎c‎o‎u‎r‎a‎g‎i‎n‎g‎ ‎'‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎V‎i‎o‎l‎e‎n‎c‎e‎'‎ ‎o‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎A‎r‎r‎e‎s‎t‎
9‎8‎4‎
L‎e‎f‎t‎i‎s‎t‎s‎,‎ ‎N‎e‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎e‎r‎s‎ ‎S‎p‎i‎k‎e‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎ ‎o‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎M‎u‎g‎s‎h‎o‎t‎:‎ ‎'‎W‎e‎ ‎G‎o‎t‎ ‎H‎i‎m‎'‎
L‎e‎f‎t‎i‎s‎t‎s‎,‎ ‎N‎e‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎e‎r‎s‎ ‎S‎p‎i‎k‎e‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎ ‎o‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎M‎u‎g‎s‎h‎o‎t‎:‎ ‎'‎W‎e‎ ‎G‎o‎t‎ ‎H‎i‎m‎'‎
1‎,‎2‎9‎1‎
M‎S‎N‎B‎C‎'‎s‎ ‎R‎e‎i‎d‎:‎ ‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎a‎ ‎'‎V‎i‎l‎e‎,‎ ‎R‎a‎c‎i‎s‎t‎,‎ ‎A‎n‎t‎i‎-‎D‎e‎m‎o‎c‎r‎a‎c‎y‎ ‎B‎u‎f‎f‎o‎o‎n‎'‎
M‎S‎N‎B‎C‎'‎s‎ ‎R‎e‎i‎d‎:‎ ‎T‎r‎u‎m‎p‎ ‎I‎s‎ ‎a‎ ‎'‎V‎i‎l‎e‎,‎ ‎R‎a‎c‎i‎s‎t‎,‎ ‎A‎n‎t‎i‎-‎D‎e‎m‎o‎c‎r‎a‎c‎y‎ ‎B‎u‎f‎f‎o‎o‎n‎'‎
1‎,‎2‎3‎3‎
H‎a‎l‎e‎y‎:‎ ‎W‎e‎ ‎H‎a‎v‎e‎ ‎t‎o‎ ‎'‎H‎u‎m‎a‎n‎i‎z‎e‎'‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎I‎s‎s‎u‎e‎
H‎a‎l‎e‎y‎:‎ ‎W‎e‎ ‎H‎a‎v‎e‎ ‎t‎o‎ ‎'‎H‎u‎m‎a‎n‎i‎z‎e‎'‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎I‎s‎s‎u‎e‎
1‎,‎9‎1‎1‎
T‎r‎u‎m‎p‎ ‎t‎o‎ ‎S‎u‎r‎r‎e‎n‎d‎e‎r‎,‎ ‎B‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎F‎u‎l‎t‎o‎n‎ ‎C‎o‎u‎n‎t‎y‎,‎ ‎G‎e‎o‎r‎g‎i‎a‎,‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎
T‎r‎u‎m‎p‎ ‎t‎o‎ ‎S‎u‎r‎r‎e‎n‎d‎e‎r‎,‎ ‎B‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎F‎u‎l‎t‎o‎n‎ ‎C‎o‎u‎n‎t‎y‎,‎ ‎G‎e‎o‎r‎g‎i‎a‎,‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎

B‎a‎l‎d‎ ‎N‎e‎g‎r‎e‎s‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎g‎a‎i‎n‎ ‎f‎o‎r‎ ‎S‎t‎a‎b‎b‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎,‎ ‎P‎a‎r‎a‎l‎y‎z‎i‎n‎g‎ ‎H‎e‎r‎,‎ ‎a‎n‎d‎ ‎C‎a‎u‎s‎i‎n‎g‎ ‎H‎e‎r‎ ‎t‎o‎ ‎D‎i‎e‎ ‎3‎ ‎W‎e‎e‎k‎s‎ ‎L‎a‎t‎e‎r‎.‎

L‎e‎t‎'‎s‎ ‎h‎o‎p‎e‎ ‎s‎h‎e‎ ‎e‎n‎d‎s‎ ‎u‎p‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎h‎a‎i‎r‎ ‎3‎ ‎w‎e‎e‎k‎s‎ ‎f‎r‎o‎m‎ ‎n‎o‎w‎.‎


2‎ ‎M‎o‎n‎k‎e‎y‎m‎e‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎a‎n‎d‎ ‎T‎h‎e‎n‎ ‎D‎u‎m‎p‎i‎n‎g‎ ‎H‎i‎s‎ ‎B‎o‎d‎y‎ ‎i‎n‎ ‎T‎a‎l‎l‎ ‎G‎r‎a‎s‎s‎y‎ ‎F‎i‎e‎l‎d‎.‎


N‎i‎g‎ ‎P‎u‎n‎c‎h‎e‎s‎ ‎R‎a‎n‎d‎o‎m‎ ‎W‎o‎m‎a‎n‎,‎ ‎S‎a‎y‎s‎ ‎S‎h‎e‎'‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎K‎K‎K‎,‎ ‎a‎n‎d‎ ‎C‎a‎l‎l‎s‎ ‎H‎e‎r‎ ‎a‎ ‎""‎W‎h‎i‎t‎e‎ ‎S‎u‎p‎r‎e‎m‎a‎c‎i‎s‎t‎""‎.‎ ‎


T‎r‎i‎a‎l‎ ‎B‎e‎g‎i‎n‎s‎ ‎f‎o‎r‎ ‎2‎ ‎B‎o‎n‎g‎o‎ ‎B‎e‎a‎t‎e‎r‎s‎ ‎W‎h‎o‎ ‎T‎r‎i‎e‎d‎ ‎t‎o‎ ‎J‎o‎i‎n‎ ‎I‎S‎I‎S‎.‎


N‎e‎g‎r‎o‎ ‎w‎i‎t‎h‎ ‎P‎i‎g‎t‎a‎i‎l‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎R‎o‎c‎k‎f‎o‎r‎d‎ ‎f‎o‎r‎ ‎M‎o‎l‎e‎s‎t‎i‎n‎g‎ ‎C‎h‎i‎l‎d‎.‎


M‎o‎n‎k‎e‎y‎ ‎G‎r‎a‎b‎s‎ ‎L‎i‎t‎t‎l‎e‎ ‎A‎s‎s‎ ‎I‎n‎s‎i‎d‎e‎ ‎T‎a‎m‎p‎a‎ ‎C‎h‎u‎r‎c‎h‎ ‎C‎l‎a‎s‎s‎r‎o‎o‎m‎.‎


A‎n‎o‎t‎h‎e‎r‎ ‎A‎s‎s‎-‎G‎r‎a‎b‎b‎i‎n‎g‎ ‎N‎e‎g‎r‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎V‎i‎d‎e‎o‎ ‎i‎s‎ ‎R‎e‎l‎e‎a‎s‎e‎d‎ ‎o‎f‎ ‎H‎i‎s‎ ‎A‎s‎s‎a‎u‎l‎t‎ ‎o‎n‎ ‎M‎a‎n‎h‎a‎t‎t‎a‎n‎ ‎S‎u‎b‎w‎a‎y‎.‎


C‎a‎p‎u‎c‎h‎i‎n‎ ‎C‎r‎a‎s‎h‎e‎s‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎S‎U‎V‎,‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎ ‎I‎n‎s‎i‎d‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎i‎m‎e‎ ‎t‎o‎ ‎p‎l‎a‎y‎ ‎t‎h‎e‎ ‎s‎a‎d‎ ‎m‎u‎s‎i‎c‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
1‎0‎5‎°‎
/‎7‎6‎°‎
2‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎6‎ ‎|‎ ‎D‎a‎y‎
1‎0‎5‎°‎
2‎%‎
S‎E‎
8‎
 ‎
m‎p‎h‎
M‎a‎i‎n‎l‎y‎ ‎s‎u‎n‎n‎y‎.‎ ‎N‎e‎a‎r‎ ‎r‎e‎c‎o‎r‎d‎ ‎h‎i‎g‎h‎ ‎t‎e‎m‎p‎e‎r‎a‎t‎u‎r‎e‎s‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎1‎0‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
1‎0‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎3‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎5‎9‎ ‎p‎m‎
S‎a‎t‎ ‎2‎6‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎6‎°‎
3‎%‎
S‎
1‎0‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎e‎a‎r‎.‎ ‎L‎o‎w‎ ‎7‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
4‎:‎4‎6‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎:‎4‎4‎ ‎a‎m‎
S‎u‎n‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎7‎°‎
/‎7‎8‎°‎
3‎%‎
W‎N‎W‎ ‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎0‎°‎
/‎7‎6‎°‎
2‎0‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎9‎°‎
/‎7‎1‎°‎
6‎%‎
N‎N‎E‎ ‎1‎4‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎0‎
S‎u‎n‎n‎y‎
1‎0‎0‎°‎
/‎7‎0‎°‎
0‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎3‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎0‎°‎
0‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎0‎°‎
/‎7‎3‎°‎
1‎2‎%‎
S‎S‎E‎ ‎7‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎2‎°‎
/‎7‎4‎°‎
2‎2‎%‎
S‎S‎E‎ ‎7‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎5‎°‎
1‎9‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
S‎u‎n‎n‎y‎
1‎0‎2‎°‎
/‎7‎5‎°‎
1‎1‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎6‎°‎
1‎4‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎5‎°‎
1‎5‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎1‎°‎
/‎7‎6‎°‎
1‎5‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎0‎°‎
/‎7‎5‎°‎
2‎4‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎9‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
1‎0‎0‎°‎
/‎7‎5‎°‎
4‎3‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎E‎n‎d‎ ‎o‎f‎ ‎S‎u‎m‎m‎e‎r‎.‎ ‎🍥🔥

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎a‎t‎h‎o‎l‎i‎c‎
T‎h‎e‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎ ‎c‎h‎u‎r‎c‎h‎ ‎(‎n‎o‎t‎ ‎t‎o‎ ‎b‎e‎ ‎c‎o‎n‎f‎u‎s‎e‎d‎ ‎w‎i‎t‎h‎ ‎i‎t‎'‎s‎ ‎c‎l‎o‎s‎e‎ ‎a‎f‎f‎i‎l‎i‎a‎t‎e‎ ‎N‎A‎M‎B‎L‎A‎)‎ ‎i‎s‎ ‎t‎h‎e‎ ‎l‎a‎r‎g‎e‎s‎t‎ ‎o‎r‎g‎a‎n‎i‎z‎e‎d‎ ‎p‎e‎d‎o‎p‎h‎i‎l‎e‎ ‎r‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎w‎h‎o‎ ‎p‎r‎e‎t‎e‎n‎d‎ ‎t‎o‎ ‎e‎n‎j‎o‎y‎ ‎e‎a‎t‎i‎n‎g‎ ‎f‎i‎s‎h‎ ‎s‎t‎i‎c‎k‎s‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎L‎e‎n‎t‎ ‎a‎n‎d‎ ‎w‎e‎a‎r‎i‎n‎g‎ ‎a‎s‎h‎e‎s‎ ‎o‎n‎ ‎t‎h‎e‎i‎r‎ ‎f‎o‎r‎e‎h‎e‎a‎d‎ ‎o‎n‎c‎e‎ ‎a‎ ‎y‎e‎a‎r‎ ‎t‎o‎ ‎c‎r‎e‎e‎p‎ ‎p‎e‎o‎p‎l‎e‎ ‎o‎u‎t‎.‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎s‎ ‎a‎r‎e‎ ‎w‎e‎l‎l‎ ‎k‎n‎o‎w‎n‎ ‎f‎o‎r‎ ‎a‎c‎c‎e‎p‎t‎a‎n‎c‎e‎ ‎o‎f‎ ‎p‎e‎d‎o‎p‎h‎i‎l‎i‎a‎ ‎i‎n‎ ‎a‎l‎l‎ ‎i‎t‎s‎ ‎f‎o‎r‎m‎s‎.‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎s‎t‎a‎n‎d‎ ‎l‎e‎s‎s‎ ‎o‎f‎ ‎a‎ ‎c‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎b‎e‎i‎n‎g‎ ‎r‎a‎p‎e‎d‎ ‎b‎y‎ ‎f‎u‎r‎r‎i‎e‎s‎ ‎t‎h‎a‎n‎ ‎C‎a‎t‎h‎-‎o‎-‎h‎o‎l‎i‎c‎ ‎p‎r‎i‎e‎s‎t‎s‎.‎ ‎A‎l‎l‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎s‎ ‎a‎r‎e‎ ‎c‎l‎o‎s‎e‎t‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎s‎ ‎a‎n‎d‎ ‎v‎i‎c‎t‎i‎m‎s‎ ‎o‎f‎ ‎a‎ ‎r‎e‎p‎r‎e‎s‎s‎e‎d‎ ‎s‎e‎x‎u‎a‎l‎i‎t‎y‎ ‎t‎h‎a‎t‎ ‎c‎o‎m‎e‎s‎ ‎f‎r‎o‎m‎ ‎n‎o‎n‎s‎e‎n‎s‎i‎c‎a‎l‎ ‎r‎e‎l‎i‎g‎i‎o‎n‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎i‎s‎m‎.‎ ‎N‎o‎t‎e‎:‎ ‎S‎o‎m‎e‎ ‎C‎a‎t‎h‎o‎l‎i‎c‎s‎ ‎a‎r‎e‎ ‎n‎o‎t‎ ‎r‎e‎l‎i‎g‎i‎o‎u‎s‎,‎ ‎b‎u‎t‎ ‎t‎h‎e‎y‎ ‎m‎a‎y‎ ‎b‎e‎ ‎a‎d‎d‎i‎c‎t‎e‎d‎ ‎t‎o‎ ‎c‎a‎t‎s‎.‎ ‎J‎u‎s‎t‎ ‎l‎i‎k‎e‎ ‎f‎a‎k‎e‎ ‎c‎h‎u‎r‎c‎h‎ ‎o‎f‎ ‎J‎e‎h‎o‎v‎a‎h‎ ‎W‎i‎t‎n‎e‎s‎s‎e‎s‎,‎ ‎b‎e‎f‎o‎r‎e‎ ‎y‎o‎u‎ ‎d‎i‎e‎,‎ ‎i‎t‎ ‎i‎s‎ ‎i‎m‎p‎o‎r‎t‎a‎n‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎c‎h‎u‎r‎c‎h‎ ‎t‎o‎ ‎b‎e‎ ‎r‎e‎m‎e‎m‎b‎e‎r‎e‎d‎ ‎i‎n‎ ‎y‎o‎u‎r‎ ‎w‎i‎l‎l‎.‎

(‎(‎ ‎B‎e‎ ‎A‎ ‎G‎o‎o‎d‎ ‎B‎o‎y‎ ‎A‎n‎d‎ ‎B‎o‎w‎ ‎Y‎o‎u‎r‎ ‎H‎e‎a‎d‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎o‎b‎i‎t‎i‎ ‎K‎a‎m‎a‎n‎i‎ ‎i‎s‎ ‎a‎ ‎r‎o‎c‎k‎ ‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎i‎n‎ ‎V‎a‎r‎n‎a‎ ‎P‎r‎o‎v‎i‎n‎c‎e‎,‎ ‎B‎u‎l‎g‎a‎r‎i‎a‎.‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎a‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎o‎r‎i‎e‎s‎ ‎r‎e‎g‎a‎r‎d‎i‎n‎g‎ ‎i‎t‎s‎ ‎o‎r‎i‎g‎i‎n‎,‎ ‎w‎i‎t‎h‎ ‎t‎w‎o‎ ‎b‎r‎o‎a‎d‎ ‎h‎y‎p‎o‎t‎h‎e‎s‎e‎s‎.‎ ‎A‎c‎c‎o‎r‎d‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎f‎o‎r‎m‎e‎r‎,‎ ‎t‎h‎e‎ ‎f‎o‎r‎m‎a‎t‎i‎o‎n‎s‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎r‎e‎s‎u‎l‎t‎ ‎o‎f‎ ‎c‎o‎r‎a‎l‎ ‎a‎c‎t‎i‎v‎i‎t‎y‎,‎ ‎w‎h‎i‎l‎e‎ ‎t‎h‎e‎ ‎l‎a‎t‎t‎e‎r‎ ‎e‎x‎p‎l‎a‎i‎n‎s‎ ‎t‎h‎e‎ ‎p‎h‎e‎n‎o‎m‎e‎n‎o‎n‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎p‎r‎i‎s‎m‎a‎t‎i‎c‎ ‎w‎e‎a‎t‎h‎e‎r‎i‎n‎g‎ ‎a‎n‎d‎ ‎d‎e‎s‎e‎r‎t‎i‎f‎i‎c‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎r‎o‎c‎k‎s‎,‎ ‎t‎h‎e‎ ‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎s‎a‎n‎d‎ ‎a‎n‎d‎ ‎l‎i‎m‎e‎s‎t‎o‎n‎e‎ ‎c‎o‎n‎c‎r‎e‎t‎i‎o‎n‎s‎,‎ ‎o‎r‎ ‎l‎o‎w‎e‎r‎ ‎E‎o‎c‎e‎n‎e‎ ‎b‎u‎b‎b‎l‎i‎n‎g‎ ‎r‎e‎e‎f‎s‎.‎ ‎T‎h‎e‎ ‎s‎t‎o‎n‎e‎ ‎p‎i‎l‎l‎a‎r‎s‎ ‎w‎e‎r‎e‎ ‎f‎i‎r‎s‎t‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎d‎ ‎b‎y‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎a‎r‎c‎h‎a‎e‎o‎l‎o‎g‎i‎s‎t‎ ‎a‎n‎d‎ ‎h‎i‎s‎t‎o‎r‎i‎a‎n‎ ‎V‎i‎c‎t‎o‎r‎ ‎T‎e‎p‎l‎y‎a‎k‎o‎v‎ ‎i‎n‎ ‎1‎8‎2‎9‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎s‎i‎t‎e‎ ‎w‎a‎s‎ ‎d‎e‎s‎i‎g‎n‎a‎t‎e‎d‎ ‎a‎ ‎n‎a‎t‎u‎r‎a‎l‎ ‎l‎a‎n‎d‎m‎a‎r‎k‎ ‎i‎n‎ ‎t‎h‎e‎ ‎l‎a‎t‎e‎ ‎1‎9‎3‎0‎s‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎c‎o‎l‎u‎m‎n‎s‎ ‎o‎f‎ ‎P‎o‎b‎i‎t‎i‎ ‎K‎a‎m‎a‎n‎i‎ ‎i‎n‎ ‎2‎0‎1‎6‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎P‎o‎c‎o‎ ‎a‎ ‎p‎o‎c‎o‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎o‎s‎t‎ ‎o‎f‎f‎i‎c‎e‎ ‎a‎n‎d‎ ‎l‎i‎c‎k‎ ‎s‎o‎m‎e‎ ‎s‎t‎a‎m‎p‎s‎.‎ ‎E‎s‎p‎e‎c‎i‎a‎l‎l‎y‎ ‎t‎h‎e‎ ‎J‎a‎c‎k‎i‎e‎ ‎K‎e‎n‎n‎e‎d‎y‎ ‎S‎t‎a‎m‎p‎s‎.‎.‎.‎ ‎O‎h‎ ‎y‎e‎a‎h‎.‎"
6gkeyqF9,master bot snowybot mastered,coinwalk,JavaScript,Saturday 26th of August 2023 08:47:41 AM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = (kozster/144000);
var zeggar = gobbie;
var target = 100;
var tens = (gobbie*10);
var sevens = (gobbie*6.9);
var eights = (gobbie*7.9);
var burgzie = kozster;
var joe = $($(""#me>div>.betid"")[0]).text();
var boggart = 0;
var bear = true;
var tuba = ((Math.floor(kozster/tens))*tens);
var razzle;
var oldDegen = 0;
var nope = 1;
 
 
function go(){
burgzie = $('#pct_balance').val();
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie>tuba)){
    zeggar = zeggar*2;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>(((Math.floor(burgzie/tens))*tens)+sevens))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+eights))&&(burgzie != oldDegen)&&(burgzie<tuba)){
    zeggar = zeggar*2;
	nope = 0;
    oldDegen = parseFloat(burgzie);
}
if ((burgzie>=(tuba+(tens*nope)))&&(burgzie<(((Math.floor(burgzie/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(burgzie/tens))*tens);
}
if (burgzie>=target){
console.log(""snowybot rocks"");
return;
}
var doh = $($(""#me>div>.betid"")[0]).text();
var lol = $($(""#me.results>div>.bet"")[0]).text();
var milk = (((lol)*1).toFixed(8));
if (((milk>razzle)&&(boggart>=1)&&(doh>joe)&&(!bear))||((milk<razzle)&&(boggart>=1)&&(doh>joe)&&(!bear))){
console.log(""hacker attack"");
console.log(razzle);
console.log(milk);
return;
}
if ((milk==razzle)&&(boggart>=1)&&(doh>joe)&&(!bear)){
joe = parseFloat(doh);
bear = true;
}
if ((doh==joe)&&(bear)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
boggart = boggart+1;
bear = false;
}
setTimeout(() => go(), 1);
}
go();

"
UZtzWMST,my master tested bot by snowy,coinwalk,JavaScript,Saturday 26th of August 2023 08:41:38 AM CDT,"var kozster = parseFloat($('#pct_balance').val());
var gobbie = (kozster/144000);
var zeggar = gobbie;
var target = 100;
var tens = (gobbie*10);
var sevens = (gobbie*6.9);
var eights = (gobbie*7.9);
var joe = $($(""#me>div>.betid"")[0]).text();
var boggart = 0;
var bear = true;
var tuba = ((Math.floor(kozster/tens))*tens);
var razzle;
var oldDegen = 0;
var nope = 1;
 
 
function go(){
if ((($('#pct_balance').val())>(((Math.floor(($('#pct_balance').val())/tens))*tens)+sevens))&&(($('#pct_balance').val())<(((Math.floor(($('#pct_balance').val())/tens))*tens)+eights))&&(($('#pct_balance').val()) != oldDegen)&&(($('#pct_balance').val())>tuba)){
    zeggar = zeggar*2;
    oldDegen = parseFloat(($('#pct_balance').val()));
}
if ((($('#pct_balance').val())>(((Math.floor(($('#pct_balance').val())/tens))*tens)+sevens))&&(($('#pct_balance').val())<(((Math.floor(($('#pct_balance').val())/tens))*tens)+eights))&&(($('#pct_balance').val()) != oldDegen)&&(($('#pct_balance').val())<tuba)){
    zeggar = zeggar*2;
	nope = 0;
    oldDegen = parseFloat($('#pct_balance').val());
}
if ((($('#pct_balance').val())>=(tuba+(tens*nope)))&&(($('#pct_balance').val())<(((Math.floor(($('#pct_balance').val())/tens))*tens)+sevens))){
    zeggar = gobbie;
    oldDegen = 0;
    nope = 1;
    tuba = ((Math.floor(($('#pct_balance').val())/tens))*tens);
}
if (($('#pct_balance').val())>=target){
console.log(""snowybot rocks"");
return;
}
var doh = $($(""#me>div>.betid"")[0]).text();
var lol = $($(""#me.results>div>.bet"")[0]).text();
var milk = (((lol)*1).toFixed(8));
if (((milk>razzle)&&(boggart>=1)&&(doh>joe)&&(!bear))||((milk<razzle)&&(boggart>=1)&&(doh>joe)&&(!bear))){
console.log(""hacker attack"");
console.log(razzle);
console.log(milk);
return;
}
if ((milk==razzle)&&(boggart>=1)&&(doh>joe)&&(!bear)){
joe = parseFloat(doh);
bear = true;
}
if ((doh==joe)&&(bear)){
razzle = ((zeggar*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
boggart = boggart+1;
bear = false;
}
setTimeout(() => go(), 1);
}
go();

"
N4LAuRhX,Untitled,Sam_qu,Python,Saturday 26th of August 2023 08:10:09 AM CDT,"
c=""\033[1;33m""

invite  = None
invite2  = None
s = False
gameplayed= 0
x =1
listt =[]
serversocket =None
C =None
istarted = False
start =None
stop =b'\x03\x15\x00\x00\x00\x10\t\x1e\xb7N\xef9\xb7WN5\x96\x02\xb0g\x0c\xa8'
runscript = 0
import re 
isconn = False

increase =False

back=False
ca=False
socktion =None


invite= None


spams = False

spampacket= b''
recordmode= False

sendpackt=False
global vares
vares = 0
spy = False
inviteD=False
inviteE=False
op = None
global statues
statues= True
SOCKS_VERSION = 5
packet =b''
spaming =True
import os
import sys


def spam(server,packet):
    while True:


        time.sleep(0.015)


        server.send(packet)
        if   recordmode ==False:

            break

def destroy(remote,dataC):
    
    var= 0
    for i in range(50):
        
        var= var+1
       
        time.sleep(0.010)
        for i in range(10):
            
            remote.send(dataC)
    time.sleep(0.5)



def timesleep():
    time.sleep(60)
    #print(istarted)
    if istarted == True:
        serversocket.send(start)


def enter_game_and_RM():
    global listt
    for data in listt:
        
        C.send(data)
        listt.remove(data)
    time.sleep(15)

    print(""start the game ...."")

    istarted =False
    serversocket.send(start)

    t = threading.Thread(target=timesleep, args=())
    t.start()
def break_the_matchmaking(server):
    global is_start
    global isrun

    server.send(stop)


    server.send(stop)

    server.send(stop)
    print('sending stop')
    is_start =True

    t = threading.Thread(target=enter_game_and_RM, args=())
    t.start()


import time

import socket
import threading
import select
SOCKS_VERSION= 5


class Proxy:



    def __init__(self):
        self.username = ""username""
        self.password = ""username""
        self.packet = b''
        self.sendmode = 'client-0-'


    def handle_client(self, connection):



        version, nmethods = connection.recv(2)
        methods = self.get_available_methods(nmethods, connection)



        if 2   in set(methods):
            if 2 in set(methods):

                connection.sendall(bytes([SOCKS_VERSION, 2]))
            else:
                connection.sendall(bytes([SOCKS_VERSION, 0]))





        if not self.verify_credentials(connection,methods):
            return
        version, cmd, _, address_type = connection.recv(4)



        if address_type == 1:
            address = socket.inet_ntoa(connection.recv(4))
        elif address_type == 3:
            domain_length = connection.recv(1)[0]
            address = connection.recv(domain_length)
            address = socket.gethostbyname(address)
            name= socket.gethostname()



        port = int.from_bytes(connection.recv(2), 'big', signed=False)
        port2 = port
        try:





            remote = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            remote.connect((address, port))
            #print("" connect to {} \n \n \n "".format(address))
            bind_address = remote.getsockname()

            addr = int.from_bytes(socket.inet_aton(
                bind_address[0]), 'big', signed=False)
            port = bind_address[1]

            reply = b''.join([
                SOCKS_VERSION.to_bytes(1, 'big'),
                int(0).to_bytes(1, 'big'),
                int(0).to_bytes(1, 'big'),
                int(1).to_bytes(1, 'big'),
                addr.to_bytes(4, 'big'),
                port.to_bytes(2, 'big')

            ])
        except Exception as e:

            reply = self.generate_failed_reply(address_type, 5)


        connection.sendall(reply)


        self.botdev(connection, remote,port2)


    def generate_failed_reply(self, address_type, error_number):
        return b''.join([
            SOCKS_VERSION.to_bytes(1, 'big'),
            error_number.to_bytes(1, 'big'),
            int(0).to_bytes(1, 'big'),
            address_type.to_bytes(1, 'big'),
            int(0).to_bytes(4, 'big'),
            int(0).to_bytes(4, 'big')
        ])

    def verify_credentials(self, connection,methods):

        if 2 in methods:


            version = ord(connection.recv(1))


            username_len = ord(connection.recv(1))
            username = connection.recv(username_len).decode('utf-8')

            password_len = ord(connection.recv(1))
            password = connection.recv(password_len).decode('utf-8')
            #   print(username,password)
            if username == self.username and password == self.password:

                response = bytes([version, 0])
                connection.sendall(response)


                return True

            response = bytes([version, 0])
            connection.sendall(response)

            return True

        else:


            version =1
            response = bytes([version, 0])
            connection.sendall(response)


            return True

    def get_available_methods(self, nmethods, connection):
        methods = []
        for i in range(nmethods):
            methods.append(ord(connection.recv(1)))
        return methods

    def runs(self, host, port):
        try:
            var =  0







            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            #s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
            s.bind((host, port))
            s.listen()



            while True:
                var =var+1


                conn, addr = s.accept()
                running = False

                t = threading.Thread(target=self.handle_client, args=(conn,))
                t.start()
        except Exception as e:
            print(""Created"")
            










    #connect
    def botdev(self, client, remote, port):
        
            while True:
                r, w, e = select.select([client, remote], [], [])

                od= b''
                global start
                if client in r or remote in r:
                    global invite
                    global invite2
                    global s
                    global x
                    global ca
                    global serversocket
                    global isconn ,inviteD ,back
                    if client in r:



                        dataC = client.recv(999999)


                        if port ==39801 or port ==39699:
                            isconn=True
                        if  ""39699"" in str(remote) :
                            self.op = remote
                
                        if '0515' in dataC.hex()[0:4] and len(dataC.hex()) >= 141  :                  
                            self.data_join=dataC

                            
                        
                        if '0515' in dataC.hex()[0:4] and len(dataC.hex()) <50  :  
                            print(remote)                
                            self.data_back=dataC

                        if  port ==39699:
                            #print("" catch a socket sir "")
                            #  print(f""{dataC}\n"")
                            invite= remote
                        global hide
                        hide =False
                        global recordmode
                        #laaaaaag
                        if '1215' in dataC.hex()[0:4] and recordmode ==True:

                            global spampacket
                            spampacket =dataC

                            #recordmode=False
                            global statues
                            statues= True
                            time.sleep(5)

                            b = threading.Thread(target=spam, args=(remote,spampacket))
                            b.start()


                                    #invite_D
                        if '0515' in dataC.hex()[0:4] and len(dataC.hex()) >=900 and inviteD==True and hide ==False :
                            var = 0
                            m = threading.Thread(target=destroy, args=(remote,dataC))
                            m.start()
                            global spams
                            spams =True

                        if '0515' in dataC.hex()[0:4] and len(dataC.hex()) >= 141:

                            hide = True


                            global benfit
                            benfit = False


                                    #lvl_UP
                        if '0315' in dataC.hex()[0:4]:
                            if len(dataC.hex()) >=300:
                                start = dataC
                                print(dataC)
                            is_start =False

                            serversocket =remote
                            print(""socket is defined suucesfuly !.."")
                            t = threading.Thread(target=timesleep, args=())
                            t.start()





#mizaaaaat


                        if remote.send(dataC) <= 0:
                            break
                    if remote in r:

                        global opb
                        global listt
                        global C
                        global istarted
                        global gameplayed
                        global packet
                        global socktion
                        global ca
                        global increase ,back
                        dataS = remote.recv(999999)
                        
                        
                        if '1809' in dataS.hex()[26:30] or ""1802"" in dataS.hex()[26:30] or ""1808"" in dataS.hex()[26:30]:
                          #  ca=False
                            print(dataC.hex()[0:4])
                            print('  the team ')
                            #hackg.send(hackw
                        

                        if '0300' in dataS.hex()[0:4] :
                            #print('yes')
                            C = client
                            print(dataS)
                            socketsender =client

                            if b'Ranked Mode' in dataS:
                                #print(""w"")
                                client.send(dataS)
                            else:



                                if b'catbarq' in dataS:
                                    vdsf=3
                                else:
                                    #
                                    hackw= dataS
                                    hackg= client

                                    if len(dataS.hex()) <= 100:
                                        e=2
                                    #  print(""anti detect !"")


                                    else:
                                        if increase ==True:

                                            print(""Enter game packet founded"")
                                            #      start = dataC
                                            #      print(dataC)
                                            gameplayed =gameplayed+1
                                            istarted = True
                                            #      print(f""{dataS} \n"")
                                            listt.append(dataS)
                                            #rint(listt)
                                            t = threading.Thread(target=break_the_matchmaking, args=(serversocket,))
                                            t.start()
                                        else:
                                            client.send(dataS)

                        else:
                            #  if '0000' !in dataS.hex()[:4] and '1200' !in dataS.hex()[:4] and '1700' !in dataS.hex()[:4]:
                            #  print(dataS.hex(),""\n"")
                            if '0500' in dataS.hex()[:4] and b'\x05\x15\x00\x00\x00\x10Z\xca\xf5&T;\x0cA\x01\x16\xe0\x05\xb2\xea\xe4\x0b' in dataC:
                                f=2
                                #serversocket.send(b'\x05\x15\x00\x00\x00\x10\x9b@x\xd7\x15\x9e\x0f\xfaZ+\x88\xe5\xac\x18\x9fw')

                            else:
                                #spam_invite
                            

                                    
                                    
                                    
                                
                                        #level_ON       
                                                                     
                                if '1200' in dataS.hex()[0:4] and '6c766c' in dataS.hex()[0:900] :
                                    increase =True
                                    print(c+""✓✓"")
                                   
                                    
                                    
                                    
                                    
                                    
                                   
                                    
                                    
                                #level_OFF
                                if '1200' in dataS.hex()[0:4] and '666c766c' in dataS.hex()[0:900] :
                                    increase =False
                                    client.send(bytes.fromhex(gen_msgv2(dataS.hex() ,""[FF0000][b][c]توقفت !"")))
                                    client.send(bytes.fromhex(str(gen_msgv2_clan(dataS.hex() ,""[FF0000][b][c]توقفت !""))))
                                    
                                   
                                   

                                   
                                #spy_last_sqoud
                                
                                if  '0500' in dataS.hex()[0:4] and hide == True  :
                                    socktion =client


                                    if len(dataS.hex())<=30:

                                        hide =True
                                    if len(dataS.hex())>=31:
                                        packet = dataS

                                        hide = False

                                if client.send(dataS) <= 0:
                                    break
        

                                
        
        
        
    def foxy( self , data_join):
        global back
        print(data_join)
        
        while back==True:
            try:
                self.op.send(data_join)
                time.sleep(9999.0)
               
                #                           0515000000104903408b9e91774e75b990038dddee49
            except Exception as e:
                
                pass
                
    
                
               
    def walid( self , data_join):
        global ca
        print(data_join)
        
        while ca==True:
            try:
                self.op.send(data_join)
                time.sleep(1.0)
                self.op.send(self.data_back)
                #                           0515000000104903408b9e91774e75b990038dddee49
            except Exception as e:
                
                pass

def start_ghost():
    try :
        Proxy().runs('127.0.0.1',1080)
    except Exception as e:
        sea=2
        
start_ghost()        "
g15SweHV,Untitled,MrShtein,Java,Saturday 26th of August 2023 07:56:44 AM CDT,"@Transactional
    @Override
    public void saveNewExternalEvents(
            List<KudagoEventDto> kudaGoEvents,
            Map<Long, EventAddressDTO> eventAddresses,
            Map<Long, List<String>> imageFileNames,
            Map<Long, List<Long>> eventTagIds,
            Map<Long, ExternalEventDates> externalEventDates
    ) {
        kudaGoEvents.forEach(kudagoEvent -> {
            User organizer = getExternalEventOrganizer();
            Optional<EventAddress> eventAddress;
            eventAddress = eventAddressRepository.findByEventLatitudeAndEventLongitude(
                    kudagoEvent.getPlace().getCoords().getLat(),
                    kudagoEvent.getPlace().getCoords().getLon()
            );
            eventAddress.ifPresent(address -> log.info(""Event address is present: {}"", address));
            if (eventAddress.isEmpty()) {
                eventAddress = Optional.of(eventAddressMapper.mapToEventAddress(
                        eventAddresses, kudagoEvent.getId()
                ));
            }
            Set<EventAvatar> eventImages = eventAvatarMapper.mapToEventAvatars(
                    imageFileNames.get(kudagoEvent.getId())
            );
            EventType eventType = getEventTypeByName(kudagoEvent.getCategories().get(0));
            List<Tag> eventTags = tagRepository.findByIdIn(eventTagIds.get(kudagoEvent.getId()));
            UserRelationsWithEvent userRelationsWithEvent = UserRelationsWithEvent.builder()
                    .userRelations(organizer)
                    .isInvited(false)
                    .isParticipant(true)
                    .isWantToGo(false)
                    .isFavorite(false)
                    .build();
            ExternalEventDates dates = externalEventDates.get(kudagoEvent.getId());
            Boolean hasAgeRestriction = hasAgeRestriction(kudagoEvent.getAgeRestriction());

            Event newEventFromKudaGo = eventMapper.mapToEvent(
                    kudagoEvent, organizer, eventAddress.get(), eventType,
                    eventTags, userRelationsWithEvent, dates, hasAgeRestriction, eventImages
            );
            Event save = eventRepository.saveAndFlush(newEventFromKudaGo);
            eventSearchService.create(save);
        });

    }"
