id,title,username,language,date,content
dN3XrcGy,23401,boyan1324,Python,Tuesday 20th of February 2024 12:00:12 PM CDT,"from math import ceil
n = int(input())
children = []
adults = []
for i in range(n):
    person_age = int(input())
    if person_age > 135:
        print(f""System was hacked with {person_age} \n List - []"")
    elif 18 <= person_age <= 135:
        adults.append(person_age)
    elif person_age < 18:
        children.append(person_age)
count_children = len(children)
count_adults = len(adults)
average_adult_age = ceil(sum(adults) / count_adults)
print(children)
print(adults)
print(f""Count of children: {count_children}"")
print(f""Count of adults: {count_adults}"")
print(f""Average age of adults: {average_adult_age}"")

positive = []
negative = []
odd = []
even = []
n = int(input())
for i in range(n):
    num = int(input())
    if num % 2 == 0:
        even.append(num)
    else:
        odd.append(num)
    if num > 0:
        positive.append(num)
    else:
        negative.append(num)
command = input(""Enter command: "")
if command == ""positive"":
    print(f""Numbers {command}: {sorted(positive)}"")
elif command == ""negative"":
    print(f""Numbers {command}: {sorted(negative)}"")
elif command == ""odd"":
    print(f""Numbers {command}: {sorted(odd)}"")
elif command == ""even"":
    print(f""Numbers {command}: {sorted(even)}"")

data = input().split("", "")
int_list = []
for i in data:
    current_element = int(i)
    int_list.append(current_element)
int_list.sort()
str_list = []
for i in int_list:
    current_element = str(i)
    str_list.append(current_element)
average_points = sum(int_list) / len(int_list)
print(f""Sorted list of points {' - '.join(str_list)}"")
print(f""Count of plays: {len(int_list)}"")
print(f""Worst play: {min(int_list)}"")
print(f""Best play: {max(int_list)}"")
print(f""Average points: {ceil(average_points)}"")

grades = input().split("", "")
grades_list = []
for i in grades:
    current_element = int(i)
    grades_list.append(current_element)
grades_list.sort()
str_list = []
for i in grades_list:
    current_element = str(i)
    str_list.append(current_element)
average_points = sum(grades_list) / len(grades_list)
print(f""Reverse sorted list of evaluations: {' '.join(str_list)}"")
print(f""Count of evaluations: {len(grades_list)}"")
print(f""Worst evaluation: {min(grades_list)}"")
print(f""Best evaluation: {max(grades_list)}"")
print(f""Count of sixes: {grades_list.count(6)}"")
print(f""Average evaluations: {average_points}"")"
n06rwzi6,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Tuesday 20th of February 2024 11:41:24 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_484012.pdf

Working as of:
20 February 2024"
gN0hSdzS,last 64^D,max2201111,Python,Tuesday 20th of February 2024 11:33:55 AM CDT,"import chess
import time

def is_white_turn(fen):
    """"""Determines if it's White's turn based on the FEN string.""""""
    return fen.split()[1] == 'w'

def initialize_game_tree(initial_fen, seeking_draw):
    """"""Initializes the game tree with the root node.""""""
    A = {
        1: {
            'fen': initial_fen,
            'moves_to_mate': None,
            'parent': None,
            'color': chess.WHITE if is_white_turn(initial_fen) else chess.BLACK,
            'result': None,
            'processed': False,
            'sequence': [],
            'up': False,
        }
    }
    return A

def generate_descendants(A, key):
    """"""Generates all legal moves from the current position and adds them to the game tree.""""""
    node = A[key]
    board = chess.Board(node['fen'])
    for move in board.legal_moves:
        board.push(move)
        new_key = max(A.keys()) + 1
        A[new_key] = {
            'fen': board.fen(),
            'moves_to_mate': None,
            'parent': key,
            'color': not node['color'],
            'result': None,
            'processed': False,
            'sequence': node['sequence'] + [move.uci()],
            'up': False,
        }
        board.pop()

def evaluate_terminal_positions(A, seeking_draw):
    """"""Evaluates terminal positions in the game tree and updates the nodes.""""""
    for key, node in A.items():
        board = chess.Board(node['fen'])
        if board.is_checkmate():
            node['moves_to_mate'] = 0
            node['result'] = 1 if node['color'] == chess.BLACK else 0
            node['processed'] = True
        elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
            node['moves_to_mate'] = 0
            node['result'] = 0.5  # Draws evaluated as 0.5 for simplicity
            node['processed'] = True
        if node['processed']:
            node['up'] = True

def propagate_results_upwards(A):
    """"""Propagates the evaluation results upwards in the game tree.""""""
    for key in sorted(A.keys(), reverse=True):
        node = A[key]
        if node['up']:
            if node['parent'] is not None:
                parent = A[node['parent']]
                # Simple propagation without considering seeking_draw for demonstration
                if parent['result'] is None or (node['result'] != parent['result']):
                    parent['result'] = node['result']
                    parent['up'] = True

def format_time(seconds):
    """"""Formats seconds into a human-readable string.""""""
    return f""{int(seconds // 3600)}h {(int(seconds) % 3600) // 60}m {seconds % 60:.2f}s""

# Main execution flow
def main():
    initial_fen = ""8/8/2k5/4K3/7p/8/8/8 w - - 0 4""
    seeking_draw = {'white': True, 'black': False}
    A = initialize_game_tree(initial_fen, seeking_draw)

    start_time = time.time()
    previous_depth = 0
    try:
        while True:
            current_time = time.time()
            print(f""Elapsed Time: {format_time(current_time - start_time)}"", end='\r')

            # Generate descendants and evaluate positions
            keys = list(A.keys())
            for key in keys:
                if not A[key]['processed']:
                    generate_descendants(A, key)
                    evaluate_terminal_positions(A, seeking_draw)
                    propagate_results_upwards(A)

            # Check for depth updates
            current_depth = max([len(node['sequence']) for node in A.values() if 'sequence' in node], default=0)
            if current_depth != previous_depth:
                print(f""\nDepth: {current_depth} - Nodes Searched: {len(A)}"", end='')
                previous_depth = current_depth

            time.sleep(1)
    except KeyboardInterrupt:
        print(""\nAnalysis stopped."")

if __name__ == ""__main__"":
    main()
"
TzjqTdcp,last 64^D,max2201111,Python,Tuesday 20th of February 2024 11:27:06 AM CDT,"import chess
import time

def is_white_turn(fen):
    """"""Determines if it's White's turn based on the FEN string.""""""
    return fen.split()[1] == 'w'

def initialize_game_tree(initial_fen):
    """"""Initializes the game tree with the root node.""""""
    A = {
        1: {
            'fen': initial_fen,
            'moves_to_mate': None,
            'parent': None,
            'color': chess.WHITE if is_white_turn(initial_fen) else chess.BLACK,
            'result': None,
            'processed': False,
            'sequence': [],
            'up': False,
        }
    }
    return A

def generate_descendants(A, key):
    """"""Generates all legal moves from the current position and adds them to the game tree.""""""
    node = A[key]
    board = chess.Board(node['fen'])
    for move in board.legal_moves:
        board.push(move)
        new_key = max(A.keys()) + 1
        A[new_key] = {
            'fen': board.fen(),
            'moves_to_mate': None,
            'parent': key,
            'color': not node['color'],
            'result': None,
            'processed': False,
            'sequence': node['sequence'] + [move.uci()],
            'up': False,
        }
        board.pop()

def evaluate_terminal_positions(A):
    """"""Evaluates terminal positions in the game tree and updates the nodes.""""""
    for key, node in A.items():
        board = chess.Board(node['fen'])
        if board.is_checkmate():
            node['moves_to_mate'] = 0
            node['result'] = 1 if node['color'] == chess.BLACK else 0
            node['processed'] = True
        elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
            node['moves_to_mate'] = 0
            node['result'] = 0.5
            node['processed'] = True
        if node['processed']:
            node['up'] = True

def propagate_results_upwards(A):
    """"""Propagates the evaluation results upwards in the game tree.""""""
    for key in sorted(A.keys(), reverse=True):
        node = A[key]
        if node['up']:
            if node['parent'] is not None:
                parent = A[node['parent']]
                if parent['result'] is None or (node['result'] > parent['result'] and parent['color'] == node['color']) or (node['result'] < parent['result'] and parent['color'] != node['color']):
                    parent['result'] = node['result']
                    parent['up'] = True

def format_time(seconds):
    """"""Formats seconds into a human-readable string.""""""
    return f""{int(seconds // 3600)}h {(int(seconds) % 3600) // 60}m {seconds % 60:.2f}s""

# Main execution flow
def main():
    initial_fen = ""8/8/2k5/4K3/7p/8/8/8 w - - 0 4""
    A = initialize_game_tree(initial_fen)

    start_time = time.time()
    previous_depth = 0
    try:
        while True:
            current_time = time.time()
            print(f""Elapsed Time: {format_time(current_time - start_time)}"", end='\r')

            # Generate descendants and evaluate positions
            keys = list(A.keys())
            for key in keys:
                if not A[key]['processed']:
                    generate_descendants(A, key)
                    evaluate_terminal_positions(A)
                    propagate_results_upwards(A)

            # Check for depth updates
            current_depth = max([len(node['sequence']) for node in A.values() if 'sequence' in node], default=0)
            if current_depth != previous_depth:
                print(f""\nDepth: {current_depth} - Nodes Searched: {len(A)}"", end='')
                previous_depth = current_depth

            time.sleep(1)
    except KeyboardInterrupt:
        print(""\nAnalysis stopped."")

if __name__ == ""__main__"":
    main()"
CJb5CXdQ,Untitled,grue74,6502 TASM/64TASS,Tuesday 20th of February 2024 11:19:26 AM CDT,"

S_48ED              lda #$00
                    sta KBD_VAR_0D
                    ldx #$FE
                    stx KBD_VAR_0E
_B_48F5             jsr ReadKeyboard
                    bcc _B_48FD
                    jmp B_4B3A

_B_48FD             lda Joy2
                    bne _B_4932
_B_4902             cpx #$FF
                    beq _B_4922
                    lda #$00
                    sta KBD_VAR_14
                    lda #$01
                    sta KBD_VAR_15
_B_490E             and KBD_VAR_16
                    bne _B_491A
                    lda KBD_VAR_0D
                    clc
                    adc KBD_VAR_14
                    jsr CheckKeys
_B_491A             inc KBD_VAR_14
                    asl KBD_VAR_15
                    lda KBD_VAR_15
                    bcc _B_490E
_B_4922             lda KBD_VAR_0D
                    clc
                    adc #$08
                    sta KBD_VAR_0D
                    sec
                    rol KBD_VAR_0E
                    lda KBD_VAR_0E
                    tax
                    bcs _B_48F5
                    rts

_B_4932             lda #$01
                    sta KBD_VAR_1B
                    sta KBD_VAR_1C
                    lda #$00
                    sta Joy2
                    sta KBD_VAR_1D
                    beq _B_4902

KBD_Bits0           .byte %00000001
                    .byte %00000010
                    .byte %00000100
                    .byte %00001000
                    .byte %00010000
                    .byte %00100000
                    .byte %01000000
                    .byte %10000000
KBD_Bits1           .byte %11111110
                    .byte %11111101
                    .byte %11111011
                    .byte %11110111
                    .byte %11101111
                    .byte %11011111
                    .byte %10111111
                    .byte %01111111
R_4951              .byte $08,$0D,$FF,$FD,$FC,$FA,$F9,$00
                    .byte $33,$57,$41,$34,$5A,$53,$45,$01
                    .byte $35,$52,$44,$36,$43,$46,$54,$58
                    .byte $37,$59,$47,$38,$42,$48,$55,$56
                    .byte $39,$49,$4A,$30,$4D,$4B,$4F,$4E
                    .byte $2B,$50,$4C,$2D,$2E,$3A,$F5,$2C
                    .byte $F8,$F7,$3B,$1B,$FE,$F6,$2D,$2F
                    .byte $31,$08,$FB,$32,$20,$FE,$51,$00

CheckKeys           cmp KBD_VAR_0F
                    beq _B_49AB
                    cmp KBD_VAR_10
                    beq _B_49AB
                    cmp KBD_VAR_11
                    beq _B_49AB
                    cmp KBD_VAR_12
                    beq _B_49AB
                    ldx #$03
                    tay
_B_49A4             lda KBD_VAR_0F,x
                    bmi _B_49AC
                    dex
                    bpl _B_49A4
_B_49AB             rts

_B_49AC             tya
                    sta KBD_VAR_0F,x
                    lda R_4951,y
                    bmi _B_49BF
                    ldx CTRLKey
                    beq _B_49BC
                    sec
                    sbc #$40
_B_49BC             jmp PutKeyInBuffer

_B_49BF             cmp #$FE
                    bne _B_49C8
                    lda #$00
                    sta KBD_VAR_1B
                    rts

_B_49C8             cmp #$FF
                    bne _B_49D0
                    lda #$00
                    sta KBD_VAR_1C
_B_49D0             cmp #$FD
                    bne _B_49D9
                    lda #$02
                    sta KBD_VAR_1D
                    rts

_B_49D9             cmp #$FC
                    bne quitkey
                    lda #$01
                    sta KBD_VAR_1D
                    rts

quitkey             tax
                    lda $12
                    cmp #$39
                    bne _B_49E2
                    jmp InitGame


_B_49E2             txa
                    cmp #$FB
                    bne MultiColor
                    lda #$01
                    sta CTRLKey
                    rts

MultiColor          cmp #$FA
                    bne _B_49F9
                    lda D016_SCREEN_CTRL_REG2
                    eor #%00010000
                    sta D016_SCREEN_CTRL_REG2
                    rts

_B_49F9             cmp #$F9
                    bne _B_4A20
                    lda #$00
                    sta ColorStart_Lo
                    lda #$D8
                    sta ColorStart_Hi
                    lda #$E8
                    sta ColorEnd_Lo
                    lda #$DB
                    sta ColorEnd_Hi
                    lda #$01
                    ldx #$0F
                    jsr S_4AE3
                    lda #$10
                    ldx #$F0
                    jsr S_4AE3
                    rts

_B_4A20             cmp #$F8
                    bne _B_4A3E
                    lda #$00
                    sta ColorStart_Lo
                    lda #$04
                    sta ColorStart_Hi
                    lda #$E8
                    sta ColorEnd_Lo
                    lda #$07
                    sta ColorEnd_Hi
                    lda #$01
                    ldx #$0F
                    bne _B_4A5A

_B_4A3E             cmp #$F7
                    bne BorderColor
                    lda #$00
                    sta ColorStart_Lo
                    lda #$04
                    sta ColorStart_Hi
                    lda #$E8
                    sta ColorEnd_Lo
                    lda #$07
                    sta ColorEnd_Hi
                    lda #$10
                    ldx #$F0
_B_4A5A             jsr S_4AE3
                    sta PaperClr
                    rts

BorderColor         cmp #$F6
                    bne PaperColor
                    inc D020_BORDER_COLOR
                    lda D020_BORDER_COLOR
                    sta BorderClr
                    rts

PaperColor          cmp #$F5
                    bne _exit
                    inc D021_BACKGROUND_COLOR
                    lda D021_BACKGROUND_COLOR
                    sta BackGdClr
                    rts


_exit               rts

S_4A7E              ldx #$03
_B_4A80             lda KBD_VAR_0F,x
                    bpl _B_4A88
_B_4A84             dex
                    bpl _B_4A80
                    rts

_B_4A88             sta KBD_VAR_0C
                    lsr a
                    lsr a
                    lsr a
                    tay
                    stx KBD_VAR_1A
                    ldx KBD_Bits1,y
                    jsr ReadKeyboard
                    bcc _B_4A9B
                    jmp B_4B3A

_B_4A9B             tax
                    lda $12
                    cmp #$39
                    bne +
                    jmp InitGame
                    +
                    
                    
                    ldx KBD_VAR_1A
                    lda KBD_VAR_0C
                    and #%00000111
                    tay
                    lda KBD_Bits0,y
                    and KBD_VAR_16
                    beq _B_4A84
                    lda #$80
                    sta KBD_VAR_0F,x
                    ldy KBD_VAR_0C
                    lda R_4951,y
                    bpl _B_4A84
                    stx KBD_VAR_0C
                    cmp #$FE
                    bne _B_4AC0
                    lda #$01
                    sta KBD_VAR_1B
                    bne _B_4AD5

_B_4AC0             cmp #$FF
                    bne _B_4ACA
                    lda #$01
                    sta KBD_VAR_1C
                    bne _B_4AD5

_B_4ACA             cmp #$FB
                    bne _B_4AD5
                    lda #$00
                    sta CTRLKey
                    beq _B_4AD5

_B_4AD5             ldx KBD_VAR_0C
                    jmp _B_4A84

ColorStart_Lo       .byte $00
ColorStart_Hi       .byte $00
ColorEnd_Lo         .byte $00
ColorEnd_Hi         .byte $00
ColorMask           .byte $00
Color               .byte $00
PTRStore_Lo         .byte $00
PTRStore_Hi         .byte $00
AStore              .byte $00

S_4AE3              sta Color
                    stx ColorMask
                    lda PTR_66
                    ldx PTR_66+1
                    sta PTRStore_Lo
                    stx PTRStore_Hi
                    lda ColorStart_Lo
                    ldx ColorStart_Hi
                    sta PTR_66
                    stx PTR_66+1
_B_4AFD             ldy #$00
                    lda (PTR_66),y
                    clc
                    adc Color
                    and ColorMask
                    tax
                    lda ColorMask
                    eor #%11111111
                    and (PTR_66),y
                    sta (PTR_66),y
                    txa
                    ora (PTR_66),y
                    sta (PTR_66),y
                    sta AStore
                    inc PTR_66
                    bne _B_4B20
                    inc PTR_66+1
_B_4B20             lda PTR_66
                    cmp ColorEnd_Lo
                    bne _B_4AFD
                    lda PTR_66+1
                    cmp ColorEnd_Hi
                    bne _B_4AFD
                    lda #<PTRStore_Lo
                    sta PTR_66
                    lda #>PTRStore_Lo
                    sta PTR_66+1
                    lda AStore
                    rts

B_4B3A              iny
                    beq _exit
                    lda #$01
                    sta Joy2
                    lda KBD_VAR_16
                    and #%00010000
                    beq _B_4B4A
                    lda #$01
_B_4B4A             sta KBD_VAR_1B
                    lda KBD_VAR_17
                    and #%00010000
                    beq _B_4B54
                    lda #$01
_B_4B54             sta KBD_VAR_1C
                    lda KBD_VAR_17
                    tax
                    and #%00000001
                    bne _B_4B61
                    lda #$01
                    bne _B_4B6C

_B_4B61             txa
                    and #%00000010
                    bne _B_4B6A
                    lda #$02
                    bne _B_4B6C

_B_4B6A             lda #$00
_B_4B6C             sta KBD_VAR_1D
_exit               rts

ReadKeyboard        ldy #$FF
                    sty DC00_DataPortA
                    lda DC00_DataPortA
                    sta KBD_VAR_16
                    lda DC01_PataPortB
                    sta KBD_VAR_17
                    stx DC00_DataPortA
                    ldx DC01_PataPortB
                    sty DC00_DataPortA
                    ldy DC00_DataPortA
                    lda DC01_PataPortB
                    sty KBD_VAR_18
                    sta KBD_VAR_19
                    and KBD_VAR_18
                    and KBD_VAR_16
                    and KBD_VAR_17
                    eor #%11111111
                    bne _B_4B9F
                    stx KBD_VAR_16
                    clc
                    rts

_B_4B9F             lda KBD_VAR_16
                    cmp KBD_VAR_18
                    bne _B_4BAF
                    lda KBD_VAR_17
                    cmp KBD_VAR_19
                    bne _B_4BAF
                    ldy #$00
                    sec
                    rts

_B_4BAF             ldy #$FF
                    sec
                    rts"
iaTHHVQJ,Untitled,irmantas_radavicius,C++,Tuesday 20th of February 2024 11:16:24 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <cctype>
#include <vector>



using namespace std;

int main(){

    /*
    int x;
    while(1){
        cout << ""Iveskite skaiciu: "";
        cin >> x;
        char c = cin.get();
        if(cin.fail() || (c != '\n')){
            cout << ""Blogas ivedimas!"" << endl;
            cin.clear();
            cin.ignore(1024, '\n');

        } else
            break;
    }
    // x yra geras
    cout << ""Tu ivedei "" << x << endl;
    */

    /*
    double x;
    int y;
    while(1){
        cout << ""Iveskite du skaicius (double ir int): "";
        cin >> x;
        cin >> y;
        char c = cin.get();
        if(cin.fail() || (c != '\n')){
            cout << ""Blogas ivedimas!"" << endl;
            cin.clear();
            cin.ignore(1024, '\n');

        } else
            break;
    }
    // x ir y yra geri
    cout << ""Tu ivedei "" << x << "" ir "" << y << endl;
    */

    /*
    vector<int> v;
    while(1){
        string line;
        cout << ""Ivesk skaiciu sarasa: "";
        getline(cin, line);

        stringstream ss;
        ss << line;
        int klaida = 0;
        while(1){
            int x;
            ss >> x;
            if(!ss.fail()){
                v.push_back(x);
            } else {
                if(!ss.eof())
                    klaida = 1;
                break;
            }
        }
        if(klaida == 0) // && v.size() % 2 == 1)
            break;
        else {
            cout << ""Blogas ivedimas"" << endl;
            v.clear();
        }
    }
    // skaiciu sarasas yra geras
    for(int i = 0; i < v.size(); i++)
        cout << v[i] << "" "";
    cout << endl;
    */
    return 0;

}
"
8b5RXmuD,Untitled,k3NGuru,YAML,Tuesday 20th of February 2024 11:16:10 AM CDT,"---
- name: Создаем и настраиваем БД
  hosts: all
  roles:
    - database

---   ### database/tasks/main.yml

- name: Настраиваем PostgreSQL
  ansible.builtin.include_tasks: database.yml
  loop: ""{{ dbname }}""

---   ### database/tasks/database.yml 

- name: Создаем пользователя {{ item.user }}
  community.postgresql.postgresql_user:
    host: ""{{ PGSRV1 }}""
    login_user: postgres
    login_password: ""{{ PGSPASS }}""
    name: ""{{ item.user }}""
    password: ""{{ PGPWD }}""
    role_attr_flags: LOGIN
    # port: 5432

- name: Создаем БД {{ item.name }}
  community.postgresql.postgresql_db:
    host: ""{{ PGSRV1 }}""
    login_user: postgres
    login_password: ""{{ PGSPASS }}""
    name: ""{{ item.name }}""
    owner: ""{{ item.user }}""
    # port: 5432

- name: Создаем схему {{ item.name }} в БД {{ item.name }}
  community.postgresql.postgresql_schema:
    host: ""{{ PGSRV1 }}""
    login_user: postgres
    login_password: ""{{ PGSPASS }}""
    db: ""{{ item.name }}""
    name: ""{{ item.name }}""
    owner: ""{{ item.user }}""

--- ###  database/defaults/main.yml 

dbname:
 - { name: ""admin_api"", user: ""admin_api_admin"" }
 - { name: ""agenda"", user: ""agenda_admin"" }

PGSRV1: postgres.intra.local
PGSPASS: aaaa
PGPWD: Blab!
"
n93BuBUX,Untitled,Martin_Toseski,C++,Tuesday 20th of February 2024 11:05:50 AM CDT,"Minimum Bit Flips to Convert Number (2220)
class Solution {
public:
    int minBitFlips(int start, int goal) {
        return __builtin_popcount((start^goal));
    }
};

Number of Even and Odd Bits (2595)
class Solution {
public:
    string to_bin(int x) {
        string ans = """";

        while(x != 0) {
            ans += (x%2)+'0';
            x/=2;
        }

        return ans;
    }  

    vector<int> evenOddBit(int n) {
        string x = to_bin(n);
        int even = 0, odd = 0;
        for (int i=0; i < x.size(); i++) {
            if (i%2 == 0 && x[i] == '1') even++;
            if (i%2 == 1 && x[i] == '1') odd++;
        }

        vector<int> ans;
        ans.push_back(even);
        ans.push_back(odd);
        return ans;
    }
};

Add Binary (67)
class Solution {
public:
    string addBinary(string a, string b) {
        string ans = """";
        int rem = 0;
        int mx = max(a.size(), b.size());

        reverse(a.begin(), a.end());
        reverse(b.begin(), b.end());

        for (int i=0; i < mx; i++) {
            int fs, sc;

            if (i >= a.size()) {
                fs = 0;
            }
            else fs = a[i]-'0';
            if (i >= b.size()) {
                sc = 0;
            }
            else sc = b[i]-'0';

            int sum = fs+sc+rem;
            if (sum == 0) {
                ans += '0';
                rem = 0;
            } 
            if (sum == 1) {
                ans += '1';
                rem = 0;
            } 
            if (sum == 2) {
                ans += '0';
                rem = 1;
            } 
            if (sum == 3) {
                ans += '1';
                rem = 1;
            } 
        }

        if (rem > 0) ans += rem+'0';
        reverse(ans.begin(), ans.end());

        return ans;
    }
};

The kth Factor of n (1492)
class Solution {
public:
    int kthFactor(int n, int k) {
        int cnt=0, ans=-1;
        for (int i=1; i <= n; i++) {
            if (n%i == 0) cnt++;
            if (cnt == k){
                ans = i;
                break;
            }
        }

        return ans;
    }
};

Closest Prime Numbers in Range (2523)
class Solution {
public:
    vector<int> closestPrimes(int left, int right) {
        bool prime[right+1];
        memset(prime, true, sizeof(prime));

        vector<int> v;

        for (long long i=2; i <= right; i++) {
            if (prime[i]) {
                if (i >= left && i <= right) v.push_back(i);
                for (long long j=2*i; j <= right; j+=i) {
                    prime[j] = false;
                }
            }
        }

        if (v.size() <= 1) 
            return {-1, -1};

        int a=0, b=INT_MAX;
        for (int i=1; i < v.size(); i++)
            if (v[i]-v[i-1] < b-a) a=v[i-1], b=v[i];
        return {a, b};
    }
};

Add to Array-Form of Integer (989)
class Solution {
public:
    vector<int> addToArrayForm(vector<int>& num, int k) {
        vector<int> ans;

        reverse(num.begin(), num.end());
        int pos = 0, over = 0;

        while(pos != num.size() && k > 0) {
            int cifra = k%10;
            int curr_zbir = num[pos]+cifra+over;
            ans.push_back(curr_zbir%10);
            over = curr_zbir/10;
            k/=10;
            pos++;
        }

        while(k != 0) {
            int cifra = k%10;
            int curr_zbir = cifra+over;
            ans.push_back(curr_zbir%10);
            over = curr_zbir/10;
            k/=10;
        }

        while(pos != num.size()) {
            int cifra = num[pos];
            int curr_zbir = cifra+over;
            ans.push_back(curr_zbir%10);
            over = curr_zbir/10;
            pos++;
        }
        
        if (over > 0) {
            ans.push_back(over);
        }

        reverse(ans.begin(), ans.end());

        return ans;
    }
};

Add Strings (415)
class Solution {
public:
    string addStrings(string num1, string num2) {
        string ans;
        reverse(num1.begin(), num1.end());
        reverse(num2.begin(), num2.end());

        int MAX = max(num1.size(), num2.size());

        int over = 0;
        for (int i=0; i < MAX; i++) {
            int cifra1, cifra2;
            if (i >= num1.size()) {
                cifra1 = 0;
            }
            else {
                cifra1 = num1[i]-'0';
            }

            if (i >= num2.size()) {
                cifra2 = 0;
            }
            else {
                cifra2 = num2[i]-'0';
            }

            int curr_zbir = cifra1+cifra2+over;
            ans += to_string(curr_zbir%10);
            over = curr_zbir/10;
        }
        
        if (over > 0) {
            ans.push_back(over+'0');
        }

        reverse(ans.begin(), ans.end());
        return ans;
    }
};"
4Qm3bebS,Untitled,backparsnip,Bash,Tuesday 20th of February 2024 10:54:04 AM CDT,"FRONTPOTATOROOF
 
2-G4BMK97 2@G4BMK97 2/G4BMK97 2\\G4BMK97 2=G4BMK97 2+G4BMK97 2_G4BMK97 [2+G4BMK97]
 
This is Feb 20 testing 1653
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6e

"
Cb6Tvve6,Merge K sorted linked lists,jayati,C++,Tuesday 20th of February 2024 10:53:41 AM CDT,"class Solution{
  public:
    //Function to merge K sorted linked list.
   Node* sortedMerge(Node* head1, Node* head2)  
{  
    // code here
   if(head1==NULL) return head2;
   if(head2==NULL) return head1;
   
   Node *head=NULL,*tail=NULL;
   if(head1->data<=head2->data){
       head=tail=head1;
       head1=head1->next;
   }else {
       head=tail=head2;
       head2=head2->next;
   }
   while(head1!=NULL && head2!=NULL){
       if(head1->data<=head2->data){
           tail->next=head1;
           head1=head1->next;
       }else {
           tail->next=head2;
           head2=head2->next;
       }
       tail=tail->next;
   }
   if(head1==NULL) tail->next=head2;
   if(head2==NULL) tail->next=head1;
   return head;
}  
    Node * mergeKLists(Node *arr[], int K)
    {
           // Your code here
           Node *curr=arr[0];
          for(int i=1;i<K;i++){
               curr=sortedMerge(curr,arr[i]);
          }
           return curr;
    }
};
"
qnEkmcWp,Untitled,grue74,6502 TASM/64TASS,Tuesday 20th of February 2024 10:45:03 AM CDT,"LimitBallSpeed      lda VAR_DE
                    ldx VAR_DF
                    bmi +
                    lsr VAR_DF                          
                    ror VAR_DE
                    lsr VAR_DF
                    ror VAR_DE
                    lsr VAR_DF
                    jmp ++

+                   sec
                    ror VAR_DF
                    ror VAR_DE
                    sec
                    ror VAR_DF
                    ror VAR_DE
                    sec
                    ror VAR_DF

+                   ror VAR_DE
                    sbc VAR_DE
                    sta VAR_DE
                    txa
                    sbc VAR_DF
                    sta VAR_DF
                    lda VAR_E4
                    ldx VAR_E5
                    bmi +
                    lsr VAR_E5
                    ror VAR_E4
                    lsr VAR_E5
                    ror VAR_E4
                    lsr VAR_E5
                    jmp ++

+                   sec
                    ror VAR_E5
                    ror VAR_E4
                    sec
                    ror VAR_E5
                    ror VAR_E4
                    sec
                    ror VAR_E5
+                   ror VAR_E4
                    sbc VAR_E4
                    sta VAR_E4
                    txa
                    sbc VAR_E5
                    sta VAR_E5
                    ldx BallTrails
                    beq _exit
                    dex
                    bne _exit
                    lda BallTrailsLim
                    ldy #$11
                    sta (PTR_86),y
_exit               rts"
7qaJ2LS0,Untitled,irmantas_radavicius,C++,Tuesday 20th of February 2024 10:38:54 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <cctype>

using namespace std;

int main(){

    int x;
    while(1){
        cout << ""Iveskite skaiciu: "";
        cin >> x;
        char c = cin.get();
        if(cin.fail() || (c != '\n')){
            cout << ""Blogas ivedimas!"" << endl;
            cin.clear();
            cin.ignore(1024, '\n');

        } else
            break;
    }

    // x yra geras
    cout << ""Tu ivedei "" << x << endl;

    return 0;

}
"
xTtR41bz,Untitled,Josif_tepe,C++,Tuesday 20th of February 2024 10:34:20 AM CDT,"#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
using namespace std;
const int maxn = 500;
const int di[] = {-1, 1, 0, 0};
const int dj[] = {0, 0, -1, 1};
int n, m;
char mat[maxn][maxn];
bool visited[maxn][maxn];
int wolves, sheep;
void dfs(int i, int j) {
//    cout << i << "" "" << j << endl;
    visited[i][j] = true;
    
    if(mat[i][j] == 'v') {
        wolves++;
    }
    if(mat[i][j] == 'o') {
        sheep++;
    }
    for(int k = 0; k < 4; k++) {
        int ti = i + di[k];
        int tj = j + dj[k];
        
        if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj] and mat[ti][tj] != '#') {
            dfs(ti, tj);
        }
    }
    
}
int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> m;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            visited[i][j] = false;
        }
    }
    int res_sheep = 0, res_wolves = 0;
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            if(mat[i][j] != '#' and !visited[i][j]) {
                wolves = 0;
                sheep = 0;
                dfs(i, j);
                if(sheep > wolves) {
                    res_sheep += sheep;
                }
                else {
                    res_wolves += wolves;
                }
            }
        }
    }
    cout << res_sheep << "" "" << res_wolves << endl;
    return 0;
}
/*
 6 6
 1 2
 2 3
 2 5
 3 5
 3 4
 5 6
 **/
"
Dq3dDPmt,Imou Dual Lens DOWN Card,MiAutomations,YAML,Tuesday 20th of February 2024 10:18:53 AM CDT,"#Imou Dual Lens down Card PTZ
type: picture-elements
entity: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
camera_image: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
camera_view: live
elements:
  - type: icon
    icon: mdi:arrow-up
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 25px
      bottom: 50px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: UP
  - type: icon
    icon: mdi:stop
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 25px
      bottom: 25px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: STOP
  - type: icon
    icon: mdi:arrow-down
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 25px
      bottom: 0px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000
        command: DOWN
  - type: icon
    icon: mdi:target
    style:
      background: rgba(255, 255, 255, 0.5)
      Left: 20px
      bottom: 0px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: TOPOS
        preset: 1
  - type: icon
    icon: mdi:arrow-left
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 50px
      bottom: 25px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: LEFT
  - type: icon
    icon: mdi:arrow-right
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 0px
      bottom: 25px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: RIGHT
  - type: icon
    icon: mdi:arrow-top-left
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 50px
      bottom: 50px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: LEFTUP
  - type: icon
    icon: mdi:arrow-top-right
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 0px
      bottom: 50px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: RIGHTUP
  - type: icon
    icon: mdi:arrow-bottom-left
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 50px
      bottom: 0px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: LEFTDOWN
  - type: icon
    icon: mdi:arrow-bottom-right
    style:
      background: rgba(255, 255, 255, 0.5)
      right: 0px
      bottom: 0px
    tap_action:
      action: call-service
      service: onvif.ptz
      service_data:
        entity_id: camera.imou_cruizer_dual_profile000 #Colocar a entidade referente a vossa camera imagem superior
        command: RIGHTDOWN
"
QsHLYHhy,Imou Dual Lens UP Card,MiAutomations,YAML,Tuesday 20th of February 2024 10:11:28 AM CDT,"#Imou Dual Lens UP Card
camera_view: live
type: picture-glance
title: 'Imou Cruiser Dual Lens '
entities:
  - entity: switch.imou_cruizer_dual_ir_lamp #Colocar a entidade referente a luz IR da vossa camera
  - entity: switch.imou_cruiser_dual_whitelight  #Colocar a entidade referente a luz branca da vossa camera
  - entity: siren.imou_cruiser_dual_siren #Colocar a entidade referente a sirene da vossa camera
camera_image: camera.imou_cruizer_dual_profile100 #Colocar a entidade referente a vossa camera imagem superior"
adQDmCvf,Untitled,Josif_tepe,C++,Tuesday 20th of February 2024 10:09:14 AM CDT,"#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
using namespace std;
const int maxn = 1e5 + 10;
int n, m, k;
int gas[maxn];
vector<int> graph[maxn];
struct node {
    int idx, passed, mood;
    node () {}
    node(int _idx, int _passed, int _mood) {
        idx = _idx;
        passed = _passed;
        mood = _mood;
    }
    
    bool operator < (const node & tmp) const {
        int score1 = 0, score2 = 0;
        if(mood > tmp.mood) {
            score1++;
        }
        else {
            score2++;
        }
        if(passed < tmp.passed) {
            score1++;
        }
        else {
            score2++;
        }
        return score1 < score2;
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> m >> k;
    
    for(int i = 0; i < n; i++) {
        cin >> gas[i];
    }
    
    for(int i = 0; i < m; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    priority_queue<node> pq;
    pq.push(node(0, 1, gas[0]));
    vector<int> current_mood(n + 1, -2e9);
    int max_mood = -2e9, min_passing = 2e9;
    while(!pq.empty()) {
        node c = pq.top();
        pq.pop();
        
        if(c.idx == n - 1) {
            if(c.mood > max_mood) {
                max_mood = c.mood;
                min_passing = c.passed;
            }
            else if(c.mood == max_mood) {
                if(min_passing > c.passed) {
                    min_passing = c.passed;
                }
            }
            continue;
        }
        for(int i = 0; i < (int) graph[c.idx].size(); i++) {
            int neighbour = graph[c.idx][i];
            if(c.passed < k and current_mood[neighbour] < min(c.mood, gas[neighbour])) {
                pq.push(node(neighbour, c.passed + 1, min(c.mood, gas[neighbour])));
                current_mood[neighbour] = min(c.mood, gas[neighbour]);
            }
        }
    }
    cout << max_mood << "" "" << min_passing << endl;
    return 0;
}
"
u5b71MSh,Primera Perosa,seko_896,Lua,Tuesday 20th of February 2024 10:07:36 AM CDT,"(Mostrar brazo) 

local Player game. Players.LocalPlayer

game: GetService(""RunService"").RenderStepped:connect(function() local c game.Workspace: FindFirstChild(Player.Name)

if c then

c[""Right Arm""].LocalTransparencyModifier = 0

--c[ Left Arm""].LocalTransparencyModifier =0

end end)


(Ocultar brazo)

local player = game: GetService(""Players"").LocalPlayer
local character = player. Character or player.CharacterAdded:Wait()

while wait() do

if character: FindFirstChildOfClass(""Tool"") then

character[""Right Arm""]. Transparency = 0

--character[""Left Arm""]. Transparency - 0

else

for i,v in pairs(character: children()) do

if v:IsA(""Part"") br v: IsA(""Meshpart"") then v.Transparency = 1

elseif v:IsA(""Accessory"") then v:WaitForChild(""Handle""). Transparency = 1

           end

       end

   end

end
"
Q4UePWuP,90/100 % -summer outfit,ikopchev,C#,Tuesday 20th of February 2024 10:06:34 AM CDT,"double degrees = double.Parse(Console.ReadLine());
string partOfday = Console.ReadLine();

if (degrees >= 10 && degrees <= 18)
{
    switch(partOfday)
        {
        case ""Morning"":
            Console.WriteLine($""It's {degrees} degrees, get your Sweatshirt and Sneakers."");
            break;
        case ""Afternoon"":
            Console.WriteLine($""It's {degrees} degrees, get your Shirt and Moccasins."");
            break;
        case ""Evening"":
            Console.WriteLine($""It's {degrees} degrees, get your Shirt and Moccasins."");
            break;
         }
    
}
else if (degrees >18 && degrees <=24)
{
    switch (partOfday)
    {
        case ""Morning"":
            Console.WriteLine($""It's {degrees} degrees, get your Shirt and Moccasins."");
            break;
        case ""Afternoon"":
            Console.WriteLine($""It's {degrees} degrees, get your T-Shirt and Sandals."");
            break;
        case ""Evening"":
            Console.WriteLine($""It's {degrees} degrees, get your Shirt and Moccasins."");
            break;
    }
}
else  if (degrees >24 )
        {
    switch (partOfday)
    {

        case ""Мorning"":
            Console.WriteLine($""It's {degrees} degrees, get your T-Shirt and Sandals."");
            break;
        case ""Afternoon"":
            Console.WriteLine($""It's {degrees} degrees, get your Swim Suit and Barefoot."");
            break;
        case ""Evening"":
            Console.WriteLine($""It's {degrees} degrees, get your Shirt and Moccasins."");
            break;
    }
    
}"
FTBecZmb,Untitled,prizrak567890,C++,Tuesday 20th of February 2024 10:04:16 AM CDT,"//stack_vector.h ------------------------------------------------------------------------

#pragma once

#include <array>
#include <stdexcept>

template <typename T, size_t N>
class StackVector {
public:
    explicit StackVector(size_t a_size = 0) {
        if (a_size > Capacity()) {
            throw std::invalid_argument(""invalid_a_size"");
        }
        size_ = a_size;
    }

    T& operator[](size_t index) {
        return vector_arr_[index];
    }
    const T& operator[](size_t index) const {
        return vector_arr_[index];
    }

    typename std::array<T, N>::iterator begin() noexcept {
        return vector_arr_.begin();
    }
    typename std::array<T, N>::iterator end() noexcept {
        auto it_first = vector_arr_.begin();
        auto it_last = size_;
        return std::next(it_first, it_last);
    }
    typename std::array<T, N>::iterator begin() const noexcept {
         return vector_arr_.begin();
    }
    typename std::array<T, N>::iterator end() const noexcept {
        auto it_first = vector_arr_.begin();
        auto it_last = size_;
        return std::next(it_first, it_last);
    }

    size_t Size() const {
        return size_;
    }
    size_t Capacity() const {
        return vector_arr_.size();
    }

    void PushBack(const T& value) {
        if (size_ == vector_arr_.size()) {
            throw std::overflow_error(""Slot cap"");
        }
        else {
            vector_arr_[size_] = value;
            ++size_;
        }
    }
    T PopBack() {
        if (size_ == 0) {
            throw std::underflow_error(""arr is empty"");
        }
        else {
            --size_;
            return vector_arr_[size_];
        }
    }
private:
    std::array<T, N> vector_arr_;
    size_t size_{};
};
"
Uay2Khcr,Решение,Chl_Snt,Python,Tuesday 20th of February 2024 10:03:58 AM CDT,"import s_taper
from s_taper.consts import *

scheme = {
    ""userid"": INT + KEY,
    ""inv"": TEXT
}

players = s_taper.Taper(""players"", ""data.db"").create_table(scheme)

def check_inv(player: int):
    inv = players.read(""userid"", player)
    text = f""Инвентарь:\n""
    inv = inv[1]
    for name, amount in inv.items():
        text += f""{name}: {amount}\n""
    print(text)


def add_item_to_inv(player: int, item: tuple[str, int]):
    data = players.read(""userid"", player)
    inv = data[1]
    inv[item[0]] = item[1]
    players.write([player, inv])


if __name__ == '__main__':
    while True:
        if input(""mode: "") == ""1"":
            userid = int(input(""Enter userid: ""))
            check_inv(userid)
        else:
            userid = int(input(""Enter userid: ""))
            name = input(""Enter item name: "")
            amount = int(input(""Enter amount: ""))
            add_item_to_inv(userid, (name, amount))
"
Uci9Bk0m,HibernateUtil,TerenceFerut,Java,Tuesday 20th of February 2024 09:59:00 AM CDT,"package com.ynov.helloworld.helloworld;
import org.hibernate.cfg.Configuration;
import org.hibernate.SessionFactory;

public class HibernateUtil {
    private static final SessionFactory sessionFactory = buildSessionFactory();

    private static SessionFactory buildSessionFactory() {
        try {
            // Créer une SessionFactory à partir de hibernate.cfg.xml
            return new Configuration().configure(""hibernate.cfg.xml"")
              .buildSessionFactory();
        } catch (Throwable ex) {
            System.err.println(""Initial SessionFactory creation failed."" + ex);
            throw new ExceptionInInitializerError(ex);
        }
    }

    public static SessionFactory getSessionFactory() {
        return sessionFactory;
    }
}"
L5EEEts1,Untitled,irmantas_radavicius,C++,Tuesday 20th of February 2024 09:48:07 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <cctype>
#include <vector>
#include <algorithm>

using namespace std;

int main(){

    vector<string> vaisiai;
    vector<int> kiekiai;

    fstream in(""duom.txt"", fstream::in);

    if(in.is_open()){
        string line;
        while(1){
            getline(in, line);
            if(in.fail())
                break;

            string vaisius = line.substr(0, 12);
            int kiek = stoi(line.substr(12));

            if(find(vaisiai.begin(), vaisiai.end(), vaisius) == vaisiai.end()){
                vaisiai.push_back(vaisius);
                kiekiai.push_back(kiek);
            } else {
                int kur = find(vaisiai.begin(), vaisiai.end(), vaisius)-vaisiai.begin();
                kiekiai[kur] = kiekiai[kur] + kiek;
            }
        }
        in.close();
    } else {
        cout << ""Nepavyko atidaryti failo."" << endl;
        return 0;
    }

    for(int i = 0; i < vaisiai.size(); i++){
        for(int j = 0; j < vaisiai.size()-1; j++){
            //if(vaisiai[j] > vaisiai[j+1]){
            if(kiekiai[j] < kiekiai[j+1]){
                string tempv = vaisiai[j];
                vaisiai[j] = vaisiai[j+1];
                vaisiai[j+1] = tempv;
                int tempk = kiekiai[j];
                kiekiai[j] = kiekiai[j+1];
                kiekiai[j+1] = tempk;
            }
        }
    }

    fstream out(""rez.txt"", fstream::out);
    for(int i = 0; i < vaisiai.size(); i++){
        out << vaisiai[i] << "" "" << kiekiai[i] << endl;
    }
    out.close();


    return 0;

}
"
LFE8m9aG,procHandler Class,TheCalisto1994,Java,Tuesday 20th of February 2024 09:40:03 AM CDT,"import java.io.IOException;
import java.io.InputStream;
import java.util.Scanner;

/*
 * Process Handler
 *
 * Allows PHP-like shell_exec() calls
 * returns the stdOut of the process that was executed.
 *
 */
public class procHandler {
    private static boolean waitFor = false;
    public static String shell_exec (String command) throws InterruptedException { // Run a command, return its stdOut
        String result = new String();
        try {
            Process process = Runtime.getRuntime().exec(procHandler.StrtoStrA(command));
            if (waitFor)    // Only if .waitFor(true) was declared, use a blocking process
                process.waitFor();
            InputStream inputStream = process.getInputStream();
            Scanner scanner = new Scanner(inputStream);

            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line != null)
                    result += String.format(""%s\n"", line);
            }

            scanner.close();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
        return(result);
    }

    // STRING OPERATIONS

    public static String StrAtoStr (String[] args) { // Converts a string array (like the command-line arguments) to a String.
        String Out = new String(); // Initialize string
        if (args.length > 0) { // Check if there's any arguments provided
            for (int i = 0; i < args.length; i++) { // Convert through a ""for""-Loop
                Out += args[i] + "" ""; // concatenate arguments
                if (i != args.length - 1) Out += "" ""; // Add a whitespace, if it's not the last argument
            }

        }
        return(Out);
    }

    public static String[] StrtoStrA (String args) { // convert a String to a String Array (e.g. to use for shell_execute)
        return args.split("" "");
    }

    // BUILDER OPERATIONS (allows for default values for certain parameters which may be called like .waitFor(true))
    public procHandler waitFor (boolean waitFor) {
        this.waitFor = waitFor;
        return this;
    }
}
"
e6ci9ycB,Untitled,irmantas_radavicius,C++,Tuesday 20th of February 2024 09:36:44 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>
#include <cctype>
#include <vector>
#include <algorithm>

using namespace std;

int main(){

    vector<string> vaisiai;
    vector<int> kiekiai;

    fstream in(""duom.txt"", fstream::in);
    int kiek = 0;
    if(in.is_open()){
        string line;
        while(1){
            getline(in, line);
            if(in.fail())
                break;
            kiek++;
            //cout << line << endl;
            string vaisius = line.substr(0, 12);
            line = line.substr(12);

            //vaisius = line.substr(0, line.find(' '));

            //int i = 11;
            //while(isspace(line[i]))
            //    i--;
            //vaisius = line.substr(0, i+1);

            //cout << ""("" << vaisius << "")"" << endl;
            //cout << ""("" << stoi(line) << "")"" << endl;

            //stringstream ss;
            //ss << line;
            //int a;
            //ss >> a;


            if(find(vaisiai.begin(), vaisiai.end(), vaisius) == vaisiai.end()){
                //cout << vaisius << "" nera sarase "" << endl;
                vaisiai.push_back(vaisius);
                kiekiai.push_back(stoi(line));

            }
            else {
                //cout << vaisius << "" yra sarase "" << endl;
                int kur = find(vaisiai.begin(), vaisiai.end(), vaisius)-vaisiai.begin();
                kiekiai[kur] = kiekiai[kur] + stoi(line);
            }
        }
        in.close();
        //cout << ""Faile yra "" << kiek << "" eiluciu"" << endl;

    } else {
        cout << ""Nepavyko atidaryti failo."" << endl;
    }

    for(int i = 0; i < vaisiai.size(); i++){
        cout << vaisiai[i] << "" "" << kiekiai[i] << endl;
    }


    return 0;

}
"
WtS6V5CV,Dépendances Maven Hibernate,TerenceFerut,XML,Tuesday 20th of February 2024 09:36:25 AM CDT,"    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>21</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>21</version>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Hibernate core -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.4.30.Final</version>
        </dependency>
        <!-- SQLite JDBC Driver -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.44.1.0</version>
        </dependency>
        <!-- Java Persistence API -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>2.2.3</version>
        </dependency>

        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>8.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0.1</version>
        </dependency>


    </dependencies>"
Pfkau75h,module-info Hibernate,TerenceFerut,Java,Tuesday 20th of February 2024 09:33:09 AM CDT,"module com.ynov.helloworld.helloworld {
    requires javafx.controls;
    requires javafx.fxml;
    requires java.base;
    requires org.controlsfx.controls;
    requires java.sql;
    requires org.hibernate.orm.core;
    requires java.persistence;
    requires java.naming;


    opens com.ynov.helloworld.helloworld to javafx.fxml;
    opens com.ynov.helloworld.helloworld.model to org.hibernate.orm.core;
    exports com.ynov.helloworld.helloworld;
    exports com.ynov.helloworld.helloworld.repository;
    exports org.hibernate.mydialect to org.hibernate.orm.core;
    opens com.ynov.helloworld.helloworld.repository to javafx.fxml;
}"
dMRnMFKn,Nigerian scammers [20-2-1/2024],bombaires,AIMMS,Tuesday 20th of February 2024 09:28:03 AM CDT,"<a href=""mailto:leyen@rediffmail.com"">leyen@rediffmail.com</a>
<a href=""mailto:service@acpass-display.com"">service@acpass-display.com</a>
<a href=""mailto:info1@acpass.com.cn"">info1@acpass.com.cn</a>
<a href=""mailto:mr.tony_moore242@diplomats.com"">mr.tony_moore242@diplomats.com</a>
<a href=""mailto:agoa93030@googlemail.com"">agoa93030@googlemail.com</a>
<a href=""mailto:a.g.o.a93030@googlemail.com"">a.g.o.a93030@googlemail.com</a>
<a href=""mailto:ag.oa9303.0@googlemail.com"">ag.oa9303.0@googlemail.com</a>
<a href=""mailto:ag.oa9.3.03.0@googlemail.com"">ag.oa9.3.03.0@googlemail.com</a>
<a href=""mailto:ago.a.93.0.3.0@googlemail.com"">ago.a.93.0.3.0@googlemail.com</a>
<a href=""mailto:ag.oa930.3.0@googlemail.com"">ag.oa930.3.0@googlemail.com</a>
<a href=""mailto:a.g.oa93.03.0@googlemail.com"">a.g.oa93.03.0@googlemail.com</a>
<a href=""mailto:ag.o.a.930.30@googlemail.com"">ag.o.a.930.30@googlemail.com</a>
<a href=""mailto:a.g.oa93.030@googlemail.com"">a.g.oa93.030@googlemail.com</a>
<a href=""mailto:ag.oa93030@googlemail.com"">ag.oa93030@googlemail.com</a>
<a href=""mailto:a.goa9.30.3.0@googlemail.com"">a.goa9.30.3.0@googlemail.com</a>
<a href=""mailto:a.g.oa9.303.0@googlemail.com"">a.g.oa9.303.0@googlemail.com</a>
<a href=""mailto:a.g.o.a.9.30.30@googlemail.com"">a.g.o.a.9.30.30@googlemail.com</a>
<a href=""mailto:ag.oa9.3.030@googlemail.com"">ag.oa9.3.030@googlemail.com</a>
<a href=""mailto:a.go.a.93.0.30@googlemail.com"">a.go.a.93.0.30@googlemail.com</a>
<a href=""mailto:a.goa.9.3.0.30@googlemail.com"">a.goa.9.3.0.30@googlemail.com</a>
<a href=""mailto:a.goa.93030@googlemail.com"">a.goa.93030@googlemail.com</a>
<a href=""mailto:ag.o.a.9.3.030@googlemail.com"">ag.o.a.9.3.030@googlemail.com</a>
<a href=""mailto:a.goa9.303.0@googlemail.com"">a.goa9.303.0@googlemail.com</a>
<a href=""mailto:ago.a.9.3030@googlemail.com"">ago.a.9.3030@googlemail.com</a>
<a href=""mailto:ago.a9.3.03.0@googlemail.com"">ago.a9.3.03.0@googlemail.com</a>
<a href=""mailto:a.goa9.3.0.30@googlemail.com"">a.goa9.3.0.30@googlemail.com</a>
<a href=""mailto:ag.o.a.93030@googlemail.com"">ag.o.a.93030@googlemail.com</a>
<a href=""mailto:ago.a.9303.0@googlemail.com"">ago.a.9303.0@googlemail.com</a>
<a href=""mailto:a.go.a.9.3030@googlemail.com"">a.go.a.9.3030@googlemail.com</a>
<a href=""mailto:agoa9.303.0@googlemail.com"">agoa9.303.0@googlemail.com</a>
<a href=""mailto:agoa93.030@googlemail.com"">agoa93.030@googlemail.com</a>
<a href=""mailto:ag.o.a9.30.3.0@googlemail.com"">ag.o.a9.30.3.0@googlemail.com</a>
<a href=""mailto:ag.o.a930.30@googlemail.com"">ag.o.a930.30@googlemail.com</a>
<a href=""mailto:ag.oa93.030@googlemail.com"">ag.oa93.030@googlemail.com</a>
<a href=""mailto:ag.oa.930.30@googlemail.com"">ag.oa.930.30@googlemail.com</a>
<a href=""mailto:ag.oa.93.030@googlemail.com"">ag.oa.93.030@googlemail.com</a>
<a href=""mailto:a.go.a.9.30.3.0@googlemail.com"">a.go.a.9.30.3.0@googlemail.com</a>
<a href=""mailto:ag.o.a9.3.030@googlemail.com"">ag.o.a9.3.030@googlemail.com</a>
<a href=""mailto:a.g.o.a9.30.3.0@googlemail.com"">a.g.o.a9.30.3.0@googlemail.com</a>
<a href=""mailto:ago.a.9.30.30@googlemail.com"">ago.a.9.30.30@googlemail.com</a>
<a href=""mailto:a.g.oa.93.0.3.0@googlemail.com"">a.g.oa.93.0.3.0@googlemail.com</a>
<a href=""mailto:a.g.o.a9.30.30@googlemail.com"">a.g.o.a9.30.30@googlemail.com</a>
<a href=""mailto:a.g.o.a.93.030@googlemail.com"">a.g.o.a.93.030@googlemail.com</a>
<a href=""mailto:ag.oa.93030@googlemail.com"">ag.oa.93030@googlemail.com</a>
<a href=""mailto:a.g.oa930.3.0@googlemail.com"">a.g.oa930.3.0@googlemail.com</a>
<a href=""mailto:a.go.a93.0.3.0@googlemail.com"">a.go.a93.0.3.0@googlemail.com</a>
<a href=""mailto:a.g.o.a9.3.0.30@googlemail.com"">a.g.o.a9.3.0.30@googlemail.com</a>
<a href=""mailto:a.g.oa.9.3.0.30@googlemail.com"">a.g.oa.9.3.0.30@googlemail.com</a>
<a href=""mailto:a.g.o.a93.030@googlemail.com"">a.g.o.a93.030@googlemail.com</a>
<a href=""mailto:a.go.a9.30.3.0@googlemail.com"">a.go.a9.30.3.0@googlemail.com</a>
<a href=""mailto:agoa.9.3.03.0@googlemail.com"">agoa.9.3.03.0@googlemail.com</a>
<a href=""mailto:ag.oa.9.3.030@googlemail.com"">ag.oa.9.3.030@googlemail.com</a>
<a href=""mailto:ago.a93030@googlemail.com"">ago.a93030@googlemail.com</a>
<a href=""mailto:a.g.oa.9.3.03.0@googlemail.com"">a.g.oa.9.3.03.0@googlemail.com</a>
<a href=""mailto:a.go.a.93.0.3.0@googlemail.com"">a.go.a.93.0.3.0@googlemail.com</a>
<a href=""mailto:ag.o.a93.030@googlemail.com"">ag.o.a93.030@googlemail.com</a>
<a href=""mailto:ago.a.930.30@googlemail.com"">ago.a.930.30@googlemail.com</a>
<a href=""mailto:a.g.o.a930.3.0@googlemail.com"">a.g.o.a930.3.0@googlemail.com</a>
<a href=""mailto:agoa9.3.030@googlemail.com"">agoa9.3.030@googlemail.com</a>
<a href=""mailto:agoa.930.30@googlemail.com"">agoa.930.30@googlemail.com</a>
<a href=""mailto:a.go.a9.3030@googlemail.com"">a.go.a9.3030@googlemail.com</a>
<a href=""mailto:ago.a9.303.0@googlemail.com"">ago.a9.303.0@googlemail.com</a>
<a href=""mailto:a.g.oa.9303.0@googlemail.com"">a.g.oa.9303.0@googlemail.com</a>
<a href=""mailto:a.g.oa.93.0.30@googlemail.com"">a.g.oa.93.0.30@googlemail.com</a>
<a href=""mailto:ag.oa9.3030@googlemail.com"">ag.oa9.3030@googlemail.com</a>
<a href=""mailto:ago.a.93.0.30@googlemail.com"">ago.a.93.0.30@googlemail.com</a>
<a href=""mailto:a.goa9.3.030@googlemail.com"">a.goa9.3.030@googlemail.com</a>
<a href=""mailto:a.g.oa.93030@googlemail.com"">a.g.oa.93030@googlemail.com</a>
<a href=""mailto:ago.a9.3.0.30@googlemail.com"">ago.a9.3.0.30@googlemail.com</a>
<a href=""mailto:a.goa.930.3.0@googlemail.com"">a.goa.930.3.0@googlemail.com</a>
<a href=""mailto:a.goa9303.0@googlemail.com"">a.goa9303.0@googlemail.com</a>
<a href=""mailto:a.g.oa9.3.030@googlemail.com"">a.g.oa9.3.030@googlemail.com</a>
<a href=""mailto:a.g.o.a.930.30@googlemail.com"">a.g.o.a.930.30@googlemail.com</a>
<a href=""mailto:ag.o.a9.3.0.3.0@googlemail.com"">ag.o.a9.3.0.3.0@googlemail.com</a>
<a href=""mailto:agoa.9303.0@googlemail.com"">agoa.9303.0@googlemail.com</a>
<a href=""mailto:a.g.oa.9.303.0@googlemail.com"">a.g.oa.9.303.0@googlemail.com</a>
<a href=""mailto:ag.o.a.9.3.03.0@googlemail.com"">ag.o.a.9.3.03.0@googlemail.com</a>
<a href=""mailto:ag.o.a.93.03.0@googlemail.com"">ag.o.a.93.03.0@googlemail.com</a>
<a href=""mailto:ag.oa.9303.0@googlemail.com"">ag.oa.9303.0@googlemail.com</a>
<a href=""mailto:agoa9.3030@googlemail.com"">agoa9.3030@googlemail.com</a>
<a href=""mailto:a.goa93.030@googlemail.com"">a.goa93.030@googlemail.com</a>
<a href=""mailto:a.g.o.a.93030@googlemail.com"">a.g.o.a.93030@googlemail.com</a>
<a href=""mailto:a.g.o.a9.3.03.0@googlemail.com"">a.g.o.a9.3.03.0@googlemail.com</a>
<a href=""mailto:agoa93030@googlemail.com"">agoa93030@googlemail.com</a>
<a href=""mailto:ag.o.a93.03.0@googlemail.com"">ag.o.a93.03.0@googlemail.com</a>
<a href=""mailto:a.g.o.a93.0.3.0@googlemail.com"">a.g.o.a93.0.3.0@googlemail.com</a>
<a href=""mailto:a.g.o.a.9.3.0.30@googlemail.com"">a.g.o.a.9.3.0.30@googlemail.com</a>
<a href=""mailto:a.go.a.9.30.30@googlemail.com"">a.go.a.9.30.30@googlemail.com</a>
<a href=""mailto:ag.o.a.93.0.3.0@googlemail.com"">ag.o.a.93.0.3.0@googlemail.com</a>
<a href=""mailto:agoa93.03.0@googlemail.com"">agoa93.03.0@googlemail.com</a>
<a href=""mailto:a.g.o.a.930.3.0@googlemail.com"">a.g.o.a.930.3.0@googlemail.com</a>
<a href=""mailto:ago.a930.3.0@googlemail.com"">ago.a930.3.0@googlemail.com</a>
<a href=""mailto:a.g.o.a9303.0@googlemail.com"">a.g.o.a9303.0@googlemail.com</a>
<a href=""mailto:ago.a.9.303.0@googlemail.com"">ago.a.9.303.0@googlemail.com</a>
<a href=""mailto:agoa.9.303.0@googlemail.com"">agoa.9.303.0@googlemail.com</a>
<a href=""mailto:ag.o.a.9.3.0.30@googlemail.com"">ag.o.a.9.3.0.30@googlemail.com</a>
<a href=""mailto:a.g.o.a.9.303.0@googlemail.com"">a.g.o.a.9.303.0@googlemail.com</a>
<a href=""mailto:a.goa9.30.30@googlemail.com"">a.goa9.30.30@googlemail.com</a>
<a href=""mailto:ag.o.a.9.3030@googlemail.com"">ag.o.a.9.3030@googlemail.com</a>
<a href=""mailto:agoa930.3.0@googlemail.com"">agoa930.3.0@googlemail.com</a>
<a href=""mailto:a.g.o.a930.30@googlemail.com"">a.g.o.a930.30@googlemail.com</a>
<a href=""mailto:ago.a.9.3.0.3.0@googlemail.com"">ago.a.9.3.0.3.0@googlemail.com</a>
<a href=""mailto:ag.oa.93.03.0@googlemail.com"">ag.oa.93.03.0@googlemail.com</a>
<a href=""mailto:agoa93.0.30@googlemail.com"">agoa93.0.30@googlemail.com</a>
<a href=""mailto:a.g.oa9.30.3.0@googlemail.com"">a.g.oa9.30.3.0@googlemail.com</a>
<a href=""mailto:ago.a.9.3.03.0@googlemail.com"">ago.a.9.3.03.0@googlemail.com</a>
<a href=""mailto:a.go.a.9.303.0@googlemail.com"">a.go.a.9.303.0@googlemail.com</a>
<a href=""mailto:ag.oa.9.303.0@googlemail.com"">ag.oa.9.303.0@googlemail.com</a>
<a href=""mailto:a.go.a.930.3.0@googlemail.com"">a.go.a.930.3.0@googlemail.com</a>
<a href=""mailto:ago.a.93.03.0@googlemail.com"">ago.a.93.03.0@googlemail.com</a>
<a href=""mailto:a.goa.93.0.30@googlemail.com"">a.goa.93.0.30@googlemail.com</a>
<a href=""mailto:a.go.a93.0.30@googlemail.com"">a.go.a93.0.30@googlemail.com</a>
<a href=""mailto:ag.o.a.9.30.30@googlemail.com"">ag.o.a.9.30.30@googlemail.com</a>
<a href=""mailto:ag.o.a.93.030@googlemail.com"">ag.o.a.93.030@googlemail.com</a>
<a href=""mailto:a.g.oa9.3.03.0@googlemail.com"">a.g.oa9.3.03.0@googlemail.com</a>
<a href=""mailto:a.g.oa9.30.30@googlemail.com"">a.g.oa9.30.30@googlemail.com</a>
<a href=""mailto:agoa9.30.3.0@googlemail.com"">agoa9.30.3.0@googlemail.com</a>
<a href=""mailto:ago.a93.0.3.0@googlemail.com"">ago.a93.0.3.0@googlemail.com</a>
<a href=""mailto:ag.oa.9.3030@googlemail.com"">ag.oa.9.3030@googlemail.com</a>
<a href=""mailto:a.goa930.3.0@googlemail.com"">a.goa930.3.0@googlemail.com</a>
<a href=""mailto:a.g.o.a9.3030@googlemail.com"">a.g.o.a9.3030@googlemail.com</a>
<a href=""mailto:a.g.o.a.9303.0@googlemail.com"">a.g.o.a.9303.0@googlemail.com</a>
<a href=""mailto:ag.o.a93.0.30@googlemail.com"">ag.o.a93.0.30@googlemail.com</a>
<a href=""mailto:a.go.a.9.3.030@googlemail.com"">a.go.a.9.3.030@googlemail.com</a>
<a href=""mailto:ag.o.a9.3.03.0@googlemail.com"">ag.o.a9.3.03.0@googlemail.com</a>
<a href=""mailto:ag.o.a.93.0.30@googlemail.com"">ag.o.a.93.0.30@googlemail.com</a>
<a href=""mailto:a.go.a.9.3.0.30@googlemail.com"">a.go.a.9.3.0.30@googlemail.com</a>
<a href=""mailto:a.goa.9.30.3.0@googlemail.com"">a.goa.9.30.3.0@googlemail.com</a>
<a href=""mailto:ag.o.a.9.303.0@googlemail.com"">ag.o.a.9.303.0@googlemail.com</a>
<a href=""mailto:a.go.a9.303.0@googlemail.com"">a.go.a9.303.0@googlemail.com</a>
<a href=""mailto:ago.a9.30.30@googlemail.com"">ago.a9.30.30@googlemail.com</a>
<a href=""mailto:a.goa93.0.3.0@googlemail.com"">a.goa93.0.3.0@googlemail.com</a>
<a href=""mailto:ago.a.9.3.030@googlemail.com"">ago.a.9.3.030@googlemail.com</a>
<a href=""mailto:ag.oa.9.3.0.30@googlemail.com"">ag.oa.9.3.0.30@googlemail.com</a>
<a href=""mailto:a.g.oa.93.03.0@googlemail.com"">a.g.oa.93.03.0@googlemail.com</a>
<a href=""mailto:a.g.o.a.9.3030@googlemail.com"">a.g.o.a.9.3030@googlemail.com</a>
<a href=""mailto:ag.oa93.0.30@googlemail.com"">ag.oa93.0.30@googlemail.com</a>
<a href=""mailto:a.go.a9.3.030@googlemail.com"">a.go.a9.3.030@googlemail.com</a>
<a href=""mailto:a.g.o.a.9.3.0.3.0@googlemail.com"">a.g.o.a.9.3.0.3.0@googlemail.com</a>
<a href=""mailto:a.g.oa.930.3.0@googlemail.com"">a.g.oa.930.3.0@googlemail.com</a>
<a href=""mailto:a.go.a.93030@googlemail.com"">a.go.a.93030@googlemail.com</a>
<a href=""mailto:agoa9303.0@googlemail.com"">agoa9303.0@googlemail.com</a>
<a href=""mailto:a.g.o.a93.0.30@googlemail.com"">a.g.o.a93.0.30@googlemail.com</a>
<a href=""mailto:a.goa.93.030@googlemail.com"">a.goa.93.030@googlemail.com</a>
<a href=""mailto:ag.o.a9303.0@googlemail.com"">ag.o.a9303.0@googlemail.com</a>
<a href=""mailto:a.go.a9.3.0.3.0@googlemail.com"">a.go.a9.3.0.3.0@googlemail.com</a>
<a href=""mailto:ag.o.a93030@googlemail.com"">ag.o.a93030@googlemail.com</a>
<a href=""mailto:a.go.a930.30@googlemail.com"">a.go.a930.30@googlemail.com</a>
<a href=""mailto:ag.o.a.9303.0@googlemail.com"">ag.o.a.9303.0@googlemail.com</a>
<a href=""mailto:a.goa.9.3030@googlemail.com"">a.goa.9.3030@googlemail.com</a>
<a href=""mailto:a.goa9.3.03.0@googlemail.com"">a.goa9.3.03.0@googlemail.com</a>
<a href=""mailto:agoa.93.0.30@googlemail.com"">agoa.93.0.30@googlemail.com</a>
<a href=""mailto:a.goa.93.0.3.0@googlemail.com"">a.goa.93.0.3.0@googlemail.com</a>
<a href=""mailto:a.g.oa.93.030@googlemail.com"">a.g.oa.93.030@googlemail.com</a>
<a href=""mailto:ag.o.a.9.30.3.0@googlemail.com"">ag.o.a.9.30.3.0@googlemail.com</a>
<a href=""mailto:ago.a.9.30.3.0@googlemail.com"">ago.a.9.30.3.0@googlemail.com</a>
<a href=""mailto:ag.oa9.30.3.0@googlemail.com"">ag.oa9.30.3.0@googlemail.com</a>
<a href=""mailto:a.go.a93.03.0@googlemail.com"">a.go.a93.03.0@googlemail.com</a>
<a href=""mailto:a.goa.9.303.0@googlemail.com"">a.goa.9.303.0@googlemail.com</a>
<a href=""mailto:ago.a93.0.30@googlemail.com"">ago.a93.0.30@googlemail.com</a>
<a href=""mailto:a.go.a9303.0@googlemail.com"">a.go.a9303.0@googlemail.com</a>
<a href=""mailto:ag.oa.93.0.30@googlemail.com"">ag.oa.93.0.30@googlemail.com</a>
<a href=""mailto:a.go.a93030@googlemail.com"">a.go.a93030@googlemail.com</a>
<a href=""mailto:a.g.oa9.3.0.3.0@googlemail.com"">a.g.oa9.3.0.3.0@googlemail.com</a>
<a href=""mailto:ago.a9.3030@googlemail.com"">ago.a9.3030@googlemail.com</a>
<a href=""mailto:a.g.o.a.9.3.030@googlemail.com"">a.g.o.a.9.3.030@googlemail.com</a>
<a href=""mailto:ag.oa930.30@googlemail.com"">ag.oa930.30@googlemail.com</a>
<a href=""mailto:a.goa.9303.0@googlemail.com"">a.goa.9303.0@googlemail.com</a>
<a href=""mailto:ag.o.a9.30.30@googlemail.com"">ag.o.a9.30.30@googlemail.com</a>
<a href=""mailto:a.goa930.30@googlemail.com"">a.goa930.30@googlemail.com</a>
<a href=""mailto:ago.a9.30.3.0@googlemail.com"">ago.a9.30.3.0@googlemail.com</a>
<a href=""mailto:a.go.a.93.03.0@googlemail.com"">a.go.a.93.03.0@googlemail.com</a>
<a href=""mailto:ag.o.a93.0.3.0@googlemail.com"">ag.o.a93.0.3.0@googlemail.com</a>
<a href=""mailto:a.g.o.a.93.03.0@googlemail.com"">a.g.o.a.93.03.0@googlemail.com</a>
<a href=""mailto:ag.oa9.30.30@googlemail.com"">ag.oa9.30.30@googlemail.com</a>
<a href=""mailto:a.goa93.0.30@googlemail.com"">a.goa93.0.30@googlemail.com</a>
<a href=""mailto:a.goa93030@googlemail.com"">a.goa93030@googlemail.com</a>
<a href=""mailto:a.go.a.930.30@googlemail.com"">a.go.a.930.30@googlemail.com</a>
<a href=""mailto:a.g.o.a.9.30.3.0@googlemail.com"">a.g.o.a.9.30.3.0@googlemail.com</a>
<a href=""mailto:ag.o.a9.3.0.30@googlemail.com"">ag.o.a9.3.0.30@googlemail.com</a>
<a href=""mailto:a.goa93.03.0@googlemail.com"">a.goa93.03.0@googlemail.com</a>
<a href=""mailto:a.g.oa9.3030@googlemail.com"">a.g.oa9.3030@googlemail.com</a>
<a href=""mailto:agoa.93.0.3.0@googlemail.com"">agoa.93.0.3.0@googlemail.com</a>
<a href=""mailto:ag.o.a.930.3.0@googlemail.com"">ag.o.a.930.3.0@googlemail.com</a>
<a href=""mailto:ago.a93.030@googlemail.com"">ago.a93.030@googlemail.com</a>
<a href=""mailto:a.g.o.a.93.0.30@googlemail.com"">a.g.o.a.93.0.30@googlemail.com</a>
<a href=""mailto:a.g.oa.930.30@googlemail.com"">a.g.oa.930.30@googlemail.com</a>
<a href=""mailto:ag.oa9.303.0@googlemail.com"">ag.oa9.303.0@googlemail.com</a>
<a href=""mailto:a.g.oa.9.3030@googlemail.com"">a.g.oa.9.3030@googlemail.com</a>
<a href=""mailto:a.g.oa93.0.3.0@googlemail.com"">a.g.oa93.0.3.0@googlemail.com</a>
<a href=""mailto:a.g.oa9303.0@googlemail.com"">a.g.oa9303.0@googlemail.com</a>
<a href=""mailto:agoa.930.3.0@googlemail.com"">agoa.930.3.0@googlemail.com</a>
<a href=""mailto:a.go.a.9.3.0.3.0@googlemail.com"">a.go.a.9.3.0.3.0@googlemail.com</a>
<a href=""mailto:ago.a930.30@googlemail.com"">ago.a930.30@googlemail.com</a>
<a href=""mailto:a.g.o.a.93.0.3.0@googlemail.com"">a.g.o.a.93.0.3.0@googlemail.com</a>
<a href=""mailto:ag.oa.93.0.3.0@googlemail.com"">ag.oa.93.0.3.0@googlemail.com</a>
<a href=""mailto:agoa.93.030@googlemail.com"">agoa.93.030@googlemail.com</a>
<a href=""mailto:ago.a.93.030@googlemail.com"">ago.a.93.030@googlemail.com</a>
<a href=""mailto:agoa.9.3030@googlemail.com"">agoa.9.3030@googlemail.com</a>
<a href=""mailto:agoa.93.03.0@googlemail.com"">agoa.93.03.0@googlemail.com</a>
<a href=""mailto:a.go.a.9303.0@googlemail.com"">a.go.a.9303.0@googlemail.com</a>
<a href=""mailto:ag.oa93.0.3.0@googlemail.com"">ag.oa93.0.3.0@googlemail.com</a>
<a href=""mailto:a.goa9.3.0.3.0@googlemail.com"">a.goa9.3.0.3.0@googlemail.com</a>
<a href=""mailto:a.goa.9.3.03.0@googlemail.com"">a.goa.9.3.03.0@googlemail.com</a>
<a href=""mailto:ag.oa.930.3.0@googlemail.com"">ag.oa.930.3.0@googlemail.com</a>"
chMe026q,Auto import shiz,metalni,TypeScript,Tuesday 20th of February 2024 09:27:48 AM CDT,"const { exec } = require(""child_process"");
const { readFile, writeFile } = require('node:fs/promises');

exec(""grep -Rl \""t(LABELS.\"" ."", (error, stdout, stderr) => {
  if (error) {
    console.log(`error: ${error.message}`);
    return;
  }
  if (stderr) {
    console.log(`stderr: ${stderr}`)
  }

  const lines = stdout.split(""\n"");
  lines.filter(line => line.endsWith('tsx')).forEach(async (line) => {
    const file = await readFile(line, 'utf-8');
    if (!file.includes('useTranslation')) {
      const fileLines = file.split('\n');
      const lineNumberToInsert = fileLines.findIndex(line => line.includes('=> {')) + 1
      fileLines.splice(lineNumberToInsert, 0, '  const { t } = useTranslation()');
      fileLines.splice(0, 0, 'import { useTranslation } from \'react-i18next\'');

      await writeFile(line, fileLines.join('\n'))
    }
  })

});"
3LW266bA,Untitled,backparsnip,Bash,Tuesday 20th of February 2024 09:00:38 AM CDT,"FRONTPOTATOROOF
 
Starting a document with uppercase letter
 
This is Feb 20 testing 1500
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6e"
8yz3EcSq,SimulateurChargeClaudiusMarius01,claudiusmarius,C++,Tuesday 20th of February 2024 08:57:35 AM CDT,"//============================================================================================================================================
  //INFORMATION SUR les courants débités par l'alimentation à tester appelon la ALIM dont la tension d'alimentation VCC est variable de 5V à 24V 
  // IMPORTANT, LES COURANTS SONT EXPRIMES EN milliAmpères
  // Io = VCC/920 le résultat est en mA ce courant est constamment débité par l'alimentation ALIM
  // I1 = VCC/9.4 le résultat est en mA ce courant est seulement débité quand :digitalWrite(GateQ1, HIGH);
  // I2 = VCC/94 le résultat est en mA ce courant est seulement débité quand :digitalWrite(GateQ2, HIGH);
  // I3 = VCC/94 le résultat est en mA ce courant est seulement débité quand :digitalWrite(GateQ3, HIGH);
  // IMPORTANT : pour connaître VCC c'est RatioVCCFiltre*K5
  // Comme leTM1637 ne tient pas compte de ce courant c'est du courant supplémentaire par la rapport à celui affiché sur le TM1637 il faut donc les rajouter

  // ================================SOUTENEZ MOI EN LIKANT, PARTAGEANT, COMMENTANT ET EN VOUS ABONNANT=========================================
  
  //                                             www.youtube.com/@ClaudeDufourmont
  
  // ===========================================================================================================================================
  
  #include <TM1637Display.h>
  #include <Adafruit_NeoPixel.h>
  #include <Arduino.h>
  #define CLK1 D5
  #define DIO1 D4
  #define GateQ1 D7
  #define GateQ2 D8
  #define GateQ3 D9
  #define BrocheNeopixel D3
  #define NLed 12
  #define BrocheRatioVcc A10
                                        
  #define K0 1.00                                             //Facteur d'ajustement du courant I0
  #define K1 1.00                                             //Facteur d'ajustement du courant I1
  #define K2 1.00                                             //Facteur d'ajustement du courant I2
  #define K3 1.00                                             //Facteur d'ajustement du courant I3
  #define K4  1.00                                            //Facteur d'ajustement de la tension RatioVCCFiltre
  #define K5  9.32                                            //Rapport ptentiomètrique --REEL-- inversé de  R27/(R26 + R27)
  
  TM1637Display display1(CLK1, DIO1);
  Adafruit_NeoPixel Strip(NLed, BrocheNeopixel, NEO_GRB + NEO_KHZ800);

  #define Luminosite 11 // Lumunosité Matrice (de 0 à 255)

  int PotentiometerGros = 0;
  int LastPotentiometerGros = 0;
  int PotentiometerFin = 0;
  int TemperatureDissipateur = 0;
  const int NombreEchantillons = 40;                          // Nombre d'échantillons pour la moyenne mobile

  int Lectures[NombreEchantillons];                           // Tableau pour stocker les échantillons
  int readIndex = 0;                                          // Index de lecture dans le tableau
  int total = 0;                                              // Somme des échantillons
  int RatioVcc;

  
  // ++++++++++++++++++++++++++++++++++++++++++Ci-desssous création des 3 libellés d'alarmes+++++++++++++++++++++++++++++++++++++++++++
  
  const uint8_t ERR1[] = {
    SEG_A | SEG_B | SEG_C | SEG_E | SEG_F | SEG_G , 
    SEG_F| SEG_E | SEG_D ,
    SEG_A | SEG_B | SEG_C | SEG_D | SEG_E| SEG_F, 
    SEG_B | SEG_C };
  //----------------------------------------------------AL01 (LIMITE SUPERIEURE VCC)----------------------------------------------------

   const uint8_t ERR2[] = {
    SEG_A | SEG_B | SEG_C | SEG_E | SEG_F | SEG_G , 
    SEG_F| SEG_E | SEG_D ,
    SEG_A | SEG_B | SEG_C | SEG_D | SEG_E| SEG_F, 
    SEG_A |SEG_B | SEG_G | SEG_D | SEG_E }; 
  //----------------------------------------------------AL02 (LIMITE INFERIEURE VCC)----------------------------------------------------

  const uint8_t ERR3[] = {
    SEG_A | SEG_B | SEG_C | SEG_E | SEG_F | SEG_G , 
    SEG_F| SEG_E | SEG_D ,
    SEG_A | SEG_B | SEG_C | SEG_D | SEG_E| SEG_F, 
    SEG_A |SEG_B | SEG_G | SEG_D | SEG_C }; 
  //------------------------------------------AL03 (LIMITE SUPERIEURE TEMPERATURE DISSIPATEUR)------------------------------------------
  
  #define FILTER_ALPHA 0.1 // Facteur de lissage, ajustez selon vos besoins
  int RatioVCCFiltre = 0;

  #define SeuilIntermediaire0 (1.19 / 3.3 * 1023) // Le terme 1.19 correspond à 10,94V ( 9.2 * 1.19) seuil de la tension à tester en dessous duquel Bypassage complet des 3 doubles shunts
  #define Hysteresis0 0                            // Hystérésis non utilisé pour l'instant
  
  #define SeuilIntermediaire1 (1.74 / 3.3 * 1023) // Le terme 1.74 correspond à 16.08V ( 9.2 * 1.74) seuil de la tension à tester en dessous duquel Bypassage complet des 2 doubles shunts supérieurs
  #define Hysteresis1 0                            // Hystérésis non utilisé pour l'instant

  #define SeuilIntermediaire2 (2.17 / 3.3 * 1023) // Le terme 2.17 correspond à 19,96V ( 9.2 * 2.17) seuil de la tension à tester en dessous duquel Bypassage complet du double shunt supérieur
  #define Hysteresis2 0                            // Hystérésis non utilisé pour l'instant

  #define SeuilIntermediaire3 (2.6 / 3.3 * 1023)  // Le terme 2.6 correspond à 23,92V ( 9.2 * 2,6) seuil de la tension à tester Maximal admissible
  #define Hysteresis3 0                            // Hystérésis non utilisé pour l'instant

  #define SeuilIntermediaire4 (1 * 1023)           //  seuil de la tension à tester hors butée
  #define Hysteresis4 0                            // Hystérésis non utilisé pour l'instant
 
  
  int step = 0;

  void setup()
  {
  Serial.begin(9600);
  //Serial.println(""Démarrage du programme..."");                    // Uniquement en débogage
  pinMode(GateQ1, OUTPUT);
  pinMode(GateQ2, OUTPUT);
  pinMode(GateQ3, OUTPUT);
  analogReadResolution(10);
  analogWriteResolution(10);                                         // Résolution du DAC (10 bits)
  display1.setBrightness(0x0A);                                      // Luminosité entre 0x0A et 0x0F

  Strip.begin(); // Initialisation des Néopixel  de 10 Leds
  Strip.setBrightness(Luminosite);

  analogWrite(A0, 0);                                                 // Initaialisation du DAC à zéro pendant 2 secondes

  digitalWrite(GateQ1, LOW);                                          //Blocage Q4
  digitalWrite(GateQ2, LOW);                                          //Blocage Q5
  digitalWrite(GateQ3, LOW);                                          //Blocage Q6
  //                                ==> Les 3 doubles shunts sont passants
  
  Synoptique0();
  Strip.clear(); // Éteindre toutes les NeoPixels
  Strip.show();
  delay(2000);
  }

  void loop()
  {
  PotentiometerGros = analogRead(A6);
  PotentiometerFin = analogRead(A1);
  TemperatureDissipateur = analogRead(A2);
  PotentiometerFin = map(PotentiometerFin, 0, 1023, -30, 30);

  RatioVcc = analogRead(BrocheRatioVcc);
  RatioVCCFiltre = (int)(FILTER_ALPHA * RatioVcc + (1.0 - FILTER_ALPHA) * RatioVCCFiltre);

  if (TemperatureDissipateur > 200)
  //if (TemperatureDissipateur > 50)
  //if (TemperatureDissipateur > 120)
  
  {
  digitalWrite(GateQ1, LOW);                                          //Blocage Q4
  digitalWrite(GateQ2, LOW);                                          //Blocage Q5
  digitalWrite(GateQ3, LOW);                                          //Blocage Q6
  Erreur013();                                                        //Activation Fonction depassement de température dissipateur
  }

  if (RatioVCCFiltre <= (0.51 / 3.3 * 1023))  //Le terme 0.51 correspond à 4.7V ( 9.2 * 0.51) seuil de la tension à tester minimale
  {
  
  digitalWrite(GateQ1, LOW);                                          //Blocage Q4
  digitalWrite(GateQ2, LOW);                                          //Blocage Q5
  digitalWrite(GateQ3, LOW);                                          //Blocage Q6
  Erreur012();                                                        // Activation Fonction descente sous limite inférieure VCC
  }
 
  else if (RatioVCCFiltre <= SeuilIntermediaire0 - Hysteresis0)
  {
  digitalWrite(GateQ1, HIGH);                                         //Saturation Q4
  digitalWrite(GateQ2, LOW);                                          //Blocage Q5
  digitalWrite(GateQ3, LOW);                                          //Blocage Q6
  //                                ==> Bypassage complet des 3 doubles shunts
  
  Synoptique0();
  Strip.show();
  }
  else if (RatioVCCFiltre <= SeuilIntermediaire1 - Hysteresis1)
  {
  digitalWrite(GateQ1, LOW);                                          //Blocage Q4
  digitalWrite(GateQ2, HIGH);                                         //Saturation Q5
  digitalWrite(GateQ3, LOW);                                          //Blocage Q6
  //                                ==> Bypassage complet des 2 doubles shunts supérieurs
  
  Synoptique1();
  delay(20);
  Strip.show();
  }
  else if (RatioVCCFiltre <= SeuilIntermediaire2 - Hysteresis2)   // Le terme 2.17 correspond à 19.64V ( 9.2 * 2.17) seuil de la tension à tester Maximal admissible
  
  {
  digitalWrite(GateQ1, LOW);                                          //Blocage Q4
  digitalWrite(GateQ2, LOW);                                          //Blocage Q5
  digitalWrite(GateQ3, HIGH);                                        //Saturation Q6
  //                                ==> Bypassage complet du  double shunt supérieur
  
  Synoptique2();
  delay(20);
  Strip.show();
  }
  else if (RatioVCCFiltre <= SeuilIntermediaire3 - Hysteresis3)    // Le terme 2.4 correspond à 22.08V ( 9.2 * 2.4) seuil de la tension à tester Maximal admissible
  {
  digitalWrite(GateQ1, LOW);                                          //Blocage Q4
  digitalWrite(GateQ2, LOW);                                          //Blocage Q5
  digitalWrite(GateQ3, LOW);                                          //Blocage Q6
  Synoptique3();
  delay(20);
  Strip.show();
  }
  else if (RatioVCCFiltre <= SeuilIntermediaire4 - Hysteresis4)
  {
  delay(10);
  analogWrite(A0, 0);                                                 //Arrêt débit
  digitalWrite(GateQ1, LOW);                                          //Blocage Q4
  digitalWrite(GateQ2, LOW);                                          //Blocage Q5
  digitalWrite(GateQ3, LOW);                                          //Blocage Q6
  analogWrite(A0, 0);                                                 //Arrêt débit
  Erreur011();
  }

  int adjustedValue = (PotentiometerGros + PotentiometerFin);
  int displayValue = constrain(adjustedValue, 0, 1023);
  int displayValue1 = map(adjustedValue, 0, 1023, 0, 1000);
  int displayForTM1637 = constrain(displayValue1, 0, 1000);

  total = total - Lectures[readIndex];
  Lectures[readIndex] = displayValue1;
  total = total + Lectures[readIndex];
  readIndex = (readIndex + 1) % NombreEchantillons;

  int maxVal = Lectures[0];
  int minVal = Lectures[0];
  for (int i = 1; i < NombreEchantillons; i++)
  {
  maxVal = max(maxVal, Lectures[i]);
  minVal = min(minVal, Lectures[i]);
  }

  int averageValue = (total - maxVal - minVal) / (NombreEchantillons - 2);
  averageValue = constrain(averageValue, 0, 1023);

  if (abs(averageValue - LastPotentiometerGros) > 1)
  {
  float VCCFiltre = K4 * RatioVCCFiltre * K5*3.3/1023;
                                                
  float Io = K0 * VCCFiltre / 920.0;
                                                
  float I1 = K1 * (digitalRead(GateQ1) ? VCCFiltre / 9.40 : 0);       //9.4 (Kohms) correspond à R2+R3, but prendre en compte le coourant de pont de Q1
              // Nota : en fait j'ai fait une petite erreur sur R2 et R3 : j'ai installé 2 fois 4,7K au lieu de 47K
  float I2 = K2 * (digitalRead(GateQ2) ? VCCFiltre / 94.0 : 0);       //94 (Kohms) correspond à R6+R7, but prendre en compte le coourant de pont de Q2
  float I3 = K3 * (digitalRead(GateQ3) ? VCCFiltre / 94.0 : 0);       //94 (Kohms) correspond à R11+R12, but prendre en compte le coourant de pont de Q3
  
  float correctedDisplayValue = displayForTM1637 + Io + I1 + I2 + I3;   
  // En fait le courant débité par l'alim à tester doit inclure les courants de pont de Q1 à Q3 et celui du pont de ratio créé par R26 et R27
  
  display1.showNumberDec(correctedDisplayValue, false, 4, 0);
  
  /*Serial.print(""VCCFiltre: "");                            // UNIQUEMENT EN MISE AU POINT ET DEBOGAGE
  Serial.print(VCCFiltre);
  Serial.print(""\t Io: "");
  Serial.print(Io);
  Serial.print(""\t I1: "");
  Serial.print(I1);
  Serial.print(""\t I2: "");
  Serial.print(I2);
  Serial.print(""\t I3: "");
  Serial.print(I3);
  Serial.print(""\t Q1: "");
  Serial.print(digitalRead(GateQ1));
  Serial.print(""\t Q2: "");
  Serial.print(digitalRead(GateQ2));
  Serial.print(""\t Q3: "");
  Serial.print(digitalRead(GateQ3));
  Serial.print(""\t correctedDisplayValue: "");
  Serial.println(correctedDisplayValue);*/
  LastPotentiometerGros = averageValue;
  }
  
  analogWrite(A0, map((0.979*displayForTM1637), 0, 1000, 0, 1005));
  }

  void Synoptique0() 
  {
  Strip.clear();
  for (int i = 0; i <= 5; i++)
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  for (int i = 9; i <= 11; i++)
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  for (int i = 6; i <= 8; i++)
  {
  Strip.setPixelColor(i, 255, 0, 0);
  }
  Strip.show();
  }

  void Synoptique1()
  {
  Strip.clear();
  for (int i = 0; i <= 3; i++)
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  for (int i = 6; i <= 8; i++)
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  Strip.setPixelColor(11, 0, 0, 0);

  for (int i = 9; i <= 10; i++)
  {
  Strip.setPixelColor(i, 255, 0, 0);
  }
  for (int i = 4; i <= 5; i++)
  {
  Strip.setPixelColor(i, 255, 0, 0);
  }
  Strip.show();
  }

  void Synoptique2()
  {
  Strip.clear();
  for (int i = 0; i <= 2; i++)
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  for (int i = 6; i <= 8; i++)
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  Strip.setPixelColor(11, 255, 0, 0);

  for (int i = 9; i <= 10; i++)
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  for (int i = 2; i <= 5; i++)
  {
  Strip.setPixelColor(i, 255, 0, 0);
  }
  Strip.show();
  }

  void Synoptique3()
  {
  Strip.clear();
  for (int i = 0; i <= 5; i++)
  {
  Strip.setPixelColor(i, 255, 0, 0);
  }

  for (int i = 6; i <= 11; i++)
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  Strip.show();
  }

  void Erreur011() 
  {
  analogWrite(A0, 0);                                         //Arrêt débit
  display1.setSegments(ERR1, 4);                              //Affichage ""AL01"" sur le display 4 digits
  Strip.clear();
  analogWrite(A0, 0);                                         //Arrêt débit
  for (int i = 0; i <= 5; i++) 
  {
  Strip.setPixelColor(i, 255, 0, 0);
  }
  Strip.setPixelColor(11, 0, 0, 255 * step);
  
  for (int i = 6; i <= 10; i++) 
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  Strip.show();
  step = 1 - step; // Alterner entre les deux états
  delay (100);
  }

  void Erreur012() 
  {
  analogWrite(A0, 0);                                         //Arrêt débit
  display1.setSegments(ERR2, 4);                              //Affichage ""AL02"" sur le display 4 digits
  Strip.clear();
  analogWrite(A0, 0);                                         //Arrêt débit
  for (int i = 0; i <= 5; i++) 
  {
  Strip.setPixelColor(i, 255, 0, 0);
  }
  Strip.setPixelColor(11, 0, 0, 0); 
  for (int i = 6; i <= 8; i++) 
  {
  Strip.setPixelColor(i, 0, 0, 0);
  }
  for (int i = 9; i <= 10; i++) 
  {
  Strip.setPixelColor(i, 0, 0, 255 * step);
  }
  Strip.show();
  step = 1 - step; // Alterner entre les deux états
  delay(100);
  }

  void Erreur013() 
  {
  analogWrite(A0, 0);                                         //Arrêt débit
  display1.setSegments(ERR3, 4);                              //Affichage ""AL03"" sur le display 4 digits
  Strip.clear();
  analogWrite(A0, 0);
  for (int i = 0; i <= 5; i++) 
  {
  Strip.setPixelColor(i, 255, 0, 0);
  }
  for (int i = 9; i <= 11; i++) 
  {
  Strip.setPixelColor(i, 0, 0, 0); 
  }
  
  for (int i = 6; i <= 8; i++) 
  {
  Strip.setPixelColor(i, 0, 0, 255 * step);
  }
  Strip.show();
  step = 1 - step; // Alterner entre les deux états
  delay(100);
  }"
Awydd0FJ,Untitled,irmantas_radavicius,C++,Tuesday 20th of February 2024 08:55:40 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>

using namespace std;

int main(){

    cout << ""Iveskite duomenu failo varda: "";
    string vardas;
    cin >> vardas;

    fstream in(vardas, fstream::in);
    int kiek = 0;
    if(in.is_open()){
        string line;
        //in >> line;

        while(1){
            getline(in, line);
            //cout << in.good() << in.bad() << in.fail() << in.eof() << "" "";
            if(in.fail())
                break;
            kiek++;
            //cout << line << endl;
        }
        in.close();
        cout << ""Faile yra "" << kiek << "" eiluciu"" << endl;

    } else {
        cout << ""Nepavyko atidaryti failo."" << endl;
    }


    return 0;

}
"
sgBWw1HJ,snmpagent1,G0nz0uk,YAML,Tuesday 20th of February 2024 08:55:02 AM CDT,"integrations:
  prometheus_remote_write:
  - basic_auth:
      password: <your_prom_pass> #if no basic auth enabled remove the three lines for it and have   - url: <your_prom_url>
      username: <your_prom_user>
    url: <your_prom_url>
  snmp:
    config_file: ""/etc/switches.yml""
    enabled: true
    relabel_configs:
      - action: replace
        source_labels: [job]
        regex: (^.*snmp)\/(.*)
        target_label: job_snmp
        replacement: $1
      - action: replace
        source_labels: [job]
        regex: (^.*snmp)\/(.*)
        target_label: snmp_target
        replacement: $2
    snmp_targets:
      - name: network_switch_1
        address: 10.2.2.2
        module: if_mib
        auth: aruba_v2
      - name: network_router_2
        address: 10.2.2.3
        module: if_mib
        auth: aruba_v2
      - name: network_router_3
        address: 10.168.6.5
        module: if_mib
        auth: aruba_v2
      - name: network_router_4
        address: 10.168.5.5
        module: if_mib
        auth: cisco_v2
      - name: network_router_5
        address: 10.168.6.6
        module: if_mib
        auth: extreme_v2
  global:
    scrape_interval: 60s
  wal_directory: /tmp/grafana-agent-wal
"
B5WZm86t,bruteforce,drakkillen,JavaScript,Tuesday 20th of February 2024 08:46:54 AM CDT,"/** @param {NS} ns 
 * Blindly try to open all ports and crack the specified target, regardless of owned tools. */
export async function main(ns) {
   async function spider() {
    // Return an array of all identifiable servers
    
    // Create a serversSeen array, containing only 'home' for now
    var serversSeen = ['home'];

    // For every server we've seen so far, do a scan
    for (let i = 0; i < serversSeen.length; i++) {
        var thisScan = ns.scan(serversSeen[i]);
        // Loop through results of the scan, and add any new servers
        for (let j = 0; j < thisScan.length; j++) {
            // If this server isn't in serversSeen, add it
            if (serversSeen.indexOf(thisScan[j]) === -1) {
                serversSeen.push(thisScan[j]);
            }
        }
    }
    return serversSeen;
}
    var targets = await spider()
    for(let target of targets){
    try { ns.brutessh(target); } catch { }
    try { ns.ftpcrack(target); } catch { }
    try { ns.relaysmtp(target); } catch { }
    try { ns.httpworm(target); } catch { }
    try { ns.sqlinject(target); } catch { }
    try { ns.nuke(target); } catch { }
    }
}"
ifgyiXcR,News Feb20 24,Newscaster_Ned,Email,Tuesday 20th of February 2024 08:46:13 AM CDT,".‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎1‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎2‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎3‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎ ‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎c‎‎‎o‎‎‎m‎‎‎p‎‎‎l‎‎‎e‎‎‎t‎‎‎e‎‎‎.‎‎‎

H‎e‎r‎e‎'‎s‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎,‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎a‎n‎d‎ ‎O‎N‎L‎Y‎ ‎t‎o‎ ‎l‎e‎g‎a‎l‎i‎z‎e‎ ‎r‎a‎p‎e‎,‎ ‎b‎e‎o‎t‎c‎h‎.‎ ‎

M‎a‎n‎ ‎W‎h‎o‎ ‎F‎a‎t‎a‎l‎l‎y‎ ‎S‎h‎o‎t‎ ‎M‎i‎n‎n‎e‎s‎o‎t‎a‎ ‎O‎f‎f‎i‎c‎e‎r‎s‎ ‎I‎D‎'‎d‎ ‎a‎s‎ ‎S‎h‎a‎n‎n‎o‎n‎ ‎C‎o‎r‎t‎e‎z‎ ‎G‎o‎o‎d‎e‎n‎
J‎o‎n‎ ‎S‎t‎e‎w‎a‎r‎t‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎T‎u‎c‎k‎e‎r‎ ‎C‎a‎r‎l‎s‎o‎n‎ ‎A‎f‎t‎e‎r‎ ‎F‎a‎c‎i‎n‎g‎ ‎W‎o‎k‎e‎ ‎B‎a‎c‎k‎l‎a‎s‎h‎
F‎r‎a‎n‎k‎l‎i‎n‎,‎ ‎T‎h‎e‎ ‎F‎i‎r‎s‎t‎ ‎B‎l‎a‎c‎k‎ ‎'‎P‎e‎a‎n‎u‎t‎s‎'‎ ‎C‎h‎a‎r‎a‎c‎t‎e‎r‎,‎ ‎G‎e‎t‎s‎ ‎A‎p‎p‎l‎e‎ ‎T‎V‎ ‎O‎r‎i‎g‎i‎n‎ ‎S‎t‎o‎r‎y‎
I‎s‎r‎a‎e‎l‎ ‎R‎e‎j‎e‎c‎t‎s‎ ‎C‎l‎a‎i‎m‎s‎ ‎o‎f‎ ‎S‎e‎x‎u‎a‎l‎ ‎A‎b‎u‎s‎e‎ ‎b‎y‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎c‎ ‎U‎N‎ ‎'‎E‎x‎p‎e‎r‎t‎'‎
L‎o‎n‎d‎o‎n‎ ‎P‎o‎l‎i‎c‎e‎ ‎N‎o‎w‎ ‎B‎e‎l‎i‎e‎v‎e‎s‎ ‎i‎t‎ ‎M‎a‎y‎ ‎H‎a‎v‎e‎ ‎L‎o‎c‎a‎t‎e‎d‎ ‎C‎h‎e‎m‎i‎c‎a‎l‎ ‎A‎t‎t‎a‎c‎k‎ ‎M‎i‎g‎r‎a‎n‎t‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
N‎Y‎C‎:‎ ‎A‎d‎a‎m‎s‎ ‎N‎i‎x‎e‎s‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎G‎i‎v‎e‎ ‎L‎u‎x‎u‎r‎y‎ ‎H‎a‎r‎l‎e‎m‎ ‎C‎o‎n‎d‎o‎s‎ ‎t‎o‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎P‎u‎b‎l‎i‎c‎ ‎O‎u‎t‎c‎r‎y‎
E‎r‎i‎c‎ ‎A‎d‎a‎m‎s‎
N‎Y‎C‎ ‎M‎a‎y‎o‎r‎ ‎E‎r‎i‎c‎ ‎A‎d‎a‎m‎s‎ ‎r‎e‎v‎e‎r‎s‎e‎d‎ ‎a‎ ‎p‎l‎a‎n‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎a‎n‎ ‎a‎b‎a‎n‎d‎o‎n‎e‎d‎ ‎l‎u‎x‎u‎r‎y‎ ‎H‎a‎r‎l‎e‎m‎ ‎c‎o‎n‎d‎o‎m‎i‎n‎i‎u‎m‎ ‎c‎o‎m‎p‎l‎e‎x‎ ‎t‎o‎ ‎m‎i‎g‎r‎a‎n‎t‎s‎ ‎a‎f‎t‎e‎r‎ ‎s‎i‎g‎n‎i‎f‎i‎c‎a‎n‎t‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎o‎u‎t‎c‎r‎y‎.‎ ‎

M‎a‎r‎l‎o‎w‎:‎ ‎‘‎T‎h‎e‎ ‎B‎i‎d‎e‎n‎s‎ ‎W‎e‎r‎e‎ ‎C‎l‎e‎a‎r‎l‎y‎ ‎G‎i‎v‎e‎n‎ ‎M‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎D‎o‎l‎l‎a‎r‎s‎ ‎f‎r‎o‎m‎ ‎E‎n‎t‎i‎t‎i‎e‎s‎ ‎A‎l‎l‎ ‎O‎v‎e‎r‎ ‎t‎h‎e‎ ‎W‎o‎r‎l‎d‎&‎#‎
M‎a‎r‎l‎o‎w‎:‎ ‎B‎i‎d‎e‎n‎s‎ ‎W‎e‎r‎e‎ ‎G‎i‎v‎e‎n‎ ‎M‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎D‎o‎l‎l‎a‎r‎s‎ ‎f‎r‎o‎m‎ ‎I‎n‎t‎e‎r‎n‎a‎t‎i‎o‎n‎a‎l‎ ‎E‎n‎t‎i‎t‎i‎e‎s‎
3‎1‎3‎
N‎Y‎C‎ ‎M‎a‎y‎o‎r‎ ‎E‎r‎i‎c‎ ‎A‎d‎a‎m‎s‎ ‎R‎e‎v‎e‎r‎s‎e‎s‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎G‎i‎v‎e‎ ‎L‎u‎x‎u‎r‎y‎ ‎H‎a‎r‎l‎e‎m‎ ‎C‎o‎n‎d‎o‎s‎ ‎t‎o‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎P‎u‎b‎l‎i‎c‎ ‎O‎u‎t‎c‎r‎y‎
E‎r‎i‎c‎ ‎A‎d‎a‎m‎s‎ ‎R‎e‎v‎e‎r‎s‎e‎s‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎G‎i‎v‎e‎ ‎L‎u‎x‎u‎r‎y‎ ‎H‎a‎r‎l‎e‎m‎ ‎C‎o‎n‎d‎o‎s‎ ‎t‎o‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎
1‎,‎1‎8‎7‎
B‎o‎s‎t‎o‎n‎ ‎F‎a‎m‎i‎l‎i‎e‎s‎ ‎F‎u‎r‎i‎o‎u‎s‎ ‎a‎s‎ ‎C‎i‎t‎y‎ ‎K‎i‎c‎k‎s‎ ‎B‎l‎a‎c‎k‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎ ‎O‎u‎t‎ ‎o‎f‎ ‎C‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎C‎e‎n‎t‎e‎r‎ ‎t‎o‎ ‎H‎o‎u‎s‎e‎ ‎B‎i‎d‎e‎n‎’‎s‎
F‎a‎m‎i‎l‎i‎e‎s‎ ‎F‎u‎r‎i‎o‎u‎s‎ ‎a‎s‎ ‎B‎o‎s‎t‎o‎n‎ ‎K‎i‎c‎k‎s‎ ‎B‎l‎a‎c‎k‎ ‎K‎i‎d‎s‎ ‎O‎u‎t‎ ‎o‎f‎ ‎R‎e‎c‎ ‎C‎e‎n‎t‎e‎r‎
1‎,‎4‎5‎5‎
H‎a‎r‎v‎a‎r‎d‎ ‎F‎a‎c‎u‎l‎t‎y‎ ‎G‎r‎o‎u‎p‎ ‎P‎o‎s‎t‎s‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎c‎ ‎I‎m‎a‎g‎e‎;‎ ‎D‎e‎l‎e‎t‎e‎s‎,‎ ‎A‎p‎o‎l‎o‎g‎i‎z‎e‎s‎
H‎a‎r‎v‎a‎r‎d‎ ‎F‎a‎c‎u‎l‎t‎y‎ ‎G‎r‎o‎u‎p‎ ‎P‎o‎s‎t‎s‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎c‎ ‎I‎m‎a‎g‎e‎;‎ ‎D‎e‎l‎e‎t‎e‎s‎,‎ ‎A‎p‎o‎l‎o‎g‎i‎z‎e‎s‎
1‎9‎7‎
H‎i‎g‎h‎-‎P‎r‎o‎f‎i‎l‎e‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎D‎e‎f‎e‎c‎t‎o‎r‎ ‎W‎h‎o‎ ‎L‎a‎n‎d‎e‎d‎ ‎H‎e‎l‎i‎c‎o‎p‎t‎e‎r‎ ‎i‎n‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎t‎o‎ ‎E‎s‎c‎a‎p‎e‎ ‎t‎o‎ ‎W‎e‎s‎t‎ ‎S‎h‎o‎t‎ ‎D‎e‎a‎d‎
R‎u‎s‎s‎i‎a‎n‎ ‎D‎e‎f‎e‎c‎t‎o‎r‎ ‎W‎h‎o‎ ‎F‎l‎e‎w‎ ‎H‎e‎l‎i‎c‎o‎p‎t‎e‎ ‎t‎o‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎F‎o‎u‎n‎d‎ ‎S‎h‎o‎t‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎i‎n‎ ‎S‎p‎a‎i‎n‎
1‎7‎1‎
T‎r‎u‎m‎p‎ ‎D‎e‎b‎u‎t‎s‎ ‎O‎w‎n‎-‎B‎r‎a‎n‎d‎ ‎$‎3‎9‎9‎ ‎S‎h‎o‎e‎s‎ ‎a‎t‎ ‎‘‎S‎n‎e‎a‎k‎e‎r‎ ‎C‎o‎n‎’‎
T‎r‎u‎m‎p‎ ‎D‎e‎b‎u‎t‎s‎ ‎O‎w‎n‎-‎B‎r‎a‎n‎d‎ ‎$‎3‎9‎9‎ ‎S‎h‎o‎e‎s‎ ‎a‎t‎ ‎‘‎S‎n‎e‎a‎k‎e‎r‎ ‎C‎o‎n‎’‎
6‎,‎5‎1‎4‎
T‎r‎u‎m‎p‎ ‎M‎u‎s‎t‎ ‎P‎a‎y‎ ‎H‎a‎l‎f‎ ‎a‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎D‎o‎l‎l‎a‎r‎s‎ ‎B‎e‎f‎o‎r‎e‎ ‎H‎e‎ ‎C‎a‎n‎ ‎A‎p‎p‎e‎a‎l‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎D‎e‎c‎i‎s‎i‎o‎n‎
T‎r‎u‎m‎p‎ ‎M‎u‎s‎t‎ ‎P‎a‎y‎ ‎H‎a‎l‎f‎ ‎a‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎D‎o‎l‎l‎a‎r‎s‎ ‎B‎e‎f‎o‎r‎e‎ ‎H‎e‎ ‎C‎a‎n‎ ‎A‎p‎p‎e‎a‎l‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎R‎u‎l‎i‎n‎g‎
1‎6‎,‎2‎1‎8‎
‘‎F‎*‎*‎*‎ ‎A‎r‎o‎u‎n‎d‎ ‎a‎n‎d‎ ‎F‎i‎n‎d‎ ‎O‎u‎t‎’‎:‎ ‎P‎r‎o‎-‎T‎r‎u‎m‎p‎ ‎T‎r‎u‎c‎k‎e‎r‎s‎ ‎B‎o‎y‎c‎o‎t‎t‎ ‎N‎Y‎C‎ ‎A‎f‎t‎e‎r‎ ‎C‎i‎v‎i‎l‎ ‎F‎r‎a‎u‎d‎ ‎V‎e‎r‎d‎i‎c‎t‎
P‎r‎o‎-‎T‎r‎u‎m‎p‎ ‎T‎r‎u‎c‎k‎e‎r‎s‎ ‎B‎o‎y‎c‎o‎t‎t‎ ‎N‎Y‎C‎ ‎A‎f‎t‎e‎r‎ ‎C‎i‎v‎i‎l‎ ‎F‎r‎a‎u‎d‎ ‎V‎e‎r‎d‎i‎c‎t‎
1‎1‎,‎6‎5‎3‎
R‎e‎p‎o‎r‎t‎:‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎P‎u‎m‎p‎i‎n‎g‎ ‎B‎r‎a‎k‎e‎s‎ ‎o‎n‎ ‎E‎l‎e‎c‎t‎r‎i‎c‎ ‎V‎e‎h‎i‎c‎l‎e‎ ‎M‎a‎n‎d‎a‎t‎e‎s‎ ‎B‎e‎f‎o‎r‎e‎ ‎2‎0‎2‎4‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎
R‎e‎p‎o‎r‎t‎:‎ ‎B‎i‎d‎e‎n‎ ‎P‎u‎m‎p‎i‎n‎g‎ ‎B‎r‎a‎k‎e‎s‎ ‎o‎n‎ ‎E‎V‎ ‎M‎a‎n‎d‎a‎t‎e‎s‎ ‎B‎e‎f‎o‎r‎e‎ ‎2‎0‎2‎4‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎
8‎1‎5‎
J‎o‎y‎ ‎R‎e‎i‎d‎:‎ ‎B‎l‎a‎c‎k‎ ‎P‎e‎o‎p‎l‎e‎ ‎‘‎L‎i‎t‎e‎r‎a‎l‎l‎y‎,‎ ‎P‎h‎y‎s‎i‎c‎a‎l‎l‎y‎,‎ ‎B‎u‎i‎l‎t‎ ‎t‎h‎i‎s‎ ‎C‎o‎u‎n‎t‎r‎y‎,‎’‎ ‎O‎b‎a‎m‎a‎ ‎O‎u‎r‎ ‎O‎n‎l‎y‎ ‎R‎e‎p‎a‎r‎a‎t‎i‎
J‎o‎y‎ ‎R‎e‎i‎d‎:‎ ‎B‎l‎a‎c‎k‎ ‎P‎e‎o‎p‎l‎e‎ ‎‘‎L‎i‎t‎e‎r‎a‎l‎l‎y‎,‎ ‎P‎h‎y‎s‎i‎c‎a‎l‎l‎y‎,‎ ‎B‎u‎i‎l‎t‎ ‎t‎h‎i‎s‎ ‎C‎o‎u‎n‎t‎r‎y‎'‎

H‎o‎u‎s‎t‎o‎n‎:‎ ‎S‎p‎i‎c‎ ‎L‎a‎t‎i‎n‎X‎ ‎C‎h‎i‎l‎d‎ ‎M‎o‎l‎e‎s‎t‎e‎r‎ ‎G‎u‎n‎s‎ ‎D‎o‎w‎n‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎a‎t‎ ‎S‎t‎o‎p‎l‎i‎g‎h‎t‎.‎

W‎e‎l‎l‎,‎ ‎t‎h‎e‎ ‎c‎o‎p‎s‎ ‎w‎i‎l‎l‎ ‎g‎i‎v‎e‎ ‎a‎n‎ ‎a‎n‎s‎w‎e‎r‎ ‎o‎n‎ ‎w‎h‎y‎ ‎t‎h‎i‎s‎ ‎h‎a‎p‎p‎e‎n‎e‎d‎ ‎a‎t‎ ‎s‎o‎m‎e‎ ‎p‎o‎i‎n‎t‎.‎


S‎i‎m‎i‎a‎n‎ ‎M‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎P‎i‎z‎z‎a‎ ‎H‎u‎t‎ ‎M‎a‎n‎a‎g‎e‎r‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎ ‎M‎i‎l‎w‎a‎u‎k‎e‎e‎.‎


A‎r‎i‎z‎o‎n‎a‎:‎ ‎C‎o‎o‎n‎ ‎H‎i‎j‎a‎c‎k‎s‎ ‎T‎r‎u‎c‎k‎l‎o‎a‎d‎ ‎o‎f‎ ‎C‎o‎r‎v‎e‎t‎t‎e‎s‎.‎


B‎o‎n‎d‎ ‎S‎e‎t‎ ‎f‎o‎r‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎E‎a‎s‎t‎ ‎P‎r‎i‎c‎e‎ ‎H‎i‎l‎l‎ ‎M‎u‎r‎d‎e‎r‎e‎r‎.‎


P‎R‎P‎ ‎N‎e‎g‎r‎o‎u‎d‎ ‎B‎a‎s‎k‎e‎t‎b‎a‎l‎l‎ ‎""‎A‎m‎e‎r‎i‎c‎a‎n‎""‎ ‎S‎e‎t‎ ‎t‎o‎ ‎A‎p‎p‎e‎a‎r‎ ‎i‎n‎ ‎C‎o‎u‎r‎t‎ ‎f‎o‎r‎ ‎M‎u‎r‎d‎e‎r‎ ‎o‎f‎ ‎H‎u‎m‎a‎n‎.‎


N‎e‎g‎r‎o‎i‎d‎ ‎M‎o‎n‎k‎e‎y‎m‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎A‎s‎s‎a‎u‎l‎t‎i‎n‎g‎ ‎W‎o‎m‎a‎n‎ ‎a‎t‎ ‎G‎y‎m‎ ‎i‎n‎ ‎F‎i‎s‎h‎t‎o‎w‎n‎​‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎A‎h‎e‎m‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎8‎°‎
/‎5‎8‎°‎
3‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎0‎ ‎|‎ ‎D‎a‎y‎
7‎8‎°‎
3‎%‎
S‎
1‎2‎
 ‎
m‎p‎h‎
A‎r‎e‎a‎s‎ ‎o‎f‎ ‎p‎a‎t‎c‎h‎y‎ ‎f‎o‎g‎ ‎e‎a‎r‎l‎y‎.‎ ‎M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎7‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎5‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎2‎2‎ ‎p‎m‎
T‎u‎e‎ ‎2‎0‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎8‎°‎
1‎4‎%‎
S‎
1‎1‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎t‎o‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎A‎r‎e‎a‎s‎ ‎o‎f‎ ‎p‎a‎t‎c‎h‎y‎ ‎f‎o‎g‎.‎ ‎L‎o‎w‎ ‎5‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
2‎:‎5‎8‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
4‎:‎5‎3‎ ‎a‎m‎
W‎e‎d‎ ‎2‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎7‎°‎
/‎6‎1‎°‎
1‎3‎%‎
S‎ ‎1‎7‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎5‎3‎°‎
1‎0‎%‎
W‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎3‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎2‎°‎
/‎4‎5‎°‎
1‎%‎
N‎N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎4‎9‎°‎
2‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎7‎°‎
/‎5‎9‎°‎
7‎%‎
S‎ ‎1‎6‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎4‎°‎
8‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎7‎
C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎1‎°‎
6‎%‎
S‎S‎W‎ ‎1‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎4‎9‎°‎
2‎%‎
N‎N‎W‎ ‎1‎7‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎1‎°‎
/‎4‎7‎°‎
5‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎1‎°‎
/‎4‎9‎°‎
2‎3‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎5‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎5‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎4‎°‎
/‎5‎2‎°‎
5‎0‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎5‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎0‎°‎
/‎5‎1‎°‎
4‎7‎%‎
S‎S‎W‎ ‎1‎3‎ ‎m‎p‎h‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎C‎h‎i‎n‎k‎s‎.‎ ‎😑

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎o‎u‎h‎o‎u‎
T‎o‎u‎h‎o‎u‎ ‎(‎東‎方‎)‎,‎ ‎o‎r‎ ‎t‎h‎e‎ ‎T‎o‎u‎h‎o‎u‎ ‎P‎r‎o‎j‎e‎c‎t‎,‎ ‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎a‎ ‎s‎e‎r‎i‎e‎s‎ ‎o‎f‎ ‎o‎v‎e‎r‎h‎e‎a‎d‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎ ‎g‎a‎m‎e‎s‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎a‎n‎d‎ ‎d‎e‎v‎e‎l‎o‎p‎e‎d‎ ‎b‎y‎ ‎a‎n‎ ‎a‎l‎c‎o‎h‎o‎l‎i‎c‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎p‎e‎d‎o‎p‎h‎i‎l‎e‎ ‎n‎a‎m‎e‎d‎ ‎Z‎u‎n‎.‎ ‎F‎i‎r‎s‎t‎ ‎d‎e‎v‎e‎l‎o‎p‎e‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎N‎E‎C‎ ‎P‎C‎-‎9‎8‎0‎1‎ ‎l‎i‎n‎e‎ ‎o‎f‎ ‎c‎o‎m‎p‎u‎t‎e‎r‎s‎,‎ ‎t‎h‎e‎ ‎g‎a‎m‎e‎s‎ ‎a‎r‎e‎ ‎n‎o‎w‎ ‎d‎e‎v‎e‎l‎o‎p‎e‎d‎ ‎f‎o‎r‎ ‎W‎i‎n‎d‎o‎w‎s‎ ‎t‎o‎ ‎b‎e‎t‎t‎e‎r‎ ‎e‎n‎a‎b‎l‎e‎ ‎t‎o‎t‎a‎l‎ ‎w‎o‎r‎l‎d‎ ‎d‎o‎m‎i‎n‎a‎t‎i‎o‎n‎.‎ ‎T‎h‎e‎ ‎T‎o‎u‎h‎o‎u‎ ‎s‎e‎r‎i‎e‎s‎ ‎i‎s‎ ‎a‎ ‎p‎i‎o‎n‎e‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎a‎n‎m‎a‎k‎u‎ ‎s‎h‎o‎o‎t‎e‎r‎ ‎g‎e‎n‎r‎e‎ ‎o‎f‎ ‎v‎i‎d‎e‎o‎ ‎g‎a‎m‎e‎s‎,‎ ‎f‎e‎a‎t‎u‎r‎i‎n‎g‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎e‎l‎e‎m‎e‎n‎t‎s‎ ‎e‎s‎s‎e‎n‎t‎i‎a‎l‎ ‎t‎o‎ ‎a‎n‎y‎ ‎g‎o‎o‎d‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎v‎i‎d‎e‎o‎ ‎g‎a‎m‎e‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎r‎a‎p‎i‎d‎l‎y‎ ‎f‎l‎a‎s‎h‎i‎n‎g‎ ‎l‎i‎g‎h‎t‎s‎,‎ ‎M‎I‎D‎I‎ ‎m‎u‎s‎i‎c‎ ‎a‎n‎d‎ ‎l‎i‎t‎t‎l‎e‎ ‎g‎i‎r‎l‎s‎.‎ ‎T‎h‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎i‎n‎ ‎T‎o‎u‎h‎o‎u‎ ‎a‎r‎e‎ ‎v‎e‎r‎y‎ ‎s‎t‎a‎t‎i‎c‎ ‎a‎n‎d‎ ‎b‎o‎r‎i‎n‎g‎,‎ ‎y‎e‎t‎ ‎d‎e‎s‎p‎i‎t‎e‎ ‎t‎h‎i‎s‎,‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎a‎l‎l‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎,‎ ‎e‎s‎s‎e‎n‎t‎i‎a‎l‎l‎y‎ ‎m‎a‎k‎i‎n‎g‎ ‎T‎o‎u‎h‎o‎u‎ ‎t‎h‎e‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎e‎q‎u‎i‎v‎a‎l‎e‎n‎t‎ ‎o‎f‎ ‎T‎e‎a‎m‎ ‎F‎o‎r‎t‎r‎e‎s‎s‎ ‎2‎.‎ ‎S‎i‎n‎c‎e‎ ‎i‎t‎s‎ ‎c‎o‎n‎c‎e‎p‎t‎i‎o‎n‎,‎ ‎T‎o‎u‎h‎o‎u‎ ‎h‎a‎s‎ ‎d‎o‎n‎e‎ ‎i‎t‎s‎ ‎c‎a‎p‎i‎t‎a‎l‎i‎s‎t‎ ‎n‎a‎t‎i‎o‎n‎ ‎p‎r‎o‎u‎d‎ ‎b‎y‎ ‎r‎a‎p‎i‎d‎l‎y‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎s‎u‎c‎c‎e‎s‎s‎f‎u‎l‎ ‎f‎r‎a‎n‎c‎h‎i‎s‎e‎ ‎i‎n‎ ‎A‎s‎i‎a‎n‎ ‎g‎e‎e‎k‎d‎o‎m‎ ‎s‎i‎n‎c‎e‎ ‎t‎h‎e‎ ‎u‎s‎e‎d‎ ‎t‎a‎m‎p‎o‎n‎ ‎i‎n‎d‎u‎s‎t‎r‎y‎.‎

U‎n‎l‎i‎k‎e‎ ‎m‎o‎s‎t‎ ‎J‎a‎p‎a‎n‎e‎s‎e‎ ‎g‎a‎m‎e‎s‎ ‎m‎a‎d‎e‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎P‎C‎,‎ ‎T‎o‎u‎h‎o‎u‎ ‎d‎i‎s‎a‎p‎p‎o‎i‎n‎t‎i‎n‎g‎l‎y‎ ‎d‎o‎e‎s‎ ‎n‎o‎t‎ ‎r‎e‎v‎o‎l‎v‎e‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎e‎n‎t‎a‎c‎l‎e‎ ‎r‎a‎p‎e‎,‎ ‎o‎r‎d‎i‎n‎a‎r‎y‎ ‎r‎a‎p‎e‎,‎ ‎o‎r‎ ‎e‎v‎e‎n‎ ‎d‎y‎k‎e‎ ‎r‎a‎p‎e‎ ‎(‎d‎o‎n‎'‎t‎ ‎w‎o‎r‎r‎y‎,‎ ‎t‎h‎e‎r‎e‎'‎s‎ ‎p‎l‎e‎n‎t‎y‎ ‎o‎f‎ ‎f‎a‎n‎-‎m‎a‎d‎e‎ ‎h‎e‎n‎t‎a‎i‎ ‎d‎o‎u‎j‎i‎n‎s‎ ‎t‎h‎a‎t‎ ‎h‎a‎v‎e‎ ‎s‎u‎c‎h‎ ‎c‎o‎n‎t‎e‎n‎t‎)‎.‎ ‎I‎n‎s‎t‎e‎a‎d‎,‎ ‎t‎h‎e‎ ‎T‎o‎u‎h‎o‎u‎ ‎g‎a‎m‎e‎s‎ ‎a‎r‎e‎ ‎p‎o‎p‎u‎l‎a‎t‎e‎d‎ ‎b‎y‎ ‎a‎n‎ ‎u‎n‎n‎a‎t‎u‎r‎a‎l‎l‎y‎ ‎w‎i‎d‎e‎ ‎s‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎u‎n‎d‎e‎r‎a‎g‎e‎ ‎g‎i‎r‎l‎s‎ ‎f‎l‎y‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎v‎a‎s‎t‎ ‎a‎n‎d‎ ‎b‎r‎e‎a‎t‎h‎t‎a‎k‎i‎n‎g‎ ‎l‎a‎n‎d‎s‎c‎a‎p‎e‎s‎,‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎l‎i‎v‎i‎n‎g‎ ‎f‎u‎c‎k‎ ‎o‎u‎t‎ ‎o‎f‎ ‎e‎a‎c‎h‎ ‎o‎t‎h‎e‎r‎ ‎w‎i‎t‎h‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎u‎p‎o‎n‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎c‎o‎l‎o‎u‎r‎f‎u‎l‎ ‎b‎u‎l‎l‎e‎t‎s‎,‎ ‎r‎e‎f‎e‎r‎r‎e‎d‎ ‎t‎o‎ ‎c‎o‎l‎l‎e‎c‎t‎i‎v‎e‎l‎y‎ ‎a‎s‎ ‎""‎d‎a‎n‎m‎a‎k‎u‎""‎.‎

(‎(‎ ‎C‎I‎R‎N‎O‎ ‎I‎S‎ ‎T‎H‎E‎ ‎S‎T‎R‎O‎N‎G‎E‎S‎T‎ ‎F‎A‎I‎R‎Y‎ ‎I‎N‎ ‎G‎E‎N‎S‎O‎K‎Y‎O‎!‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

I‎n‎c‎e‎n‎s‎e‎ ‎i‎s‎ ‎a‎n‎ ‎a‎r‎o‎m‎a‎t‎i‎c‎ ‎b‎i‎o‎t‎i‎c‎ ‎m‎a‎t‎e‎r‎i‎a‎l‎ ‎t‎h‎a‎t‎ ‎r‎e‎l‎e‎a‎s‎e‎s‎ ‎f‎r‎a‎g‎r‎a‎n‎t‎ ‎s‎m‎o‎k‎e‎ ‎w‎h‎e‎n‎ ‎b‎u‎r‎n‎t‎.‎ ‎T‎h‎e‎ ‎t‎e‎r‎m‎ ‎i‎s‎ ‎u‎s‎e‎d‎ ‎f‎o‎r‎ ‎e‎i‎t‎h‎e‎r‎ ‎t‎h‎e‎ ‎m‎a‎t‎e‎r‎i‎a‎l‎ ‎o‎r‎ ‎t‎h‎e‎ ‎a‎r‎o‎m‎a‎.‎ ‎I‎n‎c‎e‎n‎s‎e‎ ‎i‎s‎ ‎u‎s‎e‎d‎ ‎f‎o‎r‎ ‎a‎e‎s‎t‎h‎e‎t‎i‎c‎ ‎r‎e‎a‎s‎o‎n‎s‎,‎ ‎r‎e‎l‎i‎g‎i‎o‎u‎s‎ ‎w‎o‎r‎s‎h‎i‎p‎,‎ ‎a‎r‎o‎m‎a‎t‎h‎e‎r‎a‎p‎y‎,‎ ‎m‎e‎d‎i‎t‎a‎t‎i‎o‎n‎,‎ ‎a‎n‎d‎ ‎c‎e‎r‎e‎m‎o‎n‎y‎.‎ ‎I‎t‎ ‎m‎a‎y‎ ‎a‎l‎s‎o‎ ‎b‎e‎ ‎u‎s‎e‎d‎ ‎a‎s‎ ‎a‎ ‎s‎i‎m‎p‎l‎e‎ ‎d‎e‎o‎d‎o‎r‎a‎n‎t‎ ‎o‎r‎ ‎i‎n‎s‎e‎c‎t‎ ‎r‎e‎p‎e‎l‎l‎e‎n‎t‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎o‎f‎ ‎a‎ ‎w‎o‎r‎k‎e‎r‎ ‎m‎a‎n‎u‎f‎a‎c‎t‎u‎r‎i‎n‎g‎ ‎i‎n‎c‎e‎n‎s‎e‎ ‎s‎t‎i‎c‎k‎s‎ ‎w‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎v‎i‎l‎l‎a‎g‎e‎ ‎o‎f‎ ‎Q‎u‎ả‎n‎g‎ ‎P‎h‎ú‎ ‎C‎ầ‎u‎,‎ ‎o‎n‎ ‎t‎h‎e‎ ‎o‎u‎t‎s‎k‎i‎r‎t‎s‎ ‎o‎f‎ ‎H‎a‎n‎o‎i‎,‎ ‎b‎y‎ ‎t‎h‎e‎ ‎V‎i‎e‎t‎n‎a‎m‎e‎s‎e‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎ ‎T‎r‎ầ‎n‎ ‎T‎u‎ấ‎n‎ ‎V‎i‎ệ‎t‎.‎ ‎T‎h‎e‎ ‎s‎t‎i‎c‎k‎s‎ ‎a‎r‎e‎ ‎s‎e‎t‎ ‎o‎u‎t‎ ‎t‎o‎ ‎d‎r‎y‎ ‎i‎n‎ ‎b‎u‎n‎d‎l‎e‎s‎ ‎a‎f‎t‎e‎r‎ ‎b‎e‎i‎n‎g‎ ‎d‎i‎p‎p‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎i‎n‎c‎e‎n‎s‎e‎ ‎s‎o‎l‎u‎t‎i‎o‎n‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎T‎r‎ầ‎n‎ ‎T‎u‎ấ‎n‎ ‎V‎i‎ệ‎t‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎l‎r‎i‎g‎h‎t‎,‎ ‎I‎ ‎w‎a‎n‎n‎a‎ ‎b‎e‎ ‎c‎l‎e‎a‎r‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎m‎o‎n‎k‎e‎y‎ ‎n‎o‎i‎s‎e‎s‎ ‎I‎ ‎m‎a‎k‎e‎.‎ ‎I‎ ‎m‎a‎k‎e‎ ‎m‎o‎n‎k‎e‎y‎ ‎n‎o‎i‎s‎e‎s‎ ‎a‎t‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎g‎r‎o‎u‎p‎s‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎A‎n‎d‎ ‎n‎o‎t‎ ‎j‎u‎s‎t‎ ‎n‎i‎g‎g‎e‎r‎s‎.‎ ‎K‎i‎k‎e‎s‎,‎ ‎f‎a‎g‎g‎o‎t‎s‎,‎ ‎s‎p‎i‎c‎s‎,‎ ‎a‎n‎d‎ ‎b‎a‎s‎i‎c‎a‎l‎l‎y‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎e‎l‎s‎e‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎I‎ ‎m‎a‎k‎e‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎a‎n‎i‎m‎a‎l‎ ‎s‎o‎u‎n‎d‎s‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎t‎i‎m‎e‎s‎.‎ ‎E‎l‎e‎p‎h‎a‎n‎t‎ ‎s‎o‎u‎n‎d‎s‎,‎ ‎T‎i‎g‎e‎r‎ ‎s‎o‎u‎n‎d‎s‎,‎ ‎a‎n‎d‎ ‎w‎h‎e‎n‎ ‎n‎e‎g‎r‎o‎e‎s‎ ‎h‎a‎p‎p‎e‎n‎ ‎t‎o‎ ‎w‎a‎l‎k‎ ‎b‎y‎,‎ ‎y‎e‎s‎ ‎s‎o‎m‎e‎t‎i‎m‎e‎s‎ ‎I‎ ‎a‎m‎ ‎m‎a‎k‎i‎n‎g‎ ‎m‎o‎n‎k‎e‎y‎ ‎n‎o‎i‎s‎e‎s‎.‎ ‎B‎u‎t‎ ‎d‎o‎e‎s‎ ‎t‎h‎a‎t‎ ‎m‎a‎k‎e‎ ‎M‎E‎ ‎r‎a‎c‎i‎s‎t‎?‎ ‎N‎o‎.‎ ‎D‎e‎f‎i‎n‎e‎ ‎r‎a‎c‎i‎s‎t‎,‎ ‎y‎o‎u‎ ‎k‎i‎k‎e‎ ‎c‎u‎m‎ ‎g‎u‎z‎z‎l‎i‎n‎g‎ ‎m‎o‎n‎k‎e‎y‎ ‎f‎u‎c‎k‎e‎r‎s‎.‎ ‎W‎h‎a‎t‎ ‎i‎s‎ ‎r‎a‎c‎i‎s‎t‎?‎ ‎"
HJwr3pB5,Untitled,irmantas_radavicius,C++,Tuesday 20th of February 2024 08:41:02 AM CDT,"#include <iostream>
#include <fstream>
#include <sstream>

using namespace std;

int main(){

    cout << ""Ivesk: "";
    string line;
    // cin >> line; // vienas zodis
    getline(cin, line); // visa eilute

    int a;
    stringstream ss;
    //ss.str(""""); // nustato kad viduje tuscia eilute
    //ss.clear(); // isvalo klaidu pozymius
    //cout << ss.good() << ss.bad() << ss.fail() << ss.eof() << endl;
    ss << line;

    int kiek = 0;
    while(1){
        ss >> a;
        if(ss.fail())
            break;
        cout << ""Nuskaiciau "" << a << endl;
        kiek++;
    }


    //cout << line << endl;
    cout << kiek << endl;

    return 0;

}
"
M6fj33qH,snmp1234,G0nz0uk,YAML,Tuesday 20th of February 2024 08:16:14 AM CDT,"  - job_name: 'snmp_exporter-aruba'
    scrape_interval: 30s
    static_configs:
      - targets:
        - 10.2.2.2 # HP-Aruba
        - 10.2.2.3 # HP-Aruba
        - 10.168.6.5 # HP-Aruba
    metrics_path: /snmp
    params:
      auth: [aruba_v2]
      module: [if_mib]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 127.0.0.1:9116  # The SNMP exporter's real hostname:port."
Fc3nkU7L,RecetteRepository,TerenceFerut,Java,Tuesday 20th of February 2024 08:01:01 AM CDT,"package com.ynov.helloworld.helloworld.repository;

import com.ynov.helloworld.helloworld.HibernateUtil;
import com.ynov.helloworld.helloworld.model.Recette;
import org.hibernate.Session;
import org.hibernate.Transaction;
import java.util.List;


public class RecetteRepository {

    public Recette findById(Long id) {
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            return session.get(Recette.class, id);
        }
    }

    public List<Recette> findAll() {
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            return session.createQuery(""from Recette"", Recette.class).list();
        }
    }

    public void save(Recette recette) {
        Transaction transaction = null;
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            transaction = session.beginTransaction();
            session.save(recette);
            transaction.commit();
        } catch (RuntimeException e) {
            if (transaction != null) transaction.rollback();
            throw e;
        }
    }

    public void update(Recette recette) {
        Transaction transaction = null;
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            transaction = session.beginTransaction();
            session.update(recette); // ou session.merge(recette) si nécessaire
            transaction.commit();
        } catch (RuntimeException e) {
            if (transaction != null) transaction.rollback();
            throw e;
        }
    }


    public void delete(Recette recette) {
        Transaction transaction = null;
        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            transaction = session.beginTransaction();
            session.delete(recette);
            transaction.commit();
        } catch (RuntimeException e) {
            if (transaction != null) transaction.rollback();
            throw e;
        }
    }

}
"
mrw1BqAW,onTimeForTheExam,zarkoto223,JavaScript,Tuesday 20th of February 2024 07:49:26 AM CDT,"function asd(input) {
    let hour =Number (input[0]);
    let minutes = Number(input[1]);
    let ariivalHour = Number(input[2]);
    let arrivalMinute = Number(input[3]);

    let examTime=(hour*60)+minutes
    let ariivalTime=ariivalHour*60+arrivalMinute;

    let hours=0
    let minS=0

    if(ariivalTime>examTime){
        hours=((Math.floor((ariivalTime-examTime)/60))).toFixed()
        minS=(ariivalTime-examTime)-(hours*60)
        console.log('Late')
        if(hours>=1&&minS<10){
            console.log(`${hours}:0${minS} hours after the start`)
        }else if(hours>=1&&minS>=10){
            console.log(`${hours}:${minS} hours after the start`)
        }else if(hours<1){
            console.log(`${minS} minutes after the start`)
        }
    }else if(examTime>=ariivalTime&&examTime-ariivalTime<=30){
        hours=(Math.floor(((examTime-ariivalTime)/60))).toFixed()
        minS=(examTime-ariivalTime)
        console.log(""On time"")
        if(examTime-ariivalTime>0){
            console.log(`${examTime-ariivalTime} minutes before the start`)
        }
    }else{
        hours=(Math.floor((examTime-ariivalTime)/60)).toFixed()
        minS=(examTime-ariivalTime)-hours*60
        console.log('Early')
        if(hours>=1&&minS<10){
            console.log(`${hours}:0${minS} hours before the start`)
        }else if(hours>=1&&minS>=10){
            console.log(`${hours}:${minS} hours before the start`)
        }else{
            console.log(`${minS} minutes before the start`)
        }
    }


}"
q4XLEUEQ,FirebirdSQL Script Example,hamacker,PL/SQL,Tuesday 20th of February 2024 07:48:24 AM CDT,"/*
  Nome: clientes.sql
  Função: criar e atualizar os objetos dentro do banco de dados ""lazdemos_gsl.fdb"".
          Foco na criação e atualização da tabela ""CLIENTES"".
  Observação: Ao executar usando:
        >isql -ch iso8859_1 -i <script.sql>
        retorna uma mensagem dizendo:
        ""Rolling back work.""
        Apesar disso, todo funcionou direitinho.
  Data: 20/02/2024
  Autor: Hamacker <sirhamacker [em] gmail.com>
*/
/*
Function: create and update objects within the ""lazdemos_gsl.fdb"" database.
           Focus on creating and updating the ""CLIENTES"" table.
   Note: When running using:
         >isql -ch iso8859_1 -i <script.sql>
         returns a message saying:
         ""Rolling back work.""
         Despite this, everything worked fine. Maybe this message is a bug.
*/
set sql dialect 3;
set clientlib 'fbclient.dll';
connect 'C:\Projetos-fpc\lazdemos_gsl\db\LAZDEMOS_GSL.FDB';
set autoddl on;
set names iso8859_1;
set transaction
  read write
  isolation level read committed
  wait
  lock timeout 180;

CREATE or alter EXCEPTION ERR 'Erro generico, favor verificar COM ATENÇÃO';
GRANT USAGE ON EXCEPTION ERR TO PUBLIC;

SET TERM ^;
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(SELECT * from  RDB$RELATIONS WHERE RDB$RELATION_NAME='CLIENTES' )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
      CREATE TABLE CLIENTES (
        ID_CLIENTE BIGINT generated by default as identity not null,
        NOME_COMPLETO CHAR(120),
        STATUS CHAR(1) DEFAULT ''A'') ;
      ';
  END
END
^

COMMIT;^

-- Comentar a tabela
COMMENT ON TABLE CLIENTES IS 'Relação de clientes';^
COMMENT ON COLUMN CLIENTES.ID_CLIENTE IS 'Codigo do cliente';^
COMMENT ON COLUMN CLIENTES.NOME_COMPLETO IS 'Nome do cliente';^
COMMENT ON COLUMN CLIENTES.STATUS IS 'Situação do cliente(A=Ativo, C=Cancelado)';^

-- Permissão a tabela
grant select on clientes to PUBLIC; ^
grant select, delete, insert, update on clientes to SYSDBA; ^

COMMIT;^

-- Apagando chave prinmaria antiga
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='PK2_CLIENTES' )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
      ALTER TABLE CLIENTES DROP CONSTRAINT PK2_CLIENTES;
      ';
  END
END
^

COMMIT;^

-- Chave prinmaria
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='PK_CLIENTES' )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
      ALTER TABLE CLIENTES ADD CONSTRAINT PK_CLIENTES PRIMARY KEY (ID_CLIENTE);
      ';
  END
END
^

COMMIT;^

-- Constraint status apenas A ou C
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='CHK_CLIENTES_STATUS' )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
      ALTER TABLE CLIENTES
        DROP CONSTRAINT CHK_CLIENTES_STATUS
      ';
  END
END
^

COMMIT;^


-- Constraint status apenas A ou C
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='CHK_CLIENTES_STATUS'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
        ADD CONSTRAINT CHK_CLIENTES_STATUS
        CHECK (
        STATUS IN (''A'',''C'',''P'')
        );
      ';
  END
END
^

COMMIT;^

-- Adicionando campo CNPJ
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
        ADD CNPJ CHAR(14)
      ';
  END
END
^

COMMIT;^

-- CNPJ não pode ter nulos
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
       UPDATE CLIENTES SET CNPJ='''' WHERE CNPJ IS NULL;
      ';
  END
END
^

COMMIT;^

-- CNPJ não pode ter nulos not nulll
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
      ALTER TABLE CLIENTES ALTER CNPJ SET NOT NULL
      ';
  END
END
^

COMMIT;^

-- Adicionando campo LAST_UPDATE
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='LAST_UPDATE'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
        ADD LAST_UPDATE timestamp
        DEFAULT current_timestamp;
      ';
  END
END
^

COMMIT;^

-- Adicionando campo LAST_UPDATE
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='LAST_OWNER'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
          ADD LAST_OWNER varchar(60)
          DEFAULT current_user;
      ';
  END
END
^

COMMIT;^

-- Criando campo STATUS_COM (compute by) - FANTASIA
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='STATUS_COM'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
          ADD STATUS_COM COMPUTED BY ((CAST(''*'' AS VARCHAR(15))))
      ';
  END
END
^

COMMIT;^

-- Criando campo STATUS_COM (compute by) - REAL
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='STATUS_COM'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
          ALTER STATUS_COM COMPUTED BY (
                  CAST(
                    CASE
                      WHEN STATUS=''A'' THEN ''Ativo''
                      WHEN STATUS=''C'' THEN ''Cancelado''
                      WHEN STATUS=''P'' THEN ''Pàralisado''
                      ELSE ''Indefinido''
                    END AS VARCHAR(15)
                  )
                )
      ';
  END
END

^

COMMIT;^

-- Criando campo STATUS_COM (compute by)  - FANTASIA
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='MODIFICADO_COM'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
          ADD MODIFICADO_COM COMPUTED BY ((CAST(''*'' AS VARCHAR(40))))
      ';
  END
END
^

COMMIT;^

-- Criando campo STATUS_COM (compute by)  - REAL
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='MODIFICADO_COM'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES ALTER MODIFICADO_COM COMPUTED BY (
                  CAST(
                    CASE
                      WHEN (last_update<=''01.01.1970'') THEN ''Inalterado''
                      WHEN (coalesce(last_owner,'''')='''') then left(cast(last_update as varchar(24))||'' anonimo'', 40)
                      ELSE left(cast(last_update as varchar(24))||'' ''||last_owner, 40)
                    END AS VARCHAR(40)
                  )
                )
      ';
  END
END
^

COMMIT;^

-- Criando campo STATUS_COM (compute by)  - REAL
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    existe=false;
    if (EXISTS(
        select *
        from clientes c
        where
          (
            (
            select count(*) from clientes c2
            where c2.cnpj=c.cnpj
            )>1
          )
         ) ) then
      existe=true;
    if (existe) then
    BEGIN
        execute statement
          '
            update clientes set
              cnpj=cast(substring(nome_completo||''#'' similar ''%#""[[:DIGIT:]]+#""%'' escape ''#'') as varchar(14))
            where coalesce(cnpj,'''')=''''
          ';
    END
  END
END
^

COMMIT;^

-- Criando um indice de campo unico CNPJ
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    existe=false;
    if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='UNQ1_CLIENTES'
       )) then
      existe=true;
    if (not existe) then
    BEGIN
      execute statement
        '
          ALTER TABLE CLIENTES
          ADD CONSTRAINT UNQ1_CLIENTES
          UNIQUE (CNPJ);
        ';
    END
  END
END
^

COMMIT;^

-- Criando um indice de campo unico CNPJ
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='NOME_COMPLETO'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    existe=false;
    rdb$indices where rdb$index_name 
    if (EXISTS(
       select * from rdb$indices 
        where rdb$index_name ='IDX_CLIENTES_NOME_COMPLETO'
       )) then
      existe=true;
    if (not existe) then
    BEGIN
      execute statement
        '
        CREATE INDEX IDX_CLIENTES_NOME_COMPLETO
        ON CLIENTES (NOME_COMPLETO)
        ';
    END
  END
END
^

commit; ^

SET TERM ; ^"
htYajuvX,FirebirdSQL Example,hamacker,PL/SQL,Tuesday 20th of February 2024 07:48:24 AM CDT,"/*
  Nome: lazdermos_gsl.sql
  Função: criar e atualizar os objetos dentro do banco de dados ""lazdemos_gsl.fdb""
  Data: 20/02/2024
  Autor: Hamacker <sirhamacker [em] gmail.com
*/

set sql dialect 3;
set clientlib 'fbclient.dll';
connect 'C:\Projetos-fpc\lazdemos_gsl\db\LAZDEMOS_GSL.FDB';
set autoddl on;
set names iso8859_1;
set transaction
  read write
  isolation level read committed
  wait
  lock timeout 180;

CREATE or alter EXCEPTION ERR 'Erro generico, favor verificar COM ATENÇÃO';
GRANT USAGE ON EXCEPTION ERR TO PUBLIC;

SET TERM ^;
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(SELECT * from  RDB$RELATIONS WHERE RDB$RELATION_NAME='CLIENTES' )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
      CREATE TABLE CLIENTES (
        ID_CLIENTE BIGINT generated by default as identity not null,
        NOME_COMPLETO CHAR(120),
        STATUS CHAR(1) DEFAULT ''A'') ;
      ';
  END
END
^

COMMIT;^

-- Comentar a tabela
COMMENT ON TABLE CLIENTES IS 'Relação de clientes';^
COMMENT ON COLUMN CLIENTES.ID_CLIENTE IS 'Codigo do cliente';^
COMMENT ON COLUMN CLIENTES.NOME_COMPLETO IS 'Nome do cliente';^
COMMENT ON COLUMN CLIENTES.STATUS IS 'Situação do cliente(A=Ativo, C=Cancelado)';^

-- Permissão a tabela
grant select on clientes to PUBLIC; ^
grant select, delete, insert, update on clientes to SYSDBA; ^

COMMIT;^

-- Apagando chave prinmaria antiga
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='PK2_CLIENTES' )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
      ALTER TABLE CLIENTES DROP CONSTRAINT PK2_CLIENTES;
      ';
  END
END
^

COMMIT;^

-- Chave prinmaria
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='PK_CLIENTES' )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
      ALTER TABLE CLIENTES ADD CONSTRAINT PK_CLIENTES PRIMARY KEY (ID_CLIENTE);
      ';
  END
END
^

COMMIT;^

-- Constraint status apenas A ou C
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='CHK_CLIENTES_STATUS' )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
      ALTER TABLE CLIENTES
        DROP CONSTRAINT CHK_CLIENTES_STATUS
      ';
  END
END
^

COMMIT;^


-- Constraint status apenas A ou C
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='CHK_CLIENTES_STATUS'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
        ADD CONSTRAINT CHK_CLIENTES_STATUS
        CHECK (
        STATUS IN (''A'',''C'',''P'')
        );
      ';
  END
END
^

COMMIT;^

-- Adicionando campo CNPJ
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
        ADD CNPJ CHAR(14)
      ';
  END
END
^

COMMIT;^

-- CNPJ não pode ter nulos
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
       UPDATE CLIENTES SET CNPJ='''' WHERE CNPJ IS NULL;
      ';
  END
END
^

COMMIT;^

-- CNPJ não pode ter nulos not nulll
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
      ALTER TABLE CLIENTES ALTER CNPJ SET NOT NULL
      ';
  END
END
^

COMMIT;^

-- Adicionando campo LAST_UPDATE
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='LAST_UPDATE'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
        ADD LAST_UPDATE timestamp
        DEFAULT current_timestamp;
      ';
  END
END
^

COMMIT;^

-- Adicionando campo LAST_UPDATE
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='LAST_OWNER'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
          ADD LAST_OWNER varchar(60)
          DEFAULT current_user;
      ';
  END
END
^

COMMIT;^

-- Criando campo STATUS_COM (compute by) - FANTASIA
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='STATUS_COM'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
          ADD STATUS_COM COMPUTED BY ((CAST(''*'' AS VARCHAR(15))))
      ';
  END
END
^

COMMIT;^

-- Criando campo STATUS_COM (compute by) - REAL
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='STATUS_COM'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
          ALTER STATUS_COM COMPUTED BY (
                  CAST(
                    CASE
                      WHEN STATUS=''A'' THEN ''Ativo''
                      WHEN STATUS=''C'' THEN ''Cancelado''
                      WHEN STATUS=''P'' THEN ''Pàralisado''
                      ELSE ''Indefinido''
                    END AS VARCHAR(15)
                  )
                )
      ';
  END
END

^

COMMIT;^

-- Criando campo STATUS_COM (compute by)  - FANTASIA
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='MODIFICADO_COM'
       )) then
    existe=true;
  if (not existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES
          ADD MODIFICADO_COM COMPUTED BY ((CAST(''*'' AS VARCHAR(40))))
      ';
  END
END
^

COMMIT;^

-- Criando campo STATUS_COM (compute by)  - REAL
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='MODIFICADO_COM'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    execute statement
      '
        ALTER TABLE CLIENTES ALTER MODIFICADO_COM COMPUTED BY (
                  CAST(
                    CASE
                      WHEN (last_update<=''01.01.1970'') THEN ''Inalterado''
                      WHEN (coalesce(last_owner,'''')='''') then left(cast(last_update as varchar(24))||'' anonimo'', 40)
                      ELSE left(cast(last_update as varchar(24))||'' ''||last_owner, 40)
                    END AS VARCHAR(40)
                  )
                )
      ';
  END
END
^

COMMIT;^

-- Criando campo STATUS_COM (compute by)  - REAL
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    existe=false;
    if (EXISTS(
        select *
        from clientes c
        where
          (
            (
            select count(*) from clientes c2
            where c2.cnpj=c.cnpj
            )>1
          )
         ) ) then
      existe=true;
    if (existe) then
    BEGIN
        execute statement
          '
            update clientes set
              cnpj=cast(substring(nome_completo||''#'' similar ''%#""[[:DIGIT:]]+#""%'' escape ''#'') as varchar(14))
            where coalesce(cnpj,'''')=''''
          ';
    END
  END
END
^

COMMIT;^

-- Criando um indice de campo unico CNPJ
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='CNPJ'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    existe=false;
    if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='UNQ1_CLIENTES'
       )) then
      existe=true;
    if (not existe) then
    BEGIN
      execute statement
        '
          ALTER TABLE CLIENTES
          ADD CONSTRAINT UNQ1_CLIENTES
          UNIQUE (CNPJ);
        ';
    END
  END
END
^

COMMIT;^

-- Criando um indice de campo unico CNPJ
execute block as
declare variable existe boolean;
begin
  existe=false;
  if (EXISTS(
       select * from rdb$relation_fields rf
       where rf.rdb$relation_name='CLIENTES' and rdb$field_name='NOME_COMPLETO'
       )) then
    existe=true;
  if (existe) then
  BEGIN
    existe=false;
    if (EXISTS(
       select * from rdb$relation_constraints
       where rdb$constraint_name='IDX_CLIENTES_NOME_COMPLETO'
       )) then
      existe=true;
    if (not existe) then
    BEGIN
      execute statement
        '
        CREATE INDEX IDX_CLIENTES_NOME_COMPLETO
        ON CLIENTES (NOME_COMPLETO)
        ';
    END
  END
END
^

commit; ^

SET TERM ; ^"
3RQNNBsn,Untitled,haxmeister,Perl,Tuesday 20th of February 2024 07:44:48 AM CDT,"
use strict;
use warnings;
use v5.38.0;

my $revese_word_sub = sub {
    my $word4 = shift;
    my @word5 = split '', $word4;
    my @word6 = reverse @word5;
    my $word7 = join '', @word6;
    return $word7;
};    # my $revese_word_sub = sub {

my $different_words_sub = sub {
    my @words = @_;
    my %rv10;
    foreach my $f1 (@words) {
        $rv10{$f1}++;
    }    # foreach my $f1 (@words) {
    my %rv11;
    foreach my $f2 ( keys %rv10 ) {
        if ( exists $rv10{$f2} ) {
            my $word8 = $revese_word_sub->($f2);
            unless ( $f2 eq $word8 ) {
                my $number  = $rv10{$f2};
                my $number1 = $rv10{$word8};
                $number  = 0 unless defined $number;
                $number1 = 0 unless defined $number1;
                my $number2 = $number * $number1;
                $rv11{$f2} = $number2;
                delete $rv10{$word8};
            }    #  unless ( $f2 eq $f2 ) {
        }    # if ( exists $rv10{$f2} ) {
    }    # foreach my $f2 ( keys %rv10 ) {
    my %rv12;
    for my $f3 ( keys %rv11 ) {
        if ( $rv11{$f3} > 0 ) {
            $rv12{$f3} = $rv11{$f3};
        }    # if ( $rv11{$f3} > 0 ) {
    }    #    for my $f3 ( keys %rv11 ) {
    return %rv12;
};    # my $different_words_sub = sub {

my @words1 = ( ""ab"", ""de"", ""ed"", ""bc"" );

#my @words1   = (""aa"", ""ba"", ""cd"", ""ed"");
#my @words1   = ( ""uv"", ""qp"", ""st"", ""vu"", ""mn"", ""pq"" );
my %result12 = $different_words_sub->(@words1);
foreach my $key ( keys %result12 ) {
    print $key . ' : ' . $result12{$key} . ""\n"";
}    # foreach my $key ( keys %result12 ) {"
zRkhcBuT,SQLiteDialect,TerenceFerut,Java,Tuesday 20th of February 2024 07:06:15 AM CDT,"package org.hibernate.mydialect;

/*
 * The author disclaims copyright to this source code.  In place of
 * a legal notice, here is a blessing:
 *
 *    May you do good and not evil.
 *    May you find forgiveness for yourself and forgive others.
 *    May you share freely, never taking more than you give.
 * From https://github.com/gwenn/sqlite-dialect
 *
 */

import java.sql.SQLException;
import java.sql.Types;

import org.hibernate.JDBCException;
import org.hibernate.MappingException;
import org.hibernate.ScrollMode;
import org.hibernate.dialect.Dialect;
import org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction;
import org.hibernate.dialect.function.NoArgSQLFunction;
import org.hibernate.dialect.function.SQLFunction;
import org.hibernate.dialect.function.SQLFunctionTemplate;
import org.hibernate.dialect.function.StandardSQLFunction;
import org.hibernate.dialect.function.VarArgsSQLFunction;
import org.hibernate.dialect.identity.GetGeneratedKeysDelegate;
import org.hibernate.dialect.identity.IdentityColumnSupport;

import org.hibernate.dialect.pagination.AbstractLimitHandler;
import org.hibernate.dialect.pagination.LimitHandler;
import org.hibernate.dialect.pagination.LimitHelper;
import org.hibernate.dialect.unique.DefaultUniqueDelegate;
import org.hibernate.dialect.unique.UniqueDelegate;
import org.hibernate.engine.spi.RowSelection;
import org.hibernate.exception.DataException;
import org.hibernate.exception.JDBCConnectionException;
import org.hibernate.exception.LockAcquisitionException;
import org.hibernate.exception.spi.SQLExceptionConversionDelegate;
import org.hibernate.exception.spi.TemplatedViolatedConstraintNameExtracter;
import org.hibernate.exception.spi.ViolatedConstraintNameExtracter;
import org.hibernate.id.PostInsertIdentityPersister;
import org.hibernate.internal.util.JdbcExceptionHelper;
import org.hibernate.mapping.Column;
import org.hibernate.type.StandardBasicTypes;

/**
 * An SQL dialect for SQLite 3.
 */
public class SQLiteDialect extends Dialect {
    private final UniqueDelegate uniqueDelegate;

    public SQLiteDialect() {
        registerColumnType( Types.BIT, ""boolean"" );
        //registerColumnType(Types.FLOAT, ""float"");
        //registerColumnType(Types.DOUBLE, ""double"");
        registerColumnType( Types.DECIMAL, ""decimal"" );
        registerColumnType( Types.CHAR, ""char"" );
        registerColumnType( Types.LONGVARCHAR, ""longvarchar"" );
        registerColumnType( Types.TIMESTAMP, ""datetime"" );
        registerColumnType( Types.BINARY, ""blob"" );
        registerColumnType( Types.VARBINARY, ""blob"" );
        registerColumnType( Types.LONGVARBINARY, ""blob"" );

        registerFunction( ""concat"", new VarArgsSQLFunction( StandardBasicTypes.STRING, """", ""||"", """" ) );
        registerFunction( ""mod"", new SQLFunctionTemplate( StandardBasicTypes.INTEGER, ""?1 % ?2"" ) );
        registerFunction( ""quote"", new StandardSQLFunction( ""quote"", StandardBasicTypes.STRING ) );
        registerFunction( ""random"", new NoArgSQLFunction( ""random"", StandardBasicTypes.INTEGER ) );
        registerFunction( ""round"", new StandardSQLFunction( ""round"" ) );
        registerFunction( ""substr"", new StandardSQLFunction( ""substr"", StandardBasicTypes.STRING ) );
        registerFunction( ""trim"", new AbstractAnsiTrimEmulationFunction() {
            protected SQLFunction resolveBothSpaceTrimFunction() {
                return new SQLFunctionTemplate( StandardBasicTypes.STRING, ""trim(?1)"" );
            }

            protected SQLFunction resolveBothSpaceTrimFromFunction() {
                return new SQLFunctionTemplate( StandardBasicTypes.STRING, ""trim(?2)"" );
            }

            protected SQLFunction resolveLeadingSpaceTrimFunction() {
                return new SQLFunctionTemplate( StandardBasicTypes.STRING, ""ltrim(?1)"" );
            }

            protected SQLFunction resolveTrailingSpaceTrimFunction() {
                return new SQLFunctionTemplate( StandardBasicTypes.STRING, ""rtrim(?1)"" );
            }

            protected SQLFunction resolveBothTrimFunction() {
                return new SQLFunctionTemplate( StandardBasicTypes.STRING, ""trim(?1, ?2)"" );
            }

            protected SQLFunction resolveLeadingTrimFunction() {
                return new SQLFunctionTemplate( StandardBasicTypes.STRING, ""ltrim(?1, ?2)"" );
            }

            protected SQLFunction resolveTrailingTrimFunction() {
                return new SQLFunctionTemplate( StandardBasicTypes.STRING, ""rtrim(?1, ?2)"" );
            }
        } );
        uniqueDelegate = new SQLiteUniqueDelegate( this );
    }

    // database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @Override
    public String getCastTypeName(int code) {
        // FIXME
        return super.getCastTypeName( code );
    }

    // IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @Override
    public IdentityColumnSupport getIdentityColumnSupport() {
        return new IdentityColumnSupport() {
            @Override
            public boolean supportsIdentityColumns() {
                return false;
            }

            @Override
            public boolean supportsInsertSelectIdentity() {
                return false;
            }

            @Override
            public boolean hasDataTypeInIdentityColumn() {
                return false;
            }

            @Override
            public String appendIdentitySelectToInsert(String s) {
                return null;
            }

            @Override
            public String getIdentitySelectString(String s, String s1, int i) throws MappingException {
                return null;
            }

            @Override
            public String getIdentityColumnString(int i) throws MappingException {
                return null;
            }

            @Override
            public String getIdentityInsertString() {
                return null;
            }

            @Override
            public GetGeneratedKeysDelegate buildGetGeneratedKeysDelegate(PostInsertIdentityPersister postInsertIdentityPersister, Dialect dialect) {
                return null;
            }
        };
    }

    // limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    private static final AbstractLimitHandler LIMIT_HANDLER = new AbstractLimitHandler() {
        @Override
        public String processSql(String sql, RowSelection selection) {
            final boolean hasOffset = LimitHelper.hasFirstRow( selection );
            return sql + (hasOffset ? "" limit ? offset ?"" : "" limit ?"");
        }

        @Override
        public boolean supportsLimit() {
            return true;
        }

        @Override
        public boolean bindLimitParametersInReverseOrder() {
            return true;
        }
    };

    @Override
    public LimitHandler getLimitHandler() {
        return LIMIT_HANDLER;
    }

    // lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    @Override
    public boolean supportsLockTimeouts() {
        // may be http://sqlite.org/c3ref/db_mutex.html ?
        return false;
    }

    @Override
    public String getForUpdateString() {
        return """";
    }

    @Override
    public boolean supportsOuterJoinForUpdate() {
        return false;
    }

  /*
	@Override
  public boolean dropTemporaryTableAfterUse() {
    return true; // temporary tables are only dropped when the connection is closed. If the connection is pooled...
  }
  */

    // current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @Override
    public boolean supportsCurrentTimestampSelection() {
        return true;
    }

    public boolean isCurrentTimestampSelectStringCallable() {
        return false;
    }

    @Override
    public String getCurrentTimestampSelectString() {
        return ""select current_timestamp"";
    }

    // SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    private static final int SQLITE_BUSY = 5;
    private static final int SQLITE_LOCKED = 6;
    private static final int SQLITE_IOERR = 10;
    private static final int SQLITE_CORRUPT = 11;
    private static final int SQLITE_NOTFOUND = 12;
    private static final int SQLITE_FULL = 13;
    private static final int SQLITE_CANTOPEN = 14;
    private static final int SQLITE_PROTOCOL = 15;
    private static final int SQLITE_TOOBIG = 18;
    private static final int SQLITE_CONSTRAINT = 19;
    private static final int SQLITE_MISMATCH = 20;
    private static final int SQLITE_NOTADB = 26;

    @Override
    public SQLExceptionConversionDelegate buildSQLExceptionConversionDelegate() {
        return new SQLExceptionConversionDelegate() {
            @Override
            public JDBCException convert(SQLException sqlException, String message, String sql) {
                final int errorCode = JdbcExceptionHelper.extractErrorCode( sqlException );
                if (errorCode == SQLITE_TOOBIG || errorCode == SQLITE_MISMATCH) {
                    return new DataException( message, sqlException, sql );
                }
                else if (errorCode == SQLITE_BUSY || errorCode == SQLITE_LOCKED) {
                    return new LockAcquisitionException( message, sqlException, sql );
                }
                else if ((errorCode >= SQLITE_IOERR && errorCode <= SQLITE_PROTOCOL) || errorCode == SQLITE_NOTADB) {
                    return new JDBCConnectionException( message, sqlException, sql );
                }

                // returning null allows other delegates to operate
                return null;
            }
        };
    }

    public ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter() {
        return EXTRACTER;
    }

    private static final ViolatedConstraintNameExtracter EXTRACTER = new TemplatedViolatedConstraintNameExtracter() {
        @Override
        protected String doExtractConstraintName(SQLException sqle) throws NumberFormatException {
            final int errorCode = JdbcExceptionHelper.extractErrorCode( sqle );
            if (errorCode == SQLITE_CONSTRAINT) {
                return extractUsingTemplate( ""constraint "", "" failed"", sqle.getMessage() );
            }
            return null;
        }
    };

    // union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @Override
    public boolean supportsUnionAll() {
        return true;
    }

    // DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @Override
    public boolean canCreateSchema() {
        return false;
    }

    @Override
    public boolean hasAlterTable() {
        // As specified in NHibernate dialect
        return false;
    }

    @Override
    public boolean dropConstraints() {
        return false;
    }

    @Override
    public boolean qualifyIndexName() {
        return false;
    }

    @Override
    public String getAddColumnString() {
        return ""add column"";
    }

    @Override
    public String getDropForeignKeyString() {
        throw new UnsupportedOperationException( ""No drop foreign key syntax supported by SQLiteDialect"" );
    }

    @Override
    public String getAddForeignKeyConstraintString(String constraintName,
                                                   String[] foreignKey, String referencedTable, String[] primaryKey,
                                                   boolean referencesPrimaryKey) {
        throw new UnsupportedOperationException( ""No add foreign key syntax supported by SQLiteDialect"" );
    }

    @Override
    public String getAddPrimaryKeyConstraintString(String constraintName) {
        throw new UnsupportedOperationException( ""No add primary key syntax supported by SQLiteDialect"" );
    }

    @Override
    public boolean supportsCommentOn() {
        return true;
    }

    @Override
    public boolean supportsIfExistsBeforeTableName() {
        return true;
    }

  /* not case insensitive for unicode characters by default (ICU extension needed)
	public boolean supportsCaseInsensitiveLike() {
    return true;
  }
  */

    @Override
    public boolean doesReadCommittedCauseWritersToBlockReaders() {
        // TODO Validate (WAL mode...)
        return true;
    }

    public boolean doesRepeatableReadCauseReadersToBlockWriters() {
        return true;
    }

    @Override
    public boolean supportsTupleDistinctCounts() {
        return false;
    }

    public int getInExpressionCountLimit() {
        // Compile/runtime time option: http://sqlite.org/limits.html#max_variable_number
        return 1000;
    }

    @Override
    public UniqueDelegate getUniqueDelegate() {
        return uniqueDelegate;
    }
    private static class SQLiteUniqueDelegate extends DefaultUniqueDelegate {
        public SQLiteUniqueDelegate(Dialect dialect) {
            super( dialect );
        }
        @Override
        public String getColumnDefinitionUniquenessFragment(Column column) {
            return "" unique"";
        }
    }

    @Override
    public String getSelectGUIDString() {
        return ""select hex(randomblob(16))"";
    }

    @Override
    public ScrollMode defaultScrollMode() {
        return ScrollMode.FORWARD_ONLY;
    }
}"
1bXxvA5X,2. félév 2. hét,Levi0227,C#,Tuesday 20th of February 2024 06:41:50 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Rectangle rectangle = new Rectangle(120, 150, ""blue"");
            Console.WriteLine(rectangle.ToString());
            Console.ReadKey();
        }
    }
}

-------------------------------------------------
//Osztályok
_________________________________________________

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    internal abstract class Shape
    {
        private bool isHoley;
        private string color;
        public string name;

        protected Shape(bool isHoley, string color)
        {
            this.isHoley = isHoley;
            this.color = color;
        }
        protected Shape(string color)
        {
            this.color = color;
            this.isHoley = false;
        }


        public string Color { get { return this.color; } set { value = this.color; } }

        public void MakeHolly()
        { 
            this.isHoley = true;
        }

        public abstract double Perimeter();
        public abstract double Area();

        public override string ToString() 
        { 
            return $""{this.color} {this.isHoley} {this.Perimeter()} {this.Area()}"";
        }

        public override bool Equals(object obj)
        {
            if (obj is Shape)
            { 
                Shape other = obj as Shape;
                if (this.color == other.color)
                { 
                    return true;
                }
            }
            return false;
        }

        public virtual void KillShape()
        {
            Console.WriteLine(""Meghaltam!"");
        }
    }
}
-------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    internal class Rectangle : Shape
    {
        public new string name;
        private int height;
        private int width;

        public int Height { get { return height; } set { this.height = value; } }

        public int Width { get { return width; } set { this.width = value; } }
        public Rectangle(int width, int height, string color) : base(color)
        {
            this.height = height;
            this.width = width;
        }

        public Rectangle(int width, int height, bool isHoley, string color) : base(isHoley, color)
        {
            this.height = height;
            this.width = width;
        }

        public override string ToString()
        {
            return $""Teglalap: {base.ToString()}"";
        }

        public override double Area()
        {
            return this.width * this.height;
        }

        public override double Perimeter()
        {
            return 2 * (this.width+this.height);
        }

        public override void KillShape()
        {
            Console.WriteLine(""Rectangle Meghalt!"");
        }
    }
}

--------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    internal class Square : Shape
    {
        public Square(int width, int height, string color) : base(color)
        {
        }

        public Square(int width, int height, bool isHoley, string color) : base(isHoley, color)
        {
        }

        public override double Area()
        {
            throw new NotImplementedException();
        }

        public override double Perimeter()
        {
            throw new NotImplementedException();
        }
    }
}
"
U5PXNLsM,queens array,alex0sunny,Python,Tuesday 20th of February 2024 06:39:15 AM CDT,"def dfs(cols, diags, rdiags, queens, y, n, res):
	if y == n:
		res.append(queens[:])
		return
	for x in range(n):
		if cols[x] == diags[x-y] == rdiags[x+y] == False:
			cols[x] = diags[x-y] = rdiags[x+y] = True
			queens[y] = x + 1
			dfs(cols, diags, rdiags, queens, y+1, n, res)
			cols[x] = diags[x-y] = rdiags[x+y] = False


def get_combs(n):
	cols = [False] * n
	diags = [False] * 2 * n
	rdiags = [False] * 2 * n
	queens = [0] * n
	res = []
	dfs(cols, diags, rdiags, queens, 0, n, res)
	return res


n = int(input())
res = get_combs(n)
print(len(res))
for queens in res:
	print(' '.join([str(x) for x in queens]))"
dVSqAD4Y,data846,TestGuy1,JSON,Tuesday 20th of February 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'aba99dfd9435bfc282186fa4fc892134d2881e7b3d2bae8c769059cb2fa71e625a9c3e3df9c6c12c43a245f938b5822ded1a7ecb36493be9ce5770645618556eb703abe4fa90befc3b79830a1f98e0b7d4a67a3b4499135d79839067149fca7326a4dc016dcf81a8fd6e2bce46aab49d4011d7d63c9ecdac5601110bdfe7691f',
  otherdata: [
    '0cc08bbaec75a1998e66c4e62d181c39',
    '161403120a14362348e9c773682cee0e',
    '50fa74a99079c855efb1c2082796b510',
    '962f4dbb47c1dfc731d64c43a601fed8',
    'abc92b280371ac61a5ae0e62b49e4b4b',
    '0845ba58e0e52367e966a8cf4429c06b',
    '4362fd1f6a0ce71fea8226eda1de3b17',
    '7c7be8b72ecfc50e5145b9fcc45cc7b7'
  ]
}"
V3WMCfMt,Catkin workspace configuration,LorenzoPagliara,Bash,Tuesday 20th of February 2024 05:56:36 AM CDT,"echo ""source /opt/ros/noetic/setup.bash"" >> ~/.bashrc
source ~/.bashrc

cd
mkdir -p ~/catkin_ws/src
cd ~/catkin_ws/
catkin config --extend /opt/ros/$ROS_DISTRO/ --cmake-args -DCMAKE_BUILD_TYPE=Release
catkin init
catkin build

echo ""source ~/catkin_ws/devel/setup.bash"" >> ~/.bashrc
source ~/.bashrc"
TtC15fwE,generatorv3,G0nz0uk,YAML,Tuesday 20th of February 2024 05:51:04 AM CDT,"# Define the SNMP version and authentication details.
auths:
  dell_idrac:
    version: 2
    community: public123  # Assuming SNMPv2c with community string ""public123""
  cisco_v2:
    version: 2
    community: test1
  aruba_v2:
    version: 2
    community: test12
  extreme_v2:
    version: 2
    community: test123 



# Define the module for collecting specific metrics.
modules:
  # Default IF-MIB interfaces table with ifIndex.
  if_mib:
    walk: [sysUpTime, interfaces, ifXTable]
    lookups:
      - source_indexes: [ifIndex]
        lookup: ifAlias
      - source_indexes: [ifIndex]
        # Uis OID to avoid conflict with PaloAlto PAN-COMMON-MIB.
        lookup: 1.3.6.1.2.1.2.2.1.2 # ifDescr
      - source_indexes: [ifIndex]
        # Use OID to avoid conflict with Netscaler NS-ROOT-MIB.
        lookup: 1.3.6.1.2.1.31.1.1.1.1 # ifName
    overrides:
      ifAlias:
        ignore: true # Lookup metric
      ifDescr:
        ignore: true # Lookup metric
      ifName:
        ignore: true # Lookup metric
      ifType:
        type: EnumAsInfo
  dell_idrac:  # Rename ""my_device_metrics"" to something more descriptive for your use case
    walk:
      - .1.3.6.1.4.1.674.10892.5.4.700.20.1.6.1.3  # CPU1 Temperature
      - .1.3.6.1.4.1.674.10892.5.4.700.20.1.6.1.4  # CPU2 Temperature
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.1  # Fan1 Speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.2  # Fan2 Speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.3  # Fan3 Speed
      - .1.3.6.1.4.1.674.10892.5.4.700.12.1.6.1.4  # Fan4 Speed
    max_repetitions: 25
    retries: 3
    timeout: 5s
    lookups:
      # Example lookup configuration - customize as needed based on your OIDs
      # This section is more relevant if you're referencing a table and want to correlate indices with meaningful labels.
    overrides:
      # Here you can override specific MIBs or metrics behaviors
      cpu1_temp:
        ignore: false
        type: gauge
      cpu2_temp:
        ignore: false
        type: gauge
      fan1_speed:
        ignore: false
        type: gauge
      fan2_speed:
        ignore: false
        type: gauge
      fan3_speed:
        ignore: false
        type: gauge
      fan4_speed:
        ignore: false
        type: gauge"
iff3A5ck,Untitled,bonky_katto,Python,Tuesday 20th of February 2024 05:13:58 AM CDT,"from math import log

def mult(a: float, b: float) -> float:
    #making sure calculation of negative value is possible
    sign = 1
    if a<0 or b<0:
        if a<0 and b<0:
            sign = 1
        else:
            sign = -1
        a = abs(a)
        b = abs(b)
    
    #taking the log_2 of both values
    a_log = log(a,2) 
    b_log = log(b,2)

    #adding log values
    c_log = a_log+b_log

    #converting to normal values and returning
    c = 2**c_log
    return c*sign

def div(a: float, b: float) -> float:
    #making sure calculation of negative value is possible
    sign = 1
    if a<0 or b<0:
        if a<0 and b<0:
            sign = 1
        else:
            sign = -1
        a = abs(a)
        b = abs(b)
    
    #taking the log_2 of both values
    a_log = log(a,2) 
    b_log = log(b,2)

    #substracting log values
    c_log = a_log-b_log

    #converting to normal values and returning
    c = 2**c_log
    return c*sign"
AqcKkC1E,Review Range Markets,fxvnpro,PHP,Tuesday 20th of February 2024 04:39:19 AM CDT,https://www.fxvnpro.com/review-range-markets/
Dh2yCXbp,DynamicArray,UrayFenn,C#,Tuesday 20th of February 2024 04:33:56 AM CDT,"namespace DynamicArray
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] numbers = new int[0];
            string commandSum = ""sum"";
            string commandExit = ""exit"";
            bool isOpen = true;

            while (isOpen)
            {
                for (int i = 0; i < numbers.Length; i++)
                {

                    Console.Write(numbers[i] + "" "");
                }

                Console.WriteLine(""\n\nВведите желаемое число:"");
                Console.WriteLine($""Для сложения введенных чисел введите: {commandSum}"");
                Console.WriteLine($""Для выхода из программы введите: {commandExit}"");
                string userInput = Console.ReadLine();

                if (userInput == ""sum"")
                {
                    int sumArray = 0;

                    for (int i = 0; i < numbers.Length; i++)
                    {
                        sumArray += numbers[i];
                    }

                    Console.WriteLine($""Сумма введенный чисел: {sumArray}"");
                }
                else if (userInput == ""exit"")
                {
                    Console.WriteLine(""Вы вышли из программы!"");
                    isOpen = false;
                }
                else
                {
                    int[] numbersCopy = new int[numbers.Length + 1];
                    int inputNumber = Convert.ToInt32(userInput);
                    numbersCopy[numbersCopy.Length - 1] = inputNumber;

                    for (int i = 0; i < numbers.Length; i++)
                    {
                        numbersCopy[i] = numbers[i];
                    }

                    numbers = numbersCopy;
                    Console.WriteLine(""\nЧисло добавлено!"");
                }
            }
        }
    }
}"
