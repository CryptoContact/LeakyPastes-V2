id,title,username,language,date,content
zLyjtsJ8,ü§ëG2A.com Free Gift Card FIX July 2024ü§ë,Kevin_Chen1,JavaScript,Thursday 4th of July 2024 12:59:27 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?01842

Working as of:
5th of July 2024

"
54UbBhXh,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,mano03,JavaScript,Thursday 4th of July 2024 12:53:23 PM CDT,"G2A.com complimentary voucher & games guide.
Any voucher for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?01842

Working as of:
5th of July 2024

"
nJ40uS2z,ü§ëG2A.com Free Gift Card FIX July 2024ü§ë,gigi1964,JavaScript,Thursday 4th of July 2024 12:47:12 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?01842

Working as of:
July 5 2024

"
ma8PkzBD,üéÅ G2A.COM FREE GIFT CARD GUIDE JUL 2024 V2 üéÅ,jusst2k4,GetText,Thursday 4th of July 2024 12:46:16 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_864779.pdf
 
Working as of:
04 July 2024"
CGFM8UuV,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,TeleBot,JavaScript,Thursday 4th of July 2024 12:41:09 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?01842

Working as of:
July 5 2024

"
mmt2mZtx,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,William95,JavaScript,Thursday 4th of July 2024 12:35:06 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?01842

Working as of:
5th of July 2024

"
C9RwxtxX,ü§ëG2A.com Free Gift Card FIX July 2024ü§ë,romikdikson,JavaScript,Thursday 4th of July 2024 12:28:54 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?01842

Working as of:
July 5 2024

"
jfQCTFuk,üéÅ G2A.COM FREE GIFT CARD GUIDE JULY 2024 V3üéÅ,BitcoinScript2020,GetText,Thursday 4th of July 2024 12:23:05 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
04 > 10 July 2024"
inDuP59x,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,Justpit,JavaScript,Thursday 4th of July 2024 12:22:51 PM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?01842

Working as of:
5th of July 2024

"
hgjaYbx5,PrinterLib,minecartchris,Lua,Thursday 4th of July 2024 12:18:24 PM CDT,"-- shell.run(""wget http://127.0.0.1:8080/code/printer/printer.lua"")

local lib = {}
local printer
local xp = 1
local yp = 1
local shouldNewPage = false

function lib.init(side)
    printer = peripheral.wrap(side)
    if not printer then return nil end
    return true
end

function lib.setPrinterObject(obj)
    printer = obj
end

function lib.getPrinterObject()
    return printer
end

function lib.setPos(x, y)
    if x ~= nil then
        xp = x
    end
    if y ~= nil then
        yp = y
    end
    printer.setCursorPos(xp, yp)
end

function lib.getPos()
    return printer.getCursorPos()
end

function lib.startPage()
    xp = 1
    yp = 1
    local st = printer.newPage()
    printer.setCursorPos(xp, yp)
    shouldNewPage = false
    return st
end

function lib.endPage()
    printer.endPage()
    shouldNewPage = false
end

function lib.write(text)
    data = tostring(text)
    for i = 1, #data do
        lib.writeChar(data:sub(i, i))
    end
end

function lib.print(text)
    lib.write(text)
    lib.writeChar(""\n"")
end

function lib.printCenter(text)
    data = tostring(text)
    xp = 13-(math.floor(#data/2))
    lib.print(data)
end

-------------------

function lib.writeChar(char)
    if shouldNewPage then
        local st = false
        while st == false do
            st = printer.newPage()
        end
        printer.setCursorPos(1, 1)
        shouldNewPage = false
    end
    printer.setCursorPos(xp, yp)
    if char == ""\n"" then
        xp = 0
        yp = yp + 1
    else
        printer.write(char)
    end
    
    xp = xp + 1
    if xp >= 26 then
        xp = 1
        yp = yp + 1
    end
    if yp >= 22 then
        yp = 1
        shouldNewPage = true
    end
end

return lib"
7UuJ1q8X,ü§ëG2A.com Free Gift Card FIX July 2024üéÅ,DownloadPizza,JavaScript,Thursday 4th of July 2024 12:16:49 PM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1kcJ-yXUpB1u8mkFHUQKnrArP6DGl5W8e/view?01842

Working as of:
July 5 2024

"
hf9y1sJy,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºöËÄÅÁôΩÊïÖ‰∫ã,xiaomianao666,JavaScript,Thursday 4th of July 2024 11:42:56 AM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•ËÄÅÁôΩÊïÖ‰∫ã@@
vzp04h6Z,üéÅ G2A.COM FREE GIFT CARD GUIDE JULY 2024 V3üéÅ,portalxwe,GetText,Thursday 4th of July 2024 11:06:02 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of;
04 > 10 July 2024"
CB9Tvm2t,Untitled,fedor-resh,JSON,Thursday 4th of July 2024 10:12:12 AM CDT,"[start:server]   core:http:notice HTTP_SUCCESS 
[start:server]  {
[start:server]   status: 200,
[start:server]   request_time: 4,
[start:server]   sent: 0,
[start:server]   received: 3570,
[start:server]   url: 'https://blackbox-test.yandex.net:443/HIDDEN',
[start:server]   method: 'GET',
[start:server]   headers: { host: 'blackbox-test.yandex.net' },
[start:server]   timings: {
[start:server]     request: 4,
[start:server]     dns: 1,
[start:server]     connect: 0,
[start:server]     tls: -2,
[start:server]     send: 0,
[start:server]     wait: 5,
[start:server]     receive: 0
[start:server]   }
[start:server] } 
[start:server]  +1s
[start:server] { uid: '4124368319' }
[start:server]   core:http:notice HTTP_SUCCESS 
[start:server]  {
[start:server]   ycrid: 'tuning-1720105668024349-7750588625182964268-fedorresh',
[start:server]   x_request_id: '1720105668024349-7750588625182964268',
[start:server]   status: 500,
[start:server]   request_time: 30,
[start:server]   sent: 0,
[start:server]   received: 10624,
[start:server]   url: 'https://ps-billing-web.qloud.dst.yandex.net:443/v1/promo/activate_delayed_promo?uid=4124368319',
[start:server]   method: 'POST',
[start:server]   headers: {
[start:server]     'user-agent': 'got/9.6.0 (https://github.com/sindresorhus/got)',
[start:server]     'x-user-ip': '2a02:6b8:b081:b67c::1:2f',
[start:server]     'yandex-cloud-request-id': 'tuning-1720105668024349-7750588625182964268-fedorresh',
[start:server]     'x-ya-service-ticket': '3:serv:CMvrARC6xJ20BiIICOehexCjkns:***',
[start:server]     'x-ya-user-ticket': '3:user:CMjrARDi-Zq0BhplCgYInJzFqA8KBgjQ4-itDwoGCL-7064PCgYIvuimrw8Qv7vTrg8aDGJiOnNlc3Npb25pZCDnoXsoATIpczoxNzIwMDgwOTI0MTg3Ok5nQUJBQUFBQUFBSGM0R3d1QVlDS2c6OGM:***',
[start:server]     'x-uid': '4124368319',
[start:server]     'x-forwarded-for': '2a02:6b8:b081:b67c::1:2f',
[start:server]     'x-request-attempt': 0,
[start:server]     accept: 'application/json',
[start:server]     'accept-encoding': 'gzip, deflate',
[start:server]     'content-type': 'application/json',
[start:server]     'content-length': 72,
[start:server]     host: 'ps-billing-web.qloud.dst.yandex.net'
[start:server]   },
[start:server]   timings: {
[start:server]     request: 31,
[start:server]     dns: 0,
[start:server]     connect: 0,
[start:server]     tls: -1,
[start:server]     send: 0,
[start:server]     wait: 32,
[start:server]     receive: 0
[start:server]   }
[start:server] } 
[start:server]  +34ms
[start:server]   core:err HTTP_REQUEST_ERROR 
[start:server]  {
[start:server]   url: 'ps-billing-web.qloud.dst.yandex.net/v1/promo/activate_delayed_promo?uid=4124368319',
[start:server]   method: 'POST',
[start:server]   error_type: 'HTTPError',
[start:server]   message: 'Response code 500 (Server Error)',
[start:server]   response_code: 500,
[start:server]   response_body: {
[start:server]     invocationInfo: {
[start:server]       host: 'rmxh3toxw4von33x.myt.yp-c.yandex.net',
[start:server]       application: 'ps-billing-web',
[start:server]       version: 'unknown',
[start:server]       requestId: 'OyemdVOW',
[start:server]       ycrid: 'tuning-1720105668024349-7750588625182964268-fedorresh'
[start:server]     },
[start:server]     error: {
[start:server]       name: 'unknown',
[start:server]       message: 'Cannot invoke ""Object.hashCode()"" because ""pk"" is null',
[start:server]       stackTrace: 'java.lang.NullPointerException: Cannot invoke ""Object.hashCode()"" because ""pk"" is null\n' +
[start:server]         '\tat java.base/java.util.ImmutableCollections$MapN.probe(ImmutableCollections.java:1321)\n' +
[start:server]         '\tat java.base/java.util.ImmutableCollections$MapN.get(ImmutableCollections.java:1235)\n' +
[start:server]         '\tat java.base/java.util.ImmutableCollections$AbstractImmutableMap.getOrDefault(ImmutableCollections.java:1090)\n' +
[start:server]         '\tat ru.yandex.chemodan.app.psbilling.core.tasks.schedule.promo.DelayedPromoActivateTaskScheduler.scheduleDelayedPromoActivateTask(DelayedPromoActivateTaskScheduler.java:55)\n' +
[start:server]         '\tat ru.yandex.chemodan.app.psbilling.web.actions.promos.PromoController.activateDelayedPromo(PromoController.java:88)\n' +
[start:server]         '\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n' +
[start:server]         '\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n' +
[start:server]         '\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n' +
[start:server]         '\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n' +
[start:server]         '\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\n' +
[start:server]         '\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\n' +
[start:server]         '\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\n' +
[start:server]         '\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\n' +
[start:server]         '\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\n' +
[start:server]         '\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n' +
[start:server]         '\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)\n' +
[start:server]         '\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)\n' +
[start:server]         '\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\n' +
[start:server]         '\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\n' +
[start:server]         '\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:665)\n' +
[start:server]         '\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\n' +
[start:server]         '\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:750)\n' +
[start:server]         '\tat ru.yandex.misc.web.servletContainer.InstrumentedServlet$1.applyWithException(InstrumentedServlet.java:60)\n' +
[start:server]         '\tat ru.yandex.misc.web.servletContainer.InstrumentedServlet$1.applyWithException(InstrumentedServlet.java:58)\n' +
[start:server]         '\tat ru.yandex.misc.io.ThrowHackFunction0.apply(ThrowHackFunction0.java:15)\n' +
[start:server]         '\tat ru.yandex.misc.monica.util.measure.Measurer.measure(Measurer.java:39)\n' +
[start:server]         '\tat ru.yandex.misc.web.servletContainer.InstrumentedServlet.service(InstrumentedServlet.java:58)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656)\n' +
[start:server]         '\tat ru.yandex.chemodan.app.psbilling.web.utils.RequestParameterNameAdaptingFilter.doFilterInternal(RequestParameterNameAdaptingFilter.java:18)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat ru.yandex.inside.passport.tvm2.web.Tvm2Filter.doFilterInternal(Tvm2Filter.java:73)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat ru.yandex.chemodan.app.psbilling.web.config.SpringDocAppConfiguration$SwaggerAuthFilter.doFilterInternal(SpringDocAppConfiguration.java:248)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:289)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat ru.yandex.chemodan.util.web.AddYcridToHeadersFilter.doFilterInternal(AddYcridToHeadersFilter.java:25)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat ru.yandex.misc.web.servlet.WtdFilter.doFilter(WtdFilter.java:35)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat org.springframework.web.filter.ForwardedHeaderFilter.doFilterInternal(ForwardedHeaderFilter.java:156)\n' +
[start:server]         '\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:552)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n' +
[start:server]         '\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:600)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235)\n' +
[start:server]         '\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)\n' +
[start:server]         '\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505)\n' +
[start:server]         '\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:54)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)\n' +
[start:server]         '\tat ru.yandex.chemodan.http.YandexCloudRequestIdHandler.handle(YandexCloudRequestIdHandler.java:50)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:181)\n' +
[start:server]         '\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)\n' +
[start:server]         '\tat org.eclipse.jetty.server.Server.handle(Server.java:516)\n' +
[start:server]         '\tat org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)\n' +
[start:server]         '\tat org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)\n' +
[start:server]         '\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)\n' +
[start:server]         '\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)\n' +
[start:server]         '\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)\n' +
[start:server]         '\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)\n' +
[start:server]         '\tat org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)\n' +
[start:server]         '\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)\n' +
[start:server]         '\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)\n' +
[start:server]         '\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)\n' +
[start:server]         '\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)\n' +
[start:server]         '\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)\n' +
[start:server]         '\tat ru.yandex.misc.web.servletContainer.jetty.InstrumentedQueuedThreadPool$InstrumentedRunnable.run(InstrumentedQueuedThreadPool.java:63)\n' +
[start:server]         '\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)\n' +
[start:server]         '\tat org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)\n' +
[start:server]         '\tat java.base/java.lang.Thread.run(Thread.java:833)\n'
[start:server]     }
[start:server]   }
[start:server] } 
[start:server]  +1s
[start:server]   core:err MODEL_REJECTED 
[start:server]  {
[start:server]   name: 'tariff-page-closed',
[start:server]   time: '35.601',
[start:server]   message: HTTP_ERROR { error: { type: 'http', code: 500 } },
[start:server]   params: {},
[start:server]   request_attempt: 0
[start:server] } 
[start:server]  +2ms
[start:server]   core:info REQUEST_FINISHED 
[start:server]  {
[start:server]   cookies: undefined,
[start:server]   method: 'POST',
[start:server]   request: '/?_m=tariff-page-closed',
[start:server]   user_agent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.6261.506 YaBrowser/24.4.5.506 Yowser/2.5 Safari/537.36',
[start:server]   status: 200,
[start:server]   params: Params {
[start:server]     _m: 'tariff-page-closed',
[start:server]     models: [ [Object] ],
[start:server]     _ckey: 'g0Qv5tttLAI1hKyzc/YDKjk6cX0=!ly8txxh4!rqjpQk3mKytKkoGxXMDxwi+8y2k=!3'
[start:server]   },
[start:server]   livetime: '37.512ms',
[start:server]   redirect_to: '',
[start:server]   size: 223,
[start:server]   error: ''
[start:server] } 
"
8rRVEfTj,BlogUnitOfWork,Shuva_Dev,C#,Thursday 4th of July 2024 10:04:01 AM CDT,"using Blog.Domain.RepositoryContracts;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Blog.Infrastructure.UnitOfWorks
{
    public class BlogUnitOfWork : UnitOfWork
    {
        public IBlogPostRepository BlogPostRepository { get; private set; }
        public BlogUnitOfWork(BlogDbContext dbContext, 
            IBlogPostRepository blogPostRepository) : base(dbContext)
        {
            BlogPostRepository = blogPostRepository;
        }
    } 
}
"
p0FZGpqW,IUnitOfWork,Shuva_Dev,C#,Thursday 4th of July 2024 10:03:10 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Blog.Domain
{
    public interface IUnitOfWork : IDisposable, IAsyncDisposable
    {
        void Save();
        Task SaveAsync();
    }
}"
STqG8SmW,UnitOfWork,Shuva_Dev,C#,Thursday 4th of July 2024 10:01:54 AM CDT,"using Blog.Domain;
using Blog.Domain.RepositoryContracts;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;

namespace Blog.Infrastructure.UnitOfWorks
{
    public abstract class UnitOfWork : IUnitOfWork
    {
        private readonly DbContext _dbContext;
        //protected IAdoNetUtility AdoNetUtility { get; private set; }

        public UnitOfWork(DbContext dbContext)
        {
            _dbContext = dbContext;
            //AdoNetUtility = new AdoNetUtility(_dbContext.Database.GetDbConnection());
        }

        public void Dispose() => _dbContext?.Dispose();
        public ValueTask DisposeAsync() => _dbContext.DisposeAsync();
        public void Save() => _dbContext?.SaveChanges();
        public async Task SaveAsync() => await _dbContext.SaveChangesAsync();
    }
}
"
LbRXheZV,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºöÈíõÂ™í‰Ωì-‰∫∫‰∫∫ÂâØ‰∏öÊêûÈí±ÁúüÁõ∏ÔºöÂΩìÂØºÂ∏à‚ÄúÂçñÈì≤Â≠ê‚ÄùÊúàÂÖ•10‰∏á‚Äô‚Äô‚Äô,xiaomianao666,JavaScript,Thursday 4th of July 2024 09:42:12 AM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•ÈíõÂ™í‰Ωì-‰∫∫‰∫∫ÂâØ‰∏öÊêûÈí±ÁúüÁõ∏ÔºöÂΩìÂØºÂ∏à‚ÄúÂçñÈì≤Â≠ê‚ÄùÊúàÂÖ•10‰∏á‚Äô‚Äô‚Äô@@
ZZC39gx8,Untitled,polarnyy,Java,Thursday 4th of July 2024 09:35:02 AM CDT,"public class BossTask implements Runnable{

    public void initialize() {
        CorePlugin.getInstance().getServer().getScheduler().scheduleSyncRepeatingTask(CorePlugin.getInstance(), this, 1, 1);
    }

    @Override
    public void run() {
        BossBarsManager.getBossbars().values().forEach(bossBarsObject -> {
            if(bossBarsObject.getTimeEnd() == 0L){
                bossBarsObject.updateName();
                bossBarsObject.updateProgressAtPct();
                bossBarsObject.update();
            } else if(bossBarsObject.getTimeEnd() >= System.currentTimeMillis()){
                bossBarsObject.updateName();
                bossBarsObject.updateProgress();
                bossBarsObject.update();
            }else if(bossBarsObject.getTimeEnd() < System.currentTimeMillis()){
                bossBarsObject.remove();
                BossBarsManager.removeBossBar(bossBarsObject);
            }
        });
    }
}"
MKxj0Lh1,Untitled,polarnyy,Java,Thursday 4th of July 2024 09:34:33 AM CDT,"@Setter
public class BossBarsObject {

    private String name;
    private UUID uuid;
    private String playerName;
    private BossBarType bossBarType;
    private BarColor color;
    private BarStyle style;

    private float pct;
    private String title;

    private long timeStart;
    private long timeEnd;

    public BossBarsObject(String name, UUID uuid, String playerName, BossBarType bossBarType, BarColor barColor, BarStyle barStyle, String title, long timeStart, long timeEnd) {
        this.name = name;
        this.uuid = uuid;
        this.playerName = playerName;
        this.bossBarType = bossBarType;
        this.color = barColor;
        this.style = barStyle;
        this.pct = 1.0f;
        this.title = title;
        this.timeStart = timeStart;
        this.timeEnd = timeEnd;
    }

    public void update(){
        if(!bossBarType.equals(BossBarType.GLOBAL))return;
        API.getInstance().getNatsMessengerAPI().sendPacket(PacketType.SYNCHRONISE_BOSSBAR_CHANNEL.getName(), new BossBarSynchroniseRequestPacket(serverName, ""UPDATE"", new Gson().toJson(this)));
    }


    public void getProgress() {
        long currentTime = System.currentTimeMillis();

        if (timeEnd > timeStart) {
            long remainingTime = timeEnd - currentTime;
            long totalDuration = timeEnd - timeStart;

            pct = Math.max(0.0f, Math.min(1.0f, (float) remainingTime / totalDuration));
        } else {
            // If timeEnd is not greater than timeStart, set progress to 1.0 (100%)
            pct = 1.0f;
        }
    }

    public void updateProgress(float pctSet){
        this.pct = pctSet;
        PacketDataSerializer packet = BossBarBuilder
                .updateProgress(uuid)
                .progress(pctSet)
                .buildPacket()
                .serialize();
        setPacket(packet);
    }

    public void updateStyle(){
        PacketDataSerializer packet = BossBarBuilder
                .updateStyle(uuid)
                .color(color)
                .style(style)
                .buildPacket()
                .serialize();
        setPacket(packet);
    }
    public void updateProgress() {
        getProgress();
        PacketDataSerializer packet = BossBarBuilder
                .updateProgress(uuid)
                .progress(pct)
                .buildPacket()
                .serialize();
        setPacket(packet);
    }

    public void updateProgressAtPct() {
        PacketDataSerializer packet = BossBarBuilder
                .updateProgress(uuid)
                .progress(pct)
                .buildPacket()
                .serialize();
        setPacket(packet);
    }

    public void updateName() {
        PacketDataSerializer packet = BossBarBuilder.updateTitle(this.uuid).title(TextComponent.fromLegacyText(colored(this.title).replace(""{TIME}"", DataUtil.secondsToString(this.timeEnd, false)))).buildPacket().serialize();
        setPacket(packet);
    }

    public void updateName(String s) {
        this.title = s;
        PacketDataSerializer packet = BossBarBuilder.updateTitle(this.uuid).title(TextComponent.fromLegacyText(colored(s).replace(""{TIME}"", DataUtil.secondsToString(this.timeEnd, false)))).buildPacket().serialize();
        setPacket(packet);
    }


    public void set(){
        PacketDataSerializer packet = BossBarBuilder
                .add(uuid)
                .style(style)
                .color(color)
                .progress(pct)
                .title(TextComponent.fromLegacyText(colored(title.replace(""{TIME}"", DataUtil.secondsToString(timeEnd, false)))))
                .buildPacket().serialize();

        setPacket(packet);
    }


    public void set(String namePlayer){
        PacketDataSerializer packet = BossBarBuilder
                .add(uuid)
                .style(style)
                .color(color)
                .progress(getPct())
                .title(TextComponent.fromLegacyText(colored(title.replace(""{TIME}"", DataUtil.secondsToString(timeEnd, false)))))
                .buildPacket().serialize();

        setPacket(packet, namePlayer);
    }




    public void remove(){
        BossBarType type = this.bossBarType;
        switch (type){
            case GLOBAL:
                PacketDataSerializer packet = BossBarBuilder.
                        remove(uuid)
                        .buildPacket()
                        .serialize();
                setPacket(packet);
                break;
            case SERVER:
                Bukkit.getOnlinePlayers().forEach(player -> removePlayerBossBar(player.getName()));
                break;
            case PLAYER:
                removePlayerBossBar(playerName);
                break;
        }
    }

    public void removePlayer(String playerName){
        BossBarType type = this.bossBarType;
        switch (type){
            case GLOBAL:
                PacketDataSerializer packet = BossBarBuilder.
                        remove(uuid)
                        .buildPacket()
                        .serialize();
                setPacket(packet, playerName);
                break;
            case SERVER:
            case PLAYER:
                removePlayerBossBar(playerName);
                break;
        }
    }

    public boolean isEnd(){
        return getTimeEnd() < System.currentTimeMillis() || (getTimeEnd() != 0L);
    }



    public void setPacket(PacketDataSerializer packet){
        BossBarType type = this.bossBarType;
        switch (type){
            case GLOBAL:
                Bukkit.getOnlinePlayers().forEach(player -> setBossBar(packet, player.getName()));
                break;
            case SERVER:
                Bukkit.getOnlinePlayers().forEach(player -> setBossBar(packet, player.getName()));
            case PLAYER:
                setBossBar(packet, playerName);
        }
    }




    public void setPacket(PacketDataSerializer packet, String name){
        setBossBar(packet, name);
    }



    public void removePlayerBossBar(String playerNamed){
        setBossBar(BossBarBuilder.remove(uuid).buildPacket().serialize(), playerNamed);
        API.getInstance().getNatsMessengerAPI().sendPacket(PacketType.SYNCHRONISE_BOSSBAR_CHANNEL.getName(), new BossbarRemovePlayerRequestPacket(this.uuid.toString(), playerNamed));
    }
}"
QXsrbCqe,Untitled,polarnyy,Java,Thursday 4th of July 2024 09:34:16 AM CDT,"public class BossBarsManager {

    private static final ConcurrentHashMap<UUID, BossBarsObject> bossbars = new ConcurrentHashMap<>();

    public static ConcurrentHashMap<UUID, BossBarsObject> getBossbars() {return bossbars;}

    public static BossBarsObject getBossBarByUID(UUID uuid) {
        return bossbars.values().stream().filter(sObject -> sObject.getUuid().equals(uuid)).findFirst().orElse(null);
    }

    public static BossBarsObject getBossBarByName(String name) {
        return bossbars.values().stream().filter(sObject -> sObject.getName().equals(name)).findFirst().orElse(null);
    }

    public static void createBossBarGlobal(UUID uuid, String name, String color, String style, String title, long timeEnd){
        if(getBossBarByUID(uuid) != null)return;
        if(getBossBarByName(name) != null)return;
        BossBarsObject bossBarsObject = new BossBarsObject(name, uuid, ""all"", BossBarType.GLOBAL, BarColor.fromString(color), BarStyle.fromString(style), title, System.currentTimeMillis(), timeEnd);
        bossbars.put(bossBarsObject.getUuid(), bossBarsObject);
        bossBarsObject.set();
    }


    public static void createBossBarServer(String name, String color, String style, String title, long timeEnd){
        UUID uuid = UUID.randomUUID();
        if(getBossBarByUID(uuid) != null)return;
        if(getBossBarByName(name) != null)return;
        BossBarsObject bossBarsObject = new BossBarsObject(name, uuid, ""all"", BossBarType.SERVER, BarColor.fromString(color), BarStyle.fromString(style), title, System.currentTimeMillis(), timeEnd);
        bossbars.put(bossBarsObject.getUuid(), bossBarsObject);
        bossBarsObject.set();
    }


    public static void createBossBarPlayer(String name, String playerName, String color, String style, String title, long timeEnd){
        UUID uuid = UUID.randomUUID();
        if(getBossBarByUID(uuid) != null)return;
        if(getBossBarByName(name) != null)return;
        BossBarsObject bossBarsObject = new BossBarsObject(name, uuid, playerName, BossBarType.PLAYER, BarColor.fromString(color), BarStyle.fromString(style), title, System.currentTimeMillis(), timeEnd);
        bossbars.put(bossBarsObject.getUuid(), bossBarsObject);
        bossBarsObject.set();
    }

    public static void createBossBarPlayer(String name, String playerName, String color, String style, String title, long timeStart, long timeEnd){
        UUID uuid = UUID.randomUUID();
        if(getBossBarByUID(uuid) != null)return;
        if(getBossBarByName(name) != null)return;
        BossBarsObject bossBarsObject = new BossBarsObject(name, uuid, playerName, BossBarType.PLAYER, BarColor.fromString(color), BarStyle.fromString(style), title, timeStart, timeEnd);
        bossbars.put(bossBarsObject.getUuid(), bossBarsObject);
        bossBarsObject.set();
    }


    public static void removeBossNats(BossBarsObject bossBarsObject){
        bossbars.remove(bossBarsObject.getUuid());
        bossBarsObject.remove();
    }

    public static void replaceNats(BossBarsObject bossBarsObject) {
        if (getBossBarByName(bossBarsObject.getName()) == null && getBossBarByUID(bossBarsObject.getUuid()) == null) {
            bossbars.put(bossBarsObject.getUuid(), bossBarsObject);
            bossBarsObject.set();
        }
    }

    public static void removeBossBar(BossBarsObject bossBarObject) {
        if(bossBarObject.getBossBarType().equals(BossBarType.GLOBAL)) {
            API.getInstance().getNatsMessengerAPI().sendPacket(PacketType.SYNCHRONISE_BOSSBAR_CHANNEL.getName(), new BossBarSynchroniseRequestPacket(serverName, ""REMOVE"", new Gson().toJson(bossBarObject)));
        }
        bossBarObject.remove();
        bossbars.remove(bossBarObject.getUuid());
    }


    public static void playerJoinBossBar(Player player){
        bossbars.values().forEach(bossBarObject -> {
            if (bossBarObject.getBossBarType().equals(BossBarType.GLOBAL)) {
                Bukkit.getScheduler().runTaskLater(CorePlugin.getInstance(), () -> {
                    if(bossBarObject.getTimeEnd() > System.currentTimeMillis()) {
                        if(bossBarObject.getTimeEnd()-System.currentTimeMillis() < 1000L)return;
                        bossBarObject.set(player.getName());
                    }
                }, 25L);
            } else {
                bossBarObject.removePlayer(player.getName());
            }
        });
    }

    public static void playerQuitBossBar(Player player){
        bossbars.values().forEach(bossBarsObject -> {
            bossBarsObject.removePlayer(player.getName());
        });
    }

}
"
rJkZD1in,XML Downloads,FabianBarth,XML,Thursday 4th of July 2024 09:30:57 AM CDT,"<?xml version=""1.0""?>
<response>
    <item key=""0"">
        <id>19698</id>
        <title>Eckpunkte einer Gesch&#xE4;ftsordnung des Betriebsrats</title>
        <description></description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/betriebsrat.de/eckpunkte_einer_geschaeftsordnung_des_betriebsrats_2021.pdf
        </url>
        <keywords>Beitriebsratsvorsitz;Betriebsratsvorsitzender; Betriebsratsvorsitzende;Betriebsratssitzung</keywords>
    </item>
    <item key=""1"">
        <id>19947</id>
        <title>Bestellformular B&#xFC;roausstattung</title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/Mitteilung-an-die-Geschaeftsleitung.docx</url>
        <keywords/>
    </item>
    <item key=""2"">
        <id>19960</id>
        <title>Protokoll der Betriebsratssitzung - Muster</title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/Musterprotokoll.docx</url>
        <keywords/>
    </item>
    <item key=""3"">
        <id>19961</id>
        <title>Anwesenheitsliste zur BR-Sitzung - Muster</title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/Anwesenheitsliste-zur-BR-Sitzung.docx</url>
        <keywords/>
    </item>
    <item key=""4"">
        <id>20145</id>
        <title>Das Logo des Canon Gesamtbetriebsrats &#x2013; so werden Mitteilungen des GBRs von jedem Mitarbeiter auf
            den ersten Blick erkannt
        </title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/01--GBR-Logo.pdf</url>
        <keywords/>
    </item>
    <item key=""5"">
        <id>20146</id>
        <title>Auch die regionalen Betriebsr&#xE4;te haben eigene Logos &#x2013; anhand farblicher Unterschiede werden
            die Regionen unterteilt, dennoch wurde ein einheitlicher, professioneller Stil beibehalten
        </title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/02-CBS-BR-Logo.pdf</url>
        <keywords/>
    </item>
    <item key=""6"">
        <id>20147</id>
        <title>Von &#x201E;Moin, Moin!&#x201C; bis &#x201E;Gr&#xFC;&#xDF; Gott!&#x201C; &#x2013; der Gesamtbetriebsrat
            stellt sich auf sympathische Weise vor
        </title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/03-CBS-Begruessung.pdf</url>
        <keywords/>
    </item>
    <item key=""7"">
        <id>20148</id>
        <title>&#xDC;ber die eigene Zeitung &#x201E;Betriebsratschlag&#x201C; werden alle Mitarbeiter regelm&#xE4;&#xDF;ig
            &#xFC;ber die Arbeit des Gremiums und ihre Erfolge informiert
        </title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/04-Canon-Zeitung-01.pdf</url>
        <keywords/>
    </item>
    <item key=""8"">
        <id>20149</id>
        <title>Regional informieren die Betriebsratsgremien &#xFC;ber regelm&#xE4;&#xDF;ige Newsletter &#xFC;ber ihre
            Arbeit
        </title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/06-Newsletter-Nord.pdf</url>
        <keywords/>
    </item>
    <item key=""9"">
        <id>20150</id>
        <title>Au&#xDF;erdem werden f&#xFC;r Betriebsversammlungen der regionalen Gremien einheitliche
            Powerpointvorlagen genutzt
        </title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/07-Praesentation-West-.pdf</url>
        <keywords/>
    </item>
    <item key=""10"">
        <id>20226</id>
        <title>Mobbing-Report</title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/Mobbing-Report-2002.pdf</url>
        <keywords/>
    </item>
    <item key=""11"">
        <id>20228</id>
        <title>Brosch&#xFC;re der BAuA (Bundesanstalt f&#xFC;r Arbeitsschutz und Arbeitsmedizin) und der INQA: ""Wenn aus
            Kollegen Feinde werden... - Der Ratgeber zum Umgang mit Mobbing""
        </title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/Ratgeber-zum-Umgang-mit-Mobbing.pdf</url>
        <keywords/>
    </item>
    <item key=""12"">
        <id>20229</id>
        <title>Brosch&#xFC;re der INQA: ""Hilfe gegen Mobbing am Arbeitsplatz - So beenden Sie das Mobbing jetzt!""
        </title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/INQA-Hilfe-gegen-Mobbing-am-Arbeitsplatz.pdf</url>
        <keywords/>
    </item>
    <item key=""13"">
        <id>20230</id>
        <title>Brosch√ºre der INQA: ""Unterweisung: F√ºhren, Beteiligen, Erkennen und Vermindern von psychischen Belastungen""</title>
        <image>https://ifb-relaunch.ddev.site/Bilder/bild.jpeg</image>
        <description/>
        <links>
            <link>
                <cta>PDF</cta>
                <url>https://ifb-relaunch.ddev.site/Artikel/Zentralarchiv/Dokumente/INQA-Unterweisung.pdf</url>
            </link>
            <link>
                <cta>DOCX</cta>
                <url>https://ifb-relaunch.ddev.site/Artikel/Zentralarchiv/Dokumente/INQA-Unterweisung.docx</url>
            </link>
            <link>
                <cta>SBV Wahlhilfe</cta>
                <url>https://someexternaldomain/sbv-wahlhilfe</url>
            </link>
        </links>
        <keywords/>
    </item>
    <item key=""14"">
        <id>20292</id>
        <title>Neue Mustergesch&#xE4;ftsordnung 2021</title>
        <description/>
        <cta/>
        <form>0</form>
        <url>
            https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/Eckpunkte-einer-Geschaeftsordnung-des-Betriebsrats-2021.pdf
        </url>
        <keywords/>
    </item>
    <item key=""15"">
        <id>20346</id>
        <title>Download: Einladung der Wirtschaftsausschuss-Mitglieder mit Tagesordnung</title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/Muster-Einladung-WA-Sitzung-Mitglieder.docx</url>
        <keywords/>
    </item>
    <item key=""16"">
        <id>20348</id>
        <title>Download: Wirtschaftsausschuss-Sitzung - Einladung an den Unternehmer</title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Artikel/Zentralarchiv/Dokumente/Muster-Einladung-WA-Sitzung-Unternehmer.docx</url>
        <keywords/>
    </item>
    <item key=""17"">
        <id>21125</id>
        <title>FAQs Seminare mit Pferden</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Betriebsratsvorsitz/faq-ifb-seminare-mit-pferd.pdf</url>
        <keywords/>
    </item>
    <item key=""18"">
        <id>21126</id>
        <title>Betriebsratsbeschluss Formular</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BetrVg/Betriebsratsbeschluss_Formular.pdf</url>
        <keywords>Betriebsratssitzung;Betriebsrat;Neu im Betriebsrat; Neu im BR;</keywords>
    </item>
    <item key=""19"">
        <id>21127</id>
        <title>Schulungsanspruch Checkliste</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BetrVg/ifb_checkliste_schulungsanspruch_neu.pdf</url>
        <keywords>Betriebsrat;Neu im Betriebsrat; Schulungsbesuch;&#xA7;37;Neu im BR;</keywords>
    </item>
    <item key=""20"">
        <id>21128</id>
        <title>Checkliste zur Feststellung einer Unternehmenskrise</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Checkliste_2_zur_Feststellung_einer_Unternehmenskrise.pdf</url>
        <keywords>Wirtschaftsausschuss;'Umstrukturierung;Betriebs&#xE4;nderung</keywords>
    </item>
    <item key=""21"">
        <id>21129</id>
        <title>Checkliste f&#xFC;r den Abschluss eines Sozialplans</title>
        <description></description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Checkliste_3_fuer_den_Abschluss_eines_Sozialplans.pdf</url>
        <keywords>Sozialplan;Interessenausgleich;Umstrukturierung;Unternehmenskrise;</keywords>
    </item>
    <item key=""22"">
        <id>21130</id>
        <title>Checkliste Anh&#xF6;rung des Betriebsrats bei K&#xFC;ndigung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Checkliste_4_Anhoerung_des_BR_bei_Kuendigung.pdf</url>
        <keywords>Arbeitsrecht; Betriebsrat;</keywords>
    </item>
    <item key=""23"">
        <id>21131</id>
        <title>Checkliste Abfindung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Checkliste_5_Abfindung.pdf</url>
        <keywords>K&#xFC;ndigung;Umstruktuierung;Sozialplan;Interessenausgleich</keywords>
    </item>
    <item key=""24"">
        <id>21132</id>
        <title>Checkliste zur Gestaltung der Betriebsvereinbarung</title>
        <description></description>
        <cta>PDF</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/BR-Themen/NEU_Checkliste%20zur%20Gestaltung%20einer%20Betriebsvereinbarung.pdf
        </url>
        <keywords>Betriebsrat;Neu im Betriebsrat;Neu im BR;</keywords>
    </item>
    <item key=""25"">
        <id>21133</id>
        <title>Muster Betriebsvereinbarung Urlaubsgrunds&#xE4;tze</title>
        <description/>
        <cta>PDf</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Muster_2_BV_Urlaubsgrundsaetze.pdf</url>
        <keywords>Urlaub;Betriebsrat;Betriebsratsvorsitzender</keywords>
    </item>
    <item key=""26"">
        <id>21134</id>
        <title>Muster Interessenausgleich Sozialplan Umzug</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Muster_3_Interessenausgleich_Sozialplan_Umzug.d-205.pdf</url>
        <keywords/>
    </item>
    <item key=""27"">
        <id>21135</id>
        <title>Muster Eckpunkte einer BV</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Muster_4_Eckpunkte_einer_Betriebsvereinbarung.pdf</url>
        <keywords/>
    </item>
    <item key=""28"">
        <id>21136</id>
        <title>Musterformular BV Kurzarbeit</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Musterformular_4_BV_Kurzarbeit.pdf</url>
        <keywords/>
    </item>
    <item key=""29"">
        <id>21137</id>
        <title>Musterformular BV betriebsbedingte K&#xFC;ndigung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Musterformular_5_BV_Betriebsbedingte_Kuendigung.pdf</url>
        <keywords/>
    </item>
    <item key=""30"">
        <id>21138</id>
        <title>Antrag auf Kurzarbeitergeld</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/antrag-kug107_ba015344.pdf</url>
        <keywords>Kurzarbeit</keywords>
    </item>
    <item key=""31"">
        <id>21139</id>
        <title>Anzeige Kurzarbeitergeld</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/anzeige-kug101_ba013134.pdf</url>
        <keywords>Kurzarbeit</keywords>
    </item>
    <item key=""32"">
        <id>21140</id>
        <title>Merkblatt Kurzarbeit</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/merkblatt-8a-kurzarbeitergeld_ba015385.pdf</url>
        <keywords/>
    </item>
    <item key=""33"">
        <id>21141</id>
        <title>Tabelle zur Berechnung Kug</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/kug050-2016_ba014803.pdf</url>
        <keywords/>
    </item>
    <item key=""34"">
        <id>21142</id>
        <title>Kurzarbeit beantragen</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/dok_ba039765.pdf</url>
        <keywords/>
    </item>
    <item key=""35"">
        <id>21143</id>
        <title>BV zur Einf&#xFC;hrung von Kurzarbeit</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/Betriebsvereinbarung_zur_Einfuehrung_von_Kurzarbeit_1.doc</url>
        <keywords>Umstrukturierung;Betriebs&#xE4;nderung; Unternehmenskrise</keywords>
    </item>
    <item key=""36"">
        <id>21144</id>
        <title>Betriebsvereinbarung Kurzarbeit Kennametall</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/BV_Kurzarbeit_Kennametall.doc</url>
        <keywords>Umstrukturierung;Unternehmenskrise;Betriebs&#xE4;nderung</keywords>
    </item>
    <item key=""37"">
        <id>21145</id>
        <title>Betriebsvereinbarung Teilzeit</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/BV_Teilzeit.doc</url>
        <keywords>Arbeitszeit;</keywords>
    </item>
    <item key=""38"">
        <id>21146</id>
        <title>Gesamtbetriebsvereinbarung Arbeitszeit bei Dienstreisen</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/BR-Themen/GBV_Arbeitszeit_bei_Dienstreisen.doc</url>
        <keywords>Gesamtbetriebsrat;Konzernbetriebsrat</keywords>
    </item>
    <item key=""39"">
        <id>21147</id>
        <title>Argumente f&#xFC;r Seminarbesuch</title>
        <description>Hier haben wir einige Argumentationshilfen f&#xFC;r die Notwendigkeit der JAV-Schulungen
            zusammengefasst.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/argumente-fuer-sembesuch.pdf</url>
        <keywords/>
    </item>
    <item key=""40"">
        <id>21148</id>
        <title>Beschluss zur Aussetzung eines Betriebsratsbeschlusses</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/Beschluss_zur_Aussetzung_eines_Betriebsratsbeschlusses.pdf</url>
        <keywords/>
    </item>
    <item key=""41"">
        <id>21149</id>
        <title>JA Versammlung Einladung des Arbeitgebers im Anschluss an Betriebsversammlung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/JAV/JA-Versammlung_Einladung_des_Arbeitgebers_im_Anschluss_an_Betriebsversammlung.pdf
        </url>
        <keywords/>
    </item>
    <item key=""42"">
        <id>21150</id>
        <title>JA Versammlung Einladung und Antrag auf Zustimmung des Betriebsrats im Anschluss an Betriebsversammlung
        </title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/JAV/JA-Versammlung_Einladung_und_Antrag_auf_Zustimmung_des_Betriebsrats_im_Anschluss_an_Betriebsversammlung.pdf
        </url>
        <keywords/>
    </item>
    <item key=""43"">
        <id>21151</id>
        <title>JA Versammlung Einladung der jugendlichen Arbeitnehmer und zu ihrer Ausbildung besch&#xE4;ftigten</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/JAV/ja-versammlung-einladung-der-jugendlichen-arbeitnehmer-und-zu-ihrer-ausbildung-beschaeftigten.pdf
        </url>
        <keywords/>
    </item>
    <item key=""44"">
        <id>21152</id>
        <title>Checkliste JAV Sitzung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/JAV-Sitzung_Checkliste.pdf</url>
        <keywords/>
    </item>
    <item key=""45"">
        <id>21153</id>
        <title>JAV Sitzung Unterrichtung des Arbeitgebers</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/JAV-Sitzung_Unterrichtung_des_Arbeitgebers.pdf</url>
        <keywords/>
    </item>
    <item key=""46"">
        <id>21154</id>
        <title>JAV Sitzung Einladung des Betriebsrats</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/JAV-Sitzung_Einladung_des_Betriebsrats.pdf</url>
        <keywords/>
    </item>
    <item key=""47"">
        <id>21155</id>
        <title>JAV Sitzung Einladung der JAV-Mitglieder</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/jav-sitzung-einladung-der-jav-mitglieder.pdf</url>
        <keywords/>
    </item>
    <item key=""48"">
        <id>21156</id>
        <title>JAV &#xDC;bernahmeanspruch</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/jav-uebernahmeanspruch.pdf</url>
        <keywords/>
    </item>
    <item key=""49"">
        <id>21157</id>
        <title>Stimmzettel Personenwahl vereinfacht</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/stimmzettel-personenwahl-vereinfacht.doc</url>
        <keywords/>
    </item>
    <item key=""50"">
        <id>21158</id>
        <title>Stimmzettel Verh&#xE4;ltniswahl normal</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/stimmzettel-verhaeltniswahl-normal.doc</url>
        <keywords/>
    </item>
    <item key=""51"">
        <id>21159</id>
        <title>Vorschlagsliste normal</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/vorschlagsliste-normal.doc</url>
        <keywords/>
    </item>
    <item key=""52"">
        <id>21160</id>
        <title>Wahlausschreiben normales Wahlverfahren</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/wahlausschreiben-normales-wahlverfahren.doc</url>
        <keywords/>
    </item>
    <item key=""53"">
        <id>21161</id>
        <title>Wahlausschreiben vereinfachtes Wahlverfahren</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/wahlausschreiben-vereinfachtes-wahlverfahren.doc</url>
        <keywords/>
    </item>
    <item key=""54"">
        <id>21162</id>
        <title>Wahlvorschlag vereinfacht</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/wahlvorschlag-vereinfacht.doc</url>
        <keywords/>
    </item>
    <item key=""55"">
        <id>21163</id>
        <title>Checkliste: Konfliktl&#xF6;sungsschritte</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/Checkliste_Rhetorik_5.pdf</url>
        <keywords/>
    </item>
    <item key=""56"">
        <id>21164</id>
        <title>Checkliste: Aufbau einer &#xD6;A-Konzeption</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Checkliste%20%C3%96A-Konzeption.pdf</url>
        <keywords/>
    </item>
    <item key=""57"">
        <id>21165</id>
        <title>Checkliste: Moderation</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/Checkliste_Rhetorik_2.pdf</url>
        <keywords/>
    </item>
    <item key=""58"">
        <id>21166</id>
        <title>Checkliste: Phasen der Teamentwicklung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/Checkliste_Rhetorik_3.pdf</url>
        <keywords/>
    </item>
    <item key=""59"">
        <id>21167</id>
        <title>Checkliste: Gespr&#xE4;chsf&#xFC;hrung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Checkliste_Gespr%C3%A4chsf%C3%BChrung.pdf</url>
        <keywords/>
    </item>
    <item key=""60"">
        <id>21168</id>
        <title>Anleitung Online-Seminare</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Online-Seminare/anleitung_online_seminar.pdf</url>
        <keywords/>
    </item>
    <item key=""61"">
        <id>21169</id>
        <title>Schwerbehindertenkartei</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/SBV_Schwerbehindertenkartei.pdf</url>
        <keywords/>
    </item>
    <item key=""62"">
        <id>21170</id>
        <title>Schweigepflicht-Endbindungserkl&#xE4;rung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Mustervorlage_Schweigepflichtserklaerung_ifb_SBV.pdf</url>
        <keywords/>
    </item>
    <item key=""63"">
        <id>21171</id>
        <title>Die ersten 10 Schritte ins SBV-Amt</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Flyer_10-Schritte-ins-SBV-Amt.pdf</url>
        <keywords/>
    </item>
    <item key=""64"">
        <id>21172</id>
        <title>SBV Wahlverfahren</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/ifb_sbv_wahlverfahren.pdf</url>
        <keywords/>
    </item>
    <item key=""65"">
        <id>21173</id>
        <title>Poster AG Pflichten f&#xFC;r Stellenbesetzung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/ifb_poster_ag-pflichten-fuer-stellenbesetzung.pdf</url>
        <keywords/>
    </item>
    <item key=""66"">
        <id>21174</id>
        <title>Hygienekonzept</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/hygienekonzept-2110.pdf</url>
        <keywords/>
    </item>
    <item key=""67"">
        <id>21175</id>
        <title>Schulungsplan</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb-schulungsplan.pdf</url>
        <keywords/>
    </item>
    <item key=""68"">
        <id>21176</id>
        <title>Formular Gruppenanmeldung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb_gruppenanmeldung.pdf</url>
        <keywords/>
    </item>
    <item key=""69"">
        <id>21177</id>
        <title>JAV Mitteilung an Gesch&#xE4;ftsleitung</title>
        <description>Muster zur Unterrichtung des Arbeitgebers zum Betriebsratsbeschluss zur Entsendung der JAV
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb_Mitteilung_an_GL.pdf</url>
        <keywords/>
    </item>
    <item key=""70"">
        <id>21178</id>
        <title>Mitteilung an Gesch&#xE4;ftsleitung</title>
        <description>Muster zur Unterrichtung des Arbeitgebers zum Betriebsratsbeschluss</description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb_Mitteilung_an_GL.pdf</url>
        <keywords/>
    </item>
    <item key=""71"">
        <id>21179</id>
        <title>Formular Personalrat Anmeldung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb_seminaranmeldung.pdf</url>
        <keywords/>
    </item>
    <item key=""72"">
        <id>21180</id>
        <title>Formular Seminaranmeldung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb_seminaranmeldung.pdf</url>
        <keywords/>
    </item>
    <item key=""73"">
        <id>21181</id>
        <title>Formular JAV Anmeldung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb_seminaranmeldung.pdf</url>
        <keywords/>
    </item>
    <item key=""74"">
        <id>21182</id>
        <title>SBV Mitteilung an Gesch&#xE4;ftsleitung</title>
        <description>Muster zur Unterrichtung des Arbeitgebers zum SBV-Beschluss &#xFC;ber den Besuch einer Schulung.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/SBV_ifb_Mitteilung_an_GL_2021.pdf</url>
        <keywords/>
    </item>
    <item key=""75"">
        <id>21183</id>
        <title>Formular SBV Anmeldung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb_seminaranmeldung.pdf</url>
        <keywords/>
    </item>
    <item key=""76"">
        <id>21184</id>
        <title>BV Betriebsurlaub</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_Betriebsurlaub.doc</url>
        <keywords/>
    </item>
    <item key=""77"">
        <id>21185</id>
        <title>BV Chancengleichheit</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_Chancengleichheit.doc</url>
        <keywords/>
    </item>
    <item key=""78"">
        <id>21186</id>
        <title>BV EDV</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_EDV.doc</url>
        <keywords/>
    </item>
    <item key=""79"">
        <id>21187</id>
        <title>BV Leiharbeitnehmer</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_Leiharbeitnehmer.doc</url>
        <keywords/>
    </item>
    <item key=""80"">
        <id>21188</id>
        <title>BV SAP</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_SAP.doc</url>
        <keywords/>
    </item>
    <item key=""81"">
        <id>21189</id>
        <title>BV Servicechecks</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_Servicechecks.doc</url>
        <keywords/>
    </item>
    <item key=""82"">
        <id>21190</id>
        <title>BV Teilnahme an BR-Schulungen</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_Teilnahme_an_BR_Schulungen.doc</url>
        <keywords/>
    </item>
    <item key=""83"">
        <id>21191</id>
        <title>BV Telefonanlagen</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_Telefonanlagen.doc</url>
        <keywords/>
    </item>
    <item key=""84"">
        <id>21192</id>
        <title>BV Urlaubsgrunds&#xE4;tze 2</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_Urlaubsgrundsaetze_2.doc</url>
        <keywords/>
    </item>
    <item key=""85"">
        <id>21193</id>
        <title>BV Urlaubsrahmenplanung</title>
        <description/>
        <cta>DOC</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/BV_Urlaubsrahmenplanung.doc</url>
        <keywords/>
    </item>
    <item key=""86"">
        <id>21828</id>
        <title>Checkliste: Erfolgreich beraten</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Checkliste_Erfolgreich%20beraten.pdf</url>
        <keywords/>
    </item>
    <item key=""87"">
        <id>21836</id>
        <title>Checkliste: Betriebsversammlung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Checkliste-Betriebsversammlung.pdf</url>
        <keywords/>
    </item>
    <item key=""88"">
        <id>21837</id>
        <title>Checkliste: Redigieren</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/Checkliste-Redigieren.pdf</url>
        <keywords/>
    </item>
    <item key=""89"">
        <id>21839</id>
        <title>Musterprotokoll</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Organisation%20der%20BR-Arbeit/Musterprotokoll.docx</url>
        <keywords/>
    </item>
    <item key=""90"">
        <id>21840</id>
        <title>Anwesenheitsliste zur BR-Sitzung</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Organisation%20der%20BR-Arbeit/Anwesenheitsliste-zur-BR-Sitzung.docx</url>
        <keywords/>
    </item>
    <item key=""91"">
        <id>21841</id>
        <title>Mitteilung an die Gesch&#xE4;ftsleitung</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/Organisation%20der%20BR-Arbeit/Mitteilung_an_die_Geschaeftsleitung%20%281%29.docx
        </url>
        <keywords/>
    </item>
    <item key=""92"">
        <id>21842</id>
        <title>Muster Stellenbeschreibung Assistenz</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Organisation%20der%20BR-Arbeit/Muster-Stellenbeschreibung-Assistenz.pdf</url>
        <keywords/>
    </item>
    <item key=""93"">
        <id>21939</id>
        <title>Ihre ersten Schritte auf dem Weg zur Betriebsvereinbarung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/Homeoffice.pdf</url>
        <keywords/>
    </item>
    <item key=""94"">
        <id>21940</id>
        <title>Wahl der Arbeitnehmervertreter in den Aufsichtsrat</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/Wahl_der_Arbeitnehmervertreter_in_den_Aufsichtsrat.pdf</url>
        <keywords/>
    </item>
    <item key=""95"">
        <id>21941</id>
        <title>Betriebsratswahl in Zeiten der Pandemie</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/Betriebsratswahl_in_Zeiten_der_Pandemie.pdf</url>
        <keywords/>
    </item>
    <item key=""96"">
        <id>21942</id>
        <title>ifb-Ratgeber: In 3 Schritten zum BR-B&#xFC;ro</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/BR_Buero_gruenden.pdf</url>
        <keywords/>
    </item>
    <item key=""97"">
        <id>21944</id>
        <title>ifb-Ratgeber: Erfolgreiches Konfliktmanagement</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/Erfolgreiches_Konfliktmanagement.pdf</url>
        <keywords/>
    </item>
    <item key=""98"">
        <id>21946</id>
        <title>Datenschutz im Betriebsrat</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/Datenschutz_im_Betriebsrat.pdf</url>
        <keywords/>
    </item>
    <item key=""99"">
        <id>21947</id>
        <title>ifb-Ratgeber Kommunikation und Rhetorik</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/Rhetorik.pdf</url>
        <keywords/>
    </item>
    <item key=""100"">
        <id>21948</id>
        <title>Die Gr&#xFC;ndung eines Betriebsrats</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/BRWahl_BR_gruenden.pdf</url>
        <keywords/>
    </item>
    <item key=""101"">
        <id>21950</id>
        <title>ifb-Mini-Lexikon: DSGVO</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Ratgeber/Datenschutz_Lexikon.pdf</url>
        <keywords/>
    </item>
    <item key=""102"">
        <id>21953</id>
        <title>Checkliste Rollendefinitionen</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Betriebsratsvorsitz/Checkliste-Rollendefinitionen.pdf</url>
        <keywords>Betriebsratsvorsitz, Betriebsratsvorsitzender, Betriebsratsvorsitzende;BRV</keywords>
    </item>
    <item key=""103"">
        <id>21958</id>
        <title>Checkliste Projektmanagement</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Organisation%20der%20BR-Arbeit/Checkliste_Projektmanagement.pdf</url>
        <keywords/>
    </item>
    <item key=""104"">
        <id>22088</id>
        <title>Einladung zur SBV Versammlung</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/21362-1070_ifb_Tool_SB_Poster_A3_rz_x1a.pdf</url>
        <keywords/>
    </item>
    <item key=""105"">
        <id>22089</id>
        <title>SBV Smiley</title>
        <description/>
        <cta>JPG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/sbv_smiley_reg_rgb.png</url>
        <keywords/>
    </item>
    <item key=""106"">
        <id>22090</id>
        <title>T&#xFC;rposter</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/21362-1079_ifb_tuerposter_sbv_seminar_a3.pdf</url>
        <keywords/>
    </item>
    <item key=""107"">
        <id>22091</id>
        <title>Ordnerlabel</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/21632-1185_ifb_sbv_ordnerruecken_kombi_rz_x1a.pdf</url>
        <keywords/>
    </item>
    <item key=""108"">
        <id>22092</id>
        <title>&#xDC;berblick zu den Pflichten des AGs bei Stellenbesetzungen nach SGB IX</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/21362-991_ifb_poster_ag-pflichten_stellenbesetzung_rz_lowres_ch_lo.pdf
        </url>
        <keywords/>
    </item>
    <item key=""109"">
        <id>22094</id>
        <title>T&#xFC;rh&#xE4;nger</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/ifb_SBV_Tuerhaenger.pdf</url>
        <keywords/>
    </item>
    <item key=""110"">
        <id>22095</id>
        <title>Bildschirmschoner Panorama</title>
        <description/>
        <cta>JPG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/ifb_SBV_Screensaver_1.jpg</url>
        <keywords/>
    </item>
    <item key=""111"">
        <id>22096</id>
        <title>Bildschirmschoner Blume</title>
        <description/>
        <cta>JPG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/ifb_SBV_Screensaver_2.jpg</url>
        <keywords/>
    </item>
    <item key=""112"">
        <id>22097</id>
        <title>Bildschirmschoner Luftballon</title>
        <description/>
        <cta>JPG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/ifb_SBV_Screensaver_3.jpg</url>
        <keywords/>
    </item>
    <item key=""113"">
        <id>22098</id>
        <title>Bildschirmschoner Herz</title>
        <description/>
        <cta>JPG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/ifb_SBV_Screensaver_4.jpg</url>
        <keywords/>
    </item>
    <item key=""114"">
        <id>22099</id>
        <title>Bildschirmschoner Pusteblume</title>
        <description/>
        <cta>JPG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/ifb_SBV_Screensaver_5.jpg</url>
        <keywords/>
    </item>
    <item key=""115"">
        <id>22101</id>
        <title>100 Jahre SBV</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_100JahreSBV.png</url>
        <keywords/>
    </item>
    <item key=""116"">
        <id>22102</id>
        <title>Smiley Gedanke</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Gedanke.png</url>
        <keywords/>
    </item>
    <item key=""117"">
        <id>22103</id>
        <title>Smiley Gesund</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_gesund.png</url>
        <keywords/>
    </item>
    <item key=""118"">
        <id>22104</id>
        <title>Smiley Happy</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_happy_N1.png</url>
        <keywords/>
    </item>
    <item key=""119"">
        <id>22105</id>
        <title>Smiley Kaffee</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_kaffee.png</url>
        <keywords/>
    </item>
    <item key=""120"">
        <id>22106</id>
        <title>Smiley Krone</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Krone.png</url>
        <keywords/>
    </item>
    <item key=""121"">
        <id>22107</id>
        <title>Smiley Band</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_neutral_Band.png</url>
        <keywords/>
    </item>
    <item key=""122"">
        <id>22108</id>
        <title>Smiley Gewinner</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_neutral_Gewinner.png</url>
        <keywords/>
    </item>
    <item key=""123"">
        <id>22109</id>
        <title>Smiley Herz</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_neutral_Herz.png</url>
        <keywords/>
    </item>
    <item key=""124"">
        <id>22110</id>
        <title>Smiley Musik</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_neutral_Musik.png</url>
        <keywords/>
    </item>
    <item key=""125"">
        <id>22111</id>
        <title>Smiley Sprechblase</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_neutral_Sprechblase.png</url>
        <keywords/>
    </item>
    <item key=""126"">
        <id>22112</id>
        <title>Smiley News</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_News.png</url>
        <keywords/>
    </item>
    <item key=""127"">
        <id>22113</id>
        <title>Smiley Ostereier</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_ostern_eier.png</url>
        <keywords/>
    </item>
    <item key=""128"">
        <id>22114</id>
        <title>Smiley Ostereier Spruch</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_ostern_eier_spruch.png</url>
        <keywords/>
    </item>
    <item key=""129"">
        <id>22115</id>
        <title>Smiley Osterhase</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_ostern_hase.png</url>
        <keywords/>
    </item>
    <item key=""130"">
        <id>22116</id>
        <title>Ostersmiley mit Spruch</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_ostern_hase_spruch.png</url>
        <keywords/>
    </item>
    <item key=""131"">
        <id>22117</id>
        <title>Smiley Alles Liebe</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Sprechblase_Alles-liebe.png</url>
        <keywords/>
    </item>
    <item key=""132"">
        <id>22118</id>
        <title>Smiley Gute Besserung</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Sprechblase_Gute-Besserung.png</url>
        <keywords/>
    </item>
    <item key=""133"">
        <id>22119</id>
        <title>Smiley Party</title>
        <description/>
        <cta>JPG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/Party-Smiley.jpg</url>
        <keywords/>
    </item>
    <item key=""134"">
        <id>22120</id>
        <title>Smiley Ohrensch&#xFC;tzer</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Ohrenschuetzer.png</url>
        <keywords/>
    </item>
    <item key=""135"">
        <id>22121</id>
        <title>Smiley Winter</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_schal-muetze.png</url>
        <keywords/>
    </item>
    <item key=""136"">
        <id>22122</id>
        <title>Smiley Silvester</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Silvester.png</url>
        <keywords/>
    </item>
    <item key=""137"">
        <id>22123</id>
        <title>Smiley Weihnachten Fl&#xFC;gel</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Weihnacht_Fluegel.png</url>
        <keywords/>
    </item>
    <item key=""138"">
        <id>22124</id>
        <title>Smiley Weihnachtskugeln</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Weihnacht_Kugeln.png</url>
        <keywords/>
    </item>
    <item key=""139"">
        <id>22125</id>
        <title>Smiley Weihnachtsm&#xFC;tze</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Weihnacht_Muetze.png</url>
        <keywords/>
    </item>
    <item key=""140"">
        <id>22126</id>
        <title>Smiley Schlitten</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Weihnacht_Schlitten.png</url>
        <keywords/>
    </item>
    <item key=""141"">
        <id>22127</id>
        <title>Smiley Schnee</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Weihnacht_Schnee.png</url>
        <keywords/>
    </item>
    <item key=""142"">
        <id>22128</id>
        <title>Smiley Xmas</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv_smiley_Weihnacht_Spruch.png</url>
        <keywords/>
    </item>
    <item key=""143"">
        <id>22129</id>
        <title>Smiley Weihnachten</title>
        <description/>
        <cta>PNG</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/ifb_sbv-smiley-Weihnacht-Spruch_deutsch.png</url>
        <keywords/>
    </item>
    <item key=""144"">
        <id>22131</id>
        <title>Checkliste: Wie bereite ich eine Rede vor</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Checkliste-Redevorbereitung.pdf</url>
        <keywords/>
    </item>
    <item key=""145"">
        <id>22133</id>
        <title>Information des Unternehmers zur Bildung eines Wirtschaftsausschusses</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/WiA/ifb-Service_Information%20des%20Unternehmers%20Bildung%20WA.docx</url>
        <keywords/>
    </item>
    <item key=""146"">
        <id>22187</id>
        <title>Muster-Mediationsklausel</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Muster-Mediationsklausel.pdf</url>
        <keywords/>
    </item>
    <item key=""147"">
        <id>22189</id>
        <title>WA Muster f&#xFC;r die Tagesordnung und Protokollvorschlag</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/WiA/ifb_Service_Muster%20f%C3%BCr%20die%20Tagesordnung%20und%20einen%20entsprechenden%20Protokollvorschlag.docx
        </url>
        <keywords/>
    </item>
    <item key=""148"">
        <id>26578</id>
        <title>Wichtige Unterlagen f&#xFC;r den Wirtschaftsausschuss</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/WiA/ifb-Service_Wichtige%20Unterlagen%20f%C3%BCr%20den%20WA.docx</url>
        <keywords/>
    </item>
    <item key=""149"">
        <id>26579</id>
        <title>Wirtschaftsausschuss Verschwiegenheitsverpflichtung</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/ifb_Service_Verschwiegenheitsverpflichtung.docx</url>
        <keywords/>
    </item>
    <item key=""150"">
        <id>26580</id>
        <title>Muster Gesch&#xE4;ftsordnung Wirtschaftsausschuss</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/WiA/ifb_Service_Muster-Gesch%C3%A4ftsordnung%20WA.docx</url>
        <keywords/>
    </item>
    <item key=""151"">
        <id>26581</id>
        <title>Einladung zur monatlichen Sitzung</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/WiA/ifb-Service_Einladung%20zur%20monatlichen%20Sitzung.docx</url>
        <keywords/>
    </item>
    <item key=""152"">
        <id>26582</id>
        <title>Information des Unternehmers &#xFC;ber die WA-Jahresplanung</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/WiA/ifb-Service_Information%20des%20Unternehmers_Jahresplanung.docx</url>
        <keywords/>
    </item>
    <item key=""153"">
        <id>27460</id>
        <title>Betriebsratsbeschluss zur Entsendung der JAV</title>
        <description>Hier haben wir f&#xFC;r Euch eine Vorlage f&#xFC;r eine Mitteilung an die Gesch&#xE4;ftsleitung
            erstellt, die von Euch bzw. dem Betriebsrat nach Beschlussfassung ganz einfach ausgef&#xFC;llt werden kann.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Betriebsratsbeschluss_JAV.pdf</url>
        <keywords/>
    </item>
    <item key=""154"">
        <id>29383</id>
        <title>Muster_Beschlussfassung zur Bildung eines Personalausschusses zur selbstst&#xE4;ndigen Erledigung von
            Aufgaben
        </title>
        <description/>
        <cta>pdf</cta>
        <form>1</form>
        <url>
            https://www.ifb.de/Downloads/Personelle%20Angelegenheiten/Muster_Beschlussfassung%20zur%20Bildung%20eines%20Personalausschusses%20zur%20selbstst%C3%A4ndigen%20Erledigung%20von%20Aufgaben.pdf
        </url>
        <keywords/>
    </item>
    <item key=""155"">
        <id>29384</id>
        <title>Muster_Beschlussfassung zur Bildung eines Personalausschusses zur Vorbereitung von Aufgaben</title>
        <description/>
        <cta>pdf</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/Personelle%20Angelegenheiten/Muster_Beschlussfassung%20zur%20Bildung%20eines%20Personalausschusses%20zur%20Vorbereitung%20von%20Aufgaben%20.pdf
        </url>
        <keywords/>
    </item>
    <item key=""156"">
        <id>29385</id>
        <title>Muster Mitteilung an den Arbeitgeber &#xFC;ber die Einsetzung eines Personalausschusses und die &#xDC;bertragung
            von Aufgaben
        </title>
        <description/>
        <cta>pdf</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/Personelle%20Angelegenheiten/Muster_Mitteilung%20an%20den%20Arbeitgeber%20%C3%BCber%20die%20Einsetzung%20eines%20Personalausschusses%20und%20die%20%C3%9Cbertragung%20von%20Aufgaben.pdf
        </url>
        <keywords/>
    </item>
    <item key=""157"">
        <id>29387</id>
        <title>JAV_Wahl_Poster</title>
        <description/>
        <cta>pdf</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/Poster/JAV_Wahl_Poster.pdf</url>
        <keywords/>
    </item>
    <item key=""158"">
        <id>29388</id>
        <title>JAV_Poster_Versammlung_I</title>
        <description/>
        <cta>pdf</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/Poster/JAV_Poster_Versammlung_I.pdf</url>
        <keywords/>
    </item>
    <item key=""159"">
        <id>29389</id>
        <title>JAV_Poster_Versammlung_II</title>
        <description/>
        <cta>pdf</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/Poster/JAV_Poster_Versammlung_II.pdf</url>
        <keywords/>
    </item>
    <item key=""160"">
        <id>29390</id>
        <title>JAV_Poster_Versammlung_III</title>
        <description/>
        <cta>pdf</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/Poster/JAV_Poster_Versammlung_III.pdf</url>
        <keywords/>
    </item>
    <item key=""161"">
        <id>29391</id>
        <title>JAV_Poster_Vorstellung</title>
        <description/>
        <cta>pdf</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/Poster/JAV_Poster_Vorstellung.pdf</url>
        <keywords/>
    </item>
    <item key=""162"">
        <id>36287</id>
        <title>Checkliste JAV Aufgabenfeld</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/JAV/Checkliste%20JAV%20Aufgabenfeld.pdf</url>
        <keywords/>
    </item>
    <item key=""163"">
        <id>75507</id>
        <title>Der Wirtschaftsausschuss - Ratgeber</title>
        <description>Geballtes Wissen f&#xFC;r Ihr Ehrenamt</description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/WiA/ifb_Ratgeber_Der_Wirtschaftsausschuss.pdf</url>
        <keywords/>
    </item>
    <item key=""164"">
        <id>97976</id>
        <title>SBV Wandkalender 2023</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/21362-0142_ifb_SBV_wandkalender2023_A3_rz_Screen.pdf</url>
        <keywords/>
    </item>
    <item key=""165"">
        <id>138996</id>
        <title>Checkliste Jahresabschlusspr&#xFC;fung durch ANV im AR</title>
        <description/>
        <cta>DOCX</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/ANV/ifb_Service_Checkliste%20Jahresabschlusspr%C3%BCfung%20durch%20ANV%20im%20AR.docx
        </url>
        <keywords>Arbeitnehmervertreter im Aufsichtsrat;ANV im Aufsichtsrat; ANV;AN-Vertreter;AN-Vertreter im
            Aufsichtsrat
        </keywords>
    </item>
    <item key=""166"">
        <id>139734</id>
        <title>BEM-Ablaufplan &#x2013; so funktioniert&#x2019;s!</title>
        <description>Das Poster zum BEM-Ablauf erhalten Sie in ausgew&#xE4;hlten Seminaren, z.B. BEM Teil I oder BEM f&#xFC;r
            psychisch erkrankte Mitarbeiter !
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/AuG/ifb_Poster_BEM_Ablaufplan.pdf</url>
        <keywords>betriebliches Eingliederungsmanagement; BEM;Wiedereingleiderung;</keywords>
    </item>
    <item key=""167"">
        <id>535375</id>
        <title>Wahlvorstand Mitteilung an Gesch&#xE4;ftsleitung</title>
        <description>Muster zur Unterrichtung des Arbeitgebers zum Beschluss des Wahlvorstands &#xFC;ber den Besuch
            eines SBV-Wahlseminars.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Formular_SBV_Wahlvorstand_Mitteilung_an_GL.pdf</url>
        <keywords/>
    </item>
    <item key=""168"">
        <id>590302</id>
        <title>Infoschreiben f&#xFC;r die Kandidatensuche</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Infoschreiben%20zur%20Kandidatensuche.pdf</url>
        <keywords/>
    </item>
    <item key=""169"">
        <id>611060</id>
        <title>Gl&#xFC;cksmomente zum Mitnehmen</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Smiley%20Galerie/21362-1240_ifb_gluecksmomente_rz_x1a.pdf</url>
        <keywords/>
    </item>
    <item key=""170"">
        <id>775046</id>
        <title>MusterBV_&#xC4;rztekammer Nordrhein</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Aerztekammer_Nordrhein.pdf</url>
        <keywords/>
    </item>
    <item key=""171"">
        <id>775047</id>
        <title>MusterBV_baua - INQA</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/Kommunikation/MusterBV_baua_Bundesanstalt_fuer_Arbeitsschutz_und_Arbeitsmedizin.pdf
        </url>
        <keywords/>
    </item>
    <item key=""172"">
        <id>775048</id>
        <title>MusterBV_Bezirksamt Friedrichshain-Kreuzberg</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Bezirksamt_Friedrichshain_Kreuzberg.pdf</url>
        <keywords/>
    </item>
    <item key=""173"">
        <id>775049</id>
        <title>MusterBV_DGB</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_DGB.pdf</url>
        <keywords/>
    </item>
    <item key=""174"">
        <id>775050</id>
        <title>MusterBV_Esser-Wolmerath</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Esser_Wolmerath_AiB.pdf</url>
        <keywords/>
    </item>
    <item key=""175"">
        <id>775051</id>
        <title>MusterBV_Fraport</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Fraport.pdf</url>
        <keywords/>
    </item>
    <item key=""176"">
        <id>775052</id>
        <title>MusterBV_IGMetall_VW</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_IGMetall_VW.pdf</url>
        <keywords/>
    </item>
    <item key=""177"">
        <id>775053</id>
        <title>MusterBV_Mobbing</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Mobbing.pdf</url>
        <keywords/>
    </item>
    <item key=""178"">
        <id>775054</id>
        <title>MusterBV_Opel</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Opel.pdf</url>
        <keywords/>
    </item>
    <item key=""179"">
        <id>775055</id>
        <title>MusterBV_Polizei_Berlin</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Polizei_Berlin.pdf</url>
        <keywords/>
    </item>
    <item key=""180"">
        <id>775056</id>
        <title>MusterBV_Stadt Bremen</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Stadt_Bremen.pdf</url>
        <keywords/>
    </item>
    <item key=""181"">
        <id>775057</id>
        <title>MusterBV_Stadt Muenchen</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Stadt_Muenchen.pdf</url>
        <keywords/>
    </item>
    <item key=""182"">
        <id>775058</id>
        <title>MusterBV_Universitaet Mainz</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Universitaet_Mainz.pdf</url>
        <keywords/>
    </item>
    <item key=""183"">
        <id>775059</id>
        <title>MusterBV_verdi_Ford</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_verdi_Ford.pdf</url>
        <keywords/>
    </item>
    <item key=""184"">
        <id>775060</id>
        <title>MusterBV_Vogt_und_Mueller</title>
        <description>Bitte beachten Sie auch, dass die hier ver&#xF6;ffentlichten Betriebsvereinbarungen inhaltlich
            nicht von uns gepr&#xFC;ft wurden.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Kommunikation/MusterBV_Vogt_und_Mueller.pdf</url>
        <keywords/>
    </item>
    <item key=""185"">
        <id>780169</id>
        <title>SBV-Basiswissen Zusatzurlaub</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Basiswissen%20Zusatzurlaub.pdf</url>
        <keywords/>
    </item>
    <item key=""186"">
        <id>1541055</id>
        <title>Synopse: Alle &#xC4;nderungen im Vergleich</title>
        <description>Welche Regelungen sind neu, welche galten bis zum 21.07.2022? Alle &#xC4;nderungen sind rot
            markiert!
        </description>
        <cta>PDF-Download</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/betriebsrat.de/Synopse_Nachweisgesetz%20ab%2008_2022_ifb.pdf</url>
        <keywords/>
    </item>
    <item key=""187"">
        <id>1601933</id>
        <title>Checkliste f&#xFC;r die Amts&#xFC;bergabe der SBV</title>
        <description>
            SBV-Tipp!
            Sie wollen bestens vorbereitet sein f&#xFC;r die &#xDC;bergabe der SBV-Amtsgesch&#xE4;fte? Dann nutzen Sie
            unsere kostenlose Checkliste!
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Checkliste_Amts%C3%BCbergabe_.pdf</url>
        <keywords/>
    </item>
    <item key=""188"">
        <id>2703786</id>
        <title>JAV Wandkalender 2023</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/21362-0142_ifb_JAV_wandkalender2023_A3_rz_Screen.pdf</url>
        <keywords/>
    </item>
    <item key=""189"">
        <id>2704066</id>
        <title>Teilnahmebedingungen</title>
        <description>zum Download</description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Kampagnen/WM-Tippspiel/ifb-teilnahmebedingungen-wm-tippspiel.pdf</url>
        <keywords/>
    </item>
    <item key=""190"">
        <id>2704958</id>
        <title>Eckpunkte einer Gesch&#xE4;ftsordnung des Betriebsrats</title>
        <description></description>
        <cta>PDF</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/betriebsrat.de/Eckpunkte%20einer%20Gesch%C3%A4ftsordnung%20des%20Betriebsrats_2022_12.pdf
        </url>
        <keywords>Beitriebsratsvorsitz;Betriebsratsvorsitzender; Betriebsratsvorsitzende;Betriebsratssitzung</keywords>
    </item>
    <item key=""191"">
        <id>2727824</id>
        <title>Liste der Berufskrankheiten (Baua)</title>
        <description/>
        <cta>Jetzt downloaden</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/betriebsrat.de/liste-der-berufskrankheiten.pdf</url>
        <keywords/>
    </item>
    <item key=""192"">
        <id>2728875</id>
        <title>FAQs und Musterschreiben: Verzeichnis schwerbehinderter Arbeitnehmer</title>
        <description>Wichtige Fragen zum Verzeichnis schwerbehinderter Arbeitnehmer inkl. Musterschreiben gegen&#xFC;ber
            dem Arbeitgeber auf Aush&#xE4;ndigung des Verzeichnisses gem. &#xA7; 163 Abs. 2 SGB IX.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Das%20Verzeichnis%20schwerbehinderter%20Arbeitnehmer.pdf</url>
        <keywords/>
    </item>
    <item key=""193"">
        <id>2750990</id>
        <title>Entlastung der Wirbels&#xE4;ule - Die bewegte Pause!</title>
        <description>In unseren Online-Seminare bieten wir unseren Teilnehmern ein paar &#xDC;bungen zu Entlastung der
            Wirbels&#xE4;ule an.
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/AuG/BewegtePause%20%281%29.pdf</url>
        <keywords>betriebliches Eingliederungsmanagement; BEM;Wiedereingleiderung;</keywords>
    </item>
    <item key=""194"">
        <id>2754480</id>
        <title>Checkliste Personalkennzahlen</title>
        <description>Ihr &#xDC;berblick &#xFC;ber gel&#xE4;ufige Personalkennzahlen</description>
        <cta>DOCX</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/ifb-Service_Personalkennzahlen.docx</url>
        <keywords/>
    </item>
    <item key=""195"">
        <id>2828881</id>
        <title>Vorlage f&#xFC;r Ihre SBV-Sprechstunde</title>
        <description/>
        <cta>PDF</cta>
        <form/>
        <url>https://www.ifb.de/Downloads/SBV/ifb_Vorlage_SBV-Sprechstunde.pdf</url>
        <keywords/>
    </item>
    <item key=""196"">
        <id>2932266</id>
        <title>FAQs Haftung der SBV</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/FAQ%20Haftung%20SBV.pdf</url>
        <keywords/>
    </item>
    <item key=""197"">
        <id>2961807</id>
        <title>Mitteilung an Gesch&#xE4;ftsleitung - Inhouse Seminare</title>
        <description>Muster zur Unterrichtung des Arbeitgebers zum Betriebsratsbeschluss f&#xFC;r firmeninterne
            Seminare
        </description>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/ifb_Mitteilung_an_GL_inhouse.pdf</url>
        <keywords/>
    </item>
    <item key=""198"">
        <id>3043913</id>
        <title>Checkliste: Gehen Sie vorbereitet in Verhandlungen!</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/_default_upload_bucket/Checkliste%20Verhandlung.pdf</url>
        <keywords/>
    </item>
    <item key=""199"">
        <id>3072290</id>
        <title>Musterschreiben Zustimmungsverweigerung bei Einstellung</title>
        <description/>
        <cta>word</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/SBV/Musterschreiben%20Stellungnahme%20der%20SBV%20gegen%C3%BCber%20Interessenvertretung.docx
        </url>
        <keywords/>
    </item>
    <item key=""200"">
        <id>3072291</id>
        <title>Musterschreiben Mitwirkungsrecht Bewerbung</title>
        <description/>
        <cta>word</cta>
        <form>0</form>
        <url>
            https://www.ifb.de/Downloads/SBV/Musterschreiben%20Mitwirkungsrecht%20%C3%9Cbersendung%20aller%20Bewerbungsunterlagen.docx
        </url>
        <keywords/>
    </item>
    <item key=""201"">
        <id>3072292</id>
        <title>Musterschreiben Mitwirkungsrecht Pr&#xFC;fpflicht</title>
        <description/>
        <cta>word</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Musterschreiben%20Mitwirkungsrecht%20Pr%C3%BCfpflicht.docx</url>
        <keywords/>
    </item>
    <item key=""202"">
        <id>3072293</id>
        <title>Checkliste Arbeitsplatzanforderungen</title>
        <description/>
        <cta>word</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Musterschreiben%20Checkliste%20Arbeitsplatzanforderungen.docx</url>
        <keywords/>
    </item>
    <item key=""203"">
        <id>3171763</id>
        <title>Administrator &#x2013; Gremium einrichten</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Service/Infozettel_Gremiumsinhaber.pdf</url>
        <keywords/>
    </item>
    <item key=""204"">
        <id>3171764</id>
        <title>Administrator &#x2013; Staffel&#xFC;bergabe Gremium</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Service/Anleitung_Staffel%C3%BCbergabe_Admin.pdf</url>
        <keywords/>
    </item>
    <item key=""205"">
        <id>3171765</id>
        <title>Teilnehmer &#x2013; Gremium beitreten</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Service/Infozettel_Gremiumsmitglied.pdf</url>
        <keywords/>
    </item>
    <item key=""206"">
        <id>3173349</id>
        <title>Checkliste Pr&#xE4;ventionsverfahren</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Checkliste%20Pr%C3%A4vention.pdf</url>
        <keywords/>
    </item>
    <item key=""207"">
        <id>3173351</id>
        <title>Musterschreiben Einleitung eines Pr&#xE4;ventionsverfahrens</title>
        <description/>
        <cta>Word</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/SBV/Musterschreiben_Einleitung-Pr%C3%A4ventionsverfahrens.docx</url>
        <keywords/>
    </item>
    <item key=""208"">
        <id>3214130</id>
        <title>BR360 - Anleitung zur Installation der APP</title>
        <description/>
        <cta>PDF</cta>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Service/Betriebsrat360/BR360%20Anleitung%20Installation.pdf</url>
        <keywords/>
    </item>
    <item key=""209"">
        <id>3221833</id>
        <title>Unterlagen ifb Direkt</title>
        <description/>
        <cta/>
        <form>0</form>
        <url>https://www.ifb.de/Downloads/Betriebsrat360/14.05.2024_ifb-Direkt%21_Unterlagen.pdf</url>
        <keywords/>
    </item>
</response>
"
RKXqQan8,ü§ë G2A.COM FREE GIFT CARD GUIDE JULY 2024 V3ü§ë,x2w,GetText,Thursday 4th of July 2024 09:20:50 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
04 > 10 July 2024"
7TNBE2XY,Untitled,den4ik2003,C++,Thursday 4th of July 2024 09:20:06 AM CDT,"#include <execution/execution.hpp>
 
using namespace mira;
 
void execution_config_t::init_additional(const field_t& args) {
    if (args.count(""calculate_init_position"")) {
        std::string val = args.at(""calculate_init_position"").s();
        this->calculate_init_position = (val == ""true"" || std::stoi(val));
    }
    if (args.count(""cancel_on_start"")) {
        std::string val = args.at(""cancel_on_start"").s();
        if (val == ""true"" || std::stoi(val)) {
            this->cancel_on_start = ""true"";
            if (args.count(""cancel_group"")) {
                this->cancel_group = e_order_group_from_str(args.at(""cancel_group"").s());
            }
        }
        this->calculate_init_position = (val == ""true"" || std::stoi(val));
    }
    if (args.count(""delay_between_cancel_and_new"")) {
        this->delay_between_cancel_and_new = args.at(""delay_between_cancel_and_new"").i();
    }
    if (args.count(""orders_update_cooldown"")) {
        this->orders_update_cooldown = args.at(""orders_update_cooldown"").i();
    }
    if (args.count(""path_to_position_file"")) {
        this->path_to_position_file = args.at(""path_to_position_file"").s();
    }
    if (args.count(""print_ws_events"")) {
        std::string val = args.at(""print_ws_events"").s();
        this->print_ws_events = (val == ""true"" || std::stoi(val));
    }
    if (args.count(""use_tp_market"")) {
        std::string val = args.at(""use_tp_market"").s();
        this->use_tp_market = (val == ""true"" || std::stoi(val));
    }
    if (args.count(""close_pos_on_cd"")) {
        this->close_pos_on_cd = args.at(""close_pos_on_cd"").i();
    }
}
 
void Execution::_order_storage_updater() {
    auto update_routine = [this] () {
        auto orders = config_.api->get_open_orders(config_.symbol);
        std::lock_guard<std::mutex> locker(orders_.locker);
        orders_.limit_orders.clear();
        orders_.market_orders.clear();
        orders_.algo_orders.clear();
        for (auto order : orders.value()) {
            if (order.type == e_order_type::LIMIT) {
                orders_.limit_orders[order.client_order_id].order = order;
            } else if (order.type != e_order_type::MARKET) {
                orders_.algo_orders[order.client_order_id].order = order;
            }
        }
    };
    update_routine();
    std::thread {[this, update_routine] () {
        std::this_thread::sleep_for(std::chrono::seconds(config_.orders_update_cooldown));
        update_routine();
    }}.detach();
}
 
Execution::Execution(const execution_config_t& config, const field_t& trader_args) : config_(config) {
    if (trader_args.count(""execution"")) {
        config_.init_additional(trader_args.at(""execution""));
    }
    config_.shared_state->add_execution_getter(this, config_.symbol);
    stream_description_t description;
    
    description.stream = e_stream::ACCOUNT_ORDER;
    config_.api->subscribe(description, this, config_.symbol);
 
    description.stream = e_stream::ACCOUNT_TRADE;
    config_.api->subscribe(description, this, config_.symbol);
 
    position_info_.position_order.symbol = position_info_.position_trade.symbol = config_.symbol; // TODO –≤–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    if (config_.path_to_position_file != """") {
        if (config_.calculate_init_position) {
            _init_position();
        }
    }
 
    if (e_market_account_type(config_.symbol->api->market) == e_account_type::FUTURES) {
        description.stream = e_stream::ACCOUNT_POSITION;
        config_.api->subscribe(description, this, config_.symbol);
        position_info_.reset_position(config_.api->get_position(config_.symbol).value());
    }
 
    if (config_.cancel_on_start) {
        config_.api->cancel_open_orders(config_.symbol, config_.cancel_group);
    }
 
    _order_storage_updater();
}
 
void Execution::_init_position() {
    position_info_.position_file.open(config_.path_to_position_file, std::ios::app);
    if (!position_info_.position_file.is_open()) {
        config_.logger->log(""can't open position file!"");
        exit(EXIT_FAILURE);
    }

    if (std::filesystem::file_size(config_.path_to_position_file) == 0) {
        config_.logger->log(""position file file is empty"");
    } else {
        std::string all_string = """", buf;
        std::ifstream config(config_.path_to_position_file);
        while (config >> buf) {
            all_string += buf;
        }
        config_.logger->log(""initial position file content: "" + all_string);
        std::cout << ""initial position file content: "" + all_string << '\n';
        auto position_file_content = field_t::deserialize(all_string);

        // std::ostringstream position_stream;
        // position_stream << position_info_.position_file.rdbuf();
        // auto prev_position = field_t::deserialize(position_stream.str());
    
        position_info_.position_order = position_info_.position_trade = position_t {
            .base_quantity = position_file_content.at(""baseQuantity"").f(),
            .entry_price = position_file_content.at(""entryPrice"").f(),
            .position_quote = position_file_content.at(""quotePosition"").f(),
            .symbol = config_.symbol
        };

        auto previous_trades = trade_t {
            .price = config_.symbol->make_price(position_file_content.at(""entryPrice"").f()),
            .quantity = config_.symbol->make_quantity(std::abs(position_file_content.at(""baseQuantity"").f())),
            .symbol = config_.symbol,
            .trade_side = position_file_content.at(""baseQuantity"").f() > 0 ? e_side::BUY : e_side::SELL,
            .trade_time = get_timestamp()
        };

        auto prev_base_qty = position_file_content.at(""baseBalance"").f();
        auto prev_quote_amount = position_file_content.at(""quoteBalance"").f();
    
        auto res_cur_base_qty = config_.api->get_account().value().balances.at(config_.symbol->base);
        auto res_cur_quote_amount = config_.api->get_account().value().balances.at(config_.symbol->quote);
    
        auto cur_base_qty = res_cur_base_qty.free + res_cur_base_qty.locked;
        auto cur_quote_amount = res_cur_quote_amount.free + res_cur_quote_amount.locked;

        position_info_.open_position(previous_trades, 0);
        position_info_.open_position(previous_trades, 1);

        if (prev_base_qty != cur_base_qty) { // TODO: —Å–ª—É—á–∞–π –∫–æ–≥–¥–∞ –æ–Ω–∏ —Ä–∞–≤–Ω—ã, –Ω–æ —Ç—Ä–µ–π–¥—ã –±—ã–ª–∏
            config_.logger->log(""there were trades when we shutdown"");
            double shutdown_average_price = std::abs((cur_quote_amount - prev_quote_amount) / (prev_base_qty - cur_base_qty)); // –≤—Ä–æ–¥–µ abs –Ω–µ –Ω—É–∂–µ–Ω, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π

            auto shutdown_trade = trade_t {
                .price = config_.symbol->make_price(shutdown_average_price),
                .quantity = config_.symbol->make_quantity(std::abs(prev_base_qty - cur_base_qty)),
                .symbol = config_.symbol,
                .trade_side = (prev_base_qty - cur_base_qty) > 0 ? e_side::SELL : e_side::BUY,
                .trade_time = get_timestamp()
            };

            position_info_.open_position(shutdown_trade, 0);
            position_info_.open_position(shutdown_trade, 1);
        }
    }
}
 
void Execution::_process_self_trade(const order_self_trade_event& event) {
    order_request_t req;
    req.symbol = event.symbol;
    req.price = req.symbol->make_price(event.price);
    req.quantity = req.symbol->make_quantity(event.quantity);
    req.type = e_order_type::LIMIT;
    req.post_only = false;
    req.side = e_side::BUY;
    _safe_new_order(req);
    req.side = e_side::SELL;
    _safe_new_order(req);
}
 
void Execution::_process_limit_grid(const order_limit_grid_event& event) {
    std::unordered_map<int64_t, int64_t> requests;
    std::unordered_map<int64_t, order_appendix_t> appendices;
    for (auto req : event.asks) {
        config_.logger->log(req.price, e_severity_level::DEBUG, ""in _process_limit_grid"");
        config_.logger->log(req.quantity, e_severity_level::DEBUG, ""in _process_limit_grid"");
        requests[config_.symbol->make_price(req.price).to_scaled()] += config_.symbol->make_quantity(req.quantity).to_scaled();
        appendices[config_.symbol->make_price(req.price).to_scaled()] = req.appendix;
    }
    for (auto req : event.bids) {
        config_.logger->log(req.price, e_severity_level::DEBUG, ""in _process_limit_grid"");
        config_.logger->log(req.quantity, e_severity_level::DEBUG, ""in _process_limit_grid"");
        // config_.logger->log(""before req price "" + std::to_string(req.price));
        // config_.logger->log(""precised "" + config_.symbol->make_price(req.price));
        // config_.logger->log(""scaled "" + config_.symbol->make_price(req.price).to_scaled());
        requests[config_.symbol->make_price(req.price).to_scaled()] -= config_.symbol->make_quantity(req.quantity).to_scaled();
        appendices[config_.symbol->make_price(req.price).to_scaled()] = req.appendix;
    }
    std::vector<std::pair<order_request_t, order_appendix_t>> create_requests;
    std::vector<size_t> to_cancel;
    {
        std::lock_guard<std::mutex> lock(orders_.locker);
        for (const auto& [id, extended_order] : orders_.limit_orders) {
            int64_t cq = (extended_order.order.side == e_side::BUY ? -1 : 1) * extended_order.order.quantity.to_scaled();
            auto it = requests.find(extended_order.order.price.to_scaled());
            if (it == requests.end() || it->second != cq) {
                to_cancel.push_back(id);
            } else {
                requests.erase(it);
            }
        }
        for (auto [p, q] : requests) {
            if (std::fabs(q) * p < config_.symbol->min_notional) {
                continue;
            }
            order_request_t req;
            req.symbol = config_.symbol;
            req.type = e_order_type::LIMIT;
            req.side = (q < 0 ? e_side::BUY : e_side::SELL);
            req.price = config_.symbol->make_price_from_scaled(p);
            req.quantity = config_.symbol->make_quantity_from_scaled(std::fabs(q));
            req.post_only = true;
            config_.logger->log(req, e_severity_level::DEBUG, ""@#*&* "");
            create_requests.push_back({req, appendices[p]});
        }
    }
    config_.logger->log(""csize: "" + std::to_string(to_cancel.size()));
    for (auto id : to_cancel) {
        _safe_cancel_order(id, {}, e_order_type::LIMIT);
    }

    if (config_.delay_between_cancel_and_new) {
        std::this_thread::sleep_for(std::chrono::milliseconds(100));
    }

    for (auto& [req, app] : create_requests) {
        _safe_new_order(req, app);
    }
}
 
void Execution::_process_taker_buy(const order_taker_buy_event& event) {
    order_request_t req;
    req.symbol = event.symbol;
    req.type = e_order_type::MARKET;
    req.side = e_side::BUY;
    req.reduce_only = event.reduce_only;
    if (event.quantity) {
        req.quantity = config_.symbol->make_quantity(event.quantity);
    } else {
        req.amount = event.amount;
    }
    _safe_new_order(req);
}
 
void Execution::_process_taker_sell(const order_taker_sell_event& event) {
    order_request_t req;
    req.symbol = event.symbol;
    req.type = e_order_type::MARKET;
    req.side = e_side::SELL;
    req.reduce_only = event.reduce_only;
    req.quantity = config_.symbol->make_quantity(event.quantity);
    _safe_new_order(req);
}
 
void Execution::_process(const order_event& event) {
    config_.logger->log(event, e_severity_level::INFO);
 
    if (event.type == e_order_event::SELF_TRADE) {
        _process_self_trade(event.get<order_self_trade_event>());
    } else if (event.type == e_order_event::LIMIT_GRID) {
        config_.logger->log(""LIMIT GRID"");
        _process_limit_grid(event.get<order_limit_grid_event>());
    } else if (event.type == e_order_event::TAKER_BUY) {
        _process_taker_buy(event.get<order_taker_buy_event>());
    } else if (event.type == e_order_event::TAKER_SELL) {
        _process_taker_sell(event.get<order_taker_sell_event>());
    }
}
 
fill_order_event Execution::_process_account_order(const ws_account_order_event& event) {
    if (event.order.type == e_order_type::LIMIT || event.order.type == e_order_type::MARKET) {
        orders_.locker.lock();
        auto& cur_storage = (event.order.type == e_order_type::LIMIT ? orders_.limit_orders : orders_.market_orders);
        if (event.order.type == e_order_type::LIMIT) {
            config_.logger->log(""limit"");
        } else {
            config_.logger->log(""market"");
        }
        auto old_it = cur_storage.find(event.order.client_order_id);
        config_.logger->log(event.order, e_severity_level::DEBUG, ""Event order: "");
        if (old_it != cur_storage.end()) { // —Ç–∞–∫–æ–π –æ—Ä–¥–µ—Ä —É–∂–µ –±—ã–ª
            order_t& old_order = old_it->second.order;
            config_.logger->log(old_order, e_severity_level::DEBUG, ""old order: "");
            if (!old_order.filled_quantity.initialized()) {
                old_order.filled_quantity = old_order.symbol->make_quantity(0);
            }
            precised_float piece = event.order.filled_quantity - old_order.filled_quantity;

            auto debug1 = event.order.filled_quantity.to_double();
            auto debug2 = event.order.price.to_double();
            auto debug3 = old_order.filled_quantity.to_double();
            auto debug4 = old_order.price.to_double();
            
            double quote_piece = event.order.filled_quantity.to_double() * event.order.price.to_double() - old_order.filled_quantity.to_double() * old_order.price.to_double();
            if (quote_piece) {
                trade_t trade{
                    .price = event.order.price,
                    .quantity = piece,
                    .symbol = event.symbol,
                    .trade_side = event.order.side,
                    .trade_time = event.order.update_time
                };
                position_info_.open_position(trade, 1);
            }
 
            if (order_cycle_ended(event.order.status)) {
                config_.logger->log(""erase"");
                cur_storage.erase(old_it);
            } else {
                old_order = event.order;
            }
            std::vector<std::pair<size_t, e_order_type>> to_cancel;
            for (auto& [id, ext_ord] : orders_.algo_orders) {
                auto& ord = ext_ord.order;
                bool side = (ord.side == e_side::BUY) ^ (ord.type == e_order_type::STOP_LOSS);
                if ((side && (position_info_.get_position().base_quantity < 0)) ||
                    (!side && (position_info_.get_position().base_quantity > 0))) {
                    continue;
                }
                to_cancel.push_back({id, ord.type});
            }
            std::vector<std::pair<std::string, e_order_type>> to_cancel_order_id;
            for (auto& [id, ext_ord] : orders_.order_id_algo_orders) {
                auto& ord = ext_ord.order;
                bool side = (ord.side == e_side::BUY) ^ (ord.type == e_order_type::STOP_LOSS);
                if ((side && (position_info_.get_position().base_quantity < 0)) ||
                    (!side && (position_info_.get_position().base_quantity > 0))) {
                    continue;
                }
                to_cancel_order_id.push_back({id, ord.type});
            }
            orders_.locker.unlock();
            for (auto [id, type] : to_cancel) {
                _safe_cancel_order(id, {}, type);
            }
            for (auto [id, type] : to_cancel_order_id) {
                _safe_cancel_order(0, id, type);
            }
            return fill_order_event(piece.to_double(), quote_piece, position_info_.get_position(), event.order);
        }
        orders_.locker.unlock();
    } else if (event.order.type == e_order_type::STOP_LOSS ||
               event.order.type == e_order_type::TAKE_PROFIT) {
        std::lock_guard<std::mutex> lock(orders_.locker);
        if (event.order.client_order_id) {
            auto old_it = orders_.algo_orders.find(event.order.client_order_id);
            if (old_it != orders_.algo_orders.end()) {
                order_t& old_order = old_it->second.order;
                if (order_cycle_ended(old_order.status)) {
                    orders_.algo_orders.erase(old_it);
                } else {
                    old_order = event.order;
                }
                return fill_order_event(0, 0, position_info_.get_position(), event.order);
            }
        } else {
            auto old_it = orders_.order_id_algo_orders.find(event.order.order_id);
            if (old_it != orders_.order_id_algo_orders.end()) {
                order_t& old_order = old_it->second.order;
                if (order_cycle_ended(old_order.status)) {
                    orders_.order_id_algo_orders.erase(old_it);
                } else {
                    old_order = event.order;
                }
                return fill_order_event(0, 0, position_info_.get_position(), event.order);
            } else {
                orders_.order_id_algo_orders[event.order.order_id].order = event.order;
            }
        }
    }
    return fill_order_event(event.order.filled_quantity.to_double(), event.order.filled_quantity.to_double() * event.order.price.to_double(), position_info_.get_position(), event.order);
}
 
fill_order_event Execution::_process_account_trade(const ws_account_trade_event& event) {
    orders_.locker.lock();
    double piece = event.trade.quantity.to_double();
    double quote_piece = event.trade.price.to_double();
    trade_t trade = event.trade;
    trade.trade_side = (trade.trade_side == e_side::BUY ? e_side::SELL : e_side::BUY);
    position_info_.open_position(trade, 0);
    std::vector<std::pair<size_t, e_order_type>> to_cancel;
    for (auto& [id, ext_ord] : orders_.algo_orders) {
        auto& ord = ext_ord.order;
        bool side = (ord.side == e_side::BUY) ^ (ord.type == e_order_type::STOP_LOSS);
        if ((side && (position_info_.get_position().base_quantity < 0)) ||
            (!side && (position_info_.get_position().base_quantity > 0))) {
            continue;
        }
        to_cancel.push_back({id, ord.type});
    }
    std::vector<std::pair<std::string, e_order_type>> to_cancel_order_id;
    for (auto& [id, ext_ord] : orders_.order_id_algo_orders) {
        auto& ord = ext_ord.order;
        bool side = (ord.side == e_side::BUY) ^ (ord.type == e_order_type::STOP_LOSS);
        if ((side && (position_info_.get_position().base_quantity < 0)) ||
            (!side && (position_info_.get_position().base_quantity > 0))) {
            continue;
        }
        to_cancel_order_id.push_back({id, ord.type});
    }
    orders_.locker.unlock();
    for (auto [id, type] : to_cancel) {
        _safe_cancel_order(id, {}, type);
    }
    for (auto [id, type] : to_cancel_order_id) {
        _safe_cancel_order(0, id, type);
    }
    return fill_order_event(piece, quote_piece, position_info_.get_position(), {});
}
 
fill_order_event Execution::_process_account_position(const ws_account_position_event& event) {
    orders_.locker.lock();
    position_info_.reset_position(event.position);
    if (std::fabs(event.position.base_quantity) < 1e-6) {
        position_info_.not_null_time = 0;
    } else if (!position_info_.not_null_time) {
        position_info_.not_null_time = event.position.update_time;
    }
    std::vector<std::pair<size_t, e_order_type>> to_cancel;
    for (auto& [id, ext_ord] : orders_.algo_orders) {
        auto& ord = ext_ord.order;
        bool side = (ord.side == e_side::BUY) ^ (ord.type == e_order_type::STOP_LOSS);
        if ((side && (position_info_.get_position().base_quantity < 0)) ||
            (!side && (position_info_.get_position().base_quantity > 0))) {
            continue;
        }
        to_cancel.push_back({id, ord.type});
    }
    std::vector<std::pair<std::string, e_order_type>> to_cancel_order_id;
    for (auto& [id, ext_ord] : orders_.order_id_algo_orders) {
        auto& ord = ext_ord.order;
        bool side = (ord.side == e_side::BUY) ^ (ord.type == e_order_type::STOP_LOSS);
        if ((side && (position_info_.get_position().base_quantity < 0)) ||
            (!side && (position_info_.get_position().base_quantity > 0))) {
            continue;
        }
        to_cancel_order_id.push_back({id, ord.type});
    }
    orders_.locker.unlock();
    for (auto [id, type] : to_cancel) {
        _safe_cancel_order(id, {}, type);
    }
    for (auto [id, type] : to_cancel_order_id) {
        _safe_cancel_order(0, id, type);
    }
    return fill_order_event(0, 0, position_info_.get_position(), {}, event.rpnl);
}
 
fill_event Execution::_process(const ws_event& event) {
    if (config_.print_ws_events) {
        std::cout << event << '\n';
    }
    config_.logger->log(event, e_severity_level::INFO);
    fill_event res;
    if (event.type == e_stream::ACCOUNT_ORDER) {
        auto account_order_event = event.get<ws_account_order_event>();
        res.set(_process_account_order(account_order_event));
    } else if (event.type == e_stream::ACCOUNT_TRADE) {
        auto account_trade_event = event.get<ws_account_trade_event>();
        res.set(_process_account_trade(account_trade_event));
    } else if (event.type == e_stream::ACCOUNT_POSITION) {
        auto account_position_event = event.get<ws_account_position_event>();
        res.set(_process_account_position(account_position_event));
    } else if (event.type == e_stream::TICK) {
        res.type = e_fill_event::TICK;
    }
    res.set_symbol(event.symbol);
    if (config_.close_pos_on_cd && position_info_.not_null_time && position_info_.not_null_time + config_.close_pos_on_cd < get_timestamp()) {
        position_t cur_pos = position_info_.get_position();
        if (cur_pos.base_quantity) {
            order_request_t req;
            req.symbol = cur_pos.symbol;
            req.quantity = req.symbol->make_quantity(cur_pos.base_quantity);
            req.amount = cur_pos.position_quote;
            req.side = (cur_pos.base_quantity > 0 ? e_side::SELL : e_side::BUY);
            req.type = e_order_type::MARKET;
            req.reduce_only = true;
            position_info_.not_null_time = get_timestamp();
            _safe_new_order(req);
        }
    }
    return res;
}
 
void Execution::_safe_new_order(order_request_t req, order_appendix_t app) {
    req.client_order_id = _gen_client_order_id();
    order_t new_ord;
    new_ord.symbol = req.symbol;
    new_ord.type = req.type;
    new_ord.side = req.side;
    new_ord.client_order_id = *req.client_order_id;
    if (req.price.has_value()) {
        new_ord.price = *req.price;
    }
    if (req.quantity.has_value()) {
        new_ord.quantity = *req.quantity;
    }
    if (req.stop_price.has_value()) {
        new_ord.stop_price = *req.stop_price;
    }
    new_ord.post_only = req.post_only;
    new_ord.reduce_only = req.reduce_only;
    new_ord.status = e_order_status::PENDING;
    if (req.symbol->api->market == e_market::BYBIT_FUTURES && app.tp_bips) {
        double bips = *app.tp_bips * 1e-4;
        double stop_price = req.price->to_double() * (1 + (req.side == e_side::BUY ? 1 : -1) * bips);
        req.stop_price = req.symbol->make_price(stop_price);
        req.algo_limit = !config_.use_tp_market;
    }
    {
        std::lock_guard<std::mutex> lock(orders_.locker);
        if (req.type == e_order_type::LIMIT) {
            orders_.limit_orders[*req.client_order_id] = {new_ord, app};
        } else if (req.type == e_order_type::MARKET) {
            orders_.market_orders[*req.client_order_id] = {new_ord, app};
        } else {
            orders_.algo_orders[*req.client_order_id] = {new_ord, app};
        }
    }
    std::thread {[req, this] () {
        config_.logger->log(req, e_severity_level::DEBUG, ""! new"");
        auto res = config_.api->new_order(req);
        config_.logger->log(res, e_severity_level::DEBUG, ""? new"");
        if (!res) {
            config_.logger->log(res, e_severity_level::ERROR, ""new order error: request="" + to_string(req));
            std::lock_guard<std::mutex> lock(orders_.locker);
            if (req.type == e_order_type::LIMIT) {
                orders_.limit_orders.erase(*req.client_order_id);
            } else if (req.type == e_order_type::MARKET) {
                orders_.market_orders.erase(*req.client_order_id);
            } else{
                orders_.algo_orders.erase(*req.client_order_id);
            }
        }
    }}.detach();
}
 
void Execution::_safe_cancel_order(size_t client_order_id, std::optional<std::string> order_id, e_order_type type) {
    extended_order_t prev_ord;
    {
        std::lock_guard<std::mutex> lock(orders_.locker);
        if (type == e_order_type::LIMIT) {
            auto it = orders_.limit_orders.find(client_order_id);
            if (it == orders_.limit_orders.end()) {
                return;
            }
            prev_ord = it->second;
        } else {
            if (!order_id) {
                auto it = orders_.algo_orders.find(client_order_id);
                if (it == orders_.algo_orders.end()) {
                    return;
                }
                prev_ord = it->second;
            } else {
                auto it = orders_.order_id_algo_orders.find(*order_id);
                if (it == orders_.order_id_algo_orders.end()) {
                    return;
                }
                prev_ord = it->second;
                orders_.order_id_algo_orders.erase(it);
            }
        }
    }
    std::thread {[client_order_id, order_id, prev_ord, this] () {
        config_.logger->log(prev_ord.order, e_severity_level::DEBUG, ""! cancel"");
        auto res = config_.api->cancel_order(prev_ord.order.symbol, (order_id ? std::optional<size_t>() : prev_ord.order.client_order_id), order_id);
        config_.logger->log(res, e_severity_level::DEBUG, ""? cancel"");
        if (!res) {
            config_.logger->log(res, e_severity_level::ERROR, ""cancel order error"");
            std::lock_guard<std::mutex> lock(orders_.locker);
            if (prev_ord.order.type == e_order_type::LIMIT) {
                orders_.limit_orders[client_order_id] = prev_ord;
            } else {
                if (!order_id) {
                    orders_.algo_orders[client_order_id] = prev_ord;
                } else {
                    orders_.order_id_algo_orders[*order_id] = prev_ord;
                }
            }
        }
    }}.detach();
}
 
result_t<order_t, e_execution_error> ExecutionGetter::get_order(size_t client_order_id) const {
    result_t<order_t, e_execution_error> res;
 
    auto& orders_storage = exec_->orders_;
    std::lock_guard<std::mutex> locker(orders_storage.locker);
 
    auto it = orders_storage.limit_orders.find(client_order_id);
    if (it != orders_storage.limit_orders.end()) {
        res.set_value(it->second.order);
        return res;
    }
    
    it = orders_storage.algo_orders.find(client_order_id);
    if (it != orders_storage.algo_orders.end()) {
        res.set_value(it->second.order);
        return res;
    }
    
    res.set_error(e_execution_error::ORDER_NOT_FOUND);
    return res;
}
 
float_limit_grid_t ExecutionGetter::get_limit_grid() const {
    float_limit_grid_t res;
 
    auto& orders_storage = exec_->orders_;
    std::lock_guard<std::mutex> locker(orders_storage.locker);
 
    for (auto& [id, ext_ord] : orders_storage.limit_orders) {
        auto& ord = ext_ord.order;
        if (ord.side == e_side::BUY) {
            res.bid_orders[ord.price.to_double()] = (ord.quantity - ord.filled_quantity).to_double();
        } else {
            res.ask_orders[ord.price.to_double()] = (ord.quantity - ord.filled_quantity).to_double();
        }
    }
    
    return res;
}
 
void Execution::_position_info_t::open_position(const trade_t& trade, bool is_order) {
    std::lock_guard lock(locker);
 
    std::cerr << ""$$$ "" << trade << '\n';
 
    exec->config_.logger->log(trade, e_severity_level::INFO, ""Open position: "");
 
    position_t position = (is_order ? position_order : position_trade);
    
    int prev_pos_sgn = (position.base_quantity > 0);
 
    if (trade.trade_side == e_side::BUY) {
        position.position_quote += trade.price.to_double() * trade.quantity.to_double();
        position.base_quantity += trade.quantity.to_double();
    }
    if (trade.trade_side == e_side::SELL) {
        position.position_quote -= trade.price.to_double() * trade.quantity.to_double();
        position.base_quantity -= trade.quantity.to_double();
    }
 
    int cur_pos_sgn = (position.base_quantity > 0);
 
    if (position.base_quantity == 0) {
        position.position_quote = 0;
        position.entry_price = 0;
    } else {
        if (position.position_quote != 0) { // –ü—Ä–∏–º–µ—Ä: BUY (p1, q1) = (1, 1) -> SELL (p2, q2) = (1.25, 0.8) -> q_remain = 0.2 but position = 0
            if (prev_pos_sgn == cur_pos_sgn) { // —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –º—ã —É—Å—Ä–µ–¥–Ω—è–µ–º—Å—è –ø–æ —Ü–µ–Ω–µ
                position.entry_price = std::abs(position.position_quote / position.base_quantity);   
            } else { // —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –Ω–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è —Å–º–µ–Ω–∏–ª–∞ —Å—Ç–æ—Ä–æ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å SELL –Ω–∞ BUY)
                position.entry_price = trade.price.to_double();
            }
        }
    }
 
    position.update_time = trade.trade_time;
 
    if (is_order) {
        position_order = position;
    } else {
        position_trade = position;
    }
 
    exec->config_.logger->log(position, e_severity_level::INFO, ""new position"");
 
    if (exec->config_.path_to_position_file != """") {
        if (exec->position_info_.position_file.is_open()) {
            exec->config_.logger->log(""writing to volume price file"");

            const auto& balances = exec->config_.api->get_account().value().balances;
            auto base_balance = balances.at(exec->config_.symbol->base);
            auto quote_balance = balances.at(exec->config_.symbol->quote);
 
            std::filesystem::resize_file(exec->config_.path_to_position_file, 0);
            exec->position_info_.position_file.seekp(0);
 
            // std::cout << ""{\""baseQuantity\"": \"""" + std::to_string(position.base_quantity) + ""\"",\n"" +
            //     ""\""entryPrice\"": \"""" + std::to_string(position.entry_price) + ""\"",\n"" +
            //     ""\""quotePosition\"": \"""" + std::to_string(position.position_quote) + ""\"",\n"" +
            //     ""\""baseBalance\"": \"""" + std::to_string(base_balance.locked + base_balance.free) + ""\"",\n"" +
            //     ""\""quoteBalance\"": \"""" + std::to_string(quote_balance.locked + quote_balance.free) + ""\"",\n"" + ""}"";
 
            exec->position_info_.position_file <<
                ""{\""baseQuantity\"": \"""" + std::to_string(position.base_quantity) + ""\"",\n"" <<
                ""\""entryPrice\"": \"""" + std::to_string(position.entry_price) + ""\"",\n"" <<
                ""\""quotePosition\"": \"""" + std::to_string(position.position_quote) + ""\"",\n"" <<
                ""\""baseBalance\"": \"""" + std::to_string(base_balance.locked + base_balance.free) + ""\"",\n"" <<
                ""\""quoteBalance\"": \"""" + std::to_string(quote_balance.locked + quote_balance.free) + ""\"",\n"" << ""}"" << std::flush;
        } else {
            exec->config_.logger->log(""execution position file is not open but has non zero path"");
        }
    }
}
 
void Execution::_position_info_t::reset_position(const position_t& position) {
    std::lock_guard lock(locker);
 
    position_order = position;
    position_trade = position;
 
    exec->config_.logger->log(position, e_severity_level::INFO, ""new position"");
}"
R440rDjm,text+ glows,marcusa3000,Lua,Thursday 4th of July 2024 08:49:41 AM CDT,"{
	Tools = ordered() {
		Background_30 = Background {
			NameSet = true,
			Inputs = {
				GlobalOut = Input { Value = 78, },
				Width = Input { Value = 1080, },
				Height = Input { Value = 1080, },
				Depth = Input { Value = 4, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				Type = Input { Value = FuID { ""Gradient"" }, },
				TopLeftRed = Input { Value = 0.046695, },
				TopLeftGreen = Input { Value = 0.05041564, },
				TopLeftBlue = Input { Value = 0.055, },
				TopRightRed = Input { Value = 1, },
				TopRightGreen = Input { Value = 1, },
				TopRightBlue = Input { Value = 1, },
				BottomLeftRed = Input { Value = 0.073688, },
				BottomLeftGreen = Input { Value = 0.219525824, },
				BottomLeftBlue = Input { Value = 0.488, },
				BottomRightGreen = Input { Value = 0.5, },
				BottomRightBlue = Input { Value = 1, },
				Start = Input { Value = { 0.5, 0 }, },
				End = Input { Value = { 0.5, 1 }, },
				Gradient = Input {
					Value = Gradient {
						Colors = {
							[0] = { 0.088201, 0.200315896, 0.457, 1 },
							[0.781094527363184] = { 0.06248, 0.06756928, 0.142, 1 },
							[1] = { 0.031929, 0.035453544, 0.087, 1 }
						}
					},
				},
			},
			ViewInfo = OperatorInfo { Pos = { -3300, -478.5 } },
		},
		BG_FX = GroupOperator {
			CtrlWZoom = false,
			NameSet = true,
			Inputs = ordered() {
				Input1 = InstanceInput {
					SourceOp = ""Dent2"",
					Source = ""Input"",
				}
			},
			Outputs = {
				Output1 = InstanceOutput {
					SourceOp = ""Merge13_61"",
					Source = ""Output"",
				}
			},
			ViewInfo = GroupInfo {
				Pos = { -3300, -379.5 },
				Flags = {
					AllowPan = false,
					GridSnap = true,
					ConnectedSnap = true,
					AutoSnap = true,
					RemoveRouters = true
				},
				Size = { 676, 396.364, 338, 24.2424 },
				Direction = ""Vertical"",
				PipeStyle = ""Direct"",
				Scale = 1,
				Offset = { 3300, 751.136 }
			},
			Tools = ordered() {
				Blur_25 = Blur {
					NameSet = true,
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						XBlurSize = Input { Value = 100, },
						Input = Input {
							SourceOp = ""GM_Mask_2"",
							Source = ""Output"",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -3465, -412.5 } },
				},
				Merge13_61 = Merge {
					Inputs = {
						Blend = Input { Value = 0.984, },
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""Merge13_55"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""Blur_25"",
							Source = ""Output"",
						},
						Center = Input { Value = { 0.5, 0.265347885402456 }, },
						ApplyMode = Input { Value = FuID { ""LinearDodge"" }, },
						PerformDepthMerge = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { -3300, -412.5 } },
				},
				FastNoise1_6 = FastNoise {
					NameSet = true,
					CustomData = {
						Settings = {
							[2] = {
								Tools = ordered() {
									FastNoise1_1 = FastNoise {
										Inputs = {
											Offset = Input { Value = 0.5 },
											Type = Input { Value = 1 },
											Width = Input { Value = 1080 },
											[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" } },
											NoiseBrightnessMap = Input {
												SourceOp = ""Bitmap1_1"",
												Source = ""Mask""
											},
											Color1Alpha = Input { Value = 1 },
											GlobalOut = Input { Value = 124 },
											Brightness = Input { Value = 1 },
											Height = Input { Value = 1080 },
											Detail = Input { Value = 0 }
										},
										CtrlWZoom = false,
										NameSet = true,
										ViewInfo = OperatorInfo { Pos = { -1650, 445.5 } },
										CustomData = {
										}
									}
								}
							},
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 1080, },
						Height = Input { Value = 1080, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 0.39, },
						LockXY = Input { Value = 0, },
						XScale = Input { Value = 3.78, },
						YScale = Input { Value = 0.4, },
						SeetheRate = Input { Value = 0.05, },
						Type = Input { Value = 1, },
						Color1Alpha = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.447761194029851] = { 0, 0, 0, 1 },
									[0.606965174129353] = { 1, 1, 1, 1 }
								}
							},
						},
					},
					ViewInfo = OperatorInfo { Pos = { -3575, -478.5 } },
				},
				BrightnessContrast1_48 = BrightnessContrast {
					Inputs = {
						EffectMask = Input {
							SourceOp = ""BrightnessContrast1_49"",
							Source = ""Output"",
						},
						ApplyMaskInverted = Input { Value = 1, },
						MaskChannel = Input { Value = 5, },
						Gain = Input { Value = 0, },
						Input = Input {
							SourceOp = ""FastNoise1_6"",
							Source = ""Output"",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -3465, -478.5 } },
				},
				GradientMapIt_2 = MacroOperator {
					CustomData = {
						Path = {
							Map = {
								[""Setting:""] = ""Macros:/""
							}
						},
					},
					Inputs = ordered() {
						Input = InstanceInput {
							SourceOp = ""GM_PR_2"",
							Source = ""Input"",
						},
						InputNest = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""InputNest"",
							Width = 1,
						},
						Invert = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""Invert"",
							Width = 1,
						},
						Input2 = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""MaskSeparator"",
						},
						Channel = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""Channel"",
						},
						Low = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""Low"",
							ControlGroup = 5,
							Default = 0,
						},
						High = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""High"",
							ControlGroup = 5,
							Default = 1,
						},
						GradientNest = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""GradientNest"",
							Name = ""Gradient"",
							Width = 1,
						},
						GradientType = InstanceInput {
							SourceOp = ""GM_FN_2"",
							Source = ""GradientType"",
						},
						Start = InstanceInput {
							SourceOp = ""GM_FN_2"",
							Source = ""Start"",
							DefaultX = 0,
							DefaultY = 0.5,
						},
						End = InstanceInput {
							SourceOp = ""GM_FN_2"",
							Source = ""End"",
							DefaultX = 1,
							DefaultY = 0.5,
						},
						Gradient = InstanceInput {
							SourceOp = ""GM_FN_2"",
							Source = ""Gradient"",
						},
						GradientInterpolationMethod = InstanceInput {
							SourceOp = ""GM_FN_2"",
							Source = ""GradientInterpolationMethod"",
						},
						Offset = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""Offset"",
							Page = ""Controls"",
							Default = 0,
						},
						Repeat = InstanceInput {
							SourceOp = ""GM_FN_2"",
							Source = ""Repeat"",
							Default = 0,
						},
						CompositeNest = InstanceInput {
							SourceOp = ""GM_BM_2"",
							Source = ""CompositeNest"",
							Name = ""Composite and Mask Settings"",
							Width = 1,
						},
						ApplyBlank2 = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""ApplyBlank1"",
						},
						ApplyMode = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""ApplyMode"",
						},
						Blend = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""Blend"",
							Default = 1,
						},
						Blank3 = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""Blank1"",
						},
						ApplyMaskInverted = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""ApplyMaskInverted"",
							Default = 0,
						},
						MultiplyByMask = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""MultiplyByMask"",
							Default = 0,
						},
						FitMask = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""FitMask"",
						},
						Blank4 = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""Blank2"",
						},
						MaskChannel = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""MaskChannel"",
							Default = 3,
						},
						MaskLow = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""MaskLow"",
							ControlGroup = 25,
							Default = 0,
						},
						MaskHigh = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""MaskHigh"",
							ControlGroup = 25,
							Default = 1,
						},
						MaskClipBlack = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""MaskClipBlack"",
							Name = ""Black"",
							Width = 0.5,
							Default = 1,
						},
						MaskClipWhite = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""MaskClipWhite"",
							Name = ""White"",
							Width = 0.5,
							Default = 1,
						},
						EffectMask = InstanceInput {
							SourceOp = ""GM_Mask_2"",
							Source = ""EffectMask"",
						}
					},
					Outputs = {
						MainOutput1 = InstanceOutput {
							SourceOp = ""GM_Mask_2"",
							Source = ""Output"",
						}
					},
					ViewInfo = GroupInfo { Pos = { -3465, -445.5 } },
					Tools = ordered() {
						GM_PR_2 = PipeRouter {
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								Input = Input {
									SourceOp = ""BrightnessContrast1_48"",
									Source = ""Output"",
								},
							},
							ViewInfo = PipeRouterInfo { Pos = { -55, 7.25757 } },
						},
						GM_BM_2 = BitmapMask {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
								MaskWidth = Input { Value = 1080, },
								MaskHeight = Input { Value = 1080, },
								PixelAspect = Input { Value = { 1, 1 }, },
								UseFrameFormatSettings = Input { Value = 1, },
								ClippingMode = Input { Value = FuID { ""None"" }, },
								Image = Input {
									SourceOp = ""GM_PR_2"",
									Source = ""Output"",
								},
								Channel = Input { Value = FuID { ""Luminance"" }, },
							},
							ViewInfo = OperatorInfo { Pos = { 55, 40.2576 } },
							UserControls = ordered() {
								Offset = {
									ICS_ControlPage = ""Controls"",
									INP_Integer = false,
									INPID_InputControl = ""ScrewControl"",
									LINKID_DataType = ""Number"",
									INP_MinScale = -0.5,
									INP_Default = 0,
									INP_MaxScale = 0.5,
									LINKS_Name = ""Offset"",
								},
								InputNest = {
									LBLC_DropDownButton = true,
									INPID_InputControl = ""LabelControl"",
									LBLC_NumInputs = 5,
									IC_ControlPage = 0,
									INP_Default = 0,
									LINKS_Name = ""Input Settings"",
								},
								GradientNest = {
									LBLC_DropDownButton = true,
									INPID_InputControl = ""LabelControl"",
									LBLC_NumInputs = 7,
									IC_ControlPage = 0,
									INP_Default = 1,
									LINKS_Name = ""Gradient Settings"",
								},
								CompositeNest = {
									LBLC_DropDownButton = true,
									INPID_InputControl = ""LabelControl"",
									LBLC_NumInputs = 13,
									IC_ControlPage = 0,
									INP_Default = 0,
									LINKS_Name = ""Composite Settings"",
								},
								MaskNest = {
									LBLC_DropDownButton = true,
									INPID_InputControl = ""LabelControl"",
									LBLC_NumInputs = 5,
									IC_ControlPage = 0,
									INP_Default = 0,
									LINKS_Name = ""Mask Settings"",
								}
							}
						},
						GM_FN_2 = FastNoise {
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								GlobalOut = Input { Value = 78, },
								Width = Input {
									Value = 1080,
									Expression = ""GM_BM_2.Image.OriginalWidth"",
								},
								Height = Input {
									Value = 1080,
									Expression = ""GM_BM_2.Image.OriginalHeight"",
								},
								[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
								Detail = Input { Value = 0, },
								Brightness = Input { Value = 1, },
								Type = Input { Value = 1, },
								Color1Alpha = Input { Value = 1, },
								Gradient = Input {
									Value = Gradient {
										Colors = {
											[0.0348258706467662] = { 0, 0, 0, 1 },
											[0.124378109452736] = { 0, 0.0976000000000001, 0.244, 1 },
											[0.288557213930348] = { 0.685, 0.294796599999999, 0.202075, 1 },
											[0.412935323383085] = { 1, 0.533664, 0.012, 1 },
											[1] = { 1, 1, 1, 1 }
										}
									},
								},
								Offset = Input {
									Value = 0.5,
									Expression = ""GM_BM_2.Offset+0.5"",
								},
								NoiseBrightnessMap = Input {
									SourceOp = ""GM_BM_2"",
									Source = ""Mask"",
								},
							},
							ViewInfo = OperatorInfo { Pos = { 55, 73.2576 } },
						},
						GM_Mask_2 = Merge {
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								Background = Input {
									SourceOp = ""GM_PR_2"",
									Source = ""Output"",
								},
								Foreground = Input {
									SourceOp = ""GM_FN_2"",
									Source = ""Output"",
								},
								PerformDepthMerge = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { 55, 106.258 } },
						}
					},
					Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
				},
				FastNoise1_7 = FastNoise {
					NameSet = true,
					CustomData = {
						Settings = {
							[2] = {
								Tools = ordered() {
									FastNoise1_1 = FastNoise {
										Inputs = {
											Offset = Input { Value = 0.5 },
											Type = Input { Value = 1 },
											Width = Input { Value = 1080 },
											[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" } },
											Color1Alpha = Input { Value = 1 },
											NoiseBrightnessMap = Input {
												SourceOp = ""Bitmap1_1"",
												Source = ""Mask""
											},
											GlobalOut = Input { Value = 124 },
											Brightness = Input { Value = 1 },
											Height = Input { Value = 1080 },
											Detail = Input { Value = 0 }
										},
										CtrlWZoom = false,
										NameSet = true,
										ViewInfo = OperatorInfo { Pos = { -1650, 445.5 } },
										CustomData = {
										}
									}
								}
							},
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 1080, },
						Height = Input { Value = 1080, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Detail = Input { Value = 0.39, },
						Contrast = Input { Value = 2.59, },
						LockXY = Input { Value = 0, },
						XScale = Input { Value = 5.98, },
						YScale = Input { Value = 0.4, },
						Seethe = Input { Value = 0.768, },
						SeetheRate = Input { Value = 0.1, },
						Type = Input { Value = 1, },
						Color1Alpha = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.328358208955224] = { 0, 0, 0, 1 },
									[0.676616915422886] = { 1, 1, 1, 1 }
								}
							},
						},
					},
					ViewInfo = OperatorInfo { Pos = { -3575, -544.5 } },
				},
				FastNoise1_5 = FastNoise {
					NameSet = true,
					CustomData = {
						Settings = {
							[2] = {
								Tools = ordered() {
									FastNoise1_5 = FastNoise {
										CtrlWZoom = false,
										NameSet = true,
										CustomData = {
										},
										Inputs = {
											GlobalOut = Input { Value = 78, },
											Width = Input { Value = 1080, },
											Height = Input { Value = 1080, },
											[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
											Detail = Input { Value = 0, },
											Brightness = Input { Value = 1, },
											Type = Input { Value = 1, },
											Color1Alpha = Input { Value = 1, },
											Offset = Input { Value = 0.5, },
										},
										ViewInfo = OperatorInfo { Pos = { -2970, -643.5 } },
									}
								}
							},
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 1080, },
						Height = Input { Value = 1080, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Contrast = Input { Value = 2.5, },
						XScale = Input { Value = 15, },
						SeetheRate = Input { Value = 0.5, },
						Color1Alpha = Input { Value = 1, },
					},
					ViewInfo = OperatorInfo { Pos = { -3025, -643.5 } },
				},
				Rectangle4 = RectangleMask {
					Inputs = {
						Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
						SoftEdge = Input { Value = 0.5, },
						Invert = Input { Value = 1, },
						MaskWidth = Input { Value = 1080, },
						MaskHeight = Input { Value = 1080, },
						PixelAspect = Input { Value = { 1, 1 }, },
						UseFrameFormatSettings = Input { Value = 1, },
						ClippingMode = Input { Value = FuID { ""None"" }, },
						Center = Input { Value = { 0.5, -0.0093787335722819 }, },
						Width = Input { Value = 1.09916367980884, },
						Height = Input { Value = 1, },
					},
					ViewInfo = OperatorInfo { Pos = { -3465, -577.5 } },
				},
				BrightnessContrast1_49 = BrightnessContrast {
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Gain = Input { Value = 0, },
						Input = Input {
							SourceOp = ""FastNoise1_7"",
							Source = ""Output"",
						},
						EffectMask = Input {
							SourceOp = ""Rectangle4"",
							Source = ""Mask"",
						}
					},
					ViewInfo = OperatorInfo { Pos = { -3465, -544.5 } },
				},
				ChromateIt_7 = MacroOperator {
					CustomData = {
						Path = {
							Map = {
								[""Setting:""] = ""Macros:/""
							}
						},
					},
					Inputs = ordered() {
						Input = InstanceInput {
							SourceOp = ""ChICD_7"",
							Source = ""Input"",
						},
						Mode = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Mode"",
							Page = ""Controls"",
							Default = 1,
						},
						Channels = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Channels"",
							Page = ""Controls"",
						},
						AB1 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Controls"",
						},
						B1 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank1"",
							Page = ""Controls"",
						},
						Info = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Version"",
							Name = ""Show Viewer Controls"",
							Page = ""Controls"",
						},
						ShowCenterControl = InstanceInput {
							SourceOp = ""ChICtrlB_7"",
							Source = ""ShowViewControls"",
							Name = ""Zoom"",
							Width = 0.5,
							Page = ""Controls"",
						},
						ShowOffsetControl = InstanceInput {
							SourceOp = ""ChICtrlA_7"",
							Source = ""ShowViewControls"",
							Name = ""Offset"",
							Width = 0.5,
							Page = ""Controls"",
						},
						AB2 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Controls"",
						},
						Center = InstanceInput {
							SourceOp = ""ChICtrlB_7"",
							Source = ""Point1"",
							Name = ""Center"",
							Page = ""Controls"",
							DefaultX = 0.5,
							DefaultY = 0.5,
						},
						Offset = InstanceInput {
							SourceOp = ""ChICtrlA_7"",
							Source = ""Point1"",
							Name = ""Channel Offset"",
							Page = ""Controls"",
						},
						Angle = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Rotate"",
							Name = ""Angle"",
							Width = 1,
							Page = ""Controls"",
						},
						AB3 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Controls"",
						},
						B2 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank1"",
							Page = ""Controls"",
						},
						Style = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Style"",
							Page = ""Controls"",
							Default = 0,
						},
						AB4 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Controls"",
						},
						Zoom = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""CASize"",
							Name = ""Zoom"",
							Page = ""Controls"",
						},
						Boost = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""CABoost"",
							Name = ""Zoom & Blur Boost"",
							Page = ""Controls"",
							Default = 10,
						},
						AB5 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Controls"",
						},
						B3 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank1"",
							Page = ""Controls"",
						},
						Blur = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""CABlur"",
							Page = ""Controls"",
							Default = 1,
						},
						ZoomBlur = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""ZoomBlur"",
							Name = ""Z"",
							Width = 0.33,
							Page = ""Controls"",
							Default = 1,
						},
						AngleBlur = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""AngleBlur"",
							Name = ""A"",
							Width = 0.33,
							Page = ""Controls"",
							Default = 1,
						},
						OffsetBlur = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""OffsetBlur"",
							Name = ""O"",
							Width = 0.33,
							Page = ""Controls"",
							Default = 1,
						},
						AB6 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Controls"",
						},
						OffsetClipping = InstanceInput {
							SourceOp = ""ChIOffsetBlr_7"",
							Source = ""ClippingMode"",
							Name = ""Offset Clipping"",
							Page = ""Controls"",
						},
						AB7 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Controls"",
						},
						B4 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank1"",
							Page = ""Controls"",
						},
						Edges = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Edge"",
							Name = ""Edges"",
							Page = ""Controls"",
							Default = 3,
						},
						B5 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank1"",
							Page = ""Controls"",
						},
						Strength = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Strength"",
							Name = ""Overall Strength"",
							Page = ""Controls"",
							Default = 0.5,
						},
						B6 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank1"",
							Page = ""Controls"",
						},
						Version = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Version"",
							Name = ""Chromate It Œ≤eta 0.303"",
							Page = ""Controls"",
						},
						Blend = InstanceInput {
							SourceOp = ""ChICB_Blend_7"",
							Source = ""Blend"",
							Page = ""Settings"",
							Default = 1,
						},
						Blank1 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank5"",
							Page = ""Settings"",
						},
						ChangeDepth = InstanceInput {
							SourceOp = ""ChICD_7"",
							Source = ""ChangeDepth"",
							Page = ""Settings"",
						},
						ChangeDepthInfo = InstanceInput {
							SourceOp = ""ChICD_7"",
							Source = ""Info"",
							Page = ""Settings"",
						},
						Blank2 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank5"",
							Page = ""Settings"",
						},
						ApplyMaskInverted = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""ApplyMaskInverted"",
							Page = ""Settings"",
							Default = 0,
						},
						MultiplyByMask = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""MultiplyByMask"",
							Page = ""Settings"",
							Default = 0,
						},
						AB8 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Settings"",
						},
						SoftEdge = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""SoftEdge"",
							Page = ""Settings"",
						},
						AB9 = InstanceInput {
							SourceOp = ""ChIMrg_7"",
							Source = ""ApplyBlank1"",
							Page = ""Settings"",
						},
						FitMask = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""FitInput"",
							Page = ""Settings"",
						},
						MaskCenter = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""Center"",
							Page = ""Settings"",
						},
						MaskChannel = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""Channel"",
							Page = ""Settings"",
							Default = 3,
						},
						MaskLow = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""Low"",
							ControlGroup = 21,
							Page = ""Settings"",
							Default = 0,
						},
						MaskHigh = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""High"",
							ControlGroup = 21,
							Page = ""Settings"",
							Default = 1,
						},
						MaskClipBlack = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""ClipBlack"",
							Name = ""Black"",
							Width = 0.5,
							Page = ""Settings"",
							Default = 1,
						},
						MaskClipWhite = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""ClipWhite"",
							Name = ""White"",
							Width = 0.5,
							Page = ""Settings"",
							Default = 1,
						},
						Blank3 = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Blank5"",
							Page = ""Settings"",
						},
						MotionBlur = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""MotionBlur"",
							Page = ""Settings"",
						},
						Quality = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""Quality"",
							Page = ""Settings"",
							Default = 5,
						},
						ShutterAngle = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""ShutterAngle"",
							Page = ""Settings"",
							Default = 180,
						},
						CenterBias = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""CenterBias"",
							Page = ""Settings"",
						},
						SampleSpread = InstanceInput {
							SourceOp = ""ChIB_7"",
							Source = ""SampleSpread"",
							Page = ""Settings"",
							Default = 1,
						},
						EffectMask = InstanceInput {
							SourceOp = ""ChIBitmap_7"",
							Source = ""Image"",
							Name = ""Input"",
						}
					},
					Outputs = {
						MainOutput1 = InstanceOutput {
							SourceOp = ""ChIMrg_7"",
							Source = ""Output"",
						}
					},
					ViewInfo = GroupInfo { Pos = { -3135, -577.5 } },
					Tools = ordered() {
						ChICD_7 = ChangeDepth {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								Depth = Input {
									Value = 1,
									Expression = ""ChangeDepth"",
								},
								Input = Input {
									SourceOp = ""Highlight3"",
									Source = ""Output"",
								},
								ChangeDepth = Input { Value = 1, },
							},
							ViewInfo = OperatorInfo { Pos = { -0.96875, 8.25757 } },
							UserControls = ordered() {
								ChangeDepth = {
									{ MBTNC_AddButton = ""Keep"" },
									{ MBTNC_AddButton = ""int8"" },
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									INPID_InputControl = ""MultiButtonControl"",
									MBTNC_ShowBasicButton = true,
									INP_MaxScale = 1,
									INP_Default = 0,
									ICS_ControlPage = ""Controls"",
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									MBTNC_ShowName = true,
									MBTNC_StretchToFit = true,
									MBTNC_ShowToolTip = false,
									LINKS_Name = ""Change Depth""
								},
								Info = {
									INP_External = false,
									INPID_InputControl = ""LabelControl"",
									IC_ControlPage = 0,
									INP_Passive = true,
									LINKS_Name = ""int8 processes faster"",
								}
							}
						},
						ChIA_7 = Transform {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								MotionBlur = Input { Expression = ""ChIB_7.MotionBlur"", },
								Quality = Input {
									Value = 5,
									Expression = ""ChIB_7.Quality"",
								},
								ShutterAngle = Input { Expression = ""ChIB_7.ShutterAngle"", },
								CenterBias = Input { Expression = ""ChIB_7.CenterBias"", },
								SampleSpread = Input { Expression = ""ChIB_7.SampleSpread"", },
								Center = Input { Expression = ""ChIB_7.Mode == 0 and\nPoint(0.5+((ChIB_7.Center.X-0.5)*0.5), 0.5+((ChIB_7.Center.Y-0.5)*0.5)) or\nPoint(0.5+((ChIB_7.Center.X-0.5)), 0.5+((ChIB_7.Center.Y-0.5)))"", },
								Pivot = Input { Expression = ""ChICtrlB_7.Point1"", },
								Size = Input {
									Value = 0.9955,
									Expression = ""ChIB_7.Style == 0 and (ChIB_7.Mode == 0 and 1-(ChIB_7.CASize*0.0045*(ChIB_7.CABoost+1))*ChIB_7.Strength or 1-(ChIB_7.CASize*0.009*(ChIB_7.CABoost+1))*ChIB_7.Strength) or (ChIB_7.Mode == 0 and 1 or 1-(ChIB_7.CASize*0.009*(ChIB_7.CABoost+1))*ChIB_7.Strength*1)"",
								},
								Angle = Input { Expression = ""ChIB_7.Mode == 1 and ChIB_7.Angle or ChIB_7.Angle*0.5"", },
								Edges = Input {
									Value = 2,
									Expression = ""ChIB_7.Edge"",
								},
								InvertTransform = Input { Value = 1, },
								Input = Input {
									SourceOp = ""ChICD_7"",
									Source = ""Output"",
								},
								CommentsNest = Input { Value = 0, },
								FrameRenderScriptNest = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { 164.031, 41.2576 } },
						},
						ChICB_Blend_7 = ChannelBoolean {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								EffectMask = Input {
									SourceOp = ""CHIMskBool_7"",
									Source = ""Output"",
								},
								ApplyMaskInverted = Input { Expression = ""ChIB_7.MultiplyByMask==1 and 0 or ChIB_7.ApplyMaskInverted"", },
								Background = Input {
									SourceOp = ""ChICD_7"",
									Source = ""Output"",
								},
								Foreground = Input {
									SourceOp = ""ChIOffsetBlr_7"",
									Source = ""Output"",
								},
								CommentsNest = Input { Value = 0, },
								FrameRenderScriptNest = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { -0.96875, 239.258 } },
						},
						ChIB_7 = Transform {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							CustomData = {
								Settings = {
								}
							},
							Inputs = {
								ProcessRed = Input { Expression = ""Mode == 0 and (Channels==0 and 1 or 0) or (Channels==1 and 1 or 0)"", },
								ProcessGreen = Input {
									Value = 0,
									Expression = ""Mode == 0 and (Channels==1 and 1 or 0) or (Channels==2 and 1 or 0)"",
								},
								ProcessBlue = Input {
									Value = 0,
									Expression = ""Mode == 0 and (Channels==2 and 1 or 0) or (Channels==0 and 1 or 0)"",
								},
								Quality = Input { Value = 5, },
								TransformNest = Input { Value = 0, },
								Center = Input { Expression = ""Point(0.5+((ChICtrlA_7.Point1.X-0.5)*Strength), 0.5+((ChICtrlA_7.Point1.Y-0.5)*Strength))"", },
								Pivot = Input { Expression = ""ChICtrlB_7.Point1"", },
								Size = Input {
									Value = 0.9945,
									Expression = ""Mode == 0 and (Style == 0 and (1-(CASize*0.01*(CABoost+1))*Strength) or (1+(CASize*0.01*(CABoost+1))*Strength*1.25)) or (Style == 0 and (1-(CASize*0.011*(CABoost+1))*Strength) or (1+(CASize*0.01*(CABoost+1))*Strength*(CASize<0 and 1.25 or 2.5)))"",
								},
								Angle = Input { Expression = ""Mode==1 and Rotate*Strength or Rotate*2*Strength"", },
								Edges = Input {
									Value = 2,
									Expression = ""Edge"",
								},
								FlattenTransform = Input { Value = 1, },
								Input = Input {
									SourceOp = ""ChICB_7"",
									Source = ""Output"",
								},
								CommentsNest = Input { Value = 0, },
								FrameRenderScriptNest = Input { Value = 0, },
								Mode = Input { Value = 1, },
								Channels = Input { Value = 1, },
								CASize = Input { Value = 1, },
								CABoost = Input { Value = 0, },
								OffsetBlur = Input { Value = 0, },
								Strength = Input { Value = 0.5, },
							},
							ViewInfo = OperatorInfo { Pos = { 164.031, 107.258 } },
							Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, },
							UserControls = ordered() {
								Mode = {
									{ MBTNC_AddButton = ""2 Channels"" },
									{ MBTNC_AddButton = ""(3 Channels)"" },
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									INPID_InputControl = ""MultiButtonControl"",
									MBTNC_ShowBasicButton = true,
									INP_MaxScale = 1,
									ICS_ControlPage = ""Controls"",
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									MBTNC_ShowName = true,
									MBTNC_StretchToFit = true,
									MBTNC_ShowToolTip = false,
									LINKS_Name = ""Mode""
								},
								Channels = {
									{ MBTNC_AddButton = ""C+R (R)"" },
									{ MBTNC_AddButton = ""M+G (G)"" },
									{ MBTNC_AddButton = ""Y+B (B)"" },
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									INPID_InputControl = ""MultiButtonControl"",
									MBTNC_ShowBasicButton = true,
									INP_MaxScale = 1,
									ICS_ControlPage = ""Controls"",
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									MBTNC_ShowName = true,
									MBTNC_StretchToFit = true,
									MBTNC_ShowToolTip = false,
									LINKS_Name = ""Channels""
								},
								Rotate = {
									ICD_Width = ""1"",
									INP_Integer = false,
									ICS_ControlPage = ""Controls"",
									IC_Visible = true,
									ICD_Center = ""0"",
									INP_UserData3 = 999,
									INPID_InputControl = ""ScrewControl"",
									INP_MinScale = ""-180"",
									INP_MaxScale = ""180"",
									LINKID_DataType = ""Number"",
									INP_Default = ""0"",
									INP_Passive = false,
									LINKS_ID = ""Rotate"",
									LINKS_Name = ""Rotate"",
								},
								CASize = {
									INP_Integer = false,
									INPID_InputControl = ""SliderControl"",
									ICS_ControlPage = ""Controls"",
									LINKID_DataType = ""Number"",
									INP_MinScale = -1,
									INP_MaxScale = 1,
									LINKS_Name = ""Size"",
								},
								CABoost = {
									INP_Integer = false,
									INPID_InputControl = ""SliderControl"",
									INP_MaxScale = 20,
									INP_Default = 10,
									INP_MinScale = 0,
									INP_MinAllowed = 0,
									LINKID_DataType = ""Number"",
									ICS_ControlPage = ""Controls"",
									LINKS_Name = ""Boost"",
								},
								CABlur = {
									INP_Integer = false,
									INPID_InputControl = ""SliderControl"",
									INP_MaxScale = 2,
									INP_Default = 1,
									INP_MinScale = 0,
									INP_MinAllowed = 0,
									LINKID_DataType = ""Number"",
									ICS_ControlPage = ""Controls"",
									LINKS_Name = ""Blur"",
								},
								ZoomBlur = {
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									INPID_InputControl = ""CheckboxControl"",
									INP_MaxScale = 1,
									INP_Default = 1,
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									CBC_TriState = false,
									ICS_ControlPage = ""Controls"",
									ICD_Width = 0.5,
									LINKS_Name = ""Size""
								},
								AngleBlur = {
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									INPID_InputControl = ""CheckboxControl"",
									INP_MaxScale = 1,
									INP_Default = 1,
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									CBC_TriState = false,
									ICS_ControlPage = ""Controls"",
									ICD_Width = 0.5,
									LINKS_Name = ""Size""
								},
								OffsetBlur = {
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									INPID_InputControl = ""CheckboxControl"",
									INP_MaxScale = 1,
									INP_Default = 1,
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									CBC_TriState = false,
									ICS_ControlPage = ""Controls"",
									ICD_Width = 0.5,
									LINKS_Name = ""Offset""
								},
								Strength = {
									INP_MaxAllowed = 1,
									INP_Integer = false,
									INPID_InputControl = ""SliderControl"",
									INP_MaxScale = 1,
									INP_MinScale = 0,
									INP_MinAllowed = 0,
									LINKID_DataType = ""Number"",
									ICS_ControlPage = ""Controls"",
									LINKS_Name = ""Strength""
								},
								Edge = {
									{ MBTNC_AddButton = ""Canvas"" },
									{ MBTNC_AddButton = ""Wrap"" },
									{ MBTNC_AddButton = ""Dupe"" },
									{ MBTNC_AddButton = ""Mirror"" },
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									INPID_InputControl = ""MultiButtonControl"",
									MBTNC_ShowBasicButton = true,
									INP_MaxScale = 1,
									INP_Default = 2,
									ICS_ControlPage = ""Controls"",
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									MBTNC_ShowName = true,
									MBTNC_StretchToFit = true,
									MBTNC_ShowToolTip = false,
									LINKS_Name = ""Edge""
								},
								Style = {
									{ MBTNC_AddButton = ""Centered"" },
									{ MBTNC_AddButton = ""MinMaxed"" },
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									INPID_InputControl = ""MultiButtonControl"",
									MBTNC_ShowBasicButton = true,
									INP_MaxScale = 1,
									INP_Default = 0,
									ICS_ControlPage = ""Controls"",
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									MBTNC_ShowName = true,
									MBTNC_StretchToFit = true,
									MBTNC_ShowToolTip = false,
									LINKS_Name = ""Style""
								},
								Mnest = {
									INP_MaxAllowed = 1000000,
									INP_Integer = false,
									LBLC_DropDownButton = true,
									INPID_InputControl = ""LabelControl"",
									LBLC_NumInputs = 20,
									INP_MaxScale = 1,
									INP_MinScale = 0,
									INP_MinAllowed = -1000000,
									LINKID_DataType = ""Number"",
									INP_Passive = true,
									ICS_ControlPage = ""Controls"",
									LINKS_Name = ""Blend, Depth, Mask & Motion Blur""
								},
								Version = {
									INP_External = false,
									INPID_InputControl = ""LabelControl"",
									IC_ControlPage = 0,
									INP_Passive = true,
									LINKS_Name = ""Macro name Œ≤eta 0.0"",
								}
							}
						},
						ChIPreBlr_7 = Transform {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							CustomData = {
								Settings = {
								}
							},
							Inputs = {
								Pivot = Input { Expression = ""ChICtrlB_7.Point1"", },
								Size = Input {
									Value = 0.99725,
									Expression = ""ChIB_7.Style==0 and (ChIB_7.ZoomBlur==0 and 1 or max(0.01,(1-(ChISizeBlr_7.Length/2)))) or 1"",
								},
								XSize = Input { Value = 0.97305, },
								YSize = Input { Value = 0.97305, },
								Angle = Input { Expression = ""-ChISizeBlr_7.Angle*0.5"", },
								Edges = Input {
									Value = 2,
									Expression = ""ChIB_7.Edge"",
								},
								Input = Input {
									SourceOp = ""ChIB_7"",
									Source = ""Output"",
								},
							},
							ViewInfo = OperatorInfo { Pos = { 164.031, 173.258 } },
						},
						ChISizeBlr_7 = DirectionalBlur {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							CustomData = {
								Settings = {
								}
							},
							Inputs = {
								Type = Input { Value = 3, },
								Center = Input { Expression = ""ChICtrlB_7.Point1"", },
								Length = Input {
									Value = 0.00549999999999995,
									Expression = ""ChIB_7.Style==0 and (ChIB_7.ZoomBlur==0 and 0 or abs(min(5,((ChIB_7.Size-1)*ChIB_7.CABlur)))) or (ChIB_7.ZoomBlur==0 and 0 or abs(min(5,((ChIB_7.Size-1)*ChIB_7.CABlur))))/(ChIB_7.CASize<0 and -1 or 3)*ChIB_7.ZoomBlur"",
								},
								Angle = Input { Expression = ""(ChIB_7.Rotate*ChIB_7.CABlur*ChIB_7.Strength*ChIB_7.AngleBlur*0.5*(1+ChIB_7.CABoost*0.2)) >= 90 and 90 or (ChIB_7.Rotate*ChIB_7.CABlur*ChIB_7.Strength*ChIB_7.AngleBlur*0.5*(1+ChIB_7.CABoost*0.2)) <= -90 and -90 or (ChIB_7.Rotate*ChIB_7.CABlur*ChIB_7.Strength*ChIB_7.AngleBlur*0.5*(1+ChIB_7.CABoost*0.2))"", },
								ClippingMode = Input { Expression = ""ChIOffsetBlr_7.ClippingMode"", },
								Input = Input {
									SourceOp = ""ChIPreBlr_7"",
									Source = ""Output"",
								},
								CommentsNest = Input { Value = 0, },
								FrameRenderScriptNest = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { 164.031, 206.258 } },
						},
						ChIOffsetBlr_7 = Blur {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								Blend = Input {
									Value = 0,
									Expression = ""ChIB_7.OffsetBlur"",
								},
								Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
								LockXY = Input { Value = 0, },
								XBlurSize = Input {
									Value = 0,
									Expression = ""abs((ChICtrlA_7.Offset.X-0.5)*80*ChIB_7.CABlur*(ChIB_7.CABlur+ChIB_7.CABoost*0.5))*ChIB_7.Strength > 1500 and 1500 or abs((ChICtrlA_7.Offset.X-0.5)*80*ChIB_7.CABlur*(ChIB_7.CABlur+ChIB_7.CABoost*0.5))*ChIB_7.Strength"",
								},
								YBlurSize = Input {
									Value = 0,
									Expression = ""abs((ChICtrlA_7.Offset.Y-0.5)*80*ChIB_7.CABlur*(ChIB_7.CABlur+ChIB_7.CABoost*0.5))*ChIB_7.Strength > 1500 and 1500 or abs((ChICtrlA_7.Offset.Y-0.5)*80*ChIB_7.CABlur*(ChIB_7.CABlur+ChIB_7.CABoost*0.5))*ChIB_7.Strength"",
								},
								Input = Input {
									SourceOp = ""ChISizeBlr_7"",
									Source = ""Output"",
								},
								CommentsNest = Input { Value = 0, },
								FrameRenderScriptNest = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { 164.031, 239.258 } },
							UserControls = ordered() { CACenter = { INP_DefaultX = 0.5, INPID_PreviewControl = ""CrosshairControl"", INP_DefaultY = 0.5, INPID_InputControl = ""OffsetControl"", LINKID_DataType = ""Point"", CHC_Channels = ""NormalCross"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Center"", }, CAOffset = { INP_DefaultX = 0.5, INPID_PreviewControl = ""CrosshairControl"", INP_DefaultY = 0.5, INPID_InputControl = ""OffsetControl"", LINKID_DataType = ""Point"", CHC_Channels = ""NormalCross"", ICS_ControlPage = ""Controls"", LINKS_Name = ""Center"", } }
						},
						ChICtrlA_7 = TriangleMask {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								MaskWidth = Input { Value = 320, },
								MaskHeight = Input { Value = 240, },
								PixelAspect = Input { Value = { 1, 1 }, },
								ShowViewControls = Input { Value = 0, },
								Point1 = Input { Value = { 0.5, 0.5 }, },
							},
							ViewInfo = OperatorInfo { Pos = { -55.9688, 74.2576 } },
							UserControls = ordered() {
								ShowViewControls = {
									INP_MaxAllowed = 1,
									INP_Integer = false,
									INPID_InputControl = ""CheckboxControl"",
									CBC_TriState = false,
									INP_MaxScale = 1,
									INP_Default = 1,
									ICD_Width = 0.5,
									INP_MinScale = 0,
									INP_External = false,
									LINKID_DataType = ""Number"",
									ICS_ControlPage = ""Controls"",
									INP_Passive = true,
									INP_MinAllowed = 0,
									LINKS_Name = ""Show View Controls""
								},
								Point1 = {
									INPID_PreviewControl = ""CrosshairControl"",
									LINKID_DataType = ""Point"",
									ICS_ControlPage = ""Controls"",
									CHC_Channels = ""NormalCross"",
									INPID_InputControl = ""OffsetControl"",
									LINKS_Name = ""Offset"",
								}
							}
						},
						ChICtrlB_7 = TriangleMask {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								MaskWidth = Input { Value = 320, },
								MaskHeight = Input { Value = 240, },
								PixelAspect = Input { Value = { 1, 1 }, },
								Point1 = Input { Value = { 0.5, 0.5 }, },
							},
							ViewInfo = OperatorInfo { Pos = { -55.9688, 107.258 } },
							UserControls = ordered() {
								ShowViewControls = {
									INP_MaxAllowed = 1,
									INP_Integer = false,
									INPID_InputControl = ""CheckboxControl"",
									CBC_TriState = false,
									INP_MaxScale = 1,
									INP_Default = 1,
									ICD_Width = 0.5,
									INP_MinScale = 0,
									INP_External = false,
									LINKID_DataType = ""Number"",
									ICS_ControlPage = ""Controls"",
									INP_Passive = true,
									INP_MinAllowed = 0,
									LINKS_Name = ""Show View Controls""
								},
								Point1 = {
									INPID_PreviewControl = ""CrosshairControl"",
									LINKID_DataType = ""Point"",
									ICS_ControlPage = ""Controls"",
									CHC_Channels = ""NormalCross"",
									INPID_InputControl = ""OffsetControl"",
									LINKS_Name = ""CACenter"",
								}
							}
						},
						CHIMskBool_7 = ChannelBoolean {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								ToRed = Input { Value = 4, },
								ToGreen = Input { Value = 4, },
								ToBlue = Input { Value = 4, },
								ToAlpha = Input {
									Value = 4,
									Expression = ""ChIB_7.MultiplyByMask==1 and 16 or 4"",
								},
								Background = Input {
									SourceOp = ""ChIBitmap_7"",
									Source = ""Mask"",
								},
							},
							ViewInfo = OperatorInfo { Pos = { -110.969, 239.258 } },
						},
						ChIBitmap_7 = BitmapMask {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								ShowViewControls = Input { Value = 0, },
								Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
								MaskWidth = Input { Value = 1080, },
								MaskHeight = Input { Value = 1080, },
								PixelAspect = Input { Value = { 1, 1 }, },
								UseFrameFormatSettings = Input { Value = 1, },
								ClippingMode = Input { Value = FuID { ""None"" }, },
								Channel = Input { Value = FuID { ""Luminance"" }, },
							},
							ViewInfo = OperatorInfo { Pos = { -165.969, 305.258 } },
						},
						ChIMC_7 = MatteControl {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								Blend = Input {
									Value = 0,
									Expression = ""ChIB_7.MultiplyByMask"",
								},
								Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
								[""Garbage.Matte""] = Input {
									SourceOp = ""ChIBitmap_7"",
									Source = ""Mask"",
								},
								[""Garbage.MaskNest""] = Input { Value = 1, },
								[""Garbage.MaskInverted""] = Input {
									Value = 1,
									Expression = ""1-ChIB_7.ApplyMaskInverted"",
								},
								Background = Input {
									SourceOp = ""ChICB_Blend_7"",
									Source = ""Output"",
								},
								CommentsNest = Input { Value = 0, },
								FrameRenderScriptNest = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { -0.96875, 305.258 } },
						},
						ChICB_7 = ChannelBoolean {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							CustomData = {
								Settings = {
								}
							},
							Inputs = {
								ClippingMode = Input { Value = FuID { ""Frame"" }, },
								ToRed = Input {
									Value = 4,
									Expression = ""ChIB_7.Mode==0 and 0 or ChIB_7.Channels==2 and 0 or 4"",
								},
								ToGreen = Input {
									Value = 4,
									Expression = ""ChIB_7.Mode==0 and 1 or ChIB_7.Channels==0 and 1 or 4"",
								},
								ToBlue = Input { Expression = ""ChIB_7.Mode==0 and 2 or ChIB_7.Channels==1 and 2 or 4"", },
								ToAlpha = Input {
									Value = 4,
									Expression = ""ChIB_7.Mode==0 and 3 or 4"",
								},
								Background = Input {
									SourceOp = ""ChICD_7"",
									Source = ""Output"",
								},
								Foreground = Input {
									SourceOp = ""ChIA_7"",
									Source = ""Output"",
								},
								CommentsNest = Input { Value = 0, },
								FrameRenderScriptNest = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { 164.031, 74.2576 } },
						},
						ChIMrg_7 = Merge {
							CtrlWZoom = false,
							CtrlWShown = false,
							NameSet = true,
							Inputs = {
								Blend = Input { Value = 0, },
								Background = Input {
									SourceOp = ""ChIMC_7"",
									Source = ""Output"",
								},
								Foreground = Input {
									SourceOp = ""ChIMC_7"",
									Source = ""Output"",
								},
								FilterMethod = Input { Value = 0, },
								PerformDepthMerge = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { -0.96875, 371.258 } },
						}
					},
					Colors = { TileColor = { R = 0.549019607843137, G = 0.352941176470588, B = 0.247058823529412 }, },
					UserControls = ordered() {
						Controls = ControlPage {
							CT_Visible = true,
							CT_Priority = 0,
							CTID_DIB_ID = ""Icons.Tools.Tabs.Controls""
						},
						Settings = ControlPage {
							CT_Visible = true,
							CT_Priority = 0,
							CTID_DIB_ID = ""Icons.Tools.Tabs.Common""
						},
						Common = ControlPage {
							CT_Visible = false
						}
					}
				},
				Merge13_60 = Merge {
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""FastNoise1_4"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""FastNoise1_5"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""Multiply"" }, },
						PerformDepthMerge = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { -3135, -643.5 } },
				},
				Highlight3 = Highlight {
					Inputs = {
						Low = Input { Value = 0.55, },
						High = Input { Value = 0.744, },
						Curve = Input { Value = 0.95, },
						Length = Input { Value = 0.677, },
						Input = Input {
							SourceOp = ""Merge13_60"",
							Source = ""Output"",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -3135, -610.5 } },
				},
				Merge13_55 = Merge {
					Inputs = {
						MaskChannel = Input { Value = 5, },
						Background = Input {
							SourceOp = ""Dent2"",
							Source = ""Output"",
						},
						Foreground = Input {
							SourceOp = ""ChIMrg_7"",
							Source = ""Output"",
						},
						ApplyMode = Input { Value = FuID { ""Screen"" }, },
						PerformDepthMerge = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { -3300, -577.5 } },
				},
				FastNoise1_4 = FastNoise {
					NameSet = true,
					CustomData = {
						Settings = {
							[2] = {
								Tools = ordered() {
									FastNoise1_1 = FastNoise {
										Inputs = {
											Offset = Input { Value = 0.5 },
											Type = Input { Value = 1 },
											Width = Input { Value = 1080 },
											[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" } },
											NoiseBrightnessMap = Input {
												SourceOp = ""Bitmap1_1"",
												Source = ""Mask""
											},
											Color1Alpha = Input { Value = 1 },
											GlobalOut = Input { Value = 124 },
											Brightness = Input { Value = 1 },
											Height = Input { Value = 1080 },
											Detail = Input { Value = 0 }
										},
										CtrlWZoom = false,
										NameSet = true,
										ViewInfo = OperatorInfo { Pos = { -1650, 445.5 } },
										CustomData = {
										}
									}
								}
							},
						}
					},
					Inputs = {
						GlobalOut = Input { Value = 78, },
						Width = Input { Value = 1080, },
						Height = Input { Value = 1080, },
						[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
						Contrast = Input { Value = 0.86, },
						XScale = Input { Value = 40, },
						SeetheRate = Input { Value = 0.03, },
						Type = Input { Value = 1, },
						Color1Alpha = Input { Value = 1, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0.791044776119403] = { 0, 0, 0, 1 },
									[0.830845771144279] = { 1, 1, 1, 1 }
								}
							},
						},
					},
					ViewInfo = OperatorInfo { Pos = { -3135, -676.5 } },
				},
				Dent2 = Dent {
					Inputs = {
						Center = Input { Value = { 0.5, -0.150705082032813 }, },
						Size = Input { Value = 2.31343022832583, },
						Strength = Input { Value = 0.49, },
						Input = Input {
							SourceOp = ""Background_30"",
							Source = ""Output"",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -3300, -742.5 } },
				}
			},
		},
		Merge13_58 = Merge {
			Inputs = {
				MaskChannel = Input { Value = 5, },
				Background = Input {
					SourceOp = ""Merge13_61"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Text1_32"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -3300, -280.5 } },
		},
		FilmGrain1_4 = FilmGrain {
			Inputs = {
				MaskHigh = Input { Value = 0.056, },
				MasterStrength = Input { Value = 0.1, },
				MasterRoughness = Input { Value = 0, },
				Input = Input {
					SourceOp = ""Merge13_58"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -3300, -247.5 } },
		},
		Text1_32 = TextPlus {
			Inputs = {
				GlobalOut = Input { Value = 78, },
				Width = Input { Value = 1080, },
				Height = Input { Value = 1080, },
				UseFrameFormatSettings = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				LayoutRotation = Input { Value = 1, },
				CharacterSpacing = Input { Value = 0.9, },
				TransformRotation = Input { Value = 1, },
				TransformSize = Input { Value = 1, },
				CharacterSizeX = Input { Value = 0.75, },
				Enabled2 = Input { Value = 1, },
				Enabled3 = Input { Value = 1, },
				Enabled4 = Input { Value = 1, },
				Green1 = Input { Value = 0.897239999999997, },
				Blue1 = Input { Value = 0.633, },
				Softness1 = Input { Value = 1, },
				StyledText = Input { Value = ""JustCropIt"", },
				Font = Input { Value = ""Times New Roman"", },
				Style = Input { Value = ""Regular"", },
				Size = Input { Value = 0.126, },
				VerticalJustificationNew = Input { Value = 3, },
				HorizontalJustificationNew = Input { Value = 3, },
				Opacity2 = Input { Value = 0.26, },
				Thickness2 = Input { Value = 0.0614, },
				Softness2 = Input { Value = 1, },
				SoftnessX2 = Input { Value = 8, },
				SoftnessY2 = Input { Value = 8, },
				SoftnessGlow2 = Input { Value = 0.213, },
				Opacity3 = Input { Value = 0.472, },
				Red3 = Input { Value = 0.992, },
				Green3 = Input { Value = 0.51476864, },
				Blue3 = Input { Value = 0.364064, },
				Alpha3 = Input { Value = 0.055, },
				Softness3 = Input { Value = 1, },
				SoftnessX3 = Input { Value = 30, },
				SoftnessY3 = Input { Value = 30, },
				SoftnessGlow3 = Input { Value = 0.945, },
				SoftnessBlend3 = Input { Value = 0.717, },
				Position3 = Input { Value = 1, },
				Offset3 = Input { Value = { 0, 0 }, },
				Opacity4 = Input { Value = 0.929, },
				ElementShape4 = Input { Value = 0, },
				Red4 = Input { Value = 0.59, },
				Green4 = Input { Value = 0.59, },
				Softness4 = Input { Value = 1, },
				SoftnessX4 = Input { Value = 100, },
				SoftnessY4 = Input { Value = 100, },
				SoftnessGlow4 = Input { Value = 0.89, },
			},
			ViewInfo = OperatorInfo { Pos = { -3465, -280.5 } },
		},
		Merge13_59 = Merge {
			Inputs = {
				MaskChannel = Input { Value = 5, },
				Background = Input {
					SourceOp = ""FilmGrain1_4"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Instance_Text1_32"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -3300, -214.5 } },
		},
		Instance_Text1_32 = TextPlus {
			SourceOp = ""Text1_32"",
			Inputs = {
				SettingsNest = Input { },
				ImageNest = Input { },
				[""Gamut.ColorSpaceNest""] = Input { },
				[""Gamut.GammaSpaceNest""] = Input { },
				Layout = Input { },
				LayoutRotation = Input { Value = 1, },
				Background = Input { },
				TransformTransform = Input { },
				TransformRotation = Input { Value = 1, },
				TransformShear = Input { },
				TransformSize = Input { Value = 1, },
				Enabled2 = Input { },
				Enabled3 = Input { },
				Enabled4 = Input { },
				Properties1 = Input { },
				Softness1 = Input { Value = 1, },
				Position1 = Input { },
				Rotation1 = Input { },
				Shear1 = Input { },
				Size1 = Input { },
				TextText = Input { },
				TabSpacing = Input { },
				AdvancedFontControls = Input { },
				Internal = Input { },
				CommentsNest = Input { },
				FrameRenderScriptNest = Input { },
				StartRenderScripts = Input { },
				EndRenderScripts = Input { },
				Properties2 = Input { },
				Softness2 = Input { Value = 1, },
				Position2 = Input { },
				Rotation2 = Input { },
				Shear2 = Input { },
				Size2 = Input { },
				Properties3 = Input { },
				Softness3 = Input { Value = 1, },
				Position3 = Input { Value = 1, },
				Rotation3 = Input { },
				Shear3 = Input { },
				Size3 = Input { },
				Properties4 = Input { },
				Softness4 = Input { Value = 1, },
				Position4 = Input { },
				Rotation4 = Input { },
				Shear4 = Input { },
				Size4 = Input { },
				EffectMask = Input { }
			},
			ViewInfo = OperatorInfo { Pos = { -3465, -214.5 } },
		}
	}
}"
n9grzH8t,TRIT: Cult Killer (2024),Munfaqqiha,C++,Thursday 4th of July 2024 08:37:55 AM CDT,"
https://forum.idws.id/posts/34195661
https://forum.idws.id/posts/34195660
https://idfl-forum.com/showthread.php?t=321898&p=3960569&viewfull=1#post3960569
https://idfl-forum.com/showthread.php?t=322969&p=3960567&viewfull=1#post3960567"
djVs23NX,shortcuts,Fsteam,Bash,Thursday 4th of July 2024 08:35:42 AM CDT,"alias pym='python main.py'
alias copy='cd /storage/emulated/0/appBackup/copy/'
alias tele='cd /storage/emulated/0/Download/Telegram/'
alias down='cd /storage/emulated/0/Download/'
alias leak='cd /storage/emulated/0/Download/Telegram/LeakedPass/'
alias heart='python heartbleed.py'
alias iptv='python iptv.py'
alias psc='python portscanner.py'
alias mt='cd /storage/emulated/0/MT2/apks/'
alias assemble='hbctool asm disasm index.android.bundle'
alias disassemble='hbctool disasm index.android.bundle disasm'
alias blutter='python blutter.py /storage/emulated/0/appBackup/copy/arm64-v8a/ /storage/emulated/0/appBackup/copy/out_dir'
alias blut='cd /data/data/com.termux/files/home/blutter-termux'
alias aptup='apt update && apt upgrade -y'
alias pkgup='pkg update && pkg upgrade -y'
alias cls='clear'
alias home='/data/data/com.termux/files/home'
alias export='shortcuts -x /storage/emulated/0/appBackup/copy/'
alias import='shortcuts -i /storage/emulated/0/appBackup/copy/shortcuts.zsh'
alias bet='python betbook.py'
alias find='python /storage/emulated/0/Download/Telegram/find.py'
"
C9sb82Vs,Untitled,makeeval,JavaScript,Thursday 4th of July 2024 08:10:34 AM CDT,"function getUserProperty(userId) {
  const userStatus = {
    mode: 'awaiting',
    obj: ''
  };

  const propertyName = `user_${userId}`

  const scriptProperties = PropertiesService.getScriptProperties();
  let userProperty = scriptProperties.getProperty(propertyName);

  if (!userProperty) {
    scriptProperties.setProperty(propertyName, JSON.stringify(userStatus));
    userProperty = JSON.stringify(userStatus); // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ userProperty –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  }

  let property;
  try {
    property = JSON.parse(userProperty);
  } catch (e) {
    property = null;
  }

  return property;
}

function setUserProperty(userId, newMode, newObj) {
  const propertyName = `user_${userId}`
  const scriptProperties = PropertiesService.getScriptProperties();
  let userProperty = scriptProperties.getProperty(propertyName);

  if (!userProperty) {
    throw new Error(`User property for userId ${propertyName} does not exist.`);
  }

  let property;
  try {
    property = JSON.parse(userProperty);
  } catch (e) {
    throw new Error(`Failed to parse user property for userId ${propertyName}.`);
  }

  if (newMode !== undefined) {
    property.mode = newMode;
  }

  if (newObj !== undefined) {
    property.obj = newObj;
  }

  scriptProperties.setProperty(propertyName, JSON.stringify(property));
}



....
 if (msg.chat.type === 'private') {

        const userStatus = getUserProperty(chat_id)

        if (text == ""/start"") {

          setUserProperty(chat_id, 'awaiting', """")

          Bot.sendMessage({
            chat_id: chat_id,
            text: ""–ü—Ä–∏–≤–µ—Ç! –ù–∞—á–Ω—ë–º?"",
            reply_markup: {
              keyboard: [
                [{ text: '–ù–ê–ß–ê–¢–¨ —Å–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π' }],
              ],
              resize_keyboard: true,
              one_time_keyboard: true
            }
          });
        }

        if (text == ""–ù–ê–ß–ê–¢–¨ —Å–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"" && userStatus.mode == 'awaiting') {

          setUserProperty(chat_id, 'started', """")

          Bot.sendMessage({
            chat_id: chat_id,
            text: ""–•–æ—Ä–æ—à–æ. –†–µ–∂–∏–º —Å–±–æ—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∑–∞–ø—É—â–µ–Ω.\n\n<b>–í–≤–µ–¥–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '<i>–Ω–æ–º–µ—Ä(–∏–º—è) –≥–æ—Ä–æ–¥</i>'</b>"",
            reply_markup: {
              keyboard: [
                [{ text: '–ó–ê–í–ï–†–®–ò–¢–¨ —Å–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π' }],
              ],
              resize_keyboard: true,
              one_time_keyboard: true
            }
          });
        }

        if (text && userStatus.mode == 'started') {

          setUserProperty(chat_id, 'active', text)

          Bot.sendMessage({
            chat_id: chat_id,
            text: ""–û—Ç–ª–∏—á–Ω–æ. –ú–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–∞–±–æ—Ç–µ. –ù–∞—á–∏–Ω–∞–π –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ, –∞ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–∫—É <i>–ó–ê–í–ï–†–®–ò–¢–¨ —Å–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</i> –≤–Ω–∏–∑—É —á–∞—Ç–∞"",
            reply_markup: {
              keyboard: [
                [{ text: '–ó–ê–í–ï–†–®–ò–¢–¨ —Å–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π' }],
              ],
              resize_keyboard: true,
              one_time_keyboard: true
            }
          });
        }

        if ((contents.message?.photo || contents.message?.document) && userStatus.mode == 'active') {

          try {
            let objectName = userStatus.obj !== """" ? userStatus.obj : chatTitle;
            let url = msg.photo ? saveFileToDrive(msg.photo[msg.photo.length - 1].file_id, getFolderId(objectName)) : saveFileToDrive(msg.document.file_id, getFolderId(objectName));

            /* let response = Bot.sendMessage({
             chat_id: chat_id,
             text: '–°–æ—Ö—Ä–∞–Ω–∏–ª üëç',
             disable_notification: true,
             reply_to_message_id: msg.message_id,
             disable_web_page_preview: true
           })  */

            ss.getSheetByName('WorkLog').appendRow([new Date(), url, '', msg.chat.title, msg.from.first_name]);
          } catch (err) {
            betterLog(err, '667yyy');
          }


        };

        if (text == ""–ó–ê–í–ï–†–®–ò–¢–¨ —Å–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"") {

          setUserProperty(chat_id, 'awaiting', """")

          Bot.sendMessage({
            chat_id: chat_id,
            text: ""–†–µ–∂–∏–º —Å–±–æ—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –æ—Ç–∫–ª—é—á–µ–Ω."",
            reply_markup: {
              keyboard: [
                [{ text: '–ù–ê–ß–ê–¢–¨ —Å–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π' }],
              ],
              resize_keyboard: true,
              one_time_keyboard: true
            }
          });
        }
      }
...."
Yuc33TEj,Untitled,verygoodplugins,PHP,Thursday 4th of July 2024 06:51:06 AM CDT,"function wpf_add_custom_order_status() {

	// Add all statuses.
	foreach ( array_keys( wc_get_order_statuses() ) as $orderKey ) {
		$orderStatusName = str_replace( 'wc-', '', $orderKey );
		add_action( 'woocommerce_order_status_'.$orderStatusName, array( wp_fusion()->integrations->woocommerce, 'process_order' ) );
	}

}

add_action( 'wp_fusion_init', 'wpf_add_custom_order_status' );"
rRXvjV7e,qqdqd1qd,POMIDOORKA,HTML,Thursday 4th of July 2024 06:47:10 AM CDT,"<color=yellow>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –Ω–∞—à</color> <color=blue>–¥—Å —Å–µ—Ä–≤–µ—Ä</color> <a href=""https://discord.gg/Act75DVt8T"">the hyperlink text</a>


<color=yellow>–ü—Ä–∞–≤–∏–ª–∞</color> <color=blue>—Å–µ—Ä–≤–µ—Ä—É</color> <a href=""https://docs.google.com/document/d/1nGGO0iQ5ZPvHK4980W0NbuR3b40HA0PesYbLNtiWnZQ/edit?usp=drivesdk"">the hyperlink text</a>"
fWEWFjG1,hspi_sd_card,mikroavr,Arduino,Thursday 4th of July 2024 06:44:41 AM CDT,"#include ""PCF8574.h""
PCF8574 pcf8574(0x20);
byte pinWDT = P7;
byte pinLED = P4;

bool stateWDT = 0;

#include ""FS.h""
#include ""SD.h""
#include ""SPI.h""
SPIClass spiSD(HSPI);
#define SD_CS 14
#define SDSPEED 27000000
File root;

unsigned long cur_time, old_time ;
bool stateLed = 0;
const byte wdtPin =  12;
const byte ledPin =  13;

bool wdtState = LOW;
bool ledState = LOW;

void setup() {
  Serial.begin(115200);
  Serial.println(""init pcf: "");
  pcf8574.pinMode(pinWDT, OUTPUT);
  pcf8574.pinMode(pinLED, OUTPUT);
  if (pcf8574.begin()) {
    Serial.println(""OK"");
  } else {
    Serial.println(""KO"");
  }
  delay(100);

  spiSD.begin(12, 2, 15, SD_CS); //SCK,MISO,MOSI,ss
  while (!SD.begin( SD_CS, spiSD, SDSPEED)) {
    // if(!SD.begin()){
    Serial.println(""Card Mount Failed"");
    delay(1000);
  }
  Serial.println(""found SD card"");
  root = SD.open(""/"");
  printDirectory(root, 0);
  Serial.println(""SD card Done"");

}

void loop() {
  cur_time = millis();
  if (cur_time - old_time >= 1000) {
    Serial.println(""loop function"");
    seed_wdt();
    old_time = cur_time;
  }
}

void printDirectory(File dir, int numTabs) {
  while (true) {

    File entry =  dir.openNextFile();
    if (! entry) {
      // no more files
      break;
    }
    for (uint8_t i = 0; i < numTabs; i++) {
      Serial.print('\t');
    }
    Serial.print(entry.name());
    if (entry.isDirectory()) {
      Serial.println(""/"");
      printDirectory(entry, numTabs + 1);
    } else {
      // files have sizes, directories do not
      Serial.print(""\t\t"");
      Serial.println(entry.size(), DEC);
    }
    entry.close();
  }
}


void seed_wdt() {
  stateWDT = !stateWDT;
  pcf8574.digitalWrite(pinWDT, stateWDT);
  pcf8574.digitalWrite(pinLED, stateWDT);
}"
TnUaLw1M,Algoverse_adesh_35,kucheasysa,Python,Thursday 4th of July 2024 06:22:51 AM CDT,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: ListNode) -> bool:
        slow, fast, prev = head, head, None
        while fast and fast.next:
            slow, fast = slow.next, fast.next.next
        prev, slow, prev.next = slow, slow.next, None
        while slow:
            slow.next, prev, slow = prev, slow, slow.next
        fast, slow = head, prev
        while slow:
            if fast.val != slow.val: return False
            fast, slow = fast.next, slow.next
        return True"
1Tj6KxPT,Untitled,vpeter,Bash,Thursday 4th of July 2024 06:12:51 AM CDT,"diff --git a/arch/arm64/boot/dts/amlogic/s5_s928x_tencent_aurora_5x.dts b/arch/arm64/boot/dts/amlogic/s5_s928x_tencent_aurora_5x.dts
index fe7080e0f..669fd24a3 100644
--- a/arch/arm64/boot/dts/amlogic/s5_s928x_tencent_aurora_5x.dts
+++ b/arch/arm64/boot/dts/amlogic/s5_s928x_tencent_aurora_5x.dts
@@ -26,18 +26,21 @@
 			label = ""strip-red"";
 			reg = <0x0>;
 			linux,default-trigger = ""default-on"";
+			default-brightness = <0>;
 		};
 
 		led1: led-green@1 {
 			label = ""strip-green"";
 			reg = <0x1>;
 			linux,default-trigger = ""default-on"";
+			default-brightness = <200>;
 		};
 
 		led2: led-blue@2 {
 			label = ""strip-blue"";
 			reg = <0x2>;
 			linux,default-trigger = ""default-on"";
+			default-brightness = <0>;
 		};
 	};
 };
"
yZvqeLtp,data977,TestGuy1,JSON,Thursday 4th of July 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '51d82d39980d589f456bbaadd4a8f7a46e7ea314f345c52f034e1d44019f6a0803a4329cc4e11dfc42bd3a10317629a1daded6476fdf0297dab3cfcd113d31787084dd22a3c22c6f75f35a0cdab02a93cb728c339e5f60be55840c9993c76e3035ae02d3ff7ca62e8edcc5b569ef2169edfeff1809760675b42b7ae8daeedcd4',
  otherdata: [
    'bc8dbafb0406498a65782b83a611aa12',
    '94eb71747d0807e489694cdcf9b66e79',
    'fd3095804eba8d350ec56809ca8df90d',
    '85929d2b50fef8675436ef63c88b2e21',
    '84d4d36f371a2bd2261987afa9d03f1d',
    'bcdc7badab438db9a58894f9766df128',
    '5c1c167570e6bc1bba0cb84c44bd0f79',
    '016d4592bb954ab00efe8db4d6f1e1b9'
  ]
}"
XrvR1iZn,Async request example,bozhilov,TypeScript,Thursday 4th of July 2024 05:53:59 AM CDT,"function sleep(ms: number) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}

async function reallyLongFetch() {
  await sleep(5000);
  console.log(""Finished processing long fetch"");
  return ""World"";
}

async function fasterFetch() {
  await sleep(1000);
  console.log(""Finished processing quick fetch"");
  return ""misho"";
}

async function dependantFetch(name: string) {
  await sleep(1000);
  console.log(""Finished processing dependant fetch"");
  return name.toUpperCase();
}

async function main() {
  const promFromLong = reallyLongFetch();
  const resultFromQuick = await fasterFetch();
  const resultFromDep = await dependantFetch(resultFromQuick);

  const resultFromLong = await promFromLong;

  console.log(`${resultFromDep}'s ${resultFromLong}`);
}

main();"
ek4Yayhk,Untitled,verygoodplugins,PHP,Thursday 4th of July 2024 05:51:46 AM CDT,"function custom_format_checkbox( $value, $field_type, $field ) {
 
    if ( 'checkbox' == $field_type ) {
 
        if ( ! empty( filter_var( $value, FILTER_VALIDATE_BOOLEAN ) ) ) {
            $value = 'true';
        } else {
            $value = '';
        }
    }
 
    return $value;
 
}
 
add_filter( 'wpf_format_field_value', 'custom_format_checkbox', 20, 3 );"
GqSPepYt,"ESP32 - establish WiFi connection, if unsuccessful: start web server for WiFi credentials",jgoy,Arduino,Thursday 4th of July 2024 05:31:57 AM CDT,"#include <WiFi.h>
#include <WebServer.h>
#include <Preferences.h>  // no need to install or download this library

#define this_Ssid ""ESP32-Conn""

WebServer server(80);
Preferences flash;

String webText, buttons, ssid, pasw;

void setup() {
  Serial.begin(115200);
  pinMode(0, INPUT_PULLUP);  // flash button
  connectWiFi();
  Serial.println(""Connected to "" + WiFi.SSID());  // script lands on this line if the connection succeeded
}

void loop() {
  if (!digitalRead(0)) {  // flash button clears WiFi data for quick testing
    flash.begin(""login_data"", false);
    flash.clear();
    flash.end();
    ESP.restart();
  }
}

void connectWiFi() {
  WiFi.mode(WIFI_MODE_STA);
  flash.begin(""login_data"", true);  // true = read only
  ssid = flash.getString(""ssid"", """");
  pasw = flash.getString(""pasw"", """");
  flash.end();
  Serial.print(""Connecting"");
  WiFi.begin(ssid.c_str(), pasw.c_str());
  if (testWifi()) return;  // jumps out of this function when WiFi connection succeeds
  int n = WiFi.scanNetworks();
  for (int i = 0; i < n; ++i) {  // html to put found networks on buttons on web page
    buttons += ""\n<button onclick='scrollNaar(this.id)' id='"" + WiFi.SSID(i) + ""'>"" + WiFi.SSID(i) + ""</button><br>"";
  }
  WiFi.mode(WIFI_MODE_AP);
  WiFi.softAP(this_Ssid, """", 1);
  server.on(""/"", serverRoot);
  server.on(""/setting"", serverSetting);
  server.begin();
  for (;;) server.handleClient();  // infinite loop until the WiFi credentials are inserted
}

bool testWifi() {
  for (uint8_t i = 0; i < 50; ++i) {
    if (WiFi.isConnected()) {
      WiFi.setAutoReconnect(true);
      WiFi.persistent(true);
      return true;
    }
    delay(160);
    Serial.print(""."");
  }
  return false;
}

void serverRoot() {
  webText = ""<!DOCTYPE HTML>\n<html lang='en'>\n<head><title>Setup</title>\n<meta name='viewport' "";
  webText += ""content='width=device-width, initial-scale=1.0'>"";
  webText += ""\n<style>\np {\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 18px;\n  margin: 0;\n  text-align: "";
  webText += ""center;\n}\n\nbutton, input[type=submit] {\n  width: 250px;\n  border-radius: 5px;\n  color: White;\n  padding:"";
  webText += "" 4px 4px;\n  margin-top: 16px;\n  margin: 0 auto;\n  display:block;\n  font-size: 18px;\n  font-weight: 600;"";
  webText += ""\n  background: DodgerBlue;\n}\n\ninput {\n  width: 250px;\n  font-size: 18px;\n  font-weight: 600;\n}"";
  webText += ""\n</style>\n</head>\n<body><p style='font-family:arial; "";
  webText += ""font-size:240%;'>WiFi setup\n</p><p style='font-family:arial; font-size:160%;'>\n<br>"";
  webText += ""Networks found:<br> Click on item to select or<br>Enter your network data<br> in the boxes below:</p><br>"";
  webText += buttons;
  webText += ""\n<form method='get' action='setting'>\n<p><b>\nSSID: <br>\n<input id='ssid' name='ssid'>"";
  webText += ""<br>PASW: </b><br>\n<input type='password' name='pass'><br><br>\n<input type='submit' value='Save'>"";
  webText += ""\n</p>\n</form>\n<script>\nfunction scrollNaar(tekst) {\n  document.getElementById('ssid')"";
  webText += "".value = tekst;\n  window.scrollTo(0, document.body.scrollHeight);\n}\n</script>\n</body>\n</html>"";
  server.send(200, ""\ntext/html"", webText);
}

void serverSetting() {
  webText = ""<!DOCTYPE HTML>\n<html lang='en'>\n<head><title>Setup</title>\n<meta name='viewport' "";
  webText += ""content='width=device-width, initial-scale=1.0'>\n<style>\n* {\n  font-family: Arial, Helvetica"";
  webText += "", sans-serif;\n  font-size: 45px;\n  font-weight: 600;\n  margin: 0;\n  text-align: center;\n}"";
  webText += ""\n\n@keyframes op_en_neer {\n  0%   {height:  0px;}\n  50%  {height:  40px;}\n  100% {height:  0px;}\n}"";
  webText += ""\n\n.opneer {\n  margin: auto;\n  text-align: center;\n  animation: op_en_neer 2s infinite;\n}"";
  webText += ""\n</style>\n</head>\n<body>\n<div class=\""opneer\""></div>\nESP will reboot<br>Close this window"";
  webText += ""\n</body>\n</html>"";
  String myssid = server.arg(""ssid"");  // we want to store this in flash memory
  String mypasw = server.arg(""pass"");
  server.send(200, ""\ntext/html"", webText);
  delay(500);
  if (myssid.length() > 0 && mypasw.length() > 0) {
    flash.begin(""login_data"", false);  // false = write to ""flash/login_data""
    flash.putString(""ssid"", myssid);
    flash.putString(""pasw"", mypasw);
    flash.end();
    ESP.restart();
  }
}"
kdSpCJXW,Untitled,mfemtsuccess,JSON,Thursday 4th of July 2024 04:58:02 AM CDT,"ŸÅŸÜÿßÿØŸÇ ÿßÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿ∞ÿßÿ™ ŸÖŸàŸÇÿπ ŸÖŸÖŸäÿ≤ ÿ¨ÿØÿß ÿ≠Ÿäÿ´ ŸäŸèÿπÿØ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ŸÖŸÜ ÿ£ŸáŸÖ ÿ¥Ÿàÿßÿ±ÿπ ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ© Ÿàÿ£ŸÉÿ´ÿ±Ÿáÿß ÿßÿ≤ÿØÿ≠ÿßŸÖŸãÿßÿå Ÿàÿ∞ŸÑŸÉ ŸÑÿ£ÿ≥ÿ®ÿßÿ®Ÿç ÿπÿØŸäÿØÿ©ÿå ŸÖŸÜŸáÿß:

Ÿäÿ™ŸÖŸäÿ≤ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿ®ŸÖŸàŸÇÿπ ÿßÿ≥ÿ™ÿ±ÿßÿ™Ÿäÿ¨Ÿä Ÿäÿ¨ÿπŸÑŸá Ÿàÿ¨Ÿáÿ© ŸÖÿ´ÿßŸÑŸäÿ© ŸÑŸÑÿ•ŸÇÿßŸÖÿ© ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©ÿå Ÿàÿ∞ŸÑŸÉ ŸÑŸàÿ¨ŸàÿØ ÿßŸÑÿπÿØŸäÿØ ŸÖŸÜ ÿßŸÑŸÅŸÜÿßÿØŸÇ ÿßŸÑŸÖŸÖŸäÿ≤ÿ© ÿßŸÑÿ™Ÿä ÿ™ŸèŸÇÿØŸÖ ÿÆÿØŸÖÿßÿ™ ÿπÿßŸÑŸäÿ© ÿßŸÑÿ¨ŸàÿØÿ© ŸÑÿ∂ŸäŸàŸÅŸáÿßÿå

ŸáŸÑ ÿ™ÿ®ÿ≠ÿ´ ÿπŸÜ ŸÅŸÜÿØŸÇ ŸÇÿ±Ÿäÿ® ŸÖŸÜ ÿßŸÑÿ≠ÿ±ŸÖ ÿßŸÑŸÖŸÉŸä ÿßŸÑÿ¥ÿ±ŸäŸÅ ÿ®ÿ£ÿ≥ÿπÿßÿ± ŸÖŸÜÿßÿ≥ÿ®ÿ©ÿü

ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ŸáŸà ÿßŸÑŸÖŸÉÿßŸÜ ÿßŸÑŸÖÿ´ÿßŸÑŸä ŸÑŸÉ!

ŸäŸÇÿπ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿπŸÑŸâ ÿ®ÿπÿØ ÿÆÿ∑Ÿàÿßÿ™ ŸÇŸÑŸäŸÑÿ© ŸÖŸÜ ÿßŸÑŸÖÿ≥ÿ¨ÿØ ÿßŸÑÿ≠ÿ±ÿßŸÖÿå ŸÖŸÖÿß Ÿäÿ¨ÿπŸÑŸá Ÿàÿ¨Ÿáÿ© ŸÖÿ´ÿßŸÑŸäÿ© ŸÑŸÑÿ≠ÿ¨ÿßÿ¨ ŸàÿßŸÑŸÖÿπÿ™ŸÖÿ±ŸäŸÜ ÿßŸÑÿ∞ŸäŸÜ Ÿäÿ±ÿ∫ÿ®ŸàŸÜ ŸÅŸä ÿßŸÑÿ•ŸÇÿßŸÖÿ© ÿ®ÿßŸÑŸÇÿ±ÿ® ŸÖŸÜ ÿßŸÑŸÉÿπÿ®ÿ© ÿßŸÑŸÖÿ¥ÿ±ŸÅÿ©.

ŸáÿØŸÅ ÿßŸÑŸÖŸÇÿßŸÑ: 

ŸäŸáÿØŸÅ Ÿáÿ∞ÿß ÿßŸÑŸÖŸÇÿßŸÑ ÿ•ŸÑŸâ ŸÖÿ≥ÿßÿπÿØÿ© ÿßŸÑŸÇÿßÿ±ÿ¶ ŸÅŸä ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿ£ŸÅÿ∂ŸÑ ŸÅŸÜÿßÿØŸÇ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿ®ÿ£ÿ≥ÿπÿßÿ± ŸÖŸÜÿßÿ≥ÿ®ÿ© ŸÑÿπÿßŸÖ 2025ÿå Ÿàÿ∞ŸÑŸÉ ŸÖŸÜ ÿÆŸÑÿßŸÑ:

ÿ™ŸÇÿØŸäŸÖ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ≠ŸàŸÑ ŸÖŸàŸÇÿπ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ Ÿàÿ£ŸáŸÖŸäÿ™Ÿá.
ÿπÿ±ÿ∂ ŸÖŸÖŸäÿ≤ÿßÿ™ ŸÅŸÜÿßÿØŸÇ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿßŸÑÿ™Ÿä ÿ™ŸèŸÖŸäÿ≤Ÿáÿß ÿπŸÜ ÿ∫Ÿäÿ±Ÿáÿß.
ÿØŸÑŸäŸÑ ÿ¥ÿßŸÖŸÑ ŸÑÿ£ŸÅÿ∂ŸÑ 5 ŸÅŸÜÿßÿØŸÇ ŸÅŸä ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿ®ÿ£ÿ≥ÿπÿßÿ± ŸÖŸÜÿßÿ≥ÿ®ÿ© ŸÑÿπÿßŸÖ 2025ÿå ŸÖÿπ ÿ™Ÿàÿ∂Ÿäÿ≠ ŸÖŸÖŸäÿ≤ÿßÿ™ ŸÉŸÑ ŸÅŸÜÿØŸÇ ŸàÿπŸäŸàÿ®Ÿá Ÿàÿ£ÿ≥ÿπÿßÿ±Ÿá.
ŸÜÿµÿßÿ¶ÿ≠ ŸÑÿ≠ÿ¨ÿ≤ ŸÅŸÜÿØŸÇ ŸÅŸä ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿ®ÿ£ÿ≥ÿπÿßÿ± ŸÖŸÜÿßÿ≥ÿ®ÿ©.
ÿßŸàŸÑÿßŸã: ŸÖŸàŸÇÿπ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ Ÿàÿ£ŸáŸÖŸäÿ™Ÿá:
ŸäŸÇÿπ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ŸÅŸä ŸÇŸÑÿ® ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©ÿå ÿπŸÑŸâ ÿ®ÿπÿØ ÿÆÿ∑Ÿàÿßÿ™ ŸÇŸÑŸäŸÑÿ© ŸÖŸÜ ÿßŸÑŸÖÿ≥ÿ¨ÿØ ÿßŸÑÿ≠ÿ±ÿßŸÖÿå ŸÖŸÖÿß Ÿäÿ¨ÿπŸÑŸá ÿ£ÿ≠ÿØ ÿ£ŸáŸÖ ÿ¥Ÿàÿßÿ±ÿπ ÿßŸÑŸÖÿØŸäŸÜÿ© Ÿàÿ£ŸÉÿ´ÿ±Ÿáÿß ÿßÿ≤ÿØÿ≠ÿßŸÖŸãÿß. Ÿäÿ™ŸÖŸäÿ≤ ÿßŸÑÿ¥ÿßÿ±ÿπ ÿ®ŸÖŸàŸÇÿπŸá ÿßŸÑÿßÿ≥ÿ™ÿ±ÿßÿ™Ÿäÿ¨Ÿä ÿßŸÑÿ∞Ÿä Ÿäÿ±ÿ®ÿ∑ ÿ®ŸäŸÜ ÿßŸÑÿ≠ÿ±ŸÖ ÿßŸÑŸÖŸÉŸä Ÿàÿ¨ŸÜŸàÿ® ŸÖŸÉÿ©ÿå ŸÖŸÖÿß Ÿäÿ¨ÿπŸÑŸá ÿ∑ÿ±ŸäŸÇŸãÿß ÿ±ÿ¶Ÿäÿ≥ŸäŸãÿß ŸÑÿ≠ÿ±ŸÉÿ© ÿßŸÑŸÖÿ±Ÿàÿ± ŸÅŸä ÿßŸÑŸÖÿØŸäŸÜÿ©.

Ÿàÿ™ŸÉŸÖŸÜ ÿ£ŸáŸÖŸäÿ© ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ŸÅŸä ŸÉŸàŸÜŸá:
Ÿàÿ¨Ÿáÿ© ŸÖÿ´ÿßŸÑŸäÿ© ŸÑŸÑÿ≠ÿ¨ÿßÿ¨ ŸàÿßŸÑŸÖÿπÿ™ŸÖÿ±ŸäŸÜ: ŸÜÿ∏ÿ±ÿßŸã ŸÑŸÇÿ±ÿ®Ÿá ŸÖŸÜ ÿßŸÑŸÖÿ≥ÿ¨ÿØ ÿßŸÑÿ≠ÿ±ÿßŸÖÿå Ÿäÿπÿ™ÿ®ÿ± ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ Ÿàÿ¨Ÿáÿ© ŸÖÿ´ÿßŸÑŸäÿ© ŸÑŸÑÿ≠ÿ¨ÿßÿ¨ ŸàÿßŸÑŸÖÿπÿ™ŸÖÿ±ŸäŸÜ ÿßŸÑÿ∞ŸäŸÜ Ÿäÿ±ÿ∫ÿ®ŸàŸÜ ŸÅŸä ÿßŸÑÿ•ŸÇÿßŸÖÿ© ÿ®ÿßŸÑŸÇÿ±ÿ® ŸÖŸÜ ÿßŸÑŸÉÿπÿ®ÿ© ÿßŸÑŸÖÿ¥ÿ±ŸÅÿ©.
ŸÖÿ±ŸÉÿ≤ ÿ™ÿ¨ÿßÿ±Ÿä ŸáÿßŸÖ: Ÿäÿ™Ÿàÿßÿ¨ÿØ ÿπŸÑŸâ ÿ∑ŸàŸÑ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿßŸÑÿπÿØŸäÿØ ŸÖŸÜ ÿßŸÑÿ£ÿ≥ŸàÿßŸÇ ŸàÿßŸÑŸÖÿ∑ÿßÿπŸÖ ŸàÿßŸÑŸÅŸÜÿßÿØŸÇÿå ŸÖŸÖÿß Ÿäÿ¨ÿπŸÑŸá ŸÖÿ±ŸÉÿ≤Ÿãÿß ÿ™ÿ¨ÿßÿ±ŸäŸãÿß ŸáÿßŸÖŸãÿß ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©.
ŸÖŸÜÿ∑ŸÇÿ© ÿ≥ŸÉŸÜŸäÿ© ŸÖÿ≤ÿØÿ≠ŸÖÿ©: Ÿäÿ≥ŸÉŸÜ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿßŸÑÿπÿØŸäÿØ ŸÖŸÜ ÿßŸÑÿπÿßÿ¶ŸÑÿßÿ™ ŸàÿßŸÑŸÖŸÇŸäŸÖŸäŸÜÿå ŸÖŸÖÿß Ÿäÿ¨ÿπŸÑŸá ŸÖŸÜÿ∑ŸÇÿ© ÿ≥ŸÉŸÜŸäÿ© ŸÖÿ≤ÿØÿ≠ŸÖÿ© ŸàŸÜÿßÿ®ÿ∂ÿ© ÿ®ÿßŸÑÿ≠Ÿäÿßÿ©.
ÿ∑ÿ±ŸäŸÇ ÿ±ÿ¶Ÿäÿ≥Ÿä ŸÑŸÑŸÜŸÇŸÑ: ŸäŸÖÿ± ŸÅŸä ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿßŸÑÿπÿØŸäÿØ ŸÖŸÜ ÿÆÿ∑Ÿàÿ∑ ÿßŸÑÿ≠ÿßŸÅŸÑÿßÿ™ Ÿàÿ≥Ÿäÿßÿ±ÿßÿ™ ÿßŸÑÿ£ÿ¨ÿ±ÿ©ÿå ŸÖŸÖÿß Ÿäÿ¨ÿπŸÑŸá ÿ∑ÿ±ŸäŸÇŸãÿß ÿ±ÿ¶Ÿäÿ≥ŸäŸãÿß ŸÑŸÑŸÜŸÇŸÑ ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©.
ÿ¥ÿ±ÿ≠ ŸÖŸàŸÇÿπ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ Ÿàÿ™ÿßÿ±ŸäÿÆŸá:
ŸÖŸàŸÇÿπ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ:

ŸäŸÇÿπ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ŸÅŸä ŸÇŸÑÿ® ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©ÿå ÿπŸÑŸâ ÿßŸÑÿ¨ÿßŸÜÿ® ÿßŸÑÿ¨ŸÜŸàÿ®Ÿä ÿßŸÑÿ∫ÿ±ÿ®Ÿä ŸÖŸÜ ÿßŸÑŸÖÿ≥ÿ¨ÿØ ÿßŸÑÿ≠ÿ±ÿßŸÖ.
Ÿäÿ®ÿØÿ£ ÿßŸÑÿ¥ÿßÿ±ÿπ ŸÖŸÜ ÿ®Ÿàÿßÿ®ÿ© ÿßŸÑŸÖŸÑŸÉ ŸÅŸáÿØÿå ŸàŸäŸÖÿ™ÿØ ÿ¨ŸÜŸàÿ®ÿßŸã ÿ≠ÿ™Ÿâ ÿ™ŸÇÿßÿ∑ÿπ ÿ∑ÿ±ŸäŸÇ ŸÖŸÉÿ© ‚Äì ÿ¨ÿØÿ© ÿßŸÑÿ≥ÿ±Ÿäÿπ.
Ÿäÿ®ŸÑÿ∫ ÿ∑ŸàŸÑ ÿßŸÑÿ¥ÿßÿ±ÿπ ÿ≠ŸàÿßŸÑŸä 4 ŸÉŸäŸÑŸàŸÖÿ™ÿ±ÿßÿ™ÿå Ÿàÿπÿ±ÿ∂Ÿá Ÿäÿ™ÿ±ÿßŸàÿ≠ ÿ®ŸäŸÜ 50 Ÿà 100 ŸÖÿ™ÿ±.
ŸäŸÖÿ± ÿßŸÑÿ¥ÿßÿ±ÿπ ÿ®ŸÖŸÜÿ∑ŸÇÿ© ÿßŸÑŸÖÿ≥ŸÅŸÑÿ©ÿå ŸàŸáŸä ŸÖŸÜÿ∑ŸÇÿ© ÿ™ÿ¨ÿßÿ±Ÿäÿ© ŸÖÿ¥ŸáŸàÿ±ÿ© ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©.
Ÿäÿ™ŸÇÿßÿ∑ÿπ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ŸÖÿπ ÿßŸÑÿπÿØŸäÿØ ŸÖŸÜ ÿßŸÑÿ¥Ÿàÿßÿ±ÿπ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ© ÿßŸÑÿ£ÿÆÿ±Ÿâ ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©ÿå ŸÖÿ´ŸÑ ÿ¥ÿßÿ±ÿπ ÿßŸÑŸÖŸÑŸÉ ÿπÿ®ÿØ ÿßŸÑÿπÿ≤Ÿäÿ≤ Ÿàÿ¥ÿßÿ±ÿπ ÿßŸÑÿ≥ŸÑŸäŸÖÿßŸÜŸäÿ©.
ÿ™ÿßÿ±ŸäÿÆ ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ:

ÿ≥ŸèŸÖŸëŸä ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ŸÜÿ≥ÿ®ÿ© ÿ•ŸÑŸâ ÿßŸÑŸÜÿ®Ÿä ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿπŸÑŸäŸá ÿßŸÑÿ≥ŸÑÿßŸÖÿå ÿßŸÑÿ∞Ÿä ŸäŸèŸÇÿßŸÑ ÿ£ŸÜŸá ŸÖÿ±Ÿë ÿ®Ÿáÿ∞ÿß ÿßŸÑÿ¥ÿßÿ±ÿπ ÿÆŸÑÿßŸÑ ÿ±ÿ≠ŸÑÿ™Ÿá ŸÖŸÜ ÿßŸÑÿπÿ±ÿßŸÇ ÿ•ŸÑŸâ ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©.
ŸÉÿßŸÜ ÿßŸÑÿ¥ÿßÿ±ÿπ ŸÅŸä ÿßŸÑŸÖÿßÿ∂Ÿä ÿ∑ÿ±ŸäŸÇŸãÿß ÿ™ÿ±ÿßÿ®ŸäŸãÿß ŸäŸèÿ≥ÿ™ÿÆÿØŸÖ ŸÖŸÜ ŸÇÿ®ŸÑ ÿßŸÑÿ≠ÿ¨ÿßÿ¨ ŸàÿßŸÑŸÖÿπÿ™ŸÖÿ±ŸäŸÜ ŸÑŸÑŸàÿµŸàŸÑ ÿ•ŸÑŸâ ÿßŸÑŸÖÿ≥ÿ¨ÿØ ÿßŸÑÿ≠ÿ±ÿßŸÖ.
ÿ™ŸÖ ÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿ¥ÿßÿ±ÿπ ÿ®ÿ¥ŸÉŸÑ ŸÉÿ®Ÿäÿ± ŸÅŸä ÿßŸÑŸÇÿ±ŸÜ ÿßŸÑÿπÿ¥ÿ±ŸäŸÜÿå Ÿàÿ£ÿµÿ®ÿ≠ ŸÖŸÜ ÿ£ŸáŸÖ ÿ¥Ÿàÿßÿ±ÿπ ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©.
ÿ¥ŸáÿØ ÿßŸÑÿ¥ÿßÿ±ÿπ ÿßŸÑÿπÿØŸäÿØ ŸÖŸÜ ÿßŸÑÿ™ÿ∫ŸäŸäÿ±ÿßÿ™ ÿßŸÑÿπŸÖÿ±ÿßŸÜŸäÿ© ÿπŸÑŸâ ŸÖÿ± ÿßŸÑÿ≥ŸÜŸäŸÜÿå ÿ≠Ÿäÿ´ ÿ™ŸÖ ÿ®ŸÜÿßÿ° ÿßŸÑÿπÿØŸäÿØ ŸÖŸÜ ÿßŸÑŸÅŸÜÿßÿØŸÇ ŸàÿßŸÑŸÖÿ¨ŸÖÿπÿßÿ™ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿäÿ© ÿπŸÑŸâ ÿ¨ÿßŸÜÿ®ŸäŸá.
Ÿäÿπÿ™ÿ®ÿ± ÿ¥ÿßÿ±ÿπ ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ ÿßŸÑÿÆŸÑŸäŸÑ ÿßŸÑŸäŸàŸÖ ŸÖŸÜ ÿ£ŸáŸÖ ÿßŸÑŸÖÿπÿßŸÑŸÖ ÿßŸÑÿ≥Ÿäÿßÿ≠Ÿäÿ© ŸÅŸä ŸÖŸÉÿ© ÿßŸÑŸÖŸÉÿ±ŸÖÿ©ÿå ŸàŸäŸèÿπÿØ Ÿàÿ¨Ÿáÿ© ŸÖŸÅÿ∂ŸÑÿ© ŸÑŸÑÿ≠ÿ¨ÿßÿ¨ ŸàÿßŸÑŸÖÿπÿ™ŸÖÿ±ŸäŸÜ ŸàÿßŸÑÿ≥Ÿäÿßÿ≠ ŸÖŸÜ ÿ¨ŸÖŸäÿπ ÿ£ŸÜÿ≠ÿßÿ° ÿßŸÑÿπÿßŸÑŸÖ.

reed more: https://alkawtherhotel.com/ibrahim-al-khalil-hotels/"
zyC0k4M0,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºöÂ∞èÈú∏ÁéãÂêàÈõÜ,xiaomianao666,JavaScript,Thursday 4th of July 2024 04:43:53 AM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•Â∞èÈú∏ÁéãÂêàÈõÜ@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuabtOaWsOaVsOaNrlwiLFwicGF0aFwiOlwidXBkYXRlXCIsXCJydWxlXCI6XCJ2YXIgY2xvdWQgPSBiYXNlNjREZWNvZGUoZmV0Y2hDYWNoZShcXFwiaHR0cHM6Ly9naHByb3h5Lm5ldC9odHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20veGl4aWZyZWUvSGlrZXIvbWFpbi95eGouanNvblxcXCIsIDI0LCB7XFxuICAgIGRuczogXFxcIjUxLjE5NS4yNDEuMjUzXFxcIlxcbn0pKTtcXG5pZiAoY2xvdWQuaW5jbHVkZXMoXFxcIuWQiOmbhlxcXCIpKSB7XFxuICAgIHdyaXRlRmlsZShcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9Ib29kL3l4ai5qc29uXFxcIiwgY2xvdWQpO1xcbiAgICB3cml0ZUZpbGUoXFxcImhpa2VyOi8vZmlsZXMvY2FjaGUvdXBkYXRlL3l4ai50eHRcXFwiLCBuZXcgRGF0ZSgpICsgJycpO1xcbn1cIn1dLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCLmuLjmiI/pm4bwnZSlXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaHR0cHM6Ly93d3cueWlrbS5uZXQvI2dhbWVUaGVtZSM7Z2V0O1VURi04O3tVc2VyLUFnZW50QE1vemlsbGEvNS4wIChMaW51eO+8m++8myBBbmRyb2lkIDEx77yb77ybIE1pIDEwIFBybykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzg4LjAuNDMyNC4xNTIgTW9iaWxlIFNhZmFyaS81MzcuMzZ9XCIsXCJjb2xfdHlwZVwiOlwibW92aWVfMVwiLFwiZmluZF9ydWxlXCI6XCJqczpcXG5zZXRSZXN1bHQoW3tcXG4gICAgY29sX3R5cGU6ICd4NV93ZWJ2aWV3X3NpbmdsZScsXFxuICAgIHVybDogTVlfVVJMLFxcbiAgICBkZXNjOiBcXFwiYXV0byYmZmxvYXRcXFwiLFxcbiAgICBleHRyYToge1xcbiAgICAgICAgY2FuQmFjazogdHJ1ZVxcbiAgICB9XFxufV0pXCIsXCJncm91cFwiOlwi4pGg5o6o6I2QXCIsXCJ1YVwiOlwibW9iaWxlXCIsXCJwcmVSdWxlXCI6XCIvL+iHquWKqOabtOaWsO+8nzHlkK/nlKgsIDDlhbPpl61cXG52YXIgdXBkYXRlID0gMTtcXG5cXG4vL+abtOaWsOmXtOmalCwg5Y2V5L2N5Li65aSpXFxudmFyIHVwdGltZSA9IDM7XFxuXFxudmFyIGxvY2FsID0gXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMvSG9vZC95eGouanNvblxcXCI7XFxudmFyIGRhdGVfdHh0ID0gXFxcImhpa2VyOi8vZmlsZXMvY2FjaGUvdXBkYXRlL3l4ai50eHRcXFwiO1xcblxcbi8v6K6h566X5pe26Ze06Ze06ZqUXFxudmFyIHN0YXJ0ID0gbmV3IERhdGUoZmV0Y2goZGF0ZV90eHQpKTsgXFxudmFyIG5vdyA9IG5ldyBEYXRlKCk7IFxcbnZhciBEX1QgPSBub3cuZ2V0VGltZSgpIC0gc3RhcnQuZ2V0VGltZSgpOyBcXG52YXIgRF9EID0gRF9UIC8gKDEwMDAgKiAzNjAwICogMjQpO1xcbnZhciBteXRpbWU9cGFyc2VJbnQoRF9EKSsnJztcXG5cXG5pZighZmV0Y2goZGF0ZV90eHQpIHx8ICFmZXRjaChsb2NhbCkgfHwgKHVwZGF0ZT09MSYmbXl0aW1lPj11cHRpbWUpKXtcXG4gICAgdHJ5e1xcbiAgICAgICAgdmFyIGNsb3VkID0gYmFzZTY0RGVjb2RlKGZldGNoKFxcXCJodHRwczovL2docHJveHkubmV0L2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS94aXhpZnJlZS9IaWtlci9tYWluL3l4ai5qc29uXFxcIix7XFxuICAgICAgICAgICAgZG5zOiBcXFwiNTEuMTk1LjI0MS4yNTNcXFwiXFxuICAgICAgICB9KSk7XFxuICAgICAgICBpZihjbG91ZC5pbmNsdWRlcyhcXFwi5ZCI6ZuGXFxcIikpe1xcbiAgICAgICAgICAgIHdyaXRlRmlsZShsb2NhbCxjbG91ZCk7XFxuICAgICAgICAgICAgd3JpdGVGaWxlKGRhdGVfdHh0LG5ldyBEYXRlKCkrJycpO1xcbiAgICAgICAgfVxcbiAgICB9Y2F0Y2goZSl7fVxcbn1cIixcInBhZ2VzXCI6XCJbe1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5pu05paw5pWw5o2uXFxcIixcXFwicGF0aFxcXCI6XFxcInVwZGF0ZVxcXCIsXFxcInJ1bGVcXFwiOlxcXCJ2YXIgY2xvdWQgPSBiYXNlNjREZWNvZGUoZmV0Y2hDYWNoZShcXFxcXFxcImh0dHBzOi8vZ2hwcm94eS5uZXQvaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3hpeGlmcmVlL0hpa2VyL21haW4veXhqLmpzb25cXFxcXFxcIiwgMjQsIHtcXFxcbiAgICBkbnM6IFxcXFxcXFwiNTEuMTk1LjI0MS4yNTNcXFxcXFxcIlxcXFxufSkpO1xcXFxuaWYgKGNsb3VkLmluY2x1ZGVzKFxcXFxcXFwi5ZCI6ZuGXFxcXFxcXCIpKSB7XFxcXG4gICAgd3JpdGVGaWxlKFxcXFxcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9Ib29kL3l4ai5qc29uXFxcXFxcXCIsIGNsb3VkKTtcXFxcbiAgICB3cml0ZUZpbGUoXFxcXFxcXCJoaWtlcjovL2ZpbGVzL2NhY2hlL3VwZGF0ZS95eGoudHh0XFxcXFxcXCIsIG5ldyBEYXRlKCkgKyAnJyk7XFxcXG59XFxcIn1dXCJ9IiwicGljVXJsIjoiaHR0cHM6Ly93d3cueWlrbS5uZXQvZi5wbmdAUmVmZXJlcj0iLCJ0aXRsZSI6IuWwj+mcuOeOi+WQiOmbhiJ9
vtt6WDZY,Datalayer push purchase,SuperAgency,JavaScript,Thursday 4th of July 2024 02:28:09 AM CDT,"dataLayer.push({ ecommerce: null });  // Clear the previous ecommerce object.
dataLayer.push({
  event: ""purchase"",
  ecommerce: {
    transaction_id: ""T_12345"",
    // Sum of (price * quantity) for all items.
    value: 72.05,
    tax: 3.60,
    shipping: 5.99,
    currency: ""USD"",
    coupon: ""SUMMER_SALE"",
    items: [
    {
      item_id: ""SKU_12345"",
      item_name: ""Stan and Friends Tee"",
      price: 10.01,
      quantity: 3
    },
    {
      item_id: ""SKU_12346"",
      item_name: ""Google Grey Women's Tee"",
      price: 21.01,
      quantity: 2
    }]
  }
});"
mkDTbTvV,Domain to IP,willysec_id,Python,Thursday 4th of July 2024 02:18:44 AM CDT,"import concurrent.futures
import socket
import os
import shutil
import threading
from tqdm import tqdm

# Clear console based on OS
if os.name == ""nt"":
    os.system(""cls"")
else:
    os.system(""clear"")

class bcolors:
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'

print(bcolors.OKCYAN + """"""
 [#] Domain to IP
 [#] Coded by @willygoid
 [#] www.haxor.id
"""""" + bcolors.ENDC)

sitelist = input(""Sitelist : "")
threadp = input(""Thread (default: 100): "")
if not threadp.isdigit():
    threadp = 100
else:
    threadp = int(threadp)

# Ensure the output file is empty before starting and create a set to track unique IPs
with open(""ips.txt"", ""w"") as f:
    pass

unique_ips = set()
lock = threading.Lock()

def save_to_txt(ip):
    with open(""ips.txt"", ""a"") as f:
        f.write(f""{ip}\n"")

def resolveDns(host, pbar, width):
    try:
        checkHost = host.replace(""https://"", """").replace(""http://"", """").replace(""www."", """")
        ip = socket.gethostbyname(checkHost)
        with lock:
            if ip and ip not in unique_ips:
                unique_ips.add(ip)
                output = f""{bcolors.OKGREEN}{checkHost}{bcolors.ENDC} --> {ip}""
                print_wrapped(output, width)
                save_to_txt(ip)
    except Exception as e:
        output = f""{bcolors.FAIL}{checkHost}{bcolors.ENDC}:  Failed, domain inactive!""
        print_wrapped(output, width)
    finally:
        pbar.update(1)

def print_wrapped(text, width):
    if len(text) > width:
        for i in range(0, len(text), width):
            print(text[i:i+width])
    else:
        print(text)

def main():
    with open(sitelist) as file:
        hostnames = [line.strip() for line in file if line.strip()]

    total_hostnames = len(hostnames)
    print(bcolors.BOLD + ""===[ Start Work ]==="" + bcolors.ENDC)

    # Get terminal size
    terminal_size = shutil.get_terminal_size((80, 20))
    width = terminal_size.columns

    # Create the progress bar
    pbar = tqdm(total=total_hostnames, desc=""Processing"", position=1, leave=True, bar_format=""{l_bar}{bar} | {n_fmt}/{total_fmt} [{elapsed}<{remaining}]"", colour='cyan')

    with concurrent.futures.ThreadPoolExecutor(max_workers=threadp) as executor:
        futures = [executor.submit(resolveDns, host, pbar, width) for host in hostnames]
        for future in concurrent.futures.as_completed(futures):
            future.result()

    pbar.close()
    print(f'{bcolors.OKCYAN}Finished processing {total_hostnames} links{bcolors.ENDC}')

if __name__ == ""__main__"":
    main()
"
5Kc22HVT,Untitled,kxxb,PHP,Thursday 4th of July 2024 01:58:30 AM CDT,"–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –±–∞–≥–∏ –∏ –ø—Ä–æ–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –≤ —Å—Ç–∏–ª–µ PHPDoc –∫–æ–¥, –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω—ã–π –Ω–∏–∂–µ (—Ç–∞–±–ª–∏—Ü–∞ users –∑–¥–µ—Å—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞ —Ç–∞–±–ª–∏—Ü–µ users –∏–∑ –∑–∞–¥–∞—á–∏ ‚Ññ1).
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∫–æ–¥ –Ω–∞–ø–∏—Å–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ü–µ–ª—è—Ö, —ç—Ç–æ –Ω–µ ""–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä"" :)

function load_users_data($user_ids) {
	$user_ids = explode(',', $user_ids);
	foreach ($user_ids as $user_id) {
		$db = mysqli_connect(""localhost"", ""root"", ""123123"", ""database"");
		$sql = mysqli_query($db, ""SELECT * FROM users WHERE id=$user_id"");
		while($obj = $sql->fetch_object()){
			$data[$user_id] = $obj->name;
		}
		mysqli_close($db);
	}
	return $data;
}
// –ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –≤ $_GET['user_ids'] –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—Ç—Ä–æ–∫–∞ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: 1,2,17,48
$data = load_users_data($_GET['user_ids']);
foreach ($data as $user_id=>$name) {
	echo ""<a href=\""/show_user.php?id=$user_id\"">$name</a>"";
}

–ü–ª—é—Å–æ–º –±—É–¥–µ—Ç, –µ—Å–ª–∏ —É–∫–∞–∂–µ—Ç–µ, –∫–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ (–µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã–µ, –Ω–∞ –≤–∞—à –≤–∑–≥–ª—è–¥, –∏–º–µ—é—Ç—Å—è), –∏ –ø—Ä–∏–≤–µ–¥—ë—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è.
"
Y3XpKCkU,angular development agency usa,softradixtech,JavaScript,Thursday 4th of July 2024 01:14:05 AM CDT,"import { Component } from '@angular/core';

@Component({
  selector: 'app-welcome',  // This is the selector used in HTML to include this component
  template: `
    <div>
      <!-- This is the welcome message -->
      <h1>Welcome!</h1>
      <p>I am from SoftRadix company.</p>
      <p>
        Check out our services: 
        <a href=""https://softradix.com/angular-development/"" target=""_blank"">
          Angular Development Agency In USA
        </a>
      </p>
    </div>
  `, // This is the inline template for the component
  styles: [`
    div {
      text-align: center;  // Center align the text within the div
      margin-top: 50px;    // Add some top margin to the div
    }
    a {
      color: blue;  // Set the link color to blue
      text-decoration: none;  // Remove the underline from the link
    }
    a:hover {
      text-decoration: underline;  // Underline the link on hover
    }
  `] // These are the styles for the component
})
export class WelcomeComponent {
  // This is the component class for the Welcome component
}

"
apNnJFp8,hexStartup,Lanzr,Lua,Thursday 4th of July 2024 01:03:10 AM CDT,"local completion = require ""cc.shell.completion""
local path_complete = completion.build(
    completion.file
)
local iotaTools_completion = completion.build(
    { completion.choice, { ""toStr"", ""dec"", ""append"" } },
    { completion.choice, { ""overWrite"" } }
)
shell.setCompletionFunction(""hedit.lua"", path_complete)
shell.setCompletionFunction(""hex.lua"", path_complete)
shell.setCompletionFunction(""iotaTools.lua"", iotaTools_completion)"
KwjVGvBJ,Js :: Download Canvas as PNG,jargon,JavaScript,Thursday 4th of July 2024 01:02:52 AM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Canvas Download Example</title>
</head>
<body>
    <canvas id=""myCanvas"" width=""500"" height=""500"" style=""border:1px solid #000000;""></canvas>
    <br>
    <button id=""downloadBtn"">Download as PNG</button>

    <script>
        // Get the canvas element and context
        var canvas = document.getElementById('myCanvas');
        var context = canvas.getContext('2d');

        // Draw something on the canvas
        context.fillStyle = ""blue"";
        context.fillRect(50, 50, 150, 100);

        // Function to download the canvas as a PNG
        function downloadCanvas() {
            // Create a link element
            var link = document.createElement('a');
            link.download = 'canvas.png';
            link.href = canvas.toDataURL('image/png');
            link.click();
        }

        // Add event listener to the button
        document.getElementById('downloadBtn').addEventListener('click', downloadCanvas);
    </script>
</body>
</html>
"
RVrPUWcD,hex,Lanzr,Lua,Thursday 4th of July 2024 12:55:46 AM CDT,"--[[
    * a  mineCraft HexCasting Mod Compiler, can compile the hCode in game and output to the focus
    * need mod : Ducky peripheral
    * author : Lanzr
]]
require(""hexMap"")
local completion = require ""cc.shell.completion""
local complete = completion.build(
    completion.file
)
shell.setCompletionFunction(""hex.lua"", complete)
local path = arg[1]
if(path == nil) then
    local programName = arg[0] or fs.getName(shell.getRunningProgram())
    print(""Usage: "" .. programName .. "" <path>"")
    return
end
if(fs.exists(path) == false) then
    print(""file ""..path.."" is not exist!"")
    return
end

local inf = io.open(path,""r"") -- the source_code filename
local codeStr = inf.read(inf,""*all"")
inf.close(inf)

local fPort = peripheral.find(""focal_port"")

local lastIndex = 0
local index = -1
local leftBrackIndex = nil

local hexlist = {} -- the final table use to output

local funcKey = nil
local funcMap = {}


local NumMap = {
    [0] = {[""startDir""]=""SOUTH_EAST"",[""angles""]=""aqaa""},
    [""+1""] = (function () return ""w"" end),
    [""*2""] = (function () return ""a"" end)
}

local regMap = {
    [genRegex(""([{}>%*%+-=</])"")] = (function (cStr)
        table.insert(hexlist,hexMap[cStr])
    return true end),
    [genRegex(""rm[ ]+(%d+)"")] = (function (cStr)
        addRMPattern(cStr)
    return true end),
    [genRegex(""(-?[%d]+)"")] = (function (cStr)
        addNumPattern(tonumber(cStr))
    return true end),
    [genRegex(""([%a_]+[%w_]*)"")] = (function (cStr)
        local t = hexMap[cStr]
        if t == nil then
            return false
        end
        table.insert(hexlist,t)
    return true end),
    [genRegex(""([%a_]+[%w_]*)%(%)"")] = (function (cStr)
        parseStr(funcMap[cStr])
    return true end)
}

function addNumPattern(num)
    local numPattern = {}
    local opers = {}
    local size = 0
    local rem = num > 0 and num or -num
    local numStr = ""aqaa""
    numPattern[""startDir""] = ""SOUTH_EAST""
    repeat
        if rem % 2 == 0 then
            table.insert(opers, ""*2"")
            rem = rem / 2
        else
            table.insert(opers,""+1"")
            rem = rem -1
        end
        size = size +1
    until  rem < 1  
    for i = size, 1, -1 do
        numStr = numStr..NumMap[opers[i]]()
    end
    numPattern[""angles""] = numStr
    if num < 0 then
        table.insert(hexlist,NumMap[0])
        table.insert(hexlist,numPattern)
        table.insert(hexlist,hexMap[""-""])
    else 
        table.insert(hexlist,numPattern)
    end
end

function addRMPattern(rmPos)
    local rmPattern = {}
    local angleStr = """"
    local pos = tonumber(rmPos)
    rmPattern[""startDir""] = ""EAST""
    if (pos > 1) then
        for i=1,pos-1,1 do
            angleStr = angleStr..""w""
        end
        angleStr = angleStr..""ea""
    else
        angleStr = ""a""
    end
    rmPattern[""angles""] = angleStr
    table.insert(hexlist,rmPattern)
end
 
function parseStr(str)
    local lastIndex = 0
    local index = -1
    local cut = """"
    local lineIndex = 0
    while ( index ~= nil) do
        local syntaxFlag = true;
        lineIndex = lineIndex + 1
        index = string.find(str,""\n"", index + 1);
        if( index ~= nil) then
            cut = string.sub(str,lastIndex+1, index-1)
        else
            cut = string.sub(str,lastIndex+1, index);
        end
        -- comment check
        repeat
            lastIndex = index 
            local commentPos = string.find(cut,""#"")
            if commentPos ~= nil then
                cut = string.sub(cut, 1,commentPos-1)
            end
            -- preExp regMap
            -- include check
            if (string.match(cut,preMap[""include""])) then
                local cStr = string.match(cut,preMap[""include""])
                local inf = io.open(cStr,""r"") -- the source_code filename
                local subStr = inf.read(inf,""*all"")
                inf.close(inf)
                parseStr(subStr)
                break
            end
            -- func check
            if (string.match(cut,genRegex(""@func[ ]+([%w_]+)""))~= nil) then
                local cStr = string.match(cut,preMap[""func""])
                funcMap[cStr] = """"
                funcKey = cStr
                break
            elseif(string.match(cut,genRegex(""@end""))) then
                funcKey = nil
                break
            else
                if(funcKey ~= nil) then
                    funcMap[funcKey] = funcMap[funcKey]..cut..""\n""
                    break
                end
            end
            -- common regMap
            for key, cb in pairs(regMap) do
                if (string.match(cut,key)~= nil) then
                    local cStr = string.match(cut,key)
                    syntaxFlag = cb(cStr)
                    break
                end   
            end
        until true
        if syntaxFlag ~= true then
            print(""Line ""..lineIndex.."" : ""..cut.."" is illegal syntax"")
        end
    end

    -- out put final hexlist    
    if(fPort ~= nil) then
        fPort.writeIota(hexlist)
        return
    end
end

function mainloop()
    parseStr(codeStr)
end

mainloop()
 "
6Ksv0iub,hedit,Lanzr,Lua,Thursday 4th of July 2024 12:55:31 AM CDT,"--[[
    Lets use hedit to edit hex code !
]]
require(""hexMap"")

local completion = require ""cc.shell.completion""
local complete = completion.build(
	completion.file
)
shell.setCompletionFunction(""hedit.lua"", complete)

local tArgs = { ... }
    if #tArgs == 0 then
        local programName = arg[0] or fs.getName(shell.getRunningProgram())
        print(""Usage: "" .. programName .. "" <path>"")
    return
end

-- Error checking
local sPath = shell.resolve(tArgs[1])
local bReadOnly = fs.isReadOnly(sPath)
if fs.exists(sPath) and fs.isDir(sPath) then
    print(""Cannot edit a directory."")
    return
end

-- Create .hex files by default
if not fs.exists(sPath) and not string.find(sPath, ""%."") then
    local sExtension = ""hex""
    if sExtension ~= """" and type(sExtension) == ""string"" then
        sPath = sPath .. ""."" .. sExtension
    end
end

local x, y = 1, 1
local w, h = term.getSize()
local scrollX, scrollY = 0, 0

local tLines = {}
local bRunning = true

-- Colours
local highlightColour, keywordColour, preExpWordColour, commentColour, textColour, bgColour, stringColour, errorColour, funcColour
if term.isColour() then
    bgColour = colours.black
    textColour = colours.white
    highlightColour = colours.yellow
    keywordColour = colours.yellow
    preExpWordColour = colours.orange
    funcColour = colours.lightBlue
    commentColour = colours.green
    stringColour = colours.red
    errorColour = colours.red
else
    bgColour = colours.black
    textColour = colours.white
    highlightColour = colours.white
    keywordColour = colours.white
    preExpWordColour = colours.white
    funcColour = colours.white
    commentColour = colours.white
    stringColour = colours.white
    errorColour = colours.white
end

-- Menus
local bMenu = false
local nMenuItem = 1
local tMenuItems = {}
if not bReadOnly then
    table.insert(tMenuItems, ""Save"")
end
if peripheral.find(""focal_port"") then
    table.insert(tMenuItems, ""Compile"")
end
if peripheral.find(""printer"") then
    table.insert(tMenuItems, ""Print"")
end
table.insert(tMenuItems, ""Exit"")

local status_ok, status_text
local function set_status(text, ok)
    status_ok = ok ~= false
    status_text = text
end

if bReadOnly then
    set_status(""File is read only"", false)
elseif fs.getFreeSpace(sPath) < 1024 then
    set_status(""Disk is low on space"", false)
else
    local message
    if term.isColour() then
        message = ""Press Ctrl or click here to access menu""
    else
        message = ""Press Ctrl to access menu""
    end

    if #message > w - 5 then
        message = ""Press Ctrl for menu""
    end

    set_status(message)
end

local function load(_sPath)
    tLines = {}
    if fs.exists(_sPath) then
        local file = io.open(_sPath, ""r"")
        local sLine = file:read()
        while sLine do
            table.insert(tLines, sLine)
            sLine = file:read()
        end
        file:close()
    end

    if #tLines == 0 then
        table.insert(tLines, """")
    end
end

local function save(_sPath, fWrite)
    -- Create intervening folder
    local sDir = _sPath:sub(1, _sPath:len() - fs.getName(_sPath):len())
    if not fs.exists(sDir) then
        fs.makeDir(sDir)
    end

    -- Save
    local file, fileerr
    local function innerSave()
        file, fileerr = fs.open(_sPath, ""w"")
        if file then
            if file then
                fWrite(file)
            end
        else
            error(""Failed to open "" .. _sPath)
        end
    end

    local ok, err = pcall(innerSave)
    if file then
        file.close()
    end
    return ok, err, fileerr
end

local tKeywords = {}
for name, iota in pairs(hexMap) do
    tKeywords[name] = true
end
local tPreMapWords = {}
for name,regex in pairs(preMap) do
    tPreMapWords[""@""..name] = true
end
local function tryWrite(sLine, regex, colour)
    local match = string.match(sLine, regex)
    if match then
        if type(colour) == ""number"" then
            term.setTextColour(colour)
        else
            term.setTextColour(colour(match))
        end
        term.write(match)
        term.setTextColour(textColour)
        return string.sub(sLine, #match + 1)
    end
    return nil
end

local function writeHighlighted(sLine)
    while #sLine > 0 do
        sLine =
            tryWrite(sLine, ""^%-%-%[%[.-%]%]"", commentColour) or
            tryWrite(sLine, ""^%-%-.*"", commentColour) or
            tryWrite(sLine, ""^\""\"""", stringColour) or
            tryWrite(sLine, ""^\"".-[^\\]\"""", stringColour) or
            tryWrite(sLine, ""^\'\'"", stringColour) or
            tryWrite(sLine, ""^\'.-[^\\]\'"", stringColour) or
            tryWrite(sLine, ""^%[%[.-%]%]"", stringColour) or
            tryWrite(sLine, ""^[%w_]+%(%)"", funcColour) or
            tryWrite(sLine, ""^[%w_]+"", 
                function(match)
                    if tKeywords[match] then
                        return keywordColour
                    end
                    return textColour
                end) or
            tryWrite(sLine, ""^(@[%w_]+)"", 
                function(match)
                    if tPreMapWords[match] then
                        return preExpWordColour
                    end
                    return textColour
                end) or
            tryWrite(sLine, ""^[^%w_]"", textColour)
    end
end

local tCompletions
local nCompletion

_hexENV = {}
for cmd, iota in pairs(hexMap) do
    local result = string.match(cmd,""[{}>%*%+-=</]"")
    if result == nil then
       _hexENV[cmd] = 0
    end
end

local tCompleteEnv = _hexENV
local function complete(sLine)
    if settings.get(""edit.autocomplete"") then
        local nStartPos = string.find(sLine, ""[a-zA-Z0-9_%.:]+$"")
        if nStartPos then
            sLine = string.sub(sLine, nStartPos)
        end
        term.setCursorPos(1,5)
        if #sLine > 0 then
            return textutils.complete(sLine, tCompleteEnv)
        end
    end
    return nil
end

local function recomplete()
    local sLine = tLines[y]
    if not bMenu and not bReadOnly and x == #sLine + 1 then
        tCompletions = complete(sLine)
        if tCompletions and #tCompletions > 0 then
            nCompletion = 1
        else
            nCompletion = nil
        end
    else
        tCompletions = nil
        nCompletion = nil
    end
end

local function writeCompletion(sLine)
    if nCompletion then
        local sCompletion = tCompletions[nCompletion]
        term.setTextColor(colours.white)
        term.setBackgroundColor(colours.grey)
        term.write(sCompletion)
        term.setTextColor(textColour)
        term.setBackgroundColor(bgColour)
    end
end

local function redrawText()
    local cursorX, cursorY = x, y
    for y = 1, h - 1 do
        term.setCursorPos(1 - scrollX, y)
        term.clearLine()

        local sLine = tLines[y + scrollY]
        if sLine ~= nil then
            writeHighlighted(sLine)
            if cursorY == y and cursorX == #sLine + 1 then
                writeCompletion()
            end
        end
    end
    term.setCursorPos(x - scrollX, y - scrollY)
end

local function redrawLine(_nY)
    local sLine = tLines[_nY]
    if sLine then
        term.setCursorPos(1 - scrollX, _nY - scrollY)
        term.clearLine()
        writeHighlighted(sLine)
        if _nY == y and x == #sLine + 1 then
            writeCompletion()
        end
        term.setCursorPos(x - scrollX, _nY - scrollY)
    end
end

local function redrawMenu()
    -- Clear line
    term.setCursorPos(1, h)
    term.clearLine()

    -- Draw line numbers
    term.setCursorPos(w - #(""Ln "" .. y) + 1, h)
    term.setTextColour(highlightColour)
    term.write(""Ln "")
    term.setTextColour(textColour)
    term.write(y)

    term.setCursorPos(1, h)
    if bMenu then
        -- Draw menu
        term.setTextColour(textColour)
        for nItem, sItem in pairs(tMenuItems) do
            if nItem == nMenuItem then
                term.setTextColour(highlightColour)
                term.write(""["")
                term.setTextColour(textColour)
                term.write(sItem)
                term.setTextColour(highlightColour)
                term.write(""]"")
                term.setTextColour(textColour)
            else
                term.write("" "" .. sItem .. "" "")
            end
        end
    else
        -- Draw status
        term.setTextColour(status_ok and highlightColour or errorColour)
        term.write(status_text)
        term.setTextColour(textColour)
    end

    -- Reset cursor
    term.setCursorPos(x - scrollX, y - scrollY)
end

local tMenuFuncs = {
    Save = function()
        if bReadOnly then
            set_status(""Access denied"", false)
        else
            local ok, _, fileerr  = save(sPath, function(file)
                for _, sLine in ipairs(tLines) do
                    file.write(sLine .. ""\n"")
                end
            end)
            if ok then
                set_status(""Saved to "" .. sPath)
            else
                if fileerr then
                    set_status(""Error saving: "" .. fileerr, false)
                else
                    set_status(""Error saving to "" .. sPath, false)
                end
            end
        end
        redrawMenu()
    end,
    Print = function()
        local printer = peripheral.find(""printer"")
        if not printer then
            set_status(""No printer attached"", false)
            return
        end

        local nPage = 0
        local sName = fs.getName(sPath)
        if printer.getInkLevel() < 1 then
            set_status(""Printer out of ink"", false)
            return
        elseif printer.getPaperLevel() < 1 then
            set_status(""Printer out of paper"", false)
            return
        end

        local screenTerminal = term.current()
        local printerTerminal = {
            getCursorPos = printer.getCursorPos,
            setCursorPos = printer.setCursorPos,
            getSize = printer.getPageSize,
            write = printer.write,
        }
        printerTerminal.scroll = function()
            if nPage == 1 then
                printer.setPageTitle(sName .. "" (page "" .. nPage .. "")"")
            end

            while not printer.newPage() do
                if printer.getInkLevel() < 1 then
                    set_status(""Printer out of ink, please refill"", false)
                elseif printer.getPaperLevel() < 1 then
                    set_status(""Printer out of paper, please refill"", false)
                else
                    set_status(""Printer output tray full, please empty"", false)
                end

                term.redirect(screenTerminal)
                redrawMenu()
                term.redirect(printerTerminal)

                sleep(0.5)
            end

            nPage = nPage + 1
            if nPage == 1 then
                printer.setPageTitle(sName)
            else
                printer.setPageTitle(sName .. "" (page "" .. nPage .. "")"")
            end
        end

        bMenu = false
        term.redirect(printerTerminal)
        local ok, error = pcall(function()
            term.scroll()
            for _, sLine in ipairs(tLines) do
                print(sLine)
            end
        end)
        term.redirect(screenTerminal)
        if not ok then
            print(error)
        end

        while not printer.endPage() do
            set_status(""Printer output tray full, please empty"")
            redrawMenu()
            sleep(0.5)
        end
        bMenu = true

        if nPage > 1 then
            set_status(""Printed "" .. nPage .. "" Pages"")
        else
            set_status(""Printed 1 Page"")
        end
        redrawMenu()
    end,
    Exit = function()
        bRunning = false
    end,
    Compile = function()
       shell.run(""hex ""..sPath)
    end,
}

local function doMenuItem(_n)
    tMenuFuncs[tMenuItems[_n]]()
    if bMenu then
        bMenu = false
        term.setCursorBlink(true)
    end
    redrawMenu()
end

local function setCursor(newX, newY)
    local _, oldY = x, y
    x, y = newX, newY
    local screenX = x - scrollX
    local screenY = y - scrollY

    local bRedraw = false
    if screenX < 1 then
        scrollX = x - 1
        screenX = 1
        bRedraw = true
    elseif screenX > w then
        scrollX = x - w
        screenX = w
        bRedraw = true
    end

    if screenY < 1 then
        scrollY = y - 1
        screenY = 1
        bRedraw = true
    elseif screenY > h - 1 then
        scrollY = y - (h - 1)
        screenY = h - 1
        bRedraw = true
    end

    recomplete()
    if bRedraw then
        redrawText()
    elseif y ~= oldY then
        redrawLine(oldY)
        redrawLine(y)
    else
        redrawLine(y)
    end
    term.setCursorPos(screenX, screenY)

    redrawMenu()
end

-- Actual program functionality begins
load(sPath)

term.setBackgroundColour(bgColour)
term.clear()
term.setCursorPos(x, y)
term.setCursorBlink(true)

recomplete()
redrawText()
redrawMenu()

local function acceptCompletion()
    if nCompletion then
        -- Append the completion
        local sCompletion = tCompletions[nCompletion]
        tLines[y] = tLines[y] .. sCompletion
        setCursor(x + #sCompletion , y)
    end
end

-- Handle input
while bRunning do
    local sEvent, param, param2, param3 = os.pullEvent()
    if sEvent == ""key"" then
        if param == keys.up then
            -- Up
            if not bMenu then
                if nCompletion then
                    -- Cycle completions
                    nCompletion = nCompletion - 1
                    if nCompletion < 1 then
                        nCompletion = #tCompletions
                    end
                    redrawLine(y)

                elseif y > 1 then
                    -- Move cursor up
                    setCursor(
                        math.min(x, #tLines[y - 1] + 1),
                        y - 1
                    )
                end
            end

        elseif param == keys.down then
            -- Down
            if not bMenu then
                -- Move cursor down
                if nCompletion then
                    -- Cycle completions
                    nCompletion = nCompletion + 1
                    if nCompletion > #tCompletions then
                        nCompletion = 1
                    end
                    redrawLine(y)

                elseif y < #tLines then
                    -- Move cursor down
                    setCursor(
                        math.min(x, #tLines[y + 1] + 1),
                        y + 1
                    )
                end
            end

        elseif param == keys.tab then
            -- Tab
            if not bMenu and not bReadOnly then
                if nCompletion and x == #tLines[y] + 1 then
                    -- Accept autocomplete
                    acceptCompletion()
                else
                    -- Indent line
                    local sLine = tLines[y]
                    tLines[y] = string.sub(sLine, 1, x - 1) .. ""    "" .. string.sub(sLine, x)
                    setCursor(x + 4, y)
                end
            end

        elseif param == keys.pageUp then
            -- Page Up
            if not bMenu then
                -- Move up a page
                local newY
                if y - (h - 1) >= 1 then
                    newY = y - (h - 1)
                else
                    newY = 1
                end
                setCursor(
                    math.min(x, #tLines[newY] + 1),
                    newY
                )
            end

        elseif param == keys.pageDown then
            -- Page Down
            if not bMenu then
                -- Move down a page
                local newY
                if y + (h - 1) <= #tLines then
                    newY = y + (h - 1)
                else
                    newY = #tLines
                end
                local newX = math.min(x, #tLines[newY] + 1)
                setCursor(newX, newY)
            end

        elseif param == keys.home then
            -- Home
            if not bMenu then
                -- Move cursor to the beginning
                if x > 1 then
                    setCursor(1, y)
                end
            end

        elseif param == keys[""end""] then
            -- End
            if not bMenu then
                -- Move cursor to the end
                local nLimit = #tLines[y] + 1
                if x < nLimit then
                    setCursor(nLimit, y)
                end
            end

        elseif param == keys.left then
            -- Left
            if not bMenu then
                if x > 1 then
                    -- Move cursor left
                    setCursor(x - 1, y)
                elseif x == 1 and y > 1 then
                    setCursor(#tLines[y - 1] + 1, y - 1)
                end
            else
                -- Move menu left
                nMenuItem = nMenuItem - 1
                if nMenuItem < 1 then
                    nMenuItem = #tMenuItems
                end
                redrawMenu()
            end

        elseif param == keys.right then
            -- Right
            if not bMenu then
                local nLimit = #tLines[y] + 1
                if x < nLimit then
                    -- Move cursor right
                    setCursor(x + 1, y)
                elseif nCompletion and x == #tLines[y] + 1 then
                    -- Accept autocomplete
                    acceptCompletion()
                elseif x == nLimit and y < #tLines then
                    -- Go to next line
                    setCursor(1, y + 1)
                end
            else
                -- Move menu right
                nMenuItem = nMenuItem + 1
                if nMenuItem > #tMenuItems then
                    nMenuItem = 1
                end
                redrawMenu()
            end

        elseif param == keys.delete then
            -- Delete
            if not bMenu and not bReadOnly then
                local nLimit = #tLines[y] + 1
                if x < nLimit then
                    local sLine = tLines[y]
                    tLines[y] = string.sub(sLine, 1, x - 1) .. string.sub(sLine, x + 1)
                    recomplete()
                    redrawLine(y)
                elseif y < #tLines then
                    tLines[y] = tLines[y] .. tLines[y + 1]
                    table.remove(tLines, y + 1)
                    recomplete()
                    redrawText()
                end
            end

        elseif param == keys.backspace then
            -- Backspace
            if not bMenu and not bReadOnly then
                if x > 1 then
                    -- Remove character
                    local sLine = tLines[y]
                    if x > 4 and string.sub(sLine, x - 4, x - 1) == ""    "" and not string.sub(sLine, 1, x - 1):find(""%S"") then
                        tLines[y] = string.sub(sLine, 1, x - 5) .. string.sub(sLine, x)
                        setCursor(x - 4, y)
                    else
                        tLines[y] = string.sub(sLine, 1, x - 2) .. string.sub(sLine, x)
                        setCursor(x - 1, y)
                    end
                elseif y > 1 then
                    -- Remove newline
                    local sPrevLen = #tLines[y - 1]
                    tLines[y - 1] = tLines[y - 1] .. tLines[y]
                    table.remove(tLines, y)
                    setCursor(sPrevLen + 1, y - 1)
                    redrawText()
                end
            end

        elseif param == keys.enter or param == keys.numPadEnter then
            -- Enter/Numpad Enter
            if not bMenu and not bReadOnly then
                -- Newline
                local sLine = tLines[y]
                local _, spaces = string.find(sLine, ""^[ ]+"")
                if not spaces then
                    spaces = 0
                end
                tLines[y] = string.sub(sLine, 1, x - 1)
                table.insert(tLines, y + 1, string.rep(' ', spaces) .. string.sub(sLine, x))
                setCursor(spaces + 1, y + 1)
                redrawText()

            elseif bMenu then
                -- Menu selection
                doMenuItem(nMenuItem)

            end

        elseif param == keys.leftCtrl or param == keys.rightCtrl then
            -- Menu toggle
            bMenu = not bMenu
            if bMenu then
                term.setCursorBlink(false)
            else
                term.setCursorBlink(true)
            end
            redrawMenu()
        elseif param == keys.rightAlt then
            if bMenu then
                bMenu = false
                term.setCursorBlink(true)
                redrawMenu()
            end
        end

    elseif sEvent == ""char"" then
        if not bMenu and not bReadOnly then
            -- Input text
            local sLine = tLines[y]
            tLines[y] = string.sub(sLine, 1, x - 1) .. param .. string.sub(sLine, x)
            setCursor(x + 1, y)

        elseif bMenu then
            -- Select menu items
            for n, sMenuItem in ipairs(tMenuItems) do
                if string.lower(string.sub(sMenuItem, 1, 1)) == string.lower(param) then
                    doMenuItem(n)
                    break
                end
            end
        end

    elseif sEvent == ""paste"" then
        if not bReadOnly then
            -- Close menu if open
            if bMenu then
                bMenu = false
                term.setCursorBlink(true)
                redrawMenu()
            end
            -- Input text
            local sLine = tLines[y]
            tLines[y] = string.sub(sLine, 1, x - 1) .. param .. string.sub(sLine, x)
            setCursor(x + #param , y)
        end

    elseif sEvent == ""mouse_click"" then
        local cx, cy = param2, param3
        if not bMenu then
            if param == 1 then
                -- Left click
                if cy < h then
                    local newY = math.min(math.max(scrollY + cy, 1), #tLines)
                    local newX = math.min(math.max(scrollX + cx, 1), #tLines[newY] + 1)
                    setCursor(newX, newY)
                else
                    bMenu = true
                    redrawMenu()
                end
            end
        else
            if cy == h then
                local nMenuPosEnd = 1
                local nMenuPosStart = 1
                for n, sMenuItem in ipairs(tMenuItems) do
                    nMenuPosEnd = nMenuPosEnd + #sMenuItem + 1
                    if cx > nMenuPosStart and cx < nMenuPosEnd then
                        doMenuItem(n)
                    end
                    nMenuPosEnd = nMenuPosEnd + 1
                    nMenuPosStart = nMenuPosEnd
                end
            else
                bMenu = false
                term.setCursorBlink(true)
                redrawMenu()
            end
        end

    elseif sEvent == ""mouse_scroll"" then
        if not bMenu then
            if param == -1 then
                -- Scroll up
                if scrollY > 0 then
                    -- Move cursor up
                    scrollY = scrollY - 1
                    redrawText()
                end

            elseif param == 1 then
                -- Scroll down
                local nMaxScroll = #tLines - (h - 1)
                if scrollY < nMaxScroll then
                    -- Move cursor down
                    scrollY = scrollY + 1
                    redrawText()
                end

            end
        end

    elseif sEvent == ""term_resize"" then
        w, h = term.getSize()
        setCursor(x, y)
        redrawMenu()
        redrawText()

    end
end

-- Cleanup
term.clear()
term.setCursorBlink(false)
term.setCursorPos(1, 1)"
s9vRBNJ2,hexMap,Lanzr,Lua,Thursday 4th of July 2024 12:54:34 AM CDT,"--[[ 
    this file is use to provide mapping tables for other tools
]]
function genRegex(str) return ""^[\t ]*""..str..""[\t ]*$"" end

preMap = {
    [""include""] = genRegex(""@include[ ]+([%w_]+)""),
    [""func""] = genRegex(""@func[ ]+([%w_]+)""),
    [""end""] = genRegex(""@end""),
}

hexMap = { -- add pattern table to this table
    [""me""] = {[""startDir""]=""EAST"",[""angles""]=""qaq""}, -- Mind's Reflection
    [""pos""] = {[""startDir""]=""EAST"",[""angles""]=""aa""}, -- Compass' Purification
    [""sight""] = {[""startDir""]=""EAST"",[""angles""]=""wa""},-- Alidade's Purification
    [""getEntityHight""] = {[""startDir""]=""EAST"",[""angles""]=""awq""},  
    [""{""] = {[""startDir""]=""WEST"",[""angles""]=""qqq""},
    [""}""] = {[""startDir""]=""EAST"",[""angles""]=""eee""},
    [""unpackList""] = {[""startDir""]=""NORTH_WEST"",[""angles""]=""qwaeawq""},
    [""packList""] = {[""startDir""]=""SOUTH_WEST"",[""angles""]=""ewdqdwe""},
    [""packVec""] = {[""startDir""]=""SOUTH_WEST"",[""angles""]=""eqqqqq""},
    [""+""] = {[""startDir""]=""NORTH_EAST"",[""angles""]=""waaw""},
    [""-""] = {[""startDir""]=""NORTH_WEST"",[""angles""]=""wddw""},
    [""*""] = {[""startDir""]=""SOUTH_EAST"",[""angles""]=""waqaw""},
    [""/""] = {[""startDir""]=""SOUTH_EAST"",[""angles""]=""wdedw""},
    [""isEqual""] = {[""startDir""]=""SOUTH_EAST"",[""angles""]=""ad""},
    [""dig""] = {[""startDir""]=""EAST"",[""angles""]=""qaqqqqq""},
    [""rayCast_getEntity""] = {[""startDir""]=""EAST"",[""angles""]=""weaqa""},
    [""rayCast_getBlock""] = {[""startDir""]=""EAST"",[""angles""]=""wqaawdd""},
    [""rayCast_getBlockRule""] = {[""startDir""]=""EAST"",[""angles""]=""weddwaa""},
    [""makeCypher""] = {[""startDir""]=""EAST"",[""angles""]=""waqqqqq""},
    [""makeTrinket""] = {[""startDir""]=""EAST"",[""angles""]=""wwaqqqqqeaqeaeqqqeaeq""},
    [""makeArtifact""] = {[""startDir""]=""EAST"",[""angles""]=""wwaqqqqqeawqwqwqwqwqwwqqeadaeqqeqqeadaeqq""},
    [""clean""] = {[""startDir""]=""EAST"",[""angles""]=""qdqawwaww""},
}"
wQRKJ3h8,iotaTools,Lanzr,Lua,Thursday 4th of July 2024 12:54:16 AM CDT,"require(""hexMap"")
--[[
    * this tools is read iota from focal_port to string
    * if specify argument ""dec"" will be decompilation iota to hex code
    * author : Lanzr
]]
local completion = require ""cc.shell.completion""
local complete = completion.build(
    { completion.choice, { ""toStr"", ""dec"", ""append"" } },
    { completion.choice, { ""overWrite"" } }
)
shell.setCompletionFunction(""iotaTools.lua"", complete)

local cmd = arg[1]
local param = arg[2]
local dev = peripheral.find(""focal_port"")
local g_force_mode  =false

local function tipWriter(left,right)
    term.setTextColor(colors.orange)
    write(left)
    term.setTextColor(colors.yellow)
    print("":""..right)
    term.setTextColor(colors.white)
end
if cmd == nil then
    local programName = arg[0] or fs.getName(shell.getRunningProgram())
    print(""Usage: "" .. programName .. "" <cmd> [Param]"")
    print(""cmd can be :"")
    tipWriter(""toStr"", "" get focal_port iota to string and save in \""data\"" file"")
    tipWriter(""dec"", "" get focal_port iota and decompile code based on hexMap and store it in \""dec_out\"" file "")
    tipWriter(""append"", "" get focal_port iota and Generate mappings that are not included in the hexMap, store the results in a \""newHexMap\"" file, and if append parameter \""overWrite\"", the hexMap will be overwritten "")
    return
end

function table2str(t)
    local function serialize(tbl)
        local tmp = {}
        for k, v in pairs(tbl) do
            local k_type = type(k)
            local v_type = type(v)
            local key = (k_type == ""string"" and ""[\"""" .. k .. ""\""]="") or (k_type == ""number"" and """")
            local value = (v_type == ""table"" and serialize(v)) or (v_type == ""boolean"" and tostring(v)) or (v_type == ""string"" and ""\"""" .. v .. ""\"""") or (v_type == ""number"" and v)
            tmp[#tmp + 1] = key and value and tostring(key) .. tostring(value) or nil
        end
        if table.maxn(tbl) == 0 then
            return ""\n[\""\""] = {"" .. table.concat(tmp, "","") .. ""},""
        else
            return ""["" .. table.concat(tmp, "" "") .. ""\n]""
        end
    end
    assert(type(t) == ""table"")
    return serialize(t)
end

local numMap = {
    [""w""] = (function (sum)
        return sum + 1
    end),
    [""a""] = (function (sum)
        return sum * 2
    end)
}
local function getPatternNum(str)
    str = string.gsub(str,""aqaa"","""")
    local sum = 0 
    for char in str:gmatch(""."") do
        sum = numMap[char](sum)
    end
    return tostring(sum)
end
function decompilation()
    local indentation_level = 0
    anti_hexMap = {}
    for cmd, iota in pairs(hexMap) do
        anti_hexMap[iota[""angles""]] = cmd
    end
    data = dev.readIota()
    f = io.open(""dec_out"",""w"")
    for index,iota  in pairs(data) do
        local str = """"
        local cmd = anti_hexMap[iota[""angles""]]
        if cmd == ""}"" then
            indentation_level = indentation_level - 1
        end
        for i = 1, indentation_level, 1 do
            str = str..""    ""
        end
        if cmd ~= nil then 
            str = str..cmd
        elseif string.match(iota[""angles""],""^aqaa"") ~= nil then
            str = str..getPatternNum(iota[""angles""])
        else
            str = str..iota[""angles""]
        end
        f.write(f,str..""\n"")
        if cmd == ""{"" then
            indentation_level = indentation_level + 1
        end
    end
    f.close(f)
end

function append()
    local targetFile = ""newHexMap""
    if g_force_mode then
        targetFile = ""hexMap""
    end
    anti_hexMap = {}
    for cmd, iota in pairs(hexMap) do
        anti_hexMap[iota[""angles""]] = cmd
    end
    
    f = io.open(""hexMap"", ""r+"")
    io.input(f)
    io.output(f)
    local hexMapFindLck =false
    local text = """"
    repeat  
        local ret = io.read() 
        if ret ~= nil then
            if not hexMapFindLck then
                local findHexMap = string.match(ret, ""^[ ]*hexMap[ ]*="")
                if findHexMap ~= nil then
                    hexMapFindLck = true
                end
            else
                local findBracket = string.match(ret, ""^[ ]*}[ ]*$"")
                if findBracket then
                    break
                end
            end
            text = text..ret..""\n""
        end
    until ret == nil
    f.close(f)
    f = io.open(targetFile,""w"")
    f.write(f,text)
    data = dev.readIota()
    for index,iota  in pairs(data) do
        local cmd = anti_hexMap[iota[""angles""]]
        if cmd == nil then
            if string.match(iota[""angles""],""^aqaa"") == nil then
                local tmp = {}
                for k, v in pairs(iota) do
                    local k_type = type(k)
                    local v_type = type(v)
                    local key = (k_type == ""string"" and ""[\"""" .. k .. ""\""]="") or (k_type == ""number"" and """")
                    local value = (v_type == ""table"" and serialize(v)) or (v_type == ""boolean"" and tostring(v)) or (v_type == ""string"" and ""\"""" .. v .. ""\"""") or (v_type == ""number"" and v)
                    tmp[#tmp + 1] = key and value and tostring(key) .. tostring(value) or nil
                end
                local str =  ""    [\""\""] = {"" .. table.concat(tmp, "","") .. ""},""
                f.write(f,str..""\n"")
            end
        end
    end
    f.write(f,""}"")
    f.close(f)
end

local function getIotaMap()
    d = dev.readIota()
    str = table2str(d)
    f = io.open(""data"",""w"")
    f.write(f,str)
    f.close(f)
end

local toolsMap = {
    [""toStr""] = (function (cStr)
        getIotaMap()
    return true end),
    [""dec""] = (function (cStr)
        decompilation()
    return true end),
    [""append""] = (function (cStr)
        if(param ~=nil)then
            if(param == ""overWrite"")then
                g_force_mode = true
            end
        end
        append()
    return true end)
}
local function mainloop()
   toolsMap[cmd]()
end

mainloop()"
9XR2n9xv,stringTransition,Divyansh_Chourey,Java,Thursday 4th of July 2024 12:45:40 AM CDT,"import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.io.IOException;

public class stringTransition {
    public static void main(String[] args) throws IOException, InterruptedException {
        System.out.print(""Enter the name: "");
        Scanner sc = new Scanner(System.in);
        String str, newstr="""";
        str = sc.nextLine();

        int i=96, a=0;
        while(a<str.length()){
            char current = str.charAt(a);
            new ProcessBuilder(""cmd"", ""/c"", ""cls"").inheritIO().start().waitFor();

            System.out.println(""\n\n\n\n\n\t\t""+newstr+(char)i);
            
            try {
                TimeUnit.MILLISECONDS.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            
            if(current == i || current == i-32){
                newstr+=current;
                a++;
                i=96;
            }
            i++;
        }
    }
}
"
