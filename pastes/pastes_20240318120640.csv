id,title,username,language,date,content
NFP9VEYN,data872,TestGuy1,JSON,Monday 18th of March 2024 07:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '59b27da038a6881c364207ab3093a5f186dd3540be1cb80b862b579438e06b7b5188ebac76958a0e1aebd72565f4702ed60ccdc22a469fd35079e2f7e528e73704fd3f2e59c7b00c189f6ade6616a68262c78d500b2f8bf033f119fef7cdff290cacab08b247474ed4025eacaf0ee2b2ed31774e708d164a84a560ff0ad25766',
  otherdata: [
    'cf7b8c89264dd86e94fd8095b5663d82',
    '81620bb564dd3e12b1464453b0203f48',
    '453ddbff3302d5f22035abdb0cdb8419',
    '777177453cfabcc23bfcf29ea938beba',
    'ba1065dd6be4864350cf98a44223b945',
    'ef911f584059ddc6387a3f99c113e73a',
    '72623feda2d87683394752f7acac0a0f',
    '46ab780b71524b851d6861c89e8b9467'
  ]
}"
x4fir8nT,sysOp_2.1.4,pan7nikt,Bash,Monday 18th of March 2024 06:55:57 AM CDT,"systemctl start ModemManager.service
#systemctl enable ModemManager.service
systemctl status ModemManager.service
#Szukamy enabled/disabled, active/inactive, vendor preset
ps -aux | grep ModemManager
sudo ls -l /proc/PID/fd
ps --ppid PID_USLUGI

systemctl list-unit-files --type=service
systemctl status auditd.service

journalctl --since ""5 minutes ago"""
ZuBG5uQW,AbstractSort.java,Aldin_SXR,Java,Monday 18th of March 2024 06:40:58 AM CDT,"public abstract class AbstractSort {

    /* Returns whether the first element is less than the second one */
    public static boolean less(int v, int w) {
        return v < w;
    }

    /* Swaps the two elements in an array */
    public static void swap (int[] elements, int a, int b) {
        int tmp = elements[a];
        elements[a] = elements[b];
        elements[b] = tmp;
    }
}
"
ru2QnUgH,the best snowybot ever made,coinwalk,JavaScript,Monday 18th of March 2024 06:36:46 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/1000).toFixed(8));
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = olsenest;
var olsen = 0;
var fart = 0;
var runt = 0;
var snowy = 2;
var belance = olsenest;
 
 
 
function soiled(){
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if ((belance<(awesome-(awesome/25)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    awesome =parseFloat(belance);
}
if ((belance>(awesome+(awesome/25)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    awesome =parseFloat(belance);
}
if (belance>=(olsenest*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() =>soiled(), 1);
}
soiled();"
LakGzD1T,arch1-6e_2.asm,pan7nikt,6502 TASM/64TASS,Monday 18th of March 2024 06:34:58 AM CDT,"                .MODEL  SMALL ; Dyrektywa "".MODEL"" definiuje z jakiego modelu pamieci korzysta

;-------------- SEGMENT DANYCH ---------------
				
Dane            SEGMENT         ; Początek Segmentu Dane
a               EQU     20      ; Definicja zmiennej
b               EQU      10
c               EQU     5       ; Poprawiona definicja stałej c
d               EQU      3
Dane            ENDS            ; Koniec segmentu Dane

;-------------- SEGMENT KODU ---------------

Kod             SEGMENT         ; Koniec segmentu Dane
                ORG     100h	;przesuniecie o 256 bajtow od poczatku segmentu kodu
                ASSUME  CS:Kod, DS:Dane, SS:Stosik  ; CS code segment ,DS data segment, SS stack segment

				; Zaladowanie rejestru segmentowego danych
start:          jmp     poczatek		; przeskocz obszar danych

Wynik           DW      ?    ; Deklaracja niewiadomej 

poczatek:       mov     ax, SEG Dane    ; wpisuje do rejestru ax adresu segmentu danych, czyli przesunięcia względem początku segmentu (kompilator w .exe musi wiedzieć, gdzie zaczyna się segment danych)
                mov     ds, ax          ; ds = ax

                mov     ax, d           ; ax = d
                mov     bl, b           ; BL = b
                sub     bl, c           ; BL = BX - C
                mov     cx, ax          ; CX = AX
                div     bl              ; Dzielenie d przez (b-c) / AL = ax / bx

                mov     bl, a           ; Załadowanie a do rejestru BL (BL = a)
                add     bl, b           ; Dodanie a do b, wynik w BL (BL = BL + b)

                mul     bl              ; Pomnożenie d/(b-c) przez (a+b) AX = AL * BL
                mov     Wynik, ax       ; Zapisanie wyniku w zmiennej Wynik

                mov     ax, 4C00h    ; Kod funkcji zakończenia programu (Wpisanie do rejestu ah 4c, a do al kodu bledu 0)
                                     ;za pomoca 4C zwraca sie sterowanie do procesora
                int     21h          ; wywołanie podprogramu obłusgi przerwania
Kod             ENDS                 ; Koniec Segmentu Kod

;-------------- SEGMENT STOSU ---------------

Stosik          SEGMENT STACK
                DB      100h DUP (?) ; Zadeklarowanie 100 jednobajtowych zmiennych 
Stosik          ENDS

;-------------- PUNKT STARTOWY --------------

                END     start        ; Zakonczenie pliku zrodlowego
"
RxPk6Xb9,🤑 G2A.com Free Gift Card Guide Mar 2024 🤑,luckysw,GetText,Monday 18th of March 2024 06:27:13 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
If you use this make sure to use the English version of G2A.com otherwise this will not work!
  
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view
 
Working as of:
18 March 2024












































"
an0MUhpK,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Monday 18th of March 2024 06:26:33 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
18 March 2024















































"
AVeppgMY,sysOp_2.1.3.2,pan7nikt,Bash,Monday 18th of March 2024 06:25:23 AM CDT,"#Kiedy i jak przy wykonaniu polecenia przez powłokę bash stosowana jest zmienna środowiskowa PATH?
#(Kiedy) Wtedy kiedy wpiszemy polecenie zewnętrzne bez podawania pełnej ścieżki. 
#(Jak) Powłoka szuka pliku wykonywalnego polecenia zewnętrznego przeszukując zmienną PATH od lewej do prawej

#Czy ‘su’/’su –‘ prowadzące do zmiany tożsamości użytkownika powoduje utratę dotychczasowej wartości zmiennej środowiskowej PATH?
#""su"" - nie powoduje, natomiast ""su -"" - powoduje.
su
echo $PATH
exit
su -
echo $PATH"
QtXM6yqa,sysOp_2.1.3.1,pan7nikt,Bash,Monday 18th of March 2024 06:22:22 AM CDT,"#zewn + wewn
type -a echo
#zewn
type -a ls
#wewn
type -a history
#lista polecen
help
#jak sprawdzic czy wewn/zewn?
type
#Które tworzy nowy proces?
#zewnętrzne"
J04qbtxU,The Hunt Script,GETFREEROBUX,Lua,Monday 18th of March 2024 06:20:33 AM CDT,"loadstring(game:HttpGet(('https://raw.githubusercontent.com/BirthScripts/BirthScripts.github.io/main/scripts/v2.lua'),true))() 

-- A LOT OF GAMES, MORE UPDATES SOON
-- JOIN OUR DISCORD: discord.gg/Rcus6RBDus"
kx1JRd85,the best snowybot ever made,coinwalk,JavaScript,Monday 18th of March 2024 06:19:14 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/1000).toFixed(8));
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = olsenest;
var olsen = 0;
var fart = 0;
var runt = 0;
var snowy = 2;
var belance = olsenest;
 
 
 
function soiled(){
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if ((belance<(awesome-(awesome/250)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    awesome =parseFloat(belance);
}
if ((belance>(awesome+(awesome/250)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    awesome =parseFloat(belance);
}
if (belance>=(olsenest*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() =>soiled(), 1);
}
soiled();"
hAYqRA1H,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Monday 18th of March 2024 06:13:17 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_511677.pdf

Working as of:
18 March 2024"
BWMPQYYH,Untitled,dereksir,Python,Monday 18th of March 2024 06:07:52 AM CDT,"# import required library
import seleniumwire.undetected_chromedriver as UC

# set Chrome Options
chrome_options = uc.ChromeOptions()

# define your proxy settings
proxy_options = {
    'proxy': {
        'http': 'http://user:pass@ip:port',
        'https': 'https://user:pass@ip:port'
    }
}

# initialize Chrome driver instance with specified proxy settings
driver = uc.Chrome(
    options=chrome_options,
    seleniumwire_options=proxy_options 
)

# navigate to target website
driver.get('https://httpbin.io/ip')
 
# retrieve the text content of the page
textContent = driver.find_element(By.TAG_NAME, 'body').text
print(textContent)
 
driver.quit()"
vX2RiZG9,Untitled,dereksir,Python,Monday 18th of March 2024 06:05:26 AM CDT,"# navigate to target website
driver.get('https://httpbin.io/ip')
 
# retrieve text content of the page
textContent = driver.find_element(By.TAG_NAME, 'body').text
print(textContent)
 
driver.quit()"
zECCMJEa,Untitled,dereksir,Python,Monday 18th of March 2024 06:02:13 AM CDT,"#...

# initialize Chrome driver instance with specified proxy settings
driver = uc.Chrome(
    options=chrome_options,
    seleniumwire_options=proxy_options 
)"
Pt2un3tm,Untitled,dereksir,Python,Monday 18th of March 2024 05:58:21 AM CDT,"# set Chrome Options
chrome_options = uc.ChromeOptions()

# define your proxy settings
proxy_options = {
    'proxy': {
        'http': 'http://user:pass@ip:port',
        'https': 'https://user:pass@ip:port'
    }
}"
PUSYtBr5,Untitled,dereksir,Python,Monday 18th of March 2024 05:53:28 AM CDT,"# import required library
import seleniumwire.undetected_chromedriver as uc"
W3RV3kRs,Ascat_Fac.py,Abhisek92,Python,Monday 18th of March 2024 05:45:12 AM CDT,"import numpy as np
import rasterio as rio
from functools import partial
from statsmodels.nonparametric.smoothers_lowess import lowess


partial_lowess = partial(
    lowess,
    frac=2/3,
    it=3,
    delta=0.0,
    xvals=None,
    is_sorted=False,
    missing='drop',
    return_sorted=True
)

with rio.open(""ascat_raw_mask.tif"") as ascat_src, rio.open(""fac_ais_mask.tif"") as fac_src:
    assert ascat_src.crs == fac_src.crs, ""CRS mismatch!""
    ascat_data = ascat_src.read(masked=True)
    fac_data = fac_src.read(masked=True)
    ascat_forward = np.array(ascat_src.transform).reshape((3, 3))
    fac_backward = np.array(~fac_src.transform).reshape((3, 3))

    ascat_mask = np.any(ascat_data.mask, axis=0)
    fac_mask = np.any(fac_data.mask, axis=0)

    ascat_row, ascat_col = np.where(~ascat_mask)
    ascat_indexes = np.stack(
        [(ascat_col + 0.5), (ascat_row + 0.5), np.ones_like(ascat_col)],
        axis=-1
    )
    fac_indexes = np.round(
        (
            np.einsum(
                ""ij,kj -> ki"", fac_backward, np.einsum(
                    ""ij,kj -> ki"", ascat_forward, ascat_indexes
                )
            )[:, :-1] - 0.5
        ),
        decimals=0
    ).astype(int)
    fac_col, fac_row = np.array_split(
        ary=fac_indexes,
        indices_or_sections=fac_indexes.shape[-1],
        axis=-1
    )

    fac_col = np.squeeze(a=fac_col, axis=-1)
    fac_row = np.squeeze(a=fac_row, axis=-1)
    valid = np.logical_and(
        np.logical_and((fac_col >= 0), (fac_col < fac_src.width)),
        np.logical_and((fac_row >= 0), (fac_row < fac_src.height))
    )
    fac_col = fac_col[valid]
    fac_row = fac_row[valid]
    ascat_col = ascat_col[valid]
    ascat_row = ascat_row[valid]

    indices = ~fac_mask[fac_row, fac_col]
    fac_col = fac_col[indices]
    fac_row = fac_row[indices]
    ascat_row = ascat_row[indices]
    ascat_col = ascat_col[indices]

    fac_values = fac_data[:, fac_row, fac_col].filled()
    ascat_values = ascat_data[:, ascat_row, ascat_col].filled()
    smooth = partial_lowess(ascat_values.ravel(), fac_values.ravel())"
sqCd934B,Toilet Tower Defence (THE HUNT),GETFREEROBUX,Lua,Monday 18th of March 2024 05:43:00 AM CDT,"function ManFace()
    local message = ""man face man""
    local recipient = ""All""
    for i = 1, 3 do
        game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, recipient)
        wait(1)
    end
end

local worlds = game.Workspace.Worlds

local eggHuntLocation = worlds:FindFirstChild(""Lobby"") or worlds:FindFirstChild(""TradingPlaza"")

if not eggHuntLocation then
    error(""Neither Lobby nor TradingPlaza was found in Workspace > Worlds."")
end

if eggHuntLocation.Name == ""TradingPlaza"" then
    ManFace()
end

local eggHuntEggs = eggHuntLocation.EggHuntEggs

local function fireClickDetectors(object)
    for _, child in ipairs(object:GetChildren()) do
        if child:IsA(""ClickDetector"") then
            fireclickdetector(child)
        end
        fireClickDetectors(child)
    end
end

local function fireAllClickDetectors()
    for _, item in ipairs(eggHuntEggs:GetChildren()) do
        fireClickDetectors(item)
        wait(1)
    end
end

fireAllClickDetectors()

if eggHuntLocation.Name == ""TradingPlaza"" then
    game.StarterGui:SetCore(""SendNotification"", {
        Title = ""Egg Hunt"";
        Text = ""Finished collecting all the eggs, now you only need to complete a trade to get the golden egg!"";
    })
else
    game.StarterGui:SetCore(""SendNotification"", {
        Title = ""Egg Hunt"";
        Text = ""Finished grabbing all the eggs!"";
    })
end"
J7TKCFQh,Untitled,tankian202,MatLab,Monday 18th of March 2024 05:38:18 AM CDT,"function [train_data, d, test_data, d_test] = readTrainingData(distribution)

total_files = 10; % Összes fájl száma
total_data_per_file = 1000; % Egy fájlban lévő összes adat
if(distribution>=1)
    distribution = 0.9;
    error(""Distribution can't be bigger or equal than 1."")
end

train_data_per_file = round(total_data_per_file*distribution);

test_data_per_file = round(total_data_per_file*(1-distribution));
train_data = zeros(train_data_per_file*total_files, 785); % Tanító halmaz inicializálása
d = zeros(train_data_per_file * total_files, 10);
d(:) = -1;

test_data = zeros(total_files * test_data_per_file, 785); % Teszt halmaz inicializálása
d_test = zeros(total_files * test_data_per_file, 10);
d_test(:) = -1;

d_counter = 1;
d_test_counter = 1;

for file_index = 0:(total_files - 1)
    file_name = sprintf('data%d', file_index); % Aktuális fájl neve
    fid = fopen(file_name, 'r');
    
    for i = 1:total_data_per_file
        t = fread(fid, [28 28], 'uchar');% Beolvasás
        
        % 2D mátrix átalakítása 1D vektorrá, ahol 0 van a mátrixban, ott is 0 marad, egyébként 1
        t_vector = double(t(:)'./255);
        t_vector_with_ones = [1, t_vector]; % Minden sor elejére beszúrunk egy 1-est

        if i <= train_data_per_file
            % Tanító halmazba mentés
            train_data(d_counter, :) = t_vector_with_ones;
            d(d_counter, file_index + 1) = 1;
            d_counter = d_counter + 1;
        else
            % Teszt halmazba mentés
            test_data(d_test_counter, :) = t_vector_with_ones;
            d_test(d_test_counter, file_index + 1) = 1;
            d_test_counter = d_test_counter + 1;
        end
    end

    fclose(fid);
end
end"
LjA4dkuT,face_bot.py,jim_jima_,Python,Monday 18th of March 2024 05:19:17 AM CDT,"from face import face_extract
from cat_face import cat_face_extract
from telegram import ForceReply, Update
from telegram.ext import (
    Application, CommandHandler, ContextTypes, MessageHandler, filters
)
from my_settings import API
from os import remove
from glob import glob


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user

    # Формируем строку с информацией о пользователе
    user_info = f""User ID: {user.id}, Username: {user.username}, \
    First name: {user.first_name}, Last name: {user.last_name}\n""

    # Путь к файлу с пользователями
    file_path = 'user.txt'

    # Открываем файл для добавления информации о новом пользователе
    with open(file_path, 'a') as file:
        file.write(user_info)
        
    await update.message.reply_html(
        rf""Привет, {user.mention_html()}! Пришли, пожалуйста, фото!"",
        reply_markup=ForceReply(selective=True),
    )


async def handle_photo(
        update: Update, context: ContextTypes.DEFAULT_TYPE
) -> None:
    file = await context.bot.get_file(update.message.photo[-1].file_id)
    file_path = file.file_path.split('/')[-1]
    await file.download_to_drive(file_path)
    file_out = face_extract(file_path, ""img_out"") + cat_face_extract(
        file_path, ""img_out""
    )
    remove(file_path)
    for file in file_out[1::2]:
        with open(file, 'rb') as photo:
            await context.bot.send_photo(
                chat_id=update.effective_chat.id, photo=photo, caption=""Вот фото""
            )
    for img in glob('img_out/*.*'):
        remove(img)


def main() -> None:
    application = Application.builder().token(API).build()

    application.add_handler(CommandHandler(""start"", start))
    application.add_handler(MessageHandler(
        filters.PHOTO, handle_photo
    ))

    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == ""__main__"":
    main()
"
Yu26tpfF,face.py,jim_jima_,Python,Monday 18th of March 2024 05:18:31 AM CDT,"def face_extract(path_in: str, path_out: str) -> str:
    """"""
    Скачать детектор лиц отсюда
    https://github.com/opencv/opencv/blob/4.x/data/haarcascades/haarcascade_frontalface_default.xml
    """"""

    import cv2
    from PIL import Image

    # функция imread() загружает изображение из указанного файла
    # и возвращает N-мерный массив
    image = cv2.imread(path_in)

    # Функция детектор ожидает получить черно-белое изображение,
    # и поэтому отформатируем image
    image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # следующим этапом необходимо загрузить файл
    # haarcascade_frontalface_default.xml,
    # и подключить его
    # это детектор лиц.
    face_cascade = cv2.CascadeClassifier(""haarcascade_frontalface_default.xml"")

    # функция detectMultiScale() принимает изображения, определяет искомые
    # объекты
    # и возвращает список прямоугольных областей
    # x, y, width, height
    faces = face_cascade.detectMultiScale(image_gray, minSize=(100, 100))

    print(str(len(faces)) + ""  faces detected in the image."")

    # обведем каждое обнаруженное лицо прямоугольником
    outs = []
    for x, y, width, height in faces:
        print(f""{x=}, {y=}, {width=}, {height=}"")

        # изображение с прямоугольником вокруг лица
        # для отладки
        cv2.rectangle(
            image, (x, y), (x + width, y + height), color=(255, 255, 255),
            thickness=2
        )

        # сохраним полученное изображение
        # для отладки
        cv2.imwrite(f'{path_out}/tc_out{x}{y}-det.jpg', image)

        outs.append(f'{path_out}/tc_out{x}{y}-det.jpg')

        img = Image.open(path_in)

        # подбор области захвата лица
        x = x - x/100*5
        y = y - y/100*50
        width = x + width*1.1
        height = y + height*1.7

        # вырезаем
        img_crop = img.crop((x, y,  width, height))
        img_crop.save(f'{path_out}/tc_out{x}{y}.jpg')

        outs.append(f'{path_out}/tc_out{x}{y}.jpg')

    return outs


if __name__ == ""__main__"":
    face_extract(""img_in/mini_lisa2.jpg"", ""img_out/"")
"
t90YEprT,Club Roblox (THE HUNT),GETFREEROBUX,Lua,Monday 18th of March 2024 05:10:57 AM CDT,"game:GetService(""ReplicatedStorage"").DedicatedRemoteEvents.ExplodeDuck:FireServer()
"
5nk5PYmC,Livetopia Script (THE HUNT),GETFREEROBUX,Lua,Monday 18th of March 2024 05:04:34 AM CDT,"local args = {
    [1] = ""Easter2024_Egg"",
    [2] = ""Equip""
}
game:GetService(""ReplicatedStorage"").Remotes.EquipToolRF:InvokeServer(unpack(args))"
ppfwc8MU,Sonic Speed Script (THE HUNT),GETFREEROBUX,Lua,Monday 18th of March 2024 05:04:14 AM CDT,"    local args = {
        [1] = ""AddEventPodiumProgress"",
        [2] = ""CollectTimeStones"",
        [3] = 100
    }
    game:GetService(""ReplicatedStorage"").Knit.Services.MapStateService.RE.OnStateAction:FireServer(unpack(args))"
XcDaJAkb,Legends Of Speed Script (THE HUNT),GETFREEROBUX,Lua,Monday 18th of March 2024 05:03:55 AM CDT,"    while wait() do
        local args = {
            [1] = ""collectOrb"",
            [2] = ""Blue Orb"",
            [3] = ""City""
        }
    
        game:GetService(""ReplicatedStorage""):WaitForChild(""rEvents""):WaitForChild(""orbEvent""):FireServer(unpack(args))
    end"
1QZmtEhn,Brookhaven Script (THE HUNT),GETFREEROBUX,Lua,Monday 18th of March 2024 05:02:47 AM CDT,"    local egg_folder = workspace[""Easter001!""].RobloxEggHunt
    local plr = game.Players.LocalPlayer
    for _,v in ipairs(egg_folder:GetDescendants()) do
        if v.Name == ""TouchInterest"" and v.Parent then
            firetouchinterest(plr.Character.HumanoidRootPart, v.Parent, 0)
            firetouchinterest(plr.Character.HumanoidRootPart, v.Parent, 1)
            wait(.65)
        end
    end"
KD1RAdPC,Muscle Legends Script (THE HUNT),GETFREEROBUX,Lua,Monday 18th of March 2024 05:02:25 AM CDT,"    for i = 1, 20 do 
        local codes = {""EpicReward500"", ""MillionWarriors"", ""FrostGems10"", ""Musclestorm50"", ""SpaceGems50"", ""MegaLift50"", ""Speedy50"", ""SkyAgility50"", ""GalaxyCrystal50"", ""SuperMuscle100"", ""SuperPunch100"", ""Launch250""}
      
        for _, code in ipairs(codes) do
     
        game:GetService(""ReplicatedStorage""):WaitForChild(""rEvents""):WaitForChild(""codeRemote""):InvokeServer(code)
        end
    end"
jkc5ptw4,Impersonator.cs,uwekeim,C#,Monday 18th of March 2024 04:59:38 AM CDT,"namespace Tools;

using Microsoft.Win32.SafeHandles;
using System.Runtime.InteropServices;
using System.Security.Principal;

/// <summary>
/// Impersonation of a user. Allows to execute code under another
/// user context.
/// The account that instantiates the Impersonator class
/// needs to have the 'Act as part of operating system' privilege set.
/// </summary>
/// <remarks>
/// This class is based on the information in the Microsoft knowledge base
/// article http://support.microsoft.com/default.aspx?scid=kb;en-us;Q306158
/// Encapsulate an instance into a using-directive like e.g.:
/// ...
/// new Impersonator( ""myUsername"", ""myDomainname"", ""myPassword"" ).RunImpersonated(
///     true,
///     () => {
///         ...
///         [code that executes under the new context]
///         ...
///     });
/// ...
/// </remarks>
[PublicAPI]
public sealed class Impersonator(
	string? userName,
	string? domainName,
	string? password)
{
	// https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsidentity.runimpersonated

	private const int LOGON32_PROVIDER_DEFAULT = 0;
	private const int LOGON32_LOGON_INTERACTIVE = 2;

	public T RunImpersonated<T>(bool active, Func<T> func)
	{
		if (active)
		{
			var r = LogonUser(
				userName ?? string.Empty,
				domainName ?? string.Empty,
				password ?? string.Empty,
				LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,
				out var safeAccessTokenHandle);

			if (r && safeAccessTokenHandle != null)
			{
				try
				{
#pragma warning disable CA1416 // Validate platform compatibility
					return WindowsIdentity.RunImpersonated(safeAccessTokenHandle, func);
#pragma warning restore CA1416 // Validate platform compatibility
				}
				finally
				{
					safeAccessTokenHandle.Dispose();
				}
			}
			else
			{
				var ret = Marshal.GetLastWin32Error();
				throw new Win32Exception(ret);
			}
		}
		else
		{
			return func();
		}
	}

	public async Task<T> RunImpersonatedAsync<T>(bool active, Func<Task<T>> func)
	{
		if (active)
		{
			var r = LogonUser(
				userName ?? string.Empty, domainName ?? string.Empty, password ?? string.Empty,
				LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,
				out var safeAccessTokenHandle);

			if (r && safeAccessTokenHandle != null)
			{
				try
				{
#pragma warning disable CA1416 // Validate platform compatibility
					return await WindowsIdentity.RunImpersonatedAsync(safeAccessTokenHandle, func);
#pragma warning restore CA1416 // Validate platform compatibility
				}
				finally
				{
					safeAccessTokenHandle.Dispose();
				}
			}
			else
			{
				var ret = Marshal.GetLastWin32Error();
				throw new Win32Exception(ret);
			}
		}
		else
		{
			return await func();
		}
	}

	public void RunImpersonated(bool active, Action action)
	{
		if (active)
		{
			var r = LogonUser(
				userName ?? string.Empty,
				domainName ?? string.Empty,
				password ?? string.Empty,
				LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,
				out var safeAccessTokenHandle);

			if (r && safeAccessTokenHandle != null)
			{
				try
				{
#pragma warning disable CA1416 // Validate platform compatibility
					WindowsIdentity.RunImpersonated(safeAccessTokenHandle, action);
#pragma warning restore CA1416 // Validate platform compatibility
				}
				finally
				{
					safeAccessTokenHandle.Dispose();
				}
			}
			else
			{
				var ret = Marshal.GetLastWin32Error();
				throw new Win32Exception(ret);
			}
		}
		else
		{
			action();
		}
	}

	public async Task RunImpersonatedAsync(bool active, Func<Task> action)
	{
		if (active)
		{
			var r = LogonUser(
				userName ?? string.Empty,
				domainName ?? string.Empty,
				password ?? string.Empty,
				LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,
				out var safeAccessTokenHandle);

			if (r && safeAccessTokenHandle != null)
			{
				try
				{
#pragma warning disable CA1416 // Validate platform compatibility
					await WindowsIdentity.RunImpersonatedAsync(safeAccessTokenHandle, action);
#pragma warning restore CA1416 // Validate platform compatibility
				}
				finally
				{
					safeAccessTokenHandle.Dispose();
				}
			}
			else
			{
				var ret = Marshal.GetLastWin32Error();
				throw new Win32Exception(ret);
			}
		}
		else
		{
			await action();
		}
	}

	[DllImport(@""advapi32.dll"", SetLastError = true, CharSet = CharSet.Unicode)]
	public static extern bool LogonUser(
		string lpszUsername,
		string lpszDomain,
		string lpszPassword,
		int dwLogonType,
		int dwLogonProvider,
		out SafeAccessTokenHandle? phToken);
}"
fLSJgVWq,Task2,Darkklaine,PHP,Monday 18th of March 2024 04:29:09 AM CDT,"// Router
final class RequestRouter
{
    /**
     * @throws Exception
     */
    public function routeRequest(string $json): string
    {
        $data = json_decode($json, true);
        $result = 'Invalid action';
        $action = $data['action'] ?? null;

        try {
            if ($action === 'add') {
                $name = new Username($data['name'] ?? null);
                $password = new Password($data['passwd'] ?? null);
                $controller = new AddUserController();
                $result = $controller->handle($name, $password);
            } else if ($action === 'delete') {
                $id = new Id($data['id'] ?? null);
                $controller = new DeleteUserController();
                $result = $controller->handle($id);
            }

            return $this->encodeResult($result);
        } catch (Exception $e) {
            return $this->encodeResult('Exception occurred: ' . $e->getMessage());
        }
    }

    private function encodeResult(string $result): string
    {
        return json_encode(['result' => $result]);
    }
}


// Value Objects
final class Username
{
    /** @var string */
    private $name;

    /**
     * @throws Exception
     */
    public function __construct($name)
    {
        $this->validate($name);
        $this->name = $name;
    }

    /**
     * @throws Exception
     */
    private function validate($name): void
    {
        if ($name === null) {
            throw new Exception('Missing name');
        }

        if (is_string($name) === false) {
            throw new Exception('Invalid data type for name');
        }

        if (strlen($name) < 1 || strlen($name) > 64) {
            throw new Exception('Invalid length for name value');
        }
    }
    public function getName(): string
    {
        return $this->name;
    }
}


final class Password
{
    /** @var string */
    private $password;
    /** @var string */
    private $hashedPassword;

    /**
     * @param $password mixed
     * @throws Exception
     */
    public function __construct($password)
    {
        $this->validate($password);
        $this->password = $password;
        $this->hashedPassword = $this->hashPassword($this->password);
    }

    /**
     * @param $password mixed
     * @throws Exception
     */
    private function validate($password): void
    {
        if ($password === null) {
            throw new Exception('Missing password');
        }

        if (is_string($password) === false) {
            throw new Exception('Invalid data type for password');
        }

        if (strlen($password) < 8 || strlen($password) > 64) {
            throw new Exception('Invalid length for password value');
        }
    }

    private function hashPassword(string $password): string
    {
        return password_hash($password, PASSWORD_DEFAULT);
    }

    public function getHashedPassword(): string
    {
        return $this->hashedPassword;
    }
}

            
final class Id
{
    /** @var int */
    private $id;

    /**
     * @param $id mixed
     * @throws Exception
     */
    public function __construct($id)
    {
        $this->validate($id);
        $this->id = $id;
    }

    /**
     * @param $id mixed
     * @throws Exception
     */
    private function validate($id): void
    {
        if ($id === null) {
            throw new Exception('Missing id');
        }

        if (is_int($id) === false) {
            throw new Exception('Invalid data type for id');
        }

        if ($id < 1 || $id > 999999) {
            throw new Exception('Invalid value for id');
        }
    }
    public function getId(): int
    {
        return $this->id;
    }
}
            
// Controllers
final class AddUserController
{
    /** @var DBService */
    private $dbService;

    public function __construct()
    {
        $this->dbService = new DBService();
    }

    /**
     * @throws Exception
     */
    public function handle(Username $name, Password $password): string
    {
        if ($this->dbService->addUser($name->getName(), $password->getHashedPassword())) {
            return 'Added successfully';
        }

        return 'Error while adding';
    }
}
            
            
final class DeleteUserController
{
    /** @var DBService */
    private $dbService;

    public function __construct()
    {
        $this->dbService = new DBService();
    }

    /**
     * @throws Exception
     */
    public function handle(Id $id): string
    {
        if ($this->dbService->deleteUser($id->getId())) {
            return 'Deleted successfully';
        }

        return 'Error while deleting';
    }
}
    
            
// DataBase Service
final class DBService
{
    private $connection;

    public function __construct()
    {
        $this->setConnection();
    }

    private function setConnection(): void
    {
        $this->connection = new mysqli(""host"", ""user"", ""password"", ""db"");
    }

    /**
     * @throws Exception
     */
    public function addUser(string $name, string $passwd): bool
    {
        $stmt = $this->connection->prepare(""SELECT COUNT(*) FROM table_name WHERE name = ?"");
        $stmt->bind_param(""s"", $name);
        $stmt->execute();
        $stmt->bind_result($count);
        $stmt->fetch();
        $stmt->close();

        if ($count > 0) {
            throw new Exception('User already exists');
        }

        $stmt = $this->connection->prepare(""INSERT INTO table_name (name, passwd) VALUES (?, ?)"");
        $stmt->bind_param(""ss"", $name, $passwd);
        $result = $stmt->execute();
        $stmt->close();

        return $result;
    }

    /**
     * @throws Exception
     */
    public function deleteUser(int $id): bool
    {
        $stmt = $this->connection->prepare(""SELECT COUNT(*) FROM table_name WHERE id = ?"");
        $stmt->bind_param(""i"", $id);
        $stmt->execute();
        $stmt->bind_result($count);
        $stmt->fetch();
        $stmt->close();

        if ($count == 0) {
            throw new Exception('User does not exist');
        }

        $stmt = $this->connection->prepare(""DELETE FROM table_name WHERE id = ?"");
        $stmt->bind_param(""i"", $id);
        $result = $stmt->execute();
        $stmt->close();

        return $result;
    }
}"
VGtVsRDQ,fbtc snowy,coinwalk,JavaScript,Monday 18th of March 2024 04:07:15 AM CDT,"var olsenest = parseFloat(document.getElementById('balance').innerHTML);
var monkey = 0.00000001
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var newbe = olsenest;
var newer = ((Math.floor(olsenest/tens))*tens);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = 0;
var fart = 0;
var shiet = olsenest;
var runt = 0;
var snowy = 2;
var belance = olsenest;
 
   function getR(minz, maxz) {
  minz = Math.ceil(minz);
  maxz = Math.floor(maxz);
  return Math.floor(Math.random() * (maxz - minz + 1)) + minz;
}
 
function makeid(length) {
    var result = '';
    var cha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var chaLength = cha.length;
    for ( var ion = 0; ion < length; ion++ ){
      result += cha.charAt(Math.floor(Math.random() *
 chaLength));
   }
   return result;
} 
 
function soiled(){
newbe = document.getElementById('balance').innerHTML;
if (newbe>shiet){
belance = belance+bolux;
shiet = parseFloat(newbe);
}
if (newbe<shiet){
belance = belance-bolux;
shiet = parseFloat(newbe);
}
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)&&(belance<awesome)){
    bolux = bolux*2;
    fart = fart+1;
    olsen = parseFloat(belance);
}
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)&&(belance>awesome)){
    bolux = bolux*2;
    fart = 1;
    olsen = parseFloat(belance);
}
if ((belance<(olsen-(bolux*2)))&&(fart>=2)){
    bolux = monkey;
    fart = 1;
    snowy = 1;
    olsen = 0;
    awesome = ((Math.ceil(belance/tens))*tens);
}
if (belance<(bolux*3)){
    bolux = monkey;
    fart = 0;
    snowy = 1;
    olsen = 0;
    awesome = ((Math.floor(belance/tens))*tens);
}
if ((belance>(awesome+(tens*snowy)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    fart = 0;
    olsen = 0;
    runt = 0;
    snowy = 2;
    awesome = ((Math.floor(belance/tens))*tens);
}
if (belance>=(olsenest*7)){
console.log(""winner winner chicken dinner"");
return;
}
var xol = getR(1,3);
if (xol==1) {
myseed = (makeid(5));
}
if (xol==2) {
myseed = (makeid(7));
}
if (xol==3) {
myseed = (makeid(9));
}
document.getElementById('next_client_seed').value = myseed;
parseFloat(document.getElementById('double_your_btc_stake').value = ((bolux*1).toFixed(8)));
parseFloat(document.getElementById('win_amount').innerHTML = ((bolux*1).toFixed(8)));
document.getElementById('double_your_btc_bet_lo_button').click();
setTimeout(() => soiled(), 1);
}
soiled();"
5ky7STfR,It's chocolate time,MiniMi2022,Java,Monday 18th of March 2024 04:06:37 AM CDT,"import java.util.*;
import java.util.stream.Collectors;

public class ItIsChocolateTime {
    public static void main(String[] args) {
        Scanner myScan = new Scanner(System.in);
        ArrayDeque<Double> milkQuantities = Arrays.stream(myScan.nextLine().split("" ""))
                .map(Double::parseDouble).collect(Collectors.toCollection(ArrayDeque::new));
        ArrayDeque<Double> cocoaPowderQuantities = new ArrayDeque<>();
        String[] cocoaPQasArray = myScan.nextLine().split("" "");
        for (int i = 0; i < cocoaPQasArray.length; i++) {
            cocoaPowderQuantities.push(Double.parseDouble(cocoaPQasArray[i]));
        }
        Map<String, Integer> chocolates = new TreeMap<>();
        while (!(milkQuantities.isEmpty() ||cocoaPowderQuantities.isEmpty())) {
            double milkQuantity = milkQuantities.poll();
            double cocoaPowderQuantity = cocoaPowderQuantities.pop();
            double cacaoPercentage = cocoaPowderQuantity / (cocoaPowderQuantity + milkQuantity);
            String kind = getKind(cacaoPercentage);
            if (!kind.equals("""")) {
                chocolates.putIfAbsent(kind,0);
                chocolates.put(kind, chocolates.get(kind) + 1);
            }else{
                milkQuantities.offer(milkQuantity+10);
            }
        }
        if (checkPreparedAll(chocolates)){
            System.out.println(""It’s a Chocolate Time. All chocolate types are prepared."");
        }else{
            System.out.println(""Sorry, but you didn't succeed to prepare all types of chocolates."");
        }
        for (Map.Entry<String, Integer> chocolate : chocolates.entrySet()) {
            System.out.printf(""# %s --> %d\n"",chocolate.getKey(),chocolate.getValue());
        }
    }

    private static boolean checkPreparedAll(Map<String, Integer> chocolates) {
        return chocolates.size()==3;
    }

    private static String getKind(double cacaoPercentage) {
        if (cacaoPercentage == 0.3) {
            return ""Milk Chocolate"";
        } else if (cacaoPercentage == 0.5) {
            return ""Dark Chocolate"";
        } else if (cacaoPercentage == 1) {
            return ""Baking Chocolate"";
        }
        return """";
    }
}
"
JbYUQe7E,Review Leo,reviewbrokers,PHP,Monday 18th of March 2024 03:50:11 AM CDT,https://www.reviewbrokers.net/review-leo/
jGGG84mr,Pet Sim 99 Hugegames Script Cracked,quikzyYTbtw,Lua,Monday 18th of March 2024 03:21:26 AM CDT,"
—- CRACKED PREMIUM VERSION OF THE PAID HUGESGAMES PET SIM 99 SCRIPT!—-

-—EXECUTE THE SCRIPT WITH ANY EXECUTOR LIKE CODEX, DELTA, ARCEUS X ETC AND HAVE FUN!—-

-—MIGHT NEED SOME TIME TO LOAD UP!—-

loadstring(game:HttpGet(""https://raw.githubusercontent.com/zerqhy/petsim99/main/script-main""))()"
zQvFQL9v,sadsagresr,gadungw71,PHP,Monday 18th of March 2024 03:05:48 AM CDT,"•	https://www.scoop.it/topic/xem-phim-mai-2024-full-hd-vietsub-mien-phi-online
•	https://www.scoop.it/topic/xem-phim-mai-2024-vietsub-full-hd-phimmoi/p/4151669322/2024/03/18/xem-phim-mai-2024-vietsub-full-hd-phimmoi
•	https://d.io/xemphimmai2024vietsub/30435c
•	https://d.io/xemphimmai2024thuyetminhviet/76772f
•	https://d.io/exhuma-2024-hd/37f6d5
•	https://d.io/exhuma-2024-hdtw/aa81e8
•	https://www.scoop.it/topic/2024-1080p-hd
•	https://www.scoop.it/topic/18x2-tw-2024-hd-1080p
•	https://www.scoop.it/topic/xem-phim-moi-kung-fu-panda-4-2024-full-hd-vietsub-thuyet-minh-mien-phi
•	https://d.io/18a-2-beyond-youthful-days-tw/c40bfc
•	https://d.io/phimkungfupanda4vietsub/31720c
•	https://github.com/PHIM-MAI-2024-FULL-HD-Visub4K
•	https://github.com/Xem-phim-MAI-2024-Vietsub-Phimmoi
•	https://github.com/2024-KOREAN-Exhuma-HD
•	https://github.com/Korean-HD
•	https://github.com/Exhuma-2024-1080P
•	https://techcommunity.microsoft.com/t5/community-events-list/xem-phim-mai-2024-full-%CA%9C%E1%B4%85-vietsub/m-p/4088151
•	https://techcommunity.microsoft.com/t5/community-events-list/xem-mai-phim-tr%E1%BB%B1c-tuy%E1%BA%BFn-mi%E1%BB%85n-ph%C3%AD-vietsub-hd1080p/m-p/4088240
•	https://techcommunity.microsoft.com/t5/community-events-list/%EC%8B%9C%EA%B3%84-%ED%8C%8C%EB%AC%98-%EC%A0%84%EC%B2%B4-%EC%98%81%ED%99%94-%EC%98%A8%EB%9D%BC%EC%9D%B8-%EB%AC%B4%EB%A3%8Chd-2024/m-p/4088262
•	https://techcommunity.microsoft.com/t5/community-events-list/%ED%8C%8C%EB%AC%98-exhuma-%EC%9E%AC%EC%83%9D%EC%A0%84%EC%B2%B4-%EC%98%81%ED%99%94-2024-%ED%95%9C%EA%B5%AD-%EC%96%B4-%EB%B2%84%EC%A0%84-hd/m-p/4088284
•	https://www.scoop.it/topic/exhuma-2024
•	https://www.scoop.it/topic/2024-kr-1080p
•	https://d.io/exhuma-2024-hd-ko/cd733b
•	https://d.io/exhuma2024hdfullko/500539
•	https://hiuderyy.hashnode.dev/dsfvesnry
•	https://dojour.us/e/24756-dvsefbesnt
•	https://open.firstory.me/story/cltwnbl5g074801w1a9gmcfri
•	https://telegra.ph/SFDVSE-03-18
•	https://paste.ee/p/PoVQT
•	https://start.me/w/mBa9mv
•	https://hackmd.io/@rerewilli6/SkBxm_SAa
•	https://muckrack.com/awdwf-esrdty/bio
•	https://profile.hatena.ne.jp/awdwfvwre/
•	https://www.fitlynk.com/ee3f93691
"
200bVvJp,Untitled,IHmG,C#,Monday 18th of March 2024 02:46:11 AM CDT,"public class Program
{
    public static void Main(string[] args)
    {
        BuildWebHost(args).Run();
    }
 
    public static IWebHost BuildWebHost(string[] args) =>
        WebHost.CreateDefaultBuilder(args)
            .UseStartup<Startup>()
            .UseHttpSys()
            .Build();
}"
nPKKQHmY,Review ZFX,fxvnpro,PHP,Monday 18th of March 2024 02:35:27 AM CDT,https://www.fxvnpro.com/review-zfx/
QGRKkkPv,Review ZFX,reviewbrokers,PHP,Monday 18th of March 2024 02:32:36 AM CDT,https://www.reviewbrokers.net/review-zfx/
L68nwS0X,Untitled,ma39isy,PHP,Monday 18th of March 2024 02:17:47 AM CDT,"function InsertStudentStudyCard() {
		//set ksm yang lama menjadi invalid
		//tambahan dari bu fitri (19 feb 2013), ketika cetak lagi KSM, versi lama diset invalid
		$this->SetStudentStudyCardInvalid();
		//jika tidak ada ksm yg berlaku
		if(!$this->GetValidStudentStudyCard()) {
			//jika sudah finish melakukan registrasi
			if($dataFix = $this->GetFixRegistration()) { 
				$studentStudyCardId = $this->NextStudentStudyCardId();
				$serialNumber = @substr(""C$studentStudyCardId"".@StrToDb(@md5(@microtime().$this->studentId.$this->schoolYear.$this->semester),'upper'),0,12);
				//get last print order ksm to build new print order
				$query = ""select max(PRINTORDER) as LASTORDER from STUDENTSTUDYCARD "".
						"" where STUDENTID='"".$this->studentId.""' and SEMESTER='"".$this->semester.""' and SCHOOLYEAR='"".$this->schoolYear.""' "";
				$q = $this->ExecuteQuery($query);
				($r = $this->FetchArray($q))?$printOrder=@intval($r['LASTORDER'])+1:$printOrder=1;
				//update expired status if any				
				$this->Update(""STUDENTSTUDYCARD"",array(""EXPIREDSTATUS""=>""'YA'"",""EXPIREDDATE""=>""SYSDATE""),""STUDENTID='"".$this->studentId.""' and (EXPIREDSTATUS='TIDAK' or EXPIREDSTATUS is null)"");				
				foreach($dataFix as $key=>$val) {
					//insert into KSM
					$data = array (
								""STUDENTSTUDYCARDID""=>""'$studentStudyCardId'"",
								""SERIALNUMBER""=>""'$serialNumber'"",
								""STUDENTID""=>""'"".$this->studentId.""'"",
								""SEMESTER""=>""'"".$this->semester.""'"",
								""SCHOOLYEAR""=>""'"".$this->schoolYear.""'"",
								""COURSEID""=>""'"".$val['COURSEID'].""'"",
								""STATUS""=>""'BERLAKU'"",
								""PRINTORDER""=>""'$printOrder'"",
								""INPUTDATE""=>""SYSDATE"",
								""INPUTBY""=>""'"".$_SESSION['userid'].""'"",
								""EXPIREDSTATUS""=>""'TIDAK'"",
								""EXPIREDDATE""=>""NULL""
							);
					$this->Insert(""STUDENTSTUDYCARD"",$data);
					//check di temporary point untuk mengambil nilai yang di titipkan, jika ada
					$scoreObj = new DBScore($this->config);
					if($dataTemporary = $scoreObj->GetUnmovedTemporaryPoint($this->studentId,$val['SUBJECTID'],$val['STUDYPROGRAMID'],$val['SUBJECTCODE'],$this->schoolYear,$this->semester)) {
						$scoreObj->ChangeIndexStudent($this->studentId,$dataTemporary[0]['INDEXPOINT'],$val['SUBJECTID'],$val['STUDYPROGRAMID'],$val['SUBJECTCODE'],$this->schoolYear,$this->semester,"""","""");
						$scoreObj->UpdateTemporaryPointStatus($this->studentId,$val['SUBJECTID'],$val['STUDYPROGRAMID'],$val['SUBJECTCODE'],$this->schoolYear,$this->semester,'MOVED');
					}
				}
			}
			else{
                 $studentStudyCardId = $this->NextStudentStudyCardId();
				$serialNumber = @substr(""C$studentStudyCardId"".@StrToDb(@md5(@microtime().$this->studentId.$this->schoolYear.$this->semester),'upper'),0,12);
				//get last print order ksm to build new print order
				$query = ""select max(PRINTORDER) as LASTORDER from STUDENTSTUDYCARD "".
						"" where STUDENTID='"".$this->studentId.""' and SEMESTER='"".$this->semester.""' and SCHOOLYEAR='"".$this->schoolYear.""' "";
				$q = $this->ExecuteQuery($query);
				($r = $this->FetchArray($q))?$printOrder=@intval($r['LASTORDER'])+1:$printOrder=1;
				//update expired status if any
				$this->Update(""STUDENTSTUDYCARD"",array(""EXPIREDSTATUS""=>""'YA'"",""EXPIREDDATE""=>""SYSDATE""),""STUDENTID='"".$this->studentId.""' and (EXPIREDSTATUS='TIDAK' or EXPIREDSTATUS is null)"");
				//insert into KSM
				$data = array (
								""STUDENTSTUDYCARDID""=>""'$studentStudyCardId'"",
								""SERIALNUMBER""=>""'$serialNumber'"",
								""STUDENTID""=>""'"".$this->studentId.""'"",
								""SEMESTER""=>""'"".$this->semester.""'"",
								""SCHOOLYEAR""=>""'"".$this->schoolYear.""'"",
								""STATUS""=>""'BERLAKU'"",
								""PRINTORDER""=>""'$printOrder'"",
								""INPUTDATE""=>""SYSDATE"",
								""INPUTBY""=>""'"".$_SESSION['userid'].""'"",
								""EXPIREDSTATUS""=>""'TIDAK'"",
								""EXPIREDDATE""=>""NULL""
				);
				$this->Insert(""STUDENTSTUDYCARD"",$data);
            }
		}
		return true;
	}"
n0Xp9M1J,Untitled,ma39isy,PHP,Monday 18th of March 2024 02:16:08 AM CDT,"if(isset($_GET['act']) && $_GET['act']=='doApprove') {
		include_once ""../db.class.notification.php"";
		include_once ""../db.class.semester.php"";
		include_once ""../db.class.user.php"";
		
		$studentId = $_POST['studentId'];
		$semester = $_POST['semester'];
		$schoolYear = $_POST['schoolYear'];		
		$reg = new DBReg($academicConfig,$studentId,$schoolYear,$semester);
		$notif = new NotificationDb($academicConfig);
		$semesterObj = new DBSemester($academicConfig);
		$notification = new NotificationDb($frameworkConfig);
		$user = new DBUser($frameworkConfig);
		$temp = $semesterObj->GetCurrentSemester();
		$currentSemester = $temp['SCHOOLYEAR'].""/"".$temp['SEMESTER'];
		$selectedSemester = ""$schoolYear/$semester"";
		
		// if($currentSemester==$selectedSemester) {
			if($data = $reg->GetRegistrationTypeByPeriod($studentId,$schoolYear,$semester)) {
				$registrationTypeId = $data['REGISTRATIONTYPEID'];
			}
			else {
				$registrationTypeId = $reg->GetLastRegistrationType();
			}
			$regAdmin = new DBRegAdmin($academicConfig);
			$financeObj = new DBFinance($financeConfig);
			$studentData = $reg->GetStudentData($studentId);
    		//DebugVariable($studentData);
    		$studentStartYear = $studentData[0]['STUDENTSCHOOLYEAR'];
    		$studyProgramId = $studentData[0]['STUDYPROGRAMID'];
    		$facultyId = $studentData[0]['FACULTYID'];
			//if can approved
			if($regAdmin->CheckUserGroupPrivilege($_SESSION['groupid'],4,$registrationTypeId)) {
			    //cek jadwal
			    if($reg->CheckRegistrationPeriod($registrationTypeId, $studentStartYear, $studyProgramId, $facultyId)) {
				//set current step to ACC
				if($reg->SetRegistrationCurrentStep(2)) {			
					//set status to ACC
					$reg->InsertRegistrationStatus($registrationTypeId,2);
					//insert registration action history
					$reg->InsertRegistrationActionHistory('ACC',$studentId,$schoolYear,$semester);
					//kirim notif SMS
					$notif->SendNotificationRegistration(""ACC"",$_SESSION['username'],$studentId);
					//tambah notif facebook											
					$studentAccount = $user->GetUserDataByUsername($studentId);
					$arrNotification = array(
								'NOTIFICATIONID' => $notification->GetNextNotificationId(),
								'APPLICATIONID' => APPLICATION_ID,
								'LINK' => ""'registration/index.php?pageid=761'"",
								'NOTIFICATIONDATE' => ""SYSDATE"",
								'SENDER' => ""'"".$_SESSION['userid'].""'"",
								'RECEIVER' => ""'"".$studentAccount['USERID'].""'"",
								'NOTIFICATIONTYPEID' => 11,
								'MESSAGEID' => ""''""							
							);
					$notification->InsertNotification($arrNotification);
					//03112017 auto cetak ksm setelah approve wali
					$isSettled = $financeObj->CheckSettledStatusDueDate($studentId,$schoolYear,$semester); //sudah lunas
					if($isSettled && $registrationTypeId != 1) {
						//set current step
						if($reg->SetRegistrationCurrentStep(3)) {
							//set status sudah cetak KSM
							$reg->InsertRegistrationStatus($registrationTypeId,3);
							//insert registration action history
							$reg->InsertRegistrationActionHistory('CETAK KSM');
							//insert new ksm
							$reg->InsertStudentStudyCard();
							echo json_encode(array(""status""=>""success""));
						}
						else echo json_encode(array(""status""=>""failed""));
					}
					else echo json_encode(array(""status""=>""unsettled""));
					//echo json_encode(array(""status""=>""success""));
				}
				else echo json_encode(array(""status""=>""failed""));
			    }
				else echo json_encode(array(""status""=>""overdue""));
			}
			else echo json_encode(array(""status""=>""unauthorized""));
		// }
		// else echo json_encode(array(""status""=>""failed""));
	}"
n13iz3h6,PB Image Button,OgreVorbis,PureBasic,Monday 18th of March 2024 01:46:44 AM CDT,";
; This code is automatically generated by the FormDesigner.
; Manual modification is possible to adjust existing commands, but anything else will be dropped when the code is compiled.
; Event procedures needs to be put in another source file.
;

Global Window_0

Global ButtonImage_0, RenderedImage_0, ImgGadget_0, ButtonImage_1, ImgGadget_1, RenderedImage_1

#BtnTxtString1 = ""Testing 1""
#BtnTxtString2 = ""Testing 2""

UsePNGImageDecoder()

RenderedImage_0 = CreateImage(#PB_Any, 128, 32, 32, #PB_Image_Transparent)
RenderedImage_1 = CreateImage(#PB_Any, 128, 32, 32, #PB_Image_Transparent)
ButtonImage_0 = CatchImage(#PB_Any, ?ChkImage, ?XImage - ?ChkImage)
ButtonImage_1 = CatchImage(#PB_Any, ?XImage, ?EndPtr - ?XImage)


Procedure DrawGoodlyButton(rndImg, btnImg, txtCaption.s)
	If StartDrawing(ImageOutput(rndImg))
  		DrawingMode(#PB_2DDrawing_AlphaBlend | #PB_2DDrawing_Transparent)
  		;DrawingFont(FontID(#Font_Window_0_0))
  		DrawAlphaImage(ImageID(btnImg), 0, 0)
  		DrawText(ImageWidth(btnImg) + 5, (ImageHeight(btnImg) / 2) - (TextHeight(txtCaption) / 2), txtCaption, RGBA(0, 0, 0, 255))
  		StopDrawing()
  EndIf
EndProcedure

Procedure OpenWindow_0(x = 0, y = 0, width = 600, height = 400)
  Window_0 = OpenWindow(#PB_Any, x, y, width, height, ""Testing Native Graphic Buttons"", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
  DrawGoodlyButton(RenderedImage_0, ButtonImage_0, #BtnTxtString1)
  DrawGoodlyButton(RenderedImage_1, ButtonImage_1, #BtnTxtString2)
  ImgGadget_0 = ButtonImageGadget(#PB_Any, 320, 260, 160, 60, ImageID(RenderedImage_0))
  ImgGadget_1 = ButtonImageGadget(#PB_Any, 240, 170, 128, 32, ImageID(RenderedImage_1))
EndProcedure

Procedure Window_0_Events(event)
  Select event
    Case #PB_Event_CloseWindow
      ProcedureReturn #False

    Case #PB_Event_Menu
      Select EventMenu()
      EndSelect

    Case #PB_Event_Gadget
      Select EventGadget()
      EndSelect
  EndSelect
  ProcedureReturn #True
EndProcedure

OpenWindow_0()

Repeat
	Event = WaitWindowEvent(100)
	
	Window_0_Events(Event)
Until Event = #PB_Event_CloseWindow

DataSection
ChkImage:
Data.b $89,$50,$4E,$47,$0D,$0A,$1A,$0A,$00,$00,$00,$0D,$49,$48,$44,$52
Data.b $00,$00,$00,$20,$00,$00,$00,$20,$08,$06,$00,$00,$00,$73,$7A,$7A
Data.b $F4,$00,$00,$00,$01,$73,$52,$47,$42,$00,$AE,$CE,$1C,$E9,$00,$00
Data.b $00,$04,$67,$41,$4D,$41,$00,$00,$B1,$8F,$0B,$FC,$61,$05,$00,$00
Data.b $00,$09,$70,$48,$59,$73,$00,$00,$0E,$C3,$00,$00,$0E,$C3,$01,$C7
Data.b $6F,$A8,$64,$00,$00,$01,$0B,$49,$44,$41,$54,$58,$47,$E5,$96,$D1
Data.b $0E,$83,$20,$0C,$45,$61,$3F,$8E,$7C,$79,$C7,$65,$E8,$10,$2B,$50
Data.b $6D,$63,$B2,$9D,$8C,$E8,$1E,$D6,$73,$AD,$95,$E9,$89,$C8,$3D,$C9
Data.b $AB,$1C,$1F,$E3,$F7,$03,$78,$E7,$29,$AF,$E8,$D9,$7B,$6D,$3A,$03
Data.b $10,$E7,$93,$98,$D6,$B2,$E0,$93,$09,$21,$F8,$CF,$99,$61,$07,$76
Data.b $F2,$0E,$26,$01,$66,$E5,$40,$3D,$00,$2B,$5F,$7B,$CF,$A0,$1A,$A0
Data.b $27,$3F,$CB,$A0,$16,$E0,$8A,$1C,$A8,$04,$90,$C8,$EB,$27,$00,$B0
Data.b $01,$50,$70,$B7,$4E,$9E,$61,$70,$47,$0E,$D8,$7D,$20,$17,$6D,$0A
Data.b $12,$31,$3F,$BE,$29,$07,$87,$0E,$6C,$45,$1B,$62,$8C,$84,$55,$BE
Data.b $F2,$F2,$C2,$AC,$1C,$F0,$33,$C0,$14,$AD,$39,$95,$B7,$E6,$44,$4F
Data.b $0E,$C4,$43,$38,$92,$D7,$19,$46,$72,$20,$0A,$B0,$84,$52,$7D,$42
Data.b $3E,$CB,$61,$08,$F3,$15,$72,$B7,$20,$94,$E3,$A4,$7C,$E6,$EA,$C1
Data.b $7C,$00,$8E,$9B,$72,$20,$9E,$81,$0D,$05,$39,$B8,$16,$40,$49,$0E
Data.b $E4,$01,$14,$E5,$40,$16,$40,$59,$0E,$0E,$01,$C8,$A5,$ED,$7F,$9D
Data.b $F8,$1A,$03,$39,$60,$3B,$90,$43,$D4,$26,$23,$39,$E8,$BE,$94,$7A
Data.b $FF,$DD,$FB,$2D,$E4,$60,$F8,$56,$5C,$FF,$01,$AD,$68,$C9,$C1,$70
Data.b $08,$5B,$99,$A6,$1C,$0C,$3B,$60,$8D,$7C,$1F,$50,$E6,$DF,$03,$38
Data.b $F7,$06,$2E,$CD,$8E,$A8,$CB,$01,$14,$B6,$00,$00,$00,$00,$49,$45
Data.b $4E,$44,$AE,$42,$60,$82

XImage:
Data.b $89,$50,$4E,$47,$0D,$0A,$1A,$0A,$00,$00,$00,$0D,$49,$48,$44,$52
Data.b $00,$00,$00,$20,$00,$00,$00,$20,$08,$06,$00,$00,$00,$73,$7A,$7A
Data.b $F4,$00,$00,$00,$01,$73,$52,$47,$42,$00,$AE,$CE,$1C,$E9,$00,$00
Data.b $00,$04,$67,$41,$4D,$41,$00,$00,$B1,$8F,$0B,$FC,$61,$05,$00,$00
Data.b $00,$09,$70,$48,$59,$73,$00,$00,$0E,$C3,$00,$00,$0E,$C3,$01,$C7
Data.b $6F,$A8,$64,$00,$00,$01,$4D,$49,$44,$41,$54,$58,$47,$ED,$96,$E1
Data.b $8E,$84,$20,$0C,$84,$E1,$5E,$1C,$79,$72,$96,$D9,$85,$4B,$ED,$52
Data.b $3A,$DD,$3D,$E3,$9F,$FB,$12,$A3,$26,$38,$33,$54,$8A,$E6,$D6,$5A
Data.b $BA,$93,$9F,$71,$BE,$8D,$FF,$00,$D7,$04,$C8,$B9,$3D,$0F,$02,$7F
Data.b $11,$4A,$A1,$D6,$F2,$B8,$B2,$19,$E3,$EB,$F3,$26,$A5,$E2,$3C,$63
Data.b $57,$40,$CC,$02,$62,$38,$B2,$37,$2B,$65,$0E,$BC,$67,$EC,$00,$23
Data.b $B9,$14,$03,$B5,$D6,$B5,$E0,$C2,$FC,$18,$67,$F3,$99,$4E,$68,$0D
Data.b $40,$F0,$38,$8E,$77,$C1,$8D,$39,$C6,$03,$2B,$C4,$3E,$40,$AF,$42
Data.b $19,$97,$26,$84,$F9,$8E,$70,$17,$9C,$AA,$10,$30,$2F,$A5,$2C,$17
Data.b $23,$B7,$15,$77,$23,$BD,$16,$66,$65,$BE,$31,$07,$E1,$0A,$4C,$60
Data.b $AC,$43,$81,$88,$39,$E0,$02,$10,$6B,$E1,$6C,$FB,$C2,$33,$07,$1F
Data.b $57,$40,$B2,$2A,$3D,$63,$0E,$FE,$24,$00,$D0,$A5,$67,$E1,$02,$8C
Data.b $D5,$CE,$C2,$CE,$1E,$F8,$01,$16,$AD,$A6,$C1,$DC,$67,$05,$22,$E6
Data.b $60,$DF,$86,$84,$B9,$04,$11,$BA,$5E,$28,$80,$5D,$81,$A0,$39,$40
Data.b $00,$F7,$83,$A5,$D8,$BE,$82,$65,$9F,$8F,$C3,$22,$1A,$62,$1D,$C0
Data.b $10,$98,$C6,$78,$DF,$DE,$BE,$C0,$86,$30,$2B,$A0,$67,$2F,$CD,$41
Data.b $35,$42,$C8,$71,$BB,$CF,$F0,$C4,$EF,$82,$8E,$36,$FF,$45,$ED,$90
Data.b $AB,$71,$5E,$08,$2A,$00,$D0,$E6,$BA,$DD,$AC,$90,$5E,$5B,$BA,$01
Data.b $CE,$72,$2F,$4E,$A2,$A2,$0A,$51,$73,$B0,$DD,$07,$E6,$42,$92,$C2
Data.b $96,$A8,$2E,$35,$63,$0E,$B6,$01,$56,$EF,$6F,$27,$3C,$C7,$B3,$E6
Data.b $80,$FA,$21,$F9,$44,$98,$85,$FB,$23,$BA,$10,$BA,$0B,$AE,$E2,$E6
Data.b $00,$29,$3D,$00,$51,$D5,$A9,$B6,$7A,$BC,$6F,$57,$00,$00,$00,$00
Data.b $49,$45,$4E,$44,$AE,$42,$60,$82

EndPtr:
EndDataSection"
iYmveUnD,numpy lab(18/03/2024),brandblox,Python,Sunday 17th of March 2024 11:10:01 PM CDT,"#Assignment: Write a Python Program to solve Linear Programming Problem using
#Simplex Method
import numpy as np

def simplex_method(A, b, c):
    m, n = A.shape
    # Create the initial tableau
    tableau = np.hstack([A, np.eye(m), b.reshape(-1, 1)])
    tableau = np.vstack([tableau, np.concatenate([c, np.zeros(m + 1)])])
    
    while True:
        # Find the pivot column
        pivot_col = np.argmin(tableau[-1, :-1])
        
        # If all elements in the last row are non-negative, optimal solution found
        if np.all(tableau[-1, :-1] >= 0):
            break
        
        # Find the pivot row
        ratios = tableau[:-1, -1] / tableau[:-1, pivot_col]
        pivot_row = np.argmin(ratios)
        
        # Perform pivot operation
        tableau[pivot_row, :] /= tableau[pivot_row, pivot_col]
        
        for i in range(m + 1):
            if i != pivot_row:
                tableau[i, :] -= tableau[i, pivot_col] * tableau[pivot_row, :]
    
    return tableau[-1, -1], tableau[-1, :-1]

A = np.array([[2, 1], [1, 2]])
b = np.array([4, 3])
c = np.array([-3, -5])

optimal_value, optimal_solution = simplex_method(A, b, c)

print(""Optimal value:"", optimal_value)
print(""Optimal solution:"", optimal_solution)

#Output
Optimal value: 8.333333333333334
Optimal solution: [0.         0.         0.33333333 2.33333333]
"
Bjir5UwS,Untitled,ma39isy,Oracle 8,Sunday 17th of March 2024 10:34:00 PM CDT,"SELECT
	DISTINCT
	S.*,
	SP.STUDYPROGRAMNAME,
	CELLPHONE,
	YAHOOMAIL,
	GMAIL,
	EMAIL,
	GPA,
	NILAID,
	NILAIE,
	CREDIT,
	CREDITNOTPASS,
	CREDITPASS,
	CASE
		WHEN CREDITPASS>0 THEN ROUND(MCREDITPASS / CREDITPASS, 2)
		ELSE 0
	END GPAPASS,
	CREDIT2
FROM
	(
	SELECT
		*
	FROM
		MASTERDATA.STUDENT S
	WHERE
		S.STUDYPROGRAMID IN (
		SELECT
			STUDYPROGRAMID
		FROM
			MASTERDATA.STUDYPROGRAM
		WHERE
			FACULTYID IN (
			SELECT
				FACULTYID
			FROM
				USEROFFACULTY
			WHERE
				USERID = '48379'))) S
LEFT JOIN MASTERDATA.STUDYPROGRAM SP ON
	(S.STUDYPROGRAMID = SP.STUDYPROGRAMID)
LEFT JOIN (
	SELECT
		STUDENTID,
		MAX (DECODE(INFOID, 22, VALUE)) CELLPHONE,
		MAX (DECODE(INFOID, 7, VALUE)) GMAIL,
		MAX (DECODE(INFOID, 8, VALUE)) YAHOOMAIL
	FROM
		MASTERDATA. ACCOUNT
	WHERE
		INFOID IN (7, 8, 22)
	GROUP BY
		STUDENTID) t1 ON
	(S.STUDENTID = t1.STUDENTID)
LEFT JOIN (
	SELECT
		USERNAME,
		EMAIL
	FROM
		FRAMEWORK1. USERS
	JOIN FRAMEWORK1.USERMAPPING
			USING (USERID)
	WHERE
		USERGROUPID = 12) t2 ON
	(S.STUDENTID = t2.USERNAME)
LEFT JOIN (
	SELECT
		studentid,
		PASS_CREDIT CREDIT,
		GPA,
		COUNT (DECODE(INDEXPOINT, 'D', 1)) NILAID,
		COUNT (DECODE(INDEXPOINT, 'E', 1)) NILAIE,
		SUM (DECODE(PASS_STATUS, 'Y', 0, CREDIT)) CREDITNOTPASS,
		SUM (DECODE(PASS_STATUS, 'Y', CREDIT, 0)) CREDITPASS,
		SUM (DECODE(PASS_STATUS, 'Y', CREDIT * INDEX_CONVERSION, 0)) MCREDITPASS
	FROM
		COMPLETECOURSEPOINT
	JOIN GPASTUDENT
			USING (STUDENTID)
	WHERE
		ACTIVESTATUS = 'Y'
		AND LATESTSTATUS = 'Y'
	GROUP BY
		(STUDENTID,
		PASS_CREDIT,
		GPA)) t3 ON
	(S.STUDENTID = t3.STUDENTID)
LEFT JOIN (
	SELECT
		STUDENTID,
		SUM(CREDIT) CREDIT2
	FROM
		VIEW_KSM
	WHERE
		1 = 1
		AND SCHOOLYEAR = '2324'
		AND SEMESTER = '2'
	GROUP BY
		STUDENTID) t4 ON
	(S.STUDENTID = t4.STUDENTID)
WHERE
	1 = 1
	AND S.STUDYPROGRAMID = '41'
	AND S.STUDENTTYPEID IN ('1', '8', '9', '10')
ORDER BY
	S.STUDENTID ASC"
Gy2u5fhy,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Sunday 17th of March 2024 10:25:40 PM CDT,"https://pastes.io - #1 Pastebin Alternative - its free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes.
Embed, download, print pastes
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature
Simple Ads by Google Adsense Few rather than Pastebin"
qXAFYciC,ccf csp202312-1,deezykiki,C++,Sunday 17th of March 2024 10:15:40 PM CDT,"#include<iostream>
using namespace std;
int main()
{
	int n,m;
	cin>>n>>m;
	int a[12][1010];
	for(int l = 0;l < n;l++)
	{
		for(int r = 0;r < m;r++)
		{
			cin>>a[l][r];
		}
	}
	
	for(int b = 0;b < n;b++)
	{	
		int flag = -1;
		for(int l = 0;l < n;l++)
		{	
			if(l != b)
			{
				for(int r = 0;r < m;r++)
				{
					if(a[l][r] <= a[b][r]) break;
					else if(a[l][r] > a[b][r]&&r == m-1)
					{
						if(flag == -1) flag = l;
						else if(l < flag) flag = l;
					}
				}
			}
		}
		if(flag != -1) cout<<flag+1<<endl;
		else cout<<0<<endl;
	}
	return 0;
}"
V5ziaNyu,logger,Zeehao,Lua,Sunday 17th of March 2024 09:32:31 PM CDT,"local loggers = {
    disabled = false,
    store = {}
}

local Logger = {}

function Logger:new(key)
    local obj = {
        name = key,
        disabled = false,
        print = print
    }
    self.__index = self
    return setmetatable(obj, self)
end

function Logger:setPrintFunction(func)
    self.print = func
end

function Logger:print(...) 
    if self.disabled or loggers.disabled then return end
    self:print(""["" .. self.name .. ""] "", ...)
end

function Logger:disable() 
    self.disabled = true
end

function loggers.getLogger(key, printFn)
    if loggers.store[key] then
        return loggers.store[key]
    end
    loggers.store[key] = Logger:new(key)
    if printFn then
        loggers.store[key]:setPrintFunction(printFn)
    end
    return loggers.store[key]
end

function loggers.disable(key) 
    if loggers.store[key] == nil then
        loggers.store[key] = Logger:new(key)
    end
    loggers.store[key]:disable()
end

function loggers.disableAll() 
    loggers.disabled = true
end

return loggers"
pbu8DBbH,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Sunday 17th of March 2024 08:57:42 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative - Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes
URL Shortener
Unlisted pastes
Private pastes.
Embed, download, print pastes
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes
Trending pastes page (day, week, month, year)
No Captcha for logged in users feature
Simple Ads by Google Adsense Few rather than Pastebin"
Qi4ZeAp8,pattern: mirrored diamond,Divyansh_Chourey,C,Sunday 17th of March 2024 08:57:38 PM CDT,"#include<stdio.h>
int main(){
	int col;
	printf(""Enter number of columns: "");
	scanf(""%d"", &col);
	for(int i = 1; i <= col; i++){
		for(int j = 1; j <= col-i; j++){printf("" "");}
		for(int j = 1; j <= i; j++){printf(""*"");}
		printf(""\n"");
	}
	for(int i = col-1; i>0; i--){
		for(int j = 1; j <= col-i; j++){printf("" "");}
		for(int j = 1; j <= i; j++){printf(""*"");}
		printf(""\n"");
	}
	return 0;
}"
ZVhQTNhp,App Updater,Ricky265,JSON,Sunday 17th of March 2024 08:48:15 PM CDT,"{
  ""Version"":""1.2""
}
"
kFxsMTFU,move.c,WizartCraftCode,C,Sunday 17th of March 2024 08:45:08 PM CDT,"//
// Created by merlin on 2/26/2024.
//
#include <malloc.h>
#include ""move.h""


void setup_move_stack(move_stack_t *stack)
{
    for(int i=0;i<MOVE_HISTORY_SIZE;i++)
    {
        stack->move_history[i] = NO_MOVE;
    }
    stack->stack_top = -1;
}

bool push(enum move_direction item, move_stack_t *stack) {
    if (!is_full(*stack)) {
        ++(stack->stack_top);
        stack->move_history[stack->stack_top] = item;
        return true;
    } else {
        return false;
    }
}

bool pop(move_stack_t *stack, enum move_direction *dir_popped) {
    if (!is_empty(*stack)) {
        *dir_popped = stack->move_history[stack->stack_top];
        --(stack->stack_top);
        return true;
    } else {
        return false;
    }
}

bool is_full(move_stack_t stack) {
    return (stack.stack_top >= stack.size - 1);
}

bool is_empty(move_stack_t stack) {
    return stack.stack_top < 0;
}

int height(move_stack_t stack)
{
    return stack.stack_top+1;
}

#define CHANGE_FOR_X 0
#define CHANGE_FOR_Y 1
int change_in_position[][2] =
        {{0,  0},
         {0,  1},
         {1,  0},
         {0,  -1},
         {-1, 0}};

void move(player_t *player, enum move_direction direction)
{
    player->x_position += change_in_position[direction][CHANGE_FOR_X];
    player->y_position += change_in_position[direction][CHANGE_FOR_Y];
    push(direction, &(player->move_stack));
}

void undo(player_t *player)
{
    enum move_direction move_to_undo;
    pop(&(player->move_stack), &move_to_undo);
    player->x_position -= change_in_position[move_to_undo][CHANGE_FOR_X];
    player->y_position -= change_in_position[move_to_undo][CHANGE_FOR_Y];
}
"
