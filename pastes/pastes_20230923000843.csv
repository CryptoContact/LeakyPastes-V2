id,title,username,language,date,content
53pHB0N1,AdditionalLab1,EWTD,Python,Friday 22nd of September 2023 05:58:26 PM CDT,"import math
import numpy as np

class NewtonLinearEquationSolver:
    EPS = 0.01
    MAX_ITER = 1000

    def __init__(self, linear_equations, jacobian):
        self.linear_equations = linear_equations
        self.jacobian = jacobian

    def solve(self, subtle_point):
        solution = subtle_point
        for i in range(NewtonLinearEquationSolver.MAX_ITER):
            linear_equation_at_point = [-f(*solution) for f in self.linear_equations]
            jacobian_at_point = [[f(*solution) for f in self.jacobian[idx]] for idx in range(len(self.jacobian))]
            new_solution = np.linalg.solve(np.matrix(jacobian_at_point), np.matrix(linear_equation_at_point).transpose())
            new_solution = [new_solution[idx].min() + solution[idx] for idx in range(len(new_solution))]
            if max([abs(new_solution[idx] - solution[idx]) for idx in range(len(new_solution))]) < NewtonLinearEquationSolver.EPS:
                print(f""Iterations: {i}"")
                return new_solution
            solution = new_solution
        print(f""Iterations: {NewtonLinearEquationSolver.MAX_ITER}"")
        return solution


linear_equation = [lambda x, y: math.sin(x) + 2 * y - 2, lambda x, y: math.cos(y - 1) + x - 0.7]
jacobian = [[lambda x, y: math.cos(x), lambda x, y: 2], [lambda x, y: 1, lambda x, y: -math.sin(y - 1)]]
subtle_point = [0, 0]

print(NewtonLinearEquationSolver(linear_equation, jacobian).solve(subtle_point))"
ZEyWUEtm,"What User-Agent is Safari on Google Pixel 7, Samsung Galaxy S23, iPhone 14 Pro Max,",A_GUES,GetText,Friday 22nd of September 2023 05:19:17 PM CDT,"
 Pixel 7:
Mozilla/5.0 (Linux; Android 13; Pixel 7) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/94.0.4606.85 Mobile Safari/537.36


  Samsung Galaxy S23:
Mozilla/5.0 (Linux; Android 13; SM-G998U) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/94.0.4606.85 Mobile Safari/537.36


  iPhone 14 Pro Max:
Mozilla/5.0 (iPhone; CPU iPhone OS 17_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/99.0.4844.47 Mobile/15E148 Safari/604.1"
KgFXfE6i,Untitled,CtacKovalsky,Python,Friday 22nd of September 2023 05:11:38 PM CDT,"class Department(Base):
    __tablename__ = ""tblDepartment""

    id: Mapped[int] = mapped_column(
        Integer, primary_key=True, autoincrement=True, index=True
    )
    name: Mapped[str] = mapped_column(String)
    sort_order: Mapped[int] = mapped_column(Integer)
    staff_schedule: Mapped[List[""StaffSchedule""]] = relationship()

class Division(Base):
    __tablename__ = ""tblDivision""

    id: Mapped[int] = mapped_column(
        Integer, primary_key=True, autoincrement=True, index=True
    )
    name: Mapped[str] = mapped_column(String)
    sort_order: Mapped[int] = mapped_column(Integer)
    staff_schedule: Mapped[List[""StaffSchedule""]] = relationship()

class Position(Base):
    __tablename__ = ""tblPosition""

    id: Mapped[int] = mapped_column(
        Integer, primary_key=True, autoincrement=True, index=True
    )
    name: Mapped[str] = mapped_column(String)
    count_position: Mapped[int] = mapped_column(Integer)
    sort_order: Mapped[int] = mapped_column(Integer)
    is_archive: Mapped[bool] = mapped_column(Boolean, default=False)
    staff_schedule: Mapped[List[""StaffSchedule""]] = relationship()


class StaffSchedule(Base):
    __tablename__ = ""tblStaffSchedule""

    id: Mapped[int] = mapped_column(
        Integer, primary_key=True, autoincrement=True, index=True
    )
    is_vacancy: Mapped[bool] = mapped_column(Boolean, default=False)
    is_archival: Mapped[bool] = mapped_column(Boolean, default=False)
    comment: Mapped[str] = mapped_column(String)
    department_id: Mapped[int] = mapped_column(ForeignKey(""tblDepartment.id""))
    division_id: Mapped[int] = mapped_column(ForeignKey(""tblDivision.id""))
    position_id: Mapped[int] = mapped_column(ForeignKey(""tblPosition.id""))


raw sql

SELECT tblStaffSchedule.id, tblDepartment.id, tblDepartment.name as Отдел, tblDivision.id, tblDivision.name as Отделение, tblPosition.id, tblPosition.name as Должность
from tblStaffSchedule, tblDepartment, tblDivision, tblPosition 
WHERE tblDepartment.id=tblStaffSchedule.department_id and tblDivision.id=tblStaffSchedule.division_id and tblPosition.id=tblStaffSchedule.position_id
ORDER by tblDepartment.id, tblDivision.id ASC

хотелось бы такой результат:

id. id. Отдел           id.   Отделение. id.  Должность
---------------------------------------------------------------------------
1	5	первый отдел	1	1 отделение	14	Главный
3	5	первый отдел	2	2 отделение	16	Заместитель начальника отдела
2	11	второй отдел	2	2 отделение	15	Начальник отдела
5	11	второй отдел	2	2 отделение	17	Начальник отделения
4	11	второй отдел	3	3 отделение	18	Заместитель начальника отделения"
RDPG9fpp,World Snooker Championship,Spocoman,C++,Friday 22nd of September 2023 05:01:21 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string stageOfTheChampionship, typesOfTickets;
    getline(cin, stageOfTheChampionship);
    cin >> typesOfTickets;

    int ticketCount;
    cin >> ticketCount;

    string selfieWithTheTrophy;
    cin >> selfieWithTheTrophy;

    double ticketPrice = 0;

    if (stageOfTheChampionship == ""Quarter final"") {
        if (typesOfTickets == ""Standard"") {
            ticketPrice = 55.50;
        }
        else if (typesOfTickets == ""Premium"") {
            ticketPrice = 105.20;
        }
        else if (typesOfTickets == ""VIP"") {
            ticketPrice = 118.90;
        }
    }
    else if (stageOfTheChampionship == ""Semi final"") {
        if (typesOfTickets == ""Standard"") {
            ticketPrice = 75.88;
        }
        else if (typesOfTickets == ""Premium"") {
            ticketPrice = 125.22;
        }
        else if (typesOfTickets == ""VIP"") {
            ticketPrice = 300.40;
        }
    }
    else if (stageOfTheChampionship == ""Final"") {
        if (typesOfTickets == ""Standard"") {
            ticketPrice = 110.10;
        }
        else if (typesOfTickets == ""Premium"") {
            ticketPrice = 160.66;
        }
        else if (typesOfTickets == ""VIP"") {
            ticketPrice = 400.00;
        }
    }

    double totalPrice = ticketPrice * ticketCount;

    if (totalPrice > 4000) {
        totalPrice *= 0.75;
        selfieWithTheTrophy = ""N"";
    }
    else if (totalPrice > 2500) {
        totalPrice *= 0.90;
    }

    if (selfieWithTheTrophy == ""Y"") {
        totalPrice += ticketCount * 40;
    }

    printf(""%.2f\n"", totalPrice);

    return 0;
}

Решение с тернарен оператор:

#include <iostream>
#include <string>

using namespace std;

int main() {
    string stageOfTheChampionship, typesOfTickets;
    getline(cin, stageOfTheChampionship);
    cin >> typesOfTickets;

    int ticketCount;
    cin >> ticketCount;

    string selfieWithTheTrophy;
    cin >> selfieWithTheTrophy;

    double totalPrice =
        (stageOfTheChampionship == ""Quarter final"" ? (typesOfTickets == ""Standard"" ? 55.50 : typesOfTickets == ""Premium"" ? 105.20 : 118.90) :
            stageOfTheChampionship == ""Semi final"" ? (typesOfTickets == ""Standard"" ? 75.88 : typesOfTickets == ""Premium"" ? 125.22 : 300.40) :
            (typesOfTickets == ""Standard"" ? 110.10 : typesOfTickets == ""Premium"" ? 160.66 : 400.00)) * ticketCount;


    selfieWithTheTrophy = totalPrice > 4000 ? ""No"" : selfieWithTheTrophy;

    totalPrice *= totalPrice > 4000 ? 0.75 : totalPrice > 2500 ? 0.90 : 1;

    if (selfieWithTheTrophy == ""Y"") {
        totalPrice += ticketCount * 40;
    }

    printf(""%.2f\n"", totalPrice);

    return 0;
}"
GKxjcPyv,Untitled,Skos_Martren,C++,Friday 22nd of September 2023 04:43:37 PM CDT,"class Solution {
public:
    int numJewelsInStones(string jewels, string stones) {
        
        vector<bool> JewelToCount('Z' - 'a' + 1, false);
        for(const char jewel : jewels){ // All the characters of jewels are unique.
            JewelToCount['Z' - jewel] = true;
        }
        
        int CountStones = 0;

        for(const char stone : stones){
            CountStones += JewelToCount['Z' - stone];
        }
        
        return CountStones;

    }
};"
JCQmvRVT,AdditionalLab2,EWTD,Python,Friday 22nd of September 2023 04:43:07 PM CDT,"import math
import numpy as np

def phi(x):
    return math.exp(x)

def f(x):
    return ((x+2)*math.exp(x) + math.exp(2*x+4) - 1)/(x+2)

def K(x, y):
    return math.exp(x*y)

start = 0
end = 2
n = 10
h = (end - start)/n
xi = [start + h*(i + 1/2) for i in range(n)]
buffer = []
real_sol = np.matrix([[np.float64(phi(xi[i])) for i in range(n)]]).transpose()
_ = real_sol
coeffs = np.matrix([[np.float64(f(xi[i-1])) for i in range(1, n+1)]]).transpose()
for i in range(1, n+1):
    app = []
    for j in range(1, n+1):
        if i == j:
            app.append(np.float64(1 - h*K(xi[i-1], xi[j-1])))
        else:
            app.append(np.float64(-h*K(xi[i-1], xi[j-1])))
    buffer.append(app)
System = np.matrix(buffer)
solution = np.linalg.solve(System, coeffs)
print(""------------PHI(X)--------"")
print(real_sol)
print(""------------~PHI(X)--------"")
print(solution)
print(""--------------------"")
print(max([math.fabs(solution[i][0] - real_sol[i][0]) for i in range(n)]))"
XttSN06P,Workout,Spocoman,C++,Friday 22nd of September 2023 04:39:28 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int days;
    cin >> days;

    double kilometers, percentage;
    cin >> kilometers;
    double totalKilometers = kilometers;
    for (int i = 0; i < days; i++) {
        cin >> percentage;
        kilometers *= (100.0 + percentage) / 100;
        totalKilometers += kilometers;
    }

    if (totalKilometers < 1000) {
        cout << ""Sorry Mrs.Ivanova, you need to run "" << 1000 - floor(totalKilometers) << "" more kilometers\n"";
    }
    else{
        cout << ""You've done a great job running "" << ceil(totalKilometers) - 1000 << "" more kilometers!\n"";
    }
    return 0;
}"
mNYuVTDu,Voleyball,Spocoman,C++,Friday 22nd of September 2023 04:21:19 PM CDT,"#include <iostream>

using namespace std;

int main() {
    string year;
    cin >> year;

    double p, h;
    cin >> p >> h;

    double game = ((48 - h) * 3 / 4) + h + p * 2 / 3;

    if (year == ""leap"") {
        game *= 1.15;
    }

    cout << (int)game << endl;

    return 0;
}"
r7fqnjg5,Vet Parking,Spocoman,C++,Friday 22nd of September 2023 04:14:51 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    int days, hours;
    cin >> days >> hours;

    double total = 0;

    for (int day = 1; day <= days; day++) {
        double sum = 0;
        for (int hour = 1; hour <= hours; hour++) {
            if (day % 2 == 1) {
                if (hour % 2 == 1) {
                    sum += 1.00;
                }
                else {
                    sum += 1.25;
                }
            }
            else{
                if (hour % 2 == 1) {
                    sum += 2.50;
                }
                else {
                    sum += 1.00;
                }
            }
        }
        printf(""Day: %i - %.2f leva\n"", day, sum);
        total += sum;
    }
    printf(""Total: %.2f leva\n"", total);

    return 0;
}"
isxt2qtp,mechaMaker.lua,ozozx235,Lua,Friday 22nd of September 2023 04:09:02 PM CDT,"hand = peripheral.wrap(""front"")
depot = peripheral.wrap(""create:depot_0"")
function sort()
	order = {""thermal:gold_plate"",""create:cogwheel"",""create:large_cogwheel"",""minecraft:iron_nugget""}
	for i=1,16 do
		flag = true
		while flag do
			flag = false
			if turtle.getItemDetail(i) then
				-- print(i.."": ""..turtle.getItemDetail(i).name.."" ""..turtle.getItemDetail(i).count)
				-- print(findIdx(order,turtle.getItemDetail(i).name))
				-- print((findIdx(order,turtle.getItemDetail(i).name)))
				-- print(not (findIdx(order,turtle.getItemDetail(i).name) == i))
				if findIdx(order,turtle.getItemDetail(i).name) and (not (findIdx(order,turtle.getItemDetail(i).name) == i)) then
					dest = findIdx(order,turtle.getItemDetail(i).name)
					-- print(i .. "" > "" .. dest)
					-- print(not (turtle.getItemDetail(dest).name == turtle.getItemDetail(i).name))
					-- read()
					turtle.select(i)
					_, check = turtle.transferTo(dest)
					if check == ""No space for items"" and not (turtle.getItemDetail(dest).name == turtle.getItemDetail(i).name) then
						space = findEmpty()
						turtle.transferTo(space)
						turtle.select(dest)
						turtle.transferTo(i)
						turtle.select(space)
						turtle.transferTo(dest)
					end
					flag= turtle.getItemDetail(i) and (not turtle.getItemDetail(dest).name == turtle.getItemDetail(i).name)
					-- sleep(1)
				end
			-- else
				-- print(i.."": empty"")
			end
		end
		-- read()
	end
end
function findIdx( arr, val )
	index={}
	for i=1,#arr do
		if arr[i] == val then
			index[#index+1] = i
		end
	end
	if #index == 1 then
		return index[1]
	elseif #index == 0 then
		return nil
	else
		return index
	end
end
function findEmpty()
	for i=1,16 do
		if not turtle.getItemDetail(i) then
			return i
		end
	end
	return nil
end
function craft()
	sort()
	count = {1,5,5,5}
	for i=1,4 do
		if turtle.getItemCount(i) < count[i] then
			return ""over""
		end
	end
	turtle.select(1)
	turtle.dropDown(1)
	-- sleep(0.6)
	-- print(depot.getItemDetail(1).displayName)
	-- print(depot.getItemDetail(1).durability)
	for j=1,5 do
		for i=2,4 do
			turtle.select(i)
			turtle.drop(1)
			while hand.list()[1] do
				sleep(0.5)
			end
			-- if i<4 or j<5 then
			-- 	print(depot.getItemDetail(1).displayName)
			-- 	print(depot.getItemDetail(1).durability)
			-- end
			-- read()
		end
	end
	craft()
end
craft()"
k9NHkyTX,Travel Agency,Spocoman,C++,Friday 22nd of September 2023 04:05:02 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string town, pack, vip;
    cin >> town >> pack >> vip;

    int days;
    cin >> days;

    if (days > 7) {
        days--;
    }

    double dayPrice = 0;

    if (town == ""Bansko"" || town == ""Borovets"") {
        if (pack == ""withEquipment"") {
            dayPrice = 100;
            if (vip == ""yes"") {
                dayPrice *= 0.90;
            }
        }
        else if (pack == ""noEquipment"") {
            dayPrice = 80;
            if (vip == ""yes"") {
                dayPrice *= 0.95;
            }
        }
    }
    else if (town == ""Varna"" || town == ""Burgas"") {
        if (pack == ""withBreakfast"") {
            dayPrice = 130;
            if (vip == ""yes"") {
                dayPrice *= 0.88;
            }
        }
        else if (pack == ""noBreakfast"") {
            dayPrice = 100;
            if (vip == ""yes"") {
                dayPrice *= 0.93;
            }
        }
    }

    if (days < 1) {
        cout << ""Days must be positive number!\n"";
    }
    else if (dayPrice > 0) {
        printf(""The price is %.2flv! Have a nice time!"", dayPrice * days);
    }
    else  {
        cout << ""Invalid input!\n"";
    }

    return 0;
}

Решение с тернарен оператор:

#include <iostream>
#include <string>

using namespace std;

int main() {
    string town, pack, vip;
    cin >> town >> pack >> vip;

    int days;
    cin >> days;

    if (days > 7) {
        days--;
    }

    double dayPrice =
        town == ""Bansko"" || town == ""Borovets"" ?
        (pack == ""withEquipment"" ? 100 * (vip == ""yes"" ? 0.90 : 1) : pack == ""noEquipment"" ? 80 * (vip == ""yes"" ? 0.95 : 1) : 0) :
        town == ""Varna"" || town == ""Burgas"" ?
        (pack == ""withBreakfast"" ? 130 * (vip == ""yes"" ? 0.88 : 1) : pack == ""noBreakfast"" ? 100 * (vip == ""yes"" ? 0.93 : 1) : 0) : 0;

    days < 1 ? printf(""Days must be positive number!\n"") :
        dayPrice > 0 ? printf(""The price is %.2flv! Have a nice time!"", dayPrice * days) :
        printf(""Invalid input!\n"");

    return 0;
}"
aE3ekHgK,Fib Solver,c-mcbride,JavaScript,Friday 22nd of September 2023 03:57:10 PM CDT,"function fibonacci(number){
    let fibArray = [];
    let iterator = 2;
    if(number < 1){
        return fibArray;
    }
    else if(number === 1){
        fibArray [0] = 1;
        return fibArray;
    }
    else{
        fibArray = [1,1]
        for(let i = 2; i < number; i++){
            temp = fibArray[i - 2] + fibArray[i - 1];
            fibArray[iterator++] = temp;
        }
        return fibArray;
    }
}

console.log(fibonacci(0)); // []
console.log(fibonacci(1)); // [1]
console.log(fibonacci(6)); // [1, 1, 2, 3, 5, 8]
console.log(fibonacci(8)); // [1, 1, 2, 3, 5, 8, 13, 21]"
rRrfZiTQ,nginx rp add books?,iconoclasthero,Bash,Friday 22nd of September 2023 03:42:58 PM CDT,"server {
        listen 80;
#        listen [::]:80;
        server_name abs.mydomain.com;
#        server_name books.mydomain.com;
        return 301 https://$host$request_uri;
}
server {
        listen 443 ssl;
        listen [::]:443 ssl;
        ssl_certificate /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;

        error_log /var/log/nginx/abs-error.log;
        access_log /var/log/nginx/abs-access.log;

        server_name abs.mydomain.com;
        client_max_body_size 10000M;

        location / {
                proxy_pass http://127.0.0.1:13378;
                proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
                proxy_set_header  X-Forwarded-Proto $scheme;
                proxy_set_header  Host              $host;
                proxy_set_header Upgrade            $http_upgrade;
                proxy_set_header Connection         ""upgrade"";
                proxy_http_version                  1.1;
                proxy_redirect                      http:// https://;
        }
}
"
eJnpb3wM,Untitled,007tropix,Python,Friday 22nd of September 2023 03:35:06 PM CDT,"import math


# generates all possible binary keys of a given bit size (reused from ciphertext_only_attack.py)
def generate_binary_keys(size):
    def backtrack(bits):
        if len(bits) == size:
            binary_keys.append(bits)
        else:
            backtrack(bits + ""0"")
            backtrack(bits + ""1"")

    binary_keys = []
    backtrack("""")
    return binary_keys


# encrypt message with key using selected operation
def encrypt(key, message, operation):
    if operation == ""AND"":
        cipher = """"
        for i in range(len(message)):
            if message[i] == ""1"" and key[i] == ""1"":
                cipher += ""1""
            else:
                cipher += ""0""
        return cipher
    elif operation == ""NAND"":
        cipher = """"
        for i in range(len(message)):
            if message[i] == ""0"" and key[i] == ""0"":
                cipher += ""0""
            else:
                cipher += ""1""
        return cipher
    elif operation == ""OR"":
        cipher = """"
        for i in range(len(message)):
            if message[i] == ""1"" or key[i] == ""1"":
                cipher += ""1""
            else:
                cipher += ""0""
        return cipher
    elif operation == ""NOR"":
        cipher = """"
        for i in range(len(message)):
            if message[i] == ""0"" and key[i] == ""0"":
                cipher += ""1""
            else:
                cipher += ""0""
        return cipher
    elif operation == ""XOR"":
        cipher = """"
        for i in range(len(message)):
            if (
                message[i] == ""1""
                and key[i] == ""1""
                or message[i] == ""0""
                and key[i] == ""0""
            ):
                cipher += ""0""
            else:
                cipher += ""1""
        return cipher
    else:
        cipher = """"
        for i in range(len(message)):
            if (
                message[i] == ""1""
                and key[i] == ""1""
                or message[i] == ""0""
                and key[i] == ""0""
            ):
                cipher += ""1""
            else:
                cipher += ""0""
        return cipher


# generate all outputs for a given message and operation
def generate_all_outputs(message, operation):
    all_outputs = []
    for key in generate_binary_keys(len(message)):
        all_outputs.append(encrypt(key, message, operation))
    return all_outputs


# calculate number of occurences for each result in a list
def calculate_distribution(output_results):
    keys = set(output_results)
    key_with_count = []
    key_count_list = []
    for key in keys:
        key_with_count = [key, output_results.count(key)]
        key_count_list.append(key_with_count)
    return key_count_list


# check if a list of ciphertexts is uniform
def is_uniform(ciphertexts):
    if len(ciphertexts) == len(set(ciphertexts)):
        return True
    else:
        return False


# calculate distribution spread for all possible message inputs
def calculate_all_probabilities(operation):
    probabilities = []
    for message in generate_binary_keys(5):
        possible_ciphertexts = generate_all_outputs(message, operation)
        probabilities.append(
            str(calculate_distribution(possible_ciphertexts)[0][1]) + ""/32""
        )
    return probabilities


# calculate distribution spread for a single message with a given operation
def calculate_single_probabilities(message, operation):
    possible_ciphertexts = generate_all_outputs(message, operation)
    probabilities = []
    for i in range(len(possible_ciphertexts)):
        current = str(calculate_distribution(possible_ciphertexts)[0][1]) + ""/32""
        probabilities.append(current)
    return probabilities


# run distribution check on a message with a given operation
def print_operation_info(message, operation):
    print(""\nCurrent operation: "" + operation)
    possible_ciphertexts = generate_all_outputs(message, operation)
    print(""# of different input keys: "" + str(len(possible_ciphertexts)))
    print(""# of different output results: "" + str(len(set(possible_ciphertexts))))
    print(""Uniform: "" + str(is_uniform(possible_ciphertexts)))
    print(calculate_distribution(possible_ciphertexts))


# display all tests for input 5-bit message
def test_all_operations(message):
    print_operation_info(message, ""AND"")
    print_operation_info(message, ""NAND"")
    print_operation_info(message, ""OR"")
    print_operation_info(message, ""NOR"")
    print_operation_info(message, ""XOR"")
    print_operation_info(message, ""XNOR"")


# Calculate I for a given list of probabilities (fractions)
def calculate_I(probabilities):
    # convert fractions to decimal probabilities
    decimal_probs = []
    for probability in probabilities:
        numerator, denominator = probability.split(""/"")
        answer = int(numerator) / int(denominator)
        decimal_probs.append(answer)

    # print(decimal_probs)

    # calculate I
    I = 0
    for probability in decimal_probs:
        I += probability * math.log2(1 / probability)
    return I


# Calculate the information entropy of encryption for a given operation over all messages
def calculate_operation_avg_I(operation):
    inputs = generate_binary_keys(5)
    sum = 0
    for input in inputs:
        I = calculate_I(calculate_single_probabilities(input, operation))
        sum = sum + I
    average = sum / 32
    return average


# test_all_operations(""00000"")
# print(calculate_probabilities(""AND""))
# probs = calculate_all_probabilities(""AND"")
# calculate_I(calculate_single_probabilities(""10101"", ""AND""))
print(calculate_operation_avg_I(""AND""))
"
YkzPeWgb,server,montur,JavaScript,Friday 22nd of September 2023 03:17:26 PM CDT,"const WebSocket = require('ws');
const PORT = 8765;
const wss = new WebSocket.Server({ port: PORT });
const clients = new Set();
const data = new Object();

function sendToAllTurtles(message) {
  for (const client of clients) {
    if(client.device === 'turtle'){
      client.ws.send(message);
    }
  }
}

wss.on('listening', () => {
  console.log(`WebSocket server is listening on port ${PORT}`);
});

wss.on('connection', function connection(ws, req) {
  ws.on('error', console.error);
  console.log('Client connected'); // Listen for messages from clients
  const loggedIn = false

  const device = req.headers['device'];
  const client = { ws, device };
  clients.add(client);

  ws.on('message', message => {
    state = JSON.parse(message);
    console.log(state.name);
    if(!loggedIn){
      client.ws.send(message);
    }

    if(device === 'turtle'){
      //enter turtle mode
      console.log(""client is a turtle"");
    } else {
      //enter control mode
      console.log(""client is a controller"");
    }

  });
  // Listen for the connection to close
  ws.on('close', () => {
    console.log('Client disconnected');
    clients.delete(client);
  });
});"
yyn5cTjx,List of Items JS Advanced,TZinovieva,JavaScript,Friday 22nd of September 2023 03:05:30 PM CDT,"function addItem() {
    let newLi = document.createElement('li');
    let inputText = document.getElementById('newItemText').value;
    newLi.textContent = inputText;
    let items = document.getElementById('items')
    items.appendChild(newLi);
    
    document.getElementById('newItemText').value = '';
}"
fU5Kp3Ku,Untitled,Almishev,HTML,Friday 22nd of September 2023 02:35:15 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
</head>
<style>

    :root{
       --def-padding: 10px 25px;
       --main-color:skyblue;
    }
    *{
        box-sizing: border-box;
    }
    body,html,h1,h2,p,ul, li{
        margin: 0;
    }
    .logo{
        width: 20%;
    }
    .menu{
        width: 80%;
        text-align: right;
        
        
    }
    .menu ul li {
        display: inline-block;
        margin-left: 35px;
       
        
    }

    .menu ul li a{
        text-decoration: none;
        font-size: 26px;
        color: white;
    }
    img{
        width: 100%;
        height: 100px;
    }
    .header{
        background: linear-gradient(to right,#e66465, #9198e5);
        display: flex;
        padding: var(--def-padding);
        align-items: center;
       
    }
    .intro{
        background: linear-gradient(to right,#e66465, #9198e5);
        display: flex;
        padding: 50px;
        color: aliceblue;
        justify-content: center;
        align-items: center;
    }
    .i-left, .i-right{
          width: 50%;
    }
    .i-right{
        display: flex;
       flex-direction: column;
       margin-left: 50px;
       
       justify-content: center;
        
    }
    .i-right h1, .i-right p{
        margin-bottom: 18px;
    }
    .i-left img{
        width: 400px;
        height: 200px;
        margin-left: 100px;
    }
    .main-btn{
        width: 140px;
        border: unset;
        border-radius: 20px;
        padding: 5 25px;
    }
    .main-btn:hover{
        cursor: pointer;
        opacity: 0.7;
    }
    .about{
       
        display: flex;
        padding: var(--def-padding);
       
        
    }
    .a-left h2, .a-left p{
        margin-bottom: 20px;
    }
    
  
    .a-right{
        margin-top: 20px;
    }
    .a-right img{
        width: 800px;
        height: 600px;
    
    }
    .service{
        display: flex;
        flex-wrap: wrap;
        justify-content: space-evenly;
    }
    .s-title{
        width: 100%;
        text-align: center;
        margin: 20px;
    }
    
    .s-box{
        width: 30%;
        border: 2px solid silver;
        padding: 15px;
        text-align: center;
    }
    .s-box i{
        border: 1px solid silver;
        padding: 25px; 
        font-size: 35px;
        border-radius: 50%;
        color:var(--main-color);
    }
    .footer{
        margin-top: 20px;
        text-align: center;
    }
    .social a{
        color: var(--main-color);
        text-decoration: none;
        margin-right: 30px;
        font-size: 36px;
    }
    .copy-right{
        margin-bottom: 20px;
    }
    .hide-desctop{
            
            display: none;
        
    }
    @media (min-width: 1024px){
        .hide-desctop{
            
            display: none;
        
    }
    }

    @media (max-width: 1024px){
        .logo{
            width: 50%;
        }
        .hide-desctop{
            
            display: block;
        
    }
        .hamburger{
            width: 50%;
            text-align: right;
            color: aliceblue;
            font-size: 36px;
        }
        .menu{
            margin-top: 10px;
            width: 100%;
            text-align: center;
        }
        .menu ul li{
            display: block;
            margin-bottom: 10px;
            margin-left: 0;
        }
        .header{
            flex-wrap: wrap;
            padding: 10px;
        }
        .hide-mobile{
            display: none;
        }
        .i-right{
            width: 100%;
        }
        .intro{
            padding: var(--def-padding)
        }
        .s-box{
            width: 100%;
            margin-bottom: 10px;
        }
        .service{
            padding: var(--def-padding);
        }
        
    }
</style>
<body>
    
    <div class=""header"">
         <div class=""logo hide-mobile"">
            <img src=""images/Logo_UNSS_tampon.png"" alt="""">
         </div>
         <div class=""hamburger hide-desctop"">
            <i class=""fa fa-bars""></i>
         </div>
         <div class=""menu"">
            <ul>
                <li>
                    <a href=""#"">Home</a>
                </li>
                <li>
                    <a href=""#"">About us</a>
                </li>
                <li>
                    <a href=""#"">Contacts</a>
                </li>
            </ul>
         </div>
    </div>
    <div class=""intro"">
        <div class=""i-left"">
            <img src=""images/c1.jpg"">
        </div>
        <div class=""i-right"">
            <h1>Design studio</h1>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.
             Minus, delectus.</p>
             <button class=""main-btn"">Learn more</button>
        </div>

    </div>
    <div class=""about"">
    <div class=""a-left"">
        <h2>About</h2>
        <p>Lorem ipsum dolor sit amet, consectetur
             adipisicing elit.
             Numquam quia quidem dignissimos voluptatem 
             esse veniam, 
             explicabo, quam magni dolor veritatis
              repellendus porro eum. Perspiciatis
             exercitationem at quisquam quos quam?
             Lorem ipsum dolor sit, amet consectetur adipisicing
              elit. Nobis, hic, provident reprehenderit adipisci 
              temporibus molestias aperiam repudiandae nostrum 
              veritatis culpa quod eius autem voluptas labore,
              pariatur ratione saepe facilis mollitia!
            </p>
             <button>Learn more</button>
    </div>
    <div class=""a-right hide-mobile"">
          <img src=""images/c1.jpg"" alt="""">
    </div>
    </div>
    <div class=""service"">
        <div class=""s-title""> <h2>Service</h2> </div>
        <div class=""s-box"">
             <i class=""fa fa-adjust""></i>
             <h3>Website</h3>
             <p>Lorem ipsum dolor sit amet.Lorem10 Lorem ipsum dolor sit, 
                amet consectetur adipisicing elit. Saepe, necessitatibus!</p>
            </div>
        <div class=""s-box"">
            <i class=""fa fa-adjust""></i>
             <h3>Website</h3>
             <p>Lorem ipsum dolor sit amet.Lorem10 Lorem ipsum dolor sit, 
                amet consectetur adipisicing elit. Saepe, necessitatibus!</p>
        </div>
        <div class=""s-box"">
            <i class=""fa fa-adjust""></i>
             <h3>Website</h3>
             <p>Lorem ipsum dolor sit amet.Lorem10 Lorem ipsum dolor sit, 
                amet consectetur adipisicing elit. Saepe, necessitatibus!</p>
        </div>
    </div>
    <div class=""footer"">
        <div class=""copy-right"">
            Copyright &copy Anton Almishev
        </div>
        <div class=""social"">
           <a href=""#""> <i class=""fa fa-facebook-f""></i></a>
           <a href=""#""><i class=""fa fa-facebook-f""></i></a> 
           <a href=""#"">  <i class=""fa fa-facebook-f""></i></a> 
           <a href=""#"">  <i class=""fa fa-facebook-f""></i></a> 
        </div>
    </div>
</body>
</html>"
20yrVTws,Untitled,Rofyda_Elghadban1,C++,Friday 22nd of September 2023 02:30:48 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
  int t;
  cin>>t;
  while(t--){
    string s;
    cin>>s;
    if(s==""abc""||s==""acb""||s==""bac""||s==""cba""){
      cout<<""YES""<<""\n"";
    }else{
      cout<<""NO""<<""\n"";
    }
  }
 }

 int main(){
  Rofyda_Elghadban();
  solve();

  return 0;
 }
"
x5tSvShJ,Пособие/«Уничтожение массива»,Bobert0032,C++,Friday 22nd of September 2023 02:23:40 PM CDT,"#include <iostream>
#include <vector>

using namespace std;

long long MAX_SUM = 0; // MAX_SUM - это максимальная сумма среди блоков незачёркнутых элементов

vector<int> p, sz; // Создаём вектора p(массив ссылок), sz(массив размеров множеств)
vector<long long> sm; // sm[i] = x означает, что сумма всех элементов, принадлежащих i-ому блоку равняется x

int get_p(int v) { // get_p(v) возвращает номер блока, к которому принадлежит v-ый элемент
    if (p[v] == v) { // Если элемент ссылается на самого себя, то это корень, следовательно это искомый ответ
        return v; // возвращаем искомый ответ
    }
    // Одновременно находим корень блока (он в виде дерева), к которому принадлежит предок v и напрямую подвешиваем к этому корню v
    return p[v] = get_p(p[v]);
}

void unite(int a, int b) { // функция, объединяющая 2 блока
    a = get_p(a); // находим корень блока, к которому принадлежит a-ый элемент
    b = get_p(b); // находим корень блока, к которому принадлежит b-ый элемент
    if (sz[a] > sz[b]) { // Если размер блока, в котором корень a, больше размера блока, в котором корень b, то меняем значения в a и b
        swap(a, b);
    }
    sz[b] += sz[a]; // Увеличиваем размер блока с корнем b на размер блока с корнем a
    sm[b] += sm[a]; // Увеличиваем сумму элементов в блоке с корнем и на сумму элементов блока с корнем b
    p[a] = b; // Подвешиваем корень a-го блока к корню b-го блока
    MAX_SUM = max(MAX_SUM, sm[b]); // Обновляем максимум среди сумм всех блоков
}

void solve() {
    int n;
    cin >> n; // Считываем кол-во элементов
    vector<int> a(n); // Массив элементов
    vector<int> vq(n); // vq[i] = j, если на i-ом шагу мы зачеркнём j-ое число
    vector<bool> crossed(n, true); // crossed[i] = true, если i-ое число зачёркнуто
                                    // crossed[i] = false, если i-ое число не зачёркнуто
    sz.resize(n, 1); // Изначально размер каждого блока равен 1, так как все блоки состоят из 1-ой числа
    sm.resize(n);
    p.resize(n);
    // изначально каждый блок состоит из 1-го элемента, который является корнем, поэтому ссылается на самого себя
    for (int i = 0; i < n; ++i) {
        p[i] = i;
    }
    for (int i = 0; i < n; ++i) {
        cin >> a[i]; // Считываем i-ый элемент массива a
        sm[i] = a[i]; // Так как i-ый блок состоит только a[i]-го элемента, то сумма элементов этого блока также равна a[i]
    }
    for (int i = 0; i < n; ++i) {
        cin >> vq[i]; // Считываем номер элемента, который будет зачёркнут i-ым
        vq[i]--; // Уменьшаем vq[i] на 1, так как нумерация элементов массива в задаче идёт с 1, а нам проще с нумерацией с 0
    }
    vector<long long> ANS(n);
    for (int i = n - 1; i >= 0; --i) {
        ANS[i] = MAX_SUM; // Ответ на i-ый запрос - это максимальная сумма элементов по блоков, если мы применили (i + 1) зачёркиваний
        int idx = vq[i]; // idx - это номер элемента, который нужно зачеркнуть
        crossed[idx] = false; // Помечаем, что idx-ый элемент зачёркнут
        if (idx - 1 >= 0 && crossed[idx - 1] == false) { // Если слева есть элемент, и он не зачёркнут, то объединям idx-ый элемент с левым блоком
            unite(idx - 1, idx);
        }
        if (idx + 1 < n && crossed[idx + 1] == false) { // Если справа есть элемент, и он не зачёркнут, то объединяем idx-ый элемент с правым блоком
            unite(idx, idx + 1);
        }
        if ((idx - 1 < 0 || crossed[idx - 1] == true) && (idx + 1 >= n || crossed[idx + 1] == true)) { // Если слева и справа нет элементов для объединения, то у нас появляется новый незачёркнутый блок, состоящий из i-го элемента. Поэтому нужно попробовать обновить максимум через этот элемент.
            MAX_SUM = max(MAX_SUM, 1ll * a[vq[i]]);
        }
    }
    for (auto el : ANS) // Выводим ответы на все запросы
        cout << el << '\n';
}

int main() {
    solve();
    return 0;
}"
PhQGhTaD,Untitled,Rofyda_Elghadban1,C++,Friday 22nd of September 2023 02:21:57 PM CDT," #include <bits/stdc++.h> 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 /***********************************************************************************/
 using namespace std;
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 void solve(){
  int t;
  cin>>t;
  while(t--){
    char arr[10][10];
    int ans=0,c1=0,c2=0,c3=0,c4=0,c5=0;
    for(int i=0;i<10;i++){
      for(int j=0;j<10;j++){
        cin>>arr[i][j];
      }
    }
    for(int i=0;i<10;i++){
      for(int j=0;j<10;j++){
        if((i==0&&j==0)||(i==0&&j==1)||(i==0&&j==2)||(i==0&&j==3)||(i==0&&j==4)||(i==0&&j==5)
        ||(i==0&&j==6)||(i==0&&j==7)||(i==0&&j==8)||(i==0&&j==9)||(i==1&&j==0)||(i==2&&j==0)
        ||(i==3&&j==0)||(i==4&&j==0)||(i==5&&j==0)||(i==6&&j==0)||(i==7&&j==0)||(i==8&&j==0)
        ||(i==9&&j==0)||(i==9&&j==1)||(i==9&&j==2)||(i==9&&j==3)||(i==9&&j==4)||(i==9&&j==5)
        ||(i==9&&j==6)||(i==9&&j==7)||(i==9&&j==8)||(i==9&&j==9)||(i==1&&j==9)||(i==2&&j==9)
        ||(i==3&&j==9)||(i==4&&j==9)||(i==5&&j==9)||(i==6&&j==9)||(i==7&&j==9)||(i==8&&j==9)){
          if(arr[i][j]=='X'){
            c1++;
          }else{
            continue;
          }
        }
        else if((i==1&&j==1)||(i==1&&j==2)||(i==1&&j==3)||(i==1&&j==4)||(i==1&&j==5)
        ||(i==1&&j==6)||(i==1&&j==7)||(i==1&&j==8)||(i==2&&j==1)||(i==3&&j==1)
        ||(i==4&&j==1)||(i==5&&j==1)||(i==6&&j==1)||(i==7&&j==1)||(i==8&&j==1)
        ||(i==8&&j==2)||(i==8&&j==3)||(i==8&&j==4)||(i==8&&j==5)||(i==8&&j==6)
        ||(i==8&&j==7)||(i==8&&j==8)||(i==2&&j==8)||(i==3&&j==8)||(i==4&&j==8)
        ||(i==5&&j==8)||(i==6&&j==8)||(i==7&&j==8)){
          if(arr[i][j]=='X'){
            c2++;
          }else{
            continue;
          }
        }
        else if((i==2&&j==2)||(i==2&&j==3)||(i==2&&j==4)||(i==2&&j==5)||(i==2&&j==6)
        ||(i==2&&j==7)||(i==3&&j==2)||(i==4&&j==2)||(i==5&&j==2)||(i==6&&j==2)
        ||(i==7&&j==2)||(i==7&&j==3)||(i==7&&j==4)||(i==7&&j==5)||(i==7&&j==6)
        ||(i==7&&j==7)||(i==3&&j==7)||(i==4&&j==7)||(i==5&&j==7)||(i==6&&j==7)){
          if(arr[i][j]=='X'){
            c3++;
          }else{
            continue;
          }
        }
        else if((i==3&&j==3)||(i==3&&j==4)||(i==3&&j==5)||(i==3&&j==6)||(i==4&&j==3)
        ||(i==5&&j==3)||(i==6&&j==3)||(i==6&&j==4)||(i==6&&j==5)||(i==6&&j==6)
        ||(i==4&&j==6)||(i==5&&j==6)){
          if(arr[i][j]=='X'){
            c4++;
          }else{
            continue;
          }
        }
        else if((i==4&&j==4)||(i==4&&j==5)||(i==5&&j==4)||(i==5&&j==5)){
          if(arr[i][j]=='X'){
            c5++;
          }else{
            continue;
          }
        }
      }
    }
    ans=(c1*1)+(c2*2)+(c3*3)+(c4*4)+(c5*5);
    cout<<ans<<""\n"";
  }
 }

 int main(){
  Rofyda_Elghadban();
  solve();

  return 0;
 }
"
f5w8mUFt,Tournament of Christmas,Spocoman,C++,Friday 22nd of September 2023 02:20:15 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    int days, winTotal = 0, loseTotal = 0;
    cin >> days;

    string command;
    double totalSum = 0;

    for (int i = 0; i < days; i++) {
        cin >> command;

        int win = 0, lose = 0;
        double sum = 0;

        while (true) {
            if (command == ""Finish"") {
                if (win > lose) {
                    totalSum += sum * 1.1;
                    winTotal += win;
                }
                else {
                    totalSum += sum;
                    loseTotal += lose;
                }
                break;
            }

            if (command == ""win"") {
                sum += 20;
                win++;
            }
            else if (command == ""lose"") {
                lose++;
            }
            cin >> command;
        }
    }

    cout.setf(ios::fixed);
    cout.precision(2);

    if (winTotal > loseTotal) {
        cout << ""You won the tournament! Total raised money: "" << totalSum * 1.2 << endl;
    }
    else {
        cout << ""You lost the tournament! Total raised money: "" << totalSum << endl;
    }

    return 0;
}"
gdQWUer0,Tourist Shop,Spocoman,C++,Friday 22nd of September 2023 02:08:53 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    double budget, price, totalSum = 0;
    cin >> budget;
    cin.ignore();

    string product;
    getline(cin, product);

    int counter = 0;

    while (product != ""Stop"") {
        cin >> price;
        counter++;

        if (counter % 3 == 0) {
            price /= 2;
        }
        totalSum += price;

        if (budget < totalSum) {
            counter--;
            break;
        }
        cin.ignore();
        getline(cin, product);
    }

    cout.setf(ios::fixed);
    cout.precision(2);

    if (product == ""Stop"") {
        cout << ""You bought "" << counter << "" products for "" << totalSum << "" leva.\n"";
    }
    else {
        cout << ""You don't have enough money!\n""
            << ""You need "" << totalSum - budget << "" leva!\n"";
    }

    return 0;
}"
LZKCTHxu,The Pyramid Of King Djoser,Spocoman,C++,Friday 22nd of September 2023 01:48:50 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int basis, size, step = 0;
    cin >> basis;

    double increment;
    cin >> increment;

    double stone = 0, marble = 0, lapis = 0, gold = 0;

    for (int i = basis; i > 0; i -= 2) {
        size = i * i;
        step++;
        if (i < 3) {
            gold = size * increment;
        }
        else {
            stone += (i - 2) * (i - 2) * increment;
            double decorate = (i * 4 - 4) * increment;
            if (step % 5 != 0) {
                marble += decorate;
            }
            else {
                lapis += decorate;
            }
        }
    }

    cout << ""Stone required: "" << ceil(stone) << endl
        << ""Marble required: "" << ceil(marble) << endl
        << ""Lapis Lazuli required: "" << ceil(lapis) << endl
        << ""Gold required: "" << ceil(gold) << endl
        << ""Final pyramid height: "" << floor(step * increment) << endl;
   
    return 0;
}"
LBZgWeUC,Periods of Words,danielvitor23,C++,Friday 22nd of September 2023 01:40:00 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
vector<int> getPi(const string &s) {
  int n = (int)s.size();
  vector<int> pi(n, 0);
  for (int i = 1, j = 0; i < n; ++i) {
    while (j > 0 and s[i] != s[j]) j = pi[j - 1];
    if (s[i] == s[j]) ++j;
    pi[i] = j;
  }
  return pi;
}
int main() {
  cin.tie(0)->sync_with_stdio(0);
  int n; cin >> n;
  string s; cin >> s;
  auto pi = getPi(s);
  i64 ans = 0;
  for (int i = n; i >= 2; --i) {
    int d = i - pi[i-1];
    if (i % d == 0) {
      ans += (i - d);
    } else {
      ans += (d * (i / d));
    }
  }
  cout << ans << '\n';
}
/*

b            ->          0
ba           ->          0
bab          -> ba       2
baba         -> ba       2
babab        -> baba     4
bababa       -> baba     4
bababab      -> bababa   6
babababa     -> bababa   6
total        =          24

*/"
x7ESLcsh,lesson18_322,Petro_zzz,C++,Friday 22nd of September 2023 01:39:48 PM CDT,"#include <iostream>

using namespace std;

int get_rand(int a, int b);

void task0() {
	int arr[6];
	for (int k = 0; k < size(arr); k++) {
		arr[k] = 3 + 2 * k;
	}

	int summ = 0;
	for (int k = 0; k < size(arr); k++) {
		summ += arr[k];
	}

	for (int k = 0; k < size(arr); k++) {
		cout << arr[k] << "" "";
	}
	cout << endl;
	cout << summ << "" "" << (double)summ / size(arr) << endl;
}

void test_arr_2D() {
	const int size1 = 4;
	const int size2 = 5;

	int arr[size1][size2];

	arr[0][0] = 12;

	for (int k = 0; k < size1; k++) {
		for (int n = 0; n < size2; n++) {
			arr[k][n] = (k + 1) * (n + 1);
		}
	}

	for (int k = 0; k < size1; k++) {
		for (int n = 0; n < size2; n++) {
			cout << arr[k][n] << ""\t"";
		}
		cout << endl;
	}

	int x = 255;
	cout << &x << endl;
	cout << &(arr[0][0]) << "" "" << arr << "" "" << arr[0]<< endl;
}

void test_arr2D_like_arr1D() {
	const int size1 = 4;
	const int size2 = 5;
	int arr[size1 * size2];
	
	//arr[0][0] = 12;
	
	for (int k = 0; k < size1; k++) {
		for (int n = 0; n < size2; n++) {
			arr[k * size2 + n] = (n + 1) * (k + 1);
		}
	}

	for (int k = 0; k < size1; k++) {
		for (int n = 0; n < size2; n++) {
			cout << arr[k * size2 + n] << ""\t"";
		}
		cout << endl;
	}


}

const int size_h = 4 + 1;
//const int size_w = 5 + 1;
#define SIZE_W 5 + 1

void gen_arr(int size_h, int size_w, int arr[][SIZE_W]) {
	for (int k = 0; k < size_h; k++) {
		for (int n = 0; n < size_w; n++) {
			arr[k][n] = get_rand(-10, 10);
		}
	}
}

void calc_arr(int size_h, int size_w, int arr[][SIZE_W]) {	
	
	for (int k = 0; k < size_h; k++) {
		arr[k][size_w - 1] = 0;
	}

	for (int n = 0; n < size_w-1; n++) {
		arr[size_h -1][n] = 0;
	}
	
	for (int k = 0; k < size_h - 1; k++) {
		for (int n = 0; n < size_w - 1; n++) {
			arr[k][size_w - 1] += arr[k][n];
			arr[size_h - 1][n] += arr[k][n];
			arr[size_h - 1][size_w - 1] += arr[k][n];
		}
	}
}

void show_arr(int size_h, int size_w, int arr[][SIZE_W]) {
	for (int k = 0; k < size_h; k++) {
		for (int n = 0; n < size_w; n++) {
			cout << arr[k][n] << ""\t"";
		}
		cout << endl;
	}
}

int get_rand(int a, int b) {
	return rand() % (b - a + 1) + a;
}

void test_sum2D() {


	int arr[size_h][SIZE_W];

	gen_arr(size_h-1, SIZE_W-1, arr);
	calc_arr(size_h, SIZE_W, arr);
	show_arr(size_h, SIZE_W, arr);
}

int main() {
	srand(time(NULL));
	//task0();
	//test_arr_2D();
	//test_arr2D_like_arr1D();
	test_sum2D();

	return 0;
}"
FkahZGdW,AdditionalLab3,EWTD,Python,Friday 22nd of September 2023 01:34:34 PM CDT,"import math
import numpy as np
import matplotlib.pyplot

# Pn(x) = C0 + C1 * x + C2 * x^2 + ... + Cn * x^n
class Polynomial:
    def __init__(self, coeff):
        self.coeff = coeff

    def evaluate(self, x):
        return sum([self.coeff[idx] * (x ** idx) for idx in range(len(self.coeff))])

    def GeometricMean(self):
        return math.sqrt(sum(coef ** 2 for coef in self.coeff))


class LeastSquaresApprox:
    EPS = 0.001
    MtSize = 4

    def __init__(self, x, y):
        if len(x) != len(y):
            raise ArithmeticError(""x and y have different sizes"")
        self.x = x
        self.y = y
        # Aλ = b
        self.__rhs_vector = None
        self.__lhs_matrix = None
        self.__solution = None

    def solution(self) -> Polynomial:
        if self.__solution is not None:
            return self.__solution
        import numpy as np
        self.__lhs_matrix = [
            [sum([self.x[idx] ** (i + j) for idx in range(len(self.x))]) for j in range(LeastSquaresApprox.MtSize)]
            for i in range(LeastSquaresApprox.MtSize)]
        self.__rhs_vector = [sum(self.y[idx]*(self.x[idx]**i) for idx in range(len(self.y))) for i in
                             range(LeastSquaresApprox.MtSize)]
        temp_solution = np.linalg.solve(np.matrix(self.__lhs_matrix), np.matrix(self.__rhs_vector).transpose())
        self.__solution = Polynomial([val.min() for val in temp_solution])
        return self.__solution

    def MSE(self):
        solution = self.solution()
        return math.sqrt(sum([(solution.evaluate(self.x[idx]) - self.y[idx]) ** 2 for idx in range(len(self.x))]))

    def AbsoluteError(self):
        return self.MSE() / math.sqrt(len(self.x))

    def RelativeError(self):
        return self.AbsoluteError() / Polynomial(self.y).GeometricMean()

    def Results(self):
        solution = self.solution()
        subtles = [(self.x[idx] + self.x[idx + 1]) / 2 for idx in range(len(self.x) - 1)]
        approximated_results = [solution.evaluate(point) for point in subtles]
        print(f""x = \n{self.x}\ny = \n{self.y}"")
        print(f""A = \n{self.__lhs_matrix}\nb = \n{self.__rhs_vector}"")
        print(f""λ = \n{solution.coeff}\nAbsoluteError = {self.AbsoluteError()}\nRelativeError = {self.RelativeError()}"")
        print(f""new_x = \n{subtles}\napproximated_results = \n{approximated_results}"")
        matplotlib.pyplot.plot(subtles, approximated_results)

    def kek(self, x, y):
        solution = self.solution()
        subtles = [(x[0] + x[-1]) / 2, (x[0] * x[-1]) ** (1 / 2), 2 / (1 / x[0] + 1 / x[-1])]
        z = [solution.evaluate(point) for point in subtles]
        ya = (y[0] + y[-1]) / 2
        yg = (y[0] * y[-1]) ** (1 / 2)
        yh = 2 / (1 / y[0] + 1 / y[-1])
        tmp = [z[0]-ya, z[1] - yg, z[0] - yg, z[1] - ya, z[2]-ya, z[0]-yh, z[2]-yh, z[2]-yg, z[1]-yh]
        tmp = [math.fabs(v) for v in tmp]
        print(f""[xa,xg,xh] = {subtles}"")
        print(f""[z(xa),z(xg),z(xh)] = {z}"")
        print(f""[di] = {tmp}"")
        print(f""min.i[di] = {tmp.index(min(tmp)) + 1}"")
        A, B, D1, D2 = 0, 0, 0, 0
        for i in range(len(x)):
            A += math.log(x[i])**2
            B += math.log(x[i])
            D1 += math.log(x[i])*math.log(y[i])
            D2 += math.log(y[i])
        system = np.matrix([[A, B], [B, (len(x)+1)]])
        coef = np.matrix([D1, D2]).transpose()
        solution = np.linalg.solve(system, coef)
        a, b = math.exp(solution[1][0]), solution[0][0].min()
        print(f""z(x) = {a}x^{b}"")
        approximated_results = [a*(v**b) for v in x]
        matplotlib.pyplot.plot(x, approximated_results)
        mse = math.sqrt(sum([(approximated_results[idx] - self.y[idx]) ** 2 for idx in range(len(self.x))]))
        print(f""СКУ = {mse}"")

x = [1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5]
#y = [math.exp(v) for v in x]
y = [1.15, 1.39, 1.85, 1.95, 2.16, 2.79, 2.88, 2.38, 3.61]
matplotlib.pyplot.plot(x, y)

Solver = LeastSquaresApprox(x, y)
Solver.Results()
Solver.kek(x, y)
matplotlib.pyplot.show()"
iLxzEVUV,The Most Powerful Word,Spocoman,C++,Friday 22nd of September 2023 01:31:29 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string word, vowels = ""aeiouyAEIOUY"", strongWord = """";
    getline(cin, word);

    double strongSum = 0;

    while (word != ""End of words"") {
        double wordSum = 0;

        for (int i = 0; i < word.length(); i++) {
            wordSum += word[i];
        }

        if (word[0] == 'a' || word[0] == 'e' || word[0] == 'i' || word[0] == 'o' || word[0] == 'u' || word[0] == 'y' ||
            word[0] == 'A' || word[0] == 'E' || word[0] == 'I' || word[0] == 'O' || word[0] == 'U' || word[0] == 'Y') {
            wordSum *= word.length();
        }
        else {
            wordSum /= word.length();
        }

        if (wordSum > strongSum) {
            strongWord = word;
            strongSum = wordSum;
        }
        getline(cin, word);
    }

    cout << ""The most powerful word is "" << strongWord << "" - "" << (int)strongSum << endl;
    return 0;
}"
y9eP36KA,HWM - compare battles,goodwin64,JavaScript,Friday 22nd of September 2023 12:57:23 PM CDT,"const fs = require('fs');

// battles were stringified using:
function stringifyCircular(obj) {
  var cache = [];
  var result = JSON.stringify(obj, (key, value) => {
    if (typeof value === 'object' && value !== null) {
      if (cache.includes(value)) return;
      cache.push(value);

      // Check if the object has a custom toJSON method
      if (typeof value.toJSON === 'function' || typeof value.toObject === 'function') {
        try {
          // Call the custom toJSON method and handle errors if any
          const customJSON = value.toJSON();
          return customJSON;
        } catch (error) {
          // Handle the error gracefully, e.g., by logging it or ignoring it
          console.error(`Error in toJSON method of ${key}: ${error.message}`);
          return undefined; // Skip this object in the resulting JSON
        }
      }
    }
    return value;
  });
  cache = null;
  return result;
}

var s = stringifyCircular(window);
console.log(s.length);
console.log(s);

// then, all 3 battles were stored in json files
var battle1 = require('./battle1.json');
var battle2 = require('./battle2.json');
var battle3 = require('./battle3.json');

function deepCompare(objMe, objDifferent, objSimilar, rootPath = '') {
  const differences = [];

  function compareInternal(currentPath, valueMe, valueDifferent, valueSimilar) {
    // Check if the values are of the same type
    if (typeof valueMe !== typeof valueDifferent) {
      return;
    }

    // Handle primitive types
    if (typeof valueMe !== 'object' || valueMe === null) {
      if (valueMe !== valueDifferent && valueMe === valueSimilar) {
        differences.push({ path: currentPath, value1: valueMe, value2: valueDifferent });
      }
      return;
    }

    // Handle arrays
    if (Array.isArray(valueMe)) {
      if (
        !Array.isArray(valueDifferent) ||
        (valueMe.length !== valueDifferent.length && valueMe.length === valueSimilar.length)
      ) {
        differences.push({ path: currentPath, value1: valueMe, value2: valueDifferent });
        return;
      }
      for (let i = 0; i < valueMe.length; i++) {
        compareInternal(`${currentPath}[${i}]`, valueMe[i], valueDifferent[i], valueSimilar[i]);
      }
      return;
    }

    // Handle objects
    const keysMe = Object.keys(valueMe);
    const keysDifferent = Object.keys(valueDifferent);
    const keysSimilar = Object.keys(valueSimilar);

    for (const key of keysMe) {
      if (!keysDifferent.includes(key) && keysSimilar.includes(key)) {
        differences.push({ path: `${currentPath}.${key}`, value1: valueMe[key], value2: undefined });
      } else {
        compareInternal(`${currentPath}.${key}`, valueMe[key], valueDifferent[key], valueSimilar[key]);
      }
    }

    for (const key of keysDifferent) {
      if (!keysMe.includes(key) && !keysSimilar.includes(key)) {
        differences.push({ path: `${currentPath}.${key}`, value1: undefined, value2: valueDifferent[key] });
      }
    }
  }

  compareInternal(rootPath, objMe, objDifferent, objSimilar);
  return differences;
}

// finally, the differences were computed
var differences = deepCompare(battle1, battle3, battle2);
differences = differences.filter((d) => typeof d.value1 === typeof d.value2);
const s = JSON.stringify(differences, null, 4);

// and saved to a file
fs.writeFile('differences.json', s, function (err) {
  if (err) return console.log(err);
});
"
jJurdPp8,Untitled,drakon-firestone,Lua,Friday 22nd of September 2023 12:55:00 PM CDT,"function module.CloseFrame(frameName)
	local frame = module.GetFrame(frameName)
	if frame then
		local normalSize = frame.Size
		local closeTween = tweenService:Create(
			frame,
			TweenInfo.new(
				CloseSpeed,
				ClosingEasingStyle,
				ClosingEasingDirection),
			{
				Size = UDim2.fromScale(0, 0)
			}
		)
		closeTween:Play()
		closeTween.Completed:Connect(function()
			frame.Visible = false
			frame.Size = normalSize
		end)
	end
end
for _, v in pairs(screenGui:GetDescendants()) do
	if v:IsA(""GuiButton"") then
		if v:FindFirstChild(""Opens"") then
			if v:FindFirstChild(""Opens"").Value ~= nil then
				v.MouseButton1Click:Connect(function()
					module.OpenFrame(v:FindFirstChild(""Opens"").Value.Name)
				end)
			end
		end
		if v:FindFirstChild(""Closes"") then
			if v:FindFirstChild(""Closes"").Value ~= nil then
				v.MouseButton1Click:Connect(function()
					module.CloseFrame(v:FindFirstChild(""Closes"").Value.Name)
				end)
			end
		end
	end
end"
xYQj3b4V,conditions to fill in a column in dataframe in Python,elena1234,Python,Friday 22nd of September 2023 12:43:13 PM CDT,"for index, row in df_1.iterrows():
    if df_1['Опаковка'][index] == 'Стек':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_stek
    elif df_1['Опаковка'][index] == 'Кашон':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_kashon
    elif df_1['Опаковка'][index] == 'Палет':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_palet
    elif df_1['Опаковка'][index] == 'Каса':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_kasa
    elif df_1['Опаковка'][index] == 'Кутия':
        df_1['Продажби (количество в осн. Ед.м)'].iloc[index] = df_1['Продажби в брой опаковки'][index] * quantity_in_kytiq
"
hrEe041Q,aux_wav,IkeKap,C,Friday 22nd of September 2023 12:08:29 PM CDT,"#include <alsa/asoundlib.h>
#include <stdio.h>
#include <stdlib.h>

#define SAMPLE_RATE 44100
#define CHANNELS 2
#define FORMAT SND_PCM_FORMAT_S16_LE
#define BUFFER_SIZE 2048

void write_wav_header(FILE *file, int sample_rate, int channels, int bits_per_sample, int data_length) {
    fwrite(""RIFF"", 1, 4, file);
    int chunk_size = 36 + data_length;
    fwrite(&chunk_size, 4, 1, file);
    fwrite(""WAVE"", 1, 4, file);
    fwrite(""fmt "", 1, 4, file);
    int sub_chunk1_size = 16;
    fwrite(&sub_chunk1_size, 4, 1, file);
    short audio_format = 1;
    fwrite(&audio_format, 2, 1, file);
    fwrite(&channels, 2, 1, file);
    fwrite(&sample_rate, 4, 1, file);
    int byte_rate = sample_rate * channels * bits_per_sample / 8;
    fwrite(&byte_rate, 4, 1, file);
    short block_align = channels * bits_per_sample / 8;
    fwrite(&block_align, 2, 1, file);
    fwrite(&bits_per_sample, 2, 1, file);
    fwrite(""data"", 1, 4, file);
    fwrite(&data_length, 4, 1, file);
}

int main() {
    snd_pcm_t *capture_handle;
    snd_pcm_hw_params_t *hw_params;
    FILE *output_file = fopen(""output.wav"", ""wb"");

    unsigned int actual_sample_rate = SAMPLE_RATE;
    int actual_channels = CHANNELS;
    snd_pcm_format_t actual_format = FORMAT;

    if (output_file == NULL) {
        perror(""Failed to open output file"");
        return 1;
    }

    if (snd_pcm_open(&capture_handle, ""default"", SND_PCM_STREAM_CAPTURE, 0) < 0) {
        perror(""Failed to open audio device"");
        return 1;
    }

    snd_pcm_hw_params_malloc(&hw_params);
    snd_pcm_hw_params_any(capture_handle, hw_params);
    snd_pcm_hw_params_set_access(capture_handle, hw_params, SND_PCM_ACCESS_RW_INTERLEAVED);

    if (snd_pcm_hw_params_set_rate_near(capture_handle, hw_params, &actual_sample_rate, 0) < 0) {
        perror(""Failed to set sample rate"");
        return 1;
    }
    snd_pcm_hw_params_get_rate(hw_params, &actual_sample_rate, 0);
    printf(""Actual sample rate: %u\n"", actual_sample_rate);

    if (snd_pcm_hw_params_set_channels_near(capture_handle, hw_params, &actual_channels) < 0) {
        perror(""Failed to set channels"");
        return 1;
    }
    snd_pcm_hw_params_get_channels(hw_params, &actual_channels);
    printf(""Actual channels: %d\n"", actual_channels);

    if (snd_pcm_hw_params_set_format(capture_handle, hw_params, actual_format) < 0) {
        perror(""Failed to set audio format"");
        return 1;
    }
    snd_pcm_hw_params_get_format(hw_params, &actual_format);
    printf(""Actual format: %d\n"", actual_format);

    snd_pcm_hw_params(capture_handle, hw_params);
    snd_pcm_hw_params_free(hw_params);
    snd_pcm_prepare(capture_handle);

    write_wav_header(output_file, actual_sample_rate, actual_channels, snd_pcm_format_width(actual_format), 0);

    char buffer[BUFFER_SIZE];
    int data_length = 0;

    while (1) {
        if (snd_pcm_readi(capture_handle, buffer, BUFFER_SIZE / 4) < 0) {
            snd_pcm_prepare(capture_handle);
        } else {
            fwrite(buffer, 1, BUFFER_SIZE, output_file);
            data_length += BUFFER_SIZE;
        }
    }

    snd_pcm_close(capture_handle);
    fclose(output_file);

    return 0;
}
"
vq4uXBZh,Untitled,dllbridge,C,Friday 22nd of September 2023 12:06:59 PM CDT,"
/*
#include   <stdio.h>

 
int n = 19; 
 
 
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	
	printf(""kjlhadf = %d\n"", 19%7);
	
	
	printf(""kjlhadf = %d\n"", 19/7);	
	
	
}



*/



























#include   <stdio.h>



namespace Sobolev
{
   int n = 121;
}
   
using namespace Sobolev;   
   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	
    int n = 4444;
	
	
	printf(""n = %d\n"", Sobolev::n);
	
	
	
}



























/*


#include   <stdio.h>


char c = 'F';


char sz[100] = ""SONY"";

   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	
	
	sz[4] = 'w';//65;
	
	printf(sz);

	
}
	
	
	
	*/
	
	
	
	
	
	
	
	
	
	
	
	
	

/*


#include   <stdio.h>


char c = 'F';


char sz[100] = ""SONY"";

   
//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	
	printf(sz);

	printf(""\n %s \n"", sz);

    printf(""char c = %d"", c);
	
}
	
	
	
	
	*/
	
	
	
	"
cX4Hn6F8,"BMP patch: CortexA.c, OS Lock",ALTracer,Diff,Friday 22nd of September 2023 11:55:18 AM CDT,"diff --git a/src/target/adiv5.c b/src/target/adiv5.c
index 84acdbfb..b5b0c51f 100644
--- a/src/target/adiv5.c
+++ b/src/target/adiv5.c
@@ -682,10 +682,12 @@ static void adiv5_component_probe(
 			case aa_cortexm:
 				DEBUG_INFO(""%s-> cortexm_probe\n"", indent + 1);
 				cortexm_probe(ap);
+				DEBUG_INFO(""%s<- cortexm_probe\n"", indent + 1);
 				break;
 			case aa_cortexa:
 				DEBUG_INFO(""%s-> cortexa_probe\n"", indent + 1);
 				cortexa_probe(ap, addr);
+				DEBUG_INFO(""%s<- cortexa_probe\n"", indent + 1);
 				break;
 			default:
 				break;
diff --git a/src/target/cortexa.c b/src/target/cortexa.c
index 38c1d073..b862ded1 100644
--- a/src/target/cortexa.c
+++ b/src/target/cortexa.c
@@ -91,6 +91,19 @@ typedef struct cortexa_priv {
 #define CORTEXAR_DBG_WCR   0x1c0U
 #define CORTEXAR_CTR       0xd04U
 
+#define CORTEXAR_DBG_DSCCR 0x028U
+#define CORTEXAR_DBG_DSMCR 0x02cU
+#define CORTEXAR_DBG_OSLAR 0x300U
+#define CORTEXAR_DBG_OSLSR 0x304U
+#define CORTEXAR_DBG_LAR   0xfb0U /* Lock Access */
+#define CORTEXAR_DBG_LSR   0xfb4U /* Lock Status */
+
+#define DBGOSLSR_OSLM0 (1U << 0U)
+#define DBGOSLSR_OSLK  (1U << 1U)
+#define DBGOSLSR_NTT   (1U << 2U)
+#define DBGOSLSR_OSLM1 (1U << 3U)
+#define DBGOSLSR_OSLM  (DBGOSLSR_OSLM0|DBGOSLSR_OSLM1)
+
 #define CORTEXAR_DBG_IDR_BREAKPOINT_MASK  0xfU
 #define CORTEXAR_DBG_IDR_BREAKPOINT_SHIFT 24U
 #define CORTEXAR_DBG_IDR_WATCHPOINT_MASK  0xfU
@@ -109,6 +122,9 @@ typedef struct cortexa_priv {
 #define CORTEXAR_DBG_DSCR_ITR_ENABLE       (1U << 13U)
 #define CORTEXAR_DBG_DSCR_HALT_DBG_ENABLE  (1U << 14U)
 #define CORTEXAR_DBG_DSCR_INSN_COMPLETE    (1U << 24U)
+#define CORTEXAR_DBG_DSCR_DTRTX_FULL_LATCHED (1U << 26U)
+#define CORTEXAR_DBG_DSCR_DTRRX_FULL_LATCHED (1U << 27U)
+/* bit 28 is reserved */
 #define CORTEXAR_DBG_DSCR_DTR_READ_READY   (1U << 29U)
 #define CORTEXAR_DBG_DSCR_DTR_WRITE_DONE   (1U << 30U)
 
@@ -317,6 +333,54 @@ static size_t create_tdesc_cortex_a(char *buffer, size_t max_len)
 	return (size_t)total;
 }
 
+typedef struct bitfield_entry {
+	char * desc;
+	uint8_t bitnum;
+} bitfields_lut_s;
+
+static const bitfields_lut_s cortexa_dbg_dscr_lut[] = {
+	{""HALTED"", 0U},
+	{""RESTARTED"", 1U},
+	{""SDABORT_l"", 6U},
+	{""ADABORT_l"", 7U},
+	{""UND_l"", 8U},
+	{""FS"", 9U},
+	{""ITRen"", 13U},
+	{""HDBGen"", 14U},
+	{""MDBGen"", 15U},
+	{""InstrCompl_l"", 24U},
+	{""PipeAdv"", 25U},
+	{""TXfull_l"", 26U},
+	{""RXfull_l"", 27U},
+	{""TXfull"", 29U},
+	{""RXfull"", 30U},
+	{} /* sentinel */
+};
+
+static void helper_print_bitfields(const uint32_t val, const bitfields_lut_s lut[], const size_t array_length)
+{
+	for (size_t i = 0; i < array_length; i++) {
+		if (val & (1U << lut[i].bitnum)) {
+			DEBUG_TARGET(""%s "", lut[i].desc);
+		}
+	}
+};
+
+static void cortexa_decode_bitfields(const uint32_t reg, const uint32_t val)
+{
+	DEBUG_TARGET(""Bits set in reg "");
+	switch (reg) {
+	case CORTEXAR_DBG_DSCR:
+		DEBUG_TARGET(""DBGDSCR: "");
+		helper_print_bitfields(val, cortexa_dbg_dscr_lut, ARRAY_LENGTH(cortexa_dbg_dscr_lut));
+		break;
+	default:
+		DEBUG_TARGET(""unknown reg"");
+		break;
+	}
+
+	DEBUG_TARGET(""\n"");
+}
 static void cortexar_run_insn(target_s *const target, const uint32_t insn)
 {
 	/* Issue the requested instruction to the core */
@@ -331,10 +395,11 @@ static uint32_t cortexar_run_read_insn(target_s *const target, const uint32_t in
 	/* Issue the requested instruction to the core */
 	cortex_dbg_write32(target, CORTEXAR_DBG_ITR, insn);
 	/* Poll for the instruction to complete and the data to become ready in the DTR */
-	while ((cortex_dbg_read32(target, CORTEXAR_DBG_DSCR) &
-			   (CORTEXAR_DBG_DSCR_INSN_COMPLETE | CORTEXAR_DBG_DSCR_DTR_READ_READY)) !=
-		(CORTEXAR_DBG_DSCR_INSN_COMPLETE | CORTEXAR_DBG_DSCR_DTR_READ_READY))
-		continue;
+	const uint32_t dscr_ready_mask = CORTEXAR_DBG_DSCR_INSN_COMPLETE | CORTEXAR_DBG_DSCR_DTRTX_FULL_LATCHED; // | CORTEXAR_DBG_DSCR_DTR_READ_READY;
+	uint32_t dscr;
+	do {
+		dscr = cortex_dbg_read32(target, CORTEXAR_DBG_DSCR);
+	} while ((dscr & dscr_ready_mask) != dscr_ready_mask);
 	/* Read back the DTR to complete the read */
 	return cortex_dbg_read32(target, CORTEXAR_DBG_DTRRX);
 }
@@ -508,6 +573,8 @@ bool cortexa_probe(adiv5_access_port_s *ap, target_addr_t base_address)
 	target->halt_poll = cortexa_halt_poll;
 	target->halt_resume = cortexa_halt_resume;
 
+#if 0 /* Trying to halt STM32MP15x Cortex-A cores during probe locks up BMDA/BMF! */
+
 	/* Try to halt the target core */
 	target_halt_request(target);
 	platform_timeout_s timeout;
@@ -518,6 +585,7 @@ bool cortexa_probe(adiv5_access_port_s *ap, target_addr_t base_address)
 	/* If we did not succeed, we must abort at this point. */
 	if (reason == TARGET_HALT_FAULT || reason == TARGET_HALT_ERROR)
 		return false;
+#endif
 
 	cortex_read_cpuid(target);
 	/* The format of the debug identification register is described in DDI0406C §C11.11.15 pg2217 */
@@ -569,12 +637,44 @@ bool cortexa_attach(target_s *target)
 	/* Clear any pending fault condition */
 	target_check_error(target);
 
-	/* Enable halting debug mode */
+#if 0
+	/* Reset 0xC5ACCE55 lock access to deter software */
+	cortex_dbg_write32(target, CORTEXAR_DBG_LAR, 0U);
+	/* Cache write-through */
+	cortex_dbg_write32(target, CORTEXAR_DBG_DSCCR, 0U);
+	/* Disable TLB lookup and refill/eviction */
+	cortex_dbg_write32(target, CORTEXAR_DBG_DSMCR, 0U);
+#endif
+
+	uint32_t dbg_osreg = cortex_dbg_read32(target, CORTEXAR_DBG_OSLSR);
+	DEBUG_INFO(""%s: DBGOSLSR = 0x%08X\n"", __func__, dbg_osreg);
+	/* Is OS Lock implemented? */
+	if (((dbg_osreg & DBGOSLSR_OSLM) == DBGOSLSR_OSLM0) || ((dbg_osreg & DBGOSLSR_OSLM) == DBGOSLSR_OSLM1)) {
+		/* Is OS Lock set? */
+		if (dbg_osreg & DBGOSLSR_OSLK) {
+			DEBUG_WARN(""%s: OSLock set! Trying to unlock\n"", __func__);
+			cortex_dbg_write32(target, CORTEXAR_DBG_OSLAR, 0U);
+			dbg_osreg = cortex_dbg_read32(target, CORTEXAR_DBG_OSLSR);
+
+			if ((dbg_osreg & DBGOSLSR_OSLK) != 0) {
+				DEBUG_ERROR(""%s: OSLock sticky, core not powered?\n"", __func__);
+			}
+		}
+	}
+
 	uint32_t dbgdscr = cortex_dbg_read32(target, CORTEXAR_DBG_DSCR);
-	dbgdscr |= CORTEXAR_DBG_DSCR_ITR_ENABLE | CORTEXAR_DBG_DSCR_ITR_ENABLE;
+	DEBUG_INFO(""%s: DBGDSCR = 0x%08"" PRIx32 "" (1)\n"", __func__, dbgdscr);
+	cortexa_decode_bitfields(CORTEXAR_DBG_DSCR, dbgdscr);
+
+	/* Enable halting debug mode */
+	dbgdscr |= CORTEXAR_DBG_DSCR_HALT_DBG_ENABLE | CORTEXAR_DBG_DSCR_ITR_ENABLE;
+	cortex_dbg_write32(target, CORTEXAR_DBG_DSCR, dbgdscr);
 	dbgdscr &= ~DBGDSCR_EXTDCCMODE_MASK;
 	cortex_dbg_write32(target, CORTEXAR_DBG_DSCR, dbgdscr);
-	DEBUG_INFO(""DBGDSCR = 0x%08"" PRIx32 ""\n"", dbgdscr);
+
+	dbgdscr = cortex_dbg_read32(target, CORTEXAR_DBG_DSCR);
+	DEBUG_INFO(""%s: DBGDSCR = 0x%08"" PRIx32 "" (2)\n"", __func__, dbgdscr);
+	cortexa_decode_bitfields(CORTEXAR_DBG_DSCR, dbgdscr);
 
 	target_halt_request(target);
 	size_t tries = 10;
@@ -834,6 +934,11 @@ static target_halt_reason_e cortexa_halt_poll(target_s *t, target_addr_t *watch)
 void cortexa_halt_resume(target_s *t, bool step)
 {
 	cortexa_priv_s *priv = t->priv;
+
+	uint32_t dbgdscr = cortex_dbg_read32(t, CORTEXAR_DBG_DSCR);
+	if (!(dbgdscr & CORTEXAR_DBG_DSCR_HALTED)) /* Not halted */
+		return;
+
 	/* Set breakpoint comparator for single stepping if needed */
 	if (step) {
 		uint32_t addr = priv->reg_cache.r[15];
@@ -853,7 +958,7 @@ void cortexa_halt_resume(target_s *t, bool step)
 	cortexar_run_insn(t, MCR | ICIALLU); /* invalidate cache */
 
 	/* Disable DBGITR.  Not sure why, but RRQ is ignored otherwise. */
-	uint32_t dbgdscr = cortex_dbg_read32(t, CORTEXAR_DBG_DSCR);
+	dbgdscr = cortex_dbg_read32(t, CORTEXAR_DBG_DSCR);
 	if (step)
 		dbgdscr |= DBGDSCR_INTDIS;
 	else
"
scBkDNeE,awd,Zuneve,C++,Friday 22nd of September 2023 11:46:08 AM CDT,"#include <bits/stdc++.h>

using namespace std;

using ll = long long;

const ll INF = 1e15 + 7;

vector<ll> used;
vector<ll> topsort;

void dfs_ts(ll v, vector<map<ll, ll>> &gr) {
    used[v] = true;
    for (auto [u, k] : gr[v]) {
        if (!used[u]) {
            dfs_ts(u, gr);
        }
    }
    topsort.push_back(v);
}

int main() {
    ll n, m, s, t;
    cin >> n >> m >> s >> t;
    --s;
    --t;
    vector<map<ll, ll>> gr(n);
    for (ll i = 0; i < m; i++) {
        ll a, b, c;
        cin >> a >> b >> c;
        --a;
        --b;
        gr[a][b] = c;
    }
    used.assign(n, false);
    for (ll i = 0; i < n; i++) {
        if (!used[i]) dfs_ts(i, gr);
    }
    reverse(topsort.begin(), topsort.end());
    ll i;
    for (i = 0; i < n; i++) {
        if (topsort[i] == s) {
            break;
        }
    } ll S = i;
    vector<ll> dp(n, INF);
    used.assign(n, false);
    dp[s] = 0;
    for (i = S; i < n; i++) {
        if (dp[topsort[i]] != INF) {
            for (auto [u, k] : gr[topsort[i]]) {
                dp[u] = min(dp[u], dp[topsort[i]] + k);
            }
        }
    }
    if (dp[t] == INF) {
        cout << ""Unreachable"";
    } else {
        cout << dp[t];
    }
    return 0;
}"
sLqrGc2j,Review PRC Broker,fxvnpro,PHP,Friday 22nd of September 2023 11:27:03 AM CDT,https://www.fxvnpro.com/review-prc-broker/
LtPDfkL7,calc (last ver),1kostik1,PHP,Friday 22nd of September 2023 11:24:50 AM CDT,"<?php

function applyFunction($functionName, $arg1, $arg2)
{
    switch ($functionName) {
        case 'log':
            $num = $arg1;
            $base = $arg2;
            if ($num > 0 && $base > 0 && $base != 1) {
                return log($num, $base);
            } else {
                return false;
            }
        // Можно дополнить
    }
}

function evaluateExpression($expression) {
    $operators = ['+', '-', '*', '/', '^'];
    $functions = ['log']; // Можно дополнить
    $operatorStack = [];
    $operandStack = [];

    $i = 0;
    $unaryMinus = false;

    while ($i < strlen($expression)) {
        $char = $expression[$i];
        if (is_numeric($char) || $char == '.') {
            $operand = '';
            while ($i < strlen($expression) && (is_numeric($expression[$i]) || $expression[$i] == '.')) {
                $operand .= $expression[$i];
                $i++;
            }
            $operandStack[] = (float)$operand;
            if ($unaryMinus) {
                $operandStack[count($operandStack) - 1] = -$operandStack[count($operandStack) - 1];
                $unaryMinus = false;
            }
            continue;
        } elseif ($char == '-' && (empty($operandStack) || $expression[$i-1] == '(')) {
            $unaryMinus = true;
            $i++;
            continue;
        } elseif (in_array($char, $operators)) {
            while (!empty($operatorStack) && (!$unaryMinus && precedence($operatorStack[count($operatorStack) - 1]) >= precedence($char) || $unaryMinus)) {
                $operator = array_pop($operatorStack);
                $operand2 = array_pop($operandStack);
                $operand1 = array_pop($operandStack);
                $operandStack[] = applyOperator($operand1, $operator, $operand2);
            }
            $operatorStack[] = $char;
            $unaryMinus = false;
        } elseif ($char == '(') {
            if ($unaryMinus) {
                $operandStack[] = 0;
                $operatorStack[] = '-';
                $unaryMinus = false;
            }
            $operatorStack[] = $char;
        } elseif ($char == ')') {
            while (end($operatorStack) != '(') {
                $operator = array_pop($operatorStack);
                $operand2 = array_pop($operandStack);
                $operand1 = array_pop($operandStack);
                $operandStack[] = applyOperator($operand1, $operator, $operand2);
            }
            array_pop($operatorStack);
        } elseif (preg_match('/([a-zA-Z]+)\(([^()]*)\)/', $expression, $matches)) {
            while (!empty($matches)) {
                $functionName = $matches[1];
                $args = explode(',', $matches[2]);
                $argValues = array_map('evaluateExpression', $args);
                $expression = str_replace($matches[0], applyFunction($functionName, ...$argValues), $expression);
                preg_match('/([a-zA-Z]+)\(([^()]*)\)/', $expression, $matches);
            }
            continue;
        }
        $i++;
    }

    while (!empty($operatorStack)) {
        $operator = array_pop($operatorStack);
        $operand2 = array_pop($operandStack);
        $operand1 = array_pop($operandStack);
        $operandStack[] = applyOperator($operand1, $operator, $operand2);
    }

    return $operandStack[0];
}

function precedence($operator): int
{
    if ($operator == '+' || $operator == '-') return 1;
    if ($operator == '*' || $operator == '/') return 2;
    if ($operator == '^') return 3;
    return 0;
}

function applyOperator($operand1, $operator, $operand2)
{
    switch ($operator) {
        case '+':
            return $operand1 + $operand2;
        case '-':
            return $operand1 - $operand2;
        case '*':
            return $operand1 * $operand2;
        case '/':
            if ($operand2 != 0) {
                return $operand1 / $operand2;
            } else {
                return false; // Error: Division by zero
            }
        case '^':
            return pow($operand1, $operand2);
    }
}

function validateBrackets($expression): string
{
    $openingBrackets = substr_count($expression, '(');
    $closingBrackets = substr_count($expression, ')');

    return ($openingBrackets === $closingBrackets) ? 'true' : 'false';
}

function validateOperandsAndOperators($expression): string
{
    // Убираем унарный минус перед первым операндом
    $expression = ltrim($expression, '-');

    // Подсчет операторов и операндов
    $operatorCount = preg_match_all('/(?<!\()[-+*\/^]/', $expression);
    $operandCount = preg_match_all('/-?\d+(\.\d+)?/', $expression);

    // Подсчет функций
    $functions = ['log']; // Можно дополнить
    $totalFunctions = 0;
    foreach ($functions as $function)
        $totalFunctions += substr_count($expression, $function);
    $operatorCount += $totalFunctions;

    return ($operatorCount === $operandCount-1) ? 'true' : 'false';
}

function validateExpression($expression): void
{
    $bracketsError = validateBrackets($expression);
    $operandsAndOperatorsError = validateOperandsAndOperators($expression);

    echo ""Validate expression:\n"";
    echo ""1. Matching the number of parentheses: $bracketsError\n"";
    echo ""2. Matching the number of operands and operators: $operandsAndOperatorsError\n"";
    $result = evaluateExpression($expression);
    $divisionByZero = (evaluateExpression($expression) === false) ? 'true' : 'false';
    echo ""3. Division by zero: $divisionByZero\n"";


    if ($bracketsError !== 'false' && $operandsAndOperatorsError !== 'false' && $divisionByZero !== 'true') {
        echo ""Result: $result\n\n"";
    } else {
        echo ""Validation failed. Unable to calculate the result.\n\n"";
    }
}

$flag = false;
while ($flag == false) {
    echo ""Input expression: "";
    $expression = readline();
    if ($expression === 'exit') {
        $flag = true;
        break;
    }
    validateExpression($expression);
}"
5TC5pWhk,++ snowybot update,coinwalk,JavaScript,Friday 22nd of September 2023 11:24:25 AM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/144000).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10000);
var sevens = (baby*7000);
var baboon = false;
var upper = 7000;
var downer = 3000;
var zoom = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 1;
var zuel = parseFloat(document.getElementById('pct_balance').value);
var bart = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if (zuel>(zoom+(moon*upper))) {
    moon = Number((moon*2).toFixed(8));
    upper = 5000;
    downer = 5000;
    zoom = parseFloat(zuel);
}
if (zuel<(zoom-(moon*downer))) {
    moon = Number((moon*2).toFixed(8));
    upper = 5000;
    downer = 5000;
    mith = 0
    zoom = parseFloat(zuel);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 7000;
    downer = 3000;
    mith = 1;
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }     
    lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
     if ((lisa > bart)&&(baboon)) {
var funeral = Number((zuel - measly).toFixed(8));
console.log(""profit"");
console.log(funeral); 
      baboon = false; 
       bart = parseFloat(lisa);
    }
    if ((lisa == bart)&&(!baboon)) { 
        baboon = true; 
        $('#pct_chance').val(0.0495);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    }
    setTimeout(() => get(), 1);
}
get();"
28i4YBqF,Json IFTTT,jensie1996,JSON,Friday 22nd of September 2023 11:18:23 AM CDT,"{ ""username"":""NAAM"", ""avatar_url"":""URL"", ""content"":""**Nieuwe video**\n\n**{{AuthorName}}** heeft een video geupload! :video_camera:\n\n{{Title}}\n\n{{Url}}"" }


{ ""username"":""NAAM"", ""avatar_url"":""URL"", ""content"":""**Nieuwe Foto**\n\n**Jens** heeft een foto op Insta geplaatst! :frame_photo:\n\n{{Caption}}\n\n[Bekijk Foto]({{Url}})"""
FdawY8Em,Untitled,remico,JavaScript,Friday 22nd of September 2023 11:16:18 AM CDT,"function fuelTank (input){
    let fuel = input [0];
    let liter = Number [1];

    if (fuel !== fuel){
            console.log (`Invalid fuel`);
    }
    else if (liter >= 25){
             console.log (`You have enough ${fuel}`);
    }else {
        console.log (`Fill your tank with ${fuel}!');
    }

}
fuelTank(['Diesel','10']);
fuelTank(['Gasoline','40']);
fuelTank(['Gas','25']);
fuelTank(['Kerosene','200']);"
XGjc0afF,Untitled,Skos_Martren,C++,Friday 22nd of September 2023 11:07:01 AM CDT,"const int ZERO = [](){

    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    return 0;
}();

class Solution {

    private:

    int ans = 0;
public:

    void Inorder(TreeNode* root, int low, int high){

        if(root == nullptr){return;}

        Inorder(root->left, low, high);

        if(low<= root->val && root->val <= high){ans+= root->val;}
        if(root->val > high){return;} // эта строка учитывает информацию о том, что дано BST -- при inorder обходе значения в узлах образуют возрастающую последовательность

        Inorder(root->right, low, high);
    }

    int rangeSumBST(TreeNode* root, int low, int high) {
        
        Inorder(root, low, high);
        return ans;
    }
};"
tV9C5CnB,фцв,Zuneve,C++,Friday 22nd of September 2023 10:59:50 AM CDT,"#include <bits/stdc++.h>

using namespace std;

using ll = long long;

const ll INF = 1e15 + 7;

vector<ll> used;
vector<ll> topsort;

void dfs_ts(ll v, vector<map<ll, ll>> &gr) {
    used[v] = true;
    for (auto [u, k] : gr[v]) {
        if (!used[u]) {
            dfs_ts(u, gr);
        }
    }
    topsort.push_back(v);
}

int main() {
    ll n, m, s, t;
    cin >> n >> m >> s >> t;
    --s;
    --t;
    vector<map<ll, ll>> gr(n);
    for (ll i = 0; i < m; i++) {
        ll a, b, c;
        cin >> a >> b >> c;
        --a;
        --b;
        gr[a][b] = c;
    }
    used.assign(n, false);
    for (ll i = 0; i < n; i++) {
        if (!used[i]) dfs_ts(i, gr);
    }
    reverse(topsort.begin(), topsort.end());
    vector<ll> dp(n, INF);
    dp[s] = 0;
    for (ll i = 0; i < n; i++) {
        if (dp[i] < INF) {
            for (auto [u, k] : gr[topsort[i]]) {
                dp[u] = min(dp[u], dp[topsort[i]] + k);
            }
        }
    }
    if (dp[t] == INF) {
        cout << ""Unreachable"";
    } else {
        cout << dp[t];
    }
    return 0;
}"
H6bDZYCx,Nigerian scammers [22-9-1/2023],bombaires,HTML,Friday 22nd of September 2023 10:45:09 AM CDT,"<a href=""mailto:rosariatomas121@gmail.com"">rosariatomas121@gmail.com</a>
<a href=""mailto:r.os.a.r.ia.tom.as.121@gmail.com"">r.os.a.r.ia.tom.as.121@gmail.com</a>
<a href=""mailto:ros.ar.i.a.tomas12.1@gmail.com"">ros.ar.i.a.tomas12.1@gmail.com</a>
<a href=""mailto:ro.sar.iat.o.mas.1.2.1@gmail.com"">ro.sar.iat.o.mas.1.2.1@gmail.com</a>
<a href=""mailto:ro.sa.r.iato.m.a.s1.2.1@gmail.com"">ro.sa.r.iato.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.sa.r.ia.to.m.a.s1.21@gmail.com"">r.o.sa.r.ia.to.m.a.s1.21@gmail.com</a>
<a href=""mailto:r.o.s.a.ri.at.om.a.s.121@gmail.com"">r.o.s.a.ri.at.om.a.s.121@gmail.com</a>
<a href=""mailto:ro.sa.ria.tom.a.s.1.2.1@gmail.com"">ro.sa.ria.tom.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sari.ato.m.a.s.1.2.1@gmail.com"">ro.sari.ato.m.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.s.aria.toma.s12.1@gmail.com"">ro.s.aria.toma.s12.1@gmail.com</a>
<a href=""mailto:r.osa.r.i.atom.as121@gmail.com"">r.osa.r.i.atom.as121@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.atom.a.s.1.2.1@gmail.com"">r.o.s.a.r.i.atom.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.t.om.as12.1@gmail.com"">ro.sar.ia.t.om.as12.1@gmail.com</a>
<a href=""mailto:ros.a.ria.to.m.a.s.1.21@gmail.com"">ros.a.ria.to.m.a.s.1.21@gmail.com</a>
<a href=""mailto:r.o.sa.ri.ato.mas12.1@gmail.com"">r.o.sa.ri.ato.mas12.1@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.at.o.m.a.s1.21@gmail.com"">r.o.s.a.r.i.at.o.m.a.s1.21@gmail.com</a>
<a href=""mailto:r.osa.r.iato.mas1.2.1@gmail.com"">r.osa.r.iato.mas1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ar.i.ato.mas121@gmail.com"">r.o.s.ar.i.ato.mas121@gmail.com</a>
<a href=""mailto:r.o.s.ar.i.atom.as.1.2.1@gmail.com"">r.o.s.ar.i.atom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ar.i.a.tom.as12.1@gmail.com"">r.o.s.ar.i.a.tom.as12.1@gmail.com</a>
<a href=""mailto:r.osa.ri.a.to.m.as.1.21@gmail.com"">r.osa.ri.a.to.m.as.1.21@gmail.com</a>
<a href=""mailto:ro.sa.r.iat.omas12.1@gmail.com"">ro.sa.r.iat.omas12.1@gmail.com</a>
<a href=""mailto:ro.s.ar.iato.m.a.s.1.2.1@gmail.com"">ro.s.ar.iato.m.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sari.atom.a.s.1.2.1@gmail.com"">ro.sari.atom.a.s.1.2.1@gmail.com</a>
<a href=""mailto:r.osari.atom.a.s1.21@gmail.com"">r.osari.atom.a.s1.21@gmail.com</a>
<a href=""mailto:rosa.r.iatom.a.s.121@gmail.com"">rosa.r.iatom.a.s.121@gmail.com</a>
<a href=""mailto:r.osari.a.t.omas.121@gmail.com"">r.osari.a.t.omas.121@gmail.com</a>
<a href=""mailto:ro.s.a.r.ia.toma.s.121@gmail.com"">ro.s.a.r.ia.toma.s.121@gmail.com</a>
<a href=""mailto:r.os.ar.iat.o.m.a.s.121@gmail.com"">r.os.ar.iat.o.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sa.r.ia.to.m.as121@gmail.com"">r.o.sa.r.ia.to.m.as121@gmail.com</a>
<a href=""mailto:r.osa.riato.m.a.s1.21@gmail.com"">r.osa.riato.m.a.s1.21@gmail.com</a>
<a href=""mailto:ro.sa.ria.to.ma.s.12.1@gmail.com"">ro.sa.ria.to.ma.s.12.1@gmail.com</a>
<a href=""mailto:r.osa.r.i.a.t.oma.s1.2.1@gmail.com"">r.osa.r.i.a.t.oma.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.ri.ato.m.a.s.12.1@gmail.com"">r.o.s.a.ri.ato.m.a.s.12.1@gmail.com</a>
<a href=""mailto:r.o.sar.i.a.t.o.m.a.s12.1@gmail.com"">r.o.sar.i.a.t.o.m.a.s12.1@gmail.com</a>
<a href=""mailto:ro.s.a.ria.tomas.121@gmail.com"">ro.s.a.ria.tomas.121@gmail.com</a>
<a href=""mailto:r.os.ari.at.o.m.a.s.1.2.1@gmail.com"">r.os.ari.at.o.m.a.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.to.mas1.21@gmail.com"">ro.sar.ia.to.mas1.21@gmail.com</a>
<a href=""mailto:r.os.a.ri.atomas.1.21@gmail.com"">r.os.a.ri.atomas.1.21@gmail.com</a>
<a href=""mailto:ros.aria.t.o.m.a.s.121@gmail.com"">ros.aria.t.o.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sar.i.a.to.m.as.1.21@gmail.com"">r.o.sar.i.a.to.m.as.1.21@gmail.com</a>
<a href=""mailto:ro.sa.r.ia.tom.a.s.12.1@gmail.com"">ro.sa.r.ia.tom.a.s.12.1@gmail.com</a>
<a href=""mailto:rosa.ri.a.t.oma.s.1.21@gmail.com"">rosa.ri.a.t.oma.s.1.21@gmail.com</a>
<a href=""mailto:r.o.s.a.riato.ma.s12.1@gmail.com"">r.o.s.a.riato.ma.s12.1@gmail.com</a>
<a href=""mailto:ro.sariat.o.m.as.121@gmail.com"">ro.sariat.o.m.as.121@gmail.com</a>
<a href=""mailto:r.o.s.a.ri.a.tom.a.s1.21@gmail.com"">r.o.s.a.ri.a.tom.a.s1.21@gmail.com</a>
<a href=""mailto:ros.ari.a.t.o.mas121@gmail.com"">ros.ari.a.t.o.mas121@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.atoma.s.121@gmail.com"">r.o.s.a.r.i.atoma.s.121@gmail.com</a>
<a href=""mailto:ros.a.riato.ma.s121@gmail.com"">ros.a.riato.ma.s121@gmail.com</a>
<a href=""mailto:ros.a.r.ia.t.om.a.s121@gmail.com"">ros.a.r.ia.t.om.a.s121@gmail.com</a>
<a href=""mailto:ros.ar.ia.tom.a.s.1.21@gmail.com"">ros.ar.ia.tom.a.s.1.21@gmail.com</a>
<a href=""mailto:r.o.sa.r.i.at.oma.s.1.2.1@gmail.com"">r.o.sa.r.i.at.oma.s.1.2.1@gmail.com</a>
<a href=""mailto:r.osar.i.ato.m.a.s121@gmail.com"">r.osar.i.ato.m.a.s121@gmail.com</a>
<a href=""mailto:r.osar.i.a.t.o.m.as12.1@gmail.com"">r.osar.i.a.t.o.m.as12.1@gmail.com</a>
<a href=""mailto:r.o.sa.ri.a.t.o.m.a.s.121@gmail.com"">r.o.sa.ri.a.t.o.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sar.ia.t.o.m.as.1.2.1@gmail.com"">r.o.sar.ia.t.o.m.as.1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.iat.o.m.as.12.1@gmail.com"">ro.sar.iat.o.m.as.12.1@gmail.com</a>
<a href=""mailto:r.o.sar.ia.t.o.m.a.s.12.1@gmail.com"">r.o.sar.ia.t.o.m.a.s.12.1@gmail.com</a>
<a href=""mailto:ro.sa.ri.ato.m.a.s.121@gmail.com"">ro.sa.ri.ato.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sariat.omas1.2.1@gmail.com"">r.o.sariat.omas1.2.1@gmail.com</a>
<a href=""mailto:rosar.iat.o.ma.s1.2.1@gmail.com"">rosar.iat.o.ma.s1.2.1@gmail.com</a>
<a href=""mailto:r.os.ariat.omas.121@gmail.com"">r.os.ariat.omas.121@gmail.com</a>
<a href=""mailto:r.o.sa.riato.ma.s12.1@gmail.com"">r.o.sa.riato.ma.s12.1@gmail.com</a>
<a href=""mailto:ro.s.a.ri.atom.as1.2.1@gmail.com"">ro.s.a.ri.atom.as1.2.1@gmail.com</a>
<a href=""mailto:rosa.r.i.a.tomas.121@gmail.com"">rosa.r.i.a.tomas.121@gmail.com</a>
<a href=""mailto:ro.sari.atom.as.121@gmail.com"">ro.sari.atom.as.121@gmail.com</a>
<a href=""mailto:r.o.sar.i.at.o.mas121@gmail.com"">r.o.sar.i.at.o.mas121@gmail.com</a>
<a href=""mailto:r.o.sa.riatoma.s1.21@gmail.com"">r.o.sa.riatoma.s1.21@gmail.com</a>
<a href=""mailto:r.o.sariato.m.as12.1@gmail.com"">r.o.sariato.m.as12.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.a.tomas.1.2.1@gmail.com"">r.o.s.ari.a.tomas.1.2.1@gmail.com</a>
<a href=""mailto:r.os.ar.i.ato.ma.s.1.2.1@gmail.com"">r.os.ar.i.ato.ma.s.1.2.1@gmail.com</a>
<a href=""mailto:r.o.sar.ia.t.o.ma.s.12.1@gmail.com"">r.o.sar.ia.t.o.ma.s.12.1@gmail.com</a>
<a href=""mailto:r.osari.at.o.mas.1.2.1@gmail.com"">r.osari.at.o.mas.1.2.1@gmail.com</a>
<a href=""mailto:r.o.sa.r.i.a.t.o.mas.121@gmail.com"">r.o.sa.r.i.a.t.o.mas.121@gmail.com</a>
<a href=""mailto:ro.sar.i.a.tomas1.2.1@gmail.com"">ro.sar.i.a.tomas1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ar.ia.tomas.12.1@gmail.com"">r.o.s.ar.ia.tomas.12.1@gmail.com</a>
<a href=""mailto:r.o.sar.iat.omas121@gmail.com"">r.o.sar.iat.omas121@gmail.com</a>
<a href=""mailto:ro.sa.r.ia.t.om.as.12.1@gmail.com"">ro.sa.r.ia.t.om.as.12.1@gmail.com</a>
<a href=""mailto:r.o.sar.iat.oma.s.1.21@gmail.com"">r.o.sar.iat.oma.s.1.21@gmail.com</a>
<a href=""mailto:r.os.ari.atomas.12.1@gmail.com"">r.os.ari.atomas.12.1@gmail.com</a>
<a href=""mailto:r.os.ari.a.to.mas1.2.1@gmail.com"">r.os.ari.a.to.mas1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.to.mas1.2.1@gmail.com"">ro.sar.ia.to.mas1.2.1@gmail.com</a>
<a href=""mailto:ros.a.ri.at.omas.121@gmail.com"">ros.a.ri.at.omas.121@gmail.com</a>
<a href=""mailto:r.osa.ria.tomas1.2.1@gmail.com"">r.osa.ria.tomas1.2.1@gmail.com</a>
<a href=""mailto:r.o.sar.i.a.to.m.a.s1.2.1@gmail.com"">r.o.sar.i.a.to.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.sari.a.to.m.as121@gmail.com"">r.o.sari.a.to.m.as121@gmail.com</a>
<a href=""mailto:r.o.sa.ri.a.t.o.mas1.2.1@gmail.com"">r.o.sa.ri.a.t.o.mas1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.r.iatom.a.s.121@gmail.com"">r.o.s.a.r.iatom.a.s.121@gmail.com</a>
<a href=""mailto:r.o.s.aria.t.om.a.s.121@gmail.com"">r.o.s.aria.t.om.a.s.121@gmail.com</a>
<a href=""mailto:r.os.ariatomas121@gmail.com"">r.os.ariatomas121@gmail.com</a>
<a href=""mailto:r.o.s.ar.ia.t.omas.1.2.1@gmail.com"">r.o.s.ar.ia.t.omas.1.2.1@gmail.com</a>
<a href=""mailto:ro.sa.ri.at.o.ma.s.12.1@gmail.com"">ro.sa.ri.at.o.ma.s.12.1@gmail.com</a>
<a href=""mailto:r.osari.a.t.o.m.as.12.1@gmail.com"">r.osari.a.t.o.m.as.12.1@gmail.com</a>
<a href=""mailto:r.os.a.r.iatom.as1.21@gmail.com"">r.os.a.r.iatom.as1.21@gmail.com</a>
<a href=""mailto:r.osar.i.a.t.oma.s1.2.1@gmail.com"">r.osar.i.a.t.oma.s1.2.1@gmail.com</a>
<a href=""mailto:r.os.ariato.m.a.s.1.2.1@gmail.com"">r.os.ariato.m.a.s.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.a.t.o.ma.s.1.2.1@gmail.com"">r.o.s.ari.a.t.o.ma.s.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.at.o.mas.12.1@gmail.com"">r.o.s.a.r.i.at.o.mas.12.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.a.tomas.12.1@gmail.com"">r.o.s.ari.a.tomas.12.1@gmail.com</a>
<a href=""mailto:ro.sari.at.o.m.a.s1.2.1@gmail.com"">ro.sari.at.o.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.sar.iato.m.as12.1@gmail.com"">r.o.sar.iato.m.as12.1@gmail.com</a>
<a href=""mailto:ros.a.r.i.a.to.m.as.1.2.1@gmail.com"">ros.a.r.i.a.to.m.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.a.t.oma.s1.2.1@gmail.com"">r.o.s.ari.a.t.oma.s1.2.1@gmail.com</a>
<a href=""mailto:rosar.ia.tom.a.s1.21@gmail.com"">rosar.ia.tom.a.s1.21@gmail.com</a>
<a href=""mailto:ro.s.a.r.iat.o.ma.s12.1@gmail.com"">ro.s.a.r.iat.o.ma.s12.1@gmail.com</a>
<a href=""mailto:r.o.s.ar.iato.ma.s.121@gmail.com"">r.o.s.ar.iato.ma.s.121@gmail.com</a>
<a href=""mailto:ros.a.riat.o.mas.1.21@gmail.com"">ros.a.riat.o.mas.1.21@gmail.com</a>
<a href=""mailto:ros.a.r.iat.oma.s.12.1@gmail.com"">ros.a.r.iat.oma.s.12.1@gmail.com</a>
<a href=""mailto:r.o.sa.r.iatom.as.1.2.1@gmail.com"">r.o.sa.r.iatom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.sari.at.oma.s.121@gmail.com"">r.o.sari.at.oma.s.121@gmail.com</a>
<a href=""mailto:ros.a.r.i.at.o.m.as121@gmail.com"">ros.a.r.i.at.o.m.as121@gmail.com</a>
<a href=""mailto:rosar.iato.m.a.s1.2.1@gmail.com"">rosar.iato.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:rosa.ri.ato.m.a.s12.1@gmail.com"">rosa.ri.ato.m.a.s12.1@gmail.com</a>
<a href=""mailto:ro.s.ari.a.toma.s12.1@gmail.com"">ro.s.ari.a.toma.s12.1@gmail.com</a>
<a href=""mailto:ro.s.a.riat.om.as.12.1@gmail.com"">ro.s.a.riat.om.as.12.1@gmail.com</a>
<a href=""mailto:ro.s.ari.a.t.omas1.21@gmail.com"">ro.s.ari.a.t.omas1.21@gmail.com</a>
<a href=""mailto:ro.s.a.r.i.a.t.om.as.121@gmail.com"">ro.s.a.r.i.a.t.om.as.121@gmail.com</a>
<a href=""mailto:rosar.ia.toma.s.1.2.1@gmail.com"">rosar.ia.toma.s.1.2.1@gmail.com</a>
<a href=""mailto:r.os.ar.iatomas121@gmail.com"">r.os.ar.iatomas121@gmail.com</a>
<a href=""mailto:r.osa.ria.toma.s1.21@gmail.com"">r.osa.ria.toma.s1.21@gmail.com</a>
<a href=""mailto:ros.a.riato.m.a.s.121@gmail.com"">ros.a.riato.m.a.s.121@gmail.com</a>
<a href=""mailto:r.o.sa.riat.om.a.s.1.2.1@gmail.com"">r.o.sa.riat.om.a.s.1.2.1@gmail.com</a>
<a href=""mailto:r.os.a.ri.at.oma.s.1.21@gmail.com"">r.os.a.ri.at.oma.s.1.21@gmail.com</a>
<a href=""mailto:ro.s.a.r.ia.to.m.a.s.12.1@gmail.com"">ro.s.a.r.ia.to.m.a.s.12.1@gmail.com</a>
<a href=""mailto:ro.sa.r.i.atoma.s12.1@gmail.com"">ro.sa.r.i.atoma.s12.1@gmail.com</a>
<a href=""mailto:r.osar.i.a.to.m.a.s.12.1@gmail.com"">r.osar.i.a.to.m.a.s.12.1@gmail.com</a>
<a href=""mailto:ros.ar.ia.tomas.121@gmail.com"">ros.ar.ia.tomas.121@gmail.com</a>
<a href=""mailto:rosa.r.ia.tom.as.121@gmail.com"">rosa.r.ia.tom.as.121@gmail.com</a>
<a href=""mailto:r.o.s.a.riat.o.m.as1.21@gmail.com"">r.o.s.a.riat.o.m.as1.21@gmail.com</a>
<a href=""mailto:ro.s.aria.t.oma.s121@gmail.com"">ro.s.aria.t.oma.s121@gmail.com</a>
<a href=""mailto:rosa.riatoma.s.12.1@gmail.com"">rosa.riatoma.s.12.1@gmail.com</a>
<a href=""mailto:ro.s.ar.i.ato.mas.1.21@gmail.com"">ro.s.ar.i.ato.mas.1.21@gmail.com</a>
<a href=""mailto:ro.sa.r.ia.tomas.1.2.1@gmail.com"">ro.sa.r.ia.tomas.1.2.1@gmail.com</a>
<a href=""mailto:ro.s.ar.ia.t.o.mas.1.21@gmail.com"">ro.s.ar.ia.t.o.mas.1.21@gmail.com</a>
<a href=""mailto:ro.sa.ri.a.t.om.a.s121@gmail.com"">ro.sa.ri.a.t.om.a.s121@gmail.com</a>
<a href=""mailto:r.os.a.riatom.as121@gmail.com"">r.os.a.riatom.as121@gmail.com</a>
<a href=""mailto:r.o.s.a.r.iat.oma.s.1.21@gmail.com"">r.o.s.a.r.iat.oma.s.1.21@gmail.com</a>
<a href=""mailto:r.o.s.aria.to.m.as1.21@gmail.com"">r.o.s.aria.to.m.as1.21@gmail.com</a>
<a href=""mailto:r.osa.ri.a.toma.s121@gmail.com"">r.osa.ri.a.toma.s121@gmail.com</a>
<a href=""mailto:r.o.s.a.r.iatom.as.1.2.1@gmail.com"">r.o.s.a.r.iatom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.ria.to.ma.s.121@gmail.com"">r.o.s.a.ria.to.ma.s.121@gmail.com</a>
<a href=""mailto:rosar.i.a.tom.a.s1.21@gmail.com"">rosar.i.a.tom.a.s1.21@gmail.com</a>
<a href=""mailto:r.os.a.riato.ma.s12.1@gmail.com"">r.os.a.riato.ma.s12.1@gmail.com</a>
<a href=""mailto:ro.s.ar.i.a.t.o.m.a.s12.1@gmail.com"">ro.s.ar.i.a.t.o.m.a.s12.1@gmail.com</a>
<a href=""mailto:ro.s.ar.ia.to.m.as1.21@gmail.com"">ro.s.ar.ia.to.m.as1.21@gmail.com</a>
<a href=""mailto:r.osari.at.omas.1.21@gmail.com"">r.osari.at.omas.1.21@gmail.com</a>
<a href=""mailto:ro.sa.ria.to.mas.121@gmail.com"">ro.sa.ria.to.mas.121@gmail.com</a>
<a href=""mailto:ro.s.ar.i.ato.m.as.1.2.1@gmail.com"">ro.s.ar.i.ato.m.as.1.2.1@gmail.com</a>
<a href=""mailto:r.osa.riatomas12.1@gmail.com"">r.osa.riatomas12.1@gmail.com</a>
<a href=""mailto:rosa.ria.t.om.as121@gmail.com"">rosa.ria.t.om.as121@gmail.com</a>
<a href=""mailto:ro.s.ar.iato.m.as1.2.1@gmail.com"">ro.s.ar.iato.m.as1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.t.om.as.12.1@gmail.com"">ro.sar.ia.t.om.as.12.1@gmail.com</a>
<a href=""mailto:r.osar.i.ato.mas.12.1@gmail.com"">r.osar.i.ato.mas.12.1@gmail.com</a>
<a href=""mailto:r.osa.ri.a.t.oma.s.121@gmail.com"">r.osa.ri.a.t.oma.s.121@gmail.com</a>
<a href=""mailto:rosa.r.iat.o.m.a.s121@gmail.com"">rosa.r.iat.o.m.a.s121@gmail.com</a>
<a href=""mailto:ro.sari.at.om.a.s121@gmail.com"">ro.sari.at.om.a.s121@gmail.com</a>
<a href=""mailto:rosa.ri.a.toma.s.1.2.1@gmail.com"">rosa.ri.a.toma.s.1.2.1@gmail.com</a>
<a href=""mailto:rosa.r.i.at.omas12.1@gmail.com"">rosa.r.i.at.omas12.1@gmail.com</a>
<a href=""mailto:ro.sa.r.i.a.t.o.m.as12.1@gmail.com"">ro.sa.r.i.a.t.o.m.as12.1@gmail.com</a>
<a href=""mailto:r.osari.at.o.m.a.s1.2.1@gmail.com"">r.osari.at.o.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:ro.sa.ria.tomas121@gmail.com"">ro.sa.ria.tomas121@gmail.com</a>
<a href=""mailto:r.o.s.ariatoma.s.12.1@gmail.com"">r.o.s.ariatoma.s.12.1@gmail.com</a>
<a href=""mailto:r.osariatomas1.21@gmail.com"">r.osariatomas1.21@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.a.t.oma.s.121@gmail.com"">r.o.s.a.r.i.a.t.oma.s.121@gmail.com</a>
<a href=""mailto:rosari.a.tom.as.12.1@gmail.com"">rosari.a.tom.as.12.1@gmail.com</a>
<a href=""mailto:r.os.a.ria.t.o.m.as1.2.1@gmail.com"">r.os.a.ria.t.o.m.as1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.ari.at.o.ma.s1.21@gmail.com"">r.o.s.ari.at.o.ma.s1.21@gmail.com</a>
<a href=""mailto:ro.sari.a.t.om.as121@gmail.com"">ro.sari.a.t.om.as121@gmail.com</a>
<a href=""mailto:ro.sa.riat.om.as12.1@gmail.com"">ro.sa.riat.om.as12.1@gmail.com</a>
<a href=""mailto:ros.ar.i.ato.ma.s.12.1@gmail.com"">ros.ar.i.ato.ma.s.12.1@gmail.com</a>
<a href=""mailto:r.os.a.ria.t.o.m.a.s.121@gmail.com"">r.os.a.ria.t.o.m.a.s.121@gmail.com</a>
<a href=""mailto:rosar.i.ato.ma.s.1.2.1@gmail.com"">rosar.i.ato.ma.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.sar.ia.t.o.m.a.s121@gmail.com"">ro.sar.ia.t.o.m.a.s121@gmail.com</a>
<a href=""mailto:r.osariat.o.m.a.s121@gmail.com"">r.osariat.o.m.a.s121@gmail.com</a>
<a href=""mailto:ro.s.ar.ia.t.o.m.as1.21@gmail.com"">ro.s.ar.ia.t.o.m.as1.21@gmail.com</a>
<a href=""mailto:ro.s.ariatoma.s1.21@gmail.com"">ro.s.ariatoma.s1.21@gmail.com</a>
<a href=""mailto:r.o.s.ar.ia.t.o.m.as12.1@gmail.com"">r.o.s.ar.ia.t.o.m.as12.1@gmail.com</a>
<a href=""mailto:rosa.ri.atom.as1.2.1@gmail.com"">rosa.ri.atom.as1.2.1@gmail.com</a>
<a href=""mailto:r.o.sari.ato.mas1.2.1@gmail.com"">r.o.sari.ato.mas1.2.1@gmail.com</a>
<a href=""mailto:ro.sa.ria.tom.as.1.2.1@gmail.com"">ro.sa.ria.tom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.osar.ia.tomas12.1@gmail.com"">r.osar.ia.tomas12.1@gmail.com</a>
<a href=""mailto:r.o.s.a.ri.at.omas.1.2.1@gmail.com"">r.o.s.a.ri.at.omas.1.2.1@gmail.com</a>
<a href=""mailto:ro.s.a.r.ia.t.oma.s.1.2.1@gmail.com"">ro.s.a.r.ia.t.oma.s.1.2.1@gmail.com</a>
<a href=""mailto:ro.s.a.riat.o.m.as121@gmail.com"">ro.s.a.riat.o.m.as121@gmail.com</a>
<a href=""mailto:rosar.i.at.o.m.a.s1.2.1@gmail.com"">rosar.i.at.o.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.os.ar.ia.tom.as.121@gmail.com"">r.os.ar.ia.tom.as.121@gmail.com</a>
<a href=""mailto:r.o.s.ar.ia.t.o.mas.121@gmail.com"">r.o.s.ar.ia.t.o.mas.121@gmail.com</a>
<a href=""mailto:r.osari.at.om.a.s.121@gmail.com"">r.osari.at.om.a.s.121@gmail.com</a>
<a href=""mailto:r.osar.ia.tom.as.1.2.1@gmail.com"">r.osar.ia.tom.as.1.2.1@gmail.com</a>
<a href=""mailto:r.o.s.a.r.i.a.to.mas1.21@gmail.com"">r.o.s.a.r.i.a.to.mas1.21@gmail.com</a>
<a href=""mailto:ro.s.a.ria.t.o.m.as.1.2.1@gmail.com"">ro.s.a.ria.t.o.m.as.1.2.1@gmail.com</a>
<a href=""mailto:ros.ariato.mas.12.1@gmail.com"">ros.ariato.mas.12.1@gmail.com</a>
<a href=""mailto:ro.sa.r.i.a.t.o.mas.121@gmail.com"">ro.sa.r.i.a.t.o.mas.121@gmail.com</a>
<a href=""mailto:r.os.a.r.i.at.om.a.s.1.2.1@gmail.com"">r.os.a.r.i.at.om.a.s.1.2.1@gmail.com</a>
<a href=""mailto:r.os.a.r.i.ato.m.a.s1.21@gmail.com"">r.os.a.r.i.ato.m.a.s1.21@gmail.com</a>
<a href=""mailto:r.os.a.r.iat.o.mas12.1@gmail.com"">r.os.a.r.iat.o.mas12.1@gmail.com</a>
<a href=""mailto:rosar.i.at.o.mas1.21@gmail.com"">rosar.i.at.o.mas1.21@gmail.com</a>
<a href=""mailto:ros.ari.ato.m.as.121@gmail.com"">ros.ari.ato.m.as.121@gmail.com</a>
<a href=""mailto:r.o.s.ari.at.o.m.a.s1.2.1@gmail.com"">r.o.s.ari.at.o.m.a.s1.2.1@gmail.com</a>
<a href=""mailto:r.o.sa.ri.at.o.m.a.s12.1@gmail.com"">r.o.sa.ri.at.o.m.a.s12.1@gmail.com</a>
<a href=""mailto:ros.ari.at.o.m.as.1.2.1@gmail.com"">ros.ari.at.o.m.as.1.2.1@gmail.com</a>
<a href=""mailto:imfheadquartersim31@gmail.com"">imfheadquartersim31@gmail.com</a>
<a href=""mailto:imfhea.d.quarters.im31@gmail.com"">imfhea.d.quarters.im31@gmail.com</a>
<a href=""mailto:imf.h.e.a.d.quar.te.r.si.m.3.1@gmail.com"">imf.h.e.a.d.quar.te.r.si.m.3.1@gmail.com</a>
<a href=""mailto:imfh.eadq.u.arter.sim31@gmail.com"">imfh.eadq.u.arter.sim31@gmail.com</a>
<a href=""mailto:i.mfh.e.a.dq.uarte.r.s.im31@gmail.com"">i.mfh.e.a.dq.uarte.r.s.im31@gmail.com</a>
<a href=""mailto:i.mfh.e.adq.uar.te.rsi.m.31@gmail.com"">i.mfh.e.adq.uar.te.rsi.m.31@gmail.com</a>
<a href=""mailto:i.m.f.he.ad.qua.r.te.r.s.i.m3.1@gmail.com"">i.m.f.he.ad.qua.r.te.r.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.mfhe.ad.q.ua.rt.er.s.i.m3.1@gmail.com"">i.mfhe.ad.q.ua.rt.er.s.i.m3.1@gmail.com</a>
<a href=""mailto:im.fh.e.adquar.ter.si.m31@gmail.com"">im.fh.e.adquar.ter.si.m31@gmail.com</a>
<a href=""mailto:im.fhead.qua.rt.er.s.im3.1@gmail.com"">im.fhead.qua.rt.er.s.im3.1@gmail.com</a>
<a href=""mailto:imf.h.ea.dq.uarte.rsim31@gmail.com"">imf.h.ea.dq.uarte.rsim31@gmail.com</a>
<a href=""mailto:i.mf.hea.dq.u.a.r.t.ers.i.m.3.1@gmail.com"">i.mf.hea.dq.u.a.r.t.ers.i.m.3.1@gmail.com</a>
<a href=""mailto:im.fhea.dquarter.s.im31@gmail.com"">im.fhea.dquarter.s.im31@gmail.com</a>
<a href=""mailto:i.mf.hea.dqu.a.rter.s.i.m.31@gmail.com"">i.mf.hea.dqu.a.rter.s.i.m.31@gmail.com</a>
<a href=""mailto:im.f.h.e.a.d.q.u.a.rt.e.rsim31@gmail.com"">im.f.h.e.a.d.q.u.a.rt.e.rsim31@gmail.com</a>
<a href=""mailto:i.mfh.ea.dqu.a.r.te.r.sim3.1@gmail.com"">i.mfh.ea.dqu.a.r.te.r.sim3.1@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dq.ua.rter.s.im.3.1@gmail.com"">i.m.fh.e.a.dq.ua.rter.s.im.3.1@gmail.com</a>
<a href=""mailto:im.f.he.ad.q.u.a.rter.si.m31@gmail.com"">im.f.he.ad.q.u.a.rter.si.m31@gmail.com</a>
<a href=""mailto:i.mfhead.qu.a.r.t.ersi.m.31@gmail.com"">i.mfhead.qu.a.r.t.ersi.m.31@gmail.com</a>
<a href=""mailto:imfh.e.ad.qu.a.r.t.er.si.m.31@gmail.com"">imfh.e.ad.qu.a.r.t.er.si.m.31@gmail.com</a>
<a href=""mailto:i.mf.he.a.d.qu.ar.t.e.rs.i.m31@gmail.com"">i.mf.he.a.d.qu.ar.t.e.rs.i.m31@gmail.com</a>
<a href=""mailto:i.mf.h.e.a.dqu.ar.te.rsi.m31@gmail.com"">i.mf.h.e.a.dqu.ar.te.rsi.m31@gmail.com</a>
<a href=""mailto:imf.h.e.a.dq.u.a.rte.r.s.i.m.3.1@gmail.com"">imf.h.e.a.dq.u.a.rte.r.s.i.m.3.1@gmail.com</a>
<a href=""mailto:imfh.ead.quar.ters.i.m.3.1@gmail.com"">imfh.ead.quar.ters.i.m.3.1@gmail.com</a>
<a href=""mailto:imf.head.quar.ters.im31@gmail.com"">imf.head.quar.ters.im31@gmail.com</a>
<a href=""mailto:i.m.f.he.ad.q.u.art.e.rs.im31@gmail.com"">i.m.f.he.ad.q.u.art.e.rs.im31@gmail.com</a>
<a href=""mailto:i.m.f.h.ead.qu.artersi.m.31@gmail.com"">i.m.f.h.ead.qu.artersi.m.31@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.q.uar.t.e.rsi.m.3.1@gmail.com"">i.mfh.e.ad.q.uar.t.e.rsi.m.3.1@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.ua.r.tersi.m.31@gmail.com"">imf.h.e.ad.q.ua.r.tersi.m.31@gmail.com</a>
<a href=""mailto:im.fhead.qua.rt.e.r.s.i.m31@gmail.com"">im.fhead.qua.rt.e.r.s.i.m31@gmail.com</a>
<a href=""mailto:imfhe.ad.q.u.a.rter.sim.31@gmail.com"">imfhe.ad.q.u.a.rter.sim.31@gmail.com</a>
<a href=""mailto:i.m.f.h.ea.d.q.uar.t.e.r.sim.3.1@gmail.com"">i.m.f.h.ea.d.q.uar.t.e.r.sim.3.1@gmail.com</a>
<a href=""mailto:imf.headqu.art.ersi.m.31@gmail.com"">imf.headqu.art.ersi.m.31@gmail.com</a>
<a href=""mailto:im.f.he.a.d.qu.a.rte.r.s.im3.1@gmail.com"">im.f.he.a.d.qu.a.rte.r.s.im3.1@gmail.com</a>
<a href=""mailto:i.mf.he.a.d.quar.te.rsim.3.1@gmail.com"">i.mf.he.a.d.quar.te.rsim.3.1@gmail.com</a>
<a href=""mailto:im.f.h.ea.d.q.u.a.rt.e.r.s.i.m.31@gmail.com"">im.f.h.ea.d.q.u.a.rt.e.r.s.i.m.31@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.ua.r.t.e.r.s.im.31@gmail.com"">i.m.f.h.e.ad.q.ua.r.t.e.r.s.im.31@gmail.com</a>
<a href=""mailto:im.fhe.a.d.quar.te.r.s.i.m3.1@gmail.com"">im.fhe.a.d.quar.te.r.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.fh.eadq.uart.e.rs.im31@gmail.com"">i.m.fh.eadq.uart.e.rs.im31@gmail.com</a>
<a href=""mailto:i.mf.hea.dqua.r.te.rsi.m.31@gmail.com"">i.mf.hea.dqua.r.te.rsi.m.31@gmail.com</a>
<a href=""mailto:i.m.fh.ea.dquar.t.e.r.sim3.1@gmail.com"">i.m.fh.ea.dquar.t.e.r.sim3.1@gmail.com</a>
<a href=""mailto:i.mf.head.q.u.a.r.ters.im.3.1@gmail.com"">i.mf.head.q.u.a.r.ters.im.3.1@gmail.com</a>
<a href=""mailto:im.fheadq.u.ar.t.e.rsim3.1@gmail.com"">im.fheadq.u.ar.t.e.rsim3.1@gmail.com</a>
<a href=""mailto:imf.h.e.ad.qua.rt.e.r.sim31@gmail.com"">imf.h.e.ad.qua.rt.e.r.sim31@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.q.uart.ersim31@gmail.com"">i.mfh.e.ad.q.uart.ersim31@gmail.com</a>
<a href=""mailto:im.fhe.ad.q.ua.rt.ers.im.31@gmail.com"">im.fhe.ad.q.ua.rt.ers.im.31@gmail.com</a>
<a href=""mailto:imf.hea.dqu.art.ers.i.m3.1@gmail.com"">imf.hea.dqu.art.ers.i.m3.1@gmail.com</a>
<a href=""mailto:im.fhea.d.qua.r.ter.s.im3.1@gmail.com"">im.fhea.d.qua.r.ter.s.im3.1@gmail.com</a>
<a href=""mailto:im.f.hea.dqu.art.er.s.i.m31@gmail.com"">im.f.hea.dqu.art.er.s.i.m31@gmail.com</a>
<a href=""mailto:im.f.hea.d.qu.a.rtersi.m.3.1@gmail.com"">im.f.hea.d.qu.a.rtersi.m.3.1@gmail.com</a>
<a href=""mailto:im.fhead.quart.er.sim.31@gmail.com"">im.fhead.quart.er.sim.31@gmail.com</a>
<a href=""mailto:i.m.fh.ead.q.u.a.rtersi.m31@gmail.com"">i.m.fh.ead.q.u.a.rtersi.m31@gmail.com</a>
<a href=""mailto:im.fh.ead.q.u.a.r.t.er.si.m31@gmail.com"">im.fh.ead.q.u.a.r.t.er.si.m31@gmail.com</a>
<a href=""mailto:imf.h.e.a.dq.uart.ers.im.3.1@gmail.com"">imf.h.e.a.dq.uart.ers.im.3.1@gmail.com</a>
<a href=""mailto:im.f.he.a.dq.u.a.rter.s.i.m.3.1@gmail.com"">im.f.he.a.dq.u.a.rter.s.i.m.3.1@gmail.com</a>
<a href=""mailto:im.f.h.e.a.d.qu.ar.ter.s.im.31@gmail.com"">im.f.h.e.a.d.qu.ar.ter.s.im.31@gmail.com</a>
<a href=""mailto:i.mf.headquar.ters.i.m.31@gmail.com"">i.mf.headquar.ters.i.m.31@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.u.ar.t.e.r.si.m.31@gmail.com"">imf.h.e.ad.q.u.ar.t.e.r.si.m.31@gmail.com</a>
<a href=""mailto:imfh.ead.quar.te.rsim.3.1@gmail.com"">imfh.ead.quar.te.rsim.3.1@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dq.ua.rte.r.si.m3.1@gmail.com"">i.m.fh.e.a.dq.ua.rte.r.si.m3.1@gmail.com</a>
<a href=""mailto:imf.h.ead.q.uartersim.3.1@gmail.com"">imf.h.ead.q.uartersim.3.1@gmail.com</a>
<a href=""mailto:i.mfh.eadquarte.rsim.3.1@gmail.com"">i.mfh.eadquarte.rsim.3.1@gmail.com</a>
<a href=""mailto:i.mf.he.a.d.qu.art.e.r.sim3.1@gmail.com"">i.mf.he.a.d.qu.art.e.r.sim3.1@gmail.com</a>
<a href=""mailto:imfheadq.u.a.r.t.er.si.m.31@gmail.com"">imfheadq.u.a.r.t.er.si.m.31@gmail.com</a>
<a href=""mailto:im.fhe.a.dq.uar.t.er.s.im.31@gmail.com"">im.fhe.a.dq.uar.t.er.s.im.31@gmail.com</a>
<a href=""mailto:i.m.fheadq.ua.rters.im.31@gmail.com"">i.m.fheadq.ua.rters.im.31@gmail.com</a>
<a href=""mailto:im.fh.ea.d.q.u.a.r.t.ersi.m.31@gmail.com"">im.fh.ea.d.q.u.a.r.t.ersi.m.31@gmail.com</a>
<a href=""mailto:im.fh.eadqua.r.ter.si.m.3.1@gmail.com"">im.fh.eadqua.r.ter.si.m.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.dq.uarte.r.s.i.m31@gmail.com"">i.m.f.h.e.a.dq.uarte.r.s.i.m31@gmail.com</a>
<a href=""mailto:imfh.e.ad.q.u.art.ers.im.3.1@gmail.com"">imfh.e.ad.q.u.art.ers.im.3.1@gmail.com</a>
<a href=""mailto:im.f.he.adq.u.art.e.r.si.m31@gmail.com"">im.f.he.adq.u.art.e.r.si.m31@gmail.com</a>
<a href=""mailto:i.mf.head.q.ua.r.t.er.si.m.31@gmail.com"">i.mf.head.q.ua.r.t.er.si.m.31@gmail.com</a>
<a href=""mailto:i.mfh.e.a.d.q.uar.te.r.sim.3.1@gmail.com"">i.mfh.e.a.d.q.uar.te.r.sim.3.1@gmail.com</a>
<a href=""mailto:im.fhe.ad.qu.a.rte.r.sim.31@gmail.com"">im.fhe.ad.qu.a.rte.r.sim.31@gmail.com</a>
<a href=""mailto:im.fheadqua.r.t.er.s.i.m31@gmail.com"">im.fheadqua.r.t.er.s.i.m31@gmail.com</a>
<a href=""mailto:im.f.head.q.ua.rter.s.i.m31@gmail.com"">im.f.head.q.ua.rter.s.i.m31@gmail.com</a>
<a href=""mailto:im.fh.e.ad.qua.rt.e.rs.im.31@gmail.com"">im.fh.e.ad.qua.rt.e.rs.im.31@gmail.com</a>
<a href=""mailto:i.m.f.hea.dquart.e.r.s.im.3.1@gmail.com"">i.m.f.hea.dquart.e.r.s.im.3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.adq.u.a.rt.e.r.si.m3.1@gmail.com"">i.mfh.e.adq.u.a.rt.e.r.si.m3.1@gmail.com</a>
<a href=""mailto:im.f.h.ea.d.qu.a.r.t.ers.im31@gmail.com"">im.f.h.ea.d.qu.a.r.t.ers.im31@gmail.com</a>
<a href=""mailto:im.fhea.dq.u.a.r.te.r.s.i.m31@gmail.com"">im.fhea.dq.u.a.r.te.r.s.i.m31@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.quart.er.s.im3.1@gmail.com"">i.mfh.e.ad.quart.er.s.im3.1@gmail.com</a>
<a href=""mailto:im.f.h.eadqu.ar.ter.s.im3.1@gmail.com"">im.f.h.eadqu.ar.ter.s.im3.1@gmail.com</a>
<a href=""mailto:i.m.fhead.qua.r.t.e.r.s.im.3.1@gmail.com"">i.m.fhead.qua.r.t.e.r.s.im.3.1@gmail.com</a>
<a href=""mailto:imfhe.a.dq.ua.r.t.er.s.i.m.3.1@gmail.com"">imfhe.a.dq.ua.r.t.er.s.i.m.3.1@gmail.com</a>
<a href=""mailto:imf.he.a.d.q.uart.ers.i.m.3.1@gmail.com"">imf.he.a.d.q.uart.ers.i.m.3.1@gmail.com</a>
<a href=""mailto:imfhe.a.dq.u.arter.s.i.m31@gmail.com"">imfhe.a.dq.u.arter.s.i.m31@gmail.com</a>
<a href=""mailto:im.fhe.ad.q.ua.r.te.r.si.m.31@gmail.com"">im.fhe.ad.q.ua.r.te.r.si.m.31@gmail.com</a>
<a href=""mailto:imfhea.dq.ua.rtersi.m31@gmail.com"">imfhea.dq.ua.rtersi.m31@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dqu.a.rter.si.m.31@gmail.com"">i.m.fh.e.a.dqu.a.rter.si.m.31@gmail.com</a>
<a href=""mailto:im.fhe.a.d.q.uar.t.e.r.sim31@gmail.com"">im.fhe.a.d.q.uar.t.e.r.sim31@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.ua.r.ters.i.m.3.1@gmail.com"">i.m.f.h.e.ad.q.ua.r.ters.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.qu.ar.t.ers.im3.1@gmail.com"">i.mfh.e.ad.qu.ar.t.ers.im3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.ad.q.u.ar.t.e.r.s.im.31@gmail.com"">i.mfh.e.ad.q.u.ar.t.e.r.s.im.31@gmail.com</a>
<a href=""mailto:i.mf.h.ea.d.q.ua.r.t.e.r.si.m.3.1@gmail.com"">i.mf.h.ea.d.q.ua.r.t.e.r.si.m.3.1@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.u.ar.t.e.r.sim.31@gmail.com"">imf.h.e.ad.q.u.ar.t.e.r.sim.31@gmail.com</a>
<a href=""mailto:i.mfh.e.adquarter.s.i.m.3.1@gmail.com"">i.mfh.e.adquarter.s.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mf.headq.ua.r.te.r.si.m31@gmail.com"">i.mf.headq.ua.r.te.r.si.m31@gmail.com</a>
<a href=""mailto:im.f.hea.dquart.ers.i.m.31@gmail.com"">im.f.hea.dquart.ers.i.m.31@gmail.com</a>
<a href=""mailto:imf.h.eadqu.a.rte.r.s.i.m.3.1@gmail.com"">imf.h.eadqu.a.rte.r.s.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mfh.ead.q.uart.e.rs.i.m.3.1@gmail.com"">i.mfh.ead.q.uart.e.rs.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mfhe.a.d.quar.ter.s.i.m3.1@gmail.com"">i.mfhe.a.d.quar.ter.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.he.a.dq.uarter.s.i.m3.1@gmail.com"">i.m.f.he.a.dq.uarter.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.he.a.dq.u.a.r.t.e.r.s.i.m3.1@gmail.com"">i.m.f.he.a.dq.u.a.r.t.e.r.s.i.m3.1@gmail.com</a>
<a href=""mailto:im.f.h.eadqu.arters.im31@gmail.com"">im.f.h.eadqu.arters.im31@gmail.com</a>
<a href=""mailto:im.f.h.ea.d.q.u.a.rt.e.r.s.im.31@gmail.com"">im.f.h.ea.d.q.u.a.rt.e.r.s.im.31@gmail.com</a>
<a href=""mailto:im.f.he.a.d.quart.e.rs.im.31@gmail.com"">im.f.he.a.d.quart.e.rs.im.31@gmail.com</a>
<a href=""mailto:i.mfhead.qua.rter.sim.3.1@gmail.com"">i.mfhead.qua.rter.sim.3.1@gmail.com</a>
<a href=""mailto:i.mf.head.qu.art.er.s.im31@gmail.com"">i.mf.head.qu.art.er.s.im31@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.d.q.ua.rte.r.si.m31@gmail.com"">i.m.f.h.e.a.d.q.ua.rte.r.si.m31@gmail.com</a>
<a href=""mailto:im.fh.e.a.dq.uart.e.rsi.m.31@gmail.com"">im.fh.e.a.dq.uart.e.rsi.m.31@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dquar.t.e.r.s.i.m.31@gmail.com"">i.m.fh.e.a.dquar.t.e.r.s.i.m.31@gmail.com</a>
<a href=""mailto:i.m.f.hea.dq.ua.r.te.r.s.i.m.3.1@gmail.com"">i.m.f.hea.dq.ua.r.te.r.s.i.m.3.1@gmail.com</a>
<a href=""mailto:im.f.h.ea.d.qu.a.rt.er.s.im3.1@gmail.com"">im.f.h.ea.d.qu.a.rt.er.s.im3.1@gmail.com</a>
<a href=""mailto:i.mfhe.a.d.q.u.arte.rs.im.3.1@gmail.com"">i.mfhe.a.d.q.u.arte.rs.im.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.ea.d.q.uar.te.rs.im31@gmail.com"">i.m.f.h.ea.d.q.uar.te.rs.im31@gmail.com</a>
<a href=""mailto:i.mfh.ead.q.uar.te.rs.i.m31@gmail.com"">i.mfh.ead.q.uar.te.rs.i.m31@gmail.com</a>
<a href=""mailto:i.mf.he.ad.q.uarte.r.s.i.m.31@gmail.com"">i.mf.he.ad.q.uarte.r.s.i.m.31@gmail.com</a>
<a href=""mailto:imf.head.qu.arters.i.m31@gmail.com"">imf.head.qu.arters.i.m31@gmail.com</a>
<a href=""mailto:i.mf.h.e.a.d.qu.a.rt.er.s.i.m3.1@gmail.com"">i.mf.h.e.a.d.qu.a.rt.er.s.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.uarte.r.sim31@gmail.com"">i.m.f.h.e.ad.q.uarte.r.sim31@gmail.com</a>
<a href=""mailto:imfh.ea.dq.u.art.e.r.si.m.31@gmail.com"">imfh.ea.dq.u.art.e.r.si.m.31@gmail.com</a>
<a href=""mailto:im.f.h.ea.dqua.rte.r.s.im.3.1@gmail.com"">im.f.h.ea.dqua.rte.r.s.im.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.uar.ter.sim3.1@gmail.com"">i.m.f.h.e.ad.q.uar.ter.sim3.1@gmail.com</a>
<a href=""mailto:imf.he.a.dqua.rter.si.m31@gmail.com"">imf.he.a.dqua.rter.si.m31@gmail.com</a>
<a href=""mailto:i.mfhe.a.d.quar.t.er.s.i.m.31@gmail.com"">i.mfhe.a.d.quar.t.er.s.i.m.31@gmail.com</a>
<a href=""mailto:imf.he.adqu.a.rt.e.r.s.i.m31@gmail.com"">imf.he.adqu.a.rt.e.r.s.i.m31@gmail.com</a>
<a href=""mailto:imf.he.adq.ua.rt.er.s.im.31@gmail.com"">imf.he.adq.ua.rt.er.s.im.31@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.u.ar.ters.i.m.31@gmail.com"">imf.h.e.ad.q.u.ar.ters.i.m.31@gmail.com</a>
<a href=""mailto:im.f.h.eadquart.ersim31@gmail.com"">im.f.h.eadquart.ersim31@gmail.com</a>
<a href=""mailto:i.mf.h.ea.d.q.ua.rters.i.m.31@gmail.com"">i.mf.h.ea.d.q.ua.rters.i.m.31@gmail.com</a>
<a href=""mailto:imf.he.ad.q.uar.t.e.rs.i.m.31@gmail.com"">imf.he.ad.q.uar.t.e.rs.i.m.31@gmail.com</a>
<a href=""mailto:imf.h.e.ad.q.uar.ter.sim3.1@gmail.com"">imf.h.e.ad.q.uar.ter.sim3.1@gmail.com</a>
<a href=""mailto:imfhea.dqu.ar.t.ersi.m.3.1@gmail.com"">imfhea.dqu.ar.t.ersi.m.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.d.qu.a.r.ter.si.m31@gmail.com"">i.m.f.h.e.a.d.qu.a.r.ter.si.m31@gmail.com</a>
<a href=""mailto:i.mf.he.adq.ua.r.tersi.m31@gmail.com"">i.mf.he.adq.ua.r.tersi.m31@gmail.com</a>
<a href=""mailto:i.m.fhead.qu.a.rte.r.s.im3.1@gmail.com"">i.m.fhead.qu.a.rte.r.s.im3.1@gmail.com</a>
<a href=""mailto:im.f.he.a.d.quar.te.rsim.31@gmail.com"">im.f.he.a.d.quar.te.rsim.31@gmail.com</a>
<a href=""mailto:imfh.ea.dq.ua.rte.r.si.m3.1@gmail.com"">imfh.ea.dq.ua.rte.r.si.m3.1@gmail.com</a>
<a href=""mailto:imfh.ea.dq.ua.r.t.ers.i.m3.1@gmail.com"">imfh.ea.dq.ua.r.t.ers.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.d.qua.r.t.e.r.s.im31@gmail.com"">i.m.f.h.e.a.d.qua.r.t.e.r.s.im31@gmail.com</a>
<a href=""mailto:i.mfh.e.a.dq.u.a.r.te.r.si.m.31@gmail.com"">i.mfh.e.a.dq.u.a.r.te.r.si.m.31@gmail.com</a>
<a href=""mailto:im.fhe.a.d.q.ua.rt.er.s.i.m31@gmail.com"">im.fhe.a.d.q.ua.rt.er.s.i.m31@gmail.com</a>
<a href=""mailto:imf.hea.dqu.a.rter.si.m.3.1@gmail.com"">imf.hea.dqu.a.rter.si.m.3.1@gmail.com</a>
<a href=""mailto:i.mf.h.e.a.dqu.ar.t.ers.i.m3.1@gmail.com"">i.mf.h.e.a.dqu.ar.t.ers.i.m3.1@gmail.com</a>
<a href=""mailto:imf.he.adquarte.r.s.im31@gmail.com"">imf.he.adquarte.r.s.im31@gmail.com</a>
<a href=""mailto:i.mfhe.a.d.q.u.a.rte.r.s.i.m.3.1@gmail.com"">i.mfhe.a.d.q.u.a.rte.r.s.i.m.3.1@gmail.com</a>
<a href=""mailto:im.f.he.a.d.qua.r.t.e.r.si.m3.1@gmail.com"">im.f.he.a.d.qua.r.t.e.r.si.m3.1@gmail.com</a>
<a href=""mailto:imfh.ea.d.q.ua.rter.sim.31@gmail.com"">imfh.ea.d.q.ua.rter.sim.31@gmail.com</a>
<a href=""mailto:i.mfh.e.a.d.q.u.arte.r.s.i.m.31@gmail.com"">i.mfh.e.a.d.q.u.arte.r.s.i.m.31@gmail.com</a>
<a href=""mailto:i.m.fhea.dquart.ers.i.m3.1@gmail.com"">i.m.fhea.dquart.ers.i.m3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.adq.uar.t.er.si.m31@gmail.com"">i.mfh.e.adq.uar.t.er.si.m31@gmail.com</a>
<a href=""mailto:imfhea.dq.ua.rt.ersi.m.3.1@gmail.com"">imfhea.dq.ua.rt.ersi.m.3.1@gmail.com</a>
<a href=""mailto:imf.he.a.d.q.u.artersi.m.31@gmail.com"">imf.he.a.d.q.u.artersi.m.31@gmail.com</a>
<a href=""mailto:i.m.f.he.a.d.q.u.ar.t.e.rsi.m.31@gmail.com"">i.m.f.he.a.d.q.u.ar.t.e.rsi.m.31@gmail.com</a>
<a href=""mailto:im.fhe.ad.q.u.ar.t.e.rs.im.3.1@gmail.com"">im.fhe.ad.q.u.ar.t.e.rs.im.3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.adqu.a.r.t.e.rs.i.m.3.1@gmail.com"">i.mfh.e.adqu.a.r.t.e.rs.i.m.3.1@gmail.com</a>
<a href=""mailto:i.mf.headq.uar.te.r.si.m.3.1@gmail.com"">i.mf.headq.uar.te.r.si.m.3.1@gmail.com</a>
<a href=""mailto:imfh.ea.d.qua.rte.rs.im3.1@gmail.com"">imfh.ea.d.qua.rte.rs.im3.1@gmail.com</a>
<a href=""mailto:i.mfhea.dqu.a.rtersi.m.3.1@gmail.com"">i.mfhea.dqu.a.rtersi.m.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.q.uart.e.rs.im.31@gmail.com"">i.m.f.h.e.ad.q.uart.e.rs.im.31@gmail.com</a>
<a href=""mailto:i.m.f.he.a.dq.uar.ter.s.im.3.1@gmail.com"">i.m.f.he.a.dq.uar.ter.s.im.3.1@gmail.com</a>
<a href=""mailto:im.fh.e.a.d.qua.rt.e.rs.im.31@gmail.com"">im.fh.e.a.d.qua.rt.e.rs.im.31@gmail.com</a>
<a href=""mailto:imfhea.d.quarte.rs.i.m.31@gmail.com"">imfhea.d.quarte.rs.i.m.31@gmail.com</a>
<a href=""mailto:i.m.fhea.d.qua.rt.ersim.3.1@gmail.com"">i.m.fhea.d.qua.rt.ersim.3.1@gmail.com</a>
<a href=""mailto:i.mf.he.adquar.t.ersi.m.3.1@gmail.com"">i.mf.he.adquar.t.ersi.m.3.1@gmail.com</a>
<a href=""mailto:imf.head.qu.a.r.ters.i.m.3.1@gmail.com"">imf.head.qu.a.r.ters.i.m.3.1@gmail.com</a>
<a href=""mailto:i.m.fhead.qu.a.rt.ers.im31@gmail.com"">i.m.fhead.qu.a.rt.ers.im31@gmail.com</a>
<a href=""mailto:im.fhe.adqu.a.r.t.e.rs.im.3.1@gmail.com"">im.fhe.adqu.a.r.t.e.rs.im.3.1@gmail.com</a>
<a href=""mailto:i.mf.he.a.d.qua.r.t.ersim31@gmail.com"">i.mf.he.a.d.qua.r.t.ersim31@gmail.com</a>
<a href=""mailto:im.fh.ea.dq.u.art.e.rsi.m.3.1@gmail.com"">im.fh.ea.dq.u.art.e.rsi.m.3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.ad.quar.t.e.rsi.m31@gmail.com"">i.m.f.h.e.ad.quar.t.e.rsi.m31@gmail.com</a>
<a href=""mailto:im.fh.e.a.d.qua.rte.rs.i.m3.1@gmail.com"">im.fh.e.a.d.qua.rte.rs.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.a.d.q.ua.r.ters.im31@gmail.com"">i.m.f.h.e.a.d.q.ua.r.ters.im31@gmail.com</a>
<a href=""mailto:imfh.e.a.d.qua.r.ter.s.i.m31@gmail.com"">imfh.e.a.d.qua.r.ter.s.i.m31@gmail.com</a>
<a href=""mailto:imfh.ea.dq.uarte.rsim3.1@gmail.com"">imfh.ea.dq.uarte.rsim3.1@gmail.com</a>
<a href=""mailto:i.m.f.head.q.ua.rt.er.s.im3.1@gmail.com"">i.m.f.head.q.ua.rt.er.s.im3.1@gmail.com</a>
<a href=""mailto:imf.h.ead.q.ua.rter.si.m.31@gmail.com"">imf.h.ead.q.ua.rter.si.m.31@gmail.com</a>
<a href=""mailto:i.m.f.he.ad.q.u.a.r.t.er.si.m.3.1@gmail.com"">i.m.f.he.ad.q.u.a.r.t.er.si.m.3.1@gmail.com</a>
<a href=""mailto:imfheadq.uar.te.r.si.m.3.1@gmail.com"">imfheadq.uar.te.r.si.m.3.1@gmail.com</a>
<a href=""mailto:i.mfh.e.a.dq.uarte.r.si.m3.1@gmail.com"">i.mfh.e.a.dq.uarte.r.si.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.h.e.adq.u.a.r.te.rs.i.m.31@gmail.com"">i.m.f.h.e.adq.u.a.r.te.rs.i.m.31@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.d.quar.t.e.rs.i.m.3.1@gmail.com"">i.m.fh.e.a.d.quar.t.e.rs.i.m.3.1@gmail.com</a>
<a href=""mailto:imfhe.a.dqu.arters.i.m3.1@gmail.com"">imfhe.a.dqu.arters.i.m3.1@gmail.com</a>
<a href=""mailto:i.mfhe.adqua.r.ters.im.31@gmail.com"">i.mfhe.adqua.r.ters.im.31@gmail.com</a>
<a href=""mailto:i.mf.h.eadqua.r.t.e.r.si.m.3.1@gmail.com"">i.mf.h.eadqua.r.t.e.r.si.m.3.1@gmail.com</a>
<a href=""mailto:im.f.hea.d.q.u.a.rte.r.si.m3.1@gmail.com"">im.f.hea.d.q.u.a.rte.r.si.m3.1@gmail.com</a>
<a href=""mailto:i.m.fh.eadq.ua.rt.e.r.si.m31@gmail.com"">i.m.fh.eadq.ua.rt.e.r.si.m31@gmail.com</a>
<a href=""mailto:imf.h.ea.d.qu.a.rte.rs.im.3.1@gmail.com"">imf.h.ea.d.qu.a.rte.rs.im.3.1@gmail.com</a>
<a href=""mailto:i.mfhe.adqu.ar.t.er.s.im.3.1@gmail.com"">i.mfhe.adqu.ar.t.er.s.im.3.1@gmail.com</a>
<a href=""mailto:i.mf.h.e.adq.u.a.rt.e.r.sim.3.1@gmail.com"">i.mf.h.e.adq.u.a.rt.e.r.sim.3.1@gmail.com</a>
<a href=""mailto:i.m.f.he.adq.u.arte.rsim3.1@gmail.com"">i.m.f.he.adq.u.arte.rsim3.1@gmail.com</a>
<a href=""mailto:imfh.e.a.dqu.a.rter.sim.3.1@gmail.com"">imfh.e.a.dqu.a.rter.sim.3.1@gmail.com</a>
<a href=""mailto:im.fhe.ad.qu.artersim.3.1@gmail.com"">im.fhe.ad.qu.artersim.3.1@gmail.com</a>
<a href=""mailto:im.f.headqu.a.rte.r.s.im.31@gmail.com"">im.f.headqu.a.rte.r.s.im.31@gmail.com</a>
<a href=""mailto:i.m.f.headq.u.a.r.t.e.rs.i.m3.1@gmail.com"">i.m.f.headq.u.a.r.t.e.rs.i.m3.1@gmail.com</a>
<a href=""mailto:i.m.f.hea.d.q.ua.rt.er.sim3.1@gmail.com"">i.m.f.hea.d.q.ua.rt.er.sim3.1@gmail.com</a>
<a href=""mailto:i.m.fh.e.a.dqua.rters.i.m31@gmail.com"">i.m.fh.e.a.dqua.rters.i.m31@gmail.com</a>
<a href=""mailto:im.fh.eadqua.r.t.ers.im3.1@gmail.com"">im.fh.eadqua.r.t.ers.im3.1@gmail.com</a>
<a href=""mailto:imfh.e.a.dq.u.a.rt.ersim.31@gmail.com"">imfh.e.a.dq.u.a.rt.ersim.31@gmail.com</a>
<a href=""mailto:imf.h.ead.q.u.ar.ter.s.im.31@gmail.com"">imf.h.ead.q.u.ar.ter.s.im.31@gmail.com</a>
<a href=""mailto:lilianchinyere23@gmail.com"">lilianchinyere23@gmail.com</a>
<a href=""mailto:l.il.ianc.hi.ny.ere.23@gmail.com"">l.il.ianc.hi.ny.ere.23@gmail.com</a>
<a href=""mailto:l.i.li.a.n.ch.i.n.yere.23@gmail.com"">l.i.li.a.n.ch.i.n.yere.23@gmail.com</a>
<a href=""mailto:li.l.ia.nc.h.i.ny.e.r.e2.3@gmail.com"">li.l.ia.nc.h.i.ny.e.r.e2.3@gmail.com</a>
<a href=""mailto:l.i.li.an.ch.i.n.yere2.3@gmail.com"">l.i.li.an.ch.i.n.yere2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nc.hi.nye.re.2.3@gmail.com"">l.i.l.i.a.nc.hi.nye.re.2.3@gmail.com</a>
<a href=""mailto:l.ili.a.n.chin.yer.e2.3@gmail.com"">l.ili.a.n.chin.yer.e2.3@gmail.com</a>
<a href=""mailto:lili.anc.hi.n.y.e.re.2.3@gmail.com"">lili.anc.hi.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:l.il.ia.nc.h.inyer.e23@gmail.com"">l.il.ia.nc.h.inyer.e23@gmail.com</a>
<a href=""mailto:l.ili.anc.hi.nye.r.e.2.3@gmail.com"">l.ili.anc.hi.nye.r.e.2.3@gmail.com</a>
<a href=""mailto:l.i.li.a.n.chin.y.e.re.2.3@gmail.com"">l.i.li.a.n.chin.y.e.re.2.3@gmail.com</a>
<a href=""mailto:li.lian.c.hi.nyere23@gmail.com"">li.lian.c.hi.nyere23@gmail.com</a>
<a href=""mailto:li.lianc.h.in.yere.23@gmail.com"">li.lianc.h.in.yere.23@gmail.com</a>
<a href=""mailto:l.i.lianch.i.n.y.ere23@gmail.com"">l.i.lianch.i.n.y.ere23@gmail.com</a>
<a href=""mailto:l.il.i.a.nch.i.n.yer.e2.3@gmail.com"">l.il.i.a.nch.i.n.yer.e2.3@gmail.com</a>
<a href=""mailto:li.l.ian.ch.i.nyere23@gmail.com"">li.l.ian.ch.i.nyere23@gmail.com</a>
<a href=""mailto:lili.an.c.hi.ny.e.r.e.2.3@gmail.com"">lili.an.c.hi.ny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:lili.an.c.hi.n.yere2.3@gmail.com"">lili.an.c.hi.n.yere2.3@gmail.com</a>
<a href=""mailto:l.ili.a.nchin.ye.r.e.2.3@gmail.com"">l.ili.a.nchin.ye.r.e.2.3@gmail.com</a>
<a href=""mailto:lilianc.hiny.er.e2.3@gmail.com"">lilianc.hiny.er.e2.3@gmail.com</a>
<a href=""mailto:li.l.ian.ch.i.n.ye.re.2.3@gmail.com"">li.l.ian.ch.i.n.ye.re.2.3@gmail.com</a>
<a href=""mailto:l.i.l.ian.chi.n.y.er.e2.3@gmail.com"">l.i.l.ian.chi.n.y.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n.ch.inye.r.e23@gmail.com"">l.i.l.i.a.n.ch.inye.r.e23@gmail.com</a>
<a href=""mailto:l.i.lianch.i.ny.ere2.3@gmail.com"">l.i.lianch.i.ny.ere2.3@gmail.com</a>
<a href=""mailto:li.l.ian.c.h.i.nye.r.e.23@gmail.com"">li.l.ian.c.h.i.nye.r.e.23@gmail.com</a>
<a href=""mailto:li.lia.n.c.h.i.n.y.er.e23@gmail.com"">li.lia.n.c.h.i.n.y.er.e23@gmail.com</a>
<a href=""mailto:l.i.lia.n.chinye.re2.3@gmail.com"">l.i.lia.n.chinye.re2.3@gmail.com</a>
<a href=""mailto:li.lian.c.h.inye.re23@gmail.com"">li.lian.c.h.inye.re23@gmail.com</a>
<a href=""mailto:li.lia.nchiny.e.re.2.3@gmail.com"">li.lia.nchiny.e.re.2.3@gmail.com</a>
<a href=""mailto:l.il.ian.ch.in.y.ere.2.3@gmail.com"">l.il.ian.ch.in.y.ere.2.3@gmail.com</a>
<a href=""mailto:l.i.li.a.nch.i.nyer.e23@gmail.com"">l.i.li.a.nch.i.nyer.e23@gmail.com</a>
<a href=""mailto:li.l.ia.n.ch.in.ye.r.e.23@gmail.com"">li.l.ia.n.ch.in.ye.r.e.23@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.i.n.yer.e2.3@gmail.com"">l.i.l.i.an.ch.i.n.yer.e2.3@gmail.com</a>
<a href=""mailto:l.ili.a.n.chi.n.y.e.re.2.3@gmail.com"">l.ili.a.n.chi.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:l.i.l.ian.c.hin.y.ere2.3@gmail.com"">l.i.l.ian.c.hin.y.ere2.3@gmail.com</a>
<a href=""mailto:li.l.i.an.chi.ny.er.e.2.3@gmail.com"">li.l.i.an.chi.ny.er.e.2.3@gmail.com</a>
<a href=""mailto:li.li.anch.inyere.2.3@gmail.com"">li.li.anch.inyere.2.3@gmail.com</a>
<a href=""mailto:lil.i.an.c.h.in.y.e.r.e23@gmail.com"">lil.i.an.c.h.in.y.e.r.e23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hiny.e.r.e2.3@gmail.com"">li.li.a.n.c.hiny.e.r.e2.3@gmail.com</a>
<a href=""mailto:li.l.i.a.nc.hinye.r.e.23@gmail.com"">li.l.i.a.nc.hinye.r.e.23@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n.chin.y.er.e2.3@gmail.com"">l.i.l.i.a.n.chin.y.er.e2.3@gmail.com</a>
<a href=""mailto:l.il.ia.nc.hiny.er.e.23@gmail.com"">l.il.ia.nc.hiny.er.e.23@gmail.com</a>
<a href=""mailto:li.li.an.chin.ye.re23@gmail.com"">li.li.an.chin.ye.re23@gmail.com</a>
<a href=""mailto:l.il.i.anc.h.inyer.e.23@gmail.com"">l.il.i.anc.h.inyer.e.23@gmail.com</a>
<a href=""mailto:li.lia.nch.in.y.ere.23@gmail.com"">li.lia.nch.in.y.ere.23@gmail.com</a>
<a href=""mailto:l.i.li.an.ch.in.ye.r.e.2.3@gmail.com"">l.i.li.an.ch.in.ye.r.e.2.3@gmail.com</a>
<a href=""mailto:l.ili.a.nc.hin.ye.r.e.2.3@gmail.com"">l.ili.a.nc.hin.ye.r.e.2.3@gmail.com</a>
<a href=""mailto:l.ilia.n.c.hin.y.er.e2.3@gmail.com"">l.ilia.n.c.hin.y.er.e2.3@gmail.com</a>
<a href=""mailto:lil.ia.nc.hin.y.ere.23@gmail.com"">lil.ia.nc.hin.y.ere.23@gmail.com</a>
<a href=""mailto:lil.i.an.chi.nye.re23@gmail.com"">lil.i.an.chi.nye.re23@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.inyer.e.2.3@gmail.com"">l.i.l.i.an.ch.inyer.e.2.3@gmail.com</a>
<a href=""mailto:lili.anchi.n.y.er.e.2.3@gmail.com"">lili.anchi.n.y.er.e.2.3@gmail.com</a>
<a href=""mailto:lil.i.anch.in.y.ere2.3@gmail.com"">lil.i.anch.in.y.ere2.3@gmail.com</a>
<a href=""mailto:li.li.a.nch.i.nyere23@gmail.com"">li.li.a.nch.i.nyere23@gmail.com</a>
<a href=""mailto:lili.an.c.hi.n.y.e.r.e.2.3@gmail.com"">lili.an.c.hi.n.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:li.l.i.a.nchin.ye.r.e.2.3@gmail.com"">li.l.i.a.nchin.ye.r.e.2.3@gmail.com</a>
<a href=""mailto:lilianchi.n.y.e.re.2.3@gmail.com"">lilianchi.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:lil.ia.nc.h.inye.re23@gmail.com"">lil.ia.nc.h.inye.re23@gmail.com</a>
<a href=""mailto:l.il.i.a.nc.hin.y.e.re.23@gmail.com"">l.il.i.a.nc.hin.y.e.re.23@gmail.com</a>
<a href=""mailto:li.lian.chi.nyer.e.23@gmail.com"">li.lian.chi.nyer.e.23@gmail.com</a>
<a href=""mailto:li.l.ia.n.c.hiny.er.e2.3@gmail.com"">li.l.ia.n.c.hiny.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nch.i.ny.e.re.23@gmail.com"">l.i.l.i.a.nch.i.ny.e.re.23@gmail.com</a>
<a href=""mailto:l.ili.a.n.ch.inye.re2.3@gmail.com"">l.ili.a.n.ch.inye.re2.3@gmail.com</a>
<a href=""mailto:l.il.ianchin.y.ere.2.3@gmail.com"">l.il.ianchin.y.ere.2.3@gmail.com</a>
<a href=""mailto:lil.i.anc.h.i.ny.ere.23@gmail.com"">lil.i.anc.h.i.ny.ere.23@gmail.com</a>
<a href=""mailto:li.lia.nchi.n.y.e.r.e2.3@gmail.com"">li.lia.nchi.n.y.e.r.e2.3@gmail.com</a>
<a href=""mailto:l.ili.an.c.h.inyer.e23@gmail.com"">l.ili.an.c.h.inyer.e23@gmail.com</a>
<a href=""mailto:l.i.l.ian.c.hi.n.y.ere23@gmail.com"">l.i.l.ian.c.hi.n.y.ere23@gmail.com</a>
<a href=""mailto:lil.ian.ch.i.ny.e.r.e23@gmail.com"">lil.ian.ch.i.ny.e.r.e23@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nc.hi.n.ye.r.e.23@gmail.com"">l.i.l.i.a.nc.hi.n.ye.r.e.23@gmail.com</a>
<a href=""mailto:lili.a.n.chi.nye.re.23@gmail.com"">lili.a.n.chi.nye.re.23@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nch.i.ny.er.e2.3@gmail.com"">l.i.l.i.a.nch.i.ny.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.ianchin.yere.23@gmail.com"">l.i.l.ianchin.yere.23@gmail.com</a>
<a href=""mailto:lil.i.anch.i.nye.r.e23@gmail.com"">lil.i.anch.i.nye.r.e23@gmail.com</a>
<a href=""mailto:l.ili.a.nch.i.n.yer.e23@gmail.com"">l.ili.a.nch.i.n.yer.e23@gmail.com</a>
<a href=""mailto:l.ilia.nchi.ny.ere23@gmail.com"">l.ilia.nchi.ny.ere23@gmail.com</a>
<a href=""mailto:l.ili.a.nc.h.i.ny.er.e2.3@gmail.com"">l.ili.a.nc.h.i.ny.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.ia.nchi.n.y.e.r.e23@gmail.com"">l.i.l.ia.nchi.n.y.e.r.e23@gmail.com</a>
<a href=""mailto:l.i.lia.n.chi.n.y.ere.2.3@gmail.com"">l.i.lia.n.chi.n.y.ere.2.3@gmail.com</a>
<a href=""mailto:lili.anc.h.in.y.e.r.e.23@gmail.com"">lili.anc.h.in.y.e.r.e.23@gmail.com</a>
<a href=""mailto:l.ili.a.n.ch.inyer.e23@gmail.com"">l.ili.a.n.ch.inyer.e23@gmail.com</a>
<a href=""mailto:l.i.l.ianchi.n.y.e.re23@gmail.com"">l.i.l.ianchi.n.y.e.re23@gmail.com</a>
<a href=""mailto:l.il.ia.nc.h.i.n.y.e.r.e23@gmail.com"">l.il.ia.nc.h.i.n.y.e.r.e23@gmail.com</a>
<a href=""mailto:lil.ian.c.h.i.ny.e.r.e.23@gmail.com"">lil.ian.c.h.i.ny.e.r.e.23@gmail.com</a>
<a href=""mailto:li.lian.c.hi.n.y.ere23@gmail.com"">li.lian.c.hi.n.y.ere23@gmail.com</a>
<a href=""mailto:l.ilia.nc.h.i.n.y.er.e2.3@gmail.com"">l.ilia.nc.h.i.n.y.er.e2.3@gmail.com</a>
<a href=""mailto:l.il.i.a.n.chi.n.y.e.re23@gmail.com"">l.il.i.a.n.chi.n.y.e.re23@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.i.n.y.e.re2.3@gmail.com"">l.i.l.i.an.ch.i.n.y.e.re2.3@gmail.com</a>
<a href=""mailto:lil.ia.nchinye.r.e23@gmail.com"">lil.ia.nchinye.r.e23@gmail.com</a>
<a href=""mailto:l.ili.an.c.h.in.y.e.r.e.2.3@gmail.com"">l.ili.an.c.h.in.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.i.li.an.c.h.iny.e.r.e2.3@gmail.com"">l.i.li.an.c.h.iny.e.r.e2.3@gmail.com</a>
<a href=""mailto:li.l.ia.n.c.h.i.n.y.e.re.2.3@gmail.com"">li.l.ia.n.c.h.i.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:l.i.lia.n.ch.in.y.e.re.23@gmail.com"">l.i.lia.n.ch.in.y.e.re.23@gmail.com</a>
<a href=""mailto:lil.i.anc.h.in.yer.e2.3@gmail.com"">lil.i.anc.h.in.yer.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.ia.nc.h.in.y.e.r.e.2.3@gmail.com"">l.i.l.ia.nc.h.in.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.i.li.anc.hi.n.yer.e23@gmail.com"">l.i.li.anc.hi.n.yer.e23@gmail.com</a>
<a href=""mailto:lilian.chinyer.e.2.3@gmail.com"">lilian.chinyer.e.2.3@gmail.com</a>
<a href=""mailto:l.il.i.anchi.ny.er.e.23@gmail.com"">l.il.i.anchi.ny.er.e.23@gmail.com</a>
<a href=""mailto:l.il.ia.n.ch.in.y.er.e.23@gmail.com"">l.il.ia.n.ch.in.y.er.e.23@gmail.com</a>
<a href=""mailto:l.ilian.c.h.inye.r.e.2.3@gmail.com"">l.ilian.c.h.inye.r.e.2.3@gmail.com</a>
<a href=""mailto:li.l.i.a.n.chi.ny.e.re23@gmail.com"">li.l.i.a.n.chi.ny.e.re23@gmail.com</a>
<a href=""mailto:lil.ianchin.y.e.re.23@gmail.com"">lil.ianchin.y.e.re.23@gmail.com</a>
<a href=""mailto:l.i.l.ia.nc.hi.nyere2.3@gmail.com"">l.i.l.ia.nc.hi.nyere2.3@gmail.com</a>
<a href=""mailto:li.lianc.h.in.yere23@gmail.com"">li.lianc.h.in.yere23@gmail.com</a>
<a href=""mailto:li.l.i.an.ch.in.y.e.re.23@gmail.com"">li.l.i.an.ch.in.y.e.re.23@gmail.com</a>
<a href=""mailto:l.i.lia.nchinye.re23@gmail.com"">l.i.lia.nchinye.re23@gmail.com</a>
<a href=""mailto:l.il.i.anchin.y.er.e23@gmail.com"">l.il.i.anchin.y.er.e23@gmail.com</a>
<a href=""mailto:li.li.a.nchi.n.y.ere23@gmail.com"">li.li.a.nchi.n.y.ere23@gmail.com</a>
<a href=""mailto:l.ili.an.chi.ny.e.r.e.23@gmail.com"">l.ili.an.chi.ny.e.r.e.23@gmail.com</a>
<a href=""mailto:li.lia.nch.i.ny.er.e.23@gmail.com"">li.lia.nch.i.ny.er.e.23@gmail.com</a>
<a href=""mailto:lil.i.anchi.ny.e.r.e.2.3@gmail.com"">lil.i.anchi.ny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.ilianch.iny.e.re2.3@gmail.com"">l.ilianch.iny.e.re2.3@gmail.com</a>
<a href=""mailto:l.i.l.ianc.h.i.ny.ere2.3@gmail.com"">l.i.l.ianc.h.i.ny.ere2.3@gmail.com</a>
<a href=""mailto:l.i.li.a.n.c.h.i.ny.e.r.e.2.3@gmail.com"">l.i.li.a.n.c.h.i.ny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.ilianchi.n.y.e.r.e.2.3@gmail.com"">l.ilianchi.n.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.i.lian.chin.yer.e.2.3@gmail.com"">l.i.lian.chin.yer.e.2.3@gmail.com</a>
<a href=""mailto:li.l.ian.ch.i.nyere2.3@gmail.com"">li.l.ian.ch.i.nyere2.3@gmail.com</a>
<a href=""mailto:li.l.ia.n.c.h.i.ny.e.r.e.23@gmail.com"">li.l.ia.n.c.h.i.ny.e.r.e.23@gmail.com</a>
<a href=""mailto:li.li.anc.h.i.nyere2.3@gmail.com"">li.li.anc.h.i.nyere2.3@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hinye.re23@gmail.com"">li.li.a.n.c.hinye.re23@gmail.com</a>
<a href=""mailto:lil.ianch.in.y.e.r.e.2.3@gmail.com"">lil.ianch.in.y.e.r.e.2.3@gmail.com</a>
<a href=""mailto:l.il.ia.nch.inyere23@gmail.com"">l.il.ia.nch.inyere23@gmail.com</a>
<a href=""mailto:lil.i.a.nch.i.nye.re.23@gmail.com"">lil.i.a.nch.i.nye.re.23@gmail.com</a>
<a href=""mailto:l.i.li.a.nc.h.i.nye.r.e.23@gmail.com"">l.i.li.a.nc.h.i.nye.r.e.23@gmail.com</a>
<a href=""mailto:l.il.i.a.n.c.hi.ny.er.e.23@gmail.com"">l.il.i.a.n.c.hi.ny.er.e.23@gmail.com</a>
<a href=""mailto:li.l.ianc.hi.ny.e.r.e23@gmail.com"">li.l.ianc.hi.ny.e.r.e23@gmail.com</a>
<a href=""mailto:li.l.ian.c.hi.n.y.er.e23@gmail.com"">li.l.ian.c.hi.n.y.er.e23@gmail.com</a>
<a href=""mailto:l.ili.a.n.c.h.in.ye.r.e23@gmail.com"">l.ili.a.n.c.h.in.ye.r.e23@gmail.com</a>
<a href=""mailto:li.l.ian.chinye.re23@gmail.com"">li.l.ian.chinye.re23@gmail.com</a>
<a href=""mailto:li.li.a.nc.hi.n.yere23@gmail.com"">li.li.a.nc.hi.n.yere23@gmail.com</a>
<a href=""mailto:l.i.li.an.ch.iny.e.r.e.23@gmail.com"">l.i.li.an.ch.iny.e.r.e.23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hi.ny.e.r.e.2.3@gmail.com"">li.li.a.n.c.hi.ny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:lil.i.anc.hin.y.er.e.23@gmail.com"">lil.i.anc.hin.y.er.e.23@gmail.com</a>
<a href=""mailto:l.il.ia.n.c.h.i.n.yer.e.23@gmail.com"">l.il.ia.n.c.h.i.n.yer.e.23@gmail.com</a>
<a href=""mailto:l.ili.an.chin.y.e.r.e23@gmail.com"">l.ili.an.chin.y.e.r.e23@gmail.com</a>
<a href=""mailto:l.i.lian.c.hi.ny.er.e23@gmail.com"">l.i.lian.c.hi.ny.er.e23@gmail.com</a>
<a href=""mailto:lili.a.nc.hi.nye.r.e.2.3@gmail.com"">lili.a.nc.hi.nye.r.e.2.3@gmail.com</a>
<a href=""mailto:l.il.ia.n.chin.y.er.e.23@gmail.com"">l.il.ia.n.chin.y.er.e.23@gmail.com</a>
<a href=""mailto:l.ili.an.ch.inye.re2.3@gmail.com"">l.ili.an.ch.inye.re2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.i.n.y.e.r.e2.3@gmail.com"">l.i.l.i.an.ch.i.n.y.e.r.e2.3@gmail.com</a>
<a href=""mailto:l.i.li.an.c.h.in.y.er.e.2.3@gmail.com"">l.i.li.an.c.h.in.y.er.e.2.3@gmail.com</a>
<a href=""mailto:lilian.ch.in.yere.2.3@gmail.com"">lilian.ch.in.yere.2.3@gmail.com</a>
<a href=""mailto:l.il.ianc.h.i.n.y.e.re23@gmail.com"">l.il.ianc.h.i.n.y.e.re23@gmail.com</a>
<a href=""mailto:l.i.lian.c.hin.yer.e.2.3@gmail.com"">l.i.lian.c.hin.yer.e.2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.a.nc.h.in.y.e.r.e23@gmail.com"">l.i.l.i.a.nc.h.in.y.e.r.e23@gmail.com</a>
<a href=""mailto:l.i.li.anch.iny.ere.2.3@gmail.com"">l.i.li.anch.iny.ere.2.3@gmail.com</a>
<a href=""mailto:l.i.lian.c.hi.nyer.e.2.3@gmail.com"">l.i.lian.c.hi.nyer.e.2.3@gmail.com</a>
<a href=""mailto:lil.ian.chin.y.e.re2.3@gmail.com"">lil.ian.chin.y.e.re2.3@gmail.com</a>
<a href=""mailto:l.il.i.a.n.c.hi.ny.e.re23@gmail.com"">l.il.i.a.n.c.hi.ny.e.re23@gmail.com</a>
<a href=""mailto:l.i.li.an.ch.i.n.y.e.re.23@gmail.com"">l.i.li.an.ch.i.n.y.e.re.23@gmail.com</a>
<a href=""mailto:l.ili.anc.hin.yer.e23@gmail.com"">l.ili.anc.hin.yer.e23@gmail.com</a>
<a href=""mailto:lili.a.n.chinye.re2.3@gmail.com"">lili.a.n.chinye.re2.3@gmail.com</a>
<a href=""mailto:lil.ianch.in.ye.re.2.3@gmail.com"">lil.ianch.in.ye.re.2.3@gmail.com</a>
<a href=""mailto:lil.i.a.n.c.hi.nye.re.23@gmail.com"">lil.i.a.n.c.hi.nye.re.23@gmail.com</a>
<a href=""mailto:l.i.l.ianc.h.i.ny.e.re.23@gmail.com"">l.i.l.ianc.h.i.ny.e.re.23@gmail.com</a>
<a href=""mailto:li.lia.n.ch.in.y.e.re23@gmail.com"">li.lia.n.ch.in.y.e.re23@gmail.com</a>
<a href=""mailto:l.ilian.chi.n.y.e.r.e23@gmail.com"">l.ilian.chi.n.y.e.r.e23@gmail.com</a>
<a href=""mailto:lilianc.h.in.y.ere.2.3@gmail.com"">lilianc.h.in.y.ere.2.3@gmail.com</a>
<a href=""mailto:li.lia.n.c.h.i.ny.ere.2.3@gmail.com"">li.lia.n.c.h.i.ny.ere.2.3@gmail.com</a>
<a href=""mailto:l.ili.an.chi.ny.ere.2.3@gmail.com"">l.ili.an.chi.ny.ere.2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.anc.hi.n.y.er.e.2.3@gmail.com"">l.i.l.i.anc.hi.n.y.er.e.2.3@gmail.com</a>
<a href=""mailto:l.ilia.n.c.hiny.e.re.2.3@gmail.com"">l.ilia.n.c.hiny.e.re.2.3@gmail.com</a>
<a href=""mailto:li.l.ia.n.chiny.ere23@gmail.com"">li.l.ia.n.chiny.ere23@gmail.com</a>
<a href=""mailto:l.ilian.chinyer.e23@gmail.com"">l.ilian.chinyer.e23@gmail.com</a>
<a href=""mailto:l.i.l.i.an.ch.in.yer.e.2.3@gmail.com"">l.i.l.i.an.ch.in.yer.e.2.3@gmail.com</a>
<a href=""mailto:l.i.l.ia.nchiny.e.re.23@gmail.com"">l.i.l.ia.nchiny.e.re.23@gmail.com</a>
<a href=""mailto:l.ilianc.hin.ye.r.e23@gmail.com"">l.ilianc.hin.ye.r.e23@gmail.com</a>
<a href=""mailto:l.i.lian.ch.i.nyer.e23@gmail.com"">l.i.lian.ch.i.nyer.e23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hi.ny.e.r.e23@gmail.com"">li.li.a.n.c.hi.ny.e.r.e23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hin.yere23@gmail.com"">li.li.a.n.c.hin.yere23@gmail.com</a>
<a href=""mailto:li.l.i.a.nc.hi.ny.e.r.e23@gmail.com"">li.l.i.a.nc.hi.ny.e.r.e23@gmail.com</a>
<a href=""mailto:l.ili.an.chi.n.yere.2.3@gmail.com"">l.ili.an.chi.n.yere.2.3@gmail.com</a>
<a href=""mailto:li.l.ianchinyer.e.2.3@gmail.com"">li.l.ianchinyer.e.2.3@gmail.com</a>
<a href=""mailto:l.i.lian.ch.iny.e.r.e.2.3@gmail.com"">l.i.lian.ch.iny.e.r.e.2.3@gmail.com</a>
<a href=""mailto:lili.an.c.hi.nyere.23@gmail.com"">lili.an.c.hi.nyere.23@gmail.com</a>
<a href=""mailto:li.l.i.an.c.h.inyer.e2.3@gmail.com"">li.l.i.an.c.h.inyer.e2.3@gmail.com</a>
<a href=""mailto:lil.i.anch.i.n.y.e.re.2.3@gmail.com"">lil.i.anch.i.n.y.e.re.2.3@gmail.com</a>
<a href=""mailto:l.il.i.a.n.ch.iny.ere2.3@gmail.com"">l.il.i.a.n.ch.iny.ere2.3@gmail.com</a>
<a href=""mailto:lil.i.a.n.c.hiny.e.re23@gmail.com"">lil.i.a.n.c.hiny.e.re23@gmail.com</a>
<a href=""mailto:li.lianc.h.i.n.yer.e.23@gmail.com"">li.lianc.h.i.n.yer.e.23@gmail.com</a>
<a href=""mailto:lil.ia.n.chi.n.yere2.3@gmail.com"">lil.ia.n.chi.n.yere2.3@gmail.com</a>
<a href=""mailto:l.il.ia.n.c.h.in.yer.e2.3@gmail.com"">l.il.ia.n.c.h.in.yer.e2.3@gmail.com</a>
<a href=""mailto:l.il.ianc.h.i.ny.er.e.2.3@gmail.com"">l.il.ianc.h.i.ny.er.e.2.3@gmail.com</a>
<a href=""mailto:lili.an.c.h.in.y.er.e2.3@gmail.com"">lili.an.c.h.in.y.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.lianch.i.n.yere.23@gmail.com"">l.i.lianch.i.n.yere.23@gmail.com</a>
<a href=""mailto:lil.ian.c.h.i.n.yere23@gmail.com"">lil.ian.c.h.i.n.yere23@gmail.com</a>
<a href=""mailto:l.i.l.ia.nchi.nye.re.2.3@gmail.com"">l.i.l.ia.nchi.nye.re.2.3@gmail.com</a>
<a href=""mailto:li.l.ian.c.hin.y.e.re2.3@gmail.com"">li.l.ian.c.hin.y.e.re2.3@gmail.com</a>
<a href=""mailto:lilian.chi.ny.ere.23@gmail.com"">lilian.chi.ny.ere.23@gmail.com</a>
<a href=""mailto:l.ili.a.nc.hi.n.ye.r.e23@gmail.com"">l.ili.a.nc.hi.n.ye.r.e23@gmail.com</a>
<a href=""mailto:lili.an.c.h.i.nyere2.3@gmail.com"">lili.an.c.h.i.nyere2.3@gmail.com</a>
<a href=""mailto:l.i.l.i.anch.iny.er.e2.3@gmail.com"">l.i.l.i.anch.iny.er.e2.3@gmail.com</a>
<a href=""mailto:l.i.l.ia.n.c.hiny.ere.23@gmail.com"">l.i.l.ia.n.c.hiny.ere.23@gmail.com</a>
<a href=""mailto:l.il.ianc.h.in.y.ere.2.3@gmail.com"">l.il.ianc.h.in.y.ere.2.3@gmail.com</a>
<a href=""mailto:li.l.i.an.c.h.iny.ere23@gmail.com"">li.l.i.an.c.h.iny.ere23@gmail.com</a>
<a href=""mailto:l.i.lianc.h.i.nyer.e.23@gmail.com"">l.i.lianc.h.i.nyer.e.23@gmail.com</a>
<a href=""mailto:l.il.ia.nch.iny.e.re.23@gmail.com"">l.il.ia.nch.iny.e.re.23@gmail.com</a>
<a href=""mailto:li.li.a.n.c.hinyere2.3@gmail.com"">li.li.a.n.c.hinyere2.3@gmail.com</a>
<a href=""mailto:lili.a.nch.in.yere.23@gmail.com"">lili.a.nch.in.yere.23@gmail.com</a>
<a href=""mailto:li.lia.n.c.h.i.n.ye.r.e2.3@gmail.com"">li.lia.n.c.h.i.n.ye.r.e2.3@gmail.com</a>
<a href=""mailto:li.lia.n.c.h.i.n.y.e.re23@gmail.com"">li.lia.n.c.h.i.n.y.e.re23@gmail.com</a>"
bDeiXa5k,AOC2021D5P1.py,bob_f,Python,Friday 22nd of September 2023 10:37:04 AM CDT,"oceanFloor = []

def plotLine(aCoord1, aCoord2):
    if not (aCoord1[0] == aCoord2[0] or aCoord1[1] == aCoord2[1]):
        print(f'{aCoord1} {aCoord2} is not a vertical or horizontal line')
        return
   
    print(f'{aCoord1} {aCoord2} is a vertical or horizontal line, OK to continue')

    xLo = min(aCoord1[0], aCoord2[0])
    xHi = max(aCoord1[0], aCoord2[0])
    yLo = min(aCoord1[1], aCoord2[1])
    yHi = max(aCoord1[1], aCoord2[1])
    
    if xLo < xHi:
        print('This is a horizontal line')    

        for x in range(xLo, xHi + 1):
            oceanFloor[yLo][x] += 1
    else:
        print('This is a vertical line')    

        for y in range(yLo, yHi + 1):
            oceanFloor[y][xLo] += 1

def initialiseOceanFloor():
    lOceanFloor = [[0 for x in range(1000)] for y in range(1000)]
    return lOceanFloor

def countDangerousAreas(): 
    countDangerousAreas = 0

    for row in range(len(oceanFloor)):
        for col in range(len(oceanFloor[0])):
            countDangerousAreas += 1 if oceanFloor[row][col] > 1 else 0

    return countDangerousAreas

################################################################################
# Main program
################################################################################

oceanFloor = initialiseOceanFloor()      

with open('AOC2021D5.txt') as INFILE:
   for LINE in INFILE:
      LINE = LINE.rstrip()

      if LINE.startswith('#'):
          continue

      LINE = LINE.split(' -> ')
      print(f'{LINE=}') 
      coord1 = [int(x) for x in LINE[0].split(',')]
      coord2 = [int(x) for x in LINE[1].split(',')]
      plotLine(coord1, coord2)

print(f'{countDangerousAreas()=}')"
Xdjxp4TC,Untitled,sasa2742002,Python,Friday 22nd of September 2023 10:34:03 AM CDT,"import requests


def get_data(url, region_name):
    response = requests.get(url)
    data_info = response.json()

    if response.status_code == 200:
        instances = []
        region_data = data_info['regions'].get(region_name, {})

        for instance_name, instance_attributes in region_data.items():
            instance = {
                'Instance Name': instance_name,
                'Rate Code': instance_attributes.get('rateCode', ''),
                'Price': instance_attributes.get('price', ''),
                'Location': instance_attributes.get('Location', ''),
                'Instance Family': instance_attributes.get('Instance Family', ''),
                'vCPU': instance_attributes.get('vCPU', ''),
                'Memory': instance_attributes.get('Memory', ''),
                'Storage': instance_attributes.get('Storage', ''),
                'Network Performance': instance_attributes.get('Network Performance', ''),
                'Operating System': instance_attributes.get('Operating System', ''),
                'Pre Installed S/W': instance_attributes.get('Pre Installed S/W', ''),
                'License Model': instance_attributes.get('License Model', ''),
            }
            instances.append(instance)

        return instances
    else:
        return None


def north_america():
    north_america_urls = [
        [""US East (N. Virginia)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20East%20(N.%20Virginia)/Linux/index.json?timestamp=1695335197182""],
        [""US East (N. California)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20West%20(N.%20California)/Linux/index.json?timestamp=1695335943885""],
        [""US West (Oregon)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/US%20West%20(Oregon)/Linux/index.json?timestamp=1695336005767""],
        [""Canada (Central)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Canada%20(Central)/Linux/index.json?timestamp=1695336038545""],
        [""AWS GovCloud (US-East)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/AWS%20GovCloud%20(US-East)/Linux/index.json?timestamp=1695336076977""],
        [""AWS GovCloud (US-West)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/AWS%20GovCloud%20(US)/Linux/index.json?timestamp=1695336143250""]
    ]

    north_america = []
    for region_info in north_america_urls:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        north_america.append(data)

    return north_america


def africa():
    africa_urls = [
        [""Africa (Cape Town)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Africa%20(Cape%20Town)/Linux/index.json?timestamp=1695336201165""]
    ]

    africa = []
    for region_info in africa_urls:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        africa.append(data)

    return africa


def asia_pacific():
    asia_pacific = [
        [""Asia Pacific (Hong Kong)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Hong%20Kong)/Linux/index.json?timestamp=1695336236566""],
        [""Asia Pacific (Hyderabad)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Hyderabad)/Linux/index.json?timestamp=1695336267211""],
        [""Asia Pacific (Jakarta)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Jakarta)/Linux/index.json?timestamp=1695336335452""],
        [""Asia Pacific (Melbourne)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Melbourne)/Linux/index.json?timestamp=1695336377353""],
        [""Asia Pacific (Mumbai)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Mumbai)/Linux/index.json?timestamp=1695336414559""],
        [""Asia Pacific (Osaka)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Osaka)/Linux/index.json?timestamp=1695336448367""],
        [""Asia Pacific (Seoul)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Seoul)/Linux/index.json?timestamp=1695336489384""],
        [""Asia Pacific (Singapore)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Asia%20Pacific%20(Singapore)/Linux/index.json?timestamp=1695336516652""],
        [""Asia Pacific (Sydney)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Australia%20(Sydney)/Linux/index.json?timestamp=1695336549342""],
        [""Asia Pacific (Tokyo)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Australia%20(Tokyo)/Linux/index.json?timestamp=1695336572681""]
    ]

    asia_pacific = []
    for region_info in asia_pacific:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        asia_pacific.append(data)

    return asia_pacific


def europe():
    europe = [
        [""Europe (Frankfurt)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Frankfurt)/Linux/index.json?timestamp=1695336606682""],
        [""Europe (Ireland)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Ireland)/Linux/index.json?timestamp=1695336640824""],
        [""Europe (London)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(London)/Linux/index.json?timestamp=1695336671834""],
        [""Europe (Milan)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Milan)/Linux/index.json?timestamp=1695336709113""],
        [""Europe (Paris)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Paris)/Linux/index.json?timestamp=1695336734334""],
        [""Europe (Spain)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Spain)/Linux/index.json?timestamp=1695336756525""],
        [""Europe (Stockholm)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Stockholm)/Linux/index.json?timestamp=1695336795677""],
        [""Europe (Zurich)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/EU%20(Zurich)/Linux/index.json?timestamp=1695336817871""]
    ]

    europe = []
    for region_info in europe:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        europe.append(data)

    return europe


def middle_east():
    middle_east = [
        [""Middle East (Bahrain)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Middle%20East%20(Bahrain)/Linux/index.json?timestamp=1695336880976""],
        [""Middle East (UAE)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/Middle%20East%20(UAE)/Linux/index.json?timestamp=1695336906621""]
    ]

    middle_east = []
    for region_info in middle_east:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        middle_east.append(data)

    return middle_east


def south_america():
    south_america = [
        [""South America (Sao Paulo)"", ""https://b0.p.awsstatic.com/pricing/2.0/meteredUnitMaps/ec2/USD/current/ec2-ondemand-without-sec-sel/South%20America%20(Sao%20Paulo)/Linux/index.json?timestamp=1695336944637""]
    ]

    south_america = []
    for region_info in south_america:
        region = region_info[0]
        url = region_info[1]
        data = get_data(url, region)
        south_america.append(data)

    return south_america


def main():
    # north_america_data = north_america()
    africa_data = africa()
    # asia_pacific_data = asia_pacific()
    # europe_data = europe()
    # middle_east_data = middle_east()
    # south_america_data = south_america()

    # print(north_america_data)
    print(africa_data)
    # print(asia_pacific_data)
    # print(europe_data)
    # print(middle_east_data)
    # print(south_america_data)


main()"
G8E22ETY,++ snowybot update,coinwalk,JavaScript,Friday 22nd of September 2023 10:31:26 AM CDT,"var measly = parseFloat(document.getElementById('pct_balance').value);
var baby = Number((measly/144000).toFixed(8));
var moon = baby;
var taget = 200000;
var tens = (baby*10000);
var sevens = (baby*7000);
var baboon = false;
var upper = 7000;
var downer = 3000;
var zoom = ((Math.floor(measly/tens))*tens);
var olzerer = ((Math.floor(measly/tens))*tens);
var mith = 1;
var zuel = parseFloat(document.getElementById('pct_balance').value);
var bart = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
var lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
 
function get(){
zuel = parseFloat(document.getElementById('pct_balance').value);
if (zuel>(zoom+(moon*upper))) {
    moon = Number((moon*2).toFixed(8));
    upper = 5000;
    downer = 5000;
    foilhat = foilhat+1;
    zoom = parseFloat(zuel);
}
if (zuel<(zoom-(moon*downer))) {
    moon = Number((moon*2).toFixed(8));
    upper = 5000;
    downer = 5000;
    couunt = couunt+1;
    zoom = parseFloat(zuel);
}
if ((zuel>=(olzerer+(tens*mith)))&&(zuel<(((Math.floor(zuel/tens))*tens)+sevens))){
    moon = baby;
    upper = 7000;
    downer = 3000;
    mith = 1;
    zoom = ((Math.floor((parseFloat(zuel))/tens))*tens);
    olzerer = ((Math.floor((parseFloat(zuel))/tens))*tens);
}
    if (zuel >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }     
    lisa = document.getElementById('me').firstChild.lastChild.firstChild.children[5].innerText;
     if ((lisa > bart)&&(baboon)) {
var funeral = Number((zuel - measly).toFixed(8));
console.log(""profit"");
console.log(funeral); 
      baboon = false; 
       bart = parseFloat(lisa);
    }
    if ((lisa == bart)&&(!baboon)) { 
        baboon = true; 
        $('#pct_chance').val(0.0495);
        $('#pct_bet').val(((moon*1).toFixed(8)));
        $('#a_lo').click();
    }
    setTimeout(() => get(), 1);
}
get();"
RcYV453q,Roblox Simple ESP,YourMain12,Lua,Friday 22nd of September 2023 10:31:16 AM CDT,"local Players = game:GetService(""Players"")

for _, Player in ipairs(Players:GetPlayers()) do
    local Character = Player.Character

    if Character then
        local Highlight = Instance.new(""Highlight"")
        Highlight.Parent = Character
        Highlight.Adornee = Character
        Highlight.FillTransparency = 1
        Highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        Highlight.OutlineTransparency = 0
        Highlight.DepthMode = ""Occluded""
    end
end
"
aQLJgDPA,Tennis Ranklist,Spocoman,C++,Friday 22nd of September 2023 10:27:49 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int numberOfTournaments, startPoints;
    cin >> numberOfTournaments >> startPoints;

    int tournamentPoints = 0;
    int gamesWon = 0;

    string currentTournament;

    for (int i = 0; i < numberOfTournaments; i++) {
        cin >> currentTournament;

        if (currentTournament == ""W"") {
            tournamentPoints += 2000;
            gamesWon++;
        } else if (currentTournament == ""F"") {
            tournamentPoints += 1200;
        }
        else {
            tournamentPoints += 720;
        }
    }

    cout.setf(ios::fixed);
    cout.precision(2);

    cout << ""Final points: "" << startPoints + tournamentPoints << endl;
    cout << ""Average points: "" << tournamentPoints / numberOfTournaments << endl;
    cout << 100.0 * gamesWon / numberOfTournaments << '%' << endl;

    return 0;
}"
asvCnKGc,Tennis Equipment,Spocoman,C++,Friday 22nd of September 2023 10:19:22 AM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    double racketPrice;
    cin >> racketPrice;

    int racketCount, sneakersCount;
    cin >> racketCount >> sneakersCount;

    double racketsSum = racketPrice * racketCount;
    double sneackersSum = racketPrice / 6 * sneakersCount;
    double price = (racketsSum + sneackersSum) * 1.2;

    cout << ""Price to be paid by Djokovic "" << floor(price / 8) << endl;
    cout << ""Price to be paid by sponsors "" << ceil(price * 7 / 8) << endl;

    return 0;
}"
Le98WptQ,MySQL: helpful command,Lasyanga,MySQL,Friday 22nd of September 2023 10:16:12 AM CDT,"-- generate a alter command for changing collation utf8mb4_unicode_ci
SET @dbname = 'your_database_name';
SELECT 
CONCAT('ALTER TABLE ', table_name, ' MODIFY COLUMN ', column_name, ' ', column_type, ' CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci', 
CASE WHEN IS_NULLABLE = 'NO' THEN ' NOT NULL' ELSE '' END, ';') AS query
FROM information_schema.columns
WHERE table_schema = @dbname
    AND collation_name <> 'utf8mb4_unicode_ci'
ORDER BY table_name ASC;

-- finding particular value in all tables
SET @search_value = '%search_string%';
SET @col_name = 'column_name';
SET @db_name = 'database_name';
SET @condition_val = 'LIKE';
SET @query = (
    SELECT
        GROUP_CONCAT(
            CONCAT(
                'SELECT \'', table_name, '\' AS table_name, ', @col_name,' FROM ',
                table_name, ' WHERE ', @col_name,' ',@condition_val, ' \'', @search_value, '\''
            ) SEPARATOR ' UNION '
        )
    FROM information_schema.columns
    WHERE table_schema = @db_name
    AND COLUMN_NAME = @col_name
);
"
R5g1PRFx,Sum And Product,Spocoman,C++,Friday 22nd of September 2023 10:12:43 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int n;
    cin >> n;

    for (int i = 1; i < 9; i++) {
        for (int j = 9; j > i; j--) {
            for (int k = 0; k < 9; k++) {
                for (int l = 9; l > k; l--) {
                    if ((i + j + k + l) == i * j * k * l && n % 10 == 5) {
                        cout << i << j << k << l << endl;
                        return 0;
                    }
                    if (i * j * k * l / (i + j + k + l) == 3 && n % 3 == 0) {
                        cout << l << k << j << i << endl;
                        return 0;
                    }
                }
            }
        }
    }
    cout << ""Nothing found\n"";
    return 0;
}"
