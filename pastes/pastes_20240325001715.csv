id,title,username,language,date,content
06kuyr6u,2024-03-24_stats.json,rdp_snitch,JSON,Sunday 24th of March 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""80.66.88.211"": 1,
    ""58.218.204.183"": 6,
    ""167.94.146.60"": 1,
    ""87.251.75.145"": 4,
    ""198.235.24.42"": 3,
    ""103.179.148.51"": 81,
    ""45.227.254.48"": 4,
    ""101.200.164.85"": 6,
    ""103.14.49.13"": 1,
    ""194.165.16.10"": 2,
    ""87.251.75.64"": 1,
    ""103.20.97.235"": 1,
    ""103.48.84.216"": 1,
    ""8.138.126.111"": 1,
    ""185.170.144.3"": 2,
    ""198.235.24.48"": 3,
    ""2.57.149.186"": 1,
    ""87.251.75.120"": 2,
    ""143.198.215.154"": 2,
    ""36.91.222.100"": 2,
    ""173.237.25.68"": 1,
    ""196.190.117.7"": 2,
    ""212.70.149.146"": 2,
    ""62.204.41.123"": 2,
    ""171.244.57.79"": 1,
    ""84.201.2.2"": 2,
    ""165.154.59.90"": 1,
    ""128.199.242.196"": 7,
    ""88.214.26.66"": 2,
    ""198.235.24.5"": 3,
    ""45.227.254.26"": 2,
    ""4.227.8.246"": 1,
    ""120.240.145.8"": 1,
    ""84.17.46.143"": 1,
    ""198.235.24.178"": 3
  },
  ""asn"": {
    ""AS208091"": 8,
    ""AS4134"": 6,
    ""AS398705"": 1,
    ""AS396982"": 12,
    ""AS140224"": 81,
    ""AS267784"": 6,
    ""AS37963"": 7,
    ""AS149134"": 1,
    ""AS48721"": 2,
    ""AS150880"": 1,
    ""AS131423"": 1,
    ""AS197414"": 2,
    ""AS208312"": 1,
    ""AS14061"": 9,
    ""AS7713"": 2,
    ""AS7979"": 1,
    ""AS24757"": 2,
    ""AS204428"": 2,
    ""AS59425"": 2,
    ""AS38731"": 1,
    ""AS44066"": 2,
    ""AS135377"": 1,
    ""AS209132"": 2,
    ""AS8075"": 1,
    ""AS56040"": 1,
    ""AS60068"": 1
  },
  ""isp"": {
    ""Xhost Internet Solutions"": 1,
    ""Chinanet"": 6,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions LP"": 9,
    ""Google LLC"": 12,
    ""STARCLOUD GLOBAL PTE., LTD."": 81,
    ""Flyservers S.A."": 8,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Fute Commercial and Services Company Limited"": 1,
    ""Fast Byte Fast Data Company Limited"": 1,
    ""LVHN"": 1,
    ""ALICLOUD"": 1,
    ""Red Byte LLC"": 1,
    ""DigitalOcean, LLC"": 9,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Servers.com, Inc."": 1,
    ""Ethiotelecom"": 2,
    ""SS-Net"": 2,
    ""Horizon LLC"": 2,
    ""VIETEL"": 1,
    ""www.accelerated.de"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Alviva Holding Limited"": 2,
    ""Microsoft Corporation"": 1,
    ""China Mobile communications corporation"": 1,
    ""DataCamp Limited"": 1
  },
  ""org"": {
    ""XHOSTIS"": 1,
    ""Chinanet JS"": 6,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions"": 7,
    ""Palo Alto Networks, Inc"": 12,
    ""Star Cloud Network Co., Ltd."": 81,
    ""UAB Host Baltic"": 6,
    ""Aliyun Computing Co., LTD"": 6,
    ""FUTE"": 1,
    ""Flyservers S.A"": 2,
    ""FASTBYTE"": 1,
    ""Unknown"": 3,
    ""Aliyun Computing Co."": 1,
    ""Xhostis"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""DigitalOcean, LLC"": 9,
    ""Telekomunikasi Indonesia"": 2,
    ""Servers.com, Inc."": 1,
    ""4Media Ltd"": 2,
    ""Horizon LLC"": 2,
    ""Viettel Corporation"": 1,
    ""diva-e Datacenters GmbH"": 2,
    ""Ucloud Information Technology"": 1,
    ""FutureNow Incorporated"": 2,
    ""Microsoft Azure Cloud (westus3)"": 1,
    ""China Mobile"": 1,
    ""Cdn77 AMS"": 1
  },
  ""regionName"": {
    ""Drenthe"": 1,
    ""Jiangsu"": 6,
    ""Hesse"": 3,
    ""North Holland"": 10,
    ""California"": 12,
    ""Tokyo"": 81,
    ""Vilnius"": 6,
    ""Beijing"": 6,
    ""Ho Chi Minh"": 3,
    ""Kaunas"": 2,
    ""Guangdong"": 2,
    ""Lesser Poland"": 1,
    ""Central Singapore"": 2,
    ""Jakarta"": 2,
    ""Texas"": 1,
    ""Addis Ababa"": 2,
    ""Sliven"": 2,
    ""Moscow"": 2,
    ""Hanoi"": 1,
    ""Metro Manila"": 1,
    ""South West"": 7,
    ""English River"": 2,
    ""Arizona"": 1
  },
  ""country"": {
    ""The Netherlands"": 11,
    ""China"": 14,
    ""Germany"": 3,
    ""United States"": 14,
    ""Japan"": 81,
    ""Lithuania"": 8,
    ""Vietnam"": 4,
    ""Poland"": 1,
    ""Singapore"": 9,
    ""Indonesia"": 2,
    ""Ethiopia"": 2,
    ""Bulgaria"": 2,
    ""Russia"": 2,
    ""Philippines"": 1,
    ""Seychelles"": 2
  },
  ""account"": {
    ""Administr"": 13,
    ""hello"": 110,
    ""(empty)"": 2,
    ""pNSTQhfXM"": 1,
    ""DvcByS"": 1,
    ""JSWeXk"": 1,
    ""Test"": 18,
    ""PqLLiyhhe"": 1,
    ""fjcSLn"": 1,
    ""kqrDre"": 1,
    ""Administrator"": 1,
    ""JzbMzplRb"": 1,
    ""DeSOhS"": 1,
    ""vrpNhp"": 1,
    ""ccoECYQrg"": 1,
    ""srVcSn"": 1,
    ""etKOhw"": 1
  },
  ""keyboard"": {
    ""Unknown"": 156
  },
  ""client_build"": {
    ""Unknown"": 156
  },
  ""client_name"": {
    ""Unknown"": 156
  },
  ""ip_type"": {
    ""Unknown"": 120,
    ""hosting"": 25,
    ""hosting & proxy"": 10,
    ""mobile"": 1
  }
}"
WRMKf1iA,KSDK :: String Support :: Word Wrap,jargon,FreeBasic,Sunday 24th of March 2024 07:04:58 PM CDT,"sub wordWalk(text as string=EMPTY, wordSep as string = SP, lineSep as string = CRLF, ledger(any) as string,ww as longint)
	
	dim as longint scrw=0, scrh=0, scrdepth=0, scrbpp=0, scrpitch=0, scrrate=0
	dim as string scrdriver=EMPTY

	Screeninfo ( scrw, scrh, scrdepth, scrbpp, scrpitch, scrrate, scrdriver )

	dim as longint owordSep=0, olineSep=0

	if ww=0 then
		ww=scrw/8
	end if

	dim as string buffer=EMPTY,reserve=EMPTY
	dim as longint index=0,offset=0
	
	erase ledger
	
	reserve=text
	
	do while len(reserve) GTR 0
		
		owordSep=instr(reserve,wordSep)
		olineSep=instr(reserve,lineSep)
		
		if (owordSep GTR 0) or (olineSep GTR 0) then
			if (owordSep LSS olineSep) and (owordSep GTR 0) then
				
				if len(ledger(ubound(ledger,1)) & mid(reserve,1,owordSep-1)) GTR ww then
					redim preserve ledger(lbound(ledger,1) to ubound(ledger,1)+1)
				end if
				
				ledger(ubound(ledger,1)) &= mid(reserve,1,owordSep-1)
				reserve = mid(reserve,owordSep+len(wordSep))
				
			elseif (olineSep LSS owordSep) and (olineSep GTR 0)  then
				
				ledger(ubound(ledger,1)) &= mid(reserve,1,olineSep-1)
				
				reserve = mid(reserve,olineSep+len(lineSep))
				redim preserve ledger(lbound(ledger,1) to ubound(ledger,1)+1)
				
			end if 
		end if
				
	loop
	
	dim as longint fm=0
	fm=freefile
	if open(""ledger.txt"" for output as #fm) NEQ 0 then
		close #fm
		return
	end if
	print #fm,lbound(ledger,1),ubound(ledger,1)
	for index=lbound(ledger,1) to ubound(ledger,1) step 1
		print #fm,index,ledger(index)
	next index
	close #fm
	
	return
	
end sub
"
cuCDATrS,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,PASUSW,GetText,Sunday 24th of March 2024 06:26:28 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
24 March 2024
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
"
C6e13NhP,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Sunday 24th of March 2024 06:24:33 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_372733.pdf

Working as of:
24 March 2024


















"
FMWkMMeZ,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Sunday 24th of March 2024 06:13:59 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
24 March 2024















































"
PG7bAHF9,Pastes.io - #1 Pastebin Alternative,xxsa,PHP,Sunday 24th of March 2024 05:21:52 PM CDT,"https://pastes.io - #1 Pastebin Alternative - its free.

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes

Simple Ads by Google Adsense Few rather than Pastebin
150+ different syntax languages - All Free
Paste Folders
Load files feature
Password protected pastes
Encrypted pastes.
URL Shortener.
Unlisted pastes.
Private pastes.
Embed, download, print pastes.
Socialite (Facebook/Twitter/Google Social login)
Trending pastes page (day, week, month, year)
Encrypted pastes.x
Trending pastes page (day, week, month, year).
No Captcha for logged in users feature.
."
GsCi9bG8,mint stealer logs c2,Artem_,ABAP,Sunday 24th of March 2024 05:18:04 PM CDT,"mint-stl.ru logs leak powered by APT-69
https://www.paste.cash/?c6f4f81992738ce0#GQCZ4JgEK8x3JQFR6WHYwN8ev3JyAws87tL9frrpaQDL
 
logs:
https://gofile.io/d/JWdg8x
https://gofile.io/d/rp6yZl
https://gofile.io/d/ytYtw0
https://gofile.io/d/VJFFoh
https://gofile.io/d/FjeNyW
https://gofile.io/d/PfrO8S
https://gofile.io/d/qcbE33
https://gofile.io/d/8l5j8s
https://gofile.io/d/mZ2iDU
https://gofile.io/d/sKnitI
https://gofile.io/d/HZKgKn
https://gofile.io/d/C44FJN
https://gofile.io/d/BKTIDc
https://gofile.io/d/yARaoS
https://gofile.io/d/Hc49Us
Mint Stealer Logs"
m8qwxgAQ,Pet Sim 99 Auto Rank Script,quikzyYTbtw,Lua,Sunday 24th of March 2024 05:14:58 PM CDT,"--[[
-PS99 Auto Rank Script 
 made by zerqhy :)
]]

loadstring(game:HttpGet(""https://raw.githubusercontent.com/zerqhy/petsim99/main/hugesgames.io""))()"
g7xEN8L5,arch_1_6e_me,pan7nikt,6502 TASM/64TASS,Sunday 24th of March 2024 05:01:56 PM CDT,";=======================================================================================;
;                                                                                       ;
; Plik           : arch1-6e.asm                                                         ;
; Format         : EXE                                                                  ;
; Cwiczenie      : Kompilacja, konsolidacja i debugowanie program�w                     ;
;                  asemblerowych                                                        ;
; Autorzy        : Julia Marcinkowska, Aleksandra Wnuk, grupa 3, poniedzia�ek, 14:15    ;
; Data zaliczenia: 19.03.2018                                                           ;
; Uwagi          : Program obliczajacy wzor: d/(b-c)*(a+b)                              ;
;                                                                                       ;
;=======================================================================================;

                .MODEL  SMALL							;dwa segmenty (jeden na CS, jeden na DS+SS)

Dane            SEGMENT									;poczatek segmentu danych

a               DB     	20
b               DB      10
c               DB      3
d               DB      3
Wynik           DB      ?								;zmienna wynik
Reszta			DB		?								;zmienna reszta

Dane            ENDS									;koniec segmentu danych

Kod             SEGMENT									;poczatek segmentu kodu

                ASSUME   CS:Kod, DS:Dane, SS:Stosik		;informuje kompilator, z kt�rego rejestru segmentowego ma korzystac przy odwolaniach do etykiety

Start:
                mov     ax, Dane						;przeniesienie danych do rejestru og�lnego
				mov		ds, ax							;przeniesienie danych z rejestru og�lnego do segmentowego

				mov		AL, a							;przeniesienie danych a do rejestru al
				add 	AL, b							;dodanie b do rejestru al
				mul		d								;mnozenie rejestru al razy d
				mov		BL, b							;przeniesienie danych do rejestru bl
				sub		BL, c							;odjecie danej c od rejestru bl
				div		BL								;podzielenie rejestru al przez rejestr bl
				mov 	Wynik, AL						;przeniesienie rejestru al do zmiennej wynik
				mov 	Reszta, AH

				mov     ax, 4C00h						;funkcja zakanczajaca program
                int     21h								;wywolanie funkcji

Kod             ENDS									;koniec segmentu kodu

Stosik          SEGMENT STACK							;poczatek segmentu stosu

                DB      100h DUP (?)					;alokacja pamieci na stos o 100 miejscach o nieokreslonej wielkosci

Stosik          ENDS									;koniec segmentu stosu

                END    Start

"
Fe2U50hf,mint stealer logs,Artem_,JavaScript,Sunday 24th of March 2024 04:34:51 PM CDT,"mint-stl.ru logs by APT-69
https://www.paste.cash/?c6f4f81992738ce0#GQCZ4JgEK8x3JQFR6WHYwN8ev3JyAws87tL9frrpaQDL
 
logs:
https://gofile.io/d/JWdg8x
https://gofile.io/d/rp6yZl
https://gofile.io/d/ytYtw0
https://gofile.io/d/VJFFoh
https://gofile.io/d/FjeNyW
https://gofile.io/d/PfrO8S
https://gofile.io/d/qcbE33
https://gofile.io/d/8l5j8s
https://gofile.io/d/mZ2iDU
https://gofile.io/d/sKnitI
https://gofile.io/d/HZKgKn
https://gofile.io/d/C44FJN
https://gofile.io/d/BKTIDc
https://gofile.io/d/yARaoS
https://gofile.io/d/Hc49Us
Mint Stealer Logs"
uQQeyjk2,Mint Stealer Logs (Malware Stealer logs),Artem_,C,Sunday 24th of March 2024 04:34:25 PM CDT,"mint-stl.ru logs leak by APT-69
https://www.paste.cash/?c6f4f81992738ce0#GQCZ4JgEK8x3JQFR6WHYwN8ev3JyAws87tL9frrpaQDL

logs:
https://gofile.io/d/JWdg8x
https://gofile.io/d/rp6yZl
https://gofile.io/d/ytYtw0
https://gofile.io/d/VJFFoh
https://gofile.io/d/FjeNyW
https://gofile.io/d/PfrO8S
https://gofile.io/d/qcbE33
https://gofile.io/d/8l5j8s
https://gofile.io/d/mZ2iDU
https://gofile.io/d/sKnitI
https://gofile.io/d/HZKgKn
https://gofile.io/d/C44FJN
https://gofile.io/d/BKTIDc
https://gofile.io/d/yARaoS
https://gofile.io/d/Hc49Us
Mint Stealer Logs"
dwVLxd8k,computerFirm,zarkoto223,JavaScript,Sunday 24th of March 2024 04:26:19 PM CDT,"function asd(input) {
  let n = Number(input[0]);
  let sales = 0;
  let rating = 0;
  let last = 0;
  let firstTwo = 0;

  for (let i = 1; i <= n; i++) {
    let pcs = input[i];
    last = Number(pcs[2]);
    firstTwo = Number(pcs[0] + pcs[1]);
    rating += last;

    if (last === 2) {
      sales += 0;
    } else if (last === 3) {
      sales += firstTwo / 2;
    } else if (last === 4) {
      sales += firstTwo * 0.7;
    } else if (last === 5) {
      sales += firstTwo * 0.85;
    } else {
      sales += firstTwo;
    }
  }
  console.log(sales.toFixed(2));
  console.log((rating / n).toFixed(2));
}"
RHdE1a4x,Untitled,unmeinks,C++,Sunday 24th of March 2024 04:17:33 PM CDT,"// PyxEngine/public/GameAPI.h
#pragma once
#include ""Types.h""

#ifdef PYX_PLATFORM_WINDOWS
	#ifdef PYX_BUILD_ENGINE
		#define PYX_GAME_API extern ""C"" __declspec(dllexport)
	#else
		#define PYX_GAME_API extern ""C""
	#endif
#else
	#error Platform not supported
#endif

class IGameAPI {
   public:
	virtual ~IGameAPI() = default;
	virtual void helloWorld() = 0;
};

typedef IGameAPI* GetPyxGameAPI(PyxContext* context);

// PyxEngine/public/GameAPI.cpp
#include ""GameAPI.h""

#include <iostream>

class GameAPI : public IGameAPI {
   public:
	GameAPI(PyxContext* context) : m_Context(context) {}
	void helloWorld() override { std::cout << ""goodbye world ):"" << std::endl; }

   private:
	PyxContext* m_Context;
};

PYX_GAME_API IGameAPI* getPyxGameAPI(PyxContext* context) {
	GameAPI* api{ new GameAPI(context) };
	return api;
}

// PyxEngine/public/EngineAPI.h
#pragma once
#include ""Types.h""

#ifdef PYX_PLATFORM_WINDOWS
	#ifdef PYX_BUILD_ENGINE
		#define PYX_ENGINE_API extern ""C"" __declspec(dllexport)
	#else
		#define PYX_ENGINE_API extern ""C""
	#endif
#else
	#error Platform not supported
#endif

typedef struct SDL_Window SDL_Window;

class IPyxEngineAPI {
   public:
	virtual ~IPyxEngineAPI() = default;
	virtual void init(SDL_Window* window) = 0;
};

typedef IPyxEngineAPI* GetPyxEngineAPI(PyxContext* context);

// PyxEngine/public/EngineAPI.cpp
#include ""EngineAPI.h""
#include ""../src/Logger.h""
#include ""../src/VulkanRenderer/Renderer.h""

#include <iostream>

class PyxEngineAPI : public IPyxEngineAPI {
   public:
	PyxEngineAPI(PyxContext* context) : m_Context(context) {}
	void init(SDL_Window* window) override {
		pyx::Logger::init();
		VulkanRenderer::init(window);
	}

   private:
	PyxContext* m_Context;
};

PYX_ENGINE_API IPyxEngineAPI* getPyxEngineAPI(PyxContext* context) {
	IPyxEngineAPI* api{ new PyxEngineAPI(context) };
	return api;
}

// PyxEngine/public/GameInterface.h
#pragma once
#include ""GameAPI.h""

#ifdef PYX_PLATFORM_WINDOWS
	#ifdef PYX_BUILD_ENGINE
		#define PYX_GAME extern ""C""
	#else
		#define PYX_GAME extern ""C"" __declspec(dllexport)
	#endif
#else
	#error Platform not supported
#endif

class IGame {
   public:
	virtual ~IGame() = default;
	virtual void start() = 0;
	virtual void update() = 0;
};

typedef IGame* GetGame(IGameAPI* pyxGameAPI);

// examples/FirstExample/src/MyGame.h
#pragma once
#include ""GameInterface.h""

class MyGame : public IGame {
   public:
	inline MyGame(IGameAPI* pyxGameAPI) : m_Pyx(pyxGameAPI) {}
	void start() override;
	void update() override;

   private:
	IGameAPI* m_Pyx;
};

// examples/FirstExample/src/MyGame.cpp
#include ""MyGame.h""

void MyGame::start() {
	m_Pyx->helloWorld();
}

void MyGame::update() {}

PYX_GAME IGame* getGame(IGameAPI* pyxGameAPI) {
	IGame* game{ new MyGame(pyxGameAPI) };
	return game;
}

// Runtime/src/Platforms/Windows/Main.cpp
// previous code...

	HMODULE gameDLL{ LoadLibraryA(""Game.dll"") };
	HMODULE pyxEngineDLL{ LoadLibraryA(""PyxEngine.dll"") };

	GetPyxGameAPI* getPyxGameAPI{ reinterpret_cast<GetPyxGameAPI*>(
		GetProcAddress(pyxEngineDLL, ""getPyxGameAPI"")
	) };
	GetPyxEngineAPI* getPyxEngineAPI{ reinterpret_cast<GetPyxEngineAPI*>(
		GetProcAddress(pyxEngineDLL, ""getPyxEngineAPI"")
	) };
	GetGame* getGame{
		reinterpret_cast<GetGame*>(GetProcAddress(gameDLL, ""getGame""))
	};

	PyxContext engineContext{};

	IGameAPI* gameAPI{ getPyxGameAPI(&engineContext) };
	IPyxEngineAPI* engineAPI{ getPyxEngineAPI(&engineContext) };

	engineAPI->init(window);
	IGame* game{ getGame(gameAPI) };
	game->start();

// subsiquent code..."
0VEYR7mF,AttributeError: module 'asyncio' has no attribute 'TaskGroup',basedcount_bot,Python,Sunday 24th of March 2024 03:53:29 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot/backup_and_cheating/back_up_and_cheating.py"", line 65, in backup_and_cheating_runner
    async with asyncio.TaskGroup() as tg:
AttributeError: module 'asyncio' has no attribute 'TaskGroup'
"
xUgpXDZk,Untitled,Mysoft,FreeBasic,Sunday 24th of March 2024 03:20:34 PM CDT,"function LoadBmp( sBmpFile as string ) as fb.image ptr    
  var f = freefile()
  if open(sBmpFile for binary access read as #f) then return 0
  dim as long iWid,iHei
  get #f,19,iWid : get #f,,iHei : close #f
  var pTemp = imagecreate(iWid,iHei,1) : bload sBmpFile,pTemp
  return pTemp  
end function
"
6VZxqvAV,IC Markets Now Live On TradingView,fxvnpro,PHP,Sunday 24th of March 2024 03:14:30 PM CDT,https://www.fxvnpro.com/ic-markets-now-live-on-tradingview/
Yjk6qiEg,Untitled,kirkarr,Lua,Sunday 24th of March 2024 02:43:07 PM CDT,"local ofx, ofy = 0, 0
local sx, sy = 32, 32
local x, y = 0, 0
local last = 0
hook.Add(""Tick"",""fill"",function ()
	cur = CurTime()
    if cur - last > 0.35 then
        net.Start(""pixelbattle"")
        net.WriteUInt(ofx+x,24)
        net.WriteUInt(ofy+y,24)
        net.WriteUInt(pixelbattle.encode(HSVToColor((x/sx) * 180 + (y/sy)*180,1,1)),24)
        net.SendToServer()
        last = cur
        x = x + 1
        if x > sx then
        	x = 0
            y = y + 1
        end
        if y > sy then
        	y = 0     
        end
    end
end)"
GXLXSjHW,petr good minimax jen -1000,max2201111,Python,Sunday 24th of March 2024 02:33:10 PM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachováváme pouze informace o pozici
    return simplified_fen

def evaluate_position(board):
    if board.is_checkmate():
        return -1000  # Mat protihráči
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
        return 0  # Remíza
    else:
        return None  # Hra pokračuje

def update_AR_for_mate_in_k(board, AR, max_k=1000):
    k = 0
    while True:
        k += 1
        changed = False
        for _ in range(2):  # Dvakrát pro každou hodnotu k
            for fen in list(AR.keys()):
                board.set_fen(fen)
                if AR[fen] is not None:
                    continue  # Tato pozice již byla ohodnocena

                evaluations = []
                for move in board.legal_moves:
                    board.push(move)
                    next_fen = simplify_fen_string(board.fen())
                    if next_fen not in AR:
                        AR[next_fen] = evaluate_position(board)  # Přidání nových pozic do AR
                    board.pop()

                    if AR[next_fen] is not None:
                        evaluations.append(AR[next_fen])
#  pokud max=1001-k přiřaď nové ohodnocení jako 1000-k

# pokud max=0 přiřad nové ohodnocení jako 0

# tuto: pokud max=-1001+k, přiřaď nové ohodnocení jako -1000+k
#                 # Výpočet nového hodnocení na základě následovníků

# if max_eval == 1001-k:
#                         AR[fen] = 1000 - k
#                         changed = True
#                     elif max_eval == -1001+k:
#                         AR[fen] = -1000 + k


                if evaluations:
                    max_eval = -min(evaluations)
                    if max_eval == 1001-k:
                        AR[fen] = 1000 - k
                        changed = True
                    elif max_eval == -1001+k:
                        AR[fen] = -1000 + k
                        changed = True
                    elif 0 in evaluations:
                        AR[fen] = 0
                        changed = True

            if not changed:
                break  # Konec cyklu, pokud nedošlo k žádné změně

        if k >= max_k or not changed:
            break  # Konec hlavního cyklu, pokud dosáhneme max_k nebo nedošlo k žádné změně

            
def print_draw_positions(AR):
    """"""
    Vytiskne všechny remízové pozice (hodnota 0) zaznamenané v slovníku AR.
    """"""
    print(""Remízové pozice:"")
    for fen, value in AR.items():
        if value != None:
            print(f""FEN>: {fen}, Hodnota: {value}"",""\n"",chess.Board(fen),""<\n"")
            
            
def main():
    initial_fen = ""8/8/8/8/3Q4/5K2/8/4k3 w - - 0 1""
    board = chess.Board(initial_fen)
    AR = {simplify_fen_string(initial_fen): None}  # Inicializace AR s počáteční pozicí
    
    update_AR_for_mate_in_k(board, AR, max_k=50)  # Aktualizace AR
    print_draw_positions(AR)
    
    

main()"
HmA7nM8a,Email auction won with additional content,wpgenie,PHP,Sunday 24th of March 2024 02:25:57 PM CDT,"<?php
/**
 * Email auction won with additional content
 *
 * this email template should go to /themes/child-theme/woocommerce/emails/ folder
 *
 */
if (!defined('ABSPATH')) exit ; // Exit if accessed directly

$product_data = wc_get_product($product_id);
?>
<?php do_action( 'woocommerce_email_header', $email_heading, $email ); ?>
<?php if( ( $product_data->get_auction_type() == 'reverse' ) && ( get_option('simple_auctions_remove_pay_reverse') == 'yes')  ) { ?>
	<p><?php printf( wp_kses_post( __( ""Congratulations. You have won the auction for <a href='%s'>%s</a>. Your bid was: %s."", 'wc_simple_auctions' ) ), get_permalink( $product_id ), $product_data -> get_title(), wc_price( $current_bid ) ); ?></p>
<?php } else { ?>
	<p><?php printf( wp_kses_post( __( ""Congratulations. You have won the auction for <a href='%s'>%s</a>. Your bid was: %s. Please click on this link to pay for your auction %s "", 'wc_simple_auctions' ) ), get_permalink( $product_id  ), $product_data -> get_title(), wc_price( $current_bid ), '<a href=""' . esc_attr( add_query_arg( ""pay-auction"",$product_id, $checkout_url ) ). '"">' . esc_html__( 'payment', 'wc_simple_auctions' ) . '</a>' ); ?></p>
<?php } ?>

<p>
<?php 
if ( $additional_content ) {
	echo wp_kses_post( wpautop( wptexturize( $additional_content ) ) );
}
?>
</p>


<?php do_action( 'woocommerce_email_footer', $email ); ?>"
HiLFjgLx,Ale's Kitchen,bAngelov,JavaScript,Sunday 24th of March 2024 02:18:48 PM CDT,"function solve() {
   document.querySelector('#btnSend').addEventListener('click', onClick);

   function onClick () {
      const inputFieldElement = document.querySelector(""#inputs textarea"")
      const [firstOutputElement, secondOutputElement] = document.querySelectorAll(""#outputs div p:last-of-type"")
      let data = {}
      firstOutputElement.textContent = ''
      secondOutputElement.textContent = ''

      const input = JSON.parse(inputFieldElement.value)
      input.forEach(element=>{
         const [name,dat] = element.split("" - "")
         if (!data.hasOwnProperty(name)) data[name] = []
         const workers = dat.split("", "")
         workers.forEach(el=>{
            let [worker,salary] = el.split("" "")
            salary = Number(salary)
            data[name].push({worker:worker,salary:salary})
         })
      })
      data = Object.entries(data).sort(([nameA,dataA],[nameB,dataB])=>{
         let salariesA = dataA.reduce((a,b)=> {a.push(b.salary); return a},[]).reduce((a,b)=>a+b) / dataA.length
         let salariesB = dataB.reduce((a,b)=> {a.push(b.salary); return a},[]).reduce((a,b)=>a+b) / dataB.length
         return salariesB - salariesA
      })

      const bestRestaurant = data[0]
      const salaries = bestRestaurant[1].reduce((a,b)=> {a.push(b.salary); return a},[]).sort((a,b)=>b-a)
      const [bestSalary, averageSalary] = [salaries[0],salaries.reduce((a,b)=>a+b) / salaries.length]
      firstOutputElement.textContent = `Name: ${bestRestaurant[0]} Average Salary: ${averageSalary.toFixed(2)} Best Salary: ${bestSalary.toFixed(2)}`
      bestRestaurant[1]
          .sort((a,b)=>b.salary-a.salary)
          .forEach(data=>{
         secondOutputElement.textContent += `Name: ${data.worker} With Salary: ${data.salary} `
      })

      
   }
}"
PCNVWJsc,OnEquity : Empowering Your Trading Journey with Trusted Partnership,reviewbrokers,PHP,Sunday 24th of March 2024 02:17:34 PM CDT,https://www.reviewbrokers.net/onequity-empowering-your-trading-journey-with-trusted-partnership/
Hq4znCs1,hells kitchen,alexandaryordanov,JavaScript,Sunday 24th of March 2024 02:13:39 PM CDT,"function solve() {
   document.querySelector('#btnSend').addEventListener('click', onClick);

   function onClick () {
      let input = document.querySelector('#inputs textarea').value
      let restourants = [];
      for (const el of JSON.parse(input)) {
         let [name, workersString] = el.split("" - "")
         let workers = [];
         for (const worker of workersString.split("", "")) {
            let [name, salary] = worker.split("" "")
            workers.push({name, salary: Number(salary)})
         }
         if (restourants.some(restourant => restourant.name === name)) {
            let currentRestourant = restourants.find(restourant => restourant.name === name)
            for (const worker of workers) {
               currentRestourant.workers.push(worker)
            }
         } else {
            restourants.push({name, workers})
         }
         
      }
      let bestRestourantName = """";
      let bestAverageSallary = Number.MIN_SAFE_INTEGER;
      let bestWorkerSallary = 0;
      let bestWorkersList = [];

      for (const restourant of restourants) {
         let sallarySum = 0;
         let currentBestSallary = Number.MIN_SAFE_INTEGER;
         for (const worker of restourant.workers) {
            sallarySum += worker.salary
            if (worker.salary > currentBestSallary) {
               currentBestSallary = worker.salary
            }
         }

         let currentAverageSallary = sallarySum / restourant.workers.length
         if (currentAverageSallary > bestAverageSallary) {
            bestRestourantName = restourant.name
            bestAverageSallary = currentAverageSallary
            bestWorkerSallary = currentBestSallary
            bestWorkersList = restourant.workers.sort((a, b) => b.salary -a.salary)
         }
      }
      let bestWorkerListFinal = [];
      for (const worker of bestWorkersList) {
         bestWorkerListFinal.push(`Name: ${worker.name} With Salary: ${worker.salary}`)
      }
      document.querySelector('#bestRestaurant p').textContent = `Name: ${bestRestourantName} Average Salary: ${bestAverageSallary.toFixed(2)} Best Salary: ${bestWorkerSallary.toFixed(2)}`
      document.querySelector('#workers p').textContent = bestWorkerListFinal.join("" "")
   }
}"
q6DXuXZx,petr good minimax jen -1000,max2201111,Python,Sunday 24th of March 2024 01:48:34 PM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachováváme pouze informace o pozici
    return simplified_fen

def evaluate_position(board):
    if board.is_checkmate():
        return -1000  # Mat protihráči
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
        return 0  # Remíza
    else:
        return None  # Hra pokračuje

def update_AR_for_mate_in_k(board, AR, max_k=1000):
    k = 0
    while True:
        k += 1
        changed = False
        for _ in range(2):  # Dvakrát pro každou hodnotu k
            for fen in list(AR.keys()):
                board.set_fen(fen)
                if AR[fen] is not None:
                    continue  # Tato pozice již byla ohodnocena

                evaluations = []
                for move in board.legal_moves:
                    board.push(move)
                    next_fen = simplify_fen_string(board.fen())
                    if next_fen not in AR:
                        AR[next_fen] = evaluate_position(board)  # Přidání nových pozic do AR
                    board.pop()

                    if AR[next_fen] is not None:
                        evaluations.append(AR[next_fen])
#  pokud max=1001-k přiřaď nové ohodnocení jako 1000-k

# pokud max=0 přiřad nové ohodnocení jako 0

# tuto: pokud max=-1001+k, přiřaď nové ohodnocení jako -1000+k
#                 # Výpočet nového hodnocení na základě následovníků
                if evaluations:
                    max_eval = -min(evaluations)
                    if max_eval == -1001+k:
                        AR[fen] = 1000 - k
                        changed = True
                    elif max_eval == 1001-k:
                        AR[fen] = -1000 + k
                        chnaged = True
                    elif 0 in evaluations:
                        AR[fen] = 0
                        changed = True

            if not changed:
                break  # Konec cyklu, pokud nedošlo k žádné změně

        if k >= max_k or not changed:
            break  # Konec hlavního cyklu, pokud dosáhneme max_k nebo nedošlo k žádné změně

            
def print_draw_positions(AR):
    """"""
    Vytiskne všechny remízové pozice (hodnota 0) zaznamenané v slovníku AR.
    """"""
    print(""Remízové pozice:"")
    for fen, value in AR.items():
        if value != None and value < -980:
            print(f""FEN>: {fen}, Hodnota: {value}"",""\n"",chess.Board(fen),""<\n"")
            
            
def main():
    initial_fen = ""8/8/8/8/3Q4/5K2/8/4k3 w - - 0 1""
    board = chess.Board(initial_fen)
    AR = {simplify_fen_string(initial_fen): None}  # Inicializace AR s počáteční pozicí
    
    update_AR_for_mate_in_k(board, AR, max_k=50)  # Aktualizace AR
    print_draw_positions(AR)
    
    

main()"
THem1tNT,Untitled,Abdula_2314124,C#,Sunday 24th of March 2024 01:47:53 PM CDT,"namespace StringsLesson
{
    class Program
    {
        static void Main(string[] arg)
        {
            //Console.WriteLine(""Не пишiть символ 'p'"");
            //string text = Console.ReadLine();
            //int age = int.Parse(Console.ReadLine());

            //Console.WriteLine($""Hello {text} {age}"");
            //text = text.ToLower();
            //text = text.Trim();

            //if (text.Equals(""BASEfffff""))
            //{
            //    Console.WriteLine(""ERROR"");
            //}

            //if (text.Contains('a') && text.Contains('b'))
            //{
            //    Console.WriteLine(""ERROR"");
            //}
            //text = text.Insert(0, ""e"");
            //if (text.StartsWith('e'))
            //{
            //    Console.WriteLine(""Start"");
            //}
            //text.EndsWith(""apk"");
            //text = text.Remove(3);
            //text = text.Replace('b', 'a');
            //char[] bykvi = text.ToCharArray();

            //Console.WriteLine(text);

            //string[] niks = {""UBIycha"", ""ДРОЖДІ540"",
            //    ""Terminator"", ""Nahibator"", ""Visual"", """"};

            //string newNik = Console.ReadLine();
            //if (!niks.Contains(newNik))
            //{
            //    niks[niks.Length - 1] = newNik;
            //    Console.WriteLine(""Чудовий нік"");
            //}
            //else
            //{
            //    Console.WriteLine(""Цей нік уже є"");
            //}

            //Console.WriteLine(""Список усіх ніків"");
            //foreach (var nik in niks)
            //{
            //    Console.WriteLine(nik);
            //}

            char[] symbols = { 'a', 'b', 'c', 'd', 'e' };
            Random rnd = new Random();
            int lenghtNewNik = int.Parse(Console.ReadLine());
            int lenghtNiks = int.Parse(Console.ReadLine());
            string test = string.Empty;
            int countNiks = 0;
            string[] testNiks = new string[lenghtNiks];
            while (countNiks < lenghtNiks)
            {
                for (int i = 0; i < lenghtNewNik; i++)
                {
                    test += symbols[rnd.Next(0, symbols.Length)];
                    testNiks[i] = test;
                    countNiks++;
                    test = string.Empty;
                }
            }

            foreach (var nik in testNiks)
            {
                Console.WriteLine(nik);
            }
            
        }
    }
}
"
MgePu5NH,Untitled,kirkarr,Lua,Sunday 24th of March 2024 01:36:26 PM CDT,"local mat = Material( ""https://avatars.akamai.steamstatic.com/8ce5e58726b034567de364c8dc150c768b33d995_medium.jpg"" )
local text = mat:GetTexture(""$basetexture"")
print(text)
wid = text:Width()
hei = text:Height()
local x, y = 1, 1
local last = 0
hook.Add(""Tick"",""sas"",function ()
	cur = CurTime()
	if cur - last > 0.6 then
		net.Start(""pixelbattle"")
		net.WriteUInt(x,24)
		net.WriteUInt(y,24)
		net.WriteUInt(pixelbattle.encode(text:GetColor(x,y)),24)
		net.SendToServer()
		x = x + 1
		if x > wid then
			x = 0
			y = y + 1
		end
		if y > hei then
			y = 0
		end
	end
end)"
XQb7mJWr,InvalidURI: MongoDB URI options are key=value pairs.,basedcount_bot,Python,Sunday 24th of March 2024 01:36:07 PM CDT,"Traceback (most recent call last):
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/backup_and_cheating/./back_up_and_cheating.py"", line 64, in task_scheduler
    await cheating_report_task
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/backup_and_cheating/./back_up_and_cheating.py"", line 30, in send_cheating_report
    async with get_mongo_client() as mongo_client:
  File ""/home/kira/.local/share/pyenv/versions/3.11.7/lib/python3.11/contextlib.py"", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/utility_functions.py"", line 88, in get_mongo_client
    cluster = AsyncIOMotorClient(getenv(""MONGO_PASS""))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/motor/core.py"", line 163, in __init__
    delegate = self.__delegate_class__(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/mongo_client.py"", line 771, in __init__
    res = uri_parser.parse_uri(
          ^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 529, in parse_uri
    options.update(split_options(opts, validate, warn, normalize))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 353, in split_options
    raise InvalidURI(""MongoDB URI options are key=value pairs."") from None
pymongo.errors.InvalidURI: MongoDB URI options are key=value pairs.
"
8i76GWey,updateSQLQuery.ps1,Combreal,PowerShell,Sunday 24th of March 2024 01:32:25 PM CDT,"#Requieres MySQL Connector NET 8.3.0
[void][system.reflection.Assembly]::LoadFrom(""C:\Program Files (x86)\MySQL\MySQL Connector NET 8.3.0\MySql.Data.dll"")

Function New-updateSQLQuery ($connectionProperties, $CustomerID, $CustomerName) {
    $Connection = New-Object  MySql.Data.MySqlClient.MySqlConnection 
    $Connection.ConnectionString=""server=$($connectionProperties.mysqlHost);uid=$($connectionProperties.mysqlUser);pwd=$($connectionProperties.mysqlPass);database=$($connectionProperties.mysqlDatabase)""
    $Connection.Open()
    
    $command = New-Object MySql.Data.MySqlClient.MySqlCommand
    $command.Connection = $Connection
    $command.CommandText = ""UPDATE Customers SET CustomerName = @CustomerName WHERE CustomerID = @CustomerID""
    $command.Parameters.AddWithValue(""@CustomerName"", $CustomerName) | Out-Null
    $command.Parameters.AddWithValue(""@CustomerID"", $CustomerID) | Out-Null
    $command.ExecuteNonQuery() | Out-Null
     
    $Connection.Close()
}

$connectionProperties = New-Object PSObject
$connectionProperties | Add-Member Noteproperty ""mysqlHost"" ""localhost""
$connectionProperties | Add-Member Noteproperty ""mysqlUser"" ""myuser""
$connectionProperties | Add-Member Noteproperty ""mysqlPass"" ""mypswd""
$connectionProperties | Add-Member Noteproperty ""mysqlDatabase"" ""mydb""

New-updateSQLQuery $connectionProperties ""6"" ""Combre"""
9sT8ekh4,InvalidURI: MongoDB URI options are key=value pairs.,basedcount_bot,Python,Sunday 24th of March 2024 01:32:02 PM CDT,"Traceback (most recent call last):
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 354, in split_options
    raise ValueError
ValueError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/backup_and_cheating/./back_up_and_cheating.py"", line 64, in task_scheduler
    await cheating_report_task
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/backup_and_cheating/./back_up_and_cheating.py"", line 30, in send_cheating_report
    async with get_mongo_client() as mongo_client:
  File ""/home/kira/.local/share/pyenv/versions/3.11.7/lib/python3.11/contextlib.py"", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/utility_functions.py"", line 88, in get_mongo_client
    cluster = AsyncIOMotorClient(getenv(""MONGO_PASS""))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/motor/core.py"", line 148, in __init__
    delegate = self.__delegate_class__(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/mongo_client.py"", line 766, in __init__
    res = uri_parser.parse_uri(
          ^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 527, in parse_uri
    options.update(split_options(opts, validate, warn, normalize))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 356, in split_options
    raise InvalidURI(""MongoDB URI options are key=value pairs."")
pymongo.errors.InvalidURI: MongoDB URI options are key=value pairs.
"
tnbSTUJB,InvalidURI: MongoDB URI options are key=value pairs.,basedcount_bot,Python,Sunday 24th of March 2024 01:30:03 PM CDT,"Traceback (most recent call last):
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 354, in split_options
    raise ValueError
ValueError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""back_up_and_cheating.py"", line 63, in task_scheduler
    await cheating_report_task
  File ""back_up_and_cheating.py"", line 29, in send_cheating_report
    async with get_mongo_client() as mongo_client:
  File ""/home/kira/.local/share/pyenv/versions/3.11.7/lib/python3.11/contextlib.py"", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/utility_functions.py"", line 88, in get_mongo_client
    cluster = AsyncIOMotorClient(getenv(""MONGO_PASS""))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/motor/core.py"", line 148, in __init__
    delegate = self.__delegate_class__(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/mongo_client.py"", line 766, in __init__
    res = uri_parser.parse_uri(
          ^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 527, in parse_uri
    options.update(split_options(opts, validate, warn, normalize))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 356, in split_options
    raise InvalidURI(""MongoDB URI options are key=value pairs."")
pymongo.errors.InvalidURI: MongoDB URI options are key=value pairs.
"
v9WKNSax,InvalidURI: MongoDB URI options are key=value pairs.,basedcount_bot,Python,Sunday 24th of March 2024 01:28:50 PM CDT,"Traceback (most recent call last):
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 354, in split_options
    raise ValueError
ValueError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""back_up_and_cheating.py"", line 64, in task_scheduler
    await cheating_report_task
  File ""back_up_and_cheating.py"", line 30, in send_cheating_report
    async with get_mongo_client() as mongo_client:
  File ""/home/kira/.local/share/pyenv/versions/3.11.7/lib/python3.11/contextlib.py"", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/utility_functions.py"", line 88, in get_mongo_client
    cluster = AsyncIOMotorClient(getenv(""MONGO_PASS""))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/motor/core.py"", line 148, in __init__
    delegate = self.__delegate_class__(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/mongo_client.py"", line 766, in __init__
    res = uri_parser.parse_uri(
          ^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 527, in parse_uri
    options.update(split_options(opts, validate, warn, normalize))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/mnt/secondary-ssd/Kira_GitProjects/PythonProjects/basedcount_bot/.venv/lib/python3.11/site-packages/pymongo/uri_parser.py"", line 356, in split_options
    raise InvalidURI(""MongoDB URI options are key=value pairs."")
pymongo.errors.InvalidURI: MongoDB URI options are key=value pairs.
"
XFH9qM7K,Pet Sim 99 Script Hub,quikzyYTbtw,Lua,Sunday 24th of March 2024 01:28:38 PM CDT,"--[[
Pet Sim 99 Script Hub with many different ps99 script
Features:
-Auto Rank
-Auto Zone Quests
-Auto Index
-Booth Sniper
-Auto Balloon Pop
-and more
]]

loadstring(game:HttpGet(""https://raw.githubusercontent.com/zerqhy/petsim99/main/zaphub"", true))()"
TurtUt8G,Gacha,gigilo1968,Java,Sunday 24th of March 2024 01:15:18 PM CDT,"Index: org/l2jmobius/gameserver/enums/ItemLocation.java
===================================================================
--- org/l2jmobius/gameserver/enums/ItemLocation.java	(revision 650)
+++ org/l2jmobius/gameserver/enums/ItemLocation.java	(working copy)
@@ -9,22 +9,24 @@
  * This program is intellectual property of hi5.ge and can't, be
  * used for any commercial or financial use without the permission
  * of the rightful owners
- */
-package org.l2jmobius.gameserver.enums;
-
-public enum ItemLocation
-{
-	VOID,
-	INVENTORY,
-	PAPERDOLL,
-	WAREHOUSE,
-	CLANWH,
-	PET,
-	PET_EQUIP,
-	LEASE,
-	REFUND,
-	MAIL,
-	FREIGHT,
-	COMMISSION,
-	EXCHANGE
-}
+ */
+package org.l2jmobius.gameserver.enums;
+
+public enum ItemLocation
+{
+	VOID,
+	INVENTORY,
+	PAPERDOLL,
+	WAREHOUSE,
+	CLANWH,
+	PET,
+	PET_EQUIP,
+	LEASE,
+	REFUND,
+	MAIL,
+	FREIGHT,
+	COMMISSION,
+	EXCHANGE,
+	RESTORE,
+	GACHA
+}
Index: org/l2jmobius/gameserver/enums/UniqueGachaRank.java
===================================================================
--- org/l2jmobius/gameserver/enums/UniqueGachaRank.java	(nonexistent)
+++ org/l2jmobius/gameserver/enums/UniqueGachaRank.java	(working copy)
@@ -0,0 +1,53 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.enums;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * @author Index
+ */
+public enum UniqueGachaRank
+{
+	RANK_UR(1),
+	RANK_SR(2),
+	RANK_R(3),;
+	
+	private final int _clientId;
+	
+	private final static Map<Integer, UniqueGachaRank> VALUES;
+	static
+	{
+		VALUES = new HashMap<>(UniqueGachaRank.values().length);
+		for (UniqueGachaRank rank : values())
+		{
+			VALUES.put(rank.getClientId(), rank);
+		}
+	}
+	
+	public static UniqueGachaRank getRankByClientId(int clientId)
+	{
+		return VALUES.getOrDefault(clientId, null);
+	}
+	
+	UniqueGachaRank(int clientId)
+	{
+		_clientId = clientId;
+	}
+	
+	public int getClientId()
+	{
+		return _clientId;
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/instancemanager/events/UniqueGachaManager.java
===================================================================
--- org/l2jmobius/gameserver/instancemanager/events/UniqueGachaManager.java	(nonexistent)
+++ org/l2jmobius/gameserver/instancemanager/events/UniqueGachaManager.java	(working copy)
@@ -0,0 +1,556 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.instancemanager.events;
+
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.concurrent.TimeUnit;
+
+import org.l2jmobius.commons.database.DatabaseFactory;
+import org.l2jmobius.commons.threads.ThreadPool;
+import org.l2jmobius.commons.util.Rnd;
+import org.l2jmobius.gameserver.data.xml.ItemData;
+import org.l2jmobius.gameserver.enums.UniqueGachaRank;
+import org.l2jmobius.gameserver.instancemanager.QuestManager;
+import org.l2jmobius.gameserver.model.StatSet;
+import org.l2jmobius.gameserver.model.actor.Player;
+import org.l2jmobius.gameserver.model.events.Containers;
+import org.l2jmobius.gameserver.model.events.EventType;
+import org.l2jmobius.gameserver.model.events.impl.creature.player.OnPlayerLogin;
+import org.l2jmobius.gameserver.model.events.impl.creature.player.OnPlayerLogout;
+import org.l2jmobius.gameserver.model.events.listeners.ConsumerEventListener;
+import org.l2jmobius.gameserver.model.holders.ItemHolder;
+import org.l2jmobius.gameserver.model.holders.uniquegacha.ItemTimeStampHolder;
+import org.l2jmobius.gameserver.model.holders.uniquegacha.UniqueGachaItemHolder;
+import org.l2jmobius.gameserver.model.item.ItemTemplate;
+import org.l2jmobius.gameserver.model.item.instance.Item;
+import org.l2jmobius.gameserver.model.itemcontainer.PlayerGachaWarehouse;
+import org.l2jmobius.gameserver.model.itemcontainer.PlayerInventory;
+import org.l2jmobius.gameserver.model.quest.Quest;
+import org.l2jmobius.gameserver.network.serverpackets.gacha.UniqueGachaSidebarInfo;
+
+import javafx.util.Pair;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaManager
+{
+	/**
+	 * @implNote 0.000001 MAXIMAL OF MINIMUM VALUE
+	 */
+	public final static int MINIMUM_CHANCE = 1_000_000;
+	public final static int MINIMUM_CHANCE_AFTER_DOT = 6;
+	public final static String GACHA_PLAYER_VARIABLE = ""GACHA_ROLL_COUNT"";
+	public final static String GACHA_LOCK_PLAYER_VARIABLE = ""UniqueGachaRoll"";
+	private final static LinkedList<ItemTimeStampHolder> EMPTY_LINKED_LIST = new LinkedList<>();
+	private final Set<UniqueGachaItemHolder> _visibleItems = new HashSet<>();
+	private final Map<UniqueGachaRank, Set<UniqueGachaItemHolder>> _rewardItems = new HashMap<>();
+	private final Map<UniqueGachaRank, Integer> _rewardChance = new HashMap<>();
+	private final Map<Integer, Long> _gameCosts = new HashMap<>();
+	
+	private final Map<Player, PlayerGachaWarehouse> _temporaryWarehouse = new HashMap<>();
+	private final Map<Integer, LinkedList<ItemTimeStampHolder>> _gachaHistory = new HashMap<>();
+	
+	private boolean _isActive;
+	private long _activeUntilPeriod;
+	private int _guaranteeRoll;
+	private boolean _showProbability;
+	private int _currencyItemId;
+	private int _totalRewardCount = 0;
+	private int _totalChanceSumma = 0;
+	
+	public UniqueGachaManager()
+	{
+		restoreGachaHistory(_gachaHistory);
+		ThreadPool.scheduleAtFixedRate(() -> storeGachaHistory(_gachaHistory), TimeUnit.MINUTES.toMillis(5), TimeUnit.MINUTES.toMillis(5));
+		Containers.Global().addListener(new ConsumerEventListener(Containers.Global(), EventType.ON_PLAYER_LOGIN, (final OnPlayerLogin event) -> onPlayerLogin(event), this));
+		Containers.Global().addListener(new ConsumerEventListener(Containers.Global(), EventType.ON_PLAYER_LOGOUT, (final OnPlayerLogout event) -> onPlayerLogout(event), this));
+	}
+	
+	public void reload()
+	{
+		final Quest quest = QuestManager.getInstance().getQuest(""UniqueGacha"");
+		if (quest == null)
+		{
+			return;
+		}
+		_totalRewardCount = 0;
+		_totalChanceSumma = 0;
+		_visibleItems.clear();
+		_rewardItems.clear();
+		_rewardChance.clear();
+		_gameCosts.clear();
+		quest.notifyEvent(""RELOAD"", null, null);
+	}
+	
+	public void setParameters(StatSet params)
+	{
+		_isActive = params.getBoolean(""isActive"", false);
+		_activeUntilPeriod = params.getLong(""activeUntilPeriod"", 0L);
+		_guaranteeRoll = params.getInt(""guaranteeRoll"", 200);
+		_showProbability = params.getBoolean(""showProbability"", false);
+		_currencyItemId = params.getInt(""currencyItemId"", 57);
+	}
+	
+	public void addReward(UniqueGachaRank rank, int itemId, long itemCount, int itemChance, int enchantLevel)
+	{
+		_totalRewardCount += 1;
+		_totalChanceSumma += itemChance;
+		_rewardItems.putIfAbsent(rank, new HashSet<>());
+		_rewardItems.get(rank).add(new UniqueGachaItemHolder(itemId, itemCount, itemChance, enchantLevel, rank));
+	}
+	
+	public void addGameCost(int rollCount, long itemCount)
+	{
+		_gameCosts.put(rollCount, itemCount);
+	}
+	
+	public void recalculateChances()
+	{
+		for (UniqueGachaRank rank : _rewardItems.keySet())
+		{
+			final Set<UniqueGachaItemHolder> items = _rewardItems.get(rank);
+			int totalChance = 0;
+			for (UniqueGachaItemHolder item : items)
+			{
+				totalChance += item.getItemChance();
+			}
+			_rewardChance.put(rank, totalChance);
+		}
+		recalculateVisibleItems();
+	}
+	
+	private void recalculateVisibleItems()
+	{
+		final List<UniqueGachaItemHolder> _rewards = new ArrayList<>(_rewardItems.getOrDefault(UniqueGachaRank.RANK_UR, Set.of()));
+		_rewards.sort(Comparator.comparingInt(UniqueGachaItemHolder::getItemChance));
+		if (_rewards.isEmpty())
+		{
+			return;
+		}
+		_visibleItems.clear();
+		_visibleItems.addAll(_rewards.subList(0, Math.min(4, (_rewards.size()))));
+		_rewards.clear();
+	}
+	
+	private void onPlayerLogin(OnPlayerLogin event)
+	{
+		final Player player = event == null ? null : event.getPlayer();
+		if (player == null)
+		{
+			return;
+		}
+		if (isActive())
+		{
+			PlayerGachaWarehouse warehouse = _temporaryWarehouse.getOrDefault(player, null);
+			if (warehouse == null)
+			{
+				warehouse = new PlayerGachaWarehouse(player);
+				warehouse.restore();
+				_temporaryWarehouse.put(player, warehouse);
+			}
+		}
+		player.sendPacket(isActive() ? UniqueGachaSidebarInfo.GACHA_ON : UniqueGachaSidebarInfo.GACHA_OFF);
+	}
+	
+	private void onPlayerLogout(OnPlayerLogout event)
+	{
+		final Player player = event == null ? null : event.getPlayer();
+		if (player == null)
+		{
+			return;
+		}
+		PlayerGachaWarehouse warehouse = _temporaryWarehouse.getOrDefault(player, null);
+		if (warehouse != null)
+		{
+			warehouse.deleteMe();
+			_temporaryWarehouse.remove(player);
+		}
+	}
+	
+	public Set<UniqueGachaItemHolder> getVisibleItems()
+	{
+		return _visibleItems;
+	}
+	
+	public Map<UniqueGachaRank, Set<UniqueGachaItemHolder>> getRewardItems()
+	{
+		return _rewardItems;
+	}
+	
+	public Map<Integer, Long> getGameCosts()
+	{
+		return _gameCosts;
+	}
+	
+	public boolean isActive()
+	{
+		return _isActive;
+	}
+	
+	public long getActiveUntilPeriod()
+	{
+		return _activeUntilPeriod;
+	}
+	
+	public int getGuaranteeRoll()
+	{
+		return _guaranteeRoll;
+	}
+	
+	public boolean isShowProbability()
+	{
+		return _showProbability;
+	}
+	
+	public int getCurrencyItemId()
+	{
+		return _currencyItemId;
+	}
+	
+	public int getCurrencyCount(Player player)
+	{
+		long count;
+		if (true)
+		{
+			count = player.getInventory().getInventoryItemCount(getCurrencyItemId(), -1);
+		}
+		return (int) Math.min(Integer.MAX_VALUE, count);
+	}
+	
+	private void removeCurrency(Player player, long count)
+	{
+		if (true)
+		{
+			final PlayerInventory inv = player.getInventory();
+			if ((inv == null) || !inv.canManipulateWithItemId(_currencyItemId))
+			{
+				return;
+			}
+			final Item item = inv.getItemByItemId(_currencyItemId);
+			if (item == null)
+			{
+				return;
+			}
+			inv.destroyItem(""gacha"", item, count, player, null);
+		}
+	}
+	
+	@SuppressWarnings(""unused"")
+	public int getStepsToGuaranteedReward(Player player)
+	{
+		if (true)
+		{
+			return _guaranteeRoll - player.getVariables().getInt(GACHA_PLAYER_VARIABLE, 0);
+		}
+		return 0;
+	}
+	
+	public Pair<List<UniqueGachaItemHolder>, Boolean> tryToRoll(Player player, int rollCount)
+	{
+		boolean rare = false;
+		final List<UniqueGachaItemHolder> rewards = new ArrayList<>();
+		if (!checkRequirements(player, rollCount))
+		{
+			return returnEmptyList();
+		}
+		try
+		{
+			player.getVariables().set(GACHA_LOCK_PLAYER_VARIABLE, true);
+			removeCurrency(player, _gameCosts.get(rollCount));
+			int playerRollProgress = player.getVariables().getInt(GACHA_PLAYER_VARIABLE, 0);
+			for (int roll = 0; roll < rollCount; roll++)
+			{
+				playerRollProgress += 1;
+				final boolean isGuaranteed = playerRollProgress >= _guaranteeRoll;
+				playerRollProgress = isGuaranteed ? 0 : playerRollProgress;
+				final UniqueGachaRank rank = randomRank(isGuaranteed);
+				final UniqueGachaItemHolder item = getRandomReward(rank);
+				rare = rare || (item.getRank().equals(UniqueGachaRank.RANK_SR) || item.getRank().equals(UniqueGachaRank.RANK_UR));
+				addItemToTemporaryWarehouse(player, item);
+				rewards.add(item);
+				addToHistory(player, item, roll);
+			}
+			player.getVariables().set(GACHA_PLAYER_VARIABLE, playerRollProgress);
+		}
+		finally
+		{
+			player.getVariables().remove(GACHA_LOCK_PLAYER_VARIABLE);
+		}
+		return new Pair<>(rewards, rare);
+	}
+	
+	private boolean checkRequirements(Player player, int rollCount)
+	{
+		if (player.getVariables().getBoolean(GACHA_LOCK_PLAYER_VARIABLE, false))
+		{
+			return false;
+		}
+		final long currencyCount = _gameCosts.getOrDefault(rollCount, -1L);
+		if (currencyCount == -1L)
+		{
+			return false;
+		}
+		final PlayerInventory inv = player.getInventory();
+		if (inv == null)
+		{
+			return false;
+		}
+		if (true && !inv.canManipulateWithItemId(_currencyItemId))
+		{
+			return false;
+		}
+		if (getCurrencyCount(player) < currencyCount)
+		{
+			return false;
+		}
+		final PlayerGachaWarehouse warehouse = _temporaryWarehouse.getOrDefault(player, null);
+		if (warehouse == null)
+		{
+			return false;
+		}
+		if (warehouse.getSize() >= PlayerGachaWarehouse.MAXIMUM_TEMPORARY_WAREHOUSE_COUNT)
+		{
+			return false;
+		}
+		return true;
+	}
+	
+	private void addToHistory(Player player, UniqueGachaItemHolder item, int roll)
+	{
+		final String count = String.valueOf(roll);
+		final String timeStamp = String.valueOf(System.currentTimeMillis() / 1000L) + ""0"".repeat(3 - count.length()) + (count);
+		_gachaHistory.computeIfAbsent(player.getObjectId(), v -> new LinkedList<>()).addLast(new ItemTimeStampHolder(item.getId(), item.getCount(), item.getEnchantLevel(), item.getRank(), Long.parseLong(timeStamp), false));
+	}
+	
+	private boolean addItemToTemporaryWarehouse(Player player, UniqueGachaItemHolder reward)
+	{
+		final PlayerGachaWarehouse warehouse = _temporaryWarehouse.getOrDefault(player, null);
+		if (warehouse == null)
+		{
+			return false;
+		}
+		final ItemTemplate template = ItemData.getInstance().getTemplate(reward.getId());
+		if (template == null)
+		{
+			return false;
+		}
+		boolean isSuccess = false;
+		if (!template.isStackable())
+		{
+			for (long index = 0; index < reward.getCount(); index++)
+			{
+				final Item item = warehouse.addItem(""Gacha Reward"", reward.getId(), reward.getCount(), player, null);
+				if (item == null)
+				{
+					isSuccess = false;
+					break;
+				}
+				isSuccess = true;
+			}
+		}
+		else
+		{
+			isSuccess = warehouse.addItem(""Gacha Reward"", reward.getId(), reward.getCount(), player, null) != null;
+		}
+		return isSuccess;
+	}
+	
+	@SuppressWarnings(""null"")
+	public boolean receiveItemsFromTemporaryWarehouse(Player player, List<ItemHolder> requestedItems)
+	{
+		final PlayerGachaWarehouse warehouse = _temporaryWarehouse.getOrDefault(player, null);
+		final PlayerInventory inventory = player.getInventory();
+		if ((warehouse == null) || (inventory == null))
+		{
+			return false;
+		}
+		// check items
+		for (ItemHolder requestedItem : requestedItems)
+		{
+			final ItemTemplate template = ItemData.getInstance().getTemplate(requestedItem.getId());
+			final List<Item> item = template == null ? null : template.isStackable() ? List.of(warehouse.getItemByItemId(requestedItem.getId())) : new ArrayList<>(warehouse.getAllItemsByItemId(requestedItem.getId()));
+			if ((item == null) || item.isEmpty())
+			{
+				return false;
+			}
+			if (template.isStackable() ? item.get(0).getCount() < requestedItem.getCount() : item.size() < requestedItem.getCount())
+			{
+				return false;
+			}
+		}
+		for (ItemHolder requestedItem : requestedItems)
+		{
+			final ItemTemplate template = ItemData.getInstance().getTemplate(requestedItem.getId());
+			final List<Item> item = template.isStackable() ? List.of(warehouse.getItemByItemId(requestedItem.getId())) : new ArrayList<>(warehouse.getAllItemsByItemId(requestedItem.getId()));
+			for (Item wareHouseItem : item)
+			{
+				warehouse.transferItem(""Gacha receive from Warehous"", wareHouseItem.getObjectId(), (template.isStackable() ? requestedItem.getCount() : 1), inventory, player, null);
+			}
+		}
+		return true;
+	}
+	
+	public Collection<Item> getTemporaryWarehouse(Player player)
+	{
+		final PlayerGachaWarehouse warehouse = _temporaryWarehouse.getOrDefault(player, null);
+		if (warehouse == null)
+		{
+			return Collections.emptyList();
+		}
+		return warehouse.getItems();
+	}
+	
+	private UniqueGachaRank randomRank(boolean isGuaranteed)
+	{
+		int sumChance = 0;
+		final int rollRank = Rnd.get(0, _totalChanceSumma);
+		final UniqueGachaRank rank;
+		if ((isGuaranteed && (Rnd.get(0, 100) <= 10)) || (rollRank <= (sumChance += _rewardChance.getOrDefault(UniqueGachaRank.RANK_UR, 0))))
+		{
+			rank = UniqueGachaRank.RANK_UR;
+		}
+		else if (isGuaranteed || (rollRank <= (sumChance + _rewardChance.getOrDefault(UniqueGachaRank.RANK_SR, 0))))
+		{
+			rank = UniqueGachaRank.RANK_SR;
+		}
+		else
+		{
+			rank = UniqueGachaRank.RANK_R;
+		}
+		return rank;
+	}
+	
+	private UniqueGachaItemHolder getRandomReward(UniqueGachaRank rank)
+	{
+		final List<UniqueGachaItemHolder> rollRewards = new ArrayList<>(_rewardItems.getOrDefault(rank, Set.of()));
+		Collections.shuffle(rollRewards);
+		int rollChance = 0;
+		final int rollReward = Rnd.get(0, _rewardChance.getOrDefault(rank, MINIMUM_CHANCE));
+		UniqueGachaItemHolder rewardItem = null;
+		for (UniqueGachaItemHolder item : rollRewards)
+		{
+			rewardItem = item;
+			rollChance += item.getItemChance();
+			if (rollChance >= rollReward)
+			{
+				break;
+			}
+		}
+		return rewardItem;
+	}
+	
+	public int getTotalRewardCount()
+	{
+		return _totalRewardCount;
+	}
+	
+	public List<ItemTimeStampHolder> getGachaCharacterHistory(Player player)
+	{
+		return _gachaHistory.getOrDefault(player.getObjectId(), EMPTY_LINKED_LIST);
+	}
+	
+	private static void restoreGachaHistory(Map<Integer, LinkedList<ItemTimeStampHolder>> history)
+	{
+		try (Connection con = DatabaseFactory.getConnection();
+			Statement st = con.createStatement();
+			ResultSet rset = st.executeQuery(""SELECT * FROM character_gacha_history ORDER BY receive_time DESC""))
+		{
+			while (rset.next())
+			{
+				final int characterId = rset.getInt(""char_id"");
+				final int itemId = rset.getInt(""item_id"");
+				final long itemCount = rset.getLong(""item_count"");
+				final int enchantLevel = rset.getInt(""item_enchant"");
+				final int itemRank = rset.getInt(""item_rank"");
+				final long receiveTime = rset.getLong(""receive_time"");
+				history.computeIfAbsent(characterId, v -> new LinkedList<>()).addLast(new ItemTimeStampHolder(itemId, itemCount, enchantLevel, UniqueGachaRank.getRankByClientId(itemRank), receiveTime, true));
+			}
+		}
+		catch (Exception e)
+		{
+			e.printStackTrace();
+		}
+	}
+	
+	private static void storeGachaHistory(Map<Integer, LinkedList<ItemTimeStampHolder>> history)
+	{
+		final Map<Integer, LinkedList<ItemTimeStampHolder>> map = new HashMap<>(history);
+		try (Connection con = DatabaseFactory.getConnection();
+			PreparedStatement statement = con.prepareStatement(""INSERT INTO `character_gacha_history`(`char_id`, `item_id`, `item_count`, `item_enchant`, `item_rank`, `receive_time`) VALUES(?, ?, ?, ?, ?, ?)""))
+		{
+			boolean containsUpdate = false;
+			for (Map.Entry<Integer, LinkedList<ItemTimeStampHolder>> entry : map.entrySet())
+			{
+				final int charId = entry.getKey();
+				final LinkedList<ItemTimeStampHolder> list = new LinkedList<>(entry.getValue());
+				for (ItemTimeStampHolder item : list)
+				{
+					if (item.getStoredStatus())
+					{
+						continue;
+					}
+					statement.setInt(1, charId);
+					statement.setInt(2, item.getId());
+					statement.setLong(3, item.getCount());
+					statement.setInt(4, item.getEnchantLevel());
+					statement.setInt(5, item.getRank().getClientId());
+					statement.setLong(6, item.getTimeStamp());
+					statement.addBatch();
+					containsUpdate = true;
+				}
+			}
+			if (containsUpdate)
+			{
+				statement.executeBatch();
+			}
+			else
+			{
+				statement.close();
+			}
+		}
+		catch (SQLException e)
+		{
+			e.printStackTrace();
+		}
+	}
+	
+	private static Pair<List<UniqueGachaItemHolder>, Boolean> returnEmptyList()
+	{
+		return new Pair<>(Collections.emptyList(), false);
+	}
+	
+	public static UniqueGachaManager getInstance()
+	{
+		return UniqueGachaManager.SingletonHolder.INSTANCE;
+	}
+	
+	private static class SingletonHolder
+	{
+		protected static final UniqueGachaManager INSTANCE = new UniqueGachaManager();
+	}
+}
Index: org/l2jmobius/gameserver/model/holders/uniquegacha/ItemTimeStampHolder.java
===================================================================
--- org/l2jmobius/gameserver/model/holders/uniquegacha/ItemTimeStampHolder.java	(nonexistent)
+++ org/l2jmobius/gameserver/model/holders/uniquegacha/ItemTimeStampHolder.java	(working copy)
@@ -0,0 +1,53 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.model.holders.uniquegacha;
+
+import org.l2jmobius.gameserver.enums.UniqueGachaRank;
+
+/**
+ * @author Index
+ */
+public class ItemTimeStampHolder extends UniqueGachaItemHolder
+{
+	private final long _timeStamp;
+	private boolean _storedInDatabase;
+	
+	public ItemTimeStampHolder(int itemId, long itemCount, int enchantLevel, UniqueGachaRank rank, long timeStamp, boolean stored)
+	{
+		super(itemId, itemCount, 0, enchantLevel, rank);
+		_timeStamp = timeStamp;
+		_storedInDatabase = stored;
+	}
+	
+	public long getTimeStamp()
+	{
+		return _timeStamp;
+	}
+	
+	public int getTimeStampFromNow()
+	{
+		final long timeOfReceive = _timeStamp / 1000L;
+		final long currentTime = System.currentTimeMillis() / 1000L;
+		return (int) (currentTime - timeOfReceive);
+	}
+	
+	public boolean getStoredStatus()
+	{
+		if (_storedInDatabase)
+		{
+			return true;
+		}
+		_storedInDatabase = true;
+		return false;
+	}
+}
Index: org/l2jmobius/gameserver/model/holders/uniquegacha/UniqueGachaItemHolder.java
===================================================================
--- org/l2jmobius/gameserver/model/holders/uniquegacha/UniqueGachaItemHolder.java	(nonexistent)
+++ org/l2jmobius/gameserver/model/holders/uniquegacha/UniqueGachaItemHolder.java	(working copy)
@@ -0,0 +1,49 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.model.holders.uniquegacha;
+
+import org.l2jmobius.gameserver.enums.UniqueGachaRank;
+import org.l2jmobius.gameserver.model.holders.ItemHolder;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaItemHolder extends ItemHolder
+{
+	private final int _itemChance;
+	private final int _enchantLevel;
+	private final UniqueGachaRank _rank;
+	
+	public UniqueGachaItemHolder(int itemId, long itemCount, int itemChance, int enchantLevel, UniqueGachaRank rank)
+	{
+		super(itemId, itemCount);
+		_itemChance = itemChance;
+		_enchantLevel = enchantLevel;
+		_rank = rank;
+	}
+	
+	public int getItemChance()
+	{
+		return _itemChance;
+	}
+	
+	public int getEnchantLevel()
+	{
+		return _enchantLevel;
+	}
+	
+	public UniqueGachaRank getRank()
+	{
+		return _rank;
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/model/itemcontainer/PlayerGachaWarehouse.java
===================================================================
--- org/l2jmobius/gameserver/model/itemcontainer/PlayerGachaWarehouse.java	(nonexistent)
+++ org/l2jmobius/gameserver/model/itemcontainer/PlayerGachaWarehouse.java	(working copy)
@@ -0,0 +1,44 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.model.itemcontainer;
+
+import org.l2jmobius.gameserver.enums.ItemLocation;
+import org.l2jmobius.gameserver.model.actor.Creature;
+import org.l2jmobius.gameserver.model.actor.Player;
+
+/**
+ * @author Index
+ */
+public class PlayerGachaWarehouse extends Warehouse
+{
+	public final static int MAXIMUM_TEMPORARY_WAREHOUSE_COUNT = 1_100;
+	
+	private final Creature _owner;
+	
+	public PlayerGachaWarehouse(Player player)
+	{
+		_owner = player;
+	}
+	
+	@Override
+	protected Creature getOwner()
+	{
+		return _owner;
+	}
+	
+	@Override
+	protected ItemLocation getBaseLocation()
+	{
+		return ItemLocation.GACHA;
+	}
+}
Index: org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaGame.java
===================================================================
--- org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaGame.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaGame.java	(working copy)
@@ -0,0 +1,53 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.clientpackets.gacha;
+
+import java.util.List;
+
+import org.l2jmobius.gameserver.instancemanager.events.UniqueGachaManager;
+import org.l2jmobius.gameserver.model.actor.Player;
+import org.l2jmobius.gameserver.model.holders.uniquegacha.UniqueGachaItemHolder;
+import org.l2jmobius.gameserver.network.clientpackets.ClientPacket;
+import org.l2jmobius.gameserver.network.serverpackets.gacha.UniqueGachaGame;
+import org.l2jmobius.gameserver.network.serverpackets.gacha.UniqueGachaInvenAddItem;
+
+import javafx.util.Pair;
+
+/**
+ * @author Index
+ */
+public class ExUniqueGachaGame extends ClientPacket
+{
+	private int _gameCount;
+	
+	@Override
+	protected void readImpl()
+	{
+		_gameCount = readInt();
+	}
+	
+	@Override
+	protected void runImpl()
+	{
+		final Player player = getPlayer();
+		if (player == null)
+		{
+			return;
+		}
+		final Pair<List<UniqueGachaItemHolder>, Boolean> pair = UniqueGachaManager.getInstance().tryToRoll(player, _gameCount);
+		final List<UniqueGachaItemHolder> rewards = pair.getKey();
+		final boolean rare = pair.getValue().booleanValue();
+		player.sendPacket(new UniqueGachaGame(rewards.isEmpty() ? UniqueGachaGame.FAILURE : UniqueGachaGame.SUCCESS, player, rewards, rare));
+		player.sendPacket(new UniqueGachaInvenAddItem(rewards));
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaHistory.java
===================================================================
--- org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaHistory.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaHistory.java	(working copy)
@@ -0,0 +1,48 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.clientpackets.gacha;
+
+import java.util.List;
+
+import org.l2jmobius.gameserver.instancemanager.events.UniqueGachaManager;
+import org.l2jmobius.gameserver.model.actor.Player;
+import org.l2jmobius.gameserver.model.holders.uniquegacha.ItemTimeStampHolder;
+import org.l2jmobius.gameserver.network.clientpackets.ClientPacket;
+import org.l2jmobius.gameserver.network.serverpackets.gacha.UniqueGachaHistory;
+
+/**
+ * @author Index
+ */
+public class ExUniqueGachaHistory extends ClientPacket
+{
+	@SuppressWarnings(""unused"")
+	private int _inventoryType;
+	
+	@Override
+	protected void readImpl()
+	{
+		_inventoryType = readByte();
+	}
+	
+	@Override
+	protected void runImpl()
+	{
+		final Player player = getPlayer();
+		if (player == null)
+		{
+			return;
+		}
+		final List<ItemTimeStampHolder> itemHistory = UniqueGachaManager.getInstance().getGachaCharacterHistory(player);
+		player.sendPacket(new UniqueGachaHistory(itemHistory));
+	}
+}
Index: org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaInvenGetItem.java
===================================================================
--- org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaInvenGetItem.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaInvenGetItem.java	(working copy)
@@ -0,0 +1,53 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.clientpackets.gacha;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.l2jmobius.gameserver.instancemanager.events.UniqueGachaManager;
+import org.l2jmobius.gameserver.model.actor.Player;
+import org.l2jmobius.gameserver.model.holders.ItemHolder;
+import org.l2jmobius.gameserver.network.clientpackets.ClientPacket;
+import org.l2jmobius.gameserver.network.serverpackets.gacha.UniqueGachaInvenGetItem;
+
+/**
+ * @author Index
+ */
+public class ExUniqueGachaInvenGetItem extends ClientPacket
+{
+	private List<ItemHolder> _requestedItems;
+	
+	@Override
+	protected void readImpl()
+	{
+		final int size = readInt();
+		_requestedItems = new ArrayList<>(size);
+		for (int index = 0; index < size; index++)
+		{
+			_requestedItems.add(new ItemHolder(readInt(), readLong()));
+		}
+	}
+	
+	@Override
+	protected void runImpl()
+	{
+		final Player player = getPlayer();
+		if (player == null)
+		{
+			return;
+		}
+		final boolean isSuccess = UniqueGachaManager.getInstance().receiveItemsFromTemporaryWarehouse(player, _requestedItems);
+		player.sendPacket(new UniqueGachaInvenGetItem(isSuccess));
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaInvenItemList.java
===================================================================
--- org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaInvenItemList.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaInvenItemList.java	(working copy)
@@ -0,0 +1,58 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.clientpackets.gacha;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.l2jmobius.gameserver.instancemanager.events.UniqueGachaManager;
+import org.l2jmobius.gameserver.model.actor.Player;
+import org.l2jmobius.gameserver.model.item.instance.Item;
+import org.l2jmobius.gameserver.network.clientpackets.ClientPacket;
+import org.l2jmobius.gameserver.network.serverpackets.gacha.UniqueGachaInvenItemList;
+
+/**
+ * @author Index
+ */
+public class ExUniqueGachaInvenItemList extends ClientPacket
+{
+	@SuppressWarnings(""unused"")
+	private int _inventoryType;
+	
+	@Override
+	protected void readImpl()
+	{
+		_inventoryType = readByte();
+	}
+	
+	@Override
+	protected void runImpl()
+	{
+		final Player player = getPlayer();
+		if (player == null)
+		{
+			return;
+		}
+		final List<Item> items = new ArrayList<>(UniqueGachaManager.getInstance().getTemporaryWarehouse(player));
+		final int totalSize = items.size();
+		final int perPage = 150;
+		final int totalPages = totalSize / perPage;
+		
+		for (int i = 0; i <= totalPages; i++)
+		{
+			// page on client should start from 1, not 0.
+			// if page is set to 0 - nothing shows up at all.
+			player.sendPacket(new UniqueGachaInvenItemList((i + 1), (totalPages + 1), items.subList(i * perPage, Math.min((i + 1) * perPage, totalSize))));
+		}
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaOpen.java
===================================================================
--- org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaOpen.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/clientpackets/gacha/ExUniqueGachaOpen.java	(working copy)
@@ -0,0 +1,44 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.clientpackets.gacha;
+
+import org.l2jmobius.gameserver.model.actor.Player;
+import org.l2jmobius.gameserver.network.clientpackets.ClientPacket;
+import org.l2jmobius.gameserver.network.serverpackets.gacha.UniqueGachaOpen;
+
+/**
+ * @author Index
+ */
+public class ExUniqueGachaOpen extends ClientPacket
+{
+	private int _fullInfo;
+	private int _openMode;
+	
+	@Override
+	protected void readImpl()
+	{
+		_fullInfo = readByte();
+		_openMode = readByte();
+	}
+	
+	@Override
+	protected void runImpl()
+	{
+		final Player player = getPlayer();
+		if (player == null)
+		{
+			return;
+		}
+		player.sendPacket(new UniqueGachaOpen(player, _fullInfo, _openMode));
+	}
+}
Index: org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaGame.java
===================================================================
--- org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaGame.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaGame.java	(working copy)
@@ -0,0 +1,65 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.serverpackets.gacha;
+
+import java.util.List;
+
+import org.l2jmobius.commons.network.WritableBuffer;
+import org.l2jmobius.gameserver.instancemanager.events.UniqueGachaManager;
+import org.l2jmobius.gameserver.model.actor.Player;
+import org.l2jmobius.gameserver.model.holders.uniquegacha.UniqueGachaItemHolder;
+import org.l2jmobius.gameserver.network.GameClient;
+import org.l2jmobius.gameserver.network.ServerPackets;
+import org.l2jmobius.gameserver.network.serverpackets.ServerPacket;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaGame extends ServerPacket
+{
+	public final static int FAILURE = 0;
+	public final static int SUCCESS = 1;
+	
+	private final int _success;
+	private final Player _player;
+	private final List<UniqueGachaItemHolder> _rewards;
+	private final boolean _rare;
+	
+	public UniqueGachaGame(int success, Player player, List<UniqueGachaItemHolder> rewards, boolean rare)
+	{
+		_success = success;
+		_player = player;
+		_rewards = rewards;
+		_rare = rare;
+	}
+	
+	@Override
+	public void writeImpl(GameClient client, WritableBuffer buffer)
+	{
+		final UniqueGachaManager manager = UniqueGachaManager.getInstance();
+		ServerPackets.EX_UNIQUE_GACHA_GAME.writeId(this, buffer);
+		buffer.writeByte(_success); // result // char
+		buffer.writeLong(manager.getCurrencyCount(_player)); // amount // int
+		buffer.writeInt(manager.getStepsToGuaranteedReward(_player)); // guaruant // int
+		// 0 - yellow
+		// 1 - purple
+		buffer.writeByte(_rare ? 1 : 0); // rank // char
+		buffer.writeInt(_rewards.size()); // size // int
+		for (UniqueGachaItemHolder item : _rewards)
+		{
+			buffer.writeByte(item.getRank().getClientId()); // rank // char
+			buffer.writeInt(item.getId()); // itemId // int
+			buffer.writeLong(item.getCount()); // count // long
+		}
+	}
+}
Index: org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaHistory.java
===================================================================
--- org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaHistory.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaHistory.java	(working copy)
@@ -0,0 +1,51 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.serverpackets.gacha;
+
+import java.util.List;
+
+import org.l2jmobius.commons.network.WritableBuffer;
+import org.l2jmobius.gameserver.model.holders.uniquegacha.ItemTimeStampHolder;
+import org.l2jmobius.gameserver.network.GameClient;
+import org.l2jmobius.gameserver.network.ServerPackets;
+import org.l2jmobius.gameserver.network.serverpackets.ServerPacket;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaHistory extends ServerPacket
+{
+	private final static int SHORT_PACKET_SIZE = 2 + 1 + 4 + 8;
+	
+	private final List<ItemTimeStampHolder> _items;
+	
+	public UniqueGachaHistory(List<ItemTimeStampHolder> items)
+	{
+		_items = items;
+	}
+	
+	@Override
+	public void writeImpl(GameClient client, WritableBuffer buffer)
+	{
+		ServerPackets.EX_UNIQUE_GACHA_HISTORY.writeId(this, buffer);
+		buffer.writeInt(_items.size());
+		for (ItemTimeStampHolder item : _items)
+		{
+			buffer.writeShort(SHORT_PACKET_SIZE);
+			buffer.writeByte(item.getRank().getClientId());
+			buffer.writeInt(item.getId());
+			buffer.writeLong(item.getCount());
+			buffer.writeLong(item.getTimeStampFromNow());
+		}
+	}
+}
Index: org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenAddItem.java
===================================================================
--- org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenAddItem.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenAddItem.java	(working copy)
@@ -0,0 +1,47 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.serverpackets.gacha;
+
+import java.util.List;
+
+import org.l2jmobius.commons.network.WritableBuffer;
+import org.l2jmobius.gameserver.model.holders.ItemHolder;
+import org.l2jmobius.gameserver.model.holders.uniquegacha.UniqueGachaItemHolder;
+import org.l2jmobius.gameserver.network.GameClient;
+import org.l2jmobius.gameserver.network.ServerPackets;
+import org.l2jmobius.gameserver.network.serverpackets.ServerPacket;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaInvenAddItem extends ServerPacket
+{
+	private final List<UniqueGachaItemHolder> _rewards;
+	
+	public UniqueGachaInvenAddItem(List<UniqueGachaItemHolder> rewards)
+	{
+		_rewards = rewards;
+	}
+	
+	@Override
+	public void writeImpl(GameClient client, WritableBuffer buffer)
+	{
+		ServerPackets.EX_UNIQUE_GACHA_INVEN_ADD_ITEM.writeId(this, buffer);
+		buffer.writeInt(_rewards.size());
+		for (ItemHolder item : _rewards)
+		{
+			buffer.writeInt(item.getId());
+			buffer.writeLong(item.getCount());
+		}
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenGetItem.java
===================================================================
--- org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenGetItem.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenGetItem.java	(working copy)
@@ -0,0 +1,38 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.serverpackets.gacha;
+
+import org.l2jmobius.commons.network.WritableBuffer;
+import org.l2jmobius.gameserver.network.GameClient;
+import org.l2jmobius.gameserver.network.ServerPackets;
+import org.l2jmobius.gameserver.network.serverpackets.ServerPacket;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaInvenGetItem extends ServerPacket
+{
+	private final int _result;
+	
+	public UniqueGachaInvenGetItem(boolean result)
+	{
+		_result = result ? 1 : 0;
+	}
+	
+	@Override
+	public void writeImpl(GameClient client, WritableBuffer buffer)
+	{
+		ServerPackets.EX_UNIQUE_GACHA_INVEN_GET_ITEM.writeId(this, buffer);
+		buffer.writeByte(_result);
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenItemList.java
===================================================================
--- org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenItemList.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaInvenItemList.java	(working copy)
@@ -0,0 +1,52 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.serverpackets.gacha;
+
+import java.util.List;
+
+import org.l2jmobius.commons.network.WritableBuffer;
+import org.l2jmobius.gameserver.model.item.instance.Item;
+import org.l2jmobius.gameserver.network.GameClient;
+import org.l2jmobius.gameserver.network.ServerPackets;
+import org.l2jmobius.gameserver.network.serverpackets.ServerPacket;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaInvenItemList extends ServerPacket
+{
+	private final int _currPage;
+	private final int _maxPages;
+	private final List<Item> _items;
+	
+	public UniqueGachaInvenItemList(int currPage, int maxPages, List<Item> items)
+	{
+		_currPage = currPage;
+		_maxPages = maxPages;
+		_items = items;
+	}
+	
+	@Override
+	public void writeImpl(GameClient client, WritableBuffer buffer)
+	{
+		ServerPackets.EX_UNIQUE_GACHA_INVEN_ITEM_LIST.writeId(this, buffer);
+		buffer.writeByte(_currPage);
+		buffer.writeByte(_maxPages);
+		buffer.writeLong(_items.size());
+		for (Item item : _items)
+		{
+			buffer.writeInt(item.getDisplayId());
+			buffer.writeLong(item.getCount());
+		}
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaOpen.java
===================================================================
--- org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaOpen.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaOpen.java	(working copy)
@@ -0,0 +1,115 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.serverpackets.gacha;
+
+import java.util.Map;
+import java.util.Set;
+
+import org.l2jmobius.commons.network.WritableBuffer;
+import org.l2jmobius.gameserver.instancemanager.events.UniqueGachaManager;
+import org.l2jmobius.gameserver.model.actor.Player;
+import org.l2jmobius.gameserver.model.holders.uniquegacha.UniqueGachaItemHolder;
+import org.l2jmobius.gameserver.network.GameClient;
+import org.l2jmobius.gameserver.network.ServerPackets;
+import org.l2jmobius.gameserver.network.serverpackets.ServerPacket;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaOpen extends ServerPacket
+{
+	private final static int SHORT_PACKET_INFO = 2 + 1 + 4 + 8;
+	
+	private final Player _player;
+	private final int _fullInfo;
+	private final int _openMode;
+	
+	public UniqueGachaOpen(Player player, int fullInfo, int openMode)
+	{
+		_player = player;
+		_fullInfo = fullInfo;
+		_openMode = openMode;
+	}
+	
+	@Override
+	public void writeImpl(GameClient client, WritableBuffer buffer)
+	{
+		final UniqueGachaManager manager = UniqueGachaManager.getInstance();
+		ServerPackets.EX_UNIQUE_GACHA_OPEN.writeId(this, buffer);
+		/**
+		 * open mode 1 = const GACHA_TITLE_FORM = 1; = will open main window?
+		 */
+		buffer.writeByte(_openMode); // open mode // char // 1 = main menu
+		buffer.writeByte(0); // result // char // not used?
+		buffer.writeInt(manager.getCurrencyCount(_player)); // my cost item amount // int // current item count for roll?
+		buffer.writeInt(manager.getStepsToGuaranteedReward(_player)); // my confirm count // int // left to guarant
+		buffer.writeInt((int) ((manager.getActiveUntilPeriod() - System.currentTimeMillis()) / 1000L)); // remain time in seconds // int
+		buffer.writeByte(_fullInfo); // full info // char
+		buffer.writeByte(manager.isShowProbability() ? 1 : 0); // show probability // char
+		if (_fullInfo == 1)
+		{
+			writeFullInfo(buffer, manager);
+		}
+		else
+		{
+			writeDummyInfo(buffer);
+		}
+	}
+	
+	private void writeFullInfo(WritableBuffer buffer, UniqueGachaManager manager)
+	{
+		buffer.writeInt(manager.getVisibleItems().size()); // show items size // int
+		for (UniqueGachaItemHolder item : manager.getVisibleItems())
+		{
+			buffer.writeShort(SHORT_PACKET_INFO); // current size // short
+			buffer.writeByte(item.getRank().getClientId()); // rank type // char
+			buffer.writeInt(item.getId()); // item type // int
+			buffer.writeLong(item.getCount()); // amount // long
+			buffer.writeDouble(getChance(manager.isShowProbability(), item.getItemChance())); // probability // double
+		}
+		buffer.writeInt(manager.getTotalRewardCount()); // reward item size // int
+		for (Set<UniqueGachaItemHolder> items : manager.getRewardItems().values())
+		{
+			for (UniqueGachaItemHolder item : items)
+			{
+				buffer.writeShort(SHORT_PACKET_INFO); // current size // short
+				buffer.writeByte(item.getRank().getClientId()); // rank type // char
+				buffer.writeInt(item.getId()); // item type // int
+				buffer.writeLong(item.getCount()); // amount // long
+				buffer.writeDouble(getChance(manager.isShowProbability(), item.getItemChance())); // probability // double
+			}
+		}
+		buffer.writeByte(1); // cost type // char // bool?
+		buffer.writeInt(manager.getCurrencyItemId()); // cost item type // int // item id
+		buffer.writeInt(manager.getGameCosts().size()); // cost amount item info // int
+		for (Map.Entry<Integer, Long> entry : manager.getGameCosts().entrySet())
+		{
+			buffer.writeInt(entry.getKey()); // game count // int
+			buffer.writeLong(entry.getValue()); // amount // long
+		}
+	}
+	
+	private void writeDummyInfo(WritableBuffer buffer)
+	{
+		buffer.writeInt(0); // show items size // int
+		buffer.writeInt(0); // reward item size // int
+		buffer.writeByte(0); // cost type // char // bool?
+		buffer.writeInt(0); // cost item type // int // item id
+		buffer.writeInt(0); // cost amount item info // int
+	}
+	
+	private double getChance(boolean showChance, int itemChance)
+	{
+		return showChance ? (double) ((double) itemChance / (double) UniqueGachaManager.MINIMUM_CHANCE) : 0;
+	}
+}
\ No newline at end of file
Index: org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaSidebarInfo.java
===================================================================
--- org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaSidebarInfo.java	(nonexistent)
+++ org/l2jmobius/gameserver/network/serverpackets/gacha/UniqueGachaSidebarInfo.java	(working copy)
@@ -0,0 +1,41 @@
+/*
+ * ეს ფაილი არის ნაწილი Hi5.ge პროექტის.
+ * This file is part of the Hi5.ge project.
+ * 
+ * პროგრამა წარმოადგენს Hi5.ge პროექტის ავტორების ინტელექტუალურ საკუთრაებას და არ
+ * შეიძლება გამოყენებული იქნას კომერციული ან სხვა რაიმე მიზნობრივი საქმიანობისთვის,
+ * ამის შესახებ ავტორების წინასწარ გაფრთხილების და თანხმობის გარეშე. 
+ * 
+ * This program is intellectual property of hi5.ge and can't, be
+ * used for any commercial or financial use without the permission
+ * of the rightful owners
+ */
+package org.l2jmobius.gameserver.network.serverpackets.gacha;
+
+import org.l2jmobius.commons.network.WritableBuffer;
+import org.l2jmobius.gameserver.network.GameClient;
+import org.l2jmobius.gameserver.network.ServerPackets;
+import org.l2jmobius.gameserver.network.serverpackets.ServerPacket;
+
+/**
+ * @author Index
+ */
+public class UniqueGachaSidebarInfo extends ServerPacket
+{
+	public final static UniqueGachaSidebarInfo GACHA_ON = new UniqueGachaSidebarInfo(true);
+	public final static UniqueGachaSidebarInfo GACHA_OFF = new UniqueGachaSidebarInfo(false);
+	
+	private final boolean _turnedOn;
+	
+	private UniqueGachaSidebarInfo(boolean turnedOn)
+	{
+		_turnedOn = turnedOn;
+	}
+	
+	@Override
+	public void writeImpl(GameClient client, WritableBuffer buffer)
+	{
+		ServerPackets.EX_UNIQUE_GACHA_SIDEBAR_INFO.writeId(this, buffer);
+		buffer.writeByte(_turnedOn ? 1 : 0);
+	}
+}
"
SvbgRtTh,insertSQLQuery.ps1,Combreal,PowerShell,Sunday 24th of March 2024 12:55:58 PM CDT,"#Requieres MySQL Connector NET 8.3.0
[void][system.reflection.Assembly]::LoadFrom(""C:\Program Files (x86)\MySQL\MySQL Connector NET 8.3.0\MySql.Data.dll"")

Function New-insertSQLQuery ($connectionProperties, $CustomerName, $ContactName, $Address, $City, $PostalCode, $Country) {
    $Connection = New-Object  MySql.Data.MySqlClient.MySqlConnection 
    $Connection.ConnectionString=""server=$($connectionProperties.mysqlHost);uid=$($connectionProperties.mysqlUser);pwd=$($connectionProperties.mysqlPass);database=$($connectionProperties.mysqlDatabase)""
    $Connection.Open()
    
    $command = New-Object MySql.Data.MySqlClient.MySqlCommand
    $command.Connection = $Connection
    $command.CommandText = ""INSERT INTO customers (CustomerName,ContactName,Address,City,PostalCode,Country) VALUES (@CustomerName,@ContactName,@Address,@City,@PostalCode,@Country)""
    $command.Parameters.AddWithValue(""@CustomerName"", $CustomerName) | Out-Null
    $command.Parameters.AddWithValue(""@ContactName"", $ContactName) | Out-Null
    $command.Parameters.AddWithValue(""@Address"", $Address) | Out-Null
    $command.Parameters.AddWithValue(""@City"", $City) | Out-Null
    $command.Parameters.AddWithValue(""@PostalCode"", $PostalCode) | Out-Null
    $command.Parameters.AddWithValue(""@Country"", $Country) | Out-Null
    $command.ExecuteNonQuery() | Out-Null
     
    $Connection.Close()
}

$connectionProperties = New-Object PSObject
$connectionProperties | Add-Member Noteproperty ""mysqlHost"" ""localhost""
$connectionProperties | Add-Member Noteproperty ""mysqlUser"" ""myuser""
$connectionProperties | Add-Member Noteproperty ""mysqlPass"" ""mypswd""
$connectionProperties | Add-Member Noteproperty ""mysqlDatabase"" ""mydp""

$CustomerName = ""Combreal""
$ContactName = ""Tony Montana""
$Address = ""5, rue des champs Élysées""
$City = ""Paris""
$PostalCode = ""75008""
$Country = ""France""

New-insertSQLQuery $connectionProperties $CustomerName $ContactName $Address $City $PostalCode $Country"
vNbLvBHS,Untitled,yasi04,Python,Sunday 24th of March 2024 12:50:12 PM CDT,"import os
from dotenv import load_dotenv
import disnake
import asyncio
import sqlite3
from disnake.ext import commands

load_dotenv()

bot = commands.Bot(command_prefix=""!"", help_command=None, intents=disnake.Intents.all())

conn = sqlite3.connect('filters.db')
c = conn.cursor()

c.execute('''CREATE TABLE IF NOT EXISTS text_filters 
             (channel_id INTEGER PRIMARY KEY, filters TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS link_filters 
             (channel_id INTEGER PRIMARY KEY, filters TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS roles 
             (role TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS guest_filters 
             (server INTEGER PRIMARY KEY, filters TEXT)''')

conn.commit()


def link_checker(message):
    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (message.channel.id,))
    row = c.fetchone()
    if row:
        filters = row[0].split(';')
        if message.content.startswith(""http://"") or message.content.startswith(""https://""):
            flag = True
            for word in filters:
                if word == message.content.split('/')[2]:
                    flag = False
            return flag


def text_checker(message):
    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (message.channel.id,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        flag = True
        if message.content.split(' ')[0] in text_filters:
            flag = False
        return flag


def guest_checker(message):
    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        guest_filters = row[0].split(';')
        flag = False
        if (message.content.split(' ')[0] in guest_filters) or ('/' in message.content):
            flag = True
        return flag


@bot.event
async def on_ready():
    print(f""Bot {bot.user} is ready to work!"")


@bot.event
async def on_message(message):
    result = False
    for role in message.author.roles:
        c.execute(""SELECT * FROM roles WHERE role=?"", (role.id,))
        result = c.fetchone()
        if result:
            break
    if result:
        if guest_checker(message):
            await message.delete()
            await message.channel.send(f'*Эта команда доступна только для авторизованных участников сервера, пожалуйста авторизуйтесь и получите роль ""Участник""')
        return
    elif message.author == message.guild.owner:
        return
    elif message.author == bot.user:
        await asyncio.sleep(120)
        await message.delete()
        return
    elif message.author.bot:
        return
    else:
        if message.content.startswith(""http://"") or message.content.startswith(""https://""):
            c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (message.channel.id,))
            row = c.fetchone()
            if row:
                filters = row[0].split(';')
                if link_checker(message):
                    await message.delete()
                    await message.channel.send(f""*В этом канале доступны только* `{filters}`, *Другое не разрешено XD*"")
                    return
        else:
            c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (message.channel.id,))
            row = c.fetchone()
            if row:
                text_filters = row[0].split(';')
                if text_checker(message):
                    await message.delete()
                    await message.channel.send(f""*В этом канале доступны только* `{text_filters}`, *Другое не разрешено XD*"")
                    return

    await bot.process_commands(message)


@bot.slash_command(description=""добавить текстовый фильтр"")
async def add_text_filter(ctx, channel_id: str, filter_text: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_text
        c.execute(""UPDATE text_filters SET filters = ? WHERE channel_id = ?"", (new_filters, channel_id))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO text_filters (channel_id, filters) VALUES (?, ?)"", (channel_id, filter_text))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""добавить гостевой фильтр"")
async def add_guest_filter(ctx, filter_text: str):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_text
        c.execute(""UPDATE guest_filters SET filters = ? WHERE server = ?"", (new_filters, 1))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO guest_filters (server, filters) VALUES (?, ?)"", (1, filter_text))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""добавить гостевые роли"")
async def add_guest_roles(ctx, role: disnake.Role):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""INSERT INTO roles (role) VALUES (?)"", (role.id,))
    conn.commit()
    await ctx.send('Готово')


@bot.slash_command(description=""удалить гостевые роли"")
async def delete_guest_roles(ctx, role: disnake.Role):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT * FROM roles WHERE role=?"", (role.id,))
    result = c.fetchone()

    if result:
        c.execute(""DELETE FROM roles WHERE role=?"", (role.id,))
        conn.commit()
        await ctx.send('Роль удалена из базы данных')
    else:
        await ctx.send('Роль не найдена в базе данных')


@bot.slash_command(description=""добавить ссылку в фильтр"")
async def add_link_filter(ctx, channel_id: str, filter_link: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_link
        c.execute(""UPDATE link_filters SET filters = ? WHERE channel_id = ?"", (new_filters, channel_id))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO link_filters (channel_id, filters) VALUES (?, ?)"", (channel_id, filter_link))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""удалить текстовый фильтр (выбор)"")
async def delete_filter(ctx, channel_id: str, filters: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        new_text_filters = [filter_word for filter_word in text_filters if filter_word not in filters.split(';')]
        new_text_filters_str = ';'.join(new_text_filters)
        c.execute(""UPDATE text_filters SET filters = ? WHERE channel_id = ?"", (new_text_filters_str, channel_id))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров для этого канала и не было')


@bot.slash_command(description=""удалить гостевой фильтр (выбор)"")
async def delete_guest_filter(ctx, filters: str):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        new_text_filters = [filter_word for filter_word in text_filters if filter_word not in filters.split(';')]
        new_text_filters_str = ';'.join(new_text_filters)
        c.execute(""UPDATE guest_filters SET filters = ? WHERE server = ?"", (new_text_filters_str, 1))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров и не было')


@bot.slash_command(description=""удалить фильтр ссылок (выбор)"")
async def delete_link_filter(ctx, channel_id: str, filters: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        link_filters = row[0].split(';')
        new_link_filters = [filter_link for filter_link in link_filters if filter_link not in filters.split(';')]
        new_link_filters_str = ';'.join(new_link_filters)
        c.execute(""UPDATE link_filters SET filters = ? WHERE channel_id = ?"", (new_link_filters_str, channel_id))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров для этого канала и не было')


@bot.slash_command(description=""удалить все фильтры для канала"")
async def delete_all_filters(ctx, channel_id: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""DELETE FROM text_filters WHERE channel_id = ?"", (channel_id,))
    c.execute(""DELETE FROM link_filters WHERE channel_id = ?"", (channel_id,))
    conn.commit()

    await ctx.send('Готово')


@bot.slash_command(description=""удалить все фильтры гостей"")
async def delete_all_guest_filters(ctx):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""DELETE FROM guest_filters WHERE server= ?"", (1,))
    conn.commit()

    await ctx.send('Готово')


bot.run(os.getenv('TOKEN'))
"
hivsR9Q2,6.0.3 Article Sidebar/Navbar,TheiPhoneFan,HTML,Sunday 24th of March 2024 12:46:24 PM CDT,"    <!-- Top Bar -->
    <div class=""navbar"">
        <!-- Site Title -->
        <a href=""../index.html"" style=""background-color:transparent;cursor:pointer;color:black;""><b>TheiPhoneFan.com</b></a>

        <!-- Home -->
        <a href=""../index.html"">Home <img src=""../theme/glyphs/home.png"" height=""15"" alt=""home""></a>

        <!-- Channel Related Dropdown -->
        <div class=""dropdown"">
            <button class=""dropbtn"" title=""dropdown"">Channel Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../channel-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Channel Related</b> <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""channel related""></a>
                <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""../theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
                <a href=""../music-i-use.html"">Music I Use <img src=""../theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
                <a href=""../my-playlists.html"">My Playlists <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
                <a href=""../my-top-5-vids.html"">My Top 5 Vids <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
                <a href=""../my-videos.html"">My Videos <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
                <a href=""../thumbnail-design.html"" style=""border-radius: 0px 0px 16px 16px;"">Thumbnail Design <img src=""../theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            </div>
        </div>

        <!-- Content Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Content <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../content.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Content</b></a>
                <a href=""../apple-archive.html"">Apple Archive <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
                <a href=""../apple-concepts.html"">Apple Concepts <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
                <a href=""../articles.html"">Articles <img src=""../theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
                <a href=""../blog.html"">Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
                <a href=""../clipart.html"">Clipart <img src=""../theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
                <a href=""../my-photography.html"">My Photography <img src=""../theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
                <a href=""../wallpapers.html"" style=""border-radius: 0px 0px 16px 16px;"">Wallpapers <img src=""../theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            </div>
        </div>

        <!-- Scam Avoidance Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Scam Avoidance <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../scam-avoidance.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Scam Avoidance</b></a>
                <a href=""../report-a-scam.html"">Report a Scam <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
                <a href=""../scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
                <a href=""../scam-info-updates.html"" style=""border-radius: 0px 0px 16px 16px;"">Scam Info Updates <img src=""../theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            </div>
        </div>

        <!-- Site Related Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Site Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../site-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Site Related</b></a>
                <a href=""../all-pages.html"">All Pages <img src=""../theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
                <a href=""../changelog.html"">Changelog</a>
                <a href=""../downloads.html"">Downloads <img src=""../theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
                <a href=""../get-help.html"">Get Help <img src=""../theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
                <a href=""../previews.html"">Previews</a>
                <a href=""../report-an-issue.html"">Report an Issue <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
      			<a href=""../saved-site-revisions.html"" style=""border-radius: 0px 0px 16px 16px;"">Saved Site Revisions <img src=""../theme/glyphs/floppy.png"" height=""15""></a>
            </div>
        </div>

        <!-- Help & Contact Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Help & Contact <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../help-contact.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Help & Contact</b></a>
                <a href=""../contact-me.html"">Contact Me <img src=""../theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
                <a href=""../website-survey.html"">Site Survey <img src=""../theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
                &nbsp;
                <a href=""https://m.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"">YouTube <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""youtube""></a>
                <a href=""https://twitter.com/theiphonefan""> 𝕏</a>
                <a href=""https://www.instagram.com/theiphonefan_/"">Instagram 📷</a>
                <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""border-radius: 0px 0px 16px 16px;"">Mail ✉️</a>
            </div>
        </div>
    </div>
    </div>

    <!-- Sidebar Button -->
    <button class=""openbtn"" onclick=""toggleSidebar()"" title=""sidebar button"">☰</button>

    <div class=""sidebar"" id=""mySidebar"">
        <h3 style=""color:black;margin-top:40px;"">TheiPhoneFan.com</h3>
        <a href=""../index.html"">Home <img src=""../theme/glyphs/home.png"" height=""15"" alt=""home""></a>
        <details>
            <summary>Channel Related</summary>
            <a href=""../channel-related.html""><b>Channel Related</b></a>
            <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""../theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
            <a href=""../music-i-use.html"">Music I Use <img src=""../theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
            <a href=""../my-playlists.html"">My Playlists <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
            <a href=""../my-top-5-vids.html"">My Top 5 Vids <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
            <a href=""../my-videos.html"">My Videos <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
            <a href=""../thumbnail-design.html"">Thumbnail Design <img src=""../theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            <hr>
        </details>
        <details>
            <summary>Content</summary>
            <a href=""../content.html""><b>Content</b></a>
            <a href=""../apple-archive.html"">Apple Archive <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
            <a href=""../apple-concepts.html"">Apple Concepts <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
            <a href=""../articles.html"">Articles <img src=""../theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
            <a href=""../blog.html"">Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
            <a href=""../clipart.html"">Clipart <img src=""../theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
            <a href=""../my-photography.html"">My Photography <img src=""../theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
            <a href=""../wallpapers.html"">Wallpapers <img src=""../theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            <hr>
        </details>
        <details>
            <summary>Scam Avoidance</summary>
            <a href=""../scam-avoidance.html""><b>Scam Avoidance</b></a>
            <a href=""../report-a-scam.html"">Report a Scam <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
            <a href=""../scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
            <a href=""../scam-info-updates.html"">Scam Info Updates <img src=""../theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            <hr>
        </details>
        <details>
            <summary>Site Related</summary>
            <a href=""../site-related.html""><b>Site Related</b></a>
            <a href=""../all-pages.html"">All Pages <img src=""../theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
            <a href=""../changelog.html"">Changelog</a>
            <a href=""../downloads.html"">Downloads <img src=""../theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
            <a href=""../get-help.html"">Get Help <img src=""../theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
            <a href=""../previews.html"">Previews</a>
            <a href=""../report-an-issue.html"">Report an Issue <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
            <a href=""../saved-site-revisions.html"">Saved Site Revisions <img src=""../theme/glyphs/floppy.png"" height=""15"" alt=""saved site revisions""></a>
            <hr>
        </details>
        <details>
            <summary>Help & Contact</summary>
            <a href=""../help-contact.html""><b>Help & Contact</b></a>
            <a href=""../contact-me.html"">Contact Me <img src=""../theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
            <a href=""../website-survey.html"">Site Survey <img src=""../theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            <hr>
        </details>

        <div style=""margin-bottom:20px;text-align:center;"">
            <a href=""https://www.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/youtube-social.png"" alt=""My YouTube Channel"" width=""40"">
            </a>
            <a href=""https://twitter.com/theiphonefan"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/x-social.png"" alt=""My X Account"" width=""40"">
            </a>
            <a href=""https://instagram.com/theiphonefan_/"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/instagram-social.png"" alt=""My Instagram Account"" width=""40"">
            </a>
            <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/mail-social.png"" alt=""Email Me"" width=""40"">
            </a>
        </div>
    </div>"
LyuZvs8s,6.0.3 Store Preview Sidebar/Navbar,TheiPhoneFan,HTML,Sunday 24th of March 2024 12:45:45 PM CDT,"    <!-- Top Bar -->
    <div class=""navbar"">
        <!-- Site Title -->
        <a href=""../index.html"" style=""background-color:transparent;cursor:pointer;color:black;""><b>TheiPhoneFan.com</b></a>

        <!-- Home -->
        <a href=""../index.html"">Home <img src=""../theme/glyphs/home.png"" height=""15"" alt=""home""></a>

        <!-- Channel Related Dropdown -->
        <div class=""dropdown"">
            <button class=""dropbtn"" title=""dropdown"">Channel Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../channel-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Channel Related</b> <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""channel related""></a>
                <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""../theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
                <a href=""../music-i-use.html"">Music I Use <img src=""../theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
                <a href=""../my-playlists.html"">My Playlists <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
                <a href=""../my-top-5-vids.html"">My Top 5 Vids <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
                <a href=""../my-videos.html"">My Videos <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
                <a href=""../thumbnail-design.html"" style=""border-radius: 0px 0px 16px 16px;"">Thumbnail Design <img src=""../theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            </div>
        </div>

        <!-- Content Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Content <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../content.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Content</b></a>
                <a href=""../apple-archive.html"">Apple Archive <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
                <a href=""../apple-concepts.html"">Apple Concepts <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
                <a href=""../articles.html"">Articles <img src=""../theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
                <a href=""../blog.html"">Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
                <a href=""../clipart.html"">Clipart <img src=""../theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
                <a href=""../my-photography.html"">My Photography <img src=""../theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
                <a href=""../wallpapers.html"" style=""border-radius: 0px 0px 16px 16px;"">Wallpapers <img src=""../theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            </div>
        </div>

        <!-- Scam Avoidance Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Scam Avoidance <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../scam-avoidance.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Scam Avoidance</b></a>
                <a href=""../report-a-scam.html"">Report a Scam <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
                <a href=""../scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
                <a href=""../scam-info-updates.html"" style=""border-radius: 0px 0px 16px 16px;"">Scam Info Updates <img src=""../theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            </div>
        </div>

        <!-- Site Related Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Site Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../site-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Site Related</b></a>
                <a href=""../all-pages.html"">All Pages <img src=""../theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
                <a href=""../changelog.html"">Changelog</a>
                <a href=""../downloads.html"">Downloads <img src=""../theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
                <a href=""../get-help.html"">Get Help <img src=""../theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
                <a href=""../previews.html"">Previews</a>
                <a href=""../report-an-issue.html"">Report an Issue <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
      			<a href=""../saved-site-revisions.html"" style=""border-radius: 0px 0px 16px 16px;"">Saved Site Revisions <img src=""../theme/glyphs/floppy.png"" height=""15""></a>
            </div>
        </div>

        <!-- Help & Contact Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Help & Contact <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../help-contact.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Help & Contact</b></a>
                <a href=""../contact-me.html"">Contact Me <img src=""../theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
                <a href=""../website-survey.html"">Site Survey <img src=""../theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
                &nbsp;
                <a href=""https://m.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"">YouTube <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""youtube""></a>
                <a href=""https://twitter.com/theiphonefan""> 𝕏</a>
                <a href=""https://www.instagram.com/theiphonefan_/"">Instagram 📷</a>
                <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""border-radius: 0px 0px 16px 16px;"">Mail ✉️</a>
            </div>
        </div>

        <!-- Store -->
        <a href=""../previews/store.html"">Store <img src=""../theme/glyphs/store.png"" height=""15"" alt=""store""></a>
    </div>
    </div>

    <!-- Sidebar Button -->
    <button class=""openbtn"" onclick=""toggleSidebar()"" title=""sidebar button"">☰</button>

    <div class=""sidebar"" id=""mySidebar"">
        <h3 style=""color:black;margin-top:40px;"">TheiPhoneFan.com</h3>
        <a href=""../index.html"">Home <img src=""../theme/glyphs/home.png"" height=""15"" alt=""apple archive""></a>
        <details>
            <summary>Channel Related</summary>
            <a href=""../channel-related.html""><b>Channel Related</b></a>
            <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""../theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
            <a href=""../music-i-use.html"">Music I Use <img src=""../theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
            <a href=""../my-playlists.html"">My Playlists <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
            <a href=""../my-top-5-vids.html"">My Top 5 Vids <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
            <a href=""../my-videos.html"">My Videos <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
            <a href=""../thumbnail-design.html"">Thumbnail Design <img src=""../theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            <hr>
        </details>
        <details>
            <summary>Content</summary>
            <a href=""../content.html""><b>Content</b></a>
            <a href=""../apple-archive.html"">Apple Archive <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
            <a href=""../apple-concepts.html"">Apple Concepts <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
            <a href=""../articles.html"">Articles <img src=""../theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
            <a href=""../blog.html"">Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
            <a href=""../clipart.html"">Clipart <img src=""../theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
            <a href=""../my-photography.html"">My Photography <img src=""../theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
            <a href=""../wallpapers.html"">Wallpapers <img src=""../theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            <hr>
        </details>
        <details>
            <summary>Scam Avoidance</summary>
            <a href=""../scam-avoidance.html""><b>Scam Avoidance</b></a>
            <a href=""../report-a-scam.html"">Report a Scam <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
            <a href=""../scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
            <a href=""../scam-info-updates.html"">Scam Info Updates <img src=""../theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            <hr>
        </details>
        <details>
            <summary>Site Related</summary>
            <a href=""../site-related.html""><b>Site Related</b></a>
            <a href=""../all-pages.html"">All Pages <img src=""../theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
            <a href=""../changelog.html"">Changelog</a>
            <a href=""../downloads.html"">Downloads <img src=""../theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
            <a href=""../get-help.html"">Get Help <img src=""../theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
            <a href=""../previews.html"">Previews</a>
            <a href=""../report-an-issue.html"">Report an Issue <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
            <a href=""../saved-site-revisions.html"">Saved Site Revisions <img src=""../theme/glyphs/floppy.png"" height=""15"" alt=""saved site revisions""></a>
            <hr>
        </details>
        <details>
            <summary>Help & Contact</summary>
            <a href=""../help-contact.html""><b>Help & Contact</b></a>
            <a href=""../contact-me.html"">Contact Me <img src=""../theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
            <a href=""../website-survey.html"">Site Survey <img src=""../theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            <hr>
        </details>
        <a href=""../previews/store.html"">Store <img src=""../theme/glyphs/store.png"" height=""20"" alt=""store""></a>

        <div style=""margin-bottom:20px;text-align:center;"">
            <a href=""https://www.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/youtube-social.png"" alt=""My YouTube Channel"" width=""40"">
            </a>
            <a href=""https://twitter.com/theiphonefan"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/x-social.png"" alt=""My X Account"" width=""40"">
            </a>
            <a href=""https://instagram.com/theiphonefan_/"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/instagram-social.png"" alt=""My Instagram Account"" width=""40"">
            </a>
            <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/mail-social.png"" alt=""Email Me"" width=""40"">
            </a>
        </div>
    </div>"
8QgnM98P,6.0.3 Sidebar/Navbar For New Home Page Preview,TheiPhoneFan,HTML,Sunday 24th of March 2024 12:44:31 PM CDT,"    <!-- Top Bar -->
    <div class=""navbar"" style=""border-radius: 13px 13px 13px 13px;"">
        <!-- Site Title -->
        <a href=""../index.html"" style=""background-color:transparent;cursor:pointer;color:black;""><b>Jordan's Blog</b></a>

        <!-- Home -->
        <a href=""../index.html"">Home <img src=""../theme/glyphs/home.png"" height=""15"" alt=""home""></a>

        <!-- Channel Related Dropdown -->
        <div class=""dropdown"">
            <button class=""dropbtn"" title=""dropdown"">Channel Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../channel-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Channel Related</b> <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""channel related""></a>
                <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""../theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
                <a href=""../music-i-use.html"">Music I Use <img src=""../theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
                <a href=""../my-playlists.html"">My Playlists <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
                <a href=""../my-top-5-vids.html"">My Top 5 Vids <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
                <a href=""../my-videos.html"">My Videos <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
                <a href=""../thumbnail-design.html"" style=""border-radius: 0px 0px 16px 16px;"">Thumbnail Design <img src=""../theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            </div>
        </div>

        <!-- Content Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Content <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../content.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Content</b></a>
                <a href=""../apple-archive.html"">Apple Archive <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
                <a href=""../apple-concepts.html"">Apple Concepts <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
                <a href=""../articles.html"">Articles <img src=""../theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
                <a href=""../blog.html"">Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
                <a href=""../clipart.html"">Clipart <img src=""../theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
                <a href=""../my-photography.html"">My Photography <img src=""../theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
                <a href=""../wallpapers.html"" style=""border-radius: 0px 0px 16px 16px;"">Wallpapers <img src=""../theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            </div>
        </div>

        <!-- Scam Avoidance Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Scam Avoidance <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../scam-avoidance.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Scam Avoidance</b></a>
                <a href=""../report-a-scam.html"">Report a Scam <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
                <a href=""../scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
                <a href=""../scam-info-updates.html"" style=""border-radius: 0px 0px 16px 16px;"">Scam Info Updates <img src=""../theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            </div>
        </div>

        <!-- Site Related Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Site Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../site-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Site Related</b></a>
                <a href=""../all-pages.html"">All Pages <img src=""../theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
                <a href=""../changelog.html"">Changelog</a>
                <a href=""../downloads.html"">Downloads <img src=""../theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
                <a href=""../get-help.html"">Get Help <img src=""../theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
                <a href=""../previews.html"">Previews</a>
                <a href=""../report-an-issue.html"">Report an Issue <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
      			<a href=""../saved-site-revisions.html"" style=""border-radius: 0px 0px 16px 16px;"">Saved Site Revisions <img src=""../theme/glyphs/floppy.png"" height=""15""></a>
            </div>
        </div>

        <!-- Help & Contact Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Help & Contact <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""../help-contact.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Help & Contact</b></a>
                <a href=""../contact-me.html"">Contact Me <img src=""../theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
                <a href=""../website-survey.html"">Site Survey <img src=""../theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            </div>
        </div>
    </div>
    </div>

    <!-- Sidebar Button -->
    <button class=""openbtn"" onclick=""toggleSidebar()"" title=""sidebar button"">☰</button>

    <div class=""sidebar"" id=""mySidebar"">
        <h3 style=""color:black;margin-top:40px;"">Jordan's Blog</h3>
        <a href=""../index.html"">Home <img src=""../theme/glyphs/home.png"" height=""15"" alt=""apple archive""></a>
        <details>
            <summary>Channel Related</summary>
            <a href=""../channel-related.html""><b>Channel Related</b></a>
            <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""../theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
            <a href=""../music-i-use.html"">Music I Use <img src=""../theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
            <a href=""../my-playlists.html"">My Playlists <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
            <a href=""../my-top-5-vids.html"">My Top 5 Vids <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
            <a href=""../my-videos.html"">My Videos <img src=""../theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
            <a href=""../thumbnail-design.html"">Thumbnail Design <img src=""../theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            <hr>
        </details>
        <details>
            <summary>Content</summary>
            <a href=""../content.html""><b>Content</b></a>
            <a href=""../apple-archive.html"">Apple Archive <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
            <a href=""../apple-concepts.html"">Apple Concepts <img src=""../theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
            <a href=""../articles.html"">Articles <img src=""../theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
            <a href=""../blog.html"">Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
            <a href=""../clipart.html"">Clipart <img src=""../theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
            <a href=""../my-photography.html"">My Photography <img src=""../theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
            <a href=""../wallpapers.html"">Wallpapers <img src=""../theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            <hr>
        </details>
        <details>
            <summary>Scam Avoidance</summary>
            <a href=""../scam-avoidance.html""><b>Scam Avoidance</b></a>
            <a href=""../report-a-scam.html"">Report a Scam <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
            <a href=""../scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""../theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
            <a href=""../scam-info-updates.html"">Scam Info Updates <img src=""../theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            <hr>
        </details>
        <details>
            <summary>Site Related</summary>
            <a href=""../site-related.html""><b>Site Related</b></a>
            <a href=""../all-pages.html"">All Pages <img src=""../theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
            <a href=""../changelog.html"">Changelog</a>
            <a href=""../downloads.html"">Downloads <img src=""../theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
            <a href=""../get-help.html"">Get Help <img src=""../theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
            <a href=""../previews.html"">Previews</a>
            <a href=""../report-an-issue.html"">Report an Issue <img src=""../theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
            <a href=""../saved-site-revisions.html"">Saved Site Revisions <img src=""../theme/glyphs/floppy.png"" height=""15"" alt=""saved site revisions""></a>
            <hr>
        </details>
        <details>
            <summary>Help & Contact</summary>
            <a href=""../help-contact.html""><b>Help & Contact</b></a>
            <a href=""../contact-me.html"">Contact Me <img src=""../theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
            <a href=""../website-survey.html"">Site Survey <img src=""../theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            <hr>
        </details>

        <div style=""margin-bottom:20px;text-align:center;"">
            <a href=""https://www.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/youtube-social.png"" alt=""My YouTube Channel"" width=""40"">
            </a>
            <a href=""https://twitter.com/theiphonefan"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/x-social.png"" alt=""My X Account"" width=""40"">
            </a>
            <a href=""https://instagram.com/theiphonefan_/"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/instagram-social.png"" alt=""My Instagram Account"" width=""40"">
            </a>
            <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""../theme/social-icons/mail-social.png"" alt=""Email Me"" width=""40"">
            </a>
        </div>
    </div>"
Tg71M189,6.0.3 Home Page Sidebar/Navbar,TheiPhoneFan,HTML,Sunday 24th of March 2024 12:43:57 PM CDT,"    <!-- Top Bar -->
    <div class=""navbar"" style=""border-radius: 13px 13px 13px 13px;"">
        <!-- Site Title -->
        <a href=""./index.html"" style=""background-color:transparent;cursor:pointer;color:black;""><b>TheiPhoneFan.com</b></a>

        <!-- Home -->
        <a href=""./index.html"">Home <img src=""./theme/glyphs/home.png"" height=""15"" alt=""home""></a>

        <!-- Channel Related Dropdown -->
        <div class=""dropdown"">
            <button class=""dropbtn"" title=""dropdown"">Channel Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./channel-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Channel Related</b> <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""channel related""></a>
                <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""./theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
                <a href=""./music-i-use.html"">Music I Use <img src=""./theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
                <a href=""./my-playlists.html"">My Playlists <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
                <a href=""./my-top-5-vids.html"">My Top 5 Vids <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
                <a href=""./my-videos.html"">My Videos <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
                <a href=""./thumbnail-design.html"" style=""border-radius: 0px 0px 16px 16px;"">Thumbnail Design <img src=""./theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            </div>
        </div>

        <!-- Content Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Content <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./content.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Content</b></a>
                <a href=""./apple-archive.html"">Apple Archive <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
                <a href=""./apple-concepts.html"">Apple Concepts <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
                <a href=""./articles.html"">Articles <img src=""./theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
                <a href=""./blog.html"">Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
                <a href=""./clipart.html"">Clipart <img src=""./theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
                <a href=""./my-photography.html"">My Photography <img src=""./theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
                <a href=""./wallpapers.html"" style=""border-radius: 0px 0px 16px 16px;"">Wallpapers <img src=""./theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            </div>
        </div>

        <!-- Scam Avoidance Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Scam Avoidance <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./scam-avoidance.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Scam Avoidance</b></a>
                <a href=""./report-a-scam.html"">Report a Scam <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
                <a href=""./scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
                <a href=""./scam-info-updates.html"" style=""border-radius: 0px 0px 16px 16px;"">Scam Info Updates <img src=""./theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            </div>
        </div>

        <!-- Site Related Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Site Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./site-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Site Related</b></a>
                <a href=""./all-pages.html"">All Pages <img src=""./theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
                <a href=""./changelog.html"">Changelog</a>
                <a href=""./downloads.html"">Downloads <img src=""./theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
                <a href=""./get-help.html"">Get Help <img src=""./theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
                <a href=""./previews.html"">Previews</a>
                <a href=""./report-an-issue.html"">Report an Issue <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
                <a href=""./saved-site-revisions.html"" style=""border-radius: 0px 0px 16px 16px;"">Saved Site Revisions <img src=""./theme/glyphs/floppy.png"" height=""15""></a>            </div>
        </div>

        <!-- Help & Contact Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Help & Contact <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./help-contact.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Help & Contact</b></a>
                <a href=""./contact-me.html"">Contact Me <img src=""./theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
                <a href=""./website-survey.html"">Site Survey <img src=""./theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
                &nbsp;
                <a href=""https://m.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"">YouTube <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""youtube""></a>
                <a href=""https://twitter.com/theiphonefan""> 𝕏</a>
                <a href=""https://www.instagram.com/theiphonefan_/"">Instagram 📷</a>
                <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""border-radius: 0px 0px 16px 16px;"">Mail ✉️</a>
            </div>
        </div>
    </div>
    </div>

    <!-- Sidebar Button -->
    <button class=""openbtn"" onclick=""toggleSidebar()"" title=""sidebar button"">☰</button>

    <div class=""sidebar"" id=""mySidebar"">
        <h3 style=""color:black;margin-top:40px;"">TheiPhoneFan.com</h3>
        <a href=""./index.html"">Home <img src=""./theme/glyphs/home.png"" height=""15"" alt=""home""></a>
        <details>
            <summary>Channel Related</summary>
            <a href=""./channel-related.html""><b>Channel Related</b></a>
            <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""./theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
            <a href=""./music-i-use.html"">Music I Use <img src=""./theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
            <a href=""./my-playlists.html"">My Playlists <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
            <a href=""./my-top-5-vids.html"">My Top 5 Vids <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
            <a href=""./my-videos.html"">My Videos <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
            <a href=""./thumbnail-design.html"">Thumbnail Design <img src=""./theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            <hr>
        </details>
        <details>
            <summary>Content</summary>
            <a href=""./content.html""><b>Content</b></a>
            <a href=""./apple-archive.html"">Apple Archive <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
            <a href=""./apple-concepts.html"">Apple Concepts <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
            <a href=""./articles.html"">Articles <img src=""./theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
            <a href=""./blog.html"">Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
            <a href=""./clipart.html"">Clipart <img src=""./theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
            <a href=""./my-photography.html"">My Photography <img src=""./theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
            <a href=""./wallpapers.html"">Wallpapers <img src=""./theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            <hr>
        </details>
        <details>
            <summary>Scam Avoidance</summary>
            <a href=""./scam-avoidance.html""><b>Scam Avoidance</b></a>
            <a href=""./report-a-scam.html"">Report a Scam <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
            <a href=""./scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
            <a href=""./scam-info-updates.html"">Scam Info Updates <img src=""./theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            <hr>
        </details>
        <details>
            <summary>Site Related</summary>
            <a href=""./site-related.html""><b>Site Related</b></a>
            <a href=""./all-pages.html"">All Pages <img src=""./theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
            <a href=""./changelog.html"">Changelog</a>
            <a href=""./downloads.html"">Downloads <img src=""./theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
            <a href=""./get-help.html"">Get Help <img src=""./theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
            <a href=""./previews.html"">Previews</a>
            <a href=""./report-an-issue.html"">Report an Issue <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
            <a href=""./saved-site-revisions.html"">Saved Site Revisions <img src=""./theme/glyphs/floppy.png"" height=""15"" alt=""saved site revisions""></a>
            <hr>
        </details>
        <details>
            <summary>Help & Contact</summary>
            <a href=""./help-contact.html""><b>Help & Contact</b></a>
            <a href=""./contact-me.html"">Contact Me <img src=""./theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
            <a href=""./website-survey.html"">Site Survey <img src=""./theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            <hr>
        </details>

        <div style=""margin-bottom:20px;text-align:center;"">
            <a href=""https://www.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""./theme/social-icons/youtube-social.png"" alt=""My YouTube Channel"" width=""40"">
            </a>
            <a href=""https://twitter.com/theiphonefan"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""./theme/social-icons/x-social.png"" alt=""My X Account"" width=""40"">
            </a>
            <a href=""https://instagram.com/theiphonefan_/"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""./theme/social-icons/instagram-social.png"" alt=""My Instagram Account"" width=""40"">
            </a>
            <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""./theme/social-icons/mail-social.png"" alt=""Email Me"" width=""40"">
            </a>
        </div>
    </div>"
RnRcU94n,6.0.3 Page Sidebar/Navbar,TheiPhoneFan,HTML,Sunday 24th of March 2024 12:42:49 PM CDT,"    <!-- Top Bar -->
    <div class=""navbar"">
        <!-- Site Title -->
        <a href=""./index.html"" style=""background-color:transparent;cursor:pointer;color:black;""><b>TheiPhoneFan.com</b></a>

        <!-- Home -->
        <a href=""./index.html"">Home <img src=""./theme/glyphs/home.png"" height=""15"" alt=""home""></a>

        <!-- Channel Related Dropdown -->
        <div class=""dropdown"">
            <button class=""dropbtn"" title=""dropdown"">Channel Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./channel-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Channel Related</b> <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""channel related""></a>
                <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""./theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
                <a href=""./music-i-use.html"">Music I Use <img src=""./theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
                <a href=""./my-playlists.html"">My Playlists <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
                <a href=""./my-top-5-vids.html"">My Top 5 Vids <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
                <a href=""./my-videos.html"">My Videos <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
                <a href=""./thumbnail-design.html"" style=""border-radius: 0px 0px 16px 16px;"">Thumbnail Design <img src=""./theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            </div>
        </div>

        <!-- Content Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Content <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./content.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Content</b></a>
                <a href=""./apple-archive.html"">Apple Archive <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
                <a href=""./apple-concepts.html"">Apple Concepts <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
                <a href=""./articles.html"">Articles <img src=""./theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
                <a href=""./blog.html"">Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
                <a href=""./clipart.html"">Clipart <img src=""./theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
                <a href=""./my-photography.html"">My Photography <img src=""./theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
                <a href=""./wallpapers.html"" style=""border-radius: 0px 0px 16px 16px;"">Wallpapers <img src=""./theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            </div>
        </div>

        <!-- Scam Avoidance Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Scam Avoidance <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./scam-avoidance.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Scam Avoidance</b></a>
                <a href=""./report-a-scam.html"">Report a Scam <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
                <a href=""./scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
                <a href=""./scam-info-updates.html"" style=""border-radius: 0px 0px 16px 16px;"">Scam Info Updates <img src=""./theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            </div>
        </div>

        <!-- Site Related Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Site Related <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./site-related.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Site Related</b></a>
                <a href=""./all-pages.html"">All Pages <img src=""./theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
                <a href=""./changelog.html"">Changelog</a>
                <a href=""./downloads.html"">Downloads <img src=""./theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
                <a href=""./get-help.html"">Get Help <img src=""./theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
                <a href=""./previews.html"">Previews</a>
                <a href=""./report-an-issue.html"">Report an Issue <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
                <a href=""./saved-site-revisions.html"" style=""border-radius: 0px 0px 16px 16px;"">Saved Site Revisions <img src=""./theme/glyphs/floppy.png"" height=""15""></a>            </div>
        </div>

        <!-- Help & Contact Dropdown -->
        <div class=""dropdown"" title=""dropdown"">
            <button class=""dropbtn"">Help & Contact <i class=""fa fa-caret-down""></i></button>
            <div class=""dropdown-content"">
                <a href=""./help-contact.html"" style=""border-radius: 16px 16px 0px 0px;""><b>Help & Contact</b></a>
                <a href=""./contact-me.html"">Contact Me <img src=""./theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
                <a href=""./website-survey.html"">Site Survey <img src=""./theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
                &nbsp;
                <a href=""https://m.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"">YouTube <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""youtube""></a>
                <a href=""https://twitter.com/theiphonefan""> 𝕏</a>
                <a href=""https://www.instagram.com/theiphonefan_/"">Instagram 📷</a>
                <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""border-radius: 0px 0px 16px 16px;"">Mail ✉️</a>
            </div>
        </div>
    </div>
    </div>

    <!-- Sidebar Button -->
    <button class=""openbtn"" onclick=""toggleSidebar()"" title=""sidebar button"">☰</button>

    <div class=""sidebar"" id=""mySidebar"">
        <h3 style=""color:black;margin-top:40px;"">TheiPhoneFan.com</h3>
        <a href=""./index.html"">Home <img src=""./theme/glyphs/home.png"" height=""15"" alt=""home""></a>
        <details>
            <summary>Channel Related</summary>
            <a href=""./channel-related.html""><b>Channel Related</b></a>
            <a href=""https://www.youtube.com/@theiphonefan761/about"">Channel Info <img src=""./theme/glyphs/channel-info.png"" height=""15"" alt=""channel info""></a>
            <a href=""./music-i-use.html"">Music I Use <img src=""./theme/glyphs/music-i-use.png"" height=""15"" alt=""music i use""></a>
            <a href=""./my-playlists.html"">My Playlists <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my playlists""></a>
            <a href=""./my-top-5-vids.html"">My Top 5 Vids <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""top 5 vids""></a>
            <a href=""./my-videos.html"">My Videos <img src=""./theme/glyphs/triangle.png"" height=""15"" alt=""my videos""></a>
            <a href=""./thumbnail-design.html"">Thumbnail Design <img src=""./theme/glyphs/thumbnail-design.png"" height=""15"" alt=""thumbnail design""></a>
            <hr>
        </details>
        <details>
            <summary>Content</summary>
            <a href=""./content.html""><b>Content</b></a>
            <a href=""./apple-archive.html"">Apple Archive <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple archive""></a>
            <a href=""./apple-concepts.html"">Apple Concepts <img src=""./theme/glyphs/apple.png"" height=""15"" alt=""apple concepts""></a>
            <a href=""./articles.html"">Articles <img src=""./theme/glyphs/articles.png"" height=""15"" alt=""articles""></a>
            <a href=""./blog.html"">Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""blog""></a>
            <a href=""./clipart.html"">Clipart <img src=""./theme/glyphs/clipart.png"" height=""15"" alt=""clipart""></a>
            <a href=""./my-photography.html"">My Photography <img src=""./theme/glyphs/my-photography.png"" height=""15"" alt=""my photography""></a>
            <a href=""./wallpapers.html"">Wallpapers <img src=""./theme/glyphs/wallpapers.png"" height=""20"" alt=""wallpapers""></a>
            <hr>
        </details>
        <details>
            <summary>Scam Avoidance</summary>
            <a href=""./scam-avoidance.html""><b>Scam Avoidance</b></a>
            <a href=""./report-a-scam.html"">Report a Scam <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report a scam""></a>
            <a href=""./scam-avoidance-blog.html"">Scam Avoidance Blog <img src=""./theme/glyphs/blog.png"" height=""15"" alt=""scam avoidance blog""></a>
            <a href=""./scam-info-updates.html"">Scam Info Updates <img src=""./theme/glyphs/updates.png"" height=""15"" alt=""scam info updates""></a>
            <hr>
        </details>
        <details>
            <summary>Site Related</summary>
            <a href=""./site-related.html""><b>Site Related</b></a>
            <a href=""./all-pages.html"">All Pages <img src=""./theme/glyphs/all-pages.png"" height=""12"" style=""vertical-align:baseline;"" alt=""all pages""></a>
            <a href=""./changelog.html"">Changelog</a>
            <a href=""./downloads.html"">Downloads <img src=""./theme/glyphs/downloads.png"" height=""15"" alt=""downloads""></a>
            <a href=""./get-help.html"">Get Help <img src=""./theme/glyphs/get-help.png"" height=""15"" alt=""get help""></a>
            <a href=""./previews.html"">Previews</a>
            <a href=""./report-an-issue.html"">Report an Issue <img src=""./theme/glyphs/report.png"" height=""15"" alt=""report an issue""></a>
            <a href=""./saved-site-revisions.html"">Saved Site Revisions <img src=""./theme/glyphs/floppy.png"" height=""15"" alt=""saved site revisions""></a>
            <hr>
        </details>
        <details>
            <summary>Help & Contact</summary>
            <a href=""./help-contact.html""><b>Help & Contact</b></a>
            <a href=""./contact-me.html"">Contact Me <img src=""./theme/glyphs/contact-me.png"" height=""15"" alt=""contact me""></a>
            <a href=""./website-survey.html"">Site Survey <img src=""./theme/glyphs/survey.png"" height=""15"" alt=""site survey""></a>
            <hr>
        </details>

        <div style=""margin-bottom:20px;text-align:center;"">
            <a href=""https://www.youtube.com/channel/UC_xMgHdzp5AWR7rVZ89-sYg"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""./theme/social-icons/youtube-social.png"" alt=""My YouTube Channel"" width=""40"">
            </a>
            <a href=""https://twitter.com/theiphonefan"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""./theme/social-icons/x-social.png"" alt=""My X Account"" width=""40"">
            </a>
            <a href=""https://instagram.com/theiphonefan_/"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""./theme/social-icons/instagram-social.png"" alt=""My Instagram Account"" width=""40"">
            </a>
            <a href=""mailto:jordan.theiphonefan@gmail.com"" style=""padding:0px;background-color:transparent;display:inline;"">
                <img src=""./theme/social-icons/mail-social.png"" alt=""Email Me"" width=""40"">
            </a>
        </div>
    </div>"
adDCBrxe,petr good minimax jen -1000,max2201111,Python,Sunday 24th of March 2024 12:32:08 PM CDT,"import chess

def simplify_fen_string(fen):
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachováváme pouze informace o pozici
    return simplified_fen

def evaluate_position(board):
    if board.is_checkmate():
        return -1000  # Mat protihráči
    elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_draw():
        return 0  # Remíza
    else:
        return None  # Hra pokračuje

def update_AR_for_mate_in_k(board, AR, max_k=1000):
    k = 0
    while True:
        k += 1
        changed = False
        for _ in range(2):  # Dvakrát pro každou hodnotu k
            for fen in list(AR.keys()):
                board.set_fen(fen)
                if AR[fen] is not None:
                    continue  # Tato pozice již byla ohodnocena

                evaluations = []
                for move in board.legal_moves:
                    board.push(move)
                    next_fen = simplify_fen_string(board.fen())
                    if next_fen not in AR:
                        AR[next_fen] = evaluate_position(board)  # Přidání nových pozic do AR
                    board.pop()

                    if AR[next_fen] is not None:
                        evaluations.append(AR[next_fen])

                # Výpočet nového hodnocení na základě následovníků
                if evaluations:
                    max_eval = -min(evaluations)
                    if max_eval == -1001+k:
                        AR[fen] = 1000 - k
                        changed = True
                    elif 0 in evaluations:
                        AR[fen] = 0
                        changed = True

            if not changed:
                break  # Konec cyklu, pokud nedošlo k žádné změně

        if k >= max_k or not changed:
            break  # Konec hlavního cyklu, pokud dosáhneme max_k nebo nedošlo k žádné změně

            
def print_draw_positions(AR):
    """"""
    Vytiskne všechny remízové pozice (hodnota 0) zaznamenané v slovníku AR.
    """"""
    print(""Remízové pozice:"")
    for fen, value in AR.items():
        if value != None and value < -980 and value > -1010:
            print(f""FEN>: {fen}, Hodnota: {value}"",""\n"",chess.Board(fen),""<\n"")
            
            
def main():
    initial_fen = ""8/8/8/8/3Q4/5K2/8/4k3 w - - 0 1""
    board = chess.Board(initial_fen)
    AR = {simplify_fen_string(initial_fen): None}  # Inicializace AR s počáteční pozicí
    
    update_AR_for_mate_in_k(board, AR, max_k=50)  # Aktualizace AR
    print_draw_positions(AR)
    
    

main()"
xiMSD0xX,SFDESFGSEHG,gadungw71,PHP,Sunday 24th of March 2024 12:29:27 PM CDT,"•	https://github.com/Assistir-Godzilla-e-Kong-2-Dublado
•	https://github.com/Assistir-Filme-Godzilla-x-Kong-2-2024
•	https://github.com/Assistir-Godzilla-e-Kong-2-Online
•	https://www.senscritique.com/liste/Assistir_Godzilla_e_Kong_O_Novo_Imperio_2024_Filme_Completo_Online_Dublado_em_Portugues/3800562
•	https://www.senscritique.com/liste/Assistir_Godzilla_x_Kong_The_New_Empire_2024_Filme_Completo_dublado_em_portugues/3800579
•	https://www.senscritique.com/liste/ASSISTIR_HD_or_Godzilla_e_Kong_O_Novo_Imperio_2023_filme_completo/3800588
•	https://scribehow.com/page/Godzilla_e_Kong_O_Novo_Imperio_2024_Filme_Completo_E_Legendado_Online__lPdk1-OVQLaa_IjU0bzTtw
•	https://scribehow.com/page/Assistir-HD_Godzilla_e_Kong_O_Novo_Imperio_Filme_Completo_em_Portugues__zF289cd5SKqDmKk8i641xw
•	https://scribehow.com/page/_ASSISTIR_HD_or_Godzilla_x_Kong_The_New_Empire_2024_filme_completo_Dublado_Online_E_Legendado__cphtN7V7TgKKhryIYnjDwA
•	https://www.artstation.com/artwork/zPl1L6
•	https://www.artstation.com/user-5952164/profile
•	https://www.artstation.com/artwork/vDoX6d
•	https://www.artstation.com/user-1815177/profile
•	https://wandering.flarum.cloud/d/51143-taktaleni
•	https://click4r.com/posts/g/15714112/ngaririncik
•	https://hiuderyy.hashnode.dev/batingkolebat
•	https://www.onfeetnation.com/profiles/blogs/rasadedeuh
•	https://medium.com/@kusumadefry/dibarengankingkilaban-df92ffb49d66
•	https://open.firstory.me/story/clu5rqts100eo01vlccwk333o
•	https://forum.mush.com.br/topic/207471/hujanletikngaririncik
•	https://telegra.ph/SIRJAYANTI-03-24
•	https://paste.ee/p/uY8no
•	https://start.me/w/jB61jr
•	https://hackmd.io/@rerewilli6/Sy8SyJ0RT
•	https://rentry.co/upybac2d
•	https://muckrack.com/xeyanojonul-bekhetr/bio
•	https://www.bitsdujour.com/profiles/Zv6EJ7
•	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/716472/Default.aspx
•	https://profile.hatena.ne.jp/xeyanojonul/
•	https://www.fitlynk.com/1711301080F970799
"
4ynuqZ0p,Frigate Config for Tapo C200,MarkusLund,YAML,Sunday 24th of March 2024 12:20:26 PM CDT,"mqtt:
  host: 192.168.1.135
  # Optional: port (default: shown below)
  port: 1883
  # Optional: topic prefix (default: shown below)
  # WARNING: must be unique if you are running multiple instances
  topic_prefix: frigate
  # Optional: client id (default: shown below)
  # WARNING: must be unique if you are running multiple instances
  client_id: frigate
  # Optional: user
  user: USER_FOR_MQTT
  # Optional: password
  # NOTE: Environment variables that begin with 'FRIGATE_' may be referenced in {}.
  #       eg. password: '{FRIGATE_MQTT_PASSWORD}'
  password: PASSWORD_FOR_MQTT
  # Optional: interval in seconds for publishing stats (default: shown below)
  stats_interval: 60
cameras:
  front:
    ffmpeg:
      inputs:
        - path: rtsp://USER:PASSWORD@192.168.1.123/stream2
          roles:
            - detect
        - path: rtsp://USER:PASSWORD@192.168.1.123/stream1
          roles:
            - record
    detect:
      enabled: True
      max_disappeared: 25

    
    rtmp:
      # Required: Enable the live stream (default: True)
      enabled: False
    snapshots:
      # Optional: Enable writing jpg snapshot to /media/frigate/clips (default: shown below)
      # This value can be set via MQTT and will be updated in startup based on retained value
      enabled: True
      # Optional: print a timestamp on the snapshots (default: shown below)
      timestamp: False
      # Optional: draw bounding box on the snapshots (default: shown below)
      bounding_box: False
      # Optional: crop the snapshot (default: shown below)
      crop: False
      # Optional: height to resize the snapshot to (default: original size)
      height: 500
      # Optional: Restrict snapshots to objects that entered any of the listed zones (default: no required zones)
      required_zones: []
      # Optional: Camera override for retention settings (default: global values)
      retain:
        # Required: Default retention days (default: shown below)
        default: 40
        # Optional: Per object retention days
    objects:
      track:
        - person
        - dog
        - cat
        - bird
      
  back:
    ffmpeg:
      inputs:
        - path: rtsp://USER:PASSWORD@192.168.1.132/stream2
          roles:
            - detect
        - path: rtsp://USER:PASSWORD@192.168.1.132/stream1
          roles:
            - record
    detect:
      enabled: True
      max_disappeared: 25

    rtmp:
      # Required: Enable the live stream (default: True)
      enabled: False
    snapshots:
      # Optional: Enable writing jpg snapshot to /media/frigate/clips (default: shown below)
      # This value can be set via MQTT and will be updated in startup based on retained value
      enabled: True
      # Optional: print a timestamp on the snapshots (default: shown below)
      timestamp: False
      # Optional: draw bounding box on the snapshots (default: shown below)
      bounding_box: False
      # Optional: crop the snapshot (default: shown below)
      crop: False
      # Optional: height to resize the snapshot to (default: original size)
      height: 500
      # Optional: Restrict snapshots to objects that entered any of the listed zones (default: no required zones)
      required_zones: []
      # Optional: Camera override for retention settings (default: global values)
      retain:
        # Required: Default retention days (default: shown below)
        default: 40
        # Optional: Per object retention days
    objects:
      track:
        - person
        - dog
        - cat
        - bird    

record:
  # Optional: Enable recording (default: shown below)
  enabled: true
  # Optional: Number of days to retain recordings regardless of events (default: shown below)
  # NOTE: This should be set to 0 and retention should be defined in events section below
  #       if you only want to retain recordings of events.
  retain:
    days: 7
    mode: motion
  # Optional: Event recording settings
  events:
    # Optional: Number of seconds before the event to include (default: shown below)
    pre_capture: 5
    # Optional: Number of seconds after the event to include (default: shown below)
    post_capture: 5
    # Optional: Objects to save recordings for. (default: all tracked objects)
    objects:
      - person
      - dog
      - cat
      - bird
    # Optional: Restrict recordings to objects that entered any of the listed zones (default: no required zones)
    required_zones: []
    # Optional: Retention settings for recordings of events
    retain:
      # Required: Default retention days (default: shown below)
      default: 20
    
detectors:
  cpu1:
    type: cpu
  cpu2:
    type: cpu"
EWfCC2cu,Untitled,kirkarr,Lua,Sunday 24th of March 2024 12:20:17 PM CDT,"local id = 1
local last = CurTime()
local data = {""THX за луа"", ""Кирилл"", "":)"", ""Яйко"", ""Типо пишу""}
function say(str)
    net.Start(""chatmessage_send"")
    net.WriteString(str)
    net.SendToServer()
end
hook.Add(""Tick"",""sas"",function ()
   	cur = CurTime() 
	if cur - last > 0.5 then
    	say(data[math.random(1,#data)])
        last = CurTime()
    end
end)"
CwQz8Gnr,Untitled,yasi04,Python,Sunday 24th of March 2024 12:14:52 PM CDT,"import os
from dotenv import load_dotenv
import disnake
import asyncio
import sqlite3
from disnake.ext import commands

load_dotenv()

bot = commands.Bot(command_prefix=""!"", help_command=None, intents=disnake.Intents.all())

conn = sqlite3.connect('filters.db')
c = conn.cursor()

c.execute('''CREATE TABLE IF NOT EXISTS text_filters 
             (channel_id INTEGER PRIMARY KEY, filters TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS link_filters 
             (channel_id INTEGER PRIMARY KEY, filters TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS roles 
             (role TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS guest_filters 
             (server INTEGER PRIMARY KEY, filters TEXT)''')

conn.commit()


def link_checker(message):
    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (message.channel.id,))
    row = c.fetchone()
    if row:
        filters = row[0].split(';')
        if message.content.startswith(""http://"") or message.content.startswith(""https://""):
            flag = True
            for word in filters:
                if word == message.content.split('/')[2]:
                    flag = False
            return flag


def text_checker(message):
    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (message.channel.id,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        flag = True
        if message.content.split(' ')[0] in text_filters:
            flag = False
        return flag


def guest_checker(message):
    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        guest_filters = row[0].split(';')
        flag = False
        if (message.content.split(' ')[0] in guest_filters) or ('/' in message.content):
            flag = True
        return flag


@bot.event
async def on_ready():
    print(f""Bot {bot.user} is ready to work!"")


@bot.event
async def on_message(message):
    result = False
    if not message.author.bot:
        for role in message.author.roles:
            print(role, role.id)
            c.execute(""SELECT * FROM roles WHERE role=?"", (role.id,))
            result = c.fetchone()
            if result:
                break
    if result:
        if guest_checker(message):
            await message.delete()
            await message.channel.send(f'*Эта команда доступна только для авторизованных участников сервера, пожалуйста авторизуйтесь и получите роль ""Участник""')
        return
    elif message.author == message.guild.owner:
        return
    elif message.author == bot.user:
        await asyncio.sleep(120)
        await message.delete()
        return
    elif message.author.bot:
        return
    else:
        if message.content.startswith(""http://"") or message.content.startswith(""https://""):
            c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (message.channel.id,))
            row = c.fetchone()
            if row:
                filters = row[0].split(';')
                if link_checker(message):
                    await message.delete()
                    await message.channel.send(f""*В этом канале доступны только* `{filters}`, *Другое не разрешено XD*"")
                    return
        else:
            c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (message.channel.id,))
            row = c.fetchone()
            if row:
                text_filters = row[0].split(';')
                if text_checker(message):
                    await message.delete()
                    await message.channel.send(f""*В этом канале доступны только* `{text_filters}`, *Другое не разрешено XD*"")
                    return

    await bot.process_commands(message)


@bot.slash_command(description=""добавить текстовый фильтр"")
async def add_text_filter(ctx, channel_id: str, filter_text: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_text
        c.execute(""UPDATE text_filters SET filters = ? WHERE channel_id = ?"", (new_filters, channel_id))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO text_filters (channel_id, filters) VALUES (?, ?)"", (channel_id, filter_text))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""добавить гостевой фильтр"")
async def add_guest_filter(ctx, filter_text: str):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_text
        c.execute(""UPDATE guest_filters SET filters = ? WHERE server = ?"", (new_filters, 1))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO guest_filters (server, filters) VALUES (?, ?)"", (1, filter_text))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""добавить гостевые роли"")
async def add_guest_roles(ctx, role: disnake.Role):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""INSERT INTO roles (role) VALUES (?)"", (role.id,))
    conn.commit()
    await ctx.send('Готово')


@bot.slash_command(description=""удалить гостевые роли"")
async def delete_guest_roles(ctx, role: disnake.Role):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT * FROM roles WHERE role=?"", (role.id,))
    result = c.fetchone()

    if result:
        c.execute(""DELETE FROM roles WHERE role=?"", (role.id,))
        conn.commit()
        await ctx.send('Роль удалена из базы данных')
    else:
        await ctx.send('Роль не найдена в базе данных')


@bot.slash_command(description=""добавить ссылку в фильтр"")
async def add_link_filter(ctx, channel_id: str, filter_link: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_link
        c.execute(""UPDATE link_filters SET filters = ? WHERE channel_id = ?"", (new_filters, channel_id))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO link_filters (channel_id, filters) VALUES (?, ?)"", (channel_id, filter_link))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""удалить текстовый фильтр (выбор)"")
async def delete_filter(ctx, channel_id: str, filters: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        new_text_filters = [filter_word for filter_word in text_filters if filter_word not in filters.split(';')]
        new_text_filters_str = ';'.join(new_text_filters)
        c.execute(""UPDATE text_filters SET filters = ? WHERE channel_id = ?"", (new_text_filters_str, channel_id))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров для этого канала и не было')


@bot.slash_command(description=""удалить гостевой фильтр (выбор)"")
async def delete_guest_filter(ctx, filters: str):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        new_text_filters = [filter_word for filter_word in text_filters if filter_word not in filters.split(';')]
        new_text_filters_str = ';'.join(new_text_filters)
        c.execute(""UPDATE guest_filters SET filters = ? WHERE server = ?"", (new_text_filters_str, 1))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров и не было')


@bot.slash_command(description=""удалить фильтр ссылок (выбор)"")
async def delete_link_filter(ctx, channel_id: str, filters: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        link_filters = row[0].split(';')
        new_link_filters = [filter_link for filter_link in link_filters if filter_link not in filters.split(';')]
        new_link_filters_str = ';'.join(new_link_filters)
        c.execute(""UPDATE link_filters SET filters = ? WHERE channel_id = ?"", (new_link_filters_str, channel_id))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров для этого канала и не было')


@bot.slash_command(description=""удалить все фильтры для канала"")
async def delete_all_filters(ctx, channel_id: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""DELETE FROM text_filters WHERE channel_id = ?"", (channel_id,))
    c.execute(""DELETE FROM link_filters WHERE channel_id = ?"", (channel_id,))
    conn.commit()

    await ctx.send('Готово')


@bot.slash_command(description=""удалить все фильтры гостей"")
async def delete_all_guest_filters(ctx):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""DELETE FROM guest_filters WHERE server= ?"", (1,))
    conn.commit()

    await ctx.send('Готово')


bot.run(os.getenv('TOKEN'))
"
XeLTZKba,Teste,Francisfranteresina,JSON,Sunday 24th of March 2024 11:59:58 AM CDT,"{""id"":28,""name"":""Ação""},{""id"":12,""name"":""Aventura""},{""id"":878,""name"":""Ficção científica""},{""id"":28,""name"":""Ação""}"
vSqV6rRR,Untitled,yasi04,Python,Sunday 24th of March 2024 11:53:50 AM CDT,"import os
from dotenv import load_dotenv
import disnake
import asyncio
import sqlite3
from disnake.ext import commands

load_dotenv()

bot = commands.Bot(command_prefix=""!"", help_command=None, intents=disnake.Intents.all())

conn = sqlite3.connect('filters.db')
c = conn.cursor()

c.execute('''CREATE TABLE IF NOT EXISTS text_filters 
             (channel_id INTEGER PRIMARY KEY, filters TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS link_filters 
             (channel_id INTEGER PRIMARY KEY, filters TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS roles 
             (role TEXT)''')

c.execute('''CREATE TABLE IF NOT EXISTS guest_filters 
             (server INTEGER PRIMARY KEY, filters TEXT)''')

conn.commit()


def link_checker(message):
    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (message.channel.id,))
    row = c.fetchone()
    if row:
        filters = row[0].split(';')
        if message.content.startswith(""http://"") or message.content.startswith(""https://""):
            flag = True
            for word in filters:
                if word == message.content.split('/')[2]:
                    flag = False
            return flag


def text_checker(message):
    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (message.channel.id,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        flag = True
        if message.content.split(' ')[0] in text_filters:
            flag = False
        return flag


def guest_checker(message):
    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        guest_filters = row[0].split(';')
        flag = False
        if (message.content.split(' ')[0] in guest_filters) or ('/' in message.content):
            flag = True
        return flag


@bot.event
async def on_ready():
    print(f""Bot {bot.user} is ready to work!"")


@bot.event
async def on_message(message):
    for role in message.author.roles:
        c.execute(""SELECT * FROM roles WHERE role=?"", (role.id,))
        result = c.fetchone()
        if result:
            break
    if result:
        if guest_checker(message):
            await message.delete()
            await message.channel.send(f'*Эта команда доступна только для авторизованных участников сервера, пожалуйста авторизуйтесь и получите роль ""Участник""')
        return
    elif message.author == message.guild.owner:
        return
    elif message.author == bot.user:
        await asyncio.sleep(120)
        await message.delete()
        return
    elif message.author.bot:
        return
    else:
        if message.content.startswith(""http://"") or message.content.startswith(""https://""):
            c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (message.channel.id,))
            row = c.fetchone()
            if row:
                filters = row[0].split(';')
                if link_checker(message):
                    await message.delete()
                    await message.channel.send(f""*В этом канале доступны только* `{filters}`, *Другое не разрешено XD*"")
                    return
        else:
            c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (message.channel.id,))
            row = c.fetchone()
            if row:
                text_filters = row[0].split(';')
                if text_checker(message):
                    await message.delete()
                    await message.channel.send(f""*В этом канале доступны только* `{text_filters}`, *Другое не разрешено XD*"")
                    return

    await bot.process_commands(message)


@bot.slash_command(description=""добавить текстовый фильтр"")
async def add_text_filter(ctx, channel_id: str, filter_text: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_text
        c.execute(""UPDATE text_filters SET filters = ? WHERE channel_id = ?"", (new_filters, channel_id))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO text_filters (channel_id, filters) VALUES (?, ?)"", (channel_id, filter_text))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""добавить гостевой фильтр"")
async def add_guest_filter(ctx, filter_text: str):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_text
        c.execute(""UPDATE guest_filters SET filters = ? WHERE server = ?"", (new_filters, 1))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO guest_filters (server, filters) VALUES (?, ?)"", (1, filter_text))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""добавить гостевые роли"")
async def add_guest_roles(ctx, role: disnake.Role):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""INSERT INTO roles (role) VALUES (?)"", (role.id,))
    conn.commit()
    await ctx.send('Готово')


@bot.slash_command(description=""удалить гостевые роли"")
async def delete_guest_roles(ctx, role: disnake.Role):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT * FROM roles WHERE role=?"", (role.id,))
    result = c.fetchone()

    if result:
        c.execute(""DELETE FROM roles WHERE role=?"", (role.id,))
        conn.commit()
        await ctx.send('Роль удалена из базы данных')
    else:
        await ctx.send('Роль не найдена в базе данных')


@bot.slash_command(description=""добавить ссылку в фильтр"")
async def add_link_filter(ctx, channel_id: str, filter_link: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        old_filters = row[0]
        new_filters = old_filters + "";"" + filter_link
        c.execute(""UPDATE link_filters SET filters = ? WHERE channel_id = ?"", (new_filters, channel_id))
        conn.commit()
        await ctx.send('Готово')
    else:
        c.execute(""INSERT INTO link_filters (channel_id, filters) VALUES (?, ?)"", (channel_id, filter_link))
        conn.commit()
        await ctx.send('Готово')


@bot.slash_command(description=""удалить текстовый фильтр (выбор)"")
async def delete_filter(ctx, channel_id: str, filters: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM text_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        new_text_filters = [filter_word for filter_word in text_filters if filter_word not in filters.split(';')]
        new_text_filters_str = ';'.join(new_text_filters)
        c.execute(""UPDATE text_filters SET filters = ? WHERE channel_id = ?"", (new_text_filters_str, channel_id))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров для этого канала и не было')


@bot.slash_command(description=""удалить гостевой фильтр (выбор)"")
async def delete_guest_filter(ctx, filters: str):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM guest_filters WHERE server = ?"", (1,))
    row = c.fetchone()
    if row:
        text_filters = row[0].split(';')
        new_text_filters = [filter_word for filter_word in text_filters if filter_word not in filters.split(';')]
        new_text_filters_str = ';'.join(new_text_filters)
        c.execute(""UPDATE guest_filters SET filters = ? WHERE server = ?"", (new_text_filters_str, 1))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров и не было')


@bot.slash_command(description=""удалить фильтр ссылок (выбор)"")
async def delete_link_filter(ctx, channel_id: str, filters: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""SELECT filters FROM link_filters WHERE channel_id = ?"", (channel_id,))
    row = c.fetchone()
    if row:
        link_filters = row[0].split(';')
        new_link_filters = [filter_link for filter_link in link_filters if filter_link not in filters.split(';')]
        new_link_filters_str = ';'.join(new_link_filters)
        c.execute(""UPDATE link_filters SET filters = ? WHERE channel_id = ?"", (new_link_filters_str, channel_id))
        conn.commit()

        await ctx.send('Готово')
    else:
        await ctx.send('Фильтров для этого канала и не было')


@bot.slash_command(description=""удалить все фильтры для канала"")
async def delete_all_filters(ctx, channel_id: str):
    channel_id = int(channel_id)

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""DELETE FROM text_filters WHERE channel_id = ?"", (channel_id,))
    c.execute(""DELETE FROM link_filters WHERE channel_id = ?"", (channel_id,))
    conn.commit()

    await ctx.send('Готово')


@bot.slash_command(description=""удалить все фильтры гостей"")
async def delete_all_guest_filters(ctx):

    if ctx.author != ctx.guild.owner:
        await ctx.send('Команда только для создателя')
        return

    c.execute(""DELETE FROM guest_filters WHERE server= ?"", (1,))
    conn.commit()

    await ctx.send('Готово')


bot.run(os.getenv('TOKEN'))
"
DF35uSDQ,Ride A Cart,VeryGoodAdmin,Lua,Sunday 24th of March 2024 11:49:02 AM CDT,"_G.AutoCollectOrbs = false
_G.AutoRebirth = false

local library = loadstring(game:HttpGet(""https://raw.githubusercontent.com/Majora144/Ui-libs-back-ups/main/Turtle%20UI/main.lua""))()

local window = library:Window(""Kotori is Gay"")

 window:Toggle(""Auto Collect Orbs"", false, function(bool)
    _G.AutoCollectOrbs = bool
    AutoOrb()
end)

window:Toggle(""Auto Rebirth"", false, function(bool)
    _G.AutoRebirth = bool
    AutoReb()
end)



--Get All Orbs
pcall(function()
    function AutoOrb()
        while _G.AutoCollectOrbs do
            if not _G.AutoCollectOrbs then break end
            task.wait()
            for i,v in pairs(game:GetService(""Workspace"").Effects:GetChildren()) do
                if v.Name == ""Template"" then
                    v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                end
            end
        end
    end
end)

pcall(function()
    function AutoReb()
        while _G.AutoRebirth do
            if not _G.AutoRebirth then break end
            task.wait()
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""Data""):WaitForChild(""RequestRebirth""):InvokeServer()
        end
    end
end)
"
ZFGZsADC,"Algoritmi lezione 19 - Quick Sort, parte A",fcamuso,C#,Sunday 24th of March 2024 11:47:41 AM CDT,"#include <iostream>

using namespace std;


int partiziona(int v[], int inizio, int fine)
{
  cout << string(40, '*') << endl;

  cout << ""partiziono da "" << inizio <<"" a "" << fine << endl;
	int pivot = v[inizio];

	int cont = 0;
	for (int i = inizio + 1; i <= fine; i++) {
		if (v[i] <= pivot)
			cont++;
	}

	//mettiamo il pivot nella posizione che gli spetta
	int indice_pivot = inizio + cont;
	swap(v[indice_pivot], v[inizio]);
	cout << ""per pivot scambio "" << v[indice_pivot] << "" con "" << v[inizio] << endl;

	// spostiamo gli elementi più piccoli del pivot alla sua sinistra
	// e quelli più grandi alla sua destra
	int i = inizio, j = fine;

	while (i < indice_pivot && j > indice_pivot) {

		while (v[i] <= pivot) {
			i++;
		}

		while (v[j] > pivot) {
			j--;
		}

		if (i < indice_pivot && j > indice_pivot) {
      cout << ""scambio "" << v[i] << "" con "" << v[j] << endl;
			swap(v[i], v[j]);
			i++; j--;
		}
	}
	cout << string(40, '-') << ""\n\n"";

	return indice_pivot;
}

void quickSort(int v[], int inizio, int fine)
{

	if (inizio >= fine)
		return;


	int p = partiziona(v, inizio, fine);

  // ordina la parte a sinistra
	quickSort(v, inizio, p - 1);

	// ordina la parte a destra
	quickSort(v, p + 1, fine);
}

int main()
{

	int v[] = { 81, 98, 78, 60, 115, -3, 45, 45, 1, 10 };
	int n = 10;

	quickSort(v, 0, n - 1);

	for (int i = 0; i < n; i++) {
		cout << v[i] << "" "";
	}

	return 0;
}
"
jjtHu4rn,edit bonding vyos,niammuddin,JavaScript,Sunday 24th of March 2024 11:44:02 AM CDT,"  // edit Bonding
  function editBonding(data) {
    let modalContent = '<div class=""mt-3 mb-10""><div class=""dataTables_processing"" role=""status""><div><div></div><div></div><div></div><div></div></div></div></div>';
    Swal.fire({
        title: 'Edit Bonding',
        html: modalContent,
        showCancelButton: true,
        showLoaderOnConfirm: true,
        confirmButtonText: 'Save',
        cancelButtonText: 'Cancel',
        didOpen: () => {
            $.ajax({
                url: '/api/interfaces_list',
                type: 'POST',
                dataType: 'json',
                success: function(responseData) {
                    jsonData = responseData;
                    ethernetInterfaces = Object.keys(jsonData.data.interfaces.ethernet);
  
                    modalContent = createEditForm(data, ethernetInterfaces);
                    Swal.update({ html: modalContent });
                },
                error: function(error) {
                    Swal.update({ html: '<div>Error loading data.</div>', icon: 'error' });
                    console.log('Error fetching data:', error);
                }
            });
        },
      //   preConfirm: () => {
      //     function getFormData() {
      //       const bondMode = document.getElementById(""bondMode"").value;
      //       const hashPolicy = document.getElementById(""hashPolicy"").value;
      //       const slaveSelects = document.querySelectorAll("".slaveRow select"");
      //       let memberInterface;
        
      //       if (slaveSelects.length === 0) {
      //           memberInterface = [null]; // Jika tidak ada select option, berikan nilai [null]
      //       } else {
      //           memberInterface = Array.from(slaveSelects).map(select => select.value);
      //       }
        
      //       return {
      //           bondMode: bondMode,
      //           hashPolicy: hashPolicy,
      //           memberInterface: memberInterface
      //       };
      //   }
        
        
      //   const formData = getFormData();
      //   const isBondModeChanged = formData.bondMode !== data.mode;
      //   const isHashPolicyChanged = formData.hashPolicy !== data.hashPolicy;
        
      //   const originalMemberInterfaces = data.memberInterfaces.split(',').map(s => s.trim());
      //   let isMembersChanged = !(originalMemberInterfaces.every((val, index) => val === formData.memberInterface[index]) 
      //                               && originalMemberInterfaces.length === formData.memberInterface.length);
    
      //   const isMembersInitiallyEmpty = originalMemberInterfaces.length === 0 || (originalMemberInterfaces.length === 1 && originalMemberInterfaces[0] === """");
      //   const isFormDataMembersEmpty = formData.memberInterface[0] === null;
    
      //   if (isMembersInitiallyEmpty && isFormDataMembersEmpty) {
      //       isMembersChanged = false;
      //   }
    
      //   if (!isBondModeChanged && !isHashPolicyChanged && !isMembersChanged) {
      //     Swal.fire('No Changes', 'There are no changes to save.', 'info');
      //     return false;
      // }
      
      // // Mengganti nilai null menjadi ""delete all""
      // if (formData.memberInterface[0] === null) {
      //     formData.memberInterface = [""deleteInterface""];
      // }
      
      // // Mendefinisikan postData
      // let postData = {
      //     bondName: data.bondName,
      //     bondMode: isBondModeChanged ? formData.bondMode : """",
      //     hashPolicy: isHashPolicyChanged ? formData.hashPolicy : """",
      //     bondMember: isMembersChanged ? formData.memberInterface : []
      // };
      //   console.log(postData);

      //       return fetch('/api/bonding_edit', {
      //         method: ""POST"",
      //         headers: {
      //             ""Content-Type"": ""application/json"",
      //         },
      //         body: JSON.stringify({
      //           bondName: data.bondName,
      //           bondMode: isBondModeChanged ? formData.bondMode : """",
      //           hashPolicy: isHashPolicyChanged ? formData.hashPolicy : """",
      //           bondMember: isMembersChanged ? formData.memberInterface : []
      //       })
      //     })
      //     .then((response) => {
      //         if (!response.ok) {
      //             throw new Error(""Network response was not ok"");
      //         }
      //         return response.json();
      //     })
      //     .then((data) => {
      //         if (!data.success) {
      //             throw new Error(data.message);
      //         }
      //         Swal.fire(""Success!"", data.message, ""success"");
      //         $('#interfaces-bonding').DataTable().ajax.reload();
      //         console.info(data);
      //     })
      //     .catch((error) => {
      //         Swal.fire(""Error!"", error.message , ""error"");
      //         console.error(error);
      //     });
        
      //   }

      preConfirm: () => {
        function getFormData() {
            const bondMode = document.getElementById(""bondMode"").value;
            const hashPolicy = document.getElementById(""hashPolicy"").value;
            const slaveSelects = document.querySelectorAll("".slaveRow select"");
            let memberInterface;
    
            if (slaveSelects.length === 0) {
                memberInterface = [null]; // Jika tidak ada select option, berikan nilai [null]
            } else {
                memberInterface = Array.from(slaveSelects).map(select => select.value);
            }
    
            return {
                bondMode: bondMode,
                hashPolicy: hashPolicy,
                memberInterface: memberInterface
            };
        }
    
        const formData = getFormData();
        const isBondModeChanged = formData.bondMode !== data.mode;
        const isHashPolicyChanged = formData.hashPolicy !== data.hashPolicy;
    
        const originalMemberInterfaces = data.memberInterfaces.split(',').map(s => s.trim());
        const formDataInterfaces = formData.memberInterface;
    
        let addedInterfaces = formDataInterfaces.filter(interface => !originalMemberInterfaces.includes(interface));
        let removedInterfaces = originalMemberInterfaces.filter(interface => !formDataInterfaces.includes(interface));
    
        const isMembersChanged = addedInterfaces.length > 0 || removedInterfaces.length > 0;
    
        // // Mengganti nilai null menjadi ""delete all""
        // let formDataInterfacesCopy = [...formDataInterfaces]; // Buat salinan dari array formDataInterfaces
        // if (formDataInterfacesCopy[0] === null) {
        //     formDataInterfacesCopy = [""deleteInterface""];
        // }

        // Hapus null dari addedInterfaces jika semua antarmuka dihapus
        addedInterfaces = addedInterfaces.filter(interface => interface !== null);

        // Mendefinisikan postData
        let postData = {
            bondName: data.bondName,
            bondMode: isBondModeChanged ? formData.bondMode : """",
            hashPolicy: isHashPolicyChanged ? formData.hashPolicy : """",
            bondMember: {
                add: addedInterfaces,
                delete: removedInterfaces
            } // Objek dengan turunan add dan delete
        };

        console.log(postData);

    
        // Jika tidak ada perubahan, tampilkan pesan dan kembalikan false
        if (!isMembersChanged) {
            Swal.fire('No Changes', 'There are no changes to save.', 'info');
            return false;
        }
    
        return fetch('/api/bonding_edit', {
                method: ""POST"",
                headers: {
                    ""Content-Type"": ""application/json"",
                },
                body: JSON.stringify(postData) // Kirim postData ke backend
            })
            .then((response) => {
                if (!response.ok) {
                    throw new Error(""Network response was not ok"");
                }
                return response.json();
            })
            .then((data) => {
                if (!data.success) {
                    throw new Error(data.message);
                }
                Swal.fire(""Success!"", data.message, ""success"");
                $('#interfaces-bonding').DataTable().ajax.reload();
                console.info(data);
            })
            .catch((error) => {
                Swal.fire(""Error!"", error.message, ""error"");
                console.error(error);
            });
    
    }
    
    
    
    
    

      })
    }
  

  function createEditForm(data, ethernetInterfaces) {
    let modalContent = `
        <div id=""modalFormContainer"">
            <input type=""text"" id=""bondName"" class=""mt-3 form-control"" placeholder=""${data.bondName}"" disabled>
    `;
  
    modalContent += `
        <select id=""bondMode"" class=""mt-3 form-select"">
    `;
  
    const bondModes = [
        '802.3ad', 'active-backup', 'broadcast', 'round-robin', 'transmit-load-balance', 
        'adaptive-load-balance', 'xor-hash'
    ];
    bondModes.forEach(mode => {
        modalContent += `
            <option value=""${mode}"" ${data.mode === mode ? 'selected' : ''}>${mode}</option>
        `;
    });
  
    modalContent += '</select>';
  
    modalContent += `
        <select id=""hashPolicy"" class=""mt-3 form-select"">
    `;
  
    const hashPolicies = ['layer2', 'layer2+3', 'layer3+4', 'encap2+3', 'encap3+4'];
    hashPolicies.forEach(policy => {
        modalContent += `
            <option value=""${policy}"" ${data.hashPolicy === policy ? 'selected' : ''}>${policy}</option>
        `;
    });
  
    modalContent += '</select>';
    modalContent += `
        <div class=""input-group mt-3"">
            <button class=""mt-3 btn btn-sm btn-outline-primary"" type=""button"" onclick=""tambahSlave(document.getElementById('modalFormContainer'))"">+ Add Member Interface</button>
        </div>
    `;
  
    const slaveInterfaces = data.memberInterfaces.split(',').map(s => s.trim());
    if (slaveInterfaces.length > 0 && slaveInterfaces[0] !== """") {
        slaveInterfaces.forEach(item => {
            modalContent += '<div class=""slaveRow input-group mt-3""><select class=""form-select"">';
            ethernetInterfaces.forEach(interface => {
                modalContent += `
                    <option value=""${interface}"" ${item === interface ? 'selected' : ''}>${interface}</option>
                `;
            });
            modalContent += `
                </select>
                <button class=""btn btn-outline-danger"" onclick=""hapusBaris(this)"">-</button>
                </div>
            `;
        });
    }
    
  
    modalContent += '</div>';
  
    return modalContent;
  }
  
  function tambahSlave(container) {
        const newSelect = document.createElement('select');
        newSelect.className = 'form-select';
        const defaultOption = document.createElement('option');
        defaultOption.value = """";
        defaultOption.textContent = ""-- Choose Interface --"";
        newSelect.appendChild(defaultOption);
  
        ethernetInterfaces.forEach(interface => {
            const option = document.createElement('option');
            option.value = interface;
            option.textContent = interface;
            newSelect.appendChild(option);
        });
  
        const removeBtn = document.createElement('button');
        removeBtn.className = 'btn btn-outline-danger';
        removeBtn.textContent = '-';
        removeBtn.onclick = function () {
            hapusBaris(removeBtn);
        };
  
        const newRow = document.createElement('div');
        newRow.className = 'slaveRow input-group mt-3';
        newRow.appendChild(newSelect);
        newRow.appendChild(removeBtn);
  
        container.appendChild(newRow);
  }
  
  function hapusBaris(button) {
        const row = button.parentNode;
        row.parentNode.removeChild(row);
  }
  "
Adc3fJg1,Untitled,f0f077,HTML,Sunday 24th of March 2024 11:34:32 AM CDT,"Complete Web Developer Course HTML CSS JavaScript PHP, and jQuery
complete web developer's Guide to websites working with HTML, CSS, JavaScript, PHP, Bootstrap, JQuery, MySQL and more
for more:https://cuty.io/vLIXGg6n"
