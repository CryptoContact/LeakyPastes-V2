id,title,username,language,date,content
K0WQrxzq,SQL - Introduction to DML Script by HadiMaster,hadimaster65555,PostgreSQL,Thursday 28th of March 2024 12:55:09 AM CDT,"-- Create the products table
CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    description TEXT,
    category VARCHAR(50),
    price NUMERIC(10, 2),
    inventory_quantity INT
);

-- Insert data into the products table
INSERT INTO products (product_id, name, description, category, price, inventory_quantity) VALUES
(1, 'Laptop', '15.6"" Intel Core i5, 8GB RAM, 512GB SSD', 'Electronics', 899.99, 50),
(2, 'Smartphone', '6.5"" OLED Display, 128GB Storage, 12MP Camera', 'Electronics', 699.99, 100),
(3, 'Headphones', 'Wireless Over-Ear Headphones with ANC', 'Electronics', 199.99, 75),
(4, 'Smartwatch', 'Fitness Tracker with Heart Rate Monitor', 'Electronics', 149.99, 30),
(5, 'Backpack', 'Waterproof Laptop Backpack with USB Charging', 'Fashion', 49.99, 200),
(6, 'Sneakers', 'Men''s Running Shoes with Breathable Mesh', 'Fashion', 79.99, 150),
(7, 'Dress', 'Women''s Floral Print Summer Dress', 'Fashion', 39.99, 80),
(8, 'Watch', 'Stainless Steel Analog Watch', 'Fashion', 129.99, 100),
(9, 'Tablet', '10"" Android Tablet with Quad-Core Processor', 'Electronics', 299.99, 50),
(10, 'Camera', 'DSLR Camera Kit with 18-55mm Lens', 'Electronics', 799.99, 20),
(11, 'Keyboard', 'Mechanical Gaming Keyboard with RGB Lighting', 'Electronics', 129.99, 50),
(12, 'Mouse', 'Wireless Optical Mouse', 'Electronics', 29.99, 100),
(13, 'Speaker', 'Bluetooth Portable Speaker', 'Electronics', 79.99, 150),
(14, 'T-shirt', 'Men''s Cotton T-shirt', 'Fashion', 19.99, 200),
(15, 'Jeans', 'Women''s Skinny Jeans', 'Fashion', 49.99, 100),
(16, 'Sunglasses', 'Polarized UV Protection Sunglasses', 'Fashion', 59.99, 50),
(17, 'Wallet', 'Genuine Leather Bifold Wallet', 'Fashion', 39.99, 120),
(18, 'Printer', 'Wireless All-in-One Printer', 'Electronics', 149.99, 40),
(19, 'Monitor', '27"" LED Monitor with Full HD Resolution', 'Electronics', 249.99, 60),
(20, 'External HDD', '2TB Portable External Hard Drive', 'Electronics', 89.99, 80),
(21, 'Power Bank', '20000mAh Portable Power Bank', 'Electronics', 49.99, 100),
(22, 'Fitness Tracker', 'Waterproof Activity Tracker', 'Electronics', 79.99, 150),
(23, 'Yoga Mat', 'Non-Slip Exercise Mat', 'Fitness', 29.99, 200),
(24, 'Dumbbells', 'Set of 10 lb Rubber-Coated Dumbbells', 'Fitness', 39.99, 100),
(25, 'Protein Powder', 'Whey Protein Isolate Powder', 'Fitness', 49.99, 50);

-- ambil semua kolom dari tabel products
SELECT * FROM products;

-- urutkan data berdasarkan price secara descending
SELECT * FROM products
ORDER BY price DESC;

-- ambil nilai unique dari data
SELECT DISTINCT category FROM products

-- ambil 5 barang termahal
SELECT * FROM products
ORDER BY price DESC
LIMIT 5;

-- ambil semua data yang harganya lebih kecil dari 100
SELECT * FROM products
WHERE price < 100;

-- memilih produk dengan kategori 'Elektronik' atau 'Fashion'
SELECT *
FROM products
WHERE category IN ('Electronics', 'Fashion');

-- memilih produk dengan harga antara $50 dan $100
SELECT *
FROM products
WHERE price BETWEEN 50 AND 100;

-- memilih produk dengan nama yang mengandung kata 'Speaker'
SELECT *
FROM products
WHERE name LIKE '%Speaker%';

-- memilih produk dengan deskripsi yang tidak kosong
SELECT *
FROM products
WHERE description IS NOT NULL;

-- masukkan nilai ke dalam suatu tabel
INSERT INTO products (name, description, category, price, inventory_quantity)
VALUES ('Wireless Earbuds', 'Bluetooth Earphones with Charging Case', 'Electronics', 59.99, 80);

-- update harga dari produk dengan product_id = 3
UPDATE products
SET price = 69.99
WHERE product_id = 3;

-- hapus produk dengan product_id = 10
DELETE FROM products
WHERE product_id = 10;"
B77zB7LG,Untitled,yash123321,JSON,Wednesday 27th of March 2024 11:56:41 PM CDT,"{
  ""customerUuid"" : ""QILBSa_gTmC8o4IfLEBnq_18Vl3QZGg_MZ01luiBvJI"",
  ""vehicleInformation"" : {
    ""vin"" : ""WP1AE2AY4LDA22732"",
    ""vehicleKey"" : ""LDA22732"",
    ""vehicleUuid"" : ""h1umuMD2l25rhTpFx0Z2xFZvdWKq3-_3mKa0eMc7Jyg""
  },
  ""appointmentInformation"" : {
    ""appointmentStartDateTime"" : ""2024-04-03T08:30:00"",
    ""appointmentEndDateTime"" : null,
    ""shouldAutoComputeSlot"" : null,
    ""trasportOption"" : {
      ""altTransportation"" : null,
      ""transportation"" : ""Loaner"",
      ""transportOptionUuid"" : null,
      ""bookingID"" : null,
      ""bookInThirdParty"" : null
    },
    ""transportOption"" : null,
    ""assignedUser"" : {
      ""uuid"" : ""6d3a066f45b7005a9d30982f412888cfa2f7df96d790e144cb78490280baf296"",
      ""deptUUID"" : ""da3bf15cc9f75ab6dcebcfb19fa6c551a0f884a6936d5911438f4ccf70508012"",
      ""teamUuid"" : null
    },
    ""creatorUser"" : null,
    ""appointmentKey"" : ""2051949931407"",
    ""mileageText"" : null,
    ""comments"" : null,
    ""internalNotes"" : null,
    ""serviceList"" : [ {
      ""title"" : ""WNN1"",
      ""description"" : ""Supply Porsche Mobile Charger operating instructions"",
      ""price"" : null,
      ""laborTotal"" : null,
      ""partsTotal"" : null,
      ""shopFees"" : null,
      ""taxes"" : null,
      ""payType"" : ""CP"",
      ""sortOrder"" : 4,
      ""recallID"" : null,
      ""parentTitle"" : null,
      ""menuUuid"" : null,
      ""laborOpCode"" : null,
      ""operationType"" : null,
      ""operationUuid"" : null,
      ""isCustomConcern"" : null,
      ""durationInMins"" : null,
      ""parentOpcodeUuid"" : null
    }, {
      ""title"" : ""00SAZFREE"",
      ""description"" : ""MULTI-POINT INSPECTION"",
      ""price"" : null,
      ""laborTotal"" : null,
      ""partsTotal"" : null,
      ""shopFees"" : null,
      ""taxes"" : null,
      ""payType"" : ""CP"",
      ""sortOrder"" : 5,
      ""recallID"" : null,
      ""parentTitle"" : null,
      ""menuUuid"" : null,
      ""laborOpCode"" : null,
      ""operationType"" : null,
      ""operationUuid"" : null,
      ""isCustomConcern"" : null,
      ""durationInMins"" : null,
      ""parentOpcodeUuid"" : null
    }, {
      ""title"" : ""LOANER"",
      ""description"" : ""LOANER"",
      ""price"" : null,
      ""laborTotal"" : null,
      ""partsTotal"" : null,
      ""shopFees"" : null,
      ""taxes"" : null,
      ""payType"" : ""CP"",
      ""sortOrder"" : 6,
      ""recallID"" : null,
      ""parentTitle"" : null,
      ""menuUuid"" : null,
      ""laborOpCode"" : null,
      ""operationType"" : null,
      ""operationUuid"" : null,
      ""isCustomConcern"" : null,
      ""durationInMins"" : null,
      ""parentOpcodeUuid"" : null
    }, {
      ""title"" : ""01"",
      ""description"" : ""2 horthon pl"",
      ""price"" : null,
      ""laborTotal"" : null,
      ""partsTotal"" : null,
      ""shopFees"" : null,
      ""taxes"" : null,
      ""payType"" : ""CP"",
      ""sortOrder"" : 7,
      ""recallID"" : null,
      ""parentTitle"" : null,
      ""menuUuid"" : null,
      ""laborOpCode"" : null,
      ""operationType"" : null,
      ""operationUuid"" : null,
      ""isCustomConcern"" : null,
      ""durationInMins"" : null,
      ""parentOpcodeUuid"" : null
    }, {
      ""title"" : ""01"",
      ""description"" : ""RECOMMENDED MAINT"",
      ""price"" : null,
      ""laborTotal"" : null,
      ""partsTotal"" : null,
      ""shopFees"" : null,
      ""taxes"" : null,
      ""payType"" : ""CP"",
      ""sortOrder"" : 1,
      ""recallID"" : null,
      ""parentTitle"" : null,
      ""menuUuid"" : null,
      ""laborOpCode"" : null,
      ""operationType"" : null,
      ""operationUuid"" : null,
      ""isCustomConcern"" : null,
      ""durationInMins"" : null,
      ""parentOpcodeUuid"" : null
    }, {
      ""title"" : ""APB6"",
      ""description"" : ""Charging cable for Porsche Mobile Charger with NEMA power plug"",
      ""price"" : null,
      ""laborTotal"" : null,
      ""partsTotal"" : null,
      ""shopFees"" : null,
      ""taxes"" : null,
      ""payType"" : ""CP"",
      ""sortOrder"" : 2,
      ""recallID"" : null,
      ""parentTitle"" : null,
      ""menuUuid"" : null,
      ""laborOpCode"" : null,
      ""operationType"" : null,
      ""operationUuid"" : null,
      ""isCustomConcern"" : null,
      ""durationInMins"" : null,
      ""parentOpcodeUuid"" : null
    }, {
      ""title"" : ""WPR0"",
      ""description"" : ""Re-code thermal management control unit"",
      ""price"" : null,
      ""laborTotal"" : null,
      ""partsTotal"" : null,
      ""shopFees"" : null,
      ""taxes"" : null,
      ""payType"" : ""CP"",
      ""sortOrder"" : 3,
      ""recallID"" : null,
      ""parentTitle"" : null,
      ""menuUuid"" : null,
      ""laborOpCode"" : null,
      ""operationType"" : null,
      ""operationUuid"" : null,
      ""isCustomConcern"" : null,
      ""durationInMins"" : null,
      ""parentOpcodeUuid"" : null
    } ],
    ""customerAppointmentPreference"" : {
      ""emailConfirmation"" : false,
      ""textConfirmation"" : true,
      ""emailReminder"" : true,
      ""textReminder"" : true,
      ""confirmationEmail"" : null,
      ""confirmationPhoneNumber"" : null,
      ""notifyCustomer"" : false,
      ""sendCommunicationToDA"" : false
    },
    ""status"" : ""UPDATED"",
    ""recall"" : null,
    ""reminderCount"" : 0,
    ""isOverridden"" : null,
    ""pushToDms"" : false,
    ""draftUuid"" : null,
    ""pdrToOpcodes"" : null,
    ""sarCheckinDataDTO"" : null,
    ""pickupDeliveryTripEvent"" : null,
    ""sdSessionId"" : null
  },
  ""appointmentMetaData"" : null
}"
rMyxGfCK,News March27 24,Newscaster_Ned,Email,Wednesday 27th of March 2024 11:53:47 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎,‎ ‎y‎o‎u‎ ‎d‎u‎n‎e‎ ‎c‎o‎o‎n‎s‎.‎

A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎E‎v‎e‎n‎t‎ ‎a‎t‎ ‎C‎o‎l‎u‎m‎b‎i‎a‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎ ‎F‎e‎a‎t‎u‎r‎e‎d‎ ‎S‎p‎e‎a‎k‎e‎r‎s‎ ‎W‎h‎o‎ ‎P‎r‎a‎i‎s‎e‎d‎ ‎H‎a‎m‎a‎s‎
S‎c‎o‎t‎t‎:‎ ‎T‎h‎o‎s‎e‎ ‎C‎a‎l‎l‎i‎n‎g‎ ‎M‎e‎ ‎D‎E‎I‎ ‎M‎a‎y‎o‎r‎ ‎'‎D‎o‎n‎’‎t‎ ‎H‎a‎v‎e‎ ‎t‎h‎e‎ ‎C‎o‎u‎r‎a‎g‎e‎ ‎t‎o‎ ‎S‎a‎y‎ ‎N‎-‎W‎o‎r‎d‎'‎
M‎a‎r‎l‎o‎w‎:‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎ ‎D‎e‎b‎a‎c‎l‎e‎ ‎E‎x‎p‎o‎s‎e‎s‎ ‎'‎F‎a‎s‎c‎i‎s‎t‎s‎'‎ ‎a‎t‎ ‎M‎S‎N‎B‎C‎,‎ ‎N‎B‎C‎
K‎h‎a‎n‎n‎a‎:‎ ‎B‎i‎d‎e‎n‎ ‎I‎m‎p‎r‎o‎v‎i‎n‎g‎ ‎i‎n‎ ‎P‎o‎l‎l‎s‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎H‎e‎ ‎L‎e‎t‎ ‎C‎e‎a‎s‎e‎f‎i‎r‎e‎ ‎R‎e‎s‎o‎l‎u‎t‎i‎o‎n‎ ‎P‎a‎s‎s‎
P‎A‎:‎ ‎C‎o‎u‎r‎t‎ ‎R‎u‎l‎e‎s‎ ‎i‎n‎ ‎F‎a‎v‎o‎r‎ ‎o‎f‎ ‎S‎i‎g‎n‎a‎t‎u‎r‎e‎ ‎V‎e‎r‎i‎f‎i‎c‎a‎t‎i‎o‎n‎ ‎f‎o‎r‎ ‎M‎a‎i‎l‎-‎I‎n‎ ‎V‎o‎t‎i‎n‎g‎
R‎u‎s‎s‎i‎a‎ ‎S‎t‎r‎u‎g‎g‎l‎e‎s‎ ‎t‎o‎ ‎C‎o‎l‎l‎e‎c‎t‎ ‎O‎i‎l‎ ‎P‎a‎y‎m‎e‎n‎t‎s‎ ‎f‎r‎o‎m‎ ‎C‎h‎i‎n‎e‎s‎e‎,‎ ‎T‎u‎r‎k‎i‎s‎h‎ ‎C‎l‎i‎e‎n‎t‎s‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
J‎o‎e‎ ‎L‎i‎e‎b‎e‎r‎m‎a‎n‎ ‎D‎i‎e‎s‎ ‎a‎t‎ ‎8‎2‎

F‎o‎r‎m‎e‎r‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎V‎P‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎-‎t‎u‎r‎n‎e‎d‎-‎I‎n‎d‎e‎p‎e‎n‎d‎e‎n‎t‎,‎ ‎J‎e‎w‎i‎s‎h‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎H‎e‎r‎o‎

L‎e‎v‎i‎n‎:‎ ‎’‎T‎h‎e‎ ‎L‎a‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎M‎o‎d‎e‎r‎a‎t‎e‎s‎’‎
F‎o‎r‎m‎e‎r‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎i‎c‎ ‎v‎i‎c‎e‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎,‎ ‎f‎o‎r‎m‎e‎r‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎c‎u‎t‎ ‎S‎e‎n‎.‎ ‎J‎o‎e‎ ‎L‎i‎e‎b‎e‎r‎m‎a‎n‎,‎ ‎a‎n‎ ‎N‎
F‎o‎r‎m‎e‎r‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎i‎c‎ ‎v‎i‎c‎e‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎n‎o‎m‎i‎n‎e‎e‎ ‎a‎n‎d‎ ‎U‎.‎S‎.‎ ‎S‎e‎n‎a‎t‎o‎r‎ ‎J‎o‎e‎ ‎L‎i‎e‎b‎e‎r‎m‎a‎n‎ ‎d‎i‎e‎d‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎ ‎a‎t‎ ‎t‎h‎e‎ ‎a‎g‎e‎ ‎o‎f‎ ‎8‎2‎ ‎d‎u‎e‎ ‎t‎o‎ ‎c‎o‎m‎p‎l‎i‎c‎a‎t‎i‎o‎n‎s‎ ‎f‎r‎o‎m‎ ‎a‎ ‎f‎a‎l‎l‎,‎ ‎a‎c‎c‎o‎r‎d‎i‎n‎g‎ ‎t‎o‎ ‎h‎i‎s‎ ‎f‎a‎m‎i‎l‎y‎.‎

T‎r‎u‎m‎p‎ ‎M‎e‎d‎i‎a‎ ‎S‎h‎a‎r‎e‎s‎ ‎S‎u‎r‎g‎e‎ ‎A‎g‎a‎i‎n‎
T‎r‎u‎m‎p‎ ‎M‎e‎d‎i‎a‎ ‎S‎h‎a‎r‎e‎s‎ ‎S‎u‎r‎g‎e‎ ‎A‎g‎a‎i‎n‎
1‎,‎0‎9‎6‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎:‎ ‎G‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎W‎i‎l‎l‎ ‎P‎a‎y‎ ‎‘‎E‎n‎t‎i‎r‎e‎ ‎C‎o‎s‎t‎’‎ ‎o‎f‎ ‎R‎e‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎B‎a‎l‎t‎i‎m‎o‎r‎e‎ ‎B‎r‎i‎d‎g‎e‎
J‎o‎e‎ ‎B‎i‎d‎e‎n‎:‎ ‎G‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎W‎i‎l‎l‎ ‎P‎a‎y‎ ‎'‎E‎n‎t‎i‎r‎e‎ ‎C‎o‎s‎t‎'‎ ‎o‎f‎ ‎R‎e‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎B‎a‎l‎t‎i‎m‎o‎r‎e‎ ‎B‎r‎i‎d‎g‎e‎
1‎1‎,‎4‎5‎3‎
J‎o‎e‎ ‎L‎i‎e‎b‎e‎r‎m‎a‎n‎ ‎D‎i‎e‎s‎ ‎a‎t‎ ‎8‎2‎;‎ ‎F‎o‎r‎m‎e‎r‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎V‎P‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎-‎t‎u‎r‎n‎e‎d‎-‎I‎n‎d‎e‎p‎e‎n‎d‎e‎n‎t‎,‎ ‎J‎e‎w‎i‎s‎h‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎H‎e‎r‎o‎;‎ ‎&‎
J‎o‎e‎ ‎L‎i‎e‎b‎e‎r‎m‎a‎n‎ ‎D‎i‎e‎s‎ ‎a‎t‎ ‎8‎2‎;‎ ‎F‎o‎r‎m‎e‎r‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎V‎P‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎-‎t‎u‎r‎n‎e‎d‎-‎I‎n‎d‎e‎p‎e‎n‎d‎e‎n‎t‎
3‎,‎8‎0‎8‎
R‎e‎p‎o‎r‎t‎:‎ ‎J‎o‎n‎ ‎S‎t‎e‎w‎a‎r‎t‎ ‎F‎o‎u‎n‎d‎ ‎t‎o‎ ‎H‎a‎v‎e‎ ‎O‎v‎e‎r‎v‎a‎l‎u‎e‎d‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎H‎o‎m‎e‎ ‎A‎f‎t‎e‎r‎ ‎A‎c‎c‎u‎s‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎ ‎o‎f‎ ‎‘‎L‎y‎i‎n‎g‎&‎#‎8‎2‎
J‎o‎n‎ ‎S‎t‎e‎w‎a‎r‎t‎ ‎F‎o‎u‎n‎d‎ ‎t‎o‎ ‎H‎a‎v‎e‎ ‎O‎v‎e‎r‎v‎a‎l‎u‎e‎d‎ ‎N‎Y‎ ‎H‎o‎m‎e‎ ‎a‎f‎t‎e‎r‎ ‎M‎o‎c‎k‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎
1‎,‎5‎3‎2‎
M‎S‎N‎B‎C‎ ‎R‎e‎i‎d‎:‎ ‎G‎O‎P‎ ‎I‎s‎ ‎A‎n‎t‎i‎-‎D‎E‎I‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎T‎h‎e‎y‎ ‎‘‎C‎a‎n‎’‎t‎ ‎S‎t‎a‎n‎d‎ ‎B‎l‎a‎c‎k‎ ‎P‎e‎o‎p‎l‎e‎’‎
M‎S‎N‎B‎C‎ ‎R‎e‎i‎d‎:‎ ‎G‎O‎P‎ ‎I‎s‎ ‎A‎n‎t‎i‎-‎D‎E‎I‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎T‎h‎e‎y‎ ‎'‎C‎a‎n‎'‎t‎ ‎S‎t‎a‎n‎d‎ ‎B‎l‎a‎c‎k‎ ‎P‎e‎o‎p‎l‎e‎'‎
9‎2‎4‎
B‎u‎t‎t‎i‎g‎i‎e‎g‎:‎ ‎W‎e‎ ‎H‎a‎v‎e‎ ‎t‎o‎ ‎‘‎T‎e‎a‎r‎ ‎D‎o‎w‎n‎ ‎A‎n‎y‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎v‎e‎ ‎B‎a‎r‎r‎i‎e‎r‎s‎’‎ ‎t‎o‎ ‎R‎e‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎M‎D‎ ‎B‎r‎i‎d‎g‎e‎
B‎u‎t‎t‎i‎g‎i‎e‎g‎:‎ ‎M‎u‎s‎t‎ ‎'‎T‎e‎a‎r‎ ‎D‎o‎w‎n‎ ‎A‎n‎y‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎v‎e‎ ‎B‎a‎r‎r‎i‎e‎r‎s‎'‎ ‎t‎o‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎B‎r‎i‎d‎g‎e‎
8‎0‎
‘‎M‎a‎s‎s‎ ‎C‎a‎s‎u‎a‎l‎t‎y‎ ‎E‎v‎e‎n‎t‎’‎:‎ ‎1‎.‎6‎ ‎M‎i‎l‎e‎ ‎B‎a‎l‎t‎i‎m‎o‎r‎e‎ ‎B‎r‎i‎d‎g‎e‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎S‎t‎r‎u‎c‎k‎ ‎b‎y‎ ‎C‎a‎r‎g‎o‎ ‎
'‎M‎a‎s‎s‎ ‎C‎a‎s‎u‎a‎l‎t‎y‎ ‎E‎v‎e‎n‎t‎'‎:‎ ‎B‎a‎l‎t‎i‎m‎o‎r‎e‎ ‎B‎r‎i‎d‎g‎e‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎s‎,‎ ‎H‎i‎t‎ ‎b‎y‎ ‎C‎a‎r‎g‎o‎ ‎S‎h‎i‎p‎
9‎,‎4‎3‎1‎
U‎.‎N‎.‎ ‎C‎h‎i‎e‎f‎ ‎D‎e‎m‎a‎n‎d‎s‎ ‎S‎l‎a‎v‎e‎r‎y‎ ‎R‎e‎p‎a‎r‎a‎t‎i‎o‎n‎s‎ ‎A‎f‎t‎e‎r‎ ‎‘‎G‎e‎n‎e‎r‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎D‎i‎s‎c‎r‎i‎m‎i‎n‎a‎t‎i‎o‎n‎’‎
U‎.‎N‎.‎ ‎C‎h‎i‎e‎f‎ ‎D‎e‎m‎a‎n‎d‎s‎ ‎S‎l‎a‎v‎e‎r‎y‎ ‎R‎e‎p‎a‎r‎a‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎‘‎G‎e‎n‎e‎r‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎D‎i‎s‎c‎r‎i‎m‎i‎n‎a‎t‎i‎o‎n‎'‎
3‎,‎9‎7‎1‎
M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎A‎d‎v‎o‎c‎a‎t‎e‎s‎ ‎U‎s‎e‎ ‎B‎r‎i‎d‎g‎e‎ ‎D‎e‎a‎t‎h‎s‎ ‎t‎o‎ ‎P‎u‎s‎h‎ ‎f‎o‎r‎ ‎M‎o‎r‎e‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎
M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎A‎d‎v‎o‎c‎a‎t‎e‎s‎ ‎U‎s‎e‎ ‎B‎r‎i‎d‎g‎e‎ ‎D‎e‎a‎t‎h‎s‎ ‎t‎o‎ ‎P‎u‎s‎h‎ ‎f‎o‎r‎ ‎M‎o‎r‎e‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎
2‎8‎7‎
V‎I‎D‎E‎O‎:‎ ‎T‎e‎a‎m‎s‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎P‎e‎o‎p‎l‎e‎ ‎W‎h‎o‎ ‎F‎e‎l‎l‎ ‎i‎n‎t‎o‎ ‎R‎i‎v‎e‎r‎ ‎A‎f‎t‎e‎r‎ ‎B‎a‎l‎t‎i‎m‎o‎r‎e‎ ‎B‎r‎i‎d‎g‎e‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎
V‎I‎D‎E‎O‎:‎ ‎S‎e‎a‎r‎c‎h‎ ‎U‎n‎d‎e‎r‎w‎a‎y‎ ‎f‎o‎r‎ ‎V‎i‎c‎t‎i‎m‎s‎ ‎o‎f‎ ‎B‎a‎l‎t‎i‎m‎o‎r‎e‎ ‎B‎r‎i‎d‎g‎e‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎

2‎ ‎N‎e‎g‎r‎o‎ ‎F‎a‎g‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎A‎s‎s‎ ‎R‎a‎p‎i‎n‎g‎ ‎o‎f‎ ‎Y‎o‎u‎n‎g‎ ‎B‎o‎y‎ ‎a‎t‎ ‎H‎a‎z‎e‎l‎w‎o‎o‎d‎ ‎S‎c‎h‎o‎o‎l‎ ‎D‎i‎s‎t‎r‎i‎c‎t‎.‎

O‎h‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎y‎ ‎p‎a‎i‎d‎ ‎t‎o‎ ‎g‎e‎t‎ ‎t‎h‎e‎ ‎k‎i‎d‎ ‎k‎i‎l‎l‎e‎d‎.‎


B‎a‎l‎d‎i‎n‎g‎ ‎N‎e‎g‎r‎o‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎R‎a‎p‎e‎ ‎i‎n‎ ‎E‎d‎g‎e‎h‎i‎l‎l‎.‎


P‎o‎l‎i‎c‎e‎ ‎S‎e‎i‎z‎e‎ ‎$‎4‎9‎M‎ ‎o‎f‎ ‎H‎e‎r‎o‎i‎n‎/‎F‎e‎n‎t‎a‎n‎y‎l‎ ‎f‎r‎o‎m‎ ‎S‎p‎i‎c‎ ‎G‎a‎n‎g‎.‎


S‎p‎i‎c‎ ‎B‎a‎r‎t‎e‎n‎d‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎R‎a‎p‎i‎n‎g‎ ‎G‎u‎e‎s‎t‎ ‎a‎t‎ ‎P‎a‎l‎m‎ ‎S‎p‎r‎i‎n‎g‎s‎ ‎H‎o‎t‎e‎l‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

 ‎
W‎e‎d‎ ‎2‎7‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎3‎°‎
1‎5‎%‎
S‎S‎W‎
6‎
 ‎
m‎p‎h‎
A‎ ‎s‎t‎r‎a‎y‎ ‎s‎h‎o‎w‎e‎r‎ ‎o‎r‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎ ‎i‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎e‎a‎r‎l‎y‎.‎ ‎P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎4‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
9‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎0‎:‎1‎0‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎3‎3‎ ‎a‎m‎
T‎h‎u‎ ‎2‎8‎
S‎u‎n‎n‎y‎
7‎8‎°‎
/‎5‎5‎°‎
8‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎1‎°‎
9‎%‎
S‎ ‎1‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎6‎3‎°‎
8‎%‎
S‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎1‎
C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎8‎°‎
1‎3‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎1‎
C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎6‎2‎°‎
8‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎7‎°‎
/‎5‎0‎°‎
1‎4‎%‎
N‎ ‎1‎5‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎3‎
S‎u‎n‎n‎y‎
7‎1‎°‎
/‎4‎6‎°‎
1‎3‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎4‎
S‎u‎n‎n‎y‎
7‎3‎°‎
/‎4‎8‎°‎
9‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎5‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎8‎°‎
/‎5‎7‎°‎
6‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎4‎°‎
2‎4‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎7‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎1‎°‎
/‎6‎2‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎8‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎1‎°‎
/‎6‎2‎°‎
3‎9‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎9‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎1‎°‎
2‎4‎%‎
E‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎0‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎9‎°‎
/‎6‎1‎°‎
3‎2‎%‎
E‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎P‎a‎k‎i‎ ‎H‎a‎c‎k‎e‎r‎s‎.‎ ‎🧔🏾‍♂️

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎o‎m‎i‎c‎
C‎o‎m‎i‎c‎s‎.‎.‎.‎ ‎M‎o‎s‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎o‎u‎l‎d‎ ‎a‎g‎r‎e‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎""‎L‎i‎t‎e‎r‎a‎t‎u‎r‎e‎""‎ ‎f‎o‎r‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎ ‎a‎n‎d‎ ‎g‎e‎e‎k‎s‎/‎n‎e‎r‎d‎s‎.‎ ‎R‎e‎m‎e‎m‎b‎e‎r‎,‎ ‎i‎f‎ ‎y‎o‎u‎ ‎g‎e‎t‎ ‎s‎t‎u‎c‎k‎ ‎o‎n‎ ‎t‎h‎e‎ ‎w‎o‎r‎d‎s‎,‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎a‎l‎w‎a‎y‎s‎ ‎j‎u‎s‎t‎ ‎l‎o‎o‎k‎ ‎a‎t‎ ‎t‎h‎e‎ ‎p‎i‎c‎t‎u‎r‎e‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎y‎ ‎m‎i‎g‎h‎t‎ ‎e‎v‎e‎n‎ ‎h‎e‎l‎p‎ ‎y‎o‎u‎ ‎w‎o‎r‎k‎ ‎o‎u‎t‎ ‎w‎h‎a‎t‎'‎s‎ ‎g‎o‎i‎n‎g‎ ‎o‎n‎.‎ ‎I‎f‎ ‎y‎o‎u‎'‎r‎e‎ ‎r‎e‎a‎l‎l‎y‎ ‎l‎u‎c‎k‎y‎ ‎-‎ ‎t‎h‎e‎r‎e‎ ‎m‎i‎g‎h‎t‎ ‎e‎v‎e‎n‎ ‎b‎e‎ ‎p‎i‎c‎t‎u‎r‎e‎s‎ ‎o‎f‎ ‎t‎i‎t‎s‎.‎

C‎o‎m‎i‎c‎s‎,‎ ‎l‎i‎k‎e‎ ‎h‎u‎m‎a‎n‎ ‎b‎o‎d‎i‎e‎s‎,‎ ‎c‎o‎m‎e‎ ‎i‎n‎ ‎m‎a‎n‎y‎ ‎s‎h‎a‎p‎e‎s‎ ‎a‎n‎d‎ ‎s‎i‎z‎e‎s‎ ‎e‎r‎,‎ ‎t‎y‎p‎e‎s‎ ‎a‎n‎d‎ ‎f‎o‎r‎m‎a‎t‎s‎,‎ ‎a‎n‎d‎ ‎h‎e‎r‎e‎ ‎a‎t‎ ‎E‎D‎,‎ ‎w‎e‎ ‎a‎r‎e‎ ‎p‎r‎o‎u‎d‎ ‎t‎o‎ ‎p‎r‎o‎v‎i‎d‎e‎ ‎t‎h‎e‎ ‎f‎r‎e‎e‎ ‎p‎u‎b‎l‎i‎c‎ ‎s‎e‎r‎v‎i‎c‎e‎ ‎o‎f‎ ‎e‎x‎p‎l‎a‎i‎n‎i‎n‎g‎ ‎t‎h‎e‎s‎e‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎c‎o‎m‎i‎c‎ ‎f‎o‎r‎m‎a‎t‎s‎ ‎t‎o‎ ‎y‎o‎u‎.‎ ‎S‎o‎ ‎p‎a‎y‎ ‎a‎t‎t‎e‎n‎t‎i‎o‎n‎,‎ ‎y‎o‎u‎ ‎a‎b‎s‎o‎l‎u‎t‎e‎ ‎P‎l‎e‎b‎i‎a‎n‎.‎


(‎(‎ ‎M‎A‎Y‎ ‎6‎T‎H‎ ‎I‎S‎ ‎""‎F‎R‎E‎E‎ ‎C‎O‎M‎I‎C‎ ‎B‎O‎O‎K‎ ‎D‎A‎Y‎""‎ ‎W‎O‎R‎L‎D‎W‎I‎D‎E‎,‎ ‎M‎Y‎ ‎D‎U‎D‎E‎S‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎B‎ü‎n‎t‎i‎n‎g‎ ‎c‎l‎o‎v‎e‎r‎l‎e‎a‎f‎ ‎m‎a‎p‎ ‎i‎s‎ ‎a‎ ‎h‎i‎s‎t‎o‎r‎i‎c‎ ‎m‎a‎p‎p‎a‎ ‎m‎u‎n‎d‎i‎ ‎d‎r‎a‎w‎n‎ ‎b‎y‎ ‎t‎h‎e‎ ‎G‎e‎r‎m‎a‎n‎ ‎t‎h‎e‎o‎l‎o‎g‎i‎a‎n‎ ‎a‎n‎d‎ ‎c‎a‎r‎t‎o‎g‎r‎a‎p‎h‎e‎r‎ ‎H‎e‎i‎n‎r‎i‎c‎h‎ ‎B‎ü‎n‎t‎i‎n‎g‎.‎ ‎T‎h‎e‎ ‎m‎a‎p‎ ‎w‎a‎s‎ ‎p‎u‎b‎l‎i‎s‎h‎e‎d‎ ‎i‎n‎ ‎h‎i‎s‎ ‎b‎o‎o‎k‎ ‎I‎t‎i‎n‎e‎r‎a‎r‎i‎u‎m‎ ‎S‎a‎c‎r‎a‎e‎ ‎S‎c‎r‎i‎p‎t‎u‎r‎a‎e‎ ‎i‎n‎ ‎1‎5‎8‎1‎.‎ ‎T‎h‎e‎ ‎m‎a‎p‎ ‎d‎e‎p‎i‎c‎t‎s‎ ‎t‎h‎e‎ ‎t‎h‎r‎e‎e‎ ‎c‎o‎n‎t‎i‎n‎e‎n‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎O‎l‎d‎ ‎W‎o‎r‎l‎d‎,‎ ‎E‎u‎r‎o‎p‎e‎,‎ ‎A‎f‎r‎i‎c‎a‎ ‎a‎n‎d‎ ‎A‎s‎i‎a‎,‎ ‎a‎s‎ ‎t‎h‎r‎e‎e‎ ‎l‎e‎a‎v‎e‎s‎ ‎f‎o‎r‎m‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎h‎a‎p‎e‎ ‎o‎f‎ ‎a‎ ‎c‎l‎o‎v‎e‎r‎,‎ ‎w‎i‎t‎h‎ ‎J‎e‎r‎u‎s‎a‎l‎e‎m‎ ‎a‎t‎ ‎t‎h‎e‎ ‎c‎e‎n‎t‎r‎e‎.‎ ‎T‎h‎e‎ ‎t‎h‎r‎e‎e‎ ‎c‎o‎n‎t‎i‎n‎e‎n‎t‎s‎ ‎i‎n‎c‎l‎u‎d‎e‎ ‎c‎a‎p‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎s‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎c‎o‎u‎n‎t‎r‎i‎e‎s‎ ‎a‎n‎d‎ ‎i‎l‎l‎u‎s‎t‎r‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎c‎i‎t‎i‎e‎s‎.‎ ‎T‎h‎e‎ ‎c‎l‎o‎v‎e‎r‎ ‎i‎s‎ ‎s‎u‎r‎r‎o‎u‎n‎d‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎o‎c‎e‎a‎n‎,‎ ‎w‎i‎t‎h‎ ‎i‎t‎s‎ ‎s‎u‎r‎f‎a‎c‎e‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎i‎l‎l‎u‎s‎t‎r‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎s‎e‎a‎ ‎c‎r‎e‎a‎t‎u‎r‎e‎s‎,‎ ‎m‎o‎n‎s‎t‎e‎r‎s‎,‎ ‎a‎n‎d‎ ‎a‎ ‎s‎h‎i‎p‎.‎ ‎E‎n‎g‎l‎a‎n‎d‎ ‎a‎n‎d‎ ‎D‎e‎n‎m‎a‎r‎k‎ ‎a‎r‎e‎ ‎r‎e‎p‎r‎e‎s‎e‎n‎t‎e‎d‎ ‎a‎s‎ ‎t‎w‎o‎ ‎i‎s‎l‎a‎n‎d‎-‎s‎h‎a‎p‎e‎s‎ ‎a‎b‎o‎v‎e‎ ‎E‎u‎r‎o‎p‎e‎'‎s‎ ‎l‎e‎a‎f‎,‎ ‎w‎h‎i‎l‎e‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎s‎ ‎a‎r‎e‎ ‎s‎h‎o‎w‎n‎ ‎a‎s‎ ‎a‎ ‎m‎o‎s‎t‎l‎y‎ ‎u‎n‎r‎e‎v‎e‎a‎l‎e‎d‎ ‎s‎h‎a‎p‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎l‎o‎w‎e‎r‎ ‎l‎e‎f‎t‎ ‎c‎o‎r‎n‎e‎r‎,‎ ‎c‎a‎p‎t‎i‎o‎n‎e‎d‎ ‎D‎i‎e‎ ‎N‎e‎u‎e‎ ‎W‎e‎l‎t‎ ‎(‎t‎h‎e‎ ‎N‎e‎w‎ ‎W‎o‎r‎l‎d‎)‎.‎

M‎a‎p‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎H‎e‎i‎n‎r‎i‎c‎h‎ ‎B‎ü‎n‎t‎i‎n‎g‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎n‎o‎w‎ ‎g‎o‎ ‎f‎u‎c‎k‎ ‎s‎o‎m‎e‎ ‎d‎e‎a‎d‎ ‎s‎q‎u‎i‎r‎r‎e‎l‎s‎.‎"
u7kFkNFB,Ferramentas Rápidas,MizunoBrasil,HTML,Wednesday 27th of March 2024 11:36:36 PM CDT,"<!DOCTYPE html>
<html lang=""pt"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Ferramentas rápidas para manipulação de imagens</title>
    <link href=""https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap"" rel=""stylesheet"">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 600px;
            margin: auto;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            font-size: 24px;
            text-align: center;
        }
        .links {
            list-style: none;
            padding: 0;
        }
        .links li {
            margin: 10px 0;
        }
        .links a {
            text-decoration: none;
            color: #007bff;
            font-weight: 600;
        }
        .links a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class=""container"">
        <h1>Ferramentas rápidas</h1>
        <br>
        <ul class=""links"">
            <!-- Adicione mais <li><a href=""caminho_para_seu_arquivo.html"">Nome do Link</a></li> conforme necessário -->
            <li><a href=""redimensiona.php"">Redimensionar Imagem</a></li>
            <li><a href=""https://imagecompressor.11zon.com/en/compress-jpeg/compress-jpeg-to-200kb"" target=""_blank"">Compress JPEG to 200KB</a></li>
            <li><a href=""conversor-de-imagem.html"">Conversor de extensão de imagem .webp para .jpg</a></li>
             <li><a href=""https://maislegal.com.br/renomear-arquivo/"" target=""_blank"">Renomear arquivo de imagem</a></li>
             <li><a href=""https://maislegal.com.br/data/"" target=""_blank"">Renomear arquivo de imagem e Inserir Carimbo de Data</a></li>
             <li><a href=""texto-em-foto"" target=""_blank"">Renomear arquivo de imagem e Inserir descrição na imagem</a></li>
             <li><a href=""texto-com-quebra-de-linha"">Inserir descrição com quebra de linha na imagem</a></li>
             <li><a href=""sai-paywall.html"" target=""_blank"">Anti-PayWall</a></li>
              <li><a href=""https://maislegal.com.br/ferramentas/minusculo-maiusculo.html"" target=""_blank"">Conversor de Texto minusculo-maiusculo</a></li>
             <!--<li><a href=""blur.html"" target=""_blank"">Aplicar efeito BLUR em parte da Imagem</a></li>-->
        </ul>
    </div>
</body>
</html>
"
TNdUi8Cu,Mad,Unknown_No_1,PHP,Wednesday 27th of March 2024 11:07:23 PM CDT,UpdateComingSoonToPubgLITE
5hAJjcEh,Roblox IP Geolocation converter for Lua Sandbox,scriptingtales,Lua,Wednesday 27th of March 2024 10:32:29 PM CDT,"Part0 = Instance.new(""Part"")
SurfaceGui1 = Instance.new(""SurfaceGui"")
Frame2 = Instance.new(""Frame"")
TextLabel3 = Instance.new(""TextLabel"")

TextLabel5 = Instance.new(""TextLabel"")
TextBox6 = Instance.new(""TextBox"")
TextLabel7 = Instance.new(""TextLabel"")
TextButton8 = Instance.new(""TextButton"")


	
	
Part0.Name = ""IP""
Part0.Parent = script
Part0.CFrame = CFrame.new(0, 5.99999714, -32.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)
Part0.Position = Vector3.new(0, 5.999997138977051, -32.5)
Part0.Size = Vector3.new(18, 12, 1)
Part0.Anchored = true
Part0.BackSurface = Enum.SurfaceType.Studs
Part0.BottomSurface = Enum.SurfaceType.Studs
Part0.FrontSurface = Enum.SurfaceType.Studs
Part0.LeftSurface = Enum.SurfaceType.Studs
Part0.RightSurface = Enum.SurfaceType.Studs
SurfaceGui1.Parent = Part0
SurfaceGui1.ClipsDescendants = true
SurfaceGui1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
SurfaceGui1.Adornee = Part0
Frame2.Parent = SurfaceGui1
Frame2.Size = UDim2.new(0, 900, 0, 600)
Frame2.Active = true
Frame2.BackgroundColor = BrickColor.new(""Institutional white"")
Frame2.BackgroundColor3 = Color3.new(1, 1, 1)
Frame2.BorderColor = BrickColor.new(""Institutional white"")
Frame2.BorderColor3 = Color3.new(1, 1, 1)
Frame2.Draggable = true
Frame2.Selectable = true
TextLabel3.Name = ""FrameLabel""
TextLabel3.Parent = Frame2
TextLabel3.Size = UDim2.new(0, 900, 0, 100)
TextLabel3.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel3.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel3.BorderColor = BrickColor.new(""Institutional white"")
TextLabel3.BorderColor3 = Color3.new(1, 1, 1)
TextLabel3.Font = Enum.Font.SourceSansLight
TextLabel3.FontSize = Enum.FontSize.Size48
TextLabel3.Text = ""IP Geolocation Converter""
TextLabel3.TextColor = BrickColor.new(""Really black"")
TextLabel3.TextColor3 = Color3.new(0, 0, 0)
TextLabel3.TextScaled = true
TextLabel3.TextSize = 38
TextLabel3.TextWrap = true
TextLabel3.TextWrapped = true




Frame2.Selectable = false
Frame2.Active = false
Frame2.Draggable = false


if Frame2.Draggable == false and Frame2.Active == false and Frame2.Selectable == false then
	print(""Yes"")
else
	print(""No"")
end



TextLabel5.Name = ""Credits""
TextLabel5.Parent = Frame2
TextLabel5.Position = UDim2.new(0, 650, 0, 550)
TextLabel5.Size = UDim2.new(0, 250, 0, 50)
TextLabel5.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel5.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel5.BorderColor = BrickColor.new(""Institutional white"")
TextLabel5.BorderColor3 = Color3.new(1, 1, 1)
TextLabel5.Font = Enum.Font.Unknown
TextLabel5.FontSize = Enum.FontSize.Size48
TextLabel5.Text = ""Credits to: Kaiji#7888""
TextLabel5.TextColor = BrickColor.new(""Dark grey"")
TextLabel5.TextColor3 = Color3.new(0.407843, 0.411765, 0.411765)
TextLabel5.TextScaled = true
TextLabel5.TextSize = 38
TextLabel5.TextWrap = true
TextLabel5.TextWrapped = true
TextBox6.Name = ""IpInserter""
TextBox6.Parent = Frame2
TextBox6.Position = UDim2.new(0, 300, 0, 125)
TextBox6.Size = UDim2.new(0, 300, 0, 75)
TextBox6.BackgroundColor = BrickColor.new(""Institutional white"")
TextBox6.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox6.BorderColor = BrickColor.new(""Really black"")
TextBox6.BorderColor3 = Color3.new(0, 0, 0)
TextBox6.BorderSizePixel = 0
TextBox6.Font = Enum.Font.SourceSansLight
TextBox6.FontSize = Enum.FontSize.Size14
TextBox6.Text = """"
TextBox6.TextColor = BrickColor.new(""Really black"")
TextBox6.TextColor3 = Color3.new(0, 0, 0)
TextBox6.TextScaled = true
TextBox6.TextSize = 14
TextBox6.TextWrap = true
TextBox6.TextWrapped = true
TextBox6.PlaceholderText = ""Enter Ip Address...""
TextLabel7.Name = ""ShowLoc""
TextLabel7.Parent = Frame2
TextLabel7.Position = UDim2.new(0, 175, 0, 250)
TextLabel7.Size = UDim2.new(0, 550, 0, 125)
TextLabel7.BackgroundColor = BrickColor.new(""Institutional white"")
TextLabel7.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel7.BorderColor = BrickColor.new(""Institutional white"")
TextLabel7.BorderColor3 = Color3.new(1, 1, 1)
TextLabel7.Font = Enum.Font.SourceSansLight
TextLabel7.FontSize = Enum.FontSize.Size48
TextLabel7.Text = ""Location will show here...""
TextLabel7.TextColor = BrickColor.new(""Really black"")
TextLabel7.TextColor3 = Color3.new(0, 0, 0)
TextLabel7.TextScaled = true
TextLabel7.TextSize = 38
TextLabel7.TextWrap = true
TextLabel7.TextWrapped = true
TextButton8.Name = ""DecodeIP""
TextButton8.Parent = Frame2
TextButton8.Position = UDim2.new(0.36500001, 0, 0.701666653, 0)
TextButton8.Size = UDim2.new(0, 250, 0, 100)
TextButton8.BackgroundColor = BrickColor.new(""Silver flip/flop"")
TextButton8.BackgroundColor3 = Color3.new(0.533333, 0.533333, 0.533333)
TextButton8.Font = Enum.Font.SourceSansLight
TextButton8.FontSize = Enum.FontSize.Size14
TextButton8.Text = ""Get IP Geolocation""
TextButton8.TextColor = BrickColor.new(""Institutional white"")
TextButton8.TextColor3 = Color3.new(1, 1, 1)
TextButton8.TextScaled = true
TextButton8.TextSize = 14
TextButton8.TextWrap = true
TextButton8.TextWrapped = true


RemoteEvent11 = Instance.new(""RemoteEvent"", owner.PlayerGui)

RemoteEvent11:FireClient(owner, TextBox6)
RemoteEvent11.OnServerEvent:Connect(function(p, text)
	TextBox6.Text = text
end)



local function IpAd(ip)
	
	
	local HttpService = game:GetService(""HttpService"")
	local Success, ErrorMessage = pcall(function()
		local Response = HttpService:GetAsync(""http://ip-api.com/json/"".. TextBox6.Text, true)
		local Data = HttpService:JSONDecode(Response)
		local Country= Data.country
		local City = Data.city
		local CountryRegion = Data.region    -- You can change ""timezone"" to ""country"" or ""countryCode""

		if Data.status == ""success"" then
			TextLabel7.Text = Country.."", "".. City.. "" in "".. CountryRegion.. "" region"" --- This tells the location
			RemoteEvent11:FireAllClients(Country)
		end
		
		
		if not TextBox6.Text then
			TextLabel7.Text = ""No Location""
		end
		
	end)
	
	
end	

TextButton8.MouseButton1Up:Connect(IpAd)

NLS([[

local remt = script.Parent.RemoteEvent
remt.OnClientEvent:Connect(function(txt)
    txt.InputChanged:Connect(function()
        remt:FireServer(txt.Text)
    end)
end)

]], owner.PlayerGui)

UICorner0 = Instance.new(""UICorner"")
UICorner1 = Instance.new(""UICorner"")
UIStroke0 = Instance.new(""UIStroke"")

if Part0.Position ~= Vector3.new(0, 6, 22.5) then
	Part0.Position = Vector3.new(0, 6, 22.5)
end

TextLabel5.FontFace.Style = Enum.FontStyle.Italic
TextLabel5.FontFace.Weight = Enum.FontWeight.Light

UICorner0.Parent = TextBox6
UIStroke0.Parent = TextBox6
UIStroke0.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UICorner1.Parent = TextButton8
SurfaceGui1.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud"
5xu3qwxG,Line Follower ESP AMICA + SHIELD,andretafta,Arduino,Wednesday 27th of March 2024 10:14:15 PM CDT," void Stop() {
  // Motor Kiri
  pinMode(5,OUTPUT);
   pinMode(0,OUTPUT);
   analogWrite(5,0);
   analogWrite(0,0);
  // Motor Kanan
  pinMode(4,OUTPUT);
   pinMode(2,OUTPUT);
   analogWrite(4,0);
   analogWrite(2,0);
}

void Forward() {
  pinMode(5,OUTPUT);
   pinMode(0,OUTPUT);
   analogWrite(5,125);
   analogWrite(0,0);
  pinMode(4,OUTPUT);
   pinMode(2,OUTPUT);
   analogWrite(4,125);
   analogWrite(2,0);
}

void Left() {
  pinMode(5,OUTPUT);
   pinMode(0,OUTPUT);
   analogWrite(5,0);
   analogWrite(0,95);
  pinMode(4,OUTPUT);
   pinMode(2,OUTPUT);
   analogWrite(4,95);
   analogWrite(2,0);
}

void Right() {
  pinMode(5,OUTPUT);
   pinMode(0,OUTPUT);
   analogWrite(5,95);
   analogWrite(0,0);
  pinMode(4,OUTPUT);
   pinMode(2,OUTPUT);
   analogWrite(4,0);
   analogWrite(2,95);
}


void setup() {
  pinMode(12, INPUT);
  pinMode(13, INPUT);

}

void loop() {
    if (digitalRead(12) == 1 & digitalRead(13) == 1) {
      Stop();
    }
    if (digitalRead(12) == 0 & digitalRead(13) == 1) {
      Right();
    }
    if (digitalRead(12) == 1 & digitalRead(13) == 0) {
      Left();
    }
    if (digitalRead(12) == 0 & digitalRead(13) == 0) {
      Forward();
    }

} "
zDgZY7Ed,Untitled,dereksir,Java,Wednesday 27th of March 2024 09:21:27 PM CDT,"import org.apache.hc.client5.http.fluent.Request;

public class APIRequest {
    public static void main(final String... args) throws Exception {
        String apiUrl = ""https://api.zenrows.com/v1/?apikey=<YOUR_ZENROWS_API_KEY>&url=https%3A%2F%2Fscrapeme.live%2Fshop%2FPikachu%2F&js_render=true&premium_proxy=true"";
        String response = Request.get(apiUrl)
                .execute().returnContent().asString();

        System.out.println(response);
    }
}"
91JYmWZ9,Multiple Slideshows W/Expandable Images,TheiPhoneFan,HTML,Wednesday 27th of March 2024 08:12:46 PM CDT,"<!-- Created by TheiPhoneFan on 2024-03-27 -->
<!-- Previews 6.0.3, 2022-2024 -->
<!DOCTYPE html>
<html lang=""en"">

<head>
    <link rel=""stylesheet"" href=""../theme/style.css"">
    <link href=""https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,900"" rel=""stylesheet"" type=""text/css"">
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Image Slideshow with Previews</title>
    <style>
        .slideshow-container {
            max-width: 500px;
            position: relative;
            margin: auto;
        }

        .slideshow-container .slideshow-img {
            display: none;
            max-width: 100%;
            height: auto;
        }

        .slideshow-img img {
            border-radius: 16px;
            max-width: 100%;
        }

        .prev, .next {
            cursor: pointer;
            position: absolute;
            top: 50%;
            width: auto;
            margin-top: -22px;
            padding: 16px;
            color: white;
            font-weight: bold;
            font-size: 18px;
            transition: 0.6s ease;
            border-radius: 0 3px 3px 0;
        }

        .prev {
            left: 0;
        }

        .next {
            right: 0;
        }

        .previews-container {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }

        .preview-img {
            width: 85px;
            height: auto;
            margin: 0 5px;
            cursor: pointer;
            border-radius: 12px;
        }

        .active-preview {
            border: 2px solid #6495ED;
        }

        figcaption {
            text-align: center;
        }

        .image-gallery {
            /* The Gallery That Holds The Images */
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 10px;
        }

        .gallery-image {
            /* A pointer cursor will display when you hover over the image */
            cursor: pointer;
        }

        .modal {
            /* The fullscreen popup that shows an expanded view of the image */
            display: none;
            position: fixed;
            padding-top: 50px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.9);
        }

        .modal-content {
            /* The content inside of the .modal */
            display: block;
            margin: auto;
        }

        .close {
            /* The close button (x) that can be clicked to close the .modal */
            color: white;
            font-size: 40px;
            position: absolute;
            top: 10px;
            right: 25px;
            cursor: pointer;
        }

        #modalImage {
            /* The image inside the .image-container */
            max-width: 100%;
            width: 450px;
        }
    </style>
</head>

<body>
    <div class=""slideshow-container"" id=""slideshow1"">
        <div class=""slideshow-img"" onclick=""openModal('../logos/jordans-blog-logo-1.png')"">
            <img src=""../logos/jordans-blog-logo-1.png"">
            <figcaption>Jordan's Blog Logo #1</figcaption>
        </div>
        <div class=""slideshow-img"">
            <img src=""../logos/jordans-blog-logo-2.png"" onclick=""openModal('../logos/jordans-blog-logo-2.png')"">
            <figcaption>Jordan's Blog Logo #2</figcaption>
        </div>
        <div class=""slideshow-img"">
            <img src=""../logos/jordans-blog-logo-3.png"" onclick=""openModal('../logos/jordans-blog-logo-3.png')"">
            <figcaption>Jordan's Blog Logo #3</figcaption>
        </div>
        <div class=""slideshow-img"">
            <img src=""../logos/jordans-blog-logo-4.png"" onclick=""openModal('../logos/jordans-blog-logo-4.png')"">
            <figcaption>Jordan's Blog Logo #4</figcaption>
        </div>
        <a class=""prev"" onclick=""changeSlide('slideshow1', -1)"">&#10094;</a>
        <a class=""next"" onclick=""changeSlide('slideshow1', 1)"">&#10095;</a>
    </div>

    <div class=""previews-container"" id=""previews1"">
        <img class=""preview-img"" src=""../logos/jordans-blog-logo-1.png"" onclick=""currentSlide('slideshow1', 1)"">
        <img class=""preview-img"" src=""../logos/jordans-blog-logo-2.png"" onclick=""currentSlide('slideshow1', 2)"">
        <img class=""preview-img"" src=""../logos/jordans-blog-logo-3.png"" onclick=""currentSlide('slideshow1', 3)"">
        <img class=""preview-img"" src=""../logos/jordans-blog-logo-4.png"" onclick=""currentSlide('slideshow1', 4)"">
    </div>

    <div class=""slideshow-container"" id=""slideshow2"" style=""margin-top:10px;"">
        <div class=""slideshow-img"">
            <img src=""../logos/jordans-blog-6-0.png"" onclick=""openModal('../logos/jordans-blog-6-0.png')"">
            <figcaption>Jordan's Blog 6.0 Logo</figcaption>
        </div>
        <div class=""slideshow-img"">
            <img src=""../logos/jordans-blog-6-1.png"" onclick=""openModal('../logos/jordans-blog-6-1.png')"">
            <figcaption>Jordan's Blog 6.1 Logo</figcaption>
        </div>
        <a class=""prev"" onclick=""changeSlide('slideshow2', -1)"">&#10094;</a>
        <a class=""next"" onclick=""changeSlide('slideshow2', 1)"">&#10095;</a>
    </div>

    <div class=""previews-container"" id=""previews2"">
        <img class=""preview-img"" src=""../logos/jordans-blog-6-0.png"" onclick=""currentSlide('slideshow2', 1)"">
        <img class=""preview-img"" src=""../logos/jordans-blog-6-1.png"" onclick=""currentSlide('slideshow2', 2)"">
    </div>

    <div id=""modal"" class=""modal"">
        <span class=""close"" onclick=""closeModal()"">&times;</span>
        <img id=""modalImage"" class=""modal-content"" alt=""Enlarged Image"">
    </div>

    <script>
        function changeSlide(slideshowId, n) {
            showSlides(slideshowId, slideIndex[slideshowId] += n);
        }

        function currentSlide(slideshowId, n) {
            showSlides(slideshowId, slideIndex[slideshowId] = n);
        }

        let slideIndex = {};

        function showSlides(slideshowId, n) {
            let slides = document.getElementById(slideshowId).getElementsByClassName(""slideshow-img"");
            let previews = document.getElementById('previews' + slideshowId.slice(-1)).getElementsByClassName(""preview-img"");

            if (!slideIndex[slideshowId]) {
                slideIndex[slideshowId] = 1;
            }

            if (n > slides.length) {
                slideIndex[slideshowId] = 1;
            }
            if (n < 1) {
                slideIndex[slideshowId] = slides.length;
            }

            for (let i = 0; i < slides.length; i++) {
                slides[i].style.display = ""none"";
            }

            for (let i = 0; i < previews.length; i++) {
                previews[i].classList.remove(""active-preview"");
            }

            slides[slideIndex[slideshowId] - 1].style.display = ""block"";
            previews[slideIndex[slideshowId] - 1].classList.add(""active-preview"");
        }

        showSlides('slideshow1', 1); // Initial call to display the first slide
        showSlides('slideshow2', 1); // Initial call to display the first slide for second slideshow

        // Basic JavaScript for the openModal to work
        function openModal(imageSrc) {
            document.getElementById('modalImage').src = imageSrc;
            document.getElementById('modal').style.display = 'block';
            document.body.classList.add('modal-open'); // Add this line

            document.addEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    closeModal();
                }
            });
        }

        function closeModal() {
            document.getElementById('modal').style.display = 'none';
            document.body.classList.remove('modal-open'); // Add this line
            document.removeEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    closeModal();
                }
            });
        }
    </script>

</body>
</html>"
CA2BhqB6,physics cheat sheet,apad464,Latex,Wednesday 27th of March 2024 07:59:40 PM CDT,"\documentclass{article}
\usepackage{amsmath}
\usepackage{multicol}
\usepackage{geometry}

% Set page margins
\geometry{left=1cm, right=1cm, top=1cm, bottom=1cm}

% Increase the column separation
\setlength{\columnsep}{1cm}

% Define a new command for a non-wrapping line of text with a formula
\newcommand{\formulaitem}[2]{
    \noindent\textbf{#1}\hfill$#2$\\[12pt]
}

\begin{document}
\begin{multicols}{2}
[
\section*{Physics Formula Sheet}
This formula sheet covers key equations for rotational kinematics, springs and harmonic motion, kinematics, forces, torque, momentum, collisions, energy, and work.
]

\formulaitem{Rotational Kinematics: Arc Length:}{S = r\Delta\theta}
\formulaitem{Angular Acceleration:}{\alpha = \frac{\Delta\omega}{\Delta t}}
\formulaitem{Angular Velocity:}{\omega = \frac{\Delta\theta}{\Delta t}}
\formulaitem{Velocity:}{V = r\omega = \frac{s}{\Delta t} = \frac{r\Delta\theta}{\Delta t}}
\formulaitem{Tangential Acceleration:}{a_{\text{tan}} = r\alpha = \frac{r\Delta v}{\Delta t} = \frac{r\Delta\omega}{\Delta t}}
\formulaitem{Centripetal Acceleration:}{a_c = r\omega^2 = \frac{v^2}{r}}
\formulaitem{Rotational Kinetic Energy:}{K_{\text{rot}} = \frac{1}{2}I\omega^2}
\formulaitem{Angular Momentum:}{L = I\omega}
\formulaitem{Change in Angular Momentum:}{\Delta L = \tau\Delta t}
\formulaitem{Relationship between Linear and Angular Quantities:}{\omega = \frac{v}{r}, \Delta\theta = \Delta x}

\formulaitem{Springs and Harmonic Motion: Displacement in SHM:}{x = A \cos(2\pi ft)}
\formulaitem{Period of a Spring:}{T_s = 2\pi \sqrt{\frac{m}{k}}}
\formulaitem{Potential Energy in a Spring:}{U_s = \frac{kx^2}{2}}
\formulaitem{Force by a Spring:}{F_s = kx}
\formulaitem{Period of a Pendulum:}{T_p = 2\pi \sqrt{\frac{l}{g}}}

\formulaitem{Kinematics: Projectile Motion:}{V_{iy} = V \sin \theta, V_{ix} = V \cos \theta}
\formulaitem{Final Velocity:}{v_f = v_i + at}
\formulaitem{Acceleration (from velocities):}{a = \frac{v_f - v_i}{t}}
\formulaitem{Initial Velocity (from final velocity):}{v_i = v_f - at}
\formulaitem{Final Velocity (from displacement):}{v_f^2 = v_i^2 + 2a\Delta x}
\formulaitem{Acceleration (from velocities and displacement):}{a = \frac{v_f^2 - v_i^2}{2\Delta x}}
\formulaitem{Displacement (from velocity and time):}{\Delta x = v_i t + \frac{1}{2}at^2}
\formulaitem{Acceleration (from displacement and time):}{a = \frac{2(\Delta x - v_i t)}{t^2}}
\formulaitem{Average Velocity (from displacement and time):}{\Delta x = \frac{(v_i + v_f)t}{2}}
\formulaitem{Final Velocity (from displacement and time):}{v_f = \frac{2\Delta x}{t} - v_i}

\formulaitem{Forces: Newton's Second Law:}{F = ma}
\formulaitem{Friction Force:}{F_f = \mu F_N}

\formulaitem{Torque and Center of Mass: Torque:}{\tau = rF \cos \Theta, \tau = rF \sin \Theta}

\formulaitem{Momentum and Collisions: Momentum:}{p = mv}
\formulaitem{Impulse:}{J = Ft = \Delta p}
\formulaitem{Elastic Collision:}{m_1 v_{1i} + m_2 v_{2i} = m_1 v_{1f} + m_2 v_{2f}}
\formulaitem{Inelastic Collision:}{m_1 v_{1i} + m_2 v_{2i} = (m_1 + m_2)v}
\formulaitem{Explosions:}{(m_1 + m_2)v = m_1 v_{1f} + m_2 v_{2f}}

\formulaitem{Energy and Work: Potential Energy:}{U = mgh}
\formulaitem{Spring Potential Energy:}{U_{\text{spring}} = \frac{1}{2}kx^2}
\formulaitem{Kinetic Energy:}{K = \frac{1}{2}mv^2}
\formulaitem{Power:}{P = \frac{W}{t} = \frac{F d}{t}}

\end{multicols}
\end{document}
"
AM44UbDx,Untitled,s-sols,CSS,Wednesday 27th of March 2024 07:25:36 PM CDT,"body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery .woocommerce-product-gallery__wrapper .woocommerce-product-gallery__image {
	margin-bottom: 14px;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .flex-viewport .woocommerce-product-gallery__wrapper .woocommerce-product-gallery__image {
	margin-bottom: 0 !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery .woocommerce-product-gallery__wrapper .woocommerce-product-gallery__image:nth-of-type(n + 2) {
	display: none !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .woocommerce-product-gallery .woocommerce-product-gallery__wrapper {
	width: 100% !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .ast-single-product-thumbnails {
	--thmb-margin-r: 15px;
	--thmb-count: 4;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .ast-single-product-thumbnails .woocommerce-product-gallery-thumbnails__wrapper {
	width: 100% !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .ast-single-product-thumbnails .woocommerce-product-gallery-thumbnails__wrapper .ast-woocommerce-product-gallery__image img {
	opacity: 1 !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .ast-single-product-thumbnails .woocommerce-product-gallery-thumbnails__wrapper .ast-woocommerce-product-gallery__image {
	width: calc( (100% - (var(--thmb-count) - 1) * var(--thmb-margin-r)) / var(--thmb-count) );
	float: left;
	margin-right: var(--thmb-margin-r);
	min-width: 80px;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .ast-single-product-thumbnails .woocommerce-product-gallery-thumbnails__wrapper .ast-woocommerce-product-gallery__image:nth-of-type(n + 5) {
	display: none !important;
}

body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .ast-single-product-thumbnails .woocommerce-product-gallery-thumbnails__wrapper .ast-woocommerce-product-gallery__image:nth-of-type(4) {
	margin-right: 0 !important;
}

@media screen and (max-width: 409px) {
	body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .ast-single-product-thumbnails .woocommerce-product-gallery-thumbnails__wrapper .ast-woocommerce-product-gallery__image:nth-of-type(n + 4) {
		display: none !important;
	}
}

@media screen and (max-width: 324px) {
	body.single-product:is(.seraph-accel-js-lzl-ing, .seraph-accel-js-lzl-ing-ani) .ast-single-product-thumbnails .woocommerce-product-gallery-thumbnails__wrapper .ast-woocommerce-product-gallery__image:nth-of-type(n + 3) {
		display: none !important;
	}
}"
asjtvAXQ,2024-03-27_stats.json,rdp_snitch,JSON,Wednesday 27th of March 2024 07:18:28 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 4089,
    ""192.3.101.25"": 9,
    ""58.218.204.183"": 9,
    ""167.94.138.33"": 3,
    ""205.210.31.183"": 9,
    ""194.165.16.72"": 3,
    ""43.133.133.207"": 3,
    ""167.94.146.52"": 3,
    ""87.251.75.145"": 9,
    ""84.201.2.2"": 6,
    ""194.165.16.76"": 6,
    ""2.57.149.186"": 9,
    ""87.251.75.120"": 6,
    ""185.170.144.3"": 6,
    ""123.56.20.194"": 3,
    ""45.227.254.8"": 6,
    ""205.210.31.6"": 9,
    ""36.91.222.100"": 6,
    ""62.204.41.222"": 12,
    ""179.60.147.118"": 3,
    ""196.190.117.7"": 3,
    ""45.249.245.54"": 3,
    ""8.138.126.111"": 6,
    ""199.45.154.66"": 3,
    ""205.210.31.216"": 9,
    ""87.251.75.64"": 3,
    ""185.170.144.113"": 9,
    ""212.70.149.146"": 3,
    ""198.235.24.172"": 9,
    ""194.165.16.10"": 6,
    ""144.16.111.79"": 3
  },
  ""asn"": {
    ""AS14061"": 4089,
    ""AS36352"": 9,
    ""AS4134"": 9,
    ""AS398324"": 3,
    ""AS396982"": 36,
    ""AS48721"": 15,
    ""AS132203"": 3,
    ""AS398705"": 3,
    ""AS208091"": 18,
    ""AS44066"": 6,
    ""AS208312"": 9,
    ""AS197414"": 15,
    ""AS37963"": 9,
    ""AS267784"": 6,
    ""AS7713"": 6,
    ""AS59425"": 12,
    ""AS209588"": 3,
    ""AS24757"": 3,
    ""AS135377"": 3,
    ""AS398722"": 3,
    ""AS204428"": 3,
    ""AS2697"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 4089,
    ""HostPapa"": 9,
    ""Chinanet"": 9,
    ""Censys, Inc."": 9,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 24,
    ""Shenzhen Tencent Computer Systems Company Limited"": 3,
    ""Xhost Internet Solutions LP"": 33,
    ""www.accelerated.de"": 6,
    ""Red Byte LLC"": 9,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Horizon LLC"": 12,
    ""Ethiotelecom"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ALICLOUD"": 6,
    ""SS-Net"": 3,
    ""ERNET India"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 4089,
    ""Unknown"": 12,
    ""Chinanet JS"": 9,
    ""Censys, Inc"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 15,
    ""Tencent Cloud Computing"": 3,
    ""Censys, Inc."": 6,
    ""Xhost Internet Solutions"": 18,
    ""diva-e Datacenters GmbH"": 6,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Xhostis"": 15,
    ""Aliyun Computing Co., LTD"": 3,
    ""UAB Host Baltic"": 6,
    ""Telekomunikasi Indonesia"": 6,
    ""Horizon LLC"": 12,
    ""Cloud Solutions S.A"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Aliyun Computing Co."": 6,
    ""4Media Ltd"": 3,
    ""ERNET India"": 3
  },
  ""regionName"": {
    ""South West"": 4089,
    ""New York"": 9,
    ""Jiangsu"": 9,
    ""Michigan"": 3,
    ""California"": 36,
    ""Kaunas"": 15,
    ""Jakarta"": 9,
    ""Hesse"": 9,
    ""North Holland"": 33,
    ""Lesser Poland"": 9,
    ""Beijing"": 3,
    ""Vilnius"": 6,
    ""Moscow"": 12,
    ""Distrito Federal"": 3,
    ""Addis Ababa"": 3,
    ""Kowloon"": 3,
    ""Guangdong"": 6,
    ""Central and Western District"": 3,
    ""Sliven"": 3,
    ""National Capital Territory of Delhi"": 3
  },
  ""country"": {
    ""Singapore"": 4089,
    ""United States"": 48,
    ""China"": 18,
    ""Lithuania"": 21,
    ""Indonesia"": 9,
    ""Germany"": 9,
    ""The Netherlands"": 33,
    ""Poland"": 9,
    ""Russia"": 12,
    ""Venezuela"": 3,
    ""Ethiopia"": 3,
    ""Hong Kong"": 6,
    ""Bulgaria"": 3,
    ""India"": 3
  },
  ""account"": {
    ""hello"": 4110,
    ""Domain"": 24,
    ""(empty)"": 12,
    ""TvFVlLvMY"": 3,
    ""MGDpsv"": 3,
    ""kIpxWx"": 3,
    ""Administr"": 39,
    ""Test"": 42,
    ""wCKLlAkIz"": 3,
    ""gImIRo"": 3,
    ""uoJLVu"": 3,
    ""Administrator"": 3,
    ""VRnexaTVf"": 3,
    ""OzsrUJ"": 3,
    ""gdXNoN"": 3,
    ""zVUWzwZuB"": 3,
    ""mzYcEF"": 3,
    ""oBRRYx"": 3
  },
  ""keyboard"": {
    ""Unknown"": 4266
  },
  ""client_build"": {
    ""Unknown"": 4266
  },
  ""client_name"": {
    ""Unknown"": 4266
  },
  ""ip_type"": {
    ""hosting & proxy"": 4089,
    ""hosting"": 66,
    ""Unknown"": 111
  }
}"
rduNz56S,2024-03-27_stats.json,rdp_snitch,JSON,Wednesday 27th of March 2024 07:16:14 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 2726,
    ""192.3.101.25"": 6,
    ""58.218.204.183"": 6,
    ""167.94.138.33"": 2,
    ""205.210.31.183"": 6,
    ""194.165.16.72"": 2,
    ""43.133.133.207"": 2,
    ""167.94.146.52"": 2,
    ""87.251.75.145"": 6,
    ""84.201.2.2"": 4,
    ""194.165.16.76"": 4,
    ""2.57.149.186"": 6,
    ""87.251.75.120"": 4,
    ""185.170.144.3"": 4,
    ""123.56.20.194"": 2,
    ""45.227.254.8"": 4,
    ""205.210.31.6"": 6,
    ""36.91.222.100"": 4,
    ""62.204.41.222"": 8,
    ""179.60.147.118"": 2,
    ""196.190.117.7"": 2,
    ""45.249.245.54"": 2,
    ""8.138.126.111"": 4,
    ""199.45.154.66"": 2,
    ""205.210.31.216"": 6,
    ""87.251.75.64"": 2,
    ""185.170.144.113"": 6,
    ""212.70.149.146"": 2,
    ""198.235.24.172"": 6,
    ""194.165.16.10"": 4,
    ""144.16.111.79"": 2
  },
  ""asn"": {
    ""AS14061"": 2726,
    ""AS36352"": 6,
    ""AS4134"": 6,
    ""AS398324"": 2,
    ""AS396982"": 24,
    ""AS48721"": 10,
    ""AS132203"": 2,
    ""AS398705"": 2,
    ""AS208091"": 12,
    ""AS44066"": 4,
    ""AS208312"": 6,
    ""AS197414"": 10,
    ""AS37963"": 6,
    ""AS267784"": 4,
    ""AS7713"": 4,
    ""AS59425"": 8,
    ""AS209588"": 2,
    ""AS24757"": 2,
    ""AS135377"": 2,
    ""AS398722"": 2,
    ""AS204428"": 2,
    ""AS2697"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 2726,
    ""HostPapa"": 6,
    ""Chinanet"": 6,
    ""Censys, Inc."": 6,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 16,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""Xhost Internet Solutions LP"": 22,
    ""www.accelerated.de"": 4,
    ""Red Byte LLC"": 6,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Horizon LLC"": 8,
    ""Ethiotelecom"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""ALICLOUD"": 4,
    ""SS-Net"": 2,
    ""ERNET India"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 2726,
    ""Unknown"": 8,
    ""Chinanet JS"": 6,
    ""Censys, Inc"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 10,
    ""Tencent Cloud Computing"": 2,
    ""Censys, Inc."": 4,
    ""Xhost Internet Solutions"": 12,
    ""diva-e Datacenters GmbH"": 4,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Xhostis"": 10,
    ""Aliyun Computing Co., LTD"": 2,
    ""UAB Host Baltic"": 4,
    ""Telekomunikasi Indonesia"": 4,
    ""Horizon LLC"": 8,
    ""Cloud Solutions S.A"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Aliyun Computing Co."": 4,
    ""4Media Ltd"": 2,
    ""ERNET India"": 2
  },
  ""regionName"": {
    ""South West"": 2726,
    ""New York"": 6,
    ""Jiangsu"": 6,
    ""Michigan"": 2,
    ""California"": 24,
    ""Kaunas"": 10,
    ""Jakarta"": 6,
    ""Hesse"": 6,
    ""North Holland"": 22,
    ""Lesser Poland"": 6,
    ""Beijing"": 2,
    ""Vilnius"": 4,
    ""Moscow"": 8,
    ""Distrito Federal"": 2,
    ""Addis Ababa"": 2,
    ""Kowloon"": 2,
    ""Guangdong"": 4,
    ""Central and Western District"": 2,
    ""Sliven"": 2,
    ""National Capital Territory of Delhi"": 2
  },
  ""country"": {
    ""Singapore"": 2726,
    ""United States"": 32,
    ""China"": 12,
    ""Lithuania"": 14,
    ""Indonesia"": 6,
    ""Germany"": 6,
    ""The Netherlands"": 22,
    ""Poland"": 6,
    ""Russia"": 8,
    ""Venezuela"": 2,
    ""Ethiopia"": 2,
    ""Hong Kong"": 4,
    ""Bulgaria"": 2,
    ""India"": 2
  },
  ""account"": {
    ""hello"": 2740,
    ""Domain"": 16,
    ""(empty)"": 8,
    ""TvFVlLvMY"": 2,
    ""MGDpsv"": 2,
    ""kIpxWx"": 2,
    ""Administr"": 26,
    ""Test"": 28,
    ""wCKLlAkIz"": 2,
    ""gImIRo"": 2,
    ""uoJLVu"": 2,
    ""Administrator"": 2,
    ""VRnexaTVf"": 2,
    ""OzsrUJ"": 2,
    ""gdXNoN"": 2,
    ""zVUWzwZuB"": 2,
    ""mzYcEF"": 2,
    ""oBRRYx"": 2
  },
  ""keyboard"": {
    ""Unknown"": 2844
  },
  ""client_build"": {
    ""Unknown"": 2844
  },
  ""client_name"": {
    ""Unknown"": 2844
  },
  ""ip_type"": {
    ""hosting & proxy"": 2726,
    ""hosting"": 44,
    ""Unknown"": 74
  }
}"
6WAyXTaZ,2024-03-27_stats.json,rdp_snitch,JSON,Wednesday 27th of March 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""128.199.242.196"": 1363,
    ""192.3.101.25"": 3,
    ""58.218.204.183"": 3,
    ""167.94.138.33"": 1,
    ""205.210.31.183"": 3,
    ""194.165.16.72"": 1,
    ""43.133.133.207"": 1,
    ""167.94.146.52"": 1,
    ""87.251.75.145"": 3,
    ""84.201.2.2"": 2,
    ""194.165.16.76"": 2,
    ""2.57.149.186"": 3,
    ""87.251.75.120"": 2,
    ""185.170.144.3"": 2,
    ""123.56.20.194"": 1,
    ""45.227.254.8"": 2,
    ""205.210.31.6"": 3,
    ""36.91.222.100"": 2,
    ""62.204.41.222"": 4,
    ""179.60.147.118"": 1,
    ""196.190.117.7"": 1,
    ""45.249.245.54"": 1,
    ""8.138.126.111"": 2,
    ""199.45.154.66"": 1,
    ""205.210.31.216"": 3,
    ""87.251.75.64"": 1,
    ""185.170.144.113"": 3,
    ""212.70.149.146"": 1,
    ""198.235.24.172"": 3,
    ""194.165.16.10"": 2,
    ""144.16.111.79"": 1
  },
  ""asn"": {
    ""AS14061"": 1363,
    ""AS36352"": 3,
    ""AS4134"": 3,
    ""AS398324"": 1,
    ""AS396982"": 12,
    ""AS48721"": 5,
    ""AS132203"": 1,
    ""AS398705"": 1,
    ""AS208091"": 6,
    ""AS44066"": 2,
    ""AS208312"": 3,
    ""AS197414"": 5,
    ""AS37963"": 3,
    ""AS267784"": 2,
    ""AS7713"": 2,
    ""AS59425"": 4,
    ""AS209588"": 1,
    ""AS24757"": 1,
    ""AS135377"": 1,
    ""AS398722"": 1,
    ""AS204428"": 1,
    ""AS2697"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 1363,
    ""HostPapa"": 3,
    ""Chinanet"": 3,
    ""Censys, Inc."": 3,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 8,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""Xhost Internet Solutions LP"": 11,
    ""www.accelerated.de"": 2,
    ""Red Byte LLC"": 3,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Horizon LLC"": 4,
    ""Ethiotelecom"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""ALICLOUD"": 2,
    ""SS-Net"": 1,
    ""ERNET India"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 1363,
    ""Unknown"": 4,
    ""Chinanet JS"": 3,
    ""Censys, Inc"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 5,
    ""Tencent Cloud Computing"": 1,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions"": 6,
    ""diva-e Datacenters GmbH"": 2,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Xhostis"": 5,
    ""Aliyun Computing Co., LTD"": 1,
    ""UAB Host Baltic"": 2,
    ""Telekomunikasi Indonesia"": 2,
    ""Horizon LLC"": 4,
    ""Cloud Solutions S.A"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Aliyun Computing Co."": 2,
    ""4Media Ltd"": 1,
    ""ERNET India"": 1
  },
  ""regionName"": {
    ""South West"": 1363,
    ""New York"": 3,
    ""Jiangsu"": 3,
    ""Michigan"": 1,
    ""California"": 12,
    ""Kaunas"": 5,
    ""Jakarta"": 3,
    ""Hesse"": 3,
    ""North Holland"": 11,
    ""Lesser Poland"": 3,
    ""Beijing"": 1,
    ""Vilnius"": 2,
    ""Moscow"": 4,
    ""Distrito Federal"": 1,
    ""Addis Ababa"": 1,
    ""Kowloon"": 1,
    ""Guangdong"": 2,
    ""Central and Western District"": 1,
    ""Sliven"": 1,
    ""National Capital Territory of Delhi"": 1
  },
  ""country"": {
    ""Singapore"": 1363,
    ""United States"": 16,
    ""China"": 6,
    ""Lithuania"": 7,
    ""Indonesia"": 3,
    ""Germany"": 3,
    ""The Netherlands"": 11,
    ""Poland"": 3,
    ""Russia"": 4,
    ""Venezuela"": 1,
    ""Ethiopia"": 1,
    ""Hong Kong"": 2,
    ""Bulgaria"": 1,
    ""India"": 1
  },
  ""account"": {
    ""hello"": 1370,
    ""Domain"": 8,
    ""(empty)"": 4,
    ""TvFVlLvMY"": 1,
    ""MGDpsv"": 1,
    ""kIpxWx"": 1,
    ""Administr"": 13,
    ""Test"": 14,
    ""wCKLlAkIz"": 1,
    ""gImIRo"": 1,
    ""uoJLVu"": 1,
    ""Administrator"": 1,
    ""VRnexaTVf"": 1,
    ""OzsrUJ"": 1,
    ""gdXNoN"": 1,
    ""zVUWzwZuB"": 1,
    ""mzYcEF"": 1,
    ""oBRRYx"": 1
  },
  ""keyboard"": {
    ""Unknown"": 1422
  },
  ""client_build"": {
    ""Unknown"": 1422
  },
  ""client_name"": {
    ""Unknown"": 1422
  },
  ""ip_type"": {
    ""hosting & proxy"": 1363,
    ""hosting"": 22,
    ""Unknown"": 37
  }
}"
SFiy6X3F,Modpack_version.php,HeavyNight,PHP,Wednesday 27th of March 2024 06:56:36 PM CDT,"<?php

// URL del archivo .ini
$url_ini = 'https://heavynightlauncher.com/Launcher-Categorias/Categoria1/Category-Config.ini';

// Obtener el contenido del archivo .ini
$ini_contents = file_get_contents($url_ini);

// Verificar si se pudo obtener el contenido del archivo .ini
if ($ini_contents === false) {
    die('Error al obtener el archivo .ini.');
}

// Parsear el contenido del archivo .ini
$ini_data = parse_ini_string($ini_contents, true); // Se especifica true para que se conserve la estructura de las secciones

// Obtener el nombre del modpack de la sección [General]
$nombre_modpack = isset($ini_data['General']['nombre']) ? $ini_data['General']['nombre'] : '';

// URL del archivo txt con el nombre del modpack
$url_txt = ""https://heavynightlauncher.com/Launcher-Categorias/Categoria1/Modpack/$nombre_modpack/version.txt"";

// Obtener el contenido del archivo txt
$file_contents = file_get_contents($url_txt);

// Verificar si se pudo obtener el contenido del archivo txt
if ($file_contents === false) {
    die('Error al obtener el archivo .txt.');
}

// Mostrar el contenido del archivo
echo htmlspecialchars($file_contents);
?>"
U531rttf,ff,fer_4351,C++,Wednesday 27th of March 2024 06:23:17 PM CDT,"#include <iostream>
using namespace std;

void cargarDatos(int &pa_generoMayor, int pb_vCantidadDias[], int pc_vCantidadTemas[]);
void mostrarCantidadArtistas(int pb_vCantidadDias[]);
void mostrarArtistasTemas(int pc_vCantidadTemas[]);


int main() {
   
   int pa_generoMayor;
   int pb_vCantidadDias[31]{};
   int pc_vCantidadTemas[31]{};
  
   cargarDatos(pa_generoMayor, pb_vCantidadDias, pc_vCantidadTemas);
   
   /// Punta A
   cout << ""El genero del artista que mayor tiempo estubo en el dia 3 es: "" << 
      pa_generoMayor << endl;
   
   /// Punto B
   mostrarCantidadArtistas(pb_vCantidadDias);
   
   /// Punto C
   mostrarArtistasTemas(pc_vCantidadTemas);
	
	return 0;
}


void cargarDatos(int &pa_generoMayor, int pb_vCantidadDias[], int pc_vCantidadTemas[]){
   int dia, artista, genero, minutos, canciones;
   int pa_minutosMayor = 0;
   
   cout << ""Ingrese dia: "";
   cin >> dia;
   while(dia != 0){
      
      cout << ""Ingrese artista: "";
      cin >> artista;   
      
      cout << ""Ingrese Genero: "";
      cin >> genero;
      
      cout << ""Ingrese minutos: "";
      cin >> minutos;
      
      cout << ""Ingrese canciones: "";
      cin >> canciones;
      
      /// procesamos los registros
      
      if(dia == 3){
         
         if(minutos > pa_minutosMayor){
            pa_minutosMayor = minutos;
            pa_generoMayor = genero;
         }
      }
      
      pb_vCantidadDias[artista-100]++;
      
      pc_vCantidadTemas[artista-100] += canciones;
      
      
      cout << ""Ingrese dia: "";
      cin >> dia;
   }
}
   
void mostrarCantidadArtistas(int pb_vCantidadDias[]){
   int cantidad = 0;
   for(int i=0; i<31; i++){
      if(pb_vCantidadDias[i] == 3){
         cantidad++;
      }
   }
   
   cout << ""La cantidad de artistas que participaron los 3 dias fueron: "" << 
      cantidad << endl;
}

   
void mostrarArtistasTemas(int pc_vCantidadTemas[]){
   cout << ""Los artistas que realizaron mas de 15 temas son: "" << endl;
   for(int i=0; i <31 ; i++){
      if(pc_vCantidadTemas[i]>15){
         cout << i + 100 << endl;
      }
   }
}

"
ySexKL9M,key,beigeworm,PHP,Wednesday 27th of March 2024 06:06:13 PM CDT,g5e4wffgVRg5h6T54f
NHjFY6gA,Классификация растений,NickAndNick,C++,Wednesday 27th of March 2024 06:00:19 PM CDT,"// https://otvet.mail.ru/answer/2051859985
#include <array>
#include <cstdlib>
#include <iostream>
#include <set>
#include <span>
#include <string>
#include <string_view>

using namespace std;

class Plant {
public:
    Plant() : quantity(0) {}

    bool is_status(const string_view status) const {
        return this->status == status;
    }

    bool is_least(const Plant& plant) const {
        return quantity < plant.quantity;;
    }

    bool is_family(const string_view family) const {
        return this->family == family;
    }

    const string& get_genus() const {
        return genus;
    }
private:
    string genus;
    string family;
    string order;
    string status;
    int quantity;

    friend ostream& operator<<(ostream& out, const Plant& plant) {
        return out << ""Порядок: "" << plant.order << '\n'
            << ""Семейство: "" << plant.family << '\n'
            << ""Род: "" << plant.genus << '\n'
            << ""Видовое разнообразие: "" << plant.quantity << '\n'
            << ""Охранный статус: "" << plant.status << '\n';
    }

    friend istream& operator>>(istream& inp, Plant& plant) {
        cout << ""Порядок: "";
        getline(inp, plant.order);
        cout << ""Семейство: "";
        getline(inp, plant.family);
        cout << ""Род: "";
        getline(inp, plant.genus);
        cout << ""Видовое разнообразие: "";
        inp >> plant.quantity;
        inp.ignore(0x1000, '\n');
        cout << ""Охранный статус: "";
        getline(inp, plant.status);
        cout.put('\n');
        return inp;
    }
};

using plants_t = array<Plant, 10>;

void status_show(const plants_t& plants, const string_view status) {
    for (const auto& plant : plants) {
        if (plant.is_status(status)) {
            cout << plant << '\n';
        }
    }
}

void genus_least(const plants_t& plants) {
    Plant plant = plants.front();
    for (size_t i = 1; i < plants.size(); ++i) {
        if (plants[i].is_least(plant)) {
            plant = plants[i];
        }
    }
    cout << ""Род растений с наименьшим видовым разнообразием: ""
         << plant.get_genus() << ""\n\n"";
}

void show_list_genus_from_family(const plants_t& plants, const string_view family) {
    set<string> genera;
    for (const auto& plant : plants) {
        if (plant.is_family(family)) {
            genera.insert(plant.get_genus());
        }
    }
    auto n = 0;
    for (const auto& genus : genera) {
        cout << ++n << "". "" << genus << '\n';
    }
    cout.put('\n');
}

int choice() {
    puts(""Выбирите действие..."");
    puts(""0. Выход из программы"");
    puts(""1. Вывести список растений заданного охранного статуса"");
    puts(""2. Вывести род растений с наименьшим видовым разнообразием"");
    puts(""3. Вывести список родов растений заданного семейства"");
    cout << "">>> "";
    int value;
    cin >> value;
    cin.ignore(0x1000, '\n');
    cout.put('\n');
    return value;
}

string query(const char* prompt) {
    string value{ ""\n"" };
    while (value.front() == '\n') {
        cout << prompt;
        getline(cin, value);
    }
    cout.put('\n');
    return value;
}

const auto load() {
    plants_t plants{};
    puts(""Введите данные...\n"");
    for (auto& plant : plants) {
        cin >> plant;
    }
    return plants;
}

int main() {
    system(""chcp 1251 > nul"");
    const auto plants = load();
    auto run = true;
    while (run) {
        switch (choice()) {
            case 0:
                run = false;
                break;
            case 1:
                status_show(plants, query(""Введите охранный статус: ""));
                break;
            case 2:
                genus_least(plants);
                break;
            case 3:
                show_list_genus_from_family(plants, query(""Введите семейство: ""));
                break;
            default:
                puts(""Ошибка при выборе\n"");
        }
    }
}"
BJ4wE10s,appupdate,Ahhhw,JSON,Wednesday 27th of March 2024 05:07:30 PM CDT,"{
 ""Version"": """",
 ""ReleaseNotes"": ""Test Update"",
 ""Servers"": [
  {
   ""Key"": """",
   ""Chave"": """",
   ""Name"": ""oi"",
   ""FLAG"": ""br.png"",
   ""ServerIP"": """",
   ""ServerPort"": """",
   ""SSLPort"": """",
   ""ProxyIP"": """",
   ""ProxyPort"": """",
   ""ServerUser"": """",
   ""ServerPass"": """",
   ""sInfo"": """"
  },
  {
   ""Key"": """",
   ""Chave"": ""o"",
   ""Name"": ""oi bb"",
   ""FLAG"": ""br.png"",
   ""ServerIP"": """",
   ""ServerPort"": """",
   ""SSLPort"": """",
   ""ProxyIP"": """",
   ""ProxyPort"": """",
   ""ServerUser"": """",
   ""ServerPass"": """",
   ""sInfo"": """"
  }
 ],
 ""Networks"": []
}"
ZHiZvUxb,Image Gallery With Expandable Images,TheiPhoneFan,HTML,Wednesday 27th of March 2024 04:59:47 PM CDT,"<!-- Created by TheiPhoneFan on 2024-03-27 -->
<!-- Previews 6.0.3, 2022-2024 -->
<!-- Original: https://www.w3schools.com/css/tryit.asp?filename=trycss_image_gallery -->
<!DOCTYPE html>
<html>

<head>
    <link href=""https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,900"" rel=""stylesheet"" type=""text/css"">
    <link rel=""stylesheet"" href=""../theme/style.css""/>
    <style>
        div.gallery {
            border: 1px solid #ccc;
			border-radius: 16px;
        }

        div.gallery:hover {
            border: 1px solid #777;
        }

        div.gallery img {
            width: 100%;
            height: auto;
			border-radius: 16px 16px 0px 0px;
        }

        div.desc {
            padding: 15px;
            text-align: center;
        }

        .desc p {
            color: black;
            margin: 0px;
        }

        * {
            box-sizing: border-box;
        }

        .responsive {
            padding: 0 6px;
            float: left;
            width: 24.99999%;
        }

        @media only screen and (max-width: 700px) {
            .responsive {
                width: 49.99999%;
                margin: 6px 0;
            }
        }

        @media only screen and (max-width: 500px) {
            .responsive {
                width: 100%;
            }
        }

        .clearfix:after {
            content: """";
            display: table;
            clear: both;
        }
        .image-gallery {
            /* The Gallery That Holds The Images */
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 10px;
        }

        .gallery-image {
            /* A pointer cursor will display when you hover over the image */
            cursor: pointer;
        }

        .modal {
            /* The fullscreen popup that shows an expanded view of the image */
            display: none;
            position: fixed;
            padding-top: 50px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.9);
        }

        .modal-content {
            /* The content inside of the .modal */
            display: block;
            margin: auto;
        }

        .close {
            /* The close button (x) that can be clicked to close the .modal */
            color: white;
            font-size: 40px;
            position: absolute;
            top: 10px;
            right: 25px;
            cursor: pointer;
        }

        #modalImage {
            /* The image inside the .image-container */
            max-width: 100%;
			margin-top: 10px;
        }
    </style>
</head>

<body class=""white-bg"">
    <div class=""responsive"">
        <div class=""gallery"" onclick=""openModal('https://www.w3schools.com/css/img_5terre.jpg', 'Back Arrow')"">
            <img src=""https://www.w3schools.com/css/img_5terre.jpg"" alt=""Cinque Terre"" width=""600"" height=""400"" class=""gallery-image"">
            <div class=""desc"">
                <p>Add a description of the image here</p>
            </div>
        </div>
    </div>


    <div class=""responsive"">
        <div class=""gallery"" onclick=""openModal('https://www.w3schools.com/css/img_forest.jpg', 'Back Arrow')"">
            <img src=""https://www.w3schools.com/css/img_forest.jpg"" alt=""Forest"" width=""600"" height=""400"" class=""gallery-image"">
            <div class=""desc"">
                <p>Add a description of the image here</p>
            </div>
        </div>
    </div>

    <div class=""responsive"">
        <div class=""gallery"" onclick=""openModal('https://www.w3schools.com/css/img_lights.jpg', 'Back Arrow')"">
            <img src=""https://www.w3schools.com/css/img_lights.jpg"" alt=""Northern Lights"" width=""600"" height=""400"" class=""gallery-image"">
            <div class=""desc"">
                <p>Add a description of the image here</p>
            </div>
        </div>
    </div>

    <div class=""responsive"">
        <div class=""gallery"" onclick=""openModal('https://www.w3schools.com/css/img_mountains.jpg', 'Back Arrow')"">
            <img src=""https://www.w3schools.com/css/img_mountains.jpg"" alt=""Mountains"" width=""600"" height=""400"" class=""gallery-image"">
            <div class=""desc"">
                <p>Add a description of the image here</p>
            </div>
        </div>
    </div>

    <div id=""modal"" class=""modal"">
        <span class=""close"" onclick=""closeModal()"">&times;</span>
        <img id=""modalImage"" class=""modal-content"" alt=""Enlarged Image"">
    </div>

    <script>
        // Basic JavaScript for the openModal to work
        function openModal(imageSrc) {
            document.getElementById('modalImage').src = imageSrc;
            document.getElementById('modal').style.display = 'block';
            document.body.classList.add('modal-open'); // Add this line

            document.addEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    closeModal();
                }
            });
        }

        function closeModal() {
            document.getElementById('modal').style.display = 'none';
            document.body.classList.remove('modal-open'); // Add this line
            document.removeEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    closeModal();
                }
            });
        }
    </script>
</body>
</html>"
4bsV4EuU,amazing power of snowybot,coinwalk,JavaScript,Wednesday 27th of March 2024 04:31:05 PM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/300).toFixed(8));
var bolux = (monkey);
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var feeble = parseFloat(((Math.floor(olsenest/tens))*tens));
var fooble = ((Math.ceil(olsenest/tens))*tens);
var olsen = 0;
var olfer = 0;
var awesome = parseFloat(feeble);
var belance = olsenest;
var nobby = olsenest;
var oxen = olsenest;
var hope = olsenest;
var fart = 4;

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}


async function go(){  
await sleep(1);
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
feeble = ((Math.floor(belance/tens))*tens);
fooble = ((Math.ceil(belance/tens))*tens);
if ((belance>(feeble+sevens))&&(belance<(feeble+eights))&&(belance!=olsen)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if ((belance>(feeble+sevens))&&(belance<(feeble+eights))&&(belance<hope)){
fart = 0;
}
if (((belance/20)<=bolux)&&(belance<(feeble+sevens))){
    bolux = (monkey);
    olsen = 0;
    fart = 3;
    hope = parseFloat(belance);
awesome = parseFloat(feeble);
}
if (((belance/10)<=monkey)&&(belance<(feeble+sevens))){
console.log(""busted please retry"");
return;
}
if ((belance>oxen)&&(belance<(feeble+sevens))){
oxen = parseFloat(belance);
fart = 4;
}
if ((belance>=(awesome+(tens*fart)))&&(belance<(feeble+sevens))){
bolux = (monkey);
olsen = 0;
hope = parseFloat(belance);
awesome = parseFloat(feeble);
}
if (belance>=(olsenest*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go(); 
}
go();"
9zv9aAcg,amazing power of snowybot,coinwalk,JavaScript,Wednesday 27th of March 2024 04:23:53 PM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/300).toFixed(8));
var bolux = (monkey);
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var feeble = parseFloat(((Math.floor(olsenest/tens))*tens));
var fooble = ((Math.ceil(olsenest/tens))*tens);
var olsen = 0;
var olfer = 0;
var awesome = parseFloat(feeble);
var belance = olsenest;
var nobby = olsenest;
var oxen = olsenest;
var hope = olsenest;
var fart = 4;

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}


async function go(){  
await sleep(1000);
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
feeble = ((Math.floor(belance/tens))*tens);
fooble = ((Math.ceil(belance/tens))*tens);
if ((belance>(feeble+sevens))&&(belance<(feeble+eights))&&(belance!=olsen)&&(belance!=olfer)&&(belance>nobby)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
    nobby = parseFloat(belance);
}
if ((belance>(feeble+sevens))&&(belance<(feeble+eights))&&(belance!=olsen)&&(belance!=olfer)&&(belance<nobby)){
    bolux = bolux*2;
    olfer = parseFloat(belance);
    nobby = parseFloat(belance);
}
if ((belance>(feeble+sevens))&&(belance<(feeble+eights))&&(belance<hope)){
fart = 0;
}
if (((belance/20)<=bolux)&&(belance<(feeble+sevens))){
    bolux = (monkey);
    olsen = 0;
    olfer = 0;
    fart = 3;
    hope = parseFloat(belance);
    nobby = parseFloat(belance);
awesome = parseFloat(feeble);
}
if (((belance/10)<=monkey)&&(belance<(feeble+sevens))){
console.log(""busted please retry"");
return;
}
if ((belance>oxen)&&(belance<(feeble+sevens))){
oxen = parseFloat(belance);
fart = 4;
}
if ((belance>=(awesome+(tens*fart)))&&(belance<(feeble+sevens))){
bolux = (monkey);
olsen = 0;
olfer = 0;
nobby = parseFloat(belance);
hope = parseFloat(belance);
awesome = parseFloat(feeble);
}
if (belance>=(olsenest*24)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go(); 
}
go();"
Eh3kZAEm,Untitled,lemansky,HTML,Wednesday 27th of March 2024 04:21:07 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Coffee Preference Form</title>
	<link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"" crossorigin=""anonymous"">

    <style>
        .bg-strong { background-color: #725038; color: white; } 
        .bg-medium { background-color: #936748; color: white; } 
        .bg-soft { background-color: #cfb39f; color: black; } 
    </style>
    <script>
		document.addEventListener(""DOMContentLoaded"", function(){
			
		});
	</script>
</head>
<body>
<div class=""container mt-5"">
    <h2>Your Favorite Coffee</h2>
    <form id=""coffeeForm"">
        <div class=""form-group"">
            <label for=""coffeeSelect"">Choose your coffee:</label>
            <select class=""form-control"" id=""coffeeSelect"">
                <option value="""">--Please choose an option--</option>
                <option value=""espresso"" data-intensity=""strong"">Espresso</option>
                <option value=""latte"" data-intensity=""medium"">Latte</option>
                <option value=""americano"" data-intensity=""soft"">Americano</option>
            </select>
        </div>
        <button type=""submit"" class=""btn btn-primary"">Submit</button>
    </form>
    <div id=""result""></div>
</div>
</body>
</html>
"
mkuBCK6T,treesitter_lazy,fueradeservicio,Lua,Wednesday 27th of March 2024 04:17:12 PM CDT,"return {
    ""nvim-treesitter/nvim-treesitter"",
    build = "":TSUpdate"",
    event = ""VeryLazy"",
    main = ""nvim-treesitter.configs"",
    opts = {
      ensure_installed = {
          ""bash"",
          ""html"",
          ""fish"",
          ""git_config"",
          ""git_rebase"",
          ""gitattributes"",
          ""gitcommit"",
          ""gitignore"",
          ""ini"",
          ""javascript"",
          ""json5"",
          ""jsonc"",
          ""luap"",
          ""make"",
          ""passwd"",
          ""perl"",
          ""php"",
          ""phpdoc"",
          ""puppet"",
          ""python"",
          ""requirements"",
          ""ruby"",
          ""scheme"",
          ""ssh_config"",
          ""strace"",
          ""terraform"",
          ""udev"",
          ""vim"",
          ""vimdoc"",
          ""xml"",
          ""json"",
          ""lua"",
          ""luadoc"",
          ""markdown"",
          ""markdown_inline"",
          ""nix"",
          ""org"",
          ""query"",
          ""typescript"",
          ""regex"",
          ""vim"",
          ""yaml"",
    },
      highlight = {
        enable = true,
      },
      indent = {
        enable = true,
      },
    },
  }
"
zvDaAHnv,DBChecks.ps1,Combreal,PowerShell,Wednesday 27th of March 2024 04:09:48 PM CDT,"[void][system.reflection.Assembly]::LoadFrom(""C:\Program Files (x86)\MySQL\MySQL Connector NET 8.3.0\MySql.Data.dll"")

Function New-SQLUpdate ($connectionProperties, $id, $pageCount, $cover) {
    $Connection = New-Object  MySql.Data.MySqlClient.MySqlConnection 
    $Connection.ConnectionString=""server=$($connectionProperties.mysqlHost);uid=$($connectionProperties.mysqlUser);pwd=$($connectionProperties.mysqlPass);database=$($connectionProperties.mysqlDatabase)""
    $Connection.Open()
    
    $command = New-Object MySql.Data.MySqlClient.MySqlCommand
    $command.Connection = $Connection
    $command.CommandText = ""UPDATE isbninfo SET pagecount = @pagecount, cover = @cover WHERE id = @id""
    $command.Parameters.AddWithValue(""@pagecount"", $pageCount) | Out-Null
    $command.Parameters.AddWithValue(""@cover"", $cover) | Out-Null
    $command.Parameters.AddWithValue(""@id"", $id) | Out-Null
    $command.ExecuteNonQuery() | Out-Null
     
    $Connection.Close()
}

$connectionParameters = New-Object PSObject
$connectionParameters | Add-Member Noteproperty ""mysqlHost"" ""localhost""
$connectionParameters | Add-Member Noteproperty ""mysqlUser"" ""myuser""
$connectionParameters | Add-Member Noteproperty ""mysqlPass"" ""mypass""
$connectionParameters | Add-Member Noteproperty ""mysqlDatabase"" ""mydb""

$connection = [MySql.Data.MySqlClient.MySqlConnection]@{ConnectionString=""server=$($connectionParameters.mysqlHost);uid=$($connectionParameters.mysqlUser);pwd=$($connectionParameters.mysqlPass);database=$($connectionParameters.mysqlDatabase)""}
$connection.Open()

$mySQLCommand = ""SELECT id FROM isbninfo WHERE pagecount = 0 OR cover = ''""
$SQLCommand = [MySql.Data.MySqlClient.MySqlCommand]@{Connection=$connection; CommandText=$mySQLCommand}

$SQLReader = $SQLCommand.ExecuteReader()
While($SQLReader.Read()) {
    #magic correction happens here - use Add-Book.ps1
    #New-SQLUpdate $connectionParameters $SQLReader[""id""] $pagecount $cover
}

$SQLReader.Close()
$connection.Close()"
vnSyttd6,Untitled,lemansky,HTML,Wednesday 27th of March 2024 03:56:25 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
	<meta charset=""UTF-8"">
	<title>Document</title>
	<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css"">
	<script>
		document.addEventListener(""DOMContentLoaded"", () => {

		});

	</script>
</head>
<body>

	<div class=""container my-4"">
		<input type=""text"" class=""form-control"">
		<ul class=""list-group"">
			<li class=""list-group-item""> Lorem ipsum</li>
			<li class=""list-group-item""> dolor sit</li>
			<li class=""list-group-item""> amet consectetur</li>
			<li class=""list-group-item""> adipisicing elit</li>
			<li class=""list-group-item""> Facere nemo</li>
			<li class=""list-group-item""> possimus in totam</li>
			<li class=""list-group-item""> eos harum rem</li>
			<li class=""list-group-item""> aliquam, eum recusandae quod</li>
			<li class=""list-group-item""> odit! Necessitatibus quibusdam</li>
			<li class=""list-group-item""> illum voluptatem nihil</li>
		</ul>
	</div>

</body>
</html>"
cKmUEDFq,Untitled,lemansky,HTML,Wednesday 27th of March 2024 03:54:09 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
	<meta charset=""UTF-8"">
	<title>Document</title>
	<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css"">
	<script>
		document.addEventListener(""DOMContentLoaded"", function(){
			
		});

	</script>
</head>
<body>
	<div class=""container"">
		<div class=""row"">
			<div class=""col"">
				<img src=""https://placehold.co/300x350"" alt="""" data-img=""https://www.boredpanda.com/blog/wp-content/uploads/2023/03/This-Artist-Creates-Adorable-Knit-and-Crochet-Hats-for-Her-Cat-6401c8657d7b9__700.jpg"" width=""300"" height=""350"">
			</div>
			<div class=""col"">
				<img src=""https://placehold.co/300x350"" alt="""" data-img=""https://www.boredpanda.com/blog/wp-content/uploads/2023/03/This-Artist-Creates-Adorable-Knit-and-Crochet-Hats-for-Her-Cat-6401c85088077__700.jpg"" width=""300"" height=""350"">
			</div>
			<div class=""col"">
				<img src=""https://placehold.co/300x350"" alt="""" data-img=""https://www.boredpanda.com/blog/wp-content/uploads/2023/03/This-Artist-Creates-Adorable-Knit-and-Crochet-Hats-for-Her-Cat-6401c8686eec8__700.jpg"" width=""300"" height=""350"">
			</div>
			<div class=""col"">
				<img src=""https://placehold.co/300x350"" alt="""" data-img=""https://www.boredpanda.com/blog/wp-content/uploads/2023/03/This-Artist-Creates-Adorable-Knit-and-Crochet-Hats-for-Her-Cat-6401c85563aee__700.jpg"" width=""300"" height=""350"">
			</div>
		</div>
	</div>
</body>
</html>"
61wLEvFU,neuron_2 C#,guydafny,C#,Wednesday 27th of March 2024 03:45:04 PM CDT,"using System.Text.Json;
namespace singleNeuron
{
    /// <summary>
    /// Interface representing a single neuron in an artificial neural network.
    /// </summary>
    public interface iNeuron {
        /// <summary>
        /// Calculates the weighted sum of the inputs and applies an activation function.
        /// </summary>
        /// <param name=""inputs"">Vector of input values</param>
        /// <returns>Activation results</returns>
        double Activate (List<double> inputs);

        /// <summary>
        /// Train the neuron to get the ""target"" value
        /// </summary>
        /// <param name=""inputs"">Vector of input values</param>
        /// <param name=""target"">The desired output for givven input</param>
        /// <param name=""learningRate"">The learning rate used to adjust weights and bias during training.</param>
        /// <returns>he absolute error between the predicted and target output</returns>
        double Train (List<double> inputs, double target, double learningRate); 

        /// <summary>
        /// list of weights for each input
        /// </summary>
        List <double> weights {get; set;}

        /// <summary>
        /// bias for fine tunning
        /// </summary>
        double bias {get; set;}

        /// <summary>
        /// maximum allowed error
        /// </summary>
        double maxError {get; set;}
    }

    /// <summary>
    /// Implementation for iNeuron
    /// </summary>
    public class Neuron:iNeuron
    {
        public List <double> weights {get; set;}
        public double bias {get; set;}
        private Random random = new Random();
        public double maxError {get; set;}

        /// <summary>
        /// Default constractor to be used with serilizers
        /// </summary>
        public Neuron():this(0.01) {
            
        }

        /// <summary>
        /// Initializes a new instance of the Neuron class with the specified maximum error.
        /// </summary>
        /// <param name=""_maxError"">maximum error.</param>
        public Neuron(double _maxError) {
            weights = new List<double> ();
            bias = random.NextDouble();
            maxError = _maxError;
        }

        public double Activate (List<double> inputs) {
            if (inputs.Count > weights.Count) {
                for (int i = weights.Count; i <inputs.Count; i++ ) {
                    weights.Add (random.NextDouble());
                }
            }
            double ans = 0;
            for (int i = 0; i < inputs.Count; i++) {
                ans += inputs[i] * weights[i];
            }
            ans += bias;
            return ans;
        }

        public double Train(List<double> inputs, double target, double learningRate)
        {
            double prediction = Activate(inputs);
            double error = target - prediction;

            if (Math.Abs(error) < maxError)
            {
                return 0;
            }
            double curError = 0;
            for (int i = 0; i < inputs.Count; i++)
            {
                double oldWeightValue = weights[i];
                weights[i] = oldWeightValue + learningRate * error;
                curError = target - Activate(inputs);

                if (Math.Abs(error) <= Math.Abs(curError))
                {
                    // Try if negative value works better
                    weights[i] = oldWeightValue - learningRate * error;
                    curError = target - Activate(inputs);
                    if (Math.Abs(error) < Math.Abs(curError))
                    {
                        weights[i] = oldWeightValue;
                    }
                }
            }

            double oldBias = bias;
            bias = oldBias + learningRate * error;
            curError = target - Activate(inputs);

            if (Math.Abs(error) > Math.Abs(curError))
            {
                // Keep new value
            }
            else
            {
                // Try the other side
                bias = oldBias - learningRate * error;
                curError = target - Activate(inputs);
                if (Math.Abs(error) < Math.Abs(curError))
                {
                    bias = oldBias;
                }
            }

            return Activate(inputs) - target;
        }
    }

    /// <summary>
    /// interface for neuron teacher
    /// </summary>
    public interface iTeacher {
        /// <summary>
        /// Teach the neuron how to...
        /// </summary>
        public void Teach();

        /// <summary>
        /// Test to see results
        /// </summary>
        /// <returns>total error</returns>
        public bool Test();

        /// <summary>
        /// adducated neuron(to be serialize for further usage)
        /// </summary>
        /// <value></value>
        public iNeuron neuron {get; set;}
    } 

    /// <summary>
    /// Class to be used with the teachers in order to teach and exam neyron
    /// </summary>
    public class TestData {
        public double target;
        public List<double> inputs;
        public TestData (double _target, List<double> _inputs) {
            target = _target;
            inputs = _inputs;
        }
    }

    /// <summary>
    /// simple implementation for iTeacher
    /// </summary>
    public class Teacher1:iTeacher { //this teacher will teach the neuron with success ... convert nibble into int. 
        public iNeuron neuron {get; set;}
        private const double learningRate = 0.1;
        private const double maxError = 0.01;
        private double total_err = 0;

        List<TestData> learningBook = new List<TestData>();

        public Teacher1() {
            neuron = new  Neuron(maxError);
            learningBook = new List<TestData>  {
                { (new TestData( 0, new List<double> {0,0,0,0}  ))},
                { (new TestData( 1, new List<double> {1,0,0,0}  ))},
                { (new TestData( 2, new List<double> {0,1,0,0}  ))},
                { (new TestData( 4, new List<double> {0,0,1,0}  ))},
                { (new TestData( 8, new List<double> {0,0,0,1}  ))}
            };
        }

        public void Teach () {
            for (int i = 0; i < 1000; i++) {
                total_err = 0;
                for (int j = 0; j <learningBook.Count; j++) {
                    total_err += Math.Abs( neuron.Train ( learningBook[j].inputs, learningBook[j].target,learningRate));
                }
                Console.WriteLine( $""{i}, {total_err}"");
                if (Math.Abs(total_err) < Math.Abs(maxError)) {break;}
            }
        }

        /// <summary>
        /// Well, code starts to be too long for late night playing so our neuron will always pass it's final exam
        /// </summary>
        /// <returns></returns>
        //FIXME: create real Test here
        public bool Test() {
            return true;
        }
    }

    public static class mainProgram
    {
        public static void Main()
        {
            iTeacher teacher = new Teacher1();
            teacher.Teach();
            //Console.WriteLine (JsonSerializer.Serialize(teacher.neuron));
            Console.WriteLine (teacher.neuron.Activate(new List<double> {0,0,0,0}));
        }
    }
}"
e8RZ49h3,Untitled,lemansky,HTML,Wednesday 27th of March 2024 03:43:25 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
	<meta charset=""UTF-8"">
	<title>Document</title>
	<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css"">
	<script>
		document.addEventListener(""DOMContentLoaded"", function(){
			
			
		});

	</script>
</head>
<body>
	<div class=""container"">
		<div class=""col-6"">
			<select name="""" id="""" class=""custom-select"">
				<option value="""">Изберете цвят</option>
				<option value=""btn-success"">зелен</option>
				<option value=""btn-danger"">червен</option>
				<option value=""btn-warning"">оранжев</option>
				<option value=""btn-primary"">син</option>
				
			</select>
			<div class=""container mt-3"">
				<div class=""form-group"">
					<input type=""button"" class=""btn"" id="""" value=""Смени"">

				</div>

			</div>
		</div>
	</div>
</body>
</html>"
EVkGa9Zh,iNeuron,guydafny,C#,Wednesday 27th of March 2024 03:36:45 PM CDT,"    public interface iNeuron {
        double Activate (List<double> inputs);
        double Train (List<double> inputs, double target, double learningRate); 
        List <double> weights {get; set;}
        double bias {get; set;}
        double maxError {get; set;}
    }
"
A7zdUYqG,led_matrix,Vladislav8653,C++,Wednesday 27th of March 2024 03:35:54 PM CDT,"#define NUM_LEDS 130
#include ""FastLED.h""
#define PIN 13
CRGB leds[NUM_LEDS];
byte counter = 0;
void setup() {
  FastLED.addLeds<WS2812, PIN, GRB>(leds, NUM_LEDS).setCorrection( TypicalLEDStrip );
  FastLED.setBrightness(50);
  pinMode(13, OUTPUT);
}
void loop() {
  //for (int i = 0; i < NUM_LEDS; i++ ) {         // от 0 до первой трети
  //  leds[i] = CHSV(counter + i * 2, 255, 255);  // HSV. Увеличивать HUE (цвет)
  //}
  
  leds[counter] = CHSV(0,0,255); 
  FastLED.show();
  leds[counter] = CHSV(0,0,0); 
  counter++;  
  if(counter == 130)
    counter = 0;      // counter меняется от 0 до 255 (тип данных byte)
  delay(5);         // скорость движения радуги
}"
SSdmGMLG,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 03:34:22 PM CDT,"class Solution{
public:
    vector<int> segment_tree, v;
    int gcd(int a, int b) {
        if(a < b) {
            swap(a, b);
        }
        while(b != 0) {
            int tmp = a % b;
            a = b;
            b = tmp;
        }
        return a;
    }
    void build(int L, int R, int pos) {
        if(L == R) {
            segment_tree[pos] = v[L];
        }
        else {
            int mid = (L + R) / 2;
            build(L, mid, 2 * pos);
            build(mid + 1, R, 2 * pos + 1);
            segment_tree[pos] = gcd(segment_tree[2 * pos], segment_tree[2 * pos + 1]);
        }
    }
    int query(int L, int R, int pos, int i, int j) {
        // L R i L R  j L R
        if(i <= L and R <= j) {
            return segment_tree[pos];
        }
        if(R < i or j < L) {
            return 0;
        }
        int mid = (L + R) / 2;
        return gcd(query(L, mid, 2 * pos, i, j), query(mid + 1, R, 2 * pos + 1, i, j));
    }
    int findSmallestSubArr(int arr[], int n, int g) {
        int ok = -1;
        v.resize(n);
        for(int i = 0; i < n; i++) {
            if(arr[i] == g) {
                return 1;
            }
            if(arr[i] % g == 0) {
                ok = 1;
            }
            v[i] = arr[i];
        }
        if(ok == -1) {
            return -1;
        }
        segment_tree.resize(4 * n);
        build(0, n - 1, 1);
        int res = 2e9;
        for(int i = 0; i < n; i++) {
            if(v[i] % g == 0) {
                int L = i + 1, R = n - 1;
                int idx = -1;
                while(L <= R) {
                    int mid = L + (R - L) / 2;
                    int gcd = query(0, n - 1, 1, i, mid);
                    if(gcd == g) {
                        R = mid - 1;
                        idx = mid;
                    }
                    else if(gcd > g) {
                        L = mid + 1;
                    }
                    else {
                        R = mid - 1;
                    }
                }
                if(idx != -1) {
                    res = min(res, idx - i + 1);
                }
            }
        }
        if(res == 2e9) {
            res = -1;
        }
        return res;
    }
};"
LRVrtKyN,Untitled,mzh_pb,C++,Wednesday 27th of March 2024 03:26:51 PM CDT,"#include <bits/stdc++.h>

using namespace std;

using ll = long long;

#define all(x) begin(x), end(x)
#define sz(x) static_cast<int>(size(x))

#define FOR(i, a, b) for (int i = a; i < (b); i++)
#define F0R(i, n) FOR(i, 0, n)
#define ROF(i, a, b) for (int i = (b) - 1; i >= a; i--)
#define R0F(i, n) ROF(i, 0, n)

template<typename T> bool ckmin(T &a, T b) { return b < a ? a = b, 1 : 0; }
template<typename T> bool ckmax(T &a, T b) { return b > a ? a = b, 1 : 0; }

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;
    vector<pair<int, int>> pts(n);
    for (auto &[x, y] : pts) {
        cin >> x >> y;
    }

    sort(all(pts));

    int ans = 0;

    F0R(dir, 2) {
        vector<int> y_coords;
        for (auto [_, y] : pts) {
            y_coords.push_back(y);
        }
        sort(all(y_coords));
        y_coords.resize(unique(all(y_coords)) - begin(y_coords));

        F0R(i, sz(y_coords)) {
            FOR(j, i, sz(y_coords)) {
                const int lo = y_coords[i], hi = y_coords[j];
                const int side = hi - lo + 1;

                map<int, vector<array<int, 3>>> mp;
                for (auto [x, y] : pts) {
                    if (y >= lo && y <= hi) {
                        mp[x].push_back({x, y, 0});
                        mp[x + side].push_back({x, y, 1});
                    }
                }

                int cnt_lo = 0, cnt_hi = 0;
                multiset<int> st;
                set<pair<int, int>> res;
                for (auto [_, v] : mp) {
                    for (auto [x, y, rem] : v) {
                        if (rem) {
                            cnt_lo -= y == lo;
                            cnt_hi -= y == hi;
                            st.erase(st.find(x));
                        } else {
                            cnt_lo += y == lo;
                            cnt_hi += y == hi;
                            st.insert(x);
                        }
                    }

                    if (cnt_lo && cnt_hi && (!dir || (*rbegin(st) - *begin(st)) + 1 != side)) {
                        res.emplace(*begin(st), *rbegin(st));
                    }
                }
                ans += sz(res);
            }
        }
        for (auto &[x, y] : pts) {
            swap(x, y);
        }
    }

    cout << ans + 1 << '\n';
}"
baYkbzgk,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 03:13:58 PM CDT,"typedef long long ll;
class Solution{
public:
    vector<int> segment_tree;
    vector<int> v;
    void build(int L, int R, int pos) {
        if(L == R) {
            segment_tree[pos] = v[L];
        }
        else {
            int middle = (L + R) / 2;
            build(L, middle, 2 * pos);
            build(middle + 1, R, 2 * pos + 1);
            segment_tree[pos] = segment_tree[2 * pos] ^ segment_tree[2 * pos + 1];
        }
    }
    int query(int L, int R, int pos, int i, int j) {
        // L R  i L R j L R
        if(i <= L and R <= j) {
            return segment_tree[pos];
        }
        if(R < i or j < L) {
            return 0;
            
        }
        int middle = (L + R) / 2;
        return query(L, middle, 2 * pos, i, j) ^ query(middle + 1, R, 2 * pos + 1, i, j);
    }
    vector<int> specialXor(int N, int Q, int a[], vector<int> q[])
    {
        segment_tree.resize(4 * N);
        v.resize(N);
        for(int i = 0; i < N; i++) {
            v[i] = a[i];
        }
        build(0, N - 1, 1);
        vector<int> ret;
        for(int i = 0; i < Q; i++) {
            int si = q[i][0] - 1, sj = q[i][1] - 1;
            ll res = query(0, N - 1, 1, 0, si - 1);
            res ^= query(0, N - 1, 1, sj + 1, N - 1);
            
            ret.push_back(res);
        }
        return ret;
    }
};"
zFH0tiAf,addDays,runnig,Python,Wednesday 27th of March 2024 02:58:19 PM CDT,"import datetime


def isLeapYear(year):
    return (year % 4 == 0) and (year % 100 != 0 or year % 400 == 0)

monthDays = {
    1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31,
}
def daysInMonth(year, month):
    if month == 2 and isLeapYear(year):
        return 29
    return monthDays[month]

def addDays(year:int, month:int, day:int, nDays:int) -> tuple[int, int, int]:
    outpYear, outpMonth, outpDay = year, month, day

    # First, increment full years
    if nDays >= 365:
        years = nDays // 365
        outpYear += years
        nDays -= years * 365

    # Second, increment months
    while nDays > 0:
        monthDays = daysInMonth(outpYear, outpMonth)
        # nDays beyond this month
        if nDays >= monthDays: 
            nDays -= monthDays
            outpMonth += 1
        # output date in the next month
        elif nDays + outpDay > monthDays:
            s = nDays + outpDay
            s -= monthDays
            outpDay = s
            nDays = 0
            outpMonth += 1
        else:
            outpDay += nDays
            nDays = 0
        # in the next month
        if outpMonth > 12: # next year
            outpMonth = 1
            outpYear += 1
        if outpDay == 0:
            outpDay = 1
    return outpYear, outpMonth, outpDay


for nDays in range(0, 365*3):
    computed = addDays(1970, 1, 1, nDays)
    computed_dt = datetime.date(computed[0], computed[1], computed[2])
    expected = datetime.date(1970, 1, 1) + datetime.timedelta(days=nDays)
    if computed_dt != expected:
        print(nDays, 'disagree', computed_dt, expected)"
tw9US9Kz,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 02:45:34 PM CDT,"class Solution {
public:
    vector<int> idx, sz;
    int root(int x) {
        while(x != idx[x]) {
            idx[x] = idx[idx[x]];
            x = idx[x];
        }
        return x;
    }
    void join(int a, int b) {
        int root_a = root(a);
        int root_b = root(b);
        if(root_a != root_b) {
            if(sz[root_a] > sz[root_b]) {
                idx[root_b] = idx[root_a];
                sz[root_a] += sz[root_b];
            }
            else {
                idx[root_a] = idx[root_b];
                sz[root_b] += sz[root_a];
            }
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = (int) isConnected.size();
        idx.resize(n);
        sz.resize(n);
        
        for(int i = 0; i < n; i++) {
            sz[i] = 1;
            idx[i] = i;
        }
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                if(isConnected[i][j] == 1) {
                    join(i, j);
                }
            }
        }
        set<int> st;
        for(int i = 0; i < n; i++) {
            st.insert(root(i));
        }
        return (int) st.size();
        
    }
};"
0w0HfEM7,Untitled,katerina-bonditka,Python,Wednesday 27th of March 2024 02:29:43 PM CDT,"registred_model_name = 'model_user_churn'

model_version_id_interc = 11 # номер зарегистрированной модели, обученной на пересечённых признаках
model_registred_name_interc = ""model_user_churn"" # название зарегистрированной модели
run_id_interc = ""28e37439cdc348869dfbae7d613c151b"" # run_id, в рамках которого была зарегистрирована модель, обученная на пересечённых признаках

model_version_id_union = 12 # номер зарегистрированной модели на объединённых признаках
model_registred_name_union = ""model_user_churn"" # название зарегистрированной модели
run_id_union = ""e4df50bd190846d0b9467ff99237252f"" # run_id, в рамках которого была зарегистрирована модель, обученная на пересечённых признаках"
BzmvEAYp,deepwoken asset stealer,Ossyence,Lua,Wednesday 27th of March 2024 02:28:53 PM CDT,"-- this is very scuffed lol

xpcall(function()
    local guuid = game.HttpService:GenerateGUID(false)
    local validDistance = 250
    local saveThrownOnly = false
    local saveWholeCharacters = false

    local notneeded = {
        ""WindTrail"",
        ""NewDirt"",
        ""WaterImpact"",
        ""Footprint""
    }

    getgenv().__snapshotNum = getgenv().__snapshotNum or 0

    local folder = nil
    local characterfolder = nil
    local thrownfolder = nil

    if getgenv().__assets == nil then
        folder = Instance.new(""Folder"")
    else
        folder = getgenv().__assets
        characterfolder = folder:FindFirstChild('Characters')
        thrownfolder = folder:FindFirstChild(""Thrown"")
    end

    if characterfolder == nil then
        characterfolder = Instance.new(""Folder"", folder)
        characterfolder.Name = ""Characters""
    end

    if thrownfolder == nil then
        thrownfolder = Instance.new('Folder', folder)
        thrownFolder.Name = ""Thrown""
    end

    getgenv().__assets = folder

    function clear()
        for _, asset in thrownfolder:GetChildren() do
            asset:Destroy()
        end

        for _, asset in characterfolder:GetChildren() do
            asset:Destroy()
        end

        warn(""cleared all assets"")
    end

    folder.Name = `{guuid}__{getgenv().__snapshotNum}`
    folder.Parent = game.MaterialService
    
    clear()

    local function disconnectIfExists(name)
        if getgenv()[name] ~= nil then
            getgenv()[name]:Disconnect()

            print(`disconnected connectiion: ""{name}""`)
        end
    end
    
    disconnectIfExists(""__uis_con"")
    disconnectIfExists(""__thrownchildadded"")
    disconnectIfExists(""__playeradded"")
    
    if getgenv().__playerconnections ~= nil then
        for playername, connections in getgenv().__playerconnections do
            connections.CharacterEffectAdded:Disconnect()
            connections.CharacterAdded:Disconnect()
        end

        getgenv().__playerconnections = {}
    end

    function iseffectvalid(effect)
        if table.find(notneeded, child.Name) then return false end

        local valid = false
        local cameraPos = workspace.CurrentCamera.Position

        if (child:IsA(""BasePart"") and (child.Position - cameraPos).Magnitude <= validDistance) then
            valid = true
        elseif (child:IsA(""Model"") and (child:GetPivot().Position - cameraPos).Magnitude <= validDistance) then
            valid = true
        elseif (child:IsA(""Motor6D"")) then
            valid = true
        end

        return valid
    end

    function connectPlayer(plr)
        xpcall(function()
            if saveThrownOnly then return end
            
            if getgenv().__playerconnections[plr.Name][""CharacterAdded""] ~= nil then
                getgenv().__playerconnections[plr.Name][""CharacterAdded""]:Disconnect()
            end

            local function disconnectEffectAdded()
                if getgenv().__playerconnections[plr.Name][""CharacterEffectAdded""] ~= nil then
                    getgenv().__playerconnections[plr.Name][""CharacterEffectAdded""]:Disconnect()
                end
            end

            local charfolder = characterfolder:FindFirstChild(plr.Name)

            if charfolder == nil then
                charfolder = Instance.new(""Folder"", characterfolder)
                charfolder.Name = plr.Name
            end

            disconnectEffectAdded()
            
            local function bindEffectAdded(char)
                xpcall(function()
                    disconnectEffectAdded()

                    getgenv().__playerconnections[plr.Name][""CharacterEffectAdded""] = char.DescendantAdded:Connect(child)
                        xpcall(function()
                            if iseffectvalid(child) then
                                if not saveWholeCharacters then
                                    local clone = child:Clone()
                                    clone.Parent = charfolder
                                    clone.Name = `{clone.Name}_{plr.Name}`
                                else
                                    char:Clone().Parent = charfolder
                                end

                                print(`STOLE: ""{child.Name}"" (Class: ""{child.ClassName}"") (Character: ""{plr.Name}"")`)
                            end
                        end, function(error)
                            print(error)
                        end)
                    end)
                end, function(error)
                    print(error)
                end)
            end

            if plr.Character ~= nil then
                bindEffectAdded(plr.Character)
            end

            getgenv().__playerconnections[plr.Name][""CharacterAdded""] = plr.CharacterAdded:Connect(bindEffectAdded)
        end, function(error)
            print(error)
        end)
    end

    for _, plr in game.Players:GetPlayers() do
        connectPlayer(plr)
    end

    getgenv().__playeradded = game.Players.PlayerAdded:Connect(connectPlayer)

    getgenv().__uis_con = game.UserInputService.InputBegan:Connect(function(IO, GPE)
        xpcall(function()
            if GPE then return end

            if IO.KeyCode == Enum.KeyCode.P then
                clear()
            elseif IO.KeyCode == Enum.KeyCode.L then
                getgenv().__snapshotNum += 1
                    
                xpcall(function()
                    saveinstance({folder}, {FileName = `DW_SNAPSHAT_{getgenv().__snapshotNum}`, IgnoreArchivable = true, DisableCompression = true})
                    folder.Name = `{guuid}__{getgenv().__snapshotNum}`
                    
                    warn(`snapshot {getgenv().__snapshotNum} saved`)
                end, function(error)
                    warn(`snapshot failed: {error}`)
                end)
            end
        end, function(error)
            print(error)
        end)
    end)

    getgenv().__thrownchildadded = workspace.Thrown.ChildAdded:Connect(function(child)
        xpcall(function()
            if iseffectvalid(child) then
                child:Clone().Parent = folder

                print(`STOLE: ""{child.Name}"" (Class: ""{child.ClassName}"") (Thrown)`)
            end
        end, function(error)
            print(error)
        end)
    end)

    print(""asset grabber successfully injected"")
end, function(error)
    print(error)
end)"
888fMjEE,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 02:28:41 PM CDT,"#include <stdio.h>

int main() {
        int n;
        scanf(""%d"", &n);

        int niza[n];

        for(int i = 0; i < n; i++) {
            scanf(""%d"", &niza[i]);
        }
    printf(""Broevite "");
    for(int i = 0; i < n; i++) {
        int broj_na_deliteli = 0;
        for(int j = 1; j <= niza[i]; j++) {
            if(niza[i] % j == 0) {
                broj_na_deliteli++;
            }
        }
        if(broj_na_deliteli <= 2) {
            printf(""%d "", niza[i]);
        }

        
    }
    printf("" se PROSTI\n"");

    printf(""Slozheni broevi se: "");
    for(int i = 0; i < n; i++) {
        int broj_na_deliteli = 0;
        for(int j = 1; j <= niza[i]; j++) {
            if(niza[i] % j == 0) {
                broj_na_deliteli++;
            }
        }
        if(broj_na_deliteli > 2) {
            printf(""%d "", niza[i]);
        }

        
    }
    printf(""\n"");
      return 0;
}"
w1UwqeMK,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 02:25:40 PM CDT,"#include <stdio.h>

int main() {
        int n;
        scanf(""%d"", &n);

        int niza[n];

        for(int i = 0; i < n; i++) {
            scanf(""%d"", &niza[i]);
        }
    
    for(int i = 0; i < n; i++) {
        int broj_na_deliteli = 0;
        for(int j = 1; j <= niza[i]; j++) {
            if(niza[i] % j == 0) {
                broj_na_deliteli++;
            }
        }

        if(broj_na_deliteli <= 2) {
            printf(""Brojot %d e PROST\n"", niza[i]);
        }
        else {
            printf(""Brojot %d e SLOZHEN\n"", niza[i]);
        }
    }
      return 0;
}"
Kda7uTmw,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 02:20:26 PM CDT,"#include <stdio.h>

int main() {
        int n;
        scanf(""%d"", &n);

        int niza[n];

        for(int i = 0; i < n; i++) {
            scanf(""%d"", &niza[i]);
        }
    int najmal_element = niza[0], indeks_najmal = 0;
    int najgolem_element = niza[0], indeks_najgolem = 0;

    for(int i = 0; i < n; i++) {
        if(niza[i] > najgolem_element) {
            najgolem_element = niza[i];
            indeks_najgolem = i;
        }

        if(niza[i] < najmal_element) {
            najmal_element = niza[i];
            indeks_najmal = i;
        }
    }

    for(int i = indeks_najmal + 1; i < indeks_najgolem; i++) {
        printf(""%d "", niza[i]);
    }
      return 0;
}"
iR8ZWyKx,ImageCluster,Mat4297,Python,Wednesday 27th of March 2024 02:15:17 PM CDT,"from sklearn.cluster import KMeans
from PIL import Image
import numpy as np
import matplotlib.pyplot as plt
from collections import Counter
from matplotlib.ticker import AutoMinorLocator, MaxNLocator
import webcolors


class ImageCluster:
    def __init__(self, image_path, n_clusters=5, remove_low_alpha=True):
        # Inizializzazione della classe con il percorso dell'immagine, il numero di cluster e un flag per rimuovere i pixel con bassa trasparenza
        self.image_path = image_path
        self.n_clusters = n_clusters
        self.remove_low_alpha = remove_low_alpha

        # Apertura dell'immagine e conversione in formato RGBA
        self.img = Image.open(self.image_path).convert(""RGBA"")

        # Conversione dell'immagine in un array numpy e ridimensionamento in un array 2D
        self.img_array = np.array(self.img)
        self.data = self.img_array.reshape(-1, 4)

        # Inizializzazione di variabili che verranno utilizzate in seguito
        self.clustered_img = None
        self.labels = None
        self.center_colors = None
        self.hex_colors = None
        self.rgb_colors = None
        self.unique_clusters = None
        self.counts = None
        self.total_pixels = None
        self.cluster_percentages = None
        self.clusters_percentages_colors = None
        self.counts_dict = None
        self.ordered_colors = None
        self.color_names = None

        self.ordered_clusters = None
        self.ordered_percentages = None
        self.ordered_colors = None
        self.ordered_counts = None

    def filter_alpha(self):
        if self.remove_low_alpha:
            mask = self.data[:, 3] >= 125
            self.data = self.data[mask]
        else:
            mask = np.ones(self.data.shape[0], dtype=bool)
        return mask

    def cluster(self):
        # Applicazione del filtro alpha prima di eseguire il clustering
        mask = self.filter_alpha()

        # Esecuzione dell'algoritmo K-Means sull'array 2D
        kmeans = KMeans(n_clusters=self.n_clusters, random_state=0)
        self.labels = kmeans.fit_predict(self.data)

        # Salvataggio dei colori dei centri dei cluster
        self.center_colors = kmeans.cluster_centers_

        # Sostituzione dell'immagine originale con l'immagine clusterizzata
        self.clustered_img = np.zeros_like(self.img_array)
        labels_full = np.full(mask.shape[0], -1)
        labels_full[mask] = self.labels
        for i in range(self.img_array.shape[0]):
            for j in range(self.img_array.shape[1]):
                if labels_full[i * self.img_array.shape[1] + j] != -1:
                    self.clustered_img[i, j] = self.center_colors[
                        labels_full[i * self.img_array.shape[1] + j]
                    ]
                else:
                    self.clustered_img[i, j] = [
                        255,
                        255,
                        255,
                        0,
                    ]  # white or transparent

        # Calcolo del numero di pixel in ogni cluster e della percentuale di pixel che ogni cluster rappresenta nell'immagine totale
        self.unique_clusters, self.counts = np.unique(self.labels, return_counts=True)
        self.counts_dict = dict(zip(self.unique_clusters, self.counts))
        self.ordered_colors = [self.center_colors[i] for i in self.counts_dict.keys()]
        self.total_pixels = np.prod(self.img_array.shape[:2])
        self.cluster_percentages = (self.counts / len(self.data)) * 100  # Percentages
        # Creazione di una lista di tuple, dove ogni tupla contiene il cluster, la percentuale, il conteggio e il colore del centro del cluster
        self.clusters_percentages_counts_colors = list(
            zip(
                self.unique_clusters,
                self.cluster_percentages,
                self.counts,
                self.center_colors,
            )
        )
        # Ordinamento della lista in base alla percentuale, in ordine decrescente
        self.clusters_percentages_counts_colors.sort(key=lambda x: x[1], reverse=True)
        # Separazione dei cluster, delle percentuali, dei conteggi e dei colori in quattro liste separate
        (
            self.ordered_clusters,
            self.ordered_percentages,
            self.ordered_counts,
            self.ordered_colors,
        ) = zip(*self.clusters_percentages_counts_colors)

    def rgb_to_hex(self, color):
        return ""#{:02x}{:02x}{:02x}"".format(int(color[0]), int(color[1]), int(color[2]))

    def rgba_to_hex(self, color):
        return ""#{:02x}{:02x}{:02x}{:02x}"".format(
            int(color[0]), int(color[1]), int(color[2]), int(color[3])
        )

    def hex_to_rgb(self, hex_color):
        # Rimuove il carattere '#' se presente
        hex_color = hex_color.lstrip(""#"")
        # Converte l'esadecimale in RGB
        return tuple(int(hex_color[i : i + 2], 16) for i in (0, 2, 4))

    def HEX_COLORS(self):
        self.hex_colors = [
            self.rgba_to_hex(self.ordered_colors[i]) for i in self.counts_dict.keys()
        ]

    def RGB_COLORS(self):
        return [self.ordered_colors[i] for i in self.counts_dict.keys()]

    def get_color_names(self):
        self.color_names = [
            self.closest_color(
                tuple(map(int, webcolors.hex_to_rgb(""#"" + color[1:7])[0:3]))
            )
            for color in self.hex_colors
        ]

    def closest_color(self, requested_color):
        min_colors = {}
        for key, name in webcolors.CSS3_HEX_TO_NAMES.items():
            r_c, g_c, b_c = webcolors.hex_to_rgb(key)
            rd = (r_c - requested_color[0]) ** 2
            gd = (g_c - requested_color[1]) ** 2
            bd = (b_c - requested_color[2]) ** 2
            min_colors[(rd + gd + bd)] = name
        return min_colors[min(min_colors.keys())]

    def calculate_brightness(self, color):
        # Converti il colore da hex a RGB prima
        # color = [int(color[i : i + 2], 16) for i in (0, 2, 4)]
        # Calcola la luminosità come la media dei valori RGB
        return sum(color) / (3 * 255)

    def plot_original_image(self):
        plt.imshow(self.img_array)
        plt.title(""Original Image"")
        plt.axis(""off"")
        plt.tight_layout()

    def plot_clustered_image(self):
        plt.imshow(self.clustered_img)
        plt.title(""Clustered Image ({} clusters)"".format(self.n_clusters))
        plt.axis(""off"")
        plt.tight_layout()

    def plot_clustered_image_grid(self): #usa labels per etichette e ordine è quello di immagine iniziale come plot
        # Crea una griglia vuota con le stesse dimensioni dell'immagine clusterizzata
        grid = np.zeros((self.img_array.shape[0], self.img_array.shape[1]))

        # Crea un array di etichette con la stessa forma dell'immagine originale
        labels_full = np.full((self.img_array.shape[0] * self.img_array.shape[1]), -1)

        # Crea un indice numerico che corrisponda ai pixel con un valore alfa alto in labels_full
        if self.remove_low_alpha:
            alpha_high_index = np.where(self.img_array.reshape(-1, 4)[:, 3] >= 125)[0]
        else:
            alpha_high_index = np.where(self.img_array.reshape(-1, 4)[:, 3])[0]

        # Riempie l'array di etichette con le etichette dei cluster solo per i pixel con un valore alfa alto
        labels_full[alpha_high_index] = self.labels

        # Ridimensiona l'array di etichette per corrispondere alla forma dell'immagine originale
        labels_full = labels_full.reshape(self.img_array.shape[0], self.img_array.shape[1])

        # Per ogni cluster, riempi le celle corrispondenti della griglia con l'indice del cluster
        for i, cluster in enumerate(self.unique_clusters):
            grid[labels_full == cluster] = i

        # Visualizza la griglia
        plt.imshow(grid, cmap=""nipy_spectral"")
        plt.title(""Clustered Image Grid ({} clusters)"".format(self.n_clusters))
        plt.axis(""off"")
        plt.colorbar(label=""Cluster Index"")
        plt.tight_layout()

    def plot_images(self):
        plt.subplot(1, 2, 1)
        self.plot_original_image()
        plt.subplot(1, 2, 2)
        self.plot_clustered_image()
        plt.tight_layout()

    def plot_cluster_percentages(self):
        bars = plt.bar(
            x=self.unique_clusters,
            height=self.cluster_percentages,
            color=(self.center_colors / 255),
            edgecolor=""black"",
        )
        plt.bar_label(
            bars, [f""{perc:.1f}%"" for perc in self.cluster_percentages]
        )  # Format percentages with 1 decimal place
        plt.xlabel(""Cluster"")
        plt.ylabel(""Percentage (%)"")
        plt.title(""Percentage of Pixels in each Cluster"")
        # Imposta l'asse x per avere solo numeri interi
        plt.gca().xaxis.set_major_locator(MaxNLocator(integer=True))
        plt.tight_layout()

    def plot_pie_chart(self):
        # Normalizza i colori ordinati
        normalized_colors = [(color / 255).tolist() for color in self.ordered_colors]

        # Crea il grafico a torta
        patches, texts, autotexts = plt.pie(
            self.ordered_counts,
            labels=self.ordered_counts,
            colors=normalized_colors,
            autopct='%1.1f%%',
            startangle=140
        )
        # Colora i labels in base alla luminosità del colore
        for i in range(len(self.ordered_colors)):
            brightness = self.calculate_brightness(
                self.ordered_colors[i])
            if brightness < 0.75:
                autotexts[i].set_color(""white"")

        plt.axis('equal')  # Assicura che il grafico sia disegnato come un cerchio.
        plt.tight_layout()

    def plot_bar_chart(self):
        bottom = 0
        for i, color, percentage in zip(
            self.ordered_clusters, self.ordered_colors, self.ordered_percentages
        ):
            plt.bar(
                x=""color"",
                height=percentage,
                color=np.array(color) / 255,
                bottom=bottom,
            )
            brightness = self.calculate_brightness(color)
            text_color = ""white"" if brightness < 0.75 else ""black""
            plt.text(
                ""color"",
                bottom + percentage / 2,
                f""{self.counts_dict[i]}"",
                ha=""center"",
                va=""center"",
                color=text_color,
            )
            plt.gca().yaxis.set_minor_locator(AutoMinorLocator())
            bottom += percentage
        plt.gca().spines[""top""].set_visible(False)
        plt.gca().spines[""right""].set_visible(False)
        plt.gca().spines[""bottom""].set_visible(False)
        plt.gca().spines[""left""].set_visible(True)
        plt.gca().axes.xaxis.set_visible(False)
        plt.tight_layout()"
D0mkuMXC,Bot8,Fristicool,Python,Wednesday 27th of March 2024 02:13:45 PM CDT,"def make_dictionary(stringTable):
    tmpDictionary = {}

    moves = stringTable.split(""\n"")

    for move in moves:
        original = move.split("":"")[0]
        result = move.split("":"")[1]
        tmpDictionary.update({original: result})

    return tmpDictionary

moveDictionary = {}

stringTable = """"""0,1,0,1:0,1,0,2
1,0,1,0:1,0,1,1
0,1,0,2:0,1,0,3
1,0,2,0:1,0,2,1
0,1,0,3:0,1,1,3
1,0,3,0:1,0,3,1
0,1,0,4:0,1,0,0
1,0,4,0:1,0,0,0
0,1,1,0:0,1,1,1
1,0,0,1:1,0,0,2
0,1,1,1:0,1,1,2
1,0,1,1:1,0,1,2
0,1,1,2:0,1,1,3
1,0,2,1:1,0,2,2
0,1,1,3:0,1,2,3
1,0,3,1:1,0,3,2
0,1,1,4:0,1,1,0
1,0,4,1:1,0,0,1
0,1,2,0:0,1,2,1
1,0,0,2:1,0,0,3
0,1,2,1:0,1,2,2
1,0,1,2:1,0,1,3
0,1,2,2:0,1,2,3
1,0,2,2:1,0,2,3
0,1,2,3:0,1,3,3
1,0,3,2:1,0,3,3
0,1,2,4:0,1,2,0
1,0,4,2:1,0,0,2
0,1,3,0:0,1,3,1
1,0,0,3:1,0,1,3
0,1,3,1:0,1,3,2
1,0,1,3:1,0,2,3
0,1,3,2:0,1,3,3
1,0,2,3:1,0,3,3
0,1,3,3:0,1,3,4
1,0,3,3:1,0,3,4
0,1,3,4:0,1,3,0
1,0,4,3:1,0,0,3
0,1,4,0:0,1,0,0
1,0,0,4:1,0,0,0
0,1,4,1:0,1,0,1
1,0,1,4:1,0,1,0
0,1,4,2:0,1,0,2
1,0,2,4:1,0,2,0
0,1,4,3:0,1,0,3
1,0,3,4:1,0,3,0
0,1,4,4:0,1,4,0
1,0,4,4:1,0,4,0
0,2,0,1:1,1,0,1
2,0,1,0:1,1,1,0
0,2,0,2:1,1,0,2
2,0,2,0:1,1,2,0
0,2,0,3:0,2,0,0
2,0,3,0:2,0,0,0
0,2,0,4:0,2,0,1
2,0,4,0:2,0,1,0
0,2,1,0:1,1,1,0
2,0,0,1:1,1,0,1
0,2,1,1:1,1,1,1
2,0,1,1:1,1,1,1
0,2,1,2:1,1,1,2
2,0,2,1:1,1,2,1
0,2,1,3:0,2,1,0
2,0,3,1:2,0,0,1
0,2,1,4:1,1,1,4
2,0,4,1:1,1,4,1
0,2,2,0:1,1,2,0
2,0,0,2:1,1,0,2
0,2,2,1:1,1,2,1
2,0,1,2:1,1,1,2
0,2,2,2:1,1,2,2
2,0,2,2:1,1,2,2
0,2,2,3:1,1,2,3
2,0,3,2:1,1,3,2
0,2,2,4:0,2,2,1
2,0,4,2:2,0,1,2
0,2,3,0:0,2,0,0
2,0,0,3:2,0,0,0
0,2,3,1:0,2,0,1
2,0,1,3:2,0,1,0
0,2,3,2:1,1,3,2
2,0,2,3:1,1,2,3
0,2,3,3:1,1,3,3
2,0,3,3:1,1,3,3
0,2,3,4:0,2,0,4
2,0,4,3:2,0,4,0
0,2,4,0:0,2,1,0
2,0,0,4:2,0,0,1
0,2,4,1:1,1,4,1
2,0,1,4:1,1,1,4
0,2,4,2:0,2,1,2
2,0,2,4:2,0,2,1
0,2,4,3:0,2,4,0
2,0,3,4:2,0,0,4
0,2,4,4:0,2,4,1
2,0,4,4:2,0,4,1
0,3,0,1:1,2,0,1
3,0,1,0:1,2,1,0
0,3,0,2:0,3,0,0
3,0,2,0:3,0,0,0
0,3,0,3:0,3,0,1
3,0,3,0:3,0,1,0
0,3,0,4:1,2,0,4
3,0,4,0:1,2,4,0
0,3,1,0:1,2,1,0
3,0,0,1:1,2,0,1
0,3,1,1:1,2,1,1
3,0,1,1:1,2,1,1
0,3,1,2:0,3,1,0
3,0,2,1:3,0,0,1
0,3,1,3:1,2,1,3
3,0,3,1:1,2,3,1
0,3,1,4:1,2,1,4
3,0,4,1:1,2,4,1
0,3,2,0:0,3,0,0
3,0,0,2:3,0,0,0
0,3,2,1:0,3,0,1
3,0,1,2:3,0,1,0
0,3,2,2:1,2,2,2
3,0,2,2:1,2,2,2
0,3,2,3:1,2,2,3
3,0,3,2:1,2,3,2
0,3,2,4:1,2,2,4
3,0,4,2:1,2,4,2
0,3,3,0:0,3,1,0
3,0,0,3:3,0,0,1
0,3,3,1:1,2,3,1
3,0,1,3:1,2,1,3
0,3,3,2:1,2,3,2
3,0,2,3:1,2,2,3
0,3,3,3:0,3,3,1
3,0,3,3:3,0,3,1
0,3,3,4:0,3,1,4
3,0,4,3:3,0,4,1
0,3,4,0:1,2,4,0
3,0,0,4:1,2,0,4
0,3,4,1:1,2,4,1
3,0,1,4:1,2,1,4
0,3,4,2:1,2,4,2
3,0,2,4:1,2,2,4
0,3,4,3:0,3,4,1
3,0,3,4:3,0,1,4
0,3,4,4:1,2,4,4
3,0,4,4:1,2,4,4
2,2,0,1:1,3,0,1
2,2,1,0:1,3,1,0
2,2,0,2:1,3,0,2
2,2,2,0:1,3,2,0
2,2,0,3:2,2,0,0
2,2,3,0:2,2,0,0
2,2,0,4:2,2,0,1
2,2,4,0:2,2,1,0
2,2,1,1:1,3,1,1
2,2,1,2:2,2,1,4
2,2,2,1:2,2,2,3
2,2,1,3:2,2,1,0
2,2,3,1:2,2,0,1
2,2,1,4:1,3,1,4
2,2,4,1:1,3,4,1
2,2,2,2:1,3,2,2
2,2,2,3:1,3,2,3
2,2,3,2:1,3,3,2
2,2,2,4:2,2,2,1
2,2,4,2:2,2,1,2
2,2,3,3:1,3,3,3
2,2,3,4:1,3,3,4
2,2,4,3:1,3,4,3
2,2,4,4:1,3,4,4
2,3,0,1:2,3,0,3
3,2,1,0:3,2,3,0
2,3,0,2:2,3,0,0
3,2,2,0:3,2,0,0
2,3,0,3:2,3,0,0
3,2,3,0:3,2,0,0
2,3,0,4:2,3,0,1
3,2,4,0:3,2,1,0
2,3,1,0:2,3,3,0
3,2,0,1:3,2,0,3
2,3,1,1:1,4,1,1
3,2,1,1:1,4,1,1
3,4,0,1:3,4,0,0
4,3,1,0:4,3,0,0
3,4,0,2:3,4,0,0
4,3,2,0:4,3,0,0
3,4,0,3:3,4,0,1
4,3,3,0:4,3,1,0
3,4,0,4:3,4,0,3
4,3,4,0:4,3,3,0
3,4,1,0:3,4,0,0
4,3,0,1:4,3,0,0
3,4,1,1:3,4,1,0
4,3,1,1:4,3,1,0
3,4,1,2:3,4,1,0
4,3,2,1:4,3,0,1
3,4,1,3:3,4,1,2
4,3,3,1:4,3,3,0
3,4,1,4:3,4,1,2
4,3,4,1:4,3,2,1
3,4,2,0:3,4,0,0
4,3,0,2:4,3,0,0
3,4,2,1:3,4,0,1
4,3,1,2:4,3,1,0
3,4,2,2:3,4,2,1
4,3,2,2:4,3,2,1
3,4,2,3:3,4,2,1
4,3,3,2:4,3,3,0
3,4,2,4:3,4,2,3
4,3,4,2:4,3,4,0
3,4,3,0:3,4,1,0
4,3,0,3:4,3,0,1
3,4,3,1:3,4,3,0
4,3,1,3:4,3,1,2
3,4,3,2:3,4,3,0
4,3,2,3:4,3,2,1
3,4,3,3:1,1,3,3
4,3,3,3:1,1,3,3
1,2,0,1:3,0,0,1
2,1,1,0:3,0,1,0
1,2,0,2:1,2,0,4
2,1,2,0:2,1,2,1
1,2,0,3:1,2,0,0
2,1,3,0:2,1,0,0
1,2,0,4:1,2,0,0
2,1,4,0:2,1,0,0
1,2,1,0:3,0,1,0
2,1,0,1:3,0,0,1
1,2,1,1:3,0,1,1
2,1,1,1:3,0,1,1
1,2,1,2:1,2,1,4
2,1,2,1:2,1,2,2
1,2,1,3:1,2,1,0
2,1,3,1:2,1,0,1
1,2,1,4:1,2,1,0
2,1,4,1:2,1,0,1
1,2,2,0:1,2,2,2
2,1,0,2:2,1,1,2
1,2,2,1:1,2,2,3
2,1,1,2:2,1,1,3
1,2,2,2:1,2,2,4
2,1,2,2:2,1,2,3
1,2,2,3:1,2,2,0
2,1,3,2:2,1,4,2
1,2,2,4:1,2,2,1
2,1,4,2:2,1,0,2
1,2,3,0:1,2,0,0
2,1,0,3:2,1,0,0
1,2,3,1:1,2,0,1
2,1,1,3:2,1,1,0
1,2,3,2:1,2,0,2
2,1,2,3:2,1,2,4
1,2,3,3:1,2,3,0
2,1,3,3:2,1,3,4
0,4,0,1:0,4,0,0
4,0,1,0:4,0,0,0
0,4,0,2:1,3,0,2
4,0,2,0:1,3,2,0
0,4,0,3:1,3,0,3
4,0,3,0:1,3,3,0
0,4,0,4:0,4,0,3
4,0,4,0:4,0,3,0
0,4,1,0:0,4,0,0
4,0,0,1:4,0,0,0
0,4,1,1:1,3,1,1
4,0,1,1:1,3,1,1
0,4,1,2:2,2,1,2
4,0,2,1:2,2,2,1
0,4,1,3:0,4,0,3
4,0,3,1:4,0,3,0
0,4,1,4:1,3,1,4
4,0,4,1:1,3,4,1
0,4,2,0:1,3,2,0
4,0,0,2:1,3,0,2
0,4,2,1:2,2,2,1
4,0,1,2:2,2,1,2
0,4,2,2:1,3,2,2
4,0,2,2:1,3,2,2
0,4,2,3:1,3,2,3
4,0,3,2:1,3,3,2
0,4,2,4:2,2,2,4
4,0,4,2:2,2,4,2
0,4,3,0:1,3,3,0
4,0,0,3:1,3,0,3
0,4,3,1:0,4,3,0
4,0,1,3:4,0,0,3
0,4,3,2:1,3,3,2
4,0,2,3:1,3,2,3
0,4,3,3:1,3,3,3
4,0,3,3:1,3,3,3
2,4,0,1:3,3,0,1
4,2,1,0:3,3,1,0
2,4,0,2:2,4,0,1
4,2,2,0:4,2,1,0
2,4,0,3:2,4,0,0
4,2,3,0:4,2,0,0
2,4,0,4:2,4,0,3
4,2,4,0:4,2,1,0
2,4,1,0:3,3,1,0
4,2,0,1:3,3,0,1
2,4,1,1:3,3,1,1
4,2,1,1:3,3,1,1
2,4,1,2:3,3,1,2
4,2,2,1:3,3,2,1
2,4,1,3:2,4,0,3
4,2,3,1:4,2,0,1
2,4,1,4:3,3,1,4
4,2,4,1:3,3,4,1
2,4,2,0:2,4,1,0
4,2,0,2:4,2,0,1
2,4,2,1:3,3,2,1
4,2,1,2:3,3,1,2
2,4,2,2:1,0,2,2
4,2,2,2:1,0,2,2
2,4,2,3:1,0,2,3
4,2,3,2:1,0,3,2
2,4,2,4:3,3,2,4
4,2,4,2:3,3,4,2
2,4,3,0:2,4,0,0
4,2,0,3:4,2,0,0
2,4,3,1:2,4,3,0
4,2,1,3:4,2,1,0
2,4,3,2:1,0,3,2
4,2,2,3:1,0,2,3
2,4,3,3:2,4,3,0
4,2,3,3:4,2,3,0
1,2,3,4:1,2,3,1
2,1,4,3:2,1,4,4
1,2,4,0:1,2,0,0
2,1,0,4:2,1,0,0
1,2,4,1:1,2,0,1
2,1,1,4:2,1,1,0
1,2,4,2:1,2,4,4
2,1,2,4:2,1,2,0
1,2,4,3:1,2,4,0
2,1,3,4:2,1,4,4
1,2,4,4:3,0,4,4
2,1,4,4:3,0,4,4
1,3,0,1:2,2,0,1
3,1,1,0:2,2,1,0
1,3,0,2:1,3,0,0
3,1,2,0:3,1,0,0
1,3,0,3:4,0,0,3
3,1,3,0:4,0,3,0
1,3,0,4:1,3,0,0
3,1,4,0:3,1,0,0
1,3,1,0:2,2,1,0
3,1,0,1:2,2,0,1
1,3,1,1:2,2,1,1
3,1,1,1:2,2,1,1
1,3,1,2:2,2,1,2
3,1,2,1:2,2,2,1
1,3,1,3:2,2,1,3
3,1,3,1:2,2,3,1
1,3,1,4:1,3,1,0
3,1,4,1:3,1,0,1
1,3,2,0:1,3,0,0
3,1,0,2:3,1,0,0
1,3,2,1:2,2,2,1
3,1,1,2:2,2,1,2
1,3,2,2:2,2,2,2
3,1,2,2:2,2,2,2
0,4,3,4:1,3,3,4
4,0,4,3:1,3,4,3
0,4,4,0:0,4,3,0
4,0,0,4:4,0,0,3
0,4,4,1:1,3,4,1
4,0,1,4:1,3,1,4
0,4,4,2:2,2,4,2
4,0,2,4:2,2,2,4
0,4,4,3:1,3,4,3
4,0,3,4:1,3,3,4
0,4,4,4:1,3,4,4
4,0,4,4:1,3,4,4
1,1,0,1:1,1,0,2
1,1,1,0:1,1,1,1
1,1,0,2:1,1,0,3
1,1,2,0:1,1,2,1
1,1,0,3:1,1,0,4
1,1,3,0:1,1,3,1
1,1,0,4:1,1,0,0
1,1,4,0:1,1,0,0
1,1,1,1:1,1,1,2
1,1,1,2:1,1,1,3
1,1,2,1:1,1,2,2
1,1,1,3:1,1,1,4
1,1,3,1:1,1,3,2
1,1,1,4:1,1,1,0
1,1,4,1:1,1,0,1
1,1,2,2:1,1,2,3
1,1,2,3:1,1,3,3
1,1,3,2:1,1,3,3
1,1,2,4:1,1,2,0
1,1,4,2:1,1,0,2
1,1,3,3:1,1,3,4
1,1,3,4:1,1,3,0
1,1,4,3:1,1,0,3
1,1,4,4:1,1,4,0
1,4,1,2:2,3,1,2
4,1,2,1:2,3,2,1
1,4,1,3:1,4,0,3
4,1,3,1:4,1,3,0
1,4,1,4:2,3,1,4
4,1,4,1:2,3,4,1
1,4,2,0:1,4,3,0
4,1,0,2:4,1,0,3
1,4,2,1:2,3,2,1
4,1,1,2:2,3,1,2
1,4,2,2:2,3,2,2
4,1,2,2:2,3,2,2
1,4,2,3:2,3,2,3
4,1,3,2:2,3,3,2
1,4,2,4:2,3,2,4
4,1,4,2:2,3,4,2
1,4,3,0:2,3,3,0
4,1,0,3:2,3,0,3
1,4,3,1:1,4,3,0
4,1,1,3:4,1,0,3
1,4,3,2:2,3,3,2
4,1,2,3:2,3,2,3
1,4,3,3:1,4,3,2
4,1,3,3:4,1,3,4
1,4,3,4:1,4,3,0
4,1,4,3:4,1,0,3
1,4,4,0:1,4,0,0
4,1,0,4:4,1,0,0
1,4,4,1:2,3,4,1
4,1,1,4:2,3,1,4
1,4,4,2:2,3,4,2
4,1,2,4:2,3,2,4
1,4,4,3:1,4,0,3
4,1,3,4:4,1,3,0
1,4,4,4:2,3,4,4
4,1,4,4:2,3,4,4
1,3,2,3:2,2,2,3
3,1,3,2:2,2,3,2
1,3,2,4:2,2,2,4
3,1,4,2:2,2,4,2
1,3,3,0:4,0,3,0
3,1,0,3:4,0,0,3
1,3,3,1:2,2,3,1
3,1,1,3:2,2,1,3
1,3,3,2:2,2,3,2
3,1,2,3:2,2,2,3
1,3,3,3:2,2,3,3
3,1,3,3:2,2,3,3
1,3,3,4:2,2,3,4
3,1,4,3:2,2,4,3
1,3,4,0:1,3,0,0
3,1,0,4:3,1,0,0
1,3,4,1:1,3,0,1
3,1,1,4:3,1,1,0
1,3,4,2:2,2,4,2
3,1,2,4:2,2,2,4
1,3,4,3:2,2,4,3
3,1,3,4:2,2,3,4
1,3,4,4:2,2,4,4
3,1,4,4:2,2,4,4
1,4,0,1:1,4,0,0
4,1,1,0:4,1,0,0
1,4,0,2:1,4,0,3
4,1,2,0:4,1,3,0
1,4,0,3:2,3,0,3
4,1,3,0:2,3,3,0
1,4,0,4:1,4,0,0
4,1,4,0:4,1,0,0
1,4,1,0:1,4,0,0
4,1,0,1:4,1,0,0
1,4,1,1:2,3,1,1
4,1,1,1:2,3,1,1
2,3,1,2:2,3,1,0
3,2,2,1:3,2,0,1
2,3,1,3:2,3,1,0
3,2,3,1:3,2,0,1
2,3,1,4:1,4,1,4
3,2,4,1:1,4,4,1
2,3,2,0:2,3,0,0
3,2,0,2:3,2,0,0
2,3,2,1:2,3,0,1
3,2,1,2:3,2,1,0
2,3,2,2:1,4,2,2
3,2,2,2:1,4,2,2
2,3,2,3:2,3,0,3
3,2,3,2:3,2,3,0
2,3,2,4:1,4,2,4
3,2,4,2:1,4,4,2
2,3,3,0:2,3,0,0
3,2,0,3:3,2,0,0
2,3,3,1:2,3,0,1
3,2,1,3:3,2,1,0
2,3,3,2:2,3,3,0
3,2,2,3:3,2,0,3
2,3,3,3:2,3,3,0
3,2,3,3:3,2,3,0
2,3,3,4:1,4,3,4
3,2,4,3:1,4,4,3
2,3,4,0:2,3,1,0
3,2,0,4:3,2,0,1
2,3,4,1:1,4,4,1
3,2,1,4:1,4,1,4
2,3,4,2:1,4,4,2
3,2,2,4:1,4,2,4
2,3,4,3:1,4,4,3
3,2,3,4:1,4,3,4
2,3,4,4:1,4,4,4
3,2,4,4:1,4,4,4
2,4,3,4:3,3,3,4
4,2,4,3:3,3,4,3
2,4,4,0:2,4,3,0
4,2,0,4:4,2,0,1
2,4,4,1:3,3,4,1
4,2,1,4:3,3,1,4
2,4,4,2:3,3,4,2
4,2,2,4:3,3,2,4
2,4,4,3:3,3,4,3
4,2,3,4:3,3,3,4
2,4,4,4:3,3,4,4
4,2,4,4:3,3,4,4
3,3,0,1:2,4,0,1
3,3,1,0:2,4,1,0
3,3,0,2:3,3,0,0
3,3,2,0:3,3,0,0
3,3,0,3:3,3,0,1
3,3,3,0:3,3,1,0
3,3,0,4:2,4,0,4
3,3,4,0:2,4,4,0
3,3,1,1:1,0,1,1
3,3,1,2:3,3,1,0
3,3,2,1:3,3,0,1
3,3,1,3:3,3,1,1
3,3,3,1:3,3,1,1
3,3,1,4:3,3,1,2
3,3,4,1:3,3,2,1
3,3,2,2:1,0,2,2
3,3,2,3:3,3,2,1
3,3,3,2:3,3,3,0
3,3,2,4:2,4,2,4
3,3,4,2:2,4,4,2
3,3,3,3:2,4,3,3
3,3,3,4:2,4,3,4
3,3,4,3:2,4,4,3
3,3,4,4:2,4,4,4
3,4,3,4:3,4,3,3
4,3,4,3:4,3,4,1
3,4,4,0:3,4,3,0
4,3,0,4:4,3,0,3
3,4,4,1:3,4,2,1
4,3,1,4:4,3,1,2
3,4,4,2:3,4,4,1
4,3,2,4:4,3,2,2
3,4,4,3:3,4,4,2
4,3,3,4:4,3,3,2
3,4,4,4:3,4,4,3
4,3,4,4:4,3,4,2
4,4,0,1:4,4,0,0
4,4,1,0:4,4,0,0
4,4,0,2:4,4,0,1
4,4,2,0:4,4,1,0
4,4,0,3:4,4,0,2
4,4,3,0:4,4,2,0
4,4,0,4:4,4,0,3
4,4,4,0:4,4,3,0
4,4,1,1:4,4,1,0
4,4,1,2:4,4,0,2
4,4,2,1:4,4,2,0
4,4,1,3:4,4,1,2
4,4,3,1:4,4,3,0
4,4,1,4:1,2,1,4
4,4,4,1:1,2,4,1
4,4,2,2:4,4,2,1
4,4,2,3:1,2,2,3
4,4,3,2:1,2,3,2
4,4,2,4:1,2,2,4
4,4,4,2:1,2,4,2
4,4,3,3:4,4,3,2
4,4,3,4:4,4,3,3
4,4,4,3:4,4,4,2
4,4,4,4:1,2,4,4""""""

moveDictionary = make_dictionary(stringTable)

def move(my_hand, other_hand):
    return get_move_to_return(my_hand.copy(), other_hand.copy(), get_best_move(my_hand, other_hand))

def position_to_string(my_hand, other_hand):
    return f""{my_hand[0]},{my_hand[1]},{other_hand[0]},{other_hand[1]}""

def get_best_move(my_hand, other_hand):
    
    global moveDictionary

    if moveDictionary:
        return moveDictionary[position_to_string(my_hand, other_hand)]
    else:
        moveDictionary = make_dictionary(stringTable)

def get_move_to_return(my_hand, other_hand, result):
    # moves to cobination:
    tmpOtherHand = other_hand.copy()

    possibleMoves = get_all_moves(my_hand)
    for move in possibleMoves:
        other_hand = tmpOtherHand.copy()

        if move[0] != None:
            other_hand[move[1]] += my_hand[move[0]]
            if other_hand[move[1]] > 4:
                other_hand[move[1]] -= 5
        else: 
            my_hand[0] = move[1][0]
            my_hand[1] = move[1][1]
        
        if (position_to_string(my_hand, other_hand) == result):
            return move
    
    # Default
    return [0, 0]

def get_combinations(my_hand):
    big = max(my_hand)
    smal = min(my_hand)

    totalCount = big + smal
    combinations = []

    for i in range(totalCount):
        if totalCount-1 < i:
            break

        combination = [None, [totalCount - i, i]]
        doAppend = True

        if combination[1][0] == my_hand[0] and combination[1][1] == my_hand[1]:
            doAppend = False

        if combination[1][0] == my_hand[1] and combination[1][1] == my_hand[0]:
            doAppend = False

        if combination[1][0] > 4:
            combination[1][0] -= 5
        
        if combination[1][1] > 4:
            combination[1][1] -= 5

        if (doAppend):
            combinations.append(combination)

    return combinations

def get_all_moves(my_hands):

    moves = []
    possible_my_hands = [i for i in range(2) if my_hands[i] != 0]
    for my_hand in possible_my_hands:
        for other_hand in [0, 1]:
            moves.append([my_hand, other_hand])

    combinations = get_combinations(my_hands)

    for combination in combinations:
        moves.append(combination)
    return moves"
ZhSkDALF,Tasks,Mario_Hristov,C,Wednesday 27th of March 2024 02:13:15 PM CDT,"// Purva zad ot lab
#include <stdio.h>
#include <stdlib.h>

int main() {
    int sum = 0;
    int* arr = (int*) malloc(7*sizeof(int));
    int temp;
    for(int i = 0; i < 7; i++){
        printf(""Num %d:\n"", i + 1);
        scanf(""%d"", &temp);
        while(temp < -5000 || temp > 5000){
            printf(""Try again! Num should be in range [-5000, 5000]: "");
            scanf(""%d"", &temp);
        }
        arr[i] = temp;
    }
    for(int i = 0; i < 7; i++){
        sum += *(arr + i);
    }
    printf(""Sum of array elements: %d"", sum);
    return 0;
}
// Vtora zad
#include <stdio.h>
#include <stdlib.h>

int main() {
    int sum = 0;
    int* arr = (int*) malloc(7*sizeof(int));
    int temp;
    int biggest = -__INT32_MAX__;
    for(int i = 0; i < 7; i++){
        printf(""Num %d:\n"", i + 1);
        scanf(""%d"", &temp);
        while(temp < -5000 || temp > 5000){
            printf(""Try again! Num should be in range [-5000, 5000]: "");
            scanf(""%d"", &temp);
        }
        arr[i] = temp;
    }
    for(int i = 0; i < 7; i++){
        if(arr[i] > biggest){
            biggest = arr[i];
        }
    }
    printf(""Biggest num in array: %d"", biggest);
    return 0;
}
// Treta zad
#include <stdio.h>
#include <stdlib.h>

int main() {
    int sum = 0;
    float average = 0;
    int* arr = (int*) malloc(7*sizeof(int));
    int temp;
    for(int i = 0; i < 7; i++){
        printf(""Num %d:\n"", i + 1);
        scanf(""%d"", &temp);
        while(temp < -5000 || temp > 5000){
            printf(""Try again! Num should be in range [-5000, 5000]: "");
            scanf(""%d"", &temp);
        }
        arr[i] = temp;
    }
    for(int i = 0; i < 7; i++){
        sum += arr[i];
    }
    average = sum / 7.0;
    printf(""Average value in array: %.3f"", average);
    return 0;
}
// 4th zad
#include <stdio.h>
#include <stdlib.h>
int abs_diff(int avg, int elem){
    int diff = avg - elem;
    int abs_diff = diff < 0 ? -diff : diff;
    return abs_diff;
}
int main() {
    int sum = 0;
    float average = 0;
    int* arr = (int*) malloc(7*sizeof(int));
    int temp;
    for(int i = 0; i < 7; i++){
        printf(""Num %d:\n"", i + 1);
        scanf(""%d"", &temp);
        while(temp < -5000 || temp > 5000){
            printf(""Try again! Num should be in range [-5000, 5000]: "");
            scanf(""%d"", &temp);
        }
        arr[i] = temp;
    }
    for(int i = 0; i < 7; i++){
        sum += arr[i];
    }
    average = sum / 7.0;
    int diff = abs_diff(average, arr[0]);
    int index = 0;
    int tempDiff;
    for(int i = 1; i < 7; i++){
        tempDiff = abs_diff(average, arr[i]);
        if(tempDiff < diff){
            diff = tempDiff;
            index = i;
        }
    }
    printf(""Average value: %.3f. Closest value %d at %dth place"", average, arr[index], index + 1);
    return 0;
}
// Test1 zad 1
#include <stdio.h>

int main() {
    printf(""Multiplication table: \n"");
    for(int i = 1; i <= 9; i++){
        printf(""%3d"", i);
    }
    printf(""\n"");
    for(int i = 1; i <= 9; i++){
        printf(""%d|"", i);
        for(int j = 1; j <= 9; j++){
            if(j == 1){
                printf(""%d"", i * j);
                continue;
            }
            printf(""%3d"", i * j);
        }
        printf(""\n"");
    }
    return 0;
}
// Test1 zad 2
#include <stdio.h>
#include <stdlib.h>
int main() {
    int n;
    printf(""Enter a num less than 10: "");
    scanf(""%d"", &n);
    while(n >= 10){
        printf(""Enter a num less than 10: "");
        scanf(""%d"", &n);
    }
    int** arr = (int**) malloc(sizeof(int) * n);
    for(int i = 0; i < n; i++){
        arr[i] = (int*) malloc(sizeof(int) * n);
    }
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            printf(""Num: "");
            scanf(""%d"", &arr[i][j]);
        }
    }
    printf(""\n"");
    int con = n;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            for(int k = 1; k <= n; k++){
                if(con == 0){
                    break;
                }
                else if(arr[i][j] == k * k){
                    con--;
                }
            }
            printf(""%d "", arr[i][j]);
        }
        printf(""\n"");
    }
    if(con == 0){
        printf(""All numbers from 1 to n^2 are in the array"");
    }
    else{
        printf(""Condition Failed"");
    }
    return 0;
}
// Test1 zad 3
#include <stdio.h>
#include <stdlib.h>
int main() {
    // First part
//    int arr[10];
//    for(int i = 1; i <= 10; i++){
//        arr[i - 1] = i;
//    }
//    for(int i = 0; i < 10; i++){
//        printf(""%d "", arr[i]);
//    }
    // Second part
//    int arr1[100];
//    for(int i = 0; i < 100; i++){
//        arr1[i] = i;
//    }
//    for(int i = 1; i <= 100; i++){
//        if(i % 10 == 0){
//            printf(""%d\n"", arr1[i - 1]);
//            continue;
//        }
//        printf(""%d, "", arr1[i - 1]);
//    }

    return 0;
}
// Test1 zad 4
#include <stdio.h>
int main(int argc, char *argv[])
{
    int arr[10];
    for(int i = 0; i < 10; i++){
        printf(""Num: "");
        scanf(""%d"", &arr[i]);
    }
    int min = __INT32_MAX__;
    int max = -__INT32_MAX__;
    for(int i = 0; i < 10; i++){
        if(arr[i] > max){
            max = arr[i];
        }
        if(arr[i] < min){
            min = arr[i];
        }
        printf(""%d "", arr[i]);
    }
    printf(""\nSmallest num: %d\n"", min);
    printf(""Biggest num: %d"", max);

    return 0;
}
// Test1 zad 5
#include <stdio.h>
#include <string.h>
int main(int argc, char *argv[])
{
    char name[30];
    int len = -1;
    printf(""Enter your name: "");
    fgets(name, 30, stdin);
    for(char* c = name; *c != '\0'; c++){
        len++;
    }
    printf(""Name length: %d"", len);
    return 0;
}
// Test1 zad 6
#include <stdio.h>
#include <string.h>
int main(int argc, char *argv[])
{
    char word[30];
    fgets(word, 30, stdin);
    printf(""Word: %sIn reverse: "", word);
    int len = -1;
    for(char* c = word; *c != '\0'; c++){
        len++;
    }
    for(int i = len - 1; i >= 0; i--){
        printf(""%c"", word[i]);
    }

    return 0;
}





"
YamF2HTH,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 02:13:12 PM CDT,"#include <stdio.h>

int main() {
        int n;
        scanf(""%d"", &n);

        int niza[n];

        for(int i = 0; i < n; i++) {
            scanf(""%d"", &niza[i]);
        }
    int najmal_element = niza[0];
    int indeks = 0;
    for(int i = 0; i < n; i++) {
        if(niza[i] < najmal_element) {
            najmal_element = niza[i];
            indeks = i;
        }
    }        
    printf(""Najmaliot element: %d, na indeks: %d\n"", najmal_element, indeks);
      return 0;
}"
7hUgyaks,DirectoryLister,Mat4297,Python,Wednesday 27th of March 2024 02:10:32 PM CDT,"import os
import time
import pathlib
from tqdm import tqdm

class DirectoryLister:

    def __init__(
        self,
        path,
        reverse=False,
        sort_by=""name"",
        show_mtime=False,
        show_size=False
    ):
        self.path = path
        self.reverse = reverse
        self.sort_by = sort_by
        if self.sort_by == ""name"":
            self.output = os.path.basename(self.path) + ""\n""
        self.show_mtime, self.show_size = show_mtime, show_size
        self.file_sizes = {}  # Add this line to store file sizes
        self.error_paths = []  # Add this line to store paths that caused errors
        self.total_files = sum([len(files) for r, d, files in os.walk(self.path)])  # Calculate total files
        self.pbar = tqdm(total=self.total_files)  # Initialize tqdm progress bar

    def list_directory(
        self,
        indent=0
    ):
        try:
            for root, dirs, files in os.walk(self.path):

                if self.sort_by == ""name"":
                    dirs.sort()
                elif self.sort_by == ""mtime"":
                    dirs.sort(key=lambda dir: os.stat(os.path.join(root, dir)).st_mtime)
                elif self.sort_by == ""size"":
                    dirs.sort(key=lambda dir: os.path.getsize(os.path.join(root, dir)))
                if self.reverse:
                    dirs.reverse()

                for dir in dirs:
                    self.output += f""{'| ' * indent}├─ {dir}\n""
                    self.path=os.path.join(root, dir)
                    self.list_directory(indent + 1)

                if self.sort_by == ""name"":
                    files.sort()
                elif self.sort_by == ""mtime"":
                    files.sort(key=lambda file: os.stat(os.path.join(root, file)).st_mtime)
                elif self.sort_by == ""size"":
                    files.sort(key=lambda file: os.path.getsize(os.path.join(root, file)))
                if self.reverse:
                    files.reverse()

                for file in files:
                    filepath = os.path.join(root, file)
                    if self.show_mtime or self.show_size:
                        stat = os.stat(filepath)
                        mtime = time.strftime(
                            ""%Y/%m/%d %H:%M:%S"", time.localtime(stat.st_mtime)
                        )
                        size = pathlib.Path(filepath).stat().st_size
                        self.file_sizes[file] = size
                        details = []
                        if self.show_mtime:
                            details.append(f""({mtime})"")
                        if self.show_size:
                            details.append(f""({size} bytes)"")
                        self.output += f""{'| ' * indent}└─ {file} {' '.join(details)}\n""
                    else:
                        self.output += f""{'| ' * indent}└─ {file}\n""
                    self.pbar.update(1)  # Update the progress bar
        except Exception as e:
            self.output += f""An error occurred while listing the directory: {self.path}\n""
            self.error_paths.append(self.path)
        finally:
            self.pbar.close()  # Close the progress bar

    def print_errors(self):
        if self.error_paths:
			self.output += f""\nTotal number of errors: {len(self.error_paths)}\n""
            self.output += ""\nErrors occurred at the following paths:\n""
            for path in self.error_paths:
                self.output += path + ""\n""
            

    def write_output_to_file(self):
        with open(f""{os.path.basename(self.path)}.txt"", ""w"") as f:
            f.write(self.output)
"
u569GWDt,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 02:10:30 PM CDT,"#include <stdio.h>

int main() {
        int n;
        scanf(""%d"", &n);

        int niza[n];

        for(int i = 0; i < n; i++) {
            scanf(""%d"", &niza[i]);
        }
    int najgolem_element = niza[0];
    int indeks = 0;
    for(int i = 0; i < n; i++) {
        if(niza[i] > najgolem_element) {
            najgolem_element = niza[i];
            indeks = i;
        }
    }        
    printf(""Najgolemiot element: %d, na indeks: %d\n"", najgolem_element, indeks);
      return 0;
}"
a5GSZ8L9,Profile Song [MoodPlay],AhmadXploit,Dart,Wednesday 27th of March 2024 02:06:36 PM CDT,"{
  ""songs"": [
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
      ""videoUrl"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
      ""name"": ""The Lion of Allah: Hamza Ibn Abdul Mutalib (RA)"",
      ""title"": ""Anonymous"",
      ""detailPage"": {
        ""nameAccount"": ""JASON AKSEN"",
        ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp""
      }
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691835269/Story/64d75aa254b70_uqppgk.png"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691835269/Story/64d75aa254b70_uqppgk.png"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
      ""name"": ""Bilal the Great African Muslim"",
      ""title"": ""Anonymous"",
      ""detailPage"": {
        ""nameAccount"": ""JASON AKSEN"",
        ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp""
      }
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691862067/Story/khaleed_mmalxl.png"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691862067/Story/khaleed_mmalxl.png"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
      ""name"": ""Sword of God: The story of Khalid Ibn Al-Walid"",
      ""title"": ""Anonymous"",
      ""detailPage"": {
        ""nameAccount"": ""JASON AKSEN"",
        ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp""
      }
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691916765/Story/Nabi_Nuh_ifxjze.png"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691916765/Story/Nabi_Nuh_ifxjze.png"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711213503/MoodPlay/Black%20Pink/Snaptik.app_7199976110782729478_fus92k.mp4"",
      ""name"": ""The Story of Abul Basyar (Prophet Noah)"",
      ""title"": ""Anonymous"",
      ""detailPage"": {
        ""nameAccount"": ""JASON AKSEN"",
        ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp""
      }
    }
  ]
}"
YyJbgLFB,Untitled,Josif_tepe,C++,Wednesday 27th of March 2024 01:58:06 PM CDT,"#include <stdio.h>

int main() {
        int n;
        scanf(""%d"", &n);

        int niza[n];

        for(int i = 0; i < n; i++) {
            scanf(""%d"", &niza[i]);
        }
        
        int parni = 0, neparni = 0;
        for(int i = 0; i < n; i++) {
            if(niza[i] % 2 == 0) {
                parni++;
            }
            else {
                neparni++;
            }
        }
    printf(""Vo nizata ima %d parni, a neparni %d\n"", parni, neparni);
       return 0;
}"
G4sWBvcN,Category-Config.ini,HeavyNight,INI file,Wednesday 27th of March 2024 01:53:15 PM CDT,"[General]
nombre = StarLand
version = 1.18.2
modpack = StarLand_Modpack.zip
ip = starland.heavynight.com
puerto = 25565
forge = forge-1.18.2-40.2.18-installer.jar
java = jdk-17.0.6
pageweb = https://www.heavynight.com/news/starland
shopweb = https://www.heavynight.com/shop/categories/starland"
