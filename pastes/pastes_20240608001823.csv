id,title,username,language,date,content
dRMmjcyp,ADT Linked List,Sierra_ONE,C,Friday 7th of June 2024 07:16:34 PM CDT,"/*  Author:     Fabiola C. Villanueva
    Project:    Linked List
    Time:       July 9, 2023 (5:00pm)
    End:        July 9, 2023 (7:42pm)
*/

#include <stdio.h>
#include <stdlib.h>
#define MENU 5

typedef char STRING[50];

//structure definitions
typedef struct node {
    int data;
    struct node *next;
} NodeType, *NodePtr;

//function prototypes
void insertSorted (NodePtr *list);
int searchData (NodePtr list);
void deleteAllData (NodePtr *list);
void display (NodePtr list);

int main() {
    system(""CLS"");

    NodePtr head = NULL;
    int i, item, choice, pos;
    STRING menu[MENU] = {  ""Exit"",
                            ""Insert Sorted"",
                            ""Search Data"", 
                            ""Delete All"",
                            ""Display List"" };

    do {
        printf(""MENU\nKindly select a number:\n\n"");
        for (i = 0; i < MENU; ++i) {
            printf(""    [%d] %s\n"", i, menu[i]);
        }
        printf(""\nChoice: "");
        scanf(""%d"", &choice);

        system(""CLS"");

        switch (choice) {
            case 0:
                printf(""\n\""EXIT\""\n\n"");
                display(head);
                printf(""\n\nTerminating program..."");

                break;
            
            case 1:
                printf(""\n\""INSERT SORTED\""\n\n"");
                display(head);
                insertSorted (&head);
                printf(""\n"");
                display(head);

                break;
            
            case 2:
                printf(""\n\""SEARCH DATA\""\n\n"");
                display(head);
                pos = searchData (head);
                printf(""Data is at position = [%d]\n\n"", pos);
                display(head);

                break;

            case 3:
                printf(""\n\""DELETE ALL\""\n\n"");
                display(head);
                deleteAllData (&head);
                display(head);

                break;

            case 4:
                printf(""\n\""DISPLAY LIST\""\n\n"");
                display(head); 

                break;
        }
        
        printf(""\n\n"");
        system(""PAUSE"");
        system(""CLS"");

    } while (choice != 0);

    printf(""\n"");
    return 0;
}

//function defenitions
void insertSorted (NodePtr *list) {                             //a list from main will never enter this function unsorted
    NodePtr temp = (NodePtr) malloc (sizeof(NodeType));         //make temp node
    NodePtr *trav;
    int item;

    printf(""\nEnter item to insert: "");         //user input for data to insert
    scanf(""%d"", &item);

    if (temp != NULL) {                         //if temp is allocated
        temp->data = item;                      //populate temp data
        temp->next = NULL;                      //pre assign to NULL, overwrite later
    }                                           //traverse until in right position

    for (trav = list; (*trav) != NULL && (*trav)->data < temp->data; trav = &(*trav)->next) {}

    temp->next = (*trav);                       //exits loop once item is in right position
    (*trav) = temp;                             //insert the temp node in place
}

int searchData (NodePtr list) {     //return pos, if pos not found return -1
    NodePtr trav;
    int i, item, ret = -1;

    printf(""\nEnter data to search: "");
    scanf(""%d"", &item);

    for (trav = list, i = 0; trav != NULL && trav->data != item; trav = trav->next, ++i) {
        if (trav->data == item) {       //traverse and checking if item is found,
            ret = i;                    //loop automatically exits then assigns i to ret
        }
    }                                   //if not found, ret stays -1

    return ret;
}

void deleteAllData (NodePtr *list) {        //delete all occurences of user input item
    NodePtr *trav, temp;
    int item;

    printf(""\nEnter item to delete: "");     
    scanf(""%d"", &item);

    for (trav = list; (*trav) != NULL;) {
        if ((*trav)->data == item) {        //if data in a node is found,
            temp = (*trav);                 //temp will get whole node to delete
            (*trav) = temp->next;           //update for conditon when item found
            free(temp);                     //deletion of temp
        } else {
            trav = &(*trav)->next;          //update to continue if not item
        }
    }
}

void display (NodePtr list) {       //""pass by copy of list""; accessing via single pointer direct to first node
    printf(""List = { "");
    for (; list != NULL; list = list->next) {
        printf(""[%d]"", list->data);
        if (list->next != NULL) {
            printf("" -> "");
        }
    }
    printf("" }"");
}"
YxCgPwPG,2024-06-07_stats.json,rdp_snitch,JSON,Friday 7th of June 2024 07:16:09 PM CDT,"{
  ""ip"": {
    ""213.109.202.238"": 16,
    ""185.234.216.88"": 2,
    ""172.232.97.48"": 2,
    ""187.190.60.112"": 2,
    ""205.210.31.77"": 6,
    ""116.140.196.215"": 4,
    ""87.251.75.64"": 2,
    ""212.70.149.142"": 12,
    ""194.165.16.11"": 4,
    ""45.227.254.8"": 4,
    ""185.170.144.3"": 4,
    ""193.37.69.79"": 4,
    ""91.238.181.71"": 4,
    ""194.180.49.249"": 4,
    ""80.94.95.239"": 18,
    ""198.235.24.49"": 6,
    ""87.251.75.120"": 4,
    ""117.173.153.116"": 2,
    ""167.94.146.51"": 2,
    ""165.154.128.17"": 2,
    ""194.169.175.41"": 2,
    ""167.94.145.97"": 2,
    ""122.176.156.184"": 6,
    ""198.235.24.221"": 6,
    ""64.124.50.139"": 2,
    ""91.92.249.150"": 2,
    ""194.165.16.37"": 4,
    ""194.165.16.76"": 4,
    ""45.227.254.55"": 4,
    ""194.165.16.72"": 2,
    ""66.228.56.38"": 8,
    ""205.210.31.249"": 6,
    ""96.126.118.43"": 2,
    ""46.23.108.240"": 2,
    ""43.134.86.3"": 10
  },
  ""asn"": {
    ""AS208312"": 16,
    ""AS57523"": 2,
    ""AS63949"": 12,
    ""AS22884"": 2,
    ""AS396982"": 24,
    ""AS4837"": 4,
    ""AS208091"": 10,
    ""AS204428"": 30,
    ""AS48721"": 14,
    ""AS267784"": 8,
    ""AS197414"": 4,
    ""AS49434"": 4,
    ""AS201814"": 4,
    ""AS9808"": 2,
    ""AS398705"": 4,
    ""AS135377"": 2,
    ""AS209605"": 2,
    ""AS24560"": 6,
    ""AS6461"": 2,
    ""AS394711"": 2,
    ""AS215762"": 2,
    ""AS132203"": 10
  },
  ""isp"": {
    ""Red Byte LLC"": 16,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Akamai Technologies, Inc."": 12,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Google LLC"": 24,
    ""China Unicom CHINA169 Network"": 4,
    ""Xhost Internet Solutions LP"": 10,
    ""SS-Net"": 30,
    ""Flyservers S.A."": 22,
    ""Xhost Internet Solutions"": 4,
    ""Datacenter location PAR1 France"": 4,
    ""MEVSPACE sp. z o.o."": 4,
    ""China Mobile communications corporation"": 2,
    ""Censys, Inc."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""UAB Host Baltic"": 2,
    ""Bharti Airtel"": 6,
    ""Zayo Bandwidth"": 2,
    ""Limenet"": 2,
    ""Bullet Group LTD"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 10
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 18,
    ""Akamai Technologies, Inc."": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""China United Network Communications Corporation Limited"": 4,
    ""Xhost Internet Solutions"": 6,
    ""Global Communication Net Plc"": 12,
    ""Flyservers S.A"": 14,
    ""UAB Host Baltic"": 8,
    ""Xhostis"": 4,
    ""XHOSTIS"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""HostSlick"": 4,
    ""Unmanaged LTD"": 18,
    ""China Mobile"": 2,
    ""Censys, Inc."": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""EmanuelHosting LTD"": 2,
    ""Bharti Telenet Ltd."": 6,
    ""Microsoft Corporation"": 2,
    ""Limenet"": 2,
    ""Linode"": 10,
    ""Bullet Group LTD"": 2,
    ""Tencent Cloud Computing"": 10
  },
  ""regionName"": {
    ""Moscow"": 18,
    ""Tamil Nadu"": 2,
    ""Hidalgo"": 2,
    ""California"": 24,
    ""Beijing"": 4,
    ""North Holland"": 16,
    ""Sofia-Capital"": 30,
    ""Kaunas"": 16,
    ""Vilnius"": 8,
    ""\u00cele-de-France"": 4,
    ""Virginia"": 4,
    ""Sichuan"": 2,
    ""Hesse"": 2,
    ""England"": 2,
    ""Michigan"": 2,
    ""Telangana"": 6,
    ""Washington"": 2,
    ""Georgia"": 8,
    ""Texas"": 2,
    ""Kelantan"": 2,
    ""North West"": 10
  },
  ""country"": {
    ""Russia"": 18,
    ""India"": 8,
    ""Mexico"": 2,
    ""United States"": 42,
    ""China"": 6,
    ""The Netherlands"": 16,
    ""Bulgaria"": 30,
    ""Lithuania"": 24,
    ""France"": 4,
    ""Germany"": 2,
    ""United Kingdom"": 2,
    ""Malaysia"": 2,
    ""Singapore"": 10
  },
  ""account"": {
    ""Test"": 34,
    ""Administr"": 34,
    ""hello"": 24,
    ""koHxqbJ"": 2,
    ""aPKAhvNmO"": 2,
    ""ajaAfE"": 2,
    ""BbzFUi"": 2,
    ""(empty)"": 10,
    ""Domain"": 26,
    ""uOHzWoZIb"": 2,
    ""POoCiI"": 2,
    ""dPlIqg"": 2,
    ""Administrator"": 2,
    ""SPlDvCege"": 2,
    ""NLTjAe"": 2,
    ""WLQcgB"": 2,
    ""i5v5x6ul"": 8,
    ""ARqxhCTZx"": 2,
    ""FIVSsN"": 2,
    ""cjSXyp"": 2,
    ""beio"": 2
  },
  ""keyboard"": {
    ""Unknown"": 166
  },
  ""client_build"": {
    ""Unknown"": 166
  },
  ""client_name"": {
    ""Unknown"": 166
  },
  ""ip_type"": {
    ""proxy"": 18,
    ""hosting"": 52,
    ""Unknown"": 94,
    ""mobile"": 2
  }
}"
MnhWr9Cu,2024-06-07_stats.json,rdp_snitch,JSON,Friday 7th of June 2024 07:15:08 PM CDT,"{
  ""ip"": {
    ""213.109.202.238"": 8,
    ""185.234.216.88"": 1,
    ""172.232.97.48"": 1,
    ""187.190.60.112"": 1,
    ""205.210.31.77"": 3,
    ""116.140.196.215"": 2,
    ""87.251.75.64"": 1,
    ""212.70.149.142"": 6,
    ""194.165.16.11"": 2,
    ""45.227.254.8"": 2,
    ""185.170.144.3"": 2,
    ""193.37.69.79"": 2,
    ""91.238.181.71"": 2,
    ""194.180.49.249"": 2,
    ""80.94.95.239"": 9,
    ""198.235.24.49"": 3,
    ""87.251.75.120"": 2,
    ""117.173.153.116"": 1,
    ""167.94.146.51"": 1,
    ""165.154.128.17"": 1,
    ""194.169.175.41"": 1,
    ""167.94.145.97"": 1,
    ""122.176.156.184"": 3,
    ""198.235.24.221"": 3,
    ""64.124.50.139"": 1,
    ""91.92.249.150"": 1,
    ""194.165.16.37"": 2,
    ""194.165.16.76"": 2,
    ""45.227.254.55"": 2,
    ""194.165.16.72"": 1,
    ""66.228.56.38"": 4,
    ""205.210.31.249"": 3,
    ""96.126.118.43"": 1,
    ""46.23.108.240"": 1,
    ""43.134.86.3"": 5
  },
  ""asn"": {
    ""AS208312"": 8,
    ""AS57523"": 1,
    ""AS63949"": 6,
    ""AS22884"": 1,
    ""AS396982"": 12,
    ""AS4837"": 2,
    ""AS208091"": 5,
    ""AS204428"": 15,
    ""AS48721"": 7,
    ""AS267784"": 4,
    ""AS197414"": 2,
    ""AS49434"": 2,
    ""AS201814"": 2,
    ""AS9808"": 1,
    ""AS398705"": 2,
    ""AS135377"": 1,
    ""AS209605"": 1,
    ""AS24560"": 3,
    ""AS6461"": 1,
    ""AS394711"": 1,
    ""AS215762"": 1,
    ""AS132203"": 5
  },
  ""isp"": {
    ""Red Byte LLC"": 8,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Akamai Technologies, Inc."": 6,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Google LLC"": 12,
    ""China Unicom CHINA169 Network"": 2,
    ""Xhost Internet Solutions LP"": 5,
    ""SS-Net"": 15,
    ""Flyservers S.A."": 11,
    ""Xhost Internet Solutions"": 2,
    ""Datacenter location PAR1 France"": 2,
    ""MEVSPACE sp. z o.o."": 2,
    ""China Mobile communications corporation"": 1,
    ""Censys, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""UAB Host Baltic"": 1,
    ""Bharti Airtel"": 3,
    ""Zayo Bandwidth"": 1,
    ""Limenet"": 1,
    ""Bullet Group LTD"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 5
  },
  ""org"": {
    ""Chang Way Technologies Co. Limited"": 9,
    ""Akamai Technologies, Inc."": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""China United Network Communications Corporation Limited"": 2,
    ""Xhost Internet Solutions"": 3,
    ""Global Communication Net Plc"": 6,
    ""Flyservers S.A"": 7,
    ""UAB Host Baltic"": 4,
    ""Xhostis"": 2,
    ""XHOSTIS"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""HostSlick"": 2,
    ""Unmanaged LTD"": 9,
    ""China Mobile"": 1,
    ""Censys, Inc."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""EmanuelHosting LTD"": 1,
    ""Bharti Telenet Ltd."": 3,
    ""Microsoft Corporation"": 1,
    ""Limenet"": 1,
    ""Linode"": 5,
    ""Bullet Group LTD"": 1,
    ""Tencent Cloud Computing"": 5
  },
  ""regionName"": {
    ""Moscow"": 9,
    ""Tamil Nadu"": 1,
    ""Hidalgo"": 1,
    ""California"": 12,
    ""Beijing"": 2,
    ""North Holland"": 8,
    ""Sofia-Capital"": 15,
    ""Kaunas"": 8,
    ""Vilnius"": 4,
    ""\u00cele-de-France"": 2,
    ""Virginia"": 2,
    ""Sichuan"": 1,
    ""Hesse"": 1,
    ""England"": 1,
    ""Michigan"": 1,
    ""Telangana"": 3,
    ""Washington"": 1,
    ""Georgia"": 4,
    ""Texas"": 1,
    ""Kelantan"": 1,
    ""North West"": 5
  },
  ""country"": {
    ""Russia"": 9,
    ""India"": 4,
    ""Mexico"": 1,
    ""United States"": 21,
    ""China"": 3,
    ""The Netherlands"": 8,
    ""Bulgaria"": 15,
    ""Lithuania"": 12,
    ""France"": 2,
    ""Germany"": 1,
    ""United Kingdom"": 1,
    ""Malaysia"": 1,
    ""Singapore"": 5
  },
  ""account"": {
    ""Test"": 17,
    ""Administr"": 17,
    ""hello"": 12,
    ""koHxqbJ"": 1,
    ""aPKAhvNmO"": 1,
    ""ajaAfE"": 1,
    ""BbzFUi"": 1,
    ""(empty)"": 5,
    ""Domain"": 13,
    ""uOHzWoZIb"": 1,
    ""POoCiI"": 1,
    ""dPlIqg"": 1,
    ""Administrator"": 1,
    ""SPlDvCege"": 1,
    ""NLTjAe"": 1,
    ""WLQcgB"": 1,
    ""i5v5x6ul"": 4,
    ""ARqxhCTZx"": 1,
    ""FIVSsN"": 1,
    ""cjSXyp"": 1,
    ""beio"": 1
  },
  ""keyboard"": {
    ""Unknown"": 83
  },
  ""client_build"": {
    ""Unknown"": 83
  },
  ""client_name"": {
    ""Unknown"": 83
  },
  ""ip_type"": {
    ""proxy"": 9,
    ""hosting"": 26,
    ""Unknown"": 47,
    ""mobile"": 1
  }
}"
ND9zMGNK,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,FreeRobux12345,JavaScript,Friday 7th of June 2024 07:14:12 PM CDT,"G2A.com complimentary gift card & games guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
4cbcC3LQ,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,coderpradip,JavaScript,Friday 7th of June 2024 07:08:12 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
0WBvHqy6,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,mikyser,JavaScript,Friday 7th of June 2024 07:02:13 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
2AsJsRc8,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,Ohtaku,JavaScript,Friday 7th of June 2024 06:56:12 PM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
NBWUu932,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,Elii,JavaScript,Friday 7th of June 2024 06:50:13 PM CDT,"G2A.com complimentary voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
XN8AsbKC,Untitled,cosenza987,C++,Friday 7th of June 2024 06:48:03 PM CDT,"//Слава Україні, Героям слава

#include <bits/stdc++.h>

using namespace std;

struct SuffixArray {
    vector<int> sa, lcp_v;
    vector<vector<int>> cs;
    int n;
 
    int add(int a, int b) { return a + b >= n ? a + b - n : a + b; }
    int sub(int a, int b) { return a - b < 0 ? a - b + n : a - b; }
 
    SuffixArray(string& s, bool store_steps = false, bool build_lcp = true) {
        s += ' ';
        n = (int)s.size();
        sa = sort_shifts(s, store_steps);
        if (build_lcp) {
            lcp_v = build_lcp_v(s);
            lcp_v.erase(lcp_v.begin());
        }
        sa.erase(sa.begin());
        s.pop_back();
    }
 
    vector<int> sort_shifts(string& s, bool store_steps) {
        const int ALPHA_SIZE = 256;
        vector<int> p(n), c(n), cnt(ALPHA_SIZE);
        for (char ch : s) cnt[(int)ch]++;
        for (int i = 1; i < ALPHA_SIZE; i++) cnt[i] += cnt[i - 1];
 
        for (int i = 0; i < n; i++) {
            cnt[s[i]]--;
            p[cnt[s[i]]] = i;
        }
 
        for (int i = 1; i < n; i++)
            c[p[i]] = c[p[i - 1]] + (s[p[i]] != s[p[i - 1]]);
 
        if (store_steps) cs.push_back(c);
 
        vector<int> cn(n), pn(n);
 
        for (int k = 0; (1 << k) < n; k++) {
            int nclass = c[p[n - 1]] + 1;
            cnt.assign(nclass, 0);
 
            for (int i = 0; i < n; i++) {
                pn[i] = sub(p[i], (1 << k));
                cnt[c[i]]++;
            }
 
            for (int i = 1; i < nclass; i++)
                cnt[i] += cnt[i - 1];
 
            for (int i = n - 1; i >= 0; i--) {
                cnt[c[pn[i]]]--;
                p[cnt[c[pn[i]]]] = pn[i];
            }
 
            cn[p[0]] = 0;
            for (int i = 1; i < n; i++) {
                pair<int, int> a = { c[p[i]], c[add(p[i], (1 << k))] };
                pair<int, int> b = { c[p[i - 1]], c[add(p[i - 1], (1 << k))] };
                cn[p[i]] = cn[p[i - 1]] + (a != b);
            }
 
            swap(c, cn);
            if (store_steps) cs.push_back(c);
 
        }
 
        return p;
    }
 
    vector<int> build_lcp_v(string& s) {
        vector<int> ans(n - 1), rank(n);
        for (int i = 0; i < n; i++) rank[sa[i]] = i;
 
        for (int i = 0, k = 0; i < n - 1; i++) {
            if (rank[i] == n - 1) continue;
            int j = sa[rank[i] + 1];
            while (s[i + k] == s[j + k]) k++;
            ans[rank[i]] = k;
            if (k) k--;
        }
 
        return ans;
    }
 
    int lcp(int i, int j) {
        if (i == j) return n - i - 1;
        int ans = 0;
        for (int k = (int)cs.size() - 1; k >= 0; k--) {
            if (cs[k][i] == cs[k][j]) {
                int val = (1 << k);
                ans += val, i += val, j += val;
            }
        }
        return ans;
    }
 
    long long diff_substr() {
        int sz = n - 1;
        long long ans = sz - sa[0];
        for (int i = 1; i < (int)sa.size(); i++) ans += sz - sa[i] - lcp_v[i - 1];
        return ans;
    }
 
    long long diff_substr_sz_sum() {
        int sz = n - 1;
        auto sum = [](int l, int r) { return (1ll * (l + r) * (r - l + 1)) / 2; };
        long long ans = sum(1, sz - sa[0]);
        for (int i = 1; i < (int)sa.size(); i++) ans += sum(lcp_v[i - 1] + 1, sz - sa[i]);
        return ans;
    }
 
};

const int N = 1e6 + 7;

int par[N], sz[N];

int find(int a) {
    return a == par[a] ? a : par[a] = find(par[a]);
}

void unite(int a, int b) {
    if((a = find(a)) == (b = find(b))) return;
    if(sz[b] > sz[a]) swap(a, b);
    sz[a] += sz[b];
    par[b] = a;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    for(int i = 0; i < N; i++) {
        par[i] = i;
        sz[i] = 1;
    }
    long long n, k;
    cin >> n >> k;
    string s;
    cin >> s;
    SuffixArray sa(s);
    vector<vector<pair<int, int>>> q(n + 1);
    vector<int> invsa(n);
    for(int i = 0; i < (int)sa.lcp_v.size(); i++) {
        q[sa.lcp_v[i]].emplace_back(sa.sa[i], sa.sa[i + 1]);
    }
    for(int i = 0; i < n; i++) {
        invsa[sa.sa[i]] = i;
    }
    vector<pair<int, int>> ans;
    for(long long i = n; i; i--) {
        for(auto [a, b] : q[i]) {
            unite(a, b);
        }
        for(auto [a, b] : q[i]) {
            if(i * sz[find(a)] == k) {
                ans.emplace_back(find(a), i);
            }
        }
    }
    // i forgot to add the ones of length k that have nothing in common lol
    for(int i = 1; i < n - 1; i++) {
        if(sa.lcp_v[i - 1] < k and sa.lcp_v[i] < k) {
            if(n - sa.sa[i] >= k) {
                ans.emplace_back(sa.sa[i], k);
            }
        }
    }
    if(sa.lcp_v[0] < k and n - sa.sa[0] >= k) {
        ans.emplace_back(sa.sa[0], k);
    }
    if(sa.lcp_v[n - 2] < k and n - sa.sa[n - 1] >= k) {
        ans.emplace_back(sa.sa[n - 1], k);
    }
    sort(ans.begin(), ans.end(), [&](pair<int, int> a, pair<int, int> b) {
        if(invsa[a.first] == invsa[b.first]) {
            return a.second < b.second;
        }
        return invsa[a.first] < invsa[b.first];
    });
    ans.erase(unique(ans.begin(), ans.end()), ans.end());
    cout << ans.size() << ""\n"";
    if(ans.size()) {
        cout << s.substr(ans[0].first, ans[0].second) << ""\n"";
        cout << s.substr(ans.back().first, ans.back().second) << ""\n"";
    }
    return 0;
}"
YUadpAqN,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,guywithabigheart,JavaScript,Friday 7th of June 2024 06:44:14 PM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
rTSrBApN,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,PetrikDev,JavaScript,Friday 7th of June 2024 06:38:15 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
DM3yPd8Z,picrenamer.py,Yesideez,Python,Friday 7th of June 2024 06:34:57 PM CDT,"# $VER: picrenamer.py v1.01 (08-Jun-2024) by Zeb/Slipstream

# bugs:
#   * the picture exif tag routine is not bug free and needs to be replaced with
#     a proper EXIF tag reading routine that works on all images and is fail safe.
#   * the parsing routine currently fails to check if a parameter value is present

from sys import argv
from glob import glob
from pathlib import Path
from PIL import Image
from os import rename
from moviepy.editor import VideoFileClip
import ffmpeg

#default values
strDirName="".""
blnCommit=False
strAdd=""""

def checkSlash(str):
  if str[len(str)-1]==""/"":
    return True
  else:
    return False

intCount=[0,0]

#parse the arguments on the command line
intArgC=len(argv)
if intArgC>1: #if no arguments use default values set at the top
  for i in range(1,intArgC):
    if argv[i]==""-d"": #check for a directory name
      strDirName=argv[i+1]
      i+=1
    if argv[i]==""commit"": #check for commit
      blnCommit=True
    if argv[i]==""-s"": #check for a string to add
      strAdd=argv[i+1]
      i+=1

if not checkSlash(strDirName):
  strDirName=strDirName+""/""
print(f""Dir Name: {strDirName}"")
lstFiles=glob(strDirName+""*.*"") #[j|J][p|P][g|G]
lstFiles.sort()

for i in lstFiles:
  tmpFileName=i.lower()
  if tmpFileName.find("".jpg"")>0:
#    print(f""DBG: {tmpFileName} {tmpFileName.find('.jpg')}"")
    intCount[0]+=1
    im=Image.open(i)
    tmp=im.getexif()
    dt=tmp[306].split("" "") #extract the date time into a list
    tm=dt[1].split("":"")    #extract the date into a list
    dt=dt[0].split("":"")    #extract the time into a list
    strAfter=f""{strDirName}{dt[0]}-{dt[1]}-{dt[2]} {tm[0]}-{tm[1]}-{tm[2]}""
    if len(strAdd)>0:
      strAfter=strAfter+"" ""+strAdd
    strAfter=strAfter+"".jpg""
    file=Path(strAfter)
    if blnCommit:
      if file.exists():
        print(f""ERR: File '{strAfter}' exists ({i})"")
      else:
        #print(f""Rename '{i}' to '{strAfter}'"")
        rename(i,strAfter)
    else:
      print(f"">'{i}' to '{strAfter}'"")
  if tmpFileName.find("".mp4"")>0:
    intCount[1]+=1
    video=ffmpeg.probe(i)
    strCreationDT=video['streams'][0]['tags']['creation_time']
    strCreationD=strCreationDT[0:10]
    strCreationT=strCreationDT[11:19]
    strCreationT=strCreationT.replace(':','-')
#    print(f""Find: {strCreationT.find(':')}"")
#    print(f""Creation Date/Time: {strCreationD} {strCreationT}"")
    strAfter=f""{strDirName}{strCreationD} {strCreationT}""
    if len(strAdd)>0:
      strAfter=strAfter+"" ""+strAdd
    strAfter=strAfter+"".mp4""
    file=Path(strAfter)
    if blnCommit:
      if file.exists():
        print(f""ERR: File '{strAfter}' exists ({i})"")
      else:
        #print(f""Rename '{i}' to '{strAfter}'"")
        rename(i,strAfter)
    else:
      print(f"">'{i}' to '{strAfter}'"")

if blnCommit:
  print(f""Files: {intCount[0]+intCount[1]}/{len(lstFiles)}"")
else:
  print(f""Files: {intCount[0]+intCount[1]} (nothing has been changed)"")"
geEYmvG7,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,x3kiN,JavaScript,Friday 7th of June 2024 06:32:15 PM CDT,"G2A.com complimentary gift card & games guide.
Any voucher for free on G2A.com including Steam gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
Ypfcz2UX,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,FeasModz514,JavaScript,Friday 7th of June 2024 06:26:16 PM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Steam gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
GqjJf707,Reverberation/Radiant Orb Build,esuvii,Lua,Friday 7th of June 2024 06:21:07 PM CDT,"How it works:
- Your need to be lit (easy w/ Light cantrip)
- Ring 1 applies Radiating Orb, making your target lit (counts as Daylight vs enemies /w Sunlight Sensitivity)
- Ring 2 deals Radiant damage
- This causes Gloves to apply Reverberation
- Lightning Charges also cause the Glove effect
- Radiating Orb is a condition so Boots apply more Reverberation
- This happens for every hit. With Magic Missile you get an extra hit from Necklace, whereas with Eldritch Blast the Necklace gives extra Reverberation on every hit.

This means your Eldritch Blast / Magic Missile will decrease target attack rolls, STR/DEX/CON saves, and can knock enemies Prone. As well as adding Lightning/Radiant damage to every hit.

The Boots apply Reverberation on ANY condition. Ability Drain Illithid Power means any attack can proc the Boots. For a non-caster you can use Boots with Phalar Aluve, and run in/out of Shriek range many times to proc Boots many times.

Note: Thunder immune enemies are immune to Reverberation. Similarly Radiant or Lightning immune enemies will reduce your ability to apply these conditions.

------------------------
GLOVES:
Gloves of Belligerent Skies - Chest near Vlaakith in Crèche
When the wearer deals Thunder, Lightning, or Radiant damage, inflict 2 turns of Reverberation.
https://bg3.wiki/wiki/Gloves_of_Belligerent_Skies
-------------------------
BOOTS:
Boots of Stormy Clamour - Sold by Omeluum
When the wearer inflicts a condition upon a hostile creature, they also inflict 2 turns of Reverberation.
https://bg3.wiki/wiki/Boots_of_Stormy_Clamour
------------------------
RINGS:
1) Coruscation Ring - Last Light Inn Cellar
When the wearer deals spell damage while illuminated by a light source, they also inflict Radiating Orb upon the target for 2 turns.
https://baldursgate3.wiki.fextralife.com/Coruscation+Ring

2) Callous Glow Ring - Treasure Room in Gauntlet of Shar
The wearer deals an additional 2 points of Radiant damage against creatures that are illuminated.
https://baldursgate3.wiki.fextralife.com/Coruscation+Ring
------------------------
NECKLACE:
Eldritch Blast: Spineshudder Amulet - Upstairs in Moonrise
When the wearer deals damage with a ranged Spell Attack, inflict 2 turns of 
Reverberation.
https://bg3.wiki/wiki/Spineshudder_Amulet

Magic Missile: Psychic Spark - Sold by Blurg
Shoot an additional dart whenever you cast Magic Missile.
https://baldursgate3.wiki.fextralife.com/Psychic+Spark
------------------------
WEAPONS:
Act 1) The Spellsparkler - Waukeen's Rest
When the wielder deals damage with a spell or cantrip, they gain 2 Lightning Charges.
https://baldursgate3.wiki.fextralife.com/The+Spellsparkler

Act 3) Markoheshkir (Bolts of Doom) - Ramazith's Tower
When you deal spell damage, gain 1 Lightning Charge.
https://bg3.wiki/wiki/Markoheshkir

The craziest setup is Dual Wielder feat using both of these staffs.
------------------------


Honorable Mentions:
Thunderskin Cloak - Sold in Moonrise
Could be a good choice for a frontline tank.
When a creature with Reverberation deals damage to the wearer, the creature needs to make a Constitution saving throw or become Dazed.
https://bg3.wiki/wiki/Thunderskin_Cloak

Diadem of Arcane Synergy - Looted in Crèche Y'llek
Situational but good if you plan to do weapon attacks, e.g. in a Gish build.
When you inflict a condition, gain Arcane Synergy (adds Spell Casting Ability Modifier to weapon attacks).
https://bg3.wiki/wiki/Diadem_of_Arcane_Synergy

Phalar Aluve (Shriek) - The Underdark
Could wear on a different character, or dual wield a with Spellsparkler and run into melee. Adds a lot more conditions and damage to every hit.
Affected entity has 1d4 penalty to all Saving throws. When it is attacked, it takes an additional 1d4 Thunder damage.
https://bg3.wiki/wiki/Phalar_Aluve

Artistry of War
In Act 3 your Wizard can scribe Curriculum of Strategy: Artistry of War, from Ramazith's Tower. This is a 5th level upgrade to Magic Missiles, which deals huge damage: 2d6+6 Force damage per missile. This is 12d6+36 Force damage split across 6 hits, compared to a 5th level Magic Missile which deals 7d4+7 Force damage split across 7 hits (or 8d4+8 across 8 hits w/ the neck). Even scribed this spell is limited to one use per Short Rest."
0KnkSCJD,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,kiraezwhethe,JavaScript,Friday 7th of June 2024 06:20:17 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Want to know why I made this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
LutcGPTn,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,ColtM4A2,JavaScript,Friday 7th of June 2024 06:14:16 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
nu9hpzEW,🤑 G2A.com Free Gift Card Guide Jun 2024 FIX 🤑,jusst2k4,GetText,Friday 7th of June 2024 06:10:29 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_695264.pdf

Working as of:
08 June 2024"
UFvKnLcR,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,Skarface-MKL,JavaScript,Friday 7th of June 2024 06:08:16 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
Jzac3YQx,Untitled,avraal,Java,Friday 7th of June 2024 06:06:22 PM CDT,"package com.ludwici.carpetvariants.block;

import com.google.common.collect.ImmutableMap;
import com.mojang.serialization.MapCodec;
import net.minecraft.Util;
import net.minecraft.core.BlockPos;
import net.minecraft.core.Direction;
import net.minecraft.world.item.context.BlockPlaceContext;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.LevelAccessor;
import net.minecraft.world.level.LevelReader;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.block.state.StateDefinition;
import net.minecraft.world.level.block.state.properties.BooleanProperty;
import net.minecraft.world.phys.shapes.CollisionContext;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;

import javax.annotation.Nullable;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

public class TestWoolCarpetBlock extends CarpetBlock {
    public static final MapCodec<TestWoolCarpetBlock> CODEC = simpleCodec(TestWoolCarpetBlock::new);

    public static final BooleanProperty UP = PipeBlock.UP;
    public static final BooleanProperty DOWN = PipeBlock.DOWN;
    public static final BooleanProperty NORTH = PipeBlock.NORTH;
    public static final BooleanProperty EAST = PipeBlock.EAST;
    public static final BooleanProperty SOUTH = PipeBlock.SOUTH;
    public static final BooleanProperty WEST = PipeBlock.WEST;

    public static final Map<Direction, BooleanProperty> PROPERTY_BY_DIRECTION = PipeBlock.PROPERTY_BY_DIRECTION
            .entrySet()
            .stream()
//            .filter(p_57886_ -> p_57886_.getKey() != Direction.DOWN)
            .collect(Util.toMap());

    private static final VoxelShape UP_AABB = Block.box(0.0, 15.0, 0.0, 16.0, 16.0, 16.0);
    private static final VoxelShape DOWN_AABB = Block.box(0.0, 0.0, 0.0, 16.0, 1.0, 16.0);
    private static final VoxelShape WEST_AABB = Block.box(0.0, 0.0, 0.0, 1.0, 16.0, 16.0);
    private static final VoxelShape EAST_AABB = Block.box(15.0, 0.0, 0.0, 16.0, 16.0, 16.0);
    private static final VoxelShape NORTH_AABB = Block.box(0.0, 0.0, 0.0, 16.0, 16.0, 1.0);
    private static final VoxelShape SOUTH_AABB = Block.box(0.0, 0.0, 15.0, 16.0, 16.0, 16.0);
    private final Map<BlockState, VoxelShape> shapesCache;

    public TestWoolCarpetBlock(Properties p_58292_) {
        super(p_58292_);
        this.registerDefaultState(
                this.stateDefinition
                        .any()
                        .setValue(UP, Boolean.FALSE)
                        .setValue(DOWN, Boolean.FALSE)
                        .setValue(NORTH, Boolean.FALSE)
                        .setValue(EAST, Boolean.FALSE)
                        .setValue(SOUTH, Boolean.FALSE)
                        .setValue(WEST, Boolean.FALSE)
        );

        this.shapesCache = ImmutableMap.copyOf(
                this.stateDefinition.getPossibleStates().stream().collect(Collectors.toMap(Function.identity(), TestWoolCarpetBlock::calculateShape))
        );
    }

    private static VoxelShape calculateShape(BlockState pState) {
        VoxelShape voxelshape = Shapes.empty();

        if (pState.getValue(UP)) {
            voxelshape = UP_AABB;
        }

        if (pState.getValue(DOWN)) {
            voxelshape = Shapes.or(voxelshape, DOWN_AABB);
        }

        if (pState.getValue(NORTH)) {
            voxelshape = Shapes.or(voxelshape, NORTH_AABB);
        }

        if (pState.getValue(SOUTH)) {
            voxelshape = Shapes.or(voxelshape, SOUTH_AABB);
        }

        if (pState.getValue(EAST)) {
            voxelshape = Shapes.or(voxelshape, EAST_AABB);
        }

        if (pState.getValue(WEST)) {
            voxelshape = Shapes.or(voxelshape, WEST_AABB);
        }

        return voxelshape.isEmpty() ? Shapes.block() : voxelshape;
    }

    @Override
    protected VoxelShape getShape(BlockState pState, BlockGetter pLevel, BlockPos pPos, CollisionContext pContext) {
        return this.shapesCache.get(pState);
    }

    @Override
    protected boolean canSurvive(BlockState pState, LevelReader pLevel, BlockPos pPos) {
        return this.hasFaces(this.getUpdatedState(pState, pLevel, pPos));
    }

    public static boolean isAcceptableNeighbour(BlockGetter pBlockReader, BlockPos pNeighborPos, Direction pAttachedFace) {
        return MultifaceBlock.canAttachTo(pBlockReader, pAttachedFace, pNeighborPos, pBlockReader.getBlockState(pNeighborPos));
    }

    public static BooleanProperty getPropertyForFace(Direction pFace) {
        return PROPERTY_BY_DIRECTION.get(pFace);
    }

    private boolean canSupportAtFace(BlockGetter pLevel, BlockPos pPos, Direction pDirection) {
//        if (pDirection == Direction.DOWN) {
//            return false;
//        } else {
            BlockPos blockpos = pPos.relative(pDirection);
            if (isAcceptableNeighbour(pLevel, blockpos, pDirection)) {
                return true;
            } else if (pDirection.getAxis() == Direction.Axis.Y) {
                return false;
            } else {
                BooleanProperty booleanproperty = PROPERTY_BY_DIRECTION.get(pDirection);
                BlockState blockstate = pLevel.getBlockState(pPos.above());
                return blockstate.is(this) && blockstate.getValue(booleanproperty);
            }
//        }
    }

    @Override
    protected boolean canBeReplaced(BlockState pState, BlockPlaceContext pUseContext) {
        BlockState blockstate = pUseContext.getLevel().getBlockState(pUseContext.getClickedPos());
        return blockstate.is(this) ? this.countFaces(blockstate) < PROPERTY_BY_DIRECTION.size() : super.canBeReplaced(pState, pUseContext);
    }

    private BlockState getUpdatedState(BlockState pState, BlockGetter pLevel, BlockPos pPos) {
        BlockPos blockpos = pPos.above();
//        if (pState.getValue(UP)) {
//            pState = pState.setValue(UP, Boolean.valueOf(isAcceptableNeighbour(pLevel, blockpos, Direction.DOWN)));
//        }
//
//        if (pState.getValue(DOWN)) {
//            pState = pState.setValue(DOWN, Boolean.valueOf(isAcceptableNeighbour(pLevel, blockpos, Direction.UP)));
//        }

        BlockState blockstate = null;

        for (Direction direction : Direction.Plane.HORIZONTAL) {
            BooleanProperty booleanproperty = getPropertyForFace(direction);
            if (pState.getValue(booleanproperty)) {
                boolean flag = this.canSupportAtFace(pLevel, pPos, direction);
                if (!flag) {
                    if (blockstate == null) {
                        blockstate = pLevel.getBlockState(blockpos);
                    }

                    flag = blockstate.is(this) && blockstate.getValue(booleanproperty);
                }

                pState = pState.setValue(booleanproperty, Boolean.valueOf(flag));
            }
        }

        return pState;
    }

    private boolean hasFaces(BlockState pState) {
        return this.countFaces(pState) > 0;
    }

    private int countFaces(BlockState pState) {
        int i = 0;

        for (BooleanProperty booleanproperty : PROPERTY_BY_DIRECTION.values()) {
            if (pState.getValue(booleanproperty)) {
                i++;
            }
        }

        return i;
    }

    @Override
    protected BlockState updateShape(BlockState pState, Direction pFacing, BlockState pFacingState, LevelAccessor pLevel, BlockPos pCurrentPos, BlockPos pFacingPos) {
//        if (pFacing == Direction.DOWN) {
//            return pState;
//        } else {
            BlockState blockstate = this.getUpdatedState(pState, pLevel, pCurrentPos);
            return !this.hasFaces(blockstate) ? Blocks.AIR.defaultBlockState() : blockstate;
//        }
    }

    @Nullable
    @Override
    public BlockState getStateForPlacement(BlockPlaceContext pContext) {
        BlockState blockstate = pContext.getLevel().getBlockState(pContext.getClickedPos());
        BlockState blockstate1;
        boolean flag = false;
        if (blockstate.is(this)) {
            blockstate1 = blockstate;
            flag = true;
        } else if (blockstate.getBlock() instanceof CarpetBlock) {
            blockstate1 = this.defaultBlockState().setValue(DOWN, true);
        } else {
            blockstate1 = this.defaultBlockState();
        }

        for (Direction direction : pContext.getNearestLookingDirections()) {
//            if (direction != Direction.DOWN) {
                BooleanProperty booleanproperty = getPropertyForFace(direction);
                boolean flag1 = flag && blockstate.getValue(booleanproperty);
                if (!flag1 && this.canSupportAtFace(pContext.getLevel(), pContext.getClickedPos(), direction)) {
                    return blockstate1.setValue(booleanproperty, Boolean.valueOf(true));
                }
//            }
        }

        return flag ? blockstate1 : null;
    }

    @Override
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> pBuilder) {
        pBuilder.add(UP, DOWN, NORTH, EAST, SOUTH, WEST);
    }

    @Override
    protected BlockState rotate(BlockState pState, Rotation pRotate) {
        switch (pRotate) {
            case CLOCKWISE_180:
                return pState.setValue(NORTH, pState.getValue(SOUTH))
                        .setValue(EAST, pState.getValue(WEST))
                        .setValue(SOUTH, pState.getValue(NORTH))
                        .setValue(WEST, pState.getValue(EAST));
            case COUNTERCLOCKWISE_90:
                return pState.setValue(NORTH, pState.getValue(EAST))
                        .setValue(EAST, pState.getValue(SOUTH))
                        .setValue(SOUTH, pState.getValue(WEST))
                        .setValue(WEST, pState.getValue(NORTH));
            case CLOCKWISE_90:
                return pState.setValue(NORTH, pState.getValue(WEST))
                        .setValue(EAST, pState.getValue(NORTH))
                        .setValue(SOUTH, pState.getValue(EAST))
                        .setValue(WEST, pState.getValue(SOUTH));
            default:
                return pState;
        }
    }

    @Override
    protected BlockState mirror(BlockState pState, Mirror pMirror) {
        switch (pMirror) {
            case LEFT_RIGHT:
                return pState.setValue(NORTH, pState.getValue(SOUTH)).setValue(SOUTH, pState.getValue(NORTH));
            case FRONT_BACK:
                return pState.setValue(EAST, pState.getValue(WEST)).setValue(WEST, pState.getValue(EAST));
            default:
                return super.mirror(pState, pMirror);
        }
    }

    @Override
    public MapCodec<? extends CarpetBlock> codec() {
        return CODEC;
    }
}
"
s6qXy7Gj,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,thepplayz,JavaScript,Friday 7th of June 2024 06:02:17 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
sNZhZ4ye,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,sirmikey,JavaScript,Friday 7th of June 2024 05:56:18 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Wondering what inspired this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
PTqXcGp5,turtle mining for pros edited,Livis,Lua,Friday 7th of June 2024 05:52:43 PM CDT,"args={...}
height = tonumber(args[1])
width = tonumber(args[2])
length = tonumber(args[3])
fuelMoves = 80
moves = 0

function moved()
    moves = moves + 1
	if moves % 20 == 0 then
		for i=2,16 do
			local details = turtle.getItemDetail(i)
			if details ~= nil then
				if details[""name""] == ""minecraft:cobblestone"" then
					turtle.select(i)
					turtle.drop()
					turtle.select(1)
				end
			end
		end
	end
    if moves >= fuelMoves then
        refuel()
        moves = 0
    end
end

function refuel()
    turtle.select(1)
    turtle.refuel(1)
	local fuelCount = turtle.getItemCount(1)
	if fuelCount == 0 then
		print(""Low fuel level!"")
		return
	end	
	for i=2,16 do
		if turtle.compareTo(i) then
			local fuelTransfer = math.min(64-fuelCount, turtle.getItemCount(i))
			turtle.select(i)
			turtle.transferTo(1, fuelTransfer)
			turtle.select(1)
			fuelCount = fuelCount + fuelTransfer
			if fuelCount >= 64 then
				break
			end
		end
	end
end
 
function detect()
	if not turtle.detect() then return false end
	local _,data = turtle.inspect()
	if type(data) == ""table"" then
		if data[""name""] == ""minecraft:chest"" then
			return false
		end
	end
	return true
end
	
function detectUp()
	if not turtle.detectUp() then return false end
	local _,data = turtle.inspectUp()
	if type(data) == ""table"" then
		if data[""name""] == ""minecraft:chest"" then
			return false
		end
	end
	return true
end

function detectDown()
	if not turtle.detectDown() then return false end
	local _,data = turtle.inspectDown()
	if type(data) == ""table"" then
		if data[""name""] == ""minecraft:chest"" then
			return false
		end
	end
	return true
end

refuel()
for l = 1, length do
    if detect() then
       turtle.dig()
    end
    turtle.forward()
    moved()
    if turtle.getItemCount(16) > 0 then
    turtle.select(2)
    turtle.place()
    for i = 3, 16 do
      turtle.select(i)
      turtle.drop() 
    end
    turtle.select(1)  
  	end
    if l % 2 == 1 then
        for w = 1, width do
            if w % 2 == 1 then
                if detectDown() then
                    turtle.digDown()
                end
                for h = 1, height-3 do
                    if detectUp() then
                       turtle.digUp()
                    end
                    turtle.up()
                    moved()
                end
                if detectUp() then
                    turtle.digUp()
                end
                if w ~= width then
                    turtle.turnRight()
                    if detect() then
                        turtle.dig()
                    end
                    turtle.forward()
                    moved()
                    turtle.turnLeft()
                end
            else
                if detectUp() then
                    turtle.digUp()
                end
                for h = 1, height-3 do
                    if detectDown() then
                       turtle.digDown()
                    end
                    turtle.down()
                    moved()
                end
                if detectDown() then
                    turtle.digDown()
                end
                if w ~= width then
                    turtle.turnRight()
                    if detect() then
                        turtle.dig()
                    end
                    turtle.forward()
                    moved()
                    turtle.turnLeft()
                end
            end
        end
    else
        if width % 2 == 1 then
            for w = 1, width do
                if w % 2 == 1 then
                    if detectUp() then
                        turtle.digUp()
                    end
                    for h = 1, height-3 do
                        if detectDown() then
                           turtle.digDown()
                        end
                        turtle.down()
                        moved()
                    end
                    if detectDown() then
                        turtle.digDown()
                    end
                    if w ~= width then
                        turtle.turnLeft()
                        if detect() then
                            turtle.dig()
                        end
                        turtle.forward()
                        moved()
                        turtle.turnRight()
                    end
                else
                    if detectDown() then
                        turtle.digDown()
                    end
                    for h = 1, height-3 do
                        if detectUp() then
                           turtle.digUp()
                        end
                        turtle.up()
                        moved()
                    end
                    if detectUp() then
                        turtle.digUp()
                    end
                    if w ~= width then
                        turtle.turnLeft()
                        if detect() then
                            turtle.dig()
                        end
                        turtle.forward()
                        moved()
                        turtle.turnRight()
                    end
                end
            end
        else
            for w = 1, width do
                if w % 2 == 1 then
                    if detectDown() then
                        turtle.digDown()
                    end
                    for h = 1, height-3 do
                        if detectUp() then
                           turtle.digUp()
                        end
                        turtle.up()
                        moved()
                    end
                    if detectUp() then
                        turtle.digUp()
                    end
                    if w ~= width then
                        turtle.turnLeft()
                        if detect() then
                            turtle.dig()
                        end
                        turtle.forward()
                        moved()
                        turtle.turnRight()
                    end
                else
                    if detectUp() then
                        turtle.digUp()
                    end
                    for h = 1, height-3 do
                        if detectDown() then
                           turtle.digDown()
                        end
                        turtle.down()
                        moved()
                    end
                    if detectDown() then
                        turtle.digDown()
                    end
                    if w ~= width then
                        turtle.turnLeft()
                        if detect() then
                            turtle.dig()
                        end
                        turtle.forward()
                        moved()
                        turtle.turnRight()
                    end
                end
            end
        end
    end
end"
wvfA8R2V,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,sayid83,JavaScript,Friday 7th of June 2024 05:50:17 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
SaWDAHtM,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,PetrikDev,JavaScript,Friday 7th of June 2024 05:44:18 PM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Want to know why I made this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
tbBc7VfW,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,x3kiN,JavaScript,Friday 7th of June 2024 05:38:17 PM CDT,"G2A.com free gift card & games guide.
Any gift card for free on G2A.com including Playstation gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Want to know why I made this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
uV1yxzp0,Installation of Flutter for openSUSE Tumbleweed,JamppaKaukaa,Bash,Friday 7th of June 2024 05:36:04 PM CDT,"!/bin/bash
# Install script for Flutter in openSUSE
#
# Author: Lauri Jakku <lja@lja.fi> or <ljakku77@gmail.com>
#

# Copy theys to .profile --- START -------------------------------------
export DEV_FULL_PATH=""${HOME}/dev""
export SDK_FULL_PATH=""${DEV_FULL_PATH}/SDK""

# Dart settings
export DART_SDK_PATH=""${SDK_FULL_PATH}/dart-sdk""
export DART_BIN_PATH=""${DART_SDK_PATH}/bin""

# Android settings
export ANDROID_FULL_PATH=""${DEV_FULL_PATH}/android-studio""
export ANDROID_BIN_PATH=""${ANDROID_FULL_PATH}/bin""
export ANDROID_SDK_PATH=""${SDK_FULL_PATH}/Android""
export ANDROID_HOME=""${ANDROID_SDK_PATH}""

# PATH Helpers
export ANDROID_PATH_TOOLS=""${ANDROID_SDK_PATH}/tools""
export ANDROID_PATH_TOOLS_BIN=""${ANDROID_PATH_TOOLS}/bin""
export ANDROID_PATH_PLATFORM_TOOLS=""${ANDROID_SDK_PATH}/tools""

export ANDROID_PATHS=""${ANDROID_BIN_PATH}:${ANDROID_PATH_TOOLS}:${ANDROID_PATH_>

export PATH=""${ANDROID_PATHS}:${DART_BIN_PATH}:$PATH""
# Copy theys to .profile --- END ---------------------------------------

sudo zypper addrepo --refresh https://download.opensuse.org/repositories/system>
sudo zypper --gpg-auto-import-keys refresh
sudo zypper dup --from snappy
sudo zypper install snapd
sudo systemctl enable --now snapd
sudo systemctl enable --now snapd.apparmor
sudo snap install flutter --classic

echo ""Getting stuff....""
wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
wget https://storage.googleapis.com/dart-archive/channels/beta/release/3.5.0-180.3.beta/sdk/dartsdk-linux-x64-release.zip
wget https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2023.3.1.19/android-studio-2023.3.1.19-linux.tar.gz

FROM=$PWD
# Android & DART
mkdir -p $ANDROID_SDK_PATH
(
        cd $ANDROID_SDK_PATH
        sudo tar zxvf ${FROM}/android-studio-2023.3.1.19-linux.tar.gz
)

mkdir -p $DART_SDK_PATH
(
        cd $DART_SDK_PATH
        unzip ${FROM}/dartsdk-linux-x64-release.zip
)

sudo zypper install ./code-1.90.0-1717531925.el8.x86_64.rpm
sudo zypper install ./google-chrome-stable_current_x86_64.rpm 

echo ""Android SDK installed at: ${ANDROID_SDK_PATH}""
echo ""DART SDK installed at: ${DART_SDK_PATH}""

"
uC2tpcEt,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,FeasModz514,JavaScript,Friday 7th of June 2024 05:32:12 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
XzpUPZmp,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,kjihu25,JavaScript,Friday 7th of June 2024 05:26:09 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Xbox gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
unvvXWNX,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,Bufayez,JavaScript,Friday 7th of June 2024 05:20:08 PM CDT,"G2A.com complimentary gift card & games guide.
Any voucher for free on G2A.com including Xbox gift cards & everything else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
pUkyJmsU,metal_albedo_analysis_tool_plus,Python253,Python,Friday 7th of June 2024 05:16:23 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: metal_albedo_analysis_tool_plus.py
# Version: 1.0.1
# Author: Jeoi Reqi

""""""
Description:
    - This script provides a comprehensive suite of tools for analyzing metal properties, focusing on albedo and index of refraction (IOR).
    - Albedo refers to the proportion of incident light that is reflected by a surface, making it a crucial factor in determining the visual appearance of metals.
    - Index of refraction (IOR) quantifies how light bends as it passes through a material, influencing its optical properties such as reflection and refraction.
    - By leveraging the provided functionalities, users can explore and understand the albedo characteristics of various metals.
    - Users can also compare the metal IOR values to gain insights into their optical behaviors.
    - This script also outputs the difference in value of the compared metal IOR to the terminal.

Requirements:
    - Python 3.x
    - Matplotlib library for data visualization

Functions:
    - visualize_metal_colors():
        Visualizes metal colors by plotting their albedo.
    - display_metal_data():
        Displays the available metal data as a numbered list.
    - calculate_albedo():
        Calculates the albedo of a specific metal selected by the user.
    - compare_ior(metal1, metal2):
        Compares the index of refraction between two metals selected by the user.
    - visualize_common_materials_albedo():
        Visualizes the albedo of common materials.

Usage:
    - Run the script in a Python environment.
    - Follow the on-screen menu options to choose between different functionalities.
    - Enter the appropriate input as prompted to perform desired actions.

Example Output:

                :: MENU OPTIONS ::

                1. Visualize Metal Colors
                2. Calculate Albedo
                3. Compare Index of Refraction
                4. Visualize Albedo of Common Materials
                0. Exit

                Enter your choice (0-4): 3

                Metal data:
                 1. Silver
                 2. Gold
                 3. Copper
                 4. Aluminium
                 5. Chromium
                 6. Lead
                 7. Platinum
                 8. Titanium
                 9. Tungsten
                10. Iron
                11. Vanadium
                12. Zinc
                13. Nickel
                14. Mercury
                15. Cobalt

                Enter the number of the first metal: 7

                Enter the number of the second metal: 11

                Vanadium has a higher Index of Refraction (1.0340) than Platinum (1.0240).
                The difference is 0.0100.

Additional Notes:
    - Metal data includes information such as RGB values and index of refraction.
    - The script utilizes Matplotlib for data visualization.
    - Users can interactively explore metal properties and compare them using this tool.
""""""

import numpy as np
import matplotlib.pyplot as plt

# Common Metal Data
metal_data = {
    ""Silver"": {""Red_ACEScg"": 0.758765, ""Green_ACEScg"": 0.755048, ""Blue_ACEScg"": 0.752412, ""IOR"": 1.082},
    ""Gold"": {""Red_ACEScg"": 0.659051, ""Green_ACEScg"": 0.458738, ""Blue_ACEScg"": 0.123940, ""IOR"": 1.35002},
    ""Copper"": {""Red_ACEScg"": 0.614256, ""Green_ACEScg"": 0.298303, ""Blue_ACEScg"": 0.213841, ""IOR"": 1.21901},
    ""Aluminium"": {""Red_ACEScg"": 0.618401, ""Green_ACEScg"": 0.672947, ""Blue_ACEScg"": 0.682368, ""IOR"": 1.002},
    ""Chromium"": {""Red_ACEScg"": 0.140349, ""Green_ACEScg"": 0.140349, ""Blue_ACEScg"": 0.140349, ""IOR"": 1.03},
    ""Lead"": {""Red_ACEScg"": 0.264084, ""Green_ACEScg"": 0.265443, ""Blue_ACEScg"": 0.277903, ""IOR"": 1.016},
    ""Platinum"": {""Red_ACEScg"": 0.654022, ""Green_ACEScg"": 0.616726, ""Blue_ACEScg"": 0.377176, ""IOR"": 1.024},
    ""Titanium"": {""Red_ACEScg"": 0.699456, ""Green_ACEScg"": 0.637539, ""Blue_ACEScg"": 0.297492, ""IOR"": 1.086},
    ""Tungsten"": {""Red_ACEScg"": 0.505142, ""Green_ACEScg"": 0.283667, ""Blue_ACEScg"": 0.179808, ""IOR"": 1.007},
    ""Iron"": {""Red_ACEScg"": 0.456733, ""Green_ACEScg"": 0.434045, ""Blue_ACEScg"": 0.262660, ""IOR"": 1.006},
    ""Vanadium"": {""Red_ACEScg"": 0.644844, ""Green_ACEScg"": 0.523107, ""Blue_ACEScg"": 0.196363, ""IOR"": 1.034},
    ""Zinc"": {""Red_ACEScg"": 0.423637, ""Green_ACEScg"": 0.418052, ""Blue_ACEScg"": 0.409058, ""IOR"": 1.011},
    ""Nickel"": {""Red_ACEScg"": 0.457723, ""Green_ACEScg"": 0.399388, ""Blue_ACEScg"": 0.169834, ""IOR"": 1.016},
    ""Mercury"": {""Red_ACEScg"": 0.167639, ""Green_ACEScg"": 0.167639, ""Blue_ACEScg"": 0.167639, ""IOR"": 1.013},
    ""Cobalt"": {""Red_ACEScg"": 0.071277, ""Green_ACEScg"": 0.045923, ""Blue_ACEScg"": 0.015718, ""IOR"": 1.031},
}

# Common Materials & Their Albedo Range (Min, Max)
common_materials = {
    ""Acrylic glass"": (1.490, 1.492),
    ""Air"": (1.000, None),
    ""Alcohol, Ethyl (grain)"": (1.360, None),
    ""Aluminum"": (1.390, 1.440),
    ""Asphalt"": (1.635, None),
    ""Beer"": (1.345, None),
    ""Bronze"": (1.180, None),
    ""Copper"": (1.100, 2.430),
    ""Crystal"": (2.000, None),
    ""Diamond"": (2.418, None),
    ""Emerald"": (1.560, 1.605),
    ""Eye, Lens"": (1.410, None),
    ""Glass"": (1.500, None),
    ""Glass, Pyrex"": (1.474, None),
    ""Gold"": (0.470, None),
    ""Ice"": (1.309, None),
    ""Iron"": (2.950, None),
    ""Ivory"": (1.540, None),
    ""Lead"": (2.010, None),
    ""Lucite"": (1.495, None),
    ""Mercury (liquid)"": (1.620, None),
    ""Milk"": (1.350, None),
    ""Nickel"": (1.080, None),
    ""Nylon"": (1.530, None),
    ""Pearl"": (1.530, 1.690),
    ""Plastic"": (1.460, None),
    ""Teflon"": (1.350, 1.380),
    ""Titanium"": (2.160, None),
    ""Vodka"": (1.363, None),
    ""Water (35 deg C)"": (1.325, None),
}

# Function To Visualize Metal Colors
def visualize_metal_colors():
    """"""
    Visualizes metal colors by plotting their albedo.
    """"""
    # Initialize empty lists to store metal names and their respective albedo values
    color_values = []                    # List to store albedo values
    metal_names = []                     # List to store metal names

    # Iterate through the metal_data dictionary to extract metal names and albedo values
    for metal_name, metal_data_single in metal_data.items():
        metal_names.append(metal_name)   # Append the metal name to the metal_names list
        # Calculate the average albedo by summing up the RGB values and dividing by 3
        albedo = (metal_data_single[""Red_ACEScg""] + metal_data_single[""Green_ACEScg""] + metal_data_single[""Blue_ACEScg""]) / 3
        color_values.append(albedo)      # Append the calculated albedo to the color_values list

    # Plotting the metal albedo values as a horizontal bar chart
    plt.figure(figsize=(10, 6))          # Set the figure size
    plt.title('Metal Albedo')            # Set the title of the plot
    plt.barh(metal_names, color_values, color='steelblue')   # Create a horizontal bar chart
    plt.xlabel('Albedo')                 # Set the label for the x-axis
    plt.ylabel('Metal')                  # Set the label for the y-axis
    plt.grid(axis='x')                   # Add gridlines along the x-axis
    plt.show()                           # Display the plot

# Function To Display Metal Data As A Numbered List
def display_metal_data():
    """"""
    Displays the metal data as a numbered list.
    """"""
    print(""\nMetal data:"")
    # Step 1: Iterate through metal_data dictionary and enumerate items
    for index, (metal_name, _) in enumerate(metal_data.items(), start=1):
        metal_index = f""{index:2}""      # Pad single digits with a space
        # Step 2: Print metal index and name
        print(f""{metal_index}. {metal_name}"")

# Function To Calculate The Albedo Of A Specific Metal
def calculate_albedo():
    """"""
    Calculates the albedo of a specific metal selected by the user.
    """"""
    display_metal_data()                # Step 1: Display the list of metals
    metal_index_str = input(""\nEnter the number of the metal: "")
    try:
        metal_index = int(metal_index_str)
        if 1 <= metal_index <= len(metal_data):
            metal_name = list(metal_data.keys())[metal_index - 1]
            metal_single = metal_data[metal_name]
            # Step 2: Calculate the albedo using RGB values
            albedo = (metal_single[""Red_ACEScg""] + metal_single[""Green_ACEScg""] + metal_single[""Blue_ACEScg""]) / 3
            print(f""\nThe albedo of {metal_name} is: {albedo:.4f}"")
        else:
            print(""\nInvalid metal number!"")
    except ValueError:
        print(""\nInvalid input! Please enter a valid number."")

# Function To Compare The Index Of Refraction Between Two Metals
def compare_ior(metal1_str, metal2_str):
    """"""
    Compares the Index of Refraction between two metals selected by the user.
    """"""
    try:
        metal1_index = int(metal1_str)
        metal2_index = int(metal2_str)
        if 1 <= metal1_index <= len(metal_data) and 1 <= metal2_index <= len(metal_data):
            metal1_name = list(metal_data.keys())[metal1_index - 1]
            metal2_name = list(metal_data.keys())[metal2_index - 1]
            metal1_data = metal_data[metal1_name]
            metal2_data = metal_data[metal2_name]
            if metal1_data[""IOR""] > metal2_data[""IOR""]:
                # Step 1: Print comparison result if metal1's IOR is higher
                print(f""\n{metal1_name} has a higher Index of Refraction ({metal1_data['IOR']:.4f}) than {metal2_name} ({metal2_data['IOR']:.4f})."")
                print(f""The difference is {metal1_data['IOR'] - metal2_data['IOR']:.4f}."")
            elif metal1_data[""IOR""] < metal2_data[""IOR""]:
                # Step 2: Print comparison result if metal2's IOR is higher
                print(f""\n{metal2_name} has a higher Index of Refraction ({metal2_data['IOR']:.4f}) than {metal1_name} ({metal1_data['IOR']:.4f})."")
                print(f""The difference is {metal2_data['IOR'] - metal1_data['IOR']:.4f}."")
            else:
                # Step 3: Print if both metals have equal IOR
                print(f""\nThe Index of Refraction of {metal1_name} ({metal1_data['IOR']:.4f}) and {metal2_name} ({metal2_data['IOR']:.4f}) are equal."")
        else:
            print(""\nInvalid metal numbers!"")
    except ValueError:
        print(""\nInvalid input! Please enter valid numbers."")
    print()                             # Add a blank line for clarity

# Function To Visualize Albedo Of Common Materials
def visualize_common_materials_albedo():
    """"""
    Visualizes the albedo of common materials.
    """"""
    material_names = list(common_materials.keys())
    min_values = [common_materials[material][0] if common_materials[material][0] is not None else 0 for material in material_names]
    max_values = [common_materials[material][1] if common_materials[material][1] is not None else 0 for material in material_names]

    # Convert min_values and max_values to numpy arrays and replace None with np.nan
    min_values = np.array(min_values, dtype=float)
    min_values[np.isnan(min_values)] = 0
    max_values = np.array(max_values, dtype=float)
    max_values[np.isnan(max_values)] = 0

    # Creating positions for bars
    y_pos = np.arange(len(material_names))

    # Plotting the albedo values of common materials
    plt.figure(figsize=(10, 12))
    plt.title('Albedo of Common Materials')

    # Plotting maximum values
    plt.barh(y_pos, max_values, color='yellow', label='Max')

    # Plotting minimum values
    plt.barh(y_pos, min_values, color='blue', alpha=0.5, label='Min')  # Setting alpha for minimum values

    plt.yticks(y_pos, material_names)
    plt.xlabel('Albedo Range')
    plt.ylabel('Material')
    plt.legend(loc='upper right')  # Placing the legend in the upper right corner
    plt.grid(axis='x')
    plt.show()

# Menu-Driven Interface
while True:
    print(""\n:: MENU OPTIONS ::\n"")
    print(""1. Visualize Metal Colors"")
    print(""2. Calculate Albedo"")
    print(""3. Compare Index of Refraction"")
    print(""4. Visualize Albedo of Common Materials"")
    print(""0. Exit"")

    choice = input(""\nEnter your choice (0-4): "")

    if choice == '1':
        # Print the full metal data to the terminal in a formatted manner
        print(""\nMetal Data:"")
        for metal, data in metal_data.items():
            rgb_values = ', '.join([f""{color[0]}={value:.6f}"" for color, value in data.items() if color != 'IOR'])
            print(f""{metal}: R={data['Red_ACEScg']:.6f}, G={data['Green_ACEScg']:.6f}, B={data['Blue_ACEScg']:.6f} IOR: {data['IOR']:.4f}"")
        visualize_metal_colors()
    elif choice == '2':
        calculate_albedo()
    elif choice == '3':
        display_metal_data()
        metal1 = input(""\nEnter the number of the first metal: "")
        metal2 = input(""\nEnter the number of the second metal: "")
        compare_ior(metal1, metal2)
    elif choice == '4':
        visualize_common_materials_albedo()
    elif choice == '0':
        print(""\nExiting program...   Goodbye!\n"")
        break
    else:
        print(""\nInvalid choice! Please enter a valid option.\n"")
"
hkyzKdbG,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,Alfonso1119,JavaScript,Friday 7th of June 2024 05:13:28 PM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most latest version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
1WTx8Puj,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,Garoam,JavaScript,Friday 7th of June 2024 05:07:29 PM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Want to know why I made this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
0fZQVnEQ,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,atakan1983,JavaScript,Friday 7th of June 2024 05:01:29 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
zY1DtcMH,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,tajdiqul,JavaScript,Friday 7th of June 2024 04:55:28 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any item for free on G2A.com including Playstation gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
jW3hQf6G,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,notgoodatscripting,JavaScript,Friday 7th of June 2024 04:49:28 PM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Amazon gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Wondering what inspired this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
1S8y3TUy,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,bgill55,JavaScript,Friday 7th of June 2024 04:43:29 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
b6PwmZWf,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,FreeRobux12345,JavaScript,Friday 7th of June 2024 04:37:29 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Playstation gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Wondering what inspired this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
yjSY9Vbq,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,coderpradip,JavaScript,Friday 7th of June 2024 04:31:28 PM CDT,"G2A.com complimentary gift card & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Want to know why I made this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
Xrqr2xTE,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,mikyser,JavaScript,Friday 7th of June 2024 04:25:28 PM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & anything else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Wondering what inspired this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
It'll give you all the details"
y6KKweTN,metal_albedo_analysis_tool,Python253,Python,Friday 7th of June 2024 04:22:30 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: metal_albedo_analysis_tool.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
Description:
    - This script provides a comprehensive suite of tools for analyzing metal properties, focusing on albedo and index of refraction (IOR).
    - Albedo refers to the proportion of incident light that is reflected by a surface, making it a crucial factor in determining the visual appearance of metals.
    - Index of refraction (IOR) quantifies how light bends as it passes through a material, influencing its optical properties such as reflection and refraction.
    - By leveraging the provided functionalities, users can explore and understand the albedo characteristics of various metals.
    - Users can also compare the metal IOR values to gain insights into their optical behaviors.
    - This script also outputs the difference in value of the compared metal IOR to the terminal.

Requirements:
    - Python 3.x
    - Matplotlib library for data visualization

Functions:
    - visualize_metal_colors():
        Visualizes metal colors by plotting their albedo.
    - display_metal_data():
        Displays the available metal data as a numbered list.
    - calculate_albedo():
        Calculates the albedo of a specific metal selected by the user.
    - compare_ior(metal1, metal2):
        Compares the index of refraction between two metals selected by the user.

Usage:
    - Run the script in a Python environment.
    - Follow the on-screen menu options to choose between different functionalities.
    - Enter the appropriate input as prompted to perform desired actions.

Example Output:

                :: MENU OPTIONS ::

                1. Visualize Metal Colors
                2. Calculate Albedo
                3. Compare Index of Refraction
                0. Exit

                Enter your choice (1-3) or type '0' to exit: 3

                Metal data:
                 1. Silver
                 2. Gold
                 3. Copper
                 4. Aluminium
                 5. Chromium
                 6. Lead
                 7. Platinum
                 8. Titanium
                 9. Tungsten
                10. Iron
                11. Vanadium
                12. Zinc
                13. Nickel
                14. Mercury
                15. Cobalt

                Enter the number of the first metal: 7

                Enter the number of the second metal: 12

                Platinum has a higher Index of Refraction (1.0240) than Zinc (1.0110).
                The difference is 0.0130.

Additional Notes:
    - Metal data includes information such as RGB values and index of refraction.
    - The script utilizes Matplotlib for data visualization.
    - Users can interactively explore metal properties and compare them using this tool.
""""""

import matplotlib.pyplot as plt

# Metal data
metal_data = {
    ""Silver"": {""Red_ACEScg"": 0.758765, ""Green_ACEScg"": 0.755048, ""Blue_ACEScg"": 0.752412, ""IOR"": 1.082},
    ""Gold"": {""Red_ACEScg"": 0.659051, ""Green_ACEScg"": 0.458738, ""Blue_ACEScg"": 0.123940, ""IOR"": 1.35002},
    ""Copper"": {""Red_ACEScg"": 0.614256, ""Green_ACEScg"": 0.298303, ""Blue_ACEScg"": 0.213841, ""IOR"": 1.21901},
    ""Aluminium"": {""Red_ACEScg"": 0.618401, ""Green_ACEScg"": 0.672947, ""Blue_ACEScg"": 0.682368, ""IOR"": 1.002},
    ""Chromium"": {""Red_ACEScg"": 0.140349, ""Green_ACEScg"": 0.140349, ""Blue_ACEScg"": 0.140349, ""IOR"": 1.03},
    ""Lead"": {""Red_ACEScg"": 0.264084, ""Green_ACEScg"": 0.265443, ""Blue_ACEScg"": 0.277903, ""IOR"": 1.016},
    ""Platinum"": {""Red_ACEScg"": 0.654022, ""Green_ACEScg"": 0.616726, ""Blue_ACEScg"": 0.377176, ""IOR"": 1.024},
    ""Titanium"": {""Red_ACEScg"": 0.699456, ""Green_ACEScg"": 0.637539, ""Blue_ACEScg"": 0.297492, ""IOR"": 1.086},
    ""Tungsten"": {""Red_ACEScg"": 0.505142, ""Green_ACEScg"": 0.283667, ""Blue_ACEScg"": 0.179808, ""IOR"": 1.007},
    ""Iron"": {""Red_ACEScg"": 0.456733, ""Green_ACEScg"": 0.434045, ""Blue_ACEScg"": 0.262660, ""IOR"": 1.006},
    ""Vanadium"": {""Red_ACEScg"": 0.644844, ""Green_ACEScg"": 0.523107, ""Blue_ACEScg"": 0.196363, ""IOR"": 1.034},
    ""Zinc"": {""Red_ACEScg"": 0.423637, ""Green_ACEScg"": 0.418052, ""Blue_ACEScg"": 0.409058, ""IOR"": 1.011},
    ""Nickel"": {""Red_ACEScg"": 0.457723, ""Green_ACEScg"": 0.399388, ""Blue_ACEScg"": 0.169834, ""IOR"": 1.016},
    ""Mercury"": {""Red_ACEScg"": 0.167639, ""Green_ACEScg"": 0.167639, ""Blue_ACEScg"": 0.167639, ""IOR"": 1.013},
    ""Cobalt"": {""Red_ACEScg"": 0.071277, ""Green_ACEScg"": 0.045923, ""Blue_ACEScg"": 0.015718, ""IOR"": 1.031},
}

# Function to visualize metal colors
def visualize_metal_colors():
    """"""
    Visualizes metal colors by plotting their albedo.
    """"""
    # Initialize empty lists to store metal names and their respective albedo values
    color_values = []                    # List to store albedo values
    metal_names = []                     # List to store metal names

    # Iterate through the metal_data dictionary to extract metal names and albedo values
    for metal_name, metal_data_single in metal_data.items():  # Change variable name here
        metal_names.append(metal_name)   # Append the metal name to the metal_names list
        # Calculate the average albedo by summing up the RGB values and dividing by 3
        albedo = (metal_data_single[""Red_ACEScg""] + metal_data_single[""Green_ACEScg""] + metal_data_single[""Blue_ACEScg""]) / 3
        color_values.append(albedo)      # Append the calculated albedo to the color_values list

    # Plotting the metal albedo values as a horizontal bar chart
    plt.figure(figsize=(10, 6))          # Set the figure size
    plt.title('Metal Albedo')            # Set the title of the plot
    plt.barh(metal_names, color_values, color='steelblue')   # Create a horizontal bar chart
    plt.xlabel('Albedo')                 # Set the label for the x-axis
    plt.ylabel('Metal')                  # Set the label for the y-axis
    plt.grid(axis='x')                   # Add gridlines along the x-axis
    plt.show()                           # Display the plot

# Function to display metal data as a numbered list
def display_metal_data():
    """"""
    Displays the metal data as a numbered list.
    """"""
    print(""\nMetal data:"")
    # Step 1: Iterate through metal_data dictionary and enumerate items
    for index, (metal_name, _) in enumerate(metal_data.items(), start=1):  
        metal_index = f""{index:2}""      # Pad single digits with a space
        # Step 2: Print metal index and name
        print(f""{metal_index}. {metal_name}"")

# Function to calculate the albedo of a specific metal
def calculate_albedo():
    """"""
    Calculates the albedo of a specific metal selected by the user.
    """"""
    display_metal_data()                # Step 1: Display the list of metals
    metal_index_str = input(""\nEnter the number of the metal: "")
    try:
        metal_index = int(metal_index_str)
        if 1 <= metal_index <= len(metal_data):
            metal_name = list(metal_data.keys())[metal_index - 1]
            metal_single = metal_data[metal_name]
            # Step 2: Calculate the albedo using RGB values
            albedo = (metal_single[""Red_ACEScg""] + metal_single[""Green_ACEScg""] + metal_single[""Blue_ACEScg""]) / 3
            print(f""\nThe albedo of {metal_name} is: {albedo:.4f}"")
        else:
            print(""\nInvalid metal number!"")
    except ValueError:
        print(""\nInvalid input! Please enter a valid number."")

# Function to compare the index of refraction between two metals
def compare_ior(metal1_str, metal2_str):
    """"""
    Compares the Index of Refraction between two metals selected by the user.
    """"""
    try:
        metal1_index = int(metal1_str)
        metal2_index = int(metal2_str)
        if 1 <= metal1_index <= len(metal_data) and 1 <= metal2_index <= len(metal_data):
            metal1_name = list(metal_data.keys())[metal1_index - 1]
            metal2_name = list(metal_data.keys())[metal2_index - 1]
            metal1_data = metal_data[metal1_name]
            metal2_data = metal_data[metal2_name]
            if metal1_data[""IOR""] > metal2_data[""IOR""]:
                # Step 1: Print comparison result if metal1's IOR is higher
                print(f""\n{metal1_name} has a higher Index of Refraction ({metal1_data['IOR']:.4f}) than {metal2_name} ({metal2_data['IOR']:.4f})."")
                print(f""The difference is {metal1_data['IOR'] - metal2_data['IOR']:.4f}."")
            elif metal1_data[""IOR""] < metal2_data[""IOR""]:
                # Step 2: Print comparison result if metal2's IOR is higher
                print(f""\n{metal2_name} has a higher Index of Refraction ({metal2_data['IOR']:.4f}) than {metal1_name} ({metal1_data['IOR']:.4f})."")
                print(f""The difference is {metal2_data['IOR'] - metal1_data['IOR']:.4f}."")
            else:
                # Step 3: Print if both metals have equal IOR
                print(f""\nThe Index of Refraction of {metal1_name} ({metal1_data['IOR']:.4f}) and {metal2_name} ({metal2_data['IOR']:.4f}) are equal."")
        else:
            print(""\nInvalid metal numbers!"")
    except ValueError:
        print(""\nInvalid input! Please enter valid numbers."")
    print()                             # Add a blank line for clarity

# Menu-driven interface
while True:
    print(""\n:: MENU OPTIONS ::\n"")
    print(""1. Visualize Metal Colors"")
    print(""2. Calculate Albedo"")
    print(""3. Compare Index of Refraction"")
    print(""0. Exit"")

    choice = input(""\nEnter your choice (1-3) or type '0' to exit: "")

    if choice == '1':
        # Print the full metal data to the terminal in a formatted manner
        print(""\nMetal Data:"")
        for metal, data in metal_data.items():
            rgb_values = ', '.join([f""{color[0]}={value:.6f}"" for color, value in data.items() if color != 'IOR'])
            print(f""{metal}: R={data['Red_ACEScg']:.6f}, G={data['Green_ACEScg']:.6f}, B={data['Blue_ACEScg']:.6f} IOR: {data['IOR']:.4f}"")
        visualize_metal_colors()
    elif choice == '2':
        calculate_albedo()
    elif choice == '3':
        display_metal_data()
        metal1 = input(""\nEnter the number of the first metal: "")
        metal2 = input(""\nEnter the number of the second metal: "")
        compare_ior(metal1, metal2)
    elif choice == '0':
        print(""\nExiting program...   GoodBye!\n"")
        break                           # Exit the program immediately
    else:
        print(""\nInvalid choice! Please enter a valid option.\n"")
"
JuYCGBmj,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,Ohtaku,JavaScript,Friday 7th of June 2024 04:19:28 PM CDT,"G2A.com free voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
e0XM3DNc,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,Elii,JavaScript,Friday 7th of June 2024 04:13:28 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & everything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
7nd of June 2024

Curious about why I created this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
jtwk8PU1,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,guywithabigheart,JavaScript,Friday 7th of June 2024 04:07:29 PM CDT,"G2A.com complimentary voucher & games guide.
Any gift card for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7 2024

Want to know why I made this guide
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
XQ2ATQMK,🤑G2A.com Free Gift Card Guide June 2024 Fix🎁,PetrikDev,JavaScript,Friday 7th of June 2024 04:01:29 PM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Playstation gift cards & all else offered.
This is the most up to date version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
dU3C3JrW,Deleted Issue,wesdrum,JSON,Friday 7th of June 2024 03:56:23 PM CDT,"{
  ""action"": ""deleted"",
  ""issue"": {
    ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4199"",
    ""repository_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET"",
    ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4199/labels{/name}"",
    ""comments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4199/comments"",
    ""events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4199/events"",
    ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET/issues/4199"",
    ""id"": 2333504916,
    ""node_id"": ""I_kwDOF4xvBc6LFnWU"",
    ""number"": 4199,
    ""title"": ""195328: SOL.NET_CONVERSAO - NOVO PROJETO DE CONVERSAO\r\n\r\nSISTEMA: WEBSAC - BANCO: FIREBIRD\r\n\r\nCONVER"",
    ""user"": {
      ""login"": ""wesProg23"",
      ""id"": 20547283,
      ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/wesProg23"",
      ""html_url"": ""https://github.com/wesProg23"",
      ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
      ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
      ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
      ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
      ""type"": ""User"",
      ""site_admin"": false
    },
    ""labels"": [

    ],
    ""state"": ""closed"",
    ""locked"": false,
    ""assignee"": {
      ""login"": ""MauricioSilva-Hetosoft"",
      ""id"": 152881561,
      ""node_id"": ""U_kgDOCRzJmQ"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/152881561?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/MauricioSilva-Hetosoft"",
      ""html_url"": ""https://github.com/MauricioSilva-Hetosoft"",
      ""followers_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/followers"",
      ""following_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/orgs"",
      ""repos_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/repos"",
      ""events_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/received_events"",
      ""type"": ""User"",
      ""site_admin"": false
    },
    ""assignees"": [
      {
        ""login"": ""MauricioSilva-Hetosoft"",
        ""id"": 152881561,
        ""node_id"": ""U_kgDOCRzJmQ"",
        ""avatar_url"": ""https://avatars.githubusercontent.com/u/152881561?v=4"",
        ""gravatar_id"": """",
        ""url"": ""https://api.github.com/users/MauricioSilva-Hetosoft"",
        ""html_url"": ""https://github.com/MauricioSilva-Hetosoft"",
        ""followers_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/followers"",
        ""following_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/following{/other_user}"",
        ""gists_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/gists{/gist_id}"",
        ""starred_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/starred{/owner}{/repo}"",
        ""subscriptions_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/subscriptions"",
        ""organizations_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/orgs"",
        ""repos_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/repos"",
        ""events_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/events{/privacy}"",
        ""received_events_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/received_events"",
        ""type"": ""User"",
        ""site_admin"": false
      }
    ],
    ""milestone"": {
      ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/milestones/7"",
      ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET/milestone/7"",
      ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/milestones/7/labels"",
      ""id"": 11113621,
      ""node_id"": ""MI_kwDOF4xvBc4AqZSV"",
      ""number"": 7,
      ""title"": ""Conversão WebSac"",
      ""description"": null,
      ""creator"": {
        ""login"": ""wesProg23"",
        ""id"": 20547283,
        ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
        ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
        ""gravatar_id"": """",
        ""url"": ""https://api.github.com/users/wesProg23"",
        ""html_url"": ""https://github.com/wesProg23"",
        ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
        ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
        ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
        ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
        ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
        ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
        ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
        ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
        ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
        ""type"": ""User"",
        ""site_admin"": false
      },
      ""open_issues"": 0,
      ""closed_issues"": 5,
      ""state"": ""open"",
      ""created_at"": ""2024-05-29T18:31:29Z"",
      ""updated_at"": ""2024-06-06T12:14:55Z"",
      ""due_on"": null,
      ""closed_at"": null
    },
    ""comments"": 2,
    ""created_at"": ""2024-06-04T13:13:11Z"",
    ""updated_at"": ""2024-06-04T18:11:40Z"",
    ""closed_at"": ""2024-06-04T13:36:43Z"",
    ""author_association"": ""COLLABORATOR"",
    ""active_lock_reason"": null,
    ""body"": ""SOL.NET_CONVERSAO - NOVO PROJETO DE CONVERSAO\r\n\r\nSISTEMA: WEBSAC - BANCO: FIREBIRD\r\n\r\nCONVERSAO DE PRODUTOS VERIFICAR PARA ALEM DE TRAZER O CODIGO INTERNO DO SISTEMA WEBSAC DO PRODUTO TAMBEM TRAZER CODIGO DE BARRAS DO PRODUTO\r\n\r\n- HTTPS://PRNT.SC/TKR58HU0E4PV\r\n- HTTPS://PRNT.SC/26COMPTRNKEE"",
    ""reactions"": {
      ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4199/reactions"",
      ""total_count"": 0,
      ""+1"": 0,
      ""-1"": 0,
      ""laugh"": 0,
      ""hooray"": 0,
      ""confused"": 0,
      ""heart"": 0,
      ""rocket"": 0,
      ""eyes"": 0
    },
    ""timeline_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4199/timeline"",
    ""performed_via_github_app"": null,
    ""state_reason"": ""completed""
  },
  ""repository"": {
    ""id"": 395079429,
    ""node_id"": ""MDEwOlJlcG9zaXRvcnkzOTUwNzk0Mjk="",
    ""name"": ""ProjetosSol.NET"",
    ""full_name"": ""hetosoft/ProjetosSol.NET"",
    ""private"": true,
    ""owner"": {
      ""login"": ""hetosoft"",
      ""id"": 53792964,
      ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjUzNzkyOTY0"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/53792964?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/hetosoft"",
      ""html_url"": ""https://github.com/hetosoft"",
      ""followers_url"": ""https://api.github.com/users/hetosoft/followers"",
      ""following_url"": ""https://api.github.com/users/hetosoft/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/hetosoft/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/hetosoft/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/hetosoft/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/hetosoft/orgs"",
      ""repos_url"": ""https://api.github.com/users/hetosoft/repos"",
      ""events_url"": ""https://api.github.com/users/hetosoft/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/hetosoft/received_events"",
      ""type"": ""Organization"",
      ""site_admin"": false
    },
    ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET"",
    ""description"": ""Projetos Suíte Sol.NET Desktop Windows"",
    ""fork"": false,
    ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET"",
    ""forks_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/forks"",
    ""keys_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/keys{/key_id}"",
    ""collaborators_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/collaborators{/collaborator}"",
    ""teams_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/teams"",
    ""hooks_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/hooks"",
    ""issue_events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/events{/number}"",
    ""events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/events"",
    ""assignees_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/assignees{/user}"",
    ""branches_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/branches{/branch}"",
    ""tags_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/tags"",
    ""blobs_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/blobs{/sha}"",
    ""git_tags_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/tags{/sha}"",
    ""git_refs_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/refs{/sha}"",
    ""trees_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/trees{/sha}"",
    ""statuses_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/statuses/{sha}"",
    ""languages_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/languages"",
    ""stargazers_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/stargazers"",
    ""contributors_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/contributors"",
    ""subscribers_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/subscribers"",
    ""subscription_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/subscription"",
    ""commits_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/commits{/sha}"",
    ""git_commits_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/commits{/sha}"",
    ""comments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/comments{/number}"",
    ""issue_comment_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/comments{/number}"",
    ""contents_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/contents/{+path}"",
    ""compare_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/compare/{base}...{head}"",
    ""merges_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/merges"",
    ""archive_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/{archive_format}{/ref}"",
    ""downloads_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/downloads"",
    ""issues_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues{/number}"",
    ""pulls_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/pulls{/number}"",
    ""milestones_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/milestones{/number}"",
    ""notifications_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/notifications{?since,all,participating}"",
    ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/labels{/name}"",
    ""releases_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/releases{/id}"",
    ""deployments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/deployments"",
    ""created_at"": ""2021-08-11T18:14:44Z"",
    ""updated_at"": ""2024-06-05T19:43:30Z"",
    ""pushed_at"": ""2024-06-06T12:15:50Z"",
    ""git_url"": ""git://github.com/hetosoft/ProjetosSol.NET.git"",
    ""ssh_url"": ""git@github.com:hetosoft/ProjetosSol.NET.git"",
    ""clone_url"": ""https://github.com/hetosoft/ProjetosSol.NET.git"",
    ""svn_url"": ""https://github.com/hetosoft/ProjetosSol.NET"",
    ""homepage"": """",
    ""size"": 109537,
    ""stargazers_count"": 0,
    ""watchers_count"": 0,
    ""language"": ""Pascal"",
    ""has_issues"": true,
    ""has_projects"": true,
    ""has_downloads"": true,
    ""has_wiki"": true,
    ""has_pages"": false,
    ""has_discussions"": true,
    ""forks_count"": 0,
    ""mirror_url"": null,
    ""archived"": false,
    ""disabled"": false,
    ""open_issues_count"": 26,
    ""license"": null,
    ""allow_forking"": false,
    ""is_template"": false,
    ""web_commit_signoff_required"": false,
    ""topics"": [

    ],
    ""visibility"": ""private"",
    ""forks"": 0,
    ""open_issues"": 26,
    ""watchers"": 0,
    ""default_branch"": ""develop"",
    ""custom_properties"": {

    }
  },
  ""organization"": {
    ""login"": ""hetosoft"",
    ""id"": 53792964,
    ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjUzNzkyOTY0"",
    ""url"": ""https://api.github.com/orgs/hetosoft"",
    ""repos_url"": ""https://api.github.com/orgs/hetosoft/repos"",
    ""events_url"": ""https://api.github.com/orgs/hetosoft/events"",
    ""hooks_url"": ""https://api.github.com/orgs/hetosoft/hooks"",
    ""issues_url"": ""https://api.github.com/orgs/hetosoft/issues"",
    ""members_url"": ""https://api.github.com/orgs/hetosoft/members{/member}"",
    ""public_members_url"": ""https://api.github.com/orgs/hetosoft/public_members{/member}"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/53792964?v=4"",
    ""description"": """"
  },
  ""sender"": {
    ""login"": ""wesProg23"",
    ""id"": 20547283,
    ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
    ""gravatar_id"": """",
    ""url"": ""https://api.github.com/users/wesProg23"",
    ""html_url"": ""https://github.com/wesProg23"",
    ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
    ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
    ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
    ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
    ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
    ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
    ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
    ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
    ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
    ""type"": ""User"",
    ""site_admin"": false
  }
}"
QSZjCvJ5,🤑G2A.com Free Gift Card Guide June 2024 Fix🤑,x3kiN,JavaScript,Friday 7th of June 2024 03:55:29 PM CDT,"G2A.com free gift card & gaming guide.
Any item for free on G2A.com including Amazon gift cards & anything else offered.
This is the most current version of this script. Any other one posted will not work!

PDF guide here:
https://drive.google.com/file/d/1fhhFoxFyasZffiEC6aAwTSsLXtvB0Ci2/view?936

Working as of:
June 7nd 2024

Ever wondered why this guide was created
https://www.youtube.com/watch?v=twor6RYVtdQ?998
This will explain everything"
wsmnvDNF,Reopened Issue,wesdrum,JSON,Friday 7th of June 2024 03:54:15 PM CDT,"{
  ""action"": ""reopened"",
  ""issue"": {
    ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4237"",
    ""repository_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET"",
    ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4237/labels{/name}"",
    ""comments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4237/comments"",
    ""events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4237/events"",
    ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET/issues/4237"",
    ""id"": 2340351298,
    ""node_id"": ""I_kwDOF4xvBc6Lfu1C"",
    ""number"": 4237,
    ""title"": ""195800: SOL.NET_CONVERSAO - ERROS - LA BELLE COSMETICS - CONVERSAO DE PRODUTOS E PESSOAS - SISTEMA T"",
    ""user"": {
      ""login"": ""wesProg23"",
      ""id"": 20547283,
      ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/wesProg23"",
      ""html_url"": ""https://github.com/wesProg23"",
      ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
      ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
      ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
      ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
      ""type"": ""User"",
      ""site_admin"": false
    },
    ""labels"": [
      {
        ""id"": 5799656203,
        ""node_id"": ""LA_kwDOF4xvBc8AAAABWa-7Cw"",
        ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/labels/PROG%20-%20NORMAL"",
        ""name"": ""PROG - NORMAL"",
        ""color"": ""78D9B0"",
        ""default"": false,
        ""description"": """"
      }
    ],
    ""state"": ""open"",
    ""locked"": false,
    ""assignee"": {
      ""login"": ""MauricioSilva-Hetosoft"",
      ""id"": 152881561,
      ""node_id"": ""U_kgDOCRzJmQ"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/152881561?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/MauricioSilva-Hetosoft"",
      ""html_url"": ""https://github.com/MauricioSilva-Hetosoft"",
      ""followers_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/followers"",
      ""following_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/orgs"",
      ""repos_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/repos"",
      ""events_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/received_events"",
      ""type"": ""User"",
      ""site_admin"": false
    },
    ""assignees"": [
      {
        ""login"": ""MauricioSilva-Hetosoft"",
        ""id"": 152881561,
        ""node_id"": ""U_kgDOCRzJmQ"",
        ""avatar_url"": ""https://avatars.githubusercontent.com/u/152881561?v=4"",
        ""gravatar_id"": """",
        ""url"": ""https://api.github.com/users/MauricioSilva-Hetosoft"",
        ""html_url"": ""https://github.com/MauricioSilva-Hetosoft"",
        ""followers_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/followers"",
        ""following_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/following{/other_user}"",
        ""gists_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/gists{/gist_id}"",
        ""starred_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/starred{/owner}{/repo}"",
        ""subscriptions_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/subscriptions"",
        ""organizations_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/orgs"",
        ""repos_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/repos"",
        ""events_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/events{/privacy}"",
        ""received_events_url"": ""https://api.github.com/users/MauricioSilva-Hetosoft/received_events"",
        ""type"": ""User"",
        ""site_admin"": false
      }
    ],
    ""milestone"": {
      ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/milestones/9"",
      ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET/milestone/9"",
      ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/milestones/9/labels"",
      ""id"": 11155258,
      ""node_id"": ""MI_kwDOF4xvBc4Aqjc6"",
      ""number"": 9,
      ""title"": ""Conversão La Belle"",
      ""description"": null,
      ""creator"": {
        ""login"": ""wesProg23"",
        ""id"": 20547283,
        ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
        ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
        ""gravatar_id"": """",
        ""url"": ""https://api.github.com/users/wesProg23"",
        ""html_url"": ""https://github.com/wesProg23"",
        ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
        ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
        ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
        ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
        ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
        ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
        ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
        ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
        ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
        ""type"": ""User"",
        ""site_admin"": false
      },
      ""open_issues"": 1,
      ""closed_issues"": 0,
      ""state"": ""open"",
      ""created_at"": ""2024-06-07T12:42:57Z"",
      ""updated_at"": ""2024-06-07T19:58:29Z"",
      ""due_on"": null,
      ""closed_at"": null
    },
    ""comments"": 4,
    ""created_at"": ""2024-06-07T12:36:00Z"",
    ""updated_at"": ""2024-06-07T19:58:29Z"",
    ""closed_at"": null,
    ""author_association"": ""COLLABORATOR"",
    ""active_lock_reason"": null,
    ""body"": ""SOL.NET_CONVERSAO - ERROS - LA BELLE COSMETICS - CONVERSAO DE PRODUTOS E PESSOAS - SISTEMA THOR - BANCO FIREBIRD 2.5.\r\nERRO NO BOTAO TRIBUTACAO FEDERAL\r\nCRIAR BOTAO PARA CONVERTER TRANSPORTADORA"",
    ""reactions"": {
      ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4237/reactions"",
      ""total_count"": 0,
      ""+1"": 0,
      ""-1"": 0,
      ""laugh"": 0,
      ""hooray"": 0,
      ""confused"": 0,
      ""heart"": 0,
      ""rocket"": 0,
      ""eyes"": 0
    },
    ""timeline_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4237/timeline"",
    ""performed_via_github_app"": null,
    ""state_reason"": ""reopened""
  },
  ""repository"": {
    ""id"": 395079429,
    ""node_id"": ""MDEwOlJlcG9zaXRvcnkzOTUwNzk0Mjk="",
    ""name"": ""ProjetosSol.NET"",
    ""full_name"": ""hetosoft/ProjetosSol.NET"",
    ""private"": true,
    ""owner"": {
      ""login"": ""hetosoft"",
      ""id"": 53792964,
      ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjUzNzkyOTY0"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/53792964?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/hetosoft"",
      ""html_url"": ""https://github.com/hetosoft"",
      ""followers_url"": ""https://api.github.com/users/hetosoft/followers"",
      ""following_url"": ""https://api.github.com/users/hetosoft/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/hetosoft/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/hetosoft/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/hetosoft/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/hetosoft/orgs"",
      ""repos_url"": ""https://api.github.com/users/hetosoft/repos"",
      ""events_url"": ""https://api.github.com/users/hetosoft/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/hetosoft/received_events"",
      ""type"": ""Organization"",
      ""site_admin"": false
    },
    ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET"",
    ""description"": ""Projetos Suíte Sol.NET Desktop Windows"",
    ""fork"": false,
    ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET"",
    ""forks_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/forks"",
    ""keys_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/keys{/key_id}"",
    ""collaborators_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/collaborators{/collaborator}"",
    ""teams_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/teams"",
    ""hooks_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/hooks"",
    ""issue_events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/events{/number}"",
    ""events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/events"",
    ""assignees_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/assignees{/user}"",
    ""branches_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/branches{/branch}"",
    ""tags_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/tags"",
    ""blobs_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/blobs{/sha}"",
    ""git_tags_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/tags{/sha}"",
    ""git_refs_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/refs{/sha}"",
    ""trees_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/trees{/sha}"",
    ""statuses_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/statuses/{sha}"",
    ""languages_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/languages"",
    ""stargazers_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/stargazers"",
    ""contributors_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/contributors"",
    ""subscribers_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/subscribers"",
    ""subscription_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/subscription"",
    ""commits_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/commits{/sha}"",
    ""git_commits_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/commits{/sha}"",
    ""comments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/comments{/number}"",
    ""issue_comment_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/comments{/number}"",
    ""contents_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/contents/{+path}"",
    ""compare_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/compare/{base}...{head}"",
    ""merges_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/merges"",
    ""archive_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/{archive_format}{/ref}"",
    ""downloads_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/downloads"",
    ""issues_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues{/number}"",
    ""pulls_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/pulls{/number}"",
    ""milestones_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/milestones{/number}"",
    ""notifications_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/notifications{?since,all,participating}"",
    ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/labels{/name}"",
    ""releases_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/releases{/id}"",
    ""deployments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/deployments"",
    ""created_at"": ""2021-08-11T18:14:44Z"",
    ""updated_at"": ""2024-06-07T15:29:29Z"",
    ""pushed_at"": ""2024-06-07T19:54:26Z"",
    ""git_url"": ""git://github.com/hetosoft/ProjetosSol.NET.git"",
    ""ssh_url"": ""git@github.com:hetosoft/ProjetosSol.NET.git"",
    ""clone_url"": ""https://github.com/hetosoft/ProjetosSol.NET.git"",
    ""svn_url"": ""https://github.com/hetosoft/ProjetosSol.NET"",
    ""homepage"": """",
    ""size"": 109595,
    ""stargazers_count"": 0,
    ""watchers_count"": 0,
    ""language"": ""Pascal"",
    ""has_issues"": true,
    ""has_projects"": true,
    ""has_downloads"": true,
    ""has_wiki"": true,
    ""has_pages"": false,
    ""has_discussions"": true,
    ""forks_count"": 0,
    ""mirror_url"": null,
    ""archived"": false,
    ""disabled"": false,
    ""open_issues_count"": 28,
    ""license"": null,
    ""allow_forking"": false,
    ""is_template"": false,
    ""web_commit_signoff_required"": false,
    ""topics"": [

    ],
    ""visibility"": ""private"",
    ""forks"": 0,
    ""open_issues"": 28,
    ""watchers"": 0,
    ""default_branch"": ""develop"",
    ""custom_properties"": {

    }
  },
  ""organization"": {
    ""login"": ""hetosoft"",
    ""id"": 53792964,
    ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjUzNzkyOTY0"",
    ""url"": ""https://api.github.com/orgs/hetosoft"",
    ""repos_url"": ""https://api.github.com/orgs/hetosoft/repos"",
    ""events_url"": ""https://api.github.com/orgs/hetosoft/events"",
    ""hooks_url"": ""https://api.github.com/orgs/hetosoft/hooks"",
    ""issues_url"": ""https://api.github.com/orgs/hetosoft/issues"",
    ""members_url"": ""https://api.github.com/orgs/hetosoft/members{/member}"",
    ""public_members_url"": ""https://api.github.com/orgs/hetosoft/public_members{/member}"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/53792964?v=4"",
    ""description"": """"
  },
  ""sender"": {
    ""login"": ""wesProg23"",
    ""id"": 20547283,
    ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
    ""gravatar_id"": """",
    ""url"": ""https://api.github.com/users/wesProg23"",
    ""html_url"": ""https://github.com/wesProg23"",
    ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
    ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
    ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
    ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
    ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
    ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
    ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
    ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
    ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
    ""type"": ""User"",
    ""site_admin"": false
  }
}"
LS2T6p2R,User Assigned,wesdrum,JSON,Friday 7th of June 2024 03:53:30 PM CDT,"{
  ""action"": ""assigned"",
  ""issue"": {
    ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4242"",
    ""repository_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET"",
    ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4242/labels{/name}"",
    ""comments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4242/comments"",
    ""events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4242/events"",
    ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET/issues/4242"",
    ""id"": 2341021771,
    ""node_id"": ""I_kwDOF4xvBc6LiShL"",
    ""number"": 4242,
    ""title"": ""195752: SOL.NET: CLIENTE TRABALHA COM CREDIARIO E PRECISA UTILIZAR A CONFIGURACAO DE ACRESCIMO/DESCO"",
    ""user"": {
      ""login"": ""wesProg23"",
      ""id"": 20547283,
      ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/wesProg23"",
      ""html_url"": ""https://github.com/wesProg23"",
      ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
      ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
      ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
      ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
      ""type"": ""User"",
      ""site_admin"": false
    },
    ""labels"": [
      {
        ""id"": 5799653400,
        ""node_id"": ""LA_kwDOF4xvBc8AAAABWa-wGA"",
        ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/labels/PROG%20-%20PRIORIDADE%201"",
        ""name"": ""PROG - PRIORIDADE 1"",
        ""color"": ""FBCA04"",
        ""default"": false,
        ""description"": """"
      }
    ],
    ""state"": ""open"",
    ""locked"": false,
    ""assignee"": {
      ""login"": ""wesProg23"",
      ""id"": 20547283,
      ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/wesProg23"",
      ""html_url"": ""https://github.com/wesProg23"",
      ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
      ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
      ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
      ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
      ""type"": ""User"",
      ""site_admin"": false
    },
    ""assignees"": [
      {
        ""login"": ""wesProg23"",
        ""id"": 20547283,
        ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
        ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
        ""gravatar_id"": """",
        ""url"": ""https://api.github.com/users/wesProg23"",
        ""html_url"": ""https://github.com/wesProg23"",
        ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
        ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
        ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
        ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
        ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
        ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
        ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
        ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
        ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
        ""type"": ""User"",
        ""site_admin"": false
      }
    ],
    ""milestone"": null,
    ""comments"": 2,
    ""created_at"": ""2024-06-07T19:11:37Z"",
    ""updated_at"": ""2024-06-07T20:08:12Z"",
    ""closed_at"": null,
    ""author_association"": ""COLLABORATOR"",
    ""active_lock_reason"": null,
    ""body"": ""SOL.NET: CLIENTE TRABALHA COM CREDIARIO E PRECISA UTILIZAR A CONFIGURACAO DE ACRESCIMO/DESCONTO POR PARCELA NA CONDICAO DE PAGAMENTO, POREM O CAMPO DE PECENTUAL NAO ACEITA NUMEROS MENORES QUE 1,0% E MESMO COLOCANDO UM VALOR MAIOR QUE 1% FICA EM LOOPING INFINITO DE VALIDACOES NAO DEIXANDO SALVAR A CONDICAO."",
    ""reactions"": {
      ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4242/reactions"",
      ""total_count"": 0,
      ""+1"": 0,
      ""-1"": 0,
      ""laugh"": 0,
      ""hooray"": 0,
      ""confused"": 0,
      ""heart"": 0,
      ""rocket"": 0,
      ""eyes"": 0
    },
    ""timeline_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4242/timeline"",
    ""performed_via_github_app"": null,
    ""state_reason"": null
  },
  ""assignee"": {
    ""login"": ""wesProg23"",
    ""id"": 20547283,
    ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
    ""gravatar_id"": """",
    ""url"": ""https://api.github.com/users/wesProg23"",
    ""html_url"": ""https://github.com/wesProg23"",
    ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
    ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
    ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
    ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
    ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
    ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
    ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
    ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
    ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
    ""type"": ""User"",
    ""site_admin"": false
  },
  ""repository"": {
    ""id"": 395079429,
    ""node_id"": ""MDEwOlJlcG9zaXRvcnkzOTUwNzk0Mjk="",
    ""name"": ""ProjetosSol.NET"",
    ""full_name"": ""hetosoft/ProjetosSol.NET"",
    ""private"": true,
    ""owner"": {
      ""login"": ""hetosoft"",
      ""id"": 53792964,
      ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjUzNzkyOTY0"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/53792964?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/hetosoft"",
      ""html_url"": ""https://github.com/hetosoft"",
      ""followers_url"": ""https://api.github.com/users/hetosoft/followers"",
      ""following_url"": ""https://api.github.com/users/hetosoft/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/hetosoft/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/hetosoft/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/hetosoft/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/hetosoft/orgs"",
      ""repos_url"": ""https://api.github.com/users/hetosoft/repos"",
      ""events_url"": ""https://api.github.com/users/hetosoft/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/hetosoft/received_events"",
      ""type"": ""Organization"",
      ""site_admin"": false
    },
    ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET"",
    ""description"": ""Projetos Suíte Sol.NET Desktop Windows"",
    ""fork"": false,
    ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET"",
    ""forks_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/forks"",
    ""keys_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/keys{/key_id}"",
    ""collaborators_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/collaborators{/collaborator}"",
    ""teams_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/teams"",
    ""hooks_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/hooks"",
    ""issue_events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/events{/number}"",
    ""events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/events"",
    ""assignees_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/assignees{/user}"",
    ""branches_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/branches{/branch}"",
    ""tags_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/tags"",
    ""blobs_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/blobs{/sha}"",
    ""git_tags_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/tags{/sha}"",
    ""git_refs_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/refs{/sha}"",
    ""trees_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/trees{/sha}"",
    ""statuses_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/statuses/{sha}"",
    ""languages_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/languages"",
    ""stargazers_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/stargazers"",
    ""contributors_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/contributors"",
    ""subscribers_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/subscribers"",
    ""subscription_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/subscription"",
    ""commits_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/commits{/sha}"",
    ""git_commits_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/commits{/sha}"",
    ""comments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/comments{/number}"",
    ""issue_comment_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/comments{/number}"",
    ""contents_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/contents/{+path}"",
    ""compare_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/compare/{base}...{head}"",
    ""merges_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/merges"",
    ""archive_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/{archive_format}{/ref}"",
    ""downloads_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/downloads"",
    ""issues_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues{/number}"",
    ""pulls_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/pulls{/number}"",
    ""milestones_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/milestones{/number}"",
    ""notifications_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/notifications{?since,all,participating}"",
    ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/labels{/name}"",
    ""releases_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/releases{/id}"",
    ""deployments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/deployments"",
    ""created_at"": ""2021-08-11T18:14:44Z"",
    ""updated_at"": ""2024-06-07T15:29:29Z"",
    ""pushed_at"": ""2024-06-07T19:59:58Z"",
    ""git_url"": ""git://github.com/hetosoft/ProjetosSol.NET.git"",
    ""ssh_url"": ""git@github.com:hetosoft/ProjetosSol.NET.git"",
    ""clone_url"": ""https://github.com/hetosoft/ProjetosSol.NET.git"",
    ""svn_url"": ""https://github.com/hetosoft/ProjetosSol.NET"",
    ""homepage"": """",
    ""size"": 109595,
    ""stargazers_count"": 0,
    ""watchers_count"": 0,
    ""language"": ""Pascal"",
    ""has_issues"": true,
    ""has_projects"": true,
    ""has_downloads"": true,
    ""has_wiki"": true,
    ""has_pages"": false,
    ""has_discussions"": true,
    ""forks_count"": 0,
    ""mirror_url"": null,
    ""archived"": false,
    ""disabled"": false,
    ""open_issues_count"": 27,
    ""license"": null,
    ""allow_forking"": false,
    ""is_template"": false,
    ""web_commit_signoff_required"": false,
    ""topics"": [

    ],
    ""visibility"": ""private"",
    ""forks"": 0,
    ""open_issues"": 27,
    ""watchers"": 0,
    ""default_branch"": ""develop"",
    ""custom_properties"": {

    }
  },
  ""organization"": {
    ""login"": ""hetosoft"",
    ""id"": 53792964,
    ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjUzNzkyOTY0"",
    ""url"": ""https://api.github.com/orgs/hetosoft"",
    ""repos_url"": ""https://api.github.com/orgs/hetosoft/repos"",
    ""events_url"": ""https://api.github.com/orgs/hetosoft/events"",
    ""hooks_url"": ""https://api.github.com/orgs/hetosoft/hooks"",
    ""issues_url"": ""https://api.github.com/orgs/hetosoft/issues"",
    ""members_url"": ""https://api.github.com/orgs/hetosoft/members{/member}"",
    ""public_members_url"": ""https://api.github.com/orgs/hetosoft/public_members{/member}"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/53792964?v=4"",
    ""description"": """"
  },
  ""sender"": {
    ""login"": ""wesProg23"",
    ""id"": 20547283,
    ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
    ""gravatar_id"": """",
    ""url"": ""https://api.github.com/users/wesProg23"",
    ""html_url"": ""https://github.com/wesProg23"",
    ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
    ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
    ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
    ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
    ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
    ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
    ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
    ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
    ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
    ""type"": ""User"",
    ""site_admin"": false
  }
}"
Aef5kSvR,Issue Closed,wesdrum,JSON,Friday 7th of June 2024 03:52:27 PM CDT,"{
  ""action"": ""closed"",
  ""issue"": {
    ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4182"",
    ""repository_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET"",
    ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4182/labels{/name}"",
    ""comments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4182/comments"",
    ""events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4182/events"",
    ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET/issues/4182"",
    ""id"": 2328218807,
    ""node_id"": ""I_kwDOF4xvBc6Kxcy3"",
    ""number"": 4182,
    ""title"": ""194988: SOLNET  PAGAMENTO POSTERIOR"",
    ""user"": {
      ""login"": ""wesProg23"",
      ""id"": 20547283,
      ""node_id"": ""MDQ6VXNlcjIwNTQ3Mjgz"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/20547283?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/wesProg23"",
      ""html_url"": ""https://github.com/wesProg23"",
      ""followers_url"": ""https://api.github.com/users/wesProg23/followers"",
      ""following_url"": ""https://api.github.com/users/wesProg23/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/wesProg23/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/wesProg23/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/wesProg23/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/wesProg23/orgs"",
      ""repos_url"": ""https://api.github.com/users/wesProg23/repos"",
      ""events_url"": ""https://api.github.com/users/wesProg23/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/wesProg23/received_events"",
      ""type"": ""User"",
      ""site_admin"": false
    },
    ""labels"": [
      {
        ""id"": 5799607197,
        ""node_id"": ""LA_kwDOF4xvBc8AAAABWa77nQ"",
        ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/labels/PROG%20-%20TRABALHANDO"",
        ""name"": ""PROG - TRABALHANDO"",
        ""color"": ""0E8A16"",
        ""default"": false,
        ""description"": """"
      }
    ],
    ""state"": ""closed"",
    ""locked"": false,
    ""assignee"": {
      ""login"": ""MarcusColatto-Hetosoft"",
      ""id"": 126092975,
      ""node_id"": ""U_kgDOB4QGrw"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/126092975?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/MarcusColatto-Hetosoft"",
      ""html_url"": ""https://github.com/MarcusColatto-Hetosoft"",
      ""followers_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/followers"",
      ""following_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/orgs"",
      ""repos_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/repos"",
      ""events_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/received_events"",
      ""type"": ""User"",
      ""site_admin"": false
    },
    ""assignees"": [
      {
        ""login"": ""MarcusColatto-Hetosoft"",
        ""id"": 126092975,
        ""node_id"": ""U_kgDOB4QGrw"",
        ""avatar_url"": ""https://avatars.githubusercontent.com/u/126092975?v=4"",
        ""gravatar_id"": """",
        ""url"": ""https://api.github.com/users/MarcusColatto-Hetosoft"",
        ""html_url"": ""https://github.com/MarcusColatto-Hetosoft"",
        ""followers_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/followers"",
        ""following_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/following{/other_user}"",
        ""gists_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/gists{/gist_id}"",
        ""starred_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/starred{/owner}{/repo}"",
        ""subscriptions_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/subscriptions"",
        ""organizations_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/orgs"",
        ""repos_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/repos"",
        ""events_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/events{/privacy}"",
        ""received_events_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/received_events"",
        ""type"": ""User"",
        ""site_admin"": false
      }
    ],
    ""milestone"": null,
    ""comments"": 2,
    ""created_at"": ""2024-05-31T16:41:46Z"",
    ""updated_at"": ""2024-06-07T20:36:30Z"",
    ""closed_at"": ""2024-06-07T20:36:30Z"",
    ""author_association"": ""COLLABORATOR"",
    ""active_lock_reason"": null,
    ""body"": ""SOLNET  PAGAMENTO POSTERIOR"",
    ""reactions"": {
      ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4182/reactions"",
      ""total_count"": 0,
      ""+1"": 0,
      ""-1"": 0,
      ""laugh"": 0,
      ""hooray"": 0,
      ""confused"": 0,
      ""heart"": 0,
      ""rocket"": 0,
      ""eyes"": 0
    },
    ""timeline_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/4182/timeline"",
    ""performed_via_github_app"": null,
    ""state_reason"": ""completed""
  },
  ""repository"": {
    ""id"": 395079429,
    ""node_id"": ""MDEwOlJlcG9zaXRvcnkzOTUwNzk0Mjk="",
    ""name"": ""ProjetosSol.NET"",
    ""full_name"": ""hetosoft/ProjetosSol.NET"",
    ""private"": true,
    ""owner"": {
      ""login"": ""hetosoft"",
      ""id"": 53792964,
      ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjUzNzkyOTY0"",
      ""avatar_url"": ""https://avatars.githubusercontent.com/u/53792964?v=4"",
      ""gravatar_id"": """",
      ""url"": ""https://api.github.com/users/hetosoft"",
      ""html_url"": ""https://github.com/hetosoft"",
      ""followers_url"": ""https://api.github.com/users/hetosoft/followers"",
      ""following_url"": ""https://api.github.com/users/hetosoft/following{/other_user}"",
      ""gists_url"": ""https://api.github.com/users/hetosoft/gists{/gist_id}"",
      ""starred_url"": ""https://api.github.com/users/hetosoft/starred{/owner}{/repo}"",
      ""subscriptions_url"": ""https://api.github.com/users/hetosoft/subscriptions"",
      ""organizations_url"": ""https://api.github.com/users/hetosoft/orgs"",
      ""repos_url"": ""https://api.github.com/users/hetosoft/repos"",
      ""events_url"": ""https://api.github.com/users/hetosoft/events{/privacy}"",
      ""received_events_url"": ""https://api.github.com/users/hetosoft/received_events"",
      ""type"": ""Organization"",
      ""site_admin"": false
    },
    ""html_url"": ""https://github.com/hetosoft/ProjetosSol.NET"",
    ""description"": ""Projetos Suíte Sol.NET Desktop Windows"",
    ""fork"": false,
    ""url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET"",
    ""forks_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/forks"",
    ""keys_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/keys{/key_id}"",
    ""collaborators_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/collaborators{/collaborator}"",
    ""teams_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/teams"",
    ""hooks_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/hooks"",
    ""issue_events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/events{/number}"",
    ""events_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/events"",
    ""assignees_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/assignees{/user}"",
    ""branches_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/branches{/branch}"",
    ""tags_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/tags"",
    ""blobs_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/blobs{/sha}"",
    ""git_tags_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/tags{/sha}"",
    ""git_refs_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/refs{/sha}"",
    ""trees_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/trees{/sha}"",
    ""statuses_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/statuses/{sha}"",
    ""languages_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/languages"",
    ""stargazers_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/stargazers"",
    ""contributors_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/contributors"",
    ""subscribers_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/subscribers"",
    ""subscription_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/subscription"",
    ""commits_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/commits{/sha}"",
    ""git_commits_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/git/commits{/sha}"",
    ""comments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/comments{/number}"",
    ""issue_comment_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues/comments{/number}"",
    ""contents_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/contents/{+path}"",
    ""compare_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/compare/{base}...{head}"",
    ""merges_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/merges"",
    ""archive_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/{archive_format}{/ref}"",
    ""downloads_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/downloads"",
    ""issues_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/issues{/number}"",
    ""pulls_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/pulls{/number}"",
    ""milestones_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/milestones{/number}"",
    ""notifications_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/notifications{?since,all,participating}"",
    ""labels_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/labels{/name}"",
    ""releases_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/releases{/id}"",
    ""deployments_url"": ""https://api.github.com/repos/hetosoft/ProjetosSol.NET/deployments"",
    ""created_at"": ""2021-08-11T18:14:44Z"",
    ""updated_at"": ""2024-06-07T15:29:29Z"",
    ""pushed_at"": ""2024-06-07T20:33:43Z"",
    ""git_url"": ""git://github.com/hetosoft/ProjetosSol.NET.git"",
    ""ssh_url"": ""git@github.com:hetosoft/ProjetosSol.NET.git"",
    ""clone_url"": ""https://github.com/hetosoft/ProjetosSol.NET.git"",
    ""svn_url"": ""https://github.com/hetosoft/ProjetosSol.NET"",
    ""homepage"": """",
    ""size"": 110712,
    ""stargazers_count"": 0,
    ""watchers_count"": 0,
    ""language"": ""Pascal"",
    ""has_issues"": true,
    ""has_projects"": true,
    ""has_downloads"": true,
    ""has_wiki"": true,
    ""has_pages"": false,
    ""has_discussions"": true,
    ""forks_count"": 0,
    ""mirror_url"": null,
    ""archived"": false,
    ""disabled"": false,
    ""open_issues_count"": 25,
    ""license"": null,
    ""allow_forking"": false,
    ""is_template"": false,
    ""web_commit_signoff_required"": false,
    ""topics"": [

    ],
    ""visibility"": ""private"",
    ""forks"": 0,
    ""open_issues"": 25,
    ""watchers"": 0,
    ""default_branch"": ""develop"",
    ""custom_properties"": {

    }
  },
  ""organization"": {
    ""login"": ""hetosoft"",
    ""id"": 53792964,
    ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjUzNzkyOTY0"",
    ""url"": ""https://api.github.com/orgs/hetosoft"",
    ""repos_url"": ""https://api.github.com/orgs/hetosoft/repos"",
    ""events_url"": ""https://api.github.com/orgs/hetosoft/events"",
    ""hooks_url"": ""https://api.github.com/orgs/hetosoft/hooks"",
    ""issues_url"": ""https://api.github.com/orgs/hetosoft/issues"",
    ""members_url"": ""https://api.github.com/orgs/hetosoft/members{/member}"",
    ""public_members_url"": ""https://api.github.com/orgs/hetosoft/public_members{/member}"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/53792964?v=4"",
    ""description"": """"
  },
  ""sender"": {
    ""login"": ""MarcusColatto-Hetosoft"",
    ""id"": 126092975,
    ""node_id"": ""U_kgDOB4QGrw"",
    ""avatar_url"": ""https://avatars.githubusercontent.com/u/126092975?v=4"",
    ""gravatar_id"": """",
    ""url"": ""https://api.github.com/users/MarcusColatto-Hetosoft"",
    ""html_url"": ""https://github.com/MarcusColatto-Hetosoft"",
    ""followers_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/followers"",
    ""following_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/following{/other_user}"",
    ""gists_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/gists{/gist_id}"",
    ""starred_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/starred{/owner}{/repo}"",
    ""subscriptions_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/subscriptions"",
    ""organizations_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/orgs"",
    ""repos_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/repos"",
    ""events_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/events{/privacy}"",
    ""received_events_url"": ""https://api.github.com/users/MarcusColatto-Hetosoft/received_events"",
    ""type"": ""User"",
    ""site_admin"": false
  }
}"
