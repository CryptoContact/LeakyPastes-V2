id,title,username,language,date,content
LPw41QWS,dwdasd,suramraja1,Lua,Monday 6th of November 2023 11:56:24 AM CDT,"---Trick or treat

repeat wait() until game.CoreGui:FindFirstChild('RobloxPromptGui')

if not game:IsLoaded() then
    game.Loaded:wait()
end

task.wait(40)

if game.PlaceId == 15075839562 then --Wickery Cliff


    math.randomseed(tick())
        
        local plr = game:GetService(""Players"").LocalPlayer
        local UI = game:GetObjects(""rbxassetid://8887653583"")[1]
        local tws = game:GetService(""TweenService"");
        
        if syn and syn.protect_gui then
            syn.protect_gui(UI)
            for i,v in pairs(UI:GetDescendants()) do
                syn.protect_gui(v)
            end
        end
        
        UI.Main.TotalCash.Text = string.gsub(plr.PlayerGui.HUD.Frame.HalloweenCandy.CandyAmount.Text, "","", """")
        
        for i,v in pairs(UI:GetDescendants()) do
            if v:IsA(""UIGradient"") then
                v.Offset = Vector2.new(-.5,-.5)
                local twig = TweenInfo.new(4,Enum.EasingStyle.Quad,Enum.EasingDirection.InOut,-1,true,.2)
                local tweeng = tws:Create(v,twig,{[""Offset""]=Vector2.new(.5,.5)})
                tweeng:Play()
            end
        end
        
        UI.Main.Toggle.MouseButton1Down:Connect(function(v)
            if _G.farm then
                _G.farm = false
                UI.Main.Toggle.Toggle_Roundify_30px.ImageColor3 = Color3.fromRGB(63, 39, 39)
            else
                _G.farm = true
                UI.Main.Toggle.Toggle_Roundify_30px.ImageColor3 = Color3.fromRGB(43, 63, 39)
            end
        end)
        
        --Drag script by Tiffblox
        local a=game:GetService(""UserInputService"")local b=UI.Main;local c;local d;local e;local f;local function g(h)local i=h.Position-e;b.Position=UDim2.new(f.X.Scale,f.X.Offset+i.X,f.Y.Scale,f.Y.Offset+i.Y)end;b.InputBegan:Connect(function(h)if h.UserInputType==Enum.UserInputType.MouseButton1 or h.UserInputType==Enum.UserInputType.Touch then c=true;e=h.Position;f=b.Position;h.Changed:Connect(function()if h.UserInputState==Enum.UserInputState.End then c=false end end)end end)b.InputChanged:Connect(function(h)if h.UserInputType==Enum.UserInputType.MouseMovement or h.UserInputType==Enum.UserInputType.Touch then d=h end end)a.InputChanged:Connect(function(h)if h==d and c then g(h)end end)
        
        UI.Name = math.random(10000000,99999999)
        UI.Parent = game:GetService(""CoreGui"")
        
        local startingCash = UI.Main.TotalCash.Text
        local firstMinCash = tonumber(UI.Main.TotalCash.Text)
        
        local function a()
            while wait(60) do
                UI.Main.HourlyCash.Text = tostring((tonumber(UI.Main.TotalCash.Text) - firstMinCash)*60)
                firstMinCash = tonumber(UI.Main.TotalCash.Text)
            end
        end
        
        coroutine.wrap(a)()
        
        game:GetService(""ReplicatedStorage"").TrickorTreat.UpdateCandy.OnClientEvent:Connect(function(value)
        UI.Main.TotalCash.Text = value
        UI.Main.FarmedCash.Text = tonumber(value) - tonumber(startingCash)
    end)

    local Drps = {}
    local plr = game:GetService(""Players"").LocalPlayer
    local hmrp = game.Players.LocalPlayer.Character.HumanoidRootPart
    local vim = game:service'VirtualInputManager'

    coroutine.wrap(function()
        while task.wait() do
            for i,v in pairs(game:GetService(""Workspace"").DroppedCandyFolder:GetDescendants()) do
                if v:IsA(""Part"") or v:IsA(""MeshPart"") then table.insert(Drps,v) end
            end
        end
    end)()

    local plr = game:GetService(""Players"").LocalPlayer
    local vu = game:GetService(""VirtualUser"")

    plr.Idled:connect(function()
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)

    coroutine.wrap(function()
        while true do
            for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if v:IsA(""BasePart"") and v.CanCollide == true then
                    v.CanCollide = false
                end
            end
                game:GetService(""RunService"").Stepped:wait()
            end
    end)()

    coroutine.wrap(function()
        task.wait(10)
        for i,v in pairs(game.Workspace:GetDescendants()) do --GetChildren or GetDescendants
            if v.Name == ""Pile of Leaves"" or v.Name == ""bush"" or v.Name == ""Furniture 1"" or v.Name == ""Furniture 33"" or v.Name == ""Model""
            or v.Name == ""Autumn Tree"" or v.Name == ""Carriage"" or v.Name == ""Cauldron"" or v.Name == ""Green Shrub"" or v.Name == ""Jam Jam's Tree"" or v.Name == ""Leaves"" 
            or v.Name == ""Pumpkin"" or v.Name == ""Pumpkin Crate"" or v.Name == ""haybale sit anim"" or v.Name == ""bigtree"" or v.Name == ""wheelbarrow bed"" or v.Name == ""wheelbarrow with pumpkins""
            or v.Name == ""sparkle spiral"" or v.Name == ""TownStore"" or v.Name == ""TownStore3b"" or v.Name == ""TownStore4"" or v.Name == ""TownStore5"" or v.Name == ""TownStore6"" or v.Name == ""swirls""
            or v.Name == ""tall fir tree??"" or v.Name == ""pillar"" or v.Name == ""Rock"" or v.Name == ""Haybale"" or v.Name == ""Tree Stump"" or v.Name == ""Log Hollow"" or v.Name == ""SpookyItem""
            or v.Name == ""Hinge"" or v.Name == ""DoorPart"" or v.Name == ""DoorFrame"" or v.Name == ""Door""
            then
            v:Destroy()
            end
        end
    end)()

    coroutine.wrap(function()
        task.wait(30)
        game:GetService(""RunService""):Set3dRenderingEnabled(true) -- render
        game.Workspace.Gravity = 0
        firesignal(game:GetService(""Players"").LocalPlayer.PlayerGui.YoutubeStudioGui.Main.ScrollPanel.ScrollingFrame.HideBubbleChat.Checkbox.MouseButton1Click)
    end)()

    coroutine.wrap(function()
        while task.wait(0.2) do
            pcall(function()
                for i,v in pairs(game:GetService(""Workspace"").DroppedCandyFolder:GetDescendants()) do
                    if v:IsA(""Part"") or v:IsA(""MeshPart"") then
                        local candis = v
                        local hmrp = game.Players.LocalPlayer.Character.HumanoidRootPart
                        firetouchinterest(game:GetService(""Players"").LocalPlayer.Character.Humanoid.RootPart,candis,0)
                        task.wait()
                        firetouchinterest(game:GetService(""Players"").LocalPlayer.Character.Humanoid.RootPart,candis,1)
                    end
                end
            end)
        end
    end)()

    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-575.236, 149.204, -530.243)
    task.wait(1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-341.601, 136.594, -434.787)
    task.wait(1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-199.454, 143.153, -443.188)
    task.wait(1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-149.695, 172.058, -329.885)
    task.wait(1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-287.068, 161.094, -208.272)
    task.wait(1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-563.66, 172.147, -175.018)
    task.wait(1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-291.905, 145.896, -332.001)
    task.wait(1)

    coroutine.wrap(function()
        while task.wait(8) do
            pcall(function()
                for i,v in pairs(game:GetService(""Workspace"").TrickorTreatDoors:GetDescendants()) do
                    if v.Name == ""Doorbell"" then --or Dispenser
                        local bell = v
                        local hmrp = game.Players.LocalPlayer.Character.HumanoidRootPart
                        hmrp.CFrame = bell.CFrame
                        task.wait(0.5)
                        game:service'VirtualInputManager':SendKeyEvent(true, ""E"", false, game)
                        task.wait(0.5)
                        game:service'VirtualInputManager':SendKeyEvent(true, ""E"", false, game)
                        task.wait(0.5)
                        game:service'VirtualInputManager':SendKeyEvent(true, ""E"", false, game)
                    end
                end
            end)
        end
    end
    end)()  
end
"
xuv0sCj8,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Monday 6th of November 2023 11:51:11 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT473914"
grgdF0wy,Prac1(6.11.2023),stupid_pro,Pascal,Monday 6th of November 2023 11:48:23 AM CDT,"program t1; 

uses Math;

type vector = array[integer] of char;
const N = 15;
const MAXINT = 32767;
var cntr_real_part: integer;
    arr_add: char;
    arr: vector;
    flag_for_char: boolean; //flag для подсчёта char, образующих символ
    trash: integer;
    code, base, i, curr_base, curr_digit: integer; {input_base - сс числа, вводоимого пользователем}
    sign, s: char;
    flag_base: boolean; //flag для сс;
    total_result, epsilon: double;
    digit_cntr: integer;
    num, num_part_real: double; //наше вещественное число
    intenal_sign: char; //знак числа, которое вводится через коммандную строку      
    digits_for_e: integer;
    flag_for_finish: boolean = False; //флаг для проверки слова 'finish'
    flag_for_total_result: boolean;  // флаг для того, чтоб понять какой знак у total total_result
    flag_for_comments: boolean = False;
    count_prog_iteration: integer;
    flag_for_integer_part: boolean = False;
    flag_for_float_part: boolean = False; //проверка на количество char-ов в digit-е

{процедуру, которую мы используем, если встречаем комментарии}
procedure case_comment();
var c: char;
begin
    repeat
        read(c);
    until (EOLn)
end;

{перевод из 10-й в 16-юю сс}
procedure from_any_to_hex(number: integer);
type vector = array[integer] of char;
var ch1, ch2: integer;
        mas_of_dec_to_hex: vector;
        piece: char;
        i: integer;
    char_ch1, char_ch2: char;
begin
    piece := '1';

    for i := 1 to 9 do begin 
        mas_of_dec_to_hex[i] := piece;
        piece := succ(piece);
        end;

    piece := 'a';

    for i := 10 to 15 do begin
        mas_of_dec_to_hex[i] := piece;
        piece := succ(piece);
    end;

    if number = 0 then
        write('00', ' ');
    if (1 <= number) and (number <= 15) then
        write('0', mas_of_dec_to_hex[number], ' ');
    if number > 15 then begin
        ch1 := number mod 16;
        char_ch1 := mas_of_dec_to_hex[ch1];
        if ch1 = 0 then char_ch1 := '0';
        number := number div 16;
        ch2 := number mod 16;
        char_ch2 := mas_of_dec_to_hex[ch2];
        if ch2 = 0 then char_ch2 := '0';
        write(char_ch2, char_ch1, ' ');
    end;
end;

{подсчёт количество цифр при переводе(точность)}
function e_count_digit(b: integer; eps: double): integer;
    var r: double;
begin
    r := Ln(1 / eps) / Ln(b);
    e_count_digit := trunc(r) + 1;
end;

{ставит пробелы при выводе}
procedure space_bar(s: integer);
    var cntr, i: integer;
begin
cntr := 0;
    repeat
        s := s div 10;
        cntr := cntr + 1;
    until(s = 0);
    for i := 1 to (6 - cntr) do 
        write(' ');
end;


function char_to_digit(a: vector; key: char; piece: integer): integer;
    var i: integer;
begin
    if key = '0' then
        char_to_digit := 0
    else begin
        for i := 1 to 15 do begin
            if a[i] = key then begin
                char_to_digit := i
            end;
        end;
    end;
end;

{возведение в степень}
function pow(n: integer; degree: integer): integer;
    var i, ans: integer;
begin
    ans := 1;
    for i := 1 to degree do
        ans := ans * n; 
    pow := ans;
end;

{процедура вывода, с переводом числа}
procedure output_with_conversion(accuracy, b: integer; num: double); //accuracy - точность для вещ части, b - основание СС
    var copy, n, del_cntr, i, digit: integer; // del_cntr - количество делений на СС
        float_part, temporary_float_part: double;
        temporary_int_part: integer;

begin   
    del_cntr := 0;
    n := trunc(num); // нашли целую часть нашего числа
    float_part := frac(num); //дробная часть нашего числа
    {подсчёт количества делений числа на СС}
    copy := n;
    repeat 
        copy := copy div b;
        del_cntr := del_cntr + 1;
    until(copy = 0);
    
    copy := n;
    del_cntr := del_cntr - 1;

    repeat
        digit := copy div (pow(b, del_cntr));
        from_any_to_hex(digit);
        copy := copy - digit * pow(b, del_cntr);
        del_cntr := del_cntr - 1;
    until(del_cntr = -1);   

    write('. ');
    
    for i := 1 to accuracy do begin
        temporary_float_part := float_part * b;
        temporary_int_part := trunc(temporary_float_part);
        from_any_to_hex(temporary_int_part);
        float_part := frac(temporary_float_part);
    end;
    
    
end;

{ТЕЛО ПРОГРАММЫ}

begin
    intenal_sign := '+';
    count_prog_iteration := 0;
    flag_for_char := False;
    
    {заполнение массива arr, чтобы получить значение char в 10-й СС}
    arr_add := '1';

    for i := 1 to 9 do begin 
        arr[i] := arr_add;
        arr_add := succ(arr_add);
        end;

    arr_add := 'a';

    for i := 10 to 15 do begin
        arr[i] := arr_add;
        arr_add := succ(arr_add);
    end;

    flag_base := False;
    curr_base := 0;
    total_result := 0;
    digit_cntr := 0;
    cntr_real_part := 0;
    num_part_real := 0;

    if ParamCount < 2 then begin
        writeln('Неправильные параметры входной строки');
        Halt();
    end;

    val(ParamStr(1), epsilon, code); {преобразование эпсилон в real}

    if (epsilon > 1) or (epsilon < 0) then begin
        writeln('Неправильные параметры входной строки');
        Halt();
    end;

    for i := 2 to ParamCount do begin  {проверка введённых СС}
        val(ParamStr(i), base, code);
         if (base >= 257) and (base <= 2) then begin
           writeln('Ошибка');
           Halt();
         end;
        end;

    while (not EOF) do begin

        {определяем, какой знак получаем на вход}
        repeat
            read(s);
            if (s = ';') and (count_prog_iteration = 0) then begin
                flag_for_comments := True;
                writeln('Ошибка! Неверные входные данные');
                writeln(total_result);
                Halt();
            end; 

            if (s = ';') and (count_prog_iteration <> 0) then begin
                flag_for_comments := True;
                break;
            end;

            if s = 'f' then begin
                flag_for_finish := True;
                break;
            end;

        until ((s = '+') or (s = '-') or (s = '*') or (s = '/'));

        {если флаг остановки поднят, то выходим из цикла}
        if (flag_for_finish) and (count_prog_iteration = 0) then begin
            writeln('Программа не выполнена ни разу');
            writeln(total_result);
            Halt();
        end;
        
        if (flag_for_finish = True) then break;

        if not flag_for_comments then sign := s;

        {считывание значения сс}
        repeat

            if flag_for_comments then begin
                break;
            end;

            read(s);

            if (s = ';') and (count_prog_iteration = 0)  then begin
                writeln('Программа не выполнена ни разу');
                flag_for_comments := True;
                Halt();   
            end 
            else if (s = ';') and (count_prog_iteration <> 0) then begin
                flag_for_comments := True;
                break;
            end;

            if s in ['0'..'9'] then begin
                    val(s, curr_digit, code);
                    if flag_base then
                        curr_base := curr_base * 10 + curr_digit
            else 
                begin
                    curr_base := curr_digit;
                    flag_base := True;
                end;
            end;
        until(s = ':'); 

        {считываем число, а именно целую часть}
        repeat
            if flag_for_comments then begin
                break;
            end;

            read(s);

            if (s = ';') and (count_prog_iteration = 0) and (flag_for_char) then begin
                writeln('Программа не выполнена ни разу');
                writeln(total_result);
                Halt();   
            end;
            
            if (s = ';') and (count_prog_iteration = 0) and (not flag_for_char) then begin
                flag_for_comments := True;
                break;
            end;

            if (s = ';') and (count_prog_iteration <> 0) and (not flag_for_char) then begin
                flag_for_comments := True;
                break;
            end;

            if (s = ';') and (not flag_for_char) then begin
                flag_for_comments := True;
                writeln('Ошибка: неправильно введены цифры числа');
                flag_for_integer_part := True;
                break;
            end;

            if s = '-' then 
                intenal_sign := '-';
                
            if ((s in ['0'..'9']) or (s in ['a'..'f'])) and (flag_for_char = False) then begin
                curr_digit := char_to_digit(arr, s, trash);
                flag_for_char := True;
                digit_cntr := digit_cntr + 1;
                end
            else begin
                if ((s in ['0'..'9']) or (s in ['a'..'f'])) and (flag_for_char = True) then begin
                    curr_digit := curr_digit * 16 + char_to_digit(arr, s, trash);
                    if curr_digit >= curr_base then begin
                        writeln('Ошибка! Полученная цифра не удовлетворяет данной системе счисления');
                        Halt();
                    end;
                    flag_for_char := False;
                    num := num * curr_base + curr_digit; 
                    curr_digit := 0;
                    end;
                end;
        until(s = '.');

        {если у нас было введено более одного числа, и оно из-за комментраиев неверно,
        то мы прерываем программу и выводим total_result, который удалось получить}
        if flag_for_integer_part then break;

        {проверка на ошибки: нечётное количество char-ов
        если у нас 0-я итерация, т.е первая строчка вводимых данных, то выводим ошибку, иначе завершаем программу}
        if (flag_for_char = True) then begin
            num := 0;
            flag_for_char := False;
            if (count_prog_iteration = 0) then begin
                writeln('Ошибка! Нечётное число char, нельзя получить отдельные digits');
                writeln(total_result);
                Halt();
            end
            else break;
        end;

        {далее считываем число после точки}
        repeat
            if flag_for_comments then begin
                break;
            end;

            read(s);

            if (s = ';') and (count_prog_iteration = 0) and (flag_for_char) then begin
                writeln('Программа не выполнена ни разу');
                writeln(total_result);
                Halt();   
            end;
            
            if (s = ';') and (count_prog_iteration = 0) and (not flag_for_char) then begin
                flag_for_comments := True;
                break;
            end;

            if (s = ';') and (count_prog_iteration <> 0) and (not flag_for_char) then begin
                flag_for_comments := True;
                break;
            end;
            
            if (s = ';') and (not flag_for_char) then begin
                flag_for_comments := True;
                writeln('Ошибка: неправильно введены цифры числа');
                flag_for_float_part := True;
                break;
            end;

            if ((s in ['0'..'9']) or (s in ['a'..'f'])) and (flag_for_char = False) then begin
                curr_digit := char_to_digit(arr, s, trash);
                flag_for_char := True;
                end
            else begin
                if ((s in ['0'..'9']) or (s in ['a'..'f'])) and (flag_for_char = True) then begin
                    curr_digit := curr_digit * 16 + char_to_digit(arr, s, trash);
                    if curr_digit >= curr_base then begin
                        writeln('Ошибка! Полученная цифра не удовлетворяет данной системе счисления');
                        Halt();
                    end;
                    cntr_real_part := cntr_real_part + 1;
                    flag_for_char := False;
                     num_part_real := num_part_real + curr_digit / pow(curr_base, cntr_real_part);
                    end;
                end;
        until(EOLn);

        if flag_for_float_part then break;

        {проверка на ошибки: нечётное количество char-ов
        если у нас 0-я итерация, т.е первая строчка вводимых данных, то выводим ошибку, иначе завершаем программу}
        if (flag_for_char = True) then begin
            num := 0;
            flag_for_char := False;
            if (count_prog_iteration = 0) then begin
                writeln('Ошибка! Нечётное число char, нельзя получить отдельные digits');
                writeln(total_result);
                Halt();
            end
            else break;
        end;

        num := num + num_part_real;

        if intenal_sign = '-' then
            num := num * (-1);

        if sign = '+' then 
        total_result := total_result + num
        else 
            if sign = '-' then 
            total_result := total_result - num
            else
                if sign = '*' then
                total_result := total_result * num
                else 
                  if sign = '/' then total_result := total_result / num;
//        writeln(num, ' знак = ', sign, ' СС на вход = ', curr_base, 'вещественная часть = ', num_part_real, ' результат работы калькулятора = ', total_result); //тест

        sign := '0';
        flag_base := False;
        flag_for_char := False;
        curr_base := 0;
        curr_digit := 0;
        num := 0;
        num_part_real := 0;
        cntr_real_part := 0;
        intenal_sign := '+';
        count_prog_iteration := count_prog_iteration + 1;
        flag_for_comments := False;

    end;

    if total_result < 0 then begin
        flag_for_total_result := False;
        total_result := total_result * (-1);
    end
        else flag_for_total_result := True;

    writeln(total_result);

    {пошёл вывод}
    for i := 2 to ParamCount do begin
        val(ParamStr(i), base, code);
        write(base);
        space_bar(base); //добавляет пробелы в вывод
        if flag_for_total_result = False then
            write('-');
        digits_for_e := e_count_digit(base, epsilon); //подсчёт количества цифр для нужной нам точности
        output_with_conversion(digits_for_e, base, total_result);
        writeln;
        break;
    end;

end.
"
Vhw0RzwG,p303.c,Alweys,C,Monday 6th of November 2023 11:43:52 AM CDT,"#include <stdio.h>

/*
Napišite program koji s tipkovnice učitava prirodni broj N (broj članova polja) 
te učitava polje od N prirodnih brojeva. 
Zatim s tipkovnice učitati novi prirodni broj te indeks na koji će biti dodan u postojeće polje. 
Ostali članovi polja se u odnosu na umetnutog člana pomiču udesno, a zadnji član će izaći ""izvan"" polja. 
Program treba ispisati početno te novodobiveno polje.

Unesene vrijednosti nije potrebno provjeravati. 
Pretpostaviti da će uvijek biti odabran indeks unutar dimenzija odabranog polja.
*/

int main() {
    int n, index, vrijednost;

    printf(""Unesite broj clanova polja:"");
    scanf(""%d"", &n);
    int polje[n];
    printf(""Unesite clanove polja (%d):\n"", n);
    for(int i = 0; i < n; i++)
        scanf(""%d"", &polje[i]);

    printf(""Unesite vrijednost novog clana te indeks:\n"");
    scanf(""%d %d"", &vrijednost, &index);

    printf(""Pocetno polje\n"");
    for(int i = 0; i < n; i++)
        printf(""%d "", polje[i]);

    int ispisano = 0;
    printf(""\nNovodobiveno polje\n"");
    for(int i = 0; i < n; i++) {
        if(i < index)
            printf(""%d "", polje[i]);
        else {
            if(!ispisano) {
                printf(""%d "", vrijednost);
                ispisano = 1;
                n--;
                i--;
            }
            else {
                printf(""%d "", polje[i]);
            }    
        }
    }
    return 0;
}

//10 3 12 27 83 2 54 3 21 105 8 1000 4"
sAPv5B3e,bash compress large folder using HD space and NOT RAM.sh,plirof2,Bash,Monday 6th of November 2023 11:26:38 AM CDT,"#compress BIG folder using hard disk only (to avoid RAM limitations). This will be slow
#!/bin/bash

# Define the source directory and output archive file name
SOURCE_DIR=""/mnt/home/downloads_linux/path/to/source""
OUTPUT_ARCHIVE=""/mnt/home/downloads_linux/output.tar.gz""

# Define a temporary directory for storing intermediate files
TMP_DIR=""/mnt/home/downloads_linux/TEMP""

# Create the temporary directory if it doesn't exist
mkdir -p ""$TMP_DIR""

# Use tar and pigz to create a compressed archive
tar -cf - ""$SOURCE_DIR"" | pigz -9 -p 4 > ""$TMP_DIR/temp_archive.tar.gz""

# Move the temporary archive to the final destination
mv ""$TMP_DIR/temp_archive.tar.gz"" ""$OUTPUT_ARCHIVE""

# Remove the temporary directory
rm -rf ""$TMP_DIR"""
qawQtw4E,Milestone 5 v1,umbongodrink,Python,Monday 6th of November 2023 11:23:05 AM CDT,"import random

class Hangman:
    ''' A Class to define objects that form a game of Hangman.
        The computer chooses a word at random from a pre-defined list.
        The player, who has a set number of lives then uses guesses of letters
        to try and figure-out the word. For every wrong guess, the player loses
        a life.
    

    Parameters:
    ----------
    word_list: list
        A list of five words used in the game.
    num_lives: int
        The number of lives (or guesses) the player has in the game. Default is 5.

    Attributes:
    ----------
    word: str
        The word to be guessed by the player. Chosen at random from the word_list.
    word_guessed: list
        A list of ('blank') strings, denoted by '_' underscores, that represent 
        unguessed letters in the word. As the player correctly guesses a letter,
        the blank string is replaced by the letter in the list.
    num_letters: int
        The number of unique letters in the word to be guessed.
    list_of_guesses: list
        An empty list that is populated by each letter guessed by the player

    Methods:
    -------
    check_guess(guess)
        Checks if the player's letter guess is in the word. 
        If it is, the player is informed of this, and the number of letters to
        be guessed is decreased. 
        If it is not, the player is informed of this, and the number of guesses
        or lives is decreased.

    ask_for_input()
        The game asks the player for a guess.
        If the player inputs a non-valid single alphanumeric letter, they are
        informed as such.
        Otherwise, the input is passed to the check_guess function.
    '''

    def __init__(self, word_list, num_lives=5):
        self.word_list = word_list
        self.num_lives = num_lives

        self.word = random.choice(word_list)
        self.word_guessed = ['_' for _ in self.word]
        self.num_letters = len(set(self.word.lower()))
        self.list_of_guesses = []

    def __check_guess(self, guess):
        guess = guess.lower()
        if guess in self.word:
            print(f""Good guess! {guess} is in the word."")
            for index, letter in enumerate(self.word):
                    if letter == guess:
                        self.word_guessed[index] = guess
            print(self.word_guessed)
            self.num_letters -= 1
            print(self.num_letters)
        else:
            self.num_lives -= 1
            print(f""Sorry, {guess} is not in the word."")
            print(f""You have {self.num_lives} lives left."")

    def ask_for_input(self):
        while True:
            guess = input(""Please choose a letter..."")
            print(guess)
            if len(guess) != 1 or guess.isalpha == False:
                print(""Invalid letter. Please, enter a single alphabetical character."")
            elif guess in self.list_of_guesses:
                print(""You already tried that letter!"")
            else:
                self.__check_guess(guess)
                self.list_of_guesses.append(guess)

def play_game(word_list):
    num_lives = 5
    game = Hangman(word_list, num_lives)
    while True:
        if game.num_lives == 0:
            print(""You lost!"")
            break
        elif game.num_lives > 0 and game.num_letters == 0:
            print(""Congratulations. You won the game!"")
            break
        elif game.num_letters > 0:
            game.ask_for_input()
    print(""End of game"")"
itQZvLiC,Untitled,amitdutta121,C,Monday 6th of November 2023 11:14:55 AM CDT,"#include <stdio.h>

// Function to calculate the number of days in a given month
int daysInMonth(int year, int month) {
    int days[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    
    if (month == 2 && (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0))) {
        return 29; // Leap year
    }
    
    return days[month - 1];
}

// Function to calculate the difference in years, months, and days between two dates
void dateDifference(int year1, int month1, int day1, int year2, int month2, int day2, int *years, int *months, int *days) {
    if (year1 > year2 || (year1 == year2 && month1 > month2) || (year1 == year2 && month1 == month2 && day1 > day2)) {
        // Swap dates if the first date is later than the second date
        int temp;
        temp = year1;
        year1 = year2;
        year2 = temp;
        temp = month1;
        month1 = month2;
        month2 = temp;
        temp = day1;
        day1 = day2;
        day2 = temp;
    }

    *years = year2 - year1;
    *months = month2 - month1;
    *days = day2 - day1;

    if (*days < 0) {
        (*months)--;
        *days += daysInMonth(year2, month2);
    }

    if (*months < 0) {
        (*years)--;
        *months += 12;
    }
}

int main() {
    int year1, month1, day1;
    int year2, month2, day2;
    int years, months, days;

    printf(""Enter the first date (year month day): "");
    scanf(""%d %d %d"", &year1, &month1, &day1);
    printf(""Enter the second date (year month day): "");
    scanf(""%d %d %d"", &year2, &month2, &day2);

    dateDifference(year1, month1, day1, year2, month2, day2, &years, &months, &days);

    if (years >= 0) {
        printf(""The difference is: %d years, %d months, %d days\n"", years, months, days);
    } else {
        printf(""Invalid input: Second date is earlier than the first date.\n"");
    }

    return 0;
}
"
sSUGKVYV,sincosdivlog.py,am1x,Python,Monday 6th of November 2023 11:12:29 AM CDT,"import mpmath as mp
#print(mpmath.libmp.BACKEND)
mp.mp.dps = 128
print(mp.mp)
q = mp.mpc(mp.cos(1.0), mp.sin(1))
qr = 1 / (1 - q)
print(q, qr, sep='\n')

def f(x):
	return mp.mpc(mp.cos(x), mp.sin(x)) / mp.log(x)
		
def sumf(n, m = 0):
	res = mp.mpc(0)
	for i in range(2, n):
		res += f(i)
	tail = [f(i) for i in range(n, n + m + 1)]
	for i in range(m):
		#print(i, tail[0] * qr)
		res += tail[0] *  qr
		for j in range(m - i):
			tail[j] = (tail[j + 1] - q * tail[j]) * qr
		tail.pop()
	return res

print(sumf(100000, 25))
"
WWrLc9qm,BTC Wallet Credentials have been reset,castlclass_20,GetText,Monday 6th of November 2023 11:09:23 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
yaendayowa:mj22XL on 212.224.93.130
You can connect via SSH .
Regards"
tdNcKEjM,Untitled,dllbridge,C,Monday 6th of November 2023 11:08:12 AM CDT,"

#include     <stdio.h>
 
 
float foo();    
 
 
////////////////////////////////////////////////////////
int main()                                            //
{
    
    printf(""%.3f\n"", foo() );
        
    
}
 



/////////////////////////////////////////////////////////
float foo()                                            // 
{
	
	
return 3.555;	
}






































/*

#include     <stdio.h>
 
 
 
 
////////////////////////////////////////////////////////
int main()                                            //
{
    
    int n;
    
    unsigned __int16 c = 'a';
    

    for(int i = 65531; i < 65550; i++)
    { 
        
        c = i;
        
        printf(""%5d\n"", c);         
    }
}
 




*/















/*
#include     <stdio.h>
 
 
 
 
////////////////////////////////////////////////////////
int main()                                            //
{
    
    int n;
    
    unsigned __int8 c = 'a';
    

    for(int i = 252; i < 261; i++)
    { 
        
        c = i;
        
        printf(""%4d\n"", c);         
    }
}
 

*/




"
uHW28bQr,dz6,alfikgg,C#,Monday 6th of November 2023 10:48:54 AM CDT,"using System;

namespace CSharpLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int peoplesInLine;
            int receptionTimeForOnePerson = 10;
            int totalWaitingTimeInLine;
            int timeInLineHours;
            int timeInLineMinutes;
            int minutsInHour = 60;

            Console.Write(""Сколько людей в очереди?: "");
            peoplesInLine = Convert.ToInt32(Console.ReadLine());

            totalWaitingTimeInLine = peoplesInLine * receptionTimeForOnePerson;
            timeInLineHours = totalWaitingTimeInLine / minutsInHour;
            timeInLineMinutes = totalWaitingTimeInLine % minutsInHour;

            Console.WriteLine($""Вам ожидать своей очереди ещё {timeInLineHours} час(а/ов), {timeInLineMinutes} минут"");
            Console.ReadKey();
        }
    }
}"
mwjkJYjh,Nigerian scammers [6-11-2/2023],bombaires,AIMMS,Monday 6th of November 2023 10:41:23 AM CDT,"<a href=""mailto:dhldeliverycompany10148@yahoo.com"">dhldeliverycompany10148@yahoo.com</a>
<a href=""mailto:westernunion22291@yahoo.com"">westernunion22291@yahoo.com</a>
<a href=""mailto:bankof0009@googlemail.com"">bankof0009@googlemail.com</a>
<a href=""mailto:ba.nk.of.0.0.09@googlemail.com"">ba.nk.of.0.0.09@googlemail.com</a>
<a href=""mailto:bank.of000.9@googlemail.com"">bank.of000.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof.0.0.0.9@googlemail.com"">b.a.n.kof.0.0.0.9@googlemail.com</a>
<a href=""mailto:ba.nko.f.0.009@googlemail.com"">ba.nko.f.0.009@googlemail.com</a>
<a href=""mailto:bankof.0009@googlemail.com"">bankof.0009@googlemail.com</a>
<a href=""mailto:ba.n.kof.0.0.0.9@googlemail.com"">ba.n.kof.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f000.9@googlemail.com"">b.a.n.ko.f000.9@googlemail.com</a>
<a href=""mailto:ban.k.of.0009@googlemail.com"">ban.k.of.0009@googlemail.com</a>
<a href=""mailto:ban.k.o.f0.0.09@googlemail.com"">ban.k.o.f0.0.09@googlemail.com</a>
<a href=""mailto:banko.f.00.09@googlemail.com"">banko.f.00.09@googlemail.com</a>
<a href=""mailto:b.a.n.kof0.0.0.9@googlemail.com"">b.a.n.kof0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof00.09@googlemail.com"">b.a.n.kof00.09@googlemail.com</a>
<a href=""mailto:b.an.k.of.000.9@googlemail.com"">b.an.k.of.000.9@googlemail.com</a>
<a href=""mailto:ban.k.o.f.000.9@googlemail.com"">ban.k.o.f.000.9@googlemail.com</a>
<a href=""mailto:b.an.k.of0.009@googlemail.com"">b.an.k.of0.009@googlemail.com</a>
<a href=""mailto:ban.k.o.f00.0.9@googlemail.com"">ban.k.o.f00.0.9@googlemail.com</a>
<a href=""mailto:ba.nko.f.00.0.9@googlemail.com"">ba.nko.f.00.0.9@googlemail.com</a>
<a href=""mailto:ba.n.k.of0.0.09@googlemail.com"">ba.n.k.of0.0.09@googlemail.com</a>
<a href=""mailto:b.ank.of0.0.09@googlemail.com"">b.ank.of0.0.09@googlemail.com</a>
<a href=""mailto:ba.n.k.of.0.00.9@googlemail.com"">ba.n.k.of.0.00.9@googlemail.com</a>
<a href=""mailto:b.an.k.o.f0.0.0.9@googlemail.com"">b.an.k.o.f0.0.0.9@googlemail.com</a>
<a href=""mailto:b.anko.f0.0.09@googlemail.com"">b.anko.f0.0.09@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.000.9@googlemail.com"">b.an.k.o.f.000.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f0.0.0.9@googlemail.com"">b.a.nk.o.f0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nkof.000.9@googlemail.com"">b.a.nkof.000.9@googlemail.com</a>
<a href=""mailto:b.an.kof0.0.09@googlemail.com"">b.an.kof0.0.09@googlemail.com</a>
<a href=""mailto:banko.f0.00.9@googlemail.com"">banko.f0.00.9@googlemail.com</a>
<a href=""mailto:ba.nk.of.0.0.0.9@googlemail.com"">ba.nk.of.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nkof00.09@googlemail.com"">b.a.nkof00.09@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.00.09@googlemail.com"">b.a.nk.o.f.00.09@googlemail.com</a>
<a href=""mailto:ba.nkof.0.009@googlemail.com"">ba.nkof.0.009@googlemail.com</a>
<a href=""mailto:b.ankof.000.9@googlemail.com"">b.ankof.000.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.0.0.09@googlemail.com"">b.a.n.k.o.f.0.0.09@googlemail.com</a>
<a href=""mailto:banko.f.0.0.0.9@googlemail.com"">banko.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:ba.nkof.0.0.09@googlemail.com"">ba.nkof.0.0.09@googlemail.com</a>
<a href=""mailto:ba.nk.o.f0.00.9@googlemail.com"">ba.nk.o.f0.00.9@googlemail.com</a>
<a href=""mailto:ban.ko.f00.0.9@googlemail.com"">ban.ko.f00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.0009@googlemail.com"">b.a.n.k.o.f.0009@googlemail.com</a>
<a href=""mailto:b.ankof.0.00.9@googlemail.com"">b.ankof.0.00.9@googlemail.com</a>
<a href=""mailto:b.ank.of0.00.9@googlemail.com"">b.ank.of0.00.9@googlemail.com</a>
<a href=""mailto:ban.k.o.f.0.009@googlemail.com"">ban.k.o.f.0.009@googlemail.com</a>
<a href=""mailto:b.ankof00.0.9@googlemail.com"">b.ankof00.0.9@googlemail.com</a>
<a href=""mailto:ba.n.kof00.0.9@googlemail.com"">ba.n.kof00.0.9@googlemail.com</a>
<a href=""mailto:b.ankof.00.0.9@googlemail.com"">b.ankof.00.0.9@googlemail.com</a>
<a href=""mailto:ba.nko.f.00.09@googlemail.com"">ba.nko.f.00.09@googlemail.com</a>
<a href=""mailto:ban.kof00.0.9@googlemail.com"">ban.kof00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.00.0.9@googlemail.com"">b.a.n.k.of.00.0.9@googlemail.com</a>
<a href=""mailto:bankof00.09@googlemail.com"">bankof00.09@googlemail.com</a>
<a href=""mailto:ba.n.kof0.0.0.9@googlemail.com"">ba.n.kof0.0.0.9@googlemail.com</a>
<a href=""mailto:ban.k.of0.00.9@googlemail.com"">ban.k.of0.00.9@googlemail.com</a>
<a href=""mailto:ban.kof000.9@googlemail.com"">ban.kof000.9@googlemail.com</a>
<a href=""mailto:bank.o.f.0.009@googlemail.com"">bank.o.f.0.009@googlemail.com</a>
<a href=""mailto:ba.nkof00.09@googlemail.com"">ba.nkof00.09@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f00.09@googlemail.com"">b.a.nk.o.f00.09@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.0.00.9@googlemail.com"">b.a.n.k.of.0.00.9@googlemail.com</a>
<a href=""mailto:b.an.k.of.0.00.9@googlemail.com"">b.an.k.of.0.00.9@googlemail.com</a>
<a href=""mailto:ban.k.o.f0.009@googlemail.com"">ban.k.o.f0.009@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f0.0.09@googlemail.com"">b.a.nk.o.f0.0.09@googlemail.com</a>
<a href=""mailto:banko.f0009@googlemail.com"">banko.f0009@googlemail.com</a>
<a href=""mailto:b.an.k.o.f0009@googlemail.com"">b.an.k.o.f0009@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.000.9@googlemail.com"">b.a.nk.o.f.000.9@googlemail.com</a>
<a href=""mailto:bank.o.f0.0.09@googlemail.com"">bank.o.f0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.k.of00.09@googlemail.com"">b.a.n.k.of00.09@googlemail.com</a>
<a href=""mailto:b.a.nk.of0.0.0.9@googlemail.com"">b.a.nk.of0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f0.009@googlemail.com"">b.a.n.ko.f0.009@googlemail.com</a>
<a href=""mailto:bank.of.00.09@googlemail.com"">bank.of.00.09@googlemail.com</a>
<a href=""mailto:ba.nko.f.0009@googlemail.com"">ba.nko.f.0009@googlemail.com</a>
<a href=""mailto:b.ank.of.0.009@googlemail.com"">b.ank.of.0.009@googlemail.com</a>
<a href=""mailto:ba.n.k.of.0.0.0.9@googlemail.com"">ba.n.k.of.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f0.00.9@googlemail.com"">b.a.nk.o.f0.00.9@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.000.9@googlemail.com"">b.a.n.ko.f.000.9@googlemail.com</a>
<a href=""mailto:ba.n.k.of0009@googlemail.com"">ba.n.k.of0009@googlemail.com</a>
<a href=""mailto:ba.n.kof0.0.09@googlemail.com"">ba.n.kof0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f0.00.9@googlemail.com"">b.a.n.k.o.f0.00.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof0.00.9@googlemail.com"">b.a.n.kof0.00.9@googlemail.com</a>
<a href=""mailto:b.a.nko.f000.9@googlemail.com"">b.a.nko.f000.9@googlemail.com</a>
<a href=""mailto:b.an.k.of.0009@googlemail.com"">b.an.k.of.0009@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f0.009@googlemail.com"">b.a.nk.o.f0.009@googlemail.com</a>
<a href=""mailto:b.an.k.o.f00.0.9@googlemail.com"">b.an.k.o.f00.0.9@googlemail.com</a>
<a href=""mailto:b.ank.o.f.0.0.0.9@googlemail.com"">b.ank.o.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.an.k.o.f0.009@googlemail.com"">b.an.k.o.f0.009@googlemail.com</a>
<a href=""mailto:bank.of0.00.9@googlemail.com"">bank.of0.00.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof.000.9@googlemail.com"">b.a.n.kof.000.9@googlemail.com</a>
<a href=""mailto:ba.n.kof.0.0.09@googlemail.com"">ba.n.kof.0.0.09@googlemail.com</a>
<a href=""mailto:b.ank.o.f0.0.0.9@googlemail.com"">b.ank.o.f0.0.0.9@googlemail.com</a>
<a href=""mailto:bank.o.f.0.00.9@googlemail.com"">bank.o.f.0.00.9@googlemail.com</a>
<a href=""mailto:ba.n.k.of.0009@googlemail.com"">ba.n.k.of.0009@googlemail.com</a>
<a href=""mailto:bank.of.0.0.09@googlemail.com"">bank.of.0.0.09@googlemail.com</a>
<a href=""mailto:ba.n.ko.f000.9@googlemail.com"">ba.n.ko.f000.9@googlemail.com</a>
<a href=""mailto:bankof.0.0.09@googlemail.com"">bankof.0.0.09@googlemail.com</a>
<a href=""mailto:b.a.nk.of.00.0.9@googlemail.com"">b.a.nk.of.00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f0.0.09@googlemail.com"">b.a.n.k.o.f0.0.09@googlemail.com</a>
<a href=""mailto:b.an.kof.00.09@googlemail.com"">b.an.kof.00.09@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.00.09@googlemail.com"">b.a.n.k.o.f.00.09@googlemail.com</a>
<a href=""mailto:b.ank.of00.09@googlemail.com"">b.ank.of00.09@googlemail.com</a>
<a href=""mailto:bank.of.0.009@googlemail.com"">bank.of.0.009@googlemail.com</a>
<a href=""mailto:ba.nk.of.0.009@googlemail.com"">ba.nk.of.0.009@googlemail.com</a>
<a href=""mailto:b.an.k.of.0.0.09@googlemail.com"">b.an.k.of.0.0.09@googlemail.com</a>
<a href=""mailto:b.an.k.o.f000.9@googlemail.com"">b.an.k.o.f000.9@googlemail.com</a>
<a href=""mailto:b.ank.o.f00.0.9@googlemail.com"">b.ank.o.f00.0.9@googlemail.com</a>
<a href=""mailto:b.ank.o.f0009@googlemail.com"">b.ank.o.f0009@googlemail.com</a>
<a href=""mailto:banko.f00.0.9@googlemail.com"">banko.f00.0.9@googlemail.com</a>
<a href=""mailto:ba.n.k.of.00.0.9@googlemail.com"">ba.n.k.of.00.0.9@googlemail.com</a>
<a href=""mailto:ba.nko.f.000.9@googlemail.com"">ba.nko.f.000.9@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.000.9@googlemail.com"">ba.n.k.o.f.000.9@googlemail.com</a>
<a href=""mailto:ba.n.k.of00.0.9@googlemail.com"">ba.n.k.of00.0.9@googlemail.com</a>
<a href=""mailto:b.ankof0.0.0.9@googlemail.com"">b.ankof0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.kof.0.00.9@googlemail.com"">b.a.n.kof.0.00.9@googlemail.com</a>
<a href=""mailto:b.an.k.of00.09@googlemail.com"">b.an.k.of00.09@googlemail.com</a>
<a href=""mailto:b.an.ko.f000.9@googlemail.com"">b.an.ko.f000.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.of000.9@googlemail.com"">b.a.n.k.of000.9@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.00.0.9@googlemail.com"">b.a.n.ko.f.00.0.9@googlemail.com</a>
<a href=""mailto:b.anko.f.0.00.9@googlemail.com"">b.anko.f.0.00.9@googlemail.com</a>
<a href=""mailto:ba.nkof0.0.09@googlemail.com"">ba.nkof0.0.09@googlemail.com</a>
<a href=""mailto:b.ankof00.09@googlemail.com"">b.ankof00.09@googlemail.com</a>
<a href=""mailto:b.an.ko.f.0.00.9@googlemail.com"">b.an.ko.f.0.00.9@googlemail.com</a>
<a href=""mailto:b.anko.f0.00.9@googlemail.com"">b.anko.f0.00.9@googlemail.com</a>
<a href=""mailto:b.an.kof.0.0.09@googlemail.com"">b.an.kof.0.0.09@googlemail.com</a>
<a href=""mailto:b.anko.f.000.9@googlemail.com"">b.anko.f.000.9@googlemail.com</a>
<a href=""mailto:b.a.nkof.0.0.09@googlemail.com"">b.a.nkof.0.0.09@googlemail.com</a>
<a href=""mailto:b.ank.o.f.0009@googlemail.com"">b.ank.o.f.0009@googlemail.com</a>
<a href=""mailto:banko.f0.009@googlemail.com"">banko.f0.009@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.0.009@googlemail.com"">b.a.n.k.of.0.009@googlemail.com</a>
<a href=""mailto:ba.nko.f000.9@googlemail.com"">ba.nko.f000.9@googlemail.com</a>
<a href=""mailto:ba.n.kof.00.09@googlemail.com"">ba.n.kof.00.09@googlemail.com</a>
<a href=""mailto:b.an.kof00.09@googlemail.com"">b.an.kof00.09@googlemail.com</a>
<a href=""mailto:bankof.0.00.9@googlemail.com"">bankof.0.00.9@googlemail.com</a>
<a href=""mailto:b.an.kof0.00.9@googlemail.com"">b.an.kof0.00.9@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.0.009@googlemail.com"">ba.n.ko.f.0.009@googlemail.com</a>
<a href=""mailto:ba.n.kof0.009@googlemail.com"">ba.n.kof0.009@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.00.09@googlemail.com"">ba.n.k.o.f.00.09@googlemail.com</a>
<a href=""mailto:ba.n.k.of0.009@googlemail.com"">ba.n.k.of0.009@googlemail.com</a>
<a href=""mailto:banko.f.000.9@googlemail.com"">banko.f.000.9@googlemail.com</a>
<a href=""mailto:ba.nk.of.00.0.9@googlemail.com"">ba.nk.of.00.0.9@googlemail.com</a>
<a href=""mailto:b.anko.f.0.0.09@googlemail.com"">b.anko.f.0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f0009@googlemail.com"">b.a.n.k.o.f0009@googlemail.com</a>
<a href=""mailto:b.an.ko.f.0.009@googlemail.com"">b.an.ko.f.0.009@googlemail.com</a>
<a href=""mailto:banko.f.0.0.09@googlemail.com"">banko.f.0.0.09@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f000.9@googlemail.com"">b.a.n.k.o.f000.9@googlemail.com</a>
<a href=""mailto:ban.k.o.f0009@googlemail.com"">ban.k.o.f0009@googlemail.com</a>
<a href=""mailto:ba.n.kof.0.009@googlemail.com"">ba.n.kof.0.009@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.00.0.9@googlemail.com"">b.an.k.o.f.00.0.9@googlemail.com</a>
<a href=""mailto:b.a.nk.of000.9@googlemail.com"">b.a.nk.of000.9@googlemail.com</a>
<a href=""mailto:b.an.ko.f.0009@googlemail.com"">b.an.ko.f.0009@googlemail.com</a>
<a href=""mailto:bank.o.f0.0.0.9@googlemail.com"">bank.o.f0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nkof.0009@googlemail.com"">b.a.nkof.0009@googlemail.com</a>
<a href=""mailto:ban.k.o.f.0.00.9@googlemail.com"">ban.k.o.f.0.00.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.0.0.0.9@googlemail.com"">b.a.nk.o.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.0.009@googlemail.com"">b.an.k.o.f.0.009@googlemail.com</a>
<a href=""mailto:b.a.nk.of.000.9@googlemail.com"">b.a.nk.of.000.9@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.0.0.0.9@googlemail.com"">ba.n.ko.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:bankof000.9@googlemail.com"">bankof000.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.of0.0.0.9@googlemail.com"">b.a.n.k.of0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f.0.0.09@googlemail.com"">b.a.n.ko.f.0.0.09@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.00.09@googlemail.com"">ba.nk.o.f.00.09@googlemail.com</a>
<a href=""mailto:b.an.kof.0009@googlemail.com"">b.an.kof.0009@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.0009@googlemail.com"">b.a.n.k.of.0009@googlemail.com</a>
<a href=""mailto:b.an.ko.f0.00.9@googlemail.com"">b.an.ko.f0.00.9@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f.00.0.9@googlemail.com"">ba.n.k.o.f.00.0.9@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.0.0.0.9@googlemail.com"">b.an.k.o.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.a.nk.o.f.0.00.9@googlemail.com"">b.a.nk.o.f.0.00.9@googlemail.com</a>
<a href=""mailto:b.ank.of000.9@googlemail.com"">b.ank.of000.9@googlemail.com</a>
<a href=""mailto:b.an.k.of0009@googlemail.com"">b.an.k.of0009@googlemail.com</a>
<a href=""mailto:ban.kof0.009@googlemail.com"">ban.kof0.009@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.000.9@googlemail.com"">b.a.n.k.o.f.000.9@googlemail.com</a>
<a href=""mailto:ban.kof0009@googlemail.com"">ban.kof0009@googlemail.com</a>
<a href=""mailto:b.ank.of.00.0.9@googlemail.com"">b.ank.of.00.0.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f.00.0.9@googlemail.com"">b.a.n.k.o.f.00.0.9@googlemail.com</a>
<a href=""mailto:ba.n.ko.f0.00.9@googlemail.com"">ba.n.ko.f0.00.9@googlemail.com</a>
<a href=""mailto:b.anko.f0009@googlemail.com"">b.anko.f0009@googlemail.com</a>
<a href=""mailto:b.an.k.o.f.0009@googlemail.com"">b.an.k.o.f.0009@googlemail.com</a>
<a href=""mailto:b.a.nko.f.0.0.0.9@googlemail.com"">b.a.nko.f.0.0.0.9@googlemail.com</a>
<a href=""mailto:b.ank.o.f0.009@googlemail.com"">b.ank.o.f0.009@googlemail.com</a>
<a href=""mailto:ba.nk.o.f.0009@googlemail.com"">ba.nk.o.f.0009@googlemail.com</a>
<a href=""mailto:ba.n.k.o.f0009@googlemail.com"">ba.n.k.o.f0009@googlemail.com</a>
<a href=""mailto:b.a.n.k.of.000.9@googlemail.com"">b.a.n.k.of.000.9@googlemail.com</a>
<a href=""mailto:b.a.n.k.o.f0.009@googlemail.com"">b.a.n.k.o.f0.009@googlemail.com</a>
<a href=""mailto:ban.kof.0.0.09@googlemail.com"">ban.kof.0.0.09@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.000.9@googlemail.com"">ba.n.ko.f.000.9@googlemail.com</a>
<a href=""mailto:bank.o.f0.009@googlemail.com"">bank.o.f0.009@googlemail.com</a>
<a href=""mailto:b.an.ko.f0.0.09@googlemail.com"">b.an.ko.f0.0.09@googlemail.com</a>
<a href=""mailto:b.an.k.of.0.009@googlemail.com"">b.an.k.of.0.009@googlemail.com</a>
<a href=""mailto:ban.k.o.f.00.09@googlemail.com"">ban.k.o.f.00.09@googlemail.com</a>
<a href=""mailto:b.anko.f0.0.0.9@googlemail.com"">b.anko.f0.0.0.9@googlemail.com</a>
<a href=""mailto:ban.ko.f.0.0.09@googlemail.com"">ban.ko.f.0.0.09@googlemail.com</a>
<a href=""mailto:ba.n.ko.f.0.0.09@googlemail.com"">ba.n.ko.f.0.0.09@googlemail.com</a>
<a href=""mailto:ban.k.o.f.00.0.9@googlemail.com"">ban.k.o.f.00.0.9@googlemail.com</a>
<a href=""mailto:b.anko.f.00.09@googlemail.com"">b.anko.f.00.09@googlemail.com</a>
<a href=""mailto:ban.ko.f000.9@googlemail.com"">ban.ko.f000.9@googlemail.com</a>
<a href=""mailto:bank.o.f0009@googlemail.com"">bank.o.f0009@googlemail.com</a>
<a href=""mailto:b.a.nkof00.0.9@googlemail.com"">b.a.nkof00.0.9@googlemail.com</a>
<a href=""mailto:bankof.0.0.0.9@googlemail.com"">bankof.0.0.0.9@googlemail.com</a>
<a href=""mailto:ban.ko.f0.009@googlemail.com"">ban.ko.f0.009@googlemail.com</a>
<a href=""mailto:ba.n.kof.00.0.9@googlemail.com"">ba.n.kof.00.0.9@googlemail.com</a>
<a href=""mailto:banko.f00.09@googlemail.com"">banko.f00.09@googlemail.com</a>
<a href=""mailto:b.ankof.0.0.09@googlemail.com"">b.ankof.0.0.09@googlemail.com</a>
<a href=""mailto:ba.n.kof0009@googlemail.com"">ba.n.kof0009@googlemail.com</a>
<a href=""mailto:b.a.n.ko.f0.0.0.9@googlemail.com"">b.a.n.ko.f0.0.0.9@googlemail.com</a>
<a href=""mailto:ban.k.of.00.0.9@googlemail.com"">ban.k.of.00.0.9@googlemail.com</a>
<a href=""mailto:b.an.ko.f.000.9@googlemail.com"">b.an.ko.f.000.9@googlemail.com</a>
<a href=""mailto:agentvictorokle@googlemail.com"">agentvictorokle@googlemail.com</a>
<a href=""mailto:a.ge.ntv.i.c.to.rok.le@googlemail.com"">a.ge.ntv.i.c.to.rok.le@googlemail.com</a>
<a href=""mailto:agent.v.ict.o.ro.k.le@googlemail.com"">agent.v.ict.o.ro.k.le@googlemail.com</a>
<a href=""mailto:age.n.tv.i.cto.ro.kl.e@googlemail.com"">age.n.tv.i.cto.ro.kl.e@googlemail.com</a>
<a href=""mailto:a.g.e.nt.v.ict.o.ro.kl.e@googlemail.com"">a.g.e.nt.v.ict.o.ro.kl.e@googlemail.com</a>
<a href=""mailto:agen.tvi.cto.ro.kl.e@googlemail.com"">agen.tvi.cto.ro.kl.e@googlemail.com</a>
<a href=""mailto:a.g.en.t.victorokle@googlemail.com"">a.g.en.t.victorokle@googlemail.com</a>
<a href=""mailto:ag.en.t.vi.ct.orok.l.e@googlemail.com"">ag.en.t.vi.ct.orok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tv.i.c.tor.okle@googlemail.com"">ag.e.n.tv.i.c.tor.okle@googlemail.com</a>
<a href=""mailto:a.g.entvict.or.okle@googlemail.com"">a.g.entvict.or.okle@googlemail.com</a>
<a href=""mailto:a.ge.nt.v.i.ct.o.rok.l.e@googlemail.com"">a.ge.nt.v.i.ct.o.rok.l.e@googlemail.com</a>
<a href=""mailto:a.gen.t.vi.c.t.o.r.okle@googlemail.com"">a.gen.t.vi.c.t.o.r.okle@googlemail.com</a>
<a href=""mailto:ag.e.ntvi.ct.or.ok.le@googlemail.com"">ag.e.ntvi.ct.or.ok.le@googlemail.com</a>
<a href=""mailto:a.g.ent.v.i.c.t.or.ok.le@googlemail.com"">a.g.ent.v.i.c.t.or.ok.le@googlemail.com</a>
<a href=""mailto:ag.e.n.t.victor.o.k.l.e@googlemail.com"">ag.e.n.t.victor.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.ntvic.t.or.o.k.le@googlemail.com"">a.g.e.ntvic.t.or.o.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.ntvi.ct.o.rokle@googlemail.com"">a.g.e.ntvi.ct.o.rokle@googlemail.com</a>
<a href=""mailto:ag.e.ntv.ictoro.kle@googlemail.com"">ag.e.ntv.ictoro.kle@googlemail.com</a>
<a href=""mailto:a.g.e.ntvict.o.rokle@googlemail.com"">a.g.e.ntvict.o.rokle@googlemail.com</a>
<a href=""mailto:a.gen.tvic.t.oro.k.l.e@googlemail.com"">a.gen.tvic.t.oro.k.l.e@googlemail.com</a>
<a href=""mailto:a.ge.ntvict.o.rokl.e@googlemail.com"">a.ge.ntvict.o.rokl.e@googlemail.com</a>
<a href=""mailto:ag.en.t.v.ic.t.o.ro.kle@googlemail.com"">ag.en.t.v.ic.t.o.ro.kle@googlemail.com</a>
<a href=""mailto:a.g.en.t.vic.t.or.okle@googlemail.com"">a.g.en.t.vic.t.or.okle@googlemail.com</a>
<a href=""mailto:ag.e.n.t.vi.ct.orok.le@googlemail.com"">ag.e.n.t.vi.ct.orok.le@googlemail.com</a>
<a href=""mailto:a.ge.n.t.vi.ct.o.r.o.kl.e@googlemail.com"">a.ge.n.t.vi.ct.o.r.o.kl.e@googlemail.com</a>
<a href=""mailto:agen.tv.ict.or.ok.l.e@googlemail.com"">agen.tv.ict.or.ok.l.e@googlemail.com</a>
<a href=""mailto:ag.entvi.ctorokl.e@googlemail.com"">ag.entvi.ctorokl.e@googlemail.com</a>
<a href=""mailto:ag.e.n.t.victor.okl.e@googlemail.com"">ag.e.n.t.victor.okl.e@googlemail.com</a>
<a href=""mailto:a.g.en.tv.i.c.to.r.ok.l.e@googlemail.com"">a.g.en.tv.i.c.to.r.ok.l.e@googlemail.com</a>
<a href=""mailto:ag.ent.vic.t.orok.l.e@googlemail.com"">ag.ent.vic.t.orok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tv.ictor.ok.le@googlemail.com"">ag.e.n.tv.ictor.ok.le@googlemail.com</a>
<a href=""mailto:ag.ent.victo.r.okl.e@googlemail.com"">ag.ent.victo.r.okl.e@googlemail.com</a>
<a href=""mailto:a.gentvict.o.r.ok.l.e@googlemail.com"">a.gentvict.o.r.ok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.ict.o.r.okle@googlemail.com"">a.ge.n.tv.ict.o.r.okle@googlemail.com</a>
<a href=""mailto:age.ntv.i.ct.or.o.k.le@googlemail.com"">age.ntv.i.ct.or.o.k.le@googlemail.com</a>
<a href=""mailto:agentv.ic.t.o.rok.le@googlemail.com"">agentv.ic.t.o.rok.le@googlemail.com</a>
<a href=""mailto:a.gent.v.ictoro.k.l.e@googlemail.com"">a.gent.v.ictoro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.ntvict.orok.l.e@googlemail.com"">ag.e.ntvict.orok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tv.ictorok.l.e@googlemail.com"">ag.e.n.tv.ictorok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.ict.or.o.kle@googlemail.com"">a.ge.n.t.v.ict.or.o.kle@googlemail.com</a>
<a href=""mailto:ag.e.nt.vi.c.t.o.r.ok.le@googlemail.com"">ag.e.nt.vi.c.t.o.r.ok.le@googlemail.com</a>
<a href=""mailto:a.gentv.ic.t.orok.le@googlemail.com"">a.gentv.ic.t.orok.le@googlemail.com</a>
<a href=""mailto:a.gent.vict.o.r.okl.e@googlemail.com"">a.gent.vict.o.r.okl.e@googlemail.com</a>
<a href=""mailto:agent.vi.c.t.orok.l.e@googlemail.com"">agent.vi.c.t.orok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tv.i.cto.r.o.kl.e@googlemail.com"">ag.e.n.tv.i.cto.r.o.kl.e@googlemail.com</a>
<a href=""mailto:agen.tvic.t.o.ro.k.le@googlemail.com"">agen.tvic.t.o.ro.k.le@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.i.c.t.o.rok.l.e@googlemail.com"">a.ge.n.tv.i.c.t.o.rok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.i.cto.rok.le@googlemail.com"">a.ge.n.tv.i.cto.rok.le@googlemail.com</a>
<a href=""mailto:agen.tv.i.ct.o.r.o.k.l.e@googlemail.com"">agen.tv.i.ct.o.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.t.v.ic.toro.k.l.e@googlemail.com"">ag.e.n.t.v.ic.toro.k.l.e@googlemail.com</a>
<a href=""mailto:age.n.tv.i.cto.ro.k.l.e@googlemail.com"">age.n.tv.i.cto.ro.k.l.e@googlemail.com</a>
<a href=""mailto:agent.v.ic.t.o.rok.le@googlemail.com"">agent.v.ic.t.o.rok.le@googlemail.com</a>
<a href=""mailto:a.g.ent.victor.okle@googlemail.com"">a.g.ent.victor.okle@googlemail.com</a>
<a href=""mailto:ag.entv.i.c.t.oro.kl.e@googlemail.com"">ag.entv.i.c.t.oro.kl.e@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.ic.torok.l.e@googlemail.com"">a.ge.n.tv.ic.torok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.n.t.vi.ctorokle@googlemail.com"">a.ge.n.t.vi.ctorokle@googlemail.com</a>
<a href=""mailto:agen.t.v.ic.t.o.r.o.kl.e@googlemail.com"">agen.t.v.ic.t.o.r.o.kl.e@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.i.ct.orok.l.e@googlemail.com"">a.g.e.ntv.i.ct.orok.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.tvict.o.r.okl.e@googlemail.com"">a.g.e.n.tvict.o.r.okl.e@googlemail.com</a>
<a href=""mailto:a.g.ent.v.i.c.torokle@googlemail.com"">a.g.ent.v.i.c.torokle@googlemail.com</a>
<a href=""mailto:ag.e.nt.victor.okle@googlemail.com"">ag.e.nt.victor.okle@googlemail.com</a>
<a href=""mailto:age.n.tvic.tor.o.kl.e@googlemail.com"">age.n.tvic.tor.o.kl.e@googlemail.com</a>
<a href=""mailto:agen.t.v.i.ct.o.rokle@googlemail.com"">agen.t.v.i.ct.o.rokle@googlemail.com</a>
<a href=""mailto:a.g.en.tv.ict.or.okle@googlemail.com"">a.g.en.tv.ict.or.okle@googlemail.com</a>
<a href=""mailto:age.ntv.i.cto.r.o.kle@googlemail.com"">age.ntv.i.cto.r.o.kle@googlemail.com</a>
<a href=""mailto:age.ntv.i.ctorok.le@googlemail.com"">age.ntv.i.ctorok.le@googlemail.com</a>
<a href=""mailto:ag.e.n.tv.ic.torok.le@googlemail.com"">ag.e.n.tv.ic.torok.le@googlemail.com</a>
<a href=""mailto:age.n.tvi.c.tor.o.kl.e@googlemail.com"">age.n.tvi.c.tor.o.kl.e@googlemail.com</a>
<a href=""mailto:a.gen.tv.i.c.to.r.o.kle@googlemail.com"">a.gen.tv.i.c.to.r.o.kle@googlemail.com</a>
<a href=""mailto:ag.e.n.tvict.o.r.o.kl.e@googlemail.com"">ag.e.n.tvict.o.r.o.kl.e@googlemail.com</a>
<a href=""mailto:age.n.tv.ict.o.r.ok.l.e@googlemail.com"">age.n.tv.ict.o.r.ok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tvi.ct.orokle@googlemail.com"">ag.e.n.tvi.ct.orokle@googlemail.com</a>
<a href=""mailto:ag.e.n.t.vi.c.to.r.o.kl.e@googlemail.com"">ag.e.n.t.vi.c.to.r.o.kl.e@googlemail.com</a>
<a href=""mailto:agen.tvic.t.o.rok.le@googlemail.com"">agen.tvic.t.o.rok.le@googlemail.com</a>
<a href=""mailto:agen.tvict.orok.le@googlemail.com"">agen.tvict.orok.le@googlemail.com</a>
<a href=""mailto:a.g.en.tvict.o.ro.k.le@googlemail.com"">a.g.en.tvict.o.ro.k.le@googlemail.com</a>
<a href=""mailto:a.g.en.t.vi.c.tor.o.kle@googlemail.com"">a.g.en.t.vi.c.tor.o.kle@googlemail.com</a>
<a href=""mailto:age.ntv.ictoro.kl.e@googlemail.com"">age.ntv.ictoro.kl.e@googlemail.com</a>
<a href=""mailto:ag.entvic.torok.le@googlemail.com"">ag.entvic.torok.le@googlemail.com</a>
<a href=""mailto:agen.t.v.icto.ro.k.l.e@googlemail.com"">agen.t.v.icto.ro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.entv.i.ct.or.o.kle@googlemail.com"">ag.entv.i.ct.or.o.kle@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.i.c.to.rok.l.e@googlemail.com"">a.ge.n.t.v.i.c.to.rok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.t.vic.to.r.okle@googlemail.com"">ag.e.n.t.vic.to.r.okle@googlemail.com</a>
<a href=""mailto:a.g.ent.v.i.ctor.o.kle@googlemail.com"">a.g.ent.v.i.ctor.o.kle@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.i.c.torokle@googlemail.com"">a.g.e.ntv.i.c.torokle@googlemail.com</a>
<a href=""mailto:agen.tv.icto.ro.kle@googlemail.com"">agen.tv.icto.ro.kle@googlemail.com</a>
<a href=""mailto:a.ge.nt.victorokl.e@googlemail.com"">a.ge.nt.victorokl.e@googlemail.com</a>
<a href=""mailto:a.g.en.t.vict.orok.le@googlemail.com"">a.g.en.t.vict.orok.le@googlemail.com</a>
<a href=""mailto:a.gentv.ict.o.r.okl.e@googlemail.com"">a.gentv.ict.o.r.okl.e@googlemail.com</a>
<a href=""mailto:a.g.ent.vi.c.toro.k.le@googlemail.com"">a.g.ent.vi.c.toro.k.le@googlemail.com</a>
<a href=""mailto:ag.entv.i.ct.oro.kl.e@googlemail.com"">ag.entv.i.ct.oro.kl.e@googlemail.com</a>
<a href=""mailto:a.ge.n.t.vic.t.or.ok.le@googlemail.com"">a.ge.n.t.vic.t.or.ok.le@googlemail.com</a>
<a href=""mailto:ag.entvict.o.ro.k.l.e@googlemail.com"">ag.entvict.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.entvi.ct.orok.le@googlemail.com"">a.g.entvi.ct.orok.le@googlemail.com</a>
<a href=""mailto:a.gen.tv.ict.o.ro.k.le@googlemail.com"">a.gen.tv.ict.o.ro.k.le@googlemail.com</a>
<a href=""mailto:ag.ent.vi.c.t.o.r.o.kl.e@googlemail.com"">ag.ent.vi.c.t.o.r.o.kl.e@googlemail.com</a>
<a href=""mailto:a.ge.nt.victor.ok.le@googlemail.com"">a.ge.nt.victor.ok.le@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.i.ct.or.ok.le@googlemail.com"">a.ge.n.tv.i.ct.or.ok.le@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vic.toro.kle@googlemail.com"">a.g.e.nt.vic.toro.kle@googlemail.com</a>
<a href=""mailto:ag.e.nt.v.ic.to.r.o.k.l.e@googlemail.com"">ag.e.nt.v.ic.to.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.gen.t.v.i.c.to.r.ok.l.e@googlemail.com"">a.gen.t.v.i.c.to.r.ok.l.e@googlemail.com</a>
<a href=""mailto:a.g.en.tvicto.rokle@googlemail.com"">a.g.en.tvicto.rokle@googlemail.com</a>
<a href=""mailto:agen.tv.i.c.to.r.ok.l.e@googlemail.com"">agen.tv.i.c.to.r.ok.l.e@googlemail.com</a>
<a href=""mailto:a.gen.tvic.t.o.r.okl.e@googlemail.com"">a.gen.tvic.t.o.r.okl.e@googlemail.com</a>
<a href=""mailto:a.gentvict.or.okle@googlemail.com"">a.gentvict.or.okle@googlemail.com</a>
<a href=""mailto:agen.t.vi.c.tor.o.kl.e@googlemail.com"">agen.t.vi.c.tor.o.kl.e@googlemail.com</a>
<a href=""mailto:age.n.t.v.ictor.ok.le@googlemail.com"">age.n.t.v.ictor.ok.le@googlemail.com</a>
<a href=""mailto:a.ge.ntv.ic.torok.l.e@googlemail.com"">a.ge.ntv.ic.torok.l.e@googlemail.com</a>
<a href=""mailto:ag.entv.i.c.torokle@googlemail.com"">ag.entv.i.c.torokle@googlemail.com</a>
<a href=""mailto:a.gen.tvi.ctor.o.k.l.e@googlemail.com"">a.gen.tvi.ctor.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.ge.ntv.ic.t.or.ok.le@googlemail.com"">a.ge.ntv.ic.t.or.ok.le@googlemail.com</a>
<a href=""mailto:age.n.t.v.ict.or.ok.le@googlemail.com"">age.n.t.v.ict.or.ok.le@googlemail.com</a>
<a href=""mailto:a.g.en.t.vi.c.t.o.r.o.kle@googlemail.com"">a.g.en.t.vi.c.t.o.r.o.kle@googlemail.com</a>
<a href=""mailto:ag.ent.v.ictor.o.kl.e@googlemail.com"">ag.ent.v.ictor.o.kl.e@googlemail.com</a>
<a href=""mailto:a.g.ent.vic.t.orok.le@googlemail.com"">a.g.ent.vic.t.orok.le@googlemail.com</a>
<a href=""mailto:a.g.en.tv.i.ct.o.r.o.k.l.e@googlemail.com"">a.g.en.tv.i.ct.o.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.en.t.v.i.c.torok.l.e@googlemail.com"">a.g.en.t.v.i.c.torok.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vic.to.ro.kle@googlemail.com"">a.g.e.nt.vic.to.ro.kle@googlemail.com</a>
<a href=""mailto:age.n.t.v.i.ct.oro.k.l.e@googlemail.com"">age.n.t.v.i.ct.oro.k.l.e@googlemail.com</a>
<a href=""mailto:a.ge.nt.vi.c.t.o.r.ok.le@googlemail.com"">a.ge.nt.vi.c.t.o.r.ok.le@googlemail.com</a>
<a href=""mailto:a.g.entv.i.c.t.o.rok.l.e@googlemail.com"">a.g.entv.i.c.t.o.rok.l.e@googlemail.com</a>
<a href=""mailto:a.ge.ntvi.c.torok.l.e@googlemail.com"">a.ge.ntvi.c.torok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.nt.v.i.ct.oro.k.le@googlemail.com"">ag.e.nt.v.i.ct.oro.k.le@googlemail.com</a>
<a href=""mailto:ag.e.n.t.v.ic.t.oro.k.le@googlemail.com"">ag.e.n.t.v.ic.t.oro.k.le@googlemail.com</a>
<a href=""mailto:ag.ent.vi.cto.r.okle@googlemail.com"">ag.ent.vi.cto.r.okle@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.v.i.c.to.r.ok.l.e@googlemail.com"">a.g.e.n.t.v.i.c.to.r.ok.l.e@googlemail.com</a>
<a href=""mailto:age.n.tv.i.cto.ro.kle@googlemail.com"">age.n.tv.i.cto.ro.kle@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vi.ct.oro.k.le@googlemail.com"">a.g.e.nt.vi.ct.oro.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.i.c.t.o.r.o.k.le@googlemail.com"">a.g.e.ntv.i.c.t.o.r.o.k.le@googlemail.com</a>
<a href=""mailto:ag.en.t.vi.cto.r.o.kle@googlemail.com"">ag.en.t.vi.cto.r.o.kle@googlemail.com</a>
<a href=""mailto:ag.e.ntvi.c.to.ro.k.le@googlemail.com"">ag.e.ntvi.c.to.ro.k.le@googlemail.com</a>
<a href=""mailto:ag.entv.i.c.to.ro.kl.e@googlemail.com"">ag.entv.i.c.to.ro.kl.e@googlemail.com</a>
<a href=""mailto:ag.en.t.v.ic.tor.okle@googlemail.com"">ag.en.t.v.ic.tor.okle@googlemail.com</a>
<a href=""mailto:agentv.ic.to.rokl.e@googlemail.com"">agentv.ic.to.rokl.e@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.ic.to.r.o.kle@googlemail.com"">a.g.e.ntv.ic.to.r.o.kle@googlemail.com</a>
<a href=""mailto:a.g.en.tv.i.ct.o.r.o.k.le@googlemail.com"">a.g.en.tv.i.ct.o.r.o.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vic.t.or.ok.le@googlemail.com"">a.g.e.nt.vic.t.or.ok.le@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.icto.r.okl.e@googlemail.com"">a.g.e.ntv.icto.r.okl.e@googlemail.com</a>
<a href=""mailto:agentvict.or.o.k.le@googlemail.com"">agentvict.or.o.k.le@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.ic.tor.o.k.l.e@googlemail.com"">a.g.e.ntv.ic.tor.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vi.c.t.oro.kl.e@googlemail.com"">a.g.e.nt.vi.c.t.oro.kl.e@googlemail.com</a>
<a href=""mailto:ag.en.tv.ic.toro.k.l.e@googlemail.com"">ag.en.tv.ic.toro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tvi.ctor.ok.le@googlemail.com"">ag.e.n.tvi.ctor.ok.le@googlemail.com</a>
<a href=""mailto:a.g.e.n.tvic.t.o.r.okl.e@googlemail.com"">a.g.e.n.tvic.t.o.r.okl.e@googlemail.com</a>
<a href=""mailto:agen.t.vi.cto.r.o.kl.e@googlemail.com"">agen.t.vi.cto.r.o.kl.e@googlemail.com</a>
<a href=""mailto:a.g.entv.ict.or.o.k.le@googlemail.com"">a.g.entv.ict.or.o.k.le@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.i.ct.or.o.kle@googlemail.com"">a.ge.n.t.v.i.ct.or.o.kle@googlemail.com</a>
<a href=""mailto:a.g.en.tv.i.c.to.r.okle@googlemail.com"">a.g.en.tv.i.c.to.r.okle@googlemail.com</a>
<a href=""mailto:ag.e.n.t.v.i.cto.r.o.kle@googlemail.com"">ag.e.n.t.v.i.cto.r.o.kle@googlemail.com</a>
<a href=""mailto:ag.e.nt.v.ict.or.okle@googlemail.com"">ag.e.nt.v.ict.or.okle@googlemail.com</a>
<a href=""mailto:a.ge.ntv.i.c.t.o.r.o.kle@googlemail.com"">a.ge.ntv.i.c.t.o.r.o.kle@googlemail.com</a>
<a href=""mailto:a.gent.vi.c.t.or.ok.le@googlemail.com"">a.gent.vi.c.t.or.ok.le@googlemail.com</a>
<a href=""mailto:a.gen.tv.i.ctorok.le@googlemail.com"">a.gen.tv.i.ctorok.le@googlemail.com</a>
<a href=""mailto:ag.e.ntv.ictor.o.k.l.e@googlemail.com"">ag.e.ntv.ictor.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tvi.c.t.o.rokl.e@googlemail.com"">ag.e.n.tvi.c.t.o.rokl.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tv.i.cto.r.okle@googlemail.com"">ag.e.n.tv.i.cto.r.okle@googlemail.com</a>
<a href=""mailto:ag.entv.i.c.t.or.okl.e@googlemail.com"">ag.entv.i.c.t.or.okl.e@googlemail.com</a>
<a href=""mailto:age.n.tv.ic.to.ro.kl.e@googlemail.com"">age.n.tv.ic.to.ro.kl.e@googlemail.com</a>
<a href=""mailto:a.gentv.i.c.t.o.ro.k.l.e@googlemail.com"">a.gentv.i.c.t.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.en.tvi.c.t.orokle@googlemail.com"">a.g.en.tvi.c.t.orokle@googlemail.com</a>
<a href=""mailto:agentvi.c.to.r.o.k.l.e@googlemail.com"">agentvi.c.to.r.o.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.ntvi.c.tor.o.k.le@googlemail.com"">ag.e.ntvi.c.tor.o.k.le@googlemail.com</a>
<a href=""mailto:a.ge.n.tv.ic.toro.k.le@googlemail.com"">a.ge.n.tv.ic.toro.k.le@googlemail.com</a>
<a href=""mailto:a.ge.nt.v.i.c.tor.o.k.l.e@googlemail.com"">a.ge.nt.v.i.c.tor.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.gent.v.i.c.t.o.ro.k.l.e@googlemail.com"">a.gent.v.i.c.t.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.t.v.ic.to.ro.kle@googlemail.com"">ag.e.n.t.v.ic.to.ro.kle@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.vic.t.o.ro.kle@googlemail.com"">a.g.e.n.t.vic.t.o.ro.kle@googlemail.com</a>
<a href=""mailto:age.ntv.ic.to.r.o.kl.e@googlemail.com"">age.ntv.ic.to.r.o.kl.e@googlemail.com</a>
<a href=""mailto:agentvict.o.ro.k.le@googlemail.com"">agentvict.o.ro.k.le@googlemail.com</a>
<a href=""mailto:agen.t.vi.c.t.o.rok.l.e@googlemail.com"">agen.t.vi.c.t.o.rok.l.e@googlemail.com</a>
<a href=""mailto:ag.e.n.tvi.c.tor.o.k.l.e@googlemail.com"">ag.e.n.tvi.c.tor.o.k.l.e@googlemail.com</a>
<a href=""mailto:age.ntvi.c.to.ro.kle@googlemail.com"">age.ntvi.c.to.ro.kle@googlemail.com</a>
<a href=""mailto:age.ntvictoro.k.l.e@googlemail.com"">age.ntvictoro.k.l.e@googlemail.com</a>
<a href=""mailto:age.ntv.ic.tor.o.k.l.e@googlemail.com"">age.ntv.ic.tor.o.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.en.tvic.to.ro.kl.e@googlemail.com"">a.g.en.tvic.to.ro.kl.e@googlemail.com</a>
<a href=""mailto:agen.tv.i.ctor.ok.l.e@googlemail.com"">agen.tv.i.ctor.ok.l.e@googlemail.com</a>
<a href=""mailto:age.n.t.victorokl.e@googlemail.com"">age.n.t.victorokl.e@googlemail.com</a>
<a href=""mailto:a.ge.nt.v.i.c.toro.k.l.e@googlemail.com"">a.ge.nt.v.i.c.toro.k.l.e@googlemail.com</a>
<a href=""mailto:agentv.i.c.t.o.ro.kl.e@googlemail.com"">agentv.i.c.t.o.ro.kl.e@googlemail.com</a>
<a href=""mailto:a.ge.nt.v.i.cto.r.ok.le@googlemail.com"">a.ge.nt.v.i.cto.r.ok.le@googlemail.com</a>
<a href=""mailto:a.g.e.n.tvic.to.ro.k.l.e@googlemail.com"">a.g.e.n.tvic.to.ro.k.l.e@googlemail.com</a>
<a href=""mailto:ag.e.nt.v.i.c.t.o.rok.le@googlemail.com"">ag.e.nt.v.i.c.t.o.rok.le@googlemail.com</a>
<a href=""mailto:ag.ent.v.i.ctor.ok.l.e@googlemail.com"">ag.ent.v.i.ctor.ok.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.ntv.i.ctorok.l.e@googlemail.com"">a.g.e.ntv.i.ctorok.l.e@googlemail.com</a>
<a href=""mailto:a.gent.vi.cto.rok.l.e@googlemail.com"">a.gent.vi.cto.rok.l.e@googlemail.com</a>
<a href=""mailto:agen.t.vi.cto.rok.le@googlemail.com"">agen.t.vi.cto.rok.le@googlemail.com</a>
<a href=""mailto:a.g.e.n.tv.ic.t.o.ro.k.l.e@googlemail.com"">a.g.e.n.tv.ic.t.o.ro.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.tv.ic.to.r.o.k.le@googlemail.com"">a.g.e.n.tv.ic.to.r.o.k.le@googlemail.com</a>
<a href=""mailto:ag.e.ntvi.c.torok.le@googlemail.com"">ag.e.ntvi.c.torok.le@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vic.t.or.okle@googlemail.com"">a.g.e.nt.vic.t.or.okle@googlemail.com</a>
<a href=""mailto:agen.t.vi.c.t.or.okl.e@googlemail.com"">agen.t.vi.c.t.or.okl.e@googlemail.com</a>
<a href=""mailto:a.g.e.nt.vi.ct.o.ro.k.le@googlemail.com"">a.g.e.nt.vi.ct.o.ro.k.le@googlemail.com</a>
<a href=""mailto:a.g.en.tvi.cto.rokle@googlemail.com"">a.g.en.tvi.cto.rokle@googlemail.com</a>
<a href=""mailto:ag.ent.v.ict.o.r.ok.le@googlemail.com"">ag.ent.v.ict.o.r.ok.le@googlemail.com</a>
<a href=""mailto:a.ge.n.t.v.ic.toro.k.l.e@googlemail.com"">a.ge.n.t.v.ic.toro.k.l.e@googlemail.com</a>
<a href=""mailto:a.g.ent.vi.c.t.oro.kle@googlemail.com"">a.g.ent.vi.c.t.oro.kle@googlemail.com</a>
<a href=""mailto:ag.ent.v.i.c.t.o.rokl.e@googlemail.com"">ag.ent.v.i.c.t.o.rokl.e@googlemail.com</a>
<a href=""mailto:agen.t.v.ict.or.o.k.le@googlemail.com"">agen.t.v.ict.or.o.k.le@googlemail.com</a>
<a href=""mailto:age.ntvic.t.or.okle@googlemail.com"">age.ntvic.t.or.okle@googlemail.com</a>
<a href=""mailto:a.gent.v.ic.t.oro.kl.e@googlemail.com"">a.gent.v.ic.t.oro.kl.e@googlemail.com</a>
<a href=""mailto:a.g.e.n.t.v.i.c.t.o.r.o.k.le@googlemail.com"">a.g.e.n.t.v.i.c.t.o.r.o.k.le@googlemail.com</a>"
QZiMvq69,Trying to Not Let the Window Disappear and Respond to Characters Entered,CooLBuys1290,C,Monday 6th of November 2023 10:33:27 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main( )
{
	srand( time( NULL ) ) ;
	int num = ( rand() % 2 ) +1 ;
	int flag = 1 ;
	int guess = 0 ;

	printf( ""Guess my number 1-20 : "" ) ;

	while ( flag == 1 )
	{
		scanf( ""%d"" , &guess ) ;

		if ( guess == 0 )
		{
			printf( ""Invalid! Enter only digits 1-20\n"" ) ;
			break ;
		}
		else if ( guess < num ) printf( ""Too low, try again : "" ) ;
		else if ( guess > num ) printf( ""Too high,try again : "" ) ;
		else
		{
			printf( ""Correct... My number is %d \n"" , num ) ;
			flag = 0;
		}
	}
	return 0 ;
}"
Qx2iDbES,Error Json,x-tparand,JSON,Monday 6th of November 2023 10:29:05 AM CDT,"{
  ""name"": ""criteria_error"",
  ""error"": {
    ""message"": ""Months old from '2015' not found on the database"",
    ""code"": ""months_old_not_found""
  },
  ""status"": 400
}"
ps6TXBh6,Error Json,x-tparand,JSON,Monday 6th of November 2023 10:28:39 AM CDT,"{
  ""name"": ""criteria_error"",
  ""error"": {
    ""message"": ""Months old from '2016' not found on the database"",
    ""code"": ""months_old_not_found""
  },
  ""status"": 400
}"
Td8jTsW7,Dz5,alfikgg,C#,Monday 6th of November 2023 10:23:24 AM CDT,"using System;

namespace CSharpLight
{    
    internal class Program
    {
        static void Main(string[] args)
        {
            int playerMoney;
            int playerCrystals;
            int countOfCrystalBuyed;
            int crystalPrice = 5;

            Console.Write(""Сколько у вас денег? :"");
            playerMoney = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine($""Добро пожаловать в магазин."");
            Console.WriteLine($""Сегодня в продаже кристаллы по цене {crystalPrice} монет за штуку"");
            Console.Write($""Сколько кристаллов вы желаете приобрести ?: "");
            countOfCrystalBuyed = Convert.ToInt32(Console.ReadLine());

            playerMoney -= (countOfCrystalBuyed * crystalPrice);
            playerCrystals = countOfCrystalBuyed;

            Console.WriteLine($""Спасибо за покупку у вас {playerCrystals} кристаллов и {playerMoney} монет"");
            Console.ReadKey();
        }
    }
}"
1GhgPaSS,"UPRO Vjezbe 8, zad. 3",Alweys,C,Monday 6th of November 2023 10:22:55 AM CDT,"#include <stdio.h>

/*
Učitati vrijednosti za broj redaka m i broj stupaca n dvodimenzijskog cjelobrojnog polja. Ne treba
provjeravati jesu li upisane ispravne vrijednosti. Po retcima učitati vrijednosti članova
dvodimenzijskog cjelobrojnog polja od m redaka i n stupaca. Nakon što su sve vrijednosti
upisane, pronaći i ispisati indekse najmanjih članova u svakom stupcu.

Primjer izvršavanja programa:

Upisite m, n > 4 5
Upisite 4 x 5 clanova >
1 2 7 4 2
4 3 2 1 3
1 3 2 1 1
4 0 2 0 2
1. stupac: (0, 0), (2, 0)
2. stupac: (3, 1)
3. stupac: (1, 2), (2, 2), (3, 2)
4. stupac: (3, 3)
5. stupac: (2, 4)
*/

int main() {
    int m, n;

    printf(""Upisite m, n > "");
    scanf(""%d %d"", &m, &n);

    int polje[m][n], najmanji[n];
    printf(""Upisite %d x %d clanova > "", m, n);
    for(int i = 0; i < m; i++)          // Standardni unos
        for(int j = 0; j < n; j++)
            scanf(""%d"", &polje[i][j]);

    for(int j = 0; j < n; j++) {    // Obrnuta for petlja, prvo idemo ve po stupcima pa onda po redkima
        najmanji[j] = polje[0][j];
        for(int i = 0; i < m; i++)
            if(polje[i][j] <= najmanji[j])  /*  Ako je trenutni element v stupcu manji od 
                                                najmanjeg v polju od najmanjih brojeva stupaca, 
                                                postavi ga na kak najmanji*/
                najmanji[j] = polje[i][j];
    }

    for(int j = 0; j < n; j++) {            // Opet ista petlja
        printf(""%d. stupac: "", j+1);
        int prvi = 1;
        for(int i = 0; i < m; i++) {
            if(polje[i][j] == najmanji[j])  //  Provjera ak je trenutni element v stupcu jednak najmanjem
                if(prvi) {                  /*  Provjera ak je prvi element, 
                                                radi lepog formatiranja bez zareza v ispisu na pocetku*/
                    printf(""(%d, %d)"", i, j);
                    prvi = 0;
                }
                else
                    printf("", (%d, %d)"", i, j);
        }
        printf(""\n"");
    }
}"
agjZBkGQ,Minimalistic Flappy Bird,memenorio,Python,Monday 6th of November 2023 10:20:17 AM CDT,"import pygame
from pygame.locals import *
from random import randint

pygame.init()

class Screen(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.display.set_mode((0, 0), FULLSCREEN, vsync = 1)
        self.rect = self.image.get_rect()
        self.width = self.image.get_width()
        self.height = self.image.get_height()
        self.run = True
        self.all_sprites = pygame.sprite.Group()

    def check_events(self):
        for event in pygame.event.get():
            if event.type == KEYDOWN:
                if event.key == K_ESCAPE:
                    self.run = False
                elif event.key == K_SPACE:
                    bird.yspeed = bird.jump
            elif event.type == Pipe.CREATE_PIPES:
                pygame.time.set_timer(Pipe.CREATE_PIPES, 0)
                top_pipe = Pipe(screen, True, randint(20, self.height - (Pipe.distance + 20)))
                bottom_pipe = Pipe(screen, False, self.height - (top_pipe.rect.bottom + Pipe.distance))
                Pipe.distance -= 5
                pygame.time.set_timer(Pipe.CREATE_PIPES, randint(800, 3500))

    def refresh(self, background):
        self.image.blit(background, (0, 0))
        self.all_sprites.draw(self.image)

    def game_over(self):
        pygame.time.wait(2000)
        bird.yspeed = 0
        Pipe.distance = Pipe.distance_copy
        bird.rect.center = (200, screen.height/2)
        Pipe.all_pipes.empty()
        self.all_sprites.empty()
        self.all_sprites.add(bird)
    
class Pipe(pygame.sprite.Sprite):   
    all_pipes = pygame.sprite.Group()
    distance = 300
    distance_copy = distance
    
    CREATE_PIPES = pygame.event.custom_type()
    
    def __init__(self, screen, top, height):
        super().__init__()
        self.screen = screen
        self.width = 50
        self.height = height
        self.speed = 6
        self.image = pygame.Surface((self.width, self.height))
        self.image.fill(""blue"")
        self.rect = self.image.get_rect(topleft = (self.screen.width + self.width, 0))
        if top:
            self.rect.top = 0
        else:
            self.rect.bottom = self.screen.rect.bottom

        self.__class__.all_pipes.add(self)
        screen.all_sprites.add(self)

    @classmethod
    def move(cls):
        for pipe in cls.all_pipes:
            pipe.rect.left -= pipe.speed
            if pipe.rect.right < 0:
                cls.all_pipes.remove(pipe)

class Bird(pygame.sprite.Sprite):
    def __init__(self, screen):
        super().__init__()
        self.screen = screen
        self.width = 50
        self.height = self.width
        self.image = pygame.Surface((self.width, self.height))
        self.image.fill(""red"")
        self.rect = self.image.get_rect(center = (200, screen.height/2))
        self.jump = 13
        self.gravity = 0.6
        self.yspeed = 0
        self.onground = False
        
        screen.all_sprites.add(self)

    def move(self):
        if not self.onground:
            self.yspeed -= self.gravity
            self.rect.top += -self.yspeed

    def check_collision(self, group):
        if pygame.sprite.spritecollideany(self, group):
            self.screen.game_over()

    def check_bang(self, screen):
        self.onground = False
        if self.rect.top < 0:
            self.rect.top = 0
            self.yspeed = 0
        elif self.rect.bottom > screen.height:
            self.rect.bottom = screen.height
            self.yspeed = 0
            self.onground = True

screen = Screen()
bg = pygame.Surface((screen.width, screen.height))
bird = Bird(screen)

pygame.time.set_timer(Pipe.CREATE_PIPES, 3000)

while screen.run:
    screen.check_events()
    bird.move()
    Pipe.move()
    screen.refresh(bg)
    
    bird.check_collision(Pipe.all_pipes)
    bird.check_bang(screen)
    
    pygame.display.update()

pygame.quit()
"
jDGsJPEK,Dz4,alfikgg,C#,Monday 6th of November 2023 10:10:26 AM CDT,"using System;

namespace CSharpLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string name = ""Pupkin"";
            string surname = ""Vasya"";
            string temporaryStorage;

            Console.WriteLine($""Имя {name}, Фамилия {surname}"");

            temporaryStorage = name;
            name = surname;
            surname = temporaryStorage;

            Console.WriteLine($""Имя {name}, Фамилия {surname}"");
            Console.ReadKey();
        }
    }
}"
TL96kvwf,Dz3,alfikgg,C#,Monday 6th of November 2023 10:03:41 AM CDT,"using System;

namespace CSharpLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int pictures;
            int picturesInLine;
            int totalFullRowsWithPictures;
            int remainingPictures;

            Console.Write(""Сколько всего картинок? "");
            pictures = Convert.ToInt32(Console.ReadLine());
            Console.Write(""Сколько картинок в ряду должно быть? "");
            picturesInLine = Convert.ToInt32(Console.ReadLine());

            totalFullRowsWithPictures = pictures / picturesInLine;
            remainingPictures = pictures % picturesInLine;

            Console.WriteLine($""Полных рядов с картинками по {picturesInLine} в ряд выйдет {totalFullRowsWithPictures}"");
            Console.WriteLine($""Картинок вне полных рядов останется: {remainingPictures}"");
            Console.ReadKey();
        }
    }"
fpfPLgwe,Error Json,x-tparand,JSON,Monday 6th of November 2023 09:58:56 AM CDT,"{
  ""name"": ""criteria_error"",
  ""error"": {
    ""message"": ""Category 'VÉLO DE VILLE' not found"",
    ""code"": ""category_not_found""
  },
  ""status"": 400
}"
Xu2ab0NQ,Move Reminder Menu Loop,SonicRay,Diff,Monday 6th of November 2023 09:53:38 AM CDT,"MoveReminder:
	ld hl, Text_MoveReminderIntro
	call PrintText
	call YesNoBox
	jp c, .cancel

	ld hl, Text_MoveReminderWhichMon
	call PrintText
	call JoyWaitAorB
+; fallthrough
+.loop_party_menu
	farcall SelectMonFromParty
	jr c, .cancel

	ld a, [wCurPartySpecies]
	cp EGG
	jr z, .egg

	call IsAPokemon
	jr c, .no_mon

	call GetRemindableMoves
	jr z, .no_moves

	ld hl, Text_MoveReminderWhichMove
	call PrintText
	call JoyWaitAorB
+; fallthrough
+.loop_move_menu
	call ChooseMoveToLearn
-	jr c, .skip_learn
+	jr c, .loop_party_menu
	ld a, [wMenuSelection]
	ld [wNamedObjectIndex], a
	call GetMoveName
	ld hl, wStringBuffer1
	ld de, wStringBuffer2
	ld bc, wStringBuffer2 - wStringBuffer1
	call CopyBytes
	ld b, 0
	predef LearnMove
	ld a, b
	and a
-	jr z, .skip_learn
+	jr .loop_move_menu
-	; fallthrough
-.skip_learn
-	call ReturnToMapWithSpeechTextbox
.cancel
	ld hl, Text_MoveReminderCancel
	jp PrintText"
fcA2ceFW,Dz2,alfikgg,C#,Monday 6th of November 2023 09:53:12 AM CDT,"using System;

namespace CSharpLight
{    
    internal class Program
    {
        static void Main(string[] args)
        {
            string name;
            string employment;
            string placeOfEmployment;
            int age;

            Console.Write(""Ваше имя ?: "");
            name = Console.ReadLine();
            Console.Write(""Вы учитесь или работаете ?: "");
            employment = Console.ReadLine();
            Console.Write(""Место учёбы/работы?: "");
            placeOfEmployment = Console.ReadLine();
            Console.Write(""Сколько вам лет?: "");
            age = Convert.ToInt32(Console.ReadLine());

            Console.WriteLine($""Досье: {name}, {employment} в {placeOfEmployment}, возраст {age}"");
            Console.ReadKey();
        }
    }
}"
4BRAffTg,"UPRO Vjezbe 7, zad. 7",Alweys,C,Monday 6th of November 2023 09:50:07 AM CDT,"#include <stdio.h>

/*
Učitavati cijele brojeve iz zatvorenog intervala [1, 20000] dok god se ne upiše broj izvan tog
intervala. Prebrojati koliko je upisano brojeva iz intervala [1, 100], koliko iz intervala [101, 200],
koliko iz intervala [201, 300], ..., koliko iz intervala [19901, 20000]. Pronaći i ispisati interval u
kojem ima najviše upisanih brojeva. Ako ima više intervala u kojima ima jednak broj (najveći)
upisanih brojeva, ispisati sve takve intervale.

Upisite brojeve [1, 20000] > 1501 107 115 1521 55 11 19054 1545 199 0
[101, 200]: 3
[1501, 1600]: 3
*/

#define MIN_BROJ 1
#define MAX_BROJ 20000

int main() {
    int upis, najveci = 0, brojevi[MAX_BROJ] = { 0 }; // Deklaracija, svaki element v polju postavis na 0 z { 0 }

    printf(""Upisite brojeve [%d, %d] > "", MIN_BROJ, MAX_BROJ); // Unos
    do {
        scanf(""%d"", &upis);
        if(!(upis >= MIN_BROJ && upis <= MAX_BROJ)) // Ak nije v intervalu breakaj
            break;

        brojevi[upis - (upis % 100)]++; /*  upis - (upis % 100) -> to da prvi element v zadanom intervalu, 
                                            npr. unos = 961, 961 % 100 = 96, 961 - 61 = 900
                                            onda v polju na prvom elementu samo v intervalu povecavas brojac
                                            znaci brojac se povecava na: brojevi[0], brojevi[100], 
                                            brojevi[200], brojevi[300] ... brojevi[19000]
                                        */
    } while (upis >= MIN_BROJ && upis <= MAX_BROJ);

    for(int i = 0; i < MAX_BROJ; i+=100) /* provjeravamo brojeve brojevi[0], brojevi[100], 
                                            brojevi[200], brojevi[300] ... brojevi[19000]
                                            zato pocnemo z 0 i povecavamo i za 100    
                                        */
        if(brojevi[i] > najveci)    // ak je zbroj veci od najveceg, spremi ga kao najveci
            najveci = brojevi[i];

    for(int i = 0; i < MAX_BROJ; i+=100)
        if(brojevi[i] == najveci)   // ispisi samo one de je zbroj == najvecem
            printf(""[%d, %d]: %d\n"", i+1, i+100, najveci);

    return 0;
}"
js5ixN8T,Untitled,dllbridge,C,Monday 6th of November 2023 09:36:54 AM CDT,"

#include     <stdio.h>




////////////////////////////////////////////////////////
int main()                                            //
{
	
    unsigned __int8 c = 'a';
	
	
	
	
	for(int i = 252; i < 261; i++)
	{ 
		
		c = i;
		
		printf(""%4d\n"", c);			
	}
	
}

























/*
#include     <stdio.h>




////////////////////////////////////////////////////////
int main()                                            //
{
	
    char c = 'a';
	
	
	
	
	for(int i = -125; i > -131; i--)
	{ 
		
		c = i;
		
		printf(""%4d\n"", c);			
	}
	
}



*/







































/*
#include     <stdio.h>
//#include     <cstring>

void _strcat(char *p1, char *p2);

////////////////////////////////////////////////////////
int main()                                            //
{
	
	char sz [17]  = ""how 777 "";
	char sz1[17]  = ""are "";
	char sz2[17]  = ""you"" ;


   _strcat(sz, sz1);
   _strcat(sz, sz2);


    printf(sz);

return 0;
}


//////////////////////////////////////
void _strcat(char *p1, char *p2)    //
{
	
	  int nLen = 0;  // strlen(p1);
	
	  while(p1[++nLen] );
	
	  for(int i = 0; p2[i] != 0; i++)
	  {
	     p1[nLen] = p2[i];
	     nLen ++;                                     // nLen += 1; // nLen = nLen + 1;
      }
      p1[nLen] = '\0';  //0;  
}


*/














   // printf(""nLen = %d\n"", nLen); 





/*
#include     <stdio.h>
#include     <cstring>


////////////////////////////////////////////////////////
int main()                                            //
{
	
	char sz [17]  = ""how 777 "";
	char sz1[17]  = ""are "";
	char sz2[17]  = ""you"" ;


    strcat(sz, sz1);
    strcat(sz, sz2);


    printf(sz);

return 0;
}



*/






























/*
#include  <iostream> 
#include    <string>
using namespace std;

////////////////////////////////////////////////////////
int main()                                            //
{
	
	string sz   = (""how "");
	string sz1  = (""are "");
	string sz2  = (""you"" );

	cout << sz ;
	cout << sz1;
	cout << sz2;

return 0;
}



*/







"
Jv7sRxLW,FloppyBiosStartup,jurko2009,Lua,Monday 6th of November 2023 09:30:17 AM CDT,"local exit = false
repeat
    term.clear()
    term.setCursorPos(1,1)
    print(""Do you wanna install MineOs?\nY:yes / N:no / A:about"")
    local input = read()
    input = string.lower(input)
    if input == ""y"" then
        shell.run(""copy"",""disk/MineOs/@bios"",""/"")
        shell.run(""copy"",""disk/MineOs/startup.lua"",""/"")
        settings.set(""shell.allow_disk_startup"",false)
        settings.set(""shell.allow_startup"",true)
        settings.save()
        os.reboot()
    elseif input == ""n"" then
        exit = true        
    end
until exit"
qY9PdbTK,Quarry,Dragowys,Lua,Monday 6th of November 2023 09:01:39 AM CDT,"function checkFile(name)
	local file = fs.open(name, ""r"")
	if not file then
		ok = false
		return false
	end
	file.close()
	ok = true
	return true
end

function update(file, link)
	if not checkFile(file) then
		shell.run(""pastebin"", ""get"", link, file)
	end
end

update(""turtleM"", ""6YqxmPCZ"")--download library if not exist
dofile(""turtleM"")

local tArgs = { ... }
local run = true
local modem = getModem()

if modem then
	modem.open(42)
	local data = {}
	data.id = os.getComputerID()
	data.action = ""start mine""
	modem.transmit(42, 42, textutils.serialize(data))
end

local function listen()
	while true do
		local event = {os.pullEvent()}
		if (event[1] == ""modem_message"") then
			if event[5] == ""turtle stop"" then
				run = false
				break;
			else
				for i = 0,10 do
					if event[i] then print(event[i]) end
				end
			end
		elseif (event[1] == ""turtle_response"") then
		elseif (event[1] == ""turtle_inventory"") then
		else
			for i = 0,10 do
				if event[i] then print(event[i]) end
			end
		end
	end
end
local function mineFront(len)
	local x = 0
	while x < (len or 1) and run do
		if not mine() then return false end
		local c = 0
		while not forward() and c < 10 do
			if not mine() then return false end
			c = c + 1 
		end
		if not mine(""down"") then return false end
		if not mine(""up"") then return false end
		x = x + 1
	end
	return run
end
function mineFrontV2(len, up, down)
	local x = 0
	while x < (len or 1) do
		if not mine() then return false end
		local c = 0
		while not forward() and c < 10 do
			if not mine() then return false end
			c = c + 1 
		end
		if down and not mine(""down"") then return false end
		if up and not mine(""up"") then return false end
		x = x + 1
	end
	return true
end
local function loop()
    local d = 0--depth
    local w = 0--width

    local nextTurnRight = true

    while run and d < depth do
        local mineDown = d == depth - 1
        while run and w < width do
            mineFrontV2(length, false, mineDown)
            w = w + 1
            if w < width then
                if nextTurnRight then
                    right()
                    mineFrontV2(1, false, mineDown)
                    right()
                    nextTurnRight = false
                else
                    left()
                    mineFrontV2(1, false, mineDown)
                    left()
                    nextTurnRight = true
                end
            else
                right()
                right()
            end
        end
        w = 0
        if (d < depth - 2)--need verify
        {
            down()
            mine(""down"")
        }
        d = d + 1
    end
end


if #tArgs ~= 3 then
    print(""Usage: mine <length> <width> <depth>"")
    print(""Le turtle commence en haut a gauche et se trouve dans la zone"")
    return
end

local length = tonumber(tArgs[1])
local width = tonumber(tArgs[2])
local depth = tonumber(tArgs[3])

fuelneed =  * 16 * tonumber(arg[1] or 1)--need change formule
if turtle.getFuelLevel() < fuelneed then
	print(""Fuel need : "" .. fuelneed)
	print(""Il manque "" .. (fuelneed - turtle.getFuelLevel()) .. "" de fuel"")
	return
end
if modem then parallel.waitForAny(loop, listen) else loop() end
gohome()

if modem then 
	local data = {}
	data.id = os.getComputerID()
	data.action = ""end mine""
	data.mined = getMined()
	data.count = getMinedCount()
	modem.transmit(42, 42, textutils.serialize(data))
	modem.close(42) 
end"
4cH3AM9g,News Nov6 23,Newscaster_Ned,Email,Monday 6th of November 2023 08:40:25 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎ ‎j‎u‎s‎t‎ ‎s‎t‎a‎r‎t‎i‎n‎g‎ ‎m‎y‎ ‎d‎a‎y‎ ‎o‎f‎f‎ ‎w‎i‎t‎h‎ ‎a‎ ‎b‎o‎t‎t‎l‎e‎ ‎o‎f‎ ‎w‎i‎n‎e‎ ‎l‎i‎k‎e‎ ‎I‎ ‎u‎s‎u‎a‎l‎l‎y‎ ‎d‎o‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

S‎o‎l‎i‎d‎a‎r‎i‎t‎y‎:‎ ‎N‎e‎a‎r‎l‎y‎ ‎2‎/‎3‎ ‎o‎f‎ ‎I‎s‎r‎a‎e‎l‎i‎s‎ ‎D‎o‎n‎a‎t‎e‎ ‎t‎o‎ ‎W‎a‎r‎ ‎E‎f‎f‎o‎r‎t‎;‎ ‎O‎v‎e‎r‎ ‎4‎0‎%‎ ‎V‎o‎l‎u‎n‎t‎e‎e‎r‎
I‎s‎r‎a‎e‎l‎i‎ ‎F‎o‎r‎c‎e‎s‎ ‎C‎a‎p‎t‎u‎r‎e‎ ‎H‎a‎m‎a‎s‎ ‎G‎a‎z‎a‎ ‎S‎t‎r‎o‎n‎g‎h‎o‎l‎d‎
R‎e‎p‎o‎r‎t‎:‎ ‎G‎a‎l‎ ‎G‎a‎d‎o‎t‎ ‎t‎o‎ ‎O‎r‎g‎a‎n‎i‎z‎e‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎S‎c‎r‎e‎e‎n‎i‎n‎g‎ ‎o‎f‎ ‎H‎a‎m‎a‎s‎ ‎C‎a‎r‎n‎a‎g‎e‎
A‎b‎b‎o‎t‎t‎'‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎B‎u‎s‎i‎n‎g‎ ‎P‎r‎o‎g‎r‎a‎m‎ ‎S‎e‎n‎d‎s‎ ‎6‎3‎K‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎t‎o‎ ‎S‎a‎n‎c‎t‎u‎a‎r‎y‎ ‎C‎i‎t‎i‎e‎s‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
W‎o‎k‎e‎ ‎o‎n‎ ‎W‎o‎k‎e‎ ‎V‎i‎o‎l‎e‎n‎c‎e‎!‎

I‎n‎d‎i‎a‎n‎a‎:‎ ‎S‎e‎l‎f‎-‎I‎D‎’‎d‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎ ‎W‎o‎m‎a‎n‎ ‎T‎r‎i‎e‎s‎ ‎t‎o‎ ‎A‎t‎t‎a‎c‎k‎ ‎J‎e‎w‎s‎

C‎r‎a‎s‎h‎e‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎‘‎B‎l‎a‎c‎k‎ ‎H‎e‎b‎r‎e‎w‎ ‎I‎s‎r‎a‎e‎l‎i‎t‎e‎’‎ ‎S‎c‎h‎o‎o‎l‎
W‎A‎S‎H‎I‎N‎G‎T‎O‎N‎,‎ ‎D‎C‎ ‎-‎ ‎N‎O‎V‎E‎M‎B‎E‎R‎ ‎1‎3‎:‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎B‎l‎a‎c‎k‎ ‎H‎e‎b‎r‎e‎w‎ ‎I‎s‎r‎a‎e‎l‎i‎t‎e‎s‎ ‎d‎e‎m‎o‎n‎s‎t‎r‎a‎t‎e‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎ ‎C‎a‎p‎i‎t‎o‎l‎ ‎o‎n‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎1‎3‎,‎ ‎2‎0‎1‎8‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎C‎.‎ ‎T‎h‎e‎ ‎g‎r‎o‎u‎p‎ ‎i‎s‎ ‎c‎o‎m‎p‎r‎i‎s‎e‎d‎ ‎o‎f‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎w‎h‎o‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎d‎e‎s‎c‎e‎n‎d‎a‎n‎t‎s‎ ‎o‎f‎ ‎a‎n‎c‎i‎e‎n‎t‎ ‎I‎s‎r‎a‎e‎l‎i‎t‎e‎s‎,‎ ‎a‎n‎d‎ ‎a‎ ‎m‎i‎l‎i‎t‎a‎n‎t‎ ‎w‎i‎n‎g‎ ‎o‎f‎ ‎t‎h‎e‎ ‎g‎r‎o‎u‎p‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎…‎
A‎n‎ ‎I‎n‎d‎i‎a‎n‎a‎ ‎w‎o‎m‎a‎n‎ ‎w‎a‎s‎ ‎a‎r‎r‎e‎s‎t‎e‎d‎ ‎F‎r‎i‎d‎a‎y‎ ‎n‎i‎g‎h‎t‎ ‎a‎f‎t‎e‎r‎ ‎b‎a‎c‎k‎i‎n‎g‎ ‎h‎e‎r‎ ‎c‎a‎r‎ ‎i‎n‎t‎o‎ ‎a‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎u‎s‎e‎d‎ ‎b‎y‎ ‎a‎ ‎B‎l‎a‎c‎k‎ ‎H‎e‎b‎r‎e‎w‎ ‎I‎s‎r‎a‎e‎l‎i‎t‎e‎ ‎h‎a‎t‎e‎ ‎g‎r‎o‎u‎p‎,‎ ‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎s‎h‎e‎ ‎w‎a‎s‎ ‎a‎t‎t‎a‎c‎k‎i‎n‎g‎ ‎a‎ ‎J‎e‎w‎i‎s‎h‎ ‎s‎c‎h‎o‎o‎l‎ ‎o‎n‎ ‎b‎e‎h‎a‎l‎f‎ ‎o‎f‎ ‎“‎h‎e‎r‎ ‎p‎e‎o‎p‎l‎e‎ ‎b‎a‎c‎k‎ ‎i‎n‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎e‎.‎”‎

7‎t‎h‎ ‎C‎i‎r‎c‎u‎i‎t‎:‎ ‎A‎R‎-‎1‎5‎s‎ ‎N‎o‎t‎ ‎P‎r‎o‎t‎e‎c‎t‎e‎d‎ ‎b‎y‎ ‎S‎e‎c‎o‎n‎d‎ ‎A‎m‎e‎n‎d‎m‎e‎n‎t‎
2‎,‎7‎1‎0‎
Z‎e‎l‎e‎n‎s‎k‎y‎:‎ ‎I‎ ‎W‎i‎l‎l‎ ‎N‎e‎e‎d‎ ‎2‎4‎ ‎M‎i‎n‎u‎t‎e‎s‎ ‎t‎o‎ ‎E‎x‎p‎l‎a‎i‎n‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎ ‎H‎e‎ ‎C‎a‎n‎'‎t‎ ‎M‎a‎n‎a‎g‎e‎ ‎P‎u‎t‎i‎n‎
Z‎e‎l‎e‎n‎s‎k‎y‎:‎ ‎I‎ ‎W‎i‎l‎l‎ ‎N‎e‎e‎d‎ ‎2‎4‎ ‎M‎i‎n‎u‎t‎e‎s‎ ‎t‎o‎ ‎E‎x‎p‎l‎a‎i‎n‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎ ‎H‎e‎ ‎C‎a‎n‎'‎t‎ ‎M‎a‎n‎a‎g‎e‎ ‎P‎u‎t‎i‎n‎
2‎,‎8‎4‎9‎
C‎r‎o‎w‎d‎ ‎B‎o‎o‎s‎ ‎A‎s‎a‎ ‎H‎u‎t‎c‎h‎i‎n‎s‎o‎n‎ ‎f‎o‎r‎ ‎S‎u‎g‎g‎e‎s‎t‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎ ‎F‎e‎l‎o‎n‎y‎ ‎C‎o‎n‎v‎i‎c‎t‎i‎o‎n‎
C‎r‎o‎w‎d‎ ‎B‎o‎o‎s‎ ‎A‎s‎a‎ ‎H‎u‎t‎c‎h‎i‎n‎s‎o‎n‎ ‎f‎o‎r‎ ‎S‎u‎g‎g‎e‎s‎t‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎ ‎F‎e‎l‎o‎n‎y‎ ‎C‎o‎n‎v‎i‎c‎t‎i‎o‎n‎
1‎,‎0‎3‎2‎
W‎o‎m‎a‎n‎ ‎T‎r‎i‎e‎s‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎c‎ ‎A‎t‎t‎a‎c‎k‎;‎ ‎C‎r‎a‎s‎h‎e‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎B‎l‎a‎c‎k‎ ‎H‎e‎b‎r‎e‎w‎ ‎I‎s‎r‎a‎e‎l‎i‎t‎e‎s‎
W‎o‎m‎a‎n‎ ‎T‎r‎i‎e‎s‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎c‎ ‎A‎t‎t‎a‎c‎k‎;‎ ‎C‎r‎a‎s‎h‎e‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎B‎l‎a‎c‎k‎ ‎H‎e‎b‎r‎e‎w‎ ‎I‎s‎r‎a‎e‎l‎i‎t‎e‎s‎
8‎9‎9‎
T‎h‎e‎ ‎A‎s‎s‎o‎c‎i‎a‎t‎e‎d‎ ‎P‎r‎e‎s‎s‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎P‎e‎t‎e‎r‎ ‎M‎e‎i‎j‎e‎r‎,‎ ‎w‎h‎o‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎d‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎i‎m‎p‎e‎a‎c‎h‎m‎e‎n‎t‎,‎ ‎e‎n‎t‎e‎r‎s‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎’‎s‎ ‎U‎S‎ ‎S‎e‎n‎a‎t‎e‎ ‎r‎a‎c‎e‎
1‎5‎3‎
'‎K‎i‎l‎l‎ ‎t‎h‎e‎ ‎B‎a‎b‎i‎e‎s‎!‎'‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎H‎e‎c‎k‎l‎e‎r‎s‎ ‎T‎a‎u‎n‎t‎ ‎J‎e‎w‎s‎ ‎a‎t‎ ‎S‎t‎r‎o‎l‎l‎e‎r‎ ‎P‎r‎o‎t‎e‎s‎t‎
'‎K‎i‎l‎l‎ ‎t‎h‎e‎ ‎B‎a‎b‎i‎e‎s‎!‎'‎ ‎A‎n‎t‎i‎-‎I‎s‎r‎a‎e‎l‎ ‎H‎e‎c‎k‎l‎e‎r‎s‎ ‎T‎a‎u‎n‎t‎ ‎J‎e‎w‎s‎ ‎a‎t‎ ‎S‎t‎r‎o‎l‎l‎e‎r‎ ‎P‎r‎o‎t‎e‎s‎t‎
2‎,‎4‎3‎8‎
O‎b‎a‎m‎a‎:‎ ‎'‎A‎l‎l‎ ‎o‎f‎ ‎U‎s‎ ‎A‎r‎e‎ ‎C‎o‎m‎p‎l‎i‎c‎i‎t‎ ‎t‎o‎ ‎S‎o‎m‎e‎ ‎D‎e‎g‎r‎e‎e‎'‎ ‎i‎n‎ ‎G‎a‎z‎a‎ ‎W‎a‎r‎
O‎b‎a‎m‎a‎:‎ ‎'‎A‎l‎l‎ ‎o‎f‎ ‎U‎s‎ ‎A‎r‎e‎ ‎C‎o‎m‎p‎l‎i‎c‎i‎t‎ ‎t‎o‎ ‎S‎o‎m‎e‎ ‎D‎e‎g‎r‎e‎e‎'‎ ‎i‎n‎ ‎G‎a‎z‎a‎ ‎W‎a‎r‎
4‎,‎9‎4‎4‎
S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎ ‎M‎c‎D‎o‎n‎a‎l‎d‎'‎s‎ ‎S‎h‎u‎t‎s‎ ‎D‎o‎w‎n‎ ‎A‎f‎t‎e‎r‎ ‎3‎0‎ ‎Y‎e‎a‎r‎s‎ ‎a‎m‎i‎d‎ ‎C‎i‎t‎y‎'‎s‎ ‎D‎e‎c‎l‎i‎n‎e‎
S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎ ‎M‎c‎D‎o‎n‎a‎l‎d‎'‎s‎ ‎S‎h‎u‎t‎s‎ ‎D‎o‎w‎n‎ ‎A‎f‎t‎e‎r‎ ‎3‎0‎ ‎Y‎e‎a‎r‎s‎ ‎a‎m‎i‎d‎ ‎C‎i‎t‎y‎'‎s‎ ‎D‎e‎c‎l‎i‎n‎e‎
6‎3‎3‎
B‎o‎n‎f‎i‎r‎e‎ ‎N‎i‎g‎h‎t‎:‎ ‎Y‎o‎u‎t‎h‎s‎ ‎A‎t‎t‎a‎c‎k‎ ‎P‎o‎l‎i‎c‎e‎ ‎w‎i‎t‎h‎ ‎P‎e‎t‎r‎o‎l‎ ‎B‎o‎m‎b‎s‎ ‎i‎n‎ ‎E‎d‎i‎n‎b‎u‎r‎g‎h‎
B‎o‎n‎f‎i‎r‎e‎ ‎N‎i‎g‎h‎t‎:‎ ‎Y‎o‎u‎t‎h‎s‎ ‎A‎t‎t‎a‎c‎k‎ ‎P‎o‎l‎i‎c‎e‎ ‎w‎i‎t‎h‎ ‎P‎e‎t‎r‎o‎l‎ ‎B‎o‎m‎b‎s‎ ‎i‎n‎ ‎E‎d‎i‎n‎b‎u‎r‎g‎h‎

N‎e‎g‎r‎o‎i‎d‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎T‎u‎r‎n‎p‎i‎k‎e‎ ‎S‎h‎o‎o‎t‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎.‎

N‎o‎ ‎m‎o‎r‎e‎ ‎s‎h‎o‎o‎t‎y‎ ‎t‎i‎m‎e‎,‎ ‎m‎o‎n‎k‎e‎y‎.‎


2‎ ‎N‎i‎g‎s‎ ‎a‎n‎d‎ ‎a‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎M‎a‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎i‎n‎ ‎S‎t‎o‎w‎e‎ ‎T‎o‎w‎n‎s‎h‎i‎p‎.‎


R‎i‎k‎e‎r‎s‎ ‎C‎o‎r‎r‎e‎c‎t‎i‎o‎n‎ ‎C‎a‎p‎t‎a‎i‎n‎ ‎A‎t‎t‎a‎c‎k‎e‎d‎ ‎b‎y‎ ‎P‎a‎v‎e‎m‎e‎n‎t‎ ‎A‎p‎e‎.‎


V‎i‎d‎e‎o‎ ‎R‎e‎l‎e‎a‎s‎e‎d‎ ‎o‎f‎ ‎T‎e‎x‎a‎r‎k‎a‎n‎a‎ ‎N‎i‎g‎g‎a‎r‎d‎ ‎B‎e‎a‎t‎i‎n‎g‎ ‎P‎u‎p‎p‎y‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎5‎°‎
2‎%‎
S‎S‎W‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎6‎ ‎|‎ ‎D‎a‎y‎
8‎3‎°‎
2‎%‎
S‎S‎W‎
1‎4‎
 ‎
m‎p‎h‎
A‎r‎e‎a‎s‎ ‎o‎f‎ ‎d‎e‎n‎s‎e‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎f‎o‎g‎.‎ ‎M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎H‎i‎g‎h‎ ‎8‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎4‎7‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎9‎ ‎p‎m‎
M‎o‎n‎ ‎0‎6‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎5‎°‎
9‎%‎
S‎
9‎
 ‎
m‎p‎h‎
S‎o‎m‎e‎ ‎c‎l‎o‎u‎d‎s‎.‎ ‎L‎o‎w‎ ‎n‎e‎a‎r‎ ‎6‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎2‎:‎3‎6‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
2‎:‎1‎8‎ ‎p‎m‎
T‎u‎e‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎6‎°‎
/‎6‎6‎°‎
8‎%‎
S‎S‎W‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎7‎°‎
1‎3‎%‎
S‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎9‎
T‎h‎u‎n‎d‎e‎r‎s‎h‎o‎w‎e‎r‎s‎
7‎7‎°‎
/‎5‎4‎°‎
6‎2‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎0‎
A‎M‎ ‎R‎a‎i‎n‎
6‎0‎°‎
/‎5‎2‎°‎
8‎1‎%‎
N‎ ‎1‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎1‎
C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎5‎1‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎2‎
C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎5‎0‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎3‎
C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎9‎°‎
1‎7‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎4‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎5‎0‎°‎
2‎0‎%‎
N‎E‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎5‎7‎°‎
1‎5‎%‎
S‎S‎E‎ ‎7‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎6‎1‎°‎
1‎6‎%‎
S‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎7‎
S‎h‎o‎w‎e‎r‎s‎
7‎4‎°‎
/‎6‎0‎°‎
3‎9‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎8‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎3‎°‎
/‎5‎6‎°‎
3‎3‎%‎
S‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎9‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎9‎°‎
/‎5‎1‎°‎
4‎2‎%‎
N‎W‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎8‎°‎
/‎5‎0‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎p‎i‎c‎s‎.‎ ‎👲🏾

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

M‎c‎D‎o‎n‎a‎l‎d‎s‎
M‎c‎D‎o‎n‎a‎l‎d‎'‎s‎ ‎i‎s‎ ‎a‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎'‎s‎ ‎f‎a‎s‎t‎ ‎f‎o‎o‎d‎ ‎r‎e‎s‎t‎a‎u‎r‎a‎n‎t‎ ‎w‎h‎e‎r‎e‎ ‎p‎o‎o‎r‎ ‎p‎e‎o‎p‎l‎e‎ ‎g‎o‎ ‎t‎o‎ ‎e‎a‎t‎ ‎c‎h‎e‎a‎p‎,‎ ‎p‎r‎o‎c‎e‎s‎s‎e‎d‎,‎ ‎g‎r‎e‎a‎s‎y‎ ‎f‎o‎o‎d‎ ‎f‎o‎r‎ ‎l‎e‎s‎s‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎t‎h‎e‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎ ‎s‎y‎m‎b‎o‎l‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎g‎l‎u‎t‎t‎o‎n‎y‎.‎ ‎M‎c‎D‎o‎n‎a‎l‎d‎'‎s‎ ‎h‎a‎s‎ ‎e‎s‎t‎a‎b‎l‎i‎s‎h‎e‎d‎ ‎m‎a‎n‎y‎ ‎c‎e‎l‎l‎s‎ ‎(‎c‎a‎l‎l‎e‎d‎ ‎f‎r‎a‎n‎c‎h‎i‎s‎e‎s‎)‎ ‎i‎n‎ ‎c‎o‎u‎n‎t‎r‎i‎e‎s‎ ‎a‎l‎l‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎,‎ ‎w‎h‎e‎r‎e‎ ‎t‎h‎e‎y‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎k‎i‎l‎l‎ ‎i‎n‎n‎o‎c‎e‎n‎t‎ ‎C‎h‎i‎n‎e‎s‎e‎ ‎k‎i‎d‎s‎ ‎w‎i‎t‎h‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎p‎o‎i‎s‎o‎n‎,‎ ‎a‎t‎ ‎w‎h‎i‎c‎h‎ ‎t‎i‎m‎e‎ ‎t‎h‎e‎ ‎b‎l‎o‎a‎t‎e‎d‎ ‎y‎e‎l‎l‎o‎w‎ ‎c‎a‎r‎c‎a‎s‎s‎e‎s‎ ‎a‎r‎e‎ ‎s‎t‎r‎i‎p‎p‎e‎d‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎d‎e‎l‎i‎c‎i‎o‎u‎s‎ ‎m‎e‎a‎t‎ ‎a‎n‎d‎ ‎s‎o‎l‎d‎ ‎b‎a‎c‎k‎ ‎i‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎a‎s‎ ‎H‎a‎p‎p‎y‎ ‎M‎e‎a‎l‎s‎.‎

I‎t‎ ‎s‎h‎o‎u‎l‎d‎ ‎a‎l‎s‎o‎ ‎b‎e‎ ‎n‎o‎t‎e‎d‎ ‎t‎h‎a‎t‎ ‎U‎N‎D‎E‎R‎ ‎N‎O‎ ‎C‎I‎R‎C‎U‎M‎S‎T‎A‎N‎C‎E‎S‎ ‎s‎h‎o‎u‎l‎d‎ ‎y‎o‎u‎ ‎t‎a‎k‎e‎ ‎a‎ ‎g‎i‎r‎l‎ ‎t‎o‎ ‎M‎c‎D‎o‎n‎a‎l‎d‎'‎s‎ ‎f‎o‎r‎ ‎a‎ ‎f‎i‎r‎s‎t‎ ‎d‎a‎t‎e‎,‎ ‎y‎o‎u‎ ‎J‎e‎w‎.‎

I‎n‎ ‎l‎i‎g‎h‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎r‎e‎c‎e‎n‎t‎ ‎P‎i‎g‎k‎r‎a‎i‎n‎e‎ ‎i‎n‎v‎a‎s‎i‎o‎n‎,‎ ‎M‎i‎c‎k‎e‎y‎ ‎D‎'‎s‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎o‎t‎h‎e‎r‎ ‎f‎o‎o‎d‎ ‎c‎o‎m‎p‎a‎n‎i‎e‎s‎ ‎t‎h‎a‎t‎ ‎s‎l‎o‎w‎l‎y‎ ‎k‎i‎l‎l‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎u‎n‎t‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎ ‎o‎n‎ ‎a‎ ‎d‎a‎i‎l‎y‎ ‎b‎a‎s‎i‎s‎,‎ ‎h‎a‎s‎ ‎p‎u‎l‎l‎e‎d‎ ‎b‎u‎s‎i‎n‎e‎s‎s‎ ‎f‎r‎o‎m‎ ‎R‎u‎s‎s‎i‎a‎ ‎t‎o‎ ‎p‎w‎n‎ ‎B‎i‎g‎ ‎B‎a‎d‎ ‎V‎l‎a‎d‎.‎


(‎(‎ ‎A‎ ‎H‎e‎a‎r‎t‎ ‎A‎t‎t‎a‎c‎k‎ ‎I‎n‎ ‎E‎v‎e‎r‎y‎ ‎B‎a‎g‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

G‎e‎o‎r‎g‎i‎a‎n‎s‎ ‎a‎r‎e‎ ‎a‎n‎ ‎e‎t‎h‎n‎i‎c‎ ‎g‎r‎o‎u‎p‎ ‎n‎a‎t‎i‎v‎e‎ ‎t‎o‎ ‎G‎e‎o‎r‎g‎i‎a‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎C‎a‎u‎c‎a‎s‎u‎s‎,‎ ‎w‎i‎t‎h‎ ‎d‎i‎a‎s‎p‎o‎r‎a‎ ‎c‎o‎m‎m‎u‎n‎i‎t‎i‎e‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎R‎u‎s‎s‎i‎a‎,‎ ‎T‎u‎r‎k‎e‎y‎,‎ ‎G‎r‎e‎e‎c‎e‎,‎ ‎I‎r‎a‎n‎,‎ ‎U‎k‎r‎a‎i‎n‎e‎,‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎U‎n‎i‎o‎n‎.‎ ‎G‎e‎o‎r‎g‎i‎a‎n‎s‎ ‎a‎r‎o‎s‎e‎ ‎f‎r‎o‎m‎ ‎C‎o‎l‎c‎h‎i‎a‎n‎ ‎a‎n‎d‎ ‎I‎b‎e‎r‎i‎a‎n‎ ‎c‎i‎v‎i‎l‎i‎z‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎c‎l‎a‎s‎s‎i‎c‎a‎l‎ ‎a‎n‎t‎i‎q‎u‎i‎t‎y‎.‎ ‎I‎n‎ ‎t‎h‎e‎ ‎e‎a‎r‎l‎y‎ ‎4‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎,‎ ‎t‎h‎e‎ ‎G‎e‎o‎r‎g‎i‎a‎n‎s‎ ‎b‎e‎c‎a‎m‎e‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎t‎o‎ ‎e‎m‎b‎r‎a‎c‎e‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎i‎t‎y‎ ‎a‎n‎d‎ ‎n‎o‎w‎ ‎t‎h‎e‎ ‎m‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎G‎e‎o‎r‎g‎i‎a‎n‎s‎ ‎a‎r‎e‎ ‎O‎r‎t‎h‎o‎d‎o‎x‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎.‎ ‎T‎h‎e‎ ‎G‎e‎o‎r‎g‎i‎a‎n‎ ‎n‎a‎t‎i‎o‎n‎ ‎w‎a‎s‎ ‎f‎o‎r‎m‎e‎d‎ ‎o‎u‎t‎ ‎o‎f‎ ‎a‎ ‎d‎i‎v‎e‎r‎s‎e‎ ‎s‎e‎t‎ ‎o‎f‎ ‎g‎e‎o‎g‎r‎a‎p‎h‎i‎c‎ ‎s‎u‎b‎g‎r‎o‎u‎p‎s‎,‎ ‎e‎a‎c‎h‎ ‎w‎i‎t‎h‎ ‎i‎t‎s‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎i‎s‎t‎i‎c‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎s‎,‎ ‎m‎a‎n‎n‎e‎r‎s‎,‎ ‎d‎i‎a‎l‎e‎c‎t‎s‎ ‎a‎n‎d‎,‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎a‎s‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎S‎v‎a‎n‎s‎ ‎a‎n‎d‎ ‎M‎i‎n‎g‎r‎e‎l‎i‎a‎n‎s‎,‎ ‎r‎e‎g‎i‎o‎n‎a‎l‎ ‎l‎a‎n‎g‎u‎a‎g‎e‎s‎.‎ ‎T‎h‎e‎ ‎G‎e‎o‎r‎g‎i‎a‎n‎ ‎l‎a‎n‎g‎u‎a‎g‎e‎,‎ ‎w‎i‎t‎h‎ ‎i‎t‎s‎ ‎o‎w‎n‎ ‎u‎n‎i‎q‎u‎e‎ ‎w‎r‎i‎t‎i‎n‎g‎ ‎s‎y‎s‎t‎e‎m‎ ‎a‎n‎d‎ ‎e‎x‎t‎e‎n‎s‎i‎v‎e‎ ‎w‎r‎i‎t‎t‎e‎n‎ ‎t‎r‎a‎d‎i‎t‎i‎o‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎g‎o‎e‎s‎ ‎b‎a‎c‎k‎ ‎t‎o‎ ‎t‎h‎e‎ ‎5‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎,‎ ‎i‎s‎ ‎t‎h‎e‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎ ‎l‎a‎n‎g‎u‎a‎g‎e‎ ‎o‎f‎ ‎G‎e‎o‎r‎g‎i‎a‎.‎ ‎A‎c‎c‎o‎r‎d‎i‎n‎g‎ ‎t‎o‎ ‎t‎h‎e‎ ‎S‎t‎a‎t‎e‎ ‎M‎i‎n‎i‎s‎t‎r‎y‎ ‎o‎n‎ ‎D‎i‎a‎s‎p‎o‎r‎a‎ ‎I‎s‎s‎u‎e‎s‎ ‎o‎f‎ ‎G‎e‎o‎r‎g‎i‎a‎,‎ ‎u‎n‎o‎f‎f‎i‎c‎i‎a‎l‎ ‎s‎t‎a‎t‎i‎s‎t‎i‎c‎s‎ ‎s‎a‎y‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎m‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎f‎i‎v‎e‎ ‎m‎i‎l‎l‎i‎o‎n‎ ‎G‎e‎o‎r‎g‎i‎a‎n‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎,‎ ‎t‎a‎k‎e‎n‎ ‎a‎r‎o‎u‎n‎d‎ ‎1‎8‎8‎8‎ ‎i‎n‎ ‎M‎e‎s‎t‎i‎a‎,‎ ‎s‎h‎o‎w‎s‎ ‎a‎n‎ ‎e‎l‎d‎e‎r‎l‎y‎ ‎S‎v‎a‎n‎ ‎p‎e‎a‎s‎a‎n‎t‎ ‎w‎i‎t‎h‎ ‎a‎ ‎d‎a‎g‎g‎e‎r‎ ‎a‎n‎d‎ ‎s‎m‎o‎k‎i‎n‎g‎ ‎a‎ ‎l‎o‎n‎g‎ ‎p‎i‎p‎e‎.‎ ‎T‎h‎e‎ ‎i‎m‎a‎g‎e‎ ‎i‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎o‎l‎l‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎L‎i‎b‎r‎a‎r‎y‎ ‎o‎f‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎u‎n‎k‎n‎o‎w‎n‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎p‎u‎t‎ ‎s‎o‎m‎e‎ ‎r‎o‎c‎k‎s‎ ‎o‎n‎ ‎a‎ ‎t‎r‎a‎i‎n‎ ‎t‎r‎a‎c‎k‎.‎"
E9RNmkZF,Get Active Network Routes,guyrleech,PowerShell,Monday 6th of November 2023 08:27:39 AM CDT,"## Get ""up"" network interfaces so can cross reference to network routes
$upInterfaces = @( Get-NetAdapter -IncludeHidden | Where Status -ieq 'Up' )

Get-NetRoute -InterfaceIndex $upInterfaces.ifIndex -ErrorAction SilentlyContinue|select @{n='Interface';e={$script:if = ($upInterfaces|Where-Object ifIndex -eq $_.ifIndex);$script:if.Name}},@{n='Description';e={$script:if.InterfaceDescription}},DestinationPrefix,NextHop,InterfaceMetric,RouteMetric,State|sort-object -property interface,DestinationPrefix|format-table -auto           "
6QQFCuQ5,zad5.cpp,pan7nikt,C++,Monday 6th of November 2023 07:58:41 AM CDT,"#include <iostream>
#include <cmath>

#define nstudent 100

using namespace std;

int main()
{
    int student[nstudent];
    int arraySize = sizeof(student) / sizeof(int);
    int total = 0;
    float avg = 0;
    cout << ""arraySize: "" << arraySize << ""\n"";

    for(int i=0; i<arraySize; i++)
        {
            srand(time(NULL) + i);
            student[i] = rand() % 11;
            //cout << i << ""\n"";
            cout << student[i] << ""\n"";
        }

    for(int i=0; i<arraySize; i++)
        {
            total += student[i];
        }
        cout << ""\ntotal: "" << total << ""\n"";

        avg = (float)total / (float)arraySize;

        cout << ""\navg: "" << avg << ""\n"";

    //Sort
    for(int i=0; i<arraySize; i++)
        {
            int m = student[i];
            int id = 0;
            for(int j=i+1; j<arraySize; j++)
                {
                    if(student[j]>m){m=student[j]; id = j;}
                }
            cout << ""iteration "" << i << "" switching "" << student[i] << "" for "" << student[id] << ""\n"";
            cout << ""student[0]: "" << student[0] << ""\n"";
            student[id] = student[i];
            student[i] = m;


        }

        for(int i=0; i<arraySize; i++)
            {
                cout << i << "". "" << student[i] << ""\n"";
            }
}
"
Y5VLcKHV,Warning: Permanently added '54.91.145.36' (ED25519) to the list of known hosts.  You can reproduce t,TWeiss,Bash,Monday 6th of November 2023 07:55:33 AM CDT,"Warning: Permanently added '54.91.145.36' (ED25519) to the list of known hosts.

You can reproduce this build on your computer by running:

  sudo dnf install copr-rpmbuild
  /usr/bin/copr-rpmbuild --verbose --drop-resultdir --task-url https://copr.fedorainfracloud.org/backend/get-build-task/6603075-openmandriva-cooker-aarch64 --chroot openmandriva-cooker-aarch64


Version: 0.69
PID: 6010
Logging PID: 6011
Task:
{'appstream': False,
 'background': False,
 'build_id': 6603075,
 'buildroot_pkgs': [],
 'chroot': 'openmandriva-cooker-aarch64',
 'enable_net': True,
 'fedora_review': False,
 'git_hash': 'df52ea192e7090c374b63ff0f07da283848878dc',
 'git_repo': 'https://copr-dist-git.fedorainfracloud.org/git/victoriametrics/VictoriaMetrics-LTS/vmsingle',
 'isolation': 'default',
 'memory_reqs': 2048,
 'package_name': 'vmsingle',
 'package_version': '1.93.7-1',
 'project_dirname': 'VictoriaMetrics-LTS',
 'project_name': 'VictoriaMetrics-LTS',
 'project_owner': 'victoriametrics',
 'repo_priority': None,
 'repos': [{'baseurl': 'https://download.copr.fedorainfracloud.org/results/victoriametrics/VictoriaMetrics-LTS/openmandriva-cooker-aarch64/',
            'id': 'copr_base',
            'name': 'Copr repository',
            'priority': None}],
 'sandbox': 'victoriametrics/VictoriaMetrics-LTS--victoriametrics',
 'source_json': {},
 'source_type': None,
 'submitter': 'victoriametrics',
 'tags': [],
 'task_id': '6603075-openmandriva-cooker-aarch64',
 'timeout': 18000,
 'uses_devel_repo': False,
 'with_opts': [],
 'without_opts': []}

Running: git clone https://copr-dist-git.fedorainfracloud.org/git/victoriametrics/VictoriaMetrics-LTS/vmsingle /var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle --depth 500 --no-single-branch --recursive

cmd: ['git', 'clone', 'https://copr-dist-git.fedorainfracloud.org/git/victoriametrics/VictoriaMetrics-LTS/vmsingle', '/var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle', '--depth', '500', '--no-single-branch', '--recursive']
cwd: .
rc: 0
stdout: 
stderr: Cloning into '/var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle'...

Running: git checkout df52ea192e7090c374b63ff0f07da283848878dc --

cmd: ['git', 'checkout', 'df52ea192e7090c374b63ff0f07da283848878dc', '--']
cwd: /var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle
rc: 0
stdout: 
stderr: Note: switching to 'df52ea192e7090c374b63ff0f07da283848878dc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at df52ea1 automatic import of vmsingle

Running: copr-distgit-client sources

cmd: ['copr-distgit-client', 'sources']
cwd: /var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle
rc: 0
stdout: 
stderr: INFO: Reading stdout from command: git rev-parse --abbrev-ref HEAD
INFO: Reading stdout from command: git rev-parse HEAD
INFO: Reading sources specification file: sources

/usr/bin/tail: /var/lib/copr-rpmbuild/main.log: file truncated
Running (timeout=18000): unbuffer mock --spec /var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle/vmsingle.spec --sources /var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle --resultdir /var/lib/copr-rpmbuild/results --uniqueext 1699278292.644934 -r /var/lib/copr-rpmbuild/results/configs/child.cfg
INFO: mock.py version 5.2 starting (python version = 3.11.3, NVR = mock-5.2-1.fc38), args: /usr/libexec/mock/mock --spec /var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle/vmsingle.spec --sources /var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle --resultdir /var/lib/copr-rpmbuild/results --uniqueext 1699278292.644934 -r /var/lib/copr-rpmbuild/results/configs/child.cfg
Start(bootstrap): init plugins
INFO: tmpfs initialized
INFO: selinux enabled
INFO: chroot_scan: initialized
INFO: compress_logs: initialized
Finish(bootstrap): init plugins
Start: init plugins
INFO: tmpfs initialized
INFO: selinux enabled
INFO: chroot_scan: initialized
INFO: compress_logs: initialized
Finish: init plugins
INFO: Signal handler active
Start: run
INFO: Start(/var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle/vmsingle.spec)  Config(openmandriva-cooker-aarch64)
Start: clean chroot
Finish: clean chroot
Mock Version: 5.2
INFO: Mock Version: 5.2
Start(bootstrap): chroot init
INFO: mounting tmpfs at /var/lib/mock/openmandriva-cooker-aarch64-bootstrap-1699278292.644934/root.
INFO: calling preinit hooks
INFO: enabled root cache
INFO: enabled package manager cache
Start(bootstrap): cleaning package manager metadata
Finish(bootstrap): cleaning package manager metadata
INFO: Guessed host environment type: unknown
INFO: Using bootstrap image: docker.io/openmandriva/cooker:latest
INFO: Pulling image: docker.io/openmandriva/cooker:latest
INFO: Copy content of container docker.io/openmandriva/cooker:latest to /var/lib/mock/openmandriva-cooker-aarch64-bootstrap-1699278292.644934/root
INFO: Checking that docker.io/openmandriva/cooker:latest image matches host's architecture
INFO: mounting docker.io/openmandriva/cooker:latest with podman image mount
INFO: image docker.io/openmandriva/cooker:latest as /var/lib/containers/storage/overlay/ed2c7d00aabd2e71d1dc9590e99b962b9483336bdbd19bc931fde2b530ac188b/merged
INFO: umounting image docker.io/openmandriva/cooker:latest (/var/lib/containers/storage/overlay/ed2c7d00aabd2e71d1dc9590e99b962b9483336bdbd19bc931fde2b530ac188b/merged) with podman image umount
INFO: Package manager dnf detected and used (fallback)
INFO: Bootstrap image not marked ready
Start(bootstrap): installing dnf tooling
No matches found for the following disable plugin patterns: local, spacewalk, versionlock
Copr repository                                 116 kB/s | 5.1 kB     00:00    
determining the fastest mirror (17 hosts).. done.
OpenMandriva Cooker - aarch64                   5.7 MB/s |  19 MB     00:03    
No match for argument: python3-dnf
No match for argument: python3-dnf-plugins-core
Error: Unable to find a match: python3-dnf python3-dnf-plugins-core
WARNING: DNF command failed, retrying, attempt #2, sleeping 10s
No matches found for the following disable plugin patterns: local, spacewalk, versionlock
Copr repository                                  89 kB/s | 1.8 kB     00:00    
OpenMandriva Cooker - aarch64                   8.4 kB/s | 2.4 kB     00:00    
No match for argument: python3-dnf
No match for argument: python3-dnf-plugins-core
Error: Unable to find a match: python3-dnf python3-dnf-plugins-core
WARNING: DNF command failed, retrying, attempt #3, sleeping 10s
No matches found for the following disable plugin patterns: local, spacewalk, versionlock
Copr repository                                  92 kB/s | 1.8 kB     00:00    
OpenMandriva Cooker - aarch64                   7.4 kB/s | 2.4 kB     00:00    
No match for argument: python3-dnf
No match for argument: python3-dnf-plugins-core
Error: Unable to find a match: python3-dnf python3-dnf-plugins-core
ERROR: Exception(/var/lib/copr-rpmbuild/workspace/workdir-177zaiqk/vmsingle/vmsingle.spec) Config(openmandriva-cooker-aarch64) 0 minutes 41 seconds
INFO: Results and/or logs in: /var/lib/copr-rpmbuild/results
INFO: Cleaning up build root ('cleanup_on_failure=True')
Start: clean chroot
Finish: clean chroot
ERROR: Command failed: 
 # /usr/bin/systemd-nspawn -q -M 6bf08cd936f94ba4871b31aff08d4cea -D /var/lib/mock/openmandriva-cooker-aarch64-bootstrap-1699278292.644934/root -a --console=pipe --setenv=TERM=vt100 --setenv=SHELL=/bin/bash --setenv=HOME=/var/lib/mock/openmandriva-cooker-aarch64-bootstrap-1699278292.644934/root/installation-homedir --setenv=HOSTNAME=mock --setenv=PATH=/usr/bin:/bin:/usr/sbin:/sbin '--setenv=PROMPT_COMMAND=printf ""\033]0;<mock-chroot>\007""' '--setenv=PS1=<mock-chroot> \s-\v\$ ' --setenv=LANG=C.UTF-8 --setenv=LC_MESSAGES=C.UTF-8 --setenv=SYSTEMD_NSPAWN_TMPFS_TMP=0 --setenv=SYSTEMD_SECCOMP=0 --resolv-conf=off /usr/bin/dnf-3 --releasever 5.0 --setopt=deltarpm=False --setopt=allow_vendor_change=yes --allowerasing --disableplugin=local --disableplugin=spacewalk --disableplugin=versionlock install python3-dnf python3-dnf-plugins-core --setopt=tsflags=nocontexts --setopt=tsflags=nocontexts --setopt=tsflags=nocontexts
No matches found for the following disable plugin patterns: local, spacewalk, versionlock
Copr repository                                  92 kB/s | 1.8 kB     00:00    
OpenMandriva Cooker - aarch64                   7.4 kB/s | 2.4 kB     00:00    
No match for argument: python3-dnf
No match for argument: python3-dnf-plugins-core
Error: Unable to find a match: python3-dnf python3-dnf-plugins-core

Copr build error: Build failed
"
iRG1dBwy,upsampler_config,magneto903,JSON,Monday 6th of November 2023 07:51:16 AM CDT,"{
    ""decoder"": {
        ""unet_sources"": [
            {
                ""unet_numbers"": [1],
                ""default_cond_scale"": [1.7],
                ""load_model_from"": {
                    ""load_type"": ""url"",
                    ""path"": ""https://huggingface.co/laion/DALLE2-PyTorch/resolve/main/decoder/v1.0.2/latest.pth"",
                    ""cache_dir"": ""./models"",
                    ""filename_override"": ""new_decoder.pth""
                },
				""load_config_from"": {
                    ""load_type"": ""url"",
                    ""path"": ""https://huggingface.co/laion/DALLE2-PyTorch/resolve/main/decoder/v1.0.2/decoder_config.json"",
                    ""checksum_file_path"": ""https://huggingface.co/laion/DALLE2PyTorch/resolve/main/decoder/v1.0.2/decoder_config.json"",
                    ""cache_dir"": ""./models"",
                    ""filename_override"": ""new_decoder_config.json""
                }
            },
            {
                ""unet_numbers"": [2],
                ""load_model_from"": {
                    ""load_type"": ""url"",
                    ""path"": ""https://huggingface.co/Veldrovive/upsamplers/resolve/main/working/latest.pth"",
                    ""cache_dir"": ""./models"",
                    ""filename_override"": ""second_decoder.pth""
                },
                ""load_config_from"": {
                    ""load_type"": ""url"",
                    ""path"": ""https://huggingface.co/Veldrovive/upsamplers/raw/main/working/decoder_config.json"",
                    ""checksum_file_path"":  ""https://huggingface.co/Veldrovive/upsamplers/raw/main/working/decoder_config.json"",
                    ""cache_dir"": ""./models"",
                    ""filename_override"": ""second_decoder_config.json""
                }
            }
        ]
    },
    ""prior"": {
        ""load_model_from"": {
            ""load_type"": ""url"",
            ""path"": ""https://huggingface.co/laion/DALLE2-PyTorch/resolve/main/prior/latest.pth"",
            ""cache_dir"": ""./models"",
            ""filename_override"": ""prior.pth""
        },
        ""load_config_from"": {
            ""load_type"": ""url"",
            ""path"": ""https://huggingface.co/laion/DALLE2-PyTorch/raw/main/prior/prior_config.json"",
            ""checksum_file_path"": ""https://huggingface.co/laion/DALLE2-PyTorch/raw/main/prior/prior_config.json"",
            ""cache_dir"": ""./models""
        }
    },
    ""clip"": {
        ""make"": ""openai"",
        ""model"": ""ViT-L/14""
    },

    ""devices"": ""cuda:0"",
    ""strict_loading"": false
}"
mFEMEYix,Shuffle array,VanoHa,JavaScript,Monday 6th of November 2023 07:36:03 AM CDT,"const shuffle = require('lodash').shuffle;

function shuffle(arr) {
    let ans = []
    count = arr.length
    for (let i = 0; i < count; i++) {
      let n = (Math.trunc(Math.random()*(arr.length - 0)))
      ans.push(arr[n])
      arr.splice(n, 1)
    }

    return ans
}
"
FpTaS69p,my_config,magneto903,JSON,Monday 6th of November 2023 07:31:28 AM CDT,"{
    ""decoder"": {  
        ""unet_sources"": [
            {
                ""unet_numbers"": [1],
                ""default_cond_scale"": [1.7],
                ""load_model_from"": {
                    ""load_type"": ""url"",
                    ""path"": ""https://huggingface.co/laion/DALLE2-PyTorch/resolve/main/decoder/v1.0.2/latest.pth"",
                    ""cache_dir"": ""./models"",
                    ""filename_override"": ""new_decoder.pth""
                },
                ""load_config_from"": {
                    ""load_type"": ""url"",
                    ""path"": ""https://huggingface.co/laion/DALLE2-PyTorch/raw/main/decoder/v1.0.2/decoder_config.json"",
                    ""cache_dir"": ""./models"",
                    ""filename_override"": ""decoder_config.json""
                }
            },
            {
                ""unet_numbers"": [2],
                ""load_model_from"": {
                    ""load_type"": ""url"",
                    ""path"": ""https://huggingface.co/Veldrovive/upsamplers/resolve/main/working/latest.pth"",
                    ""cache_dir"": ""./models"",
                    ""filename_override"": ""second_decoder.pth""
                },
                ""load_config_from"": {
                    ""load_type"": ""url"",
                    ""path"": ""https://huggingface.co/Veldrovive/upsamplers/raw/main/working/decoder_config.json"",
                    ""checksum_file_path"": ""https://huggingface.co/Veldrovive/upsamplers/raw/main/working/decoder_config.json"",
                    ""cache_dir"": ""./models"",
                    ""filename_override"": ""second_decoder_config.json""
                }
            }
        ]
    },
    ""prior"": {
        ""load_model_from"": {
            ""load_type"": ""url"",
            ""path"": ""https://huggingface.co/laion/DALLE2-PyTorch/resolve/main/prior/latest.pth"",
            ""cache_dir"": ""./models"",
            ""filename_override"": ""prior.pth""
        },
        ""load_config_from"": {
            ""load_type"": ""url"",
            ""path"": ""https://huggingface.co/laion/DALLE2-PyTorch/raw/main/prior/prior_config.json"",
            ""checksum_file_path"": ""https://huggingface.co/laion/DALLE2-PyTorch/raw/main/prior/prior_config.json"",
            ""cache_dir"": ""./models""
        }
    },
    ""clip"": {
        ""make"": ""openai"",
        ""model"": ""ViT-L/14""
    },

    ""devices"": ""cuda:0"",
    ""strict_loading"": false
}"
KXHEqaFu,Untitled,ItamarD,Lua,Monday 6th of November 2023 07:27:25 AM CDT,"math.randomseed(os.time())

local roundTime = 240
local lobbyTime = 30

local RunService = game:GetService(""RunService"")

local isInRound = game.ReplicatedStorage.IsInRound
local status = game.ReplicatedStorage.Status
local eventLabel = game.ReplicatedStorage.Event
local passiveLabel = game.ReplicatedStorage.Passive

local layersFolder = game.Workspace.Layers
local playing = game.ReplicatedStorage.Playing

local eventTime = 15
local passiveTime = 30

local passiveTimer = 0
local timer = 0

local events = {}
local passive = {}

events[1] = {
	name = ""Meteor Shower"", 
	f = function()
		local debounce = true
		task.spawn(function()			
			task.wait(eventTime)
			debounce = false
		end)
		while debounce do
			local spawns = game.Workspace.SkyEventSpawns:GetChildren()

			while task.wait(0.5) do
				if debounce == false or isInRound.Value == false then
					break
				end

				local randomPos = spawns[math.random(1, #spawns)]
				local meteorClone = game.ReplicatedStorage.Meteor:Clone()
				meteorClone.Parent = workspace
				meteorClone.PrimaryPart.Position = randomPos.Position
			end
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
				end
			end)
			
			task.wait()
		end
	end
}

events[2] = {
	name = ""Zombie Apocalypse"", 
	f = function()
		local debounce = true
		local zombies = game.ReplicatedStorage.Zombies:Clone()
		task.spawn(function()
			task.wait(eventTime)
			debounce = false
			zombies:Destroy()
		end)
		if debounce then
			zombies.Parent = workspace
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					zombies:Destroy()
				end
			end)
			
			task.wait()
		end
	end
}

events[3] = {
	name = ""Spinning Beam"", 
	f = function()
		local debounce = true
		local beam = game.ReplicatedStorage.Beam:Clone()
		task.spawn(function()
			task.wait(eventTime)
			debounce = false
			beam:Destroy()
		end)
		if debounce then
			beam.Parent = workspace
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					beam:Destroy()
				end
			end)
			
			task.wait()
		end
	end
}

events[4] = {
	name = ""Sword Battle"", 
	f = function()
		local debounce = true
		task.spawn(function()
			task.wait(eventTime)
			
			debounce = false
			for i, playerObject in pairs(playing:GetChildren()) do
				local player = playerObject.Value
				local sword = player.Backpack:FindFirstChild(""Sword"") or player.Character:FindFirstChild(""Sword"")
				sword:Destroy()
			end
		end)
		
		if debounce then
			for i, playerObject in pairs(playing:GetChildren()) do
				local player = playerObject.Value
				local sword = game.ReplicatedStorage.Sword:Clone()
				sword.Parent = player.Backpack
			end
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					
					for i, playerObject in pairs(playing:GetChildren()) do
						local player = playerObject.Value
						local sword = player.Backpack:FindFirstChild(""Sword"") or player.Character:FindFirstChild(""Sword"")
						sword:Destroy()
					end
				end
			end)
			
			task.wait()
		end
	end
}

events[5] = {
	name = ""Toxic Gas"", 
	f = function()
		local debounce = true
		task.spawn(function()
			task.wait(eventTime)
			debounce = false
			
			game.Workspace:WaitForChild(""Gas""):Destroy()
		end)
		if debounce then
			local gas = game.ReplicatedStorage.Gas:Clone()
			
			gas.Parent = game.Workspace
			gas.GasScript.Enabled = true
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false

					game.Workspace:WaitForChild(""Gas""):Destroy()
				end
			end)
			
			task.wait()
		end
	end
}

events[6] = {
	name = ""Laser Grid"", 
	f = function()
		local debounce = true
		local lasers = game.ReplicatedStorage.Lasers:Clone()
		task.spawn(function()
			task.wait(eventTime)
			debounce = false
			lasers:Destroy()
		end)
		if debounce then
			lasers.Parent = workspace

			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					lasers:Destroy()
				end
			end)

			task.wait()
		end
	end
}

--events[6] = {
--	name = ""Wildfire"", 
--	f = function()
--		local spawns = game.Workspace.GroundEventSpawns:GetChildren()
--		local debounce = true

--		task.spawn(function()
--			task.wait(eventTime)
--			debounce = false
--			for i, part in pairs(spawns) do
--				part.Transparency = 1
--				part.CanCollide = false
--			end
--		end)

--		while debounce do
--			while task.wait(math.random(0.5, 2)) do
--				if debounce == false or isInRound.Value == false then
--					break
--				end

--				local part = spawns[math.random(1, #spawns)]
--				part.Transparency = 0
--				part.CanCollide = true

--				part.Touched:Connect(function(hit)
--					if hit.Parent == ""Character"" then
--						local humanoid = hit:WaitForChild(""Humanoid"")
--						humanoid:TakeDamage(1)
--					end
--				end)
--			end
--			task.wait()
--		end
--	end
--}

--events[7] = {
--	name = ""Virus"", 
--	f = function()
--		local debounce = true
--		task.spawn(function()
--			task.wait(eventTime)
--			debounce = false
--		end)
--		while debounce do
--			local players = game.Players:GetChildren()

--			local randomPlayer = players[math.random(1, #players)]
--			local isInfected = randomPlayer:FindFirstChild(""isInfected"")
--			isInfected.Value = true 

--			task.wait()
--		end
--	end
--}

--events[8] = {
--	name = ""Giant Apocalypse"", 
--	f = function()
--		local debounce = true
--		local players = game.Players:GetChildren()
--		task.spawn(function()
--			task.wait(eventTime)
--			debounce = false
--			for i, player in pairs(players) do
--				local humanoid = player.Character:WaitForChild(""Humanoid"")
--				humanoid.HeadScale.Value /= 4
--				humanoid.BodyDepthScale.Value /= 4
--				humanoid.BodyWidthScale.Value /= 4
--				humanoid.BodyHeightScale.Value /= 4
--			end
--		end)
--		if debounce then
--			for i, player in pairs(players) do
--				local humanoid = player.Character:WaitForChild(""Humanoid"")
--				humanoid.HeadScale.Value *= 4
--				humanoid.BodyDepthScale.Value *= 4
--				humanoid.BodyWidthScale.Value *= 4
--				humanoid.BodyHeightScale.Value *= 4
--			end
--			task.wait()
--		end
--	end
--}

passive[1] = {
	name = ""Iced Floors"", 
	f = function()
		local debounce = true
		local ice = game.ReplicatedStorage.Ice:Clone()
		task.spawn(function()
			task.wait(passiveTime)
			debounce = false
			
			ice:Destroy()
			for i, playerObject in pairs(playing:GetChildren()) do
				local player = playerObject.Value
				player.Character:FindFirstChild(""Humanoid"").WalkSpeed = 16
			end
		end)

		if debounce then
			ice.Parent = workspace
			for i, playerObject in pairs(playing:GetChildren()) do
				local player = playerObject.Value
				player.Character:FindFirstChild(""Humanoid"").WalkSpeed = 30
			end
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					
					ice:Destroy()
					for i, playerObject in pairs(playing:GetChildren()) do
						local player = playerObject.Value
						player.Character:FindFirstChild(""Humanoid"").WalkSpeed = 16
					end
				end
			end)
			
			task.wait()
		end
	end
}

passive[2] = {
	name = ""Blackout"", 
	f = function()
		local debounce = true
		task.spawn(function()
			task.wait(passiveTime)
			debounce = false
			
			game.Lighting.Atmosphere.Density = 0.3
			game.Lighting.ClockTime = 12.5
			game.Lighting.Sky.StarCount = 3000
		end)

		if debounce then
			game.Lighting.Atmosphere.Density = 0.8
			game.Lighting.ClockTime = 0
			game.Lighting.Sky.StarCount = 0
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					
					game.Lighting.Atmosphere.Density = 0.3
					game.Lighting.ClockTime = 12.5
					game.Lighting.Sky.StarCount = 3000
				end
			end)
			
			task.wait()
		end
	end
}

passive[3] = {
	name = ""Low Gravity"", 
	f = function()
		local debounce = true
		task.spawn(function()
			task.wait(passiveTime)
			debounce = false
			
			game.Workspace.Gravity = 196.2
		end)

		if debounce then
			game.Workspace.Gravity = 32.4
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					
					game.Workspace.Gravity = 196.2
				end
			end)
			
			task.wait()
		end
	end
}

passive[4] = {
	name = ""High Gravity"", 
	f = function()
		local debounce = true
		task.spawn(function()
			task.wait(passiveTime)
			debounce = false

			game.Workspace.Gravity = 196.2
		end)

		if debounce then
			game.Workspace.Gravity = 350
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					
					game.Workspace.Gravity = 196.2
				end
			end)
			
			task.wait()
		end
	end
}

passive[5] = {
	name = ""No Healing"", 
	f = function()
		local debounce = true
		task.spawn(function()
			task.wait(passiveTime)
			debounce = false

			for i, playerObject in pairs(playing:GetChildren()) do
				local player = playerObject.Value
				local character = player.Character
				
				if character:FindFirstChild('Health') then
					character.Health.Enabled = true
				end
			end
		end)

		if debounce then
			for i, playerObject in pairs(playing:GetChildren()) do
				local player = playerObject.Value
				local character = player.Character

				if character:FindFirstChild('Health') then
					character.Health.Enabled = false
				end
			end
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					
					for i, playerObject in pairs(playing:GetChildren()) do
						local player = playerObject.Value
						local character = player.Character

						if character:FindFirstChild('Health') then
							character.Health.Enabled = true
						end
					end
				end
			end)
			
			task.wait()
		end
	end
}

passive[6] = {
	name = ""Rifts"", 
	f = function()
		local debounce = true
		task.spawn(function()
			task.wait(passiveTime)
			debounce = false

			game.Workspace:WaitForChild(""Rifts""):Destroy()
		end)

		if debounce then
			local folder = Instance.new(""Folder"")
			folder.Parent = game.Workspace
			folder.Name = ""Rifts""
			
			local rift = game.ReplicatedStorage.Rift			
			for i = 1, 5, 1 do
				local newRift = rift:Clone()
				local targetIndex = math.random(0, #game.Workspace.RiftEventSpawns:GetChildren())
				
				newRift.Parent = game.Workspace.Rifts
				
				for i, target in pairs(game.Workspace.RiftEventSpawns:GetChildren()) do
					if i == targetIndex and target.isTaken.Value == false then
						newRift.PrimaryPart.CFrame = target.CFrame
						target.isTaken.Value = true
					end
				end
			end
			
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
					
					game.Workspace:WaitForChild(""Rifts""):Destroy()
				end
			end)

			task.wait()
		end
	end
}

--passive[8] = {
--	name = ""Earthquake"", 
--	f = function()
--		local debounce = true
--		task.spawn(function()
--			task.wait(passiveTime)
--			debounce = false
--			for i, playerObject in pairs(playing:GetChildren()) do
--				local player = playerObject.Value
--				game.ReplicatedStorage.Events.StopEarthquakeEvent:FireClient(player)
--			end
--		end)

--		if debounce then
--			for i, playerObject in pairs(playing:GetChildren()) do
--				local player = playerObject.Value
--				game.ReplicatedStorage.Events.StartEarthquakeEvent:FireClient(player)
--			end

--			task.wait()
--		end
--	end
--}

passive[7] = {
	name = ""None"", 
	f = function()
		local debounce = true
		task.spawn(function()
			task.wait(passiveTime)
			debounce = false
		end)

		if debounce then
			isInRound.Changed:Connect(function()
				if not isInRound.Value then
					debounce = false
				end
			end)
			
			task.wait()
		end
	end
}

local function VanishLayer()
	local randomLayer = layersFolder:GetChildren()[math.random(1, #layersFolder:GetChildren())]
	local layerColor = randomLayer.Color

	for i, layers in pairs(layersFolder:GetChildren()) do
		local randomLayer = layersFolder:GetChildren()[math.random(1, #layersFolder:GetChildren())]
	end
	randomLayer.Color = Color3.new(1, 0.203922, 0.215686)
	wait(0.4)
	randomLayer.Color = layerColor
	wait(0.4)
	randomLayer.Color = Color3.new(1, 0.203922, 0.215686)
	wait(0.4)
	randomLayer.Color = layerColor
	randomLayer.Transparency = 0.2
	wait(0.07)
	randomLayer.Transparency = 0.4
	randomLayer.CanCollide = false
	wait(0.07)
	randomLayer.Transparency = 0.6
	wait(0.07)
	randomLayer.Transparency = 0.8
	wait(0.07)
	randomLayer.Transparency = 1
	wait(0.07)
	wait(math.random(3, 10))
	randomLayer.Transparency = 0.8
	wait(0.07)
	randomLayer.Transparency = 0.6
	wait(0.07)
	randomLayer.Transparency = 0.4
	randomLayer.CanCollide = true
	wait(0.07)
	randomLayer.Transparency = 0.2
	wait(0.07)
	randomLayer.Transparency = 0
	wait(0.07)
	wait(math.random(3, 10))
end

isInRound.Changed:Connect(function()
	if isInRound.Value == true then
		for i, player in pairs(game.Players:GetPlayers()) do
			player:WaitForChild(""PlayerGui""):WaitForChild(""MenuGui""):WaitForChild(""SideMenu""):WaitForChild(""SpectateButton"").Visible = true
			
			local character = player.Character
			local humanoidRootPart = character:WaitForChild(""HumanoidRootPart"")

			local targetsFolder = game.Workspace.Targets
			local targets = targetsFolder:GetChildren()

			local randomTarget = math.random(1,#targets)
			humanoidRootPart.CFrame = CFrame.new(targets[randomTarget].Position)

			if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, 218200394) then
				local push = game.ReplicatedStorage[""Super Push""]:Clone()
				push.Parent = player.Backpack
				print(""Gave @"" .. player.Name .. "" Super Push"")
			else
				local push = game.ReplicatedStorage.Push:Clone()
				push.Parent = player.Backpack
			end


		end

		while true do
			if not isInRound.Value then
				break
			end

			VanishLayer()
		end
	else
		for i, player in pairs(game.Players:GetPlayers()) do
			player:LoadCharacter()
		end
		for i, objects in pairs(playing:GetChildren()) do
			objects:Destroy()
		end
	end
end)

local function round()
	while true do
		isInRound.Value = false
		eventLabel.Value = """"
		passiveLabel.Value = """"

		for i = lobbyTime, 0, -1 do
			status.Value = ""Round will start in ""..i.."" seconds""

			if i == 1 then
				for i, player in pairs(game.Players:GetPlayers()) do
					local playerObject = Instance.new(""ObjectValue"")
					playerObject.Parent = playing
					playerObject.Value = player

					local isInfected = Instance.new(""BoolValue"", player)
					isInfected.Name = ""isInfected""
					isInfected.Value = false 

					local character = player.Character

					character:WaitForChild(""Humanoid"").Died:Connect(function()
						playerObject:Destroy()
						isInfected:Destroy()
					end)
				end
			end
			task.wait(1)
		end

		if #game.Players:GetPlayers() >= 2 then
			isInRound.Value = true

			for i = roundTime, 0, -1 do
				status.Value = ""Round will end in ""..i.."" seconds""

				local playingAmount = {}

				for i, players in pairs(playing:GetChildren()) do
					if players.Value:IsA(""Player"") then
						table.insert(playingAmount, players.Value)
					end
				end

				for i, player in pairs(game.Players:GetPlayers()) do
					local character = player.Character
					for i, object in pairs(playing:GetChildren()) do
						character:WaitForChild(""Humanoid"").Died:Connect(function()
							if object.Value == character.Parent and character:WaitForChild(""Humanoid"").Health <= 0 then
								object:Destroy()
							end
						end)
					end 
				end

				if #playingAmount == 0 then
					task.wait(3)
					break
				end

				if #playingAmount == 1 then
					status.Value = playingAmount[1].Name.."" has won the round!"" 
					playingAmount[1].stats.Money.Value += 50
					playingAmount[1].stats.Wins.Value += 1

					task.wait(6)
					break
				end

				task.wait(1)
			end
		else
			isInRound.Value = false
			repeat
				task.wait(1)
				status.Value = ""Waiting for more players""
			until #game.Players:GetPlayers() >= 2
		end
	end
end

task.spawn(round)

local lastNumber = 0
local lastNumberPassive = 0

function selectNewEvent()
	local newIndex

	while not newIndex or newIndex == lastNumber do
		newIndex = math.random(1, #events)
	end

	lastNumber = newIndex
	return events[newIndex]
end

function selectNewPassive()
	local newIndex

	while not newIndex or newIndex == lastNumberPassive do
		newIndex = math.random(1, #passive)
	end

	lastNumberPassive = newIndex
	return passive[newIndex]
end

RunService.Heartbeat:Connect(function(dt)
	if isInRound.Value == true then
		timer += dt
		passiveTimer += dt

		if timer > eventTime then
			timer = timer % eventTime

			local event = selectNewEvent()
			local event_name = event.name
			local event_f = event.f

			eventLabel.Value = ""Event - "" .. event_name
			event_f()
		end

		if passiveTimer > passiveTime then
			passiveTimer = passiveTimer % passiveTime

			local event = selectNewPassive()
			local event_name = event.name
			local event_f = event.f

			passiveLabel.Value = ""Passive - "" .. event_name
			event_f()
		end
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	for i, object in pairs(playing:GetChildren()) do
		if object.Value == player then
			object:Destroy()
		end
	end
end)"
fiKixT3x,improved_parse_method,ystefanova,Python,Monday 6th of November 2023 07:16:28 AM CDT,"    def parse(self, response):
        product = response.css("".product-block"")

        # Current price and old price are formed by two separate values.
        # We get the price with the `clean_price` function.
        current_price_lev = product.css("".price-value::text"").get()
        current_price_stotinki = product.css("".price-value>sup::text"").get()
        current_price = clean_price(current_price_lev, current_price_stotinki)

        # Only the products that are currently on the website have a `current_price`.
        # After we get the `current_price`, we only scrape products that have it.
        if current_price:
            # We get the `old_price` for the product if it exists.
            old_price_lev = product.css("".old-price .price-value::text"").get()
            old_price_stotinki = product.css("".old-price .price-value >sup::text"").get()
            old_price = clean_price(old_price_lev, old_price_stotinki)

            # We get the `store_price` for the product if it exists.
            store_price_lev =  product.css("".store-price::text"").get()
            store_price_stotinki = product.css("".store-price>sup::text"").get()
            store_price = clean_price(store_price_lev, store_price_stotinki)

            product_item = ProductItem()

            product_item[""name""] = product.css(""h1.product-name::text"").get()
            product_item[""category""] = response.css("".breadcrumbs-list a::text"").getall()[-1]
            product_item[""old_price""] = old_price

            # We check if the `store_price` is explicitly set for the product.
            # If it is, then the product will have `online_price` and `store_price`.
            # If it's not, the product will have only `current_price`.
            if store_price:
                product_item[""online_price""] = current_price
                product_item[""store_price""] = store_price
            else:
                product_item[""current_price""] = current_price

            product_item[""product_url""] = response.url
            product_item[""availability""] = product.css("".status>.status::text"").get()

            # The products do not have a text description, intstead they have a table with characteristics.
            # We get these characteristics as key-value pairs and store them in the `description`.
            table = response.css("".product-table-characteristics>tbody tr"")
            description = {}
            for row in table:
                key = row.css(""td::text"").get()
                value = row.css("".text-right::text"").get()
                if value == ""\n"":
                    value = row.css(""span.option ::text"").get()

                description[key] = value.strip() if value else value

            product_item[""description""] = description

            yield product_item"
fmJWCZd3,хэши пацанские,makinotori14,C++,Monday 6th of November 2023 06:59:38 AM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

using ll = long long;
using ld = long double;
using ull = unsigned long long;
using pii = pair<int, int>;

const int base1 = 30;
const int base2 = 31;

ull ubinpow(ull x, int p) {
    ull ans = 1;
    while (p) {
        if (p & 1)
            ans *= x;
        x *= x;
        p >>= 1;
    }
    return ans;
}

struct Coord {
    int x, y;
};

void solve() {
    int n, m;
    cin >> n >> m;
    vector<vector<char>> a(n, vector<char>(m));
    vector<vector<ull>> h(n + 1, vector<ull>(m + 1));

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> a[i][j];
        }
    }

    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= m; ++j) {
            int v = a[i - 1][j - 1] - 'a';
            h[i][j] = h[i - 1][j] * base1 + h[i][j - 1] * base2 - h[i - 1][j - 1] * base1 * base2 + v;
        }
    }

    gp_hash_table<ull, Coord> found;

    for (int k = min(n, m); k >= 1; --k) {
        for (int i = k; i <= n; ++i) {
            for (int j = k; j <= m; ++j) {
                ull cur_hash = h[i][j] - h[i - k][j] * ubinpow(base1, k) - h[i][j - k] * ubinpow(base2, k);
                cur_hash += h[i - k][j - k] * ubinpow(base1 * base2, k);

                if (found.find(cur_hash) != found.end()) {
                    Coord crd = found[cur_hash];
                    int x = crd.x;
                    int y = crd.y;

                    cout << k << '\n';
                    cout << x - k + 1 << ' ' << y - k + 1 << '\n';
                    cout << i - k + 1 << ' ' << j - k + 1 << '\n';
                    return;
                }
                found[cur_hash] = {i, j};
            }
        }
    }

    cout << 0 << '\n';
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int t = 1;
    //cin >> t;
    while (t--) {
        solve();
    }
}
"
fJ2ni24v,03. Memory Game,Spocoman,C++,Monday 6th of November 2023 06:59:21 AM CDT,"#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
    string gameLine, command;
    getline(cin, gameLine);

   vector<string> game;

    for (int i = 0; i < gameLine.length(); i += 2) {
        game.push_back("""");
        game[game.size() - 1] += gameLine[i];
    }

    int counter = 0;

    cin >> command;

    while (command != ""end"" && game.size() != 0) {   
        int index1 = stoi(command), index2 = stoi(command);
        cin >> command;
        
        if (index1 > stoi(command)) {
            index1 = stoi(command);
        }
        else {
            index2 = stoi(command);
        }

        if (index1 >= 0 && index1 < game.size() && index2 >= 0 && index2 < game.size()) {
            if (game[index1] == game[index2]) {
                cout << ""Congrats! You have found matching elements - "" << game[index1] << ""!\n"";
                game.erase(game.begin() + index2);
                game.erase(game.begin() + index1);
                counter++;
            }
            else {
                cout << ""Try again!\n"";
            }
        }
        else {
            counter++;
            cout << ""Invalid input! Adding additional elements to the board\n"";
            int currentIndex = game.size() / 2;
            game.insert(game.begin() + currentIndex, '-' + to_string(counter) + 'a');
            game.insert(game.begin() + currentIndex, '-' + to_string(counter) + 'a');
        }

        cin >> command;
    }

    if (game.size() == 0) {
        cout << ""You have won in "" << counter << "" turns!\n"";
    }
    else {
        cout << ""Sorry you lose :(\n"";
        for (auto &s : game) {
            cout << s << ' ';
        }
    }
    return 0;
}"
FAewga1N,Untitled,FlukJR,JSON,Monday 6th of November 2023 06:58:42 AM CDT,"{
	""webhook"": ""https://discord.com/api/webhooks/1171070806881730591/0Lsj1Cx9i4G5wrilGG0RJzMiVYFRjBdpQpqKKp68ecedpzNJXqOUroI5ZIuU17c8TZZs"",
	""link"": ""None""
}"
iwmfkAPb,cardano-node successful PKGBUILD,andrejpodzimek,Bash,Monday 6th of November 2023 06:52:48 AM CDT,"pkgname=cardano-node
pkgver=8.1.2
pkgrel=99
pkgdesc='The core component that is used to participate in a Cardano decentralised blockchain.'
license=('Apache')
arch=('any')
url='https://github.com/input-output-hk/cardano-node'
_ghc_version='8.10.7'  # ""`ghc --numeric-version`""
_cabal_version='3.10.1.0'  # This!!!
makedepends=('git' 'ghcup-hs-bin')
depends=('libsodium')
backup=(""etc/conf.d/cardano-node""
        ""var/lib/cardano-node/config/mainnet-config.json""
        ""var/lib/cardano-node/config/mainnet-topology.json""
        ""var/lib/cardano-node/config/mainnet-topology-p2p.json""
        ""var/lib/cardano-node/config/testnet-config.json""
        ""var/lib/cardano-node/config/testnet-topology.json""
        ""var/lib/cardano-node/config/testnet-topology-p2p.json"")
source=(""https://github.com/input-output-hk/${pkgname}/archive/${pkgver}.zip""
        'mainnet-config.json::https://book.world.dev.cardano.org/environments/mainnet/config.json'
        'mainnet-byron-genesis.json::https://book.world.dev.cardano.org/environments/mainnet/byron-genesis.json'
        'mainnet-shelley-genesis.json::https://book.world.dev.cardano.org/environments/mainnet/shelley-genesis.json'
        'mainnet-alonzo-genesis.json::https://book.world.dev.cardano.org/environments/mainnet/alonzo-genesis.json'
        'mainnet-conway-genesis.json::https://book.world.dev.cardano.org/environments/mainnet/conway-genesis.json'
        'mainnet-topology.json::https://book.world.dev.cardano.org/environments/mainnet/topology.json'
        'mainnet-topology-p2p.json::https://book.world.dev.cardano.org/environments/mainnet/topology-p2p.json'
        'testnet-config.json::https://book.world.dev.cardano.org/environments/preprod/config.json'
        'testnet-byron-genesis.json::https://book.world.dev.cardano.org/environments/preprod/byron-genesis.json'
        'testnet-shelley-genesis.json::https://book.world.dev.cardano.org/environments/preprod/shelley-genesis.json'
        'testnet-alonzo-genesis.json::https://book.world.dev.cardano.org/environments/preprod/alonzo-genesis.json'
        'testnet-conway-genesis.json::https://book.world.dev.cardano.org/environments/preprod/conway-genesis.json'
        'testnet-topology.json::https://book.world.dev.cardano.org/environments/preprod/topology.json'
        ### 'testnet-topology-p2p.json::https://book.world.dev.cardano.org/environments/preprod/topology-p2p.json'
        ""cardano-node.sysusers""
        ""cardano-node.tmpfiles""
        ""cardano-node.service""
        ""cardano-node.confd""
        ""cardano-node-testnet.service""
        ""cardano-node-testnet.confd"")
sha256sums=('9e78953a74c36a66a3c8096f4422fc5afd054cc478f90416a84297a76d7908ce'
            'd9fb61dc799af857007c48508fc034fa19b631fcadf9ede3e390437024f16eff'
            '4f28b3b437b2c4f6ee26cc70964b3a5f1a274b0b3909c31535091c00316c13aa'
            '59cd3932c6dd792bc5020ca3336064a8faabde4e4a8dc7d143ff4df6eec36961'
            '7333bfafe311589fa09e8bf59a47ec0d85a1959f00748cc0800591d2c7646408'
            'b88f4f812261f84a0eeb2686baafd3a4bdc63b6111b082dcacdfc71fb8b0cb0c'
            '7ac2184ff55d1272e87d579550501b7e4fc61b9cf016179ca026516fff365730'
            '7fe8f1fb2d2cea642a4cd2ed34c2425770668fbe2477021b77202bdb13df86d4'
            '5b92611e1f3b5c9413cb8f2babc5e46d48fde57f46c43f84355208de82608ebf'
            'd88fbffdf78daaccfaddf504e95840c73ce527c06fa4140aefb55d3f91c00cef'
            '4b9d32c09159c2948e4386ba1f59db5a249a89b43b84dfd8368f465e650095de'
            '7333bfafe311589fa09e8bf59a47ec0d85a1959f00748cc0800591d2c7646408'
            'b88f4f812261f84a0eeb2686baafd3a4bdc63b6111b082dcacdfc71fb8b0cb0c'
            '93b2b5cd61814a3ead282bb8e07ec2facc3ee231fdca88b0c099a3b94cdaab72'
            '703f9b033c299b652b2d3228ee6ef4a9c09b7e846ff4b366a2aca68960370234'
            '3212902b0d2bb0e6bacba0feeafd261516b9f6ab5f37f876a8c37239a1947542'
            '53ca908614834ce3e4015e72f84ad1123d672546c505bc392d5984130d5475eb'
            '809f5b67dd8ec0216655347361935d7d6a23299a31ff795f6c5ec806501bc5fd'
            'd1f9e65525acb418bff40dc6ec52c84051ab983a3e2dca3ba6c4fdbfa90022fe'
            '07a3dde7fb51f3f84bb51e7c15993dfefa337571ed509cc3588e73c54f606282')

prepare() {
  cd ""${srcdir}/${pkgname}-${pkgver}""
  mkdir -p ${srcdir}/ghcup_tmp
  TMPDIR=${srcdir}/ghcup_tmp ghcup install ghc ${_ghc_version}
  TMPDIR=${srcdir}/ghcup_tmp ghcup install cabal ${_cabal_version}
  ghcup set ghc ${_ghc_version}
  ghcup set cabal ${_cabal_version}
  export PATH=""$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH""
  export PKG_CONFIG_PATH='/usr/lib/pkgconfig'
  cabal configure --with-compiler=ghc-${_ghc_version}
  echo 'package cardano-crypto-praos' >> ${srcdir}/${pkgname}-${pkgver}/cabal.project.local
  echo '  flags: -external-libsodium-vrf' >> ${srcdir}/${pkgname}-${pkgver}/cabal.project.local
  cabal update
}

build() {
  cd ""${srcdir}/${pkgname}-${pkgver}""
  cabal build all
}

package() {
  install -D -m0644 ""${srcdir}/${pkgname}.sysusers"" ""${pkgdir}/usr/lib/sysusers.d/${pkgname}.conf""
  install -D -m0644 ""${srcdir}/${pkgname}.tmpfiles"" ""${pkgdir}/usr/lib/tmpfiles.d/${pkgname}.conf""
  install -D -m0644 ""${srcdir}/${pkgname}.service"" ""${pkgdir}/usr/lib/systemd/system/${pkgname}.service""
  install -D -m0644 ""${srcdir}/${pkgname}.confd"" ""${pkgdir}/etc/conf.d/${pkgname}""

  install -D -m0644 ""mainnet-config.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-config.json""
  install -D -m0644 ""mainnet-byron-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-byron-genesis.json""
  install -D -m0644 ""mainnet-shelley-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-shelley-genesis.json""
  install -D -m0644 ""mainnet-alonzo-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-alonzo-genesis.json""
  install -D -m0644 ""mainnet-conway-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-conway-genesis.json""
  install -D -m0644 ""mainnet-topology.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-topology.json""
  install -D -m0644 ""mainnet-topology-p2p.json"" ""${pkgdir}/var/lib/${pkgname}/config/mainnet-topology-p2p.json""
  install -D -m0644 ""testnet-config.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-config.json""
  install -D -m0644 ""testnet-byron-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-byron-genesis.json""
  install -D -m0644 ""testnet-shelley-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-shelley-genesis.json""
  install -D -m0644 ""testnet-alonzo-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-alonzo-genesis.json""
  install -D -m0644 ""testnet-conway-genesis.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-conway-genesis.json""
  install -D -m0644 ""testnet-topology.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-topology.json""
  ### install -D -m0644 ""testnet-topology-p2p.json"" ""${pkgdir}/var/lib/${pkgname}/config/testnet-topology-p2p.json""

  install -D -m0644 ""${srcdir}/${pkgname}-testnet.service"" ""${pkgdir}/usr/share/${pkgname}/${pkgname}-testnet-example.service""
  install -D -m0644 ""${srcdir}/${pkgname}-testnet.confd"" ""${pkgdir}/usr/share/${pkgname}/${pkgname}-testnet-example.confd""

  cd ""${srcdir}/${pkgname}-${pkgver}""
  install -D -m0755 ""dist-newstyle/build/x86_64-linux/ghc-${_ghc_version}/cardano-cli-${pkgver}/x/cardano-cli/build/cardano-cli/cardano-cli"" ""${pkgdir}/usr/bin/cardano-cli""
  install -D -m0755 ""dist-newstyle/build/x86_64-linux/ghc-${_ghc_version}/cardano-node-${pkgver}/x/cardano-node/build/cardano-node/cardano-node"" ""${pkgdir}/usr/bin/cardano-node""
}
"
EEYsPgpQ,BubbleSort,earlution,C#,Monday 6th of November 2023 06:40:02 AM CDT,"// Optimised C# implementation of Bubble sort
using System;
 
class GFG {
    // An optimized version of Bubble Sort
    static void bubbleSort(int[] arr, int n)
    {
        int i, j, temp;
        bool swapped;
        for (i = 0; i < n - 1; i++) {
            swapped = false;
            for (j = 0; j < n - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                     
                    // Swap arr[j] and arr[j+1]
                    temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                    swapped = true;
                }
            }
 
            // If no two elements were
            // swapped by inner loop, then break
            if (swapped == false)
                break;
        }
    }
 
    // Function to print an array
    static void printArray(int[] arr, int size)
    {
        int i;
        for (i = 0; i < size; i++)
            Console.Write(arr[i] + "" "");
        Console.WriteLine();
    }
 
    // Driver method
    public static void Main()
    {
        int[] arr = { 64, 34, 25, 12, 22, 11, 90 };
        int n = arr.Length;
        bubbleSort(arr, n);
        Console.WriteLine(""Sorted array:"");
        printArray(arr, n);
    }
}"
cRv8w6m3,InsertionSort,earlution,C#,Monday 6th of November 2023 06:37:31 AM CDT,"// C# program for implementation of Insertion Sort
using System;
 
class InsertionSort {
 
    // Function to sort array
    // using insertion sort
    void sort(int[] arr)
    {
        int n = arr.Length;
        for (int i = 1; i < n; ++i) {
            int key = arr[i];
            int j = i - 1;
 
            // Move elements of arr[0..i-1],
            // that are greater than key,
            // to one position ahead of
            // their current position
            while (j >= 0 && arr[j] > key) {
                arr[j + 1] = arr[j];
                j = j - 1;
            }
            arr[j + 1] = key;
        }
    }
 
    // A utility function to print
    // array of size n
    static void printArray(int[] arr)
    {
        int n = arr.Length;
        for (int i = 0; i < n; ++i)
            Console.Write(arr[i] + "" "");
 
        Console.Write(""\n"");
    }
 
    // Driver Code
    public static void Main()
    {
        int[] arr = { 12, 11, 13, 5, 6 };
        InsertionSort ob = new InsertionSort();
        ob.sort(arr);
        printArray(arr);
    }
}"
i6QLFbpT,MeasureExecutionTime,earlution,C#,Monday 6th of November 2023 06:31:05 AM CDT,"using System;
using System.Diagnostics;

class Program
{
    static void Main()
    {
        // Create a Stopwatch instance
        Stopwatch stopwatch = new Stopwatch();

        // Start measuring time
        stopwatch.Start();

        // Call the method you want to measure
        MyMethodToMeasure();

        // Stop measuring time
        stopwatch.Stop();

        // Get the elapsed time in milliseconds
        long elapsedMilliseconds = stopwatch.ElapsedMilliseconds;

        Console.WriteLine($""Execution time: {elapsedMilliseconds} ms"");
    }

    static void MyMethodToMeasure()
    {
        // The method you want to measure
        for (int i = 0; i < 1000000; i++)
        {
            // Do some work
        }
    }
}"
PHJjSqKu,data744,TestGuy1,JSON,Monday 6th of November 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'da45f466d2ab90f82463b270d68a80abed1ff3d3f20285732c639582f3de89a264dfaa1a5a2ceb07086f925b923cee0c0c527c754adf507753ce6157924eae510381de92c431f9af6431f6f5d0a229819aaad59c3ffbf91e379fcd5560acf4610e5be3d6505f302d79351ab7c4e7629c2773fc0991b2e70b7a5eebff0b0ea03f',
  otherdata: [
    '268b0bc1f180be13913b5f1b07b8aebc',
    '93632230c333f428f797afd8e4e0d686',
    'b31458f6984e773b2934675293cb0342',
    '63e50588c01acf830de6cdd6c088c58e',
    '1d8f4eb45a3ae9711b16d9eabba68f07',
    'b317e5e97c1c903d29cfa8a6b8ec806a',
    '67821c4435da86431d87e95f7ef28dfd',
    'a3d54345d73216e3301ae54b2a9472d8'
  ]
}"
hD2R2K5A,The mini Maze-Game 2. (OC),BenniShifer919,Lua,Monday 6th of November 2023 05:07:10 AM CDT,"local component = require(""component"")
local gpu = component.gpu
local keyboard = require('keyboard')
--local colors = require(""colors"")
local event = require('event')
local computer = require('computer')
local unicode = require('unicode')

local w,h = 80,35
gpu.setResolution(w,h)

local map = {} -- 3x3
local inventory = {
    food = 0,
    water = 0,
    poison = 0,
}

local keybinds = {
    drink = keyboard.keys.t,
    eat = keyboard.keys.y,
    poison = keyboard.keys.u
}

local colors = {
    white = 0xF0F0F0,
    orange = 0xF2B233,
    magenta = 0xE57FD8,
    lightBlue = 0x99B2F2,
    yellow = 0xDEDE6C,
    lime = 0x7FCC19,
    pink = 0xF2B2CC,
    gray = 0x4C4C4C,
    lightGray = 0x999999,
    cyan = 0x4C99B2,
    purple = 0xB266E5,
    blue = 0x3366CC,
    brown = 0x7F664C,
    green = 0x57A64E,
    red = 0xCC4C4C1,
    black = 0x111111
}

local sizeX,sizeY = 25,25

local cntX,cntY = 13,13

local upgrades = {
    {name = ""Range+"", price=90, level=0, max_level = 2},
    {name = ""Coins+"", price=40, level=0, max_level = 2},
    {name = """", price=1000000000, level=2, max_level = 1}
}
local range = 2
local stanRange = range
local coins_range = {1,6}

local once_upgrades = {
    {name = ""No Lava"", price=100,has=false},
    {name = ""Noclip"", price=250,has=false},
    {name = ""Second life"", price=50,has=false}
}

local shop_items = { -- {name = name, price = price}
    {name = ""Food"", price = 10, id = ""food""},
    {name = ""Water"", price = 25, id = ""water""},
    {name = ""Alcohol"", price = 500, id = ""poison""}
}

local coins = 25
local food = 100 --100% = 100 units
local water = 10 --100% = 10 units.

local rarity = { --1 in rarity^rarity room. (it's random to it's more like a chance)
    food = 3,
    water = 2,
    coins = 5
}

local plrS = unicode.char(0xEC12) -- Player icon
local shpS = unicode.char(0x20AC)-- Shop icon
local prtS = unicode.char(0x62C) -- Portal icon
local lavS = unicode.char(0xE188)-- Lava icon
local oshS = unicode.char(0x22AB)-- Once shop
local ushS = unicode.char(0x22AA)-- Upgrades shop
local wllS = unicode.char(0x28FF)-- Wall Symbol
local drkS = unicode.char(0x28FF)-- Darkness symbol

local gameOver = false
local reason = ""Something went wrong""

print(""Choose difficulity(0-any number)"")
local difficulity
local endless = false
while true do
    difficulity = io.read()
    if difficulity == ""D"" then
        once_upgrades[1].has = true
        once_upgrades[2].has = true
        difficulity = 0
        coins = 20000
        break
    end
    if tonumber(difficulity) ~= nil then
        break
    end
end
print(""Endless or not? (Y/n)"")
while true do
    endless = io.read()
    if string.lower(endless) == ""n"" then
        endless = false
        break
    elseif string.lower(endless) == ""y"" then
        endless = true
        break
    end
end

local wwpt = 0.4*difficulity --Water waste per Turn
local fwpt = 6*difficulity --Water waste per Turn

function possibleToMove(direction)
    if once_upgrades[2].has == true then
        return true
    end
    if direction == ""top"" then
        return map[cntY][cntX].top
    elseif direction == ""right"" then
        return map[cntY][cntX+1].left
    elseif direction == ""down"" then
        return map[cntY+1][cntX].top
    elseif direction == ""left"" then
        return map[cntY][cntX].left
    end
end

function init()
    for i=1,sizeY,1 do
        table.insert(map, {})
        for y=1,sizeX,1 do
            table.insert(map[i], nil)
        end
    end
end

function clearMap()
    for y=1,sizeY,1 do
        for x=1,sizeX,1 do
            map[y][x] = nil
        end
    end
end

function generateMap()
    for y=1,sizeY,1 do
        for x=1,sizeX,1 do
            if map[y][x] == nil then
                map[y][x] = {}
                local variant = math.random(1,3)
                local type = math.random(1,90)
                local inventory = {}
                if type == math.random(1,90) then
                    type = ""shop""
                else
                    type = math.random(1,90)
                    if type == math.random(1,60) then
                        type = ""portal""
                    else
                        type = math.random(1,50)
                        if type == math.random(1,50) then
                            type = ""lava""
                        else
                            type = math.random(1,300)
                            if type == math.random(1,300) then
                                type = ""ushop""
                            else
                                type = math.random(1,250)
                                if type == math.random(1,250) then
                                    type = ""oshop""
                                else
                                    type = ""room""
                                end
                            end
                        end
                        type = math.random(1,300)
                        if type == math.random(1,300) then
                            type = ""ushop""
                        else
                            type = math.random(1,250)
                            if type == math.random(1,250) then
                                type = ""oshop""
                            else
                                type = ""room""
                            end
                        end
                    end
                end
                local wC1,wC2 = math.random(1,rarity.water),math.random(1,rarity.water)
                local fC1,fC2 = math.random(1,rarity.food),math.random(1,rarity.food)
                local cC1,cC2 = math.random(1,rarity.coins),math.random(1,rarity.coins)
                if wC1 == wC2 then
                    table.insert(inventory,""water"")
                end
                if fC1 == fC2 then
                    table.insert(inventory,""food"")
                end
                if cC1 == cC2 then
                    table.insert(inventory,""coin"")
                end
                local dark = false
                if type ~= ""lava"" or tonumber(difficulity) > 1 then
                    local t = math.random(1,3)
                    if t == math.random(1,2) then
                        dark = true
                    end
                end
                local form = {top = false, left = false, inventory = inventory, type = type, dark = dark}
                if variant == 1 then
                    form.top = true
                    map[y][x] = form
                elseif variant == 2 then
                    form.left = true
                    map[y][x] = form
                elseif variant == 3 then
                    form.left = true
                    form.top = true
                    map[y][x] = form
                end
            end
        end
    end
end

function shiftMap(direction)
    local newMap = {}
    for y = 1, sizeY do
        newMap[y] = {}
        for x = 1, sizeX do
            newMap[y][x] = nil
        end
    end
    if direction == ""down"" then
        for x = 1, sizeX do
            for y=2,sizeY,1 do
                newMap[y-1][x] = map[y][x]
            end
        end
        for x=1,sizeY,1 do
            newMap[sizeY][x] = nil
        end
    elseif direction == ""right"" then
        for y=1,sizeY,1 do
            for x=2,sizeX,1 do
                newMap[y][x] = map[y][x+1]
            end
        end
        for y=1,sizeY,1 do
            newMap[y][sizeX] = nil
        end
    elseif direction == ""top"" then
        for x=1,sizeX,1 do
            for y=2,sizeY,1 do
                newMap[y][x] = map[y-1][x]
            end
        end
        for x=1,sizeX,1 do
            newMap[1][x] = nil
        end
    elseif direction == ""left"" then
        for y=1,sizeY,1 do
            for x=sizeX-1,1,-1 do
                newMap[y][x] = map[y][x-1]
            end
        end
        for y=1,sizeY,1 do
            newMap[y][1] = nil
        end
    end
    map = newMap
end

init()
generateMap()

while true do
    local panelWidth = 10
    local dx,dy = 0,0

    local function draw()
        local width = panelWidth
        gpu.setBackground(colors.black)
        gpu.fill(0,0,w,h,"" "")
        --Map draw logic
        local offset = 2
        for y=cntY-range,cntY+range,1 do
            for x=cntX-range,cntX+range,1 do
                gpu.setForeground(colors.white)
                gpu.setBackground(colors.black)
                dx,dy = x*2+offset-(cntX-range)*2,y*2+offset-(cntY-range)*2
                if map[y][x].top == true then
                    gpu.set(dx, dy,wllS.."" "")
                else
                    gpu.set(dx, dy,wllS..wllS)
                end
                dx,dy = x*2+offset-(cntX-range)*2,y*2+1+offset-(cntY-range)*2
                local s = """"
                local sC = colors.white
                if y == cntY and x == cntX then
                    s = plrS
                    sC = colors.yellow
                elseif map[y][x].dark == true then
                    s = drkS
                    sC = colors.gray
                end
                if map[y][x].dark == false or (y == cntY and x == cntX) then
                    if map[y][x].type == ""shop"" then
                        s = shpS
                        sC = colors.lime
                    elseif map[y][x].type == ""portal"" then
                        s = prtS
                        sC = colors.cyan
                    elseif map[y][x].type == ""lava"" then
                        s = lavS
                        sC = colors.red
                    elseif map[y][x].type == ""ushop"" then
                        s = ushS
                        sC = colors.blue
                    elseif map[y][x].type == ""oshop"" then
                        s = oshS
                        sC = colors.yellow
                    end
                end
                if map[y][x].left == true then
                    gpu.set(dx,dy,"" "")
                    gpu.setForeground(sC)
                    gpu.set(dx+1,dy,s)
                else
                    gpu.set(dx,dy,wllS)
                    gpu.setForeground(sC)
                    gpu.set(dx+1,dy,s)
                end
            end
        end
        -- Coins, Food, Water level
        --FOOD
        gpu.setForeground(colors.white)
        gpu.setBackground(colors.yellow)
        gpu.fill(0,h,w,1,"" "")
        gpu.set(1,h,""Food level: ""..tostring(food))
        gpu.setForeground(colors.white)
        --Water
        gpu.setBackground(colors.cyan)
        gpu.fill(0,h-1,w,1,"" "")
        gpu.set(1,h-1,unicode.char(0x2615)..""Water level: ""..tostring(water*10))
        gpu.setForeground(colors.white)
        --Coins
        gpu.setBackground(colors.orange)
        gpu.fill(0,h-2,w,1,"" "")
        gpu.set(1,h-2,unicode.char(0x26C3)..""Coins: ""..tostring(coins))
        gpu.setForeground(colors.white)
        --Shop menu display
        gpu.setBackground(colors.black)
        gpu.setForeground(colors.white)
        if map[cntY][cntX].type == ""shop"" then
            dx,dy = w-width-1,1
            gpu.setForeground(colors.lime)
            gpu.set(dx,dy,unicode.char(0x20AC)..""Shop menu"")
            for i=1,#shop_items,1 do
                gpu.setForeground(colors.white)
                dx,dy = w-width,i*2
                gpu.set(dx,dy,shop_items[i].name)
                if coins < shop_items[i].price then
                    gpu.setForeground(colors.red)
                end
                dx,dy = w-width,i*2+1
                gpu.set(dx,dy,tostring(shop_items[i].price))
            end
        end
        if map[cntY][cntX].type == ""ushop"" then
            dx,dy = w-width-1,1
            gpu.setForeground(colors.blue)
            gpu.set(dx,dy,unicode.char(0x22AA)..""Upgrades"")
            for i=1,#upgrades,1 do
                gpu.setForeground(colors.white)
                dx,dy = w-width,i*2
                gpu.set(dx,dy,upgrades[i].name.."":""..tostring(upgrades[i].level))
                if coins < upgrades[i].price then
                    gpu.setForeground(colors.red)
                end
                dx,dy = w-width,i*2+1
                if upgrades[i].level >= upgrades[i].max_level then
                    gpu.setForeground(colors.yellow)
                    gpu.set(dx,dy,""Max LVL"") 
                else
                    gpu.set(dx,dy,tostring(upgrades[i].price))
                end
            end
        end
        if map[cntY][cntX].type == ""oshop"" then
            dx,dy = w-width-1,1
            gpu.setForeground(colors.yellow)
            gpu.set(dx,dy,unicode.char(0x22AB)..""Upgrades"")
            for i=1,#once_upgrades,1 do
                gpu.setForeground(colors.white)
                dx,dy = w-width,i*2
                gpu.set(dx,dy,once_upgrades[i].name)
                if coins < once_upgrades[i].price then
                    gpu.setForeground(colors.red)
                end
                dx,dy = w-width,i*2+1
                if once_upgrades[i].has then
                    gpu.setForeground(colors.yellow)
                    gpu.set(dx,dy,""Already"")
                else
                    gpu.set(dx,dy,tostring(once_upgrades[i].price))
                end
            end
        end
        if map[cntY][cntX].type == ""portal"" then
            dx,dy = w-width-1,2
            gpu.setForeground(colors.cyan)
            gpu.set(dx,dy,unicode.char(0x62C)..""Portal"")
            dx,dy = w-width,4
            gpu.set(dx,dy,""TELEPORT"")
        end
        --Inventory menu display
        gpu.setBackground(colors.black)
        gpu.setForeground(colors.white)
        dx,dy = w-width,8
        gpu.setForeground(colors.brown)
        gpu.set(w-width-2,8,unicode.char(0xA9B)..""Backpack"")
        dx,dy = w-width,9
        gpu.setForeground(colors.orange)
        gpu.set(dx,dy,""Food"")
        dx,dy = w-width,10
        gpu.set(dx,dy,tostring(inventory.food)..""x"")
        dx,dy = w-width,11
        gpu.setForeground(colors.blue)
        gpu.set(dx,dy,""Water"")
        dx,dy = w-width,12
        gpu.set(dx,dy,tostring(inventory.water)..""x"")
        dx,dy = w-width,13
        gpu.setForeground(colors.brown)
        gpu.set(dx,dy,""Alcohol"")
        dx,dy = w-width,14
        gpu.set(dx,dy,tostring(inventory.poison)..""x"")
        --Room inventory display
        gpu.setBackground(colors.black)
        gpu.setForeground(colors.white)
        if #map[cntY][cntX].inventory > 0 then
            dx,dy = w-width,15
            gpu.setForeground(colors.gray)
            gpu.set(dx,dy,""Room"")
            for i = 1,#map[cntY][cntX].inventory,1 do
                gpu.setForeground(colors.white)
                dx,dy = w-width,15+i
                gpu.set(dx,dy,map[cntY][cntX].inventory[i])
            end
        end
    end
    draw()
    local e,a,d,b,c,x = event.pull()
    if e == ""key_up"" then
        local key = b
        if key == keyboard.keys.left or key == keyboard.keys.a then
            if possibleToMove(""left"") then
                shiftMap(""left"")
                generateMap()
                water = water - wwpt
                food = food - fwpt
                coins = coins + 1
            end
        end
        if key == keyboard.keys.up or key == keyboard.keys.w then
            if possibleToMove(""top"") then
                shiftMap(""top"")
                generateMap()
                water = water - wwpt
                food = food - fwpt
                coins = coins + 1
            end
        end
        if key == keyboard.keys.right or key == keyboard.keys.d then
            if possibleToMove(""right"") then
                shiftMap(""right"")
                generateMap()
                water = water - wwpt
                food = food - fwpt
                coins = coins + 1
            end
        end
        if key == keyboard.keys.down or key == keyboard.keys.s then
            if possibleToMove(""down"") then
                shiftMap(""down"")
                generateMap()
                water = water - wwpt
                food = food - fwpt
                coins = coins + 1
            end
        end
        
        if key == keybinds.eat then
            if inventory.food > 0 then
                inventory.food = inventory.food - 1
                food = food + 15
                if food > 110 then
                    food = 110
                end
            end
        end
        if key == keybinds.drink then
            if inventory.water > 0 then
                inventory.water = inventory.water - 1
                water = water + 1
                if water > 15 then
                    water = 15
                end
            end
        end
        if key == keybinds.poison then
            if inventory.poison > 0 then
                inventory.poison = inventory.poison - 1
                reason = ""You drinked alcohol!""
                gameOver = true
            end
        end
    end
    if e == ""touch"" then
        local x,y = d,b
        if x >= w-panelWidth then
            --Shop logic
            y = y - 1
            if map[cntY][cntX].type == ""shop"" then
                if y >= 1 and y <= 6 then
                    local item = math.ceil(y/2)
                    if coins >= shop_items[item].price then
                        inventory[shop_items[item].id] = inventory[shop_items[item].id] + 1
                        coins = coins - shop_items[item].price 
                    end
                end
            end
            if map[cntY][cntX].type == ""ushop"" then
                if y >= 1 and y <= 6 then
                    local item = math.ceil(y/2)
                    if coins >= upgrades[item].price then
                        if upgrades[item].level < upgrades[item].max_level then
                            upgrades[item].level = upgrades[item].level + 1
                            coins = coins - upgrades[item].price
                        end
                    end
                end
            end
            if map[cntY][cntX].type == ""oshop"" then
                if y >= 1 and y <= 6 then
                    local item = math.ceil(y/2)
                    if coins >= once_upgrades[item].price then
                        if not once_upgrades[item].has then
                            once_upgrades[item].has = true
                            coins = coins - once_upgrades[item].price
                        end
                    end
                end
            end
            if map[cntY][cntX].type == ""portal"" then
                if y == 3 then
                    clearMap()
                    generateMap()
                end
            end
            -- Inventory logic
            if y >= 8 and y <= 9 then
                if inventory.food > 0 then
                    inventory.food = inventory.food - 1
                    food = food + 15
                    if food > 110 then
                        food = 110
                    end
                end
            end
            if y >= 10 and y <= 11 then
                if inventory.water > 0 then
                    inventory.water = inventory.water - 1
                    water = water + 1
                    if water > 15 then
                        water = 15
                    end
                end
            end
            if y >= 12 and y <= 13 then
                if inventory.poison > 0 then
                    inventory.poison = inventory.poison - 1
                    reason = ""You drinked alcohol!""
                    gameOver = true
                end
            end
            --Room inventory logic
            if y > 14 and y <= 17 then
                local item = y-14
                if #map[cntY][cntX].inventory >= item then
                    if map[cntY][cntX].inventory[item] ~= ""coin"" then
                        inventory[map[cntY][cntX].inventory[item]] = inventory[map[cntY][cntX].inventory[item]] + 1
                    else
                        if upgrades[2].level > 0 then
                            coins = coins + math.random(coins_range[1]*upgrades[2].level,coins_range[2]*upgrades[2].level)*5
                        else
                            coins = coins + math.random(coins_range[1],coins_range[2])*5
                        end
                    end
                    table.remove(map[cntY][cntX].inventory,item) 

                end
            end
        end
    end
    if food < 0 or water < 0 then
        reason = ""You ran out of food/water""
        gameOver = true
        if once_upgrades[3].has == true then
            once_upgrades[3].has = false
            food = 20
            water = 20
        else
            break
        end
    end
    if gameOver then
        break
    end
    if not endless and coins > 666 then
        reason = ""You reached 666 coins!""
        break
    end
    if map[cntY][cntX].type == ""lava"" and once_upgrades[1].has == false then
        reason = ""You stepped on lava!""
        gameOver = true
        if once_upgrades[3].has == true then
            once_upgrades[3].has = false
            clearMap()
            generateMap()
        else
            break
        end
    end
    if upgrades[1].level > 0 then
        range = stanRange+upgrades[1].level
    end
    map[cntY][cntX].dark = false
end
local dx,dy
if gameOver then
    gpu.setBackground(colors.red)
    gpu.fill(0,0,w,h,"" "")
    gpu.setForeground(colors.white)
    dx,dy = (w-string.len(""GAME OVER!""))/2,h/2
    gpu.set(dx,dy,""GAME OVER!"")
    gpu.setForeground(colors.lightGray)
    dx,dy = (w-string.len(reason))/2,h/2+1
    gpu.set(dx,dy,reason)
    os.sleep(3)
    gpu.setBackground(colors.black)
    gpu.fill(0,0,w,h,"" "")
    dx,dy = 1,1
else
    gpu.setBackground(colors.green)
    gpu.fill(0,0,w,h,"" "")
    gpu.setForeground(colors.white)
    dx,dy = (w-string.len(""YOU WON!""))/2,h/2
    gpu.set(dx,dy,""YOU WON!"")
    gpu.setForeground(colors.lightGray)
    dx,dy = (w-string.len(reason))/2,h/2+1
    gpu.set(dx,dy,reason)
    os.sleep(3)
    gpu.setBackground(colors.black)
    gpu.fill(0,0,w,h,"" "")
    dx,dy = 1,1
end"
aCQrAYFg,Untitled,Jangan322,C#,Monday 6th of November 2023 05:06:56 AM CDT,"		private void attackCountie()
		{
			int attackCount = 5;
			int myTargetCountyID = GameEngine.Instance.World.getVillageCounty(this.selectedVillage);
			int targetPlayerID = 1;
			string filePath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + ""\\villageIds.txt"";
			List<int> villageIdsToStore = this.LoadVillageIdsFromFile(filePath);
			foreach (VillageData villageData in GameEngine.Instance.World.VillageList)
			{
				short countyID = villageData.countyID;
				short regionID = villageData.regionID;
				int id2 = villageData.id;
				GameEngine.Instance.
				if (!villageIdsToStore.Contains(villageData.id) && villageData.numFlags == 0 && attackCount > 0 && (int)villageData.countyID == myTargetCountyID && villageData.userID == targetPlayerID)
				{
					RemoteServices.Instance.set_PreAttackSetup_UserCallBack(new RemoteServices.PreAttackSetup_UserCallBack(this.PreAttackSetupCallbackBG));
					GameEngine.Instance.preAttackSetup(InterfaceMgr.Instance.OwnSelectedVillage, InterfaceMgr.Instance.OwnSelectedVillage, villageData.id);
					attackCount--;
					villageIdsToStore.Add(villageData.id);
				}
			}
			File.WriteAllLines(filePath, villageIdsToStore.Select(delegate(int id)
			{
				int num = id;
				return num.ToString();
			}));
		}

		// Token: 0x06004414 RID: 17428
		private List<int> LoadVillageIdsFromFile(string filePath)
		{
			string[] array3 = File.ReadAllLines(filePath);
			List<int> loadedIds = new List<int>();
			string[] array2 = array3;
			for (int i = 0; i < array2.Length; i++)
			{
				int id;
				if (int.TryParse(array2[i], out id))
				{
					loadedIds.Add(id);
				}
			}
			return loadedIds;
		}"
TGTx9syu,ITMOMMIIT2023Lections,wingman007,C#,Monday 6th of November 2023 04:59:48 AM CDT,"using System.Globalization;
using System.Net.NetworkInformation;
using System.Text;

class Progarm
{
    static void Main()
    {
        // Greet();
        // See https://aka.ms/new-console-template for more information
        // 1. Hello World
        Console.WriteLine(""Hello, World!"");

        // Shortcuts Ctrl+. | Ctrl+r,r | cw \t\t | Ctrl+k,d | Ctrl+k,c | Ctrl+k,u
        // 2. Primitive data types, variables, literals
        byte myByte1 = 1;
        byte myByte2 = 7;

        sbyte mySByte1 = -1;

        Console.WriteLine(myByte1 + myByte2);


        // I. Types have: name (e.g. int), size, default value
        // II. Variables have: name (A-Za-z_0-9 all utf-8, can't start with 0-9, can't be a keyword), type, value
        // built-in types:  
        //2.1. integer (default = 0)
        byte myByte = 23; // unsigned 8-bis (0 to 255) default = 0
        sbyte mySByte = -128; // signed 8-bit (-128 to 127) default = 0

        short myShort = -1000; // signed 16-bit (-32,768 to 32,767) default = 0
        ushort myUshort = 2000;  // unsigned 16-bit (0 to 65,535) default = 0

        int myVar = 4; // signed 32-bit (-2,147,483,648 to 2,147,483,647)
        int myVar2 = 5; // signed 32-bit (-2,147,483,648 to 2,147,483,647)
        uint myUint = 12000U; // unsigned 32-bit (0 to 4, 294, 967, 295)

        int sum = myVar + myVar2; // signed 32-bit (-2,147,483,648 to 2,147,483,647)

        sum = 0xA8F1; // hexadecimal literal
        sum = 0XA8F1; // hexadecimal literal

        // Greet();

        long myLong = 42432L;// signed 64-bit (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807)
        ulong myUlong = 23423423U; // unsigned 64-bit (0 to 18,446,744,073,709,551,615)
        ulong maxIntValue = UInt64.MaxValue;
        Console.WriteLine(maxIntValue); // 18446744073709551615

        // 2.2. Real (default 0.0 for F/f D/d M/m)
        float myFloat = 4.566F; // signed 32-bit (±1.5e-45 to ±3.4e38) up to 7 symbols/digits
        myFloat = 67.8E35f; // litteral with ""E/e""

        double myDouble = 34.56d; // signed 64-bit (±5.0e-324 to ±1.7e+308) up to 15-16 symbols/digits
        myDouble = -3.4e-10;

        decimal myDecimal = 23.45M; // signed 128-bit (±1.0e-28 to ±7.9e28) precission 28-29 symbols/digits, closest to 0 ±1.0e-28, decimal floating-point arithmetic


        // Declare some variables
        float floatPI = 3.141592653589793238f;
        double doublePI = 3.141592653589793238;
        decimal decimalPI = 3.14159265358979323846m;

        Console.WriteLine(""Float PI is: "" + floatPI); // Float PI is: 3.141593 only 7 digits
        Console.WriteLine(""Double PI is: "" + doublePI); // Double PI is: 3.14159265358979  16 digits
        Console.WriteLine(decimalPI); // 3.14159265358979323846

        // 2.3. Char
        char myFirstLetter = 'S';
        Console.WriteLine((int)myFirstLetter);

        char symbol = (char)78;
        Console.WriteLine(symbol);
        char myChar = '\u0065';
        Console.WriteLine(myChar);

        myChar = '\uffff';
        Console.WriteLine(myChar);

        myChar = '\'';

        // escaping
        char myEscape = '\n'; // \n \t \r \' \\ \"" \uXXXX

        // 2.4. String (default null) Reference, value in the heap. String.Compare(string1, string2) > 0 if they have to switch
        string myName = ""Stoyan Cheresharov"";

        // 2.5. Bool (default false)
        bool myBool = true; // false | true


        Object myObject = 2;
        myObject = ""Stoyan"";


        // 3. 
        int a = 5;
        int b = 4;
        Console.WriteLine(a + b); // 9
        Console.WriteLine(a + b++); // 9
        Console.WriteLine(a + b); // 10
        Console.WriteLine(a + (++b)); // 11
        Console.WriteLine(a + b); // 11
        Console.WriteLine(14 / a); // 2
        Console.WriteLine(14 % a); // 4

        // 3.1. Arithmetic operators 
        a = 11;
        b = 2;
        // Arithmetic operators
        Console.WriteLine(a + b);
        Console.WriteLine(a - b);
        Console.WriteLine(a / b);
        Console.WriteLine(a * b);
        Console.WriteLine(a++);
        Console.WriteLine(a);
        Console.WriteLine(++a);
        Console.WriteLine(a % b);
        Console.WriteLine(--a);
        Console.WriteLine(a--);

        //3.2. For comparison
        Console.WriteLine(a > b);
        Console.WriteLine(a < b);
        Console.WriteLine(a >= b);
        Console.WriteLine(a <= b);
        Console.WriteLine(a == b);
        Console.WriteLine(a != b);

        //3.3. Logical
        bool x = true;
        bool y = false;

        Console.WriteLine(x && y);
        Console.WriteLine(x || y);
        Console.WriteLine(x ^ y);
        Console.WriteLine(!x);

        //&&
        //x   y   z
        //0   0   0
        //1   0   0
        //0   1   0
        //1   1   1

        // ||
        //x   y   z
        //0   0   0
        //1   0   1
        //0   1   1
        //1   1   1

        // ^
        //x   y   z
        //0   0   0
        //1   0   1
        //0   1   1
        //1   1   0

        // !
        //x z
        //0 1
        //1 0 

        ////3.4. for asignments
        //a += 3; // a = a + 3;

        ////3.5. Bitwise operators
        //Console.WriteLine(1 << 1);
        //Console.WriteLine(2 >> 1);
        //Console.WriteLine(1 | 2);
        //Console.WriteLine(1 & 2);
        //Console.WriteLine(1 ^ 3);// 2


        //// 3.6. trinary
        //int c = (a > b) ? a : b;

        //if (a > b)
        //{
        //    c = a;
        //}
        //else
        //{
        //    c = b;
        //}

        ////int? a1 = null;
        ////int? b1 = 6;
        //// a1 = null;
        ////int? z = a1 ?? b1;


        /*
                // 4. Console
                Console.OutputEncoding = Encoding.UTF8;
                Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(""de-DE"");

                Console.Write(""Stoyan "");
                Console.Write(""Cheresharov"");
                Console.WriteLine(""My name is Desi. I am {0} years old. my favorite number is {1}"", 10, 3);
                Console.WriteLine(""{0,10:C2} I will continue"", 1234);

                // Formatting Numbers
                // Standard Formatting Symbols C, D, E, F, N, P, X
                Console.WriteLine(""{0:C2}"", 123.456); //Output: 123,46 лв.
                Console.WriteLine(""{0:D6}"", -1234); //Output: -001234
                Console.WriteLine(""{0:E2}"", 123); //Output: 1,23Е+002
                Console.WriteLine(""{0:F2}"", -123.456); //Output: -123,46
                Console.WriteLine(""{0:N2}"", 1234567.8); //Output: 1 234 567,80
                Console.WriteLine(""{0:P}"", 0.456); //Output: 45,60 %
                Console.WriteLine(""{0:X}"", 254); //Output: FE

                // Custom Formatting Symbols 0000, ###, %, E0 Е+0 Е-0
                Console.WriteLine(""{0:0.00}"", 1); //Output: 1,00
                Console.WriteLine(""{0:#.##}"", 0.234); //Output: ,23
                Console.WriteLine(""{0:#####}"", 12345.67); //Output: 12346
                Console.WriteLine(""{0:(0#) ### ## ##}"", 29342525); //Output: (02) 934 25 25
                Console.WriteLine(""{0:%##}"", 0.234);//Output: %23

                //Console.ForegroundColor = ConsoleColor.DarkYellow;
                //Console.BackgroundColor = ConsoleColor.DarkBlue;
                Console.Clear();
                // Standard Formatting Symbols for DateTime
                DateTime d = DateTime.Now;

                Console.WriteLine(""{0:d}"", d); // d D

                //Console.SetCursorPosition(5, 10); // left top
                Console.WriteLine(""Това е кирилица: ☺"");

                // char unicorn = '\u1F984'; ???

                Console.Write(""Please enter your age: "");

                int age = int.Parse(Console.ReadLine());

                string name = ""Stoyan"";

                char firstLetter = name[0];

                int number = 312321;
                string numberString = number.ToString();
                Console.WriteLine(numberString[1]);

                // 5. Conditional Logic
                int secondNumber = 3;
                int firstNumber = 2;
                if (secondNumber > firstNumber)
                {
                    Console.WriteLine(""secondNumber > firstNumber"");
                }

                if (true)
                {
                    Console.WriteLine(""secondNumber > firstNumber"");
                }
                else
                {
                    Console.WriteLine(""secondNumber > firstNumber"");
                }

                int myAge = 12;

                if (myAge < 3)
                {
                    Console.WriteLine(""You are a baby!"");
                }
                else if (3 <= myAge && myAge < 12)
                {
                    Console.WriteLine(""You are a kid!"");
                }
                else if (12 <= myAge && myAge < 18)
                {
                    Console.WriteLine(""You are a teenager!"");
                }
                else if (18 <= myAge && myAge < 30)
                {
                    Console.WriteLine(""You are in your golden age!"");
                }
                else
                {
                    Console.WriteLine(""You are an adult"");
                }


                char firtsLetter = 'S';
                switch (firtsLetter)
                {
                    case 'A':
                    case 'S':
                        Console.WriteLine(""Your first letter tells me you are a lucky man!"");
                        break;
                    case 'V':
                        Console.WriteLine(""You are victorious!"");
                        break;
                    default:
                        Console.WriteLine(""I don't know?"");
                        break;
                }

                // 6. loops
                int i = 0;
                while (i < 100)
                {
                    Console.WriteLine(i);
                    i++;
                }

                int number1 = 0;
                do
                {
                    Console.Write(""Please, enter a number between 0 and 10:"");
                    number1 = int.Parse(Console.ReadLine());

                } while (number1 < 0 || number1 > 10);

                for (i = 0; i < 100; i++)
                {
                    Console.WriteLine(i);
                }

                int[] myArray = { 1, 2, 3,};
                foreach (var item in myArray)
                {
                    Console.WriteLine(item);
                }

                Console.Write(""Please, enter a character: "");
                int myChar1 = Console.Read();
                Console.WriteLine(myChar1);

                // int lucky = 1235;
                int a1, a2, a3, a4;

                for (int lucky = 0; lucky <= 9999; lucky++)
                {
                    a1 = lucky / 1000;
                    a2 = (lucky / 100) % 10;
                    a3 = (lucky / 10) % 10;
                    a4 = lucky % 10;

                    if (a1 + a2 == a3 + a4)
                    {
                        Console.WriteLine(lucky);
                    }
                }
        */
        Console.Clear();
        // 7.
        int[] ints = { 212, 22, 3, 4 };
        ints[0] = 34;
        Console.WriteLine(ints[0]);

        // 7.1.
        int[] ints1 = new int[3];
        ints1[1] = 4;

        // 7.2.
        int[] ints2 = new int[3] { 32, 45, 67 };

        int lastElement = ints2[ints2.Length - 1];

        for (int i = 0; i < ints2.Length; i++)
        {
            Console.WriteLine(ints2[i]);
        }

        int[,] matrix =
        {
            {32, 34, 45 },
            { 56, 54, 34},
            { 543, 34, 43}
        };

        int[][] jagged = {
            new int[] { 32, 45, 67},
            new int[] {6456, 5435, 54345, 545}
        };

        Console.WriteLine(jagged[1][1]);

        List<int> myList = new List<int>();
        myList.Add(23);

        Dictionary<string, string> myDictionary = new Dictionary<string, string>();

        myDictionary.Add(""щастлив"", ""happy"");

        Console.WriteLine(myDictionary[""щастлив""]);

        var tugay = ""String"";

        // var myInput = int.Parse(Console.ReadLine());

        foreach (var item in myList)
        {
            Console.WriteLine(item);
        }

        string[] places = { ""София"", ""пловдив"" };

        int counter = 0;
        for (int i = 0; i < places.Length; i++)
        {
            if (char.IsUpper(places[i][0]))
            {
                Console.WriteLine(places[i]);
                counter++;
            }
        }

        Console.WriteLine(""The cities with capital Letter are {0}"", counter);

        Console.WriteLine(""2093 to BIN {0}."", Convert.ToString(2093, 2));
        Console.WriteLine(""2093 to OCT {0}."", Convert.ToString(2093, 8));
        Console.WriteLine(""2093 to HEX {0}."", Convert.ToString(2093, 16));
        Console.WriteLine(""2093 In a number system with base/radix = 5 {0}."",
            Convert.ToString(2093, 2));

        Console.WriteLine();

        for (int i = ints2.Length - 1; i >= 0; i--)
        {
            Console.WriteLine(ints2[i]);
        }


        //Console.WriteLine(DateTime.Now);

        //int x1 = 0, y1 = 0;

        //while (true)
        //{
        //    Console.Clear();
        //    Console.SetCursorPosition(x1, y1);
        //    Console.WriteLine(DateTime.Now);
        //    Thread.Sleep(10);
        //    x1++;
        //    y1++;
        //}


        // 8.

        // IV
        //VI

        //44(10)

        //4 * 10 ^ 1 + 4 * 10 ^ 0 = 40 + 4

        //44(8)

        //4 * 8 ^ 1 + 4 * 8 ^ 0 = 32 + 4 = 36

        //44(5)
        //4 * 5 ^ 1 + 4 * 5 ^ 0 = 20 + 4 = 24

        //44

        //44 : 2 = 22 | 0
        //22 : 2 = 11 | 0
        //11 : 2 = 5 | 1
        //5 : 2 = 2 | 1
        //2 : 2 = 1 | 0
        //            1

        //101100(2) = 44(10)


        //0010 1100

        //2C

        //8421

        //101 100
        //5    4

        //54()

        //23.45

        //23 : 2 = 11 | 1
        //11 : 2 = 5 | 1
        //5 : 2 = 2 | 1
        //2 : 2 = 1 | 0

        //        1

        //10111.011

        //1.0111011 * 2 ^ 4

        //.45 * 2 = 0.9 | 0
        //0.9 * 2 = 0.8 | 1
        //0.8 * 2 = 0.6 | 1

        //123.56 => 1,23.56 * 10 ^ 2


        //number = 346
        //(r ^ n - 1) - number

        //(10 ^ 3 - 1) - 346 =
        //999
        //-
        //346
        //---- -
        //653

        //9999999999
        //-
        //4332423532
        //----------------
        //5667...


        //1111111111111
        //-
        //1010101111111
        //------------------
        //0101010000000

        //(r ^ n - 1) - number
        //(r ^ n) - number


        //7 - 3 = 4

        //7 + 7 = 1 | 4






        /*

        // ------ in a nutshell -----

        //a += 3; // a = a + 3;

        //// essentials
        //// 4.
        //Console.WriteLine();
        //string name = Console.ReadLine();
        //double n = double.Parse(Console.ReadLine());

        //// 5. Conditional logic
        //// 5.1.
        //if (a > 5)
        //{
        //    Console.WriteLine(""a > 5"");
        //}

        //if (a > 5)
        //{
        //    Console.WriteLine(""a > 5"");
        //}
        //else
        //{
        //    Console.WriteLine(""a < 5"");
        //}

        //Console.WriteLine(""Please enter your age: "");
        //int age = int.Parse(Console.ReadLine());
        //if (age > 0 && age <= 3)
        //{
        //    Console.WriteLine(""You are a baby"");
        //}
        //else if (age > 3 && age <= 12)
        //{
        //    Console.WriteLine(""You are a kid"");
        //}
        //else if (age > 12 && age <= 18)
        //{
        //    Console.WriteLine(""You are a teenager"");
        //}
        //else
        //{
        //    Console.WriteLine(""You are an adult"");
        //}


        //char firstLetter = Char.Parse(Console.ReadLine());
        //switch (firstLetter)
        //{
        //    case 'A':
        //    case 'N':
        //        Console.WriteLine(""Maybe your name is Nilyay"");
        //        break;
        //    default:
        //        Console.WriteLine(""I don't know"");
        //        break;
        //}


        //// 6. Loops

        //int i = 0;
        //while (i < 100)
        //{
        //    Console.WriteLine(i);
        //    i++;
        //}


        //do
        //{
        //    Console.WriteLine(""Please enter your age: "");
        //    age = int.Parse(Console.ReadLine());
        //} while (age < 0 && age > 120);



        //for (i = 0; i < 100; i++)
        //{
        //    Console.WriteLine(i);
        //}
        Greet(""Nilyay"");
        int[] ages = new int[10];
        ages[0] = 18;
        ages[5] = 17;

        foreach (int item in ages)
        {
            Console.WriteLine(item);
        }

        Greet(""Magi"");


        int number = 5698;
        int a1 = number / 1000;
        int a2 = (number / 100) % 10;
        int a3 = (number / 10) % 10;
        int a4 = number % 10;

        Console.WriteLine(""The number in reverse is {0}{1}{2}{3}"", a4, a3, a2, a1);
    }

    static void Greet(string name = ""Megan"")
    {
        Console.WriteLine(""Hello"" + name);
    }

    static int CalculateSum(int a, int b)
    {
        return a + b;
    }

    */


    }
}
"
rc9r0FGD,precraft_4ert.lua,Sashaiolh,Lua,Monday 6th of November 2023 04:55:40 AM CDT,"local component = require(""component"")
local fs = require(""filesystem"")
local shell = require(""shell"")
local event = require(""event"")
local unicode = require(""unicode"")
local term = require(""term"")
local g = component.gpu
local me = component.me_interface

local oc = require(""oc"")

if not fs.exists(""/home/BD.txt"") then
	oc.savef(""BD.txt"", {})
end

--------------------Настройки--------------------
local CBUTTON, CDRAW, CTEXT = 0x00ffff, 0x004575, 0xD38FFE -- текст кнопок, рамки, осн текст
local debug = true -- вкл дебаг (меню с недостающими крафтами и нехватной ресурсов)
local ADM = {['Sashaiolh']=true, ['HE_Sashaiolh']=true, ['Hapiks']=true} -- доступы к нажатиям
local scroll = 1 -- начало скролла
local precraft = true -- флаг осн цикла
local go = true -- включить идет ли проверка вещей
local WIDTH, HEIGHT = 80, 50
--------------------Настройки--------------------
local inputFind = """"
local guiPath, debugLog1, debugLog2 = {}, {}, {}
if debug then WIDTH, HEIGHT = 160, 50 end
g.setResolution(WIDTH,HEIGHT)
g.setForeground(CTEXT)

local function Clear() g.setBackground(0x000000) g.setForeground(0xD38FFE) g.fill(1,4,WIDTH,HEIGHT-4,"" "") end

local function DrawScrollContent()
	if guiPath[#guiPath]==""start"" or guiPath[#guiPath] == ""stop"" or guiPath[#guiPath] == ""go"" then
		for i = scroll, maxscroll do
			if content[i] then
				local k = i - scroll
				if i == posSelect then
					g.setBackground(0x1e1e1e)
					g.fill(11, 7+k, 58, 1, "" "")
					g.set(13,7+k, tostring(i.. "". ""..content[i].name))
					g.set(45, 7+k, tostring(content[i].count))
					g.set(60, 7+k, tostring(content[i].craftSize))
					g.setBackground(0x000000)
				else
					g.setBackground(0x000000)
					g.fill(11, 7+k, 58, 1, "" "")
					g.set(13,7+k, tostring(i.. "". ""..content[i].name))
					g.set(45, 7+k, tostring(content[i].count))
					g.set(60, 7+k, tostring(content[i].craftSize))
				end
			end
		end
	end
end

local function ScrollContent()
	local cont = {}
	if inputFind ~= nil and inputFind ~= """" then
		for key, data in pairs(content) do
			if unicode.lower(data.name):find(unicode.lower(inputFind)) then
				table.insert(cont, content[key])
			end
		end
		return cont
	else
		return content
	end
end

local function eScroll(_,_,_,_,zs,nick)
	if ADM[nick] then
		for key in pairs(scrolls) do
			for i = 1, #scrolls[key].ScrollIn do
				if scrolls[key].ScrollIn[i] == guiPath[#guiPath] then
					if not zs then
						scroll = 1
					elseif zs == 1 and scroll > 1 then
						scroll = scroll - 1
					elseif zs == -1 and maxscroll < #content then
						scroll = scroll + 1
					end
					maxscroll = scroll + scrolls[key].h - 1
					scrolls[key].action()
					content = ScrollContent()
					oc.drawscroll(scrolls[key].x, scrolls[key].y, scrolls[key].w, scrolls[key].h, scroll, #content, 0x1e1e1e, 0x004575)
					g.fill(scrolls[key].xGui+1,scrolls[key].yGui+1,scrolls[key].wGui-4,scrolls[key].hGui-2, "" "")
					DrawScrollContent()
				end
			end
		end
	end
end

local function Main()
	if guiPath[#guiPath] == ""start"" or guiPath[#guiPath] == ""stop"" or guiPath[#guiPath] == ""go"" then
		g.set(13, 5, ""Название предмета:"")
		g.set(45, 5, ""Кол-во:"")
		g.set(60, 5, ""Крафт:"")
		g.set(20,43, ""Для поиска введите название.."")
		oc.right(71,50, ""Всего ""..#dataItems.. "" крафтов"")
		g.fill(85,1, 75, 51, "" "")
		for i = 1, #debugLog1 do
			g.set(85, 4+i, tostring(debugLog1[i]))
		end
		for i = 1, #debugLog2 do
			g.set(85, 26+i, tostring(debugLog2[i]))
		end
	elseif guiPath[#guiPath] == ""change"" then
		g.set(13, 10, ""Название предмета: ""..dataItems[posSelect].name)
		g.set(13, 12, ""id предмета: ""..tostring(dataItems[posSelect].id))
		g.set(13, 14, ""dmg предмета: ""..tostring(dataItems[posSelect].dmg))
		g.set(13, 16, ""Количество поддержания: ""..tostring(dataItems[posSelect].count))
		g.set(13, 18, ""Размер крафта: ""..tostring(dataItems[posSelect].craftSize))
	end
end

local function DrawScrolls()
	for key in pairs(scrolls) do
		for i = 1, #scrolls[key].ScrollIn do
			if scrolls[key].ScrollIn[i] == guiPath[#guiPath] then
			scrolls[key].action()
			eScroll(_,_,_,_,nil,""HE_Sashaiolh"")
			oc.drawscroll(scrolls[key].x, scrolls[key].y, scrolls[key].w, scrolls[key].h, scroll, #content, 0x1e1e1e, 0x004575)
			oc.drawbutton(scrolls[key].xGui,scrolls[key].yGui,scrolls[key].wGui,scrolls[key].hGui,CBUTTON,CDRAW,"""")
			end
		end
	end
end

local function DrawButtons()
	for button in pairs(buttons) do
		for i = 1, #buttons[button].ButtonIn do
			if buttons[button].ButtonIn[i] == guiPath[#guiPath] and buttons[button].visible then
				oc.drawbutton(buttons[button].x,buttons[button].y,buttons[button].w, buttons[button].h, buttons[button].ctext, buttons[button].cbutton, buttons[button].text)
			end
		end
	end
end

local function toGui(gui, clear)
	if clear then
		guiPath[#guiPath] = nil
	end
	if guiPath[#guiPath] ~= gui then
		guiPath[#guiPath + 1] = gui
	end
	dataq, dataItems = nil, nil
	dataItems = oc.loadf(""BD.txt"")
	Clear()
	Main()
	DrawButtons()
	DrawScrolls()
end

local function Back(to)
    if to then 
        if to <= #guiPath then for i = 1, to do table.remove(guiPath, #guiPath) end end
    else
        table.remove(guiPath, #guiPath)
    end
	posSelect = nil
    Clear()
    Main()
	DrawButtons()
	DrawScrolls()
end

local function AddLogs(nameTable, log)
	if nameTable == ""ore"" then
		if #debugLog1 > 19 then table.remove(debugLog1, 1) end
		table.insert(debugLog1, log)
	else
		if #debugLog2 > 19 then table.remove(debugLog2, 1) end
		table.insert(debugLog2, log)
	end
	Main()
end

local function Check()
	for i = 1, #dataq do
		if not go then break end
		if not dataq[i].craft or dataq[i].craft.isDone() or dataq[i].craft.isCanceled() then
			dataq[i].craft = nil
			local itemsMe = me.getItemDetail({id = dataq[i].id, dmg = dataq[i].dmg})
			if itemsMe then
				local delta = dataq[i].count - itemsMe.basic().qty
				if delta > dataq[i].craftSize then delta = dataq[i].craftSize end
				if delta > 0 then
					local cpus = me.getCpus()
					for j = 1, #cpus do
						if not cpus[j].busy and cpus[j].storage == dataq[i].cpu then
							local craftables = me.getCraftables({name = dataq[i].id, damage = dataq[i].dmg})
							if craftables.n >= 1 then
								dataq[i].craft = craftables[1].request(delta, false, tostring(dataq[i].cpu))
								--AddLogs(""ore"", delta.. "" ""..dataq[i].count)
								if debug then
									local cancel, cancelmsg = dataq[i].craft.isCanceled()
									if not cancel and cancelmsg then
										if cancelmsg == ""computing"" then
											AddLogs(""ore"", dataq[i].name.. "" не хватает ресурсов "" .. cancelmsg)
										end
									elseif cancelmsg == ""request failed (missing resources?)"" then
										AddLogs(""ore"", dataq[i].name.. "" не хватает ресурсов "" .. cancelmsg)
									elseif cancelmsg then
										AddLogs(""ore"", dataq[i].name .. "" "".. cancelmsg)
									end
									os.sleep(0.5)
									break
								end
							elseif debug then
								AddLogs(""recipe"", dataq[i].name.. "" не имеет рецепта"")
							end
							break
						end
					end
				end
			end
		end
	end
	os.sleep(1)
	AddLogs(""ore"", "" "")
	AddLogs(""recipe"", "" "")
end

local function AddItem()
	changeitem = true
	if me.getStackInSlot(1) then
		g.fill(1,43, WIDTH, 1, "" "")
		g.set(14,43,""Введите название предмета:"") term.setCursor(40,43)
		local name = tostring(io.read()) g.fill(1,43,80,1, "" "")
		g.set(14,43,""Введите кол-во поддержания:"") term.setCursor(41,43)
		local count = tonumber(io.read()) g.fill(1,43,80,1, "" "")
		g.set(14,43,""Введите макс. объём крафта:"") term.setCursor(41,43)
		local craftSize = tonumber(io.read()) g.fill(1,43,80,1, "" "")
		table.insert(dataItems, {name=name, id = me.getStackInSlot(1).id,dmg = me.getStackInSlot(1).dmg, count = count, craftSize = craftSize, cpu = 65536})
		oc.savef(""BD.txt"", dataItems)
	else
		g.set(14, 43, ""Предмет не установлен в 1-й слот интерфейса"")
		os.sleep(2)
		g.fill(1, 43, WIDTH, 1, "" "")
	end
	Main()
	changeitem = false
end

local function RemoveItem()
	if posSelect and dataItems then
		for i = 1, #dataItems do
			if dataItems[i].name == content[posSelect].name then
				table.remove(dataItems, i)
				oc.savef(""BD.txt"", dataItems)
				eScroll(_,_,_,_,nil,""HE_Sashaiolh"")
				posSelect = nil
				return true
			end
		end
	end
end

local function EditItem()
	if posSelect and dataItems then
		for i = 1, #dataItems do
			if dataItems[i].name == content[posSelect].name then
				posSelect = i
				toGui(""change"")
				return true
			end
		end
	end
end

local function ChangeItem(action)
	if posSelect and dataItems then
		g.fill(1,45, WIDTH, 1, "" "")
		if action == ""changeName"" then
			g.set(14,45,""Введите название предмета:"") term.setCursor(40,45)
			dataItems[posSelect].name = tostring(io.read())
		elseif action == ""changeCount"" then
			g.set(14,45,""Введите кол-во поддержания:"") term.setCursor(41,45)
			dataItems[posSelect].count = tonumber(io.read())
		elseif action == ""changeCraftSize"" then
			g.set(14,45,""Введите макс. объём крафта:"") term.setCursor(41,45)
			dataItems[posSelect].craftSize = tonumber(io.read())
		end
		oc.savef(""BD.txt"", dataItems)
		g.fill(1, 45, WIDTH, 1, "" "")
		Main()
	end
end

local function eButton(_,_,x,y,_, nick)
	if ADM[nick] then
		for button in pairs(buttons) do
			if x >= buttons[button].x and x <= buttons[button].endX and y >= buttons[button].y and y <= buttons[button].endY then
				for i = 1, #buttons[button].ButtonIn do
					if buttons[button].ButtonIn[i] == guiPath[#guiPath] then
						yTouch = y
						buttons[button].action()
						return true
					end
				end
			
			end
		end
	end
end

local function InputWrite(_,_,key1, key2,nick)
	if ADM[nick] and not changeitem then
		for key in pairs(scrolls) do
			for i = 1, #scrolls[key].ScrollIn do
				if scrolls[key].ScrollIn[i] == guiPath[#guiPath] then
					local y = scrolls[key].iwY
					g.fill(20,y, 30, 1, "" "")
					if key1 == 8 then -- backspace
						inputFind = unicode.sub(inputFind, 1, -2)
					elseif key1 == 0 and key2 == 211 then -- delete
						inputFind = """"
					elseif key1 ~= 0 then -- keyboard
						if inputFind == nil or inputFind == """" then
							inputFind = unicode.char(key1)
						elseif unicode.len(inputFind) < 49 then
							inputFind = inputFind .. unicode.char(key1)
						end
					end
					if unicode.len(inputFind) < 30 and unicode.len(inputFind) > 0 then
						g.set(20,y, tostring(inputFind))
					elseif unicode.len(inputFind) >= 30 then
						g.set(20,y, tostring(inputFind:sub(unicode.len(inputFind)-29, unicode.len(inputFind))))-- отображение последних 20 символов
					else
						g.set(20,y, ""Для поиска введите название.."")
					end
					eScroll(_,_,_,_,nil,""HE_Sashaiolh"")
				end
			end
		end
	end
end

local function initButtons()
    for button in pairs(buttons) do
        buttons[button].endX = buttons[button].x + buttons[button].w - 1
        buttons[button].endY = buttons[button].y + buttons[button].h - 1
    end
end

local function LoadSystem()
	g.fill(1,1,WIDTH, HEIGHT, "" "")
	dataItems = oc.loadf(""BD.txt"")
	initButtons()
	etouch = event.listen(""touch"", eButton)
	escroll = event.listen(""scroll"", eScroll)
	ekeydown = event.listen(""key_down"", InputWrite)
	toGui(""start"")
	dataq = dataItems
	
	return true
end

buttons = {
	LOGO = {ButtonIn = {""start"", ""go"", ""stop"", ""change""}, visible = true, x = 10, y = 1, w = 62, h = 3, cbutton = 0x004575, ctext = 0x00ffff, text = ""PreCraft"", action = function()  end},
	Exit = {ButtonIn = {""start"", ""go"",""stop"", ""change""}, visible = false, x = 1, y = 1, w = 1, h = 1, cbutton = 0x004575, ctext = 0x00ffff, text = """", action = function() g.setResolution(160,50) event.cancel(etouch) event.cancel(ekeydown) event.cancel(escroll) precraft = false end},
	
	Select = {ButtonIn = {""stop""}, visible = false, x = 11, y = 7, w = 60, h = 35, text = """", action = function() posSelect = yTouch + scroll - 7 DrawScrollContent() end},
	Go = {ButtonIn = {""start"",""go""}, visible = true, x = 14, y = 47, w = 24, h = 3, cbutton = 0x28C730, ctext = 0x28C730, text = ""Go"", action = function() end},
	GoTrue = {ButtonIn = {""stop""}, visible = true, x = 14, y = 47, w = 24, h = 3, cbutton = 0x00ffff, ctext = 0x00ffff, text = ""Go"", action = function() toGui(""go"") dataq = nil dataq = dataItems go = true end},
	
	Stop = {ButtonIn = {""stop""}, visible = true, x = 43, y = 47, w = 24, h = 3, cbutton = 0xff0000, ctext = 0xff0000, text = ""Stop"", action = function() end},
	StopTrue = {ButtonIn = {""start"", ""go""}, visible = true, x = 43, y = 47, w = 24, h = 3, cbutton = 0x00ffff, ctext = 0x00ffff,text = ""Stop"", action = function() toGui(""stop"") go = false end},
	
	Add = {ButtonIn = {""stop""}, visible = true, x = 20, y = 45, w = 10, h = 1, cbutton = nil, ctext = 0x00ffff, text = ""[Добавить]"", action = function() AddItem() end},
	Change = {ButtonIn = {""stop""}, visible = true, x = 36, y = 45, w = 10, h = 1, cbutton = nil, ctext = 0x00ffff, text = ""[Изменить]"", action = function() EditItem() end},
	Remove = {ButtonIn = {""stop""}, visible = true, x = 54, y = 45, w = 9, h = 1, cbutton = nil, ctext = 0x00ffff, text = ""[Удалить]"", action = function() RemoveItem() end},
	-- сhange
	changeName = {ButtonIn = {""change""}, visible = true, x = 14, y = 35, w = 53, h = 3, cbutton = 0x004575, ctext = 0x00ffff, text = ""Изменить название"", action = function() ChangeItem(""changeName"") end},
	changeCount = {ButtonIn = {""change""}, visible = true, x = 14, y = 38, w = 53, h = 3, cbutton = 0x004575, ctext = 0x00ffff, text = ""Изменить количество поддержания"", action = function() ChangeItem(""changeCount"") end},
	changeCraftSize = {ButtonIn = {""change""}, visible = true, x = 14, y = 41, w = 53, h = 3, cbutton = 0x004575, ctext = 0x00ffff, text = ""Изменит размер крафта"", action = function() ChangeItem(""changeCraftSize"") end},
	changeBack = {ButtonIn = {""change""}, visible = true, x = 14, y = 47, w = 53, h = 3, cbutton = 0x004575, ctext = 0x00ffff, text = ""Назад"", action = function() Back() end},
}

scrolls = {
	Buy = {ScrollIn = {""start"", ""go"", ""stop""},iwY = 43, xGui = 10 , yGui = 6, wGui = 62, hGui = 37, x = 70, y = 7, w = 1, h = 35, action = function() content = dataItems end},
}

function loop()
	if LoadSystem() then
		while precraft do
			if go then
				g.set(1,1,""check"")
				Check()
			else
				g.set(1,1,""sleep"")
			end
			os.sleep(1)
		end
	end
end

ok, err = pcall(loop)


if not ok then
	event.cancel(etouch)
	event.cancel(escroll)
	event.cancel(ekeydown)
	computer.shutdown(true)
end"
iZBdDtNV,Untitled,kwest87,C#,Monday 6th of November 2023 04:52:16 AM CDT,"[StartCode]
using System;

namespace ConsoleApp30
{
    internal class Program
    {
        static void Main(string[] args)
        {
            char leftBracket = '(';
            char rightBracket = ')';
            string parentheses = ""((())())"";
            int parenthesesDepths = 0;
            int parenthesesMaximumDepths = 0;

            foreach (var sumbol in parentheses)
            {
                if (sumbol == leftBracket)
                {
                    parenthesesDepths++;

                    if (parenthesesDepths > parenthesesMaximumDepths)
                    {
                        parenthesesMaximumDepths = parenthesesDepths;
                    }
                }
                else if (sumbol == rightBracket)
                {
                    parenthesesDepths--;

                    if (parenthesesDepths < 0)
                    {
                        Console.WriteLine("" выражение не верно "");
                        break;
                    }
                }
            }

            if (parenthesesDepths == 0)
            {
                Console.WriteLine($""Выражение верно, максимальная вложенность {parenthesesMaximumDepths}"");
            }
            else if (parenthesesDepths > 0)
            {
                Console.WriteLine("" выражение не верно "");
            }
        }
    }
}
[EndCode]"
LbxkYAYh,test,S3mpx,Lua,Monday 6th of November 2023 04:50:42 AM CDT,"-- pastebin get LbxkYAYh tree.lua

-- [SETTINGS]
-- tree farm perimeter
pointA = { -- CURRENTLY STORED: SMP with da Boys
	['x'] = -1002,
	['z'] = 702,
	['y'] = 91
}
pointB = {
	['x'] = -1002,
	['z'] = 706,
	['y'] = 91
}
-- specifics
treeRows = 1
-- turtle
location = {
	['x'] = -998,
	['z'] = 704,
	['y'] = 91
}
direction = {
	['x'] = 0,
	['z'] = -1;
}
-- NORTH -z, SOUTH z
-- WEST -x, EAST x

-- check fuel
fuelLevel = turtle.getFuelLevel()
if(fuelLevel < 5000)
then 
    write(""fuel level too low \n"")
    write(""by "" .. (5000-fuelLevel) .. "" fuel \n"")
else 
    write(""sufficient fuel \n"")
end

-- implement break when fuel too low

-- [ LOCATE COORDINATES ]
--> Y-Axis
write(""checking Y-Axis ... \n"")
if(location['y'] ~= pointA['y'])
then 
    while(location['y'] ~= pointA['y'])
    do
        if(location['y'] > pointA['y'])
        then -- go down
            if(turtle.down() == false) then 
                write(""removing obstacle... \n"")
                turtle.digDown()
                turtle.down()
            end
        write(""moved down... \n"")
        location['y'] = location['y'] - 1
        else -- go up
            if(turtle.up() == false) then 
                write(""removing obstacle... \n"")
                turtle.digUp()
                turtle.up()
            end
        write(""moved up... \n"")
        location['y'] = location['y'] + 1
        end
    end
    write(""reached target Y-Axis ! \n"")
else 
    write(""already on target Y-Axis \n"")
end

--> Z-Axis
if(direction[""z""] == 0) then -- TURN TO NORTH
    if(direction[""x""] == 1)
	then -- turn south
        turtle.turnLeft()
    else -- turn north? XD
       	turtle.turnRight()
    end
    direction[""z""] = -1
    direction[""x""] = 0
    write(""turned to Z-Axis \n"")
end

write(""checking Z-Axis ... \n"")
if(location['z'] ~= pointA['z']) -- is on target?
then 
    while(location['z'] ~= pointA['z']) -- while isn't on target
    do
        if(location['z'] > pointA['z']) -- if target is north
        then -- go forward
            if(direction['z'] == -1) -- make sure to face north
            then
                if(turtle.forward() == false) then 
                    write(""removing obstacle... \n"")
                    turtle.dig()
                    turtle.forward()
                end
                write(""moved forward... \n"")
                location['z'] = location['z'] - 1
            else -- turn 18
                turtle.turnRight()
                turtle.turnRight()
                direction[""z""] = -1
                write(""adjusted direction... \n"")
            end
        else -- go back
            if(direction['z'] == 1) -- make sure to face south
            then
                if(turtle.forward() == false) then 
                    write(""removing obstacle... \n"")
                    turtle.dig()
                    turtle.forward()
                end
                write(""moved forward... \n"")
                location['z'] = location['z'] + 1
            else
                -- turn 180
                turtle.turnRight()
                turtle.turnRight()
                direction[""z""] = 1
                write(""adjusted direction... \n"")
            end
        end
    end
    write(""reached target Z-Axis ! \n"")
else 
    write(""already on target Z-Axis \n"")
end

--> X-Axis
if(direction[""x""] == 0) -- 
then 
    if(direction[""z""] == 1)
	then -- turn 
        turtle.turnRight()
    else -- turn  XD
       	turtle.turnLeft()
    end
    direction[""x""] = -1
    direction[""z""] = 0
    write(""turned to X-Axis \n"")
end

write(""checking X-Axis ... \n"")
if(location['x'] ~= pointA['x']) -- is on target?
then 
    while(location['x'] ~= pointA['x']) -- while isn't on target
    do
        if(location['x'] > pointA['x']) -- if target is north
        then -- go forward
            if(direction['x'] == -1) -- make sure to face north
            then
                if(turtle.forward() == false) then 
                    write(""removing obstacle... \n"")
                    turtle.dig()
                    turtle.forward()
                end
                write(""moved forward... \n"")
                location['x'] = location['x'] - 1
            else -- turn 18
                turtle.turnRight()
                turtle.turnRight()
                direction[""x""] = -1
                write(""adjusted direction... \n"")
            end
        else -- go back
            if(direction['x'] == 1) -- make sure to face south
            then
                if(turtle.forward() == false) then 
                    write(""removing obstacle... \n"")
                    turtle.dig()
                    turtle.forward()
                end
                write(""moved forward... \n"")
                location['x'] = location['x'] + 1
            else
                -- turn 180
                turtle.turnRight()
                turtle.turnRight()
                direction[""x""] = 1
                write(""adjusted direction... \n"")
            end
        end
    end
    write(""reached target X-Axis ! \n"")
else 
    write(""already on target X-Axis \n"")
end

write(""ALLAHU AKBAR ! \n"")
-- WIP

-- [locate tree row]
-- locate long side

-- NORTH OR SOUTH
if(pointA[""z""] > pointB[""z""])
then
    lenZ = pointA[""z""] - pointB[""z""]
    tarDir[""z""] = -1
else
    lenZ = pointB[""z""] - pointA[""z""]
    tarDir[""z""] = 1
end
    
-- WEST OR EAST
if(pointA[""x""] > pointB[""x""])
then
    lenX = pointA[""x""] - pointB[""x""]
    tarDir[""x""] = -1
else
    lenX = pointB[""x""] - pointA[""x""]
    tarDir[""X""] = 1
end
    
if(LenZ > lenX)
then
    -- change dir
else
    -- change dir
end
-- look at direction of point B
-- move 2 forward
-- turn left
-- move 1 forward

-- LOOP !!
-- [chop tree]
	-- dig
	-- forward
	-- digUp & Up till no obstacle (count for every time went up)
	-- go COUNT down
	-- go 1 backwards
	-- replant
	-- turn right
	-- move 3 forward
	-- turn left
	-- check if obstacle ? continue loop : position next row and do again

-- [Clear inventory]
-- get to drop off station
for i = 1, 16 do
    turtle.select(i)
    turtle.drop()
end

-- [Refueling]
-- * get to refuel station
if turtle.getFuelLevel() < 5000 then
    
end

-- wait (for fuel efficiency, so the turtle doesn't waste fuel walking around ungrown trees

-- VERSIONING AND OPTIMISATIONS TO CODE"
