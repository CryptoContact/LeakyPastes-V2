id,title,username,language,date,content
RVnwVcBQ,10 | Chase #10,CSOfficial,HTML 5,Monday 14th of August 2023 07:00:10 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnImageBlock"" style=""min-width:100%;"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td valign=""top"" style=""padding:9px"" class=""mcnImageBlockInner"">
                    <table align=""left"" width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnImageContentContainer"" style=""min-width:100%;"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" valign=""top"" style=""padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0;"">
                                
                                    
                                        <img align=""left"" alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/f4bb1c30-a1ae-ce09-5890-e34cbc8bc7ad.png"" width=""163.56"" style=""max-width:2560px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 12px; line-height: 125%;"">
                        
                            <div style=""text-align: center;"">&nbsp;</div>

<div style=""text-align: left;""><span style=""font-size:30px"">Password change required!</span></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 12px; line-height: 125%;"" valign=""top"">
                        
                            <br>
<span style=""font-size:14px"">Dear sir,</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: justify;""><span style=""font-size:14px"">We recently have determined that different computers have logged onto your Chase user profile account, and multiple password failures were present. before the logons. We strongly advice CHANGE YOUR PASSWORD.</span></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: justify;""><span style=""font-size:14px"">If this is not completed by <strong>August, 14, 2023</strong>, we will be forced to suspend your account indefinitely, as it may have been used for fraudulent purposes. Thank you for your cooperation.</span><br>
&nbsp;</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnButtonBlock"" style=""min-width:100%;"">
    <tbody class=""mcnButtonBlockOuter"">
        <tr>
            <td style=""padding-top:0; padding-right:18px; padding-bottom:18px; padding-left:18px;"" valign=""top"" align=""left"" class=""mcnButtonBlockInner"">
                <table border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnButtonContentContainer"" style=""border-collapse: separate !important;border-radius: 0px;background-color: #24A4D6;"">
                    <tbody>
                        <tr>
                            <td align=""center"" valign=""middle"" class=""mcnButtonContent"" style=""font-family: Arial; font-size: 15px; padding: 11px;"">
                                <a class=""mcnButton "" title="" Click here to Change Your Password"" href=""https://www.google.com/"" target=""_blank"" style=""font-weight: bold;letter-spacing: normal;line-height: 100%;text-align: center;text-decoration: none;color: #FFFFFF;""> Click here to Change Your Password</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <span style=""font-size:14px"">Thank you for your prompt attention to this matter,</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 125%;"">
                        
                            <span style=""font-size:14px"">We apologize for any inconvenience.<br>
Thank you for using Chase!</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnDividerBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnDividerBlockOuter"">
        <tr>
            <td class=""mcnDividerBlockInner"" style=""min-width: 100%; padding: 4px 18px;"">
                <table class=""mcnDividerContent"" style=""min-width: 100%;border-top: 2px solid #EAEAEA;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
                    <tbody><tr>
                        <td>
                            <span></span>
                        </td>
                    </tr>
                </tbody></table>
<!--            
                <td class=""mcnDividerBlockInner"" style=""padding: 18px;"">
                <hr class=""mcnDividerContent"" style=""border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;"" />
-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <span style=""font-size:14px"">Please do not reply to this e-mail. Mail sent to this address cannot beanswered.</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
6Cge4qrc,10 | Apple #10,CSOfficial,HTML 5,Monday 14th of August 2023 06:56:51 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table class=""mcnImageBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td style=""padding:9px"" class=""mcnImageBlockInner"" valign=""top"">
                    <table class=""mcnImageContentContainer"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" style=""padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0;"" valign=""top"">
                                
                                    
                                        <img alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/41cb3c56-6dfe-89cc-0b69-742ceb5ac064.png"" style=""max-width:197px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"" width=""31.52"" align=""right"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnDividerBlock"" style=""min-width:100%;"">
    <tbody class=""mcnDividerBlockOuter"">
        <tr>
            <td class=""mcnDividerBlockInner"" style=""min-width: 100%; padding: 12px 18px;"">
                <table class=""mcnDividerContent"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" style=""min-width: 100%;border-top: 2px solid #EAEAEA;"">
                    <tbody><tr>
                        <td>
                            <span></span>
                        </td>
                    </tr>
                </tbody></table>
<!--            
                <td class=""mcnDividerBlockInner"" style=""padding: 18px;"">
                <hr class=""mcnDividerContent"" style=""border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;"" />
-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 125%;"">
                        
                            Dear client,<br>
<br>
Your Apple ID was used when connected to iCloud and iMessage from an<br>
<br>
iPhone 5s appointed : iPhone Ahmed<br>
<br>
Data : 14 August 2023 a 05:23<br>
<br>
Operating System : iOS 6.1.3<br>
<br>
<span style=""font-size:13px"">If you've recently connected with this unit, you can ignore this email<br>
<br>
if not We're concerned that someone is using your Apple account without your knowledge.<br>
Recent activity from your account seems to have occurred from a suspicious location or<br>
under circumstance that may be different than usual<br>
<br>
<a href=""https://www.google.com/"" target=""_blank""><span style=""color:#3399ff""><u>Please confirm your Billing and change your Password by using this link</u></span></a><br>
<br>
<br>
<br>
TM and copyright ©&nbsp; 2023 Apple Inc</span>
                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
StZXVGq5,10 | Amazon #10,CSOfficial,HTML 5,Monday 14th of August 2023 06:56:48 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnImageBlock"" style=""min-width:100%;"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td valign=""top"" style=""padding:9px"" class=""mcnImageBlockInner"">
                    <table align=""left"" width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnImageContentContainer"" style=""min-width:100%;"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" valign=""top"" style=""padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0;"">
                                
                                    
                                        <img align=""left"" alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/7b59cd61-15ba-7955-f4a6-7fc607b8cfcc.png"" width=""135.35999999999999"" style=""max-width:2560px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnDividerBlock"" style=""min-width:100%;"">
    <tbody class=""mcnDividerBlockOuter"">
        <tr>
            <td class=""mcnDividerBlockInner"" style=""min-width: 100%; padding: 12px 18px;"">
                <table class=""mcnDividerContent"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" style=""min-width: 100%;border-top: 2px solid #EAEAEA;"">
                    <tbody><tr>
                        <td>
                            <span></span>
                        </td>
                    </tr>
                </tbody></table>
<!--            
                <td class=""mcnDividerBlockInner"" style=""padding: 18px;"">
                <hr class=""mcnDividerContent"" style=""border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;"" />
-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 150%;"">
                        
                            <div style=""text-align: justify;"">Dear Amazon Customer,<br>
<br>
<span style=""font-size:14px""><strong>YOUR ACCOUNT HAS BEEN LOCKED</strong></span><br>
<br>
Due to suspicious activity including several unusual transactions on your Amazon Account your account is suspended until further notice.<br>
<br>
To validate your identity, unfreeze your Account, and unwarted charges please, call our Security Support Team on the following number <span style=""color:#FF0000""><strong>IMMEDIATELY</strong></span> <strong>and be ready too provide your billing address, username and password :</strong><br>
&nbsp;</div>

<ul>
	<li style=""text-align: justify;"">&nbsp;555-5555<br>
	&nbsp;</li>
</ul>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 150%;"">
                        
                            <div style=""text-align: justify;"">After youve been verified your Account will be reactivated with in 24 hrs. If we do not here from you in three working days the charges on your Account will be non refundable!<br>
<br>
Regard,<br>
Amazon Customer Service<br>
<a href=""https://www.google.com/"" target=""_blank""><span style=""color:#3366cc""><u>Amazon.com</u></span></a></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
cbZhnCx1,10 | PayPal #10,CSOfficial,HTML 5,Monday 14th of August 2023 06:56:45 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnImageBlock"" style=""min-width:100%;"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td valign=""top"" style=""padding:9px"" class=""mcnImageBlockInner"">
                    <table align=""left"" width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnImageContentContainer"" style=""min-width:100%;"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" valign=""top"" style=""padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0;"">
                                
                                    
                                        <img align=""left"" alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/c60bffd8-6524-23bd-e256-733970fe05cf.png"" width=""157.92000000000002"" style=""max-width:2560px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnDividerBlock"" style=""min-width:100%;"">
    <tbody class=""mcnDividerBlockOuter"">
        <tr>
            <td class=""mcnDividerBlockInner"" style=""min-width: 100%; padding: 12px 18px;"">
                <table class=""mcnDividerContent"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" style=""min-width: 100%;border-top: 2px solid #EAEAEA;"">
                    <tbody><tr>
                        <td>
                            <span></span>
                        </td>
                    </tr>
                </tbody></table>
<!--            
                <td class=""mcnDividerBlockInner"" style=""padding: 18px;"">
                <hr class=""mcnDividerContent"" style=""border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;"" />
-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: left;"">&nbsp;</div>

<div style=""text-align: left;""><span style=""color:#3399ff""><span style=""font-size:23px"">You can't use PayPal anymore</span></span></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: left;"">&nbsp;</div>

<div style=""text-align: justify;"">At PayPal, we value a safe community in which all our customers can do business. We noticed activity on your account that's inconsistent with our User Agreement and can no longer offer you PayPal services.<br>
<br>
Any bank accont or credit card details linked to your PayPal account cannot be removed nor can it be used to create a new account. You can still log in and see your account information but you can't send or receive money. Any money in your balance will be held for 180 days, at which point we'll send you an email with instructions about transferring&nbsp;your money.<br>
&nbsp;</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnButtonBlock"" style=""min-width:100%;"">
    <tbody class=""mcnButtonBlockOuter"">
        <tr>
            <td style=""padding-top:0; padding-right:18px; padding-bottom:18px; padding-left:18px;"" valign=""top"" align=""left"" class=""mcnButtonBlockInner"">
                <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnButtonContentContainer"" style=""border-collapse: separate !important;border-radius: 4px;background-color: #1EA2EE;"">
                    <tbody>
                        <tr>
                            <td align=""center"" valign=""middle"" class=""mcnButtonContent"" style=""font-family: Arial; font-size: 14px; padding: 12px;"">
                                <a class=""mcnButton "" title=""Continue"" href=""https://www.google.com/"" target=""_blank"" style=""font-weight: bold;letter-spacing: normal;line-height: 100%;text-align: center;text-decoration: none;color: #FFFFFF;"">Continue</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
    </tbody>
</table><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnTextBlock"" style=""min-width:100%;"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td valign=""top"" class=""mcnTextBlockInner"" style=""padding-top:9px;"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table align=""left"" border=""0"" cellpadding=""0"" cellspacing=""0"" style=""max-width:100%; min-width:100%;"" width=""100%"" class=""mcnTextContentContainer"">
                    <tbody><tr>
                        
                        <td valign=""top"" class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 14px; line-height: 150%;"">
                        
                            <div style=""text-align: left;"">Reference # PP- ##NUMBER7##</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
x3XkJMWF,10 | Office365 #10,CSOfficial,HTML 5,Monday 14th of August 2023 06:56:29 AM CDT,"<!doctype html>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"">
    <head>
        <!-- NAME: 1 COLUMN - FULL WIDTH -->
        <!--[if gte mso 15]>
        <xml>
            <o:OfficeDocumentSettings>
            <o:AllowPNG/>
            <o:PixelsPerInch>96</o:PixelsPerInch>
            </o:OfficeDocumentSettings>
        </xml>
        <![endif]-->
        <meta charset=""UTF-8"">
        <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
        <title>*|MC:SUBJECT|*</title>
        
    <style type=""text/css"">
		p{
			margin:10px 0;
			padding:0;
		}
		table{
			border-collapse:collapse;
		}
		h1,h2,h3,h4,h5,h6{
			display:block;
			margin:0;
			padding:0;
		}
		img,a img{
			border:0;
			height:auto;
			outline:none;
			text-decoration:none;
		}
		body,#bodyTable,#bodyCell{
			height:100%;
			margin:0;
			padding:0;
			width:100%;
		}
		.mcnPreviewText{
			display:none !important;
		}
		#outlook a{
			padding:0;
		}
		img{
			-ms-interpolation-mode:bicubic;
		}
		table{
			mso-table-lspace:0pt;
			mso-table-rspace:0pt;
		}
		.ReadMsgBody{
			width:100%;
		}
		.ExternalClass{
			width:100%;
		}
		p,a,li,td,blockquote{
			mso-line-height-rule:exactly;
		}
		a[href^=tel],a[href^=sms]{
			color:inherit;
			cursor:default;
			text-decoration:none;
		}
		p,a,li,td,body,table,blockquote{
			-ms-text-size-adjust:100%;
			-webkit-text-size-adjust:100%;
		}
		.ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font{
			line-height:100%;
		}
		a[x-apple-data-detectors]{
			color:inherit !important;
			text-decoration:none !important;
			font-size:inherit !important;
			font-family:inherit !important;
			font-weight:inherit !important;
			line-height:inherit !important;
		}
		.templateContainer{
			max-width:600px !important;
		}
		a.mcnButton{
			display:block;
		}
		.mcnImage,.mcnRetinaImage{
			vertical-align:bottom;
		}
		.mcnTextContent{
			word-break:break-word;
		}
		.mcnTextContent img{
			height:auto !important;
		}
		.mcnDividerBlock{
			table-layout:fixed !important;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		body,#bodyTable{
			/*@editable*/background-color:#FAFAFA;
		}
	/*
	@tab Page
	@section Background Style
	@tip Set the background color and top border for your email. You may want to choose colors that match your company's branding.
	*/
		#bodyCell{
			/*@editable*/border-top:0;
		}
	/*
	@tab Page
	@section Heading 1
	@tip Set the styling for all first-level headings in your emails. These should be the largest of your headings.
	@style heading 1
	*/
		h1{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:26px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 2
	@tip Set the styling for all second-level headings in your emails.
	@style heading 2
	*/
		h2{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:22px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 3
	@tip Set the styling for all third-level headings in your emails.
	@style heading 3
	*/
		h3{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:20px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Page
	@section Heading 4
	@tip Set the styling for all fourth-level headings in your emails. These should be the smallest of your headings.
	@style heading 4
	*/
		h4{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:18px;
			/*@editable*/font-style:normal;
			/*@editable*/font-weight:bold;
			/*@editable*/line-height:125%;
			/*@editable*/letter-spacing:normal;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Style
	@tip Set the background color and borders for your email's preheader area.
	*/
		#templatePreheader{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Preheader
	@section Preheader Text
	@tip Set the styling for your email's preheader text. Choose a size and color that is easy to read.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Preheader
	@section Preheader Link
	@tip Set the styling for your email's preheader links. Choose a color that helps them stand out from your text.
	*/
		#templatePreheader .mcnTextContent a,#templatePreheader .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Header
	@section Header Style
	@tip Set the background color and borders for your email's header area.
	*/
		#templateHeader{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:0;
		}
	/*
	@tab Header
	@section Header Text
	@tip Set the styling for your email's header text. Choose a size and color that is easy to read.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Header
	@section Header Link
	@tip Set the styling for your email's header links. Choose a color that helps them stand out from your text.
	*/
		#templateHeader .mcnTextContent a,#templateHeader .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Body
	@section Body Style
	@tip Set the background color and borders for your email's body area.
	*/
		#templateBody{
			/*@editable*/background-color:#FFFFFF;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Body
	@section Body Text
	@tip Set the styling for your email's body text. Choose a size and color that is easy to read.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/color:#202020;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:16px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:left;
		}
	/*
	@tab Body
	@section Body Link
	@tip Set the styling for your email's body links. Choose a color that helps them stand out from your text.
	*/
		#templateBody .mcnTextContent a,#templateBody .mcnTextContent p a{
			/*@editable*/color:#007C89;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	/*
	@tab Footer
	@section Footer Style
	@tip Set the background color and borders for your email's footer area.
	*/
		#templateFooter{
			/*@editable*/background-color:#FAFAFA;
			/*@editable*/background-image:none;
			/*@editable*/background-repeat:no-repeat;
			/*@editable*/background-position:center;
			/*@editable*/background-size:cover;
			/*@editable*/border-top:0;
			/*@editable*/border-bottom:0;
			/*@editable*/padding-top:9px;
			/*@editable*/padding-bottom:9px;
		}
	/*
	@tab Footer
	@section Footer Text
	@tip Set the styling for your email's footer text. Choose a size and color that is easy to read.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/color:#656565;
			/*@editable*/font-family:Helvetica;
			/*@editable*/font-size:12px;
			/*@editable*/line-height:150%;
			/*@editable*/text-align:center;
		}
	/*
	@tab Footer
	@section Footer Link
	@tip Set the styling for your email's footer links. Choose a color that helps them stand out from your text.
	*/
		#templateFooter .mcnTextContent a,#templateFooter .mcnTextContent p a{
			/*@editable*/color:#656565;
			/*@editable*/font-weight:normal;
			/*@editable*/text-decoration:underline;
		}
	@media only screen and (min-width:768px){
		.templateContainer{
			width:600px !important;
		}

}	@media only screen and (max-width: 480px){
		body,table,td,p,a,li,blockquote{
			-webkit-text-size-adjust:none !important;
		}

}	@media only screen and (max-width: 480px){
		body{
			width:100% !important;
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnRetinaImage{
			max-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImage{
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer{
			max-width:100% !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnBoxedTextContentContainer{
			min-width:100% !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupContent{
			padding:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent{
			padding-top:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent{
			padding-top:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardBottomImageContent{
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockInner{
			padding-top:0 !important;
			padding-bottom:0 !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageGroupBlockOuter{
			padding-top:9px !important;
			padding-bottom:9px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnTextContent,.mcnBoxedTextContentColumn{
			padding-right:18px !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcnImageCardLeftImageContent,.mcnImageCardRightImageContent{
			padding-right:18px !important;
			padding-bottom:0 !important;
			padding-left:18px !important;
		}

}	@media only screen and (max-width: 480px){
		.mcpreview-image-uploader{
			display:none !important;
			width:100% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 1
	@tip Make the first-level headings larger in size for better readability on small screens.
	*/
		h1{
			/*@editable*/font-size:22px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 2
	@tip Make the second-level headings larger in size for better readability on small screens.
	*/
		h2{
			/*@editable*/font-size:20px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 3
	@tip Make the third-level headings larger in size for better readability on small screens.
	*/
		h3{
			/*@editable*/font-size:18px !important;
			/*@editable*/line-height:125% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Heading 4
	@tip Make the fourth-level headings larger in size for better readability on small screens.
	*/
		h4{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Boxed Text
	@tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		.mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Visibility
	@tip Set the visibility of the email's preheader on small screens. You can hide it to save space.
	*/
		#templatePreheader{
			/*@editable*/display:block !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Preheader Text
	@tip Make the preheader text larger in size for better readability on small screens.
	*/
		#templatePreheader .mcnTextContent,#templatePreheader .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Header Text
	@tip Make the header text larger in size for better readability on small screens.
	*/
		#templateHeader .mcnTextContent,#templateHeader .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Body Text
	@tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px.
	*/
		#templateBody .mcnTextContent,#templateBody .mcnTextContent p{
			/*@editable*/font-size:16px !important;
			/*@editable*/line-height:150% !important;
		}

}	@media only screen and (max-width: 480px){
	/*
	@tab Mobile Styles
	@section Footer Text
	@tip Make the footer content text larger in size for better readability on small screens.
	*/
		#templateFooter .mcnTextContent,#templateFooter .mcnTextContent p{
			/*@editable*/font-size:14px !important;
			/*@editable*/line-height:150% !important;
		}

}</style></head>
    <body>
        <!--*|IF:MC_PREVIEW_TEXT|*-->
        <!--[if !gte mso 9]><!----><span class=""mcnPreviewText"" style=""display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"">*|MC_PREVIEW_TEXT|*</span><!--<![endif]-->
        <!--*|END:IF|*-->
        <center>
            <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" height=""100%"" width=""100%"" id=""bodyTable"">
                <tr>
                    <td align=""center"" valign=""top"" id=""bodyCell"">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
                            <tr>
                                <td align=""center"" valign=""top"" id=""templatePreheader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""preheaderContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateHeader"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""headerContainer""><table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""mcnImageBlock"" style=""min-width:100%;"">
    <tbody class=""mcnImageBlockOuter"">
            <tr>
                <td valign=""top"" style=""padding:0px"" class=""mcnImageBlockInner"">
                    <table align=""left"" width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""mcnImageContentContainer"" style=""min-width:100%;"">
                        <tbody><tr>
                            <td class=""mcnImageContent"" valign=""top"" style=""padding-right: 0px; padding-left: 0px; padding-top: 0; padding-bottom: 0;"">
                                
                                    
                                        <img align=""left"" alt="""" src=""https://mcusercontent.com/439bbca91da01d1cb0e13e7b4/images/6c213d73-ed91-a38e-5f77-a588a0d24084.png"" width=""180"" style=""max-width:1024px; padding-bottom: 0; display: inline !important; vertical-align: bottom;"" class=""mcnImage"">
                                    
                                
                            </td>
                        </tr>
                    </tbody></table>
                </td>
            </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateBody"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""bodyContainer""><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;""><br>
Your domain's Microsoft Office 365 for business account has been suspended.</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;"">Go to the sig-in page to reactivate your account, https://portal.office.com</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;"">Thank you for choosing to host your iT solutions with Microsoft.</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;"">Sincerely,<br>
The Microsoft Office 365 Team</div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table class=""mcnTextBlock"" style=""min-width:100%;"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"">
    <tbody class=""mcnTextBlockOuter"">
        <tr>
            <td class=""mcnTextBlockInner"" style=""padding-top:9px;"" valign=""top"">
              	<!--[if mso]>
				<table align=""left"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""100%"" style=""width:100%;"">
				<tr>
				<![endif]-->
			    
				<!--[if mso]>
				<td valign=""top"" width=""600"" style=""width:600px;"">
				<![endif]-->
                <table style=""max-width:100%; min-width:100%;"" class=""mcnTextContentContainer"" width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" align=""left"">
                    <tbody><tr>
                        
                        <td class=""mcnTextContent"" style=""padding: 0px 18px 9px; font-size: 13px; line-height: 125%;"" valign=""top"">
                        
                            <div style=""text-align: justify;""><span style=""font-size:13px"">This is a mandatory service communication. To seet your contact preferences for other<br>
communications.</span></div>

                        </td>
                    </tr>
                </tbody></table>
				<!--[if mso]>
				</td>
				<![endif]-->
                
				<!--[if mso]>
				</tr>
				</table>
				<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                            <tr>
                                <td align=""center"" valign=""top"" id=""templateFooter"">
                                    <!--[if (gte mso 9)|(IE)]>
                                    <table align=""center"" border=""0"" cellspacing=""0"" cellpadding=""0"" width=""600"" style=""width:600px;"">
                                    <tr>
                                    <td align=""center"" valign=""top"" width=""600"" style=""width:600px;"">
                                    <![endif]-->
                                    <table align=""center"" border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"" class=""templateContainer"">
                                        <tr>
                                            <td valign=""top"" class=""footerContainer""></td>
                                        </tr>
                                    </table>
                                    <!--[if (gte mso 9)|(IE)]>
                                    </td>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <script type=""text/javascript""  src=""/pJi8QXkbd3AaES_YIOlkpuWF/NiQ7LktzDr/Qk1QICEiIw/XmgnLXE/cIwQ""></script></body>
</html>"
BZ9kzZ6S,data664,TestGuy1,JSON,Monday 14th of August 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a3ce789694542500daea800197e3a6761c0a453a4c720dbb219ab0928678e2b4fc15d29ff6ed22403b9fd5e049c38a6c72a2794357ca4fdfdbcdae274df645bdd71147a90eaff5b7fd5e9520defede4bdc47748620a5e3bf487d7249e3f092ed6615e3c8c69e22ca4b458a73ea12043c83185ab385cff4528ba0c6d1e61557ab',
  otherdata: [
    'ec77f9c6ae314ff7547ad25db9c67813',
    '0f62b449f2a7a0e9f10ba03c0258fe60',
    'c9494324c4cfc8d0ed308e8a36fb215a',
    '2565dc7379c531cb30ed144884dbeb39',
    'cfcb59109c382401211c77edb209b75b',
    'a8981656931da7f081c7fe1fed6b58bb',
    '0395a248ef847ac85b641ffd26aae889',
    'cb383d7d0014a3e7a534732bdaf2246e'
  ]
}"
LVQr4idz,3D MO,Salvens,C++,Monday 14th of August 2023 05:52:36 AM CDT,"#include <iostream>
#include <vector>
#include <cmath>
#include <string>
#include <algorithm>
#include <iomanip>
#include <map>
#include <set>
#include <bitset>
#include <fstream>
#include <unordered_set>
#include <unordered_map>
#include <ext/pb_ds/assoc_container.hpp>
#include <stack>
#include <queue>
#include <complex>


using namespace std;
using namespace __gnu_pbds;



/*#pragma GCC optimize(""Ofast"")
#pragma GCC optimize(""no-stack-protector"")
#pragma GCC optimize(""unroll-loops"")
#pragma GCC target(""sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native"")
#pragma GCC optimize(""fast-math"")*/

/*
#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,avx,tune=native"")
#pragma GCC target(""avx2"")
 #pragma GCC optimize(""Ofast"")
#pragma GCC optimization(""unroll-loops"")
 #pragma GCC optimization(""O3"")
*/

//#define int long long
#define ll long long
//#define int short int
#define eb emplace_back
#define pb push_back
#define ld long double
//#define ld double
#define mp make_pair
#define f first
#define s second
#define gleg(x) return cout << x, 0
#define pii pair <int, int>
#define deb(a) cerr << #a << "" = "" << a << '\n';
//#define sz(x) (int)s.size();
#define fast() {     ios_base::sync_with_stdio(0);     cin.tie(0);     cout << fixed << setprecision(9);     cerr << fixed << setprecision(12); }

template < typename firstType, typename secondType = null_type, class compare = less < firstType > >
struct sett {
    typedef tree <
            firstType,
            secondType,
            compare,
            rb_tree_tag,
            tree_order_statistics_node_update
    > _ ;
};


const int INF = 1e9 + 7;
const ld EPS = 1e-9;
const int MAXI = 350;
const int MOD = 998244353;
const int MOD1 = 1e9 + 7;
const int MAXST = 2000000;
const int P = 31;
const int P1 = 37;
const int N = 5100000;
const ld PI = 3.14159265358979323;
const int bp = 23;
//const int sz = 1 << bp;


ostream &operator<<(ostream &stream, const pair <int, int> &p) {
    stream << p.first << ' ' << p.second << ' ';
    return stream;
}

struct rq{
    int l, r, tm;

    rq(int _l, int _r, int _tm){
        l = _l;
        r = _r;
        tm = _tm;
    }

};

struct u {
    bool f;
    int pos, prx, x;

    u(){
        f = false;
    }

    u(int _pos, int _prx, int _x){
        f = true;
        pos  = _pos;
        prx = _prx;
        x = _x;
    }
};

int k;

bool cmp(rq &a, rq &b){
    if (a.l / k == b.l / k){
        if (a.r / k == b.r / k)
            return a.tm < b.tm;
        return ((a.r * (a.l / k % 2 == 1 ? -1 : 1)) < (b.r * (a.l / k % 2 == 1 ? -1 : 1)));
    }
    return a.l < b.l;
}

int cnt[310000], mx[310000];

void del(int x){
    if (cnt[x] == 1){
        mx[cnt[x]]--;
        cnt[x]--;
    }
    else{
        mx[cnt[x]]--;
        cnt[x]--;
        mx[cnt[x]]++;
    }
}

void add(int x){
    if (cnt[x] == 0){
        cnt[x]++;
        mx[cnt[x]]++;
    }
    else{
        mx[cnt[x]]--;
        cnt[x]++;
        mx[cnt[x]]++;
    }
}

signed main(){
    fast();
    srand(time(0));
    /*#ifdef _LOCAL
        freopen(""input.txt"", ""r"", stdin);
        freopen(""output.txt"", ""w"", stdout);
    #endif*/
    int n, m;
    cin >> n >> m;
    vector <int> a(n);
    unordered_map <int, int> p;

    for (int i = 0; i < n; i++){
        cin >> a[i];
        if (p.find(a[i]) == p.end())
            p[a[i]] = p.size();
        a[i] = p[a[i]];
    }
    vector <int> a1 = a;

    vector <rq> req;
    vector <u> upd(m + 10, u());
    for (int q = 0; q < m; q++){
        int c, l, r;
        cin >> c >> l >> r;

        if (c == 1){
            l--, r--;
            req.eb(rq(l, r, q));
        } else {
            l--;
            if (p.find(r) == p.end())
                p[r] = p.size();

            r = p[r];
            upd[q] = u(l, a1[l], r);
            a1[l] = r;
        }
    }

    k = 3500;

    sort(req.begin(), req.end(), cmp);

    int l = 0, r = -1, t = -1;

    vector <pair <int, int>> ans;
    //sqmex st = sqmex(n + m);


    for (int q = 0; q < (int)req.size(); q++){
        int l1 = req[q].l, r1 = req[q].r, tm = req[q].tm;

        while (r < r1){
            r++;
            add(a[r]);
        }

        while (l > l1){
            l--;
            add(a[l]);
        }

        while (r > r1){
            del(a[r]);
            r--;
        }

        while (l < l1){
            del(a[l]);
            l++;
        }

        while (t < tm) {
            t++;
            if (upd[t].f) {
                if (l <= upd[t].pos && r >= upd[t].pos) {
                    del(a[upd[t].pos]);
                    add(upd[t].x);
                }

                a[upd[t].pos] = upd[t].x;
            }
        }

        while (t > tm) {
            if (upd[t].f) {
                if (l <= upd[t].pos && r >= upd[t].pos){
                    del(a[upd[t].pos]);
                    add(upd[t].prx);
                }

                a[upd[t].pos] = upd[t].prx;
            }

            t--;
        }

        int cur;
        for (int i = 1; i < (int)3e5; i++){
            if (mx[i] == 0) {
                cur = i;
                break;
            }
        }
        ans.pb({req[q].tm, cur});
    }

    sort(ans.begin(), ans.end());

    for (auto i: ans)
        cout << i.s << '\n';

    return 0;
}"
MmAkjx09,Untitled,lawre,JavaScript,Monday 14th of August 2023 05:26:00 AM CDT,"
(function() {
    'use strict';

    function setDefaultValue() {
        var selectElement = document.querySelector('select[name=""formatoOut""]');
        if (selectElement) {
            var options = selectElement.options;
            for (var i = 0; i < options.length; i++) {
                if (options[i].value === ""XLS"") {
                    options[i].selected = true;
                    break;
                }
            }
            // Trigger the ""change"" event to update the Chosen combobox
            var event = new Event('change', { bubbles: true });
            selectElement.dispatchEvent(event);
        }
    }

    // Wait for the page to load
    window.addEventListener('load', function() {
        // Call the function to set the default value
        setDefaultValue();
    });
})();"
eSxvHMpB,JNEWS || Change Truncates Height,fauzanjeg,CSS,Monday 14th of August 2023 05:17:21 AM CDT,"/* Change Truncates Height */
.entry-content .content-truncate.mobile-truncate.content-inner {
    height: 20em;
}"
wPGmwVYk,"修复激光测距采矿，自动停止,手动停止",jaklsfjlsak,Lua,Monday 14th of August 2023 04:05:32 AM CDT,"term.clear()
local laser = peripheral.find(""warpdriveLaser"")
local mininglasers = {}
local sides = peripheral.getNames()
local miningActive = false

local function saveZeroLayersCount(count)
  local file = fs.open(""zero_layers.txt"", ""w"")
  file.write(tostring(count))
  file.close()
end

local function getZeroLayersCount()
  if fs.exists(""zero_layers.txt"") then
    local file = fs.open(""zero_layers.txt"", ""r"")
    local count = tonumber(file.readAll())
    file.close()
    return count
  end
  return 0
end

for _, side in pairs(sides) do
  if peripheral.getType(side) == ""warpdriveMiningLaser"" then
    table.insert(mininglasers, peripheral.wrap(side))
  end
end

laser.beamFrequency(1420)

if not laser then
  print(""No warpdriveLaser detected"")
  os.exit()
end

if #mininglasers == 0 then
  print(""No warpdriveMiningLaser detected"")
  os.exit()
end

print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")

-- Loop to wait for key events
while true do
  local event, key = os.pullEvent(""key"")

  if key == 50 and not miningActive then -- 'M' key
    miningActive = true
    local _, laserY, _ = laser.getLocalPosition()
    local targetY = 0
    local consecutiveZeroLayers = getZeroLayersCount() -- Initialize here

    repeat
      laser.emitBeam(0, -1, 0)
      os.sleep(1)
      _, _, targetY = laser.getScanResult()
    until targetY ~= 0

    local mineTarget = laserY - targetY - 1
    print(""Target is: "" .. mineTarget .. "" blocks below"")

    for _, mininglaser in pairs(mininglasers) do
      mininglaser.offset(mineTarget)
      mininglaser.enable(true)
    end

    -- Periodically check the mining state
    while miningActive do
      os.sleep(1)
      local state, isActive, energy, currentLayer, mined, total = mininglasers[1].state()

      if total == 0 then
        consecutiveZeroLayers = consecutiveZeroLayers + 1
      else
        consecutiveZeroLayers = 0
      end

      saveZeroLayersCount(consecutiveZeroLayers)

      if consecutiveZeroLayers >= 3 then
        print(""3 consecutive layers with 0 total blocks detected. Stopping mining."")
        print("""")
        print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")
        for _, mininglaser in pairs(mininglasers) do
          mininglaser.enable(false)
        end
        fs.delete(""zero_layers.txt"")
        miningActive = false -- Stop the mining loop
        break
      end
    end
  elseif key == 83 then -- 'S' key
    for _, mininglaser in pairs(mininglasers) do
      mininglaser.enable(false)
    end
    miningActive = false
  end
end
"
T8Y0h7vE,Untitled,zbx1425,JavaScript,Monday 14th of August 2023 03:54:48 AM CDT,"function renderTrainParticles(ctx, state, train, trainExt, trainInAir) {
  if (!foundMadParticle) return;

  for (i = 0; i < train.trainCars; i++) {
    zPos = 0;
    if (i == 0 && train.trainCars == 1) {
      zPos = 0;
    } else if (i == 0) {
      zPos = 3;
    } else if (i == train.trainCars - 1) {
      zPos = -3;
    } else {
      zPos = false;
    }

    if (zPos !== false && trainInAir) {
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(3.8, 3.5, zPos));
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(-3.8, 3.5, zPos));
    }
    if (i != train.trainCars - 1 && train.trainCars > 1 && trainInAir) {
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(3.8, 3.5, -5));
      addEngineParticles(trainExt.lastWorldPose[i], new Vector3f(-3.8, 3.5, -5));
    }
  }
}

// int targetParticle, SpriteFrom spriteFrom, int lifeTime,
// InheritableBoolean alwaysRender, int amount,
// double px, double py, double pz, double xDiffuse, double yDiffuse, double zDiffuse,
// double vx, double vy, double vz, double vxDiffuse, double vyDiffuse, double vzDiffuse,
// float friction, float gravity, InheritableBoolean collision, int bounceTime,
// double horizontalRelativeCollisionDiffuse, double verticalRelativeCollisionBounce,
// float afterCollisionFriction, float afterCollisionGravity,
// InheritableBoolean interactWithEntity,
// double horizontalInteractFactor, double verticalInteractFactor,
// ParticleRenderTypes renderType, float r, float g, float b,
// float beginAlpha, float endAlpha, ChangeMode alphaMode,
// float beginScale, float endScale, ChangeMode scaleMode,
// boolean haveChild, MadParticleOption child,
// float rollSpeed,
// float xDeflection, float xDeflectionAfterCollision,
// float zDeflection, float zDeflectionAfterCollision,
// float bloomFactor,
// CompoundTag meta

function addEngineParticles(basePose, originOffset) {
  particleOrigin = basePose.transform(originOffset);
  particleDirection = new Vector3f(0, -0.8, 0);

  particleOption = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:campfire_cosy_smoke"")),
    SpriteFrom.RANDOM, 10,
    InheritableBoolean.TRUE, 16,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.3, 0.5, 0.3,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0.2, 0.2, 0.2,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0, 0,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1, 1,
    1, 0.6, ChangeMode.LINEAR,
    6, 12, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    0,
    new CompoundTag()
  );
  AddParticleHelper.addParticle(particleOption);

  particleDirection = new Vector3f(0, -0.4, 0);
  particleOption = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:flame"")),
    SpriteFrom.RANDOM, 5,
    InheritableBoolean.FALSE, 4,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.5, 0.5, 0.5,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0.6, 0.2, 0.6,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0, 0,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1, 1,
    1, 1, ChangeMode.LINEAR,
    2, 0, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    0,
    new CompoundTag()
  );
  AddParticleHelper.addParticle(particleOption);

  originOffset.add(0, 6, 0);
  particleOrigin = basePose.transform(originOffset);
  particleDirection = new Vector3f(0, -0.6, 0);
  particleOption = new MadParticleOption(
    Resources.getParticleTypeId(Resources.identifier(""minecraft:smoke"")),
    SpriteFrom.RANDOM, 5,
    InheritableBoolean.FALSE, 4,
    particleOrigin.x(), particleOrigin.y(), particleOrigin.z(), 0.5, 0.5, 0.5,
    particleDirection.x(), particleDirection.y(), particleDirection.z(), 0, 0.2, 0,
    0.98, 0, InheritableBoolean.TRUE, 0,
    0, 0,
    0.98, 0,
    InheritableBoolean.FALSE,
    0, 0,
    ParticleRenderTypes.PARTICLE_SHEET_TRANSLUCENT, 1, 1, 1,
    1, 1, ChangeMode.LINEAR,
    0.1, 2, ChangeMode.LINEAR,
    false, null,
    0,
    0, 0,
    0, 0,
    0,
    new CompoundTag()
  );
  AddParticleHelper.addParticle(particleOption);

}"
DYw3Ebdv,dest修复激光测距采矿，自动停止,jaklsfjlsak,Lua,Monday 14th of August 2023 03:49:16 AM CDT,"term.clear()
local laser = peripheral.find(""warpdriveLaser"")
local mininglasers = {}
local sides = peripheral.getNames()

local function saveZeroLayersCount(count)
  local file = fs.open(""zero_layers.txt"", ""w"")
  file.write(tostring(count))
  file.close()
end

local function getZeroLayersCount()
  if fs.exists(""zero_layers.txt"") then
    local file = fs.open(""zero_layers.txt"", ""r"")
    local count = tonumber(file.readAll())
    file.close()
    return count
  end
  return 0
end

for _, side in pairs(sides) do
  if peripheral.getType(side) == ""warpdriveMiningLaser"" then
    table.insert(mininglasers, peripheral.wrap(side))
  end
end

laser.beamFrequency(1420)

if not laser then
  print(""No warpdriveLaser detected"")
  os.exit()
end

if #mininglasers == 0 then
  print(""No warpdriveMiningLaser detected"")
  os.exit()
end

print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")

-- Loop to wait for key events
while true do
  local event, key = os.pullEvent(""key"")

  if key == 50 then
    local _, laserY, _ = laser.getLocalPosition()
    local targetY = 0

    repeat
      laser.emitBeam(0, -1, 0)
      os.sleep(1)
      _, _, targetY = laser.getScanResult()
    until targetY ~= 0

    local mineTarget = laserY - targetY - 1
    print(""Target is: "" .. mineTarget .. "" blocks below"")

    for _, mininglaser in pairs(mininglasers) do
      mininglaser.offset(mineTarget)
      mininglaser.enable(true)
    end

    local consecutiveZeroLayers = getZeroLayersCount()

    -- Periodically check the mining state
    while true do
      os.sleep(1)
      local state, isActive, energy, currentLayer, mined, total = mininglasers[1].state()
      

      -- You'll need to modify the below lines once you understand the structure of 'state'

      if total == 0 then
        consecutiveZeroLayers = consecutiveZeroLayers + 1
      else
        consecutiveZeroLayers = 0
      end

      saveZeroLayersCount(consecutiveZeroLayers)

      if consecutiveZeroLayers >= 3 then
        print(""3 consecutive layers with 0 total blocks detected. Stopping mining."")
        print("""")
        print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")
        for _, mininglaser in pairs(mininglasers) do
          mininglaser.enable(false)
        end
        fs.delete(""zero_layers.txt"")
        break
      end
    end
  end
end"
JfZYR0pi,D,Salvens,C++,Monday 14th of August 2023 03:47:04 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

#define int long long
using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 15e4 + 10;
const int N = 1e5 + 10;

array<int, MAXN> sq, a, add;
const int B = 666;

inline void build(int n) {
    a.fill(0);
    sq.fill(0);
    add.fill(0);
}

inline void put(int l, int r) {
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ++sq[l / B];
            ++add[l / B];
            l += B;
        } else {
            ++a[l];
            sq[l / B] = max(sq[l / B], a[l] + add[l / B]);
            ++l;
        }
    }
}

inline int get(int l, int r) {
    int ans = 0;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans = max(ans, sq[l / B]);
            l += B;
        } else {
            ans = max(ans, a[l] + add[l / B]);
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, k, m;
    cin >> n >> k >> m;
    build(n - 1);
    while (m--) {
        int l, r;
        cin >> l >> r;
        --r;
        if (get(l, r) < k) {
            cout << ""Yes\n"";
            put(l, r);
        } else {
            cout << ""No\n"";
        }
    }
}
"
xgH4vQ66,Callback problem,miraftab,Python,Monday 14th of August 2023 03:36:10 AM CDT,"import logging

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import Application, ContextTypes, CommandHandler, ConversationHandler, MessageHandler, filters, \
    CallbackQueryHandler

# Configure logging
log_file = 'telegram_test.log'
logging.basicConfig(
    filename=log_file,
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

START_OVER = 'START_OVER'


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print('start...')
    text = 'Select one feature'

    buttons = [['My Profile']]
    reply_keyboard = ReplyKeyboardMarkup(buttons, resize_keyboard=True)

    if not context.user_data.get(START_OVER):
        await update.message.reply_text(text=text, reply_markup=reply_keyboard)
    else:
        await update.callback_query.edit_message_text(text=text)

    context.user_data[START_OVER] = False

    return 'SELECT_LEVEL'


async def select_level(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print('select_level...')

    context.user_data['START_OVER'] = False

    in_text = update.message.text
    if 'My Profile' in in_text:
        return await user_profile(update, context)
    else:
        pass


async def user_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print('user_profile...')
    text = 'Select option'
    buttons = [[InlineKeyboardButton('back', callback_data='BACK')]]
    keyboard = InlineKeyboardMarkup(buttons)
    if context.user_data.get('START_OVER'):
        await update.callback_query.edit_message_text(text=text, reply_markup=keyboard)
    else:
        await update.message.reply_text(text=text, reply_markup=keyboard)

    context.user_data['START_OVER'] = False
    return 'SELECT_OPTION'


def main():
    app = Application.builder().token('BOT_TOKEN').build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            'SELECT_LEVEL': [MessageHandler(filters.TEXT & ~filters.COMMAND, select_level)],
            'SELECT_OPTION': [
                CallbackQueryHandler(start, pattern='BACK'),
            ]
        },
        fallbacks=[
            CommandHandler('start', start)
        ]
    )

    app.add_handler(conv_handler)

    print('start polling …')
    app.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    main()
"
HcgaiDbk,C,Salvens,C++,Monday 14th of August 2023 03:31:24 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

#define int long long
using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 15e4 + 10;
const int N = 1e5 + 10;

array<int, MAXN> sq, a;
const int B = 666;

inline void build(int n) {
    sq.fill(INF);
    for (int i = 0; i < n; ++i) {
        sq[i / B] = min(sq[i / B], a[i]);
    }
}

inline int get(int l, int r) {
    int ans = INF;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans = min(ans, sq[l / B]);
            l += B;
        } else {
            ans = min(ans, a[l]);
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, k;
    cin >> n >> k;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    build(n);
    int l = 0, r = k - 1;
    while (r < n) {
        cout << get(l, r) << ' ';
        ++l, ++r;
    }
}
"
N4mZbPUU,Wally ui MODIFIED,DuyOnline101,Lua,Monday 14th of August 2023 03:28:00 AM CDT,"local library = {count = 0, queue = {}, callbacks = {}, rainbowtable = {}, toggled = true, binds = {}};
local defaults; do
    local dragger = {}; do
        local mouse        = game:GetService(""Players"").LocalPlayer:GetMouse();
        local inputService = game:GetService('UserInputService');
        local heartbeat    = game:GetService(""RunService"").Heartbeat;
        -- // credits to Ririchi / Inori for this cute drag function :)
        function dragger.new(frame)
            local s, event = pcall(function()
                return frame.MouseEnter
            end)
    
            if s then
                frame.Active = true;
                
                event:connect(function()
                    local input = frame.InputBegan:connect(function(key)
                        if key.UserInputType == Enum.UserInputType.MouseButton1 then
                            local objectPosition = Vector2.new(mouse.X - frame.AbsolutePosition.X, mouse.Y - frame.AbsolutePosition.Y);
                            while heartbeat:wait() and inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                pcall(function()
                                    frame:TweenPosition(UDim2.new(0, mouse.X - objectPosition.X + (frame.Size.X.Offset * frame.AnchorPoint.X), 0, mouse.Y - objectPosition.Y + (frame.Size.Y.Offset * frame.AnchorPoint.Y)), 'Out', 'Linear', 0.1, true);
                                end)
                            end
                        end
                    end)
    
                    local leave;
                    leave = frame.MouseLeave:connect(function()
                        input:disconnect();
                        leave:disconnect();
                    end)
                end)
            end
        end

        game:GetService('UserInputService').InputBegan:connect(function(key, gpe)
            if (not gpe) then
                if key.KeyCode == Enum.KeyCode.RightControl then
                    library.toggled = not library.toggled;
                    for i, data in next, library.queue do
                        local pos = (library.toggled and data.p or UDim2.new(-1, 0, -0.5,0))
                        data.w:TweenPosition(pos, (library.toggled and 'Out' or 'In'), 'Quad', 0.15, true)
                        wait();
                    end
                end
            end
        end)
    end
    
    local types = {}; do
        types.__index = types;
        function types.window(name, options)
            library.count = library.count + 1
            local newWindow = library:Create('Frame', {
                Name = name;
                Size = UDim2.new(0, 190, 0, 30);
                BackgroundColor3 = options.topcolor;
                BorderSizePixel = 0;
                Parent = library.container;
                Position = UDim2.new(0, (15 + (200 * library.count) - 200), 0, 0);
                ZIndex = 3;
                library:Create('TextLabel', {
                    Text = name;
                    Size = UDim2.new(1, -10, 1, 0);
                    Position = UDim2.new(0, 5, 0, 0);
                    BackgroundTransparency = 1;
                    Font = Enum.Font.Code;
                    TextSize = options.titlesize;
                    Font = options.titlefont;
                    TextColor3 = options.titletextcolor;
                    TextStrokeTransparency = library.options.titlestroke;
                    TextStrokeColor3 = library.options.titlestrokecolor;
                    ZIndex = 3;
                });
                library:Create(""TextButton"", {
                    Size = UDim2.new(0, 30, 0, 30);
                    Position = UDim2.new(1, -35, 0, 0);
                    BackgroundTransparency = 1;
                    Text = ""-"";
                    TextSize = options.titlesize;
                    Font = options.titlefont;--Enum.Font.Code;
                    Name = 'window_toggle';
                    TextColor3 = options.titletextcolor;
                    TextStrokeTransparency = library.options.titlestroke;
                    TextStrokeColor3 = library.options.titlestrokecolor;
                    ZIndex = 3;
                });
                library:Create(""Frame"", {
                    Name = 'Underline';
                    Size = UDim2.new(1, 0, 0, 2);
                    Position = UDim2.new(0, 0, 1, -2);
                    BackgroundColor3 = (options.underlinecolor ~= ""rainbow"" and options.underlinecolor or Color3.new());
                    BorderSizePixel = 0;
                    ZIndex = 3;
                });
                library:Create('Frame', {
                    Name = 'container';
                    Position = UDim2.new(0, 0, 1, 0);
                    Size = UDim2.new(1, 0, 0, 0);
                    BorderSizePixel = 0;
                    BackgroundColor3 = options.bgcolor;
                    ClipsDescendants = false;
                    library:Create('UIListLayout', {
                        Name = 'List';
                        SortOrder = Enum.SortOrder.LayoutOrder;
                    })
                });
            })
            
            if options.underlinecolor == ""rainbow"" then
                library.rainbowtable[newWindow:FindFirstChild('Underline')] = newWindow:FindFirstChild('Underline')
            end

            local window = setmetatable({
                count = 0;
                object = newWindow;
                container = newWindow.container;
                toggled = true;
                flags   = {};

            }, types)

            table.insert(library.queue, {
                w = window.object;
                p = window.object.Position;
            })

            newWindow:FindFirstChild(""window_toggle"").MouseButton1Click:connect(function()
                window.toggled = not window.toggled;
                newWindow:FindFirstChild(""window_toggle"").Text = (window.toggled and ""+"" or ""-"")
                if (not window.toggled) then
                    window.container.ClipsDescendants = true;
                end
                wait();
                local y = 0;
                for i, v in next, window.container:GetChildren() do
                    if (not v:IsA('UIListLayout')) then
                        y = y + v.AbsoluteSize.Y;
                    end
                end 

                local targetSize = window.toggled and UDim2.new(1, 0, 0, y+5) or UDim2.new(1, 0, 0, 0);
                local targetDirection = window.toggled and ""In"" or ""Out""

                window.container:TweenSize(targetSize, targetDirection, ""Quad"", 0.15, true)
                wait(.15)
                if window.toggled then
                    window.container.ClipsDescendants = false;
                end
            end)

            return window;
        end
        
        function types:Resize()
            local y = 0;
            for i, v in next, self.container:GetChildren() do
                if (not v:IsA('UIListLayout')) then
                    y = y + v.AbsoluteSize.Y;
                end
            end 
            self.container.Size = UDim2.new(1, 0, 0, y+5)
        end
        
        function types:GetOrder() 
            local c = 0;
            for i, v in next, self.container:GetChildren() do
                if (not v:IsA('UIListLayout')) then
                    c = c + 1
                end
            end
            return c
        end
        
        function types:Label(display,rainbow)
            local v = game:GetService'TextService':GetTextSize(display, 18, Enum.Font.SourceSans, Vector2.new(math.huge, math.huge))
            local object = library:Create('Frame', {
                Size = UDim2.new(1, 0, 0, v.Y+5);
                BackgroundTransparency  = 1;
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                
                    Position = UDim2.new(0, 10, 0, 0);
                    Size = UDim2.new(1, 0, 1, 0);
                    TextSize = 18;
                    Font = Enum.Font.SourceSans;
                    TextColor3 = Color3.fromRGB(255, 255, 255);
                    BackgroundTransparency = 1;
                    TextXAlignment = Enum.TextXAlignment.Left;
                    TextWrapped = true;
                    Text = display;
                });
                Parent = self.container;
            })

            self:Resize();
            if rainbow then
                library.rainbowtable[object:FindFirstChild('TextLabel')] = object:FindFirstChild('TextLabel')
            end
            
            return object:FindFirstChild('TextLabel');
        end

        function types:Toggle(name, options, callback)
            options = options or {}
            local default  = options.default or false;
            local location = options.location or self.flags;
            local flag     = options.flag or """";
            local callback = callback or function() end;
            
            location[flag] = default;

            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                    Name = name;
                    Text = ""\r"" .. name;
                    BackgroundTransparency = 1;
                    TextColor3 = library.options.textcolor;
                    Position = UDim2.new(0, 5, 0, 0);
                    Size     = UDim2.new(1, -5, 1, 0);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    library:Create('TextButton', {
                        
                        Text = (library.options.toggledisplay == 'Check' and (location[flag] and utf8.char(10003) or """") or '');
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        Name = 'Checkmark';
                        Size = UDim2.new(0, 20, 0, 20);
                        Position = UDim2.new(1, -25, 0, 4);
                        TextColor3 = library.options.textcolor;
                        BackgroundColor3 = (library.options.toggledisplay == 'Fill' and(location[flag] and Color3.fromRGB(20,148,90) or Color3.fromRGB(175,35,35)) or library.options.bgcolor);
                        BorderColor3 = library.options.bordercolor;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    })
                });
                Parent = self.container;
            });
                
            local function click(t)
                location[flag] = (not location[flag]);
                callback(location[flag])
                if library.options.toggledisplay == 'Check' then
                    check:FindFirstChild(name).Checkmark.Text = location[flag] and utf8.char(10003) or """";
                elseif library.options.toggledisplay == 'Fill' then
                    check:FindFirstChild(name).Checkmark.BackgroundColor3 = location[flag] and Color3.fromRGB(20,148,90) or Color3.fromRGB(175,35,35)
                end
            end

            check:FindFirstChild(name).Checkmark.MouseButton1Click:connect(click)
            library.callbacks[flag] = click;

            if location[flag] == true then
                callback(location[flag])
            end

            self:Resize();
            return {
                Set = function(b)
                    location[flag] = b;
                    callback(location[flag])
                    if library.options.toggledisplay == 'Check' then
                        check:FindFirstChild(name).Checkmark.Text = location[flag] and utf8.char(10003) or """";
                    elseif library.options.toggledisplay == 'Fill' then
                        check:FindFirstChild(name).Checkmark.BackgroundColor3 = location[flag] and Color3.fromRGB(20,148,90) or Color3.fromRGB(175,35,35)
                    end
                end
            }
        end

        function types:TypeBox(name, options, callback)
            options = options or {}
            local location = options.location or self.flags;
            local flag     = options.flag or """";
            local default = options.default or """";
            local cleartext = options.cleartext or (options.cleartext == nil and true);
            local callback = callback or function() end;

            location[flag] = default;
    
            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextBox', {
                    Text = default;
                    ClearTextOnFocus = cleartext;
                    PlaceholderText = name;
                    PlaceholderColor3 = Color3.fromRGB(60, 60, 60);
                    Size = UDim2.new(1, -10, 0, 20);
                    Position = UDim2.new(0, 5, 0, 4);
                    BackgroundColor3 = library.options.boxcolor;
                    ClipsDescendants = true;
                    TextColor3 = library.options.textcolor;
                    TextXAlignment = Enum.TextXAlignment.Center;
                    TextSize = library.options.fontsize;
                    Name = 'TextBox';
                    Font = library.options.font;
                    BorderColor3 = library.options.bordercolor;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                });
                Parent = self.container;
            });
            local box = check:FindFirstChild('TextBox');
            box:GetPropertyChangedSignal(""Text""):Connect(function()
                if box.TextBounds.X >= box.AbsoluteSize.X then
                    box.TextXAlignment = Enum.TextXAlignment.Right
                else
                    box.TextXAlignment = Enum.TextXAlignment.Center
                end
            end)
            box.FocusLost:connect(function(e)
                local old = location[flag];
                location[flag] = tostring(box.Text)
                callback(location[flag], old, e)
            end)
            self:Resize();
            return box
        end

        function types:Button(name, callback)
            callback = callback or function() end;
            
            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextButton', {
                    Name = name;
                    Text = name;
                    BackgroundColor3 = library.options.btncolor;
                    BorderColor3 = library.options.bordercolor;
                    TextStrokeTransparency = library.options.textstroke;
                    BackgroundTransparency = 0.35;
                    TextStrokeColor3 = library.options.strokecolor;
                    TextColor3 = library.options.textcolor;
                    Position = UDim2.new(0, 5, 0, 5);
                    Size     = UDim2.new(1, -10, 0, 20);
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                });
                Parent = self.container;
            });
            
            check:FindFirstChild(name).MouseButton1Click:connect(callback)
            self:Resize();

            return check:WaitForChild(name),{
                Fire = function()
                    callback();
                end
            }
        end
        
        function types:Box(name, options, callback) --type, default, data, location, flag)
            options = options or {}
            local tipe   = options.type or """";
            local default = options.default or """";
            local data = options.data
            local location = options.location or self.flags;
            local flag     = options.flag or """";
            local callback = callback or function() end;
            local min      = options.min or 0;
            local max      = options.max or 9e9;

            if tipe == 'number' and tonumber(default) ~= nil then
                location[flag] = default;
            else
                location[flag] = """";
                default = """";
            end

            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                    Name = name;
                    Text = ""\r"" .. name;
                    BackgroundTransparency = 1;
                    TextColor3 = library.options.textcolor;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    Position = UDim2.new(0, 5, 0, 0);
                    Size     = UDim2.new(1, -5, 1, 0);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    library:Create('TextBox', {
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                        Text = tostring(default);
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        Name = 'Box';
                        Size = UDim2.new(0, 60, 0, 20);
                        Position = UDim2.new(1, -65, 0, 3);
                        TextColor3 = library.options.textcolor;
                        BackgroundColor3 = library.options.boxcolor;
                        BorderColor3 = library.options.bordercolor;
                        PlaceholderColor3 = library.options.placeholdercolor;
                    })
                });
                Parent = self.container;
            });
        
            local box = check:FindFirstChild(name):FindFirstChild('Box');
            box.FocusLost:connect(function(e)
                local old = location[flag];
                if tipe == ""number"" then
                    local num = tonumber(box.Text)
                    if (not num) then
                        box.Text = tonumber(location[flag])
                    else
                        location[flag] = math.clamp(num, min, max)
                        box.Text = tonumber(location[flag])
                    end
                else
                    location[flag] = tostring(box.Text)
                end

                callback(location[flag], old, e)
            end)
            
            if tipe == 'number' then
                box:GetPropertyChangedSignal('Text'):connect(function()
                    box.Text = string.gsub(box.Text, ""[%a+]"", """");
                end)
            end

            local function SetNew(new)
                if tipe == ""number"" then
                    local num = tonumber(new)
                    if (not num) then
                        box.Text = tonumber(location[flag])
                    else
                        location[flag] = math.clamp(num, min, max)
                        box.Text = tonumber(location[flag])
                    end
                else
                    location[flag] = tostring(box.Text)
                end
            end
            
            self:Resize();
            return {
                ['Box'] = box;
                ['SetNew'] = SetNew;
            }
        end
        
        function types:Bind(name, options, callback)
            options = options or {}
            local location     = options.location or self.flags;
            local keyboardOnly = options.kbonly or false
            local flag         = options.flag or """";
            local callback     = callback or function() end;
            local default      = options.default or nil;

            if keyboardOnly and (not tostring(default):find('MouseButton')) then
                location[flag] = default
            end
            
            local banned = {
                Return = true;
                Space = true;
                Tab = true;
                Unknown = true;
            }
            
            local shortNames = {
                RightControl = 'RightCtrl';
                LeftControl = 'LeftCtrl';
                LeftShift = 'LShift';
                RightShift = 'RShift';
                MouseButton1 = ""Mouse1"";
                MouseButton2 = ""Mouse2"";
            }
            
            local allowed = {
                MouseButton1 = true;
                MouseButton2 = true;
            }      

            local nm = (default and (shortNames[default.Name] or default.Name) or ""None"");
            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 30);
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                    Name = name;
                    Text = ""\r"" .. name;
                    BackgroundTransparency = 1;
                    TextColor3 = library.options.textcolor;
                    Position = UDim2.new(0, 5, 0, 0);
                    Size     = UDim2.new(1, -5, 1, 0);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    BorderColor3     = library.options.bordercolor;
                    BorderSizePixel  = 1;
                    library:Create('TextButton', {
                        Name = 'Keybind';
                        Text = nm;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        Size = UDim2.new(0, 60, 0, 20);
                        Position = UDim2.new(1, -65, 0, 5);
                        TextColor3 = library.options.textcolor;
                        BackgroundColor3 = library.options.bgcolor;
                        BorderColor3     = library.options.bordercolor;
                        BorderSizePixel  = 1;
                    })
                });
                Parent = self.container;
            });
                
            local button = check:FindFirstChild(name).Keybind;
            button.MouseButton1Click:connect(function()
                library.binding = true

                button.Text = ""...""
                local a, b = game:GetService('UserInputService').InputBegan:wait();
                local name = tostring(a.KeyCode.Name);
                local typeName = tostring(a.UserInputType.Name);

                if (a.UserInputType ~= Enum.UserInputType.Keyboard and (allowed[a.UserInputType.Name]) and (not keyboardOnly)) or (a.KeyCode and (not banned[a.KeyCode.Name])) then
                    local name = (a.UserInputType ~= Enum.UserInputType.Keyboard and a.UserInputType.Name or a.KeyCode.Name);
                    location[flag] = (a);
                    button.Text = shortNames[name] or name;
                    
                else
                    if (location[flag]) then
                        if (not pcall(function()
                            return location[flag].UserInputType
                        end)) then
                            local name = tostring(location[flag])
                            button.Text = shortNames[name] or name
                        else
                            local name = (location[flag].UserInputType ~= Enum.UserInputType.Keyboard and location[flag].UserInputType.Name or location[flag].KeyCode.Name);
                            button.Text = shortNames[name] or name;
                        end
                    end
                end

                wait(0.1)  
                library.binding = false;
            end)
            
            if location[flag] then
                button.Text = shortNames[tostring(location[flag].Name)] or tostring(location[flag].Name)
            end

            library.binds[flag] = {
                location = location;
                callback = callback;
            };

            self:Resize();
        end
    
        function types:Section(name,rainbow)
            local order = self:GetOrder();
            local determinedSize = UDim2.new(1, 0, 0, 25)
            local determinedPos = UDim2.new(0, 0, 0, 4);
            local secondarySize = UDim2.new(1, 0, 0, 20);
                        
            if order == 0 then
                determinedSize = UDim2.new(1, 0, 0, 21)
                determinedPos = UDim2.new(0, 0, 0, -1);
                secondarySize = nil
            end
            
            local check = library:Create('Frame', {
                Name = 'Section';
                BackgroundTransparency = 1;
                Size = determinedSize;
                BackgroundColor3 = library.options.sectncolor;
                BorderSizePixel = 0;
                LayoutOrder = order;
                library:Create('TextLabel', {
                    Name = 'section_lbl';
                    Text = name;
                    BackgroundTransparency = 1;
                    BorderSizePixel = 0;
                    BackgroundColor3 = library.options.sectncolor;
                    TextColor3 = library.options.textcolor;
                    Position = determinedPos;
                    Size     = (secondarySize or UDim2.new(1, 0, 1, 0));
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                });
                Parent = self.container;
            });
        
            self:Resize();
            if rainbow then
                library.rainbowtable[check:FindFirstChild('section_lbl')] = check:FindFirstChild('section_lbl')
            end
            return check:FindFirstChild('section_lbl');
        end

        function types:Slider(name, options, callback)
            options = options or {}
            local default = options.default or options.min or 0;
            local min     = options.min or 0;
            local max      = options.max or 1;
            local location = options.location or self.flags;
            local precise  = options.precise  or false -- e.g 0, 1 vs 0, 0.1, 0.2, ...
            local flag     = options.flag or """";
            local callback = callback or function() end

            location[flag] = default;

            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextLabel', {
                    Name = name;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    Text = ""\r"" .. name;
                    BackgroundTransparency = 1;
                    TextColor3 = library.options.textcolor;
                    Position = UDim2.new(0, 5, 0, 2);
                    Size     = UDim2.new(1, -5, 1, 0);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    library:Create('Frame', {
                        Name = 'Container';
                        Size = UDim2.new(0, 60, 0, 20);
                        Position = UDim2.new(1, -65, 0, 3);
                        BackgroundTransparency = 1;
                        BorderColor3 = library.options.bordercolor;
                        BorderSizePixel = 0;
                        library:Create('TextBox', {
                            Name = 'ValueLabel';
                            Text = default;
                            BackgroundTransparency = 1;
                            TextColor3 = library.options.textcolor;
                            Position = UDim2.new(0, -35, 0, 0);
                            Size     = UDim2.new(0,30,0,20);
                            TextXAlignment = Enum.TextXAlignment.Right;
                            Font = library.options.font;
                            TextSize = library.options.fontsize;
                            TextStrokeTransparency = library.options.textstroke;
                            TextStrokeColor3 = library.options.strokecolor;
                            BackgroundColor3 = library.options.boxcolor;
                            BorderColor3 = library.options.bordercolor;
                            PlaceholderColor3 = library.options.placeholdercolor;
                        });
                        library:Create('TextButton', {
                            Name = 'Button';
                            Size = UDim2.new(0, 5, 1, -2);
                            Position = UDim2.new(0, 0, 0, 1);
                            AutoButtonColor = false;
                            Text = """";
                            BackgroundColor3 = Color3.fromRGB(20, 20, 20);
                            BorderSizePixel = 0;
                            ZIndex = 2;
                            TextStrokeTransparency = library.options.textstroke;
                            TextStrokeColor3 = library.options.strokecolor;
                        });
                        library:Create('Frame', {
                            Name = 'Line';
                            BackgroundTransparency = 0;
                            Position = UDim2.new(0, 0, 0.5, 0);
                            Size     = UDim2.new(1, 0, 0, 1);
                            BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                            BorderSizePixel = 0;
                        });
                    })
                });
                Parent = self.container;
            });

            local overlay = check:FindFirstChild(name);

            local box = overlay:FindFirstChild('Container'):FindFirstChild('ValueLabel');
            box.Focused:connect(function()
                box.BackgroundTransparency = 0
            end)
            box.FocusLost:connect(function(e)
                local old = location[flag];
                local num = tonumber(box.Text)
                box.BackgroundTransparency = 1
                if (not num) then
                    box.Text = tonumber(location[flag])
                else
                    if num < min then
                        num = min
                    elseif num > max then
                        num = max
                    end

                    local percent = 1 - ((max - num) / (max - min))
                    local number  = num 

                    number = tonumber(string.format(""%.2f"", number))
                    if (not precise) then
                        number = math.floor(number)
                    end

                    overlay.Container.Button.Position  = UDim2.new(math.clamp(percent, 0, 0.99), 0,  0, 1) 
                    box.Text  = number
                    location[flag] = number
                    callback(number)
                end
            end)
            
            box:GetPropertyChangedSignal('Text'):connect(function()
                box.Text = string.gsub(box.Text, ""[%a+]"", """");
            end)

            local renderSteppedConnection;
            local inputBeganConnection;
            local inputEndedConnection;
            local mouseLeaveConnection;
            local mouseDownConnection;
            local mouseUpConnection;

            check:FindFirstChild(name).Container.MouseEnter:connect(function()
                local function update()
                    if renderSteppedConnection then renderSteppedConnection:disconnect() end 
                    

                    renderSteppedConnection = game:GetService('RunService').RenderStepped:connect(function()
                        local mouse = game:GetService(""UserInputService""):GetMouseLocation()
                        local percent = (mouse.X - overlay.Container.AbsolutePosition.X) / (overlay.Container.AbsoluteSize.X)
                        percent = math.clamp(percent, 0, 1)
                        percent = tonumber(string.format(""%.2f"", percent))

                        overlay.Container.Button.Position = UDim2.new(math.clamp(percent, 0, 0.99), 0, 0, 1)
                        
                        local num = min + math.floor((max - min) * percent * 100)/100
                        local value = (precise and num or math.floor(num))

                        box.Text = value;
                        callback(tonumber(value))
                        location[flag] = tonumber(value)
                    end)
                end

                local function disconnect()
                    if renderSteppedConnection then renderSteppedConnection:disconnect() end
                    if inputBeganConnection then inputBeganConnection:disconnect() end
                    if inputEndedConnection then inputEndedConnection:disconnect() end
                    if mouseLeaveConnection then mouseLeaveConnection:disconnect() end
                    if mouseUpConnection then mouseUpConnection:disconnect() end
                end

                inputBeganConnection = check:FindFirstChild(name).Container.InputBegan:connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        update()
                    end
                end)

                inputEndedConnection = check:FindFirstChild(name).Container.InputEnded:connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        disconnect()
                    end
                end)

                mouseDownConnection = check:FindFirstChild(name).Container.Button.MouseButton1Down:connect(update)
                mouseUpConnection   = game:GetService(""UserInputService"").InputEnded:connect(function(a, b)
                    if a.UserInputType == Enum.UserInputType.MouseButton1 and (mouseDownConnection.Connected) then
                        disconnect()
                    end
                end)
            end)    

            if default ~= min then
                if default < min then
                    default = min
                elseif default > max then
                    default = max
                end

                local percent = 1 - ((max - default) / (max - min))
                local number  = default 

                number = tonumber(string.format(""%.2f"", number))
                if (not precise) then
                    number = math.floor(number)
                end

                overlay.Container.Button.Position  = UDim2.new(math.clamp(percent, 0, 0.99), 0,  0, 1) 
                box.Text  = number
            end

            self:Resize();
            return {
                Set = function(value)
                    if value < min then
                        value = min
                    elseif value > max then
                        value = max
                    end

                    local percent = 1 - ((max - value) / (max - min))
                    local number  = value 

                    number = tonumber(string.format(""%.2f"", number))
                    if (not precise) then
                        number = math.floor(number)
                    end

                    overlay.Container.Button.Position  = UDim2.new(math.clamp(percent, 0, 0.99), 0,  0, 1) 
                    box.Text  = number
                    location[flag] = number
                    callback(number)
                end
            }
        end 

        function types:SearchBox(text, options, callback)
            options = options or {}
            local list = options.list or {};
            local flag = options.flag or """";
            local location = options.location or self.flags;
            local callback = callback or function() end;

            local busy = false;
            local box = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                LayoutOrder = self:GetOrder();
                library:Create('TextBox', {
                    Text = """";
                    PlaceholderText = text;
                    PlaceholderColor3 = Color3.fromRGB(60, 60, 60);
                    Font = library.options.font;
                    TextSize = library.options.fontsize;
                    Name = 'Box';
                    Size = UDim2.new(1, -10, 0, 20);
                    Position = UDim2.new(0, 5, 0, 4);
                    TextColor3 = library.options.textcolor;
                    BackgroundColor3 = library.options.dropcolor;
                    BorderColor3 = library.options.bordercolor;
                    TextStrokeTransparency = library.options.textstroke;
                    TextStrokeColor3 = library.options.strokecolor;
                    ClipsDescendants = true;
                });
                library:Create('ScrollingFrame', { --Move it here so it doesnt conflict with textbox
                    Position = UDim2.new(0, 0, 1, 1);
                    Name = 'Container';
                    BackgroundColor3 = library.options.btncolor;
                    ScrollBarThickness = 0;
                    BorderSizePixel = 0;
                    BorderColor3 = library.options.bordercolor;
                    ScrollingDirection = Enum.ScrollingDirection.Y;
                    Size = UDim2.new(1, 0, 0, 0);
                    library:Create('UIListLayout', {
                        Name = 'ListLayout';
                        SortOrder = Enum.SortOrder.LayoutOrder;
                    });
                    ZIndex = 2;
                });
                Parent = self.container;
            })

            local function rebuild(text,skip)
                box:FindFirstChild('Container').ScrollBarThickness = 0
                for i, child in next, box:FindFirstChild('Container'):GetChildren() do
                    if (not child:IsA('UIListLayout')) then
                        child:Destroy();
                    end
                end

                if #text > 0 or skip then
                    for i, v in next, list do
                        if string.sub(string.lower(v), 1, string.len(text)) == string.lower(text) or v:lower():match(text:lower()) then
                            local button = library:Create('TextButton', {
                                Text = v;
                                Font = library.options.font;
                                TextSize = library.options.fontsize;
                                TextColor3 = library.options.textcolor;
                                BorderColor3 = library.options.bordercolor;
                                TextStrokeTransparency = library.options.textstroke;
                                TextStrokeColor3 = library.options.strokecolor;
                                Parent = box:FindFirstChild('Container');
                                Size = UDim2.new(1, 0, 0, 20);
                                LayoutOrder = i;
                                BackgroundColor3 = library.options.btncolor;
                                ZIndex = 2;
                            })
                            if button.TextBounds.X >= button.AbsoluteSize.X then
                                button.TextScaled = true
                            end
                            button.MouseButton1Down:connect(function()
                                busy = true;
                                box:FindFirstChild('Box').Text = button.Text;

                                location[flag] = button.Text;
                                callback(location[flag])

                                box:FindFirstChild('Container').ScrollBarThickness = 0
                                for i, child in next, box:FindFirstChild('Container'):GetChildren() do
                                    if (not child:IsA('UIListLayout')) then
                                        child:Destroy();
                                    end
                                end
                                box:FindFirstChild('Container'):TweenSize(UDim2.new(1, 0, 0, 0), 'Out', 'Quad', 0.25, true)
                            end)
                        end
                    end
                end

                local c = box:FindFirstChild('Container'):GetChildren()
                local ry = (20 * (#c)) - 20

                local y = math.clamp((20 * (#c)) - 20, 0, 100)
                if ry > 100 then
                    box:FindFirstChild('Container').ScrollBarThickness = 5;
                end

                box:FindFirstChild('Container'):TweenSize(UDim2.new(1, 0, 0, y), 'Out', 'Quad', 0.25, true)
                box:FindFirstChild('Container').CanvasSize = UDim2.new(1, 0, 0, (20 * (#c)) - 20)
            end

            local check = box:FindFirstChild('Box');
            check.Focused:connect(function()
                rebuild(box:FindFirstChild('Box').Text,true)
                if box:FindFirstChild('Box').TextBounds.X >= box:FindFirstChild('Box').AbsoluteSize.X then
                    box:FindFirstChild('Box').TextXAlignment = Enum.TextXAlignment.Right
                else
                    box:FindFirstChild('Box').TextXAlignment = Enum.TextXAlignment.Center
                end
            end)
            check.FocusLost:connect(function(enterboolean)
                task.wait(.12)
                if busy then
                    busy = false;
                    return;
                end
                if check.Text == """" then
                    location[flag] = tostring(check.Text);
                    callback(location[flag])
                elseif enterboolean and box:FindFirstChild('Container'):GetChildren()[2] then
                    check.Text = box:FindFirstChild('Container'):GetChildren()[2].Text;
                    location[flag] =box:FindFirstChild('Container'):GetChildren()[2].Text;
                    callback(location[flag])
                end

                box:FindFirstChild('Container').ScrollBarThickness = 0
                for i, child in next, box:FindFirstChild('Container'):GetChildren() do
                    if (not child:IsA('UIListLayout')) then
                        child:Destroy();
                    end
                end
                box:FindFirstChild('Container'):TweenSize(UDim2.new(1, 0, 0, 0), 'Out', 'Quad', 0.25, true)
            end);

            box:FindFirstChild('Box'):GetPropertyChangedSignal('Text'):connect(function()
                if (not busy) then
                    rebuild(box:FindFirstChild('Box').Text)
                end
                if box:FindFirstChild('Box').TextBounds.X >= box:FindFirstChild('Box').AbsoluteSize.X then
                    box:FindFirstChild('Box').TextXAlignment = Enum.TextXAlignment.Right
                else
                    box:FindFirstChild('Box').TextXAlignment = Enum.TextXAlignment.Center
                end
            end);

            local function refresh(new_list)
                list = new_list;
            end
            local function reload(new_list)
                list = new_list;
                rebuild("""")
            end
            self:Resize();
            return {
                ['Reload'] = reload;
                ['Refresh'] = refresh;
                ['Box'] = box:FindFirstChild('Box');
            }
        end
        
        
        function types:Dropdown(name, options, callback)
            options = options or {}
            local location = options.location or self.flags;
            local flag = options.flag or """";
            local callback = callback or function() end;
            local list = options.list or {};
            local default = options.default or list[1]
            local colors = options.colors or {}

            location[flag] = default or list[1]
            local check = library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 25);
                BackgroundColor3 = Color3.fromRGB(25, 25, 25);
                BorderSizePixel = 0;
                LayoutOrder = self:GetOrder();
                library:Create('Frame', {
                    Name = 'dropdown_lbl';
                    BackgroundTransparency = 0;
                    BackgroundColor3 = library.options.dropcolor;
                    Position = UDim2.new(0, 5, 0, 4);
                    BorderColor3 = library.options.bordercolor;
                    Size     = UDim2.new(1, -10, 0, 20);
                    library:Create('TextLabel', {
                        Name = 'Selection';
                        Size = UDim2.new(1, 0, 1, 0);
                        Text = location[flag];
                        TextColor3 = colors[v] or library.options.textcolor;
                        BackgroundTransparency = 1;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    });
                    library:Create(""TextButton"", {
                        Name = 'drop';
                        BackgroundTransparency = 1;
                        Size = UDim2.new(0, 20, 1, 0);
                        Position = UDim2.new(1, -25, 0, 0);
                        Text = 'v';
                        TextColor3 = library.options.textcolor;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    })
                });
                Parent = self.container;
            });
            
            local button = check:FindFirstChild('dropdown_lbl').drop;
            local input;
            
            button.MouseButton1Click:connect(function()
                if (input and input.Connected) then
                    return
                end 
                
                check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').TextColor3 = Color3.fromRGB(60, 60, 60);
                check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').Text = name;
                local c = 0;
                for i, v in next, list do
                    c = c + 20;
                end

                local size = UDim2.new(1, 0, 0, c)

                local clampedSize;
                local scrollSize = 0;
                if size.Y.Offset > 100 then
                    clampedSize = UDim2.new(1, 0, 0, 100)
                    scrollSize = 5;
                end
                
                local goSize = (clampedSize ~= nil and clampedSize) or size;    
                local container = library:Create('ScrollingFrame', {
                    TopImage = 'rbxasset://textures/ui/Scroll/scroll-middle.png';
                    BottomImage = 'rbxasset://textures/ui/Scroll/scroll-middle.png';
                    Name = 'DropContainer';
                    Parent = check:FindFirstChild('dropdown_lbl');
                    Size = UDim2.new(1, 0, 0, 0);
                    BackgroundColor3 = library.options.bgcolor;
                    BorderColor3 = library.options.bordercolor;
                    Position = UDim2.new(0, 0, 1, 0);
                    ScrollBarThickness = scrollSize;
                    CanvasSize = UDim2.new(0, 0, 0, size.Y.Offset);
                    ZIndex = 5;
                    ClipsDescendants = true;
                    library:Create('UIListLayout', {
                        Name = 'List';
                        SortOrder = Enum.SortOrder.LayoutOrder
                    })
                })

                for i, v in next, list do
                    local btn = library:Create('TextButton', {
                        Size = UDim2.new(1, 0, 0, 20);
                        BackgroundColor3 = library.options.btncolor;
                        BorderColor3 = library.options.bordercolor;
                        Text = v;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        LayoutOrder = i;
                        Parent = container;
                        ZIndex = 5;
                        TextColor3 = colors[v] or library.options.textcolor;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    })
                    
                    btn.MouseButton1Click:connect(function()
                        check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').TextColor3 = colors[v] or library.options.textcolor
                        check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').Text = btn.Text;

                        location[flag] = tostring(btn.Text);
                        callback(location[flag])

                        game:GetService('Debris'):AddItem(container, 0)
                        input:disconnect();
                    end)
                end
                
                container:TweenSize(goSize, 'Out', 'Quad', 0.15, true)
                
                local function isInGui(frame)
                    local mloc = game:GetService('UserInputService'):GetMouseLocation();
                    local mouse = Vector2.new(mloc.X, mloc.Y - 36);
                    
                    local x1, x2 = frame.AbsolutePosition.X, frame.AbsolutePosition.X + frame.AbsoluteSize.X;
                    local y1, y2 = frame.AbsolutePosition.Y, frame.AbsolutePosition.Y + frame.AbsoluteSize.Y;
                
                    return (mouse.X >= x1 and mouse.X <= x2) and (mouse.Y >= y1 and mouse.Y <= y2)
                end
                
                input = game:GetService('UserInputService').InputBegan:connect(function(a)
                    if a.UserInputType == Enum.UserInputType.MouseButton1 and (not isInGui(container)) then
                        check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').TextColor3 = colors[v] or library.options.textcolor
                        check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').Text       = location[flag];

                        container:TweenSize(UDim2.new(1, 0, 0, 0), 'In', 'Quad', 0.15, true)
                        wait(0.15)

                        game:GetService('Debris'):AddItem(container, 0)
                        input:disconnect();
                    end
                end)
            end)
            
            self:Resize();
            local function reload(array,default)
                list = array;
                location[flag] = default or array[1];
                pcall(function()
                    input:disconnect()
                end)
                check:WaitForChild('dropdown_lbl').Selection.Text = location[flag]
                check:FindFirstChild('dropdown_lbl'):WaitForChild('Selection').TextColor3 = colors[v] or library.options.textcolor
                game:GetService('Debris'):AddItem(container, 0)
            end

            return {
                Refresh = reload;
            }
        end
        function types:DropSection(name)
            local check = library:Create('Frame', {
                Name = 'DropSection';
                BackgroundTransparency = 1;
                Size = UDim2.new(1,0,0,25);
                BackgroundColor3 = library.options.sectncolor;
                BorderSizePixel = 0;
                LayoutOrder = self:GetOrder();
        
                library:Create('Frame',{
                    Name = 'SectionFrame';
                    BackgroundTransparency = 1;
                    Position = UDim2.new(0, 5, 0, 4);
                    Size = UDim2.new(1, -10, 0, 20);
                    BackgroundColor3 = library.options.sectncolor;
                    BorderSizePixel = 0;

                    library:Create('TextLabel', {
                        Name = 'section_lbl';
                        Text = name;
                        BackgroundTransparency = 0;
                        BorderSizePixel = 0;
                        BackgroundColor3 = library.options.sectncolor;
                        TextColor3 = library.options.textcolor;
                        Position = UDim2.new();
                        Size     = UDim2.new(1, 0, 1, 0);
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    });
                    library:Create(""TextButton"", {
                        Name = 'drop';
                        BackgroundTransparency = 1;
                        Size = UDim2.new(1, -5, 1, 0);
                        Position = UDim2.new();
                        Text = ""-"";
                        TextColor3 = library.options.textcolor;
                        Font = library.options.font;
                        TextSize = library.options.fontsize;
                        TextXAlignment = Enum.TextXAlignment.Right;
                        TextStrokeTransparency = library.options.textstroke;
                        TextStrokeColor3 = library.options.strokecolor;
                    });
                });
                Parent = self.container;
            });
            local Container = library:Create('Frame',{
                Name = 'Container';
                BackgroundTransparency = 0;
                Size = UDim2.new();
                Position = UDim2.new(0,0,0,25);
                BackgroundTransparency = 1;
                BorderSizePixel = 0;
                Visible = false;
                Parent = check;
                library:Create('UIListLayout', {
                    Name = 'List';
                    SortOrder = Enum.SortOrder.LayoutOrder;
                });
            });
            
            local button = check:FindFirstChild('SectionFrame').drop;
            local input;
            local dropped = false
            local dropping = false
            local droptypes = types
            droptypes.__index = droptypes
            local Dropper = setmetatable({
                count = 0;
                object = check;
                container = Container;
                textframe = check.SectionFrame.section_lbl;
                toggled = false;
                flags   = {};
        
            }, droptypes)
        
            
            button.MouseButton1Click:connect(function()
                if dropping == false then
                    dropping = true
                    local newcheck
                    local newcon
                    local newy
                    if dropped == false then
                        dropped = true
                    
                        local c = 0;
                        for i, v in next, Container:GetChildren() do
                            if v:IsA('Frame') then
                                c = c + v.Size.Y.Offset;
                            end
                        end
                        c = c +2
            
                        local size = UDim2.new(1, 0, 0, c)
            
                        local clampedSize;
                        local scrollSize = 0;
                        
                        local goSize = (clampedSize ~= nil and clampedSize) or size;
                        newcheck = goSize+UDim2.new(0,0,0,25)
                        newcon = goSize
            
            
                        newy = UDim2.new(1,0,0,(self.container.Size.Y.Offset+newcon.Y.Offset))
                        self.container:TweenSize(newy,'Out','Quad',0.1,true)
                        check:TweenSize(newcheck, 'Out', 'Quad', 0.15, true)
                        Container:TweenSize(goSize, 'Out', 'Quad', 0.15, true)
                        
                        button.Text = ""+""
                        Container.Visible = true
                        Container.ClipsDescendants = false
                    elseif dropped == true then
                        dropped = false
                        local c = 0;
            
                        local size = UDim2.new(1, 0, 0, c)
            
                        local clampedSize;
                        local scrollSize = 0;
                        
                        local goSize = (clampedSize ~= nil and clampedSize) or size;
                        newcheck = UDim2.new(1,0,0,25)
                        newcon = goSize
                        newy = UDim2.new(1,0,0,(self.container.Size.Y.Offset-Container.Size.Y.Offset))
                        Container.ClipsDescendants = true
                        
                        Container:TweenSize(goSize, 'Out', 'Quad', 0.13, true)
                        check:TweenSize(newcheck, 'Out', 'Quad', 0.14, true)
                        self.container:TweenSize(newy,'Out','Quad',0.15,true)
                        
                        
                        button.Text = ""-""
                        Container.Visible = false
                    end
                    repeat wait() until check.Size == newcheck and Container.Size == newcon
                    dropping = false
                end
            end)
            self:Resize();
            function Dropper:SetText(text)
                self.textframe.Text = (type(text) == ""string"" and text) or """";
            end
            return Dropper
        end
    end
    
    function library:Create(class, data)
        local obj = Instance.new(class);
        for i, v in next, data do
            if i ~= 'Parent' then
                
                if typeof(v) == ""Instance"" then
                    v.Parent = obj;
                else
                    obj[i] = v
                end
            end
        end
        
        obj.Parent = data.Parent;
        return obj
    end
    
    function library:CreateWindow(name, options)
        if (not library.container) then
            library.container = self:Create(""ScreenGui"", {
                self:Create('Frame', {
                    Name = 'Container';
                    Size = UDim2.new(1, -30, 1, 0);
                    Position = UDim2.new(0, 20, 0, 20);
                    BackgroundTransparency = 1;
                    Active = false;
                });
                Parent = game:GetService(""CoreGui"");
            }):FindFirstChild('Container');
        end
        
        if (not library.options) then
            library.options = setmetatable(options or {}, {__index = defaults})
        end
        
        local window = types.window(name, library.options);
        dragger.new(window.object);
        return window
    end
    
    default = {
        topcolor       = Color3.fromRGB(30, 30, 30);
        titlecolor     = Color3.fromRGB(255, 255, 255);
        
        
        underlinecolor = ""rainbow"";
        bgcolor        = Color3.fromRGB(30, 30, 30);    -- Background Color
        boxcolor       = Color3.fromRGB(30, 30, 30);    -- Box Inner Color
        btncolor       = Color3.fromRGB(50, 50, 50);    -- Button Color
        dropcolor      = Color3.fromRGB(30, 30, 30);    -- Dropdown Color
        sectncolor     = Color3.fromRGB(35, 35, 35);    -- Section / Label Colors
        bordercolor    = Color3.fromRGB(60, 60, 60);    -- Borders around boxes, toggles, buttons Color

        font           = Enum.Font.SourceSans;
        titlefont      = Enum.Font.Code;

        fontsize       = 17;
        titlesize      = 18;

        textstroke     = 1;
        titlestroke    = 1;

        strokecolor    = Color3.fromRGB(0, 0, 0);

        textcolor      = Color3.fromRGB(255, 255, 255);
        titletextcolor = Color3.fromRGB(255, 255, 255);

        placeholdercolor = Color3.fromRGB(255, 255, 255);
        titlestrokecolor = Color3.fromRGB(0, 0, 0);

        toggledisplay = 'Check';
    }

    library.options = setmetatable({}, {__index = default})

    spawn(function()
        local props = {
            ['Frame'] = 'BackgroundColor3';
            ['TextLabel'] = 'TextColor3';
            ['TextButton'] = 'TextColor3';	
        }
        while true do
            for i=0, 1, 1 / 300 do              
                for _, obj in next, library.rainbowtable do
                    obj[props[obj.ClassName]] = Color3.fromHSV(i, 1, 1);
                end
                wait()
            end;
        end
    end)

    local function isreallypressed(bind, inp)
        local key = bind
        if typeof(key) == ""Instance"" then
            if key.UserInputType == Enum.UserInputType.Keyboard and inp.KeyCode == key.KeyCode then
                return true;
            elseif tostring(key.UserInputType):find('MouseButton') and inp.UserInputType == key.UserInputType then
                return true
            end
        end
        if tostring(key):find'MouseButton1' then
            return key == inp.UserInputType
        else
            return key == inp.KeyCode
        end
    end

    game:GetService(""UserInputService"").InputBegan:connect(function(input)
        if (not library.binding) then
            for idx, binds in next, library.binds do
                local real_binding = binds.location[idx];
                if real_binding and isreallypressed(real_binding, input) then
                    binds.callback()
                end
            end
        end
    end)
end
return library"
PYzgdMCy,auto medic main,DuyOnline101,Lua,Monday 14th of August 2023 03:26:29 AM CDT,"--Locals
local RS, TW, RF, LPSR = game:GetService(""ReplicatedStorage""), workspace:WaitForChild(""Towers""), game:GetService(""ReplicatedStorage""):WaitForChild(""RemoteFunction""), nil
local Medics, MedicIndex, MedicAbility, MedicMicro, StunnedCount, status, library = {}, 0, false, true, 0, nil,loadstring(game:HttpGet(""https://pastebin.com/N4mZbPUU"", true))()
local AbilityDelay = 2 --Change to 1.5, or 1. Whichever works best
local Debounce = false
local Debug = true
local TowersStunnedBeforeAbility = 8 --Can be changed.
local EngineMode = getgenv().EngineMode or false
local FuncTable 
--Functions
local function prints(v)
    if Debug then
        warn(v)
    end
end
local function getStatus()
    if status then
        return status.Text
    else
        return """"
    end
end
local function setStatus(v)
    if status then
        status.Text = v
    else
        warn(v)
    end
end
local function microTower(tower)
    setStatus(""Microing Medic..."")
    local frame = tower.HumanoidRootPart.CFrame
    local tname = tower.Replicator:GetAttribute(""Type"")
    local upgrade = tower.Replicator:GetAttribute(""Upgrade"")
    --Sell tower
    RF:InvokeServer(""Troops"",""Sell"",{Troop = tower})
    --Place tower
    tower = RF:InvokeServer(""Troops"",""Place"",tname,{Rotation = frame.Rotation,Position = frame.Position})
    --Upgrade tower
    for i = 1, upgrade do
        RF:InvokeServer(""Troops"",""Upgrade"",""Set"",{Troop = tower})
    end
    prints(""Microed tower!"")
    return tower
end

local function checkStun(tower) -- checks stuns of tower
    local repl = tower:FindFirstChild(""Replicator"")
    if not repl then return false end 
    local stuns = repl.Stuns
    for i,v in pairs(stuns:GetAttributes()) do
        if v == true then
            prints(""Detected Stun!"")
            return true
        end
    end
    return false
end
local function refreshStun(medic)
    local st = 0
    for i,v in pairs(workspace.Towers:GetChildren()) do
        if (medic.HumanoidRootPart.Position-v.HumanoidRootPart.Position).Magnitude <= medic.Replicator:GetAttribute(""Range"") and checkStun(v) then
            st = st + 1
        end
    end
    return st
end
local function Medic1()
    if #Medics < 1 then
        return ""Waiting for Medic...""
    end
    MedicIndex = (MedicIndex % #Medics) + 1
    local selectedMedic = Medics[MedicIndex]
    if selectedMedic.Replicator:GetAttribute(""Upgrade"") < 5 then 
        return ""Waiting for lvl 5 medic...""
    elseif StunnedCount < 1 then
        return ""Waiting for stun...""
    end
        -- Use Ability
    if MedicAbility then
        wait(AbilityDelay)
        if #Medics < 1 then return ""You sold your medic ._."" end
        if not selectedMedic then
            MedicIndex = (MedicIndex % #Medics) + 1
            selectedMedic = Medics[MedicIndex]  
        end
        StunnedCount = refreshStun(selectedMedic)
        MedicIndex = MedicIndex + 1
        if selectedMedic.Replicator:GetAttribute(""Upgrade"") < 5 then
            return ""Waiting for lvl 5 medic...""
        elseif StunnedCount < 1 then
            return ""Waiting for stun...""
        end
        local Re = RF:InvokeServer(""Troops"",""Abilities"",""Activate"",{Troop = selectedMedic,Name = ""Cleansing""})
        if not Re then --Ability on cooldown, micro medic
            if MedicMicro then
                if selectedMedic.Replicator:GetAttribute(""Worth"") > LPSR:GetAttribute(""Cash"") then return ""You can't afford to Micro! Waiting..."" end
                selectedMedic = microTower(selectedMedic)
                RF:InvokeServer(""Troops"",""Abilities"",""Activate"",{Troop = selectedMedic,Name = ""Cleansing""})       
                StunnedCount = refreshStun(selectedMedic)
                return ""Used Ability!""
            else
                return ""Ability on cooldown... Waiting...""
            end
        else
            StunnedCount = refreshStun(selectedMedic)
            return ""Used Ability!""
        end
    else
        return ""Medic Ability Not turned on!""
    end
    return ""An error occured...""
end
local function Medic()
    if not Debounce then
        Debounce = true
        local re = Medic1()
        Debounce = false
        return re or ""An error occured...""
    else
        return getStatus()
    end
end

local function monitorTower(tower)
    if tower:FindFirstChild(""Owner"").Value and tower:FindFirstChild(""Owner"").Value == game:GetService(""Players"").LocalPlayer.UserId and tower.Replicator:GetAttribute(""Type"") == ""Medic"" then
        table.insert(Medics,tower)
        prints(""Medic found! Adding to list..."")
        setStatus(Medic())
        if tower.Replicator:GetAttribute(""Upgrade"") < 5 then
            local Temp = nil
            Temp = tower.Replicator:GetAttributeChangedSignal(""Upgrade""):Connect(function()
                if tower.Parent == nil then
                    Temp:Disconnect()
                    return
                end
                if tower.Replicator:GetAttribute(""Upgrade"") == 5 then
                    prints(""Medic maxed!"")
                    setStatus(Medic())
                    Temp:Disconnect()
                end
            end)
        end
    else   
        prints(""Found tower that isn't medic! Monitoring for stun..."") 
        if checkStun(tower) then
            StunnedCount = StunnedCount + 1
            if StunnedCount >= TowersStunnedBeforeAbility then
                setStatus(Medic())
                prints(""Stunned count reached! using abi..."")
            end
        end
        local stuns = tower.Replicator:WaitForChild(""Stuns"")
        stuns.Changed:Connect(function()
            if checkStun(tower) then
                StunnedCount = StunnedCount + 1 --detects stuns, requests medic ability
                if StunnedCount >= TowersStunnedBeforeAbility then
                    setStatus(Medic())
                    prints(""Stunned count reached! using abi..."")
                end
            end
        end)
    end
end

--Initialization
if not game:IsLoaded() then game.Loaded:Wait() end
if getgenv().AlrExec then
	game.StarterGui:SetCore(""SendNotification"", {
        Title = ""Auto Medic"",
        Text = ""Script Already Executed."";
        Duration = 6;
	})
	return
elseif game.PlaceId ~= 5591597781 then
    game.StarterGui:SetCore(""SendNotification"", {
        Title = ""Auto Medic"",
        Text = ""Not in game! Killing script..."";
        Duration = 6;
    })
    return
else
    game.StarterGui:SetCore(""SendNotification"", {
        Title = ""Auto Medic"",
        Text = ""Script Executed! Enjoy :)"";
        Duration = 6;
    })
end
getgenv().AlrExec = true
for i,v in pairs(RS.StateReplicators:GetChildren()) do
    if v:GetAttribute(""UserId"") and v:GetAttribute(""UserId"") == game.Players.LocalPlayer.UserId then
        LPSR = v
    end
end
--Main 
if EngineMode then
    FuncTable = {
        Enabled = function(v)
            MedicAbility = v
        end,
        Micro = function(v)
            MedicMicro = v
        end,
        MinStuns = function(v)
            TowersStunnedBeforeAbility = v
        end
    }
else
    local w = library:CreateWindow(""Auto Medic Ability V3"")
    w:Toggle(""Auto Medic Abilities"", {default = true, flag='enabled'}, function() MedicAbility = w.flags.enabled end)
    w:Toggle(""Auto Micro Medics"", {flag='microing'}, function() MedicMicro = w.flags.microing end)
    w:Slider(""Min. Stuns"",{min = 1, max = 20, default=5, precise = false, flag = w.flags.mintower},function(value)
        value = tonumber(value)
        if not value then value = 1 end
        TowersStunnedBeforeAbility = value
    end)
    w:Button(""Delete Gui"",function()
        --w:DestroyGui() --MM IS A NERD
        for i,v in pairs(game:GetService(""CoreGui""):GetDescendants()) do
            if v:IsA(""Frame"") and v.Name == ""Auto Medic Ability V3"" then
                v.Parent.Parent:Destroy()
            end
        end
        getgenv().TowerAddedM:Disconnect()
        getgenv().TowerRemovedM:Disconnect()
        StatusTable = nil
        getgenv().AlrExecMAC = false
    end)
    w:Section('Loading...')
    for i,v in pairs(game:GetService(""CoreGui""):GetDescendants()) do
        if v:IsA(""TextLabel"") and v.Text == ""Loading..."" then
            status = v
        end
    end
end

for i,v in pairs(game:GetService(""Workspace"").Towers:GetChildren()) do
   monitorTower(v)
end

getgenv().TowerAddedM = game:GetService(""Workspace"").Towers.ChildAdded:Connect(function(v)
    wait(.25)
    if not v:FindFirstChild(""Replicator"") then
        repeat wait() until v:FindFirstChild(""Replicator"")
    end
    monitorTower(v)
end)

getgenv().TowerRemovedM = game:GetService(""Workspace"").Towers.ChildRemoved:Connect(function(v)
    if v:FindFirstChild(""Owner"").Value and v:FindFirstChild(""Owner"").Value == game:GetService(""Players"").LocalPlayer.UserId and v.Replicator:GetAttribute(""Type"") == ""Medic"" then
        for i,t in next,Medics do
            if t == v then
                table.remove(Medics,i)
                spawn(function()
                    setStatus(""Medic Removed!"")
                    wait(1)
                    setStatus(Medic())
                end)             
            end
        end
    end
end)
setStatus(Medic())
if EngineMode then return FuncTable end"
TmedGVTe,auto medic engine,DuyOnline101,Lua,Monday 14th of August 2023 03:26:29 AM CDT,"getgenv().EngineMode = true
local AutoMedic = loadstring(game:HttpGet(""https://pastebin.com/raw/PYzgdMCy"",true))()
AutoMedic.Enabled(true) --skip
AutoMedic.Micro(true)
AutoMedic.MinStuns(1)"
XwdW6dn1,B,Salvens,C++,Monday 14th of August 2023 03:22:16 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

#define int long long
using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 1e5 + 1000;
const int N = 1e5 + 10;

array<int, MAXN> sq, a;
const int B = 666;

inline void build(int n) {
    sq.fill(0);
    for (int i = 0; i < n; ++i) {
        sq[i / B] += (a[i] == 0 ? 1 : 0);
    }
}

inline int get(int l, int r) {
    int ans = 0;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans += sq[l / B];
            l += B;
        } else {
            ans += (a[l] == 0? 1 : 0);
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    build(n);
    int q;
    cin >> q;
    while (q--) {
        int l, r;
        cin >> l >> r;
        --l, --r;
        cout << get(l, r) << ' ';
    }
}
"
wSchwBzS,A,Salvens,C++,Monday 14th of August 2023 03:19:24 AM CDT,"#include <algorithm>
#include <iostream>
#include <array>
#include <vector>
#include <numeric>
#include <random>
#include <chrono>
#include <set>
#include <map>
#include <queue>

#define int long long
using namespace std;

const long long INF = 1e9 + 7;
const int MAXN = 1e5 + 1000;
const int N = 1e5 + 10;

array<int, MAXN> sq, a;
const int B = 666;

inline void build(int n) {
    sq.fill(-INF);
    for (int i = 0; i < n; ++i) {
        sq[i / B] = max(sq[i / B], a[i]);
    }
}

inline int get(int l, int r) {
    int ans = -INF;
    while (l <= r) {
        if (l % B == 0 && l + B - 1 <= r) {
            ans = max(ans, sq[l / B]);
            l += B;
        } else {
            ans = max(ans, a[l]);
            ++l;
        }
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    build(n);
    int q;
    cin >> q;
    while (q--) {
        int l, r;
        cin >> l >> r;
        --l, --r;
        cout << get(l, r) << ' ';
    }
}
"
2dT1v09K,compactor.lua,k2green,Lua,Monday 14th of August 2023 03:11:28 AM CDT,"local args = { ... }

local function turnTo(block)
    while true do
        if turtle.detect() then
            local success, data = turtle.inspect()

            if data.name == block then
                break
            end
        end

        turtle.turnLeft()
    end
end

local function fillSlot(slot)
    turtle.select(slot)

    while turtle.getItemCount() < 1 do
        turtle.suck(1)
    end
end

local function craftLoopIteration()
    turnTo(args[1])

    for y = 1, 4, 1 do
        for x = 1, 4, 1 do
            if x ~= 4 and y ~= 4 then
                local slot = (y - 1) * 4 + x
                fillSlot(slot)
            end
        end
    end

    turtle.select(1)
    turtle.craft()

    turnTo(args[2])
    turtle.drop()
end

if type(args[1]) ~= ""string"" or type(args[2]) ~= ""string"" then
    print(""Usage: compactor <source_invenory> <output_inventory>"")
else
    while true do
        craftLoopIteration()
    end
end"
rMVFY2wi,Southwest Florida Open Source OP Script (2023),zackboy989xx,Lua,Monday 14th of August 2023 02:55:20 AM CDT,"repeat wait() until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"")
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = ""Zack's Cool Hub | Southwest Florida"", HidePremium = true, IntroText = ""Really good script for this game"", SaveConfig = false, ConfigFolder = ""SWFL""})
local Home = Window:MakeTab({
	Name = ""Main"",
	Icon = ""rbxassetid://4483345998"",
	PremiumOnly = false
})
local HomeSection = Home:AddSection({
	Name = ""Main""
})
wait()
function CheckKick()
warn(""Watching the client for Kick Message... (is auto watching for Kick Message)"")
end
wait()
game:GetService(""GuiService"").ErrorMessageChanged:Connect(function(msg)
if game.GuiService:GetErrorCode() == Enum.ConnectionError.DisconnectLuaKick then
_G.CheckKick = false
wait(0.2)
warn(""Detected Kick, Rejoining..."")
wait()
local TeleportService = game:GetService(""TeleportService"")
TeleportService:Teleport(game.PlaceId, game.Players.LocalPlayer)
wait()
TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
end
end)
wait()
Home:AddButton({
Name = ""Mod Car"",
Callback = function()
function getCar()
    for i, v in pairs(game:GetService(""Workspace"")[""Cars""]:GetChildren()) do
        if v.PlayerLoc.Value == game:GetService(""Players"").LocalPlayer then
            return v
        end
    end
end

for i,v in pairs(game:GetService(""Workspace"").Cars:GetDescendants()) do 
if v:IsA(""ModuleScript"") and v.Name == ""A-Chassis Tune"" then
local a = require(v) 
a.Weight = 1250
a.SpeedEngage = 200000
a.BrakeForce = 100000
a.Turbochargers = 10
a.Superchargers = 10
a.RevAccel = 5000
a.SteeerMaxTorque = 1000001

for i,v in pairs(a) do print(i,v) end end end

if not getCar() or getCar() == nil then
function Callback(answer)
    if answer == ""Ok"" then
        game.StarterGui:SetCore(""SendNotification"", {
        Title = ""RETURNED RESPONSE __Ok__"";
        Text = ""__Ok__"";
        Duration = 10;
        })
    elseif answer == ""Nevermind"" then
        game.StarterGui:SetCore(""SendNotification"", {
        Title = ""RETURNED RESPONSE __Nevermind__"";
        Text = ""__Nevermind__"";
        Duration = 10;
        })
    end
end

local Bindable = Instance.new(""BindableFunction"")
Bindable.OnInvoke = Callback

game.StarterGui:SetCore(""SendNotification"", {
    Title = ""Spawn a car first"";
    Text = ""Please spawn a car before pressing this!"";
    Duration = ""30"";
    Button1 = ""Ok"";
    Button2 = ""Nevermind"";
    Callback = Bindable
})
end
end})

Home:AddButton({
Name = ""Inf Yield"",
Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end})

Home:AddButton({
Name = ""Full Anti-Cheat Bypass (gun mods, might break damage?)"",
Callback = function()
if game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""SecureSettings"") then
game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""SecureSettings""):Destroy()
wait()
if game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""SecureSettings"") == nil then
return print(""game.ReplicatedStorage.Remotes.SecureSettings | RemoteEvent = nil"")
end
end
wait()
if game:GetService(""ReplicatedStorage""):WaitForChild(""ExploitService"") then
game:GetService(""ReplicatedStorage""):WaitForChild(""ExploitService""):Destroy()
wait()
if game:GetService(""ReplicatedStorage""):WaitForChild(""ExploitService"") == nil then
return print(""game.ReplicatedStorage.ExploitService | RemoteEvent = nil"")
end
end
wait()
if game:GetService(""ReplicatedStorage""):WaitForChild(""Modules""):WaitForChild(""RemoteHandler"") then -- Only reason I have put this here is because SecureSettings fires from this Module
game:GetService(""ReplicatedStorage""):WaitForChild(""Modules""):WaitForChild(""RemoteHandler""):Destroy()
wait()
if game:GetService(""ReplicatedStorage""):WaitForChild(""Modules""):WaitForChild(""RemoteHandler"") == nil then
return print(""game.ReplicatedStorage.Modules.RemoteHandler | Module = nil"")
end
end
end})

Home:AddToggle({
Name = ""Break apartment when touched (break on touch)"",
Default = false,
Callback = function(breaking)
if breaking then
getgenv().looping = true
while getgenv().looping == true do
wait()
for _,v in pairs(game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type3Lot""):WaitForChild(""fDoor""):GetDescendants()) do
if v:IsA(""TouchTransmitter"") then
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 0)
wait()
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 1)
wait()
game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type3Lot""):WaitForChild(""homeOwnerEvent""):FireServer(false)
end
end
wait()
for _,v in pairs(game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type4Lot""):WaitForChild(""fDoor""):GetDescendants()) do
if v:IsA(""TouchTransmitter"") then
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 0)
wait()
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 1)
wait()
game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type4Lot""):WaitForChild(""homeOwnerEvent""):FireServer(false)
end
end
wait()
for _,v in pairs(game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type5Lot""):WaitForChild(""fDoor""):GetDescendants()) do
if v:IsA(""TouchTransmitter"") then
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 0)
wait()
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 1)
wait()
game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type5Lot""):WaitForChild(""homeOwnerEvent""):FireServer(false)
end
end
wait()
for _,v in pairs(game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type6Lot""):WaitForChild(""fDoor""):GetDescendants()) do
if v:IsA(""TouchTransmitter"") then
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 0)
wait()
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 1)
wait()
game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type6Lot""):WaitForChild(""homeOwnerEvent""):FireServer(false)
end
end
wait()
for _,v in pairs(game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type7Lot""):WaitForChild(""fDoor""):GetDescendants()) do
if v:IsA(""TouchTransmitter"") then
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 0)
wait()
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 1)
wait()
game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type7Lot""):WaitForChild(""homeOwnerEvent""):FireServer(false)
end
end
wait()
for _,v in pairs(game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type8Lot""):WaitForChild(""fDoor""):GetDescendants()) do
if v:IsA(""TouchTransmitter"") then
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 0)
wait()
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 1)
wait()
game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type8Lot""):WaitForChild(""homeOwnerEvent""):FireServer(false)
end
end
wait()
for _,v in pairs(game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type9Lot""):WaitForChild(""fDoor""):GetDescendants()) do
if v:IsA(""TouchTransmitter"") then
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 0)
wait()
firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild(""HumanoidRootPart""), v.Parent, 1)
wait()
game:GetService(""Workspace""):WaitForChild(""HouseSystem""):WaitForChild(""HouseLots""):WaitForChild(""type9Lot""):WaitForChild(""homeOwnerEvent""):FireServer(false)
end
end
end
else
getgenv().looping = false
end
end})

Home:AddButton({
Name = ""Mod G17 (Police Gun)"",
Callback = function()
local Team = game:GetService(""Teams"")[""Police""]

function ChangeTeam()
    game:GetService(""ReplicatedStorage""):WaitForChild(""changeTeam""):FireServer(BrickColor.new(23))
    wait(0.2)
    for i = 1, 5 do
    game:GetService(""ReplicatedStorage""):WaitForChild(""loadCharRemote""):FireServer()
    end
    wait(1)
    function Callback(answer)
    if answer == ""Ok"" then
        game.StarterGui:SetCore(""SendNotification"", {
        Title = ""RETURNED RESPONSE __Ok__"";
        Text = ""__Ok__"";
        Duration = 10;
        })
    elseif answer == ""Alright"" then
        game.StarterGui:SetCore(""SendNotification"", {
        Title = ""RETURNED RESPONSE __Alright__"";
        Text = ""__Alright__"";
        Duration = 10;
        })
    end
end

local Bindable = Instance.new(""BindableFunction"")
Bindable.OnInvoke = Callback

game.StarterGui:SetCore(""SendNotification"", {
    Title = ""Alert:"";
    Text = ""Press Mod G17 again to mod the G17"";
    Duration = ""30"";
    Button1 = ""Ok"";
    Button2 = ""Alright"";
    Callback = Bindable
})
end

if game.Players.LocalPlayer.Team ~= Team then
ChangeTeam()
end
wait()
local Team = game.Players.LocalPlayer.Team
local Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(""G17"")
if game.Players.LocalPlayer.Team == Team then
Tool.Parent = game.Players.LocalPlayer.Character
wait(0.2)
local sus = require(Tool.Setting)
sus.AutoFire = true
sus.FireRate = 0.00001
sus.MaxAmmo = 9e9
sus.Recoil =  0.00001
sus.Ammo = 9e9
sus.AmmoPerMag = 9e9
sus.FlamingBullet = true
sus.ExplosiveEnabled = true
sus.LimitedAmmoEnabled = false
wait()
local function pressKey(key)
    game:GetService(""VirtualInputManager""):SendKeyEvent(true, key, false, game.Players.LocalPlayer.Character:FindFirstChild(""G17""))
end
wait()
pressKey(Enum.KeyCode.R)
end
end})

Home:AddButton({
Name = ""Mod M9 (Criminal Gun)"",
Callback = function()
local TeamCrim = game:GetService(""Teams"")[""Criminal""]

function ChangeTeam()
    game:GetService(""ReplicatedStorage""):WaitForChild(""changeTeam""):FireServer(BrickColor.new(21))
    wait(0.2)
    for i = 1, 5 do
    game:GetService(""ReplicatedStorage""):WaitForChild(""loadCharRemote""):FireServer()
    end
    wait(1)
function Callback(answer)
    if answer == ""Ok"" then
        game.StarterGui:SetCore(""SendNotification"", {
        Title = ""RETURNED RESPONSE __Ok__"";
        Text = ""__Ok__"";
        Duration = 10;
        })
    elseif answer == ""Alright"" then
        game.StarterGui:SetCore(""SendNotification"", {
        Title = ""RETURNED RESPONSE __Nevermind__"";
        Text = ""__Nevermind__"";
        Duration = 10;
        })
    end
end

local Bindable = Instance.new(""BindableFunction"")
Bindable.OnInvoke = Callback

game.StarterGui:SetCore(""SendNotification"", {
    Title = ""Alert:"";
    Text = ""Press Mod M9 again to mod the M9"";
    Duration = ""30"";
    Button1 = ""Ok"";
    Button2 = ""Alright"";
    Callback = Bindable
})
end

if game.Players.LocalPlayer.Team ~= TeamCrim then
ChangeTeam()
end
wait()
local Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(""M9"")
if game.Players.LocalPlayer.Team == TeamCrim then
Tool.Parent = game.Players.LocalPlayer.Character
wait(0.2)
local sus = require(Tool.Setting)
sus.AutoFire = true
sus.FireRate = 0.00001
sus.MaxAmmo = 9e9
sus.Recoil =  0.00001
sus.Ammo = 9e9
sus.AmmoPerMag = 9e9
sus.FlamingBullet = true
sus.ExplosiveEnabled = true
sus.LimitedAmmoEnabled = false
wait()
local function pressKey(key)
    game:GetService(""VirtualInputManager""):SendKeyEvent(true, key, false, game.Players.LocalPlayer.Character:FindFirstChild(""M9""))
end
wait()
pressKey(Enum.KeyCode.R)
end
end})
CheckKick()"
8JBJPAet,Nested Conditionals,naren_paste,Python,Monday 14th of August 2023 02:47:59 AM CDT,"a = int(input('Enter the age of the person: '))
b = str(input('Enter the citizenship of the person: '))
c = str(input('Do he/she have a voter ID card? '))
if a >= 18:
    if b == 'Indian':
        print('You are Indian and you can vote')
        if c == 'yes':
            print('Yes, you are eligible to vote')
        else:
            print('You are not eligible to vote')
    else:
        print(""""Sorry, you are not a citizen so you can't vote"""")
else:
    print(""""Sorry, you are not eligible to vote"""")"
PYsx8Fxw,digitfreq count,shivamisone,Java,Monday 14th of August 2023 02:38:05 AM CDT,"import java.util.*;
public class number{
    public static void main(){
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        number s = new number();
        s.digitFreq(n);
    }
    void digitFreq(long n){
        String k = Long.toString(n);
        for(int i =0;i<k.length();i++){
            char c = k.charAt(i);
            int count = 0;
            for(int j =0;j<k.length();j++){
                if(k.charAt(j)== c){
                    count++;
                    k = k.substring(0,j)+""*""+k.substring(j+1);
                }
            }
            if(c != '*'){
            System.out.println(""frequency of:""+c+""is""+count);
            }
        }
    }
}"
edsvfd0w,Vodafone Station Login,chemelli74,Python,Monday 14th of August 2023 02:29:34 AM CDT,"async def _find_login_url(self) -> str:
        """"""
        Find the login page

        Router reply with 200 and a html body instead of a formal redirect
        """"""

        url = f""{self.base_url}/login.html""
        _LOGGER.debug(""Requested login url: <%s>"", url)
        reply = await self.session.get(
            url,
            headers=self.headers,
            timeout=10,
            verify_ssl=False,
            allow_redirects=True,
        )
        reply_text = await reply.text()
        reply_url = re.search('(?<=URL=)[^""]+', reply_text)
        if reply_url:
            redirect_url = urllib.parse.urlparse(reply_url.group(0))
            if redirect_url.scheme != self.protocol:
                self.protocol = redirect_url.scheme
                self.base_url = self._base_url()
                _LOGGER.debug(""Redirected login!"")
                reply_text = await self._find_login_url()

        return reply_text
"
gUgUjyaz,calc.py,Mryeetmemes,Python,Monday 14th of August 2023 02:12:59 AM CDT,"def add(x, y):
    return x + y

def subtract(x, y):
    return x - y

def multiply(x, y):
    return x * y

def divide(x, y):
    if y != 0:
        return x / y
    else:
        return ""Cannot divide by zero""

while True:
    print(""Select operation:"")
    print(""1. Add"")
    print(""2. Subtract"")
    print(""3. Multiply"")
    print(""4. Divide"")
    print(""5. Exit"")
    
    choice = input(""Enter choice (1/2/3/4/5): "")

    if choice == '5':
        print(""Exiting the calculator. Have a nice day!"")
        break

    if choice in ('1', '2', '3', '4'):
        num1 = float(input(""Enter first number: ""))
        num2 = float(input(""Enter second number: ""))

        if choice == '1':
            print(""Result:"", add(num1, num2))
        elif choice == '2':
            print(""Result:"", subtract(num1, num2))
        elif choice == '3':
            print(""Result:"", multiply(num1, num2))
        elif choice == '4':
            print(""Result:"", divide(num1, num2))
    else:
        print(""Invalid Input"")
"
jU2DhsFk,DLsite-helper-custom 2.0.0,usotsuki_KR,JavaScript,Monday 14th of August 2023 02:10:40 AM CDT,"// ==UserScript==
// @name     dlsite-helper-custom
// @version  2.0.0
// @match    https://www.dlsite.com/*/work/=/product_id/*
// @author   원작자: ggee / 무단수정: 카와와시즈코
// @grant    none
// ==/UserScript==

;(function() {

  const GALL_BASE_URL = 'https://arca.live/b/momoirocode'
  const HVDB_BASE_URL = 'https://hvdb.me/Dashboard/WorkDetails'
  const KIKOERU_BASE_URL = 'https://asmr.one/work/'
  const E_HENTAI_URL = 'https://e-hentai.org'
  const E_HENTAI_BUTTON_NAME = 'E-Hentai'

  const title = document.getElementById('work_name')
  const circ = document.getElementById('work_maker')
  const circLink = circ.querySelector('tbody>tr>td>span>a')
  const linkButtons = document.querySelector('.link_dl_ch')
  const rjCode = document.querySelector('[data-product-id]').getAttribute('data-product-id')
  const type = getTitleByFirstCategory()

  const style = document.createElement('style')
  style.appendChild(document.createTextNode(`
.RJ-modal-button { box-sizing: border-box; width: 100%; display: block; padding-top: 0.6em; padding-bottom: 0.6em; font-size: 1.2em; font-weight: bold; color: #000; text-align: center; }
.RJ-modal-button:hover, .RJ-modal-button:focus { background-color: #ddf; color:#00F }
`))
  document.head.appendChild(style)

  linkButtons.insertBefore(
      createLinkAnchor(
          { href: '#link' },
          'LINK'
      ),
      linkButtons.firstChild
  )
  linkButtons.insertBefore(
    createAnchor(
    	{ href: '#folder' },
      '폴더명'
    ),
    linkButtons.firstChild
  )
  linkButtons.insertBefore(
    createAnchor(
    	{ href: '#rjcode' },
      'RJCode'
    ),
    linkButtons.firstChild
  )
  if (isRowExists('声優') || isRowExists('성우')) {
      linkButtons.insertBefore(
          createAnchor(
              { href: '#seiyuu' },
              '성우명'
          ),
          linkButtons.firstChild
      )
  }
  linkButtons.insertBefore(
    createAnchor(
    	{ href: '#circle' },
      '서클명'
    ),
    linkButtons.firstChild
  )
  linkButtons.insertBefore(
    createAnchor(
    	{ href: '#copy' },
      '제목복사'
    ),
    linkButtons.firstChild
  )

  function getTitleByFirstCategory() {
      const table = document.getElementById('work_outline')
      const maxIndex = table.rows.length
      let isGet = false;
      let result = """";

      for (let i = 1; i <= maxIndex; i++) {
          const th = table.querySelector(`tbody>tr:nth-child(${i})>th`)

          if (th.textContent === ""作品形式"" || th.textContent === ""작품 형식"") {
              result = table.querySelector(`tbody>tr:nth-child(${i})>td>div>a:nth-child(1)>span`).textContent
              break
          }
      }

      console.log(`result: ${result}`)
      return result
  }

  function isRowExists(rowName) {
      const table = document.getElementById('work_outline')
      const maxIndex = table.rows.length
      let result = """";

      for (let i = 1; i <= maxIndex; i++) {
          const th = table.querySelector(`tbody>tr:nth-child(${i})>th`)

          if (th.textContent === rowName) {
              return true
          }
      }

      return false
  }

  function getRowText(rowName) {
      const table = document.getElementById('work_outline')
      const maxIndex = table.rows.length
      let isGet = false;
      let result = """";

      for (let i = 1; i <= maxIndex; i++) {
          const th = table.querySelector(`tbody>tr:nth-child(${i})>th`)

          if (th.textContent === rowName) {
              const count = table.querySelector(`tbody>tr:nth-child(${i})>td`).childElementCount

              for (let j = 1; j <= count; j++) {
                  result += table.querySelector(`tbody>tr:nth-child(${i})>td>a:nth-child(${j})`).textContent
                  if (j < count) {
                      result += ' / '
                  }
              }

              break
          }
      }

      console.log(`result: ${result}`)
      return result
  }

  function createLinkAnchor(attrs, child) {
    const el = document.createElement('a')
    for (let attr in attrs) {
      el.setAttribute(attr, attrs[attr])
    }
    el.className = 'dl_ch_button talk'
    el.target = '_blank'
    el.rel = 'nofollow'

    const span = document.createElement('span')
    span.className = 'button_label'
    span.textContent = child

    el.addEventListener('click', event => {
        event.preventDefault()
        showModal()
    })

    el.appendChild(span)
    return el
  }

  function setCopydButton(el, span, child) {
      el.className = 'dl_ch_button talk'; span.textContent = '복사됨'
      setTimeout(() => {
        el.className = 'dl_ch_button matome';
        span.textContent = child
      }, 2000)
  }

  function createAnchor(attrs, child) {
    const el = document.createElement('a')
    for (let attr in attrs) {
      el.setAttribute(attr, attrs[attr])
    }
    el.className = 'dl_ch_button matome'
    el.target = '_blank'
    el.rel = 'nofollow'

    const span = document.createElement('span')
    span.className = 'button_label'
    span.textContent = child

    switch (attrs.href) {
        case '#copy':
            el.addEventListener('click', event => {
                event.preventDefault()
                navigator.clipboard.writeText(title.textContent)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#circle':
            el.addEventListener('click', event => {
                event.preventDefault()
                navigator.clipboard.writeText(circLink.textContent)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#seiyuu':
            el.addEventListener('click', event => {
                event.preventDefault()
                let seiyuuName = getRowText('声優')
                if (seiyuuName === """") seiyuuName = getRowText('성우')
                navigator.clipboard.writeText(seiyuuName)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#folder':
            el.addEventListener('click', event => {
                event.preventDefault()
                navigator.clipboard.writeText('[' + circLink.textContent + '] ' + rjCode + ' ' + title.textContent)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#rjcode':
            el.addEventListener('click', event => {
                event.preventDefault()
                navigator.clipboard.writeText(rjCode)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#link':
            el.addEventListener('click', event => {
                event.preventDefault()
                showModal()
            })
            break
    }

    el.appendChild(span)
    return el
  }

    function showModal() {
        const modal = document.createElement('div')
        modal.style.position = 'fixed'
        modal.style.top = '0'
        modal.style.left = '0'
        modal.style.width = '100%'
        modal.style.height = '100%'
        modal.style.backgroundColor = 'rgba(0,0,0,0.7)'
        modal.style.zIndex = '1000'
        modal.style.display = 'flex'
        modal.style.justifyContent = 'center'
        modal.style.alignItems = 'center'

        const modalContent = document.createElement('div')
        modalContent.style.width = '300px'
        modalContent.style.padding = '5px'
        modalContent.style.backgroundColor = 'white'
        modalContent.style.borderRadius = '10px'

        var rjSearchWord = rjCode.replace(""RJ"","""")

        if (rjSearchWord.startsWith(""01"") && rjSearchWord.length === 8) {
            rjSearchWord = rjSearchWord.substring(2)
        }

        var arcaQuery = ''

        if (type === 'ボイス・ASMR' || type === '보이스・ASMR') {
            arcaQuery = `${GALL_BASE_URL}?target=all&keyword=${rjSearchWord}`
        } else {
            arcaQuery = `https://arca.live/b/simya?target=all&keyword=${rjSearchWord}`
        }

        const a = createModalButton(arcaQuery, 'Arca.live')

        modalContent.appendChild(a);

        if (type === 'ボイス・ASMR' || type === '보이스・ASMR') {
            // const aKikoeru = a.cloneNode(true)
            // aKikoeru.href = `${KIKOERU_BASE_URL}${rjCode}`
            // aKikoeru.textContent = 'KIKOERU'

            const aKikoeru = createModalButton(`${KIKOERU_BASE_URL}${rjCode}`, 'KIKOERU')
            const aHVDB = createModalButton(`${HVDB_BASE_URL}/${rjCode}`, 'HVDB')

            modalContent.appendChild(aKikoeru);
            modalContent.appendChild(aHVDB);
        } else if (type === 'CG・イラスト' || type === 'CG・일러스트' || type === 'マンガ' || type === '만화') {
            const aExHentaiCircle = createModalButton(`${E_HENTAI_URL}/?f_search=${circLink.textContent}`, `${E_HENTAI_BUTTON_NAME}(서클명)`)

            const aExHentaiTitle = createModalButton(`${E_HENTAI_URL}/?f_search=${title.textContent}`, `${E_HENTAI_BUTTON_NAME}(제목)`)

            modalContent.appendChild(aExHentaiCircle);
            modalContent.appendChild(aExHentaiTitle);
        } else {
            const aAnime = createModalButton(`https://www.anime-sharing.com/search/000000/?q=${rjCode}&o=relevance`, 'Anime-Sharing')

            modalContent.appendChild(aAnime);
        }

        const aGoogle = createModalButton(`https://www.google.com/search?q=${rjCode}`, 'Google')

        modalContent.appendChild(aGoogle);

        modal.appendChild(modalContent);
        document.body.appendChild(modal);

        modal.onclick = function() {
            document.body.removeChild(modal);
    }

    function createModalButton(href, label) {
        const button = document.createElement('a')
        button.className = 'RJ-modal-button'
        button.href = href
        button.target = '_blank'
        button.style.display = 'flex' // flexbox를 사용합니다.
        button.style.alignItems = 'center' // 세로 중앙 정렬을 설정합니다.
        button.style.justifyContent = 'center'

        // 이미지를 생성하고 설정합니다.
        const image = document.createElement('img');
        image.src = `https://www.google.com/s2/favicons?domain=${href}`
        image.alt = label + ' icon' // 대체 텍스트를 설정합니다.
        image.style.width = '16px' // 파비콘 사이즈로 설정합니다.
        image.style.height = '16px'
        image.style.marginRight = '5px' // 이미지와 텍스트 사이의 간격을 설정합니다.

        // 이미지와 텍스트를 버튼에 추가합니다.
        button.appendChild(image);
        button.appendChild(document.createTextNode(label));

        return button
    }
}

})();"
vJgBVsM3,DLsite-helper-custom 2.0.0ex,usotsuki_KR,JavaScript,Monday 14th of August 2023 02:08:51 AM CDT,"// ==UserScript==
// @name     dlsite-helper-custom
// @version  2.0.0
// @match    https://www.dlsite.com/*/work/=/product_id/*
// @author   원작자: ggee / 무단수정: 카와와시즈코
// @grant    none
// ==/UserScript==

;(function() {

  const GALL_BASE_URL = 'https://arca.live/b/momoirocode'
  const HVDB_BASE_URL = 'https://hvdb.me/Dashboard/WorkDetails'
  const KIKOERU_BASE_URL = 'https://asmr.one/work/'
  const E_HENTAI_URL = 'https://exhentai.org'
  const E_HENTAI_BUTTON_NAME = 'ExHentai'

  const title = document.getElementById('work_name')
  const circ = document.getElementById('work_maker')
  const circLink = circ.querySelector('tbody>tr>td>span>a')
  const linkButtons = document.querySelector('.link_dl_ch')
  const rjCode = document.querySelector('[data-product-id]').getAttribute('data-product-id')
  const type = getTitleByFirstCategory()

  const style = document.createElement('style')
  style.appendChild(document.createTextNode(`
.RJ-modal-button { box-sizing: border-box; width: 100%; display: block; padding-top: 0.6em; padding-bottom: 0.6em; font-size: 1.2em; font-weight: bold; color: #000; text-align: center; }
.RJ-modal-button:hover, .RJ-modal-button:focus { background-color: #ddf; color:#00F }
`))
  document.head.appendChild(style)

  linkButtons.insertBefore(
      createLinkAnchor(
          { href: '#link' },
          'LINK'
      ),
      linkButtons.firstChild
  )
  linkButtons.insertBefore(
    createAnchor(
    	{ href: '#folder' },
      '폴더명'
    ),
    linkButtons.firstChild
  )
  linkButtons.insertBefore(
    createAnchor(
    	{ href: '#rjcode' },
      'RJCode'
    ),
    linkButtons.firstChild
  )
  if (isRowExists('声優') || isRowExists('성우')) {
      linkButtons.insertBefore(
          createAnchor(
              { href: '#seiyuu' },
              '성우명'
          ),
          linkButtons.firstChild
      )
  }
  linkButtons.insertBefore(
    createAnchor(
    	{ href: '#circle' },
      '서클명'
    ),
    linkButtons.firstChild
  )
  linkButtons.insertBefore(
    createAnchor(
    	{ href: '#copy' },
      '제목복사'
    ),
    linkButtons.firstChild
  )

  function getTitleByFirstCategory() {
      const table = document.getElementById('work_outline')
      const maxIndex = table.rows.length
      let isGet = false;
      let result = """";

      for (let i = 1; i <= maxIndex; i++) {
          const th = table.querySelector(`tbody>tr:nth-child(${i})>th`)

          if (th.textContent === ""作品形式"" || th.textContent === ""작품 형식"") {
              result = table.querySelector(`tbody>tr:nth-child(${i})>td>div>a:nth-child(1)>span`).textContent
              break
          }
      }

      console.log(`result: ${result}`)
      return result
  }

  function isRowExists(rowName) {
      const table = document.getElementById('work_outline')
      const maxIndex = table.rows.length
      let result = """";

      for (let i = 1; i <= maxIndex; i++) {
          const th = table.querySelector(`tbody>tr:nth-child(${i})>th`)

          if (th.textContent === rowName) {
              return true
          }
      }

      return false
  }

  function getRowText(rowName) {
      const table = document.getElementById('work_outline')
      const maxIndex = table.rows.length
      let isGet = false;
      let result = """";

      for (let i = 1; i <= maxIndex; i++) {
          const th = table.querySelector(`tbody>tr:nth-child(${i})>th`)

          if (th.textContent === rowName) {
              const count = table.querySelector(`tbody>tr:nth-child(${i})>td`).childElementCount

              for (let j = 1; j <= count; j++) {
                  result += table.querySelector(`tbody>tr:nth-child(${i})>td>a:nth-child(${j})`).textContent
                  if (j < count) {
                      result += ' / '
                  }
              }

              break
          }
      }

      console.log(`result: ${result}`)
      return result
  }

  function createLinkAnchor(attrs, child) {
    const el = document.createElement('a')
    for (let attr in attrs) {
      el.setAttribute(attr, attrs[attr])
    }
    el.className = 'dl_ch_button talk'
    el.target = '_blank'
    el.rel = 'nofollow'

    const span = document.createElement('span')
    span.className = 'button_label'
    span.textContent = child

    el.addEventListener('click', event => {
        event.preventDefault()
        showModal()
    })

    el.appendChild(span)
    return el
  }

  function setCopydButton(el, span, child) {
      el.className = 'dl_ch_button talk'; span.textContent = '복사됨'
      setTimeout(() => {
        el.className = 'dl_ch_button matome';
        span.textContent = child
      }, 2000)
  }

  function createAnchor(attrs, child) {
    const el = document.createElement('a')
    for (let attr in attrs) {
      el.setAttribute(attr, attrs[attr])
    }
    el.className = 'dl_ch_button matome'
    el.target = '_blank'
    el.rel = 'nofollow'

    const span = document.createElement('span')
    span.className = 'button_label'
    span.textContent = child

    switch (attrs.href) {
        case '#copy':
            el.addEventListener('click', event => {
                event.preventDefault()
                navigator.clipboard.writeText(title.textContent)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#circle':
            el.addEventListener('click', event => {
                event.preventDefault()
                navigator.clipboard.writeText(circLink.textContent)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#seiyuu':
            el.addEventListener('click', event => {
                event.preventDefault()
                let seiyuuName = getRowText('声優')
                if (seiyuuName === """") seiyuuName = getRowText('성우')
                navigator.clipboard.writeText(seiyuuName)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#folder':
            el.addEventListener('click', event => {
                event.preventDefault()
                navigator.clipboard.writeText('[' + circLink.textContent + '] ' + rjCode + ' ' + title.textContent)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#rjcode':
            el.addEventListener('click', event => {
                event.preventDefault()
                navigator.clipboard.writeText(rjCode)
                    .then(() => { setCopydButton(el, span, child) })
            })
            break
        case '#link':
            el.addEventListener('click', event => {
                event.preventDefault()
                showModal()
            })
            break
    }

    el.appendChild(span)
    return el
  }

    function showModal() {
        const modal = document.createElement('div')
        modal.style.position = 'fixed'
        modal.style.top = '0'
        modal.style.left = '0'
        modal.style.width = '100%'
        modal.style.height = '100%'
        modal.style.backgroundColor = 'rgba(0,0,0,0.7)'
        modal.style.zIndex = '1000'
        modal.style.display = 'flex'
        modal.style.justifyContent = 'center'
        modal.style.alignItems = 'center'

        const modalContent = document.createElement('div')
        modalContent.style.width = '300px'
        modalContent.style.padding = '5px'
        modalContent.style.backgroundColor = 'white'
        modalContent.style.borderRadius = '10px'

        var rjSearchWord = rjCode.replace(""RJ"","""")

        if (rjSearchWord.startsWith(""01"") && rjSearchWord.length === 8) {
            rjSearchWord = rjSearchWord.substring(2)
        }

        var arcaQuery = ''

        if (type === 'ボイス・ASMR' || type === '보이스・ASMR') {
            arcaQuery = `${GALL_BASE_URL}?target=all&keyword=${rjSearchWord}`
        } else {
            arcaQuery = `https://arca.live/b/simya?target=all&keyword=${rjSearchWord}`
        }

        const a = createModalButton(arcaQuery, 'Arca.live')

        modalContent.appendChild(a);

        if (type === 'ボイス・ASMR' || type === '보이스・ASMR') {
            // const aKikoeru = a.cloneNode(true)
            // aKikoeru.href = `${KIKOERU_BASE_URL}${rjCode}`
            // aKikoeru.textContent = 'KIKOERU'

            const aKikoeru = createModalButton(`${KIKOERU_BASE_URL}${rjCode}`, 'KIKOERU')
            const aHVDB = createModalButton(`${HVDB_BASE_URL}/${rjCode}`, 'HVDB')

            modalContent.appendChild(aKikoeru);
            modalContent.appendChild(aHVDB);
        } else if (type === 'CG・イラスト' || type === 'CG・일러스트' || type === 'マンガ' || type === '만화') {
            const aExHentaiCircle = createModalButton(`${E_HENTAI_URL}/?f_search=${circLink.textContent}`, `${E_HENTAI_BUTTON_NAME}(서클명)`)

            const aExHentaiTitle = createModalButton(`${E_HENTAI_URL}/?f_search=${title.textContent}`, `${E_HENTAI_BUTTON_NAME}(제목)`)

            modalContent.appendChild(aExHentaiCircle);
            modalContent.appendChild(aExHentaiTitle);
        } else {
            const aAnime = createModalButton(`https://www.anime-sharing.com/search/000000/?q=${rjCode}&o=relevance`, 'Anime-Sharing')

            modalContent.appendChild(aAnime);
        }

        const aGoogle = createModalButton(`https://www.google.com/search?q=${rjCode}`, 'Google')

        modalContent.appendChild(aGoogle);

        modal.appendChild(modalContent);
        document.body.appendChild(modal);

        modal.onclick = function() {
            document.body.removeChild(modal);
    }

    function createModalButton(href, label) {
        const button = document.createElement('a')
        button.className = 'RJ-modal-button'
        button.href = href
        button.target = '_blank'
        button.style.display = 'flex' // flexbox를 사용합니다.
        button.style.alignItems = 'center' // 세로 중앙 정렬을 설정합니다.
        button.style.justifyContent = 'center'

        // 이미지를 생성하고 설정합니다.
        const image = document.createElement('img');
        image.src = `https://www.google.com/s2/favicons?domain=${href}`
        image.alt = label + ' icon' // 대체 텍스트를 설정합니다.
        image.style.width = '16px' // 파비콘 사이즈로 설정합니다.
        image.style.height = '16px'
        image.style.marginRight = '5px' // 이미지와 텍스트 사이의 간격을 설정합니다.

        // 이미지와 텍스트를 버튼에 추가합니다.
        button.appendChild(image);
        button.appendChild(document.createTextNode(label));

        return button
    }
}

})();"
xRWT7f80,WEBNET_5G,Webnetjoao,JSON,Monday 14th of August 2023 01:58:32 AM CDT,"{
  ""Version"": ""5"",
  ""UrlUpdate"": ""https://pastebin.com/raw/xRWT7f80"",
  ""Sms"": ""https://pastebin.com/raw/25kCiY1Q"",
  ""Feedback"": ""Https://api.whatsapp.com/send?phone=5514997993100"",
  ""LogoUrl"": ""https://i.postimg.cc/t4mFHJCG/br.jpg"",
  ""FundoUrl"": ""https://i.postimg.cc/pTcv2Cqn/images-1.jpg"",
  ""ContatoUrl"": ""Https://api.whatsapp.com/send?phone=5514997993100&text=Menu"",
  ""SiteUrl"": ""Https://painelwebnetbr.online/login.php "",
  ""MenuImg"": ""https://i.imgur.com/e7I6PZM.png"",
  ""LogsImg"": ""https://i.imgur.com/XbnQ4Xu.png"",
  ""Servers"": [
    {
      ""Name"": ""🟣 VIVO 01(SECURITY)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[crlf]Host: d2hn4g9yvp95o0.cloudfront.net[crlf]backend: backend26[crlf]upgrade: websocket[crlf]connection: upgrade[crlf][crlf]"",
      ""ProxyIP"": ""209.14.68.74"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 02(SECURITY)"",
      ""ServerIP"": ""209.14.68.74"",
      ""ServerPort"": ""22"",
      ""Payload"": ""[split][lf]ACL / HTTP/1.1[crlf]Host: portalrecarga.vivo.com.br[crlf]Upgrade: Upgrade[crlf]Connection: [crlf][crlf]"",
      ""ProxyIP"": ""209.14.68.74"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 03(SECURITY)"",
      ""ServerIP"": ""209.14.68.74"",
      ""ServerPort"": ""22"",
      ""Payload"": ""[split][lf]ACL / HTTP/1.1[crlf]Host: portalrecarga.vivo.com.br[crlf]Upgrade: Upgrade[crlf]Connection: [crlf][crlf]"",
      ""ProxyIP"": ""209.14.68.74"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 04(SECURITY)"",
      ""ServerIP"": ""209.14.68.74"",
      ""ServerPort"": ""22"",
      ""Payload"": ""[split][lf]ACL / HTTP/1.1[crlf]Host: portalrecarga.vivo.com.br[crlf]Upgrade: Upgrade[crlf]Connection: [crlf][crlf]"",
      ""ProxyIP"": ""209.14.68.74"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 05(SECURITY)"",
      ""ServerIP"": ""209.14.68.74"",
      ""ServerPort"": ""22"",
      ""Payload"": ""[split][lf]ACL / HTTP/1.1[crlf]Host: portalrecarga.vivo.com.br[crlf]Upgrade: Upgrade[crlf]Connection: [crlf][crlf]"",
      ""ProxyIP"": ""209.14.68.74"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 01(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""d1eb62kd21ab5i.cloudfront.net"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 02(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""52.85.213.82"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 03(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""52.85.213.23"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 04(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""52.85.213.68"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 05(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""108.139.95.120"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 06(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""52.85.213.48"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 07(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""13.227.126.49"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 08(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""108.158.161.49"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 09(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""108.158.161.49"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    },
    {
      ""Name"": ""🟣 VIVO 10(CDN)"",
      ""ServerIP"": ""br.smnetbr.xyz"",
      ""ServerPort"": ""22"",
      ""Payload"": ""GET / HTTP/1.5[lf]Host: [rotate=cdn1.atechouse.com;cdn2.atechouse.com][lf]backend:backendCFJ7748215840[lf]upgrade: websocket[lf]connection: upgrade[lf][lf]"",
      ""ProxyIP"": ""ffff:4108:d638"",
      ""ProxyPort"": ""80"",
      ""SNI"": """",
      ""USER"": """",
      ""PASS"": """",
      ""CheckUser"": ""http://209.14.68.74:5454/checkUser"",
      ""Info"": ""Proxy""
    
  
    }
  ]
}"
x59a0c5A,Untitled,arefin2k,PHP,Monday 14th of August 2023 01:08:17 AM CDT,"<script setup>
import { ref, onMounted } from 'vue'
import axios from 'axios'

const products = ref([]);
const categories = ref([]);
const cat = ref('tops');
const error = ref(null);

function fetchCategories() {
    axios.get('https://dummyjson.com/products/categories')
    .then(res => {
        categories.value = res.data;
        console.log(categories.value);
    })
    .catch(err => {
        error.value = err.message;
    });
}

function changeItem() {
    axios.get('https://dummyjson.com/products/category/'+cat.value)
        .then(res1 => {
            products.value = res1.data;
        })
        .catch(err => {
            error.value = err.message;
        });
}

onMounted(() => {
    changeItem();
    fetchCategories();
});

</script>

<template>
    <div class=""main"">
        <div v-if=""error"">Error: {{ error }}</div>
        <div class=""sub"" v-if=""!error"">
            <h1>Product of smartphones (Total: {{ products.total }})</h1>
            <div class=""select"">
                Select Category: 
                <select v-model=""cat"" @change=""changeItem()"">
                    <option v-for=""(category,index) in categories"" :key=""index"" :value=""category"">{{ category }}</option>
                </select>
            </div>
            <table>
                <tr>
                    <th>Thumbnail</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Discount</th>
                    <th>Rating</th>
                    <th>Stock</th>
                    <th>Brand</th>
                </tr>
                <tr v-for=""(product,index) in products.products"" :key=""index"">
                    <td><img :src=""product.thumbnail"" alt="""" style=""width:200px;""></td>
                    <td>{{ product.title }}</td>
                    <td>{{ product.description }}</td>
                    <td>${{ product.price }}</td>
                    <td>${{ product.discountPercentage }}</td>
                    <td>{{ product.rating }}</td>
                    <td>{{ product.stock }}</td>
                    <td>{{ product.brand }}</td>
                </tr>
            </table>
        </div>
    </div>
</template>

<style scoped>
    h1 {
        font-size: 20px;
        text-align: center;
    }
    table, tr, td, th {
        border-collapse: collapse;
        border: 1px solid black;
        padding: 5px;
    }
    .main {
        width: 900px;
        margin: 40px auto;
    }
    .sub {
        text-align: center;
    }
    .select {
        margin-top: 10px;
        margin-bottom: 10px;
        display: inline-block;
    }
</style>"
8t4yMPpv,square_1200dpi.ps1,Thunder-Menu,PowerShell,Monday 14th of August 2023 12:38:36 AM CDT,"# Charger les assemblies System.Windows.Forms et System.Drawing
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Définir le script en tant que chaîne
$script = @""
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Windows.Forms;

public class SquarePatternGenerator
{
    public static void Main()
    {
        Application.EnableVisualStyles();
        Application.SetCompatibleTextRenderingDefault(false);

        Form form = new Form();
        form.Text = ""Générateur de Motif de Carrés"";
        form.Width = 600; // Ajuster la largeur de la fenêtre
        form.Height = 800; // Ajuster la hauteur de la fenêtre
        form.StartPosition = FormStartPosition.CenterScreen;

        PictureBox pictureBox = new PictureBox();
        pictureBox.Location = new Point(20, 100);
        pictureBox.Width = form.Width - 40;
        pictureBox.Height = form.Height - 300;
        form.Controls.Add(pictureBox);

        Label label = new Label();
        label.Text = ""Nombre de carrés:"";
        label.Location = new Point(20, 20);
        form.Controls.Add(label);

        TextBox textBox = new TextBox();
        textBox.Location = new Point(150, 20);
        form.Controls.Add(textBox);

        Button generateButton = new Button();
        generateButton.Text = ""Générer"";
        generateButton.Location = new Point(20, pictureBox.Bottom + 10);
        form.Controls.Add(generateButton);

        Button saveButton = new Button();
        saveButton.Text = ""Enregistrer"";
        saveButton.Location = new Point(100, pictureBox.Bottom + 10);
        saveButton.Enabled = false;
        form.Controls.Add(saveButton);

        generateButton.Click += (sender, e) =>
        {
            int nombreDeCarres = int.Parse(textBox.Text);
            int largeurPagePixels = pictureBox.Width;
            int hauteurPagePixels = pictureBox.Height;
            float dpi = 1200f;
            float tailleCarreMM = 0.021f;
            float espaceEntreCarresMM = 0.021f;

            int tailleCarrePixels = (int)Math.Round(dpi * tailleCarreMM / 25.4f);
            int espaceEntreCarresPixels = (int)Math.Round(dpi * espaceEntreCarresMM / 25.4f);

            Bitmap bitmap = new Bitmap(largeurPagePixels, hauteurPagePixels);
            Graphics graphics = Graphics.FromImage(bitmap);

            SolidBrush whiteBrush = new SolidBrush(Color.White);
            SolidBrush blackBrush = new SolidBrush(Color.Black);

            graphics.FillRectangle(whiteBrush, 0, 0, largeurPagePixels, hauteurPagePixels);

            int carreCompteur = 0;
            for (int x = 0; x < largeurPagePixels; x += (tailleCarrePixels + espaceEntreCarresPixels))
            {
                for (int y = 0; y < hauteurPagePixels; y += (tailleCarrePixels + espaceEntreCarresPixels))
                {
                    graphics.FillRectangle(blackBrush, x, y, tailleCarrePixels, tailleCarrePixels);

                    carreCompteur++;
                    if (carreCompteur >= nombreDeCarres)
                    {
                        break;
                    }
                }
                if (carreCompteur >= nombreDeCarres)
                {
                    break;
                }
            }

            pictureBox.Image = bitmap;
            saveButton.Enabled = true;
        };

        saveButton.Click += (sender, e) =>
        {
            SaveFileDialog saveFileDialog = new SaveFileDialog();
            saveFileDialog.Filter = ""Images BMP|*.bmp"";
            if (saveFileDialog.ShowDialog() == DialogResult.OK)
            {
                pictureBox.Image.Save(saveFileDialog.FileName, ImageFormat.Bmp);
                MessageBox.Show(""Motif de carrés généré et enregistré sous "" + saveFileDialog.FileName);
            }
        };

        form.Controls.Add(saveButton);

        Application.Run(form);
    }
}
""@

# Exécuter le script
Add-Type -TypeDefinition $script -ReferencedAssemblies System.Drawing, System.Windows.Forms

# Appeler la méthode Main pour exécuter le formulaire
[SquarePatternGenerator]::Main()
"
CFyhyANG,Square2-1.ps1,Thunder-Menu,PowerShell,Monday 14th of August 2023 12:37:49 AM CDT,"# Charger les assemblies System.Windows.Forms et System.Drawing
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Définir le script en tant que chaîne
$script = @""
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Windows.Forms;

public class SquarePatternGenerator
{
    public static void Main()
    {
        Application.EnableVisualStyles();
        Application.SetCompatibleTextRenderingDefault(false);

        Form form = new Form();
        form.Text = ""Générateur de Motif de Carrés"";
        form.Width = 600; // Ajuster la largeur de la fenêtre
        form.Height = 800; // Ajuster la hauteur de la fenêtre
        form.StartPosition = FormStartPosition.CenterScreen;

        PictureBox pictureBox = new PictureBox();
        pictureBox.Location = new Point(20, 100);
        pictureBox.Width = form.Width - 40;
        pictureBox.Height = form.Height - 300;
        form.Controls.Add(pictureBox);

        Label label = new Label();
        label.Text = ""Nombre de carrés:"";
        label.Location = new Point(20, 20);
        form.Controls.Add(label);

        TextBox textBox = new TextBox();
        textBox.Location = new Point(150, 20);
        form.Controls.Add(textBox);

        Button generateButton = new Button();
        generateButton.Text = ""Générer"";
        generateButton.Location = new Point(20, pictureBox.Bottom + 10);
        form.Controls.Add(generateButton);

        Button saveButton = new Button();
        saveButton.Text = ""Enregistrer"";
        saveButton.Location = new Point(100, pictureBox.Bottom + 10);
        saveButton.Enabled = false;
        form.Controls.Add(saveButton);

        generateButton.Click += (sender, e) =>
        {
            int nombreDeCarres = int.Parse(textBox.Text);
            int largeurPagePixels = pictureBox.Width;
            int hauteurPagePixels = pictureBox.Height;
            int tailleCarrePixels = 2;
            int espaceEntreCarresPixels = 1;

            Bitmap bitmap = new Bitmap(largeurPagePixels, hauteurPagePixels);
            Graphics graphics = Graphics.FromImage(bitmap);

            SolidBrush whiteBrush = new SolidBrush(Color.White);
            SolidBrush blackBrush = new SolidBrush(Color.Black);

            graphics.FillRectangle(whiteBrush, 0, 0, largeurPagePixels, hauteurPagePixels);

            int carreCompteur = 0;
            for (int x = 0; x < largeurPagePixels; x += (tailleCarrePixels + espaceEntreCarresPixels))
            {
                for (int y = 0; y < hauteurPagePixels; y += (tailleCarrePixels + espaceEntreCarresPixels))
                {
                    graphics.FillRectangle(blackBrush, x, y, tailleCarrePixels, tailleCarrePixels);

                    carreCompteur++;
                    if (carreCompteur >= nombreDeCarres)
                    {
                        break;
                    }
                }
                if (carreCompteur >= nombreDeCarres)
                {
                    break;
                }
            }

            pictureBox.Image = bitmap;
            saveButton.Enabled = true;
        };

        saveButton.Click += (sender, e) =>
        {
            SaveFileDialog saveFileDialog = new SaveFileDialog();
            saveFileDialog.Filter = ""Images BMP|*.bmp"";
            if (saveFileDialog.ShowDialog() == DialogResult.OK)
            {
                pictureBox.Image.Save(saveFileDialog.FileName, ImageFormat.Bmp);
                MessageBox.Show(""Motif de carrés généré et enregistré sous "" + saveFileDialog.FileName);
            }
        };

        form.Controls.Add(saveButton);

        Application.Run(form);
    }
}
""@

# Exécuter le script
Add-Type -TypeDefinition $script -ReferencedAssemblies System.Drawing, System.Windows.Forms

# Appeler la méthode Main pour exécuter le formulaire
[SquarePatternGenerator]::Main()
"
RLkFy2vq,Square10-2.ps1,Thunder-Menu,PowerShell,Monday 14th of August 2023 12:36:41 AM CDT,"# Charger les assemblies System.Windows.Forms et System.Drawing
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Définir le script en tant que chaîne
$script = @""
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Windows.Forms;

public class SquarePatternGenerator
{
    public static void Main()
    {
        Application.EnableVisualStyles();
        Application.SetCompatibleTextRenderingDefault(false);

        Form form = new Form();
        form.Text = ""Générateur de Motif de Carrés"";
        form.Width = 600; // Ajuster la largeur de la fenêtre
        form.Height = 800; // Ajuster la hauteur de la fenêtre
        form.StartPosition = FormStartPosition.CenterScreen;

        PictureBox pictureBox = new PictureBox();
        pictureBox.Location = new Point(20, 100);
        pictureBox.Width = form.Width - 40;
        pictureBox.Height = form.Height - 300;
        form.Controls.Add(pictureBox);

        Label label = new Label();
        label.Text = ""Nombre de carrés:"";
        label.Location = new Point(20, 20);
        form.Controls.Add(label);

        TextBox textBox = new TextBox();
        textBox.Location = new Point(150, 20);
        form.Controls.Add(textBox);

        Button generateButton = new Button();
        generateButton.Text = ""Générer"";
        generateButton.Location = new Point(20, pictureBox.Bottom + 10);
        form.Controls.Add(generateButton);

        Button saveButton = new Button();
        saveButton.Text = ""Enregistrer"";
        saveButton.Location = new Point(100, pictureBox.Bottom + 10);
        saveButton.Enabled = false;
        form.Controls.Add(saveButton);

        generateButton.Click += (sender, e) =>
        {
            int nombreDeCarres = int.Parse(textBox.Text);
            int largeurPagePixels = pictureBox.Width;
            int hauteurPagePixels = pictureBox.Height;
            int tailleCarrePixels = 10;
            int espaceEntreCarresPixels = 2;

            Bitmap bitmap = new Bitmap(largeurPagePixels, hauteurPagePixels);
            Graphics graphics = Graphics.FromImage(bitmap);

            SolidBrush whiteBrush = new SolidBrush(Color.White);
            SolidBrush blackBrush = new SolidBrush(Color.Black);

            graphics.FillRectangle(whiteBrush, 0, 0, largeurPagePixels, hauteurPagePixels);

            int carreCompteur = 0;
            for (int x = 0; x < largeurPagePixels; x += (tailleCarrePixels + espaceEntreCarresPixels))
            {
                for (int y = 0; y < hauteurPagePixels; y += (tailleCarrePixels + espaceEntreCarresPixels))
                {
                    graphics.FillRectangle(blackBrush, x, y, tailleCarrePixels, tailleCarrePixels);

                    carreCompteur++;
                    if (carreCompteur >= nombreDeCarres)
                    {
                        break;
                    }
                }
                if (carreCompteur >= nombreDeCarres)
                {
                    break;
                }
            }

            pictureBox.Image = bitmap;
            saveButton.Enabled = true;
        };

        saveButton.Click += (sender, e) =>
        {
            SaveFileDialog saveFileDialog = new SaveFileDialog();
            saveFileDialog.Filter = ""Images BMP|*.bmp"";
            if (saveFileDialog.ShowDialog() == DialogResult.OK)
            {
                pictureBox.Image.Save(saveFileDialog.FileName, ImageFormat.Bmp);
                MessageBox.Show(""Motif de carrés généré et enregistré sous "" + saveFileDialog.FileName);
            }
        };

        form.Controls.Add(saveButton);

        Application.Run(form);
    }
}
""@

# Exécuter le script
Add-Type -TypeDefinition $script -ReferencedAssemblies System.Drawing, System.Windows.Forms

# Appeler la méthode Main pour exécuter le formulaire
[SquarePatternGenerator]::Main()
"
WpkfjNTb,Pain and suffering part 2 (optimized now :D),fatboychummy,Lua,Monday 14th of August 2023 12:13:15 AM CDT,"-- These values are per 500mB, since a crystal takes 6000mB to make, we will need to divide everything by 12 later to get their actual increment in values.
---@type table<string, laser_item>
local LASER_VALUES = {}
do
  local function ilv(name, purity, strength, efficiency, max_purity, max_strength, max_efficiency)
    LASER_VALUES[name] = {
      purity = purity or 0,
      strength = strength or 0,
      efficiency = efficiency or 0,
      max_purity = max_purity or 100,
      max_strength = max_strength or 100,
      max_efficiency = max_efficiency or 100
    }
  end

  ilv(""minecraft:ender_pearl"", 2, 0, 0, 100, 0, 0)
  ilv(""minecraft:quartz"", -1, 0, 7, 0, 0, 80)
  ilv(""minecraft:gunpowder"", -5, 8, 4, 0, 70, 60)
  ilv(""minecraft:diamond"", 5, 0, 0, 100, 0, 0)
  ilv(""minecraft:glowstone_dust"", -2, 6, 3, 0, 50, 50)
  ilv(""minecraft:iron_ingot"", 0, -2, 1, 0, 0, 20)
  ilv(""rftoolsbase:dimensionalshard"", 1, 8, 8, 100, 80, 80)
  ilv(""minecraft:prismarine_shard"", 0, 3, 3, 0, 30, 30)
  ilv(""minecraft:gold_ingot"", 0, -1, 1, 0, 0, 30)
  ilv(""minecraft:prismarine_crystals"", 0, 4, 4, 0, 35, 35)
  ilv(""minecraft:coal"", -1, -10, 0, 0, 0, 0)             -- Not sure why you'd want to use coal.
  ilv(""minecraft:nether_star"", -60, 90, 90, 0, 100, 100) -- Very powerful, but also requires a repurification.
  ilv(""minecraft:nether_wart"", -3, 2, -2, 0, 35, 1)
  ilv(""minecraft:redstone"", -1, 5, 0, 0, 60, 0)
  ilv(""minecraft:slime_ball"", 0, 0, -10, 0, 0, 1) -- Not sure why you'd want to use slime balls.
  ilv(""minecraft:emerald"", 8, 0, 0, 100, 0, 0)    -- May be used as a subsitute to repurification?
  ilv(""minecraft:blaze_powder"", -6, 5, 5, 0, 70, 70)
  ilv(""minecraft:ghast_tear"", -20, 25, 15, 0, 100, 100)
  ilv(""minecraft:snowball"", 1, 0, 1, 30, 0, 40)
end

--- Deep clone a table
---@param t any
---@return any t
local function deep_copy(t)
  if type(t) ~= ""table"" then return t end

  local out = {}

  for k, v in pairs(t) do
    out[k] = deep_copy(v)
  end

  return out
end

--- This function will do the exact same thing as the original best_item_combo function.
--- However, there will be a few things done to optimize the algorithm, as currently there are just 
--- too many combinations to check.
--- We will note, the original description is as follows:
---   This function will bruteforce the best combination of items to use in the lasers.
---   It will return a table of items to use, and the amount of items to use, and in what order.
---   This function only needs to care about strength and efficiency, though we must note purity CANNOT go below 1%
---   This function will also take into account the amount of items we have in the storage chest.
---   We will likely need to use some heavy recursion here.
--- In order to optimize this, we will need to do a few things:
---  1. We will need to sort the items by their type, so we can group them together.
---  2. We will greedily take from each type, until they reach their maximum potency, minimum purity, or run out of items.
--- Hopefully this will be enough to optimize it.
---@param current laser_list? The current list of items we are using, along with the current strength, efficiency, and purity.
---@param item_list short_laser_item[]? The list of items we can use.
---@return table<integer, string> list The best list of items found.
---@return integer strength The strength of the best list of items found.
---@return integer efficiency The efficiency of the best list of items found.
---@return integer purity The purity of the best list of items found.
local function best_item_combo_optimized(current, item_list)
  local x = not current
  -- Initial purity (after leaving the purifier) is 85%, initial strength is 10%, initial efficiency is 10%.
  current = current or { list = {}, used = {}, strength = 10, efficiency = 10, purity = 85 }

  if not item_list then
    -- We will need to initialize the list of items available, searching the storage chest and adding items as we see them.
    -- We should collapse all similar items so all we have are the item names and the amount of items.
    item_list = {}

    local storage = config.peripherals.chests.storage
    local list = smn.call(storage, ""list"")
    for _, item in pairs(list) do
      local found = false
      for _, item2 in ipairs(item_list) do
        if item.name == item2.name then
          item2.count = item2.count + item.count
          found = true
          break
        end
      end

      if not found then
        table.insert(item_list, { name = item.name, count = item.count })
      end
    end
  end
  -- Coincidentally, the item list is already sorted ""enough"" here. We don't particularly care about the individual values, just that they are grouped together.

  -- We will need to loop through the item list, and for each item, we will need to greedily add it to the current list, then call this function again.
  -- We will need to keep track of the best item list, and the best strength and efficiency.
  local best_strength = current.strength
  local best_efficiency = current.efficiency
  local best_purity = current.purity
  local best_list = {}

  for _, item in ipairs(item_list) do

    local new_strength, new_efficiency, new_purity = current.strength, current.efficiency, current.purity
    local last_strength, last_efficiency = new_strength, new_efficiency
    local added = 0
    repeat
      -- Check how much of this item remains
      local remaining = item.count - (current.used[item.name] or 0)
      local exit = false

      if remaining > 0 and LASER_VALUES[item.name] then

        -- Add this item to both lists.
        table.insert(current.list, item.name)
        current.used[item.name] = (current.used[item.name] or 0) + 1
        added = added + 1

        -- Calculate the new strength, efficiency, and purity.
        local laser_value = LASER_VALUES[item.name]

        -- If the values are above zero, we cannot go above the maximum.
        -- If the values are below or equal to zero, we can go down essentially forever (to a minimum of zero)
        -- We will also hard-cap each side at 100 and 0, just to ensure nothing goes crazy anywhere.

        if laser_value.strength > 0 then
          new_strength = math.min(new_strength + laser_value.strength / 12, laser_value.max_strength, 100)
        else
          new_strength = math.max(new_strength + laser_value.strength / 12, laser_value.max_strength, 0)
        end

        if laser_value.efficiency > 0 then
          new_efficiency = math.min(new_efficiency + laser_value.efficiency / 12, laser_value.max_efficiency, 100)
        else
          new_efficiency = math.max(new_efficiency + laser_value.efficiency / 12, laser_value.max_efficiency, 0)
        end

        if laser_value.purity > 0 then
          new_purity = math.min(new_purity + laser_value.purity / 12, laser_value.max_purity, 100)
        else
          new_purity = math.max(new_purity + laser_value.purity / 12, laser_value.max_purity, 0)
        end

        -- Check if the values are out of bounds.

        -- Check strength.
        if new_strength >= laser_value.max_strength then
          if last_strength < laser_value.max_strength then
            -- We can keep this item, but we should exit immediately.
            -- Leaving this empty block here for documentation.
          else
            -- We were over the max last time, and we are still over the max, so we should remove this item, then exit.
            table.remove(current.list, #current.list)
            current.used[item.name] = current.used[item.name] - 1
            added = added - 1
          end
          exit = true
        end

        -- Check efficiency.
        if new_efficiency >= laser_value.max_efficiency then
          if last_efficiency < laser_value.max_efficiency then
            -- We can keep this item, but we should exit immediately.
            -- Leaving this empty block here for documentation.
          else
            -- We were over the max last time, and we are still over the max, so we should remove this item, then exit.
            table.remove(current.list, #current.list)
            current.used[item.name] = current.used[item.name] - 1
            added = added - 1
          end
          exit = true
        end

        -- Check purity.
        -- We will need to check if the purity is below 1%.
        if new_purity <= 1.05 then
          -- Purity cannot go below 1% whatsoever, so we will need to remove this item, then exit.
          table.remove(current.list, #current.list)
          current.used[item.name] = current.used[item.name] - 1
          added = added - 1
          exit = true
        end
      else -- No items left of this type (or we can't use this item in the laser), so we will need to exit.
        exit = true
      end
    until remaining <= 0 or exit

    if x then
      print(item.name, added)
    end

    -- If the new strength and efficiency are better than the best, we will need to update the best.
    -- However, if the purity is below or equal to 1%, we will discard this attempt.
    if new_purity > 1 and new_strength >= best_strength then
      -- If the new strength and efficiency are better than the best, we will need to update the best.
      best_strength = new_strength
      best_efficiency = new_efficiency
      best_purity = new_purity
      best_list = deep_copy(current.list)
    end

    local new_current = deep_copy(current)
    new_current.strength = new_strength
    new_current.efficiency = new_efficiency
    new_current.purity = new_purity

    -- To prevent excess looping, we exit if nothing was added.
    if added > 0 then
      -- Now we will recurse, with the new values and list.
      local best_recursed_list, best_recursed_strength, best_recursed_efficiency, best_recursed_purity = best_item_combo_optimized(new_current, item_list)

      -- Then we will need to check if the recursed values are better than the current best.
      -- We will only worry about purity and strength here, since strength determines total RF storage, and purity needs to remain above 1.
      -- We will check for purity above 1.05, to ensure it never goes below 1 due to any rounding errors.
      if best_recursed_purity > 1.05 and best_recursed_strength > best_strength then
        best_strength = best_recursed_strength
        best_efficiency = best_recursed_efficiency
        best_purity = best_recursed_purity
        best_list = best_recursed_list
      end

      -- Now we can remove all the items we added
      for i = 1, added do
        table.remove(current.list, #current.list)
        current.used[item.name] = current.used[item.name] - 1
      end
    end
  end

  return best_list, best_strength, best_efficiency, best_purity
end"
kvpxuYsa,邀您一起看：动漫巴士,xiaomianao666,JavaScript,Sunday 13th of August 2023 11:56:02 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥动漫巴士@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJqczpcXG5ldmFsKGZldGNoKCdoaWtlcjovL2ZpbGVzL3J1bGVzL3h5cS9oaWtlcm1vdmllLmpzJykpO2hpa2NoYXB0ZXIoKTtcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi6aaZ5oOF5b2x6KeGXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eSQkaHR0cHM6Ly9kbTg0LnR2JCRmeXBhZ2UkJOWbveS6p+WKqOa8qybml6XmnKzliqjmvKsm5qyn576O5Yqo5ryrJueUteW9sSQkMSYyJjMmNCQkO2dldDtVVEYtODt7VXNlci1BZ2VudEBNb3ppbGxhLzUuMCAoTGludXjvvJvvvJsgQW5kcm9pZCAxMe+8m++8myBNaSAxMCBQcm8pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84OC4wLjQzMjQuMTUyIE1vYmlsZSBTYWZhcmkvNTM3LjM2fVwiLFwiY29sX3R5cGVcIjpcIm1vdmllXzFcIixcImZpbmRfcnVsZVwiOlwianM6XFxuZXZhbChmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qcycpKTtoaWtobWVyaigpO1wiLFwiZ3JvdXBcIjpcIuKRoOi9u+WQiOmbhlwiLFwidWFcIjpcIm1vYmlsZVwiLFwicHJlUnVsZVwiOlwiLy/orr7nva7mm7TmlrDpl7TpmpTml7bpl7Qs5Y2V5L2N5Li65pW05pWw5aSp44CCXFxudmFyIHVwdGltZSA9IDI7XFxuZnVuY3Rpb24gdXBydWxlZmlsZSgpIHtcXG4gICAgdmFyIHJ1bGVqcyA9IGZldGNoKCdodHRwczovL2FnaXQuYWkvbHprMjM1NTkvQ2xvdWRSdWxlL3Jhdy9icmFuY2gvbWFzdGVyL2hpa2VybW92aWUuanMnLCB7fSk7XFxuICAgIGlmIChydWxlanMuc2VhcmNoKC9sYXp5UnVsZS8pID09IC0xKSB7XFxuICAgICAgICBydWxlanMgPSBmZXRjaCgnaHR0cHM6Ly9jb2RlYmVyZy5vcmcvbHprMjM1NTkvY2xvdWRydWxlL3Jhdy9icmFuY2gvbWFzdGVyL2hpa2VybW92aWUuanMnLCB7fSk7XFxuICAgIH1cXG4gICAgaWYgKHJ1bGVqcy5zZWFyY2goL2xhenlSdWxlLykgIT0gLTEpIHtcXG4gICAgICAgIHdyaXRlRmlsZShcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc1xcXCIsIHJ1bGVqcyk7XFxuICAgIH1cXG4gICAgdmFyIHJ1bGVqc29uID0gZmV0Y2goJ2h0dHBzOi8vYWdpdC5haS9semsyMzU1OS9DbG91ZFJ1bGUvcmF3L2JyYW5jaC9tYXN0ZXIvaGlrZXJtb3ZpZS5qc29uJywge30pO1xcbiAgICBpZiAocnVsZWpzb24uc2VhcmNoKC9cXFxcXFxcInZvZGhyZWZcXFxcXFxcIi8pID09IC0xKSB7XFxuICAgICAgICBydWxlanNvbiA9IGZldGNoKCdodHRwczovL2NvZGViZXJnLm9yZy9semsyMzU1OS9jbG91ZHJ1bGUvcmF3L2JyYW5jaC9tYXN0ZXIvaGlrZXJtb3ZpZS5qc29uJywge30pO1xcbiAgICB9XFxuICAgIGlmIChydWxlanNvbi5zZWFyY2goL1xcXFxcXFwidm9kaHJlZlxcXFxcXFwiLykgIT0gLTEpIHtcXG4gICAgICAgIHdyaXRlRmlsZShcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc29uXFxcIiwgcnVsZWpzb24pO1xcbiAgICB9XFxuICAgIGlmIChydWxlanMuc2VhcmNoKC9sYXp5UnVsZS8pICE9IC0xICYmIHJ1bGVqc29uLnNlYXJjaCgvXFxcXFxcXCJ2b2RocmVmXFxcXFxcXCIvKSAhPSAtMSkge1xcbiAgICAgICAgd3JpdGVGaWxlKFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL3h5cS9oaWtlcnVwZGF0ZS50eHRcXFwiLCBuZXcgRGF0ZSgpICsgJycpO1xcbiAgICAgICAgY29uZmlybSh7dGl0bGU6J+aPkOekuicsIGNvbnRlbnQ6J+iHquWKqOabtOaWsOWujOaIkCd9KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICAgIGNvbmZpcm0oe3RpdGxlOifmj5DnpLonLCBjb250ZW50Oifoh6rliqjmm7TmlrDlpLHotKUnfSk7XFxuICAgIH1cXG59XFxuXFxuXFxuXFxuLy/mo4DmtYvmmK/lkKbmnInlhpnlhaXml7bpl7TkuI7op4TliJnnmoRqc+aPkuS7tuaWh+S7tlxcbmlmIChmaWxlRXhpc3QoXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMveHlxL2hpa2VydXBkYXRlLnR4dFxcXCIpICYmIGZpbGVFeGlzdChcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc1xcXCIpICYmIGZpbGVFeGlzdChcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qc29uXFxcIikpIHtcXG4gICAgLy/orqHnrpfml7bpl7Tpl7TpmpRcXG4gICAgdmFyIHN0YXJ0ID0gbmV3IERhdGUoZmV0Y2goXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMveHlxL2hpa2VydXBkYXRlLnR4dFxcXCIsIHt9KSk7XFxuICAgIHZhciBub3d0ID0gbmV3IERhdGUoKTtcXG4gICAgdmFyIERfVCA9IG5vd3QuZ2V0VGltZSgpIC0gc3RhcnQuZ2V0VGltZSgpO1xcbiAgICB2YXIgRF9EID0gRF9UIC8gKDEwMDAgKiAzNjAwICogMjQpO1xcbiAgICB2YXIgdGRpZiA9IHBhcnNlSW50KERfRCkgKyAnJztcXG4gICAgLy9sb2codGRpZik7XFxuICAgIC8v6buY6K6k6Ze06ZqU6LaF6L+H6K6+572u5aSp5pWw5bCx5Y+W5LiA5qyh5LqR56uv5paH5Lu2XFxuICAgIGlmICh0ZGlmID49IHVwdGltZSB8fCB0ZGlmIDwgMCkge1xcbiAgICAgICAgdXBydWxlZmlsZSgpO1xcbiAgICB9XFxufSBlbHNlIHtcXG4gICAgLy/lpoLmnpzlsJHkuIDkuKrmlofku7blsLHoh6rliqjlj5bkupHnq6/mlofku7ZcXG4gICAgdXBydWxlZmlsZSgpO1xcbn1cXG5cXG5cXG5cXG4vL+aJp+ihjOmcgOimgemihOWkhOeQhueahOermeeCuVxcbnZhciBsYWMgPSBmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy94eXEvaGlrZXJtb3ZpZS5qcycpO1xcbi8vbG9nKGxhYy5sZW5ndGgpO1xcbmlmIChsYWMuc2VhcmNoKC9sYXp5UnVsZS8pICE9IC0xKSB7XFxuICAgIGV2YWwobGFjKTtcXG4gICAgaGlrZXJwcmUoKTtcXG59IGVsc2Uge1xcbiAgICAvL+WmguaenOacrOWcsOaWh+S7tuS4jeWvueWwhuWwneivleiHquS/ruWkjVxcbiAgICB1cHJ1bGVmaWxlKCk7XFxuICAgIHNldEVycm9yKCfop4TliJnkv67lpI3lrozmiJDvvIzlpoLmnInpl67popjor7flj43ppojjgIInKVxcbn1cIixcInBhZ2VzXCI6XCJbXVwifSIsInBpY1VybCI6Imh0dHBzOi8vZG04NC50di9mYXZpY29uLmljb0BSZWZlcmVyPSIsInRpdGxlIjoi5Yqo5ryr5be05aOrIn0=
qk57Ey5f,"激光测距采矿 多次扫描修复,自动停止",jaklsfjlsak,Lua,Sunday 13th of August 2023 11:40:00 PM CDT,"local laser = peripheral.find(""warpdriveLaser"")
local mininglasers = {}
local sides = peripheral.getNames()

local function saveZeroLayersCount(count)
  local file = fs.open(""zero_layers.txt"", ""w"")
  file.write(tostring(count))
  file.close()
end

local function getZeroLayersCount()
  if fs.exists(""zero_layers.txt"") then
    local file = fs.open(""zero_layers.txt"", ""r"")
    local count = tonumber(file.readAll())
    file.close()
    return count
  end
  return 0
end

for _, side in pairs(sides) do
  if peripheral.getType(side) == ""warpdriveMiningLaser"" then
    table.insert(mininglasers, peripheral.wrap(side))
  end
end

laser.beamFrequency(1420)

if not laser then
  print(""No warpdriveLaser detected"")
  os.exit()
end

if #mininglasers == 0 then
  print(""No warpdriveMiningLaser detected"")
  os.exit()
end

print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")

-- Loop to wait for key events
while true do
  local event, key = os.pullEvent(""key"")

  if key == 50 then
    local _, laserY, _ = laser.getLocalPosition()
    local targetY = 0

    repeat
      laser.emitBeam(0, -1, 0)
      os.sleep(1)
      _, _, targetY = laser.getScanResult()
    until targetY ~= 0

    local mineTarget = laserY - targetY - 1
    print(""Target is: "" .. mineTarget .. "" blocks below"")

    for _, mininglaser in pairs(mininglasers) do
      mininglaser.offset(mineTarget)
      mininglaser.enable(true)
    end

    local consecutiveZeroLayers = getZeroLayersCount()

    -- Periodically check the mining state
    while true do
      os.sleep(1)
      local state = mininglasers[1].state()
      print(textutils.serialize(state)) -- Debug line to print the entire state object

      -- You'll need to modify the below lines once you understand the structure of 'state'
      local total = state.total

      if total == 0 then
        consecutiveZeroLayers = consecutiveZeroLayers + 1
      else
        consecutiveZeroLayers = 0
      end

      saveZeroLayersCount(consecutiveZeroLayers)

      if consecutiveZeroLayers >= 3 then
        print(""3 consecutive layers with 0 total blocks detected. Stopping mining."")
        for _, mininglaser in pairs(mininglasers) do
          mininglaser.enable(false)
        end
        fs.delete(""zero_layers.txt"")
        break
      end
    end
  end
end
"
CsDHpT47,github,Axhar_lua3,Lua,Sunday 13th of August 2023 11:35:40 PM CDT,"-- URL de votre dépôt GitHub
local repoURL = ""https://api.github.com/repos/axhar005/libft/contents/""

-- Emplacement local pour enregistrer les fichiers
local localPath = ""libft/""

-- Fonction pour télécharger un fichier
local function downloadFile(fileURL, filePath)
    local fileResponse = http.get(fileURL)
    if fileResponse then
        local fileContent = fileResponse.readAll()
        fileResponse.close()

        local file = fs.open(filePath, ""w"")
        file.write(fileContent)
        file.close()

        print(""Fichier téléchargé et enregistré : "" .. filePath)
    else
        print(""Erreur lors du téléchargement du fichier : "" .. filePath)
    end
end

-- Fonction récursive pour télécharger les fichiers dans les dossiers
local function downloadFilesInFolder(folderInfo)
    for _, fileInfo in ipairs(folderInfo) do
        if fileInfo.type == ""file"" then
            local fileURL = fileInfo.download_url
            local filePath = fs.combine(localPath, fileInfo.path)

            downloadFile(fileURL, filePath)
        elseif fileInfo.type == ""dir"" then
            local folderURL = fileInfo.url
            local folderResponse = http.get(folderURL)
            if folderResponse then
                local folderContent = folderResponse.readAll()
                folderResponse.close()

                local subFolderInfo = textutils.unserializeJSON(folderContent)
                local subFolderPath = fs.combine(localPath, fileInfo.name)
                if not fs.exists(subFolderPath) then
                    fs.makeDir(subFolderPath)
                end

                downloadFilesInFolder(subFolderInfo)
            end
        end
    end
end

-- Création du dossier local s'il n'existe pas
if not fs.exists(localPath) then
    fs.makeDir(localPath)
end

-- Récupération de la liste des fichiers et dossiers dans le dépôt
local response = http.get(repoURL)
if response then
    local fileContent = response.readAll()
    response.close()

    local fileInfo = textutils.unserializeJSON(fileContent)
    downloadFilesInFolder(fileInfo)
else
    print(""Erreur lors de la récupération de la liste des fichiers."")
end"
FFEZVVZg,Untitled,olivia31231212,Lua,Sunday 13th of August 2023 10:48:41 PM CDT,"local PlayersService = game:GetService(""Players"")
PlayersService:ReportAbuse(nil, ""Bad Model or Script"", ""This game is nsfw"")
print(""reported"")"
c8qJwNJG,Untitled,arefin2k,PHP,Sunday 13th of August 2023 10:29:26 PM CDT,"<script setup>
import { ref } from 'vue'

const products = ref([]);
const categories = ref([]);
const cat = ref('tops');
const error = ref(null);

fetch('https://dummyjson.com/products/categories')
    .then(res => res.json())
    .then(data1 => {
        categories.value = data1;
        console.log(JSON.stringify(data1, null, 2));
    })
    .catch(err => {
        error.value = err.message;
    });


fetch('https://dummyjson.com/products/category/'+cat.value)
    .then(res => res.json())
    .then(data => {
        products.value = data;
        console.log(JSON.stringify(data, null, 2));
    })
    .catch(err => {
        error.value = err.message;
    });
</script>

<template>
    <div class=""main"">
        <div v-if=""error"">Error: {{ error }}</div>
        <div class=""sub"" v-if=""!error"">
            <h1>Product of smartphones (Total: {{ products.total }})</h1>
            <div class=""select"">
                {{ cat }}
                Select Category: 
                <select v-model=""cat"">
                    <option v-for=""(category,index) in categories"" :key=""index"" :value=""category"">{{ category }}</option>
                </select>
            </div>
            <table>
                <tr>
                    <th>Thumbnail</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Discount</th>
                    <th>Rating</th>
                    <th>Stock</th>
                    <th>Brand</th>
                </tr>
                <tr v-for=""(product,index) in products.products"" :key=""index"">
                    <td><img :src=""product.thumbnail"" alt="""" style=""width:200px;""></td>
                    <td>{{ product.title }}</td>
                    <td>{{ product.description }}</td>
                    <td>${{ product.price }}</td>
                    <td>${{ product.discountPercentage }}</td>
                    <td>{{ product.rating }}</td>
                    <td>{{ product.stock }}</td>
                    <td>{{ product.brand }}</td>
                </tr>
            </table>
        </div>
    </div>
</template>

<style scoped>
    h1 {
        font-size: 20px;
        text-align: center;
    }
    table, tr, td, th {
        border-collapse: collapse;
        border: 1px solid black;
        padding: 5px;
    }
    .main {
        width: 900px;
        margin: 40px auto;
    }
    .sub {
        text-align: center;
    }
    .select {
        margin-top: 10px;
        margin-bottom: 10px;
        display: inline-block;
    }
</style>"
DMd56hba,vuejs3_fetching_data_from_api,arefin2k,PHP,Sunday 13th of August 2023 09:40:12 PM CDT,"<script setup>
import { ref } from 'vue'

const products = ref([]);
const error = ref(null);

fetch('https://dummyjson.com/products/category/smartphones')
    .then(res => res.json())
    .then(data => {
        products.value = data;
        //console.log(JSON.stringify(products.value, null, 2))
    })
    .catch(err => {
        error.value = err.message;
    });
</script>

<template>
    <div class=""main"">
        <div v-if=""error"">Error: {{ error }}</div>
        <div v-if=""!error"">
            <h1>Product Details</h1>
            {{ products }}
            <div v-for=""product in products"" :key=""product.id"">
                <h2>{{ product.title }}</h2>
                <p>{{ product.description }}</p>
                <p>{{ product.price }}</p>
            </div>
        </div>
    </div>
</template>

<style scoped>
    h1 {
        font-size: 20px;
        text-align: center;
    }
    table, tr, td {
        border-collapse: collapse;
        border: 1px solid black;
        padding: 5px;
    }
    .main {
        width: 500px;
        margin: 40px auto;
    }
</style>"
bm8uwPyc,Untitled,Yahya_CR,Python,Sunday 13th of August 2023 09:13:25 PM CDT,"import discord
from discord import app_commands
from discord.app_commands import CommandTree
from discord.interactions import Interaction
from discord.utils import MISSING
import settings
from typing import Literal, Optional
intents = discord.Intents.default()
intents.message_content = True
client = discord.Client(intents=intents)
tree = CommandTree(client)
guildid = 784193451893719061
@client.event
async def on_ready():
    print(f""Logged in as {client.user}"")


@client.event
async def on_message(message: discord.Message):
    if message.content == ""setup"" and message.author.id == 336959076200218626:
        guild=client.get_guild(guildid)
        print(guild.name)
        await tree.sync(guild=client.get_guild(guildid))

class AppModal(discord.ui.Modal):
    def __init__(self, title, app):
        super().__init__(title=title)
        appq = app[""questions""]
        self.text_inputs = [discord.ui.TextInput(label = x, placeholder = """") for x in appq]

        for item in self.text_inputs:
            self.add_item(item)
    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.send_message(""change later"")
        print(self.text_inputs)
    async def on_error(self, interaction, error):
        raise error
class Application(app_commands.Group):
    ...
appgroup = Application(name=""application"", description=""Handles all application related commands"", guild_ids=[guildid])
@appgroup.command(name=""ping"", description=""Check the bot's latency"")
async def ping(interaction: discord.Interaction):
        await interaction.response.send_message(f""Bot ping is {client.latency * 1000}"")

@tree.command(name=""apply"", description=""Fill out an application"", guild=discord.Object(guildid))
@app_commands.choices(
     app=[
        app_commands.Choice(name=settings.data[""applications""][ndata][""title""], value = ndata)
        for ndata in settings.data[""applications""]
     ]
)
async def apply(interaction: discord.Interaction, app: str):
     await interaction.response.send_modal(AppModal(title=settings.data[""applications""][app][""title""], app=settings.data[""applications""][app]))
tree.add_command(appgroup)
client.run(settings.data[""token""])"
SnFCHyLq,邀您一起看：【中级基础】2023畅学VIP学习包（开课自动更新 勿催）,xiaomianao666,JavaScript,Sunday 13th of August 2023 09:01:15 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥【中级基础】2023畅学VIP学习包（开课自动更新 勿催）@@
jqiA1idj,激光测距采矿 多次扫描修复,jaklsfjlsak,Lua,Sunday 13th of August 2023 08:45:26 PM CDT,"local laser = peripheral.find(""warpdriveLaser"")
local mininglasers = {}
local sides = peripheral.getNames()

for _, side in pairs(sides) do
  if peripheral.getType(side) == ""warpdriveMiningLaser"" then
    table.insert(mininglasers, peripheral.wrap(side))
  end
end

laser.beamFrequency(1420)

if not laser then
  print(""No warpdriveLaser detected"")
  os.exit()
end

if #mininglasers == 0 then
  print(""No warpdriveMiningLaser detected"")
  os.exit()
end

print(""Press the 'M' key to emit a laser scan and start the mining lasers with calculated layer offset."")

-- Loop to wait for key events
while true do
  local event, key = os.pullEvent(""key"")

  if key == 50 then
    -- Get the laser's own position
    local _, laserY, _ = laser.getLocalPosition()

    local targetY = 0
    repeat
      -- Emit a laser scan in the Y- direction (0, -1, 0)
      laser.emitBeam(0, -1, 0)
      os.sleep(1) -- Brief pause to allow processing
      _, _, targetY = laser.getScanResult()
    until targetY ~= 0 -- Repeat until a non-zero result is obtained

    -- Calculate the layerOffset
    local mineTarget = laserY - targetY - 1

    -- Print the target
    print(""Target is: "" .. mineTarget .. "" blocks below"")

    -- Configure the mining lasers to use the mineTarget as the layerOffset
    for _, mininglaser in pairs(mininglasers) do
      mininglaser.offset(mineTarget)
      mininglaser.enable(true)
    end
  end
end
"
wnurK3fE,Silent Aim | KAT,YellowGreg,Lua,Sunday 13th of August 2023 07:18:13 PM CDT,"--// Modify by YellowGreg

-- Services
local Plrs = game:GetService(""Players"")
local RnSr = game:GetService(""RunService"")

-- Player
local P = Plrs.LocalPlayer
local M = P:GetMouse()
local Cam = workspace.CurrentCamera

-- Settings
local S = {
    fov = 150,      -- Field of view angle for target selection
    hitbox = ""Head"",-- Hitbox to aim at (e.g., ""Head"", ""Torso"")
    fovcircle = true,-- Show FOV circle
}

-- UI Elements
local CircleInline = Drawing.new(""Circle"")
local CircleOutline = Drawing.new(""Circle"")
CircleInline.Visible = S.fovcircle
CircleOutline.Visible = S.fovcircle
CircleOutline.Thickness = 4
CircleInline.Thickness = 2
CircleOutline.Color = Color3.new()
CircleInline.Color = Color3.fromRGB(255, 255, 255)
CircleOutline.ZIndex = 1
CircleInline.ZIndex = 2

-- Find closest target within FOV
local function GetClosest(Fov)
    local T, C = nil, Fov or math.huge

    for _, v in pairs(Plrs:GetPlayers()) do
        if v ~= P and v.Character and v.Character:FindFirstChild(S.hitbox) then
            local Pos, OnScr = Cam:WorldToScreenPoint(v.Character[S.hitbox].Position)
            local Dist = (Vector2.new(Pos.X, Pos.Y) - Vector2.new(M.X, M.Y)).Magnitude

            if Dist < C and OnScr then
                C = Dist
                T = v
            end
        end
    end

    return T
end

-- Current target
local Tgt

-- Update UI and target
RnSr.Stepped:Connect(function()
    CircleInline.Radius = S.fov
    CircleInline.Position = Vector2.new(M.X, M.Y + 36)
    
    CircleOutline.Radius = S.fov
    CircleOutline.Position = Vector2.new(M.X, M.Y + 36)
    
    Tgt = GetClosest(S.fov)
end)

-- Modify FindPartOnRayWithIgnoreList function
local Old
Old = hookmetamethod(game, ""__namecall"", function(Self, ...)
    local Args = {...}

    if not checkcaller() and getnamecallmethod() == ""FindPartOnRayWithIgnoreList"" then
        if table.find(Args[2], workspace.WorldIgnore.Ignore) and Tgt and Tgt.Character then
            local Origin = Args[1].Origin
            Args[1] = Ray.new(Origin, Tgt.Character[S.hitbox].Position - Origin)
        end
    end

    return Old(Self, unpack(Args))
end)
"
msqNM3MN,2023-08-13_stats.json,rdp_snitch,JSON,Sunday 13th of August 2023 07:18:11 PM CDT,"{
  ""ip"": {
    ""103.232.53.123"": 111,
    ""62.204.41.134"": 15,
    ""195.19.96.41"": 36,
    ""45.227.254.54"": 6,
    ""103.153.68.198"": 9,
    ""194.195.119.15"": 6,
    ""217.219.162.204"": 3,
    ""45.129.14.208"": 3,
    ""45.79.108.4"": 24,
    ""194.26.135.222"": 6,
    ""87.251.75.145"": 6,
    ""45.79.8.178"": 3,
    ""60.205.170.161"": 9,
    ""39.108.174.140"": 84,
    ""45.143.201.62"": 9,
    ""167.248.133.49"": 3,
    ""103.195.238.104"": 3,
    ""194.165.16.76"": 6,
    ""185.170.144.3"": 9,
    ""87.251.75.120"": 3,
    ""194.165.16.10"": 6,
    ""47.102.201.13"": 9,
    ""107.173.191.116"": 246,
    ""106.116.169.71"": 3,
    ""31.43.185.3"": 6,
    ""133.167.88.201"": 3,
    ""185.11.61.238"": 3,
    ""37.19.221.141"": 9,
    ""120.79.236.35"": 3,
    ""167.94.138.36"": 3,
    ""194.165.16.37"": 12,
    ""62.204.41.139"": 3,
    ""191.101.174.140"": 3,
    ""205.210.31.91"": 9,
    ""104.152.52.201"": 3,
    ""167.94.145.60"": 3,
    ""45.140.17.16"": 18,
    ""87.251.75.64"": 3,
    ""112.5.87.34"": 3,
    ""64.227.160.176"": 18,
    ""194.165.16.72"": 6,
    ""185.170.144.113"": 6,
    ""198.235.24.48"": 9
  },
  ""asn"": {
    ""AS63737"": 111,
    ""AS59425"": 18,
    ""AS12389"": 36,
    ""AS267784"": 6,
    ""AS131366"": 9,
    ""AS63949"": 33,
    ""AS58224"": 3,
    ""AS198465"": 3,
    ""AS57523"": 9,
    ""AS208091"": 12,
    ""AS37963"": 105,
    ""AS210950"": 9,
    ""AS398722"": 3,
    ""AS140827"": 3,
    ""AS48721"": 30,
    ""AS48080"": 15,
    ""AS36352"": 246,
    ""AS4134"": 3,
    ""AS211736"": 6,
    ""AS9371"": 3,
    ""AS212238"": 9,
    ""AS398324"": 3,
    ""AS32780"": 3,
    ""AS396982"": 18,
    ""AS14987"": 3,
    ""AS398705"": 3,
    ""AS198953"": 18,
    ""AS9808"": 3,
    ""AS14061"": 18
  },
  ""isp"": {
    ""VIETSERVER"": 111,
    ""Horizon LLC"": 18,
    ""PJSC Rostelecom"": 36,
    ""Flyservers S.A."": 36,
    ""TAM"": 9,
    ""Akamai Technologies, Inc."": 33,
    ""Iran Telecommunication Company PJS"": 3,
    ""BtHoster LTD"": 3,
    ""Chang Way Technologies Co. Limited"": 9,
    ""Xhost Internet Solutions LP"": 12,
    ""Hangzhou Alibaba Advertising Co"": 96,
    ""TOV E-RISHENNYA"": 9,
    ""Censys, Inc."": 9,
    ""AZ Viet NAM Communications Technology Company Limited"": 3,
    ""Dmitriy Panchenko"": 15,
    ""Addresses CNNIC"": 9,
    ""ColoCrossing"": 246,
    ""Chinanet"": 3,
    ""FOP Dmytro Nedilskyi"": 6,
    ""SAKURA Internet Inc."": 3,
    ""Datacamp Limited"": 9,
    ""Hosting Services"": 3,
    ""Google LLC"": 18,
    ""Rethem Hosting LLC"": 3,
    ""Proton66 OOO"": 18,
    ""China Mobile"": 3,
    ""DigitalOcean, LLC"": 18
  },
  ""org"": {
    ""VietServer Services technology company limited"": 111,
    ""Horizon LLC"": 18,
    ""PJSC Rostelecom"": 36,
    ""UAB Host Baltic"": 6,
    ""TAM Media Technology Joint Stock Company"": 9,
    ""Linode"": 33,
    ""Siub"": 3,
    ""BtHosting"": 3,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Aliyun Computing Co., LTD"": 105,
    ""TOV VAIZ PARTNER"": 9,
    ""Censys, Inc."": 6,
    ""DULIEUAZ"": 3,
    ""Flyservers S.A"": 30,
    ""Xhostis"": 15,
    ""CENTRIOHOST-LLC"": 246,
    ""Chinanet HE"": 3,
    ""FOP Dmytro Nedilskyi"": 6,
    ""SAKURA-OSAKA"": 3,
    ""Starcrecium Limited"": 3,
    ""Cdnext HOU"": 9,
    ""Censys, Inc"": 3,
    ""Ipxo"": 3,
    ""Palo Alto Networks, Inc"": 18,
    ""Rethem Hosting LLC"": 3,
    ""Proton66 LLC"": 18,
    ""China Mobile Communications Corporation"": 3,
    ""DigitalOcean, LLC"": 18
  },
  ""regionName"": {
    ""Hanoi"": 120,
    ""Moscow"": 57,
    ""St.-Petersburg"": 36,
    ""Vilnius"": 6,
    ""Maharashtra"": 6,
    ""M\u0101zandar\u0101n"": 3,
    ""Chi\u0219in\u0103u Municipality"": 3,
    ""California"": 42,
    ""England"": 12,
    ""Texas"": 12,
    ""Beijing"": 9,
    ""Guangdong"": 90,
    ""Kyiv City"": 9,
    ""Michigan"": 6,
    ""Ho Chi Minh"": 3,
    ""Kaunas"": 30,
    ""Shanghai"": 9,
    ""New York"": 246,
    ""Hebei"": 3,
    ""North Holland"": 6,
    ""\u014csaka"": 3,
    ""Chechnya"": 3,
    ""New Jersey"": 3,
    ""Illinois"": 3,
    ""Hesse"": 3,
    ""Karnataka"": 18
  },
  ""country"": {
    ""Vietnam"": 123,
    ""Russia"": 96,
    ""Lithuania"": 36,
    ""India"": 24,
    ""Iran"": 3,
    ""Moldova"": 3,
    ""United States"": 312,
    ""United Kingdom"": 12,
    ""China"": 111,
    ""Ukraine"": 9,
    ""Netherlands"": 6,
    ""Japan"": 3,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 570,
    ""Domain"": 48,
    ""Test"": 36,
    ""Administr"": 48,
    ""(empty)"": 18,
    ""krJNyLmpH"": 3,
    ""nRRoDC"": 3,
    ""CuYmOd"": 3,
    ""nmap"": 3,
    ""baMUHVCQf"": 3,
    ""wZyJRa"": 3,
    ""mFhuxG"": 3
  },
  ""keyboard"": {
    ""Unknown"": 741
  },
  ""client_build"": {
    ""Unknown"": 741
  },
  ""client_name"": {
    ""Unknown"": 741
  },
  ""ip_type"": {
    ""Unknown"": 294,
    ""hosting"": 435,
    ""proxy"": 6,
    ""hosting & proxy"": 3,
    ""mobile"": 3
  }
}"
kZRjafJZ,2023-08-13_stats.json,rdp_snitch,JSON,Sunday 13th of August 2023 07:16:09 PM CDT,"{
  ""ip"": {
    ""103.232.53.123"": 74,
    ""62.204.41.134"": 10,
    ""195.19.96.41"": 24,
    ""45.227.254.54"": 4,
    ""103.153.68.198"": 6,
    ""194.195.119.15"": 4,
    ""217.219.162.204"": 2,
    ""45.129.14.208"": 2,
    ""45.79.108.4"": 16,
    ""194.26.135.222"": 4,
    ""87.251.75.145"": 4,
    ""45.79.8.178"": 2,
    ""60.205.170.161"": 6,
    ""39.108.174.140"": 56,
    ""45.143.201.62"": 6,
    ""167.248.133.49"": 2,
    ""103.195.238.104"": 2,
    ""194.165.16.76"": 4,
    ""185.170.144.3"": 6,
    ""87.251.75.120"": 2,
    ""194.165.16.10"": 4,
    ""47.102.201.13"": 6,
    ""107.173.191.116"": 164,
    ""106.116.169.71"": 2,
    ""31.43.185.3"": 4,
    ""133.167.88.201"": 2,
    ""185.11.61.238"": 2,
    ""37.19.221.141"": 6,
    ""120.79.236.35"": 2,
    ""167.94.138.36"": 2,
    ""194.165.16.37"": 8,
    ""62.204.41.139"": 2,
    ""191.101.174.140"": 2,
    ""205.210.31.91"": 6,
    ""104.152.52.201"": 2,
    ""167.94.145.60"": 2,
    ""45.140.17.16"": 12,
    ""87.251.75.64"": 2,
    ""112.5.87.34"": 2,
    ""64.227.160.176"": 12,
    ""194.165.16.72"": 4,
    ""185.170.144.113"": 4,
    ""198.235.24.48"": 6
  },
  ""asn"": {
    ""AS63737"": 74,
    ""AS59425"": 12,
    ""AS12389"": 24,
    ""AS267784"": 4,
    ""AS131366"": 6,
    ""AS63949"": 22,
    ""AS58224"": 2,
    ""AS198465"": 2,
    ""AS57523"": 6,
    ""AS208091"": 8,
    ""AS37963"": 70,
    ""AS210950"": 6,
    ""AS398722"": 2,
    ""AS140827"": 2,
    ""AS48721"": 20,
    ""AS48080"": 10,
    ""AS36352"": 164,
    ""AS4134"": 2,
    ""AS211736"": 4,
    ""AS9371"": 2,
    ""AS212238"": 6,
    ""AS398324"": 2,
    ""AS32780"": 2,
    ""AS396982"": 12,
    ""AS14987"": 2,
    ""AS398705"": 2,
    ""AS198953"": 12,
    ""AS9808"": 2,
    ""AS14061"": 12
  },
  ""isp"": {
    ""VIETSERVER"": 74,
    ""Horizon LLC"": 12,
    ""PJSC Rostelecom"": 24,
    ""Flyservers S.A."": 24,
    ""TAM"": 6,
    ""Akamai Technologies, Inc."": 22,
    ""Iran Telecommunication Company PJS"": 2,
    ""BtHoster LTD"": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Xhost Internet Solutions LP"": 8,
    ""Hangzhou Alibaba Advertising Co"": 64,
    ""TOV E-RISHENNYA"": 6,
    ""Censys, Inc."": 6,
    ""AZ Viet NAM Communications Technology Company Limited"": 2,
    ""Dmitriy Panchenko"": 10,
    ""Addresses CNNIC"": 6,
    ""ColoCrossing"": 164,
    ""Chinanet"": 2,
    ""FOP Dmytro Nedilskyi"": 4,
    ""SAKURA Internet Inc."": 2,
    ""Datacamp Limited"": 6,
    ""Hosting Services"": 2,
    ""Google LLC"": 12,
    ""Rethem Hosting LLC"": 2,
    ""Proton66 OOO"": 12,
    ""China Mobile"": 2,
    ""DigitalOcean, LLC"": 12
  },
  ""org"": {
    ""VietServer Services technology company limited"": 74,
    ""Horizon LLC"": 12,
    ""PJSC Rostelecom"": 24,
    ""UAB Host Baltic"": 4,
    ""TAM Media Technology Joint Stock Company"": 6,
    ""Linode"": 22,
    ""Siub"": 2,
    ""BtHosting"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Aliyun Computing Co., LTD"": 70,
    ""TOV VAIZ PARTNER"": 6,
    ""Censys, Inc."": 4,
    ""DULIEUAZ"": 2,
    ""Flyservers S.A"": 20,
    ""Xhostis"": 10,
    ""CENTRIOHOST-LLC"": 164,
    ""Chinanet HE"": 2,
    ""FOP Dmytro Nedilskyi"": 4,
    ""SAKURA-OSAKA"": 2,
    ""Starcrecium Limited"": 2,
    ""Cdnext HOU"": 6,
    ""Censys, Inc"": 2,
    ""Ipxo"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Rethem Hosting LLC"": 2,
    ""Proton66 LLC"": 12,
    ""China Mobile Communications Corporation"": 2,
    ""DigitalOcean, LLC"": 12
  },
  ""regionName"": {
    ""Hanoi"": 80,
    ""Moscow"": 38,
    ""St.-Petersburg"": 24,
    ""Vilnius"": 4,
    ""Maharashtra"": 4,
    ""M\u0101zandar\u0101n"": 2,
    ""Chi\u0219in\u0103u Municipality"": 2,
    ""California"": 28,
    ""England"": 8,
    ""Texas"": 8,
    ""Beijing"": 6,
    ""Guangdong"": 60,
    ""Kyiv City"": 6,
    ""Michigan"": 4,
    ""Ho Chi Minh"": 2,
    ""Kaunas"": 20,
    ""Shanghai"": 6,
    ""New York"": 164,
    ""Hebei"": 2,
    ""North Holland"": 4,
    ""\u014csaka"": 2,
    ""Chechnya"": 2,
    ""New Jersey"": 2,
    ""Illinois"": 2,
    ""Hesse"": 2,
    ""Karnataka"": 12
  },
  ""country"": {
    ""Vietnam"": 82,
    ""Russia"": 64,
    ""Lithuania"": 24,
    ""India"": 16,
    ""Iran"": 2,
    ""Moldova"": 2,
    ""United States"": 208,
    ""United Kingdom"": 8,
    ""China"": 74,
    ""Ukraine"": 6,
    ""Netherlands"": 4,
    ""Japan"": 2,
    ""Germany"": 2
  },
  ""account"": {
    ""hello"": 380,
    ""Domain"": 32,
    ""Test"": 24,
    ""Administr"": 32,
    ""(empty)"": 12,
    ""krJNyLmpH"": 2,
    ""nRRoDC"": 2,
    ""CuYmOd"": 2,
    ""nmap"": 2,
    ""baMUHVCQf"": 2,
    ""wZyJRa"": 2,
    ""mFhuxG"": 2
  },
  ""keyboard"": {
    ""Unknown"": 494
  },
  ""client_build"": {
    ""Unknown"": 494
  },
  ""client_name"": {
    ""Unknown"": 494
  },
  ""ip_type"": {
    ""Unknown"": 196,
    ""hosting"": 290,
    ""proxy"": 4,
    ""hosting & proxy"": 2,
    ""mobile"": 2
  }
}"
JWwgbmLG,2023-08-13_stats.json,rdp_snitch,JSON,Sunday 13th of August 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""103.232.53.123"": 37,
    ""62.204.41.134"": 5,
    ""195.19.96.41"": 12,
    ""45.227.254.54"": 2,
    ""103.153.68.198"": 3,
    ""194.195.119.15"": 2,
    ""217.219.162.204"": 1,
    ""45.129.14.208"": 1,
    ""45.79.108.4"": 8,
    ""194.26.135.222"": 2,
    ""87.251.75.145"": 2,
    ""45.79.8.178"": 1,
    ""60.205.170.161"": 3,
    ""39.108.174.140"": 28,
    ""45.143.201.62"": 3,
    ""167.248.133.49"": 1,
    ""103.195.238.104"": 1,
    ""194.165.16.76"": 2,
    ""185.170.144.3"": 3,
    ""87.251.75.120"": 1,
    ""194.165.16.10"": 2,
    ""47.102.201.13"": 3,
    ""107.173.191.116"": 82,
    ""106.116.169.71"": 1,
    ""31.43.185.3"": 2,
    ""133.167.88.201"": 1,
    ""185.11.61.238"": 1,
    ""37.19.221.141"": 3,
    ""120.79.236.35"": 1,
    ""167.94.138.36"": 1,
    ""194.165.16.37"": 4,
    ""62.204.41.139"": 1,
    ""191.101.174.140"": 1,
    ""205.210.31.91"": 3,
    ""104.152.52.201"": 1,
    ""167.94.145.60"": 1,
    ""45.140.17.16"": 6,
    ""87.251.75.64"": 1,
    ""112.5.87.34"": 1,
    ""64.227.160.176"": 6,
    ""194.165.16.72"": 2,
    ""185.170.144.113"": 2,
    ""198.235.24.48"": 3
  },
  ""asn"": {
    ""AS63737"": 37,
    ""AS59425"": 6,
    ""AS12389"": 12,
    ""AS267784"": 2,
    ""AS131366"": 3,
    ""AS63949"": 11,
    ""AS58224"": 1,
    ""AS198465"": 1,
    ""AS57523"": 3,
    ""AS208091"": 4,
    ""AS37963"": 35,
    ""AS210950"": 3,
    ""AS398722"": 1,
    ""AS140827"": 1,
    ""AS48721"": 10,
    ""AS48080"": 5,
    ""AS36352"": 82,
    ""AS4134"": 1,
    ""AS211736"": 2,
    ""AS9371"": 1,
    ""AS212238"": 3,
    ""AS398324"": 1,
    ""AS32780"": 1,
    ""AS396982"": 6,
    ""AS14987"": 1,
    ""AS398705"": 1,
    ""AS198953"": 6,
    ""AS9808"": 1,
    ""AS14061"": 6
  },
  ""isp"": {
    ""VIETSERVER"": 37,
    ""Horizon LLC"": 6,
    ""PJSC Rostelecom"": 12,
    ""Flyservers S.A."": 12,
    ""TAM"": 3,
    ""Akamai Technologies, Inc."": 11,
    ""Iran Telecommunication Company PJS"": 1,
    ""BtHoster LTD"": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Xhost Internet Solutions LP"": 4,
    ""Hangzhou Alibaba Advertising Co"": 32,
    ""TOV E-RISHENNYA"": 3,
    ""Censys, Inc."": 3,
    ""AZ Viet NAM Communications Technology Company Limited"": 1,
    ""Dmitriy Panchenko"": 5,
    ""Addresses CNNIC"": 3,
    ""ColoCrossing"": 82,
    ""Chinanet"": 1,
    ""FOP Dmytro Nedilskyi"": 2,
    ""SAKURA Internet Inc."": 1,
    ""Datacamp Limited"": 3,
    ""Hosting Services"": 1,
    ""Google LLC"": 6,
    ""Rethem Hosting LLC"": 1,
    ""Proton66 OOO"": 6,
    ""China Mobile"": 1,
    ""DigitalOcean, LLC"": 6
  },
  ""org"": {
    ""VietServer Services technology company limited"": 37,
    ""Horizon LLC"": 6,
    ""PJSC Rostelecom"": 12,
    ""UAB Host Baltic"": 2,
    ""TAM Media Technology Joint Stock Company"": 3,
    ""Linode"": 11,
    ""Siub"": 1,
    ""BtHosting"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Aliyun Computing Co., LTD"": 35,
    ""TOV VAIZ PARTNER"": 3,
    ""Censys, Inc."": 2,
    ""DULIEUAZ"": 1,
    ""Flyservers S.A"": 10,
    ""Xhostis"": 5,
    ""CENTRIOHOST-LLC"": 82,
    ""Chinanet HE"": 1,
    ""FOP Dmytro Nedilskyi"": 2,
    ""SAKURA-OSAKA"": 1,
    ""Starcrecium Limited"": 1,
    ""Cdnext HOU"": 3,
    ""Censys, Inc"": 1,
    ""Ipxo"": 1,
    ""Palo Alto Networks, Inc"": 6,
    ""Rethem Hosting LLC"": 1,
    ""Proton66 LLC"": 6,
    ""China Mobile Communications Corporation"": 1,
    ""DigitalOcean, LLC"": 6
  },
  ""regionName"": {
    ""Hanoi"": 40,
    ""Moscow"": 19,
    ""St.-Petersburg"": 12,
    ""Vilnius"": 2,
    ""Maharashtra"": 2,
    ""M\u0101zandar\u0101n"": 1,
    ""Chi\u0219in\u0103u Municipality"": 1,
    ""California"": 14,
    ""England"": 4,
    ""Texas"": 4,
    ""Beijing"": 3,
    ""Guangdong"": 30,
    ""Kyiv City"": 3,
    ""Michigan"": 2,
    ""Ho Chi Minh"": 1,
    ""Kaunas"": 10,
    ""Shanghai"": 3,
    ""New York"": 82,
    ""Hebei"": 1,
    ""North Holland"": 2,
    ""\u014csaka"": 1,
    ""Chechnya"": 1,
    ""New Jersey"": 1,
    ""Illinois"": 1,
    ""Hesse"": 1,
    ""Karnataka"": 6
  },
  ""country"": {
    ""Vietnam"": 41,
    ""Russia"": 32,
    ""Lithuania"": 12,
    ""India"": 8,
    ""Iran"": 1,
    ""Moldova"": 1,
    ""United States"": 104,
    ""United Kingdom"": 4,
    ""China"": 37,
    ""Ukraine"": 3,
    ""Netherlands"": 2,
    ""Japan"": 1,
    ""Germany"": 1
  },
  ""account"": {
    ""hello"": 190,
    ""Domain"": 16,
    ""Test"": 12,
    ""Administr"": 16,
    ""(empty)"": 6,
    ""krJNyLmpH"": 1,
    ""nRRoDC"": 1,
    ""CuYmOd"": 1,
    ""nmap"": 1,
    ""baMUHVCQf"": 1,
    ""wZyJRa"": 1,
    ""mFhuxG"": 1
  },
  ""keyboard"": {
    ""Unknown"": 247
  },
  ""client_build"": {
    ""Unknown"": 247
  },
  ""client_name"": {
    ""Unknown"": 247
  },
  ""ip_type"": {
    ""Unknown"": 98,
    ""hosting"": 145,
    ""proxy"": 2,
    ""hosting & proxy"": 1,
    ""mobile"": 1
  }
}"
6VyBRUb1,Untitled,Axow01,Lua,Sunday 13th of August 2023 07:14:58 PM CDT,"rednet.open(""top"")
local speaker = peripheral.wrap(""bottom"")

local function alarm()
    for i = 0, 300, 2 do
        redstone.setAnalogOutput(""back"", 15)
        speaker.playNote(""harp"", 3, 4)
        os.sleep(0.5)
        redstone.setAnalogOutput(""back"", 0)
        os.sleep(0.5)
    end
end

local co = nil

while true do
    local senderId, Message, protocol = rednet.receive(""light_42"", 300)
    if Message == true then
        redstone.setAnalogOutput(""back"", 15)
    elseif Message == false or Message == nil then
        redstone.setAnalogOutput(""back"", 0)
    elseif Message == ""alarm"" then
        if not co or coroutine.status(co) == ""dead"" then
            co = coroutine.create(alarm)
            coroutine.resume(co)
        end
    end
    os.sleep(0.1)  -- Add a short delay to prevent constant looping
end
"
FVZ03JTe,JS on click handler not working,kiwiheretic,JavaScript,Sunday 13th of August 2023 07:03:13 PM CDT," <script>
  async function getFiles() {
    let res = await fetch(""/api/files"");
    let jsondata = await res.json();
    return jsondata.files;
  }
  function displayFiles(files) {
    let div = $("".file-list"");
    $(div).empty();
    files.forEach( function(file) {
      $(div).append(`<div id=""doc-${file.ID}"" class=""document""><div class=""image""><img src=""${file.file_url}""> 
     <div class=""close""><img src=""/images/close.jpeg""></div>
      </div>
     <div class=""filename"">${file.original_filename}</div>
     </div>`);
    });
  }
  $(document).ready(async function() {
    let files = await getFiles();
    console.log(files);
    displayFiles(files);

    $(""div.close img"").on(""click"", async function(evt) {
      let doc = $(evt.target).closest(""div.document"");
      let docid = $(doc).attr(""id"");
      let mchresult = docid.match(/doc-(\d+)/);
      let id = mchresult[1];
      let res = await fetch(""/api/file-delete/""+id, { method: ""POST""} );
      $(doc).fadeOut(1000, async function() {
        let files = await getFiles();
        if (files) {
          displayFiles(files);
        }
      });
    });

    $('#file-upload').on(""submit"", async function(evt) { 
      console.log(""Submit"");
      evt.preventDefault();
      let formData = new FormData( $(""#file-upload"")[0] );
      let res = await fetch(""/api/upload-file"", { method: ""POST"", body: formData } );
      console.log(res);
      let files = await getFiles();
      if (files) {
        displayFiles(files);
      }
    });
  });
 </script>
"
QYQ4Pizf,Untitled,melzneni,Lua,Sunday 13th of August 2023 06:24:11 PM CDT,"local args={...}
if #args ~=1 then
	print(""please provide a server url"")
end

local address = args[1]

local ws = assert(http.websocket(address))
print(ws)
ws.send(""Hu"")
print(ws.receive())
ws.close()"
