id,title,username,language,date,content
Q6vK5uy7,Pytorch run time error calling backward(),Amaboh,Python,Sunday 6th of August 2023 06:16:36 AM CDT,"# custom GNN
import dgl.nn as dglnn
import torch.nn as nn
import torch.nn.functional as F

class CustomGNNLayer(nn.Module):
    def __init__(self, user_in_feats, product_in_feats, image_in_feats, hidden_feats):
        super(CustomGNNLayer, self).__init__()
        # Define weight matrices for each node type
        self.weight_user = nn.Linear(user_in_feats, hidden_feats)
        self.weight_product = nn.Linear(product_in_feats, hidden_feats)
        self.weight_image = nn.Linear(image_in_feats, hidden_feats)
        self.weight_self = nn.Linear(hidden_feats, hidden_feats)

    def forward(self, g, h):
        with g.local_scope():
            # Extract features from the dictionaries
            user_feats = h['user']['features']
            product_feats = h['product']['features']
            image_feats = h['image']['features']

            # Assign features to each node type
            g.nodes['user'].data['h'] = self.weight_user(user_feats)
            g.nodes['product'].data['h'] = self.weight_product(product_feats)
            g.nodes['image'].data['h'] = self.weight_image(image_feats)
            
            # Message function to fetch incoming messages
            def message_func(edges):
                return {'msg': edges.src['h']}
            
            # Reduce function to aggregate messages
            def reduce_func(nodes):
                neigh_msg = nodes.mailbox['msg'].mean(dim=1)
                self_msg = self.weight_self(nodes.data['h'])
                return {'h': torch.relu(neigh_msg + self_msg)}

            # Update all node types
            g.update_all(message_func, reduce_func, etype=('user', 'rates', 'product'))
            g.update_all(message_func, reduce_func, etype=('user', 'has', 'image'))

            # Extract updated features for each node type
            user_feats_out = g.nodes['user'].data['h']
            product_feats_out = g.nodes['product'].data['h']
            image_feats_out = g.nodes['image'].data['h']

            return {'user': user_feats_out, 'product': product_feats_out, 'image': image_feats_out}


#embedding generation 
class EmbeddingGenerationModel(nn.Module):
    def __init__(self, user_in_feats, product_in_feats, image_in_feats, hidden_feats):
        super(EmbeddingGenerationModel, self).__init__()
        self.layers = CustomGNNLayer(user_in_feats, product_in_feats, image_in_feats, hidden_feats)
        self.user_final_layer = nn.Linear(hidden_feats, hidden_feats)
        self.product_final_layer = nn.Linear(hidden_feats, hidden_feats)
        self.image_final_layer = nn.Linear(hidden_feats, hidden_feats)

    def forward(self, g, h):
        h = self.layers(g, h)
        user_out = self.user_final_layer(h['user'])
        product_out = self.product_final_layer(h['product'])
        image_out = self.image_final_layer(h['image'])
        return user_out, product_out, image_out
model#
from torch.nn.functional import cosine_similarity

class LinkPredictionModel(nn.Module):
    def __init__(self, user_in_feats, product_in_feats, image_in_feats, hidden_feats):
        super().__init__()
        self.embedding_model = EmbeddingGenerationModel(
            user_in_feats, product_in_feats, image_in_feats, hidden_feats)
        self.fc = nn.Linear(2, 1)  # 2 similarity scores: user-image and user-product
        
    def forward(self, g, user_feats, product_feats, image_feats, edges):
        # Generate embeddings
        user_embeddings, product_embeddings, image_embeddings = self.embedding_model(g, {'user': user_feats, 'product': product_feats, 'image': image_feats})
        
        # Select relevant embeddings based on edges
        user_embed_selected = user_embeddings[edges[0]]
        product_embed_selected = product_embeddings[edges[1]]
        image_embed_selected = image_embeddings[edges[0]]  # Assuming image embeddings correspond to users

        # Check if selected embeddings match edge sizes
        assert user_embed_selected.size(0) == edges[0].size(0), ""Mismatch between user embeddings and edges""
        assert product_embed_selected.size(0) == edges[1].size(0), ""Mismatch between product embeddings and edges""
        assert image_embed_selected.size(0) == edges[0].size(0), ""Mismatch between image embeddings and edges""

        # Calculate user-image similarity (cosine similarity)
        user_image_similarity = cosine_similarity(user_embed_selected, image_embed_selected, dim=1).unsqueeze(1)

        # Calculate user-product similarity (cosine similarity)
        user_product_similarity = cosine_similarity(user_embed_selected, product_embed_selected, dim=1).unsqueeze(1)

        # Concatenate user_image_similarity and user_product_similarity
        similarities = torch.cat([user_image_similarity, user_product_similarity], dim=1)

        # Prediction using similarities
        interaction_probabilities = torch.sigmoid(self.fc(similarities))

        return interaction_probabilities


user_in_feats = 512
product_in_feats = 512
image_in_feats= 512

link_prediction_model = LinkPredictionModel(
    user_in_feats=user_in_feats, product_in_feats=product_in_feats, image_in_feats=image_in_feats, hidden_feats=512
)
embedding_model = EmbeddingGenerationModel(
    user_in_feats=user_in_feats, product_in_feats=product_in_feats, image_in_feats=image_in_feats, hidden_feats=512
)





#training loop
learning_rate = 0.010
num_epochs = 100
#loss_fn = nn.BCEWithLogitsLoss() # Binary Cross Entropy with Logits
optimizer = torch.optim.Adam(link_prediction_model.parameters(), lr=learning_rate)

train_edges = train_g.edges(etype='rates')

for epoch in range(num_epochs):
    epoch_loss = 0.0  # Accumulate loss for the epoch
    
    # DataLoader for positive and negative edge samples
    dataloader = DataLoader(train_edges, batch_size=64, shuffle=True)
    for i, batch in enumerate(dataloader):
        optimizer.zero_grad()  # Reset gradients
        pos_u, pos_v = batch[:, 0], batch[:, 1]
        neg_u = pos_u  # Negative samples have the same users as positive samples
        neg_v = torch.randint(0, train_num_products, (len(pos_v),))  # Random negative products

        # Forward pass for positive edges
        pos_scores = link_prediction_model(train_g, train_user_feats, train_product_feats, train_image_feats, (pos_u, pos_v))
        pos_scores = pos_scores.squeeze(-1)

        # Forward pass for negative edges
        neg_scores = link_prediction_model(train_g, train_user_feats, train_product_feats, train_image_feats, (neg_u, neg_v))
        neg_scores = neg_scores.squeeze(-1)

        # Max-margin loss
        loss = torch.sum(torch.clamp(1 - pos_scores + neg_scores, min=0))
        
        # Backward pass
        loss.backward()  # Compute gradients

        # Perform parameter update
        optimizer.step()  # Update parameters

        epoch_loss += loss.item()

    print(f""Epoch {epoch+1}/{num_epochs}, Loss: {epoch_loss}"")
"
GbbMuaP2,data656,TestGuy1,JSON,Sunday 6th of August 2023 06:13:14 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'cc3a4715ca4498080a5537425bb5f849def7162c4283ef34b16f03430b313e72746e33127202b7878f89b558947a39f94f7f1d10d802edf92de5476fee6d620f577536cfd4fa7e69b3421bc4bfd3c962ad29502b01d3c76e904c94496afb3a77d38e873d878611a246a15824e3926b18ea3f57eb53ff877231f03db1b8d15594',
  otherdata: [
    'd0ac4c85b25c2b88b2477a10d27a21ee',
    'd7b8723b51f8ab79fa4407e2ab7bdece',
    '1b464db9f17c05b9dfa34c003bf0dc3d',
    '47efd367b74e647dae52d82950174424',
    'dd796e72357d046b024ce84139de170d',
    '5156fb658779322bcba97a8c7760a611',
    'd5e4c98e47c46b33ca7604a98c98a706',
    'd8b2a95b958c7af88248574b1c381a92'
  ]
}"
wtJWEgs8,Image Converter,Vivsi,Java,Sunday 6th of August 2023 05:55:31 AM CDT,"import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Scanner;

public class ImageConverter {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println(""Enter 1 to convert PNG to JPG"");
        System.out.println(""Enter 2 to convert JPG to PNG"");
        int a = scanner.nextInt();

        if (a == 1) {
            try {
                System.out.println(""Please enter the path of the .png file."");
                String l = scanner.next();
                if (l.charAt(0) == '""' && l.charAt(l.length() - 1) == '""') {
                    l = l.substring(1, l.length() - 1);                }
                Path source = Paths.get(l);
                System.out.println(""Your file will be saved in the same location with the same name."");
                Path target = Paths.get(l.substring(0, l.length() - 4) + "".jpg"");

                BufferedImage originalImage = ImageIO.read(source.toFile());

                BufferedImage newBufferedImage = new BufferedImage(
                        originalImage.getWidth(),
                        originalImage.getHeight(),
                        BufferedImage.TYPE_INT_RGB);

                newBufferedImage.createGraphics().drawImage(originalImage, 0, 0, null);

                ImageIO.write(newBufferedImage, ""jpg"", target.toFile());

                System.out.println(""Conversion from PNG to JPG complete."");
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else if (a == 2) {
            try {
                System.out.println(""Please enter the path of the .jpg file."");
                String l = scanner.next();
                if (l.charAt(0) == '""' && l.charAt(l.length() - 1) == '""') {
                    l = l.substring(1, l.length() - 1);  }
                Path source = Paths.get(l);
                System.out.println(""Your file will be saved in the same location with the same name."");
                Path target = Paths.get(l.substring(0, l.length() - 4) + "".png"");

                BufferedImage originalImage = ImageIO.read(source.toFile());

                BufferedImage newBufferedImage = new BufferedImage(
                        originalImage.getWidth(),
                        originalImage.getHeight(),
                        BufferedImage.TYPE_INT_ARGB);

                newBufferedImage.createGraphics().drawImage(originalImage, 0, 0, null);

                ImageIO.write(newBufferedImage, ""png"", target.toFile());

                System.out.println(""Conversion from JPG to PNG complete."");
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            System.out.println(""Please choose a valid option"");
        }

        scanner.close();
    }
}"
rmnxArWr,Balloon Simulator 🎈,LuaXe,Lua,Sunday 6th of August 2023 05:29:39 AM CDT,"function C(W) spawn(function () while getgenv().C do
    for i, v in pairs(workspace.Objects.Earth:GetChildren()) do
        if v:FindFirstChildOfClass(""MeshPart"") then
            local args = {[1] = v:FindFirstChildOfClass(""MeshPart""),[2] = Vector3.new(v:FindFirstChildOfClass(""MeshPart"").Position),[3] = 1,[4] = ""Normal""} game:GetService(""ReplicatedStorage"").Packages.Knit.Services.BalloonService.RF.ClickedForBalloon:InvokeServer(unpack(args))
                end
            end
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Balloon Simulator"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Float ALL"",function(val) getgenv().C = val C() end)

b:Dropdown(""Choose The World"",{""Earth"",""Space World""},true,function(val) W = val end)

b:Label(""Made by LuaXie"",{TextSize = 23; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Slider(""WalkSpeed"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val end)
b:Slider(""JumpPower"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.JumpPower = val end)
b:Slider(""HipHeight"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.HipHeight = val end)
b:Slider(""Gravity"",{min = 0; max = 360; precise = false;},function(val) game.workspace.Gravity = val end)
b:Slider(""FOV"",{min = 0;max = 120;precise = false;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function RTPCFrame(M_CF) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then M_CF.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end end
function PHP(Player_HP) if game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"") then game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end end"
cbQbvHJF,botaniaThermalilyFloodgate,curtsable,Lua,Sunday 6th of August 2023 05:22:28 AM CDT,"--[[
Program automate Botania's thermalilies by using 
fluid placers to place lava every 6.5 minutes. 
Is enabled by a lever at the top, and stops when
it detects a redstone signal from the front. This can
be from a comparator on the initial mana pool to detect
when you're out of mana storage. Images for reference at
https://imgur.com/a/zn3iGwr
--]]

sleepTime = 390 -- wait 390s (6.5m) for thermalilies
activeTime = 15 -- duration to open the flood gates

while true do
    -- Output redstone from the back to enable floodgates
    -- and the mana pool is not full (given by comparator at front)
    while (rs.getInput(""top"") and not rs.getInput(""front"")) do 
        rs.setOutput(""back"", true)        
        sleep(activeTime)
        rs.setOutput(""back"", false)
		
        sleep(sleepTime) -- Wait until thermalilies ready
    end   
	
	-- Less laggy, as it only starts running the while loop after
	-- it detects a redstone change from the lever/comparator
    event = os.pullEvent(""redstone"")
end"
Bfxd6scP,Untitled,Galatea2000,C++,Sunday 6th of August 2023 05:14:34 AM CDT,"String ConvertHexToString(const char * hexStr) {
  String result = """";
  int strLen = strlen(hexStr);

  // Hexadecimális sztring hossza mindig páros szám kell legyen
  if (strLen % 2 != 0) {
    return result;
  }

  for (int i = 0; i < strLen; i += 2) {
    // Olvassuk be a hexadecimális számjegyeket két karakterenként
    char hexByte[3] = {
      hexStr[i],
      hexStr[i + 1],
      '\0'
    };
    // Az átalakítás a strtoul függvénnyel történik, ami egy C függvény
    char charByte = strtoul(hexByte, NULL, 16);
    //result += charByte;
    result.concat(charByte);
  }

  return result;
}

Feltöltés részlete:

Serial.println(ConvertHexToString(str.c_str()));

                String gpsDateFromSensorVar = ConvertHexToString(str.c_str());
     

                Serial.println(gpsDateFromSensorVar);
;

                gpsDateFromSensor.set(""/LocalTime"", gpsDateFromSensorVar);

                //Firebase-re menteni NTP TIMEstamp
                GetEpochTimeFromNTP();
                Firebase.updateNode(firebaseData, ""/FieldMill/GpsTime/"" + String(epochTimeFromNTP), gpsDateFromSensor);
"
APyck0TX,Untitled,fangga,Dart,Sunday 6th of August 2023 04:50:34 AM CDT,"Widget newsItem(Function() onTap, QueryDocumentSnapshot news) {
  return InkWell(
    onTap: () {
      onTap();
    },
    child: Card(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Image.network(
            news[""thumbnail_url""],
            height: 113.0,
            width: 180,
          ),
          Padding(
            padding: const EdgeInsets.all(6.0),
            child: SizedBox(
              width: 170,
              child: Text(
                news[""title""],
                style: AppTextStyle.labelSmall,
                maxLines: 2,
                overflow: TextOverflow.ellipsis,
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.only(left: 6.0, right: 6.0, bottom: 6.0),
            child: Row(
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                const Icon(
                  Icons.watch_later,
                  color: AppColor.orange,
                  size: 16.0,
                ),
                const SizedBox(
                  width: 4.0,
                ),
                Text(
                  news[""timestamp""].toString(),
                  style: TextStyle(
                    color: AppColor.lightGray,
                    fontFamily: AppTextStyle.bodySmall.fontFamily,
                    fontSize: AppTextStyle.bodySmall.fontSize,
                    fontWeight: AppTextStyle.bodySmall.fontWeight,
                  ),
                  overflow: TextOverflow.ellipsis,
                  maxLines: 2,
                ),
              ],
            ),
          ),
        ],
      ),
    ),
  );
}"
TLA7xGLN,06. Cinema Tickets,veronikaaa86,Python,Sunday 6th of August 2023 04:39:11 AM CDT,"input_line = input()

standard_count = 0
student_count = 0
kid_count = 0
total_count = 0
while input_line != ""Finish"":
    movie = input_line
    capacity = int(input())

    current_tickets_count = 0
    command_line = input()
    while command_line != ""End"":
        type_ticket = command_line
        current_tickets_count += 1

        if type_ticket == ""standard"":
            standard_count += 1
        elif type_ticket == ""student"":
            student_count += 1
        elif type_ticket == ""kid"":
            kid_count += 1

        if current_tickets_count == capacity:
            break

        command_line = input()

    total_count += current_tickets_count

    percentage_current = current_tickets_count / capacity * 100
    print(f""{movie} - {percentage_current:.2f}% full."")

    input_line = input()

print(f""Total tickets: {total_count}"")
percent_student = student_count / total_count * 100
print(f""{percent_student:.2f}% student tickets."")
percent_standard = standard_count / total_count * 100
print(f""{percent_standard:.2f}% standard tickets."")
percent_kid = kid_count / total_count * 100
print(f""{percent_kid:.2f}% kids tickets."")"
mvTuizSU,05. Special Numbers,veronikaaa86,Python,Sunday 6th of August 2023 03:59:49 AM CDT,"n = int(input())
for i in range(1, 10):
    for j in range(1, 10):
        for k in range(1, 10):
            for l in range(1, 10):
                is_valid = n % i == 0 and n % j == 0 and n % k == 0 and n % l == 0
                if is_valid:
                    print(f""{i}{j}{k}{l}"", end="" "")
"
VRw2EUD2,Untitled,ridwan689,PHP,Sunday 6th of August 2023 03:55:45 AM CDT,"<?php
// Fungsi perangkingan SMART
function smart($data, $weights)
{
    $totals = array();
    foreach ($data as $alternative => $ratings) {
        $total = 0;
        foreach ($ratings as $k => $v) {
            $total += $v * $weights[$k];
        }
        $totals[$alternative] = $total;
    }

    // Mengurutkan alternatif berdasarkan nilai total dari yang terbesar ke terkecil
    arsort($totals);

    return $totals;
}

// Koneksi ke database menggunakan PDO
include ""dbc.php"";

$q = ""SHOW COLUMNS FROM alternative"";
$q = $db->prepare($q);
$q->execute();
$criteria = $q->fetchAll(); # start dari 2
$kolom = """";
for ($i = 2; $i < count($criteria); $i++) {
    $kolom .= ""`"" . $criteria[$i]['Field'] . ""`"";
    if ($i < count($criteria) - 1) {
        $kolom .= "", "";
    }
}

$q = ""SELECT deskripsi FROM alternative"";
$q = $db->prepare($q);
$q->execute();
$matrix_a = $q->fetchAll();

$q = ""SELECT bobot FROM criteria"";
$q = $db->prepare($q);
$q->execute();
$bobot_criteria = $q->fetchAll();

// Query untuk mengambil dataset
$stmt = ""SELECT {$kolom} FROM alternative"";
$stmt = $db->prepare($stmt);
$stmt->execute();
$data = $stmt->fetchAll(PDO::FETCH_NUM);

// Menghitung ROC untuk setiap kriteria
$roc = array();
foreach ($data as $alternative => $ratings) {
    $rank = array();
    foreach ($ratings as $k => $v) {
        $rank[] = $v;
    }
    $uniqueRank = array_unique($rank);
    sort($uniqueRank);
    $n = count($uniqueRank);

    if ($n > 1) {
        $rank = array_reverse(range(1, $n));
        $roc[$alternative] = array_sum($rank) / ($n * ($n - 1));
    } else {
        $roc[$alternative] = 0; // Atasi pembagian dengan nol jika hanya ada satu nilai
    }
}

// Hitung bobot relatif untuk setiap kriteria
$criteriaWeights = array();
$sum_roc = array_sum($roc);
foreach ($roc as $k => $v) {
    $criteriaWeights[$k] = $v / $sum_roc;
}

// Menghitung perangkingan SMART
$alternatives = $data;
$finalRanking = smart($alternatives, $criteriaWeights);

// Menampilkan hasil peringkat akhir
for($i = 0; $i<count($finalRanking); $i++) {
    $matrix_a[$i]['hasil'] = $finalRanking[$i];
}

# perangkingan
function sortbyhasil($a, $b) {
    if ($a['hasil'] < $b['hasil']) {
        return 1;
    } elseif ($a['hasil'] < $b['hasil']) {
        return -1;
    }
    return 0;
}

usort($matrix_a, 'sortbyhasil');
?>

<style>
.btn {
    padding:10px;
}
.fw {
    width:100%;
}
</style>
<center>
<h2>Hasil Perankingan</h2>
</center>
<table style='width:100%; height:100%;text-align:center;' align='center' border=""1"" cellpadding=""10"">
        <tr>
            <td><b>No</b></td>
            <td><b>Deskripsi</b></td>
            <td><b>Nilai ROC-SMART</b></td>
        </tr>
        <?php for($i = 0 ; $i< count($matrix_a); $i++ ) { ?>
        <tr>
            <td><?php echo $i+1; ?></td>
            <td><?php echo $matrix_a[$i]['deskripsi']; ?></td>
            <td><?php echo $matrix_a[$i]['hasil']; ?></td>
        </tr>
        <?php } ?>
</table>
"
MmuvQ4Tr,04. Train The Trainers,veronikaaa86,Python,Sunday 6th of August 2023 03:48:48 AM CDT,"people_assessment = int(input())

input_line = input()

count_all_grades = 0
sum_all_grades = 0
while input_line != ""Finish"":
    presentation_name = input_line

    sum_current_grades = 0
    for i in range(1, people_assessment + 1):
        current_grade = float(input())
        count_all_grades += 1
        sum_all_grades += current_grade
        sum_current_grades += current_grade

    avg_current_grade = sum_current_grades / people_assessment
    print(f""{presentation_name} - {avg_current_grade:.2f}."")

    input_line = input()

avg_all_grades = sum_all_grades / count_all_grades
print(f""Student's final assessment is {avg_all_grades:.2f}."")"
BhWfTKCF,DeltaExploits,GabrielJoris,Lua,Sunday 6th of August 2023 02:50:39 AM CDT,"local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12(""#"",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v72=(v31/((5 -(1 + 2))^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-1)) + (620 -(555 + 64)))) ;return v72-(v72%(932 -(857 + 74))) ;else local v73=(570 -(367 + 201))^(v32-(878 -(282 + 595))) ;return (((v31%(v73 + v73))>=v73) and (928 -(214 + 713))) or (0 + 0) ;end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34=1637 -((1873 -(87 + 263)) + 114) ;local v35;local v36;local v37;local v38;while true do if ((0 + 0)==v34) then v35,v36,v37,v38=v1(v16,v19,v19 + 3 );v19=v19 + (5 -1) ;v34=1066 -(68 + 997) ;end if (v34==((1138 -(67 + 113)) -(892 + 65))) then return (v38 * (16778486 -(226 + 1044))) + (v37 * (285370 -219834)) + (v36 * (469 -213)) + v35 ;end end end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v39=0;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v39==(3 + 1)) then v48=nil;while true do if (v40==(0 -0)) then local v97=0 -0 ;while true do if ((0 + 0)==v97) then v41=0 + 0 ;v42=nil;v97=561 -(306 + 254) ;end if (1~=v97) then else v40=1 + 0 ;break;end end end if (v40~=(1005 -(938 + 63))) then else while true do if (v41==(0 + 0)) then local v104=0;while true do if (v104~=(1 -0)) then else v41=1;break;end if (v104==(1467 -(899 + 568))) then v42=0 + 0 ;v43=nil;v104=2 -1 ;end end end if (v41==(1616 -(1565 + 48))) then v48=nil;while true do local v107=603 -(268 + 335) ;local v108;local v109;while true do if (v107~=(290 -(60 + 230))) then else v108=572 -(426 + 146) ;v109=nil;v107=1 + 0 ;end if (v107==1) then while true do if (v108~=(1456 -(282 + 1174))) then else v109=1138 -(782 + 356) ;while true do if (v109~=(267 -(176 + 91))) then else if (v42~=(813 -(569 + 242))) then else local v153=0 -0 ;local v154;while true do if (v153==0) then v154=0 -0 ;while true do local v160=0 + 0 ;local v161;while true do if (v160==(0 + 0)) then v161=1024 -(706 + 318) ;while true do if (v161==(1251 -(721 + 530))) then if (v154~=1) then else return v46;end if (v154==(1271 -(945 + 326))) then local v168=0 -0 ;while true do if (v168~=0) then else for v177=1,v24() do local v178=0 + 0 ;local v179;local v180;while true do if ((2 -1)~=v178) then else while true do if (0==v179) then v180=v22();if (v21(v180,1,701 -(271 + 429) )~=(0 + 0)) then else local v187=0;local v188;local v189;local v190;local v191;while true do if (v187~=0) then else v188=1500 -(1408 + 92) ;v189=nil;v187=1087 -(461 + 625) ;end if (v187~=(1289 -(993 + 295))) then else v190=nil;v191=nil;v187=1 + 1 ;end if (v187~=(1173 -(418 + 753))) then else while true do if (v188==0) then local v193=0 + 0 ;local v194;while true do if (v193==0) then v194=0;while true do if (v194~=(1227 -(322 + 905))) then else local v207=0 + 0 ;while true do if (v207==(0 + 0)) then v189=v21(v180,1 + 1 ,532 -(406 + 123) );v190=v21(v180,1773 -(1749 + 20) ,617 -(602 + 9) );v207=1 + 0 ;end if ((1323 -(1249 + 73))~=v207) then else v194=1 + 0 ;break;end end end if (v194~=(1146 -(466 + 679))) then else v188=1;break;end end break;end end end if (v188~=(2 -1)) then else local v195=0 -0 ;while true do if (v195==(1900 -(106 + 1794))) then v191={v23(),v23(),nil,nil};if (v189==(0 -0)) then local v200=114 -(4 + 110) ;local v201;local v202;while true do if (v200==(584 -(57 + 527))) then v201=1427 -(41 + 1386) ;v202=nil;v200=104 -(17 + 86) ;end if (v200==1) then while true do if (v201==(0 + 0)) then v202=0 -0 ;while true do if (v202~=(0 -0)) then else v191[3]=v23();v191[170 -(122 + 44) ]=v23();break;end end break;end end break;end end elseif (v189==(1 -0)) then v191[1208 -(902 + 303) ]=v24();elseif (v189==2) then v191[3]=v24() -((6 -4)^16) ;elseif (v189~=3) then else local v210=0 -0 ;local v211;local v212;while true do if (v210~=(2 -1)) then else while true do if (v211~=(0 + 0)) then else v212=0 + 0 ;while true do if (v212~=(0 -0)) then else v191[1693 -(1121 + 569) ]=v24() -((67 -(30 + 35))^(699 -(483 + 200))) ;v191[3 + 1 ]=v23();break;end end break;end end break;end if (v210==(1257 -(1043 + 214))) then v211=0 -0 ;v212=nil;v210=2 -1 ;end end end v195=1213 -(323 + 889) ;end if (v195~=1) then else v188=2;break;end end end if ((2 -0)~=v188) then else local v196=765 -(468 + 297) ;while true do if (v196==1) then v188=7 -4 ;break;end if (v196~=(580 -(361 + 219))) then else if (v21(v190,321 -(53 + 267) ,1)==(3 -2)) then v191[4 -2 ]=v48[v191[2 -0 ]];end if (v21(v190,1 + 1 ,415 -(15 + 398) )==(1 + 0)) then v191[3]=v48[v191[239 -(141 + 95) ]];end v196=983 -(18 + 964) ;end end end if (v188==3) then if (v21(v190,11 -8 ,3)==(2 -1)) then v191[9 -5 ]=v48[v191[4]];end v43[v177]=v191;break;end end break;end end end break;end end break;end if ((0 + 0)~=v178) then else v179=0 -0 ;v180=nil;v178=1 + 0 ;end end end for v181=1 + 0 ,v24() do v44[v181-(1 + 0) ]=v29();end v168=851 -(20 + 830) ;end if (v168~=(1 + 0)) then else v154=1;break;end end end break;end end break;end end end break;end end end if (v42==1) then local v155=126 -(116 + 10) ;local v156;local v157;while true do if (v155==(1 + 0)) then while true do if (v156==(738 -(542 + 196))) then v157=0;while true do if (v157==(1 -0)) then local v165=0 + 0 ;while true do if (v165~=0) then else for v171=1 + 0 ,v47 do local v172=0;local v173;local v174;local v175;while true do if (v172==(0 -0)) then local v183=0;while true do if (v183~=(1 + 0)) then else v172=2 -1 ;break;end if (0==v183) then v173=0 -0 ;v174=nil;v183=1;end end end if (v172==1) then v175=nil;while true do if ((0 -0)==v173) then local v184=0;local v185;while true do if (v184==0) then v185=1551 -(1126 + 425) ;while true do if (v185~=(405 -(118 + 287))) then else local v192=0 -0 ;while true do if (v192~=(1122 -(118 + 1003))) then else v185=1 -0 ;break;end if (v192~=(0 -0)) then else v174=v22();v175=nil;v192=2 -1 ;end end end if (v185~=(378 -(142 + 235))) then else v173=1;break;end end break;end end end if ((1 -0)==v173) then if (v174==(940 -(714 + 225))) then v175=v22()~=0 ;elseif (v174==2) then v175=v25();elseif (v174==(13 -10)) then v175=v26();end v48[v171]=v175;break;end end break;end end end v46[8 -5 ]=v22();v165=1 + 0 ;end if (1~=v165) then else v157=2 -0 ;break;end end end if (v157~=0) then else local v166=0;local v167;while true do if ((977 -(553 + 424))==v166) then v167=0;while true do if (v167==(1 -0)) then v157=1 + 0 ;break;end if (v167==0) then local v176=0;while true do if ((1 + 0)==v176) then v167=807 -(118 + 688) ;break;end if (v176==0) then v47=v24();v48={};v176=49 -(25 + 23) ;end end end end break;end end end if (v157~=(2 + 0)) then else v42=1 + 1 ;break;end end break;end end break;end if ((1886 -(927 + 959))~=v155) then else v156=0 + 0 ;v157=nil;v155=2 -1 ;end end end v109=2 -1 ;end if (v109==(2 -1)) then if (v42~=(0 + 0)) then else local v158=0 -0 ;local v159;while true do if (v158~=(753 -(239 + 514))) then else v159=0 + 0 ;while true do if ((733 -(16 + 716))==v159) then local v162=1329 -(797 + 532) ;while true do if (v162==(1 + 0)) then v159=4 -2 ;break;end if (v162~=0) then else v45={};v46={v43,v44,nil,v45};v162=732 -(476 + 255) ;end end end if (v159==0) then local v163=1130 -(369 + 761) ;local v164;while true do if (v163~=0) then else v164=0 + 0 ;while true do if (v164==(2 -1)) then v159=1;break;end if ((0 + 0)==v164) then local v170=0 -0 ;while true do if (v170~=(1061 -(810 + 251))) then else v43={};v44={};v170=1 -0 ;end if (v170~=(1 + 0)) then else v164=1;break;end end end end break;end end end if (v159~=(2 + 0)) then else v42=239 -(64 + 174) ;break;end end break;end end end break;end end break;end end break;end end end break;end if (v41==(1 + 1)) then local v105=0 -0 ;while true do if (v105~=(1 -0)) then else v41=3;break;end if (v105==(859 -(240 + 619))) then local v113=0 + 0 ;while true do if (v113~=(337 -(144 + 192))) then else v105=217 -(42 + 174) ;break;end if (v113==(0 + 0)) then v46=nil;v47=nil;v113=1 + 0 ;end end end end end if (v41~=(1 + 0)) then else local v106=0 + 0 ;while true do if (v106==1) then v41=1506 -(363 + 1141) ;break;end if (v106==(1580 -(1183 + 397))) then v44=nil;v45=nil;v106=2 -1 ;end end end end break;end if (v40~=(1 + 0)) then else local v98=0 + 0 ;while true do if (v98==(1975 -(1913 + 62))) then v43=nil;v44=nil;v98=1 + 0 ;end if (v98~=1) then else v40=5 -3 ;break;end end end if (v40~=(1935 -(565 + 1368))) then else local v99=0;while true do if ((1 -0)~=v99) then else v40=3;break;end if (v99==(0 + 0)) then v45=nil;v46=nil;v99=1 + 0 ;end end end if (v40~=(340 -(10 + 327))) then else v47=nil;v48=nil;v40=15 -11 ;end end break;end if (v39~=0) then else v40=1661 -(1477 + 184) ;v41=nil;v39=339 -(118 + 220) ;end if (v39==(2 -0)) then v44=nil;v45=nil;v39=3;end if (v39==(1 + 0)) then v42=nil;v43=nil;v39=2;end if (v39==3) then v46=nil;v47=nil;v39=453 -(108 + 341) ;end end end v30=nil;v18=7;end if (v18==4) then function v25()local v49=v24();local v50=v24();local v51=(1160 -(1074 + 82)) -3 ;local v52=(v21(v50,1 + 0 + 0 ,84 -64 ) * ((4 -2)^(1525 -(711 + 782)))) + v49 ;local v53=v21(v50,(1152 -626) -((2135 -(214 + 1570)) + 154) ,59 -28 );local v54=((v21(v50,501 -(118 + 152 + 199) )==(2 -1)) and  -1) or (1 + 0) ;if (v53==(1819 -(565 + 15 + (4875 -3636)))) then if (v52==(0 -0)) then return v54 * (0 + 0) ;else v53=1 + 0 ;v51=0 + 0 ;end elseif (v53==(7056 -(6464 -(990 + 465)))) then return ((v52==(0 + 0)) and (v54 * ((2 -1)/(0 + 0)))) or (v54 * NaN) ;end return v8(v54,v53-(2190 -(645 + (2248 -(1668 + 58)))) ) * (v51 + (v52/(((2418 -(512 + 114)) -(1010 + 780))^(52 + 0)))) ;end v26=nil;function v26(v55)local v56;if  not v55 then v55=v24();if (v55==(0 -0)) then return """";end end v56=v3(v16,v19,(v19 + v55) -(3 -2) );v19=v19 + v55 ;local v57={};for v70=2 -1 , #v56 do v57[v70]=v2(v1(v3(v56,v70,v70)));end return v6(v57);end v18=5;end if (v18==2) then function v22()local v58=v1(v16,v19,v19);v19=v19 + 1 ;return v58;end v23=nil;function v23()local v59=0 + 0 ;local v60;local v61;while true do if (v59==(1470 -(1269 + 30 + 170))) then return (v61 * (490 -234)) + v60 ;end if (v59==(815 -(98 + 717))) then v60,v61=v1(v16,v19,v19 + ((637 + 191) -(802 + 24)) );v19=v19 + 2 + 0 ;v59=3 -2 ;end end end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"".."",function(v62)if (v1(v62,2)==79) then v20=v0(v3(v62,1,1));return """";else local v74=v2(v0(v62,16));if v20 then local v78=0;local v79;while true do if (v78==0) then v79=v5(v74,v20);v20=nil;v78=1;end if (v78==1) then return v79;end end else return v74;end end end);v18=1;end if (v18==7) then function v30(v63,v64,v65)local v66=0;local v67;local v68;local v69;while true do if (v66==0) then v67=v63[1];v68=v63[2];v66=1;end if (1==v66) then v69=v63[3];return function(...)local v80=v67;local v81=v68;local v82=v69;local v83=v28;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12(""#"",...) -1 ;local v89={};local v90={};for v94=0,v88 do if (v94>=v82) then v86[v94-v82 ]=v87[v94 + 1 ];else v90[v94]=v87[v94 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=6) then if (v93<=2) then if (v93<=0) then local v110=0;local v111;local v112;while true do if (1==v110) then v90[v111 + 1 ]=v112;v90[v111]=v112[v92[4]];break;end if (v110==0) then v111=v92[2];v112=v90[v92[3]];v110=1;end end elseif (v93==1) then v90[v92[2]]=v65[v92[3]];else v90[v92[2]]=v92[3];end elseif (v93<=4) then if (v93==3) then v90[v92[2]]();else local v118=v92[2];local v119,v120=v83(v90[v118](v13(v90,v118 + 1 ,v92[3])));v85=(v120 + v118) -1 ;local v121=0;for v145=v118,v85 do local v146=0;while true do if (v146==0) then v121=v121 + 1 ;v90[v145]=v119[v121];break;end end end end elseif (v93>5) then do return;end else v90[v92[2]]=v92[3];end elseif (v93<=9) then if (v93<=7) then v90[v92[2]]();elseif (v93==8) then local v124=0;local v125;local v126;local v127;local v128;while true do if (v124==0) then v125=v92[2];v126,v127=v83(v90[v125](v13(v90,v125 + 1 ,v92[3])));v124=1;end if (1==v124) then v85=(v127 + v125) -1 ;v128=0;v124=2;end if (v124==2) then for v150=v125,v85 do v128=v128 + 1 ;v90[v150]=v126[v128];end break;end end else do return;end end elseif (v93<=11) then if (v93>10) then local v129=v92[2];local v130=v90[v92[3]];v90[v129 + 1 ]=v130;v90[v129]=v130[v92[4]];else v90[v92[2]]=v65[v92[3]];end elseif (v93==12) then local v136=v92[2];v90[v136]=v90[v136](v13(v90,v136 + 1 ,v85));else local v138=v92[2];v90[v138]=v90[v138](v13(v90,v138 + 1 ,v85));end v84=v84 + 1 ;end end;end end end return v30(v29(),{},v17)(...);end end end v15(""LOL!043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403483O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F6A79672O74672O792F44656C74614578706C6F6974732F6D61696E2F5363726970742E6C756100083O00120A3O00013O00120A000100023O00200B000100010003001205000300044O0004000100034O000D5O00022O00073O000100012O00093O00017O00"",v9(),...);
"
gJVka09K,02. Equal Sums Even Odd Position,veronikaaa86,Python,Sunday 6th of August 2023 02:45:32 AM CDT,"first_num = int(input())
second_num = int(input())

for i in range(first_num, second_num + 1):
    current_num_str = str(i)

    even_sum = 0
    odd_sum = 0
    for j in range(0, len(current_num_str)):
        digit = int(current_num_str[j])

        if j % 2 == 0:
            even_sum += digit
        else:
            odd_sum += digit

    if even_sum == odd_sum:
        print(current_num_str, end="" "")"
exv1YvHy,01. Number Pyramid,veronikaaa86,Python,Sunday 6th of August 2023 02:26:04 AM CDT,"n = int(input())

flag = False
current_num = 1
for row in range(1, n + 1):
    for col in range(1, row + 1):
        if current_num > n:
            flag = True
            break

        print(current_num, end="" "")

        current_num += 1
    print()
    if flag:
        break"
wTcMcg95,sitemap.xml,japhroaig,XML,Sunday 6th of August 2023 02:21:20 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<urlset xmlns=""http://www.sitemaps.org/schemas/sitemap/0.9"">
<!--  created with sitemap generator https://octopus.do  -->

    <url>
        <loc>https://www.japh.one</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-tech-08-23</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-tech-08-23/cyber-deception-strategies</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-tech-08-23/20-questions-for-securing-docker-and-kubernetes</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-tech-08-23/cyberwarfare</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/lateral-movement-detection-catching-hackers-traversing-internal-networks</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/cybersecuritys-role-in-esg-environmental-social-and-governance-metrics</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/the-evolving-role-of-the-ciso-strategic-advisor-integrator-and-visionary</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/navigating-cyber-risks-during-times-of-business-transition</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/managing-third-party-cyber-risks-across-the-extended-supply-chain</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/cybersecurity-and-hippocratic-oath</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/cyberbiohacking-the-next-security-frontier</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/journalists-dissidents-and-crypto</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/who-should-build-our-ai-guardians</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/the-cyber-risks-of-brain-computer-interface-implants</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/nuclear-command-and-control-meets-ai</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/free-speech-on-cyber-platforms</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/digital-yuan-and-bitcoin</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/severe-punishments-for-cybercrime</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/cyber-espionage</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/how-quantum-computing-will-transform-cryptocurrency-security</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/tech-whistleblowers</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/book-outline-defense-and-dark-nets</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/nation-states-digital-geneva</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/how-private-is-your-privacy-coin</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/cybercrime-and-policing</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/autonomous-weapons-systems</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/ransomware-legality</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/ai-and-the-grid</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/risk-big-data</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/continuous-monitoring-and-blue-teams</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/the-year-everything-changed</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/machine-learning-ethical-hacking</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/top-tools-for-ethical-hackers-23</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/strengthening-the-human-firewall</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/role-based-access-control</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/intel-redblue-teams</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/art-of-ethical-hacking-introduction</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/security-exposure-dbs</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/cloud-based-vuln-mgmt</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/cloud-firewalls</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/blog-technology/archive-07-2023</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation/email-list</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation/technical-papers</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation/store-illustrations-paintings</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation/store-organic-art-flowers</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation/store-books</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation/music</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation/blog-art</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/home-navigation/newsletter</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/about</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/tip-patreon</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
    <url>
        <loc>https://www.japh.one/tip-patreon/quick-story-my-journey</loc>
        <lastmod>2023-08-06</lastmod>
        <changefreq>always</changefreq>
        <priority>0.5</priority>
    </url>
</urlset>"
hQsgxfmv,"Absolute and utter pain (DeepResonance crystal determiner function, slow)",fatboychummy,Lua,Sunday 6th of August 2023 02:00:54 AM CDT,"-- These values are per 500mB, since a crystal takes 6000mB to make, we will need to divide everything by 12 later to get their actual increment in values.
---@type table<string, laser_item>
local LASER_VALUES = {}
do
  local function ilv(name, purity, strength, efficiency, max_purity, max_strength, max_efficiency)
    LASER_VALUES[name] = {
      purity = purity or 0,
      strength = strength or 0,
      efficiency = efficiency or 0,
      max_purity = max_purity or 100,
      max_strength = max_strength or 100,
      max_efficiency = max_efficiency or 100
    }
  end

  ilv(""minecraft:ender_pearl"", 2, 0, 0, 100, 0, 0)
  ilv(""minecraft:quartz"", -1, 0, 7, 0, 0, 80)
  ilv(""minecraft:gunpowder"", -5, 8, 4, 0, 70, 60)
  ilv(""minecraft:diamond"", 5, 0, 0, 100, 0, 0)
  ilv(""minecraft:glowstone_dust"", -2, 6, 3, 0, 50, 50)
  ilv(""minecraft:iron_ingot"", 0, -2, 1, 0, 0, 20)
  ilv(""rftoolsbase:dimensionalshard"", 1, 8, 8, 100, 80, 80)
  ilv(""minecraft:prismarine_shard"", 0, 3, 3, 0, 30, 30)
  ilv(""minecraft:gold_ingot"", 0, -1, 1, 0, 0, 30)
  ilv(""minecraft:prismarine_crystals"", 0, 4, 4, 0, 35, 35)
  ilv(""minecraft:coal"", -1, -10, 0, 0, 0, 0)             -- Not sure why you'd want to use coal.
  ilv(""minecraft:nether_star"", -60, 90, 90, 0, 100, 100) -- Very powerful, but also requires a repurification.
  ilv(""minecraft:nether_wart"", -3, 2, -2, 0, 35, 1)
  ilv(""minecraft:redstone"", -1, 5, 0, 0, 60, 0)
  ilv(""minecraft:slime_ball"", 0, 0, -10, 0, 0, 1) -- Not sure why you'd want to use slime balls.
  ilv(""minecraft:emerald"", 8, 0, 0, 100, 0, 0)    -- May be used as a subsitute to repurification?
  ilv(""minecraft:blaze_powder"", -6, 5, 5, 0, 70, 70)
  ilv(""minecraft:ghast_tear"", -20, 25, 15, 0, 100, 100)
  ilv(""minecraft:snowball"", 1, 0, 1, 30, 0, 40)
end

--- This function will bruteforce the best combination of items to use in the lasers.
--- It will return a table of items to use, and the amount of items to use, and in what order.
--- This function only needs to care about strength and efficiency, though we must note purity CANNOT go below 1%
--- This function will also take into account the amount of items we have in the storage chest.
--- We will likely need to use some heavy recursion here.
---@param current laser_list? The current list of items we are using, along with the current strength, efficiency, and purity.
---@param item_list short_laser_item[]? The list of items we can use.
---@return table<integer, string> list The best list of items found.
---@return integer strength The strength of the best list of items found.
---@return integer efficiency The efficiency of the best list of items found.
---@return integer purity The purity of the best list of items found.
local function best_item_combo(current, item_list)
  local x = not current
  -- Initial purity (after leaving the purifier) is 85%, initial strength is 10%, initial efficiency is 10%.
  current = current or { list = {}, used = {}, strength = 10, efficiency = 10, purity = 85 }

  if not item_list then
    -- We will need to initialize the list of items available, searching the storage chest and adding items as we see them.
    -- We should collapse all similar items so all we have are the item names and the amount of items.
    item_list = {}

    local storage = config.peripherals.chests.storage
    local list = smn.call(storage, ""list"")
    for _, item in pairs(list) do
      local found = false
      for _, item2 in ipairs(item_list) do
        if item.name == item2.name then
          item2.count = item2.count + item.count
          found = true
          break
        end
      end

      if not found then
        table.insert(item_list, { name = item.name, count = item.count })
      end
    end
  end

  -- We will need to loop through the item list, and for each item, we will need to add it to the current list, then call this function again.
  -- We will need to keep track of the best item list, and the best strength and efficiency.
  local best_strength = current.strength
  local best_efficiency = current.efficiency
  local best_purity = current.purity
  local best_list = {}

  for _, item in ipairs(item_list) do
    if x then print(item.name) end
    -- Check how much of this item remains
    local remaining = item.count - (current.used[item.name] or 0)

    -- If there's items remaining, and this is a laserable item...
    if remaining > 0 and LASER_VALUES[item.name] then
      -- Add this item to both lists.
      table.insert(current.list, item.name)
      current.used[item.name] = (current.used[item.name] or 0) + 1

      -- Calculate the new strength, efficiency, and purity.
      local laser_value = LASER_VALUES[item.name]
      local new_strength, new_efficiency, new_purity

      -- If the values are above zero, we cannot go above the maximum.
      -- If the values are below or equal to zero, we can go down essentially forever (to a minimum of zero)
      -- We will also hard-cap each side at 100 and 0, just to ensure nothing goes crazy anywhere.

      if laser_value.strength > 0 then
        new_strength = math.min(current.strength + LASER_VALUES[item.name].strength / 12, laser_value.max_strength, 100)
      else
        new_strength = math.max(current.strength + LASER_VALUES[item.name].strength / 12, laser_value.max_strength, 0)
      end

      if laser_value.efficiency > 0 then
        new_efficiency = math.min(current.efficiency + LASER_VALUES[item.name].efficiency / 12, laser_value.max_efficiency, 100)
      else
        new_efficiency = math.max(current.efficiency + LASER_VALUES[item.name].efficiency / 12, laser_value.max_efficiency, 0)
      end

      if laser_value.purity > 0 then
        new_purity = math.min(current.purity + LASER_VALUES[item.name].purity / 12, laser_value.max_purity, 100)
      else
        new_purity = math.max(current.purity + LASER_VALUES[item.name].purity / 12, laser_value.max_purity, 0)
      end

      -- If the new strength and efficiency are better than the best, we will need to update the best.
      -- However, if the purity is below or equal to 1%, we will discard this attempt.
      if new_purity > 1 and new_strength > best_strength and new_efficiency > best_efficiency then
        -- If the new strength and efficiency are better than the best, we will need to update the best.
        best_strength = new_strength
        best_efficiency = new_efficiency
        best_purity = new_purity
        best_list = deep_copy(current.list)
      end

      local new_current = deep_copy(current)
      new_current.strength = new_strength
      new_current.efficiency = new_efficiency
      new_current.purity = new_purity

      -- Now we will recurse, with the new values and list.
      local best_recursed_list, best_recursed_strength, best_recursed_efficiency, best_recursed_purity = best_item_combo(new_current, item_list)

      -- Then we will need to check if the recursed values are better than the current best.
      if best_recursed_purity > 1 and best_recursed_strength > best_strength and best_recursed_efficiency > best_efficiency then
        best_strength = best_recursed_strength
        best_efficiency = best_recursed_efficiency
        best_purity = best_recursed_purity
        best_list = best_recursed_list
      end

      -- Now we will need to remove the item from the current list.
      table.remove(current.list, #current.list)
      current.used[item.name] = current.used[item.name] - 1
    end -- else we go to the next item.
  end

  return best_list, best_strength, best_efficiency, best_purity
end"
P9DbUbV7,ガチャ　試作　2,sirayasiki,Java,Sunday 6th of August 2023 01:22:50 AM CDT,"command /invtest:
	trigger:
		set {_inv} to chest with 4 row named ""&6&lテストインベントリ""
		loop {testinv::%player%::*}:
			set slot loop-index parsed as number - 1 of {_inv} to loop-value
		open {_inv} to player

on inventory close:
	if name of event-inventory is ""&6&lテストインベントリ"":
		set {_setnum} to 1
		loop 36 times:
			set {testinv::%player%::%{_setnum}%} to slot loop-number - 1 of event-inventory
			if {testinv::%player%::%{_setnum}%} is not air:
				add 1 to {_setnum}
			if {testinv::%player%::%{_setnum}%} is air:
				delete {testinv::%player%::%{_setnum}%}
on click:
	if player's tool is stone named ""bb"":
		send ""%{testinv::%player%::*}%"""
FVAj62ty,Nigerian scammers [6-8-1/2023],bombaires,HTML,Sunday 6th of August 2023 12:38:38 AM CDT,"<a href=""mailto:m_david87@aol.com"">m_david87@aol.com</a>
<a href=""mailto:ezecashbig2016@gmail.com"">ezecashbig2016@gmail.com</a>
<a href=""mailto:ez.ecas.h.big20.16@gmail.com"">ez.ecas.h.big20.16@gmail.com</a>
<a href=""mailto:e.z.ecas.h.b.ig.2.01.6@gmail.com"">e.z.ecas.h.b.ig.2.01.6@gmail.com</a>
<a href=""mailto:ez.eca.shb.i.g.2.01.6@gmail.com"">ez.eca.shb.i.g.2.01.6@gmail.com</a>
<a href=""mailto:e.z.e.c.ashbi.g.20.1.6@gmail.com"">e.z.e.c.ashbi.g.20.1.6@gmail.com</a>
<a href=""mailto:ez.e.ca.s.hbig.2.01.6@gmail.com"">ez.e.ca.s.hbig.2.01.6@gmail.com</a>
<a href=""mailto:ezec.as.h.big2.0.1.6@gmail.com"">ezec.as.h.big2.0.1.6@gmail.com</a>
<a href=""mailto:e.z.ecas.hb.ig.20.1.6@gmail.com"">e.z.ecas.hb.ig.20.1.6@gmail.com</a>
<a href=""mailto:e.z.ec.a.s.hbig.2.0.16@gmail.com"">e.z.ec.a.s.hbig.2.0.16@gmail.com</a>
<a href=""mailto:ez.e.cas.hbig20.1.6@gmail.com"">ez.e.cas.hbig20.1.6@gmail.com</a>
<a href=""mailto:eze.c.ash.b.i.g2.016@gmail.com"">eze.c.ash.b.i.g2.016@gmail.com</a>
<a href=""mailto:ezeca.s.hbig.2016@gmail.com"">ezeca.s.hbig.2016@gmail.com</a>
<a href=""mailto:e.z.e.c.ash.b.i.g.2.0.1.6@gmail.com"">e.z.e.c.ash.b.i.g.2.0.1.6@gmail.com</a>
<a href=""mailto:e.z.e.c.a.s.hb.i.g.20.16@gmail.com"">e.z.e.c.a.s.hb.i.g.20.16@gmail.com</a>
<a href=""mailto:e.ze.ca.sh.big20.1.6@gmail.com"">e.ze.ca.sh.big20.1.6@gmail.com</a>
<a href=""mailto:e.zec.a.shb.ig2.01.6@gmail.com"">e.zec.a.shb.ig2.01.6@gmail.com</a>
<a href=""mailto:e.z.e.c.a.sh.big.2016@gmail.com"">e.z.e.c.a.sh.big.2016@gmail.com</a>
<a href=""mailto:e.z.e.c.a.s.h.b.i.g2.01.6@gmail.com"">e.z.e.c.a.s.h.b.i.g2.01.6@gmail.com</a>
<a href=""mailto:e.z.e.c.ashbig201.6@gmail.com"">e.z.e.c.ashbig201.6@gmail.com</a>
<a href=""mailto:ez.eca.s.h.b.i.g.201.6@gmail.com"">ez.eca.s.h.b.i.g.201.6@gmail.com</a>
<a href=""mailto:eze.c.as.h.b.ig20.1.6@gmail.com"">eze.c.as.h.b.ig20.1.6@gmail.com</a>
<a href=""mailto:e.zecashb.i.g20.16@gmail.com"">e.zecashb.i.g20.16@gmail.com</a>
<a href=""mailto:e.zec.a.s.hb.i.g.2.0.1.6@gmail.com"">e.zec.a.s.hb.i.g.2.0.1.6@gmail.com</a>
<a href=""mailto:ezeca.sh.bi.g.20.16@gmail.com"">ezeca.sh.bi.g.20.16@gmail.com</a>
<a href=""mailto:e.zec.a.s.h.b.i.g2.016@gmail.com"">e.zec.a.s.h.b.i.g2.016@gmail.com</a>
<a href=""mailto:e.z.ecashbig2.0.16@gmail.com"">e.z.ecashbig2.0.16@gmail.com</a>
<a href=""mailto:e.ze.c.a.s.hbig20.16@gmail.com"">e.ze.c.a.s.hbig20.16@gmail.com</a>
<a href=""mailto:ezec.a.s.hb.i.g.20.1.6@gmail.com"">ezec.a.s.hb.i.g.20.1.6@gmail.com</a>
<a href=""mailto:e.z.e.c.a.sh.b.ig.2.0.1.6@gmail.com"">e.z.e.c.a.sh.b.ig.2.0.1.6@gmail.com</a>
<a href=""mailto:e.ze.c.as.h.b.i.g2.01.6@gmail.com"">e.ze.c.as.h.b.i.g2.01.6@gmail.com</a>
<a href=""mailto:e.zeca.s.h.b.ig.201.6@gmail.com"">e.zeca.s.h.b.ig.201.6@gmail.com</a>
<a href=""mailto:e.z.ec.as.h.big.201.6@gmail.com"">e.z.ec.as.h.big.201.6@gmail.com</a>
<a href=""mailto:e.z.e.c.ash.bi.g.20.16@gmail.com"">e.z.e.c.ash.bi.g.20.16@gmail.com</a>
<a href=""mailto:ez.e.c.a.s.h.b.ig.2.01.6@gmail.com"">ez.e.c.a.s.h.b.ig.2.01.6@gmail.com</a>
<a href=""mailto:e.z.eca.sh.bi.g.20.16@gmail.com"">e.z.eca.sh.bi.g.20.16@gmail.com</a>
<a href=""mailto:e.ze.ca.shbig2.0.16@gmail.com"">e.ze.ca.shbig2.0.16@gmail.com</a>
<a href=""mailto:eze.c.ashb.i.g.2016@gmail.com"">eze.c.ashb.i.g.2016@gmail.com</a>
<a href=""mailto:e.z.e.cashbig.20.16@gmail.com"">e.z.e.cashbig.20.16@gmail.com</a>
<a href=""mailto:ez.e.c.as.h.b.ig2.0.1.6@gmail.com"">ez.e.c.as.h.b.ig2.0.1.6@gmail.com</a>
<a href=""mailto:eze.cas.hbig.2.016@gmail.com"">eze.cas.hbig.2.016@gmail.com</a>
<a href=""mailto:e.z.e.c.a.sh.bi.g2.0.16@gmail.com"">e.z.e.c.a.sh.bi.g2.0.16@gmail.com</a>
<a href=""mailto:ezec.a.sh.big201.6@gmail.com"">ezec.a.sh.big201.6@gmail.com</a>
<a href=""mailto:e.z.ec.a.s.h.b.ig.2016@gmail.com"">e.z.ec.a.s.h.b.ig.2016@gmail.com</a>
<a href=""mailto:e.z.e.c.as.h.b.ig.20.16@gmail.com"">e.z.e.c.as.h.b.ig.20.16@gmail.com</a>
<a href=""mailto:e.z.e.cas.hbig.2016@gmail.com"">e.z.e.cas.hbig.2016@gmail.com</a>
<a href=""mailto:ezecash.big.201.6@gmail.com"">ezecash.big.201.6@gmail.com</a>
<a href=""mailto:e.z.ec.ashb.ig.2.0.16@gmail.com"">e.z.ec.ashb.ig.2.0.16@gmail.com</a>
<a href=""mailto:e.ze.ca.shbi.g.2.0.16@gmail.com"">e.ze.ca.shbi.g.2.0.16@gmail.com</a>
<a href=""mailto:e.zec.a.s.h.big2016@gmail.com"">e.zec.a.s.h.big2016@gmail.com</a>
<a href=""mailto:ez.ec.ash.big.2.016@gmail.com"">ez.ec.ash.big.2.016@gmail.com</a>
<a href=""mailto:e.zecas.hbig.2.016@gmail.com"">e.zecas.hbig.2.016@gmail.com</a>
<a href=""mailto:e.zec.a.s.h.b.ig.20.1.6@gmail.com"">e.zec.a.s.h.b.ig.20.1.6@gmail.com</a>
<a href=""mailto:e.z.ec.ash.b.ig.2.01.6@gmail.com"">e.z.ec.ash.b.ig.2.01.6@gmail.com</a>
<a href=""mailto:ez.eca.shb.ig20.16@gmail.com"">ez.eca.shb.ig20.16@gmail.com</a>
<a href=""mailto:e.z.e.ca.sh.b.ig20.16@gmail.com"">e.z.e.ca.sh.b.ig20.16@gmail.com</a>
<a href=""mailto:ezecas.h.b.ig2.016@gmail.com"">ezecas.h.b.ig2.016@gmail.com</a>
<a href=""mailto:e.z.eca.shbig2.016@gmail.com"">e.z.eca.shbig2.016@gmail.com</a>
<a href=""mailto:e.z.e.ca.s.hbig.2.016@gmail.com"">e.z.e.ca.s.hbig.2.016@gmail.com</a>
<a href=""mailto:ez.e.c.a.sh.big.2.0.16@gmail.com"">ez.e.c.a.sh.big.2.0.16@gmail.com</a>
<a href=""mailto:e.zec.a.s.hbi.g2016@gmail.com"">e.zec.a.s.hbi.g2016@gmail.com</a>
<a href=""mailto:ez.e.c.ashb.i.g201.6@gmail.com"">ez.e.c.ashb.i.g201.6@gmail.com</a>
<a href=""mailto:e.z.ec.ash.bi.g.2.0.16@gmail.com"">e.z.ec.ash.bi.g.2.0.16@gmail.com</a>
<a href=""mailto:ez.ecash.bi.g2.01.6@gmail.com"">ez.ecash.bi.g2.01.6@gmail.com</a>
<a href=""mailto:e.zeca.s.hb.i.g201.6@gmail.com"">e.zeca.s.hb.i.g201.6@gmail.com</a>
<a href=""mailto:e.z.e.c.as.hbig.2016@gmail.com"">e.z.e.c.as.hbig.2016@gmail.com</a>
<a href=""mailto:e.ze.c.a.s.h.b.i.g2.0.16@gmail.com"">e.ze.c.a.s.h.b.i.g2.0.16@gmail.com</a>
<a href=""mailto:ez.ecash.bi.g.20.1.6@gmail.com"">ez.ecash.bi.g.20.1.6@gmail.com</a>
<a href=""mailto:eze.ca.sh.big20.16@gmail.com"">eze.ca.sh.big20.16@gmail.com</a>
<a href=""mailto:eze.c.ash.b.i.g.2016@gmail.com"">eze.c.ash.b.i.g.2016@gmail.com</a>
<a href=""mailto:e.z.eca.s.hbi.g.20.16@gmail.com"">e.z.eca.s.hbi.g.20.16@gmail.com</a>
<a href=""mailto:e.z.e.c.a.sh.b.ig2016@gmail.com"">e.z.e.c.a.sh.b.ig2016@gmail.com</a>
<a href=""mailto:eze.cas.hbi.g20.1.6@gmail.com"">eze.cas.hbi.g20.1.6@gmail.com</a>
<a href=""mailto:ez.ec.a.sh.big.2.0.1.6@gmail.com"">ez.ec.a.sh.big.2.0.1.6@gmail.com</a>
<a href=""mailto:e.zeca.s.h.bi.g201.6@gmail.com"">e.zeca.s.h.bi.g201.6@gmail.com</a>
<a href=""mailto:e.z.eca.s.hbig.2.01.6@gmail.com"">e.z.eca.s.hbig.2.01.6@gmail.com</a>
<a href=""mailto:ez.e.c.a.sh.big.2016@gmail.com"">ez.e.c.a.sh.big.2016@gmail.com</a>
<a href=""mailto:ez.ecas.h.big2016@gmail.com"">ez.ecas.h.big2016@gmail.com</a>
<a href=""mailto:ez.ec.as.hbig2.0.1.6@gmail.com"">ez.ec.as.hbig2.0.1.6@gmail.com</a>
<a href=""mailto:ezec.as.hbi.g20.16@gmail.com"">ezec.as.hbi.g20.16@gmail.com</a>
<a href=""mailto:e.zecashbi.g20.16@gmail.com"">e.zecashbi.g20.16@gmail.com</a>
<a href=""mailto:e.z.e.ca.s.hb.ig.2016@gmail.com"">e.z.e.ca.s.hb.ig.2016@gmail.com</a>
<a href=""mailto:ez.e.cash.big20.16@gmail.com"">ez.e.cash.big20.16@gmail.com</a>
<a href=""mailto:e.ze.ca.s.h.big.2.016@gmail.com"">e.ze.ca.s.h.big.2.016@gmail.com</a>
<a href=""mailto:eze.ca.sh.b.i.g.2.0.16@gmail.com"">eze.ca.sh.b.i.g.2.0.16@gmail.com</a>
<a href=""mailto:e.z.ec.a.shbig.2.0.16@gmail.com"">e.z.ec.a.shbig.2.0.16@gmail.com</a>
<a href=""mailto:ezeca.shb.i.g.2.016@gmail.com"">ezeca.shb.i.g.2.016@gmail.com</a>
<a href=""mailto:ezec.a.s.h.b.ig20.1.6@gmail.com"">ezec.a.s.h.b.ig20.1.6@gmail.com</a>
<a href=""mailto:ezec.ash.big2.01.6@gmail.com"">ezec.ash.big2.01.6@gmail.com</a>
<a href=""mailto:e.z.e.cas.hb.ig2.0.1.6@gmail.com"">e.z.e.cas.hb.ig2.0.1.6@gmail.com</a>
<a href=""mailto:eze.c.a.s.hbig201.6@gmail.com"">eze.c.a.s.hbig201.6@gmail.com</a>
<a href=""mailto:e.z.e.cas.h.bi.g2.0.16@gmail.com"">e.z.e.cas.h.bi.g2.0.16@gmail.com</a>
<a href=""mailto:e.z.ec.ash.big.20.1.6@gmail.com"">e.z.ec.ash.big.20.1.6@gmail.com</a>
<a href=""mailto:ezecas.h.b.ig201.6@gmail.com"">ezecas.h.b.ig201.6@gmail.com</a>
<a href=""mailto:ezeca.s.h.bi.g.2.016@gmail.com"">ezeca.s.h.bi.g.2.016@gmail.com</a>
<a href=""mailto:ez.ec.a.shb.ig.201.6@gmail.com"">ez.ec.a.shb.ig.201.6@gmail.com</a>
<a href=""mailto:e.zec.a.sh.bi.g.20.1.6@gmail.com"">e.zec.a.sh.bi.g.20.1.6@gmail.com</a>
<a href=""mailto:e.zec.as.hbi.g.2.01.6@gmail.com"">e.zec.as.hbi.g.2.01.6@gmail.com</a>
<a href=""mailto:ez.e.ca.sh.big201.6@gmail.com"">ez.e.ca.sh.big201.6@gmail.com</a>
<a href=""mailto:e.z.e.c.as.hb.ig.2.016@gmail.com"">e.z.e.c.as.hb.ig.2.016@gmail.com</a>
<a href=""mailto:e.zeca.s.h.big2016@gmail.com"">e.zeca.s.h.big2016@gmail.com</a>
<a href=""mailto:e.z.e.c.as.hb.ig2.016@gmail.com"">e.z.e.c.as.hb.ig2.016@gmail.com</a>
<a href=""mailto:e.z.ec.a.shb.ig.20.1.6@gmail.com"">e.z.ec.a.shb.ig.20.1.6@gmail.com</a>
<a href=""mailto:eze.c.as.hb.ig.2.01.6@gmail.com"">eze.c.as.hb.ig.2.01.6@gmail.com</a>
<a href=""mailto:ez.eca.shb.ig.20.16@gmail.com"">ez.eca.shb.ig.20.16@gmail.com</a>
<a href=""mailto:ez.ecashbi.g.2.0.1.6@gmail.com"">ez.ecashbi.g.2.0.1.6@gmail.com</a>
<a href=""mailto:ezec.a.sh.bi.g.2016@gmail.com"">ezec.a.sh.bi.g.2016@gmail.com</a>
<a href=""mailto:eze.cash.b.ig.201.6@gmail.com"">eze.cash.b.ig.201.6@gmail.com</a>
<a href=""mailto:e.z.e.cash.b.ig.2.016@gmail.com"">e.z.e.cash.b.ig.2.016@gmail.com</a>
<a href=""mailto:ezec.a.s.hbi.g.20.1.6@gmail.com"">ezec.a.s.hbi.g.20.1.6@gmail.com</a>
<a href=""mailto:e.z.ecash.big.2016@gmail.com"">e.z.ecash.big.2016@gmail.com</a>
<a href=""mailto:e.ze.cashbi.g20.16@gmail.com"">e.ze.cashbi.g20.16@gmail.com</a>
<a href=""mailto:e.zec.a.s.h.bi.g.2.0.1.6@gmail.com"">e.zec.a.s.h.bi.g.2.0.1.6@gmail.com</a>
<a href=""mailto:ezec.a.s.h.b.ig.2.0.1.6@gmail.com"">ezec.a.s.h.b.ig.2.0.1.6@gmail.com</a>
<a href=""mailto:e.z.e.c.a.sh.big2.01.6@gmail.com"">e.z.e.c.a.sh.big2.01.6@gmail.com</a>
<a href=""mailto:e.z.ec.as.hbig.2.016@gmail.com"">e.z.ec.as.hbig.2.016@gmail.com</a>
<a href=""mailto:ez.ec.ashb.ig.2.0.16@gmail.com"">ez.ec.ashb.ig.2.0.16@gmail.com</a>
<a href=""mailto:ezec.ash.b.i.g.2.016@gmail.com"">ezec.ash.b.i.g.2.016@gmail.com</a>
<a href=""mailto:ez.e.c.a.sh.big2.0.16@gmail.com"">ez.e.c.a.sh.big2.0.16@gmail.com</a>
<a href=""mailto:e.ze.ca.s.h.b.i.g.2.0.16@gmail.com"">e.ze.ca.s.h.b.i.g.2.0.16@gmail.com</a>
<a href=""mailto:e.z.e.cashbig.2016@gmail.com"">e.z.e.cashbig.2016@gmail.com</a>
<a href=""mailto:e.zec.a.s.h.b.ig20.1.6@gmail.com"">e.zec.a.s.h.b.ig20.1.6@gmail.com</a>
<a href=""mailto:e.z.ec.as.hb.i.g201.6@gmail.com"">e.z.ec.as.hb.i.g201.6@gmail.com</a>
<a href=""mailto:e.zecas.h.big2.0.1.6@gmail.com"">e.zecas.h.big2.0.1.6@gmail.com</a>
<a href=""mailto:ez.e.ca.s.h.big.20.16@gmail.com"">ez.e.ca.s.h.big.20.16@gmail.com</a>
<a href=""mailto:ez.ec.a.s.h.b.ig.2.0.16@gmail.com"">ez.ec.a.s.h.b.ig.2.0.16@gmail.com</a>
<a href=""mailto:e.zec.ashbig.201.6@gmail.com"">e.zec.ashbig.201.6@gmail.com</a>
<a href=""mailto:ez.e.c.as.h.b.i.g.2.0.1.6@gmail.com"">ez.e.c.as.h.b.i.g.2.0.1.6@gmail.com</a>
<a href=""mailto:ez.e.cas.hbi.g201.6@gmail.com"">ez.e.cas.hbi.g201.6@gmail.com</a>
<a href=""mailto:ez.eca.shbi.g.2016@gmail.com"">ez.eca.shbi.g.2016@gmail.com</a>
<a href=""mailto:e.z.eca.s.hb.i.g2.0.1.6@gmail.com"">e.z.eca.s.hb.i.g2.0.1.6@gmail.com</a>
<a href=""mailto:e.z.ec.a.s.h.b.i.g.201.6@gmail.com"">e.z.ec.a.s.h.b.i.g.201.6@gmail.com</a>
<a href=""mailto:e.z.ecas.hbi.g201.6@gmail.com"">e.z.ecas.hbi.g201.6@gmail.com</a>
<a href=""mailto:ez.ec.a.s.hbig.20.16@gmail.com"">ez.ec.a.s.hbig.20.16@gmail.com</a>
<a href=""mailto:e.z.ecas.h.b.i.g.20.1.6@gmail.com"">e.z.ecas.h.b.i.g.20.1.6@gmail.com</a>
<a href=""mailto:e.zeca.s.hbi.g20.16@gmail.com"">e.zeca.s.hbi.g20.16@gmail.com</a>
<a href=""mailto:ez.e.c.ashbi.g.20.1.6@gmail.com"">ez.e.c.ashbi.g.20.1.6@gmail.com</a>
<a href=""mailto:ezeca.shbig.2016@gmail.com"">ezeca.shbig.2016@gmail.com</a>
<a href=""mailto:ezeca.s.hbig2.0.1.6@gmail.com"">ezeca.s.hbig2.0.1.6@gmail.com</a>
<a href=""mailto:e.z.ec.as.h.b.ig2.01.6@gmail.com"">e.z.ec.as.h.b.ig2.01.6@gmail.com</a>
<a href=""mailto:e.ze.ca.s.hb.i.g.2.01.6@gmail.com"">e.ze.ca.s.hb.i.g.2.01.6@gmail.com</a>
<a href=""mailto:ezecashbig.201.6@gmail.com"">ezecashbig.201.6@gmail.com</a>
<a href=""mailto:eze.cash.bi.g.201.6@gmail.com"">eze.cash.bi.g.201.6@gmail.com</a>
<a href=""mailto:ez.ecashbi.g.2.01.6@gmail.com"">ez.ecashbi.g.2.01.6@gmail.com</a>
<a href=""mailto:ez.eca.shbig.2.016@gmail.com"">ez.eca.shbig.2.016@gmail.com</a>
<a href=""mailto:ez.e.c.a.sh.bi.g201.6@gmail.com"">ez.e.c.a.sh.bi.g201.6@gmail.com</a>
<a href=""mailto:e.zecas.hbi.g20.1.6@gmail.com"">e.zecas.hbi.g20.1.6@gmail.com</a>
<a href=""mailto:e.z.ec.a.shb.i.g2.0.1.6@gmail.com"">e.z.ec.a.shb.i.g2.0.1.6@gmail.com</a>
<a href=""mailto:eze.c.ash.big.201.6@gmail.com"">eze.c.ash.big.201.6@gmail.com</a>
<a href=""mailto:ez.ecas.h.b.ig.20.16@gmail.com"">ez.ecas.h.b.ig.20.16@gmail.com</a>
<a href=""mailto:ez.ec.a.s.h.big2016@gmail.com"">ez.ec.a.s.h.big2016@gmail.com</a>
<a href=""mailto:e.z.ec.a.sh.bi.g.201.6@gmail.com"">e.z.ec.a.sh.bi.g.201.6@gmail.com</a>
<a href=""mailto:eze.c.a.shb.ig2.0.1.6@gmail.com"">eze.c.a.shb.ig2.0.1.6@gmail.com</a>
<a href=""mailto:e.z.ec.a.s.h.bi.g.2.016@gmail.com"">e.z.ec.a.s.h.bi.g.2.016@gmail.com</a>
<a href=""mailto:e.ze.c.a.s.h.b.i.g2.016@gmail.com"">e.ze.c.a.s.h.b.i.g2.016@gmail.com</a>
<a href=""mailto:ez.e.c.a.shbig.2.016@gmail.com"">ez.e.c.a.shbig.2.016@gmail.com</a>
<a href=""mailto:e.ze.c.ashbi.g20.1.6@gmail.com"">e.ze.c.ashbi.g20.1.6@gmail.com</a>
<a href=""mailto:e.z.ec.a.sh.bi.g2.016@gmail.com"">e.z.ec.a.sh.bi.g2.016@gmail.com</a>
<a href=""mailto:ez.e.cash.bi.g.2.0.16@gmail.com"">ez.e.cash.bi.g.2.0.16@gmail.com</a>
<a href=""mailto:e.zec.as.hb.i.g2.016@gmail.com"">e.zec.as.hb.i.g2.016@gmail.com</a>
<a href=""mailto:e.ze.ca.shb.i.g2.016@gmail.com"">e.ze.ca.shb.i.g2.016@gmail.com</a>
<a href=""mailto:e.zecas.hb.i.g2016@gmail.com"">e.zecas.hb.i.g2016@gmail.com</a>
<a href=""mailto:e.z.e.c.a.s.hbi.g2.0.16@gmail.com"">e.z.e.c.a.s.hbi.g2.0.16@gmail.com</a>
<a href=""mailto:eze.cas.hbi.g2.0.16@gmail.com"">eze.cas.hbi.g2.0.16@gmail.com</a>
<a href=""mailto:e.zeca.shb.ig.20.1.6@gmail.com"">e.zeca.shb.ig.20.1.6@gmail.com</a>
<a href=""mailto:e.z.e.cashb.i.g.2016@gmail.com"">e.z.e.cashb.i.g.2016@gmail.com</a>
<a href=""mailto:e.z.ecas.h.big.20.16@gmail.com"">e.z.ecas.h.big.20.16@gmail.com</a>
<a href=""mailto:e.ze.cas.h.b.ig2.0.16@gmail.com"">e.ze.cas.h.b.ig2.0.16@gmail.com</a>
<a href=""mailto:eze.c.a.shb.i.g.20.1.6@gmail.com"">eze.c.a.shb.i.g.20.1.6@gmail.com</a>
<a href=""mailto:ezeca.s.hb.i.g.2.0.16@gmail.com"">ezeca.s.hb.i.g.2.0.16@gmail.com</a>
<a href=""mailto:ez.e.c.a.s.hbi.g2.016@gmail.com"">ez.e.c.a.s.hbi.g2.016@gmail.com</a>
<a href=""mailto:e.ze.cashbig201.6@gmail.com"">e.ze.cashbig201.6@gmail.com</a>
<a href=""mailto:e.zec.a.sh.b.ig20.16@gmail.com"">e.zec.a.sh.b.ig20.16@gmail.com</a>
<a href=""mailto:e.z.ec.ashb.i.g2.0.16@gmail.com"">e.z.ec.ashb.i.g2.0.16@gmail.com</a>
<a href=""mailto:eze.cas.hb.i.g.20.1.6@gmail.com"">eze.cas.hb.i.g.20.1.6@gmail.com</a>
<a href=""mailto:e.ze.c.a.sh.bi.g.2016@gmail.com"">e.ze.c.a.sh.bi.g.2016@gmail.com</a>
<a href=""mailto:e.ze.c.a.shb.ig201.6@gmail.com"">e.ze.c.a.shb.ig201.6@gmail.com</a>
<a href=""mailto:ez.e.ca.s.hb.ig.2016@gmail.com"">ez.e.ca.s.hb.ig.2016@gmail.com</a>
<a href=""mailto:e.z.e.cash.bi.g.2.0.16@gmail.com"">e.z.e.cash.bi.g.2.0.16@gmail.com</a>
<a href=""mailto:e.z.e.ca.shb.i.g2.0.16@gmail.com"">e.z.e.ca.shb.i.g2.0.16@gmail.com</a>
<a href=""mailto:ez.ec.ash.bi.g2016@gmail.com"">ez.ec.ash.bi.g2016@gmail.com</a>
<a href=""mailto:ezec.a.s.h.b.ig2016@gmail.com"">ezec.a.s.h.b.ig2016@gmail.com</a>
<a href=""mailto:eze.ca.shb.ig2.01.6@gmail.com"">eze.ca.shb.ig2.01.6@gmail.com</a>
<a href=""mailto:eze.c.a.sh.b.i.g2.016@gmail.com"">eze.c.a.sh.b.i.g2.016@gmail.com</a>
<a href=""mailto:e.ze.cas.hbi.g201.6@gmail.com"">e.ze.cas.hbi.g201.6@gmail.com</a>
<a href=""mailto:e.ze.c.a.shb.i.g.2.016@gmail.com"">e.ze.c.a.shb.i.g.2.016@gmail.com</a>
<a href=""mailto:e.zeca.s.h.b.i.g20.1.6@gmail.com"">e.zeca.s.h.b.i.g20.1.6@gmail.com</a>
<a href=""mailto:ez.ec.a.shbig201.6@gmail.com"">ez.ec.a.shbig201.6@gmail.com</a>
<a href=""mailto:e.z.ecashbi.g2016@gmail.com"">e.z.ecashbi.g2016@gmail.com</a>
<a href=""mailto:e.zec.as.hbig20.16@gmail.com"">e.zec.as.hbig20.16@gmail.com</a>
<a href=""mailto:e.ze.ca.s.h.b.ig.20.16@gmail.com"">e.ze.ca.s.h.b.ig.20.16@gmail.com</a>
<a href=""mailto:e.ze.ca.s.hb.ig2.0.16@gmail.com"">e.ze.ca.s.hb.ig2.0.16@gmail.com</a>
<a href=""mailto:e.z.eca.shb.ig.20.16@gmail.com"">e.z.eca.shb.ig.20.16@gmail.com</a>
<a href=""mailto:ez.ec.as.h.bi.g.20.1.6@gmail.com"">ez.ec.as.h.bi.g.20.1.6@gmail.com</a>
<a href=""mailto:e.z.e.c.as.hb.ig.20.16@gmail.com"">e.z.e.c.as.hb.ig.20.16@gmail.com</a>
<a href=""mailto:ez.e.cas.hb.i.g.2.01.6@gmail.com"">ez.e.cas.hb.i.g.2.01.6@gmail.com</a>
<a href=""mailto:e.ze.ca.s.hb.ig20.1.6@gmail.com"">e.ze.ca.s.hb.ig20.1.6@gmail.com</a>
<a href=""mailto:e.ze.c.as.hb.ig2.016@gmail.com"">e.ze.c.as.hb.ig2.016@gmail.com</a>
<a href=""mailto:e.z.e.c.a.sh.b.i.g.2.0.1.6@gmail.com"">e.z.e.c.a.sh.b.i.g.2.0.1.6@gmail.com</a>
<a href=""mailto:ezeca.shbi.g.2.01.6@gmail.com"">ezeca.shbi.g.2.01.6@gmail.com</a>
<a href=""mailto:eze.cas.hbig2.0.16@gmail.com"">eze.cas.hbig2.0.16@gmail.com</a>
<a href=""mailto:e.z.e.ca.s.h.bi.g.2.0.1.6@gmail.com"">e.z.e.ca.s.h.bi.g.2.0.1.6@gmail.com</a>
<a href=""mailto:hildelagerquist@gmail.com"">hildelagerquist@gmail.com</a>
<a href=""mailto:h.i.lde.l.ag.erquist@gmail.com"">h.i.lde.l.ag.erquist@gmail.com</a>
<a href=""mailto:hi.ld.elag.e.r.q.u.i.s.t@gmail.com"">hi.ld.elag.e.r.q.u.i.s.t@gmail.com</a>
<a href=""mailto:hildela.g.erq.u.ist@gmail.com"">hildela.g.erq.u.ist@gmail.com</a>
<a href=""mailto:hi.ldelagerquist@gmail.com"">hi.ldelagerquist@gmail.com</a>
<a href=""mailto:hild.e.lag.er.q.ui.s.t@gmail.com"">hild.e.lag.er.q.ui.s.t@gmail.com</a>
<a href=""mailto:h.il.dela.ger.qui.st@gmail.com"">h.il.dela.ger.qui.st@gmail.com</a>
<a href=""mailto:hil.de.la.g.erq.ui.st@gmail.com"">hil.de.la.g.erq.ui.st@gmail.com</a>
<a href=""mailto:h.il.dela.ge.r.quist@gmail.com"">h.il.dela.ge.r.quist@gmail.com</a>
<a href=""mailto:h.i.ldel.age.r.q.u.i.st@gmail.com"">h.i.ldel.age.r.q.u.i.st@gmail.com</a>
<a href=""mailto:h.i.l.de.l.a.g.e.r.quist@gmail.com"">h.i.l.de.l.a.g.e.r.quist@gmail.com</a>
<a href=""mailto:h.il.del.a.g.e.r.qui.s.t@gmail.com"">h.il.del.a.g.e.r.qui.s.t@gmail.com</a>
<a href=""mailto:hi.l.de.l.a.ge.r.q.ui.s.t@gmail.com"">hi.l.de.l.a.ge.r.q.ui.s.t@gmail.com</a>
<a href=""mailto:hil.delagerq.u.ist@gmail.com"">hil.delagerq.u.ist@gmail.com</a>
<a href=""mailto:h.i.ldela.g.e.r.quist@gmail.com"">h.i.ldela.g.e.r.quist@gmail.com</a>
<a href=""mailto:hi.ld.el.ag.erqu.ist@gmail.com"">hi.ld.el.ag.erqu.ist@gmail.com</a>
<a href=""mailto:h.ild.el.a.gerquis.t@gmail.com"">h.ild.el.a.gerquis.t@gmail.com</a>
<a href=""mailto:h.i.ld.e.lag.e.r.q.u.is.t@gmail.com"">h.i.ld.e.lag.e.r.q.u.is.t@gmail.com</a>
<a href=""mailto:h.i.ldela.ge.r.q.ui.s.t@gmail.com"">h.i.ldela.ge.r.q.ui.s.t@gmail.com</a>
<a href=""mailto:hildela.g.e.r.qu.i.s.t@gmail.com"">hildela.g.e.r.qu.i.s.t@gmail.com</a>
<a href=""mailto:h.ild.e.l.ag.e.r.qu.ist@gmail.com"">h.ild.e.l.ag.e.r.qu.ist@gmail.com</a>
<a href=""mailto:hi.ldela.g.e.rqu.is.t@gmail.com"">hi.ldela.g.e.rqu.is.t@gmail.com</a>
<a href=""mailto:h.i.ldel.a.ge.r.quist@gmail.com"">h.i.ldel.a.ge.r.quist@gmail.com</a>
<a href=""mailto:h.ild.e.l.a.ge.rq.ui.s.t@gmail.com"">h.ild.e.l.a.ge.rq.ui.s.t@gmail.com</a>
<a href=""mailto:h.il.d.e.l.ag.er.q.ui.st@gmail.com"">h.il.d.e.l.ag.er.q.ui.st@gmail.com</a>
<a href=""mailto:h.i.ld.e.lag.erqu.ist@gmail.com"">h.i.ld.e.lag.erqu.ist@gmail.com</a>
<a href=""mailto:hil.d.el.ag.e.r.q.u.i.s.t@gmail.com"">hil.d.el.ag.e.r.q.u.i.s.t@gmail.com</a>
<a href=""mailto:h.il.delag.erqu.i.st@gmail.com"">h.il.delag.erqu.i.st@gmail.com</a>
<a href=""mailto:h.il.d.elager.qui.s.t@gmail.com"">h.il.d.elager.qui.s.t@gmail.com</a>
<a href=""mailto:h.ilde.l.agerq.u.i.s.t@gmail.com"">h.ilde.l.agerq.u.i.s.t@gmail.com</a>
<a href=""mailto:h.ilde.la.g.e.rq.ui.st@gmail.com"">h.ilde.la.g.e.rq.ui.st@gmail.com</a>
<a href=""mailto:hi.lde.l.ag.erqu.is.t@gmail.com"">hi.lde.l.ag.erqu.is.t@gmail.com</a>
<a href=""mailto:hil.d.e.lag.er.quis.t@gmail.com"">hil.d.e.lag.er.quis.t@gmail.com</a>
<a href=""mailto:h.i.l.d.e.lag.e.rqu.i.st@gmail.com"">h.i.l.d.e.lag.e.rqu.i.st@gmail.com</a>
<a href=""mailto:hi.ld.el.a.ger.qu.i.s.t@gmail.com"">hi.ld.el.a.ger.qu.i.s.t@gmail.com</a>
<a href=""mailto:h.il.d.e.lag.erqu.is.t@gmail.com"">h.il.d.e.lag.erqu.is.t@gmail.com</a>
<a href=""mailto:hi.ld.e.lag.erq.ui.st@gmail.com"">hi.ld.e.lag.erq.ui.st@gmail.com</a>
<a href=""mailto:h.i.l.de.l.a.g.erq.ui.s.t@gmail.com"">h.i.l.de.l.a.g.erq.ui.s.t@gmail.com</a>
<a href=""mailto:hil.dela.g.e.r.q.u.is.t@gmail.com"">hil.dela.g.e.r.q.u.is.t@gmail.com</a>
<a href=""mailto:hi.l.de.la.g.er.quist@gmail.com"">hi.l.de.la.g.er.quist@gmail.com</a>
<a href=""mailto:hi.l.dela.g.e.r.q.ui.st@gmail.com"">hi.l.dela.g.e.r.q.ui.st@gmail.com</a>
<a href=""mailto:hi.l.d.e.la.ger.q.u.is.t@gmail.com"">hi.l.d.e.la.ger.q.u.is.t@gmail.com</a>
<a href=""mailto:hil.d.el.a.g.erqu.i.st@gmail.com"">hil.d.el.a.g.erqu.i.st@gmail.com</a>
<a href=""mailto:h.il.dela.g.er.quist@gmail.com"">h.il.dela.g.er.quist@gmail.com</a>
<a href=""mailto:hi.l.delag.e.r.q.u.is.t@gmail.com"">hi.l.delag.e.r.q.u.is.t@gmail.com</a>
<a href=""mailto:h.i.l.d.e.lag.erq.uis.t@gmail.com"">h.i.l.d.e.lag.erq.uis.t@gmail.com</a>
<a href=""mailto:h.i.lde.l.a.ge.r.q.uist@gmail.com"">h.i.lde.l.a.ge.r.q.uist@gmail.com</a>
<a href=""mailto:hilde.l.a.ge.r.quist@gmail.com"">hilde.l.a.ge.r.quist@gmail.com</a>
<a href=""mailto:h.ild.el.a.g.erqu.ist@gmail.com"">h.ild.el.a.g.erqu.ist@gmail.com</a>
<a href=""mailto:hi.l.de.l.a.g.e.rqu.i.st@gmail.com"">hi.l.de.l.a.g.e.rqu.i.st@gmail.com</a>
<a href=""mailto:hi.l.d.el.a.ge.r.q.uist@gmail.com"">hi.l.d.el.a.ge.r.q.uist@gmail.com</a>
<a href=""mailto:hi.l.dela.ge.r.qu.ist@gmail.com"">hi.l.dela.ge.r.qu.ist@gmail.com</a>
<a href=""mailto:hildela.g.e.r.qu.is.t@gmail.com"">hildela.g.e.r.qu.is.t@gmail.com</a>
<a href=""mailto:h.i.l.del.ag.e.r.qu.i.s.t@gmail.com"">h.i.l.del.ag.e.r.qu.i.s.t@gmail.com</a>
<a href=""mailto:hi.l.dela.ge.rqu.is.t@gmail.com"">hi.l.dela.ge.rqu.is.t@gmail.com</a>
<a href=""mailto:h.ild.e.lager.q.u.ist@gmail.com"">h.ild.e.lager.q.u.ist@gmail.com</a>
<a href=""mailto:hi.ldel.a.g.e.rq.ui.st@gmail.com"">hi.ldel.a.g.e.rq.ui.st@gmail.com</a>
<a href=""mailto:hi.l.delag.er.qu.i.st@gmail.com"">hi.l.delag.er.qu.i.st@gmail.com</a>
<a href=""mailto:hi.ld.el.a.g.e.r.q.u.i.st@gmail.com"">hi.ld.el.a.g.e.r.q.u.i.st@gmail.com</a>
<a href=""mailto:hi.l.d.el.a.ge.r.q.u.ist@gmail.com"">hi.l.d.el.a.ge.r.q.u.ist@gmail.com</a>
<a href=""mailto:h.i.lde.la.ger.qui.st@gmail.com"">h.i.lde.la.ger.qui.st@gmail.com</a>
<a href=""mailto:hild.ela.g.erq.u.is.t@gmail.com"">hild.ela.g.erq.u.is.t@gmail.com</a>
<a href=""mailto:h.il.de.l.a.ge.rq.uis.t@gmail.com"">h.il.de.l.a.ge.rq.uis.t@gmail.com</a>
<a href=""mailto:h.i.l.de.lage.r.q.uis.t@gmail.com"">h.i.l.de.lage.r.q.uis.t@gmail.com</a>
<a href=""mailto:hi.lde.lagerq.ui.st@gmail.com"">hi.lde.lagerq.ui.st@gmail.com</a>
<a href=""mailto:h.ildela.gerqu.i.s.t@gmail.com"">h.ildela.gerqu.i.s.t@gmail.com</a>
<a href=""mailto:hildela.g.e.rq.u.is.t@gmail.com"">hildela.g.e.rq.u.is.t@gmail.com</a>
<a href=""mailto:hil.d.e.l.ager.q.u.i.s.t@gmail.com"">hil.d.e.l.ager.q.u.i.s.t@gmail.com</a>
<a href=""mailto:h.i.l.de.l.ag.er.qui.st@gmail.com"">h.i.l.de.l.ag.er.qui.st@gmail.com</a>
<a href=""mailto:hil.d.el.agerq.u.i.s.t@gmail.com"">hil.d.el.agerq.u.i.s.t@gmail.com</a>
<a href=""mailto:h.i.ldelagerqu.i.st@gmail.com"">h.i.ldelagerqu.i.st@gmail.com</a>
<a href=""mailto:hi.lde.lag.e.rq.u.ist@gmail.com"">hi.lde.lag.e.rq.u.ist@gmail.com</a>
<a href=""mailto:hi.l.de.l.ag.er.q.u.i.s.t@gmail.com"">hi.l.de.l.ag.er.q.u.i.s.t@gmail.com</a>
<a href=""mailto:hilde.la.ger.qui.st@gmail.com"">hilde.la.ger.qui.st@gmail.com</a>
<a href=""mailto:h.i.l.d.el.ag.e.r.qu.is.t@gmail.com"">h.i.l.d.el.ag.e.r.qu.is.t@gmail.com</a>
<a href=""mailto:h.i.l.d.ela.ge.rq.u.i.s.t@gmail.com"">h.i.l.d.ela.ge.rq.u.i.s.t@gmail.com</a>
<a href=""mailto:h.il.d.e.l.ag.erq.uis.t@gmail.com"">h.il.d.e.l.ag.erq.uis.t@gmail.com</a>
<a href=""mailto:hi.ldel.ag.erqui.st@gmail.com"">hi.ldel.ag.erqui.st@gmail.com</a>
<a href=""mailto:hil.d.el.a.gerq.ui.st@gmail.com"">hil.d.el.a.gerq.ui.st@gmail.com</a>
<a href=""mailto:hi.l.d.elag.e.rq.u.i.s.t@gmail.com"">hi.l.d.elag.e.rq.u.i.s.t@gmail.com</a>
<a href=""mailto:h.ild.e.la.g.e.r.q.uist@gmail.com"">h.ild.e.la.g.e.r.q.uist@gmail.com</a>
<a href=""mailto:h.i.l.d.e.l.a.g.e.r.qu.is.t@gmail.com"">h.i.l.d.e.l.a.g.e.r.qu.is.t@gmail.com</a>
<a href=""mailto:h.ilde.lag.er.q.uist@gmail.com"">h.ilde.lag.er.q.uist@gmail.com</a>
<a href=""mailto:h.il.d.el.ager.q.u.i.st@gmail.com"">h.il.d.el.ager.q.u.i.st@gmail.com</a>
<a href=""mailto:hi.l.d.e.lag.e.rq.u.i.s.t@gmail.com"">hi.l.d.e.lag.e.rq.u.i.s.t@gmail.com</a>
<a href=""mailto:h.il.de.l.a.g.er.qu.ist@gmail.com"">h.il.de.l.a.g.er.qu.ist@gmail.com</a>
<a href=""mailto:h.ildela.ger.q.u.i.s.t@gmail.com"">h.ildela.ger.q.u.i.s.t@gmail.com</a>
<a href=""mailto:hi.l.de.l.ager.qu.is.t@gmail.com"">hi.l.de.l.ager.qu.is.t@gmail.com</a>
<a href=""mailto:hildel.a.g.er.q.ui.s.t@gmail.com"">hildel.a.g.er.q.ui.s.t@gmail.com</a>
<a href=""mailto:h.ilde.l.a.g.er.q.ui.st@gmail.com"">h.ilde.l.a.g.er.q.ui.st@gmail.com</a>
<a href=""mailto:hil.d.e.la.ge.rquis.t@gmail.com"">hil.d.e.la.ge.rquis.t@gmail.com</a>
<a href=""mailto:hi.l.del.a.g.e.r.qu.is.t@gmail.com"">hi.l.del.a.g.e.r.qu.is.t@gmail.com</a>
<a href=""mailto:h.il.d.e.l.ag.erqui.st@gmail.com"">h.il.d.e.l.ag.erqui.st@gmail.com</a>
<a href=""mailto:hi.ld.e.lag.e.r.qui.s.t@gmail.com"">hi.ld.e.lag.e.r.qui.s.t@gmail.com</a>
<a href=""mailto:hi.ldelag.er.q.ui.s.t@gmail.com"">hi.ldelag.er.q.ui.s.t@gmail.com</a>
<a href=""mailto:hi.l.d.e.l.a.g.e.rq.uis.t@gmail.com"">hi.l.d.e.l.a.g.e.rq.uis.t@gmail.com</a>
<a href=""mailto:hilde.la.ger.qu.ist@gmail.com"">hilde.la.ger.qu.ist@gmail.com</a>
<a href=""mailto:hi.l.de.lagerq.uis.t@gmail.com"">hi.l.de.lagerq.uis.t@gmail.com</a>
<a href=""mailto:hild.e.la.ge.rq.uis.t@gmail.com"">hild.e.la.ge.rq.uis.t@gmail.com</a>
<a href=""mailto:hi.lde.l.a.g.er.quist@gmail.com"">hi.lde.l.a.g.er.quist@gmail.com</a>
<a href=""mailto:h.i.ldela.gerq.ui.s.t@gmail.com"">h.i.ldela.gerq.ui.s.t@gmail.com</a>
<a href=""mailto:hil.d.e.lage.rq.ui.st@gmail.com"">hil.d.e.lage.rq.ui.st@gmail.com</a>
<a href=""mailto:hil.del.age.r.qu.is.t@gmail.com"">hil.del.age.r.qu.is.t@gmail.com</a>
<a href=""mailto:hi.l.d.el.a.g.e.r.q.u.i.s.t@gmail.com"">hi.l.d.el.a.g.e.r.q.u.i.s.t@gmail.com</a>
<a href=""mailto:hild.e.l.a.ge.r.qu.ist@gmail.com"">hild.e.l.a.ge.r.qu.ist@gmail.com</a>
<a href=""mailto:h.i.l.de.l.age.rqu.is.t@gmail.com"">h.i.l.de.l.age.rqu.is.t@gmail.com</a>
<a href=""mailto:h.i.l.del.agerq.u.ist@gmail.com"">h.i.l.del.agerq.u.ist@gmail.com</a>
<a href=""mailto:h.i.l.de.la.g.e.rqui.st@gmail.com"">h.i.l.de.la.g.e.rqui.st@gmail.com</a>
<a href=""mailto:h.i.ld.el.ag.e.r.q.u.i.st@gmail.com"">h.i.ld.el.ag.e.r.q.u.i.st@gmail.com</a>
<a href=""mailto:hi.lde.la.ge.rq.u.i.s.t@gmail.com"">hi.lde.la.ge.rq.u.i.s.t@gmail.com</a>
<a href=""mailto:hil.delag.erqui.s.t@gmail.com"">hil.delag.erqui.s.t@gmail.com</a>
<a href=""mailto:hi.ld.el.a.ge.rquist@gmail.com"">hi.ld.el.a.ge.rquist@gmail.com</a>
<a href=""mailto:hilde.l.a.ge.r.q.u.i.st@gmail.com"">hilde.l.a.ge.r.q.u.i.st@gmail.com</a>
<a href=""mailto:hil.del.ag.er.q.u.i.s.t@gmail.com"">hil.del.ag.er.q.u.i.s.t@gmail.com</a>
<a href=""mailto:hild.el.age.rquist@gmail.com"">hild.el.age.rquist@gmail.com</a>
<a href=""mailto:h.i.ldel.ag.e.r.qui.s.t@gmail.com"">h.i.ldel.ag.e.r.qui.s.t@gmail.com</a>
<a href=""mailto:h.il.del.ag.erqui.st@gmail.com"">h.il.del.ag.erqui.st@gmail.com</a>
<a href=""mailto:h.i.l.d.ela.gerqu.is.t@gmail.com"">h.i.l.d.ela.gerqu.is.t@gmail.com</a>
<a href=""mailto:h.ilde.l.a.g.erqui.s.t@gmail.com"">h.ilde.l.a.g.erqui.s.t@gmail.com</a>
<a href=""mailto:hild.el.a.g.er.qu.is.t@gmail.com"">hild.el.a.g.er.qu.is.t@gmail.com</a>
<a href=""mailto:hi.l.del.a.g.erq.ui.s.t@gmail.com"">hi.l.del.a.g.erq.ui.s.t@gmail.com</a>
<a href=""mailto:hi.l.del.a.gerq.ui.s.t@gmail.com"">hi.l.del.a.gerq.ui.s.t@gmail.com</a>
<a href=""mailto:h.il.de.l.ag.e.r.qui.st@gmail.com"">h.il.de.l.ag.e.r.qui.st@gmail.com</a>
<a href=""mailto:h.ildela.ge.r.qu.i.st@gmail.com"">h.ildela.ge.r.qu.i.st@gmail.com</a>
<a href=""mailto:h.ildel.age.rq.u.i.st@gmail.com"">h.ildel.age.rq.u.i.st@gmail.com</a>
<a href=""mailto:hilde.l.ag.er.q.u.i.s.t@gmail.com"">hilde.l.ag.er.q.u.i.s.t@gmail.com</a>
<a href=""mailto:h.ild.e.la.g.erqui.s.t@gmail.com"">h.ild.e.la.g.erqui.s.t@gmail.com</a>
<a href=""mailto:h.ildelag.er.quis.t@gmail.com"">h.ildelag.er.quis.t@gmail.com</a>
<a href=""mailto:h.i.l.de.lag.er.q.uis.t@gmail.com"">h.i.l.de.lag.er.q.uis.t@gmail.com</a>
<a href=""mailto:hil.d.e.lager.q.uist@gmail.com"">hil.d.e.lager.q.uist@gmail.com</a>
<a href=""mailto:hil.de.l.age.rquis.t@gmail.com"">hil.de.l.age.rquis.t@gmail.com</a>
<a href=""mailto:hild.el.a.ge.r.q.ui.st@gmail.com"">hild.el.a.ge.r.q.ui.st@gmail.com</a>
<a href=""mailto:hil.de.l.agerq.uist@gmail.com"">hil.de.l.agerq.uist@gmail.com</a>
<a href=""mailto:h.i.l.del.ag.er.q.ui.st@gmail.com"">h.i.l.del.ag.er.q.ui.st@gmail.com</a>
<a href=""mailto:h.i.ld.elag.erq.ui.s.t@gmail.com"">h.i.ld.elag.erq.ui.s.t@gmail.com</a>
<a href=""mailto:hi.ldelager.qu.i.st@gmail.com"">hi.ldelager.qu.i.st@gmail.com</a>
<a href=""mailto:hilde.l.ag.e.r.q.u.ist@gmail.com"">hilde.l.ag.e.r.q.u.ist@gmail.com</a>
<a href=""mailto:hildela.ger.qu.ist@gmail.com"">hildela.ger.qu.ist@gmail.com</a>
<a href=""mailto:h.ild.e.la.g.erqui.st@gmail.com"">h.ild.e.la.g.erqui.st@gmail.com</a>
<a href=""mailto:h.ildela.ger.qu.ist@gmail.com"">h.ildela.ger.qu.ist@gmail.com</a>
<a href=""mailto:hil.delag.erq.u.is.t@gmail.com"">hil.delag.erq.u.is.t@gmail.com</a>
<a href=""mailto:h.i.l.del.a.g.e.r.quist@gmail.com"">h.i.l.del.a.g.e.r.quist@gmail.com</a>
<a href=""mailto:h.i.ld.el.a.g.er.qu.i.s.t@gmail.com"">h.i.ld.el.a.g.er.qu.i.s.t@gmail.com</a>
<a href=""mailto:hi.ldel.ag.er.q.ui.s.t@gmail.com"">hi.ldel.ag.er.q.ui.s.t@gmail.com</a>
<a href=""mailto:h.i.ld.el.a.ge.rq.u.is.t@gmail.com"">h.i.ld.el.a.ge.rq.u.is.t@gmail.com</a>
<a href=""mailto:hi.ld.e.la.ge.rq.u.i.s.t@gmail.com"">hi.ld.e.la.ge.rq.u.i.s.t@gmail.com</a>
<a href=""mailto:h.i.ld.ela.ge.rq.ui.st@gmail.com"">h.i.ld.ela.ge.rq.ui.st@gmail.com</a>
<a href=""mailto:h.i.l.d.e.l.a.g.er.q.uis.t@gmail.com"">h.i.l.d.e.l.a.g.er.q.uis.t@gmail.com</a>
<a href=""mailto:hi.ld.e.la.ge.r.q.uis.t@gmail.com"">hi.ld.e.la.ge.r.q.uis.t@gmail.com</a>
<a href=""mailto:hi.l.d.e.la.ger.q.uis.t@gmail.com"">hi.l.d.e.la.ger.q.uis.t@gmail.com</a>
<a href=""mailto:h.i.lde.la.gerq.u.i.st@gmail.com"">h.i.lde.la.gerq.u.i.st@gmail.com</a>
<a href=""mailto:h.i.ld.e.l.a.g.e.rqu.i.s.t@gmail.com"">h.i.ld.e.l.a.g.e.rqu.i.s.t@gmail.com</a>
<a href=""mailto:hi.ld.e.l.ager.quis.t@gmail.com"">hi.ld.e.l.ager.quis.t@gmail.com</a>
<a href=""mailto:hilde.la.g.e.rq.uist@gmail.com"">hilde.la.g.e.rq.uist@gmail.com</a>
<a href=""mailto:hild.el.ager.q.u.i.st@gmail.com"">hild.el.ager.q.u.i.st@gmail.com</a>
<a href=""mailto:hi.ld.e.lag.e.rq.u.ist@gmail.com"">hi.ld.e.lag.e.rq.u.ist@gmail.com</a>
<a href=""mailto:hi.ldelag.e.r.q.uis.t@gmail.com"">hi.ldelag.e.r.q.uis.t@gmail.com</a>
<a href=""mailto:hi.l.de.l.a.ger.q.uist@gmail.com"">hi.l.de.l.a.ger.q.uist@gmail.com</a>
<a href=""mailto:hild.e.lage.rqu.i.st@gmail.com"">hild.e.lage.rqu.i.st@gmail.com</a>
<a href=""mailto:h.il.d.e.la.g.erqu.i.st@gmail.com"">h.il.d.e.la.g.erqu.i.st@gmail.com</a>
<a href=""mailto:hi.l.de.l.agerqu.i.s.t@gmail.com"">hi.l.de.l.agerqu.i.s.t@gmail.com</a>
<a href=""mailto:hildela.g.erq.u.is.t@gmail.com"">hildela.g.erq.u.is.t@gmail.com</a>
<a href=""mailto:h.il.d.elag.erq.u.i.s.t@gmail.com"">h.il.d.elag.erq.u.i.s.t@gmail.com</a>
<a href=""mailto:hil.d.el.a.ger.qu.ist@gmail.com"">hil.d.el.a.ger.qu.ist@gmail.com</a>
<a href=""mailto:hil.d.e.l.age.r.qu.is.t@gmail.com"">hil.d.e.l.age.r.qu.is.t@gmail.com</a>
<a href=""mailto:h.il.del.a.gerq.uist@gmail.com"">h.il.del.a.gerq.uist@gmail.com</a>
<a href=""mailto:hild.ela.g.erq.u.ist@gmail.com"">hild.ela.g.erq.u.ist@gmail.com</a>
<a href=""mailto:h.ilde.l.a.g.e.rq.u.i.s.t@gmail.com"">h.ilde.l.a.g.e.rq.u.i.s.t@gmail.com</a>
<a href=""mailto:h.i.ld.el.a.g.e.r.qu.i.st@gmail.com"">h.i.ld.el.a.g.e.r.qu.i.st@gmail.com</a>
<a href=""mailto:h.i.ld.ela.g.e.rq.ui.st@gmail.com"">h.i.ld.ela.g.e.rq.ui.st@gmail.com</a>
<a href=""mailto:h.ild.ela.g.er.q.ui.s.t@gmail.com"">h.ild.ela.g.er.q.ui.s.t@gmail.com</a>
<a href=""mailto:hi.ld.e.l.agerqui.st@gmail.com"">hi.ld.e.l.agerqui.st@gmail.com</a>
<a href=""mailto:hi.l.d.e.lagerq.uist@gmail.com"">hi.l.d.e.lagerq.uist@gmail.com</a>
<a href=""mailto:h.i.l.de.la.ger.q.u.i.st@gmail.com"">h.i.l.de.la.ger.q.u.i.st@gmail.com</a>
<a href=""mailto:h.i.ldela.g.er.qu.i.st@gmail.com"">h.i.ldela.g.er.qu.i.st@gmail.com</a>
<a href=""mailto:hi.ld.ela.ger.qu.is.t@gmail.com"">hi.ld.ela.ger.qu.is.t@gmail.com</a>
<a href=""mailto:h.i.l.d.el.a.g.e.rquist@gmail.com"">h.i.l.d.el.a.g.e.rquist@gmail.com</a>
<a href=""mailto:h.i.l.de.l.age.r.q.ui.s.t@gmail.com"">h.i.l.de.l.age.r.q.ui.s.t@gmail.com</a>
<a href=""mailto:hi.ldelagerq.uist@gmail.com"">hi.ldelagerq.uist@gmail.com</a>
<a href=""mailto:h.il.del.a.g.e.r.qu.i.st@gmail.com"">h.il.del.a.g.e.r.qu.i.st@gmail.com</a>
<a href=""mailto:hild.elag.erq.u.i.st@gmail.com"">hild.elag.erq.u.i.st@gmail.com</a>
<a href=""mailto:h.i.ldela.gerq.uist@gmail.com"">h.i.ldela.gerq.uist@gmail.com</a>
<a href=""mailto:hi.l.del.a.g.e.rquist@gmail.com"">hi.l.del.a.g.e.rquist@gmail.com</a>
<a href=""mailto:hi.ldel.agerq.ui.st@gmail.com"">hi.ldel.agerq.ui.st@gmail.com</a>
<a href=""mailto:h.i.ld.elagerquis.t@gmail.com"">h.i.ld.elagerquis.t@gmail.com</a>
<a href=""mailto:hi.ldel.a.ge.r.qui.st@gmail.com"">hi.ldel.a.ge.r.qui.st@gmail.com</a>
<a href=""mailto:h.i.l.d.e.l.a.ger.q.uist@gmail.com"">h.i.l.d.e.l.a.ger.q.uist@gmail.com</a>
<a href=""mailto:h.i.ld.elage.rqu.ist@gmail.com"">h.i.ld.elage.rqu.ist@gmail.com</a>
<a href=""mailto:hil.d.e.lag.e.rq.u.i.st@gmail.com"">hil.d.e.lag.e.rq.u.i.st@gmail.com</a>
<a href=""mailto:h.il.d.e.l.agerqu.ist@gmail.com"">h.il.d.e.l.agerqu.ist@gmail.com</a>
<a href=""mailto:h.il.d.e.la.g.e.r.q.u.i.s.t@gmail.com"">h.il.d.e.la.g.e.r.q.u.i.s.t@gmail.com</a>
<a href=""mailto:h.i.lde.lage.r.q.uist@gmail.com"">h.i.lde.lage.r.q.uist@gmail.com</a>
<a href=""mailto:hil.d.elag.erqu.i.st@gmail.com"">hil.d.elag.erqu.i.st@gmail.com</a>
<a href=""mailto:hilde.la.g.e.rqu.i.st@gmail.com"">hilde.la.g.e.rqu.i.st@gmail.com</a>
<a href=""mailto:hi.l.de.l.a.ge.rqu.is.t@gmail.com"">hi.l.de.l.a.ge.rqu.is.t@gmail.com</a>
<a href=""mailto:h.il.de.l.ag.e.rqu.is.t@gmail.com"">h.il.de.l.ag.e.rqu.is.t@gmail.com</a>
<a href=""mailto:hil.d.e.la.g.e.rq.ui.st@gmail.com"">hil.d.e.la.g.e.rq.ui.st@gmail.com</a>
<a href=""mailto:h.il.d.e.l.a.g.er.q.ui.s.t@gmail.com"">h.il.d.e.l.a.g.er.q.ui.s.t@gmail.com</a>
<a href=""mailto:hi.l.d.ela.g.er.qu.i.s.t@gmail.com"">hi.l.d.ela.g.er.qu.i.s.t@gmail.com</a>
<a href=""mailto:hildel.age.rqui.s.t@gmail.com"">hildel.age.rqui.s.t@gmail.com</a>
<a href=""mailto:h.i.l.delage.r.q.uis.t@gmail.com"">h.i.l.delage.r.q.uis.t@gmail.com</a>"
0PtY5Gfs,Untitled,Skos_Martren,C++,Sunday 6th of August 2023 12:32:09 AM CDT,"class RandomizedSet {

    unordered_set<int> values;

public:
    
    bool insert(int val) {
        if (values.find(val) != values.end()) { return false; }
        values.insert(val);
        return true;
    }

    bool remove(int val) {
        if (values.find(val) == values.end()) { return false; }
        values.erase(val);
        return true;
    }

    int getRandom() {
        auto it = values.begin();
        advance(it, rand() % values.size());
        return (*it);
    }
};"
vTJsLXRK,Test Conexión Internet con Python,NubeColectiva,Python,Saturday 5th of August 2023 11:05:27 PM CDT,"import speedtest as st

server = st.Speedtest()
server.get_best_server

# Test de Descarga
descarga = server.download()
descarga = descarga / 1000000
print(f""Velocidad de Descarga: {descarga} MB/s "")

# Test de Subida 
subida = server.upload()
subida = subida / 1000000
print(f""Velocidad de Subida: {subida} MB/s"")

# Test Ping 
ping = server.results.ping
print(f""Velocidad de Ping: {ping}"") "
UFY5TcCP,Ifiam,NeKosmic,JSON,Saturday 5th of August 2023 08:19:15 PM CDT,"{
""mfav"": ""https://fastupload.io/XZTBVG52U8/0rpmvLX5azRgZ/kQ6HKV61xtPafQZ/FavNK.m4a""
}"
d0fHdHsJ,2023-08-05_stats.json,rdp_snitch,JSON,Saturday 5th of August 2023 07:18:02 PM CDT,"{
  ""ip"": {
    ""195.19.96.41"": 498,
    ""167.94.146.56"": 3,
    ""185.190.24.15"": 3,
    ""103.252.119.150"": 18,
    ""103.116.52.3"": 36,
    ""185.11.61.117"": 3,
    ""80.82.77.139"": 3,
    ""45.79.108.4"": 6,
    ""87.251.75.145"": 9,
    ""128.199.102.172"": 6,
    ""172.105.252.86"": 18,
    ""62.122.184.166"": 12,
    ""60.205.170.161"": 48,
    ""39.108.174.140"": 333,
    ""62.122.184.168"": 12,
    ""120.27.12.65"": 30,
    ""31.43.185.32"": 15,
    ""185.170.144.3"": 3,
    ""121.41.5.167"": 6,
    ""87.251.75.120"": 3,
    ""164.92.97.25"": 3,
    ""165.154.161.199"": 9,
    ""141.98.82.22"": 3,
    ""85.14.32.53"": 3969,
    ""167.99.185.114"": 3,
    ""62.204.41.134"": 6,
    ""172.232.5.72"": 3,
    ""159.223.84.25"": 6,
    ""51.75.160.42"": 6,
    ""112.5.87.34"": 3,
    ""62.204.41.139"": 3,
    ""94.232.41.205"": 9,
    ""167.94.138.51"": 3,
    ""198.235.24.230"": 9,
    ""87.251.75.64"": 3,
    ""101.132.121.192"": 6,
    ""141.98.9.23"": 6,
    ""45.140.17.16"": 9,
    ""116.73.21.72"": 1152,
    ""78.188.58.21"": 3,
    ""51.77.104.164"": 819,
    ""193.169.255.32"": 9,
    ""185.142.236.34"": 3
  },
  ""asn"": {
    ""AS12389"": 498,
    ""AS398705"": 3,
    ""AS211632"": 3,
    ""AS64022"": 18,
    ""AS150830"": 36,
    ""AS57523"": 27,
    ""AS202425"": 3,
    ""AS63949"": 27,
    ""AS208091"": 24,
    ""AS14061"": 18,
    ""AS37963"": 423,
    ""AS211736"": 15,
    ""AS48080"": 3,
    ""AS135377"": 9,
    ""AS209588"": 9,
    ""AS34376"": 3969,
    ""AS59425"": 9,
    ""AS16276"": 825,
    ""AS9808"": 3,
    ""AS398324"": 3,
    ""AS396982"": 9,
    ""AS198953"": 9,
    ""AS17488"": 1152,
    ""AS9121"": 3,
    ""AS198810"": 9,
    ""AS174"": 3
  },
  ""isp"": {
    ""PJSC Rostelecom"": 498,
    ""Censys, Inc."": 6,
    ""Internet Solutions & Innovations LTD."": 3,
    ""CLOUDWEBMANAGE"": 18,
    ""Chieu Minh Company Limited"": 36,
    ""Chang Way Technologies Co. Limited"": 27,
    ""IP Volume inc"": 3,
    ""Akamai Technologies, Inc."": 9,
    ""Xhost Internet Solutions LP"": 24,
    ""DigitalOcean, LLC"": 18,
    ""Akamai Technologies"": 18,
    ""Hangzhou Alibaba Advertising Co"": 393,
    ""Addresses CNNIC"": 30,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Dmitriy Panchenko"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 9,
    ""Flyservers S.A."": 9,
    ""Telecom Group"": 3969,
    ""Horizon LLC"": 9,
    ""OVH SAS"": 825,
    ""China Mobile"": 3,
    ""Google LLC"": 9,
    ""Proton66 OOO"": 9,
    ""Hathway IP over Cable Internet Access"": 1152,
    ""TurkTelecom"": 3,
    ""Agata Grabowska trading as FUFO Studio"": 9,
    ""Cogent Communications"": 3
  },
  ""org"": {
    ""PJSC Rostelecom"": 498,
    ""Censys, Inc."": 3,
    ""Tribeka Web Advisors S.A"": 3,
    ""Unknown"": 18,
    ""Chieu Minh Company Limited"": 36,
    ""Starcrecium Limited"": 3,
    ""IP Volume inc"": 3,
    ""Linode"": 24,
    ""Xhost Internet Solutions"": 15,
    ""DigitalOcean, LLC"": 18,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Aliyun Computing Co., LTD"": 423,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Xhostis"": 3,
    ""Ucloud Information Technology"": 9,
    ""Vdsline"": 3,
    ""TelecomGroup"": 3969,
    ""Horizon LLC"": 9,
    ""Akamai Technologies, Inc."": 3,
    ""OVH Ltd"": 825,
    ""China Mobile Communications Corporation"": 3,
    ""Dmitriy Panchenko"": 9,
    ""Censys, Inc"": 3,
    ""Palo Alto Networks, Inc"": 9,
    ""Alviva Holding Limited"": 6,
    ""Proton66 LLC"": 9,
    ""Hathway Cable and Datacom Limited"": 1152,
    ""Turk Telekomunikasyon A.S"": 3,
    ""FUFO Studio"": 9,
    ""BlackHOST Ltd."": 3
  },
  ""regionName"": {
    ""St.-Petersburg"": 498,
    ""Hesse"": 3,
    ""Mariehamns stad"": 3,
    ""Central and Western District"": 18,
    ""Ho Chi Minh"": 36,
    ""Chechnya"": 3,
    ""North Holland"": 27,
    ""California"": 18,
    ""England"": 840,
    ""South West"": 12,
    ""Maharashtra"": 1170,
    ""Moscow"": 45,
    ""Beijing"": 48,
    ""Guangdong"": 336,
    ""Shandong"": 30,
    ""Zhejiang"": 6,
    ""Taipei City"": 9,
    ""Provincia de Panama"": 3,
    ""Blagoevgrad"": 3969,
    ""Ontario"": 3,
    ""Illinois"": 3,
    ""Perm Krai"": 9,
    ""Michigan"": 3,
    ""Shanghai"": 6,
    ""Istanbul"": 3,
    ""Mazovia"": 9
  },
  ""country"": {
    ""Russia"": 555,
    ""Germany"": 3,
    ""Aland Islands"": 3,
    ""Hong Kong"": 18,
    ""Vietnam"": 36,
    ""Netherlands"": 27,
    ""United States"": 24,
    ""United Kingdom"": 840,
    ""Singapore"": 12,
    ""India"": 1170,
    ""China"": 426,
    ""Taiwan"": 9,
    ""Panama"": 3,
    ""Bulgaria"": 3969,
    ""Canada"": 3,
    ""Turkey"": 3,
    ""Poland"": 9
  },
  ""account"": {
    ""hello"": 6969,
    ""(empty)"": 9,
    ""Administr"": 51,
    ""root"": 6,
    ""Domain"": 57,
    ""beio"": 3,
    ""Test"": 6,
    ""zEblksBzi"": 3,
    ""cdBoyh"": 3,
    ""ZurOrJ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 7110
  },
  ""client_build"": {
    ""Unknown"": 7110
  },
  ""client_name"": {
    ""Unknown"": 7110
  },
  ""ip_type"": {
    ""Unknown"": 5796,
    ""hosting"": 1299,
    ""hosting & proxy"": 12,
    ""mobile"": 3
  }
}"
DSv1XQqw,2023-08-05_stats.json,rdp_snitch,JSON,Saturday 5th of August 2023 07:16:08 PM CDT,"{
  ""ip"": {
    ""195.19.96.41"": 332,
    ""167.94.146.56"": 2,
    ""185.190.24.15"": 2,
    ""103.252.119.150"": 12,
    ""103.116.52.3"": 24,
    ""185.11.61.117"": 2,
    ""80.82.77.139"": 2,
    ""45.79.108.4"": 4,
    ""87.251.75.145"": 6,
    ""128.199.102.172"": 4,
    ""172.105.252.86"": 12,
    ""62.122.184.166"": 8,
    ""60.205.170.161"": 32,
    ""39.108.174.140"": 222,
    ""62.122.184.168"": 8,
    ""120.27.12.65"": 20,
    ""31.43.185.32"": 10,
    ""185.170.144.3"": 2,
    ""121.41.5.167"": 4,
    ""87.251.75.120"": 2,
    ""164.92.97.25"": 2,
    ""165.154.161.199"": 6,
    ""141.98.82.22"": 2,
    ""85.14.32.53"": 2646,
    ""167.99.185.114"": 2,
    ""62.204.41.134"": 4,
    ""172.232.5.72"": 2,
    ""159.223.84.25"": 4,
    ""51.75.160.42"": 4,
    ""112.5.87.34"": 2,
    ""62.204.41.139"": 2,
    ""94.232.41.205"": 6,
    ""167.94.138.51"": 2,
    ""198.235.24.230"": 6,
    ""87.251.75.64"": 2,
    ""101.132.121.192"": 4,
    ""141.98.9.23"": 4,
    ""45.140.17.16"": 6,
    ""116.73.21.72"": 768,
    ""78.188.58.21"": 2,
    ""51.77.104.164"": 546,
    ""193.169.255.32"": 6,
    ""185.142.236.34"": 2
  },
  ""asn"": {
    ""AS12389"": 332,
    ""AS398705"": 2,
    ""AS211632"": 2,
    ""AS64022"": 12,
    ""AS150830"": 24,
    ""AS57523"": 18,
    ""AS202425"": 2,
    ""AS63949"": 18,
    ""AS208091"": 16,
    ""AS14061"": 12,
    ""AS37963"": 282,
    ""AS211736"": 10,
    ""AS48080"": 2,
    ""AS135377"": 6,
    ""AS209588"": 6,
    ""AS34376"": 2646,
    ""AS59425"": 6,
    ""AS16276"": 550,
    ""AS9808"": 2,
    ""AS398324"": 2,
    ""AS396982"": 6,
    ""AS198953"": 6,
    ""AS17488"": 768,
    ""AS9121"": 2,
    ""AS198810"": 6,
    ""AS174"": 2
  },
  ""isp"": {
    ""PJSC Rostelecom"": 332,
    ""Censys, Inc."": 4,
    ""Internet Solutions & Innovations LTD."": 2,
    ""CLOUDWEBMANAGE"": 12,
    ""Chieu Minh Company Limited"": 24,
    ""Chang Way Technologies Co. Limited"": 18,
    ""IP Volume inc"": 2,
    ""Akamai Technologies, Inc."": 6,
    ""Xhost Internet Solutions LP"": 16,
    ""DigitalOcean, LLC"": 12,
    ""Akamai Technologies"": 12,
    ""Hangzhou Alibaba Advertising Co"": 262,
    ""Addresses CNNIC"": 20,
    ""FOP Dmytro Nedilskyi"": 10,
    ""Dmitriy Panchenko"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Flyservers S.A."": 6,
    ""Telecom Group"": 2646,
    ""Horizon LLC"": 6,
    ""OVH SAS"": 550,
    ""China Mobile"": 2,
    ""Google LLC"": 6,
    ""Proton66 OOO"": 6,
    ""Hathway IP over Cable Internet Access"": 768,
    ""TurkTelecom"": 2,
    ""Agata Grabowska trading as FUFO Studio"": 6,
    ""Cogent Communications"": 2
  },
  ""org"": {
    ""PJSC Rostelecom"": 332,
    ""Censys, Inc."": 2,
    ""Tribeka Web Advisors S.A"": 2,
    ""Unknown"": 12,
    ""Chieu Minh Company Limited"": 24,
    ""Starcrecium Limited"": 2,
    ""IP Volume inc"": 2,
    ""Linode"": 16,
    ""Xhost Internet Solutions"": 10,
    ""DigitalOcean, LLC"": 12,
    ""Chang Way Technologies Co. Limited"": 16,
    ""Aliyun Computing Co., LTD"": 282,
    ""FOP Dmytro Nedilskyi"": 10,
    ""Xhostis"": 2,
    ""Ucloud Information Technology"": 6,
    ""Vdsline"": 2,
    ""TelecomGroup"": 2646,
    ""Horizon LLC"": 6,
    ""Akamai Technologies, Inc."": 2,
    ""OVH Ltd"": 550,
    ""China Mobile Communications Corporation"": 2,
    ""Dmitriy Panchenko"": 6,
    ""Censys, Inc"": 2,
    ""Palo Alto Networks, Inc"": 6,
    ""Alviva Holding Limited"": 4,
    ""Proton66 LLC"": 6,
    ""Hathway Cable and Datacom Limited"": 768,
    ""Turk Telekomunikasyon A.S"": 2,
    ""FUFO Studio"": 6,
    ""BlackHOST Ltd."": 2
  },
  ""regionName"": {
    ""St.-Petersburg"": 332,
    ""Hesse"": 2,
    ""Mariehamns stad"": 2,
    ""Central and Western District"": 12,
    ""Ho Chi Minh"": 24,
    ""Chechnya"": 2,
    ""North Holland"": 18,
    ""California"": 12,
    ""England"": 560,
    ""South West"": 8,
    ""Maharashtra"": 780,
    ""Moscow"": 30,
    ""Beijing"": 32,
    ""Guangdong"": 224,
    ""Shandong"": 20,
    ""Zhejiang"": 4,
    ""Taipei City"": 6,
    ""Provincia de Panama"": 2,
    ""Blagoevgrad"": 2646,
    ""Ontario"": 2,
    ""Illinois"": 2,
    ""Perm Krai"": 6,
    ""Michigan"": 2,
    ""Shanghai"": 4,
    ""Istanbul"": 2,
    ""Mazovia"": 6
  },
  ""country"": {
    ""Russia"": 370,
    ""Germany"": 2,
    ""Aland Islands"": 2,
    ""Hong Kong"": 12,
    ""Vietnam"": 24,
    ""Netherlands"": 18,
    ""United States"": 16,
    ""United Kingdom"": 560,
    ""Singapore"": 8,
    ""India"": 780,
    ""China"": 284,
    ""Taiwan"": 6,
    ""Panama"": 2,
    ""Bulgaria"": 2646,
    ""Canada"": 2,
    ""Turkey"": 2,
    ""Poland"": 6
  },
  ""account"": {
    ""hello"": 4646,
    ""(empty)"": 6,
    ""Administr"": 34,
    ""root"": 4,
    ""Domain"": 38,
    ""beio"": 2,
    ""Test"": 4,
    ""zEblksBzi"": 2,
    ""cdBoyh"": 2,
    ""ZurOrJ"": 2
  },
  ""keyboard"": {
    ""Unknown"": 4740
  },
  ""client_build"": {
    ""Unknown"": 4740
  },
  ""client_name"": {
    ""Unknown"": 4740
  },
  ""ip_type"": {
    ""Unknown"": 3864,
    ""hosting"": 866,
    ""hosting & proxy"": 8,
    ""mobile"": 2
  }
}"
a3ynpueW,2023-08-05_stats.json,rdp_snitch,JSON,Saturday 5th of August 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""195.19.96.41"": 166,
    ""167.94.146.56"": 1,
    ""185.190.24.15"": 1,
    ""103.252.119.150"": 6,
    ""103.116.52.3"": 12,
    ""185.11.61.117"": 1,
    ""80.82.77.139"": 1,
    ""45.79.108.4"": 2,
    ""87.251.75.145"": 3,
    ""128.199.102.172"": 2,
    ""172.105.252.86"": 6,
    ""62.122.184.166"": 4,
    ""60.205.170.161"": 16,
    ""39.108.174.140"": 111,
    ""62.122.184.168"": 4,
    ""120.27.12.65"": 10,
    ""31.43.185.32"": 5,
    ""185.170.144.3"": 1,
    ""121.41.5.167"": 2,
    ""87.251.75.120"": 1,
    ""164.92.97.25"": 1,
    ""165.154.161.199"": 3,
    ""141.98.82.22"": 1,
    ""85.14.32.53"": 1323,
    ""167.99.185.114"": 1,
    ""62.204.41.134"": 2,
    ""172.232.5.72"": 1,
    ""159.223.84.25"": 2,
    ""51.75.160.42"": 2,
    ""112.5.87.34"": 1,
    ""62.204.41.139"": 1,
    ""94.232.41.205"": 3,
    ""167.94.138.51"": 1,
    ""198.235.24.230"": 3,
    ""87.251.75.64"": 1,
    ""101.132.121.192"": 2,
    ""141.98.9.23"": 2,
    ""45.140.17.16"": 3,
    ""116.73.21.72"": 384,
    ""78.188.58.21"": 1,
    ""51.77.104.164"": 273,
    ""193.169.255.32"": 3,
    ""185.142.236.34"": 1
  },
  ""asn"": {
    ""AS12389"": 166,
    ""AS398705"": 1,
    ""AS211632"": 1,
    ""AS64022"": 6,
    ""AS150830"": 12,
    ""AS57523"": 9,
    ""AS202425"": 1,
    ""AS63949"": 9,
    ""AS208091"": 8,
    ""AS14061"": 6,
    ""AS37963"": 141,
    ""AS211736"": 5,
    ""AS48080"": 1,
    ""AS135377"": 3,
    ""AS209588"": 3,
    ""AS34376"": 1323,
    ""AS59425"": 3,
    ""AS16276"": 275,
    ""AS9808"": 1,
    ""AS398324"": 1,
    ""AS396982"": 3,
    ""AS198953"": 3,
    ""AS17488"": 384,
    ""AS9121"": 1,
    ""AS198810"": 3,
    ""AS174"": 1
  },
  ""isp"": {
    ""PJSC Rostelecom"": 166,
    ""Censys, Inc."": 2,
    ""Internet Solutions & Innovations LTD."": 1,
    ""CLOUDWEBMANAGE"": 6,
    ""Chieu Minh Company Limited"": 12,
    ""Chang Way Technologies Co. Limited"": 9,
    ""IP Volume inc"": 1,
    ""Akamai Technologies, Inc."": 3,
    ""Xhost Internet Solutions LP"": 8,
    ""DigitalOcean, LLC"": 6,
    ""Akamai Technologies"": 6,
    ""Hangzhou Alibaba Advertising Co"": 131,
    ""Addresses CNNIC"": 10,
    ""FOP Dmytro Nedilskyi"": 5,
    ""Dmitriy Panchenko"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Flyservers S.A."": 3,
    ""Telecom Group"": 1323,
    ""Horizon LLC"": 3,
    ""OVH SAS"": 275,
    ""China Mobile"": 1,
    ""Google LLC"": 3,
    ""Proton66 OOO"": 3,
    ""Hathway IP over Cable Internet Access"": 384,
    ""TurkTelecom"": 1,
    ""Agata Grabowska trading as FUFO Studio"": 3,
    ""Cogent Communications"": 1
  },
  ""org"": {
    ""PJSC Rostelecom"": 166,
    ""Censys, Inc."": 1,
    ""Tribeka Web Advisors S.A"": 1,
    ""Unknown"": 6,
    ""Chieu Minh Company Limited"": 12,
    ""Starcrecium Limited"": 1,
    ""IP Volume inc"": 1,
    ""Linode"": 8,
    ""Xhost Internet Solutions"": 5,
    ""DigitalOcean, LLC"": 6,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Aliyun Computing Co., LTD"": 141,
    ""FOP Dmytro Nedilskyi"": 5,
    ""Xhostis"": 1,
    ""Ucloud Information Technology"": 3,
    ""Vdsline"": 1,
    ""TelecomGroup"": 1323,
    ""Horizon LLC"": 3,
    ""Akamai Technologies, Inc."": 1,
    ""OVH Ltd"": 275,
    ""China Mobile Communications Corporation"": 1,
    ""Dmitriy Panchenko"": 3,
    ""Censys, Inc"": 1,
    ""Palo Alto Networks, Inc"": 3,
    ""Alviva Holding Limited"": 2,
    ""Proton66 LLC"": 3,
    ""Hathway Cable and Datacom Limited"": 384,
    ""Turk Telekomunikasyon A.S"": 1,
    ""FUFO Studio"": 3,
    ""BlackHOST Ltd."": 1
  },
  ""regionName"": {
    ""St.-Petersburg"": 166,
    ""Hesse"": 1,
    ""Mariehamns stad"": 1,
    ""Central and Western District"": 6,
    ""Ho Chi Minh"": 12,
    ""Chechnya"": 1,
    ""North Holland"": 9,
    ""California"": 6,
    ""England"": 280,
    ""South West"": 4,
    ""Maharashtra"": 390,
    ""Moscow"": 15,
    ""Beijing"": 16,
    ""Guangdong"": 112,
    ""Shandong"": 10,
    ""Zhejiang"": 2,
    ""Taipei City"": 3,
    ""Provincia de Panama"": 1,
    ""Blagoevgrad"": 1323,
    ""Ontario"": 1,
    ""Illinois"": 1,
    ""Perm Krai"": 3,
    ""Michigan"": 1,
    ""Shanghai"": 2,
    ""Istanbul"": 1,
    ""Mazovia"": 3
  },
  ""country"": {
    ""Russia"": 185,
    ""Germany"": 1,
    ""Aland Islands"": 1,
    ""Hong Kong"": 6,
    ""Vietnam"": 12,
    ""Netherlands"": 9,
    ""United States"": 8,
    ""United Kingdom"": 280,
    ""Singapore"": 4,
    ""India"": 390,
    ""China"": 142,
    ""Taiwan"": 3,
    ""Panama"": 1,
    ""Bulgaria"": 1323,
    ""Canada"": 1,
    ""Turkey"": 1,
    ""Poland"": 3
  },
  ""account"": {
    ""hello"": 2323,
    ""(empty)"": 3,
    ""Administr"": 17,
    ""root"": 2,
    ""Domain"": 19,
    ""beio"": 1,
    ""Test"": 2,
    ""zEblksBzi"": 1,
    ""cdBoyh"": 1,
    ""ZurOrJ"": 1
  },
  ""keyboard"": {
    ""Unknown"": 2370
  },
  ""client_build"": {
    ""Unknown"": 2370
  },
  ""client_name"": {
    ""Unknown"": 2370
  },
  ""ip_type"": {
    ""Unknown"": 1932,
    ""hosting"": 433,
    ""hosting & proxy"": 4,
    ""mobile"": 1
  }
}"
2qQ9FTzw,initrd1.xz finit squashfs overlay limit order,plirof2,JavaScript,Saturday 5th of August 2023 07:11:41 PM CDT,"https://forum.puppylinux.com/viewtopic.php?f=46&t=1857&start=230

Fix initrd1 finit to avoid overlay limits
https://forum.puppylinux.com/search.php?keywords=newinitrd&t=1857&sf=msgonly&sid=644d7e18713b4db52ac6333155826141


=====================
If you want you can change that by modifying initrd1.xz:

Extract initrd1.xz from standing in the 'live' dir:

mkdir newinitrd        # make dir where the extracted files go
cd newinitrd         # go inside newinitrd directory
xz -dc ../initrd1.xz | cpio -i        # extract  ../initrd1.xz
Open inside newinitrd ""linuxrc"" with texteditor, find the line ""let y=x+20"" (line 419) and change 20 to e.g. 255
let y=x+255

Create new initrd1.xz (note: will overwrite existing in live dir):

CODE: SELECT ALL

cd newinitrd   # or open terminal in newinitrd dir.
find . -print | cpio -o -H newc 2>/dev/null | xz -f --extreme --check=crc32 > ../initrd1.xz

==================


1) Truncates names of the module mountpoints (to 10 chars, change the 10 at NAME=""${NAME:0:10}"" near the bottom of finit if you like less or more.
One disadvantage may be problem if 2 or more modules begin with the same 10 chars, it might happen, in that case any duplicate will be skipped,
advantage compared to 2) is that you can see a little which module is which, but that is of course the first 10 chars only though)
finit-truncate.gz (rename to finit)

2) Changes the names of the module mountpoints to sequenced number (similar as in above posts, but no symlinks needed)
finit-numbered.gz (rename to finit)

With both ways the modules can be in ""live"" just as it normally used to be before, and the advantage compared to the symlink method is that it should work on FAT32 too.

Other option may be a combination of the two, truncated names numbered in sequence, didn't try that (yet?)

Fred"
uSSZcAuL,[F2U] Home: Blue Version,henrybirde,HTML,Saturday 5th of August 2023 06:46:42 PM CDT,"    <!--
========================================    
    [HOME: A CODE BY GHOULIPEDE]
 
    MAIN COLOR:      #6ac4ff
    ACCENT 1:        white
    ACCENT 2:        #282525
========================================    
    -->





<!--==========
[ MAIN BOX ]
===========-->
<div class=""row justify-content-center"" style=""font-family:ms gothic; font-size:1rem; margin-top:75px"">
<div class=""col-xl-9"">
<div class=""card"" style=""background:#6ac4ff; color:black;  border-radius:15px; border:3px solid #282525; padding:5px;"">
<div class=""row"">
    


    <!--==========
    [ LEFT COLUMN ]
    ===========-->
    <div class=""col-lg-3 pr-lg-1"">


        <!--==========
        [ BULLETINS ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
    
        <p class=""text-left"" style=""font-size:1.1rem; ""><img src=""https://i.imgur.com/n8UkyaR.gif"" class=""mx-1 mb-2"">BULLETINS</p>
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        <div class=""py-2 pr-3"" style=""overflow-y:auto; overflow-x:hidden; height:250px; font-size:.9rem""><ul class=""fa-ul mb-2"" style=""margin: 0px 0px 0px 12px;"">
                
                
        		<li class=""mb-2""><i class=""mr-1  fal fa-thumbtack fa-fw""></i>
        		<a style=""color:#6ac4ff"" href=""PINNED_POST_LINK"">PINNED POST</a></li>
        		
        		
        		<li class=""mb-2""><i class=""mr-1 "">00.00</i> Update / Announcement of some kind goes here !</li>
        		
        		<li class=""mb-2""><i class=""mr-1 "">00.00</i> Update / Announcement of some kind goes here !</li>
        		
        		<li class=""mb-2""><i class=""mr-1 "">00.00</i> Update / Announcement of some kind goes here !</li>
        		
        		<li class=""mb-2""><i class=""mr-1 "">00.00</i> Update / Announcement of some kind goes here !</li>
        		
        
        </ul></div><span><hr class=""my-1 mx-2""></span>
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        
        </div>
        <!--==========
        [ END BULLETINS ]
        ===========-->


    
        <!--==========
        [ LINKS ]
        ===========-->
        <div class=""card mt-2 text-left mb-lg-0 mb-sm-5"" style=""font-size:.9rem; background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <p class=""text-left"" style=""font-size:1.1rem; ""><img src=""https://i.imgur.com/PXL2Pvp.gif"" class=""mx-1 mb-2"">LINKS</p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        <div class="""" style=""overflow-y:auto; overflow-x:hidden; height:175px; font-size:.9rem"">
                
                
            <a href=""COMMISSIONS_LINK"" style=""margin-bottom:1px; color:#6ac4ff""> <img src=""https://i.imgur.com/mJogEZi.gif"" class=""mt-n1"">
            COMMISSIONS </a><br>
            
            
            <a href=""ART_LINK"" style=""margin-bottom:1px; color:#6ac4ff""> <img src=""https://i.imgur.com/mJogEZi.gif"" class=""mt-n1"">
            ART </a><br>
            
            
            <a href=""DESIGNS_LINK"" style=""margin-bottom:1px; color:#6ac4ff""> <img src=""https://i.imgur.com/mJogEZi.gif"" class=""mt-n1""> 
            DESIGNS </a><br>
            
            
            <a href=""QUEUE_LINK"" style=""margin-bottom:1px; color:#6ac4ff""> <img src=""https://i.imgur.com/mJogEZi.gif"" class=""mt-n1""> 
            QUEUE </a><br>
            
            
            <a href=""DEVIANTART_LINK"" style=""margin-bottom:1px; color:#6ac4ff""> <img src=""https://i.imgur.com/mJogEZi.gif"" class=""mt-n1""> 
            DEVIANTART </a><br>
            
            
            <a href=""DEVIANTART_LINK"" style=""margin-bottom:1px; color:#6ac4ff""> <img src=""https://i.imgur.com/mJogEZi.gif"" class=""mt-n1""> 
            TUMBLR </a><br>
            
            
            <a href=""DEVIANTART_LINK"" style=""margin-bottom:1px; color:#6ac4ff""> <img src=""https://i.imgur.com/mJogEZi.gif"" class=""mt-n1""> 
            INSTRAGRAM </a><br>
            
            
            <a href=""DEVIANTART_LINK"" style=""margin-bottom:1px; color:#6ac4ff""> <img src=""https://i.imgur.com/mJogEZi.gif"" class=""mt-n1""> 
            TWITTER </a><br>
            
            
            </div>
            <div class=""my-1"" style=""border-bottom:double black;""></div>
        </div>
        <!--==========
        [ END LINK ]
        ===========-->
        
        
        
        <!--==========
        [ CREDIT ]
        ===========-->
        <div class=""card mt-2 text-left mb-lg-0 mb-sm-5"" style=""font-size:.9rem; background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <a href=""https://toyhou.se/ghoulipede"" class=""text-center"" style=""font-size:1.1rem; color:#282525""> CODE BY GHOULIPEDE</a>
        </div>
        <!--==========
        [ END CREDIT ]
        ===========-->


    </div>
    <!--==========
    [ END LEFT COLUMN ]
    ===========-->



    <!--==========
    [ CENTER COLUMN ]
    ===========-->
    <div class=""col-lg-6 px-lg-1"">
    
    
        
        <!--==========
        [ USERNAME ]
        ===========-->
        <div class=""text-center mt-lg-n5"" style=""font-size:3.5rem; text-shadow: -1px 1px 0px #6ac4ff; background:white; margin:10px 10%; border-radius: 25px 0px; border:1px solid #282525"">
        
        USERNAME
    
        </div>
        <!--==========
        [ END USERNAME ]
        ===========-->
    
    
        <!--==========
        [ ABOUT ]
        ===========-->
        <div class=""card mt-1"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        
        
            <p class=""ml-3 mt-1 text-center"" style=""letter-spacing:2px; text-transform:uppercase; font-size:1.3rem; z-index:1000"">
            
            NAME // PRONOUNS // ETC
            
            </p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        

            <div class=""row no-gutters""><div class=""px-3"" style=""height:125px; overflow-y:auto; "">
            <p class=""mb-1"">
                
            Write a bit about yourself here! This box scrolls, so don't worry about making it too long. In fact, can you even come up with enough about yourself to fill this thing? I always have a hard time knowing what to say. I'm sure you can manage, though! I made the font extra big just to be safe!
                
            <p>        
            </div></div>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        </div>
        <!--==========
        [ END ABOUT ]
        ===========-->


        <!--==========
        [ GENERAL LIKES ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <span>
        <p class=""text-left"" style=""font-size:1.1rem;""><img src=""https://i.imgur.com/hA8AFbB.gif"" class=""mx-1"">STUFF I WONT SHUT UP ABOUT</p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
            
            
        <div style=""overflow-y:auto; height:50px"">
            
        // a thing you like
        // maybe a color
        // or an animal
        // or a hobby
        // or a genre
        // or an object
        // or an aesthetic
        // or something else
        //
        
        </div>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        </span></div>
        <!--==========
        [ END GENERAL LIKES ]
        ===========-->


        <!--==========
        [ MEDIA LIKES ]
        ===========-->
        <div class=""card mt-2 text-right"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <span>
        <p class="""" style=""font-size:1.1rem;"">MEDIA THAT MAKES ME SO NORMAL<img src=""https://i.imgur.com/Wrfsh6C.gif"" class=""mx-1""></p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        
        
        <div style=""overflow-y:auto; height:50px"">
            
        // some media you like
        // maybe a show
        // or an movie
        // or a game
        // or a book series
        // or a podcast
        // or something else
        //
        
        </div>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        </span></div>
        <!--==========
        [ END MEDIA LIKES ]
        ===========-->
    
    
        <!--==========
        [ CHARACTER LIKES ]
        ===========-->
        <div class=""card mt-2"" style=""line-height:1.3; background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <span>
        <p class=""text-left"" style=""font-size:1.1rem;""><img src=""https://i.imgur.com/pVTc4LW.gif"" class=""mx-1"">CRINGEFAILURES THAT ARE JUST LIKE ME FR</p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
            
            
        <div class=""text-center mt-2 mx-lg-5 justify-content-between"">
            
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span>
        
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span> 
        
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span>
        
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span>
        
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span>
        
            
        </div>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        </span></div>
        <!--==========
        [ CHARACTER LIKES ]
        ===========-->
    
            
          
    
    

<!--END FADED BOX LEFT COLUMN--></div>
    <!--==========
    [ END CENTER COLUMN ]
    ===========-->



    <!--==========
    [ RIGHT COLUMN ]
    ===========-->
    <div class=""col-lg-3 pl-lg-1"">


        <!--==========
        [ FEATURED CHARACTER ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
    
    
        <div class=""text-center light"" style=""overflow-y:auto; overflow-x:hidden; max-height:175px;"">
    
        
            HAVE YOU SEEN HER?<br>
            
            <a href=""CHARACTER_LINK""><img src=""CHARACTER_IMAGE"" style=""max-width:105px; width:100%; margin:5px; border:black 1px solid""></a>
            
            <br>now you have :)
        
            </div>
            
            
        </div>    
        <!--==========
        [ END FEATURED CHARACTER ]
        ===========-->

    
        <!--==========
        [ FRIENDS ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <p class=""text-left"" style=""font-size:1.1rem;""><img src=""https://i.imgur.com/AhrTBS2.gif"" class=""mx-1"">FRIENDS</p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        <div class=""mx-auto text-center"" style=""overflow-y:auto; overflow-x:hidden; height:75px;"">
        
                
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/mhpbu8G.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/MTzfMeK.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/XTanWXg.gif"">NAME</a>
            
            <br>
            
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/TrbZhtv.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/c15Fx3x.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/8WJGb2a.gif"">NAME</a>
            
            <br>
            
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/9JRTuIG.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/L4p24aS.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#6ac4ff; border:#6ac4ff solid 1px""><img src=""https://i.imgur.com/oLoJoPR.gif"">NAME</a>
            
        
        </div>
        <div class=""my-1"" style=""border-bottom:double black;""></div></div>
        <!--==========
        [ END FRIENDS ]
        ===========-->
    
    
        <!--==========
        [ BLINKIES ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
    
    
        <div class=""text-center light"" style=""overflow-y:auto; overflow-x:hidden; max-height:275px;"">
        
        <img src=""https://i.imgur.com/rl5K5qr.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/YaJAeF3.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/fFkzied.gif"" style=""margin:1px; max-width:150px"">
        
        <img src=""https://i.imgur.com/pg0ZPyd.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/R6C98Hv.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/sHFShbT.gif"" style=""margin:1px; max-width:150px"">
        
        <img src=""https://i.imgur.com/SIpq4uS.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/2t6c3xd.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/FixgaCl.gif"" style=""margin:1px; max-width:150px"">
        
        <img src=""https://i.imgur.com/Gp9bLCG.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/OCftTqR.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/CNaBs7n.gif"" style=""margin:1px; max-width:150px"">
        
        </div>
       
       
       </div>
       <!--==========
        [ END BLINKIES ]
        ===========-->

   
    </div>
    <!--==========
    [ END RIGHT COLUMN ]
    ===========-->


</div>
</div>
</div>
</div>
<!--==========
[ END MAIN BOX ]
===========-->
"
1fPySRzq,Un coso para correr,NomanDi1,JSON,Saturday 5th of August 2023 06:30:51 PM CDT,"{

};"
r0bZFVys,cheet sheet Java,CR7CR7,Java,Saturday 5th of August 2023 06:27:10 PM CDT,"Maps - cheat sheet
1. Видове
а) HashMap -> редът на записите не е гарантиран
b) LinkedHashMap -> редът на поставянето на записите се запазва (първия поставен запис си остава на първо място)
c) TreeMap -> записите се сортират по ключ в лексикографски ред (ако ключовете са числа в ascending order, ако ключовете са тесктове/символи от a към z)
2. Основни функционалности
a) containsKey(key) -> проверява дали в map-а има запис с такъв ключ -> резултат true ако има, false ако няма
b) containsValue(value) -> проверява дали в map-а има запис с такова value -> резултат true ако има, false ако няма
c) keySet() -> връща всички ключове от всички записи
d) entrySet() -> връща всички записи
e) values() -> връща всички value-та от всички записи
f) get(ключ) -> връща стойността, която стои срещу дадения ключ
g) size() -> връща броя на записите
h) put(key, value) -> добавя запис с дадения ключ и стойност
i) putIfAbsent(key, value) -> добавя запис с дадения ключ и стойност, ако вече няма запис с такъв ключ
j) clear() -> премахва всички записи от map-a
k) remove(key) -> премахва запис с дадения ключ
l) remove(key, value) -> премахва запис с дадения ключ и стойност
 
 
Text Processing - Cheat Sheet
 String name = ""Valentin"";

        //1. дължина на текст = брой символи
        System.out.println(name.length());

        //2. само главни букви
        System.out.println(name.toUpperCase());

        //3. само с малки букви
        System.out.println(name.toLowerCase());

        //4. в масив от символи: ""Valentin"" -> ['V', 'a', 'l', 'e', 'n', 't', 'i', 'n']
        char [] symbols = name.toCharArray();

        //5. сравняване на текстове -> true, false
        System.out.println(""Valentin"".equals(name));
        System.out.println(""VaLENTIn"".equalsIgnoreCase(name)); //не прави разлика между малки и главни букви

        //6. достъпваме символ от текста
        //позиция (индекс) = 0 -> първия символ
        //позиция (индекс) = дължина на текст - 1 -> последния символ
        System.out.println(name.charAt(0));
        System.out.println(name.charAt(name.length() - 1));

        //7. съдържа определен текст -> true (ако се съдържа), false (ако не се съдържа)
        System.out.println(name.contains(""Val""));

        //8. започва с опеределен текст -> true (ако започва), false (ако не започва)
        System.out.println(name.startsWith(""Va""));

        //9. завършва на определен текст -> true (ако завършва), false (ако не завършва)
        System.out.println(name.endsWith(""tin""));

        //10. премахва интервалите в началото и края на текста
        System.out.println("" Valentin   "".trim());
 
     //11. заменя първото срещане на даден текст / символ

name = name.replace(""va"", ""ta""); //""Valentin"" -> ""Talentin""
name = name.replace('V', 'R'); //""Talentin"" -> ""Ralentin""
//12. заменя всички срещания на текста

name = name.replaceAll(""in"", ""ino""); //""Valentin"" -> ""Valeontino""
 
//13. повтаряме текста даден брой пъти

System.out.println(name.repeat(3)); //""ValeontinoValeontinoValeontino""
//14. текст, който е част от друг текст

//""Valeontino"" -> ""leontino""
System.out.println(name.substring(2));
//""Valeontino"" -> ""leont""
System.out.println(name.substring(2, 6));
 
        //EXAMPLE
        String test = ""I am enjoying programming"";
        System.out.println(test.substring(5, 13));
        String text = ""enjoying"";
        int index = test.indexOf(text); //индексът на първата буква на текста = 5
        System.out.println(test.substring(index, index + text.length()));
 
 
Chars - cheat sheet
char letter = 'T';
        int number = 66;
 
        System.out.println((int) letter); //ascii кода на моя символ
        System.out.println((char) number); //символа с дадения ascii код
 
        System.out.println('a' + 'c'); //int + int = int
        System.out.println("""" + 'a' + 'c'); //"""" + 'a' = ""a"" + 'c' = ""ac""
 
 
Regular Expressions - cheat sheet
 
Основен синтаксис:
[A-Z] - една главна буква (аски код от 65 до 90)
[a-z] - една малка буква (аски код от 97 до 120)
[0-9] - една цифра [0-9] (аски код от 48 до 57)
[A-Za-z] - една буква, която или е малка, или е голяма
[aeiou] - всички гласни букви
[^aeiou] - всички съгласни букви
\w - един символ, който може да е малка буква, главна буква, цифра или _
\W - един символ, различен от малка буква, главна буква, цифра или _
\s - един интервал
\S - един символ, различен от интервал
\d - една цифра [0-9] (аски код от 48 до 57)
\D - един символ, различен от цифра
 
Брой на срещанията:
* -> срещания 0 или безброй много пъти
+ -> срещания 1 или безброй много пъти
? -> срещания 0 или 1 пъти
{число} -> срещания {число} пъти
{число, } -> минимум колко пъти 
{число1, число2} -> минимум се среща число1 пъти, максимум се среща число2 брой пъти
() -> обособяваме група
(?<name> шаблон) -> обособяваме група с име
 
Използване в Java:
String text = scanner.nextLine();
String regex = ""\\b[A-Z][a-z]+ [A-Z][a-z]+\\b""; //текст на шаблона
Pattern pattern = Pattern.compile(regex); // шаблон
Matcher matcher = pattern.matcher(text); //текстовете от променливата text, които отговарят на шаблона
"
sTV1udaM,invtest,rungholt,Lua,Saturday 5th of August 2023 06:23:12 PM CDT,"local chest = peripheral.find(""sc-goodies:diamond_chest"")
local total = 0
local itemDetail = chest.getItemDetail(1)

for slot, item in pairs(chest.list()) do
  print((""%d x %s in slot %d""):format(item.count, item.name, slot))
end
print(chest.size())
for i = 1, chest.size() do
    total = total + chest.getItemLimit(i)
end
print(""Free:"", (total))

if not itemDetail then print(""No item"") return end

print((""%s (%s)""):format(itemDetail.displayName, itemDetail.name))
print((""Count: %d/%d""):format(itemDetail.count, itemDetail.maxCount))

if itemDetail.damage then
  print((""Damage: %d/%d""):format(itemDetail.damage, itemDetail.maxDamage))
end"
GFVaBVjW,watch_queue compilation,DataPlusPlus,JSON,Saturday 5th of August 2023 06:22:50 PM CDT,"{
  ""arguments"": [
    ""/usr/bin/gcc"",
    ""-Wp,-MMD,kernel/.watch_queue.o.d"",
    ""-nostdinc"",
    ""-I./arch/x86/include"",
    ""-I./arch/x86/include/generated"",
    ""-I./include"",
    ""-I./arch/x86/include/uapi"",
    ""-I./arch/x86/include/generated/uapi"",
    ""-I./include/uapi"",
    ""-I./include/generated/uapi"",
    ""-include"",
    ""./include/linux/compiler-version.h"",
    ""-include"",
    ""./include/linux/kconfig.h"",
    ""-include"",
    ""./include/linux/compiler_types.h"",
    ""-D__KERNEL__"",
    ""-Werror"",
    ""-fmacro-prefix-map=./="",
    ""-std=gnu11"",
    ""-fshort-wchar"",
    ""-funsigned-char"",
    ""-fno-common"",
    ""-fno-PIE"",
    ""-fno-strict-aliasing"",
    ""-Wall"",
    ""-Wundef"",
    ""-Werror=implicit-function-declaration"",
    ""-Werror=implicit-int"",
    ""-Werror=return-type"",
    ""-Werror=strict-prototypes"",
    ""-Wno-format-security"",
    ""-Wno-trigraphs"",
    ""-mno-sse"",
    ""-mno-mmx"",
    ""-mno-sse2"",
    ""-mno-3dnow"",
    ""-mno-avx"",
    ""-fcf-protection=branch"",
    ""-fno-jump-tables"",
    ""-m64"",
    ""-falign-jumps=1"",
    ""-falign-loops=1"",
    ""-mno-80387"",
    ""-mno-fp-ret-in-387"",
    ""-mpreferred-stack-boundary=3"",
    ""-mskip-rax-setup"",
    ""-mtune=generic"",
    ""-mno-red-zone"",
    ""-mcmodel=kernel"",
    ""-Wno-sign-compare"",
    ""-fno-asynchronous-unwind-tables"",
    ""-mindirect-branch=thunk-extern"",
    ""-mindirect-branch-register"",
    ""-mindirect-branch-cs-prefix"",
    ""-mfunction-return=thunk-extern"",
    ""-fno-jump-tables"",
    ""-fpatchable-function-entry=16,16"",
    ""-fno-delete-null-pointer-checks"",
    ""-Wno-frame-address"",
    ""-Wno-format-truncation"",
    ""-Wno-format-overflow"",
    ""-Wno-address-of-packed-member"",
    ""-O2"",
    ""-fno-allow-store-data-races"",
    ""-Wframe-larger-than=2048"",
    ""-fstack-protector-strong"",
    ""-Wno-main"",
    ""-Wno-unused-but-set-variable"",
    ""-Wno-unused-const-variable"",
    ""-Wno-dangling-pointer"",
    ""-fomit-frame-pointer"",
    ""-ftrivial-auto-var-init=zero"",
    ""-fno-stack-clash-protection"",
    ""-falign-functions=16"",
    ""-Wvla"",
    ""-Wno-pointer-sign"",
    ""-Wcast-function-type"",
    ""-fstrict-flex-arrays=3"",
    ""-Wno-stringop-truncation"",
    ""-Wno-stringop-overflow"",
    ""-Wno-restrict"",
    ""-Wno-maybe-uninitialized"",
    ""-Wno-array-bounds"",
    ""-Wno-alloc-size-larger-than"",
    ""-Wimplicit-fallthrough=5"",
    ""-fno-strict-overflow"",
    ""-fno-stack-check"",
    ""-fconserve-stack"",
    ""-Werror=date-time"",
    ""-Werror=incompatible-pointer-types"",
    ""-Werror=designated-init"",
    ""-Wno-packed-not-aligned"",
    ""-DKBUILD_MODFILE=\""kernel/watch_queue\"""",
    ""-DKBUILD_BASENAME=\""watch_queue\"""",
    ""-DKBUILD_MODNAME=\""watch_queue\"""",
    ""-D__KBUILD_MODNAME=kmod_watch_queue"",
    ""-c"",
    ""-o"",
    ""kernel/watch_queue.o"",
    ""kernel/watch_queue.c""
  ],
  ""directory"": ""/home/data/programming/linux"",
  ""file"": ""/home/data/programming/linux/kernel/watch_queue.c"",
  ""output"": ""/home/data/programming/linux/kernel/watch_queue.o""
}"
EKtH73CX,temptychest,rungholt,Lua,Saturday 5th of August 2023 05:30:22 PM CDT,"local function setupChest()
    turtle.select(1)
    turtle.placeUp()
end

local function itemsIn()
    for i = 1, 16 do
        turtle.select(i)
        turtle.suck()
    end
    turtle.select(1)
end

local function itemsOut()
    for i = 1, 16 do
        turtle.select(i)
        turtle.dropUp()
    end
    turtle.select(1)
end

local function start()
    setupChest()
    for i = 1, 8 do
        itemsIn()
        itemsOut()
    end
end

start()"
PyVYAYaL,Pronombres de usuario,NecromancerCoding,jQuery,Saturday 5th of August 2023 05:19:31 PM CDT,"$(function(){
/* Editable */
var campoPerfil = '.psfield';
var campoPerfilLabel = '.psflabel';
var campoPerfilContent = '.psfcontent';
var welcomeMessage = '.welcome-message';
var pronouns = 'Pronombres';
var masc = 'Masculinos';
var fem = 'Femeninos';
var neut = 'Neutros';
var mascPronouns = 'o';
var femPronouns = 'a';
var neutPronouns = 'e';
var nullPronouns = '@';

/* No edites a partir de aquí */

$(welcomeMessage).each(function(){
var self = $(this);
$.get('/u'+_userdata.user_id, function(data) {
var selected = $(data).find(campoPerfilLabel+':contains('+pronouns+')').parents(campoPerfil).find(campoPerfilContent+' .field_uneditable').text();
if (selected === masc) {
var pronounsSelected = mascPronouns;
} else if (selected === fem) {
var pronounsSelected = femPronouns;
} else if (selected === neut) {
var pronounsSelected = neutPronouns;
} else {
var pronounsSelected = nullPronouns;
}
$(self).attr('style','--pronoun:""'+pronounsSelected+'"";');
});

});

});"
7YnDGpgb,[F2U] Home: Pink Version,henrybirde,HTML,Saturday 5th of August 2023 05:13:42 PM CDT,"    <!--
========================================    
    [HOME: A CODE BY GHOULIPEDE]
 
    MAIN COLOR:      #ff6ad5
    ACCENT 1:        white
    ACCENT 2:        #282525
========================================    
    -->





<!--==========
[ MAIN BOX ]
===========-->
<div class=""row justify-content-center"" style=""font-family:ms gothic; font-size:1rem; margin-top:75px"">
<div class=""col-xl-9"">
<div class=""card"" style=""background:#ff6ad5; color:black;  border-radius:15px; border:3px solid #282525; padding:5px;"">
<div class=""row"">
    


    <!--==========
    [ LEFT COLUMN ]
    ===========-->
    <div class=""col-lg-3 pr-lg-1"">


        <!--==========
        [ BULLETINS ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
    
        <p class=""text-left"" style=""font-size:1.1rem; ""><img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656808650911854/29.gif"" class=""mx-1 mb-2"">BULLETINS</p>
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        <div class=""py-2 pr-3"" style=""overflow-y:auto; overflow-x:hidden; height:250px; font-size:.9rem""><ul class=""fa-ul mb-2"" style=""margin: 0px 0px 0px 12px;"">
                
                
        		<li class=""mb-2""><i class=""mr-1  fal fa-thumbtack fa-fw""></i>
        		<a style=""color:#ff6ad5"" href=""PINNED_POST_LINK"">PINNED POST</a></li>
        		
        		
        		<li class=""mb-2""><i class=""mr-1 "">00.00</i> Update / Announcement of some kind goes here !</li>
        		
        		<li class=""mb-2""><i class=""mr-1 "">00.00</i> Update / Announcement of some kind goes here !</li>
        		
        		<li class=""mb-2""><i class=""mr-1 "">00.00</i> Update / Announcement of some kind goes here !</li>
        		
        		<li class=""mb-2""><i class=""mr-1 "">00.00</i> Update / Announcement of some kind goes here !</li>
        		
        
        </ul></div><span><hr class=""my-1 mx-2""></span>
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        
        </div>
        <!--==========
        [ END BULLETINS ]
        ===========-->


    
        <!--==========
        [ LINKS ]
        ===========-->
        <div class=""card mt-2 text-left mb-lg-0 mb-sm-5"" style=""font-size:.9rem; background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <p class=""text-left"" style=""font-size:1.1rem; ""><img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1038611136955826267/31.gif"" class=""mx-1 mb-2"">LINKS</p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        <div class="""" style=""overflow-y:auto; overflow-x:hidden; height:175px; font-size:.9rem"">
                
                
            <a href=""COMMISSIONS_LINK"" style=""margin-bottom:1px; color:#ff6ad5""> <img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656805333209139/21.gif"" class=""mt-n1"">
            COMMISSIONS </a><br>
            
            
            <a href=""ART_LINK"" style=""margin-bottom:1px; color:#ff6ad5""> <img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656805333209139/21.gif"" class=""mt-n1"">
            ART </a><br>
            
            
            <a href=""DESIGNS_LINK"" style=""margin-bottom:1px; color:#ff6ad5""> <img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656805333209139/21.gif"" class=""mt-n1""> 
            DESIGNS </a><br>
            
            
            <a href=""QUEUE_LINK"" style=""margin-bottom:1px; color:#ff6ad5""> <img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656805333209139/21.gif"" class=""mt-n1""> 
            QUEUE </a><br>
            
            
            <a href=""DEVIANTART_LINK"" style=""margin-bottom:1px; color:#ff6ad5""> <img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656805333209139/21.gif"" class=""mt-n1""> 
            DEVIANTART </a><br>
            
            
            <a href=""DEVIANTART_LINK"" style=""margin-bottom:1px; color:#ff6ad5""> <img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656805333209139/21.gif"" class=""mt-n1""> 
            TUMBLR </a><br>
            
            
            <a href=""DEVIANTART_LINK"" style=""margin-bottom:1px; color:#ff6ad5""> <img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656805333209139/21.gif"" class=""mt-n1""> 
            INSTRAGRAM </a><br>
            
            
            <a href=""DEVIANTART_LINK"" style=""margin-bottom:1px; color:#ff6ad5""> <img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1071656805333209139/21.gif"" class=""mt-n1""> 
            TWITTER </a><br>
            
            
            </div>
            <div class=""my-1"" style=""border-bottom:double black;""></div>
        </div>
        <!--==========
        [ END LINK ]
        ===========-->
        
        
        
        <!--==========
        [ CREDIT ]
        ===========-->
        <div class=""card mt-2 text-left mb-lg-0 mb-sm-5"" style=""font-size:.9rem; background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <a href=""https://toyhou.se/ghoulipede"" class=""text-center"" style=""font-size:1.1rem; color:#282525""> CODE BY GHOULIPEDE</a>
        </div>
        <!--==========
        [ END CREDIT ]
        ===========-->


    </div>
    <!--==========
    [ END LEFT COLUMN ]
    ===========-->



    <!--==========
    [ CENTER COLUMN ]
    ===========-->
    <div class=""col-lg-6 px-lg-1"">
    
    
        
        <!--==========
        [ USERNAME ]
        ===========-->
        <div class=""text-center mt-lg-n5"" style=""font-size:3.5rem; text-shadow: -1px 1px 0px #ff6ad5; background:white; margin:10px 10%; border-radius: 25px 0px; border:1px solid #282525"">
        
        USERNAME
    
        </div>
        <!--==========
        [ END USERNAME ]
        ===========-->
    
    
        <!--==========
        [ ABOUT ]
        ===========-->
        <div class=""card mt-1"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        
        
            <p class=""ml-3 mt-1 text-center"" style=""letter-spacing:2px; text-transform:uppercase; font-size:1.3rem; z-index:1000"">
            
            NAME // PRONOUNS // ETC
            
            </p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        

            <div class=""row no-gutters""><div class=""px-3"" style=""height:125px; overflow-y:auto; "">
            <p class=""mb-1"">
                
            Describe yourself!
                
            <p>        
            </div></div>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        </div>
        <!--==========
        [ END ABOUT ]
        ===========-->


        <!--==========
        [ GENERAL LIKES ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <span>
        <p class=""text-left"" style=""font-size:1.1rem;""><img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1038611138092470313/34.gif"" class=""mx-1"">STUFF I WONT SHUT UP ABOUT</p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
            
            
        <div style=""overflow-y:auto; height:50px"">
            
        // a thing you like
        // maybe a color
        // or an animal
        // or a hobby
        // or a genre
        // or an object
        // or an aesthetic
        // or something else
        //
        
        </div>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        </span></div>
        <!--==========
        [ END GENERAL LIKES ]
        ===========-->


        <!--==========
        [ MEDIA LIKES ]
        ===========-->
        <div class=""card mt-2 text-right"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <span>
        <p class="""" style=""font-size:1.1rem;"">MEDIA THAT MAKES ME SO NORMAL<img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1038574007487828028/45.gif"" class=""mx-1""></p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        
        
        <div style=""overflow-y:auto; height:50px"">
            
        // some media you like
        // maybe a show
        // or an movie
        // or a game
        // or a book series
        // or a podcast
        // or something else
        //
        
        </div>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        </span></div>
        <!--==========
        [ END MEDIA LIKES ]
        ===========-->
    
    
        <!--==========
        [ CHARACTER LIKES ]
        ===========-->
        <div class=""card mt-2"" style=""line-height:1.3; background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <span>
        <p class=""text-left"" style=""font-size:1.1rem;""><img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1075641221743116319/9.gif"" class=""mx-1"">CRINGEFAILURES THAT ARE JUST LIKE ME FR</p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
            
            
        <div class=""text-center mt-2 mx-lg-5 justify-content-between"">
            
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span>
        
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span> 
        
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span>
        
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span>
        
        <span class=""tooltipster"" title=""CHARACTER (MEDIA)"">
        <img src=""CHARACTER_IMAGE_LINK"" style=""width:75px""></span>
        
            
        </div>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        </span></div>
        <!--==========
        [ CHARACTER LIKES ]
        ===========-->
    
            
          
    
    

<!--END FADED BOX LEFT COLUMN--></div>
    <!--==========
    [ END CENTER COLUMN ]
    ===========-->



    <!--==========
    [ RIGHT COLUMN ]
    ===========-->
    <div class=""col-lg-3 pl-lg-1"">


        <!--==========
        [ FEATURED CHARACTER ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
    
    
        <div class=""text-center light"" style=""overflow-y:auto; overflow-x:hidden; max-height:175px;"">
    
        
            HAVE YOU SEEN HIM?<br>
            
            <a href=""CHARACTER_LINK""><img src=""CHARACTER_IMAGE"" style=""max-width:105px; width:100%; margin:5px; border:black 1px solid""></a>
            
            <br>now you have :)
        
            </div>
            
            
        </div>    
        <!--==========
        [ END FEATURED CHARACTER ]
        ===========-->

    
        <!--==========
        [ FRIENDS ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
        <p class=""text-left"" style=""font-size:1.1rem;""><img src=""https://cdn.discordapp.com/attachments/1030573933403062282/1075641219474014249/2.gif"" class=""mx-1"">FRIENDS</p>
        
        
        <div class=""my-1"" style=""border-bottom:double black;""></div>
        <div class=""mx-auto text-center"" style=""overflow-y:auto; overflow-x:hidden; height:75px;"">
        
                
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/EB8k3cD.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/ZKogrD1.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/StnhiHc.gif"">NAME</a>
            
            <br>
            
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/OYbsXFb.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/G4TjEmo.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/T59vhSI.gif"">NAME</a>
            
            <br>
            
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/X1hJSjD.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/nGhu49w.gif"">NAME</a>
            
            <a href=""FRIEND_LINK"" style=""color:#ff6ad5; border:#ff6ad5 solid 1px""><img src=""https://i.imgur.com/80XRGW9.gif"">NAME</a>
            
        
        </div>
        <div class=""my-1"" style=""border-bottom:double black;""></div></div>
        <!--==========
        [ END FRIENDS ]
        ===========-->
    
    
        <!--==========
        [ BLINKIES ]
        ===========-->
        <div class=""card mt-2"" style=""background-color:white; color:black; border:1px solid #282525; padding:5px;"">
    
    
        <div class=""text-center light"" style=""overflow-y:auto; overflow-x:hidden; max-height:275px;"">
        
        <img src=""https://i.imgur.com/UzJxRip.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/dpbzZkS.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/kqAIYwA.gif"" style=""margin:1px; max-width:150px"">
        
        <img src=""https://i.imgur.com/LQuPbfL.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/pZpQ3iz.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/EJ14ytF.gif"" style=""margin:1px; max-width:150px"">
        
        <img src=""https://i.imgur.com/coTADpD.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/yMpJSpq.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/EQGmcUF.gif"" style=""margin:1px; max-width:150px"">
        
        <img src=""https://i.imgur.com/oJ1mAUW.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/9WKXou9.gif"" style=""margin:1px; max-width:150px"">
        <img src=""https://i.imgur.com/iIUoBNl.gif"" style=""margin:1px; max-width:150px"">
        
        </div>
       
       
       </div>
       <!--==========
        [ END BLINKIES ]
        ===========-->

   
    </div>
    <!--==========
    [ END RIGHT COLUMN ]
    ===========-->


</div>
</div>
</div>
</div>
<!--==========
[ END MAIN BOX ]
===========-->
"
CisRvCLg,tlavadrop,rungholt,Lua,Saturday 5th of August 2023 04:43:19 PM CDT,"local function setupLava()
    turtle.digDown()
    turtle.down()
    turtle.digDown()
    turtle.select(16)
    turtle.placeDown()
    turtle.select(1)
    turtle.up()
end

local function itemsIn()
    for i = 1, 15 do
        turtle.select(i)
        turtle.suck()
    end
end

local function itemsOut()
    for i = 1, 15 do
        turtle.select(i)
        turtle.dropDown()
    end
    turtle.select(1)
end

local function getBackLava()
    turtle.down()
    turtle.select(16)
    turtle.placeDown()
    turtle.select(1)
    turtle.up()
    turtle.up()
end

local function start()
    setupLava()
    for i = 1, 8 do
        itemsIn()
        itemsOut()
    end
    getBackLava()
end

start()"
U6AK4TKC,[ROBLOX STUDIO] Adaptive Module,Rexils,Lua,Saturday 5th of August 2023 04:31:50 PM CDT,"-- LET'S SPEED UP PRODUCTION TIME BOIS.
-- ---
-- Version: 1.0.0 ; #Functions -> 16-18

local TweenService = game:GetService(""TweenService"")
local DebrisService = game:GetService(""Debris"")

local AdaptiveModule = {};

AdaptiveModule.World = {};
AdaptiveModule.Model = {};
AdaptiveModule.ParticleEmitter = {};

--------------------------

function AdaptiveModule.ParticleEmitter.TweenTransparency(p: {ParticleEmitter}, goalTransparency: number, tweenInfoOrUpdateRate: TweenInfo?)
	p = (type(p) == ""table"" and p) or {p}
	tweenInfoOrUpdateRate = (type(tweenInfoOrUpdateRate) == ""number"" and TweenInfo.new(tweenInfoOrUpdateRate, Enum.EasingStyle.Linear)) or tweenInfoOrUpdateRate
	
	local prop = {Value = goalTransparency}
	for i, v in ipairs(p) do
		local a = Instance.new(""NumberValue"")
		local c;

		a.Value = v.Transparency.Keypoints[1].Value

		local isChanging = false
		c = a.Changed:Connect(function()
			if isChanging then return end
			isChanging = true
			v.Transparency = NumberSequence.new(a.Value)
			isChanging = false
		end)

		local tss = TweenService:Create(a, tweenInfoOrUpdateRate, prop)

		local b;

		b = tss.Completed:Connect(function()
			c:Disconnect()
			a:Destroy()
			b:Disconnect()
		end)

		tss:Play()
	end
end
function AdaptiveModule.ParticleEmitter.TweenColor(p: {ParticleEmitter}, goalColor: Color3, tweenInfoOrUpdateRate: TweenInfo?)
	p = (type(p) == ""table"" and p) or {p}
	tweenInfoOrUpdateRate = (type(tweenInfoOrUpdateRate) == ""number"" and TweenInfo.new(tweenInfoOrUpdateRate, Enum.EasingStyle.Linear)) or tweenInfoOrUpdateRate
	
	local prop = {Value = goalColor}
	for i, v in ipairs(p) do
		local a = Instance.new(""Color3Value"")
		local c;
		
		a.Value = v.Color.Keypoints[1].Value
		
		local isChanging = false
		c = a.Changed:Connect(function()
			if isChanging then return end
			isChanging = true
			v.Color = ColorSequence.new(a.Value)
			isChanging = false
		end)
		
		local tss = TweenService:Create(a, tweenInfoOrUpdateRate, prop)

		local b;

		b = tss.Completed:Connect(function()
			c:Disconnect()
			a:Destroy()
			b:Disconnect()
		end)

		tss:Play()
	end
end

--------------------------
function AdaptiveModule.World.AddHitbox(parent: BasePart, hitboxProperties: {[""Type""]: string?, [""SizeRatio""]: number?, [""TouchDelay""]: number?, [""GlobalTouchDelay""]: number?, [""TouchedWorldInstancesDatastoreResetTime""]: number, Whitelist: {any}}, onInstanceCreated: (hitbox: Part) -> nil): {[""SetPositionWithWeldCFrame""]: (cfram: CFrame) -> self, [""OnTouchedOrIntersecting""]: (callback: (touched: Part, lastTouched: number) -> nil) -> self, [""GetHitbox""]: () -> Part, [""Destroy""]: () -> nil}
	hitboxProperties = hitboxProperties or {}
	hitboxProperties.Type = (hitboxProperties.Type or ""general""):lower()
	-- there are General, and Character types.
	hitboxProperties.SizeRatio = hitboxProperties.SizeRatio or 1
	hitboxProperties.TouchDelay = hitboxProperties.TouchDelay or 0.003
	hitboxProperties.GlobalTouchDelay = hitboxProperties.GlobalTouchDelay or 0.003
	hitboxProperties.Whitelist = hitboxProperties.Whitelist or {}
	hitboxProperties.TouchedWorldInstancesDatastoreResetTime = hitboxProperties.TouchedWorldInstancesDatastoreResetTime or 60
	-- the property above manages hash garbage
	
	local _methods
	local _connections = {}
	local _touchDelayBook = {}
	
	local _alive = true
	
	local hitbox = Instance.new(""Part"")
	hitbox.Size = parent.Size * hitboxProperties.SizeRatio
	hitbox.Transparency = 0.5 -- testing
	hitbox.Anchored = false
	hitbox.CanCollide = false
	
	if onInstanceCreated then
		onInstanceCreated(hitbox)
	end
	
	table.insert(_connections, parent:GetPropertyChangedSignal(""Size""):Connect(function()
		if not _alive then return end
		hitbox.Size = parent.Size * hitboxProperties.SizeRatio
	end))
	table.insert(_connections, parent.Destroying:Connect(function()
		if not _alive then return end
		_alive = false
		for _, v in ipairs(_connections) do
			v:Disconnect()
		end
	end))
	
	local onTouched;
	
	local function HitboxFunction(touchDelayBook)
		local _cleaning = false
		
		spawn(function()
			while _alive do
				if _cleaning then repeat wait() until not _cleaning end
				if not _alive then break end
				
				local isAllowedToProgress = true	
				
				for _, v in ipairs(hitbox:GetTouchingParts()) do
					local isWhiteListed = false		

					if hitboxProperties.Type == ""character"" then
						local _, result = pcall(function()
							local max_cycles = 4; -- how many parent instances to go through to find a humanoid and deem it a character.
							local cycles_done = 0;
							
							while not v:FindFirstChild(""Humanoid"") do
								v = v.Parent
								cycles_done+=1
								
								if cycles_done >= max_cycles then break end
							end
							
							local humanoid = v:FindFirstChild(""Humanoid"")
							
							if not humanoid then return false end
							return v -- most likely a character, or something possessing the ""Humanoid"" datatype
						end)
						
						if result then
							v = result
						else
							isAllowedToProgress = false
						end
					end
					
					if isAllowedToProgress then
						for _, b in ipairs(hitboxProperties.Whitelist) do
							if b == v then
								isWhiteListed = true
								break
							end
						end
						
						if not isWhiteListed then
							if (tick() - (touchDelayBook[v] or 0)) >= hitboxProperties.TouchDelay then
								if onTouched then
									onTouched(v, tick() - (touchDelayBook[v] or 0))
									touchDelayBook[v] = tick()
								end
							end
						end
					end
				end
				
				
				if isAllowedToProgress then
					wait(hitboxProperties.GlobalTouchDelay)
				end
			end
			
			for _, v in ipairs(_connections) do
				v:Disconnect()
			end
			hitbox:Destroy()
		end)
		
		spawn(function()
			while _alive do
				wait(hitboxProperties.TouchedWorldInstancesDatastoreResetTime)
				_cleaning = false
				
				for k in pairs(touchDelayBook) do
					touchDelayBook[k] = nil
					wait()
				end
				
				_cleaning = false
			end
		end)
	end
	
	table.insert(_connections, hitbox.Touched:Connect(function() end))
	local weld = AdaptiveModule.Weld(parent, hitbox, hitbox)		
	HitboxFunction(_touchDelayBook)
	
	hitbox.Parent = parent
	_methods = {
		SetPositionWithWeldCFrame = function(cframe: CFrame) -- relative to starting weld positional cframe, not 0, 0, 0
			assert(_alive, ""Hitbox is not alive and cannot be interacted with!"")
			weld.C1 = cframe
			return _methods
		end,
		OnTouchedOrIntersecting = function(callback: (touched: Part, lastTouched: number) -> nil)
			assert(_alive, ""Hitbox is not alive and cannot be interacted with!"")
			onTouched = callback
			return _methods
		end,
		GetHitbox = function()
			assert(_alive, ""Hitbox is not alive and cannot be interacted with!"")
			return hitbox
		end,
		Destroy = function()
			assert(_alive, ""Hitbox is not alive and cannot be interacted with!"")
			_alive = false
		end,
	}
	
	return _methods
end
--------------------------

function AdaptiveModule.Model.TweenCFrame(_Model: Model, GoalCFrame: CFrame, OriginCFrame: CFrame, _TweenInfo: TweenInfo, GoalReached: (a: Model)->nil)
	local _CFrame = Instance.new(""CFrameValue"")
	_CFrame.Value = (OriginCFrame or _CFrame.Value)
	
	local __connection__;
	__connection__ = _CFrame:GetPropertyChangedSignal(""Value""):Connect(function()
		_Model:PivotTo(_CFrame.Value)
	end)

	local Tween = TweenService:Create(_CFrame, _TweenInfo, {Value = GoalCFrame})

	local __connection2__;
	__connection2__ = Tween.Completed:Connect(function()
		__connection__:Disconnect()
		__connection2__:Disconnect()

		_CFrame:Destroy()

		spawn(function()
			if GoalReached then
				GoalReached(_Model)
			end
		end)

		Tween:Destroy()
	end)

	Tween:Play()
end
function AdaptiveModule.Model.TweenSize(_Model: Model, GoalScaleFactorSize: number, OriginScaleFactorSize: number, _TweenInfo: TweenInfo, GoalReached: (a: Model)->nil)
	local _NV = Instance.new(""NumberValue"")
	_NV.Value = (OriginScaleFactorSize or 1)
	
	local __connection__;
	__connection__ = _NV:GetPropertyChangedSignal(""Value""):Connect(function()
		_Model:ScaleTo(_NV.Value)
	end)

	local Tween = TweenService:Create(_NV, _TweenInfo, {Value = GoalScaleFactorSize})

	local __connection2__;
	__connection2__ = Tween.Completed:Connect(function()
		__connection__:Disconnect()
		__connection2__:Disconnect()

		_NV:Destroy()

		spawn(function()
			if GoalReached then
				GoalReached(_Model)
			end
		end)

		Tween:Destroy()
	end)

	Tween:Play()
end
function AdaptiveModule.Model.FireFunctionForEveryModelMember(_Model: Model, callback: (currentMember: any)->nil)
	for _, v in ipairs(_Model:GetChildren()) do
		callback(v)
	end
end
--------------------------
function AdaptiveModule.Tween(_Instance: Instance, _TweenInfo: TweenInfo, PropertiesToTween: {}, AutoPlay: boolean?, Disposable: boolean?): Tween?
	Disposable = AutoPlay or Disposable

	local a = TweenService:Create(_Instance, _TweenInfo, PropertiesToTween)
	local b;

	if Disposable then		
		b = a.Completed:Connect(function()
			b:Disconnect()
			a:Destroy()
		end)
	end


	return ((not AutoPlay and a) or ((a:Play() == nil) and nil))
end
function AdaptiveModule.Sound(AssetId: number?, Parent: BasePart?, AutoPlay: boolean?, Disposable: boolean?, Properties: {}): Sound?
	Disposable = AutoPlay or Disposable
	Properties = Properties or {}
	Properties.Parent = nil

	local a = Instance.new(""Sound"")
	local b;

	if Disposable then

		b = a.Ended:Connect(function()
			b:Disconnect()
			a:Destroy()
		end)
	end

	for c, d in pairs(Properties) do
		a[c] = d
	end

	a.SoundId = ((type(AssetId) == ""number"" and ""rbxassetid://"" .. AssetId) or ((type(AssetId == ""string"") and AssetId)))
	a.Parent = Parent

	return ((not AutoPlay and a) or ((a:Play() == nil) and nil))
end
function AdaptiveModule.Animation(AssetId: number?, Properties: {}): Animation?
	Properties = Properties or {}

	local a = Instance.new(""Animation"")
	a.AnimationId = ((type(AssetId) == ""number"" and ""rbxassetid://"" .. AssetId) or ((type(AssetId == ""string"") and AssetId)))

	for b, c in pairs(Properties) do
		a[b] = c
	end

	return a
end
function AdaptiveModule.Animate(AssetId: number?, Humanoid: Humanoid?, AutoPlay: boolean?, Disposable: boolean?, Properties: {}): AnimationTrack?
	Disposable = AutoPlay or Disposable
	Properties = Properties or {}


	local a;

	if type(AssetId) ~= ""userdata"" then
		a = Instance.new(""Animation"")
		a.AnimationId = ((type(AssetId) == ""number"" and ""rbxassetid://"" .. AssetId) or ((type(AssetId == ""string"") and AssetId)))
	end

	local b = Humanoid:LoadAnimation(a)
	local c;

	if Disposable then
		c = b.Ended:Connect(function()
			c:Disconnect()
			b:Destroy()
		end)
	end

	for d, e in pairs(Properties) do
		b[d] = e
	end

	a:Destroy()
	return ((not AutoPlay and b) or ((b:Play() == nil) and nil))
end
function AdaptiveModule.Weld(Part0: BasePart, Part1: BasePart, Parent: BasePart, UseConstraint: boolean, Properties: {}): Weld?
	Properties = Properties or {}
	Properties.Parent = nil

	local a;

	if UseConstraint then
		a = Instance.new(""WeldConstraint"")
	end

	a = a or Instance.new(""Weld"")

	a.Part0 = Part0
	a.Part1 = Part1

	for b, c in pairs(Properties) do
		a[b] = c
	end

	a.Parent = Parent

	return a
end
function AdaptiveModule.RandomRGB(Minimum: number, Maximum: number): Color3
	Minimum = Minimum or 0
	Maximum = Maximum or 0

	return Color3.fromRGB(math.random(Minimum, Maximum), math.random(Minimum, Maximum), math.random(Minimum, Maximum))
end
function AdaptiveModule.GetPlayerFromContext(script: Script): Player
	local a = script;
	local b = 999;
	local c = 0;

	repeat
		a = (a and a.Parent) or a
		c+=1

		if c >= b then
			error(""Player not found in context."")
		end
	until (a and a:IsA(""Player""))

	return a
end
function AdaptiveModule.PulseOnDeletion(_Instance: Instance, callback: (currentCopyOfInstance: Instance, Pulses: number) -> nil, Completed: (totalPulsesDone: number) -> nil): nil
	--[[
		This function uses the callback to return a copy of the part at the EXACT state it was-
		before it was deleted.
		
		It's basically repetitive cloning and destroying <n> amount of times.
	--]]
	
	local a = 0
	spawn(function()
		local b = _Instance
		while callback(b, a) do
			local c = b:Clone()
			local d = b.Parent

			b:Destroy()

			b = c

			wait()

			a+=1

			b.Parent = d
		end
	end)

	if Completed then
		spawn(function() return Completed(a) end)
	end
end
function AdaptiveModule.ParentEntityToMultipleInstances(OriginInstance: Instance, Instances: {Instance}, OnAdded: (originInstanceClone: Instance, Parent: Instance) -> nil, Lifetime: ({originInstanceClones: Instance}) -> nil): nil
	Instances = ((type(Instances) == ""userdata"") and {Instances}) or Instances

	local a = {}
	local b = 1

	for _, c in ipairs(Instances) do
		a[b] = OriginInstance:Clone()
		a[b].Parent = c

		if OnAdded then
			OnAdded(a[b], c)
		end

		b+=1
	end

	spawn(function() ((type(Lifetime) == ""function"" and Lifetime) or (type(Lifetime == ""number"" and function(a) wait(Lifetime) for i,v in ipairs(a) do v:Destroy(); a[i] = nil end end)))(a) end)
end
function AdaptiveModule.SetPropertiesToMultipleInstances(Properties: {[string]: any?}, Instances: {Instance}): nil
	Properties = Properties or {}
	Instances = ((type(Instances) == ""userdata"") and {Instances}) or Instances

	for _, a in ipairs(Instances) do
		for b, c in pairs(Properties) do
			a[b] = c
		end
	end
end
function AdaptiveModule.FromFolderExportOnto(folder: {Folder}, parent: {any}, whitelist: {string}, onAdded: (any) -> nil, cleanup: ({any}) -> nil)
	folder = (type(folder) == ""table"" and folder) or {folder}
	parent = (type(parent) == ""table"" and parent) or {parent}
	whitelist = (type(whitelist) == ""table"" and whitelist) or {whitelist or ""any""}
	
	local instances = {}
	
	for i, v in ipairs(whitelist) do
		whitelist[i] = nil
		whitelist[v] = true
	end
	
	for _, parentThing in ipairs(parent) do
		for _, currentFolder in ipairs(folder) do
			for _, folderChild in ipairs(currentFolder:GetChildren()) do
				if whitelist[""any""] or whitelist[folderChild.ClassName] then
					local copy = folderChild:Clone()
					table.insert(instances, copy)
					
					copy.Parent = parentThing
					
					if onAdded then
						spawn(function()
							onAdded(copy)
						end)
					end
				end
			end
		end
	end
	
	if cleanup then
		spawn(function() ((type(cleanup) == ""function"" and cleanup) or (type(cleanup == ""number"" and function(a) wait(cleanup) for i,v in ipairs(a) do v:Destroy(); a[i] = nil end end)))(instances) end)
	end
end
function AdaptiveModule.NewTimeDependantFunction(P: {[""MaximumTimeNeeded""]: number, [""Success""]: (timeTaken: number)->nil, [""Failure""]: (timeTaken: number, expectedMaximumTime: number)->nil, [""Update""]: (timeTaken: number)->nil, [""Compare""]: (delta: number, current: number, maximumTimeNeeded: number)->nil})
	local delta = tick()
	local Success, Failure, Compare, Update, MaximumTimeNeeded = P.Success, P.Failure, P.Compare, P.Update, P.MaximumTimeNeeded
	
	return function()
		local now = tick()
		local diff = now - delta
		
		local eval = (Compare and Compare(diff, now, MaximumTimeNeeded) or diff <= MaximumTimeNeeded)
		
		if eval then
			Success(diff)
		else
			Failure(diff, MaximumTimeNeeded)
		end
		
		local res = (Update and Update(diff)) or tick()
		res = res or tick()
		
		delta = res
	end
end

return AdaptiveModule"
sc3uw1my,webinar-for-loops-2023-08-05,jspill,Python,Saturday 5th of August 2023 03:44:06 PM CDT,"# 2023 Aug 5
# WEBINAR: For Loops

# We use loops to repeat actions

# a WHILE loop... is an IF that repeats as long as the loop condition remains True

# FOR LOOPS are used for repeating actions for every element in a container (list, str, tuples, sets, dictionary, range objects)

# Basic syntax of a for loop
# for ___ in _someContainer_:

# list
myList = [""Agent Scully"", ""Agent Mulder"", ""Walter Skinner"", ""CSM"", ""Mr. X""]
for item in myList:
    print(item) # print(item, end=""\n"")

# tuple
myTuple = (""Gilligan"", ""Castaway002"", ""red"", ""crew"")
for item in myTuple:
    print(item)

# string
myString = ""It was the best of times.""
for char in myString:
    print(char)

# dictionaries
# { key: value, key:value}
# myDict[key] # retrive the value for that key
# myDict[key] = value # assign a value to that key

# for key in myDict: # loop var holds the keys, regardless of what I call it
bestOfXF = {
    ""1x00"": ""Pilot"",
    ""2x10"": ""Red Museum"",
    ""2x14"": ""Die Hand Die Verletzt"",
    ""3x04"": ""Clyde Bruckman's Final Repose"",
    ""3x12"": ""War of the Coprophages"",
    ""3x20"": ""Jose Chung's From Outer Space"",
    ""4x05"": ""The Field Where I Died"",
    ""5x05"": ""The Post Modern Prometheus"",
    ""5x17"": ""All Souls""
}
# for key in bestOfXF:
#     # ""Check out Episode ___ or '___'""
#     val = bestOfXF[key]
#     print(f""Check out Episode {key} or '{val}'"")

# range()... just to repeat a number of times
for num in range(0, 5): # range(start, stop, step) --> [0, 1, 2, 3, 4]
    print(num)

# going over a sequenced container and you need the INDEX
# 2 choices

# range() of len()
# for item in myList:
for i in range(len(myList)):
    # myList[i]
    print(f""{i} - {myList[i]}"")

# enumerate()
for i, item in enumerate(myList):
    print(f""{i} --> {item}"")

"
iu9zc4UW,ritual_of_the_forest_computercraft,Equinox,Lua,Saturday 5th of August 2023 03:37:51 PM CDT,"recipes_name = ""blockReader_2""
inputs_name = ""betterendforge:barrel_0""
outputs_name = ""minecraft:barrel_2""

output_buffer_name = ""minecraft:barrel_1""
target_names = {""naturesaura:wood_stand_0"", ""naturesaura:wood_stand_1"", ""naturesaura:wood_stand_2"", ""naturesaura:wood_stand_3"", ""naturesaura:wood_stand_4"", ""naturesaura:wood_stand_5"", ""naturesaura:wood_stand_6"", ""naturesaura:wood_stand_7"", ""modularrouters:item_router_0""}
target_pattern_slots = {2, 8, 5, 7, 3, 9, 4, 6, 0}


recipes = peripheral.wrap(recipes_name)
inputs = peripheral.wrap(inputs_name)
outputs = peripheral.wrap(outputs_name)
output_buffer = peripheral.wrap(output_buffer_name)

function hash_item_table(tbl)
	local sorted_keys = {}
	for id, _ in pairs(tbl) do table.insert(sorted_keys, id) end
	table.sort(sorted_keys)
	local hash = """"
	for _,key in ipairs(sorted_keys) do
		hash = hash .. key .. ""="" .. tostring(tbl[key]) .. "",""
	end
	return hash
end

function wait_for(seconds)
	local event_id
	local timer_id = os.startTimer(seconds)
	repeat
		_, event_id = os.pullEvent(""timer"")
	until event_id == timer_id
end

function create_recipe_index()
	local indexed_recipes = {}
	for _, recipe in pairs(recipes.getBlockData()[""Items""]) do
		local recipe_tag = recipe[""tag""]
		if not(recipe_tag == nil) then
			output_item = recipe_tag[""Output_0""]
			if not(output_item == nil) then
				local input_to_targets = {}
				local indexed_recipe = {input_to_targets=input_to_targets, output=output_item[""id""]}
				for target_index,recipe_slot in pairs(target_pattern_slots) do
					slot_item = recipe_tag[""Input_"" .. tostring(recipe_slot)]
					if not(slot_item == nil) then
						id = slot_item[""id""]
						targets_for_item = input_to_targets[id]
						if targets_for_item == nil then
							targets_for_item = {}
							input_to_targets[id] = targets_for_item
						end
						table.insert(targets_for_item, target_index)
					end
				end
				local input_to_count = {}
				for id, targets in pairs(input_to_targets) do
					input_to_count[id] = #targets
				end
				local hash = hash_item_table(input_to_count)
				indexed_recipes[hash] = indexed_recipe
			end
		end
	end
	return indexed_recipes
end

function hash_input_items(items)
	local input_to_count = {}
	for _, input in pairs(items) do
		local id = input[""name""]
		local count = input_to_count[id]
		if count == nil then
			count = 0
		end
		count = count + input[""count""]
		input_to_count[id] = count
	end
	return hash_item_table(input_to_count)
end

function send_recipe(input_items, recipe)
	-- Compute source slot for each target
	local target_source_slot = {}
	for slot, item in pairs(input_items) do
		local possible_targets = recipe.input_to_targets[item[""name""]]
		local remaining = item[""count""]
		for _, target in pairs(possible_targets) do
			if remaining > 0 and target_source_slot[target] == nil then
				target_source_slot[target] = slot
				remaining = remaining - 1
			end
		end
		if remaining > 0 then
			print(""Abandoned item "" .. item[""name""] .. "" for recipe "" .. recipe[""output""])
			return false
		end
	end
	-- Transfer items
	for target_index=1,#target_names do
		local source_slot = target_source_slot[target_index]
		if not(source_slot == nil) then
			local transfered = inputs.pushItems(target_names[target_index], source_slot, 1)
			if not(transfered == 1) then
				print(""Failed to transfer "" .. input_items[source_slot][""name""] .. "" for recipe "" .. recipe[""output""])
				return false
			end
		end
	end
	return true
end

function wait_and_transfer_output(expected_output)
	local attempts = 0
	local output_slot = nil
	repeat
		-- Wait for a second to reduce load
		wait_for(1)
		-- Try to find a slot on the enchanter containing the output item
		local output_items = output_buffer.list()
		for slot, output_item in pairs(output_items) do
			if output_item[""name""] == expected_output then
				output_slot = slot
			end
		end
		if attempts > 300 then
			local names = """"
			for _, output_item in pairs(output_items) do
				names = names .. output_item[""name""] "", ""
			end
			print(""Output "" .. expected_output .. "" failed to appear ("" .. names .. "")"")
			return false
		end
		attempts = attempts + 1
	until not(output_slot == nil)
	local output_count = output_buffer.pushItems(outputs_name, output_slot)
	print(""Recipe "" .. expected_output .. "" finished with "" .. tostring(output_count) .. "" items"")
	return true
end

local indexed_recipes = create_recipe_index()

local failed = false

repeat
	-- Wait for the comparator to sense items in the input
	while not(redstone.getInput(""top"")) do
		os.pullEvent(""redstone"")
	end

	-- Determine recipe for inputs
	local input_items = inputs.list()
	if #input_items > 0 then
		local input_items_hash = hash_input_items(input_items)
		local input_recipe = indexed_recipes[input_items_hash]
		if input_recipe == nil then
			print(""Unknown input "" .. input_items_hash)
		else
			recipe_output = input_recipe[""output""]
			print(""Starting recipe "" .. recipe_output)
			if not(send_recipe(input_items, input_recipe)) or not(wait_and_transfer_output(input_recipe[""output""])) then
				failed = true
				print(""Terminating..."")
			end
		end
	end
until failed
"
i9hC5HNM,brejax help me pls,Frostyy22,Python,Saturday 5th of August 2023 03:23:34 PM CDT,"import discord
from discord.ext import commands
import os
import logging
import io
import aiofiles
from PIL import Image

logger = logging.getLogger(""discord"")
logger.setLevel(logging.ERROR)
handler = logging.FileHandler(filename=""discord.log"", encoding=""utf-8"", mode=""w"")
handler.setFormatter(logging.Formatter(""%(asctime)s:%(levelname)s:%(name)s: %(message)s""))
logger.addHandler(handler)

class Fm(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.card_tags = {
            ""panzer_iii_a_veteran"": [""Panzer III A""],
            ""panzer_iii_a_noveteran"": [""Panzer III A""],
            ""panzer_iii_b"": [""Panzer III B""],
        }

    def find_cards_by_name(self, card_name):
        matched_cards = []
        try:
            card_name_lower = card_name.lower() 
            for key, tags in self.card_tags.items():
                for tag in tags:
                    if tag.lower() in card_name_lower:  
                        matched_cards.append(key)
                        break  
        except Exception as e:
            logger.exception(f""Error in 'find_cards_by_name': {e}"")
        return matched_cards

    async def send_images(self, ctx, images_to_send):
        for image_data in images_to_send:
            await ctx.send(file=discord.File(image_data))

    @commands.command()
    async def fm(self, ctx, *, card_name: str):
        try: 
            card_name_lower = card_name.lower()
            card_keys = self.find_cards_by_name(card_name_lower)
            if card_keys:
                images_folder = os.path.join(os.path.dirname(__file__), ""fm_cards"")
                images_to_send = []
                card_tags_list = [] 
                for card_key in card_keys:
                    card_tags = self.card_tags.get(card_key)
                    file_name = f""{card_key}.png""
                    file_path = os.path.join(images_folder, file_name)
                    try:
                        async with aiofiles.open(file_path, ""rb"") as file:
                            # Resize/compress the image if needed using Pillow (PIL) library
                            img = Image.open(file)
                            img.thumbnail((800, 800))
                            img_byte_array = io.BytesIO()
                            img.save(img_byte_array, format=""PNG"")
                            images_to_send.append(img_byte_array.getvalue())
                            card_tags_list.append(', '.join(card_tags))  

                    except FileNotFoundError:
                        await ctx.send(f""Card image not found for {', '.join(card_tags)}"")

                if images_to_send:
                    await ctx.send(f""Cards of {', '.join(card_tags_list)}."")
                    await self.send_images(ctx, images_to_send) 
            else:
                await ctx.send(""Card not found. Please enter a valid card name."")
        except Exception as e:
            await ctx.send(f""An error occurred while executing the command: {e}"")

async def setup(bot):
    await bot.add_cog(Fm(bot))
"
PddJQVMJ,Untitled,CheezPuff,JavaScript,Saturday 5th of August 2023 02:54:22 PM CDT,"import { BrowserRouter, Routes, Route } from 'react-router-dom'
import './App.css';
import Control from './controlpanel/Control';
import NavBar from './components/NavBar';
import SignIn from './components/SignIn';

function App() {
  return (
    <div className=""App"">
      <BrowserRouter> 
      <NavBar/>
      <Routes>

        {/* <Route path=""/"" element={< SignIn />} /> */}
        <Route path='/control' element={< Control />} />

      </Routes>
      <SignIn/>
      </BrowserRouter>
    </div>
  );
}

export default App;
"
5ek2Wg3v,3x1_7x1 handpiece,uuu000,C,Saturday 5th of August 2023 02:09:49 PM CDT,"/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2023 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */
/* Includes ------------------------------------------------------------------*/
#include ""main.h""

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */
//void delay(uint32_t time)
//{
//while(time--) {};
//}
/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */

/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/

/* USER CODE BEGIN PV */
	uint8_t timeDrebezg;         // время устойчивого состояния кнопки (* 2 мс)
	_Bool flagPress = 0;   // признак кнопка в нажатом состоянии
	_Bool flagClick = 0;   // признак нажатия кнопки (фронт)
	uint8_t buttonCount = 0;        // счетчик подтверждений состояния кнопки
	uint32_t  timme = 0;
		_Bool flagPress1 = 0;   // признак кнопка в нажатом состоянии
		_Bool flagClick1 = 0;   // признак нажатия кнопки (фронт)
		uint8_t buttonCount1 = 0;        // счетчик подтверждений состояния кнопки
/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
/* USER CODE BEGIN PFP */

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void button_click_KA() {
  /* блок обработки сигнала кнопки
 * при нажатой кнопке flagPress= true
 * при отжатой кнопке flagPress= false
 * при нажатии на кнопку flagClick= true */
  timeDrebezg = 10;
  if (flagPress == (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1))) {
    // признак flagPress = текущему состоянию кнопки
    // (инверсия т.к. активное состояние кнопки LOW)
    // т.е. состояние кнопки осталось прежним
    buttonCount = 0;  // сброс счетчика подтверждений состояния кнопки
  } else {
    // признак flagPress не = текущему состоянию кнопки
    // состояние кнопки изменилось
    buttonCount++;  // +1 к счетчику состояния кнопки

    if (buttonCount >= timeDrebezg) {
      // состояние кнопки не мянялось в течение заданного времени
      // состояние кнопки стало устойчивым
      flagPress = !flagPress;  // инверсия признака состояния
      buttonCount = 0;         // сброс счетчика подтверждений состояния кнопки

      if (flagPress == 1) flagClick = 1;  // признак фронта кнопки на нажатие
    }
  }
  HAL_Delay(2);// задержка на 2 мс

}

void button_click_KA1() {
  /* блок обработки сигнала кнопки
 * при нажатой кнопке flagPress= true
 * при отжатой кнопке flagPress= false
 * при нажатии на кнопку flagClick= true */
  timeDrebezg = 10;
  if (flagPress1 == (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2))) {
    // признак flagPress = текущему состоянию кнопки
    // (инверсия т.к. активное состояние кнопки LOW)
    // т.е. состояние кнопки осталось прежним
    buttonCount1 = 0;  // сброс счетчика подтверждений состояния кнопки
  } else {
    // признак flagPress не = текущему состоянию кнопки
    // состояние кнопки изменилось
    buttonCount1++;  // +1 к счетчику состояния кнопки

    if (buttonCount1 >= timeDrebezg) {
      // состояние кнопки не мянялось в течение заданного времени
      // состояние кнопки стало устойчивым
      flagPress1 = !flagPress1;  // инверсия признака состояния
      buttonCount1 = 0;         // сброс счетчика подтверждений состояния кнопки

      if (flagPress1 == 1) flagClick1 = 1;  // признак фронта кнопки на нажатие
    }
  }
  HAL_Delay(2);// задержка на 2 мс

}

void blink_click_KA(void) {
  static uint8_t status=1;

  switch (status) {

    case 0:
      if (flagClick == 1) {
        // было нажатие кнопки
        flagClick = 0;  // сброс признака фронта кнопки
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);  // вывод состояния светодиода
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);//вывод состояния светодиода
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);  // вывод состояния светодиода
        status = 1;



      }

      break;


    case 1:
      if (flagClick == 1) {
        // было нажатие кнопки
        flagClick = 0;  // сброс признака фронта кнопки

        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);  // вывод состояния светодиода
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET); // вывод состояния светодиода
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET); // вывод состояния светодиода
        status = 2;
      }
      break;


    case 2:
      if (flagClick == 1) {
        // было нажатие кнопки
        flagClick = 0;  // сброс признака фронта кнопки

        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);   // вывод состояния светодиода
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_SET);  // вывод состояния светодиода
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);   // вывод состояния светодиода
        status = 3;
      }
      break;

    case 3:
      if (flagClick == 1) {
        // было нажатие кнопки
        flagClick = 0;  // сброс признака фронта кнопки

        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);    // вывод состояния светодиода
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);    // вывод состояния светодиода
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);  // вывод состояния светодиода
        status = 0;
      }
      break;

  }
}


void blink_click_KA1(void) {
  static uint8_t status1=1;

  switch (status1) {

    case 0:
      if (flagClick1 == 1) {
        // было нажатие кнопки
        flagClick1= 0;  // сброс признака фронта кнопки
        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, 0);  // вывод состояния светодиода
        //HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);//вывод состояния светодиода
       // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);  // вывод состояния светодиода
        status1 = 1;



      }

      break;


    case 1:
      if (flagClick1 == 1) {
        // было нажатие кнопки
        flagClick1 = 0;  // сброс признака фронта кнопки

        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, 1);  // вывод состояния светодиода
       // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET); // вывод состояния светодиода
      //  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET); // вывод состояния светодиода
        status1 = 2;
      }
      break;


    case 2:

      if (flagClick1 == 1) {
        // было нажатие кнопки
        flagClick1 = 0;  // сброс признака фронта кнопки

      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3,0);  // вывод состояния светодиода
       // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_SET);  // вывод состояния светодиода
       // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);   // вывод состояния светодиода
        status1 = 3;


      }
      break;

    case 3:
     	if((HAL_GetTick() - timme) > 1000) // интервал 1000мс = 1сек
        	             	        {HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
        	             	          timme = HAL_GetTick();}
    	//HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_4); // инверсия вывода PC13
    		  		 			 // HAL_Delay(500);
    		  		 // delay(5000);
      if (flagClick1 == 1) {
        // было нажатие кнопки
        flagClick1 = 0;  // сброс признака фронта кнопки

       // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_1);  // вывод состояния светодиода
       // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);    // вывод состояния светодиода
       // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);  // вывод состояния светодиода
        status1 = 4;
      }
      break;
    case 4:	if((HAL_GetTick() - timme) > 300) // интервал 1000мс = 1сек
            	             	        {HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
            	             	          timme = HAL_GetTick();}
          if (flagClick1 == 1) {
            // было нажатие кнопки
            flagClick1 = 0;  // сброс признака фронта кнопки

           // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_1);  // вывод состояния светодиода
           // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);    // вывод состояния светодиода
           // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);  // вывод состояния светодиода
            status1 = 5;
          }
          break;

    case 5:	if((HAL_GetTick() - timme) >100) // интервал 1000мс = 1сек
               	             	        {HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
               	             	          timme = HAL_GetTick();}
             if (flagClick1 == 1) {
               // было нажатие кнопки
               flagClick1 = 0;  // сброс признака фронта кнопки

              // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_1);  // вывод состояния светодиода
              // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);    // вывод состояния светодиода
              // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);  // вывод состояния светодиода
               status1 = 6;
             }
             break;

    case 6:	if((HAL_GetTick() - timme) > 50) // интервал 1000мс = 1сек
               	             	        {HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
               	             	          timme = HAL_GetTick();}
             if (flagClick1 == 1) {
               // было нажатие кнопки
               flagClick1 = 0;  // сброс признака фронта кнопки

              // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_1);  // вывод состояния светодиода
              // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);    // вывод состояния светодиода
              // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);  // вывод состояния светодиода
               status1 = 7;
             }
             break;

    case 7:	if((HAL_GetTick() - timme) > 30) // интервал 1000мс = 1сек
               	             	        {HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
               	             	          timme = HAL_GetTick();}
             if (flagClick1 == 1) {
               // было нажатие кнопки
               flagClick1 = 0;  // сброс признака фронта кнопки

              // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_1);  // вывод состояния светодиода
              // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);    // вывод состояния светодиода
              // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);  // вывод состояния светодиода
               status1 = 8;
             }
             break;

    case 8:	if((HAL_GetTick() - timme) > 15) // интервал 1000мс = 1сек
               	             	        {HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
               	             	          timme = HAL_GetTick();}
             if (flagClick1 == 1) {
               // было нажатие кнопки
               flagClick1 = 0;  // сброс признака фронта кнопки

              // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_1);  // вывод состояния светодиода
              // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);    // вывод состояния светодиода
              // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_SET);  // вывод состояния светодиода
               status1 = 0;
             }
             break;

  }
}
/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {    button_click_KA();
	  blink_click_KA();
	  button_click_KA1();
	  	  blink_click_KA1();
	  // if( HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) == GPIO_PIN_SET ) {
	    // на выводе PA1 высокий уровень
	//HAL_GPIO_WritePin(led13_GPIO_Port, led13_Pin, GPIO_PIN_SET);
		// HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13); // инверсия вывода PC13
				//  HAL_Delay(1000);
	//}
	//else {
	    // на выводе PA1 низкий уровень
		// HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13); // инверсия вывода PC13
			 // HAL_Delay(200);


    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
  {
    Error_Handler();
  }
}

/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOD_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, led13_Pin|led14_Pin|led15_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, led3_Pin|GPIO_PIN_4, GPIO_PIN_RESET);

  /*Configure GPIO pins : led13_Pin led14_Pin led15_Pin */
  GPIO_InitStruct.Pin = led13_Pin|led14_Pin|led15_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);

  /*Configure GPIO pins : butt1_Pin butt2_Pin */
  GPIO_InitStruct.Pin = butt1_Pin|butt2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

  /*Configure GPIO pins : led3_Pin PA4 */
  GPIO_InitStruct.Pin = led3_Pin|GPIO_PIN_4;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}

/* USER CODE BEGIN 4 */

/* USER CODE END 4 */

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
  }
  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     ex: printf(""Wrong parameters value: file %s on line %d\r\n"", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */
"
trFaZQ5D,DRIVING EMPIRE SCRIPT,Artani,Lua,Saturday 5th of August 2023 01:53:04 PM CDT,"NEW DRIVING EMPIRE SCRIPT *WORKING* AUTO FARM + MORE
https://www.youtube.com/watch?v=pMRw_VwkYHI
GET THE SCRIPT HERE!"
Wsivnssn,Untitled,nikolask,Python,Saturday 5th of August 2023 01:13:04 PM CDT,"def main():
    amount_due = 50
    while amount_due > 0:
        print(""Amount Due: "", amount_due)
        amount_due -= check_coins()
    print(""Change Owed: "", abs(amount_due))

def check_coins():
    while True:
        coins = int(input(""Insert Coin: ""))
        if coins  == 25 or coins == 10 or coins == 5:
            break
    return coins

main()"
MgccDyWg,Islands Auto Fishing v3,Killyoboy,Autohotkey,Saturday 5th of August 2023 01:02:24 PM CDT,"#MaxThreadsPerHotKey, 2
Toggle := 0

BaitTime := A_TickCount-120000 ;like this for a reason, leave it.
BaitToggle := false ;whether to use bait automatically

T2BaitSlot := 2 ;which slot the tier 2 bait is in (only used with more than 0 and with BaitToggle on)
T1BaitSlot := 3 ;which slot the tier 1 bait is in (only used with more than 0 and with BaitToggle on)
T2BaitAmount := 0 ;the amount of tier 2 bait you have
T1BaitAmount := 0 ;the amount of tier 1 bait you have
BaitSameTime := false ;whether or not to use both baits at the same time or to run out of t2 first.

JamTime := A_TickCount-9000000 ;like this for a reason, leave it.
JamToggle := false ;whether to use jam sandwiches automatically

JamSandwichSlot := 4
JamSandwichAmount := 0

RodSlot := 1 ;which slot the rod is in (only used with BaitToggle on)

;KeyWait, Capslock, D
;MouseGetPos, eX, eY
;PixelGetColor, color, eX, eY
;MsgBox You pressed %color%

F1::
Toggle := !Toggle
RodOut := false
LastFish := 0

If (Toggle and not BaitToggle and not JamToggle) {
    MouseMove, 500, 500
    Send {Click down}
    Sleep, 500
    Send {Click up}
    
    RodOut := true
}

While Toggle {
    WinGetPos ,,, W, H, Roblox
    PixelSearch, aX, aY, 636, 773, 1300, 840, 0xFFFFFFFF, 0, fast
    PixelSearch, bX, bY, 636, 773, 1300, 840, 0x6969FF, 0, fast
    
    If(aX and aY and bX and bY) {
        MouseMove, aX, aY
        
        if(bX < aX) {
            Send {Click down}
        } Else {
            Send {Click up}
        }
        
        RodOut := false
        LastFish := A_TickCount
    } Else If(A_TickCount - LastFish >= 1500) {
        If(BaitToggle and (A_TickCount - BaitTime) >= 120000 and (T2BaitAmount > 0 or T1BaitAmount > 0)) {
            BaitTime := A_TickCount
            MouseMove, 500, 500
            
            If(T2BaitAmount > 0) {
                Send %T2BaitSlot%
                T2BaitAmount := T2BaitAmount - 1
                Send {Click down}
                Sleep, 1100
                Send {Click up}
            }
            
            If(T1BaitAmount > 0 and (BaitSameTime or T2BaitAmount <= 0)) {
                Send %T1BaitSlot%
                T1BaitAmount := T1BaitAmount - 1
                Send {Click down}
                Sleep, 1100
                Send {Click up}
            }
            
            Send %RodSlot%
            RodOut := false
        } Else If(JamToggle and (A_TickCount - JamTime) >= 900000 and (JamSandwichAmount > 0)) {
            JamTime := A_TickCount
            MouseMove, 500, 500
            
            Send %JamSandwichSlot%
            Send {Click down}
            Sleep, 1100
            Send {Click up}
            
            Send %RodSlot%
            RodOut := false
        } Else If(!RodOut) {
            MouseMove, 500, 500
            Sleep, 1000
            
            Send {Click down}
            Sleep, 500
            Send {Click up}
            Sleep, 2000
            
            RodOut := true
        }  Else {
            MouseMove, 500, 500
        }
    }
}"
N8msyrmB,Summation of ASCII Codes Hash Function,BenTibnam,Python,Saturday 5th of August 2023 12:48:36 PM CDT,"def hash(st):
    st_len = len(st)
    
    # if there is no text we can return -1 since that's an invalid hash
    if st_len == 0:
        return -1
    
    # dif has is used to offset the has so input like 'a' would go into bucket 0
    dif_hash = ord('a')

    # if the length is only one we don't need to get the summation of characters 1 to st_len
    if st_len == 1:
        return ord(st) - dif_hash
    else:
        # calculating the summation of the strings ascii values
        summation = 0
        for i in range(1, st_len):
            summation += ord(st[i])
        return ord(st[0]) + summation - dif_hash

while True:
    st = input("">>> "")
    hash_code = (hash(st))
    print(hash_code)
    "
WDzH0sgU,Untitled,ilyasmirnov,Python,Saturday 5th of August 2023 12:46:09 PM CDT,"import typing
from contextlib import suppress
from dataclasses import dataclass

from aiogram_dialog import DialogManager


@dataclass
class DataParser:
    dialog_error = ''
    dialog_manager: DialogManager = None

    @classmethod
    def register(cls, dialog_manager: DialogManager):
        inst = cls()
        inst.dialog_manager = dialog_manager
        inst._fetch()
        return inst

    @classmethod
    def parse(cls, data: typing.Dict):
        inst = cls()
        inst._fetch(data)
        return inst

    def clean(self):
        inst = type(self)()
        self.update((inst,))

    def update(self, data: typing.Tuple):
        for data_dict in data:
            if data_dict is None:
                continue

            if isinstance(data_dict, DataParser):
                data_dict = data_dict.force_dict()

            for key, value in data_dict.items():
                with suppress(Exception):
                    super().__setattr__(key, value)

                if self.dialog_manager:
                    self.dialog_manager.dialog_data[key] = value

    def _fetch(self, data=None):
        dialog_data = None

        if not self.dialog_manager:
            if data:
                dialog_data = data
        else:
            dialog_data = self.dialog_manager.dialog_data

        if dialog_data is not None:
            for key, value in dialog_data.items():
                with suppress(Exception):
                    super().__setattr__(key, value)

    def __getattr__(self, item):
        self._fetch()
        try:
            return super().__getattribute__(item)
        except AttributeError:
            return None

    def __setattr__(self, key, value):
        if key != 'dialog_manager':
            self._fetch()

            if self.dialog_manager:
                self.dialog_manager.dialog_data[key] = value
        super().__setattr__(key, value)

    def pop(self, item):
        self.__setattr__(item, None)

    def force_dict(self) -> typing.Dict:
        return {key: jsonify(value) for key, value in self.__dict__.items()
                if value is not None and key != 'dialog_manager'}


def jsonify(value):
    if hasattr(value, 'to_json'):
        return value.to_json()

    return value"
5kUdVv81,ParticlesController,IlyaKulikG,C#,Saturday 5th of August 2023 12:22:42 PM CDT,"using UnityEngine;
using Utilities.ParticlesManager;

namespace Main.Particles
{
    [RequireComponent(typeof(ParticlesRaiser))]
    public class ParticlesController : MonoBehaviour
    {
        [SerializeField] private ParticlesRaiser manager;

        private void Awake()
        {
            manager.Initialize();
        }

        public void Activate()
        {
            enabled = true;
        }

        private void OnValidate()
        {
            if (manager == null)
                manager = GetComponent<ParticlesRaiser>();
        }

        public void Raise(Utilities.ParticlesManager.Particles particle, IParticlesRaiseParameters parameters, bool isUI)
        {
            var raiseTask = manager.RaiseAsync(particle, parameters, isUI);
        }
    }
}"
1DZTm0H2,ParticlesSystemInstaller,IlyaKulikG,C#,Saturday 5th of August 2023 12:22:10 PM CDT,"using Main.GameSystems.Base;
using Main.Particles;
using UnityEngine;

namespace Main.GameSystems.Particles
{
    public class ParticlesSystemInstaller : GameSystemInstaller
    {
        [SerializeField] private ParticlesController particlesController;
        
        public override void InstallBindings()
        {
            Container.Bind<IParticlesSystem>().To<ParticlesSystem>().FromInstance(new ParticlesSystem(particlesController)).AsSingle().NonLazy();
        }
    }
}"
NTbzL0ju,ParticlesSystem,IlyaKulikG,C#,Saturday 5th of August 2023 12:20:25 PM CDT,"using Cysharp.Threading.Tasks;
using Main.Events;
using Main.Particles;
using Utilities.EventsBus;
using Utilities.ParticlesManager;

namespace Main.GameSystems.Particles
{
    public class ParticlesSystem : IParticlesSystem, IEventReceiver<OnRaiseParticle>, IEventReceiver<OnRaiseUIParticle>
    {
        private readonly ParticlesController controller;

        public ParticlesSystem(ParticlesController controller)
        {
            this.controller = controller;
        }


        public UniTask InitializeAsync()
        {
            GlobalEventsBus.Subscribe(this);
            controller.Activate();
            return default;
        }
        

        public void RaiseParticle(Utilities.ParticlesManager.Particles particles, IParticlesRaiseParameters parameters)
        {
            controller.Raise(particles, parameters, false);
        }

        public void RaiseUIParticle(Utilities.ParticlesManager.Particles particles, IParticlesRaiseParameters parameters)
        {
            controller.Raise(particles, parameters, true);
        }
        

        public void OnEvent(OnRaiseParticle evnt)
        {
            RaiseUIParticle(evnt.Particle, evnt.Parameters);
        }


        public void OnEvent(OnRaiseUIParticle evnt)
        {
            RaiseUIParticle(evnt.Particle, evnt.Parameters);
        }
    }
}"
MXxkU3na,i3-13100 linux audio + intel UHD 730 gfx,plirof2,JavaScript,Saturday 5th of August 2023 11:51:47 AM CDT,"i3-13100
linux

SOUND :
amixer sset Master unmute

GFX
root@live:~ $ lspci -k | grep -EA3 'VGA|3D|Display'
00:02.0 VGA compatible controller: Intel Corporation Device 4692 (rev 0c)
	DeviceName: Onboard - Video
	Subsystem: Gigabyte Technology Co., Ltd Device d000
00:14.0 USB controller: Intel Corporation Device 7a60 (rev 11)



root@live:~ $ aplay -l
**** List of PLAYBACK Hardware Devices ****
card 0: Intel [HDA Intel], device 0: ALC897 Analog [ALC897 Analog]
  Subdevices: 1/1
  Subdevice #0: subdevice #0
card 0: Intel [HDA Intel], device 1: ALC897 Digital [ALC897 Digital]
  Subdevices: 1/1
  Subdevice #0: subdevice #0


00:1f.3 Audio device: Intel Corporation Device 7a50 (rev 11)
	DeviceName: Onboard - Sound
	Subsystem: Gigabyte Technology Co., Ltd Device a194
	Kernel driver in use: snd_hda_intel
	Kernel modules: snd_hda_intel
"
tizwwkCr,Shooter game UI not working,Itsme301,Java,Saturday 5th of August 2023 11:28:10 AM CDT,"//UI variables
ArrayList<DamageIndicator> damageIndicators = new ArrayList<>();
float damageIndicatorPadding = 5; // Padding between damage indicators
PFont customFont; // Replace with your custom font variable
int customFontSize = 15; // Replace with your custom font size
boolean showMainUI = false;
boolean showOptionsUI = false;
boolean isUIVisible = false;
int buttonPadding = 15;

// PowerUps variables
boolean isPlayerPoweredUp = false;
int powerupStartTime = 0;
int powerupDuration = 5; // Power-up duration in seconds
float originalPlayerSize; // Store the original player size for later use
color originalPlayerColor; // Store the original player color for later use
int originalMaxTriangleShotDamage; // Store the original maxTriangleShotDamage for later use
int originalMaxSingleTriangleShotDamage; // Store the original maxSingleTriangleShotDamage for later use
boolean isPurpleSquareVisible = false;
float purpleSquareX, purpleSquareY;
float purpleSquareSize = 20;

// Player variables
int playerX, playerY;
float playerSpeed = 5;
float playerSize = 30;
float maxPlayerHealth = 100000;
float playerHealth = maxPlayerHealth;
boolean[] isMoving = new boolean[4]; // 0: W, 1: A, 2: S, 3: D
boolean isPlayerAlive = true;
int healthIncreaseInterval = 2000; // 2 seconds interval for health increase
int lastHealthIncreaseTime = 0; // Time when health was last increased

// Attack variables
final int TRIANGLE_SHOT = 0;
final int SINGLE_TRIANGLE_SHOT = 1;
int currentAttackMode = SINGLE_TRIANGLE_SHOT;
final int SINGLE_TRIANGLE_SHOT_AMMO = 1;
final int TRIANGLE_SHOT_AMMO = 3;
int maxTriangleShotDamage = 750;
int maxSingleTriangleShotDamage = 1200;

// Bullets variables
ArrayList<PoisonBullet> bullets = new ArrayList<>();
final int bulletDamage = 1250;
int maxAmmoCount = 3;
int ammoCount = maxAmmoCount;
int baseAmmoRespawnInterval = 1000;
int ammoRespawnInterval = 100;
int lastAmmoRespawnTime = 0;
int lastRefilledAmmoIndex = -3;
int ammoRefillTime = 0;
float bulletSpreadAngle = radians(10);
float leftBulletOffset = -bulletSpreadAngle;
float rightBulletOffset = bulletSpreadAngle;

// Enemy square variables
float enemyX, enemyY;
float enemySize = 40;
float enemySpeed = 3;
float maxEnemyHealth = 1;
float enemyHealth = maxEnemyHealth;
boolean isEnemyVisible = true;

// Triangle enemy variables
float triangleEnemyX;
float triangleEnemyY;
float triangleEnemySize = 40; // Adjust the size as needed
int maxTriangleEnemyHealth = 5000; // Adjust the max health as needed
int triangleEnemyHealth = maxTriangleEnemyHealth;
boolean isTriangleEnemyVisible = true;

// Universal enemy variables
boolean isEnemyDefeated = false;
int defeatTimer = 0;
final int defeatDuration = 1000; // 1 second in milliseconds
int maxEnemies = 1; // Change this value to set the maximum number of enemies
ArrayList<Enemy> enemies = new ArrayList<>();

class Enemy {
  float x, y;
  float size = 40; // Adjust the size as needed
  float speed = 3;
  float maxHealth = 10000;
  float health = maxHealth;
  boolean isDefeated = false;
  boolean isVisible = true;
  int defeatTimer = 0;

  Enemy(float x, float y) {
    this.x = x;
    this.y = y;
  }
  
  void drawEnemy() {
    if (health > 0) {
      fill(255, 0, 0); // Red color for enemy
      ellipse(x + (size / 2), y + (size / 2), size, size);
    } else if (isDefeated) {
      // Shrink the enemy gradually until it disappears after defeat
      if (size > 0) {
        size -= 2; // Adjust the shrinking speed as needed
      } else {
        // Enemy is destroyed, remove it from the list of enemies
        isVisible = false;
        enemies.remove(this);
      }
    }

    // Draw health bar for visible enemies
    if (isVisible) {
      fill(100); // Gray color for health bar background
      rect(x, y - 20, size, 10);

      // Draw enemy health bar
      fill(255, 0, 0); // Red color for health bar
      float healthBarWidth = map(health, 0, maxHealth, 0, size);
      rect(x, y - 20, healthBarWidth, 10);

      // Display current enemy health amount above the health bar
      fill(0); // Black color for text
      textAlign(CENTER, CENTER); // Align the text to the bottom of the bounding box
      textSize(customFontSize); // Set the font size
      text((int) health, x + size / 2, y - 20 - healthBarPadding); // Display health as an integer
    }
  }
}

// DamageIndicator class
class DamageIndicator {
  float x, y;
  String text;
  int lifeSpan = 60; // The number of frames the indicator will be visible
  int frameCount = 0;
  PFont customFont; // Custom font variable
  int customFontSize; // Custom font size variable

  DamageIndicator(float x, float y, String damage, PFont font, int fontSize) {
    this.x = x;
    this.y = y;
    this.text = damage;
    this.customFont = font;
    this.customFontSize = fontSize;
  }

  void update() {
    y -= 1; // Move the indicator upwards to make it float
    frameCount++;
  }

  void setY(float y) {
    this.y = y;
  }

  void display() {
    fill(255, 0, 0); // Red color for damage indicator text

    // Set custom font and size
    textFont(customFont);
    textSize(customFontSize);

    text(text, x, y);
  }

  boolean isFinished() {
    return frameCount >= lifeSpan;
  }
}

void updateEnemies() {
  for (int i = enemies.size() - 1; i >= 0; i--) {
    Enemy enemy = enemies.get(i);
    if (enemy.isVisible) {
      if (isEnemyVisible) {
        float targetX = playerX + (playerSize / 2);
        float targetY = playerY + (playerSize / 2);
        float dx = targetX - (enemy.x + (enemy.size / 2));
        float dy = targetY - (enemy.y + (enemy.size / 2));
        float distance = sqrt(dx * dx + dy * dy);
        if (distance > enemy.speed) {
          float angle = atan2(dy, dx);
          float vx = cos(angle) * enemy.speed;
          float vy = sin(angle) * enemy.speed;
          enemy.x += vx;
          enemy.y += vy;
        } else {
          enemy.x = targetX - (enemy.size / 2);
          enemy.y = targetY - (enemy.size / 2);
        }
      }

      // Check collisions between enemy and the player
      float dx = enemy.x - (playerX + (playerSize / 2));
      float dy = enemy.y - (playerY + (playerSize / 2));
      float distance = sqrt(dx * dx + dy * dy);
      if (distance < enemy.size / 2 + playerSize / 2) {
        if (millis() - lastAmmoRespawnTime > 1000) {
          playerHealth -= 1004; // Decrease player health when collided with the enemy
          lastAmmoRespawnTime = millis();
        }
        if (playerHealth <= 0) {
          playerHealth = 0;
          isPlayerAlive = false;
          // Handle player destroyed event (e.g., game over)
        }
      }
      // Check collisions between enemy and the triangle bullets
      for (int j = bullets.size() - 1; j >= 0; j--) {
        PoisonBullet bullet = bullets.get(j);
        if (bullet.hitsEnemy(enemy.x, enemy.y, enemy.size)) {
          bullets.remove(j);
          enemy.health -= bullet.damage; // Decrease enemy health when hit by a bullet
          if (enemy.health <= 0) {
            enemy.health = 0;
            enemy.isDefeated = true; // The enemy is defeated
            enemy.defeatTimer = millis();
          }

          // Add a new damage indicator at the enemy's position
          String damageText = Integer.toString(bullet.damage);
          damageIndicators.add(new DamageIndicator(enemy.x + enemy.size / 2, enemy.y, damageText, customFont, customFontSize));
        }
      }
    } else if (enemy.isDefeated) {
      // If the enemy is defeated, check if the defeatDuration has passed to remove it completely
      if (millis() - enemy.defeatTimer > defeatDuration) {
        enemies.remove(i);
        break; // Exit the loop to prevent concurrent modification error
      }
    }
  }
}

void setup() {
  for (int i = 0; i < maxEnemies; i++) {
    spawnEnemy();
  }
  size(400, 300);
  playerX = width / 2;
  playerY = height / 2;
  enemyX = random(width - enemySize);
  enemyY = random(height - enemySize);
  triangleEnemyX = random(width - triangleEnemySize);
  triangleEnemyY = random(height - triangleEnemySize);

  // Load your custom font in the setup (if you have one, replace ""YourCustomFont.ttf"" with the actual font file)
  // Place the font file in the ""data"" folder of your Processing sketch
  customFont = createFont(""Nougat-ExtraBlack.ttf"", customFontSize); // Replace ""YourCustomFont.ttf"" with the actual font file name
}

void draw() {
  if (isUIVisible) {
    if (showMainUI) {
      drawMainUI();
    } else if (showOptionsUI) {
      drawOptionsUI();
    }
  }
  updateEnemies();
  for (Enemy enemy : enemies) {
    if (enemy.isVisible) {
      enemy.drawEnemy();
    }
  }

    if (enemies.size() < maxEnemies && random(100) < 1) {
    spawnEnemy();
  }
  if (enemyHealth <= 0 && !isEnemyDefeated) {
    isEnemyDefeated = true;
    defeatTimer = millis();
  }
  background(255);
  // Draw damage indicators
  for (int i = damageIndicators.size() - 1; i >= 0; i--) {
    DamageIndicator indicator = damageIndicators.get(i);
    indicator.update();
    indicator.display();
    if (indicator.isFinished()) {
      damageIndicators.remove(i);
    }
  }
  
  // Update and draw player if the player is alive
  if (isPlayerAlive) {
    movePlayer();
    updateAmmoCount();
    checkCollisions();
    drawPlayer();
    drawBullets();
    drawAmmoCount();
    drawPlayerHealthBar();
  }

  // Update and draw enemy if visible
  for (Enemy enemy : enemies) {
    if (enemy.isVisible) {
      enemy.drawEnemy();
    }
  }


 // Randomly generate the purple square once
  if (!isPurpleSquareVisible && !isPlayerPoweredUp && random(100) <= 0.5) {
    purpleSquareX = random(width - purpleSquareSize);
    purpleSquareY = random(height - purpleSquareSize);
    isPurpleSquareVisible = true;
  }

  // Draw the purple square if it's visible
  if (isPurpleSquareVisible) {
    fill(150, 0, 150); // Purple color for the square
    rect(purpleSquareX, purpleSquareY, purpleSquareSize, purpleSquareSize);

    // Check collision between the player and the purple square
    if (isPlayerCollidingWithPurpleSquare()) {
      // Remove the purple square
      isPurpleSquareVisible = false;

      // Do something when the player collides with the square (e.g., activate power-up)
      isPlayerPoweredUp = true;
      powerupStartTime = millis();

      // Store the original player size, color, and damage values for later use
      originalPlayerSize = playerSize;
      originalPlayerColor = get(playerX, playerY); // Store the original fill color
      originalMaxTriangleShotDamage = maxTriangleShotDamage;
      originalMaxSingleTriangleShotDamage = maxSingleTriangleShotDamage;

      // Increase player size
      playerSize *= 1.5;

      // Change player color to purple
      fill(150, 0, 150); // Purple color

      // Multiply the maxTriangleShotDamage and maxSingleTriangleShotDamage by two
      maxTriangleShotDamage *= 2;
      maxSingleTriangleShotDamage *= 2;
    }
  }

  // Check if the power-up has ended
  if (isPlayerPoweredUp && millis() >= powerupStartTime + powerupDuration * 1000) {
    // Deactivate the power-up
    isPlayerPoweredUp = false;
    
   // Restore the original player size, color, and damage values
    playerSize = originalPlayerSize;
    fill(originalPlayerColor); // Restore the original fill color
    maxTriangleShotDamage = originalMaxTriangleShotDamage;
    maxSingleTriangleShotDamage = originalMaxSingleTriangleShotDamage;
  }
}

void drawOptionsUI() {
  int boxWidth = 250; // Increased box width
  int boxHeight = 150; // Increased box height
  int boxX = width / 2 - boxWidth / 2;
  int boxY = height / 2 - boxHeight / 2;
  
  fill(255);
  stroke(0); // Outline color
  rect(boxX, boxY, boxWidth, boxHeight, 8); // Rounded rectangle
  
  fill(0);
  textAlign(CENTER, CENTER);
  textSize(24);
  text(""Options"", width / 2, boxY + 30); // Title
  
  fill(150);
  rect(boxX + 10, boxY + 10, 30, 30); // Back button
  
  fill(0);
  textSize(18);
  text(""<<"", boxX + 25, boxY + 25);
}

  void drawMainUI() {
  int boxWidth = 250; // Increased box width
  int boxHeight = 150; // Increased box height
  int boxX = width / 2 - boxWidth / 2;
  int boxY = height / 2 - boxHeight / 2;
  
  fill(255);
  stroke(0); // Outline color
  rect(boxX, boxY, boxWidth, boxHeight, 8); // Rounded rectangle
  
  fill(0);
  textAlign(CENTER, CENTER);
  textSize(24);
  text(""Game Paused"", width / 2, boxY + 30); // Title
  
  textSize(18);
  
  // Draw hitbox for Button 1
  int button1X = boxX + boxWidth / 2 - 50;
  int button1Y = boxY + 60;
  fill(150);
  rect(button1X, button1Y, 100, 30);
  fill(0);
  text(""Continue"", boxX + boxWidth / 2, button1Y + 15);
  
  // Draw hitbox for Button 2
  int button2X = boxX + boxWidth / 2 - 50;
  int button2Y = boxY + 60 + buttonPadding + 30;
  fill(150);
  rect(button2X, button2Y, 100, 30);
  fill(0);
  text(""Options"", boxX + boxWidth / 2, button2Y + 15);
  }
void spawnEnemy() {
  float enemySize = 40; // Adjust the size as needed
  float enemyX = random(width - enemySize);
  float enemyY = random(height - enemySize);
  enemies.add(new Enemy(enemyX, enemyY));
}

void drawTriangleEnemy() {
  if (isTriangleEnemyVisible && triangleEnemyHealth <= 0 && !isEnemyDefeated) {
    isEnemyDefeated = true;
    defeatTimer = millis();
  }

  // Hide the triangle enemy if defeated
  if (isTriangleEnemyVisible && millis() - defeatTimer > defeatDuration) {
    isTriangleEnemyVisible = false;
  }
  if (isTriangleEnemyVisible && triangleEnemyHealth > 0) {
    fill(255, 165, 0); // Orange color for triangle enemy
    triangle(triangleEnemyX, triangleEnemyY + triangleEnemySize, 
             triangleEnemyX + triangleEnemySize / 2, triangleEnemyY, 
             triangleEnemyX + triangleEnemySize, triangleEnemyY + triangleEnemySize);
  } else {
    // Shrink the triangle enemy gradually until it disappears
    if (triangleEnemySize > 0) {
      triangleEnemySize -= 2; // Adjust the shrinking speed as needed
    } else {
      // Triangle enemy is destroyed, stop rendering it
      isTriangleEnemyVisible = false;
    }
  }

  // Draw health bar for the triangle enemy
  fill(100); // Gray color for health bar background
  rect(triangleEnemyX, triangleEnemyY - 20, triangleEnemySize, 10);

  // Draw triangle enemy health bar
  fill(255, 0, 0); // Red color for health bar
  float triangleEnemyHealthBarWidth = map(triangleEnemyHealth, 0, maxTriangleEnemyHealth, 0, triangleEnemySize);
  rect(triangleEnemyX, triangleEnemyY - 20, triangleEnemyHealthBarWidth, 10);

  // Display current triangle enemy health amount above the health bar
  fill(0); // Black color for text
  textAlign(CENTER, CENTER); // Align the text to the bottom of the bounding box
  textSize(customFontSize); // Set the font size
  text((int)triangleEnemyHealth, triangleEnemyX + triangleEnemySize / 2, triangleEnemyY - 20 - healthBarPadding); // Display health as an integer
}

// Function to check collision between the player and the purple square
boolean isPlayerCollidingWithPurpleSquare() {
  return (playerX + playerSize / 2 > purpleSquareX &&
          playerX - playerSize / 2 < purpleSquareX + purpleSquareSize &&
          playerY + playerSize / 2 > purpleSquareY &&
          playerY - playerSize / 2 < purpleSquareY + purpleSquareSize);
}

// Player functions
void movePlayer() {
  if (isMoving[0]) playerY -= playerSpeed;
  if (isMoving[1]) playerX -= playerSpeed;
  if (isMoving[2]) playerY += playerSpeed;
  if (isMoving[3]) playerX += playerSpeed;
}

// Add a new function to draw the player
void drawPlayer() {
  if (isPlayerAlive) {
    // Check if the player is not moving and not attacking
    boolean isPlayerIdle = !isMoving[0] && !isMoving[1] && !isMoving[2] && !isMoving[3] && millis() - lastAmmoRespawnTime > healthIncreaseInterval;

    // Increase player health if the player is idle and hasn't reached the maximum health
    if (isPlayerIdle && playerHealth < maxPlayerHealth) {
      playerHealth += 5; // Increase the health by 5 (you can adjust this value as needed)
      if (playerHealth > maxPlayerHealth) {
        playerHealth = maxPlayerHealth;
      }
      lastHealthIncreaseTime = millis(); // Update the time when health was last increased
    }

    // Draw the player as a colored ellipse
    if (isPlayerPoweredUp) {
      fill(150, 0, 150); // Purple color if the player is powered up
    } else {
      fill(0, 255, 0); // Green color if the player is not powered up
    }
    ellipse(playerX, playerY, playerSize, playerSize);
  } else {
    // Player health is 0 or below, make the player object disappear
    return;
  }
}

void checkCollisions() {
  // Check collisions between bullets and the enemy base
  for (int i = bullets.size() - 1; i >= 0; i--) {
    PoisonBullet bullet = bullets.get(i);
    if (bullet.hitsEnemy(enemyX, enemyY, enemySize)) {
      bullets.remove(i);
      enemyHealth -= bullet.damage; // Decrease enemy health when hit by a bullet
      if (enemyHealth <= 0) {
        enemyHealth = 0;
        isEnemyVisible = false; // The enemy is destroyed
      }

      // Add a new damage indicator at the enemy's position
      String damageText = Integer.toString(bullet.damage);
      damageIndicators.add(new DamageIndicator(enemyX + enemySize / 2, enemyY, damageText, customFont, customFontSize));
    }
  } // Check collisions between bullets and the triangle enemy
  for (int i = bullets.size() - 1; i >= 0; i--) {
    PoisonBullet bullet = bullets.get(i);
    if (bullet.hitsEnemy(triangleEnemyX, triangleEnemyY, triangleEnemySize)) {
      bullets.remove(i);
      triangleEnemyHealth -= bullet.damage; // Decrease triangle enemy health when hit by a bullet
      if (triangleEnemyHealth <= 0) {
        triangleEnemyHealth = 0;
        isTriangleEnemyVisible = false; // The triangle enemy is destroyed
      }

      // Add a new damage indicator at the triangle enemy's position
      String damageText = Integer.toString(bullet.damage);
      damageIndicators.add(new DamageIndicator(triangleEnemyX + triangleEnemySize / 2, triangleEnemyY, damageText, customFont, customFontSize));
    }
  }

  // Check collisions between enemy and the player
  float dx = enemyX - (playerX + (playerSize / 2));
  float dy = enemyY - (playerY + (playerSize / 2));
  float distance = sqrt(dx * dx + dy * dy);
  if (distance < enemySize / 2 + playerSize / 2) {
    if (millis() - lastAmmoRespawnTime > 1000) {
      playerHealth -= 1004; // Decrease player health when collided with the enemy
      lastAmmoRespawnTime = millis();
    }
    if (playerHealth <= 0) {
      playerHealth = 0;
      isPlayerAlive = false;
      // Handle player destroyed event (e.g., game over)
    }
  }

  // Check collisions between triangle enemy and the player
  dx = triangleEnemyX - (playerX + (playerSize / 2));
  dy = triangleEnemyY - (playerY + (playerSize / 2));
  distance = sqrt(dx * dx + dy * dy);
  if (distance < triangleEnemySize / 2 + playerSize / 2) {
    if (millis() - lastAmmoRespawnTime > 1000) {
      playerHealth -= 1004; // Decrease player health when collided with the triangle enemy
      lastAmmoRespawnTime = millis();
    }
    if (playerHealth <= 0) {
      playerHealth = 0;
      isPlayerAlive = false;
      // Handle player destroyed event (e.g., game over)
    }
  }
}

void drawBullets() {
  for (int i = bullets.size() - 1; i >= 0; i--) {
    PoisonBullet bullet = bullets.get(i);
    bullet.update();
    bullet.display();
  }
}

// Ammo functions
void drawAmmoCount() {
  if (isPlayerAlive) {
    float squareWidth = 15;
    float squareHeight = 10;
    float padding = 2;
    float startX = playerX - ((maxAmmoCount * squareWidth) + (padding * (maxAmmoCount - 1))) / 2;
    float startY = playerY - playerSize / 2 - padding - squareHeight;

    for (int i = 0; i < maxAmmoCount; i++) {
      float x = startX + i * (squareWidth + padding);
      float width = squareWidth;
      float height = squareHeight;

      if (i < ammoCount) {
        // Draw a filled orange rectangle for available ammo squares
        fill(255, 165, 0); // Orange color for ammo squares
      } else {
        // Draw empty gray rectangles for the rest of the ammo squares
        fill(200); // Gray color for empty ammo squares
      }
      rect(x, startY, width, height);
    }
  }
}

void updateAmmoCount() {
  // Calculate the respawn interval based on the current ammo count
  int ammoRespawnInterval = baseAmmoRespawnInterval + (maxAmmoCount - ammoCount) * 500;

  if (ammoCount < maxAmmoCount && millis() - lastAmmoRespawnTime > ammoRespawnInterval) {
    ammoCount++;
    lastRefilledAmmoIndex = (lastRefilledAmmoIndex + 1) % maxAmmoCount; // Update the last refilled ammo index
    lastAmmoRespawnTime = millis(); // Update the refill start time
  }
}

int healthBarPadding = 13; // Padding between health bar and text

void drawPlayerHealthBar() {
  if (isPlayerAlive) {
    float healthBarWidth = map(playerHealth, 0, maxPlayerHealth, 0, playerSize);
    float healthBarHeight = 10;

    // Adjust the position of the health bar above the player
    float healthBarX = playerX - playerSize / 2;
    float healthBarY = playerY - playerSize / 2 - healthBarHeight - healthBarPadding;

    fill(100); // Gray color for health bar background
    rect(healthBarX, healthBarY, playerSize, healthBarHeight);

    fill(0, 255, 0); // Green color for health bar
    rect(healthBarX, healthBarY, healthBarWidth, healthBarHeight);

    // Display current player health amount above the health bar
    fill(0); // Black color for text
    textAlign(CENTER, CENTER); // Align the text to the bottom of the bounding box
    textSize(customFontSize); // Set the font size
    text((int)playerHealth, playerX, healthBarY - healthBarPadding); // Display health as an integer
  }
}

void mouseClicked() {
  if (showMainUI) {
    int boxWidth = 250; // Increased box width
    int boxHeight = 150; // Increased box height
    int boxX = width / 2 - boxWidth / 2;
    int boxY = height / 2 - boxHeight / 2;
    
    // Check if Button 1 is clicked
    int button1X = boxX + boxWidth / 2 - 50;
    int button1Y = boxY + 60;
    if (mouseX > button1X && mouseX < button1X + 100 &&
        mouseY > button1Y && mouseY < button1Y + 30) {
      // Button 1 clicked
      showMainUI = false;
    }
    
    // Check if Button 2 is clicked
    int button2X = boxX + boxWidth / 2 - 50;
    int button2Y = boxY + 60 + buttonPadding + 30;
    if (mouseX > button2X && mouseX < button2X + 100 &&
        mouseY > button2Y && mouseY < button2Y + 30) {
      // Button 2 clicked
      showMainUI = false;
      showOptionsUI = true;
    }
  } else if (showOptionsUI) {
    int boxWidth = 250; // Increased box width
    int boxHeight = 150; // Increased box height
    int boxX = width / 2 - boxWidth / 2;
    int boxY = height / 2 - boxHeight / 2;
    
    if (mouseX > boxX + 10 && mouseX < boxX + 40 &&
        mouseY > boxY + 10 && mouseY < boxY + 40) {
      showOptionsUI = false;
      showMainUI = true;
    }
  }
}

void keyPressed() {
  if (key == 'w' || key == 'W') isMoving[0] = true;
  else if (key == 'a' || key == 'A') isMoving[1] = true;
  else if (key == 's' || key == 'S') isMoving[2] = true;
  else if (key == 'd' || key == 'D') isMoving[3] = true;
  else if (key == 'c' || key == 'C') {
    currentAttackMode = (currentAttackMode + 1) % 2;
  }
  if (key == TAB) {
    isUIVisible = !isUIVisible;
    if (isUIVisible) {
      // Reset the UI states when it becomes visible
      showMainUI = false;
      showOptionsUI = false;
    }
  }
}

// Function to handle key releases
void keyReleased() {
  if (key == 'w' || key == 'W') isMoving[0] = false;
  else if (key == 'a' || key == 'A') isMoving[1] = false;
  else if (key == 's' || key == 'S') isMoving[2] = false;
  else if (key == 'd' || key == 'D') isMoving[3] = false;
}

// Declare angle, lastMouseX, and lastMouseY as global variables
float angle;
float lastMouseX;
float lastMouseY;

void mousePressed() {
  if (isPlayerAlive && millis() - lastAmmoRespawnTime > ammoRespawnInterval) {
    // Calculate the angle based on the mouse position
    angle = atan2(mouseY - playerY, mouseX - playerX);

    // Store the last mouse position
    lastMouseX = mouseX;
    lastMouseY = mouseY;

    // Determine the attack mode and add bullets accordingly
    switch (currentAttackMode) {
      case TRIANGLE_SHOT:
        if (ammoCount >= TRIANGLE_SHOT_AMMO) {
          // Create the central bullet
          bullets.add(new PoisonBullet(playerX, playerY, angle, maxTriangleShotDamage));

          // Create the left bullet
          float leftBulletAngle = angle + leftBulletOffset;
          bullets.add(new PoisonBullet(playerX, playerY, leftBulletAngle, maxTriangleShotDamage));

          // Create the right bullet
          float rightBulletAngle = angle + rightBulletOffset;
          bullets.add(new PoisonBullet(playerX, playerY, rightBulletAngle, maxTriangleShotDamage));

          ammoCount -= TRIANGLE_SHOT_AMMO;
          lastAmmoRespawnTime = millis();
        }
        break;

      case SINGLE_TRIANGLE_SHOT:
        if (ammoCount >= SINGLE_TRIANGLE_SHOT_AMMO) {
          // Create a single triangle bullet
          bullets.add(new PoisonBullet(playerX, playerY, angle, maxSingleTriangleShotDamage));

          ammoCount -= SINGLE_TRIANGLE_SHOT_AMMO;
          lastAmmoRespawnTime = millis();
        }
        break;
    }
  }
}

// PoisonBullet class
class PoisonBullet {
  float x, y;
  float speed = 10;
  float angle;

  int damage; // Damage value for the bullet

  PoisonBullet(float x, float y, float angle) {
    this.x = x;
    this.y = y;
    this.angle = angle;
    this.damage = 5000; // Default damage for the triangle shot
  }

  PoisonBullet(float x, float y, float angle, int damage) {
    this.x = x;
    this.y = y;
    this.angle = angle;
    this.damage = damage;
  }

  void update() {
    x += cos(angle) * speed;
    y += sin(angle) * speed;
  }

  void display() {
    fill(0, 90, 255); // Blue color for bullets
    pushMatrix();
    translate(x, y);
    rotate(angle - HALF_PI);
    triangle(0, 0, -5, -15, 5, -15);
    popMatrix();
  }

  boolean isOffScreen() {
    return (x < 0 || x > width || y < 0 || y > height);
  }
 
 boolean hitsEnemy(float enemyX, float enemyY, float enemySize) {
  float dx = enemyX + enemySize / 2 - x;
  float dy = enemyY + enemySize / 2 - y;
  float distance = sqrt(dx * dx + dy * dy);
  return distance < enemySize / 2 + 15 / 2; // 15 is the width of the bullet triangle
}
}"
