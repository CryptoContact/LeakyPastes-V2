id,title,username,language,date,content
yXn1e6Eh,data833,TestGuy1,JSON,Wednesday 7th of February 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '59f66dad43f2ce44c4ccdb4da830214202da24d819d0c1474e13598a064918d6c43bb9362363e5c1a2eb1e7e6e36d634ab67ac58ee5481614fa1c9d43ce98003cac7101d01fdcc63aa8127a3bfd45f86fe67374c76d7cac530ee9ab7723867624f236ea8f16a8ef3821fa2b14c6574b262609edd203be72bb0ad6fef875aff50',
  otherdata: [
    'fc56c21e764b0ab6b71de882f6b48947',
    'bb4eda1c43dadd7ce8949d4f3169dc9d',
    '64a49fc16a46be4fa5225443ec417e63',
    'ef342e7553bc2c4aea25ffe9bfd15363',
    '106ace4061e31617fe94985115d865fb',
    '6cfacc127adef2609929be4bd7af645c',
    '6bd86222f09f60244efc406b59175033',
    '3e3dccac22fea26256207d14baa1ed06'
  ]
}"
c4YJMXtW,PurchaseData,Pro_Unit,C#,Wednesday 7th of February 2024 05:45:07 AM CDT,"using System;

using Game.PaymentsSystem.Data;

using UnityEngine;

namespace Game.PaymentsSystem
{
	[Serializable]
	public class PurchaseData
	{
		/// <summary>
		/// Тип метода оплаты
		/// </summary>
		[SerializeField] private PaymentMethodType _paymentMethodType;

		/// <summary>
		/// Данные метода оплаты
		/// </summary>
		[field: SerializeReference] public IPaymentMethodData PaymentMethodData { get; private set; }

		/// <summary>
		/// Метод для валидации данных
		/// </summary>
		public void Validate()
		{
			PaymentMethodData = _paymentMethodType switch
			{
				PaymentMethodType.Free when PaymentMethodData is not FreePaymentMethodData =>
					new FreePaymentMethodData(),
				PaymentMethodType.Currency when PaymentMethodData is not CurrencyPaymentMethodData =>
					new CurrencyPaymentMethodData(),
				PaymentMethodType.InAppPurchase when PaymentMethodData is not InAppPurchasePaymentData =>
					new InAppPurchasePaymentData(),
				_ => PaymentMethodData
			};
		}
	}
}
"
VPBd9YBX,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Wednesday 7th of February 2024 05:37:17 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_426261.pdf
 
Working as of
07 February 2024"
gep2xzt1,Better Ender Dig,Nosnate,Lua,Wednesday 7th of February 2024 05:33:29 AM CDT,"print ""Enderchest in slot 1, Torches in slot 15 (optional), Fuel in slot 16 (optional, allows turtle to eat found fuel as a last resort).""
print ""How far is this mine? (x)""
local xSize = tonumber(io.read())
print ""How high? (y)""
local ySize = tonumber(io.read())
print ""How wide (to the left)? (z) (even numbers are more efficient)""
local zSize = tonumber(io.read())

while turtle.getItemCount(1) < 1 do
  print ""Please put an ENDER CHEST in slot 1. Hit any key when done.""
  os.pullEvent(""char"")
end

-- 0 = South, 1 = West, 2 = North, 3 = East
-- These are relative values, not necessarily the Minecraft facing dir (which you need wireless for)
-- If the player isn't actually facing south, x and z will be inverted or reversed. That's OK.
local iDirection = 0

local xMovedFromOrigin = 0
local yMovedFromOrigin = 0
local zMovedFromOrigin = 0

local bHasTorches = turtle.getItemCount(15) > 0
local bHasFuel = turtle.getItemCount(16) > 0

function CheckFuel()
  if not bHasFuel then
    return true
  end

  if turtle.getFuelLevel() <= 10 then
    turtle.select(16)
    turtle.refuel(1)
    if turtle.getFuelLevel() <= 10 then
      -- Phase 2: Low fuel, refueling failed, return home
    end
  end

  if turtle.getFuelLevel() <= 1 then
    print ""OOF: Out Of Fuel :(/>""
    print ""I'm going to eat your coal""
    shell.run(""refuel"", ""all"")
    if turtle.getFuelLevel() <= 1 then
      print ""I am STILL out of fuel... turtle starving...""
      print ""going... dark...""
      print ""...so... cold... sleepy...""
      turtle.sleep(120)
      return false
    end
  end

  return true
end

function MoveForward()
  CheckFuel()

  if turtle.forward() then
    if iDirection == 0 then
      zMovedFromOrigin = zMovedFromOrigin + 1
    elseif iDirection == 1 then
      xMovedFromOrigin = xMovedFromOrigin - 1
    elseif iDirection == 2 then
      zMovedFromOrigin = zMovedFromOrigin - 1
    elseif iDirection == 3 then
      xMovedFromOrigin = xMovedFromOrigin + 1
    end
    return true
  else
    return false
  end
end

function TurnLeft()
  iDirection = iDirection - 1
  if iDirection < 0 then
    iDirection = 3
  end
  turtle.turnLeft()
end

function TurnRight()
  iDirection = iDirection + 1
  if iDirection > 3 then
    iDirection = 0
  end
  turtle.turnRight()
end

function MoveUp()
  CheckFuel()
  if turtle.up() then
    yMovedFromOrigin = yMovedFromOrigin + 1
    return true
  end
  return false
end

function MoveDown()
  CheckFuel()
  if turtle.down() then
    yMovedFromOrigin = yMovedFromOrigin - 1
    return true
  end
  return false
end

function PlaceTorch()
  if not bHasTorches then
    return
  end

  if turtle.getItemCount(15) >= 1 then
    local iSaveDirection = iDirection
    while iDirection ~= 2 do
      TurnRight()
    end

    turtle.select(15)
    turtle.place()

    while iDirection ~= iSaveDirection do
      TurnLeft()
    end
  end
end

function DigUp(iBlocks)
  if iBlocks == 0 then
    return true
  end
  local direction = 1
  if iBlocks < 0 then
    direction = -1
    iBlocks = math.abs(iBlocks)
  end
  for y = 1, iBlocks do
    if direction == -1 then
      if not MoveUp() then
        return false  -- Unable to move further up
      end
      yMovedFromOrigin = yMovedFromOrigin + 1
    else
      if not MoveDown() then
        return false  -- Unable to move further down
      end
      yMovedFromOrigin = yMovedFromOrigin - 1
    end
  end
  return true
end

"
yzKLGvR4,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Wednesday 7th of February 2024 05:08:29 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://claim-netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://claim-netdrop.netlify.app/

608335"
PHxzfHUR,Idle Game Maker Hacked,AkashiKha,JavaScript,Wednesday 7th of February 2024 04:27:21 AM CDT,"Let's make a game!
	name:Bunny Clicker
	by:Orteil
	desc:This is a simple idle game to showcase some of the basic functionalities of Idle Game Maker.<//>Make bunnies and shoot for the stars!
	created:25/7/2017
	updated:24/10/2017
	version:1

Settings
	background:stuff/meadow.jpg
	building cost increase:115%
	building cost refund:50%
	spritesheet:icons, 48 by 48, stuff/bunnyIcons.png
	stylesheet:stuff/bigBlue.css

Layout
	use default
		
Buttons
	*bunnyButton
		name:Make a bunny
		desc:Click this little bunny to get more bunnies!
		on click:anim icon wobble
		on click:yield 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 bunny
		on click:yield 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 goldenCarrot
		icon:stuff/bunny.png
		no text
		class:bigButton hasFlares
		icon class:shadowed
		tooltip origin:bottom
		tooltip class:red
		
Resources
	*bunny|bunnies
		name:Bunny|Bunnies
		desc:These are your bunnies. You can use them to purchase things. Your goal is to have as many bunnies as possible!
		icon:icons[0,0]
		class:noBackground
		show earned
		
	*goldenCarrot|goldenCarrots
		name:Golden carrot|Golden carrots
		desc:These shiny carrots are terribly rare, terribly precious and terribly delicious!
		icon:icons[0,1]
		class:noBackground
		hidden when 0
		
Shinies
	*luckyBunny
		on click:log Woop
		movement:onRight moveLeft fade bounce:0.05
		frequency:60
		frequency variation:30
		icon:stuff/luckyBunny.png
		class:bigButton
		on click:
			$boost=1
			if (have clover) $boost=4
			if (chance(25%))
				//get at least 7, or between 1 and 3 minutes of our bunny production
				$amount=max(7,random(bunnies:ps*60*1,bunnies:ps*60*3))*$boost
				toast The lucky bunny grants you<//><b>[$amount] bunnies</b>.
				yield $amount bunnies
			else
				$amount=1*$boost
				toast The lucky bunny grants you<//><b>[$amount] golden carrot[s?$amount]</b>!
				yield $amount goldenCarrot
			end
		end

Buildings
	*TEMPLATE
		on click:anim glow
		
	*cage|cages
		name:Rabbit cage|Rabbit cages
		desc:A tiny little cage.<//><b>Effect:</b><.>Produces 1 rabbit every 10 seconds.
		icon:icons[3,0]
		cost:1 bunnies
		on tick:yield 0.1 bunny
		unlocked
	
	*hutch|hutches
		name:Rabbit hutch|Rabbit hutches
		desc:A bit roomier than a cage, with enough space to hop around.<//><b>Effect:</b><.>Produces 1 rabbit every 2 seconds.
		icon:icons[3,1]
		cost:1 bunnies
		on tick:yield 0.5 bunnies
		req:100 bunnies:earned
	
	*coop|coops
		name:Rabbit coop|Rabbit coops
		desc:A much nicer rabbit home where full bunny families can live.<//><b>Effect:</b><.>Produces 5 rabbits per second.
		icon:icons[3,2]
		cost:1 bunnies
		on tick:yield 5 bunnies
		req:600 bunnies:earned
	
	*pen|pens
		name:Rabbit pen|Rabbit pens
		desc:A lovely enclosure with plenty of green space.<//><b>Effect:</b><.>Produces 12 rabbits per second.
		icon:icons[3,3]
		cost:1 bunnies
		on tick:yield 12 bunnies
		req:4000 bunnies:earned
	
	*meadow|meadows
		name:Rabbit meadow|Rabbit meadows
		desc:A wide open space full of shade and lush grass.<//><b>Effect:</b><.>Produces 90 rabbits per second.
		icon:icons[3,4]
		cost:1 bunnies
		on tick:yield 90 bunnies
		req:20000 bunnies:earned
	
	*village|villages
		name:Rabbit village|Rabbit villages
		desc:Your bunnies are building their own villages now!<//><b>Effect:</b><.>Produces 300 rabbits per second.
		icon:icons[3,5]
		cost:1 bunnies, 1 goldenCarrot
		on tick:yield 300 bunnies
		req:200000 bunnies:earned and independenceDay
		
	*city|cities
		name:Rabbit city|Rabbit cities
		desc:A bustling little city, populated with busy rabbits.<//><b>Effect:</b><.>Produces 1000 rabbits per second.
		icon:icons[3,6]
		cost:1 bunnies, 1 goldenCarrots
		on tick:yield 1000 bunnies
		req:3000000 bunnies:earned and independenceDay
		
	*citadel|citadels
		name:Moon citadel|Moon citadels
		desc:An ornate palace standing on the moon, ruled by bunny kings and queens and staffed with royal bunny guards.<//><b>Effect:</b><.>Produces 4000 rabbits per second.
		icon:icons[3,7]
		cost:1 bunnies, 1 goldenCarrots
		on tick:yield 4000 bunnies
		on tick:if (have moonGardens) yield 0.01 goldenCarrot
		req:70000000 bunnies:earned and independenceDay
		
	*fortress
		name:Freedom fortress
		text:Freedom fortress ([this]%)
		desc:A huge bunny castle. A monument to the adventurous spirit of bunnykind, which will take time and effort to complete.<//><b>The fortress is [this]% complete.</b>
		icon:icons[3,8]
		cost:1 bunnies, 1 goldenCarrots
		req:70000000 bunnies:earned and independenceDay
		limit:100
		cost increase:105%
		
Upgrades
	*TEMPLATE
		on click:anim glow
	
	//food upgrades
	//inspiration : http://rabbit.org/suggested-vegetables-and-fruits-for-a-rabbit-diet/
	
	*parsley
		name:Parsley
		desc:A nice little supplement to your bunnies' diet.<//><b>Effect:</b><.>+1 bunny/click
		icon:icons[1,1]
		cost:1 bunnies
		passive:increase bunny yield of bunnyButton by 1
		req:10 bunnies:earned
		
	*spinach
		name:Spinach
		desc:Big tasty leaves, perfect for hungry bunnies.<//><b>Effect:</b><.>+1 bunny/click
		icon:icons[1,2]
		cost:1 bunnies
		passive:increase bunny yield of bunnyButton by 1
		req:50 bunnies:earned
		
	*lettuce
		name:Lettuce
		desc:Frilly greens loved by all bunnies.<//><b>Effect:</b><.>+1 bunny/click
		icon:icons[1,3]
		cost:1 bunnies
		passive:increase bunny yield of bunnyButton by 1
		req:200 bunnies:earned
		
	*broccoli
		name:Broccoli
		desc:Crunchy greens that look like little trees.<//><b>Effect:</b><.>bunnies/click x2<.>bunny production +5%
		icon:icons[1,4]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 2
		passive:multiply yield of bunnies by 1.05
		req:1000 bunnies:earned
		
	*apple
		name:Apple
		desc:Nice pieces of juicy red apples.<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,5]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:1000 bunnies:earned
		
	*radish
		name:Radish
		desc:Purple, crunchy, and strangely spicy.<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,6]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:10000 bunnies:earned
		
	*mint
		name:Mint
		desc:Tasty, and gives your bunnies a lovely breath.<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,7]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:50000 bunnies:earned
		
	*chard
		name:Chard
		desc:Broad leaves that make for a tasty salad.<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,8]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:100000 bunnies:earned
		
	*cherry
		name:Cherry
		desc:Your bunnies look like little vampires when they start munching on these!<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,9]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:500000 bunnies:earned
		
	*carrot
		name:Carrot
		desc:The quintessential rabbit food! Crunchy, orange, and perfect.<//><b>Effect:</b><.>bunnies/click x2<.>bunny production +10%
		icon:icons[1,0]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 2
		passive:multiply yield of bunnies by 1.1
		req:1000000 bunnies:earned
	
	//building upgrades
	
	*buildingUpgrade1
		name:Sippy bottles
		desc:Your bunnies can drink their fill!<//><b>Effect:</b><.>rabbit cage production x2<.>rabbit hutch production x2<.>rabbit coop production x2
		icon:icons[2,0] icons[3,0]
		cost:1 bunnies
		passive:multiply yield of cage by 2
		passive:multiply yield of hutch by 2
		passive:multiply yield of coop by 2
		req:(cages>=10 or hutches>=10 or coops>=10)
		
	*buildingUpgrade2
		name:Prime grade hay
		desc:Not just for horses anymore!<//><b>Effect:</b><.>rabbit cage production x2<.>rabbit hutch production x2<.>rabbit coop production x2
		icon:icons[2,0] icons[3,1]
		cost:1 bunnies
		passive:multiply yield of cage by 2
		passive:multiply yield of hutch by 2
		passive:multiply yield of coop by 2
		req:(cages>=50 or hutches>=50 or coops>=50)
		
	*buildingUpgrade3
		name:Shredded newspapers
		desc:You'd think they just poop on these, but they really enjoy reading the Sunday comics.<//><b>Effect:</b><.>rabbit cage production x2<.>rabbit hutch production x2<.>rabbit coop production x2
		icon:icons[2,0] icons[3,2]
		cost:1 bunnies
		passive:multiply yield of cage by 2
		passive:multiply yield of hutch by 2
		passive:multiply yield of coop by 2
		req:(cages>=100 or hutches>=100 or coops>=100)
		
	*buildingUpgrade4
		name:Pretty fences
		desc:Just the right size so your bunnies can peek through but not hop over!<//><b>Effect:</b><.>rabbit pen production x2<.>rabbit meadow production x2
		icon:icons[2,0] icons[3,3]
		cost:1 bunnies
		passive:multiply yield of pen by 2
		passive:multiply yield of meadow by 2
		req:(pens>=10 or meadows>=10)
		
	*buildingUpgrade5
		name:Bunny playground
		desc:If your bunnies are outside, they might as well get some exercise!<//><b>Effect:</b><.>rabbit pen production x2<.>rabbit meadow production x2
		icon:icons[2,0] icons[3,4]
		cost:1 bunnies
		passive:multiply yield of pen by 2
		passive:multiply yield of meadow by 2
		req:(pens>=50 or meadows>=50)
		
	*buildingUpgrade6
		name:Bunny TVs
		desc:Televisions that broadcast bunny cartoons, bunny sitcoms, and bunny news bulletins.<//><b>Effect:</b><.>rabbit village production x2<.>rabbit city production x2
		icon:icons[2,0] icons[3,5]
		cost:1 bunnies
		passive:multiply yield of village by 2
		passive:multiply yield of city by 2
		req:(villages>=10 or cities>=10)
		
	*buildingUpgrade7
		name:Wee little bunny cars
		desc:Your bunnies drive around in these. How nice!<//><b>Effect:</b><.>rabbit village production x2<.>rabbit city production x2
		icon:icons[2,0] icons[3,6]
		cost:1 bunnies
		passive:multiply yield of village by 2
		passive:multiply yield of city by 2
		req:(villages>=50 or cities>=50)
		
	*buildingUpgrade8
		name:Soothing moon crystals
		desc:Just really nice to be around.<//><b>Effect:</b><.>moon citadel production x2
		icon:icons[2,0] icons[3,7]
		cost:1 bunnies
		passive:multiply yield of citadel by 2
		req:10 citadels
		
	//golden carrot upgrades
	
	*goldenTouch
		name:Golden touch
		desc:The delicate art of finding vegetables made of precious metals.<//><b>Effect:</b><.>1% chance of gaining 1 golden carrot per bunny click
		icon:icons[2,5]
		cost:1 goldenCarrot
		req:1 goldenCarrot:earned
		
	*rabbitHaste
		name:Rabbit's haste
		desc:I'm late! I'm late! For a very important date!<//><b>Effect:</b><.>lucky bunnies appear 30% more often
		icon:icons[2,6]
		passive:multiply frequency of luckyBunny by 0.7
		cost:1 goldenCarrots
		req:1 goldenCarrot:earned
	
	*independenceDay
		name:Independence day
		desc:Your bunnies are making their first step towards declaring their independence from the oppressive shackles of pens and cages.<//><b>Effect:</b><.>unlocks new buildings
		icon:icons[2,7]
		cost:1 goldenCarrots
		req:5 goldenCarrots:earned
		
	*clover
		name:Clover
		desc:A delicious herb that tastes lucky.<//><b>Effect:</b><.>lucky bunny effects are 4 times more powerful
		icon:icons[2,8]
		cost:1 goldenCarrots
		req:50 goldenCarrots:earned
		
	*moonGardens
		name:Moon gardens
		desc:The royal botanists in your moon citadels have found new ways of cultivating plants in reduced gravity!<//><b>Effect:</b><.>moon citadels now produce 1 golden carrot every 100 seconds
		icon:icons[2,9]
		cost:1 goldenCarrots
		req:50 goldenCarrots:earned
		
Achievements
	*TEMPLATE
		on click:anim glow
		
	*bunnyAchiev1
		name:Run rabbit run
		desc:Have <b>1</b> bunny.
		req:1 bunny
		icon:icons[2,4] icons[0,2] icons[0,6]
	*bunnyAchiev2
		name:Bunniest home videos
		desc:Have <b>1000</b> bunnies.
		req:1 bunnies
		icon:icons[2,4] icons[0,3] icons[0,6]
	*bunnyAchiev3
		name:You got buns, hun
		desc:Have <b>1000000</b> bunnies.
		req:1 bunnies
		icon:icons[2,4] icons[0,4] icons[0,6]
		
	*clickAchiev1
		name:That tickles
		desc:Click the bunny <b>10</b> times.
		req:1 bunnyButton clicks
		icon:icons[2,2] icons[0,2] icons[0,6]
	*clickAchiev2j
		name:Don't squeeze me I'll fart
		desc:Click the bunny <b>100</b> times.
		req:1 bunnyButton clicks
		icon:icons[2,2] icons[0,3] icons[0,6]
	*clickAchiev3
		name:You're cruising for a bruising, dude
		desc:Click the bunny <b>2000</b> times.
		req:1 bunnyButton clicks
		icon:icons[2,2] icons[0,4] icons[0,6]
		
	*bunnyPsAchiev1
		name:Be vewy vewy quiet
		desc:Produce <b>10</b> bunnies per second.
		req:1 bunnies per second
		icon:icons[2,3] icons[0,2] icons[0,6]
	*bunnyPsAchiev2
		name:Hop and a skip
		desc:Produce <b>1000</b> bunnies per second.
		req:1 bunnies per second
		icon:icons[2,3] icons[0,3] icons[0,6]
	*bunnyPsAchiev3
		name:Go forth and multiply
		desc:Produce <b>100000</b> bunnies per second.
		req:1 bunnies per second
		icon:icons[2,3] icons[0,4] icons[0,6]
		
	*carrotAchiev1
		name:Isn't it neat
		desc:Have <b>1</b> golden carrot.
		req:1 goldenCarrot
		icon:icons[0,1] icons[0,2]
	*carrotAchiev2
		name:All that glitters
		desc:Have <b>100</b> golden carrots.
		req:1 goldenCarrot
		icon:icons[0,1] icons[0,3]
	*carrotAchiev3
		name:Zero nutritional value
		desc:Have <b>1000</b> golden carrots.
		req:1 goldenCarrot
		icon:icons[0,1] icons[0,4]
	
	*fortressAchiev
		name:Freedom!
		desc:Complete building the <b>freedom fortress</b>.<//>This is it. You beat the game!
		req:1 fortress
		icon:icons[3,8] icons[0,4]
		"
aya5CiJh,Toolset View list routes Max (Ivan),maxworkingwell,HTML 5,Wednesday 7th of February 2024 04:01:26 AM CDT,"[wpv-layout-start]
[wpv-items-found]
<!-- wpv-loop-start -->
<wpv-loop>
<div class=""row"">
<div class=""col-sm-12"">

<div class=""container-fluid"">
    <div class=""panel-group"">
      <div class=""panel-heading"">
        <span>
          <a style=""color:black;font-weight:400;"" data-toggle=""collapse"" href=""#[wpv-post-slug]"">
            
<!--========    PRIMA RIGA  ========-->
<div class=""row"">  
  <div class=""col-xs-1""><p>[types field='route-position' format='FIELD_VALUE'][/types]</p></div>
  <div class=""col-xs-2 sector-icons"">[wpv-view name=""route-quick-details-2""]</div>
  <div class=""col-xs-3""><p>[wpv-post-title output=""sanitize""]</p></div>
  <div class=""col-xs-2""><p style=""float:right"">[types field='grade'][/types]</p></div>
  <div class=""col-xs-2""><p style=""float:right"">[types field='height'][/types] m</p></div>
  <div class=""col-xs-2""><a href=""[wpv-post-url]""><img src=""https://climbingsardinia.com/topos/icons/plus.png"" alt=""View Route or Add Performance"" title=""Add your performance""width=""20px;"" style=""float:right"" /></a></div>
</div>  
</a>  
        </span>
</div>

<div id=""[wpv-post-slug]"" class=""panel-collapse collapse"" style=""padding:0 10px;""> 
  
  <!--========   RIGA ICONE     ========-->
  	<div class=""row"" style=""padding:10px 0;""> 
    	<div class=""col-xs-3 sector-icons center"">[types field='danger'][/types]</div>
    	<div class=""col-xs-6 smallfont center""><img style=""max-width:30px;"" src=""https://climbingitaly.com/icons/[wpv-conditional if=""( $(wpcf-climbing-type) eq '1' )""]bolted.png"" alt=""Sport climbing""/>SPORT route[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '2' )""]trad.png"" />TRAD route[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '3' )""]bolted.png"" alt=""Bolted multi-pitch""/>Multi-pitch BOLTED[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '4' )""]trad.png"" />Multi-pitch TRAD[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '5' )""]boulder.png"" />Boulder[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '6' )""]DWS.png"" />DWS[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '7' )""]mixed.png"" />Multi-pitch PARTIALLY BOLTED[/wpv-conditional]</div>
      	<div class=""col-xs-3 center"">[wpv-view name=""my-route-favourite-icon""]</div> 	
      </div>
  <!--========     RIGA DETTAGLI    ========-->
    [wpv-conditional if=""( $(wpcf-bolter-s) eq '' ) AND ( $(wpcf-year-bolted) eq '' ) AND ( $(wpcf-year-re-bolted) eq '' ) AND ( $(wpcf-equipment-used) eq '' )"" evaluate=""false""]<div class=""row dash"">
      <div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Created by</p><b>[types field='bolter-s'][/types]</b></div>
        <div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Year</p><b>[types field='year-bolted'][/types]</b></div>  
    	<div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Last re-bolted</p><b>[types field='year-re-bolted'][/types]</b></div>  
    	<div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Equipment</p><b>[types field='equipment-used'][/types]</b></div>  
      </div>
[/wpv-conditional]
   <!--========    RIGA MULTI-PITCH     ========-->
	  [wpv-conditional if=""( $(wpcf-climbing-type) eq '3' ) OR ( $(wpcf-climbing-type) eq '4' ) OR ( $(wpcf-climbing-type) eq '7' )""]<div class=""row dash"">
      <div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Obligatory</p><b>[types field='oblig-grade'][/types]</b></div>
        <div class=""col-xs-3 smallfont center""><p style=""color:grey;"">n. of pitches</p><b>[types field='n-pitches' output='raw'][/types]</b></div>  
    	<div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Pitches grades</p><b>[types field='pitches-grades'][/types]</b></div>  
    	<div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Pitches lenght</p><b>[types field='pitches-length'][/types]</b></div>  
  	</div>[/wpv-conditional]
  
  <!--========     RIGA NOTE       ========-->
 [wpv-conditional if=""( $(wpcf-notes) ne '' )""]
  <div class=""row dash""> 
    <div class=""col-xs-12 note""> <b>NOTE:</b> [types field='notes'][/types]</div> 
  </div>
  [/wpv-conditional]
  
   <!--========        PREVIOUS ASCENTS          ========--> 
  
         [wpv-view name=""other-climbers-ascents-quick-view""]
  
   <!--========    ULTIMA RIGA PER GLI EDITORI     ========-->
[wpv-conditional if=""( '[wpv-current-user info='role']' eq 'administrator' ) OR ( '[wpv-current-user info='role']' eq 'editor' ) OR ( '[wpv-current-user info='role']' eq 'author' )""]
<div class=""row dash"" id=""add-edit-note"" style=""padding: 0 10px; border-top: 1px dashed lightgray;""> 
<div class=""col-xs-4 smallfont center"">
<p><a class=""cred-edit-post"" href=""/route/[wpv-post-slug]/?layout_id=4847"" target=""_blank"">Add/Edit note</a></p>
</div>
<div class=""col-xs-4 smallfont center"">
<p><a class=""cred-edit-post"" href=""/route/[wpv-post-slug]/?layout_id=4048"" target=""_blank"">Edit route</a></p>
</div>
<div class=""col-xs-4 smallfont center"">[cred_delete_post_link action=""trash"" text=""Delete"" class='cred-refresh-after-delete' message_after=""Post deleted"" message=""Are you sure you want to delete this post?"" message_show=""1""]</div>
</div> 
[/wpv-conditional]
</div>
</div>
</div>
<hr id=""routes-separ"" />

</div>  
</div>
</wpv-loop>
<!-- wpv-loop-end -->
[/wpv-items-found]
[wpv-no-items-found]
<strong>[wpml-string context=""wpv-views""]It's a bit weird... but there's no routes on this sector[/wpml-string]</strong>
[/wpv-no-items-found]
[wpv-layout-end]"
2AkEMmVA,TooletForm create new route (Ivan),maxworkingwell,HTML 5,Wednesday 7th of February 2024 03:57:40 AM CDT,"[credform class='cred-form cred-keep-original']
	[cred_field field='form_messages' value='' class='alert alert-warning']

<div class=""row hide"">
	<div class=""col-sm-12"">
      [cred_field field='@sector_route.parent' class='form-control' output='bootstrap' value='[wpv-post-id]'] 
      [cred_field field='@settore-sicilia-route.parent' class='form-control' output='bootstrap' value='[wpv-post-id]']
      
[wpv-conditional if=""( '[wpv-post-type]' eq '/sicilia' )""]<input type=""text"" id=""rel-slug"" name=""rel-slug"" value=""settore-sicilia-route"">
[/wpv-conditional]

[wpv-conditional if=""( '[wpv-post-type]' eq '/sardegna' )""]<input type=""text"" id=""rel-slug"" name=""rel-slug"" value=""sector_route"">
[/wpv-conditional]
    </div>
</div>
<div class=""row"" style=""text-align:center;"">
  	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='route-position' force_type='field' class='form-control' output='bootstrap']</div>
	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='post_title' class='form-control' output='bootstrap' placeholder='Route Name']</div>
	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='grade' force_type='field' class='form-control' output='bootstrap']</div>
    <div class=""col-sm-3"">[cred_field field='height' force_type='field' class='form-control' output='bootstrap']</div> 
</div>
<p></p>
<div class=""row"">
 	<div class=""col-sm-3""><label>Climbing Type</label>[cred_field field='climbing-type' force_type='field' class='form-control' output='bootstrap']</div>
    <div class=""col-sm-3"" style=""margin-bottom:10px;""><label>Belongs to img.</label>[cred_field field='@image-route.parent' class='form-control' output='bootstrap' select_text='--- not set ---']</div>
    <div class=""col-sm-6"">[cred_field field='path' force_type='field' class='form-control' output='bootstrap']</div>
</div>
<p></p>
[cred_show_group if=""( $(climbing-type) eq '1' ) OR ( $(climbing-type) eq '2' ) OR ( $(climbing-type) eq '3' ) OR ( $(climbing-type) eq '4' ) OR ( $(climbing-type) eq '7' )"" mode=""fade-slide""]
<div class=""row"">
	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='bolter-s' force_type='field' class='form-control' output='bootstrap']</div>
  	<div class=""col-sm-2"" style=""margin-bottom:10px;"">[cred_field field='year-bolted' force_type='field' class='form-control' output='bootstrap']</div>
	<div class=""col-sm-2"">[cred_field field='year-re-bolted' force_type='field' class='form-control' output='bootstrap']</div>
	<div class=""col-sm-3""><label>Equipment</label>[cred_field field='equipment-used' force_type='field' class='form-control' output='bootstrap']</div>
  	<div class=""col-sm-2""><label>Dangers?</label>[cred_field field=""danger"" force_type=""field"" class=""form-control"" output=""bootstrap""]</div> 	
</div>
[/cred_show_group]
<p></p>
[cred_show_group if=""( $(climbing-type) eq '3' ) OR ( $(climbing-type) eq '4' ) OR ( $(climbing-type) eq '7' )"" mode=""fade-slide""]<div class=""row"">
  	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='pitches-length' force_type='field' class='form-control' output='bootstrap']</div>
  	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='n-pitches' force_type='field' class='form-control' output='bootstrap']</div>
    <div class=""col-sm-3"">[cred_field field='pitches-grades' force_type='field' class='form-control' output='bootstrap']</div>
  	<div class=""col-sm-3""><label>Obligatory</label>[cred_field field='oblig-grade' force_type='select' class='form-control' output='bootstrap']</div>
    
</div>[/cred_show_group]
<p></p>
<div class=""row"">
 	<div class=""col-sm-12"">[cred_field field='notes' force_type='field' class='form-control' output='bootstrap']</div>
</div>
<div class=""row"" style=""padding:15px 0;""> 
	[cred_field field='form_submit' value='Submit' urlparam='' class='btn btn-primary btn-lg' output='bootstrap']
</div>
[/credform]"
H8nGPKWE,Untitled,Xfox,JavaScript,Wednesday 7th of February 2024 03:06:46 AM CDT,"const express = require(""express"");
const axios = require(""axios"");
const bodyParser = require(""body-parser"");

const app = express();
app.use(bodyParser.json()); // for parsing application/json

app.get(""/pokemon/name/:name"", async (req, res) => {
  const { name } = req.params;
  try {
    const response = await axios.get(
      `https://pokeapi.co/api/v2/pokemon/${name}`
    );
    res.json(response.data);
  } catch (error) {
    res.status(404).json({ message: ""Pokémon not found"" });
  }
});

app.get(""/pokemon/type/:type"", async (req, res) => {
  const { type } = req.params;
  try {
    const response = await axios.get(`https://pokeapi.co/api/v2/type/${type}`);
    const pokemonList = response.data.pokemon.map((p) => p.pokemon.name);
    res.json({ type: type, pokemon: pokemonList });
  } catch (error) {
    res.status(404).json({ message: ""Type not found"" });
  }
});

app.get(""/openapi.json"", (req, res) => {
  res.json({
    openapi: ""3.0.0"",
    info: {
      title: ""Pokémon API for GPT"",
      version: ""1.0.0"",
      description: ""This API allows you to fetch Pokémon by name or type."",
    },
    servers: [
      {
        url: ""https://<your-runkit-notebook-url>.runkit.sh"",
        description: ""Primary server"",
      },
    ],
    paths: {
      ""/pokemon/name/{name}"": {
        get: {
          operationId: ""getPokemonByName"",
          summary: ""Get Pokémon by name"",
          parameters: [
            {
              name: ""name"",
              in: ""path"",
              required: true,
              description: ""The name of the Pokémon"",
              schema: { type: ""string"" },
            },
          ],
          responses: {
            200: { description: ""Successful operation"" },
            404: { description: ""Pokémon not found"" },
          },
        },
      },
      ""/pokemon/type/{type}"": {
        get: {
          operationId: ""getPokemonByType"",
          summary: ""Get Pokémon by type"",
          parameters: [
            {
              name: ""type"",
              in: ""path"",
              required: true,
              description: ""The type of Pokémon"",
              schema: { type: ""string"" },
            },
          ],
          responses: {
            200: { description: ""Successful operation"" },
            404: { description: ""Type not found"" },
          },
        },
      },
    },
  });
});

// Define the port to listen on
const port = process.env.PORT || 3000; // Runkit will provide a port

// Make the app listen on the port
app.listen(port, () => console.log(`Server is running on port ${port}`));
"
vt43m0w4,contoh skrip code,Amru_Fakharullah,Go,Wednesday 7th of February 2024 02:41:03 AM CDT,"package cronjobs

import (
	""fmt""
	""github.com/bwmarrin/discordgo""
	""github.com/go-zoox/fetch""
	""github.com/gopxl/beep""
	""github.com/gopxl/beep/mp3""
	""github.com/gopxl/beep/speaker""
	""github.com/lactobasilusprotectus/go-discord/internal/sporact""
	""github.com/lactobasilusprotectus/go-discord/internal/util/JsonParser""
	config2 ""github.com/lactobasilusprotectus/go-discord/pkg/config""
	""log""
	""net/url""
	""os""
	""time""
)

var (
	//Mendefinisikan mapping antara ID tenant dengan nama mereka. Ini digunakan untuk mengidentifikasi tenant dalam notifikasi.
	mapTenatID = map[int]string{
		6:  ""Kementerian Komunikasi dan Informatika"",
		10: ""Mandiri Investasi"",
		5:  ""Mandiri Sekuritas"",
		17: ""Pelindo"",
		20: ""PT Samuel Sekuritas Indonesia"",
		21: ""PT Bukit Asam"",
		22: ""ASDP Indonesia Ferry"",
	}

	//ctx = context.Background()
)

// GetAlertSporact Struct yang digunakan untuk mengatur sesi Discord, informasi klien API untuk mengambil peringatan, dan beberapa konfigurasi lainnya.
type GetAlertSporact struct {
	Session      *discordgo.Session
	ChannelID    string
	Scheduler    string
	AccessToken  string
	RefreshToken string
	LastAccessID int
	Client       *sporact.Client
}

// Response Struct untuk menampung respons dari API peringatan, termasuk detail kasus seperti ID, judul, deskripsi, dan lainnya.
type Response struct {
	Id          int    `json:""id""`
	CaseID      string `json:""case_id""`
	Title       string `json:""title""`
	Description string `json:""description""`
	Status      string `json:""status""`
	Priority    string `json:""priority""`
	Impact      string `json:""impact""`
	Tenant      string `json:""tenant""`
}

// initJsonManager Menginisialisasi manajer JSON untuk membaca dan menulis konfigurasi.
func (job *GetAlertSporact) initJsonManager() *JsonParser.JSONManager {
	//get file config.json
	getwd, err := os.Getwd()

	if err != nil {
		return nil
	}

	return JsonParser.NewJSONManager(getwd + ""/config.json"")
}

// NewGetAlertSporact Membuat instance GetAlertSporact baru dengan menginisialisasi sesi Discord, ID channel, scheduler, token akses, dan klien API berdasarkan konfigurasi yang dibaca dari config.json.
func NewGetAlertSporact(session *discordgo.Session, channelID string, scheduler string) *GetAlertSporact {
	var config config2.Config

	//init json manager
	manager := new(GetAlertSporact).initJsonManager()

	//read config.json
	jsonConfig, err := manager.Read(config)
	if err != nil {
		log.Printf(""line 67 error: %v"", err)
		return nil
	}

	//return jsonConfig map[access_key: last_case_id:0 refresh_key:]
	mapConfig, ok := jsonConfig.(map[string]interface{})
	if !ok {
		log.Printf(""line 74 error: %v"", err)
		return nil
	}

	//get access key
	accessKeyValue, ok := mapConfig[""access_key""].(string)
	if !ok {
		log.Printf(""error: %v"", err)
		return nil
	}

	//get refresh key
	refreshKeyValue, ok := mapConfig[""refresh_key""].(string)
	if !ok {
		log.Printf(""error: %v"", err)
		return nil
	}

	//get last case id
	lastCaseIDValue, ok := mapConfig[""last_case_id""].(float64)

	//set config
	config.AccessKey = accessKeyValue
	config.RefreshKey = refreshKeyValue
	config.LastCaseID = int(lastCaseIDValue)

	//new http sporact
	client := sporact.NewClient(config.AccessKey)

	//return GetAlertSporact
	return &GetAlertSporact{
		Session:      session,
		ChannelID:    channelID,
		Scheduler:    scheduler,
		AccessToken:  config.AccessKey,
		RefreshToken: config.RefreshKey,
		Client:       client,
		LastAccessID: config.LastCaseID,
	}
}

// Schedule mendefinisikan waktu berjalannya cron job
func (job *GetAlertSporact) Schedule() string {
	return job.Scheduler
}

// Task adalah fungsi yang akan dijalankan oleh cron job. Fungsi ini akan memproses data dari API peringatan, mengirim notifikasi ke Discord, dan memainkan alarm jika ada kasus baru yang masuk.
func (job *GetAlertSporact) Task() {
	data, err := job.ProcessData()

	if err != nil {
		log.Printf(""line 119 error: %v"", err)
		return
	}

	if data.Id == job.LastAccessID {
		log.Printf(""cron job success"")
		return
	}

	title := fmt.Sprintf(""🚨 **Aktivitas Mencurigakan Terdeteksi** 🚨\n\n"")
	title += fmt.Sprintf(""Case ID: %s - %s\n"", data.CaseID, data.Tenant)
	title += fmt.Sprintf(""Workbench: %s\n"", data.Title)

	if err != nil {
		log.Printf(""line 141 error: %v"", err)
		return
	}

	embeb := &discordgo.MessageEmbed{
		Title:       title,
		Description: fmt.Sprintf(""Ini merupakan notifikasi untuk case baru yang masuk ke sporact""),
		Fields: []*discordgo.MessageEmbedField{

			{
				Name:   ""Status"",
				Value:  data.Status,
				Inline: false,
			},

			{
				Name:   ""Prioritas"",
				Value:  fmt.Sprintf(""%s - %s"", data.Priority, data.Impact),
				Inline: false,
			},

			{
				Name:  ""Link"",
				Value: fmt.Sprintf(""https://sporact.mii.co.id/cases/%s"", data.CaseID),
			},
		},
		Color: getColorByPriority(data.Impact),
	}

	_, err = job.Session.ChannelMessageSendComplex(job.ChannelID, &discordgo.MessageSend{
		Embed: embeb,
	})

	if err != nil {
		log.Printf(""line 178 error: %v"", err)
	}

	job.LastAccessID = data.Id

	//write config.json
	err = job.WriteJson(data)

	if err != nil {
		log.Printf(err.Error())
		return
	}

	log.Printf(""cron job success"")

	err = job.PlayAlarm()
	if err != nil {
		log.Printf(""line 186 error: %v"", err)
		return
	}

	return
}

// PlayAlarm memainkan alarm jika ada kasus baru yang masuk.
func (job *GetAlertSporact) PlayAlarm() (err error) {
	//get file config.json
	getwd, err := os.Getwd()

	if err != nil {
		return err
	}

	f, err := os.Open(getwd + ""/etc/1.mp3"")

	if err != nil {
		return err
	}

	streamer, format, err := mp3.Decode(f)

	if err != nil {
		return err
	}

	defer streamer.Close()

	speaker.Init(format.SampleRate, format.SampleRate.N(time.Second/10))

	done := make(chan bool)
	speaker.Play(beep.Seq(streamer, beep.Callback(func() {
		done <- true
	})))

	<-done

	return err
}

// ProcessData memproses data dari API Sporact.
func (job *GetAlertSporact) ProcessData() (Response, error) {
	res, err := job.GetAlertCaseApi()

	if err != nil {
		return Response{}, fmt.Errorf(""error: %v"", err)
	}

	mapData := res.Get(""results.0"")

	respStruct := Response{
		Id:          int(mapData.Get(""id"").Int()),
		CaseID:      mapData.Get(""uid"").String(),
		Title:       mapData.Get(""title"").String(),
		Description: mapData.Get(""description"").String(),
		Status:      mapData.Get(""status_display"").String(),
		Priority:    mapData.Get(""priority.name"").String(),
		Impact:      mapData.Get(""impact_details.name"").String(),
		Tenant:      mapTenatID[int(mapData.Get(""tenant_id"").Int())],
	}

	return respStruct, nil
}

// GetAlertCaseApi gets the alert case from Sporact MII API.
func (job *GetAlertSporact) GetAlertCaseApi() (*fetch.Response, error) {
	// Get current time and yesterday
	now := time.Now()
	yesterday := now.Add(-24 * time.Hour)

	// Formatting the times in the required format
	nowFormatted := now.Format(""2006-01-02T15:04:05.000Z"")
	yesterdayFormatted := yesterday.Format(""2006-01-02T15:04:05.000Z"")

	//construct url
	// Base URL
	baseURL := ""/cases/case/""

	// Parameters
	params := url.Values{}
	params.Add(""date[]"", yesterdayFormatted)
	params.Add(""date[]"", nowFormatted)
	params.Add(""range_type"", ""created___range"")
	params.Add(""status"", ""Open"")
	params.Add(""tenant"", ""6,10,5,17,20,21,22"")
	params.Add(""expand"", ""priority"")

	// Constructing the URL
	fullURL := baseURL + ""?"" + params.Encode()

	res, err := job.Client.MakeGetRequest(fullURL)

	if err != nil {
		return nil, fmt.Errorf(""error: %v"", err)
	}

	if res.StatusCode() == 401 {
		err = job.refreshToken()
		if err != nil {
			return nil, fmt.Errorf(""error: %v"", err)
		}

		job.Client = sporact.NewClient(job.AccessToken)

		log.Printf(""refresh token success"")

		return job.GetAlertCaseApi()
	}

	if res.StatusCode() != 200 {
		return nil, fmt.Errorf(""http status code: %d message: %s"", res.StatusCode(), res.Get(""message"").String())
	}

	return res, nil
}

// refreshToken refreshes the access token if expired.
func (job *GetAlertSporact) refreshToken() error {
	body := map[string]interface{}{
		""refresh"": job.RefreshToken,
	}

	resp, err := job.Client.MakePostRequest(""/auth/token/refresh/"", body)

	if err != nil {
		return fmt.Errorf(""error: %v"", err)
	}

	if resp.StatusCode() != 200 {
		return fmt.Errorf(""http status code: %d message: %s"", resp.StatusCode(), resp.Get(""message"").String())
	}

	//set new access token
	job.AccessToken = resp.Get(""access"").String()

	return nil
}

// WriteJson writes the response to the config.json file.
func (job *GetAlertSporact) WriteJson(response Response) error {
	jsonManager := job.initJsonManager()

	config := config2.Config{
		AccessKey:  job.AccessToken,
		RefreshKey: job.RefreshToken,
		LastCaseID: response.Id,
	}

	//write config.json
	return jsonManager.Write(config)
}

// getColorByPriority returns the color code based on the priority.
func getColorByPriority(priority string) int {
	switch priority {
	case ""High"":
		return 0xFF0000 // Merah
	case ""Medium"":
		return 0xFFFF00 // Kuning
	case ""Low"":
		return 0x00FF00 // Hijau
	default:
		return 0x808080 // Abu-abu untuk prioritas tidak dikenal
	}
}
"
kexZXJXE,Untitled,shahariar007,JavaScript,Wednesday 7th of February 2024 02:16:37 AM CDT,"const { CustomerModel } = require(""../customer/customer.model"");
const { connection } =
  require(""../../common/services/mongoose.service"").mongoose;
const {
  MealOrderModel,
  createMealOrder,
} = require(""../mealOrder/mealOrder.model"");

const cron = require(""node-cron"");
const { Expo } = require(""expo-server-sdk"");

// Schedule the function to run every 1 minutes
cron.schedule(""*/1 * * * *"", () => {
  console.log(""Running fetchValidSubscriptions..."");
  fetchValidSubscriptions();
});

const { SubscriptionModel } = require(""../subscription/subscription.model"");
const { UsersModel } = require(""../users/users.model"");
const { KitchenModel } = require(""../kitchen/kitchen.model"");
const envConfig = require(""../../common/config/env.config"");
const pushNotification = require(""../../common/functions/pushNotification"");

// const messageBody = ""Meal request has been received."";
// pushNotification(messageBody);
let sequentialNumber = 0;
const checkDataExists = async (mealOrderData) => {
  try {
    const existingData = await MealOrderModel.findOne({
      customerId: mealOrderData.customerId,
      item: mealOrderData.item,
      session: mealOrderData.session,
    });

    if (existingData) {
      // Data already exists in MongoDB
      console.log(""Data already exists"");
      return true;
    } else {
      // Data does not exist in MongoDB
      console.log(""Data does not exist"");
      return false;
    }
  } catch (error) {
    console.error(""Error occurred while checking data:"", error);
    return false;
  }
};

const checkAndCreateMealOrder = async (mealOrderData) => {
  const dataExists = await checkDataExists(mealOrderData);
  if (!dataExists) {
    try {
      const invoicePrefix = ""INV"";
      const generatedInvoiceNumber = await generateInvoiceNumber(invoicePrefix);
      mealOrderData.invoiceNo = generatedInvoiceNumber;
      const r = await createMealOrder(mealOrderData);
      const userID = mealOrderData.customerId;
      const userToken = await UsersModel.findOne({ _id: userID }).select(
        ""pushTokens""
      );
      const messageBody = ""Meal request has been received."";
      pushNotification(messageBody, userToken.pushTokens);
      console.log(""Meal order created successfully"", r);
    } catch (error) {
      console.error(""Error occurred while creating meal order:"", error);
    }
  }
};

const generateInvoiceNumber = async (prefix) => {
  const currentTime = new Date();
  const year = currentTime.getFullYear() % 100; //year last two digit
  const hours = currentTime.getHours();
  const minutes = currentTime.getMinutes();
  try {
    sequentialNumber++;
    const invoiceNumber = `${prefix}-${year}${hours}${minutes}-${sequentialNumber}`;
    // console.log({ invoiceNumber });
    return invoiceNumber;
  } catch (error) {
    console.error(error);
  }
};

const fetchCustomerInfo = async (customerId) => {
  try {
    // const user = await CustomerModel.findOne({ _id: customerId });
    const user = await UsersModel.findOne({ _id: customerId });
    return user;
  } catch (error) {
    console.log(error);
  }
};

const findNearestKitchen = async (deliveryAddress) => {
  const { coordinates } = deliveryAddress.geoTag;
  const [longitude, latitude] = coordinates;
  try {
    const nearestKitchen = await KitchenModel.findOne({
      ""address.geoTag"": {
        $near: {
          $geometry: {
            type: ""Point"",
            coordinates: [longitude, latitude], // Note: order is longitude, latitude for GeoJSON
          },
          $maxDistance: 50000000,
        },
      },
    }).exec();

    // console.log({ nearestKitchen });
    return nearestKitchen;
  } catch (err) {
    console.error(""Error finding nearest kitchen:"", err);
    return null;
  }
};

const fetchValidSubscriptions = async () => {
  try {
    const currentTime = new Date();
    const forNextHours = 36;
    const expirationTime = new Date(Date.now() + forNextHours * 60 * 60 * 1000);
    const subscription = await SubscriptionModel.find({
      endDate: {
        $gte: currentTime,
        $lte: expirationTime,
      },
      status: ""Active"",
    });
    // console.log(
    //   ""🚀 ~ file: cronJob.js:120 ~ fetchValidSubscriptions ~ subscription:"",
    //   subscription
    // );

    const lastInvoice = await MealOrderModel.findOne(
      {},
      {},
      { sort: { createAt: -1 } }
    );

    if (lastInvoice) {
      const lastInvoiceNumber = lastInvoice.invoiceNo;
      const lastSequentialNumber = parseInt(lastInvoiceNumber.split(""-"")[2]);
      sequentialNumber = lastSequentialNumber;
    } else {
      sequentialNumber = 0;
    }

    // console.log(""Total current meal:"", subscription.length);
    const sessionHours = {
      breakfast: { hours: 6, minutes: 0, seconds: 0 },
      lunch: { hours: 12, minutes: 0, seconds: 0 },
      dinner: { hours: 19, minutes: 0, seconds: 0 },
    };

    if (subscription.length) {
      for (const s of subscription) {
        // const subscriptionId = s.id;
        for (const p of s.subPlans) {
          const { item, session, quantity, updateAt } = p;
          const { customerId, deliveryAddress, subscriptionId } = s;
          const mealTime = new Date();
          const { hours, minutes, seconds } = sessionHours[session];
          mealTime.setHours(hours, minutes, seconds);

          const customer = await fetchCustomerInfo(customerId);
          const nearestKitchen = await findNearestKitchen(deliveryAddress);
          // console.log({ kitchen });
          console.log({ s });
          const mealOrderData = {
            subscriptionId,
            customerId,
            customerName: customer.firstName + "" "" + customer.lastName,
            item,
            session,
            orderDate: Date(updateAt),
            deliveryDate: mealTime,
            deliveryAddress,
            Instruction: ""N/A"",
            location: ""N/A"",
            orderType: ""N/A"",
            status: ""pending"",
            invoiceNo: ""N/A"", // insert invoiceNo in checkAndCreateMealOrder function
            totalAmount: item.price * quantity,
            customerEmail: customer.email,
            customerPhone: customer.mobile,
            quantity,
            kitchen: nearestKitchen,
            createBy: ""automate"",
            createAt: new Date(),
          };
          // console.log({ mealOrderData });
          checkAndCreateMealOrder(mealOrderData);
        }
      }
    } else {
      console.log(`No Meal Available in Next ${forNextHours} hours`);
    }
  } catch (error) {
    console.error(""Error fetching valid subscriptions:"", error);
  }
};

exports.a = fetchValidSubscriptions;"
0S7KzB1M,Convertir Grados ºC / ºF Simple Python,JPablos,Python,Wednesday 7th of February 2024 01:43:00 AM CDT,"""""""
Convertir grados Farenheit a Celsius
Convertir grados Celsius a Farenheit
""""""

def fahrenheit_a_celsius(_fah):
    """"""Convertir grados Farenheit a Celsius""""""
    return (_fah - 32) / 1.8

# Modo de uso
_fah = float(input(""Ingresa los grados Fahrenheit: ""))
_cel = format(fahrenheit_a_celsius(_fah), '.2f')
print(f""Los {_fah} grados Fahrenheit son {_cel} grados Celsius"")


def celsius_a_fahrenheit(_cel):
    """"""Convertir grados Celsius a Farenheit""""""
    return (_cel * 1.8) + 32

# Modo de uso
_cel = float(input(""Ingresa los grados Celsius: ""))
_fah = format(celsius_a_fahrenheit(_cel), '.2f')
print(f""Los {_cel} grados Celsius son {_fah} grados Fahrenheit"")
"
qyNqhy8R,!break,palmtreetop,JSON,Wednesday 7th of February 2024 01:24:23 AM CDT,"[`manon`,
`kimberly`,
`luke`,
`lily`,
`chun-li`,
`juri`,
`A.K.I.`]"
gyB24njb,Dynamic Expression (Part 4),SoundEngraver,SuperCollider,Wednesday 7th of February 2024 01:21:45 AM CDT,"//////////////////////////  Dynamic Amplitude, Part 4 //////////////////////////

s.boot;

s.meter;
s.scope;
s.plotTree;

s.reboot;
s.quit;

// Drum Loop (Or Any Sound File)

~drums = Buffer.read(s, ""insertdrumloophere""); // (Or any other kind of sound file.)

// I use ""~drums"" for my drum loop file, but you can use any name with ""~"".

~drums.play;
~drums.free; // Be sure to free synths as much as possible to free up CPU.

~drums.duration; // If you would like to see the sound file's duration.
~drums.numChannels; // If you would like to see how many channels.


// Explore loopNode

// Release node is node 2. Loop node is node 0.
// So it loops around nodes 0 (levels 0 to 1, dur 4) and 1 (levels 1 to 0.1, dur 0.5) until released after 12 seconds.

(
Env([0, 1, 0.1, 0] * 0.25,
	// This mono sine tone may be high in volume.
	// Scale it back by a value, like 0.25 (25% the given amplitude)
	[4, 0.5, 2],
	'lin',
	2,
	0
).test(10).plot; // I chose a value of 10, as my drum loop for this demo is 10 seconds.
)

// Here's a different way of writing it.

(
Env(
	[0, 1, 0.1, 0] * 0.25,
	[1, 0.1, 2],
	// Notice my first two time levels are shorter. This is more effective for my own drums. Explore different values for different sound files.
	'linear',
	2,
	loopNode: 0
).test(10).plot
)

//////////// Apply To Drum Loop ////////////

(
~tortoDrums = SynthDef(\play, {
	arg amp=1, atk=1, sus=0.1, rel=2, buf=0, rate=1,
	spos=0, pan=0, out=0;
	var sig, env;
	env = Env(
		[0, 1, 0.1, 0],
		[atk, sus, rel],
		'linear',
		releaseNode: 2,
		loopNode: 0
	).kr(2);
	sig = PlayBuf.ar(2, buf, rate, startPos: spos);
	sig = sig * env;
	pan = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
)

~tortoDrums = Synth(\play, [\buf, ~drums]);
~tortoDrums.free; // Don't forget to free your synths.


(
Env(
	[0, 1, 0.2, 0.3, 0] * 0.25, // Be sure to use low amplitude for this test.
	[2, 3, 1, 4] * 0.25 // Here's quick way to shorten time levels.
	8, // Explore both positive and negative values for different effects.
	releaseNode: 2,
	loopNode: 0
).test(10).plot;
)

(
~tortoDrums = SynthDef(\play, {
	arg amp=1, atk=2, sus=3, decay=1, rel=4,
	buf=0, rate=1, spos=0, pan=0, out=0;
	var sig, env;
	env = Env(
		[0, 0.3, 0.2, 1, 0] * 0.75,
		// Use a multiplier less than 1 for a lower output (if necessary).
		[atk, sus, decay, rel] * 0.25,
		8, // Always explore different curve values.
		releaseNode: 3
	).kr(2);
	sig = PlayBuf.ar(2, buf, rate, startPos: spos);
	sig = sig * env;
	pan = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
)

~tortoDrums = Synth(\play, [\buf, ~drums]);
~tortoDrums.free;

(
Env(
	[0, 1, 0.01, 0.5, 0.05, 0.8, 0] * 0.25,
	[1, 1, 1, 1, 1, 1],
	2,
	releaseNode: 3,
	loopNode: 0
).test(10).plot;
)

(
~tortoDrums = SynthDef(\play, {
	arg atk=1, sus1=3, sus2=1, sus3=1, decay=1, rel=1,
	buf=0, rate=1, spos=0, pan=0, amp=1, out=0;
	var sig, env;
	env = Env(
		[0, 1, 0.01, 0.5, 0.05, 0.8, 0],
		[atk, sus1, sus2, sus3, decay, rel],
		5,
		releaseNode: 3,
		loopNode: 0
	).kr(2);
	sig = PlayBuf.ar(2, buf, rate, startPos: spos);
	sig = sig * env;
	pan = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
)

~tortoDrums = Synth(\play, [\buf, ~drums]);
~tortoDrums.free;"
yK3RpKhj,abstract,skb461,Python,Wednesday 7th of February 2024 01:06:08 AM CDT,"from abc import ABC, abstractmethod

class Shape(ABC):

    @abstractmethod
    def Area(self):
        pass

class Rectriangle(Shape):

    def __init__(self, Length, Width):
        self.length = Length
        self.width = Width

    def Area(self):
        print(""Area of rectangle:"",self.length*self.width)
        return self.length*self.width

class SalaryFactoryAbstracr(ABC):

    @abstractmethod
    def create_shape(self):
        pass

class SalaryFactory(SalaryFactoryAbstracr):
    def create_shape(self, name):
        if name == 'r':
            Length = input(""Enter the Length: "")
            Width = input(""Enter the Width: "")
            return Rectriangle(int(Length), float(Width))

def salary_client():
    salary_factory = SalaryFactory()
    role_name = input(""Enter the name of the category: "")

    salary = salary_factory.create_shape(role_name)

    print(f""The area of the {role_name} is: {salary.Area()}"")

salary_client()
"
9uDwRuyr,Merge Sort Algorithm — Not Working,AlidinB,C++,Wednesday 7th of February 2024 12:33:05 AM CDT,"static void MergeSortAlgorithm(int[] arr, int low, int high)
	{
		if(low < high)
		{
			//Намиране на средата на масива
			int mid = (low + high) / 2;
		
			//Рекурсивно сортиране на двете половини
			MergeSortAlgorithm(arr, low, mid);
			MergeSortAlgorithm(arr, mid + 1, high);
			
			//Сливане на временните масиви в основния масив
			Merge(arr, low, mid, high);
		}
	}
	
	static void Merge(int[] arr, int low, int mid, int high)
	{
		int n1 = mid - low + 1;
		int n2 = high - mid;
		
		//Създаване на временни масиви
		int[] leftArray = new int[n1];
		int[] rightArray = new int[n2];
		
		//Копиране на данни във временните масиви
		for(int i = 0; i < n1; i++)
			leftArray[i] = arr[low + 1];
		for(int j = 0; j < n2; j++)
			rightArray[j] = arr[mid + 1 + j];
			
		//Сливане на временните масиви в основния масив
		int k = low;
		int leftIndex = 0;
		int rightIndex = 0;
		
		while(leftIndex < n1 && rightIndex < n2)
		{
			if(leftArray[leftIndex] <= rightArray[rightIndex])
			{
				arr[k] = leftArray[leftIndex];
				leftIndex++;
			}
			else
			{
				arr[k] = rightArray[rightIndex];
				rightIndex++;
			}
			k++;
		}
		
		//Копиране на останалите елементи от leftArray, ако има такива
		while(leftIndex < n1)
		{
			arr[k] = leftArray[leftIndex];
			leftIndex++;
			k++;
		}
		
		//Копиране на останалите елементи от rightArray, ако има такива
		while(rightIndex < n2)
		{
			arr[k] = rightArray[rightIndex];
			rightIndex++;
			k++;
		}
	}
	
	public static void Main()
	{
		int[] array1 = {1, 2, 4 , 5, 3};
		MergeSortAlgorithm(array1, 0, 4);
		foreach(int item in array1)
		{
			Console.WriteLine(item);
		}
	}"
28ZJ0p7w,Nigerian scammers [7-2-1/2024],bombaires,AIMMS,Wednesday 7th of February 2024 12:18:58 AM CDT,"<a href=""mailto:attorney_leonard_meyer2012@live.com"">attorney_leonard_meyer2012@live.com</a>
<a href=""mailto:inforpaytupdate2017@gmail.com"">inforpaytupdate2017@gmail.com</a>
<a href=""mailto:in.for.p.ay.t.up.da.t.e2.017@gmail.com"">in.for.p.ay.t.up.da.t.e2.017@gmail.com</a>
<a href=""mailto:infor.pay.t.upda.te.20.1.7@gmail.com"">infor.pay.t.upda.te.20.1.7@gmail.com</a>
<a href=""mailto:inf.o.r.p.ay.t.u.pd.ate.2.017@gmail.com"">inf.o.r.p.ay.t.u.pd.ate.2.017@gmail.com</a>
<a href=""mailto:i.n.fo.r.pa.y.t.u.p.d.ate201.7@gmail.com"">i.n.fo.r.pa.y.t.u.p.d.ate201.7@gmail.com</a>
<a href=""mailto:in.fo.r.p.a.yt.up.d.at.e20.17@gmail.com"">in.fo.r.p.a.yt.up.d.at.e20.17@gmail.com</a>
<a href=""mailto:i.nfo.rpaytu.pda.te.2.0.17@gmail.com"">i.nfo.rpaytu.pda.te.2.0.17@gmail.com</a>
<a href=""mailto:i.nfor.p.a.ytup.d.at.e20.17@gmail.com"">i.nfor.p.a.ytup.d.at.e20.17@gmail.com</a>
<a href=""mailto:inf.o.rpa.yt.up.da.t.e.2.0.1.7@gmail.com"">inf.o.rpa.yt.up.da.t.e.2.0.1.7@gmail.com</a>
<a href=""mailto:i.n.fo.r.pa.y.t.upd.a.te.2.0.17@gmail.com"">i.n.fo.r.pa.y.t.upd.a.te.2.0.17@gmail.com</a>
<a href=""mailto:i.n.f.orp.a.y.t.upd.a.t.e.2.0.17@gmail.com"">i.n.f.orp.a.y.t.upd.a.t.e.2.0.17@gmail.com</a>
<a href=""mailto:in.f.orpa.ytup.date2.017@gmail.com"">in.f.orpa.ytup.date2.017@gmail.com</a>
<a href=""mailto:inf.orp.a.y.tupd.ate20.17@gmail.com"">inf.orp.a.y.tupd.ate20.17@gmail.com</a>
<a href=""mailto:i.nfo.rp.aytu.p.da.t.e20.17@gmail.com"">i.nfo.rp.aytu.p.da.t.e20.17@gmail.com</a>
<a href=""mailto:i.n.f.o.r.p.a.yt.upda.te.20.1.7@gmail.com"">i.n.f.o.r.p.a.yt.upda.te.20.1.7@gmail.com</a>
<a href=""mailto:info.r.p.a.y.tup.d.ate2.0.1.7@gmail.com"">info.r.p.a.y.tup.d.ate2.0.1.7@gmail.com</a>
<a href=""mailto:i.nf.orpa.y.t.u.p.date.2017@gmail.com"">i.nf.orpa.y.t.u.p.date.2017@gmail.com</a>
<a href=""mailto:info.r.pa.y.tup.d.a.te.2.017@gmail.com"">info.r.pa.y.tup.d.a.te.2.017@gmail.com</a>
<a href=""mailto:i.n.f.or.pay.t.upd.ate20.1.7@gmail.com"">i.n.f.or.pay.t.upd.ate20.1.7@gmail.com</a>
<a href=""mailto:i.n.fo.r.pay.tup.d.a.te201.7@gmail.com"">i.n.fo.r.pay.tup.d.a.te201.7@gmail.com</a>
<a href=""mailto:inf.orp.ayt.up.date2.01.7@gmail.com"">inf.orp.ayt.up.date2.01.7@gmail.com</a>
<a href=""mailto:info.rpay.t.update2.0.17@gmail.com"">info.rpay.t.update2.0.17@gmail.com</a>
<a href=""mailto:i.n.fo.rp.ay.t.upda.te20.1.7@gmail.com"">i.n.fo.rp.ay.t.upda.te20.1.7@gmail.com</a>
<a href=""mailto:inf.o.rp.aytup.d.at.e2017@gmail.com"">inf.o.rp.aytup.d.at.e2017@gmail.com</a>
<a href=""mailto:i.nfo.r.pa.y.t.u.p.d.at.e.2.01.7@gmail.com"">i.nfo.r.pa.y.t.u.p.d.at.e.2.01.7@gmail.com</a>
<a href=""mailto:i.n.fo.r.p.a.ytu.pd.ate.2.017@gmail.com"">i.n.fo.r.p.a.ytu.pd.ate.2.017@gmail.com</a>
<a href=""mailto:info.r.p.a.ytu.pda.te2.0.1.7@gmail.com"">info.r.p.a.ytu.pda.te2.0.1.7@gmail.com</a>
<a href=""mailto:in.f.or.pa.yt.up.da.te.2.01.7@gmail.com"">in.f.or.pa.yt.up.da.te.2.01.7@gmail.com</a>
<a href=""mailto:i.n.for.pay.t.u.pd.a.t.e2.017@gmail.com"">i.n.for.pay.t.u.pd.a.t.e2.017@gmail.com</a>
<a href=""mailto:i.nf.orp.ay.tup.da.t.e.2.0.17@gmail.com"">i.nf.orp.ay.tup.da.t.e.2.0.17@gmail.com</a>
<a href=""mailto:i.nf.or.pa.y.tupda.t.e.2.0.1.7@gmail.com"">i.nf.or.pa.y.tupda.t.e.2.0.1.7@gmail.com</a>
<a href=""mailto:in.f.or.pa.ytupda.t.e20.1.7@gmail.com"">in.f.or.pa.ytupda.t.e20.1.7@gmail.com</a>
<a href=""mailto:in.fo.r.p.ay.t.u.p.d.a.te201.7@gmail.com"">in.fo.r.p.ay.t.u.p.d.a.te201.7@gmail.com</a>
<a href=""mailto:in.fo.r.pa.y.tu.p.date20.17@gmail.com"">in.fo.r.pa.y.tu.p.date20.17@gmail.com</a>
<a href=""mailto:i.n.forp.a.ytu.pd.ate2017@gmail.com"">i.n.forp.a.ytu.pd.ate2017@gmail.com</a>
<a href=""mailto:i.nfo.r.paytu.pda.t.e.2.01.7@gmail.com"">i.nfo.r.paytu.pda.t.e.2.01.7@gmail.com</a>
<a href=""mailto:i.nforpay.tu.p.dat.e20.1.7@gmail.com"">i.nforpay.tu.p.dat.e20.1.7@gmail.com</a>
<a href=""mailto:i.nf.o.rp.a.ytupda.t.e.2.017@gmail.com"">i.nf.o.rp.a.ytupda.t.e.2.017@gmail.com</a>
<a href=""mailto:i.n.f.o.r.p.a.y.t.update.20.1.7@gmail.com"">i.n.f.o.r.p.a.y.t.update.20.1.7@gmail.com</a>
<a href=""mailto:info.rpa.ytupda.t.e2.0.1.7@gmail.com"">info.rpa.ytupda.t.e2.0.1.7@gmail.com</a>
<a href=""mailto:in.fo.rpayt.up.d.a.t.e20.1.7@gmail.com"">in.fo.rpayt.up.d.a.t.e20.1.7@gmail.com</a>
<a href=""mailto:i.nfo.rp.aytu.p.dat.e.2.01.7@gmail.com"">i.nfo.rp.aytu.p.dat.e.2.01.7@gmail.com</a>
<a href=""mailto:infor.p.a.yt.upda.t.e20.17@gmail.com"">infor.p.a.yt.upda.t.e20.17@gmail.com</a>
<a href=""mailto:i.nf.orp.aytu.pda.t.e20.1.7@gmail.com"">i.nf.orp.aytu.pda.t.e20.1.7@gmail.com</a>
<a href=""mailto:in.f.orp.a.ytup.da.te.2.0.1.7@gmail.com"">in.f.orp.a.ytup.da.te.2.0.1.7@gmail.com</a>
<a href=""mailto:i.n.for.paytu.p.d.at.e2.0.1.7@gmail.com"">i.n.for.paytu.p.d.at.e2.0.1.7@gmail.com</a>
<a href=""mailto:i.nf.o.r.pa.y.tupdate.2.0.17@gmail.com"">i.nf.o.r.pa.y.tupdate.2.0.17@gmail.com</a>
<a href=""mailto:inforpa.y.tu.pd.ate.20.17@gmail.com"">inforpa.y.tu.pd.ate.20.17@gmail.com</a>
<a href=""mailto:i.n.for.p.a.yt.upd.a.t.e.20.1.7@gmail.com"">i.n.for.p.a.yt.upd.a.t.e.20.1.7@gmail.com</a>
<a href=""mailto:inf.orpa.ytu.p.da.te.20.17@gmail.com"">inf.orpa.ytu.p.da.te.20.17@gmail.com</a>
<a href=""mailto:i.n.forpay.t.up.da.t.e20.17@gmail.com"">i.n.forpay.t.up.da.t.e20.17@gmail.com</a>
<a href=""mailto:i.n.f.orpa.y.tup.dat.e2.017@gmail.com"">i.n.f.orpa.y.tup.dat.e2.017@gmail.com</a>
<a href=""mailto:i.n.for.pay.tu.pd.at.e20.1.7@gmail.com"">i.n.for.pay.tu.pd.at.e20.1.7@gmail.com</a>
<a href=""mailto:i.n.f.o.rp.a.y.t.u.pdate.2.0.1.7@gmail.com"">i.n.f.o.rp.a.y.t.u.pdate.2.0.1.7@gmail.com</a>
<a href=""mailto:infor.pay.tu.p.d.ate.2.0.1.7@gmail.com"">infor.pay.tu.p.d.ate.2.0.1.7@gmail.com</a>
<a href=""mailto:i.nf.or.pa.yt.up.da.t.e2.017@gmail.com"">i.nf.or.pa.yt.up.da.t.e2.017@gmail.com</a>
<a href=""mailto:info.rp.ayt.up.d.at.e.20.17@gmail.com"">info.rp.ayt.up.d.at.e.20.17@gmail.com</a>
<a href=""mailto:in.forp.a.y.t.u.pd.at.e20.1.7@gmail.com"">in.forp.a.y.t.u.pd.at.e20.1.7@gmail.com</a>
<a href=""mailto:i.n.for.p.ayt.u.pd.ate.2.0.1.7@gmail.com"">i.n.for.p.ayt.u.pd.ate.2.0.1.7@gmail.com</a>
<a href=""mailto:inf.orpa.y.t.u.p.da.te.2.0.1.7@gmail.com"">inf.orpa.y.t.u.p.da.te.2.0.1.7@gmail.com</a>
<a href=""mailto:info.r.pay.tu.pdate2.017@gmail.com"">info.r.pay.tu.pdate2.017@gmail.com</a>
<a href=""mailto:i.nf.o.r.pay.tu.p.d.at.e20.1.7@gmail.com"">i.nf.o.r.pay.tu.p.d.at.e20.1.7@gmail.com</a>
<a href=""mailto:i.nf.orpaytu.p.d.at.e.2.017@gmail.com"">i.nf.orpaytu.p.d.at.e.2.017@gmail.com</a>
<a href=""mailto:i.n.forp.a.ytup.da.t.e.2.0.17@gmail.com"">i.n.forp.a.ytup.da.t.e.2.0.17@gmail.com</a>
<a href=""mailto:in.fo.r.pay.t.upd.a.t.e2017@gmail.com"">in.fo.r.pay.t.upd.a.t.e2017@gmail.com</a>
<a href=""mailto:in.forpa.yt.up.d.at.e2.01.7@gmail.com"">in.forpa.yt.up.d.at.e2.01.7@gmail.com</a>
<a href=""mailto:i.nfo.rpayt.upda.t.e.2.0.17@gmail.com"">i.nfo.rpayt.upda.t.e.2.0.17@gmail.com</a>
<a href=""mailto:infor.pa.yt.upd.a.t.e.2.0.1.7@gmail.com"">infor.pa.yt.upd.a.t.e.2.0.1.7@gmail.com</a>
<a href=""mailto:i.nfor.pay.tup.d.ate2.017@gmail.com"">i.nfor.pay.tup.d.ate2.017@gmail.com</a>
<a href=""mailto:in.f.or.p.aytup.d.ate20.1.7@gmail.com"">in.f.or.p.aytup.d.ate20.1.7@gmail.com</a>
<a href=""mailto:info.rpa.y.tupd.ate.2.0.17@gmail.com"">info.rpa.y.tupd.ate.2.0.17@gmail.com</a>
<a href=""mailto:i.n.fo.rp.a.ytu.pd.a.t.e201.7@gmail.com"">i.n.fo.rp.a.ytu.pd.a.t.e201.7@gmail.com</a>
<a href=""mailto:i.nfor.p.ay.t.u.p.d.a.te.20.17@gmail.com"">i.nfor.p.ay.t.u.p.d.a.te.20.17@gmail.com</a>
<a href=""mailto:i.n.f.orpa.y.t.u.p.d.a.t.e201.7@gmail.com"">i.n.f.orpa.y.t.u.p.d.a.t.e201.7@gmail.com</a>
<a href=""mailto:in.f.orp.aytup.d.a.te.2.01.7@gmail.com"">in.f.orp.aytup.d.a.te.2.01.7@gmail.com</a>
<a href=""mailto:i.nf.o.r.p.ayt.u.p.da.te2.017@gmail.com"">i.nf.o.r.p.ayt.u.p.da.te2.017@gmail.com</a>
<a href=""mailto:inforp.a.y.tupda.te2.0.17@gmail.com"">inforp.a.y.tupda.te2.0.17@gmail.com</a>
<a href=""mailto:inf.o.r.p.a.yt.up.d.a.te2.017@gmail.com"">inf.o.r.p.a.yt.up.d.a.te2.017@gmail.com</a>
<a href=""mailto:i.nfo.rp.ayt.u.p.d.ate2.0.1.7@gmail.com"">i.nfo.rp.ayt.u.p.d.ate2.0.1.7@gmail.com</a>
<a href=""mailto:in.fo.rpay.t.up.d.ate.2.0.1.7@gmail.com"">in.fo.rpay.t.up.d.ate.2.0.1.7@gmail.com</a>
<a href=""mailto:i.nf.o.r.pay.t.upd.a.te2017@gmail.com"">i.nf.o.r.pay.t.upd.a.te2017@gmail.com</a>
<a href=""mailto:in.f.or.pay.tu.p.d.a.t.e2.0.17@gmail.com"">in.f.or.pay.tu.p.d.a.t.e2.0.17@gmail.com</a>
<a href=""mailto:inforpayt.u.pd.a.te20.1.7@gmail.com"">inforpayt.u.pd.a.te20.1.7@gmail.com</a>
<a href=""mailto:i.n.f.o.rpa.yt.u.pda.t.e2.0.1.7@gmail.com"">i.n.f.o.rpa.yt.u.pda.t.e2.0.1.7@gmail.com</a>
<a href=""mailto:i.n.fo.rp.a.y.tupdate201.7@gmail.com"">i.n.fo.rp.a.y.tupdate201.7@gmail.com</a>
<a href=""mailto:i.n.f.or.pa.ytup.date2017@gmail.com"">i.n.f.or.pa.ytup.date2017@gmail.com</a>
<a href=""mailto:inf.o.rpay.tu.p.da.te2.0.1.7@gmail.com"">inf.o.rpay.tu.p.da.te2.0.1.7@gmail.com</a>
<a href=""mailto:i.nfo.rpa.y.tup.da.te2.0.1.7@gmail.com"">i.nfo.rpa.y.tup.da.te2.0.1.7@gmail.com</a>
<a href=""mailto:i.n.forpa.ytu.pdat.e.201.7@gmail.com"">i.n.forpa.ytu.pdat.e.201.7@gmail.com</a>
<a href=""mailto:inf.o.rp.a.y.t.u.pdate.2.0.1.7@gmail.com"">inf.o.rp.a.y.t.u.pdate.2.0.1.7@gmail.com</a>
<a href=""mailto:i.nfor.pa.y.t.u.pdat.e.20.1.7@gmail.com"">i.nfor.pa.y.t.u.pdat.e.20.1.7@gmail.com</a>
<a href=""mailto:in.forpa.y.t.upd.ate.2.0.17@gmail.com"">in.forpa.y.t.upd.ate.2.0.17@gmail.com</a>
<a href=""mailto:i.n.fo.r.p.ayt.u.pd.at.e2.0.17@gmail.com"">i.n.fo.r.p.ayt.u.pd.at.e2.0.17@gmail.com</a>
<a href=""mailto:i.nf.or.p.a.yt.u.pda.te2.017@gmail.com"">i.nf.or.p.a.yt.u.pda.te2.017@gmail.com</a>
<a href=""mailto:i.n.forp.ay.t.u.p.dat.e.2.0.1.7@gmail.com"">i.n.forp.ay.t.u.p.dat.e.2.0.1.7@gmail.com</a>
<a href=""mailto:i.nf.o.r.pa.ytu.p.dat.e201.7@gmail.com"">i.nf.o.r.pa.ytu.p.dat.e201.7@gmail.com</a>
<a href=""mailto:in.forp.ay.t.u.p.date20.17@gmail.com"">in.forp.ay.t.u.p.date20.17@gmail.com</a>
<a href=""mailto:inf.or.p.a.ytu.p.date2.0.1.7@gmail.com"">inf.or.p.a.ytu.p.date2.0.1.7@gmail.com</a>
<a href=""mailto:in.f.or.pa.ytu.p.date.2.017@gmail.com"">in.f.or.pa.ytu.p.date.2.017@gmail.com</a>
<a href=""mailto:in.f.o.r.p.aytu.p.d.ate.2.0.17@gmail.com"">in.f.o.r.p.aytu.p.d.ate.2.0.17@gmail.com</a>
<a href=""mailto:i.n.forpa.y.tu.pd.a.te.201.7@gmail.com"">i.n.forpa.y.tu.pd.a.te.201.7@gmail.com</a>
<a href=""mailto:i.nf.o.rpayt.up.d.ate2.017@gmail.com"">i.nf.o.rpayt.up.d.ate2.017@gmail.com</a>
<a href=""mailto:i.n.f.or.pa.y.tu.p.da.te201.7@gmail.com"">i.n.f.or.pa.y.tu.p.da.te201.7@gmail.com</a>
<a href=""mailto:i.n.f.o.r.pay.tu.p.date2.0.1.7@gmail.com"">i.n.f.o.r.pay.tu.p.date2.0.1.7@gmail.com</a>
<a href=""mailto:i.nfor.pa.yt.u.p.d.a.te.20.17@gmail.com"">i.nfor.pa.yt.u.p.d.a.te.20.17@gmail.com</a>
<a href=""mailto:i.n.f.orpay.t.updat.e20.17@gmail.com"">i.n.f.orpay.t.updat.e20.17@gmail.com</a>
<a href=""mailto:info.rpaytu.p.da.t.e.2017@gmail.com"">info.rpaytu.p.da.t.e.2017@gmail.com</a>
<a href=""mailto:i.n.for.p.a.y.t.upd.at.e2.017@gmail.com"">i.n.for.p.a.y.t.upd.at.e2.017@gmail.com</a>
<a href=""mailto:info.rpaytu.p.da.t.e.201.7@gmail.com"">info.rpaytu.p.da.t.e.201.7@gmail.com</a>
<a href=""mailto:info.rpaytu.p.d.a.te20.17@gmail.com"">info.rpaytu.p.d.a.te20.17@gmail.com</a>
<a href=""mailto:i.nforp.a.ytu.p.da.te20.1.7@gmail.com"">i.nforp.a.ytu.p.da.te20.1.7@gmail.com</a>
<a href=""mailto:inf.o.rp.a.y.t.u.p.d.a.te20.17@gmail.com"">inf.o.rp.a.y.t.u.p.d.a.te20.17@gmail.com</a>
<a href=""mailto:i.n.fo.r.pa.y.tu.p.dat.e.2.0.1.7@gmail.com"">i.n.fo.r.pa.y.tu.p.dat.e.2.0.1.7@gmail.com</a>
<a href=""mailto:i.nf.orp.aytupda.t.e2.0.1.7@gmail.com"">i.nf.orp.aytupda.t.e2.0.1.7@gmail.com</a>
<a href=""mailto:inf.orpayt.update.20.1.7@gmail.com"">inf.orpayt.update.20.1.7@gmail.com</a>
<a href=""mailto:inforpa.ytupd.a.t.e2.0.1.7@gmail.com"">inforpa.ytupd.a.t.e2.0.1.7@gmail.com</a>
<a href=""mailto:i.nf.o.r.payt.u.pda.te2017@gmail.com"">i.nf.o.r.payt.u.pda.te2017@gmail.com</a>
<a href=""mailto:i.nfo.rp.a.yt.up.d.a.te2.0.17@gmail.com"">i.nfo.rp.a.yt.up.d.a.te2.0.17@gmail.com</a>
<a href=""mailto:i.n.forp.a.y.t.u.p.da.t.e2.0.17@gmail.com"">i.n.forp.a.y.t.u.p.da.t.e2.0.17@gmail.com</a>
<a href=""mailto:i.n.f.orp.ayt.upd.a.t.e.2017@gmail.com"">i.n.f.orp.ayt.upd.a.t.e.2017@gmail.com</a>
<a href=""mailto:info.r.pay.tupda.t.e.20.17@gmail.com"">info.r.pay.tupda.t.e.20.17@gmail.com</a>
<a href=""mailto:i.n.for.p.ay.t.upd.a.t.e.2.01.7@gmail.com"">i.n.for.p.ay.t.upd.a.t.e.2.01.7@gmail.com</a>
<a href=""mailto:in.fo.r.p.a.ytu.p.d.at.e.2.0.17@gmail.com"">in.fo.r.p.a.ytu.p.d.at.e.2.0.17@gmail.com</a>
<a href=""mailto:i.n.f.o.rp.ay.tu.p.dat.e2.01.7@gmail.com"">i.n.f.o.rp.ay.tu.p.dat.e2.01.7@gmail.com</a>
<a href=""mailto:in.f.or.pay.tup.dat.e.201.7@gmail.com"">in.f.or.pay.tup.dat.e.201.7@gmail.com</a>
<a href=""mailto:i.n.fo.rp.ayt.upd.at.e.2.01.7@gmail.com"">i.n.fo.rp.ayt.upd.at.e.2.01.7@gmail.com</a>
<a href=""mailto:i.n.f.o.rpa.y.tup.dat.e.2.01.7@gmail.com"">i.n.f.o.rpa.y.tup.dat.e.2.01.7@gmail.com</a>
<a href=""mailto:inforp.ayt.u.p.dat.e.20.1.7@gmail.com"">inforp.ayt.u.p.dat.e.20.1.7@gmail.com</a>
<a href=""mailto:i.n.f.or.pa.y.tu.p.d.at.e.20.17@gmail.com"">i.n.f.or.pa.y.tu.p.d.at.e.20.17@gmail.com</a>
<a href=""mailto:i.n.f.orp.a.yt.u.pda.t.e20.17@gmail.com"">i.n.f.orp.a.yt.u.pda.t.e20.17@gmail.com</a>
<a href=""mailto:info.rpa.ytupd.a.t.e.2.0.17@gmail.com"">info.rpa.ytupd.a.t.e.2.0.17@gmail.com</a>
<a href=""mailto:i.nf.o.rp.a.y.t.up.d.ate.2.017@gmail.com"">i.nf.o.rp.a.y.t.up.d.ate.2.017@gmail.com</a>
<a href=""mailto:in.fo.rpa.ytu.p.da.te.2.0.1.7@gmail.com"">in.fo.rpa.ytu.p.da.te.2.0.1.7@gmail.com</a>
<a href=""mailto:i.nforp.ay.tu.pd.ate2.01.7@gmail.com"">i.nforp.ay.tu.pd.ate2.01.7@gmail.com</a>
<a href=""mailto:in.fo.rp.a.ytup.date.2017@gmail.com"">in.fo.rp.a.ytup.date.2017@gmail.com</a>
<a href=""mailto:i.nfo.rp.ay.tupdat.e.20.1.7@gmail.com"">i.nfo.rp.ay.tupdat.e.20.1.7@gmail.com</a>
<a href=""mailto:i.nf.orp.ay.t.up.d.ate2.01.7@gmail.com"">i.nf.orp.ay.t.up.d.ate2.01.7@gmail.com</a>
<a href=""mailto:i.n.fo.r.payt.upda.t.e.201.7@gmail.com"">i.n.fo.r.payt.upda.t.e.201.7@gmail.com</a>
<a href=""mailto:i.nfor.p.a.yt.upd.ate2.0.17@gmail.com"">i.nfor.p.a.yt.upd.ate2.0.17@gmail.com</a>
<a href=""mailto:in.fo.r.p.a.yt.upd.a.t.e201.7@gmail.com"">in.fo.r.p.a.yt.upd.a.t.e201.7@gmail.com</a>
<a href=""mailto:i.n.forp.a.ytup.da.t.e.2.01.7@gmail.com"">i.n.forp.a.ytup.da.t.e.2.01.7@gmail.com</a>
<a href=""mailto:in.fo.r.payt.u.p.d.a.te201.7@gmail.com"">in.fo.r.payt.u.p.d.a.te201.7@gmail.com</a>
<a href=""mailto:inf.or.p.a.ytupd.a.t.e2.017@gmail.com"">inf.or.p.a.ytupd.a.t.e2.017@gmail.com</a>
<a href=""mailto:i.nfo.r.pa.yt.updat.e.2.017@gmail.com"">i.nfo.r.pa.yt.updat.e.2.017@gmail.com</a>
<a href=""mailto:inf.or.p.a.y.t.up.d.ate.2.01.7@gmail.com"">inf.or.p.a.y.t.up.d.ate.2.01.7@gmail.com</a>
<a href=""mailto:i.nf.orpay.tu.p.d.a.t.e.2.0.1.7@gmail.com"">i.nf.orpay.tu.p.d.a.t.e.2.0.1.7@gmail.com</a>
<a href=""mailto:info.r.p.ay.t.u.p.d.ate.2.01.7@gmail.com"">info.r.p.ay.t.u.p.d.ate.2.01.7@gmail.com</a>
<a href=""mailto:i.nfo.r.payt.u.p.da.t.e20.17@gmail.com"">i.nfo.r.payt.u.p.da.t.e20.17@gmail.com</a>
<a href=""mailto:info.r.pa.y.t.upda.t.e.2.017@gmail.com"">info.r.pa.y.t.upda.t.e.2.017@gmail.com</a>
<a href=""mailto:in.for.pay.tupdat.e2017@gmail.com"">in.for.pay.tupdat.e2017@gmail.com</a>
<a href=""mailto:in.f.or.p.aytu.p.date.20.17@gmail.com"">in.f.or.p.aytu.p.date.20.17@gmail.com</a>
<a href=""mailto:i.n.fo.rp.ay.t.u.pdat.e20.17@gmail.com"">i.n.fo.rp.ay.t.u.pdat.e20.17@gmail.com</a>
<a href=""mailto:i.nfo.rp.ay.tu.pda.t.e201.7@gmail.com"">i.nfo.rp.ay.tu.pda.t.e201.7@gmail.com</a>
<a href=""mailto:i.n.f.o.rpa.y.t.u.pda.t.e.2.0.1.7@gmail.com"">i.n.f.o.rpa.y.t.u.pda.t.e.2.0.1.7@gmail.com</a>
<a href=""mailto:i.n.f.o.rpa.yt.u.pd.ate.201.7@gmail.com"">i.n.f.o.rpa.yt.u.pd.ate.201.7@gmail.com</a>
<a href=""mailto:i.n.f.or.p.a.ytup.d.a.te20.17@gmail.com"">i.n.f.or.p.a.ytup.d.a.te20.17@gmail.com</a>
<a href=""mailto:i.n.f.orpa.ytupdat.e.2.0.1.7@gmail.com"">i.n.f.orpa.ytupdat.e.2.0.1.7@gmail.com</a>
<a href=""mailto:in.f.or.p.a.yt.u.pda.te20.17@gmail.com"">in.f.or.p.a.yt.u.pda.te20.17@gmail.com</a>
<a href=""mailto:inf.orpay.t.up.da.te.2017@gmail.com"">inf.orpay.t.up.da.te.2017@gmail.com</a>
<a href=""mailto:inf.o.r.pa.ytu.pd.a.te2.01.7@gmail.com"">inf.o.r.pa.ytu.pd.a.te2.01.7@gmail.com</a>
<a href=""mailto:i.nf.or.p.ay.t.u.pd.a.t.e2017@gmail.com"">i.nf.or.p.ay.t.u.pd.a.t.e2017@gmail.com</a>
<a href=""mailto:i.nforp.ayt.up.d.at.e2.0.17@gmail.com"">i.nforp.ayt.up.d.at.e2.0.17@gmail.com</a>
<a href=""mailto:in.fo.r.pa.yt.up.d.a.te.2.0.17@gmail.com"">in.fo.r.pa.yt.up.d.a.te.2.0.17@gmail.com</a>
<a href=""mailto:inf.or.pa.y.tup.da.te.2.017@gmail.com"">inf.or.pa.y.tup.da.te.2.017@gmail.com</a>
<a href=""mailto:infor.pa.y.t.up.da.t.e.20.17@gmail.com"">infor.pa.y.t.up.da.t.e.20.17@gmail.com</a>
<a href=""mailto:i.nforpa.y.t.upda.t.e201.7@gmail.com"">i.nforpa.y.t.upda.t.e201.7@gmail.com</a>
<a href=""mailto:in.f.orpayt.u.pdate.2.01.7@gmail.com"">in.f.orpayt.u.pdate.2.01.7@gmail.com</a>
<a href=""mailto:in.f.o.r.p.a.y.t.upd.at.e.20.1.7@gmail.com"">in.f.o.r.p.a.y.t.upd.at.e.20.1.7@gmail.com</a>
<a href=""mailto:in.fo.rpaytupd.at.e.20.1.7@gmail.com"">in.fo.rpaytupd.at.e.20.1.7@gmail.com</a>
<a href=""mailto:i.nfo.r.p.aytu.p.d.ate2.017@gmail.com"">i.nfo.r.p.aytu.p.d.ate2.017@gmail.com</a>
<a href=""mailto:i.nf.o.rp.ayt.u.p.d.ate2.0.1.7@gmail.com"">i.nf.o.rp.ayt.u.p.d.ate2.0.1.7@gmail.com</a>
<a href=""mailto:i.n.for.pay.tu.p.d.a.t.e.2.01.7@gmail.com"">i.n.for.pay.tu.p.d.a.t.e.2.01.7@gmail.com</a>
<a href=""mailto:i.n.fo.rp.ay.t.up.d.a.t.e.20.1.7@gmail.com"">i.n.fo.rp.ay.t.up.d.a.t.e.20.1.7@gmail.com</a>
<a href=""mailto:inf.o.rpayt.u.pd.a.t.e.2.0.1.7@gmail.com"">inf.o.rpayt.u.pd.a.t.e.2.0.1.7@gmail.com</a>
<a href=""mailto:info.rpa.yt.updat.e20.17@gmail.com"">info.rpa.yt.updat.e20.17@gmail.com</a>
<a href=""mailto:in.f.or.pay.tupd.ate201.7@gmail.com"">in.f.or.pay.tupd.ate201.7@gmail.com</a>
<a href=""mailto:info.r.pay.tu.pda.t.e20.17@gmail.com"">info.r.pay.tu.pda.t.e20.17@gmail.com</a>
<a href=""mailto:info.r.p.a.y.t.up.date.20.1.7@gmail.com"">info.r.p.a.y.t.up.date.20.1.7@gmail.com</a>
<a href=""mailto:i.n.for.p.a.y.tup.da.te.20.17@gmail.com"">i.n.for.p.a.y.tup.da.te.20.17@gmail.com</a>
<a href=""mailto:in.f.orp.a.ytu.pd.ate.2.0.17@gmail.com"">in.f.orp.a.ytu.pd.ate.2.0.17@gmail.com</a>
<a href=""mailto:i.n.f.orpaytupdate2.017@gmail.com"">i.n.f.orpaytupdate2.017@gmail.com</a>
<a href=""mailto:inf.o.r.p.a.ytup.da.t.e2.017@gmail.com"">inf.o.r.p.a.ytup.da.t.e2.017@gmail.com</a>
<a href=""mailto:in.f.o.rpaytupda.t.e.2.01.7@gmail.com"">in.f.o.rpaytupda.t.e.2.01.7@gmail.com</a>
<a href=""mailto:in.for.p.aytu.pda.te2017@gmail.com"">in.for.p.aytu.pda.te2017@gmail.com</a>
<a href=""mailto:info.r.pa.y.t.up.d.a.te2.0.17@gmail.com"">info.r.pa.y.t.up.d.a.te2.0.17@gmail.com</a>
<a href=""mailto:info.rpayt.upda.t.e201.7@gmail.com"">info.rpayt.upda.t.e201.7@gmail.com</a>
<a href=""mailto:infor.paytup.d.a.t.e.2.01.7@gmail.com"">infor.paytup.d.a.t.e.2.01.7@gmail.com</a>
<a href=""mailto:i.nfo.rp.a.y.tup.dat.e20.1.7@gmail.com"">i.nfo.rp.a.y.tup.dat.e20.1.7@gmail.com</a>
<a href=""mailto:i.n.f.orp.a.y.tupda.te.2.017@gmail.com"">i.n.f.orp.a.y.tupda.te.2.017@gmail.com</a>
<a href=""mailto:in.fo.r.p.ay.t.up.d.a.t.e2.0.1.7@gmail.com"">in.fo.r.p.ay.t.up.d.a.t.e2.0.1.7@gmail.com</a>
<a href=""mailto:in.f.orpayt.u.p.d.a.t.e2017@gmail.com"">in.f.orpayt.u.p.d.a.t.e2017@gmail.com</a>
<a href=""mailto:i.n.for.p.aytupd.a.te.2017@gmail.com"">i.n.for.p.aytupd.a.te.2017@gmail.com</a>
<a href=""mailto:i.n.for.pay.tupda.t.e20.1.7@gmail.com"">i.n.for.pay.tupda.t.e20.1.7@gmail.com</a>
<a href=""mailto:i.nfo.rpaytu.pda.te2.01.7@gmail.com"">i.nfo.rpaytu.pda.te2.01.7@gmail.com</a>
<a href=""mailto:i.n.forp.a.ytu.pd.a.t.e.2.0.1.7@gmail.com"">i.n.forp.a.ytu.pd.a.t.e.2.0.1.7@gmail.com</a>
<a href=""mailto:i.n.fo.rpa.yt.upda.t.e201.7@gmail.com"">i.n.fo.rpa.yt.upda.t.e201.7@gmail.com</a>
<a href=""mailto:info.rpa.y.t.upda.te.2.01.7@gmail.com"">info.rpa.y.t.upda.te.2.01.7@gmail.com</a>
<a href=""mailto:i.nfo.rp.ayt.u.pd.ate20.17@gmail.com"">i.nfo.rp.ayt.u.pd.ate20.17@gmail.com</a>
<a href=""mailto:i.n.f.orpayt.u.p.date.2.01.7@gmail.com"">i.n.f.orpayt.u.p.date.2.01.7@gmail.com</a>
<a href=""mailto:infor.p.a.y.tupd.a.t.e2.0.1.7@gmail.com"">infor.p.a.y.tupd.a.t.e2.0.1.7@gmail.com</a>
<a href=""mailto:i.n.fo.r.p.ay.tupd.a.te2.0.17@gmail.com"">i.n.fo.r.p.ay.tupd.a.te2.0.17@gmail.com</a>"
uwhTzeNJ,Mad,Unknown_No_1,PHP,Wednesday 7th of February 2024 12:09:24 AM CDT,KalpoHatersByMadHacker
Z51qaYYR,grafana dashboard - PV Power Plant - Misc Stats,josefkyrian,JSON,Tuesday 6th of February 2024 11:47:22 PM CDT,"{
  ""annotations"": {
    ""list"": [
      {
        ""builtIn"": 1,
        ""datasource"": {
          ""type"": ""grafana"",
          ""uid"": ""-- Grafana --""
        },
        ""enable"": true,
        ""hide"": true,
        ""iconColor"": ""rgba(0, 211, 255, 1)"",
        ""name"": ""Annotations & Alerts"",
        ""type"": ""dashboard""
      }
    ]
  },
  ""editable"": true,
  ""fiscalYearStartMonth"": 0,
  ""graphTooltip"": 0,
  ""id"": 16,
  ""links"": [],
  ""liveNow"": false,
  ""panels"": [
    {
      ""datasource"": {
        ""type"": ""mysql"",
        ""uid"": ""NmGUN4Q7z""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""palette-classic""
          },
          ""custom"": {
            ""axisBorderShow"": false,
            ""axisCenteredZero"": false,
            ""axisColorMode"": ""text"",
            ""axisLabel"": """",
            ""axisPlacement"": ""auto"",
            ""fillOpacity"": 80,
            ""gradientMode"": ""none"",
            ""hideFrom"": {
              ""legend"": false,
              ""tooltip"": false,
              ""viz"": false
            },
            ""lineWidth"": 1,
            ""scaleDistribution"": {
              ""type"": ""linear""
            },
            ""thresholdsStyle"": {
              ""mode"": ""line""
            }
          },
          ""mappings"": [],
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""green"",
                ""value"": null
              },
              {
                ""color"": ""red"",
                ""value"": 800
              }
            ]
          }
        },
        ""overrides"": []
      },
      ""gridPos"": {
        ""h"": 8,
        ""w"": 12,
        ""x"": 0,
        ""y"": 0
      },
      ""id"": 2,
      ""options"": {
        ""barRadius"": 0,
        ""barWidth"": 0.97,
        ""fullHighlight"": false,
        ""groupWidth"": 0.7,
        ""legend"": {
          ""calcs"": [],
          ""displayMode"": ""list"",
          ""placement"": ""bottom"",
          ""showLegend"": true
        },
        ""orientation"": ""auto"",
        ""showValue"": ""auto"",
        ""stacking"": ""none"",
        ""tooltip"": {
          ""mode"": ""single"",
          ""sort"": ""none""
        },
        ""xTickLabelRotation"": 0,
        ""xTickLabelSpacing"": 0
      },
      ""pluginVersion"": ""10.1.1"",
      ""targets"": [
        {
          ""dataset"": ""mysql"",
          ""datasource"": {
            ""type"": ""mysql"",
            ""uid"": ""NmGUN4Q7z""
          },
          ""editorMode"": ""code"",
          ""format"": ""table"",
          ""rawQuery"": true,
          ""rawSql"": ""SELECT\n  UNIX_TIMESTAMP(DATE(log_date)) AS \""time\"",\n  MAX(pv_vpv1) as string1, MAX(pv_vpv2) as string2\nFROM pv_inverter_record\nWHERE\n  $__timeFilter(log_date)\nGROUP BY time\nORDER BY time"",
          ""refId"": ""A"",
          ""sql"": {
            ""columns"": [
              {
                ""parameters"": [],
                ""type"": ""function""
              }
            ],
            ""groupBy"": [
              {
                ""property"": {
                  ""type"": ""string""
                },
                ""type"": ""groupBy""
              }
            ],
            ""limit"": 50
          }
        }
      ],
      ""title"": ""Max PV Strings Voltage"",
      ""type"": ""barchart""
    },
    {
      ""datasource"": {
        ""type"": ""mysql"",
        ""uid"": ""NmGUN4Q7z""
      },
      ""fieldConfig"": {
        ""defaults"": {
          ""color"": {
            ""mode"": ""palette-classic""
          },
          ""custom"": {
            ""axisBorderShow"": false,
            ""axisCenteredZero"": false,
            ""axisColorMode"": ""text"",
            ""axisLabel"": """",
            ""axisPlacement"": ""auto"",
            ""barAlignment"": 0,
            ""drawStyle"": ""line"",
            ""fillOpacity"": 16,
            ""gradientMode"": ""none"",
            ""hideFrom"": {
              ""legend"": false,
              ""tooltip"": false,
              ""viz"": false
            },
            ""insertNulls"": false,
            ""lineInterpolation"": ""linear"",
            ""lineStyle"": {
              ""fill"": ""solid""
            },
            ""lineWidth"": 1,
            ""pointSize"": 5,
            ""scaleDistribution"": {
              ""type"": ""linear""
            },
            ""showPoints"": ""auto"",
            ""spanNulls"": false,
            ""stacking"": {
              ""group"": ""A"",
              ""mode"": ""normal""
            },
            ""thresholdsStyle"": {
              ""mode"": ""off""
            }
          },
          ""mappings"": [],
          ""thresholds"": {
            ""mode"": ""absolute"",
            ""steps"": [
              {
                ""color"": ""green"",
                ""value"": null
              },
              {
                ""color"": ""red"",
                ""value"": 800
              }
            ]
          },
          ""unit"": ""watt""
        },
        ""overrides"": []
      },
      ""gridPos"": {
        ""h"": 8,
        ""w"": 12,
        ""x"": 12,
        ""y"": 0
      },
      ""id"": 3,
      ""options"": {
        ""legend"": {
          ""calcs"": [],
          ""displayMode"": ""list"",
          ""placement"": ""bottom"",
          ""showLegend"": true
        },
        ""tooltip"": {
          ""mode"": ""single"",
          ""sort"": ""none""
        }
      },
      ""pluginVersion"": ""10.1.1"",
      ""targets"": [
        {
          ""dataset"": ""mysql"",
          ""datasource"": {
            ""type"": ""mysql"",
            ""uid"": ""NmGUN4Q7z""
          },
          ""editorMode"": ""code"",
          ""format"": ""table"",
          ""rawQuery"": true,
          ""rawSql"": ""SELECT\n  UNIX_TIMESTAMP(FLOOR(log_date/60)*60) AS \""time\"",\n  pv_inverter_id,\n  pv_ppv1 as string1, pv_ppv2 as string2\nFROM pv_inverter_record\nWHERE\n  $__timeFilter(log_date)\n"",
          ""refId"": ""A"",
          ""sql"": {
            ""columns"": [
              {
                ""parameters"": [],
                ""type"": ""function""
              }
            ],
            ""groupBy"": [
              {
                ""property"": {
                  ""type"": ""string""
                },
                ""type"": ""groupBy""
              }
            ],
            ""limit"": 50
          }
        }
      ],
      ""title"": ""PV Power By String"",
      ""transformations"": [
        {
          ""id"": ""partitionByValues"",
          ""options"": {
            ""fields"": [
              ""pv_inverter_id""
            ]
          }
        },
        {
          ""id"": ""renameByRegex"",
          ""options"": {
            ""regex"": ""string(.*) (.*)"",
            ""renamePattern"": ""Inverter $2 String $1""
          }
        }
      ],
      ""type"": ""timeseries""
    }
  ],
  ""refresh"": ""10s"",
  ""schemaVersion"": 38,
  ""tags"": [],
  ""templating"": {
    ""list"": []
  },
  ""time"": {
    ""from"": ""now-2d"",
    ""to"": ""now""
  },
  ""timepicker"": {},
  ""timezone"": """",
  ""title"": ""PV Power Plant - Misc Stats"",
  ""uid"": ""bba1b7e0-fe36-4357-8120-4b350ad67ac5"",
  ""version"": 18,
  ""weekStart"": """"
}"
LWYBevfa,amazing bot by snowy,coinwalk,JavaScript,Tuesday 6th of February 2024 09:38:29 PM CDT,"dick    = balance
chance  = 49.5 
base    = balance/144000
bethigh = false
sad     = (base*10)
idiot   = (base*7.9)
tom     = ((math.floor(balance/sad))*sad)
up      = 6.9
down    = 2.9
bilance = balance
harry   = balance 
fart    = 1  
joe     = base
nextbet = joe
resetstats();

function dobet()
    if win then
        bilance = bilance+joe
    else
        bilance = bilance-joe
    end
    if (nextbet==null) then
        nextbet = joe
    end
    if (bilance>(tom+(nextbet*up))) then
        up      = 4.9
        down    = 4.9
        joe     = joe*2 
        nextbet = joe
        tom     = bilance
    end
    if (bilance<(tom-(nextbet*down))) then
        up      = 4.9
        down    = 4.9
        fart    = 0
        joe     = joe*2 
        nextbet = joe  
        tom     = bilance
    end
    if ((bilance>=(dick+(sad*fart))) and (bilance>(tom-(nextbet*down))) and (bilance<(tom+(nextbet*up))) and (not (balance==tom))) then  
        joe     = base
        nextbet = joe
        up      = 6.9
        down    = 2.9
        fart    = 1
        tom     = ((math.floor(bilance/sad))*sad)
        dick    = ((math.floor(bilance/sad))*sad)
    end
    if (balance<base) then
        stop()
    end
   if (balance>240) then
       stop()
   end
end"
MAHAqJL9,Antiviros: Hatestricken Code,StormHeart413,HTML,Tuesday 6th of February 2024 09:26:14 PM CDT,"<!-- pagedoll -->
    	<div class=""w-100 d-none d-sm-flex"" style=""margin-left:280px;margin-top:220px;position:absolute;height:280px;max-width:220px;"">
    		<div style=""background:url(https://i.imgur.com/yW6dyP7.png) center no-repeat;background-size:contain;height:280px;width:50%;""></div>
    	</div>
<!-- end pagedoll -->

<div class=""row justify-content-center text-monospace "">
<div class=""col-flex p-4 pt-4"" style=""background-image:url(https://i.imgur.com/dU0SwvC.jpeg);background-size:cover;"">
    
    <div class=""row justify-content-center"">
        <div class=""col justify-content-center mt-2 pt-4"">
            <div class=""rounded-circle m-3 ml-lg-2 shadow"" style=""height:210px;width:210px;background-color:rgba(117, 38, 45,0.2);border:5px  rgba(117, 38, 45,1)"">
            <div class=""rounded-circle"" style=""
            
            background-image:url(PROFILE IMAGE URL HERE)
            
            ;background-size:cover;height:200px;width:200px;border:8px solid rgba(117, 38, 45,1);border-style:double dashed;"">
                <i class=""fas fa-heart-crack fa-4x fa-spin"" style=""margin-left:auto;margin-right:auto;animation-duration:10s;padding:20px;color:rgba(117, 38, 45,1);""></i>
                <i class=""fas fa-heart-crack fa-spin"" style=""margin-left:auto;margin-right:auto;animation-duration:20s;padding:30px;padding-left:120px;color:rgba(117, 38, 45,1);""></i>
                <p style=""color:#75262d;background-color:#FFFFFF;font-size:16px;font-weight:bold;padding:4px;margin:3px;width:180px;text-align:center;align-self:flex-end"">
                
                Team Hatestricken
                
            <p>
                <p style=""color:#75262d;font-size:11px;margin:3px;width:180px;text-align:center;align-self:flex-end"">
                <a href=""https://toyhou.se/suitcasedragon/characters/folder:1942861"" title=""code by kale / suitcasedragon"" class=""tooltipster text-center mt-1""><i class=""far fa-code fa-2xs""></i></a> | <a href=""/Beelzebunn"" title=""badge art by beelzebunn"" class=""tooltipster text-center mt-1""><i class=""far fa-paintbrush fa-2xs""></i></a>
                </p>
            </div>
            </div>
        </div><!--end col 1-->
        
        <div class=""tab-content"">
            
            
    <div class=""tab-pane fade  in active show"" id=""info"">
        <div class=""col-fluid text-light p-3 my-3"" style=""border-radius:25px;border:5px solid rgba(117, 38, 45,1);border-style:dotted;width:300px;height:310px;background-color:rgba(250,250,250,0.6);"">
            <p>
                <span class=""my-3 px-2 rounded text-uppercase"" style=""background-color:rgba(117, 38, 45,1);border-radius:25px;font-size:20px"">User:</span>
                
                <span class=""mt-n2"" style=""font-size:20px;"">
                    
                    <a style=""color:rgba(117, 38, 45,1);"">
                        
                        Username
                    
                    </a></span>
            </p>
            
            <p style=""width:250px;height:overflow:auto;"">
                <span class=""my-3 px-2 rounded text-uppercase"" style=""background-color:rgba(117, 38, 45,1);border-radius:25px;font-size:16px"">I attack:</span><br>
                
                <span style=""font-size:13px;color:rgba(117, 38, 45,1);""><b>
                        
                        General themes, character types, etc.
                    <br>Good place to mention friendly fire
                    <br>Does not scroll
                    
                    </b></span>
            </p>
        </div><!--end info tab-->
    </div>
            
            
    <div class=""tab-pane fade"" id=""char"">
        <div class=""col-fluid text-light p-3 my-3"" style=""border-radius:25px;border:5px solid rgba(117, 38, 45,1);border-style:dotted;width:300px;height:310px;background-color:rgba(250,250,250,0.6);"">
            
    <div class=""row no-gutters mx-n2"">
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      </div><br>
            
    <div class=""row no-gutters mx-n2"">
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      </div><br>
            
    <div class=""row no-gutters mx-n2"">
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      </div><br>
      
        </div><!--end character tab-->
    </div>
        
        </div><!--end col 2-->
        
        
        <div class=""col-lg-1 align-items-center justify-content-center"" style=""margin-left:10px;"">
            <div class=""w-110"" style=""position: absolute;"">
            <ul class=""nav row no-gutters justify-content-center"">
                <li>
                    <i class=""fas fa-heart-crack fa-spin fa-2x p-2"" style=""border-radius:25px;border:5px solid rgba(117, 38, 45,1);border-style:dashed;animation-duration:20s;animation-direction:reverse;color:rgba(117, 38, 45,1);""></i>
                </li>
                <li class=""nav-item pt-1"">
                    <a class=""nav-link active"" data-toggle=""tab"" href=""#info""><i class=""fas fa-info-circle fa-spin fa-2x p-2"" style=""border-radius:25px;border:5px solid rgba(117, 38, 45,1);border-style:dashed;animation-duration:0s;animation-direction:reverse;color:rgba(117, 38, 45,1);""></i></a>
                </li>
                <li class=""nav-item"">
                    <a class=""nav-link"" data-toggle=""tab"" href=""#char""><i class=""fas fa-user-circle fa-spin fa-2x p-2"" style=""border-radius:25px;border:5px solid rgba(117, 38, 45,1);border-style:dashed;animation-duration:0s;animation-direction:reverse;color:rgba(117, 38, 45,1);""></i></a>
                </li>
                <li class=""pt-1"">
                    <i class=""fas fa-heart-crack fa-spin fa-2x p-2"" style=""border-radius:25px;border:5px solid rgba(117, 38, 45,1);border-style:dashed;animation-duration:20s;animation-direction:reverse;color:rgba(117, 38, 45,1);""></i>
                </li>
            </ul>
            </div>
        </div>
        
        
        <div class=""w-400"">
            <div class=""mx-3"">
            </div>
        </div>
        
    </div><!--end row-->
    
</div><!--end container-->
</div>"
iLHaNgCi,Antiviros: Lovestruck Code,StormHeart413,HTML,Tuesday 6th of February 2024 09:25:16 PM CDT,"<!-- pagedoll -->
    	<div class=""w-100 d-none d-sm-flex"" style=""margin-left:280px;margin-top:220px;position:absolute;height:280px;max-width:220px;"">
    		<div style=""background:url(https://i.imgur.com/a7syHZu.png) center no-repeat;background-size:contain;height:280px;width:50%;""></div>
    	</div>
<!-- end pagedoll -->

<div class=""row justify-content-center text-monospace "">
<div class=""col-flex p-4 pt-4"" style=""background-image:url(https://i.pinimg.com/600x315/d7/c4/a9/d7c4a9f1bf177e80603d4495247cb1ec.jpg);background-size:cover;"">
    
    <div class=""row justify-content-center"">
        <div class=""col justify-content-center mt-2 pt-4"">
            <div class=""rounded-circle m-3 ml-lg-2 shadow"" style=""height:210px;width:210px;background-color:rgba(173, 75, 116,0.2);border:5px dotted rgba(173, 75, 116,1)"">
            <div class=""rounded-circle"" style=""
            
            background-image:url(PROFILE IMAGE URL HERE)
            
            ;background-size:cover;height:200px;width:200px;border:8px solid rgba(173, 75, 116,1);border-style:dotted;"">
                <i class=""fas fa-heart fa-spin"" style=""margin-left:auto;margin-right:auto;animation-duration:10s;padding:40px;color:rgba(173, 75, 116,1);""></i>
                <i class=""fas fa-heart fa-spin"" style=""margin-left:auto;margin-right:auto;animation-duration:20s;padding:30px;padding-left:120px;color:rgba(173, 75, 116,1);""></i>
                <p style=""color:#ad4b74;background-color:#FFFFFF;font-size:16px;font-weight:bold;padding:4px;margin:3px;width:180px;text-align:center;align-self:flex-end"">
                
                Team Lovestruck
                
            <p>
                <p style=""color:#ad4b74;font-size:11px;margin:3px;width:180px;text-align:center;align-self:flex-end"">
                <a href=""https://toyhou.se/suitcasedragon/characters/folder:1942861"" title=""code by kale / suitcasedragon"" class=""tooltipster text-center mt-1""><i class=""far fa-code fa-2xs""></i></a> | <a href=""/Beelzebunn"" title=""badge art by beelzebunn"" class=""tooltipster text-center mt-1""><i class=""far fa-paintbrush fa-2xs""></i></a>
                </p>
            </div>
            </div>
        </div><!--end col 1-->
        
        <div class=""tab-content"">
            
            
    <div class=""tab-pane fade in active show"" id=""info"">
        <div class=""col-fluid text-light p-3 my-3"" style=""border-radius:25px;border:5px solid rgba(173, 75, 116,1);border-style:dotted;width:300px;height:310px;background-color:rgba(250,250,250,0.6);"">
            <p>
                <span class=""my-3 px-2 rounded text-uppercase"" style=""background-color:rgba(173, 75, 116,1);border-radius:25px;font-size:20px"">User:</span>
                
                <span class=""mt-n2"" style=""font-size:20px;"">
                    
                    <a style=""color:rgba(173, 75, 116,1);"">
                        
                        Username
                    
                    </a></span>
            </p>
            
            <p style=""width:250px;height:overflow:auto;"">
                <span class=""my-3 px-2 rounded text-uppercase"" style=""background-color:rgba(173, 75, 116,1);border-radius:25px;font-size:16px"">I attack:</span><br>
                
                <span style=""font-size:13px;color:rgba(173, 75, 116,1);""><b>
                        
                        General themes, character types, etc.
                    <br>Good place to mention friendly fire
                    <br>Does not scroll
                    
                    </b></span>
            </p>
        </div><!--end info tab-->
    </div>
            
            
    <div class=""tab-pane fade"" id=""char"">
        <div class=""col-fluid text-light p-3 my-3"" style=""border-radius:25px;border:5px solid rgba(173, 75, 116,1);border-style:dotted;width:300px;height:310px;background-color:rgba(250,250,250,0.6);"">
            
    <div class=""row no-gutters mx-n2"">
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      </div><br>
            
    <div class=""row no-gutters mx-n2"">
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      </div><br>
            
    <div class=""row no-gutters mx-n2"">
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      <div class=""col-4 px-2 text-center"">
        <a href=""CHARACTER_LINK"">
          <img src=""https://i.imgur.com/4XgGUtW.png""
          class=""rounded"" style=""max-height: 150px; border-radius: 16px;"">
        </a>
      </div>
      </div><br>
      
        </div><!--end character tab-->
    </div>
        
        </div><!--end col 2-->
        
        
        <div class=""col-lg-1 align-items-center justify-content-center"" style=""margin-left:10px;"">
            <div class=""w-110"" style=""position: absolute;"">
            <ul class=""nav row no-gutters justify-content-center"">
                <li>
                    <i class=""fas fa-heart fa-spin fa-2x p-2"" style=""border-radius:25px;border:5px solid rgba(173, 75, 116,1);border-style:dotted;animation-duration:10s;animation-direction:reverse;color:rgba(173, 75, 116,1);""></i>
                </li>
                <li class=""nav-item pt-1"">
                    <a class=""nav-link active"" data-toggle=""tab"" href=""#info""><i class=""fas fa-info-circle fa-spin fa-2x p-2"" style=""border-radius:25px;border:5px solid rgba(173, 75, 116,1);border-style:dotted;animation-duration:0s;animation-direction:reverse;color:rgba(173, 75, 116,1);""></i></a>
                </li>
                <li class=""nav-item"">
                    <a class=""nav-link"" data-toggle=""tab"" href=""#char""><i class=""fas fa-user-circle fa-spin fa-2x p-2"" style=""border-radius:25px;border:5px solid rgba(173, 75, 116,1);border-style:dotted;animation-duration:0s;animation-direction:reverse;color:rgba(173, 75, 116,1);""></i></a>
                </li>
                <li class=""pt-1"">
                    <i class=""fas fa-heart fa-spin fa-2x p-2"" style=""border-radius:25px;border:5px solid rgba(173, 75, 116,1);border-style:dotted;animation-duration:10s;animation-direction:reverse;color:rgba(173, 75, 116,1);""></i>
                </li>
            </ul>
            </div>
        </div>
        
        
        <div class=""w-400"">
            <div class=""mx-3"">
            </div>
        </div>
        
    </div><!--end row-->
    
</div><!--end container-->
</div>"
BW1t3z2w,Untitled,King_damir12,Python,Tuesday 6th of February 2024 09:23:54 PM CDT,"regularTickets = int(input(""The number of regular fare tickets: ""))
childTickets = int(input(""The number of child fare tickets: ""))
seniorTickets = int(input(""The number of senior fare tickets: ""))
couponValue = float(input(""The value of your coupon: ""))


print(""\nYour order includes the following:"")
print(f""{regularTickets} regular fare tickets"")
print(f""{childTickets} child fare tickets"")
print(f""{seniorTickets} senior fare tickets"")
print(f""A discount of {couponValue}% will be applied to your purchase."")"
w6xEFk0N,Untitled,paul_nicholls,Pascal,Tuesday 6th of February 2024 09:01:41 PM CDT,"program testSuite;

uses
  uTests;
  
begin
  runTests;
end.

//---------------------------

unit uTests;

uses
  c64_vic;
  
var
  x,y   : Byte;
  count : Word;
 
//---------------------------- 
function test1 : Boolean;
var
  a,b : Word;
begin
  a := 4;
  Result := (a < word(10));
end; 
//---------------------------- 
function test2 : Boolean;
var
  a,b : Word;
begin
  a := 5;
  Result := (a <= word(5));
end;
//----------------------------   
function test3 : Boolean;
var
  a,b : Word;
begin
  a := 5;
  Result := (a = word(5));
end;
//---------------------------- 
function test4 : Boolean;
var
  a,b : Word;
begin
  a := 20;
  b := 19;
  Result := b < a;
end;
//---------------------------- 
function test5 : Boolean;
var
  a,b : Word;
begin
  a := 20;
  b := 20;
  Result := a <= b;
end;
//---------------------------- 
function test6 : Boolean;
var
  a,b : Word;
begin
  a := 30;
  b := 19;
  Result := a > b;
end;
//---------------------------- 
function test7 : Boolean;
var
  a,b : Word;
begin
  a := 30;
  b := 30;
  Result := a >= b;
end;
//---------------------------- 
  
const
  rString : String = 'ft';
  rColor  : array of Byte = (cyan,green);
  
procedure doTest(v : Byte);
var
  r   : Byte;
  ofs : Word;
  c   : Byte;
begin
  r := v and 1;
  
  ofs := y * 40;
  ofs := ofs + x;
  
  // draw test number
  c := 48+((count shr 8) and $0f);
  poke(1024 + 0 + ofs,c);
  
  c := 48+((count shr 4) and $0f);
  poke(1024 + 1 + ofs,c);
  
  c := 48+(count and $0f);
  poke(1024 + 2 + ofs,c);

  // draw test result
  poke(1024  + 4 + ofs,rString[r+1]);
  poke($d800 + 4 + ofs,rColor[r]);
  
  y := y + 1;
  
  if y = 24 then begin
    y := 0;
    x := x + 6;
  end;

  decimalModeOn;
  count := count + 1;
  decimalModeOff;
end;

procedure runTests;
var
  i : Byte;
begin
  vic_clearScreen(1024,32);
  vic_clearScreen($d800,white);
  vic_border    := black;
  vic_bg_color0 := black;
  
  x := 0;
  y := 0;
  count := $0001;
  
  doTest(test1);    
  doTest(test2);    
  doTest(test3); 
  doTest(test4);    
  doTest(test5);    
  doTest(test6);
  
  while true do;   
end;"
dhaTLqGn,lol what,zackboy989xx,Lua,Tuesday 6th of February 2024 08:31:26 PM CDT,"local wasLoaded = true; if not game.IsLoaded(game) then wasLoaded = false; repeat task.wait() until game.IsLoaded(game) end
local spy_settings = ({...})[1] or {}
local st = tick()
local service = setmetatable({}, {__index = function(t,k) return game.GetService(game,k) end})
local decompile = decompile or disassemble or function() return ""-- Decompiler not found."" end
local setclipboardfunc = function(message) if setclipboard then setclipboard(""-- This was generated from engospy RemoteSpy tool.\n""..tostring(message)) else print(""Couldn't setclipboard."") end end
local setident = syn and syn.set_thread_identity or setidentity or setthreadcontext
local isV3 = syn and syn.toast_notification ~= nil
local lplr = service.Players.LocalPlayer
local mouse = lplr:GetMouse()
local spy = {
    VERSION = ""v1.02"",
    Connections = {},
    guiConnections = {},
    instances = {},
    blocked = {},
    ignored = {},
    currentTableDepth = 0,
    saveCalls = spy_settings.saveCalls or false,
    saveOnlyLastCall = spy_settings.saveCalls and false or spy_settings.saveOnlyLastCall or true,
    maxTableDepth = spy_settings.maxTableDepth or 100,
    maxCallsSaved = spy_settings.maxCallsSaved or 1000,
    minimizeBind = spy_settings.minimizeBind or Enum.KeyCode.RightAlt,
    newFunctionMethod = spy_settings.newFunctionMethod or true,
    assets = {
        RemoteEvent = ""http://www.roblox.com/asset/?id=413369506"",
        RemoteFunction = ""http://www.roblox.com/asset/?id=413369623""
    },
    namecallmethods = {
        RemoteEvent = ""FireServer"",
        RemoteFunction = ""InvokeServer"",
        --BindableEvent = ""Fire"",
        --BindableFunction = ""Invoke"",
    },
    event = Instance.new(""BindableEvent""),
    blacklistedNames = spy_settings.blacklistedNames or {},
}
if getgenv then getgenv().engospy = spy end
local old_namecall = nil
local old_index = nil
local is_hooking = false

function spy.newInstance(self, classname, properties) 
    local instance = Instance.new(classname)
    for i,v in next, properties do
        instance[i] = v
    end
    spy.instances[instance.Name] = instance
    return instance
end
spy.createInstance = spy.newInstance

function spy.Destroy(self) 
    for i,v in next, spy.instances do 
        v:Destroy()
        spy.Connections[i] = nil
    end
    for i,v in next, spy.guiConnections do 
        v:Disconnect()
        spy.guiConnections[i] = nil
    end
    spy.unhook()
    spy = nil
end

local function has_unicode(str) 
    local notAllowed = "":()[]{}+_-=\\|`~,.<>/?!@#$%^&*""

    for character in string.gmatch(str, ""([%z\1-\127\194-\244][\128-\191]*)"") do
        if notAllowed:find(character) then
            return true
        end
    end
end

local function to_unicode(string)
    local codepoints = ""utf8.char(""
    
    for _i, v in utf8.codes(string) do
        codepoints = codepoints .. v .. ', '
    end
    
    return codepoints:sub(1, -3) .. ')'
end

local function format_string(str)
    local str = str:gsub(""\0"", ""\\0""):gsub(""\n"", ""\\n""):gsub(""\r"", ""\\r""):gsub(""\t"", ""\\t""):gsub(""\v"", ""\\v""):gsub(""\b"", ""\\b""):gsub(""\f"", ""\\f"")

    return str
end

function spy.get_path(instance) -- // Thanks to turtlespy for this code, see https://pastebin.com/raw/BDhSQqUU \\
    local name = instance.Name
    local head = (#name > 0 and '.' .. name) or ""['']""
    if not instance.Parent and instance ~= game then
        return head .. "" --[[ Parented to nil ]]""
    end
    if instance == game then
        return ""game""
    elseif instance == workspace then
        return ""workspace""
    else
        local _success, result = pcall(game.GetService, game, instance.ClassName)
        
        if _success and result then
            head = ':GetService(""' .. instance.ClassName .. '"")'
        elseif instance == lplr then
            head = '.LocalPlayer' 
        else    
            local nonAlphaNum = name:gsub('[%w_]', '')
            local noPunct = nonAlphaNum:gsub('[%s%p]', '')
            
            if tonumber(name:sub(1, 1)) or (#nonAlphaNum ~= 0 and #noPunct == 0) then
                head = '[""' .. name:gsub('""', '\\""'):gsub('\\', '\\\\') .. '""]'
            elseif #nonAlphaNum ~= 0 and #noPunct > 0 then
                head = '[' .. to_unicode(name) .. ']'
            end
        end
    end
    return spy.get_path(instance.Parent) .. head
end

function spy.table_to_string(t) 
    spy.currentTableDepth = spy.currentTableDepth + 1
    if spy.currentTableDepth > spy.maxTableDepth+1 then
        spy.currentTableDepth = spy.currentTableDepth - 1
        return ""table_over_maxTableDepth (..""..tostring(t).."")""
    end
    local returnStr = ""{""
    for i,v in next, t do
        returnStr = returnStr..""\n""..((""    ""):rep(spy.currentTableDepth))..""[""..spy.get_real_value(i)..""] = ""..spy.get_real_value(v).."",""
    end
    if returnStr:sub(-2) == "", "" then returnStr = returnStr:sub(1, -3) end
    spy.currentTableDepth = spy.currentTableDepth - 1
    return returnStr..""\n""..((""    ""):rep(spy.currentTableDepth))..""}""
end

function spy.bettergetinfo(func) 
    local info = debug.getinfo(func)
    info.func = nil 
    return info
end

function spy.get_real_value(value)
    local _t = typeof(value)
    if _t == 'Instance' then
        return spy.get_path(value)
    elseif _t == 'string' then
        local value = format_string(value)
        return '""'..value..'""'
    elseif _t == 'table' then 
        return spy.table_to_string(value)
    elseif _t == 'function' then
        if not islclosure((value)) then 
            return ""newcclosure(function() end)""
        end
        if spy.newFunctionMethod then
            return ""--[[function -->]] ""..spy.table_to_string({upvalues = debug.getupvalues(value), constants = debug.getconstants(value), protos = debug.getprotos(value), info = spy.bettergetinfo(value)})
        end
        return ""function() end""
    elseif _t == 'UDim2' or _t == 'UDim' or _t == 'Vector3' or _t == 'Vector2' or _t == 'CFrame' or _t == 'Vector2int16' or _t == 'Vector3int16' or _t == 'BrickColor' or _t == 'Color3' then
        local value = _t == 'BrickColor' and ""'""..tostring(value)..""'"" or value
        return _t.."".new(""..tostring(value).."")""
    elseif _t == 'TweenInfo' then
        return ""TweenInfo.new(""..spy.get_real_value(value.Time).."", ""..spy.get_real_value(value.EasingStyle).."", ""..spy.get_real_value(value.EasingDirection).."", ""..spy.get_real_value(value.RepeatCount).."", ""..spy.get_real_value(value.Reverses).."", ""..spy.get_real_value(value.DelayTime).."")""
    elseif _t == 'Enums' then
        return ""Enum""
    elseif _t == 'Enum' then
        return ""Enum.""..tostring(value)
    elseif _t == 'Axes' or _t == 'Faces' then
        local returnStr = _t.."".new(""
        local normals = Enum.NormalId:GetEnumItems()
        for i,v in next, normals do
            if value[v.Name] then
                returnStr = returnStr..spy.get_real_value(v).."", ""
            end
        end
        return returnStr:sub(1, -3).."")""
    elseif _t == 'ColorSequence' then
        local returnStr = ""ColorSequence.new{""
        local keypoints = value.Keypoints
        for i,v in next, keypoints do 
            returnStr = returnStr..spy.get_real_value(v).."", ""
        end
        return returnStr:sub(1, -3)..""}""
    elseif _t == 'ColorSequenceKeypoint' then
        return ""ColorSequenceKeypoint.new(""..tostring(value.Time).."", ""..spy.get_real_value(value.Value).."")""
    elseif _t == 'DockWidgetPluginGuiInfo' then -- // this was a pain to make \\
        local str = """"
        local split1 = tostring(value):split("":"")
        for i,v in next, split1 do 
            str = str..v.."" ""
        end
        local split2 = str:split("" "") 
        local str = """"
        local reali = 0
        for i,v in next, split2 do
            if math.floor(i/2) == i/2 and v~="" "" then
                reali = reali + 1
                local _v = v
                if reali == 1 then 
                    _v = ""Enum.InitialDockState.""..v
                end
                str = str.._v.."", ""
            end
        end
        return ""DockWidgetPluginGuiInfo.new(""..(str:sub(1, -3)).."")""
    elseif _t == 'DateTime' then
		if value.UnixTimestampMillis == DateTime.now().UnixTimestampMillis then
            return ""DateTime.now()""
        end
        return ""DateTime.fromUnixTimestampMillis(""..value.UnixTimestampMillis.."")""
    elseif _t == 'FloatCurveKey' then
        return ""FloatCurveKey.new(""..spy.get_real_value(value.Time).."", ""..spy.get_real_value(value.Value).."", ""..spy.get_real_value(value.Interpolation).."")""
    elseif _t == 'NumberRange' then
        return ""NumberRange.new(""..spy.get_real_value(value.Min).."", ""..spy.get_real_value(value.Max).."")""
    elseif _t == 'NumberSequence' then
        local returnStr = ""NumberSequence.new{""
        local keypoints = value.Keypoints
        for i,v in next, keypoints do 
            returnStr = returnStr..spy.get_real_value(v).."", ""
        end
        return returnStr:sub(1, -3)..""}""
    elseif _t == 'NumberSequenceKeypoint' then
        return ""NumberSequenceKeypoint.new(""..tostring(value.Time).."", ""..spy.get_real_value(value.Value)..(value.Envelope and "", ""..value.Envelope or """").."")""
    elseif _t == 'PathWaypoint' then
        return ""PathWaypoint.new(""..spy.get_real_value(value.Position).."", ""..spy.get_real_value(value.Action).."")""
    elseif _t == 'PhysicalProperties' then
        return ""PhysicalProperties.new(""..spy.get_real_value(value.Density).."", ""..spy.get_real_value(value.Friction).."", ""..spy.get_real_value(value.Elasticity).."", ""..spy.get_real_value(value.FrictionWeight).."", ""..spy.get_real_value(value.ElasticityWeight).."")""
    elseif _t == 'Random' then
        return ""Random.new()""
    elseif _t == 'Ray' then
        return ""Ray.new(""..spy.get_real_value(value.Origin).."", ""..spy.get_real_value(value.Direction).."")""
    elseif _t == 'RaycastParams' then
        return ""--[[typeof: RaycastParams ->]] {FilterDescendantsInstances = ""..spy.get_real_value(value.FilterDescendantsInstances).."", FilterType = ""..spy.get_real_value(value.FilterType).."", IgnoreWater = ""..spy.get_real_value(value.IgnoreWater).."", CollisionGroup = '""..spy.get_real_value(value.CollisionGroup)..""'}""
    elseif _t == 'RaycastResult' then
        return ""--[[typeof: RaycastResult ->]] {Distance = "" ..spy.get_real_value(value.Distance).."", Instance = ""..spy.get_real_value(value.Instance).."", Material = ""..spy.get_real_value(value.Material).."", Position = ""..spy.get_real_value(value.Position).."", Normal = ""..spy.get_real_value(value.Normal)..""}""
    elseif _t == 'RBXScriptConnection' then
        return ""--[[typeof: RBXScriptConnection ->]] {Connected = ""..spy.get_real_value(value.Connected)..""}""
    elseif _t == 'RBXScriptSignal' then
        return ""RBXScriptSignal""
    elseif _t == 'Rect' then
        return ""Rect.new(""..spy.get_real_value(value.Min).."", ""..spy.get_real_value(value.Max).."")""
    elseif _t == 'Region3' then
        local cframe = value.CFrame
        local size = value.Size
        local min = spy.get_real_value((cframe * CFrame.new(-size.X/2, -size.Y/2, -size.Z/2)).p)
        local max = spy.get_real_value((cframe * CFrame.new(size.X/2, size.Y/2, size.Z/2)).p)
        return ""Region3.new(""..min.."", ""..max.."")""
    elseif _t == 'Region3int16' then
        return ""Region3int16.new(""..spy.get_real_value(value.Min).."", ""..spy.get_real_value(value.Max).."")""
    elseif _t == 'CatalogSearchParams' then
        return ""--[[typeof: CatalogSearchParams ->]] {SearchKeyword = ""..spy.get_real_value(value.SearchKeyword).."", MinPrice = ""..spy.get_real_value(value.MinPrice).."", MaxPrice = ""..spy.get_real_value(value.MaxPrice).."", SortType = ""..spy.get_real_value(value.SortType).."", CategoryFilter = ""..spy.get_real_value(value.CategoryFilter).."", AssetTypes = ""..spy.get_real_value(value.AssetTypes)..""}""
    elseif _t == 'OverlapParams' then
        return ""--[[typeof: OverlapParams ->]] {FilterDescendantsInstances = ""..spy.get_real_value(value.FilterDescendantsInstances).."", FilterType = ""..spy.get_real_value(value.FilterType).."", MaxParts =""..spy.get_real_value(value.MaxParts).."", CollisionGroup = ""..spy.get_real_value(value.CollisionGroup)..""}""
    elseif _t == 'userdata' then
        return ""newproxy(true)""
    elseif value == nil then
        return ""nil""
    end
    return tostring(value)
end

function spy.convert_to_code(event, args, ncm)
    local path = spy.get_real_value(event)
    if #args == 0 then 
        return path.."":""..ncm..""()""
    elseif #args == 1 then
        return path.."":""..ncm..""(""..spy.get_real_value(args[1]).."")""
    end
    

    local codestr = path.."":""..ncm..""(table.unpack(""
    codestr = codestr..spy.get_real_value(args)
    codestr = codestr..""))""
    return codestr
end

function spy.convert_to_code_client(event, args, ncm)
    table.insert(args, 1, lplr)

    local path = spy.get_real_value(event)
    if #args == 1 then 
        return path.."":""..ncm..""(""..spy.get_real_value(args[1]).."")""
    elseif #args == 2 then
        return path.."":""..ncm..""("".. spy.get_real_value(args[1]) .. "", "" ..spy.get_real_value(args[2]).."")""
    end

    local codestr = path.."":""..ncm..""(table.unpack(""
    codestr = codestr..spy.get_real_value(args)
    codestr = codestr..""))""
    return codestr
end

local function dragGUI(gui, dragpart)
    spawn(function()
        local dragging
        local dragInput
        local dragStart = Vector3.new(0,0,0)
        local startPos
        local function update(input)
            local delta = input.Position - dragStart
            local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + (delta.X), startPos.Y.Scale, startPos.Y.Offset + (delta.Y))
            service.TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
        end
        dragpart.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch and dragging == false then
                dragStart = input.Position
                local delta = (input.Position - dragStart)
                if delta.Y <= 30 then
                    startPos = gui.Position
                    
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end
        end)
        dragpart.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        service.UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end)
end

function spy.createUILibrary()
    local api = {}
    local objects = {}
    api.objects = objects
    spy.MainGui = spy:createInstance(""ScreenGui"", {Name = ""engospy ""..tostring(spy.VERSION)})
    function spy.Minimize() 
        local isMinimizing = api.Main.Visible
        for i,v in next, spy.MainGui:GetChildren() do 
            if v == api.Icon then 
                v.Visible = isMinimizing
            elseif v == api.Main then
                v.Visible = not isMinimizing
            else
                v.Visible = false
            end
        end
    end
    spy.guiConnections[#spy.guiConnections+1] = service.UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == spy.minimizeBind then 
            spy.Minimize()
        end
    end)
    if syn then syn.protect_gui(spy.MainGui) end; spy.MainGui.Parent = (gethui and gethui() or service.CoreGui)
    api.Main = spy:createInstance(""Frame"", {Name = ""Main"", Parent = spy.MainGui, BackgroundColor3 = Color3.fromRGB(38, 38, 38), Position = UDim2.new(0.326838464, 0, 0.313684225, 0), Size = UDim2.new(0, 637, 0, 394), Draggable = true, Active = true})
    api.Topbar = spy:createInstance(""Frame"", {Name = ""Topbar"", Parent = api.Main, BackgroundColor3 = Color3.fromRGB(255, 255, 255), BackgroundTransparency = 1.000, Position = UDim2.new(0.230337083, 0, 0, 0), Size = UDim2.new(0, 411, 0, 46)})
    api.Sidebar = spy:createInstance(""Frame"", {Name = ""Sidebar"", Parent = api.Main, BackgroundColor3 = Color3.fromRGB(24, 24, 24), BorderSizePixel = 0, Size = UDim2.new(0, 124, 1, 0)})
    api.Title = spy:createInstance(""TextLabel"", {Name = ""Title"", Parent = api.Sidebar, AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromRGB(255, 255, 255), BackgroundTransparency = 1.000, Position = UDim2.new(0.492128909, 0, 0.00581395347, 5), Size = UDim2.new(0, 84, 0, 30), Font = Enum.Font.GothamBold, Text = ""engospy"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 24})
    api.ButtonContainer = spy:createInstance(""Frame"", {Name = ""ButtonContainer"", Parent = api.Sidebar, BackgroundTransparency = 1.000, Position = UDim2.new(0, 0, 0, 45), Size = UDim2.new(0, 124, 1, 0)})
    api.UIListLayout = spy:createInstance(""UIListLayout"", {Name = ""UIListLayout"", Parent = api.ButtonContainer, SortOrder = Enum.SortOrder.LayoutOrder})
    api.Version = spy:createInstance(""TextLabel"", {Name = ""Version"", Parent = api.Sidebar, AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromRGB(255, 255, 255), BackgroundTransparency = 1.000, Position = UDim2.new(0.5, 0, 0.99000001, -20), Size = UDim2.new(0, 31, 0, 18), Font = Enum.Font.Gotham, Text = tostring(spy.VERSION),TextColor3 = Color3.fromRGB(190, 190, 190), TextSize = 15.000, TextWrapped = false, TextXAlignment = Enum.TextXAlignment.Center})
    api.UICorner = spy:createInstance(""UICorner"", {Parent = api.Main, CornerRadius = UDim.new(0, 6)})
    api.Close = spy:createInstance(""TextButton"", {Name = ""Close"", Parent = api.Main, BackgroundColor3 = Color3.fromRGB(222, 48, 48), BorderSizePixel = 0, Position = UDim2.new(0.974882185, -18, 0, 0), Size = UDim2.new(0, 26, 0, 7), Text = """"})
    api.UICorner2 = spy:createInstance(""UICorner"", {Parent = api.Close, CornerRadius = UDim.new(0, 6)})
    api.Minimize = spy:createInstance(""TextButton"", {Name = ""Minimize"", Parent = api.Main, BackgroundColor3 = Color3.fromRGB(253, 229, 119), BorderSizePixel = 0, Position = UDim2.new(0.919937134, -18, 0, 0), Size = UDim2.new(0, 26, 0, 7), Text = """"})
    api.UICorner3 = spy:createInstance(""UICorner"", {Parent = api.Minimize, CornerRadius = UDim.new(0, 6)})
    api.Icon = spy:createInstance(""ImageButton"", {Parent = spy.MainGui, BackgroundColor3 = Color3.fromRGB(24, 24, 24), Position = UDim2.new(0.957393527, 0, 0.603157878, 0), Size = UDim2.new(0, 44, 0, 44), Visible = false, AutoButtonColor = false})
    api.IconImage = spy:createInstance(""ImageLabel"", {Name = ""ELogo"", Parent = api.Icon, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0.699999988, 0, 0.699999988, 0), Image = ""rbxassetid://9710071559""})
    api.UICorner4 = spy:createInstance(""UICorner"", {Parent = api.Icon, CornerRadius = UDim.new(0, 2147483647)})
    
    api.Icon.MouseButton1Click:Connect(spy.Minimize)
    function api.createCallContainer(name) 
        local callapi = {Name = name, FullName = name..""CallContainer"", Type = ""CallContainer"", Calls = {}}
        callapi.Button = spy:createInstance(""TextButton"", {Name = name, Parent = api.ButtonContainer,Size = UDim2.new(0, 124, 0, 25), BackgroundTransparency = 1, BackgroundColor3 = Color3.fromRGB(38, 38, 38), BorderSizePixel = 0, Font = Enum.Font.Gotham, Text = name, TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14})
        callapi.Background = spy:createInstance(""Frame"", {Name = ""CallContainerBack"", Parent = api.Main,ClipsDescendants = true, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 0, Position = UDim2.new(-0.0152793899, 140, 0.0169999953, 0), Size = UDim2.new(0.784279406, 0, 0.967999995, 0), Visible = false})
        callapi.Container = spy:createInstance(""ScrollingFrame"", {Name = callapi.FullName, Parent = callapi.Background,ClipsDescendants = true, Active = true, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Color3.fromRGB(24, 24, 24), BackgroundTransparency = 1.000, BorderSizePixel = 0, Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0.980000019, 0, 0.963999987, 0), ScrollBarThickness = 0, VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left})
        callapi.UIListLayout = spy:createInstance(""UIListLayout"", {Parent = callapi.Container, HorizontalAlignment = Enum.HorizontalAlignment.Center, SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 3)})
        callapi.UICorner = spy:createInstance(""UICorner"", {Parent = callapi.Background})
        spy.guiConnections[#spy.guiConnections+1] = callapi.UIListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""):Connect(function()
            callapi.Container.CanvasSize = UDim2.new(0,0,0,callapi.UIListLayout.AbsoluteContentSize.Y)
        end)
        function callapi.open()
            for i,v in next, objects do
                if v.Type == ""CallContainer"" and v ~= callapi then 
                    v.Background.Visible = false
                    v.Button.BackgroundTransparency = 1
                elseif v == callapi then
                    v.Background.Visible = true
                    v.Button.BackgroundTransparency = 0
                end
            end
            for i,v in next, objects do 
                for i2,v2 in next, v.Calls do 
                    v2.OptionsContainer.Visible = false
                    for i3,v3 in next, v2.Calls do 
                        if v3.OptionsContainer then
                            v3.OptionsContainer.Visible = false
                        end
                    end
                end
            end
        end
        callapi.Button.MouseButton1Click:Connect(callapi.open)

        function callapi.createCall(remote, code) 
            local callapi2 = {Remote = remote, Calls = {}}
            for _,v in next, callapi.Calls do 
                if v.Remote == remote then
                    v.updateCall(code)
                    return v
                end
            end

            function callapi2.updateCall(newCode) 
                local newCode = newCode:gsub(""\n"", """")
                callapi2.Calls[#callapi2.Calls+1] = {Code = newCode}
                local text = callapi2.CallAmount.Text:gsub(""x"", """")
                callapi2.CallAmount.Text = ""x""..tostring(tonumber(text) + 1)
                if #callapi2.Calls >= spy.maxCallsSaved then
                    return
                end
                callapi2.addNewCall(newCode)
            end

            function callapi2.addNewCall(newCode) 
                local callapi3 = {Code = newCode}
                if spy.saveCalls or spy.saveOnlyLastCall then
                    if spy.saveOnlyLastCall and #callapi2.Calls > 0 then 
                        callapi2.Calls[1].CodeLabel.Text = newCode
                        return
                    end
                    callapi3.Call = spy:createInstance(""TextButton"", {Name = ""RemoteCall"", Parent = callapi2.ChildrenContainer, AutoButtonColor = false,AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromRGB(38, 38, 38), Position = UDim2.new(-0.00993345678, 0, -0.0887730792, 0), Size = UDim2.new(0.995000005, 0, 0, 36)})
                    callapi3.UICorner = spy:createInstance(""UICorner"", {CornerRadius = UDim.new(0,6), Parent = callapi3.Call})
                    callapi3.SettingsButton = spy:createInstance(""ImageButton"", {Name = ""SettingsButton"", Parent = callapi3.Call,ClipsDescendants = true, AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0.939999998, 0, 0.5, 0), Size = UDim2.new(0, 26, 0, 26), Image = ""rbxassetid://2717396089"", ImageColor3 = Color3.fromRGB(122, 122, 122), ScaleType = Enum.ScaleType.Fit})
                    callapi3.OptionsContainer = spy:createInstance(""Frame"", {Name = ""OptionsContainer"", Parent = spy.MainGui,ZIndex = 10, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 1, BorderColor3 = Color3.fromRGB(38,38,38), Position = UDim2.fromOffset(7,15), Size = UDim2.new(0, 113, 0, 30), Visible = false})
                    callapi3.OptionsButtonContainer = spy:createInstance(""Frame"", {Name = ""OptionsButtonContainer"", Parent = callapi3.OptionsContainer,ZIndex = 10, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0.959999979, 0, 0.952903688, 0)})
                    callapi3.OptionsUIListLayout = spy:createInstance(""UIListLayout"", {Parent = callapi3.OptionsButtonContainer, SortOrder = Enum.SortOrder.LayoutOrder, VerticalAlignment = Enum.VerticalAlignment.Center})
                    callapi3.CopyButton = spy:createInstance(""TextButton"", {Name = ""CopyLast"", Parent = callapi3.OptionsButtonContainer,ZIndex = 10, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 0, Position = UDim2.new(0.0967741907, 0, 0, 0), Size = UDim2.new(1, 0, 0, 25), Font = Enum.Font.Gotham, Text = ""Copy code"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14, TextWrapped = true})
                    callapi3.CallNum = spy:createInstance(""TextLabel"", {Name = ""CallNum"", Parent = callapi3.Call, AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0, 12, 0.50000006, 0), Size = UDim2.new(0, 37, 0, 24), Font = Enum.Font.Gotham, Text = ""#1"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14.000, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left})
                    callapi3.CodeContainer = spy:createInstance(""ScrollingFrame"", {Name = ""CodeContainer"", Parent = callapi3.Call,ScrollBarImageTransparency=0.75, ScrollingDirection = Enum.ScrollingDirection.XY, Active = true, AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 0, Position = UDim2.new(0.079, 0, 0.5, 0), Size = UDim2.new(0, 416, 0, 26), HorizontalScrollBarInset = Enum.ScrollBarInset.Always, ScrollBarThickness = 2.5, VerticalScrollBarInset = Enum.ScrollBarInset.Always})
                    callapi3.CodeLabel = spy:createInstance(""TextLabel"", {Name = ""CodeLabel"", Parent = callapi3.CodeContainer,AutomaticSize = Enum.AutomaticSize.XY, BackgroundTransparency = 1.000, Position = UDim2.new(0, 10, 0, 0), Size = UDim2.new(0, 771, 0, 25), Font = Enum.Font.Gotham, Text = newCode:gsub(""\n"",""""), TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 12.000, TextXAlignment = Enum.TextXAlignment.Left})
                    --callapi3.CallNum.Text = ""#""..tostring(#callapi2.Calls+1)
                    callapi3.CodeContainer.CanvasSize = UDim2.new(0,callapi3.CodeLabel.AbsoluteSize.X+18,0,0)
                    spy.guiConnections[#spy.guiConnections+1] = callapi3.CodeLabel:GetPropertyChangedSignal(""AbsoluteSize""):Connect(function() 
                        callapi3.CodeContainer.CanvasSize = UDim2.new(0,callapi3.CodeLabel.AbsoluteSize.X+18,0,0)
                    end)

                    --spy.guiConnections[#spy.guiConnections+1] = callapi3.CodeContainer.MouseEnter:Connect(function() 
                    --    callapi.Container.ScrollingEnabled = false
                    --end)

                    --spy.guiConnections[#spy.guiConnections+1] = callapi3.CodeContainer.MouseLeave:Connect(function() 
                    --    callapi.Container.ScrollingEnabled = true
                    --end)

                    function callapi3.openSettings() 
                        for i,v in next, objects do 
                            for i2,v2 in next, v.Calls do 
                                if v2.OptionsContainer ~= callapi3.OptionsContainer then
                                    v2.OptionsContainer.Visible = false
                                end
                                for i3,v3 in next, v2.Calls do 
                                    if v3.OptionsContainer and (v3.OptionsContainer ~= callapi3.OptionsContainer) then
                                        v3.OptionsContainer.Visible = false
                                    end
                                end
                            end
                        end
                        if not callapi3.OptionsContainer.Visible then
                            callapi3.OptionsContainer.Position = UDim2.fromOffset(mouse.X, mouse.Y)
                        end
                        callapi3.OptionsContainer.Visible = not callapi3.OptionsContainer.Visible
                    end

                    function callapi3.copy() 
                        callapi3.OptionsContainer.Visible = false
                        setclipboardfunc(newCode)
                    end

                    callapi3.CopyButton.MouseButton1Click:Connect(callapi3.copy)
                    callapi3.Call.MouseButton2Click:Connect(callapi3.openSettings)
                    callapi3.SettingsButton.MouseButton1Click:Connect(callapi3.openSettings)
                end
                callapi2.Calls[#callapi2.Calls + 1] = callapi3
                return callapi3
            end

            callapi2.Call = spy:createInstance(""TextButton"", {Name = ""RemoteCall"", Text="""",ClipsDescendants = false, AutoButtonColor=false, Parent = callapi.Container, AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromRGB(38,38,38), Position = UDim2.new(0.000436, 0,0,0), Size = UDim2.new(0.995000005, 0, 0, 36)})
            callapi2.UICorner = spy:createInstance(""UICorner"", {Parent = callapi2.Call, CornerRadius = UDim.new(0,6)})
            callapi2.Icon = spy:createInstance(""ImageLabel"", {Name = ""Icon"", Parent = callapi2.Call, AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0, 4, 0.5, 0), Size = UDim2.new(0, 23, 0, 22), Image = spy.assets[remote.ClassName]})
            callapi2.Name = spy:createInstance(""TextLabel"", {Name = ""Name"", Parent = callapi2.Call, AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0.0737449452, 0, 0.500000238, 0), Size = UDim2.new(0, 328, 0, 24), Font = Enum.Font.Gotham, Text = remote.Name, TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Left})
            callapi2.SettingsButton = spy:createInstance(""ImageButton"", {Name = ""SettingsButton"", Parent = callapi2.Call,ClipsDescendants = true, AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0.939999998, 0, 0.5, 0), Size = UDim2.new(0, 26, 0, 26), Image = ""rbxassetid://2717396089"", ImageColor3 = Color3.fromRGB(122, 122, 122), ScaleType = Enum.ScaleType.Fit})
            callapi2.CallAmount = spy:createInstance(""TextLabel"", {Name = ""CallAmount"", Parent = callapi2.Call, AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0.768197536, 0, 0.500000238, 0), Size = UDim2.new(0, 78, 0, 24), Font = Enum.Font.Gotham, Text = ""x1"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14, TextWrapped = true, TextXAlignment = Enum.TextXAlignment.Right})
            callapi2.OptionsContainer = spy:createInstance(""Frame"", {Name = ""OptionsContainer"", Parent = spy.MainGui,ZIndex = 10, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 1, BorderColor3 = Color3.fromRGB(38,38,38), Position = UDim2.fromOffset(7,15), Size = UDim2.new(0, 113, 0, 111), Visible = false})
            callapi2.OptionsButtonContainer = spy:createInstance(""Frame"", {Name = ""OptionsButtonContainer"", Parent = callapi2.OptionsContainer,ZIndex = 10, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundTransparency = 1.000, Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0.959999979, 0, 0, 0)})
            callapi2.OptionsUIListLayout = spy:createInstance(""UIListLayout"", {Parent = callapi2.OptionsButtonContainer, SortOrder = Enum.SortOrder.LayoutOrder, VerticalAlignment = Enum.VerticalAlignment.Center})
            callapi2.CopyButton = spy:createInstance(""TextButton"", {Name = ""CopyLast"", Parent = callapi2.OptionsButtonContainer,ZIndex = 10, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 0, Position = UDim2.new(0.0967741907, 0, 0, 0), Size = UDim2.new(1, 0, 0, 25), Font = Enum.Font.Gotham, Text = ""Copy last call"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14, TextWrapped = true})
            callapi2.Copy10Button = spy:createInstance(""TextButton"", {Name = ""Copy10"", Parent = callapi2.OptionsButtonContainer,ZIndex = 10, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 0, Position = UDim2.new(0.0967741907, 0, 0, 0), Size = UDim2.new(1, 0, 0, 25), Font = Enum.Font.Gotham, Text = ""Copy last x10"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14, TextWrapped = true})
            callapi2.CopyAllButton = spy:createInstance(""TextButton"", {Name = ""Copy10"", Parent = callapi2.OptionsButtonContainer,ZIndex = 10, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 0, Position = UDim2.new(0.0967741907, 0, 0, 0), Size = UDim2.new(1, 0, 0, 25), Font = Enum.Font.Gotham, Text = ""Copy all"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14, TextWrapped = true})
            callapi2.IgnoreButton = spy:createInstance(""TextButton"", {Name = ""Ignore"", Parent = callapi2.OptionsButtonContainer,ZIndex = 10, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 0, Position = UDim2.new(0.0967741907, 0, 0, 0), Size = UDim2.new(1, 0, 0, 25), Font = Enum.Font.Gotham, Text = ""Ignore"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14, TextWrapped = true})
            callapi2.BlockButton = spy:createInstance(""TextButton"", {Name = ""Block"", Parent = callapi2.OptionsButtonContainer,ZIndex = 10, BackgroundColor3 = Color3.fromRGB(23, 23, 23), BorderSizePixel = 0, Position = UDim2.new(0.0967741907, 0, 0, 0), Size = UDim2.new(1, 0, 0, 25), Font = Enum.Font.Gotham, Text = ""Block"", TextColor3 = Color3.fromRGB(255, 255, 255), TextSize = 14, TextWrapped = true})
            callapi2.UICorner2 = spy:createInstance(""UICorner"", {Parent = callapi2.OptionsButtonContainer})
            callapi2.ChildrenContainer = spy:createInstance(""Frame"", {Name = ""CallChildren"", Parent = callapi.Container,AutomaticSize = Enum.AutomaticSize.Y, Visible=false, AnchorPoint = Vector2.new(0.5, 0), BackgroundColor3 = Color3.fromRGB(38, 38, 38), BackgroundTransparency = 1.000,Position = UDim2.new(0.00436409656, 0, 0, 0),Size = UDim2.new(1, 0, -0.00600000005, 36)})
            callapi2.ChildrenUIListLayout = spy:createInstance(""UIListLayout"", {Parent = callapi2.ChildrenContainer, HorizontalAlignment = Enum.HorizontalAlignment.Center, SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 3)})

            callapi2.OptionsButtonContainer.Size = UDim2.new(0.959999979, 0, 0, callapi2.OptionsUIListLayout.AbsoluteContentSize.Y)

            callapi2.addNewCall(code)

            function callapi2.openSettings() 
                for i,v in next, objects do 
                    for i2,v2 in next, v.Calls do 
                        if v2.OptionsContainer ~= callapi2.OptionsContainer and v2.OptionsContainer then
                            v2.OptionsContainer.Visible = false
                        end
                        for i3,v3 in next, v2.Calls do 
                            if v3.OptionsContainer ~= callapi2.OptionsContainer and v3.OptionsContainer then
                                v3.OptionsContainer.Visible = false
                            end
                        end
                    end
                end
                if not callapi2.OptionsContainer.Visible then
                    callapi2.OptionsContainer.Position = UDim2.new(0,mouse.X, 0,mouse.Y)
                end
                callapi2.OptionsContainer.Visible = not callapi2.OptionsContainer.Visible
            end

            function callapi2.copyLast() 
                callapi2.OptionsContainer.Visible = false
                if setclipboardfunc then 
                    if callapi2.Calls[#callapi2.Calls] ~= nil then
                        setclipboardfunc(callapi2.Calls[#callapi2.Calls].Code)
                    end
                end
            end

            function callapi2.copyLast10()
                callapi2.OptionsContainer.Visible = false 
                if setclipboardfunc then 
                    local str = """"
                    for i,v in next, callapi2.Calls do 
                        if i >= #callapi2.Calls-10 then 
                            str= str..""\n--Call #""..tostring(i).."":\n""..v.Code..""\n""
                        end
                    end
                    setclipboardfunc(str)
                end
            end

            function callapi2.copyAll() 
                callapi2.OptionsContainer.Visible = false 
                if setclipboardfunc then 
                    local str = """"
                    for i,v in next, callapi2.Calls do 
                        str= str..""\n--Call #""..tostring(i).."":\n""..v.Code..""\n""
                    end
                    setclipboardfunc(str)
                end
            end

            function callapi2.Block() 
                callapi2.OptionsContainer.Visible = false
                if table.find(spy.blocked, remote) then
                    table.remove(spy.blocked, table.find(spy.blocked, remote))
                    callapi2.BlockButton.Text = ""Block""
                    return
                end
                callapi2.BlockButton.Text = ""Unblock""
                table.insert(spy.blocked, remote)
            end

            function callapi2.Ignore() 
                callapi2.OptionsContainer.Visible = false
                if table.find(spy.ignored, remote) then
                    table.remove(spy.ignored, table.find(spy.ignored, remote))
                    callapi2.IgnoreButton.Text = ""Ignore""
                    return
                end
                callapi2.IgnoreButton.Text = ""Unignore""
                table.insert(spy.ignored, remote)
            end

            function callapi2.Expand() 
                if not spy.saveCalls and not spy.saveOnlyLastCall then return end
                if callapi2.ChildrenContainer.Visible then 
                    for i,v in next, callapi2.Calls do 
                        if v.OptionsContainer and v.OptionsContainer.Visible then 
                            v.OptionsContainer.Visible = false
                        end
                    end
                end
                callapi2.ChildrenContainer.Visible = not callapi2.ChildrenContainer.Visible
            end

            callapi2.Call.MouseButton2Click:Connect(callapi2.openSettings)
            callapi2.SettingsButton.MouseButton1Click:Connect(callapi2.openSettings)
            callapi2.CopyButton.MouseButton1Click:Connect(callapi2.copyLast)
            callapi2.Copy10Button.MouseButton1Click:Connect(callapi2.copyLast10)
            callapi2.CopyAllButton.MouseButton1Click:Connect(callapi2.copyAll)
            callapi2.BlockButton.MouseButton1Click:Connect(callapi2.Block)
            callapi2.IgnoreButton.MouseButton1Click:Connect(callapi2.Ignore)
            callapi2.Call.MouseButton1Click:Connect(callapi2.Expand)

            callapi.Calls[remote.Name] = callapi2
            return callapi2
        end
        objects[name..""CallContainer""] = callapi
        return callapi
    end

    api.Close.MouseButton1Click:Connect(spy.Destroy)
    api.Minimize.MouseButton1Click:Connect(spy.Minimize)
    return api
end
spy.UILibrary = spy:createUILibrary()
local tabs = {}
for i,v in next, spy.namecallmethods do 
    tabs[i] = spy.UILibrary.createCallContainer(v)
end
tabs.RemoteEventClient = spy.UILibrary.createCallContainer(""FireClient"")
if isV3 then
    tabs.RemoteFunctionClient = spy.UILibrary.createCallContainer(""InvokeClient"")
end

if not wasLoaded then spy.Minimize() end

function spy.onEventFired(event, args, ncm) 
    local codestr = spy.convert_to_code(event, args, ncm)
    tabs[event.ClassName].createCall(event, codestr)
end

function spy.onClientEventFired(event, args, ncm)
    local codestr = spy.convert_to_code_client(event, args, ncm)
    tabs.RemoteEventClient.createCall(event, codestr)
end

function spy.hook()
    is_hooking = true
    old_namecall = hookmetamethod(game, ""__namecall"", newcclosure(function(self, ...)
        local args = {...}
        local ncm = getnamecallmethod()
        local callingscript = getcallingscript()
        if is_hooking == true and (string.lower(ncm) == ""invokeserver"" or string.lower(ncm) == ""fireserver"") and (string.find(self.ClassName, ""Event"") or string.find(self.ClassName, ""Function"")) and self~=spy.event and not table.find(spy.ignored, self) and (not table.find(spy.blacklistedNames, self.Name)) then 
            if not checkcaller() and table.find(spy.blocked, self) then return end
            spy.event.Fire(spy.event, self, args, ncm, false)
        end
        return old_namecall(self, ...)
    end));

    local OldFireServer
    OldFireServer = hookfunction(Instance.new(""RemoteEvent"").FireServer,function(self, ...) 
        local args = {...}
        if is_hooking and not table.find(spy.ignored, self) then
           if not checkcaller() and table.find(spy.blocked, self) then return end
           spy.event.Fire(spy.event, self, args, ""FireServer"", false)
        end
        return OldFireServer(self, ...)
    end)

    local OldInvokeServer
    OldInvokeServer = hookfunction(Instance.new(""RemoteFunction"").InvokeServer,function(self, ...) 
        local args = {...}
        if is_hooking and not table.find(spy.ignored, self) then
           if not checkcaller() and table.find(spy.blocked, self) then return end
           spy.event.Fire(spy.event, self, args, ""InvokeServer"", false)
        end
        return OldInvokeServer(self, ...)
    end)

    for i,v in next, game:GetDescendants() do 
        local ClassName = v.ClassName
        if ClassName == ""RemoteEvent"" then
            spy.Connections[#spy.Connections+1] = v.OnClientEvent:Connect(function(...)
                spy.event:Fire(v, {...}, ""FireClient"", true)
            end)
        end
	if isV3 and ClassName == ""RemoteFunction"" and false then 
            local func = getcallbackmember(v, ""OnClientInvoke"")
	
            local old;
            old = hookfunction(func, newcclosure(function(...)
                if is_hooking then
                    spy.event:Fire(v, {...}, ""InvokeClient"", true)
                end
                return old(...)
            end))
            v:GetPropertyChangedSignal(""OnClientInvoke""):Connect(function()
                local func = getcallbackmember(v, ""OnClientInvoke"")
                local old;
                old = hookfunction(func, newcclosure(function(...)
                    if is_hooking then
                        spy.event:Fire(v, {...}, ""InvokeClient"", true)
                    end
                    return old(...)
                end))
            end)
        end
    end

    spy.Connections[#spy.Connections+1]= game.DescendantAdded:Connect(function(v) 
        local ClassName = v.ClassName
        if ClassName == ""RemoteEvent"" then
            spy.Connections[#spy.Connections+1] = v.OnClientEvent:Connect(function(...)
                spy.event:Fire(v, {...}, ""FireClient"", true)
            end)
        end
        if isV3 and ClassName == ""RemoteFunction"" then 
            local func = getcallbackmember(v, ""OnClientInvoke"")
            local old;
            old = hookfunction(func, newcclosure(function(...)
                if is_hooking then
                    spy.event:Fire(v, {...}, ""InvokeClient"", true)
                end
                return old(...)
            end))
            v:GetPropertyChangedSignal(""OnClientInvoke""):Connect(function()
                local func = getcallbackmember(v, ""OnClientInvoke"")
                local old;
                old = hookfunction(func, newcclosure(function(...)
                    if is_hooking then
                        spy.event:Fire(v, {...}, ""InvokeClient"", true)
                    end
                    return old(...)
                end))
            end)
        end
    end)

    spy.event.Event:Connect(function(event, args, ncm, isClient) 
        if isClient then 
            spy.onClientEventFired(event, args, ncm)
            return
        end
        spy.onEventFired(event, args, ncm)
    end)
end

function spy.unhook()
    is_hooking = false
    for i,v in next, spy.Connections do 
        v:Disconnect()
        spy.Connections[i] = nil
    end
end

spy.hook()
--print(""Started engospy in"", tostring(tick()-st)..""s"")"
Bpwym14Z,Disable taxonomy archive page,artemsemkin,PHP,Tuesday 6th of February 2024 08:08:49 PM CDT,"<?php

add_filter( 'register_taxonomy_args', 'custom_change_taxonomy_args', 10, 2 );
function custom_change_taxonomy_args( $args, $taxonomy ) {
  if ( $taxonomy === 'arts_portfolio_category' || $taxonomy === 'arts_portfolio_year' ) {
    $args['public']       = false;
    $args['show_ui']      = true;
    $args['show_in_menu'] = true;
  }

  return $args;
}"
TC7BsKyG,Logins e senha,Nicaelxl2,JSON,Tuesday 6th of February 2024 08:02:52 PM CDT,"{
  ""usuário"": ""teste1"",
  ""senha"": ""teste2"",
  ""logados"": ""0""
}"
fkkGkuDx,waterfallpre.sh,howtophil,Bash,Tuesday 6th of February 2024 07:20:53 PM CDT,"#!/bin/bash
#convert ""$1"" -colorspace Gray -level -10%,110% -resize ""$2"" -flop -rotate 90 ""./$2-$(basename ""$1"")""
convert ""$1"" -colorspace Gray -resize ""$2""  ""./$2-$(basename ""$1"")""

#convert ""$1"" -colorspace Gray -resize $2 -flop -rotate 90 ""./$2-$(basename $1)"""
TEg136xJ,xavieryaa,southcodes,CSS,Tuesday 6th of February 2024 07:13:56 PM CDT,"<!-- 
    - page '' by skye southcodes.tumblr.com
    - modify as you please but please do not touch the credit
    - any errors? need help? have questions? let me know!
    southcodes.tumblr.com/inbox
    
    - normalize css by https://github.com/necolas
    - fonts by google
    - icon font by http://fontawesome.io/icons/

-->
<!DOCTYPE html>
<html>
<head>
	<title>{title}</title>
    
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
 
    <link rel=""shortcut icon"" href=""{favicon}"">
    <meta name=""description"" content=""{MetaDescription}""/>

    <!-- fonts -->
    <link rel=""preconnect"" href=""https://fonts.googleapis.com"">
    <link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin>
    <link href=""https://fonts.googleapis.com/css2?family=Karla:ital,wght@0,400;0,500;0,600;0,700;0,800;1,400;1,500;1,600;1,700;1,800&family=Montserrat:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&display=swap"" rel=""stylesheet"">
    
    <!-- normalize -->
    <link href=""https://necolas.github.io/normalize.css/7.0.0/normalize.css"" rel=""stylesheet"">
    
<style>
    :root {
    --background:#f8f8f8;
    --content-background: #ffffff;
    --text:#333;
    --lighter-text:#aaa;
    --links: #8cb3db;
    --links-hover: #36608c;
    --borders:#e4e4e4;
    --icons: #36608c;
    --accents: lightblue
}
  
.tmblr-iframe {margin:.7rem;opacity:.6;-ms-transform: scale(0.85);-webkit-transform: scale(0.85); /* Safari */transform: scale(0.85);}
.tmblr-iframe:hover {opacity:.8;}

::-webkit-scrollbar-thumb:vertical {border-left:2px solid var(--borders);}
::-webkit-scrollbar {width:6px}
::-webkit-scrollbar-track-piece{margin:5px 0;}

pre {font-family:consolas;
    white-space: pre-wrap;       /* css-3 */
    white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
    white-space: -pre-wrap;      /* Opera 4- */
    white-space: -o-pre-wrap;    /* Opera 7 */
    word-wrap: break-word;}      /* Internet Explorer 5.5+ */

* {margin: 0;padding: 0; box-sizing: border-box;}
p {margin:1rem 0}
body, figure{margin:0;padding:0}
html{font: 14px 'Karla', sans-serif;}
body {font-size:14px;color:var(--text);background:var(--background);}
a {text-decoration: none;color:var(--links);word-break:break-word;}
a:hover {color:var(--links-hover);}
blockquote {margin:0;padding:0;}
img {max-width:100%;height: auto;display: block;margin:0}
hr {border:0;border-top:1px solid var(--borders);margin:0;}
ol, ul, li {list-style-type:none;margin:0;padding:0;}

#container {display: flex;}

#faq-wrapper, #content-table, #work-info,#content-table,#work-story{
    width: 60rem;
    max-width: 90%;
    margin: 2rem auto;
    padding: 3rem;
    background-color: var(--content-background);
    border: 1px solid var(--borders);
}

/* sidebar */

aside {
    width: 18rem;
    height: 100vh;
    overflow: auto;
    flex-shrink: 0;
    border-right: 1px solid var(--borders);
    padding:3rem 2rem;
    background-color: var(--content-background);
    font-family: 'montserrat', sans-serif;
    text-align: right;
    position: relative;
    z-index: 8;
}

#hamburger-checkbox {display: none;}

#hamburger-button {
    display: none;
    position: absolute;
    inset:1rem auto auto 1rem;
    font-size: 1.5rem;
    z-index: 99;
}

/* sidebar image */

.sidebar-image {
    width: 8rem;
    aspect-ratio: 1 / 1;
    border-radius: 100%;
    object-fit: cover;
}
figure.sidebar-image {
    margin-bottom: 2rem;
    float: right;
}
img.sidebar-image {
    border:.8rem solid transparent;
    outline: 1px solid var(--borders);
}

/* page title */

#page-title {
    margin: 0 0 2rem;
    font:600 1.4rem 'Montserrat', sans-serif;
    letter-spacing: .05rem;
}

/* page description */

#page-description {
    margin-bottom: 3rem;
    font-family: 'karla', sans-serif;
    font-size: .95rem;
    letter-spacing: .04rem;
    line-height: 140%;
}

/* sidebar navigation */

#sidebar-navigation {
}

#sidebar-navigation li {
    margin-bottom: 1rem;
}

/* main */

main {
    width: 100%;
    height: 100vh;
    overflow: auto;
    margin: 0 auto;
    padding: 4rem 0;
}


/*	header	*/

header {
    width: 60rem;
    max-width: 90%;
    margin: auto;
}

/* header image */

.header-image {
    width: 100%;
    z-index: 1;
}

/* header icon */

.header-icon {
    width: 13rem;
    aspect-ratio: 1 / 1;
    object-fit: cover;
    position: relative;
    z-index: 9!important;
    border-radius: 100%;
}
figure.header-icon {
    float:right;
    margin: -7rem 3rem 0 0;
}
img.header-icon {
    border: .8rem solid var(--content-background);
    outline: 1px solid var(--borders);
}

/* work info */

#work-info {
    padding-bottom: 1rem;
    font-style: italic;
    letter-spacing: .05rem;
    color: var(--lighter-text);
    line-height: 150%;
}

#work-info li {
    display: inline-block;
    margin:0 4rem 2rem 0;
}

.info-title {
    position: relative;
    margin-right: 2rem;
    text-transform: uppercase;
    font-weight: 600;
    font-size: 1.1rem;
    font-style: normal;
    color: var(--text);
    padding: 2rem;
}

.info-title:before {
    content: '';
    position: absolute;
    inset: auto auto auto 0;
    width: .5rem;
    height: .5rem;
    margin-top: 3px;
    background-color: var(--icons);
    border-radius: 100%;
    border: 2px solid var(--content-background);
    outline: 1px solid var(--borders);
}

.info-title:after {
    content: '';
    position: absolute;
    inset:50% auto auto;
    width: 2rem;
    height: 1px;
    margin-left: 1rem;
    background-color: var(--borders);
}

/* content table */

#content-table {
    text-align: center;
}

#content-title {
    font-size: 1.5rem;
    font-family: 'montserrat', sans-serif;
    font-weight: 600;
    text-transform: uppercase;
    text-align: center;
    margin-bottom: 2rem;
}

#content-table li {
    position: relative;
    font-family: 'montserrat', sans-serif;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: .05rem;
    margin-bottom: 2rem;    
}

#content-table li:last-of-type {
    margin-bottom: 0;
}


#content-table li:before {
    vertical-align: middle;
    font-family: 'Font Awesome 5 Free';
    content:'\f111';
    font-size: .4rem;
    margin:0 .5rem 0 0;
    font-weight: 900;
    color: var(--icons);
    border: 2px solid var(--inner-background);
    outline: 1px solid var(--borders);
    border-radius: 100%;
}

/* story */

#work-header {
    margin: 6rem 0;
    max-width: 100%;
}

/* work title */

#work-story {
    padding:0  4rem 4rem
}

#work-title {
    font: 700 2rem 'montserrat', sans-serif;
    text-transform: uppercase;
    text-align: center;
}

#work-title span {
    box-shadow: inset 0 -13px var(--accents);
    padding: 0 1rem;
}

/* author */

#author {
    text-align: center;
    font-style: italic;
    color: var(--lighter-text);
    letter-spacing: .04rem;
}

/* work summary */

#work-summary {
    margin-top: 2rem;
    text-align: center;
    color: var(--lighter-text);
    letter-spacing: .05rem;
    line-height: 150%;
}

/* chapter title */

.chapter-title {
    font-size: 1.4rem;
    font-family: 'montserrat', sans-serif;
    font-weight: 600;
    text-transform: uppercase;
    text-align: center;
    margin-bottom: 2rem;
    padding-top: 3rem;
}

/* chapter summary */

.chapter-summary {
    text-align: center;
    letter-spacing: .03rem;
    line-height: 130%;
    color: var(--lighter-text);
}

/* chapter text */

.chapter-content {
    margin-top: 3rem;
    text-align: justify;
    font-size: 1.1rem;
    letter-spacing: .03rem;
    line-height: 130%;
}

.chapter-divider {
    width: 90%;
    max-width: 30rem;
    margin: 5rem auto 3rem;
}

/* faq */
 
#faq-wrapper {
    line-height:130%;
}

#faq-title {
    text-align: center;
    font-size: 1.8rem;
    margin:2rem 0
}
 
#faq-wrapper p {
    margin:0;
    padding:1rem 0
}
 
.faq-divider {
    width: 85%;
    max-width: 25rem;
    margin:3rem auto
}
 
/* faq note */
 
#faq-note {
    margin-bottom: 2rem;
}
 
#faq-note li,#faq-note ul{list-style: none;margin:0;padding:0}
 
#faq-note li {margin:1rem}
 
#faq-note li:before {
    vertical-align: middle;
    font-family: 'Font Awesome 5 Free';
    content:'\f111';
    font-size: .4rem;
    margin:0 1rem 0 0;
    font-weight: 900;
    color: var(--icons);
    border: 2px solid var(--inner-background);
    outline: 1px solid var(--borders);
    border-radius: 100%;
}
 
/* faq accordion */
 
/* faq question */
 
.ui-accordion-header {
    margin-bottom: 1rem;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    padding:1rem ;
    border: 1px solid var(--borders);
    background-color: var(--background);
}
 
/* faq answer */
 
.ui-accordion-content {
    padding:.5rem 1rem  3rem;
}
 
.ui-accordion-content:last-of-type {
    border:0
}
 
#accordion .fa-envelope,#accordion .fa-share {
    color: var(--icons);
    font-size: 1.4rem;
    font-weight: 900;
    margin-right: 1rem;
}
 

/* MEDIA */

@media only screen and (min-width:0px) and (max-width:900px) {
    
    #hamburger-button {
        display: block;
        cursor: pointer;
        color: var(--icons);
        background-color: var(--content-background);
        padding:.6rem .8rem;
        border:1px solid var(--borders);
        border-radius: 5px;
    }
    
    #hamburger-checkbox:checked~aside {
        transition: 2s ease;
        transform: translateX(0px);
    }
    
    aside {
        position: absolute;inset:0;
        transform: translateX(-18rem);
        transition: 2s ease;
        padding:4rem 2rem 2rem
    }

    header, #content-table, #work-info,#content-table,#work-story, #faq-wrapper{
        width: 90vw;
        max-width: 90vw;
    }

}


</style>
    
</head>
<body>

    
<section id=""container"">
    
<input type=""checkbox"" id=""hamburger-checkbox""><label id=""hamburger-button"" for=""hamburger-checkbox""><i class=""fa-solid fa-bars""></i></label>

<!-- sidebar start -->
<aside>

    <!-- sidebar image -->
    <figure class=""sidebar-image""><img src=""sidebar image url"" alt="""" class=""sidebar-image""></figure>
    <div style=""clear: both;""></div>

    <!-- page title -->
    <h1 id=""page-title"">title</h1>

    <!-- page description -->
    <article id=""page-description"">
        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Sed, magni? Cumque, voluptas?</p>
    </article>

    <!-- sidebar navigation -->
    <nav id=""sidebar-navigation""><ul>
        <li><a href="""">link</a></li>
        <li><a href="""">link</a></li>
        <li><a href="""">link</a></li>
        <li><a href="""">link</a></li>
    </ul></nav>

</aside>
<!-- sidebar end -->

<main>

    <!-- header start -->
    <header>

        <!-- header image -->
        <figure class=""header-image""><img src=""header image url"" alt="""" class=""header-image""></figure>

        <!-- header icon -->
        <figure class=""header-icon""><img src=""icon header url"" alt="""" class=""header-icon""></figure>
        <div style=""clear: both;""></div>
        
    </header>

    <!-- work info start -->
    <section id=""work-info""><ul>
    
        <li><span class=""info-title"">title</span> content</li>
        
        <li><span class=""info-title"">title</span> content</li>
        
        <li><span class=""info-title"">title</span> content Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cupiditate illo veniam aperiam totam distinctio.</li>
        
        <li><span class=""info-title"">title</span> content</li>
        
    </ul></section>
    <!-- work info end -->

    <!-- content table start -->
    <section id=""content-table"">

        <h2 id=""content-title"">content</h2>
        
        <ul>

        <li><a href=""#chapter-one"">chapter 1</a></li>
        <li><a href=""#chapter-two"">chapter 2</a></li>

    </ul></section>
    <!-- content table end -->

    <!-- story section start -->
    <section id=""work-story"">

        <header id=""work-header"">
            
            <!-- page title -->
            <h2 id=""work-title""><span>page title</span></h2>

            <!-- author -->
            <p id=""author"">— author —</p>

            <!-- story summary -->
            <article id=""work-summary"">
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Pariatur adipisci animi rerum minima illo perferendis quas, repellendus natus, explicabo eveniet odit delectus dicta deleniti sapiente, atque id repudiandae nostrum omnis?</p>
            </article>
        
        </header>

          
        <!-- chapter start -->
        <article class=""work-chapter"" id=""chapter-one"">

            <!-- chapter title -->
            <h3 class=""chapter-title"">chapter title</h3>

            <!-- chapter summary -->
            <article class=""chapter-summary"">
                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cupiditate et, ipsum quibusdam unde magni natus maxime. Alias facere corrupti, nobis, magnam itaque beatae quos obcaecati officia voluptate ut pariatur veniam.</p>
            </article>

            <!-- chapter content -->
            <article class=""chapter-content"">
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat repellendus ipsum inventore voluptas deleniti sequi, minima quaerat nesciunt, modi ab quos nobis libero suscipit commodi? Vitae numquam officia eaque iusto!</p>
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat repellendus ipsum inventore voluptas deleniti sequi, minima quaerat nesciunt, modi ab quos nobis libero suscipit commodi? Vitae numquam officia eaque iusto!</p>
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat repellendus ipsum inventore voluptas deleniti sequi, minima quaerat nesciunt, modi ab quos nobis libero suscipit commodi? Vitae numquam officia eaque iusto!</p>
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat repellendus ipsum inventore voluptas deleniti sequi, minima quaerat nesciunt, modi ab quos nobis libero suscipit commodi? Vitae numquam officia eaque iusto!</p>
            </article>

        </article>
        <!-- chapter end  -->

        <!-- chapter divider -->
        <hr class=""chapter-divider"">        
        

        <!-- chapter start -->
        <article class=""work-chapter"" id=""chapter-two"">

            <!-- chapter title -->
            <h3 class=""chapter-title"">chapter title</h3>

            <!-- chapter summary -->
            <article class=""chapter-summary"">
                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cupiditate et, ipsum quibusdam unde magni natus maxime. Alias facere corrupti, nobis, magnam itaque beatae quos obcaecati officia voluptate ut pariatur veniam.</p>
            </article>

            <!-- chapter content -->
            <article class=""chapter-content"">
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat repellendus ipsum inventore voluptas deleniti sequi, minima quaerat nesciunt, modi ab quos nobis libero suscipit commodi? Vitae numquam officia eaque iusto!</p>
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat repellendus ipsum inventore voluptas deleniti sequi, minima quaerat nesciunt, modi ab quos nobis libero suscipit commodi? Vitae numquam officia eaque iusto!</p>
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat repellendus ipsum inventore voluptas deleniti sequi, minima quaerat nesciunt, modi ab quos nobis libero suscipit commodi? Vitae numquam officia eaque iusto!</p>
                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat repellendus ipsum inventore voluptas deleniti sequi, minima quaerat nesciunt, modi ab quos nobis libero suscipit commodi? Vitae numquam officia eaque iusto!</p>
            </article>

        </article>
        <!-- chapter end  -->

    </section>
    <!-- story section end -->
    
    <!-- faq wrapper start -->
    <section id=""faq-wrapper"">
    
        <!-- faq title -->
        <h2 id=""faq-title"">F.A.Q.</h2>
    
        <article id=""faq-note"">
            <!-- faq text -->
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro, ipsam enim obcaecati nam, culpa tempora, exercitationem eum provident illo asperiores sequi ipsa quos nulla eos sunt dolore deleniti corrupti necessitatibus.</p>
    
            <ul>
                <li>item 1</li>
                <li>item 2</li>
                <li>item 3</li>
            </ul>
        </article>
    
        <hr class=""faq-divider"">
        
            <!-- start faq -->
    
        <div id=""accordion"">
        <!-- start faq questions & answers -->
        
        <!-- if you need to add paragraphs please use <br> instead of <p> -->
        
            
            <!-- question start -->
            <div class=""ui-accordion-header"">
            <i class=""fa-solid fa-envelope""></i>
    
                question
                
            </div>
            
            <div class=""ui-accordion-content"">
            <i class=""fa-solid fa-share""></i>
    
                answer
                
            </div>
            <!-- question end -->
            
            
    
            <!-- question start -->
            <div class=""ui-accordion-header"">
            <i class=""fa-solid fa-envelope""></i>
    
                question
                
            </div>
            
            <div class=""ui-accordion-content"">
            <i class=""fa-solid fa-share""></i>
    
                answer
                
            </div>
            <!-- question end -->
            
            
    
        </div>        <!-- #accordion -->
    
    
    </section>
    <!-- faq wrapper end -->

</main>

</section><!-- container -->


<!-- do not touch -->
<div style=""position:fixed;bottom:2rem;right:2rem;z-index:999999999999999999999!important;font-size:.7rem;letter-spacing:.03rem;""><a href=""https://southcodes.tumblr.com"" title=""coded by southcodes"" target=""_blank"">SC</a></div>

<!-- jquery ui accordion -->

<script src=""https://code.jquery.com/jquery-3.6.1.min.js"" integrity=""sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ="" crossorigin=""anonymous""></script>

<script src=""https://code.jquery.com/ui/1.12.1/jquery-ui.js""></script>
<!-- icons font -->
<script src=""https://kit.fontawesome.com/0993e30c04.js"" crossorigin=""anonymous""></script>

<script>

$(document).ready(function(){
     
   // accordion faq
   $( function() {
        $( ""#accordion"" ).accordion({
        heightStyle: ""content""
        });
    });

});

</script>
</body>
</html>"
XdP8eNGW,imageWaterfall.pl,howtophil,Perl,Tuesday 6th of February 2024 07:11:46 PM CDT,"#!/usr/bin/perl
#--------------------------------------------------------------------------
# This script is a modification of a pre-existing script.
# The modifications are by Phillip J Rhoades.
# howtophil@gmail.com
#
# It is based on this script: https://github.com/plurSKI/imageSpectrogram
# http://www.devrand.org/2013/04/image-to-spectrogram.html by Gavin Black
#
# The original script created ""hidden"" spectrogram images.
#
# The modifications are for creating waterfall images in fldigi
# and similar programs. Since I've made quite a few changes, I've
# renamed the perl script to denote its different purpose.
#
# Please use waterfallpre.sh to ""prep"" images for transformation
# into waterfall sstv images. Or use GIMP (Ph*t*sh*p, whatever).
# I find gray scale images work best. Fiddle with the contrast
# and brightness and make a few test runs.
#
# ./waterfallpre.sh ""imagename.jpg"" 150
#
# This will generate 150-imagename.jpg
#
# 10 pixels wide is about 100hz in the fldigi waterfall.
# So, you'll want to keep images 200ish or fewer pixels
# wide in most cases.
#
# I'm not your dad though, so do as you like.
#
# After your image is ready run:
#
# ./imageWaterfall.pl ""150-imagename.jpg"" <output_file> <sound_frequency_center>
#
# You will then have a wav file which will create a lossy image
# in the fldigi (and similar programs) waterfall display
# when received. Amaze your friends! Be the King Geek and The Dork God!
#
#--------------------------------------------------------------------------

use strict;
use Audio::Wav;
use Math::Complex;
use GD;
use constant TWO_PI => pi() * 2;


my $wav = Audio::Wav->new();
my $sample_rate = 44100;
my $bits_sample = 16;
my $freq_Center = $ARGV[2] || 1500;
my $y = 1;
print ""$freq_Center"";

if( $#ARGV < 0 ) 
{
  print ""Usage: $0 input_file <output_file> <sound_frequency_center>\n"";
  exit 0;
}

# Start writing the wave with the proper arguments
write_out(( $#ARGV < 1) ? ""$ARGV[0].wav"" : $ARGV[1], $ARGV[0]);


sub write_out 
{
   # Set up the wave file
   my $filename = shift;
   my $write = $wav->write($filename, {
      bits_sample => $bits_sample,
      sample_rate => $sample_rate,
      channels    => 1,
   });

   # Set up the picture to read from
   my $imageName = shift;
   my $srcimage;
   open FILE, $imageName or die ""Couldn't open: $imageName\n"";
   close(FILE);
   my $ucImage = uc $imageName;
   if( $ucImage =~ m/.JPG/ || $ucImage =~ m/.JPEG/ )
   {
      $srcimage = GD::Image->newFromJpeg($imageName);
   } elsif ( $ucImage =~ m/.PNG/ ) {
      $srcimage = GD::Image->newFromPng($imageName);
   } elsif ( $ucImage =~ m/.GIF/ ) {
      $srcimage = GD::Image->newFromGif($imageName);
   } else {
      print ""Unsupported filetype\nMust be png, jpg, jpeg, bmp, or gif\n"";
      exit -1;
   }
   my ($srcW,$srcH) = $srcimage->getBounds();

   # Step through each pixel
   #for( my $x = 0; $x < $srcW; $x ++ )
   #for( my $x = 0; $x < $srcH; $x ++ )
   for( my $x = $srcH; $x > 0; $x -- )
   {
      my @t = ();
      #for( my $y = 0; $y < $srcH; $y ++ )
      for( my $y = $srcW; $y > 0; $y -- )
      {
         my $index = $srcimage->getPixel($y,$x);
         my ($r,$g,$b) = $srcimage->rgb($index);

         # Set the frequency and 'color' for this pixel.  Ignore if black
         if( $r > 10 || $g > 10 && $b > 10 )
         {
            #my $c = 4.25 - 4.25*($r + $g + $b)/(256*3);
            my $c = 4.25 - 4.25*($r + $g + $b)/(256*3);
			if( $c < 0.75 )
			{
				$c = 0.75;
			}
			#print ""$c\n"";

            #push( @t, int(2000 - ( $y + 1)/( $srcH + 1) * 1800) );
            #push( @t, int(2000 - ( $y + 1)/( $srcH + 1) * ( ( $srcH * 10 ) - $srcH ) ) );
            #push( @t, int( ( $freq_Center + ( $srcH * 5 ) - ( $srcH / 2) ) - ( $y + 1)/( $srcH + 1) * ( ( $srcH * 10 ) - $srcH ) ) );
            push( @t, int( ( $freq_Center - ( $srcW * 5 ) + ( $srcW / 2) ) + ( $y + 1)/( $srcW + 1) * ( ( $srcW * 10 ) - $srcW ) ) );
			#push( @t, int(($y/$srcH)+1000) );
            push( @t, $c );
         }
      }

      # Ugly way to show a status percentage
      my $status = int(100*$x/$srcH);
      my $lowstatus = 100 - $status;
      my $statusDec = int(10000*$x/$srcH) - 100 * $status;
      my $lowstatusDec = 100 - $statusDec;
      print ""\b\b\b\b\b\b\b\b\b\b\b\b$lowstatus.$lowstatusDec%   "";
      $| = 1;
      # Add a .23 second set of sine waves
      add_sine($write, .23, @t);
   }

   # Finish up
   print ""\b\b\b\b\b\b\b\b\b\b\b\b\b100%   \n"";
   $write->finish();

}

sub add_sine {
   my ($write,$length,@freqs) = @_;
   my $max_no = (2 ** $bits_sample) / 2;
   $length *= $sample_rate;

   for my $pos (0..$length) {
       my $count = 0;
       my $val = 0;
       for( $count = 0; $count < @freqs.length; $count += 2)
       {
          my $time = ($pos / $sample_rate) * @freqs[$count];
          $val += sin(TWO_PI * $time)*10/(10 ** @freqs[$count + 1]); 
       }
       $val /= $count+1;
       my $samp = $val * $max_no;
       $write->write($samp);
   }
}
"
C3wkDfUr,Untitled,madhu_fresh,C++,Tuesday 6th of February 2024 07:05:55 PM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <map>
#include <set>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result;
    cin >> result;
    ReadLine();
    cin.ignore();
    return result;
}

vector<int> ReadRatings() {
    int num_of_ratings;
    cin >> num_of_ratings;
    vector<int>ratings(num_of_ratings);

    for (int i = 0; i < num_of_ratings; i++) {
        cin >> ratings[i];
    }

    cin.ignore();
    return ratings;
}

vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        }
        else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

int ComputeAverageRating(const vector<int>& ratings) {
    int sum = 0;
    for (int rating : ratings) {
        sum += rating;
    }
    return sum / ratings.size();
}

struct Document {
    int id;
    double relevance;
    int rating;
};

class SearchServer {
public:
    void SetStopWords(const string& text) {
        for (const string& word : SplitIntoWords(text)) {
            stop_words_.insert(word);
        }
    }

    void AddDocument(int document_id, const string& document, const vector<int>& ratings) {
        ++document_count_;
        const vector<string> words = SplitIntoWordsNoStop(document);
        const double inv_word_count = 1.0 / words.size();
        document_ratings_.insert({document_id, ComputeAverageRating(ratings)});
        for (const string& word : words) {
            word_to_document_freqs_[word][document_id] += inv_word_count;
        }
    }

    vector<Document> FindTopDocuments(const string& raw_query) const {
        const Query query = ParseQuery(raw_query);
        auto matched_documents = FindAllDocuments(query);

        sort(matched_documents.begin(), matched_documents.end(),
            [](const Document& lhs, const Document& rhs) {
                return lhs.relevance > rhs.relevance;
            });
        if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
            matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
        }
        return matched_documents;
    }

private:
    int document_count_ = 0;
    set<string> stop_words_;
    map<string, map<int, double>> word_to_document_freqs_;
    map<int, int> document_ratings_;

    bool IsStopWord(const string& word) const {
        return stop_words_.count(word) > 0;
    }

    vector<string> SplitIntoWordsNoStop(const string& text) const {
        vector<string> words;
        for (const string& word : SplitIntoWords(text)) {
            if (!IsStopWord(word)) {
                words.push_back(word);
            }
        }
        return words;
    }

    struct QueryWord {
        string data;
        bool is_minus;
        bool is_stop;
    };

    QueryWord ParseQueryWord(string text) const {
        bool is_minus = false;
        // Word shouldn't be empty
        if (text[0] == '-') {
            is_minus = true;
            text = text.substr(1);
        }
        return { text, is_minus, IsStopWord(text) };
    }

    struct Query {
        set<string> plus_words;
        set<string> minus_words;
    };

    Query ParseQuery(const string& text) const {
        Query query;
        for (const string& word : SplitIntoWords(text)) {
            const QueryWord query_word = ParseQueryWord(word);
            if (!query_word.is_stop) {
                if (query_word.is_minus) {
                    query.minus_words.insert(query_word.data);
                }
                else {
                    query.plus_words.insert(query_word.data);
                }
            }
        }
        return query;
    }

    // Existence required
    double ComputeWordInverseDocumentFreq(const string& word) const {
        return log(document_count_ * 1.0 / word_to_document_freqs_.at(word).size());
    }

    vector<Document> FindAllDocuments(const Query& query) const {
        map<int, double> document_to_relevance;
        for (const string& word : query.plus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            const double inverse_document_freq = ComputeWordInverseDocumentFreq(word);
            for (const auto& [document_id, term_freq] : word_to_document_freqs_.at(word)) {
                document_to_relevance[document_id] += term_freq * inverse_document_freq;
            }
        }

        for (const string& word : query.minus_words) {
            if (word_to_document_freqs_.count(word) == 0) {
                continue;
            }
            for (const auto& [document_id, _] : word_to_document_freqs_.at(word)) {
                document_to_relevance.erase(document_id);
            }
        }

        vector<Document> matched_documents;
        for (const auto& [document_id, relevance] : document_to_relevance) {
            matched_documents.push_back({ document_id, relevance, document_ratings_.at(document_id)});
        }
        return matched_documents;
    }
};

SearchServer CreateSearchServer() {
    SearchServer search_server;
    search_server.SetStopWords(ReadLine());

    const int document_count = ReadLineWithNumber();
    for (int document_id = 0; document_id < document_count; ++document_id) {
       
        auto document = ReadLine();
        vector<int> ratings = ReadRatings();
                
        search_server.AddDocument(document_id, document, ratings);
    }

    return search_server;
}

int main() {
    const SearchServer search_server = CreateSearchServer();

    const string query = ReadLine();
    for (const auto& [document_id, relevance, rating] : search_server.FindTopDocuments(query)) {
        cout << ""{ document_id = ""s << document_id << "", ""s
            << ""relevance = ""s << relevance << "", ""s << rating << "" }""s << endl;
    }
}"
v0k3HhjG,Day 06,HarrJ,Java,Tuesday 6th of February 2024 06:46:28 PM CDT,"package jtvi2023b8;

public class Day06A {
    public static void main(String[] args) {
        int grade = 60;
        String result = ""invalid"";
        
        // nested if version
        if (grade <= 100) {
            if (grade >= 97) {
                result = ""1.0"";
            }
        }
        
        if (grade <= 96 && grade >= 94) {
            result = ""1.25"";
        } else if (grade <= 93 && grade >= 91) {
            result = ""1.50"";
        } else if (grade <= 90 && grade >= 88) {
            result = ""1.75"";
        } else if (grade <= 87 && grade >= 85) {
            result = ""2.0"";
        } else if (grade <= 84 && grade >= 82) {
            result = ""2.25"";
        } else if (grade <= 81 && grade >= 79) {
            result = ""2.50"";
        } else if (grade <= 78 && grade >= 76) {
            result = ""2.75"";
        } else if (grade == 75) {
            result = ""3.0"";
        } else if (grade < 75) {
            result = ""Failed"";
        }
        
        System.out.println(grade + "" have a score of "" + result);
    }
}


//-------------------------------------------


package jtvi2023b8;

public class Day06B {
    public static void main(String[] args) {
        double num1 = 32, num2 = 21, result = 0;
        String op = ""-"";
        
        if (op == ""+"") {
            result = num1 + num2;
        } else if (op == ""-"") {
            result = num1 - num2;
        } else if (op == ""*"") {
            result = num1 * num2;
        }
        
        System.out.println(num1 + op + num2 +"" = "" + result);
    }
}
"
xJ0e75WQ,help thread thingy,Ansuperope,HTML,Tuesday 6th of February 2024 06:21:20 PM CDT,"<div class=""container border-0 rounded-0 p-1"" style=""width:45rem; max-width:45rem; text-align:center"">
    
    <!--DESCRIPTION BOX-->
    <!--OPTIONAL. More for witty comments about relationships/items in their inventory.-->
    <div class=""card bg-white border-1 rounded-0 p-2"" style=""height:6.5rem; border-color:#000"">
        <div id=""COLLAPSE_PARENT"" style='text-align:left; color:black; font-weight:bold; font-family: ""ms gothic"", times; font-size: 16px;'>
            
            <!--CHARACTER DESCRIPTION-->
            <div class=""collapse show"" id=""HOME"" data-parent=""#COLLAPSE_PARENT"">
                <div class=""container p-1 m-0"">
                <p>It's you!<br>
                Just a puppet on strings.<br>
                Can fit up to 3 lines.</p>
                </div>
                
                <!--RETURN-->
                <div class=""pull-right"" style=""margin:-1rem; text-align:right"">
                    <ul class=""nav pull-right"">
                            <li class=""nav-item"">
                                <a class=""nav-link active"" data-toggle=""collapse"" href=""#HOME"">
                                    <span style=""color:black""><span style='text-align:right; font-weight:bold; font-family: ""ms gothic"", times; font-size: 8px;'>[X] to Return</span></span>
                                </a>
                            </li>
                    </ul>
                </div>
                
            </div>
            <!--DESCRIPTION END-->

            <!--RELATIONSHIP DESCRIPTION-->
            <!--Repeat for as many relationships.-->
            <div class=""collapse"" id=""OCNAME"" data-parent=""#COLLAPSE_PARENT"">
                <div class=""container p-1"">
                <p>Uhmmm poggers</p>
                </div>
                
                <!--RETURN-->
                <div class=""pull-right"" style=""margin:-1rem; text-align:right"">
                    <ul class=""nav pull-right"">
                            <li class=""nav-item"">
                                <a class=""nav-link"" data-toggle=""collapse"" href=""#OCNAME"">
                                    <span style=""color:black""><span style='text-align:right; font-weight:bold; font-family: ""ms gothic"", times; font-size: 8px;'>[X] to Return</span></span>
                                </a>
                            </li>
                    </ul>
                </div>
            </div>
            <!--DESCRIPTION END-->

            <!--ITEM DESCRIPTION-->
            <!--Repeat for as many items.-->
            <div class=""collapse"" id=""ITEM1"" data-parent=""#COLLAPSE_PARENT"">
                <div class=""container p-1"">
                <p>Yippee!<br>
                It works?</p>
                </div>
                
                <!--RETURN-->
                <div class=""pull-right"" style=""margin:-1rem; text-align:right"">
                    <ul class=""nav pull-right"">
                            <li class=""nav-item"">
                                <a class=""nav-link"" data-toggle=""collapse"" href=""#ITEM1"">
                                    <span style=""color:black""><span style='text-align:right; font-weight:bold; font-family: ""ms gothic"", times; font-size: 8px;'>[X] to Return</span></span>
                                </a>
                            </li>
                    </ul>
                </div>
            </div>
            <!--DESCRIPTION END-->
            
        </div>
        
        
        
    </div>
    
    <!--NAVIGATION-->
    <div class=""card bg-white border-1 rounded-0 p-1"" style=""border-color:#000"">
            <ul class=""nav nav-tabs card-header-tabs row mb-0"">
                <!--BUTTON 1-->
                    <li class=""col-md-3 mb-1"">
                        <a class=""btn bg-white btn-block active"" data-toggle=""tab"" href=""#STATS"">
                            <span style=""color:black""><span style='font-weight:bold; font-family: ""ms gothic"", times; font-size: 14px;'>「 STATS 」</span></span>
                        </a>
                    </li>
                <!--BUTTON 2-->
                    <li class=""col-md-3 mb-1"">
                        <a class=""btn bg-white btn-block"" data-toggle=""tab"" href=""#FRIENDS"">
                            <span style=""color:black"">「 <span style='font-weight:bold; font-family: ""ms gothic"", times; font-size: 14px;'>FRIENDS</span> 」</span>
                        </a>
                    </li>
                <!--BUTTON 3-->
                    <li class=""col-md-3 mb-1"">
                        <a class=""btn bg-white btn-block"" data-toggle=""tab"" href=""#STUFF"">
                            <span style=""color:black"">「 <span style='font-weight:bold; font-family: ""ms gothic"", times; font-size: 14px;'>STUFF</span> 」</span>
                        </a>
                    </li>
                <!--BUTTON 4-->
                    <li class=""col-md-3 mb-1"">
                        <a class=""btn bg-white btn-block"" data-toggle=""tab"" href=""#TASKS"">
                            <span style=""color:black"">「 <span style='font-weight:bold; font-family: ""ms gothic"", times; font-size: 14px;'>TASKS</span> 」</span>
                        </a>
                    </li>
            </ul>
    </div>
    <!--NAVIGATION END-->
    
    <!--TAB CONTENT-->
    <div class=""card bg-white border-1 rounded-0"" style=""height:25rem; border-color:#000"">
        <div class=""tab-content"" style='text-align:left; color:black; font-family: ""ms gothic"", times; font-size: 14px;'>
            
            <!--MAIN PROFILE-->
            <div class=""tab-pane fade show active"" id=""STATS"">
                <div class=""row no-gutters; container-fluid col-auto justify-content-center"">
                    <div class=""col-4 m-4 p-3"">
                    <p align=""center""><img src=""https://static.wikia.nocookie.net/hellocharlotte/images/7/72/Charlotte1-1.png"" style=""border-color:#000; border: 2px solid""></p>
                
                <div class=""p-2"" style=""text-align:center; font-weight:bold; font-size:16px"">Charlotte Wiltshire</div>
                <div class=""row p-1 no-gutters"" style=""font-size:13px"">
                    <div class=""col-auto""><b>Pronouns</b></div>
                    <div class=""col mb-1 mx-1"" style=""border-bottom: dotted 1px;""></div>
                    <div class=""col-auto"">She/Her</div>
                </div>
                <div class=""row p-1 no-gutters"" style=""font-size:13px"">
                    <div class=""col-auto""><b>Species</b></div>
                    <div class=""col mb-1 mx-1"" style=""border-bottom: dotted 1px;""></div>
                    <div class=""col-auto"">Human</div>
                </div>
                <div class=""row p-1 no-gutters"" style=""font-size:13px"">
                    <div class=""col-auto""><b>Age</b></div>
                    <div class=""col mb-1 mx-1"" style=""border-bottom: dotted 1px;""></div>
                    <div class=""col-auto"">15 Years Old</div>
                </div>
            </div>
            
            
            <!--PERSONALITY-->
            <div class=""col-7 p-1"">
                <div class=""p-2"" style=""text-align:left; font-weight:bold; font-size:16px"">PERSONALITY</div>
                <div class=""row p-1 no-gutters"" style=""height:8rem; overflow:auto; font-size:14px"">
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Metus vulputate eu scelerisque felis imperdiet. Nulla pharetra diam sit amet nisl. Viverra justo nec ultrices dui sapien eget mi proin. Sed turpis tincidunt id aliquet risus feugiat in ante metus. Nullam eget felis eget nunc lobortis mattis aliquam. Mauris augue neque gravida in fermentum. Duis ultricies lacus sed turpis. Metus aliquam eleifend mi in nulla posuere sollicitudin. Praesent elementum facilisis leo vel fringilla. Mattis aliquam faucibus purus in massa tempor nec. Velit ut tortor pretium viverra suspendisse. Faucibus a pellentesque sit amet porttitor eget dolor. Aliquet enim tortor at auctor urna nunc. Eu sem integer vitae justo eget magna fermentum iaculis. Sagittis id consectetur purus ut faucibus pulvinar elementum integer enim. Id faucibus nisl tincidunt eget nullam non nisi est sit. Praesent elementum facilisis leo vel fringilla.</p>
                    <p>Interdum varius sit amet mattis vulputate. Vel elit scelerisque mauris pellentesque pulvinar pellentesque habitant morbi. Purus viverra accumsan in nisl nisi scelerisque eu. Ac placerat vestibulum lectus mauris ultrices eros in cursus turpis. Tortor vitae purus faucibus ornare suspendisse sed nisi lacus. Dui sapien eget mi proin sed libero. Eget magna fermentum iaculis eu non diam phasellus vestibulum. Vitae elementum curabitur vitae nunc sed velit. Nec ultrices dui sapien eget mi proin sed libero enim. Purus gravida quis blandit turpis cursus in hac. Sed felis eget velit aliquet sagittis. Semper feugiat nibh sed pulvinar. Fermentum iaculis eu non diam. Aliquam sem et tortor consequat id porta nibh venenatis cras. Sagittis eu volutpat odio facilisis mauris sit amet. Faucibus et molestie ac feugiat sed lectus vestibulum. A cras semper auctor neque. Egestas pretium aenean pharetra magna ac.</p>
                </div>
                
                <br>
                
                <!--BACKSTORY-->
                <div class=""p-2"" style=""text-align:left; font-weight:bold; font-size:16px"">BACKGROUND</div>
                <div class=""row p-1 no-gutters"" style=""height:8rem; overflow:auto; font-size:14px"">
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Metus vulputate eu scelerisque felis imperdiet. Nulla pharetra diam sit amet nisl. Viverra justo nec ultrices dui sapien eget mi proin. Sed turpis tincidunt id aliquet risus feugiat in ante metus. Nullam eget felis eget nunc lobortis mattis aliquam. Mauris augue neque gravida in fermentum. Duis ultricies lacus sed turpis. Metus aliquam eleifend mi in nulla posuere sollicitudin. Praesent elementum facilisis leo vel fringilla. Mattis aliquam faucibus purus in massa tempor nec. Velit ut tortor pretium viverra suspendisse. Faucibus a pellentesque sit amet porttitor eget dolor. Aliquet enim tortor at auctor urna nunc. Eu sem integer vitae justo eget magna fermentum iaculis. Sagittis id consectetur purus ut faucibus pulvinar elementum integer enim. Id faucibus nisl tincidunt eget nullam non nisi est sit. Praesent elementum facilisis leo vel fringilla.</p>
                    <p>Interdum varius sit amet mattis vulputate. Vel elit scelerisque mauris pellentesque pulvinar pellentesque habitant morbi. Purus viverra accumsan in nisl nisi scelerisque eu. Ac placerat vestibulum lectus mauris ultrices eros in cursus turpis. Tortor vitae purus faucibus ornare suspendisse sed nisi lacus. Dui sapien eget mi proin sed libero. Eget magna fermentum iaculis eu non diam phasellus vestibulum. Vitae elementum curabitur vitae nunc sed velit. Nec ultrices dui sapien eget mi proin sed libero enim. Purus gravida quis blandit turpis cursus in hac. Sed felis eget velit aliquet sagittis. Semper feugiat nibh sed pulvinar. Fermentum iaculis eu non diam. Aliquam sem et tortor consequat id porta nibh venenatis cras. Sagittis eu volutpat odio facilisis mauris sit amet. Faucibus et molestie ac feugiat sed lectus vestibulum. A cras semper auctor neque. Egestas pretium aenean pharetra magna ac.</p>
                </div>
            </div>
        
        </div>
    </div>
                
            <!--PROFILE END-->
            
            <!--RELATIONSHIPS-->
            <div class=""tab-pane fade"" id=""FRIENDS"">
                
                help
                
                <a data-toggle=""collapse"" href=""#OCNAME"">testing top collapse</a>
            </div>
            
        </div>
    </div>
</div>"
rhxxwkPN,2024-02-06_stats.json,rdp_snitch,JSON,Tuesday 6th of February 2024 06:18:26 PM CDT,"{
  ""ip"": {
    ""192.3.159.135"": 6,
    ""120.240.145.8"": 3,
    ""45.227.254.26"": 18,
    ""45.227.254.54"": 6,
    ""139.59.185.252"": 3,
    ""106.116.169.71"": 6,
    ""157.119.251.74"": 3,
    ""205.210.31.84"": 9,
    ""87.251.75.145"": 9,
    ""150.95.25.80"": 3,
    ""62.204.41.107"": 18,
    ""150.95.20.49"": 6,
    ""193.37.69.58"": 3,
    ""43.134.66.207"": 3,
    ""185.170.144.3"": 6,
    ""185.170.144.113"": 18,
    ""212.70.149.142"": 12,
    ""179.60.147.122"": 3,
    ""198.235.24.237"": 9,
    ""45.227.254.48"": 6,
    ""104.248.79.165"": 3,
    ""196.190.117.7"": 6,
    ""173.239.214.107"": 3,
    ""45.79.151.11"": 12,
    ""173.239.214.15"": 3,
    ""89.248.170.88"": 3,
    ""20.232.131.121"": 3,
    ""123.58.207.155"": 3,
    ""205.210.31.236"": 9,
    ""95.138.193.228"": 3,
    ""87.251.75.64"": 3,
    ""92.119.177.24"": 3,
    ""149.34.246.34"": 3,
    ""103.159.186.22"": 3,
    ""167.94.146.58"": 3,
    ""71.24.180.177"": 3,
    ""167.94.138.127"": 3,
    ""194.165.16.78"": 6,
    ""216.24.210.113"": 3,
    ""51.77.68.50"": 3,
    ""198.235.24.207"": 9,
    ""185.161.248.219"": 3
  },
  ""asn"": {
    ""AS36352"": 6,
    ""AS56040"": 3,
    ""AS267784"": 30,
    ""AS14061"": 6,
    ""AS4134"": 6,
    ""AS135944"": 3,
    ""AS396982"": 36,
    ""AS208091"": 15,
    ""AS135161"": 9,
    ""AS59425"": 18,
    ""AS132203"": 3,
    ""AS197414"": 24,
    ""AS204428"": 12,
    ""AS209588"": 3,
    ""AS24757"": 6,
    ""AS62240"": 9,
    ""AS63949"": 12,
    ""AS202425"": 3,
    ""AS8075"": 3,
    ""AS135377"": 3,
    ""AS29278"": 3,
    ""AS9009"": 3,
    ""AS212238"": 3,
    ""AS141462"": 3,
    ""AS398705"": 3,
    ""AS33650"": 3,
    ""AS398324"": 3,
    ""AS48721"": 6,
    ""AS16276"": 3,
    ""AS49202"": 3
  },
  ""isp"": {
    ""HostPapa"": 6,
    ""China Mobile communications corporation"": 3,
    ""Flyservers S.A."": 39,
    ""DIGITALOCEAN"": 3,
    ""Chinanet"": 6,
    ""VinhNam Commercial informatics service corporation"": 3,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 36,
    ""GMO-Z.COM PTE. LTD."": 9,
    ""Horizon LLC"": 18,
    ""Xhost Internet Solutions"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 3,
    ""SS-Net"": 12,
    ""DigitalOcean, LLC"": 3,
    ""Ethiotelecom"": 6,
    ""LogicWeb Inc."": 6,
    ""Akamai Technologies, Inc."": 12,
    ""IP Volume inc"": 3,
    ""Microsoft Corporation"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Deninet KFT"": 3,
    ""M247 Europe SRL"": 3,
    ""Datacamp Limited"": 3,
    ""Salam Online"": 3,
    ""Censys, Inc."": 6,
    ""Comcast Cable Communications, LLC"": 3,
    ""Clouvider Limited"": 3,
    ""OVH SAS"": 3,
    ""Kisara LLC"": 3
  },
  ""org"": {
    ""RackNerd LLC"": 6,
    ""China Mobile"": 3,
    ""UAB Host Baltic"": 30,
    ""DigitalOcean, LLC"": 6,
    ""Chinanet HE"": 6,
    ""VINACIS"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 12,
    ""Zcom Thai"": 9,
    ""Horizon LLC"": 18,
    ""XHOSTIS"": 3,
    ""Tencent Cloud Computing"": 3,
    ""Xhostis"": 24,
    ""4Media Ltd"": 12,
    ""Cloud Solutions S.A"": 3,
    ""Unknown"": 6,
    ""NSQ-VENTURE"": 6,
    ""Linode"": 12,
    ""Quasi Networks LTD."": 3,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""VPS4You Kft."": 3,
    ""M247 LTD"": 3,
    ""Datacamp Limited"": 3,
    ""SalamOnline"": 3,
    ""Censys, Inc."": 3,
    ""Comcast Cable Communications, LLC"": 3,
    ""Censys, Inc"": 3,
    ""Flyservers S.A"": 6,
    ""IPXO"": 3,
    ""OVH GmbH"": 3,
    ""Kisara LLC"": 3
  },
  ""regionName"": {
    ""California"": 48,
    ""Guangdong"": 3,
    ""Vilnius"": 30,
    ""England"": 6,
    ""Hebei"": 6,
    ""Ho Chi Minh"": 3,
    ""North Holland"": 42,
    ""Bangkok"": 9,
    ""Moscow"": 21,
    ""North West"": 3,
    ""Plovdiv"": 12,
    ""Distrito Federal"": 3,
    ""Addis Ababa"": 6,
    ""New Jersey"": 21,
    ""Virginia"": 3,
    ""Gy\u0151r-Moson-Sopron"": 3,
    ""Hesse"": 9,
    ""Dhaka Division"": 3,
    ""Washington"": 3,
    ""Michigan"": 3,
    ""Kaunas"": 6
  },
  ""country"": {
    ""United States"": 78,
    ""China"": 9,
    ""Lithuania"": 36,
    ""United Kingdom"": 6,
    ""Vietnam"": 3,
    ""The Netherlands"": 42,
    ""Thailand"": 9,
    ""Russia"": 21,
    ""Singapore"": 3,
    ""Bulgaria"": 12,
    ""Venezuela"": 3,
    ""Ethiopia"": 6,
    ""Hungary"": 3,
    ""Germany"": 9,
    ""Bangladesh"": 3
  },
  ""account"": {
    ""Test"": 60,
    ""(empty)"": 24,
    ""hello"": 36,
    ""odEMgVLLH"": 3,
    ""SdEDlF"": 3,
    ""omjmsY"": 3,
    ""Administr"": 39,
    ""Domain"": 30,
    ""FqRDtxbhj"": 3,
    ""ITbUMi"": 3,
    ""uEfKfH"": 3,
    ""beio"": 3,
    ""sooajj1y"": 12,
    ""Administrator"": 3,
    ""ceeiaRnzW"": 3,
    ""VdBmtd"": 3,
    ""mzNAog"": 3,
    ""annExrwaP"": 3,
    ""KKhZwg"": 3,
    ""uMAgRI"": 3
  },
  ""keyboard"": {
    ""Unknown"": 243
  },
  ""client_build"": {
    ""Unknown"": 243
  },
  ""client_name"": {
    ""Unknown"": 243
  },
  ""ip_type"": {
    ""hosting"": 84,
    ""mobile"": 3,
    ""Unknown"": 138,
    ""hosting & proxy"": 12,
    ""proxy"": 3,
    ""mobile & hosting"": 3
  }
}"
Pix5CTFP,2024-02-06_stats.json,rdp_snitch,JSON,Tuesday 6th of February 2024 06:16:13 PM CDT,"{
  ""ip"": {
    ""192.3.159.135"": 4,
    ""120.240.145.8"": 2,
    ""45.227.254.26"": 12,
    ""45.227.254.54"": 4,
    ""139.59.185.252"": 2,
    ""106.116.169.71"": 4,
    ""157.119.251.74"": 2,
    ""205.210.31.84"": 6,
    ""87.251.75.145"": 6,
    ""150.95.25.80"": 2,
    ""62.204.41.107"": 12,
    ""150.95.20.49"": 4,
    ""193.37.69.58"": 2,
    ""43.134.66.207"": 2,
    ""185.170.144.3"": 4,
    ""185.170.144.113"": 12,
    ""212.70.149.142"": 8,
    ""179.60.147.122"": 2,
    ""198.235.24.237"": 6,
    ""45.227.254.48"": 4,
    ""104.248.79.165"": 2,
    ""196.190.117.7"": 4,
    ""173.239.214.107"": 2,
    ""45.79.151.11"": 8,
    ""173.239.214.15"": 2,
    ""89.248.170.88"": 2,
    ""20.232.131.121"": 2,
    ""123.58.207.155"": 2,
    ""205.210.31.236"": 6,
    ""95.138.193.228"": 2,
    ""87.251.75.64"": 2,
    ""92.119.177.24"": 2,
    ""149.34.246.34"": 2,
    ""103.159.186.22"": 2,
    ""167.94.146.58"": 2,
    ""71.24.180.177"": 2,
    ""167.94.138.127"": 2,
    ""194.165.16.78"": 4,
    ""216.24.210.113"": 2,
    ""51.77.68.50"": 2,
    ""198.235.24.207"": 6,
    ""185.161.248.219"": 2
  },
  ""asn"": {
    ""AS36352"": 4,
    ""AS56040"": 2,
    ""AS267784"": 20,
    ""AS14061"": 4,
    ""AS4134"": 4,
    ""AS135944"": 2,
    ""AS396982"": 24,
    ""AS208091"": 10,
    ""AS135161"": 6,
    ""AS59425"": 12,
    ""AS132203"": 2,
    ""AS197414"": 16,
    ""AS204428"": 8,
    ""AS209588"": 2,
    ""AS24757"": 4,
    ""AS62240"": 6,
    ""AS63949"": 8,
    ""AS202425"": 2,
    ""AS8075"": 2,
    ""AS135377"": 2,
    ""AS29278"": 2,
    ""AS9009"": 2,
    ""AS212238"": 2,
    ""AS141462"": 2,
    ""AS398705"": 2,
    ""AS33650"": 2,
    ""AS398324"": 2,
    ""AS48721"": 4,
    ""AS16276"": 2,
    ""AS49202"": 2
  },
  ""isp"": {
    ""HostPapa"": 4,
    ""China Mobile communications corporation"": 2,
    ""Flyservers S.A."": 26,
    ""DIGITALOCEAN"": 2,
    ""Chinanet"": 4,
    ""VinhNam Commercial informatics service corporation"": 2,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 24,
    ""GMO-Z.COM PTE. LTD."": 6,
    ""Horizon LLC"": 12,
    ""Xhost Internet Solutions"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""SS-Net"": 8,
    ""DigitalOcean, LLC"": 2,
    ""Ethiotelecom"": 4,
    ""LogicWeb Inc."": 4,
    ""Akamai Technologies, Inc."": 8,
    ""IP Volume inc"": 2,
    ""Microsoft Corporation"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Deninet KFT"": 2,
    ""M247 Europe SRL"": 2,
    ""Datacamp Limited"": 2,
    ""Salam Online"": 2,
    ""Censys, Inc."": 4,
    ""Comcast Cable Communications, LLC"": 2,
    ""Clouvider Limited"": 2,
    ""OVH SAS"": 2,
    ""Kisara LLC"": 2
  },
  ""org"": {
    ""RackNerd LLC"": 4,
    ""China Mobile"": 2,
    ""UAB Host Baltic"": 20,
    ""DigitalOcean, LLC"": 4,
    ""Chinanet HE"": 4,
    ""VINACIS"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 8,
    ""Zcom Thai"": 6,
    ""Horizon LLC"": 12,
    ""XHOSTIS"": 2,
    ""Tencent Cloud Computing"": 2,
    ""Xhostis"": 16,
    ""4Media Ltd"": 8,
    ""Cloud Solutions S.A"": 2,
    ""Unknown"": 4,
    ""NSQ-VENTURE"": 4,
    ""Linode"": 8,
    ""Quasi Networks LTD."": 2,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""VPS4You Kft."": 2,
    ""M247 LTD"": 2,
    ""Datacamp Limited"": 2,
    ""SalamOnline"": 2,
    ""Censys, Inc."": 2,
    ""Comcast Cable Communications, LLC"": 2,
    ""Censys, Inc"": 2,
    ""Flyservers S.A"": 4,
    ""IPXO"": 2,
    ""OVH GmbH"": 2,
    ""Kisara LLC"": 2
  },
  ""regionName"": {
    ""California"": 32,
    ""Guangdong"": 2,
    ""Vilnius"": 20,
    ""England"": 4,
    ""Hebei"": 4,
    ""Ho Chi Minh"": 2,
    ""North Holland"": 28,
    ""Bangkok"": 6,
    ""Moscow"": 14,
    ""North West"": 2,
    ""Plovdiv"": 8,
    ""Distrito Federal"": 2,
    ""Addis Ababa"": 4,
    ""New Jersey"": 14,
    ""Virginia"": 2,
    ""Gy\u0151r-Moson-Sopron"": 2,
    ""Hesse"": 6,
    ""Dhaka Division"": 2,
    ""Washington"": 2,
    ""Michigan"": 2,
    ""Kaunas"": 4
  },
  ""country"": {
    ""United States"": 52,
    ""China"": 6,
    ""Lithuania"": 24,
    ""United Kingdom"": 4,
    ""Vietnam"": 2,
    ""The Netherlands"": 28,
    ""Thailand"": 6,
    ""Russia"": 14,
    ""Singapore"": 2,
    ""Bulgaria"": 8,
    ""Venezuela"": 2,
    ""Ethiopia"": 4,
    ""Hungary"": 2,
    ""Germany"": 6,
    ""Bangladesh"": 2
  },
  ""account"": {
    ""Test"": 40,
    ""(empty)"": 16,
    ""hello"": 24,
    ""odEMgVLLH"": 2,
    ""SdEDlF"": 2,
    ""omjmsY"": 2,
    ""Administr"": 26,
    ""Domain"": 20,
    ""FqRDtxbhj"": 2,
    ""ITbUMi"": 2,
    ""uEfKfH"": 2,
    ""beio"": 2,
    ""sooajj1y"": 8,
    ""Administrator"": 2,
    ""ceeiaRnzW"": 2,
    ""VdBmtd"": 2,
    ""mzNAog"": 2,
    ""annExrwaP"": 2,
    ""KKhZwg"": 2,
    ""uMAgRI"": 2
  },
  ""keyboard"": {
    ""Unknown"": 162
  },
  ""client_build"": {
    ""Unknown"": 162
  },
  ""client_name"": {
    ""Unknown"": 162
  },
  ""ip_type"": {
    ""hosting"": 56,
    ""mobile"": 2,
    ""Unknown"": 92,
    ""hosting & proxy"": 8,
    ""proxy"": 2,
    ""mobile & hosting"": 2
  }
}"
a9RSB9Rc,2024-02-06_stats.json,rdp_snitch,JSON,Tuesday 6th of February 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""192.3.159.135"": 2,
    ""120.240.145.8"": 1,
    ""45.227.254.26"": 6,
    ""45.227.254.54"": 2,
    ""139.59.185.252"": 1,
    ""106.116.169.71"": 2,
    ""157.119.251.74"": 1,
    ""205.210.31.84"": 3,
    ""87.251.75.145"": 3,
    ""150.95.25.80"": 1,
    ""62.204.41.107"": 6,
    ""150.95.20.49"": 2,
    ""193.37.69.58"": 1,
    ""43.134.66.207"": 1,
    ""185.170.144.3"": 2,
    ""185.170.144.113"": 6,
    ""212.70.149.142"": 4,
    ""179.60.147.122"": 1,
    ""198.235.24.237"": 3,
    ""45.227.254.48"": 2,
    ""104.248.79.165"": 1,
    ""196.190.117.7"": 2,
    ""173.239.214.107"": 1,
    ""45.79.151.11"": 4,
    ""173.239.214.15"": 1,
    ""89.248.170.88"": 1,
    ""20.232.131.121"": 1,
    ""123.58.207.155"": 1,
    ""205.210.31.236"": 3,
    ""95.138.193.228"": 1,
    ""87.251.75.64"": 1,
    ""92.119.177.24"": 1,
    ""149.34.246.34"": 1,
    ""103.159.186.22"": 1,
    ""167.94.146.58"": 1,
    ""71.24.180.177"": 1,
    ""167.94.138.127"": 1,
    ""194.165.16.78"": 2,
    ""216.24.210.113"": 1,
    ""51.77.68.50"": 1,
    ""198.235.24.207"": 3,
    ""185.161.248.219"": 1
  },
  ""asn"": {
    ""AS36352"": 2,
    ""AS56040"": 1,
    ""AS267784"": 10,
    ""AS14061"": 2,
    ""AS4134"": 2,
    ""AS135944"": 1,
    ""AS396982"": 12,
    ""AS208091"": 5,
    ""AS135161"": 3,
    ""AS59425"": 6,
    ""AS132203"": 1,
    ""AS197414"": 8,
    ""AS204428"": 4,
    ""AS209588"": 1,
    ""AS24757"": 2,
    ""AS62240"": 3,
    ""AS63949"": 4,
    ""AS202425"": 1,
    ""AS8075"": 1,
    ""AS135377"": 1,
    ""AS29278"": 1,
    ""AS9009"": 1,
    ""AS212238"": 1,
    ""AS141462"": 1,
    ""AS398705"": 1,
    ""AS33650"": 1,
    ""AS398324"": 1,
    ""AS48721"": 2,
    ""AS16276"": 1,
    ""AS49202"": 1
  },
  ""isp"": {
    ""HostPapa"": 2,
    ""China Mobile communications corporation"": 1,
    ""Flyservers S.A."": 13,
    ""DIGITALOCEAN"": 1,
    ""Chinanet"": 2,
    ""VinhNam Commercial informatics service corporation"": 1,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 12,
    ""GMO-Z.COM PTE. LTD."": 3,
    ""Horizon LLC"": 6,
    ""Xhost Internet Solutions"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""SS-Net"": 4,
    ""DigitalOcean, LLC"": 1,
    ""Ethiotelecom"": 2,
    ""LogicWeb Inc."": 2,
    ""Akamai Technologies, Inc."": 4,
    ""IP Volume inc"": 1,
    ""Microsoft Corporation"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Deninet KFT"": 1,
    ""M247 Europe SRL"": 1,
    ""Datacamp Limited"": 1,
    ""Salam Online"": 1,
    ""Censys, Inc."": 2,
    ""Comcast Cable Communications, LLC"": 1,
    ""Clouvider Limited"": 1,
    ""OVH SAS"": 1,
    ""Kisara LLC"": 1
  },
  ""org"": {
    ""RackNerd LLC"": 2,
    ""China Mobile"": 1,
    ""UAB Host Baltic"": 10,
    ""DigitalOcean, LLC"": 2,
    ""Chinanet HE"": 2,
    ""VINACIS"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 4,
    ""Zcom Thai"": 3,
    ""Horizon LLC"": 6,
    ""XHOSTIS"": 1,
    ""Tencent Cloud Computing"": 1,
    ""Xhostis"": 8,
    ""4Media Ltd"": 4,
    ""Cloud Solutions S.A"": 1,
    ""Unknown"": 2,
    ""NSQ-VENTURE"": 2,
    ""Linode"": 4,
    ""Quasi Networks LTD."": 1,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""VPS4You Kft."": 1,
    ""M247 LTD"": 1,
    ""Datacamp Limited"": 1,
    ""SalamOnline"": 1,
    ""Censys, Inc."": 1,
    ""Comcast Cable Communications, LLC"": 1,
    ""Censys, Inc"": 1,
    ""Flyservers S.A"": 2,
    ""IPXO"": 1,
    ""OVH GmbH"": 1,
    ""Kisara LLC"": 1
  },
  ""regionName"": {
    ""California"": 16,
    ""Guangdong"": 1,
    ""Vilnius"": 10,
    ""England"": 2,
    ""Hebei"": 2,
    ""Ho Chi Minh"": 1,
    ""North Holland"": 14,
    ""Bangkok"": 3,
    ""Moscow"": 7,
    ""North West"": 1,
    ""Plovdiv"": 4,
    ""Distrito Federal"": 1,
    ""Addis Ababa"": 2,
    ""New Jersey"": 7,
    ""Virginia"": 1,
    ""Gy\u0151r-Moson-Sopron"": 1,
    ""Hesse"": 3,
    ""Dhaka Division"": 1,
    ""Washington"": 1,
    ""Michigan"": 1,
    ""Kaunas"": 2
  },
  ""country"": {
    ""United States"": 26,
    ""China"": 3,
    ""Lithuania"": 12,
    ""United Kingdom"": 2,
    ""Vietnam"": 1,
    ""The Netherlands"": 14,
    ""Thailand"": 3,
    ""Russia"": 7,
    ""Singapore"": 1,
    ""Bulgaria"": 4,
    ""Venezuela"": 1,
    ""Ethiopia"": 2,
    ""Hungary"": 1,
    ""Germany"": 3,
    ""Bangladesh"": 1
  },
  ""account"": {
    ""Test"": 20,
    ""(empty)"": 8,
    ""hello"": 12,
    ""odEMgVLLH"": 1,
    ""SdEDlF"": 1,
    ""omjmsY"": 1,
    ""Administr"": 13,
    ""Domain"": 10,
    ""FqRDtxbhj"": 1,
    ""ITbUMi"": 1,
    ""uEfKfH"": 1,
    ""beio"": 1,
    ""sooajj1y"": 4,
    ""Administrator"": 1,
    ""ceeiaRnzW"": 1,
    ""VdBmtd"": 1,
    ""mzNAog"": 1,
    ""annExrwaP"": 1,
    ""KKhZwg"": 1,
    ""uMAgRI"": 1
  },
  ""keyboard"": {
    ""Unknown"": 81
  },
  ""client_build"": {
    ""Unknown"": 81
  },
  ""client_name"": {
    ""Unknown"": 81
  },
  ""ip_type"": {
    ""hosting"": 28,
    ""mobile"": 1,
    ""Unknown"": 46,
    ""hosting & proxy"": 4,
    ""proxy"": 1,
    ""mobile & hosting"": 1
  }
}"
AJVaPBgp,distinct,nmh07000,Java,Tuesday 6th of February 2024 04:54:34 PM CDT,"import java.util.*;
class distinct {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++) {
            arr[i] = scan.nextInt();
        }
        
        Arrays.sort(arr);
        int ans = 1;
        for(int i=0; i<n-1; i++) {
            if(arr[i] != arr[i+1]) {
                ans++;
            }
        }
        System.out.println(ans);
    }
}"
KFNyrcMU,Reading data from Home Assistant and displaying them on a ST7735 display,LeventeDaradici,C++,Tuesday 6th of February 2024 04:16:15 PM CDT,"//
// Can ESP32 read data from Home Assistant? Reading ""Inverter Active Power"" from Home Assistant connected to Huawei SUN2000-5KTL-L1 inverter
//
//  https://youtu.be/p7ZOHrjYuNU
//

#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>
#include <SPI.h>
#include <ArduinoJson.h>
#include <WiFi.h>
#include <HTTPClient.h>

const char* ssid = ""YOUR WIFI SSID"";
const char* password = ""YOUR WIFI PASSWORD"";
const char* haApiUrl = ""http://YOUR HOME ASSISTANT SERVER IP:8123/api/states/XXXXXXXXX_SENSOR_NAME_XXXXXXX"";
// EXAMPLE:
// const char* haApiUrl = ""http://192.168.0.103:8123/api/states/sensor.power_meter_active_power"";

const char* haApiToken = ""YOUR HOME ASSISTANT TOKEN"";

#define TFT_CS    5
#define TFT_RST   4
#define TFT_DC    2

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println(""Connecting to WiFi..."");
  }

  Serial.println(""Connected to WiFi"");

  //tft.initR(INITR_GREENTAB);
  //tft.initR(INITR_REDTAB);
  tft.initR(INITR_BLACKTAB);
  tft.setRotation(1); 
  tft.fillScreen(ST7735_BLACK);  
}

void loop() {
  HTTPClient http;
  http.begin(haApiUrl);
  http.addHeader(""Authorization"", ""Bearer "" + String(haApiToken));

  int httpCode = http.GET();

  if (httpCode > 0) {
    String payload = http.getString();

    DynamicJsonDocument doc(1024);
    deserializeJson(doc, payload);

    float currentProduction = doc[""state""].as<float>();

    int intProduction = int(currentProduction);
    Serial.print(""Current Production: "");  

    int lungimeText;
    int16_t x, y;
    uint16_t w, h;

    //tft.setTextColor(ST7735_WHITE);
    if (intProduction >= 0) 
       {
          //tft.setTextColor(ST7735_GREEN);
          tft.setTextColor(0x07E0);
       } else {
                 //tft.setTextColor(ST7735_RED);
                 tft.setTextColor(0xF800); 
              }
    tft.setTextSize(5);
    tft.getTextBounds(String(intProduction), 0, 0, &x, &y, &w, &h);
    lungimeText = w + (intProduction < 0 ? 6 : 0);
    int inaltimeText = h;
    tft.setCursor(tft.width() - lungimeText, tft.height() - inaltimeText);
    tft.fillScreen(ST7735_BLACK); 
    tft.print(intProduction);

    Serial.println(intProduction);
    delay(5000);  
  } else {
    Serial.println(""Error in HTTP request"");
    delay(1000); 
  }

  http.end();

}

int numarDigits(int numar) 
    {
      int cifre = 1;
      while (numar /= 10) 
           {
             cifre++;
           }
  return cifre;
    }"
vfFemY4T,button to send packet,CreativeMasterBonin,Java,Tuesday 6th of February 2024 04:02:36 PM CDT,"button1 = new ExtendedButton(this.leftPos + xFirstOffset, this.topPos + yOffsetTopRow, button_size_x, button_size_y, Component.literal(""1""),
                (b0s) -> {
            PacketDistributor.SERVER.noArg().send(new MobilePhonePressButtonPayload(new BlockPos(x,y,z),13));
        });"
vzchT0pE,Untitled,Nenogzar,Python,Tuesday 6th of February 2024 03:51:57 PM CDT,"neighborhood = [int(x) for x in input().split(""@"")]
jump_data = input()
neighborhood_len = len(neighborhood)
length = 0

while jump_data != ""Love!"":
    length += int(jump_data.split()[-1])
    if length >= neighborhood_len:
        length = 0

    if neighborhood[length] > 2:
        neighborhood[length] -= 2
    else:
        if neighborhood[length] != 0:
            neighborhood[length] -= 2
            text = ""has""
        else:
            text = ""already had""
        print(f""Place {length} {text} Valentine's day."")
    jump_data = input()

print(f""Cupid's last position was {length}."")

failed_houses = sum(1 for x in neighborhood if x != 0)

if failed_houses:
    print(f""Cupid has failed {failed_houses} places."")
else:
    print(""Mission was successful."")"
9Y4kmBiW,mobilepayload,CreativeMasterBonin,Java,Tuesday 6th of February 2024 03:45:29 PM CDT,"package net.rk.thingamajigs.network.data;

import net.minecraft.core.BlockPos;
import net.minecraft.network.FriendlyByteBuf;
import net.minecraft.network.protocol.common.custom.CustomPacketPayload;
import net.minecraft.resources.ResourceLocation;
import net.rk.thingamajigs.Thingamajigs;

public record MobilePhonePressButtonPayload(BlockPos bp,int soundId) implements CustomPacketPayload {
    public static final ResourceLocation ID = new ResourceLocation(Thingamajigs.MODID, ""mobile_phone_press_button"");

    public MobilePhonePressButtonPayload(final FriendlyByteBuf buf){
        this(buf.readBlockPos(),buf.readInt());
    }

    @Override
    public void write(FriendlyByteBuf buf) {
        buf.writeBlockPos(bp());
        buf.writeInt(soundId());
    }

    @Override
    public ResourceLocation id() {
        return ID;
    }
}
"
GMFCYe2T,mobilepacket,CreativeMasterBonin,Java,Tuesday 6th of February 2024 03:44:34 PM CDT,"package net.rk.thingamajigs.network.handler;

import net.minecraft.core.BlockPos;
import net.minecraft.sounds.SoundEvent;
import net.minecraft.sounds.SoundSource;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.state.BlockState;
import net.neoforged.neoforge.network.handling.PlayPayloadContext;
import net.rk.thingamajigs.block.TBlocks;
import net.rk.thingamajigs.events.TSoundEvents;
import net.rk.thingamajigs.network.data.MobilePhonePressButtonPayload;

import java.util.Optional;
import java.util.logging.Logger;

public class MobilePhonePressButtonPacket {
    public static final MobilePhonePressButtonPacket INSTANCE = new MobilePhonePressButtonPacket();

    public static MobilePhonePressButtonPacket get(){
        return INSTANCE;
    }

    public void handle(final MobilePhonePressButtonPayload payload,final PlayPayloadContext context) {
        context.workHandler().submitAsync(
                () -> {
                    Optional<Player> ply = context.player();
                    if(ply.isEmpty()){
                        return;
                    }
                    else{
                        Player sendply = ply.get();
                        Level lvl = sendply.level();
                        BlockState bs = lvl.getBlockState(payload.bp());
                        SoundSource ss1 = SoundSource.PLAYERS;
                        SoundEvent sfx1 = TSoundEvents.MOBILE_ONE.get();

                        if(bs.is(TBlocks.MOBILE_PHONE.get())){
                            Logger.getAnonymousLogger().info(""Testing server side mobile phone packet/payload."");
                            if(lvl.isClientSide){
                                lvl.playLocalSound(payload.bp(),sfx1,ss1,1.0F,1.0F,false);
                            }
                            else{
                                lvl.playSound(sendply,payload.bp(),sfx1,ss1,1.0f,1.0f);
                            }
                        }
                    }
                }
        );
    }
}
"
zKTvsjAH,Game Installer Script (v2) Based on JC141 Script,EvilSupahFly,Bash,Tuesday 6th of February 2024 03:41:11 PM CDT,"#!/bin/bash
#
# V2 of my Game Installer Script Based on the original JC141 Script as it appeared in BG3.
# Assumes multiple games are stored in conveniently-named subdirectories with a 'setup.exe' in them, and
# takes a folder name on the command line, creates all the applicable directories and a WINE prefix for
# it, downloads and installs, the newest version of VULKAN, starts the setup.exe located in the folder
# provided on the command line, and writes a version of the installer script out as the game start script.
#
# Changes from v1:
# - Rather than create individually named bottles each time it gets run as V1 did, this version installs 
#   the game to a named folder in a pre-set prefix to conserve disk space, which I plan to make optional in V3.
# - Replaces whitespace in the command line with underscores to make a custom named starting script for the game
#   which replaces the original version of starting script, reflecting changes made to this installer.
# - Copies and runs all MSVCPP redistributables from the folder REDIST, located in the script's starting directory.
# - Removed WAN blocking
# - Removed dwarfs checking
#

# Checks
cd ""$(dirname ""$(readlink -f ""$0"")"")"" || exit; [ ""$EUID"" = ""0"" ] && exit; [ ""$1"" = """" ] && echo ""Command line can't be blank - please choose a game."" && exit

# Variables
export G=""$1""
export GAME=""${G// /_}""
export JCD=""/home/$(whoami)/Games/jc141""; [ ! -d ""$JCD"" ] && mkdir -p ""$JCD""
export RSRC=""$(dirname ""$(readlink -f ""$0"")"")/redist""
export WINE=""$(command -v wine)""
export WINEPREFIX=""$JCD""
export WINEDLLOVERRIDES=""winemenubuilder.exe=d;mshtml=d;nvapi,nvapi64=n""
export WINE_LARGE_ADDRESS_AWARE=1
export GAMEDIR=""$WINEPREFIX/drive_c/Games/$GAME""
export GSS=""${WINEPREFIX}/drive_c/${GAME}.sh""
export REDIST=""$WINEPREFIX/drive_c/redist""

echo """"
echo ""Variables Declared. Writing GSS for $1 to: $GSS""
echo """"
sleep 5
#create game starter script
cat << EOL > ""$GSS""
#!/bin/bash

# ${GAME}.sh #

cd ""\$(dirname ""\$(readlink -f ""\$0"")"")"" || exit; [ ""\$EUID"" = ""0"" ] && exit

export JCD=""/home/\$(whoami)/Games/jc141""; [ ! -d ""\$JCD"" ] && mkdir -p ""\$JCD""

# wine
export WINE=""\$(command -v wine)"";
export WINEPREFIX=""\$JCD""; export WINEDLLOVERRIDES=""winemenubuilder.exe=d;mshtml=d;nvapi,nvapi64=n""; export WINE_LARGE_ADDRESS_AWARE=1;
export GAMEDIR=""\$WINEPREFIX/drive_c/Games/$GAME""
export REDIST=""\$WINEPREFIX/drive_c/redist""

echo ""Path of the $GAME wineprefix is: \$\""WINEPREFIX\""""

# external vulkan translation
#export DXVK_ASYNC=1

ping -c 1 github.com >/dev/null || { echo ""Possibly no network. This may mean that booting will fail."" ; }; VLKLOG=""\$WINEPREFIX/vulkan.log""; VULKAN=""\$PWD/vulkan""
VLKVER=""\$(curl -s -m 5 https://api.github.com/repos/jc141x/vulkan/releases/latest | awk -F '[""/]' '/""browser_download_url"":/ {print \$11}' | cut -c 1-)""
status-vulkan() { [[ ! -f ""\$VLKLOG"" || -z ""\$(awk ""/^\${FUNCNAME[1]}\$/ {print \$1}"" ""\$VLKLOG"" 2>/dev/null)"" ]] || { echo ""\${FUNCNAME[1]} present"" && return 1; }; }
vulkan() { DL_URL=""\$(curl -s https://api.github.com/repos/jc141x/vulkan/releases/latest | awk -F '[""]' '/""browser_download_url"":/ {print \$4}')""; VLK=""\$(basename ""\$DL_URL"")""
[ ! -f ""\$VLK"" ] && command -v curl >/dev/null 2>&1 && curl -LO ""\$DL_URL"" && tar -xvf ""vulkan.tar.xz"" || { rm ""\$VLK"" && echo ""ERROR: Failed to extract vulkan translation."" && return 1; }
rm -rf ""vulkan.tar.xz"" && bash ""\$PWD/vulkan/setup-vulkan.sh"" && rm -Rf ""\$VULKAN""; }
vulkan-dl() { echo ""Using external vulkan translation (dxvk,vkd3d,dxvk-nvapi)."" && vulkan && echo ""\$VLKVER"" >""\$VLKLOG""; }
[[ ! -f ""\$VLKLOG"" && -z ""\$(status-vulkan)"" ]] && vulkan-dl;
[[ -f ""\$VLKLOG"" && -n ""\$VLKVER"" && ""\$VLKVER"" != ""\$(awk '{print \$1}' ""\$VLKLOG"")"" ]] && { rm -f vulkan.tar.xz || true; } && vulkan-dl; export DXVK_ENABLE_NVAPI=1

echo """"
echo ""Working Directory=\$GAMEDIR""
echo """"
sleep 5

# start
[ ""\${DBG:=0}"" = ""1"" ] || { export WINEDEBUG='-all' && echo ""Output muted by default to avoid performance impact. Can unmute with DBG=1."" && exec &>/dev/null; }
cd ""\$GAMEDIR""; ""\$WINE"" ""setup.exe"" ""\$@""
EOL

chmod a+x ""$GSS""
echo """"
echo ""\""${GAME}.sh\"" written and made executable.""
echo """"

echo """"
echo ""Path of the $1 wineprefix is: $WINEPREFIX"";
echo """"
echo ""Be sure to change the name of the game executable in \""$GSS\"" from \""setup.exe\"".""
echo """"
echo ""Starting Vulkan setup.""
echo """"

# external vulkan translation
#export DXVK_ASYNC=1

ping -c 1 github.com >/dev/null || { echo ""Possibly no network. This may mean that booting will fail."" ; }; VLKLOG=""$WINEPREFIX/vulkan.log""; VULKAN=""$PWD/vulkan""
VLKVER=""$(curl -s -m 5 https://api.github.com/repos/jc141x/vulkan/releases/latest | awk -F '[""/]' '/""browser_download_url"":/ {print $11}' | cut -c 1-)""
status-vulkan() { [[ ! -f ""$VLKLOG"" || -z ""$(awk ""/^${FUNCNAME[1]}\$/ {print \$1}"" ""$VLKLOG"" 2>/dev/null)"" ]] || { echo ""${FUNCNAME[1]} present"" && return 1; }; }
vulkan() { DL_URL=""$(curl -s https://api.github.com/repos/jc141x/vulkan/releases/latest | awk -F '[""]' '/""browser_download_url"":/ {print $4}')""; VLK=""$(basename ""$DL_URL"")""
[ ! -f ""$VLK"" ] && command -v curl >/dev/null 2>&1 && curl -LO ""$DL_URL"" && tar -xvf ""vulkan.tar.xz"" || { rm ""$VLK"" && echo ""ERROR: Failed to extract vulkan translation."" && return 1; }
rm -rf ""vulkan.tar.xz"" && bash ""$PWD/vulkan/setup-vulkan.sh"" && rm -Rf ""$VULKAN""; }
vulkan-dl() { echo ""Using external vulkan translation (dxvk,vkd3d,dxvk-nvapi)."" && vulkan && echo ""$VLKVER"" >""$VLKLOG""; }
[[ ! -f ""$VLKLOG"" && -z ""$(status-vulkan)"" ]] && vulkan-dl;
[[ -f ""$VLKLOG"" && -n ""$VLKVER"" && ""$VLKVER"" != ""$(awk '{print $1}' ""$VLKLOG"")"" ]] && { rm -f vulkan.tar.xz || true; } && vulkan-dl; export DXVK_ENABLE_NVAPI=1

# start installer
[ ""${DBG:=0}"" = ""1"" ] || { export WINEDEBUG='-all' && echo ""Output muted by default to avoid performance impact. Can unmute with DBG=1."" && exec &>/dev/null; }
mkdir ""$REDIST""
cp ""$RSRC/*.*"" ""$REDIST""
cd ""$REDIST""
for i in *.exe; do
    ""$WINE"" ""$i""
done
cd ""$PWD/$GAME""; ""$WINE"" ""setup.exe"" ""$@""
"
gfxhYSPW,The Minted List - Fog of War Edition Playset 1.1,MellyKusjes,JSON,Tuesday 6th of February 2024 03:31:17 PM CDT,"{""game"":""ck3"",""name"":""The Minted List - Fog of War Edition"",""mods"":[{""displayName"":""Unofficial Patch"",""enabled"":true,""position"":0,""steamId"":""2871648329""},{""displayName"":""Extended Outliner"",""enabled"":true,""position"":1,""steamId"":""2219611817""},{""displayName"":""Foundational Framework"",""enabled"":true,""position"":2,""steamId"":""2975079361""},{""displayName"":""Gamerule Gadget"",""enabled"":true,""position"":3,""steamId"":""2826829936""},{""displayName"":""Extended Family Actions"",""enabled"":true,""position"":4,""steamId"":""2430932902""},{""displayName"":""Knight Manager Continued"",""enabled"":true,""position"":5,""steamId"":""2974850904""},{""displayName"":""Cultural And Religional Battle Music"",""enabled"":true,""position"":6,""steamId"":""3097729014""},{""displayName"":""Loading Screens +"",""enabled"":true,""position"":7,""steamId"":""3065042937""},{""displayName"":""Historical Quotes"",""enabled"":true,""position"":8,""steamId"":""2893554112""},{""displayName"":""Lulu's Events (1.11)"",""enabled"":true,""position"":9,""steamId"":""3085141091""},{""displayName"":""Regional Travel Events"",""enabled"":true,""position"":10,""steamId"":""3000657129""},{""displayName"":""Regional Travel Events - Byzantium"",""enabled"":true,""position"":11,""steamId"":""3144275526""},{""displayName"":""REvents"",""enabled"":true,""position"":12,""steamId"":""2976674003""},{""displayName"":""VIET Events - A Flavor and Immersion Event Mod"",""enabled"":true,""position"":13,""steamId"":""2227658180""},{""displayName"":""Regional Immersion and Cultural Enrichment (RICE)"",""enabled"":true,""position"":14,""steamId"":""2273832430""},{""displayName"":""[FSF] Browse the Bookstore"",""enabled"":true,""position"":15,""steamId"":""2751980550""},{""displayName"":""Medieval Arts"",""enabled"":true,""position"":16,""steamId"":""2452585382""},{""displayName"":""Medieval Arts - More Special Buildings"",""enabled"":true,""position"":17,""steamId"":""2692079378""},{""displayName"":""No more special building religious requirements"",""enabled"":true,""position"":18,""steamId"":""2432516187""},{""displayName"":""No more sbr req fix"",""enabled"":true,""position"":19,""steamId"":""3020808086""},{""displayName"":""More Cultural Names"",""enabled"":true,""position"":20,""steamId"":""2217534250""},{""displayName"":""[KET] Advanced Trait Icons"",""enabled"":true,""position"":21,""steamId"":""2790176208""},{""displayName"":""[KET] Population Variations"",""enabled"":true,""position"":22,""steamId"":""2894033194""},{""displayName"":""Community Flavor Pack"",""enabled"":true,""position"":23,""steamId"":""2220098919""},{""displayName"":""Ethnicities & Portraits Expanded"",""enabled"":true,""position"":24,""steamId"":""2507209632""},{""displayName"":""CFP + EPE Compatibility Patch"",""enabled"":true,""position"":25,""steamId"":""2996881191""},{""displayName"":""RICE + EPE Compatibility Patch"",""enabled"":true,""position"":26,""steamId"":""2553043828""},{""displayName"":""Social Relations Expanded (SRE)"",""enabled"":true,""position"":27,""steamId"":""2825977309""},{""displayName"":""Inheritable Relations"",""enabled"":true,""position"":28,""steamId"":""2829009590""},{""displayName"":""Rescue & Vengeance"",""enabled"":true,""position"":29,""steamId"":""3089046758""},{""displayName"":""Dynamic Regency"",""enabled"":true,""position"":30,""steamId"":""3096490417""},{""displayName"":""Social Relations Expanded Lite"",""enabled"":true,""position"":31,""steamId"":""2825975085""},{""displayName"":""Interaction Icon Project Lite"",""enabled"":true,""position"":32,""steamId"":""2378432770""},{""displayName"":""IR Terrain"",""enabled"":true,""position"":33,""steamId"":""2438882835""},{""displayName"":""Better Map Graphics"",""enabled"":true,""position"":34,""steamId"":""3051778961""},{""displayName"":""Improved Cursors"",""enabled"":true,""position"":35,""steamId"":""2788773553""},{""displayName"":""More Background Illustrations"",""enabled"":true,""position"":36,""steamId"":""2986496756""},{""displayName"":""Meditation Removes Negative Coping Mechanisms"",""enabled"":true,""position"":37,""steamId"":""3148978566""},{""displayName"":""Cat's Coat of Arm Family & Title 1.11"",""enabled"":true,""position"":38,""steamId"":""2356992605""},{""displayName"":""Cat's Coat of Arms Emblem 1.11"",""enabled"":true,""position"":39,""steamId"":""2748438194""},{""displayName"":""Unit Packs Expanded"",""enabled"":true,""position"":40,""steamId"":""2818979385""},{""displayName"":""Better Battles Updated"",""enabled"":true,""position"":41,""steamId"":""3101905160""},{""displayName"":""Big Battle View"",""enabled"":true,""position"":42,""steamId"":""3030427202""},{""displayName"":""Historic Invasions"",""enabled"":true,""position"":43,""steamId"":""2837398670""},{""displayName"":""Historic Invasions Greater Events"",""enabled"":true,""position"":44,""steamId"":""3153959703""},{""displayName"":""Multilingual Education"",""enabled"":true,""position"":45,""steamId"":""2756456587""},{""displayName"":""Call for Trial - Unlanded & Tribal"",""enabled"":true,""position"":46,""steamId"":""3113930804""},{""displayName"":""Higher Mortality Mod"",""enabled"":true,""position"":47,""steamId"":""2428173603""},{""displayName"":""Travelers"",""enabled"":true,""position"":48,""steamId"":""3082182371""},{""displayName"":""Prisoners of War"",""enabled"":false,""position"":49,""steamId"":""2511247871""},{""displayName"":""Prisoners of War Fixes/Tweaks for 1.11"",""enabled"":false,""position"":50,""steamId"":""3098184700""},{""displayName"":""Artifacts Variations"",""enabled"":true,""position"":51,""steamId"":""3047311833""},{""displayName"":""Unique Artifacts +"",""enabled"":true,""position"":52,""steamId"":""3043581652""},{""displayName"":""Councillor's experience trait"",""enabled"":true,""position"":53,""steamId"":""2721974781""},{""displayName"":""Glory of Ancestors (updated)"",""enabled"":true,""position"":54,""steamId"":""2981379536""},{""displayName"":""Lifestyle Completion Reward (Updated)"",""enabled"":true,""position"":55,""steamId"":""2940687974""},{""displayName"":""More Congenital Traits - Compatibility Version"",""enabled"":true,""position"":56,""steamId"":""2956974755""},{""displayName"":""[submod] More Congenital Traits - More Dynamic Traits"",""enabled"":true,""position"":57,""steamId"":""3007271571""},{""displayName"":""More Congenital Traits - CV - Positive Giant SA"",""enabled"":true,""position"":58,""steamId"":""3042398608""},{""displayName"":""Same Dynasty Renown"",""enabled"":true,""position"":59,""steamId"":""3144454714""},{""displayName"":""More Legacies"",""enabled"":true,""position"":60,""steamId"":""2859278694""},{""displayName"":""House Unity Balanced"",""enabled"":true,""position"":61,""steamId"":""3122203007""},{""displayName"":""A New Sensible Family 3"",""enabled"":true,""position"":62,""steamId"":""3045026915""},{""displayName"":""Culture List View"",""enabled"":true,""position"":63,""steamId"":""3120915379""},{""displayName"":""Chat GPT Flavor Pack  (Complete)"",""enabled"":true,""position"":64,""steamId"":""3122170466""},{""displayName"":""More Legacies Art +"",""enabled"":true,""position"":65,""steamId"":""2977838440""},{""displayName"":""Overextension"",""enabled"":true,""position"":66,""steamId"":""3034367754""},{""displayName"":""Traditions Art +"",""enabled"":true,""position"":67,""steamId"":""2976385354""},{""displayName"":""Traditions Art + Medieval Arts submod"",""enabled"":true,""position"":68,""steamId"":""2992308709""},{""displayName"":""Traditions Art + Rice submod"",""enabled"":true,""position"":69,""steamId"":""2990017583""},{""displayName"":""Useful Court Physicians"",""enabled"":true,""position"":70,""steamId"":""2463831513""},{""displayName"":""Lover's Pox Curable"",""enabled"":true,""position"":71,""steamId"":""2464663984""},{""displayName"":""Better AI Education"",""enabled"":true,""position"":72,""steamId"":""2753934263""},{""displayName"":""Ward Limit Based On Learning"",""enabled"":true,""position"":73,""steamId"":""2906654841""},{""displayName"":""Ward Limit + Better AI Education Compatch"",""enabled"":true,""position"":74,""steamId"":""2906656010""},{""displayName"":""Beautiful Portraits"",""enabled"":true,""position"":75,""steamId"":""2700696193""},{""displayName"":""better camera zoom 更好的镜头缩放"",""enabled"":true,""position"":76,""steamId"":""2243723476""},{""displayName"":""Brighter Text Colors"",""enabled"":true,""position"":77,""steamId"":""2234245906""},{""displayName"":""Better Marriage (AI)"",""enabled"":true,""position"":78,""steamId"":""2749533543""},{""displayName"":""Clear Artifact Levels"",""enabled"":true,""position"":79,""steamId"":""2748508571""},{""displayName"":""Clear Notifications"",""enabled"":true,""position"":80,""steamId"":""2261468688""},{""displayName"":""Configurable News Feed - Updated"",""enabled"":true,""position"":81,""steamId"":""2906140118""},{""displayName"":""Enhanced Dynasty Tree Viewer"",""enabled"":true,""position"":82,""steamId"":""2427934113""},{""displayName"":""Inspirational"",""enabled"":true,""position"":83,""steamId"":""2783743664""},{""displayName"":""Education Automation"",""enabled"":true,""position"":84,""steamId"":""2879799963""},{""displayName"":""Invite Debutantes"",""enabled"":true,""position"":85,""steamId"":""2677152091""},{""displayName"":""Invite Nobles"",""enabled"":true,""position"":86,""steamId"":""2686352443""},{""displayName"":""Nameplates"",""enabled"":true,""position"":87,""steamId"":""2220762808""},{""displayName"":""Patrum Scuta"",""enabled"":true,""position"":88,""steamId"":""2877995588""},{""displayName"":""Population Control (Reduce late-game lag)"",""enabled"":true,""position"":89,""steamId"":""2276469612""},{""displayName"":""Simple border 简洁的边境线"",""enabled"":true,""position"":90,""steamId"":""2749577487""},{""displayName"":""Ultimate Graphics Collection (Reloaded-Lite)"",""enabled"":true,""position"":91,""steamId"":""2974625246""},{""displayName"":""Warriors without Wombs: No More Pregnant Knights!"",""enabled"":true,""position"":92,""steamId"":""2980522731""},{""displayName"":""Dynamic Trade Routes"",""enabled"":true,""position"":93,""steamId"":""2821835496""},{""displayName"":""DTR PoW"",""enabled"":false,""position"":94,""steamId"":""2854343196""},{""displayName"":""DTR KM"",""enabled"":true,""position"":95,""steamId"":""2906054697""},{""displayName"":""DTR Nameplates"",""enabled"":true,""position"":96,""steamId"":""3039020778""},{""displayName"":""Trade Maps DTR"",""enabled"":true,""position"":97,""steamId"":""2821874072""},{""displayName"":""Holding Sprawl DTR"",""enabled"":true,""position"":98,""steamId"":""2824465219""},{""displayName"":""Fog Of War"",""enabled"":true,""position"":99,""steamId"":""3013354800""},{""displayName"":""Dynamic Trade Routes - Fog of War - Overextension Submod"",""enabled"":true,""position"":100,""steamId"":""3116493940""},{""displayName"":""R&V + FoW Compatibility Patch"",""enabled"":true,""position"":101,""steamId"":""3154170747""},{""displayName"":""PoW + FoW Compatibility Patch"",""enabled"":false,""position"":102,""steamId"":""3154170068""}]}"
eCiCmCC4,Untitled,Nenogzar,Python,Tuesday 6th of February 2024 02:59:27 PM CDT,"num_string = input().split()
even_list_str = []

for num in num_string:
    try:
        num_int = int(num)
        if num_int % 2 == 0:
            even_list_str.append(num_int)
    except ValueError:
        pass

print(even_list_str)
"
hdj7RMSb,divisors pairs,bartekltg,C++,Tuesday 6th of February 2024 02:43:13 PM CDT,"void foo (int n){
    vector <int>largest_divisor(n,0);
    vector <int> n_divisor(n,0);//number of divisors
    largest_divisor[1]=1;
    for (int i=2; i<n; i++){ //sieve
        if (largest_divisor[i]==0){
            for (int j=i; j<n; j+=i )
                largest_divisor[j]=i;
        }
    }

    n_divisor[1]=1;
    for (int i=2; i<n; i++){
        int p=largest_divisor[i];
        int pk=1; // p^k in k-th inner iteration
        int div=1; //number of divisors of p^k
        int m=i;
        do{
            pk*=p;
            div+=pk;
            m/=p;
        }while (m%p==0);
        n_divisor[i] = div * n_divisor[m];
    }

    auto f = [&](int x) { return n_divisor[x]-x -1; }; //number of proper divisors-1
    
    //look for solutions
    for (int i=2; i<n; i++){
        if ( f(i)<=i ){
            if  (f(f(i))==i){
                cout << i << "" ""<<f(i) <<endl;
            }
        }
    }

}


/* results < 100'000'000
75 48        
195 140      
1648 1575    
1925 1050    
2295 2024    
6128 5775    
16587 8892   
20735 9504   
75495 62744  
206504 186615
219975 196664
309135 199760
507759 266000
544784 526575
549219 312620
817479 573560
1057595 587460
1159095 1139144
1331967 1081184
1341495 1173704
1348935 1208504
1459143 1236536
1524831 1233056
1763019 1140020
1902215 1000824
2142945 2102750
2226014 1921185
2421704 2140215
2576945 1279950
2681019 2036420
3010215 2312024
3123735 2198504
3220119 2171240
3676491 2958500
4282215 4012184
5644415 2580864
6446325 5088650
7509159 5416280
7890575 4311024
9345903 6081680
10106504 9247095
10925915 7460004
12251679 6618080
12900734 12500865
13693959 8713880
16247745 12146750
16381925 7875450
18845855 8829792
26502315 22559060
26525415 23379224
27862695 27735704
28206815 14371104
31213899 13922100
31356314 23939685
32014575 28219664
37291625 22013334
41950359 26409320
42125144 40818855
43321095 34093304
52389315 49217084
58354119 33299000
69090615 66086504
70112175 64045904
80870615 37324584
84854315 41137620
85141719 52026920
87689415 66275384
87802407 76011992
88567059 61423340
93423519 62252000
96751395 94970204
97389039 52601360
99735705 93993830
*/"
mRDmwt4A,Sebastian,j0h,Arduino,Tuesday 6th of February 2024 02:32:13 PM CDT,"/* License:
 * 
 * Create a ""class compliant "" USB to 6 MIDI IN and 6 MIDI OUT interface,
   plus 10 more USB connected devices.  Admittedly, you could just plug
   those 10 devices directly into your computer, but this example is meant
   to show how to forward any MIDI message between the 3 different MIDI
   libraries.  A ""real"" application might do something more interesting,
   like translate or modify the MIDI messages....

   MIDI receive (6N138 optocoupler) input circuit and series resistor
   outputs need to be connected to Serial1-Serial6.  A USB host cable
   is needed on Teensy 3.6's second USB port, and obviously USB hubs
   are needed to connect up to 10 USB MIDI devices.  That's a *LOT* of
   extra hardware to connect to a Teensy!

   You must select MIDIx16 from the ""Tools > USB Type"" menu

   This example code is in the public domain.
*/
#include <MIDI.h>        // access to serial (5 pin DIN) MIDI
#include <USBHost_t36.h> // access to USB MIDI devices (plugged into 2nd USB port)
#include <Audio.h>
#include <Wire.h>
#include <SPI.h>
#include <SD.h>
#include <SerialFlash.h>
//--------------------
//Function prototypes:
//----------------------
void sendToComputer(byte type, byte data1, byte data2, byte channel, const uint8_t *sysexarray, byte cable);

//---------------------------------------
// Globals:
//______________________


// Create the Serial MIDI ports
MIDI_CREATE_INSTANCE(HardwareSerial, Serial1, MIDI1);
MIDI_CREATE_INSTANCE(HardwareSerial, Serial2, MIDI2);
MIDI_CREATE_INSTANCE(HardwareSerial, Serial3, MIDI3);
MIDI_CREATE_INSTANCE(HardwareSerial, Serial4, MIDI4);
MIDI_CREATE_INSTANCE(HardwareSerial, Serial5, MIDI5);
MIDI_CREATE_INSTANCE(HardwareSerial, Serial6, MIDI6);
//midi::MidiInterface &SerialMidiList[6] = {MIDI1, MIDI2, MIDI3, MIDI4, MIDI5, MIDI6};

// Create the ports for USB devices plugged into Teensy's 2nd USB port (via hubs)
USBHost myusb;
USBHub hub1(myusb);
USBHub hub2(myusb);
USBHub hub3(myusb);
USBHub hub4(myusb);
MIDIDevice midi01(myusb);
MIDIDevice midi02(myusb);
MIDIDevice midi03(myusb);
MIDIDevice midi04(myusb);
MIDIDevice midi05(myusb);
MIDIDevice midi06(myusb);
MIDIDevice midi07(myusb);
MIDIDevice midi08(myusb);
MIDIDevice midi09(myusb);
MIDIDevice midi10(myusb);
MIDIDevice * midilist[10] = {
  &midi01, &midi02, &midi03, &midi04, &midi05, &midi06, &midi07, &midi08, &midi09, &midi10
};

// A variable to know how long the LED has been turned on
elapsedMillis ledOnMillis;

// GUItool: begin automatically generated code
AudioInputI2S            i2s1;           //xy=161.20000839233398,110.20000648498535
AudioInputUSB            usb2;           //xy=164.20001602172852,175.19998455047607
AudioOutputUSB           usb1;           //xy=460.2000045776367,113.20000648498535
AudioOutputI2S           i2s2;           //xy=462.20003509521484,187.19999885559082
AudioConnection          patchCord1(i2s1, 0, usb1, 0);
AudioConnection          patchCord2(i2s1, 1, usb1, 1);
AudioConnection          patchCord3(usb2, 0, i2s2, 1);
AudioConnection          patchCord4(usb2, 1, i2s2, 0);
AudioControlSGTL5000     sgtl5000_1;     //xy=100.19999694824219,31.199996948242188
// GUItool: end automatically generated code



void setup() {
   Serial.begin(115200);
  AudioMemory(80);
  //Audio setup
  sgtl5000_1.enable();
  sgtl5000_1.inputSelect(AUDIO_INPUT_LINEIN);
  sgtl5000_1.lineInLevel(10, 10);
  sgtl5000_1.volume(0.8);
  //Interface setup
  pinMode(13, OUTPUT); // LED pin
  digitalWrite(13, LOW);
  MIDI1.begin(MIDI_CHANNEL_OMNI);
  MIDI2.begin(MIDI_CHANNEL_OMNI);
  MIDI3.begin(MIDI_CHANNEL_OMNI);
  MIDI4.begin(MIDI_CHANNEL_OMNI);
  MIDI5.begin(MIDI_CHANNEL_OMNI);
  MIDI6.begin(MIDI_CHANNEL_OMNI);
  // Wait 1.5 seconds before turning on USB Host.  If connected USB devices
  // use too much power, Teensy at least completes USB enumeration, which
  // makes isolating the power issue easier.
  delay(1500);
  Serial.println(""Interface_16x16 Example"");
  delay(10);
  myusb.begin();

}




void loop() {
  bool activity = false;
   // read the PC's volume setting
  float vol = usb1.volume();

  // scale to a nice range (not too loud)
  // and adjust the audio shield output volume
  if (vol > 0) {
    // scale 0 = 1.0 range to:
    //  0.3 = almost silent
    //  0.8 = really loud
    vol = 0.3 + vol * 0.5;
  }
    
  // use the scaled volume setting.  Delete this for fixed volume.
  sgtl5000_1.volume(vol);
  delay(100);
  
  // First read messages from the 6 Serial MIDI IN ports
  if (MIDI1.read()) {
    sendToComputer(MIDI1.getType(), MIDI1.getData1(), MIDI1.getData2(), MIDI1.getChannel(), MIDI1.getSysExArray(), 0);
    activity = true;
  }
  if (MIDI2.read()) {
    sendToComputer(MIDI2.getType(), MIDI2.getData1(), MIDI2.getData2(), MIDI2.getChannel(), MIDI2.getSysExArray(), 1);
    activity = true;
  }
  if (MIDI3.read()) {
    sendToComputer(MIDI3.getType(), MIDI3.getData1(), MIDI3.getData2(), MIDI3.getChannel(), MIDI3.getSysExArray(), 2);
    activity = true;
  }
  if (MIDI4.read()) {
    sendToComputer(MIDI4.getType(), MIDI4.getData1(), MIDI4.getData2(), MIDI4.getChannel(), MIDI4.getSysExArray(), 3);
    activity = true;
  }
  if (MIDI5.read()) {
    sendToComputer(MIDI5.getType(), MIDI5.getData1(), MIDI5.getData2(), MIDI5.getChannel(), MIDI5.getSysExArray(), 4);
    activity = true;
  }
  if (MIDI6.read()) {
    sendToComputer(MIDI6.getType(), MIDI6.getData1(), MIDI6.getData2(), MIDI6.getChannel(), MIDI6.getSysExArray(), 5);
    activity = true;
  }

  // Next read messages arriving from the (up to) 10 USB devices plugged into the USB Host port
  for (int port=0; port < 10; port++) {
    if (midilist[port]->read()) {
      uint8_t type =       midilist[port]->getType();
      uint8_t data1 =      midilist[port]->getData1();
      uint8_t data2 =      midilist[port]->getData2();
      uint8_t channel =    midilist[port]->getChannel();
      const uint8_t *sys = midilist[port]->getSysExArray();
      sendToComputer(type, data1, data2, channel, sys, 6 + port);
      activity = true;
    }
  }

  // Finally, read any messages the PC sends to Teensy, and forward them
  // to either Serial MIDI or to USB devices on the USB host port.
  if (usbMIDI.read()) {
    // get the USB MIDI message, defined by these 5 numbers (except SysEX)
    byte type = usbMIDI.getType();
    byte channel = usbMIDI.getChannel();
    byte data1 = usbMIDI.getData1();
    byte data2 = usbMIDI.getData2();
    byte cable = usbMIDI.getCable();

    // forward this message to 1 of the 3 Serial MIDI OUT ports
    if (type != usbMIDI.SystemExclusive) {
      // Normal messages, first we must convert usbMIDI's type (an ordinary
      // byte) to the MIDI library's special MidiType.
      midi::MidiType mtype = (midi::MidiType)type;

      // Then simply give the data to the MIDI library send()
      switch (cable) {
        case  0: MIDI1.send(mtype, data1, data2, channel); break;
        case  1: MIDI2.send(mtype, data1, data2, channel); break;
        case  2: MIDI3.send(mtype, data1, data2, channel); break;
        case  3: MIDI4.send(mtype, data1, data2, channel); break;
        case  4: MIDI5.send(mtype, data1, data2, channel); break;
        case  5: MIDI6.send(mtype, data1, data2, channel); break;
        default: // cases 6-15
          midilist[cable - 6]->send(type, data1, data2, channel);
      }

    } else {
      // SysEx messages are special.  The message length is given in data1 & data2
      unsigned int SysExLength = data1 + data2 * 256;
      switch (cable) {
        case 0: MIDI1.sendSysEx(SysExLength, usbMIDI.getSysExArray(), true); break;
        case 1: MIDI2.sendSysEx(SysExLength, usbMIDI.getSysExArray(), true); break;
        case 2: MIDI3.sendSysEx(SysExLength, usbMIDI.getSysExArray(), true); break;
        case 3: MIDI4.sendSysEx(SysExLength, usbMIDI.getSysExArray(), true); break;
        case 4: MIDI5.sendSysEx(SysExLength, usbMIDI.getSysExArray(), true); break;
        case 5: MIDI6.sendSysEx(SysExLength, usbMIDI.getSysExArray(), true); break;
        default: // cases 6-15
          midilist[cable - 6]->sendSysEx(SysExLength, usbMIDI.getSysExArray(), true);
      }
    }
    activity = true;
  }

  // blink the LED when any activity has happened
  if (activity) {
    digitalWriteFast(13, HIGH); // LED on
    ledOnMillis = 0;
  }
  if (ledOnMillis > 15) {
    digitalWriteFast(13, LOW);  // LED off
  }

}


void sendToComputer(byte type, byte data1, byte data2, byte channel, const uint8_t *sysexarray, byte cable){
  if (type != midi::SystemExclusive) {
    usbMIDI.send(type, data1, data2, channel, cable);
  } else {
    unsigned int SysExLength = data1 + data2 * 256;
    usbMIDI.sendSysEx(SysExLength, sysexarray, true, cable);
  }
}








"
QkdApWYy,Untitled,Nenogzar,Python,Tuesday 6th of February 2024 02:26:40 PM CDT,"[palindromes.append(string) for string in input_text if string == """".join(reversed(string))]

# или 

palindromes = [string for string in input_text if string == string[::-1]]

# което е еквивалентно на: 

for string in input_text:
    if string == string[::-1]:

        palindromes.append(string)"
k5EU1jGP,"Can ESP32 read data from Home Assistant? Reading ""Inverter Active Power"" from Home Assistant.",LeventeDaradici,C++,Tuesday 6th of February 2024 02:18:32 PM CDT,"//
// Can ESP32 read data from Home Assistant? Reading ""Inverter Active Power"" from Home Assistant connected to Huawei SUN2000-5KTL-L1 inverter
//
//  https://youtu.be/p7ZOHrjYuNU
//

#include <ArduinoJson.h>
#include <WiFi.h>
#include <HTTPClient.h>

const char* ssid = ""YOUR WIFI SSID"";
const char* password = ""YOUR WIFI PASSWORD"";

const char* haApiUrl = ""http://XXX.XXX.XXX.XXX:8123/api/states/XXXXXXXXX_SENSOR_NAME_XXXXXXX"";
// EXAMPLE
// const char* haApiUrl = ""http://192.168.0.103:8123/api/states/sensor.inverter_active_power"";

const char* haApiToken = ""XXXXX HOME ASSISTANT TOKEN XXXXXXXXXXXXXXXXXXXXX"";

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println(""Conectare la reteaua WIFI..."");
  }

  Serial.println(""Conectat la Wifi!"");
}

void loop() {
  HTTPClient http;
  http.begin(haApiUrl);
  http.addHeader(""Authorization"", ""Bearer "" + String(haApiToken));

  int httpCode = http.GET();

  if (httpCode > 0) {
    String payload = http.getString();

    DynamicJsonDocument doc(1024);
    deserializeJson(doc, payload);

    float currentProduction = doc[""state""].as<float>();

    Serial.print(""Productia curenta: "");
    Serial.println(currentProduction);
  } else {
    Serial.println(""Eroare la solicitarea HTTP"");
  }

  http.end();

  delay(5000); 
}"
AhvjX7da,2 Sum,saltyegg,Java,Tuesday 6th of February 2024 01:43:25 PM CDT,"class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();

        for(int i = 0; i < nums.length; i++){
            int n = nums[i];
            int t = target -n;
            if(map.containsKey(t)) return new int[]{map.get(t), i};

            map.put(n, i);
        }

        return new int[0];
    }
}"
