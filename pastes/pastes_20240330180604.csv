id,title,username,language,date,content
K3rbF96X,Unit_09,lovelyvook,C#,Saturday 30th of March 2024 12:54:06 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int minNumber = 5;
            int maxNumber = 103;
            int incincreaseNumber = 7;

            for (int i = minNumber; i <= maxNumber; i += incincreaseNumber)
            {
                Console.WriteLine(i);
            }
        }
    }
}"
rUF8gS35,OnlineStore v2,RedFlys,C#,Saturday 30th of March 2024 12:51:21 PM CDT,"Good iPhone12 = new Good(""IPhone 12"");
Good iPhone11 = new Good(""IPhone 11"");

Warehouse warehouse = new Warehouse();

Shop shop = new Shop(warehouse);

warehouse.Delive(iPhone12, 10);
warehouse.Delive(iPhone11, 1);

//–í—ã–≤–æ–¥ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ —Å –∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–º

Cart cart = shop.Cart();
cart.Add(iPhone12, 4);
cart.Add(iPhone11, 3); //–ø—Ä–∏ —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞ —Ç–∞–∫, –∫–∞–∫ –Ω–µ—Ç –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ

//–í—ã–≤–æ–¥ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ

Console.WriteLine(cart.Order().Paylink);

cart.Add(iPhone12, 9); //–û—à–∏–±–∫–∞, –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞ —Å–æ —Å–∫–ª–∞–¥–∞ —É–±–∏—Ä–∞—é—Ç—Å—è –∑–∞–∫–∞–∑–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã


public class Warehouse : IDeliveryWarehouse
{
    private readonly Dictionary<Good, int> _goods;

    public Warehouse()
    {
        GoodEqualityCompare goodEqualityCompare = new();
        _goods = new(goodEqualityCompare);
    }

    public void Delive(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.ContainsKey(good))
            _goods[good] += countGoods;
        else
            _goods.Add(good, countGoods);
    }

    public bool CanIssue(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.TryGetValue(good, out int count))
            return count >= countGoods;
        else
            return false;
    }

    public void TransferForDelivery(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.ContainsKey(good) && _goods[good] >= countGoods)
            _goods[good] -= countGoods;
        else
            throw new ArgumentOutOfRangeException();
    }
}

public class Shop
{
    private readonly Warehouse _warehouse;

    public Shop(Warehouse warehouse) => _warehouse = warehouse ?? throw new ArgumentNullException();
    
    public Cart Cart()
    {
        return new Cart(_warehouse);
    }
}

public class Cart
{
    private readonly Dictionary<Good, int> _goods;
    private readonly IDeliveryWarehouse _warehouse;

    public Cart(IDeliveryWarehouse warehouse) 
    {
        _warehouse = warehouse ?? throw new ArgumentNullException();

        GoodEqualityCompare goodEqualityCompare = new();
        _goods = new(goodEqualityCompare);
    }

    public void Add(Good good, int countGoods)
    {
        good = good ?? throw new ArgumentNullException();

        if (countGoods < 0)
            throw new ArgumentOutOfRangeException();

        if (_goods.ContainsKey(good))
            _goods[good] += countGoods;
        else
            _goods.Add(good, countGoods);
    }

    public PayOrder Order()
    {
        foreach(var goods in _goods)
        {
            _warehouse.TransferForDelivery(goods.Key, goods.Value);
        }

        _goods.Clear();
        return new PayOrder();
    }
}

public class Good
{
    public Good(string name)
    {
        if (string.IsNullOrEmpty(name))
            throw new ArgumentNullException();

        Name = name;
    }

    public string Name { get; }
}

public class PayOrder
{
    public PayOrder() { }

    public string Paylink { get; }
}

public interface IDeliveryWarehouse
{
    public bool CanIssue(Good good, int countGoods);

    public void TransferForDelivery(Good good, int countGoods);
}

public class GoodEqualityCompare : IEqualityComparer<Good>
{
    public bool Equals(Good? good1, Good? good2)
    {
        if (ReferenceEquals(good1, good2)) 
            return true;

        if (good1 == null || good2 == null)
            return false;

        return good1.Name == good2.Name;
    }

    public int GetHashCode(Good good) => good.Name.GetHashCode();
}"
vXFkKzBv,üí≤ G2A.com Free Gift Card Guide Mar 2024 üí≤,ssss50w,GetText,Saturday 30th of March 2024 12:36:42 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
30 March 2024"
P0XHFypd,Unit_08,lovelyvook,C#,Saturday 30th of March 2024 12:35:12 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string exit = ""exit"";
            string userInput = """";

            Console.WriteLine($""–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–≤–µ–¥–∏—Ç–µ {exit}"");

            while (userInput != exit)
            {
                Console.Write(""–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "");
                userInput = Console.ReadLine();
            }
        }
    }
}"
sSs1QQmQ,psimedia patch,KukuRuzo,C++,Saturday 30th of March 2024 12:32:29 PM CDT,"

diff --git a/plugins/generic/psimedia/CMakeLists.txt b/plugins/generic/psimedia/CMakeLists.txt
index bc184283..6a789224 100644
--- a/plugins/generic/psimedia/CMakeLists.txt
+++ b/plugins/generic/psimedia/CMakeLists.txt
@@ -17,23 +17,29 @@ if( (CMAKE_CROSSCOMPILING) AND (DEFINED MSYS) )
     message(STATUS ""MXE root path: ${CMAKE_PREFIX_PATH}"")
 endif()
 
+if(POLICY CMP0053)
+    cmake_policy(SET CMP0053 NEW)
+endif()
+
 # On Windows debug library should have 'd' postfix.
 if(WIN32)
+    unset(GST_SDK)
     set(CMAKE_DEBUG_POSTFIX ""d"")
     if(NOT USE_MXE)
         if(CMAKE_SIZEOF_VOID_P MATCHES ""8"")
             if(MSVC)
-                set(GST_SDK $ENV{GSTREAMER_1_0_ROOT_MSVC_X86_64} CACHE STRING ""Path to gstreamer SDK"")
+                set(GST_SDK_PATH $ENV{GSTREAMER_1_0_ROOT_MSVC_X86_64} CACHE STRING ""Path to gstreamer SDK"")
             else()
-                set(GST_SDK $ENV{GSTREAMER_1_0_ROOT_X86_64}  CACHE STRING ""Path to gstreamer SDK"")
+                set(GST_SDK_PATH $ENV{GSTREAMER_1_0_ROOT_X86_64}  CACHE STRING ""Path to gstreamer SDK"")
             endif()
         else()
             if(MSVC)
-                set(GST_SDK $ENV{GSTREAMER_1_0_ROOT_MSVC_X86} CACHE STRING ""Path to gstreamer SDK"")
+                set(GST_SDK_PATH $ENV{GSTREAMER_1_0_ROOT_MSVC_X86} CACHE STRING ""Path to gstreamer SDK"")
             else()
-                set(GST_SDK $ENV{GSTREAMER_1_0_ROOT_x86}  CACHE STRING ""Path to gstreamer SDK"")
+                set(GST_SDK_PATH $ENV{GSTREAMER_1_0_ROOT_x86}  CACHE STRING ""Path to gstreamer SDK"")
             endif()
         endif()
+        string(REPLACE ""\\"" ""/"" GST_SDK ${GST_SDK_PATH})
         message(STATUS ""GST_SDK: ${GST_SDK}"")
         if(GST_SDK)
             set(ENV{PKG_CONFIG_PATH} ""${GST_SDK}/lib/pkgconfig"")
@@ -125,8 +131,8 @@ endif()
 if(BUILD_DEMO)
     add_subdirectory(demo)
     add_subdirectory(gstplugin)
-    add_subdirectory(gstprovider)
 endif()
 if(BUILD_PSIPLUGIN)
     add_subdirectory(psiplugin)
 endif()
+add_subdirectory(gstprovider)
diff --git a/plugins/generic/psimedia/gstplugin/CMakeLists.txt b/plugins/generic/psimedia/gstplugin/CMakeLists.txt
index e4414634..79e8fa33 100644
--- a/plugins/generic/psimedia/gstplugin/CMakeLists.txt
+++ b/plugins/generic/psimedia/gstplugin/CMakeLists.txt
@@ -21,6 +21,8 @@ include_directories(
     ${CMAKE_CURRENT_BINARY_DIR}
     ${CMAKE_CURRENT_LIST_DIR}
     ${ABS_GPLUG_PARENT_DIR}/psimedia
+    ${ABS_GPLUG_PARENT_DIR}/gstprovider
+    ${ABS_GPLUG_PARENT_DIR}/gstprovider/devices
 )
 
 set(SOURCES
@@ -42,5 +44,7 @@ target_link_libraries(
     ${PLUGIN}
     ${QT_DEPLIBS}
 )
+add_dependencies(${PLUGIN} gstprovidersrc)
 target_link_libraries(${PLUGIN} gstprovidersrc)
 install(TARGETS ${PLUGIN} LIBRARY DESTINATION ${LIB_INSTALL_DIR})
+
diff --git a/plugins/generic/psimedia/gstprovider/CMakeLists.txt b/plugins/generic/psimedia/gstprovider/CMakeLists.txt
index 585730fd..0590f48f 100644
--- a/plugins/generic/psimedia/gstprovider/CMakeLists.txt
+++ b/plugins/generic/psimedia/gstprovider/CMakeLists.txt
@@ -128,6 +128,10 @@ endif()
 set(PROVIDERLIB gstprovidersrc)
 add_library(${PROVIDERLIB} STATIC ${SOURCES})
 
+if(UNIX AND ${QT_DEFAULT_MAJOR_VERSION} GREATER_EQUAL 6)
+    add_definitions(-fPIC)
+endif()
+
 target_include_directories(${PROVIDERLIB}
                            PUBLIC
                            ${CMAKE_CURRENT_SOURCE_DIR}
diff --git a/plugins/generic/psimedia/gstprovider/devices.cpp b/plugins/generic/psimedia/gstprovider/devices.cpp
index c404fca8..ce110b19 100644
--- a/plugins/generic/psimedia/gstprovider/devices.cpp
+++ b/plugins/generic/psimedia/gstprovider/devices.cpp
@@ -188,7 +188,11 @@ public:
         }
 
         gchar *name = gst_device_get_display_name(gdev);
+#ifdef Q_OS_WINDOWS
+        d.name      = QString::fromLocal8Bit(name);
+#else
         d.name      = QString::fromUtf8(name);
+#endif
         g_free(name);
 
         if (gst_device_has_classes(gdev, ""Audio/Source"")) {
diff --git a/plugins/generic/psimedia/gstprovider/gstthread.cpp b/plugins/generic/psimedia/gstprovider/gstthread.cpp
index 61664738..bc15cc1c 100644
--- a/plugins/generic/psimedia/gstprovider/gstthread.cpp
+++ b/plugins/generic/psimedia/gstprovider/gstthread.cpp
@@ -242,10 +242,10 @@ public:
 
 class GstMainLoop::Private {
 public:
-    typedef struct {
+    struct BridgeQueueSource{
         GSource               parent;
         GstMainLoop::Private *d = nullptr;
-    } BridgeQueueSource;
+    };
 
     GstMainLoop                                        *q = nullptr;
     QString                                             pluginPath;
diff --git a/plugins/generic/psimedia/psiplugin/CMakeLists.txt b/plugins/generic/psimedia/psiplugin/CMakeLists.txt
index 5ea0f8bd..549a3868 100644
--- a/plugins/generic/psimedia/psiplugin/CMakeLists.txt
+++ b/plugins/generic/psimedia/psiplugin/CMakeLists.txt
@@ -19,7 +19,6 @@ get_filename_component(ABS_PLUGINS_ROOT_DIR ""${CMAKE_CURRENT_LIST_DIR}/.."" ABSOL
 set(PLUGINS_ROOT_DIR ""${ABS_PLUGINS_ROOT_DIR}"" CACHE STRING ""Plugins root path. Path where include directory placed"")
 
 if(NOT BUILD_DEMO)
-    include(${ABS_PLUGINS_ROOT_DIR}/gstprovider/CMakeLists.txt)
     include_directories(
         ${ABS_PLUGINS_ROOT_DIR}/gstprovider
         ${ABS_PLUGINS_ROOT_DIR}/gstprovider/devices
"
NLjjYcYZ,hwid-check-new,nyaouuvictoria,GetText,Saturday 30th of March 2024 12:28:07 PM CDT,https://304d-2001-fb1-11c-2f4d-8985-34cb-1394-aba8.ngrok-free.app
7g0XKTr2,Unit_07,lovelyvook,C#,Saturday 30th of March 2024 12:27:25 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string userInput;
            int number;

            Console.Write(""–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É: "");
            userInput = Console.ReadLine();

            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π: "");
            number = Convert.ToInt32(Console.ReadLine());

            for (int i = 0; i < number; i++)
            {
                Console.WriteLine(userInput);
            }
        }
    }
}"
T264wKEB,Untitled,pavels_k,Java,Saturday 30th of March 2024 12:25:37 PM CDT,"// ============================Practicum=======================
import java.util.ArrayList;

public class Practicum {

    public static void main(String[] args) {
        ArrayList<MountainHare> hares = new ArrayList<>();
        hares.add(new MountainHare(4, 4.4, 120));
        hares.add(new MountainHare(7, 3.6, 150));
        hares.add(new MountainHare(1, 2.3, 100));

        System.out.println(""–í –ª–µ—Å—É –ª–µ—Ç–æ!"");
        // —Å–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç ""–ª–µ—Ç–Ω–∏–π –ª–µ—Å —Å –∑–∞–π—Ü–∞–º–∏""

        Forest forest = new Forest(hares);

        forest.setSeason(""–ª–µ—Ç–æ"");

        System.out.println(""–°–ø–∏—Å–æ–∫ –∑–∞–π—Ü–µ–≤:"");
        // –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–π—Ü–µ–≤
        forest.printHares();


        System.out.println(""–í –ª–µ—Å—É –∑–∏–º–∞!"");
        // –ø–æ–º–µ–Ω—è–π—Ç–µ –≤—Ä–µ–º—è –≥–æ–¥–∞ –Ω–∞ –∑–∏–º—É
        forest.setSeason(""–∑–∏–º–∞"");



        System.out.println(""–°–ø–∏—Å–æ–∫ –∑–∞–π—Ü–µ–≤:"");
        // –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–π—Ü–µ–≤
        forest.printHares();
    }

}




// ========================MountainHare========================
public class MountainHare {

    // –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    static String color;
    int age;
    double weight;
    int jumpLength;



    public MountainHare(int age, double weight, int jumpLength) {
        this.age = age;
        this.weight = weight;
        this.jumpLength = jumpLength;
    }


    @Override
    public String toString() {
        return ""–ó–∞—è—Ü-–±–µ–ª—è–∫: "" +
                ""age="" + age +
                "", weight="" + weight +
                "", jumpLength="" + jumpLength +
                "", color="" + color +
                '.';
    }
}





//==============================Forest============================
import java.util.ArrayList;
import java.util.Objects;

public class Forest {
    private static ArrayList<MountainHare> hares;

    public Forest(ArrayList<MountainHare> hares) {
        Forest.hares = hares;
    }

    static String color;
    static String season;

    // –æ–±—ä—è–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä


    // –¥–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ setSeason(String newSeason)
    // –≤ —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ª–æ–≥–∏–∫—É —Å–º–µ–Ω—ã —Ü–≤–µ—Ç–∞ —à—É–±–æ–∫ –∑–∞–π—Ü–µ–≤-–±–µ–ª—è–∫–æ–≤
    static void setSeason(String newSeason) {
        season = newSeason;

        if (Objects.equals(newSeason, ""–∑–∏–º–∞"")) {
            color = ""–±–µ–ª—ã–π"";
        } else {
            color = ""—Å–µ—Ä–æ-—Ä—ã–∂–∏–π"";
        }
    }

    // –¥–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ printHares()
    static void printHares() {
        for (MountainHare hare : hares) {
            System.out.println(hare);
        }
    }

}"
vzNe9csP,Untitled,MisterQuirk,Python,Saturday 30th of March 2024 12:21:29 PM CDT,"import _functools

# #Task 1

# D = {'–ñ–µ–Ω—è': 89, '–í–∞—Å—è': 100, '–ú–∞—Ä–∫': 71, '–ú–∞—Ä–∏—è': 79}
# f = list(filter(lambda x: D[x] > 80, D))
# print(f)

#Task 2

# print(list(map(lambda x:  x ** 3, [2, 4, 8, 10])))

#Task 3

# a = [-1, 4, -7, -8, -10, 1, 0]
# print(list((filter(lambda s: s < 0 in a,a))))

#Task 4

# from _functools import reduce
# 
# a = int(input())
# l = []
# for i in range(1, a + 1):
#     l += [i]
# result = reduce(lambda x, y: x * y, l)
# print(result)

#Task 5

# a = list(map(int, input().split()))
# kv = list(map(lambda x: x**2, a))
# filter_kv = list(filter(lambda s: s % 9 == 0 in kv, kv))
# print(max(filter_kv))
"
6eZKp5X1,Mad,Unknown_No_1,PHP,Saturday 30th of March 2024 12:19:30 PM CDT,NewSeasonComingSoon
DfPVSm1f,"char, string",LEGEND2004,C++,Saturday 30th of March 2024 11:39:22 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)

signed main()
{
    fastio;
/*
    int
    double
    bool ok = true; // 1 0
    */
    // Menim
    // M
    // e
    // n
    // i
    // m
    // nasa2011
    /*
    cout << ""Hello\nCelal\n"" << ""\n"";

    char c = 'A';
    cout << c << '\n'; // A
    string s = ""Hello\nYusif"";
    cout << s << '\n';
    */
    /*
    string s;
    cin >> s;
    bool ok = true;
    for(int i = 0; i < s.size(); i++){
        if(s[i] >= '0' && s[i] <= '9')
            continue;
        ok = false;
    }
    if(ok)
        cout << ""Yes"";
    else
        cout << ""No"";
    */
    /*
    string a , b;
    cin >> a >> b;
    a += b;
    cout << a;*/
    /*
    string s = ""c9aAbB0 "";
    sort(s.begin() , s.end());
    cout << s; //  09ABabc
    */
    /*
    char c = 'C';
    cout << c - 'A';
    */
}
"
WYXJxn0d,Biar semua berlalu,gadungw71,PHP,Saturday 30th of March 2024 11:39:05 AM CDT,"‚Ä¢	https://github.com/Xem-phim-Qu-C-u-2024-Vietsub-Phimmoi
‚Ä¢	https://github.com/phim-MAI-2024-Vietsub-FULL-HD-quality
‚Ä¢	https://github.com/phim-Exhuma-Qu-t-M-Trung-Ma-Vietsub
‚Ä¢	https://github.com/phim-Godzilla-x-Kong-2-2024-HD-Vietsub
‚Ä¢	https://github.com/Exhuma-2024-Full-HD-Thaisub
‚Ä¢	https://github.com/Exhuma-2024-ULTRHD
‚Ä¢	https://github.com/Xem-phim-Qu-C-u-2024B-phim-d-y-d-Online
‚Ä¢	https://github.com/Xem-phim-MAI-2024-FULL-HD-Online
‚Ä¢	https://github.com/Xem-phim-Exhuma-2024-B-phim-d-y-d-Viet
‚Ä¢	https://ngacgm5588.expandcart.com/index.php?route=product/product&product_id=373
‚Ä¢	https://www.enablesurvey.com/r/jxzwqD1
‚Ä¢	https://itlaye6178.expandcart.com/index.php?route=product/product&product_id=373
‚Ä¢	https://www.enablesurvey.com/r/HAOfa_y
‚Ä¢	https://www.enablesurvey.com/r/_U3Agon
‚Ä¢	https://bmxlym5189.expandcart.com/index.php?route=product/product&product_id=373
‚Ä¢	https://www.enablesurvey.com/r/FG4fUbK
‚Ä¢	https://ikyyge2826.expandcart.com/index.php?route=product/product&product_id=373
‚Ä¢	https://wrjmre6235.expandcart.com/index.php?route=product/product&product_id=373
‚Ä¢	https://www.enablesurvey.com/r/MC7lEBs
‚Ä¢	https://www.enablesurvey.com/r/eo7wSoL
‚Ä¢	https://rezkqe0367.expandcart.com/index.php?route=product/product&product_id=373
‚Ä¢	https://www.artstation.com/user-4988932/profile
‚Ä¢	https://www.artstation.com/exhuma2024fhd-thai4k1/profile
‚Ä¢	https://www.artstation.com/user-5483527/profile
‚Ä¢	https://wandering.flarum.cloud/d/52330-rindubagaimana
‚Ä¢	https://hiuderyy.hashnode.dev/tiadaterkira
‚Ä¢	https://www.onfeetnation.com/profiles/blogs/soniaa
‚Ä¢	https://medium.com/@dewajuragan1/soniakasihku-0ace2dfead2f
‚Ä¢	https://open.firstory.me/story/clueaybdp0hkb01x16gen792l
‚Ä¢	https://forum.mush.com.br/topic/208427/phim-exhuma-2024-full-hd-vietsub-4k
‚Ä¢	https://rentry.co/ftzxrqgb
‚Ä¢	https://hackmd.io/@rerewilli6/HkfH6nHJ0
‚Ä¢	https://yamcode.com/kamana-461
‚Ä¢	https://start.me/w/nOGaab
‚Ä¢	https://telegra.ph/SDVRBDRFT-03-30
‚Ä¢	https://muckrack.com/xemphim-mai-2024-vietsub/bio
‚Ä¢	http://aldenfamilydentistry.com/UserProfile/tabid/57/userId/720382/Default.aspx
‚Ä¢	https://profile.hatena.ne.jp/dewajuragan1/
‚Ä¢	https://www.fitlynk.com/1711816609F519701
"
FwBjtQVa,Unit_06,lovelyvook,C#,Saturday 30th of March 2024 11:16:05 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int totalPatients;
            int minutesForPatient = 10;
            int totalTimeWait;
            int hour = 60;
            int hourWait;
            int minuteWait;

            Console.Write(""–°–∫–æ–ª—å–∫–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –≤–∞–º–∏? "");
            totalPatients = Convert.ToInt32(Console.ReadLine());

            totalTimeWait = totalPatients * minutesForPatient;
            hourWait = totalTimeWait / hour;
            minuteWait = totalTimeWait % hour;

            Console.WriteLine($""–í–ø–µ—Ä–µ–¥–∏ –≤–∞—Å –æ—á–µ—Ä–µ–¥—å –≤ {totalPatients} —á–µ–ª–æ–≤–µ–∫, –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ—Å—Ç–∞–≤–∏—Ç {hourWait} —á–∞—Å –∏ {minuteWait} –º–∏–Ω—É—Ç"");
        }
    }
}"
3dsiDHsJ,Zote,masterhandkun,JavaScript,Saturday 30th of March 2024 11:15:32 AM CDT,"function getResponse() {
  const data = [
  {
    ""id"": 1,
    ""title"": ""Gewinne immer deine K√§mpfe"",
    ""description"": ""Einen Kampf zu verlieren, bringt dir nichts und lehrt dich nichts. Gewinne deine K√§mpfe oder beginne sie gar nicht erst!""
  },
  {
    ""id"": 2,
    ""title"": ""Lass dich nie auslachen"",
    ""description"": ""Die Dummen lachen √ºber alles, sogar √ºber die ihnen √úberlegenen. Aber gib Acht, denn ein Lachen ist nicht harmlos! Lachen verbreitet sich wie eine Plage und schon bald lachen alle √ºber dich. Solch krankhaftes Gel√§chter muss man an seiner Wurzel ausmerzen, bevor es sich ausbreitet.""
  },
  {
    ""id"": 3,
    ""title"": ""Sei immer ausgeruht"",
    ""description"": ""K√§mpfe und Abenteuer hinterlassen ihre Spuren an deinem K√∂rper. Beim Ausruhen st√§rkt und heilt er sich. Je l√§nger du dich ausruhst, umso st√§rker wirst du.""
  },
  {
    ""id"": 4,
    ""title"": ""Vergiss deine Vergangenheit"",
    ""description"": ""Die Vergangenheit ist schmerzhaft, und dar√ºber nachzudenken, bringt nur Kummer. Denke stattdessen an etwas anderes, wie die Zukunft oder eine Mahlzeit.""
  },
  {
    ""id"": 5,
    ""title"": ""St√§rke besiegt St√§rke"",
    ""description"": ""Dein Gegner ist stark? V√∂llig egal! √úbertriff seine St√§rke einfach mit mehr St√§rke, dann hast du ihn im Nu besiegt.""
  },
  {
    ""id"": 6,
    ""title"": ""Entscheide dein Schicksal selbst"",
    ""description"": ""Die Alten lehren uns, dass unser Schicksal schon weit vor unserer Geburt entschieden ist. Ich sehe das anders.""
  },
  {
    ""id"": 7,
    ""title"": ""Trauere nicht um die Toten"",
    ""description"": ""Geht es uns nach dem Tod besser oder schlechter als im Leben? Niemand vermag das zu wissen, deshalb sollten wir uns nicht mit dem Trauern aufhalten. Und Gleiches gilt auch f√ºr das Feiern.""
  },
  {
    ""id"": 8,
    ""title"": ""Reise allein"",
    ""description"": ""Du kannst dich auf niemanden verlassen und niemand ist dir ewig treu. Daraus folgt, dass niemand dich begleiten sollte.""
  },
  {
    ""id"": 9,
    ""title"": ""Zuhause herrscht Ordnung"",
    ""description"": ""Zuhause bewahrst du deinen wertvollsten Besitz auf ‚Äì dich selbst. Deshalb solltest du es sauber und ordentlich halten.""
  },
  {
    ""id"": 10,
    ""title"": ""Halte deine Klinge scharf"",
    ""description"": ""Ich gehe immer sicher, dass meine Waffe ‚ÄûLebensender‚Äú jederzeit gesch√§rft ist. Dadurch f√§llt es viel leichter, Sachen zu zerschneiden.""
  },
  {
    ""id"": 11,
    ""title"": ""M√ºtter werden dich immer hintergehen"",
    ""description"": ""Dieses Gebot erkl√§rt sich selbst.""
  },
  {
    ""id"": 12,
    ""title"": ""Halte deinen Umhang trocken"",
    ""description"": ""Sollte dein Umhang einmal nass werden, trockne ihn so schnell wie m√∂glich. Einen nassen Umhang zu tragen ist unangenehm und kann zu Krankheit f√ºhren.""
  },
  {
    ""id"": 13,
    ""title"": ""F√ºrchte dich vor nichts"",
    ""description"": ""Furcht kann dich nur zur√ºckhalten. Sich seiner Furcht zu stellen erfordert gro√üe M√ºhen. Deshalb ist es einfacher, sich gar nicht erst zu f√ºrchten.""
  },
  {
    ""id"": 14,
    ""title"": ""Respektiere jene, die dir √ºberlegen sind"",
    ""description"": ""Wenn dir jemand an St√§rke, Verstand oder an beidem √ºberlegen ist, musst du ihm Respekt zeigen. So jemanden solltest du nicht ignorieren oder auslachen.""
  },
  {
    ""id"": 15,
    ""title"": ""Ein Gegner, ein Schlag"",
    ""description"": ""Du solltest Gegner mit einem einzigen Angriff niederstrecken. Alles weitere ist Verschwendung. Au√üerdem kannst du auf diese Art einfach deine Schl√§ge z√§hlen und wei√üt, wie viele Feinde du besiegt hast.""
  },
  {
    ""id"": 16,
    ""title"": ""Z√∂gere nicht"",
    ""description"": ""Hast du eine Entscheidung einmal getroffen, gehe ihr nach und schau nicht zur√ºck. So erreichst du mehr.""
  },
  {
    ""id"": 17,
    ""title"": ""Glaube an deine Kraft"",
    ""description"": ""Andere m√∂gen an dir zweifeln, aber es gibt jemanden, auf den du dich immer verlassen kannst. Dich selbst. Solange du an deine eigene Kraft glaubst, wirst du niemals straucheln.""
  },
  {
    ""id"": 18,
    ""title"": ""Suche Wahrheit in der Dunkelheit"",
    ""description"": ""Dieses Gebot erkl√§rt sich auch selbst.""
  },
  {
    ""id"": 19,
    ""title"": ""Wenn du etwas versuchst, schaffe es"",
    ""description"": ""Wenn du etwas versuchst, gehe sicher, dass du auch Erfolg hast. Wenn dir etwas nicht gelingt, dann hast du versagt! Das solltest du um jeden Preis vermeiden.""
  },
  {
    ""id"": 20,
    ""title"": ""Sprich immer die Wahrheit"",
    ""description"": ""Wenn man mit jemandem spricht, ist es angebracht und sinnvoll, ehrlich zu sein. Bedenke aber, dass man sich mit Ehrlichkeit manchmal Feinde macht. Damit muss man leben.""
  },
  {
    ""id"": 21,
    ""title"": ""Beachte immer deine Umgebung"",
    ""description"": ""Laufe nicht mit gesenktem Kopf herum! Um sicherzugehen, dass dich nichts √ºberrascht, musst du ab und an nach oben sehen.""
  },
  {
    ""id"": 22,
    ""title"": ""Verlasse das Nest"",
    ""description"": ""Ich habe meinen Geburtsort, so fr√ºh wie ich konnte, verlassen und meinen Weg in die Welt angetreten. Verweile nicht zu lange im Nest. Dort gibt es nichts f√ºr dich.""
  },
  {
    ""id"": 23,
    ""title"": ""Finde die Schwachstelle deines Feindes"",
    ""description"": ""Jeder Gegner hat eine Schwachstelle, wie zum Beispiel einen Riss im Panzer oder die Tatsache, dass er schl√§ft. Du musst achtsam sein und deine Gegner auf ihre Schwachstellen pr√ºfen!""
  },
  {
    ""id"": 24,
    ""title"": ""Triff den Feind an seiner Schwachstelle"",
    ""description"": ""Nachdem du ‚Äì wie im letzten Gebot beschrieben ‚Äì die Schwachstelle des Feindes gefunden hat, greife sie an. So wird er sofort zerst√∂rt.""
  },
  {
    ""id"": 25,
    ""title"": ""Sch√ºtze deine eigene Schwachstelle"",
    ""description"": ""Gib Acht, denn dein Feind wird versuchen, deine Schwachstelle zu finden, also musst du sie sch√ºtzen. Der beste Schutz? Gar keine Schwachstelle zu haben.""
  },
  {
    ""id"": 26,
    ""title"": ""Vertraue deinem Spiegelbild nicht"",
    ""description"": ""Wenn man bestimmte spiegelnde Oberfl√§chen betrachtet, sieht man ein Abbild des eigenen Gesichts. Das Gesicht folgt deinen Bewegungen und scheint dir sehr √§hnlich, aber ich glaube nicht, dass man ihm trauen kann.""
  },
  {
    ""id"": 27,
    ""title"": ""Iss so viel du kannst"",
    ""description"": ""Wenn du eine Mahlzeit zu dir nimmst, iss so viel wie du kannst. Das gibt dir noch mehr Energie und du musst weniger h√§ufig essen.""
  },
  {
    ""id"": 28,
    ""title"": ""Starre nicht in die Finsternis"",
    ""description"": ""Starrst du zu lang in die Finsternis, ohne etwas anderes zu sehen, werden alte Erinnerungen aufgeweckt. Erinnerungen sollten vermieden werden, wie das vierte Gebot bereits besagt.""
  },
  {
    ""id"": 29,
    ""title"": ""Trainiere deinen Orientierungssinn"",
    ""description"": ""Es ist einfach, sich in diesen windenden, verschlungenen Tunneln zu verlaufen. Ein guter Orientierungssinn ist wie eine magische Karte in deinem Kopf. Sehr n√ºtzlich.""
  },
  {
    ""id"": 30,
    ""title"": ""Lass dir nie etwas versprechen"",
    ""description"": ""Weise die Versprechen anderer zur√ºck, sie werden immer gebrochen. Versprechen von Liebe und Verlobung sollten besonders gemieden werden.""
  },
  {
    ""id"": 31,
    ""title"": ""Im Dreck lauern Krankheiten"",
    ""description"": ""Verbringst du zu viel Zeit an schmutzigen Orten, wirst du krank. Wenn du das Heim eines anderen besuchst, verlange h√∂chste Sauberkeit von deinem Gastgeber.""
  },
  {
    ""id"": 32,
    ""title"": ""Namen haben Macht"",
    ""description"": ""Namen haben Macht, und etwas einen Namen zu geben, verleiht ihm Macht. Ich selbst habe meinem Nagel den Namen ‚ÄûLebensender‚Äú gegeben. Stiehl ja nicht den Namen, den ich ersonnen habe! Erfinde deinen eigenen!""
  },
  {
    ""id"": 33,
    ""title"": ""Einem Gegner zeigt man keinen Respekt"",
    ""description"": ""H√∂flichkeit dem Gegner gegen√ºber ist keine Tugend! Wenn sich jemand gegen dich stellt, verdient er keinerlei Respekt, G√ºte oder Gnade.""
  },
  {
    ""id"": 34,
    ""title"": ""Iss nicht kurz bevor du schlafen gehst"",
    ""description"": ""Es kann zu Unruhe und Verdauungsproblemen f√ºhren. Das ist einfach nur gesunder K√§ferverstand.""
  },
  {
    ""id"": 35,
    ""title"": ""Oben ist oben, unten ist unten"",
    ""description"": ""Wenn du in der Dunkelheit f√§llst, kann es passieren, dass du nicht mehr wei√üt, wo oben ist. Denke dann an dieses Gebot!""
  },
  {
    ""id"": 36,
    ""title"": ""Eierschalen sind zerbrechlich"",
    ""description"": ""Auch dieses Gebot erkl√§rt sich selbst.""
  },
  {
    ""id"": 37,
    ""title"": ""Leihe dir aus, aber verleihe nicht an andere"",
    ""description"": ""Wenn du etwas verleihst und es zur√ºckbekommst, hast du keinen Gewinn. Wenn du dir etwas ausleihst und es beh√§ltst, gewinnst du alles.""
  },
  {
    ""id"": 38,
    ""title"": ""H√ºte dich vor der mysteri√∂sen Macht"",
    ""description"": ""Eine mysteri√∂se Macht dr√ºckt von oben auf uns herab, st√§ndig zum Boden hin. Verbringst du zu viel Zeit in der Luft, dann schmettert dich die Macht gegen den Boden und zerst√∂rt dich. Gib Acht!""
  },
  {
    ""id"": 39,
    ""title"": ""Iss schnell und trinke langsam"",
    ""description"": ""Dein K√∂rper ist empfindlich und sollte mit Bedacht bef√ºllt werden. Nahrung muss so schnell wie m√∂glich hinein, Fl√ºssigkeiten dagegen langsam.""
  },
  {
    ""id"": 40,
    ""title"": ""Halte dich an keine Gesetze au√üer deinen eigenen"",
    ""description"": ""Die Gesetze von anderen k√∂nnen Unannehmlichkeiten bringen oder eine B√ºrde sein. Lass deine W√ºnsche das einzige Gesetz sein.""
  },
  {
    ""id"": 41,
    ""title"": ""Lerne L√ºgen zu erkennen"",
    ""description"": ""Wenn andere sprechen, l√ºgen sie normalerweise. Hinterfrage und verh√∂re sie unnachgiebig, bis sie ihre Falschheit offenbaren.""
  },
  {
    ""id"": 42,
    ""title"": ""Gib Geo aus, wenn du sie hast"",
    ""description"": ""Manche klammern sich an ihren Geo fest, nehmen sie sogar mit in den Dreck, wenn sie sterben. Es ist besser, sie auszugeben, solange man es kann, so lassen sich viele Dinge im Leben genie√üen.""
  },
  {
    ""id"": 43,
    ""title"": ""Verzeihe niemals"",
    ""description"": ""Wenn jemand dich um Verzeihung bittet, zum Beispiel dein Bruder, verzeihe ihm niemals. Dieser Bruder, oder wer auch immer es sein mag, hat so etwas nicht verdient.""
  },
  {
    ""id"": 44,
    ""title"": ""Wasser kann man nicht atmen"",
    ""description"": ""Wasser ist erfrischend. Versuchst du jedoch, es zu atmen, wirst du eine b√∂se √úberraschung erleben.""
  },
  {
    ""id"": 45,
    ""title"": ""Eine Sache ist nicht dasselbe wie eine andere Sache"",
    ""description"": ""Das sollte eigentlich offensichtlich sein, aber es kam schon √∂fter vor, dass jemand behauptete, etwas, das ganz offensichtlich ist, was es ist, und nichts anderes, sei etwas anderes, was es nicht ist. Bleib auf der Hut!""
  },
  {
    ""id"": 46,
    ""title"": ""Die Welt ist kleiner als du denkst"",
    ""description"": ""Wenn man jung ist, neigt man dazu, zu denken, die Welt sei weit, riesig, gigantisch. Das ist nur nat√ºrlich. Leider ist sie in Wirklichkeit viel kleiner. Ich kann das jetzt sagen, weil ich schon √ºberall war.""
  },
  {
    ""id"": 47,
    ""title"": ""Erschaffe deine eigene Waffe"",
    ""description"": ""Du wei√üt am besten, was f√ºr eine Waffe du brauchst. Ich selbst habe meinen ‚ÄûLebensender‚Äú in jungem Alter aus Schalenholz hergestellt. Er hat mich nie im Stich gelassen. Und ich ihn auch nicht.""
  },
  {
    ""id"": 48,
    ""title"": ""Sei vorsichtig mit Feuer"",
    ""description"": ""Feuer ist eine Art hei√üer Geist, der r√ºcksichtslos umhertanzt. Es kann dich aufw√§rmen und dir Licht schenken, aber wenn es dir zu nah kommt, kann es deinen Panzer verbrennen.""
  },
  {
    ""id"": 49,
    ""title"": ""Statuen sind bedeutungslos"",
    ""description"": ""Ehre sie nicht! Niemand hat je eine Statue von dir oder mir angefertigt, also warum sollten wir ihnen Beachtung schenken?""
  },
  {
    ""id"": 50,
    ""title"": ""Verschwende keine Zeit mit Mysterien"",
    ""description"": ""Manche Dinge in dieser Welt scheinen ungekl√§rte Geheimnisse zu sein. Oder R√§tsel. Wenn die Bedeutung einer Sache nicht sofort erkennbar ist, solltest du keine Gedanken daran verschwenden. Widme dich einfach anderen Dingen.""
  },
  {
    ""id"": 51,
    ""title"": ""Nichts ist harmlos"",
    ""description"": ""Wenn du es zul√§sst, wird dich alles in dieser Welt irgendwann verletzen. Freunde, Feinde, Monster, unebene Pfade. Sei vorsichtig mit ihnen allen.""
  },
  {
    ""id"": 52,
    ""title"": ""Vorsicht vor der Eifersucht der V√§ter"",
    ""description"": ""V√§ter meinen, nur weil sie uns erschaffen haben, m√ºssten wir ihnen dienen und d√ºrften ihre F√§higkeiten nie √ºbertreffen. Wenn du deinen eigenen Weg gehen willst, musst du deinen Vater bezwingen. Oder ihn einfach verlassen.""
  },
  {
    ""id"": 53,
    ""title"": ""Stiehl nicht die W√ºnsche anderer"",
    ""description"": ""Jedes Lebewesen beh√ºtet seine W√ºnsche tief in seinem Inneren. Wenn du die W√ºnsche anderer erkennst, gerate nicht in Versuchung, sie zu √ºbernehmen. Es wird dich nicht gl√ºcklich machen.""
  },
  {
    ""id"": 54,
    ""title"": ""Wenn du etwas wegsperrst, hebe den Schl√ºssel auf"",
    ""description"": ""Nichts sollte f√ºr immer weggesperrt werden, behalte also deine Schl√ºssel. Fr√ºher oder sp√§ter wirst du unweigerlich zur√ºckgehen und alles, was du weggesperrt hast, hervorholen.""
  },
  {
    ""id"": 55,
    ""title"": ""Verneige dich vor niemandem"",
    ""description"": ""Es gibt jene auf der Welt, die anderen ihren Willen aufzwingen wollen. Sie erheben Anspruch auf dein Essen, deine Heimat, deinen K√∂rper und sogar deine Gedanken! Sie haben diese Dinge in keinster Weise verdient. Verneige dich nicht vor ihnen und gehorche ihren Befehlen auf keinen Fall.""
  },
  {
    ""id"": 56,
    ""title"": ""Tr√§ume nicht"",
    ""description"": ""Tr√§ume sind gef√§hrlich. Eigenartige Ideen, die nicht deine eigenen sind, k√∂nnen sich entwickeln. Wenn du dich dann gegen diese Ideen wehrst, f√ºhlst du dich krank und gehst daran zu Grunde! Besser ist es, gar nicht erst zu tr√§umen, wie ich.""
  },
  {
    ""id"": 57,
    ""title"": ""Halte dich an alle Gebote"",
    ""description"": ""Besonders wichtig ist es, dass du dir alle Gebote merkst und dich an sie h√§ltst. Auch dieses!""
  }
];
  
  const random = Math.floor(Math.random() * data.length);
  const item = data[random];
  return `${item.title}: ${item.description}`;
}"
wSi2ZeKa,Unit_05,lovelyvook,C#,Saturday 30th of March 2024 10:59:50 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int gold;
            int priceOfCrystal = 10;
            int numberOfCrystals;

            Console.Write($""–°–∫–æ–ª—å–∫–æ —É –≤–∞—Å –∑–æ–ª–æ—Ç–∞? "");
            gold = Convert.ToInt32(Console.ReadLine());

            Console.Write($""–°–µ–≥–æ–¥–Ω—è –∫—Ä–∏—Å—Ç–∞–ª–ª—ã —Å—Ç–æ—è—Ç {priceOfCrystal} –∑–æ–ª–æ—Ç–∞. –°–∫–æ–ª—å–∫–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å? "");
            numberOfCrystals = Convert.ToInt32(Console.ReadLine());

            gold -= numberOfCrystals * priceOfCrystal;

            Console.WriteLine($""–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {numberOfCrystals} –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, —É –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {gold} –∑–æ–ª–æ—Ç–∞"");
        }
    }
}"
sTAjYcz4,Unit_04,lovelyvook,C#,Saturday 30th of March 2024 10:45:08 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string cup1 = ""–∫–æ—Ñ–µ"";
            string cup2 = ""—á–∞–π"";
            string tempCup;

            Console.WriteLine($""–°–µ–π—á–∞—Å —á–∞—à–∫–∞1 —Å–æ–¥–µ—Ä–∂–∏—Ç {cup1}, –∞ —á–∞—à–∫–∞2 {cup2}"");

            tempCup = cup1;
            cup1 = cup2;
            cup2 = tempCup;

            Console.WriteLine($""–°–µ–π—á–∞—Å —á–∞—à–∫–∞1 —Å–æ–¥–µ—Ä–∂–∏—Ç {cup1}, –∞ —á–∞—à–∫–∞2 {cup2}"");
        }
    }
}"
X9JWV4Hd,Unit_03,lovelyvook,C#,Saturday 30th of March 2024 10:39:12 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int totalPictures = 52;
            int picturesInRow = 3;
            int totalRows;
            int restOfPictures;

            totalRows = totalPictures / picturesInRow;
            restOfPictures = totalPictures % picturesInRow;

            Console.WriteLine($""–í—Å–µ–≥–æ –ø–æ–ª–Ω—ã—Ö —Ä—è–¥–æ–≤: {totalRows}, –æ—Å—Ç–∞—Ç–æ–∫ –∫–∞—Ä—Ç–∏–Ω–æ–∫ {restOfPictures}"");
        }
    }
}"
keBv5tPy,Unit_02,lovelyvook,C#,Saturday 30th of March 2024 10:29:40 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string name;
            int age;
            string color;

            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è: "");
            name = Console.ReadLine();
            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç: "");
            age = Convert.ToInt32(Console.ReadLine());
            Console.Write(""–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç: "");
            color = Console.ReadLine();

            Console.WriteLine($""–í–∞—Å –∑–æ–≤—É—Ç {name}, –≤–∞–º {age}, –≤–∞—à –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç {color}"");
        }
    }
}"
grEJYCbv,ComputerCraft Lua Table Utils,djmattyg007,Lua,Saturday 30th of March 2024 10:25:12 AM CDT,"function length(T)
  local count = 0
  for _ in pairs(T) do count = count + 1 end
  return count
end

return { length = length }"
Diw36Xby,for double,LEGEND2004,C++,Saturday 30th of March 2024 10:11:17 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
#define fastio ios_base::sync_with_stdio(0); cin.tie(0)

signed main()
{
    fastio;

    int n;
    cin >> n;
    double a[n + 5];
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }

    cout << fixed << setprecision(2) << 
}
"
wHMSuDRd,binance_bot_example,FanaticExplorer,Python,Saturday 30th of March 2024 10:08:56 AM CDT,"üîî Ultimate Price Update For: FLOKIUSDT (15m)

üíµ Price: $0.00023135
üìä Volume: 37,131,512 (üîΩ72.31%)
üîÑ Price Change (24h): üîº0.67%
üìà 24h High: $0.00024824
üìâ 24h Low: $0.0002227
üîä 24h Volume: 14,827,054,573"
YPc246hg,Popular [Pop] {MoodPlay),AhmadXploit,Dart,Saturday 30th of March 2024 10:04:48 AM CDT,"{
  ""pops"": [
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806421/MoodPlay/KPop/BTS/Photos/images_3_kiytvp.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806421/MoodPlay/KPop/BTS/Photos/images_3_kiytvp.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700540/MoodPlay/Alan%20Walker/MpShort/Snaptik.app_7227236481637567770_hwcyc8.mp4"",
      ""name"": ""Lily"",
      ""title"": ""BTS"",
      ""yt"": ""@eminem"",
      ""spotify"": ""AlanWalker"",
      ""tiktok"": ""Alan Walker"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Lily"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700624/MoodPlay/Alan%20Walker/Videos/Alan_Walker_K-391_Emelie_Hollow_-_Lily_Lyrics_ebixag.mp4"",
          ""titleAccount"": ""Alan Walker""
        },
        {
          ""nameAccount"": ""Darkside"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711701111/MoodPlay/Alan%20Walker/Videos/Alan_Walker_-_Darkside_Lyrics_ft._Au_Ra_and_Tomine_Harket_ojwskj.mp4"",
          ""titleAccount"": ""Alan Walker""
        },
        {
          ""nameAccount"": ""On My Way"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700984/MoodPlay/Alan%20Walker/Videos/Alan_Walker_Sabrina_Carpenter_Farruko_-_On_My_Way_Lyrics_fckejs.mp4"",
          ""titleAccount"": ""Alan Walker""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806659/MoodPlay/KPop/EXO/Photos/images_5_au2xqj.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806659/MoodPlay/KPop/EXO/Photos/images_5_au2xqj.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711701862/MoodPlay/SZA/MpShort/SZA_-_Kill_Bill_Lyrics_SZA_smgdm7.mp4"",
      ""name"": ""Kill Bill"",
      ""title"": ""EXO"",
      ""yt"": ""@tl_swift"",
      ""spotify"": ""taylor"",
      ""tiktok"": ""mbak taylor"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Kill Bill"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711701804/MoodPlay/SZA/Photos/images_2_qda910.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711701475/MoodPlay/SZA/Videos/SZA_-_Kill_Bill_Lyrics_shfur6.mp4"",
          ""titleAccount"": ""Friends""
        },
        {
          ""nameAccount"": ""Taylor Swift"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlAccount"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""JASON AKSEN"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlAccount"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleAccount"": ""Love Story""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806801/MoodPlay/KPop/BLACKPINK/Photos/images_2_gpglxm.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806801/MoodPlay/KPop/BLACKPINK/Photos/images_2_gpglxm.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711695917/MoodPlay/Maroon%205/MpShort/Memories_-_Maroon_5_Lyrics_hy5xbo.mp4"",
      ""name"": ""Memories"",
      ""title"": ""BLACKPINK"",
      ""yt"": ""@tl_swift"",
      ""spotify"": ""taylor"",
      ""tiktok"": ""mbak taylor"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Maroon 5"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711695853/MoodPlay/Maroon%205/Photos/images_2_g76mrs.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711696035/MoodPlay/Maroon%205/Videos/Maroon_5_-_Memories_Lyrics_jebb8j.mp4"",
          ""titleAccount"": ""Memories""
        },
        {
          ""nameAccount"": ""Maroon 5"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlAccount"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""JASON AKSEN"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlAccount"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleAccount"": ""Love Story""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807062/MoodPlay/KPop/SUPER%20JUNIOR/Photos/images_4_fu90ne.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807062/MoodPlay/KPop/SUPER%20JUNIOR/Photos/images_4_fu90ne.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711698960/MoodPlay/Eminem/MpShort/Snaptik.app_7282028313319673093_epameg.mp4"",
      ""name"": ""Mockingbird"",
      ""title"": ""SUPER JUNIOR"",
      ""yt"": ""@tl_swift"",
      ""spotify"": ""taylor"",
      ""tiktok"": ""mbak taylor"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Mocking Bird"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699016/MoodPlay/Eminem/Videos/Eminem_-_Mockingbird_Lyrics_g8bzkz.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""Lose Yourself"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699511/MoodPlay/Eminem/Videos/Eminem_-_Lose_Yourself_Lyrics_axooh2.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""Slim Shady"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699822/MoodPlay/Eminem/Videos/Eminem_-_The_Real_Slim_Shady_Lyrics_r1yua8.mp4"",
          ""titleAccount"": ""Eminem""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711808148/MoodPlay/KPop/SNSD/Photos/images_8_hwumwc.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711808148/MoodPlay/KPop/SNSD/Photos/images_8_hwumwc.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711698960/MoodPlay/Eminem/MpShort/Snaptik.app_7282028313319673093_epameg.mp4"",
      ""name"": ""Mockingbird"",
      ""title"": ""SNSD"",
      ""yt"": ""@tl_swift"",
      ""spotify"": ""taylor"",
      ""tiktok"": ""mbak taylor"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Mocking Bird"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699016/MoodPlay/Eminem/Videos/Eminem_-_Mockingbird_Lyrics_g8bzkz.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""Lose Yourself"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699511/MoodPlay/Eminem/Videos/Eminem_-_Lose_Yourself_Lyrics_axooh2.mp4"",
          ""titleAccount"": ""Eminem""
        },
        {
          ""nameAccount"": ""Slim Shady"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699822/MoodPlay/Eminem/Videos/Eminem_-_The_Real_Slim_Shady_Lyrics_r1yua8.mp4"",
          ""titleAccount"": ""Eminem""
        }
      ]
    },
    {
      ""imgUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807864/MoodPlay/KPop/ITZY/Photos/images_11_kj7t1u.jpg"",
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807864/MoodPlay/KPop/ITZY/Photos/images_11_kj7t1u.jpg"",
      ""videoUrl"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700540/MoodPlay/Alan%20Walker/MpShort/Snaptik.app_7227236481637567770_hwcyc8.mp4"",
      ""name"": ""Lily"",
      ""title"": ""ITZY"",
      ""yt"": ""@eminem"",
      ""spotify"": ""AlanWalker"",
      ""tiktok"": ""Alan Walker"",
      ""detailPage"": [
        {
          ""nameAccount"": ""Lily"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700624/MoodPlay/Alan%20Walker/Videos/Alan_Walker_K-391_Emelie_Hollow_-_Lily_Lyrics_ebixag.mp4"",
          ""titleAccount"": ""Alan Walker""
        },
        {
          ""nameAccount"": ""Darkside"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711701111/MoodPlay/Alan%20Walker/Videos/Alan_Walker_-_Darkside_Lyrics_ft._Au_Ra_and_Tomine_Harket_ojwskj.mp4"",
          ""titleAccount"": ""Alan Walker""
        },
        {
          ""nameAccount"": ""On My Way"",
          ""fotoAccount"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlAccount"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700984/MoodPlay/Alan%20Walker/Videos/Alan_Walker_Sabrina_Carpenter_Farruko_-_On_My_Way_Lyrics_fckejs.mp4"",
          ""titleAccount"": ""Alan Walker""
        }
      ]
    }
  ]
}"
hLMChSu0,Untitled,Mysoft,FreeBasic,Saturday 30th of March 2024 10:03:00 AM CDT,"#include ""fbgfx.bi""

const iRoadWid = 20
locate ,,0

dim as integer ConWid = loword(width()) , ConHei = hiword(width())
dim as integer iPos = rnd*(ConWid-iRoadWid), iCar=iPos+iRoadWid\2
for I as long = 0 to 99999
  locate ConHei,1 : print space(iPos);
  color 15,6 : print space(iRoadWid) : color 9
  if I < ConHei then color 7,0 : continue for
  if iCar <= iPos orelse (iCar+2) >= (iPos+iRoadWid) then 
    color 12
    for N as long = ConHei-3 to ConHei-1
      locate N,iCar : print ""***"";
    next N
    color 7,0
    locate 1,1 : print ""Game over... you travelled "" & I\100 & ""km""
    do : sleep : loop
  end if
  locate ConHei-3,iCar : print ""._."";
  locate ConHei-2,iCar : print "" | "";
  locate ConHei-1,iCar : print "".-."";
  sleep 100,1
  for N as long = ConHei-3 to ConHei-1
    locate N,iCar : print ""   "";
  next N
  color 7,0
  do
    var sKey = inkey() : if len(sKey)=0 then exit do
    if iCar > 1      andalso sKey = chr(255,fb.SC_LEFT)  then iCar -= 1
    if iCar < ConWid andalso sKey = chr(255,fb.SC_RIGHT) then iCar += 1
  loop
  iPos -= 1-int(rnd*3)
    
next I"
11pBMEyd,ComponentDiagram.xml,Nancok,XML,Saturday 30th of March 2024 09:27:19 AM CDT,"<mxfile host=""app.diagrams.net"" modified=""2024-03-30T16:28:20.343Z"" agent=""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36"" etag=""EzOON7v8qwiJU9LFfTTp"" version=""24.2.1"" type=""device"">
  <diagram name=""P√°gina-1"" id=""8cFhBFtxJ8WcgCCSlpae"">
    <mxGraphModel dx=""2037"" dy=""1034"" grid=""1"" gridSize=""10"" guides=""1"" tooltips=""1"" connect=""1"" arrows=""1"" fold=""1"" page=""1"" pageScale=""1"" pageWidth=""827"" pageHeight=""1169"" math=""0"" shadow=""0"">
      <root>
        <mxCell id=""0"" />
        <mxCell id=""1"" parent=""0"" />
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-8"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0;entryDx=0;entryDy=0;exitX=1;exitY=0;exitDx=0;exitDy=0;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-1"" target=""mx3zInj1Q97KcvaE7-Ox-4"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-1"" value=""Entity"" style=""whiteSpace=wrap;html=1;align=center;"" vertex=""1"" parent=""1"">
          <mxGeometry x=""313"" y=""60"" width=""100"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-4"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""1"">
          <mxGeometry x=""480"" y=""60"" width=""210"" height=""86"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-5"" value=""Track and fetch components"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-4"">
          <mxGeometry y=""26"" width=""210"" height=""30"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-6"" value=""Save and load data"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-4"">
          <mxGeometry y=""56"" width=""210"" height=""30"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-104"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-13"" target=""mx3zInj1Q97KcvaE7-Ox-101"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-13"" value=""Inventory"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""1"">
          <mxGeometry x=""650"" y=""680"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-79"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""653"" y=""240"" width=""150"" height=""200"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-53"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-79"" source=""mx3zInj1Q97KcvaE7-Ox-11"" target=""mx3zInj1Q97KcvaE7-Ox-48"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-11"" value=""Faction"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-79"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-48"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-79"">
          <mxGeometry y=""80"" width=""150"" height=""170"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-49"" value=""Stores the faction of the entity"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-48"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-50"" value=""Returns the relationship with other entity&#39;s Faction components"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-48"">
          <mxGeometry y=""70"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-111"" value=""Note: Factions should probably be resources as to store more data"" style=""text;strokeColor=#d6b656;fillColor=#fff2cc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-48"">
          <mxGeometry y=""120"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-80"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""-80"" y=""240"" width=""600"" height=""1440"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-23"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-80"" source=""mx3zInj1Q97KcvaE7-Ox-15"" target=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-15"" value=""Movement"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-80"">
          <mxGeometry x=""100"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-19"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-80"">
          <mxGeometry x=""100"" y=""80"" width=""150"" height=""200"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-20"" value=""Move entity on the board"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-21"" value=""Interpolate trough cells in an array"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry y=""70"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-24"" value=""Return pathing status of a cell"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry y=""110"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-25"" value=""Return cells that can be pathed to from the current position"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-19"">
          <mxGeometry y=""150"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-100"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-80"">
          <mxGeometry x=""100"" y=""440"" width=""500"" height=""1000"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-94"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-100"">
          <mxGeometry width=""150"" height=""220"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-31"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-94"" source=""mx3zInj1Q97KcvaE7-Ox-17"" target=""mx3zInj1Q97KcvaE7-Ox-26"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-17"" value=""Turn"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-94"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-26"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-94"">
          <mxGeometry y=""90"" width=""150"" height=""130"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-27"" value=""Communicates with all other Turn components to fetch their data"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-26"">
          <mxGeometry y=""26"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-28"" value=""Ends turns and advances time for all Turn components"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-26"">
          <mxGeometry y=""80"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-81"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""20"" y=""1400"" width=""150"" height=""200"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-43"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-81"" source=""mx3zInj1Q97KcvaE7-Ox-10"" target=""mx3zInj1Q97KcvaE7-Ox-39"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-10"" value=""Display"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-81"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-39"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-81"">
          <mxGeometry y=""80"" width=""150"" height=""120"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-40"" value=""Displays the main model of the entity and plays animations"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-39"">
          <mxGeometry y=""26"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-41"" value=""Places temporary nodes like pathing markers"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-39"">
          <mxGeometry y=""80"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-45"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fillColor=#60a917;strokeColor=#2D7600;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-15"" target=""mx3zInj1Q97KcvaE7-Ox-10"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint x=""-80"" y=""1200"" as=""targetPoint"" />
            <Array as=""points"">
              <mxPoint x=""-80"" y=""260"" />
              <mxPoint x=""-80"" y=""1420"" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-47"" value=""Used to display the pathing markers"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];container=0;fontStyle=1;labelBorderColor=default;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-45"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-82"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""20"" y=""1680"" width=""150"" height=""150"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-67"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-82"" source=""mx3zInj1Q97KcvaE7-Ox-68"" target=""mx3zInj1Q97KcvaE7-Ox-69"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-68"" value=""Status"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-82"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-69"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-82"">
          <mxGeometry y=""80"" width=""150"" height=""70"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-70"" value=""Stores and triggers temporary status effects"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-69"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-72"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fillColor=#60a917;strokeColor=#2D7600;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-16"" target=""mx3zInj1Q97KcvaE7-Ox-68"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-73"" value=""Takes into account when&amp;nbsp;&lt;div style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;returning stats&lt;/span&gt;&lt;/div&gt;"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontStyle=1;labelBorderColor=default;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-72"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-75"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0;exitDx=0;exitDy=0;entryX=1;entryY=1;entryDx=0;entryDy=0;fillColor=#1ba1e2;strokeColor=#006EAF;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-16"" target=""mx3zInj1Q97KcvaE7-Ox-9"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint x=""229.99999999999977"" y=""920"" as=""targetPoint"" />
            <Array as=""points"">
              <mxPoint x=""420"" y=""1720"" />
              <mxPoint x=""420"" y=""1080"" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-76"" value=""&lt;span style=&quot;font-weight: 700;&quot;&gt;Takes into account when&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;returning stats&lt;/span&gt;&lt;/div&gt;"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];labelBorderColor=default;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-75"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-90"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""653"" y=""1680"" width=""150"" height=""260"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-66"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-90"" source=""mx3zInj1Q97KcvaE7-Ox-16"" target=""mx3zInj1Q97KcvaE7-Ox-63"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-16"" value=""Stats"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-90"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-114"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-90"">
          <mxGeometry y=""80"" width=""150"" height=""180"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-63"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-114"">
          <mxGeometry width=""150"" height=""120"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-64"" value=""Stores and returns stats and their bonuses"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-63"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-65"" value=""Note: missing arbitrary boost and load from resource functions"" style=""text;strokeColor=#d6b656;fillColor=#fff2cc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;container=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-63"">
          <mxGeometry y=""70"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-93"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""20"" y=""1040"" width=""150"" height=""254"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-36"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-93"" source=""mx3zInj1Q97KcvaE7-Ox-9"" target=""mx3zInj1Q97KcvaE7-Ox-33"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-9"" value=""Capability"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-93"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-33"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-93"">
          <mxGeometry y=""80"" width=""150"" height=""174"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-34"" value=""Stores sets of stats and other base properties for the Stats component"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-33"">
          <mxGeometry y=""26"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-38"" value=""Caches all related resources"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-33"">
          <mxGeometry y=""80"" width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-37"" value=""Note: may be suitable to merge with Stats component"" style=""text;strokeColor=#d6b656;fillColor=#fff2cc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-33"">
          <mxGeometry y=""120"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-95"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""653"" y=""1000"" width=""150"" height=""190"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-77"" value="""" style=""group;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-95"">
          <mxGeometry width=""150"" height=""190"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-60"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-77"" source=""mx3zInj1Q97KcvaE7-Ox-12"" target=""mx3zInj1Q97KcvaE7-Ox-54"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-12"" value=""Input"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;glass=0;shadow=0;gradientColor=none;noLabel=0;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-77"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-54"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-77"">
          <mxGeometry y=""80"" width=""150"" height=""110"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-55"" value=""Stores the current input state"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-54"">
          <mxGeometry y=""26"" width=""150"" height=""34"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-56"" value=""Controls other components directly based on input"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-54"">
          <mxGeometry y=""60"" width=""150"" height=""50"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-61"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fillColor=#60a917;strokeColor=#2D7600;verticalAlign=middle;horizontal=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-95"" source=""mx3zInj1Q97KcvaE7-Ox-12"" target=""mx3zInj1Q97KcvaE7-Ox-15"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-62"" value=""AWAITING_MOVEMENT causes&amp;nbsp;&lt;div&gt;the entity to move to cell when&lt;/div&gt;&lt;div&gt;a cell is clicked&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];labelBorderColor=default;fontStyle=1;spacingBottom=0;comic=0;spacing=2;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-61"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-101"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""1"">
          <mxGeometry x=""650"" y=""760"" width=""150"" height=""178"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-109"" value=""Stores a static dictionary of items, separated by ownership"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-101"">
          <mxGeometry y=""26"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-110"" value=""Stores the entity &#39;s equipment"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-101"">
          <mxGeometry y=""80"" width=""150"" height=""54"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-102"" value=""Note: No functionality yet"" style=""text;strokeColor=#b85450;fillColor=#f8cecc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-101"">
          <mxGeometry y=""134"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-98"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0;entryDx=0;entryDy=0;fillColor=#60a917;strokeColor=#2D7600;"" edge=""1"" parent=""1"" source=""mx3zInj1Q97KcvaE7-Ox-17"" target=""mx3zInj1Q97KcvaE7-Ox-16"">
          <mxGeometry relative=""1"" as=""geometry"">
            <Array as=""points"">
              <mxPoint x=""520"" y=""700"" />
              <mxPoint x=""520"" y=""1680"" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-99"" value=""&lt;span style=&quot;&quot;&gt;Fetches the base delay&lt;/span&gt;"" style=""edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontStyle=1;labelBorderColor=default;"" vertex=""1"" connectable=""0"" parent=""mx3zInj1Q97KcvaE7-Ox-98"">
          <mxGeometry relative=""1"" as=""geometry"">
            <mxPoint as=""offset"" />
          </mxGeometry>
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-117"" value="""" style=""group"" vertex=""1"" connectable=""0"" parent=""1"">
          <mxGeometry x=""650"" y=""1320"" width=""150"" height=""194"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-107"" style=""edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;"" edge=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-117"" source=""mx3zInj1Q97KcvaE7-Ox-14"" target=""mx3zInj1Q97KcvaE7-Ox-105"">
          <mxGeometry relative=""1"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-14"" value=""Lore"" style=""rounded=1;arcSize=10;whiteSpace=wrap;html=1;align=center;fillColor=#d5e8d4;strokeColor=#82b366;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-117"">
          <mxGeometry width=""150"" height=""40"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-105"" value=""Functions"" style=""swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;align=center;fontSize=14;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-117"">
          <mxGeometry y=""80"" width=""150"" height=""114"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-108"" value=""Contains the name, backstory and other fluff"" style=""text;strokeColor=default;fillColor=none;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-105"">
          <mxGeometry y=""26"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
        <mxCell id=""mx3zInj1Q97KcvaE7-Ox-106"" value=""Note: No functionality yet"" style=""text;strokeColor=#b85450;fillColor=#f8cecc;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontSize=12;whiteSpace=wrap;html=1;"" vertex=""1"" parent=""mx3zInj1Q97KcvaE7-Ox-105"">
          <mxGeometry y=""70"" width=""150"" height=""44"" as=""geometry"" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
"
xUkp6bG9,News March30 24,Newscaster_Ned,Email,Saturday 30th of March 2024 08:54:35 AM CDT,".‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé1‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé2‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äé3‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé
.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéT‚Äée‚Äés‚Äét‚Äé ‚Äéc‚Äéo‚Äém‚Äép‚Äél‚Äée‚Äét‚Äée‚Äé.‚Äé

H‚Äée‚Äér‚Äée‚Äé'‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äéu‚Äés‚Äée‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéT‚Äéh‚Äéa‚Äét‚Äé ‚ÄéI‚Äé'‚Äém‚Äé ‚Äéa‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äél‚Äéo‚Äéw‚Äé ‚Äéi‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äéy‚Äé ‚Äéd‚Äéo‚Äén‚Äé'‚Äét‚Äé ‚Äés‚Äét‚Äéo‚Äép‚Äé ‚Äét‚Äéa‚Äél‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äéa‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äét‚Äéh‚Äéo‚Äés‚Äée‚Äé ‚Äéc‚Äéo‚Äém‚Äém‚Äéi‚Äée‚Äés‚Äé.‚Äé

‚Äò‚ÄéJ‚Äée‚Äés‚Äéu‚Äés‚Äé ‚ÄéP‚Äéa‚Äéi‚Äéd‚Äé ‚ÄéI‚Äét‚Äé ‚ÄéA‚Äél‚Äél‚Äé‚Äô‚Äé

C‚Äéo‚Äén‚Äés‚Äée‚Äér‚Äév‚Äéa‚Äét‚Äéi‚Äév‚Äée‚Äé ‚ÄéL‚Äéa‚Äéw‚Äém‚Äéa‚Äék‚Äée‚Äér‚Äés‚Äé,‚Äé ‚ÄéM‚Äéo‚Äér‚Äée‚Äé ‚ÄéO‚Äéb‚Äés‚Äée‚Äér‚Äév‚Äée‚Äé ‚ÄéG‚Äéo‚Äéo‚Äéd‚Äé ‚ÄéF‚Äér‚Äéi‚Äéd‚Äéa‚Äéy‚Äé
J‚Äée‚Äés‚Äéu‚Äés‚Äé ‚ÄéG‚Äéo‚Äéo‚Äéd‚Äé ‚ÄéF‚Äér‚Äéi‚Äéd‚Äéa‚Äéy‚Äé
C‚Äéh‚Äér‚Äéi‚Äés‚Äét‚Äéi‚Äéa‚Äén‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚ÄéF‚Äér‚Äéi‚Äéd‚Äéa‚Äéy‚Äé ‚Äéo‚Äéb‚Äés‚Äée‚Äér‚Äév‚Äée‚Äéd‚Äé ‚ÄéG‚Äéo‚Äéo‚Äéd‚Äé ‚ÄéF‚Äér‚Äéi‚Äéd‚Äéa‚Äéy‚Äé,‚Äé ‚Äéa‚Äés‚Äé ‚Äés‚Äéo‚Äém‚Äée‚Äé ‚Äép‚Äéo‚Äél‚Äéi‚Äét‚Äéi‚Äéc‚Äéa‚Äél‚Äé ‚Äéf‚Äéi‚Äég‚Äéu‚Äér‚Äée‚Äés‚Äé ‚Äét‚Äér‚Äéi‚Äéu‚Äém‚Äép‚Äéh‚Äéa‚Äén‚Äét‚Äél‚Äéy‚Äé ‚Äéd‚Äée‚Äéc‚Äél‚Äéa‚Äér‚Äée‚Äéd‚Äé ‚Äét‚Äéh‚Äéa‚Äét‚Äé ‚Äé‚Äú‚ÄéJ‚Äée‚Äés‚Äéu‚Äés‚Äé ‚Äép‚Äéa‚Äéi‚Äéd‚Äé ‚Äéi‚Äét‚Äé ‚Äéa‚Äél‚Äél‚Äé.‚Äé‚Äù‚Äé

B‚Äér‚Äée‚Äéi‚Äét‚Äéb‚Äéa‚Äér‚Äét‚Äé ‚ÄéB‚Äéu‚Äés‚Äéi‚Äén‚Äée‚Äés‚Äés‚Äé ‚ÄéD‚Äéi‚Äég‚Äée‚Äés‚Äét‚Äé:‚Äé ‚ÄéI‚Äét‚Äé‚Äô‚Äél‚Äél‚Äé ‚ÄéT‚Äéa‚Äék‚Äée‚Äé ‚Äéa‚Äét‚Äé ‚ÄéL‚Äée‚Äéa‚Äés‚Äét‚Äé ‚Äéa‚Äé ‚ÄéD‚Äée‚Äéc‚Äéa‚Äéd‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé$‚Äé2‚Äé ‚ÄéB‚Äéi‚Äél‚Äél‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚ÄéR‚Äée‚Äéb‚Äéu‚Äéi‚Äél‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé
B‚ÄéB‚ÄéD‚Äé:‚Äé ‚ÄéI‚Äét‚Äé'‚Äél‚Äél‚Äé ‚ÄéT‚Äéa‚Äék‚Äée‚Äé ‚Äéa‚Äét‚Äé ‚ÄéL‚Äée‚Äéa‚Äés‚Äét‚Äé ‚Äéa‚Äé ‚ÄéD‚Äée‚Äéc‚Äéa‚Äéd‚Äée‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé$‚Äé2‚Äé ‚ÄéB‚Äéi‚Äél‚Äél‚Äéi‚Äéo‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚ÄéR‚Äée‚Äéb‚Äéu‚Äéi‚Äél‚Äéd‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé
8‚Äé8‚Äé7‚Äé
L‚Äée‚Äés‚Äél‚Äéi‚Äée‚Äé ‚ÄéJ‚Äéo‚Äén‚Äée‚Äés‚Äé ‚ÄéC‚Äéo‚Äém‚Äép‚Äéa‚Äér‚Äée‚Äés‚Äé ‚ÄéR‚Äée‚Äée‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äén‚Äég‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚Äét‚Äéo‚Äé ‚ÄéA‚Äés‚Äék‚Äéi‚Äén‚Äég‚Äé ‚ÄéJ‚Äée‚Äéf‚Äéf‚Äér‚Äée‚Äéy‚Äé ‚ÄéE‚Äép‚Äés‚Äét‚Äée‚Äéi‚Äén‚Äé ‚Äéo‚Äér‚Äé ‚Äéa‚Äé ‚Äé‚Äò‚ÄéP‚Äée‚Äéd‚Äéo‚Äép‚Äéh‚Äéi‚Äél‚Äée‚Äé ‚ÄéP‚Äér‚Äéi‚Äée‚Äés‚Äét‚Äé ‚Äét‚Äéo‚Äé ‚ÄéW‚Äéa‚Äé
L‚Äée‚Äés‚Äél‚Äéi‚Äée‚Äé ‚ÄéJ‚Äéo‚Äén‚Äée‚Äés‚Äé:‚Äé ‚ÄéR‚Äée‚Äée‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äén‚Äég‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéL‚Äéi‚Äék‚Äée‚Äé ‚ÄéA‚Äés‚Äék‚Äéi‚Äén‚Äég‚Äé ‚ÄéJ‚Äée‚Äéf‚Äéf‚Äér‚Äée‚Äéy‚Äé ‚ÄéE‚Äép‚Äés‚Äét‚Äée‚Äéi‚Äén‚Äé ‚Äét‚Äéo‚Äé ‚ÄéW‚Äéa‚Äét‚Äéc‚Äéh‚Äé ‚ÄéK‚Äéi‚Äéd‚Äés‚Äé
5‚Äé9‚Äé1‚Äé
G‚Äér‚Äéa‚Äém‚Äém‚Äéy‚Äé-‚Äéw‚Äéi‚Äén‚Äén‚Äée‚Äér‚Äé ‚ÄéL‚Äéi‚Äéz‚Äéz‚Äéo‚Äé ‚ÄéR‚Äée‚Äél‚Äée‚Äéa‚Äés‚Äée‚Äés‚Äé ‚ÄéS‚Äéa‚Äéd‚Äé ‚ÄéM‚Äée‚Äés‚Äés‚Äéa‚Äég‚Äée‚Äé:‚Äé ‚Äé‚Äò‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéW‚Äéo‚Äér‚Äél‚Äéd‚Äé ‚ÄéD‚Äéo‚Äée‚Äés‚Äén‚Äé‚Äô‚Äét‚Äé ‚ÄéW‚Äéa‚Äén‚Äét‚Äé ‚ÄéM‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéI‚Äét‚Äé ‚Äé‚Ä¶‚Äé ‚ÄéI‚Äé ‚ÄéQ‚Äéu‚Äé
L‚Äéi‚Äéz‚Äéz‚Äéo‚Äé ‚ÄéR‚Äée‚Äél‚Äée‚Äéa‚Äés‚Äée‚Äés‚Äé ‚ÄéS‚Äéa‚Äéd‚Äé ‚ÄéM‚Äée‚Äés‚Äés‚Äéa‚Äég‚Äée‚Äé:‚Äé ‚Äé'‚ÄéT‚Äéh‚Äée‚Äé ‚ÄéW‚Äéo‚Äér‚Äél‚Äéd‚Äé ‚ÄéD‚Äéo‚Äée‚Äés‚Äén‚Äé'‚Äét‚Äé ‚ÄéW‚Äéa‚Äén‚Äét‚Äé ‚ÄéM‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéI‚Äét‚Äé'‚Äé
1‚Äé,‚Äé0‚Äé2‚Äé7‚Äé
T‚Äér‚Äéo‚Äéu‚Äéb‚Äél‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéP‚Äéa‚Äér‚Äéa‚Äéd‚Äéi‚Äés‚Äée‚Äé:‚Äé ‚ÄéD‚Äéi‚Äév‚Äéi‚Äés‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äén‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äé ‚ÄéI‚Äém‚Äép‚Äée‚Äér‚Äéi‚Äél‚Äés‚Äé ‚ÄéJ‚Äéo‚Äée‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé‚Äô‚Äés‚Äé ‚ÄéR‚Äée‚Äée‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéP‚Äér‚Äéo‚Äés‚Äép‚Äée‚Äéc‚Äét‚Äés‚Äé
T‚Äér‚Äéo‚Äéu‚Äéb‚Äél‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéP‚Äéa‚Äér‚Äéa‚Äéd‚Äéi‚Äés‚Äée‚Äé:‚Äé ‚ÄéD‚Äéi‚Äév‚Äéi‚Äés‚Äéi‚Äéo‚Äén‚Äé ‚Äéo‚Äén‚Äé ‚ÄéL‚Äée‚Äéf‚Äét‚Äé ‚ÄéI‚Äém‚Äép‚Äée‚Äér‚Äéi‚Äél‚Äés‚Äé ‚ÄéJ‚Äéo‚Äée‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé'‚Äés‚Äé ‚ÄéR‚Äée‚Äée‚Äél‚Äée‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéB‚Äéi‚Äéd‚Äé
2‚Äé,‚Äé1‚Äé7‚Äé0‚Äé
B‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéC‚Äéa‚Äém‚Äép‚Äéa‚Äéi‚Äég‚Äén‚Äé ‚ÄéB‚Äéo‚Äét‚Äéc‚Äéh‚Äée‚Äés‚Äé ‚ÄéR‚Äéo‚Äél‚Äél‚Äéo‚Äéu‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéH‚Äéi‚Äés‚Äép‚Äéa‚Äén‚Äéi‚Äéc‚Äé ‚ÄéO‚Äéu‚Äét‚Äér‚Äée‚Äéa‚Äéc‚Äéh‚Äé ‚ÄéE‚Äéf‚Äéf‚Äéo‚Äér‚Äét‚Äé ‚Äéi‚Äén‚Äé ‚ÄéM‚Äéi‚Äéa‚Äém‚Äéi‚Äé
B‚Äéi‚Äéd‚Äée‚Äén‚Äé ‚ÄéC‚Äéa‚Äém‚Äép‚Äéa‚Äéi‚Äég‚Äén‚Äé ‚ÄéB‚Äéo‚Äét‚Äéc‚Äéh‚Äée‚Äés‚Äé ‚ÄéR‚Äéo‚Äél‚Äél‚Äéo‚Äéu‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéH‚Äéi‚Äés‚Äép‚Äéa‚Äén‚Äéi‚Äéc‚Äé ‚ÄéO‚Äéu‚Äét‚Äér‚Äée‚Äéa‚Äéc‚Äéh‚Äé ‚ÄéE‚Äéf‚Äéf‚Äéo‚Äér‚Äét‚Äé ‚Äéi‚Äén‚Äé ‚ÄéM‚Äéi‚Äéa‚Äém‚Äéi‚Äé
2‚Äé5‚Äé4‚Äé
L‚Äée‚Äét‚Äéi‚Äét‚Äéi‚Äéa‚Äé ‚ÄéJ‚Äéa‚Äém‚Äée‚Äés‚Äé ‚ÄéF‚Äéa‚Äéc‚Äée‚Äés‚Äé ‚ÄéG‚Äér‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äés‚Äéu‚Äér‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äér‚Äéo‚Äés‚Äée‚Äéc‚Äéu‚Äét‚Äée‚Äé ‚ÄéJ‚Äéo‚Äén‚Äé ‚ÄéS‚Äét‚Äée‚Äéw‚Äéa‚Äér‚Äét‚Äé ‚Äéo‚Äév‚Äée‚Äér‚Äé ‚ÄéP‚Äér‚Äéo‚Äép‚Äée‚Äér‚Äét‚Äéy‚Äé ‚ÄéO‚Äév‚Äée‚Äér‚Äév‚Äéa‚Äél‚Äéu‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé
L‚Äée‚Äét‚Äéi‚Äét‚Äéi‚Äéa‚Äé ‚ÄéJ‚Äéa‚Äém‚Äée‚Äés‚Äé ‚ÄéF‚Äéa‚Äéc‚Äée‚Äés‚Äé ‚ÄéG‚Äér‚Äéo‚Äéw‚Äéi‚Äén‚Äég‚Äé ‚ÄéP‚Äér‚Äée‚Äés‚Äés‚Äéu‚Äér‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚ÄéP‚Äér‚Äéo‚Äés‚Äée‚Äéc‚Äéu‚Äét‚Äée‚Äé ‚ÄéJ‚Äéo‚Äén‚Äé ‚ÄéS‚Äét‚Äée‚Äéw‚Äéa‚Äér‚Äét‚Äé
2‚Äé,‚Äé4‚Äé9‚Äé8‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé:‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéC‚Äéa‚Äém‚Äép‚Äé ‚ÄéS‚Äém‚Äéa‚Äés‚Äéh‚Äée‚Äés‚Äé ‚Äé‚Äò‚ÄéT‚Äéh‚Äér‚Äée‚Äée‚Äé ‚ÄéS‚Äét‚Äéo‚Äéo‚Äég‚Äée‚Äés‚Äé‚Äô‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé,‚Äé ‚ÄéO‚Äéb‚Äéa‚Äém‚Äéa‚Äé,‚Äé ‚ÄéC‚Äél‚Äéi‚Äén‚Äét‚Äéo‚Äén‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéS‚Äék‚Äéi‚Äép‚Äép‚Äéi‚Äén‚Äég‚Äé ‚ÄéS‚Äél‚Äéa‚Äéi‚Äén‚Äé ‚ÄéN‚ÄéY‚ÄéC‚Äé ‚ÄéO‚Äéf‚Äéf‚Äéi‚Äé
E‚Äéx‚Äéc‚Äél‚Äéu‚Äés‚Äéi‚Äév‚Äée‚Äé:‚Äé ‚ÄéT‚Äér‚Äéu‚Äém‚Äép‚Äé ‚ÄéC‚Äéa‚Äém‚Äép‚Äé ‚ÄéS‚Äém‚Äéa‚Äés‚Äéh‚Äée‚Äés‚Äé ‚Äé‚Äò‚ÄéT‚Äéh‚Äér‚Äée‚Äée‚Äé ‚ÄéS‚Äét‚Äéo‚Äéo‚Äég‚Äée‚Äés‚Äé‚Äô‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé,‚Äé ‚ÄéO‚Äéb‚Äéa‚Äém‚Äéa‚Äé,‚Äé ‚ÄéC‚Äél‚Äéi‚Äén‚Äét‚Äéo‚Äén‚Äé
5‚Äé,‚Äé4‚Äé3‚Äé5‚Äé
T‚Äée‚Äén‚Äés‚Äée‚Äé ‚ÄéS‚Äét‚Äéa‚Äén‚Äéd‚Äéo‚Äéf‚Äéf‚Äé ‚Äéa‚Äés‚Äé ‚ÄéD‚Äér‚Äéi‚Äén‚Äék‚Äée‚Äér‚Äés‚Äé ‚ÄéT‚Äéa‚Äék‚Äée‚Äén‚Äé ‚ÄéH‚Äéo‚Äés‚Äét‚Äéa‚Äég‚Äée‚Äé ‚Äéa‚Äét‚Äé ‚ÄéD‚Äéu‚Äét‚Äéc‚Äéh‚Äé ‚ÄéB‚Äéa‚Äér‚Äé
N‚Äée‚Äét‚Äéh‚Äée‚Äér‚Äél‚Äéa‚Äén‚Äéd‚Äés‚Äé ‚ÄéH‚Äéo‚Äés‚Äét‚Äéa‚Äég‚Äée‚Äé ‚ÄéT‚Äéa‚Äék‚Äéi‚Äén‚Äég‚Äé:‚Äé ‚ÄéT‚Äée‚Äén‚Äés‚Äée‚Äé ‚ÄéP‚Äéo‚Äél‚Äéi‚Äéc‚Äée‚Äé ‚ÄéS‚Äét‚Äéa‚Äén‚Äéd‚Äéo‚Äéf‚Äéf‚Äé ‚Äéa‚Äét‚Äé ‚ÄéP‚Äéo‚Äép‚Äéu‚Äél‚Äéa‚Äér‚Äé ‚ÄéB‚Äéa‚Äér‚Äé
1‚Äé3‚Äé7‚Äé
B‚Äéu‚Äét‚Äét‚Äéi‚Äég‚Äéi‚Äée‚Äég‚Äé ‚ÄéM‚Äée‚Äés‚Äés‚Äé:‚Äé ‚ÄéT‚Äér‚Äéa‚Äén‚Äés‚Äép‚Äéo‚Äér‚Äét‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚ÄéD‚Äée‚Äép‚Äét‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéS‚Äéa‚Äéy‚Äé ‚ÄéH‚Äéo‚Äéw‚Äé ‚ÄéM‚Äéa‚Äén‚Äéy‚Äé ‚ÄéN‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äéa‚Äél‚Äé ‚ÄéD‚Äée‚Äéf‚Äée‚Äén‚Äés‚Äée‚Äé ‚ÄéS‚Äéh‚Äéi‚Äép‚Äés‚Äé ‚ÄéS‚Äét‚Äéu‚Äéc‚Äék‚Äé ‚Äéi‚Äén‚Äé ‚ÄéH‚Äéa‚Äér‚Äéb‚Äéo‚Äér‚Äé
B‚Äéa‚Äél‚Äét‚Äéi‚Äém‚Äéo‚Äér‚Äée‚Äé ‚ÄéB‚Äér‚Äéi‚Äéd‚Äég‚Äée‚Äé ‚ÄéM‚Äée‚Äés‚Äés‚Äé:‚Äé ‚ÄéD‚ÄéO‚ÄéT‚Äé ‚ÄéW‚Äéi‚Äél‚Äél‚Äé ‚ÄéN‚Äéo‚Äét‚Äé ‚ÄéS‚Äéa‚Äéy‚Äé ‚ÄéH‚Äéo‚Äéw‚Äé ‚ÄéM‚Äéa‚Äén‚Äéy‚Äé ‚ÄéR‚Äée‚Äés‚Äée‚Äér‚Äév‚Äée‚Äé ‚ÄéS‚Äéh‚Äéi‚Äép‚Äés‚Äé ‚ÄéS‚Äét‚Äéu‚Äéc‚Äék‚Äé
3‚Äé,‚Äé2‚Äé7‚Äé5‚Äé
O‚Äéb‚Äéa‚Äém‚Äéa‚Äé ‚ÄéS‚Äén‚Äéa‚Äép‚Äés‚Äé ‚Äéa‚Äét‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äée‚Äér‚Äés‚Äé ‚Äéa‚Äét‚Äé ‚ÄéG‚Äél‚Äéi‚Äét‚Äéz‚Äéy‚Äé ‚ÄéF‚Äéu‚Äén‚Äéd‚Äér‚Äéa‚Äéi‚Äés‚Äée‚Äér‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéJ‚Äéo‚Äée‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé,‚Äé ‚ÄéB‚Äéi‚Äél‚Äél‚Äé ‚ÄéC‚Äél‚Äéi‚Äén‚Äét‚Äéo‚Äén‚Äé
O‚Äéb‚Äéa‚Äém‚Äéa‚Äé ‚ÄéS‚Äén‚Äéa‚Äép‚Äés‚Äé ‚Äéa‚Äét‚Äé ‚ÄéP‚Äér‚Äéo‚Äét‚Äée‚Äés‚Äét‚Äée‚Äér‚Äés‚Äé ‚Äéa‚Äét‚Äé ‚ÄéG‚Äél‚Äéi‚Äét‚Äéz‚Äéy‚Äé ‚ÄéF‚Äéu‚Äén‚Äéd‚Äér‚Äéa‚Äéi‚Äés‚Äée‚Äér‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéJ‚Äéo‚Äée‚Äé ‚ÄéB‚Äéi‚Äéd‚Äée‚Äén‚Äé,‚Äé ‚ÄéB‚Äéi‚Äél‚Äél‚Äé ‚ÄéC‚Äél‚Äéi‚Äén‚Äét‚Äéo‚Äén‚Äé

J‚Äéi‚Äév‚Äée‚Äé ‚ÄéT‚Äéa‚Äél‚Äék‚Äée‚Äér‚Äé ‚ÄéG‚Äée‚Äét‚Äés‚Äé ‚Äé4‚Äé0‚Äé ‚ÄéY‚Äée‚Äéa‚Äér‚Äés‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéB‚Äée‚Äéa‚Äét‚Äéi‚Äén‚Äég‚Äé ‚ÄéH‚Äéi‚Äés‚Äé ‚ÄéM‚Äéu‚Äéd‚Äés‚Äéh‚Äéa‚Äér‚Äék‚Äé ‚ÄéG‚Äéf‚Äé ‚Äét‚Äéo‚Äé ‚ÄéD‚Äée‚Äéa‚Äét‚Äéh‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚ÄéR‚Äéo‚Äéc‚Äék‚Äé ‚Äéi‚Äén‚Äé ‚ÄéY‚Äéo‚Äér‚Äék‚Äé ‚ÄéB‚Äée‚Äéa‚Äéc‚Äéh‚Äé.‚Äé

N‚Äée‚Äéx‚Äét‚Äé ‚Äét‚Äéi‚Äém‚Äée‚Äé,‚Äé ‚Äét‚Äéh‚Äéi‚Äén‚Äék‚Äé ‚Äéa‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äéc‚Äéo‚Äéo‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéf‚Äér‚Äéi‚Äée‚Äéd‚Äé ‚Äéc‚Äéh‚Äéi‚Äéc‚Äék‚Äée‚Äén‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äéd‚Äéo‚Äéu‚Äéb‚Äél‚Äée‚Äé ‚Äéb‚Äér‚Äée‚Äéa‚Äéd‚Äé,‚Äé ‚Äéb‚Äéi‚Äét‚Äéc‚Äéh‚Äé!‚Äé


N‚Äée‚Äég‚Äér‚Äéo‚Äé ‚ÄéP‚Äéo‚Äés‚Äée‚Äés‚Äé ‚Äéa‚Äés‚Äé ‚ÄéA‚Äém‚Äéa‚Äéz‚Äéo‚Äén‚Äé ‚ÄéW‚Äéo‚Äér‚Äék‚Äée‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéS‚Äét‚Äée‚Äéa‚Äél‚Äés‚Äé ‚Äéa‚Äé ‚ÄéB‚Äéu‚Äén‚Äéc‚Äéh‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéK‚Äéi‚Äéd‚Äés‚Äé'‚Äé ‚ÄéP‚Äéh‚Äéo‚Äén‚Äée‚Äés‚Äé.‚Äé


P‚Äéa‚Äéc‚Äék‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéN‚Äée‚Äég‚Äér‚Äéo‚Äé ‚ÄéG‚Äéu‚Äén‚Äém‚Äéa‚Äén‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéB‚Äée‚Äéi‚Äén‚Äég‚Äé ‚ÄéC‚Äéa‚Äéu‚Äég‚Äéh‚Äét‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äé$‚Äé8‚ÄéM‚Äé ‚ÄéW‚Äéo‚Äér‚Äét‚Äéh‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéW‚Äée‚Äée‚Äéd‚Äé.‚Äé


C‚Äéo‚Äéo‚Äén‚Äé ‚ÄéS‚Äét‚Äéa‚Äéb‚Äés‚Äé ‚ÄéW‚Äéo‚Äém‚Äéa‚Äén‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéH‚Äée‚Äé ‚ÄéR‚Äée‚Äéj‚Äée‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚ÄéH‚Äéi‚Äés‚Äé ‚ÄéA‚Äéd‚Äév‚Äéa‚Äén‚Äéc‚Äée‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéT‚Äéh‚Äée‚Äén‚Äé ‚ÄéS‚Äét‚Äéa‚Äéb‚Äés‚Äé ‚ÄéH‚Äée‚Äér‚Äé ‚ÄéT‚Äéw‚Äéi‚Äén‚Äé ‚ÄéS‚Äéi‚Äés‚Äét‚Äée‚Äér‚Äé.‚Äé


S‚Äéa‚Äén‚Äéd‚Äé ‚ÄéN‚Äéi‚Äég‚Äég‚Äée‚Äér‚Äé ‚ÄéH‚Äéa‚Äés‚Äé ‚ÄéR‚Äéa‚Äén‚Äét‚Äé ‚ÄéA‚Äéb‚Äéo‚Äéu‚Äét‚Äé ‚Äé""‚ÄéB‚Äél‚Äéu‚Äée‚Äé-‚ÄéE‚Äéy‚Äée‚Äéd‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äée‚Äé ‚ÄéD‚Äée‚Äév‚Äéi‚Äél‚Äés‚Äé""‚Äé ‚Äéo‚Äén‚Äé ‚ÄéA‚Äém‚Äée‚Äér‚Äéi‚Äéc‚Äéa‚Äén‚Äé ‚ÄéA‚Äéi‚Äér‚Äél‚Äéi‚Äén‚Äée‚Äés‚Äé ‚ÄéF‚Äél‚Äéi‚Äég‚Äéh‚Äét‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéT‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äée‚Äén‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚ÄéH‚Äéi‚Äéj‚Äéa‚Äéc‚Äék‚Äé ‚Äéi‚Äét‚Äé.‚Äé


C‚Äéu‚Äém‚Äéb‚Äée‚Äér‚Äél‚Äéa‚Äén‚Äéd‚Äé ‚ÄéC‚Äéo‚Äéu‚Äén‚Äét‚Äéy‚Äé:‚Äé ‚ÄéS‚Äéh‚Äée‚Äéb‚Äéo‚Äéo‚Äén‚Äé ‚ÄéC‚Äér‚Äéa‚Äés‚Äéh‚Äée‚Äés‚Äé ‚ÄéH‚Äée‚Äér‚Äé ‚ÄéC‚Äéa‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚ÄéT‚Äéh‚Äée‚Äén‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéo‚Äét‚Äés‚Äé ‚ÄéB‚Äéy‚Äés‚Äét‚Äéa‚Äén‚Äéd‚Äée‚Äér‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéT‚Äér‚Äéi‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚ÄéH‚Äée‚Äél‚Äép‚Äé ‚ÄéH‚Äée‚Äér‚Äé.‚Äé


T‚Äér‚Äéi‚Äéa‚Äél‚Äé ‚ÄéU‚Äén‚Äéd‚Äée‚Äér‚Äéw‚Äéa‚Äéy‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚ÄéP‚Äéu‚Äéb‚Äée‚Äéh‚Äée‚Äéa‚Äéd‚Äé ‚ÄéW‚Äéh‚Äéo‚Äé ‚ÄéK‚Äéi‚Äél‚Äél‚Äée‚Äéd‚Äé ‚Äé4‚Äé ‚ÄéP‚Äée‚Äéo‚Äép‚Äél‚Äée‚Äé ‚Äéi‚Äén‚Äé ‚ÄéT‚Äéa‚Äéc‚Äéo‚Äém‚Äéa‚Äé.‚Äé ‚Äé(‚Äé1‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéT‚Äéh‚Äée‚Äém‚Äé ‚ÄéW‚Äéh‚Äéi‚Äét‚Äée‚Äé)‚Äé


N‚Äée‚Äég‚Äér‚Äéo‚Äé ‚ÄéH‚Äéa‚Äéi‚Äét‚Äéi‚Äéa‚Äén‚Äé ‚ÄéA‚Äér‚Äér‚Äée‚Äés‚Äét‚Äée‚Äéd‚Äé ‚ÄéA‚Äéf‚Äét‚Äée‚Äér‚Äé ‚ÄéE‚Äén‚Äét‚Äée‚Äér‚Äéi‚Äén‚Äég‚Äé ‚ÄéC‚Äéo‚Äéu‚Äén‚Äét‚Äér‚Äéy‚Äé ‚ÄéI‚Äél‚Äél‚Äée‚Äég‚Äéa‚Äél‚Äél‚Äéy‚Äé.‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé ‚ÄéW‚Äée‚Äéa‚Äét‚Äéh‚Äée‚Äér‚Äé.‚Äé

T‚Äéo‚Äéd‚Äéa‚Äéy‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé0‚Äé¬∞‚Äé
/‚Äé6‚Äé4‚Äé¬∞‚Äé
3‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé3‚Äé0‚Äé ‚Äé|‚Äé ‚ÄéD‚Äéa‚Äéy‚Äé
8‚Äé0‚Äé¬∞‚Äé
3‚Äé%‚Äé
S‚Äé
1‚Äé2‚Äé
 ‚Äé
m‚Äép‚Äéh‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚Äéc‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé ‚Äés‚Äék‚Äéi‚Äée‚Äés‚Äé.‚Äé ‚ÄéH‚Äéi‚Äég‚Äéh‚Äé ‚Äéa‚Äér‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äé8‚Äé0‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚ÄéS‚Äé ‚Äéa‚Äét‚Äé ‚Äé1‚Äé0‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé

H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
7‚Äé4‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
6‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
S‚Äéu‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
7‚Äé:‚Äé2‚Äé1‚Äé ‚Äéa‚Äém‚Äé
S‚Äéu‚Äén‚Äés‚Äée‚Äét‚Äé
7‚Äé:‚Äé4‚Äé7‚Äé ‚Äép‚Äém‚Äé
S‚Äéa‚Äét‚Äé ‚Äé3‚Äé0‚Äé ‚Äé|‚Äé ‚ÄéN‚Äéi‚Äég‚Äéh‚Äét‚Äé
6‚Äé4‚Äé¬∞‚Äé
2‚Äé0‚Äé%‚Äé
S‚Äé
1‚Äé3‚Äé
 ‚Äé
m‚Äép‚Äéh‚Äé
O‚Äév‚Äée‚Äér‚Äéc‚Äéa‚Äés‚Äét‚Äé.‚Äé ‚ÄéL‚Äéo‚Äéw‚Äé ‚Äé6‚Äé4‚ÄéF‚Äé.‚Äé ‚ÄéW‚Äéi‚Äén‚Äéd‚Äés‚Äé ‚ÄéS‚Äé ‚Äéa‚Äét‚Äé ‚Äé1‚Äé0‚Äé ‚Äét‚Äéo‚Äé ‚Äé1‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé.‚Äé

H‚Äéu‚Äém‚Äéi‚Äéd‚Äéi‚Äét‚Äéy‚Äé
8‚Äé6‚Äé%‚Äé
U‚ÄéV‚Äé ‚ÄéI‚Äén‚Äéd‚Äée‚Äéx‚Äé
0‚Äé ‚Äéo‚Äéf‚Äé ‚Äé1‚Äé1‚Äé
M‚Äéo‚Äéo‚Äén‚Äér‚Äéi‚Äés‚Äée‚Äé
1‚Äé2‚Äé:‚Äé0‚Äé9‚Äé ‚Äéa‚Äém‚Äé
W‚Äéa‚Äén‚Äéi‚Äén‚Äég‚Äé ‚ÄéG‚Äéi‚Äéb‚Äéb‚Äéo‚Äéu‚Äés‚Äé
M‚Äéo‚Äéo‚Äén‚Äés‚Äée‚Äét‚Äé
1‚Äé0‚Äé:‚Äé2‚Äé1‚Äé ‚Äéa‚Äém‚Äé
S‚Äéu‚Äén‚Äé ‚Äé3‚Äé1‚Äé
C‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé1‚Äé¬∞‚Äé
/‚Äé6‚Äé9‚Äé¬∞‚Äé
1‚Äé8‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé6‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéo‚Äén‚Äé ‚Äé0‚Äé1‚Äé
C‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
8‚Äé6‚Äé¬∞‚Äé
/‚Äé6‚Äé1‚Äé¬∞‚Äé
1‚Äé1‚Äé%‚Äé
S‚Äé ‚Äé1‚Äé7‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé0‚Äé2‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé5‚Äé¬∞‚Äé
/‚Äé4‚Äé9‚Äé¬∞‚Äé
2‚Äé%‚Äé
N‚Äé ‚Äé1‚Äé6‚Äé ‚Äém‚Äép‚Äéh‚Äé
W‚Äée‚Äéd‚Äé ‚Äé0‚Äé3‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé4‚Äé¬∞‚Äé
/‚Äé4‚Äé5‚Äé¬∞‚Äé
1‚Äé%‚Äé
N‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé0‚Äé4‚Äé
S‚Äéu‚Äén‚Äén‚Äéy‚Äé
7‚Äé6‚Äé¬∞‚Äé
/‚Äé4‚Äé9‚Äé¬∞‚Äé
2‚Äé%‚Äé
E‚ÄéN‚ÄéE‚Äé ‚Äé8‚Äé ‚Äém‚Äép‚Äéh‚Äé
F‚Äér‚Äéi‚Äé ‚Äé0‚Äé5‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéS‚Äéu‚Äén‚Äén‚Äéy‚Äé
8‚Äé0‚Äé¬∞‚Äé
/‚Äé5‚Äé5‚Äé¬∞‚Äé
8‚Äé%‚Äé
E‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé0‚Äé6‚Äé
M‚Äéo‚Äés‚Äét‚Äél‚Äéy‚Äé ‚ÄéC‚Äél‚Äéo‚Äéu‚Äéd‚Äéy‚Äé
7‚Äé8‚Äé¬∞‚Äé
/‚Äé6‚Äé3‚Äé¬∞‚Äé
1‚Äé3‚Äé%‚Äé
S‚ÄéE‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéu‚Äén‚Äé ‚Äé0‚Äé7‚Äé
S‚Äéc‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äée‚Äéd‚Äé ‚ÄéT‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé6‚Äé2‚Äé¬∞‚Äé
5‚Äé8‚Äé%‚Äé
S‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
M‚Äéo‚Äén‚Äé ‚Äé0‚Äé8‚Äé
S‚Äéc‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äée‚Äéd‚Äé ‚ÄéT‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
7‚Äé9‚Äé¬∞‚Äé
/‚Äé6‚Äé6‚Äé¬∞‚Äé
4‚Äé2‚Äé%‚Äé
S‚ÄéE‚Äé ‚Äé1‚Äé4‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéu‚Äée‚Äé ‚Äé0‚Äé9‚Äé
S‚Äéc‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äée‚Äéd‚Äé ‚ÄéT‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
7‚Äé8‚Äé¬∞‚Äé
/‚Äé6‚Äé5‚Äé¬∞‚Äé
5‚Äé6‚Äé%‚Äé
S‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé5‚Äé ‚Äém‚Äép‚Äéh‚Äé
W‚Äée‚Äéd‚Äé ‚Äé1‚Äé0‚Äé
S‚Äéc‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äée‚Äéd‚Äé ‚ÄéT‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé6‚Äé2‚Äé¬∞‚Äé
5‚Äé8‚Äé%‚Äé
S‚ÄéS‚ÄéE‚Äé ‚Äé1‚Äé2‚Äé ‚Äém‚Äép‚Äéh‚Äé
T‚Äéh‚Äéu‚Äé ‚Äé1‚Äé1‚Äé
S‚Äéc‚Äéa‚Äét‚Äét‚Äée‚Äér‚Äée‚Äéd‚Äé ‚ÄéT‚Äéh‚Äéu‚Äén‚Äéd‚Äée‚Äér‚Äés‚Äét‚Äéo‚Äér‚Äém‚Äés‚Äé
7‚Äé6‚Äé¬∞‚Äé
/‚Äé6‚Äé0‚Äé¬∞‚Äé
5‚Äé8‚Äé%‚Äé
E‚Äé ‚Äé1‚Äé0‚Äé ‚Äém‚Äép‚Äéh‚Äé
F‚Äér‚Äéi‚Äé ‚Äé1‚Äé2‚Äé
A‚ÄéM‚Äé ‚ÄéS‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
7‚Äé7‚Äé¬∞‚Äé
/‚Äé6‚Äé0‚Äé¬∞‚Äé
4‚Äé0‚Äé%‚Äé
E‚ÄéN‚ÄéE‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé
S‚Äéa‚Äét‚Äé ‚Äé1‚Äé3‚Äé
S‚Äéh‚Äéo‚Äéw‚Äée‚Äér‚Äés‚Äé
7‚Äé5‚Äé¬∞‚Äé
/‚Äé5‚Äé9‚Äé¬∞‚Äé
5‚Äé8‚Äé%‚Äé
E‚Äé ‚Äé1‚Äé1‚Äé ‚Äém‚Äép‚Äéh‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

C‚Äéu‚Äér‚Äér‚Äée‚Äén‚Äét‚Äé ‚Äét‚Äéh‚Äér‚Äée‚Äéa‚Äét‚Äé:‚Äé ‚ÄéE‚Äéa‚Äés‚Äét‚Äée‚Äér‚Äé.‚Äé ‚Äéüê£

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

H‚Äé8‚Äé
H‚Äé8‚Äé'‚Äé ‚Äéi‚Äés‚Äé ‚Äén‚Äée‚Äét‚Äés‚Äép‚Äée‚Äéa‚Äék‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéw‚Äéo‚Äér‚Äéd‚Äé ‚Äé""‚ÄéH‚Äéa‚Äét‚Äée‚Äé""‚Äé.‚Äé ‚ÄéI‚Äét‚Äé ‚Äéi‚Äés‚Äé ‚Äég‚Äée‚Äén‚Äée‚Äér‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äéu‚Äés‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚Äéd‚Äée‚Äés‚Äéc‚Äér‚Äéi‚Äéb‚Äée‚Äé ‚Äéa‚Äé ‚Äép‚Äée‚Äér‚Äés‚Äéo‚Äén‚Äé ‚Äéw‚Äéh‚Äéo‚Äé ‚Äéi‚Äés‚Äé ‚Äé""‚Äéh‚Äéa‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äéo‚Äén‚Äé""‚Äé ‚Äéa‚Äén‚Äéo‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äép‚Äée‚Äér‚Äés‚Äéo‚Äén‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äér‚Äée‚Äél‚Äéi‚Äég‚Äéi‚Äéo‚Äéu‚Äés‚Äé,‚Äé ‚Äér‚Äéa‚Äéc‚Äéi‚Äéa‚Äél‚Äé,‚Äé ‚Äép‚Äéo‚Äél‚Äéi‚Äét‚Äéi‚Äéc‚Äéa‚Äél‚Äé,‚Äé ‚Äéo‚Äér‚Äé ‚Äés‚Äée‚Äéx‚Äéu‚Äéa‚Äél‚Äé ‚Äéb‚Äée‚Äél‚Äéi‚Äée‚Äéf‚Äés‚Äé.‚Äé

N‚Äée‚Äét‚Äés‚Äép‚Äée‚Äéa‚Äék‚Äé ‚Äés‚Äéu‚Äéc‚Äéh‚Äé ‚Äéa‚Äés‚Äé ‚Äét‚Äéh‚Äéi‚Äés‚Äé ‚Äéc‚Äéa‚Äén‚Äé ‚Äéb‚Äée‚Äé ‚Äéf‚Äéo‚Äéu‚Äén‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚Äém‚Äéa‚Äén‚Äéy‚Äé ‚Äég‚Äéa‚Äéy‚Äé,‚Äé ‚Äéb‚Äéi‚Äés‚Äée‚Äéx‚Äéu‚Äéa‚Äél‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéc‚Äéo‚Äén‚Äés‚Äée‚Äér‚Äév‚Äéa‚Äét‚Äéi‚Äév‚Äée‚Äé ‚Äéc‚Äéo‚Äém‚Äém‚Äéu‚Äén‚Äéi‚Äét‚Äéi‚Äée‚Äés‚Äé ‚Äéo‚Äén‚Äé ‚ÄéL‚Äéi‚Äév‚Äée‚ÄéJ‚Äéo‚Äéu‚Äér‚Äén‚Äéa‚Äél‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äév‚Äéa‚Äér‚Äéi‚Äéo‚Äéu‚Äés‚Äé ‚Äéo‚Äét‚Äéh‚Äée‚Äér‚Äé ‚Äéb‚Äél‚Äéo‚Äég‚Äég‚Äéi‚Äén‚Äég‚Äé ‚Äéw‚Äée‚Äéb‚Äés‚Äéi‚Äét‚Äée‚Äés‚Äé.‚Äé ‚ÄéI‚Äét‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äél‚Äés‚Äéo‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äée‚Äéa‚Äés‚Äéy‚Äé ‚Äéw‚Äéa‚Äéy‚Äé ‚Äéo‚Äéu‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äéa‚Äéc‚Äét‚Äéu‚Äéa‚Äél‚Äél‚Äéy‚Äé ‚Äét‚Äéa‚Äék‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äét‚Äéi‚Äém‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äét‚Äéy‚Äép‚Äée‚Äé ‚Äéa‚Äén‚Äé ‚Äée‚Äén‚Äét‚Äéi‚Äér‚Äée‚Äé ‚Äéw‚Äéo‚Äér‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äén‚Äé ‚Äéo‚Äén‚Äé-‚Äél‚Äéi‚Äén‚Äée‚Äé ‚Äéc‚Äéh‚Äéa‚Äét‚Äé.‚Äé ‚ÄéG‚Äéo‚Äéd‚Äé ‚Äéf‚Äéo‚Äér‚Äéb‚Äéi‚Äéd‚Äé ‚Äéy‚Äéo‚Äéu‚Äé ‚Äép‚Äér‚Äée‚Äés‚Äés‚Äé ‚Äéf‚Äéo‚Äéu‚Äér‚Äé ‚Äék‚Äée‚Äéy‚Äés‚Äé ‚Äéw‚Äéh‚Äée‚Äén‚Äé ‚Äéy‚Äéo‚Äéu‚Äé ‚Äéc‚Äéa‚Äén‚Äé ‚Äép‚Äér‚Äée‚Äés‚Äés‚Äé ‚ÄéT‚ÄéW‚ÄéO‚Äé ‚Äéi‚Äén‚Äés‚Äét‚Äée‚Äéa‚Äéd‚Äé.‚Äé


(‚Äé(‚Äé ‚ÄéY‚Äéo‚Äéu‚Äé ‚ÄéN‚Äée‚Äée‚Äéd‚Äén‚Äé'‚Äét‚Äé ‚ÄéW‚Äéo‚Äér‚Äér‚Äéy‚Äé.‚Äé ‚ÄéW‚Äée‚Äé ‚ÄéL‚Äéo‚Äév‚Äée‚Äé ‚ÄéO‚Äéu‚Äér‚Äé ‚ÄéR‚Äée‚Äéa‚Äéd‚Äée‚Äér‚Äés‚Äé ‚Äé)‚Äé)‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

T‚Äéh‚Äée‚Äé ‚ÄéC‚Äéi‚Äét‚Äéy‚Äé ‚ÄéP‚Äéa‚Äél‚Äéa‚Äéc‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéJ‚Äéa‚Äéi‚Äép‚Äéu‚Äér‚Äé,‚Äé ‚Äéc‚Äéo‚Äén‚Äés‚Äét‚Äér‚Äéu‚Äéc‚Äét‚Äée‚Äéd‚Äé ‚Äéb‚Äée‚Äét‚Äéw‚Äée‚Äée‚Äén‚Äé ‚Äé1‚Äé7‚Äé2‚Äé7‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äé1‚Äé7‚Äé3‚Äé2‚Äé,‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äér‚Äéo‚Äéy‚Äéa‚Äél‚Äé ‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äéc‚Äée‚Äé ‚Äél‚Äéo‚Äéc‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äéi‚Äén‚Äé ‚ÄéJ‚Äéa‚Äéi‚Äép‚Äéu‚Äér‚Äé,‚Äé ‚ÄéR‚Äéa‚Äéj‚Äéa‚Äés‚Äét‚Äéh‚Äéa‚Äén‚Äé,‚Äé ‚ÄéI‚Äén‚Äéd‚Äéi‚Äéa‚Äé.‚Äé ‚ÄéI‚Äét‚Äé ‚Äéw‚Äéa‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéc‚Äée‚Äér‚Äée‚Äém‚Äéo‚Äén‚Äéi‚Äéa‚Äél‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéa‚Äéd‚Äém‚Äéi‚Äén‚Äéi‚Äés‚Äét‚Äér‚Äéa‚Äét‚Äéi‚Äév‚Äée‚Äé ‚Äés‚Äée‚Äéa‚Äét‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéK‚Äéi‚Äén‚Äég‚Äéd‚Äéo‚Äém‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéA‚Äém‚Äéb‚Äée‚Äér‚Äé,‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéh‚Äéo‚Äém‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äéi‚Äét‚Äés‚Äé ‚Äér‚Äéu‚Äél‚Äée‚Äér‚Äés‚Äé,‚Äé ‚Äéf‚Äér‚Äéo‚Äém‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äét‚Äéi‚Äém‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äét‚Äéa‚Äét‚Äée‚Äé'‚Äés‚Äé ‚Äéf‚Äéo‚Äéu‚Äén‚Äéd‚Äéa‚Äét‚Äéi‚Äéo‚Äén‚Äé ‚Äéi‚Äén‚Äé ‚Äé1‚Äé7‚Äé2‚Äé7‚Äé ‚Äéb‚Äéy‚Äé ‚ÄéM‚Äéa‚Äéh‚Äéa‚Äér‚Äéa‚Äéj‚Äéa‚Äé ‚ÄéS‚Äéa‚Äéw‚Äéa‚Äéi‚Äé ‚ÄéJ‚Äéa‚Äéi‚Äé ‚ÄéS‚Äéi‚Äén‚Äég‚Äéh‚Äé ‚ÄéI‚ÄéI‚Äé ‚Äéu‚Äén‚Äét‚Äéi‚Äél‚Äé ‚Äé3‚Äé0‚Äé ‚ÄéM‚Äéa‚Äér‚Äéc‚Äéh‚Äé ‚Äé1‚Äé9‚Äé4‚Äé9‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äép‚Äéa‚Äél‚Äéa‚Äéc‚Äée‚Äé ‚Äéc‚Äéo‚Äén‚Äét‚Äéi‚Äén‚Äéu‚Äée‚Äés‚Äé ‚Äét‚Äéo‚Äé ‚Äéb‚Äée‚Äé ‚Äéa‚Äé ‚Äér‚Äée‚Äés‚Äéi‚Äéd‚Äée‚Äén‚Äéc‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äér‚Äéo‚Äéy‚Äéa‚Äél‚Äé ‚Äéf‚Äéa‚Äém‚Äéi‚Äél‚Äéy‚Äé ‚Äéo‚Äéf‚Äé ‚ÄéJ‚Äéa‚Äéi‚Äép‚Äéu‚Äér‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äéi‚Äés‚Äé ‚Äéa‚Äé ‚Äép‚Äéo‚Äép‚Äéu‚Äél‚Äéa‚Äér‚Äé ‚Äét‚Äéo‚Äéu‚Äér‚Äéi‚Äés‚Äét‚Äé ‚Äéa‚Äét‚Äét‚Äér‚Äéa‚Äéc‚Äét‚Äéi‚Äéo‚Äén‚Äé.‚Äé ‚ÄéT‚Äéh‚Äéi‚Äés‚Äé ‚Äép‚Äéi‚Äéc‚Äét‚Äéu‚Äér‚Äée‚Äé ‚Äés‚Äéh‚Äéo‚Äéw‚Äés‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéL‚Äée‚Äéh‚Äée‚Äér‚Äéi‚Äéy‚Äéa‚Äé ‚Äég‚Äéa‚Äét‚Äée‚Äé,‚Äé ‚Äéo‚Äén‚Äée‚Äé ‚Äéo‚Äéf‚Äé ‚Äéf‚Äéo‚Äéu‚Äér‚Äé ‚Äéi‚Äén‚Äét‚Äér‚Äéi‚Äéc‚Äéa‚Äét‚Äée‚Äél‚Äéy‚Äé ‚Äéd‚Äée‚Äés‚Äéi‚Äég‚Äén‚Äée‚Äéd‚Äé ‚Äég‚Äéa‚Äét‚Äée‚Äés‚Äé ‚Äéi‚Äén‚Äé ‚Äéa‚Äén‚Äé ‚Äéi‚Äén‚Äén‚Äée‚Äér‚Äé ‚Äéc‚Äéo‚Äéu‚Äér‚Äét‚Äéy‚Äéa‚Äér‚Äéd‚Äé ‚Äéo‚Äéf‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äép‚Äéa‚Äél‚Äéa‚Äéc‚Äée‚Äé.‚Äé ‚ÄéT‚Äéh‚Äée‚Äé ‚Äég‚Äéa‚Äét‚Äée‚Äé ‚Äéi‚Äés‚Äé ‚Äéd‚Äée‚Äéd‚Äéi‚Äéc‚Äéa‚Äét‚Äée‚Äéd‚Äé ‚Äét‚Äéo‚Äé ‚ÄéH‚Äéi‚Äén‚Äéd‚Äéu‚Äé ‚Äég‚Äéo‚Äéd‚Äé ‚ÄéG‚Äéa‚Äén‚Äée‚Äés‚Äéh‚Äéa‚Äé ‚Äé(‚Äéc‚Äéa‚Äér‚Äév‚Äée‚Äéd‚Äé ‚Äéa‚Äéb‚Äéo‚Äév‚Äée‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äéd‚Äéo‚Äéo‚Äér‚Äé)‚Äé ‚Äéw‚Äéi‚Äét‚Äéh‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äég‚Äér‚Äée‚Äée‚Äén‚Äé ‚Äéc‚Äéo‚Äél‚Äéo‚Äéu‚Äér‚Äé ‚Äér‚Äée‚Äép‚Äér‚Äée‚Äés‚Äée‚Äén‚Äét‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚Äés‚Äée‚Äéa‚Äés‚Äéo‚Äén‚Äé ‚Äéo‚Äéf‚Äé ‚Äés‚Äép‚Äér‚Äéi‚Äén‚Äég‚Äé.‚Äé

P‚Äéh‚Äéo‚Äét‚Äéo‚Äég‚Äér‚Äéa‚Äép‚Äéh‚Äé ‚Äéc‚Äér‚Äée‚Äéd‚Äéi‚Äét‚Äé:‚Äé ‚ÄéJ‚Äéa‚Äék‚Äéu‚Äéb‚Äé ‚ÄéH‚Äéa‚Äé≈Ç‚Äéu‚Äén‚Äé

.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé.‚Äé

B‚Äéy‚Äée‚Äé,‚Äé ‚Äég‚Äéu‚Äéy‚Äés‚Äé.‚Äé ‚ÄéI‚Äét‚Äé'‚Äés‚Äé ‚Äét‚Äéi‚Äém‚Äée‚Äé ‚Äéf‚Äéo‚Äér‚Äé ‚Äém‚Äée‚Äé ‚Äét‚Äéo‚Äé ‚Äép‚Äéu‚Äét‚Äé ‚Äéo‚Äén‚Äé ‚Äém‚Äéy‚Äé ‚Äés‚Äéu‚Äén‚Äég‚Äél‚Äéa‚Äés‚Äés‚Äée‚Äés‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äés‚Äép‚Äée‚Äée‚Äéd‚Äéo‚Äé ‚Äéa‚Äén‚Äéd‚Äé ‚Äég‚Äéo‚Äé ‚Äéc‚Äér‚Äéo‚Äés‚Äés‚Äé ‚Äéc‚Äéo‚Äéu‚Äén‚Äét‚Äér‚Äéy‚Äé ‚Äés‚Äék‚Äéi‚Äéi‚Äén‚Äég‚Äé ‚Äét‚Äéh‚Äér‚Äéo‚Äéu‚Äég‚Äéh‚Äéo‚Äéu‚Äét‚Äé ‚Äét‚Äéh‚Äée‚Äé ‚ÄéC‚Äéa‚Äén‚Äéa‚Äéd‚Äéi‚Äéa‚Äén‚Äé ‚ÄéA‚Äél‚Äép‚Äés‚Äé.‚Äé"
P8uLP28k,snowybot python the best python code ever written,coinwalk,JavaScript,Saturday 30th of March 2024 08:53:40 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
try:
    import selenium
except ImportError:
    subprocess.check_call([sys.executable, ""-m"", ""pip"", ""install"", 'selenium'])
finally:
    import selenium
import sys
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from selenium.webdriver.firefox.options import Options
 
 
sys.setrecursionlimit(1000000000)
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from selenium.webdriver.firefox.options import Options

options = Options()
options.add_argument(""--headless"")
driver = webdriver.Firefox(options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
gold = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
freather = 0.0	
fumble = (float(gold)/1440000)
fart = 1
base = (float(gold)/1440000)
tens = (base*10)
sevens = (base*6.9)
eights = (base*7.1)
good = ((math.floor(float(gold)/tens))*tens)
print(""should see bets"")

def go(): 
    global base
    global tens
    global sevens
    global eights
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global freather
    global good
    global fart
    global gold
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (float(balance)>float(good)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        freather = float(balance)
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (float(balance)<float(good)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        fart = 0
        freather = float(balance)
    if ((float(balance)>=(float(good)+(tens*fart))) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        base = (float(balance)/1440000)
        tens = (base*10)
        sevens = (base*6.9)
        eights = (base*7.9)
        fumble = base
        freather = 0.0
        fart = 1
        good = ((math.floor(float(balance)/tens))*tens)
    if (float(balance)>=144000.0):
        sys.exit()
    time.sleep(0.1)
    number = float(fumble)
    rounded_number = f""{number:.8f}""
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(rounded_number)
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(1.2)
    go()
    
if (1==1):
    go()"
RuSG9aMJ,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºö‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô,xiaomianao666,JavaScript,Saturday 30th of March 2024 08:43:20 AM CDT,
z7fEFntn,Untitled,dllbridge,C,Saturday 30th of March 2024 07:45:16 AM CDT,"//  –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ. –ü–æ–Ω—è—Ç—å —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä.
#include  <stdio.h>


int nArr[99] = {50, 60, 100, 200, 500, 600, 22};


////////////////////////////////////////////////
int main()                                    //  
{
	
	printf(""size of char = %d\n"", sizeof(char));
	
	for(int i = 0; i < 7; i++)
	{
	   printf(""nArr[%d] = %3d,    "", i, nArr[i] );
	   printf(""his address = %d\n"",    &nArr[i] );
    }
}



















//  –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ. –ò —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–Ω—è—Ç—å.

/*

#include  <stdio.h>


char sz[99] = ""SONY"";


////////////////////////////////////////////////
int main()                                    //  
{
	
	printf(""address of sz    = %d = %c\n"",  sz   , *sz   );
	printf(""address of sz[1] = %d = %c\n"", &sz[1],  sz[1]);	
	printf(""address of sz[2] = %d = %c\n"", &sz[2],  sz[2]);
	printf(""address of sz[3] = %d = %c\n"", &sz[3],  sz[3]);	
}

*/

















/*

#include<stdio.h>
 
int main()
{
    int narr[20];
    int max,min,imax,imin;
     max=0;
      min=0;
 for(int i=0;i<=19;i++)
 {
    printf(""narr[%d]= %d \n"", i, narr[i] );
    if(narr[i]>max){  max=narr[i]; imax=i;}
    if(narr[i]<min){ min=narr[i];imin=i;}
    
    
    
 }
 printf(""imax=%d \n"",imax);
    printf(""imin=%d \n"",imin);
 printf(""max= %d \n"", max);
     printf(""min= %d \n"", min);
    
}




#include  <stdio.h>


////////////////////////////////////////////////
void  Dima(int a, int b)                       //
{
	
     int  sum; 	    

     
     sum = a + b;
     
     printf(""sum = a + b = %d + %d = %d \n"" , sum);
}


////////////////////////////////////////////////
int main()                                    // 
{
    Dima(1, 2);
}






*/











/*

#include<stdio.h>


////////////////////////////////////////////////
void  Dima()                                  //
{
     int    a, 
	      sum, 
		    b;
		    
     sum =  0;
     a   = 10;
     b   =  5;
     
     sum = a + b;
     
     printf(""%d \n"" , sum);
}


////////////////////////////////////////////////
int main()                                    // 
{
    Dima();
}





*/



"
z27Cd2WL,Reto UF2,VictorMunoz,Java,Saturday 30th of March 2024 07:40:20 AM CDT,"package com.victormp.reto2;

import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import java.util.Random;

public class MainActivity extends AppCompatActivity {

    // Declaraci√≥n de variables
    protected TextView operacionTextView;
    protected int num1, num2, resultadoCorrecto;
    protected String enunciado;
    private final Button[] opcionesButtons = new Button[3];

    Random random = new Random();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        // Inicializar elementos de la UI
        operacionTextView = findViewById(R.id.operacionTextView);
        opcionesButtons[0] = findViewById(R.id.opcion1Button);
        opcionesButtons[1] = findViewById(R.id.opcion2Button);
        opcionesButtons[2] = findViewById(R.id.opcion3Button);

        // Iterar por todos los botones agrupados en el array
        for (Button button : opcionesButtons) {
            // Crear Click Listeners que comproben si se ha marcado la respuesta correcta
            button.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    Button btn = (Button) v;
                    // Obtener el texto del bot√≥n seleccionado y parsearlo a INT
                    int opcionSeleccionada = Integer.parseInt(btn.getText().toString());
                    // Llamar a la funci√≥n para comprobar la respuesta seleccionada por el usuario
                    verifyAnswer(opcionSeleccionada);
                }
            });
        }

        // Crear una suma inicial al arrancar MainActivity
        createSum ();
    }

    // M√©todo para crear una nueva suma / enunciado
    private void createSum () {
        // Generar n√∫meros aleatorios entre 1 y 9 para la suma
        num1 = random.nextInt(9)+1; // Bound 9, + 1 para evitar que genere un valor 0
        num2 = random.nextInt(9)+1;
        // Concatenar ambos n√∫meros para crear el String del enunciado
        enunciado = num1 + "" + "" + num2 + "" = ?"";
        operacionTextView.setText(enunciado);
        // Calcular la respuesta correcta
        resultadoCorrecto = num1 + num2;

        // Asignar el resultado correcto a uno de los botones de forma aleatoria a partir de su posici√≥n en el array
        int indexResultadoCorrecto = random.nextInt(opcionesButtons.length);
        opcionesButtons[indexResultadoCorrecto].setText(String.valueOf(resultadoCorrecto));

        // Generar valores para los otros botones (puede crear resultados err√≥neos id√©nticos al no comprobarse entre ellos)
        for (int i = 0; i < opcionesButtons.length; i++) {
            if (i != indexResultadoCorrecto) {
                // Crear un valor de confusi√≥n para asemejarlo al resultado:
                // Dividirlo entre 2 y a√±adir 1 (para evitar que confusi√≥n tenga valor 0 y coincida con la respuesta correcta)
                int confusion = random.nextInt(resultadoCorrecto / 2) + 1;
                // Aleatoriamente (50/50) suma o resta el valor de confusi√≥n al resultado
                if (random.nextBoolean()) {
                    opcionesButtons[i].setText(String.valueOf(resultadoCorrecto - confusion));
                } else {
                    opcionesButtons[i].setText(String.valueOf(resultadoCorrecto + confusion));
                }
            }
        }
    }

    // M√©todo para comprobar la respuesta seleccionada
    private void verifyAnswer(int respuestaSeleccionada){
        // Declarar la variable para reproducir efectos musicales
        MediaPlayer soundEffect;

        // Comprobar si se ha marcado la respuesta correcta
        if (respuestaSeleccionada == resultadoCorrecto) {
            // Mostrar mensaje de √©xito
            Toast.makeText(this, ""¬°Respuesta correcta!"", Toast.LENGTH_SHORT).show();
            // Reproducir sonido de respuesta correcta
            soundEffect = MediaPlayer.create(MainActivity.this, R.raw.correct);
            soundEffect.start();
            // Listener para detener la reproduci√≥n cuando termine de reproducirse y evitar bucles
            soundEffect.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
                @Override
                public void onCompletion(MediaPlayer soundEffect) {
                    soundEffect.stop();
                }
            });
            // Crear un Handler para crear una nueva suma (resetear la actividad) con 2 segundos de delay
            new Handler().postDelayed(new Runnable() {
                @Override
                public void run() {
                    createSum();
                }
            }, 2000);

        // si se ha seleccionado una respuesta errr√≥nea
        } else {
            // Mostrar mensaje de fallo
            Toast.makeText(this, ""Respuesta incorrecta, intentalo de nuevo."", Toast.LENGTH_SHORT).show();
            // Reproduducir sonido de respuesta err√≥nea
            soundEffect = MediaPlayer.create(MainActivity.this, R.raw.error);
            soundEffect.start();
            // Listener para detener la reproduci√≥n cuando termine de reproducirse y evitar bucles
            soundEffect.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
                @Override
                public void onCompletion(MediaPlayer soundEffect) {
                    soundEffect.stop();
                }
            });
        }
    }
}"
qV0f2ApZ,Unit_01,lovelyvook,C#,Saturday 30th of March 2024 07:32:26 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string firstName = ""–ò–≤–∞–Ω"";
            string lastName = ""–ò–≤–∞–Ω–æ–≤"";
            byte age = 30;
            float height = 1.8f;
            float weight = 80.4f;
            bool hasChildren = false;
            bool hasCar = true;
            int numberOfCars = 2;
            string colorOfCar1 = ""red"";
            string colorOfCar2 = ""blue"";
        }
    }
}"
Jra1sqUG,Untitled,zarkoto223,JavaScript,Saturday 30th of March 2024 07:10:12 AM CDT,"function asd(input){
    let n=Number(input[0])
    let m=Number(input[1])
    let s=Number(input[2])
    let result=''

    for(let i=m;i>=n;i--){
        if(i%3!==0){
            continue
        }
        if(i%2!==0){
            continue
        }

        if(i===s){
            break
        }
        result+=`${i} `
        
    }
    console.log(result)
}"
z9FRUWMd,Ekopyraton final?,evolse,PowerShell,Saturday 30th of March 2024 07:02:09 AM CDT,"<p style=""background:#459b69;padding:12px;border-radius:4px;font-size:16px;color:#000000;text-align:center;""><strong><span style=""color:#FFFFFF;""><span style=""font-family:verdana,geneva,sans-serif;"">PosprzƒÖtajmy Pozna≈Ñ!</span></span></strong></p>

<p style=""text-align:justify;""><span style=""font-family:verdana,geneva,sans-serif;""><span style=""font-size:14px;""><strong>22 kwietnia przypada Dzie≈Ñ Ziemi</strong> ‚Äì chyba najbardziej znane i najhuczniej obchodzone z ekologicznych ≈õwiƒÖt.</span></span></p>

<p style=""text-align:justify;""><span style=""font-family:verdana,geneva,sans-serif;""><span style=""font-size:14px;"">Jak podaje wikipedia: <em>‚ÄûDzie≈Ñ Ziemi (ang. Earth Day), znany te≈º jako ≈öwiatowy Dzie≈Ñ Ziemi lub Miƒôdzynarodowy Dzie≈Ñ Ziemi ‚Äì akcje prowadzone corocznie wiosnƒÖ, kt√≥rych celem jest promowanie postaw proekologicznych w spo≈Çecze≈Ñstwie. Organizatorzy Dnia Ziemi chcƒÖ u≈õwiadomiƒá politykom i obywatelom, jak kruchy jest ekosystem planety ludzi. Na obchody sk≈Çada siƒô zwykle wiele wydarze≈Ñ organizowanych przez r√≥≈ºnorodne instytucje.‚Äù</em></span><br />
<br />
<span style=""font-size:14px;"">Do listy tych r√≥≈ºnorodnych i niewƒÖtpliwie szacownych instytucji do≈ÇƒÖcza i <strong>GEOpyra</strong>. WykorzystujƒÖc oferowane przez UrzƒÖd Miasta Poznania wsparcie ‚Äì narzƒôdzia do sprzƒÖtania (worki i rƒôkawice) oraz odbi√≥r work√≥w z zebranymi odpadami, chcemy przy≈ÇƒÖczyƒá siƒô do wielkiej akcji wiosennego sprzƒÖtania. A ≈ºe nasza troska o przyrodƒô i Ziemiƒô powinna byƒá nie sprintem, a maratonem, zapraszamy serdecznie na:</span></span></p>

<p style=""text-align:center;""><span style=""font-family:verdana,geneva,sans-serif;""><span style=""font-size:14px;""><span style=""font-size:20px;""><span style=""color:#008000;""><strong><img alt src=""https://www.dropbox.com/scl/fi/mxuotzjocy9c8lgq27bmd/ecology-and-environment.png?rlkey=x5f57a6czv21raweqgrz9pnt4&amp;dl=0"" /><img alt src=""https://www.dropbox.com/scl/fi/d7ewpyg4eiawmsfxthohc/cito-200.png?rlkey=ieiapu3l4g01irvy89u5hhiwn&amp;raw=1"" style=""width:120px;height:120px;"" /></strong></span></span></span><br />
<span style=""color:#02874D;""><span style=""font-size:14px;""><span style=""font-size:20px;""><strong>EkoPyraton 2024</strong></span></span><br />
<br />
<span style=""font-size:14px;""><strong>W ramach tego cyklu, w dniach 18-22 kwietnia, spotkamy siƒô codziennie w r√≥≈ºnych obszarach miasta, nie tylko wykorzystujƒÖc czas na geopogawƒôdki i integracjƒô, ale i zrobienie czego≈õ dobrego dla planety!</strong></span></span></span><br />
¬†</p>

<p style=""background:#459b69;padding:12px;border-radius:4px;font-size:16px;color:#000000;text-align:center;""><span style=""color:#FFFFFF;""><span style=""font-family:verdana,geneva,sans-serif;""><strong>Termin i harmonogram</strong></span></span></p>

<p><span style=""font-family:verdana,geneva,sans-serif;""><span style=""font-size:14px;""><strong>Termin: </strong>22 kwietnia, godzina 17:30<img alt src=""https://img.geocaching.com:443/229d9a42-fdf9-44af-856c-eff47d51fb40.png"" style=""width:250px;height:250px;float:right;border-width:3px;border-style:solid;border-color:rgb(224, 230, 204);"" /><br />
<strong>Gdzie: </strong>Tereny Nadwarcia≈Ñskie pod Mostem Lecha (Wsch√≥d)</span></span></p>

<p><span style=""font-family:verdana,geneva,sans-serif;""><span style=""font-size:14px;""><strong>Plan dzia≈Çania:<br />
<span style=""font-size:12px;"">17:30</span></strong><span style=""font-size:12px;""> - Zbi√≥rka na wsp√≥≈Çrzƒôdnych i zaopatrzenie<br />
<strong>17:45</strong> - Rozpoczƒôcia sprzƒÖtania<br />
<strong>18:45</strong> - Znoszenie work√≥w do miejsca sk≈Çadowania (waypoint)<br />
<strong>19:00</strong> - Zako≈Ñczenie sprzƒÖtania i pamiƒÖtkowe zdjƒôcie</span><br />
<br />
<strong>Organizator zapewnia: </strong>worki na ≈õmieci, rƒôkawiczki jednorazowe. </span></span></p>

<p><span style=""font-family:verdana,geneva,sans-serif;""><span style=""font-size:14px;"">Uwaga: Warto zabraƒá ze sobƒÖ w≈Çasne rƒôkawiczki materia≈Çowe, dla lepszej ochrony</span></span></p>

<p>¬†</p>

<p style=""text-align:center;""><span style=""font-family:verdana,geneva,sans-serif;""><span style=""color:#02874D;""><span style=""font-size:14px;""><strong>Bez wzglƒôdu na to, czy keszujesz 3 lata, czy 3 miesiƒÖce, ile typ√≥w keszy pokazuje ci project-gc oraz czy¬†z za≈Ço≈ºenia uczestniczysz, czy nie uczestniczysz w eventach - tym razem nie mo≈ºe Ciebie zabraknƒÖƒá.</strong></span></span></span></p>

<p style=""text-align:center;""><span style=""font-family:verdana,geneva,sans-serif;""><span style=""color:#02874D;""><span style=""font-size:14px;""><strong>A byƒá mo≈ºe na najwytrwalszych bƒôdzie czekaƒá jaka≈õ niespodzianka? ;)</strong></span></span></span></p>

<p style=""text-align:center;""><span style=""font-family:verdana,geneva,sans-serif;""><span style=""color:#02874D;""><span style=""font-size:14px;""><strong>Do zobaczenia!</strong></span></span></span></p>

<p style=""text-align:right;""><span style=""font-family:verdana,geneva,sans-serif;""><span style=""color:#FFFFFF;""><span style=""font-size:8px;""><em>Image source: flaticon.com</em></span></span></span></p>
"
gGP7wNL5,data881,TestGuy1,JSON,Saturday 30th of March 2024 07:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '2b4d4c4b1b9fde3259c93fa0e59214a94257ef89a2fae8d40c6a2ef48a466033193252cc080cae2ad0f5b63fba336287887eef683fc0e15b4e5aac4f64d3bbd42e3e98edf714f871673eb0a2fef368f49dd7ebd05a5df36ac932256e31c408c3b414f1caf6fe542a19aa6bf31c709c7d6b1ecafa3c7e5900e818e8a2c676c8ec',
  otherdata: [
    '164c692b319d0cdc318c67d2c8fcfb80',
    'a1275244940e25dece60731cbce76ae3',
    '2fefa46da22d142d08e02041686e0e7c',
    '2103c58eb0a1d4a58185d6e03abbe3cd',
    '0025106f92c25a12ba25629d61690847',
    'f6fc17e824cf533585f4831e7b3a7671',
    'd3180e8dcd1c42e9daa273a6efa3b16d',
    'eb281e0ce5f5d1aa79922ccf3f8e1e5d'
  ]
}"
WWnPCP2t,Untitled,MisterQuirk,Python,Saturday 30th of March 2024 06:52:12 AM CDT,"# #Task 1
#
# a = [2, 4, 6, 8]
# b = {1, 3, 5, 7}
# a_itera = iter(a)
# b_iterb = iter(b)
# next(iter(a_itera))
# print(next(iter(a_itera)))
# next(iter(b_iterb))
# print(next(iter(b_iterb)))
# 4
# 3

#Task 2

# str = '–ü–ü–®'
# iterator = iter(str)
#
# for x in iterator:
#     print(x)
#–ü
#–ü
#–®

#Task 3

# d = {1: 'bee', 2: 'racoon', 3: 'snake'}
# iterator = iter(d)
# print(d[next(iterator)])
#bee

#Task 4

# a = [int(s) for s in range(1, 20)]
# iterator = iter(a)
# print(9 in iterator)
# print(9 in iterator)
#True
#False

#Task 5

# a = (i ** 2 for i in range(10) if i % 3 != 0)
# print(next(a))
# print(next(a))
# print(next(a))
#1
#4
#16

#Task 6

# a = (i ** 2 for i in range(1, 6))
# iter_a = iter(a)
# print(next(iter_a))
# next(iter_a)
# print(next(iter_a))
# next(iter_a)
# print(next(iter_a))

#Task 7

# a = []
# for i in ('–ü–∏–∫–∏', '–ë—É–±–∏', '–ß–µ—Ä–≤–∏', '–ö—Ä–µ—Å—Ç–∏'):
#     for y in ('6', '7', '8', '9', 'J', 'Q', 'K', 'A'):
#         a.append(i + ' ' + y)
# a_iter = iter(a)
# for z in range(1,36):
#     print(next(a_iter))
"
TStkHfd6,09. Left and Right Sum,myrdok123,Java,Saturday 30th of March 2024 06:24:35 AM CDT,"package ForLoop;

import java.util.Scanner;

public class P09LeftAndRightSum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        int sumLeft = 0;
        int sumRight = 0;

        for (int i = 1; i <= 2 * n ; i++) {

            int currentNumber = Integer.parseInt(scanner.nextLine());
            if(i <= n){
                sumLeft += currentNumber;
            }else {
                sumRight += currentNumber;
            }
        }

        if(sumLeft == sumRight){
            System.out.printf(""Yes, sum = %d"", sumLeft);
        }else {
            int diff = Math.abs(sumLeft - sumRight);
            System.out.printf(""No, diff = %d"", diff);
        }


    }
}
"
hdagpvAt,08. Number sequence,myrdok123,Java,Saturday 30th of March 2024 06:06:48 AM CDT,"package ForLoop;

import java.util.Scanner;

public class P08NumberSequence {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int countNumber = Integer.parseInt(scanner.nextLine());

        int maxNumber = Integer.MIN_VALUE;
        int minNumber = Integer.MAX_VALUE;

        for (int i = 1; i <= countNumber ; i++) {

            int currentNumber = Integer.parseInt(scanner.nextLine());

            if (currentNumber <= minNumber){
                minNumber = currentNumber;
            }

            if(currentNumber >= maxNumber){
                maxNumber = currentNumber;
            }



        }

        System.out.printf(""Max number: %d%n"", maxNumber);
        System.out.printf(""Min number: %d%n"", minNumber);

    }
}
"
y84wuFTB,07. Sum Numbers,myrdok123,Java,Saturday 30th of March 2024 06:06:15 AM CDT,"package ForLoop;

import java.util.Scanner;

public class P07SumNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int countNumbers = Integer.parseInt(scanner.nextLine());

        int sum = 0;

        for (int i = 1; i <= countNumbers ; i++) {

            int currentNumber = Integer.parseInt(scanner.nextLine());

            sum += currentNumber; // sum = sum + currentNumber
        }

        System.out.println(sum);


    }
}
"
rLXn81MY,psimedia cmake fix,KukuRuzo,C++,Saturday 30th of March 2024 06:05:40 AM CDT,"diff --git a/CMakeLists.txt b/CMakeLists.txt
index bc18428..c15c139 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -125,8 +125,8 @@ endif()
 if(BUILD_DEMO)
     add_subdirectory(demo)
     add_subdirectory(gstplugin)
-    add_subdirectory(gstprovider)
 endif()
 if(BUILD_PSIPLUGIN)
     add_subdirectory(psiplugin)
 endif()
+add_subdirectory(gstprovider)
diff --git a/psiplugin/CMakeLists.txt b/psiplugin/CMakeLists.txt
index 5ea0f8b..59cfde3 100644
--- a/psiplugin/CMakeLists.txt
+++ b/psiplugin/CMakeLists.txt
@@ -19,7 +19,7 @@ get_filename_component(ABS_PLUGINS_ROOT_DIR ""${CMAKE_CURRENT_LIST_DIR}/.."" ABSOL
 set(PLUGINS_ROOT_DIR ""${ABS_PLUGINS_ROOT_DIR}"" CACHE STRING ""Plugins root path. Path where include directory placed"")
 
 if(NOT BUILD_DEMO)
-    include(${ABS_PLUGINS_ROOT_DIR}/gstprovider/CMakeLists.txt)
+    #include(${ABS_PLUGINS_ROOT_DIR}/gstprovider/CMakeLists.txt)
     include_directories(
         ${ABS_PLUGINS_ROOT_DIR}/gstprovider
         ${ABS_PLUGINS_ROOT_DIR}/gstprovider/devices
"
EsaF8PRd,Untitled,Josif_tepe,C++,Saturday 30th of March 2024 06:05:33 AM CDT,"#include <iostream>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <vector>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    
    vector<vector<char>> mat(n, vector<char>(m));
    bool visited[n][m];
    int si, sj;
    int ei, ej;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            visited[i][j] = false;
            if(mat[i][j] == 'S') {
                si = i;
                sj = j;
            }
            if(mat[i][j] == 'E') {
                ei = i;
                ej = j;
            }
        }
    }
    queue<int> q;
    q.push(si);
    q.push(sj);
    q.push(0);
    
    int di[] = {-1, 1, 0, 0};
    int dj[] = {0, 0, -1, 1};
    
    while(!q.empty()) {
        int ci = q.front();
        q.pop();
        int cj = q.front();
        q.pop();
        int cekor = q.front();
        q.pop();
        
        if(ci == ei and cj == ej) {
            cout << cekor << endl;
            return 0;
        }
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and mat[ti][tj] != '#' and !visited[ti][tj]) {
                q.push(ti);
                q.push(tj);
                q.push(cekor + 1);
                visited[ti][tj] = true;
            }
        }
    }
    return 0;
}
/**
 
 ....S##...
 E....##..
 ##..##
 ...###...
 
 
 **/
"
jLEj51Ma,Untitled,35657,C++,Saturday 30th of March 2024 05:59:49 AM CDT,"#include <iostream>

using namespace std;

class Set {

public:

    struct Node {
        int value;
        Node* left;
        Node* right;
        Node* parent;
    };

    Set() : root_(nullptr), size_(0) {}

    void insert(const int& val) {
        if (root_ == nullptr) {
            root_ = new Node{ val, nullptr, nullptr, nullptr };
            size_++;
            return;
        }
        Node* parent = nullptr;
        Node* node = root_;
        while (node != nullptr && node->value != val) {
            parent = node;
            node = node->value > val ? node->left : node->right;
        }
        if (node == nullptr) {
            node = new Node{ val, nullptr, nullptr, parent };
            parent->value > val ? parent->left = node : parent->right = node;
            size_++;
        }
    }

    void erase(const int& val) {
        Node* parent = nullptr;
        Node* node = root_;
        while (node != nullptr && node->value != val) {
            parent = node;
            node = node->value > val ? node->left : node->right;
        }
        if (node != nullptr) {
            if (node->left == nullptr && node->right == nullptr) {
                if (node == root_) {
                    root_ = nullptr;
                }
                else {
                    node == parent->right ? parent->right = nullptr : parent->left = nullptr;
                }
                delete node;
            }
            else if (node->left == nullptr) {
                node->right->parent = node->parent;
                if (node == root_) {
                    root_ = node->right;
                }
                else {
                    node == parent->right ? parent->right = node->right : parent->left = node->right;
                }
                delete node;
            }
            else if (node->right == nullptr) {
                node->left->parent = node->parent;
                if (node == root_) {
                    root_ = node->left;
                }
                else {
                    node == parent->right ? parent->right = node->left : parent->left = node->left;
                }
                delete node;
            }
            else {
                Node* temp = min(node->right);
                node->value = temp->value;
                if (temp->right != nullptr) {
                    temp->right->parent = temp->parent;
                }
                temp == temp->parent->right ? temp->parent->right = temp->right : temp->parent->left = temp->right;
                delete temp;
            }
            size_--;
        }
    }

    Node* min(Node* node) {
        if (node != nullptr) {
            while (node->left != nullptr) {
                node = node->left;
            }
        }
        return node;
    }

    Node* max(Node* node) {
        if (node != nullptr) {
            while (node->right != nullptr) {
                node = node->right;
            }
        }
        return node;
    }

    void print() {
        print(root_);
        cout << endl;
    }

    int size() const {
        return size_;
    }

private:

    void print(Node* node) {
        if (node != nullptr) {
            print(node->left);
            cout << node->value << "" "";
            print(node->right);
        }
    }

    Node* root_;
    int size_;
};


int main() {

    int arr[]{ 45,30,50,27,39,90,15,70,103 };

    Set st;

    for (int i = 0; i < 9; i++) {
        st.insert(arr[i]);
    }

    st.print();
    cout << st.size() << endl;

    st.erase(15);
    st.erase(50);
    st.erase(45);

    st.print();
    cout << st.size() << endl;

}"
1H1eggj3,Untitled,Josif_tepe,C++,Saturday 30th of March 2024 05:59:37 AM CDT,"#include <iostream>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <vector>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    
    vector<vector<char>> mat(n, vector<char>(m));
    bool visited[n][m];
    int si, sj;
    int ei, ej;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            visited[i][j] = false;
            if(mat[i][j] == 'S') {
                si = i;
                sj = j;
            }
            if(mat[i][j] == 'E') {
                ei = i;
                ej = j;
            }
        }
    }
    queue<int> q;
    q.push(si);
    q.push(sj);
    q.push(0);
    
    while(!q.empty()) {
        int ci = q.front();
        q.pop();
        int cj = q.front();
        q.pop();
        int cekor = q.front();
        q.pop();
        
        if(ci == ei and cj == ej) {
            cout << cekor << endl;
            return 0;
        }
        if(ci + 1 < n and mat[ci + 1][cj] != '#' and !visited[ci + 1][cj]) {
            visited[ci + 1][cj] = true;
            q.push(ci + 1);
            q.push(cj);
            q.push(cekor + 1);
        }
        if(ci - 1 >= 0 and mat[ci - 1][cj] != '#' and !visited[ci - 1][cj]) {
            visited[ci - 1][cj] = true;
            q.push(ci - 1);
            q.push(cj);
            q.push(cekor + 1);
        }
        if(cj + 1 < m and mat[ci][cj + 1] != '#' and !visited[ci][cj + 1]) {
            visited[ci][cj + 1] = true;
            q.push(ci);
            q.push(cj + 1);
            q.push(cekor + 1);
        }
        if(cj - 1 >= 0 and mat[ci][cj - 1] != '#' and !visited[ci][cj - 1]) {
            visited[ci][cj - 1] = true;
            q.push(ci);
            q.push(cj - 1);
            q.push(cekor + 1);
        }
    }
    return 0;
}
/**
 
 ....S##...
 E....##..
 ##..##
 ...###...
 
 
 **/
"
f65NQKZM,Untitled,evstratbg,JSON,Saturday 30th of March 2024 05:58:26 AM CDT,"{""openapi"":""3.1.0"",""info"":{""title"":""FastAPI"",""version"":""0.1.0""},""paths"":{""/sessions"":{""post"":{""tags"":[""Sessions""],""summary"":""Create Session"",""operationId"":""create_session_sessions_post"",""parameters"":[{""name"":""X-User-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""User ID""}}],""responses"":{""201"":{""description"":""Successful Response"",""content"":{""application/json"":{""schema"":{}}}},""422"":{""description"":""Validation Error"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/HTTPValidationError""}}}}}}},""/sessions/{session_id}"":{""get"":{""tags"":[""Sessions""],""summary"":""Get Info By Session Id"",""operationId"":""get_info_by_session_id_sessions__session_id__get"",""parameters"":[{""name"":""session_id"",""in"":""path"",""required"":true,""schema"":{""type"":""integer"",""title"":""Session Id""}}],""responses"":{""200"":{""description"":""Successful Response"",""content"":{""application/json"":{""schema"":{}}}},""422"":{""description"":""Validation Error"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/HTTPValidationError""}}}}}}},""/daily_pricing_batch"":{""get"":{""tags"":[""Daily Pricing Batch""],""summary"":""Get Daily Pricing Batch"",""operationId"":""get_daily_pricing_batch_daily_pricing_batch_get"",""parameters"":[{""name"":""X-Session-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""Session ID""}},{""name"":""X-User-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""User ID""}}],""responses"":{""200"":{""description"":""Successful Response"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/DailyPricingBatchResponse""}}}},""401"":{""description"":""Invalid session""},""404"":{""description"":""No more days to fill""},""422"":{""description"":""Validation Error"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/HTTPValidationError""}}}}}}},""/prices"":{""post"":{""tags"":[""Prices""],""summary"":""Upload Prices"",""operationId"":""upload_prices_prices_post"",""parameters"":[{""name"":""X-Session-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""Session ID""}},{""name"":""X-User-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""User ID""}}],""requestBody"":{""required"":true,""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/PricesRequest""}}}},""responses"":{""201"":{""description"":""Prices uploaded successfully"",""content"":{""application/json"":{""schema"":{}}}},""409"":{""description"":""Data conflict""},""401"":{""description"":""Invalid session""},""422"":{""description"":""Validation Error"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/HTTPValidationError""}}}}}}},""/results"":{""get"":{""tags"":[""Results""],""summary"":""Get Results"",""operationId"":""get_results_results_get"",""parameters"":[{""name"":""ds"",""in"":""query"",""required"":true,""schema"":{""type"":""string"",""format"":""date"",""title"":""Ds""}},{""name"":""X-Session-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""Session ID""}},{""name"":""X-User-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""User ID""}}],""responses"":{""200"":{""description"":""Successful Response"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/Result""}}}},""409"":{""description"":""Data conflict""},""401"":{""description"":""Invalid session""},""201"":{""description"":""Prices uploaded successfully""},""422"":{""description"":""Validation Error"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/HTTPValidationError""}}}}}}},""/metrics"":{""get"":{""tags"":[""Metrics""],""summary"":""Get Metrics"",""operationId"":""get_metrics_metrics_get"",""parameters"":[{""name"":""X-Session-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""Session ID""}},{""name"":""X-User-Id"",""in"":""header"",""required"":true,""schema"":{""type"":""integer"",""title"":""User ID""}}],""responses"":{""200"":{""description"":""Successful Response"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/MetricsResponse""}}}},""422"":{""description"":""Validation Error"",""content"":{""application/json"":{""schema"":{""$ref"":""#/components/schemas/HTTPValidationError""}}}}}}},""/liveness"":{""get"":{""summary"":""Liveness"",""operationId"":""liveness_liveness_get"",""responses"":{""200"":{""description"":""Successful Response"",""content"":{""application/json"":{""schema"":{}}}}}}}},""components"":{""schemas"":{""DailyPricingBatchResponse"":{""properties"":{""ds"":{""type"":""string"",""format"":""date"",""title"":""Ds""},""sku_ids"":{""prefixItems"":[{""type"":""integer""}],""type"":""array"",""maxItems"":1,""minItems"":1,""title"":""Sku Ids""},""user_ids"":{""prefixItems"":[{""type"":""integer""}],""type"":""array"",""maxItems"":1,""minItems"":1,""title"":""User Ids""}},""type"":""object"",""required"":[""ds"",""sku_ids"",""user_ids""],""title"":""DailyPricingBatchResponse""},""HTTPValidationError"":{""properties"":{""detail"":{""items"":{""$ref"":""#/components/schemas/ValidationError""},""type"":""array"",""title"":""Detail""}},""type"":""object"",""title"":""HTTPValidationError""},""Metrics"":{""properties"":{""revenue"":{""type"":""integer"",""title"":""Revenue""},""margin"":{""type"":""integer"",""title"":""Margin""},""orders"":{""type"":""integer"",""title"":""Orders""}},""type"":""object"",""required"":[""revenue"",""margin"",""orders""],""title"":""Metrics""},""MetricsResponse"":{""properties"":{""control"":{""$ref"":""#/components/schemas/Metrics""},""predicted"":{""$ref"":""#/components/schemas/Metrics""}},""type"":""object"",""required"":[""control"",""predicted""],""title"":""MetricsResponse""},""PricesRequest"":{""properties"":{""ds"":{""type"":""string"",""format"":""date"",""title"":""Ds""},""sku_ids"":{""items"":{""type"":""integer""},""type"":""array"",""maxItems"":55000,""minItems"":55000,""title"":""Sku Ids""},""user_ids"":{""items"":{""type"":""integer""},""type"":""array"",""maxItems"":55000,""minItems"":55000,""title"":""User Ids""},""prices"":{""items"":{""type"":""integer""},""type"":""array"",""maxItems"":55000,""minItems"":55000,""title"":""Prices""}},""type"":""object"",""required"":[""ds"",""sku_ids"",""user_ids"",""prices""],""title"":""PricesRequest""},""Result"":{""properties"":{""ds"":{""items"":{""type"":""string"",""format"":""date""},""type"":""array"",""title"":""Ds""},""sku_id"":{""items"":{""type"":""integer""},""type"":""array"",""title"":""Sku Id""},""user_id"":{""items"":{""type"":""integer""},""type"":""array"",""title"":""User Id""},""price"":{""items"":{""type"":""integer""},""type"":""array"",""title"":""Price""},""is_bought"":{""items"":{""type"":""boolean""},""type"":""array"",""title"":""Is Bought""}},""type"":""object"",""required"":[""ds"",""sku_id"",""user_id"",""price"",""is_bought""],""title"":""Result""},""ValidationError"":{""properties"":{""loc"":{""items"":{""anyOf"":[{""type"":""string""},{""type"":""integer""}]},""type"":""array"",""title"":""Location""},""msg"":{""type"":""string"",""title"":""Message""},""type"":{""type"":""string"",""title"":""Error Type""}},""type"":""object"",""required"":[""loc"",""msg"",""type""],""title"":""ValidationError""}}}}"
ZBF6G2Pr,Untitled,m3m3mm,C++,Saturday 30th of March 2024 05:47:46 AM CDT,"#include <algorithm>
#include <iostream>
#include <set>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAX_RESULT_DOCUMENT_COUNT = 5;

string ReadLine() {
    string s;
    getline(cin, s);
    return s;
}

int ReadLineWithNumber() {
    int result = 0;
    cin >> result;
    ReadLine();
    return result;
}

vector<string> SplitIntoWords(const string& text) {
    vector<string> words;
    string word;
    for (const char c : text) {
        if (c == ' ') {
            if (!word.empty()) {
                words.push_back(word);
                word.clear();
            }
        } else {
            word += c;
        }
    }
    if (!word.empty()) {
        words.push_back(word);
    }

    return words;
}

struct DocumentContent {
    int id = 0;
    vector<string> words;
};

struct Document {
    int id;
    int relevance;
};

bool HasDocumentGreaterRelevance(const Document& lhs, const Document& rhs) {
    return lhs.relevance > rhs.relevance;
}

    set<string> ParseQuery(const string& text, const set<string>& stop_words) {
    set<string> query_words;
    for (const string& word : SplitIntoWords(text)) {
        query_words.insert(word);
    }
    return query_words;
}

void AddDocument(vector<DocumentContent>& documents, const set<string>& stop_words, int document_id,
                 const string& document) {
    const vector<string> words = SplitIntoWords(document);
    documents.push_back({document_id, words});
}

set<string> ParseStopWords(const string& text) {
    set<string> stop_words;
    for (const string& word : SplitIntoWords(text)) {
        stop_words.insert(word);
    }
    return stop_words;
}
class SearchServer {
public:
    struct DocumentContent
    {
    int id = 0;
    vector<string> words;
    };
    
    void AddDocument(int document_id, const string& document) {
        set<string> stop_words = words_;
        const vector<string> words = SplitIntoWordsNoStop(document);
        documents_.push_back({document_id, words});
    }
    
    void SetStopWords(const string& text)
    {
        
    for (const string& word : SplitIntoWords(text))
        {
        stop_words_.insert(word);
        }
    }
    
    vector<Document> FindTopDocuments(const string& raw_query) {
    const set<string> query_words = ParseQuery(raw_query, stop_words_);
    auto matched_documents = FindAllDocuments(query_words);

    sort(matched_documents.begin(), matched_documents.end(), HasDocumentGreaterRelevance);
    if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT) {
        matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
    }
    return matched_documents;
}
       
private:
    vector<DocumentContent> documents_;
    set<string> words_;
    
    set<string> stop_words_;
    
    vector<Document> FindAllDocuments(const set<string>& query_words) {
    vector<Document> matched_documents;
    for (const auto& document : documents_) {
        const int relevance = MatchDocument(document, query_words);
        if (relevance > 0) {
            matched_documents.push_back({document.id, relevance});
        }
    }
    return matched_documents;
}
    
    vector<string> SplitIntoWordsNoStop(const string& text) {
    vector<string> words;
    for (const string& word : SplitIntoWords(text)) {
        if (words_.count(word) == 0) {
            words.push_back(word);
        }
    }
    return words;
}
    
    static int MatchDocument(const DocumentContent& content, const set<string>& query_words) {
    if (query_words.empty()) {
        return 0;
    }
    set<string> matched_words;
    for (const string& word : content.words) {
        if (matched_words.count(word) != 0) {
            continue;
        }
        if (query_words.count(word) != 0) {
            matched_words.insert(word);
        }
    }
    return static_cast<int>(matched_words.size());
}
    
};

SearchServer CreateSearchServer()
    {
        SearchServer search_server;
        cout << ""Input the stop-words, split with Space: ""s  << endl;
        const string stop_words_joined = ReadLine();
        search_server.SetStopWords(stop_words_joined);
        vector<DocumentContent> documents;
        cout << ""Input the amount of documents: ""s << endl;
        const int document_count = ReadLineWithNumber();
        for (int id = 0; id < document_count; ++id)
        {
            cout << ""Input document info: ""s;
            string info = ReadLine();
            search_server.AddDocument(id, info);
        }
        
        return search_server;
    }

    int main() {
        SearchServer search_server;
    const string stop_words_joined = ReadLine();
    const set<string> stop_words = ParseStopWords(stop_words_joined);
    
    // Read documents
    vector<DocumentContent> documents;
    const int document_count = ReadLineWithNumber();
    for (int document_id = 0; document_id < document_count; ++document_id)
    {
        AddDocument(documents, stop_words, document_id, ReadLine());
    }

    const string query = ReadLine();
    for (auto [document_id, relevance] : search_server.FindTopDocuments(query))
    {
        cout << ""{ document_id = ""s << document_id << "", relevance = ""s << relevance << "" }""s
             << endl;
    }
}
"
GiZi1SNh,C# Storage mock,prr133f,C#,Saturday 30th of March 2024 05:41:34 AM CDT,"using System.IO;
using System.Text.Json;
namespace storage
{
	public class Storage
	{
		private const string __storageFile = ""Data/Data.txt"";
		private System.Collections.Generic.List<Data> __data;
		public Storage()
		{
			try
			{
				__data = LoadData();
			}
			catch(DirectoryNotFoundException ex)
			{
				System.Console.WriteLine($""Directory not found: {ex.Data}"");
			}
			catch (FileNotFoundException ex)
			{
				System.Console.WriteLine($""File not found: {ex.Data}"");
			}
		}

        public struct Data
        {
			public int id;
			public string value;
        }

		public System.Collections.Generic.List<Data> GetList()
		{
			return __data;
		}

		public void AddData(Data row)
		{
			__data.Add(row);
			SaveRow(row);
		}

		public Data GetDataById(int id)
		{
			foreach(Data row in __data)
			{
				if(row.id == id)
				{
					return row;
				}
			}
			throw new RowNotFoundException($""Row with id {id} not found"");
		}

		public void DeleteData(int id)
		{
            foreach (Data row in __data)
            {
                if (row.id == id)
                {
					__data.Remove(row);
                }
            }
        }

		private void SaveRow(Data row)
		{
			string json = JsonSerializer.Serialize(row);
			using StreamWriter writer = new StreamWriter(__storageFile, true);
			writer.WriteLine(json);
		}

		private System.Collections.Generic.List<Data> LoadData()
		{
			System.Collections.Generic.List<Data> data = new System.Collections.Generic.List<Data>();
            using StreamReader reader = new StreamReader(__storageFile);
            string? line;
            while ((line = reader.ReadLine()) != null)
            {
				Data temp = JsonSerializer.Deserialize<Data>(line);
                data.Add(temp);
            }
			return data;
        }
    }

    class RowNotFoundException : System.Exception
    {
        public RowNotFoundException(string message)
            : base(message)
        { }
    }
}

"
6epmFbv2,Turbine Monitor,tbouttier,Lua,Saturday 30th of March 2024 05:38:11 AM CDT,"-- Define the side where the Advanced Peripherals block reader is connected
local readerSide = ""back""  -- Change this to the side where your block reader is placed

-- Define the side where the ComputerCraft monitor is connected
local monitorSide = ""left""  -- Change this to the side where your monitor is placed

-- Wrap the block reader peripheral
local reader = peripheral.wrap(readerSide)

-- Function to clear the monitor screen
local function clearMonitor()
    local monitor = peripheral.wrap(monitorSide)
    monitor.clear()
    monitor.setCursorPos(1, 1)
end

-- Function to update and display turbine data on the monitor
local function updateMonitor()
    -- Get turbine data from the block reader
    local turbineData = reader.getTurbineData()

    -- Clear the monitor
    clearMonitor()

    -- Check if turbineData is not nil
    if turbineData then
        -- Display turbine data on the monitor
        local monitor = peripheral.wrap(monitorSide)
        monitor.setTextScale(1)
        monitor.setCursorPos(1, 1)
        monitor.write(""Turbine Data:\n"")
        monitor.write(""---------------\n"")
        monitor.write(""Status: "" .. turbineData.status .. ""\n"")
        monitor.write(""Blade Efficiency: "" .. turbineData.bladeEfficiency .. ""\n"")
        monitor.write(""Rotor Speed: "" .. turbineData.rotorSpeed .. ""\n"")
        monitor.write(""Energy Produced: "" .. turbineData.energyProduced .. ""\n"")
        monitor.write(""Fluid Flow Rate: "" .. turbineData.fluidFlowRate .. ""\n"")
    else
        -- Display error message if turbine data is nil
        local monitor = peripheral.wrap(monitorSide)
        monitor.setTextScale(1)
        monitor.setCursorPos(1, 1)
        monitor.write(""Error: Turbine data not available.\n"")
    end
end

-- Function to handle monitor touch events
local function handleTouch(_, _, _, _, _, player)
    if player == ""YourUsername"" then  -- Replace ""YourUsername"" with your Minecraft username
        updateMonitor()
    end
end

-- Initialize the monitor
updateMonitor()

-- Register event listeners
event.listen(""monitor_touch"", handleTouch)

-- Wait for events
while true do
    os.sleep(1)
end
"
3X5nbB7B,head_procedure,stronk_8s,T-SQL,Saturday 30th of March 2024 05:30:51 AM CDT,"USE [temp]

GO

CREATE PROCEDURE FamilyHeadInsert

			@Username nvarchar(100),-- FamilyHead Table
			@FirstName nvarchar(60),
			@MiddleName nvarchar(60),
			@LastName nvarchar(60),
			@BirthDate datetime2(7),
			@Email nvarchar(200),
																															
			@GenderName nvarchar(10),
			@VillageName nvarchar(50),
			@CasteName nvarchar(30),
			@MarritalName nvarchar(40),

			@EducationName nvarchar(50),--Literacy Table
			@Year smallint,
			@Insitute nvarchar(60),
			@Description nvarchar(100),

			@OccupationName nvarchar(50),-- Profession Table
			@WorkPlace nvarchar(80),

			@AddressLine1 nvarchar(200),--Address Table
			@AddressLine2 nvarchar(200),
			@NationName nvarchar(50),
			@StateName nvarchar(50),
			@DistrictName nvarchar(50),
			@Pincode int,
			@AddressRecordPriority bit,

			@CountryCode smallint,--User Table
			@MobileNo bigint,
			@Password nvarchar(200),

			@MobileRecordPriority bit,--Mobile Table
			
			@IsAccountLocked bit,
			@FailedLoginAttempts smallint,
			@PasswordResetToken uniqueidentifier,

			@RecordStatus tinyint,         
			@CreatedOn datetime2(7),
			@CreatedBy int
			
			AS

			BEGIN
			
			DECLARE 
					@FamilyHeadId uniqueidentifier,

					@GenderId smallint,
					@VillageId bigint,
					@CasteId int,
					@MarritalId smallint,
					@EducationId int,
					@OccupationId int,
					
					@NationId smallint,
					@StateId bigint,
					@DistrictId bigint,

					@CountryCodeId smallint;

			--FETCH ALL ID
				SELECT @GenderId = [Id] FROM [dbo].[Gender] WHERE [Name] = @GenderName;
				SELECT @VillageId= [Id] FROM [dbo].[Village] WHERE [Name] = @VillageName;
				SELECT @CasteId= [Id] FROM [dbo].[Caste] WHERE [Name] = @CasteName;
				SELECT @MarritalId = [Id] FROM [dbo].[Marrital] WHERE [Status] = @MarritalName;
				SELECT @EducationId = [Id] FROM [dbo].[Education] WHERE [Education] = @EducationName;
				SELECT @OccupationId = [Id] FROM [dbo].[Occupation] WHERE [Occupation] = @OccupationName;

				SELECT @NationId = [Id] FROM [dbo].[Nation] WHERE [Name] = @NationName;
				SELECT @StateId = [Id] FROM [dbo].[State] WHERE [Name] = @StateName;
				SELECT @DistrictId = [Id] FROM [dbo].[District] WHERE [Name] = @DistrictName;
	
				SELECT @CountryCodeId = [Id] FROM [dbo].[CountryCode] WHERE [CountryCode] = @CountryCode; 


			--FAMILY HEAD INSERT
			INSERT INTO [dbo].[FamilyHead]
			([Username],[FirstName],[MiddleName],[LastName],[BirthDate],[Email],[GenderId],[VillageId],[CasteId],[MarritalId],[RecordStatus],[CreatedOn],[CreatedBy])
			VALUES
			(@Username,@FirstName,@MiddleName,@LastName,@BirthDate,@Email,@GenderId,@VillageId,@CasteId,@MarritalId,@RecordStatus,@CreatedOn,@CreatedBy);

			--FETCH HEAD ID IN LOCAL VARIABLE
			SELECT @FamilyHeadId = [Id] FROM [dbo].[FamilyHead] WHERE [Username] = @Username;
			
			--LITERACY INSERT
			INSERT INTO [dbo].[Literacy]
			([FamilyHeadId],[EducationId],[Year],[Insitute],[Description],[RecordStatus],[CreatedOn],[CreatedBy])
			VALUES
			(@FamilyHeadId,@EducationId,@Year,@Insitute,@Description,@RecordStatus,@CreatedOn,@CreatedBy)

			--PROFESSION INSERT
			INSERT INTO [dbo].[Profession]
			([FamilyHeadId],[OccupationId],[WorkPlace],[RecordStatus],[CreatedOn],[CreatedBy])
			VALUES
			(@FamilyHeadId,@OccupationId,@WorkPlace,@RecordStatus,@CreatedOn,@CreatedBy);

			

			
			--ADDRESS INSERT
			INSERT INTO [dbo].[Address]
			([FamilyHeadId],[AddressLine1],[AddressLine2],[NationId],[StateId],[DistrictId],[Pincode],[RecordPriority],[RecordStatus],[CreatedOn],[CreatedBy])
			VALUES
			(@FamilyHeadId,@AddressLine1,@AddressLine2,@NationId,@StateId,@DistrictId,@Pincode,@AddressRecordPriority,@RecordStatus,@CreatedOn,@CreatedBy);


			--USER INSERT			
			INSERT INTO [dbo].[User]
			([FamilyHeadId],[Username],[FirstName],[MiddleName],[LastName],[Email],[CountryCodeId],[MobileNo],[Password],[RecordStatus],[CreatedOn],[CreatedBy])
			VALUES
			(@FamilyHeadId,@Username,@FirstName,@MiddleName,@LastName,@Email,@CountryCodeId,@MobileNo,@Password,@RecordStatus,@CreatedOn,@CreatedBy);


			--MOBILE INSERT
			INSERT INTO [dbo].[Mobile]
			([FamilyHeadId],[CountryCodeId],[MobileNo],[RecordPriority],[RecordStatus],[CreatedOn],[CreatedBy])
			VALUES
			(@FamilyHeadId,@CountryCodeId,@MobileNo,@MobileRecordPriority,@RecordStatus,@CreatedOn,@CreatedBy);

END






GO	"
2n4hYiuG,Untitled,Josif_tepe,C++,Saturday 30th of March 2024 05:30:38 AM CDT,"#include <iostream>
#include <cmath>
#include <algorithm>
#include <map>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    int niza[n];
    for(int i = 0; i < n; i++) {
        cin >> niza[i];
    }
    sort(niza, niza + n);
    
    int S = 0, E = n - 1;
    int res = 0;
    while(S < E) {
        while(niza[S] > 0 and S < E) {
            niza[S]--;
            E--;
            res++;
        }
        S++;
    }
    cout << res << endl;
    
    return 0;
}
"
CPnn1KCZ,06. Vowels Sum,myrdok123,Java,Saturday 30th of March 2024 05:20:03 AM CDT,"package ForLoop;

import java.util.Scanner;

public class P06VowelsSum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String  input = scanner.nextLine();

        int sum = 0;

        //–±—É–∫–≤–∞	    a	e	i	o	u
        //—Å—Ç–æ–π–Ω–æ—Å—Ç	1	2	3	4	5

        for (int i = 0; i < input.length(); i++) {

            char currentSymbol = input.charAt(i);

            switch (currentSymbol){

                case 'a':
                    sum += 1; // sum = sum + 1
                    break;
                case 'e':
                    sum += 2;
                    break;
                case 'i':
                    sum += 3;
                    break;
                case 'o':
                    sum += 4;
                    break;
                case 'u':
                    sum += 5;
                    break;
            }
        }

        System.out.println(sum);
    }
}
"
LmgUcZjb,05. Character Sequence,myrdok123,Java,Saturday 30th of March 2024 05:19:15 AM CDT,"package ForLoop;

import java.util.Scanner;

public class P05CharacterSequence {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        String input = scanner.nextLine();

        for (int i = 0; i <= input.length() - 1; i++) {

            char symbol = input.charAt(i);

            System.out.println(symbol);
        }

    }
}
"
30R4iNum,04. Even Powers of 2,myrdok123,Java,Saturday 30th of March 2024 05:18:29 AM CDT,"package ForLoop;

import java.util.Scanner;

public class P04EvenPowersOf2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int number = Integer.parseInt(scanner.nextLine());



        for (int i = 0; i <= number ; i+=2) {


            System.out.println(Math.pow(2, i));

        }


    }
}
"
