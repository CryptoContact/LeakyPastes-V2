id,title,username,language,date,content
SAxzk1mn,Untitled,dekxrma,Python,Saturday 9th of December 2023 11:52:51 AM CDT,"import concurrent.futures, time
from selenium import webdriver
from selenium.webdriver.chrome.service import Service

def work():
    driver_options = webdriver.ChromeOptions()

    driver_options.add_argument('--headless=new')
    driver_options.add_argument('--disable-gpu')
    driver_options.add_argument('--no-sandbox')

    chromedriver_path = ""chromedriver""

    service = Service(chromedriver_path)

    driver = webdriver.Chrome(service=service, options=driver_options)
    
    driver.get('https://google.com')
    print(driver.title)
    
    time.sleep(10)
    
threads = []

with concurrent.futures.ThreadPoolExecutor(max_workers=20) as executor:
    for _ in range(20):
        threads.append(executor.submit(work))
        time.sleep(1)
        
    for thread in threads:
        try:
            print(thread.result())
        except Exception as exception:
            print(exception)"
1aQbeE35,simple snippet,Arexils,Python,Saturday 9th of December 2023 11:46:16 AM CDT,"
class BackButton(miru.Button):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(
            label=kwargs.pop('label', 'Back'),
            style=hikari.ButtonStyle.PRIMARY,
            *args,
            **kwargs,
        )

    async def callback(self, ctx: miru.ViewContext, **kwargs) -> None:
        # How do I make it go back to the beginning?
        ...


class BuildOptionButton(miru.Button):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(
            *args,
            **kwargs,
            style=hikari.ButtonStyle.PRIMARY,
        )

    async def callback(self, ctx: miru.ViewContext, **kwargs) -> None:
        # self.view.clear_items()
        self.view.add_item(
            miru.TextSelect(
                placeholder=f'option',
                options=[
                    miru.SelectOption(label=""Option 1""),
                    miru.SelectOption(label=""Option 2""),
                ],
            )
        )
        self.view.add_item(BackButton())
        await ctx.message.edit('next menu', components=self.view)


class AccountBaseMenu(miru.View):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.add_item(BuildOptionButton(label='add some'))
        self.add_item(BuildOptionButton(label='add other'))

    @miru.button(label='Apply', style=hikari.ButtonStyle.SUCCESS, row=2)
    async def accept_button(self, button: miru.Button, ctx: miru.ViewContext) -> None: ...

    @miru.button(label='Cancel', style=hikari.ButtonStyle.DANGER, row=2)
    async def cancel_button(self, button: miru.Button, ctx: miru.ViewContext) -> None: ...



@test_plugin.command
@lightbulb.command(
    'test_1',
    'nothing',
    pass_options=True,
    auto_defer=True,
)
@lightbulb.implements(lightbulb.SlashCommand)
async def command_test_1(
    ctx: lightbulb.Context,
):
    view_first = AccountBaseMenu(timeout=300)
    message = await ctx.respond(
        Embed(
            title=f'some name',
            description='some text',
        ),
        components=view_first,
    )
    await view_first.start(message)
    await view_first.wait()

"
X4NRdDPg,Test Railway Station,bAngelov,Python,Saturday 9th of December 2023 11:24:09 AM CDT,"from collections import deque
from unittest import TestCase, main

from project.railway_station import RailwayStation


class TestRailwayStation(TestCase):

    def setUp(self):
        self.station = RailwayStation(""MyRailway"")

    def test_initialization(self):
        self.assertEqual(self.station.name, ""MyRailway"")
        self.assertEqual(self.station._RailwayStation__name, ""MyRailway"")
        self.assertEqual(type(self.station.arrival_trains), deque)
        self.assertEqual(type(self.station.departure_trains), deque)

    def test_name(self):
        self.assertEqual(self.station.name,""MyRailway"")
        with self.assertRaises(ValueError) as ve:
            self.station.name = ""rai""
        self.assertEqual(str(ve.exception), ""Name should be more than 3 symbols!"")
        self.assertEqual(self.station.name, ""MyRailway"")
        with self.assertRaises(ValueError) as ve:
            self.station.name = ""ra""
        self.assertEqual(str(ve.exception), ""Name should be more than 3 symbols!"")
        self.assertEqual(self.station.name, ""MyRailway"")

    def test_new_arrival_on_board(self):
        self.assertEqual(self.station.arrival_trains, deque())
        self.station.new_arrival_on_board(""Anyone"")
        self.assertEqual(self.station.arrival_trains[-1],""Anyone"")

    def test_train_has_arrived(self):
        self.station.new_arrival_on_board(""Anyone"")
        self.station.new_arrival_on_board(""Someone"")
        self.assertEqual(self.station.train_has_arrived(""Someone""), ""There are other trains to arrive before Someone."")
        self.assertEqual(self.station.arrival_trains, deque([""Anyone"",""Someone""]))
        self.assertEqual(self.station.train_has_arrived(""Anyone""), ""Anyone is on the platform and will leave in 5 minutes."")
        self.assertEqual(self.station.arrival_trains, deque([""Someone""]))
        self.assertEqual(self.station.departure_trains, deque([""Anyone""]))
        self.assertEqual(self.station.arrival_trains, deque([""Someone""]))

    def test_train_has_left(self):
        self.station.new_arrival_on_board(""Anyone"")
        self.station.train_has_arrived(""Anyone"")
        self.assertEqual(self.station.train_has_left(""Anyone""), True)
        self.assertEqual(self.station.train_has_left(""Someone""), False)
        self.station.new_arrival_on_board(""Anyone"")
        self.station.train_has_arrived(""Anyone"")
        self.station.new_arrival_on_board(""Someone"")
        self.station.train_has_arrived(""Someone"")
        self.assertEqual(self.station.train_has_left(""Someone""), False)

if __name__ == '__main__':
    main()
"
VBtabc4E,03.Phonebook,Yonkow,JavaScript,Saturday 9th of December 2023 11:20:35 AM CDT,"function attachEvents() {
    const baseURL = 'http://localhost:3030/jsonstore/phonebook';

    const loadBtn = document.getElementById('btnLoad');
    const createBtn = document.getElementById('btnCreate');
    const person = document.getElementById('person');
    const phone = document.getElementById('phone');
    const phonebook = document.getElementById('phonebook');

    let allPhones = {};
    loadBtn.addEventListener('click', loadPhoneBook);
    createBtn.addEventListener('click', createNewPhone);

    async function loadPhoneBook () {
        phonebook.innerHTML = '';

        const response = await fetch(baseURL);
        allPhones = await response.json();

        for (const [key, elements] of Object.entries(allPhones)) {
            const deleteBtn = document.createElement('button');
            deleteBtn.innerText = 'Delete';
            
            const li = document.createElement('li');
            li.id = key;
            li.textContent = `${elements.person}: ${elements.phone}`
            li.appendChild(deleteBtn);
            phonebook.appendChild(li);

            deleteBtn.addEventListener('click', deletePhone);

            async function deletePhone () {

                await fetch(`http://localhost:3030/jsonstore/phonebook/${key} `, {
                        method: 'DELETE',
                    });
                li.remove();

            };
        }

    }

    async function createNewPhone () {
        await fetch(baseURL, {
            method: 'POST',
            body: JSON.stringify({
                person: person.value,
                phone: phone.value
            })
        })
        loadPhoneBook();
        person.value = """";
        phone.value = """";
    };

    // async function deletePhone(event) {

    //     let currentPhone = event.target.parentNode;
    //     let currentkey = currentPhone.id;
    //     await fetch(`${baseURL}/${currentkey}`, {
    //         method: 'DELETE'
    //     });
    //     currentPhone.remove();
    // }
}

attachEvents();"
YP0aGtJV,BTC Wallet Credentials have been reset,castlclass_20,GetText,Saturday 9th of December 2023 11:10:25 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
Cocumazzo5i:kudXwV on 212.224.93.130
You can connect via SSH.
Regards"
mYsjxk23,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Saturday 9th of December 2023 11:05:41 AM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-558529"
m4VvDkhd,Guess Game,quhluh,Python,Saturday 9th of December 2023 10:56:28 AM CDT,"import random

def guess_the_number():
    print(""Welcome to Guess the Number!"")
    print(""I'm thinking of a number between 1 and 100."")

    # Generate a random number between 1 and 100
    secret_number = random.randint(1, 100)

    attempts = 0

    while True:
        try:
            # Get the player's guess
            guess = int(input(""Enter your guess: ""))
            attempts += 1

            # Check if the guess is correct
            if guess == secret_number:
                print(f""Congratulations! You guessed the number in {attempts} attempts."")
                break
            elif guess < secret_number:
                print(""Too low! Try again."")
            else:
                print(""Too high! Try again."")

        except ValueError:
            print(""Invalid input. Please enter a valid number."")

if __name__ == ""__main__"":
    guess_the_number()
Copy and paste this code into a Python file (e.g., guess_the_number.py) and run it. This simple game asks the player to guess a randomly generated number between 1 and 100. The game provides feedback on whether the guess is too high, too low, or correct. The game continues until the player correctly guesses the number."
4it6CRxT,kdenlive-23.08.3.ebuild,jlpoole,Bash,Saturday 9th of December 2023 10:32:56 AM CDT,"lpoole@eos ~/work/kdenlive $ cat -n /var/db/repos/gentoo/kde-apps/kdenlive/kdenlive-23.08.3.ebuild 
     1  # Copyright 1999-2023 Gentoo Authors
     2  # Distributed under the terms of the GNU General Public License v2
     3
     4  EAPI=8
     5
     6  ECM_DESIGNERPLUGIN=""true""
     7  ECM_HANDBOOK=""optional""
     8  ECM_QTHELP=""true""
     9  ECM_TEST=""true""
    10  KFMIN=5.106.0
    11  QTMIN=5.15.9
    12  inherit ecm gear.kde.org optfeature
    13
    14  DESCRIPTION=""Non-linear video editing suite by KDE""
    15  HOMEPAGE=""https://kdenlive.org/en/""
    16
    17  LICENSE=""GPL-3""
    18  SLOT=""5""
    19  KEYWORDS=""amd64 arm64 ~ppc64 ~riscv x86""
    20  IUSE=""gles2-only semantic-desktop v4l""
    21
    22  RESTRICT=""test"" # segfaults, bug 684132
    23
    24  DEPEND=""
    25          >=dev-qt/qtconcurrent-${QTMIN}:5
    26          >=dev-qt/qtdbus-${QTMIN}:5
    27          >=dev-qt/qtdeclarative-${QTMIN}:5[widgets]
    28          >=dev-qt/qtgui-${QTMIN}:5[gles2-only=]
    29          >=dev-qt/qtmultimedia-${QTMIN}:5
    30          >=dev-qt/qtnetwork-${QTMIN}:5
    31          >=dev-qt/qtnetworkauth-${QTMIN}:5
    32          >=dev-qt/qtquickcontrols2-${QTMIN}:5
    33          >=dev-qt/qtsvg-${QTMIN}:5
    34          >=dev-qt/qtwidgets-${QTMIN}:5
    35          >=dev-qt/qtxml-${QTMIN}:5
    36          >=kde-frameworks/karchive-${KFMIN}:5
    37          >=kde-frameworks/kbookmarks-${KFMIN}:5
    38          >=kde-frameworks/kcodecs-${KFMIN}:5
    39          >=kde-frameworks/kcompletion-${KFMIN}:5
    40          >=kde-frameworks/kconfig-${KFMIN}:5
    41          >=kde-frameworks/kconfigwidgets-${KFMIN}:5
    42          >=kde-frameworks/kcoreaddons-${KFMIN}:5
    43          >=kde-frameworks/kcrash-${KFMIN}:5
    44          >=kde-frameworks/kdbusaddons-${KFMIN}:5
    45          >=kde-frameworks/kdeclarative-${KFMIN}:5
    46          >=kde-frameworks/kfilemetadata-${KFMIN}:5
    47          >=kde-frameworks/kguiaddons-${KFMIN}:5
    48          >=kde-frameworks/ki18n-${KFMIN}:5
    49          >=kde-frameworks/kiconthemes-${KFMIN}:5
    50          >=kde-frameworks/kio-${KFMIN}:5
    51          >=kde-frameworks/kitemviews-${KFMIN}:5
    52          >=kde-frameworks/kjobwidgets-${KFMIN}:5
    53          >=kde-frameworks/knewstuff-${KFMIN}:5
    54          >=kde-frameworks/knotifications-${KFMIN}:5
    55          >=kde-frameworks/knotifyconfig-${KFMIN}:5
    56          >=kde-frameworks/kservice-${KFMIN}:5
    57          >=kde-frameworks/ktextwidgets-${KFMIN}:5
    58          >=kde-frameworks/kwidgetsaddons-${KFMIN}:5
    59          >=kde-frameworks/kxmlgui-${KFMIN}:5
    60          >=kde-frameworks/purpose-${KFMIN}:5
    61          >=kde-frameworks/solid-${KFMIN}:5
    62          >=media-libs/mlt-7.14.0[ffmpeg,frei0r,qt5,sdl,xml]
    63          v4l? ( media-libs/libv4l )
    64  ""
    65  RDEPEND=""${DEPEND}
    66          >=dev-qt/qtquickcontrols-${QTMIN}:5
    67          media-video/ffmpeg[encode,libass,sdl,X]
    68          media-video/mediainfo
    69  ""
    70  BDEPEND=""sys-devel/gettext""
    71
    72  src_configure() {
    73          local mycmakeargs=(
    74                  $(cmake_use_find_package v4l LibV4L2)
    75          )
    76          ecm_src_configure
    77  }
    78
    79  pkg_postinst() {
    80          ecm_pkg_postinst
    81          optfeature ""VP8 and VP9 codec support"" ""media-video/ffmpeg[vpx]""
    82  }
jlpoole@eos ~/work/kdenlive $ 
"
sNanJFDk,4 Lines of Text SVG Sample,jlpoole,XML,Saturday 9th of December 2023 10:27:50 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width=""1920""
   height=""1080""
   viewBox=""0 0 1920 1080""
   version=""1.1""
   id=""svg5""
   inkscape:version=""1.2.2 (b0a8486541, 2022-12-01)""
   sodipodi:docname=""4_lines_sample.svg""
   xmlns:inkscape=""http://www.inkscape.org/namespaces/inkscape""
   xmlns:sodipodi=""http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd""
   xmlns=""http://www.w3.org/2000/svg""
   xmlns:svg=""http://www.w3.org/2000/svg"">
  <sodipodi:namedview
     id=""namedview7""
     pagecolor=""#ffffff""
     bordercolor=""#000000""
     borderopacity=""0.25""
     inkscape:showpageshadow=""2""
     inkscape:pageopacity=""0.0""
     inkscape:pagecheckerboard=""0""
     inkscape:deskcolor=""#d1d1d1""
     inkscape:document-units=""px""
     showgrid=""false""
     inkscape:zoom=""0.6578125""
     inkscape:cx=""928.8361""
     inkscape:cy=""552.58907""
     inkscape:window-width=""1920""
     inkscape:window-height=""1029""
     inkscape:window-x=""0""
     inkscape:window-y=""27""
     inkscape:window-maximized=""1""
     inkscape:current-layer=""layer1"" />
  <defs
     id=""defs2"" />
  <g
     inkscape:label=""Layer 1""
     inkscape:groupmode=""layer""
     id=""layer1"">
    <text
       xml:space=""preserve""
       style=""font-size:48px;font-family:C059;-inkscape-font-specification:'C059, Normal';writing-mode:lr-tb;text-orientation:upright;fill:#f27c13;stroke:#fd914c""
       x=""362.82874""
       y=""220.92822""
       id=""text353""><tspan
         sodipodi:role=""line""
         id=""tspan351""
         x=""362.82874""
         y=""220.92822"">This is line 1.</tspan><tspan
         sodipodi:role=""line""
         x=""362.82874""
         y=""280.92822""
         id=""tspan355"">This is line 2</tspan><tspan
         sodipodi:role=""line""
         x=""362.82874""
         y=""340.92822""
         id=""tspan357"">This is line 3</tspan><tspan
         sodipodi:role=""line""
         x=""362.82874""
         y=""400.92822""
         id=""tspan359"">This is line 4</tspan></text>
  </g>
</svg>
"
rtS5L3Yh,AoC 2023 Day 09,illuminati229,Python,Saturday 9th of December 2023 10:24:59 AM CDT,"from time import time


def timer_func(func):
    # This function shows the execution time of
    # the function object passed
    def wrap_func(*args, **kwargs):
        t1 = time()
        result = func(*args, **kwargs)
        t2 = time()
        print(f'Function {func.__name__!r} executed in {(t2 - t1):.4f}s')
        return result

    return wrap_func


def difference(a: list):
    if len(a) == 1:
        return []
    b = []
    for i, x in enumerate(a[:-1]):
        b.append(a[i+1] - x)
    return b


def is_constant(a):
    c = a[0]
    for x in a[1:]:
        if x != c:
            return False
    return True


def next_value(a):
    d = difference(a)
    if is_constant(d):
        return a[-1] + d[0]
    else:
        return a[-1] + next_value(d)


def prior_value(a):
    d = difference(a)
    if is_constant(d):
        return a[0] - d[0]
    else:
        return a[0] - prior_value(d)


@timer_func
def day09(filepath, part2=False):
    with open(filepath) as fin:
        lines = [line.strip() for line in fin.readlines()]

    hist_sum = 0
    if not part2:
        for line in lines:
            hist_sum += next_value([int(x) for x in line.split()])
    else:
        for line in lines:
            hist_sum += prior_value([int(x) for x in line.split()])

    return hist_sum


def main():
    assert day09('test09') == 114
    print(f""Part 1: {day09('input09')}"")

    assert day09('test09', True) == 2
    print(f""Part 2: {day09('input09', True)}"")


if __name__ == '__main__':
    main()
"
DTiDTgQ9,Untitled,Shiny_,C++,Saturday 9th of December 2023 10:17:01 AM CDT,"// LD_CharacterFunctionLibrary.h

#pragma once

#include ""CoreMinimal.h""
#include ""Kismet/BlueprintFunctionLibrary.h""
#include ""GameFramework/CharacterMovementComponent.h""
#include ""LD_CharacterFunctionLibrary.generated.h""

UCLASS()
class LD_API ULD_CharacterFunctionLibrary : public UBlueprintFunctionLibrary
{
    GENERATED_BODY()

public:
    UFUNCTION(BlueprintCallable, Category = ""Character Movement"")
    static void SmoothSprinting(
        UCharacterMovementComponent* CharMovementComp,
        bool bIsSprinting,
        float DeltaTime,
        float AccelerationTime,
        float DecelerationTime,
        float WalkingSpeed,
        float SprintingSpeed,
        float& Alpha,
        bool& bWasSprinting,
        float& TimeSinceMaxSpeedReached
    );
};



// LD_CharacterFunctionLibrary.cpp

#include ""LD_CharacterFunctionLibrary.h""

// Declare static variables for debug purposes
static float DebugAccumulatedDeltaTime = 0.0f;
static float DebugAccumulatedAlpha = 0.0f;
static int32 CallCount = 0;

void ULD_CharacterFunctionLibrary::SmoothSprinting(
    UCharacterMovementComponent* CharMovementComp,
    bool bIsSprinting,
    float DeltaTime,
    float AccelerationTime,
    float DecelerationTime,
    float WalkingSpeed,
    float SprintingSpeed,
    float& Alpha,
    bool& bWasSprinting,
    float& TimeSinceMaxSpeedReached)
{
    if (!CharMovementComp) return;

    // Update Alpha based on whether we are sprinting or not
    if (bIsSprinting != bWasSprinting)
    {
        Alpha = bIsSprinting ? 0.0f : 1.0f;
        bWasSprinting = bIsSprinting;
        TimeSinceMaxSpeedReached = 0.0f;
    }

    if (bIsSprinting)
    {
        // Accelerate towards the sprinting speed
        Alpha = FMath::Clamp(Alpha + (DeltaTime / AccelerationTime), 0.0f, 1.0f);
    }
    else
    {
        // Decelerate towards the walking speed
        Alpha = FMath::Clamp(Alpha - (DeltaTime / DecelerationTime), 0.0f, 1.0f);
    }

    float NewSpeed = FMath::InterpEaseInOut(WalkingSpeed, SprintingSpeed, Alpha, 2.0f);
    CharMovementComp->MaxWalkSpeed = NewSpeed;

    // Debug logging for DeltaTime accumulation over 10 seconds
// #if UE_BUILD_DEVELOPMENT || UE_BUILD_DEBUG
    DebugAccumulatedDeltaTime += DeltaTime;
    DebugAccumulatedAlpha += (DeltaTime / AccelerationTime);

    if (GEngine)
    {
        GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Green, FString::Printf(TEXT(""DeltaTime: %f, Alpha: %f""), DeltaTime, Alpha));
    }

    /* if (GEngine && DebugAccumulatedDeltaTime >= 10.0f)
    {
        CallCount++;

        // On-screen debug messages
        GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Red, FString::Printf(TEXT(""Function called %d times, DeltaTime: %f, Accumulated Alpha: %f""), CallCount, DeltaTime, DebugAccumulatedAlpha));

        // Prepare log text
        FString LogText = FString::Printf(TEXT(""Alpha: %f, Sprinting: %s, Speed: %f, DeltaTime: %f\n""),
            Alpha,
            bIsSprinting ? TEXT(""True"") : TEXT(""False""),
            CharMovementComp->MaxWalkSpeed,
            DeltaTime);

        // Define a log file name with a complete path
        FString LogFilename = FPaths::ProjectDir() + TEXT(""Log/SprintLog.txt"");

        // Append the log text to the file
        FFileHelper::SaveStringToFile(LogText, *LogFilename, FFileHelper::EEncodingOptions::AutoDetect, &IFileManager::Get(), FILEWRITE_Append);

        // Reset the accumulated time and alpha
        DebugAccumulatedDeltaTime = 0.0f;
        DebugAccumulatedAlpha = 0.0f;
    }*/
// #endif
    bWasSprinting = bIsSprinting;
}




// LD_Character.h

#pragma once

#include ""CoreMinimal.h""
#include ""GameFramework/Character.h""
#include ""LD_Character.generated.h""

UCLASS()
class LD_API ALD_Character : public ACharacter
{
    GENERATED_BODY()

public:
    ALD_Character();

    virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override;

    // Functions to handle sprinting input
    UFUNCTION(BlueprintCallable, Category = ""Character Movement"")
    void StartSprinting();
    
    UFUNCTION(BlueprintCallable, Category = ""Character Movement"")
    void StopSprinting();

    void EndGracePeriod();


    UFUNCTION()
    void OnHit(UPrimitiveComponent* HitComp, AActor* OtherActor, UPrimitiveComponent* OtherComp, FVector NormalImpulse, const FHitResult& Hit);

    // Function to be called by the timer
    UFUNCTION(BlueprintCallable, Category = ""Character Movement"")
    void UpdateSprintState();

    virtual void Tick(float DeltaTime) override;

    // Movement parameters
    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = ""Character Movement"")
    float WalkingSpeed = 600.0f;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = ""Character Movement"")
    float SprintingSpeed = 10000.0f;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = ""Character Movement"")
    float AccelerationTime = 10.0f;

    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = ""Character Movement"")
    float DecelerationTime = 2.0f;

    // Sprint state variables
    UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = ""Character Movement"")
    float Alpha = 0.0f;

    UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = ""Character Movement"")
    bool bWasSprinting = false;

    UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = ""Character Movement"")
    float TimeSinceMaxSpeedReached = 0.0f;

    UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = ""Character Movement"")
    FVector LastForwardVector;

private:
    FTimerHandle DecelerationTimerHandle;

    static constexpr float GracePeriodDuration = 0.5f;
    bool bWithinGracePeriod = false;
    FTimerHandle GracePeriodTimerHandle;

    bool bHasCollided = false; // Flag to indicate a recent collision

    bool bIsSprinting = false;
    
    FTimerHandle SprintTimerHandle;
    
    bool bSprintKeyPressed = false;
    
    float SprintingTime;

    void DecelerateCharacter();
    
    virtual void Landed(const FHitResult& Hit) override;
    
//    virtual void NotifyHit(class UPrimitiveComponent* MyComp, AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, const FHitResult& Hit) override;

    void StartDeceleration();
};




// LD_Character.cpp

#include ""LD_Character.h""
#include ""LD_CharacterFunctionLibrary.h""
#include ""Components/CapsuleComponent.h""

ALD_Character::ALD_Character()
{
    PrimaryActorTick.bCanEverTick = true;
    LastForwardVector = GetActorForwardVector();
    GetCapsuleComponent()->OnComponentHit.AddDynamic(this, &ALD_Character::OnHit);
}

void ALD_Character::SetupPlayerInputComponent(UInputComponent* PlayerInputComponent)
{
    Super::SetupPlayerInputComponent(PlayerInputComponent);
    PlayerInputComponent->BindAction(""Sprint"", IE_Pressed, this, &ALD_Character::StartSprinting);
    PlayerInputComponent->BindAction(""Sprint"", IE_Released, this, &ALD_Character::StopSprinting);
}

void ALD_Character::Tick(float DeltaTime)
{
    Super::Tick(DeltaTime);
    if (bSprintKeyPressed && !bIsSprinting && GetCharacterMovement()->Velocity.Size() >= WalkingSpeed)
    {
        StartSprinting();
    }

    // If sprinting, increment the sprinting time
    if (bIsSprinting)
    {
        SprintingTime += DeltaTime;
    }

    if (GEngine && bIsSprinting)
    {
        GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Green, FString::Printf(TEXT(""Sprinting Time: %f""), SprintingTime));
    }

}

void ALD_Character::StartSprinting()
{
    float CurrentSpeed = GetCharacterMovement()->Velocity.Size();
    if (CurrentSpeed >= WalkingSpeed)
    {
        bIsSprinting = true;
        if (!bWithinGracePeriod)
        {
            Alpha = FMath::Clamp(CurrentSpeed / SprintingSpeed, 0.0f, 1.0f);
        }
        GetWorldTimerManager().SetTimer(SprintTimerHandle, this, &ALD_Character::UpdateSprintState, 0.01f, true);
        bWithinGracePeriod = false;
    }
    bSprintKeyPressed = true;
    SprintingTime = 0.0f;  // Reset the sprinting timer
}

void ALD_Character::StopSprinting()
{
    bSprintKeyPressed = false;
    GetWorldTimerManager().SetTimer(GracePeriodTimerHandle, this, &ALD_Character::EndGracePeriod, GracePeriodDuration, false);
}

void ALD_Character::EndGracePeriod()
{
    bWithinGracePeriod = false;
    if (!bSprintKeyPressed && bIsSprinting)
    {
        bIsSprinting = false;
        StartDeceleration();
    }
}

void ALD_Character::Landed(const FHitResult& Hit)
{
    Super::Landed(Hit);
    if (bSprintKeyPressed)
    {
        StartSprinting();
    }
    else
    {
        StartDeceleration();
    }
}

void ALD_Character::OnHit(UPrimitiveComponent* HitComp, AActor* OtherActor, UPrimitiveComponent* OtherComp, FVector NormalImpulse, const FHitResult& Hit)
{
    bHasCollided = true;
    
    StartDeceleration();
}

void ALD_Character::UpdateSprintState()
{
    // Handle the case where the character has collided
    if (bHasCollided)
    {
        // If the character has collided, handle the deceleration or stop sprinting as needed
        if (!GetWorldTimerManager().IsTimerActive(DecelerationTimerHandle))
        {
            StartDeceleration();
        }

        // Reset the collision flag
        bHasCollided = false;
        return; // Exit early to prevent further sprint logic
    }

    if (!bSprintKeyPressed && bIsSprinting)
    {
        bIsSprinting = false;
        StartDeceleration();
    }
    
    if (!bIsSprinting)
    {
        return;
    }

    float DeltaTime = GetWorld()->GetDeltaSeconds();
    FVector CurrentVelocity = GetCharacterMovement()->Velocity;
    float CurrentSpeed = CurrentVelocity.Size();

    if (CurrentSpeed >= WalkingSpeed)
    {
        ULD_CharacterFunctionLibrary::SmoothSprinting(
            GetCharacterMovement(),
            bIsSprinting,
            DeltaTime,
            AccelerationTime,
            DecelerationTime,
            WalkingSpeed,
            SprintingSpeed,
            Alpha,
            bWasSprinting,
            TimeSinceMaxSpeedReached
        );
    }
    else
    {
        StartDeceleration();
    }
}

void ALD_Character::StartDeceleration()
{
    if (!GetWorldTimerManager().IsTimerActive(DecelerationTimerHandle))
    {
        // GetWorldTimerManager().SetTimer(DecelerationTimerHandle, this, &ALD_Character::DecelerateCharacter, GetWorld()->GetDeltaSeconds(), true);
        GetWorldTimerManager().SetTimer(DecelerationTimerHandle, this, &ALD_Character::DecelerateCharacter, 0.01f, true);
    }
}

void ALD_Character::DecelerateCharacter()
{
    if (!bIsSprinting && Alpha > 0.0f)
    {
        // Alpha -= GetWorld()->GetDeltaSeconds() / DecelerationTime;
        Alpha -= 0.01f / DecelerationTime;  // Adjust this rate as needed for smoother deceleration
        Alpha = FMath::Clamp(Alpha, 0.0f, 1.0f);
        float NewSpeed = FMath::Lerp(SprintingSpeed, WalkingSpeed, 1.0f - Alpha);
        GetCharacterMovement()->MaxWalkSpeed = NewSpeed;
    }

    if (Alpha <= 0.0f)
    {
        GetWorldTimerManager().ClearTimer(DecelerationTimerHandle);
    }
}
"
qHzLwWXm,logic back button,Arexils,Python,Saturday 9th of December 2023 10:01:34 AM CDT,"class BackButton(miru.Button):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(
            label=kwargs.pop('label', 'Back'),
            style=hikari.ButtonStyle.PRIMARY,
            *args,
            **kwargs,
        )

    async def callback(self, ctx: miru.ViewContext, **kwargs) -> None:
        # How do I make it go back to the beginning? 
		...


class BuildOptionButton(miru.Button):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(
            *args,
            **kwargs,
            style=hikari.ButtonStyle.PRIMARY,
        )

    async def callback(self, ctx: miru.ViewContext, **kwargs) -> None:
        ...
        
        view_select = miru.View(timeout=300)
        view_select.add_item(BackButton()) # <-- this button for back view
        msg = await ctx.message.edit(embed, components=view_select)
        await view_select.start(msg) 
        await view_select.wait()
        
		...
        
        
class AccountBaseMenu(miru.View):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.add_item(BuildOptionButton(label='add some')
        self.add_item(BuildOptionButton(label='add other')

    @miru.button(label='Apply', style=hikari.ButtonStyle.SUCCESS, row=2)
    async def accept_button(self, button: miru.Button, ctx: miru.ViewContext) -> None:
        ...

    @miru.button(label='Cancel', style=hikari.ButtonStyle.DANGER, row=2)
    async def cancel_button(self, button: miru.Button, ctx: miru.ViewContext) -> None:
		...

@bot.command()
@lightbulb.command(
    'add_user',
    'add user',
    auto_defer=True,
    pass_options=True,
)
@lightbulb.implements(lightbulb.SlashCommand)
async def add_user(ctx: lightbulb.Context):
    ... code DB ...
    view_first = AccountBaseMenu(timeout=300)
    message = await ctx.respond(
        Embed(
            title=f'{name}',
            description=('some text'),
        ),
        components=view_first,
    )
    await view_first.start(message)  
    await view_first.wait()
	... next code"
PazdaPF6,Untitled,Ilya_Bykonya,Arduino,Saturday 9th of December 2023 09:36:49 AM CDT,"#include ""ModbusRtu.h""
#define ID   1      // адрес ведомого

//Задаём ведомому адрес, последовательный порт, выход управления TX
Modbus slave(ID, 0, 0); 

constexpr uint8_t all_registers_count = 29;
uint16_t all_registers[all_registers_count]{};
#define TIME_L 5

// write
  // service: [0, 1]
  // controls: [lining, right/left lifting]
  // indicators: [...]
// read
  // sensors


// write[<=12]
  // service: [0, 1]
  // controls: [2, 3, 4]
  // indicators: [5, 6, 7, 8, 9, 10]
// read[>12]
  // sensors [12, 13, 14, ..., 28]






// service: 0, 1
// write
// read
int i = 0;

void setup() {  
  // настраиваем последовательный порт ведомого
  slave.begin(115200);   
}

void loop() {
  static unsigned long prev_time{};
  unsigned long cur_time = millis();
  if (cur_time - prev_time > TIME_L) {
    i++;
    prev_time = cur_time;
  }  
  if (prev_time > cur_time) prev_time = cur_time;
  int8_t state = slave.poll(all_registers, all_registers_count);    
  io_poll();
}

void io_poll() {
  const uint16_t register_number_data = all_registers[0];//holding
  all_registers[1] = register_number_data * 2;//input
  const bool register_flag_data = all_registers[2];//coil
  all_registers[3] = !register_flag_data;//discrete input
}
"
bbVzmK1e,c-loadproject.php,Rachmannh,PHP,Saturday 9th of December 2023 09:36:11 AM CDT,"<?php
require './koneksi.php';

// Ambil UID dari URL
$UID = isset($_GET['UID']) ? $_GET['UID'] : '';

$myprojects = query(""SELECT * FROM tmprojects
INNER JOIN ttaccess ON tmprojects.PID = ttaccess.PID
INNER JOIN tmuserlogin ON tmprojects.UIDCreatedBy = tmuserlogin.UID
WHERE ttaccess.UID = '$UID';"");

?>
<!DOCTYPE html>
<html lang=""en"">

<head>

    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
    <meta name=""description"" content="""">
    <meta name=""author"" content="""">

    <title>Load Project - Consultant</title>

    <!-- Custom fonts for this template-->
    <link href=""vendor/fontawesome-free/css/all.min.css"" rel=""stylesheet"" type=""text/css"">
    <link href=""https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"" rel=""stylesheet"">

    <!-- Custom styles for this template-->
    <link href=""css/sb-admin-2.min.css"" rel=""stylesheet"">
</head>

<body id=""page-top"">

    <!-- Page Wrapper -->
    <div id=""wrapper"">

        <!-- Sidebar -->
        <?php include './partials/c-sidebar.php' ?>
        <!-- End of Sidebar -->

        <!-- Content Wrapper -->
        <div id=""content-wrapper"" class=""d-flex flex-column"">

            <!-- Main Content -->
            <div id=""content"">

                <!-- Topbar -->
                <nav class=""navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow"">

                    <!-- Sidebar Toggle (Topbar) -->
                    <button id=""sidebarToggleTop"" class=""btn btn-link d-md-none rounded-circle mr-3"">
                        <i class=""fa fa-bars""></i>
                    </button>

                    <!-- Topbar Search -->
                    <form class=""d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search"">
                        <div class=""input-group"">
                            <input type=""text"" class=""form-control bg-light border-0 small"" placeholder=""Search for..."" aria-label=""Search"" aria-describedby=""basic-addon2"">
                            <div class=""input-group-append"">
                                <button class=""btn btn-secondary"" type=""button"">
                                    <i class=""fas fa-search fa-sm""></i>
                                </button>
                            </div>
                        </div>
                    </form>

                    <!-- Topbar Navbar -->
                    <ul class=""navbar-nav ml-auto"">

                        <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                        <li class=""nav-item dropdown no-arrow d-sm-none"">
                            <a class=""nav-link dropdown-toggle"" href=""#"" id=""searchDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                <i class=""fas fa-search fa-fw""></i>
                            </a>
                            <!-- Dropdown - Messages -->
                            <div class=""dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"" aria-labelledby=""searchDropdown"">
                                <form class=""form-inline mr-auto w-100 navbar-search"">
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control bg-light border-0 small"" placeholder=""Search for..."" aria-label=""Search"" aria-describedby=""basic-addon2"">
                                        <div class=""input-group-append"">
                                            <button class=""btn btn-primary"" type=""button"">
                                                <i class=""fas fa-search fa-sm""></i>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </li>

                        <div class=""topbar-divider d-none d-sm-block""></div>

                        <!-- Nav Item - User Information -->
                        <li class=""nav-item dropdown no-arrow"">
                            <a class=""nav-link dropdown-toggle"" href=""#"" id=""userDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                <?php foreach ($myprojects as $key => $data) : ?>
                                    <span class=""mr-2 d-none d-lg-inline text-gray-600 small""><?php echo $data['fullname'] ?></span>
                                <?php endforeach ?>
                                <img class=""img-profile rounded-circle"" src=""img/undraw_profile.svg"">
                            </a>
                            <!-- Dropdown - User Information -->
                            <div class=""dropdown-menu dropdown-menu-right shadow animated--grow-in"" aria-labelledby=""userDropdown"">
                                <a class=""dropdown-item"" href=""#"">
                                    <i class=""fas fa-user fa-sm fa-fw mr-2 text-gray-400""></i>
                                    Profile
                                </a>
                                <a class=""dropdown-item"" href=""#"">
                                    <i class=""fas fa-cogs fa-sm fa-fw mr-2 text-gray-400""></i>
                                    Settings
                                </a>
                                <a class=""dropdown-item"" href=""#"">
                                    <i class=""fas fa-list fa-sm fa-fw mr-2 text-gray-400""></i>
                                    Activity Log
                                </a>
                                <div class=""dropdown-divider""></div>
                                <a class=""dropdown-item"" href=""#"" data-toggle=""modal"" data-target=""#logoutModal"">
                                    <i class=""fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400""></i>
                                    Logout
                                </a>
                            </div>
                        </li>

                    </ul>

                </nav>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class=""container-fluid"">

                    <!-- Page Heading -->
                    <h1 class=""h3 mb-4 text-gray-800"">Load Project</h1>

                </div>

                <!-- Begin Page Content -->
                <div class=""container-fluid"">

                    <!-- DataTales Example -->
                    <div class=""card shadow mb-4"">
                        <div class=""card-header py-3"">
                            <h6 class=""m-0 font-weight-bold text-primary"">Load Existing Project</h6>
                        </div>
                        <div class=""card-body"">

                            <div class=""table-responsive"">
                                <table class=""table table-bordered"" id=""dataTable"" width=""100%"" cellspacing=""0"">
                                    <thead>
                                        <tr>
                                            <th>Project ID</th>
                                            <th>Nama perusahaan</th>
                                            <th>Tanggal Mulai</th>
                                            <th>Tanggal Selesai</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <?php foreach ($myprojects as $key => $datas) : ?>
                                            <tr class=""text-left"">
                                                <td><?php echo $datas['PID']; ?></td>
                                                <td><?php echo $datas['CompName']; ?></td>
                                                <td><?php echo $datas['StartDate']; ?></td>
                                                <td><?php echo $datas['EndDate']; ?></td>
                                                <td>
                                                    <div class=""container d-flex flex-lg-row flex-column justify-content-between"">
                                                        <a href=""c-selectprocess.php?PID=<?php echo $datas['PID']; ?>"" class=""btn btn-primary btn-sm mr-2 mb-1"">Open File</a>
                                                    </div>
                                                </td>
                                            </tr>
                                        <?php endforeach ?>

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>
                <!-- /.container-fluid -->
            </div>
            <!-- End of Main Content -->

            <!-- Footer -->
            <footer class=""sticky-footer bg-white"">
                <div class=""container my-auto"">
                    <div class=""copyright text-center my-auto"">
                        <span>Copyright &copy; Your Website 2020</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class=""scroll-to-top rounded"" href=""#page-top"">
        <i class=""fas fa-angle-up""></i>
    </a>

    <!-- Logout Modal-->
    <div class=""modal fade"" id=""logoutModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Ready to Leave?</h5>
                    <button class=""close"" type=""button"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">×</span>
                    </button>
                </div>
                <div class=""modal-body"">Select ""Logout"" below if you are ready to end your current session.</div>
                <div class=""modal-footer"">
                    <button class=""btn btn-secondary"" type=""button"" data-dismiss=""modal"">Cancel</button>
                    <a class=""btn btn-primary"" href=""login.html"">Logout</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src=""vendor/jquery/jquery.min.js""></script>
    <script src=""vendor/bootstrap/js/bootstrap.bundle.min.js""></script>

    <!-- Core plugin JavaScript-->
    <script src=""vendor/jquery-easing/jquery.easing.min.js""></script>

    <!-- Custom scripts for all pages-->
    <script src=""js/sb-admin-2.min.js""></script>

</body>

</html>"
HQGg5YrJ,c-topbar.php,Rachmannh,PHP,Saturday 9th of December 2023 09:35:19 AM CDT,"           <?php
            $myprojects = query(""SELECT * FROM tmprojects
           INNER JOIN ttaccess ON tmprojects.PID = ttaccess.PID
           INNER JOIN tmuserlogin ON tmprojects.UIDCreatedBy = tmuserlogin.UID
           WHERE ttaccess.UID = '$UID';"");
            ?>
           <!-- Topbar -->
           <nav class=""navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow"">

               <!-- Sidebar Toggle (Topbar) -->
               <button id=""sidebarToggleTop"" class=""btn btn-link d-md-none rounded-circle mr-3"">
                   <i class=""fa fa-bars""></i>
               </button>

               <!-- Topbar Navbar -->
               <ul class=""navbar-nav ml-auto"">


                   <!-- Dropdown - Messages -->
                   <div class=""dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"" aria-labelledby=""searchDropdown"">
                       <form class=""form-inline mr-auto w-100 navbar-search"">
                           <div class=""input-group"">
                               <input type=""text"" class=""form-control bg-light border-0 small"" placeholder=""Search for..."" aria-label=""Search"" aria-describedby=""basic-addon2"">
                               <div class=""input-group-append"">
                                   <button class=""btn btn-primary"" type=""button"">
                                       <i class=""fas fa-search fa-sm""></i>
                                   </button>
                               </div>
                           </div>
                       </form>
                   </div>
                   </li>

                   <div class=""topbar-divider d-none d-sm-block""></div>

                   <!-- Nav Item - User Information -->
                   <li class=""nav-item dropdown no-arrow"">
                       <a class=""nav-link dropdown-toggle"" href=""#"" id=""userDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                           <?php foreach ($myprojects as $key => $data) : ?>
                               <span class=""mr-2 d-none d-lg-inline text-gray-600 small""><?php echo $data['fullname'] ?></span>
                           <?php endforeach ?>
                           <img class=""img-profile rounded-circle"" src=""img/undraw_profile.svg"">
                       </a>
                       <!-- Dropdown - User Information -->
                       <div class=""dropdown-menu dropdown-menu-right shadow animated--grow-in"" aria-labelledby=""userDropdown"">
                           <a class=""dropdown-item"" href=""#"" data-toggle=""modal"" data-target=""#logoutModal"">
                               <i class=""fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400""></i>
                               Logout
                           </a>
                       </div>
                   </li>

               </ul>

           </nav>
           <!-- End of Topbar -->


           <!-- Logout Modal-->
           <div class=""modal fade"" id=""logoutModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
               <div class=""modal-dialog"" role=""document"">
                   <div class=""modal-content"">
                       <div class=""modal-header"">
                           <h5 class=""modal-title"" id=""exampleModalLabel"">Ready to Leave?</h5>
                           <button class=""close"" type=""button"" data-dismiss=""modal"" aria-label=""Close"">
                               <span aria-hidden=""true"">×</span>
                           </button>
                       </div>
                       <div class=""modal-body"">Select ""Logout"" below if you are ready to end your current session.</div>
                       <div class=""modal-footer"">
                           <button class=""btn btn-secondary"" type=""button"" data-dismiss=""modal"">Cancel</button>
                           <a class=""btn btn-primary"" href=""userlogin.php"">Logout</a>
                       </div>
                   </div>
               </div>
           </div>"
epS7reKw,indexcst.php,Rachmannh,PHP,Saturday 9th of December 2023 09:34:53 AM CDT,"<?php
require ""./koneksi.php"";

session_start();
$UID = isset($_GET['UID']) ? $_GET['UID'] : '';
$_SESSION['UID'] = $UID;

$totalProjects = (""SELECT COUNT(*) AS total_projects FROM tmprojects"");
$hasilproject = $con->query($totalProjects);
if ($hasilproject) {
    $row = $hasilproject->fetch_assoc();
    $totalProjects = $row['total_projects'];
}

$totalProCST = (""SELECT COUNT(*) AS total_procst FROM ttaccess where UID = 'CST01'"");
$hasilprocst = $con->query($totalProCST);
if ($hasilprocst) {
    $row = $hasilprocst->fetch_assoc();
    $totalProCST = $row['total_procst'];
}
$totalcst = (""SELECT COUNT(*) AS totalcst FROM tmuserlogin WHERE usergroup = 'consultant'"");
$hasilcst = $con->query($totalcst);
if ($hasilcst) {
    $row = $hasilcst->fetch_assoc();
    $totalcst = $row['totalcst'];
}

$totalPC = (""SELECT COUNT(*) AS total_pc FROM tmuserlogin WHERE usergroup = 'pc'"");
$hasilpc = $con->query($totalPC);
if ($hasilpc) {
    $row = $hasilpc->fetch_assoc();
    $totalPC = $row['total_pc'];
}

?>
<!DOCTYPE html>
<html lang=""en"">

<head>

    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
    <meta name=""description"" content="""">
    <meta name=""author"" content="""">

    <title>Dashboard - Admin</title>

    <!-- Custom fonts for this template-->
    <link href=""vendor/fontawesome-free/css/all.min.css"" rel=""stylesheet"" type=""text/css"">
    <link href=""https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"" rel=""stylesheet"">

    <!-- Custom styles for this template-->
    <link href=""css/sb-admin-2.min.css"" rel=""stylesheet"">

</head>

<body id=""page-top"">

    <!-- Page Wrapper -->
    <div id=""wrapper"">

        <?php include './partials/c-sidebar.php' ?>

        <!-- Content Wrapper -->
        <div id=""content-wrapper"" class=""d-flex flex-column"">

            <!-- Main Content -->
            <div id=""content"">

                <!-- Topbar -->
                <?php include './partials/c-topbar.php' ?>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class=""container-fluid"">

                    <!-- Page Heading -->
                    <h1 class=""h3 mb-4 text-gray-800"">Dashboard</h1>
                </div>

                <!-- Begin Page Content -->
                <div class=""container-fluid"">
                    <!-- Content Row -->
                    <div class=""row"">

                        <!-- Card Total Jumlah Proyek -->
                        <div class=""col-xl-3 col-md-6 mb-4"">
                            <div class=""card border-left-primary shadow h-100 py-2"">
                                <div class=""card-body"">
                                    <div class=""row no-gutters align-items-center"">
                                        <div class=""col mr-2"">
                                            <div class=""text-xs font-weight-bold text-primary text-uppercase mb-1"">
                                                Total Proyek</div>
                                            <div class=""h5 mb-0 font-weight-bold text-gray-800""><?php echo $totalProjects; ?></div>
                                        </div>
                                        <div class=""col-auto"">
                                            <i class=""fa fa-users fa-2x text-gray-300"" aria-hidden=""true""></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Card Total Jumlah Proyek CST -->
                        <div class=""col-xl-3 col-md-6 mb-4"">
                            <div class=""card border-left-primary shadow h-100 py-2"">
                                <div class=""card-body"">
                                    <div class=""row no-gutters align-items-center"">
                                        <div class=""col mr-2"">
                                            <div class=""text-xs font-weight-bold text-success text-uppercase mb-1"">
                                                Total Proyek Saya</div>
                                            <div class=""h5 mb-0 font-weight-bold text-gray-800""><?php echo $totalProCST; ?></div>
                                        </div>
                                        <div class=""col-auto"">
                                            <i class=""fa fa-user fa-2x text-gray-300"" aria-hidden=""true""></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Card Jumlah Konsultan -->
                        <div class=""col-xl-3 col-md-6 mb-4"">
                            <div class=""card border-left-warning shadow h-100 py-2"">
                                <div class=""card-body"">
                                    <div class=""row no-gutters align-items-center"">
                                        <div class=""col mr-2"">
                                            <div class=""text-xs font-weight-bold text-primary text-uppercase mb-1"">
                                                Jumlah Konsultan</div>
                                            <div class=""h5 mb-0 font-weight-bold text-gray-800""><?php echo $totalcst; ?></div>
                                        </div>
                                        <div class=""col-auto"">
                                            <i class=""fa fa-briefcase fa-2x text-gray-300"" aria-hidden=""true""></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Card Jumlah PC -->
                        <div class=""col-xl-3 col-md-6 mb-4"">
                            <div class=""card border-left-danger shadow h-100 py-2"">
                                <div class=""card-body"">
                                    <div class=""row no-gutters align-items-center"">
                                        <div class=""col mr-2"">
                                            <div class=""text-xs font-weight-bold text-primary text-uppercase mb-1"">
                                                Jumlah Project Coordinator</div>
                                            <div class=""h5 mb-0 font-weight-bold text-gray-800""><?php echo $totalPC; ?></div>
                                        </div>
                                        <div class=""col-auto"">
                                            <i class=""fa fa-book fa-2x text-gray-300"" aria-hidden=""true""></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <!-- End of Main Content -->

            <!-- Footer -->
            <footer class=""sticky-footer bg-white"">
                <div class=""container my-auto"">
                    <div class=""copyright text-center my-auto"">
                        <span>Copyright &copy; Your Website 2020</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->
        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class=""scroll-to-top rounded"" href=""#page-top"">
        <i class=""fas fa-angle-up""></i>
    </a>

    <!-- Logout Modal-->
    <div class=""modal fade"" id=""logoutModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Ready to Leave?</h5>
                    <button class=""close"" type=""button"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">×</span>
                    </button>
                </div>
                <div class=""modal-body"">Select ""Logout"" below if you are ready to end your current session.</div>
                <div class=""modal-footer"">
                    <button class=""btn btn-secondary"" type=""button"" data-dismiss=""modal"">Cancel</button>
                    <a class=""btn btn-primary"" href=""login.html"">Logout</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src=""vendor/jquery/jquery.min.js""></script>
    <script src=""vendor/bootstrap/js/bootstrap.bundle.min.js""></script>

    <!-- Core plugin JavaScript-->
    <script src=""vendor/jquery-easing/jquery.easing.min.js""></script>

    <!-- Custom scripts for all pages-->
    <script src=""js/sb-admin-2.min.js""></script>

</body>

</html>"
5zvuLd5s,Tupie kusti,az4x,Python,Saturday 9th of December 2023 09:29:28 AM CDT,"def get_data():
    file = open(""INPUT.TXT"", ""r"")
    data = file.readlines()[1:]
    file.close()

    return """".join(data)


def process(data):
    bushes = list(map(int, data.split()))
    bushes.extend([bushes[0], bushes[1]])

    m = 0
    for i in range(1, len(bushes) - 1):
        s = bushes[i - 1] + bushes[i] + bushes[i + 1]
        if s > m:
            m = s

    return m


def save_data(data):
    file = open(""OUTPUT.txt"", ""w"")
    file.write(str(data))
    file.close()


x = get_data()
y = process(x)
save_data(y)
"
KE8kb1Xq,Untitled,poxipox,Lua,Saturday 9th of December 2023 09:22:12 AM CDT,"local configQuest = { -- configQuest.mission[1].storage
    mission = {
        [50002] = { -- actionID
            storage = 50000,
            IDstorage = 2,
            text = ""Nie znalazles wszystkich dzwigni, wracaj!"",
        },
    },
}   


function onStepIn(cid, item, pos, fromPos)

    if isPlayer(cid) ~= TRUE then
        return true 
    end

    local misionId = configQuest.mission[item.actionid]
    if misionId then 
        if getPlayerStorageValue(cid, misionId.storage) == misionId.IDstorage then 
			doPlayerSendTextMessage(cid, MESSAGE_INFO_DESCR, ""Hell Mission: "")
        else
            doTeleportThing(cid, fromPos, true)
			doPlayerSendCancel(cid, misionId.text)
			return true
        end
	end
	return true
end

"
vJeQb5Dy,BDOT 4/5,MARSHAL327,Scala,Saturday 9th of December 2023 09:19:28 AM CDT,"package sevsu.spark

import java.nio.file.Paths
import org.apache.spark.{RangePartitioner, SparkConf, SparkContext}
import org.apache.spark.rdd.RDD
import sevsu.spark.Application.time

object Application {
    private val conf: SparkConf = new SparkConf()
        .setMaster(""local[*]"")
        .setAppName(""spark_example"")
        .set(""spark.ui.showConsoleProgress"", ""false"")

    private val sc: SparkContext = getSparkContext(conf)

    private val resourcesRoot: String = this.getClass.getResource(""/"").toString
    private val personPath: String = resourcesRoot + ""person.csv""
    private val apartmentPath: String = resourcesRoot + ""apartment.csv""

    case class Person(id: Int, name: String)

    case class Apartment(id_apartment: Int, id_human: Int, num_rooms: Int, address: String)

    def time[R](block: => R): R = {
        val t0 = System.nanoTime()
        val result = block // call-by-name
        val t1 = System.nanoTime()
        val resultTime = BigDecimal((t1 - t0) / Math.pow(10, 9))
            .setScale(4, BigDecimal.RoundingMode.HALF_UP)
        println(""Время: "" + resultTime + "" сек."")
        result
    }

    def lab4(apartments: RDD[Apartment], persons: RDD[Person], printResults: Boolean = true): Unit = {
        println(""========== lab4 =========="")
        // ====== Task 1 ======
        val personCounter: RDD[(Int, Int)] = apartments.map(item => (item.id_human, 1))
        val numPersonApartments =
            personCounter
                .reduceByKey((a, b) => a + b)
                .persist()
        val numApartmentsPerson =
            numPersonApartments
                .map(_.swap)
                .groupByKey()
                .sortByKey()

        if (printResults) {
            println(numApartmentsPerson.collect().mkString(""\n""))
        }

        print(""1 задание - "")
        time(numApartmentsPerson.collect())


        // ====== Task 2 ======
        val personPairRDD = persons.map(item => (item.id, item.name))
        val joined = personPairRDD join numPersonApartments
        val numPersonNameApartments = joined.map(item => item._2)

        if (printResults) {
            println(numPersonNameApartments.collect().mkString(""\n""))
        }

        print(""2 задание - "")
        time(numPersonNameApartments.collect())


        // ====== Task 3 ======
        val personApartmentsAddress = apartments
            .filter(_.num_rooms > 2)
            .map(item =>
                (item.id_human, item.address)
            )
        val personNameAddressWithId = personApartmentsAddress join personPairRDD
        val personNameAddress = personNameAddressWithId.map(item => item._2)

        if (printResults) {
            println(personNameAddress.collect().mkString(""\n""))
        }

        print(""3 задание - "")
        time(personNameAddress.collect())
    }

    def lab5(apartments: RDD[Apartment], persons: RDD[Person], printResults: Boolean = true): Unit = {
        println(""\n========== lab5 =========="")

        // ====== Task 1 ======
        val pairApartments = apartments.map(apartment => (apartment.id_human, 1))

        val partitioner = new RangePartitioner(4, pairApartments)
        val partitionedPairApartments = pairApartments.partitionBy(partitioner).persist()

        val numPersonApartments =
            partitionedPairApartments
                .reduceByKey((a, b) => a + b)
                .persist()
        val numApartmentsPerson =
            numPersonApartments
                .map(_.swap)
                .groupByKey()
                .sortByKey()

        if (printResults) {
            println(numApartmentsPerson.collect().mkString(""\n""))
        }

        print(""1 задание - "")
        time(numApartmentsPerson.collect())


        // ====== Task 2 ======
        val personPairRDD = persons.map(item => (item.id, item.name))

        val partitionerPersonPairRDD = new RangePartitioner(4, personPairRDD)
        val partitionedPersonPairRDD = personPairRDD.partitionBy(partitionerPersonPairRDD).persist()

        val joined: RDD[(Int, (String, Int))] = partitionedPersonPairRDD join numPersonApartments
        val numPersonNameApartments = joined.mapValues(item => item._1)

        if (printResults) {
            println(numPersonNameApartments.collect().mkString(""\n""))
        }

        print(""2 задание - "")
        time(numPersonNameApartments.collect())


        // ====== Task 3 ======
        val personApartmentsAddress = apartments
            .filter(_.num_rooms > 2)
            .map(item =>
                (item.id_human, item.address)
            )

        val partitionerPersonApartmentsAddress = new RangePartitioner(4, personApartmentsAddress)
        val partitionedPersonApartmentsAddress = personApartmentsAddress.partitionBy(partitionerPersonApartmentsAddress).persist()

        val personNameAddressWithId = partitionedPersonApartmentsAddress join personPairRDD
        val personNameAddress = personNameAddressWithId.mapValues(item => item._1)

        if (printResults) {
            println(personNameAddress.collect().mkString(""\n""))
        }

        print(""3 задание - "")
        time(personNameAddress.collect())
    }

    def main(args: Array[String]): Unit = {
        val rawPersonRdd: RDD[String] = sc.textFile(personPath)
        val rawApartmentRdd: RDD[String] = sc.textFile(apartmentPath)
        val persons: RDD[Person] = rawPersonRdd.map(strPerson => {
            strPerson.split("","").map(_.trim) match {
                case Array(id, name) => Person(id.toInt, name)
            }
        })
        val apartments: RDD[Apartment] = rawApartmentRdd.map(strPerson => {
            strPerson.split("","").map(_.trim) match {
                case Array(id_apartment, id_human, num_rooms, address) => Apartment(id_apartment.toInt, id_human.toInt, num_rooms.toInt, address)
            }
        })

        time(lab4(apartments, persons, printResults = false))
        time(lab5(apartments, persons, printResults = false))

        sc.stop()
    }

    private def getSparkContext(conf: SparkConf): SparkContext = {
        if (System.getProperty(""os.name"").toLowerCase.contains(""windows"")) {
            System.setProperty(
                ""hadoop.home.dir"",
                Paths.get(this.getClass.getResource(""/winutils/hadoop-2.7.1/"").toURI).toString
            )
        }

        new SparkContext(conf)
    }
}
"
rSfMYu2N,Untitled,HariBG,C++,Saturday 9th of December 2023 08:53:15 AM CDT,"#include <iostream>

int main() {

    // Creating array
    int arr[] { 3,5,2,4,6,9,7,8,1,6,9,7,1,8,5,9,3,2,8,9,1,2,7,3,6,5,4,1,
        3,9,6,4,2,5,7,8,4,6,5,8,4,7,2,1,3,2,7,8,5,3,1,4,9,6,9,2,4,5,1,8,
        3,6,7,5,1,3,9,2,6,8,4,7,7,8,6,3,5,4,1,2,9 };

    // find size of array
    int arr_size = sizeof(arr) / sizeof(arr[0]);

    if (arr_size != 81) {
        std::cout << ""Incorrect number of numbers! It should be exactly 81."" << std::endl;
        return 0;
    }

    // Printing array in 9x9
    int separator = 0;
    int row = 0;

    for (int i = 0; i < 81; ++i) {
        std::cout << arr[i] << "" "";
        separator++;

        if (separator == 9) {
            std::cout << std::endl;
            row++;
            separator = 0;
        }

        if (separator == 3 || separator == 6) {
            std::cout << ""|"";
        }

        if (row == 3) {
            std::cout << ""-------------------"";
            std::cout << std::endl;
            row = 0;
        }
    }

    std::cout << std::endl;

    return 0;
}
"
uwHgbWbE,obsi mine,mickael49300_fr,Lua,Saturday 9th of December 2023 08:37:30 AM CDT,"print("" obsi mine "")
while true do
turtle.dig()
turtle.dropDown()
sleep(1)
end
"
fWJ3ZvZP,21. merge ll,serpent03,C,Saturday 9th of December 2023 08:17:12 AM CDT,"/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

int MIN(struct ListNode** p, struct ListNode** q) {
    int v;
    if ((*p) == NULL) {
        v = (*q)->val;
        (*q) = (*q)->next;
        return v;
    }
    if ((*q) == NULL) {
        v = (*p)->val;
        (*p) = (*p)->next;
        return v;
    }
    if ((*p)->val < (*q)->val) {
        v = (*p)->val;
        (*p) = (*p)->next;
        return v;
    } else {
        v = (*q)->val;
        (*q) = (*q)->next;
        return v;
    }
}

struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2) {
    struct ListNode* head = (struct ListNode*)calloc(1, sizeof(struct ListNode));
    struct ListNode* headptr = head;
    
    if (list1 == NULL && list2 == NULL) {
        return NULL;
    }
    
    while (list1 != NULL || list2 != NULL) {
        head->val = MIN(&list1, &list2);
        if (list1 == NULL) {
            head->next = list2;
            break;
        }
        if (list2 == NULL) {
            head->next = list1;
            break;
        }
        head->next = (struct ListNode*)calloc(1, sizeof(struct ListNode));
        head = head->next;
    }
    
    return headptr;
}"
eWa10Tmv,wf-info,bluebyt,INI file,Saturday 9th of December 2023 08:05:20 AM CDT,"WAYLAND_DEBUG=1 wf-info
[3787743.817]  -> wl_display@1.get_registry(new id wl_registry@2)
[3787743.828]  -> wl_display@1.sync(new id wl_callback@3)
[3787744.107] wl_display@1.delete_id(3)
[3787744.119] wl_registry@2.global(1, ""wl_shm"", 1)
[3787744.126] wl_registry@2.global(2, ""wl_drm"", 2)
[3787744.128] wl_registry@2.global(3, ""zwp_linux_dmabuf_v1"", 4)
[3787744.129] wl_registry@2.global(4, ""wl_compositor"", 5)
[3787744.131] wl_registry@2.global(5, ""wl_subcompositor"", 1)
[3787744.133] wl_registry@2.global(6, ""wl_data_device_manager"", 3)
[3787744.135] wl_registry@2.global(7, ""zwp_primary_selection_device_manager_v1"", 1)
[3787744.136] wl_registry@2.global(8, ""zwlr_data_control_manager_v1"", 2)
[3787744.138] wl_registry@2.global(9, ""zwlr_output_manager_v1"", 4)
[3787744.140] wl_registry@2.global(10, ""zwlr_output_power_manager_v1"", 1)
[3787744.141] wl_registry@2.global(11, ""xdg_wm_base"", 2)
[3787744.144] wl_registry@2.global(12, ""zwlr_layer_shell_v1"", 4)
[3787744.145] wl_registry@2.global(13, ""zwp_tablet_manager_v2"", 1)
[3787744.147] wl_registry@2.global(14, ""wl_seat"", 8)
[3787744.149] wl_registry@2.global(15, ""zwlr_screencopy_manager_v1"", 3)
[3787744.150] wl_registry@2.global(16, ""zwlr_gamma_control_manager_v1"", 1)
[3787744.152] wl_registry@2.global(17, ""zwlr_export_dmabuf_manager_v1"", 1)
[3787744.154] wl_registry@2.global(18, ""zxdg_output_manager_v1"", 3)
[3787744.156] wl_registry@2.global(19, ""zwlr_input_inhibit_manager_v1"", 1)
[3787744.160] wl_registry@2.global(20, ""org_kde_kwin_server_decoration_manager"", 1)
[3787744.163] wl_registry@2.global(21, ""zxdg_decoration_manager_v1"", 1)
[3787744.166] wl_registry@2.global(22, ""zwp_virtual_keyboard_manager_v1"", 1)
[3787744.168] wl_registry@2.global(23, ""zwlr_virtual_pointer_manager_v1"", 2)
[3787744.169] wl_registry@2.global(24, ""zwp_idle_inhibit_manager_v1"", 1)
[3787744.172] wl_registry@2.global(25, ""org_kde_kwin_idle"", 1)
[3787744.174] wl_registry@2.global(26, ""zwp_pointer_gestures_v1"", 3)
[3787744.176] wl_registry@2.global(27, ""zwp_relative_pointer_manager_v1"", 1)
[3787744.178] wl_registry@2.global(28, ""zwp_pointer_constraints_v1"", 1)
[3787744.180] wl_registry@2.global(29, ""zwp_input_method_manager_v2"", 1)
[3787744.182] wl_registry@2.global(30, ""zwp_text_input_manager_v3"", 1)
[3787744.184] wl_registry@2.global(31, ""wp_presentation"", 1)
[3787744.186] wl_registry@2.global(32, ""wp_viewporter"", 1)
[3787744.188] wl_registry@2.global(33, ""zxdg_exporter_v1"", 1)
[3787744.190] wl_registry@2.global(34, ""zxdg_importer_v1"", 1)
[3787744.192] wl_registry@2.global(35, ""zxdg_exporter_v2"", 1)
[3787744.195] wl_registry@2.global(36, ""zxdg_importer_v2"", 1)
[3787744.197] wl_registry@2.global(37, ""wl_output"", 4)
[3787744.200] wl_registry@2.global(38, ""zwlr_foreign_toplevel_manager_v1"", 3)
[3787744.203] wl_registry@2.global(39, ""gtk_shell1"", 3)
[3787744.205] wl_callback@3.done(4833)
Wayfire information protocol not advertised by compositor. Is wf-info plugin enabled?
"
ysZdg0U4,fnf Simple song from nonsense v2 mod,harry73643,JSON,Saturday 9th of December 2023 08:00:19 AM CDT,"{
	""song"": {
		""player1"": ""bf-new"",
		""events"": [
			[
				24750,
				[
					[
						""Change Scroll Speed"",
						""3"",
						""""
					]
				]
			],
			[
				31063.1578947368,
				[
					[
						""Force Cam Section"",
						""2"",
						""""
					]
				]
			],
			[
				32747.3684210526,
				[
					[
						""Force Cam Section"",
						""1"",
						""""
					]
				]
			],
			[
				34484.2105263158,
				[
					[
						""Force Cam Section"",
						""2"",
						""""
					]
				]
			],
			[
				36168.4210526316,
				[
					[
						""Force Cam Section"",
						""1"",
						""""
					]
				]
			],
			[
				39484.2105263158,
				[
					[
						""Force Cam Section"",
						""2"",
						""""
					]
				]
			],
			[
				42905.2631578947,
				[
					[
						""Force Cam Section"",
						""1"",
						""""
					]
				]
			],
			[
				46273.6842105263,
				[
					[
						""Force Cam Section"",
						""2"",
						""""
					]
				]
			],
			[
				51536.8421052631,
				[
					[
						""Nonsense Camera Zooms"",
						""1"",
						""""
					]
				]
			],
			[
				51543.4210526315,
				[
					[
						""Force Cam Section"",
						""1"",
						""""
					]
				]
			],
			[
				53010.5263157894,
				[
					[
						""Nonsense Camera Zooms"",
						""0.8"",
						""""
					]
				]
			],
			[
				56326.3157894736,
				[
					[
						""Force Cam Section"",
						""2"",
						""""
					]
				]
			],
			[
				58010.5263157894,
				[
					[
						""Force Cam Section"",
						""1"",
						""""
					]
				]
			],
			[
				59747.3684210526,
				[
					[
						""Force Cam Section"",
						""2"",
						""""
					]
				]
			],
			[
				61431.5789473684,
				[
					[
						""Force Cam Section"",
						""1"",
						""""
					]
				]
			],
			[
				63063.1578947368,
				[
					[
						""Force Cam Section"",
						""0"",
						""""
					]
				]
			]
		],
		""gfVersion"": ""gf-new"",
		""notes"": [
			{
				""sectionNotes"": [
					[
						0,
						0,
						150
					],
					[
						300,
						0,
						150
					],
					[
						600,
						1,
						750
					],
					[
						1500,
						0,
						150
					],
					[
						1800,
						0,
						450
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						2400,
						1,
						1050
					],
					[
						3600,
						3,
						150
					],
					[
						3900,
						1,
						150
					],
					[
						4200,
						0,
						450
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false,
				""bpm"": 0
			},
			{
				""sectionNotes"": [
					[
						4800,
						1,
						750,
						0
					],
					[
						5700,
						2,
						150,
						0
					],
					[
						6000,
						2,
						450,
						0
					],
					[
						6600,
						1,
						450,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						7200,
						3,
						150,
						0
					],
					[
						7500,
						0,
						150,
						0
					],
					[
						7800,
						2,
						450,
						0
					],
					[
						8400,
						3,
						450,
						0
					],
					[
						9000,
						3,
						150,
						0
					],
					[
						9300,
						0,
						150,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						9600,
						2,
						1050,
						0
					],
					[
						10800,
						0,
						150,
						0
					],
					[
						11100,
						3,
						150,
						0
					],
					[
						11400,
						1,
						150,
						0
					],
					[
						11700,
						2,
						150,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						12000,
						1,
						450,
						0
					],
					[
						12600,
						1,
						450,
						0
					],
					[
						13200,
						0,
						900,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						14400,
						7,
						150,
						0
					],
					[
						14700,
						7,
						150,
						0
					],
					[
						15000,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						18000,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						21600,
						2,
						0,
						0
					],
					[
						21900,
						2,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						24300,
						0,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""changeBPM"": false,
				""bpm"": 285,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""changeBPM"": false,
				""bpm"": 285,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						29484.2105263158,
						3,
						0,
						0
					],
					[
						29378.9473684211,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""changeBPM"": true,
				""bpm"": 285,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						29642.1052631579,
						2,
						0,
						0
					],
					[
						29747.3684210526,
						0,
						0,
						0
					],
					[
						29852.6315789474,
						3,
						0,
						0
					],
					[
						29957.8947368421,
						3,
						0,
						0
					],
					[
						30063.1578947368,
						2,
						0,
						0
					],
					[
						30168.4210526316,
						1,
						0,
						0
					],
					[
						30273.6842105263,
						3,
						0,
						0
					],
					[
						30378.947368421,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						30484.2105263158,
						1,
						0,
						0
					],
					[
						30589.4736842105,
						2,
						0,
						0
					],
					[
						30694.7368421053,
						0,
						0,
						0
					],
					[
						30800,
						0,
						0,
						0
					],
					[
						30905.2631578947,
						3,
						105.263157894737,
						0
					],
					[
						31063.1578947368,
						7,
						0,
						0
					],
					[
						31168.4210526316,
						7,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						31326.3157894737,
						2,
						0,
						0
					],
					[
						31431.5789473684,
						1,
						0,
						0
					],
					[
						31536.8421052632,
						0,
						0,
						0
					],
					[
						31642.1052631579,
						3,
						0,
						0
					],
					[
						31747.3684210526,
						2,
						0,
						0
					],
					[
						31957.8947368421,
						2,
						0,
						0
					],
					[
						32063.1578947368,
						0,
						0,
						0
					],
					[
						31852.6315789474,
						0,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						32168.4210526316,
						3,
						0,
						0
					],
					[
						32378.947368421,
						3,
						0,
						0
					],
					[
						32273.6842105263,
						0,
						0,
						0
					],
					[
						32484.2105263158,
						0,
						0,
						0
					],
					[
						32589.4736842105,
						2,
						105.263157894737,
						0
					],
					[
						32747.3684210526,
						4,
						0,
						0
					],
					[
						32852.6315789474,
						4,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						33010.5263157895,
						2,
						0,
						0
					],
					[
						33115.7894736842,
						0,
						0,
						0
					],
					[
						33221.0526315789,
						0,
						0,
						0
					],
					[
						33326.3157894737,
						3,
						0,
						0
					],
					[
						33431.5789473684,
						1,
						0,
						0
					],
					[
						33536.8421052632,
						2,
						0,
						0
					],
					[
						33642.1052631579,
						0,
						0,
						0
					],
					[
						33747.3684210526,
						0,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						33852.6315789474,
						3,
						0,
						0
					],
					[
						33957.8947368421,
						2,
						0,
						0
					],
					[
						34168.4210526316,
						3,
						0,
						0
					],
					[
						34273.6842105263,
						2,
						0,
						0
					],
					[
						34378.947368421,
						0,
						0,
						0
					],
					[
						34063.1578947368,
						1,
						0,
						0
					],
					[
						34484.2105263158,
						7,
						0,
						0
					],
					[
						34589.4736842105,
						7,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						34694.7368421053,
						2,
						0,
						0
					],
					[
						34800,
						1,
						0,
						0
					],
					[
						34905.2631578947,
						0,
						0,
						0
					],
					[
						35010.5263157895,
						2,
						0,
						0
					],
					[
						35115.7894736842,
						3,
						0,
						0
					],
					[
						35221.0526315789,
						0,
						0,
						0
					],
					[
						35326.3157894737,
						3,
						0,
						0
					],
					[
						35431.5789473684,
						0,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						35536.8421052631,
						2,
						0,
						0
					],
					[
						35642.1052631579,
						0,
						0,
						0
					],
					[
						35852.6315789474,
						1,
						0,
						0
					],
					[
						35747.3684210526,
						3,
						0,
						0
					],
					[
						35957.8947368421,
						2,
						0,
						0
					],
					[
						36063.1578947368,
						3,
						0,
						0
					],
					[
						36168.4210526316,
						7,
						157.894736842105,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						36378.947368421,
						0,
						157.894736842105,
						0
					],
					[
						36589.4736842105,
						3,
						0,
						0
					],
					[
						36642.1052631579,
						0,
						0,
						0
					],
					[
						36694.7368421053,
						2,
						0,
						0
					],
					[
						36747.3684210526,
						1,
						0,
						0
					],
					[
						36800,
						2,
						157.894736842105,
						0
					],
					[
						37010.5263157895,
						1,
						0,
						0
					],
					[
						37115.7894736842,
						1,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						37221.0526315789,
						3,
						52.6315789473684,
						0
					],
					[
						37326.3157894737,
						0,
						52.6315789473684,
						0
					],
					[
						37431.5789473684,
						3,
						0,
						0
					],
					[
						37484.2105263158,
						2,
						0,
						0
					],
					[
						37536.8421052631,
						3,
						0,
						0
					],
					[
						37589.4736842105,
						0,
						0,
						0
					],
					[
						37642.1052631579,
						1,
						0,
						0
					],
					[
						37694.7368421052,
						0,
						0,
						0
					],
					[
						37747.3684210526,
						2,
						0,
						0
					],
					[
						37800,
						3,
						210.526315789474,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						38063.1578947368,
						0,
						157.894736842105,
						0
					],
					[
						38273.6842105263,
						1,
						0,
						0
					],
					[
						38378.947368421,
						2,
						0,
						0
					],
					[
						38484.2105263158,
						1,
						0,
						0
					],
					[
						38589.4736842105,
						2,
						0,
						0
					],
					[
						38694.7368421052,
						0,
						0,
						0
					],
					[
						38800,
						1,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						38905.2631578947,
						0,
						0,
						0
					],
					[
						39010.5263157895,
						0,
						0,
						0
					],
					[
						39115.7894736842,
						3,
						105.263157894737,
						0
					],
					[
						39273.6842105263,
						0,
						157.894736842105,
						0
					],
					[
						39484.2105263158,
						2,
						421.052631578947,
						0
					],
					[
						39484.2105263158,
						7,
						157.894736842105,
						0
					],
					[
						39694.7368421052,
						4,
						157.894736842105,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						40378.947368421,
						7,
						368.421052631579,
						0
					],
					[
						39957.8947368421,
						4,
						368.421052631579,
						0
					],
					[
						39957.8947368421,
						2,
						0,
						0
					],
					[
						40010.5263157895,
						1,
						0,
						0
					],
					[
						40063.1578947368,
						3,
						0,
						0
					],
					[
						40115.7894736842,
						0,
						157.894736842105,
						0
					],
					[
						40326.3157894737,
						3,
						0,
						0
					],
					[
						40431.5789473684,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						40800,
						4,
						368.421052631579,
						0
					],
					[
						41221.0526315789,
						7,
						368.421052631579,
						0
					],
					[
						40589.4736842105,
						0,
						0,
						0
					],
					[
						40694.7368421052,
						2,
						0,
						0
					],
					[
						40800,
						3,
						0,
						0
					],
					[
						40852.6315789473,
						2,
						0,
						0
					],
					[
						40905.2631578947,
						0,
						0,
						0
					],
					[
						40957.8947368421,
						1,
						0,
						0
					],
					[
						41010.5263157895,
						3,
						0,
						0
					],
					[
						41063.1578947368,
						1,
						0,
						0
					],
					[
						41168.4210526316,
						0,
						0,
						0
					],
					[
						41273.6842105263,
						0,
						0,
						0
					],
					[
						41378.947368421,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						41642.1052631579,
						6,
						368.421052631579,
						0
					],
					[
						42063.1578947368,
						4,
						368.421052631579,
						0
					],
					[
						41484.2105263158,
						3,
						0,
						0
					],
					[
						41589.4736842105,
						0,
						0,
						0
					],
					[
						41694.7368421052,
						2,
						0,
						0
					],
					[
						41800,
						3,
						0,
						0
					],
					[
						41905.2631578947,
						0,
						0,
						0
					],
					[
						42010.5263157895,
						3,
						0,
						0
					],
					[
						42115.7894736842,
						2,
						0,
						0
					],
					[
						42221.0526315789,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						42484.2105263158,
						3,
						368.421052631579,
						0
					],
					[
						42905.2631578947,
						2,
						0,
						0
					],
					[
						42957.8947368421,
						1,
						0,
						0
					],
					[
						43010.5263157895,
						0,
						0,
						0
					],
					[
						43063.1578947368,
						1,
						0,
						0
					],
					[
						42484.2105263158,
						4,
						157.894736842105,
						0
					],
					[
						42378.947368421,
						5,
						0,
						0
					],
					[
						42694.7368421052,
						7,
						157.894736842105,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						43115.7894736842,
						2,
						0,
						0
					],
					[
						43168.4210526316,
						3,
						0,
						0
					],
					[
						43221.0526315789,
						2,
						0,
						0
					],
					[
						43273.6842105263,
						1,
						0,
						0
					],
					[
						43326.3157894737,
						0,
						0,
						0
					],
					[
						43378.947368421,
						1,
						0,
						0
					],
					[
						43431.5789473684,
						2,
						0,
						0
					],
					[
						43484.2105263158,
						3,
						0,
						0
					],
					[
						43536.8421052631,
						2,
						0,
						0
					],
					[
						43589.4736842105,
						1,
						0,
						0
					],
					[
						43642.1052631579,
						0,
						0,
						0
					],
					[
						43694.7368421052,
						1,
						0,
						0
					],
					[
						43747.3684210526,
						0,
						0,
						0
					],
					[
						43800,
						2,
						0,
						0
					],
					[
						43852.6315789473,
						1,
						0,
						0
					],
					[
						43905.2631578947,
						2,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						43957.8947368421,
						0,
						0,
						0
					],
					[
						44010.5263157894,
						3,
						0,
						0
					],
					[
						44063.1578947368,
						0,
						0,
						0
					],
					[
						44115.7894736842,
						3,
						0,
						0
					],
					[
						44168.4210526316,
						0,
						0,
						0
					],
					[
						44221.0526315789,
						3,
						0,
						0
					],
					[
						44273.6842105263,
						0,
						0,
						0
					],
					[
						44326.3157894737,
						3,
						0,
						0
					],
					[
						44378.947368421,
						0,
						0,
						0
					],
					[
						44431.5789473684,
						1,
						0,
						0
					],
					[
						44484.2105263158,
						2,
						0,
						0
					],
					[
						44536.8421052631,
						3,
						0,
						0
					],
					[
						44589.4736842105,
						3,
						0,
						0
					],
					[
						44642.1052631579,
						2,
						0,
						0
					],
					[
						44694.7368421052,
						1,
						0,
						0
					],
					[
						44747.3684210526,
						0,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						44800,
						3,
						0,
						0
					],
					[
						44852.6315789473,
						2,
						0,
						0
					],
					[
						44905.2631578947,
						3,
						0,
						0
					],
					[
						44957.8947368421,
						2,
						0,
						0
					],
					[
						45010.5263157894,
						3,
						0,
						0
					],
					[
						45063.1578947368,
						2,
						0,
						0
					],
					[
						45115.7894736842,
						3,
						0,
						0
					],
					[
						45168.4210526316,
						2,
						0,
						0
					],
					[
						45221.0526315789,
						1,
						0,
						0
					],
					[
						45273.6842105263,
						1,
						0,
						0
					],
					[
						45326.3157894737,
						3,
						0,
						0
					],
					[
						45378.947368421,
						0,
						0,
						0
					],
					[
						45431.5789473684,
						3,
						0,
						0
					],
					[
						45484.2105263158,
						0,
						0,
						0
					],
					[
						45536.8421052631,
						2,
						0,
						0
					],
					[
						45589.4736842105,
						0,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						45694.7368421052,
						2,
						0,
						0
					],
					[
						45642.1052631579,
						3,
						0,
						0
					],
					[
						45747.3684210526,
						0,
						0,
						0
					],
					[
						45800,
						1,
						0,
						0
					],
					[
						45852.6315789473,
						1,
						0,
						0
					],
					[
						45957.8947368421,
						1,
						0,
						0
					],
					[
						45905.2631578947,
						0,
						0,
						0
					],
					[
						46010.5263157894,
						0,
						0,
						0
					],
					[
						46063.1578947368,
						1,
						0,
						0
					],
					[
						46115.7894736842,
						0,
						0,
						0
					],
					[
						46168.4210526316,
						1,
						0,
						0
					],
					[
						46221.0526315789,
						0,
						0,
						0
					],
					[
						46273.6842105263,
						6,
						0,
						0
					],
					[
						46326.3157894737,
						5,
						0,
						0
					],
					[
						46378.947368421,
						4,
						0,
						0
					],
					[
						46431.5789473684,
						5,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						46484.2105263158,
						2,
						0,
						0
					],
					[
						46536.8421052631,
						3,
						0,
						0
					],
					[
						46589.4736842105,
						2,
						0,
						0
					],
					[
						46642.1052631579,
						1,
						0,
						0
					],
					[
						46694.7368421052,
						0,
						0,
						0
					],
					[
						46747.3684210526,
						1,
						0,
						0
					],
					[
						46800,
						2,
						0,
						0
					],
					[
						46852.6315789473,
						3,
						0,
						0
					],
					[
						46905.2631578947,
						2,
						0,
						0
					],
					[
						46957.8947368421,
						1,
						0,
						0
					],
					[
						47010.5263157894,
						0,
						0,
						0
					],
					[
						47063.1578947368,
						3,
						0,
						0
					],
					[
						47115.7894736842,
						2,
						0,
						0
					],
					[
						47168.4210526315,
						0,
						0,
						0
					],
					[
						47221.0526315789,
						1,
						0,
						0
					],
					[
						47273.6842105263,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						47326.3157894737,
						2,
						0,
						0
					],
					[
						47378.947368421,
						3,
						0,
						0
					],
					[
						47431.5789473684,
						2,
						0,
						0
					],
					[
						47484.2105263158,
						3,
						0,
						0
					],
					[
						47536.8421052631,
						2,
						0,
						0
					],
					[
						47589.4736842105,
						0,
						0,
						0
					],
					[
						47642.1052631579,
						1,
						0,
						0
					],
					[
						47694.7368421052,
						0,
						0,
						0
					],
					[
						47747.3684210526,
						1,
						0,
						0
					],
					[
						47800,
						0,
						0,
						0
					],
					[
						47852.6315789473,
						1,
						0,
						0
					],
					[
						47905.2631578947,
						0,
						0,
						0
					],
					[
						47957.8947368421,
						1,
						0,
						0
					],
					[
						48010.5263157894,
						2,
						0,
						0
					],
					[
						48063.1578947368,
						3,
						0,
						0
					],
					[
						48115.7894736842,
						2,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						48168.4210526315,
						0,
						0,
						0
					],
					[
						48221.0526315789,
						3,
						0,
						0
					],
					[
						48273.6842105263,
						0,
						0,
						0
					],
					[
						48326.3157894737,
						3,
						0,
						0
					],
					[
						48378.947368421,
						0,
						0,
						0
					],
					[
						48431.5789473684,
						3,
						0,
						0
					],
					[
						48484.2105263158,
						2,
						0,
						0
					],
					[
						48536.8421052631,
						1,
						0,
						0
					],
					[
						48589.4736842105,
						0,
						0,
						0
					],
					[
						48642.1052631579,
						1,
						0,
						0
					],
					[
						48694.7368421052,
						2,
						0,
						0
					],
					[
						48747.3684210526,
						3,
						0,
						0
					],
					[
						48800,
						2,
						0,
						0
					],
					[
						48852.6315789473,
						1,
						0,
						0
					],
					[
						48905.2631578947,
						0,
						0,
						0
					],
					[
						48957.8947368421,
						1,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						49010.5263157894,
						3,
						0,
						0
					],
					[
						49063.1578947368,
						2,
						0,
						0
					],
					[
						49115.7894736842,
						0,
						0,
						0
					],
					[
						49168.4210526315,
						1,
						0,
						0
					],
					[
						49221.0526315789,
						2,
						0,
						0
					],
					[
						49273.6842105263,
						3,
						0,
						0
					],
					[
						49326.3157894737,
						0,
						0,
						0
					],
					[
						49378.947368421,
						1,
						0,
						0
					],
					[
						49431.5789473684,
						3,
						0,
						0
					],
					[
						49484.2105263158,
						2,
						0,
						0
					],
					[
						49536.8421052631,
						0,
						0,
						0
					],
					[
						49589.4736842105,
						3,
						0,
						0
					],
					[
						49694.7368421052,
						0,
						0,
						0
					],
					[
						49800,
						3,
						0,
						0
					],
					[
						49642.1052631579,
						3,
						0,
						0
					],
					[
						49747.3684210526,
						0,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						49905.2631578947,
						2,
						0,
						0
					],
					[
						50010.5263157894,
						3,
						0,
						0
					],
					[
						50115.7894736842,
						3,
						0,
						0
					],
					[
						50221.0526315789,
						0,
						0,
						0
					],
					[
						50326.3157894736,
						3,
						0,
						0
					],
					[
						50431.5789473684,
						0,
						0,
						0
					],
					[
						50536.8421052631,
						2,
						0,
						0
					],
					[
						50642.1052631579,
						0,
						0,
						0
					],
					[
						49852.6315789473,
						3,
						0,
						0
					],
					[
						49957.8947368421,
						2,
						0,
						0
					],
					[
						50063.1578947368,
						3,
						0,
						0
					],
					[
						50168.4210526315,
						3,
						0,
						0
					],
					[
						50273.6842105263,
						0,
						0,
						0
					],
					[
						50378.947368421,
						3,
						0,
						0
					],
					[
						50484.2105263158,
						0,
						0,
						0
					],
					[
						50589.4736842105,
						2,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						50747.3684210526,
						3,
						0,
						0
					],
					[
						50852.6315789473,
						0,
						0,
						0
					],
					[
						51063.1578947368,
						2,
						0,
						0
					],
					[
						51168.4210526315,
						0,
						0,
						0
					],
					[
						51273.6842105263,
						1,
						0,
						0
					],
					[
						51378.947368421,
						3,
						0,
						0
					],
					[
						51484.2105263158,
						0,
						0,
						0
					],
					[
						50694.7368421052,
						0,
						0,
						0
					],
					[
						50800,
						3,
						0,
						0
					],
					[
						50905.2631578947,
						0,
						0,
						0
					],
					[
						50957.8947368421,
						3,
						0,
						0
					],
					[
						51010.5263157894,
						3,
						0,
						0
					],
					[
						51115.7894736842,
						2,
						0,
						0
					],
					[
						51221.0526315789,
						0,
						0,
						0
					],
					[
						51326.3157894736,
						1,
						0,
						0
					],
					[
						51431.5789473684,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						51589.4736842105,
						7,
						0,
						0
					],
					[
						51694.7368421052,
						7,
						0,
						0
					],
					[
						51642.1052631579,
						7,
						0,
						0
					],
					[
						51747.3684210526,
						7,
						0,
						0
					],
					[
						51800,
						7,
						0,
						0
					],
					[
						51852.6315789473,
						7,
						0,
						0
					],
					[
						51957.8947368421,
						5,
						0,
						0
					],
					[
						52063.1578947368,
						6,
						0,
						0
					],
					[
						52168.4210526315,
						4,
						0,
						0
					],
					[
						52273.6842105263,
						7,
						0,
						0
					],
					[
						52326.3157894736,
						7,
						0,
						0
					],
					[
						51536.8421052631,
						4,
						0,
						0
					],
					[
						52010.5263157894,
						5,
						0,
						0
					],
					[
						52115.7894736842,
						6,
						0,
						0
					],
					[
						52221.0526315789,
						4,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						52378.947368421,
						7,
						0,
						0
					],
					[
						52431.5789473684,
						7,
						0,
						0
					],
					[
						52484.2105263158,
						7,
						0,
						0
					],
					[
						52536.8421052631,
						4,
						0,
						0
					],
					[
						52589.4736842105,
						4,
						0,
						0
					],
					[
						52642.1052631578,
						4,
						0,
						0
					],
					[
						52694.7368421052,
						4,
						0,
						0
					],
					[
						52747.3684210526,
						4,
						0,
						0
					],
					[
						52800,
						6,
						0,
						0
					],
					[
						52852.6315789473,
						6,
						0,
						0
					],
					[
						52905.2631578947,
						6,
						0,
						0
					],
					[
						53010.5263157894,
						0,
						0,
						0
					],
					[
						53115.7894736842,
						1,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						53221.0526315789,
						2,
						0,
						0
					],
					[
						53326.3157894736,
						3,
						0,
						0
					],
					[
						53378.947368421,
						3,
						0,
						0
					],
					[
						53431.5789473684,
						3,
						0,
						0
					],
					[
						53484.2105263157,
						3,
						0,
						0
					],
					[
						53536.8421052631,
						3,
						0,
						0
					],
					[
						53642.1052631578,
						0,
						0,
						0
					],
					[
						53747.3684210526,
						1,
						0,
						0
					],
					[
						53852.6315789473,
						2,
						0,
						0
					],
					[
						53957.8947368421,
						3,
						0,
						0
					],
					[
						54010.5263157894,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						54273.6842105263,
						2,
						0,
						0
					],
					[
						54326.3157894736,
						2,
						0,
						0
					],
					[
						54378.947368421,
						2,
						0,
						0
					],
					[
						54431.5789473684,
						0,
						0,
						0
					],
					[
						54484.2105263157,
						0,
						0,
						0
					],
					[
						54536.8421052631,
						0,
						0,
						0
					],
					[
						54063.1578947368,
						3,
						0,
						0
					],
					[
						54115.7894736842,
						3,
						0,
						0
					],
					[
						54168.4210526315,
						3,
						0,
						0
					],
					[
						54221.0526315789,
						3,
						0,
						0
					],
					[
						54589.4736842105,
						0,
						0,
						0
					],
					[
						54642.1052631578,
						3,
						0,
						0
					],
					[
						54747.3684210526,
						0,
						0,
						0
					],
					[
						54852.6315789473,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						54905.2631578947,
						0,
						0,
						0
					],
					[
						55010.5263157894,
						3,
						0,
						0
					],
					[
						55115.7894736842,
						2,
						0,
						0
					],
					[
						55168.4210526315,
						1,
						0,
						0
					],
					[
						55221.0526315789,
						3,
						0,
						0
					],
					[
						55273.6842105263,
						1,
						0,
						0
					],
					[
						55326.3157894736,
						0,
						0,
						0
					],
					[
						55378.947368421,
						1,
						0,
						0
					],
					[
						55431.5789473684,
						0,
						0,
						0
					],
					[
						55484.2105263157,
						3,
						0,
						0
					],
					[
						55536.8421052631,
						0,
						0,
						0
					],
					[
						55642.1052631578,
						2,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						55747.3684210526,
						0,
						0,
						0
					],
					[
						55852.6315789473,
						3,
						0,
						0
					],
					[
						55957.8947368421,
						0,
						0,
						0
					],
					[
						56063.1578947368,
						2,
						0,
						0
					],
					[
						56168.4210526315,
						0,
						0,
						0
					],
					[
						56273.6842105263,
						3,
						0,
						0
					],
					[
						56326.3157894736,
						7,
						894.736842105263,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						57615.7894736842,
						2,
						0,
						0
					],
					[
						57628.947368421,
						2,
						0,
						0
					],
					[
						57642.1052631578,
						2,
						0,
						0
					],
					[
						57655.2631578947,
						2,
						0,
						0
					],
					[
						57668.4210526315,
						2,
						0,
						0
					],
					[
						57681.5789473684,
						2,
						0,
						0
					],
					[
						57694.7368421052,
						2,
						0,
						0
					],
					[
						57707.8947368421,
						2,
						0,
						0
					],
					[
						57721.0526315789,
						2,
						0,
						0
					],
					[
						57734.2105263157,
						2,
						0,
						0
					],
					[
						57747.3684210526,
						2,
						0,
						0
					],
					[
						57760.5263157894,
						2,
						0,
						0
					],
					[
						57918.4210526315,
						2,
						0,
						0
					],
					[
						57905.2631578947,
						2,
						0,
						0
					],
					[
						57892.1052631578,
						2,
						0,
						0
					],
					[
						57878.947368421,
						2,
						0,
						0
					],
					[
						57865.7894736842,
						2,
						0,
						0
					],
					[
						57852.6315789473,
						2,
						0,
						0
					],
					[
						57839.4736842105,
						2,
						0,
						0
					],
					[
						57826.3157894736,
						2,
						0,
						0
					],
					[
						57813.1578947368,
						2,
						0,
						0
					],
					[
						57799.9999999999,
						2,
						0,
						0
					],
					[
						57786.8421052631,
						2,
						0,
						0
					],
					[
						57773.6842105263,
						2,
						0,
						0
					],
					[
						57957.8947368421,
						2,
						0,
						0
					],
					[
						57944.7368421052,
						2,
						0,
						0
					],
					[
						57931.5789473684,
						2,
						0,
						0
					],
					[
						57971.0526315789,
						2,
						0,
						0
					],
					[
						58010.5263157894,
						4,
						0,
						0
					],
					[
						58036.8421052631,
						5,
						0,
						0
					],
					[
						58063.1578947368,
						6,
						0,
						0
					],
					[
						58089.4736842105,
						7,
						0,
						0
					],
					[
						58115.7894736842,
						6,
						0,
						0
					],
					[
						58142.1052631578,
						5,
						0,
						0
					],
					[
						58168.4210526315,
						4,
						0,
						0
					],
					[
						58194.7368421052,
						5,
						0,
						0
					],
					[
						58221.0526315789,
						6,
						0,
						0
					],
					[
						58247.3684210526,
						7,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						58273.6842105263,
						2,
						0,
						0
					],
					[
						58299.9999999999,
						1,
						0,
						0
					],
					[
						58326.3157894736,
						0,
						0,
						0
					],
					[
						58352.6315789473,
						1,
						0,
						0
					],
					[
						58378.947368421,
						2,
						0,
						0
					],
					[
						58405.2631578947,
						3,
						0,
						0
					],
					[
						58431.5789473684,
						2,
						0,
						0
					],
					[
						58457.894736842,
						1,
						0,
						0
					],
					[
						58484.2105263157,
						0,
						0,
						0
					],
					[
						58510.5263157894,
						1,
						0,
						0
					],
					[
						58536.8421052631,
						2,
						0,
						0
					],
					[
						58563.1578947368,
						3,
						0,
						0
					],
					[
						58589.4736842105,
						2,
						0,
						0
					],
					[
						58615.7894736842,
						1,
						0,
						0
					],
					[
						58642.1052631578,
						0,
						0,
						0
					],
					[
						58668.4210526315,
						1,
						0,
						0
					],
					[
						58694.7368421052,
						2,
						0,
						0
					],
					[
						58721.0526315789,
						3,
						0,
						0
					],
					[
						58747.3684210526,
						2,
						0,
						0
					],
					[
						58773.6842105263,
						1,
						0,
						0
					],
					[
						58799.9999999999,
						0,
						0,
						0
					],
					[
						58826.3157894736,
						1,
						0,
						0
					],
					[
						58852.6315789473,
						2,
						0,
						0
					],
					[
						58878.947368421,
						3,
						0,
						0
					],
					[
						58905.2631578947,
						2,
						0,
						0
					],
					[
						58931.5789473684,
						1,
						0,
						0
					],
					[
						58957.894736842,
						0,
						0,
						0
					],
					[
						58984.2105263157,
						1,
						0,
						0
					],
					[
						59010.5263157894,
						2,
						0,
						0
					],
					[
						59036.8421052631,
						3,
						0,
						0
					],
					[
						59063.1578947368,
						2,
						0,
						0
					],
					[
						59089.4736842105,
						1,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						59115.7894736842,
						0,
						0,
						0
					],
					[
						59142.1052631578,
						1,
						0,
						0
					],
					[
						59168.4210526315,
						2,
						0,
						0
					],
					[
						59194.7368421052,
						3,
						0,
						0
					],
					[
						59221.0526315789,
						2,
						0,
						0
					],
					[
						59247.3684210526,
						1,
						0,
						0
					],
					[
						59273.6842105263,
						0,
						0,
						0
					],
					[
						59299.9999999999,
						1,
						0,
						0
					],
					[
						59326.3157894736,
						2,
						0,
						0
					],
					[
						59352.6315789473,
						3,
						0,
						0
					],
					[
						59378.947368421,
						2,
						0,
						0
					],
					[
						59405.2631578947,
						1,
						0,
						0
					],
					[
						59431.5789473684,
						0,
						0,
						0
					],
					[
						59457.894736842,
						1,
						0,
						0
					],
					[
						59484.2105263157,
						2,
						0,
						0
					],
					[
						59510.5263157894,
						3,
						0,
						0
					],
					[
						59536.8421052631,
						2,
						0,
						0
					],
					[
						59563.1578947368,
						1,
						0,
						0
					],
					[
						59589.4736842105,
						0,
						0,
						0
					],
					[
						59615.7894736842,
						1,
						0,
						0
					],
					[
						59642.1052631578,
						2,
						0,
						0
					],
					[
						59668.4210526315,
						3,
						0,
						0
					],
					[
						59694.7368421052,
						2,
						0,
						0
					],
					[
						59747.3684210526,
						4,
						0,
						0
					],
					[
						59852.6315789473,
						4,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						59957.894736842,
						3,
						0,
						0
					],
					[
						60063.1578947368,
						3,
						0,
						0
					],
					[
						60168.4210526315,
						2,
						0,
						0
					],
					[
						60273.6842105263,
						2,
						0,
						0
					],
					[
						60378.947368421,
						0,
						0,
						0
					],
					[
						60484.2105263157,
						0,
						0,
						0
					],
					[
						60589.4736842105,
						2,
						0,
						0
					],
					[
						60694.7368421052,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						60799.9999999999,
						2,
						0,
						0
					],
					[
						60905.2631578947,
						3,
						0,
						0
					],
					[
						61010.5263157894,
						0,
						105.263157894737,
						0
					],
					[
						61221.0526315789,
						2,
						0,
						0
					],
					[
						61326.3157894736,
						3,
						0,
						0
					],
					[
						61536.8421052631,
						7,
						0,
						0
					],
					[
						61431.5789473684,
						7,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [
					[
						61642.1052631578,
						0,
						0,
						0
					],
					[
						61747.3684210526,
						0,
						0,
						0
					],
					[
						61852.6315789473,
						2,
						0,
						0
					],
					[
						61957.894736842,
						2,
						0,
						0
					],
					[
						62063.1578947368,
						0,
						105.263157894737,
						0
					],
					[
						62273.6842105263,
						3,
						0,
						0
					],
					[
						62378.947368421,
						1,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						62484.2105263157,
						2,
						0,
						0
					],
					[
						62589.4736842105,
						1,
						0,
						0
					],
					[
						62694.7368421052,
						3,
						105.263157894737,
						0
					],
					[
						62905.2631578947,
						0,
						0,
						0
					],
					[
						63010.5263157894,
						3,
						0,
						0
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [
					[
						63326.3157894736,
						0,
						4800,
						1
					],
					[
						63326.3157894736,
						1,
						4800,
						1
					],
					[
						63326.3157894736,
						2,
						4800,
						1
					],
					[
						63326.3157894736,
						3,
						4800,
						1
					]
				],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""lengthInSteps"": 16,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 1
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 130,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 130
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": false
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": false,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 160,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 160
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 100
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 100,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 100,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 100,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 100
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 100,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 100,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 100
			},
			{
				""lengthInSteps"": 16,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""altAnim"": false,
				""bpm"": 100,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""sectionNotes"": [],
				""typeOfSection"": 0,
				""lengthInSteps"": 16,
				""gfSection"": false,
				""altAnim"": false,
				""mustHitSection"": true,
				""changeBPM"": false,
				""bpm"": 100
			},
			{
				""gfSection"": false,
				""altAnim"": false,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""bpm"": 100,
				""sectionBeats"": 4,
				""changeBPM"": false,
				""mustHitSection"": true
			},
			{
				""gfSection"": false,
				""altAnim"": false,
				""typeOfSection"": 0,
				""sectionNotes"": [],
				""bpm"": 100,
				""sectionBeats"": 4,
				""changeBPM"": false,
				""mustHitSection"": true
			}
		],
		""player2"": ""new-nonsense-playable"",
		""player3"": null,
		""song"": ""Simple"",
		""stage"": ""weegee"",
		""needsVoices"": true,
		""validScore"": true,
		""bpm"": 100,
		""speed"": 1.5
	}
}"
94mycBTz,5e63d7ac0e8c358e.html,sleekkeepup,HTML,Saturday 9th of December 2023 07:33:47 AM CDT,"<!doctype html>
<html class=""no-js"" lang="""">

<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
  <title>My HTML5 page</title>
  <link rel=""stylesheet"" href=""css/style.css"">
  <meta name=""description"" content="""">

  <meta property=""og:title"" content="""">
  <meta property=""og:type"" content="""">
  <meta property=""og:url"" content="""">
  <meta property=""og:image"" content="""">

  <link rel=""icon"" href=""/favicon.ico"" sizes=""any"">
  <link rel=""icon"" href=""/icon.svg"" type=""image/svg+xml"">
  <link rel=""apple-touch-icon"" href=""icon.png"">

  <link rel=""manifest"" href=""site.webmanifest"">
  <meta name=""theme-color"" content=""#fafafa"">
</head>

<body>

  <!-- Add your site or application content here -->
  <p>Hello world! This is HTML5 Boilerplate.</p>
  <script src=""js/app.js""></script>

</body>

</html>
"
tX7D5Yft,HWM - set army form data,goodwin64,JavaScript,Saturday 9th of December 2023 07:33:26 AM CDT,"// 1. copy the form data from POST request and save as a local ""formData"" variable
// 2. run the code below
// 3. copy console.log'ged value and paste here to draw it: https://ctlessons.org/apps/coordinateDrawer

var events = Object.values(formData)
    .filter(e => e.type === 'mousemove');
var minX = Math.min(...events.map(e => e.cX));
var minY = Math.min(...events.map(e => e.cY));
var maxX = Math.max(...events.map(e => e.cX));
var maxY = Math.max(...events.map(e => e.cY));

function mapCoordinate(value, inMin, inMax, outMin, outMax) {
    return Math.round((value - inMin) * (outMax - outMin) / (inMax - inMin)) + outMin;
}

console.log(
    events
        .map(e => {
            const x = mapCoordinate(e.cX, minX, maxX, -20, 20); // -20, 20 - canvas limits; feel free to change
            const y = mapCoordinate(e.cY, minY, maxY, -20, 20);
            return `${x},${y}`
        })
        .join('\n')
)"
DgSbqMXt,Untitled,Tkap1,C++,Saturday 9th of December 2023 07:30:32 AM CDT,"// vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv		particle compute shader start		vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
{
	u32 curr_index = rendering->curr_particle_ssbo_index;
	u32 next_index = (rendering->curr_particle_ssbo_index + 1) % 2;

	glBindVertexArray(rendering->particle_vao);
	glUseProgram(rendering->compute_shaders[e_compute_particle]);
	set_shader_float(rendering->compute_shaders[e_compute_particle], ""delta"", render_delta);

	// @Note(tkap, 04/12/2023): Copy the CPU particle data in the ssbo
	glBindBuffer(GL_SHADER_STORAGE_BUFFER, rendering->new_particles_ssbo);
	glBufferSubData(GL_SHADER_STORAGE_BUFFER, 0, 4, &game->world_particles.count);
	glBufferSubData(GL_SHADER_STORAGE_BUFFER, 16, sizeof(s_particle) * game->world_particles.count, game->world_particles.elements);

	// @Note(tkap, 04/12/2023): Set the ssbo particle count to 0
	glBindBuffer(GL_SHADER_STORAGE_BUFFER, rendering->particles_indirect_ssbo);
	int one_zero = 0;
	glBufferSubData(GL_SHADER_STORAGE_BUFFER, 4, 4, &one_zero);
	glBindBuffer(GL_SHADER_STORAGE_BUFFER, rendering->particle_in_ssbo[next_index]);
	glBufferSubData(GL_SHADER_STORAGE_BUFFER, 0, 4, &one_zero);

	static_assert(max_world_particles % 64 == 0);
	glDispatchCompute(max_world_particles / 64, 1, 1);

	game->world_particles.count = 0;

	rendering->curr_particle_ssbo_index = next_index;
	glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 1, rendering->particle_in_ssbo[curr_index]);
	glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 0, rendering->particle_in_ssbo[next_index]);
}
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^		particle compute shader end		^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

// ...
// ...
// ...

// vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv		draw gpu particles start		vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
{
	rendering->shaders[e_shader_particle].use();
	rendering->shaders[e_shader_particle].set_matrix(""projection"", get_camera_matrix(get_camera()));
	glBindBuffer(GL_DRAW_INDIRECT_BUFFER, rendering->particles_indirect_ssbo);
	glDrawArraysIndirect(GL_TRIANGLES, 0);
}
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^		draw gpu particles end		^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
kHYjgNs1,justfordemo,gruntfutuk,Python,Saturday 9th of December 2023 07:17:49 AM CDT,"def is_yes(prompt: str = ""Yes or No? "", default: bool | None = None) -> bool:
    """""" prompt user and only accept answer that is in AFFIRMATION or REJECTION sets
    and return True or False accordingly; return alone can be accepted if default
    set to either True or False in which case the default is returned""""""
    while True:
        response = input(prompt).strip().casefold()
        if not response and default is not None:
            return default
        if response in AFFIRMATION:
            return True
        if response in REJECTION:
            return False
        print('Sorry, I did not understand that')

def menu_choice(menu_name, menu_options):
    print()
    print(menu_name)
    for key, (details, _) in menu_options.items():
        print(key, details)
    while True:
        option = input('Enter option: ')
        if option in menu_options:
            return option, menu_options[option][1]
        print('Sorry, that option is not available, please select again')

def register():
    print('registering')
    fini = False
    while not fini:
        option, action =  menu_choice('shop', menus['shop'])
        if action is None:
            fini = True
        else:
            action()

def payment():
    print('paying')
    print('Due:', round(order['total']/100, 2))
    # add code  to process payment
    order['paid'] = True  # assume paid for now

def close_out():
    print('closing out')
    if order['basket']:
        payment()
    else:
        print('Nothing in basket')

def add_discount_card():
    if order['discount'] is not None:
        print(f'You have already selected discount {order[""discount""]}.')
        if not is_yes('Do you want to replace  it? '):
            return
    order['discount'] = menu_choice('discount', menus['discount'])

def add_new_item():
    items_added  =  []
    while True:
        item  = input('adding new item (just enter to finish): ').strip().lower()
        if not item:
            break
        if item not in items:
            print('Sorry, do not recognise that item')
            continue
        qty = input('How many? ').strip()
        if qty.isdecimal():
            items_added.append([item, int(qty)])
        else:
            print('Sorry, do not understand that')
    if items_added:
        order['basket'].extend(items_added)

def total_and_pay():
    print('total and paying')

    if order['paid']:
        print('Already paid')
        return

    total = 0
    discount = discounts.get(order['discount'], 0)
    for item, qty in order['basket']:
        total += items[item] * qty
    order['total'] = total
    if total >  0:
        total = total - total * discount/100
        payment()

def abandon_basket():
    order['basket'] = None

def basket():
    print('basket')
    for item, qty in order['basket']:
        unit = items[item]
        price = unit * qty
        print(f'{item:10} x {qty} @ {unit:3}p = £{price/100:3.2f}')  # could show total price

AFFIRMATION: frozenset[str] = frozenset(('y', 'yes', 'yup', 'yeh', 'ok', '1'))
REJECTION = frozenset(('n', 'no', 'nah', 'nope', '0'))

items = {'apple': 20, 'pear': 25, 'banana': 20, 'orange': 32}

menus = {
    'main':
        {
            '1': ('start registering your grocery', register),
            '2': ('close the self-check in register', None),
            '3': ('show basked', basket),
            '4': ('Abandon basket', abandon_basket)
        },

    'shop': {
        '1': ('to add a discount card', add_discount_card),
        '2': ('to register a new item', add_new_item),
        '3': ('show basked', basket),
        '4': ('to compute the total and pay', total_and_pay),
        '5': ('quit', None)
        },

    'discount': {
        '1': ('Pensioner Card', 'pension'),
        '2': ('Weekend Card', 'weekend'),
        '3': ('Green Card', 'green')
        }
    }

discounts = {'pension': 10, 'weekend': 5, 'green': 7}
order = {'discount': None, 'basket': [], 'paid': False, 'total': 0}
fini = False
while not fini:
    option, action = menu_choice('main', menus['main'])
    if action is None:
        if order['paid'] or not order['basket']:
            fini = True
        else:
            print('Sorry, you need to pay first (or abandon basket)')
    else:
        action()"
Qn63QERd,TestBase,brunobozic,C#,Saturday 9th of December 2023 07:12:53 AM CDT,"   public class TestBase : IDisposable
   {
       protected ApiWebApplicationFactory Application;

       private IConfiguration GetConfiguration()
       {
           var builder = new ConfigurationBuilder()
               .SetBasePath(Directory.GetCurrentDirectory())
               .AddJsonFile(""appsettings.Test.json"", false, true)
               .AddEnvironmentVariables();

           var config = builder.Build();

           return config;
       }

       public async Task Down()
       {
           await ResetState();
       }

       public void RunAfterAnyTests()
       {
           Application.Dispose();
       }

       public void RunBeforeAnyTests()
       {
           Application = new ApiWebApplicationFactory();

           EnsureDatabase();
       }

       private void EnsureDatabase()
       {
           throw new NotImplementedException();
       }

       public async Task<bool> CreateTenant(Tenant tenant)
       {
           Application = new ApiWebApplicationFactory();
           using var scope = Application.Services.CreateScope();
           var config = GetConfiguration();
           var _tenantRepository = scope.ServiceProvider.GetService<ITenantRepository>();

           await _tenantRepository.CreateAsync(tenant);

           return true;
       }

       public async Task<Product> FetchProduct(string productId)
       {
           Application = new ApiWebApplicationFactory();
           using var scope = Application.Services.CreateScope();
           var config = GetConfiguration();
           var _productRepository = scope.ServiceProvider.GetService<IProductRepository>();

           return await _productRepository.GetByProductIdAsync(productId);
       }

       private async Task<string> GetAccessToken(long tenantId)
       {
           Application = new ApiWebApplicationFactory();
           using var scope = Application.Services.CreateScope();
           var config = GetConfiguration();
           var _tenantRepository = scope.ServiceProvider.GetService<ITenantRepository>();

           var tenant = await _tenantRepository.GetByTenantIdAsync(tenantId);
           var securityKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(config[""AppSettings:JWT:Key""]));
           var credentials = new SigningCredentials(securityKey, SecurityAlgorithms.HmacSha256);
           var claims = new[]
           {
               new Claim(JwtRegisteredClaimNames.Sub, ""username""),
               new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString())
           };

           var token = new JwtSecurityToken(
               issuer: config[""AppSettings:JWT:Issuer""],
               audience: config[""AppSettings:JWT:Audience""],
               claims: claims,
           expires: DateTime.UtcNow.AddMinutes(30),
               signingCredentials: credentials);

           var tokenCreated = new JwtSecurityTokenHandler().WriteToken(token);

           return tokenCreated;
       }

       private async Task ResetState()
       {
           Application = new ApiWebApplicationFactory();
           using var scope = Application.Services.CreateScope();

           var context = scope.ServiceProvider.GetService<MyDbContext>();

           if (context.Database.IsSqlite())
           {
               context.Database.EnsureDeleted();
               context.Database.EnsureCreated();
           }
           else if (context.Database.IsNpgsql())
           {
           }

           //var deleted = context.Database.EnsureDeleted();
           //var created = context.Database.EnsureCreated();
       }

       public void Dispose()
       {
           Application.Dispose();
       }

       public async Task<HttpClient> GetClientWithBearerTokenForTenantId(long tenantId)
       {
           Application = new ApiWebApplicationFactory();

           using var scope = Application.Services.CreateScope();

           var token = await GetAccessToken(tenantId);

           try
           {
               var client = Application.CreateClient();
               client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", token);

               return (client);
           }
           catch (Exception ex)
           {
               throw;
           }
       }

       public async Task<HttpClient> GetClient()
       {
           Application = new ApiWebApplicationFactory();

           using var scope = Application.Services.CreateScope();

           var client = Application.CreateClient();

           return (client);
       }
   }"
8Bw1gGFG,Node.lua,Overcontrol1,Lua,Saturday 9th of December 2023 07:11:01 AM CDT,"---@diagnostic disable: param-type-mismatch

-- Settings
local AutomaticallyDetectNearbyNodes = true;
local MainControlID = 1;
local Protocol = ""Nodes"";
local ModemSide = ""back"";


function SplitString(inputstr, sep)
    sep = sep or ""%s"";
    local t = {}
    for str in string.gmatch(inputstr, ""([^""..sep..""]+)"") do
            table.insert(t, str)
    end
    return t
end

local Neighbours = {};

rednet.open(ModemSide);

function ManualInput()
    local neighbours = io.stdin:read()

    for _, value in ipairs(SplitString(neighbours, "","")) do
        local trimmedValue = value:gsub(""%s+"", """");
        table.insert(Neighbours, trimmedValue);
    end
end

function WaitUntilTimePass()
    os.sleep(1);
end

function ReceivePongMessages()
    local id, message, protocol = rednet.receive();

    if protocol ~= Protocol then ReceivePongMessages() return end;

    print(""Receiving message from: "" .. id .. "", "" .. textutils.serialize(message))

    if message.Type == ""NearbyNodeSubmission"" then
        table.insert(Neighbours, id);
    end

    ReceivePongMessages();
end

function FindNearbyNodes()
    rednet.broadcast({Type = ""NearbyNodeRequest""}, Protocol);

    parallel.waitForAny(ReceivePongMessages, WaitUntilTimePass)
end

function SubmitNodeData()
    if AutomaticallyDetectNearbyNodes then
        FindNearbyNodes();
    else
        ManualInput();
    end

    rednet.send(MainControlID, {Type = ""Submit"", ConnectedNodes = Neighbours}, Protocol)
    Neighbours = {};
end

SubmitNodeData();

function SubmitNodeDataKeybind()
    while true do
        local _, key = os.pullEvent(""key"");

        if key == keys.q then
            SubmitNodeData();
        end
    end
end

function PrintRouteKeybind()
    while true do
        local _, key = os.pullEvent(""key"");

        if key == keys.f then
            rednet.send(MainControlID, {Type = ""RequestRoutes""}, Protocol)

            local id, message, protocol = rednet.receive();

            if protocol == Protocol and message.Type == ""RoutePong"" then
                print(textutils.serialize(message.Package))
            end
        end
    end
end

function RealMain()
    local id, message, protocol = rednet.receive();

    if protocol ~= Protocol then RealMain() return end;

    print(""Receiving message from: "" .. id .. "", "" .. textutils.serialize(message))

    if message.Type == ""NearbyNodeRequest"" then
        print(""Sending pong to: "" .. id)
        rednet.send(id, {Type = ""NearbyNodeSubmission""}, Protocol)
    elseif message.Type == ""ChainMessage"" then
        if #message.Ids == message.CurrentIndex then
            RealMain();
            return;
        end

        local package = nil;

        if #message.Ids - 1 == message.CurrentIndex then
            package = message.Package;
        else
            message.CurrentIndex = message.CurrentIndex + 1;
            package = message;
        end


        rednet.send(message.Ids[message.CurrentIndex], package, Protocol);
    end

    RealMain();
end

function Main()
    parallel.waitForAll(RealMain, SubmitNodeDataKeybind, PrintRouteKeybind)
end

Main();"
TRA3saLp,Node.lua,Overcontrol1,Lua,Saturday 9th of December 2023 07:06:59 AM CDT,"---@diagnostic disable: param-type-mismatch

-- Settings
local AutomaticallyDetectNearbyNodes = true;
local MainControlID = 1;
local Protocol = ""Nodes"";
local ModemSide = ""back"";


function SplitString(inputstr, sep)
    sep = sep or ""%s"";
    local t = {}
    for str in string.gmatch(inputstr, ""([^""..sep..""]+)"") do
            table.insert(t, str)
    end
    return t
end

local Neighbours = {};

rednet.open(ModemSide);

function ManualInput()
    local neighbours = io.stdin:read()

    for _, value in ipairs(SplitString(neighbours, "","")) do
        local trimmedValue = value:gsub(""%s+"", """");
        table.insert(Neighbours, trimmedValue);
    end
end

function WaitUntilTimePass()
    os.sleep(5);
end

function ReceivePongMessages()
    local id, message, protocol = rednet.receive();

    if protocol ~= Protocol then ReceivePongMessages() return end;

    print(""Receiving message from: "" .. id .. "", "" .. textutils.serialize(message))

    if message.Type == ""NearbyNodeSubmission"" then
        table.insert(Neighbours, id);
    end
end

function FindNearbyNodes()
    rednet.broadcast({Type = ""NearbyNodeRequest""}, Protocol);

    parallel.waitForAny(ReceivePongMessages, WaitUntilTimePass)
end

function SubmitNodeData()
    if AutomaticallyDetectNearbyNodes then
        FindNearbyNodes();
    else
        ManualInput();
    end

    rednet.send(MainControlID, {Type = ""Submit"", ConnectedNodes = Neighbours}, Protocol)
    Neighbours = {};
end

SubmitNodeData();

function SubmitNodeDataKeybind()
    while true do
        local _, key = os.pullEvent(""key"");

        if key == keys.q then
            SubmitNodeData();
        end
    end
end

function PrintRouteKeybind()
    while true do
        local _, key = os.pullEvent(""key"");

        if key == keys.f then
            rednet.send(MainControlID, {Type = ""RequestRoutes""}, Protocol)

            local id, message, protocol = rednet.receive();

            if protocol == Protocol and message.Type == ""RoutePong"" then
                print(textutils.serialize(message.Package))
            end
        end
    end
end

function RealMain()
    local id, message, protocol = rednet.receive();

    if protocol ~= Protocol then RealMain() return end;

    print(""Receiving message from: "" .. id .. "", "" .. textutils.serialize(message))

    if message.Type == ""NearbyNodeRequest"" then
        print(""Sending pong to: "" .. id)
        rednet.send(id, {Type = ""NearbyNodeSubmission""}, Protocol)
    elseif message.Type == ""ChainMessage"" then
        if #message.Ids == message.CurrentIndex then
            RealMain();
            return;
        end

        local package = nil;

        if #message.Ids - 1 == message.CurrentIndex then
            package = message.Package;
        else
            message.CurrentIndex = message.CurrentIndex + 1;
            package = message;
        end


        rednet.send(message.Ids[message.CurrentIndex], package, Protocol);
    end

    RealMain();
end

function Main()
    parallel.waitForAll(RealMain, SubmitNodeDataKeybind, PrintRouteKeybind)
end

Main();"
8xaRCYPs,Lab_8(creating processes),anticlown,C,Saturday 9th of December 2023 07:05:49 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <time.h>
#include <signal.h>
#include <sys/wait.h>
#include <stdbool.h>

#define PROC_COUNT 9 // общее кол-во процессов. Нулевой(исходный) + 8 дочерних

static int processSelfNumber = 1; // номер выбранного на данный момент процесса
static int USR1 = 0;              // счетчик сигналов USR1
static int USR2 = 0;              // счетчик сигналов USR2
static bool isTerminated = false;
pid_t PIDs[PROC_COUNT] = {0, 0, 0, 0, 0, 0, 0, 0, 0}; // массив для хранения процессов

void printProcessInfo(const int signum)
{
    printf(""Процесс №%d (PID: %d, PPID: %d) получил сигнал %s за время %ld мксек\n\n"", processSelfNumber, getpid(), getppid(), (signum == SIGUSR1) ? ""SIGUSR1"" : ""SIGUSR2"", clock());
}

void createGroup(const int firstProcessIndex, const int lastProcessIndex)
{
    setpgid(PIDs[firstProcessIndex], PIDs[firstProcessIndex]);
    for (int i = firstProcessIndex; i <= lastProcessIndex; i++)
        setpgid(PIDs[i], PIDs[firstProcessIndex]);

    printf(""\n\tБыла создана группа процессов %d..%d с PGID = %d\n\n"", firstProcessIndex, lastProcessIndex, getpgid(PIDs[firstProcessIndex]));
}

void sendSignal(pid_t process, const int userSignal, const int SIGCOUNT, const bool isGroup)
{
    for (int h = 1; h <= SIGCOUNT; h++)
    {
        isGroup ? killpg(process, SIGUSR1) : kill(process, SIGUSR1);
        printf(""\tПроцесс №%d (PID: %d, PPID: %d) послал сигнал %s %s %d за время %ld мксек.>>>\n\n "", processSelfNumber, getpid(), getppid(), (userSignal == SIGUSR1) ? ""SIGUSR1"" : ""SIGUSR2"", isGroup ? "" группе "" : "" процессу "", process, clock());
        usleep(100000);
    }
    isGroup ? killpg(process, SIGTERM) : kill(process, SIGTERM);
}

void signalHandler(const int signalNumber)
{
    usleep(clock());
    switch (signalNumber)
    {
    case SIGUSR1:
        printProcessInfo(signalNumber);
        USR1++;
        break;
    case SIGUSR2:
        printProcessInfo(signalNumber);
        USR2++;
        break;
    default:
        isTerminated = true;
        break;
    }
}

void waitForChildProcesses()
{
    for (int i = 0; i < PROC_COUNT; i++)
        wait(NULL);
    printf(""\t\t\tПроцесс №%d (PID: %d, PPID: %d) закончил работу после %d-го сигнала SIGUSR1 и %d-го сигнала SIGUSR2\n\n"", processSelfNumber, getpid(), getppid(), USR1, USR2);
}

void createProcess(const int childProcessNumber, pid_t *pid)
{
    *pid = fork();
    if (*pid == 0)
    {
        processSelfNumber = childProcessNumber;
    }
    if (*pid > 0)
        PIDs[childProcessNumber] = *pid;
}

void createProcessesTree(const int SIGNUM)
{
    pid_t pid = fork(); // создание 0-го процесса

    if (pid == 0) // если процесс - потомок
    {
        /*
            Дерево процессов
            1->2
                2->3
                    3->(4,5,6)
                        4->8
                        6->7
        */

        PIDs[processSelfNumber] = getpid();
            createProcess(2, &pid);

        if (processSelfNumber == 2)
        {
            PIDs[processSelfNumber] = getpid();
            createProcess(3, &pid);
        }

        if (processSelfNumber == 3)
        {
            PIDs[processSelfNumber] = getpid();
            for (int i = 4; i <= 6; i++)
            {
                pid = fork();
                if (pid == 0)
                {
                    processSelfNumber = i;
                    break;
                }
                if (pid > 0)
                    PIDs[i] = pid;
            }
        }

        if (processSelfNumber == 4)
        {
            PIDs[processSelfNumber] = getpid();
            createProcess(8, &pid);
        }

        if (processSelfNumber == 6)
        {
            PIDs[processSelfNumber] = getpid();
            createProcess(7, &pid);
        }

        printf(""\tПроцесс №%d (PID: %d, PPID: %d) создан\n"", processSelfNumber, getpid(), getppid());
        usleep(100000);

        // создание группы процессов (3-6)
        if (processSelfNumber == 3)
            createGroup(4, 6);

        signal(SIGUSR1, signalHandler);
        signal(SIGUSR2, signalHandler);
        signal(SIGTERM, signalHandler);

        usleep(100000);

        /*
            последовательность обмена сигналами
            1->(8,7,6)SIGUSR1
            8->4 SIGUSR1
            7->4 SIGUSR2
            6->4 SIGUSR1
            4->(3,2)SIGUSR1
            2->1 SIGUSR2
        */
        switch (processSelfNumber)
        {
        case 1:
            sendSignal(PIDs[6], SIGUSR1, SIGNUM, true);
            break;
        case 8:
            sendSignal(PIDs[4], SIGUSR1, SIGNUM, false);
            break;
        case 7:
            sendSignal(PIDs[4], SIGUSR2, SIGNUM, false);
            break;
        case 6:
            sendSignal(PIDs[4], SIGUSR1, SIGNUM, false);
            break;
        case 4:
            sendSignal(PIDs[2], SIGUSR1, SIGNUM, true);
            break;
        case 2:
            sendSignal(PIDs[1], SIGUSR2, SIGNUM, false);
            break;
        }

        while (true)
            if (!isTerminated)
                break;
        // завершение всех процессов
        waitForChildProcesses();
    }
    else
    {
        printf(""\n\t####### Процесс №0 (PID: %d, PPID: %d) #######\n\n"", getpid(), getppid());
        wait(NULL);
    }
}

int main(int argc, char *argv[])
{
    const int NUM_OF_ARGS = 2;
    if (argc < NUM_OF_ARGS)
    {
        fprintf(stderr, ""Использование: %s <количество сигналов>\n"", argv[0]);
        return EXIT_FAILURE;
    }

    createProcessesTree(atoi(argv[1]));

    return EXIT_SUCCESS;
}"
euz8s7YL,MainControl.lua,Overcontrol1,Lua,Saturday 9th of December 2023 07:04:29 AM CDT,"-- SETTINGS
local ModemSide = ""top""
local Protocol = ""Nodes""
local Hostname = ""MainControl""

local StoreRouteLocally = false;
local StoreRouteOnExternalDiskDrive = true;

local DiskDriveSide = ""bottom"";

local RoutePath = ""Data/Route"";
local BackupRoutePath = ""Data/RouteBackup"";

-- VARIABLES
local DiskDrive = peripheral.wrap(DiskDriveSide);
local Routes = {};

function ReadDiskRoute()
    local diskRoutePath = ""disk/"" .. RoutePath;
    if (fs.exists(diskRoutePath)) then
        local handle = fs.open(diskRoutePath, ""r"");
        Routes = textutils.unserialize(handle.readAll());
        handle.close();
    end
end

function ReadLocalRoute()
    if (fs.exists(RoutePath)) then
        local handle = fs.open(RoutePath, ""r"");
        Routes = textutils.unserialize(handle.readAll());
        handle.close();
    end
end

function ThrowError(message)
    print(message)
    os.sleep(10);
    shell.exit();
end

function CalculateRoute(endingId)
    local route = {}
    for id, neighbours in pairs(Routes) do
        for neighbour in ipairs(neighbours) do
            if endingId == neighbour then
                for _id in ipairs(CalculateRoute(id)) do
                    table.insert(route, _id)
                end
            end
        end
    end

    return route;
end

function WriteRouteFile()
    local serialized = textutils.serialize(Routes);
    if StoreRouteLocally then
        local RouteFile = fs.open(RoutePath, ""w"");
        RouteFile.write(serialized);
        RouteFile.close();

        local BackupRouteFile = fs.open(BackupRoutePath, ""w"");
        BackupRouteFile.write(serialized);
        BackupRouteFile.close();
    end

    if StoreRouteOnExternalDiskDrive then
        local DiskRoutePath = ""disk/"" .. RoutePath;
        local RouteFile = fs.open(DiskRoutePath, ""w"");
        RouteFile.write(serialized);
        RouteFile.close();

        local BackupRouteFile = fs.open(""disk/"" .. BackupRoutePath, ""w"");
        BackupRouteFile.write(serialized);
        BackupRouteFile.close();
    end
end

if (StoreRouteOnExternalDiskDrive and DiskDrive == nil) then
    ThrowError(""No disk drive found on side: "" .. DiskDriveSide);
end

if StoreRouteLocally then
    ReadLocalRoute();
elseif StoreRouteOnExternalDiskDrive then
    ReadDiskRoute();
else
    ThrowError(""You must specify a storage location for Routes."")
end

rednet.open(ModemSide);
rednet.host(Protocol, Hostname)

function Main()
    local id, message, protocol = rednet.receive();

    print(""Message received from id: "".. id .. "", "" .. textutils.serialize(message))

    if protocol ~= Protocol then
        print(""Message attempted with invalid protocol, ignoring"")
        Main();
        return;
    end

    if message.Type == ""Submit"" then
        Routes[id] = message.ConnectedNodes;

        WriteRouteFile();
    elseif message.Type == ""RequestRoutes"" then
        print(""Computer: "" .. id .. "" has requested routes. Sending..."")
        rednet.send(id, {Type = ""RoutePong"", Package = Routes}, Protocol);
    elseif message.Type == ""Send"" then
        local ListOfIds = CalculateRoute(message.ID);
        local CurrentIndex = 1;
        local Message = message.Package;
    end

    Main();
end

Main();"
F4XjtgfK,Blog,Yonkow,JavaScript,Saturday 9th of December 2023 06:27:17 AM CDT,"function attachEvents() {
  const baseURL = ""http://localhost:3030/jsonstore/blog/"";

  const postsSelector = document.getElementById(""posts"");
  const postTitle = document.getElementById(""post-title"");
  const postBody = document.getElementById(""post-body"");
  const postComents = document.getElementById(""post-comments"");

  const btnLoadPosts = document.getElementById(""btnLoadPosts"");
  const btnViewPosts = document.getElementById(""btnViewPost"");

  let postsObj = {};
  btnLoadPosts.addEventListener(""click"", () => {
    postsSelector.innerHTML = """";

    fetch(`${baseURL}posts`)
      .then((response) => {
        return response.json();
      })
      .then((e) => {
        postsObj = e;
        Object.values(e).forEach((post) => {
          let option = document.createElement(""option"");
          option.textContent = post.title;
          option.setAttribute(""value"", post.id);
          postsSelector.appendChild(option);
        });
      })
      .catch((error) => console.log(error));
  });

  btnViewPosts.addEventListener(""click"", () => {
    postComents.innerHTML = """";
    postBody.innerHTML = """";
    let currentPostId = postsSelector.value;
    postBody.textContent = postsObj[currentPostId].body;
    postTitle.textContent = postsObj[currentPostId].title;

    fetch(`${baseURL}comments`)
      .then((promise) => promise.json())
      .then((res) => {
        for (const value of Object.values(res)) {
          if (currentPostId === value.postId) {
            let li = document.createElement(""li"");
            li.setAttribute(""id"", value.id);
            li.textContent = value.text;
            postComents.appendChild(li);
          }
        }
      })
      .catch((err) => console.log(err));
    console.log(comments);
  });
}

attachEvents();
"
jcZBqrC4,snake_v4,Korotkodul,Python,Saturday 9th of December 2023 06:24:29 AM CDT,"import pygame, sys, random
from pygame.math import Vector2

class SNAKE:
    def __init__(self):
        self.body = [Vector2(5,10), Vector2(6,10), Vector2(7,10)]
        self.direction = Vector2(-1, 0)
        self.new_block = False

    def draw_snake(self):
        for block in self.body:
            #create a rect
            x_pos = int(block.x * cell_size)
            y_pos = int(block.y * cell_size)
            block_rect = pygame.Rect(x_pos, y_pos,cell_size,cell_size)
            #draw the rectangle
            pygame.draw.rect(screen, (255, 0, 0), block_rect)

    def move_snake(self):
        if self.new_block == False:
            body_copy = self.body[:-1]
            body_copy.insert(0, body_copy[0] + self.direction)
            self.body = body_copy
        else:
            body_copy = self.body[:]
            body_copy.insert(0, body_copy[0] + self.direction)
            self.body = body_copy
            self.new_block = False

    def add_block(self):
        self.new_block = True

class FRUIT:
    def __init__(self):
        #create x and y position
        self.x = random.randint(0, cell_number - 1)
        self.y = random.randint(0, cell_number - 1)
        self.pos = Vector2(self.x, self.y)
    def draw_fruit(self):
        #create rectangle
        fruit_rect = pygame.Rect(int(self.pos.x * cell_size), int(self.pos.y * cell_size), cell_size, cell_size)
        #draw the rectangle
        pygame.draw.rect(screen, (126, 166, 114), fruit_rect)
    def randomize(self):
        self.x = random.randint(0, cell_number - 1)
        self.y = random.randint(0, cell_number - 1)
        self.pos = Vector2(self.x, self.y)

class MAIN:
    def __init__(self):
        self.snake = SNAKE()
        self.fruit = FRUIT()
    def update(self):
        self.snake.move_snake()
        self.check_collision()
        self.check_fail()
    def draw_elements(self):
        self.snake.draw_snake()
        self.fruit.draw_fruit()
    def check_collision(self):
        if self.fruit.pos == self.snake.body[0]:
            print('snack')
            #reposition fruit
            self.fruit.randomize()
            #add a head
            self.snake.add_block()
    def check_fail(self):
        if not 0 <= self.snake.body[0].x < cell_number:
            self.game_over()
        if not 0 <= self.snake.body[0].y < cell_number:
            self.game_over()
        for block in self.snake.body[1:]:
            if block == self.snake.body[0]:
                self.game_over()
    def game_over(self):
        pygame.quit()
        sys.exit()
pygame.init()
cell_size = 40
cell_number = 20
screen = pygame.display.set_mode((cell_number * cell_size, cell_number * cell_size))
clock = pygame.time.Clock()



SCREEN_UPDATE = pygame.USEREVENT
pygame.time.set_timer(SCREEN_UPDATE, 150)

main_game = MAIN()

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type == SCREEN_UPDATE:
            main_game.update()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                if main_game.snake.direction.y != 1:
                    main_game.snake.direction = Vector2(0, -1)
            elif event.key == pygame.K_DOWN:
                if main_game.snake.direction.y != -1:
                    main_game.snake.direction = Vector2(0, 1)
            elif event.key == pygame.K_RIGHT:
                if main_game.snake.direction.x != -1:
                    main_game.snake.direction = Vector2(1, 0)
            elif event.key == pygame.K_LEFT:
                if main_game.snake.direction.x != 1:
                    main_game.snake.direction = Vector2(-1, 0)

    screen.fill((175, 250, 70))
    #main_game.fruit.draw_fruit()
    #main_game.snake.draw_snake()
    main_game.draw_elements()
    pygame.display.update()

    clock.tick(60)

"
RGJdBwgW,rust msgq,ApelPro,Rust,Saturday 9th of December 2023 06:22:54 AM CDT,"use nix::unistd::ForkResult::{Child,Parent};
use nix::unistd::{fork};
use posixmq::PosixMq;

fn main() {

 const N:i32 = 2;
 let mut i = 0;

 let mq = PosixMq::create( ""/dfdf"" ).expect( ""Error, cannot create message queue!"" );

 let mut msg = vec![0u8;8192];

 while i < N {
  match fork().expect( ""Error, while creating subprocess!"" ) {
   Child => {
    break;
   },
   Parent {child: _} => {
    i+=1;
   },
  }
 }

 match i {
  0 => {
   println!( ""I am the first one..."" );
   mq.recv( &mut msg ).expect( ""Error while receiving message!"" );
   
   println!( ""{}"", String::from_utf8(msg).unwrap() ); 
  },
  1 => {
   println!( ""I am the second one..."" );
   mq.recv( &mut msg ).expect( ""Error while receiving message!"" );

   println!( ""{}"", String::from_utf8(msg).unwrap() );
  },
  2 => {
   println!( ""I am the parent of that two :("" );
   mq.send( 1, b""Helloka"" ).expect( ""Error sending message"" );
   mq.send( 2, b""Hohaho"" ).expect( ""Error while sending message"" );
  },
  _ => {}
 }
}"
CXw3iCAA,Untitled,sissou123,Python,Saturday 9th of December 2023 06:09:54 AM CDT,"The Complete Python Course | Learn Python by Doing in 2023
Go from Beginner to Expert in Python by building projects. The best investment for your Python journey! 
for more:https://dz-linkk.com/gerKP
"
Fw2cX2Ub,Scam America First Credit Union,bombaires,AIMMS,Saturday 9th of December 2023 06:04:15 AM CDT,"<a href=""mailto:americafirstcreditunion002@gmail.com"">americafirstcreditunion002@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+3399@gmail.com"">americafirstcreditunion002+3399@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+27349@gmail.com"">americafirstcreditunion002+27349@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+24614@gmail.com"">americafirstcreditunion002+24614@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+802@gmail.com"">americafirstcreditunion002+802@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+14614@gmail.com"">americafirstcreditunion002+14614@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+10920@gmail.com"">americafirstcreditunion002+10920@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+19238@gmail.com"">americafirstcreditunion002+19238@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+30255@gmail.com"">americafirstcreditunion002+30255@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+3648@gmail.com"">americafirstcreditunion002+3648@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+1618@gmail.com"">americafirstcreditunion002+1618@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+27261@gmail.com"">americafirstcreditunion002+27261@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+9449@gmail.com"">americafirstcreditunion002+9449@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+3328@gmail.com"">americafirstcreditunion002+3328@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+26881@gmail.com"">americafirstcreditunion002+26881@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+12744@gmail.com"">americafirstcreditunion002+12744@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+21119@gmail.com"">americafirstcreditunion002+21119@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+7863@gmail.com"">americafirstcreditunion002+7863@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+177@gmail.com"">americafirstcreditunion002+177@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+9367@gmail.com"">americafirstcreditunion002+9367@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+1730@gmail.com"">americafirstcreditunion002+1730@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+18781@gmail.com"">americafirstcreditunion002+18781@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+13860@gmail.com"">americafirstcreditunion002+13860@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+25554@gmail.com"">americafirstcreditunion002+25554@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+25234@gmail.com"">americafirstcreditunion002+25234@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+22862@gmail.com"">americafirstcreditunion002+22862@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+3414@gmail.com"">americafirstcreditunion002+3414@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+28073@gmail.com"">americafirstcreditunion002+28073@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+13243@gmail.com"">americafirstcreditunion002+13243@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+8217@gmail.com"">americafirstcreditunion002+8217@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+15378@gmail.com"">americafirstcreditunion002+15378@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+3082@gmail.com"">americafirstcreditunion002+3082@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+28915@gmail.com"">americafirstcreditunion002+28915@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+31876@gmail.com"">americafirstcreditunion002+31876@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+3849@gmail.com"">americafirstcreditunion002+3849@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+4123@gmail.com"">americafirstcreditunion002+4123@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+2742@gmail.com"">americafirstcreditunion002+2742@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+31345@gmail.com"">americafirstcreditunion002+31345@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+8346@gmail.com"">americafirstcreditunion002+8346@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+17540@gmail.com"">americafirstcreditunion002+17540@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+21301@gmail.com"">americafirstcreditunion002+21301@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+3834@gmail.com"">americafirstcreditunion002+3834@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+23681@gmail.com"">americafirstcreditunion002+23681@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+4678@gmail.com"">americafirstcreditunion002+4678@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+15834@gmail.com"">americafirstcreditunion002+15834@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+11689@gmail.com"">americafirstcreditunion002+11689@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+480@gmail.com"">americafirstcreditunion002+480@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+32624@gmail.com"">americafirstcreditunion002+32624@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+1269@gmail.com"">americafirstcreditunion002+1269@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+6080@gmail.com"">americafirstcreditunion002+6080@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+11199@gmail.com"">americafirstcreditunion002+11199@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+25194@gmail.com"">americafirstcreditunion002+25194@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+11896@gmail.com"">americafirstcreditunion002+11896@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+2774@gmail.com"">americafirstcreditunion002+2774@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+13972@gmail.com"">americafirstcreditunion002+13972@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+14974@gmail.com"">americafirstcreditunion002+14974@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+11356@gmail.com"">americafirstcreditunion002+11356@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+17769@gmail.com"">americafirstcreditunion002+17769@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+21852@gmail.com"">americafirstcreditunion002+21852@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+14523@gmail.com"">americafirstcreditunion002+14523@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+14431@gmail.com"">americafirstcreditunion002+14431@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+31011@gmail.com"">americafirstcreditunion002+31011@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+31925@gmail.com"">americafirstcreditunion002+31925@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+18186@gmail.com"">americafirstcreditunion002+18186@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+24800@gmail.com"">americafirstcreditunion002+24800@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+3915@gmail.com"">americafirstcreditunion002+3915@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+13142@gmail.com"">americafirstcreditunion002+13142@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+25503@gmail.com"">americafirstcreditunion002+25503@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+1000@gmail.com"">americafirstcreditunion002+1000@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+10230@gmail.com"">americafirstcreditunion002+10230@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+485@gmail.com"">americafirstcreditunion002+485@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+5459@gmail.com"">americafirstcreditunion002+5459@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+18823@gmail.com"">americafirstcreditunion002+18823@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+32067@gmail.com"">americafirstcreditunion002+32067@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+29919@gmail.com"">americafirstcreditunion002+29919@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+16401@gmail.com"">americafirstcreditunion002+16401@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+25302@gmail.com"">americafirstcreditunion002+25302@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+11327@gmail.com"">americafirstcreditunion002+11327@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+29436@gmail.com"">americafirstcreditunion002+29436@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+6935@gmail.com"">americafirstcreditunion002+6935@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+31839@gmail.com"">americafirstcreditunion002+31839@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+22023@gmail.com"">americafirstcreditunion002+22023@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+16791@gmail.com"">americafirstcreditunion002+16791@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+12533@gmail.com"">americafirstcreditunion002+12533@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+5280@gmail.com"">americafirstcreditunion002+5280@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+2677@gmail.com"">americafirstcreditunion002+2677@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+20674@gmail.com"">americafirstcreditunion002+20674@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+19411@gmail.com"">americafirstcreditunion002+19411@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+4369@gmail.com"">americafirstcreditunion002+4369@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+19014@gmail.com"">americafirstcreditunion002+19014@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+24321@gmail.com"">americafirstcreditunion002+24321@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+22289@gmail.com"">americafirstcreditunion002+22289@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+30512@gmail.com"">americafirstcreditunion002+30512@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+28768@gmail.com"">americafirstcreditunion002+28768@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+10138@gmail.com"">americafirstcreditunion002+10138@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+10981@gmail.com"">americafirstcreditunion002+10981@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+9124@gmail.com"">americafirstcreditunion002+9124@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+11044@gmail.com"">americafirstcreditunion002+11044@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+22724@gmail.com"">americafirstcreditunion002+22724@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+6597@gmail.com"">americafirstcreditunion002+6597@gmail.com</a>
<a href=""mailto:americafirstcreditunion002+131@gmail.com"">americafirstcreditunion002+131@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion@gmail.com"">afcu.americafirstcreditunion@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+28013@gmail.com"">afcu.americafirstcreditunion+28013@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+26209@gmail.com"">afcu.americafirstcreditunion+26209@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+18480@gmail.com"">afcu.americafirstcreditunion+18480@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+24994@gmail.com"">afcu.americafirstcreditunion+24994@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+13937@gmail.com"">afcu.americafirstcreditunion+13937@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+15643@gmail.com"">afcu.americafirstcreditunion+15643@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+8055@gmail.com"">afcu.americafirstcreditunion+8055@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+1481@gmail.com"">afcu.americafirstcreditunion+1481@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+32538@gmail.com"">afcu.americafirstcreditunion+32538@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+7499@gmail.com"">afcu.americafirstcreditunion+7499@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+16575@gmail.com"">afcu.americafirstcreditunion+16575@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+21069@gmail.com"">afcu.americafirstcreditunion+21069@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+6932@gmail.com"">afcu.americafirstcreditunion+6932@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+21575@gmail.com"">afcu.americafirstcreditunion+21575@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+8749@gmail.com"">afcu.americafirstcreditunion+8749@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+15835@gmail.com"">afcu.americafirstcreditunion+15835@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+14722@gmail.com"">afcu.americafirstcreditunion+14722@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+30638@gmail.com"">afcu.americafirstcreditunion+30638@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+9937@gmail.com"">afcu.americafirstcreditunion+9937@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+25532@gmail.com"">afcu.americafirstcreditunion+25532@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+21040@gmail.com"">afcu.americafirstcreditunion+21040@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+4924@gmail.com"">afcu.americafirstcreditunion+4924@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+13203@gmail.com"">afcu.americafirstcreditunion+13203@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+25342@gmail.com"">afcu.americafirstcreditunion+25342@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+12457@gmail.com"">afcu.americafirstcreditunion+12457@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+18664@gmail.com"">afcu.americafirstcreditunion+18664@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+16417@gmail.com"">afcu.americafirstcreditunion+16417@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+7213@gmail.com"">afcu.americafirstcreditunion+7213@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+1853@gmail.com"">afcu.americafirstcreditunion+1853@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+19277@gmail.com"">afcu.americafirstcreditunion+19277@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+148@gmail.com"">afcu.americafirstcreditunion+148@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+25081@gmail.com"">afcu.americafirstcreditunion+25081@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+31328@gmail.com"">afcu.americafirstcreditunion+31328@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+12077@gmail.com"">afcu.americafirstcreditunion+12077@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+7290@gmail.com"">afcu.americafirstcreditunion+7290@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+21161@gmail.com"">afcu.americafirstcreditunion+21161@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+26569@gmail.com"">afcu.americafirstcreditunion+26569@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+28357@gmail.com"">afcu.americafirstcreditunion+28357@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+29225@gmail.com"">afcu.americafirstcreditunion+29225@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+3318@gmail.com"">afcu.americafirstcreditunion+3318@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+17143@gmail.com"">afcu.americafirstcreditunion+17143@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+16496@gmail.com"">afcu.americafirstcreditunion+16496@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+11931@gmail.com"">afcu.americafirstcreditunion+11931@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+29675@gmail.com"">afcu.americafirstcreditunion+29675@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+23627@gmail.com"">afcu.americafirstcreditunion+23627@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+14709@gmail.com"">afcu.americafirstcreditunion+14709@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+31814@gmail.com"">afcu.americafirstcreditunion+31814@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+26619@gmail.com"">afcu.americafirstcreditunion+26619@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+1490@gmail.com"">afcu.americafirstcreditunion+1490@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+1146@gmail.com"">afcu.americafirstcreditunion+1146@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+13498@gmail.com"">afcu.americafirstcreditunion+13498@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+30956@gmail.com"">afcu.americafirstcreditunion+30956@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+20603@gmail.com"">afcu.americafirstcreditunion+20603@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+11235@gmail.com"">afcu.americafirstcreditunion+11235@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+31112@gmail.com"">afcu.americafirstcreditunion+31112@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+14402@gmail.com"">afcu.americafirstcreditunion+14402@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+3219@gmail.com"">afcu.americafirstcreditunion+3219@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+1000@gmail.com"">afcu.americafirstcreditunion+1000@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+3037@gmail.com"">afcu.americafirstcreditunion+3037@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+14049@gmail.com"">afcu.americafirstcreditunion+14049@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+16497@gmail.com"">afcu.americafirstcreditunion+16497@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+17773@gmail.com"">afcu.americafirstcreditunion+17773@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+14943@gmail.com"">afcu.americafirstcreditunion+14943@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+23756@gmail.com"">afcu.americafirstcreditunion+23756@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+16402@gmail.com"">afcu.americafirstcreditunion+16402@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+29038@gmail.com"">afcu.americafirstcreditunion+29038@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+8193@gmail.com"">afcu.americafirstcreditunion+8193@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+30917@gmail.com"">afcu.americafirstcreditunion+30917@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+23199@gmail.com"">afcu.americafirstcreditunion+23199@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+18997@gmail.com"">afcu.americafirstcreditunion+18997@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+22501@gmail.com"">afcu.americafirstcreditunion+22501@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+15478@gmail.com"">afcu.americafirstcreditunion+15478@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+10516@gmail.com"">afcu.americafirstcreditunion+10516@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+15881@gmail.com"">afcu.americafirstcreditunion+15881@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+20116@gmail.com"">afcu.americafirstcreditunion+20116@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+17374@gmail.com"">afcu.americafirstcreditunion+17374@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+5912@gmail.com"">afcu.americafirstcreditunion+5912@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+599@gmail.com"">afcu.americafirstcreditunion+599@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+26024@gmail.com"">afcu.americafirstcreditunion+26024@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+9115@gmail.com"">afcu.americafirstcreditunion+9115@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+17708@gmail.com"">afcu.americafirstcreditunion+17708@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+11507@gmail.com"">afcu.americafirstcreditunion+11507@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+18550@gmail.com"">afcu.americafirstcreditunion+18550@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+4955@gmail.com"">afcu.americafirstcreditunion+4955@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+7722@gmail.com"">afcu.americafirstcreditunion+7722@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+28644@gmail.com"">afcu.americafirstcreditunion+28644@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+30561@gmail.com"">afcu.americafirstcreditunion+30561@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+15754@gmail.com"">afcu.americafirstcreditunion+15754@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+1360@gmail.com"">afcu.americafirstcreditunion+1360@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+19619@gmail.com"">afcu.americafirstcreditunion+19619@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+909@gmail.com"">afcu.americafirstcreditunion+909@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+22431@gmail.com"">afcu.americafirstcreditunion+22431@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+8843@gmail.com"">afcu.americafirstcreditunion+8843@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+2600@gmail.com"">afcu.americafirstcreditunion+2600@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+25888@gmail.com"">afcu.americafirstcreditunion+25888@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+23368@gmail.com"">afcu.americafirstcreditunion+23368@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+21353@gmail.com"">afcu.americafirstcreditunion+21353@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+6357@gmail.com"">afcu.americafirstcreditunion+6357@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+16506@gmail.com"">afcu.americafirstcreditunion+16506@gmail.com</a>
<a href=""mailto:afcu.americafirstcreditunion+18749@gmail.com"">afcu.americafirstcreditunion+18749@gmail.com</a>"
mjwr1FpF,data777,TestGuy1,JSON,Saturday 9th of December 2023 06:00:09 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'e4333ab13f85a6b8aed14daf57a6b3bff92385df04ad0a64eedeb94b972959ec3e5760413d598ab36cc5a2a3237fdb54547fd4ec2e12cee27c49567ae41fe0162d0a0ac84052b36dcf179f9278bc3bcad8bbf0a84cab5f019b826454494ac691956fb176a98df5dd781c27b5e73f63092a36e6a16483be75d7ecd66e6deabfc8',
  otherdata: [
    '5026087f19528b15f2a51df52c39f275',
    '0502c2085e0555f4ec0f86b67886f628',
    'f36862b59339f78041507d6238abd328',
    'f22bdb2963c8cced8c7d5ff9506a1e8e',
    'bda91482b4f6cb4740e244e6366c6c53',
    'a0f1f6eafd78d6d12cc33f4d1b7f43a8',
    'f6c243a01b3ca3a01e1c970695144de9',
    'd809effd4150384abd026a52f07b2b69'
  ]
}"
kw8vmyV0,Untitled,ggmorello,JSON,Saturday 9th of December 2023 05:48:45 AM CDT,"{
  ""experiment_name"": ""DAppSCAN_patches20_tmp0.7_topp0.95_gpt-3.5-turbo_"",
  ""dataset"": ""sc_datasets/DAppSCAN_processed"",
  ""smartbugs_tools"": [
    ""slither""
  ],
  ""prompt_style"": ""analyzers_natural_language_results"",
  ""n_threads"": ""sb_threads=60 llm_rapair_threads=10"",
  ""llm_settings"": {
    ""model_name"": ""gpt-3.5-turbo"",
    ""secret_api_key"": ""OPENAI_API_KEY"",
    ""temperature"": 0.7,
    ""top_p"": 0.95,
    ""num_candidate_patches"": 20,
    ""max_time"": 3600,
    ""stop"": [
      ""///""
    ]
  },
  ""target_vulnerabilities"": {
    ""reentrancy"": {
      ""summary"": {
        ""n_contracts"": 15,
        ""n_patches"": 300,
        ""n_plausible_patches"": 14,
        ""unique_patches"": 228,
        ""n_unique_paches_that_compile"": 228
      },
      ""contracts"": {
        ""Governor"": {
          ""sc_name"": ""Governor"",
          ""vuln_detected"": true,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""7/7"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Bug/Fix""
        },
        ""ERC721Mock"": {
          ""sc_name"": ""ERC721Mock"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""11/11"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""ERC721PausableMock"": {
          ""sc_name"": ""ERC721PausableMock"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""15/15"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""ERC721Mintable"": {
          ""sc_name"": ""ERC721Mintable"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""14/14"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""ERC721Metadata"": {
          ""sc_name"": ""ERC721Metadata"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""14/14"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""ERC721Pausable"": {
          ""sc_name"": ""ERC721Pausable"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""14/14"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""ERC721"": {
          ""sc_name"": ""ERC721"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""17/17"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""ERC721MetadataMintable"": {
          ""sc_name"": ""ERC721MetadataMintable"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""17/17"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""ERC721Enumerable"": {
          ""sc_name"": ""ERC721Enumerable"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""17/17"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""ERC721Burnable"": {
          ""sc_name"": ""ERC721Burnable"",
          ""vuln_detected"": false,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""15/15"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Fix/Fix""
        },
        ""TokenVesting"": {
          ""sc_name"": ""TokenVesting"",
          ""vuln_detected"": true,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""14/14"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Bug/Fix""
        },
        ""ERC20Migrator"": {
          ""sc_name"": ""ERC20Migrator"",
          ""vuln_detected"": true,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""13/13"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Bug/Fix""
        },
        ""CrowdsaleToken"": {
          ""sc_name"": ""CrowdsaleToken"",
          ""vuln_detected"": true,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""20/20"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Bug/Fix""
        },
        ""UpgradeableToken"": {
          ""sc_name"": ""UpgradeableToken"",
          ""vuln_detected"": true,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""20/20"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": false,
          ""slither"": ""Bug/Bug""
        },
        ""toBeUpgraded"": {
          ""sc_name"": ""toBeUpgraded"",
          ""vuln_detected"": true,
          ""n_patches"": 20,
          ""unique_paches_that_compile"": ""20/20"",
          ""best_patch"": ""patch_0"",
          ""compiles"": true,
          ""plausible_patch"": true,
          ""slither"": ""Bug/Fix""
        }
      },
      ""plausible_patches"": 0
    }
  },
  ""run_time"": ""0:04:29""
}"
fnMNUp3s,Практичне завдання №4(13). HTML. Вправа 3,Lavig,HTML,Saturday 9th of December 2023 05:25:07 AM CDT,"<title> Вправа 3 </title>
<table border=0 align=center>
<caption><b>Полеты на воздушном шаре</b></caption>
<tr>
<td width=""255"" height=""390"" style=""background-image: url('https://i.ibb.co/S3Jvs5f/balloon.jpg');"">
<p style=""text-align: left; margin-left: -170px;"">Воздушный шар,<br>наполненный горячим<br>воздухом, летает<br>потому, что горячий<br>воздух легче холодного.<br>Первые воздушные<br>шары построили в 1783<br>г. во Франции братья<br>Монгольфье.
</p>
</td>
<td>
<p style=""text-align: left; margin-right: -170px;"">
Первыми пассажирами<br>воздушного шара стали<br>овца, утка и петух. Их-<br>полет продолжался<br>всего  8 минут. Первый<br>полет человека<br>на воздушном шаре длился<br>25 минут, а пролетел<br>шар 8 км.
</p>
</td>
</tr>
</table>
<table border=0 align=center>
<tr>
<td colspan=""2"" style=""text-align: center;"">
<p>
Позднее шары стали наполнять не горячим воздухом, а газами легче воздуха, например,<br>водородом.
</p>
</td>
</tr>
</table>"
QB6RD7nG,Практичне завдання №4(13). HTML. Вправа 2,Lavig,HTML,Saturday 9th of December 2023 05:24:39 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
<meta charset=""UTF-8"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
<title> Вправа 2 </title>
<style>
body {margin: 0; padding: 0;}
table {width: 1000px; margin: auto; border-collapse: collapse; font-family: Arial, sans-serif; font-size: 16px;}
th {border: solid 1px gray; color: blue; text-align: center; padding: 5px;}
td {border: solid 1px gray; color: #434982; text-align: center; padding: 3px;}
</style>
</head>
<body>
<table>
<tr>
<th rowspan=""2""; style=""border: solid black 1 px: white; text-align: center; background-color: #207dc3; color: white; border-right: 1px solid #c1dde9; border-left: 2px solid #207dc3; width: 9%;"">Число</th>
<th rowspan=""2""; style=""border: solid black 1 px: white; text-align: center; background-color: #207dc3; color: white; border-right: 1px solid #c1dde9; width: 8%;"">Особа</th>
<th colspan=""2""; style=""border: solid white 1 px: black; text-align: center; background-color: #207dc3; color: white; border-bottom: 1px solid #c1dde9;"">Дієвідміни</th>
</tr>
<tr>
<td style=""width: 42%; background-color: #207dc3; border-right: 1px solid #c1dde9; color: white;""><B>I</B><br><span style=""color: white;"">(</span><span style=""color: orange;""><I><B>брати</I></B></span><span style=""color: white;""><I><B>,</I></B></span><span style=""color: orange;""> <I><B>мати</I></B></span><span style=""color: white;"">)</span>
</td>
<td style=""background-color: #207dc3; color: white;""><B>II</B><br><span style=""color: white;"">(</span><span style=""color: orange;""><I><B>мчати</I></B></span><span style=""color: white;""><I><B>,</I></B></span><span style=""color: orange;""> <I><B>стояти</I></B></span><span style=""color: white;"">)</span>
</tr>
<tr>
<td rowspan=""3""; style=""border-right: 2px solid #207dc3; border-left: 2px solid #207dc3; border-bottom: 2px solid #207dc3; height: 100px; padding-right: 15px;""><I><B>Однина<I><B></td>
<td style=""border-right: 2px solid #207dc3; border-bottom: none; text-align: left; padding-left: 10px;""><I><B>1-а<I><B></td>
<td style=""border-right: 2px solid #cccccc; border-bottom: none;"">-у, -ю</td>
<td style=""border-right: 2px solid #207dc3; border-bottom: none; border-top: none;"">-у, -ю</td>
</tr>
<tr>
<td style=""background-color: #e8f5fe; border-right: 2px solid #207dc3; border-bottom: none; border-top: none; text-align: left; padding-left: 10px;""><I><B>2-а<I><B></td>
<td style=""background-color: #e8f5fe; border-right: 2px solid #cccccc; border-bottom: none; border-top: none;"">-<I><B>е</I></B>ш, -<I><B>є</I></B>ш</td>
<td style=""background-color: #e8f5fe; border-right: 2px solid #207dc3; border-bottom: none; border-top: none;"">-<I><B>и</I></B>ш, -<I><B>ї</I></B>ш</td>
</tr>
<tr>
<td style=""border-right: 2px solid #207dc3; border-bottom: 2px solid #207dc3; border-top: none; text-align: left; padding-left: 10px;""><I><B>3-а<I><B></td>
<td style=""border-right: 2px solid #cccccc; border-bottom: 2px solid #207dc3;; border-top: none;"">-<I><B>е,</B></I> -<I><B>є</B></I></td>
<td style=""border-right: 2px solid #207dc3; border-bottom: 2px solid #207dc3; border-top: none;"">-<I><B>и</I></B>ть, -<I><B>ї</I></B>ть</td>
<tr>
<td rowspan=""3""; style=""background-color: #e8f5fe; border-right: 2px solid #207dc3; border-left: 2px solid #207dc3; border-bottom: 2px solid #207dc3; height: 100px;""><I><B>Множина<I><B></td>
<td style=""background-color: #e8f5fe; border-right: 2px solid #207dc3; border-bottom: none; border-top: none; text-align: left; padding-left: 10px;""><I><B>1-а<I><B></td>
<td style=""background-color: #e8f5fe; border-right: 2px solid #cccccc; border-bottom: none; border-top: none;"">-<I><B>е</I></B>мо, -<I><B>ємо</I></B></td>
<td style=""background-color: #e8f5fe; border-right: 2px solid #207dc3; border-bottom: none; border-top: none;"">-<I><B>и</I></B>мо, -<I><B>ї</I></B>мо</td>
</tr>
<tr>
<td style=""border-right: 2px solid #207dc3; border-bottom: 2px solid #207dc3; border-bottom: none; border-top: none; text-align: left; padding-left: 10px;""><I><B>2-а<I><B></td>
<td style=""border-right: 2px solid #cccccc; border-bottom: 2px solid #207dc3; border-bottom: none; border-top: none;"">-<I><B>е</I></B>те, -<I><B>є</I></B>те</td>
<td style=""border-right: 2px solid #207dc3; border-bottom: 2px solid #207dc3; border-bottom: none; border-top: none;"">-<I><B>и</I></B>те, -<I><B>ї</I></B>те</td>
</tr>
<tr>
<td style=""background-color: #e8f5fe; border-right: 2px solid #207dc3; border-bottom: 2px solid #207dc3; border-top: none; text-align: left; padding-left: 10px;""><I><B>3-а<I><B></td>
<td style=""background-color: #e8f5fe; border-right: 2px solid #cccccc; border-bottom: 2px solid #207dc3; border-top: none;"">-<I><B>уть,</B></I> -<I><B>ють</B></I></td>
<td style=""background-color: #e8f5fe; border-right: 2px solid #207dc3; border-bottom: 2px solid #207dc3; border-top: none;"">-<I><B>ать,</B></I> -<I><B>ять</B></I></td>
</tr>
</body>
</html>"
MXdsgXkJ,Практичне завдання №4(13). HTML. Вправа 1,Lavig,HTML,Saturday 9th of December 2023 05:24:07 AM CDT,"<title> Вправа 1 </title>
<table border=4 background=""https://i.ibb.co/Ss8TMWk/img24.jpg"" align=center>
<tr>
<td width=""290"" height=""250"" align=center>
<img src=""https://i.ibb.co/t4p7wHp/horse.gif"" width=""200"" height=""160"" >
</td>
</tr>
</table>"
9mMQ9iZE,Практичне завдання №3(12). HTML. Самостійна робота,Lavig,HTML,Saturday 9th of December 2023 05:23:09 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title> Таблиця </title>
  <h2 style=""text-align: center; color: yellow;""> <B> Планети Сонячної системи <B> </h2>
  <style>
    body {margin: 0; padding: 0; background-color: black; background-image: url('https://i.ibb.co/T8fG5wb/image.png'); background-size: cover; background-position: 100% -60%; background-repeat: no-repeat;}
     table {width: 500px; margin: auto; border-collapse: separate;}
  th {border: solid 1px gray; color: white; text-align: center; padding: 5px;}
  td {border: solid 1px gray; color: white; text-align: center; padding: 3px;}
  </style>
</head>
<body>
<table>
  <tr>
<th style=""border: solid white 1 px; color: white; text-align: center;"">№</th>
<th style=""border: solid white 1 px: white; text-align: center;"">Назва</th>
<th style=""border: solid white 1 px: white; text-align: center;"">Маса (земних мас)</th>
<th style=""border: solid white 1 px: white; text-align: center;"">Кількість супутників</th>
  </tr>
  <tr>
    <td>1</td>
    <td>Меркурій</td>
    <td>0,06</td>
    <td>0</td>
  </tr>
  <tr>
    <td>2</td>
    <td>Венера</td>
    <td>0,82</td>
    <td>0</td>
  </tr>
  <tr>
    <td>3</td>
    <td>Земля</td>
    <td>1,0</td>
    <td>1</td>
  </tr>
  <tr>
    <td>4</td>
    <td>Марс</td>
    <td>0,11</td>
    <td>2</td>
  </tr>
  <tr>
    <td>5</td>
    <td>Юпітер</td>
    <td>318</td>
    <td>69</td>
  </tr>
  <tr>
    <td>6</td>
    <td>Сатурн</td>
    <td>95</td>
    <td>62</td>
  </tr>
  <tr>
    <td>7</td>
    <td>Уран</td>
    <td>14,6</td>
    <td>27</td>
  </tr>
  <tr>
    <td>8</td>
    <td>Нептун</td>
    <td>17,2</td>
    <td>13</td>
  </tr>
</table>
</body>
</html>"
cAe1na4n,Nigerian scammers [9-12-1/2023],bombaires,AIMMS,Saturday 9th of December 2023 05:21:01 AM CDT,"<a href=""mailto:pbsksd@gmail.com"">pbsksd@gmail.com</a>
<a href=""mailto:p.bsks.d@gmail.com"">p.bsks.d@gmail.com</a>
<a href=""mailto:pb.s.ksd@gmail.com"">pb.s.ksd@gmail.com</a>
<a href=""mailto:pb.sk.sd@gmail.com"">pb.sk.sd@gmail.com</a>
<a href=""mailto:pbsksd@gmail.com"">pbsksd@gmail.com</a>
<a href=""mailto:p.bsksd@gmail.com"">p.bsksd@gmail.com</a>
<a href=""mailto:p.b.sksd@gmail.com"">p.b.sksd@gmail.com</a>
<a href=""mailto:pb.s.k.s.d@gmail.com"">pb.s.k.s.d@gmail.com</a>
<a href=""mailto:pbs.k.s.d@gmail.com"">pbs.k.s.d@gmail.com</a>
<a href=""mailto:pb.sks.d@gmail.com"">pb.sks.d@gmail.com</a>
<a href=""mailto:p.b.sks.d@gmail.com"">p.b.sks.d@gmail.com</a>
<a href=""mailto:p.b.sk.sd@gmail.com"">p.b.sk.sd@gmail.com</a>
<a href=""mailto:pb.s.k.sd@gmail.com"">pb.s.k.sd@gmail.com</a>
<a href=""mailto:p.bsk.sd@gmail.com"">p.bsk.sd@gmail.com</a>
<a href=""mailto:pb.sksd@gmail.com"">pb.sksd@gmail.com</a>
<a href=""mailto:p.bsk.s.d@gmail.com"">p.bsk.s.d@gmail.com</a>
<a href=""mailto:p.bs.ksd@gmail.com"">p.bs.ksd@gmail.com</a>
<a href=""mailto:p.bs.ks.d@gmail.com"">p.bs.ks.d@gmail.com</a>
<a href=""mailto:pbs.k.sd@gmail.com"">pbs.k.sd@gmail.com</a>
<a href=""mailto:pbs.ksd@gmail.com"">pbs.ksd@gmail.com</a>
<a href=""mailto:pb.sk.s.d@gmail.com"">pb.sk.s.d@gmail.com</a>
<a href=""mailto:pbsk.s.d@gmail.com"">pbsk.s.d@gmail.com</a>
<a href=""mailto:p.b.s.k.sd@gmail.com"">p.b.s.k.sd@gmail.com</a>
<a href=""mailto:pbsks.d@gmail.com"">pbsks.d@gmail.com</a>
<a href=""mailto:pbs.ks.d@gmail.com"">pbs.ks.d@gmail.com</a>
<a href=""mailto:p.b.sk.s.d@gmail.com"">p.b.sk.s.d@gmail.com</a>
<a href=""mailto:p.bs.k.s.d@gmail.com"">p.bs.k.s.d@gmail.com</a>
<a href=""mailto:pbsk.sd@gmail.com"">pbsk.sd@gmail.com</a>
<a href=""mailto:p.b.s.k.s.d@gmail.com"">p.b.s.k.s.d@gmail.com</a>
<a href=""mailto:p.bs.k.sd@gmail.com"">p.bs.k.sd@gmail.com</a>
<a href=""mailto:p.b.s.ks.d@gmail.com"">p.b.s.ks.d@gmail.com</a>
<a href=""mailto:p.b.s.ksd@gmail.com"">p.b.s.ksd@gmail.com</a>
<a href=""mailto:pb.s.ks.d@gmail.com"">pb.s.ks.d@gmail.com</a>"
6LSYESH8,Untitled,sissou123,Python,Saturday 9th of December 2023 05:20:12 AM CDT,"Machine Learning A-Z™: AI, Python & R + ChatGPT Bonus [2023]
Learn to create Machine Learning Algorithms in Python and R from two Data Science experts. Code templates included 
for more:https://dz4link.com/A2oC
"
rx7jYzTd,CatController,leomovskii,C#,Saturday 9th of December 2023 05:19:26 AM CDT,"using UnityEngine;

[RequireComponent(typeof(Rigidbody2D))]
public class CatController : MonoBehaviour {

	public float moveSpeed;
	public float runSpeed;
	
	Rigidbody2D rb;
	Vector2 moveVector;
	bool isRunning;

	private void Start() {
		rb = GetComponent<Rigidbody2D>();
	}

	private void Update() {
		float x = Input.GetAxisRaw(""Horizontal""); // -1, 0, 1
		float y = Input.GetAxisRaw(""Vertical""); // -1, 0, 1

		moveVector = new Vector2(x, y).normalized;
		isRunning = Input.GetKey(KeyCode.LeftShift);

		if (x > 0) {
			transform.localEulerAngles = new Vector3(0, 0, 0);
		} else if (x < 0) {
			transform.localEulerAngles = new Vector3(0, 180, 0);
		}
	}

	private void FixedUpdate() { // 0.02s
		if (isRunning) {
			rb.velocity = moveVector * runSpeed;
		} else {
			rb.velocity = moveVector * moveSpeed;
		}
	}
}"
JHDtNsLj,Untitled,35657,C++,Saturday 9th of December 2023 05:15:38 AM CDT,"#include <iostream>
#include <string>
#include <time.h>

using namespace std;

// отображение массива
void ShowArray(int arr[], int size) {
	for (int i = 0; i < size; i++) {
		cout << arr[i] << "" "";
	}
	cout << endl;
}
// в отличии от обычных переменных изменения элементов массива, происходящие внутри функции при выходе из функции сохраняются
void InitArray(int arr[], int size) {
	for (int i = 0; i < size; i++) {
		arr[i] = rand() % 100;
	}
}

void InvertArray(int arr[], int size) {
	for (int i = 0; i < size / 2; i++) {
		int temp = arr[i];
		arr[i] = arr[size - i - 1];
		arr[size - i - 1] = temp;
	}
}
						 
int main() {
	setlocale(LC_ALL, ""ru"");
	srand(time(NULL));
	const int size = 10;
	int arr[size];
	InitArray(arr, size);
	ShowArray(arr, size);
	InvertArray(arr, size);
	ShowArray(arr, size);
}"
WAHgExFD,JHipster 8.0.0 generated log,yoesoff,Bash,Saturday 9th of December 2023 05:12:06 AM CDT,"PS E:\learn\myapplication> jhipster

        ██╗ ██╗   ██╗ ████████╗ ███████╗   ██████╗ ████████╗ ████████╗ ███████╗
        ██║ ██║   ██║ ╚══██╔══╝ ██╔═══██╗ ██╔════╝ ╚══██╔══╝ ██╔═════╝ ██╔═══██╗
        ██║ ████████║    ██║    ███████╔╝ ╚█████╗     ██║    ██████╗   ███████╔╝
  ██╗   ██║ ██╔═══██║    ██║    ██╔════╝   ╚═══██╗    ██║    ██╔═══╝   ██╔══██║
  ╚██████╔╝ ██║   ██║ ████████╗ ██║       ██████╔╝    ██║    ████████╗ ██║  ╚██╗
   ╚═════╝  ╚═╝   ╚═╝ ╚═══════╝ ╚═╝       ╚═════╝     ╚═╝    ╚═══════╝ ╚═╝   ╚═╝
                            https://www.jhipster.tech
Welcome to JHipster v8.0.0

 _______________________________________________________________________________________________________________

  Documentation for creating an application is at https://www.jhipster.tech/creating-an-app/

  Application files will be generated in folder: E:\learn\myapplication
 _______________________________________________________________________________________________________________

? What is the base name of your application? myapplication
? Which *type* of application would you like to create? Monolithic application (recommended for simple projects)
? Besides Junit, which testing frameworks would you like to use? (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to
? Besides Junit, which testing frameworks would you like to use?
? Do you want to make it reactive with Spring WebFlux? No
? What is your default Java package name? com.mycompany.myapp
? Which *type* of authentication would you like to use? JWT authentication (stateless, with a token)
? Which *type* of database would you like to use? SQL (H2, PostgreSQL, MySQL, MariaDB, Oracle, MSSQL)
? Which *production* database would you like to use? PostgreSQL
? Which *development* database would you like to use? H2 with in-memory persistence
? Which cache do you want to use? (Spring cache abstraction) Ehcache (local cache, for a single node)
? Do you want to use Hibernate 2nd level cache? No
? Would you like to use Maven or Gradle for building the backend? Maven
? Which other technologies would you like to use?
? Which *Framework* would you like to use for the client? Angular
? Besides Jest/Vitest, which testing frameworks would you like to use?
? Do you want to generate the admin UI? Yes
? Would you like to use a Bootswatch theme (https://bootswatch.com/)? Default JHipster
? Would you like to enable internationalization support? Yes
? Please choose the native language of the application English
? Please choose additional languages to install French
     info Generating 2,048 bit RSA key pair and self-signed certificate (SHA384withRSA) with a validity of 99,999 days
     info       for: CN=Java Hipster, OU=Development, O=com.mycompany.myapp, L=, ST=, C=
     info KeyStore 'E:\learn\myapplication\src\main\resources\config\tls\keystore.p12' generated successfully.
✔ applying multi-step templates
✔ Git repository initialized.
   create .prettierrc
   create .prettierignore
✔ prettier configuration files commited to disk
✔ loading translations
✔ updating package.json dependencies versions
✔ prettifying sonar-project.properties
✔ adding package-info.java files
✔ translating angular application
=============

WARNING: You are currently running a version of TypeScript which is not officially supported by @typescript-eslint/typescript-estree.

You may find that it works just fine, or you may not.

SUPPORTED TYPESCRIPT VERSIONS: >=4.3.5 <5.3.0

YOUR TYPESCRIPT VERSION: 5.3.3

Please only submit bug reports when using the officially supported version.

=============
   create .editorconfig
   create sonar-project.properties
   create .husky\pre-commit"
BB9zNS7B,JHipster 8.0.0 POM file,yoesoff,XML,Saturday 9th of December 2023 05:09:45 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd"">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mycompany.myapp</groupId>
    <artifactId>myapplication</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Myapplication</name>
    <description>Description for Myapplication</description>

    <properties>
        <!--
            Build properties
            The spring-boot version should match the one managed by https://mvnrepository.com/artifact/tech.jhipster/jhipster-dependencies/${jhipster-dependencies.version}
        -->
        <maven.version>3.2.5</maven.version>
        <java.version>17</java.version>
        <node.version>v18.18.2</node.version>
        <npm.version>10.2.2</npm.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <start-class>com.mycompany.myapp.MyapplicationApp</start-class>
        <argLine>-Djava.security.egd=file:/dev/./urandom -Xmx1G</argLine>
        <m2e.apt.activation>jdt_apt</m2e.apt.activation>
        <run.addResources>false</run.addResources>
        <jhipster-dependencies.version>8.0.0</jhipster-dependencies.version>
        <spring-boot.version>3.1.5</spring-boot.version>
        <archunit-junit5.version>1.1.0</archunit-junit5.version>
        <checkstyle.version>10.12.4</checkstyle.version>
        <checksum-maven-plugin.version>1.11</checksum-maven-plugin.version>
        <frontend-maven-plugin.version>1.14.2</frontend-maven-plugin.version>
        <git-commit-id-maven-plugin.version>7.0.0</git-commit-id-maven-plugin.version>
        <h2.version>2.2.224</h2.version>
        <hibernate.version>6.2.13.Final</hibernate.version>
        <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
        <jaxb-runtime.version>4.0.4</jaxb-runtime.version>
        <jib-maven-plugin.architecture>amd64</jib-maven-plugin.architecture>
        <jib-maven-plugin.image>eclipse-temurin:17-jre-focal</jib-maven-plugin.image>
        <jib-maven-plugin.version>3.4.0</jib-maven-plugin.version>
        <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
        <liquibase-plugin.driver/>
        <liquibase-plugin.hibernate-dialect/>
        <liquibase-plugin.password/>
        <liquibase-plugin.url/>
        <liquibase-plugin.username/>
        <liquibase.version>4.24.0</liquibase.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
        <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-eclipse-plugin.version>2.1</maven-eclipse-plugin.version>
        <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
        <maven-failsafe-plugin.version>3.2.1</maven-failsafe-plugin.version>
        <maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>3.6.0</maven-javadoc-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
        <maven-surefire-plugin.version>3.2.1</maven-surefire-plugin.version>
        <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
        <modernizer-maven-plugin.version>2.7.0</modernizer-maven-plugin.version>
        <nohttp-checkstyle.version>0.0.11</nohttp-checkstyle.version>
        <profile.api-docs/>
        <profile.e2e/>
        <profile.no-liquibase/>
        <profile.test/>
        <profile.tls/>
        <properties-maven-plugin.version>1.2.1</properties-maven-plugin.version>
        <sonar-maven-plugin.version>3.10.0.2594</sonar-maven-plugin.version>
        <spotless-maven-plugin.version>2.40.0</spotless-maven-plugin.version>
        <validation-api.version>3.0.2</validation-api.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>tech.jhipster</groupId>
                <artifactId>jhipster-dependencies</artifactId>
                <version>${jhipster-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>tech.jhipster</groupId>
            <artifactId>jhipster-framework</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-loader-tools</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-data</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hibernate6</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hppc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-api</artifactId>
            <version>${archunit-junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Adding the engine dependency to the surefire-plugin unfortunately does not work in the current version. -->
            <!-- https://www.archunit.org/userguide/html/000_Index.html#_junit_5 -->
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-engine</artifactId>
            <version>${archunit-junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <classifier>jakarta</classifier>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>jdbc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <mainClass>${start-class}</mainClass>
                        <!--
                        Enable the line below to have remote debugging of your application on port 5005
                        <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>
                        -->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless-maven-plugin.version}</version>
                    <configuration>
                        <java>
                            <!-- <removeUnusedImports/> -->
                        </java>
                    </configuration>
                    <executions>
                        <execution>
                            <id>spotless</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>apply</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${frontend-maven-plugin.version}</version>
                    <configuration>
                        <installDirectory>target</installDirectory>
                        <nodeVersion>${node.version}</nodeVersion>
                        <npmVersion>${npm.version}</npmVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <configuration>
                        <from>
                            <image>${jib-maven-plugin.image}</image>
                            <platforms>
                                <platform>
                                    <architecture>${jib-maven-plugin.architecture}</architecture>
                                    <os>linux</os>
                                </platform>
                            </platforms>
                        </from>
                        <to>
                            <image>myapplication:latest</image>
                        </to>
                        <container>
                            <entrypoint>
                                <shell>bash</shell>
                                <option>-c</option>
                                <arg>/entrypoint.sh</arg>
                            </entrypoint>
                            <ports>
                                <port>8080</port>
                            </ports>
                            <environment>
                                <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
                                <JHIPSTER_SLEEP>0</JHIPSTER_SLEEP>
                            </environment>
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                            <user>1000</user>
                        </container>
                        <extraDirectories>
                            <paths>src/main/docker/jib</paths>
                            <permissions>
                                <permission>
                                    <file>/entrypoint.sh</file>
                                    <mode>755</mode>
                                </permission>
                            </permissions>
                        </extraDirectories>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <version>${git-commit-id-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <includeOnlyProperties>
                            <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                            <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
                            <includeOnlyProperty>^git.branch$</includeOnlyProperty>
                        </includeOnlyProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>io.spring.nohttp</groupId>
                            <artifactId>nohttp-checkstyle</artifactId>
                            <version>${nohttp-checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <configLocation>checkstyle.xml</configLocation>
                        <includes>pom.xml,README.md</includes>
                        <excludes>.git/**/*,target/**/*,node_modules/**/*,node/**/*</excludes>
                        <sourceDirectories>./</sourceDirectories>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.glassfish.jaxb</groupId>
                                <artifactId>jaxb-runtime</artifactId>
                                <version>${jaxb-runtime.version}</version>
                            </path>
                            <path>
                                <groupId>org.hibernate.orm</groupId>
                                <artifactId>hibernate-jpamodelgen</artifactId>
                                <version>${hibernate.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>${maven-eclipse-plugin.version}</version>
                    <configuration>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>enforce-dependencyConvergence</id>
                            <configuration>
                                <rules>
                                    <DependencyConvergence/>
                                </rules>
                                <fail>false</fail>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <rules>
                            <requireMavenVersion>
                                <message>You are running an older version of Maven. JHipster requires at least Maven ${maven.version}</message>
                                <version>[${maven.version},)</version>
                            </requireMavenVersion>
                            <requireJavaVersion>
                                <message>You are running an incompatible version of Java. JHipster supports JDK 17 to 21.</message>
                                <version>[17,18),[18,19),[19,20),[20,21),[21,22)</version>
                            </requireJavaVersion>
                        </rules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <!-- Due to spring-boot repackage, without adding this property test classes are not found
                             See https://github.com/spring-projects/spring-boot/issues/6254 -->
                        <!-- Force alphabetical order to have a reproducible build -->
                        <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                        <runOrder>alphabetical</runOrder>
                        <includes>
                            <include>**/*IT*</include>
                            <include>**/*IntTest*</include>
                        </includes>
                        <argLine>@{argLine} -Dspring.profiles.active=${profile.test}</argLine>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-idea-plugin</artifactId>
                    <version>${maven-idea-plugin.version}</version>
                    <configuration>
                        <exclude>node_modules</exclude>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>config-resources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <delimiters>
                                    <delimiter>#</delimiter>
                                </delimiters>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources/</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>config/*.yml</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <!-- Force alphabetical order to have a reproducible build -->
                        <runOrder>alphabetical</runOrder>
                        <excludes>
                            <exclude>**/*IT*</exclude>
                            <exclude>**/*IntTest*</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-war</id>
                            <goals>
                                <goal>war</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <warSourceIncludes>WEB-INF/**,META-INF/**</warSourceIncludes>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <warSourceDirectory>target/classes/static/</warSourceDirectory>
                        <webResources>
                            <resource>
                                <directory>src/main/webapp</directory>
                                <includes>
                                    <include>WEB-INF/**</include>
                                </includes>
                            </resource>
                        </webResources>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>sonar-project.properties</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <version>${modernizer-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>modernizer</id>
                            <phase>package</phase>
                            <goals>
                                <goal>modernizer</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <javaVersion>${java.version}</javaVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-tests</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-tests</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                        </execution>
                        <execution>
                            <!-- Ensures that the code coverage report for integration tests is created after integration tests have been run -->
                            <id>post-integration-tests</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase.version}</version>
                    <configuration>
                        <changeLogFile>config/liquibase/master.xml</changeLogFile>
                        <diffChangeLogFile>${project.basedir}/src/main/resources/config/liquibase/changelog/${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                        <driver>${liquibase-plugin.driver}</driver>
                        <url>${liquibase-plugin.url}</url>
                        <defaultSchemaName/>
                        <username>${liquibase-plugin.username}</username>
                        <password>${liquibase-plugin.password}</password>
                        <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=${liquibase-plugin.hibernate-dialect}&amp;hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                        <verbose>true</verbose>
                        <logging>debug</logging>
                        <contexts>!test</contexts>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.liquibase</groupId>
                            <artifactId>liquibase-core</artifactId>
                            <version>${liquibase.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.liquibase.ext</groupId>
                            <artifactId>liquibase-hibernate6</artifactId>
                            <version>${liquibase.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-starter-data-jpa</artifactId>
                            <version>${spring-boot.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>jakarta.validation</groupId>
                            <artifactId>jakarta.validation-api</artifactId>
                            <version>${validation-api.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>api-docs</id>
            <properties>
                <profile.api-docs>,api-docs</profile.api-docs>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>dev${profile.tls}${profile.no-liquibase}</spring.profiles.active>
                <profile.test>testdev</profile.test>
                <liquibase-plugin.hibernate-dialect>org.hibernate.dialect.H2Dialect</liquibase-plugin.hibernate-dialect>
                <liquibase-plugin.driver>org.h2.Driver</liquibase-plugin.driver>
                <liquibase-plugin.url>jdbc:h2:tcp://localhost:18080/mem:myapplication</liquibase-plugin.url>
                <liquibase-plugin.username>myapplication</liquibase-plugin.username>
                <liquibase-plugin.password/>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <optional>true</optional>
                </dependency>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <testExcludes>
                                <testExclude>com/mycompany/myapp/config/PostgreSqlTestContainer.java</testExclude>
                            </testExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- This is automatically activated when working in Eclipse -->
            <id>eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <!-- The following dependency is added due to issue #9175-->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-undertow</artifactId>
                </dependency>
            </dependencies>
            <build>
                <pluginManagement>
                    <plugins>
                        <!--
                            This plugin's configuration is used to store Eclipse m2e settings only.
                            It has no influence on the Maven build itself.
                            Remove when the m2e plugin can correctly bind to Maven lifecycle
                        -->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>${lifecycle-mapping.version}</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.jacoco</groupId>
                                                <artifactId>jacoco-maven-plugin</artifactId>
                                                <versionRange>${jacoco-maven-plugin.version}</versionRange>
                                                <goals>
                                                    <goal>prepare-agent</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore/>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>com.github.eirslett</groupId>
                                                <artifactId>frontend-maven-plugin</artifactId>
                                                <versionRange>${frontend-maven-plugin.version}</versionRange>
                                                <goals>
                                                    <goal>install-node-and-npm</goal>
                                                    <goal>npm</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore/>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <!--
                Profile for applying IDE-specific configuration.
                At the moment it configures MapStruct and Hibernate JPA Metamodel Generator, which you need when working
                with DTOs and entity filtering.
            -->
            <id>IDE</id>
            <dependencies>
                <dependency>
                    <groupId>org.mapstruct</groupId>
                    <artifactId>mapstruct-processor</artifactId>
                    <version>${mapstruct.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.hibernate.orm</groupId>
                    <artifactId>hibernate-jpamodelgen</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>no-liquibase</id>
            <properties>
                <profile.no-liquibase>,no-liquibase</profile.no-liquibase>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>prod${profile.api-docs}${profile.tls}${profile.e2e}${profile.no-liquibase}</spring.profiles.active>
                <profile.test>testprod</profile.test>
                <liquibase-plugin.hibernate-dialect>org.hibernate.dialect.PostgreSQLDialect</liquibase-plugin.hibernate-dialect>
                <liquibase-plugin.driver>org.postgresql.Driver</liquibase-plugin.driver>
                <liquibase-plugin.url>jdbc:postgresql://localhost:5432/myapplication</liquibase-plugin.url>
                <liquibase-plugin.username>myapplication</liquibase-plugin.username>
                <liquibase-plugin.password/>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>target/classes/static/</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-info</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>webapp build test</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <arguments>run webapp:test</arguments>
                                    <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
                                </configuration>
                            </execution>
                            <execution>
                                <id>webapp build prod</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>run webapp:prod</arguments>
                                    <environmentVariables>
                                        <APP_VERSION>${project.version}</APP_VERSION>
                                    </environmentVariables>
                                    <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.github.git-commit-id</groupId>
                        <artifactId>git-commit-id-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>tls</id>
            <properties>
                <profile.tls>,tls</profile.tls>
            </properties>
        </profile>
        <profile>
            <id>war</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>webapp</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.nicoulaj.maven.plugins</groupId>
                        <artifactId>checksum-maven-plugin</artifactId>
                        <version>${checksum-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>create-pre-compiled-webapp-checksum</id>
                                <goals>
                                    <goal>files</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>create-compiled-webapp-checksum</id>
                                <goals>
                                    <goal>files</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <csvSummaryFile>checksums.csv.old</csvSummaryFile>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.basedir}</directory>
                                    <includes>
                                        <include>src/main/webapp/**/*.*</include>
                                        <include>target/classes/static/**/*.*</include>
                                        <include>package-lock.json</include>
                                        <include>package.json</include>
                                        <include>tsconfig.json</include>
                                        <include>tsconfig.app.json</include>
                                        <include>webpack/*.*</include>
                                    </includes>
                                    <excludes>
                                        <exclude>**/app/**/service-worker.js</exclude>
                                        <exclude>**/app/**/vendor.css</exclude>
                                    </excludes>
                                </fileSet>
                            </fileSets>
                            <failOnError>false</failOnError>
                            <failIfNoFiles>false</failIfNoFiles>
                            <individualFiles>false</individualFiles>
                            <algorithms>
                                <algorithm>SHA-1</algorithm>
                            </algorithms>
                            <includeRelativePath>true</includeRelativePath>
                            <quiet>true</quiet>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>${maven-antrun-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>eval-frontend-checksum</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <condition property=""skip.npm"" value=""true"" else=""false"">
                                            <and>
                                                <available file=""checksums.csv"" filepath=""${project.build.directory}""/>
                                                <available file=""checksums.csv.old"" filepath=""${project.build.directory}""/>
                                                <filesmatch file1=""${project.build.directory}/checksums.csv"" file2=""${project.build.directory}/checksums.csv.old""/>
                                            </and>
                                        </condition>
                                    </target>
                                    <exportAntProperties>true</exportAntProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>webapp build dev</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>run webapp:build</arguments>
                                    <environmentVariables>
                                        <APP_VERSION>${project.version}</APP_VERSION>
                                    </environmentVariables>
                                    <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>dev${profile.no-liquibase}</spring.profiles.active>
            </properties>
        </profile>
    </profiles>
</project>
"
