id,title,username,language,date,content
5RcGGaPk,Untitled,AsergeyR,C++,Wednesday 4th of October 2023 01:01:36 PM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <cmath>
#include <algorithm>
#include <numeric>
#include <vector>
#include <limits>

using namespace std;



class SegmentTree {
public:
	SegmentTree(vector<int>& leaves, pair<int, size_t>(*Operation)(pair<int, size_t>, pair<int, size_t>), int fill_value=NULL) {
			// fill_value - значение для заполнения фиктивных узлов
		Operation_ = Operation;

		cnt_real_leaves = leaves.size();
		int cnt_leaves = 1;
		while (cnt_leaves < leaves.size()) {	// количество листьев должно быть степенью двойки
			cnt_leaves *= 2;
		}
		cnt_all_leaves = cnt_leaves;
		tree.resize(cnt_leaves * 2, make_pair(fill_value, 0));	// количество узлов = 2 * количество листьев, нулевой элемент - фиктивный


		for (size_t i = 0; i < leaves.size(); i++) {	// Заполнения листов в дереве
			tree[i + cnt_leaves].first = leaves[i];
			tree[i + cnt_leaves].second = i + 1;
		}


		for (size_t i = cnt_leaves - 1; i > 0; i--) {
			tree[i] = Operation_(tree[2 * i], tree[2 * i + 1]);
		}
	}


	pair<int, size_t> FindElement(size_t l, size_t r, int init_val=NULL) {
			// init_val - значения для инициализации ответа
			// индексы начиная с 1
			// https://habr.com/ru/companies/otus/articles/485194/ обход снизу вверх
		l = l + cnt_all_leaves - 1;
		r = r + cnt_all_leaves - 1;
		pair<int, size_t> ans = make_pair(init_val, init_val);
		while (l <= r) {
			if (l % 2 != 0) ans = Operation_(ans, tree[l]);
			if (r % 2 == 0) ans = Operation_(ans, tree[r]);
			l = (l + 1) / 2;
			r = (r - 1) / 2;
		}
		return ans;
	}

	void SetValue(size_t old_idx, int new_val) {
		size_t idx_tree = old_idx + cnt_all_leaves;	// Поступает индекс в обычном массиве, после сложения - в дереве
		tree[idx_tree] = make_pair(new_val, tree[idx_tree].second);
		
		while (idx_tree > 0) {
			size_t parent_idx = idx_tree / 2;
			if (idx_tree % 2 == 0) {
				tree[parent_idx] = Operation_(tree[idx_tree], tree[idx_tree + 1]);
			}
			else {
				tree[parent_idx] = Operation_(tree[idx_tree], tree[idx_tree - 1]);
			}
			idx_tree = parent_idx;
		}
	}


	vector<pair<int, size_t>> tree;
	int cnt_real_leaves;	// Количество нефиктивных листьев
	int cnt_all_leaves;		// Количество всех листьев
	pair<int, size_t>(*Operation_)(pair<int, size_t>, pair<int, size_t>);
};



pair<int, size_t> Max(pair<int, size_t> a, pair<int, size_t> b) {
	if (a.first == NULL) { return make_pair(b.first, b.second); }
	if (b.first == NULL) { return make_pair(a.first, a.second); }

	if (a.first > b.first) { return make_pair(a.first, a.second); }
	else if (a.first < b.first) { return make_pair(b.first, b.second); }
	else {
		if (a.second < b.second) { return make_pair(a.first, a.second); }
		else { return make_pair(b.first, b.second); }
	}
}

pair<int, size_t> Gcd(pair<int, size_t> a, pair<int, size_t> b) {
	if (a.first == NULL) {
		return make_pair(b.first, -1);
	}
	else if (b.first == NULL) {
		return make_pair(a.first, -1);
	}
	return make_pair(gcd(a.first, b.first), -1);
}


int main() {
	ios_base::sync_with_stdio(0); cin.tie(0);


	int n;
	cin >> n;

	vector<int> a(n);
	for (size_t i = 0; i < n; i++) {
		cin >> a[i];
	}

	SegmentTree st(a, Max);

	int q;
	cin >> q;
	while (q--) {
		char com;
		int l, r;
		cin >> com >> l >> r;
		if (com == ""m"") { cout << st.FindElement(l, r).first << "" ""; }
		else { st.SetValue(l, r); }
	}

}
"
mNzTuDgr,Orbinaut enemy,TheBlad768,M68000 Assembler,Wednesday 4th of October 2023 12:56:11 PM CDT,"; ---------------------------------------------------------------------------
; Object 60 - Orbinaut enemy (LZ, SLZ, SBZ)
; ---------------------------------------------------------------------------

; Dynamic object variables
orb_count			 = objoff_39
orb_rotation			 = objoff_40

; =============== S U B R O U T I N E =======================================

Obj_Orbinaut:
		move.w	#-$40,x_vel(a0)					; move orbinaut to the left
		btst	#0,status(a0)							; is orbinaut facing left??
		beq.s	.rot								; if not, branch
		neg.w	x_vel(a0)						; move orbinaut to the right

.rot
		moveq	#1,d0
		btst	#0,status(a0)							; is orbinaut facing left?
		beq.s	.noflip							; if not, branch
		neg.w	d0

.noflip:
		move.b	d0,orb_rotation(a0)

		; mapping
		lea	ObjDat_Orbinaut(pc),a1				; LZ specific code
		jsr	(SetUp_ObjAttributes).w
		clr.b	routine(a0)

		; check level
		cmpi.b	#id_SBZ,(Current_zone).w			; check if level is SBZ
		bne.s	.notscrap
		move.w	#$429,art_tile(a0)				; SBZ specific code

.notscrap
		cmpi.b	#id_SLZ,(Current_zone).w			; check if level is SLZ
		bne.s	.notslz
		move.w	#$255B,art_tile(a0)				; SLZ specific code

.notslz

		; set
		move.l	#.chksonic,address(a0)
		tst.b	subtype(a0)
		beq.s	.load
		move.l	#.move,address(a0)

.load
		lea	ChildObjDat6_Orbinaut_Orb(pc),a2
		move.b	1(a2),orb_count(a0)				; set number of orbs
		jmp	(CreateChild6_Simple).w
; ---------------------------------------------------------------------------

.chksonic
		jsr	(Find_SonicTails).w
		cmpi.w	#160,d2							; is Sonic within $A0 pixels of orbinaut?
		bhs.s	.draw							; if not, branch
		cmpi.w	#80,d3							; is Sonic within $50 pixels of orbinaut?
		bhs.s	.draw							; if not, branch
		tst.w	(Debug_placement_mode).w		; is debug mode on?
		bne.s	.draw							; if yes, branch
		addq.b	#1,anim(a0)						; use ""angry"" animation
		move.l	#.draw,address(a0)
		bra.s	.draw
; ---------------------------------------------------------------------------

.move
		jsr	(MoveSprite2).w

.draw
		lea	Ani_Orb(pc),a1
		jsr	(AnimateSprite_Reverse).w
		jmp	(Sprite_CheckDeleteTouch).w

; ---------------------------------------------------------------------------
; Orbinaut enemy (Orb)
; ---------------------------------------------------------------------------

; Dynamic object variables
orbo_radius			 = objoff_3A
orbo_angle			 = objoff_3C

; =============== S U B R O U T I N E =======================================

Obj_Orbinaut_Orb:

		; set pos
		moveq	#0,d0
		move.b	subtype(a0),d0
		lsl.b	#5,d0
		move.b	d0,orbo_angle(a0)

		; mapping
		lea	ObjDat3_Orbinaut_Orb(pc),a1
		jsr	(SetUp_ObjAttributes3).w
		clr.b	routine(a0)
		move.b	#4,orbo_radius(a0)
		move.l	#.main,address(a0)

.main
		movea.w	parent3(a0),a1
		cmpi.b	#2,mapping_frame(a1)				; is orbinaut angry?
		bne.s	.circle							; if not, branch
		tst.b	orbo_angle(a0)						; is spikeorb directly under the orbinaut?
		bne.s	.circle							; if not, branch
		move.l	#.move,address(a0)
		subq.b	#1,orb_count(a1)
		bpl.s	.fire
		move.l	#Obj_Orbinaut.move,address(a1)

.fire
		move.w	#-$200,x_vel(a0)					; move orb to the left (quickly)
		btst	#0,status(a1)
		beq.s	.move
		neg.w	x_vel(a0)

.move
		jsr	(MoveSprite2).w
		jmp	(Sprite_CheckDeleteTouchXY).w
; ---------------------------------------------------------------------------

.circle
		move.b	orb_rotation(a1),d0
		sub.b	d0,orbo_angle(a0)
		move.b	orbo_radius(a0),d2
		jsr	(MoveSprite_CircularSimple).w
		jmp	(Child_DrawTouch_Sprite).w

; =============== S U B R O U T I N E =======================================

ObjDat_Orbinaut:			subObjData Map_Orb, $55B, $200, 24/2, 24/2, 0, $B
ObjDat3_Orbinaut_Orb:	subObjData3 $200, 16/2, 16/2, 3, $18|$80

ChildObjDat6_Orbinaut_Orb:
		dc.w 4-1
		dc.l Obj_Orbinaut_Orb
; ---------------------------------------------------------------------------

		include ""Objects/Orbinaut/Object Data/Anim - Orbinaut.asm""
		include ""Objects/Orbinaut/Object Data/Map - Orbinaut.asm"""
YkdDkaKh,SI sem2 lek4,Akaitori,JavaScript,Wednesday 4th of October 2023 12:50:43 PM CDT,"//zadanie powtórzeniowe - funkcje
// obliczanie napiwku, jeśli rachunek do 100 zł to napiwek 10%,
//100-250 zł napiwek 7% i od 250 zł napiwek 4%
function tip(rachunek){
  let procent;
  if (rachunek<100){
    procent = 0.1; 
  }
  else if(rachunek>=100 && rachunek<250){
    procent = 0.07;
  }
  else{
    procent = 0.04;
  }
  return rachunek*procent;
}
//const userRach = Number(prompt('Podaj jaki wyszedł rachunek:'));
//alert('Powinieneś zostawić napiwek w wysokości '+tip(userRach)+' zł');

//Tablice są numerowane od 0!
const imiona = ['Adam','Ewa','Darek', 'Maja'];
const liczby = [5, 12, 31, 8];
const tab = ['Python', 'JavaScript', 13, 5.9];
//console.log(imiona);
//console.log(liczby);
//console.log(tab);
//tworzenie tablicy z użyciem Konstruktora
const psy = new Array('husky', 'maltańczyk', 'border collie');
//console.log(psy);
//odwoływanie się do elementów tablicy po indeksach
//console.log(imiona[2]); //Darek
//console.log(psy[0]); //husky
//console.log(psy.length); //3, zwraca długość tablicy
//dodawanie elementów do tablicy
console.log(imiona);
imiona.push('Marta', 'Janek'); //dodaj elementy
console.log(imiona);
//usuwanie ostatniego elementu z tablicy
imiona.pop();
console.log(imiona);
//usuwanie pierwszego elementu z tablicy
imiona.shift();
console.log(imiona);
//łączenie elementów tablicy, wyświetlanie jako jeden tekst, musi być w console.log
console.log(imiona.join(' - ')); //jeśli nie podamy znaku, będzie to przecinek
//zamiana tekstu na tablicę
const tekst = 'Ala ma kota';
const tablica = [...tekst];
console.log(tablica);
//odwracanie elementów tablicy
console.log(liczby);
liczby.reverse(); //odwraca tablicę
console.log(liczby);

//Zadanie - palindromy
const slowo = prompt('Podaj wyraz do sprawdzenia, czy to palindrom:');
const tab_tekst = [...slowo];
console.log(tab_tekst);
if (slowo == tab_tekst.reverse().join('')){
  alert(slowo+' jest palindromem');
}
else{
  alert(slowo+' nie jest palindromem')
}"
ecSmag3f,Color,Stawlie0,C++,Wednesday 4th of October 2023 12:41:52 PM CDT,"local palette = {0x000000, 0x000040, 0x000080, 0x0000BF, 0x0000FF, 0x002400, 0x002440, 0x002480, 0x0024BF, 0x0024FF, 0x004900, 0x004940, 0x004980, 0x0049BF, 0x0049FF, 0x006D00, 0x006D40, 0x006D80, 0x006DBF, 0x006DFF, 0x009200, 0x009240, 0x009280, 0x0092BF, 0x0092FF, 0x00B600, 0x00B640, 0x00B680, 0x00B6BF, 0x00B6FF, 0x00DB00, 0x00DB40, 0x00DB80, 0x00DBBF, 0x00DBFF, 0x00FF00, 0x00FF40, 0x00FF80, 0x00FFBF, 0x00FFFF, 0x0F0F0F, 0x1E1E1E, 0x2D2D2D, 0x330000, 0x330040, 0x330080, 0x3300BF, 0x3300FF, 0x332400, 0x332440, 0x332480, 0x3324BF, 0x3324FF, 0x334900, 0x334940, 0x334980, 0x3349BF, 0x3349FF, 0x336D00, 0x336D40, 0x336D80, 0x336DBF, 0x336DFF, 0x339200, 0x339240, 0x339280, 0x3392BF, 0x3392FF, 0x33B600, 0x33B640, 0x33B680, 0x33B6BF, 0x33B6FF, 0x33DB00, 0x33DB40, 0x33DB80, 0x33DBBF, 0x33DBFF, 0x33FF00, 0x33FF40, 0x33FF80, 0x33FFBF, 0x33FFFF, 0x3C3C3C, 0x4B4B4B, 0x5A5A5A, 0x660000, 0x660040, 0x660080, 0x6600BF, 0x6600FF, 0x662400, 0x662440, 0x662480, 0x6624BF, 0x6624FF, 0x664900, 0x664940, 0x664980, 0x6649BF, 0x6649FF, 0x666D00, 0x666D40, 0x666D80, 0x666DBF, 0x666DFF, 0x669200, 0x669240, 0x669280, 0x6692BF, 0x6692FF, 0x66B600, 0x66B640, 0x66B680, 0x66B6BF, 0x66B6FF, 0x66DB00, 0x66DB40, 0x66DB80, 0x66DBBF, 0x66DBFF, 0x66FF00, 0x66FF40, 0x66FF80, 0x66FFBF, 0x66FFFF, 0x696969, 0x787878, 0x878787, 0x969696, 0x990000, 0x990040, 0x990080, 0x9900BF, 0x9900FF, 0x992400, 0x992440, 0x992480, 0x9924BF, 0x9924FF, 0x994900, 0x994940, 0x994980, 0x9949BF, 0x9949FF, 0x996D00, 0x996D40, 0x996D80, 0x996DBF, 0x996DFF, 0x999200, 0x999240, 0x999280, 0x9992BF, 0x9992FF, 0x99B600, 0x99B640, 0x99B680, 0x99B6BF, 0x99B6FF, 0x99DB00, 0x99DB40, 0x99DB80, 0x99DBBF, 0x99DBFF, 0x99FF00, 0x99FF40, 0x99FF80, 0x99FFBF, 0x99FFFF, 0xA5A5A5, 0xB4B4B4, 0xC3C3C3, 0xCC0000, 0xCC0040, 0xCC0080, 0xCC00BF, 0xCC00FF, 0xCC2400, 0xCC2440, 0xCC2480, 0xCC24BF, 0xCC24FF, 0xCC4900, 0xCC4940, 0xCC4980, 0xCC49BF, 0xCC49FF, 0xCC6D00, 0xCC6D40, 0xCC6D80, 0xCC6DBF, 0xCC6DFF, 0xCC9200, 0xCC9240, 0xCC9280, 0xCC92BF, 0xCC92FF, 0xCCB600, 0xCCB640, 0xCCB680, 0xCCB6BF, 0xCCB6FF, 0xCCDB00, 0xCCDB40, 0xCCDB80, 0xCCDBBF, 0xCCDBFF, 0xCCFF00, 0xCCFF40, 0xCCFF80, 0xCCFFBF, 0xCCFFFF, 0xD2D2D2, 0xE1E1E1, 0xF0F0F0, 0xFF0000, 0xFF0040, 0xFF0080, 0xFF00BF, 0xFF00FF, 0xFF2400, 0xFF2440, 0xFF2480, 0xFF24BF, 0xFF24FF, 0xFF4900, 0xFF4940, 0xFF4980, 0xFF49BF, 0xFF49FF, 0xFF6D00, 0xFF6D40, 0xFF6D80, 0xFF6DBF, 0xFF6DFF, 0xFF9200, 0xFF9240, 0xFF9280, 0xFF92BF, 0xFF92FF, 0xFFB600, 0xFFB640, 0xFFB680, 0xFFB6BF, 0xFFB6FF, 0xFFDB00, 0xFFDB40, 0xFFDB80, 0xFFDBBF, 0xFFDBFF, 0xFFFF00, 0xFFFF40, 0xFFFF80, 0xFFFFBF, 0xFFFFFF}
local mathFloor, mathMax, mathMin, mathModf = math.floor, math.max, math.min, math.modf
local integerToRGB, RGBToInteger, blend, transition, to8Bit

local color = {}

--------------------------------------------------------------------------------

-- Optimized Lua 5.3 bitwise support
if computer.getArchitecture and computer.getArchitecture() ~= ""Lua 5.2"" then
	integerToRGB, RGBToInteger, blend, transition, to8Bit = load([[
		local mathHuge, palette = math.huge, select(1, ...)

		return
			function(integerColor)
				return integerColor >> 16, integerColor >> 8 & 0xFF, integerColor & 0xFF
			end,

			function(r, g, b)
				return r << 16 | g << 8 | b
			end,

			function(color1, color2, transparency)
				local invertedTransparency = 1 - transparency
				
				return
					((color2 >> 16) * invertedTransparency + (color1 >> 16) * transparency) // 1.0 << 16 |
					((color2 >> 8 & 0xFF) * invertedTransparency + (color1 >> 8 & 0xFF) * transparency) // 1.0 << 8 |
					((color2 & 0xFF) * invertedTransparency + (color1 & 0xFF) * transparency) // 1.0
			end,

			function(color1, color2, position)
				local r1, g1, b1 = color1 >> 16, color1 >> 8 & 0xFF, color1 & 0xFF
				
				return
					(r1 + ((color2 >> 16) - r1) * position) // 1.0 << 16 |
					(g1 + ((color2 >> 8 & 0xFF) - g1) * position) // 1.0 << 8 |
					(b1 + ((color2 & 0xFF) - b1) * position) // 1.0
			end,

			function(color24Bit)
				local r, g, b, closestDelta, closestIndex, delta, paletteColor, paletteR, paletteG, paletteB = color24Bit >> 16, color24Bit >> 8 & 0xFF, color24Bit & 0xFF, mathHuge, 1

				for i = 1, #palette do
					paletteColor = palette[i]

					if color24Bit == paletteColor then
						return i - 1
					else
						paletteR, paletteG, paletteB = paletteColor >> 16, paletteColor >> 8 & 0xFF, paletteColor & 0xFF

						delta = (paletteR - r) ^ 2 + (paletteG - g) ^ 2 + (paletteB - b) ^ 2
						
						if delta < closestDelta then
							closestDelta, closestIndex = delta, i
						end
					end
				end

				return closestIndex - 1
			end
	]], ""=lua53colorfunctions"")(palette)
else
	integerToRGB, RGBToInteger, blend, transition, to8Bit = load([[
		local mathHuge, palette = math.huge, select(1, ...)

		return
			function(integerColor)
				local r = integerColor / 65536
				r = r - r % 1
				
				local g = (integerColor - r * 65536) / 256
				g = g - g % 1

				return r, g, integerColor - r * 65536 - g * 256
			end,

			function(r, g, b)
				return r * 65536 + g * 256 + b
			end,

			function(color1, color2, transparency)
				local invertedTransparency = 1 - transparency
				
				local r1 = color1 / 65536
				r1 = r1 - r1 % 1
				
				local g1 = (color1 - r1 * 65536) / 256
				g1 = g1 - g1 % 1

				local r2 = color2 / 65536
				r2 = r2 - r2 % 1
				
				local g2 = (color2 - r2 * 65536) / 256
				g2 = g2 - g2 % 1

				local r, g, b =
					r2 * invertedTransparency + r1 * transparency,
					g2 * invertedTransparency + g1 * transparency,
					(color2 - r2 * 65536 - g2 * 256) * invertedTransparency + (color1 - r1 * 65536 - g1 * 256) * transparency

				return
					(r - r % 1) * 65536 +
					(g - g % 1) * 256 +
					(b - b % 1)
			end,

			function(color1, color2, position)
				local r1 = color1 / 65536
				r1 = r1 - r1 % 1
				
				local g1 = (color1 - r1 * 65536) / 256
				g1 = g1 - g1 % 1
				
				local b1 = color1 - r1 * 65536 - g1 * 256

				local r2 = color2 / 65536
				r2 = r2 - r2 % 1
				
				local g2 = (color2 - r2 * 65536) / 256
				g2 = g2 - g2 % 1

				local r, g, b =
					r1 + (r2 - r1) * position,
					g1 + (g2 - g1) * position,
					b1 + (color2 - r2 * 65536 - g2 * 256 - b1) * position

				return
					(r - r % 1) * 65536 +
					(g - g % 1) * 256 +
					(b - b % 1)
			end,

			function(color24Bit)
				local closestDelta, closestIndex, delta, paletteColor, paletteR, paletteG, paletteB = mathHuge, 1

				local r = color24Bit / 65536
				r = r - r % 1
				
				local g = (color24Bit - r * 65536) / 256
				g = g - g % 1
				
				local b = color24Bit - r * 65536 - g * 256

				for index = 1, #palette do
					paletteColor = palette[index]
					
					if color24Bit == paletteColor then
						return index - 1
					else
						paletteR = paletteColor / 65536
						paletteR = paletteR - paletteR % 1
						paletteG = (paletteColor - paletteR * 65536) / 256
						paletteG = paletteG - paletteG % 1
						paletteB = paletteColor - paletteR * 65536 - paletteG * 256

						delta = (paletteR - r) ^ 2 + (paletteG - g) ^ 2 + (paletteB - b) ^ 2
						
						if delta < closestDelta then
							closestDelta, closestIndex = delta, index
						end
					end
				end

				return closestIndex - 1
			end
	]], ""=lua52colorfunctions"")(palette)
end

--------------------------------------------------------------------------------

local function RGBToHSB(r, g, b)
	local max, min = mathMax(r, g, b), mathMin(r, g, b)

	if max == min then
		return 0, max == 0 and 0 or (1 - min / max), max / 255
	elseif max == r and g >= b then
		return 60 * (g - b) / (max - min), max == 0 and 0 or (1 - min / max), max / 255
	elseif max == r and g < b then
		return 60 * (g - b) / (max - min) + 360, max == 0 and 0 or (1 - min / max), max / 255
	elseif max == g then
		return 60 * (b - r) / (max - min) + 120, max == 0 and 0 or (1 - min / max), max / 255
	elseif max == b then
		return 60 * (r - g) / (max - min) + 240, max == 0 and 0 or (1 - min / max), max / 255
	else
		return 0, max == 0 and 0 or (1 - min / max), max / 255
	end
end

local function HSBToRGB(h, s, b)
	local integer, fractional = mathModf(h / 60)	
	local p, q, t = b * (1 - s), b * (1 - s * fractional), b * (1 - (1 - fractional) * s)

	if integer == 0 then
		return mathFloor(b * 255), mathFloor(t * 255), mathFloor(p * 255)
	elseif integer == 1 then
		return mathFloor(q * 255), mathFloor(b * 255), mathFloor(p * 255)
	elseif integer == 2 then
		return mathFloor(p * 255), mathFloor(b * 255), mathFloor(t * 255)
	elseif integer == 3 then
		return mathFloor(p * 255), mathFloor(q * 255), mathFloor(b * 255)
	elseif integer == 4 then
		return mathFloor(t * 255), mathFloor(p * 255), mathFloor(b * 255)
	else
		return mathFloor(b * 255), mathFloor(p * 255), mathFloor(q * 255)
	end
end

local function integerToHSB(integerColor)
	return RGBToHSB(integerToRGB(integerColor))
end

local function HSBToInteger(h, s, b)
	return RGBToInteger(HSBToRGB(h, s, b))
end

--------------------------------------------------------------------------------

local function to24Bit(color8Bit)
	return palette[color8Bit + 1]
end

local function optimize(color24Bit)
	return to24Bit(to8Bit(color24Bit))
end

--------------------------------------------------------------------------------

return {
	RGBToInteger = RGBToInteger,
	integerToRGB = integerToRGB,
	RGBToHSB = RGBToHSB,
	HSBToRGB = HSBToRGB,
	integerToHSB = integerToHSB,
	HSBToInteger = HSBToInteger,
	blend = blend,
	transition = transition,
	to8Bit = to8Bit,
	to24Bit = to24Bit,
	optimize = optimize,
}"
85mvDyeh,Untitled,parv28,C++,Wednesday 4th of October 2023 12:31:12 PM CDT,"class Solution {
public:

	long merge(vector<int> &arr, int start, int end) {
		int mid = (start+end)/2;
		int i = start, j = mid+1;
		long ans = 0;
		vector<int> temp_arr;

		while(i<=mid and j<=end) {
			if(arr[i]<=arr[j]) {
				temp_arr.push_back(arr[i++]);
			}
			else {
				ans += (mid-i+1);
				temp_arr.push_back(arr[j++]);
			}
		}
		while(i<=mid) {
			temp_arr.push_back(arr[i++]);
		}
		while(j<=end) {
			temp_arr.push_back(arr[j++]);
		}
	
		for(i=start;i<=end;i++) {
			arr[i] = temp_arr[i-start];
		}

		return ans;
	}

	long merge_sort(vector<int> &arr, int start, int end) {
		if(start==end) return 0;
		int mid = (start+end)/2;

		long left_ans = merge_sort(arr, start, mid);
		long right_ans = merge_sort(arr, mid+1, end);

		long curr_ans = merge(arr, start, end);
		return left_ans + right_ans + curr_ans;
	}

	long inversionCount(vector<int>& arr) {
		int n = arr.size();
		return merge_sort(arr, 0, n-1);
	}
};"
vvT7sLaU,Nigerian scammers [4-10-1/2023],bombaires,HTML,Wednesday 4th of October 2023 12:29:10 PM CDT,"<a href=""mailto:filespascall@gmail.com"">filespascall@gmail.com</a>
<a href=""mailto:f.i.les.p.ascall@gmail.com"">f.i.les.p.ascall@gmail.com</a>
<a href=""mailto:f.i.l.es.pa.scal.l@gmail.com"">f.i.l.es.pa.scal.l@gmail.com</a>
<a href=""mailto:fi.les.p.a.sc.a.ll@gmail.com"">fi.les.p.a.sc.a.ll@gmail.com</a>
<a href=""mailto:fi.l.e.s.p.as.c.al.l@gmail.com"">fi.l.e.s.p.as.c.al.l@gmail.com</a>
<a href=""mailto:f.i.les.p.asca.l.l@gmail.com"">f.i.les.p.asca.l.l@gmail.com</a>
<a href=""mailto:f.i.lespa.s.c.al.l@gmail.com"">f.i.lespa.s.c.al.l@gmail.com</a>
<a href=""mailto:fil.espas.c.a.l.l@gmail.com"">fil.espas.c.a.l.l@gmail.com</a>
<a href=""mailto:fi.l.espa.scal.l@gmail.com"">fi.l.espa.scal.l@gmail.com</a>
<a href=""mailto:fi.le.spasc.a.l.l@gmail.com"">fi.le.spasc.a.l.l@gmail.com</a>
<a href=""mailto:f.i.le.spa.s.c.a.l.l@gmail.com"">f.i.le.spa.s.c.a.l.l@gmail.com</a>
<a href=""mailto:fil.e.sp.a.sc.all@gmail.com"">fil.e.sp.a.sc.all@gmail.com</a>
<a href=""mailto:f.il.e.sp.a.sca.ll@gmail.com"">f.il.e.sp.a.sca.ll@gmail.com</a>
<a href=""mailto:f.i.le.s.p.a.s.c.al.l@gmail.com"">f.i.le.s.p.a.s.c.al.l@gmail.com</a>
<a href=""mailto:file.sp.a.sca.l.l@gmail.com"">file.sp.a.sca.l.l@gmail.com</a>
<a href=""mailto:fi.le.sp.a.scall@gmail.com"">fi.le.sp.a.scall@gmail.com</a>
<a href=""mailto:fi.l.e.s.pa.s.c.all@gmail.com"">fi.l.e.s.pa.s.c.all@gmail.com</a>
<a href=""mailto:f.il.espa.sca.ll@gmail.com"">f.il.espa.sca.ll@gmail.com</a>
<a href=""mailto:f.i.l.e.sp.a.scal.l@gmail.com"">f.i.l.e.sp.a.scal.l@gmail.com</a>
<a href=""mailto:fil.es.p.as.c.a.ll@gmail.com"">fil.es.p.as.c.a.ll@gmail.com</a>
<a href=""mailto:f.il.espasc.all@gmail.com"">f.il.espasc.all@gmail.com</a>
<a href=""mailto:fil.e.spa.sc.a.ll@gmail.com"">fil.e.spa.sc.a.ll@gmail.com</a>
<a href=""mailto:fil.es.p.a.sc.a.ll@gmail.com"">fil.es.p.a.sc.a.ll@gmail.com</a>
<a href=""mailto:fil.e.s.pasca.l.l@gmail.com"">fil.e.s.pasca.l.l@gmail.com</a>
<a href=""mailto:fi.les.p.a.s.ca.ll@gmail.com"">fi.les.p.a.s.ca.ll@gmail.com</a>
<a href=""mailto:f.i.l.esp.a.sc.a.l.l@gmail.com"">f.i.l.esp.a.sc.a.l.l@gmail.com</a>
<a href=""mailto:fil.e.sp.a.s.call@gmail.com"">fil.e.sp.a.s.call@gmail.com</a>
<a href=""mailto:fil.es.p.asca.ll@gmail.com"">fil.es.p.asca.ll@gmail.com</a>
<a href=""mailto:fi.lesp.a.sc.all@gmail.com"">fi.lesp.a.sc.all@gmail.com</a>
<a href=""mailto:f.i.l.esp.ascal.l@gmail.com"">f.i.l.esp.ascal.l@gmail.com</a>
<a href=""mailto:fil.e.sp.as.c.a.l.l@gmail.com"">fil.e.sp.as.c.a.l.l@gmail.com</a>
<a href=""mailto:fi.lespa.s.c.all@gmail.com"">fi.lespa.s.c.all@gmail.com</a>
<a href=""mailto:f.il.es.p.a.sc.all@gmail.com"">f.il.es.p.a.sc.all@gmail.com</a>
<a href=""mailto:file.s.pasc.a.ll@gmail.com"">file.s.pasc.a.ll@gmail.com</a>
<a href=""mailto:f.il.espas.cal.l@gmail.com"">f.il.espas.cal.l@gmail.com</a>
<a href=""mailto:f.i.le.spas.c.a.ll@gmail.com"">f.i.le.spas.c.a.ll@gmail.com</a>
<a href=""mailto:f.i.l.esp.asca.l.l@gmail.com"">f.i.l.esp.asca.l.l@gmail.com</a>
<a href=""mailto:f.iles.pas.ca.l.l@gmail.com"">f.iles.pas.ca.l.l@gmail.com</a>
<a href=""mailto:fil.es.p.as.ca.ll@gmail.com"">fil.es.p.as.ca.ll@gmail.com</a>
<a href=""mailto:f.ilespascall@gmail.com"">f.ilespascall@gmail.com</a>
<a href=""mailto:filesp.asc.al.l@gmail.com"">filesp.asc.al.l@gmail.com</a>
<a href=""mailto:f.il.es.pa.s.cal.l@gmail.com"">f.il.es.pa.s.cal.l@gmail.com</a>
<a href=""mailto:f.i.l.espasca.l.l@gmail.com"">f.i.l.espasca.l.l@gmail.com</a>
<a href=""mailto:f.il.esp.a.sc.all@gmail.com"">f.il.esp.a.sc.all@gmail.com</a>
<a href=""mailto:f.iles.p.as.ca.ll@gmail.com"">f.iles.p.as.ca.ll@gmail.com</a>
<a href=""mailto:file.s.pa.s.ca.l.l@gmail.com"">file.s.pa.s.ca.l.l@gmail.com</a>
<a href=""mailto:fil.e.s.pa.s.cal.l@gmail.com"">fil.e.s.pa.s.cal.l@gmail.com</a>
<a href=""mailto:fi.le.spasc.al.l@gmail.com"">fi.le.spasc.al.l@gmail.com</a>
<a href=""mailto:fi.l.es.pa.sc.a.ll@gmail.com"">fi.l.es.pa.sc.a.ll@gmail.com</a>
<a href=""mailto:fi.l.e.sp.as.c.al.l@gmail.com"">fi.l.e.sp.as.c.al.l@gmail.com</a>
<a href=""mailto:f.i.l.es.pas.c.all@gmail.com"">f.i.l.es.pas.c.all@gmail.com</a>
<a href=""mailto:f.i.lespascal.l@gmail.com"">f.i.lespascal.l@gmail.com</a>
<a href=""mailto:f.i.l.e.sp.as.c.al.l@gmail.com"">f.i.l.e.sp.as.c.al.l@gmail.com</a>
<a href=""mailto:fi.lespa.sc.al.l@gmail.com"">fi.lespa.sc.al.l@gmail.com</a>
<a href=""mailto:f.il.es.p.ascall@gmail.com"">f.il.es.p.ascall@gmail.com</a>
<a href=""mailto:f.i.les.p.asc.a.l.l@gmail.com"">f.i.les.p.asc.a.l.l@gmail.com</a>
<a href=""mailto:file.sp.asc.al.l@gmail.com"">file.sp.asc.al.l@gmail.com</a>
<a href=""mailto:filesp.a.sca.l.l@gmail.com"">filesp.a.sca.l.l@gmail.com</a>
<a href=""mailto:f.il.esp.as.ca.l.l@gmail.com"">f.il.esp.as.ca.l.l@gmail.com</a>
<a href=""mailto:fi.lespas.c.all@gmail.com"">fi.lespas.c.all@gmail.com</a>
<a href=""mailto:fi.l.esp.a.sc.all@gmail.com"">fi.l.esp.a.sc.all@gmail.com</a>
<a href=""mailto:fil.e.s.p.a.sc.a.l.l@gmail.com"">fil.e.s.p.a.sc.a.l.l@gmail.com</a>
<a href=""mailto:fi.l.e.s.p.as.c.a.ll@gmail.com"">fi.l.e.s.p.as.c.a.ll@gmail.com</a>
<a href=""mailto:fi.le.s.p.a.sca.l.l@gmail.com"">fi.le.s.p.a.sca.l.l@gmail.com</a>
<a href=""mailto:f.il.espa.sc.a.l.l@gmail.com"">f.il.espa.sc.a.l.l@gmail.com</a>
<a href=""mailto:f.ile.s.p.a.s.cal.l@gmail.com"">f.ile.s.p.a.s.cal.l@gmail.com</a>
<a href=""mailto:f.il.es.pa.sc.all@gmail.com"">f.il.es.pa.sc.all@gmail.com</a>
<a href=""mailto:f.i.l.es.p.a.s.cal.l@gmail.com"">f.i.l.es.p.a.s.cal.l@gmail.com</a>
<a href=""mailto:fi.l.espa.s.ca.ll@gmail.com"">fi.l.espa.s.ca.ll@gmail.com</a>
<a href=""mailto:fi.les.p.a.sc.all@gmail.com"">fi.les.p.a.sc.all@gmail.com</a>
<a href=""mailto:fil.esp.as.ca.l.l@gmail.com"">fil.esp.as.ca.l.l@gmail.com</a>
<a href=""mailto:f.i.l.es.pascal.l@gmail.com"">f.i.l.es.pascal.l@gmail.com</a>
<a href=""mailto:fi.les.p.asc.a.l.l@gmail.com"">fi.les.p.asc.a.l.l@gmail.com</a>
<a href=""mailto:files.p.asc.a.ll@gmail.com"">files.p.asc.a.ll@gmail.com</a>
<a href=""mailto:f.i.les.p.a.scal.l@gmail.com"">f.i.les.p.a.scal.l@gmail.com</a>
<a href=""mailto:f.il.es.p.ascal.l@gmail.com"">f.il.es.p.ascal.l@gmail.com</a>
<a href=""mailto:f.i.l.e.s.pa.sca.l.l@gmail.com"">f.i.l.e.s.pa.sca.l.l@gmail.com</a>
<a href=""mailto:f.i.l.e.spas.call@gmail.com"">f.i.l.e.spas.call@gmail.com</a>
<a href=""mailto:f.il.e.spa.sc.all@gmail.com"">f.il.e.spa.sc.all@gmail.com</a>
<a href=""mailto:f.i.l.e.spasc.al.l@gmail.com"">f.i.l.e.spasc.al.l@gmail.com</a>
<a href=""mailto:fi.l.esp.as.ca.ll@gmail.com"">fi.l.esp.as.ca.ll@gmail.com</a>
<a href=""mailto:f.il.e.s.p.a.s.c.al.l@gmail.com"">f.il.e.s.p.a.s.c.al.l@gmail.com</a>
<a href=""mailto:f.i.le.s.pa.sc.al.l@gmail.com"">f.i.le.s.pa.sc.al.l@gmail.com</a>
<a href=""mailto:files.p.asca.l.l@gmail.com"">files.p.asca.l.l@gmail.com</a>
<a href=""mailto:f.ile.spasc.a.ll@gmail.com"">f.ile.spasc.a.ll@gmail.com</a>
<a href=""mailto:f.il.es.p.as.c.all@gmail.com"">f.il.es.p.as.c.all@gmail.com</a>
<a href=""mailto:fi.lespasc.a.l.l@gmail.com"">fi.lespasc.a.l.l@gmail.com</a>
<a href=""mailto:f.il.espa.scall@gmail.com"">f.il.espa.scall@gmail.com</a>
<a href=""mailto:f.i.lesp.ascall@gmail.com"">f.i.lesp.ascall@gmail.com</a>
<a href=""mailto:files.p.asca.ll@gmail.com"">files.p.asca.ll@gmail.com</a>
<a href=""mailto:f.i.les.p.asc.al.l@gmail.com"">f.i.les.p.asc.al.l@gmail.com</a>
<a href=""mailto:f.il.e.spas.ca.ll@gmail.com"">f.il.e.spas.ca.ll@gmail.com</a>
<a href=""mailto:f.i.l.espa.s.c.a.l.l@gmail.com"">f.i.l.espa.s.c.a.l.l@gmail.com</a>
<a href=""mailto:file.sp.a.scall@gmail.com"">file.sp.a.scall@gmail.com</a>
<a href=""mailto:fi.le.sp.a.s.c.a.l.l@gmail.com"">fi.le.sp.a.s.c.a.l.l@gmail.com</a>
<a href=""mailto:file.sp.a.scal.l@gmail.com"">file.sp.a.scal.l@gmail.com</a>
<a href=""mailto:fi.les.p.asc.all@gmail.com"">fi.les.p.asc.all@gmail.com</a>
<a href=""mailto:fil.es.pa.sca.l.l@gmail.com"">fil.es.pa.sca.l.l@gmail.com</a>
<a href=""mailto:fi.l.espa.sca.l.l@gmail.com"">fi.l.espa.sca.l.l@gmail.com</a>
<a href=""mailto:f.il.e.sp.a.sc.a.ll@gmail.com"">f.il.e.sp.a.sc.a.ll@gmail.com</a>
<a href=""mailto:f.i.le.s.pascall@gmail.com"">f.i.le.s.pascall@gmail.com</a>
<a href=""mailto:f.ile.s.p.a.s.c.a.ll@gmail.com"">f.ile.s.p.a.s.c.a.ll@gmail.com</a>
<a href=""mailto:fi.l.es.p.as.ca.ll@gmail.com"">fi.l.es.p.as.ca.ll@gmail.com</a>
<a href=""mailto:fi.les.pas.c.a.ll@gmail.com"">fi.les.pas.c.a.ll@gmail.com</a>
<a href=""mailto:files.pa.scal.l@gmail.com"">files.pa.scal.l@gmail.com</a>
<a href=""mailto:fi.lespa.scall@gmail.com"">fi.lespa.scall@gmail.com</a>
<a href=""mailto:fil.esp.a.scal.l@gmail.com"">fil.esp.a.scal.l@gmail.com</a>
<a href=""mailto:fi.le.spa.sca.ll@gmail.com"">fi.le.spa.sca.ll@gmail.com</a>
<a href=""mailto:fi.l.e.spascal.l@gmail.com"">fi.l.e.spascal.l@gmail.com</a>
<a href=""mailto:fi.le.s.pas.ca.l.l@gmail.com"">fi.le.s.pas.ca.l.l@gmail.com</a>
<a href=""mailto:f.i.le.s.p.ascall@gmail.com"">f.i.le.s.p.ascall@gmail.com</a>
<a href=""mailto:fi.le.s.pas.call@gmail.com"">fi.le.s.pas.call@gmail.com</a>
<a href=""mailto:f.i.lesp.a.sca.ll@gmail.com"">f.i.lesp.a.sca.ll@gmail.com</a>
<a href=""mailto:fil.e.sp.ascal.l@gmail.com"">fil.e.sp.ascal.l@gmail.com</a>
<a href=""mailto:fil.e.s.pascal.l@gmail.com"">fil.e.s.pascal.l@gmail.com</a>
<a href=""mailto:files.p.a.s.c.a.ll@gmail.com"">files.p.a.s.c.a.ll@gmail.com</a>
<a href=""mailto:fil.espa.s.ca.ll@gmail.com"">fil.espa.s.ca.ll@gmail.com</a>
<a href=""mailto:f.i.le.sp.a.sca.ll@gmail.com"">f.i.le.sp.a.sca.ll@gmail.com</a>
<a href=""mailto:f.il.es.pa.sc.a.ll@gmail.com"">f.il.es.pa.sc.a.ll@gmail.com</a>
<a href=""mailto:f.il.espa.s.cal.l@gmail.com"">f.il.espa.s.cal.l@gmail.com</a>
<a href=""mailto:f.i.lesp.asc.a.ll@gmail.com"">f.i.lesp.asc.a.ll@gmail.com</a>
<a href=""mailto:f.ile.spa.sc.al.l@gmail.com"">f.ile.spa.sc.al.l@gmail.com</a>
<a href=""mailto:fi.l.es.pas.call@gmail.com"">fi.l.es.pas.call@gmail.com</a>
<a href=""mailto:file.spa.s.c.a.ll@gmail.com"">file.spa.s.c.a.ll@gmail.com</a>
<a href=""mailto:f.ile.sp.a.s.cal.l@gmail.com"">f.ile.sp.a.s.cal.l@gmail.com</a>
<a href=""mailto:fi.les.p.ascal.l@gmail.com"">fi.les.p.ascal.l@gmail.com</a>
<a href=""mailto:f.i.l.e.s.pa.sc.a.l.l@gmail.com"">f.i.l.e.s.pa.sc.a.l.l@gmail.com</a>
<a href=""mailto:f.iles.p.a.sc.all@gmail.com"">f.iles.p.a.sc.all@gmail.com</a>
<a href=""mailto:filespa.sc.all@gmail.com"">filespa.sc.all@gmail.com</a>
<a href=""mailto:f.iles.pas.c.al.l@gmail.com"">f.iles.pas.c.al.l@gmail.com</a>
<a href=""mailto:fi.les.pa.s.c.a.ll@gmail.com"">fi.les.pa.s.c.a.ll@gmail.com</a>
<a href=""mailto:fi.le.sp.a.s.ca.ll@gmail.com"">fi.le.sp.a.s.ca.ll@gmail.com</a>
<a href=""mailto:f.il.e.spas.cal.l@gmail.com"">f.il.e.spas.cal.l@gmail.com</a>
<a href=""mailto:f.ile.spas.c.al.l@gmail.com"">f.ile.spas.c.al.l@gmail.com</a>
<a href=""mailto:f.i.le.s.p.a.s.ca.l.l@gmail.com"">f.i.le.s.p.a.s.ca.l.l@gmail.com</a>
<a href=""mailto:fi.l.e.spa.sc.al.l@gmail.com"">fi.l.e.spa.sc.al.l@gmail.com</a>
<a href=""mailto:fi.l.e.s.p.asc.a.l.l@gmail.com"">fi.l.e.s.p.asc.a.l.l@gmail.com</a>
<a href=""mailto:f.il.es.pasca.ll@gmail.com"">f.il.es.pasca.ll@gmail.com</a>
<a href=""mailto:f.il.espas.c.a.ll@gmail.com"">f.il.espas.c.a.ll@gmail.com</a>
<a href=""mailto:f.ile.s.p.asca.l.l@gmail.com"">f.ile.s.p.asca.l.l@gmail.com</a>
<a href=""mailto:f.i.l.es.pas.ca.l.l@gmail.com"">f.i.l.es.pas.ca.l.l@gmail.com</a>
<a href=""mailto:fil.es.p.a.scal.l@gmail.com"">fil.es.p.a.scal.l@gmail.com</a>
<a href=""mailto:f.i.lesp.as.ca.ll@gmail.com"">f.i.lesp.as.ca.ll@gmail.com</a>
<a href=""mailto:f.ile.spas.ca.l.l@gmail.com"">f.ile.spas.ca.l.l@gmail.com</a>
<a href=""mailto:fi.l.e.s.p.as.cal.l@gmail.com"">fi.l.e.s.p.as.cal.l@gmail.com</a>
<a href=""mailto:f.i.l.e.spa.s.c.al.l@gmail.com"">f.i.l.e.spa.s.c.al.l@gmail.com</a>
<a href=""mailto:f.ilesp.a.s.ca.l.l@gmail.com"">f.ilesp.a.s.ca.l.l@gmail.com</a>
<a href=""mailto:filespasc.al.l@gmail.com"">filespasc.al.l@gmail.com</a>
<a href=""mailto:fil.es.pa.s.c.a.ll@gmail.com"">fil.es.pa.s.c.a.ll@gmail.com</a>
<a href=""mailto:f.ilespas.c.all@gmail.com"">f.ilespas.c.all@gmail.com</a>
<a href=""mailto:f.il.e.s.pa.s.c.a.l.l@gmail.com"">f.il.e.s.pa.s.c.a.l.l@gmail.com</a>
<a href=""mailto:fi.les.p.a.scal.l@gmail.com"">fi.les.p.a.scal.l@gmail.com</a>
<a href=""mailto:file.s.p.a.sc.a.l.l@gmail.com"">file.s.p.a.sc.a.l.l@gmail.com</a>
<a href=""mailto:fil.e.spas.cal.l@gmail.com"">fil.e.spas.cal.l@gmail.com</a>
<a href=""mailto:f.i.l.e.s.p.as.call@gmail.com"">f.i.l.e.s.p.as.call@gmail.com</a>
<a href=""mailto:filesp.a.s.c.al.l@gmail.com"">filesp.a.s.c.al.l@gmail.com</a>
<a href=""mailto:fil.es.p.a.sc.all@gmail.com"">fil.es.p.a.sc.all@gmail.com</a>
<a href=""mailto:f.i.l.e.s.pasc.all@gmail.com"">f.i.l.e.s.pasc.all@gmail.com</a>
<a href=""mailto:f.i.l.espas.c.al.l@gmail.com"">f.i.l.espas.c.al.l@gmail.com</a>
<a href=""mailto:f.il.e.s.pa.sc.a.l.l@gmail.com"">f.il.e.s.pa.sc.a.l.l@gmail.com</a>
<a href=""mailto:f.iles.p.as.call@gmail.com"">f.iles.p.as.call@gmail.com</a>
<a href=""mailto:fil.es.p.a.s.c.a.l.l@gmail.com"">fil.es.p.a.s.c.a.l.l@gmail.com</a>
<a href=""mailto:f.i.le.s.p.a.sca.ll@gmail.com"">f.i.le.s.p.a.sca.ll@gmail.com</a>
<a href=""mailto:fil.e.sp.a.sca.ll@gmail.com"">fil.e.sp.a.sca.ll@gmail.com</a>
<a href=""mailto:fi.le.s.p.a.s.cal.l@gmail.com"">fi.le.s.p.a.s.cal.l@gmail.com</a>
<a href=""mailto:f.i.l.esp.a.s.c.a.l.l@gmail.com"">f.i.l.esp.a.s.c.a.l.l@gmail.com</a>
<a href=""mailto:fi.le.sp.a.s.c.a.ll@gmail.com"">fi.le.sp.a.s.c.a.ll@gmail.com</a>
<a href=""mailto:file.sp.a.s.ca.l.l@gmail.com"">file.sp.a.s.ca.l.l@gmail.com</a>
<a href=""mailto:fi.l.es.pa.scall@gmail.com"">fi.l.es.pa.scall@gmail.com</a>
<a href=""mailto:f.i.l.e.spasca.l.l@gmail.com"">f.i.l.e.spasca.l.l@gmail.com</a>
<a href=""mailto:fi.l.e.spa.scall@gmail.com"">fi.l.e.spa.scall@gmail.com</a>
<a href=""mailto:fil.espasc.al.l@gmail.com"">fil.espasc.al.l@gmail.com</a>
<a href=""mailto:files.p.asc.all@gmail.com"">files.p.asc.all@gmail.com</a>
<a href=""mailto:f.il.es.p.a.scall@gmail.com"">f.il.es.p.a.scall@gmail.com</a>
<a href=""mailto:f.ile.s.pas.c.a.ll@gmail.com"">f.ile.s.pas.c.a.ll@gmail.com</a>
<a href=""mailto:fi.l.e.s.p.as.ca.l.l@gmail.com"">fi.l.e.s.p.as.ca.l.l@gmail.com</a>
<a href=""mailto:fi.l.es.p.asca.l.l@gmail.com"">fi.l.es.p.asca.l.l@gmail.com</a>
<a href=""mailto:fi.les.pas.ca.ll@gmail.com"">fi.les.pas.ca.ll@gmail.com</a>
<a href=""mailto:fil.espas.c.all@gmail.com"">fil.espas.c.all@gmail.com</a>
<a href=""mailto:fi.l.espascall@gmail.com"">fi.l.espascall@gmail.com</a>
<a href=""mailto:fil.e.s.pa.sc.al.l@gmail.com"">fil.e.s.pa.sc.al.l@gmail.com</a>
<a href=""mailto:fi.l.e.s.pa.s.c.a.l.l@gmail.com"">fi.l.e.s.pa.s.c.a.l.l@gmail.com</a>
<a href=""mailto:filesp.a.sc.a.l.l@gmail.com"">filesp.a.sc.a.l.l@gmail.com</a>
<a href=""mailto:f.i.l.esp.a.s.ca.ll@gmail.com"">f.i.l.esp.a.s.ca.ll@gmail.com</a>
<a href=""mailto:f.ile.s.pas.ca.ll@gmail.com"">f.ile.s.pas.ca.ll@gmail.com</a>
<a href=""mailto:files.p.a.s.ca.l.l@gmail.com"">files.p.a.s.ca.l.l@gmail.com</a>
<a href=""mailto:files.pa.sc.al.l@gmail.com"">files.pa.sc.al.l@gmail.com</a>
<a href=""mailto:f.ile.s.p.ascal.l@gmail.com"">f.ile.s.p.ascal.l@gmail.com</a>
<a href=""mailto:f.ile.spa.sc.a.ll@gmail.com"">f.ile.spa.sc.a.ll@gmail.com</a>
<a href=""mailto:file.s.pasc.al.l@gmail.com"">file.s.pasc.al.l@gmail.com</a>
<a href=""mailto:fi.l.e.spa.s.call@gmail.com"">fi.l.e.spa.s.call@gmail.com</a>
<a href=""mailto:fil.e.sp.asc.a.ll@gmail.com"">fil.e.sp.asc.a.ll@gmail.com</a>
<a href=""mailto:fi.l.e.s.p.a.scall@gmail.com"">fi.l.e.s.p.a.scall@gmail.com</a>
<a href=""mailto:filespasc.a.l.l@gmail.com"">filespasc.a.l.l@gmail.com</a>
<a href=""mailto:f.i.l.es.pasc.al.l@gmail.com"">f.i.l.es.pasc.al.l@gmail.com</a>
<a href=""mailto:f.i.l.es.p.a.s.ca.ll@gmail.com"">f.i.l.es.p.a.s.ca.ll@gmail.com</a>
<a href=""mailto:f.ile.spas.cal.l@gmail.com"">f.ile.spas.cal.l@gmail.com</a>
<a href=""mailto:f.i.le.sp.asc.al.l@gmail.com"">f.i.le.sp.asc.al.l@gmail.com</a>
<a href=""mailto:f.i.les.pa.s.c.a.l.l@gmail.com"">f.i.les.pa.s.c.a.l.l@gmail.com</a>
<a href=""mailto:fil.es.p.as.cal.l@gmail.com"">fil.es.p.as.cal.l@gmail.com</a>
<a href=""mailto:f.i.l.e.spas.c.a.ll@gmail.com"">f.i.l.e.spas.c.a.ll@gmail.com</a>
<a href=""mailto:joefar01900@gmail.com"">joefar01900@gmail.com</a>
<a href=""mailto:jo.ef.ar.0.1.9.0.0@gmail.com"">jo.ef.ar.0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.e.far01.9.0.0@gmail.com"">jo.e.far01.9.0.0@gmail.com</a>
<a href=""mailto:jo.e.f.ar019.00@gmail.com"">jo.e.f.ar019.00@gmail.com</a>
<a href=""mailto:j.oe.fa.r.01.90.0@gmail.com"">j.oe.fa.r.01.90.0@gmail.com</a>
<a href=""mailto:j.o.efa.r0.1.900@gmail.com"">j.o.efa.r0.1.900@gmail.com</a>
<a href=""mailto:joefa.r0.19.00@gmail.com"">joefa.r0.19.00@gmail.com</a>
<a href=""mailto:jo.ef.a.r0.19.00@gmail.com"">jo.ef.a.r0.19.00@gmail.com</a>
<a href=""mailto:jo.e.fa.r0.1.9.0.0@gmail.com"">jo.e.fa.r0.1.9.0.0@gmail.com</a>
<a href=""mailto:joef.a.r0.19.0.0@gmail.com"">joef.a.r0.19.0.0@gmail.com</a>
<a href=""mailto:j.oe.far0.1.9.0.0@gmail.com"">j.oe.far0.1.9.0.0@gmail.com</a>
<a href=""mailto:j.oe.far019.0.0@gmail.com"">j.oe.far019.0.0@gmail.com</a>
<a href=""mailto:jo.e.f.ar01.9.00@gmail.com"">jo.e.f.ar01.9.00@gmail.com</a>
<a href=""mailto:j.oef.a.r.01.9.00@gmail.com"">j.oef.a.r.01.9.00@gmail.com</a>
<a href=""mailto:j.o.e.far.0.1.9.00@gmail.com"">j.o.e.far.0.1.9.00@gmail.com</a>
<a href=""mailto:joef.a.r.0.1.9.0.0@gmail.com"">joef.a.r.0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.efar01.9.0.0@gmail.com"">jo.efar01.9.0.0@gmail.com</a>
<a href=""mailto:j.o.efa.r.019.0.0@gmail.com"">j.o.efa.r.019.0.0@gmail.com</a>
<a href=""mailto:jo.e.f.a.r01900@gmail.com"">jo.e.f.a.r01900@gmail.com</a>
<a href=""mailto:joefar0.19.0.0@gmail.com"">joefar0.19.0.0@gmail.com</a>
<a href=""mailto:j.oef.ar0.1900@gmail.com"">j.oef.ar0.1900@gmail.com</a>
<a href=""mailto:j.oe.f.a.r.0.1900@gmail.com"">j.oe.f.a.r.0.1900@gmail.com</a>
<a href=""mailto:joef.a.r019.00@gmail.com"">joef.a.r019.00@gmail.com</a>
<a href=""mailto:jo.e.f.ar.0.19.00@gmail.com"">jo.e.f.ar.0.19.00@gmail.com</a>
<a href=""mailto:jo.efa.r0.19.0.0@gmail.com"">jo.efa.r0.19.0.0@gmail.com</a>
<a href=""mailto:j.o.ef.ar01.9.0.0@gmail.com"">j.o.ef.ar01.9.0.0@gmail.com</a>
<a href=""mailto:jo.e.f.a.r0.1900@gmail.com"">jo.e.f.a.r0.1900@gmail.com</a>
<a href=""mailto:j.o.ef.a.r.01.90.0@gmail.com"">j.o.ef.a.r.01.90.0@gmail.com</a>
<a href=""mailto:jo.e.fa.r019.00@gmail.com"">jo.e.fa.r019.00@gmail.com</a>
<a href=""mailto:j.oef.a.r0.1900@gmail.com"">j.oef.a.r0.1900@gmail.com</a>
<a href=""mailto:joef.a.r019.0.0@gmail.com"">joef.a.r019.0.0@gmail.com</a>
<a href=""mailto:j.oef.a.r0.1.9.00@gmail.com"">j.oef.a.r0.1.9.00@gmail.com</a>
<a href=""mailto:joe.far.019.00@gmail.com"">joe.far.019.00@gmail.com</a>
<a href=""mailto:joefar0.1900@gmail.com"">joefar0.1900@gmail.com</a>
<a href=""mailto:j.oefa.r01.9.0.0@gmail.com"">j.oefa.r01.9.0.0@gmail.com</a>
<a href=""mailto:jo.ef.ar.01.9.00@gmail.com"">jo.ef.ar.01.9.00@gmail.com</a>
<a href=""mailto:j.oe.f.ar.01.900@gmail.com"">j.oe.f.ar.01.900@gmail.com</a>
<a href=""mailto:jo.ef.ar.01.9.0.0@gmail.com"">jo.ef.ar.01.9.0.0@gmail.com</a>
<a href=""mailto:j.oe.f.a.r.01.900@gmail.com"">j.oe.f.a.r.01.900@gmail.com</a>
<a href=""mailto:j.o.efa.r019.0.0@gmail.com"">j.o.efa.r019.0.0@gmail.com</a>
<a href=""mailto:jo.efar01900@gmail.com"">jo.efar01900@gmail.com</a>
<a href=""mailto:j.oefar0.1.900@gmail.com"">j.oefar0.1.900@gmail.com</a>
<a href=""mailto:joe.fa.r0.19.0.0@gmail.com"">joe.fa.r0.19.0.0@gmail.com</a>
<a href=""mailto:joe.f.ar.019.00@gmail.com"">joe.f.ar.019.00@gmail.com</a>
<a href=""mailto:joe.f.ar.01.9.0.0@gmail.com"">joe.f.ar.01.9.0.0@gmail.com</a>
<a href=""mailto:j.oefar0.190.0@gmail.com"">j.oefar0.190.0@gmail.com</a>
<a href=""mailto:joe.f.a.r.01.900@gmail.com"">joe.f.a.r.01.900@gmail.com</a>
<a href=""mailto:joefar0.190.0@gmail.com"">joefar0.190.0@gmail.com</a>
<a href=""mailto:joe.fa.r0.1.9.00@gmail.com"">joe.fa.r0.1.9.00@gmail.com</a>
<a href=""mailto:joe.far0.190.0@gmail.com"">joe.far0.190.0@gmail.com</a>
<a href=""mailto:joefa.r.019.00@gmail.com"">joefa.r.019.00@gmail.com</a>
<a href=""mailto:j.o.e.f.ar.01.90.0@gmail.com"">j.o.e.f.ar.01.90.0@gmail.com</a>
<a href=""mailto:j.oef.a.r.0.19.00@gmail.com"">j.oef.a.r.0.19.00@gmail.com</a>
<a href=""mailto:j.o.e.far0.190.0@gmail.com"">j.o.e.far0.190.0@gmail.com</a>
<a href=""mailto:j.o.e.f.ar.0.1.9.0.0@gmail.com"">j.o.e.f.ar.0.1.9.0.0@gmail.com</a>
<a href=""mailto:joe.far.01.900@gmail.com"">joe.far.01.900@gmail.com</a>
<a href=""mailto:j.o.e.fa.r.01900@gmail.com"">j.o.e.fa.r.01900@gmail.com</a>
<a href=""mailto:j.o.e.fa.r.0.1.9.0.0@gmail.com"">j.o.e.fa.r.0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.ef.ar.0.1900@gmail.com"">jo.ef.ar.0.1900@gmail.com</a>
<a href=""mailto:j.oe.f.ar0.1.900@gmail.com"">j.oe.f.ar0.1.900@gmail.com</a>
<a href=""mailto:j.oe.f.ar.0.19.0.0@gmail.com"">j.oe.f.ar.0.19.0.0@gmail.com</a>
<a href=""mailto:jo.efar.01900@gmail.com"">jo.efar.01900@gmail.com</a>
<a href=""mailto:joefa.r0.1.9.0.0@gmail.com"">joefa.r0.1.9.0.0@gmail.com</a>
<a href=""mailto:j.o.e.far.0190.0@gmail.com"">j.o.e.far.0190.0@gmail.com</a>
<a href=""mailto:joe.f.a.r.0.1.900@gmail.com"">joe.f.a.r.0.1.900@gmail.com</a>
<a href=""mailto:jo.efa.r01.90.0@gmail.com"">jo.efa.r01.90.0@gmail.com</a>
<a href=""mailto:j.o.efa.r0.1.90.0@gmail.com"">j.o.efa.r0.1.90.0@gmail.com</a>
<a href=""mailto:j.o.ef.a.r01.90.0@gmail.com"">j.o.ef.a.r01.90.0@gmail.com</a>
<a href=""mailto:joe.f.a.r.019.0.0@gmail.com"">joe.f.a.r.019.0.0@gmail.com</a>
<a href=""mailto:j.o.efa.r.01.90.0@gmail.com"">j.o.efa.r.01.90.0@gmail.com</a>
<a href=""mailto:j.o.efa.r01.9.00@gmail.com"">j.o.efa.r01.9.00@gmail.com</a>
<a href=""mailto:j.oe.far.0.19.00@gmail.com"">j.oe.far.0.19.00@gmail.com</a>
<a href=""mailto:joe.f.a.r.01.9.0.0@gmail.com"">joe.f.a.r.01.9.0.0@gmail.com</a>
<a href=""mailto:j.oe.f.a.r0.1.90.0@gmail.com"">j.oe.f.a.r0.1.90.0@gmail.com</a>
<a href=""mailto:jo.e.f.a.r.0.19.0.0@gmail.com"">jo.e.f.a.r.0.19.0.0@gmail.com</a>
<a href=""mailto:jo.e.fa.r.0.1900@gmail.com"">jo.e.fa.r.0.1900@gmail.com</a>
<a href=""mailto:j.oe.far.0.1.90.0@gmail.com"">j.oe.far.0.1.90.0@gmail.com</a>
<a href=""mailto:joef.a.r.01.900@gmail.com"">joef.a.r.01.900@gmail.com</a>
<a href=""mailto:joefar.0.19.0.0@gmail.com"">joefar.0.19.0.0@gmail.com</a>
<a href=""mailto:j.oef.a.r.0.1.90.0@gmail.com"">j.oef.a.r.0.1.90.0@gmail.com</a>
<a href=""mailto:joe.far0.1900@gmail.com"">joe.far0.1900@gmail.com</a>
<a href=""mailto:j.oef.a.r0.19.0.0@gmail.com"">j.oef.a.r0.19.0.0@gmail.com</a>
<a href=""mailto:j.o.ef.a.r.0.1.90.0@gmail.com"">j.o.ef.a.r.0.1.90.0@gmail.com</a>
<a href=""mailto:j.o.e.f.a.r0.1.9.00@gmail.com"">j.o.e.f.a.r0.1.9.00@gmail.com</a>
<a href=""mailto:j.oefar.0.19.0.0@gmail.com"">j.oefar.0.19.0.0@gmail.com</a>
<a href=""mailto:jo.efar01.90.0@gmail.com"">jo.efar01.90.0@gmail.com</a>
<a href=""mailto:joefar01900@gmail.com"">joefar01900@gmail.com</a>
<a href=""mailto:jo.e.far.01.900@gmail.com"">jo.e.far.01.900@gmail.com</a>
<a href=""mailto:jo.efar0.1.9.00@gmail.com"">jo.efar0.1.9.00@gmail.com</a>
<a href=""mailto:j.o.ef.a.r01.900@gmail.com"">j.o.ef.a.r01.900@gmail.com</a>
<a href=""mailto:j.oe.f.a.r019.0.0@gmail.com"">j.oe.f.a.r019.0.0@gmail.com</a>
<a href=""mailto:j.oefa.r.0190.0@gmail.com"">j.oefa.r.0190.0@gmail.com</a>
<a href=""mailto:j.o.e.f.ar.0.1900@gmail.com"">j.o.e.f.ar.0.1900@gmail.com</a>
<a href=""mailto:j.oe.f.a.r0.1.900@gmail.com"">j.oe.f.a.r0.1.900@gmail.com</a>
<a href=""mailto:joef.ar019.00@gmail.com"">joef.ar019.00@gmail.com</a>
<a href=""mailto:joe.f.ar.0.190.0@gmail.com"">joe.f.ar.0.190.0@gmail.com</a>
<a href=""mailto:j.o.ef.a.r.0.19.00@gmail.com"">j.o.ef.a.r.0.19.00@gmail.com</a>
<a href=""mailto:joef.a.r0.1.9.00@gmail.com"">joef.a.r0.1.9.00@gmail.com</a>
<a href=""mailto:j.o.e.f.ar01.900@gmail.com"">j.o.e.f.ar01.900@gmail.com</a>
<a href=""mailto:j.o.e.far01.900@gmail.com"">j.o.e.far01.900@gmail.com</a>
<a href=""mailto:joefa.r.0.1.90.0@gmail.com"">joefa.r.0.1.90.0@gmail.com</a>
<a href=""mailto:j.oe.f.a.r01.9.0.0@gmail.com"">j.oe.f.a.r01.9.0.0@gmail.com</a>
<a href=""mailto:j.oef.ar019.0.0@gmail.com"">j.oef.ar019.0.0@gmail.com</a>
<a href=""mailto:jo.ef.a.r.0.1.90.0@gmail.com"">jo.ef.a.r.0.1.90.0@gmail.com</a>
<a href=""mailto:joefar.019.00@gmail.com"">joefar.019.00@gmail.com</a>
<a href=""mailto:jo.efa.r.0.19.0.0@gmail.com"">jo.efa.r.0.19.0.0@gmail.com</a>
<a href=""mailto:jo.ef.a.r.0.1.900@gmail.com"">jo.ef.a.r.0.1.900@gmail.com</a>
<a href=""mailto:j.o.e.f.a.r.01.900@gmail.com"">j.o.e.f.a.r.01.900@gmail.com</a>
<a href=""mailto:j.oe.f.ar0.190.0@gmail.com"">j.oe.f.ar0.190.0@gmail.com</a>
<a href=""mailto:joef.ar0.1.9.00@gmail.com"">joef.ar0.1.9.00@gmail.com</a>
<a href=""mailto:jo.e.far01.90.0@gmail.com"">jo.e.far01.90.0@gmail.com</a>
<a href=""mailto:j.o.ef.ar0.1.9.00@gmail.com"">j.o.ef.ar0.1.9.00@gmail.com</a>
<a href=""mailto:j.oef.a.r019.0.0@gmail.com"">j.oef.a.r019.0.0@gmail.com</a>
<a href=""mailto:joefar.01.9.0.0@gmail.com"">joefar.01.9.0.0@gmail.com</a>
<a href=""mailto:j.o.ef.a.r.019.0.0@gmail.com"">j.o.ef.a.r.019.0.0@gmail.com</a>
<a href=""mailto:joefa.r0.190.0@gmail.com"">joefa.r0.190.0@gmail.com</a>
<a href=""mailto:jo.efar.0.19.00@gmail.com"">jo.efar.0.19.00@gmail.com</a>
<a href=""mailto:j.o.efar0.19.00@gmail.com"">j.o.efar0.19.00@gmail.com</a>
<a href=""mailto:joe.fa.r.0.19.00@gmail.com"">joe.fa.r.0.19.00@gmail.com</a>
<a href=""mailto:j.oe.far0.1900@gmail.com"">j.oe.far0.1900@gmail.com</a>
<a href=""mailto:j.o.e.far.0.190.0@gmail.com"">j.o.e.far.0.190.0@gmail.com</a>
<a href=""mailto:jo.ef.a.r0190.0@gmail.com"">jo.ef.a.r0190.0@gmail.com</a>
<a href=""mailto:j.oe.far.01.900@gmail.com"">j.oe.far.01.900@gmail.com</a>
<a href=""mailto:j.o.e.f.ar.0.19.00@gmail.com"">j.o.e.f.ar.0.19.00@gmail.com</a>
<a href=""mailto:joe.f.a.r01900@gmail.com"">joe.f.a.r01900@gmail.com</a>
<a href=""mailto:j.o.ef.ar0.1.9.0.0@gmail.com"">j.o.ef.ar0.1.9.0.0@gmail.com</a>
<a href=""mailto:joe.fa.r.01.9.00@gmail.com"">joe.fa.r.01.9.00@gmail.com</a>
<a href=""mailto:j.oe.f.ar0.1.9.00@gmail.com"">j.oe.f.ar0.1.9.00@gmail.com</a>
<a href=""mailto:joef.ar01.900@gmail.com"">joef.ar01.900@gmail.com</a>
<a href=""mailto:j.oef.a.r0.1.9.0.0@gmail.com"">j.oef.a.r0.1.9.0.0@gmail.com</a>
<a href=""mailto:j.o.e.fa.r0.190.0@gmail.com"">j.o.e.fa.r0.190.0@gmail.com</a>
<a href=""mailto:j.oe.f.a.r.019.00@gmail.com"">j.oe.f.a.r.019.00@gmail.com</a>
<a href=""mailto:joef.a.r.01.90.0@gmail.com"">joef.a.r.01.90.0@gmail.com</a>
<a href=""mailto:j.oef.ar.01.9.0.0@gmail.com"">j.oef.ar.01.9.0.0@gmail.com</a>
<a href=""mailto:jo.e.fa.r.01900@gmail.com"">jo.e.fa.r.01900@gmail.com</a>
<a href=""mailto:j.o.efar019.00@gmail.com"">j.o.efar019.00@gmail.com</a>
<a href=""mailto:j.oefa.r.0.1.900@gmail.com"">j.oefa.r.0.1.900@gmail.com</a>
<a href=""mailto:joefa.r.0.1.900@gmail.com"">joefa.r.0.1.900@gmail.com</a>
<a href=""mailto:joe.fa.r0.190.0@gmail.com"">joe.fa.r0.190.0@gmail.com</a>
<a href=""mailto:joef.a.r0.19.00@gmail.com"">joef.a.r0.19.00@gmail.com</a>
<a href=""mailto:j.oe.far.0.1.900@gmail.com"">j.oe.far.0.1.900@gmail.com</a>
<a href=""mailto:j.oef.a.r.01.90.0@gmail.com"">j.oef.a.r.01.90.0@gmail.com</a>
<a href=""mailto:j.oefar0.1.9.0.0@gmail.com"">j.oefar0.1.9.0.0@gmail.com</a>
<a href=""mailto:joef.ar0.1900@gmail.com"">joef.ar0.1900@gmail.com</a>
<a href=""mailto:j.oe.f.a.r.0.1.9.0.0@gmail.com"">j.oe.f.a.r.0.1.9.0.0@gmail.com</a>
<a href=""mailto:j.oefa.r.019.00@gmail.com"">j.oefa.r.019.00@gmail.com</a>
<a href=""mailto:joef.ar.0.1.9.0.0@gmail.com"">joef.ar.0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.efar0.1.90.0@gmail.com"">jo.efar0.1.90.0@gmail.com</a>
<a href=""mailto:j.oe.f.a.r.0.1.90.0@gmail.com"">j.oe.f.a.r.0.1.90.0@gmail.com</a>
<a href=""mailto:joe.f.a.r.0.1.9.0.0@gmail.com"">joe.f.a.r.0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.ef.a.r0.1.9.0.0@gmail.com"">jo.ef.a.r0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.ef.ar.019.0.0@gmail.com"">jo.ef.ar.019.0.0@gmail.com</a>
<a href=""mailto:jo.e.fa.r.019.00@gmail.com"">jo.e.fa.r.019.00@gmail.com</a>
<a href=""mailto:jo.e.far.0.19.00@gmail.com"">jo.e.far.0.19.00@gmail.com</a>
<a href=""mailto:j.oefa.r.0.1.9.0.0@gmail.com"">j.oefa.r.0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.e.far.01900@gmail.com"">jo.e.far.01900@gmail.com</a>
<a href=""mailto:j.o.ef.a.r.0.1.9.0.0@gmail.com"">j.o.ef.a.r.0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.efar0190.0@gmail.com"">jo.efar0190.0@gmail.com</a>
<a href=""mailto:jo.efar.0.1.9.00@gmail.com"">jo.efar.0.1.9.00@gmail.com</a>
<a href=""mailto:j.o.efar.01900@gmail.com"">j.o.efar.01900@gmail.com</a>
<a href=""mailto:jo.e.f.a.r0.19.0.0@gmail.com"">jo.e.f.a.r0.19.0.0@gmail.com</a>
<a href=""mailto:jo.e.f.a.r0.1.9.00@gmail.com"">jo.e.f.a.r0.1.9.00@gmail.com</a>
<a href=""mailto:j.oe.f.a.r.0.19.0.0@gmail.com"">j.oe.f.a.r.0.19.0.0@gmail.com</a>
<a href=""mailto:jo.ef.ar019.00@gmail.com"">jo.ef.ar019.00@gmail.com</a>
<a href=""mailto:joe.fa.r.019.0.0@gmail.com"">joe.fa.r.019.0.0@gmail.com</a>
<a href=""mailto:joe.f.ar.0.1.900@gmail.com"">joe.f.ar.0.1.900@gmail.com</a>
<a href=""mailto:j.o.e.fa.r0.1.900@gmail.com"">j.o.e.fa.r0.1.900@gmail.com</a>
<a href=""mailto:j.oe.far01900@gmail.com"">j.oe.far01900@gmail.com</a>
<a href=""mailto:j.o.e.far.01.900@gmail.com"">j.o.e.far.01.900@gmail.com</a>
<a href=""mailto:joe.far0.1.9.00@gmail.com"">joe.far0.1.9.00@gmail.com</a>
<a href=""mailto:joe.f.ar0.1900@gmail.com"">joe.f.ar0.1900@gmail.com</a>
<a href=""mailto:j.o.e.f.a.r0.1900@gmail.com"">j.o.e.f.a.r0.1900@gmail.com</a>
<a href=""mailto:joe.far019.00@gmail.com"">joe.far019.00@gmail.com</a>
<a href=""mailto:j.oef.ar.0.19.00@gmail.com"">j.oef.ar.0.19.00@gmail.com</a>
<a href=""mailto:j.oe.f.ar019.0.0@gmail.com"">j.oe.f.ar019.0.0@gmail.com</a>
<a href=""mailto:jo.ef.a.r.01.9.00@gmail.com"">jo.ef.a.r.01.9.00@gmail.com</a>
<a href=""mailto:j.o.ef.ar.0.19.0.0@gmail.com"">j.o.ef.ar.0.19.0.0@gmail.com</a>
<a href=""mailto:j.o.e.fa.r.0.19.0.0@gmail.com"">j.o.e.fa.r.0.19.0.0@gmail.com</a>
<a href=""mailto:j.o.e.fa.r.019.00@gmail.com"">j.o.e.fa.r.019.00@gmail.com</a>
<a href=""mailto:joef.a.r01.90.0@gmail.com"">joef.a.r01.90.0@gmail.com</a>
<a href=""mailto:jo.ef.ar.0.190.0@gmail.com"">jo.ef.ar.0.190.0@gmail.com</a>
<a href=""mailto:jo.efa.r0.1.900@gmail.com"">jo.efa.r0.1.900@gmail.com</a>
<a href=""mailto:joe.f.ar019.0.0@gmail.com"">joe.f.ar019.0.0@gmail.com</a>
<a href=""mailto:joefar.0.19.00@gmail.com"">joefar.0.19.00@gmail.com</a>
<a href=""mailto:joe.f.a.r01.9.00@gmail.com"">joe.f.a.r01.9.00@gmail.com</a>
<a href=""mailto:jo.e.f.a.r01.9.00@gmail.com"">jo.e.f.a.r01.9.00@gmail.com</a>
<a href=""mailto:j.o.efar01.90.0@gmail.com"">j.o.efar01.90.0@gmail.com</a>
<a href=""mailto:j.oefa.r01.9.00@gmail.com"">j.oefa.r01.9.00@gmail.com</a>
<a href=""mailto:jo.e.f.ar.01900@gmail.com"">jo.e.f.ar.01900@gmail.com</a>
<a href=""mailto:jo.e.f.ar01.900@gmail.com"">jo.e.f.ar01.900@gmail.com</a>
<a href=""mailto:jo.efa.r0.1.90.0@gmail.com"">jo.efa.r0.1.90.0@gmail.com</a>
<a href=""mailto:j.oefar.0.1.9.00@gmail.com"">j.oefar.0.1.9.00@gmail.com</a>
<a href=""mailto:j.oe.fa.r.0190.0@gmail.com"">j.oe.fa.r.0190.0@gmail.com</a>
<a href=""mailto:joe.f.ar.0.1.90.0@gmail.com"">joe.f.ar.0.1.90.0@gmail.com</a>
<a href=""mailto:j.o.e.f.a.r.01900@gmail.com"">j.o.e.f.a.r.01900@gmail.com</a>
<a href=""mailto:joefar0.1.9.0.0@gmail.com"">joefar0.1.9.0.0@gmail.com</a>
<a href=""mailto:j.oe.f.ar.0.1.9.0.0@gmail.com"">j.oe.f.ar.0.1.9.0.0@gmail.com</a>
<a href=""mailto:j.oefar01.900@gmail.com"">j.oefar01.900@gmail.com</a>
<a href=""mailto:jo.ef.ar0.1900@gmail.com"">jo.ef.ar0.1900@gmail.com</a>
<a href=""mailto:jo.e.f.a.r.0.1.9.0.0@gmail.com"">jo.e.f.a.r.0.1.9.0.0@gmail.com</a>
<a href=""mailto:jo.e.fa.r0.1.900@gmail.com"">jo.e.fa.r0.1.900@gmail.com</a>
<a href=""mailto:ambercroberts201@gmail.com"">ambercroberts201@gmail.com</a>
<a href=""mailto:a.m.bercrob.er.ts2.01@gmail.com"">a.m.bercrob.er.ts2.01@gmail.com</a>
<a href=""mailto:a.m.b.ercr.ober.ts2.0.1@gmail.com"">a.m.b.ercr.ober.ts2.0.1@gmail.com</a>
<a href=""mailto:ambe.rc.r.o.ber.ts2.01@gmail.com"">ambe.rc.r.o.ber.ts2.01@gmail.com</a>
<a href=""mailto:a.m.be.r.cr.obe.rts20.1@gmail.com"">a.m.be.r.cr.obe.rts20.1@gmail.com</a>
<a href=""mailto:a.m.be.r.croberts201@gmail.com"">a.m.be.r.croberts201@gmail.com</a>
<a href=""mailto:am.be.r.cro.berts.20.1@gmail.com"">am.be.r.cro.berts.20.1@gmail.com</a>
<a href=""mailto:a.mbe.r.c.ro.b.e.r.t.s2.01@gmail.com"">a.mbe.r.c.ro.b.e.r.t.s2.01@gmail.com</a>
<a href=""mailto:am.be.r.crobe.rts.2.0.1@gmail.com"">am.be.r.crobe.rts.2.0.1@gmail.com</a>
<a href=""mailto:a.mb.e.rc.rober.ts.20.1@gmail.com"">a.mb.e.rc.rober.ts.20.1@gmail.com</a>
<a href=""mailto:a.mber.cro.b.e.r.ts2.0.1@gmail.com"">a.mber.cro.b.e.r.ts2.0.1@gmail.com</a>
<a href=""mailto:amber.cr.o.b.e.r.t.s2.0.1@gmail.com"">amber.cr.o.b.e.r.t.s2.0.1@gmail.com</a>
<a href=""mailto:a.m.b.e.rc.ro.be.r.t.s2.01@gmail.com"">a.m.b.e.rc.ro.be.r.t.s2.01@gmail.com</a>
<a href=""mailto:a.m.b.e.r.c.rob.e.r.ts.2.01@gmail.com"">a.m.b.e.r.c.rob.e.r.ts.2.01@gmail.com</a>
<a href=""mailto:a.mbercro.b.e.r.ts.2.01@gmail.com"">a.mbercro.b.e.r.ts.2.01@gmail.com</a>
<a href=""mailto:amb.e.r.crob.ert.s.20.1@gmail.com"">amb.e.r.crob.ert.s.20.1@gmail.com</a>
<a href=""mailto:am.b.er.cr.obert.s.201@gmail.com"">am.b.er.cr.obert.s.201@gmail.com</a>
<a href=""mailto:a.m.be.r.cr.o.b.e.r.ts20.1@gmail.com"">a.m.be.r.cr.o.b.e.r.ts20.1@gmail.com</a>
<a href=""mailto:a.mbe.rc.r.obe.rts.2.0.1@gmail.com"">a.mbe.rc.r.obe.rts.2.0.1@gmail.com</a>
<a href=""mailto:a.m.ber.cr.ob.e.rt.s.20.1@gmail.com"">a.m.ber.cr.ob.e.rt.s.20.1@gmail.com</a>
<a href=""mailto:am.b.e.r.cr.o.b.e.r.ts.2.0.1@gmail.com"">am.b.e.r.cr.o.b.e.r.ts.2.0.1@gmail.com</a>
<a href=""mailto:am.be.r.cr.o.be.r.ts.201@gmail.com"">am.be.r.cr.o.be.r.ts.201@gmail.com</a>
<a href=""mailto:a.mb.e.r.c.ro.b.e.rts.2.01@gmail.com"">a.mb.e.r.c.ro.b.e.rts.2.01@gmail.com</a>
<a href=""mailto:am.be.rcr.obe.rt.s2.0.1@gmail.com"">am.be.rcr.obe.rt.s2.0.1@gmail.com</a>
<a href=""mailto:a.mbe.rc.rob.er.t.s.20.1@gmail.com"">a.mbe.rc.rob.er.t.s.20.1@gmail.com</a>
<a href=""mailto:am.ber.cr.o.b.e.r.ts.2.01@gmail.com"">am.ber.cr.o.b.e.r.ts.2.01@gmail.com</a>
<a href=""mailto:a.m.b.e.rcr.ob.erts20.1@gmail.com"">a.m.b.e.rcr.ob.erts20.1@gmail.com</a>
<a href=""mailto:am.b.ercr.ob.erts.20.1@gmail.com"">am.b.ercr.ob.erts.20.1@gmail.com</a>
<a href=""mailto:a.mbe.rcrobert.s.2.0.1@gmail.com"">a.mbe.rcrobert.s.2.0.1@gmail.com</a>
<a href=""mailto:a.m.b.e.r.cr.ob.erts.2.01@gmail.com"">a.m.b.e.r.cr.ob.erts.2.01@gmail.com</a>
<a href=""mailto:amberc.ro.b.e.r.t.s.2.01@gmail.com"">amberc.ro.b.e.r.t.s.2.01@gmail.com</a>
<a href=""mailto:ambe.r.c.rob.e.r.ts.2.01@gmail.com"">ambe.r.c.rob.e.r.ts.2.01@gmail.com</a>
<a href=""mailto:am.ber.crobe.r.t.s20.1@gmail.com"">am.ber.crobe.r.t.s20.1@gmail.com</a>
<a href=""mailto:a.m.berc.ro.be.r.t.s.2.01@gmail.com"">a.m.berc.ro.be.r.t.s.2.01@gmail.com</a>
<a href=""mailto:a.m.b.e.rcrobe.rts.201@gmail.com"">a.m.b.e.rcrobe.rts.201@gmail.com</a>
<a href=""mailto:a.mbe.rcro.b.er.t.s201@gmail.com"">a.mbe.rcro.b.er.t.s201@gmail.com</a>
<a href=""mailto:am.be.r.cro.b.er.ts20.1@gmail.com"">am.be.r.cro.b.er.ts20.1@gmail.com</a>
<a href=""mailto:a.m.b.e.rcro.be.r.ts201@gmail.com"">a.m.b.e.rcro.be.r.ts201@gmail.com</a>
<a href=""mailto:am.be.rc.r.o.ber.t.s.2.0.1@gmail.com"">am.be.rc.r.o.ber.t.s.2.0.1@gmail.com</a>
<a href=""mailto:am.bercr.obe.r.t.s2.01@gmail.com"">am.bercr.obe.r.t.s2.01@gmail.com</a>
<a href=""mailto:a.mb.e.r.c.ro.b.e.r.t.s2.0.1@gmail.com"">a.mb.e.r.c.ro.b.e.r.t.s2.0.1@gmail.com</a>
<a href=""mailto:amb.ercr.ob.erts.2.0.1@gmail.com"">amb.ercr.ob.erts.2.0.1@gmail.com</a>
<a href=""mailto:a.mbercrob.e.r.t.s201@gmail.com"">a.mbercrob.e.r.t.s201@gmail.com</a>
<a href=""mailto:am.b.er.c.r.obe.rt.s.2.01@gmail.com"">am.b.er.c.r.obe.rt.s.2.01@gmail.com</a>
<a href=""mailto:a.m.be.r.c.r.o.berts2.0.1@gmail.com"">a.m.be.r.c.r.o.berts2.0.1@gmail.com</a>
<a href=""mailto:a.mb.e.rc.rob.er.ts2.0.1@gmail.com"">a.mb.e.rc.rob.er.ts2.0.1@gmail.com</a>
<a href=""mailto:am.be.r.c.r.o.b.erts.2.01@gmail.com"">am.be.r.c.r.o.b.erts.2.01@gmail.com</a>
<a href=""mailto:a.mber.c.r.ober.t.s20.1@gmail.com"">a.mber.c.r.ober.t.s20.1@gmail.com</a>
<a href=""mailto:a.m.be.r.cr.o.b.ert.s201@gmail.com"">a.m.be.r.cr.o.b.ert.s201@gmail.com</a>
<a href=""mailto:a.mb.er.cr.ob.erts.2.0.1@gmail.com"">a.mb.er.cr.ob.erts.2.0.1@gmail.com</a>
<a href=""mailto:a.m.b.ercro.ber.ts.20.1@gmail.com"">a.m.b.ercro.ber.ts.20.1@gmail.com</a>
<a href=""mailto:a.m.berc.rober.ts.2.01@gmail.com"">a.m.berc.rober.ts.2.01@gmail.com</a>
<a href=""mailto:a.m.b.e.r.c.ro.b.e.r.t.s.2.0.1@gmail.com"">a.m.b.e.r.c.ro.b.e.r.t.s.2.0.1@gmail.com</a>
<a href=""mailto:a.mb.e.rcr.o.b.e.r.ts2.01@gmail.com"">a.mb.e.rcr.o.b.e.r.ts2.01@gmail.com</a>
<a href=""mailto:a.m.be.r.cro.bert.s2.01@gmail.com"">a.m.be.r.cro.bert.s2.01@gmail.com</a>
<a href=""mailto:am.b.er.c.r.obe.r.t.s2.01@gmail.com"">am.b.er.c.r.obe.r.t.s2.01@gmail.com</a>
<a href=""mailto:am.b.er.c.r.o.b.e.rts20.1@gmail.com"">am.b.er.c.r.o.b.e.rts20.1@gmail.com</a>
<a href=""mailto:am.b.e.r.cro.bert.s201@gmail.com"">am.b.e.r.cro.bert.s201@gmail.com</a>
<a href=""mailto:a.mbe.r.cro.b.e.r.t.s20.1@gmail.com"">a.mbe.r.cro.b.e.r.t.s20.1@gmail.com</a>
<a href=""mailto:a.mb.erc.ro.be.r.ts20.1@gmail.com"">a.mb.erc.ro.be.r.ts20.1@gmail.com</a>
<a href=""mailto:a.mbe.r.crobe.rts2.0.1@gmail.com"">a.mbe.r.crobe.rts2.0.1@gmail.com</a>
<a href=""mailto:am.b.erc.ro.b.ert.s201@gmail.com"">am.b.erc.ro.b.ert.s201@gmail.com</a>
<a href=""mailto:a.mber.c.rob.er.ts201@gmail.com"">a.mber.c.rob.er.ts201@gmail.com</a>
<a href=""mailto:am.be.r.c.ro.b.er.t.s.2.01@gmail.com"">am.be.r.c.ro.b.er.t.s.2.01@gmail.com</a>
<a href=""mailto:a.mb.erc.r.ober.t.s.201@gmail.com"">a.mb.erc.r.ober.t.s.201@gmail.com</a>
<a href=""mailto:a.m.b.er.c.r.o.ber.t.s20.1@gmail.com"">a.m.b.er.c.r.o.ber.t.s20.1@gmail.com</a>
<a href=""mailto:a.m.ber.c.r.ob.e.rts.2.01@gmail.com"">a.m.ber.c.r.ob.e.rts.2.01@gmail.com</a>
<a href=""mailto:a.m.be.rc.r.ob.e.rts.20.1@gmail.com"">a.m.be.rc.r.ob.e.rts.20.1@gmail.com</a>
<a href=""mailto:amb.e.r.crob.er.ts201@gmail.com"">amb.e.r.crob.er.ts201@gmail.com</a>
<a href=""mailto:a.m.be.r.crober.t.s.2.0.1@gmail.com"">a.m.be.r.crober.t.s.2.0.1@gmail.com</a>
<a href=""mailto:a.m.b.e.rc.r.o.ber.t.s2.01@gmail.com"">a.m.b.e.rc.r.o.ber.t.s2.01@gmail.com</a>
<a href=""mailto:am.be.rcro.b.e.rts201@gmail.com"">am.be.rcro.b.e.rts201@gmail.com</a>
<a href=""mailto:a.mbe.r.c.r.o.b.er.t.s201@gmail.com"">a.mbe.r.c.r.o.b.er.t.s201@gmail.com</a>
<a href=""mailto:a.m.be.rcroberts.201@gmail.com"">a.m.be.rcroberts.201@gmail.com</a>
<a href=""mailto:am.b.erc.r.ober.ts2.0.1@gmail.com"">am.b.erc.r.ober.ts2.0.1@gmail.com</a>
<a href=""mailto:a.m.ber.c.rob.er.ts20.1@gmail.com"">a.m.ber.c.rob.er.ts20.1@gmail.com</a>
<a href=""mailto:a.mberc.rob.erts201@gmail.com"">a.mberc.rob.erts201@gmail.com</a>
<a href=""mailto:amb.ercr.o.berts201@gmail.com"">amb.ercr.o.berts201@gmail.com</a>
<a href=""mailto:am.be.rcro.ber.ts.20.1@gmail.com"">am.be.rcro.ber.ts.20.1@gmail.com</a>
<a href=""mailto:a.m.be.rcro.berts.2.01@gmail.com"">a.m.be.rcro.berts.2.01@gmail.com</a>
<a href=""mailto:amb.er.cr.ob.e.rt.s.201@gmail.com"">amb.er.cr.ob.e.rt.s.201@gmail.com</a>
<a href=""mailto:amb.e.r.cr.ob.ert.s.2.0.1@gmail.com"">amb.e.r.cr.ob.ert.s.2.0.1@gmail.com</a>
<a href=""mailto:amb.erc.rob.er.ts2.0.1@gmail.com"">amb.erc.rob.er.ts2.0.1@gmail.com</a>
<a href=""mailto:amb.ercr.obe.rts.2.01@gmail.com"">amb.ercr.obe.rts.2.01@gmail.com</a>
<a href=""mailto:a.mb.er.cr.obe.r.t.s20.1@gmail.com"">a.mb.er.cr.obe.r.t.s20.1@gmail.com</a>
<a href=""mailto:ambercr.o.b.ert.s.201@gmail.com"">ambercr.o.b.ert.s.201@gmail.com</a>
<a href=""mailto:amb.e.r.c.ro.ber.ts.20.1@gmail.com"">amb.e.r.c.ro.ber.ts.20.1@gmail.com</a>
<a href=""mailto:a.mberc.r.ober.t.s201@gmail.com"">a.mberc.r.ober.t.s201@gmail.com</a>
<a href=""mailto:ambe.r.cr.obe.rt.s201@gmail.com"">ambe.r.cr.obe.rt.s201@gmail.com</a>
<a href=""mailto:a.mb.e.rc.ro.ber.ts20.1@gmail.com"">a.mb.e.rc.ro.ber.ts20.1@gmail.com</a>
<a href=""mailto:a.mb.e.r.cr.o.b.e.r.ts.2.01@gmail.com"">a.mb.e.r.cr.o.b.e.r.ts.2.01@gmail.com</a>
<a href=""mailto:a.m.be.r.cr.o.b.e.rt.s.2.0.1@gmail.com"">a.m.be.r.cr.o.b.e.rt.s.2.0.1@gmail.com</a>
<a href=""mailto:a.m.be.r.c.ro.ber.t.s2.01@gmail.com"">a.m.be.r.c.ro.ber.t.s2.01@gmail.com</a>
<a href=""mailto:a.m.berc.ro.b.er.ts.201@gmail.com"">a.m.berc.ro.b.er.ts.201@gmail.com</a>
<a href=""mailto:am.bercro.b.er.t.s2.01@gmail.com"">am.bercro.b.er.t.s2.01@gmail.com</a>
<a href=""mailto:a.m.be.r.cr.obe.r.t.s.20.1@gmail.com"">a.m.be.r.cr.obe.r.t.s.20.1@gmail.com</a>
<a href=""mailto:a.mbe.r.cr.ob.erts20.1@gmail.com"">a.mbe.r.cr.ob.erts20.1@gmail.com</a>
<a href=""mailto:a.m.ber.c.r.o.b.e.r.ts.20.1@gmail.com"">a.m.ber.c.r.o.b.e.r.ts.20.1@gmail.com</a>
<a href=""mailto:am.b.e.r.c.ro.b.e.r.ts.2.01@gmail.com"">am.b.e.r.c.ro.b.e.r.ts.2.01@gmail.com</a>
<a href=""mailto:am.b.e.r.cr.o.b.er.t.s.2.0.1@gmail.com"">am.b.e.r.cr.o.b.er.t.s.2.0.1@gmail.com</a>
<a href=""mailto:am.b.erc.ro.b.e.rts2.0.1@gmail.com"">am.b.erc.ro.b.e.rts2.0.1@gmail.com</a>
<a href=""mailto:a.m.bercrober.ts2.0.1@gmail.com"">a.m.bercrober.ts2.0.1@gmail.com</a>
<a href=""mailto:ambe.rcro.be.rts.2.01@gmail.com"">ambe.rcro.be.rts.2.01@gmail.com</a>
<a href=""mailto:a.mber.c.r.ob.ert.s2.0.1@gmail.com"">a.mber.c.r.ob.ert.s2.0.1@gmail.com</a>
<a href=""mailto:am.b.er.cr.obe.r.ts.2.01@gmail.com"">am.b.er.cr.obe.r.ts.2.01@gmail.com</a>
<a href=""mailto:am.be.r.crobe.r.ts2.01@gmail.com"">am.be.r.crobe.r.ts2.01@gmail.com</a>
<a href=""mailto:am.ber.c.r.o.berts201@gmail.com"">am.ber.c.r.o.berts201@gmail.com</a>
<a href=""mailto:a.m.b.er.cr.obe.r.ts.20.1@gmail.com"">a.m.b.er.cr.obe.r.ts.20.1@gmail.com</a>
<a href=""mailto:a.mberc.r.o.b.e.rt.s201@gmail.com"">a.mberc.r.o.b.e.rt.s201@gmail.com</a>
<a href=""mailto:a.m.b.e.r.crobe.r.t.s20.1@gmail.com"">a.m.b.e.r.crobe.r.t.s20.1@gmail.com</a>
<a href=""mailto:a.m.ber.cro.b.er.t.s2.0.1@gmail.com"">a.m.ber.cro.b.er.t.s2.0.1@gmail.com</a>
<a href=""mailto:a.m.ber.crobe.rt.s.2.01@gmail.com"">a.m.ber.crobe.rt.s.2.01@gmail.com</a>
<a href=""mailto:am.b.ercrob.ert.s2.0.1@gmail.com"">am.b.ercrob.ert.s2.0.1@gmail.com</a>
<a href=""mailto:a.mber.cr.o.be.rt.s.2.01@gmail.com"">a.mber.cr.o.be.rt.s.2.01@gmail.com</a>
<a href=""mailto:am.be.r.c.ro.be.r.t.s.2.01@gmail.com"">am.be.r.c.ro.be.r.t.s.2.01@gmail.com</a>
<a href=""mailto:ambe.r.c.r.o.b.er.ts.2.01@gmail.com"">ambe.r.c.r.o.b.er.ts.2.01@gmail.com</a>
<a href=""mailto:amb.e.r.cr.oberts2.01@gmail.com"">amb.e.r.cr.oberts2.01@gmail.com</a>
<a href=""mailto:amber.crob.e.rts201@gmail.com"">amber.crob.e.rts201@gmail.com</a>
<a href=""mailto:a.mbe.r.cro.b.e.r.ts2.01@gmail.com"">a.mbe.r.cro.b.e.r.ts2.01@gmail.com</a>
<a href=""mailto:am.b.er.c.ro.b.e.r.t.s.20.1@gmail.com"">am.b.er.c.ro.b.e.r.t.s.20.1@gmail.com</a>
<a href=""mailto:amb.e.r.cr.ober.ts201@gmail.com"">amb.e.r.cr.ober.ts201@gmail.com</a>
<a href=""mailto:amb.erc.r.obert.s2.0.1@gmail.com"">amb.erc.r.obert.s2.0.1@gmail.com</a>
<a href=""mailto:am.b.er.c.r.ob.e.r.ts201@gmail.com"">am.b.er.c.r.ob.e.r.ts201@gmail.com</a>
<a href=""mailto:am.be.rc.robe.rts201@gmail.com"">am.be.rc.robe.rts201@gmail.com</a>
<a href=""mailto:a.mb.e.r.c.r.ober.t.s.201@gmail.com"">a.mb.e.r.c.r.ober.t.s.201@gmail.com</a>
<a href=""mailto:am.b.e.r.crob.e.r.t.s201@gmail.com"">am.b.e.r.crob.e.r.t.s201@gmail.com</a>
<a href=""mailto:a.mb.er.c.r.o.ber.t.s2.0.1@gmail.com"">a.mb.er.c.r.o.ber.t.s2.0.1@gmail.com</a>
<a href=""mailto:amb.e.rcr.ober.ts.201@gmail.com"">amb.e.rcr.ober.ts.201@gmail.com</a>
<a href=""mailto:amber.crob.e.rts2.01@gmail.com"">amber.crob.e.rts2.01@gmail.com</a>
<a href=""mailto:amber.c.r.o.b.e.rt.s.201@gmail.com"">amber.c.r.o.b.e.rt.s.201@gmail.com</a>
<a href=""mailto:a.mb.ercr.o.be.rt.s2.01@gmail.com"">a.mb.ercr.o.be.rt.s2.01@gmail.com</a>
<a href=""mailto:am.b.er.cro.be.r.t.s201@gmail.com"">am.b.er.cro.be.r.t.s201@gmail.com</a>
<a href=""mailto:am.ber.c.r.obert.s.2.0.1@gmail.com"">am.ber.c.r.obert.s.2.0.1@gmail.com</a>
<a href=""mailto:a.m.b.er.cr.ob.e.rts.2.01@gmail.com"">a.m.b.er.cr.ob.e.rts.2.01@gmail.com</a>
<a href=""mailto:a.mbe.rcr.ob.ert.s.201@gmail.com"">a.mbe.rcr.ob.ert.s.201@gmail.com</a>
<a href=""mailto:a.mb.er.c.ro.b.e.r.ts.201@gmail.com"">a.mb.er.c.ro.b.e.r.ts.201@gmail.com</a>
<a href=""mailto:a.m.be.r.c.ro.b.e.r.ts201@gmail.com"">a.m.be.r.c.ro.b.e.r.ts201@gmail.com</a>
<a href=""mailto:ambe.rcrob.e.r.t.s2.01@gmail.com"">ambe.rcrob.e.r.t.s2.01@gmail.com</a>
<a href=""mailto:a.m.be.rc.r.obe.r.ts20.1@gmail.com"">a.m.be.rc.r.obe.r.ts20.1@gmail.com</a>
<a href=""mailto:amb.e.rcr.o.be.rt.s.201@gmail.com"">amb.e.rcr.o.be.rt.s.201@gmail.com</a>
<a href=""mailto:a.mb.er.cro.ber.t.s2.01@gmail.com"">a.mb.er.cro.ber.t.s2.01@gmail.com</a>
<a href=""mailto:a.mb.ercrob.ert.s2.01@gmail.com"">a.mb.ercrob.ert.s2.01@gmail.com</a>
<a href=""mailto:am.b.er.cr.o.be.r.t.s2.01@gmail.com"">am.b.er.cr.o.be.r.t.s2.01@gmail.com</a>
<a href=""mailto:a.mb.er.cro.b.e.r.t.s.201@gmail.com"">a.mb.er.cro.b.e.r.t.s.201@gmail.com</a>
<a href=""mailto:am.bercr.ober.ts.2.01@gmail.com"">am.bercr.ober.ts.2.01@gmail.com</a>
<a href=""mailto:ambe.rcro.bert.s201@gmail.com"">ambe.rcro.bert.s201@gmail.com</a>
<a href=""mailto:a.m.b.erc.r.o.be.r.ts2.0.1@gmail.com"">a.m.b.erc.r.o.be.r.ts2.0.1@gmail.com</a>
<a href=""mailto:am.ber.crobe.r.ts2.0.1@gmail.com"">am.ber.crobe.r.ts2.0.1@gmail.com</a>
<a href=""mailto:a.m.b.e.rcro.b.ert.s.2.01@gmail.com"">a.m.b.e.rcro.b.ert.s.2.01@gmail.com</a>
<a href=""mailto:a.mb.er.c.r.o.b.e.r.t.s.201@gmail.com"">a.mb.er.c.r.o.b.e.r.t.s.201@gmail.com</a>
<a href=""mailto:a.mber.c.robe.rts2.01@gmail.com"">a.mber.c.robe.rts2.01@gmail.com</a>
<a href=""mailto:a.mb.e.rcro.b.e.rt.s201@gmail.com"">a.mb.e.rcro.b.e.rt.s201@gmail.com</a>
<a href=""mailto:a.m.berc.ro.be.rts.20.1@gmail.com"">a.m.berc.ro.be.rts.20.1@gmail.com</a>
<a href=""mailto:a.mb.ercrob.ert.s.201@gmail.com"">a.mb.ercrob.ert.s.201@gmail.com</a>
<a href=""mailto:a.mb.e.rc.ro.b.e.rt.s.201@gmail.com"">a.mb.e.rc.ro.b.e.rt.s.201@gmail.com</a>
<a href=""mailto:amb.ercr.ober.t.s201@gmail.com"">amb.ercr.ober.t.s201@gmail.com</a>
<a href=""mailto:a.mbe.r.cr.o.be.r.t.s2.01@gmail.com"">a.mbe.r.cr.o.be.r.t.s2.01@gmail.com</a>
<a href=""mailto:amb.e.rcr.ob.ert.s.20.1@gmail.com"">amb.e.rcr.ob.ert.s.20.1@gmail.com</a>
<a href=""mailto:a.mb.ercr.ob.e.r.ts20.1@gmail.com"">a.mb.ercr.ob.e.r.ts20.1@gmail.com</a>
<a href=""mailto:a.mb.e.r.c.ro.b.e.r.t.s.2.0.1@gmail.com"">a.mb.e.r.c.ro.b.e.r.t.s.2.0.1@gmail.com</a>
<a href=""mailto:ambe.rc.rober.ts2.0.1@gmail.com"">ambe.rc.rober.ts2.0.1@gmail.com</a>
<a href=""mailto:a.mb.er.c.r.o.b.e.r.ts20.1@gmail.com"">a.mb.er.c.r.o.b.e.r.ts20.1@gmail.com</a>
<a href=""mailto:amb.e.rcr.o.ber.ts2.0.1@gmail.com"">amb.e.rcr.o.ber.ts2.0.1@gmail.com</a>
<a href=""mailto:amber.c.robert.s.2.01@gmail.com"">amber.c.robert.s.2.01@gmail.com</a>
<a href=""mailto:a.m.b.erc.ro.b.er.t.s.2.0.1@gmail.com"">a.m.b.erc.ro.b.er.t.s.2.0.1@gmail.com</a>
<a href=""mailto:am.b.er.crob.e.r.ts.201@gmail.com"">am.b.er.crob.e.r.ts.201@gmail.com</a>
<a href=""mailto:a.m.b.ercrob.e.rt.s2.01@gmail.com"">a.m.b.ercrob.e.rt.s2.01@gmail.com</a>
<a href=""mailto:a.m.b.er.crob.ert.s2.0.1@gmail.com"">a.m.b.er.crob.ert.s2.0.1@gmail.com</a>
<a href=""mailto:a.mberc.r.ob.er.ts.2.0.1@gmail.com"">a.mberc.r.ob.er.ts.2.0.1@gmail.com</a>
<a href=""mailto:am.ber.c.r.o.be.r.t.s.20.1@gmail.com"">am.ber.c.r.o.be.r.t.s.20.1@gmail.com</a>
<a href=""mailto:am.bercr.ob.er.ts.201@gmail.com"">am.bercr.ob.er.ts.201@gmail.com</a>
<a href=""mailto:amb.e.r.c.rob.e.rt.s.20.1@gmail.com"">amb.e.r.c.rob.e.rt.s.20.1@gmail.com</a>
<a href=""mailto:am.ber.c.r.o.b.e.r.t.s.2.01@gmail.com"">am.ber.c.r.o.b.e.r.t.s.2.01@gmail.com</a>
<a href=""mailto:am.be.rc.r.ob.er.ts.20.1@gmail.com"">am.be.rc.r.ob.er.ts.20.1@gmail.com</a>
<a href=""mailto:am.b.e.rcro.b.e.rt.s20.1@gmail.com"">am.b.e.rcro.b.e.rt.s20.1@gmail.com</a>
<a href=""mailto:am.b.ercr.obe.rt.s.20.1@gmail.com"">am.b.ercr.obe.rt.s.20.1@gmail.com</a>
<a href=""mailto:a.mb.er.c.r.o.b.e.r.t.s2.01@gmail.com"">a.mb.er.c.r.o.b.e.r.t.s2.01@gmail.com</a>
<a href=""mailto:amb.er.c.r.o.b.e.rts2.0.1@gmail.com"">amb.er.c.r.o.b.e.rts2.0.1@gmail.com</a>
<a href=""mailto:ambe.rcro.b.ert.s.20.1@gmail.com"">ambe.rcro.b.ert.s.20.1@gmail.com</a>
<a href=""mailto:a.mbe.r.crob.erts201@gmail.com"">a.mbe.r.crob.erts201@gmail.com</a>
<a href=""mailto:a.mber.c.ro.ber.ts.20.1@gmail.com"">a.mber.c.ro.ber.ts.20.1@gmail.com</a>
<a href=""mailto:a.m.be.r.cr.obert.s201@gmail.com"">a.m.be.r.cr.obert.s201@gmail.com</a>
<a href=""mailto:am.b.e.rcr.ob.e.rt.s20.1@gmail.com"">am.b.e.rcr.ob.e.rt.s20.1@gmail.com</a>
<a href=""mailto:a.m.b.e.rcr.o.b.erts.201@gmail.com"">a.m.b.e.rcr.o.b.erts.201@gmail.com</a>
<a href=""mailto:am.ber.c.r.ob.er.ts.201@gmail.com"">am.ber.c.r.ob.er.ts.201@gmail.com</a>
<a href=""mailto:amb.erc.r.o.be.rt.s201@gmail.com"">amb.erc.r.o.be.rt.s201@gmail.com</a>
<a href=""mailto:a.mb.erc.robe.rts2.0.1@gmail.com"">a.mb.erc.robe.rts2.0.1@gmail.com</a>
<a href=""mailto:am.ber.c.r.o.b.er.t.s2.0.1@gmail.com"">am.ber.c.r.o.b.er.t.s2.0.1@gmail.com</a>
<a href=""mailto:a.m.ber.c.ro.bert.s20.1@gmail.com"">a.m.ber.c.ro.bert.s20.1@gmail.com</a>
<a href=""mailto:am.ber.c.robert.s2.0.1@gmail.com"">am.ber.c.robert.s2.0.1@gmail.com</a>
<a href=""mailto:am.b.e.rcro.be.r.ts.2.01@gmail.com"">am.b.e.rcro.be.r.ts.2.01@gmail.com</a>
<a href=""mailto:amber.c.r.o.b.erts.20.1@gmail.com"">amber.c.r.o.b.erts.20.1@gmail.com</a>
<a href=""mailto:a.mbe.rc.r.obe.rt.s20.1@gmail.com"">a.mbe.rc.r.obe.rt.s20.1@gmail.com</a>
<a href=""mailto:am.b.ercrob.erts.201@gmail.com"">am.b.ercrob.erts.201@gmail.com</a>
<a href=""mailto:am.be.r.cr.ob.e.r.t.s2.01@gmail.com"">am.be.r.cr.ob.e.r.t.s2.01@gmail.com</a>
<a href=""mailto:amb.e.r.cr.o.b.er.t.s2.0.1@gmail.com"">amb.e.r.cr.o.b.er.t.s2.0.1@gmail.com</a>
<a href=""mailto:a.mb.e.r.cr.ob.erts.20.1@gmail.com"">a.mb.e.r.cr.ob.erts.20.1@gmail.com</a>
<a href=""mailto:ambe.r.c.robe.r.ts2.0.1@gmail.com"">ambe.r.c.robe.r.ts2.0.1@gmail.com</a>
<a href=""mailto:am.b.ercr.o.b.er.t.s20.1@gmail.com"">am.b.ercr.o.b.er.t.s20.1@gmail.com</a>
<a href=""mailto:amb.e.rc.ro.be.r.ts20.1@gmail.com"">amb.e.rc.ro.be.r.ts20.1@gmail.com</a>
<a href=""mailto:am.be.r.c.ro.be.rt.s2.0.1@gmail.com"">am.be.r.c.ro.be.rt.s2.0.1@gmail.com</a>
<a href=""mailto:rashidinvestmentt@gmail.com"">rashidinvestmentt@gmail.com</a>
<a href=""mailto:r.a.s.h.i.d.i.n.ve.s.t.me.ntt@gmail.com"">r.a.s.h.i.d.i.n.ve.s.t.me.ntt@gmail.com</a>
<a href=""mailto:r.a.s.hidi.n.v.e.st.mentt@gmail.com"">r.a.s.hidi.n.v.e.st.mentt@gmail.com</a>
<a href=""mailto:ras.h.id.i.nv.est.m.ent.t@gmail.com"">ras.h.id.i.nv.est.m.ent.t@gmail.com</a>
<a href=""mailto:ras.h.id.in.v.e.st.m.e.n.tt@gmail.com"">ras.h.id.in.v.e.st.m.e.n.tt@gmail.com</a>
<a href=""mailto:r.ashid.in.ves.t.men.t.t@gmail.com"">r.ashid.in.ves.t.men.t.t@gmail.com</a>
<a href=""mailto:r.as.h.i.di.n.vestment.t@gmail.com"">r.as.h.i.di.n.vestment.t@gmail.com</a>
<a href=""mailto:r.a.shi.dinvest.m.en.t.t@gmail.com"">r.a.shi.dinvest.m.en.t.t@gmail.com</a>
<a href=""mailto:r.as.h.i.din.ves.tm.en.tt@gmail.com"">r.as.h.i.din.ves.tm.en.tt@gmail.com</a>
<a href=""mailto:rashid.i.n.v.e.stm.ent.t@gmail.com"">rashid.i.n.v.e.stm.ent.t@gmail.com</a>
<a href=""mailto:ras.hidi.nv.e.s.tm.e.n.tt@gmail.com"">ras.hidi.nv.e.s.tm.e.n.tt@gmail.com</a>
<a href=""mailto:r.a.shi.dinv.est.m.e.n.tt@gmail.com"">r.a.shi.dinv.est.m.e.n.tt@gmail.com</a>
<a href=""mailto:r.as.h.i.di.nve.s.tm.entt@gmail.com"">r.as.h.i.di.nve.s.tm.entt@gmail.com</a>
<a href=""mailto:r.a.shidi.n.ve.s.t.m.entt@gmail.com"">r.a.shidi.n.ve.s.t.m.entt@gmail.com</a>
<a href=""mailto:r.a.shi.d.i.nves.tm.e.n.tt@gmail.com"">r.a.shi.d.i.nves.tm.e.n.tt@gmail.com</a>
<a href=""mailto:ra.s.h.id.in.ves.t.me.ntt@gmail.com"">ra.s.h.id.in.ves.t.me.ntt@gmail.com</a>
<a href=""mailto:r.a.shid.i.nve.st.m.en.tt@gmail.com"">r.a.shid.i.nve.st.m.en.tt@gmail.com</a>
<a href=""mailto:ra.s.hi.dinves.t.me.ntt@gmail.com"">ra.s.hi.dinves.t.me.ntt@gmail.com</a>
<a href=""mailto:r.a.s.hi.din.ve.stm.entt@gmail.com"">r.a.s.hi.din.ve.stm.entt@gmail.com</a>
<a href=""mailto:r.a.shid.i.n.v.e.st.m.ent.t@gmail.com"">r.a.shid.i.n.v.e.st.m.ent.t@gmail.com</a>
<a href=""mailto:r.as.hidin.v.e.stm.en.tt@gmail.com"">r.as.hidin.v.e.stm.en.tt@gmail.com</a>
<a href=""mailto:r.a.shi.di.n.v.e.st.me.n.tt@gmail.com"">r.a.shi.di.n.v.e.st.me.n.tt@gmail.com</a>
<a href=""mailto:ra.s.h.i.d.in.ve.stme.n.tt@gmail.com"">ra.s.h.i.d.in.ve.stme.n.tt@gmail.com</a>
<a href=""mailto:r.a.shi.d.inve.st.me.n.t.t@gmail.com"">r.a.shi.d.inve.st.me.n.t.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.din.ve.stm.e.ntt@gmail.com"">ra.s.h.i.din.ve.stm.e.ntt@gmail.com</a>
<a href=""mailto:r.a.sh.id.i.nv.est.m.e.ntt@gmail.com"">r.a.sh.id.i.nv.est.m.e.ntt@gmail.com</a>
<a href=""mailto:rashidinv.e.s.t.m.e.nt.t@gmail.com"">rashidinv.e.s.t.m.e.nt.t@gmail.com</a>
<a href=""mailto:ra.s.hi.d.i.nves.tme.n.t.t@gmail.com"">ra.s.hi.d.i.nves.tme.n.t.t@gmail.com</a>
<a href=""mailto:r.as.hi.d.in.v.e.s.t.me.n.t.t@gmail.com"">r.as.hi.d.in.v.e.s.t.me.n.t.t@gmail.com</a>
<a href=""mailto:r.a.sh.id.in.ve.s.t.m.entt@gmail.com"">r.a.sh.id.in.ve.s.t.m.entt@gmail.com</a>
<a href=""mailto:ra.sh.idi.nv.est.me.ntt@gmail.com"">ra.sh.idi.nv.est.me.ntt@gmail.com</a>
<a href=""mailto:ras.hidi.n.ve.st.m.en.tt@gmail.com"">ras.hidi.n.ve.st.m.en.tt@gmail.com</a>
<a href=""mailto:r.ash.id.i.n.ves.tm.entt@gmail.com"">r.ash.id.i.n.ves.tm.entt@gmail.com</a>
<a href=""mailto:ra.sh.i.d.investm.ent.t@gmail.com"">ra.sh.i.d.investm.ent.t@gmail.com</a>
<a href=""mailto:r.a.sh.id.i.nv.es.tmen.tt@gmail.com"">r.a.sh.id.i.nv.es.tmen.tt@gmail.com</a>
<a href=""mailto:rash.i.d.inve.s.t.me.ntt@gmail.com"">rash.i.d.inve.s.t.me.ntt@gmail.com</a>
<a href=""mailto:ra.shi.d.in.v.es.t.m.e.ntt@gmail.com"">ra.shi.d.in.v.es.t.m.e.ntt@gmail.com</a>
<a href=""mailto:ras.h.id.inves.tm.ent.t@gmail.com"">ras.h.id.inves.tm.ent.t@gmail.com</a>
<a href=""mailto:r.as.hi.d.i.nves.tm.en.t.t@gmail.com"">r.as.hi.d.i.nves.tm.en.t.t@gmail.com</a>
<a href=""mailto:r.a.s.hi.d.i.n.v.e.stm.e.nt.t@gmail.com"">r.a.s.hi.d.i.n.v.e.stm.e.nt.t@gmail.com</a>
<a href=""mailto:ra.shid.i.nv.e.s.tme.ntt@gmail.com"">ra.shid.i.nv.e.s.tme.ntt@gmail.com</a>
<a href=""mailto:r.a.s.h.idin.v.est.m.entt@gmail.com"">r.a.s.h.idin.v.est.m.entt@gmail.com</a>
<a href=""mailto:r.a.shidi.n.v.es.t.m.e.nt.t@gmail.com"">r.a.shidi.n.v.es.t.m.e.nt.t@gmail.com</a>
<a href=""mailto:r.ash.idinv.est.me.n.tt@gmail.com"">r.ash.idinv.est.me.n.tt@gmail.com</a>
<a href=""mailto:ra.s.h.i.di.nvestm.e.n.t.t@gmail.com"">ra.s.h.i.di.nvestm.e.n.t.t@gmail.com</a>
<a href=""mailto:r.ash.id.i.nv.e.s.t.me.ntt@gmail.com"">r.ash.id.i.nv.e.s.t.me.ntt@gmail.com</a>
<a href=""mailto:ra.s.hid.i.n.ves.t.m.e.nt.t@gmail.com"">ra.s.hid.i.n.ves.t.m.e.nt.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.di.nvestme.nt.t@gmail.com"">ra.s.h.i.di.nvestme.nt.t@gmail.com</a>
<a href=""mailto:ras.h.i.dinve.s.tm.en.tt@gmail.com"">ras.h.i.dinve.s.tm.en.tt@gmail.com</a>
<a href=""mailto:rash.idi.n.v.e.stmen.tt@gmail.com"">rash.idi.n.v.e.stmen.tt@gmail.com</a>
<a href=""mailto:r.as.hi.din.ve.st.m.en.t.t@gmail.com"">r.as.hi.din.ve.st.m.en.t.t@gmail.com</a>
<a href=""mailto:rash.idi.nv.e.st.mentt@gmail.com"">rash.idi.nv.e.st.mentt@gmail.com</a>
<a href=""mailto:r.a.s.hi.d.i.nve.s.tm.ent.t@gmail.com"">r.a.s.hi.d.i.nve.s.tm.ent.t@gmail.com</a>
<a href=""mailto:ra.shi.d.inve.s.tm.ent.t@gmail.com"">ra.shi.d.inve.s.tm.ent.t@gmail.com</a>
<a href=""mailto:ras.h.id.invest.me.nt.t@gmail.com"">ras.h.id.invest.me.nt.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.dinve.s.tm.en.t.t@gmail.com"">ra.s.h.i.dinve.s.tm.en.t.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.d.i.n.ves.tm.entt@gmail.com"">ra.s.h.i.d.i.n.ves.tm.entt@gmail.com</a>
<a href=""mailto:ras.h.i.d.i.n.v.es.t.m.e.n.t.t@gmail.com"">ras.h.i.d.i.n.v.es.t.m.e.n.t.t@gmail.com</a>
<a href=""mailto:r.a.s.hi.d.i.nv.est.m.en.t.t@gmail.com"">r.a.s.hi.d.i.nv.est.m.en.t.t@gmail.com</a>
<a href=""mailto:ras.hi.d.in.v.es.t.me.nt.t@gmail.com"">ras.hi.d.in.v.es.t.me.nt.t@gmail.com</a>
<a href=""mailto:r.a.sh.id.inv.e.s.tm.e.n.tt@gmail.com"">r.a.sh.id.inv.e.s.tm.e.n.tt@gmail.com</a>
<a href=""mailto:ra.s.h.idi.nves.tm.e.nt.t@gmail.com"">ra.s.h.idi.nves.tm.e.nt.t@gmail.com</a>
<a href=""mailto:ras.hi.dinv.estm.entt@gmail.com"">ras.hi.dinv.estm.entt@gmail.com</a>
<a href=""mailto:r.ashi.d.inv.e.st.m.en.tt@gmail.com"">r.ashi.d.inv.e.st.m.en.tt@gmail.com</a>
<a href=""mailto:r.as.hidin.vestme.n.t.t@gmail.com"">r.as.hidin.vestme.n.t.t@gmail.com</a>
<a href=""mailto:ras.hidinve.s.t.m.e.ntt@gmail.com"">ras.hidinve.s.t.m.e.ntt@gmail.com</a>
<a href=""mailto:r.a.s.hid.in.v.e.stm.entt@gmail.com"">r.a.s.hid.in.v.e.stm.entt@gmail.com</a>
<a href=""mailto:r.as.h.i.d.i.n.vest.mentt@gmail.com"">r.as.h.i.d.i.n.vest.mentt@gmail.com</a>
<a href=""mailto:r.a.s.hid.investm.e.nt.t@gmail.com"">r.a.s.hid.investm.e.nt.t@gmail.com</a>
<a href=""mailto:r.as.hi.d.i.nve.st.m.e.n.tt@gmail.com"">r.as.hi.d.i.nve.st.m.e.n.tt@gmail.com</a>
<a href=""mailto:r.a.s.hid.i.nves.tm.e.ntt@gmail.com"">r.a.s.hid.i.nves.tm.e.ntt@gmail.com</a>
<a href=""mailto:r.a.sh.i.din.v.es.tme.n.tt@gmail.com"">r.a.sh.i.din.v.es.tme.n.tt@gmail.com</a>
<a href=""mailto:ra.s.hi.di.n.ves.t.me.n.t.t@gmail.com"">ra.s.hi.di.n.ves.t.me.n.t.t@gmail.com</a>
<a href=""mailto:ra.sh.id.i.n.ve.s.tm.e.nt.t@gmail.com"">ra.sh.id.i.n.ve.s.tm.e.nt.t@gmail.com</a>
<a href=""mailto:r.ash.idi.n.vestme.n.tt@gmail.com"">r.ash.idi.n.vestme.n.tt@gmail.com</a>
<a href=""mailto:ras.hi.d.i.nv.es.tm.en.t.t@gmail.com"">ras.hi.d.i.nv.es.tm.en.t.t@gmail.com</a>
<a href=""mailto:rash.i.di.n.ve.stme.n.tt@gmail.com"">rash.i.di.n.ve.stme.n.tt@gmail.com</a>
<a href=""mailto:r.ashid.i.n.v.e.s.tmen.tt@gmail.com"">r.ashid.i.n.v.e.s.tmen.tt@gmail.com</a>
<a href=""mailto:r.ashidin.ves.t.me.n.tt@gmail.com"">r.ashidin.ves.t.me.n.tt@gmail.com</a>
<a href=""mailto:ra.sh.idin.ve.stme.nt.t@gmail.com"">ra.sh.idin.ve.stme.nt.t@gmail.com</a>
<a href=""mailto:r.ash.idi.n.v.e.stmentt@gmail.com"">r.ash.idi.n.v.e.stmentt@gmail.com</a>
<a href=""mailto:ras.hi.di.n.v.e.st.men.tt@gmail.com"">ras.hi.di.n.v.e.st.men.tt@gmail.com</a>
<a href=""mailto:ra.s.hi.d.in.vestm.e.nt.t@gmail.com"">ra.s.hi.d.in.vestm.e.nt.t@gmail.com</a>
<a href=""mailto:ra.s.hi.d.inve.st.m.ent.t@gmail.com"">ra.s.hi.d.inve.st.m.ent.t@gmail.com</a>
<a href=""mailto:ra.s.h.idinves.tm.e.n.tt@gmail.com"">ra.s.h.idinves.tm.e.n.tt@gmail.com</a>
<a href=""mailto:r.ashi.d.i.nv.est.me.ntt@gmail.com"">r.ashi.d.i.nv.est.me.ntt@gmail.com</a>
<a href=""mailto:r.a.sh.i.dinv.e.stment.t@gmail.com"">r.a.sh.i.dinv.e.stment.t@gmail.com</a>
<a href=""mailto:ra.s.hidin.ve.s.tm.en.t.t@gmail.com"">ra.s.hidin.ve.s.tm.en.t.t@gmail.com</a>
<a href=""mailto:ra.s.hi.di.nv.est.mentt@gmail.com"">ra.s.hi.di.nv.est.mentt@gmail.com</a>
<a href=""mailto:rash.idinve.st.me.nt.t@gmail.com"">rash.idinve.st.me.nt.t@gmail.com</a>
<a href=""mailto:rashid.inves.tment.t@gmail.com"">rashid.inves.tment.t@gmail.com</a>
<a href=""mailto:ras.h.i.dinve.s.t.m.e.n.t.t@gmail.com"">ras.h.i.dinve.s.t.m.e.n.t.t@gmail.com</a>
<a href=""mailto:r.a.sh.id.i.nv.e.s.t.me.ntt@gmail.com"">r.a.sh.id.i.nv.e.s.t.me.ntt@gmail.com</a>
<a href=""mailto:ra.s.hid.investm.en.t.t@gmail.com"">ra.s.hid.investm.en.t.t@gmail.com</a>
<a href=""mailto:r.a.s.hi.d.i.n.v.e.st.me.n.tt@gmail.com"">r.a.s.hi.d.i.n.v.e.st.me.n.tt@gmail.com</a>
<a href=""mailto:r.ash.i.d.i.nve.stme.n.t.t@gmail.com"">r.ash.i.d.i.nve.stme.n.t.t@gmail.com</a>
<a href=""mailto:ra.s.hi.din.v.e.s.tme.nt.t@gmail.com"">ra.s.hi.din.v.e.s.tme.nt.t@gmail.com</a>
<a href=""mailto:r.as.hidi.n.v.est.m.e.n.t.t@gmail.com"">r.as.hidi.n.v.est.m.e.n.t.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.din.ves.t.me.n.t.t@gmail.com"">ra.s.h.i.din.ves.t.me.n.t.t@gmail.com</a>
<a href=""mailto:ras.hid.i.n.v.e.stme.n.tt@gmail.com"">ras.hid.i.n.v.e.stme.n.tt@gmail.com</a>
<a href=""mailto:ras.h.id.in.v.e.s.t.me.nt.t@gmail.com"">ras.h.id.in.v.e.s.t.me.nt.t@gmail.com</a>
<a href=""mailto:r.a.s.h.i.d.in.ves.tm.en.t.t@gmail.com"">r.a.s.h.i.d.in.ves.tm.en.t.t@gmail.com</a>
<a href=""mailto:ras.h.idi.n.vestm.e.ntt@gmail.com"">ras.h.idi.n.vestm.e.ntt@gmail.com</a>
<a href=""mailto:r.ashi.d.in.ves.tm.e.ntt@gmail.com"">r.ashi.d.in.ves.tm.e.ntt@gmail.com</a>
<a href=""mailto:ra.sh.idi.n.vest.m.e.n.tt@gmail.com"">ra.sh.idi.n.vest.m.e.n.tt@gmail.com</a>
<a href=""mailto:r.ash.id.in.v.es.t.me.n.t.t@gmail.com"">r.ash.id.in.v.es.t.me.n.t.t@gmail.com</a>
<a href=""mailto:ra.s.h.id.i.nv.estme.n.t.t@gmail.com"">ra.s.h.id.i.nv.estme.n.t.t@gmail.com</a>
<a href=""mailto:rashi.di.n.vestme.nt.t@gmail.com"">rashi.di.n.vestme.nt.t@gmail.com</a>
<a href=""mailto:ra.sh.idi.n.v.es.tment.t@gmail.com"">ra.sh.idi.n.v.es.tment.t@gmail.com</a>
<a href=""mailto:r.a.s.h.id.inv.est.m.ent.t@gmail.com"">r.a.s.h.id.inv.est.m.ent.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.d.i.n.ve.st.me.ntt@gmail.com"">ra.s.h.i.d.i.n.ve.st.me.ntt@gmail.com</a>
<a href=""mailto:r.a.s.h.id.inve.s.t.m.e.nt.t@gmail.com"">r.a.s.h.id.inve.s.t.m.e.nt.t@gmail.com</a>
<a href=""mailto:r.a.s.h.id.in.vestmentt@gmail.com"">r.a.s.h.id.in.vestmentt@gmail.com</a>
<a href=""mailto:r.ashidin.v.est.me.ntt@gmail.com"">r.ashidin.v.est.me.ntt@gmail.com</a>
<a href=""mailto:ras.h.idi.n.ve.st.me.n.t.t@gmail.com"">ras.h.idi.n.ve.st.me.n.t.t@gmail.com</a>
<a href=""mailto:r.a.sh.i.d.i.n.vest.me.nt.t@gmail.com"">r.a.sh.i.d.i.n.vest.me.nt.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.dinv.es.tm.en.t.t@gmail.com"">ra.s.h.i.dinv.es.tm.en.t.t@gmail.com</a>
<a href=""mailto:r.as.hi.din.vestme.ntt@gmail.com"">r.as.hi.din.vestme.ntt@gmail.com</a>
<a href=""mailto:ra.s.hi.dinv.e.stme.nt.t@gmail.com"">ra.s.hi.dinv.e.stme.nt.t@gmail.com</a>
<a href=""mailto:ra.s.h.id.inv.est.m.e.nt.t@gmail.com"">ra.s.h.id.inv.est.m.e.nt.t@gmail.com</a>
<a href=""mailto:r.ashi.di.nv.es.tmen.tt@gmail.com"">r.ashi.di.nv.es.tmen.tt@gmail.com</a>
<a href=""mailto:r.a.s.hid.i.n.v.est.m.en.tt@gmail.com"">r.a.s.hid.i.n.v.est.m.en.tt@gmail.com</a>
<a href=""mailto:r.ashid.in.ve.st.me.nt.t@gmail.com"">r.ashid.in.ve.st.me.nt.t@gmail.com</a>
<a href=""mailto:r.ashi.d.inve.stme.n.t.t@gmail.com"">r.ashi.d.inve.stme.n.t.t@gmail.com</a>
<a href=""mailto:r.as.hid.i.n.ve.stme.nt.t@gmail.com"">r.as.hid.i.n.ve.stme.nt.t@gmail.com</a>
<a href=""mailto:r.as.hidinv.estm.en.t.t@gmail.com"">r.as.hidinv.estm.en.t.t@gmail.com</a>
<a href=""mailto:r.a.s.h.i.di.nv.est.m.e.n.t.t@gmail.com"">r.a.s.h.i.di.nv.est.m.e.n.t.t@gmail.com</a>
<a href=""mailto:ra.sh.i.d.i.nve.st.m.e.nt.t@gmail.com"">ra.sh.i.d.i.nve.st.m.e.nt.t@gmail.com</a>
<a href=""mailto:r.a.shi.din.vestme.n.tt@gmail.com"">r.a.shi.din.vestme.n.tt@gmail.com</a>
<a href=""mailto:r.a.sh.i.d.inv.es.t.m.e.n.t.t@gmail.com"">r.a.sh.i.d.inv.es.t.m.e.n.t.t@gmail.com</a>
<a href=""mailto:r.a.sh.i.d.i.n.v.es.tm.ent.t@gmail.com"">r.a.sh.i.d.i.n.v.es.tm.ent.t@gmail.com</a>
<a href=""mailto:r.a.sh.i.din.v.e.stm.e.nt.t@gmail.com"">r.a.sh.i.din.v.e.stm.e.nt.t@gmail.com</a>
<a href=""mailto:ra.sh.idin.ves.tm.e.n.t.t@gmail.com"">ra.sh.idin.ves.tm.e.n.t.t@gmail.com</a>
<a href=""mailto:r.as.hid.i.nv.est.mentt@gmail.com"">r.as.hid.i.nv.est.mentt@gmail.com</a>
<a href=""mailto:r.as.h.i.d.in.ves.tme.ntt@gmail.com"">r.as.h.i.d.in.ves.tme.ntt@gmail.com</a>
<a href=""mailto:ra.sh.i.din.v.e.s.t.me.n.tt@gmail.com"">ra.sh.i.din.v.e.s.t.me.n.tt@gmail.com</a>
<a href=""mailto:r.ash.idin.v.es.t.men.t.t@gmail.com"">r.ash.idin.v.es.t.men.t.t@gmail.com</a>
<a href=""mailto:r.as.h.i.di.n.v.est.m.en.t.t@gmail.com"">r.as.h.i.di.n.v.est.m.en.t.t@gmail.com</a>
<a href=""mailto:r.a.shi.d.i.nve.s.tme.n.t.t@gmail.com"">r.a.shi.d.i.nve.s.tme.n.t.t@gmail.com</a>
<a href=""mailto:ra.sh.i.di.nvest.m.e.ntt@gmail.com"">ra.sh.i.di.nvest.m.e.ntt@gmail.com</a>
<a href=""mailto:r.a.s.h.id.in.ves.tme.ntt@gmail.com"">r.a.s.h.id.in.ves.tme.ntt@gmail.com</a>
<a href=""mailto:ra.sh.id.i.nves.t.ment.t@gmail.com"">ra.sh.id.i.nves.t.ment.t@gmail.com</a>
<a href=""mailto:r.a.s.hi.d.i.nvest.m.entt@gmail.com"">r.a.s.hi.d.i.nvest.m.entt@gmail.com</a>
<a href=""mailto:r.a.sh.i.di.n.vestm.en.tt@gmail.com"">r.a.sh.i.di.n.vestm.en.tt@gmail.com</a>
<a href=""mailto:r.a.s.h.i.di.n.ve.st.me.ntt@gmail.com"">r.a.s.h.i.di.n.ve.st.me.ntt@gmail.com</a>
<a href=""mailto:r.a.sh.i.din.vestm.entt@gmail.com"">r.a.sh.i.din.vestm.entt@gmail.com</a>
<a href=""mailto:r.ashidin.ves.tm.en.tt@gmail.com"">r.ashidin.ves.tm.en.tt@gmail.com</a>
<a href=""mailto:r.ash.idi.nve.s.t.m.e.nt.t@gmail.com"">r.ash.idi.nve.s.t.m.e.nt.t@gmail.com</a>
<a href=""mailto:ra.shidi.nve.st.ment.t@gmail.com"">ra.shidi.nve.st.ment.t@gmail.com</a>
<a href=""mailto:r.ashid.i.n.ve.s.tment.t@gmail.com"">r.ashid.i.n.ve.s.tment.t@gmail.com</a>
<a href=""mailto:rashi.di.n.v.est.m.en.t.t@gmail.com"">rashi.di.n.v.est.m.en.t.t@gmail.com</a>
<a href=""mailto:r.as.h.idi.nve.stme.n.t.t@gmail.com"">r.as.h.idi.nve.stme.n.t.t@gmail.com</a>
<a href=""mailto:rash.i.d.inve.s.tm.en.tt@gmail.com"">rash.i.d.inve.s.tm.en.tt@gmail.com</a>
<a href=""mailto:ra.s.hi.d.in.ve.s.tm.ent.t@gmail.com"">ra.s.hi.d.in.ve.s.tm.ent.t@gmail.com</a>
<a href=""mailto:rash.idin.ve.s.t.me.n.t.t@gmail.com"">rash.idin.ve.s.t.me.n.t.t@gmail.com</a>
<a href=""mailto:r.as.h.idi.n.v.es.t.men.tt@gmail.com"">r.as.h.idi.n.v.es.t.men.tt@gmail.com</a>
<a href=""mailto:ra.sh.i.di.nvestm.ent.t@gmail.com"">ra.sh.i.di.nvestm.ent.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.d.i.n.v.est.men.t.t@gmail.com"">ra.s.h.i.d.i.n.v.est.men.t.t@gmail.com</a>
<a href=""mailto:ra.sh.id.inv.e.st.me.nt.t@gmail.com"">ra.sh.id.inv.e.st.me.nt.t@gmail.com</a>
<a href=""mailto:ras.hi.d.inv.es.tm.e.ntt@gmail.com"">ras.hi.d.inv.es.tm.e.ntt@gmail.com</a>
<a href=""mailto:r.ash.idi.n.v.estme.nt.t@gmail.com"">r.ash.idi.n.v.estme.nt.t@gmail.com</a>
<a href=""mailto:r.as.hi.d.inve.st.m.ent.t@gmail.com"">r.as.hi.d.inve.st.m.ent.t@gmail.com</a>
<a href=""mailto:r.as.hi.d.i.nve.s.t.m.e.nt.t@gmail.com"">r.as.hi.d.i.nve.s.t.m.e.nt.t@gmail.com</a>
<a href=""mailto:ra.sh.i.d.in.ves.t.me.n.t.t@gmail.com"">ra.sh.i.d.in.ves.t.me.n.t.t@gmail.com</a>
<a href=""mailto:rashi.d.in.ve.s.t.m.entt@gmail.com"">rashi.d.in.ve.s.t.m.entt@gmail.com</a>
<a href=""mailto:r.ash.idin.vest.m.e.n.tt@gmail.com"">r.ash.idin.vest.m.e.n.tt@gmail.com</a>
<a href=""mailto:r.a.s.h.idi.nve.stment.t@gmail.com"">r.a.s.h.idi.nve.stment.t@gmail.com</a>
<a href=""mailto:ras.hid.in.v.es.t.men.t.t@gmail.com"">ras.hid.in.v.es.t.men.t.t@gmail.com</a>
<a href=""mailto:rash.i.d.i.n.v.e.s.t.me.n.tt@gmail.com"">rash.i.d.i.n.v.e.s.t.me.n.tt@gmail.com</a>
<a href=""mailto:r.a.sh.id.in.ve.stme.n.t.t@gmail.com"">r.a.sh.id.in.ve.stme.n.t.t@gmail.com</a>
<a href=""mailto:ra.shi.din.ve.st.m.en.tt@gmail.com"">ra.shi.din.ve.st.m.en.tt@gmail.com</a>
<a href=""mailto:r.a.s.hid.investm.en.tt@gmail.com"">r.a.s.hid.investm.en.tt@gmail.com</a>
<a href=""mailto:r.as.h.i.dinv.e.s.tme.ntt@gmail.com"">r.as.h.i.dinv.e.s.tme.ntt@gmail.com</a>
<a href=""mailto:r.a.s.hi.d.i.n.v.estm.ent.t@gmail.com"">r.a.s.hi.d.i.n.v.estm.ent.t@gmail.com</a>
<a href=""mailto:rashid.i.nvestme.ntt@gmail.com"">rashid.i.nvestme.ntt@gmail.com</a>
<a href=""mailto:r.a.s.h.id.in.v.e.s.t.m.en.t.t@gmail.com"">r.a.s.h.id.in.v.e.s.t.m.en.t.t@gmail.com</a>
<a href=""mailto:ras.hid.i.nvest.m.e.nt.t@gmail.com"">ras.hid.i.nvest.m.e.nt.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.d.i.nv.estmen.t.t@gmail.com"">ra.s.h.i.d.i.nv.estmen.t.t@gmail.com</a>
<a href=""mailto:r.a.sh.idi.n.vestm.e.n.t.t@gmail.com"">r.a.sh.idi.n.vestm.e.n.t.t@gmail.com</a>
<a href=""mailto:ra.s.h.idinv.e.s.t.m.entt@gmail.com"">ra.s.h.idinv.e.s.t.m.entt@gmail.com</a>
<a href=""mailto:rash.idi.n.ve.st.ment.t@gmail.com"">rash.idi.n.ve.st.ment.t@gmail.com</a>
<a href=""mailto:ra.s.h.i.di.nves.tm.ent.t@gmail.com"">ra.s.h.i.di.nves.tm.ent.t@gmail.com</a>
<a href=""mailto:ras.hi.d.inve.stm.entt@gmail.com"">ras.hi.d.inve.stm.entt@gmail.com</a>
<a href=""mailto:r.ashi.dinve.s.t.men.tt@gmail.com"">r.ashi.dinve.s.t.men.tt@gmail.com</a>
<a href=""mailto:ra.s.h.idi.n.v.estm.e.n.tt@gmail.com"">ra.s.h.idi.n.v.estm.e.n.tt@gmail.com</a>
<a href=""mailto:rashi.d.i.n.v.es.t.m.en.tt@gmail.com"">rashi.d.i.n.v.es.t.m.en.tt@gmail.com</a>
<a href=""mailto:ra.s.h.id.i.n.v.e.st.ment.t@gmail.com"">ra.s.h.id.i.n.v.e.st.ment.t@gmail.com</a>
<a href=""mailto:rashidi.n.ve.s.tm.e.n.tt@gmail.com"">rashidi.n.ve.s.tm.e.n.tt@gmail.com</a>
<a href=""mailto:r.ashidinve.stm.e.n.t.t@gmail.com"">r.ashidinve.stm.e.n.t.t@gmail.com</a>
<a href=""mailto:r.a.s.h.i.d.in.v.estm.e.n.tt@gmail.com"">r.a.s.h.i.d.in.v.estm.e.n.tt@gmail.com</a>
<a href=""mailto:rashi.d.in.v.es.tme.nt.t@gmail.com"">rashi.d.in.v.es.tme.nt.t@gmail.com</a>
<a href=""mailto:r.a.shid.i.n.ve.s.tme.ntt@gmail.com"">r.a.shid.i.n.ve.s.tme.ntt@gmail.com</a>
<a href=""mailto:ras.hi.d.in.v.e.s.t.ment.t@gmail.com"">ras.hi.d.in.v.e.s.t.ment.t@gmail.com</a>
<a href=""mailto:r.a.s.hi.d.inve.st.m.entt@gmail.com"">r.a.s.hi.d.inve.st.m.entt@gmail.com</a>
<a href=""mailto:r.as.h.i.d.i.nve.s.tme.n.tt@gmail.com"">r.as.h.i.d.i.nve.s.tme.n.tt@gmail.com</a>
<a href=""mailto:ra.s.h.id.in.v.e.s.t.me.n.t.t@gmail.com"">ra.s.h.id.in.v.e.s.t.me.n.t.t@gmail.com</a>
<a href=""mailto:r.ash.id.i.n.v.es.t.m.en.t.t@gmail.com"">r.ash.id.i.n.v.es.t.m.en.t.t@gmail.com</a>
<a href=""mailto:r.ash.i.d.inve.s.tm.en.t.t@gmail.com"">r.ash.i.d.inve.s.tm.en.t.t@gmail.com</a>
<a href=""mailto:r.ashi.d.i.nv.e.s.t.m.e.ntt@gmail.com"">r.ashi.d.i.nv.e.s.t.m.e.ntt@gmail.com</a>
<a href=""mailto:r.a.shid.in.vestme.nt.t@gmail.com"">r.a.shid.in.vestme.nt.t@gmail.com</a>
<a href=""mailto:r.a.s.h.i.din.v.e.st.m.entt@gmail.com"">r.a.s.h.i.din.v.e.st.m.entt@gmail.com</a>
<a href=""mailto:toplinee1@gmail.com"">toplinee1@gmail.com</a>
<a href=""mailto:t.op.l.i.nee.1@gmail.com"">t.op.l.i.nee.1@gmail.com</a>
<a href=""mailto:to.p.l.i.n.e.e.1@gmail.com"">to.p.l.i.n.e.e.1@gmail.com</a>
<a href=""mailto:to.p.l.in.e.e.1@gmail.com"">to.p.l.in.e.e.1@gmail.com</a>
<a href=""mailto:topli.n.e.e1@gmail.com"">topli.n.e.e1@gmail.com</a>
<a href=""mailto:t.o.pli.nee1@gmail.com"">t.o.pli.nee1@gmail.com</a>
<a href=""mailto:to.p.l.inee.1@gmail.com"">to.p.l.inee.1@gmail.com</a>
<a href=""mailto:to.p.l.i.nee1@gmail.com"">to.p.l.i.nee1@gmail.com</a>
<a href=""mailto:topl.inee.1@gmail.com"">topl.inee.1@gmail.com</a>
<a href=""mailto:topli.ne.e1@gmail.com"">topli.ne.e1@gmail.com</a>
<a href=""mailto:to.pl.i.ne.e.1@gmail.com"">to.pl.i.ne.e.1@gmail.com</a>
<a href=""mailto:to.p.li.ne.e1@gmail.com"">to.p.li.ne.e1@gmail.com</a>
<a href=""mailto:top.li.n.ee1@gmail.com"">top.li.n.ee1@gmail.com</a>
<a href=""mailto:t.o.pl.i.n.ee.1@gmail.com"">t.o.pl.i.n.ee.1@gmail.com</a>
<a href=""mailto:t.op.lin.ee1@gmail.com"">t.op.lin.ee1@gmail.com</a>
<a href=""mailto:to.plin.ee1@gmail.com"">to.plin.ee1@gmail.com</a>
<a href=""mailto:t.o.p.line.e1@gmail.com"">t.o.p.line.e1@gmail.com</a>
<a href=""mailto:t.op.li.ne.e1@gmail.com"">t.op.li.ne.e1@gmail.com</a>
<a href=""mailto:t.o.pl.i.ne.e.1@gmail.com"">t.o.pl.i.ne.e.1@gmail.com</a>
<a href=""mailto:t.o.p.l.in.e.e.1@gmail.com"">t.o.p.l.in.e.e.1@gmail.com</a>
<a href=""mailto:t.o.pl.in.e.e.1@gmail.com"">t.o.pl.in.e.e.1@gmail.com</a>
<a href=""mailto:t.o.p.lin.ee.1@gmail.com"">t.o.p.lin.ee.1@gmail.com</a>
<a href=""mailto:t.o.p.li.n.e.e.1@gmail.com"">t.o.p.li.n.e.e.1@gmail.com</a>
<a href=""mailto:topline.e.1@gmail.com"">topline.e.1@gmail.com</a>
<a href=""mailto:to.pli.n.ee.1@gmail.com"">to.pli.n.ee.1@gmail.com</a>
<a href=""mailto:top.linee.1@gmail.com"">top.linee.1@gmail.com</a>
<a href=""mailto:t.op.l.i.n.ee1@gmail.com"">t.op.l.i.n.ee1@gmail.com</a>
<a href=""mailto:t.op.l.i.n.e.e.1@gmail.com"">t.op.l.i.n.e.e.1@gmail.com</a>
<a href=""mailto:top.l.i.n.e.e1@gmail.com"">top.l.i.n.e.e1@gmail.com</a>
<a href=""mailto:t.opli.nee.1@gmail.com"">t.opli.nee.1@gmail.com</a>
<a href=""mailto:t.o.pl.ine.e.1@gmail.com"">t.o.pl.ine.e.1@gmail.com</a>
<a href=""mailto:topl.i.nee.1@gmail.com"">topl.i.nee.1@gmail.com</a>
<a href=""mailto:to.p.lin.ee.1@gmail.com"">to.p.lin.ee.1@gmail.com</a>
<a href=""mailto:t.oplin.e.e.1@gmail.com"">t.oplin.e.e.1@gmail.com</a>
<a href=""mailto:t.oplin.ee1@gmail.com"">t.oplin.ee1@gmail.com</a>
<a href=""mailto:t.op.lin.ee.1@gmail.com"">t.op.lin.ee.1@gmail.com</a>
<a href=""mailto:top.li.nee.1@gmail.com"">top.li.nee.1@gmail.com</a>
<a href=""mailto:t.o.pli.n.ee1@gmail.com"">t.o.pli.n.ee1@gmail.com</a>
<a href=""mailto:t.opli.n.e.e.1@gmail.com"">t.opli.n.e.e.1@gmail.com</a>
<a href=""mailto:to.plin.e.e1@gmail.com"">to.plin.e.e1@gmail.com</a>
<a href=""mailto:t.o.p.l.inee1@gmail.com"">t.o.p.l.inee1@gmail.com</a>
<a href=""mailto:t.o.p.l.i.n.ee1@gmail.com"">t.o.p.l.i.n.ee1@gmail.com</a>
<a href=""mailto:top.l.ine.e.1@gmail.com"">top.l.ine.e.1@gmail.com</a>
<a href=""mailto:t.op.l.ine.e.1@gmail.com"">t.op.l.ine.e.1@gmail.com</a>
<a href=""mailto:to.p.l.i.ne.e1@gmail.com"">to.p.l.i.ne.e1@gmail.com</a>
<a href=""mailto:t.oplin.e.e1@gmail.com"">t.oplin.e.e1@gmail.com</a>
<a href=""mailto:t.o.plin.e.e1@gmail.com"">t.o.plin.e.e1@gmail.com</a>
<a href=""mailto:top.l.inee.1@gmail.com"">top.l.inee.1@gmail.com</a>
<a href=""mailto:t.opl.i.nee.1@gmail.com"">t.opl.i.nee.1@gmail.com</a>
<a href=""mailto:to.pl.i.n.e.e1@gmail.com"">to.pl.i.n.e.e1@gmail.com</a>
<a href=""mailto:t.op.line.e1@gmail.com"">t.op.line.e1@gmail.com</a>
<a href=""mailto:t.o.p.li.n.ee.1@gmail.com"">t.o.p.li.n.ee.1@gmail.com</a>
<a href=""mailto:to.p.li.nee.1@gmail.com"">to.p.li.nee.1@gmail.com</a>
<a href=""mailto:to.p.l.inee1@gmail.com"">to.p.l.inee1@gmail.com</a>
<a href=""mailto:to.pl.i.nee1@gmail.com"">to.pl.i.nee1@gmail.com</a>
<a href=""mailto:t.o.pli.n.e.e1@gmail.com"">t.o.pli.n.e.e1@gmail.com</a>
<a href=""mailto:t.opline.e1@gmail.com"">t.opline.e1@gmail.com</a>
<a href=""mailto:top.l.in.e.e1@gmail.com"">top.l.in.e.e1@gmail.com</a>
<a href=""mailto:t.o.p.li.ne.e1@gmail.com"">t.o.p.li.ne.e1@gmail.com</a>
<a href=""mailto:topl.in.ee.1@gmail.com"">topl.in.ee.1@gmail.com</a>
<a href=""mailto:t.op.l.i.ne.e.1@gmail.com"">t.op.l.i.ne.e.1@gmail.com</a>
<a href=""mailto:to.pli.nee.1@gmail.com"">to.pli.nee.1@gmail.com</a>
<a href=""mailto:t.o.pli.nee.1@gmail.com"">t.o.pli.nee.1@gmail.com</a>
<a href=""mailto:top.linee1@gmail.com"">top.linee1@gmail.com</a>
<a href=""mailto:to.p.li.n.ee.1@gmail.com"">to.p.li.n.ee.1@gmail.com</a>
<a href=""mailto:t.o.p.l.in.ee.1@gmail.com"">t.o.p.l.in.ee.1@gmail.com</a>
<a href=""mailto:t.op.linee.1@gmail.com"">t.op.linee.1@gmail.com</a>
<a href=""mailto:top.li.ne.e1@gmail.com"">top.li.ne.e1@gmail.com</a>
<a href=""mailto:topl.i.nee1@gmail.com"">topl.i.nee1@gmail.com</a>
<a href=""mailto:top.l.in.ee.1@gmail.com"">top.l.in.ee.1@gmail.com</a>
<a href=""mailto:t.opli.ne.e.1@gmail.com"">t.opli.ne.e.1@gmail.com</a>
<a href=""mailto:topli.n.ee1@gmail.com"">topli.n.ee1@gmail.com</a>
<a href=""mailto:t.o.p.li.n.ee1@gmail.com"">t.o.p.li.n.ee1@gmail.com</a>
<a href=""mailto:topl.in.e.e1@gmail.com"">topl.in.e.e1@gmail.com</a>
<a href=""mailto:top.li.n.ee.1@gmail.com"">top.li.n.ee.1@gmail.com</a>
<a href=""mailto:t.o.p.l.i.n.e.e.1@gmail.com"">t.o.p.l.i.n.e.e.1@gmail.com</a>
<a href=""mailto:top.l.ine.e1@gmail.com"">top.l.ine.e1@gmail.com</a>
<a href=""mailto:t.o.pli.n.ee.1@gmail.com"">t.o.pli.n.ee.1@gmail.com</a>
<a href=""mailto:t.o.p.l.in.ee1@gmail.com"">t.o.p.l.in.ee1@gmail.com</a>
<a href=""mailto:t.op.l.in.e.e.1@gmail.com"">t.op.l.in.e.e.1@gmail.com</a>
<a href=""mailto:t.op.l.i.n.ee.1@gmail.com"">t.op.l.i.n.ee.1@gmail.com</a>
<a href=""mailto:top.l.i.ne.e.1@gmail.com"">top.l.i.ne.e.1@gmail.com</a>
<a href=""mailto:to.pline.e.1@gmail.com"">to.pline.e.1@gmail.com</a>
<a href=""mailto:topl.i.ne.e.1@gmail.com"">topl.i.ne.e.1@gmail.com</a>
<a href=""mailto:t.op.l.in.e.e1@gmail.com"">t.op.l.in.e.e1@gmail.com</a>
<a href=""mailto:t.o.pl.in.e.e1@gmail.com"">t.o.pl.in.e.e1@gmail.com</a>
<a href=""mailto:topl.in.ee1@gmail.com"">topl.in.ee1@gmail.com</a>
<a href=""mailto:t.o.pline.e1@gmail.com"">t.o.pline.e1@gmail.com</a>
<a href=""mailto:t.opl.i.ne.e.1@gmail.com"">t.opl.i.ne.e.1@gmail.com</a>
<a href=""mailto:t.o.p.li.n.e.e1@gmail.com"">t.o.p.li.n.e.e1@gmail.com</a>
<a href=""mailto:top.l.i.n.e.e.1@gmail.com"">top.l.i.n.e.e.1@gmail.com</a>
<a href=""mailto:t.o.p.linee1@gmail.com"">t.o.p.linee1@gmail.com</a>
<a href=""mailto:to.p.li.n.e.e1@gmail.com"">to.p.li.n.e.e1@gmail.com</a>
<a href=""mailto:top.lin.e.e.1@gmail.com"">top.lin.e.e.1@gmail.com</a>
<a href=""mailto:t.o.pl.ine.e1@gmail.com"">t.o.pl.ine.e1@gmail.com</a>
<a href=""mailto:t.op.li.ne.e.1@gmail.com"">t.op.li.ne.e.1@gmail.com</a>
<a href=""mailto:t.opl.in.ee.1@gmail.com"">t.opl.in.ee.1@gmail.com</a>
<a href=""mailto:to.pl.i.nee.1@gmail.com"">to.pl.i.nee.1@gmail.com</a>
<a href=""mailto:to.pl.in.ee.1@gmail.com"">to.pl.in.ee.1@gmail.com</a>
<a href=""mailto:t.o.p.l.ine.e.1@gmail.com"">t.o.p.l.ine.e.1@gmail.com</a>
<a href=""mailto:topl.ine.e1@gmail.com"">topl.ine.e1@gmail.com</a>
<a href=""mailto:to.pl.inee.1@gmail.com"">to.pl.inee.1@gmail.com</a>
<a href=""mailto:toplinee.1@gmail.com"">toplinee.1@gmail.com</a>
<a href=""mailto:topl.ine.e.1@gmail.com"">topl.ine.e.1@gmail.com</a>
<a href=""mailto:t.o.p.lin.ee1@gmail.com"">t.o.p.lin.ee1@gmail.com</a>
<a href=""mailto:t.opl.inee.1@gmail.com"">t.opl.inee.1@gmail.com</a>
<a href=""mailto:to.plinee1@gmail.com"">to.plinee1@gmail.com</a>
<a href=""mailto:t.op.linee1@gmail.com"">t.op.linee1@gmail.com</a>
<a href=""mailto:t.op.li.n.ee1@gmail.com"">t.op.li.n.ee1@gmail.com</a>
<a href=""mailto:t.opl.i.ne.e1@gmail.com"">t.opl.i.ne.e1@gmail.com</a>
<a href=""mailto:t.o.pl.i.n.e.e1@gmail.com"">t.o.pl.i.n.e.e1@gmail.com</a>
<a href=""mailto:t.oplin.ee.1@gmail.com"">t.oplin.ee.1@gmail.com</a>
<a href=""mailto:to.p.li.nee1@gmail.com"">to.p.li.nee1@gmail.com</a>
<a href=""mailto:t.op.l.in.ee.1@gmail.com"">t.op.l.in.ee.1@gmail.com</a>
<a href=""mailto:top.lin.ee1@gmail.com"">top.lin.ee1@gmail.com</a>
<a href=""mailto:t.o.pli.ne.e.1@gmail.com"">t.o.pli.ne.e.1@gmail.com</a>
<a href=""mailto:t.o.p.l.i.ne.e1@gmail.com"">t.o.p.l.i.ne.e1@gmail.com</a>
<a href=""mailto:top.lin.e.e1@gmail.com"">top.lin.e.e1@gmail.com</a>
<a href=""mailto:t.o.pl.i.n.ee1@gmail.com"">t.o.pl.i.n.ee1@gmail.com</a>
<a href=""mailto:t.op.li.n.ee.1@gmail.com"">t.op.li.n.ee.1@gmail.com</a>
<a href=""mailto:t.o.plinee1@gmail.com"">t.o.plinee1@gmail.com</a>
<a href=""mailto:topl.i.ne.e1@gmail.com"">topl.i.ne.e1@gmail.com</a>
<a href=""mailto:to.pl.ine.e.1@gmail.com"">to.pl.ine.e.1@gmail.com</a>
<a href=""mailto:t.opli.ne.e1@gmail.com"">t.opli.ne.e1@gmail.com</a>
<a href=""mailto:to.plin.ee.1@gmail.com"">to.plin.ee.1@gmail.com</a>
<a href=""mailto:to.plinee.1@gmail.com"">to.plinee.1@gmail.com</a>
<a href=""mailto:to.pl.i.ne.e1@gmail.com"">to.pl.i.ne.e1@gmail.com</a>
<a href=""mailto:topline.e1@gmail.com"">topline.e1@gmail.com</a>
<a href=""mailto:t.o.pli.n.e.e.1@gmail.com"">t.o.pli.n.e.e.1@gmail.com</a>
<a href=""mailto:toplinee1@gmail.com"">toplinee1@gmail.com</a>
<a href=""mailto:t.o.plin.e.e.1@gmail.com"">t.o.plin.e.e.1@gmail.com</a>
<a href=""mailto:to.pline.e1@gmail.com"">to.pline.e1@gmail.com</a>
<a href=""mailto:to.p.l.in.e.e1@gmail.com"">to.p.l.in.e.e1@gmail.com</a>
<a href=""mailto:top.l.i.n.ee.1@gmail.com"">top.l.i.n.ee.1@gmail.com</a>
<a href=""mailto:t.op.l.i.ne.e1@gmail.com"">t.op.l.i.ne.e1@gmail.com</a>
<a href=""mailto:to.pli.ne.e1@gmail.com"">to.pli.ne.e1@gmail.com</a>
<a href=""mailto:to.p.l.in.ee.1@gmail.com"">to.p.l.in.ee.1@gmail.com</a>
<a href=""mailto:t.opl.in.ee1@gmail.com"">t.opl.in.ee1@gmail.com</a>
<a href=""mailto:to.p.l.i.n.ee.1@gmail.com"">to.p.l.i.n.ee.1@gmail.com</a>
<a href=""mailto:t.opl.i.n.e.e1@gmail.com"">t.opl.i.n.e.e1@gmail.com</a>
<a href=""mailto:to.pli.n.e.e1@gmail.com"">to.pli.n.e.e1@gmail.com</a>
<a href=""mailto:topli.n.ee.1@gmail.com"">topli.n.ee.1@gmail.com</a>
<a href=""mailto:t.o.pli.ne.e1@gmail.com"">t.o.pli.ne.e1@gmail.com</a>
<a href=""mailto:t.o.pl.i.nee1@gmail.com"">t.o.pl.i.nee1@gmail.com</a>
<a href=""mailto:t.o.p.li.nee.1@gmail.com"">t.o.p.li.nee.1@gmail.com</a>
<a href=""mailto:top.lin.ee.1@gmail.com"">top.lin.ee.1@gmail.com</a>
<a href=""mailto:top.li.n.e.e1@gmail.com"">top.li.n.e.e1@gmail.com</a>
<a href=""mailto:to.p.l.i.n.ee1@gmail.com"">to.p.l.i.n.ee1@gmail.com</a>
<a href=""mailto:t.op.l.in.ee1@gmail.com"">t.op.l.in.ee1@gmail.com</a>
<a href=""mailto:t.opl.ine.e.1@gmail.com"">t.opl.ine.e.1@gmail.com</a>
<a href=""mailto:t.o.p.l.in.e.e1@gmail.com"">t.o.p.l.in.e.e1@gmail.com</a>
<a href=""mailto:top.l.i.n.ee1@gmail.com"">top.l.i.n.ee1@gmail.com</a>
<a href=""mailto:t.o.plin.ee.1@gmail.com"">t.o.plin.ee.1@gmail.com</a>
<a href=""mailto:to.p.linee1@gmail.com"">to.p.linee1@gmail.com</a>
<a href=""mailto:to.p.li.n.e.e.1@gmail.com"">to.p.li.n.e.e.1@gmail.com</a>
<a href=""mailto:t.o.p.l.ine.e1@gmail.com"">t.o.p.l.ine.e1@gmail.com</a>
<a href=""mailto:t.o.p.lin.e.e1@gmail.com"">t.o.p.lin.e.e1@gmail.com</a>
<a href=""mailto:toplin.e.e1@gmail.com"">toplin.e.e1@gmail.com</a>
<a href=""mailto:t.opli.n.ee1@gmail.com"">t.opli.n.ee1@gmail.com</a>
<a href=""mailto:top.line.e1@gmail.com"">top.line.e1@gmail.com</a>
<a href=""mailto:t.op.li.nee1@gmail.com"">t.op.li.nee1@gmail.com</a>
<a href=""mailto:t.op.li.n.e.e1@gmail.com"">t.op.li.n.e.e1@gmail.com</a>
<a href=""mailto:t.o.p.l.i.nee1@gmail.com"">t.o.p.l.i.nee1@gmail.com</a>
<a href=""mailto:topl.inee1@gmail.com"">topl.inee1@gmail.com</a>
<a href=""mailto:t.o.p.linee.1@gmail.com"">t.o.p.linee.1@gmail.com</a>
<a href=""mailto:to.p.line.e.1@gmail.com"">to.p.line.e.1@gmail.com</a>
<a href=""mailto:t.o.pl.in.ee.1@gmail.com"">t.o.pl.in.ee.1@gmail.com</a>
<a href=""mailto:t.o.p.li.ne.e.1@gmail.com"">t.o.p.li.ne.e.1@gmail.com</a>
<a href=""mailto:top.l.in.ee1@gmail.com"">top.l.in.ee1@gmail.com</a>
<a href=""mailto:t.o.pl.in.ee1@gmail.com"">t.o.pl.in.ee1@gmail.com</a>
<a href=""mailto:t.opl.in.e.e1@gmail.com"">t.opl.in.e.e1@gmail.com</a>
<a href=""mailto:t.op.l.inee.1@gmail.com"">t.op.l.inee.1@gmail.com</a>
<a href=""mailto:t.op.lin.e.e1@gmail.com"">t.op.lin.e.e1@gmail.com</a>
<a href=""mailto:topli.n.e.e.1@gmail.com"">topli.n.e.e.1@gmail.com</a>
<a href=""mailto:t.o.pline.e.1@gmail.com"">t.o.pline.e.1@gmail.com</a>
<a href=""mailto:to.p.lin.ee1@gmail.com"">to.p.lin.ee1@gmail.com</a>
<a href=""mailto:topl.i.n.e.e.1@gmail.com"">topl.i.n.e.e.1@gmail.com</a>
<a href=""mailto:t.o.p.li.nee1@gmail.com"">t.o.p.li.nee1@gmail.com</a>
<a href=""mailto:t.opli.n.e.e1@gmail.com"">t.opli.n.e.e1@gmail.com</a>
<a href=""mailto:t.o.pl.i.nee.1@gmail.com"">t.o.pl.i.nee.1@gmail.com</a>
<a href=""mailto:t.opl.i.n.e.e.1@gmail.com"">t.opl.i.n.e.e.1@gmail.com</a>
<a href=""mailto:to.pl.i.n.ee.1@gmail.com"">to.pl.i.n.ee.1@gmail.com</a>
<a href=""mailto:to.p.lin.e.e.1@gmail.com"">to.p.lin.e.e.1@gmail.com</a>
<a href=""mailto:to.p.line.e1@gmail.com"">to.p.line.e1@gmail.com</a>
<a href=""mailto:t.op.l.ine.e1@gmail.com"">t.op.l.ine.e1@gmail.com</a>
<a href=""mailto:to.p.l.ine.e1@gmail.com"">to.p.l.ine.e1@gmail.com</a>
<a href=""mailto:t.o.p.l.i.ne.e.1@gmail.com"">t.o.p.l.i.ne.e.1@gmail.com</a>
<a href=""mailto:to.p.l.i.nee.1@gmail.com"">to.p.l.i.nee.1@gmail.com</a>
<a href=""mailto:topl.i.n.ee.1@gmail.com"">topl.i.n.ee.1@gmail.com</a>
<a href=""mailto:t.oplinee.1@gmail.com"">t.oplinee.1@gmail.com</a>
<a href=""mailto:t.op.lin.e.e.1@gmail.com"">t.op.lin.e.e.1@gmail.com</a>
<a href=""mailto:t.opli.nee1@gmail.com"">t.opli.nee1@gmail.com</a>
<a href=""mailto:t.o.pl.i.n.e.e.1@gmail.com"">t.o.pl.i.n.e.e.1@gmail.com</a>
<a href=""mailto:to.plin.e.e.1@gmail.com"">to.plin.e.e.1@gmail.com</a>
<a href=""mailto:to.pl.in.ee1@gmail.com"">to.pl.in.ee1@gmail.com</a>
<a href=""mailto:t.o.plinee.1@gmail.com"">t.o.plinee.1@gmail.com</a>
<a href=""mailto:t.o.p.l.i.nee.1@gmail.com"">t.o.p.l.i.nee.1@gmail.com</a>
<a href=""mailto:to.p.lin.e.e1@gmail.com"">to.p.lin.e.e1@gmail.com</a>
<a href=""mailto:topl.i.n.ee1@gmail.com"">topl.i.n.ee1@gmail.com</a>
<a href=""mailto:top.l.in.e.e.1@gmail.com"">top.l.in.e.e.1@gmail.com</a>
<a href=""mailto:to.pli.n.e.e.1@gmail.com"">to.pli.n.e.e.1@gmail.com</a>
<a href=""mailto:idrisahmedi115@gmail.com"">idrisahmedi115@gmail.com</a>
<a href=""mailto:idrisah.med.i1.1.5@gmail.com"">idrisah.med.i1.1.5@gmail.com</a>
<a href=""mailto:i.d.risa.h.me.d.i.11.5@gmail.com"">i.d.risa.h.me.d.i.11.5@gmail.com</a>
<a href=""mailto:id.r.i.s.a.h.m.edi1.15@gmail.com"">id.r.i.s.a.h.m.edi1.15@gmail.com</a>
<a href=""mailto:i.d.r.is.ah.medi1.1.5@gmail.com"">i.d.r.is.ah.medi1.1.5@gmail.com</a>
<a href=""mailto:idrisahm.edi.11.5@gmail.com"">idrisahm.edi.11.5@gmail.com</a>
<a href=""mailto:i.d.r.i.s.a.h.med.i1.1.5@gmail.com"">i.d.r.i.s.a.h.med.i1.1.5@gmail.com</a>
<a href=""mailto:i.d.r.i.sa.h.m.e.di.1.15@gmail.com"">i.d.r.i.sa.h.m.e.di.1.15@gmail.com</a>
<a href=""mailto:id.ri.sa.h.med.i115@gmail.com"">id.ri.sa.h.med.i115@gmail.com</a>
<a href=""mailto:id.r.i.sa.h.m.e.d.i1.1.5@gmail.com"">id.r.i.sa.h.m.e.d.i1.1.5@gmail.com</a>
<a href=""mailto:id.ri.sa.h.m.e.d.i.115@gmail.com"">id.ri.sa.h.m.e.d.i.115@gmail.com</a>
<a href=""mailto:i.dr.i.sa.h.m.ed.i115@gmail.com"">i.dr.i.sa.h.m.ed.i115@gmail.com</a>
<a href=""mailto:i.d.r.i.sa.h.m.edi.1.1.5@gmail.com"">i.d.r.i.sa.h.m.edi.1.1.5@gmail.com</a>
<a href=""mailto:id.ri.sahm.ed.i1.15@gmail.com"">id.ri.sahm.ed.i1.15@gmail.com</a>
<a href=""mailto:id.ri.sa.hm.e.di.1.15@gmail.com"">id.ri.sa.hm.e.di.1.15@gmail.com</a>
<a href=""mailto:id.r.i.s.ah.med.i1.1.5@gmail.com"">id.r.i.s.ah.med.i1.1.5@gmail.com</a>
<a href=""mailto:id.r.i.sahm.ed.i.1.1.5@gmail.com"">id.r.i.sahm.ed.i.1.1.5@gmail.com</a>
<a href=""mailto:id.r.i.sa.h.m.ed.i.1.1.5@gmail.com"">id.r.i.sa.h.m.ed.i.1.1.5@gmail.com</a>
<a href=""mailto:id.ris.a.hme.d.i11.5@gmail.com"">id.ris.a.hme.d.i11.5@gmail.com</a>
<a href=""mailto:idr.i.sa.h.m.e.di.1.15@gmail.com"">idr.i.sa.h.m.e.di.1.15@gmail.com</a>
<a href=""mailto:idrisa.h.me.d.i.11.5@gmail.com"">idrisa.h.me.d.i.11.5@gmail.com</a>
<a href=""mailto:idrisa.h.m.e.d.i1.1.5@gmail.com"">idrisa.h.m.e.d.i1.1.5@gmail.com</a>
<a href=""mailto:i.d.risa.hm.ed.i.115@gmail.com"">i.d.risa.hm.ed.i.115@gmail.com</a>
<a href=""mailto:idris.ahmed.i1.1.5@gmail.com"">idris.ahmed.i1.1.5@gmail.com</a>
<a href=""mailto:idrisa.hmedi1.15@gmail.com"">idrisa.hmedi1.15@gmail.com</a>
<a href=""mailto:i.dris.a.hm.e.d.i.115@gmail.com"">i.dris.a.hm.e.d.i.115@gmail.com</a>
<a href=""mailto:i.d.r.i.s.ahmed.i115@gmail.com"">i.d.r.i.s.ahmed.i115@gmail.com</a>
<a href=""mailto:idr.i.sa.h.medi115@gmail.com"">idr.i.sa.h.medi115@gmail.com</a>
<a href=""mailto:idri.sah.medi115@gmail.com"">idri.sah.medi115@gmail.com</a>
<a href=""mailto:i.d.r.isa.hme.di115@gmail.com"">i.d.r.isa.hme.di115@gmail.com</a>
<a href=""mailto:id.r.isahme.di.1.1.5@gmail.com"">id.r.isahme.di.1.1.5@gmail.com</a>
<a href=""mailto:i.dr.isa.hmedi.11.5@gmail.com"">i.dr.isa.hmedi.11.5@gmail.com</a>
<a href=""mailto:id.r.is.a.hmed.i1.15@gmail.com"">id.r.is.a.hmed.i1.15@gmail.com</a>
<a href=""mailto:id.r.i.s.ahmed.i11.5@gmail.com"">id.r.i.s.ahmed.i11.5@gmail.com</a>
<a href=""mailto:i.d.r.i.s.ah.m.edi.1.15@gmail.com"">i.d.r.i.s.ah.m.edi.1.15@gmail.com</a>
<a href=""mailto:idr.i.sa.h.m.e.di.1.1.5@gmail.com"">idr.i.sa.h.m.e.di.1.1.5@gmail.com</a>
<a href=""mailto:idr.is.ahm.e.d.i.1.15@gmail.com"">idr.is.ahm.e.d.i.1.15@gmail.com</a>
<a href=""mailto:id.ri.s.ah.me.di.1.15@gmail.com"">id.ri.s.ah.me.di.1.15@gmail.com</a>
<a href=""mailto:i.drisahme.di1.1.5@gmail.com"">i.drisahme.di1.1.5@gmail.com</a>
<a href=""mailto:idrisah.medi.11.5@gmail.com"">idrisah.medi.11.5@gmail.com</a>
<a href=""mailto:i.d.r.isa.h.m.e.d.i.1.1.5@gmail.com"">i.d.r.isa.h.m.e.d.i.1.1.5@gmail.com</a>
<a href=""mailto:id.ri.sahmedi1.1.5@gmail.com"">id.ri.sahmedi1.1.5@gmail.com</a>
<a href=""mailto:idr.i.s.ah.medi11.5@gmail.com"">idr.i.s.ah.medi11.5@gmail.com</a>
<a href=""mailto:idr.isahmed.i.115@gmail.com"">idr.isahmed.i.115@gmail.com</a>
<a href=""mailto:id.r.i.sah.m.ed.i.11.5@gmail.com"">id.r.i.sah.m.ed.i.11.5@gmail.com</a>
<a href=""mailto:id.ris.a.h.medi115@gmail.com"">id.ris.a.h.medi115@gmail.com</a>
<a href=""mailto:i.d.r.i.sa.h.m.ed.i1.1.5@gmail.com"">i.d.r.i.sa.h.m.ed.i1.1.5@gmail.com</a>
<a href=""mailto:i.d.risahme.di1.1.5@gmail.com"">i.d.risahme.di1.1.5@gmail.com</a>
<a href=""mailto:i.dr.i.s.ahmedi1.15@gmail.com"">i.dr.i.s.ahmedi1.15@gmail.com</a>
<a href=""mailto:i.dri.s.ahm.edi.11.5@gmail.com"">i.dri.s.ahm.edi.11.5@gmail.com</a>
<a href=""mailto:id.ris.ahm.e.d.i.1.1.5@gmail.com"">id.ris.ahm.e.d.i.1.1.5@gmail.com</a>
<a href=""mailto:i.d.risahme.di.11.5@gmail.com"">i.d.risahme.di.11.5@gmail.com</a>
<a href=""mailto:idris.ahm.edi.1.1.5@gmail.com"">idris.ahm.edi.1.1.5@gmail.com</a>
<a href=""mailto:i.dr.i.s.a.h.m.ed.i.11.5@gmail.com"">i.dr.i.s.a.h.m.ed.i.11.5@gmail.com</a>
<a href=""mailto:i.dr.is.a.h.me.d.i1.1.5@gmail.com"">i.dr.is.a.h.me.d.i1.1.5@gmail.com</a>
<a href=""mailto:idris.ahmed.i.1.15@gmail.com"">idris.ahmed.i.1.15@gmail.com</a>
<a href=""mailto:idr.i.s.ah.m.edi1.15@gmail.com"">idr.i.s.ah.m.edi1.15@gmail.com</a>
<a href=""mailto:id.r.i.sah.m.ed.i115@gmail.com"">id.r.i.sah.m.ed.i115@gmail.com</a>
<a href=""mailto:i.dri.s.a.hme.d.i.115@gmail.com"">i.dri.s.a.hme.d.i.115@gmail.com</a>
<a href=""mailto:id.r.i.s.ahm.e.d.i1.15@gmail.com"">id.r.i.s.ahm.e.d.i1.15@gmail.com</a>
<a href=""mailto:i.dr.i.sah.m.ed.i.11.5@gmail.com"">i.dr.i.sah.m.ed.i.11.5@gmail.com</a>
<a href=""mailto:idr.i.s.a.h.m.ed.i.1.15@gmail.com"">idr.i.s.a.h.m.ed.i.1.15@gmail.com</a>
<a href=""mailto:i.d.ris.ahm.e.d.i11.5@gmail.com"">i.d.ris.ahm.e.d.i11.5@gmail.com</a>
<a href=""mailto:i.dr.is.a.h.m.ed.i1.1.5@gmail.com"">i.dr.is.a.h.m.ed.i1.1.5@gmail.com</a>
<a href=""mailto:id.r.is.a.hme.d.i.1.15@gmail.com"">id.r.is.a.hme.d.i.1.15@gmail.com</a>
<a href=""mailto:i.d.r.i.sah.medi.1.1.5@gmail.com"">i.d.r.i.sah.medi.1.1.5@gmail.com</a>
<a href=""mailto:idri.sah.m.e.d.i.115@gmail.com"">idri.sah.m.e.d.i.115@gmail.com</a>
<a href=""mailto:idr.i.sahme.di1.15@gmail.com"">idr.i.sahme.di1.15@gmail.com</a>
<a href=""mailto:i.d.ri.s.ah.m.e.di.1.1.5@gmail.com"">i.d.ri.s.ah.m.e.di.1.1.5@gmail.com</a>
<a href=""mailto:id.ri.s.a.hme.di.1.15@gmail.com"">id.ri.s.a.hme.di.1.15@gmail.com</a>
<a href=""mailto:id.risa.hmed.i.115@gmail.com"">id.risa.hmed.i.115@gmail.com</a>
<a href=""mailto:idris.a.hme.di115@gmail.com"">idris.a.hme.di115@gmail.com</a>
<a href=""mailto:idrisa.hme.d.i1.15@gmail.com"">idrisa.hme.d.i1.15@gmail.com</a>
<a href=""mailto:id.ris.ahmedi.115@gmail.com"">id.ris.ahmedi.115@gmail.com</a>
<a href=""mailto:id.risa.hm.e.di1.1.5@gmail.com"">id.risa.hm.e.di1.1.5@gmail.com</a>
<a href=""mailto:id.risahm.e.di11.5@gmail.com"">id.risahm.e.di11.5@gmail.com</a>
<a href=""mailto:i.dr.i.s.a.hme.di1.1.5@gmail.com"">i.dr.i.s.a.hme.di1.1.5@gmail.com</a>
<a href=""mailto:idrisa.hm.e.d.i.1.15@gmail.com"">idrisa.hm.e.d.i.1.15@gmail.com</a>
<a href=""mailto:i.dr.is.a.hme.d.i.115@gmail.com"">i.dr.is.a.hme.d.i.115@gmail.com</a>
<a href=""mailto:idr.i.sa.hme.di.11.5@gmail.com"">idr.i.sa.hme.di.11.5@gmail.com</a>
<a href=""mailto:i.d.r.i.sah.m.edi1.1.5@gmail.com"">i.d.r.i.sah.m.edi1.1.5@gmail.com</a>
<a href=""mailto:id.r.i.sa.hm.e.d.i.115@gmail.com"">id.r.i.sa.hm.e.d.i.115@gmail.com</a>
<a href=""mailto:i.dr.i.s.ahme.d.i.1.1.5@gmail.com"">i.dr.i.s.ahme.d.i.1.1.5@gmail.com</a>
<a href=""mailto:idr.i.sah.m.edi1.15@gmail.com"">idr.i.sah.m.edi1.15@gmail.com</a>
<a href=""mailto:i.d.r.is.a.h.m.e.d.i.1.1.5@gmail.com"">i.d.r.is.a.h.m.e.d.i.1.1.5@gmail.com</a>
<a href=""mailto:id.risah.medi1.15@gmail.com"">id.risah.medi1.15@gmail.com</a>
<a href=""mailto:id.ri.sa.hme.d.i1.15@gmail.com"">id.ri.sa.hme.d.i1.15@gmail.com</a>
<a href=""mailto:id.r.i.s.ah.m.edi.115@gmail.com"">id.r.i.s.ah.m.edi.115@gmail.com</a>
<a href=""mailto:idri.sa.h.me.d.i.115@gmail.com"">idri.sa.h.me.d.i.115@gmail.com</a>
<a href=""mailto:i.dr.is.ah.m.e.di115@gmail.com"">i.dr.is.ah.m.e.di115@gmail.com</a>
<a href=""mailto:i.d.ri.sa.h.med.i1.15@gmail.com"">i.d.ri.sa.h.med.i1.15@gmail.com</a>
<a href=""mailto:i.dr.i.sa.h.med.i.1.1.5@gmail.com"">i.dr.i.sa.h.med.i.1.1.5@gmail.com</a>
<a href=""mailto:idr.i.s.ahm.e.di1.15@gmail.com"">idr.i.s.ahm.e.di1.15@gmail.com</a>
<a href=""mailto:i.dris.a.hme.di1.15@gmail.com"">i.dris.a.hme.di1.15@gmail.com</a>
<a href=""mailto:id.risahmedi.11.5@gmail.com"">id.risahmedi.11.5@gmail.com</a>
<a href=""mailto:id.r.i.s.ah.m.edi.1.1.5@gmail.com"">id.r.i.s.ah.m.edi.1.1.5@gmail.com</a>
<a href=""mailto:id.ris.ahm.e.di1.1.5@gmail.com"">id.ris.ahm.e.di1.1.5@gmail.com</a>
<a href=""mailto:id.r.i.sa.h.med.i.1.15@gmail.com"">id.r.i.sa.h.med.i.1.15@gmail.com</a>
<a href=""mailto:id.r.i.sa.h.med.i.115@gmail.com"">id.r.i.sa.h.med.i.115@gmail.com</a>
<a href=""mailto:i.drisah.me.di.1.15@gmail.com"">i.drisah.me.di.1.15@gmail.com</a>
<a href=""mailto:idri.sahm.e.di.115@gmail.com"">idri.sahm.e.di.115@gmail.com</a>
<a href=""mailto:idri.sah.me.di.1.15@gmail.com"">idri.sah.me.di.1.15@gmail.com</a>
<a href=""mailto:idr.i.sa.h.me.di.11.5@gmail.com"">idr.i.sa.h.me.di.11.5@gmail.com</a>
<a href=""mailto:idr.i.sa.hm.ed.i1.1.5@gmail.com"">idr.i.sa.hm.ed.i1.1.5@gmail.com</a>
<a href=""mailto:i.d.ri.s.ah.m.edi.1.1.5@gmail.com"">i.d.ri.s.ah.m.edi.1.1.5@gmail.com</a>
<a href=""mailto:i.d.ri.s.ah.medi.11.5@gmail.com"">i.d.ri.s.ah.medi.11.5@gmail.com</a>
<a href=""mailto:id.risah.m.ed.i115@gmail.com"">id.risah.m.ed.i115@gmail.com</a>
<a href=""mailto:idrisahm.e.d.i11.5@gmail.com"">idrisahm.e.d.i11.5@gmail.com</a>
<a href=""mailto:idr.i.s.a.h.med.i1.15@gmail.com"">idr.i.s.a.h.med.i1.15@gmail.com</a>
<a href=""mailto:idrisahm.e.di115@gmail.com"">idrisahm.e.di115@gmail.com</a>
<a href=""mailto:i.dri.s.ahme.di115@gmail.com"">i.dri.s.ahme.di115@gmail.com</a>
<a href=""mailto:i.dr.i.s.ahm.ed.i1.15@gmail.com"">i.dr.i.s.ahm.ed.i1.15@gmail.com</a>
<a href=""mailto:i.d.r.i.sa.h.me.d.i.1.1.5@gmail.com"">i.d.r.i.sa.h.me.d.i.1.1.5@gmail.com</a>
<a href=""mailto:i.dr.is.a.hm.ed.i11.5@gmail.com"">i.dr.is.a.hm.ed.i11.5@gmail.com</a>
<a href=""mailto:i.d.ri.sahm.e.di1.15@gmail.com"">i.d.ri.sahm.e.di1.15@gmail.com</a>
<a href=""mailto:id.risahm.ed.i115@gmail.com"">id.risahm.ed.i115@gmail.com</a>
<a href=""mailto:i.dr.isahme.di115@gmail.com"">i.dr.isahme.di115@gmail.com</a>
<a href=""mailto:i.dr.isa.hm.edi.1.1.5@gmail.com"">i.dr.isa.hm.edi.1.1.5@gmail.com</a>
<a href=""mailto:idris.a.h.m.edi11.5@gmail.com"">idris.a.h.m.edi11.5@gmail.com</a>
<a href=""mailto:idri.s.a.h.m.e.d.i.1.1.5@gmail.com"">idri.s.a.h.m.e.d.i.1.1.5@gmail.com</a>
<a href=""mailto:i.dr.isah.m.e.di.11.5@gmail.com"">i.dr.isah.m.e.di.11.5@gmail.com</a>
<a href=""mailto:idri.sa.h.m.e.di11.5@gmail.com"">idri.sa.h.m.e.di11.5@gmail.com</a>
<a href=""mailto:i.d.r.i.s.a.h.med.i11.5@gmail.com"">i.d.r.i.s.a.h.med.i11.5@gmail.com</a>
<a href=""mailto:i.dr.i.sa.hm.ed.i.1.1.5@gmail.com"">i.dr.i.sa.hm.ed.i.1.1.5@gmail.com</a>
<a href=""mailto:i.d.r.is.ah.med.i.11.5@gmail.com"">i.d.r.is.ah.med.i.11.5@gmail.com</a>
<a href=""mailto:i.dr.i.s.ah.medi1.1.5@gmail.com"">i.dr.i.s.ah.medi1.1.5@gmail.com</a>
<a href=""mailto:i.d.risah.medi.11.5@gmail.com"">i.d.risah.medi.11.5@gmail.com</a>
<a href=""mailto:id.r.i.s.a.hm.ed.i1.1.5@gmail.com"">id.r.i.s.a.hm.ed.i1.1.5@gmail.com</a>
<a href=""mailto:i.dr.is.a.hme.di1.15@gmail.com"">i.dr.is.a.hme.di1.15@gmail.com</a>
<a href=""mailto:i.d.risa.hm.e.d.i.11.5@gmail.com"">i.d.risa.hm.e.d.i.11.5@gmail.com</a>
<a href=""mailto:id.r.i.sa.hme.d.i11.5@gmail.com"">id.r.i.sa.hme.d.i11.5@gmail.com</a>
<a href=""mailto:id.ris.ahme.d.i11.5@gmail.com"">id.ris.ahme.d.i11.5@gmail.com</a>
<a href=""mailto:i.d.ri.sahme.di.115@gmail.com"">i.d.ri.sahme.di.115@gmail.com</a>
<a href=""mailto:i.dri.sahme.di.1.1.5@gmail.com"">i.dri.sahme.di.1.1.5@gmail.com</a>
<a href=""mailto:id.ris.a.hm.ed.i.11.5@gmail.com"">id.ris.a.hm.ed.i.11.5@gmail.com</a>
<a href=""mailto:i.d.ri.s.ahme.di115@gmail.com"">i.d.ri.s.ahme.di115@gmail.com</a>
<a href=""mailto:idr.i.sahm.edi1.15@gmail.com"">idr.i.sahm.edi1.15@gmail.com</a>
<a href=""mailto:i.drisa.h.m.e.di11.5@gmail.com"">i.drisa.h.m.e.di11.5@gmail.com</a>
<a href=""mailto:id.risa.hmedi.11.5@gmail.com"">id.risa.hmedi.11.5@gmail.com</a>
<a href=""mailto:idr.is.ahme.d.i.1.1.5@gmail.com"">idr.is.ahme.d.i.1.1.5@gmail.com</a>
<a href=""mailto:idrisahm.e.d.i1.15@gmail.com"">idrisahm.e.d.i1.15@gmail.com</a>
<a href=""mailto:i.dr.isah.me.di1.1.5@gmail.com"">i.dr.isah.me.di1.1.5@gmail.com</a>
<a href=""mailto:id.ris.a.hmed.i.1.1.5@gmail.com"">id.ris.a.hmed.i.1.1.5@gmail.com</a>
<a href=""mailto:id.ri.sah.m.e.d.i.115@gmail.com"">id.ri.sah.m.e.d.i.115@gmail.com</a>
<a href=""mailto:i.dri.s.a.h.me.di1.15@gmail.com"">i.dri.s.a.h.me.di1.15@gmail.com</a>
<a href=""mailto:idr.i.s.a.hm.e.di.115@gmail.com"">idr.i.s.a.hm.e.di.115@gmail.com</a>
<a href=""mailto:idrisa.h.m.ed.i.115@gmail.com"">idrisa.h.m.ed.i.115@gmail.com</a>
<a href=""mailto:id.r.i.s.a.hm.ed.i.115@gmail.com"">id.r.i.s.a.hm.ed.i.115@gmail.com</a>
<a href=""mailto:id.r.isa.hme.di11.5@gmail.com"">id.r.isa.hme.di11.5@gmail.com</a>
<a href=""mailto:idri.s.ahmedi1.15@gmail.com"">idri.s.ahmedi1.15@gmail.com</a>
<a href=""mailto:id.ri.sa.h.m.ed.i11.5@gmail.com"">id.ri.sa.h.m.ed.i11.5@gmail.com</a>
<a href=""mailto:i.dri.s.ahm.e.d.i.1.1.5@gmail.com"">i.dri.s.ahm.e.d.i.1.1.5@gmail.com</a>
<a href=""mailto:idr.isa.h.med.i11.5@gmail.com"">idr.isa.h.med.i11.5@gmail.com</a>
<a href=""mailto:i.dris.ahm.e.d.i1.15@gmail.com"">i.dris.ahm.e.d.i1.15@gmail.com</a>
<a href=""mailto:i.dri.s.a.h.m.e.di1.15@gmail.com"">i.dri.s.a.h.m.e.di1.15@gmail.com</a>
<a href=""mailto:i.d.r.i.s.ah.m.e.di11.5@gmail.com"">i.d.r.i.s.ah.m.e.di11.5@gmail.com</a>
<a href=""mailto:id.r.is.a.h.m.edi1.15@gmail.com"">id.r.is.a.h.m.edi1.15@gmail.com</a>
<a href=""mailto:i.d.r.i.sa.h.m.edi.11.5@gmail.com"">i.d.r.i.sa.h.m.edi.11.5@gmail.com</a>
<a href=""mailto:id.ri.sahmedi11.5@gmail.com"">id.ri.sahmedi11.5@gmail.com</a>
<a href=""mailto:id.r.is.a.hmedi.115@gmail.com"">id.r.is.a.hmedi.115@gmail.com</a>
<a href=""mailto:id.r.i.s.a.h.med.i11.5@gmail.com"">id.r.i.s.a.h.med.i11.5@gmail.com</a>
<a href=""mailto:idrisa.hme.di.11.5@gmail.com"">idrisa.hme.di.11.5@gmail.com</a>
<a href=""mailto:i.d.r.isa.h.me.di.115@gmail.com"">i.d.r.isa.h.me.di.115@gmail.com</a>
<a href=""mailto:i.d.r.isa.h.med.i1.15@gmail.com"">i.d.r.isa.h.med.i1.15@gmail.com</a>
<a href=""mailto:i.d.r.isahm.ed.i1.15@gmail.com"">i.d.r.isahm.ed.i1.15@gmail.com</a>
<a href=""mailto:i.drisa.h.m.e.d.i1.15@gmail.com"">i.drisa.h.m.e.d.i1.15@gmail.com</a>
<a href=""mailto:i.d.ri.s.ah.me.di.115@gmail.com"">i.d.ri.s.ah.me.di.115@gmail.com</a>
<a href=""mailto:id.risa.hmed.i11.5@gmail.com"">id.risa.hmed.i11.5@gmail.com</a>
<a href=""mailto:id.risahm.edi115@gmail.com"">id.risahm.edi115@gmail.com</a>
<a href=""mailto:i.dr.i.sa.hm.e.di.1.1.5@gmail.com"">i.dr.i.sa.hm.e.di.1.1.5@gmail.com</a>
<a href=""mailto:i.d.ri.s.ahm.ed.i.11.5@gmail.com"">i.d.ri.s.ahm.ed.i.11.5@gmail.com</a>
<a href=""mailto:idr.i.sa.hm.e.d.i.11.5@gmail.com"">idr.i.sa.hm.e.d.i.11.5@gmail.com</a>
<a href=""mailto:i.d.r.i.s.a.h.m.e.di115@gmail.com"">i.d.r.i.s.a.h.m.e.di115@gmail.com</a>
<a href=""mailto:idr.i.s.a.hm.e.d.i.11.5@gmail.com"">idr.i.s.a.hm.e.d.i.11.5@gmail.com</a>
<a href=""mailto:i.d.r.is.a.h.m.e.d.i.115@gmail.com"">i.d.r.is.a.h.m.e.d.i.115@gmail.com</a>
<a href=""mailto:i.dr.isa.hm.ed.i1.1.5@gmail.com"">i.dr.isa.hm.ed.i1.1.5@gmail.com</a>
<a href=""mailto:i.d.risah.m.ed.i.1.1.5@gmail.com"">i.d.risah.m.ed.i.1.1.5@gmail.com</a>
<a href=""mailto:idr.i.sa.hme.di1.1.5@gmail.com"">idr.i.sa.hme.di1.1.5@gmail.com</a>
<a href=""mailto:i.d.r.isa.hm.edi.1.15@gmail.com"">i.d.r.isa.hm.edi.1.15@gmail.com</a>
<a href=""mailto:id.r.isahmedi115@gmail.com"">id.r.isahmedi115@gmail.com</a>
<a href=""mailto:id.r.is.ah.medi11.5@gmail.com"">id.r.is.ah.medi11.5@gmail.com</a>
<a href=""mailto:i.d.ri.s.ahm.ed.i11.5@gmail.com"">i.d.ri.s.ahm.ed.i11.5@gmail.com</a>
<a href=""mailto:idri.sa.h.med.i.11.5@gmail.com"">idri.sa.h.med.i.11.5@gmail.com</a>
<a href=""mailto:i.d.ri.s.ahmed.i1.15@gmail.com"">i.d.ri.s.ahmed.i1.15@gmail.com</a>
<a href=""mailto:idr.i.sa.hm.e.di.1.15@gmail.com"">idr.i.sa.hm.e.di.1.15@gmail.com</a>
<a href=""mailto:id.r.i.sah.m.e.d.i.115@gmail.com"">id.r.i.sah.m.e.d.i.115@gmail.com</a>
<a href=""mailto:idri.s.ah.m.e.di.115@gmail.com"">idri.s.ah.m.e.di.115@gmail.com</a>
<a href=""mailto:idri.sah.m.e.di.1.15@gmail.com"">idri.sah.m.e.di.1.15@gmail.com</a>
<a href=""mailto:i.d.r.i.s.a.hme.di.115@gmail.com"">i.d.r.i.s.a.hme.di.115@gmail.com</a>
<a href=""mailto:id.r.is.ah.m.ed.i1.15@gmail.com"">id.r.is.ah.m.ed.i1.15@gmail.com</a>
<a href=""mailto:idri.s.ah.m.edi115@gmail.com"">idri.s.ah.m.edi115@gmail.com</a>
<a href=""mailto:i.d.r.isa.h.m.e.di.1.1.5@gmail.com"">i.d.r.isa.h.m.e.di.1.1.5@gmail.com</a>
<a href=""mailto:id.risah.me.d.i11.5@gmail.com"">id.risah.me.d.i11.5@gmail.com</a>
<a href=""mailto:idr.i.s.a.h.m.e.d.i.1.1.5@gmail.com"">idr.i.s.a.h.m.e.d.i.1.1.5@gmail.com</a>
<a href=""mailto:idris.a.hm.ed.i.1.1.5@gmail.com"">idris.a.hm.ed.i.1.1.5@gmail.com</a>
<a href=""mailto:i.d.ri.sah.me.di11.5@gmail.com"">i.d.ri.sah.me.di11.5@gmail.com</a>
<a href=""mailto:id.ri.sah.m.ed.i1.15@gmail.com"">id.ri.sah.m.ed.i1.15@gmail.com</a>
<a href=""mailto:i.dr.i.sah.m.ed.i11.5@gmail.com"">i.dr.i.sah.m.ed.i11.5@gmail.com</a>
<a href=""mailto:i.dris.a.hme.di11.5@gmail.com"">i.dris.a.hme.di11.5@gmail.com</a>
<a href=""mailto:i.d.r.isah.m.e.d.i11.5@gmail.com"">i.d.r.isah.m.e.d.i11.5@gmail.com</a>
<a href=""mailto:idri.s.a.h.me.di.1.1.5@gmail.com"">idri.s.a.h.me.di.1.1.5@gmail.com</a>"
YsfPm8wy,Untitled,Derga,C++,Wednesday 4th of October 2023 12:28:18 PM CDT,"#include <iostream>
#include <iomanip>

using namespace std;

int* Compress(int* elements, int elements_count, int k)
{
	int last_pos = 0;
	int new_pos = 0;
	while (last_pos < elements_count)
	{
		if ((last_pos + 1) % k == 0 || elements[last_pos] == 0)
		{
			last_pos++;
			continue;
		}

		elements[new_pos] = elements[last_pos];
		new_pos++;
		last_pos++;
	}
	while (new_pos < elements_count)
	{
		elements[new_pos] = 0;
		++new_pos;
	}

	return elements;
}

void Print(int* elements, int elements_count) {
	for (int i = 0; i < elements_count; ++i)
	{
		cout << setw(2) << elements[i] << ' ';
	}
	cout << '\n';
}

int main()
{
	int k, elements_count;
	cin >> k >> elements_count;

	auto elements = new int[elements_count];
	for (int i = 0; i < elements_count; ++i)
	{
		cin >> elements[i];
	}

	Print(elements, elements_count);
	elements = Compress(elements, elements_count, k);
	Print(elements, elements_count);
	
	delete[] elements;
}

/*
test1
3
10
1 2 3 4 5 6 7 8 9 10

1 2 4 5 7 8 10 0 0 0

test2
2
10
1 2 3 4 5 6 7 8 9 10

1 3 5 7 9 0 0 0 0 0

test1
1
10
1 2 3 4 5 6 7 8 9 10

0 0 0 0 0 0 0 0 0 0

test4
5
3
1 2 3

1 2 3

test5
5
0

test6
3
10
0 1 2 3 4 0 6 7 8 9

1 3 4 6 7 9 0 0 0 0
*/"
DjhpzENb,Untitled,tomdodd4598,Java,Wednesday 4th of October 2023 12:03:36 PM CDT,"import java.util.*;

import net.minecraft.item.ItemStack;
import net.minecraft.util.NonNullList;

public class InventoryStackList extends NonNullList<ItemStack> {
	
	public InventoryStackList() {
		super();
	}
	
	public InventoryStackList(List<ItemStack> other) {
		super(other, null);
	}
	
	@Override
	public List<ItemStack> subList(int fromIndex, int toIndex) {
		return new SubList<>(this, fromIndex, toIndex);
	}
	
	protected class SubList<E> extends NonNullList<E> {
		
		private final AbstractList<E> internal;
		private final int offset;
		private int size;
		
		SubList(AbstractList<E> list, int fromIndex, int toIndex) {
			if (fromIndex < 0) {
				throw new IndexOutOfBoundsException(""fromIndex = "" + fromIndex);
			}
			else if (toIndex > list.size()) {
				throw new IndexOutOfBoundsException(""toIndex = "" + toIndex);
			}
			else if (fromIndex > toIndex) {
				throw new IllegalArgumentException(""fromIndex("" + fromIndex + "") > toIndex("" + toIndex + "")"");
			}
			internal = list;
			offset = fromIndex;
			size = toIndex - fromIndex;
			// this.modCount = internal.modCount;
		}
		
		@Override
		public E set(int index, E element) {
			rangeCheck(index);
			checkForComodification();
			return internal.set(index + offset, element);
		}
		
		@Override
		public E get(int index) {
			rangeCheck(index);
			checkForComodification();
			return internal.get(index + offset);
		}
		
		@Override
		public int size() {
			checkForComodification();
			return size;
		}
		
		@Override
		public void add(int index, E element) {
			rangeCheckForAdd(index);
			checkForComodification();
			internal.add(index + offset, element);
			// this.modCount = internal.modCount;
			++size;
		}
		
		@Override
		public E remove(int index) {
			rangeCheck(index);
			checkForComodification();
			E result = internal.remove(index + offset);
			// this.modCount = internal.modCount;
			--size;
			return result;
		}
		
		@Override
		protected void removeRange(int fromIndex, int toIndex) {
			/*checkForComodification();
			removeRangeMethod.invoke(internal, fromIndex + offset, toIndex + offset);
			// this.modCount = internal.modCount;
			size -= (toIndex - fromIndex);*/
			throw new UnsupportedOperationException();
		}
		
		@Override
		public boolean addAll(Collection<? extends E> c) {
			return addAll(size, c);
		}
		
		@Override
		public boolean addAll(int index, Collection<? extends E> c) {
			rangeCheckForAdd(index);
			int cSize = c.size();
			if (cSize == 0) {
				return false;
			}
			
			checkForComodification();
			internal.addAll(offset + index, c);
			// this.modCount = internal.modCount;
			size += cSize;
			return true;
		}
		
		@Override
		public Iterator<E> iterator() {
			return listIterator();
		}
		
		@Override
		public ListIterator<E> listIterator(final int index) {
			checkForComodification();
			rangeCheckForAdd(index);
			
			return new ListIterator<E>() {
				
				private final ListIterator<E> internalIter = internal.listIterator(index + offset);
				
				@Override
				public boolean hasNext() {
					return nextIndex() < size;
				}
				
				@Override
				public E next() {
					if (hasNext()) {
						return internalIter.next();
					}
					else {
						throw new NoSuchElementException();
					}
				}
				
				@Override
				public boolean hasPrevious() {
					return previousIndex() >= 0;
				}
				
				@Override
				public E previous() {
					if (hasPrevious()) {
						return internalIter.previous();
					}
					else {
						throw new NoSuchElementException();
					}
				}
				
				@Override
				public int nextIndex() {
					return internalIter.nextIndex() - offset;
				}
				
				@Override
				public int previousIndex() {
					return internalIter.previousIndex() - offset;
				}
				
				@Override
				public void remove() {
					internalIter.remove();
					// SubList.this.modCount = internal.modCount;
					--size;
				}
				
				@Override
				public void set(E e) {
					internalIter.set(e);
				}
				
				@Override
				public void add(E e) {
					internalIter.add(e);
					// SubList.this.modCount = internal.modCount;
					++size;
				}
			};
		}
		
		@Override
		public List<E> subList(int fromIndex, int toIndex) {
			return new SubList<>(this, fromIndex, toIndex);
		}
		
		private void rangeCheck(int index) {
			if (index < 0 || index >= size) {
				throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
			}
		}
		
		private void rangeCheckForAdd(int index) {
			if (index < 0 || index > size) {
				throw new IndexOutOfBoundsException(outOfBoundsMsg(index));
			}
		}
		
		private String outOfBoundsMsg(int index) {
			return ""Index: "" + index + "", Size: "" + size;
		}
		
		private void checkForComodification() {
			/*if (this.modCount != internal.modCount) {
				throw new ConcurrentModificationException();
			}*/
		}
	}
}
"
3j1r1eMZ,Untitled,dllbridge,C,Wednesday 4th of October 2023 12:03:16 PM CDT,"

#include   <stdio.h>
#include    <time.h>
#include  <stdlib.h>
#include  <iostream>

using namespace std;


template <class T> 
void foo(T &);

/////////////////////////////////////////////////////////////
int main()
{
	
    char sz[20] = ""Paramount Pictures."";  

  
	foo(sz[11]);
}


template <typename T>                                //<class >
//////////////////////////////////////////////////////////////
void foo(T &a)
{

	T *pn = &a;
		 
	for (int i = -11; i < 10; i++)
	{
		//printf(""%d "", pn[i]);

        cout << pn[i] << "" "";
	}
}







/*
#include   <stdio.h>
#include    <time.h>
#include  <stdlib.h>
#include  <iostream>

using namespace std;


template <class T> 
void foo(T &);

/////////////////////////////////////////////////////////////
int main()
{
	
    int a[20];    //srand(time(0));
    
    for(int i = 0; i<20;i++)
	{
		a[i] = rand()%200;
		
		
		printf(""%d "", a[i]);
    }   
	
	printf(""\n""       );   	
  
	foo(a[11]);
}


template <typename T>                                //<class >
//////////////////////////////////////////////////////////////
void foo(T &a)
{

	T *pn = &a;
		 
	for (int i = -11; i < 10; i++)
	{
		//printf(""%d "", pn[i]);

        cout << pn[i] << "" "";
	}
	
}
*/
























/*
#include   <stdio.h>
#include  <locale.h>
#include  <time.h>
#include  <stdlib.h>


void foo(int &);
/////////////////////////////////////////////////////////////
int main()
{
	
    int a [20];
    
    //srand(time(0));
    
    for(int i = 0; i<20;i++)
	{
		a[i] = rand()%200;
		
		
		printf(""%d "", a[i]);
		
    }
    	printf(""\n""       );
  
	foo(a[11]);
}

//////////////////////////////////////////////////////////////
void foo(int &a)
{

	int *pn = &a;
		 
	for (int i = -11; i < 0; i++)
	{
		printf(""%d "", pn[i]);
	}
	
}


*/




"
umzf3UTq,Untitled,dcardin14,Python,Wednesday 4th of October 2023 11:59:02 AM CDT,"from docx import Document
import difflib

# Load the original document and the template
original_doc = Document(""original_document.docx"")
template_doc = Document(""template_document.docx"")

# Extract text from both documents
original_text = ""\n"".join([para.text for para in original_doc.paragraphs])
template_text = ""\n"".join([para.text for para in template_doc.paragraphs])

# Compare text and generate differences
differ = difflib.Differ()
differences = list(differ.compare(template_text.splitlines(), original_text.splitlines()))

# Create a new Word document to show differences with less opaque highlighting
diff_doc = Document()
for line in differences:
    if line.startswith('- '):
        # Text is in the template but not in the original
        run = diff_doc.add_paragraph().add_run(line[2:])
        font = run.font
        font.highlight_color = 0.5  # Set the highlight color to be less opaque (e.g., 0.5 for semi-transparent yellow)
    elif line.startswith('+ '):
        # Text is in the original but not in the template
        run = diff_doc.add_paragraph().add_run(line[2:])
        font = run.font
        font.highlight_color = 0.5  # Set the highlight color to be less opaque (e.g., 0.5 for semi-transparent green)
    else:
        # Text is the same in both documents
        diff_doc.add_paragraph(line[2:])

# Save the difference document
diff_doc.save(""differences_document.docx"")

"
4xrSbLdx,Untitled,youuw,C#,Wednesday 4th of October 2023 11:55:43 AM CDT,"        public struct Produkt
        {
            public string nazwa { get; }
            public int cena { get; }
            public int do_kiedy { get; }

            
            public Produkt(string nazwa, int cena, int do_kiedy)
            {
                this.nazwa = nazwa;
                this.cena = cena;
                this.do_kiedy = do_kiedy;
            }
        }
        public static void Main(string[] args)
        {
            Produkt[] produkty = 
            { 
                new Produkt(""nazwa"", 30, 10),
                new Produkt(""nazwa2"", 20, 5), 
                new Produkt(""nazwa3"", 10, 2), 
                new Produkt(""nazwa4"", 15, 7), 
                new Produkt(""nazwa5"", 11, 10) 
            };

            foreach(Produkt p in produkty)
            {
                switch(p.do_kiedy)
                {
                    case 10:
                    case 7:
                        //obliczenia dla 10 i 7 dni
                        break;
                    case 5:
                    case 2:
                        //obliczenia dla 5 i 2 dni
                        break;
                    default:
                        new System.Exception(""Nieznany czas"");
                        break;
                }
            }"
XJkqrkVB,Untitled,vatman,C++,Wednesday 4th of October 2023 11:44:08 AM CDT,"#include <iostream>
#include <vector>
#include <cmath>
#include <iomanip>

// Определение функции, которую вы хотите интегрировать
double f(const double &x, const double &y)
{
    // Здесь должна быть ваша функция
    return y*y/(1+x*x*x*x)+y-y*y*y*std::sin(x*10);
}

// Метод Рунге-Кутты четвертого порядка
double rungeKuttaStep(const double &x, const double &y,const double &h)
{
    double k1 = h * f(x, y);
    double k2 = h * f(x + h / 2, y + k1 / 2);
    double k3 = h * f(x + h / 2, y + k2 / 2);
    double k4 = h * f(x + h, y + k3);

    double y_next = y + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
    return y_next;
}

void rungeKutta(const double &x0,const double &y0,const double &h,const double &xmax,const int &maxSteps)
{
    int steps = 0;
    double x = x0;
    double y = y0;

    while (x < xmax && steps < maxSteps) {
        double k1 = h * f(x, y);
        double k2 = h * f(x + h / 2, y + k1 / 2);
        double k3 = h * f(x + h / 2, y + k2 / 2);
        double k4 = h * f(x + h, y + k3);

        y = y + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
        x = x + h;

        std::cout << steps << '\t' << x<< '\t' << y << std::endl;

        ++steps;
    }
}

void rungeKuttaAdaptive(const double &x0,const double &y0,const double &h0,const double &xmax,const double &tolerance,const double &edge,const int &maxSteps)
 {
    double x = x0;
    double y = y0;
    double h = h0;
    double y1;
    double y2;
    int c1 = 0;
    int c2 = 0;
    int sumC = 0;
    int steps = 0;
    int a=15;
    std::cout <<std::setw(4) << ""шаг"" <<std::setw(a) <<""x"" <<std::setw(a)<< ""y"" <<std::setw(a)<< ""y^""<<std::setw(a) << ""|y-y^|""
            <<std::setw(a)<< ""E"" <<std::setw(a)<<""h"" <<std::setw(a)<< ""c1"" <<std::setw(a)<< ""c2"" << std::endl;

    while (x < xmax&& std::abs(x-xmax)>edge&&steps < maxSteps)
    {

        // Делаем два шага методом Рунге-Кутты с h и h/2
        y1 = rungeKuttaStep(x, y, h);
        y2 = rungeKuttaStep(x, y, h / 2);
        y2 = rungeKuttaStep(x + h / 2, y2, h / 2);

        // Вычисляем оценку локальной погрешности
        double num=std::abs(y1 - y2);
        double error = num/15;

        // Проверяем, соответствует ли оценка погрешности заданной точности
        if (error>tolerance)
        {
            h=h/2;
            ++steps;
            ++c1;
        }
        else if(error< tolerance/64)
        {
            //int a=15;
            y = y1;
            x += h;
            std::cout <<std::setw(4) << steps+1<<std::setw(a) << x <<std::setw(a)<< y <<std::setw(a)<< y2<<std::setw(a) << num
            <<std::setw(a)<< error <<std::setw(a)<< h <<std::setw(a)<< c1 <<std::setw(a)<< 1 << std::endl;
            h*=2;
            sumC=sumC+c1+1;
            c1=0;
            c2=0;
            ++steps;
        }
        else
        {
            //int a=15;
            y = y1;
            x += h;
            std::cout <<std::setw(4) << steps+1<<std::setw(a) << x <<std::setw(a)<< y <<std::setw(a)<< y2<<std::setw(a) << num
            <<std::setw(a)<< error <<std::setw(a)<< h <<std::setw(a)<< c1 <<std::setw(a)<< 1 << std::endl;
            sumC=sumC+c1;
            c1=0;
            c2=0;
            ++steps;
        }
    }
}

int main()
{
    setlocale(LC_ALL, ""Russian"");
    double x0 = 0.0;            // Начальная точка x
    double y0 = 10.0;            // Начальное значение y
    double h0 = 0.01;            // Начальный размер шага
    double xmax = 20.0;          // Граница x
    double tolerance = 1e-6;   // Заданная точность
    double edge = 0.01;
    int maxSteps = 1000;         // Максимальное количество шагов

     // Ввод значений из консоли
   /* std::cout << ""Введите начальную точку x: "";
    std::cin >> x0;

    std::cout << ""Введите начальное значение y: "";
    std::cin >> y0;

    std::cout << ""Введите начальный размер шага h: "";
    std::cin >> h0;

    std::cout << ""Введите границу x: "";
    std::cin >> xmax;

    std::cout << ""Введите заданную точность tolerance: "";
    std::cin >> tolerance;

    std::cout << ""Введите значение edge: "";
    std::cin >> edge;

    std::cout << ""Введите максимальное количество шагов maxSteps: "";
    std::cin >> maxSteps;*/


     //
    rungeKuttaAdaptive(x0, y0, h0, xmax, tolerance, edge,maxSteps);
    //rungeKutta(x0, y0, h0, xmax, maxSteps);

    return 0;
}
"
ABsUXCpu,arcade_spawning,acclivity,Python,Wednesday 4th of October 2023 11:30:11 AM CDT,"    def enemy_spawns(self):

        if len(self.enemy_sprite_list1) == 0:
            enemy_count1 = random.randint(18, 35)  # To set a random number of enemies to spawn (first row)

            for _ in range(enemy_count1):  # Populating the first row on enemies.
                self.enemy_sprite = Enemies()
                self.enemy_sprite_list1.append(self.enemy_sprite)

            for enemy in self.enemy_sprite_list1:  # Setting the positions of the first row of enemies.
                enemy.center_x = random.randrange(0 + enemy_radius / 2, WINDOW_WIDTH - enemy_radius / 2, enemy_radius)
                enemy.center_y = WINDOW_HEIGHT + enemy_radius * 2
                while arcade.check_for_collision_with_list(enemy,
                                                           self.enemy_sprite_list1):  # So that enemies don t spawn overlapped.
                    enemy.center_x = random.randrange(0 + enemy_radius / 2, WINDOW_WIDTH - enemy_radius / 2,
                                                      enemy_radius)

        for enemy1 in self.enemy_sprite_list1[0:1]:      ### Here we only need to look at one sprite in this list

            if enemy1.center_y <= WINDOW_HEIGHT / 2 and len(
                    self.enemy_sprite_list2) == 0:  # When the first row of enemy is at half screen (500) we create and spawn the second row.
                enemy_count2 = random.randint(18, 35)  # To set a random number of enemies to spawn (second row)

                for _ in range(enemy_count2):  # Populating the second row of enemies.
                    self.enemy_sprite = Enemies()
                    self.enemy_sprite_list2.append(self.enemy_sprite)

                for enemy2 in self.enemy_sprite_list2:  # Setting the positions of the second row of enemies.
                    enemy2.center_x = random.randrange(0 + enemy_radius / 2, WINDOW_WIDTH - enemy_radius / 2,
                                                       enemy_radius)
                    enemy2.center_y = WINDOW_HEIGHT + enemy_radius * 2
                    while arcade.check_for_collision_with_list(enemy2,
                                                               self.enemy_sprite_list2):  # So that enemies don t spawn overlapped.
                        enemy2.center_x = random.randrange(0 + enemy_radius / 2, WINDOW_WIDTH - enemy_radius / 2,
                                                           enemy_radius)

            if enemy1.center_y < 0:  # When the obstacles's center is below the screen
                for sp in self.enemy_sprite_list1:      ### one sprite from list1 hit bottom, so kill all of this list
                   del sp
                self.enemy_sprite_list1.clear()  # clear the sprite list.
                self.score_updated = False  # Current row's score can be updated again.

        for enemy2 in self.enemy_sprite_list2[0:1]:         ### Here we only need to look at one list2 enemy sprite

            if enemy2.center_y < 0:
                self.score_updated = False  # Current row's score can be updated again.
                for sp in self.enemy_sprite_list2:          ### One sprite hit bottom, so kill all of this list
                   del sp
                self.enemy_sprite_list2.clear()             ### move the clear() down to here

"
cFC4bJzC,Untitled,blonkm,Python,Wednesday 4th of October 2023 11:29:13 AM CDT,"import getpass
import time
import json
import random
import string
import hashlib

validlogin = {}  # this is where we store the dictionary of users and passwords
usersalts = {}  # this is where we store the dictionary of salted users and passwords
oldpass = {}  # this is where we store the old passwords of users so they dont use old passwords
try:  # check if the valid login file exists
    with open('validlogin.json') as f:
        validlogin = json.load(f)
except:  # if it doesn't exist it will be created
    with open('validlogin.json', 'w') as f:
        json.dump(validlogin, f)
try:  # check if the valid login file exists
    with open('usersalts.json') as R:
        usersalts = json.load(R)
except:  # if it doesn't exist it will be created
    with open('usersalts.json', 'w') as R:
        json.dump(usersalts, R)
try:  # check if the valid login file exists
    with open('oldpass.json') as R:
        oldpass = json.load(R)
except:  # if it doesn't exist it will be created
    with open('oldpass.json', 'w') as R:
        json.dump(oldpass, R)


def cls():  # this defining clear screen command so it can be called from anywhere
    print('\033c')


class LoginSystem:
    def __init__(self, username, password):
        self.username = username
        self.password = password

    def Login(self):  # this is where we check the dictionary if the username and passwords are correct
        for k, v in validlogin.items():
            if self.username in k:
                if self.username == k and self.password == v:
                    global Global_Username
                    Global_Username = self.username
                    cls()
                    print(f""Logged in as: {self.username}!"")
                    time.sleep(2)
                    cls()
                    return True
                else:
                    (cls)
                    print(""Username and password does not match"")
                    time.sleep(5)
                    (cls)
                    return False
            else:
                cls()
                print(""Username Does Not Exist"")
                time.sleep(5)
                cls()

    def Create_SaltedEncrypt(self):
        Ranint = str(random.randint(1000, 9999))
        RanLetter = random.choice(string.ascii_letters)
        RanLetter2 = random.choice(string.ascii_letters)
        RandomChar = (f""{RanLetter2}{Ranint}{RanLetter}"")
        usersalts[self.username] = RandomChar
        # and then the dictionary is written to the json file
        with open('usersalts.json', 'w') as R:
            json.dump(usersalts, R)
        RandomChar = (f""{Ranint}{RanLetter}"")
        self.password = (f""{self.password}{RandomChar}"")
        return

    def SaltedEncrypt(self, username, password):
        for k, v in usersalts.items():
            if username == k:
                password = (f""{password}{v}"")
                return

    def Pass_quirements(self, password):
        special_characters = (""!@#$%^&*()_-+=<>?/[]{}|"")
        length = len(password)
        if any(r.isupper() for r in password) and any(r.isdigit() for r in password) and any(r in special_characters for r in password) and length >= 8:
            return True
        else:
            print(
                ""password must contain at least one uppercase, number and a special character"")
            print('and longer than 8 character')
            time.sleep(5)
            cls()
            return False
        return

    def CreateUser(self, username, password):
        Username_nottaken = False
        while not Username_nottaken:  # this loop is to check if username is already taken
            cls()
            if username not in validlogin:
                Username_nottaken = True
                Matching_password = False
                while not Matching_password:  # this loop check if both passwords entered are the same
                    if self.Pass_quirements(password):
                        confirm_pass = getpass.getpass(
                            ""Please re-entern password: "")
                        if self.password == confirm_pass:
                            # encrypt the password and save it
                            self.Create_SaltedEncrypt(username, password)
                            change_pass_bytes = self.password.encode('utf-8')
                            encrypted_change_pass = hashlib.sha256(
                                change_pass_bytes).hexdigest()  # encrypt password and save
                            # if they are they are writen to the dictionary
                            validlogin[username] = encrypted_change_pass
                            # and then the dictionary is written to the json file
                            with open('validlogin.json', 'w') as f:
                                json.dump(validlogin, f)
                            oldpass[password] = encrypted_change_pass
                            # and then the dictionary is written to the json file
                            with open('oldpass.json', 'w') as f:
                                json.dump(oldpass, f)
                                Matching_password = True
                                return True
                        else:
                            cls()
                            print(""The password are not the same, please try again"")
                            time.sleep(2)
                            cls()
                            print(""Username: "", username)
            else:
                cls()
                print(""Username is already in use"")
                time.sleep(5)

    def LoginUser(self):  # defining login so it can be called back when changing passwords etc
        loged_in = False
        while not loged_in:
            cls()
            username = input('Please enter your username: ')
            cls()
            for k, v in usersalts.items():
                if username in k:
                    print(""Loging in as"", username)
                    password = getpass.getpass('Please enter your password: ')
                    self.SaltedEncrypt(username, password)
                    change_pass_bytes = password.encode('utf-8')
                    encrypted_change_pass = hashlib.sha256(
                        change_pass_bytes).hexdigest()  # encrypt password and save
                    if (self.Login(username, encrypted_change_pass)):
                        loged_in = True
                        return True
                else:
                    cls()
                    print('Username Does not exist')
                    time.sleep(2)
                    cls()

    def ChangingPassword(self):
        password = getpass.getpass('please enter your current password: ')
        self.SaltedEncrypt(Global_Username, password)
        Encrypted_Current_pass_bytes = password.encode('utf-8')
        Encryped_pass_Check = hashlib.sha256(
            Encrypted_Current_pass_bytes).hexdigest()
        if self.Login(Global_Username, Encryped_pass_Check):
            change_pass = getpass.getpass('please enter your new password: ')
            self.SaltedEncrypt(Global_Username, change_pass)
            password_check_bytes = change_pass.encode('utf-8')
            oldpass = hashlib.sha256(
                password_check_bytes).hexdigest()  # encrypt password
            if oldpass != Encryped_pass_Check:
                oldpass[Global_Username] += Encryped_pass_Check
                # and then the dictionary is written to the json file
                with open('oldpass.json', 'w') as f:
                    json.dump(oldpass, f)
                if self.Pass_quirements(change_pass):
                    check_pass = getpass.getpass(
                        'please re-enter your new password: ')
                    if change_pass == check_pass:
                        self.Create_SaltedEncrypt(Global_Username, change_pass)
                        change_pass_bytes = change_pass.encode('utf-8')
                        encrypted_change_pass = hashlib.sha256(
                            change_pass_bytes).hexdigest()  # encrypt password and save
                        validlogin[Global_Username] = encrypted_change_pass
                        # and then the dictionary is written to the json file
                        with open('validlogin.json', 'w') as f:
                            json.dump(validlogin, f)
                        return
            else:
                cls()
                print('Password has been user before')
                time.sleep(3)
                cls()
                return False
        else:
            print(""password is incorrect"")
            return

    def ReturnUsername(CurrentUser):
        CurrentUser = Global_Username
        return CurrentUser


def wait(x):
    time.sleep(x)


cls()
try:  # this is so the user doesnt get overwhemed if there's an error
    # main program //login
    questions = True
    signedUp = False
    loged_in = False
    while questions:
        issignedup = input(""are you signed up? yes or no: "")
        if issignedup == 'no':
            signedUp = False
            questions = False
        elif issignedup == 'yes':
            signedUp = True
            questions = False
        else:
            # if user type anything other then yes or no
            print(""Invalid input"")
            wait(2)
            cls()
    while not loged_in:  # this loop is for the login if user is not logged in it will keep looping until user is logged in
        #        issignedup= input(""are you signed up? yes or no: "")
        if not signedUp:  # if user not signed up call back Createuser function
            username = input(""Please enter your username:"")
            password = getpass.getpass(""Please enter your password: "")
            userlogin = LoginSystem(username, password)
            if userlogin.CreateUser(username, password):
                print(""User has been created"")
                loged_in = True
            else:
                print(""User has not been created"")
                wait(2)
                cls()
        elif signedUp:  # if user is signed up call back login function
            cls()
            if LoginSystem.LoginUser():
                loged_in = True
    # this is outside the loop it comes after the break's up top

    # Snoopy()
    print(""Congratulations, you have successfully logged in as:"",
          LoginSystem.ReturnUsername())
    PasswordChange = input(""Do you want to change your password? yes or no: "")

    while PasswordChange == ""yes"":
        if LoginSystem.ChangingPassword():
            print(""You have successfully changed your password"")
            break
        else:
            print(""Password has not been changed"")
    else:
        cls()
        # Snoopy()
        print(""Thanks for trying out my program."")
        wait(5)

except Exception:
    print(""Sorry, coder is still beginner"")"
x3J6HhVA,Untitled,geminilabs,PHP,Wednesday 4th of October 2023 11:28:55 AM CDT,"function glsr_create_carrier_term(): array {
    $dotNum = filter_input(INPUT_GET, 'dotNumber', FILTER_VALIDATE_INT);
    if (empty($dotNum)) {
        return []; // don't assign category if a dotNumber isn't requested
    }
    $termSlug = 'carrier_'.$dotNum;
    if ($term = term_exists($termSlug, glsr()->taxonomy)) {
        return $term;
    }
    $termName = glsr_get_carrier_name($dotNum);
    if (empty($termName)) {
        return glsr_create_fallack_carrier_term();
    }
    $term = wp_insert_term($termName, glsr()->taxonomy, ['slug' => $termSlug]);
    if (is_wp_error($term)) {
        glsr_log()->error($term->get_error_message());
        return glsr_create_fallack_carrier_term();
    }
    return $term;
}

function glsr_create_fallack_carrier_term(): array {
    $termName = 'Unknown Carrier';
    $termSlug = 'unknown_carrier';
    if ($term = term_exists($termSlug, glsr()->taxonomy)) {
        return $term;
    }
    return wp_insert_term($termName, glsr()->taxonomy, ['slug' => $termSlug]);
}

function glsr_get_carrier_name(int $dotNum): string {
    $apiUrl = 'https://mobile.fmcsa.dot.gov/qc/services/carriers/';
    $apiKey = 'e9d6c0cb17ee98addddfc81f8af610f035949f50';
    $url = sprintf('%s/%s/', untrailingslashit($apiUrl), $dotNum);
    $url = add_query_arg('webKey', $apiKey, $url);
    $response = wp_remote_get($url);
    if (is_wp_error($response)) {
        glsr_log()->error($response->get_error_message());
        return '';
    }
    if ('200' != ($statusCode = wp_remote_retrieve_response_code($response))) {
        glsr_log()->error(sprintf('Unable to connect to %s [%s]', $url, $statusCode));
        return '';
    }
    $body = json_decode(wp_remote_retrieve_body($response), true);
    return glsr_get($body, 'content.carrier.dbaName');
}

function glsr_set_carrier_assigned_terms(array $args): array {
    $term = glsr_create_carrier_term();
    if (!empty($term['term_id'])) {
        $args['assigned_terms'] = $term['term_id'];
    }
    return $args;
}

add_action('site-reviews/defaults/site-review', 'glsr_set_carrier_assigned_terms');
add_action('site-reviews/defaults/site-reviews', 'glsr_set_carrier_assigned_terms');
add_action('site-reviews/defaults/site-reviews-form', 'glsr_set_carrier_assigned_terms');
add_action('site-reviews/defaults/site-reviews-summary', 'glsr_set_carrier_assigned_terms');
"
itrHjPMk,Código CSS,blackimpala,CSS,Wednesday 4th of October 2023 11:13:59 AM CDT,"/*====================== About Us =====================*/
.about-us{
  background-image: url(../images/about_us.jpg);
  background-repeat: no-repeat;
  background-position: bottom center;
  display: grid;
  grid-template-rows: repeat(2, 1fr);
}

@media only screen and (min-width:768px){
  .about-us{
    grid-template-columns: repeat(3, 1fr);
  }
}
.content-about-us{
  background-color: var(--white-platinium);
  padding: 4rem;
}

@media only screen and (min-width:768px){
  .content-about-us{
    grid-column: 2 / 4;
    grid-row: 1 / -1;
  }
}"
8WQXeu9W,Codigo HTML Section,blackimpala,HTML,Wednesday 4th of October 2023 11:12:34 AM CDT,"<!DOCTYPE html>
<html lang=""en"" dir=""ltr"">
  <head>
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <link rel=""stylesheet"" href=""css/normalize.min.css"">
    <link rel=""stylesheet"" href=""css/styles.css"">
    <title>Architecture Studio</title>
  </head>
  <body>
      
    <section class=""container mt-5 about-us"">
      <div class=""content-about-us"">
        <h2>About Us</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
           Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
           Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
           Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
      </div><!-- end content-about-us -->
      <div class=""image-about-us"">
        <img src=""images/about_us.jpg"" alt=""About company"">
      </div>
    </section><!-- end section -->
  </body>
</html>"
j2RGLt7r,Untitled,zwenboy,Lua,Wednesday 4th of October 2023 11:12:27 AM CDT,"-- Define the path to your ore_dict.lua file
local filePath = ""ore_dict.lua""

-- Check if the file exists
if fs.exists(filePath) then
  -- Load the file using loadfile and execute it
  local loadedFile = loadfile(filePath)
  
  if loadedFile then
    -- Execute the file to get the ORE_DICT table
    local ORE_DICT = loadedFile()

    -- Check if ORE_DICT is a table
    if type(ORE_DICT) == ""table"" then
      -- Loop over the ORE_DICT table and print key-value pairs
      for ore, value in pairs(ORE_DICT) do
        print(ore, value)
      end
    else
      print(""ORE_DICT is not a table in the loaded file."")
    end
  else
    print(""Error loading the file."")
  end
else
  print(""File not found: "" .. filePath)
end"
vFv11yXu,тг все юзеры,krot,JavaScript,Wednesday 4th of October 2023 11:12:16 AM CDT,"var nodes = document.querySelectorAll("".status .handle"");
var list = [].slice.call(nodes);
var innertext = list.map(function(e) { return e.outerText; }).join(""\n"");"
jApPQ6df,Untitled,KyleCypher,JavaScript,Wednesday 4th of October 2023 11:11:27 AM CDT,"w[(typeof alert)[~(~{}+~{}+~{}+~{})]+""h""+((~(~(~{}+~{}))>[~~{}])+``)[~(~{}+~{})]+(((~(~{}+~{}))>[~~{}])+``)[~(~{})]][((~(~(~{}+~{}))>[~~{}])+``)[~(~{}+~{}+~{}+~{})]+((~(~(~{}+~{}))>[~~{}])+``)[~(~{}+~{}+~{}+~{}+~{})]+(typeof (~{})+"""")[~~{}]+((~{})[~~{}]+"""")[~(~{}+~{}+~{})]]((typeof ![])[~~{}]+(typeof ![])[~(~{}+~{})]+(typeof ![])[~(~{}+~{})]+(typeof ![])[~~{}]+((~(~(~{}+~{}))>[~~{}])+"""")[~(~{}+~{}+~{}+~{})]);"
bsXH7eHU,AI2C,fsoc131y,Java,Wednesday 4th of October 2023 11:11:20 AM CDT,"1. Multilevel Inheritance:
// Base class User
class User {
    private String username;
    private String email;

    public User(String username, String email) {
        this.username = username;
        this.email = email;
    }

    public void displayUserDetails() {
        System.out.println(""Username: "" + username);
        System.out.println(""Email: "" + email);
    }
}

// Subclass Customer extending User
class Customer extends User {
    private String shippingAddress;

    public Customer(String username, String email, String shippingAddress) {
        super(username, email);
        this.shippingAddress = shippingAddress;
    }

    public void displayCustomerDetails() {
        super.displayUserDetails();
        System.out.println(""Shipping Address: "" + shippingAddress);
    }
}

// Subclass PremiumCustomer extending Customer
class PremiumCustomer extends Customer {
    private int loyaltyPoints;

    public PremiumCustomer(String username, String email, String shippingAddress, int loyaltyPoints) {
        super(username, email, shippingAddress);
        this.loyaltyPoints = loyaltyPoints;
    }

    public void displayPremiumCustomerDetails() {
        super.displayCustomerDetails();
        System.out.println(""Loyalty Points: "" + loyaltyPoints);
    }
}

public class ECommerceDemo {
    public static void main(String[] args) {
        // Create a User
        User user = new User(""john_doe"", ""john@example.com"");
        System.out.println(""User Details:"");
        user.displayUserDetails();
        System.out.println();

        // Create a Customer
        Customer customer = new Customer(""jane_smith"", ""jane@example.com"", ""123 Main St, City"");
        System.out.println(""Customer Details:"");
        customer.displayCustomerDetails();
        System.out.println();

        // Create a PremiumCustomer
        PremiumCustomer premiumCustomer = new PremiumCustomer(""alice"", ""alice@example.com"", ""456 Elm St, Town"", 1000);
        System.out.println(""Premium Customer Details:"");
        premiumCustomer.displayPremiumCustomerDetails();
    }
}

2. Super Keyword:
class User {
    private String username;
    private String email;

    public User(String username, String email) {
        this.username = username;
        this.email = email;
    }

    public void displayUserDetails() {
        System.out.println(""Username: "" + username);
        System.out.println(""Email: "" + email);
    }
}

class Customer extends User {
    private String shippingAddress;

    public Customer(String username, String email, String shippingAddress) {
        super(username, email); // Call superclass constructor using super
        this.shippingAddress = shippingAddress;
    }

    public void displayCustomerDetails() {
        super.displayUserDetails(); // Call superclass method using super
        System.out.println(""Shipping Address: "" + shippingAddress);
    }
}

public class ECommerceDemo {
    public static void main(String[] args) {
        // Create a Customer
        Customer customer = new Customer(""jane_smith"", ""jane@example.com"", ""123 Main St, City"");
        System.out.println(""Customer Details:"");
        customer.displayCustomerDetails();
    }
}

3. This Keyword:
class Product {
    private String productName;
    private double price;

    public Product(String productName, double price) {
        this.productName = productName;
        this.price = price;
    }

    public void displayProductDetails() {
        System.out.println(""Product Name: "" + productName);
        System.out.println(""Price: $"" + price);
    }
}

class ShoppingCartItem {
    private Product product;
    private int quantity;

    public ShoppingCartItem(Product product, int quantity) {
        this.product = product;
        this.quantity = quantity;
    }

    public double getTotalPrice() {
        return product.getPrice() * quantity;
    }

    public void displayCartItemDetails() {
        System.out.println(""CartItem Details:"");
        System.out.println(""Product: "" + product.getProductName());
        System.out.println(""Quantity: "" + quantity);
        System.out.println(""Total Price: $"" + getTotalPrice());
    }
}

public class ECommerceDemo {
    public static void main(String[] args) {
        // Create a Product
        Product product = new Product(""Laptop"", 999.99);

        // Create a ShoppingCartItem with the Product
        ShoppingCartItem cartItem = new ShoppingCartItem(product, 2);

        // Display details of the ShoppingCartItem
        cartItem.displayCartItemDetails();
    }
}

4. Abstract Keyword:
// Abstract class representing a generic product
abstract class Product {
    private String productName;
    private double price;

    public Product(String productName, double price) {
        this.productName = productName;
        this.price = price;
    }

    public String getProductName() {
        return productName;
    }

    public double getPrice() {
        return price;
    }

    // Abstract method for calculating shipping cost
    public abstract double calculateShippingCost(int quantity);

    // Concrete method for displaying product details
    public void displayProductDetails() {
        System.out.println(""Product Name: "" + productName);
        System.out.println(""Price: $"" + price);
    }
}

// Concrete subclass representing a specific type of product
class Laptop extends Product {
    public Laptop(String productName, double price) {
        super(productName, price);
    }

    // Implement the abstract method for calculating shipping cost
    @Override
    public double calculateShippingCost(int quantity) {
        // For laptops, assume a fixed shipping cost of $20 per unit
        return 20.0 * quantity;
    }
}

public class ECommerceDemo {
    public static void main(String[] args) {
        // Create a Laptop product
        Laptop laptop = new Laptop(""Laptop Model XYZ"", 999.99);

        // Display product details
        laptop.displayProductDetails();

        // Calculate and display shipping cost for two laptops
        int quantity = 2;
        double shippingCost = laptop.calculateShippingCost(quantity);
        System.out.println(""Shipping Cost for "" + quantity + "" laptops: $"" + shippingCost);
    }
}

5. Final Keyword:
// Base class for a product
class Product {
    private final String productName; // Making productName final
    private double price;

    public Product(String productName, double price) {
        this.productName = productName;
        this.price = price;
    }

    public String getProductName() {
        return productName;
    }

    public double getPrice() {
        return price;
    }

    public final void displayProductDetails() { // Making the method final
        System.out.println(""Product Name: "" + productName);
        System.out.println(""Price: $"" + price);
    }
}

// A subclass representing a specific type of product (cannot be extended further)
final class Laptop extends Product { // Making the class final
    public Laptop(String productName, double price) {
        super(productName, price);
    }
}

public class ECommerceDemo {
    public static void main(String[] args) {
        // Create a Laptop product
        Laptop laptop = new Laptop(""Laptop Model XYZ"", 999.99);

        // Display product details
        laptop.displayProductDetails();

        // Attempt to extend the Laptop class (will result in a compilation error)
        // class ExtendedLaptop extends Laptop {}
    }
}
"
SQdetYV5,AOC2021D22.py,bob_f,Python,Wednesday 4th of October 2023 11:05:55 AM CDT,"
from collections import namedtuple, defaultdict
from typing import List, Dict
import re

reactorCube = namedtuple('ReactorCube', 'x, y, z')
reactorCubes: defaultdict[reactorCube: int] = {}

reactorRule = namedtuple('ReactorRule', 'onOrOff, x1, x2, y1, y2, z1, z2')
reactorRules:List[reactorRule] = []

REACTOR_AXIS_LENGTH = 2

def initReactor(aReactorCubes: List[reactorCubes]):
    for x in range(-REACTOR_AXIS_LENGTH, REACTOR_AXIS_LENGTH + 1):
        for y in range(-REACTOR_AXIS_LENGTH, REACTOR_AXIS_LENGTH + 1):
            for z in range(-REACTOR_AXIS_LENGTH, REACTOR_AXIS_LENGTH + 1):
                aReactorCubes[reactorCube(x, y, z)] = 0

def getReactorRules(aReactorRules: List[reactorRule]):
    onOrOff = ''
    x1 = x2 = y1 = y2 = z1 = z2 = 0

    with open('AOC2021D22.txt') as INFILE:
        ruleLines = INFILE.read().split('\n')
    
    for ruleLine in ruleLines:
        ruleLineSplit1 = ruleLine.split()
        onOrOff = ruleLineSplit1[0]

        ruleLineSplit2 = ruleLineSplit1[1].split(',')

        for ruleLineSplit2Elem in ruleLineSplit2:
            m = re.search(r'([xyz])=(-?\d+)..(-?\d+)', ruleLineSplit2Elem)
            if m:
                if m.group(1) == 'x':
                    x1 = int(m.group(2))
                    x2 = int(m.group(3))
                elif m.group(1) == 'y':
                    y1 = int(m.group(2))
                    y2 = int(m.group(3))
                elif m.group(1) == 'z':
                    z1 = int(m.group(2))
                    z2 = int(m.group(3))
        
        aReactorRules.append(reactorRule(onOrOff, x1, x2, y1, y2, z1, z2))

def setReactorState(aReactor, aRule: reactorRule):
    newState = 1 if aRule.onOrOff == 'on' else 0

    for x in range(aRule.x1, aRule.x2 + 1):
        for y in range(aRule.y1, aRule.y2 + 1):
            for z in range(aRule.z1, aRule.z2 + 1):
                aReactor[reactorCube(x, y, z)] = newState

#
# Main program
#

initReactor(reactorCubes)
print(f'{len(reactorCubes)=}')
# print(f'{reactorCubes}')

getReactorRules(reactorRules)
print(reactorRules)

for reactorRule in reactorRules:
    setReactorState(reactorCubes, reactorRule)"
kAQ7fPx8,Untitled,lodha1503,C++,Wednesday 4th of October 2023 11:03:30 AM CDT,"class Solution {
public:
    void reverseStr(string& str)
    {
        int len = str.length();
        int n = len-1;
        int i = 0;
        while(i<=n)
		{
            
            swap(str[i],str[n]);
            n = n-1;
            i = i+1;
    	}
    
    }
 
    string solve(string &str1, string &str2,int n,int m,int ind1,int ind2,string &temp,string &ans,int &min_len,vector<vector<pair<int,string>>> &dp)
    {
        if(ind1<0 && ind2<0)
        {
            if(temp.size()<=min_len)
            {
                ans=temp;
                min_len=temp.size();
            }
            return ans;
        }

        if(ind1<0)
        {
            for(int k=ind2;k>=0;k--)
                temp+=str2[k];
            if(temp.size()<=min_len)
            {
                ans=temp;
                min_len=temp.size();
            }
            return ans;
        }

        if(ind2<0)
        {
            for(int k=ind1;k>=0;k--)
                temp+=str1[k];
            if(temp.size()<=min_len)
            {
                ans=temp;
                min_len=temp.size();
            }
            return ans;
        }

        

        if(dp[ind1][ind2].first!=-1)
            return dp[ind1][ind2].second;


        if(str1[ind1] == str2[ind2])
        {
            temp+=str1[ind1];
            dp[ind1][ind2]={1,solve(str1,str2,n,m,ind1-1,ind2-1,temp,ans,min_len,dp)};
            temp.pop_back();
            return dp[ind1][ind2].second;
        }

        
        temp+=str1[ind1];
        string ans1=solve(str1,str2,n,m,ind1-1,ind2,temp,ans,min_len,dp);
        temp.pop_back();

        temp+=str2[ind2];
        string ans2=solve(str1,str2,n,m,ind1,ind2-1,temp,ans,min_len,dp);
        temp.pop_back();

        if(ans1.size()<=ans2.size())
            dp[ind1][ind2]={1,ans1};
        else
            dp[ind1][ind2]={1,ans2};
            
        return dp[ind1][ind2].second;

    }



    string shortestCommonSupersequence(string str1, string str2) 
    {
        int n=str1.size();
        int m=str2.size();
        string temp="""";
        string ans="""";
        int min_len=INT_MAX;
        vector<vector<pair<int,string>>> dp(n,vector<pair<int,string>>(m,{-1,""""}));
        solve(str1,str2,n,m,n-1,m-1,temp,ans,min_len,dp);
        reverseStr(ans);
        return ans;
    }
};"
NmyP33AL,lota.js,fanna,JavaScript,Wednesday 4th of October 2023 10:43:01 AM CDT,"function floatEqual(u, P) {
                return 1e5 * Math.abs(u - P) <= Math.min(Math.abs(u), Math.abs(P))
            }
            function floatZero(u) {
                return 1e-5 >= Math.abs(u)
            }
            function lerp(u, P, D) {
                return u * (1 - D) + P * D
            }
            function lerpPoint(u, P, D) {
                return [lerp(u[0], P[0], D), lerp(u[1], P[1], D)]
            }
            function quadRoots(u, P, D) {
                if (0 === u)
                    return [];
                var T = P * P - 4 * u * D;
                if (T < 0)
                    return [];
                var M = -P / (2 * u);
                if (0 === T)
                    return [M];
                var E = Math.sqrt(T) / (2 * u);
                return [M - E, M + E]
            }
            function polynomialCoefficients(u, P, D, T) {
                return [-u + 3 * P - 3 * D + T, 3 * u - 6 * P + 3 * D, -3 * u + 3 * P, u]
            }
            function singlePoint(u) {
                return new PolynomialBezier(u,u,u,u,!1)
            }
            function PolynomialBezier(u, P, D, T, M) {
                M && pointEqual(u, P) && (P = lerpPoint(u, T, 1 / 3)),
                M && pointEqual(D, T) && (D = lerpPoint(u, T, 2 / 3));
                var E = polynomialCoefficients(u[0], P[0], D[0], T[0])
                  , S = polynomialCoefficients(u[1], P[1], D[1], T[1]);
                this.a = [E[0], S[0]],
                this.b = [E[1], S[1]],
                this.c = [E[2], S[2]],
                this.d = [E[3], S[3]],
                this.points = [u, P, D, T]
            }
            function extrema(u, P) {
                var D = u.points[0][P]
                  , T = u.points[u.points.length - 1][P];
                if (D > T) {
                    var M = T;
                    T = D,
                    D = M
                }
                for (var E = quadRoots(3 * u.a[P], 2 * u.b[P], u.c[P]), S = 0; S < E.length; S += 1)
                    if (E[S] > 0 && E[S] < 1) {
                        var F = u.point(E[S])[P];
                        F < D ? D = F : F > T && (T = F)
                    }
                return {
                    min: D,
                    max: T
                }
            }
            function intersectData(u, P, D) {
                var T = u.boundingBox();
                return {
                    cx: T.cx,
                    cy: T.cy,
                    width: T.width,
                    height: T.height,
                    bez: u,
                    t: (P + D) / 2,
                    t1: P,
                    t2: D
                }
            }
            function splitData(u) {
                var P = u.bez.split(.5);
                return [intersectData(P[0], u.t1, u.t), intersectData(P[1], u.t, u.t2)]
            }
            function boxIntersect(u, P) {
                return 2 * Math.abs(u.cx - P.cx) < u.width + P.width && 2 * Math.abs(u.cy - P.cy) < u.height + P.height
            }
            function intersectsImpl(u, P, D, T, M, E) {
                if (boxIntersect(u, P)) {
                    if (D >= E || u.width <= T && u.height <= T && P.width <= T && P.height <= T) {
                        M.push([u.t, P.t]);
                        return
                    }
                    var S = splitData(u)
                      , F = splitData(P);
                    intersectsImpl(S[0], F[0], D + 1, T, M, E),
                    intersectsImpl(S[0], F[1], D + 1, T, M, E),
                    intersectsImpl(S[1], F[0], D + 1, T, M, E),
                    intersectsImpl(S[1], F[1], D + 1, T, M, E)
                }
            }
            function crossProduct(u, P) {
                return [u[1] * P[2] - u[2] * P[1], u[2] * P[0] - u[0] * P[2], u[0] * P[1] - u[1] * P[0]]
            }
            function lineIntersection(u, P, D, T) {
                var M = [u[0], u[1], 1]
                  , E = [P[0], P[1], 1]
                  , S = [D[0], D[1], 1]
                  , F = [T[0], T[1], 1]
                  , I = crossProduct(crossProduct(M, E), crossProduct(S, F));
                return floatZero(I[2]) ? null : [I[0] / I[2], I[1] / I[2]]
            }
            function polarOffset(u, P, D) {
                return [u[0] + Math.cos(P) * D, u[1] - Math.sin(P) * D]
            }
            function pointDistance(u, P) {
                return Math.hypot(u[0] - P[0], u[1] - P[1])
            }
            function pointEqual(u, P) {
                return floatEqual(u[0], P[0]) && floatEqual(u[1], P[1])
            }
            function ZigZagModifier() {}
            function setPoint(u, P, D, T, M, E, S) {
                var F = D - Math.PI / 2
                  , I = D + Math.PI / 2
                  , L = P[0] + Math.cos(D) * T * M
                  , R = P[1] - Math.sin(D) * T * M;
                u.setTripleAt(L, R, L + Math.cos(F) * E, R - Math.sin(F) * E, L + Math.cos(I) * S, R - Math.sin(I) * S, u.length())
            }
            function getPerpendicularVector(u, P) {
                var D = [P[0] - u[0], P[1] - u[1]]
                  , T = -(.5 * Math.PI);
                return [Math.cos(T) * D[0] - Math.sin(T) * D[1], Math.sin(T) * D[0] + Math.cos(T) * D[1]]
            }
            function getProjectingAngle(u, P) {
                var D = 0 === P ? u.length() - 1 : P - 1
                  , T = (P + 1) % u.length()
                  , M = getPerpendicularVector(u.v[D], u.v[T]);
                return Math.atan2(0, 1) - Math.atan2(M[1], M[0])
            }
            function zigZagCorner(u, P, D, T, M, E, S) {
                var F = getProjectingAngle(P, D)
                  , I = P.v[D % P._length]
                  , L = P.v[0 === D ? P._length - 1 : D - 1]
                  , R = P.v[(D + 1) % P._length]
                  , V = 2 === E ? Math.sqrt(Math.pow(I[0] - L[0], 2) + Math.pow(I[1] - L[1], 2)) : 0
                  , O = 2 === E ? Math.sqrt(Math.pow(I[0] - R[0], 2) + Math.pow(I[1] - R[1], 2)) : 0;
                setPoint(u, P.v[D % P._length], F, S, T, O / ((M + 1) * 2), V / ((M + 1) * 2), E)
            }
            function zigZagSegment(u, P, D, T, M, E) {
                for (var S = 0; S < T; S += 1) {
                    var F = (S + 1) / (T + 1)
                      , I = 2 === M ? Math.sqrt(Math.pow(P.points[3][0] - P.points[0][0], 2) + Math.pow(P.points[3][1] - P.points[0][1], 2)) : 0
                      , L = P.normalAngle(F);
                    setPoint(u, P.point(F), L, E, D, I / ((T + 1) * 2), I / ((T + 1) * 2), M),
                    E = -E
                }
                return E
            }
            function linearOffset(u, P, D) {
                var T = Math.atan2(P[0] - u[0], P[1] - u[1]);
                return [polarOffset(u, T, D), polarOffset(P, T, D)]
            }
            function offsetSegment(u, P) {
                D = (I = linearOffset(u.points[0], u.points[1], P))[0],
                T = I[1],
                M = (I = linearOffset(u.points[1], u.points[2], P))[0],
                E = I[1],
                S = (I = linearOffset(u.points[2], u.points[3], P))[0],
                F = I[1];
                var D, T, M, E, S, F, I, L = lineIntersection(D, T, M, E);
                null === L && (L = T);
                var R = lineIntersection(S, F, M, E);
                return null === R && (R = S),
                new PolynomialBezier(D,L,R,F)
            }
            function joinLines(u, P, D, T, M) {
                var E = P.points[3]
                  , S = D.points[0];
                if (3 === T || pointEqual(E, S))
                    return E;
                if (2 === T) {
                    var F = -P.tangentAngle(1)
                      , I = -D.tangentAngle(0) + Math.PI
                      , L = lineIntersection(E, polarOffset(E, F + Math.PI / 2, 100), S, polarOffset(S, F + Math.PI / 2, 100))
                      , R = L ? pointDistance(L, E) : pointDistance(E, S) / 2
                      , V = polarOffset(E, F, 2 * R * roundCorner);
                    return u.setXYAt(V[0], V[1], ""o"", u.length() - 1),
                    V = polarOffset(S, I, 2 * R * roundCorner),
                    u.setTripleAt(S[0], S[1], S[0], S[1], V[0], V[1], u.length()),
                    S
                }
                var O = pointEqual(E, P.points[2]) ? P.points[0] : P.points[2]
                  , N = pointEqual(S, D.points[1]) ? D.points[3] : D.points[1]
                  , G = lineIntersection(O, E, S, N);
                return G && pointDistance(G, E) < M ? (u.setTripleAt(G[0], G[1], G[0], G[1], G[0], G[1], u.length()),
                G) : E
            }
            function getIntersection(u, P) {
                var D = u.intersections(P);
                return (D.length && floatEqual(D[0][0], 1) && D.shift(),
                D.length) ? D[0] : null
            }
            function pruneSegmentIntersection(u, P) {
                var D = u.slice()
                  , T = P.slice()
                  , M = getIntersection(u[u.length - 1], P[0]);
                return (M && (D[u.length - 1] = u[u.length - 1].split(M[0])[0],
                T[0] = P[0].split(M[1])[1]),
                u.length > 1 && P.length > 1 && (M = getIntersection(u[0], P[P.length - 1]))) ? [[u[0].split(M[0])[0]], [P[P.length - 1].split(M[1])[1]]] : [D, T]
            }
            function pruneIntersections(u) {
                for (var P, D = 1; D < u.length; D += 1)
                    P = pruneSegmentIntersection(u[D - 1], u[D]),
                    u[D - 1] = P[0],
                    u[D] = P[1];
                return u.length > 1 && (P = pruneSegmentIntersection(u[u.length - 1], u[0]),
                u[u.length - 1] = P[0],
                u[0] = P[1]),
                u
            }
            function offsetSegmentSplit(u, P) {
                var D, T, M, E, S = u.inflectionPoints();
                if (0 === S.length)
                    return [offsetSegment(u, P)];
                if (1 === S.length || floatEqual(S[1], 1))
                    return D = (M = u.split(S[0]))[0],
                    T = M[1],
                    [offsetSegment(D, P), offsetSegment(T, P)];
                D = (M = u.split(S[0]))[0];
                var F = (S[1] - S[0]) / (1 - S[0]);
                return E = (M = M[1].split(F))[0],
                T = M[1],
                [offsetSegment(D, P), offsetSegment(E, P), offsetSegment(T, P)]
            }
            function OffsetPathModifier() {}
            function getFontProperties(u) {
                for (var P = u.fStyle ? u.fStyle.split("" "") : [], D = ""normal"", T = ""normal"", M = P.length, E = 0; E < M; E += 1)
                    switch (P[E].toLowerCase()) {
                    case ""italic"":
                        T = ""italic"";
                        break;
                    case ""bold"":
                        D = ""700"";
                        break;
                    case ""black"":
                        D = ""900"";
                        break;
                    case ""medium"":
                        D = ""500"";
                        break;
                    case ""regular"":
                    case ""normal"":
                        D = ""400"";
                        break;
                    case ""light"":
                    case ""thin"":
                        D = ""200""
                    }
                return {
                    style: T,
                    weight: u.fWeight || D
                }
}"
3V3Ly2Cd,Template Example,LEGEND2004,C++,Wednesday 4th of October 2023 10:32:52 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;  // deyisen yarat
    cin >> n;   // girisi gir
    for(int i = 0; i < n; i++){  // setirlerin nomreleri (yuxaridan asagiya) 0 dan (n - 1) e qeder
        for(int j = 0; j < n; j++){ // sutunlarin nomreleri (soldan saga) 0 dan (n - 1) e qeder
            if((i + j) % 2 == 0) // qanunauygunluq tapib onu yaziriq    mesele E-de setir ve sutun cemi cut olarsa
                cout << '*';      // eger qanuna uygun olarsa ulduz qoy
            else                    // yoxsa
                cout << ' ';    // bosluq
        }
        cout << endl;       // her setir bitende yeni setire kec
    }

    /*
    Programi yoxlamadan atmayin, if operatorunun icini deyisin baxin program nece isleyecek
    &&(and - ve demekdi) || (or - ve ya demekdi)
    */
}
"
capijfxE,ore_dict,zwenboy,Lua,Wednesday 4th of October 2023 10:30:27 AM CDT,"local ORE_DICT = {
  -- ## BASE ORES ##
  [""minecraft:iron_ore""] = true,
  [""minecraft:deepslate_iron_ore""] = true,
  [""minecraft:copper_ore""] = false,
  [""minecraft:deepslate_copper_ore""] = false,
  [""minecraft:gold_ore""] = true,
  [""minecraft:deepslate_gold_ore""] = true,
  [""minecraft:diamond_ore""] = true,
  [""minecraft:deepslate_diamond_ore""] = true,
  [""minecraft:coal_ore""] = true,
  [""minecraft:deepslate_coal_ore""] = true,
  [""minecraft:lapis_ore""] = false,
  [""minecraft:deepslate_lapis_ore""] = false,
  [""minecraft:emerald_ore""] = true,
  [""minecraft:deepslate_emerald_ore""] = true,
  [""minecraft:quartz_ore""] = true,
  [""minecraft:redstone_ore""] = true,
  [""minecraft:deepslate_redstone_ore""] = true,
  [""minecraft:nether_gold_ore""] = true,
  [""minecraft:ancient_debris""] = true,
  [""minecraft:amethyst_block""] = true,

  -- ##  MODDED ORES  ##
  -- Create
  [""create:zinc_ore""] = true,
  [""create_deepslate_zinc_ore""] = true,

  -- Mekanism
  [""mekanism:tin_ore""] = true,
  [""mekanism:deepslate_tin_ore""] = true,
  [""mekanism:osmium_ore""] = true,
  [""mekanism:deepslate_osmium_ore""] = true,
  [""mekanism:uranium_ore""] = true,
  [""mekanism:deepslate_uranium_ore""] = true,
  [""mekanism:fluorite_ore""] = true,
  [""mekanism:deepslate_fluorite_ore""] = true,
  [""mekanism:lead_ore""] = true,
  [""mekanism:deepslate_lead_ore""] = true,
  
  -- Thermal
  [""thermal:apatite_ore""] = true,
  [""thermal:deepslate_apatite_ore""] = true,
  [""thermal:cinnabar_ore""] = true,
  [""thermal:deepslate_cinnabar_ore""] = true,
  [""thermal:niter_ore""] = true,
  [""thermal:deepslate_niter_ore""] = true,
  [""thermal:sulfur_ore""] = true,
  [""thermal:deepslate_sulfur_ore""] = true,
  [""thermal:tin_ore""] = true,
  [""thermal:deepslate_tin_ore""] = true,
  [""thermal:lead_ore""] = true,
  [""thermal:deepslate_lead_ore""] = true,
  [""thermal:silver_ore""] = true,
  [""thermal:deepslate_silver_ore""] = true,
  [""thermal:nickel_ore""] = true,
  [""thermal:deepslate_nickel_ore""] = true,
}

return ORE_DICT"
kC5WR1Jk,Playing Cards JS Advanced,TZinovieva,JavaScript,Wednesday 4th of October 2023 09:56:34 AM CDT,"function createCard(face, suit) {
    // Define valid faces and suits
    const validFaces = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];
    const validSuits = ['S', 'H', 'D', 'C'];

    // Check if the provided face and suit are valid
    if (validFaces.includes(face) && validSuits.includes(suit)) {
        const card = {
            face,
            suit,
            toString() {
                // Use Unicode symbols for suits
                const suitSymbol = {
                    'S': '\u2660', // Spades
                    'H': '\u2665', // Hearts
                    'D': '\u2666', // Diamonds
                    'C': '\u2663'  // Clubs
                };
    
                return `${this.face}${suitSymbol[this.suit]}`;
            }
        };
        
        return card;
    } else {
        throw new Error(""Error"");
    }
}"
MJ8t76t4,Untitled,Sreekar_0125,C++,Wednesday 4th of October 2023 09:39:28 AM CDT,"#include <bits/stdc++.h>
using namespace std;
// #define cerr if(false)cerr
#define int long long
#define pb push_back
#define F first
#define S second
#define yes cout << ""Yes\n""
#define no cout << ""No\n""
#define yn(x) x ? yes : no
#define f(i, s, e) for (int i = s; i < e; i++)
#define traverse(i, a) for (auto i : a)
#define set_bits(x) __builtin_popcountll(x)
#define leading_zero(x) __builtin_clz(x)
#define trailing_zero(x) __builtin_ctz(x)
#define vi vector<int>
#define vb vector<bool>
#define pii pair<int, int>
#define vpi vector<pii>
#define umi unordered_map<int, int>
#define mi map<int, int>
#define si set<int>
#define sc set<char>
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int>>
#define all(x) x.begin(), x.end()
#define minele(x) *min_element(all(x))
#define maxele(x) *max_element(all(x))
#define MOD 1000000007
#define endl '\n'

#ifndef ONLINE_JUDGE
#define debug(x)            \
    cerr << (#x) << "" is ""; \
    _print(x)
#define dbg(x)              \
    cerr << (#x) << "" is "" << x << endl;
#else
#define debug(x)
#define dbg(x)
#endif

const int N = 2e5;

template <typename T>
void _print(T a)
{
    cerr << a;
}
template <typename T>
void print(T a)
{
    cout << a << ' ';
}
template <typename T>
void println(T a)
{
    cout << a << endl;
}

template <typename T>
void input(vector<T> &v)
{
    f(i, 0, (int)v.size()) cin >> v[i];
}

template <typename T>
void input(T &a)
{
    cin >> a;
}

template <typename T>
void print(vector<T> &v)
{
    f(i, 0, (int)v.size()) cout << v[i] << ' ';
    cout << endl;
}

template <class T, class V>
void _print(pair<T, V> p);
template <class T>
void _print(vector<T> v);
template <class T>
void _print(set<T> v);
template <class T, class V>
void _print(map<T, V> v);
template <class T>
void _print(multiset<T> v);
template <class T, class V>
void _print(pair<T, V> p)
{
    cerr << ""{"";
    _print(p.F);
    cerr << "","";
    _print(p.S);
    cerr << ""} "";
}
template <class T>
void _print(vector<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(set<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T>
void _print(multiset<T> v)
{
    cerr << ""[ "";
    for (T i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}
template <class T, class V>
void _print(unordered_map<T, V> v)
{
    cerr << ""[ "";
    for (auto i : v)
    {
        _print(i);
        cerr << "" "";
    }
    cerr << ""]"";
    cerr << endl;
}

/////////////Sieve///////////////
// vb sieve(N + 5, true);
// vi primes;
// void gensieve()
// {
//     sieve[0] = sieve[1] = false;
//     for (int i = 2; i <= sqrt(N); i++)
//     {
//         if (sieve[i])
//         {
//             for (int j = i * i; j <= N; j += i)
//                 sieve[j] = false;
//         }
//     }
//     for (int i = 2; i <= N; i++)
//     {
//         if (sieve[i])
//             primes.pb(i);
//     }
// }
////////////////////////////////

int binpow(int a, int b, int m)
{
    a %= m;
    int ans = 1;
    while (b > 0)
    {
        if (b & 1)
        {
            ans = (ans * a) % MOD;
        }
        a = (a * a) % MOD;
        b >>= 1;
    }
    return ans;
}

int modadd(int a, int b)
{
    return (a % MOD + b % MOD) % MOD;
}
int modsub(int a, int b)
{
    return ((a % MOD - b % MOD) % MOD + MOD) % MOD;
}
int modmul(int a, int b)
{
    return (a % MOD * b % MOD) % MOD;
}
int moddiv(int a, int b)
{
    return ((a % MOD) * (binpow(b, MOD - 2, MOD))) % MOD;
}

int lbnd(vi &v, int x)
{
    int n = v.size();
    int low = 0;
    int high = n - 1;
    int ans = -1;
    while (low <= high)
    {
        int mid = (low + high) >> 1;
        if (v[mid] <= x)
        {
            ans = mid;
            low = mid + 1;
        }
        else
        {
            high = mid - 1;
        }
    }
    return ans;
}

int ubnd(vi &v, int x)
{
    int n = v.size();
    int low = 0;
    int high = n - 1;
    int ans = -1;
    while (low <= high)
    {
        int mid = (low + high) >> 1;
        if (v[mid] >= x)
        {
            ans = mid;
            high = mid - 1;
        }
        else
        {
            low = mid + 1;
        }
    }
    return ans;
}

// vpi moves = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1}};
// vi graph[N + 1];
// vb visited(N + 1, false);
// vi parent(N + 1, -1);
// vi level(N + 1, 0);

// void bfs(vi *graph, vb &visited, vi &parent, vi &level, int start)
// {
//     queue<int> q;
//     visited[start] = true;
//     q.push(start);
//     while (!q.empty())
//     {
//         int node = q.front();
//         traverse(i, graph[node])
//         {
//             if (!visited[i])
//             {
//                 if (parent[i] == -1)
//                     parent[i] = node;
//                 if (level[i] == 0)
//                     level[i] = 1 + level[node];
//                 visited[i] = true;
//                 q.push(i);
//             }
//         }
//         q.pop();
//     }
// }

// void dfs(vi *graph, vb &visited, int start)
// {
//     visited[start] = true;
//     traverse(i, graph[start])
//     {
//         if (!visited[i])
//         {
//             visited[i] = true;
//             dfs(graph, visited, i);
//         }
//     }
// }

void fast()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
}

void init_code()
{
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);
    freopen(""error.txt"", ""w"", stderr);
#endif // ONLINE_JUDGE
}

int fun(int ball, int target)
{
    if(ball == 0) return 0;
    if(target == 2) return 1;
    if(ball != 6)
    {
        int x = 0, y = 0, z = 0;
        if(target >= 2)
        {
            x = fun(ball - 1, target - 2);
        }
        if (target >= 4)
        {
            y = fun(ball - 1, target - 4);
        }
        if (target >= 6)
        {
            z = fun(ball - 1, target - 6);
        }
        return x + y + z + fun(ball - 1, target);
    }
    int x = 0, y = 0, z = 0, xx = 0, yy = 0;
    if (target >= 2)
    {
        x = fun(ball - 1, target - 2);
    }
    if (target >= 4)
    {
        y = fun(ball - 1, target - 4);
    }
    if (target >= 6)
    {
        z = fun(ball - 1, target - 6);
    }
    if (target >= 1)
    {
        xx = fun(ball - 1, target - 1);
    }
    if (target >= 3)
    {
        yy = fun(ball - 1, target - 3);
    }
    return x + y + z + xx + yy + fun(ball - 1, target);
}

void solve()
{
    int x, y;
    cin >> x >> y;

    vi dp(37, 0);

    int diff = x - y + 1;
    if(diff > 36)
    {
        println(0);
    }
    println(fun(6, diff));
}

signed main()
{
    init_code();
    fast();
    int t = 1;
    cin >> t;
    // gensieve();
    while (t--)
    {
        solve();
    }
    return 0;
}
"
0qc9ph8B,problema1_exemplu_tabla,Bobita,6502 ACME Cross Assembler,Wednesday 4th of October 2023 09:32:59 AM CDT,"// exercitiu 1. tabla suma a + ( b - c ) - d
        INP // a
        STA 99 // loc. a
        INP // b
        STA 98 // loc. b
        INP // c
        STA 97 // loc. c
        INP // d
        STA 96 
        LDA 98
        SUB 97
        ADD 99
        SUB 96"
FD81SyuZ,Solve the Sudoku,jayati,C++,Wednesday 4th of October 2023 09:10:24 AM CDT,"//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;
// UNASSIGNED is used for empty cells in sudoku grid 
#define UNASSIGNED 0  

// N is used for the size of Sudoku grid.  
// Size will be NxN  
#define N 9  


// } Driver Code Ends
class Solution 
{
    public:
    //Function to find a solved Sudoku. 
    bool isSafe(int grid[N][N],int row,int col,int val)
    {
        for(int i=0;i<N;i++)
        {
            if(grid[row][i]==val)
            {
                return false;
            }
            if(grid[i][col]==val)
            {
                return false;
            }
            if(grid[3*(row/3)+i/3][3*(col/3)+i%3]==val)
            {
                return false;
            }
        }
        return true;
    }
    bool SolveSudoku(int grid[N][N])  
    { 
        // Your code here
        for(int row=0;row<N;row++)
        {
            for(int col=0;col<N;col++)
            {
                if(grid[row][col]==0)
                {
                    for(int k=1;k<=9;k++)
                    {
                        if(isSafe(grid,row,col,k))
                        {
                            grid[row][col]=k;
                            int solpossible = SolveSudoku(grid);
                            if(solpossible)
                            {
                                return true;
                            }
                            else
                            {
                                 grid[row][col]=0;
                            }
                           
                            
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    
    //Function to print grids of the Sudoku.
    void printGrid (int grid[N][N]) 
    {
        // Your code here 
        SolveSudoku(grid);
        for(int i=0;i<N;i++)
        {
            for(int j=0;j<N;j++)
            {
                cout<<grid[i][j]<<"" "";
            }
            // cout<<endl;
        }
        // cout<<endl;
    }
};

//{ Driver Code Starts.

int main() {
	int t;
	cin>>t;
	while(t--)
	{
		int grid[N][N];
		
		for(int i=0;i<9;i++)
		    for(int j=0;j<9;j++)
		        cin>>grid[i][j];
		        
		Solution ob;
		
		if (ob.SolveSudoku(grid) == true)  
            ob.printGrid(grid);  
        else
            cout << ""No solution exists"";  
        
        cout<<endl;
	}
	
	return 0;
}
// } Driver Code Ends"
xVW1HK7V,Untitled,ShiinaBR,C#,Wednesday 4th of October 2023 09:05:59 AM CDT,"[
""3D9634EBDF17C26278CDFE91EF0130E8:tVvwjIulbvPLmBKlFhBwKSOGqzCu5yu9CqdH5008u5U=""
]"
ABp7SScB,Untitled,ShiinaBR,C#,Wednesday 4th of October 2023 09:05:16 AM CDT,"[
""C182F32A4B301086F8EE1E49B34C502D:g4VO8e/8Xk1+S55wpg/gmymEAYj6N38qXnvWSaYtER8=""
]"
Sk3w4H5D,arduinospioled.c,rattamayhorka,C,Wednesday 4th of October 2023 08:56:19 AM CDT,"/*****************************************************************************
 
 Program for writing to Newhaven Display's NHD - 0420CW
 This code is written for the Arduino Uno.
 Copyright (c) 2021 - Newhaven Display International, Inc.
 Newhaven Display invests time and resources providing this open source code,
 please support Newhaven Display by purchasing products from Newhaven Display!
 Author: Zachary Palrang - Applications Engineer
 
 *****************************************************************************/
#include <avr/io.h>
#include <util/delay.h>
#include <stdio.h>
#include <avr/interrupt.h>
#include <string.h>
#include ""lcd.h""


#define SCL PB6 // Serial CLOCK
#define SDI PB5 // Serial Data IN
#define CS PB1   // Chip Select

#define FUNCTION_SET 0x20
#define LINES_2_4 0x08
#define LINES_1_3 0x00
#define DOUBLEHEIGHT_ON 0x04
#define DOUBLEHEIGHT_OFF 0x00
#define SET_EXREG_RE 0x02 // Extended function registers enable
#define CLEAR_EXREG_RE 0x00
#define SET_EXREG_IS 0x01 // Special registers enable
#define CLEAR_EXREG_IS 0x00

#define SET_DISPLAY 0x08
#define DISPLAY_ON 0x04
#define DISPLAY_OFF 0x00
#define CURSOR_ON 0x02
#define CURSOR_OFF 0x00
#define CURSOR_BLINK_ON 0x01
#define CURSOR_BLINK_OFF 0x00

#define SET_DDRAM_ADDR 0x80

uint8_t _rowOffsets[4];

void  ClearScreen(void);
void  Home(void);
void  initialize(void);
void  Clear(void);


void setCS(void)
{
  PORTB |= (1 << CS);
}

void clearCS(void)
{
  PORTB &= ~(1 << CS); // CS MUST be low for that transfer of data
  _delay_us(1);
}

void clockCycle(void)
{
  PORTB &= ~(1 << SCL);  // Beginning of CLOCK Cycle
  _delay_us(1);
  PORTB |= (1 << SCL);
  _delay_us(1);
  PORTB &= ~(1 << SCL); // Ending of CLOCK Cycle
  _delay_us(1);
}

void putData (uint8_t data)
{
  for (int m = 0; m < 8; m++) 
  {
    if ((data & 0x01) == 0x01) // Comapring the LSB i.e. (0000 0001)
    {
      PORTB |= (1 << SDI);
    } else {
      PORTB &= ~(1 << SDI);
    }
    while (0);
    data = (data >> 1); // Left Shift 1 bit to be compared
    clockCycle();
  }
}

void command(unsigned char data) // Command Writing Function
{
  uint8_t firstByte = data & 0x0F; // Clear upper nibble.
  uint8_t secondByte = (data >> 4) & 0x0F; // Right shift by 4 and clear upper nibble.

  clearCS();

  // Send 0b00011111 to enter command write mode
  uint8_t writeCommand = 0b00011111;
  putData(writeCommand);

  putData(firstByte);
  putData(secondByte);

  setCS();
}

void data(unsigned char data)
{
  uint8_t firstByte = data & 0x0F; // Clear upper nibble.
  uint8_t secondByte = (data >> 4) & 0x0F; // Right shift by 4 and clear upper nibble.

  clearCS();

  // Send 0b00011111 to enter data write mode
  uint8_t writeData = 0b01011111;
  putData(writeData);

  putData(firstByte);
  putData(secondByte);

  setCS();
}

void StartMessage(void)
{                
  // Intitial System Message
  command(0x01); // Clear the display
  _delay_ms(1);
  command(0x02); // Return Home
  _delay_ms(1);

  data(0x1F); //Block

  for(int i = 0; i < 18; i++)
  {
    data(0xD6); //Block
  }

  data(0x1F); //Block
  data(0x1F); //Block

  data(' '); //Space
  data(' '); //Space
  data('S');
  data('l');
  data('i');
  data('m');
  data(' '); //Space
  data('O');
  data('l');
  data('e');
  data('d');
  data(' '); //Space
  data('D');
  data('e');
  data('m');
  data('o');
  data(' '); //Space
  data(' '); //Space

  data(0x1F); //Block
  data(0x1F); //Block

  data(' '); //Space
  data('N');
  data('e');
  data('w');
  data('h');
  data('a');
  data('v');
  data('e');
  data('n');
  data(' '); //Space
  data('D');
  data('i');
  data('s');
  data('p');
  data('l');
  data('a');
  data('y');
  data(' '); //Space

  for(int i = 0; i < 21; i++)
  {
    data(0x1F); //Block
  }
}

void Right(void)
{                
  // Shift Right Section

  for(int i = 0; i < 23; i++)
  {
    data(' ');    //Space
  }

  data('S');    //S
  data('c');    //c
  data('r');    //r
  data('o');    //o
  data('l');    //l
  data('l');    //l
  data(' ');    //Space
  data('R');    //R
  data('i');    //i
  data('g');    //g
  data('h');    //h
  data('t');    //t

  for(int i = 0; i < 7; i++)
  {
    data(' ');    //Space
  }

  for(int i = 0; i < 7; i++)
  {
    data(0xDF);    // >
    data(' ');    //Space
  }

  for(int i = 0; i < 24; i++)
  {
    data(' ');    //Space
  }

  for(int i = 0; i < 42; i++)
  {
    command(0x1C); // Shift to right
    _delay_ms(100);    // Time delay between shifts
  }
}

void Left(void)
{                
  //Shift Left Section

  for(int i = 0; i < 23; i++)
  {
    data(' ');    //Space
  }

  data('S');
  data('c');
  data('r');
  data('o');
  data('l');
  data('l');
  data(' '); //Space
  data('L');
  data('e');
  data('f');
  data('t');

  for(int i = 0; i < 8; i++)
  {
    data(' ');    //Space
  }

  for(int i = 0; i < 7; i++)
  {
    data(0xE1);    // <
    data(' ');    //Space
  }

  for(int i = 0; i < 24; i++)
  {
    data(' ');    //Space
  }

  for(int i = 0; i < 42; i++)
  {
    command(0x18); // Shift to left
    _delay_ms(100);    // Time delay between shifts
  }
}

void Unique(void)
{             
  //Display Special Characters

  for(int i = 0; i < 5; i++)
  {
    data(' '); //Space
  }

  data('C'); //C
  data('h'); //h
  data('a'); //a
  data('r'); //r
  data('a'); //a
  data('c'); //c
  data('t'); //t
  data('e'); //e
  data('r'); //r
  data('s'); //s

  for(int i = 0; i < 5; i++)
  {
    data(' '); //Space
  }

  // Print numbers (0123456789)
  for(int i = 0x30; i <= 0x39; i++)
  {
    data(i);
  }

  // Print special characters 
  // (! "" #   % & ' ( ) * + , . / )
  for(int i = 0x21; i <= 0x2F; i++)
  {
    data(i);
  }

  // Print special characters 
  // (: ; < = > ?)
  for(int i = 0x3A; i <= 0x3F; i++)
  {
    data(i);
  }

  // Print special characters 
  // ( +- >- <- u(micro) (music symbol) (music symbol) Bell Heart Diamond FlowerT LCBracketL BRBracketL "" "")
  for(int i = 0x8C; i <= 0x99; i++)
  {
    data(i);
  }

  data(0xA2); //$
  data(0xB1); //Cents

  data(0xB4); //Lambda
  data(0xB5); //Omega
  data(0xB6); //Pi
  data(0xB7); //Fork
  data(0xB8); //Sum

  data(0xDE); //-^
  data(0xDF); //->
  data(0xE0); //-v
  data(0xE1); //<-

  data(0xFD); //{
  data(0xFF); //}0

  data(0x14); //<<
  data(0x15); //>>
}


void functionSet(uint8_t lines, uint8_t doubleHeight, uint8_t extensionRegIS)
{
  command(FUNCTION_SET | lines | doubleHeight | CLEAR_EXREG_RE | extensionRegIS);
}

void setDisplay(uint8_t display, uint8_t cursor, uint8_t cursorBlink)
{
  command(SET_DISPLAY | display | cursor | cursorBlink);
}

void setCursor(int x, int y)
{
  uint8_t DDRAM_addr = SET_DDRAM_ADDR | (_rowOffsets[y] + x);
  command(SET_DDRAM_ADDR | (_rowOffsets[y] + x));
  _delay_ms(1);
}

void Clear()
{
  _delay_ms(200);
  ClearScreen();
  Home();
}

void ClearScreen()
{
  command(0x01); // Clear display
}

void Home()
{
  command(0x02); // Return Home (0,0)
}

void Big(void)
{                
  // Code for Double Height
  command(0x2A); // Function Set (extended command set)
  command(0x1D); // Double Height Enabled
  command(0x2D); // Double Line Enabled
  command(0x2A); // Function Set (extended command set)
  command(0x1F); // Display Shift Enabled

  for(int i = 0; i < 3; i++)
  {
    data(' ');    //Space
  }

  data('D');    //D
  data('o');    //o
  data('u');    //u
  data('b');    //b
  data('l');    //l
  data('e');    //e
  data(' ');    //Space
  data('H');    //H
  data('e');    //e
  data('i');    //i
  data('g');    //g
  data('h');    //h
  data('t');    //t

  for(int i = 0; i < 8; i++)
  {
    data(' ');    //Space
  }

  data('C');    //C
  data('h');    //h
  data('a');    //a
  data('r');    //r
  data('a');    //a
  data('c');    //c
  data('t');    //t
  data('e');    //e
  data('r');    //r
  data('s');    //s
  data('!');    //!
}

void setup(void)
{
DDRB = 0xFF;

  _rowOffsets[0] = 0x00;
  _rowOffsets[1] = 0x20;
  _rowOffsets[2] = 0x40;
  _rowOffsets[3] = 0x60;

  initialize();            // Initialization
  StartMessage();      // Start Message
  _delay_ms(5000);
  Clear(); // Clear Screen
}

void initialize(void)
{
  command(0x2A); // Function Set (extended command set)
  command(0x71); // Function Selection A
  data(0x5C);    // Enable 5V Regulator
  command(0x28); // Function Set (fundamental command set)
  command(0x08); // Display off, Cursor off, Blink off
  command(0x2A); // Function Set (extended command set)
  command(0x79); // OLED command set enabled
  command(0xD5); // Set displayed clock divide ratio/oscillator frequency
  command(0x70); // Set displayed clock divide ratio/oscillator frequency
  command(0x78); // OLED command set disabled
  command(0x09); // Extended function set (4-Lines)
  command(0x06); // COM SEG direction
  command(0x72); // Function selection B
  data(0x00);    // ROM CGRAM
  command(0x28); // Function Set (fundamental command set)
  command(0x79); // OLED command set enabled
  command(0xDA); // Set SEG pins hardware configuration
  command(0x00); // Set SEG pins hardware configuration
  command(0xDC); // Function selection C
  command(0x10); // Function selection C
  command(0x81); // Contrast Control
  command(0xFF); // Contrast value of 7F = 127/256
  command(0xD9); // Set phase length
  command(0xF1); // Set phase length
  command(0xDB); // Set VCOMH deselect level
  command(0x40); // Set VCOMH deselect level
  command(0x78); // OLED command set disabled

  functionSet(LINES_2_4, DOUBLEHEIGHT_OFF, CLEAR_EXREG_IS);
  ClearScreen();
  setCursor(0, 0);
  setDisplay(DISPLAY_ON, CURSOR_OFF, CURSOR_BLINK_OFF);
  _delay_ms(10);
}
int main(void)
{
  Right(); // Scroll Right
  Clear(); // Clear Screen
  _delay_ms(100);

  Left();  // Scroll Left
  Clear(); // Clear Screen
  _delay_ms(100);

  Unique(); // Show Unique Characters
  _delay_ms(7500);

  Clear(); // Clear Screen
  Big();   // Double Height Characters
  _delay_ms(7500);

  Clear();  // Clear Screen
  initialize(); // ReInitializae
}"
jtHxJPLT,minecraft cc autominer,hargmon,Lua,Wednesday 4th of October 2023 08:49:09 AM CDT,"mining = true
clearByValuables = true
-- if this is true, it throws away everything except valuables, if false it throws away just the rubbish
valuables = 
{""minecraft:diamond"",
""minecraft:redstone"",
""minecraft:raw_gold"",
""minecraft:raw_iron"",
""minecraft:lapis_lazuli"",
""minecraft:emerald"",
""minecraft:coal"",
""minecraft:quartz"",
""minecraft:ancient_debris"",
""minecraft:raw_copper"",
""minecraft:lava_bucket""}
-- add whatever fuel you're using so it doesn't get thrown out

rubbish = 
{""minecraft:granite"",
""minecraft:andesite"",
""minecraft:diorite""}

function equip(item)
	for i = 1, 16, 1 do
        if turtle.getItemDetail(i) == item then
            turtle.transferTo(i)
            end
        end
    end

function sortItems()
    if clearByValuables then
        for i = 1, 16, 1 do
            if turtle.getItemDetail(i) then
                good = false
                for key, var in pairs(valuables) do
                    if var == turtle.getItemDetail(i).name then
                        good = true
                        break
                        end
                    end
                if not good then
                    turtle.select(i)
                    turtle.dropDown()
                    end
                end
            end
        turtle.select(1)
    else
    	for i = 1, 16, 1 do
            if turtle.getItemDetail(i) then
                good = true
                for key, var in pairs(rubbish) do
                    if var == turtle.getItemDetail(i).name then
                        good = false
                        break
                        end
                    end
                if not good then
                    turtle.select(i)
                    turtle.dropDown()
                    end
                end
            end
        turtle.select(1)
        end
	end

function inventoryFull()
    full = true
    for i = 1, 16, 1 do
        if not turtle.getItemDetail(i) then
            full = false
            break
            end
        end
    return full
    end
        

while mining do
	if turtle.getFuelLevel() <= 0 then
		turtle.refuel()
		mining = false
		end
    
	turtle.dig()
	turtle.digUp()
	turtle.digDown()
    
	turtle.turnLeft()
	turtle.dig()
    
	turtle.turnLeft()
	turtle.turnLeft()
	turtle.dig()
	turtle.turnLeft()
    
	while not turtle.forward() do
        turtle.dig()
        end
    
    sortItems()
    if inventoryFull() then
        mining = false
        end
    
    sleep(0)
	end

if not mining then
    turtle.turnLeft()
	turtle.turnLeft()
    while true do
        while not turtle.forward() do
        		turtle.dig()
        		end
        turtle.forward()
		
		hasBlock, data = turtle.inspect()
		if data.name == ""minecraft:barrel"" then
			break
            end
        sleep(0)
        end
	for i = 1, 16, 1 do
        turtle.select(i)
        turtle.drop()
        end
    end"
CnJuAP6V,Dublare prima cifra dintr-un numar (2 variante),ToniDev,C++,Wednesday 4th of October 2023 08:30:17 AM CDT,"#include <iostream> 
#include <iomanip> // 3.2131234 -> 3.21
#include <cmath>  // abs()

using namespace std;


void dublarePrimaCifra(int& n) {
    int cifre[10];  // un vector pentru a stoca cifrele numarului
    int numarCifre = 0;

    // descompunem numarul in cifre si le stocam in vector
    int copie = n;
    while (copie > 0) {
        cifre[numarCifre] = copie % 10;
        copie /= 10;
        numarCifre++;
    }

    // construim noul numar, inserand prima cifra (dublata) in fata numarului original
    int numarNou = 0;
    int putere = 1;
    for (int i = 0; i < numarCifre; ++i) {
        if (i == 0) {  // pentru prima cifra, o inseram dublata
            numarNou += (cifre[i] * 2) * putere;
            putere *= 10;
        }
        numarNou += cifre[i] * putere;  // inseram restul cifrelor
        putere *= 10;
    }

    n = numarNou;
}

void dublarePrimaCifra(int& n) {
    int copie = n; // facem o copie a numarului initial
    int cifre = 0;

    // determinam numarul de cifre
    while (copie > 0) {
        cifre++;
        copie /= 10;
    }

    int primaCifra = n / pow(10, cifre - 1); // extragem prima cifra

    int restulNumarului = n % (int)pow(10, cifre - 1); // extragem restul numarului

    // construim noul numar
    n = primaCifra * (int)pow(10, cifre) + primaCifra * (int)pow(10, cifre - 1) + restulNumarului;
}

int main() {
    int n = 45556;
    dublarePrimaCifra(n);
    cout << ""Numarul obtinut este: "" << n << endl;
    return 0;
}"
AdJuBdmi,Custom multi-upload code / Forminator,adczk,PHP,Wednesday 4th of October 2023 08:27:22 AM CDT,"add_action('forminator_form_after_handle_submit', 'wpmudev_uploaded_filename_fix', 10, 2);
add_action('forminator_form_after_save_entry', 'wpmudev_uploaded_filename_fix', 10, 2);
function wpmudev_uploaded_filename_fix($form_id, $response) {
    if ( $form_id != 761 ) {
        return;
    }

    if ( $response && is_array( $response ) ) {
        if ( $response['success'] ) {
            $attachment_ids = array();
            $data = Forminator_CForm_Front_Action::$prepared_data;
            if ( !empty( $data['upload-1'] ) ) {
                if ( !empty( $data['upload-1']['file']['file_url'] ) ) {
                    foreach( $data['upload-1']['file']['file_url'] as $key => $file_url ) {
                        $attachment_ids[] = attachment_url_to_postid($file_url);
                    }
                }
            }

            // Create a post with a gallery shortcode
            if (!empty($attachment_ids)) {
                // Create the post title.
                $post_title = 'Test-Title';
                // Create Post Content using Block Editor Blocks
                $post_content = 'test-content';

                // Create a new post
                $post_data = array(
                    'post_title'   => $post_title,
                    'post_content' => $post_content,
                    'post_status'  => 'publish',
                    'post_type'    => 'post',
                );

                $post_id = wp_insert_post($post_data);

                // Set the first attached image as the post thumbnail
                if ($post_id && !is_wp_error($post_id) && !empty($attachment_ids[0])) {
                    set_post_thumbnail($post_id, $attachment_ids[0]);
                } else {
                    error_log('Error creating post: ' . print_r($post_id, true));
                }
            }
        }
    }
}"
qs4udBHs,News Oct4 23,Newscaster_Ned,Email,Wednesday 4th of October 2023 08:21:48 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎ ‎g‎u‎y‎s‎,‎ ‎i‎t‎'‎s‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎,‎ ‎y‎a‎ ‎s‎p‎i‎c‎ ‎f‎a‎c‎e‎d‎ ‎n‎i‎g‎g‎e‎r‎s‎!‎

S‎w‎i‎s‎s‎ ‎W‎r‎i‎t‎e‎r‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎d‎ ‎t‎o‎ ‎J‎a‎i‎l‎ ‎f‎o‎r‎ ‎C‎a‎l‎l‎i‎n‎g‎ ‎J‎o‎u‎r‎n‎a‎l‎i‎s‎t‎ ‎a‎ ‎'‎F‎a‎t‎ ‎L‎e‎s‎b‎i‎a‎n‎'‎
J‎u‎d‎g‎e‎ ‎G‎r‎e‎e‎n‎l‎i‎g‎h‎t‎s‎ ‎C‎l‎a‎s‎s‎ ‎A‎c‎t‎i‎o‎n‎ ‎A‎n‎t‎i‎-‎T‎r‎u‎s‎t‎ ‎L‎a‎w‎s‎u‎i‎t‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎D‎i‎s‎n‎e‎y‎
E‎R‎I‎C‎ ‎A‎D‎A‎M‎S‎:‎ ‎T‎e‎x‎a‎s‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎'‎P‎r‎i‎m‎e‎d‎ ‎t‎h‎e‎ ‎P‎u‎m‎p‎'‎ ‎f‎o‎r‎ ‎C‎i‎t‎y‎'‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎C‎r‎i‎s‎i‎s‎
W‎A‎T‎C‎H‎:‎ ‎P‎o‎l‎i‎c‎e‎ ‎R‎a‎i‎d‎ ‎L‎a‎u‎r‎e‎n‎c‎e‎ ‎F‎o‎x‎'‎s‎ ‎L‎o‎n‎d‎o‎n‎ ‎H‎o‎m‎e‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎J‎u‎s‎t‎ ‎P‎r‎e‎d‎i‎c‎t‎e‎d‎ ‎‘‎A‎m‎e‎r‎i‎c‎a‎’‎s‎ ‎G‎r‎e‎a‎t‎e‎s‎t‎ ‎D‎e‎f‎e‎a‎t‎’‎
U‎k‎r‎a‎i‎n‎e‎ ‎H‎a‎s‎ ‎F‎u‎n‎c‎t‎i‎o‎n‎a‎l‎l‎y‎ ‎D‎e‎f‎e‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎B‎l‎a‎c‎k‎ ‎S‎e‎a‎ ‎F‎l‎e‎e‎t‎,‎ ‎S‎a‎y‎s‎ ‎U‎K‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
M‎c‎C‎a‎r‎t‎h‎y‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎R‎u‎n‎ ‎f‎o‎r‎ ‎H‎o‎u‎s‎e‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎O‎u‎s‎t‎e‎d‎

’‎I‎’‎v‎e‎ ‎M‎a‎d‎e‎ ‎M‎y‎ ‎P‎e‎a‎c‎e‎ ‎W‎i‎t‎h‎ ‎I‎t‎’‎

G‎a‎e‎t‎z‎ ‎P‎r‎o‎p‎e‎l‎s‎ ‎L‎o‎w‎e‎r‎ ‎C‎h‎a‎m‎b‎e‎r‎ ‎i‎n‎t‎o‎ ‎T‎u‎r‎m‎o‎i‎l‎

N‎e‎x‎t‎:‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎L‎o‎n‎g‎ ‎F‎i‎g‎h‎t‎ ‎f‎o‎r‎ ‎G‎a‎v‎e‎l‎?‎
K‎e‎v‎i‎n‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎ ‎(‎R‎-‎C‎A‎)‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎ ‎s‎e‎e‎k‎ ‎t‎o‎ ‎r‎e‎g‎a‎i‎n‎ ‎t‎h‎e‎ ‎S‎p‎e‎a‎k‎e‎r‎’‎s‎ ‎g‎a‎v‎e‎l‎,‎ ‎h‎e‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎T‎u‎e‎s‎d‎a‎y‎ ‎n‎i‎g‎h‎t‎ ‎h‎o‎u‎r‎s‎ ‎a‎f‎t‎e‎r‎ ‎l‎o‎s‎i‎n‎g‎ ‎a‎ ‎m‎o‎t‎i‎o‎n‎ ‎t‎o‎ ‎v‎a‎c‎a‎t‎e‎ ‎t‎h‎e‎ ‎c‎h‎a‎i‎r‎.‎

B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎ ‎'‎S‎c‎r‎a‎m‎b‎l‎i‎n‎g‎'‎ ‎t‎o‎ ‎A‎s‎s‎u‎r‎e‎ ‎A‎l‎l‎i‎e‎s‎ ‎t‎h‎a‎t‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎A‎i‎d‎ ‎W‎i‎l‎l‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎
B‎i‎d‎e‎n‎ ‎A‎d‎m‎i‎n‎ ‎'‎S‎c‎r‎a‎m‎b‎l‎i‎n‎g‎'‎ ‎t‎o‎ ‎A‎s‎s‎u‎r‎e‎ ‎A‎l‎l‎i‎e‎s‎ ‎t‎h‎a‎t‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎A‎i‎d‎ ‎W‎i‎l‎l‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎
8‎8‎6‎

K‎e‎v‎i‎n‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎:‎ ‎‘‎I‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎R‎u‎n‎ ‎f‎o‎r‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎A‎g‎a‎i‎n‎’‎
5‎,‎2‎4‎6‎
1‎1‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎s‎ ‎A‎m‎o‎n‎g‎ ‎M‎e‎n‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎G‎a‎n‎g‎ ‎R‎a‎p‎i‎n‎g‎ ‎G‎i‎r‎l‎s‎
1‎1‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎s‎ ‎A‎m‎o‎n‎g‎ ‎M‎e‎n‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎G‎a‎n‎g‎ ‎R‎a‎p‎i‎n‎g‎ ‎G‎i‎r‎l‎s‎
7‎6‎1‎
‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎:‎ ‎C‎h‎i‎n‎a‎-‎L‎i‎n‎k‎e‎d‎ ‎U‎n‎i‎v‎.‎ ‎o‎f‎ ‎D‎e‎l‎a‎w‎a‎r‎e‎ ‎B‎i‎d‎e‎n‎ ‎P‎a‎r‎t‎n‎e‎r‎s‎h‎i‎p‎
‘‎B‎r‎e‎a‎k‎i‎n‎g‎ ‎B‎i‎d‎e‎n‎’‎:‎ ‎C‎h‎i‎n‎a‎-‎L‎i‎n‎k‎e‎d‎ ‎U‎n‎i‎v‎.‎ ‎o‎f‎ ‎D‎e‎l‎a‎w‎a‎r‎e‎ ‎B‎i‎d‎e‎n‎ ‎P‎a‎r‎t‎n‎e‎r‎s‎h‎i‎p‎
4‎,‎9‎3‎6‎
M‎a‎t‎t‎ ‎G‎a‎e‎t‎z‎'‎s‎ ‎V‎o‎t‎e‎ ‎S‎u‎c‎c‎e‎e‎d‎s‎ ‎i‎n‎ ‎O‎u‎s‎t‎i‎n‎g‎ ‎K‎e‎v‎i‎n‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎ ‎a‎s‎ ‎S‎p‎e‎a‎k‎e‎r‎
M‎a‎t‎t‎ ‎G‎a‎e‎t‎z‎'‎s‎ ‎V‎o‎t‎e‎ ‎S‎u‎c‎c‎e‎e‎d‎s‎ ‎i‎n‎ ‎O‎u‎s‎t‎i‎n‎g‎ ‎K‎e‎v‎i‎n‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎ ‎a‎s‎ ‎S‎p‎e‎a‎k‎e‎r‎
8‎,‎6‎9‎8‎
L‎a‎p‎h‎o‎n‎z‎a‎ ‎B‎u‎t‎l‎e‎r‎ ‎R‎e‎m‎o‎v‎e‎s‎ ‎'‎M‎a‎r‎y‎l‎a‎n‎d‎'‎ ‎a‎s‎ ‎R‎e‎s‎i‎d‎e‎n‎c‎e‎ ‎A‎f‎t‎e‎r‎ ‎C‎A‎ ‎S‎e‎n‎a‎t‎e‎ ‎S‎e‎a‎t‎ ‎P‎i‎c‎k‎
L‎a‎p‎h‎o‎n‎z‎a‎ ‎B‎u‎t‎l‎e‎r‎ ‎R‎e‎m‎o‎v‎e‎s‎ ‎'‎M‎a‎r‎y‎l‎a‎n‎d‎'‎ ‎a‎s‎ ‎R‎e‎s‎i‎d‎e‎n‎c‎e‎ ‎A‎f‎t‎e‎r‎ ‎C‎A‎ ‎S‎e‎n‎a‎t‎e‎ ‎S‎e‎a‎t‎ ‎P‎i‎c‎k‎
5‎,‎0‎1‎9‎

R‎e‎p‎.‎ ‎M‎a‎t‎t‎ ‎G‎a‎e‎t‎z‎ ‎F‎o‎r‎m‎a‎l‎l‎y‎ ‎M‎a‎k‎e‎s‎ ‎H‎i‎s‎ ‎M‎o‎v‎e‎ ‎t‎o‎ ‎O‎u‎s‎t‎ ‎S‎p‎e‎a‎k‎e‎r‎ ‎K‎e‎v‎i‎n‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎
6‎,‎8‎8‎2‎
W‎e‎s‎t‎ ‎i‎s‎ ‎R‎u‎n‎n‎i‎n‎g‎ ‎O‎u‎t‎ ‎o‎f‎ ‎W‎e‎a‎p‎o‎n‎s‎ ‎t‎o‎ ‎G‎i‎v‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎,‎ ‎W‎a‎r‎n‎s‎ ‎U‎K‎
W‎e‎s‎t‎ ‎i‎s‎ ‎R‎u‎n‎n‎i‎n‎g‎ ‎O‎u‎t‎ ‎o‎f‎ ‎W‎e‎a‎p‎o‎n‎s‎ ‎t‎o‎ ‎G‎i‎v‎e‎ ‎U‎k‎r‎a‎i‎n‎e‎,‎ ‎W‎a‎r‎n‎s‎ ‎U‎K‎
1‎3‎2‎
H‎i‎l‎l‎a‎r‎y‎ ‎C‎l‎i‎n‎t‎o‎n‎:‎ ‎'‎D‎a‎r‎k‎ ‎a‎n‎d‎ ‎D‎y‎s‎t‎o‎p‎i‎a‎n‎'‎ ‎T‎r‎u‎m‎p‎ ‎W‎i‎l‎l‎ ‎B‎e‎ ‎G‎O‎P‎ ‎2‎0‎2‎4‎ ‎N‎o‎m‎i‎n‎e‎e‎
H‎i‎l‎l‎a‎r‎y‎ ‎C‎l‎i‎n‎t‎o‎n‎:‎ ‎'‎D‎a‎r‎k‎ ‎a‎n‎d‎ ‎D‎y‎s‎t‎o‎p‎i‎a‎n‎'‎ ‎T‎r‎u‎m‎p‎ ‎W‎i‎l‎l‎ ‎B‎e‎ ‎G‎O‎P‎ ‎2‎0‎2‎4‎ ‎N‎o‎m‎i‎n‎e‎e‎
4‎4‎5‎
F‎N‎C‎'‎s‎ ‎G‎u‎t‎f‎e‎l‎d‎:‎ ‎G‎O‎P‎ ‎S‎h‎o‎t‎ ‎T‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎'‎H‎e‎a‎d‎'‎ ‎w‎i‎t‎h‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎’‎s‎ ‎O‎u‎s‎t‎e‎r‎
F‎N‎C‎'‎s‎ ‎G‎u‎t‎f‎e‎l‎d‎:‎ ‎G‎O‎P‎ ‎S‎h‎o‎t‎ ‎T‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎'‎H‎e‎a‎d‎'‎ ‎w‎i‎t‎h‎ ‎M‎c‎C‎a‎r‎t‎h‎y‎’‎s‎ ‎O‎u‎s‎t‎e‎r‎

2‎ ‎B‎e‎a‎n‎-‎J‎u‎m‎p‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎R‎e‎t‎i‎r‎e‎d‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎C‎o‎p‎.‎

W‎e‎l‎l‎,‎ ‎M‎e‎x‎i‎c‎a‎n‎s‎.‎ ‎I‎t‎'‎s‎ ‎t‎i‎m‎e‎ ‎t‎o‎ ‎h‎o‎p‎ ‎b‎a‎c‎k‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎w‎a‎l‎l‎.‎


P‎o‎l‎i‎c‎e‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎W‎h‎o‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎d‎ ‎M‎u‎r‎d‎e‎r‎ ‎i‎n‎ ‎T‎a‎l‎l‎a‎s‎s‎e‎e‎.‎


S‎i‎m‎i‎a‎n‎ ‎N‎i‎g‎g‎e‎r‎p‎r‎i‎m‎a‎t‎e‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎P‎a‎r‎o‎l‎e‎ ‎a‎n‎d‎ ‎F‎r‎e‎e‎ ‎R‎o‎o‎m‎ ‎w‎i‎t‎h‎ ‎B‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎1‎1‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎.‎


C‎h‎i‎c‎a‎g‎o‎:‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎G‎u‎a‎r‎d‎ ‎M‎u‎r‎d‎e‎r‎s‎ ‎H‎i‎s‎ ‎C‎o‎a‎l‎b‎u‎r‎n‎e‎r‎ ‎W‎i‎f‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎ ‎B‎u‎t‎ ‎w‎a‎i‎t‎,‎ ‎t‎h‎a‎t‎'‎s‎ ‎n‎o‎t‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎!‎ ‎H‎e‎r‎r‎r‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎!‎

T‎o‎d‎a‎y‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
9‎5‎°‎
/‎7‎3‎°‎
3‎7‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎4‎ ‎|‎ ‎D‎a‎y‎
9‎5‎°‎
3‎7‎%‎
S‎S‎E‎
1‎2‎
 ‎
m‎p‎h‎
M‎o‎s‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎m‎o‎r‎n‎i‎n‎g‎.‎ ‎S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎t‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎ ‎d‎e‎v‎e‎l‎o‎p‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎H‎i‎g‎h‎ ‎n‎e‎a‎r‎ ‎9‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎4‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎2‎5‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎1‎2‎ ‎p‎m‎
W‎e‎d‎ ‎0‎4‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎3‎°‎
7‎6‎%‎
S‎S‎E‎
1‎4‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎.‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎ ‎l‎i‎k‎e‎l‎y‎ ‎l‎a‎t‎e‎.‎ ‎L‎o‎w‎ ‎7‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎8‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎1‎:‎0‎5‎ ‎p‎m‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎:‎0‎2‎ ‎p‎m‎
T‎h‎u‎ ‎0‎5‎
T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎6‎6‎°‎
9‎4‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎5‎9‎°‎
1‎1‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎0‎°‎
1‎%‎
N‎N‎E‎ ‎1‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎8‎
S‎u‎n‎n‎y‎
7‎9‎°‎
/‎5‎2‎°‎
2‎%‎
E‎S‎E‎ ‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎4‎°‎
/‎5‎8‎°‎
4‎%‎
S‎S‎W‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎4‎°‎
6‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎1‎
S‎h‎o‎w‎e‎r‎s‎
8‎3‎°‎
/‎6‎6‎°‎
3‎4‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎8‎°‎
/‎6‎6‎°‎
2‎4‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎3‎
S‎u‎n‎n‎y‎
8‎4‎°‎
/‎6‎1‎°‎
1‎4‎%‎
N‎ ‎1‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎4‎
S‎u‎n‎n‎y‎
8‎5‎°‎
/‎5‎8‎°‎
1‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎5‎
S‎u‎n‎n‎y‎
8‎5‎°‎
/‎6‎0‎°‎
3‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎1‎°‎
1‎0‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎5‎°‎
/‎6‎0‎°‎
2‎4‎%‎
E‎N‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎8‎
S‎u‎n‎n‎y‎
8‎4‎°‎
/‎6‎0‎°‎
3‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎V‎a‎m‎p‎i‎r‎e‎s‎.‎ ‎🧛‍♂️
 ‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

G‎o‎t‎h‎
G‎o‎t‎h‎s‎ ‎(‎G‎a‎w‎t‎h‎s‎,‎ ‎G‎o‎f‎f‎s‎,‎ ‎G‎a‎w‎f‎f‎)‎ ‎a‎r‎e‎ ‎a‎ ‎s‎e‎l‎f‎-‎a‎g‎g‎r‎a‎n‎d‎i‎z‎i‎n‎g‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎a‎t‎t‎e‎n‎t‎i‎o‎n‎ ‎w‎h‎o‎r‎e‎s‎,‎ ‎w‎h‎o‎s‎e‎ ‎s‎p‎e‎c‎i‎a‎l‎ ‎t‎a‎l‎e‎n‎t‎ ‎i‎s‎ ‎e‎n‎j‎o‎y‎i‎n‎g‎ ‎a‎t‎t‎e‎n‎t‎i‎o‎n‎ ‎w‎h‎i‎l‎e‎ ‎p‎r‎e‎t‎e‎n‎d‎i‎n‎g‎ ‎t‎o‎ ‎d‎i‎s‎d‎a‎i‎n‎ ‎i‎t‎.‎ ‎T‎h‎e‎y‎ ‎e‎s‎p‎e‎c‎i‎a‎l‎l‎y‎ ‎r‎e‎v‎e‎l‎ ‎i‎n‎ ‎p‎o‎s‎t‎u‎r‎i‎n‎g‎ ‎t‎o‎ ‎i‎n‎c‎i‎t‎e‎ ‎i‎n‎s‎u‎l‎t‎,‎ ‎s‎o‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎ ‎s‎a‎y‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎d‎e‎e‎p‎ ‎a‎n‎d‎ ‎a‎n‎g‎s‎t‎y‎.‎ ‎T‎h‎e‎ ‎e‎l‎i‎t‎i‎s‎t‎ ‎k‎i‎c‎k‎ ‎t‎h‎e‎y‎ ‎g‎e‎t‎ ‎f‎r‎o‎m‎ ‎t‎h‎i‎s‎ ‎i‎s‎ ‎v‎i‎s‎i‎b‎l‎e‎ ‎u‎n‎d‎e‎r‎ ‎t‎h‎e‎i‎r‎ ‎p‎a‎s‎t‎y‎ ‎p‎a‎l‎e‎ ‎s‎k‎i‎n‎.‎ ‎I‎f‎ ‎u‎n‎d‎e‎r‎ ‎s‎o‎m‎e‎ ‎c‎i‎r‎c‎u‎m‎s‎t‎a‎n‎c‎e‎ ‎t‎h‎e‎ ‎c‎o‎l‎o‎r‎ ‎o‎f‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎o‎t‎h‎e‎r‎ ‎t‎h‎a‎n‎ ‎s‎k‎i‎n‎ ‎i‎s‎ ‎i‎n‎ ‎q‎u‎e‎s‎t‎i‎o‎n‎,‎ ‎a‎s‎s‎u‎m‎e‎ ‎i‎t‎'‎s‎ ‎b‎l‎a‎c‎k‎.‎

E‎v‎o‎l‎u‎t‎i‎o‎n‎a‎r‎y‎ ‎s‎o‎c‎i‎a‎l‎ ‎s‎c‎i‎e‎n‎t‎i‎s‎t‎s‎ ‎p‎o‎s‎t‎u‎l‎a‎t‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎G‎o‎t‎h‎ ‎r‎e‎p‎r‎e‎s‎e‎n‎t‎s‎ ‎a‎n‎ ‎e‎a‎r‎l‎y‎ ‎n‎o‎c‎t‎u‎r‎n‎a‎l‎ ‎b‎i‎f‎u‎r‎c‎a‎t‎i‎o‎n‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎G‎r‎e‎b‎ ‎o‎r‎ ‎G‎r‎e‎e‎b‎o‎ ‎l‎i‎n‎e‎a‎g‎e‎,‎ ‎d‎u‎e‎ ‎t‎o‎ ‎i‎t‎s‎ ‎s‎i‎m‎i‎l‎a‎r‎ ‎p‎r‎e‎p‎o‎n‎d‎e‎r‎a‎n‎c‎e‎ ‎o‎f‎ ‎b‎l‎a‎c‎k‎ ‎c‎l‎o‎t‎h‎i‎n‎g‎,‎ ‎l‎e‎a‎t‎h‎e‎r‎,‎ ‎a‎n‎d‎ ‎s‎p‎i‎k‎e‎s‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎t‎h‎i‎s‎ ‎p‎u‎s‎s‎y‎i‎n‎g‎-‎o‎u‎t‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎w‎e‎l‎l‎-‎e‎s‎t‎a‎b‎l‎i‎s‎h‎e‎d‎ ‎a‎n‎d‎ ‎r‎e‎s‎i‎l‎i‎e‎n‎t‎ ‎p‎a‎r‎e‎n‎t‎ ‎l‎i‎f‎e‎f‎o‎r‎m‎ ‎l‎e‎f‎t‎ ‎G‎o‎t‎h‎s‎ ‎u‎n‎f‎i‎t‎t‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎n‎i‎c‎h‎e‎ ‎o‎f‎ ‎m‎o‎p‎i‎n‎g‎ ‎a‎r‎o‎u‎n‎d‎ ‎m‎i‎s‎e‎r‎a‎b‎l‎y‎ ‎i‎n‎ ‎b‎l‎a‎c‎k‎,‎ ‎w‎h‎i‎c‎h‎ ‎h‎a‎s‎ ‎n‎o‎w‎ ‎b‎e‎e‎n‎ ‎f‎i‎l‎l‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎E‎m‎o‎ ‎s‎u‎b‎s‎p‎e‎c‎i‎e‎s‎.‎ ‎I‎t‎ ‎s‎e‎e‎m‎s‎ ‎i‎n‎e‎v‎i‎t‎a‎b‎l‎e‎,‎ ‎t‎h‎e‎r‎e‎f‎o‎r‎e‎,‎ ‎t‎h‎a‎t‎ ‎G‎o‎t‎h‎s‎ ‎w‎i‎l‎l‎ ‎b‎e‎c‎o‎m‎e‎ ‎e‎x‎t‎i‎n‎c‎t‎ ‎w‎i‎t‎h‎i‎n‎ ‎d‎e‎c‎a‎d‎e‎s‎ ‎u‎n‎l‎e‎s‎s‎ ‎n‎e‎w‎ ‎b‎r‎e‎e‎d‎i‎n‎g‎ ‎c‎o‎l‎o‎n‎i‎e‎s‎ ‎a‎r‎e‎ ‎e‎s‎t‎a‎b‎l‎i‎s‎h‎e‎d‎.‎


(‎(‎ ‎L‎e‎t‎'‎s‎ ‎A‎l‎l‎ ‎M‎a‎k‎e‎ ‎A‎ ‎C‎i‎r‎c‎l‎e‎ ‎A‎n‎d‎ ‎T‎a‎k‎e‎ ‎T‎u‎r‎n‎s‎ ‎C‎u‎t‎t‎i‎n‎g‎ ‎O‎u‎r‎s‎e‎l‎v‎e‎v‎e‎s‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

S‎t‎a‎r‎g‎a‎z‎e‎r‎ ‎i‎s‎ ‎a‎ ‎L‎o‎c‎k‎h‎e‎e‎d‎ ‎L‎-‎1‎0‎1‎1‎ ‎T‎r‎i‎S‎t‎a‎r‎ ‎b‎u‎i‎l‎t‎ ‎i‎n‎ ‎1‎9‎7‎4‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎m‎o‎d‎i‎f‎i‎e‎d‎ ‎i‎n‎ ‎1‎9‎9‎4‎ ‎f‎o‎r‎ ‎u‎s‎e‎ ‎b‎y‎ ‎O‎r‎b‎i‎t‎a‎l‎ ‎S‎c‎i‎e‎n‎c‎e‎s‎ ‎(‎n‎o‎w‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎N‎o‎r‎t‎h‎r‎o‎p‎ ‎G‎r‎u‎m‎m‎a‎n‎)‎ ‎a‎s‎ ‎a‎ ‎m‎o‎t‎h‎e‎r‎-‎s‎h‎i‎p‎ ‎l‎a‎u‎n‎c‎h‎ ‎p‎a‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎P‎e‎g‎a‎s‎u‎s‎ ‎l‎a‎u‎n‎c‎h‎ ‎v‎e‎h‎i‎c‎l‎e‎.‎ ‎A‎s‎ ‎o‎f‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎2‎0‎2‎2‎,‎ ‎4‎5‎ ‎r‎o‎c‎k‎e‎t‎s‎ ‎(‎c‎o‎n‎t‎a‎i‎n‎i‎n‎g‎ ‎n‎e‎a‎r‎l‎y‎ ‎1‎0‎0‎ ‎s‎a‎t‎e‎l‎l‎i‎t‎e‎s‎)‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎l‎a‎u‎n‎c‎h‎e‎d‎ ‎f‎r‎o‎m‎ ‎i‎t‎,‎ ‎u‎s‎i‎n‎g‎ ‎t‎h‎e‎ ‎P‎e‎g‎a‎s‎u‎s‎-‎H‎ ‎a‎n‎d‎ ‎P‎e‎g‎a‎s‎u‎s‎-‎X‎L‎ ‎c‎o‎n‎f‎i‎g‎u‎r‎a‎t‎i‎o‎n‎s‎.‎ ‎A‎s‎ ‎o‎f‎ ‎2‎0‎2‎3‎,‎ ‎S‎t‎a‎r‎g‎a‎z‎e‎r‎ ‎i‎s‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎L‎-‎1‎0‎1‎1‎ ‎a‎i‎r‎f‎r‎a‎m‎e‎ ‎s‎t‎i‎l‎l‎ ‎a‎i‎r‎w‎o‎r‎t‎h‎y‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎a‎i‎r‎c‎r‎a‎f‎t‎ ‎i‎n‎ ‎O‎r‎b‎i‎t‎a‎l‎ ‎A‎T‎K‎ ‎l‎i‎v‎e‎r‎y‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎P‎e‎g‎a‎s‎u‎s‎-‎X‎L‎ ‎r‎o‎c‎k‎e‎t‎ ‎w‎i‎t‎h‎ ‎e‎i‎g‎h‎t‎ ‎C‎y‎c‎l‎o‎n‎e‎ ‎G‎l‎o‎b‎a‎l‎ ‎N‎a‎v‎i‎g‎a‎t‎i‎o‎n‎ ‎S‎a‎t‎e‎l‎l‎i‎t‎e‎ ‎S‎y‎s‎t‎e‎m‎ ‎s‎p‎a‎c‎e‎c‎r‎a‎f‎t‎ ‎i‎n‎s‎i‎d‎e‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎L‎o‎r‎i‎ ‎L‎o‎s‎e‎y‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎g‎e‎t‎ ‎d‎r‎u‎n‎k‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎p‎u‎n‎c‎h‎ ‎a‎ ‎g‎u‎m‎b‎a‎l‎l‎ ‎m‎a‎c‎h‎i‎n‎e‎.‎"
br2jxjv5,Enemy Controller,noradninja,C#,Wednesday 4th of October 2023 08:16:56 AM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class EnemyController : MonoBehaviour {
	public enum EnemyState {
		idle,
		alert,
		looking,
		roaming,
		chase,
		attack,
		dodge
	}
	public enum enemyType {
		standIn,
		enemy2,
		enemy3
	}

//private vars
	private Vector3 startingPosition;
	private Collider[] rangeChecks;
	private bool onMesh = false;

//public vars
	[Header(""Enemy Setup"")]
	public enemyType typeOfEnemy;
	public Animator enemyAnimator;
	public GameObject player;
	public GameObject targetPoint;
	public  GameObject randomPointObject;
	public NavMeshAgent meshAgent;
	public float turnSpeed = 1.0f;

	
	[Header(""FOV and Visibility"")]
	public float viewRadius;
	[Range (0, 360)]
	public float fovAngle;
	public LayerMask targetMask;
	public LayerMask obstructionMask;
	public float distanceToPlayer;
	public bool isPlayerNear = false;
	public bool canSeePlayer = false;
	[Header(""Behavior"")]
	public EnemyState behaviorState;
	public float alertDelay = 1.5f;
	public float lookDelay = 1.5f;
	public bool alerted = false;
	public bool lookingForPlayer = false;
	public bool roaming = false;
	public bool isPlayerRunning;
	public bool FlashlightDisabled;
	public Vector3 randomCircle;
	private static readonly int IsAttacking = Animator.StringToHash(""isAttacking"");


	// Use this for initialization
	private void Start () {
		startingPosition = transform.position;
		enemyAnimator = GetComponent<Animator>();
		RandomizePoint();
	}
		
	// Update is called once per frame
	private void Update () {
		distanceToPlayer = Vector3.Distance(player.transform.position, this.transform.position);
		FlashlightController.FlashlightDisabled = FlashlightController.FlashlightOff; 
		isPlayerRunning = PlayerController.isRunning;
		
		if (distanceToPlayer < viewRadius){
			isPlayerNear = true;
			behaviorState = EnemyState.alert;
		}

		if (distanceToPlayer <= 1.5f){
			behaviorState = EnemyState.attack;
		}
		
	
		if (distanceToPlayer > viewRadius){
			isPlayerNear = false;
			alerted = false;
			canSeePlayer = false;
		}

		if (isPlayerNear){

			Vector3 dir = player.transform.position - transform.position;
			Quaternion lookRotation = Quaternion.LookRotation(dir);
			Vector3 rotation = Quaternion.Lerp(transform.rotation, lookRotation, Time.deltaTime * turnSpeed).eulerAngles;
			transform.rotation = Quaternion.Euler(0f, rotation.y, 0f);
		}


		switch (typeOfEnemy){
            case enemyType.standIn:
                StandInStates();
                break;

            case enemyType.enemy2:
                Type2States();
                break;

            case enemyType.enemy3:
                Type3States();
                break;

        }
		
	}

    private void Type3States()
    {
        switch (behaviorState)
        {
            case EnemyState.idle:
                //play idle animation
                break;

            case EnemyState.alert:
                FaceTarget(player);
                break;
			
			case EnemyState.looking:

			break;

            case EnemyState.chase:
                //chase player
                break;

            case EnemyState.attack:
                //attack player
                break;

            case EnemyState.dodge:
                //dodge player attack
                break;
        }
    }

    private void Type2States()
    {
        switch (behaviorState)
        {
            case EnemyState.idle:
                //play idle animation
                break;

            case EnemyState.alert:
                FaceTarget(player);
                break;

			case EnemyState.looking:

			break;

            case EnemyState.chase:
                //chase player
                break;

            case EnemyState.attack:
                //attack player
                break;

            case EnemyState.dodge:
                //dodge player attack
                break;
        }
    }

    private void StandInStates()
    {
        switch (behaviorState)
        {
            case EnemyState.idle:
				if (!canSeePlayer){
					if (!lookingForPlayer){
						behaviorState = EnemyState.looking;
					}
				}
				if (canSeePlayer){
					behaviorState = EnemyState.alert;
				}
                if (PlayerController.currentTarget == targetPoint)
                {
                    PlayerController.currentTarget = null;
                }
                // player.GetComponent<PlayerController>().lightMovement = true;
				isPlayerNear = false;
                if (enemyAnimator.GetBool(IsAttacking) == true){
					enemyAnimator.SetBool(IsAttacking, false);
				}
				break;

            case EnemyState.alert:
				if (!alerted){
					// StopAllCoroutines();
					if (!FlashlightController.FlashlightDisabled){ 
						if (isPlayerRunning){
							StartCoroutine(AlertTimer(alertDelay/3));
						}
						else if (!isPlayerRunning){
							StartCoroutine(AlertTimer(alertDelay));	
						}
					}
					else if (FlashlightController.FlashlightDisabled){
						if (isPlayerRunning){
							StartCoroutine(AlertTimer(alertDelay/2));
						}
						else if (!isPlayerRunning){
							StartCoroutine(AlertTimer(alertDelay*2));	
						}
					}
				}
				if (distanceToPlayer <= viewRadius){
					if (alerted){
						roaming = false;
						lookingForPlayer = false;
						FaceTarget(player);
						StartCoroutine(FOVRoutine());
						PlayerController.currentTarget = targetPoint;
						// player.GetComponent<PlayerController>().lightMovement = false;
						if (canSeePlayer){
								meshAgent.SetDestination(player.transform.position);
								FaceTarget(player);
						}
						if (enemyAnimator.GetBool(IsAttacking) == true){
								enemyAnimator.SetBool(IsAttacking, false);
						}
					}
				}
				if (!isPlayerNear){
						lookingForPlayer = false;
						behaviorState = EnemyState.looking;
				}
				if (enemyAnimator.GetBool(IsAttacking) == true){
					enemyAnimator.SetBool(IsAttacking, false);
				}              
                break;

			case EnemyState.looking:
				roaming = false;
				alerted = false;
				PlayerController.lightMovement = true;
				//only null if the player hasn't targeted another enemy since us
				if (PlayerController.currentTarget == targetPoint){ 
					PlayerController.currentTarget = null;
				}

				if (!lookingForPlayer){
					Look();
				}
				if (enemyAnimator.GetBool(IsAttacking) == true){
					enemyAnimator.SetBool(IsAttacking, false);
				}
				break;

			case EnemyState.roaming:
					lookingForPlayer = false;
					alerted = false;
					RoamAround();
				if (enemyAnimator.GetBool(IsAttacking) == true){
					enemyAnimator.SetBool(IsAttacking, false);
				}
					break;

            case EnemyState.chase:
			lookingForPlayer = false;
			roaming = false;
			alerted = false;
			FieldOfViewCheck();
			if (canSeePlayer){
				meshAgent.SetDestination(player.transform.position);
				FaceTarget(player);
				PlayerController.currentTarget = targetPoint;
				// player.GetComponent<PlayerController>().lightMovement = false;
			}
			if (enemyAnimator.GetBool(IsAttacking) == true){
					enemyAnimator.SetBool(IsAttacking, false);
			}
			break;

            case EnemyState.attack:
				lookingForPlayer = false;
				roaming = false;
				alerted = false;
                //attack player
				if (enemyAnimator.GetBool(IsAttacking) == false){
					enemyAnimator.SetBool(IsAttacking, true);
				}
				meshAgent.SetDestination(player.transform.position);
				FaceTarget(player);
				PlayerController.currentTarget = targetPoint;
				// player.GetComponent<PlayerController>().lightMovement = false;
			break;

            case EnemyState.dodge:
                //dodge player attack
			break;
        }
    }

    private void FaceTarget(GameObject target)
    {
        Vector3 dir = target.transform.position - transform.position;
        Quaternion lookRotation = Quaternion.LookRotation(dir);
        Vector3 rotation = Quaternion.Lerp(transform.rotation, lookRotation, Time.deltaTime * turnSpeed).eulerAngles;
        transform.rotation = Quaternion.Euler(0f, rotation.y, 0f);
    }

	private IEnumerator FOVRoutine(){
		FieldOfViewCheck();
		yield return null;
	}

	private void FieldOfViewCheck()
	{
		rangeChecks = Physics.OverlapSphere(transform.position, viewRadius, targetMask);

		if (rangeChecks.Length !=0){
			var target = rangeChecks[0].transform;
			var directionToTarget = (target.position - transform.position).normalized;

			if (Vector3.Angle(transform.forward, directionToTarget) < fovAngle /2)
			{
				var position = transform.position;
				var distanceToTarget = Vector3.Distance(position, target.position);
				canSeePlayer = !Physics.Raycast(position, directionToTarget, distanceToTarget, obstructionMask);
			}
			else 
				canSeePlayer = false;
		}
		else if (canSeePlayer)
			canSeePlayer = false;
	}
	private IEnumerator AlertTimer(float duration){
		var wait = new WaitForSecondsRealtime(duration);
		yield return wait;
		alerted = true;
		isPlayerNear = true;
	}
	private void Look(){
		lookingForPlayer = true;
		roaming = false;
		//print (""Looking Around"");
		StartCoroutine(LookWait(lookDelay));
	}

	private IEnumerator LookWait(float duration){
		//print (""Enter"");
		var wait = new WaitForSecondsRealtime(duration);
		yield return wait;
		//print (""Exit after "" + duration + "" seconds."");
		RandomizePoint();
		behaviorState = EnemyState.roaming;
	}

	private void RandomizePoint()
	{
		while (true)
		{
			randomCircle = new Vector3(Random.insideUnitCircle.x * viewRadius, 0, (Random.insideUnitCircle.y) * viewRadius);
			var point = randomPointObject.transform.position + randomCircle;
			var walkMask = 1 << NavMesh.GetAreaFromName(""Walkable"");
			NavMeshHit hit;
			if (NavMesh.SamplePosition(point, out hit, 0.15f, walkMask)) //is the point within 0.25 units of a NavMesh surface
			{
				onMesh = true;
				randomPointObject.transform.position = point;
			}
			else
			{
				onMesh = false;
				continue;
			}

			break;
		}
	}

	private void RoamAround(){
		lookingForPlayer = false;
		roaming = true;
		meshAgent.SetDestination(randomPointObject.transform.position);
		FaceTarget(randomPointObject);
		// // Check if we've reached the destination
		if (meshAgent.pathPending) return;
		if (!(meshAgent.remainingDistance <= meshAgent.stoppingDistance)) return;
		if (meshAgent.velocity.sqrMagnitude <= 0.025f)
		{
			behaviorState = EnemyState.looking;
		}
	}
}"
0eHC7h48,docker errors,Capoeirista,JavaScript,Wednesday 4th of October 2023 08:09:07 AM CDT,"Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.467869693+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.expire_quiescent_template"" error=""open /proc/sys/net/ipv4/vs/expire_quiescent_template: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.467889881+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.conn_reuse_mode"" error=""open /proc/sys/net/ipv4/vs/conn_reuse_mode: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.467907125+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.expire_quiescent_template"" error=""open /proc/sys/net/ipv4/vs/expire_quiescent_template: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.467926139+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.conn_reuse_mode"" error=""open /proc/sys/net/ipv4/vs/conn_reuse_mode: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.467946783+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.expire_nodest_conn"" error=""open /proc/sys/net/ipv4/vs/expire_nodest_conn: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.467989639+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.expire_nodest_conn"" error=""open /proc/sys/net/ipv4/vs/expire_nodest_conn: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.468011824+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.expire_quiescent_template"" error=""open /proc/sys/net/ipv4/vs/expire_quiescent_template: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.468027898+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.conn_reuse_mode"" error=""open /proc/sys/net/ipv4/vs/conn_reuse_mode: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.468041852+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.conn_reuse_mode"" error=""open /proc/sys/net/ipv4/vs/conn_reuse_mode: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.468055218+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.expire_nodest_conn"" error=""open /proc/sys/net/ipv4/vs/expire_nodest_conn: no such file or directory""
Oct  4 16:05:36 moscow-battle dockerd[421234]: time=""2023-10-04T16:05:36.468068858+03:00"" level=error msg=""error reading the kernel parameter net.ipv4.vs.expire_quiescent_template"" error=""open /proc/sys/net/ipv4/vs/expire_quiescent_template: no such file or directory"""
1tfsxfXV,Button.d.ts,Synthoel,TypeScript,Wednesday 4th of October 2023 08:02:49 AM CDT,"import React from 'react';
declare const Button: React.ForwardRefExoticComponent<{
    variant?: ""link"" | ""primary"" | ""secondary"" | undefined;
} & Pick<import(""@chakra-ui/react"").ButtonProps, ""form"" | ""p"" | ""slot"" | ""style"" | ""title"" | ""clipPath"" | ""filter"" | ""children"" | ""m"" | ""margin"" | ""mt"" | ""marginBlockStart"" | ""marginTop"" | ""mr"" | ""marginInlineEnd"" | ""marginEnd"" | ""me"" | ""marginRight"" | ""mb"" | ""marginBlockEnd"" | ""marginBottom"" | ""ml"" | ""marginInlineStart"" | ""marginStart"" | ""ms"" | ""marginLeft"" | ""mx"" | ""marginInline"" | ""marginX"" | ""my"" | ""marginBlock"" | ""marginY"" | ""padding"" | ""pt"" | ""paddingBlockStart"" | ""paddingTop"" | ""pr"" | ""paddingInlineEnd"" | ""paddingEnd"" | ""pe"" | ""paddingRight"" | ""pb"" | ""paddingBlockEnd"" | ""paddingBottom"" | ""pl"" | ""paddingInlineStart"" | ""paddingStart"" | ""ps"" | ""paddingLeft"" | ""px"" | ""paddingInline"" | ""paddingX"" | ""py"" | ""paddingBlock"" | ""paddingY"" | ""textColor"" | ""color"" | ""fill"" | ""stroke"" | ""transition"" | ""transitionProperty"" | ""transitionTimingFunction"" | ""transitionDuration"" | ""transitionDelay"" | ""animation"" | ""willChange"" | ""fontWeight"" | ""lineHeight"" | ""letterSpacing"" | ""fontSize"" | ""fontFamily"" | ""textAlign"" | ""fontStyle"" | ""wordBreak"" | ""overflowWrap"" | ""textOverflow"" | ""textTransform"" | ""whiteSpace"" | ""noOfLines"" | ""isTruncated"" | ""alignItems"" | ""alignContent"" | ""justifyItems"" | ""justifyContent"" | ""flexWrap"" | ""flexFlow"" | ""flexBasis"" | ""flexDirection"" | ""flexDir"" | ""flex"" | ""gap"" | ""rowGap"" | ""columnGap"" | ""justifySelf"" | ""alignSelf"" | ""order"" | ""flexGrow"" | ""flexShrink"" | ""placeItems"" | ""placeContent"" | ""placeSelf"" | ""experimental_spaceX"" | ""experimental_spaceY"" | ""transform"" | ""transformOrigin"" | ""translateX"" | ""translateY"" | ""rotate"" | ""skewX"" | ""skewY"" | ""scaleX"" | ""scaleY"" | ""scale"" | ""gridGap"" | ""gridColumnGap"" | ""gridRowGap"" | ""gridColumnStart"" | ""gridRowStart"" | ""gridRowEnd"" | ""gridTemplate"" | ""gridColumnEnd"" | ""gridColumn"" | ""gridRow"" | ""gridAutoFlow"" | ""gridAutoColumns"" | ""gridAutoRows"" | ""gridTemplateColumns"" | ""gridTemplateRows"" | ""gridTemplateAreas"" | ""gridArea"" | ""blur"" | ""brightness"" | ""contrast"" | ""hueRotate"" | ""invert"" | ""saturate"" | ""dropShadow"" | ""backdropFilter"" | ""backdropBlur"" | ""backdropBrightness"" | ""backdropContrast"" | ""backdropHueRotate"" | ""backdropInvert"" | ""backdropSaturate"" | ""display"" | ""d"" | ""width"" | ""w"" | ""inlineSize"" | ""boxSize"" | ""maxWidth"" | ""maxW"" | ""maxInlineSize"" | ""minWidth"" | ""minW"" | ""minInlineSize"" | ""height"" | ""h"" | ""blockSize"" | ""maxHeight"" | ""maxH"" | ""maxBlockSize"" | ""minHeight"" | ""minH"" | ""minBlockSize"" | ""verticalAlign"" | ""overflow"" | ""overflowX"" | ""overflowY"" | ""boxSizing"" | ""boxDecorationBreak"" | ""float"" | ""objectFit"" | ""objectPosition"" | ""overscrollBehavior"" | ""overscroll"" | ""overscrollBehaviorX"" | ""overscrollX"" | ""overscrollBehaviorY"" | ""overscrollY"" | ""visibility"" | ""isolation"" | ""border"" | ""borderWidth"" | ""borderStyle"" | ""borderColor"" | ""borderRadius"" | ""rounded"" | ""borderTop"" | ""borderBlockStart"" | ""borderTopWidth"" | ""borderBlockStartWidth"" | ""borderBottomWidth"" | ""borderBlockEndWidth"" | ""borderLeftWidth"" | ""borderStartWidth"" | ""borderInlineStartWidth"" | ""borderRightWidth"" | ""borderEndWidth"" | ""borderInlineEndWidth"" | ""borderTopStyle"" | ""borderBlockStartStyle"" | ""borderBottomStyle"" | ""borderBlockEndStyle"" | ""borderLeftStyle"" | ""borderStartStyle"" | ""borderInlineStartStyle"" | ""borderRightStyle"" | ""borderEndStyle"" | ""borderInlineEndStyle"" | ""borderTopColor"" | ""borderBlockStartColor"" | ""borderBottomColor"" | ""borderBlockEndColor"" | ""borderLeftColor"" | ""borderStartColor"" | ""borderInlineStartColor"" | ""borderRightColor"" | ""borderEndColor"" | ""borderInlineEndColor"" | ""borderRight"" | ""borderEnd"" | ""borderInlineEnd"" | ""borderBottom"" | ""borderBlockEnd"" | ""borderLeft"" | ""borderStart"" | ""borderInlineStart"" | ""borderTopRadius"" | ""roundedTop"" | ""borderRightRadius"" | ""roundedRight"" | ""roundedEnd"" | ""borderInlineEndRadius"" | ""borderEndRadius"" | ""borderBottomRadius"" | ""roundedBottom"" | ""borderLeftRadius"" | ""roundedLeft"" | ""roundedStart"" | ""borderInlineStartRadius"" | ""borderStartRadius"" | ""borderTopLeftRadius"" | ""borderTopStartRadius"" | ""borderStartStartRadius"" | ""roundedTopLeft"" | ""roundedTopStart"" | ""borderTopRightRadius"" | ""borderTopEndRadius"" | ""borderStartEndRadius"" | ""roundedTopRight"" | ""roundedTopEnd"" | ""borderBottomLeftRadius"" | ""borderBottomStartRadius"" | ""borderEndStartRadius"" | ""roundedBottomLeft"" | ""roundedBottomStart"" | ""borderBottomRightRadius"" | ""borderBottomEndRadius"" | ""borderEndEndRadius"" | ""roundedBottomRight"" | ""roundedBottomEnd"" | ""borderX"" | ""borderInline"" | ""borderY"" | ""borderBlock"" | ""boxShadow"" | ""shadow"" | ""mixBlendMode"" | ""blendMode"" | ""backgroundBlendMode"" | ""bgBlendMode"" | ""opacity"" | ""bg"" | ""bgClip"" | ""backgroundClip"" | ""background"" | ""bgColor"" | ""backgroundColor"" | ""backgroundImage"" | ""bgGradient"" | ""backgroundSize"" | ""bgPos"" | ""backgroundPosition"" | ""bgImage"" | ""bgImg"" | ""bgRepeat"" | ""backgroundRepeat"" | ""bgSize"" | ""bgAttachment"" | ""backgroundAttachment"" | ""bgPosition"" | ""listStyleType"" | ""listStylePosition"" | ""listStylePos"" | ""listStyleImage"" | ""listStyleImg"" | ""zIndex"" | ""top"" | ""insetBlockStart"" | ""right"" | ""insetInlineEnd"" | ""insetEnd"" | ""bottom"" | ""insetBlockEnd"" | ""left"" | ""insetInlineStart"" | ""insetStart"" | ""inset"" | ""insetX"" | ""insetY"" | ""pos"" | ""position"" | ""insetInline"" | ""insetBlock"" | ""ring"" | ""ringColor"" | ""ringOffset"" | ""ringOffsetColor"" | ""ringInset"" | ""scrollBehavior"" | ""scrollSnapAlign"" | ""scrollSnapStop"" | ""scrollSnapType"" | ""scrollMargin"" | ""scrollMarginTop"" | ""scrollMarginBottom"" | ""scrollMarginLeft"" | ""scrollMarginRight"" | ""scrollMarginX"" | ""scrollMarginY"" | ""scrollPadding"" | ""scrollPaddingTop"" | ""scrollPaddingBottom"" | ""scrollPaddingLeft"" | ""scrollPaddingRight"" | ""scrollPaddingX"" | ""scrollPaddingY"" | ""appearance"" | ""userSelect"" | ""pointerEvents"" | ""resize"" | ""cursor"" | ""outline"" | ""outlineOffset"" | ""outlineColor"" | ""textDecoration"" | ""textDecor"" | ""textDecorationColor"" | ""textDecorationThickness"" | ""textDecorationStyle"" | ""textDecorationLine"" | ""textUnderlineOffset"" | ""textShadow"" | ""srOnly"" | ""layerStyle"" | ""textStyle"" | ""apply"" | ""as"" | ""key"" | ""autoFocus"" | ""disabled"" | ""formAction"" | ""formEncType"" | ""formMethod"" | ""formNoValidate"" | ""formTarget"" | ""name"" | ""type"" | ""value"" | ""defaultChecked"" | ""defaultValue"" | ""suppressContentEditableWarning"" | ""suppressHydrationWarning"" | ""accessKey"" | ""className"" | ""contentEditable"" | ""contextMenu"" | ""dir"" | ""draggable"" | ""hidden"" | ""id"" | ""lang"" | ""placeholder"" | ""spellCheck"" | ""tabIndex"" | ""translate"" | ""radioGroup"" | ""role"" | ""about"" | ""datatype"" | ""inlist"" | ""prefix"" | ""property"" | ""resource"" | ""typeof"" | ""vocab"" | ""autoCapitalize"" | ""autoCorrect"" | ""autoSave"" | ""itemProp"" | ""itemScope"" | ""itemType"" | ""itemID"" | ""itemRef"" | ""results"" | ""security"" | ""unselectable"" | ""inputMode"" | ""is"" | ""aria-activedescendant"" | ""aria-atomic"" | ""aria-autocomplete"" | ""aria-busy"" | ""aria-checked"" | ""aria-colcount"" | ""aria-colindex"" | ""aria-colspan"" | ""aria-controls"" | ""aria-current"" | ""aria-describedby"" | ""aria-details"" | ""aria-disabled"" | ""aria-dropeffect"" | ""aria-errormessage"" | ""aria-expanded"" | ""aria-flowto"" | ""aria-grabbed"" | ""aria-haspopup"" | ""aria-hidden"" | ""aria-invalid"" | ""aria-keyshortcuts"" | ""aria-label"" | ""aria-labelledby"" | ""aria-level"" | ""aria-live"" | ""aria-modal"" | ""aria-multiline"" | ""aria-multiselectable"" | ""aria-orientation"" | ""aria-owns"" | ""aria-placeholder"" | ""aria-posinset"" | ""aria-pressed"" | ""aria-readonly"" | ""aria-relevant"" | ""aria-required"" | ""aria-roledescription"" | ""aria-rowcount"" | ""aria-rowindex"" | ""aria-rowspan"" | ""aria-selected"" | ""aria-setsize"" | ""aria-sort"" | ""aria-valuemax"" | ""aria-valuemin"" | ""aria-valuenow"" | ""aria-valuetext"" | ""dangerouslySetInnerHTML"" | ""onCopy"" | ""onCopyCapture"" | ""onCut"" | ""onCutCapture"" | ""onPaste"" | ""onPasteCapture"" | ""onCompositionEnd"" | ""onCompositionEndCapture"" | ""onCompositionStart"" | ""onCompositionStartCapture"" | ""onCompositionUpdate"" | ""onCompositionUpdateCapture"" | ""onFocus"" | ""onFocusCapture"" | ""onBlur"" | ""onBlurCapture"" | ""onChange"" | ""onChangeCapture"" | ""onBeforeInput"" | ""onBeforeInputCapture"" | ""onInput"" | ""onInputCapture"" | ""onReset"" | ""onResetCapture"" | ""onSubmit"" | ""onSubmitCapture"" | ""onInvalid"" | ""onInvalidCapture"" | ""onLoad"" | ""onLoadCapture"" | ""onError"" | ""onErrorCapture"" | ""onKeyDown"" | ""onKeyDownCapture"" | ""onKeyPress"" | ""onKeyPressCapture"" | ""onKeyUp"" | ""onKeyUpCapture"" | ""onAbort"" | ""onAbortCapture"" | ""onCanPlay"" | ""onCanPlayCapture"" | ""onCanPlayThrough"" | ""onCanPlayThroughCapture"" | ""onDurationChange"" | ""onDurationChangeCapture"" | ""onEmptied"" | ""onEmptiedCapture"" | ""onEncrypted"" | ""onEncryptedCapture"" | ""onEnded"" | ""onEndedCapture"" | ""onLoadedData"" | ""onLoadedDataCapture"" | ""onLoadedMetadata"" | ""onLoadedMetadataCapture"" | ""onLoadStart"" | ""onLoadStartCapture"" | ""onPause"" | ""onPauseCapture"" | ""onPlay"" | ""onPlayCapture"" | ""onPlaying"" | ""onPlayingCapture"" | ""onProgress"" | ""onProgressCapture"" | ""onRateChange"" | ""onRateChangeCapture"" | ""onSeeked"" | ""onSeekedCapture"" | ""onSeeking"" | ""onSeekingCapture"" | ""onStalled"" | ""onStalledCapture"" | ""onSuspend"" | ""onSuspendCapture"" | ""onTimeUpdate"" | ""onTimeUpdateCapture"" | ""onVolumeChange"" | ""onVolumeChangeCapture"" | ""onWaiting"" | ""onWaitingCapture"" | ""onAuxClick"" | ""onAuxClickCapture"" | ""onClick"" | ""onClickCapture"" | ""onContextMenu"" | ""onContextMenuCapture"" | ""onDoubleClick"" | ""onDoubleClickCapture"" | ""onDrag"" | ""onDragCapture"" | ""onDragEnd"" | ""onDragEndCapture"" | ""onDragEnter"" | ""onDragEnterCapture"" | ""onDragExit"" | ""onDragExitCapture"" | ""onDragLeave"" | ""onDragLeaveCapture"" | ""onDragOver"" | ""onDragOverCapture"" | ""onDragStart"" | ""onDragStartCapture"" | ""onDrop"" | ""onDropCapture"" | ""onMouseDown"" | ""onMouseDownCapture"" | ""onMouseEnter"" | ""onMouseLeave"" | ""onMouseMove"" | ""onMouseMoveCapture"" | ""onMouseOut"" | ""onMouseOutCapture"" | ""onMouseOver"" | ""onMouseOverCapture"" | ""onMouseUp"" | ""onMouseUpCapture"" | ""onSelect"" | ""onSelectCapture"" | ""onTouchCancel"" | ""onTouchCancelCapture"" | ""onTouchEnd"" | ""onTouchEndCapture"" | ""onTouchMove"" | ""onTouchMoveCapture"" | ""onTouchStart"" | ""onTouchStartCapture"" | ""onPointerDown"" | ""onPointerDownCapture"" | ""onPointerMove"" | ""onPointerMoveCapture"" | ""onPointerUp"" | ""onPointerUpCapture"" | ""onPointerCancel"" | ""onPointerCancelCapture"" | ""onPointerEnter"" | ""onPointerEnterCapture"" | ""onPointerLeave"" | ""onPointerLeaveCapture"" | ""onPointerOver"" | ""onPointerOverCapture"" | ""onPointerOut"" | ""onPointerOutCapture"" | ""onGotPointerCapture"" | ""onGotPointerCaptureCapture"" | ""onLostPointerCapture"" | ""onLostPointerCaptureCapture"" | ""onScroll"" | ""onScrollCapture"" | ""onWheel"" | ""onWheelCapture"" | ""onAnimationStart"" | ""onAnimationStartCapture"" | ""onAnimationEnd"" | ""onAnimationEndCapture"" | ""onAnimationIteration"" | ""onAnimationIterationCapture"" | ""onTransitionEnd"" | ""onTransitionEndCapture"" | ""_hover"" | ""_active"" | ""_focus"" | ""_highlighted"" | ""_focusWithin"" | ""_focusVisible"" | ""_disabled"" | ""_readOnly"" | ""_before"" | ""_after"" | ""_empty"" | ""_expanded"" | ""_checked"" | ""_grabbed"" | ""_pressed"" | ""_invalid"" | ""_valid"" | ""_loading"" | ""_selected"" | ""_hidden"" | ""_autofill"" | ""_even"" | ""_odd"" | ""_first"" | ""_last"" | ""_notFirst"" | ""_notLast"" | ""_visited"" | ""_activeLink"" | ""_activeStep"" | ""_indeterminate"" | ""_groupHover"" | ""_peerHover"" | ""_groupFocus"" | ""_peerFocus"" | ""_groupFocusVisible"" | ""_peerFocusVisible"" | ""_groupActive"" | ""_peerActive"" | ""_groupDisabled"" | ""_peerDisabled"" | ""_groupInvalid"" | ""_peerInvalid"" | ""_groupChecked"" | ""_peerChecked"" | ""_groupFocusWithin"" | ""_peerFocusWithin"" | ""_peerPlaceholderShown"" | ""_placeholder"" | ""_placeholderShown"" | ""_fullScreen"" | ""_selection"" | ""_rtl"" | ""_ltr"" | ""_mediaDark"" | ""_mediaReduceMotion"" | ""_dark"" | ""_light"" | ""colorScheme"" | ""__css"" | ""sx"" | ""css"" | ""isLoading"" | ""isActive"" | ""isDisabled"" | ""loadingText"" | ""isFullWidth"" | ""leftIcon"" | ""rightIcon"" | ""iconSpacing"" | ""spinner"" | ""spinnerPlacement"" | ""size"" | ""orientation"" | ""styleConfig""> & React.RefAttributes<unknown>>;
export default Button;
"
qZGW3nmh,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:46 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
HfyhT9vH,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:45 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
z9FUXu0e,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:43 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
sUHmBwPL,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:41 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
85mbPrz7,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:40 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
14PjXhxE,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:38 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
4MaaRvc8,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:35 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
mHAnG5sn,Hashed Email With Exclude,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:34 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
aeWPbyEP,Hashed Email - Full,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:32 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
4gm6Y1KM,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 4th of October 2023 08:00:30 AM CDT,"Pasted at: 04/10/2023 14:00
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
