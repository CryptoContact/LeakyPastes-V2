id,title,username,language,date,content
swBQ0SPJ,Untitled,G0nz0uk,YAML,Friday 5th of April 2024 06:45:31 AM CDT,"version: ""3.9""

x-environment: &oncall-environment
  DATABASE_TYPE: sqlite3
  BROKER_TYPE: redis
  BASE_URL: $DOMAIN
  SECRET_KEY: $SECRET_KEY
  FEATURE_PROMETHEUS_EXPORTER_ENABLED: ${FEATURE_PROMETHEUS_EXPORTER_ENABLED:-false}
  PROMETHEUS_EXPORTER_SECRET: ${PROMETHEUS_EXPORTER_SECRET:-}
  REDIS_URI: redis://redis:6379/0
  DJANGO_SETTINGS_MODULE: settings.hobby
  CELERY_WORKER_QUEUE: ""default,critical,long,slack,telegram,webhook,retry,celery,grafana""
  CELERY_WORKER_CONCURRENCY: ""1""
  CELERY_WORKER_MAX_TASKS_PER_CHILD: ""100""
  CELERY_WORKER_SHUTDOWN_INTERVAL: ""65m""
  CELERY_WORKER_BEAT_ENABLED: ""True""
  GRAFANA_API_URL: https://mydomain.com:3000

services:
  engine:
    image: grafana/oncall
    restart: always
    ports:
      - ""8080:8080""
    command: sh -c ""uwsgi --ini uwsgi.ini""
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      oncall_db_migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

  celery:
    image: grafana/oncall
    restart: always
    command: sh -c ""./celery_with_exporter.sh""
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      oncall_db_migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

  oncall_db_migration:
    image: grafana/oncall
    command: python manage.py migrate --noinput
    environment: *oncall-environment
    volumes:
      - oncall_data:/var/lib/oncall
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7.0.5
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: ""0.5""
    healthcheck:
      test: [""CMD"", ""redis-cli"", ""ping""]
      timeout: 5s
      interval: 5s
      retries: 10

#  prometheus:
#    image: prom/prometheus
#    hostname: prometheus
#    restart: always
#    ports:
#      - ""9090:9090""
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus_data:/prometheus
#    profiles:
#      - with_prometheus

#  grafana:
#    image: ""grafana/${GRAFANA_IMAGE:-grafana:latest}""
#    restart: always
#    ports:
#      - ""3000:3000""
#    environment:
#      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
#      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
#      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: grafana-oncall-app
#      GF_INSTALL_PLUGINS: grafana-oncall-app
#    volumes:
#      - grafana_data:/var/lib/grafana
#    deploy:
#      resources:
#        limits:
#          memory: 500m
#          cpus: ""0.5""
#    profiles:
#      - with_grafana

volumes:
#  grafana_data:
#  prometheus_data:
  oncall_data:
  redis_data:"
T7a1bH58,[TH] RoS Interactions Card,Lairai,HTML,Friday 5th of April 2024 06:45:18 AM CDT,"<!---
    ╭── ⋅ ⋅ ──────── ✩ ──────── ⋅ ⋅ ──╮ 
    
    For use within Realm of Serpents! Do not remove the credits.
    This code is meant to be used by people who are at least decently familiar with:
    - HTML
    - Toyhouse HTML specifically
    If you have never seen HTML before or you do not know how to edit it,
    please do not DM me or reach out to me privately with a request to walk you through the process - I cannot instruct everyone 1:1.
    Similarly, if you edit the code outside of the indicated areas and something breaks,
    it is best to re-paste the base code and start from there.
    
    ╰── ⋅ ⋅ ──────── ✩ ──────── ⋅ ⋅ ──╯ 
    ------------------->

<div class=""col-sm col-md-7 mx-auto my-5"" style=""font-family:'Garamond';font-size:13px;letter-spacing:0.6px;color:#505066"">
  
  
    <!--- 
    
    NAME PLATE
    The first letter of the name and surname has to be separate and has to be in THAT EXACT SPOT to preserve the formatting.
    Do not add any spaces outside of what is already there
    
    --->  
      <div class=""row no-gutters mt-3"">
        <div class=""hidden-md-down col-md-1""></div>
        <div class=""col-sm-12 col-md-10 px-3 py-2"" style=""background:#5D609C;font-variant:small-caps;color:#E3DCCF;font-size:2em;letter-spacing:2px;font-weight:bold;position:relative;border-width:0 3px 0px 3px;border-style:solid;border-color:#9CA5BE"">
          
          <div style=""width:97%;height:120%;position:absolute;border:1px solid #BEB3A0;top:-20%;left:0;right:0;margin:auto;border-bottom:0;""></div>
          
          <span style=""color:#9CA5BE"">
            
            N</span>ame 
          
          
          <span style=""color:#9CA5BE"">
            
            
            S</span>urname
          
          <a href=""
          
          
          
          

          LoTS PROFILE LINK HERE
          
          


          
          
          "" target=""_blank"" class=""text-secondary tooltipster"" title=""
          
          
          

          Profile up to date / Profile update pending
          


          
          
          "" style=""text-shadow:0px 0px 5px;position:absolute;right:3%;"">
          
          <i class=""fat fa-user-magnifying-glass float-right mt-1""></i></a>
    
          
          </div>
        <div class=""hidden-md-down col-md-1""></div>
      </div>
    
    <!---- 
    
    MAIN BODY
    Replace the URL with a URL leading to an image of your character. It has to be an image with a non-transparent background ideally.


    --->
    <div class=""row no-gutters p-2 justify-content-between"" style=""background:url(https://i.postimg.cc/1t3FDN4Q/dfu5q6f-f633ca85-a5d2-461f-b90a-4625839786e2.png);background-repeat:repeat;border-radius:0.15em;background-size:50%"">
      
      <div class=""col-sm-12 col-md-3 ml-md-n3"" style=""background:url(
      
      
      
      
      https://images.pexels.com/photos/2169276/pexels-photo-2169276.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1
      
      
      
      
      );height:300px;background-size:cover;border-radius:0.15em;position:relative;border-width:3px 0 3px 0;border-style:solid;border-color:#5D609C"">
        
        <div style=""width:90%;height:90%;background:url(https://i.postimg.cc/jdgXJtwc/Frame-Ro-SColor.png);background-size:contain;background-repeat:no-repeat;background-position:center;margin:auto;margin-top:5%""></div>
        
      </div>
    
    <div class=""col-sm-12 col-md-9 my-2 pb-4"" style=""background:#E3DCCF;position:relative;border:2px solid #DCD5C7"">
    <div style=""width:104%;height:90%;position:absolute;border:1px solid #BEB3A0;left:-1.5%;top:5%;z-index:1""></div>  
    
    <div class=""p-1"" style=""background:#E3DCCF;z-index:2;position:absolute;left:2%;font-variant:small-caps;font-size:1.2em;letter-spacing:2px;font-weight:bold;color:#8490b4"">
      <i class=""fat fa-magnifying-glass"" style=""color:#BEB3A0""></i>
      
      Information Summary
      
      </div>
      
      <!---- AGE ETC --->
      <div class=""row no-gutters"">
      <div class=""col-sm-12 col-md-6 p-2 mt-4"">
        
        <i class=""fad fa-bracket-square"" style=""color:#9CA5BE;""></i>
        
        <b style=""color:#5D609C;"">
          
          
          
        28
          
          
          
        </b>
        
        
        
        years old
        


        <i class=""fad fa-bracket-square-right"" style=""color:#9CA5BE;""></i>
        <span style=""font-variant:small-caps;font-weight:bold;"">
        
        
        
        
        Male Human 
        
        
        
        
        </span>
        
      </div>
      <div class=""col-sm-12 col-md-6 p-2 mt-4"" style=""font-style:italic;font-size:1.1em;color:#82745c;"">
        <i class=""fa-duotone fa-quotes mr-2"" style=""color:#9CA5BE""></i>
        
       
        

        Very short quote here, ideally on one line.
       
        

        
      </div>  
      </div><!---- AGE ETC --->
      <!---- 
    
    CHARACTER TAGS
    Each <span> class is its own separate tag. Feel free to copy and paste the element to add more tags.
    

      --->
      <div class=""flex-row flex-wrap"" style=""font-size:0.85em;"">
        
        <span class=""px-3 mx-1 my-1"" style=""background:#5D609C;color:#EEEAE2;font-variant:small-caps;letter-spacing:2px;font-weight:bold;border-radius:0.15em 0;border-width:0 2px;border-style:solid;border-color:#BEB3A0"">
          
          
        
            

        Talons Agent  
       
        

         
          
        </span>
        <span class=""px-3 mx-1 my-1"" style=""background:#5D609C;color:#EEEAE2;font-variant:small-caps;letter-spacing:2px;font-weight:bold;border-radius:0.15em 0;border-width:0 2px;border-style:solid;border-color:#BEB3A0"">
         
        
            

          
        Revived  
         


         
          
        </span>
        <span class=""px-3 mx-1 my-1"" style=""background:#5D609C;color:#EEEAE2;font-variant:small-caps;letter-spacing:2px;font-weight:bold;border-radius:0.15em 0;border-width:0 2px;border-style:solid;border-color:#BEB3A0"">
        <i class=""fa-duotone fa-message-heart mr-1""></i> 
         
        
        

        Panromantic Asexual  
         


         
          
        </span>
        <span class=""px-3 mx-1 my-1"" style=""background:#5D609C;color:#EEEAE2;font-variant:small-caps;letter-spacing:2px;font-weight:bold;border-radius:0.15em 0;border-width:0 2px;border-style:solid;border-color:#BEB3A0"">
        <i class=""fa-messages-question fad mr-1""></i> 
         


          
        He/him  
         
        
        

          
        </span>    
        
      </div>
      
      <p class=""p-2 text-justify mb-1"" style=""color:#82745c"">
        
        
        <b style=""color:#505066"">
          


          
        Provide a short description of your character here.
        


        
        </b>
        


        Include things like their reputation, how others could hear of them, who they typically work with or encounter on a day-to-day basis, anything that could be relevant to interactions with other people's characters.
        


        
      </p>
      
      
      <p class=""px-3"" style=""font-weight:bold;font-variant:small-caps;border-bottom:1px dashed #BEB3A0""><span style=""color:#8490b4;font-size:1.2em;"">L</span>ocations</p>
    
    <div class=""row no-gutters"">
      <div class=""col-sm-12 col-md-6"">
    <!----- 
    
    LOCATION  BULLET POINT 
    
    ---->
      <div class=""row no-gutters px-3 py-1"" style=""color:#82745c"">
        <div class=""col text-center pr-2""><i class=""fat fa-solid fa-map-pin"" style=""transform:rotate(-90deg);color:#8490b4""></i></div>
        <div class=""col-11"">
          


        Urbis Lumen, Ironbrook  
          


        </div>
        
      </div>
    <!----- 
    
    LOCATION  BULLET POINT 
    
    ---->
    <!----- 
    
    LOCATION  BULLET POINT 
    
    ---->
      <div class=""row no-gutters px-3 py-1"" style=""color:#82745c"">
        <div class=""col text-center pr-2""><i class=""fat fa-solid fa-map-pin"" style=""transform:rotate(-90deg);color:#8490b4""></i></div>
        <div class=""col-11"">
          


        Urbis Lumen, Ironbrook  
          


        </div>
        
      </div>
    <!----- 
    
    LOCATION  BULLET POINT 
    
    ---->
    </div>
     
    <!----- LOCATIONS LEFT END--->
      <div class=""col-sm-12 col-md-6"">
    <!----- 
    
    LOCATION  BULLET POINT 
    
    ---->
      <div class=""row no-gutters px-3 py-1"" style=""color:#82745c"">
        <div class=""col text-center pr-2""><i class=""fat fa-solid fa-map-pin"" style=""transform:rotate(-90deg);color:#8490b4""></i></div>
        <div class=""col-11"">
          


        Urbis Lumen, Ironbrook  
         
        

        </div>
        
      </div>
    <!----- 
    
    LOCATION  BULLET POINT 
    
    ---->
    <!----- 
    
    LOCATION  BULLET POINT 
    
    ---->
      <div class=""row no-gutters px-3 py-1"" style=""color:#82745c"">
        <div class=""col text-center pr-2""><i class=""fat fa-solid fa-map-pin"" style=""transform:rotate(-90deg);color:#8490b4""></i></div>
        <div class=""col-11"">
          


        Urbis Lumen, Ironbrook  
          


        </div>
        
      </div>
    <!----- 
    
    LOCATION  BULLET POINT 
    
    ---->
    </div><!----- LOCATIONS RIGHT END---></div><!---- LOCATIONS ROW END---></div></div>
    
<!------
    
     LOOKING FOR
     In this section, each icon has a ""fal"" or ""fas"" preceding it. 
     Use ""fal"" for icons that are NEGATIVE (Not looking)
     Use ""fas"" for icons that are POSITIVE (Looking)
     The icon is always ordered after the description.

------>
    <div class=""row no-gutters justify-content-between""> 
    
    <div class=""col-1 ml-1 text-center py-2"" style=""background:#5D609C;border-radius:0 0 0.15em 0.15em"">
      
      <a href=""https://toyhou.se/Lairai"" class=""text-secondary"" title=""Code by Lairai"" style=""text-shadow:0px 0px 5px;""><i class=""fal fa-code tooltipster mr-1""></i></a>
      <a href=""https://toyhou.se/J-Haskell"" class=""text-secondary"" title=""Visual style by J-Haskell"" style=""text-shadow:0px 0px 5px;""><i class=""fal fa-books tooltipster mr-1""></i></a>
      
    </div>
    
    
    <div class=""col-sm-12 col-md-4 py-2 mx-2"" style="" background: rgb(190,179,160);background: linear-gradient(180deg, rgba(190,179,160,1) 0%, rgba(220,213,199,1) 100%); ;border-radius: 0 0 0.15em 0.15em;border-bottom:2px solid #8490b4;position:relative"">
    <div class=""px-3"" style=""position:absolute;font-variant:small-caps;font-weight:bold;background:#8490b4;border-radius:0.15em;color:#E3DCCF;right:3%;bottom:-20px;"">Looking For</div>
    
    <div class=""row no-gutters px-3 py-1 justify-content-center fa-lg"" style=""border-width:1px 0px;border-style:dashed;border-color:#82745c;color:#5D609C;text-shadow:1px 2px 1px #8490b4;"">
      
    
      
    <div class=""col-1 tooltipster mr-3"" title=""
    
    
    Not Looking for romantic relationships
    
    
    "">
    <i class=""
    
    fal
    
    fa-heart""></i></div>  
    <div class=""col-1 tooltipster mr-3"" title=""
    
    
    Looking for friendships
    
    
    "">
    <i class=""
    
    fas
    
    fa-people-simple""></i></div>   
    <div class=""col-1 tooltipster mr-3"" title=""
    
    
    Looking for familial connections
    
    
    "">
    <i class=""
    
    fas
    
    fa-people-roof""></i></div> 
    <div class=""col-1 tooltipster mr-3"" title=""
    
    
    Looking for rivals
    
    
    "">
    <i class=""
    
    fas
    
    fa-swords""></i></div> 
      
    </div> </div> </div>   </div>"
KXJCmKDW,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Friday 5th of April 2024 06:37:00 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_555430.pdf

Working as of:
05 April 2024"
4evw3Zt8,fancy ciscolab entry,AlphaPenguino,PHP,Friday 5th of April 2024 06:32:16 AM CDT,"<?php
//GLOBAL
$RUNNING = true;
global $USER_IN_SESSION, $username, $password;

$USER_IN_SESSION = false;
$username = null;
$password = null;

function art(){
    echo ""

      :::::::: ::::::::::: ::::::::   ::::::::   ::::::::          :::            :::     ::::::::: 
    :+:    :+:    :+:    :+:    :+: :+:    :+: :+:    :+:         :+:          :+: :+:   :+:    :+: 
   +:+           +:+    +:+        +:+        +:+    +:+         +:+         +:+   +:+  +:+    +:+  
  +#+           +#+    +#++:++#++ +#+        +#+    +:+         +#+        +#++:++#++: +#++:++#+    
 +#+           +#+           +#+ +#+        +#+    +#+         +#+        +#+     +#+ +#+    +#+    
#+#    #+#    #+#    #+#    #+# #+#    #+# #+#    #+#         #+#        #+#     #+# #+#    #+#     
######## ########### ########   ########   ########          ########## ###     ### #########       

Commands:

/login      /logout     /checkloginstatus       /exit\n\n
"";
}
function splash() {
    echo ""
                                .:xxxxxxxx:.
                             .xxxxxxxxxxxxxxxx.
                            :xxxxxxxxxxxxxxxxxxx:.
                           .xxxxxxxxxxxxxxxxxxxxxxx:
                          :xxxxxxxxxxxxxxxxxxxxxxxxx:
                          xxxxxxxxxxxxxxxxxxxxxxxxxxX:
                          xxx:::xxxxxxxx::::xxxxxxxxx:
                         .xx:   ::xxxxx:     :xxxxxxxx
                         :xx  x.  xxxx:  xx.  xxxxxxxx
                         :xx xxx  xxxx: xxxx  :xxxxxxx
                         'xx 'xx  xxxx:. xx'  xxxxxxxx
                          xx ::::::xx:::::.   xxxxxxxx
                          xx:::::.::::.:::::::xxxxxxxx
                          :x'::::'::::':::::':xxxxxxxxx.
                          :xx.::::::::::::'   xxxxxxxxxx
                          :xx: '::::::::'     :xxxxxxxxxx.
                         .xx     '::::'        'xxxxxxxxxx.
                       .xxxx                     'xxxxxxxxx.
                     .xxxx                         'xxxxxxxxx.
                   .xxxxx:                          xxxxxxxxxx.
                  .xxxxx:'                          xxxxxxxxxxx.
                 .xxxxxx:::.           .       ..:::_xxxxxxxxxxx:.
                .xxxxxxx''      ':::''            ''::xxxxxxxxxxxx.
                xxxxxx            :                  '::xxxxxxxxxxxx
               :xxxx:'            :                    'xxxxxxxxxxxx:
              .xxxxx              :                     ::xxxxxxxxxxxx
              xxxx:'                                    ::xxxxxxxxxxxx
              xxxx               .                      ::xxxxxxxxxxxx.
          .:xxxxxx               :                      ::xxxxxxxxxxxx::
          xxxxxxxx               :                      ::xxxxxxxxxxxxx:
          xxxxxxxx               :                      ::xxxxxxxxxxxxx:
          ':xxxxxx               '                      ::xxxxxxxxxxxx:'
            .:. xx:.                                   .:xxxxxxxxxxxxx'
          ::::::.'xx:.            :                  .:: xxxxxxxxxxx':
  .:::::::::::::::.'xxxx.                            ::::'xxxxxxxx':::.
  ::::::::::::::::::.'xxxxx                          :::::.'.xx.'::::::.
  ::::::::::::::::::::.'xxxx:.                       :::::::.'':::::::::
  ':::::::::::::::::::::.'xx:'                     .'::::::::::::::::::::..
    :::::::::::::::::::::.'xx                    .:: :::::::::::::::::::::::
  .:::::::::::::::::::::::. xx               .::xxxx :::::::::::::::::::::::
  :::::::::::::::::::::::::.'xxx..        .::xxxxxxx ::::::::::::::::::::'
  '::::::::::::::::::::::::: xxxxxxxxxxxxxxxxxxxxxxx :::::::::::::::::'
    '::::::::::::::::::::::: xxxxxxxxxxxxxxxxxxxxxxx :::::::::::::::'
        ':::::::::::::::::::_xxxxxx::'''::xxxxxxxxxx '::::::::::::'
             '':.::::::::::'                        `._'::::::''


    \n"";
}
art();
$users = array(""user1"" => ""1234"", ""user2"" => ""5678"", ""user3"" => ""abcd"", ""user4"" => ""efgh"",
                ""user5"" => ""ijkl"", ""user6"" => ""mnop"", ""ZunderPacis"" => ""broCode"", ""JoeBiden"" => ""freePalestine"");
function login($username, $password, $users){
    global $USER_IN_SESSION;
    if (array_key_exists($username, $users)) {
        if ($password == $users[$username]) {
            echo ""Login successful.\n"";
            $USER_IN_SESSION = true; 
        } 
        else {
            echo ""Incorrect password.\n"";
        }
        //echo ""Username exists in \$users.\n"";
    } else {
        echo ""Username does not exist in \$users.\n"";
    }
}
function logout() {
    global $USER_IN_SESSION, $username, $password;
        if ($USER_IN_SESSION == true) {
            $username = NULL;
            $password = NULL;
            $USER_IN_SESSION = false;
        }
        else {
            echo ""Already logged out!\n"";
        }
}
function isLoggedIn($username){
    global $USER_IN_SESSION;
    if ($USER_IN_SESSION == true) {
        echo ""{$username} is currently logged in.\n"";
    }
    else {
        echo ""No one is currently logged in.\n"";
    }
}
while($RUNNING == true) {
  global $USER_IN_SESSION;
  if ($USER_IN_SESSION != true) {
     fwrite(STDOUT, ""[~cisco-lab]$ "");
        $user_input = readline();
  }
  else {
      fwrite(STDOUT, ""{$username}@cisco-lab:~$ "");
        $user_input = readline();
  }
  
  //user actions
  switch ($user_input) {
    case ""/exit"":
        $RUNNING = false;
        break;
    case ""/login"":
        global $USER_IN_SESSION;
        if ($USER_IN_SESSION == false) {
            echo ""Enter Username: "";
            $username = readline();
            echo ""Enter Password: "";
            $password = readline();
            
            login($username, $password, $users); 
        }
        elseif ($USER_IN_SESSION == true) {
            echo ""Already logged in as '{$username}'.\n"";
        }
        break;
    case ""/logout"":
        global $USER_IN_SESSION;
        if ($USER_IN_SESSION == true) {
            echo ""{$username} logged out.\n"";
        }
        logout();
        break;
    case ""/checkloginstatus"":
        global $USER_IN_SESSION;
        if ($USER_IN_SESSION == true) {
            isLoggedIn($username); 
        }
        else {
            echo ""No user is currently logged in.\n"";   
        }
        break;
    case ""/help"":
        echo ""___________________________________________________\n\n/login\t\t\tLogin\n/logout\t\t\tTo logout\n/checkloginstatus\tTo check login status\n/exit\t\t\tTo exit\n___________________________________________________\n\n"";
        break;
    //debug
    case ""/info"":
        global $username, $password;
        echo ""\ncurrent user: {$username}\n"";
        echo ""user password: {$password}\n"";
        echo $USER_IN_SESSION ? '$USER_IN_SESSION: true' : '$USER_IN_SESSION: false';
        echo ""\n"";
        break;
    case ""/splash"":
        splash();
    default:
        //echo ""'{$user_input}' is not recognized as an internal or external command, For more information on a specific command, type /help.\n"";
  }
}
?>"
xQwxyr0s,matrix rotation,Divyansh_Chourey,C,Friday 5th of April 2024 06:29:53 AM CDT,"#include<stdio.h>
int main(){

    int mat1[3][3] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    int mat2[3][2];

    printf(""Original matrix:\n"");

    for(int i = 0; i<3; i++){
        for(int j=0; j<3; j++){
            printf(""%d "", mat1[i][j]);
        }
        printf(""\n"");
    }

    printf(""Rotated matrix:\n"");

    mat2[0][0] = mat1[2][0];
    mat2[0][1] = mat1[1][0];
    mat2[0][2] = mat1[0][0];

    mat2[1][0] = mat1[2][1];
    mat2[1][1] = mat1[1][1];
    mat2[1][2] = mat1[0][1];

    mat2[2][0] = mat1[2][2];
    mat2[2][1] = mat1[1][2];
    mat2[2][2] = mat1[0][2];

    for(int a = 0; a<3; a++){
        for(int b=0; b<3; b++){
            printf(""%d "", mat2[a][b]);
        }
        printf(""\n"");
    }
    
    return 0;
}"
yeFsv1PM,Pair & ColoredPair,NeverRIEght,Java,Friday 5th of April 2024 06:28:08 AM CDT,"class Pair {
    private int a;
    private int b;

    public Pair(int a, int b) {
        this.a = a;
        this.b = b;
    }

    @Override
    public boolean equals(Object obj) {
        boolean result = false;

        if(obj.getClass().equals(Pair.class) || obj.getClass().equals(ColoredPair.class)) {
            Pair objPair = (Pair) obj;
            if (this.a == objPair.a && this.b == objPair.b) {
                result = true;
            } else if (this.a == objPair.b) {
                result = true;
            } else if (this.b == objPair.a) {
                result = true;
            }
        }

        return result;
    }
}

class ColoredPair extends Pair {
    final private String color;

    public ColoredPair(int a, int b, String color) {
        super(a, b);
        this.color = color;
    }
}"
hiAFmk1w,Pet Sim 99 Customizable Fake Script Hub,quikzyYTbtw,Lua,Friday 5th of April 2024 06:18:25 AM CDT,"local function Config() 
    getgenv().userName = ""Custom | Hub""            -- Change to your Custom Hub Name!
    getgenv().userIntroText = ""Custom Hub Loading"" -- Change to your Custom Hub Loading Text
    getgenv().userVersion = ""[v1.0]""               -- Change to your Custom Version!
end
Config()

loadstring(game:HttpGet((""https://raw.githubusercontent.com/venoxw/venox-hub/main/custom-hub"")))()"
6nUbz27C,Untitled,den4ik2003,Python,Friday 5th of April 2024 06:09:00 AM CDT,"# for i in range(len(df)):
#     if df.iloc[i]['asset'] == df.iloc[i + 1]['asset']:
#         print(i)

# df = df.drop([1290]).reset_index()
# df.iloc[1288:1300]

bal = []

for i in range(len(df) - 1):
    d = {
          'balance': df.iloc[i]['total_usdt'] + df.iloc[i + 1]['total_usdt'],
          'upd': max(df.iloc[i]['update_time'], df.iloc[i+1]['update_time'])
        }
    bal.append(d)
    
frame = pd.DataFrame(bal)

fig = px.line(frame, x='upd', y='balance', title='total balance')
fig.update_layout(
    xaxis_title=""time"",
    yaxis_title=""total balance"",
)
fig.show()"
b8pPBiiY,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Friday 5th of April 2024 06:06:27 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
 
Working as of:
05 April 2024"
3yB0LytH,Parse VMware Horizon Client log,guyrleech,PowerShell,Friday 5th of April 2024 06:01:59 AM CDT,"## Parse the log lines from today's VMware Horizon client side or Connection Server log file using regex groups so can be filtered, sorted, etc

## 2024-04-05T09:59:01.920+01:00 INFO  (66E8-4C8C) <vmware-usbd> [vmware-view-usbdloader] mmfw_PipeRead: called (client @ 15C471019A0)

Get-Content -Path ""$env:programdata\VMware\VDM\logs\log-$([datetime]::Now.ToString('yyyy-MM-dd')).txt"" |select @{n='Date';e={ if( $_ -match '^(?<date>[\S+]+)\s+(?<level>\w+)\s+\((?<hex>[0-9a-f]+-[0-9a-f]+)\)\s+<(?<Subcomponent>\S+)>\s+\[(?<Component>\S+)\]\s+(?<message>.*)$' ) { $matches[ 'date' ] -as [datetimeoffset] | Select -expand LocalDateTime ; $script:tokens = $matches.Clone() } else { Write-Warning -Message ""Cannot parse $_"" ;  $script:tokens = @{} } }},@{n='Level';e={$script:tokens['level']}},@{n='Component';e={$script:tokens[ 'component' ]}},@{n='SubComponent';e={$script:tokens[ 'subcomponent' ]}},@{n='Message';e={$script:tokens['message']}}
"
MdD6M824,data887,TestGuy1,JSON,Friday 5th of April 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c9e80ef54c9858c0c1ad9a7130b833191b7b442cd32ce7e1b19ad4c457d242db6e27da7ad1ffb0fef4da02e742030ee06d87b7e55ca82087488772366b2eea80247e5f9c86d4c6e97e1f2058c123c5403fc6878a2089420f36f6a9e328b7ed60b82c87208fe83ae2db674a25bc3b6ebaa027fb801046c5e32c02111d6d5cd0c6',
  otherdata: [
    'c17425947b33240756769109f5047f3e',
    '5f990e32a0c1f91f3f87f3c2237ef343',
    '8eb797464809e45909fc4f33d1a84601',
    'fcce5ddd81e170dca3d8fbee8e8a94c1',
    'cb71430bc2782161fa32ab6f1b6b4c23',
    '1d658f948fc641c53c02d94f09a48ef8',
    '241e85d7505476e6bbf528785710cb54',
    '7bf0aa0fd4080e2363e3c4729bae07c8'
  ]
}"
VKdgxXeg,facebool.com 2.0,AlphaPenguino,PHP,Friday 5th of April 2024 05:49:21 AM CDT,"<?php
//GLOBAL
$RUNNING = true;
global $USER_IN_SESSION, $username, $password;

$USER_IN_SESSION = false;
$username = null;
$password = null;

function art(){
    echo ""
 _____   ____    __    ___  ____    ___    ___   _     
|     | /    |  /  ]  /  _]|    \  /   \  /   \ | |    
|   __||  o  | /  /  /  [_ |  o  )|     ||     || |    
|  |_  |     |/  /  |    _]|     ||  O  ||  O  || |___ 
|   _] |  _  /   \_ |   [_ |  O  ||     ||     ||     |
|  |   |  |  \     ||     ||     ||     ||     ||     |
|__|   |__|__|\____||_____||_____| \___/  \___/ |_____| stable 1.1
Commands:

/login      /logout     /checkloginstatus       /exit\n\n
"";
}
art();
$users = array(""user1"" => ""1234"", ""user2"" => ""5678"", ""user3"" => ""abcd"", ""user4"" => ""efgh"",
                ""user5"" => ""ijkl"", ""user6"" => ""mnop"", ""ZunderPacis"" => ""broCode"", ""JoeBiden"" => ""freePalestine"");
function login($username, $password, $users){
    global $USER_IN_SESSION;
    if (array_key_exists($username, $users)) {
        if ($password == $users[$username]) {
            echo ""Login successful.\n"";
            $USER_IN_SESSION = true; 
        } 
        else {
            echo ""Incorrect password.\n"";
        }
        //echo ""Username exists in \$users.\n"";
    } else {
        echo ""Username does not exist in \$users.\n"";
    }
}
function logout() {
    global $USER_IN_SESSION, $username, $password;
        if ($USER_IN_SESSION == true) {
            $username = NULL;
            $password = NULL;
            $USER_IN_SESSION = false;
        }
        else {
            echo ""Already logged out!\n"";
        }
}
function isLoggedIn($username){
    global $USER_IN_SESSION;
    if ($USER_IN_SESSION == true) {
        echo ""{$username} is currently logged in.\n"";
    }
    else {
        echo ""No one is currently logged in.\n"";
    }
}
while($RUNNING == true) {
  global $USER_IN_SESSION;
  if ($USER_IN_SESSION != true) {
     fwrite(STDOUT, ""console> "");
        $user_input = readline();
  }
  else {
      fwrite(STDOUT, ""#{$username} > "");
        $user_input = readline();
  }
  
  //user actions
  switch ($user_input) {
    case ""/exit"":
        $RUNNING = false;
        break;
    case ""/login"":
        global $USER_IN_SESSION;
        if ($USER_IN_SESSION == false) {
            echo ""Enter Username: "";
            $username = readline();
            echo ""Enter Password: "";
            $password = readline();
            
            login($username, $password, $users); 
        }
        elseif ($USER_IN_SESSION == true) {
            echo ""Already logged in as '{$username}'.\n"";
        }
        break;
    case ""/logout"":
        global $USER_IN_SESSION;
        if ($USER_IN_SESSION == true) {
            echo ""{$username} logged out.\n"";
        }
        logout();
        break;
    case ""/checkloginstatus"":
        global $USER_IN_SESSION;
        if ($USER_IN_SESSION == true) {
            isLoggedIn($username); 
        }
        else {
            echo ""No user is currently logged in.\n"";   
        }
        break;
    case ""/help"":
        echo ""___________________________________________________\n\n/login\t\t\tLogin\n/logout\t\t\tTo logout\n/checkloginstatus\tTo check login status\n/exit\t\t\tTo exit\n___________________________________________________\n\n"";
        break;
    //debug
    case ""/info"":
        global $username, $password;
        echo ""\ncurrent user: {$username}\n"";
        echo ""user password: {$password}\n"";
        echo $USER_IN_SESSION ? '$USER_IN_SESSION: true' : '$USER_IN_SESSION: false';
        echo ""\n"";
        break;
    default:
        //echo ""'{$user_input}' is not recognized as an internal or external command, For more information on a specific command, type /help.\n"";
  }
}
?>"
eMuAxwuF,Skill Checks & Progression,badunius,JavaScript,Friday 5th of April 2024 05:49:00 AM CDT,"{
  const arrRandom = (arr = []) => Math.floor(Math.random() * arr.length)
  
  /**
  	Returns an array of randomly picked source array indices
    (no repeats)
  */
  const pickIndex = (arr = [], n = 1) => {
    const { length } = arr
    if (n === 1) {
      return [arrRandom(arr)]
    }
    
    // shuffle
    const idx = Array.from({length}).map((_, i) => i)
    const res = Array.from({length}).map(() => {
      const n = arrRandom(idx)
      const v = idx[n]
      idx.splice(n, 1)
      
      return v
    })
    
    return res.slice(0, n)
  }
  
  const CAPACITY = 60 // pool capacity
  const SKILL = {
    Fishing: 'Fishing',
    Climbing: 'Climbing',
    Hunting: 'Hunting'
  }
  const SKILL_ID = Object.keys(SKILL)
  
  /**
  	Array of skill tags
		number of tags you have is your skill level 
  */
  const pool = Array.from({length: CAPACITY}).map(() => {
    const id = SKILL_ID[arrRandom(SKILL_ID)]
    return SKILL[id]
  })
  
  /** Describe skill set */
  const describe = () => {
    const map = {}
    for (const id of SKILL_ID) {
      const n = pool.filter(skill => skill === SKILL[id]).length
      map[id] = n
    }
    const mastery = Object
    	.entries(map)
    	.filter(([key, value]) => value >= CAPACITY * 0.5)
    	?.[0]?.[0] ?? 'none'
   	const list = Object
    	.entries(map)
    	.map(([key, value]) => `${key} : ${value}\n`)
    	.join('')
    
    console.log(`${list}master of ${mastery}`)
  }
  
  /** make a skill check against challenge rating */
  const roll = (skillId, challenge = 1) => {
    const res = pickIndex(pool, challenge)
      .filter(i => {
        const id = pool[i]
				pool[i] = skillId
        return id === skillId
      })
    	.length
    
    console.log(`Rolled ${SKILL[skillId]} ${res} / ${challenge}`)
    return res
  }
  
  // Testing
  describe()
  
  roll(SKILL.Hunting, 12)
  
  describe()
  
  roll(SKILL.Hunting, 12)
  
  describe()
  
  roll(SKILL.Hunting, 12)
  
  describe()

}"
tfT55wVL,Dodawanie pola źródła z zip dla danych leśnych,TomaszNycz,Bash,Friday 5th of April 2024 05:34:21 AM CDT,"#!/bin/bash
# Rozkład pociągu zdawczego do składnicy drewna

# Gdzie jest książka pokładowa
for f in *.zip; do unzip ""$f"" -d ""${f%.zip}""; done
#Karta próby
export PGHOST=""127.0.0.1"" 
export PGPORT=""5432""
export PGDATABASE=""osm""
export PGUSER=""baza""
export PGCLIENTENCODING=WIN1250

#Wykaz pojazdów kolejowych w składzie pociągu
for i in */
do
    echo $i
    echo ""Grupujemy wagony""
    ogr2ogr -update -append -f PostgreSQL PG:""password=baza active_schema=slmn"" --config PG_USE_COPY YES -nln ""a_dzew_pol"" -nlt PROMOTE_TO_MULTI -a_srs ""EPSG:2180"" $i/a_dzew_pol.shp -sql ""SELECT *, '${f%.zip}' AS nadl FROM a_dzew_pol ""
#Zwróć uwagę że na końcu linii jest select i nazwa tabeli musi być zgodna z tą z nln
    ogr2ogr -update -append -f PostgreSQL PG:""password=baza active_schema=slmn"" --config PG_USE_COPY YES -nln ""a_uzyt_pol"" -nlt PROMOTE_TO_MULTI -a_srs ""EPSG:2180"" $i/a_uzyt_pol.shp -sql ""SELECT *, '${f%.zip}' AS nadl FROM a_uzyt_pol ""
    ogr2ogr -update -append -f PostgreSQL PG:""password=baza active_schema=slmn"" --config PG_USE_COPY YES -nln ""a_oddz_pol"" -nlt PROMOTE_TO_MULTI -a_srs ""EPSG:2180"" $i/a_oddz_pol.shp -sql ""SELECT *, '${f%.zip}' AS nadl FROM a_oddz_pol ""

done;"
xFNK6kXR,Untitled,zarkoto223,JavaScript,Friday 5th of April 2024 05:25:08 AM CDT,"function spice(yield) {
  let firstDatyield = yield;
  let expectNextDay = yield;
  let total = 0;
  let days = 0;
  let result = 0;

  while (expectNextDay >= 100) {
    days += 1;
    total += expectNextDay;
    result += expectNextDay - 26;
    expectNextDay -= 10;
  }
  let logg = result - 26;

  console.log(days);
  console.log(logg.toFixed());
}"
10ftebNb,ServiceConfig.xml example with BrowserBasedAuthentication enabled,glymph,XML,Friday 5th of April 2024 05:09:54 AM CDT,"<config>
	<panel>
		<name>AppsPanel</name>
		<visible>true</visible>
	</panel>
	<panel>
		<name>FilesPanel</name>
		<masked>false</masked>
	</panel>
	<panel>
		<name>MarketPanel</name>
		<masked>false</masked>
	</panel>
	<feature>
		<name>SelfServeInstalls</name>
		<enabled>true</enabled>
	</feature>
	<feature>
		<name>BrowserBasedAuthentication</name>
		<enabled>true</enabled>
	</feature>
	<feature>
		<name>SelfServePluginsInstall</name>
		<enabled>true</enabled>
	</feature>
	<feature>
		<name>AppsAutoUpdate</name>
		<enabled>true</enabled>
	</feature>
	<feature>
		<name>AdobeFallbackForAUSST</name>
		<enabled>false</enabled>
	</feature>
	<feature>
		<name>AppsCategories</name>
		<enabled>true</enabled>
		<data>
			<categories>
				<category>beta-apps</category>
			</categories>
		</data>
	</feature>
</config>"
N7pnJNSX,Untitled,ruchej,Python,Friday 5th of April 2024 05:03:40 AM CDT,"def timed(func: Callable[..., Awaitable[Any]]) -> Callable[..., Awaitable[Any]]:
    """"""Декоратор замера времени.""""""

    async def process(func: Callable[..., Awaitable[Any]], *args: Any, **params: Any) -> Any:
        if asyncio.iscoroutinefunction(func):
            return await func(*args, **params)
        else:
            return func(*args, **params)

    async def helper(*args: Any, **params: Any) -> Any:
        if DEBUG == ""False"":
            return await process(func, *args, **params)

        start = time.time()
        result = await process(func, *args, **params)
        logger.debug(f""{func.__name__} finished by {time.time() - start} sec"")
        return result

    return helper


class IndicatorStepSettingsDAOInterface(ABC):
    @abstractmethod
    async def __aenter__(self): ...

    @abstractmethod
    async def __aexit__(self, *args): ...

    @abstractmethod
    async def get_indicator_step_settings(
        self, section_id: int, dt: datetime | None, mode: int | None
    ) -> list[IndicatorStepSettingsEntity]: ...

@dataclass
class IndicatorStepSettingsDAO(BaseDAO, IndicatorStepSettingsDAOInterface):
    @timed
    async def get_indicator_step_settings(
        self, section_id: int, dt: datetime | None, mode: int | None
    ) -> list[IndicatorStepSettingsEntity]:
        stmt = (
            (
                select(
                    ...
                )
                .join(...)
            )
            .where(...)
        )
        if mode is not None:
            stmt = stmt.filter(sc_d.c.mode_id == mode)
        rows = await self.session.execute(stmt)
        data = rows.mappings().fetchall()
        grouped_data = {}
        for item in data:
            key = (item.insert_dt, item.title)
            if key not in grouped_data:
                grouped_data[key] = IndicatorStepSettingsEntity(
                    indicator_id=item.indicator_id,
                    section_id=item.section_id,
                    dt=item.insert_dt,
                    title=item.title,
                    unit=item.unit,
                    operation=OperationEntity(
                        id=item.operation_id, title=item.operation_title, desc=item.operation_desc
                    ),
                    type=IndicatorNameGroupsEntity(id=item.type_id, title=item.type_title, desc=item.type_desc),
                    modes=[],
                )
            mode_entity = ModeEntity(
                id=item.mode_id,
                title=item.mode_title,
                step_value=item.step_value,
                max_number_steps=item.max_number_steps,
                freeze=item.freeze,
            )
            grouped_data[key].modes.append(mode_entity)

        result = list(grouped_data.values())
        return result





""get_indicator_step_settings"" incompatible with supertype
""IndicatorStepSettingsDAOInterface""  [override]
        async def get_indicator_step_settings(
        ^
adapters/db/dao/config/indicator_step_settings.py:31: note:      Superclass:
adapters/db/dao/config/indicator_step_settings.py:31: note:          def get_indicator_step_settings(self, section_id: int, dt: datetime | None, mode: int | None) -> Coroutine[Any, Any, list[IndicatorStepSettingsEntity]]
adapters/db/dao/config/indicator_step_settings.py:31: note:      Subclass:
adapters/db/dao/config/indicator_step_settings.py:31: note:          def get_indicator_step_settings(*Any, **Any) -> Awaitable[Any]"
dBMgkb4a,140.213.42.205-/sdcard/Premium/useragent_ig.py.py,OBF-XIn,Python,Friday 5th of April 2024 04:58:27 AM CDT,"# useragent
import random

class Useragent:
    def __init__(self) -> None:
        pass
        
    def useragent_api(self):
        self.nexus = ['Galaxy Nexus', 'Nexus 10', 'Nexus 2', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 5', 'phone/Nexus 5', 'Nexus 5X', 'Nexus 6', 'Nexus 7', 'Nexus 9', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus Player', 'Nexus Player', 'Nexus S', 'Nexus S', 'Nexus S 4G', 'nexus S', 'Nexus S', 'Nexus s', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S']
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        self.onpls = ['NE2213', 'NE2217', 'NE2215', 'NE2210', 'NE2210', 'CPH2423', 'CPH2411', 'CPH2417', 'CPH2413', 'CPH2415', 'CPH2449', 'CPH2487', 'ONE A2003', 'ONE A2003', 'ONE A2001', 'ONE A2005', 'ONEPLUS A3003', 'ONEPLUS A3000', 'ONEPLUS A3010', 'ONEPLUS A5000', 'ONEPLUS A5000', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A6003', 'ONEPLUS A6000', 'ONEPLUS A6010', 'ONEPLUS A6013', 'ONEPLUS A6010', 'GM1900', 'GM1901', 'GM1903', 'GM1917', 'GM1913', 'GM1911', 'GM1910', 'GM1915', 'GM1910', 'HD1901', 'HD1903', 'HD1900 Flow', 'HD1905', 'HD1900', 'HD1907', 'HD1911', 'HD1913', 'HD1910', 'GM1925', 'HD1925', 'GM1920', 'IN2013', 'IN2015', 'IN2010', 'IN2010', 'IN2017', 'IN2019', 'IN2023', 'IN2025', 'IN2020', 'OnePlus8Pro', 'KB2005', 'KB2001', 'KB2007', 'KB2003', 'KB2000', 'OnePlus 8T 5G', 'LE2115', 'LE2113', 'LE2111', 'LE2110', 'LE2120', 'LE2125', 'LE2123', 'LE2121', 'LE2127', 'OnePlus9Pro', 'LE2101', 'LE2100', 'MT2111', 'MT2110', 'ONEPLUS A19677', 'ONEPLUS A2345', 'Oneplus A31', 'Oneplus A3331', 'ONEPLUS A35904', 'ONEPLUS A37000', 'ONEPLUS A3EVB', 'ONEPLUS A62322', 'ONEPLUS A64794', 'ONEPLUS A65369', 'ONEPLUS A68333', 'ONEPLUS A70458', 'ONEPLUS A70791', 'ONEPLUS A78637', 'ONEPLUS A80828', 'ONEPLUS A83306', 'ONEPLUS A87046', 'ONEPLUS A90641', 'Oneplus A99831', 'PGKM10', 'PGKM10', 'PHK110', 'PHK110', 'PGP110', 'PGP110', 'PGZ110', 'ONEPLUS KB2023', 'OnePlus Nord', 'Oneplus Nord 2', 'DN2103', 'DN2101', 'CPH2399', 'CPH2401', 'AC2001', 'AC2003', 'IV2201', 'CPH2409', 'CPH2381', 'CPH2465', 'EB2103', 'EB2101', 'EB2101', 'BE2025', 'BE2026', 'BE2029', 'Nord N10 5G', 'BE2028', 'BE2013', 'BE2011', 'BE2012', 'CPH2459', 'GN2200', 'CPH2469', 'DE2118', 'DE2117', 'A0001', 'ONE E1001', 'ONE E1003', 'ONE E1001', 'ONE E1005']
        self.oppo = [""CPH1869"", ""CPH1929"",""CPH2107"", ""CPH2238"", ""CPH2389"",""CPH2401"", ""CPH2407"", ""CPH2413"", ""CPH2415"", ""CPH2417"", ""CPH2419"", ""CPH2455"", ""CPH2459"", ""CPH2461"", ""CPH2471"", ""CPH2473"", ""CPH2477"", ""CPH8893"", ""CPH2321"", ""CPH2341"", ""CPH2373"", ""CPH2083"", ""CPH2071"", ""CPH2077"", ""CPH2185"", ""CPH2179"", ""CPH2269"", ""CPH2421"", ""CPH2349"", ""CPH2271"", ""CPH1923"", ""CPH1925"", ""CPH1837"", ""CPH2015"", ""CPH2073"", ""CPH2081"", ""CPH2029"", ""CPH2031"", ""CPH2137"", ""CPH1605"", ""CPH1803"", ""CPH1853"", ""CPH1805"", ""CPH1809"", ""CPH1851"", ""CPH1931"", ""CPH1959"", ""CPH1933"", ""CPH1935"", ""CPH1943"", ""CPH2061"", ""CPH2069"", ""CPH2127"", ""CPH2131"", ""CPH2139"", ""CPH2135"", ""CPH2239"", ""CPH2195"", ""CPH2273"", ""CPH2325"", ""CPH2309"", ""CPH1701"", ""CPH2387"", ""CPH1909"", ""CPH1920"", ""CPH1912"", ""CPH1901"", ""CPH1903"", ""CPH1905"", ""CPH1717"", ""CPH1801"", ""CPH2067"", ""CPH2099"", ""CPH2161"", ""CPH2219"", ""CPH2197"", ""CPH2263"", ""CPH2375"", ""CPH2339"", ""CPH1715"", ""CPH2385"", ""CPH1729"", ""CPH1827"", ""CPH1938"", ""CPH1937"", ""CPH1939"", ""CPH1941"", ""CPH2001"", ""CPH2021"", ""CPH2059"", ""CPH2121"", ""CPH2123"", ""CPH2203"", ""CPH2333"", ""CPH2365"", ""CPH1913"", ""CPH1911"", ""CPH1915"", ""CPH1969"", ""CPH2209"", ""CPH1987"", ""CPH2095"", ""CPH2119"", ""CPH2285"", ""CPH2213"", ""CPH2223"", ""CPH2363"", ""CPH1609"", ""CPH1613"", ""CPH1723"", ""CPH1727"", ""CPH1725"", ""CPH1819"", ""CPH1821"", ""CPH1825"", ""CPH1881"", ""CPH1823"", ""CPH1871"", ""CPH1875"", ""CPH2023"", ""CPH2005"", ""CPH2025"", ""CPH2207"", ""CPH2173"", ""CPH2307"", ""CPH2305"", ""CPH2337"", ""CPH1955"", ""CPH1707"", ""CPH1719"", ""CPH1721"", ""CPH1835"", ""CPH1831"", ""CPH1833"", ""CPH1879"", ""CPH1893"", ""CPH1877"", ""CPH1607"", ""CPH1611"", ""CPH1917"", ""CPH1919"", ""CPH1907"", ""CPH1989"", ""CPH1945"", ""CPH1951"", ""CPH2043"", ""CPH2035"", ""CPH2037"", ""CPH2036"", ""CPH2009"", ""CPH2013"", ""CPH2113"", ""CPH2091"", ""CPH2125"", ""CPH2109"", ""CPH2089"", ""CPH2065"", ""CPH2159"", ""CPH2145"", ""CPH2205"", ""CPH2201"", ""CPH2199"", ""CPH2217"", ""CPH1921"", ""CPH2211"", ""CPH2235"", ""CPH2251"", ""CPH2249"", ""CPH2247"", ""CPH2237"", ""CPH2371"", ""CPH2293"", ""CPH2353"", ""CPH2343"", ""CPH2359"", ""CPH2357"", ""CPH2457"", ""CPH1983"", ""CPH1979""]
        self.vivo = ['vivo 1002T', 'Vivo 1605', 'vivo 1730', 'vivo 1809', 'vivo_1820', 'vivo 1835', 'vivo 1914', 'vivo 2010', 'vivo 2019', 'vivo 2019', 'vivo 2019', 'vivo 2023', 'vivo 2027', 'vivo 3969', 'VIVO 5', 'Vivo 6', 'Vivo 7 Pro', 'Vivo 8', 'Vivo 93K Prime', 'vivo A5 ', 'vivo a54', 'Vivo A54', 'vivo a57', 'Vivo A87', 'VIVO A94', 'VIVO AIR', 'VIVO C8818', 'vivo E1', 'vivo E3', 'vivo E3', 'vivo E5', 'Vivo EGO', 'V1962BA', 'vivo h5', 'V1824A', 'V1824A', 'V1824BA', 'V2217A', 'V2217A', 'V2218A', 'V2218A', 'V2218A', 'V2243A', 'V1955A', 'I1927', 'I1928', 'V2024A', 'V2025A', 'V2025A', 'V2049A', 'V2049A', 'I2009', 'I2012', 'I2012', 'V2136A', 'V2136A', 'V2141A', 'V2171A', 'I2017', 'V2172A', 'V2172A', 'I2022', 'I2019', 'I2019', 'I2201', 'V1914A', 'V1914A', 'V1981A', 'V2055A', 'V2118A', 'V2157A', 'V2157A', 'V2154A', 'V2196A', 'V2196A', 'V2199A', 'V2231A', 'V2238A', 'V1936AL', 'V1936A', 'V1922A', 'V1922A', 'V1922A ', 'V1916A', 'V2023A', 'V2023A', 'VIVO V2023A', 'V2065A', 'V2061A', 'V2061A', 'V2143A', 'V2106A', 'V2165A', 'V2165A', 'V2180GA', 'V1986A', 'V2012A', 'V2012A', 'V2073A', 'V2073A', 'I2011', 'V2148A', 'I2018', 'V1919A', 'V2131A', 'V2220A', 'I2202', 'I2206', 'I2203', 'I2202', 'I2127', 'I2202', 'I2208', 'I2208', 'I2126', 'I2126', 'I2126', 'V2164KA', 'V2164KA', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'Vivo J5', 'vivo 1805', 'vivo 1805', 'vivo NEX', 'V1923A', 'vivo 1912', 'V1923A', 'vivo 1912', 'vivo 1913', 'V1924A', 'V1924A', 'vivo 1913', 'V1950A', 'V1950A', 'vivo NEX A', 'vivo NEX A', 'vivo 1813', 'V1821A', 'V1821A', 'vivo NEX S', 'vivo NEX S', 'Vivo ONE', 'Vivo ONE', 'PA2170', 'vivo PD1628F_EX', 'vivo PD1709', 'vivo PD1709F_EX', 'vivo PD1709F_EX', 'vivo PD1728', 'vivo PD1728', 'vivo PD1832F_EX', 'vivo PD2046F_EX', 'vivo PD2050F_EX', 'vivo PD2055F_EX', 'vivo PD2059F_EX', 'Vivo S', 'V1831A', 'V1831A', 'VIVO S1', 'Vivo S1 Prime', 'V1832A', 'V1832T', 'V2121A', 'V2121A', 'V2130A', 'V2130A', 'Vivo S11', 'Vivo S11 ', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S12', 'V2162A', 'Vivo S13', 'V2203A', 'V2207A', 'V2190A', 'V2244A', 'vivo S1Pro', 'Vivo S20 ', 'Vivo S21 ', 'Vivo S31', 'Vivo S4', 'Vivo S40', 'Vivo S41 /MMB439M', 'V1932A', 'vivo S6', 'V1962A', 'vivo S6T', 'V2020CA', 'V2020A', 'Vivo S76', 'V2031EA', 'vivo S7i(t)', 'vivo S7i(t)', 'vivo S7i(t)', 'V2080A', 'vivo S7t', 'vivo_S7t', 'vivo S7t', 'S7t 5G', 'vivo S7w', 'vivo S8', 'vivo S9', 'vivo S9', 'vivo S9', 'V2072A', 'V2048A', 'vivo S9t', 'V2168', 'V2168', 'V2153', 'V2153', 'V2150', 'V2151', 'V2151', 'V2151', 'V2143', 'vivo TD1602_EX', 'vivo U1', 'vivo 1916', 'vivo 1916', 'vivo 1921', 'V1941A', 'V1941A', 'V1928A', 'vivo V1', 'vivo V1', 'vivo V10', 'Vivo V10', 'VIVO V11', 'Vivo V11', 'vivo 1804', 'vivo 1804', 'vivo 1806', 'vivo 1806', 'vivo v11pro', 'vivo 1819', 'vivo 1818', 'vivo 1818', 'vivo 1920', 'vivo 1919', 'vivo 1907', 'vivo 1907', 'vivo 1907_19', 'vivo 1910', 'vivo 1909', 'vivo 1910', 'vivo 1933', 'vivo 1933', 'vivo V1907', 'vivo v19neo', 'vivo V1Max', 'vivo V1Max', 'vivo V2', 'V2040', 'vivo 2018', 'vivo 2018', 'V2022', 'Vivo V20A', 'Vivo V20G', 'V2066', 'V2108', 'V2050', 'V2050', 'V2050', 'V2061', 'V2055', 'Vivo V21S', 'V2130', 'V2132A', 'V2116', 'V2115', 'V2116', 'V2116', 'V2126', 'V2126', 'V2228', 'V2228', 'V2158', 'V2158', 'V2202', 'V2202', 'V2201', 'V2246', 'V2230', 'V2230', 'V2237', 'vivo V3', 'vivo V3', 'vivo V3Max A', 'vivo V3Max L', 'vivo v30', 'vivo v31', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3M A', 'vivo V3M A', 'vivo V3MA', 'vivo_V3Max', 'vivo v45', 'vivo 1601', 'vivo V5', 'vivo 1609', 'vivo 1611', 'Vivo V51', 'Vivo V54', 'vivo 1612', 'vivo 1713', 'vivo V5S A', 'vivo 1718', 'vivo 1716', 'vivo Y79A', 'vivo Y79A', 'V2166BA', 'Vivo V8', 'vivo 1723', 'vivo V9 mini', 'vivo 1851', 'VIVO V9Pro', 'vivo 1851', 'vivo 1727', 'Vivo X', 'V2178A', 'V2229A', 'V2170A', 'V2170A', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5S', 'vivo Xplay5S', 'vivo Xplay6', 'vivo Xplay6L', 'vivo Xplay6', 'vivo Xplay6', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X1', 'vivo X1', 'vivo X1', 'vivo X1', 'Vivo X11', 'vivo X1S', 'vivo X1S', 'vivo X1S', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1W', 'vivo X1w', 'VIVO X2', 'VIVO X2', 'VIVO_X2', 'vivo X20', 'vivo X20A', 'vivo X20Plus A', 'vivo 1720', 'vivo X20Plus UD', 'vivo X20Plus UD', 'vivo X21', 'vivo X21A', 'vivo X21UD A', 'vivo X21i', 'vivo X21i A', 'vivo X21i', 'vivo X21i A ', 'V1814A', 'V1814T', 'V1814T', 'V1814A', 'V1809A', 'V1809A', 'V1816A', 'V1809T', 'V1816T', 'V1829A', 'V1838A', 'V1838T', 'V1829T', 'V1836A', 'V1836A', 'V1836T', 'vivo X27Pro', 'V1938CT', 'V1938T', 'V1938T', 'vivo X3F', 'vivo X3F', 'vivo X3F', 'vivo X3L', 'vivo X3L', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'Vivo X40', 'vivo X5L', 'vivo X5', 'vivo X5L', 'vivo X5Pro D', 'vivo X5Pro L', 'vivo X5Pro V', 'vivo X5Pro D', 'vivo X5Pro D', 'V2001A', 'V2001A', 'vivo 2004', 'vivo 2005', 'vivo 2005', 'V1937', 'vivo 1937', 'V1937', 'V1937', 'vivo 2006', 'vivo 2006', 'V2005A', 'V2011A', 'X50 Pro+', 'V1930', 'V1930', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X520L', 'vivo X5F', 'vivo X5M', 'vivo X5M', 'vivo X5M', 'vivo X5Max ', 'vivo X5Max L', 'vivo X5Max L', 'vivo X5Max S', 'vivo X5Max V', 'vivo X5S L', 'vivo X5S L', 'vivo X5V', 'vivo X5V', 'vivo X5V', 'vivo X6D', 'vivo X6A', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus L', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus D', 'vivo X6Plus L', 'V2046A', 'V2059A', 'V2046A', 'V2045', 'V2046', 'V2047A', 'V2056A', 'V2085A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus A', 'vivo X7L', 'vivo X7Plus', 'vivo X7Plus', 'V2133A', 'V2104', 'V2104', 'V2105', 'V2134A', 'V2105', 'V2145A', 'V2114', 'V2145A', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'V2144', 'V2183A', 'V2144', 'V2208', 'V2185A', 'V2145', 'V2185A', 'Vivo X83', 'vivo X9', 'vivo X9L', 'vivo X9', 'vivo X9', 'vivo X9Plus', 'vivo X9Plus L', 'V2241A', 'V2242A', 'V2242A', 'V2227A', 'vivo X9i', 'vivo X9i', 'vivo X9i', 'vivo X9s', 'vivo X9s L', 'vivo X9s Plus', 'vivo X9s Plus', 'vivo X9s Plus L', 'vivo X9s Plus', 'VIVO XL', 'vivo Xplay', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'V2203', 'V2221', 'Vivo y1', 'Vivo Y1', 'V2168A', 'V2168A', 'vivo 1906', 'V2028', 'vivo Y11t', 'vivo Y11t', 'vivo Y11t', 'vivo 1904', 'V2163A', 'V2102', 'V2102', 'vivo 2007', 'vivo 2007', 'Vivo Y12I Pro', 'V2026', 'V2042', 'V2033', 'V2039', 'V2069', 'V2026_21', 'vivo Y13L', 'vivo Y13', 'vivo Y13L', 'vivo Y13L', 'vivo Y13i', 'vivo_Y13i', 'vivo Y13iL', 'vivo Y13iL', 'vivo Y13T', 'vivo Y13T', 'vivo 1901', 'vivo Y15T', 'vivo Y15T', 'V2134', 'V2147', 'V2147', 'V2212', 'V2120', 'V2204', 'V2214', 'V2204', 'vivo 1902', 'vivo 1902_19', 'VIVO 1902', 'vivo Y17T', 'vivo Y17T', 'vivo_Y17T', 'vivo Y17T', 'vivo Y17W', 'vivo Y17W', 'vivo Y17W', 'vivo Y18L', 'vivo Y18L', 'vivo Y18L', 'vivo 1915', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'Vivo Y1i', 'vivo 2015', 'vivo 2015', 'V2029', 'V2027', 'V2043_21', 'V2101', 'V2070', 'V2054', 'V2052', 'V2037', 'V2032', 'V2038', 'V2038', 'V2129', 'V2129', 'V2111', 'V2149', 'V2140', 'V2140', 'V2152', 'V2152', 'V2110', 'V2110', 'V2131', 'V2135', 'V2207', 'vivo Y22iL', 'vivo Y22iL', 'V2206', 'V2206', 'vivo Y23L', 'vivo Y23L', 'vivo y23l', 'vivo Y23L', 'vivo Y23L', 'vivo Y23L', 'vivo 1613', 'vivo Y27', 'vivo Y27L', 'vivo Y27', 'vivo Y28', 'vivo Y28', 'vivo Y28L', 'vivo Y28L', 'vivo Y29L', 'vivo Y29L', 'vivo Y29L', 'V1901A', 'V1901A', 'V1901A', 'V1901T', 'V1930A', 'vivo 1938', 'V2034A', 'V2036A', 'V2099A', 'V2099A', 'V2160', 'V2160', 'V2160', 'V2066BA', 'V2066A', 'Y30g', 'Vivo Y30S', 'vivo Y31L', 'V2068', 'V2054A', 'V2068A', 'V2068', 'V2158A', 'Vivo Y32', 'V2180A', 'V2057', 'V2109', 'V2166A', 'V2166A', 'V2146', 'V2205', 'V2205', 'vivo Y37A', 'vivo Y37', 'V2044', 'vivo Y3t', 'vivo Y3t', 'vivo Y3t', 'vivo y41', 'vivo Y5 ', 'Vivo Y5', 'vivo 1935', 'VIVO Y50(2021)', 'V2023EA', 'Y50t', 'V2035', 'vivo Y51L', 'vivo Y51A', 'V2030', 'vivo 1707', 'V2031_21', 'vivo Y51t L', 'vivo Y51t L', 'vivo Y51t L', 'V2053', 'V2057A', 'vivo Y53', 'vivo 1606A', 'vivo Y53n', 'V2058', 'V2123A', 'V2069A', 'V2045A', 'V2045A', 'vivo Y55A', 'V2127', 'V2127', 'vivo 1603', 'vivo Y55n', 'vivo 1610', 'V2164A', 'V2164A', 'V1934A', 'V2006', 'vivo Y613', 'vivo Y613', 'vivo Y613F', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y623', 'vivo Y623', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y628', 'vivo Y628', 'vivo 1719', 'vivo Y66', 'vivo Y66L', 'vivo Y66i A', 'vivo Y67', 'vivo Y67A', 'vivo Y67L', 'vivo Y685', 'vivo 1714', 'vivo Y69A', 'V2002A', 'V2002A', 'vivo Y71A', 'vivo 1724', 'vivo Y71A', 'vivo 1801', 'V2041', 'V2060', 'V2102A', 'V1731CA', 'vivo Y73', 'Vivo Y73 /MMB239M', 'V2059', 'V2031A', 'V2164PA', 'V2117', 'vivo Y75A', 'V2142', 'V2142', 'vivo Y75s', 'vivo Y75s', 'vivo Y75S', 'vivo Y75s', 'V2124', 'V2156A', 'V2219A', 'V2219A', 'V2169', 'V2169', 'V1913A', 'vivo 1808i', 'vivo 1803', 'vivo 1803', 'vivo 1812', 'vivo Y81S', 'V1732A', 'V1732T', 'vivo Y83A', 'vivo 1802', 'vivo Y83A', 'vivo Y83A', 'vivo 1726', 'Vivo Y83I', 'vivo Y85A', 'vivo Y85', 'Vivo Y85i', 'Vivo Y86', 'V1730EA', 'vivo v1730ea', 'vivo 1908', 'vivo 1823', 'vivo 1908_19', 'vivo 1817', 'vivo 1811', 'vivo Y913', 'vivo Y913', 'vivo Y91C', 'vivo 1820', 'vivo 1816', 'vivo Y923', 'vivo Y923', 'vivo Y927', 'vivo Y927', 'vivo Y928', 'vivo Y928', 'vivo Y928', 'vivo 1814', 'V1818A', 'V1818A', 'vivo 1814', 'vivo Y937', 'vivo Y937', 'vivo Y937', 'V1818CT', 'V1818CA', 'vivo 1807', 'vivo Y95', 'V1813A', 'V1813T', 'V1813A', 'vivo Y97', 'V1945A', 'V1801A0', 'vivo Z1', 'vivo 1918', 'vivo 1951', 'vivo 1951', 'VIVO Z1Pro', 'vivo 1918', 'vivo 1918 Flow', 'Vivo Z10', 'vivo Z1i', 'V1730DA', 'V1730DT', 'vivo Z1i', 'vivo_1951', 'vivo 1917', 'V1813BA', 'V1813BT', 'V1813BT', 'Vivo Z34', 'vivo Z3x', 'V1730GA', 'vivo Z3x', 'vivo Z3x', 'V1921A', 'V1911A', 'V1911A', 'V1911A', 'V1990A', 'V1990A', 'V1963A', 'V1963A']
        self.infinix = [""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B""]
        self.opp = random.choice([""OP4F97"", ""OP4BA5L1"", ""OP664D1"", ""OP5F11L1"", ""OP2A92"", ""OP8F17"", ""OP8F31"", ""OP4C9E1"", ""OP5B31"", ""OP4BA6L1"", ""OP2B87"", ""OP6F21"", ""OP6C8E1"", ""OP8F11"", ""OPPOA16"", ""OPPOA15"", ""OPPOA11"", ""OPPOA73"", ""OPPOA37"", ""OPPOA53"", ""OPPOA33"", ""OPPOA93"", ""OPPOA35"", ""OPPOA83"", ""OPPOA57"", ""OPPOA71"", ""OPPOA39"", ""OPPOA3"", ""OPPOA51"", ""OPPOA27"", ""OPPOA79""])
        self.trek = random.choice([""mt6769"", ""mt6768"", ""mt6767"", ""mt6765"", ""mt6763"", ""mt6757"", ""mt6755"", ""mt6753"", ""mt6739"", ""mt6737"", ""mt6735"", ""mt6595"", ""mt6582"", ""mt6572"", ""mt6571"", ""mt6570"", ""mt8563"", ""mt8167"", ""mt8163"", ""mt8135"", ""mt8127"", ""mt8125"", ""mt7623"", ""mt6797"", ""mt6592"", ""mt6590"", ""mt6580"", ""mt6573"", ""mt6575"", ""mt6260"", ""mt6236""])
        self.igversi = (""100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,79.0.0.21.101,78.0.0.11.104,77.0.0.20.113,76.0.0.15.395,75.0.0.23.99,74.0.0.21.99,73.0.0.22.185,72.0.0.21.98,71.0.0.18.102,70.0.0.22.98,69.0.0.30.95,68.0.0.11.99,67.0.0.25.100,66.0.0.11.101,65.0.0.12.86,64.0.0.14.96,63.0.0.17.94,62.0.0.19.93,61.0.0.19.86,60.1.0.17.79,59.0.0.23.76,58.0.0.12.73,57.0.0.9.80,56.0.0.13.78,55.0.0.12.79,54.0.0.14.82,53.0.0.13.84,52.0.0.8.83,51.0.0.20.85,50.1.0.43.119,271.1.0.21.84,131.0.0.23.11,130.0.0.31.12,128.0.0.26.12,126.0.0.25.12,125.0.0.20.12,124.0.0.17.47,123.0.0.21.11,122.0.0.29.23,120.0.0.29.11,119.0.0.33.14,118.0.0.28.12,117.0.0.28.12,115.0.0.26.11,114.0.0.38.12,113.0.0.39.12,112.0.0.29.12,111.1.0.25.15,110.0.0.16.11,109.0.0.18.12,108.0.0.23.11,107.0.0.27.12,106.0.0.24.11,105.0.0.18.11,104.0.0.21.11,103.1.0.15.11,102.0.0.20.11,101.0.0.15.12,100.0.0.17.12,99.0.0.32.182,98.0.0.15.119,97.0.0.32.119"").split(',')
        self.dix = random.choice(self.igversi)
        self.kode = random.choice(['188791643','177770724','192992577','180322810','195435560','196643820','196643821','188791637','192992576','196643799','196643801','196643803','195435546','194383411','197825254','197825260','197825079','171727793','197825112','197825012','197825234','179155086','192992563','197825268','166149669','192992565','198036424','197825223','183982969','199325909','199325886','199325890','199325911','197825118','127049003','197825169','197825216','197825127','200395960','179155096','199325907','200396014','188791669','197825133','170693926','200396005','171727780','201577064','201576758','201577192','201775949','201576944','201775970','143631574','126223520','201775951','167338518','144612598','170693940','201775813','200395971','201775744','201775946','202766609','145652094','202766591','202766602','203083142','179155088','202766608','199325884','180322802','202766603','195435547','165030894','201576967','201775904','194383424','197347903','202766610','185203693','201576898','204019468','187682682','204019456','201775901','204019471','204019454','204019458','202766601','204019452','173238721','204019466','148324036','202766581','158441904','201576903','205280538','205280529','201576813','173238729','141753096','205280531','163022072','201576887','163022088','141753091','148324051','205280528','154400383','205280537','201576818','157405371','205858383','201576811','165031093','187682684','145652090','206670917','185203686','192992561','183982986','206670927','150338061','183982962','127049016','175574603','155374054','205858247','135374896','206670920','169474958','206670926','160497905','161478672','192992578','206670929','131223243','206670916','142841919','187682681','171727795','151414277','206670922','160497915','207505137','165030898','208061741','208061688','208180365','208061674','197825052','147375133','208061744','196643798','208061725','122338247','157536430','208061728','209143963','208727155','209143726','205280539','209143903','209143970','181496409','208061739','209143957','210180522','210180512','209143881','209143712','180322805','210180521','195435561','210370119','210180523','210180493','175574596','210180510','210180480','210180513','210180517','176649504','177770663','210180479','211114117','210908379','206670921','211114134','183982943','211399345','211399342','211399332','201775962','211574187','211574249','210180519','167338559','185203649','124583960','211399337','211399335','197825163','166149717','211399336','212063371','211399329','209143954','210180482','168361634','212214017','209143867','211399341','211399340','212214027','195435510','122338243','139237670','152367502','212676872','212676898','212676875','212676895','212676901','209823384','212676869','196643822','212676878','213367980','213368005','212676886','213558743','209143913','212214039','158441917','174081672','213558750','201775966','188791681','185203705','143631575','161478664','214245350','161478663','212676881','213558770','214245346','138226752','214245221','214245182','214245206','214245218','214245354','214245295','214245199','214245304','214245280','214446313','214245187','214245288','214139002','202766605','214245319','214646783','158441914','215246048','195435544','208061677','215464400','128676146','215464389','215464385','215464390','215464398','182747397','215464393','216233197','201775791','216817344','215464395','216817286','185203642','164094529','216817305','215464401','162439029','215464382','216817280','216817331','214330969','216817299','216817357','217948981','217948980','217948956','217948959','217948968','216817296','217948952','217948982','216817269','219308759','219308726','182747387','219308721','219308754','219308763','176649435','183982982','219909486','127049038','219308730','221134012','221134032','221134009','221134037','194383426','221134029','221134005','221134018','145652093','225283632','165031108','225283625','224652582','139906580','225283628','225283624','226142579','225283634','225283631','226493211','225283623','185203672','156514151','218793478','225283621','227299063','225283627','227299064','227299021','227299027','227544546','227299041','227299060','227299012','228970707','228970705','227299005','228970687','228970683','228970694','228970710','228970689','160497904','195435540','129611419','229783842','230291708','228970681','148324047','230877709','231192211','230877674','230877705','230877678','211399328','209143896','230877713','194383428','230877689','221134002','231457747','208061721','230877671','230877668','232868027','232088496','185203706','232868005','232867964','232868001','232868015','232868031','232867959','232868009','164094526','232867941','234041364','182747399','232868024','232867949','234847239','234847238','234847234','162439040','234847229','234847230','181496427','234847240','232867993','195435558','232867967','232867997','234847227','235871830','221133998','236572344','236572377','153386780','236572337','236572349','236572372','234847226','236572383','237507050','238093993','238093948','238093954','238093999','238093982','239490565','239490555','238093946','238093966','239490563','239490550','239974660','240726416','239490568','240726484','240726452','239490551','239490548','240726426','240726476','240726491','240726471','241043882','241114613','236572331','241267273','240726407','241456456','241267278','241267269','241114619','241456445','241456451','242168941','242168928','242168931','242168939','242168925','240726436','242375239','144722090','242168935','242290370','157405369','242168933','242290355','242703240','242807362','242168923','242168943','242991209','243646252','243646269','242991200','243711120','243646267','243711093','243975802','243646263','243646248','243646255','244167578','128676156','194383413','243975835','244390417','244390338','245196084','245196061','240726392','245196055','243646273','245196082','245196063','245196070','245666450','245466705','245870319','245870301','245870347','245196087','246889064','246889072','246889073','246889074','246889065','247146500','246889063','245870262','247370962','247146481','246889068','246889062','247541884','247541831','247370955','247370942','247720736','247720751','248310216','248310220','248310208','247720744','248399342','248310210','247720747','248310206','248717751','248310212','248310221','248823392','248583561','248310205','248899028','248955251','248955247','249178904','248955244','249507608','249507582','249507588','249507585','248955240','249507607','249507592','249810008','249966137','249507610','249966081','249966100','249507599','249966140','249810004','123790722','250188776','249628096','250188788','250742103','250742113','250742102','250877984','250742105','250742111','251048681','250742107','250742115','251048695','251304696','251304682','251524431','251530710','251304689','251524420','251524409','251524390','250742101','251048673','252055918','252055945','251920416','252055944','252055925','252239038','252055936','252055915','252055948','252390568','252390583','252580134','252740497','252740485','252740490','253120615','253325372','253325384','253325385','253447816','253146263','253120607','253325374','253120598','253325371','253447808','253447809','253325378','253447814','253447807','253447811','253447817','253447813','181496411','253447806','255191971','255013798','255777478','255777471','255777474','255777472','255959637','255777477','255959614','255959635','256099199','256099204','150338064','256099153','256099205','256099156','255983744','256107300','255777470','126223536','256203326','256099190','256099151','256324061','256324047','256203339','256966628','256966589','256966626','256966590','124584015','257456576','256966593','257456590','256966629','256966587','256966592','257456586','257456539','259829115','259829104','259829113','260037038','259829105','259829109','260037030','260149625','259829103','260149621','260465044','259829116','260724710','179155058','261079769','261079761','261079768','261079762','261079771','261276939','157405370','135374885','261079765','261393056','261393062','261079760','181496406','182747360','261504698','261690888','261504706','169474957','262218766','262290715','262290774','262372432','262372425','262372431','262886993','262886995','262372426','262886987','261079764','262886986','262886988','262886990','262372433','262886996','263652962','264009049','264009019','264009030','264009021','264009023','264009052','264009024','261763534','174081651','169474965','232867942','264009013','255959606','264009028','267397344','267397322','267925737','267397343','267925708','267397327','267397321','267925714','267258517','267925705','268773287','267925733','268773233','267925702','268773286','159526770','268773239','268773272','269790795','269285030','269790805','269790803','269790792','268773227','269849047','270426177','270426174','271182277','269790789','271182270','268773290','271182266','271182276','269790798','271182279','271182265','271182267','269790807','271823819','272382110','272382111','272382106','272693584','272382095','272382093','272382098','272382100','272382103','273728833','273371577','273728832','273728798','273907093','273907111','273907108','238093987','273907112','273907103','274774869','274774891','274774908','273907087','274774904','274774875','274774914','275292626','276027938','276028040','276027963','276028037','276028020','276028017','274774862','276028013','249507580','276028029','273907098','277249238','277249248','277249249','276028033','277249250','277249226','275292623','277249214','277249242','277249237','277249240','278625447','278002558','278625420','278625431','278625423','117539687','278625416','278625444','277249213','278625451','279469964','279996068','279996060','279996067','279996058','280194220','279996065','279996063','279996061','279996059','280894196','273728787','271182262','281579032','281579023','276514494','281579021','281579027','281579033','268773274','283072590','281579025','283072571','282619332','283489774','283072587','283072567','281579031','283072580','283072574','284459213','284459224','179155089','256966583','284459214','283072585','284459218','284459223','284459225','285338607','275113919','284459221','284459212','284459215','285855793','285855800','285855803','285855791','285855802','285855804','285855795','286809973','287420974','287421023','287420968','287420979','287421017','287421005','287421019','287421012','277249241','288682406','287421026','288682405','288682397','288682407','261079772','288682398','288682401','288205409','289692198','287420997','289692186'])
        self.dpi_pxl = random.choice(['240dpi; 1760x792', '240dpi; 1920x864', '320dpi; 2400x1080', '400dpi; 3200x1440', '480dpi; 1080x1920', '320dpi; 900x1600', '320dpi; 720x1280', '240dpi; 540x960', '280dpi; 1920x1080', '240dpi; 160x900', '240dpi; 1280x720', '160dpi; 960x540','160dpi; 623x1280'])
        self.dpi = random.choice(['320dpi','640dpi','213dpi','480dpi','420dpi','240dpi','280dpi','160dpi','560dpi','540dpi','272dpi','360dpi','720dpi','270dpi','450dpi','600dpi','279dpi','210dpi','180dpi','510dpi','300dpi','454dpi','314dpi','288dpi','401dpi','153dpi','267dpi','345dpi','493dpi','340dpi','604dpi','465dpi','680dpi','256dpi','290dpi','432dpi','273dpi','120dpi','200dpi','367dpi','419dpi','306dpi','303dpi','411dpi','195dpi','518dpi','230dpi','384dpi','315dpi','293dpi','274dpi','235dpi'])
        self.pxl = random.choice(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
        self.samsung = [""SM-A205F"",""SM-J120H"",""SM-J120F"",""SM-J120M"",""SM-J111M"",""SM-J111F"",""SM-J110H"",""SM-J110G"",""SM-J110F"",""SM-J110M"",""SM-J105H"",""SM-J105Y"",""SM-J105B"",""SM-J106H"",""SM-J106F"",""SM-J106B"",""SM-J106M"",""SM-J200F"",""SM-J200M"",""SM-J200G"",""SM-J200H"",""SM-J200F"",""SM-J200GU"",""SM-J260M"",""SM-J260F"",""SM-J260MU"",""SM-J260F"",""SM-J260G"",""SM-J200BT"",""SM-G532G"",""SM-G532M"",""SM-G532MT""]
        self.cgsm = [""dream2qltesq"", ""beyond2q"", ""broadway"", ""dreamqltevzw"", ""b2q"", ""a7y18lte"", ""a50qlteue"", ""a42xqlte"", ""a7y18lte"", ""a40lte"", ""a6plte"", ""a52xqlteue"", ""a5y20qlteue"", ""a3xelte"", ""a42xqlteue"", ""a3xelte"", ""a41lte"", ""a72xlte"", ""dreamlte"", ""hero2qltevzw"", ""beyond0lte"", ""beyond2"", ""starlte"", ""a5y17lte"", ""a7xelte"", ""a71xqlteue"", ""dream2qlteue"", ""dreamqltespr"", ""a5y17lte"", ""beyond1qlteue"",""herolte"",""zerolte"",""hero2te""]
        self.realme = [""RMX3516"", ""RMX3371"", ""RMX3461"", ""RMX3286"", ""RMX3561"", ""RMX3388"", ""RMX3311"", ""RMX3142"", ""RMX2071"", ""RMX1805"", ""RMX1809"", ""RMX1801"", ""RMX1807"", ""RMX1803"", ""RMX1825"", ""RMX1821"", ""RMX1822"", ""RMX1833"", ""RMX1851"", ""RMX1853"", ""RMX1827"", ""RMX1911"", ""RMX1919"", ""RMX1927"", ""RMX1971"", ""RMX1973"", ""RMX2030"", ""RMX2032"", ""RMX1925"", ""RMX1929"", ""RMX2001"", ""RMX2061"", ""RMX2063"", ""RMX2040"", ""RMX2042"", ""RMX2002"", ""RMX2151"", ""RMX2163"", ""RMX2155"", ""RMX2170"", ""RMX2103"", ""RMX3085"", ""RMX3241"", ""RMX3081"", ""RMX3151"", ""RMX3381"", ""RMX3521"", ""RMX3474"", ""RMX3471"", ""RMX3472"", ""RMX3392"", ""RMX3393"", ""RMX3491"", ""RMX1811"", ""RMX2185"", ""RMX3231"", ""RMX2189"", ""RMX2180"", ""RMX2195"", ""RMX2101"", ""RMX1941"", ""RMX1945"", ""RMX3063"", ""RMX3061"", ""RMX3201"", ""RMX3203"", ""RMX3261"", ""RMX3263"", ""RMX3193"", ""RMX3191"", ""RMX3195"", ""RMX3197"", ""RMX3265"", ""RMX3268"", ""RMX3269"",""RMX2027"", ""RMX2020"", ""RMX2021"", ""RMX3581"", ""RMX3501"", ""RMX3503"", ""RMX3511"", ""RMX3310"", ""RMX3312"", ""RMX3551"", ""RMX3301"", ""RMX3300"", ""RMX2202"", ""RMX3363"", ""RMX3360"", ""RMX3366"", ""RMX3361"", ""RMX3031"", ""RMX3370"", ""RMX3357"", ""RMX3560"", ""RMX3562"", ""RMX3350"", ""RMX2193"", ""RMX2161"", ""RMX2050"", ""RMX2156"", ""RMX3242"", ""RMX3171"", ""RMX3430"", ""RMX3235"", ""RMX3506"", ""RMX2117"", ""RMX2173"", ""RMX3161"", ""RMX2205"", ""RMX3462"", ""RMX3478"", ""RMX3372"", ""RMX3574"", ""RMX1831"", ""RMX3121"", ""RMX3122"", ""RMX3125"", ""RMX3043"", ""RMX3042"", ""RMX3041"", ""RMX3092"", ""RMX3093"", ""RMX3571"", ""RMX3475"", ""RMX2200"", ""RMX2201"", ""RMX2111"", ""RMX2112"", ""RMX1901"", ""RMX1903"", ""RMX1992"", ""RMX1993"", ""RMX1991"", ""RMX1931"", ""RMX2142"", ""RMX2081"", ""RMX2085"", ""RMX2083"", ""RMX2086"", ""RMX2144"", ""RMX2051"", ""RMX2025"", ""RMX2075"", ""RMX2076"", ""RMX2072"", ""RMX2052"", ""RMX2176"", ""RMX2121"", ""RMX3115"", ""RMX1921""]
        self.xiaomi = [""2201116SI"", ""M2012K11AI"", ""22011119TI"", ""21091116UI"", ""M2102K1AC"", ""M2012K11I"", ""22041219I"", ""22041216I"", ""2203121C"", ""2106118C"", ""2201123G"", ""2203129G"", ""2201122G"", ""2201122C"", ""2206122SC"", ""22081212C"", ""2112123AG"", ""2112123AC"", ""2109119BC"", ""M2002J9G"", ""M2007J1SC"", ""M2007J17I"", ""M2102J2SC"", ""M2007J3SY"", ""M2007J17G"", ""M2007J3SG"", ""M2011K2G"", ""M2101K9AG "", ""M2101K9R"", ""2109119DG"", ""M2101K9G"", ""2109119DI"", ""M2012K11G"", ""M2102K1G"", ""21081111RG"", ""2107113SG"", ""21051182G"", ""M2105K81AC"", ""M2105K81C"", ""21061119DG"", ""21121119SG"", ""22011119UY"", ""21061119AG"", ""21061119AL"", ""22041219NY"", ""22041219G"", ""21061119BI"", ""220233L2G"", ""220233L2I"", ""220333QNY"", ""220333QAG"", ""M2004J7AC"", ""M2004J7BC"", ""M2004J19C"", ""M2006C3MII"", ""M2010J19SI"", ""M2006C3LG"", ""M2006C3LVG"", ""M2006C3MG"", ""M2006C3MT"", ""M2006C3MNG"", ""M2006C3LII"", ""M2010J19SL"", ""M2010J19SG"", ""M2010J19SY"", ""M2012K11AC"", ""M2012K10C"", ""M2012K11C"", ""22021211RC""]
        self.asus = ['ME171', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'ME371MG', 'K01N', 'K012', 'K00E', 'K019', 'K00Z', 'K00Z', 'K016', 'K016', 'K00G', 'K00G', 'K50IJ', 'ME172V', 'ME172V', 'ME172V', 'ME172V', 'K00F', 'K01E', 'K00R', 'K017', 'K013', 'K007', 'K01A', 'ASUS MeMO Pad 7', 'K015', 'K011', 'K00L', 'ME302C', 'ME302C', 'ME302C', 'AOSP on Duma', 'ME302KL', 'ME302KL', 'K00U', 'ME173X', 'ME173X', 'ME173X', 'ME173X', 'ASUS K00S', 'ME301T', 'ME301T', 'ME301T', 'PadFone', 'PadFone', 'PadFone 2', 'PadFone 2', 'PadFone T008', 'PadFone T008', 'PadFone T004', 'ASUS_T00E', 'PadFone T00C', 'Padfone t00c', 'PadFone T00C', 'ASUS_T00N', 'ASUS PadFone X', 'ASUS_T00T', 'ASUS_Z01QD', 'ZS600KL', 'ASUS_I001DE', 'ZS660KL', 'ASUS_I001DA', 'ASUS_I001DC', 'ZS660KL', 'ASUS_I003DD', 'ZS661KS', 'ASUS_I003DD', 'ZS661KS', 'ASUS_I005DA', 'ASUS_I005DC', 'ASUS_AI2201_C', 'ASUS_AI2201_D', 'ASUS_AI2201_F', 'ASUS_AI2203_D', 'ASUS_AI2203_C', 'ASUS_AI2203_B', 'ASUS TAB A8', 'Tinker Board', 'Tinker Board 2', 'Tinker Board S', 'TX201LA', 'TX201LA', 'K010', 'K018', 'K018', 'TF300T', 'ASUS Pad TF300T', 'K01B', 'K00C', 'K00C', 'ASUS XPad 10LTE', 'ASUS Z101', 'ASUS Z101 Prime', 'ASUS_Z008D', 'ASUS_Z00AD', 'Z00D', 'ASUS_Z00LD', 'ASUS_Z00ED', 'ASUS_Z00RD', 'ASUS ZenFone 2E', 'ASUS_Z012D', 'ZE520KL', 'ASUS_Z017D', 'ASUS_Z012DA', 'ASUS_Z017DA', 'ASUS_Z012S', 'ASUS_Z012DE', 'ASUS_Z01FD', 'ASUS_Z016S', 'ZS550KL', 'ASUS_Z01BD', 'ASUS_Z01BS', 'ZC551KL', 'ASUS_Z01BDB', 'ASUS_X00DDB', 'ASUS_X008D', 'ASUS_X00DDA', 'ZC553KL', 'ASUS_X008DB', 'ASUS_A001', 'ASUS_Z01HDA', 'ZE553KL', 'ASUS_X00LD', 'ASUS_Z01KDA', 'ASUS_Z01KS', 'ASUS_X00LDB', 'ASUS_T00I', 'ASUS_X00HD', 'ASUS_X00ID', 'ZC554KL', 'ASUS_X015D', 'ASUS_X015D', 'ASUS_Z01GS', 'ASUS_Z01GD', 'ASUS_X00LDA', 'ZD553KL', 'ASUS_Z01MD', 'ASUS_Z01MDA', 'ZD552KL', 'ASUS_X00QD', 'ASUS_X00QD', 'ASUS_T00J', 'ASUS_X00QSA', 'ZE620KL', 'ASUS_T00F', 'ASUS_T00F', 'ASUS_T00K', 'ASUS_X017DA', 'ASUS_T00P', 'ASUS_Z01RD', 'ASUS_Z01RD', 'Zenfone 5Z', 'ZS620KL', 'ASUS_T00G', 'ASUS_I01WD', 'ASUS_T00G', 'ASUS_Z002', 'ZS630KL', 'ASUS_I002D', 'ZS670KS', 'ZS671KS', 'ASUS_I006D', 'ASUS_I004D', 'ASUS_AI2202', 'ASUS_AI2202_B', 'ASUS_A002', 'ASUS_A002A', 'ASUS_Z007', 'ASUS_X00ADA', 'ASUS_X00BD', 'ASUS_X007D', 'ZB500KL', 'ASUS_Z00SD', 'ZB551KL', 'ASUS_L001', 'ZB500KG', 'ASUS_Z00VD', 'ASUS_X013DA', 'ASUS_X013D', 'ASUS_X014D', 'ASUS_X014D', 'ASUS_X013DB', 'G550KL', 'G550KL', 'G553KL', 'ASUS_Z00YD', 'ASUS_A007', 'ASUS_X00RD', 'G552KL', 'ASUS_Z010DD', 'ASUS_Z010DB', 'ASUS_Z010D', 'ASUS_Z010DA', 'ASUS_X00PD', 'ZB555KL', 'ASUS_X01AD', 'ZB633KL', 'ASUS_X018D', 'ASUS_X018DC', 'ASUS_X00TD', 'ASUS_X00TDB', 'ASUS_X00TDE', 'ZB602KL', 'ASUS_X01BDA', 'ASUS_A001D', 'ASUS_X002', 'ASUS_X003', 'ASUS_X003', 'ASUS_X550', 'ASUS_X00GD', 'ASUS_X005', 'ASUS_Z00UDB', 'ASUS_Z00UD', 'ASUS_A006', 'ASUS_A009', 'ASUS_Z00XS', 'P01T_1', 'P021', 'P00L', 'P00C', 'P028', 'P027', 'ASUS_P00I', 'P001', 'P008', 'ASUS_P00J', 'ASUS ZenWatch', 'ASUS ZenWatch 2']
        self.dvc = random.choice([""30/11"",""31/12"",""29/10""])
        return(random.choice([
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Asus; {str(random.choice(self.asus))}; {str(random.choice(self.asus))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oneplus; {str(random.choice(self.onpls))}; {str(random.choice(self.onpls))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Nexus; {str(random.choice(self.nexus))}; {str(random.choice(self.nexus))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Vivo; {str(random.choice(self.vivo))}; {str(random.choice(self.vivo))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oppo; {str(random.choice(self.oppo))}; {str(random.choice(self.oppo))} qcom; in_ID; {self.kode})',
            f'Instagram {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Realme; {str(random.choice(self.realme))}; {str(random.choice(self.realme))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Infinix {str(random.choice(self.infinix))}; {str(random.choice(self.infinix))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Samsung; {str(random.choice(self.samsung))}; {str(random.choice(self.samsung))} qcom; in_ID; {self.kode})'
           ])
       )
        
    def useragent_api_threads(self):
        self.nexus = ['Galaxy Nexus', 'Nexus 10', 'Nexus 2', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 4', 'Nexus 5', 'phone/Nexus 5', 'Nexus 5X', 'Nexus 6', 'Nexus 7', 'Nexus 9', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus One', 'Nexus Player', 'Nexus Player', 'Nexus S', 'Nexus S', 'Nexus S 4G', 'nexus S', 'Nexus S', 'Nexus s', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S', 'Nexus S']
        self.micromax = ['Micromax 10', 'Micromax 1J', 'Micromax 86519', 'Micromax A064', 'Micromax_A064', 'Micromax A065', 'Micromax_A065', 'Micromax A066', 'Micromax_A066', 'Micromax A067', 'Micromax_A067', 'MICROMAX_A068', 'MICROMAX A068', 'Micromax A068', 'Micromax A069', 'Micromax_A069', 'Micromax A075', 'Micromax A082', 'Micromax_A082', 'Micromax A089', 'Micromax_A089', 'Micromax A091', 'Micromax A092', 'Micromax_A092', 'Micromax A093', 'Micromax_A093', 'Micromax A095', 'Micromax A096', 'Micromax_A101', 'Micromax A102', 'Micromax_A102', 'Micromax A104', 'Micromax a104', 'Micromax A105', 'Micromax_A105', 'Micromax A106', 'Micromax-A106', 'Micromax A108', 'Micromax_A109', 'Micromax A109', 'Micromax A110', 'Micromax_A110', 'Micromax A110Q', 'Micromax_A110Q', 'Micromax A111', 'Micromax A114', 'Micromax A114R', 'Micromax_A114R', 'Micromax A115', 'Micromax_A115', 'Micromax A116', 'Micromax_A116', 'Micromax A116i', 'Micromax_A116i', 'Micromax A117', 'Micromax_A117', 'Micromax A118R', 'Micromax A119', 'Micromax A120', 'Micromax A121', 'Micromax_A121', 'Micromax A15', 'Micromax A177', 'Micromax A190', 'Micromax_A190', 'Micromax A200', 'Micromax_A200', 'Micromax A21', 'Micromax A210', 'Micromax A24', 'Micromax_A24', 'Micromax A25 Smarty', 'Micromax A250', 'Micromax A255', 'Micromax_A255', 'Micromax A26', 'Micromax_A26', 'Micromax_A27', 'Micromax A27', 'Micromax_A28', 'Micromax A28/GRI40', 'Micromax A28', 'Micromax A290', 'Micromax A30', 'Micromax A300', 'Micromax A310', 'Micromax A311', 'Micromax A315', 'Micromax_A315', 'Micromax_A316', 'Micromax A316', 'Micromax_A34', 'Micromax A34', 'Micromax_A35', 'Micromax A35', 'Micromax A350', 'Micromax_A36', 'Micromax A36', 'Micromax_A37', 'Micromax A37', 'Micromax A37B', 'Micromax_A37B', 'Micromax A40', 'Micromax_A40', 'Micromax A46', 'Micromax_A46', 'Micromax A47', 'MicromaxA47', 'Micromax_A50', 'Micromax A50', 'Micromax A51', 'Micromax A52', 'Micromax A54', 'Micromax A56', 'Micromax_A57', 'Micromax A57', 'Micromax A58', 'Micromax_A58', 'Micromax A59', 'Micromax A60', 'Micromax A61', 'Micromax A62', 'Micromax_A62', 'Micromax A63', 'Micromax_A63', 'Micromax_A65', 'Micromax A65', 'Micromax_A66', 'Micromax A66', 'Micromax A67', 'Micromax A68', 'Micromax A69', 'Micromax_A69', 'Micromax_A70', 'Micromax A700', 'Micromax A71', 'Micromax_A71', 'Micromax A72', 'Micromax_A72', 'Micromax A73', 'Micromax_A74', 'Micromax A74', 'Micromax A75', 'Micromax_A76', 'Micromax A76', 'Micromax A77', 'Micromax A78', 'Micromax A79', 'en_us Micromax A80', 'Micromax A80', 'Micromax A82', 'Micromax_A82', 'Micromax A84', 'Micromax A85', 'Micromax A86', 'Micromax_A86', 'Micromax_A87', 'Micromax A87', 'Micromax A87 . Ninja 4.0', 'Micromax A88', 'Micromax_A88', 'Micromax A89', 'Micromax A90', 'Micromax A90s', 'MIcromax_A90s', 'Micromax A90S', 'Micromax A91', 'Micromax_A91', 'Micromax_A92', 'Micromax A92', 'MicromaxA93', 'Micromax A93', 'Micromax A94', 'Micromax_A94', 'Micromax A96', 'Micromax_A96', 'Micromax A97', 'Micromax_A99', 'Micromax A99', 'Micromax_AD3520', 'Micromax AD3520', 'Micromax AD3550', 'Micromax AD4500', 'Micromax_AD4500', 'Micromax AE90', 'Micromax AO5510', 'Micromax AQ5000', 'Micromax B4A', 'Micromax B5 Pro', 'B5Pro', 'Micromax_Bharat_5_Plus', 'Micromax Q402Plus', 'Micromax Q440', 'Micromax Bharat 5', 'Micromax Q4204', 'Micromax Bharat 5 Plus', 'Micromax Bharat 5 Pro', 'Micromax Bolt 3425', 'Micromax Bolt 2', 'Micromax Q402+', 'Micromax Q306', 'Micromax Q3001', 'Micromax Q301', 'Micromax Q303', 'Micromax Q324', 'Micromax Q326', 'Q327', 'Micromax Q327', 'Micromax Q3301', 'Micromax Q333', 'Micromax_Q333', 'Micromax Q338', 'Micromax Q346', 'Micromax Q354', 'Micromax Q357', 'Micromax Q383', 'Micromax_S302', 'Micromax S302', 'Micromax Q424', 'Micromax Q352', 'Micromax Q4101', 'Micromax C2A', 'Micromax C9', 'Micromax C1', 'Micromax C1A', 'Micromax C2APLS', 'Micromax Q4310', 'Micromax E4815', 'arm_64 Micromax E481', 'Micromax E481', 'Micromax E4816', 'Micromax Q462', 'Micromax Q463', 'Micromax E485', 'Micromax E484', 'Micromax AQ4501', 'Micromax AQ4502', 'A240', 'Micromax A240', 'Micromax Q391', 'Micromax E453', 'Micromax A107', 'Micromax HS2', 'Micromax HS1', 'Micromax_HS3', 'en Micromax_HS3', 'AQ5001', 'Micromax AQ5001', 'AQ5001 Canvas Power', 'Micromax Q392', 'Micromax Q465', 'Micromax Q461', 'Micromax Q350R', 'Micromax Q421', 'Micromax Q417', 'Micromax Q426', 'Micromax Q4260', 'Micromax E311', 'Micromax E352', 'Micromax E455', 'Micromax Q415', 'Micromax Q355', 'Micromax Q469', 'Micromax E451', 'Micromax E451', 'Micromax Q340', 'Micromax Q349', 'Micromax Q345', 'Micromax Q450', 'Micromax Q480', 'arm_64 Micromax Q480', 'Micromax Q380', 'Micromax Q3502', 'Micromax Q351', 'Micromax Q385', 'P70221', 'Micromax P681', 'MicromaxP802', 'Micromax Q427', 'Micromax_Q427', 'Micromax Q413', 'Micromax E313', 'Micromax D2', 'Micromax D200', 'Micromax_D200', 'Micromax D303', 'Micromax D304', 'Micromax_D304', 'Micromax D305', 'Micromax D306', 'Micromax D320', 'Micromax D321', 'Micromax D333', 'Micromax D340', 'Micromax D7517', 'Micromax DM5003', 'Micromax E353', 'Micromax E457', 'Micromax E458', 'Micromax E460', 'Micromax E471', 'Micromax E4817', 'Micromax E482', 'Micromax E483', 'Micromax E5018M', 'Micromax EG111', 'Micromax EG116', 'micromax F', 'micromax F189', 'Micromax F601', 'MicromaxF666', 'Micromax IN', 'Micromax E7533', 'Micromax E6523', 'IN_2b', 'IN_Note1', 'MICROMAX IN1', 'N8216', 'N8301', 'ione note', 'MICROMAX ione note', 'Micromax N4120', 'Micromax N8202', 'Micromax Ninja', 'Micromax Nitro', 'Micromax Note 1+', 'Micromax Note 5', 'Micromax Note3', 'Micromax NX', 'Micromax P001', 'Micromax P250(Funbook)', 'Micromax P255', 'Micromax P256', 'xx Micromax P275', 'Micromax_P275', 'Micromax P275', 'Micromax P280', 'Micromax P290', 'Micromax P310', 'Micromax P350', 'xx Micromax P350', 'Micromax P360', 'Micromax P362', 'Micromax P365', 'Micromax P410', 'Micromax P410i', 'Micromax_P410i', 'Micromax P420', 'Micromax P469', 'Micromax P470', 'MicromaxP480', 'Micromax P500(Funbook)', 'Micromax P560', 'Micromax P580', 'Micromax P580i', 'Micromax P600', 'Micromax P650', 'Micromax P650E', 'Micromax P660', 'Micromax P660', 'Micromax_P666', 'Micromax P666', 'MicromaxP680', 'Micromax P690', 'Micromax P701', 'MicromaxP702', 'Micromax P810', 'en Micromax Q300', 'Micromax_Q300', 'Micromax Q323', 'Micromax_Q323', 'Micromax Q325', 'Micromax_Q325', 'Micromax Q331', 'Micromax_Q331', 'Micromax Q332', 'Micromax_Q332', 'Micromax Q334', 'Micromax Q335', 'Micromax_Q335', 'Micromax Q336', 'Micromax_Q336', 'Micromax Q341', 'Micromax Q343', 'Micromax Q348', 'Micromax_Q353', 'en Micromax_Q353', 'Micromax_Q353P', 'Micromax Q3551', 'Micromax Q3555', 'Micromax Q361', 'Micromax Q370', 'Micromax_Q370', 'Micromax Q371', 'Micromax_Q371', 'Micromax Q375', 'Micromax_Q375', 'Micromax Q379', 'Micromax Q381', 'Micromax Q382', 'Micromax Q386', 'Micromax Q394', 'Micromax_Q394', 'Micromax Q395', 'Micromax Q397', 'Micromax Q398', 'arm Micromax Q398', 'Micromax Q400', 'Micromax_Q400', 'Micromax Q4002', 'en Micromax Q4002', 'Micromax Q401', 'Micromax Q402', 'Micromax Q402 Ultra', 'Micromax Q404', 'Micromax Q411', 'Micromax_Q411', 'Micromax Q412', 'Micromax Q414', 'Micromax Q416', 'Micromax Q419', 'Micromax Q4201', 'Micromax Q422', 'Micromax Q4220', 'Micromax Q423', 'Micromax Q428', 'Micromax_Q428', 'Micromax Q429', '720X1280 Micromax Q4309', 'Micromax Q4312', 'en_US Micromax Q437', 'Micromax Q440Plus', 'Micromax Q454', 'Micromax Q470', 'Micromax Q479', 'Micromax Q491', 'Micromax_Q491', 'Micromax Q502+', 'Micromax Q666', 'Micromax Q67', 'micromax Q68', 'micromax Q78', 'Micromax S300', 'Micromax_S300', 'Micromax S301', 'Micromax_S301', 'Micromax Q4311', 'Micromax Q4601', 'Micromax Q409A', 'Micromax Q409', 'Micromax Q452', 'Micromax Unite 3', 'Micromax Unite 2', 'Micromax Unite 2 A106', 'Micromax Q372', 'Micromax V89', 'Micromax Q4001', 'Micromax Q4202', 'Micromax Q4251', 'arm Micromax Q4251', 'Micromax W5509', 'Micromax X5098', 'Micromax-Xzoom A52', 'YU5530', 'YU5040', 'Micromax YU5900', 'YU5012', 'Micromax Z59']
        self.onpls = ['NE2213', 'NE2217', 'NE2215', 'NE2210', 'NE2210', 'CPH2423', 'CPH2411', 'CPH2417', 'CPH2413', 'CPH2415', 'CPH2449', 'CPH2487', 'ONE A2003', 'ONE A2003', 'ONE A2001', 'ONE A2005', 'ONEPLUS A3003', 'ONEPLUS A3000', 'ONEPLUS A3010', 'ONEPLUS A5000', 'ONEPLUS A5000', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A5010', 'ONEPLUS A6003', 'ONEPLUS A6000', 'ONEPLUS A6010', 'ONEPLUS A6013', 'ONEPLUS A6010', 'GM1900', 'GM1901', 'GM1903', 'GM1917', 'GM1913', 'GM1911', 'GM1910', 'GM1915', 'GM1910', 'HD1901', 'HD1903', 'HD1900 Flow', 'HD1905', 'HD1900', 'HD1907', 'HD1911', 'HD1913', 'HD1910', 'GM1925', 'HD1925', 'GM1920', 'IN2013', 'IN2015', 'IN2010', 'IN2010', 'IN2017', 'IN2019', 'IN2023', 'IN2025', 'IN2020', 'OnePlus8Pro', 'KB2005', 'KB2001', 'KB2007', 'KB2003', 'KB2000', 'OnePlus 8T 5G', 'LE2115', 'LE2113', 'LE2111', 'LE2110', 'LE2120', 'LE2125', 'LE2123', 'LE2121', 'LE2127', 'OnePlus9Pro', 'LE2101', 'LE2100', 'MT2111', 'MT2110', 'ONEPLUS A19677', 'ONEPLUS A2345', 'Oneplus A31', 'Oneplus A3331', 'ONEPLUS A35904', 'ONEPLUS A37000', 'ONEPLUS A3EVB', 'ONEPLUS A62322', 'ONEPLUS A64794', 'ONEPLUS A65369', 'ONEPLUS A68333', 'ONEPLUS A70458', 'ONEPLUS A70791', 'ONEPLUS A78637', 'ONEPLUS A80828', 'ONEPLUS A83306', 'ONEPLUS A87046', 'ONEPLUS A90641', 'Oneplus A99831', 'PGKM10', 'PGKM10', 'PHK110', 'PHK110', 'PGP110', 'PGP110', 'PGZ110', 'ONEPLUS KB2023', 'OnePlus Nord', 'Oneplus Nord 2', 'DN2103', 'DN2101', 'CPH2399', 'CPH2401', 'AC2001', 'AC2003', 'IV2201', 'CPH2409', 'CPH2381', 'CPH2465', 'EB2103', 'EB2101', 'EB2101', 'BE2025', 'BE2026', 'BE2029', 'Nord N10 5G', 'BE2028', 'BE2013', 'BE2011', 'BE2012', 'CPH2459', 'GN2200', 'CPH2469', 'DE2118', 'DE2117', 'A0001', 'ONE E1001', 'ONE E1003', 'ONE E1001', 'ONE E1005']
        self.oppo = [""CPH1869"", ""CPH1929"",""CPH2107"", ""CPH2238"", ""CPH2389"",""CPH2401"", ""CPH2407"", ""CPH2413"", ""CPH2415"", ""CPH2417"", ""CPH2419"", ""CPH2455"", ""CPH2459"", ""CPH2461"", ""CPH2471"", ""CPH2473"", ""CPH2477"", ""CPH8893"", ""CPH2321"", ""CPH2341"", ""CPH2373"", ""CPH2083"", ""CPH2071"", ""CPH2077"", ""CPH2185"", ""CPH2179"", ""CPH2269"", ""CPH2421"", ""CPH2349"", ""CPH2271"", ""CPH1923"", ""CPH1925"", ""CPH1837"", ""CPH2015"", ""CPH2073"", ""CPH2081"", ""CPH2029"", ""CPH2031"", ""CPH2137"", ""CPH1605"", ""CPH1803"", ""CPH1853"", ""CPH1805"", ""CPH1809"", ""CPH1851"", ""CPH1931"", ""CPH1959"", ""CPH1933"", ""CPH1935"", ""CPH1943"", ""CPH2061"", ""CPH2069"", ""CPH2127"", ""CPH2131"", ""CPH2139"", ""CPH2135"", ""CPH2239"", ""CPH2195"", ""CPH2273"", ""CPH2325"", ""CPH2309"", ""CPH1701"", ""CPH2387"", ""CPH1909"", ""CPH1920"", ""CPH1912"", ""CPH1901"", ""CPH1903"", ""CPH1905"", ""CPH1717"", ""CPH1801"", ""CPH2067"", ""CPH2099"", ""CPH2161"", ""CPH2219"", ""CPH2197"", ""CPH2263"", ""CPH2375"", ""CPH2339"", ""CPH1715"", ""CPH2385"", ""CPH1729"", ""CPH1827"", ""CPH1938"", ""CPH1937"", ""CPH1939"", ""CPH1941"", ""CPH2001"", ""CPH2021"", ""CPH2059"", ""CPH2121"", ""CPH2123"", ""CPH2203"", ""CPH2333"", ""CPH2365"", ""CPH1913"", ""CPH1911"", ""CPH1915"", ""CPH1969"", ""CPH2209"", ""CPH1987"", ""CPH2095"", ""CPH2119"", ""CPH2285"", ""CPH2213"", ""CPH2223"", ""CPH2363"", ""CPH1609"", ""CPH1613"", ""CPH1723"", ""CPH1727"", ""CPH1725"", ""CPH1819"", ""CPH1821"", ""CPH1825"", ""CPH1881"", ""CPH1823"", ""CPH1871"", ""CPH1875"", ""CPH2023"", ""CPH2005"", ""CPH2025"", ""CPH2207"", ""CPH2173"", ""CPH2307"", ""CPH2305"", ""CPH2337"", ""CPH1955"", ""CPH1707"", ""CPH1719"", ""CPH1721"", ""CPH1835"", ""CPH1831"", ""CPH1833"", ""CPH1879"", ""CPH1893"", ""CPH1877"", ""CPH1607"", ""CPH1611"", ""CPH1917"", ""CPH1919"", ""CPH1907"", ""CPH1989"", ""CPH1945"", ""CPH1951"", ""CPH2043"", ""CPH2035"", ""CPH2037"", ""CPH2036"", ""CPH2009"", ""CPH2013"", ""CPH2113"", ""CPH2091"", ""CPH2125"", ""CPH2109"", ""CPH2089"", ""CPH2065"", ""CPH2159"", ""CPH2145"", ""CPH2205"", ""CPH2201"", ""CPH2199"", ""CPH2217"", ""CPH1921"", ""CPH2211"", ""CPH2235"", ""CPH2251"", ""CPH2249"", ""CPH2247"", ""CPH2237"", ""CPH2371"", ""CPH2293"", ""CPH2353"", ""CPH2343"", ""CPH2359"", ""CPH2357"", ""CPH2457"", ""CPH1983"", ""CPH1979""]
        self.vivo = ['vivo 1002T', 'Vivo 1605', 'vivo 1730', 'vivo 1809', 'vivo_1820', 'vivo 1835', 'vivo 1914', 'vivo 2010', 'vivo 2019', 'vivo 2019', 'vivo 2019', 'vivo 2023', 'vivo 2027', 'vivo 3969', 'VIVO 5', 'Vivo 6', 'Vivo 7 Pro', 'Vivo 8', 'Vivo 93K Prime', 'vivo A5 ', 'vivo a54', 'Vivo A54', 'vivo a57', 'Vivo A87', 'VIVO A94', 'VIVO AIR', 'VIVO C8818', 'vivo E1', 'vivo E3', 'vivo E3', 'vivo E5', 'Vivo EGO', 'V1962BA', 'vivo h5', 'V1824A', 'V1824A', 'V1824BA', 'V2217A', 'V2217A', 'V2218A', 'V2218A', 'V2218A', 'V2243A', 'V1955A', 'I1927', 'I1928', 'V2024A', 'V2025A', 'V2025A', 'V2049A', 'V2049A', 'I2009', 'I2012', 'I2012', 'V2136A', 'V2136A', 'V2141A', 'V2171A', 'I2017', 'V2172A', 'V2172A', 'I2022', 'I2019', 'I2019', 'I2201', 'V1914A', 'V1914A', 'V1981A', 'V2055A', 'V2118A', 'V2157A', 'V2157A', 'V2154A', 'V2196A', 'V2196A', 'V2199A', 'V2231A', 'V2238A', 'V1936AL', 'V1936A', 'V1922A', 'V1922A', 'V1922A ', 'V1916A', 'V2023A', 'V2023A', 'VIVO V2023A', 'V2065A', 'V2061A', 'V2061A', 'V2143A', 'V2106A', 'V2165A', 'V2165A', 'V2180GA', 'V1986A', 'V2012A', 'V2012A', 'V2073A', 'V2073A', 'I2011', 'V2148A', 'I2018', 'V1919A', 'V2131A', 'V2220A', 'I2202', 'I2206', 'I2203', 'I2202', 'I2127', 'I2202', 'I2208', 'I2208', 'I2126', 'I2126', 'I2126', 'V2164KA', 'V2164KA', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'VIVO IV', 'Vivo J5', 'vivo 1805', 'vivo 1805', 'vivo NEX', 'V1923A', 'vivo 1912', 'V1923A', 'vivo 1912', 'vivo 1913', 'V1924A', 'V1924A', 'vivo 1913', 'V1950A', 'V1950A', 'vivo NEX A', 'vivo NEX A', 'vivo 1813', 'V1821A', 'V1821A', 'vivo NEX S', 'vivo NEX S', 'Vivo ONE', 'Vivo ONE', 'PA2170', 'vivo PD1628F_EX', 'vivo PD1709', 'vivo PD1709F_EX', 'vivo PD1709F_EX', 'vivo PD1728', 'vivo PD1728', 'vivo PD1832F_EX', 'vivo PD2046F_EX', 'vivo PD2050F_EX', 'vivo PD2055F_EX', 'vivo PD2059F_EX', 'Vivo S', 'V1831A', 'V1831A', 'VIVO S1', 'Vivo S1 Prime', 'V1832A', 'V1832T', 'V2121A', 'V2121A', 'V2130A', 'V2130A', 'Vivo S11', 'Vivo S11 ', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S11t', 'vivo S12', 'V2162A', 'Vivo S13', 'V2203A', 'V2207A', 'V2190A', 'V2244A', 'vivo S1Pro', 'Vivo S20 ', 'Vivo S21 ', 'Vivo S31', 'Vivo S4', 'Vivo S40', 'Vivo S41 /MMB439M', 'V1932A', 'vivo S6', 'V1962A', 'vivo S6T', 'V2020CA', 'V2020A', 'Vivo S76', 'V2031EA', 'vivo S7i(t)', 'vivo S7i(t)', 'vivo S7i(t)', 'V2080A', 'vivo S7t', 'vivo_S7t', 'vivo S7t', 'S7t 5G', 'vivo S7w', 'vivo S8', 'vivo S9', 'vivo S9', 'vivo S9', 'V2072A', 'V2048A', 'vivo S9t', 'V2168', 'V2168', 'V2153', 'V2153', 'V2150', 'V2151', 'V2151', 'V2151', 'V2143', 'vivo TD1602_EX', 'vivo U1', 'vivo 1916', 'vivo 1916', 'vivo 1921', 'V1941A', 'V1941A', 'V1928A', 'vivo V1', 'vivo V1', 'vivo V10', 'Vivo V10', 'VIVO V11', 'Vivo V11', 'vivo 1804', 'vivo 1804', 'vivo 1806', 'vivo 1806', 'vivo v11pro', 'vivo 1819', 'vivo 1818', 'vivo 1818', 'vivo 1920', 'vivo 1919', 'vivo 1907', 'vivo 1907', 'vivo 1907_19', 'vivo 1910', 'vivo 1909', 'vivo 1910', 'vivo 1933', 'vivo 1933', 'vivo V1907', 'vivo v19neo', 'vivo V1Max', 'vivo V1Max', 'vivo V2', 'V2040', 'vivo 2018', 'vivo 2018', 'V2022', 'Vivo V20A', 'Vivo V20G', 'V2066', 'V2108', 'V2050', 'V2050', 'V2050', 'V2061', 'V2055', 'Vivo V21S', 'V2130', 'V2132A', 'V2116', 'V2115', 'V2116', 'V2116', 'V2126', 'V2126', 'V2228', 'V2228', 'V2158', 'V2158', 'V2202', 'V2202', 'V2201', 'V2246', 'V2230', 'V2230', 'V2237', 'vivo V3', 'vivo V3', 'vivo V3Max A', 'vivo V3Max L', 'vivo v30', 'vivo v31', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3L', 'vivo V3M A', 'vivo V3M A', 'vivo V3MA', 'vivo_V3Max', 'vivo v45', 'vivo 1601', 'vivo V5', 'vivo 1609', 'vivo 1611', 'Vivo V51', 'Vivo V54', 'vivo 1612', 'vivo 1713', 'vivo V5S A', 'vivo 1718', 'vivo 1716', 'vivo Y79A', 'vivo Y79A', 'V2166BA', 'Vivo V8', 'vivo 1723', 'vivo V9 mini', 'vivo 1851', 'VIVO V9Pro', 'vivo 1851', 'vivo 1727', 'Vivo X', 'V2178A', 'V2229A', 'V2170A', 'V2170A', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay3S', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5A', 'vivo Xplay5S', 'vivo Xplay5S', 'vivo Xplay6', 'vivo Xplay6L', 'vivo Xplay6', 'vivo Xplay6', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X710L', 'vivo X1', 'vivo X1', 'vivo X1', 'vivo X1', 'Vivo X11', 'vivo X1S', 'vivo X1S', 'vivo X1S', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1St', 'vivo X1W', 'vivo X1w', 'VIVO X2', 'VIVO X2', 'VIVO_X2', 'vivo X20', 'vivo X20A', 'vivo X20Plus A', 'vivo 1720', 'vivo X20Plus UD', 'vivo X20Plus UD', 'vivo X21', 'vivo X21A', 'vivo X21UD A', 'vivo X21i', 'vivo X21i A', 'vivo X21i', 'vivo X21i A ', 'V1814A', 'V1814T', 'V1814T', 'V1814A', 'V1809A', 'V1809A', 'V1816A', 'V1809T', 'V1816T', 'V1829A', 'V1838A', 'V1838T', 'V1829T', 'V1836A', 'V1836A', 'V1836T', 'vivo X27Pro', 'V1938CT', 'V1938T', 'V1938T', 'vivo X3F', 'vivo X3F', 'vivo X3F', 'vivo X3L', 'vivo X3L', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3S W', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3t', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'vivo X3V', 'Vivo X40', 'vivo X5L', 'vivo X5', 'vivo X5L', 'vivo X5Pro D', 'vivo X5Pro L', 'vivo X5Pro V', 'vivo X5Pro D', 'vivo X5Pro D', 'V2001A', 'V2001A', 'vivo 2004', 'vivo 2005', 'vivo 2005', 'V1937', 'vivo 1937', 'V1937', 'V1937', 'vivo 2006', 'vivo 2006', 'V2005A', 'V2011A', 'X50 Pro+', 'V1930', 'V1930', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X510t', 'vivo X520L', 'vivo X5F', 'vivo X5M', 'vivo X5M', 'vivo X5M', 'vivo X5Max ', 'vivo X5Max L', 'vivo X5Max L', 'vivo X5Max S', 'vivo X5Max V', 'vivo X5S L', 'vivo X5S L', 'vivo X5V', 'vivo X5V', 'vivo X5V', 'vivo X6D', 'vivo X6A', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus L', 'vivo X6Plus D', 'vivo X6Plus A', 'vivo X6Plus D', 'vivo X6Plus L', 'V2046A', 'V2059A', 'V2046A', 'V2045', 'V2046', 'V2047A', 'V2056A', 'V2085A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6S A', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus D', 'vivo X6SPlus A', 'vivo X7L', 'vivo X7Plus', 'vivo X7Plus', 'V2133A', 'V2104', 'V2104', 'V2105', 'V2134A', 'V2105', 'V2145A', 'V2114', 'V2145A', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'vivo X710F', 'V2144', 'V2183A', 'V2144', 'V2208', 'V2185A', 'V2145', 'V2185A', 'Vivo X83', 'vivo X9', 'vivo X9L', 'vivo X9', 'vivo X9', 'vivo X9Plus', 'vivo X9Plus L', 'V2241A', 'V2242A', 'V2242A', 'V2227A', 'vivo X9i', 'vivo X9i', 'vivo X9i', 'vivo X9s', 'vivo X9s L', 'vivo X9s Plus', 'vivo X9s Plus', 'vivo X9s Plus L', 'vivo X9s Plus', 'VIVO XL', 'vivo Xplay', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'vivo Xshot', 'V2203', 'V2221', 'Vivo y1', 'Vivo Y1', 'V2168A', 'V2168A', 'vivo 1906', 'V2028', 'vivo Y11t', 'vivo Y11t', 'vivo Y11t', 'vivo 1904', 'V2163A', 'V2102', 'V2102', 'vivo 2007', 'vivo 2007', 'Vivo Y12I Pro', 'V2026', 'V2042', 'V2033', 'V2039', 'V2069', 'V2026_21', 'vivo Y13L', 'vivo Y13', 'vivo Y13L', 'vivo Y13L', 'vivo Y13i', 'vivo_Y13i', 'vivo Y13iL', 'vivo Y13iL', 'vivo Y13T', 'vivo Y13T', 'vivo 1901', 'vivo Y15T', 'vivo Y15T', 'V2134', 'V2147', 'V2147', 'V2212', 'V2120', 'V2204', 'V2214', 'V2204', 'vivo 1902', 'vivo 1902_19', 'VIVO 1902', 'vivo Y17T', 'vivo Y17T', 'vivo_Y17T', 'vivo Y17T', 'vivo Y17W', 'vivo Y17W', 'vivo Y17W', 'vivo Y18L', 'vivo Y18L', 'vivo Y18L', 'vivo 1915', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'vivo Y19t', 'Vivo Y1i', 'vivo 2015', 'vivo 2015', 'V2029', 'V2027', 'V2043_21', 'V2101', 'V2070', 'V2054', 'V2052', 'V2037', 'V2032', 'V2038', 'V2038', 'V2129', 'V2129', 'V2111', 'V2149', 'V2140', 'V2140', 'V2152', 'V2152', 'V2110', 'V2110', 'V2131', 'V2135', 'V2207', 'vivo Y22iL', 'vivo Y22iL', 'V2206', 'V2206', 'vivo Y23L', 'vivo Y23L', 'vivo y23l', 'vivo Y23L', 'vivo Y23L', 'vivo Y23L', 'vivo 1613', 'vivo Y27', 'vivo Y27L', 'vivo Y27', 'vivo Y28', 'vivo Y28', 'vivo Y28L', 'vivo Y28L', 'vivo Y29L', 'vivo Y29L', 'vivo Y29L', 'V1901A', 'V1901A', 'V1901A', 'V1901T', 'V1930A', 'vivo 1938', 'V2034A', 'V2036A', 'V2099A', 'V2099A', 'V2160', 'V2160', 'V2160', 'V2066BA', 'V2066A', 'Y30g', 'Vivo Y30S', 'vivo Y31L', 'V2068', 'V2054A', 'V2068A', 'V2068', 'V2158A', 'Vivo Y32', 'V2180A', 'V2057', 'V2109', 'V2166A', 'V2166A', 'V2146', 'V2205', 'V2205', 'vivo Y37A', 'vivo Y37', 'V2044', 'vivo Y3t', 'vivo Y3t', 'vivo Y3t', 'vivo y41', 'vivo Y5 ', 'Vivo Y5', 'vivo 1935', 'VIVO Y50(2021)', 'V2023EA', 'Y50t', 'V2035', 'vivo Y51L', 'vivo Y51A', 'V2030', 'vivo 1707', 'V2031_21', 'vivo Y51t L', 'vivo Y51t L', 'vivo Y51t L', 'V2053', 'V2057A', 'vivo Y53', 'vivo 1606A', 'vivo Y53n', 'V2058', 'V2123A', 'V2069A', 'V2045A', 'V2045A', 'vivo Y55A', 'V2127', 'V2127', 'vivo 1603', 'vivo Y55n', 'vivo 1610', 'V2164A', 'V2164A', 'V1934A', 'V2006', 'vivo Y613', 'vivo Y613', 'vivo Y613F', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y622', 'vivo Y623', 'vivo Y623', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y627', 'vivo Y628', 'vivo Y628', 'vivo 1719', 'vivo Y66', 'vivo Y66L', 'vivo Y66i A', 'vivo Y67', 'vivo Y67A', 'vivo Y67L', 'vivo Y685', 'vivo 1714', 'vivo Y69A', 'V2002A', 'V2002A', 'vivo Y71A', 'vivo 1724', 'vivo Y71A', 'vivo 1801', 'V2041', 'V2060', 'V2102A', 'V1731CA', 'vivo Y73', 'Vivo Y73 /MMB239M', 'V2059', 'V2031A', 'V2164PA', 'V2117', 'vivo Y75A', 'V2142', 'V2142', 'vivo Y75s', 'vivo Y75s', 'vivo Y75S', 'vivo Y75s', 'V2124', 'V2156A', 'V2219A', 'V2219A', 'V2169', 'V2169', 'V1913A', 'vivo 1808i', 'vivo 1803', 'vivo 1803', 'vivo 1812', 'vivo Y81S', 'V1732A', 'V1732T', 'vivo Y83A', 'vivo 1802', 'vivo Y83A', 'vivo Y83A', 'vivo 1726', 'Vivo Y83I', 'vivo Y85A', 'vivo Y85', 'Vivo Y85i', 'Vivo Y86', 'V1730EA', 'vivo v1730ea', 'vivo 1908', 'vivo 1823', 'vivo 1908_19', 'vivo 1817', 'vivo 1811', 'vivo Y913', 'vivo Y913', 'vivo Y91C', 'vivo 1820', 'vivo 1816', 'vivo Y923', 'vivo Y923', 'vivo Y927', 'vivo Y927', 'vivo Y928', 'vivo Y928', 'vivo Y928', 'vivo 1814', 'V1818A', 'V1818A', 'vivo 1814', 'vivo Y937', 'vivo Y937', 'vivo Y937', 'V1818CT', 'V1818CA', 'vivo 1807', 'vivo Y95', 'V1813A', 'V1813T', 'V1813A', 'vivo Y97', 'V1945A', 'V1801A0', 'vivo Z1', 'vivo 1918', 'vivo 1951', 'vivo 1951', 'VIVO Z1Pro', 'vivo 1918', 'vivo 1918 Flow', 'Vivo Z10', 'vivo Z1i', 'V1730DA', 'V1730DT', 'vivo Z1i', 'vivo_1951', 'vivo 1917', 'V1813BA', 'V1813BT', 'V1813BT', 'Vivo Z34', 'vivo Z3x', 'V1730GA', 'vivo Z3x', 'vivo Z3x', 'V1921A', 'V1911A', 'V1911A', 'V1911A', 'V1990A', 'V1990A', 'V1963A', 'V1963A']
        self.infinix = [""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B"", ""Infinix X652B"", ""Infinix X680"", ""Infinix X690"", ""Infinix X625B"", ""Infinix X655"", ""Infinix X680B""]
        self.opp = random.choice([""OP4F97"", ""OP4BA5L1"", ""OP664D1"", ""OP5F11L1"", ""OP2A92"", ""OP8F17"", ""OP8F31"", ""OP4C9E1"", ""OP5B31"", ""OP4BA6L1"", ""OP2B87"", ""OP6F21"", ""OP6C8E1"", ""OP8F11"", ""OPPOA16"", ""OPPOA15"", ""OPPOA11"", ""OPPOA73"", ""OPPOA37"", ""OPPOA53"", ""OPPOA33"", ""OPPOA93"", ""OPPOA35"", ""OPPOA83"", ""OPPOA57"", ""OPPOA71"", ""OPPOA39"", ""OPPOA3"", ""OPPOA51"", ""OPPOA27"", ""OPPOA79""])
        self.trek = random.choice([""mt6769"", ""mt6768"", ""mt6767"", ""mt6765"", ""mt6763"", ""mt6757"", ""mt6755"", ""mt6753"", ""mt6739"", ""mt6737"", ""mt6735"", ""mt6595"", ""mt6582"", ""mt6572"", ""mt6571"", ""mt6570"", ""mt8563"", ""mt8167"", ""mt8163"", ""mt8135"", ""mt8127"", ""mt8125"", ""mt7623"", ""mt6797"", ""mt6592"", ""mt6590"", ""mt6580"", ""mt6573"", ""mt6575"", ""mt6260"", ""mt6236""])
        self.igversi = (""100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,100.0.0.17.129,79.0.0.21.101,78.0.0.11.104,77.0.0.20.113,76.0.0.15.395,75.0.0.23.99,74.0.0.21.99,73.0.0.22.185,72.0.0.21.98,71.0.0.18.102,70.0.0.22.98,69.0.0.30.95,68.0.0.11.99,67.0.0.25.100,66.0.0.11.101,65.0.0.12.86,64.0.0.14.96,63.0.0.17.94,62.0.0.19.93,61.0.0.19.86,60.1.0.17.79,59.0.0.23.76,58.0.0.12.73,57.0.0.9.80,56.0.0.13.78,55.0.0.12.79,54.0.0.14.82,53.0.0.13.84,52.0.0.8.83,51.0.0.20.85,50.1.0.43.119,271.1.0.21.84,131.0.0.23.11,130.0.0.31.12,128.0.0.26.12,126.0.0.25.12,125.0.0.20.12,124.0.0.17.47,123.0.0.21.11,122.0.0.29.23,120.0.0.29.11,119.0.0.33.14,118.0.0.28.12,117.0.0.28.12,115.0.0.26.11,114.0.0.38.12,113.0.0.39.12,112.0.0.29.12,111.1.0.25.15,110.0.0.16.11,109.0.0.18.12,108.0.0.23.11,107.0.0.27.12,106.0.0.24.11,105.0.0.18.11,104.0.0.21.11,103.1.0.15.11,102.0.0.20.11,101.0.0.15.12,100.0.0.17.12,99.0.0.32.182,98.0.0.15.119,97.0.0.32.119"").split(',')
        self.dix = random.choice(self.igversi)
        self.kode = random.choice(['104766893','104766900','102221278','104766888','105842053','93117670','94080607','96794592','102221279','100986894','ru_RU','94080606','103516660','98288242','103516666','103516653','uk_UA','96794590','100986893','102221277','95414344','99640920','99640911','96794591','ru_UA','99640905','100986890','107092313','99640900','93117667','100521966','90841939','98288239','89867440','105842051','de_DE','96794584','105842050','en_US','pt_PT','109556223','107092318','en_GB','108357722','112021130','107092322','119104798','108357720','119104802','112021131','100986892','113249569','107104231','fr_FR','pt_BR','109556226','116756948','113249553','113249561','110937441','118342010','120662545','117539703','119875222','110937448','121451799','115994877','108357718','120662547','107608058','122206624','95414346','107092308','112021128','90841948','119875229','117539698','120662550','en_NZ','123103748','91882538','121451810','91882537','118342006','113948109','122338251','110937453','es_US','118342005','121451793','109556219','119875225','en_CA','109556220','117539695','115211358','91882539','119104795','89867442','94080603','164094539','175574628','185203690','188791648','188791674','187682694','188791643','177770724','192992577','180322810','195435560','196643820','196643821','188791637','192992576','196643799','196643801','196643803','195435546','194383411','197825254','197825260','197825079','171727793','197825112','197825012','197825234','179155086','192992563','197825268','166149669','192992565','198036424','197825223','183982969','199325909','199325886','199325890','199325911','197825118','127049003','197825169','197825216','197825127','200395960','179155096','199325907','200396014','188791669','197825133','170693926','200396005','171727780','201577064','201576758','201577192','201775949','201576944','201775970','143631574','126223520','201775951','167338518','144612598','170693940','201775813','200395971','201775744','201775946','202766609','145652094','202766591','202766602','203083142','179155088','202766608','199325884','180322802','202766603','195435547','165030894','201576967','201775904','194383424','197347903','202766610','185203693','201576898','204019468','187682682','204019456','201775901','204019471','204019454','204019458','202766601','204019452','173238721','204019466','148324036','202766581','158441904','201576903','205280538','205280529','201576813','173238729','141753096','205280531','163022072','201576887','163022088','141753091','148324051','205280528','154400383','205280537','201576818','157405371','205858383','201576811','165031093','187682684','145652090','206670917','185203686','192992561','183982986','206670927','150338061','183982962','127049016','175574603','155374054','205858247','135374896','206670920','169474958','206670926','160497905','161478672','192992578','206670929','131223243','206670916','142841919','187682681','171727795','151414277','206670922','160497915','207505137','165030898','208061741','208061688','208180365','208061674','197825052','147375133','208061744','196643798','208061725','122338247','157536430','208061728','209143963','208727155','209143726','205280539','209143903','209143970','181496409','208061739','209143957','210180522','210180512','209143881','209143712','180322805','210180521','195435561','210370119','210180523','210180493','175574596','210180510','210180480','210180513','210180517','176649504','177770663','210180479','211114117','210908379','206670921','211114134','183982943','211399345','211399342','211399332','201775962','211574187','211574249','210180519','167338559','185203649','124583960','211399337','211399335','197825163','166149717','211399336','212063371','211399329','209143954','210180482','168361634','212214017','209143867','211399341','211399340','212214027','195435510','122338243','139237670','152367502','212676872','212676898','212676875','212676895','212676901','209823384','212676869','196643822','212676878','213367980','213368005','212676886','213558743','209143913','212214039','158441917','174081672','213558750','201775966','188791681','185203705','143631575','161478664','214245350','161478663','212676881','213558770','214245346','138226752','214245221','214245182','214245206','214245218','214245354','214245295','214245199','214245304','214245280','214446313','214245187','214245288','214139002','202766605','214245319','214646783','158441914','215246048','195435544','208061677','215464400','128676146','215464389','215464385','215464390','215464398','182747397','215464393','216233197','201775791','216817344','215464395','216817286','185203642','164094529','216817305','215464401','162439029','215464382','216817280','216817331','214330969','216817299','216817357','217948981','217948980','217948956','217948959','217948968','216817296','217948952','217948982','216817269','219308759','219308726','182747387','219308721','219308754','219308763','176649435','183982982','219909486','127049038','219308730','221134012','221134032','221134009','221134037','194383426','221134029','221134005','221134018','145652093','225283632','165031108','225283625','224652582','139906580','225283628','225283624','226142579','225283634','225283631','226493211','225283623','185203672','156514151','218793478','225283621','227299063','225283627','227299064','227299021','227299027','227544546','227299041','227299060','227299012','228970707','228970705','227299005','228970687','228970683','228970694','228970710','228970689','160497904','195435540','129611419','229783842','230291708','228970681','148324047','230877709','231192211','230877674','230877705','230877678','211399328','209143896','230877713','194383428','230877689','221134002','231457747','208061721','230877671','230877668','232868027','232088496','185203706','232868005','232867964','232868001','232868015','232868031','232867959','232868009','164094526','232867941','234041364','182747399','232868024','232867949','234847239','234847238','234847234','162439040','234847229','234847230','181496427','234847240','232867993','195435558','232867967','232867997','234847227','235871830','221133998','236572344','236572377','153386780','236572337','236572349','236572372','234847226','236572383','237507050','238093993','238093948','238093954','238093999','238093982','239490565','239490555','238093946','238093966','239490563','239490550','239974660','240726416','239490568','240726484','240726452','239490551','239490548','240726426','240726476','240726491','240726471','241043882','241114613','236572331','241267273','240726407','241456456','241267278','241267269','241114619','241456445','241456451','242168941','242168928','242168931','242168939','242168925','240726436','242375239','144722090','242168935','242290370','157405369','242168933','242290355','242703240','242807362','242168923','242168943','242991209','243646252','243646269','242991200','243711120','243646267','243711093','243975802','243646263','243646248','243646255','244167578','128676156','194383413','243975835','244390417','244390338','245196084','245196061','240726392','245196055','243646273','245196082','245196063','245196070','245666450','245466705','245870319','245870301','245870347','245196087','246889064','246889072','246889073','246889074','246889065','247146500','246889063','245870262','247370962','247146481','246889068','246889062','247541884','247541831','247370955','247370942','247720736','247720751','248310216','248310220','248310208','247720744','248399342','248310210','247720747','248310206','248717751','248310212','248310221','248823392','248583561','248310205','248899028','248955251','248955247','249178904','248955244','249507608','249507582','249507588','249507585','248955240','249507607','249507592','249810008','249966137','249507610','249966081','249966100','249507599','249966140','249810004','123790722','250188776','249628096','250188788','250742103','250742113','250742102','250877984','250742105','250742111','251048681','250742107','250742115','251048695','251304696','251304682','251524431','251530710','251304689','251524420','251524409','251524390','250742101','251048673','252055918','252055945','251920416','252055944','252055925','252239038','252055936','252055915','252055948','252390568','252390583','252580134','252740497','252740485','252740490','253120615','253325372','253325384','253325385','253447816','253146263','253120607','253325374','253120598','253325371','253447808','253447809','253325378','253447814','253447807','253447811','253447817','253447813','181496411','253447806','255191971','255013798','255777478','255777471','255777474','255777472','255959637','255777477','255959614','255959635','256099199','256099204','150338064','256099153','256099205','256099156','255983744','256107300','255777470','126223536','256203326','256099190','256099151','256324061','256324047','256203339','256966628','256966589','256966626','256966590','124584015','257456576','256966593','257456590','256966629','256966587','256966592','257456586','257456539','259829115','259829104','259829113','260037038','259829105','259829109','260037030','260149625','259829103','260149621','260465044','259829116','260724710','179155058','261079769','261079761','261079768','261079762','261079771','261276939','157405370','135374885','261079765','261393056','261393062','261079760','181496406','182747360','261504698','261690888','261504706','169474957','262218766','262290715','262290774','262372432','262372425','262372431','262886993','262886995','262372426','262886987','261079764','262886986','262886988','262886990','262372433','262886996','263652962','264009049','264009019','264009030','264009021','264009023','264009052','264009024','261763534','174081651','169474965','232867942','264009013','255959606','264009028','267397344','267397322','267925737','267397343','267925708','267397327','267397321','267925714','267258517','267925705','268773287','267925733','268773233','267925702','268773286','159526770','268773239','268773272','269790795','269285030','269790805','269790803','269790792','268773227','269849047','270426177','270426174','271182277','269790789','271182270','268773290','271182266','271182276','269790798','271182279','271182265','271182267','269790807','271823819','272382110','272382111','272382106','272693584','272382095','272382093','272382098','272382100','272382103','273728833','273371577','273728832','273728798','273907093','273907111','273907108','238093987','273907112','273907103','274774869','274774891','274774908','273907087','274774904','274774875','274774914','275292626','276027938','276028040','276027963','276028037','276028020','276028017','274774862','276028013','249507580','276028029','273907098','277249238','277249248','277249249','276028033','277249250','277249226','275292623','277249214','277249242','277249237','277249240','278625447','278002558','278625420','278625431','278625423','117539687','278625416','278625444','277249213','278625451','279469964','279996068','279996060','279996067','279996058','280194220','279996065','279996063','279996061','279996059','280894196','273728787','271182262','281579032','281579023','276514494','281579021','281579027','281579033','268773274','283072590','281579025','283072571','282619332','283489774','283072587','283072567','281579031','283072580','283072574','284459213','284459224','179155089','256966583','284459214','283072585','284459218','284459223','284459225','285338607','275113919','284459221','284459212','284459215','285855793','285855800','285855803','285855791','285855802','285855804','285855795','286809973','287420974','287421023','287420968','287420979','287421017','287421005','287421019','287421012','277249241','288682406','287421026','288682405','288682397','288682407','261079772','288682398','288682401','288205409','289692198','287420997','289692186'])
        self.dpi_pxl = random.choice(['240dpi; 1760x792', '240dpi; 1920x864', '320dpi; 2400x1080', '400dpi; 3200x1440', '480dpi; 1080x1920', '320dpi; 900x1600', '320dpi; 720x1280', '240dpi; 540x960', '280dpi; 1920x1080', '240dpi; 160x900', '240dpi; 1280x720', '160dpi; 960x540','160dpi; 623x1280'])
        self.dpi = random.choice(['320dpi','640dpi','213dpi','480dpi','420dpi','240dpi','280dpi','160dpi','560dpi','540dpi','272dpi','360dpi','720dpi','270dpi','450dpi','600dpi','279dpi','210dpi','180dpi','510dpi','300dpi','454dpi','314dpi','288dpi','401dpi','153dpi','267dpi','345dpi','493dpi','340dpi','604dpi','465dpi','680dpi','256dpi','290dpi','432dpi','273dpi','120dpi','200dpi','367dpi','419dpi','306dpi','303dpi','411dpi','195dpi','518dpi','230dpi','384dpi','315dpi','293dpi','274dpi','235dpi'])
        self.pxl = random.choice(['720x1280','1440x2560','1440x2768','1280x720','1280x800','1080x1920','540x960','1080x2076','1080x2094','1080x2220','480x800','768x1024','1440x2792','1200x1920','720x1384','1920x1080','720x1369','800x1280','720x1440','1080x2058','600x1024','720x1396','2792x1440','1920x1200','2560x1440','1536x2048','720x1382','1080x2113','1080x2198','1080x2131','720x1423','1080x2069','720x1481','1080x2047','1080x2110','1080x2181','1080x2209','1080x2180','1080x2020','1080x2095','1440x2723','1080x2175','720x1365','1440x2699','1080x2218','2699x1440','1440x2907','1080x2257','720x1370','1080x2042','720x1372','1080x2200','1080x2186','720x1361','1080x2024','1080x2006','720x1402','1440x2831','720x1454','1080x2064','1440x2933','720x1411','720x1450','1440x2730','1080x2046','2094x1080','540x888','1440x2759','1080x2274','1080x2178','1440x2706','720x1356','720x1466','1440x2900','2560x1600','1080x2038','1600x2452','1080x2129','720x1422','720x1381','1080x2183','1080x2285','800x1216','1080x2216','1080x2168','1080x2119','1080x2128','1080x2273','2274x1080','1080x2162','1080x2164','2076x1080','1024x768','1080x2173','1440x2845','1080x2134','720x1379','1440x2838','1080x2139','2131x1080','1440x2744','1080x2192','720x1406','1440x2960','1080x2029','2042x1080','1080x2212','1406x720','1080x2288','2047x1080','1080x2051','720x1398','1280x736','1382x720','720x1353','1080x2050','1080x2028','1080x2256','2711x1440','2175x1080','1080x2281','2560x1492','1440x2923','1200x1845','1080x2189','1080x2002','1440x2711','2110x1080','960x540','1080x2033','2200x1080','720x1452','720x1480','1440x2735','720x1472','1080x2277','1080x2169','2874x1440','1600x2560','1080x2151','2218x1080','1080x2182','720x1468','1440x2898','1080x2011','1080x2201','720x1380','1080x2287','2069x1080','1200x1836','2046x1080','720x1439','2058x1080','2182x1080','720x1399','1080x2282','1440x2721','1080x2324','720x1432','1080x2165','1080x2150','1080x2156','1080x1872','1440x3048','1532x2560','720x1355','720x1390','720x1476','720x1410','1080x2032','720x1437','1440x2682','1440x2921','1080x2270','1080x2160','720x1446','1200x1848','1440x2874','1080x2309','1080x2174','1440x2867','1080x2060','1080x2196','1080x2401','1536x1922','1080x2280','1080x2123','720x1435','1440x2927','1080x2276','720x1448','720x1469','720x1344','1080x2187','540x937','1440x3028','1080x2184','1440x2718','1080x2326','840x1834','1440x2935','1440x2880','1440x2892','2048x2048','1080x2195','1080x2322','720x1419','987x1450','1080x2092','1440x3047','720x1358','1080x2136','720x1357','1080x2093','720x1477','1080x2312','1080x2361','720x1341','720x1507','1080x2172','720x1337','1080x2177','1080x2125','1440x2891','1600x2434','720x1394','1080x2159','720x1387','1080x2166','1080x2154','1080x2147','1440x2747','1080x2105','1440x2911','720x1473','1080x2055','1080x2265','720x1436','1080x2190','1600x2526','720x1373','720x1415','1080x2249','1080x2254','720x1455','1440x3040','1080x2149','720x1385','1440x3036','1080x2111','1440x2904','720x1442','720x1377','1080x2307','1080x2327','1080x2141','1080x2025','720x1430','720x1375','1080x2283','1440x2779','1080x2321','1080x2268','1440x2758','1752x2698','1080x2267','1200x1856','1440x2756','720x1464','1080x2234','1080x2171','1080x2155','720x1463','1080x2122','720x1467','1080x2264','720x1349','1440x2999','720x1458','1080x2015','720x1431','1242x2208','1080x2185','1080x2148','1080x2163','1440x2780','720x1445','1080x2146','1200x1916','720x1502','1200x1928','720x1506','720x1424','720x1465','720x1420','1080x2176','720x1521','1080x2315','1080x2400','720x1471','1080x2157','1600x2458','1080x2067','1080x2191','1080x2271','720x1407','800x1208','1080x2087','1080x2199','578x1028','720x1485','540x879','1080x2179','720x1555','810x1598','720x1378','1200x1897','720x1395','720x1459','900x1600','1080x2275','1440x2733'])
        self.samsung = [""SM-A205F"",""SM-J120H"",""SM-J120F"",""SM-J120M"",""SM-J111M"",""SM-J111F"",""SM-J110H"",""SM-J110G"",""SM-J110F"",""SM-J110M"",""SM-J105H"",""SM-J105Y"",""SM-J105B"",""SM-J106H"",""SM-J106F"",""SM-J106B"",""SM-J106M"",""SM-J200F"",""SM-J200M"",""SM-J200G"",""SM-J200H"",""SM-J200F"",""SM-J200GU"",""SM-J260M"",""SM-J260F"",""SM-J260MU"",""SM-J260F"",""SM-J260G"",""SM-J200BT"",""SM-G532G"",""SM-G532M"",""SM-G532MT""]
        self.cgsm = [""dream2qltesq"", ""beyond2q"", ""broadway"", ""dreamqltevzw"", ""b2q"", ""a7y18lte"", ""a50qlteue"", ""a42xqlte"", ""a7y18lte"", ""a40lte"", ""a6plte"", ""a52xqlteue"", ""a5y20qlteue"", ""a3xelte"", ""a42xqlteue"", ""a3xelte"", ""a41lte"", ""a72xlte"", ""dreamlte"", ""hero2qltevzw"", ""beyond0lte"", ""beyond2"", ""starlte"", ""a5y17lte"", ""a7xelte"", ""a71xqlteue"", ""dream2qlteue"", ""dreamqltespr"", ""a5y17lte"", ""beyond1qlteue"",""herolte"",""zerolte"",""hero2te""]
        self.realme = [""RMX3516"", ""RMX3371"", ""RMX3461"", ""RMX3286"", ""RMX3561"", ""RMX3388"", ""RMX3311"", ""RMX3142"", ""RMX2071"", ""RMX1805"", ""RMX1809"", ""RMX1801"", ""RMX1807"", ""RMX1803"", ""RMX1825"", ""RMX1821"", ""RMX1822"", ""RMX1833"", ""RMX1851"", ""RMX1853"", ""RMX1827"", ""RMX1911"", ""RMX1919"", ""RMX1927"", ""RMX1971"", ""RMX1973"", ""RMX2030"", ""RMX2032"", ""RMX1925"", ""RMX1929"", ""RMX2001"", ""RMX2061"", ""RMX2063"", ""RMX2040"", ""RMX2042"", ""RMX2002"", ""RMX2151"", ""RMX2163"", ""RMX2155"", ""RMX2170"", ""RMX2103"", ""RMX3085"", ""RMX3241"", ""RMX3081"", ""RMX3151"", ""RMX3381"", ""RMX3521"", ""RMX3474"", ""RMX3471"", ""RMX3472"", ""RMX3392"", ""RMX3393"", ""RMX3491"", ""RMX1811"", ""RMX2185"", ""RMX3231"", ""RMX2189"", ""RMX2180"", ""RMX2195"", ""RMX2101"", ""RMX1941"", ""RMX1945"", ""RMX3063"", ""RMX3061"", ""RMX3201"", ""RMX3203"", ""RMX3261"", ""RMX3263"", ""RMX3193"", ""RMX3191"", ""RMX3195"", ""RMX3197"", ""RMX3265"", ""RMX3268"", ""RMX3269"",""RMX2027"", ""RMX2020"", ""RMX2021"", ""RMX3581"", ""RMX3501"", ""RMX3503"", ""RMX3511"", ""RMX3310"", ""RMX3312"", ""RMX3551"", ""RMX3301"", ""RMX3300"", ""RMX2202"", ""RMX3363"", ""RMX3360"", ""RMX3366"", ""RMX3361"", ""RMX3031"", ""RMX3370"", ""RMX3357"", ""RMX3560"", ""RMX3562"", ""RMX3350"", ""RMX2193"", ""RMX2161"", ""RMX2050"", ""RMX2156"", ""RMX3242"", ""RMX3171"", ""RMX3430"", ""RMX3235"", ""RMX3506"", ""RMX2117"", ""RMX2173"", ""RMX3161"", ""RMX2205"", ""RMX3462"", ""RMX3478"", ""RMX3372"", ""RMX3574"", ""RMX1831"", ""RMX3121"", ""RMX3122"", ""RMX3125"", ""RMX3043"", ""RMX3042"", ""RMX3041"", ""RMX3092"", ""RMX3093"", ""RMX3571"", ""RMX3475"", ""RMX2200"", ""RMX2201"", ""RMX2111"", ""RMX2112"", ""RMX1901"", ""RMX1903"", ""RMX1992"", ""RMX1993"", ""RMX1991"", ""RMX1931"", ""RMX2142"", ""RMX2081"", ""RMX2085"", ""RMX2083"", ""RMX2086"", ""RMX2144"", ""RMX2051"", ""RMX2025"", ""RMX2075"", ""RMX2076"", ""RMX2072"", ""RMX2052"", ""RMX2176"", ""RMX2121"", ""RMX3115"", ""RMX1921""]
        self.xiaomi = [""2201116SI"", ""M2012K11AI"", ""22011119TI"", ""21091116UI"", ""M2102K1AC"", ""M2012K11I"", ""22041219I"", ""22041216I"", ""2203121C"", ""2106118C"", ""2201123G"", ""2203129G"", ""2201122G"", ""2201122C"", ""2206122SC"", ""22081212C"", ""2112123AG"", ""2112123AC"", ""2109119BC"", ""M2002J9G"", ""M2007J1SC"", ""M2007J17I"", ""M2102J2SC"", ""M2007J3SY"", ""M2007J17G"", ""M2007J3SG"", ""M2011K2G"", ""M2101K9AG "", ""M2101K9R"", ""2109119DG"", ""M2101K9G"", ""2109119DI"", ""M2012K11G"", ""M2102K1G"", ""21081111RG"", ""2107113SG"", ""21051182G"", ""M2105K81AC"", ""M2105K81C"", ""21061119DG"", ""21121119SG"", ""22011119UY"", ""21061119AG"", ""21061119AL"", ""22041219NY"", ""22041219G"", ""21061119BI"", ""220233L2G"", ""220233L2I"", ""220333QNY"", ""220333QAG"", ""M2004J7AC"", ""M2004J7BC"", ""M2004J19C"", ""M2006C3MII"", ""M2010J19SI"", ""M2006C3LG"", ""M2006C3LVG"", ""M2006C3MG"", ""M2006C3MT"", ""M2006C3MNG"", ""M2006C3LII"", ""M2010J19SL"", ""M2010J19SG"", ""M2010J19SY"", ""M2012K11AC"", ""M2012K10C"", ""M2012K11C"", ""22021211RC""]
        self.asus = ['ME171', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'Slider SL101', 'ME371MG', 'K01N', 'K012', 'K00E', 'K019', 'K00Z', 'K00Z', 'K016', 'K016', 'K00G', 'K00G', 'K50IJ', 'ME172V', 'ME172V', 'ME172V', 'ME172V', 'K00F', 'K01E', 'K00R', 'K017', 'K013', 'K007', 'K01A', 'ASUS MeMO Pad 7', 'K015', 'K011', 'K00L', 'ME302C', 'ME302C', 'ME302C', 'AOSP on Duma', 'ME302KL', 'ME302KL', 'K00U', 'ME173X', 'ME173X', 'ME173X', 'ME173X', 'ASUS K00S', 'ME301T', 'ME301T', 'ME301T', 'PadFone', 'PadFone', 'PadFone 2', 'PadFone 2', 'PadFone T008', 'PadFone T008', 'PadFone T004', 'ASUS_T00E', 'PadFone T00C', 'Padfone t00c', 'PadFone T00C', 'ASUS_T00N', 'ASUS PadFone X', 'ASUS_T00T', 'ASUS_Z01QD', 'ZS600KL', 'ASUS_I001DE', 'ZS660KL', 'ASUS_I001DA', 'ASUS_I001DC', 'ZS660KL', 'ASUS_I003DD', 'ZS661KS', 'ASUS_I003DD', 'ZS661KS', 'ASUS_I005DA', 'ASUS_I005DC', 'ASUS_AI2201_C', 'ASUS_AI2201_D', 'ASUS_AI2201_F', 'ASUS_AI2203_D', 'ASUS_AI2203_C', 'ASUS_AI2203_B', 'ASUS TAB A8', 'Tinker Board', 'Tinker Board 2', 'Tinker Board S', 'TX201LA', 'TX201LA', 'K010', 'K018', 'K018', 'TF300T', 'ASUS Pad TF300T', 'K01B', 'K00C', 'K00C', 'ASUS XPad 10LTE', 'ASUS Z101', 'ASUS Z101 Prime', 'ASUS_Z008D', 'ASUS_Z00AD', 'Z00D', 'ASUS_Z00LD', 'ASUS_Z00ED', 'ASUS_Z00RD', 'ASUS ZenFone 2E', 'ASUS_Z012D', 'ZE520KL', 'ASUS_Z017D', 'ASUS_Z012DA', 'ASUS_Z017DA', 'ASUS_Z012S', 'ASUS_Z012DE', 'ASUS_Z01FD', 'ASUS_Z016S', 'ZS550KL', 'ASUS_Z01BD', 'ASUS_Z01BS', 'ZC551KL', 'ASUS_Z01BDB', 'ASUS_X00DDB', 'ASUS_X008D', 'ASUS_X00DDA', 'ZC553KL', 'ASUS_X008DB', 'ASUS_A001', 'ASUS_Z01HDA', 'ZE553KL', 'ASUS_X00LD', 'ASUS_Z01KDA', 'ASUS_Z01KS', 'ASUS_X00LDB', 'ASUS_T00I', 'ASUS_X00HD', 'ASUS_X00ID', 'ZC554KL', 'ASUS_X015D', 'ASUS_X015D', 'ASUS_Z01GS', 'ASUS_Z01GD', 'ASUS_X00LDA', 'ZD553KL', 'ASUS_Z01MD', 'ASUS_Z01MDA', 'ZD552KL', 'ASUS_X00QD', 'ASUS_X00QD', 'ASUS_T00J', 'ASUS_X00QSA', 'ZE620KL', 'ASUS_T00F', 'ASUS_T00F', 'ASUS_T00K', 'ASUS_X017DA', 'ASUS_T00P', 'ASUS_Z01RD', 'ASUS_Z01RD', 'Zenfone 5Z', 'ZS620KL', 'ASUS_T00G', 'ASUS_I01WD', 'ASUS_T00G', 'ASUS_Z002', 'ZS630KL', 'ASUS_I002D', 'ZS670KS', 'ZS671KS', 'ASUS_I006D', 'ASUS_I004D', 'ASUS_AI2202', 'ASUS_AI2202_B', 'ASUS_A002', 'ASUS_A002A', 'ASUS_Z007', 'ASUS_X00ADA', 'ASUS_X00BD', 'ASUS_X007D', 'ZB500KL', 'ASUS_Z00SD', 'ZB551KL', 'ASUS_L001', 'ZB500KG', 'ASUS_Z00VD', 'ASUS_X013DA', 'ASUS_X013D', 'ASUS_X014D', 'ASUS_X014D', 'ASUS_X013DB', 'G550KL', 'G550KL', 'G553KL', 'ASUS_Z00YD', 'ASUS_A007', 'ASUS_X00RD', 'G552KL', 'ASUS_Z010DD', 'ASUS_Z010DB', 'ASUS_Z010D', 'ASUS_Z010DA', 'ASUS_X00PD', 'ZB555KL', 'ASUS_X01AD', 'ZB633KL', 'ASUS_X018D', 'ASUS_X018DC', 'ASUS_X00TD', 'ASUS_X00TDB', 'ASUS_X00TDE', 'ZB602KL', 'ASUS_X01BDA', 'ASUS_A001D', 'ASUS_X002', 'ASUS_X003', 'ASUS_X003', 'ASUS_X550', 'ASUS_X00GD', 'ASUS_X005', 'ASUS_Z00UDB', 'ASUS_Z00UD', 'ASUS_A006', 'ASUS_A009', 'ASUS_Z00XS', 'P01T_1', 'P021', 'P00L', 'P00C', 'P028', 'P027', 'ASUS_P00I', 'P001', 'P008', 'ASUS_P00J', 'ASUS ZenWatch', 'ASUS ZenWatch 2']
        self.dvc = random.choice([""30/11"",""31/12"",""29/10""])
        return(random.choice([
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Asus; {str(random.choice(self.asus))}; {str(random.choice(self.asus))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oneplus; {str(random.choice(self.onpls))}; {str(random.choice(self.onpls))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Nexus; {str(random.choice(self.nexus))}; {str(random.choice(self.nexus))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Vivo; {str(random.choice(self.vivo))}; {str(random.choice(self.vivo))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Oppo; {str(random.choice(self.oppo))}; {str(random.choice(self.oppo))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Realme; {str(random.choice(self.realme))}; {str(random.choice(self.realme))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Infinix {str(random.choice(self.infinix))}; {str(random.choice(self.infinix))} qcom; in_ID; {self.kode})',
            f'Barcelona {self.dix} Android ({self.dvc}; {self.dpi}; {self.pxl}; Samsung; {str(random.choice(self.samsung))}; {str(random.choice(self.samsung))} qcom; in_ID; {self.kode})'
           ])
       )
        
    def useragent_ajax(self):
        self.chrome = str(random.randint(114,124))
        return(random.choice([
            f'Mozilla/5.0 (Windows NT 10.0; {str(random.randint(1,9))}; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(random.randint(1,9))}.{str(random.randint(1,9))}.{str(random.randint(1,9))}.{str(random.randint(1,9))} Safari/537.36',
            f'Mozilla/5.0 (Windows NT 10.0; {str(random.randint(1,9))}; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(random.randint(1,9))}.{str(random.randint(1,9))}.{str(random.randint(1,9))}.{str(random.randint(1,9))} Safari/537.36',
            ])
        )
        
        


"
7N4LtMJ3,yawcontrol,Slait12,Lua,Friday 5th of April 2024 04:41:25 AM CDT,"local rad, sin, cos, log, abs, min, pow = math.rad, math.sin, math.cos, math.log, math.abs, math.min, math.pow


local reader = peripheral.find(""blockReader"")

local detector = peripheral.find(""playerDetector"") 

local yawrotate = peripheral.wrap(""left"") 

local reverseyaw = peripheral.wrap(""redstoneIntegrator_3"") -- reverse gearshift

local reverseyaw_side = ""front""

local function calculate_yaw(Dx, Dz, direction)
    local yaw
    if Dx ~= 0 then
        yaw = math.atan(Dz/Dx) * 180/math.pi
    else
        yaw = 90
    end

    if Dx >= 0 then
        yaw = yaw + 180
    end

    local dirs = {90, 180, 270, 0}
    return (yaw + dirs[direction]) % 360
end


while true do
    local players = detector.getOnlinePlayers()
    local whitelist = {}
    local player = players[1]
    local pos = detector.getPlayerPos(player)

    if pos.x == nil then
        print(""No players detected"")
    else
        local cannonCoord = {100, 59, 100}
        local targetCoord = {pos.x, pos.y, pos.z}

        local readerdata = reader.getBlockData()

        local yaw = calculate_yaw(cannonCoord[1]-targetCoord[1], cannonCoord[3]-targetCoord[3], 3)


        if (yaw - abs(readerdata.CannonYaw)) > 1 then
            reverseyaw.setOutput(reverseyaw_side, true)
            yawrotate.rotate(0.1)
        elseif (yaw - abs(readerdata.CannonYaw)) < -1 then
            reverseyaw.setOutput(reverseyaw_side, false)
            yawrotate.rotate(0.1)
        end
    end
end"
huPvC2Q4,pitchcontrol,Slait12,Lua,Friday 5th of April 2024 04:40:40 AM CDT,"local rad, sin, cos, log, abs, min, pow = math.rad, math.sin, math.cos, math.log, math.abs, math.min, math.pow


local reader = peripheral.find(""blockReader"")

local detector = peripheral.find(""playerDetector"") 

local pitchrotate = peripheral.wrap(""right"")
local reversepitch = peripheral.wrap(""redstoneIntegrator_4"")
local reversepitch_side = ""front""

local function calculate_pitch(x1,y1,z1, x2,y2,z2)

    local dx = x2 - x1
    local dy = y2 - y1
    local dz = z2 - z1

    local horizontalDistance = math.sqrt(dx*dx + dz*dz)
    local elevationAngle = math.atan2(dy, horizontalDistance)
    return elevationAngle
end


while true do
    local players = detector.getOnlinePlayers()
    local whitelist = {}
    local player = players[1]
    local pos = detector.getPlayerPos(player)

    if pos.x == nil then
        print(""No players detected"")
    else
        local readerdata = reader.getBlockData()
        local pitch = math.deg(calculate_pitch(100, 59, 100, pos.x, pos.y, pos.z))

        if (pitch - readerdata.CannonPitch) > 1 then
            reversepitch.setOutput(reversepitch_side, false)
            pitchrotate.rotate(0.1)
        elseif (pitch - readerdata.CannonPitch) < -1 then
            reversepitch.setOutput(reversepitch_side, true)
            pitchrotate.rotate(0.1)
        end
    end
end"
et6aejwa,start,Slait12,Lua,Friday 5th of April 2024 04:37:46 AM CDT,"shell.openTab(""autoturret.lua &"")
sleep(1)
shell.openTab(""pitchcontrol.lua &"")
shell.openTab(""yawcontrol.lua &"")"
PrqVN8zK,Turret-1,Slait12,Lua,Friday 5th of April 2024 04:36:43 AM CDT,"-- yaw calculate from: https://gist.github.com/SuperSpaceEye/c33443213605d1bf35f81737c9058dc2#file-ballistic_calculator-lua
-- discord: slait12

local rad, sin, cos, log, abs, min, pow = math.rad, math.sin, math.cos, math.log, math.abs, math.min, math.pow

-- peripherals 
local detector = peripheral.find(""playerDetector"") -- player detector bruh

local pitchrotate = peripheral.wrap(""right"") -- sequenced gearshifts
local yawrotate = peripheral.wrap(""left"") 

local reader = peripheral.find(""blockReader"") -- block reader

local assemble = peripheral.wrap(""redstoneIntegrator_0"")
local shoot = peripheral.wrap(""redstoneIntegrator_2"")

local reverseyaw = peripheral.wrap(""redstoneIntegrator_3"") -- reverse gearshift
local reversepitch = peripheral.wrap(""redstoneIntegrator_4"")

-- ^^^ this all for installing turret. Just check redstone integrator side with f3, front is marked with blue dot also.

local assemble_side = ""front""
local shoot_side = ""front""

local timer = 0


assemble.setOutput(""front"", false) -- disassemble
shoot.setOutput(""front"", false) -- stop shooting 

local function calculate_yaw(Dx, Dz, direction)
    local yaw
    if Dx ~= 0 then
        yaw = math.atan(Dz/Dx) * 180/math.pi
    else
        yaw = 90
    end

    if Dx >= 0 then
        yaw = yaw + 180
    end

    local dirs = {90, 180, 270, 0}
    return (yaw + dirs[direction]) % 360
end

local function calculate_pitch(x1,y1,z1, x2,y2,z2)

    local dx = x2 - x1
    local dy = y2 - y1
    local dz = z2 - z1

    local horizontalDistance = math.sqrt(dx*dx + dz*dz)
    local elevationAngle = math.atan2(dy, horizontalDistance)
    return elevationAngle
end

sleep(1)
assemble.setOutput(""front"", true) -- assembling




while true do
    local players = detector.getOnlinePlayers()
    local whitelist = {}
    local player = players[1]
    local pos = detector.getPlayerPos(player)

    if pos.x == nil then
        print(""No players detected"")
    else
        local cannonCoord = {100, 59, 100}
        local targetCoord = {pos.x, pos.y, pos.z}
        
        local pitch = math.deg(calculate_pitch(100, 59, 100, pos.x, pos.y, pos.z))
        local yaw = calculate_yaw(cannonCoord[1]-targetCoord[1], cannonCoord[3]-targetCoord[3], 3)
        

        readerdata = reader.getBlockData()
        

        term.clear()
        print(""Player pos:"", pos.x, pos.y, pos.z)
        print("""")
        print(""Target yaw angle:"", yaw)
        print(""Target pitch angle:"", pitch)
        print("""")
        print(""Cannon yaw:"", readerdata.CannonYaw)
        print(""Cannon pitch:"", readerdata.CannonPitch)

        if (yaw - abs(readerdata.CannonYaw)) < 10 then
            shoot.setOutput(shoot_side, true)
        else
            shoot.setOutput(shoot_side, false)
        end
    end
end"
z24ZsHLH,GY-21P Code,microrobotics,Arduino,Friday 5th of April 2024 04:14:32 AM CDT,"#include <SPI.h>
#include <Ethernet.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BMP280.h>
#include ""Adafruit_Si7021.h""


Adafruit_BMP280 bmp; // I2C
Adafruit_Si7021 sensor = Adafruit_Si7021();

// Enter a MAC address and IP address for your controller below.
// The IP address will be dependent on your local network:
byte mac[] = {
  0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };

IPAddress ip(192,168,1, 177);

// Initialize the Ethernet server library
EthernetServer server(80);

void setup()
{
  // Open serial communications
  Serial.begin(9600);
  Ethernet.begin(mac, ip);
  server.begin();
  Serial.print(""server is at "");
  Serial.println(Ethernet.localIP());
  if (!bmp.begin()) 
  { 
  Serial.println(""Could not find a valid BMP280 sensor, check wiring!"");
  while (1);
  }

  if (!sensor.begin()) 
  {
  Serial.println(""Did not find Si7021 sensor!"");
  while (true);
  }
}


void loop()
{
  // listen for incoming clients
  EthernetClient client = server.available();
  if (client) 
  {
    Serial.println(""new client"");
    boolean currentLineIsBlank = true;
    while (client.connected()) 
    {
      if (client.available()) 
      {
        char c = client.read();
        Serial.write(c);
        if (c == '\n' && currentLineIsBlank) 
        {
          // send a standard http response header
          client.println(""HTTP/1.1 200 OK"");
          client.println(""Content-Type: text/html"");
          client.println(""Connnection: close"");
          client.println();
          client.println(""<!DOCTYPE HTML>"");
          client.println(""<html>"");
          client.println(""<meta http-equiv=\""refresh\"" content=\""5\"">"");
          client.println(""<br />"");     
          //bmp280 part
          client.println(""<h3>BMP280 readings</h3>"");
          client.print(""Pressure (Pa): "");
          client.println((float)bmp.readPressure(), 1);  
          client.println(""<br />"");          
          client.print(""Temperature (C): "");
          client.println((float)bmp.readTemperature(), 1);  
          client.println(""<br />"");
          client.print(""Altitude (m): "");
          client.println((float)bmp.readAltitude(1024), 1);  // this should be adjusted to your local forcase
          client.println(""<br />"");
          //SI7021 part
          client.println(""<h3>SI7021 readings</h3>"");
          client.print(""Humidity (%): "");
          client.println((float)sensor.readHumidity(), 1);  
          client.println(""<br />"");          
          client.print(""Temperature (C): "");
          client.println((float)sensor.readTemperature(), 1);  
          client.println(""<br />"");   

          client.println(""</html>"");
          break;
        }
        if (c == '\n') 
        {
          currentLineIsBlank = true;
        } 
        else if (c != '\r') 
        {
          currentLineIsBlank = false;
        }
      }
    }
    // give the web browser time to receive the data
    delay(1);
    // close the connection:
    client.stop();
    Serial.println(""client disonnected"");
  }
}"
QukduuPZ,Mad,Unknown_No_1,PHP,Friday 5th of April 2024 04:10:13 AM CDT,MadAlwaysFirstConqrorHack
SRmyMrD4,Character Sheet HTML,TheDemonicArtist,HTML,Friday 5th of April 2024 03:09:48 AM CDT,"<div class=""container-fluid"" style=""font-size: 0.85em;max-width: 850px; margin: auto; position: relative;"">
<!----------------- 
Image Header 
to make the corners rounded add ""border-radius: 25px 25px 0px 0px;"" 
--------------------->
   <div style=""height: 75px;width: 100%; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-bottom: 1em;""></div>
 
<!----------------- (INTRODUCTION START) --------------------->
<!----------------- 
Decoration #1 (right)
For a pagedoll you can replace the div with 
<image src=""https://file.garden/ZdmRSugxzVCR-8Le/Sheezy%20Graphics/shrimpjam2"" style=""float:right;width: 35%;margin-top: 0em;margin-bottom: 1em;margin-left: 1em;"">
--------------------->
   <div style=""float:right;width: 25%;min-height: 300px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 0em;margin-bottom: 1em;margin-left: 1em;""></div>

<!----------------- Basics --------------------->
 <p style=""margin-bottom: 0em;"">
<div style=""display: flex; align-items: center;justify-content: center;"">
      <img src=""https://file.garden/ZdmRSugxzVCR-8Le/Sheezy%20Graphics/star101.gif"" style=""margin-top: 0em;margin-bottom: 0em;padding-right: 0.375rem;""><strong> Name | Age | Pronouns | Species | Occupation</strong><img src=""https://file.garden/ZdmRSugxzVCR-8Le/Sheezy%20Graphics/star101.gif"" style=""margin-top: 0em;margin-bottom: 0em;padding-left: 0.375rem;""><br />
   </div>
<!----------------- Flags --------------------->
   <div style="" display: flex; align-items: center;justify-content: center;"">
      <img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/flag%20pastel.png"" data-toggle=""tooltip"" title=""text"" style=""margin-top: 0em;margin-bottom: 0em;"">
      <img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/flag%20pastel.png"" data-toggle=""tooltip"" title=""text"" style=""margin-top: 0em;margin-bottom: 0em;"">
      <img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/flag%20pastel.png"" data-toggle=""tooltip"" title=""text"" style=""margin-top: 0em;margin-bottom: 0em;"">
<!----------------- Copy and past above this for more! --------------------->
   </div>
   <div style=""text-align: center;"">
      hover over the flags for more info!
   </div>
<!----------------- Introduction --------------------->
   <p> 
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
   </p>
   <p> 
      Lobortis feugiat vivamus at augue. Vitae et leo duis ut. Sociis natoque penatibus et magnis dis. In cursus turpis massa tincidunt. Duis ultricies lacus sed turpis tincidunt id aliquet. Placerat in egestas erat imperdiet sed euismod. Enim eu turpis egestas pretium aenean pharetra. Facilisis magna etiam tempor orci eu lobortis elementum. Massa enim nec dui nunc mattis enim. A cras semper auctor neque vitae tempus quam. Tellus in metus vulputate eu scelerisque felis imperdiet proin fermentum. Dui accumsan sit amet nulla facilisi morbi tempus. Felis donec et odio pellentesque. Nisl nisi scelerisque eu ultrices vitae auctor. Odio morbi quis commodo odio aenean sed adipiscing diam. Semper eget duis at tellus at. Leo a diam sollicitudin tempor id eu.
   </p>
<!----------------- Likes & Dislikes --------------------->
   <div style=""display: flex; align-items: center; justify-content: center;margin-bottom: 1em;"">
      🩷 Content, content, content, content<br>
      ❌ Content, content, content, content<br>
   </div>
 <!----------------- Stamps --------------------->
   <div class=""grid tablet:grid-cols-6 grid-cols-3"" style=""justify-items:center;gap:1rem;"">
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
   </div>
   <hr style=""clear: both;"">
<!----------------- (INTRODUCTION END) --------------------->

<!----------------- (SECTION 1 START) --------------------->
<!----------------- Decoration (left) --------------------->
   <div  style=""float:left;width: 25%;min-height: 300px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 0em;margin-bottom: 1em;margin-right: 1em;""></div>
<!----------------- Fun Facts --------------------->
   <p>
      <strong>Trivia: </strong> <br> 
      - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br> 
      - Sagittis id consectetur purus ut faucibus pulvinar elementum.<br>
      - Dolor morbi non arcu risus quis varius quam. Lectus arcu bibendum at varius vel pharetra vel turpis nunc.<br>
      - At in tellus integer feugiat scelerisque varius morbi.<br>
      - Lobortis scelerisque fermentum dui faucibus in. Id eu nisl nunc mi ipsum faucibus vitae.<br>
      - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br> 
      - Sagittis id consectetur purus ut faucibus pulvinar elementum.<br>
      - Dolor morbi non arcu risus quis varius quam. Lectus arcu bibendum at varius vel pharetra vel turpis nunc.<br>
      - At in tellus integer feugiat scelerisque varius morbi.<br>
      - Lobortis scelerisque fermentum dui faucibus in. Id eu nisl nunc mi ipsum faucibus vitae.<br>
      <!----------------- Copy and past above this for more! --------------------->
   </p>
   <hr style=""clear: both;"">
<!----------------- (SECTION 1 END) --------------------->

<!----------------- (SECTION 2 START) --------------------->
<!----------------- Decoration (right) --------------------->
   <div style=""float:right;width: 25%;min-height: 300px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 0em;margin-bottom: 1em;margin-left: 1em;""></div>
<!-----------------History--------------------->
   <p> <strong>History: </strong> <br> 
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
   </p>
   <p> 
      Lobortis feugiat vivamus at augue. Vitae et leo duis ut. Sociis natoque penatibus et magnis dis. In cursus turpis massa tincidunt. Duis ultricies lacus sed turpis tincidunt id aliquet. Placerat in egestas erat imperdiet sed euismod. Enim eu turpis egestas pretium aenean pharetra. Facilisis magna etiam tempor orci eu lobortis elementum. Massa enim nec dui nunc mattis enim. A cras semper auctor neque vitae tempus quam. Tellus in metus vulputate eu scelerisque felis imperdiet proin fermentum. Dui accumsan sit amet nulla facilisi morbi tempus. Felis donec et odio pellentesque. Nisl nisi scelerisque eu ultrices vitae auctor. Odio morbi quis commodo odio aenean sed adipiscing diam. Semper eget duis at tellus at. Leo a diam sollicitudin tempor id eu.
   </p>
   <hr style=""clear: both;"">
<!----------------- (SECTION 2 END) --------------------->

<!----------------- (SECTION 3 START) --------------------->
   <strong>Reference Sheet: </strong>
<!----------------- Reference Sheet --------------------->
   <div style=""width: 100%;min-height: 300px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-bottom: 1em;""></div>
<!-----------------Design Notes--------------------->
   <p>
      <strong>Design Notes: </strong> <br> 
      - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br> 
      - Sagittis id consectetur purus ut faucibus pulvinar elementum.<br>
      - Dolor morbi non arcu risus quis varius quam. Lectus arcu bibendum at varius vel pharetra vel turpis nunc.<br>
      - At in tellus integer feugiat scelerisque varius morbi.<br>
      - Lobortis scelerisque fermentum dui faucibus in. Id eu nisl nunc mi ipsum faucibus vitae.<br>
<!----------------- Copy and past above this for more! --------------------->
   </p>
<!----------------- Design Detail Images/Aesthetics --------------------->
   <div class=""grid tablet:grid-cols-3 grid-cols-3"" style=""justify-items:center;gap:1rem;"">
      <div style=""width: 100%;min-height: 150px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-bottom: 1em;""></div>
      <div style=""width: 100%;min-height: 150px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-bottom: 1em;""></div>
      <div style=""width: 100%;min-height: 150px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-bottom: 1em;""></div>
   </div>
   <hr style=""clear: both;"">
<!----------------- (SECTION 3 END) --------------------->

<!----------------- (SECTION 4 START) --------------------->
<!----------------- Decoration (left)--------------------->
   <div class=""visible tablet:invisible"" style=""float:left;width: 25%;min-height: 300px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 0em;margin-bottom: 1em;margin-right: 1em;""></div>
<!-----------------Boundaries--------------------->
   <p>
      <strong>Boundaries: </strong> <br> 
      - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br> 
      - Sagittis id consectetur purus ut faucibus pulvinar elementum.<br>
      - Dolor morbi non arcu risus quis varius quam. Lectus arcu bibendum at varius vel pharetra vel turpis nunc.<br>
      - At in tellus integer feugiat scelerisque varius morbi.<br>
      - Lobortis scelerisque fermentum dui faucibus in. Id eu nisl nunc mi ipsum faucibus vitae.<br>
<!----------------- Copy and past above this for more! --------------------->
   </p>
   <div style=""display: flex; align-items: center; justify-content: center;"">
      Giftart: 🩷 | Roleplays: ❌ |  Relationships: ❓ | NSFW: ❓
   </div>
   <hr style=""clear: both;"">
<!----------------- (SECTION 4 END) --------------------->

<!----------------- (FOOTER START) --------------------->
<!----------------- Stamps --------------------->
   <div class=""grid tablet:grid-cols-6 grid-cols-3"" style=""justify-items:center;gap:1rem;margin-bottom: 1em;"">
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
   </div>
<!----------------- Credits --------------------->
   <div style="" display: flex; align-items: center; justify-content: center;margin-bottom: 0em;"">
      <a href=""https://sheezy.art/thedemonicartist/persona/shrimpsources""> Code</a> | <a href=""https://toyhou.se/25498009.milkwhisks-pixel-pride-flags"">Pride Flags</a> | <a href=""https://sheezy.art/harrie/gallery/responsive-stamp-box-snippets"">Stamp Snippet</a> | <a href=""https://pixelsafari.neocities.org/favicon/"">Text decoration</a> | <a href=""https://sheezy.art/thedemonicartist"">Image #1</a> | <a href=""LINK"">image #2</a>| <a href=""LINK"">image #3</a>
   </div>
<!----------------- (FOOTER END) --------------------->
<!----------------- 
Footer Image 
to make the corners rounded add 
""border-radius: 0px 0px 25px 25px;"" 
--------------------->
   <div style=""height: 75px;width: 100%; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 1em;""></div>
</div>
</div>"
9swGgziu,About Me HTML,TheDemonicArtist,HTML,Friday 5th of April 2024 03:06:18 AM CDT,"<div class=""container-fluid"" style=""font-size: 0.85em;max-width: 850px; margin: auto; position: relative;"">
<!----------------- 
Image Header 
to make the corners rounded add ""border-radius: 25px 25px 0px 0px;"" 
--------------------->
   <div style=""height: 75px;width: 100%; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-bottom: 1em;""></div>
 
<!----------------- (INTRODUCTION START) --------------------->
<!----------------- 
Decoration #1 (right)
For a pagedoll you can replace the div with 
<image src=""https://file.garden/ZdmRSugxzVCR-8Le/Sheezy%20Graphics/shrimpjam2"" style=""float:right;width: 35%;margin-top: 0em;margin-bottom: 1em;margin-left: 1em;"">
--------------------->
   <div style=""float:right;width: 25%;min-height: 300px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 0em;margin-bottom: 1em;margin-left: 1em;""></div>

<!----------------- Basics --------------------->
 <p style=""margin-bottom: 0em;"">
<div style=""display: flex; align-items: center;justify-content: center;"">
      <img src=""https://file.garden/ZdmRSugxzVCR-8Le/Sheezy%20Graphics/star101.gif"" style=""margin-top: 0em;margin-bottom: 0em;padding-right: 0.375rem;""><strong> Name | Age | Pronouns | Timezone | Misc</strong><img src=""https://file.garden/ZdmRSugxzVCR-8Le/Sheezy%20Graphics/star101.gif"" style=""margin-top: 0em;margin-bottom: 0em;padding-left: 0.375rem;""><br />
   </div>
<!----------------- Flags --------------------->
   <div style="" display: flex; align-items: center;justify-content: center;"">
      <img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/flag%20pastel.png"" data-toggle=""tooltip"" title=""text"" style=""margin-top: 0em;margin-bottom: 0em;"">
      <img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/flag%20pastel.png"" data-toggle=""tooltip"" title=""text"" style=""margin-top: 0em;margin-bottom: 0em;"">
      <img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/flag%20pastel.png"" data-toggle=""tooltip"" title=""text"" style=""margin-top: 0em;margin-bottom: 0em;"">
<!----------------- Copy and past above this for more! --------------------->
   </div>
   <div style=""text-align: center;"">
      hover over the flags for more info!
   </div>
<!----------------- Introduction --------------------->
   <p> 
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
   </p>
   <p> 
      Lobortis feugiat vivamus at augue. Vitae et leo duis ut. Sociis natoque penatibus et magnis dis. In cursus turpis massa tincidunt. Duis ultricies lacus sed turpis tincidunt id aliquet. Placerat in egestas erat imperdiet sed euismod. Enim eu turpis egestas pretium aenean pharetra. Facilisis magna etiam tempor orci eu lobortis elementum. Massa enim nec dui nunc mattis enim. A cras semper auctor neque vitae tempus quam. Tellus in metus vulputate eu scelerisque felis imperdiet proin fermentum. Dui accumsan sit amet nulla facilisi morbi tempus. Felis donec et odio pellentesque. Nisl nisi scelerisque eu ultrices vitae auctor. Odio morbi quis commodo odio aenean sed adipiscing diam. Semper eget duis at tellus at. Leo a diam sollicitudin tempor id eu.
   </p>
<!----------------- Likes & Dislikes --------------------->
   <div style=""display: flex; align-items: center; justify-content: center;margin-bottom: 1em;"">
      🩷 Content, content, content, content<br>
      ❌ Content, content, content, content<br>
   </div>
 <!----------------- Stamps --------------------->
   <div class=""grid tablet:grid-cols-6 grid-cols-3"" style=""justify-items:center;gap:1rem;"">
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
      <a href=""#URL""><img src=""https://file.garden/ZdmRSugxzVCR-8Le/F2U%20stuff/Stamps/Pastel%20Space%20Stamp.png"" class=""m-0""></a>
   </div>
   <hr style=""clear: both;"">
<!----------------- (INTRODUCTION END) --------------------->

<!----------------- (SECTION 1 START) --------------------->
<!----------------- Decoration (left) --------------------->
   <div  style=""float:left;width: 25%;min-height: 300px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 0em;margin-bottom: 1em;margin-right: 1em;""></div>
<!----------------- Fun Facts --------------------->
   <p>
      <strong>Trivia: </strong> <br> 
      - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br> 
      - Sagittis id consectetur purus ut faucibus pulvinar elementum.<br>
      - Dolor morbi non arcu risus quis varius quam. Lectus arcu bibendum at varius vel pharetra vel turpis nunc.<br>
      - At in tellus integer feugiat scelerisque varius morbi.<br>
      - Lobortis scelerisque fermentum dui faucibus in. Id eu nisl nunc mi ipsum faucibus vitae.<br>
      - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br> 
      - Sagittis id consectetur purus ut faucibus pulvinar elementum.<br>
      - Dolor morbi non arcu risus quis varius quam. Lectus arcu bibendum at varius vel pharetra vel turpis nunc.<br>
      - At in tellus integer feugiat scelerisque varius morbi.<br>
      - Lobortis scelerisque fermentum dui faucibus in. Id eu nisl nunc mi ipsum faucibus vitae.<br>
      <!----------------- Copy and past above this for more! --------------------->
   </p>
   <hr style=""clear: both;"">
<!----------------- (SECTION 1 END) --------------------->

<!----------------- (SECTION 4 START) --------------------->
<!----------------- Decoration #1 (right) --------------------->
   <div style=""float:right;width: 25%;min-height: 300px; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 0em;margin-bottom: 1em;margin-left: 1em;""></div>
<!-----------------Boundaries--------------------->
   <p>
      <strong>Boundaries: </strong> <br> 
      - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br> 
      - Sagittis id consectetur purus ut faucibus pulvinar elementum.<br>
      - Dolor morbi non arcu risus quis varius quam. Lectus arcu bibendum at varius vel pharetra vel turpis nunc.<br>
      - At in tellus integer feugiat scelerisque varius morbi.<br>
      - Lobortis scelerisque fermentum dui faucibus in. Id eu nisl nunc mi ipsum faucibus vitae.<br>
<!----------------- Copy and past above this for more! --------------------->
   </p>

   <div style=""display: flex; align-items: center; justify-content: center;"">
      Giftart: 🩷 | Roleplays: ❌ |  Relationships: ❓ | NSFW: ❓
   </div>
   <hr style=""clear: both;"">
<!----------------- (SECTION 4 END) --------------------->

<!----------------- (FOOTER START) --------------------->
<!----------------- Credits --------------------->
   <div style="" display: flex; align-items: center; justify-content: center;margin-bottom: 0em;"">
      <a href=""https://sheezy.art/thedemonicartist/persona/shrimpsources""> Code</a> | <a href=""https://toyhou.se/25498009.milkwhisks-pixel-pride-flags"">Pride Flags</a> | <a href=""https://sheezy.art/harrie/gallery/responsive-stamp-box-snippets"">Stamp Snippet</a> | <a href=""https://pixelsafari.neocities.org/favicon/"">Favicon</a> | <a href=""https://sheezy.art/thedemonicartist"">Image #1</a> | <a href=""LINK"">image #2</a>| <a href=""LINK"">image #3</a>
   </div>
<!----------------- (FOOTER END) --------------------->
<!----------------- 
Footer Image 
to make the corners rounded add 
""border-radius: 0px 0px 25px 25px;"" 
--------------------->
   <div style=""height: 75px;width: 100%; background:url(https://file.garden/ZdmRSugxzVCR-8Le/Art%20Links/Pastel_Space.png);background-position:center;background-size:cover;margin-top: 1em;""></div>
</div>
</div>"
288hVk0M,shuf file,zeerx7,Python,Friday 5th of April 2024 03:03:41 AM CDT,"# Split multiple files into parts
split -l 1000000 txtfile.txt txtfile_part_

# Randomize each section
for file in txtfile_part_*; do
    shuf ""$file"" -o ""$file.shuf""
done

# Combine all the shuffled parts
cat txtfile_part_*.shuf > txtfile_shuffled.txt

# Delete temporary files
rm txtfile_part_*
"
XfryFYcN,uniplayer,akshaylahagora,JSON,Friday 5th of April 2024 03:03:17 AM CDT,"{
  ""endpoint"": {},
  ""content"": {
    ""legal_msg"": ""<h3>UNI Player doesn't sell playlist or subscriptions</h3></br>UNI Player is a General Media Player and it doesn't include any content or playlist""
  },
  ""language"": {
    ""defult_language"": ""EN"",
    ""firstime_select_language"": ""true""
  },
  ""ads"": {
    ""ads_app_id"": ""ca-app-pub-3940256099942544~3347511713"",
    ""ads_banner"": ""ca-app-pub-3940256099942544/9214589741"",
    ""ads_banner_mobile"": ""ca-app-pub-3940256099942544/9214589741"",
    ""ads_intrestial"": ""ca-app-pub-3940256099942544/1033173712"",
    ""ads_open_app"": ""ca-app-pub-3940256099942544/9257395921"",
    ""ads_rewarded"": ""DefaultRewardedVideo"",
    ""ads_native"": ""ca-app-pub-3940256099942544/2247696110"",
    ""ads_native_button"": ""ca-app-pub-3940256099942544/2247696110"",
    ""ads_intrestial_time_delay"": 10,
    ""ads_list_logic"": [
      0,
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      1,
      1
    ],
    ""list_ad_index"": 18,
    ""native_banner_ads_probability"": 70,
    ""//native_banner_ads_probability"": ""// value will be out of 100 (if value 70 then out of 100 70 times native ads will be shown)"",
    ""ads_interstittial_click_details"": [
      5,
      5,
      5,
      4,
      4,
      3,
      3,
      3,
      6
    ],
    ""ads_ios_status"": ""false"",
    ""ads_status"": true,
    ""vast_ads"": {
      ""live_tv"": {
        ""app_vast_ads_s_status"": ""true"",
        ""app_vast_ads_s_full"": ""true"",
        ""app_vast_ads_s"": ""https://pubads.g.doubleclick.net/gampad/ads?iu=/21775744923/external/single_ad_samples&sz=640x480&cust_params=sample_ct%3Dlinear&ciu_szs=300x250%2C728x90&gdfp_req=1&output=vast&unviewed_position_start=1&env=vp&impl=s&correlator=""
      },
      ""vod"": {
        ""app_vast_ads_s_status"": ""true"",
        ""app_vast_ads_s"": ""https://pubads.g.doubleclick.net/gampad/ads?iu=/21775744923/external/single_ad_samples&sz=640x480&cust_params=sample_ct%3Dlinear&ciu_szs=300x250%2C728x90&gdfp_req=1&output=vast&unviewed_position_start=1&env=vp&impl=s&correlator=""
      },
      ""show"": {
        ""app_vast_ads_s_status"": ""true"",
        ""app_vast_ads_s"": ""https://pubads.g.doubleclick.net/gampad/ads?iu=/21775744923/external/single_ad_samples&sz=640x480&cust_params=sample_ct%3Dlinear&ciu_szs=300x250%2C728x90&gdfp_req=1&output=vast&unviewed_position_start=1&env=vp&impl=s&correlator=""
      }
    }
  },
  ""version"": {
    ""version_check"": ""false"",
    ""version_code"": ""1"",
    ""version_name"": ""1.0"",
    ""version_download_url"": """",
    ""version_download_url_apk"": """",
    ""version_force_update"": ""false"",
    ""version_update_msg"": ""Please Update"",
    ""version_changelog"": []
  },
  ""player"": {
    ""live_tv"": ""Exo Player"",
    ""vod"": ""Exo Player"",
    ""series"": ""Exo Player"",
    ""catch_up"": ""Exo Player""
  },
  ""app_announce"": [],
  ""maintenance_msg"": [],
  ""api_key"": {
    ""check_ip"": ""https://checkip.justwatch.com"",
    ""analyt_key"": ""e75412195adc81cc12ca37b750b40a37299fe8d5"",
    ""analyt_server"": ""http://countly.guidemefast.com""
  },
  ""agreement"": {
    ""privacy_policy"": ""https://www.iubenda.com/privacy-policy/68919995""
  },
  ""link"": ""https://pastebin.com/raw/zHHNc3iD""
}"
gTC6jVxc,Untitled,GLASHATAY_007,PostgreSQL,Friday 5th of April 2024 02:30:34 AM CDT,"Select  
	cc.id contract, 
	cc.lot_id, 
	pf.amount,
	pf.date::date pay_date,
	pf.number number_,
	substring(pf.payment_description,0,100)payment_description,
	pf.sub_type_code,
	vbc.description,
	pf.kosgu_rs kosgu,
	pf.e_code cvr,
	pf.article_code targetexpenseitemcode,
	pf.section_code,
	pf.pay_doc_name,
	pf.fund_code,
	pf.req_code,
	pf.year,
	pf.aip_code,
	c.inn,
	l_aip.name aip_name
	,pf.receiver_inn
From cm_contracts cc
Inner Join lots l On (l.id = cc.lot_id And l.actual = true)
Inner Join cm_contract_payments pf On (pf.cm_contract_id = cc.id) 
Left join po_vocab_budget_types vbc on (vbc.code=pf.sub_type_code)
Left Join gpo_list_aip l_aip On (l_aip.aip_code= pf.aip_code and l_aip.year=pf.year)
Left Join contragents c	On (c.id = cc.contract_customer)"
hYK3KjVd,TheRealGalavant - CategorySwitch Custom System,FrenchFrazier,Lua,Friday 5th of April 2024 01:57:00 AM CDT,"-- Hello, I'm Galavant and this is a 500+ line script I wrote, so I'm going to explain each section, but I sure hope I don't have to comment into each individual line as that would be incredibly time exhausting and I'd love to see you try and comment 500+ times on script lol. Enjoy, you can see how it applies in-game!


-- The code below gets references to the in-game UI elements, grabbing the parents and children to equate to the variables!
local CategoriesFrame = script.Parent
local CustomizationFrame = script.Parent.Parent

local customizedMorphScreenUI = CustomizationFrame.character[""Customized Morph""]
local currentSelectedMorphViewportFrame = nil

local CharacterFrame = CustomizationFrame:WaitForChild(""character"")
local ArmorFrame = CustomizationFrame:WaitForChild(""armor"")
local LoadoutFrame = CustomizationFrame:WaitForChild(""gunloadout"")

local CharacterButton = CategoriesFrame:WaitForChild(""char"")
local ArmorButton = CategoriesFrame:WaitForChild(""armor"")
local LoadoutButton = CategoriesFrame:WaitForChild(""loadout"")

-- This code below defines the morph frames you want to control (This is applied to the morph select UI system)!
local morphFrames = {
	[""501stSelectMorph""] = false,
	[""TGRSelectMorph""] = false,
	[""212thSelectMorph""] = false,
	[""187thSelectMorph""] = false,
	[""ARCSelectMorph""] = false,
	[""RCSelectMorph""] = false,
	[""CGSelectMorph""] = false,
	[""RGSelectMorph""] = false,
	[""TJOSelectMorph""] = false
}

-- This is the function to show any specific UI frame and hide others!
local function ShowUIFrame(uiFrame)
	for _, frame in ipairs(CustomizationFrame:GetChildren()) do
		if frame:IsA(""Frame"") then
			frame.Visible = (frame == uiFrame)
		end
	end
end

-- This is the function to set text color and background transparency for category buttons!
local function SetButtonStyle(clickedButton)
	for _, button in ipairs(CategoriesFrame:GetChildren()) do
		if button:IsA(""TextButton"") then
			button.TextColor3 = (button == clickedButton and Color3.new(0, 0, 0) or Color3.new(115/255, 135/255, 160/255))
			button.BackgroundTransparency = (button == clickedButton and 0 or 1)
		end
	end
end

-- All the SelectMorphFrame code below is referecing the morphs in game that will be selected when you click the specfic divisional button, so it's all rather similar except for the changes in divisions and referencing.

-- This is the function to show 501stSelectMorph frame when 501stDiv button is clicked!
local function Show501stSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""501stDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""501stSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- This is the function to show TGRSelectMorph frame when 501stDiv button is clicked!
local function ShowTGRSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""GalacticRepublicDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""TGRSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- This is the function to show 212thSelectMorph frame when 501stDiv button is clicked!
local function Show212thSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""212thDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""212thSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- This is the function to show 187thSelectMorph frame when 501stDiv button is clicked!
local function Show187thSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""187thDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""187thSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- This is the function to show ARCSelectMorph frame when 501stDiv button is clicked!
local function ShowARCSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""ARCDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""ARCSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- This is the function to show ARCSelectMorph frame when 501stDiv button is clicked!
local function ShowRCSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""RCDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""RCSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- This is the function to show ARCSelectMorph frame when 501stDiv button is clicked!
local function ShowCGSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""CGDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""CGSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- This is the function to show ARCSelectMorph frame when 501stDiv button is clicked!
local function ShowRGSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""RGDiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""RGSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end

-- This is the function to show ARCSelectMorph frame when 501stDiv button is clicked!
local function ShowTJOSelectMorphFrame()
	local armorFrame = CustomizationFrame:FindFirstChild(""armor"")
	if armorFrame then
		local divisionSelector = armorFrame:FindFirstChild(""DivisionSelector"")
		if divisionSelector then
			local scrollingFrame = divisionSelector:FindFirstChild(""ScrollingFrame"")
			if scrollingFrame then
				local divisionframe = scrollingFrame:FindFirstChild(""TJODiv"")
				if divisionframe then
					local divButton = divisionframe:FindFirstChild(""TextButton"")
					if divButton and divButton:IsA(""TextButton"") then
						divButton.MouseButton1Click:Connect(function()
							local selectMorphFrame = armorFrame:FindFirstChild(""TJOSelectMorph"")
							if selectMorphFrame then
								selectMorphFrame.Visible = true
							end
						end)
					end
				end
			end
		end
	end
end


-- Iterate through morph frames to add click events for back buttons (This adds click events everytime the back button is clicked to close the morph frame)!
for morphFrameName, _ in pairs(morphFrames) do
	local morphFrame = ArmorFrame:FindFirstChild(morphFrameName)
	if morphFrame then
		local backButton = morphFrame:FindFirstChild(""BackButton"")
		if backButton then
			local backClick = backButton:FindFirstChild(""TextButton"")
			if backClick then
				backClick.MouseButton1Click:Connect(function()
					morphFrame.Visible = false
					morphFrames[morphFrameName] = false
				end)
			end
		end
	end
end

-- Function to show or hide the ViewportFrame within Customized Morph ScreenGui (This shows the Viewport UI 3D Morph that I actually made by hand being one of the only scripters to be able to make one of those that can rotate within a Viewport Frame so far, or at least one of the few to try which is cool to flex lmao. And it shows the specific morph while hiding the others)!
local function ToggleCustomizedMorphViewportFrameVisibility()
	if CategoriesFrame.Visible then
		local selectedFrame = CategoriesFrame:GetChildren()[1] -- Get the currently selected frame
		if selectedFrame == CharacterFrame then
			local customizedMorphScreenGui = CharacterFrame:FindFirstChild(""Customized Morph"")
			if customizedMorphScreenGui then
				local viewportFrame = customizedMorphScreenGui:FindFirstChild(""501stTrooperViewportFrame"")
				if viewportFrame then
					viewportFrame.Visible = true
					return
				end
			end
		else
			local customizedMorphScreenGui = CharacterFrame:FindFirstChild(""Customized Morph"")
			if customizedMorphScreenGui then
				local viewportFrame = customizedMorphScreenGui:FindFirstChild(""501stTrooperViewportFrame"")
				if viewportFrame then
					viewportFrame.Visible = false
				end
			end
		end
	end
end



-- Function to hide all morph frames (Hides all morph frames obviously if the function is called)!
local function HideAllMorphFrames()
	for name, visible in pairs(morphFrames) do
		local frame = ArmorFrame:FindFirstChild(name)
		if frame then
			frame.Visible = false
		end
	end
end

-- Function to show a specific morph frame (References a specific morph frame to use in the future code as you'll see)!
local function ShowMorphFrame(frameName)
	HideAllMorphFrames()
	local frame = ArmorFrame:FindFirstChild(frameName)
	if frame then
		frame.Visible = true
	end
end


-- Connect click events for divisional buttons (Connects a click event for when you select the division you'd like to play as)!
local function ConnectDivisionButtonClick(divisionName, frameName)
	local divisionFrame = ArmorFrame:FindFirstChild(""DivisionSelector""):FindFirstChild(""ScrollingFrame""):FindFirstChild(divisionName)
	if divisionFrame then
		local button = divisionFrame:FindFirstChild(""TextButton"")
		if button then
			button.MouseButton1Click:Connect(function()
				ShowMorphFrame(frameName)
				ToggleCustomizedMorphViewportFrameVisibility(false) -- Hide morph viewport frame
			end)
		else
			warn(""TextButton not found in division frame "" .. divisionName)
		end
	else
		warn(""Division frame "" .. divisionName .. "" not found"")
	end
end


-- Connect click events for divisional buttons (These are the table listings of all the individual morphs so far in the game)!
ConnectDivisionButtonClick(""501stDiv"", ""501stSelectMorph"")
ConnectDivisionButtonClick(""GalacticRepublicDiv"", ""TGRSelectMorph"")
ConnectDivisionButtonClick(""212thDiv"", ""212thSelectMorph"")
ConnectDivisionButtonClick(""187thDiv"", ""187thSelectMorph"")
ConnectDivisionButtonClick(""ARCDiv"", ""ARCSelectMorph"")
ConnectDivisionButtonClick(""RCDiv"", ""RCSelectMorph"")
ConnectDivisionButtonClick(""CGDiv"", ""CGSelectMorph"")
ConnectDivisionButtonClick(""RGDiv"", ""RGSelectMorph"")
ConnectDivisionButtonClick(""TJODiv"", ""TJOSelectMorph"")

--To Avoid a lot of repeating, I'll just go ahead and explain. For everything you're gonna see below, these are just to call on the specific Viewport Morphs that the player is able to spin and customize. When the button is clicked, these morphs pop up and only show the morph that is being customized. Everything below is for those seperate divisions!

--501st Legion Morphs ***

-- Define references for viewport functionality (501st Trooper)
local fiveofirsttrooperarmorFrame = ArmorFrame -- Reference to the armor frame
local fiveofirsttroopermorphSelectFrame = fiveofirsttrooperarmorFrame:WaitForChild(""501stSelectMorph"") -- Reference to the 501stSelectMorph frame
local fiveofirsttrooperscrollingFrame = fiveofirsttroopermorphSelectFrame:WaitForChild(""ScrollingFrame"") -- Reference to the ScrollingFrame
local fiveofirsttrooperinfantryTopFrame = fiveofirsttrooperscrollingFrame:WaitForChild(""InfantryTop"") -- Reference to the InfantryTop frame
local fiveofirsttrooperFrame = fiveofirsttrooperinfantryTopFrame:WaitForChild(""Trooper"") -- Reference to the Trooper frame
local fiveofirsttrooperimageButton = fiveofirsttrooperFrame:WaitForChild(""ImageButton"") -- Reference to the ImageButton
local fiveofirsttroopertextButton = fiveofirsttrooperimageButton:WaitForChild(""TextButton"") -- Reference to the TextButton
local fiveofirsttroopercustomizedMorphScreenUI = fiveofirsttrooperarmorFrame.Parent.character:WaitForChild(""Customized Morph"")
local fiveofirsttrooperviewportFrame = fiveofirsttroopercustomizedMorphScreenUI:FindFirstChild(""501stTrooperViewportFrame"")

fiveofirsttroopertextButton.MouseButton1Click:Connect(function()
	-- Close other ViewportFrames within Customized Morph
	for _, child in ipairs(fiveofirsttroopercustomizedMorphScreenUI:GetChildren()) do
		if child:IsA(""ViewportFrame"") and child ~= fiveofirsttrooperviewportFrame then
			child.Visible = false
		end
	end

	-- Make the ViewportFrame visible
	if fiveofirsttrooperviewportFrame then
		fiveofirsttrooperviewportFrame.Visible = true
	end
end)



--212th Attack Batallion Morphs ***

-- Define references for viewport functionality (212th Trooper)
local twotwelfthtrooperarmorFrame = ArmorFrame -- Reference to the armor frame
local twotwelfthtroopermorphSelectFrame = twotwelfthtrooperarmorFrame:WaitForChild(""212thSelectMorph"") -- Reference to the 212thSelectMorph frame
local twotwelfthtrooperscrollingFrame = twotwelfthtroopermorphSelectFrame:WaitForChild(""ScrollingFrame"") -- Reference to the ScrollingFrame
local twotwelfthtrooperinfantryTopFrame = twotwelfthtrooperscrollingFrame:WaitForChild(""InfantryTop"") -- Reference to the InfantryTop frame
local twotwelfthtrooperFrame = twotwelfthtrooperinfantryTopFrame:WaitForChild(""Trooper"") -- Reference to the Trooper frame
local twotwelfthtrooperimageButton = twotwelfthtrooperFrame:WaitForChild(""ImageButton"") -- Reference to the ImageButton
local twotwelfthtroopertextButton = twotwelfthtrooperimageButton:WaitForChild(""TextButton"") -- Reference to the TextButton
local twotwelfthtroopercustomizedMorphScreenUI = twotwelfthtrooperarmorFrame.Parent.character:WaitForChild(""Customized Morph"")
local twotwelfthtrooperviewportFrame = twotwelfthtroopercustomizedMorphScreenUI:FindFirstChild(""212thTrooperViewportFrame"")

twotwelfthtroopertextButton.MouseButton1Click:Connect(function()
	-- Close other ViewportFrames within Customized Morph
	for _, child in ipairs(twotwelfthtroopercustomizedMorphScreenUI:GetChildren()) do
		if child:IsA(""ViewportFrame"") and child ~= twotwelfthtrooperviewportFrame then
			child.Visible = false
		end
	end

	-- Make the ViewportFrame visible
	if twotwelfthtrooperviewportFrame then
		twotwelfthtrooperviewportFrame.Visible = true
	end
end)



--187th Batallion Morphs ***

-- Define references for viewport functionality (187th Trooper)
local oneeightyseventhtrooperarmorFrame = ArmorFrame -- Reference to the armor frame
local oneeightyseventhtroopermorphSelectFrame = oneeightyseventhtrooperarmorFrame:WaitForChild(""187thSelectMorph"") -- Reference to the 187thSelectMorph frame
local oneeightyseventhtrooperscrollingFrame = oneeightyseventhtroopermorphSelectFrame:WaitForChild(""ScrollingFrame"") -- Reference to the ScrollingFrame
local oneeightyseventhtrooperinfantryTopFrame = oneeightyseventhtrooperscrollingFrame:WaitForChild(""InfantryTop"") -- Reference to the InfantryTop frame
local oneeightyseventhtrooperFrame = oneeightyseventhtrooperinfantryTopFrame:WaitForChild(""Trooper"") -- Reference to the Trooper frame
local oneeightyseventhtrooperimageButton = oneeightyseventhtrooperFrame:WaitForChild(""ImageButton"") -- Reference to the ImageButton
local oneeightyseventhtroopertextButton = oneeightyseventhtrooperimageButton:WaitForChild(""TextButton"") -- Reference to the TextButton
local oneeightyseventhtroopercustomizedMorphScreenUI = oneeightyseventhtrooperarmorFrame.Parent.character:WaitForChild(""Customized Morph"")
local oneeightyseventhtrooperviewportFrame = oneeightyseventhtroopercustomizedMorphScreenUI:FindFirstChild(""187thTrooperViewportFrame"")

oneeightyseventhtroopertextButton.MouseButton1Click:Connect(function()
	-- Close other ViewportFrames within Customized Morph
	for _, child in ipairs(oneeightyseventhtroopercustomizedMorphScreenUI:GetChildren()) do
		if child:IsA(""ViewportFrame"") and child ~= oneeightyseventhtrooperviewportFrame then
			child.Visible = false
		end
	end

	-- Make the ViewportFrame visible
	if oneeightyseventhtrooperviewportFrame then
		oneeightyseventhtrooperviewportFrame.Visible = true
	end
end)



--ARC Program Morphs ***

-- Define references for viewport functionality (ARC Trooper)
local ARCtrooperarmorFrame = ArmorFrame -- Reference to the armor frame
local ARCtroopermorphSelectFrame = ARCtrooperarmorFrame:WaitForChild(""ARCSelectMorph"") -- Reference to the ARCSelectMorph frame
local ARCtrooperscrollingFrame = ARCtroopermorphSelectFrame:WaitForChild(""ScrollingFrame"") -- Reference to the ScrollingFrame
local ARCtrooperinfantryTopFrame = ARCtrooperscrollingFrame:WaitForChild(""InfantryTop"") -- Reference to the InfantryTop frame
local ARCtrooperFrame = ARCtrooperinfantryTopFrame:WaitForChild(""Trooper"") -- Reference to the Trooper frame
local ARCtrooperimageButton = ARCtrooperFrame:WaitForChild(""ImageButton"") -- Reference to the ImageButton
local ARCtroopertextButton = ARCtrooperimageButton:WaitForChild(""TextButton"") -- Reference to the TextButton
local ARCtroopercustomizedMorphScreenUI = ARCtrooperarmorFrame.Parent.character:WaitForChild(""Customized Morph"")
local ARCtrooperviewportFrame = ARCtroopercustomizedMorphScreenUI:FindFirstChild(""ARCTrooperViewportFrame"")

ARCtroopertextButton.MouseButton1Click:Connect(function()
	-- Close other ViewportFrames within Customized Morph
	for _, child in ipairs(ARCtroopercustomizedMorphScreenUI:GetChildren()) do
		if child:IsA(""ViewportFrame"") and child ~= ARCtrooperviewportFrame then
			child.Visible = false
		end
	end

	-- Make the ViewportFrame visible
	if ARCtrooperviewportFrame then
		ARCtrooperviewportFrame.Visible = true
	end
end)



--Republic Commando  Morphs ***

-- Define references for viewport functionality (RC Trooper)
local RCtrooperarmorFrame = ArmorFrame -- Reference to the armor frame
local RCtroopermorphSelectFrame = RCtrooperarmorFrame:WaitForChild(""RCSelectMorph"") -- Reference to the RCSelectMorph frame
local RCtrooperscrollingFrame = RCtroopermorphSelectFrame:WaitForChild(""ScrollingFrame"") -- Reference to the ScrollingFrame
local RCtrooperinfantryTopFrame = RCtrooperscrollingFrame:WaitForChild(""InfantryTop"") -- Reference to the InfantryTop frame
local RCtrooperFrame = RCtrooperinfantryTopFrame:WaitForChild(""Trooper"") -- Reference to the Trooper frame
local RCtrooperimageButton = RCtrooperFrame:WaitForChild(""ImageButton"") -- Reference to the ImageButton
local RCtroopertextButton = RCtrooperimageButton:WaitForChild(""TextButton"") -- Reference to the TextButton
local RCtroopercustomizedMorphScreenUI = RCtrooperarmorFrame.Parent.character:WaitForChild(""Customized Morph"")
local RCtrooperviewportFrame = RCtroopercustomizedMorphScreenUI:FindFirstChild(""RCTrooperViewportFrame"")

RCtroopertextButton.MouseButton1Click:Connect(function()
	-- Close other ViewportFrames within Customized Morph
	for _, child in ipairs(RCtroopercustomizedMorphScreenUI:GetChildren()) do
		if child:IsA(""ViewportFrame"") and child ~= RCtrooperviewportFrame then
			child.Visible = false
		end
	end

	-- Make the ViewportFrame visible
	if RCtrooperviewportFrame then
		RCtrooperviewportFrame.Visible = true
	end
end)



--Coruscant Guard Morphs ***

-- Define references for viewport functionality (CG Guardsman)
local CGGuardsmanarmorFrame = ArmorFrame -- Reference to the armor frame
local CGGuardsmanmorphSelectFrame = CGGuardsmanarmorFrame:WaitForChild(""CGSelectMorph"") -- Reference to the CGSelectMorph frame
local CGGuardsmanscrollingFrame = CGGuardsmanmorphSelectFrame:WaitForChild(""ScrollingFrame"") -- Reference to the ScrollingFrame
local CGGuardsmaninfantryTopFrame = CGGuardsmanscrollingFrame:WaitForChild(""InfantryTop"") -- Reference to the InfantryTop frame
local CGGuardsmanFrame = CGGuardsmaninfantryTopFrame:WaitForChild(""Guardsman"") -- Reference to the Trooper frame
local CGGuardsmanimageButton = CGGuardsmanFrame:WaitForChild(""ImageButton"") -- Reference to the ImageButton
local CGGuardsmantextButton = CGGuardsmanimageButton:WaitForChild(""TextButton"") -- Reference to the TextButton
local CGGuardsmancustomizedMorphScreenUI = CGGuardsmanarmorFrame.Parent.character:WaitForChild(""Customized Morph"")
local CGGuardsmanviewportFrame = CGGuardsmancustomizedMorphScreenUI:FindFirstChild(""CGGuardsmanViewportFrame"")

CGGuardsmantextButton.MouseButton1Click:Connect(function()
	-- Close other ViewportFrames within Customized Morph
	for _, child in ipairs(CGGuardsmancustomizedMorphScreenUI:GetChildren()) do
		if child:IsA(""ViewportFrame"") and child ~= CGGuardsmanviewportFrame then
			child.Visible = false
		end
	end

	-- Make the ViewportFrame visible
	if CGGuardsmanviewportFrame then
		CGGuardsmanviewportFrame.Visible = true
	end
end)


-- Connect click event for Character tab button (Connecting the Character UI Tab to open when the player clicks on it)
CharacterButton.MouseButton1Click:Connect(function()
	-- Show the CharacterFrame and hide other frames
	ShowUIFrame(CharacterFrame)
	SetButtonStyle(CharacterButton)
	CategoriesFrame.Visible = true
	HideAllMorphFrames()  -- Ensure all morph frames are hidden initially
	ToggleCustomizedMorphViewportFrameVisibility(true)  -- Show or hide morph viewport frame based on selection
end)

-- Connect click event for Armor tab button (Connecting the Armor UI Tab to open when the player clicks on it)
ArmorButton.MouseButton1Click:Connect(function()
	-- Show the ArmorFrame and hide other frames
	ShowUIFrame(ArmorFrame)
	SetButtonStyle(ArmorButton)
	CategoriesFrame.Visible = true
	HideAllMorphFrames()  -- Ensure all morph frames are hidden when switching tabs
	ToggleCustomizedMorphViewportFrameVisibility(false)  -- Hide morph viewport frame based on selection
end)

-- Connect click event for Loadout tab button (Connecting the Loadout UI Tab to open when the player clicks on it)
LoadoutButton.MouseButton1Click:Connect(function()
	-- Show the LoadoutFrame and hide other frames
	ShowUIFrame(LoadoutFrame)
	SetButtonStyle(LoadoutButton)
	CategoriesFrame.Visible = true
	HideAllMorphFrames()  -- Ensure all morph frames are hidden when switching tabs
	ToggleCustomizedMorphViewportFrameVisibility(false)  -- Hide morph viewport frame based on selection
end)


-- Initially set the text color and transparency for the character button (Calling SetButtonStyle function and Connecting the original UI for character button)
SetButtonStyle(CharacterButton)"
QsfmyJXF,Setup Accounts V2,LegendzHackz,Lua,Friday 5th of April 2024 01:56:25 AM CDT,"local Storage = game:GetService(""ReplicatedStorage"");
local Workspace = game:GetService(""Workspace"");
local Players = game:GetService(""Players"");
local Player = Players.LocalPlayer

-- Local Initiative Services

local TeleportService = game:GetService(""TeleportService"");
local InputService = game:GetService(""UserInputService"");
local ChatService = game:GetService(""TextChatService"");
local HttpService = game:GetService(""HttpService"");
local VirtualUser = game:GetService(""VirtualUser"");
local RunService = game:GetService(""RunService"");
local CoreGui = game:GetService(""CoreGui"");
local Camera = Workspace.Camera
local Gui = Player.PlayerGui
local PId, JId = game.PlaceId, game.JobId

-- Recollectives

local Heartbeat = RunService.Heartbeat

function Shorten(Username)
    local PlayerList = {}
    for _, CPlayer in pairs(Players:GetPlayers()) do
        if CPlayer.Name:lower():sub(1, #Username) == Username:lower() or CPlayer.DisplayName:lower():sub(1, #Username) == Username:lower() then
            table.insert(PlayerList, CPlayer)
        end
    end
    return PlayerList
end

function Hop()
    pcall(function()
        local Servers = {}
        for _, v in ipairs(HttpService:JSONDecode(game:HttpGetAsync(""https://games.roblox.com/v1/games/"" .. PlaceId .. ""/servers/Public?sortOrder=Asc&limit=100"")).data) do
            if type(v) == ""table"" and v.maxPlayers > v.playing and v.Id ~= JobId then
                Servers[#Servers + 1] = v.id
            end
        end
        if #Servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, Servers[math.random(1, #Servers)])
        else
            print(""Server not found."")
        end
    end)
end

function Hide(Target, Value)
    pcall(function()
        if Value then
            for _, Search in next, Players:GetPlayers() do
                if Search.Name == Target then
                    for _, Staff in next, Players:GetPlayers() do
                        if Staff ~= Player then
                            if table.find(getgenv().Settings.Whitelist, Staff.UserId) then
                                Search.Character.HumanoidRootPart.Velocity = Vector3.new()
                                Search.Character.HumanoidRootPart.CFrame = Staff.Character.HumanoidRootPart.CFrame * CFrame.new(-getgenv().Settings.X, getgenv().Settings.Y, getgenv().Settings.Z)
                            end
                        end
                    end
                end
            end
        elseif not Value then
            for _, Search in next, Players:GetPlayers() do
                if Search.Name == Target then
                    for _, Staff in next, Players:GetPlayers() do
                        if Staff ~= Player then
                            if table.find(getgenv().Settings.Whitelist, Staff.UserId) then
                                Search.Character.HumanoidRootPart.Velocity = Vector3.new()
                                Search.Character.HumanoidRootPart.CFrame = Staff.Character.HumanoidRootPart.CFrame * CFrame.new(getgenv().Settings.X, getgenv().Settings.Y, getgenv().Settings.Z)
                            end
                        end
                    end
                end
            end
        end
    end)
end

function NoSitAFK()
    function AntiAFK()
        local grabconnections = getconnections or get_signal_cons
        if grabconnections then
            for _, Extra in pairs(grabconnections(Player.Idled)) do
                if Extra[""Disable""] then
                    Extra[""Disable""](Extra)
                elseif Extra[""Disconnect""] then
                    Extra[""Disconnect""](Extra)
                end
            end
        else
            Player.Idled:Connect(function()
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
            end)
        end
    end

    function NoSitCall()
    	task.wait()
    	if Player.Character:FindFirstChildWhichIsA(""Humanoid"").Sit then
    		Player.Character:FindFirstChildWhichIsA(""Humanoid"").Sit = false
    	end
    end

    if NoSit then
        noSit:Disconnect()
        NoSitGet:Disconnect()
    end

    NoSit = Player.Character:FindFirstChildOfClass(""Humanoid""):GetPropertyChangedSignal(""Sit""):Connect(NoSitCall)

    function NoSitDeadGet()
        repeat task.wait()
        
        until Player.Character ~= nil and Player.Character:FindFirstChildOfClass(""Humanoid"")
        NoSit:Disconnect()
        NoSit = Player.Character:FindFirstChildOfClass(""Humanoid""):GetPropertyChangedSignal(""Sit""):Connect(NoSitCall)
    end

    NoSitGet = Player.CharacterAdded:Connect(NoSitDeadGet)
    AntiAFK()
end

NoSitAFK()

ChatService.MessageReceived:Connect(function(Message)
    for _, Search in next, Players:GetPlayers() do
        if Search ~= Player and table.find(getgenv().Settings.Whitelist, Search.UserId) then
            if Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""disconnect"" then
                Player:Kick(""You have been disconnected."")
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""respawn"" then
                pcall(function()
                    local cOld = Player.Character.HumanoidRootPart.CFrame
                    Player.Character:BreakJoints()
                    Player.CharacterAdded:Wait():WaitForChild(""HumanoidRootPart"").CFrame = cOld
                end)
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""rejoin"" then
                TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Player)
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""hop"" then
                Hop()
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""flash"" then
                local gOld = getgenv().Settings.Y
                for Iter = 1, 5 do
                    task.wait(0.1)
                    getgenv().Settings.Y = 25
                    task.wait(0.1)
                    getgenv().Settings.Y = 3.5
                end
                task.wait(0.7)
                getgenv().Settings.Y = gOld
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""default"" or Message.Text == getgenv().Settings.Prefix .. ""def"" then
                getgenv().Settings.X = 4
                getgenv().Settings.Y = 0
                getgenv().Settings.Z = 0
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""big"" or Message.Text == getgenv().Settings.Prefix .. ""huge"" then
                getgenv().Settings.X = 7.5
                getgenv().Settings.Y = 3.5
                getgenv().Settings.Z = 0
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""small"" or Message.Text == getgenv().Settings.Prefix .. ""tiny"" then
                getgenv().Settings.X = 2.5
                getgenv().Settings.Y = 0
                getgenv().Settings.Z = 0
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""conc"" or Message.Text == getgenv().Settings.Prefix .. ""conceal"" then
                getgenv().Settings.Y = 5000
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""reveal"" or Message.Text == getgenv().Settings.Prefix .. ""rev"" then
                getgenv().Settings.Y = 3.5
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""hide"" then
                getgenv().Settings.Hide = true
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""unhide"" then
                getgenv().Settings.Hide = false
                Player.Character.HumanoidRootPart.CFrame = Search.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
            elseif Message.TextSource.UserId == Search.UserId and Message.Text == getgenv().Settings.Prefix .. ""bring"" then
                Player.Character.HumanoidRootPart.CFrame = Search.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0)
            end
        end
    end
end)

Heartbeat:Connect(function()
    pcall(function()
        if getgenv().Settings.Hide then
            Hide(getgenv().Settings.Target, getgenv().Settings.Value)
        end
    end)
end)"
E9JTcvAy,Untitled,vuseless,HTML,Friday 5th of April 2024 01:44:11 AM CDT,"onlinepoll.me/poll/vote/who-wins-160
onlinepoll.me/poll/vote/who-wins-161
onlinepoll.me/poll/vote/who-wins-162
onlinepoll.me/poll/vote/who-wins-163
onlinepoll.me/poll/vote/who-wins-164

<div id=""div_id_votes"" class=""form-group""> <div class> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_1"" value=""me""> <label class=""form-check-label"" for=""id_votes_1"">
me
</label> </div> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_2"" value=""sailor moon""> <label class=""form-check-label"" for=""id_votes_2"">
sailor moon
</label> </div> </div> </div>
</div>
<button type=""submit"" data-sitekey=""6Lcs1wsaAAAAAKjV3ylwUmvaO-JtAOcfo8HoPBdv"" data-callback=""onSubmit"" class=""btnmain votebtn g-recaptcha"">Vote</button>
<a href=""/en/poll/result/who-wins-160"" class=""float-right"" style=""font-size: 16px;padding-top: 15px;"">Result</a>
</form>
<br>
<div class=""row"">
<div class=""col-5 mt-3"">
<p class=""securetip"">
<span><i class=""fa fa-unlock""></i> No Duplication Checking</span>
</p>
</div>
<div class=""col-md-7"">
<div class=""text-right"">
<span style=""font-size: 12px;color: white;"">Share:</span>
<input id=""share"" readonly=""readonly"" class=""share"" value=""https://onlinepoll.me/poll/vote/who-wins-160"" onclick=""if (!window.__cfRLUnblockHandlers) return false; this.select()"" data-cf-modified-dde2c21e5624d3ae665f2aed->
<button class=""btnshare sharebtn"" type=""button"">Copy</button>
</div>
</div>
</div>

<div id=""div_id_votes"" class=""form-group""> <div class> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_1"" value=""me""> <label class=""form-check-label"" for=""id_votes_1"">
me
</label> </div> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_2"" value=""sailor mercury""> <label class=""form-check-label"" for=""id_votes_2"">
sailor mercury
</label> </div> </div> </div>
</div>
<button type=""submit"" data-sitekey=""6Lcs1wsaAAAAAKjV3ylwUmvaO-JtAOcfo8HoPBdv"" data-callback=""onSubmit"" class=""btnmain votebtn g-recaptcha"">Vote</button>
<a href=""/en/poll/result/who-wins-161"" class=""float-right"" style=""font-size: 16px;padding-top: 15px;"">Result</a>
</form>
<br>
<div class=""row"">
<div class=""col-5 mt-3"">
<p class=""securetip"">
<span><i class=""fa fa-unlock""></i> No Duplication Checking</span>
</p>
</div>
<div class=""col-md-7"">
<div class=""text-right"">
<span style=""font-size: 12px;color: white;"">Share:</span>
<input id=""share"" readonly=""readonly"" class=""share"" value=""https://onlinepoll.me/poll/vote/who-wins-161"" onclick=""if (!window.__cfRLUnblockHandlers) return false; this.select()"" data-cf-modified-dde2c21e5624d3ae665f2aed->
<button class=""btnshare sharebtn"" type=""button"">Copy</button>
</div>
</div>
</div>

<div id=""div_id_votes"" class=""form-group""> <div class> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_1"" value=""me""> <label class=""form-check-label"" for=""id_votes_1"">
me
</label> </div> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_2"" value=""sailor venus""> <label class=""form-check-label"" for=""id_votes_2"">
sailor venus
</label> </div> </div> </div>
</div>
<button type=""submit"" data-sitekey=""6Lcs1wsaAAAAAKjV3ylwUmvaO-JtAOcfo8HoPBdv"" data-callback=""onSubmit"" class=""btnmain votebtn g-recaptcha"">Vote</button>
<a href=""/en/poll/result/who-wins-162"" class=""float-right"" style=""font-size: 16px;padding-top: 15px;"">Result</a>
</form>
<br>
<div class=""row"">
<div class=""col-5 mt-3"">
<p class=""securetip"">
<span><i class=""fa fa-unlock""></i> No Duplication Checking</span>
</p>
</div>
<div class=""col-md-7"">
<div class=""text-right"">
<span style=""font-size: 12px;color: white;"">Share:</span>
<input id=""share"" readonly=""readonly"" class=""share"" value=""https://onlinepoll.me/poll/vote/who-wins-162"" onclick=""if (!window.__cfRLUnblockHandlers) return false; this.select()"" data-cf-modified-dde2c21e5624d3ae665f2aed->
<button class=""btnshare sharebtn"" type=""button"">Copy</button>
</div>
</div>
</div>

<div id=""div_id_votes"" class=""form-group""> <div class> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_1"" value=""me""> <label class=""form-check-label"" for=""id_votes_1"">
me
</label> </div> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_2"" value=""sailor mars""> <label class=""form-check-label"" for=""id_votes_2"">
sailor mars
</label> </div> </div> </div>
</div>
<button type=""submit"" data-sitekey=""6Lcs1wsaAAAAAKjV3ylwUmvaO-JtAOcfo8HoPBdv"" data-callback=""onSubmit"" class=""btnmain votebtn g-recaptcha"">Vote</button>
<a href=""/en/poll/result/who-wins-163"" class=""float-right"" style=""font-size: 16px;padding-top: 15px;"">Result</a>
</form>
<br>
<div class=""row"">
<div class=""col-5 mt-3"">
<p class=""securetip"">
<span><i class=""fa fa-unlock""></i> No Duplication Checking</span>
</p>
</div>
<div class=""col-md-7"">
<div class=""text-right"">
<span style=""font-size: 12px;color: white;"">Share:</span>
<input id=""share"" readonly=""readonly"" class=""share"" value=""https://onlinepoll.me/poll/vote/who-wins-163"" onclick=""if (!window.__cfRLUnblockHandlers) return false; this.select()"" data-cf-modified-dde2c21e5624d3ae665f2aed->
<button class=""btnshare sharebtn"" type=""button"">Copy</button>
</div>
</div>
</div>
<div id=""div_id_votes"" class=""form-group""> <div class> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_1"" value=""me""> <label class=""form-check-label"" for=""id_votes_1"">
me
</label> </div> <div class=""form-check""> <input type=""checkbox"" class=""form-check-input"" name=""votes"" id=""id_votes_2"" value=""sailor jupiter""> <label class=""form-check-label"" for=""id_votes_2"">
sailor jupiter
</label> </div> </div> </div>
</div>
<button type=""submit"" data-sitekey=""6Lcs1wsaAAAAAKjV3ylwUmvaO-JtAOcfo8HoPBdv"" data-callback=""onSubmit"" class=""btnmain votebtn g-recaptcha"">Vote</button>
<a href=""/en/poll/result/who-wins-164"" class=""float-right"" style=""font-size: 16px;padding-top: 15px;"">Result</a>
</form>
<br>
<div class=""row"">
<div class=""col-5 mt-3"">
<p class=""securetip"">
<span><i class=""fa fa-unlock""></i> No Duplication Checking</span>
</p>
</div>
<div class=""col-md-7"">
<div class=""text-right"">
<span style=""font-size: 12px;color: white;"">Share:</span>
<input id=""share"" readonly=""readonly"" class=""share"" value=""https://onlinepoll.me/poll/vote/who-wins-164"" onclick=""if (!window.__cfRLUnblockHandlers) return false; this.select()"" data-cf-modified-dde2c21e5624d3ae665f2aed->
<button class=""btnshare sharebtn"" type=""button"">Copy</button>
</div>
</div>
</div>"
zrxKDACQ,My Story Game DataStore with Roles New (Main Game),Sungmingamerpro13,CSS,Friday 5th of April 2024 01:04:58 AM CDT,"local TeleportService = game:GetService(""TeleportService"")
local SaveCurrency = game:GetService(""DataStoreService""):GetDataStore(""Rounds"")
local SaveCurrency2 = game:GetService(""DataStoreService""):GetDataStore(""Wins"")
local SaveCurrency3 = game:GetService(""DataStoreService""):GetDataStore(""Coins"")
local SaveExtraLives = game:GetService(""DataStoreService""):GetDataStore(""Lives"")
local SaveRoleData = game:GetService(""DataStoreService""):GetDataStore(""Role"")
local SaveMoneyData = game:GetService(""DataStoreService""):GetDataStore(""Money"")

local VIPGamepassId = ""265392817""

game.Players.PlayerAdded:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then
		local Folder = Instance.new(""Folder"",player)
		Folder.Name = ""leaderstats""

		local Currency = Instance.new(""NumberValue"",Folder)
		Currency.Name = game.ReplicatedStorage.Tags.RoundsValue.Value
		Currency.Value = SaveCurrency:GetAsync(player.UserId) or 0

		local Currency2 = Instance.new(""NumberValue"",Folder)
		Currency2.Name = game.ReplicatedStorage.Tags.WinsValue.Value
		Currency2.Value = SaveCurrency2:GetAsync(player.UserId) or 0

		local previousData = SaveCurrency3:GetAsync(player.UserId) 
		local Coins

		if previousData ~= nil then
			Coins = previousData
		else
			Coins = 0
			SaveCurrency3:SetAsync(player.UserId, 0)
		end

		local CoinsValue = Instance.new(""NumberValue"", player)
		CoinsValue.Name = ""Coins""
		CoinsValue.Value = Coins

		local val1 = Instance.new(""StringValue"",player)
		val1.Name = 'GotPet'
		val1.Value = ''

		local val2 = Instance.new(""StringValue"",player)
		val2.Name = 'OpenValue'
		val2.Value = ''

		local previousData2 = SaveExtraLives:GetAsync(player.UserId)
		local Lives
		
		local previousData3 = SaveRoleData:GetAsync(player.UserId)
		local Role
		
		local previousData4 = SaveMoneyData:GetAsync(player.UserId)
		local Money

		if previousData2 ~= nil then
			Lives = previousData2
		else
			Lives = 0
			SaveExtraLives:SetAsync(player.UserId, 0)
		end
		
		if previousData3 ~= nil then
			Role = previousData3
		else
			Role = player.Role.Value
			SaveRoleData:SetAsync(player.UserId, player.Role.Value)
		end
		
		if previousData4 ~= nil then
			Money = previousData4
		else
			SaveMoneyData:SetAsync(player.UserId, 0)
		end

		local ExtraLivesValue = Instance.new(""NumberValue"", player)
		ExtraLivesValue.Name = ""Lives""
		ExtraLivesValue.Value = Lives
		
		local RoleValue = Instance.new(""StringValue"", player)
		RoleValue.Name = ""Role""
		RoleValue.Value = Role
		
		if player:WaitForChild(""Role"").Value >= ""Normal Kid"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 0.7
			player.Character.Humanoid.BodyHeightScale.Value = 0.7
			player.Character.Humanoid.BodyWidthScale.Value = 0.6
		elseif player:WaitForChild(""Role"").Value >= ""Protector 1"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value >= ""Medic"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value >= ""Fighter"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 0.7
			player.Character.Humanoid.BodyHeightScale.Value = 0.7
			player.Character.Humanoid.BodyWidthScale.Value = 0.6
		elseif player:WaitForChild(""Role"").Value >= ""Protector 3"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value >= ""PREMIUM"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value >= ""Default Kid"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value >= ""Adventure"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		elseif player:WaitForChild(""Role"").Value >= ""Fat Kid"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 0.9
			player.Character.Humanoid.BodyHeightScale.Value = 0.7
			player.Character.Humanoid.BodyWidthScale.Value = 0.7
		elseif player:WaitForChild(""Role"").Value >= ""Golden Protector"" then
			player.Character.Humanoid.MaxHealth = 100
			player.Character.Humanoid.BodyDepthScale.Value = 1
			player.Character.Humanoid.BodyHeightScale.Value = 1
			player.Character.Humanoid.BodyWidthScale.Value = 1
		end
		
		local MoneyValue = Instance.new(""NumberValue"", player)
		MoneyValue.Name = ""Money""
		MoneyValue.Value = Money

		if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
			player.Coins.Value = player.Coins.Value * 2
		end
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then	
		SaveCurrency:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.RoundsValue.Value].Value)
		SaveCurrency2:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.WinsValue.Value].Value)
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Coins.Value
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Coins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value2 = player.Lives.Value
		SaveExtraLives:SetAsync(player.UserId, value2)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value2 = player.Lives.Value

	if value2 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveExtraLives:SetAsync(player.UserId, value2)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value3 = player.Role.Value
		SaveRoleData:SetAsync(player.UserId, value3)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value3 = player.Role.Value

	if value3 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveRoleData:SetAsync(player.UserId, value3)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value3 = player.Money.Value
		SaveRoleData:SetAsync(player.UserId, value3)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value3 = player.Money.Value

	if value3 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveRoleData:SetAsync(player.UserId, value3)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game.Players.PlayerAdded:connect(function(player)
	player.CharacterAdded:connect(function(char)

		char.Humanoid.Died:connect(function()
			SaveCurrency:SetAsync(player.UserId, player.leaderstats.Rounds.Value)
			SaveExtraLives:SetAsync(player.UserId, player.Lives.Value)
			player.leaderstats.Rounds.Value = player.leaderstats.Rounds.Value + 1
			player.Lives.Value = player.Lives.Value - 1
		end)
	end)
end)
"
2xiFNTRs,Cheater,NUCLEARESOL,Lua,Friday 5th of April 2024 01:04:46 AM CDT,"local col={0,0,0,0}
local row= {0,0,0,0}
local row1= {0,0,0,0}
local row2= {0,0,0,0}
local row3= {0,0,0,0}
local row4= {0,0,0,0}

local function checkrow(txt,n,tabled)
	for count =1,9,1 do
		nq, n = string.gsub(txt,tostring(count),""#"")
		if n>=2 then return false end
	end 
	local sum=0
	for _, v in pairs(tabled) do
	    if tonumber(v) then
	        sum = sum+v
	    end
	end
    if sum == n then return true end
    return false
end
while true do
    
   if checkrow(table.concat(row1),row[1],row1)== false then goto continue end
   if checkrow(table.concat(row2),row[2],row2)== false then goto continue end
   if checkrow(table.concat(row3),row[3],row3)== false then goto continue end
   if checkrow(table.concat(row4),row[4],row4)== false then goto continue end
   
   ::continue::
end "
K79qTr7X,Scan for RDWeb,anonit,Bash,Friday 5th of April 2024 12:25:16 AM CDT,"#!/bin/bash

# checks for existence of RDWAPage on a specific URL
# requires a file redirected on stdin
# eg: ./scanrdweb.sh < targetlist.txt
# outputs to results.csv
# curl timeout set to 15 seconds

while IFS= read -r TARGET; do
        curl https://$TARGET/RDWeb/pages/en-US/login.aspx --insecure --max-time 15 | grep RDWAPage
        ErrorCode=$?
        echo ""$ErrorCode""
        if [ ""$ErrorCode"" = ""0"" ]; then
                echo ""$TARGET,TRUE"" >> results.csv
                echo ""$TARGET is RDWEB (TRUE)""
        else
                echo ""$TARGET,FALSE"" >> results.csv
                echo ""$TARGET is not RDWEB (FALSE)""
        fi
done
"
ga0KRZ4f,Minecraft Computer Craft Visitor Log,zkb1325,Lua,Thursday 4th of April 2024 11:47:11 PM CDT,"AreaCoords = {{x=6187, y=0, z=-10215}, {x=6078, y=255, z=-10116}}

local pd = peripheral.find(""playerDetector"")

if fs.exists(""visitorLog.txt"") then
    local visitorFile = fs.open(""visitorLog.txt"", ""r"")
    VisitorLog = visitorFile.readAll()
    visitorFile.close()
    VisitorLog = textutils.unserialize(VisitorLog)
else
    VisitorLog = {}
end
CurrentlyVisiting = {}

local function inArray(value, table)
    for i,v in ipairs(table) do
        if v == value then return true end
    end

    return false
end

local function saveVisitorLog()
    local visitorFile = fs.open(""visitorLog.txt"", ""w"")
    visitorFile.write(textutils.serialize(VisitorLog))
    visitorFile.close()
end

local function currentVisitors()
    -- return pd.getPlayersInRange(2)
    return pd.getPlayersInCoords(AreaCoords[1], AreaCoords[2])
end

local function updateActive()
    for i,v in pairs(CurrentlyVisiting) do
        if CurrentlyVisiting[i][""active""] and not inArray(i, currentVisitors()) then
            CurrentlyVisiting[i][""active""] = false
            VisitorLog[i][CurrentlyVisiting[i][""lastDate""]] = os.date(""%b %d %G %I:%M:%S %p"")
            saveVisitorLog()
            print(i.."" has left the area at ""..os.date(""%b %d %G %I:%M:%S %p""))
        end
    end
end

while true do
    sleep(1)
    for i,v in ipairs(currentVisitors()) do
        if v ~= ""zkb1325"" then
            if not CurrentlyVisiting[v] then
                CurrentlyVisiting[v] = {}
            end
            if not VisitorLog[v] then
                VisitorLog[v] = {}
            end
            if not CurrentlyVisiting[v][""active""] then
                CurrentlyVisiting[v][""active""] = true
                CurrentlyVisiting[v][""lastDate""] = os.date(""%b %d %G %I:%M:%S %p"")
                VisitorLog[v][CurrentlyVisiting[v][""lastDate""]] = """"
                saveVisitorLog()
                print(v.."" has entered the area at ""..CurrentlyVisiting[v][""lastDate""])
            end
        end
    end
    updateActive()
end"
Q1VYSEvC,Water Code,Noob1012,Arduino,Thursday 4th of April 2024 11:32:33 PM CDT,"// Uncomment the following line to enable serial debug output
//#define ENABLE_DEBUG

#ifdef ENABLE_DEBUG
       #define DEBUG_ESP_PORT Serial
       #define NODEBUG_WEBSOCKETS
       #define NDEBUG
#endif 

#include <Arduino.h>
#include <ESP8266WiFi.h>
#include ""SinricPro.h""
#include ""SinricProSwitch.h""

#include <map>

#define WIFI_SSID         ""Sujit""    
#define WIFI_PASS         ""Siva@Siva..1012""
#define APP_KEY           ""f093de90-d26a-4cc8-b750-9a4324ce7ffe""      // Should look like ""de0bxxxx-1x3x-4x3x-ax2x-5dabxxxxxxxx""
#define APP_SECRET        ""5abfdb4e-8b58-4b69-9bcc-ddddf2d1c6b4-107e5457-4981-4054-8d59-a7abc179e2b4""   // Should look like ""5f36xxxx-x3x7-4x3x-xexe-e86724a9xxxx-4c4axxxx-3x3x-x5xe-x9x3-333d65xxxxxx""

//Enter the device IDs here
#define device_ID_1   ""65ffdd0938f6f4a3cdc88b80""
#define device_ID_2   ""65ffdd2338f6f4a3cdc88bae""
#define device_ID_3   ""xxxxxxxxxxxxxxxxxxxxxxxx""
#define device_ID_4   ""xxxxxxxxxxxxxxxxxxxxxxxx""
#define device_ID_5   ""xxxxxxxxxxxxxxxxxxxxxxxx""

// define the GPIO connected with Relays and switches
#define RelayPin1 5  //D1 // Cutting
#define RelayPin2 4  //D2 // Pesticides
#define RelayPin3 14 //D5 // Seed Sowing
#define RelayPin4 12 //D6 // Extraa...
#define RelayPin5 13 //D7 // Spraying

#define SwitchPin1 10  //SD3
#define SwitchPin2 15   //D3 
#define SwitchPin3 0   //D3
#define SwitchPin4 2   //RX
#define SwitchPin5 16 //D3

#define wifiLed   16   //D0

// comment the following line if you use a toggle switches instead of tactile buttons
//#define TACTILE_BUTTON 1

#define BAUD_RATE   9600

#define DEBOUNCE_TIME 250

typedef struct {      // struct for the std::map below
  int relayPIN;
  int flipSwitchPIN;
} deviceConfig_t;


// this is the main configuration
// please put in your deviceId, the PIN for Relay and PIN for flipSwitch
// this can be up to N devices...depending on how much pin's available on your device ;)
// right now we have 4 devicesIds going to 4 relays and 4 flip switches to switch the relay manually
std::map<String, deviceConfig_t> devices = {
    //{deviceId, {relayPIN,  flipSwitchPIN}}
    {device_ID_1, {  RelayPin1, SwitchPin1 }},
    {device_ID_2, {  RelayPin2, SwitchPin2 }},
    {device_ID_3, {  RelayPin3, SwitchPin3 }},
    {device_ID_4, {  RelayPin4, SwitchPin4 }},
    {device_ID_5, {  RelayPin5, SwitchPin5 }}      
};

typedef struct {      // struct for the std::map below
  String deviceId;
  bool lastFlipSwitchState;
  unsigned long lastFlipSwitchChange;
} flipSwitchConfig_t;

std::map<int, flipSwitchConfig_t> flipSwitches;    // this map is used to map flipSwitch PINs to deviceId and handling debounce and last flipSwitch state checks
                                                  // it will be setup in ""setupFlipSwitches"" function, using informations from devices map

void setupRelays() { 
  for (auto &device : devices) {           // for each device (relay, flipSwitch combination)
    int relayPIN = device.second.relayPIN; // get the relay pin
    pinMode(relayPIN, OUTPUT);             // set relay pin to OUTPUT
    digitalWrite(relayPIN, HIGH);
  }
}

void setupFlipSwitches() {
  for (auto &device : devices)  {                     // for each device (relay / flipSwitch combination)
    flipSwitchConfig_t flipSwitchConfig;              // create a new flipSwitch configuration

    flipSwitchConfig.deviceId = device.first;         // set the deviceId
    flipSwitchConfig.lastFlipSwitchChange = 0;        // set debounce time
    flipSwitchConfig.lastFlipSwitchState = true;     // set lastFlipSwitchState to false (LOW)--

    int flipSwitchPIN = device.second.flipSwitchPIN;  // get the flipSwitchPIN

    flipSwitches[flipSwitchPIN] = flipSwitchConfig;   // save the flipSwitch config to flipSwitches map
    pinMode(flipSwitchPIN, INPUT_PULLUP);                   // set the flipSwitch pin to INPUT
  }
}

bool onPowerState(String deviceId, bool &state)
{
  Serial.printf(""%s: %s\r\n"", deviceId.c_str(), state ? ""on"" : ""off"");
  int relayPIN = devices[deviceId].relayPIN; // get the relay pin for corresponding device
  digitalWrite(relayPIN, !state);             // set the new relay state
  return true;
}

void handleFlipSwitches() {
  unsigned long actualMillis = millis();                                          // get actual millis
  for (auto &flipSwitch : flipSwitches) {                                         // for each flipSwitch in flipSwitches map
    unsigned long lastFlipSwitchChange = flipSwitch.second.lastFlipSwitchChange;  // get the timestamp when flipSwitch was pressed last time (used to debounce / limit events)

    if (actualMillis - lastFlipSwitchChange > DEBOUNCE_TIME) {                    // if time is > debounce time...

      int flipSwitchPIN = flipSwitch.first;                                       // get the flipSwitch pin from configuration
      bool lastFlipSwitchState = flipSwitch.second.lastFlipSwitchState;           // get the lastFlipSwitchState
      bool flipSwitchState = digitalRead(flipSwitchPIN);                          // read the current flipSwitch state
      if (flipSwitchState != lastFlipSwitchState) {                               // if the flipSwitchState has changed...
#ifdef TACTILE_BUTTON
        if (flipSwitchState) {                                                    // if the tactile button is pressed 
#endif      
          flipSwitch.second.lastFlipSwitchChange = actualMillis;                  // update lastFlipSwitchChange time
          String deviceId = flipSwitch.second.deviceId;                           // get the deviceId from config
          int relayPIN = devices[deviceId].relayPIN;                              // get the relayPIN from config
          bool newRelayState = !digitalRead(relayPIN);                            // set the new relay State
          digitalWrite(relayPIN, newRelayState);                                  // set the trelay to the new state

          SinricProSwitch &mySwitch = SinricPro[deviceId];                        // get Switch device from SinricPro
          mySwitch.sendPowerStateEvent(!newRelayState);                            // send the event
#ifdef TACTILE_BUTTON
        }
#endif      
        flipSwitch.second.lastFlipSwitchState = flipSwitchState;                  // update lastFlipSwitchState
      }
    }
  }
}

void setupWiFi()
{
  Serial.printf(""\r\n[Wifi]: Connecting"");
  WiFi.begin(WIFI_SSID, WIFI_PASS);

  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.printf(""."");
    delay(250);
  }
  digitalWrite(wifiLed, LOW);
  Serial.printf(""connected!\r\n[WiFi]: IP-Address is %s\r\n"", WiFi.localIP().toString().c_str());
}

void setupSinricPro()
{
  for (auto &device : devices)
  {
    const char *deviceId = device.first.c_str();
    SinricProSwitch &mySwitch = SinricPro[deviceId];
    mySwitch.onPowerState(onPowerState);
  }

  SinricPro.begin(APP_KEY, APP_SECRET);
  SinricPro.restoreDeviceStates(true);
}

void setup()
{
  Serial.begin(BAUD_RATE);

  pinMode(wifiLed, OUTPUT);
  digitalWrite(wifiLed, HIGH);

  setupRelays();
  setupFlipSwitches();
  setupWiFi();
  setupSinricPro();
}

void loop()
{
  SinricPro.handle();
  handleFlipSwitches();
}"
UN4RdMmh,Reciever Code,Noob1012,Arduino,Thursday 4th of April 2024 11:29:12 PM CDT,"#include <RH_ASK.h> // Include RadioHead Amplitude Shift Keying Library
#include <SPI.h>    // Include dependant SPI Library

// Create Amplitude Shift Keying Object
RH_ASK rf_driver;

// Define buzzer pin
const int BUZZER_PIN = 7; // Example: Change 7 to the buzzer pin you're using

// Define relay pin
const int RELAY_PIN = 8; // Example: Change 8 to the relay pin you're using

void setup()
{
    // Initialize ASK Object
    rf_driver.init();

    // Setup Serial Monitor
    Serial.begin(9600);

    // Initialize buzzer pin
    pinMode(BUZZER_PIN, OUTPUT);

    // Initialize relay pin
    pinMode(RELAY_PIN, OUTPUT);
}

void loop()
{
    // Set buffer to size of expected message
    uint8_t buf[12];
    uint8_t buflen = sizeof(buf);

    // Check if received packet is correct size
    if (rf_driver.recv(buf, &buflen))
    {
        // Message received with valid checksum
        Serial.print(""Message Received: "");
        Serial.println((char *)buf);

        // Activate the buzzer and relay
        digitalWrite(BUZZER_PIN, HIGH);
        digitalWrite(RELAY_PIN, LOW);
        
        // Delay to keep the buzzer and relay activated
        delay(1000); // Adjust as needed
    }
    else
    {
        // No message received, deactivate the buzzer and relay
        digitalWrite(BUZZER_PIN, LOW);
        digitalWrite(RELAY_PIN, HIGH);
    }
}"
TQeJT62L,Transmitter Code,Noob1012,Arduino,Thursday 4th of April 2024 11:28:33 PM CDT,"#include <RH_ASK.h>
#include <SPI.h> // Not actually used but needed to compile

RH_ASK driver;

// Define the pin to which your MQ3 sensor is connected
const int MQ3_PIN = A0;

void setup()
{
    Serial.begin(9600);   // Debugging only
    if (!driver.init())
        Serial.println(""init failed"");
}

void loop()
{
    // Read the value from the gas sensor
    int gasValue = analogRead(MQ3_PIN);

    Serial.print(""Analog Value: "");
    Serial.println(gasValue);
  
    // If gas value is above a certain threshold, send a message
    if (gasValue > 15) { // Adjust threshold as needed
        const char *msg = ""Gas Detected!"";
        driver.send((uint8_t *)msg, strlen(msg));
        driver.waitPacketSent();
        Serial.println(""Gas Detected!""); // For debugging
    }
  
    delay(200); // Adjust delay as needed
}"
CnDLyBH6,phinal,fsoc131y,Python,Thursday 4th of April 2024 09:47:34 PM CDT,"1. String Functions:
def Concatenation():
    str1 = ""Hello""
    str2 = ""World""
    result_plus = str1 + "" "" + str2
    print(""Concatenation Example of Hello + World"")
    print(result_plus)
    print(""\n"")

def Reverse():
    print(""Reverse Example"")
    my_str = ""Hello!""
    reversed_str = """"
    for char in my_str:
        reversed_str = char + reversed_str
    print(reversed_str)
    print(""\n"")

def Replication():
    print(""Replication Example"")
    my_str = ""Py""
    replicated_str = """"
    for _ in range(5):
        replicated_str += my_str
    print(replicated_str)
    print(""\n"")

def Slicing():
    print(""Slicing Example"")
    my_str = ""Hello, World!""
    substring = my_str[7:12]
    print(substring)
    print(""\n"")

def Equals():
    print(""Equals Example"")
    str1 = ""Hello""
    str2 = ""Hello""
    if str1 != str2:
        print(""The strings are not equal"")
        print(""\n"")
    else:
        print(""The strings are equal"")
        print(""\n"")

def iterate_string():
    print(""Iteration Example"")
    my_string = ""Hello, world!""
    for char in my_string:
        print(char)
    print(""\n"")

def substring():
    print(""Substring Example"")
    my_string = ""Hello, World!""
    substring = """"
    for i in range(6, 10):
        substring += my_string[i]
    print(substring)

Concatenation()
Reverse()
Replication()
Slicing()
Equals()
iterate_string()
substring()
print(""\nAll actions performed successfully!"")


2. Regex:
import re

print(""Matching a pattern"")
pattern = r""apple""
text = ""I like apples and oranges.""

print(""Using re.search() to find the first occurrence of the pattern"")
match = re.search(pattern, text)
if match:
    print(f""Pattern '{pattern}' found at index {match.start()} in the text."")
else:
    print(f""Pattern '{pattern}' not found in the text."")

print(""\nExtracting matches using groups"")
pattern_with_groups = r""(\w+) (\w+)""
name_text = ""John Doe, Jane Smith""

print(""Using re.findall() to find all occurrences of the pattern with groups"")
matches = re.findall(pattern_with_groups, name_text)
for match in matches:
    first_name, last_name = match
    print(f""First Name: {first_name}, Last Name: {last_name}"")

print(""\nReplacing matches"")
pattern_to_replace = r""apple|orange""
replacement_text = ""fruit""

print(""Using re.sub() to replace all occurrences of the pattern"")
updated_text = re.sub(pattern_to_replace, replacement_text, text)
print(f""Original Text: {text}"")
print(f""Updated Text: {updated_text}"")

3. Regex Tkinter:
import tkinter as tk
import re

def validate_phone_number():
    phone = phone_entry.get()
    phone_pattern = r""^\d{10}$""
    if re.match(phone_pattern, phone):
        result_label.config(text=""Valid Phone Number"", fg=""green"")
    else:
        result_label.config(text=""Invalid Phone Number"", fg=""red"")

root = tk.Tk()
root.title(""Phone Number Validation Form"")

tk.Label(root, text=""Phone Number:"").grid(row=0, column=0, sticky=""w"", padx=10, pady=5)
phone_entry = tk.Entry(root)
phone_entry.grid(row=0, column=1, padx=10, pady=5)

validate_button = tk.Button(root, text=""Validate"", command=validate_phone_number)
validate_button.grid(row=1, column=0, columnspan=2, pady=10)

result_label = tk.Label(root, text="""", fg=""black"")
result_label.grid(row=2, column=0, columnspan=2, pady=5)

root.mainloop()

4. Tkinter Calculator
import tkinter as tk

def on_button_click(value):
    current = entry.get()
    entry.delete(0, tk.END)
    entry.insert(tk.END, current + value)

def clear_entry():
    entry.delete(0, tk.END)

def calculate_result():
    try:
        result = eval(entry.get())
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, ""Error"")

root = tk.Tk()
root.title(""Simple Calculator"")

entry = tk.Entry(root, width=20, font=('Arial', 16), borderwidth=5)
entry.grid(row=0, column=0, columnspan=4, padx=10, pady=10)

buttons = [
    '7', '8', '9', '/',
    '4', '5', '6', '*',
    '1', '2', '3', '-',
    '0', '.', '=', '+'
]

row_val = 1
col_val = 0
for button in buttons:
    tk.Button(root, text=button, padx=20, pady=20, font=('Arial', 14),
              command=lambda b=button: on_button_click(b) if b != '=' else calculate_result()).grid(row=row_val, column=col_val)
    col_val += 1
    if col_val > 3:
        col_val = 0
        row_val += 1

tk.Button(root, text='C', padx=20, pady=20, font=('Arial', 14), command=clear_entry).grid(row=row_val, column=col_val, columnspan=2)

root.mainloop()

5. RW Ops with File
import urllib.request
import os

file_name = ""E:\Study\Python\exps\CountryWiseAirport.csv""

with open(file_name, 'rb') as f:
    binary_data = f.read()

binary_file_name = ""airport.bin""
with open(binary_file_name, 'wb') as f:
    f.write(binary_data)

text_file_name = ""airport.txt""
with open(text_file_name, 'w') as f:
    f.write(binary_data.decode('utf-8'))

def print_file_content(file_path):
    with open(file_path, 'rb') as f:
        content = f.read().decode('utf-8')
        print(content)

print(""Initial Binary File Content:"")
print_file_content(binary_file_name)
print(""\nInitial Text File Content:"")
print_file_content(text_file_name)

with open(binary_file_name, 'ab') as f:
    f.write(b""\nThis is an appended line for binary file."")
    print(""\nThe binary file has been appended."")

with open(text_file_name, 'a') as f:
    f.write(""\nThis is an appended line for text file."")
    print(""\nThe text file has been appended."")

print(""\nBinary File Content after Append:"")
print_file_content(binary_file_name)
print(""\nText File Content after Append:"")
print_file_content(text_file_name)

new_binary_data = b""This is new binary data.""
with open(binary_file_name, 'wb') as f:
    f.write(new_binary_data)
    print(""\nThe file has been written."")

new_text_data = ""This is new text data.""
with open(text_file_name, 'w') as f:
    f.write(new_text_data)
    print(""\nThe file has been written."")

print(""\nBinary File Content after Write:"")
print_file_content(binary_file_name)
print(""\nText File Content after Write:"")
print_file_content(text_file_name)

6. Collect data to CSV:
import csv

def collect_marks():
    marks_data = []
    for i in range(3):
        student_name = input(f""\nEnter name for student {i+1}: "")
        marks = [student_name]
        for j in range(3):
            subject = input(f""Enter marks for subject {j+1}: "")
            marks.append(subject)
        marks_data.append(marks)
    return marks_data

def write_to_csv(data):
    file = open('student_marks1.csv', 'w', newline='')
    writer = csv.writer(file)
    writer.writerow([""Student Name""] + [f""Subject {i}"" for i in range(1, 6)])
    for marks in data:
        writer.writerow(marks)
    file.close()

def read_from_csv():
    file = open('student_marks1.csv', newline='')
    reader = csv.reader(file)
    for row in reader:
        print(row)
    file.close()

marks_data = collect_marks()

write_to_csv(marks_data)

read_from_csv()

7. CRUD Ops:
import mysql.connector
import csv

mydb = mysql.connector.connect(
    host='localhost',
    user='root',
    password='rootpw',
    database='student'
)
cur = mydb.cursor()
cur.execute('''create table if not exists student_mark(
        name VARCHAR(25),
        subject1 int,
        subject2 int,
        subject3 int,
        subject4 int,
        subject5 int)'''
            )


def im_csv_to_my(file_path):
    with open(file_path, newline='') as csvf:
        reader = csv.reader(csvf)
        next(reader)
        for row in reader:
            name, subject1, subject2, subject3, subject4, subject5 = row
            cur.execute('''
                        insert into student_mark(name, subject1, subject2, subject3, subject4, subject5)
                        values(%s,%s,%s,%s,%s,%s)
                        ''', (name, int(subject1), int(subject2), int(subject3), int(subject4), int(subject5))
                        )
    mydb.commit()

im_csv_to_my('E:\\Study\\Python\\exps\\student_marks.csv')
cur.execute('select * from student_mark')
rows = cur.fetchall()
for row in rows:
    print(row)


def update_marks(name, subject1, subject2, subject3, subject4, subject5):
    cur.execute('''
                update student_mark set subject1=%s, subject2=%s, subject3=%s, subject4=%s, subject5=%s
                where name=%s
                ''', (subject1, subject2, subject3, subject4, subject5, name))
    print(f""\nUpdate successful for student {name}"")
    mydb.commit()

update_marks('Rishi', 58, 95, 85, 85, 54)
cur.execute('select * from student_mark')
rows = cur.fetchall()
for row in rows:
    print(row)


def del_marks(name):
    try:
        dquery = 'delete from student_mark where name=%s'
        cur.execute(dquery, (name,))
        print(f""\nDeleted marks for student {name}"")
    except mysql.connector.Error as err:
        print(f""\nFailed to delete marks for student {name}:{err}"")
    mydb.commit()

del_marks('Rishi')
cur.execute('select * from student_mark')
rows = cur.fetchall()
for row in rows:
    print(row)

8. Inner Join:
import mysql.connector
import csv

mydb = mysql.connector.connect(
    host='localhost',
    user='root',
    password='rootpw',
    database='student'
)
cur=mydb.cursor()
cur.execute('''
            create table if not exists student_details
            (name varchar(25),age int,grade varchar(10))
            ''')
def inner_join_students():
    query = '''SELECT student_mark.name, student_mark.subject1, student_mark.subject2, student_mark.subject3, student_mark.subject4, student_mark.subject5, student_details.age, student_details.grade
               FROM student_mark
               INNER JOIN student_details ON student_mark.name = student_details.name'''
    cur.execute(query)
    rows = cur.fetchall()
    for row in rows:
        print(row)

inner_join_students()


"
4ay455Ug,Asli: preloader image indicator,artemsemkin,PHP,Thursday 4th of April 2024 09:34:41 PM CDT,"<?php

// 1. Create file in your child theme: /wp-content/themes/asli-child/template-parts/preloader/preloader.php with the contents below.
// 2. Put the correct URI to your loading gif to the <img> below.
// 3. Enable theme's preloader in Elementor Site settings and adjust ""Final Delay Before Displaying Page"" under ""Animation"" tab as you need.

$defaults = array(
  'beforeLoadingText'            => arts_get_kit_settings(
    'preloader_before_loading_text',
    esc_html__( 'Loading...', 'asli' )
  ),
  'afterLoadingText'             => arts_get_kit_settings(
    'preloader_after_loading_text',
    esc_html__( 'Filmmaker & Photographer', 'asli' )
  ),
  'headingText'                  => arts_get_kit_settings(
    'preloader_heading_text',
    esc_html__( 'Asli Wells', 'asli' )
  ),
  'counterEnabled'               => arts_get_kit_settings( 'preloader_counter_enabled', true ),
  'slidingImagesEnabled'         => arts_get_kit_settings( 'preloader_sliding_images_enabled', true ),
  'slidingImages'                => arts_get_kit_settings( 'preloader_sliding_images' ),
  'slidingImagesSize'            => arts_get_kit_settings( 'preloader_sliding_images_size', 'full' ),
  'slidingImagesCustomDimension' => arts_get_kit_settings( 'preloader_sliding_images_custom_dimension', null ),
);
$args     = wp_parse_args( $args, $defaults );

$attributes = array(
  'class' => array(
    'section-fullheight',
    'text-center',
  ),
  'id'    => 'page-preloader',
);

$attributes = arts_add_component_attributes(
  $attributes,
  array(
    'name'         => 'Preloader',
    'hasAnimation' => true,
  )
);

?>

<div <?php arts_print_attributes( $attributes ); ?>>
  <div class=""preloader__wrapper js-preloader__wrapper"">
    <!-- Adjust ""src"" to the path to your image -->
    <img src=""https://PATH_TO_YOUR.GIF"" alt="""" class=""preloader__image"">
    <?php // get_template_part( 'template-parts/preloader/partials/fast-sliding-images', null, $args ); ?>
    <?php // get_template_part( 'template-parts/preloader/partials/heading', null, $args ); ?>
    <?php // get_template_part( 'template-parts/preloader/partials/counter', null, $args ); ?>
    <?php // get_template_part( 'template-parts/preloader/partials/bottom-content', null, $args ); ?>
  </div>
</div>"
jHW2RpMy,Vehicle legends collect all eggs 2024 working,BluezModZ,Lua,Thursday 4th of April 2024 08:37:13 PM CDT,"--Vehicle legends 2024 
--collect all eggs script
--Made By BluezModZ 

--teleport to eggs settings
value = 2 --this will change the teleport time in seconds change to whatever you want


local t = game.Players.LocalPlayer.Character

game.StarterGui:SetCore(""SendNotification"", {
Title = ""do not enter a car""; -- the title 
Text = ""teleporting you to eggs""; -- what the text says 
Duration = 5; -- how long the notification should in secounds
})


--egg section 1 10 eggs
wait(5)
t.HumanoidRootPart.CFrame = CFrame.new(157.9331512451172, 17.43636131286621, -1975.268310546875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(-729.5354614257812, 7.45326566696167, -545.374267578125)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(-195.67356872558594, -12.001975059509277, -1811.5477294921875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(-296.9040222167969, -13.041971206665039, -3857.17041015625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(722.5075073242188, -12.041982650756836, -4421.24560546875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(1431.2686767578125, 29.958118438720703, -4303.1201171875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3020.728271484375, 17.07501792907715, -2174.48291015625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3817.294189453125, 17.08024787902832, -2344.740234375)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(4522.31298828125, 2.451150417327881, -2841.5849609375)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(4601.25732421875, 18.18605613708496, -1635.3306884765625)

--egg section 2 10 eggs
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(4897.49462890625, 68.68203735351562, -740.4366455078125)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3765.448974609375, 68.6660385131836, -458.4580993652344)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(2384.94091796875, 68.6660385131836, -198.5349578857422)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(1121.949951171875, 18.16605567932129, 478.1548156738281)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(1028.8880615234375, 18.243053436279297, 1903.0977783203125)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(2609.130615234375, 18.16605567932129, 1901.2156982421875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(2401.00341796875, 18.16605567932129, 939.90673828125)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(164.65011596679688, 18.207033157348633, 1221.9417724609375)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(-95.55838012695312, 20.076480865478516, -254.10060119628906)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(-1590.2047119140625, 18.16605567932129, 2025.5269775390625)

--egg section 3 10 eggs
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(-647.56689453125, 18.16605567932129, 2618.85791015625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3053.210205078125, 18.176055908203125, 1124.86572265625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(4652.47412109375, 18.33355140686035, 913.6852416992188)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(4158.06884765625, 18.20482063293457, 1321.3572998046875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(4501.68408203125, 18.176057815551758, 2517.174560546875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3959.111083984375, 18.243221282958984, 2161.190673828125)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(197.4508819580078, 18.243053436279297, -2406.249267578125)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(2535.484619140625, -11.672797203063965, -2786.853271484375)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3458.0341796875, 18.246055603027344, -1343.736083984375)

--egg section 4 10 eggs 
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3039.948486328125, 18.2110538482666, -1144.3763427734375)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3970.64697265625, 18.2110538482666, -1157.6734619140625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(4030.138916015625, 18.186555862426758, -1618.294677734375)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3898.072021484375, 8.265899658203125, -3102.9677734375)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(2006.3302001953125, 18.243053436279297, -1732.552734375)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(1469.232177734375, 18.18325424194336, -2027.7410888671875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(1105.93798828125, 18.198055267333984, -1237.4302978515625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(772.2007446289062, 18.198055267333984, -1507.6495361328125)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(1903.01806640625, 18.2110538482666, -728.3853759765625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(1344.59228515625, 18.243053436279297, -787.3316650390625)

--egg section 5 8 eggs
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(900.4057006835938, 18.22805404663086, -911.5283813476562)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(4006.195556640625, 106.64552307128906, -161.09510803222656)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(3918.99951171875, 18.243053436279297, 78.9574203491211)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(5831.1171875, -13.723939895629883, 1619.0484619140625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(5665.49072265625, -13.82394027709961, 719.8348388671875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(-906.4235229492188, 17.119842529296875, 1179.5662841796875)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(298.70819091796875, 17.269136428833008, -965.193603515625)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(23.922527313232422, 17.268659591674805, -823.6571655273438)
wait(value)
t.HumanoidRootPart.CFrame = CFrame.new(-365.5156555175781, 17.344606399536133, 341.99951171875)

game.StarterGui:SetCore(""SendNotification"", {
Title = ""vehicle legends""; -- the title 
Text = ""all eggs have been collected!""; -- what the text says 
Duration = 5; -- how long the notification should in secounds
})

"
jUbXb0KY,mantine pvp Filter,name8888less,JavaScript,Thursday 4th of April 2024 08:32:58 PM CDT,"javascript:$.getScript(""https://cdn.jsdelivr.net/gh/name8888less/sgpokemap-addons@main/mantine-pvp-filter.js"", function(data, textStatus, jqxhr) {});
"
ZarHvVQG,DNMPB28-01-test 4x seven segment,hwthinker,Arduino,Thursday 4th of April 2024 08:22:35 PM CDT,"#define uchar unsigned char
#define uint unsigned int

const int latchPin = 5, clockPin = 6, dataPin = 3, OE_595 = 4;

uchar TUBE_SEG[] = {
  0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, // 0-9
  0x77, 0x7c, 0x39, 0x58, 0x5e, 0x79, 0x71, 0x76, 0x74, 0x38, //  A, b, C, c, d, E, F, H, h, L
  0x54, 0x37, 0x5c, 0x73, 0x50, 0x78, 0x3e, 0x40, 0x00        // n, N, o, P, r, t, U, -, (spasi)
};

uchar TUBE_NUM[8] = {0xfe, 0xff, 0xfd, 0xff, 0xfb, 0xff, 0xf7, 0xff};
uchar dat_buf[8], dat, com_num;

void TubeDisplayOneBit() {
  uchar tube_dat = TUBE_SEG[dat], bit_num = TUBE_NUM[com_num];

  digitalWrite(latchPin, LOW);
  shiftOut(dataPin, clockPin, MSBFIRST, bit_num);
  shiftOut(dataPin, clockPin, MSBFIRST, tube_dat);
  digitalWrite(latchPin, HIGH);
}

void TubeDisplay4Bit(int num) {
  if (com_num < 7) com_num++;
  else com_num = 0;

  dat = dat_buf[com_num];
  TubeDisplayOneBit();

  dat_buf[6] = num % 10;
  num /= 10;
  dat_buf[4] = num % 10;
  num /= 10;
  dat_buf[2] = num % 10;
  num /= 10;
  dat_buf[0] = num % 10;
}

void setup() {
  pinMode(latchPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
  pinMode(OE_595, OUTPUT);
  delay(100);
  digitalWrite(OE_595, LOW);
}

void loop() {
  TubeDisplay4Bit(6543);
}"
GrBQPQgw,Spectrum Lava Maker,FreetheFr0gs,Lua,Thursday 4th of April 2024 07:43:06 PM CDT,"while true do
	local success, data = turtle.inspect()

	if data.name == ""minecraft:fire"" then
		redstone.setOutput(""back"", false)
		turtle.place()
		turtle.suckDown(1)
	end

	if success == false then
	redstone.setOutput(""back"", false)
		turtle.place()
		turtle.suckDown(1)
	end

end"
x8wmcS6P,2024-04-04_stats.json,rdp_snitch,JSON,Thursday 4th of April 2024 07:18:12 PM CDT,"{
  ""ip"": {
    ""45.227.254.54"": 6,
    ""81.19.135.47"": 9,
    ""103.57.220.167"": 3,
    ""39.105.102.119"": 9,
    ""58.218.204.183"": 9,
    ""142.4.218.114"": 3,
    ""45.227.254.9"": 12,
    ""213.32.39.44"": 3,
    ""205.210.31.254"": 9,
    ""87.251.75.145"": 12,
    ""159.65.111.44"": 12,
    ""104.237.141.80"": 3,
    ""112.4.139.162"": 6,
    ""194.28.115.243"": 9,
    ""185.170.144.3"": 6,
    ""159.89.238.156"": 12,
    ""64.225.40.165"": 3,
    ""205.210.31.143"": 9,
    ""194.165.16.37"": 6,
    ""103.149.27.222"": 6,
    ""116.140.196.215"": 3,
    ""38.255.43.130"": 18,
    ""198.135.49.131"": 3,
    ""96.8.115.25"": 3,
    ""91.238.181.16"": 6,
    ""205.210.31.98"": 9,
    ""212.70.149.146"": 3,
    ""196.190.117.7"": 3,
    ""199.45.154.23"": 3,
    ""62.204.41.222"": 6,
    ""103.20.97.235"": 6,
    ""80.94.95.121"": 18,
    ""205.210.31.244"": 9,
    ""92.51.2.11"": 3,
    ""52.149.219.213"": 3
  },
  ""asn"": {
    ""AS267784"": 18,
    ""AS209588"": 12,
    ""AS135905"": 3,
    ""AS37963"": 9,
    ""AS4134"": 9,
    ""AS16276"": 6,
    ""AS396982"": 36,
    ""AS208091"": 12,
    ""AS14061"": 27,
    ""AS63949"": 3,
    ""AS56046"": 6,
    ""AS50968"": 9,
    ""AS197414"": 6,
    ""AS48721"": 6,
    ""AS135377"": 6,
    ""AS4837"": 3,
    ""AS213122"": 18,
    ""AS396073"": 3,
    ""AS36352"": 3,
    ""AS49434"": 6,
    ""AS204428"": 21,
    ""AS24757"": 3,
    ""AS398722"": 3,
    ""AS59425"": 6,
    ""AS150880"": 6,
    ""AS8075"": 3
  },
  ""isp"": {
    ""Flyservers S.A."": 36,
    ""INET"": 3,
    ""Hangzhou Alibaba Advertising Co"": 9,
    ""Chinanet"": 9,
    ""OVH SAS"": 6,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 18,
    ""DigitalOcean, LLC"": 27,
    ""Akamai Technologies, Inc."": 3,
    ""China Mobile Communications Corporation"": 6,
    ""Hostmaster, Ltd."": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""China Unicom CHINA169 Network"": 3,
    ""Hyonix LLC"": 18,
    ""Majestic Hosting Solutions, LLC"": 3,
    ""HostPapa"": 3,
    ""Datacenter location PAR1 France"": 6,
    ""SS-Net"": 21,
    ""Ethiotelecom"": 3,
    ""Censys, Inc."": 3,
    ""Horizon LLC"": 6,
    ""Fast Byte Fast Data Company Limited"": 6,
    ""Microsoft Corporation"": 3
  },
  ""org"": {
    ""UAB Host Baltic"": 18,
    ""Alviva Holding Limited"": 12,
    ""iNET Media Company Limited"": 3,
    ""Aliyun Computing Co., LTD"": 9,
    ""Chinanet JS"": 9,
    ""OVH Hosting, Inc."": 3,
    ""ONYPHE"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 12,
    ""DigitalOcean, LLC"": 15,
    ""Linode"": 3,
    ""China Mobile Communications Corporation"": 6,
    ""Network Systems Ltd"": 9,
    ""Xhostis"": 6,
    ""Digital Ocean"": 12,
    ""Flyservers S.A"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""China United Network Communications Corporation Limited"": 3,
    ""Hyonix LLC"": 18,
    ""Majestic Hosting Solutions, LLC"": 3,
    ""Michael Charlery"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""4Media Ltd"": 3,
    ""Unknown"": 3,
    ""Censys, Inc."": 3,
    ""Horizon LLC"": 6,
    ""FASTBYTE"": 6,
    ""Unmanaged LTD"": 18,
    ""Microsoft Azure Cloud (eastus)"": 3
  },
  ""regionName"": {
    ""Vilnius"": 18,
    ""Hesse"": 12,
    ""Hanoi"": 3,
    ""Beijing"": 12,
    ""Jiangsu"": 15,
    ""Quebec"": 3,
    ""Hauts-de-France"": 3,
    ""California"": 69,
    ""North Holland"": 27,
    ""Texas"": 9,
    ""New Jersey"": 12,
    ""Kaunas"": 6,
    ""Kowloon"": 6,
    ""\u00cele-de-France"": 6,
    ""Sliven"": 3,
    ""Addis Ababa"": 3,
    ""New York"": 3,
    ""Moscow"": 6,
    ""Ho Chi Minh"": 6,
    ""Budapest"": 18,
    ""Virginia"": 3
  },
  ""country"": {
    ""Lithuania"": 24,
    ""Germany"": 12,
    ""Vietnam"": 9,
    ""China"": 27,
    ""Canada"": 3,
    ""France"": 9,
    ""United States"": 96,
    ""The Netherlands"": 27,
    ""Hong Kong"": 6,
    ""Bulgaria"": 3,
    ""Ethiopia"": 3,
    ""Russia"": 6,
    ""Hungary"": 18
  },
  ""account"": {
    ""Test"": 30,
    ""Domain"": 27,
    ""hello"": 57,
    ""Administrator"": 6,
    ""Administr"": 39,
    ""LAzMmQvWO"": 3,
    ""RUzuvF"": 3,
    ""fvMDbb"": 3,
    ""py7rg35i"": 12,
    ""beio"": 6,
    ""(empty)"": 15,
    ""rkakzxjj"": 12,
    ""sjLzaDNbs"": 3,
    ""JRAEdR"": 3,
    ""zlUxGk"": 3,
    ""QLwdasv"": 3,
    ""PVqnzEmBs"": 3,
    ""bRQrgf"": 3,
    ""OBbZkd"": 3,
    ""jZLppxquX"": 3,
    ""bBxsax"": 3,
    ""hoXVgA"": 3
  },
  ""keyboard"": {
    ""Unknown"": 243
  },
  ""client_build"": {
    ""Unknown"": 243
  },
  ""client_name"": {
    ""Unknown"": 243
  },
  ""ip_type"": {
    ""Unknown"": 126,
    ""hosting"": 87,
    ""hosting & proxy"": 24,
    ""mobile"": 6
  }
}"
m5K3nRut,2024-04-04_stats.json,rdp_snitch,JSON,Thursday 4th of April 2024 07:16:06 PM CDT,"{
  ""ip"": {
    ""45.227.254.54"": 4,
    ""81.19.135.47"": 6,
    ""103.57.220.167"": 2,
    ""39.105.102.119"": 6,
    ""58.218.204.183"": 6,
    ""142.4.218.114"": 2,
    ""45.227.254.9"": 8,
    ""213.32.39.44"": 2,
    ""205.210.31.254"": 6,
    ""87.251.75.145"": 8,
    ""159.65.111.44"": 8,
    ""104.237.141.80"": 2,
    ""112.4.139.162"": 4,
    ""194.28.115.243"": 6,
    ""185.170.144.3"": 4,
    ""159.89.238.156"": 8,
    ""64.225.40.165"": 2,
    ""205.210.31.143"": 6,
    ""194.165.16.37"": 4,
    ""103.149.27.222"": 4,
    ""116.140.196.215"": 2,
    ""38.255.43.130"": 12,
    ""198.135.49.131"": 2,
    ""96.8.115.25"": 2,
    ""91.238.181.16"": 4,
    ""205.210.31.98"": 6,
    ""212.70.149.146"": 2,
    ""196.190.117.7"": 2,
    ""199.45.154.23"": 2,
    ""62.204.41.222"": 4,
    ""103.20.97.235"": 4,
    ""80.94.95.121"": 12,
    ""205.210.31.244"": 6,
    ""92.51.2.11"": 2,
    ""52.149.219.213"": 2
  },
  ""asn"": {
    ""AS267784"": 12,
    ""AS209588"": 8,
    ""AS135905"": 2,
    ""AS37963"": 6,
    ""AS4134"": 6,
    ""AS16276"": 4,
    ""AS396982"": 24,
    ""AS208091"": 8,
    ""AS14061"": 18,
    ""AS63949"": 2,
    ""AS56046"": 4,
    ""AS50968"": 6,
    ""AS197414"": 4,
    ""AS48721"": 4,
    ""AS135377"": 4,
    ""AS4837"": 2,
    ""AS213122"": 12,
    ""AS396073"": 2,
    ""AS36352"": 2,
    ""AS49434"": 4,
    ""AS204428"": 14,
    ""AS24757"": 2,
    ""AS398722"": 2,
    ""AS59425"": 4,
    ""AS150880"": 4,
    ""AS8075"": 2
  },
  ""isp"": {
    ""Flyservers S.A."": 24,
    ""INET"": 2,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Chinanet"": 6,
    ""OVH SAS"": 4,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 12,
    ""DigitalOcean, LLC"": 18,
    ""Akamai Technologies, Inc."": 2,
    ""China Mobile Communications Corporation"": 4,
    ""Hostmaster, Ltd."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""China Unicom CHINA169 Network"": 2,
    ""Hyonix LLC"": 12,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""HostPapa"": 2,
    ""Datacenter location PAR1 France"": 4,
    ""SS-Net"": 14,
    ""Ethiotelecom"": 2,
    ""Censys, Inc."": 2,
    ""Horizon LLC"": 4,
    ""Fast Byte Fast Data Company Limited"": 4,
    ""Microsoft Corporation"": 2
  },
  ""org"": {
    ""UAB Host Baltic"": 12,
    ""Alviva Holding Limited"": 8,
    ""iNET Media Company Limited"": 2,
    ""Aliyun Computing Co., LTD"": 6,
    ""Chinanet JS"": 6,
    ""OVH Hosting, Inc."": 2,
    ""ONYPHE"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 8,
    ""DigitalOcean, LLC"": 10,
    ""Linode"": 2,
    ""China Mobile Communications Corporation"": 4,
    ""Network Systems Ltd"": 6,
    ""Xhostis"": 4,
    ""Digital Ocean"": 8,
    ""Flyservers S.A"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""China United Network Communications Corporation Limited"": 2,
    ""Hyonix LLC"": 12,
    ""Majestic Hosting Solutions, LLC"": 2,
    ""Michael Charlery"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""4Media Ltd"": 2,
    ""Unknown"": 2,
    ""Censys, Inc."": 2,
    ""Horizon LLC"": 4,
    ""FASTBYTE"": 4,
    ""Unmanaged LTD"": 12,
    ""Microsoft Azure Cloud (eastus)"": 2
  },
  ""regionName"": {
    ""Vilnius"": 12,
    ""Hesse"": 8,
    ""Hanoi"": 2,
    ""Beijing"": 8,
    ""Jiangsu"": 10,
    ""Quebec"": 2,
    ""Hauts-de-France"": 2,
    ""California"": 46,
    ""North Holland"": 18,
    ""Texas"": 6,
    ""New Jersey"": 8,
    ""Kaunas"": 4,
    ""Kowloon"": 4,
    ""\u00cele-de-France"": 4,
    ""Sliven"": 2,
    ""Addis Ababa"": 2,
    ""New York"": 2,
    ""Moscow"": 4,
    ""Ho Chi Minh"": 4,
    ""Budapest"": 12,
    ""Virginia"": 2
  },
  ""country"": {
    ""Lithuania"": 16,
    ""Germany"": 8,
    ""Vietnam"": 6,
    ""China"": 18,
    ""Canada"": 2,
    ""France"": 6,
    ""United States"": 64,
    ""The Netherlands"": 18,
    ""Hong Kong"": 4,
    ""Bulgaria"": 2,
    ""Ethiopia"": 2,
    ""Russia"": 4,
    ""Hungary"": 12
  },
  ""account"": {
    ""Test"": 20,
    ""Domain"": 18,
    ""hello"": 38,
    ""Administrator"": 4,
    ""Administr"": 26,
    ""LAzMmQvWO"": 2,
    ""RUzuvF"": 2,
    ""fvMDbb"": 2,
    ""py7rg35i"": 8,
    ""beio"": 4,
    ""(empty)"": 10,
    ""rkakzxjj"": 8,
    ""sjLzaDNbs"": 2,
    ""JRAEdR"": 2,
    ""zlUxGk"": 2,
    ""QLwdasv"": 2,
    ""PVqnzEmBs"": 2,
    ""bRQrgf"": 2,
    ""OBbZkd"": 2,
    ""jZLppxquX"": 2,
    ""bBxsax"": 2,
    ""hoXVgA"": 2
  },
  ""keyboard"": {
    ""Unknown"": 162
  },
  ""client_build"": {
    ""Unknown"": 162
  },
  ""client_name"": {
    ""Unknown"": 162
  },
  ""ip_type"": {
    ""Unknown"": 84,
    ""hosting"": 58,
    ""hosting & proxy"": 16,
    ""mobile"": 4
  }
}"
xSmm2QWg,2024-04-04_stats.json,rdp_snitch,JSON,Thursday 4th of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""45.227.254.54"": 2,
    ""81.19.135.47"": 3,
    ""103.57.220.167"": 1,
    ""39.105.102.119"": 3,
    ""58.218.204.183"": 3,
    ""142.4.218.114"": 1,
    ""45.227.254.9"": 4,
    ""213.32.39.44"": 1,
    ""205.210.31.254"": 3,
    ""87.251.75.145"": 4,
    ""159.65.111.44"": 4,
    ""104.237.141.80"": 1,
    ""112.4.139.162"": 2,
    ""194.28.115.243"": 3,
    ""185.170.144.3"": 2,
    ""159.89.238.156"": 4,
    ""64.225.40.165"": 1,
    ""205.210.31.143"": 3,
    ""194.165.16.37"": 2,
    ""103.149.27.222"": 2,
    ""116.140.196.215"": 1,
    ""38.255.43.130"": 6,
    ""198.135.49.131"": 1,
    ""96.8.115.25"": 1,
    ""91.238.181.16"": 2,
    ""205.210.31.98"": 3,
    ""212.70.149.146"": 1,
    ""196.190.117.7"": 1,
    ""199.45.154.23"": 1,
    ""62.204.41.222"": 2,
    ""103.20.97.235"": 2,
    ""80.94.95.121"": 6,
    ""205.210.31.244"": 3,
    ""92.51.2.11"": 1,
    ""52.149.219.213"": 1
  },
  ""asn"": {
    ""AS267784"": 6,
    ""AS209588"": 4,
    ""AS135905"": 1,
    ""AS37963"": 3,
    ""AS4134"": 3,
    ""AS16276"": 2,
    ""AS396982"": 12,
    ""AS208091"": 4,
    ""AS14061"": 9,
    ""AS63949"": 1,
    ""AS56046"": 2,
    ""AS50968"": 3,
    ""AS197414"": 2,
    ""AS48721"": 2,
    ""AS135377"": 2,
    ""AS4837"": 1,
    ""AS213122"": 6,
    ""AS396073"": 1,
    ""AS36352"": 1,
    ""AS49434"": 2,
    ""AS204428"": 7,
    ""AS24757"": 1,
    ""AS398722"": 1,
    ""AS59425"": 2,
    ""AS150880"": 2,
    ""AS8075"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 12,
    ""INET"": 1,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""Chinanet"": 3,
    ""OVH SAS"": 2,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 6,
    ""DigitalOcean, LLC"": 9,
    ""Akamai Technologies, Inc."": 1,
    ""China Mobile Communications Corporation"": 2,
    ""Hostmaster, Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Unicom CHINA169 Network"": 1,
    ""Hyonix LLC"": 6,
    ""Majestic Hosting Solutions, LLC"": 1,
    ""HostPapa"": 1,
    ""Datacenter location PAR1 France"": 2,
    ""SS-Net"": 7,
    ""Ethiotelecom"": 1,
    ""Censys, Inc."": 1,
    ""Horizon LLC"": 2,
    ""Fast Byte Fast Data Company Limited"": 2,
    ""Microsoft Corporation"": 1
  },
  ""org"": {
    ""UAB Host Baltic"": 6,
    ""Alviva Holding Limited"": 4,
    ""iNET Media Company Limited"": 1,
    ""Aliyun Computing Co., LTD"": 3,
    ""Chinanet JS"": 3,
    ""OVH Hosting, Inc."": 1,
    ""ONYPHE"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 4,
    ""DigitalOcean, LLC"": 5,
    ""Linode"": 1,
    ""China Mobile Communications Corporation"": 2,
    ""Network Systems Ltd"": 3,
    ""Xhostis"": 2,
    ""Digital Ocean"": 4,
    ""Flyservers S.A"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China United Network Communications Corporation Limited"": 1,
    ""Hyonix LLC"": 6,
    ""Majestic Hosting Solutions, LLC"": 1,
    ""Michael Charlery"": 1,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""4Media Ltd"": 1,
    ""Unknown"": 1,
    ""Censys, Inc."": 1,
    ""Horizon LLC"": 2,
    ""FASTBYTE"": 2,
    ""Unmanaged LTD"": 6,
    ""Microsoft Azure Cloud (eastus)"": 1
  },
  ""regionName"": {
    ""Vilnius"": 6,
    ""Hesse"": 4,
    ""Hanoi"": 1,
    ""Beijing"": 4,
    ""Jiangsu"": 5,
    ""Quebec"": 1,
    ""Hauts-de-France"": 1,
    ""California"": 23,
    ""North Holland"": 9,
    ""Texas"": 3,
    ""New Jersey"": 4,
    ""Kaunas"": 2,
    ""Kowloon"": 2,
    ""\u00cele-de-France"": 2,
    ""Sliven"": 1,
    ""Addis Ababa"": 1,
    ""New York"": 1,
    ""Moscow"": 2,
    ""Ho Chi Minh"": 2,
    ""Budapest"": 6,
    ""Virginia"": 1
  },
  ""country"": {
    ""Lithuania"": 8,
    ""Germany"": 4,
    ""Vietnam"": 3,
    ""China"": 9,
    ""Canada"": 1,
    ""France"": 3,
    ""United States"": 32,
    ""The Netherlands"": 9,
    ""Hong Kong"": 2,
    ""Bulgaria"": 1,
    ""Ethiopia"": 1,
    ""Russia"": 2,
    ""Hungary"": 6
  },
  ""account"": {
    ""Test"": 10,
    ""Domain"": 9,
    ""hello"": 19,
    ""Administrator"": 2,
    ""Administr"": 13,
    ""LAzMmQvWO"": 1,
    ""RUzuvF"": 1,
    ""fvMDbb"": 1,
    ""py7rg35i"": 4,
    ""beio"": 2,
    ""(empty)"": 5,
    ""rkakzxjj"": 4,
    ""sjLzaDNbs"": 1,
    ""JRAEdR"": 1,
    ""zlUxGk"": 1,
    ""QLwdasv"": 1,
    ""PVqnzEmBs"": 1,
    ""bRQrgf"": 1,
    ""OBbZkd"": 1,
    ""jZLppxquX"": 1,
    ""bBxsax"": 1,
    ""hoXVgA"": 1
  },
  ""keyboard"": {
    ""Unknown"": 81
  },
  ""client_build"": {
    ""Unknown"": 81
  },
  ""client_name"": {
    ""Unknown"": 81
  },
  ""ip_type"": {
    ""Unknown"": 42,
    ""hosting"": 29,
    ""hosting & proxy"": 8,
    ""mobile"": 2
  }
}"
6V7x5zv3,Untitled,imk0tter,C++,Thursday 4th of April 2024 06:56:30 PM CDT,"void IN_MouseMove ( float frametime, usercmd_t *cmd)
{
	int		mx, my;
	vec3_t viewangles;

	double mouse_x2, mouse_y2;

	gEngfuncs.GetViewAngles( (float *)viewangles );

	// Ricochet: Don't let them move the mouse when they're in spectator mode
	int iSpectator = !bCanMoveMouse();

	//jjb - this disbles normal mouse control if the user is trying to 
	//      move the camera
	if ( !iMouseInUse && !g_iVisibleMouse && !iSpectator )
	{
		GetCursorPos (&current_pos);
		IN_ResetMouse();

		mx = (current_pos.x - gEngfuncs.GetWindowCenterX());
		my = (current_pos.y - gEngfuncs.GetWindowCenterY());
		if (cl_acceleration->value == 0) 
		{
				mouse_x2 = TRANSFORM_ORB_PIXELS_TO_DEGREES(mx, SCREEN_WIDTH, gHUD.m_iFOV, sensitivity->value);
				mouse_y2 = TRANSFORM_ORB_PIXELS_TO_DEGREES(my, SCREEN_HEIGHT, gHUD.m_iFOV, sensitivity->value);
		}
		else
		{
				mouse_x2 = mx == 0 ? 0 : TRANSDUCE_PIXELS_TO_DEGREES(mx, SCREEN_WIDTH, gHUD.m_iFOV, sensitivity->value);
				mouse_y2 = my == 0 ? 0 : TRANSDUCE_PIXELS_TO_DEGREES(my, SCREEN_HEIGHT, gHUD.m_iFOV, sensitivity->value);
		}
		// add mouse X/Y movement to cmd
		if ((in_strafe.state & 1) || (lookstrafe->value && (in_mlook.state & 1)))
		{
			cmd->sidemove += mouse_x2;
			//cmd->sidemove += m_side->value * mouse_x;
		}
		else
		{
			viewangles[YAW] -= mouse_x2;
			//viewangles[YAW] -= m_yaw->value * mouse_x;
		}
		if ( in_mlook.state & 1)
		{
			V_StopPitchDrift ();
		}
		
		if ( (in_mlook.state & 1) && !(in_strafe.state & 1))
		{
			viewangles[PITCH] += mouse_y2;

			//viewangles[PITCH] += m_pitch->value * mouse_y;
			if (viewangles[PITCH] > cl_pitchdown->value)
			{
				viewangles[PITCH] = cl_pitchdown->value;
			}
			if (viewangles[PITCH] < -cl_pitchup->value)
			{
				viewangles[PITCH] = -cl_pitchup->value;
			}
		}
		else
		{
			if ((in_strafe.state & 1) && gEngfuncs.IsNoClipping() )
			{
				cmd->upmove -= mouse_y2;
				//cmd->upmove -= m_forward->value * mouse_y;
			}
			else
			{
				cmd->forwardmove -= mouse_y2;
				//cmd->forwardmove -= m_forward->value * mouse_y;
			}
		}
	}

	gEngfuncs.SetViewAngles( (float *)viewangles );

/*
//#define TRACE_TEST
#if defined( TRACE_TEST )
	{
		int mx, my;
		void V_Move( int mx, int my );
		IN_GetMousePos( &mx, &my );
		V_Move( mx, my );
	}
#endif
*/
}
"
KjkKtbRU,6.Format the Text,Silviya7,JavaScript,Thursday 4th of April 2024 06:34:37 PM CDT,"function solve() {

  const Inputtext= document.querySelector('#input').value;
  const Outputttext= document.querySelector('#output');
  const ArrSentence= Inputtext.split('.');

  let counts=0;
  let NewArr=[];

  for (const el of ArrSentence) {
     
    let isString=false;
    const innerArr= el.split(' ');
    for (const el2 of innerArr) {
      if(typeof el2== 'string' && el2 !=''){
        counts++;
        isString= true;
        break;
        
      }
    }
    if(isString){
      NewArr.push(el);
    }
   
  }

  let AllNewText='';
  let currentsen='';
  let countsent=0;
  let NewArrwithgroup=[];

  for (let i = 0; i < NewArr.length; i++) {
    countsent++;
    if( countsent %3==0){
      currentsen +=NewArr[i]+'.'
      NewArrwithgroup.push(`<p>${currentsen.trim()}</p>`);
      currentsen='';
      countsent=0;
    }
    else{
      currentsen +=NewArr[i]+'. '
    }
   
  }

  if(currentsen !=''){
    NewArrwithgroup.push(`<p>${currentsen.trim()}</p>`);
  }
  let result=NewArrwithgroup.join('\n');
  Outputttext.innerHTML=result;
}"
