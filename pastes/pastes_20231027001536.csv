id,title,username,language,date,content
gjMmFM5S,d_llinger's Data,azimuths,JSON,Thursday 26th of October 2023 06:47:53 PM CDT,"{""Stats"":{""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""385""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""217""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Block Training""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Poison Jab""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Pushup Training""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""4134""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""132""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""195""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spar Training""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Pushup Training\"",\""Block Training\"",\""Handsign Training\""]""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""65""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Poison Spew""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""58""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""4309""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""29153343""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1698206627""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Eight Gates""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Knee Strike""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Primary Lotus""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Singed""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""600""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Handsign Training""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Singed(11)1725448""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Rising Wind""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-10""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""209""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Poison Pellet""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""526""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""64""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""554""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""289""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""279""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""4706""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Read(18)89194""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""41""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chuunin""}},""Skilltree"":{""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Primary Lotus"":{""ObjectName"":""Primary Lotus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Poison Spew"":{""ObjectName"":""Poison Spew"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Knee Strike"":{""ObjectName"":""Knee Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Eight Gates"":{""ObjectName"":""Eight Gates"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Poison Pellet"":{""ObjectName"":""Poison Pellet"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Poison Jab"":{""ObjectName"":""Poison Jab"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
cz5mVwVc,14. Longest Common Prefix,micahbales,JavaScript,Thursday 26th of October 2023 06:37:34 PM CDT,"/**
* Problem statement: https://leetcode.com/problems/longest-common-prefix/
*
* This solution has a time complexity of O(n * m) - with n being the length of the array
* and m being the length of the longest prefix.
*/

/**
 * @param {string[]} strs
 * @return {string}
 */
var longestCommonPrefix = function(strs) {
        // Substring to compare each round against
        let substr = strs[0][0];
        let i = 1;
        while (true) {
            for (let j = 0; j < strs.length; j++) {
                if (strs[j] === '') return '';
                if (strs[j].startsWith(substr)) continue;
                return substr.slice(0, substr.length - 1);
            }
            i++;
            // We can stop whenever we've reached the end of the first string -
            // there can't possibly be any shared prefix beyond that
            if (strs[0].length < i) {
                return substr;
            }
            // Add one more letter to the string and go for another round
            substr = strs[0].substring(0, i);
        }
};"
g1ZyxBvK,5traws's Data,azimuths,JSON,Thursday 26th of October 2023 06:02:51 PM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""t""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Paper Cycle""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Heaven Spear Kick""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""1431""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""1032""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Flock""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Medical Ninjutsu""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""130""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""34""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""55""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-1731""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""1328840905""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1698187304""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""z""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""587""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Paper Shurikens""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""x""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""561""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""Flak""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Nicholas""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""865""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""y""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Nicholas(15)1338281""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chakra Scalpel""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-15""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""202""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Paper Spear""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""15""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""14""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""33""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""427""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""2220""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""1479""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""c""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""39""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Advisor""}},""Skilltree"":{""Flock"":{""ObjectName"":""Flock"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Paper Cycle"":{""ObjectName"":""Paper Cycle"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer 2"":{""ObjectName"":""Chakra Transfer 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Movement"":{""ObjectName"":""Enhanced Movement"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu"":{""ObjectName"":""Medical Ninjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Paper Shurikens"":{""ObjectName"":""Paper Shurikens"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Strength"":{""ObjectName"":""Enhanced Strength"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 2"":{""ObjectName"":""Medical Ninjutsu 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Paper Spear"":{""ObjectName"":""Paper Spear"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer"":{""ObjectName"":""Chakra Transfer"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Scalpel"":{""ObjectName"":""Chakra Scalpel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Heaven Spear Kick"":{""ObjectName"":""Heaven Spear Kick"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
m6M7qLub,Untitled,iconoclasthero,Bash,Thursday 26th of October 2023 05:56:33 PM CDT,"$ cat jsandbox.min.js 
""use strict"";var JSandbox=(function(self){var undef_type=""undefined"",doc=self.document,Worker=self.Worker;if(typeof Worker===undef_type){return}var $eval=""eval"",$exec=""exec"",$load=""load"",$requests=""requests"",$input=""input"",$terminate=""terminate"",$data=""data"",$callback=""callback"",$onerror=""onerror"",$worker=""worker"",$onresponse=""onresponse"",$prototype=""prototype"",$call=""call"",str_type=""string"",fun_type=""function"",Sandbox=function(){var sandbox=this;if(!(sandbox instanceof Sandbox)){return new Sandbox()}sandbox[$worker]=new Worker(Sandbox.url);sandbox[$requests]={};sandbox[$worker].onmessage=function(event){var data=event[$data],request;if(typeof data!==""object""){return}request=sandbox[$requests][data.id];if(request){if(data.error){if(typeof sandbox[$onerror]===fun_type){sandbox[$onerror](data,request)}if(typeof request[$onerror]===fun_type){request[$onerror][$call](sandbox,data.error)}}else{if(typeof sandbox[$onresponse]===fun_type){sandbox[$onresponse](data,request)}if(typeof request[$callback]===fun_type){request[$callback][$call](sandbox,data.results)}}delete sandbox[$requests][data.id]}}},proto=Sandbox[$prototype],createRequestMethod=function(method){proto[method]=function(options,callback,input,onerror){if(typeof options===str_type||Object[$prototype].toString[$call](options)===""[object Array]""||arguments.length>1){options={data:options,input:input,callback:callback,onerror:onerror}}if(method===$load&&typeof options[$data]===str_type){options[$data]=[options[$data]]}var data=options[$data],id=this.createRequestID();input=options[$input];delete options[$data];delete options[$input];this[$requests][id]=options;this[$worker].postMessage({id:id,method:method,data:data,input:input});return id};Sandbox[method]=function(){var sandbox=new Sandbox();sandbox[$onresponse]=sandbox[$onerror]=function(){sandbox[$terminate]();sandbox=null};Sandbox[$prototype][method].apply(sandbox,Array[$prototype].slice[$call](arguments));return Sandbox}},methods=[$eval,$load,$exec],i=3;while(i--){createRequestMethod(methods[i])}proto[$terminate]=function(){this[$requests]={};this[$worker].onmessage=null;this[$worker][$terminate]()};proto.abort=function(id){delete this[$requests][id]};proto.createRequestID=function(){var id=Math.random().toString();if(id in this[$requests]){return this.createRequestID()}return id};if(typeof doc!==undef_type){var linkElems=doc.getElementsByTagName(""link"");i=linkElems.length;while(i--){if(linkElems[i].getAttribute(""rel"")===""jsandbox""){Sandbox.url=linkElems[i].getAttribute(""href"");break}}}return Sandbox}(self)),Sandbox=JSandbox;"
SMm44MKh,Spid_rr's Data,azimuths,JSON,Thursday 26th of October 2023 05:09:14 PM CDT,"{""Stats"":{""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""450""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-48""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""771""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""777""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Knee Strike""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""z""},""HairColor R"":{""ObjectName"":""HairColor R"",""ObjectClass"":""IntValue"",""ObjectValue"":""255""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Anbu Mask""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""79""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""1048""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Tanto""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Primary Lotus""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""50""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""215""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Time Stop""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-2010""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""184318582""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""1698341716""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""600""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Genjutsu""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""x""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Rising Wind""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Ribcage""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wooden Pencil""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spider""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Pushup Training\"",\""Spar Training\"",\""Pushup Training\""]""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1045""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2530""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SusanooColor"":{""ObjectName"":""SusanooColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Spider(43)2732318""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Flip""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""262.59000000000515""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-15""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Dosaku""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""178""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""High Powered Chop""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sharingan"",""ObjectAttributes"":{""Progress"":""Mangekyo""}},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""19""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""105""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""20109""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""e""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sharingan"",""ObjectAttributes"":{""Progress"":""Mangekyo""}},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""15000""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""1630""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""c""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""31""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Advisor""}},""Skilltree"":{""Primary Lotus"":{""ObjectName"":""Primary Lotus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""High Powered Chop"":{""ObjectName"":""High Powered Chop"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Flip"":{""ObjectName"":""Demon Flip"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Tanto"":{""ObjectName"":""Tanto"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""3 Tomoe"":{""ObjectName"":""3 Tomoe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Time Stop"":{""ObjectName"":""Time Stop"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Knee Strike"":{""ObjectName"":""Knee Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of Wonder"":{""ObjectName"":""Gate of Wonder"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ribcage"":{""ObjectName"":""Ribcage"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dosaku"":{""ObjectName"":""Dosaku"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of View"":{""ObjectName"":""Gate of View"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Eight Gates"":{""ObjectName"":""Eight Gates"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Hoppa"":{""ObjectName"":""Hoppa"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of Limit"":{""ObjectName"":""Gate of Limit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dragon Flame Bomb"":{""ObjectName"":""Dragon Flame Bomb"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
FGBn08uP,Get keys as array and throw out time between start and push,Sora_7672,JavaScript,Thursday 26th of October 2023 05:01:26 PM CDT,"<!DOCTYPE html>
<html>
<body>

<h1>Output of the script:</h1>

<p id=""out""></p>

<script>





var startTime = Date.now();

var keySafe = {
key : [],
time : [] ,
pushedAlt : []
};


function conTime(tim){
  let n = tim - startTime;
  let ms = n.toString().substr(n.toString().length - 3,3);
  let s = ""00"";
  let m =""00"";
  if ((n.toString().length-3)>0){

      s = n.toString().slice(0, n.toString().length - 3).padStart(2,""0"");

  }



  return (`${s}:${ms}`);
}



function upHtml(){

		let txt ="""";
      keySafe.time.forEach(function(item, index, arr){
         txt += `<br> ${conTime(keySafe.time[index])} ${keySafe.key[index]} Alt pushed?: ${keySafe.pushedAlt[index]}`;
      });

			document.getElementById(""out"").innerHTML = txt;

}

function keyLog(eve, keysToCheck=[]){


    if (keysToCheck.includes(eve.code)){
    
    
    keySafe.time.push(Date.now());
	keySafe.key.push(eve.code);
    
    
	if(eve.altKey){keySafe.pushedAlt.push(true);}
    else{keySafe.pushedAlt.push(false);}
    
     upHtml();
    
    
    }else{return;}
    
    
}






window.addEventListener('keydown', e => {


  keyLog(e, [""Space"",""Digit9"",""KeyS""]);


})



document.getElementById(""out"").innerHTML = ""Start!"";


</script>

</body>
</html>
"
rufWFJ8P,Rolling Hash C++ Implementation,matbensch,C++,Thursday 26th of October 2023 04:58:21 PM CDT,"#include <iostream>
#include <string>
#include <vector>
#include <unordered_set>

using namespace std;

// computes a^b in O(log b)
long long fast_pow(long long a, int p, long long MOD) 
{
  if(p == 0) return 1;
  long long half = fast_pow(a, p/2, MOD);
  if(p%2 == 0) return half * half % MOD;
  return a * half % MOD * half % MOD;
}

// compute inverse_mod(n, MOD) in O(log MOD)
long long inverse_mod(long long n, long long MOD){ return  fast_pow(n, MOD - 2, MOD); }

struct rolling_hash
{
    long long p;
    long long M;
    vector<long long> P;
    vector<long long> Pinv;
    vector<long long> h;

    // returns a vector of size n where P[i] = p^a
    vector<long long> prepare_P(long long p, long long M, int n)
    {
        P.assign(n, 0);
        P[0] = 1;
        for(int i=1;i<n;i++) P[i] = P[i-1] * p % M;
        return P;
    }

    // returns a vector of size n where Pinv[i] = inverse_mod(p^a, M)
    vector<long long> prepare_Pinv(long long p, long long M, int n)
    {
        Pinv.assign(n+1, 0);
        for(int a=0;a<n;a++) Pinv[a] = inverse_mod(fast_pow(p, a, M), M);
        return Pinv;
    }

    // instatiates a rolling hash by computing P, Pinv, and the total hash
    rolling_hash(long long p, long long M, string s)
    {
        this->p = p;
        this->M = M;
        prepare_P(p, M, s.size());
        prepare_Pinv(p, M, s.size());

        h.assign(s.size(), 0);
        for(int i=0;i<s.size();i++)
        {
            if(i!=0) h[i] = h[i-1];
            h[i] = (h[i] + (s[i] * P[i]) % M) % M;
        }
    }

    // returns hash(s[a...b]) in O(1)
    long long hash_fast(int L, int R)
    {
        if(L==0) return h[R];
        int ans = 0;
        ans = ((h[R] - h[L-1]) % M + M) % M;
        ans = ans * Pinv[L] % M;
        return ans;
    }
};

// use this for unordered_set if you need more than 1 hash
struct pair_hash
{
	template <class T1, class T2>
	size_t operator () (pair<T1, T2> const& pair) const
	{
		size_t h1 = hash<T1>()(pair.first);
		size_t h2 = hash<T2>()(pair.second);
 
		return h1 ^ h2;
	}
};

// computes the hash of a string in O(n)
long long compute_hash(string& s) {
    int p = 31;
    int m = 1e9 + 9;
    long long hash_value = 0;
    long long p_pow = 1;
    for (char c : s) {
        hash_value = (hash_value + c * p_pow) % m;
        p_pow = (p_pow * p) % m;
    }
    return hash_value;
}

int main()
{
    string s = ""supercallifragilisticexpialidocious"";
    int n = s.size();
    rolling_hash rh1(31, 1e9+9, s);
 
    int tests_passed = 0;
    int tests = 0;
 
    for (int i = 0; i < n; i++)
    {
        for (int j = i; j < n; j++)
        {
            string sub = s.substr(i, j - i + 1);
            int fast_hash = rh1.hash_fast(i, j);
            int slow_hash = compute_hash(sub);
            cout << ""Hashing substring: "" << sub << '\n';
            cout << ""Slow substring hash O(n) found: "" << slow_hash << '\n';
            cout << ""Fast substring hash O(1) found: "" << fast_hash << '\n';
            if (slow_hash == fast_hash)
            {
                tests_passed++;
                cout << ""passed\n\n"";
            }
            else
                cout << ""failed\n\n"";
            tests++;
        }
    }
 
    cout << tests_passed << "" / "" << tests << "" tests passed!\n"";
 
}"
iP5c4j5Z,DumplingPill's Data,azimuths,JSON,Thursday 26th of October 2023 04:49:30 PM CDT,"{""Stats"":{""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wood Roots""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wood Pillars""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2559""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""40""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Weighted Gear""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Handsign Training""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""196""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""38""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai Training""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""35""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-639""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""174196264""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Breakthrough""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Block Training""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""561""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Congee""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Kunai Training\"",\""Block Training\"",\""Pushup Training\""]""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""390""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""36""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Congee(3)1760316""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wood Seal""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-6""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""14""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""187""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wind Slash""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""497""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""27""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""265""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""25""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""4332""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""14""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Genin""}},""Skilltree"":{""Wind Slash"":{""ObjectName"":""Wind Slash"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wood Roots"":{""ObjectName"":""Wood Roots"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wood Pillars"":{""ObjectName"":""Wood Pillars"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Breakthrough"":{""ObjectName"":""Breakthrough"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wood Seal"":{""ObjectName"":""Wood Seal"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
KkgedmF4,Java solution to detecting mismatched  numbers  in a file,Mark2020H,Java,Thursday 26th of October 2023 04:45:24 PM CDT,"/*
Written by MD Harrington
Java solution to deal with these types of questions 


EG 

Look for another number apart from 709 

709	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 409	 709	 709	 709	 709	 609	 709	 709	 709
709	 509	 709	 709	 709	 709	 709	 709	 709	 709
709	 709	 678	 709	 709	 509	 709	 709	 709	 709
209	 709	 609	 709	 709	 709	 709	 709	 709	 709
709	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 709	 709	 409	 709	 709	 709	 709	 775	 709
709	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 709	 709	 709	 709	 809	 709	 709	 709	 709
709	 709	 709	 409	 709	 709	 709	 709	 709	 709
709	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 508	 709	 709	 709	 709	 709	 709	 709	 609
709	 709	 209	 709	 709	 709	 709	 709	 709	 709
209	 709	 709	 709	 709	 709	 709	 709	 709	 709
709	 709	 609	 709	 709	 709	 709	 709	 709	 709
709	 709	 709	 709	 709	 709	 709	 309	 709	 709



 */

Here is the solution to this in java


package filetoarray;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;

public class FileToArray {
    private int[][] array;

    public FileToArray(String filePath) {
        try {
            // Open and read the file
            BufferedReader br = new BufferedReader(new FileReader(filePath));

            // Create a 2D array to store the numbers
            array = new int[20][10];

            // Read and parse the numbers from the file
            String line = br.readLine();
            String[] numbers = line.split(""\\s+""); // Assuming numbers are separated by spaces

            for (int i = 0; i < 20; i++) {
                for (int j = 0; j < 10; j++) {
                    array[i][j] = Integer.parseInt(numbers[i * 10 + j]);
                }
            }

            // Close the file
            br.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void compareAndPrintMismatches(int selectedNumber) {
        // Compare each number in the array
        for (int row = 0; row < 20; row++) {
            for (int col = 0; col < 10; col++) {
                int number = array[row][col];
                if (number != selectedNumber) {
                    System.out.println(""Mismatch: Row "" + (row + 1) + "", Column "" + (col + 1) + "" - Value: "" + number);
                }
            }
        }
    }

    public int countElements() {
        int count = 20 * 10;
        return count;
    }

    public void exportToFile(String outputPath, String delimiter) {
        try {
            FileWriter writer = new FileWriter(outputPath);

            for (int row = 0; row < 20; row++) {
                String rowString = Arrays.toString(array[row]).replace("","", delimiter);
                writer.write(rowString.substring(1, rowString.length() - 1) + ""\n"");
            }

            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        String inputFilePath = ""numbers.txt""; // Change this to the path of your input file
        FileToArray fileToArray = new FileToArray(inputFilePath);

        // Define the number to compare against
        int selectedNumber = 709; // Change this to the number you want to compare

        // Call the function to compare and print mismatches
        fileToArray.compareAndPrintMismatches(selectedNumber);

        // Call the function to count the number of elements
        int elementCount = fileToArray.countElements();
        System.out.println(""Total number of elements in the array: "" + elementCount);

        String outputFilePath = ""output.txt""; // Change this to the desired output file path
        String delimiter = ""\t""; // Change this to the desired delimiter
        fileToArray.exportToFile(outputFilePath, delimiter);
    }
}


"
QBZnU3De,B - Weather,OmarMoBadr,C++,Thursday 26th of October 2023 04:25:16 PM CDT,"#include <bits/stdc++.h>

#define ll long long
using namespace std;

int main(){
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);

    int n; cin >> n;

    int ans = 1e9, zeros = 0;
    vector<int> a(n);

    for (int i = 0; i < n; i++) {
        cin >> a[i];
        zeros += (a[i] == 0);
    }
    
    vector<int> c(n + 1), b(n + 1);

    for (int i = 0; i < n; i++){
        c[i + 1] = c[i] + (a[i] > 0);
        b[i + 1] = b[i] + (a[i] < 0);
    }

    for (int k = 1; k < n; k++){
        int left = c[k];
        int right = b[n] - b[k];

        ans = min(ans, left + right);
    }
    cout << ans + zeros << endl;
}"
fsfnuv2k,task6 Algorithms,nMeBG,Python,Thursday 26th of October 2023 03:52:36 PM CDT,"
normal_sentence = ""Did you know the filling in Kit Kats is made from damaged Kit Kats""

worked_sentence = normal_sentence.replace("" "", """").lower()

letter_count = {}

for letter in worked_sentence:
    if letter.isalpha():
        if letter in letter_count:
            letter_count[letter] += 1
        else:
            letter_count[letter] = 1

sorted_letter_count = dict(sorted(letter_count.items(), key=lambda item: item[1], reverse=True))

most_common_letter, count = next(iter(sorted_letter_count.items()))

print(f""The letter {most_common_letter} is the most common letter -> {count} times"")"
kfmMXbSx,task5 Algorithms,nMeBG,Python,Thursday 26th of October 2023 03:52:13 PM CDT,"
from collections import deque

line = deque(['customer', 'customer', 'customer', 'customer', 'customer', 'me', 'customer', 'customer'])
new_comers = ['customer', 'vip', 'customer']

served_count = 0

while line:
    person = line.popleft()
    served_count += 1

    if served_count % 3 == 0:
            new_person = new_comers.pop(0)
            line.append(line)


    if person == 'me':
        break

for person in line:
    if person == 'vip':
        person = line.popleft()

people_served_before_me = served_count - 1

print(f'I have got my coffee after {people_served_before_me} persons')"
ngmYxEWp,task4 Algorithms,nMeBG,Python,Thursday 26th of October 2023 03:51:43 PM CDT,"
stack = []

for num in range(10, 0, -1):
    stack.append(num)

while stack:
    print(stack.pop(), end=' ')"
PfjsA50T,task3 Algorithms,nMeBG,Python,Thursday 26th of October 2023 03:51:15 PM CDT,"
import re

input_sentence = ""Jupiter is the fifth planet from the Sun and the largest in the Solar System, the mass is more than two and a half times bigger than of all the other planets in the Solar System combined.""

words = input_sentence.split()

ready_words = []

pattern = re.compile(""^[A-Za-z]+$"", re.IGNORECASE)

for word in words:
    match = pattern.findall(word)
    if match:
        ready_words.append(match[0].lower())

ready_words = sorted(list(set(ready_words)))

print(ready_words)"
Eh87QBmc,task2 Algorithms,nMeBG,Python,Thursday 26th of October 2023 03:50:36 PM CDT,"
import re

data = [""Anna"", ""Pesho"", """", ""Gosho"", """", ""3.5"", ""2"", ""example.com"", ""Maria"", ""Ivan"", ""ivan.ivanov@example.com""]

name_requirement = re.compile(""^[A-Za-z]+$"")

valid_names = []

for name in data:
    if name_requirement.match(name):
        valid_names.append(name)

print("" "".join(valid_names))"
kHFmKXbH,task1 Algorithms,nMeBG,Python,Thursday 26th of October 2023 03:49:47 PM CDT,"
beginning_string = ""strings Python practicing am I""

words = beginning_string.split()

reversed_words = words[::-1]

end_string = ' '.join(reversed_words)

print(end_string)"
igY5zPY3,Mxnny1k's Data,azimuths,JSON,Thursday 26th of October 2023 03:48:35 PM CDT,"{""Stats"":{""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Uzumaki Chains""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""420""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""44""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Uzumaki Rasengan""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""3958""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""159""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""222""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""[\""Pushup Training\"",\""Spar Training\"",\""Pushup Training\""]""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""165""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""52""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""70""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-5714""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""35917354""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""301""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""561""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Manny""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""460""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""154""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""3478""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Manny(20)2403919""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Uzumaki Barrage""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-4""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""221""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Tanto""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""2400""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""114""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""258""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""14""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""-20""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""}},""Skilltree"":{""Uzumaki Barrage"":{""ObjectName"":""Uzumaki Barrage"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Uzumaki Chains"":{""ObjectName"":""Uzumaki Chains"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Uzumaki Rasengan"":{""ObjectName"":""Uzumaki Rasengan"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
nBNjjHhE,heap,salexame,C++,Thursday 26th of October 2023 03:42:54 PM CDT,"#include <iostream>
#include <vector>

class Heap {
 public:
  void Insert(long long value, int request);

  void ExtractMin();

  long long GetMin();

  void DecreaseKey(int request, long long value);

 private:
  void SiftUp(int current);

  void SiftDown(int current);

  void Swap(std::pair<long long, int>& first, int& first_position,
            std::pair<long long, int>& second, int& second_position);

  std::vector<std::pair<long long, int>> tree_;
  std::vector<int> request_position_;
};

void Heap::SiftUp(int current) {
  int parent = (current - 1) / 2;
  while (current != 0 && tree_[parent].first > tree_[current].first) {
    Swap(tree_[parent], parent, tree_[current], current);
    parent = (current - 1) / 2;
  }
}

void Heap::SiftDown(int current) {
  while (current * 2 + 1 < static_cast<int>(tree_.size())) {
    int left = current * 2 + 1;
    int right = current * 2 + 2;
    long long current_value = tree_[current].first;
    long long left_value = tree_[left].first;
    if (right < static_cast<int>(tree_.size())) {
      long long right_value = tree_[right].first;
      if (current_value <= left_value && current_value <= right_value) {
        break;
      }
      if (left_value < right_value) {
        Swap(tree_[left], left, tree_[current], current);
      } else {
        Swap(tree_[right], right, tree_[current], current);
      }
    } else {
      if (current_value <= left_value) {
        break;
      }
      Swap(tree_[left], left, tree_[current], current);
    }
  }
}

void Heap::Swap(std::pair<long long, int>& first, int& first_position,
                std::pair<long long, int>& second, int& second_position) {
  int first_request = first.second;
  int second_request = second.second;
  std::swap(first_position, second_position);
  std::swap(first, second);
  std::swap(request_position_[first_request],
            request_position_[second_request]);
}

void Heap::Insert(long long value, int request) {
  while (static_cast<int>(request_position_.size()) < request) {
    request_position_.push_back(-1);
  }
  request_position_.push_back(static_cast<int>(tree_.size()));
  tree_.emplace_back(value, request);
  SiftUp(static_cast<int>(tree_.size()) - 1);
}

long long Heap::GetMin() { return tree_[0].first; }

void Heap::ExtractMin() {
  int first = 0;
  int second = static_cast<int>(tree_.size()) - 1;
  Swap(tree_[first], first, tree_[second], second);
  tree_.pop_back();
  SiftDown(second);
}

void Heap::DecreaseKey(int request, long long value) {
  int node = request_position_[request];
  tree_[node].first -= value;
  SiftUp(node);
}

void Request(Heap& heap, int number_request) {
  std::string req;
  std::cin >> req;
  if (req == ""insert"") {
    long long value;
    std::cin >> value;
    heap.Insert(value, number_request);
  } else if (req == ""decreaseKey"") {
    int request;
    long long delta;
    std::cin >> request >> delta;
    heap.DecreaseKey(request - 1, delta);
  } else if (req == ""getMin"") {
    std::cout << heap.GetMin() << '\n';
  } else {
    heap.ExtractMin();
  }
}

signed main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(nullptr);
  Heap heap;
  int queries;
  std::cin >> queries;
  for (int i = 0; i < queries; ++i) {
    Request(heap, i);
  }
}
"
0rsABjW4,image to waveform converter V1,Natsukl,Python,Thursday 26th of October 2023 03:02:25 PM CDT,"#you have to install the pip library for reading images
import wave, struct, math, random
from PIL import Image
def addsample(S):
   data = struct.pack('<h', S)
   obj.writeframesraw(data)
img = Image.open(""Silhouette-image-here.png"")
img_BW = img.convert(""L"")
pixel_data_bw = img_BW.load()
width, height = img_BW.size
sampleRate = 44100.0 # hertz
duration = 1.0 # seconds, this does nothing
frequency = 1000 # hertz, this will change the frequency
wavehight = 65534
pixel2wave = wavehight / height
obj = wave.open('sound.wav','w')
obj.setnchannels(1) # mono
obj.setsampwidth(2)
obj.setframerate(sampleRate)
for x in range(width):
   for i in range(-1,2,2):
      rawheight = 0
      for y in range(height):
          if img_BW.getpixel((x, y*i)) < 250:
             rawheight = (height/2-y)*i
             break
      for place_holder in range(int(sampleRate/frequency)):
         addsample(int(rawheight * pixel2wave))
obj.close()
#this was created by DEVIXLER/Scar32"
XuBgrZnS,ControlTemperatura,Luiti_,C++,Thursday 26th of October 2023 02:58:14 PM CDT,"#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include ""EncoderMultifuncional.h""
#include ""sonda3950.h""
#include <PID_v1.h>

// Variables para el PID
double Setpoint, Input, Output;
double Kp = 2, Ki = 5, Kd = 1;

// Valores del display OLED
const uint8_t SCREEN_WIDTH = 128;
const uint8_t SCREEN_HEIGHT = 64;
const int8_t OLED_RESET = -1;
const uint8_t SCREEN_ADDRESS = 0X3C;

// Valores del encoder multifuncional
const uint8_t ENCODER_ADDRESS = 0X20;
String nombreBoton[5] = { ""IZQUIERDA"", ""ABAJO"", ""DERECHA"", ""ARRIBA"", ""CENTRO"" };
const uint8_t pinesEncoder[5] = { PIN_A, PIN_B, PIN_C, PIN_D, PIN_SW };

// Valores generales de funcionamiento
const uint16_t adcResolucion = 1024;
const uint16_t rPullUp = 4700;
const uint32_t rTermistor = 100000;
double temperaturaActivacion = 30.0;

// Valores de los pines utilizados
const uint8_t pinTermistor = A3;
const uint8_t pinSSR = 9;

// Variables generales
double valorSonda;
uint16_t valorEncoder = 1;
uint16_t valorEncoderAnterior = 0;

// Creamos objetos
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
EncoderMultifuncional encoder(ENCODER_ADDRESS, 0, 2400, false);
sonda3950 termistor(pinTermistor, adcResolucion, rPullUp, rTermistor);
PID myPID(&Input, &Output, &Setpoint, Kp, Ki, Kd, DIRECT);

void setup() {
  Serial.begin(115200);
  Serial.println(""INICIO DEL SISTEMA"");
  pinMode(pinSSR, OUTPUT);

  //Setpoint = 1;
  //myPID.SetMode(AUTOMATIC);

  termistor.begin();
  encoder.inicializar();
  for (uint8_t i = 0; i < 5; i++) {
    encoder.detectarFlancoBajada(pinesEncoder[i]);
  }
  valorEncoder = int(temperaturaActivacion * 10);
  encoder.asignarValor(valorEncoder);
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);
  pantallaInicio();
}

void loop() {
  encoder.actualizarBits();
  termistor.actualizar();
  medirTemperatura();
  comprobarEncoder();
  //PID();
  controlSSR();
  mostrarDisplay();
}

//void PID() {
//  Input = valorSonda;
//  myPID.Compute();
//  analogWrite(pinSSR, Output);
//}

void pantallaInicio() {
  //display.setTextWrap(true);
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(1, 0);
  display.setCursor(0, 0);
  display.print(""SET:"");
  display.setCursor(0, 32);
  display.print(""TEMP:"");
  display.display();
}

void medirTemperatura() {
  static uint32_t tiempoAnterior, intervalo = 100;
  if (millis() - tiempoAnterior >= intervalo) {
    tiempoAnterior = millis();
    valorSonda = termistor.temperaturaLeida();
  }
}

void comprobarEncoder() {
  valorEncoder = encoder.obtenerValor();
  if (valorEncoder != valorEncoderAnterior) {
    valorEncoderAnterior = valorEncoder;
    temperaturaActivacion = float(valorEncoder / 10.0);
    temperaturaActivacion = Setpoint;
    Serial.println(valorEncoder);
  }

  for (uint8_t i = 0; i < 5; i++) {
    if (encoder.esPresionado(pinesEncoder[i])) {
      Serial.print(""Boton pulsado "");
      Serial.println(nombreBoton[i]);
    }
  }
}

void controlSSR() {
  static uint32_t tiempoAnterior, intervalo = 10;
  if (millis() - tiempoAnterior >= intervalo) {
    tiempoAnterior = millis();
    if (valorSonda > temperaturaActivacion) {
      analogWrite(pinSSR, 0);
      //digitalWrite(pinSSR, LOW);
    } else {
      analogWrite(pinSSR, 5);
      //digitalWrite(pinSSR, HIGH);
    }
  }
}

void mostrarDisplay() {
  static uint32_t tiempoAnterior, intervalo = 250;
  if (millis() - tiempoAnterior >= intervalo) {
    tiempoAnterior = millis();
    display.setCursor(48, 0);
    display.print(""     "");
    display.setCursor(48, 0);
    display.print(valorEncoder);
    display.setCursor(60, 32);
    display.print(valorSonda, 1);
    display.display();
  }
}"
k2Cj7Uf1,Cell.cpp,maxim_shlyahtin,C++,Thursday 26th of October 2023 02:46:01 PM CDT,"#ifndef Cell_cpp
#define Cell_cpp
#include ""Cell.h""
#include <algorithm>
#include <map>
#include <random>
#include <vector>
#include <iostream>

Cell::Cell(){
    this->event = nullptr; 
    this->passability = true; 
    this->player_presence = false; 
    this->walls = std::map<MOVEMENT, bool>{
        {MOVEMENT::UP, true}, {MOVEMENT::RIGHT, true}, {MOVEMENT::DOWN, true}, {MOVEMENT::LEFT, true}
    };
    this->cell_coords = std::make_pair(0, 0);
}

Cell::Cell(Event* event, bool passability, bool player_presence,
    std::map<MOVEMENT, bool> walls, std::pair<int, int> cell_coords){
    this->passability = passability;
    this->player_presence = player_presence;
    this->event = event;
    this->walls = walls;
    this->cell_coords = cell_coords;
}

void Cell::set_pass(bool value){
    this->passability = value;
}

bool Cell::get_pass() const{
    return this->passability;
}

void Cell::set_player_presence(bool value){
    this->player_presence = value;
}

bool Cell::get_player_presence() const{
    return this->player_presence;
}

Cell::Cell(const Cell& other){ 
    this->passability = other.passability;
    this->player_presence = other.player_presence;
    this->event = other.event;
    this->walls = other.walls;
    this->cell_coords = other.cell_coords;
}

void Cell::cell_swap(Cell& other){
    std::swap(player_presence, other.player_presence);
    std::swap(passability, other.passability);
    std::swap(event, other.event);
    std::swap(walls, other.walls);
    std::swap(cell_coords, other.cell_coords);
}

Cell::Cell(Cell&& other){
    this->cell_swap(other);
}

Cell &Cell::operator=(Cell &&other){
    if(this != &other)
        this->cell_swap(other);
    return *this;
}

Cell &Cell::operator=(const Cell &other) = default;

void Cell::set_event(Event* event){
    this->event = event;
}

Event* Cell::get_event() const{
    return this->event;
}

bool Cell::get_wall(MOVEMENT wall) const{
    return this->walls.at(wall);
}

void Cell::set_wall(MOVEMENT wall, bool value){
    this->walls[wall] = value;
}

std::pair<int, int> Cell::get_cell_coords() const{
    return this->cell_coords;
}

void Cell::set_cell_coords(int x, int y){
    this->cell_coords.first = x;
    this->cell_coords.second = y;
}

int Cell::check_cell(int height, int width, int x, int y){
    if (x < 0 || y < 0 || x > width - 1 || y > height - 1)
            return -1;
        else
            return x + y * width; // связь индекса клетки в одномерном массиве и ее координат на поле
}

Cell* Cell::check_neighbors(int height, int width, Cell** grid){ // проверяем соседей клетки
    int x = this->cell_coords.first;
    int y = this->cell_coords.second;
    std::vector<Cell*> neighbors;
    int up = this->check_cell(height, width, x, y - 1);
    int right = this->check_cell(height, width, x + 1, y);
    int down = this->check_cell(height, width, x, y + 1);
    int left = this->check_cell(height, width, x - 1, y);
    if(up != -1){ // в каждом if происходит проверка, на то, была ли посещена соответствующая клетка сосед
        if(!grid[up]->get_pass())
            neighbors.push_back(grid[up]);
    }
    if(right != -1){
        if(!grid[right]->get_pass())
            neighbors.push_back(grid[right]);
    }
    if(down != -1){
        if(!grid[down]->get_pass())
            neighbors.push_back(grid[down]);
    }
    if(left != -1){
        if(!grid[left]->get_pass())
            neighbors.push_back(grid[left]);
    }
    if (neighbors.size() > 0){// если нашлись подходящие клетки, то случайным образом выбираем следующую клетку для посещения 
        std::random_device dev;
        std::mt19937 rng(dev());
        std::uniform_int_distribution<std::mt19937::result_type> dist(0, neighbors.size() - 1);
        return neighbors[dist(rng)];
    } else{ // если подходящей нет, создаем указатель на клетку сообщающую об этом
        Cell cell;
        Cell* c = &cell;
        c->set_cell_coords(-1, -1);
        return c;
    }
}

#endif"
M2BFsLKZ,MergeSort,salexame,C++,Thursday 26th of October 2023 02:23:44 PM CDT,"#include <iostream>

void Merge(int* arr, size_t begin, size_t middle, size_t end) {
  int* merged = new int[end - begin];
  size_t it1 = begin;
  size_t it2 = middle;
  size_t idx = 0;
  while (it1 < middle && it2 < end) {
    if (arr[it1] < arr[it2]) {
      merged[idx] = arr[it1];
      ++it1;
      ++idx;
    } else {
      merged[idx] = arr[it2];
      ++it2;
      ++idx;
    }
  }
  while (it2 < end) {
    merged[idx] = arr[it2];
    ++idx;
    ++it2;
  }
  while (it1 < middle) {
    merged[idx] = arr[it1];
    ++idx;
    ++it1;
  }
  for (idx = 0; idx < end - begin; ++idx) {
    arr[begin + idx] = merged[idx];
  }
  delete[] merged;
}

void MergeSort(int* arr, size_t begin, size_t end) {
  if (end - begin <= 1) {
    return;
  }
  size_t middle = begin + (end - begin)/2;
  MergeSort(arr, begin, middle);
  MergeSort(arr, middle, end);
  Merge(arr, begin, middle, end);
}

signed main() {
  size_t sz;
  std::cin >> sz;
  int* arr = new int[sz];
  for (size_t it = 0; it < sz; ++it) {
    std::cin >> arr[it];
  }
  MergeSort(arr, 0, sz);
  for (int it = 0; it < sz; ++it) {
    std::cout << arr[it] << ' ';
  }
}"
Erc8GikG,MP06_UF2_EJ2,Mike7GB,Java,Thursday 26th of October 2023 01:55:16 PM CDT,"// EJERCICIO 2 - UF2

**************
---- MAIN ----
**************

import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author luism
 */
public class MP06_UF2_EJ2 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here

        //Declaración de variables
        Scanner sc;
        int opcionMenu = -1;

        MySQLConnection db = new MySQLConnection();

        // Instanciación de objeto Scanner para recibir
        // input del usurio a traves del teclado
        sc = new Scanner(System.in);

        // Mensaje inicial
        System.out.println(""\nEste programa gestiona la base de datos de montañas"");

        do {

            System.out.println(""\n****************"");
            System.out.println(""----- MENÚ -----"");
            System.out.println(""****************"");
            System.out.println("""");
            System.out.println(""1 - Crear tabla"");
            System.out.println(""2 - Añadir fila"");
            System.out.println(""3 - Leer tabla"");
            System.out.println(""4 - Leer fila"");
            System.out.println(""5 - Modificar fila"");
            System.out.println(""6 - Eliminar fila"");
            System.out.println(""7 - Eliminar tabla"");
            System.out.println(""0 - Salir"");
            System.out.println("""");
            System.out.println(""Seleccione una opción del menú escribiendo"");
            System.out.println(""el número correspondiente y pulse Enter"");

            opcionMenu = sc.nextInt();
            sc.nextLine(); // Esta linea detecta el Enter pulsado después del nextInt() para que no afecte al próximo nextLine()

            switch (opcionMenu) {
                case 1: { // Crear tabla
                    try {

                        System.out.println(""\nIndique el nombre de la tabla: "");
                        String nombreTabla = sc.nextLine();
                        db.crearTabla(nombreTabla);
                    } catch (SQLException ex) {
                        Logger.getLogger(MP06_UF2_EJ2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;

                case 2: {// Añadir fila                
                    try {
                        System.out.println(""\nA continuación indique los datos de la montaña"");
                        System.out.println(""Indique el nombre: "");
                        String name = sc.nextLine();
                        System.out.println(""Indique la altura: "");
                        int h = sc.nextInt();
                        System.out.println(""Indique el año de primer ascenso: "");
                        int year = sc.nextInt();
                        sc.nextLine();
                        System.out.println(""Indique la región donde está ubicada: "");
                        String reg = sc.nextLine();
                        System.out.println(""Indique el país en el que se encuentra: "");
                        String ctry = sc.nextLine();
                        db.agregarElemento(name, h, year, reg, ctry);
                    } catch (SQLException ex) {
                        Logger.getLogger(MP06_UF2_EJ2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;

                case 3: { // Leer tabla
                    try {
                        db.mostrarTabla();
                    } catch (SQLException ex) {
                        Logger.getLogger(MP06_UF2_EJ2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;

                case 4: { // Leer fila
                    System.out.println(""\nIndique el id de la montaña: "");
                    int id = sc.nextInt();
                    db.consultarMontaña(id);
                }
                break;

                case 5: {// Modificar fila                
                    try {
                        System.out.println(""\nIntroduzca el id de la montaña que desea modificar:"");
                        int id = sc.nextInt();
                        sc.nextLine();
                        System.out.println(""Indique el nombre: "");
                        String name = sc.nextLine();
                        System.out.println(""Indique la altura: "");
                        int h = sc.nextInt();
                        System.out.println(""Indique el año de primer ascenso: "");
                        int year = sc.nextInt();
                        sc.nextLine();
                        System.out.println(""Indique la región donde está ubicada: "");
                        String reg = sc.nextLine();
                        System.out.println(""Indique el país en el que se encuentra: "");
                        String ctry = sc.nextLine();
                        db.actualizarElemento(id, name, h, year, reg, ctry);
                    } catch (SQLException ex) {
                        Logger.getLogger(MP06_UF2_EJ2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;

                case 6: { // Eliminar fila                
                    try {
                        System.out.println(""\nIntroduzca el id de la montaña que desea borrar:"");
                        int id = sc.nextInt();
                        db.borrarElemento(id);
                    } catch (SQLException ex) {
                        Logger.getLogger(MP06_UF2_EJ2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;

                case 7: { // Eliminar tabla                                    
                    try {
                        System.out.println(""\nIndique el nombre de la tabla que desea eliminar: "");
                        String tName = sc.nextLine();
                        db.eliminarTabla(tName);
                    } catch (SQLException ex) {
                        Logger.getLogger(MP06_UF2_EJ2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;

                default:
                    break;
            }

        } while (opcionMenu != 0);
        
        db.desconectar();
        System.out.println(""\nEl programa ha finalizado"");

    }

}


*************************
---- MySQLConnection ----
*************************

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author luism
 */
public class MySQLConnection {

    // Declarar e instanciar variables
    private static Connection conn;
    private static final String DRIVER = ""com.mysql.cj.jdbc.Driver"";
    private static final String USER = ""root"";
    private static final String PASSWORD = """";
    private static final String DATABASENAME = ""geografia"";
    private static final String URL = ""jdbc:mysql://localhost:3306/"" + DATABASENAME;

    // Método para establecer la conexión
    public MySQLConnection() {
        conn = null;

        try {
            // Determinar DRIVER
            Class.forName(DRIVER);
            // Establecer conexión
            conn = (Connection) DriverManager.getConnection(URL, USER, PASSWORD);

            // Si se establece la conexión informar al usuario
            if (conn != null) {
                System.out.println(""\nConectado a la base de datos "" + DATABASENAME);
            }

        } catch (ClassNotFoundException | SQLException e) {
            // En caso de error en la conexión informar al usuario
            System.out.println(""\nError al conectar "" + e);
        }

    }

    // Método para finalizar la conexión
    public void desconectar() {

        // Si existe conexión, cerrarla e informar al usuario.
        if (conn != null) {
            try {
                conn.close();
                System.out.println(""\nDesconectado de la base de datos "" + DATABASENAME);
            } catch (SQLException ex) {
                Logger.getLogger(MySQLConnection.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    // Método CREAR tabla
    public void crearTabla(String nombreTabla) throws SQLException {
        eliminarTabla(nombreTabla); // Eliminar tabla en caso de que exista una con el mismo nombre
        // Declarar statement
        Statement st = null;
        try {
            st = conn.createStatement();
            // Crear consulta SQL
            String sql = ""CREATE TABLE "" + nombreTabla + "" "";
            sql += ""(id SERIAL PRIMARY KEY, "";
            sql += ""nombre VARCHAR(30), "";
            sql += ""altura INT(4), "";
            sql += ""primeraAscensión INT(4), "";
            sql += ""región VARCHAR(30), "";
            sql += ""país VARCHAR(30))"";
            // Ejecutar consulta
            st.execute(sql);
            // Dar feedback
            System.out.println(""\nTabla "" + nombreTabla + "" creada."");

        } finally {
            if (st != null) {
                st.close(); // Cerrar consulta si existiera
            }
        }

    }

    // Método ELIMINAR tabla
    public void eliminarTabla(String nombreTabla) throws SQLException {
        Statement st = null;
        try {
            // Crear consulta
            st = conn.createStatement();
            String sql = ""DROP TABLE IF EXISTS "" + nombreTabla;
            
            java.sql.DatabaseMetaData dbm = conn.getMetaData();
            // Comprobar si existe la tabla
            ResultSet tables = dbm.getTables(null, null, nombreTabla, null);
            if (tables.next()) {
                // Comprobar si existe la tabla
                if (tables.getString(3).equals(nombreTabla)) {
                    // Si se elimina satisfactoriamente, informar al usuario.
                    st.execute(sql);
                    System.out.println(""\nTabla "" + nombreTabla + "" eliminada."");
                } else {
                    // Informar si no se ha eliminado ninguna tabla
                    System.out.println(""\nNo existe ninguna tabla con el nombre "" + nombreTabla + ""."");
                }
            }

        } finally {
            if (st != null) {
                st.close(); // Cerrar consulta si existiera
            }
        }
    }

    // Método INSERTAR en tabla
    public void agregarElemento(String nombre, int altura, int fecha, String region, String pais) throws SQLException {

        // Crear consulta
        Statement st = null;
        String sql = ""INSERT INTO montañas (nombre, altura, primeraAscensión, región, país) "";
        sql += ""values ('"" + nombre + ""', "" + altura + "", "" + fecha + "", '"" + region + ""', '"" + pais + ""')"";

        try {
            st = conn.createStatement();

            // Ejecutar consulta y comprobar número de filas modificadas
            int num = st.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
            System.out.println(""\nNúmero de montañas añadidas "" + num);

            // Obtener la primary key de la montaña creada para dar feedback al usuario
            ResultSet rs = st.getGeneratedKeys();
            rs.next();
            int id = rs.getInt(1); // Obtener el valor numérico de la columna 1
            System.out.println(""\nMontaña "" + nombre + "" añadida con el ID:"" + id);
            rs.close(); // Cerrar ResultSet para liberar recursos                        

        } finally {
            if (st != null) {
                st.close(); // Cerrar consulta si existiera
            }
        }

    }

    // Método CONSULTAR tabla, este método muestra todas las filas de la tabla
    public void mostrarTabla() throws SQLException {
        // Crear statement
        String sql = ""SELECT * FROM montañas"";
        Statement st = null;

        System.out.println(""\nContenido de la tabla"");

        try {
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            int nMountains = 0;
            while (rs.next()) { // Iterar en cada fila con bucle while
                // Obtener las variables de cada fila
                int id = rs.getInt(""id"");
                String name = rs.getString(""nombre"");
                int h = rs.getInt(""altura"");
                int year = rs.getInt(""primeraAscensión"");
                String reg = rs.getString(""región"");
                String ctry = rs.getString(""país"");

                // Concatenar las variables
                String line = ""ID: "" + id + "", Nombre: "" + name + "", Altura: "" + h;
                line += "", Primera Ascención: "" + year + "", Región: "" + reg + "", País: "" + ctry;

                // Mostrar resultado en consola
                System.out.println(line);

                nMountains++;
            }

        } finally {
            if (st != null) {
                st.close(); // Cerrar consulta si existiera
            }
        }

    }

    // Método CONSULTAR montaña, este método muestra solo los datos de una montaña
    public void consultarMontaña(int id) {
        // Crear statement
        String sql = ""SELECT * FROM montañas WHERE id="" + id;
        Statement st = null;

        System.out.println(""\nInformación de la montaña con id:"" + id);

        try {
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            rs.next(); // Poner cursor en la primera fila encontrada

            // Obtener variables
            String name = rs.getString(""nombre"");
            int h = rs.getInt(""altura"");
            int year = rs.getInt(""primeraAscensión"");
            String reg = rs.getString(""región"");
            String ctry = rs.getString(""país"");

            // Concatenar las variables
            String line = ""ID: "" + id + "", Nombre: "" + name + "", Altura: "" + h;
            line += "", Primera Ascención: "" + year + "", Región: "" + reg + "", País: "" + ctry;

            // Mostrar resultado en consola
            System.out.println(line);

            if (st != null) {
                st.close(); // Cerrar consulta si existiera
            }

        } catch (SQLException e) {
            int IllegalOpErrCode = 0;
            if (e.getErrorCode() == IllegalOpErrCode) {
                System.out.println(""No existe ninguna montaña con el id introducido"");
            } else {
                System.out.println(""Error : "" + e.getMessage());
            }
        }

    }

    // Método ACTUALIZAR elemento de la tabla
    public void actualizarElemento(int id, String nombre, int altura, int fecha, String region, String pais) throws SQLException {

        // Crear consulta
        Statement st = null;
        String sql = ""UPDATE montañas "";
        sql += ""SET nombre = '"" + nombre + ""', altura= "" + altura;
        sql += "", primeraAscensión = "" + fecha + "", región ='"" + region + ""', país ='"" + pais + ""' "";
        sql += ""WHERE id ="" + id;

        try {
            st = conn.createStatement();
            // Informar de los datos actuales que serán modificados
            System.out.println(""\nSe modificarán los siguientes datos:"");
            this.consultarMontaña(id);
            // Ejecutar consulta
            st.executeUpdate(sql);

            // Informar al usuario
            System.out.println(""\nMontaña con ID:"" + id + "" modificada correctamente."");

        } finally {
            if (st != null) {
                st.close(); // Cerrar consulta si existiera
            }
        }

    }

    // Método BORRAR elemento de la tabla
    public void borrarElemento(int id) throws SQLException {

        // Crear consulta
        Statement st = null;
        String sql = ""DELETE FROM montañas WHERE id="" + id;

        try {
            st = conn.createStatement();
            st.executeUpdate(sql);
            System.out.println(""\nMontaña eliminada"");

        } finally {
            if (st != null) {
                st.close(); // Cerrar consulta si existiera
            }
        }

    }

}"
5JMzQ1KM,Untitled,Rockman_Rock,JSON,Thursday 26th of October 2023 01:50:05 PM CDT,"{
  ""$schema"":""https://raw.githubusercontent.com/Neos-Metaverse/JSONSchemas/main/schemas/NeosHeadlessConfig.schema.json"",
  ""comment"": ""DO NOT EDIT THIS FILE! Your changes will be lost. Copy it over and create a new file called Config.json"",
  ""universeId"": null,
  ""tickRate"": 60.0,
  ""maxConcurrentAssetTransfers"": 4,
  ""usernameOverride"": null,
  ""loginCredential"": ""[User Name]"",
  ""loginPassword"": ""[password]"",
  ""startWorlds"": [
    {
      ""isEnabled"": true,
      ""saveAsOwner"": null,
      ""autoInviteUsernames"": null,
      ""parentSessionIds"": null,
      ""autoInviteMessage"": null,
      ""autoRecover"": true,
      ""idleRestartInterval"": 7600,
      ""forcedRestartInterval"": -1.0,
      ""saveOnExit"": false,
      ""autosaveInterval"": -1.0,
      ""autoSleep"": true,
      ""sessionName"": null,
      ""customSessionId"": null,
      ""description"": null,
      ""maxUsers"": 10,
      ""accessLevel"": ""Anyone"",
      ""hideFromPublicListing"": null,
      ""tags"": null,
      ""mobileFriendly"": false,
      ""loadWorldURL"": ""resrec:///U-zahndy/R-f5595953-c8fd-4c94-a7b8-973b50c61711"",
      ""loadWorldPresetName"": null,
      ""overrideCorrespondingWorldId"": null,
      ""forcePort"": null,
      ""keepOriginalRoles"": false,
      ""defaultUserRoles"": {""Rockman Rock"": ""Admin"" },
      ""roleCloudVariable"": null,
      ""allowUserCloudVariable"": null,
      ""denyUserCloudVariable"": null,
      ""requiredUserJoinCloudVariable"": null,
      ""requiredUserJoinCloudVariableDenyMessage"": null,
      ""awayKickMinutes"": 600
    },
  ],
  ""dataFolder"": null,
  ""cacheFolder"": null,
  ""logsFolder"": null,
  ""allowedUrlHosts"": null,
  ""autoSpawnItems"": null
}"
VkAUQMBM,Exemplo HTML 3,hercioneto,HTML,Thursday 26th of October 2023 01:43:50 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Meu Site Exemplo</title>
    <style type=""text/css"">
        /* Reset CSS para garantir consistência entre navegadores */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Estilo do corpo da página */
body {
    font-family: Arial, sans-serif;
    background-color: #f5f5f5;
    color: #333;
    line-height: 1.6;
    margin: 0;
    padding: 0;
}

/* Estilo do cabeçalho */
header {
    background-color: #333;
    color: #fff;
    text-align: center;
    padding: 20px;
}

header h1 {
    font-size: 2em;
}

/* Estilo da navegação no cabeçalho */
nav ul {
    list-style: none;
}

nav li {
    display: inline;
    margin: 0 20px;
}

nav a {
    color: #fff;
    text-decoration: none;
}

/* Estilo do conteúdo */
.content {
    background-color: #fff;
    padding: 20px;
    margin: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.content h2 {
    font-size: 1.5em;
    color: #333;
}

/* Estilo de botão de chamada para ação (CTA) */
.cta-button {
    display: inline-block;
    background-color: #333;
    color: #fff;
    padding: 10px 20px;
    text-decoration: none;
    border-radius: 5px;
}

.cta-button:hover {
    background-color: #555;
}

/* Estilo do rodapé */
footer {
    background-color: #333;
    color: #fff;
    text-align: center;
    padding: 20px;
}

.footer-section {
    width: 25%;
    display: inline-block;
    vertical-align: top;
    padding: 10px;
}

.footer-section h3 {
    font-size: 1.2em;
}

.footer-section ul {
    list-style: none;
}

.footer-section li {
    margin: 5px 0;
}

/* Estilo de links no rodapé */
footer a {
    color: #fff;
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
}

    </style>
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href=""#"">Início</a></li>
                <li><a href=""#"">Sobre Nós</a></li>
                <li><a href=""#"">Serviços</a></li>
                <li><a href=""#"">Contato</a></li>
            </ul>
        </nav>
        <h1>Minha Empresa</h1>
    </header>

    <section class=""content"">
        <h2>Sobre Nós</h2>
        <p>Somos uma empresa dedicada a fornecer soluções criativas e inovadoras para nossos clientes.</p>
    </section>

    <section class=""content"">
        <h2>Nossos Serviços</h2>
        <ul>
            <li>Serviço 1</li>
            <li>Serviço 2</li>
            <li>Serviço 3</li>
        </ul>
    </section>

    <section class=""content"">
        <h2>Entre em Contato</h2>
        <p>Se você tiver alguma pergunta ou precisar de nossos serviços, entre em contato conosco.</p>
        <a href=""contato.html"" class=""cta-button"">Entre em Contato</a>
    </section>

    <footer>
        <div class=""footer-section"">
            <h3>Redes Sociais</h3>
            <ul>
                <li><a href=""#"">Facebook</a></li>
                <li><a href=""#"">Twitter</a></li>
                <li><a href=""#"">LinkedIn</a></li>
            </ul>
        </div>
        <div class=""footer-section"">
            <h3>Contato</h3>
            <p>info@minhaempresa.com</p>
        </div>
        <div class=""footer-section"">
            <h3>Newsletter</h3>
            <p>Assine nossa newsletter para receber as últimas notícias e atualizações.</p>
            <a href=""newsletter.html"" class=""cta-button"">Assinar</a>
        </div>
        <div class=""footer-section"">
            <h3>Localização</h3>
            <p>Rua Exemplo, 123<br>Cidade Exemplo</p>
        </div>
    </footer>
</body>
</html>
"
jAnuUxJH,Exemplo HTML 2,hercioneto,HTML,Thursday 26th of October 2023 01:40:07 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Minha Página</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        header {
            background-color: #333;
            color: #fff;
            text-align: center;
            padding: 20px;
        }

        header img {
            width: 30%;
            border-radius: 3%;
        }

        header h1 {
            display: inline;
        }

        .container {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
        }

        .column {
            width: 30%;
            float: left;
            margin: 10px;
        }

        footer {
            background-color: #333;
            color: #fff;
            text-align: center;
            padding: 20px;
            
        }

        footer .division {
            width: 25%;
            display: inline-block;
        }
    </style>
</head>
<body>
    <header>
        <img src=""imagens/logo.jpg"" alt=""Logo"">
        <h1>Título da Página</h1>
    </header>

    <div class=""container"">
        <div class=""column"">
            <h2>Coluna 1</h2>
            <p>Texto da coluna 1.</p>
        </div>

        <div class=""column"">
            <h2>Coluna 2</h2>
            <p>Texto da coluna 2.</p>
        </div>

        <div class=""column"">
            <h2>Coluna 3</h2>
            <p>Texto da coluna 3.</p>
        </div>
    </div>

    <footer>
        <div class=""division"">Divisão 1</div>
        <div class=""division"">Divisão 2</div>
        <div class=""division"">Divisão 3</div>
    </footer>
</body>
</html>
"
h5249x3C,Nigerian scammers [26-10-2/2023],bombaires,AIMMS,Thursday 26th of October 2023 01:37:49 PM CDT,"<a href=""mailto:piwu03210@gmail.com"">piwu03210@gmail.com</a>
<a href=""mailto:p.i.wu0.3.2.10@gmail.com"">p.i.wu0.3.2.10@gmail.com</a>
<a href=""mailto:pi.w.u03.210@gmail.com"">pi.w.u03.210@gmail.com</a>
<a href=""mailto:p.i.w.u03210@gmail.com"">p.i.w.u03210@gmail.com</a>
<a href=""mailto:p.i.w.u.0321.0@gmail.com"">p.i.w.u.0321.0@gmail.com</a>
<a href=""mailto:p.iwu0.3210@gmail.com"">p.iwu0.3210@gmail.com</a>
<a href=""mailto:piw.u.0321.0@gmail.com"">piw.u.0321.0@gmail.com</a>
<a href=""mailto:pi.w.u.0.32.1.0@gmail.com"">pi.w.u.0.32.1.0@gmail.com</a>
<a href=""mailto:p.iw.u03.2.10@gmail.com"">p.iw.u03.2.10@gmail.com</a>
<a href=""mailto:p.iw.u.0.3.21.0@gmail.com"">p.iw.u.0.3.21.0@gmail.com</a>
<a href=""mailto:p.iwu03.21.0@gmail.com"">p.iwu03.21.0@gmail.com</a>
<a href=""mailto:piw.u.0.3.21.0@gmail.com"">piw.u.0.3.21.0@gmail.com</a>
<a href=""mailto:piwu0321.0@gmail.com"">piwu0321.0@gmail.com</a>
<a href=""mailto:p.iwu.0.3.2.10@gmail.com"">p.iwu.0.3.2.10@gmail.com</a>
<a href=""mailto:pi.w.u.0.3.210@gmail.com"">pi.w.u.0.3.210@gmail.com</a>
<a href=""mailto:p.iw.u.03.2.10@gmail.com"">p.iw.u.03.2.10@gmail.com</a>
<a href=""mailto:pi.wu.032.10@gmail.com"">pi.wu.032.10@gmail.com</a>
<a href=""mailto:pi.wu.03.2.10@gmail.com"">pi.wu.03.2.10@gmail.com</a>
<a href=""mailto:p.iwu0.3.210@gmail.com"">p.iwu0.3.210@gmail.com</a>
<a href=""mailto:piwu.032.1.0@gmail.com"">piwu.032.1.0@gmail.com</a>
<a href=""mailto:p.i.wu.0.3.2.1.0@gmail.com"">p.i.wu.0.3.2.1.0@gmail.com</a>
<a href=""mailto:p.iw.u0.321.0@gmail.com"">p.iw.u0.321.0@gmail.com</a>
<a href=""mailto:p.iwu.0.3.2.1.0@gmail.com"">p.iwu.0.3.2.1.0@gmail.com</a>
<a href=""mailto:pi.wu0.32.10@gmail.com"">pi.wu0.32.10@gmail.com</a>
<a href=""mailto:p.iw.u03210@gmail.com"">p.iw.u03210@gmail.com</a>
<a href=""mailto:pi.w.u032.1.0@gmail.com"">pi.w.u032.1.0@gmail.com</a>
<a href=""mailto:p.i.wu.032.1.0@gmail.com"">p.i.wu.032.1.0@gmail.com</a>
<a href=""mailto:p.i.wu03210@gmail.com"">p.i.wu03210@gmail.com</a>
<a href=""mailto:p.i.wu032.1.0@gmail.com"">p.i.wu032.1.0@gmail.com</a>
<a href=""mailto:pi.w.u.03210@gmail.com"">pi.w.u.03210@gmail.com</a>
<a href=""mailto:piwu03.210@gmail.com"">piwu03.210@gmail.com</a>
<a href=""mailto:piw.u.0.32.1.0@gmail.com"">piw.u.0.32.1.0@gmail.com</a>
<a href=""mailto:p.i.wu.0.3.21.0@gmail.com"">p.i.wu.0.3.21.0@gmail.com</a>
<a href=""mailto:piw.u.0.3210@gmail.com"">piw.u.0.3210@gmail.com</a>
<a href=""mailto:pi.wu0.3.2.10@gmail.com"">pi.wu0.3.2.10@gmail.com</a>
<a href=""mailto:pi.wu.03.2.1.0@gmail.com"">pi.wu.03.2.1.0@gmail.com</a>
<a href=""mailto:p.i.w.u03.210@gmail.com"">p.i.w.u03.210@gmail.com</a>
<a href=""mailto:piwu.0.3.210@gmail.com"">piwu.0.3.210@gmail.com</a>
<a href=""mailto:p.iw.u.0.3.2.1.0@gmail.com"">p.iw.u.0.3.2.1.0@gmail.com</a>
<a href=""mailto:p.i.w.u.032.1.0@gmail.com"">p.i.w.u.032.1.0@gmail.com</a>
<a href=""mailto:piwu03.21.0@gmail.com"">piwu03.21.0@gmail.com</a>
<a href=""mailto:pi.w.u0.3.2.10@gmail.com"">pi.w.u0.3.2.10@gmail.com</a>
<a href=""mailto:pi.wu.032.1.0@gmail.com"">pi.wu.032.1.0@gmail.com</a>
<a href=""mailto:p.i.w.u0.3.2.10@gmail.com"">p.i.w.u0.3.2.10@gmail.com</a>
<a href=""mailto:p.iw.u03.210@gmail.com"">p.iw.u03.210@gmail.com</a>
<a href=""mailto:piw.u032.10@gmail.com"">piw.u032.10@gmail.com</a>
<a href=""mailto:p.iwu032.1.0@gmail.com"">p.iwu032.1.0@gmail.com</a>
<a href=""mailto:p.iw.u0.3.2.1.0@gmail.com"">p.iw.u0.3.2.1.0@gmail.com</a>
<a href=""mailto:piw.u0.32.1.0@gmail.com"">piw.u0.32.1.0@gmail.com</a>
<a href=""mailto:p.i.wu.0321.0@gmail.com"">p.i.wu.0321.0@gmail.com</a>
<a href=""mailto:p.i.w.u03.2.1.0@gmail.com"">p.i.w.u03.2.1.0@gmail.com</a>
<a href=""mailto:pi.w.u03.21.0@gmail.com"">pi.w.u03.21.0@gmail.com</a>
<a href=""mailto:p.i.wu03.2.1.0@gmail.com"">p.i.wu03.2.1.0@gmail.com</a>
<a href=""mailto:p.iwu.03.210@gmail.com"">p.iwu.03.210@gmail.com</a>
<a href=""mailto:piwu0.3.210@gmail.com"">piwu0.3.210@gmail.com</a>
<a href=""mailto:p.iw.u0.3.2.10@gmail.com"">p.iw.u0.3.2.10@gmail.com</a>
<a href=""mailto:p.iw.u.0.32.1.0@gmail.com"">p.iw.u.0.32.1.0@gmail.com</a>
<a href=""mailto:p.iw.u.0.32.10@gmail.com"">p.iw.u.0.32.10@gmail.com</a>
<a href=""mailto:pi.w.u.0321.0@gmail.com"">pi.w.u.0321.0@gmail.com</a>
<a href=""mailto:pi.w.u0.32.10@gmail.com"">pi.w.u0.32.10@gmail.com</a>
<a href=""mailto:p.iw.u0.3.21.0@gmail.com"">p.iw.u0.3.21.0@gmail.com</a>
<a href=""mailto:p.i.w.u.0.321.0@gmail.com"">p.i.w.u.0.321.0@gmail.com</a>
<a href=""mailto:piwu032.1.0@gmail.com"">piwu032.1.0@gmail.com</a>
<a href=""mailto:p.iwu03210@gmail.com"">p.iwu03210@gmail.com</a>
<a href=""mailto:piwu.0.3.21.0@gmail.com"">piwu.0.3.21.0@gmail.com</a>
<a href=""mailto:piwu03.2.10@gmail.com"">piwu03.2.10@gmail.com</a>
<a href=""mailto:p.iwu.03210@gmail.com"">p.iwu.03210@gmail.com</a>
<a href=""mailto:pi.wu032.1.0@gmail.com"">pi.wu032.1.0@gmail.com</a>
<a href=""mailto:piw.u0.321.0@gmail.com"">piw.u0.321.0@gmail.com</a>
<a href=""mailto:p.i.w.u0.321.0@gmail.com"">p.i.w.u0.321.0@gmail.com</a>
<a href=""mailto:p.iwu03.210@gmail.com"">p.iwu03.210@gmail.com</a>
<a href=""mailto:pi.wu.0321.0@gmail.com"">pi.wu.0321.0@gmail.com</a>
<a href=""mailto:p.iwu.032.10@gmail.com"">p.iwu.032.10@gmail.com</a>
<a href=""mailto:piwu03210@gmail.com"">piwu03210@gmail.com</a>
<a href=""mailto:piwu0.32.10@gmail.com"">piwu0.32.10@gmail.com</a>
<a href=""mailto:p.iwu.0.3210@gmail.com"">p.iwu.0.3210@gmail.com</a>
<a href=""mailto:p.iw.u.032.1.0@gmail.com"">p.iw.u.032.1.0@gmail.com</a>
<a href=""mailto:p.iw.u0.32.10@gmail.com"">p.iw.u0.32.10@gmail.com</a>
<a href=""mailto:pi.wu.0.32.10@gmail.com"">pi.wu.0.32.10@gmail.com</a>
<a href=""mailto:pi.wu03.21.0@gmail.com"">pi.wu03.21.0@gmail.com</a>
<a href=""mailto:p.i.w.u03.2.10@gmail.com"">p.i.w.u03.2.10@gmail.com</a>
<a href=""mailto:p.iw.u0.32.1.0@gmail.com"">p.iw.u0.32.1.0@gmail.com</a>
<a href=""mailto:pi.w.u.0.32.10@gmail.com"">pi.w.u.0.32.10@gmail.com</a>
<a href=""mailto:pi.w.u.03.210@gmail.com"">pi.w.u.03.210@gmail.com</a>
<a href=""mailto:p.iw.u0321.0@gmail.com"">p.iw.u0321.0@gmail.com</a>
<a href=""mailto:pi.wu03.2.1.0@gmail.com"">pi.wu03.2.1.0@gmail.com</a>
<a href=""mailto:piw.u0.3.2.10@gmail.com"">piw.u0.3.2.10@gmail.com</a>
<a href=""mailto:pi.wu.03.210@gmail.com"">pi.wu.03.210@gmail.com</a>
<a href=""mailto:piwu.0.3210@gmail.com"">piwu.0.3210@gmail.com</a>
<a href=""mailto:p.i.wu.0.3.2.10@gmail.com"">p.i.wu.0.3.2.10@gmail.com</a>
<a href=""mailto:p.i.wu.0.3210@gmail.com"">p.i.wu.0.3210@gmail.com</a>
<a href=""mailto:p.iwu0.3.21.0@gmail.com"">p.iwu0.3.21.0@gmail.com</a>
<a href=""mailto:p.iw.u032.10@gmail.com"">p.iw.u032.10@gmail.com</a>
<a href=""mailto:pi.wu032.10@gmail.com"">pi.wu032.10@gmail.com</a>
<a href=""mailto:p.iw.u.03.210@gmail.com"">p.iw.u.03.210@gmail.com</a>
<a href=""mailto:piw.u.0.3.2.1.0@gmail.com"">piw.u.0.3.2.1.0@gmail.com</a>
<a href=""mailto:p.i.wu0.3.21.0@gmail.com"">p.i.wu0.3.21.0@gmail.com</a>
<a href=""mailto:piw.u03.210@gmail.com"">piw.u03.210@gmail.com</a>
<a href=""mailto:p.iwu0.3.2.10@gmail.com"">p.iwu0.3.2.10@gmail.com</a>
<a href=""mailto:pi.w.u032.10@gmail.com"">pi.w.u032.10@gmail.com</a>
<a href=""mailto:p.iwu.0.321.0@gmail.com"">p.iwu.0.321.0@gmail.com</a>
<a href=""mailto:piwu0.3.21.0@gmail.com"">piwu0.3.21.0@gmail.com</a>
<a href=""mailto:p.i.wu0.32.10@gmail.com"">p.i.wu0.32.10@gmail.com</a>
<a href=""mailto:p.i.wu.03.2.10@gmail.com"">p.i.wu.03.2.10@gmail.com</a>
<a href=""mailto:p.iwu.0.32.10@gmail.com"">p.iwu.0.32.10@gmail.com</a>
<a href=""mailto:pi.w.u0.32.1.0@gmail.com"">pi.w.u0.32.1.0@gmail.com</a>
<a href=""mailto:piwu032.10@gmail.com"">piwu032.10@gmail.com</a>
<a href=""mailto:pi.w.u0.321.0@gmail.com"">pi.w.u0.321.0@gmail.com</a>
<a href=""mailto:piw.u.03.2.1.0@gmail.com"">piw.u.03.2.1.0@gmail.com</a>
<a href=""mailto:p.i.wu0.3.2.1.0@gmail.com"">p.i.wu0.3.2.1.0@gmail.com</a>
<a href=""mailto:piw.u.03.210@gmail.com"">piw.u.03.210@gmail.com</a>
<a href=""mailto:pi.wu0.32.1.0@gmail.com"">pi.wu0.32.1.0@gmail.com</a>
<a href=""mailto:p.i.w.u.0.3.21.0@gmail.com"">p.i.w.u.0.3.21.0@gmail.com</a>
<a href=""mailto:piwu.032.10@gmail.com"">piwu.032.10@gmail.com</a>
<a href=""mailto:p.i.wu.0.32.1.0@gmail.com"">p.i.wu.0.32.1.0@gmail.com</a>
<a href=""mailto:p.i.w.u.03.2.1.0@gmail.com"">p.i.w.u.03.2.1.0@gmail.com</a>
<a href=""mailto:p.iwu032.10@gmail.com"">p.iwu032.10@gmail.com</a>
<a href=""mailto:pi.wu0321.0@gmail.com"">pi.wu0321.0@gmail.com</a>
<a href=""mailto:pi.w.u.0.3.2.10@gmail.com"">pi.w.u.0.3.2.10@gmail.com</a>
<a href=""mailto:p.i.w.u0.32.1.0@gmail.com"">p.i.w.u0.32.1.0@gmail.com</a>
<a href=""mailto:piw.u.03210@gmail.com"">piw.u.03210@gmail.com</a>
<a href=""mailto:piwu.03210@gmail.com"">piwu.03210@gmail.com</a>
<a href=""mailto:pi.wu03.2.10@gmail.com"">pi.wu03.2.10@gmail.com</a>
<a href=""mailto:p.iwu.0321.0@gmail.com"">p.iwu.0321.0@gmail.com</a>
<a href=""mailto:pi.w.u03210@gmail.com"">pi.w.u03210@gmail.com</a>
<a href=""mailto:piwu.03.210@gmail.com"">piwu.03.210@gmail.com</a>
<a href=""mailto:p.iwu0.32.10@gmail.com"">p.iwu0.32.10@gmail.com</a>
<a href=""mailto:p.iw.u.03210@gmail.com"">p.iw.u.03210@gmail.com</a>
<a href=""mailto:p.i.w.u0321.0@gmail.com"">p.i.w.u0321.0@gmail.com</a>
<a href=""mailto:p.i.w.u.03.2.10@gmail.com"">p.i.w.u.03.2.10@gmail.com</a>
<a href=""mailto:piw.u.032.10@gmail.com"">piw.u.032.10@gmail.com</a>
<a href=""mailto:p.i.w.u0.3210@gmail.com"">p.i.w.u0.3210@gmail.com</a>
<a href=""mailto:piw.u.0.32.10@gmail.com"">piw.u.0.32.10@gmail.com</a>
<a href=""mailto:pi.w.u03.2.1.0@gmail.com"">pi.w.u03.2.1.0@gmail.com</a>
<a href=""mailto:pi.w.u.03.2.10@gmail.com"">pi.w.u.03.2.10@gmail.com</a>
<a href=""mailto:p.i.wu.0.3.210@gmail.com"">p.i.wu.0.3.210@gmail.com</a>
<a href=""mailto:pi.w.u.03.2.1.0@gmail.com"">pi.w.u.03.2.1.0@gmail.com</a>
<a href=""mailto:p.i.wu0.3210@gmail.com"">p.i.wu0.3210@gmail.com</a>
<a href=""mailto:piwu.03.21.0@gmail.com"">piwu.03.21.0@gmail.com</a>
<a href=""mailto:p.i.wu.03.2.1.0@gmail.com"">p.i.wu.03.2.1.0@gmail.com</a>
<a href=""mailto:pi.w.u0.3210@gmail.com"">pi.w.u0.3210@gmail.com</a>
<a href=""mailto:p.i.w.u0.3.21.0@gmail.com"">p.i.w.u0.3.21.0@gmail.com</a>
<a href=""mailto:p.i.w.u.0.32.10@gmail.com"">p.i.w.u.0.32.10@gmail.com</a>
<a href=""mailto:pi.wu0.3210@gmail.com"">pi.wu0.3210@gmail.com</a>
<a href=""mailto:piwu.0.3.2.1.0@gmail.com"">piwu.0.3.2.1.0@gmail.com</a>
<a href=""mailto:p.iw.u0.3.210@gmail.com"">p.iw.u0.3.210@gmail.com</a>
<a href=""mailto:p.i.w.u.0.3.2.10@gmail.com"">p.i.w.u.0.3.2.10@gmail.com</a>
<a href=""mailto:piw.u0.32.10@gmail.com"">piw.u0.32.10@gmail.com</a>
<a href=""mailto:p.iw.u.0321.0@gmail.com"">p.iw.u.0321.0@gmail.com</a>
<a href=""mailto:piw.u032.1.0@gmail.com"">piw.u032.1.0@gmail.com</a>
<a href=""mailto:pi.wu.03210@gmail.com"">pi.wu.03210@gmail.com</a>
<a href=""mailto:p.i.w.u03.21.0@gmail.com"">p.i.w.u03.21.0@gmail.com</a>
<a href=""mailto:p.i.w.u032.1.0@gmail.com"">p.i.w.u032.1.0@gmail.com</a>
<a href=""mailto:p.iw.u.032.10@gmail.com"">p.iw.u.032.10@gmail.com</a>
<a href=""mailto:piw.u0.3.2.1.0@gmail.com"">piw.u0.3.2.1.0@gmail.com</a>
<a href=""mailto:piwu.03.2.10@gmail.com"">piwu.03.2.10@gmail.com</a>
<a href=""mailto:piwu0.32.1.0@gmail.com"">piwu0.32.1.0@gmail.com</a>
<a href=""mailto:p.iwu0.321.0@gmail.com"">p.iwu0.321.0@gmail.com</a>
<a href=""mailto:p.i.wu0.321.0@gmail.com"">p.i.wu0.321.0@gmail.com</a>
<a href=""mailto:pi.w.u.0.3210@gmail.com"">pi.w.u.0.3210@gmail.com</a>
<a href=""mailto:p.i.w.u.0.32.1.0@gmail.com"">p.i.w.u.0.32.1.0@gmail.com</a>
<a href=""mailto:piwu0.3210@gmail.com"">piwu0.3210@gmail.com</a>
<a href=""mailto:piw.u.032.1.0@gmail.com"">piw.u.032.1.0@gmail.com</a>
<a href=""mailto:pi.wu0.3.21.0@gmail.com"">pi.wu0.3.21.0@gmail.com</a>
<a href=""mailto:p.i.w.u032.10@gmail.com"">p.i.w.u032.10@gmail.com</a>
<a href=""mailto:pi.wu.0.32.1.0@gmail.com"">pi.wu.0.32.1.0@gmail.com</a>
<a href=""mailto:pi.w.u.0.3.21.0@gmail.com"">pi.w.u.0.3.21.0@gmail.com</a>
<a href=""mailto:pi.w.u.0.321.0@gmail.com"">pi.w.u.0.321.0@gmail.com</a>
<a href=""mailto:piw.u.0.3.210@gmail.com"">piw.u.0.3.210@gmail.com</a>
<a href=""mailto:piw.u.0.3.2.10@gmail.com"">piw.u.0.3.2.10@gmail.com</a>
<a href=""mailto:piwu.0321.0@gmail.com"">piwu.0321.0@gmail.com</a>
<a href=""mailto:p.i.wu032.10@gmail.com"">p.i.wu032.10@gmail.com</a>
<a href=""mailto:pi.wu.03.21.0@gmail.com"">pi.wu.03.21.0@gmail.com</a>
<a href=""mailto:piw.u.03.2.10@gmail.com"">piw.u.03.2.10@gmail.com</a>
<a href=""mailto:p.i.wu03.21.0@gmail.com"">p.i.wu03.21.0@gmail.com</a>
<a href=""mailto:p.iwu0.3.2.1.0@gmail.com"">p.iwu0.3.2.1.0@gmail.com</a>
<a href=""mailto:p.i.wu0321.0@gmail.com"">p.i.wu0321.0@gmail.com</a>
<a href=""mailto:piwu0.3.2.1.0@gmail.com"">piwu0.3.2.1.0@gmail.com</a>
<a href=""mailto:pi.w.u0.3.210@gmail.com"">pi.w.u0.3.210@gmail.com</a>
<a href=""mailto:piw.u03.21.0@gmail.com"">piw.u03.21.0@gmail.com</a>
<a href=""mailto:piw.u03210@gmail.com"">piw.u03210@gmail.com</a>
<a href=""mailto:p.i.wu03.2.10@gmail.com"">p.i.wu03.2.10@gmail.com</a>
<a href=""mailto:piwu.0.3.2.10@gmail.com"">piwu.0.3.2.10@gmail.com</a>
<a href=""mailto:p.i.w.u.03210@gmail.com"">p.i.w.u.03210@gmail.com</a>
<a href=""mailto:p.i.w.u0.32.10@gmail.com"">p.i.w.u0.32.10@gmail.com</a>
<a href=""mailto:piwu.0.321.0@gmail.com"">piwu.0.321.0@gmail.com</a>
<a href=""mailto:pi.wu.0.321.0@gmail.com"">pi.wu.0.321.0@gmail.com</a>
<a href=""mailto:p.iw.u03.2.1.0@gmail.com"">p.iw.u03.2.1.0@gmail.com</a>
<a href=""mailto:p.i.w.u.0.3.210@gmail.com"">p.i.w.u.0.3.210@gmail.com</a>
<a href=""mailto:p.iwu03.2.1.0@gmail.com"">p.iwu03.2.1.0@gmail.com</a>
<a href=""mailto:p.iw.u0.3210@gmail.com"">p.iw.u0.3210@gmail.com</a>
<a href=""mailto:piwu0.321.0@gmail.com"">piwu0.321.0@gmail.com</a>
<a href=""mailto:p.i.wu0.3.210@gmail.com"">p.i.wu0.3.210@gmail.com</a>
<a href=""mailto:piw.u.03.21.0@gmail.com"">piw.u.03.21.0@gmail.com</a>
<a href=""mailto:pi.wu03.210@gmail.com"">pi.wu03.210@gmail.com</a>
<a href=""mailto:p.i.w.u0.3.2.1.0@gmail.com"">p.i.w.u0.3.2.1.0@gmail.com</a>
<a href=""mailto:p.iwu03.2.10@gmail.com"">p.iwu03.2.10@gmail.com</a>
<a href=""mailto:p.iwu.0.3.21.0@gmail.com"">p.iwu.0.3.21.0@gmail.com</a>
<a href=""mailto:pi.wu.0.3.2.10@gmail.com"">pi.wu.0.3.2.10@gmail.com</a>
<a href=""mailto:p.iw.u.03.21.0@gmail.com"">p.iw.u.03.21.0@gmail.com</a>
<a href=""mailto:piw.u03.2.1.0@gmail.com"">piw.u03.2.1.0@gmail.com</a>
<a href=""mailto:tarkwagold1@gmail.com"">tarkwagold1@gmail.com</a>
<a href=""mailto:t.arkwa.go.l.d.1@gmail.com"">t.arkwa.go.l.d.1@gmail.com</a>
<a href=""mailto:tarkwagol.d.1@gmail.com"">tarkwagol.d.1@gmail.com</a>
<a href=""mailto:t.ark.w.a.gol.d1@gmail.com"">t.ark.w.a.gol.d1@gmail.com</a>
<a href=""mailto:ta.rk.wa.g.old.1@gmail.com"">ta.rk.wa.g.old.1@gmail.com</a>
<a href=""mailto:ta.rk.w.a.g.ol.d.1@gmail.com"">ta.rk.w.a.g.ol.d.1@gmail.com</a>
<a href=""mailto:tark.wago.l.d1@gmail.com"">tark.wago.l.d1@gmail.com</a>
<a href=""mailto:tarkw.ago.ld.1@gmail.com"">tarkw.ago.ld.1@gmail.com</a>
<a href=""mailto:ta.rk.w.a.g.o.ld.1@gmail.com"">ta.rk.w.a.g.o.ld.1@gmail.com</a>
<a href=""mailto:tark.wa.g.old.1@gmail.com"">tark.wa.g.old.1@gmail.com</a>
<a href=""mailto:ta.rk.wa.go.l.d1@gmail.com"">ta.rk.wa.go.l.d1@gmail.com</a>
<a href=""mailto:ta.rkwago.l.d1@gmail.com"">ta.rkwago.l.d1@gmail.com</a>
<a href=""mailto:t.a.rk.wa.go.l.d.1@gmail.com"">t.a.rk.wa.go.l.d.1@gmail.com</a>
<a href=""mailto:t.ar.k.w.agol.d1@gmail.com"">t.ar.k.w.agol.d1@gmail.com</a>
<a href=""mailto:t.ar.k.wagold.1@gmail.com"">t.ar.k.wagold.1@gmail.com</a>
<a href=""mailto:t.a.rk.w.ago.ld1@gmail.com"">t.a.rk.w.ago.ld1@gmail.com</a>
<a href=""mailto:tarkw.a.go.l.d.1@gmail.com"">tarkw.a.go.l.d.1@gmail.com</a>
<a href=""mailto:t.a.rk.w.ag.o.ld1@gmail.com"">t.a.rk.w.ag.o.ld1@gmail.com</a>
<a href=""mailto:ta.r.kw.a.go.ld.1@gmail.com"">ta.r.kw.a.go.ld.1@gmail.com</a>
<a href=""mailto:t.ar.k.wag.old.1@gmail.com"">t.ar.k.wag.old.1@gmail.com</a>
<a href=""mailto:t.arkw.ag.o.ld1@gmail.com"">t.arkw.ag.o.ld1@gmail.com</a>
<a href=""mailto:ta.r.k.wag.old.1@gmail.com"">ta.r.k.wag.old.1@gmail.com</a>
<a href=""mailto:ta.r.kwagol.d.1@gmail.com"">ta.r.kwagol.d.1@gmail.com</a>
<a href=""mailto:ta.rk.w.agol.d1@gmail.com"">ta.rk.w.agol.d1@gmail.com</a>
<a href=""mailto:tar.k.wagol.d1@gmail.com"">tar.k.wagol.d1@gmail.com</a>
<a href=""mailto:tark.wa.g.ol.d1@gmail.com"">tark.wa.g.ol.d1@gmail.com</a>
<a href=""mailto:t.a.rk.w.ago.l.d.1@gmail.com"">t.a.rk.w.ago.l.d.1@gmail.com</a>
<a href=""mailto:t.arkw.a.gold.1@gmail.com"">t.arkw.a.gold.1@gmail.com</a>
<a href=""mailto:tark.w.a.gold1@gmail.com"">tark.w.a.gold1@gmail.com</a>
<a href=""mailto:tarkw.agold.1@gmail.com"">tarkw.agold.1@gmail.com</a>
<a href=""mailto:tar.kw.agold1@gmail.com"">tar.kw.agold1@gmail.com</a>
<a href=""mailto:ta.rk.w.a.go.ld1@gmail.com"">ta.rk.w.a.go.ld1@gmail.com</a>
<a href=""mailto:t.ar.kwago.ld1@gmail.com"">t.ar.kwago.ld1@gmail.com</a>
<a href=""mailto:ta.rkw.a.g.o.l.d.1@gmail.com"">ta.rkw.a.g.o.l.d.1@gmail.com</a>
<a href=""mailto:t.a.r.kw.ag.old.1@gmail.com"">t.a.r.kw.ag.old.1@gmail.com</a>
<a href=""mailto:t.a.r.k.w.agold.1@gmail.com"">t.a.r.k.w.agold.1@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.g.ol.d.1@gmail.com"">t.a.r.kw.a.g.ol.d.1@gmail.com</a>
<a href=""mailto:t.ar.k.wa.gol.d.1@gmail.com"">t.ar.k.wa.gol.d.1@gmail.com</a>
<a href=""mailto:ta.rkwa.g.ol.d1@gmail.com"">ta.rkwa.g.ol.d1@gmail.com</a>
<a href=""mailto:tarkwa.g.o.l.d.1@gmail.com"">tarkwa.g.o.l.d.1@gmail.com</a>
<a href=""mailto:ta.r.kwago.ld1@gmail.com"">ta.r.kwago.ld1@gmail.com</a>
<a href=""mailto:t.arkw.a.g.o.l.d1@gmail.com"">t.arkw.a.g.o.l.d1@gmail.com</a>
<a href=""mailto:ta.rk.wag.o.l.d1@gmail.com"">ta.rk.wag.o.l.d1@gmail.com</a>
<a href=""mailto:tar.kwagol.d.1@gmail.com"">tar.kwagol.d.1@gmail.com</a>
<a href=""mailto:ta.r.k.wa.go.l.d.1@gmail.com"">ta.r.k.wa.go.l.d.1@gmail.com</a>
<a href=""mailto:t.a.r.kw.agold1@gmail.com"">t.a.r.kw.agold1@gmail.com</a>
<a href=""mailto:t.ar.k.wago.ld1@gmail.com"">t.ar.k.wago.ld1@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.go.l.d.1@gmail.com"">t.a.r.k.w.a.go.l.d.1@gmail.com</a>
<a href=""mailto:t.ark.w.ago.ld1@gmail.com"">t.ark.w.ago.ld1@gmail.com</a>
<a href=""mailto:ta.rkw.a.g.o.ld1@gmail.com"">ta.rkw.a.g.o.ld1@gmail.com</a>
<a href=""mailto:ta.rk.wa.go.l.d.1@gmail.com"">ta.rk.wa.go.l.d.1@gmail.com</a>
<a href=""mailto:t.ar.k.w.ag.o.l.d1@gmail.com"">t.ar.k.w.ag.o.l.d1@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.g.old1@gmail.com"">t.a.r.kw.a.g.old1@gmail.com</a>
<a href=""mailto:t.ark.wa.go.l.d.1@gmail.com"">t.ark.wa.go.l.d.1@gmail.com</a>
<a href=""mailto:ta.rkw.ag.ol.d.1@gmail.com"">ta.rkw.ag.ol.d.1@gmail.com</a>
<a href=""mailto:t.a.rk.wag.old1@gmail.com"">t.a.rk.wag.old1@gmail.com</a>
<a href=""mailto:ta.r.k.w.ag.o.ld.1@gmail.com"">ta.r.k.w.ag.o.ld.1@gmail.com</a>
<a href=""mailto:tark.wa.gold.1@gmail.com"">tark.wa.gold.1@gmail.com</a>
<a href=""mailto:ta.rkwag.old.1@gmail.com"">ta.rkwag.old.1@gmail.com</a>
<a href=""mailto:ta.r.k.w.agold1@gmail.com"">ta.r.k.w.agold1@gmail.com</a>
<a href=""mailto:t.ar.k.wa.g.old1@gmail.com"">t.ar.k.wa.g.old1@gmail.com</a>
<a href=""mailto:tarkwag.o.ld.1@gmail.com"">tarkwag.o.ld.1@gmail.com</a>
<a href=""mailto:tar.kw.agol.d1@gmail.com"">tar.kw.agol.d1@gmail.com</a>
<a href=""mailto:ta.rk.wag.old1@gmail.com"">ta.rk.wag.old1@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.g.o.l.d.1@gmail.com"">t.a.r.kw.a.g.o.l.d.1@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.gold.1@gmail.com"">t.a.r.k.w.a.gold.1@gmail.com</a>
<a href=""mailto:tark.w.ag.ol.d.1@gmail.com"">tark.w.ag.ol.d.1@gmail.com</a>
<a href=""mailto:t.a.rk.w.a.gol.d.1@gmail.com"">t.a.rk.w.a.gol.d.1@gmail.com</a>
<a href=""mailto:tark.w.a.go.ld1@gmail.com"">tark.w.a.go.ld1@gmail.com</a>
<a href=""mailto:ta.rkwa.g.o.ld.1@gmail.com"">ta.rkwa.g.o.ld.1@gmail.com</a>
<a href=""mailto:t.arkwagold1@gmail.com"">t.arkwagold1@gmail.com</a>
<a href=""mailto:t.a.r.k.wago.ld.1@gmail.com"">t.a.r.k.wago.ld.1@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.g.ol.d1@gmail.com"">t.a.r.kw.a.g.ol.d1@gmail.com</a>
<a href=""mailto:tar.k.wa.gol.d1@gmail.com"">tar.k.wa.gol.d1@gmail.com</a>
<a href=""mailto:tark.wa.go.l.d.1@gmail.com"">tark.wa.go.l.d.1@gmail.com</a>
<a href=""mailto:ta.r.k.wago.l.d1@gmail.com"">ta.r.k.wago.l.d1@gmail.com</a>
<a href=""mailto:t.a.rk.wagold1@gmail.com"">t.a.rk.wagold1@gmail.com</a>
<a href=""mailto:tar.kwa.go.ld1@gmail.com"">tar.kwa.go.ld1@gmail.com</a>
<a href=""mailto:ta.rkwago.ld.1@gmail.com"">ta.rkwago.ld.1@gmail.com</a>
<a href=""mailto:tarkwa.g.ol.d.1@gmail.com"">tarkwa.g.ol.d.1@gmail.com</a>
<a href=""mailto:t.ar.kwagol.d.1@gmail.com"">t.ar.kwagol.d.1@gmail.com</a>
<a href=""mailto:ta.rkw.a.gol.d1@gmail.com"">ta.rkw.a.gol.d1@gmail.com</a>
<a href=""mailto:t.ark.wa.go.ld.1@gmail.com"">t.ark.wa.go.ld.1@gmail.com</a>
<a href=""mailto:ta.rkw.agol.d.1@gmail.com"">ta.rkw.agol.d.1@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.g.o.l.d1@gmail.com"">t.a.r.k.w.a.g.o.l.d1@gmail.com</a>
<a href=""mailto:t.ark.w.ag.o.ld.1@gmail.com"">t.ark.w.ag.o.ld.1@gmail.com</a>
<a href=""mailto:tarkwago.l.d.1@gmail.com"">tarkwago.l.d.1@gmail.com</a>
<a href=""mailto:tar.kw.a.g.o.l.d1@gmail.com"">tar.kw.a.g.o.l.d1@gmail.com</a>
<a href=""mailto:ta.r.kwago.l.d1@gmail.com"">ta.r.kwago.l.d1@gmail.com</a>
<a href=""mailto:t.a.r.k.w.ag.old1@gmail.com"">t.a.r.k.w.ag.old1@gmail.com</a>
<a href=""mailto:ta.r.kw.agold1@gmail.com"">ta.r.kw.agold1@gmail.com</a>
<a href=""mailto:t.ark.wa.g.o.ld1@gmail.com"">t.ark.wa.g.o.ld1@gmail.com</a>
<a href=""mailto:tar.kw.a.gold.1@gmail.com"">tar.kw.a.gold.1@gmail.com</a>
<a href=""mailto:t.arkwa.g.o.ld1@gmail.com"">t.arkwa.g.o.ld1@gmail.com</a>
<a href=""mailto:tar.kw.ag.o.l.d1@gmail.com"">tar.kw.ag.o.l.d1@gmail.com</a>
<a href=""mailto:tar.kw.a.g.o.l.d.1@gmail.com"">tar.kw.a.g.o.l.d.1@gmail.com</a>
<a href=""mailto:t.a.r.kwa.g.o.ld.1@gmail.com"">t.a.r.kwa.g.o.ld.1@gmail.com</a>
<a href=""mailto:tark.w.ag.o.l.d1@gmail.com"">tark.w.ag.o.l.d1@gmail.com</a>
<a href=""mailto:t.a.rk.w.a.g.o.l.d.1@gmail.com"">t.a.rk.w.a.g.o.l.d.1@gmail.com</a>
<a href=""mailto:t.a.r.kwag.o.ld.1@gmail.com"">t.a.r.kwag.o.ld.1@gmail.com</a>
<a href=""mailto:ta.r.k.wa.g.o.ld.1@gmail.com"">ta.r.k.wa.g.o.ld.1@gmail.com</a>
<a href=""mailto:t.a.rk.wa.go.ld.1@gmail.com"">t.a.rk.wa.go.ld.1@gmail.com</a>
<a href=""mailto:tarkw.a.go.ld1@gmail.com"">tarkw.a.go.ld1@gmail.com</a>
<a href=""mailto:ta.rk.wa.gol.d.1@gmail.com"">ta.rk.wa.gol.d.1@gmail.com</a>
<a href=""mailto:t.arkwa.gol.d.1@gmail.com"">t.arkwa.gol.d.1@gmail.com</a>
<a href=""mailto:ta.r.kwa.gol.d1@gmail.com"">ta.r.kwa.gol.d1@gmail.com</a>
<a href=""mailto:t.arkw.agold.1@gmail.com"">t.arkw.agold.1@gmail.com</a>
<a href=""mailto:t.a.rk.wago.ld.1@gmail.com"">t.a.rk.wago.ld.1@gmail.com</a>
<a href=""mailto:t.a.rk.w.ago.l.d1@gmail.com"">t.a.rk.w.ago.l.d1@gmail.com</a>
<a href=""mailto:t.a.r.kwag.old1@gmail.com"">t.a.r.kwag.old1@gmail.com</a>
<a href=""mailto:tar.k.wag.o.l.d.1@gmail.com"">tar.k.wag.o.l.d.1@gmail.com</a>
<a href=""mailto:t.a.rk.w.a.g.o.l.d1@gmail.com"">t.a.rk.w.a.g.o.l.d1@gmail.com</a>
<a href=""mailto:t.ar.kw.a.g.o.l.d.1@gmail.com"">t.ar.kw.a.g.o.l.d.1@gmail.com</a>
<a href=""mailto:t.ar.k.w.a.g.old1@gmail.com"">t.ar.k.w.a.g.old1@gmail.com</a>
<a href=""mailto:t.ar.kw.ago.l.d1@gmail.com"">t.ar.kw.ago.l.d1@gmail.com</a>
<a href=""mailto:tarkwa.go.ld1@gmail.com"">tarkwa.go.ld1@gmail.com</a>
<a href=""mailto:ta.r.kw.a.g.old.1@gmail.com"">ta.r.kw.a.g.old.1@gmail.com</a>
<a href=""mailto:tark.wagold1@gmail.com"">tark.wagold1@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.go.ld.1@gmail.com"">t.a.r.kw.a.go.ld.1@gmail.com</a>
<a href=""mailto:t.a.r.kwag.ol.d1@gmail.com"">t.a.r.kwag.ol.d1@gmail.com</a>
<a href=""mailto:tar.k.w.ag.ol.d1@gmail.com"">tar.k.w.ag.ol.d1@gmail.com</a>
<a href=""mailto:ta.rk.w.ag.o.ld1@gmail.com"">ta.rk.w.ag.o.ld1@gmail.com</a>
<a href=""mailto:t.a.r.k.wag.o.l.d1@gmail.com"">t.a.r.k.wag.o.l.d1@gmail.com</a>
<a href=""mailto:tark.w.agold.1@gmail.com"">tark.w.agold.1@gmail.com</a>
<a href=""mailto:t.arkw.a.g.ol.d1@gmail.com"">t.arkw.a.g.ol.d1@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.gold.1@gmail.com"">t.a.r.kw.a.gold.1@gmail.com</a>
<a href=""mailto:ta.r.k.wag.o.ld.1@gmail.com"">ta.r.k.wag.o.ld.1@gmail.com</a>
<a href=""mailto:tarkwag.o.l.d1@gmail.com"">tarkwag.o.l.d1@gmail.com</a>
<a href=""mailto:t.a.r.k.wag.o.ld1@gmail.com"">t.a.r.k.wag.o.ld1@gmail.com</a>
<a href=""mailto:tar.kw.a.g.o.ld1@gmail.com"">tar.kw.a.g.o.ld1@gmail.com</a>
<a href=""mailto:ta.rkwa.g.o.ld1@gmail.com"">ta.rkwa.g.o.ld1@gmail.com</a>
<a href=""mailto:ta.r.kwag.o.ld.1@gmail.com"">ta.r.kwag.o.ld.1@gmail.com</a>
<a href=""mailto:ta.r.kw.a.g.ol.d.1@gmail.com"">ta.r.kw.a.g.ol.d.1@gmail.com</a>
<a href=""mailto:tar.kw.ag.o.ld1@gmail.com"">tar.kw.ag.o.ld1@gmail.com</a>
<a href=""mailto:tarkwa.g.old.1@gmail.com"">tarkwa.g.old.1@gmail.com</a>
<a href=""mailto:ta.r.kwag.old1@gmail.com"">ta.r.kwag.old1@gmail.com</a>
<a href=""mailto:ta.rkwago.ld1@gmail.com"">ta.rkwago.ld1@gmail.com</a>
<a href=""mailto:tar.k.w.ag.o.ld.1@gmail.com"">tar.k.w.ag.o.ld.1@gmail.com</a>
<a href=""mailto:ta.r.kw.a.g.old1@gmail.com"">ta.r.kw.a.g.old1@gmail.com</a>
<a href=""mailto:t.ar.kwa.g.ol.d.1@gmail.com"">t.ar.kwa.g.ol.d.1@gmail.com</a>
<a href=""mailto:tarkwag.old.1@gmail.com"">tarkwag.old.1@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.g.o.ld.1@gmail.com"">t.a.r.k.w.a.g.o.ld.1@gmail.com</a>
<a href=""mailto:t.ar.kw.a.g.old1@gmail.com"">t.ar.kw.a.g.old1@gmail.com</a>
<a href=""mailto:t.ar.k.w.agol.d.1@gmail.com"">t.ar.k.w.agol.d.1@gmail.com</a>
<a href=""mailto:tarkw.ago.l.d1@gmail.com"">tarkw.ago.l.d1@gmail.com</a>
<a href=""mailto:t.a.rkwa.g.old1@gmail.com"">t.a.rkwa.g.old1@gmail.com</a>
<a href=""mailto:tarkwag.o.l.d.1@gmail.com"">tarkwag.o.l.d.1@gmail.com</a>
<a href=""mailto:t.ar.kw.a.g.old.1@gmail.com"">t.ar.kw.a.g.old.1@gmail.com</a>
<a href=""mailto:t.a.rkwa.go.ld.1@gmail.com"">t.a.rkwa.go.ld.1@gmail.com</a>
<a href=""mailto:t.ar.kw.ago.l.d.1@gmail.com"">t.ar.kw.ago.l.d.1@gmail.com</a>
<a href=""mailto:ta.rkw.ag.o.l.d.1@gmail.com"">ta.rkw.ag.o.l.d.1@gmail.com</a>
<a href=""mailto:t.ar.kwa.go.ld1@gmail.com"">t.ar.kwa.go.ld1@gmail.com</a>
<a href=""mailto:t.ar.k.w.ag.old1@gmail.com"">t.ar.k.w.ag.old1@gmail.com</a>
<a href=""mailto:tar.kwa.g.o.ld.1@gmail.com"">tar.kwa.g.o.ld.1@gmail.com</a>
<a href=""mailto:tark.w.a.gol.d1@gmail.com"">tark.w.a.gol.d1@gmail.com</a>
<a href=""mailto:t.a.r.kw.ago.ld.1@gmail.com"">t.a.r.kw.ago.ld.1@gmail.com</a>
<a href=""mailto:t.a.rkw.ag.o.l.d1@gmail.com"">t.a.rkw.ag.o.l.d1@gmail.com</a>
<a href=""mailto:t.ark.wa.g.o.l.d1@gmail.com"">t.ark.wa.g.o.l.d1@gmail.com</a>
<a href=""mailto:tarkw.a.g.old.1@gmail.com"">tarkw.a.g.old.1@gmail.com</a>
<a href=""mailto:ta.r.kwa.g.old1@gmail.com"">ta.r.kwa.g.old1@gmail.com</a>
<a href=""mailto:tarkwa.go.ld.1@gmail.com"">tarkwa.go.ld.1@gmail.com</a>
<a href=""mailto:ta.r.k.wa.g.o.l.d.1@gmail.com"">ta.r.k.wa.g.o.l.d.1@gmail.com</a>
<a href=""mailto:t.ar.kwag.o.l.d1@gmail.com"">t.ar.kwag.o.l.d1@gmail.com</a>
<a href=""mailto:tar.k.wag.ol.d1@gmail.com"">tar.k.wag.ol.d1@gmail.com</a>
<a href=""mailto:t.arkw.a.g.o.l.d.1@gmail.com"">t.arkw.a.g.o.l.d.1@gmail.com</a>
<a href=""mailto:ta.r.k.wa.go.l.d1@gmail.com"">ta.r.k.wa.go.l.d1@gmail.com</a>
<a href=""mailto:t.a.rkwago.ld.1@gmail.com"">t.a.rkwago.ld.1@gmail.com</a>
<a href=""mailto:ta.r.k.w.a.g.old.1@gmail.com"">ta.r.k.w.a.g.old.1@gmail.com</a>
<a href=""mailto:t.a.r.k.w.ag.ol.d.1@gmail.com"">t.a.r.k.w.ag.ol.d.1@gmail.com</a>
<a href=""mailto:t.ar.kwa.gold.1@gmail.com"">t.ar.kwa.gold.1@gmail.com</a>
<a href=""mailto:tar.kw.ag.ol.d.1@gmail.com"">tar.kw.ag.ol.d.1@gmail.com</a>
<a href=""mailto:tar.k.wa.g.old.1@gmail.com"">tar.k.wa.g.old.1@gmail.com</a>
<a href=""mailto:t.ark.wa.gol.d1@gmail.com"">t.ark.wa.gol.d1@gmail.com</a>
<a href=""mailto:t.ark.wa.g.ol.d1@gmail.com"">t.ark.wa.g.ol.d1@gmail.com</a>
<a href=""mailto:tar.k.wa.gol.d.1@gmail.com"">tar.k.wa.gol.d.1@gmail.com</a>
<a href=""mailto:ta.r.kwa.g.o.ld.1@gmail.com"">ta.r.kwa.g.o.ld.1@gmail.com</a>
<a href=""mailto:t.ar.k.wag.ol.d.1@gmail.com"">t.ar.k.wag.ol.d.1@gmail.com</a>
<a href=""mailto:tarkw.a.g.o.l.d.1@gmail.com"">tarkw.a.g.o.l.d.1@gmail.com</a>
<a href=""mailto:tark.wa.g.o.l.d.1@gmail.com"">tark.wa.g.o.l.d.1@gmail.com</a>
<a href=""mailto:t.a.rk.wagol.d.1@gmail.com"">t.a.rk.wagol.d.1@gmail.com</a>
<a href=""mailto:t.a.r.kwa.g.o.l.d.1@gmail.com"">t.a.r.kwa.g.o.l.d.1@gmail.com</a>
<a href=""mailto:ta.r.kw.ago.ld.1@gmail.com"">ta.r.kw.ago.ld.1@gmail.com</a>
<a href=""mailto:tark.wa.go.ld.1@gmail.com"">tark.wa.go.ld.1@gmail.com</a>
<a href=""mailto:t.arkw.ag.ol.d.1@gmail.com"">t.arkw.ag.ol.d.1@gmail.com</a>
<a href=""mailto:tar.kwa.g.old.1@gmail.com"">tar.kwa.g.old.1@gmail.com</a>
<a href=""mailto:t.a.rkw.a.gold1@gmail.com"">t.a.rkw.a.gold1@gmail.com</a>
<a href=""mailto:t.ar.kw.a.g.o.ld.1@gmail.com"">t.ar.kw.a.g.o.ld.1@gmail.com</a>
<a href=""mailto:ta.rkwa.go.l.d1@gmail.com"">ta.rkwa.go.l.d1@gmail.com</a>
<a href=""mailto:tarkwa.g.o.l.d1@gmail.com"">tarkwa.g.o.l.d1@gmail.com</a>
<a href=""mailto:ta.r.k.w.ag.o.ld1@gmail.com"">ta.r.k.w.ag.o.ld1@gmail.com</a>
<a href=""mailto:t.a.rk.wag.old.1@gmail.com"">t.a.rk.wag.old.1@gmail.com</a>
<a href=""mailto:t.a.r.kwago.ld.1@gmail.com"">t.a.r.kwago.ld.1@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.g.o.ld1@gmail.com"">t.a.r.k.w.a.g.o.ld1@gmail.com</a>
<a href=""mailto:tarkw.ag.old.1@gmail.com"">tarkw.ag.old.1@gmail.com</a>
<a href=""mailto:ta.r.k.wago.l.d.1@gmail.com"">ta.r.k.wago.l.d.1@gmail.com</a>
<a href=""mailto:ta.r.k.w.a.g.old1@gmail.com"">ta.r.k.w.a.g.old1@gmail.com</a>
<a href=""mailto:tar.k.w.ago.l.d.1@gmail.com"">tar.k.w.ago.l.d.1@gmail.com</a>
<a href=""mailto:ta.rkw.a.g.old.1@gmail.com"">ta.rkw.a.g.old.1@gmail.com</a>
<a href=""mailto:t.ark.wago.l.d.1@gmail.com"">t.ark.wago.l.d.1@gmail.com</a>
<a href=""mailto:t.a.rkw.a.g.old.1@gmail.com"">t.a.rkw.a.g.old.1@gmail.com</a>
<a href=""mailto:ta.r.kwagol.d1@gmail.com"">ta.r.kwagol.d1@gmail.com</a>
<a href=""mailto:tarkwagold2@gmail.com"">tarkwagold2@gmail.com</a>
<a href=""mailto:tar.kw.a.gol.d2@gmail.com"">tar.kw.a.gol.d2@gmail.com</a>
<a href=""mailto:t.arkwa.g.old2@gmail.com"">t.arkwa.g.old2@gmail.com</a>
<a href=""mailto:ta.r.k.w.a.g.o.l.d.2@gmail.com"">ta.r.k.w.a.g.o.l.d.2@gmail.com</a>
<a href=""mailto:t.arkwa.g.ol.d.2@gmail.com"">t.arkwa.g.ol.d.2@gmail.com</a>
<a href=""mailto:ta.rkwagold.2@gmail.com"">ta.rkwagold.2@gmail.com</a>
<a href=""mailto:tarkw.ag.old.2@gmail.com"">tarkw.ag.old.2@gmail.com</a>
<a href=""mailto:ta.rk.wag.o.ld2@gmail.com"">ta.rk.wag.o.ld2@gmail.com</a>
<a href=""mailto:tar.kwa.gol.d2@gmail.com"">tar.kwa.gol.d2@gmail.com</a>
<a href=""mailto:t.arkwago.l.d2@gmail.com"">t.arkwago.l.d2@gmail.com</a>
<a href=""mailto:t.a.rk.w.a.g.old.2@gmail.com"">t.a.rk.w.a.g.old.2@gmail.com</a>
<a href=""mailto:t.a.rkw.a.go.l.d.2@gmail.com"">t.a.rkw.a.go.l.d.2@gmail.com</a>
<a href=""mailto:t.ar.k.wago.ld.2@gmail.com"">t.ar.k.wago.ld.2@gmail.com</a>
<a href=""mailto:t.a.rk.w.ag.o.l.d2@gmail.com"">t.a.rk.w.ag.o.l.d2@gmail.com</a>
<a href=""mailto:tark.w.ag.old.2@gmail.com"">tark.w.ag.old.2@gmail.com</a>
<a href=""mailto:ta.r.k.w.ag.o.ld.2@gmail.com"">ta.r.k.w.ag.o.ld.2@gmail.com</a>
<a href=""mailto:tar.k.wa.go.l.d.2@gmail.com"">tar.k.wa.go.l.d.2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.ag.old.2@gmail.com"">t.a.r.k.w.ag.old.2@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.g.o.ld2@gmail.com"">t.a.r.kw.a.g.o.ld2@gmail.com</a>
<a href=""mailto:t.a.r.k.wagol.d2@gmail.com"">t.a.r.k.wagol.d2@gmail.com</a>
<a href=""mailto:ta.rk.wa.go.l.d.2@gmail.com"">ta.rk.wa.go.l.d.2@gmail.com</a>
<a href=""mailto:ta.rk.wa.go.ld2@gmail.com"">ta.rk.wa.go.ld2@gmail.com</a>
<a href=""mailto:t.a.r.kw.ag.old2@gmail.com"">t.a.r.kw.ag.old2@gmail.com</a>
<a href=""mailto:t.a.r.k.wa.gold.2@gmail.com"">t.a.r.k.wa.gold.2@gmail.com</a>
<a href=""mailto:t.a.rkwag.o.l.d2@gmail.com"">t.a.rkwag.o.l.d2@gmail.com</a>
<a href=""mailto:tark.wa.g.ol.d.2@gmail.com"">tark.wa.g.ol.d.2@gmail.com</a>
<a href=""mailto:ta.r.kwa.g.o.ld.2@gmail.com"">ta.r.kwa.g.o.ld.2@gmail.com</a>
<a href=""mailto:t.a.rkw.a.go.ld.2@gmail.com"">t.a.rkw.a.go.ld.2@gmail.com</a>
<a href=""mailto:t.ar.k.wa.go.l.d.2@gmail.com"">t.ar.k.wa.go.l.d.2@gmail.com</a>
<a href=""mailto:t.a.rk.wa.g.o.ld.2@gmail.com"">t.a.rk.wa.g.o.ld.2@gmail.com</a>
<a href=""mailto:t.a.rk.wag.ol.d.2@gmail.com"">t.a.rk.wag.ol.d.2@gmail.com</a>
<a href=""mailto:tar.k.w.a.gol.d.2@gmail.com"">tar.k.w.a.gol.d.2@gmail.com</a>
<a href=""mailto:tar.kwag.old2@gmail.com"">tar.kwag.old2@gmail.com</a>
<a href=""mailto:t.ar.kwagold2@gmail.com"">t.ar.kwagold2@gmail.com</a>
<a href=""mailto:ta.rkwag.old.2@gmail.com"">ta.rkwag.old.2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.agol.d.2@gmail.com"">t.a.r.k.w.agol.d.2@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.g.o.l.d.2@gmail.com"">t.a.r.kw.a.g.o.l.d.2@gmail.com</a>
<a href=""mailto:t.a.rkw.ag.o.l.d.2@gmail.com"">t.a.rkw.ag.o.l.d.2@gmail.com</a>
<a href=""mailto:t.arkwagold2@gmail.com"">t.arkwagold2@gmail.com</a>
<a href=""mailto:t.ark.wa.gold2@gmail.com"">t.ark.wa.gold2@gmail.com</a>
<a href=""mailto:tarkwago.ld.2@gmail.com"">tarkwago.ld.2@gmail.com</a>
<a href=""mailto:t.a.rkwa.g.old2@gmail.com"">t.a.rkwa.g.old2@gmail.com</a>
<a href=""mailto:tarkw.agol.d2@gmail.com"">tarkw.agol.d2@gmail.com</a>
<a href=""mailto:ta.r.kwago.l.d.2@gmail.com"">ta.r.kwago.l.d.2@gmail.com</a>
<a href=""mailto:t.a.r.kwa.go.l.d2@gmail.com"">t.a.r.kwa.go.l.d2@gmail.com</a>
<a href=""mailto:tar.kwagol.d.2@gmail.com"">tar.kwagol.d.2@gmail.com</a>
<a href=""mailto:t.a.rk.wa.gol.d.2@gmail.com"">t.a.rk.wa.gol.d.2@gmail.com</a>
<a href=""mailto:tar.k.w.a.go.ld2@gmail.com"">tar.k.w.a.go.ld2@gmail.com</a>
<a href=""mailto:tark.wag.ol.d2@gmail.com"">tark.wag.ol.d2@gmail.com</a>
<a href=""mailto:t.ar.kw.a.g.o.l.d2@gmail.com"">t.ar.kw.a.g.o.l.d2@gmail.com</a>
<a href=""mailto:ta.rk.w.ag.ol.d.2@gmail.com"">ta.rk.w.ag.ol.d.2@gmail.com</a>
<a href=""mailto:t.ar.kw.a.gol.d.2@gmail.com"">t.ar.kw.a.gol.d.2@gmail.com</a>
<a href=""mailto:t.ark.w.ago.ld.2@gmail.com"">t.ark.w.ago.ld.2@gmail.com</a>
<a href=""mailto:t.ar.k.w.ag.o.l.d.2@gmail.com"">t.ar.k.w.ag.o.l.d.2@gmail.com</a>
<a href=""mailto:ta.rk.w.ag.o.l.d.2@gmail.com"">ta.rk.w.ag.o.l.d.2@gmail.com</a>
<a href=""mailto:t.ar.k.w.ag.old2@gmail.com"">t.ar.k.w.ag.old2@gmail.com</a>
<a href=""mailto:ta.r.k.wa.go.l.d2@gmail.com"">ta.r.k.wa.go.l.d2@gmail.com</a>
<a href=""mailto:ta.rkw.agol.d.2@gmail.com"">ta.rkw.agol.d.2@gmail.com</a>
<a href=""mailto:t.a.rk.w.a.go.l.d2@gmail.com"">t.a.rk.w.a.go.l.d2@gmail.com</a>
<a href=""mailto:ta.r.k.w.a.g.o.ld2@gmail.com"">ta.r.k.w.a.g.o.ld2@gmail.com</a>
<a href=""mailto:tark.wagold.2@gmail.com"">tark.wagold.2@gmail.com</a>
<a href=""mailto:t.a.rkwago.l.d2@gmail.com"">t.a.rkwago.l.d2@gmail.com</a>
<a href=""mailto:t.a.r.k.wagol.d.2@gmail.com"">t.a.r.k.wagol.d.2@gmail.com</a>
<a href=""mailto:tar.kw.ag.ol.d2@gmail.com"">tar.kw.ag.ol.d2@gmail.com</a>
<a href=""mailto:t.ark.w.ag.old.2@gmail.com"">t.ark.w.ag.old.2@gmail.com</a>
<a href=""mailto:t.a.r.k.wag.ol.d.2@gmail.com"">t.a.r.k.wag.ol.d.2@gmail.com</a>
<a href=""mailto:t.ar.kw.a.go.ld.2@gmail.com"">t.ar.kw.a.go.ld.2@gmail.com</a>
<a href=""mailto:ta.r.k.wagol.d.2@gmail.com"">ta.r.k.wagol.d.2@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.g.ol.d2@gmail.com"">t.a.r.kw.a.g.ol.d2@gmail.com</a>
<a href=""mailto:ta.r.kw.a.g.o.ld.2@gmail.com"">ta.r.kw.a.g.o.ld.2@gmail.com</a>
<a href=""mailto:tarkw.agold.2@gmail.com"">tarkw.agold.2@gmail.com</a>
<a href=""mailto:t.a.r.kwa.g.o.ld2@gmail.com"">t.a.r.kwa.g.o.ld2@gmail.com</a>
<a href=""mailto:t.ark.wago.ld2@gmail.com"">t.ark.wago.ld2@gmail.com</a>
<a href=""mailto:t.arkw.ag.old.2@gmail.com"">t.arkw.ag.old.2@gmail.com</a>
<a href=""mailto:ta.r.kwag.old.2@gmail.com"">ta.r.kwag.old.2@gmail.com</a>
<a href=""mailto:tarkw.a.gold2@gmail.com"">tarkw.a.gold2@gmail.com</a>
<a href=""mailto:t.a.rk.wa.g.ol.d2@gmail.com"">t.a.rk.wa.g.ol.d2@gmail.com</a>
<a href=""mailto:ta.r.k.wag.old2@gmail.com"">ta.r.k.wag.old2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.g.o.l.d.2@gmail.com"">t.a.r.k.w.a.g.o.l.d.2@gmail.com</a>
<a href=""mailto:tar.k.w.ag.o.ld2@gmail.com"">tar.k.w.ag.o.ld2@gmail.com</a>
<a href=""mailto:ta.r.kwag.ol.d2@gmail.com"">ta.r.kwag.ol.d2@gmail.com</a>
<a href=""mailto:ta.rk.w.ago.l.d.2@gmail.com"">ta.rk.w.ago.l.d.2@gmail.com</a>
<a href=""mailto:t.a.rkw.a.go.ld2@gmail.com"">t.a.rkw.a.go.ld2@gmail.com</a>
<a href=""mailto:ta.rkwag.ol.d.2@gmail.com"">ta.rkwag.ol.d.2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.ago.ld.2@gmail.com"">t.a.r.k.w.ago.ld.2@gmail.com</a>
<a href=""mailto:t.a.rk.wa.g.ol.d.2@gmail.com"">t.a.rk.wa.g.ol.d.2@gmail.com</a>
<a href=""mailto:tar.k.wag.ol.d.2@gmail.com"">tar.k.wag.ol.d.2@gmail.com</a>
<a href=""mailto:t.a.r.kw.ago.ld2@gmail.com"">t.a.r.kw.ago.ld2@gmail.com</a>
<a href=""mailto:t.a.rk.w.a.g.o.l.d2@gmail.com"">t.a.rk.w.a.g.o.l.d2@gmail.com</a>
<a href=""mailto:tarkw.ag.o.l.d2@gmail.com"">tarkw.ag.o.l.d2@gmail.com</a>
<a href=""mailto:t.a.r.k.wa.g.o.ld2@gmail.com"">t.a.r.k.wa.g.o.ld2@gmail.com</a>
<a href=""mailto:t.a.rkwag.old.2@gmail.com"">t.a.rkwag.old.2@gmail.com</a>
<a href=""mailto:t.a.rkwagold2@gmail.com"">t.a.rkwagold2@gmail.com</a>
<a href=""mailto:ta.rkw.ag.ol.d2@gmail.com"">ta.rkw.ag.ol.d2@gmail.com</a>
<a href=""mailto:tar.k.w.a.g.old.2@gmail.com"">tar.k.w.a.g.old.2@gmail.com</a>
<a href=""mailto:t.ark.wa.g.ol.d.2@gmail.com"">t.ark.wa.g.ol.d.2@gmail.com</a>
<a href=""mailto:tarkw.ago.ld.2@gmail.com"">tarkw.ago.ld.2@gmail.com</a>
<a href=""mailto:t.a.rkw.a.g.old.2@gmail.com"">t.a.rkw.a.g.old.2@gmail.com</a>
<a href=""mailto:t.a.rkwago.ld.2@gmail.com"">t.a.rkwago.ld.2@gmail.com</a>
<a href=""mailto:t.a.r.kw.agold.2@gmail.com"">t.a.r.kw.agold.2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.agol.d2@gmail.com"">t.a.r.k.w.agol.d2@gmail.com</a>
<a href=""mailto:t.a.r.kw.ag.o.l.d2@gmail.com"">t.a.r.kw.ag.o.l.d2@gmail.com</a>
<a href=""mailto:ta.r.kw.a.gold2@gmail.com"">ta.r.kw.a.gold2@gmail.com</a>
<a href=""mailto:t.ar.kw.a.g.o.ld2@gmail.com"">t.ar.kw.a.g.o.ld2@gmail.com</a>
<a href=""mailto:t.ark.w.a.go.ld2@gmail.com"">t.ark.w.a.go.ld2@gmail.com</a>
<a href=""mailto:t.ar.k.w.a.g.old.2@gmail.com"">t.ar.k.w.a.g.old.2@gmail.com</a>
<a href=""mailto:ta.rk.w.ag.o.ld.2@gmail.com"">ta.rk.w.ag.o.ld.2@gmail.com</a>
<a href=""mailto:tar.k.w.ag.o.l.d.2@gmail.com"">tar.k.w.ag.o.l.d.2@gmail.com</a>
<a href=""mailto:ta.rk.wa.g.old2@gmail.com"">ta.rk.wa.g.old2@gmail.com</a>
<a href=""mailto:t.ar.k.wag.old2@gmail.com"">t.ar.k.wag.old2@gmail.com</a>
<a href=""mailto:t.a.rk.wa.gold.2@gmail.com"">t.a.rk.wa.gold.2@gmail.com</a>
<a href=""mailto:t.arkwago.ld2@gmail.com"">t.arkwago.ld2@gmail.com</a>
<a href=""mailto:t.ar.kw.ag.o.ld.2@gmail.com"">t.ar.kw.ag.o.ld.2@gmail.com</a>
<a href=""mailto:ta.r.k.wa.g.o.l.d.2@gmail.com"">ta.r.k.wa.g.o.l.d.2@gmail.com</a>
<a href=""mailto:ta.rkwag.ol.d2@gmail.com"">ta.rkwag.ol.d2@gmail.com</a>
<a href=""mailto:ta.rk.w.ago.l.d2@gmail.com"">ta.rk.w.ago.l.d2@gmail.com</a>
<a href=""mailto:t.ark.w.ag.old2@gmail.com"">t.ark.w.ag.old2@gmail.com</a>
<a href=""mailto:tarkw.a.go.ld2@gmail.com"">tarkw.a.go.ld2@gmail.com</a>
<a href=""mailto:t.ark.w.ag.ol.d2@gmail.com"">t.ark.w.ag.ol.d2@gmail.com</a>
<a href=""mailto:t.ar.kw.ag.o.l.d.2@gmail.com"">t.ar.kw.ag.o.l.d.2@gmail.com</a>
<a href=""mailto:t.a.r.kw.a.g.old2@gmail.com"">t.a.r.kw.a.g.old2@gmail.com</a>
<a href=""mailto:t.ark.w.ag.ol.d.2@gmail.com"">t.ark.w.ag.ol.d.2@gmail.com</a>
<a href=""mailto:t.arkw.a.g.o.ld2@gmail.com"">t.arkw.a.g.o.ld2@gmail.com</a>
<a href=""mailto:t.ark.w.ag.o.l.d2@gmail.com"">t.ark.w.ag.o.l.d2@gmail.com</a>
<a href=""mailto:t.a.rk.w.ago.ld2@gmail.com"">t.a.rk.w.ago.ld2@gmail.com</a>
<a href=""mailto:t.ark.wag.ol.d2@gmail.com"">t.ark.wag.ol.d2@gmail.com</a>
<a href=""mailto:tar.k.wago.ld2@gmail.com"">tar.k.wago.ld2@gmail.com</a>
<a href=""mailto:t.ark.wago.l.d2@gmail.com"">t.ark.wago.l.d2@gmail.com</a>
<a href=""mailto:t.ar.kw.agold2@gmail.com"">t.ar.kw.agold2@gmail.com</a>
<a href=""mailto:tar.kwago.ld2@gmail.com"">tar.kwago.ld2@gmail.com</a>
<a href=""mailto:t.ark.wa.g.o.l.d2@gmail.com"">t.ark.wa.g.o.l.d2@gmail.com</a>
<a href=""mailto:ta.r.kwa.go.l.d.2@gmail.com"">ta.r.kwa.go.l.d.2@gmail.com</a>
<a href=""mailto:tarkwag.o.ld.2@gmail.com"">tarkwag.o.ld.2@gmail.com</a>
<a href=""mailto:tar.k.wag.o.l.d.2@gmail.com"">tar.k.wag.o.l.d.2@gmail.com</a>
<a href=""mailto:t.ar.k.wa.g.ol.d2@gmail.com"">t.ar.k.wa.g.ol.d2@gmail.com</a>
<a href=""mailto:tar.k.w.ag.o.l.d2@gmail.com"">tar.k.w.ag.o.l.d2@gmail.com</a>
<a href=""mailto:t.arkw.a.g.ol.d.2@gmail.com"">t.arkw.a.g.ol.d.2@gmail.com</a>
<a href=""mailto:t.a.r.k.wag.old2@gmail.com"">t.a.r.k.wag.old2@gmail.com</a>
<a href=""mailto:t.a.r.k.wa.g.ol.d2@gmail.com"">t.a.r.k.wa.g.ol.d2@gmail.com</a>
<a href=""mailto:t.a.rkw.a.gol.d2@gmail.com"">t.a.rkw.a.gol.d2@gmail.com</a>
<a href=""mailto:t.a.r.kwago.ld2@gmail.com"">t.a.r.kwago.ld2@gmail.com</a>
<a href=""mailto:t.a.r.kwago.ld.2@gmail.com"">t.a.r.kwago.ld.2@gmail.com</a>
<a href=""mailto:t.ar.kwago.ld.2@gmail.com"">t.ar.kwago.ld.2@gmail.com</a>
<a href=""mailto:t.arkw.a.go.ld2@gmail.com"">t.arkw.a.go.ld2@gmail.com</a>
<a href=""mailto:t.ar.kwago.l.d.2@gmail.com"">t.ar.kwago.l.d.2@gmail.com</a>
<a href=""mailto:ta.r.kwag.ol.d.2@gmail.com"">ta.r.kwag.ol.d.2@gmail.com</a>
<a href=""mailto:t.a.r.kwag.o.ld.2@gmail.com"">t.a.r.kwag.o.ld.2@gmail.com</a>
<a href=""mailto:ta.rkwago.ld2@gmail.com"">ta.rkwago.ld2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.ago.l.d.2@gmail.com"">t.a.r.k.w.ago.l.d.2@gmail.com</a>
<a href=""mailto:ta.rkw.ago.ld.2@gmail.com"">ta.rkw.ago.ld.2@gmail.com</a>
<a href=""mailto:tar.kwago.l.d2@gmail.com"">tar.kwago.l.d2@gmail.com</a>
<a href=""mailto:tark.wa.go.l.d2@gmail.com"">tark.wa.go.l.d2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.gol.d.2@gmail.com"">t.a.r.k.w.a.gol.d.2@gmail.com</a>
<a href=""mailto:t.a.rkw.ag.o.ld.2@gmail.com"">t.a.rkw.ag.o.ld.2@gmail.com</a>
<a href=""mailto:t.ar.k.wag.o.ld2@gmail.com"">t.ar.k.wag.o.ld2@gmail.com</a>
<a href=""mailto:tar.k.wag.o.ld.2@gmail.com"">tar.k.wag.o.ld.2@gmail.com</a>
<a href=""mailto:ta.r.k.w.a.gol.d.2@gmail.com"">ta.r.k.w.a.gol.d.2@gmail.com</a>
<a href=""mailto:ta.rk.w.a.g.old.2@gmail.com"">ta.rk.w.a.g.old.2@gmail.com</a>
<a href=""mailto:tark.wag.o.l.d2@gmail.com"">tark.wag.o.l.d2@gmail.com</a>
<a href=""mailto:tarkwago.l.d.2@gmail.com"">tarkwago.l.d.2@gmail.com</a>
<a href=""mailto:ta.rkw.ago.l.d.2@gmail.com"">ta.rkw.ago.l.d.2@gmail.com</a>
<a href=""mailto:tar.kw.ag.o.l.d.2@gmail.com"">tar.kw.ag.o.l.d.2@gmail.com</a>
<a href=""mailto:ta.rk.w.a.go.ld.2@gmail.com"">ta.rk.w.a.go.ld.2@gmail.com</a>
<a href=""mailto:tark.w.a.gol.d.2@gmail.com"">tark.w.a.gol.d.2@gmail.com</a>
<a href=""mailto:t.a.r.k.wa.gold2@gmail.com"">t.a.r.k.wa.gold2@gmail.com</a>
<a href=""mailto:t.a.rk.wa.g.old2@gmail.com"">t.a.rk.wa.g.old2@gmail.com</a>
<a href=""mailto:t.ar.kw.agol.d2@gmail.com"">t.ar.kw.agol.d2@gmail.com</a>
<a href=""mailto:tar.k.w.a.g.o.l.d2@gmail.com"">tar.k.w.a.g.o.l.d2@gmail.com</a>
<a href=""mailto:t.a.rkwago.ld2@gmail.com"">t.a.rkwago.ld2@gmail.com</a>
<a href=""mailto:t.ar.kwag.old2@gmail.com"">t.ar.kwag.old2@gmail.com</a>
<a href=""mailto:t.a.rk.w.a.g.o.l.d.2@gmail.com"">t.a.rk.w.a.g.o.l.d.2@gmail.com</a>
<a href=""mailto:t.a.rkwag.ol.d2@gmail.com"">t.a.rkwag.ol.d2@gmail.com</a>
<a href=""mailto:t.a.rk.wagol.d2@gmail.com"">t.a.rk.wagol.d2@gmail.com</a>
<a href=""mailto:t.ar.k.wagol.d.2@gmail.com"">t.ar.k.wagol.d.2@gmail.com</a>
<a href=""mailto:ta.rkw.a.gold2@gmail.com"">ta.rkw.a.gold2@gmail.com</a>
<a href=""mailto:ta.r.kw.ag.ol.d.2@gmail.com"">ta.r.kw.ag.ol.d.2@gmail.com</a>
<a href=""mailto:ta.rk.wa.gol.d.2@gmail.com"">ta.rk.wa.gol.d.2@gmail.com</a>
<a href=""mailto:ta.rk.wag.o.l.d2@gmail.com"">ta.rk.wag.o.l.d2@gmail.com</a>
<a href=""mailto:t.ar.k.w.ag.o.ld2@gmail.com"">t.ar.k.w.ag.o.ld2@gmail.com</a>
<a href=""mailto:tar.kwag.o.l.d2@gmail.com"">tar.kwag.o.l.d2@gmail.com</a>
<a href=""mailto:ta.rk.wag.o.l.d.2@gmail.com"">ta.rk.wag.o.l.d.2@gmail.com</a>
<a href=""mailto:ta.rkwa.g.o.l.d2@gmail.com"">ta.rkwa.g.o.l.d2@gmail.com</a>
<a href=""mailto:t.a.rk.w.ago.l.d2@gmail.com"">t.a.rk.w.ago.l.d2@gmail.com</a>
<a href=""mailto:t.a.r.kwa.go.l.d.2@gmail.com"">t.a.r.kwa.go.l.d.2@gmail.com</a>
<a href=""mailto:ta.rk.wa.go.l.d2@gmail.com"">ta.rk.wa.go.l.d2@gmail.com</a>
<a href=""mailto:ta.rkwa.g.old.2@gmail.com"">ta.rkwa.g.old.2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.g.o.l.d2@gmail.com"">t.a.r.k.w.a.g.o.l.d2@gmail.com</a>
<a href=""mailto:t.a.r.k.w.a.go.ld2@gmail.com"">t.a.r.k.w.a.go.ld2@gmail.com</a>
<a href=""mailto:tark.w.a.g.ol.d.2@gmail.com"">tark.w.a.g.ol.d.2@gmail.com</a>
<a href=""mailto:t.arkwag.o.l.d2@gmail.com"">t.arkwag.o.l.d2@gmail.com</a>
<a href=""mailto:tar.kw.a.g.o.ld2@gmail.com"">tar.kw.a.g.o.ld2@gmail.com</a>
<a href=""mailto:t.a.rk.wag.o.l.d.2@gmail.com"">t.a.rk.wag.o.l.d.2@gmail.com</a>
<a href=""mailto:tar.k.wagold.2@gmail.com"">tar.k.wagold.2@gmail.com</a>
<a href=""mailto:t.a.rk.w.ag.old2@gmail.com"">t.a.rk.w.ag.old2@gmail.com</a>
<a href=""mailto:t.ark.wa.go.ld2@gmail.com"">t.ark.wa.go.ld2@gmail.com</a>
<a href=""mailto:tar.k.w.a.go.l.d2@gmail.com"">tar.k.w.a.go.l.d2@gmail.com</a>
<a href=""mailto:ta.r.kw.a.go.l.d.2@gmail.com"">ta.r.kw.a.go.l.d.2@gmail.com</a>
<a href=""mailto:tar.kwagold2@gmail.com"">tar.kwagold2@gmail.com</a>
<a href=""mailto:t.a.rk.wago.l.d2@gmail.com"">t.a.rk.wago.l.d2@gmail.com</a>
<a href=""mailto:ta.r.kw.a.gol.d2@gmail.com"">ta.r.kw.a.gol.d2@gmail.com</a>
<a href=""mailto:t.a.rk.w.a.gold.2@gmail.com"">t.a.rk.w.a.gold.2@gmail.com</a>"
BKKjXH0L,shared_settings.lua,Caldryk,Lua,Thursday 26th of October 2023 01:29:32 PM CDT,"JukeBox.Settings = {}
JukeBox.Colours = {}

--| GENERAL SETTINGS |------------------------------------------------------------------------------------
-- This decides whether new players should be bale to hear the JukeBox or not
-- This option only sets a config for new players on first join and they can enable the JukeBox themselves after.
JukeBox.Settings.DefaultEnabled = true

-- Use this to make sure when ANYONE joins the server the JukeBox is off by default, even if they've used it before.
-- This may be useful for gamemodes where the JukeBox mak be intrusive.
JukeBox.Settings.DisabledOverride = false

-- This sets whether downloads should be done via workshop or FastDL
-- If set to false, the files within the ""materials"" folder should be put on your FastDL
JukeBox.Settings.UseWorkshop = true

-- This is the URL to the YouTube player HTML page provided.
-- The link provided should work, this shouldn't need changing
JukeBox.Settings.PlayerURL = ""http://botdan.com/JukeBox/VideoPlayer/V4/index.html""
-- [NOTE] PLEASE DON'T CHANGE THIS CURRENTLY, AS THIS LINK WILL HAVE THE MOST
--		  UP-TO-DATE VERSION OF THE WEB PLAYER, WHICH MAY PREVENT VIDEO PREEZING.

-- This is the URL that checks if the videos are real
-- DON'T change this unless you've uploaded the PHP file somewhere else.
JukeBox.Settings.CheckerURL = ""http://botdan.com/JukeBox/VideoLength/?id=""

-- This is the URL that gets the search data for the Add a song - Search tab
-- DON'T change this unless you've uploaded the PHP file somewhere else.
JukeBox.Settings.SearchURL = ""http://botdan.com/JukeBox/VideoSearch/?search=""

-- This is the URL used to return all the videos in a playlist
-- DON'T change this unless you've uploaded the PHP file somewhere else.
JukeBox.Settings.PlaylistURL = ""http://botdan.com/JukeBox/VideoPlaylist/?id=""

-- The default volume for new users of the player
-- This can be between 0 and 100 (0 = can't hear)
JukeBox.Settings.DefaultVolume = 25

-- Time in seconds to add to the song length to allow for lag
-- This will help people with slower connections hear the whole song.
JukeBox.Settings.LagCompensationTime = 2

-- The maximum length of a song before it can't be added (in seconds)
-- Set this number very high if you require no limit. (60*30 = 30 minutes)
JukeBox.Settings.MaxSongLength = 60*30

--| TTT SETTINGS |----------------------------------------------------------------------------------------
-- Whether songs should play while a player is alive
-- Useful for gamemodes where voice chat is needed while alive.
JukeBox.Settings.PlayWhileAlive = true

-- Whether songs should only play during the downtime in TTT
-- This is in between the time of the round ending and the prep phase starting.
-- /!\ JukeBox.Settings.PlayWhileAlive should be true for this to work! /!\
JukeBox.Settings.TTTOnlyRoundEnd = false

-- Whether songs should play always unless it's the end of the round.
-- This is the opposite of JukeBox.Settings.TTTOnlyRoundEnd
-- /!\ JukeBox.Settings.PlayWhileAlive should be true for this to work! /!\
JukeBox.Settings.TTTNotRoundEnd = false

--| QUEUING COST |----------------------------------------------------------------------------------------
-- Whether to use Pointshop 1 Points to queue songs
-- Set to true to enable or false to disable
JukeBox.Settings.UsePointshop = false

-- Whether to use Pointshop 2 Points to queue songs
-- Set to true to enable or false to disable
JukeBox.Settings.UsePointshop2 = false

-- Whether to use SH Pointshop points
-- Set to true to enable or false to disable
JukeBox.Settings.UseSHPointshop = false

-- How much it costs to queue a song
-- This only works if Pointshop 1 or 2 are set to true
JukeBox.Settings.PointsCost = 50

-- Whether to use DarkRP cash to queue songs
-- Make sure if set to true that UsePointshop is set to false
JukeBox.Settings.UseDarkRPCash = false

-- How much it costs to queue a song
-- This only works if the above is set to true
JukeBox.Settings.DarkRPCashCost = 500

-- Whether to use Sandbox Simple Money System to queue a song
-- Requires http://steamcommunity.com/sharedfiles/filedetails/?id=620306794
-- Make sure to set the other 3 to false
JukeBox.Settings.UseSimpleMoney = false

-- How much it costs to queue a song
-- This only works if the above is set to true
JukeBox.Settings.SimpleMoneyCost = 100

-- If certain ranks should get a discount
-- This is the percentage of regular price they should pay, eg. 0.25 means 75% off
-- Format: [""GROUPNAME""] = DECIMAL (0 to 1),
JukeBox.Settings.RankDiscount = {
	[""user""] = 1,
	[""superadmin""] = 0.5
}

--| PLAYER COOLDOWNS |------------------------------------------------------------------------------------
-- Whether players should be limited to how many songs they queue
-- Below you can change how many songs that can queue in a certain time
JukeBox.Settings.UsePlayerCooldowns = false

-- The amount of time it takes for the queue limit to reset (in seconds)
-- This is measures in seconds. (60*10 = 10 minutes)
JukeBox.Settings.PlayerCooldownsTime = 60*5
-- Override cooldowns time for certain groups.
-- Format: [""GROUPNAME""] = TIME,
JukeBox.Settings.PlayerCooldownsTimeList = {
	[""superadmin""] = 60*5,
}

-- How many songs a player can queue per the time above.
-- By default, this allows users to request 2 songs every 10 minutes.
JukeBox.Settings.PlayerCooldownsLimit = 3
-- Override cooldowns limit for certain groups.
-- Format: [""GROUPNAME""] = LIMIT,
JukeBox.Settings.PlayerCooldownsLimitList = {
	[""superadmin""] = 4,
}

--| SONG COOLDOWNS |--------------------------------------------------------------------------------------
-- Whether songs should be blocked from being queued after playing.
-- This prevents the same songs playing over and over again.
JukeBox.Settings.UseCooldowns = true

-- How long the song should be blocked for after playing.
-- The time is done in seconds and is applied at the end of the song. (60*15 = 15mins)
JukeBox.Settings.CooldownAmount = 60*15

-- A list of groups that can bypass the song cooldown limits.
-- Don't edit this if you don't want any groups to bypass the cooldowns.
JukeBox.Settings.CooldownBypassers = {
--	""superadmin"",
}

--| ADD A SONG COOLDOWNS |--------------------------------------------------------------------------------
-- Whether players should be limited to how many songs they can request to add
-- Below you can change how many requests they can add in a certain time
JukeBox.Settings.UseAddSongCooldowns = false

-- The amount of time it takes for the add a song limit to reset (in seconds)
-- This is measures in seconds. (60*10 = 10 minutes)
JukeBox.Settings.AddSongCooldownsTime = 60*30
-- Override cooldowns time for certain groups.
-- Format: [""GROUPNAME""] = TIME,
JukeBox.Settings.AddSongCooldownsTimeList = {
	[""superadmin""] = 60*5,
}

-- How many songs a player can add per the time above.
-- By default, this allows users to request to add 2 songs every 30 minutes.
JukeBox.Settings.AddSongCooldownsLimit = 2
-- Override cooldowns limit for certain groups.
-- Format: [""GROUPNAME""] = LIMIT,
JukeBox.Settings.AddSongCooldownsLimitList = {
	[""superadmin""] = 4,
}

-- Whether the Add a Song feature should be restricted from certain ranks.
-- This can be used to restrict the Add a Song feature.
JukeBox.Settings.UseAddSongGroupRestrictions = true

-- If the Group Restrictions should work as a whitelist.
-- This means that anyone in the list below WILL be able to queue songs, everyone else won't be.
JukeBox.Settings.AddSongGroupRestrctionWhiteList = true

-- The list of groups that CAN'T or CAN use the Add a Song.
-- Restricts users from being able to queue songs.
-- CURRENTLY NOT WORKING WITH SERVERGUARD RANKS
JukeBox.Settings.AddSongRestrictedGroups = {
	""superadmin"",
	""admin"",
}

--| RESTRICTIONS |----------------------------------------------------------------------------------------
-- Whether the JukeBox should be restricted from certain ranks.
-- This can be used to make the JukeBox donator only.
JukeBox.Settings.UseGroupRestrictions = false

-- Whether groups that can't use the JukeBox should be able to use the menu
-- This can be used to hide the UI from certain ranks
JukeBox.Settings.RestrictMenu = false

-- If the Group Restrictions should work as a whitelist.
-- This means that anyone in the list below WILL be able to queue songs, everyone else won't be.
JukeBox.Settings.GroupRestrctionWhiteList = true

-- The list of groups that CAN'T or CAN use the JukeBox.
-- Restricts users from being able to queue songs.
-- CURRENTLY NOT WORKING WITH SERVERGUARD RANKS
JukeBox.Settings.RestrictedGroups = {
	""user"",
	""none"",
}

-- Same as UseGroupRestrictions, but will create an xAdmin permission
-- Users will need to have this permission to use the JukeBox.
JukeBox.Settings.UsexAdminRestrictions = false

-- If the JukeBox should only be managable by certain DarkRP Jobs.
-- This can be used to make a DJ job.
JukeBox.Settings.UseJobRestrictions = false

-- If the Job Restrictions should work as a whitelist.
-- This means that anyone with a job in the list below WILL be able to queue songs, everyone else won't be.
JukeBox.Settings.JobRestrictionWhitelist = false

-- The list of DarkRP jobs than CAN or CAN'T use the JukeBox.
-- Restricts users from being able to queue songs.
hook.Add( ""DarkRPFinishedLoading"", ""JukeBox.Setings.DarkRPJobRestrictions"", function()
	JukeBox.Settings.RestrictedJobs = {
		--TEAM_DJ,
		--TEAM_HOBO
	}
end )

--| MISC |------------------------------------------------------------------------------------------------
-- If requests should be automatically added to the All Songs list
-- This means the Manager Requests tab will not be used.
JukeBox.Settings.AutoAcceptRequests = false

-- This allows users to pay a bit extra to have their request added straight to the All Songs list
-- This is good for servers that don't have a huge Manager population
JukeBox.Settings.RequestFasttrack = false

-- How much it costs to skip the Manager approval system
-- NOTE: This uses whatever currency system you have enabled up top (PS1, PS2 or DarkRP Cash)
JukeBox.Settings.RequestFasttrackCost = 250

-- If queueing songs can only be done by managers (I RECOMMEND RESTRICTIONS INSTEAD ABOVE)
-- This prevents users from queueing songs but they can still request
JukeBox.Settings.ManagerOnlyMode = false

-- This disables the Listen Locally option if you want.
-- This removed the menu when you click Queue and takes you straight to the popup.
JukeBox.Settings.AllowLocalPlay = true

-- The percentage of players that have to vote skip a song for it to skip
-- This is done as a decimal from 0 to 1 (0.6 = 60%)
JukeBox.Settings.VoteSkipPercent = 0.45

-- This is how long the notifications at the top of the JukeBox stay around for in seconds
-- Set this to 0 to disable the timer.
JukeBox.Settings.NotificationTimer = 10

-- This can disable the Add Playlist tab
-- Use this if you're worried your Manager's may abuse the feature
JukeBox.Settings.DisableAddPlaylistTab = false

-- This can enable logging of most JukeBox events daily.
-- Note that the log files may get quite big.
-- DOESN'T DO ANYTHING CURRENTLY
JukeBox.Settings.EnableLogging = false

--| QUICK KEY |-------------------------------------------------------------------------------------------
-- Whether a key should be used to open the VGUI
-- This key ideally should be a KEY_F followed by a number (KEY_F8 is F8)
JukeBox.Settings.UseQuickKey = true

-- The key to open the menu with
-- Key values can be found at http://wiki.garrysmod.com/page/Enums/KEY
JukeBox.Settings.QuickKey = KEY_F9

--| IDLE PLAY |-------------------------------------------------------------------------------------------
-- Should the JukeBox automatically play songs if none are queue'd?
-- This sort of turns the JukeBox into a radio while no ongs are queue'd
JukeBox.Settings.EnableIdlePlay = false

-- Whether, when a new song is queue'd, it should start it instantly
-- This means it will cut off the current idle song and play the first in the queue
JukeBox.Settings.IdlePlayCutoff = false

-- How long to wait before starting the idle play
-- This stops the JukeBox from instantly playing idle songs
JukeBox.Settings.IdlePlayDelay = 15

-- How long to wait in-between idle play songs
-- Good if you want some time betweeen each song
JukeBox.Settings.IdlePlaySpacing = 10

--| ULX RANKS + COMMANDS |--------------------------------------------------------------------------------------------
-- If a/multiple ULX ranks should be used for manager rank on the JukeBox
-- This allows them to add, edit and remove songs
JukeBox.Settings.UseULXRanks = true

-- The ULX ranks to have access to the manager parts of the JukeBox
-- Only used if the above setting is set to true
JukeBox.Settings.ULXRanksList = {
	""superadmin"",
	""admin"",
}

-- Should ServerGuard ranks be used for manager ranks on the JukeBox
-- This allows them to add, edit and remove songs
-- SET JukeBox.Settings.UseULXRanks TO FALSE IF USING THIS!
JukeBox.Settings.UseServerGuardRanks = false

-- The ServerGuard ranks to have access to the manager parts of the JukeBox
-- Only used if the above setting is set to true
JukeBox.Settings.ServerGuardRanksList = {
	""superadmin"",
}

-- SteamIDs that have access to the manager parts of the JukeBox
JukeBox.Settings.SteamIDList = {
	""STEAM_0:X:XXXXXX"",
}

-- A list of DarkRP jobs that will be managers of the JukeBox
hook.Add( ""DarkRPFinishedLoading"", ""JukeBox.Setings.DarkRPFix"", function()
	JukeBox.Settings.DarkRPJobRanks = {
		--TEAM_GUN,
		--TEAM_CITIZEN,
		--TEAM_SUPERADMIN
	}
end )

-- Commands to open the JukeBox VGUI
JukeBox.Settings.ChatCommands = {
	""!jb"",
	""!jukebox"",
	""/jukebox"",
	""/jb"",
	""!radio"",
	""/radio"",
	""!music"",
	""/music""
}

-- Commands to voteskip the current song
JukeBox.Settings.SkipCommands = {
	""!skipsong"",
	""/skipsong"",
}

-- Commands to stop the JukeBox
JukeBox.Settings.StopCommand = {
	""!stop"",
	""/stop"",
}

--| HUD SETTINGS |----------------------------------------------------------------------------------------
-- Whether the HUD element should be displayed
-- This displayes the currently playing song name and artist
JukeBox.Settings.HUDEnabled = true

-- If the HUD element should be left, right or center
-- ""left"", ""right"" or ""center"" only.
JukeBox.Settings.HUDAcross = ""left""

-- If the HUD element should be top, bottom or center
-- ""top"", ""bottom"" or ""center"" only
JukeBox.Settings.HUDDown = ""bottom""

--[[ VGUI COLOURS ]]--
-- I don't recommend changing any of these other than the Definition colour and the 2 chat colours.
JukeBox.Colours.Base = Color( 50, 50, 50 )
JukeBox.Colours.Background = Color( 35, 35, 35 )
JukeBox.Colours.Definition = Color( 230, 126, 34 )
JukeBox.Colours.Light = Color( 65, 65, 65, 255 )

JukeBox.Colours.Issue = Color( 231, 76, 60 )
JukeBox.Colours.Accept = Color( 46, 204, 113 )
JukeBox.Colours.Warning = Color( 241, 196, 15 )
JukeBox.Colours.Information = Color( 52, 152, 219 )

JukeBox.Colours.ChatBase = Color( 255, 255, 255 )
JukeBox.Colours.ChatHighlight = Color( 230, 126, 34 )

JukeBox.Colours.HUDBase = Color( 0, 0, 0, 200 )
JukeBox.Colours.HUDHighlight = Color( 230, 126, 34, 200 )
JukeBox.Colours.HUDFont = Color( 255, 255, 255, 220 )

--[[ FONTS ]]--
if SERVER then return end
for i=4, 50 do -- I'll change this :)
	surface.CreateFont( ""JukeBox.Font.""..i, {
		font = ""Roboto"",
		size = i,
		weight = 0,
		antialias = true,
	} )
	surface.CreateFont( ""JukeBox.Font.""..i.."".Bold"", {
		font = ""Roboto Bold"",
		size = i,
		weight = 1000,
		antialias = true,
	} )
end
"
SD8az550,FileBrowser,Alandil,Bash,Thursday 26th of October 2023 12:50:15 PM CDT,"    filebrowser:
        image: filebrowser/filebrowser:latest
        container_name: filebrowser
        # ###############
        labels:
        # Le label ci-dessous permet à Watchtower de faire les mises à jour automatiquement
        # Cela peut être supprimé si Watchtower n'est pas utilisé.
            - com.centurylinklabs.watchtower.enable=true
        # Le label ci-dessous permet à DeUnhealth de redémarrer automatiquement le conteneur
        # Cela peut être supprimé si DeUnhealth n'est pas utilisé.
            - deunhealth.restart.on.unhealthy=true
        # ###############
        networks:
            default:
        #Définition de l'adresse IP du conteneur à l'intérieur du bridge
                ipv4_address: 172.10.0.4
        # ###############
        ports:
        #Définition des ports externe:interne utilisés par le conteneur
            - 8080:80
        # ###############
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        # ###############
        volumes:
            - ${RACINE_DATA_DOWNLOADS}:/srv
            - ${RACINE_CONF_CONTENEURS}/filebrowser/database:/database/filebrowser.db
            - ${RACINE_CONF_CONTENEURS}/filebrowser/config:/config/settings.json
        # ###############
        restart: unless-stopped
        # ###############"
gFNvxdUf,Grid BFS/DFS,pranavsindura,C++,Thursday 26th of October 2023 12:44:02 PM CDT,"#include <iostream>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

const vector<int> dx = {0, 0, 1, -1};
const vector<int> dy = {1, -1, 0, 0};
// const vector<int> dx = {0, 0, 1, -1, 1, 1, -1, -1};
// const vector<int> dy = {1, -1, 0, 0, 1, -1, 1, -1};

bool is_in_bounds(int x, int y, int N, int M) {
  return x >= 0 && x < N && y >= 0 && y < M;
}

void dfs(int x, int y, int N, int M, vector<vector<int>> &grid,
         vector<vector<bool>> &vis) {
  if (vis[x][y]) {
    return;
  }
  vis[x][y] = true;

  for (int i = 0; i < 4; i++) {
    int nx = x + dx[i], ny = y + dy[i];
    if (is_in_bounds(nx, ny, N, M) && !vis[nx][ny] && grid[nx][ny] == 1) {
      dfs(nx, ny, N, M, grid, vis);
    }
  }
}

void bfs(int u, int v, int N, int M, vector<vector<int>> &grid,
         vector<vector<bool>> &vis) {
  queue<pair<int, int>> Q;

  Q.push(make_pair(u, v));
  while(!Q.empty()) {
    pair<int, int> nd = Q.front();
    Q.pop();
    int x = nd.first, y = nd.second;
    vis[x][y] = true;

    for (int i = 0; i < 4; i++) {
      int nx = x + dx[i], ny = y + dy[i];
      if (is_in_bounds(nx, ny, N, M) && !vis[nx][ny] && grid[nx][ny] == 1) {
        vis[nx][ny] = true; // IMPORTANT FOR BFS
        Q.push(make_pair(nx, ny));
      }
    }
  }
}

int main() {
  int N, M; // N x M grid of 0/1
  cin >> N >> M;
  vector<vector<int>> grid(N, vector<int>(M, 0));
  vector<vector<bool>> vis(N, vector<bool>(M, false));
  for (int i = 0; i < N; i++) {
    for (int j = 0; j < M; j++) {
      cin >> grid[i][j];
    }
  }

  int island_count = 0;
  for (int i = 0; i < N; i++) {
    for (int j = 0; j < M; j++) {
      if (!vis[i][j] && grid[i][j] == 1) {
        island_count++;
        dfs(i, j, N, M, grid, vis);
      }
    }
  }

  cout << ""Island Count: "" << island_count << endl;

  int island_count_bfs = 0;
  for (int i = 0; i < N; i++) {
    for (int j = 0; j < M; j++) {
      if (!vis[i][j] && grid[i][j] == 1) {
        island_count_bfs++;
        bfs(i, j, N, M, grid, vis);
      }
    }
  }

  cout << ""Island Count BFS: "" << island_count << endl;
}

/*
4 9
0 0 1 0 0 1 1 1 0
0 1 1 1 1 0 1 1 0
0 0 1 1 0 0 1 0 0
0 0 0 0 0 0 0 0 0
 * */
"
3tV8kTdX,Untitled,possebon,PHP,Thursday 26th of October 2023 12:41:23 PM CDT,"
server {
  listen       80 ;
  listen       [::]:80;
  listen *:443 ssl;
  server_name api.marcotextil.com.br;
  client_max_body_size 300M;

  access_log  /var/log/nginx/api.marcotextil.com.br/access.log  main;
  error_log  /var/log/nginx/api.marcotextil.com.br/error.log;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/marcotextil.com.br/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/marcotextil.com.br/privkey.pem; # managed by Certbot

    #proxy_set_header Host $host;
  # ssl_dhparam /etc/ssl/certs/dhparams.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

  ssl_prefer_server_ciphers on;

  #add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header Strict-Transport-Security max-age=15768000;


  location / {
 # set Origin to blank to avoid Chrome problems with CORS
                proxy_set_header Origin """" ;

                # pass along some header variables with the public host name/port/and so on
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Host $host:$server_port;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

               proxy_read_timeout 5m;
               proxy_send_timeout 5m;
               client_max_body_size 20M;
               proxy_http_version 1.1;
               proxy_set_header Upgrade $http_upgrade;
               proxy_set_header Connection ""upgrade"";
               proxy_pass http://10.171.161.101:8091;

    #proxy_redirect off;

  }

}               "
uGy5Pxwq,Untitled,parv28,C++,Thursday 26th of October 2023 12:24:52 PM CDT,"class HitCounter {
public:
    queue<int> q;
	HitCounter() {
	}

	void hit(int timestamp) {
		q.push(timestamp);
	}

	int getHits(int timestamp) {
        int start_timestamp = timestamp - 300;
		
		// remove the expired hits
        while(!q.empty() and q.front() <= start_timestamp) 
			q.pop();
			
        return q.size();
	}
}"
8Zi0Kvmz,Songs,borovaneca,Java,Thursday 26th of October 2023 12:15:06 PM CDT,"package Fundamentals.OOP;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Songs {

    static class Song {

        private String typeList;
        private String name;
        private String time;

        public Song(String typeList, String name, String time) {
            this.typeList = typeList;
            this.name = name;
            this.time = time;
        }

        public String getTypeList() {
            return this.typeList;
        }

        public String getName() {
            return this.name;
        }

        public String getTime() {
            return this.time;
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        List<Song> listSongs = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            String currentLine = scanner.nextLine();
            String[] inputSongArr = currentLine.split(""_"");

            Song song = new Song(inputSongArr[0], inputSongArr[1], inputSongArr[2]);

            listSongs.add(song);
        }
        String command = scanner.nextLine();
        if (command.equals(""all"")) {
            for (Song item : listSongs) {
                System.out.println(item.getName());
            }
        } else {
            for (Song item : listSongs) {
                if (item.getTypeList().equals(command)) {
                    System.out.println(item.getName());
                }
            }
        }
    }
}"
er2pg3k6,Untitled,parv28,C++,Thursday 26th of October 2023 11:39:24 AM CDT,"class Solution {
public:
	string removeKdigits(string num, int k) {
		stack<int> st;
		
		int n = num.size();
		for(int i=0;i<n;i++) {
			int curr_digit = num[i] - '0';
			while(k>0 and !st.empty() and st.top() > curr_digit) {
				// remove the top digit
				st.pop();
				k--;
			}
			st.push(curr_digit);
		}

		while(k>0 and !st.empty()) {
			st.pop();
			k--;
		}

		stack<int> reverse_stack;
		while(!st.empty()) {
			reverse_stack.push(st.top());
			st.pop();
		}

		string ans = """";
		// remove leading zeroes
		while(!reverse_stack.empty() and reverse_stack.top() == 0) reverse_stack.pop();
		while(!reverse_stack.empty()) {
			ans += (reverse_stack.top() + '0');
			reverse_stack.pop();
		}

		return ans!="""" ? ans : ""0"";
	}
};
"
S8WYYTwF,rank-temp-price control,-Teme-,JSON,Thursday 26th of October 2023 11:38:28 AM CDT,"[
    {
        ""id"": ""24fec2df3f2e5521"",
        ""type"": ""switch"",
        ""z"": ""41157ceb102bfa41"",
        ""name"": ""price"",
        ""property"": ""price"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""lt"",
                ""v"": ""0.05"",
                ""vt"": ""num""
            },
            {
                ""t"": ""gte"",
                ""v"": ""0.05"",
                ""vt"": ""num""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 2,
        ""x"": 490,
        ""y"": 1840,
        ""wires"": [
            [
                ""228fea079e17db6b""
            ],
            [
                ""0a5af0b18b5f4106""
            ]
        ]
    },
    {
        ""id"": ""4e7f024adbd82d95"",
        ""type"": ""switch"",
        ""z"": ""41157ceb102bfa41"",
        ""name"": ""price"",
        ""property"": ""price"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""lt"",
                ""v"": ""0.05"",
                ""vt"": ""num""
            },
            {
                ""t"": ""gte"",
                ""v"": ""0.05"",
                ""vt"": ""num""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 2,
        ""x"": 480,
        ""y"": 1910,
        ""wires"": [
            [
                ""228fea079e17db6b""
            ],
            [
                ""6076893a651af80e""
            ]
        ]
    },
    {
        ""id"": ""0a5af0b18b5f4106"",
        ""type"": ""switch"",
        ""z"": ""41157ceb102bfa41"",
        ""name"": ""rank ≤5"",
        ""property"": ""payload"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""lte"",
                ""v"": ""5"",
                ""vt"": ""num""
            },
            {
                ""t"": ""gt"",
                ""v"": ""5"",
                ""vt"": ""num""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 2,
        ""x"": 810,
        ""y"": 1850,
        ""wires"": [
            [
                ""5e089a5af6c166b0""
            ],
            [
                ""536bfc400d70f984""
            ]
        ]
    },
    {
        ""id"": ""8cf3a50ab10da9e5"",
        ""type"": ""switch"",
        ""z"": ""41157ceb102bfa41"",
        ""name"": ""temp ≤6"",
        ""property"": ""payload"",
        ""propertyType"": ""msg"",
        ""rules"": [
            {
                ""t"": ""lt"",
                ""v"": ""6"",
                ""vt"": ""num""
            },
            {
                ""t"": ""gte"",
                ""v"": ""6"",
                ""vt"": ""num""
            }
        ],
        ""checkall"": ""true"",
        ""repair"": false,
        ""outputs"": 2,
        ""x"": 810,
        ""y"": 1910,
        ""wires"": [
            [
                ""5e089a5af6c166b0""
            ],
            [
                ""536bfc400d70f984""
            ]
        ]
    },
    {
        ""id"": ""aba4264a83cfcdcb"",
        ""type"": ""server-state-changed"",
        ""z"": ""41157ceb102bfa41"",
        ""name"": ""rank"",
        ""server"": ""ec62f897660298cb"",
        ""version"": 5,
        ""outputs"": 1,
        ""exposeAsEntityConfig"": """",
        ""entityId"": ""sensor.shf_rank_now"",
        ""entityIdType"": ""exact"",
        ""outputInitially"": false,
        ""stateType"": ""num"",
        ""ifState"": """",
        ""ifStateType"": ""str"",
        ""ifStateOperator"": ""is"",
        ""outputOnlyOnStateChange"": true,
        ""for"": ""0"",
        ""forType"": ""num"",
        ""forUnits"": ""minutes"",
        ""ignorePrevStateNull"": false,
        ""ignorePrevStateUnknown"": false,
        ""ignorePrevStateUnavailable"": false,
        ""ignoreCurrentStateUnknown"": false,
        ""ignoreCurrentStateUnavailable"": false,
        ""outputProperties"": [
            {
                ""property"": ""payload"",
                ""propertyType"": ""msg"",
                ""value"": """",
                ""valueType"": ""entityState""
            },
            {
                ""property"": ""price"",
                ""propertyType"": ""msg"",
                ""value"": ""$number($entities(\""sensor.shf_electricity_price_now\"").state)"",
                ""valueType"": ""jsonata""
            }
        ],
        ""x"": 290,
        ""y"": 1840,
        ""wires"": [
            [
                ""24fec2df3f2e5521""
            ]
        ]
    },
    {
        ""id"": ""11ab9b4a0b11a25d"",
        ""type"": ""server-state-changed"",
        ""z"": ""41157ceb102bfa41"",
        ""name"": ""Temperature"",
        ""server"": ""ec62f897660298cb"",
        ""version"": 5,
        ""outputs"": 1,
        ""exposeAsEntityConfig"": """",
        ""entityId"": ""sensor.atc_6111_temperature"",
        ""entityIdType"": ""exact"",
        ""outputInitially"": false,
        ""stateType"": ""num"",
        ""ifState"": """",
        ""ifStateType"": ""str"",
        ""ifStateOperator"": ""is"",
        ""outputOnlyOnStateChange"": true,
        ""for"": ""0"",
        ""forType"": ""num"",
        ""forUnits"": ""minutes"",
        ""ignorePrevStateNull"": false,
        ""ignorePrevStateUnknown"": false,
        ""ignorePrevStateUnavailable"": false,
        ""ignoreCurrentStateUnknown"": false,
        ""ignoreCurrentStateUnavailable"": false,
        ""outputProperties"": [
            {
                ""property"": ""payload"",
                ""propertyType"": ""msg"",
                ""value"": """",
                ""valueType"": ""entityState""
            },
            {
                ""property"": ""price"",
                ""propertyType"": ""msg"",
                ""value"": ""$number($entities(\""sensor.shf_electricity_price_now\"").state)"",
                ""valueType"": ""jsonata""
            }
        ],
        ""x"": 310,
        ""y"": 1910,
        ""wires"": [
            [
                ""4e7f024adbd82d95""
            ]
        ]
    },
    {
        ""id"": ""6076893a651af80e"",
        ""type"": ""rbe"",
        ""z"": ""41157ceb102bfa41"",
        ""name"": ""0.5"",
        ""func"": ""deadband"",
        ""gap"": ""0.5"",
        ""start"": """",
        ""inout"": ""out"",
        ""septopics"": true,
        ""property"": ""payload"",
        ""topi"": ""topic"",
        ""x"": 660,
        ""y"": 1910,
        ""wires"": [
            [
                ""8cf3a50ab10da9e5""
            ]
        ]
    },
    {
        ""id"": ""228fea079e17db6b"",
        ""type"": ""junction"",
        ""z"": ""41157ceb102bfa41"",
        ""x"": 670,
        ""y"": 1820,
        ""wires"": [
            [
                ""5e089a5af6c166b0""
            ]
        ]
    },
    {
        ""id"": ""5e089a5af6c166b0"",
        ""type"": ""junction"",
        ""z"": ""41157ceb102bfa41"",
        ""x"": 970,
        ""y"": 1820,
        ""wires"": [
            [
                ""a45f72cf043b2140""
            ]
        ]
    },
    {
        ""id"": ""536bfc400d70f984"",
        ""type"": ""junction"",
        ""z"": ""41157ceb102bfa41"",
        ""x"": 970,
        ""y"": 1910,
        ""wires"": [
            [
                ""785e7b1f453bb836""
            ]
        ]
    },
    {
        ""id"": ""ec62f897660298cb"",
        ""type"": ""server"",
        ""name"": ""Home Assistant"",
        ""version"": 5,
        ""addon"": false,
        ""rejectUnauthorizedCerts"": true,
        ""ha_boolean"": ""y|yes|true|on|home|open"",
        ""connectionDelay"": true,
        ""cacheJson"": true,
        ""heartbeat"": false,
        ""heartbeatInterval"": ""30"",
        ""areaSelector"": ""friendlyName"",
        ""deviceSelector"": ""friendlyName"",
        ""entitySelector"": ""friendlyName"",
        ""statusSeparator"": ""at: "",
        ""statusYear"": ""hidden"",
        ""statusMonth"": ""short"",
        ""statusDay"": ""numeric"",
        ""statusHourCycle"": ""h23"",
        ""statusTimeFormat"": ""h:m"",
        ""enableGlobalContextStore"": true
    }
]"
7htF1LM6,Minimize the Heights II,jayati,C++,Thursday 26th of October 2023 11:38:01 AM CDT,"//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function template for C++

class Solution {
  public:
    int getMinDiff(int arr[], int n, int k) {
        if(n==1)
        {
            return 0;
        }
        sort(arr,arr+n);
        int d=arr[n-1]-arr[0];
        int mi,mx;
        for(int i=1;i<n;i++)
        {
            if(arr[i]-k<0)
            {
                continue;
            }
            mx = max(arr[i-1]+k,arr[n-1]-k);
            mi = min(arr[0]+k,arr[i]-k);
            d = min(d,mx-mi);
            
        }
        return d;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, k;
        cin >> k;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        auto ans = ob.getMinDiff(arr, n, k);
        cout << ans << ""\n"";
    }
    return 0;
}
// } Driver Code Ends"
VxiM1HAY,Cpp,maxim_shlyahtin,C++,Thursday 26th of October 2023 10:56:23 AM CDT,"void Trap::event_trigger(){
    if(this->player.get_finesse() < 15)
        this->player.set_health(this->player.get_health() - this->value);
    else
        std::cout << ""You dodged a trap\n"";
}

void Teleport::event_trigger(){
    if(this->player.get_intelligence() >= 15)
        this->field.set_new_loc(this->new_loc.first, this->new_loc.second);
    else
        this->field.set_new_loc(this->field.get_start().first, this->field.get_start().second);
}

Manipulator.cpp
#ifndef Manipulator_cpp
#define Manipualtor_cpp
#include ""Manipulator.h""
#include <iostream>
#include <typeinfo>


Manipulator::Manipulator(Player& player, Field& field): player(player), field(field){}

void Manipulator::player_movement(MOVEMENT move){
	int new_x = this->coordinates.first;
	int new_y = this->coordinates.second;
	if(!this->check_coordinates(new_x, new_y)){
		std::cout << ""This cell is out of reach\n"";
		return ;
	}
	switch (move) {
		case MOVEMENT::RIGHT:
			if(!this->field.get_cell(new_x, new_y).get_wall(RIGHT))
				new_x += 1;
			else{
				std::cout << ""There is a wall\n"";
				return ;
			}
			break;
		case MOVEMENT::LEFT:
			if(!this->field.get_cell(new_x, new_y).get_wall(LEFT))
				new_x -= 1;
			else{
				std::cout << ""There is a wall\n"";
				return ;
			}
			break;
		case MOVEMENT::UP:
			if(!this->field.get_cell(new_x, new_y).get_wall(UP))
				new_y += 1;
			else{
				std::cout << ""There is a wall\n"";
				return ;
			}
			break;
		case MOVEMENT::DOWN:
			if(!this->field.get_cell(new_x, new_y).get_wall(DOWN))
				new_y -= 1;
			else{
				std::cout << ""There is a wall\n"";
				return ;
			}
			break;
		default:
			break;
	}
	Cell cell = this->field.get_cell(new_x, new_y);
	if(cell.get_pass()){
		this->field.get_cell(this->coordinates.first, this->coordinates.second).set_player_presence(false);
		this->coordinates.first = new_x;
		this->coordinates.second = new_y;
		this->field.get_cell(new_x, new_y).set_player_presence(true);
		if(this->field.get_cell(new_x, new_y).get_event() != nullptr){
			this->check_for_event();
			std::cout << ""Event was triggered\n"";
		}
	} else
		std::cout << ""Path is blocked\n"";
}



bool Manipulator::check_for_miss(int finesse, int check) {
	if(this->player.get_finesse() < check)
		return true;
	return false;
}

void Manipulator::take_damage(int damage, bool hit) {
	if (hit)
		this->player.set_health(this->player.get_health() - damage);
}

void Manipulator::get_exp(int value) {
	this->player.set_exp(this->player.get_exp() + value);
}

void Manipulator::show_stats() {
	std::cout << ""Name: "" << this->player.get_name() << ""\n"";
	std::cout << ""Health: "" << this->player.get_health() << ""\n"";
	std::cout << ""Strength: "" << this->player.get_strength() << ""\n"";
	std::cout << ""Finesse: "" << this->player.get_finesse() << ""\n"";
	std::cout << ""Intelligence: "" << this->player.get_intelligence() << ""\n"";
	std::cout << ""Exp: "" << this->player.get_exp() << ""\n"";
	std::cout << ""Money: "" << this->player.get_money() << ""\n"";
	std::cout << ""Armor: "" << this->player.get_armor() << ""\n"";
}

void Manipulator::show_coords(){
	std::cout << ""Your X coordinate: "" << this->coordinates.first << ""\n"";
	std::cout << ""Your Y coordinate: "" << this->coordinates.second << ""\n"";
}

bool Manipulator::check_coordinates(int x, int y){
	if(x < 0 || x > MAX_W || y < 0 || y > MAX_H)
		return false;
	else
		return true;
}

void Manipulator::update_coords(){
	int x = this->field.get_new_loc().first;
	int y = this->field.get_new_loc().second;
	if(x == -1){ return; }
	int prev_x = this->coordinates.first;
	int prev_y = this->coordinates.second;
	this->field.get_cell(prev_x, prev_y).set_event(nullptr);
	this->field.get_cell(prev_x, prev_y).set_player_presence(false);
	if(this->check_coordinates(x, y)){
		this->coordinates.first = x;
		this->coordinates.second = y;
		this->field.get_cell(x, y).set_player_presence(true);
	}
	this->field.set_new_loc(-1, -1);
}

void Manipulator::check_for_event(){
	int x = this->coordinates.first;
	int y = this->coordinates.second;
	Cell cell = this->field.get_cell(x, y);
	cell.get_event()->event_trigger();
	this->update_coords();
}

void Manipulator::start_the_game() {
	std::cout << ""It's the start of the game. Choose your name:\n"";
	std::string name;
	std::cin >> name;
	this->player.set_name(name);
	std::cout << ""Choose your character:\n"";
	std::cout << ""Press 1 to choose Fighter\n"";
	std::cout << ""Press 2 to choose Wizard\n"";
	std::cout << ""Press 3 to choose Rogue\n"";
	int input;
	std::cin >> input;
	switch (input) {
		case(1):
			this->player.set_character(SUBCLASS::FIGHTER);
			break;
		case(2):
			this->player.set_character(SUBCLASS::WIZARD);
			break;
		case(3):
			this->player.set_character(SUBCLASS::ROGUE);
			break;
		default:
			std::cout << ""You decided to start as a commoner.\n"";
	}
	std::cout << ""Character's info: \n"";
	this->show_stats();
	std::cout << ""\n"";
	IFieldGen* ev = new FieldGenerator(30, 30);
	this->field = ev->create_field(this->player);
	FieldDisplay field_display(this->field);
	this->update_coords();
	this->field.get_cell(1, 0).set_event(new Teleport(std::make_pair(9, 9), this->field, this->player));
	this->show_coords();
	field_display.show_field();
	this->player_movement(RIGHT);
	this->show_stats();
	field_display.show_field();
}

#endif"
uvTMa3Vv,Untitled,dllbridge,C,Thursday 26th of October 2023 10:52:43 AM CDT,"
#include   <stdio.h>


////////////////////////////////////////////////////
struct TT                                         //   
{
	
	int n;
	
	float fWeigt;
	
};



TT d3, d2;

int n;

////////////////////////////////////////////////////   unsigned 
int main()                                        // 
{
	
	TT d4;
	
	
	
	d2.n      =     11;
	d2.fWeigt = 37.843;
	
	printf(""d2.fWeigt = %.3f\n"", d2.fWeigt); 
	
	scanf(""%d"", &d2.n);
}
	
	
	
	
	
	
	
	
	
	
	
	





/*
#include   <stdio.h>


////////////////////////////////////////////////////
struct TT                                         //   
{
	
	int n;
	
	float fWeigt;
	
}d1, d2, arr[22];



TT d3;


////////////////////////////////////////////////////   unsigned 
int main()                                        // 
{
	
	TT d4;
	
	
	
	d2.n      =     11;
	d2.fWeigt = 37.843;
	
	printf(""d2.fWeigt = %.3f\n"", d2.fWeigt); 
	
	scanf(""%d"", &d2.n);
}
	
	
	
	
	*/
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

/*

#include   <stdio.h>


int  n = 47,   // hykjhkjh  
    *p = &n,   //  ooljklj
	&a =  n;
  
   

////////////////////////////////////////////////////   unsigned 
int main()                                        // 
{
	
	
	printf(""address n = %7d\n"", &n); 
	printf(""address n = %7d\n"",  p); 
	printf(""address n = %7d\n"", &a);   a -= 17;
	printf(""        n = %7d\n"",  n);
}




*/















/*

#include   <stdio.h>


int  n = 97;
int *p = &n;
int &a =  n;

////////////////////////////////////////////////////   unsigned 
int main()                                        // 
{
	
	
	printf(""address n = %7d\n"", &n); 
	printf(""address n = %7d\n"",  p); 
	printf(""address n = %7d\n"", &a);   a = a - 17;
	printf(""        n = %7d\n"",  n);
}



*/


























/*

#include   <stdio.h>


int n = 55;

////////////////////////////////////////////////////   unsigned 
int main()                                        // 
{
	
	int nRes = n%7;
	
	printf(""remainder = %d\n"", nRes);     nRes = n/7;
	printf(""Group     = %d\n"", nRes);
}





*/







"
d2n1w91F,AOC2016D21.py,bob_f,Python,Thursday 26th of October 2023 10:48:51 AM CDT,"from collections import deque

def get_puzzle_input(a_file_name) -> list[str]:
    with open(a_file_name) as INFILE:
        return [line.rstrip() for line in INFILE if not line.startswith('#')]
    
def swap_positions(a_encrypted: list[str], a_x:int, a_y:int):
    a_encrypted[a_x], a_encrypted[a_y] = a_encrypted[a_y], a_encrypted[a_x]

def swap_letter(a_encrypted: list[str], a_char_a:str, a_char_b:str):
    char_a_pos = a_encrypted.index(a_char_a)
    char_b_pos = a_encrypted.index(a_char_b)
    swap_positions(a_encrypted, char_a_pos, char_b_pos)

def rotate_steps(a_encrypted: list[str], a_steps:int, a_direction:str):
    d_encrypted = deque(a_encrypted)
    d_encrypted.rotate(int(a_steps) if a_direction == 'right' else -int(a_steps))
    a_encrypted.clear()
    a_encrypted.extend(list(d_encrypted))

def reverse_chunk(a_encrypted: list[str], a_from:int, a_to:int):
    reverse_chunk = a_encrypted[a_from:a_to + 1][::-1]
    encrypted = a_encrypted[:a_from] + reverse_chunk + a_encrypted[a_to + 1:]
    a_encrypted.clear()
    a_encrypted.extend(encrypted)
    pass

def rotate_letter(a_encrypted: list[str], a_char:str):
    char_index = a_encrypted.index(a_char)
    steps_to_rotate = 1 + char_index 
    steps_to_rotate += 1 if char_index > 3 else 0
    rotate_steps(a_encrypted, steps_to_rotate, 'right')

def move_char(a_encrypted: list[str], a_char_from:int, a_char_to:int):
    copy = a_encrypted.copy()
    char_to_move = copy[a_char_from]
    del copy[a_char_from]
    a_encrypted.clear()

    a = copy[:a_char_to] 
    b = [char_to_move]
    c = copy[a_char_to:]
    d = a + b + c

    a_encrypted.extend(copy[:a_char_to] + [char_to_move] + copy[a_char_to:])
    pass

def solve(a_password: str, a_operations: list[str]) -> str:
    encrypted = list(a_password)

    for operation in a_operations:
        match operation.split():
            case ['swap', 'position', pos_x, *blah, pos_y]:
                swap_positions(encrypted, int(pos_x), int(pos_y))
            case ['swap', 'letter', char_a, *blah, char_b]:
                swap_letter(encrypted, char_a, char_b)
            case ['rotate', direction, steps, ('steps' | 'step')]:
                rotate_steps(encrypted, int(steps), direction)
            case ['rotate', 'based', *blah, char]:
                rotate_letter(encrypted, char)
            case ['reverse', 'positions', rev_from, 'through', rev_to]:
                reverse_chunk(encrypted, int(rev_from), int(rev_to))
            case ['move', 'position', pos_from, *blah, pos_to]:
                move_char(encrypted, int(pos_from), int(pos_to))
            case _:
                assert 1==0, 'Nah'

    return ''.join(encrypted)

operations = get_puzzle_input('AOC2016\AOC2016D21.txt')
password = 'abcdefgh'

print(f'{solve(password, operations)=}')"
T6Eza9Tg,Events,maxim_shlyahtin,C++,Thursday 26th of October 2023 10:32:17 AM CDT,"class Event{
public:
    virtual void event_trigger() = 0;

    virtual ~Event() = default;
};

class PlayerEvents: public Event{
public:
    PlayerEvents(int value, Player& player):value(value), player(player){}

    virtual void event_trigger() = 0;

    virtual ~PlayerEvents() = default;

protected:
    int value;
    Player& player;
};

class Trap: public PlayerEvents{
public:
    Trap(int value, Player& player): PlayerEvents(value, player){}
    
    void event_trigger();
    
    ~Trap() = default;
};

class FieldEvents: public Event{
public:
    FieldEvents(std::pair<int, int> new_loc, Field& field, Player& player): new_loc(new_loc), field(field), player(player){}

    virtual void event_trigger() = 0;

    ~FieldEvents() = default;
protected:
    std::pair<int, int> new_loc;
    Field& field;
    Player& player;
};

class Teleport: public FieldEvents{
public:
    Teleport(std::pair<int, int> new_loc, Field& field, Player& player): FieldEvents(new_loc, field, player){}

    void event_trigger();

    ~Teleport() = default;
};

"
y1MVnJkM,[titon.neocities.org] Postcards,Titondesign,HTML,Thursday 26th of October 2023 10:18:10 AM CDT,"<!-- POSTCARD 01 from titon.neocities.org || 64PX -->
<a href=""https://titon.neocities.org/?ref=postcard01""><img src=""https://titon.neocities.org/images/poster01.png"" alt=""Postcard 01 - house in golden frame"" style=""width: 64px;image-rendering: pixelated;""></a>"
5J63X6qm,rpgjhkjhjkh,gruntfutuk,Python,Thursday 26th of October 2023 10:17:32 AM CDT,"    import random
    from dataclasses import dataclass
    
    
    @dataclass
    class Response:
        # detect player response
        playerResponse: str
    
    
    @dataclass
    class Player:
        # player stats
        playerAC: int
        playerMaxHealth: int
        playerHealth: int
        playerStrength: int
        playerMagicka: int
        playerCrit: int
        playerPhysical: int
        playerMagic: int
    
        def __str__(self):
            return (
                f""\n##YOUR STATS##\n""
                f""AC: {self.playerAC}\n""
                f""Health: {self.playerHealth}/{myPlayer.playerMaxHealth}\n""
                f""Strength: {self.playerStrength}\n""
                f""magicka: {self.playerMagicka}\n""
                f""Crit Chance: {self.playerCrit}\n""
                f""Physical Resistance: {self.playerPhysical}\n""
                f""Magical Resistance: {self.playerMagic}\n""
            )
    
    
    @dataclass
    class Ramsey:
        # Ramsey Stats
        ramseyAC: int
        ramseyMaxHealth: int
        ramseyHealth: int
        ramseyStrength: int
        ramseyMagicka: int
        ramseyCrit: int
        ramseyPhysical: int
        ramseyMagic: int
        ramseyClass: str
        ramseyAbility: str
        ramseyTick1: bool
        ramseyTick2: bool
        ramseyTick3: bool
        ramseySanguineTreat: bool
    
    
    @dataclass
    class Room:
        # rooms
        room1: bool
        room1pt2: bool
        room2: bool
        room3: bool
        room4: bool
        room4bite: bool
        room4resist: bool
        room5: bool
        room5eat: bool
        room5decline: bool
        room6: bool
        room7: bool
        room8: bool
        room9: bool
        room10: bool
    
    
    @dataclass
    class Interactions:
        room4int: int
        firstFight: int
    
    
    @dataclass
    class Weapons:
        punch: int
    
    
    @dataclass
    class Mechanics:
        playerDamageToDeal: int
        playerDamageDone: int
        enemyDamageToDeal: int
        enemyDamageDone: int
        playerCritHit: int
        enemyCritHit: int
        playerRollToHit: int
        enemyRollToHit: int
        gameStarted: int
    
    
    def statsDisplay():
        # display stats to player
        print(myPlayer)
        myResponse.playerResponse = input(""What would you like to do next: "")
        print("""")
    
    
    # rooms and interactions
    def firstFight():
        print(""Welcome to your first fight in the Vampire Manor!"")
        print("""")
        print(""##HOW FIGHTS WORK##"")
        print(""____________________"")
        print(""Fights are one time and are unescapable, meaning once a fight has started, you must survive, so be careful!"")
        print(""1. Your enemies stats will be shown so plan out your attack."")
        print(
            ""2. Enemies have the same stats as you. Class and Special Ability: The class can help determine what type of enemy you are fighting, the special ability gives you a warning on the enemy's strongest move. AC: AC or armour class is the number you have to get to be able to hit the enemy which will be determined by a random D20 roll. Health: Once the enemy's health is reduced to 0, you win! Strength and Magicka: Strength is the stat that determines how much physical damage they do, and vice versa for magicka, certain weapons use different damage stats, so it's adivsed to build your character around one of these stats. Physical Resistance and Magic Resistance: These are the stats that protect the enemy, or you, from certain attacks, typically one resistance will be much lower than the other, so abuse it! Critical Chance: The higher you or your enemy's crit chance is, the more likely they are to deal double damage in one turn."")
        print(""3. Each round, you will have a choice of attacks to choose from, pick wisely, some have cooldowns."")
        print(""Good Luck!"")
        myInteraction.firstFight = True
    
    
    def playRoom1():
        myRoom.room1 = True
        print(""__________________________________________"")
        print("""")
        print(
            ""You awake from a coarse slumber, sat wreathed in your own blood. Your face feels cold and lifeless, your skin, a pale blue, and an intense hunger rages deep inside you. You lay inside an enclosed space, the walls are laid with soft pillow that feels quite comfortable, apart from the warm stickiness of your own blood, you’re locked in a coffin. Despite the stark appearance of your body, you feel unparalleled strength, hopefully enough to break yourself out."")
        print("""")
        print(""Enter: attack"")
        print("""")
        myResponse.playerResponse = input()
    
    
    def playRoom1pt2():
        myRoom.room1pt2 = True
        print(""__________________________________________"")
        print("""")
        print(
            ""As you look around, you see that the coffin you were in is placed in the centre of a small room. The building is cold and has an intricately designed gothic architecture, it’s dark, with small torches illuminating the surrounding area. There is only one exit, to your east."")
        print("""")
        print(""Exits: E"")
        print("""")
        print(""Enter 'E' or 'east'"")
        print("""")
        myResponse.playerResponse = input()
    
    
    def playRoom2():
        myRoom.room2 = True
        print(""__________________________________________"")
        print("""")
        print(
            ""You enter into a large intersection, once again dimly lit with torches. To the south is an open archway that leads to another room. To the east is an open door and to the north is a large, locked gateway, adorned with silver and engraved with a symbol you don’t remember but it still feels familiar."")
        print("""")
        print(""Exits: E, S"")
        print("""")
        myResponse.playerResponse = input()
    
    
    def playRoom4():
        myRoom.room4 = True
        if myInteraction.room4int == False:
            print(""__________________________________________"")
            print("""")
            print(
                ""As you enter this room, a strong smell of flesh wafts over you, and as you look down, you see a lifeless human laying in a pool of their own blood. You feel an intense urge to fulfill your hunger, the body does seem fresh, however you know what you want to do is wrong."")
            print("""")
            print(""Enter: 'bite' or 'resist'"")
            print("""")
            myInteraction.room4int = True
            myResponse.playerResponse = input()
        elif myInteraction.room4int == True:
            print(""__________________________________________"")
            print("""")
            print(""You're back in this room, the lifeless body lies here, staring blankly into space"")
            print("""")
            print(""Exits: E, W, N"")
            print("""")
            myResponse.playerResponse = input()
    
    
    def playRoom4bite():
        myRoom.room4bite = True
        print(""__________________________________________"")
        print("""")
        print(""You dig your fangs into the corpse, and as you do, you start to feel stronger and happier."")
        print("""")
        print(""Your corruption increases by 20%, but your health increases by 15"")
        print("""")
        print(""Exits: E, W, N"")
        print("""")
        myResponse.playerResponse = input()
    
    
    def playRoom4resist():
        myRoom.room4resist = True
        print(""__________________________________________"")
        print("""")
        print(""You resist the urge, the hunger still rages, but you feel slightly more at ease"")
        print("""")
        print(""Exits: E, W, N"")
        print("""")
        myResponse.playerResponse = input()
    
    
    def playRoom5():
        myRoom.room5 = True
        print(""__________________________________________"")
        print("""")
        print(
            ""As you enter this room a soft and sweet smell wafts over you. As you look closer, you see a table laid with sanguine cloth and a vase of roses sits in the middle. The table holds an assortment of deserts, some puddings, some cake, some pastries, but all of them seem to have a hint of red."")
        print("""")
        print(""You see a woman, dressed in chef’s clothes walk towards you."")
        print("""")
        print(
            ""Lady Ramsey: 'Oh hello newborn, looking for a meal?' She peers closer, her eyes giving an uncanny valley feel. 'They're fresh.'"")
        print("""")
        print(""Enter: 'eat' or 'decline'"")
        print("""")
        myResponse.playerResponse = input()
    
    
    def playRoom5eat():
        myRoom.room5eat = True
        print(""__________________________________________"")
        print("""")
        print(""Lady Ramsey: 'Isn’t it tasty? Made fresh with human blood.'"")
        print("""")
        print(""Your corruption increases by 15%, but your  max health increases by 10"")
        print("""")
        print(""Exits: E"")
        print("""")
        myResponse.playerResponse = input()
    
    
    def playerDamage():
        attack = input(""What attack would you like to do?: "")
        if attack == ""punch"":
            myMechanics.playerDamageToDeal = myWeapons.punch
    
    
    def ramseyDamage():
        ramseyCritChance = random.randint(1, 100)
        if myRamsey.ramseyTick1 == False and myRamsey.ramseyTick2 == False and myRamsey.ramseyTick3 == False:
            myRamsey.ramseySanguineTreat = False
            myRamsey.ramseyTick1 = True
    
            myMechanics.enemyDamageToDeal = myRamsey.ramseyMagicka
            if ramseyCritChance > myRamsey.ramseyCrit:
                myMechanics.enemyDamageToDeal / 2
    
        elif myRamsey.ramseyTick1 and myRamsey.ramseyTick2 == False and myRamsey.ramseyTick3 == False:
            myRamsey.ramseyTick2 = True
    
            myMechanics.enemyDamageToDeal = myRamsey.ramseyMagicka
            if ramseyCritChance > myRamsey.ramseyCrit:
                myMechanics.enemyDamageToDeal / 2
    
        elif myRamsey.ramseyTick1 and myRamsey.ramseyTick2 and myRamsey.ramseyTick3 == False:
            myRamsey.ramseyTick3 = True
    
            myMechanics.enemyDamageToDeal = myRamsey.ramseyMagicka
            if ramseyCritChance > myRamsey.ramseyCrit:
                myMechanics.enemyDamageToDeal / 2
    
        elif myRamsey.ramseyTick1 and myRamsey.ramseyTick2 and myRamsey.ramseyTick3:
            myRamsey.ramseySanguineTreat = True
            myRamsey.ramseyTick1 = False
            myRamsey.ramseyTick2 = False
            myRamsey.ramseyTick3 = False
    
    
    def ramseyHealthCheck():
        if myRamsey.ramseyHealth > myRamsey.ramseyMaxHealth:
            myRamsey.ramseyHealth = myRamsey.ramseyMaxHealth
    
    
    def ramseyFight():
        while myPlayer.playerHealth > 0 and myRamsey.ramseyHealth > 0:
            playerDamage()
            ramseyDamage()
            myMechanics.playerRollToHit = random.randint(1, 20)
            if myMechanics.playerRollToHit > myRamsey.ramseyAC:
                myRamsey.ramseyHealth = myRamsey.ramseyHealth - myMechanics.playerDamageToDeal
                print(""You dealt Ramsey"", myMechanics.playerDamageToDeal, ""damage!"")
            elif myMechanics.playerRollToHit == 1:
                myPlayer.playerHealth = myPlayer.playerHealth - myMechanics.playerDamageToDeal / 2
                print(""Critical miss! You dealt yourself"", myMechanics.playerDamageToDeal / 2, ""damage!"")
            elif myMechanics.playerRollToHit == 20:
                myRamsey.ramseyHealth = myRamsey.ramseyHealth - myMechanics.playerDamageToDeal * 1.5
                print(""Critical hit! You dealt Ramsey"", myMechanics.playerDamageToDeal * 1.5)
            print("""")
            if myRamsey.ramseySanguineTreat == True:
                ramseyHeal = myPlayer.playerHealth * 0.2
                myPlayer.playerHealth = myPlayer.playerHealth - myPlayer.playerHealth * 0.2
                myRamsey.ramseyHealth = myRamsey.ramseyHealth + ramseyHeal
                ramseyHealthCheck()
            elif myRamsey.ramseySanguineTreat == False:
                myMechanics.enemyRollToHit = random.randint(1, 20)
                if myMechanics.enemyRollToHit > myPlayer.playerAC:
                    myPlayer.playerHealth = myPlayer.playerHealth - myMechanics.enemyDamageToDeal
                    print(""Ramsey dealt you"", myMechanics.enemyDamageToDeal, ""damage!"")
                elif myMechanics.enemyRollToHit == 1:
                    myRamsey.ramseyHealth = myRamsey.ramseyHealth - myMechanics.enemyDamageToDeal / 2
                    print(""Critical miss! Ramsey dealt herself"", myMechanics.enemyDamageToDeal / 2, ""damage!"")
                elif myMechanics.enemyRollToHit == 20:
                    myPlayer.playerHealth = myPlayer.playerHealth - myMechanics.enemyDamageToDeal * 1.5
                    print(""Critical hit! Ramsey dealt you"", myMechanics.enemyDamageToDeal * 1.5, ""damage!"")
        print(""Well done! You have defeated Ramsey the Cook!"")
    
    
    def playRoom5decline():
        myRoom.room5decline = True
        print(""__________________________________________"")
        print("""")
        print(""Lady Ramsey: 'Wrong choice'"")
        print("""")
        if myInteraction.firstFight == False:
            firstFight()
            ramseyFight()
        elif myInteraction.firstFight == True:
            print(""Good Luck!"")
            ramseyFight()
    
    
    myResponse = Response(playerResponse="""")
    myResponse.playerResponse = input(
        ""Welcome brave adventurer, to get started enter 'start' but if you wish to familiarize yourself with your character, enter 'stats': "")
    myPlayer = Player(playerAC=14, playerMaxHealth=100, playerHealth=100, playerStrength=30, playerMagicka=30,
                      playerCrit=15, playerPhysical=20, playerMagic=5)
    myRamsey = Ramsey(ramseyAC=12, ramseyMaxHealth=90, ramseyHealth=90, ramseyStrength=10, ramseyMagicka=40, ramseyCrit=10,
                      ramseyPhysical=5, ramseyMagic=15, ramseyClass=""Mage - Cook"",
                      ramseyAbility=""Special Ability: Sanguine Treat – Lady Ramsey throws one of her special treats at her enemy, it deals damage equal to 10% of the enemy's total health and Lady Ramsey heals that much."",
                      ramseyTick1=False, ramseyTick2=False, ramseyTick3=False, ramseySanguineTreat=False)
    myRoom = Room(room1=False, room1pt2=False, room2=False, room3=False, room4=False, room4bite=False, room4resist=False,
                  room5=False, room5eat=False, room5decline=False, room6=False, room7=False, room8=False, room9=False,
                  room10=False)
    myInteraction = Interactions(room4int=False, firstFight=False)
    myWeapons = Weapons(punch=1)
    # weapon calculations
    while myPlayer.playerHealth > 0:
        myWeapons.punch = myWeapons.punch * myPlayer.playerStrength / 2
    myMechanics = Mechanics(playerDamageToDeal=0, playerDamageDone=False, enemyDamageToDeal=0, enemyDamageDone=False,
                            playerCritHit=False, enemyCritHit=False, playerRollToHit=0, enemyRollToHit=0, gameStarted=False)
    
    while myPlayer.playerHealth > 0:
        if myResponse.playerResponse == ""stats"":
            myResponse.playerResponse = """"
            statsDisplay()
        elif myResponse.playerResponse == ""start"" and gameStarted == False:
            myResponse.playerResponse = """"
            gameStarted = True
            playRoom1()
        elif myResponse.playerResponse == ""attack"" and myRoom.room1 == True:
            myResponse.playerResponse = """"
            print("""")
            myRoom.room1 = False
            playRoom1pt2()
        elif ((myResponse.playerResponse == ""E"" or myResponse.playerResponse == ""east"") and myRoom.room1pt2 == True) or (
                (myResponse.playerResponse == ""N"" or myResponse.playerResponse == ""north"") and myRoom.room4 == True):
            myResponse.playerResponse = """"
            print("""")
            myRoom.room1pt2 = False
            myRoom.room4 = False
            playRoom2()
        elif ((myResponse.playerResponse == ""S"" or myResponse.playerResponse == ""south"") and myRoom.room2 == True) or ((
                                                                                                                               myResponse.playerResponse == ""E"" or myResponse.playerResponse == ""east"") and myRoom.room5 == True or myRoom.room5eat == True or myRoom.room5decline == True):
            myResponse.playerResponse = """"
            print("""")
            myRoom.room2 = False
            myRoom.room5 = False
            playRoom4()
        elif myResponse.playerResponse == ""bite"" and myRoom.room4 == True:
            myResponse.playerResponse = """"
            print("""")
            myRoom.room4 = False
            playRoom4bite()
        elif myResponse.playerResponse == ""resist"" and myRoom.room4 == True:
            myResponse.playerResponse = """"
            print("""")
            myRoom.room4 = False
            playRoom4resist()
        elif ((myResponse.playerResponse == ""W"" or myResponse.playerResponse == ""west"") and (
                myRoom.room4 == True or myRoom.room4bite == True or myRoom.room4resist == True)):
            myResponse.playerResponse = """"
            print("""")
            myRoom.room4 = False
            myRoom.room4bite = False
            myRoom.room4resist = False
            playRoom5()
        elif myResponse.playerResponse == ""eat"" and myRoom.room5 == True:
            myResponse.playerResponse = """"
            print("""")
            myRoom.room5 = False
            playRoom5eat()
        elif myResponse.playerResponse == ""decline"" and myRoom.room5 == True:
            myResponse.playerResponse = """"
            print("""")
            myRoom.room5 = False
            playRoom5decline()
"
knpQSqLb,wine uninstaller --list,iconoclasthero,Bash,Thursday 26th of October 2023 10:10:10 AM CDT,"$ wine uninstaller --list
0098:fixme:hid:handle_IRP_MN_QUERY_ID Unhandled type 00000005
0098:fixme:hid:handle_IRP_MN_QUERY_ID Unhandled type 00000005
0098:fixme:hid:handle_IRP_MN_QUERY_ID Unhandled type 00000005
0098:fixme:hid:handle_IRP_MN_QUERY_ID Unhandled type 00000005
0098:fixme:wineusb:query_id Unhandled ID query type 0x5.
0104:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0104:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0108:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0108:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0110:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0110:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0114:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0114:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
011c:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
010c:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
011c:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
010c:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0120:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0120:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0128:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0128:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0118:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0118:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0124:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0124:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
012c:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
012c:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0130:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0130:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0138:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0138:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
013c:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
013c:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0134:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0134:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0140:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0144:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0144:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0140:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0148:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0148:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
014c:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
014c:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0150:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0150:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0154:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0154:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0158:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
0158:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
015c:fixme:ntoskrnl:KeQueryPriorityThread (0000000000000000): stub.
015c:fixme:ntoskrnl:KeSetPriorityThread (0000000000000000 16)
0170:fixme:advapi:RegisterEventSourceW ((null),L""WinArchiver Service""): stub
0170:fixme:advapi:ReportEventW (CAFE4242,0x0004,0x0000,0x00000069,00000000,0x0000,0x00000000,01FDFE98,00000000): stub
0178:fixme:heap:RtlSetHeapInformation handle 0000000001850000, info_class 0, info 000000000021F6B0, size 4 stub!
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F510
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F510
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F510
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F510
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F510
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F510
0178:fixme:ntdll:EtwRegisterTraceGuidsW   register trace class {04c6e16d-b99f-4a3a-9b3e-b8325bbc781e}
0178:fixme:svchost:AddServiceElem library L""C:\\windows\\system32\\WsmSvc.dll"" expects undocumented SvchostPushServiceGlobals function to be called
003c:fixme:service:scmdatabase_autostart_services Auto-start service L""WinRM"" failed to start: 1053
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F740
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F740
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F740
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F740
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F6C0
0178:fixme:ntdll:EtwLogTraceEvent 0 000000000021F740
7-Zip|||7-Zip 19.00 (x64)
{2DBE349F-FF05-42FE-81A9-2B3A0EC22BBE}|||Common Desktop Agent
Dell B1160w Mono Laser Printer|||Dell B1160w Mono Laser Printer
{1F232A3A-5C62-42BA-9ADC-A097DF7A85D5}|||Dell OS Recovery Tool
eMule|||eMule
inAudible 1.197|||inAudible
Microsoft .NET Framework 4 Client Profile|||Microsoft .NET Framework 4 Client Profile
{9BE518E6-ECC6-35A9-88E4-87755C07200F}|||Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161
{FF27E73D-C30A-4F32-B2D7-22069F01DDB9}|||OverDrive for Windows
{05321FDB-BBA2-497D-99C6-C440E184C043}|||PowerShell 7-x64
WinArchiver|||WinArchiver
KB968930|||Windows Management Framework Core
{92E6986F-9DE7-4D94-A27F-3601B260C881}|||Wine Gecko (32-bit)
{45A1C80C-3E51-432F-AF64-27BA6BFCF4C1}|||Wine Gecko (32-bit)
{83F3DB41-CE50-411F-B218-93FD46CE0AB0}|||Wine Gecko (64-bit)
{8F52B55B-5164-4458-B4F6-B6A6EA67DF65}|||Wine Gecko (64-bit)
"
9aqthxqz,winetricks dotnet20,iconoclasthero,Bash,Thursday 26th of October 2023 10:07:20 AM CDT,"$ cat x.log 
$ winetricks dotnet20
od: wine: No such file or directory
------------------------------------------------------
warning: You are using a 64-bit WINEPREFIX. Note that many verbs only install 32-bit versions of packages. If you encounter problems, please retest in a clean 32-bit WINEPREFIX before reporting a bug.
------------------------------------------------------
Using winetricks 20230212-next - sha256sum: fe0550e0d843214f87dcb0f4aa591be0046fa93db7b8330217dd926258e628fc with wine-8.0.2 and WINEARCH=win64
Executing w_do_call dotnet20
od: wine: No such file or directory
------------------------------------------------------
warning: You are using a 64-bit WINEPREFIX. Note that many verbs only install 32-bit versions of packages. If you encounter problems, please retest in a clean 32-bit WINEPREFIX before reporting a bug.
------------------------------------------------------
Executing load_dotnet20 
Executing w_do_call remove_mono internal
od: wine: No such file or directory
------------------------------------------------------
warning: You are using a 64-bit WINEPREFIX. Note that many verbs only install 32-bit versions of packages. If you encounter problems, please retest in a clean 32-bit WINEPREFIX before reporting a bug.
------------------------------------------------------
Executing load_remove_mono internal
reg: Unable to find the specified registry key
reg: Unable to find the specified registry key
Executing rm -f /home/$USER/.wine/dosdevices/c:/windows/system32/mscoree.dll
Executing rm -f /home/$USER/.wine/dosdevices/c:/windows/syswow64/mscoree.dll
Executing w_do_call fontfix
od: wine: No such file or directory
------------------------------------------------------
warning: You are using a 64-bit WINEPREFIX. Note that many verbs only install 32-bit versions of packages. If you encounter problems, please retest in a clean 32-bit WINEPREFIX before reporting a bug.
------------------------------------------------------
Executing load_fontfix 
Executing mkdir -p /home/$USER/.cache/winetricks/dotnet20
mkdir: cannot create directory ‘/home/$USER/.cache’: File exists
------------------------------------------------------
warning: Note: command mkdir -p /home/$USER/.cache/winetricks/dotnet20 returned status 1. Aborting.
------------------------------------------------------
edt 11.06 am  pwd: /dev/shm/cache  
"
6c8zVfkW,Untitled,ShiinaBR,C#,Thursday 26th of October 2023 10:01:46 AM CDT,"[
""0001859EA7AF69EF10A6F7921DD4DD9A:3M92MlWo2b1V04mxizc7cHB6TDP/UInspfWR4yT7K3g=""
]"
6keNBi0j,C18SWUARTv0.001,wpyke,C,Thursday 26th of October 2023 09:58:47 AM CDT,"#include <18F4620.h>
#include <sw_uart.h>

void main(void)
{
    char data;
    
    OpenUART(   USART_TX_INT_OFF &  // Transmit interrupt OFF
                USART_RX_INT_OFF &	// Receive interrupt OFF
                USART_ASYNCH_MODE &	// Asynchronous Mode
                USART_EIGHT_BIT &	// 8-bit transmit/receive
                USART_CONT_RX &		// Continuous reception
                USART_BRGH_HIGH,	// High baud rate
                25 ); // configure software UART

    while(1)
    {
        data = ReadUART(); //read a byte
        WriteUART( data ); //bounce it back
    }
}
"
vXPAPCn7,Untitled,Danielo_17,Java,Thursday 26th of October 2023 09:54:16 AM CDT,"package nauka.zadania;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Wisielec {
    private static final ArrayList<String> words = new ArrayList<>(); //lista do przechowywania dostępnych haseł.

    static {
        words.add(""MADRYT"");
        words.add(""BARCELONA"");
        words.add(""MILAN"");
        words.add(""RZYM"");
        words.add(""PARYŻ"");

    }

    private static final String[] gallows = {
            "" _______\n"" +
                    "" |     |\n"" +
                    "" |\n"" +
                    "" |\n"" +
                    "" |\n"" +
                    "" |\n"" +
                    ""_|_"",

            "" _______\n"" +
                    "" |     |\n"" +
                    "" |     O\n"" +
                    "" |\n"" +
                    "" |\n"" +
                    "" |\n"" +
                    ""_|_"",

            "" _______\n"" +
                    "" |     |\n"" +
                    "" |     O\n"" +
                    "" |     |\n"" +
                    "" |\n"" +
                    "" |\n"" +
                    ""_|_"",

            "" _______\n"" +
                    "" |     |\n"" +
                    "" |     O\n"" +
                    "" |    /|\n"" +
                    "" |\n"" +
                    "" |\n"" +
                    ""_|_"",

            "" _______\n"" +
                    "" |     |\n"" +
                    "" |     O\n"" +
                    "" |    /|\\\n"" +
                    "" |\n"" +
                    "" |\n"" +
                    ""_|_"",

            "" _______\n"" +
                    "" |     |\n"" +
                    "" |     O\n"" +
                    "" |    /|\\\n"" +
                    "" |    /\n"" +
                    "" |\n"" +
                    ""_|_"",

            "" _______\n"" +
                    "" |     |\n"" +
                    "" |     O\n"" +
                    "" |    /|\\\n"" +
                    "" |    / \\\n"" +
                    "" |\n"" +
                    ""_|_""
    };

    private static final int maxAttempts = 7; // stała określająca maksymalną liczbę prób

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        Set<Character> usedLetters = new HashSet<>();

        System.out.println(""Czołem! Zapraszam do gry w Wisielca."");

        System.out.println(""Wybierz liczbę od 1 do "" + words.size() + "", aby wylosować hasło do odgadnięcia: "");

        int choose = scanner.nextInt(); // odczytanie liczby wpisanej przez użytkownika.

        while (choose < 1 || choose > words.size()) { //sprawdzenie czy wybrana liczba mieści się w zdefiniowanym zakresie.
            System.out.println(""Nieprawidłowy wybór, prosiłem CIe o wybranie liczby z zakresu 1 - "" + words.size() +
                    ""! Wybierz ponownie liczbę: "");

            choose = scanner.nextInt(); // ponowne odczytanie liczby.
        }

        String password = words.get(choose - 1);

        StringBuilder hiddenPassword = new StringBuilder();
        for (int i = 0; i < password.length(); i++) {
            hiddenPassword.append(""_"");  //Zastąpienie litery znakami ""_"".
        }

        int faults = 0; //inicjacja licznika błędów.

        while (faults < maxAttempts && hiddenPassword.indexOf(""_"") != -1) {
            System.out.println(""Aktualny stan: "" + hiddenPassword);

            System.out.println(""Podaj literę: "");

            char letter;
            try {
                letter = scanner.next().toUpperCase().charAt(0);
                if (!Character.isLetter(letter))    {
                    System.out.println(""Wprowadzono znak zamiast liter! Spróbój ponownie."");
                    continue;
                }
            } catch (Exception e) {
                System.out.println(""Nieprawdiłowe dane! Wprowadź literę."");
                continue;
            }

            if (usedLetters.contains(letter)) {
                System.out.println(""Ta litera została już użyta!"");
                continue;
            }
            usedLetters.add(letter);
            if (password.indexOf(letter) == -1) {

                faults++;

                printGallows(faults);

            } else {
                for (int i = 0; i < password.length(); i++) {
                    if (password.charAt(i) == letter) {
                        hiddenPassword.setCharAt(i, letter);
                    }

                }
            }

        }
        if (faults == maxAttempts) {
            System.out.println(""Przegrałeś, wykorzystałeś wszystkie próby. Prawidłowe hasło to: "" + password);
        } else {
            System.out.println(""Brawo! Odgadłeś hasło: "" + password);
        }
    }

    private static void printGallows(int faults) {
        System.out.println(gallows[faults - 1]);

    }
}



"
ra3ZENhU,Turtle Quarry,hiphopcanine,Lua,Thursday 26th of October 2023 09:52:27 AM CDT,"--[[ Turtle Quarry Program ]]--

--[[ Smart name compare:
Compare the name of 2 items including name variations
for ores, cobbled versions, etc...
]]--
function smartNameCompare(name, cur_name)
	bits_to_delete = {""cobbled_"", ""cobble"", ""raw_"", ""_ore""}
    -- delete all the extra bits from them name
    for i, del_name in ipairs(bits_to_delete) do
    	name = string.gsub(name, del_name, """")
        cur_name = string.gsub(cur_name, del_name, """")
    end
    if name == cur_name then
        return true	
    else
        return false
    end
end

function smart_mine()
    -- get the data of the block being looked at
    success, data = turtle.inspect()
    if success then
		-- loop through the inventory and check if the current item exists in there
        for i = 1,16,1 do
        	-- dig if the current inventory slot is empty
        	if not turtle.getItemDetail(i) == nil then
            	turtle.dig()
            else
            	-- check for the name of the item in the current slot
                cur_name = turtle.getItemDetail(i)[""name""]
            	-- dig if we have room for the item
                if ((turtle.getItemCount(i) < 64) and smartNameCompare(data.name, cur_name) then
                    turtle.dig()
                    break
                end
            end
        end
    end
end"
auZbF4Gc,Project 220,KKK_Smart,Python,Thursday 26th of October 2023 09:19:30 AM CDT,"import glob
import os
import sys
import time
import random
import math
import carla

try:
    sys.path.append(glob.glob('../carla/dist/carla-*%d.%d-%s.egg' % (
        sys.version_info.major,
        sys.version_info.minor,
        'win-amd64' if os.name == 'nt' else 'linux-x86_64'))[0])
except IndexError:
    pass

import carla

actor_list = []


def generate_lidar_blueprint(blueprint_library):
    lidar_blueprint = blueprint_library.find('sensor.lidar.ray_cast_semantic')
    lidar_blueprint.set_attribute('channels', str(64))
    lidar_blueprint.set_attribute('points_per_second', str(56000))
    lidar_blueprint.set_attribute('rotation_frequency', str(40))
    lidar_blueprint.set_attribute('range', str(100))
    return lidar_blueprint


object_id = {""None"": 0,
             ""Buildings"": 1,
             ""Fences"": 2,
             ""Other"": 3,
             ""Pedestrians"": 4,
             ""Poles"": 5,
             ""RoadLines"": 6,
             ""Roads"": 7,
             ""Sidewalks"": 8,
             ""Vegetation"": 9,
             ""Vehicles"": 10,
             ""Wall"": 11,
             ""TrafficsSigns"": 12,
             ""Sky"": 13,
             ""Ground"": 14,
             ""Bridge"": 15,
             ""RailTrack"": 16,
             ""GuardRail"": 17,
             ""TrafficLight"": 18,
             ""Static"": 19,
             ""Dynamic"": 20,
             ""Water"": 21,
             ""Terrain"": 22
             }
key_list = list(object_id.keys())
val_list = list(object_id.values())


def semantic_lidar_data1(point_cloud_data):
    distance_name_data = {}
    for detection in point_cloud_data:
        position = val_list.index(detection.object_tag)
        distance = math.sqrt((detection.point.x ** 2) + (detection.point.y ** 2) + (detection.point.z ** 2))
        distance_name_data[""distance""] = distance
        distance_name_data[""name""] = key_list[position]
        if distance_name_data[""name""] == 'Pedestrians' and distance_name_data[""distance""] > 1 and distance_name_data[""distance""] < 8:
            dropped_vehicle.apply_control(carla.VehicleControl(hand_brake=True))
            dropped_vehicle.set_light_state(carla.VehicleLightState(carla.VehicleLightState.Brake |
                                                                    carla.VehicleLightState.LeftBlinker | carla.VehicleLightState.LowBeam))

            dropped_vehicle.apply_control(carla.VehicleControl(throttle=0.3, steer=0.2))
            time.sleep(1)
            dropped_vehicle.apply_control(carla.VehicleControl(throttle=0.3, steer=-0.2))
            time.sleep(1)
            car_control()
        else:
            continue



def car_control():
    dropped_vehicle.apply_control(carla.VehicleControl(throttle=0.51))

    time.sleep(20)

police_car_blueprint = get_blueprint_of_world.filter('dodge_charger.police')[0]
police_car_spawn_point = map.get_spawn_points()[15]

try:
    client = carla.Client('127.0.0.1', 2000)
    client.set_timeout(10.0)
    world = client.get_world()
    map = world.get_map()
    get_blueprint_of_world = world.get_blueprint_library()
    car_model = get_blueprint_of_world.filter('model3')[0]
    spawn_point = (world.get_map().get_spawn_points()[20])
    dropped_vehicle = world.spawn_actor(car_model, spawn_point)

    police_car_blueprint = get_blueprint_of_world.filter('dodge_charger.police')[0] 
    police_car_spawn_point = map.get_spawn_points()[15]
    actor_list.append(police_car)
    police_car.apply_control(carla.VehicleControl(throttle=0.5)
if distance_name_data[""name""] == ""Vehicles"" and 3 < distance_name_data['distance'] < 8:
    police_car.apply_control(carla.VehicleControl(throttle=0.5, steer=0.2)) 


    simulator_camera_location_rotation = carla.Transform(police_car_spawn_point.location, police_car_spawn_point.rotation)
    simulator_camera_location_rotation.location += spawn_point.get_forward_vector() * 30
    simulator_camera_location_rotation.rotation.yaw += 180
    simulator_camera_view = world.get_spectator()
    simulator_camera_view.set_transform(simulator_camera_location_rotation)
    actor_list.append(dropped_vehicle)
    actor_list.append(police_car)


    lidar_sensor = generate_lidar_blueprint(get_blueprint_of_world)
    sensor_lidar_spawn_point = carla.Transform(carla.Location(x=0, y=0, z=2.0),
                                               carla.Rotation(pitch=0.000000, yaw=90.0, roll=0.000000))
    sensor = world.spawn_actor(lidar_sensor, sensor_lidar_spawn_point, attach_to=dropped_vehicle)

    sensor.listen(lambda data2: semantic_lidar_data1(data2))
    car_control()
    actor_list.append(sensor)

    time.sleep(1000)

except Exception as e:
    print(f""An error occurred: {str(e)}"")

finally:
    print('destroying actors')
    for actor in actor_list:
        actor.destroy()
    print('done.')"
nF0nw0a3,ExU Screen Ctrl,osmarks,Lua,Thursday 26th of October 2023 08:11:47 AM CDT,"local ax, bx = -45, -43
local ay, by = 66, 67
local az, bz = -96, -96

local function seturl(url)
	 for x = ax, bx do
		for y = ay, by do
			for z = az, bz do
				commands.blockdata(x, y, z, textutils.serialiseJSON({ image_id = url }, true))
			end
		end
	end
end

local function memesearch(query)
	local res = http.post(""https://mse.osmarks.net/backend"", textutils.serialiseJSON({text={{query, 1}}}))
	return textutils.unserialiseJSON(res.readAll())
end

while true do
	local _, _, user, message = os.pullEvent ""chat_message""
	local file
	for _, result in ipairs(memesearch(message)) do
		local f = result.file:lower()
		if f:match "".jpe?g$"" or f:match "".png$"" then
			file = result.file
			break
		end
	end
	seturl(""https://i2.osmarks.net/memes-or-something/"" .. file)
end"
