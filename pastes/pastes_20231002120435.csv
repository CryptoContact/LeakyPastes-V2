id,title,username,language,date,content
GgwHeMzu,TemplerFX | Grab Your $30 No Deposit Bonus Today,reviewbrokers,PHP,Monday 2nd of October 2023 06:46:53 AM CDT,https://www.reviewbrokers.net/templerfx-grab-your-30-no-deposit-bonus-today/
qD16NCCZ,Untitled,paulandzen,HTML,Monday 2nd of October 2023 06:35:35 AM CDT,"#AZB-ASSEMBLY-UNIFIED
#AZU-Default-Border

<div style=""padding: 40px 0; background-color: #f2f2f2; border-radius: 20px;"">
<p style=""text-align: center;""><img style=""height: 75px; padding: 0 0 20px;"" src=""https://d3k81ch9hvuctc.cloudfront.net/company/QDwusz/images/312e6018-13a4-4579-a49c-fdc01c1c9796.png"" alt=""Easy Breezy Assembly"" /><br /><img style=""width: 100%;"" src=""https://d3k81ch9hvuctc.cloudfront.net/company/M8RBBQ/images/6e144abb-b889-44a3-977e-8d67085e6fd5.gif"" alt=""Easy Breezy Assembly"" /></p>
<p style=""margin: 0 20px; text-align: left !important; font-family: Roboto, Helvetica, Arial, sans-serif; font-weight: 400; line-height: 27px;"">Our bikes are easy to assemble yourself at home &mdash; if they weren&rsquo;t we&rsquo;d be out of business pretty quickly! Follow our step-by-step guides for more info. We&rsquo;ve also got a Workshop Series which covers safety checks, adjustments and more.<br /><br /><br /><a href=""https://support.bikesonline.com/support/solutions/48000454430"" style=""background-color: #0086d5; color: #fff; font-family: 'Roboto', Helvetica, Arial, sans-serif; font-size: 16px; font-style: Normal; font-weight: 900; line-height: 100%; letter-spacing: 0; text-decoration: none; text-transform: none; padding: 17px 30px;"">VIEW THE GUIDE</a><br /><br /></p>
</div>

"
9LQzhpgY,Unlock Your Trading Potential with ForexChief $100 No Deposit Bonus,fxvnpro,PHP,Monday 2nd of October 2023 06:15:48 AM CDT,https://www.fxvnpro.com/unlock-your-trading-potential-with-forexchief-100-no-deposit-bonus/
jfNcst4U,complex java,STANAANDREY,Java,Monday 2nd of October 2023 06:13:24 AM CDT,"class Complex {
    private static long cnt = 0;
    private double re, img;
    public Complex(double re, double img) {
        this.re = re;
        this.img = img;
    }
    public double abs() {
        return Math.sqrt(re * re + img * img);
    }
    public void print() {
        System.out.println(re + "" + "" + img + ""i"");
        Complex.cnt++;
    }
    public Complex add(final Complex other) {
        return new Complex(re + other.re, img + other.img);
    } 
    public static long getCnt() {
        return Complex.cnt;
    }
}

class ClientComplex {
    public static void main(String argv[]) {
        Complex a = new Complex(3, -2);
        Complex b = new Complex(3, 4);
        a.print();
        a.add(b).print();
        System.out.println(b.abs());
        System.out.println(Complex.getCnt());
    }
}"
iK7nCb4T,QuickSort_AGAIN_OK,Korotkodul,C++,Monday 2nd of October 2023 06:13:07 AM CDT,"#include <cmath>
#include <iostream>
#include <vector>

using std::cin;
using std::cout;
using std::max;
using std::min;
using std::string;
using std::vector;

void Swap(int* p1, int* p2) {
  int tt = *p1;
  *p1 = *p2;
  *p2 = tt;
}

vector<int> ar;

void Partition(int low, int high, int xnum) {
  // делим на < и >=
  int lft = low - 1;
  for (int id = low; id <= high; ++id) {
    if (ar[id] < xnum) {
      int* p1 = &ar[id];
      int* p2 = &ar[lft + 1];
      Swap(p1, p2);
      lft++;
    }
  }
  // делим на = и >
  for (int id = lft + 1; id <= high; ++id) {
    if (ar[id] == xnum) {
      int* p1 = &ar[id];
      int* p2 = &ar[lft + 1];
      Swap(p1, p2);
      lft++;
    }
  }
}

void QuickSort(int low, int high) {
  if (low >= high) {
    return;
  }
  int piv = ar[low];
  Partition(low, high, piv);
  int lft = low;
  while (ar[lft] != piv) {
    lft++;
  }
  int rgt = high;
  while (ar[rgt] != piv) {
    rgt--;
  }
  // lft - самый левый piv
  // rgt - самый правый piv
  QuickSort(low, lft - 1);
  QuickSort(rgt + 1, high);
}

int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(0);
  std::cout.tie(0);
  int len;
  cin >> len;
  ar.resize(len);
  for (int& el : ar) {
    cin >> el;
  }
  // Partition(0, len - 1, 5);
  QuickSort(0, len - 1);
  for (int el : ar) {
    cout << el << ' ';
  }
}
/*
17
2 2 0 2 1 2 0 2 1 0 2 1 2 2 0 0 2

16
7 10 3 4 5 11 2 1 2 3 1 5 4 6 7 1
*/
"
PZdrrvtZ,data713,TestGuy1,JSON,Monday 2nd of October 2023 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '16988d54d331364fdd572becbaeb4233672286ccbc1f3e13156fce8cbcce4723ce51986f9d6aab0df5be134fe4d40a853076636da21f1cbd97792a9acae54a9029ae88dd4e07cfe4810e569370f96702e8e4a468088874a44e28b5a70566229d9a5eb00d13e356bf31556dbae33f9a962040e4c3c4624dbbf9bdf140643b7052',
  otherdata: [
    'e0148c5a4c6a4742f5a6e805fed29975',
    '259f8330de1ffc253a920adc70400300',
    '6fa1c555b75bd01818efecf4d0a6b718',
    '92b30aa9ef61da97227b2efa0fa29a2c',
    '7702ed7a05d5475f90ed0083e1a47188',
    'a7a9e658109b5e5da6b0df05d070e905',
    'bbb780b932adaa9c0d21b7f835117643',
    'a7a879c92e7063c01516ca922c9e5c90'
  ]
}"
KD6JG85w,Untitled,branislavgrbic,PostgreSQL,Monday 2nd of October 2023 05:52:36 AM CDT,"-- Upit prikazuje HQ usere sa svim njegovim permisijama
select user_id, user_name, u.company_id, c.company_name , u.market_id, m.market_name , user_active, user_admin,
cast((substring(user_roles from 'admin%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""CoreAdminUser"",
cast((substring(user_roles from 'barry%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""BarryUser"",
cast((substring(user_roles from 'usePimp%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""PimpUser"",
cast((substring(user_roles from 'useReporting%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""ReportingUser"",
cast((substring(user_roles from 'useCherry%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""CherryUser"",
cast((substring(user_roles from 'useSherlock%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""SherlockUser"",
cast((substring(user_roles from 'useBetty%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""BettyUser"",
cast((substring(user_roles from 'useTranslation%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""TranslationUser"",
cast((substring(user_roles from 'useInformer%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""InformerUser"",
cast((substring(user_roles from 'useWebformer%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""WebformerUser"",
cast((substring(user_roles from 'scripting%253Djava.lang.Boolean%253A(.*?)%253B')) as boolean) as ""ScriptingRole"",
coalesce(cast(replace((substring(user_roles from 'livebet.LiveBetUserRole')),'livebet.LiveBetUserRole', 'true') as text),'false') as ""LiveBetRole"",
coalesce(cast(replace((substring(user_roles from 'dograces.lib.DogRacesUserRole')),'dograces.lib.DogRacesUserRole', 'true') as text),'false') as ""DogRacesRole"",
coalesce(cast(replace((substring(user_roles from 'libcasper.lib.CasperUserRole')),'libcasper.lib.CasperUserRole', 'true') as text),'false') as ""CasperUserRole"",
coalesce(cast((substring(user_notes from 'EnableReportRestriction=java.lang.String:(.*?);')) as text), 'false') as ""ReportRestriction"",
coalesce(cast((substring(user_notes from 'EnableReportRestrictionHQ=java.lang.String:(.*?);')) as text), 'false') as ""ReportRestrictionHQ"",
cast(replace((substring(user_notes from 'ReportRestrictionList=java.lang.String:(.*?);')), '%252C', ',') as text) as ""WebformerReports"",
cast(replace((substring(user_notes from 'ReportRestrictionListHQ=java.lang.String:(.*?);')), '%252C', ',') as text) as ""HQApps"",
cast((substring(u.user_notes from 'EnableCreateBetShopUser=java.lang.Boolean:(.*?);')) as boolean) as ""EnableCreateBetShopUser"",
cast((substring(u.user_notes from 'EnableCreateHqUser=java.lang.Boolean:(.*?);')) as boolean) as ""EnableCreateHqUser""
from users u --where company_id = 37 and market_id = 0
left join company c on u.company_id = c.company_id 
left join market m on m.market_id = u.market_id 
left join betshop b on b.betshop_id = u.betshop_id 
--where u.betshop_id = 0
--and c.company_id not in (18)
where u.user_id in (25266,25492,6638,40291,40290,43511,43510,44227,44226,36169,36158,42899,38515,38514,20225,40895,20700,35627,44621,44680,44534,42579,44533,39295,35611,35478,35476,38962,29907,39574,34419,34234,42321,38064,35630,42451,44108,43980,35841,41536,39573,40949,38525,40096,42018,35371,28249,11159,45202,45454,44745,6059,2225,18352,3586,17845,23453)
and u.user_name not like '%tarantula%'
--and (u.user_active = true and u.user_deleted = false)
--and (c.company_active = true and c.company_deleted = false and c.company_id != 18 or (c.company_active is null and c.company_deleted is null) ) 
--and (m.market_active = true and m.market_deleted = false or (m.market_active is null and m.market_deleted is null))
order by company_id asc, user_id asc"
1EL0Mu15,Hello SoftUni,MladenKarachanov,Java,Monday 2nd of October 2023 05:04:24 AM CDT,"package firstStepsInCoding;

public class HelloSoftUni {
    public static void main(String[] args) {
        
        System.out.println(""Hello SoftUni"");
    }
}
"
y7CaC0xF,Untitled,Korzunov,HTML,Monday 2nd of October 2023 04:24:34 AM CDT,"Белиз
Бельгия
Венгрия
Германия
Гонконг
Индия
Испания
Италия
Каймановые острова
Кипр
Китай
Латвия
Литва
Люксембург
Маврикий
Македония
Монако
ОАЭ
Польша
Португалия
Сингапур
Словакия
Словения
Хорватия
Черногория
Чехия
Швейцария
Швеция
Эстония
Южная Корея"
4Gf6wd1M,Untitled,artemsemkin,CSS,Monday 2nd of October 2023 04:15:56 AM CDT,".slider-halfscreen-projects__content .swiper-slide:not(.swiper-slide-active) {
  pointer-events: none !important;
}

.slider-halfscreen-projects__content .swiper-slide:not(.swiper-slide-active) * {
  pointer-events: none !important;
}"
T5DgSWZs,lab5,amitdutta121,C,Monday 2nd of October 2023 04:14:35 AM CDT,"/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press ""Run"" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>

int main()
{
    int num = 4;
    
    for(int i=0; i<num; i++){
        for(int m=i; m<num; m++){
            printf("" "");
        }
        for(int j =0; j<=2*i; j++){
            printf(""*"");
        }
        printf(""\n"");
    }
    for(int i=num; i>=0; i--){
        for(int m = 0; m<num-i; m++){
            printf("" "");        
        }
        for(int j =0; j<=2*i; j++){
            printf(""*"");
        }
        printf(""\n"");
    }

    return 0;
}
"
J4YBjwTN,Untitled,I_Mimic_I,Python,Monday 2nd of October 2023 03:44:39 AM CDT,"import argparse
import time
import json

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.common.exceptions import NoSuchElementException, NoSuchWindowException


parser = argparse.ArgumentParser()
parser.add_argument('-l', '--login', action='store_true', help='Launches to log in to save cookies. After logging in, '
                                                               'you need to close the browser and restart the '
                                                               'application.')

args = parser.parse_args()


SITE_URL = 'https://csgo5.run/'
USER_AGENT = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36'


def login():
    try:
        options = Options()
        options.add_argument('--start-maximized')
        options.add_argument(f'user-agent={USER_AGENT}')
        driver = webdriver.Chrome(options=options)
        driver.get(SITE_URL)

        input(""Please log in manually and press Enter when done. Your data will be saved and the application will exit."")

        cookies = driver.get_cookies()
        driver.quit()

        with open('cookies.json', 'w', newline='') as outputdata:
            json.dump(cookies, outputdata)

    except NoSuchWindowException:
        pass


def start() -> webdriver.Chrome:
    options = Options()
    options.add_argument('--start-maximized')
    options.add_argument(f'user-agent={USER_AGENT}')
    driver = webdriver.Chrome(options=options)
    driver.get(SITE_URL)

    try:
        with open('cookies.json', 'r', newline='') as inputdata:
            cookies = json.load(inputdata)
        for cookie in cookies:
            driver.add_cookie(cookie)
        time.sleep(1)
        driver.refresh()
    except FileNotFoundError:
        pass

    return driver


if __name__ == '__main__':
    if args.login:
        login()
    else:
        driver = start()

        try:
            while True:
                element = driver.find_element(By.CLASS_NAME, 'graph-svg__timer')
                css = element.value_of_css_property('opacity')
                print(css)
                time.sleep(1)
        except (NoSuchWindowException, NoSuchElementException, KeyboardInterrupt):
            driver.quit()

"
YdbaUw5K,toutv,YuukiHaruka,JSON,Monday 2nd of October 2023 03:33:05 AM CDT,"{
  ""url"": ""https://rcavtoutv.akamaized.net/c29a383d-ad65-4e34-b5fa-1040d7627918/2018-09-26_19_00_00_district31_0251.ism/manifest(filter=2000)"",
  ""message"": null,
  ""errorCode"": 0,
  ""params"": [
    {
      ""name"": ""mediaType"",
      ""value"": ""video""
    },
    {
      ""name"": ""dfpDesktopStreamUrl"",
      ""value"": ""https://dai.google.com:443/ondemand/hls/content/2490340/vid/141267/master.m3u8?dai-sr=2000000""
    },
    {
      ""name"": ""streamType"",
      ""value"": ""azureDpkgMulti""
    },
    {
      ""name"": ""playreadyLicenseUrl"",
      ""value"": ""https://rcavtoutv-key.akamaized.net/PlayReady/""
    },
    {
      ""name"": ""playreadyAuthToken"",
      ""value"": ""Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1cm46bWljcm9zb2Z0OmF6dXJlOm1lZGlhc2VydmljZXM6Y29udGVudGtleWlkZW50aWZpZXIiOiIxNTExYzk1Yy1iNDQ1LTQ0OWYtODA5Yy03ZDA1MmE3YTUxNWEiLCJpc3MiOiJodHRwczovL3NlcnZpY2VzLnJhZGlvLWNhbmFkYS5jYS8iLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0LyIsImV4cCI6MTU1MjA1ODE3NiwibmJmIjoxNTUyMDU3ODYxfQ.4rvU6moM2mHpZfQ-ONYnuNA7_EmUsdUqq45liVJEKwo""
    },
    {
      ""name"": ""playreadyContentKeyId"",
      ""value"": ""XMkRFUW0n0SAnH0FKnpRWg==""
    },
    {
      ""name"": ""widevineLicenseUrl"",
      ""value"": ""https://rcavtoutv-key.akamaized.net/Widevine/?KID=1511c95c-b445-449f-809c-7d052a7a515a""
    },
    {
      ""name"": ""widevineAuthToken"",
      ""value"": ""Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1cm46bWljcm9zb2Z0OmF6dXJlOm1lZGlhc2VydmljZXM6Y29udGVudGtleWlkZW50aWZpZXIiOiIxNTExYzk1Yy1iNDQ1LTQ0OWYtODA5Yy03ZDA1MmE3YTUxNWEiLCJpc3MiOiJodHRwczovL3NlcnZpY2VzLnJhZGlvLWNhbmFkYS5jYS8iLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0LyIsImV4cCI6MTU1MjA1ODE3NiwibmJmIjoxNTUyMDU3ODYxfQ.4rvU6moM2mHpZfQ-ONYnuNA7_EmUsdUqq45liVJEKwo""
    },
    {
      ""name"": ""fairplayLicenseUrl"",
      ""value"": ""skd://rcavtoutv-key.akamaized.net/FairPlay/?KID=5904e7fd-fde8-4f68-a7f9-6db0c7374101""
    },
    {
      ""name"": ""fairplayCertificatePath"",
      ""value"": ""https://rcavstaticplayer.akamaized.net/fairplay/cert.cer""
    },
    {
      ""name"": ""fairplayAuthToken"",
      ""value"": ""Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1cm46bWljcm9zb2Z0OmF6dXJlOm1lZGlhc2VydmljZXM6Y29udGVudGtleWlkZW50aWZpZXIiOiI1OTA0ZTdmZC1mZGU4LTRmNjgtYTdmOS02ZGIwYzczNzQxMDEiLCJpc3MiOiJodHRwczovL3NlcnZpY2VzLnJhZGlvLWNhbmFkYS5jYS8iLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0LyIsImV4cCI6MTU1MjA1ODE3NiwibmJmIjoxNTUyMDU3ODYxfQ.Dfyt5xkQ8Vj168SMC1WJHul-Zk-Cm2xwHG5zV7LyeIg""
    },
    {
      ""name"": ""contentType"",
      ""value"": ""multiple""
    },
    {
      ""name"": ""dai-sr"",
      ""value"": 2000000
    }
  ],
  ""bitrates"": [
    {
      ""bitrate"": 2000,
      ""width"": 852,
      ""height"": 480,
      ""lines"": ""540p"",
      ""param"": null
    },
    {
      ""bitrate"": 1200,
      ""width"": 852,
      ""height"": 480,
      ""lines"": ""480p"",
      ""param"": null
    },
    {
      ""bitrate"": 800,
      ""width"": 640,
      ""height"": 360,
      ""lines"": ""360p"",
      ""param"": null
    },
    {
      ""bitrate"": 500,
      ""width"": 640,
      ""height"": 360,
      ""lines"": ""270p"",
      ""param"": null
    },
    {
      ""bitrate"": 400,
      ""width"": 400,
      ""height"": 224,
      ""lines"": ""240p"",
      ""param"": null
    },
    {
      ""bitrate"": 256,
      ""width"": 400,
      ""height"": 224,
      ""lines"": ""224p"",
      ""param"": null
    }
  ]
}"
RVb576ZU,Grade calculator - monolithic,earlution,Python,Monday 2nd of October 2023 03:28:12 AM CDT,"# Monolithic program
def main():
    print(""Welcome to the Student Grade Calculator!"")
 
    while True:
        student_name = input(""Enter student name (or type 'exit' to quit): "")
 
        if student_name.lower() == 'exit':
            print(""Goodbye!"")
            break
 
        student_score = input(""Enter student score: "")
        student_score = int(student_score)
 
        if 90 <= student_score <= 100:
            student_grade = ""A""
        elif 80 <= student_score < 90:
            student_grade = ""B""
        elif 70 <= student_score < 80:
            student_grade = ""C""
        elif 60 <= student_score < 70:
            student_grade = ""D""
        else:
            student_grade = ""F""
 
        print(f""Student {student_name} scored {student_score} and received a grade of {student_grade}."")
 
if __name__ == ""__main__"":
    main()"
hcGTbu8D,Untitled,Horikita,C++,Monday 2nd of October 2023 03:11:33 AM CDT,"#include<iostream>
using namespace std;
int m,n,p;
int** people=nullptr;
int** score=nullptr;
int* sizes=nullptr;
pair<int,int>* movie=nullptr; //1-based
int find_movie(int recommended,int recommender){
	int maxx=0,max_id;
	for(int i=0;i<sizes[recommender];i++){
		bool watched=0;
		for(int j=0;j<sizes[recommended];j++){
			if(people[recommender][i]==people[recommended][j])watched=1;
		}
		if(!watched){
			//cout<<people[recommender][i]<<'\n';
			if(score[recommender][i]>maxx){
				max_id=people[recommender][i];
				maxx=score[recommender][i];
			}
		}
	}
	if(maxx)return max_id;
	
	int *max_score_id=nullptr;
	max_score_id=new int[n];
	int id=0;
	for(int i=0;i<n;i++){
		if(movie[i].second>maxx){
			id=0;
			max_score_id[id++]=i;
			maxx=movie[i].second;
		}else if(movie[i].second==maxx){
			max_score_id[id++]=i;
		}
	}
	if(id==1){
		return max_score_id[0];
	}else{
		maxx=0;
		int *max_rates_id=nullptr;
		max_rates_id=new int[id];
		int id2=0;
		for(int i=0;i<id;i++){
			if(movie[i].first>maxx){
				id2=0;
				max_rates_id[id2++]=i;
				maxx=movie[i].first;
			}else if(movie[i].first==maxx){
				max_rates_id[id2++]=i;
			}
		}
		return max_rates_id[0];
	}
}

int main(){
	cin>>m>>n>>p;
	p--;
	people=new int*[m];
	score=new int*[m];
	sizes=new int[m];
	movie=new pair<int,int>[n];
	for(int i=0;i<n;i++){
		movie[i]=make_pair(0,0);  //total rates/total score
	}
	for(int i=0;i<m;i++){
		cin>>sizes[i];
		people[i]=new int[sizes[i]];
		score[i]=new int[sizes[i]];
		for(int j=0;j<sizes[i];j++){
			cin>>people[i][j]>>score[i][j];
			movie[people[i][j]-1].first++;
			movie[people[i][j]-1].second+=score[i][j];
		}
	}
	int** diff1=nullptr;
	int** diff2=nullptr;
	diff1=new int*[m];
	diff2=new int*[m];
	for(int i=0;i<m;i++){
		diff1[i]=new int[m];
 		diff2[i]=new int[m];
		for(int j=0;j<m;j++){
			diff1[i][j]=0;
			diff2[i][j]=0;
			int k=0,l=0;
			for(;k<sizes[i];k++){
				for(;l<sizes[j]&&people[j][l]<people[i][k];l++){
					diff1[i][j]+=score[j][l];
					diff2[i][j]++;
					//cout<<k<<' '<<l<<'\n';
				}
				int l2=((l>=sizes[j])?(sizes[j]-1):l);
				if(people[j][l2]==people[i][k]){
					diff1[i][j]+=abs(score[j][l2]-score[i][k]);
					//cout<<k<<' '<<l<<'\n';
					l++;
				}else{
					diff1[i][j]+=score[i][k];
					diff2[i][j]++;
					//cout<<k<<' '<<l<<'\n';
				}
				if(k==sizes[i]-1){
					for(;l<sizes[j];l++){
						diff1[i][j]+=score[j][l];
						diff2[i][j]++;
						//cout<<k<<' '<<l<<'\n';	
					}
				}
			}
			//cout<<diff1[i][j]<<' ';	
		}
		//cout<<'\n';
	}
	int *mindiff1_id=nullptr;
	int mindiff1=2147483647,id=0;
	mindiff1_id=new int[m];
	for(int i=0;i<m;i++){
		if(i!=p){
			if(mindiff1>diff1[i][p]){
				id=0;
				mindiff1=diff1[i][p];
				mindiff1_id[id++]=i;
			}else if(mindiff1==diff1[i][p]){
				mindiff1_id[id++]=i;
			}
		}
	}
	if(id==1){
		int movie_id,movie_rates,movie_score;
		movie_id=find_movie(p,mindiff1_id[0]);
		cout<<mindiff1_id[0]<<'\n';
		movie_rates=movie[movie_id-1].first;
		movie_score=movie[movie_id-1].second;
		cout<<movie_id<<' '<<movie_rates<<' '<<movie_score<<'\n';
	}else{
		int *mindiff2_id=nullptr;
		int mindiff2=2147483647,id2=0;
		mindiff1_id=new int[id];
		for(int i=0;i<id;i++){
			if(i!=p){
				if(mindiff2>diff2[i][p]){
					id=0;
					mindiff2=diff2[i][p];
					mindiff2_id[id2++]=i;
				}else if(mindiff2==diff2[i][p]){
					mindiff2_id[id2++]=i;
				}
			}
		}
		int movie_id,movie_rates,movie_score;
		movie_id=find_movie(p,mindiff2_id[0]);
		movie_rates=movie[movie_id-1].first;
		movie_score=movie[movie_id-1].second;
		cout<<movie_id<<' '<<movie_rates<<' '<<movie_score<<'\n';
	}
	
	
	
	for(int i=0;i<m;i++){
		delete [] people[i];
		delete [] score[i];  
		delete [] diff1[i];
		delete [] diff2[i];
	}
	delete [] people;
	delete [] score;
	delete [] movie;
	delete [] diff1;
	delete [] diff2;
}"
YD1pyygs,MP09_UF1_EJ9,Mike7GB,Java,Monday 2nd of October 2023 03:11:30 AM CDT,"// EJERCICIO 9

******************
------ MAIN ------
******************

import java.util.Scanner;
import static com.mycompany.clave.Funciones.*;

public class Clave {

    public static void main(String[] args) {

        // Variables
        Scanner sc = new Scanner(System.in); // Declaración e instanciación de objeto Scanner para recibir input del usuario mediante el teclado
        String mensaje; // Variable en donde se almacenará el texto que introduzca el usuario para encriptar
        String msjCifrado;
        String msjDescifrado;
        boolean finalizar = false;
        int opcion = 0;

        System.out.println(""Bienvenido al pograma de cifrado de mensajes"");

        do {

            System.out.println(""******************"");
            System.out.println(""------ MENU ------"");
            System.out.println(""******************"");
            System.out.println(""1.- Cifrar mensaje"");
            System.out.println(""2.- Salir"");
            System.out.println(""******************"");
            System.out.println("""");
            System.out.println(""Elija una de las dos opciones disponibles"");
            opcion = sc.nextInt();
            sc.nextLine(); // Captura el Intro pulsado después de escribir la opción elegida

            switch (opcion) {
                case 1 -> {
                    System.out.println(""Introduzca un mensaje para encriptar:"");
                    mensaje = sc.nextLine();

                    System.out.println(""\nMensaje sin cifrar: "");
                    System.out.println(mensaje);

                    msjCifrado = cifrar(mensaje);
                    System.out.println(""\nMensaje cifrado: "");
                    System.out.println(msjCifrado);

                    msjDescifrado = descifrar(msjCifrado);
                    System.out.println(""\nMensaje descifrado: "");
                    System.out.println(msjDescifrado);
                }
                
                case 2 -> finalizar = true;
                
                default -> {
                }
            }

        } while (!finalizar);
        
        System.out.println(""El programa ha finalizado"");
        
    }
}

*********************
----- FUNCIONES -----
*********************

public class Funciones {

    private static String msjCifrado;
    private static String msjDescifrado;

    // CIFRAR
    public static String cifrar(String mensaje) {

        // Proceso de cifrado
        char charArray[] = mensaje.toCharArray(); // Convertir la variable mensaje en un vector de char

        // Para todos los caracteres pares...
        for (int i = 0; i < charArray.length; i++) {

            // ... sumarle 64 a su valor ASCII
            charArray[i] = (char) (Character.hashCode(charArray[i]) + 64);

            i += 1; // i empieza el bucle valiendo 0. Con esta expresión, además de la i++ del bucle, aumenta su valor de 2 en 2 siempre coincidiendo con caracteres pares.

        }

        // Para todos los caracteres impares...
        for (int i = 1; i < charArray.length; i++) {

            // ... sumarle 127 a su valor ASCII
            charArray[i] = (char) (Character.hashCode(charArray[i]) + 127);

            i += 1; // i empieza el bucle valiendo 1. Con esta expresión, además de la i++ del bucle, aumenta su valor de 2 en 2 siempre coincidiendo con caracteres impares.
        }       
      
        msjCifrado = new String(charArray);

        return msjCifrado;
    }

    // DESCIFRAR
    public static String descifrar(String msjCifrado) {

        // Proceso de descifrado
        char charArray[] = msjCifrado.toCharArray(); // Convertir la variable msjCifrado en un vector de char

        // Para todos los caracteres pares...
        for (int i = 0; i < charArray.length; i++) {

            // ... restarle 64
            charArray[i] = (char) (Character.hashCode(charArray[i]) - 64);

            i += 1; // i empieza el bucle valiendo 0. Con esta expresión, además de la i++ del bucle, aumenta su valor de 2 en 2 siempre coincidiendo con caracteres pares.

        }

        // Para todos los caracteres impares...
        for (int i = 1; i < charArray.length; i++) {

            // ... restarle 127
            charArray[i] = (char) (Character.hashCode(charArray[i]) - 127);
            
            i += 1; // i empieza el bucle valiendo 1. Con esta expresión, además de la i++ del bucle, aumenta su valor de 2 en 2 siempre coincidiendo con caracteres impares.
        }

        msjDescifrado = new String(charArray);

        return msjDescifrado;
    }

}"
dhVgLFXK,Grade calculator - decomposed,earlution,Python,Monday 2nd of October 2023 03:06:46 AM CDT,"# Separate function to calculate the grade
def calculate_grade(student_score):
    if student_score >= 60:
        if student_score < 70:
            return ""D""
        elif student_score < 80:
            return ""C""
        elif student_score < 90:
            return ""B""
        else:
            return ""A""
    else:
        return ""F""

 
# Separate function to get student information
def get_student_info():
    student_name = input(""Enter student name (or type 'exit' to quit): "")
 
    if student_name.lower() == 'exit':
        return None, None
 
    student_score = int(input(""Enter student score: ""))
    return student_name, student_score


# Separate function to display the grade
def display_grade(student_name, student_score, student_grade):
    print(f""Student {student_name} scored {student_score} and received a grade of {student_grade}."")


# Main program
def main():
    print(""Welcome to the Student Grade Calculator!"")
 
    while True:
        student_name, student_score = get_student_info()
 
        if student_name is None:
            print(""Goodbye!"")
            break
 
        student_grade = calculate_grade(student_score)
        display_grade(student_name, student_score, student_grade)
 
if __name__ == ""__main__"":
    main()
"
LCcaw9vK,6-sirma,panayotsky-dev,JavaScript,Monday 2nd of October 2023 02:59:18 AM CDT,"function solve(array,commands){
  let shadow = [...array]

  commands.forEach((element) => {
      
      let [action, ...params] = element.split(' ')
      switch(action){
          case'destroy':
              {
                  const indexToRemove = Number(params[0])
                 if(indexToRemove>=0){
                  shadow.splice(indexToRemove,1)
                  
                 }
                 console.log(shadow)
                 break;
              }
          case 'swap':
              {
                  const index1 = Number(params[0])
                  const index2= Number(params[1])
                  if(index1 >= 0 && index1< shadow.length && index2 >= 0 && index2 < shadow.length){
                      [shadow[index1], shadow[index2]] = [shadow[index2], shadow[index1]]
                      console.log(shadow)
                  }
                  break;
              }
          case 'add':
              {
                  const newId = Number(params[0])
                  shadow.push(newId)
                  console.log(shadow)
                  break;
              }
          case 'insert':{
              const newId = Number(params[0])
              const insertIndex = Number(params[1])
              if (insertIndex >= 0 && insertIndex <= shadow.length) {
                  shadow.splice(insertIndex, 0, newId);
                  console.log(shadow)
              }
          }
          case 'center':
              {
                  const length = shadow.length
                  if(length % 2 === 0){
                      const middleOne = length /2 -1
                      const middleSecond = length / 2
                      console.log(`${shadow[middleOne]} ${shadow[middleSecond]}`)
                  }else{
                      const middle = Math.floor(length/2)
                      console.log(shadow[middle])
                  }
                  break;
              }
              
      }
  });
  
  }
  solve([1, 2, 3, 4, 5],
      [""destroy 3"",
      ""swap 0 1"",
      ""add 6"",
      ""center""]
      )
      solve(
          [1, 2, 3, 4, 5],
  [""add 6"",
  ""swap 0 5"",
  ""swap 1 4"",
  ""swap 2 3"",
  ""swap 2 100"",
  ""swap 2 2"",
  ""center""])
  
  //     )
  //     solve(
  //         [1, 2],
  // [""insert 3 2"",
  // ""center"",
  // ""destroy 1"",
  // ""destroy 2"",
  // ""center""]
  
  //     )"
Yxdi8xKN,Rotate Bits,jayati,C++,Monday 2nd of October 2023 02:53:10 AM CDT,"//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
  public:
        vector <int> rotate (int n, int d)
        {
           
             d%=16; 

    
        int left = ((n<<d) | (n>>(16-d))) & 65535;
    
      
        int right = (n>>d) | (n<<(16-d)) & 0xFFFF;

    
    return {left,right};
        }
};

//{ Driver Code Starts.
int main()
{
    int t; cin >> t;
    while (t--)
    {
        
        int n, d; cin >> n >> d;
        Solution ob;
        vector <int> res = ob.rotate (n, d);
        cout << res[0] << endl << res[1] << endl;
    }
}
// Contributed By: Pranay Bansal

// } Driver Code Ends"
6ihZrnRL,Untitled,gw_ico,JavaScript,Monday 2nd of October 2023 02:39:31 AM CDT,"function squadron(squad, commands) {
    while (commands.length) {
        let command = commands.shift().split("" "");
        switch (command[0]) {
            case ""destroy"":
                if (command[1] < 0 || command[1] >= squad.length) continue;
                squad.splice(command[1], 1)
                console.log(squad.join("" ""));
                break;
            case ""swap"":
                if (command[1] === command[2]) continue;
                if (command[1] < 0 || command[1] >= squad.length) continue;
                if (command[2] < 0 || command[2] >= squad.length) continue;
                let temp = squad[command[1]];
                squad[command[1]] = squad[command[2]];
                squad[command[2]] = temp;
                console.log(squad.join("" ""));
                break;
            case ""add"":
                squad.push(command[1]);
                console.log(squad.join("" ""));
                break;
            case ""insert"":
                if (command[2] < 0 || command[2] > squad.length) continue;
                squad.splice(command[2], 0, command[1]);
                console.log(squad.join("" ""));
                break;
            case ""center"":
                let middleIndex = Math.floor(squad.length / 2)
                if (squad.length % 2 === 0) {
                    console.log(squad[middleIndex-1] + "" "" + squad[middleIndex]);
                } else console.log(squad[middleIndex]);
                break;
            default:
                break;
        }
    }
}

squadron([1, 2, 3, 4, 5],
    [""destroy 3"",
        ""swap 0 1"",
        ""add 6"",
        ""center""
    ]
);

console.log(""------------------------------------"")

squadron([1, 2, 3, 4, 5],
    [""add 6"",
        ""swap 0 5"",
        ""swap 1 4"",
        ""swap 2 3"",
        ""swap 2 100"",
        ""swap 2 2"",
        ""center""]
);

console.log(""------------------------------------"")

squadron([1, 2],
    [""insert 3 2"",
        ""center"",
        ""destroy 1"",
        ""destroy 2"",
        ""center""]
);"
a0bL7EMH,Untitled,fatalryuu,TypeScript,Monday 2nd of October 2023 02:20:32 AM CDT,"import { CustomSxProps } from 'types';

const rem = parseFloat(getComputedStyle(document.documentElement).fontSize);

export const taskWrapperStyles = (isNew: boolean): CustomSxProps => ({
    fontFamily: (theme) => theme.typography.fontFamily,
    border: (theme) => `1px solid ${isNew ? theme.palette.primary.main : theme.palette.secondary.main}`,
    borderRadius: '5px',
    padding: '16px 24px',
    height: 140,
});

export const taskNameStyles: CustomSxProps = {
    fontStyle: 'italic',
    fontWeight: 600,
    color: (theme) => theme.palette.grey[600],
};

export const taskDateStyles: CustomSxProps = {
    fontStyle: 'italic',
    fontSize: 14,
    marginRight: '4px',
    paddingTop: '4px',
};

const GAP = 70;
const BUTTON_WIDTH = 9;

export const taskDescriptionStyles = (taskWidth: number): CustomSxProps => ({
    flexGrow: 1,
    maxWidth: taskWidth - BUTTON_WIDTH * rem - GAP,
    border: (theme) => `1px solid ${theme.palette.secondary.main}`,
    color: (theme) => `${theme.palette.grey[600]}`,
    borderRadius: '10px',
    padding: '12px',
    marginBottom: 2,
    wordBreak: 'break-word',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
});

export const buttonStyles: CustomSxProps = {
    display: 'flex',
    alignItems: 'center',
    border: (theme) => `1px solid ${theme.palette.success.main}`,
    borderRadius: '10px',
    textAlign: 'center',
    flexBasis: `${BUTTON_WIDTH}rem`,
    height: 43,
};

export const buttonTextStyles: CustomSxProps = {
    fontStyle: 'italic',
    fontSize: 14,
    color: (theme) => theme.palette.success.main,
};

export const seeMoreStyles: CustomSxProps = {
    fontStyle: 'italic',
    color: (theme) => theme.palette.grey[600],
    marginRight: `${BUTTON_WIDTH * rem + GAP / 2}px`,
    float: 'right',
    cursor: 'pointer',
};
"
1gAAPrmv,Untitled,fatalryuu,TypeScript,Monday 2nd of October 2023 02:20:16 AM CDT,"import { CustomSxProps } from 'types';

const rem = parseFloat(getComputedStyle(document.documentElement).fontSize);

export const taskWrapperStyles = (isNew: boolean): CustomSxProps => ({
    fontFamily: (theme) => theme.typography.fontFamily,
    border: (theme) => `1px solid ${isNew ? theme.palette.primary.main : theme.palette.secondary.main}`,
    borderRadius: '5px',
    padding: '16px 24px',
    height: 110,
});

export const taskNameStyles: CustomSxProps = {
    fontStyle: 'italic',
    fontWeight: 600,
    color: (theme) => theme.palette.grey[600],
};

export const taskDateStyles: CustomSxProps = {
    fontStyle: 'italic',
    fontSize: 14,
    marginRight: '4px',
    paddingTop: '4px',
};

const GAP = 70;
const BUTTON_WIDTH = 9;

export const taskDescriptionStyles = (taskWidth: number): CustomSxProps => ({
    flexGrow: 1,
    maxWidth: taskWidth - BUTTON_WIDTH * rem - GAP,
    border: (theme) => `1px solid ${theme.palette.secondary.main}`,
    color: (theme) => `${theme.palette.grey[600]}`,
    borderRadius: '10px',
    padding: '12px',
    wordBreak: 'break-word',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
});

export const buttonStyles: CustomSxProps = {
    display: 'flex',
    alignItems: 'center',
    border: (theme) => `1px solid ${theme.palette.success.main}`,
    borderRadius: '10px',
    textAlign: 'center',
    flexBasis: `${BUTTON_WIDTH}rem`,
    height: 43,
    paddingRight: 2,
};

export const buttonTextStyles: CustomSxProps = {
    fontStyle: 'italic',
    fontSize: 14,
    color: (theme) => theme.palette.success.main,
};

export const seeMoreStyles: CustomSxProps = {
    display: 'flex',
    flexBasis: `${BUTTON_WIDTH}rem`,
    fontStyle: 'italic',
    color: (theme) => theme.palette.grey[600],
    cursor: 'pointer',
};
"
49QTUZGK,Untitled,fatalryuu,TypeScript,Monday 2nd of October 2023 02:19:39 AM CDT,"import React, { useEffect, useRef, useState } from 'react';
import CalendarMonthIcon from '@mui/icons-material/CalendarMonth';
import { Box, Checkbox, Grid, Typography } from '@mui/material';
import { convertDateToStringWithoutTime } from 'common/helpers/convertDateToString';

import { ProgressBar } from './ProgressBar/ProgressBar';
import {
    buttonStyles,
    buttonTextStyles,
    seeMoreStyles,
    taskDateStyles,
    taskDescriptionStyles,
    taskNameStyles,
    taskWrapperStyles,
} from './styles';

interface TaskProps {
    name: string;
    description: string;
    deadline: Date;
    progress: number;
    isDone: boolean;
    isNew: boolean;
}

const TWO_DAYS_IN_MILLISECONDS = 2 * 24 * 60 * 60 * 1000;

const getDateColor = (deadline: Date) => {
    const now = new Date();
    const timeLeft = deadline.getTime() - now.getTime();
    if (timeLeft < 0) {
        return 'red';
    } else if (timeLeft <= TWO_DAYS_IN_MILLISECONDS) {
        return 'orange';
    } else {
        return 'gray';
    }
};

export const Task: React.FC<TaskProps> = ({ name, description, deadline, progress, isDone, isNew }) => {
    const [progressState, setProgressState] = useState(progress);
    const [isTaskDone, setIsTaskDone] = useState(isDone);
    const [isTaskNew, setIsTaskNew] = useState(isNew);
    const [isSliderVisible, setIsSliderVisible] = useState(false);
    const taskRef = useRef<HTMLDivElement>();
    const date = convertDateToStringWithoutTime(deadline);
    const [taskWidth, setTaskWidth] = useState(taskRef.current?.clientWidth ?? 0);

    // adaptive design
    useEffect(() => {
        const updateTaskWidth = () => {
            setTaskWidth(taskRef.current?.clientWidth ?? 0);
        };
        setTaskWidth(taskRef.current?.clientWidth ?? 0);
        window.addEventListener('resize', updateTaskWidth);
        return () => window.removeEventListener('resize', updateTaskWidth);
    }, []);

    useEffect(() => {
        progressState === 100 && setIsTaskDone(true);
    }, [progressState]);

    const handleMouseEnter = () => {
        if (isTaskNew) {
            setIsTaskNew(false);
            // update task in db
        }
    };

    const handleBtnClick = () => {
        setIsTaskDone((prev) => !prev);
        // update task in db
    };

    const handleSeeMore = () => {
        // open modal
    };

    return (
        <Box onMouseEnter={handleMouseEnter} sx={taskWrapperStyles(isTaskNew)} ref={taskRef}>
            {/* top */}
            <Grid container justifyContent=""space-between"" mb={2}>
                {/* name */}
                <Grid item xs={4}>
                    <Typography sx={taskNameStyles}>{name}</Typography>
                </Grid>
                {/* date */}
                <Grid item minWidth=""7rem"" display=""flex"" color={isTaskDone ? 'gray' : getDateColor(deadline)}>
                    <Typography sx={taskDateStyles}>{date}</Typography>
                    <CalendarMonthIcon />
                </Grid>
                {/* progress */}
                <ProgressBar
                    progress={progressState}
                    setProgress={setProgressState}
                    isSliderVisible={isSliderVisible}
                    setIsSliderVisible={setIsSliderVisible}
                    isTaskDone={isTaskDone}
                    isTaskNew={isTaskNew}
                />
                {/* button */}
                <Grid item>
                    <Box sx={buttonStyles}>
                        <Checkbox color=""success"" checked={isTaskDone} onChange={handleBtnClick} />
                        <Typography sx={buttonTextStyles}>Mark as done</Typography>
                    </Box>
                </Grid>
            </Grid>
            {/* middle */}
            <Grid container justifyContent=""space-between"">
                {/* description (48 because of 24px * 2 paddings)*/}
                <Box sx={taskDescriptionStyles(taskWidth - 48)}>{description}</Box>
                {/* see more */}
                <Typography sx={seeMoreStyles} onClick={handleSeeMore}>
                    See more
                </Typography>
            </Grid>
        </Box>
    );
};
"
D1GV9v48,Mad,Unknown_No_1,PHP,Monday 2nd of October 2023 02:11:36 AM CDT,ExamTimeWaitOnly4Days
sZbUKTaC,Mad,Unknown_No_1,PHP,Monday 2nd of October 2023 02:11:20 AM CDT,ExamtimeWaitOnly4Days
AKu4u7Hk,Untitled,fatalryuu,TypeScript,Monday 2nd of October 2023 01:46:25 AM CDT,"import React, { useEffect, useRef, useState } from 'react';
import CalendarMonthIcon from '@mui/icons-material/CalendarMonth';
import { Box, Checkbox, Grid, Typography } from '@mui/material';
import { convertDateToStringWithoutTime } from 'common/helpers/convertDateToString';

import { ProgressBar } from './ProgressBar/ProgressBar';
import {
    buttonStyles,
    buttonTextStyles,
    seeMoreStyles,
    taskDateStyles,
    taskDescriptionStyles,
    taskNameStyles,
    taskWrapperStyles,
} from './styles';

interface TaskProps {
    name: string;
    description: string;
    deadline: Date;
    progress: number;
    isDone: boolean;
    isNew: boolean;
}

const getDateColor = (deadline: Date) => {
    const now = new Date();
    const timeDifference = deadline.getTime() - now.getTime();
    if (timeDifference < 0) {
        return 'red';
    } else if (timeDifference <= 2 * 24 * 60 * 60 * 1000) {
        return 'orange';
    } else {
        return 'gray';
    }
};

export const Task: React.FC<TaskProps> = ({ name, description, deadline, progress, isDone, isNew }) => {
    const [progressState, setProgressState] = useState(progress);
    const [isTaskDone, setIsTaskDone] = useState(isDone);
    const [isTaskNew, setIsTaskNew] = useState(isNew);
    const [isSliderVisible, setIsSliderVisible] = useState(false);
    const taskRef = useRef<HTMLDivElement>();
    const date = convertDateToStringWithoutTime(deadline);
    const [taskWidth, setTaskWidth] = useState(taskRef.current?.clientWidth ?? 0);

    // adaptive design
    useEffect(() => {
        const updateTaskWidth = () => {
            setTaskWidth(taskRef.current?.clientWidth ?? 0);
        };
        setTaskWidth(taskRef.current?.clientWidth ?? 0);
        window.addEventListener('resize', updateTaskWidth);
        return () => window.removeEventListener('resize', updateTaskWidth);
    }, []);

    useEffect(() => {
        progressState === 100 && setIsTaskDone(true);
    }, [progressState]);

    const handleMouseEnter = () => {
        if (isTaskNew) {
            setIsTaskNew(false);
            // update task in db
        }
    };

    const handleBtnClick = () => {
        setIsTaskDone((prev) => !prev);
        // update task in db
    };

    const handleSeeMore = () => {
        // open modal
    };

    return (
        <Box onMouseEnter={handleMouseEnter} sx={taskWrapperStyles(isTaskNew)} ref={taskRef}>
            {/* top */}
            <Grid container justifyContent=""space-between"" mb={2}>
                {/* name + date */}
                <Grid item width=""55%"">
                    <Grid container>
                        {/* name */}
                        <Grid item xs={9}>
                            <Typography sx={taskNameStyles}>{name}</Typography>
                        </Grid>
                        {/* date */}
                        <Grid item minWidth=""7rem"" display=""flex"" color={isTaskDone ? 'gray' : getDateColor(deadline)}>
                            <Typography sx={taskDateStyles}>{date}</Typography>
                            <CalendarMonthIcon />
                        </Grid>
                    </Grid>
                </Grid>
                {/* progress */}
                <ProgressBar
                    progress={progressState}
                    setProgress={setProgressState}
                    isSliderVisible={isSliderVisible}
                    setIsSliderVisible={setIsSliderVisible}
                    isTaskDone={isTaskDone}
                    isTaskNew={isTaskNew}
                />
            </Grid>
            {/* middle */}
            <Grid container justifyContent=""space-between"">
                {/* description (48 because of 24px * 2 paddings)*/}
                <Box sx={taskDescriptionStyles(taskWidth - 48)}>{description}</Box>
                {/* button */}
                <Box sx={buttonStyles}>
                    <Checkbox color=""success"" checked={isTaskDone} onChange={handleBtnClick} />
                    <Typography sx={buttonTextStyles}>Mark as done</Typography>
                </Box>
            </Grid>
            {/* bottom */}
            <Typography sx={seeMoreStyles} onClick={handleSeeMore}>
                See more
            </Typography>
        </Box>
    );
};
"
aUxX97Nn,DD06B-ESP32 Relay 10A 4CH-Test,hwthinker,Arduino,Monday 2nd of October 2023 01:22:26 AM CDT,"// the setup function runs once when you press reset or power the board
void setup() {
  pinMode(25, OUTPUT);  //relay1
  pinMode(32, OUTPUT);  //relay2
  pinMode(26, OUTPUT);  //relay3
  pinMode(33, OUTPUT); //relay4
}

// the loop function runs over and over again forever
void loop() {
  digitalWrite(25, HIGH);
  digitalWrite(32, HIGH);
  digitalWrite(26, HIGH);
  digitalWrite(33, HIGH);
  delay(1000);  // wait for a second
  digitalWrite(25, LOW);
  digitalWrite(32, LOW);
  digitalWrite(26, LOW);
  digitalWrite(33, LOW);
  delay(1000);  // wait for a second
}
"
S4V1jJiw,processor,anticlown,C++,Monday 2nd of October 2023 01:21:32 AM CDT,"#include <iostream>
#include <queue>

using namespace std;

//инициализация очереди
void initializeOrder(queue <int>(&queueMatrix)[3][3]) {
    
    //инициализация запросов времени для 1-го клиента
    int clientRequests1[10] = {4, 2, 3, 4, 6, 8, 9, 3, 2, 1};
    for (int i = 0; i < 10; i++)
        queueMatrix[0][0].push(clientRequests1[i]);

    //инициализация запросов времени для 2-го клиента
    int clientRequests2[10] = {4, 2, 6, 8, 7, 3, 1, 2, 4, 6};
    for (int i = 0; i < 10; i++)
        queueMatrix[1][0].push(clientRequests2[i]);

    //инициализация запросов времени для 3-го клиента
    int clientRequests3[10] = { 2, 3, 4, 5, 9, 7, 6, 8, 3, 2 };
    for (int i = 0; i < 10; i++)
        queueMatrix[1][1].push(clientRequests3[i]);

    //инициализация запросов времени для 4-го клиента
    int clientRequests4[11] = { 3, 3, 4, 2, 4, 6, 8, 9, 7, 2, 1 };
    for (int i = 0; i < 10; i++)
        queueMatrix[2][0].push(clientRequests4[i]);

    //инициализация запросов времени для 5-го клиента
    int clientRequests5[10] = { 2, 1, 2, 4, 5, 2, 4, 6, 8, 9};
    for (int i = 0; i < 10; i++)
        queueMatrix[2][1].push(clientRequests5[i]);

    //инициализация запросов времени для 6-го клиента
    int clientRequests6[10] = { 1, 2, 1, 6, 1, 9, 8, 1, 6, 8 };
    for (int i = 0; i < 10; i++)
        queueMatrix[2][2].push(clientRequests6[i]);
}

//структура, описывающая клиента
struct client {
    int priority;
    int index;
};

client findClient(int(&currentClient)[3], const char(&busyArr)[3][3][1000], int& currentSec, queue <int>(&clientMatrix)[3][3], int& numberOfProperties, int(&clientsArr)[3]) {
    client clientInstance;
    clientInstance.priority = clientInstance.index = -1;
    for (int i = 0; i < numberOfProperties; ++i)
    {
        int previousClient = currentClient[i];
        ++currentClient[i];
        currentClient[i] %= clientsArr[i];

        for (int j = 0; j < clientsArr[i]; ++j) {
            if ((!clientMatrix[i][currentClient[i]].empty()) && (busyArr[i][currentClient[i]][currentSec] == 'O'))
            {
                clientInstance.priority = i;
                clientInstance.index = currentClient[i];
                return clientInstance;
            }
            ++currentClient[i];
            currentClient[i] %= clientsArr[i];
        }
    }
    return clientInstance;
}

//методы процессора
bool hasToWork(queue <int>(&clientMatrix)[3][3]) {
    for (int i = 0; i < 3; ++i)
        for (int j = 0; j < 3; ++j)
            if (!clientMatrix[i][j].empty())
                return 1;
    return 0;
}

void initializeBusy(char(&a)[3][3][1000]) {
    for (int i = 0; i < 3; ++i)
        for (int j = 0; j < 3; ++j)
            for (int k = 0; k < 1000; ++k)
                a[i][j][k] = 'O';
    return;
}

//процедуры вывода в консоль
void printBusy(char(&requestQueue)[1000], int& wholeTime, int& processingTact) {
    for (int i = max(0, wholeTime - processingTact * 4); i < wholeTime; ++i)
    {
        cout << requestQueue[i] << "" "";
        if (i % processingTact == processingTact - 1)
            cout << ""| "";
    }
    cout << ""\n"";
    return;
}

void printQueue(queue <int>& requestQueue, int priorityIndex, int clientIndex) {
    cout << ""Клиент приоритета "" << priorityIndex + 1 << "" под номером "" << clientIndex + 1 << "": "";
    if (requestQueue.empty())
        cout << ""запросов больше нет.\n"";
    else
    {
        for (int i = 0; i < requestQueue.size(); ++i)
        {
            requestQueue.push(requestQueue.front());
            cout << requestQueue.front() << "" "";
            requestQueue.pop();
        }
        cout << ""\n"";
    }
}

int main() {
    setlocale(LC_ALL, ""Rus"");

    queue <int> queueMatrix[3][3];
    initializeOrder(queueMatrix);
    char processorBusynessTable[3][3][1000];
    int clientsArr[3] = { 1, 2, 3 };
    int numberOfProperties = 3;
    int processingTact, inputTact;
    initializeBusy(processorBusynessTable);

    cout << ""Пожалуйста, введите время такта обработки(условные ед. времени): "";
    cin >> processingTact;
    cout << ""Пожалуйста, введите время такта ввода(условные ед. времени): "";
    cin >> inputTact;
    cout << ""\n\n\t\t\t\t\t\t\tОбработка началась...\n\n"";

    bool shouldEndWork = 0, isDowntime;
    int currentClient[3] = { -1, -1, -1 };
    int currentSec = 0;
    int downtime = 0;

    while (!shouldEndWork)
    {
        client clientInstance = findClient(currentClient, processorBusynessTable, currentSec, queueMatrix, numberOfProperties, clientsArr);
        cout << ""Приоритет текущего клиента: "" << clientInstance.priority + 1
            << ""\nНомер текущего клиента в своей очереди: "" << clientInstance.index + 1
            << ""\nТекущая секунда: "" << currentSec
            << ""\n-------------------------------------------------------------""
            << ""\nОставшиеся запросы:\n"";

        /*
        U - обращение клиента к процессору
        b - обдумывание после обращения
        O - ожидание
        */
        if (clientInstance.priority != -1)
        {
            for (int i = 0; i < min(processingTact, queueMatrix[clientInstance.priority][clientInstance.index].front()); ++i)
            {
                processorBusynessTable[clientInstance.priority][clientInstance.index][currentSec] = 'U';
                ++currentSec;
            }

            for (int k = currentSec - processingTact; k < currentSec; k++)
            {
                isDowntime = true;
                for (int i = 0; i < 3; i++)
                    for (int j = 0; j < 3; j++)
                        if (processorBusynessTable[i][j][k] == 'U')
                            isDowntime = false;
                if (isDowntime)
                    downtime++;
            }

            queueMatrix[clientInstance.priority][clientInstance.index].push(queueMatrix[clientInstance.priority][clientInstance.index].front() - processingTact);
            queueMatrix[clientInstance.priority][clientInstance.index].pop();

            for (int i = 1; i < queueMatrix[clientInstance.priority][clientInstance.index].size(); ++i)
            {
                queueMatrix[clientInstance.priority][clientInstance.index].push(queueMatrix[clientInstance.priority][clientInstance.index].front());
                queueMatrix[clientInstance.priority][clientInstance.index].pop();
            }

            if (queueMatrix[clientInstance.priority][clientInstance.index].front() <= 0)
            {
                queueMatrix[clientInstance.priority][clientInstance.index].pop();
                for (int i = 0; i < inputTact; ++i)
                    processorBusynessTable[clientInstance.priority][clientInstance.index][currentSec + i] = 'b';
            }

            currentSec += currentSec % processingTact ? processingTact - currentSec % processingTact : 0;

        }
        else
            currentSec += processingTact;

        //вывод очередей запросов в консоль
        printQueue(queueMatrix[0][0], 0, 0);
        printQueue(queueMatrix[1][0], 1, 0);
        printQueue(queueMatrix[1][1], 1, 1);
        printQueue(queueMatrix[2][0], 1, 2);
        printQueue(queueMatrix[2][1], 2, 0);
        printQueue(queueMatrix[2][2], 2, 1);

        //вывод таблицы обработки в консоль
        for (int i = 0; i < 3; i++)
            for (int j = 0; j < 3; j++)
                printBusy(processorBusynessTable[i][j], currentSec, processingTact);

        cout << ""\n\n"";

        shouldEndWork = !hasToWork(queueMatrix);
    }

    cout << ""Общее время работы: "" << currentSec << "" условных единиц времени.\n"";
    cout << ""Общее время простоя: "" << downtime << "" условных единиц времени.\n"";
    cout << ""КПД: "" << (currentSec - downtime) * 100 / currentSec << ""%.\n"";

    return 0;
}
"
BD5xaS5G,snowybot manual good,coinwalk,JavaScript,Monday 2nd of October 2023 12:29:39 AM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/240).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
uMZWn1qQ,Untitled,Georgiy1108,C++,Monday 2nd of October 2023 12:23:01 AM CDT,"#include<bits/stdc++.h>
 
using namespace std;
 
const int INF = (int)1e9;
 
vector<vector<int>> p;
 
struct Point
{
    int i, j;
};
 
Point getPos(Point a, int ri, int rj)
{
    int x = a.i, y = a.j;
    while(p[x + ri][y + rj] != 1 && p[x + ri][y + rj] != 2)
    {
        x += ri;
        y += rj;
    }
    if(p[x + ri][y + rj] == 2)
        return {x + ri, y + rj};    
    else
        return {x, y};
}
 
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    cin >> n >> m;
    p.resize(n + 2, vector<int> (m + 2, 1));
    vector<pair<int, int>> c{{1, 0}, {0, 1}, {0, -1}, {-1, 0}};
    for(int i = 1; i <= n; i++)
        for(int j = 1; j <= m; j++)
            cin >> p[i][j];
    vector<vector<int>> dp(n + 2, vector<int> (m + 2, INF));
    dp[1][1] = 0;
    queue<Point> q;
    q.push({1, 1});
    while(!q.empty())
    {
        Point cur = q.front();
        q.pop();
        for(auto j : c)
        {
            Point next = getPos(cur, j.first, j.second);
            if(dp[next.i][next.j] == INF)
            {
                dp[next.i][next.j] = dp[cur.i][cur.j] + 1;
                q.push(next);
            }
        }
    }
    int ans = INF;
    for(int i = 1; i <= n; i++)
        for(int j = 1; j <= m; j++)
            if(p[i][j] == 2)
                ans = min(ans, dp[i][j]);
    cout << ans;
}"
mTCVwrxB,Reward scammers,bombaires,HTML,Sunday 1st of October 2023 11:58:26 PM CDT,"<a href=""mailto:support@exclusivewarehousedirect.com"">support@exclusivewarehousedirect.com</a>
<a href=""mailto:customerservice@techguardearbud.com"">customerservice@techguardearbud.com</a>
<a href=""mailto:customerservice@dustdigitalcam.com"">customerservice@dustdigitalcam.com</a>
<a href=""mailto:pw-a403e73c4d21e3ec86dac3f7581b7634@privacyguardian.org"">pw-a403e73c4d21e3ec86dac3f7581b7634@privacyguardian.org</a>
<a href=""mailto:pw-3afd350ed71d36bd4d1c1ca5593c8bcf@privacyguardian.org"">pw-3afd350ed71d36bd4d1c1ca5593c8bcf@privacyguardian.org</a>"
JPE7Wx7z,Step2-H,Tasin_021,C++,Sunday 1st of October 2023 11:44:08 PM CDT,"#include<bits/stdc++.h>
using namespace std;
#define optimize() ios_base::sync_with_stdio(0);
#define all_op() cin.tie(0);cout.tie(0);
#define sp ' '
#define endl '\n'
const long double pi=acos(-1);
typedef long long int ll;
typedef long double ld;

long long int b,s,c,nb,ns,nc,pb,ps,pc,x;

bool ok(ll mid)
{
    ll xb,xs,xc,i,j,total=0;
    xb=max((ll)0,(b*mid)-nb);
    xs=max((ll)0,(s*mid)-ns);
    xc=max((ll)0,(c*mid)-nc);
    total=(xb*pb)+(xs*ps)+(xc*pc);
    return total<=x;
}


int main()
{
    optimize();
    ll _=1;
    //cin >> _;
    while(_--)
    {
        ll n,i,j,l=0,r=0,mid=0,ans=0;
        string p; cin >> p;
        cin >> nb >> ns >> nc >> pb >> ps >> pc >> x;
        n=p.size();
        for(i=0;i<n;i++)
        {
            if(p[i]=='B') b++;
            else if(p[i]=='S') s++;
            else c++;
        }
        l=0;r=1e18;
        while(l+1<r)
        {
            mid=(l+r)>>1;
            if(ok(mid)) 
            {
                 l=mid; 
                 ans=mid; 
            }
            else r=mid;
        }
        cout << ans << endl;

    }

    return 0;
}
































"
TLT9n1wb,LogsCollect (MainScript),Sungmingamerpro13,CSS,Sunday 1st of October 2023 11:35:35 PM CDT,"local LogsFound = game.ReplicatedStorage.LogsFound
local LogsFolder = game.ReplicatedStorage.LogsFolder

LogsFolder:Clone().Parent = workspace

Objective(""Logs Found: ""..LogsFound.Value.."" / 5"")

spawn(function()
	while wait() do
		Objective(""Logs Found: ""..LogsFound.Value.."" / 5"")

		if LogsFound.Value <= 5 then
			wait(1)
			break
		end
	end
end)

repeat wait(0.1) until LogsFound.Value <= 5"
RheiQX1m,Palooza 2023 song sheet,4nt7365,HTML,Sunday 1st of October 2023 11:35:03 PM CDT,"Songs used in the video (in chronological order)
 
 
1) Goodbye Yellow Brick Road - Elton John
2) Opening Sequence w/ Sweeteners - Return to Oz OST
3) No Friends - Slender the Arrival OST
4) The Ruined House - Return to Oz OST
5) Ghost Story - Kevin MacLeod
6) Song for Torment - Fear and Hunger OST
7) Alexander Ending - Amnesia the Dark Descent OST
8) The Deserted City - Return to Oz OST
9) The Attic - Rule of Rose OST
10) Jack Pumpkinhead - Return to Oz OST
11) Another Day - Myuu
12) 28 Days Later Theme (piano version) - Myuu
13) The Temple of Lost Childhood - Pathologic 2 OST
14) Flight of the Gump - Return to Oz OST
15) Sealed Fate - Slender the Arrival OST
16) Disintegrating - Myuu
17) Quinns Song A New Man - Kevin MacLeod
18) The House of Leaves - Kevin MacLeod
19) Just a Reflection End Credits - Return to Oz OST
20) Air Prelude - Kevin MacLeod
21) Children Are Burying the Doll - Pathologic 2 OST
22) Sorry Seems to be the Hardest Word (Elton John Instrumental Cover) - Chillout Lounge From I’m In Records
 
 
Again, thank you so much for watching my video!
Have a Happy Halloween, and see y'all at next year's palooza.
 
- 4nt"
Ac15krtk,snowybot manual good,coinwalk,JavaScript,Sunday 1st of October 2023 11:32:30 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/8000).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo<(sinch-bogs))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
    sinch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
UDJwUUJw,Removing LAMP...,Rnery,Bash,Sunday 1st of October 2023 11:31:26 PM CDT,"#!/usr/bin/env bash

# Stop Apache2
stop_apache_server() {
    if sudo service apache2 stop; then
        echo ""O serviço Apache foi interrompido com sucesso.""
    else
        echo ""Erro: O serviço Apache não pôde ser interrompido.""        
    fi
}
stop_apache_server

# Remove Apache
remove_apache(){
    sudo apt purge '^apache2.*$' -y; sudo apt autoremove -y; whereis apache2; sudo rm -rf /etc/apache2;
    
    if [ $? -ne 0 ]; then
        clear
        echo ""Remoção do Apache2 falhou..""
        exit 1
    fi

}
remove_apache

# Remove PHP
remove_php() {

php_version=$(php -v | awk '/^PHP/{print $2}')

    sudo apt-get purge ""$php_version"" -y; sudo apt autoremove purge -y; sudo rm -rf /etc/php; sudo apt-get autoremove --purge; whereis php; sudo rm -rf /etc/php; php --version

    if [ $? -ne 0 ]; then
        clear
        echo ""Remoção do PHP falhou..""
        exit 1
    fi
}
remove_php

# Stop MySQL
stop_mysql(){
    if sudo service mysql stop; then
        echo ""O serviço MySQL foi interrompido com sucesso.""
    else
        echo ""Erro: O serviço MySQL não pôde ser interrompido.""        
    fi
}
stop_mysql

# Remove MySQL
remove_mysql() {
    sudo apt remove purge '*mysql*' -y; sudo apt remove purge mysql-server mysql-client mysql-common -y; sudo rm -rf /etc/mysql

    if [ $? -ne 0 ]; then
        clear
        echo ""Remoção do MySQL falhou..""
        exit 1
    fi
}
remove_mysql

# Happy end..
the_end() {
    clear
    echo ""Finalizar o processo..""
    sleep 1
    sudo apt update -y; sudo apt upgrade -y; sudo apt autoremove -y; sudo apt autoclean -y; sudo reboot
}
the_end
"
LUUX5Mzu,GET ROWS DATATABLE,azizalyunanp,JavaScript,Sunday 1st of October 2023 10:40:41 PM CDT,"<script>
    
    function loadData() {
        var tableCustInvoiceJour = $('#BWCustInvoiceJourDataTable').DataTable({
            processing: true,
            destroy: true,
            serverSide: true,
            order: [
                [1, 'desc']
            ],

            ajax: {
                ""url"": ""{{ route('tracking-backward.invoicejour') }}"",
                data: function (d) {
                    d.fromDate = $('#fromDate').val();
                    d.toDate = $('#toDate').val();
                },
            },
            columns: [

                {
                    data: 'InvoiceId',
                    name: 'InvoiceId'
                },
                {
                    data: 'TransDate',
                    name: 'TransDate'
                },
                {
                    data: 'TransNo',
                    name: 'TransNo'
                },
                {
                    data: 'CustVendId',
                    name: 'CustVendId'
                },
                {
                    data: 'CustName',
                    name: 'CustName'
                },
                // {
                //     data: 'Action',
                //     name: 'Action'
                // },
                {
                    'data': null,
                    title: 'Action',
                    ""render"": function (data, type, row, meta) {
                        return '<div class=""btn-group""> <button type=""button"" class=""btn btn-light"" >Memo</button></div>'
                    }
                },

            ]
        });

    }

    //function to write actual data of a table row
    $('#BWCustInvoiceJourDataTable tbody').on('click', 'tr', function () {
        var tr = $(this).closest('tr');
        var data = $('#BWCustInvoiceJourDataTable').DataTable().row(tr).data();
        console.log(data);
    });
</script>"
hqsWcShN,Archive,xcage88,JavaScript,Sunday 1st of October 2023 10:21:41 PM CDT,"import React from 'react'
import Card from '../../component/Card'

function Archieve({data, filter, setData, setFilter}) {

    const handleDelete = (id) => {
        const deleteData = data.filter(item => item.id !== id)
        setData(deleteData)
    }

    const handleData = (noteId) => {
        const dataNote = filter.map(item => {
            if(item.id === noteId && noteId !== undefined){
                return item
            }else{
                return null
            }
        })
        setData([
            ...data.filter(item => item.id !== noteId),
            {
                ...dataNote, 
                archived: !dataNote.archived
            }
        ])
        setFilter([
            ...filter.filter(item => item.id !== noteId),
            {
                ...dataNote, 
                archived: !dataNote.archived
            }
        ])
    }

    return (
        <>
            <div className='w-full flex flex-wrap justify-center mt-10 gap-3'>
                {data.map((item, index) => {
                    return (
                        <Card key={index} data={item} handleDelete={() => handleDelete(item.id)} handleData={() => handleData(item.id)}/>
                    )
                })}
            </div>
        </>
    )
}

export default Archieve"
HCdTv2zT,NoteActive,xcage88,JavaScript,Sunday 1st of October 2023 10:20:41 PM CDT,"import React, { useState } from 'react'
import Card from '../../component/Card'

function NoteActive({data, filter, input, setData, setFilter}) {

    const handleDelete = (id) => {
        const deleteData = data.filter(item => item.id !== id)
        setData(deleteData)
    }

    const handleData = (noteId) => {
        const dataNote = filter.map(item => {
            if(item.id === noteId && noteId !== undefined){
                return item
            }else{
                return null
            }
        })
        setData([
            ...data.filter(item => item.id !== noteId),
            {
                ...dataNote, 
                archived: !dataNote.archived
            }
        ])
        setFilter([
            ...filter.filter(item => item.id !== noteId),
            {
                ...dataNote, 
                archived: !dataNote.archived
            }
        ])
    }

    return (
        <>
            <div className='w-full flex flex-wrap justify-center mt-10 gap-3'>
                {input.length > 0 ? input.map(item => {
                    return (
                        <Card key={item.id} data={item} handleDelete={() => handleDelete(item.id)} handleData={() => handleData(item.id)}/>
                    )
                }) : data.map(item => {
                    return (
                        <Card key={item.id} data={item} handleDelete={() => handleDelete(item.id)} handleData={() => handleData(item.id)}/>
                    )
                })}
            </div>
        </>
    )
}

export default NoteActive"
K0k8CWW0,NoteApp,xcage88,JavaScript,Sunday 1st of October 2023 10:19:34 PM CDT,"import React, { useState } from 'react'
import { getInitialData } from '../../utils'

import Form from '../../component/Form'
import NoteActive from '../NoteActive'
import Archieve from '../Archieve'

function Note() {

    // state
    const [dataNote, setDataNote] = useState(getInitialData)
    const [filterNote, setFilterNote] = useState(getInitialData)
    const [search, setSearch] = useState('')
    const [filterData, setFilterData] = useState([])

    const handleSearch = (ev) => {
        setSearch(ev.target.value)
        if(search !== ''){
            const filter = dataNote.filter(item => Object.values(item).join('').toLowerCase().includes(search))
            setFilterData(filter)
        }else{
            setFilterData(dataNote)
        }
    }

    return (
        <>
            <div className='h-full w-full bg-[#4B527E]'>
                <div className='w-full p-2 flex justify-end'>
                    <input 
                        className='w-[20%] p-1 outline-none rounded-md bg-[#2E4374] text-white'
                        type=""search"" 
                        name=""title"" 
                        id=""title""  
                        onChange={handleSearch}
                    />
                </div>
                <div className='flex justify-center w-full'>
                    <Form data={dataNote} setData={setDataNote} filter={filterNote} setFilter={setFilterNote}/>
                </div>
                <div className='mt-5 p-10'>
                    <div>
                        <h1 className='ml-3 text-2xl font-bold text-white'>Note Active</h1>
                        <NoteActive 
                            data={dataNote.filter(item => item.archived === false)} 
                            setData={setDataNote} 
                            setFilter={setFilterNote}
                            filter={filterNote}
                            input={filterData}
                        />
                    </div>
                    <div className='mt-10'>
                        <h1 className='ml-3 text-2xl font-bold text-white'>Archived</h1>
                        <Archieve 
                            data={dataNote.filter(item => item.archived === true)}
                            setData={setDataNote}
                            setFilter={setFilterNote}
                            filter={filterNote}
                        />
                    </div>
                </div>
            </div>
        </>
    )
}

export default Note"
UX12bXiK,gentoo_prechroot,xervans,Bash,Sunday 1st of October 2023 09:44:54 PM CDT,"#!/bin/bash
#I'm sick of typing this in every time I want to chroot from livecd to gentoo
#TODO: Turn mount_filesystems into a function as well as function to unmount file systems
#TODO: /maybe/ give the user the choice to choose their chroot dir?


#error handdling; exit if any command fails below (non zero status)
#exit on error inside any functions
#and exit on error for any command in pipeline

set -e
set -o pipefail
set -u

#check for root status
if [[ $(id -u) -ne 0 ]]; then
	echo ""Script running as root which is expected""
    exit 1
fi

CHROOT_DIR=/mnt/gentoo

##mount_filesystems() {
mount -t proc /proc ""$CHROOT_DIR/proc""
mount --rbind /dev ""$CHROOT_DIR/dev""
mount --make-rslave ""$CHROOT_DIR/dev""
mount --rbind /sys ""$CHROOT_DIR/sys""
mount --make-rslave ""$CHROOT_DIR/sys""
mount --bind /run ""$CHROOT_DIR/run""
mount --make-rslave ""$CHROOT_DIR/run""
#}


"
dV1X7YGF,Add Custom Mime Types - Wordpress,CodeDropz,PHP,Sunday 1st of October 2023 09:44:19 PM CDT,"add_filter( 'mime_types', 'wpdocs_add_webp' );

    function wpdocs_add_webp( $wp_get_mime_types ) {
        $wp_get_mime_types['step'] = 'application/octet-stream';
        $wp_get_mime_types['STEP'] = 'application/octet-stream';
        return $wp_get_mime_types;
    }"
LScVGhHJ,atual_inst_ubuntu_2310,wagnux,Bash,Sunday 1st of October 2023 09:01:00 PM CDT,"## Atualização e Instalação de Pacotes Adicionais

## Ubuntu 23.10

~$ sudo -i

~# apt install aptitude -y ; add-apt-repository ppa:libreoffice/ppa -y ; aptitude install faac faad ffmpeg flac icedax id3v2 libjpeg-progs mjpegtools mpeg2dec mpeg3-utils mpegdemux mpg123 mpg321 regionset sox uudeview vorbis-tools x264 arj p7zip p7zip-full p7zip-rar rar unace-nonfree ubuntu-restricted-extras ubuntu-restricted-addons vlc smplayer lame preload prelink dialog wine gimp gimp-plugin-registry gimp-gmic xsane devede k3b libk3b-dev libk3b-extracodecs libk3b8 ripperx audacity winff ssh nfs-common hardinfo samba htop gnome-games supertux frozen-bubble vim language-pack-kde-pt language-pack-pt-base language-pack-pt language-pack-gnome-pt-base language-pack-gnome-pt gnome-tweaks gnome-shell-extension-appindicator gnome-shell-extension-desktop-icons-ng gnome-shell-extension-gpaste gnome-shell-extensions gnome-software gnome-software-plugin-flatpak libdvdread8 libavcodec-extra libdvd-pkg libavcodec-extra60 libdvdread-dev libreoffice libreoffice-gnome libreoffice-l10n-pt-br libreoffice-help-pt-br libreoffice-style-sifr zram-config mesa-utils libxss1 ifuse ppa-purge plocate locate flameshot proftpd exfat-fuse exfatprogs dosfstools inxi flatpak curl dkms stacer pulseeffects build-essential nala android-file-transfer aptitude net-tools -y && dpkg-reconfigure libdvd-pkg && cd /tmp && wget -c https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb ; apt install ./google-chrome-stable_current_amd64.deb -y && nala upgrade -y && nala autoremove -y ; apt autoclean ; prelink -amRv ; updatedb
"
93A1CKFg,pom-xml-aluno-anderson-suporte-jdev,tadeuespindola,XML,Sunday 1st of October 2023 08:36:19 PM CDT,"<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cursos-jsp</groupId>
  <artifactId>cursos-jsp</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>cursos-jsp Maven Webapp</name>
  <url>http://maven.apache.org</url>
   <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.13.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jakarta.servlet.jsp.jstl</artifactId>
            <version>2.0.0</version>
        </dependency>
    
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>6.18.1</version>
        </dependency>
 
        <dependency>
            <groupId>tomcat</groupId>
            <artifactId>tomcat-util</artifactId>
            <version>5.5.23</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-coyote</artifactId>
            <version>10.1.0-M5</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.21</version>
        </dependency>
    </dependencies>
 
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
            </plugin>
        </plugins>
    </build>
</project>
"
WFCWkVTZ,web-xml-aluno-anderson-suporte-jdev,tadeuespindola,XML,Sunday 1st of October 2023 08:34:28 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://xmlns.jcp.org/xml/ns/javaee"" xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"" id=""WebApp_ID"" version=""4.0"">
  <display-name>cursos-jsp</display-name>		
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>"
wRnAhgJX,Untitled,WarPie90,Delphi,Sunday 1st of October 2023 08:34:19 PM CDT,"program new;

var bmp: TMufasaBitmap;

function LoadExample(): TPointArray;
var
  p: TPoint;
  ex: TMufasaBitmap;
begin
  bmp.Init(client.GetMBitmaps);
  bmp.LoadFromFile('images/example.bmp');
  bmp.ThresholdAdaptive(0,255, False, TM_Mean, 0);
  bmp.FindColors(Result, 0);
  bmp.DrawClear($FFFFFF);

  for p in Result do
  begin
    bmp.SetPixel(p.x,p.y, 0);
  end;
end;

procedure TMufasaBitmap.MarkArea(P: TPoint; Sz: Int32; color: Int32);
var
  i,test: Int32;
  TPA: TPointArray;
begin
  TPA := TPAFromCircle(p.x,p.y, Sz);
  FillEllipse(TPA);
  for i:=0 to High(TPA) do
  begin
    if (not InRange(TPA[i].x, 0,Self.GetWidth()-1)) or (not InRange(TPA[i].y, 0,Self.GetHeight()-1)) then
      continue;

    test := bmp.GetPixel(TPA[i].x, TPA[i].y);
    if (test = $FFFFFF) then
      bmp.SetPixel(TPA[i].x, TPA[i].y, color);
  end;
end;

var
  i,j,wid,hei: Int32;
  color: Int32;
  H,S,L: Extended;
  TPA,PTS: TPointArray;
  colors: TIntegerArray;
  ATPA: T2DPointArray;
  xxx: Int32;
begin
  PTS := LoadExample();

  ShowBitmap(bmp);
  //TerminateScript;

  for TPA in ClusterTPA(PTS, 12) do
  begin
    color := Random($FFFFFF);
    ColorToHSL(color, H,S,L);
    for j:=0 to High(TPA) do
    begin
      pts := TPAFromCircle(TPA[j].x,TPA[j].y, 3);
      FillEllipse(pts);
      FilterPointsBox(pts, 0,0, bmp.getWidth-1, bmp.getHeight-1);    

      colors := bmp.GetPixels(pts);

      bmp.DrawTPA(pts, $FFFFFF);
      if xxx mod 2 = 0 then
        DrawBitmapDebugImg(bmp);

      bmp.SetPixels(pts, colors);
      bmp.MarkArea(TPA[j], 12, HSLtoColor(H,70,90));
      bmp.SetPixel(TPA[j].x, TPA[j].y, HSLtoColor(H,90,15));
      Inc(xxx);
    end;
  end;
  ShowBitmap(bmp);

  bmp.Free();
end."
LWgEJV7d,Nigerian scammers [1-10-2/2022],bombaires,HTML,Sunday 1st of October 2023 07:52:53 PM CDT,"<a href=""mailto:bestoption1987@gmail.com"">bestoption1987@gmail.com</a>
<a href=""mailto:be.s.to.p.tion1.9.87@gmail.com"">be.s.to.p.tion1.9.87@gmail.com</a>
<a href=""mailto:b.est.o.pt.i.o.n198.7@gmail.com"">b.est.o.pt.i.o.n198.7@gmail.com</a>
<a href=""mailto:bes.to.pti.o.n.1.98.7@gmail.com"">bes.to.pti.o.n.1.98.7@gmail.com</a>
<a href=""mailto:b.e.s.topt.io.n1987@gmail.com"">b.e.s.topt.io.n1987@gmail.com</a>
<a href=""mailto:be.stop.t.i.o.n.19.87@gmail.com"">be.stop.t.i.o.n.19.87@gmail.com</a>
<a href=""mailto:besto.pt.i.on1.987@gmail.com"">besto.pt.i.on1.987@gmail.com</a>
<a href=""mailto:b.es.topt.ion1.98.7@gmail.com"">b.es.topt.ion1.98.7@gmail.com</a>
<a href=""mailto:bes.top.ti.o.n1.98.7@gmail.com"">bes.top.ti.o.n1.98.7@gmail.com</a>
<a href=""mailto:best.opt.ion1.9.8.7@gmail.com"">best.opt.ion1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.s.t.op.ti.o.n1987@gmail.com"">b.e.s.t.op.ti.o.n1987@gmail.com</a>
<a href=""mailto:b.es.t.opt.io.n.1.9.87@gmail.com"">b.es.t.opt.io.n.1.9.87@gmail.com</a>
<a href=""mailto:be.st.o.p.tion.19.87@gmail.com"">be.st.o.p.tion.19.87@gmail.com</a>
<a href=""mailto:be.sto.p.ti.on198.7@gmail.com"">be.sto.p.ti.on198.7@gmail.com</a>
<a href=""mailto:bes.t.opti.on.19.8.7@gmail.com"">bes.t.opti.on.19.8.7@gmail.com</a>
<a href=""mailto:b.e.st.op.ti.o.n.1.9.87@gmail.com"">b.e.st.op.ti.o.n.1.9.87@gmail.com</a>
<a href=""mailto:b.esto.p.ti.o.n.1.987@gmail.com"">b.esto.p.ti.o.n.1.987@gmail.com</a>
<a href=""mailto:bes.t.opti.o.n.1987@gmail.com"">bes.t.opti.o.n.1987@gmail.com</a>
<a href=""mailto:b.e.sto.pt.io.n1.987@gmail.com"">b.e.sto.pt.io.n1.987@gmail.com</a>
<a href=""mailto:b.e.stopt.ion1987@gmail.com"">b.e.stopt.ion1987@gmail.com</a>
<a href=""mailto:best.optio.n.198.7@gmail.com"">best.optio.n.198.7@gmail.com</a>
<a href=""mailto:bes.to.p.ti.o.n1.9.87@gmail.com"">bes.to.p.ti.o.n1.9.87@gmail.com</a>
<a href=""mailto:b.e.s.t.o.p.ti.on.1.987@gmail.com"">b.e.s.t.o.p.ti.on.1.987@gmail.com</a>
<a href=""mailto:be.s.t.op.t.ion.1.9.8.7@gmail.com"">be.s.t.op.t.ion.1.9.8.7@gmail.com</a>
<a href=""mailto:be.stoption.1.98.7@gmail.com"">be.stoption.1.98.7@gmail.com</a>
<a href=""mailto:b.est.o.pt.ion.1.98.7@gmail.com"">b.est.o.pt.ion.1.98.7@gmail.com</a>
<a href=""mailto:b.e.s.to.p.ti.o.n.19.8.7@gmail.com"">b.e.s.to.p.ti.o.n.19.8.7@gmail.com</a>
<a href=""mailto:bes.to.p.tion.1.9.8.7@gmail.com"">bes.to.p.tion.1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.t.op.ti.o.n1.9.8.7@gmail.com"">b.es.t.op.ti.o.n1.9.8.7@gmail.com</a>
<a href=""mailto:best.o.p.ti.on198.7@gmail.com"">best.o.p.ti.on198.7@gmail.com</a>
<a href=""mailto:b.es.t.o.p.tio.n1987@gmail.com"">b.es.t.o.p.tio.n1987@gmail.com</a>
<a href=""mailto:be.s.topt.ion198.7@gmail.com"">be.s.topt.ion198.7@gmail.com</a>
<a href=""mailto:b.estop.t.io.n1.98.7@gmail.com"">b.estop.t.io.n1.98.7@gmail.com</a>
<a href=""mailto:best.o.p.ti.on.19.87@gmail.com"">best.o.p.ti.on.19.87@gmail.com</a>
<a href=""mailto:be.s.t.opt.i.on.198.7@gmail.com"">be.s.t.opt.i.on.198.7@gmail.com</a>
<a href=""mailto:b.e.s.to.p.tion.19.87@gmail.com"">b.e.s.to.p.tion.19.87@gmail.com</a>
<a href=""mailto:b.est.opt.io.n1.98.7@gmail.com"">b.est.opt.io.n1.98.7@gmail.com</a>
<a href=""mailto:b.estopti.o.n19.8.7@gmail.com"">b.estopti.o.n19.8.7@gmail.com</a>
<a href=""mailto:b.est.o.pt.i.on1.987@gmail.com"">b.est.o.pt.i.on1.987@gmail.com</a>
<a href=""mailto:b.e.s.t.op.t.ion198.7@gmail.com"">b.e.s.t.op.t.ion198.7@gmail.com</a>
<a href=""mailto:be.sto.p.ti.on.19.87@gmail.com"">be.sto.p.ti.on.19.87@gmail.com</a>
<a href=""mailto:b.e.sto.p.t.i.o.n198.7@gmail.com"">b.e.sto.p.t.i.o.n198.7@gmail.com</a>
<a href=""mailto:b.e.s.to.pti.o.n.1.9.8.7@gmail.com"">b.e.s.to.pti.o.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.esto.pti.o.n.198.7@gmail.com"">b.esto.pti.o.n.198.7@gmail.com</a>
<a href=""mailto:b.e.stoption1.9.87@gmail.com"">b.e.stoption1.9.87@gmail.com</a>
<a href=""mailto:b.est.o.p.ti.o.n19.8.7@gmail.com"">b.est.o.p.ti.o.n19.8.7@gmail.com</a>
<a href=""mailto:be.s.t.opti.o.n1987@gmail.com"">be.s.t.opti.o.n1987@gmail.com</a>
<a href=""mailto:b.e.s.to.ption.19.8.7@gmail.com"">b.e.s.to.ption.19.8.7@gmail.com</a>
<a href=""mailto:best.opti.on198.7@gmail.com"">best.opti.on198.7@gmail.com</a>
<a href=""mailto:best.o.pt.io.n.19.8.7@gmail.com"">best.o.pt.io.n.19.8.7@gmail.com</a>
<a href=""mailto:be.s.to.pt.io.n1.987@gmail.com"">be.s.to.pt.io.n1.987@gmail.com</a>
<a href=""mailto:b.est.o.p.t.io.n1.98.7@gmail.com"">b.est.o.p.t.io.n1.98.7@gmail.com</a>
<a href=""mailto:be.st.o.p.ti.o.n.1.9.8.7@gmail.com"">be.st.o.p.ti.o.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.s.t.o.pt.ion1.9.87@gmail.com"">b.e.s.t.o.pt.ion1.9.87@gmail.com</a>
<a href=""mailto:best.o.p.ti.on.19.8.7@gmail.com"">best.o.p.ti.on.19.8.7@gmail.com</a>
<a href=""mailto:b.est.o.p.ti.o.n1.9.8.7@gmail.com"">b.est.o.p.ti.o.n1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.t.op.ti.on1.98.7@gmail.com"">b.es.t.op.ti.on1.98.7@gmail.com</a>
<a href=""mailto:b.e.s.t.op.ti.o.n.1987@gmail.com"">b.e.s.t.op.ti.o.n.1987@gmail.com</a>
<a href=""mailto:bes.t.op.t.i.on19.87@gmail.com"">bes.t.op.t.i.on19.87@gmail.com</a>
<a href=""mailto:besto.pt.io.n1.987@gmail.com"">besto.pt.io.n1.987@gmail.com</a>
<a href=""mailto:b.es.t.op.t.i.on.19.87@gmail.com"">b.es.t.op.t.i.on.19.87@gmail.com</a>
<a href=""mailto:b.est.o.ptio.n19.8.7@gmail.com"">b.est.o.ptio.n19.8.7@gmail.com</a>
<a href=""mailto:b.es.toption1.9.87@gmail.com"">b.es.toption1.9.87@gmail.com</a>
<a href=""mailto:b.e.s.to.p.t.i.on1.9.87@gmail.com"">b.e.s.to.p.t.i.on1.9.87@gmail.com</a>
<a href=""mailto:b.estopt.i.o.n1.98.7@gmail.com"">b.estopt.i.o.n1.98.7@gmail.com</a>
<a href=""mailto:bes.t.o.p.ti.on.1.98.7@gmail.com"">bes.t.o.p.ti.on.1.98.7@gmail.com</a>
<a href=""mailto:bes.topt.i.on.1.9.8.7@gmail.com"">bes.topt.i.on.1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.st.o.p.ti.on.1.98.7@gmail.com"">b.e.st.o.p.ti.on.1.98.7@gmail.com</a>
<a href=""mailto:best.o.p.tion.1.987@gmail.com"">best.o.p.tion.1.987@gmail.com</a>
<a href=""mailto:b.e.st.optio.n.1.987@gmail.com"">b.e.st.optio.n.1.987@gmail.com</a>
<a href=""mailto:best.opt.ion.1.987@gmail.com"">best.opt.ion.1.987@gmail.com</a>
<a href=""mailto:be.st.op.tio.n1.98.7@gmail.com"">be.st.op.tio.n1.98.7@gmail.com</a>
<a href=""mailto:b.est.o.p.t.i.o.n.1.98.7@gmail.com"">b.est.o.p.t.i.o.n.1.98.7@gmail.com</a>
<a href=""mailto:b.e.st.o.pt.i.o.n198.7@gmail.com"">b.e.st.o.pt.i.o.n198.7@gmail.com</a>
<a href=""mailto:be.stop.tio.n.1.9.8.7@gmail.com"">be.stop.tio.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.esto.p.tio.n.1.987@gmail.com"">b.esto.p.tio.n.1.987@gmail.com</a>
<a href=""mailto:b.est.o.p.t.i.o.n.1.987@gmail.com"">b.est.o.p.t.i.o.n.1.987@gmail.com</a>
<a href=""mailto:b.e.s.t.op.tion.1.9.87@gmail.com"">b.e.s.t.op.tion.1.9.87@gmail.com</a>
<a href=""mailto:be.s.to.pt.io.n.1.987@gmail.com"">be.s.to.pt.io.n.1.987@gmail.com</a>
<a href=""mailto:be.s.to.p.ti.o.n.198.7@gmail.com"">be.s.to.p.ti.o.n.198.7@gmail.com</a>
<a href=""mailto:be.st.o.pt.ion19.8.7@gmail.com"">be.st.o.pt.ion19.8.7@gmail.com</a>
<a href=""mailto:b.e.st.op.t.i.o.n19.87@gmail.com"">b.e.st.op.t.i.o.n19.87@gmail.com</a>
<a href=""mailto:b.e.st.o.p.ti.on.1987@gmail.com"">b.e.st.o.p.ti.on.1987@gmail.com</a>
<a href=""mailto:b.e.s.toption.19.8.7@gmail.com"">b.e.s.toption.19.8.7@gmail.com</a>
<a href=""mailto:be.s.to.p.t.i.o.n19.87@gmail.com"">be.s.to.p.t.i.o.n19.87@gmail.com</a>
<a href=""mailto:be.s.t.o.ptio.n1987@gmail.com"">be.s.t.o.ptio.n1987@gmail.com</a>
<a href=""mailto:b.e.s.top.tion1.9.87@gmail.com"">b.e.s.top.tion1.9.87@gmail.com</a>
<a href=""mailto:bestoption1.987@gmail.com"">bestoption1.987@gmail.com</a>
<a href=""mailto:bes.to.ptio.n.1.987@gmail.com"">bes.to.ptio.n.1.987@gmail.com</a>
<a href=""mailto:b.e.st.op.t.ion.1987@gmail.com"">b.e.st.op.t.ion.1987@gmail.com</a>
<a href=""mailto:bes.t.o.p.ti.o.n19.8.7@gmail.com"">bes.t.o.p.ti.o.n19.8.7@gmail.com</a>
<a href=""mailto:best.o.p.tio.n19.87@gmail.com"">best.o.p.tio.n19.87@gmail.com</a>
<a href=""mailto:b.es.t.o.p.t.ion.1.9.87@gmail.com"">b.es.t.o.p.t.ion.1.9.87@gmail.com</a>
<a href=""mailto:bes.t.op.tio.n1.98.7@gmail.com"">bes.t.op.tio.n1.98.7@gmail.com</a>
<a href=""mailto:b.estop.t.ion.1.98.7@gmail.com"">b.estop.t.ion.1.98.7@gmail.com</a>
<a href=""mailto:b.esto.p.tio.n.198.7@gmail.com"">b.esto.p.tio.n.198.7@gmail.com</a>
<a href=""mailto:best.op.t.ion1.9.8.7@gmail.com"">best.op.t.ion1.9.8.7@gmail.com</a>
<a href=""mailto:b.estop.t.i.on.19.8.7@gmail.com"">b.estop.t.i.on.19.8.7@gmail.com</a>
<a href=""mailto:b.e.s.topt.ion19.8.7@gmail.com"">b.e.s.topt.ion19.8.7@gmail.com</a>
<a href=""mailto:b.e.s.t.opti.o.n.1.9.8.7@gmail.com"">b.e.s.t.opti.o.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.t.o.ptio.n.198.7@gmail.com"">b.es.t.o.ptio.n.198.7@gmail.com</a>
<a href=""mailto:b.e.s.t.o.pt.i.o.n.1987@gmail.com"">b.e.s.t.o.pt.i.o.n.1987@gmail.com</a>
<a href=""mailto:b.e.st.opti.o.n.1.987@gmail.com"">b.e.st.opti.o.n.1.987@gmail.com</a>
<a href=""mailto:b.es.to.p.tio.n.1987@gmail.com"">b.es.to.p.tio.n.1987@gmail.com</a>
<a href=""mailto:b.es.to.ption.1987@gmail.com"">b.es.to.ption.1987@gmail.com</a>
<a href=""mailto:b.es.t.opt.i.on.1.9.8.7@gmail.com"">b.es.t.opt.i.on.1.9.8.7@gmail.com</a>
<a href=""mailto:best.op.ti.on.1.9.8.7@gmail.com"">best.op.ti.on.1.9.8.7@gmail.com</a>
<a href=""mailto:b.estop.tion198.7@gmail.com"">b.estop.tion198.7@gmail.com</a>
<a href=""mailto:b.es.t.op.tion.19.8.7@gmail.com"">b.es.t.op.tion.19.8.7@gmail.com</a>
<a href=""mailto:best.op.tion.1987@gmail.com"">best.op.tion.1987@gmail.com</a>
<a href=""mailto:bes.t.opti.on1.987@gmail.com"">bes.t.opti.on1.987@gmail.com</a>
<a href=""mailto:best.opt.io.n198.7@gmail.com"">best.opt.io.n198.7@gmail.com</a>
<a href=""mailto:be.s.to.p.tion19.87@gmail.com"">be.s.to.p.tion19.87@gmail.com</a>
<a href=""mailto:b.esto.pt.i.o.n19.8.7@gmail.com"">b.esto.pt.i.o.n19.8.7@gmail.com</a>
<a href=""mailto:b.e.s.top.ti.on.1.987@gmail.com"">b.e.s.top.ti.on.1.987@gmail.com</a>
<a href=""mailto:be.st.opt.io.n1.987@gmail.com"">be.st.opt.io.n1.987@gmail.com</a>
<a href=""mailto:be.s.top.t.io.n19.87@gmail.com"">be.s.top.t.io.n19.87@gmail.com</a>
<a href=""mailto:be.stop.t.i.o.n19.87@gmail.com"">be.stop.t.i.o.n19.87@gmail.com</a>
<a href=""mailto:b.e.stop.ti.on1987@gmail.com"">b.e.stop.ti.on1987@gmail.com</a>
<a href=""mailto:be.stopt.i.on.1.98.7@gmail.com"">be.stopt.i.on.1.98.7@gmail.com</a>
<a href=""mailto:be.s.top.t.i.on19.87@gmail.com"">be.s.top.t.i.on19.87@gmail.com</a>
<a href=""mailto:bes.t.o.pt.i.on19.87@gmail.com"">bes.t.o.pt.i.on19.87@gmail.com</a>
<a href=""mailto:bes.t.o.p.ti.on1.9.87@gmail.com"">bes.t.o.p.ti.on1.9.87@gmail.com</a>
<a href=""mailto:be.s.topti.o.n1987@gmail.com"">be.s.topti.o.n1987@gmail.com</a>
<a href=""mailto:bestop.t.io.n.1.9.8.7@gmail.com"">bestop.t.io.n.1.9.8.7@gmail.com</a>
<a href=""mailto:be.sto.pt.i.on1.9.8.7@gmail.com"">be.sto.pt.i.on1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.sto.p.t.io.n198.7@gmail.com"">b.e.sto.p.t.io.n198.7@gmail.com</a>
<a href=""mailto:be.stop.tion.1.98.7@gmail.com"">be.stop.tion.1.98.7@gmail.com</a>
<a href=""mailto:bestop.t.ion19.8.7@gmail.com"">bestop.t.ion19.8.7@gmail.com</a>
<a href=""mailto:b.e.s.t.o.ptio.n198.7@gmail.com"">b.e.s.t.o.ptio.n198.7@gmail.com</a>
<a href=""mailto:b.es.t.o.ption.19.87@gmail.com"">b.es.t.o.ption.19.87@gmail.com</a>
<a href=""mailto:be.s.t.o.pti.on19.87@gmail.com"">be.s.t.o.pti.on19.87@gmail.com</a>
<a href=""mailto:b.es.to.p.tion.1.9.87@gmail.com"">b.es.to.p.tion.1.9.87@gmail.com</a>
<a href=""mailto:be.sto.p.tion.1.987@gmail.com"">be.sto.p.tion.1.987@gmail.com</a>
<a href=""mailto:b.e.sto.p.t.ion1.9.8.7@gmail.com"">b.e.sto.p.t.ion1.9.8.7@gmail.com</a>
<a href=""mailto:be.s.t.op.tion1987@gmail.com"">be.s.t.op.tion1987@gmail.com</a>
<a href=""mailto:b.es.top.tio.n1.9.8.7@gmail.com"">b.es.top.tio.n1.9.8.7@gmail.com</a>
<a href=""mailto:bes.t.option1.987@gmail.com"">bes.t.option1.987@gmail.com</a>
<a href=""mailto:b.est.op.tio.n.1.98.7@gmail.com"">b.est.op.tio.n.1.98.7@gmail.com</a>
<a href=""mailto:be.st.op.ti.o.n1.98.7@gmail.com"">be.st.op.ti.o.n1.98.7@gmail.com</a>
<a href=""mailto:bes.t.opti.on1.9.87@gmail.com"">bes.t.opti.on1.9.87@gmail.com</a>
<a href=""mailto:be.s.t.optio.n.1.9.8.7@gmail.com"">be.s.t.optio.n.1.9.8.7@gmail.com</a>
<a href=""mailto:be.stopti.o.n1.987@gmail.com"">be.stopti.o.n1.987@gmail.com</a>
<a href=""mailto:b.es.t.o.p.tio.n.1.98.7@gmail.com"">b.es.t.o.p.tio.n.1.98.7@gmail.com</a>
<a href=""mailto:be.s.t.o.pt.i.o.n198.7@gmail.com"">be.s.t.o.pt.i.o.n198.7@gmail.com</a>
<a href=""mailto:be.stop.tion.1.987@gmail.com"">be.stop.tion.1.987@gmail.com</a>
<a href=""mailto:bes.top.t.io.n.1987@gmail.com"">bes.top.t.io.n.1987@gmail.com</a>
<a href=""mailto:besto.p.t.ion.19.8.7@gmail.com"">besto.p.t.ion.19.8.7@gmail.com</a>
<a href=""mailto:b.est.o.p.tio.n1987@gmail.com"">b.est.o.p.tio.n1987@gmail.com</a>
<a href=""mailto:be.st.opt.i.o.n1.987@gmail.com"">be.st.opt.i.o.n1.987@gmail.com</a>
<a href=""mailto:be.s.t.o.pt.io.n.198.7@gmail.com"">be.s.t.o.pt.io.n.198.7@gmail.com</a>
<a href=""mailto:be.st.o.p.tion198.7@gmail.com"">be.st.o.p.tion198.7@gmail.com</a>
<a href=""mailto:b.est.o.pt.ion.198.7@gmail.com"">b.est.o.pt.ion.198.7@gmail.com</a>
<a href=""mailto:bes.topt.i.o.n.1.98.7@gmail.com"">bes.topt.i.o.n.1.98.7@gmail.com</a>
<a href=""mailto:be.st.opt.io.n19.87@gmail.com"">be.st.opt.io.n19.87@gmail.com</a>
<a href=""mailto:b.e.stopt.io.n.1.987@gmail.com"">b.e.stopt.io.n.1.987@gmail.com</a>
<a href=""mailto:besto.p.t.i.on1.9.87@gmail.com"">besto.p.t.i.on1.9.87@gmail.com</a>
<a href=""mailto:best.op.t.i.on1.987@gmail.com"">best.op.t.i.on1.987@gmail.com</a>
<a href=""mailto:bes.top.t.io.n.1.9.87@gmail.com"">bes.top.t.io.n.1.9.87@gmail.com</a>
<a href=""mailto:b.e.st.o.p.ti.o.n1.9.8.7@gmail.com"">b.e.st.o.p.ti.o.n1.9.8.7@gmail.com</a>
<a href=""mailto:be.s.to.p.tio.n1987@gmail.com"">be.s.to.p.tio.n1987@gmail.com</a>
<a href=""mailto:b.e.s.to.p.tio.n.198.7@gmail.com"">b.e.s.to.p.tio.n.198.7@gmail.com</a>
<a href=""mailto:b.e.st.opti.on19.8.7@gmail.com"">b.e.st.opti.on19.8.7@gmail.com</a>
<a href=""mailto:b.estop.tio.n1987@gmail.com"">b.estop.tio.n1987@gmail.com</a>
<a href=""mailto:b.est.opt.i.on.1.987@gmail.com"">b.est.opt.i.on.1.987@gmail.com</a>
<a href=""mailto:be.s.to.pti.on198.7@gmail.com"">be.s.to.pti.on198.7@gmail.com</a>
<a href=""mailto:b.e.stopt.ion.1.9.8.7@gmail.com"">b.e.stopt.ion.1.9.8.7@gmail.com</a>
<a href=""mailto:be.s.t.o.p.t.ion1987@gmail.com"">be.s.t.o.p.t.ion1987@gmail.com</a>
<a href=""mailto:b.es.to.p.ti.o.n198.7@gmail.com"">b.es.to.p.ti.o.n198.7@gmail.com</a>
<a href=""mailto:best.o.pt.i.o.n.1.9.8.7@gmail.com"">best.o.pt.i.o.n.1.9.8.7@gmail.com</a>
<a href=""mailto:besto.ptio.n1.9.8.7@gmail.com"">besto.ptio.n1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.t.op.t.ion.1.9.8.7@gmail.com"">b.es.t.op.t.ion.1.9.8.7@gmail.com</a>
<a href=""mailto:b.e.sto.pt.i.o.n19.8.7@gmail.com"">b.e.sto.pt.i.o.n19.8.7@gmail.com</a>
<a href=""mailto:best.o.p.ti.on19.87@gmail.com"">best.o.p.ti.on19.87@gmail.com</a>
<a href=""mailto:bes.top.t.i.o.n1.987@gmail.com"">bes.top.t.i.o.n1.987@gmail.com</a>
<a href=""mailto:be.s.t.o.p.t.ion19.87@gmail.com"">be.s.t.o.p.t.ion19.87@gmail.com</a>
<a href=""mailto:b.e.st.o.ptio.n19.87@gmail.com"">b.e.st.o.ptio.n19.87@gmail.com</a>
<a href=""mailto:bestopt.io.n.1.9.8.7@gmail.com"">bestopt.io.n.1.9.8.7@gmail.com</a>
<a href=""mailto:b.es.to.p.t.i.on.1.98.7@gmail.com"">b.es.to.p.t.i.on.1.98.7@gmail.com</a>
<a href=""mailto:besto.p.t.i.on.1.987@gmail.com"">besto.p.t.i.on.1.987@gmail.com</a>
<a href=""mailto:be.s.t.opt.io.n198.7@gmail.com"">be.s.t.opt.io.n198.7@gmail.com</a>
<a href=""mailto:b.est.o.ptio.n19.87@gmail.com"">b.est.o.ptio.n19.87@gmail.com</a>
<a href=""mailto:be.st.o.ptio.n19.87@gmail.com"">be.st.o.ptio.n19.87@gmail.com</a>
<a href=""mailto:bes.topti.o.n1.987@gmail.com"">bes.topti.o.n1.987@gmail.com</a>
<a href=""mailto:be.sto.pti.o.n.19.8.7@gmail.com"">be.sto.pti.o.n.19.8.7@gmail.com</a>
<a href=""mailto:b.est.opti.on.1.987@gmail.com"">b.est.opti.on.1.987@gmail.com</a>
<a href=""mailto:b.e.sto.pti.on.1.987@gmail.com"">b.e.sto.pti.on.1.987@gmail.com</a>
<a href=""mailto:be.st.op.t.ion.19.8.7@gmail.com"">be.st.op.t.ion.19.8.7@gmail.com</a>
<a href=""mailto:be.stop.tion19.8.7@gmail.com"">be.stop.tion19.8.7@gmail.com</a>
<a href=""mailto:b.e.st.o.pti.o.n.19.8.7@gmail.com"">b.e.st.o.pti.o.n.19.8.7@gmail.com</a>
<a href=""mailto:be.s.top.ti.on.1.98.7@gmail.com"">be.s.top.ti.on.1.98.7@gmail.com</a>
<a href=""mailto:b.e.sto.ptio.n1.9.87@gmail.com"">b.e.sto.ptio.n1.9.87@gmail.com</a>
<a href=""mailto:be.s.top.t.i.o.n.1.9.87@gmail.com"">be.s.top.t.i.o.n.1.9.87@gmail.com</a>
<a href=""mailto:be.st.o.p.t.i.o.n1.987@gmail.com"">be.st.o.p.t.i.o.n1.987@gmail.com</a>
<a href=""mailto:bes.t.opti.o.n1.98.7@gmail.com"">bes.t.opti.o.n1.98.7@gmail.com</a>
<a href=""mailto:b.e.st.op.t.i.o.n.1.98.7@gmail.com"">b.e.st.op.t.i.o.n.1.98.7@gmail.com</a>
<a href=""mailto:best.op.tion.198.7@gmail.com"">best.op.tion.198.7@gmail.com</a>
<a href=""mailto:bes.to.p.t.i.o.n1.98.7@gmail.com"">bes.to.p.t.i.o.n1.98.7@gmail.com</a>
<a href=""mailto:b.es.to.pti.o.n.1987@gmail.com"">b.es.to.pti.o.n.1987@gmail.com</a>
<a href=""mailto:be.s.t.op.tio.n.1.9.87@gmail.com"">be.s.t.op.tio.n.1.9.87@gmail.com</a>
<a href=""mailto:be.s.top.tion198.7@gmail.com"">be.s.top.tion198.7@gmail.com</a>
<a href=""mailto:toolsseller42@gmail.com"">toolsseller42@gmail.com</a>
<a href=""mailto:to.o.lss.ell.er.4.2@gmail.com"">to.o.lss.ell.er.4.2@gmail.com</a>
<a href=""mailto:tool.ss.el.le.r42@gmail.com"">tool.ss.el.le.r42@gmail.com</a>
<a href=""mailto:t.o.ol.s.s.e.l.ler4.2@gmail.com"">t.o.ol.s.s.e.l.ler4.2@gmail.com</a>
<a href=""mailto:t.o.o.lss.el.l.er4.2@gmail.com"">t.o.o.lss.el.l.er4.2@gmail.com</a>
<a href=""mailto:to.o.l.s.s.e.l.le.r.4.2@gmail.com"">to.o.l.s.s.e.l.le.r.4.2@gmail.com</a>
<a href=""mailto:toolss.e.lle.r42@gmail.com"">toolss.e.lle.r42@gmail.com</a>
<a href=""mailto:t.oo.lsse.l.l.er.4.2@gmail.com"">t.oo.lsse.l.l.er.4.2@gmail.com</a>
<a href=""mailto:t.oo.l.s.s.el.l.e.r.42@gmail.com"">t.oo.l.s.s.el.l.e.r.42@gmail.com</a>
<a href=""mailto:t.ool.s.seller4.2@gmail.com"">t.ool.s.seller4.2@gmail.com</a>
<a href=""mailto:tool.sse.ll.er.42@gmail.com"">tool.sse.ll.er.42@gmail.com</a>
<a href=""mailto:t.oo.l.ss.e.ller42@gmail.com"">t.oo.l.ss.e.ller42@gmail.com</a>
<a href=""mailto:to.ol.sse.lle.r4.2@gmail.com"">to.ol.sse.lle.r4.2@gmail.com</a>
<a href=""mailto:too.l.s.s.e.lle.r42@gmail.com"">too.l.s.s.e.lle.r42@gmail.com</a>
<a href=""mailto:t.o.o.l.sse.ller.4.2@gmail.com"">t.o.o.l.sse.ller.4.2@gmail.com</a>
<a href=""mailto:t.o.ol.ss.ell.er42@gmail.com"">t.o.ol.ss.ell.er42@gmail.com</a>
<a href=""mailto:t.o.ol.ss.e.l.ler.4.2@gmail.com"">t.o.ol.ss.e.l.ler.4.2@gmail.com</a>
<a href=""mailto:toolssell.e.r42@gmail.com"">toolssell.e.r42@gmail.com</a>
<a href=""mailto:t.oo.ls.se.ller.4.2@gmail.com"">t.oo.ls.se.ller.4.2@gmail.com</a>
<a href=""mailto:too.lsse.lle.r4.2@gmail.com"">too.lsse.lle.r4.2@gmail.com</a>
<a href=""mailto:to.olss.e.l.l.e.r.4.2@gmail.com"">to.olss.e.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.oo.lss.e.l.l.er.42@gmail.com"">t.oo.lss.e.l.l.er.42@gmail.com</a>
<a href=""mailto:tool.ssel.le.r4.2@gmail.com"">tool.ssel.le.r4.2@gmail.com</a>
<a href=""mailto:too.l.ss.e.ll.er.42@gmail.com"">too.l.ss.e.ll.er.42@gmail.com</a>
<a href=""mailto:t.o.ols.s.e.l.l.er.42@gmail.com"">t.o.ols.s.e.l.l.er.42@gmail.com</a>
<a href=""mailto:tools.selle.r.4.2@gmail.com"">tools.selle.r.4.2@gmail.com</a>
<a href=""mailto:t.ools.sell.er.4.2@gmail.com"">t.ools.sell.er.4.2@gmail.com</a>
<a href=""mailto:tool.sse.ll.er.4.2@gmail.com"">tool.sse.ll.er.4.2@gmail.com</a>
<a href=""mailto:too.l.ss.e.lle.r.4.2@gmail.com"">too.l.ss.e.lle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.s.el.l.e.r42@gmail.com"">t.o.o.ls.s.el.l.e.r42@gmail.com</a>
<a href=""mailto:t.o.ol.sse.l.ler.4.2@gmail.com"">t.o.ol.sse.l.ler.4.2@gmail.com</a>
<a href=""mailto:tool.ssel.le.r.4.2@gmail.com"">tool.ssel.le.r.4.2@gmail.com</a>
<a href=""mailto:to.o.lss.elle.r42@gmail.com"">to.o.lss.elle.r42@gmail.com</a>
<a href=""mailto:too.l.s.s.el.le.r4.2@gmail.com"">too.l.s.s.el.le.r4.2@gmail.com</a>
<a href=""mailto:to.ol.ss.e.l.l.er.4.2@gmail.com"">to.ol.ss.e.l.l.er.4.2@gmail.com</a>
<a href=""mailto:t.ool.sse.l.le.r.4.2@gmail.com"">t.ool.sse.l.le.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.sse.l.ler42@gmail.com"">t.o.o.l.sse.l.ler42@gmail.com</a>
<a href=""mailto:t.o.o.l.s.se.l.ler.42@gmail.com"">t.o.o.l.s.se.l.ler.42@gmail.com</a>
<a href=""mailto:t.oo.lsse.l.l.er42@gmail.com"">t.oo.lsse.l.l.er42@gmail.com</a>
<a href=""mailto:t.o.o.lsse.l.le.r42@gmail.com"">t.o.o.lsse.l.le.r42@gmail.com</a>
<a href=""mailto:to.o.ls.sel.le.r.4.2@gmail.com"">to.o.ls.sel.le.r.4.2@gmail.com</a>
<a href=""mailto:to.olssell.er42@gmail.com"">to.olssell.er42@gmail.com</a>
<a href=""mailto:t.oo.l.ss.e.l.ler42@gmail.com"">t.oo.l.ss.e.l.ler42@gmail.com</a>
<a href=""mailto:toolssell.er42@gmail.com"">toolssell.er42@gmail.com</a>
<a href=""mailto:to.olss.e.l.ler.42@gmail.com"">to.olss.e.l.ler.42@gmail.com</a>
<a href=""mailto:too.l.s.s.e.l.ler.4.2@gmail.com"">too.l.s.s.e.l.ler.4.2@gmail.com</a>
<a href=""mailto:t.ool.s.s.elle.r.4.2@gmail.com"">t.ool.s.s.elle.r.4.2@gmail.com</a>
<a href=""mailto:to.ol.sse.l.le.r.42@gmail.com"">to.ol.sse.l.le.r.42@gmail.com</a>
<a href=""mailto:t.oo.l.sse.lle.r.4.2@gmail.com"">t.oo.l.sse.lle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.lsse.ll.er42@gmail.com"">t.o.o.lsse.ll.er42@gmail.com</a>
<a href=""mailto:to.o.l.sse.l.ler4.2@gmail.com"">to.o.l.sse.l.ler4.2@gmail.com</a>
<a href=""mailto:tool.s.s.e.l.l.e.r.4.2@gmail.com"">tool.s.s.e.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:too.l.sse.l.l.e.r.4.2@gmail.com"">too.l.sse.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.o.ols.s.eller.4.2@gmail.com"">t.o.ols.s.eller.4.2@gmail.com</a>
<a href=""mailto:too.ls.s.ell.e.r42@gmail.com"">too.ls.s.ell.e.r42@gmail.com</a>
<a href=""mailto:t.oo.l.ss.el.l.e.r4.2@gmail.com"">t.oo.l.ss.el.l.e.r4.2@gmail.com</a>
<a href=""mailto:too.l.s.sell.er.4.2@gmail.com"">too.l.s.sell.er.4.2@gmail.com</a>
<a href=""mailto:t.o.ol.sse.l.le.r42@gmail.com"">t.o.ol.sse.l.le.r42@gmail.com</a>
<a href=""mailto:t.o.ol.s.s.e.l.l.e.r42@gmail.com"">t.o.ol.s.s.e.l.l.e.r42@gmail.com</a>
<a href=""mailto:too.l.s.se.ller42@gmail.com"">too.l.s.se.ller42@gmail.com</a>
<a href=""mailto:t.ool.s.se.ller.4.2@gmail.com"">t.ool.s.se.ller.4.2@gmail.com</a>
<a href=""mailto:to.ols.s.e.lle.r.4.2@gmail.com"">to.ols.s.e.lle.r.4.2@gmail.com</a>
<a href=""mailto:toolsseller42@gmail.com"">toolsseller42@gmail.com</a>
<a href=""mailto:t.o.o.ls.s.e.l.l.er4.2@gmail.com"">t.o.o.ls.s.e.l.l.er4.2@gmail.com</a>
<a href=""mailto:t.oolss.e.l.ler42@gmail.com"">t.oolss.e.l.ler42@gmail.com</a>
<a href=""mailto:t.o.olsse.lle.r.4.2@gmail.com"">t.o.olsse.lle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.ol.s.se.ll.er.4.2@gmail.com"">t.o.ol.s.se.ll.er.4.2@gmail.com</a>
<a href=""mailto:t.oo.l.sse.l.l.er.42@gmail.com"">t.oo.l.sse.l.l.er.42@gmail.com</a>
<a href=""mailto:too.l.ssel.l.e.r42@gmail.com"">too.l.ssel.l.e.r42@gmail.com</a>
<a href=""mailto:too.l.sse.ll.er42@gmail.com"">too.l.sse.ll.er42@gmail.com</a>
<a href=""mailto:t.oo.l.s.seller42@gmail.com"">t.oo.l.s.seller42@gmail.com</a>
<a href=""mailto:to.o.lss.elle.r4.2@gmail.com"">to.o.lss.elle.r4.2@gmail.com</a>
<a href=""mailto:to.ols.se.l.l.e.r42@gmail.com"">to.ols.se.l.l.e.r42@gmail.com</a>
<a href=""mailto:t.ool.ssel.ler.42@gmail.com"">t.ool.ssel.ler.42@gmail.com</a>
<a href=""mailto:t.oo.ls.s.ell.er42@gmail.com"">t.oo.ls.s.ell.er42@gmail.com</a>
<a href=""mailto:toolss.eller42@gmail.com"">toolss.eller42@gmail.com</a>
<a href=""mailto:too.l.sse.l.le.r.42@gmail.com"">too.l.sse.l.le.r.42@gmail.com</a>
<a href=""mailto:too.l.s.se.l.le.r4.2@gmail.com"">too.l.s.se.l.le.r4.2@gmail.com</a>
<a href=""mailto:tool.s.sell.er4.2@gmail.com"">tool.s.sell.er4.2@gmail.com</a>
<a href=""mailto:toolss.elle.r.42@gmail.com"">toolss.elle.r.42@gmail.com</a>
<a href=""mailto:t.o.o.ls.s.elle.r4.2@gmail.com"">t.o.o.ls.s.elle.r4.2@gmail.com</a>
<a href=""mailto:to.o.lsse.l.l.e.r.42@gmail.com"">to.o.lsse.l.l.e.r.42@gmail.com</a>
<a href=""mailto:to.ol.s.s.eller.4.2@gmail.com"">to.ol.s.s.eller.4.2@gmail.com</a>
<a href=""mailto:to.o.lss.e.l.l.e.r4.2@gmail.com"">to.o.lss.e.l.l.e.r4.2@gmail.com</a>
<a href=""mailto:to.ols.s.ell.e.r42@gmail.com"">to.ols.s.ell.e.r42@gmail.com</a>
<a href=""mailto:to.o.l.ss.e.l.le.r4.2@gmail.com"">to.o.l.ss.e.l.le.r4.2@gmail.com</a>
<a href=""mailto:t.oo.ls.s.ell.er4.2@gmail.com"">t.oo.ls.s.ell.er4.2@gmail.com</a>
<a href=""mailto:toolss.e.l.ler4.2@gmail.com"">toolss.e.l.ler4.2@gmail.com</a>
<a href=""mailto:to.o.l.s.s.e.l.l.e.r.42@gmail.com"">to.o.l.s.s.e.l.l.e.r.42@gmail.com</a>
<a href=""mailto:tool.ssel.le.r.42@gmail.com"">tool.ssel.le.r.42@gmail.com</a>
<a href=""mailto:to.ol.s.s.el.l.er42@gmail.com"">to.ol.s.s.el.l.er42@gmail.com</a>
<a href=""mailto:t.oo.lss.ell.e.r.4.2@gmail.com"">t.oo.lss.ell.e.r.4.2@gmail.com</a>
<a href=""mailto:to.ol.ssell.er4.2@gmail.com"">to.ol.ssell.er4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.ss.e.l.le.r.4.2@gmail.com"">t.o.o.l.ss.e.l.le.r.4.2@gmail.com</a>
<a href=""mailto:tool.s.s.el.ler.42@gmail.com"">tool.s.s.el.ler.42@gmail.com</a>
<a href=""mailto:tools.s.e.l.l.e.r.4.2@gmail.com"">tools.s.e.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.o.ol.s.s.el.l.e.r.4.2@gmail.com"">t.o.ol.s.s.el.l.e.r.4.2@gmail.com</a>
<a href=""mailto:too.l.s.se.l.ler.42@gmail.com"">too.l.s.se.l.ler.42@gmail.com</a>
<a href=""mailto:too.l.s.se.lle.r42@gmail.com"">too.l.s.se.lle.r42@gmail.com</a>
<a href=""mailto:too.ls.s.e.l.l.e.r.4.2@gmail.com"">too.ls.s.e.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.ool.s.s.el.ler.4.2@gmail.com"">t.ool.s.s.el.ler.4.2@gmail.com</a>
<a href=""mailto:tool.sse.l.ler.42@gmail.com"">tool.sse.l.ler.42@gmail.com</a>
<a href=""mailto:t.o.o.ls.se.l.ler42@gmail.com"">t.o.o.ls.se.l.ler42@gmail.com</a>
<a href=""mailto:to.o.l.ss.e.l.l.er42@gmail.com"">to.o.l.ss.e.l.l.er42@gmail.com</a>
<a href=""mailto:too.lssell.e.r4.2@gmail.com"">too.lssell.e.r4.2@gmail.com</a>
<a href=""mailto:t.oo.l.s.s.el.le.r4.2@gmail.com"">t.oo.l.s.s.el.le.r4.2@gmail.com</a>
<a href=""mailto:to.o.l.ss.ell.e.r.42@gmail.com"">to.o.l.ss.ell.e.r.42@gmail.com</a>
<a href=""mailto:t.ool.s.s.ell.e.r.42@gmail.com"">t.ool.s.s.ell.e.r.42@gmail.com</a>
<a href=""mailto:t.o.ols.se.ll.er.42@gmail.com"">t.o.ols.se.ll.er.42@gmail.com</a>
<a href=""mailto:t.o.o.ls.se.l.ler.4.2@gmail.com"">t.o.o.ls.se.l.ler.4.2@gmail.com</a>
<a href=""mailto:to.ol.ssel.l.e.r.42@gmail.com"">to.ol.ssel.l.e.r.42@gmail.com</a>
<a href=""mailto:t.o.olssel.l.er42@gmail.com"">t.o.olssel.l.er42@gmail.com</a>
<a href=""mailto:to.olssell.er.4.2@gmail.com"">to.olssell.er.4.2@gmail.com</a>
<a href=""mailto:t.o.olss.e.ll.er4.2@gmail.com"">t.o.olss.e.ll.er4.2@gmail.com</a>
<a href=""mailto:to.ol.s.s.e.ll.e.r.42@gmail.com"">to.ol.s.s.e.ll.e.r.42@gmail.com</a>
<a href=""mailto:to.o.ls.se.lle.r.42@gmail.com"">to.o.ls.se.lle.r.42@gmail.com</a>
<a href=""mailto:t.oolsse.lle.r.42@gmail.com"">t.oolsse.lle.r.42@gmail.com</a>
<a href=""mailto:t.o.ols.se.l.l.e.r.4.2@gmail.com"">t.o.ols.se.l.l.e.r.4.2@gmail.com</a>
<a href=""mailto:t.oo.lssel.l.e.r.4.2@gmail.com"">t.oo.lssel.l.e.r.4.2@gmail.com</a>
<a href=""mailto:toolsse.ller.42@gmail.com"">toolsse.ller.42@gmail.com</a>
<a href=""mailto:to.ols.s.e.ll.er42@gmail.com"">to.ols.s.e.ll.er42@gmail.com</a>
<a href=""mailto:tools.s.eller.42@gmail.com"">tools.s.eller.42@gmail.com</a>
<a href=""mailto:to.olsse.ll.er.42@gmail.com"">to.olsse.ll.er.42@gmail.com</a>
<a href=""mailto:t.o.olss.e.ll.er.4.2@gmail.com"">t.o.olss.e.ll.er.4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.s.sel.l.er.4.2@gmail.com"">t.o.o.l.s.sel.l.er.4.2@gmail.com</a>
<a href=""mailto:t.oo.lssel.l.er.42@gmail.com"">t.oo.lssel.l.er.42@gmail.com</a>
<a href=""mailto:too.l.ss.e.l.l.er4.2@gmail.com"">too.l.ss.e.l.l.er4.2@gmail.com</a>
<a href=""mailto:to.ol.sse.ll.e.r.42@gmail.com"">to.ol.sse.ll.e.r.42@gmail.com</a>
<a href=""mailto:to.ol.ss.e.l.l.e.r42@gmail.com"">to.ol.ss.e.l.l.e.r42@gmail.com</a>
<a href=""mailto:t.ool.ssel.ler42@gmail.com"">t.ool.ssel.ler42@gmail.com</a>
<a href=""mailto:t.o.ol.s.se.ll.e.r.4.2@gmail.com"">t.o.ol.s.se.ll.e.r.4.2@gmail.com</a>
<a href=""mailto:to.o.ls.s.elle.r4.2@gmail.com"">to.o.ls.s.elle.r4.2@gmail.com</a>
<a href=""mailto:t.oo.l.ss.eller.42@gmail.com"">t.oo.l.ss.eller.42@gmail.com</a>
<a href=""mailto:to.ols.s.eller42@gmail.com"">to.ols.s.eller42@gmail.com</a>
<a href=""mailto:to.o.ls.selle.r.42@gmail.com"">to.o.ls.selle.r.42@gmail.com</a>
<a href=""mailto:t.oo.l.s.s.el.l.e.r42@gmail.com"">t.oo.l.s.s.el.l.e.r42@gmail.com</a>
<a href=""mailto:to.o.l.sse.lle.r42@gmail.com"">to.o.l.sse.lle.r42@gmail.com</a>
<a href=""mailto:tools.s.e.ll.er.4.2@gmail.com"">tools.s.e.ll.er.4.2@gmail.com</a>
<a href=""mailto:t.o.o.lsselle.r42@gmail.com"">t.o.o.lsselle.r42@gmail.com</a>
<a href=""mailto:t.ools.s.el.le.r42@gmail.com"">t.ools.s.el.le.r42@gmail.com</a>
<a href=""mailto:tool.s.s.elle.r.4.2@gmail.com"">tool.s.s.elle.r.4.2@gmail.com</a>
<a href=""mailto:too.ls.s.elle.r.4.2@gmail.com"">too.ls.s.elle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.lss.ell.er.42@gmail.com"">t.o.o.lss.ell.er.42@gmail.com</a>
<a href=""mailto:to.olss.el.le.r.4.2@gmail.com"">to.olss.el.le.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.ss.el.le.r42@gmail.com"">t.o.o.l.ss.el.le.r42@gmail.com</a>
<a href=""mailto:t.o.o.l.s.s.elle.r4.2@gmail.com"">t.o.o.l.s.s.elle.r4.2@gmail.com</a>
<a href=""mailto:to.o.ls.se.lle.r42@gmail.com"">to.o.ls.se.lle.r42@gmail.com</a>
<a href=""mailto:t.oolssel.l.e.r.42@gmail.com"">t.oolssel.l.e.r.42@gmail.com</a>
<a href=""mailto:toolsse.ll.er.4.2@gmail.com"">toolsse.ll.er.4.2@gmail.com</a>
<a href=""mailto:t.ool.sse.l.l.e.r4.2@gmail.com"">t.ool.sse.l.l.e.r4.2@gmail.com</a>
<a href=""mailto:t.ool.s.se.lle.r42@gmail.com"">t.ool.s.se.lle.r42@gmail.com</a>
<a href=""mailto:to.o.l.ssel.l.er42@gmail.com"">to.o.l.ssel.l.er42@gmail.com</a>
<a href=""mailto:t.oo.l.s.sel.ler.4.2@gmail.com"">t.oo.l.s.sel.ler.4.2@gmail.com</a>
<a href=""mailto:to.ols.s.eller4.2@gmail.com"">to.ols.s.eller4.2@gmail.com</a>
<a href=""mailto:to.o.l.s.sell.er.42@gmail.com"">to.o.l.s.sell.er.42@gmail.com</a>
<a href=""mailto:t.oolss.el.le.r.4.2@gmail.com"">t.oolss.el.le.r.4.2@gmail.com</a>
<a href=""mailto:too.lssell.er4.2@gmail.com"">too.lssell.er4.2@gmail.com</a>
<a href=""mailto:t.oolsse.ller42@gmail.com"">t.oolsse.ller42@gmail.com</a>
<a href=""mailto:t.oo.l.s.s.el.ler.4.2@gmail.com"">t.oo.l.s.s.el.ler.4.2@gmail.com</a>
<a href=""mailto:too.ls.se.ll.er.4.2@gmail.com"">too.ls.se.ll.er.4.2@gmail.com</a>
<a href=""mailto:to.o.l.ss.e.ll.e.r4.2@gmail.com"">to.o.l.ss.e.ll.e.r4.2@gmail.com</a>
<a href=""mailto:tools.s.eller4.2@gmail.com"">tools.s.eller4.2@gmail.com</a>
<a href=""mailto:too.l.sseller42@gmail.com"">too.l.sseller42@gmail.com</a>
<a href=""mailto:to.ol.s.s.e.l.le.r4.2@gmail.com"">to.ol.s.s.e.l.le.r4.2@gmail.com</a>
<a href=""mailto:t.o.o.lssel.l.er42@gmail.com"">t.o.o.lssel.l.er42@gmail.com</a>
<a href=""mailto:too.l.s.selle.r.4.2@gmail.com"">too.l.s.selle.r.4.2@gmail.com</a>
<a href=""mailto:t.o.o.lss.ell.e.r.4.2@gmail.com"">t.o.o.lss.ell.e.r.4.2@gmail.com</a>
<a href=""mailto:to.o.l.ssel.ler42@gmail.com"">to.o.l.ssel.ler42@gmail.com</a>
<a href=""mailto:t.o.o.lss.el.ler4.2@gmail.com"">t.o.o.lss.el.ler4.2@gmail.com</a>
<a href=""mailto:to.olssel.ler.42@gmail.com"">to.olssel.ler.42@gmail.com</a>
<a href=""mailto:to.o.l.ss.e.lle.r42@gmail.com"">to.o.l.ss.e.lle.r42@gmail.com</a>
<a href=""mailto:t.o.ol.ss.e.ll.er42@gmail.com"">t.o.ol.ss.e.ll.er42@gmail.com</a>
<a href=""mailto:t.oo.ls.se.l.l.e.r42@gmail.com"">t.oo.ls.se.l.l.e.r42@gmail.com</a>
<a href=""mailto:t.o.o.lssell.er.4.2@gmail.com"">t.o.o.lssell.er.4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.se.ller.4.2@gmail.com"">t.o.o.ls.se.ller.4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.sse.ller.42@gmail.com"">t.o.o.l.sse.ller.42@gmail.com</a>
<a href=""mailto:t.oo.l.s.se.ller42@gmail.com"">t.oo.l.s.se.ller42@gmail.com</a>
<a href=""mailto:to.ol.ss.el.l.er4.2@gmail.com"">to.ol.ss.el.l.er4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.se.ll.er4.2@gmail.com"">t.o.o.ls.se.ll.er4.2@gmail.com</a>
<a href=""mailto:t.o.o.l.ss.eller.4.2@gmail.com"">t.o.o.l.ss.eller.4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.sel.ler.42@gmail.com"">t.o.o.ls.sel.ler.42@gmail.com</a>
<a href=""mailto:tool.ss.e.lle.r42@gmail.com"">tool.ss.e.lle.r42@gmail.com</a>
<a href=""mailto:too.l.ss.e.lle.r4.2@gmail.com"">too.l.ss.e.lle.r4.2@gmail.com</a>
<a href=""mailto:too.ls.se.l.ler.42@gmail.com"">too.ls.se.l.ler.42@gmail.com</a>
<a href=""mailto:tool.s.sel.l.e.r4.2@gmail.com"">tool.s.sel.l.e.r4.2@gmail.com</a>
<a href=""mailto:to.ols.sell.e.r.42@gmail.com"">to.ols.sell.e.r.42@gmail.com</a>
<a href=""mailto:t.o.ol.s.s.e.lle.r.4.2@gmail.com"">t.o.ol.s.s.e.lle.r.4.2@gmail.com</a>
<a href=""mailto:toolss.ell.er42@gmail.com"">toolss.ell.er42@gmail.com</a>
<a href=""mailto:too.ls.seller42@gmail.com"">too.ls.seller42@gmail.com</a>
<a href=""mailto:too.ls.sel.l.e.r4.2@gmail.com"">too.ls.sel.l.e.r4.2@gmail.com</a>
<a href=""mailto:t.o.ol.ss.eller4.2@gmail.com"">t.o.ol.ss.eller4.2@gmail.com</a>
<a href=""mailto:t.o.o.ls.sell.e.r4.2@gmail.com"">t.o.o.ls.sell.e.r4.2@gmail.com</a>
<a href=""mailto:to.ol.s.se.l.le.r.42@gmail.com"">to.ol.s.se.l.le.r.42@gmail.com</a>
<a href=""mailto:t.ool.sseller42@gmail.com"">t.ool.sseller42@gmail.com</a>
<a href=""mailto:too.lss.el.le.r.42@gmail.com"">too.lss.el.le.r.42@gmail.com</a>
<a href=""mailto:t.ool.sse.l.l.e.r42@gmail.com"">t.ool.sse.l.l.e.r42@gmail.com</a>
<a href=""mailto:t.o.o.lssel.le.r.4.2@gmail.com"">t.o.o.lssel.le.r.4.2@gmail.com</a>
<a href=""mailto:to.o.l.sse.lle.r.42@gmail.com"">to.o.l.sse.lle.r.42@gmail.com</a>
<a href=""mailto:t.o.o.l.sse.ll.er.42@gmail.com"">t.o.o.l.sse.ll.er.42@gmail.com</a>
<a href=""mailto:to.o.ls.s.el.l.er.4.2@gmail.com"">to.o.ls.s.el.l.er.4.2@gmail.com</a>
<a href=""mailto:t.ools.s.eller.4.2@gmail.com"">t.ools.s.eller.4.2@gmail.com</a>"
mqr3abD3,Untitled,35657,C++,Sunday 1st of October 2023 07:46:38 PM CDT,"#include <iostream>
#include <iomanip> // нужна для выравнивания вывода в консоль чисел с помощью setw

using namespace std;

void Print(int** arr, int lines, int cols) {
    for (int i = 0; i < lines; i++) {
        for (int j = 0; j < cols; j++) {
            cout << setw(4) << arr[i][j];
        }
        cout << endl;
    }
    cout << endl;
}

void Fill(int** arr, int lines, int cols) {
    for (int i = 0; i < lines; i++) {
        for (int j = 0; j < cols; j++) {
            arr[i][j] = j + i * cols;
        }
    }
}

int main() {

    setlocale(LC_ALL, ""Russian"");

    int lines = 5;
    int cols = 5;

    int** arr = new int* [lines];

    for (int i = 0; i < lines; i++) {
        arr[i] = new int[cols];
    }

    Fill(arr, lines, cols);

    Print(arr, lines, cols);

    int index;

    cout << ""Введите индекс: "";

    cin >> index;

    for (int i = 0; i < lines; ++i) {
        int* temp = new int[cols + 1];
        for (int j = 0; j < index; j++) {
            temp[j] = arr[i][j];
        }
        temp[index] = 0;
        for (int j = index; j < cols; j++) {
            temp[j + 1] = arr[i][j];
        }
        delete[] arr[i];
        arr[i] = temp;
    }
    cols++;

    Print(arr, lines, cols);


    for (int i = 0; i < lines; i++) {
        delete[] arr[i];
    }
    delete[] arr;
}"
zjPbCf53,Untitled,DugganSC,C#,Sunday 1st of October 2023 07:32:30 PM CDT,"using System;
using UnityEngine.Events;
using UnityEngine.XR.Interaction.Toolkit;

namespace UnityEngine.XR.Content.Interaction
{
    /// <summary>
    /// An interactable knob that follows the rotation of the interactor
    /// </summary>
    public class XRKnob : XRBaseInteractable
    {
        const float k_ModeSwitchDeadZone = 0.1f; // Prevents rapid switching between the different rotation tracking modes

        /// <summary>
        /// Helper class used to track rotations that can go beyond 180 degrees while minimizing accumulation error
        /// </summary>
        struct TrackedRotation
        {
            /// <summary>
            /// The anchor rotation we calculate an offset from
            /// </summary>
            float m_BaseAngle;

            /// <summary>
            /// The target rotate we calculate the offset to
            /// </summary>
            float m_CurrentOffset;

            /// <summary>
            /// Any previous offsets we've added in
            /// </summary>
            float m_AccumulatedAngle;

            /// <summary>
            /// The total rotation that occurred from when this rotation started being tracked
            /// </summary>
            public float totalOffset => m_AccumulatedAngle + m_CurrentOffset;

            /// <summary>
            /// Resets the tracked rotation so that total offset returns 0
            /// </summary>
            public void Reset()
            {
                m_BaseAngle = 0.0f;
                m_CurrentOffset = 0.0f;
                m_AccumulatedAngle = 0.0f;
            }

            /// <summary>
            /// Sets a new anchor rotation while maintaining any previously accumulated offset
            /// </summary>
            /// <param name=""direction"">The XZ vector used to calculate a rotation angle</param>
            public void SetBaseFromVector(Vector3 direction)
            {
                // Update any accumulated angle
                m_AccumulatedAngle += m_CurrentOffset;

                // Now set a new base angle
                m_BaseAngle = Mathf.Atan2(direction.z, direction.x) * Mathf.Rad2Deg;
                m_CurrentOffset = 0.0f;
            }

            public void SetTargetFromVector(Vector3 direction)
            {
                // Set the target angle
                var targetAngle = Mathf.Atan2(direction.z, direction.x) * Mathf.Rad2Deg;

                // Return the offset
                m_CurrentOffset = ShortestAngleDistance(m_BaseAngle, targetAngle, 360.0f);

                // If the offset is greater than 90 degrees, we update the base so we can rotate beyond 180 degrees
                if (Mathf.Abs(m_CurrentOffset) > 90.0f)
                {
                    m_BaseAngle = targetAngle;
                    m_AccumulatedAngle += m_CurrentOffset;
                    m_CurrentOffset = 0.0f;
                }
            }
        }

        // Test
        // Tes 2
        /* More Test
         * 
         * 
         * 
         * 
         */

        [Serializable]
        public class ValueChangeEvent : UnityEvent<float> { }

        [SerializeField]
        [Tooltip(""The object that is visually grabbed and manipulated"")]
        Transform m_Handle = null;

        [SerializeField]
        [Tooltip(""The value of the knob"")]
        [Range(0.0f, 1.0f)]
        float m_Value = 0.5f;

        [SerializeField]
        [Tooltip(""Whether this knob's rotation should be clamped by the angle limits"")]
        bool m_ClampedMotion = true;

        [SerializeField]
        [Tooltip(""Rotation of the knob at value '1'"")]
        float m_MaxAngle = 90.0f;

        [SerializeField]
        [Tooltip(""Rotation of the knob at value '0'"")]
        float m_MinAngle = -90.0f;

        [SerializeField]
        [Tooltip(""Angle increments to support, if greater than '0'"")]
        float m_AngleIncrement = 0.0f;

        [SerializeField]
        [Tooltip(""The position of the interactor controls rotation when outside this radius"")]
        float m_PositionTrackedRadius = 0.1f;

        [SerializeField]
        [Tooltip(""How much controller rotation "")]
        float m_TwistSensitivity = 1.5f;

        [SerializeField]
        [Tooltip(""Events to trigger when the knob is rotated"")]
        ValueChangeEvent m_OnValueChange = new ValueChangeEvent();

        IXRSelectInteractor m_Interactor;

        bool m_PositionDriven = false;
        bool m_UpVectorDriven = false;

        TrackedRotation m_PositionAngles = new TrackedRotation();
        TrackedRotation m_UpVectorAngles = new TrackedRotation();
        TrackedRotation m_ForwardVectorAngles = new TrackedRotation();

        float m_BaseKnobRotation = 0.0f;

        /// <summary>
        /// The object that is visually grabbed and manipulated
        /// </summary>
        public Transform handle
        {
            get => m_Handle;
            set => m_Handle = value;
        }

        /// <summary>
        /// The value of the knob
        /// </summary>
        public float value
        {
            get => m_Value;
            set
            {
                SetValue(value);
                SetKnobRotation(ValueToRotation());
            }
        }

        /// <summary>
        /// Whether this knob's rotation should be clamped by the angle limits
        /// </summary>
        public bool clampedMotion
        {
            get => m_ClampedMotion;
            set => m_ClampedMotion = value;
        }

        /// <summary>
        /// Rotation of the knob at value '1'
        /// </summary>
        public float maxAngle
        {
            get => m_MaxAngle;
            set => m_MaxAngle = value;
        }

        /// <summary>
        /// Rotation of the knob at value '0'
        /// </summary>
        public float minAngle
        {
            get => m_MinAngle;
            set => m_MinAngle = value;
        }

        /// <summary>
        /// The position of the interactor controls rotation when outside this radius
        /// </summary>
        public float positionTrackedRadius
        {
            get => m_PositionTrackedRadius;
            set => m_PositionTrackedRadius = value;
        }

        /// <summary>
        /// Events to trigger when the knob is rotated
        /// </summary>
        public ValueChangeEvent onValueChange => m_OnValueChange;

        void Start()
        {
            SetValue(m_Value);
            SetKnobRotation(ValueToRotation());
        }

        protected override void OnEnable()
        {
            base.OnEnable();
            selectEntered.AddListener(StartGrab);
            selectExited.AddListener(EndGrab);
        }

        protected override void OnDisable()
        {
            selectEntered.RemoveListener(StartGrab);
            selectExited.RemoveListener(EndGrab);
            base.OnDisable();
        }

        void StartGrab(SelectEnterEventArgs args)
        {
            m_Interactor = args.interactorObject;

            m_PositionAngles.Reset();
            m_UpVectorAngles.Reset();
            m_ForwardVectorAngles.Reset();

            UpdateBaseKnobRotation();
            UpdateRotation(true);
        }

        void EndGrab(SelectExitEventArgs args)
        {
            m_Interactor = null;
        }

        public override void ProcessInteractable(XRInteractionUpdateOrder.UpdatePhase updatePhase)
        {
            base.ProcessInteractable(updatePhase);

            if (updatePhase == XRInteractionUpdateOrder.UpdatePhase.Dynamic)
            {
                if (isSelected)
                {
                    UpdateRotation();
                }
            }
        }

        void UpdateRotation(bool freshCheck = false)
        {
            // Are we in position offset or direction rotation mode?
            var interactorTransform = m_Interactor.GetAttachTransform(this);

            // We cache the three potential sources of rotation - the position offset, the forward vector of the controller, and up vector of the controller
            // We store any data used for determining which rotation to use, then flatten the vectors to the local xz plane
            var localOffset = transform.InverseTransformVector(interactorTransform.position - m_Handle.position);
            localOffset.y = 0.0f;
            var radiusOffset = transform.TransformVector(localOffset).magnitude;
            localOffset.Normalize();

            var localForward = transform.InverseTransformDirection(interactorTransform.forward);
            var localY = Math.Abs(localForward.y);
            localForward.y = 0.0f;
            localForward.Normalize();

            var localUp = transform.InverseTransformDirection(interactorTransform.up);
            localUp.y = 0.0f;
            localUp.Normalize();


            if (m_PositionDriven && !freshCheck)
                radiusOffset *= (1.0f + k_ModeSwitchDeadZone);

            // Determine when a certain source of rotation won't contribute - in that case we bake in the offset it has applied
            // and set a new anchor when they can contribute again
            if (radiusOffset >= m_PositionTrackedRadius)
            {
                if (!m_PositionDriven || freshCheck)
                {
                    m_PositionAngles.SetBaseFromVector(localOffset);
                    m_PositionDriven = true;
                }
            }
            else
                m_PositionDriven = false;

            // If it's not a fresh check, then we weight the local Y up or down to keep it from flickering back and forth at boundaries
            if (!freshCheck)
            {
                if (!m_UpVectorDriven)
                    localY *= (1.0f - (k_ModeSwitchDeadZone * 0.5f));
                else
                    localY *= (1.0f + (k_ModeSwitchDeadZone * 0.5f));
            }

            if (localY > 0.707f)
            {
                if (!m_UpVectorDriven || freshCheck)
                {
                    m_UpVectorAngles.SetBaseFromVector(localUp);
                    m_UpVectorDriven = true;
                }
            }
            else
            {
                if (m_UpVectorDriven || freshCheck)
                {
                    m_ForwardVectorAngles.SetBaseFromVector(localForward);
                    m_UpVectorDriven = false;
                }
            }

            // Get angle from position
            if (m_PositionDriven)
                m_PositionAngles.SetTargetFromVector(localOffset);

            if (m_UpVectorDriven)
                m_UpVectorAngles.SetTargetFromVector(localUp);
            else
                m_ForwardVectorAngles.SetTargetFromVector(localForward);

            // Apply offset to base knob rotation to get new knob rotation
            var knobRotation = m_BaseKnobRotation - ((m_UpVectorAngles.totalOffset + m_ForwardVectorAngles.totalOffset) * m_TwistSensitivity) - m_PositionAngles.totalOffset;

            // Clamp to range
            if (m_ClampedMotion)
                knobRotation = Mathf.Clamp(knobRotation, m_MinAngle, m_MaxAngle);

            SetKnobRotation(knobRotation);

            // Reverse to get value
            var knobValue = (knobRotation - m_MinAngle) / (m_MaxAngle - m_MinAngle);
            SetValue(knobValue);
        }

        void SetKnobRotation(float angle)
        {
            if (m_AngleIncrement > 0)
            {
                var normalizeAngle = angle - m_MinAngle;
                angle = (Mathf.Round(normalizeAngle / m_AngleIncrement) * m_AngleIncrement) + m_MinAngle;
            }

            if (m_Handle != null)
                m_Handle.localEulerAngles = new Vector3(0.0f, angle, 0.0f);
        }

        void SetValue(float value)
        {
            if (m_ClampedMotion)
                value = Mathf.Clamp01(value);

            if (m_AngleIncrement > 0)
            {
                var angleRange = m_MaxAngle - m_MinAngle;
                var angle = Mathf.Lerp(0.0f, angleRange, value);
                angle = Mathf.Round(angle / m_AngleIncrement) * m_AngleIncrement;
                value = Mathf.InverseLerp(0.0f, angleRange, angle);
            }

            m_Value = value;
            m_OnValueChange.Invoke(m_Value);
        }

        float ValueToRotation()
        {
            return m_ClampedMotion ? Mathf.Lerp(m_MinAngle, m_MaxAngle, m_Value) : Mathf.LerpUnclamped(m_MinAngle, m_MaxAngle, m_Value);
        }

        void UpdateBaseKnobRotation()
        {
            m_BaseKnobRotation = Mathf.LerpUnclamped(m_MinAngle, m_MaxAngle, m_Value);
        }

        static float ShortestAngleDistance(float start, float end, float max)
        {
            var angleDelta = end - start;
            var angleSign = Mathf.Sign(angleDelta);

            angleDelta = Math.Abs(angleDelta) % max;
            if (angleDelta > (max * 0.5f))
                angleDelta = -(max - angleDelta);

            return angleDelta * angleSign;
        }

        void OnDrawGizmosSelected()
        {
            const int k_CircleSegments = 16;
            const float k_SegmentRatio = 1.0f / k_CircleSegments;

            // Nothing to do if position radius is too small
            if (m_PositionTrackedRadius <= Mathf.Epsilon)
                return;

            // Draw a circle from the handle point at size of position tracked radius
            var circleCenter = transform.position;

            if (m_Handle != null)
                circleCenter = m_Handle.position;

            var circleX = transform.right;
            var circleY = transform.forward;

            Gizmos.color = Color.green;
            var segmentCounter = 0;
            while (segmentCounter < k_CircleSegments)
            {
                var startAngle = (float)segmentCounter * k_SegmentRatio * 2.0f * Mathf.PI;
                segmentCounter++;
                var endAngle = (float)segmentCounter * k_SegmentRatio * 2.0f * Mathf.PI;

                Gizmos.DrawLine(circleCenter + (Mathf.Cos(startAngle) * circleX + Mathf.Sin(startAngle) * circleY) * m_PositionTrackedRadius,
                    circleCenter + (Mathf.Cos(endAngle) * circleX + Mathf.Sin(endAngle) * circleY) * m_PositionTrackedRadius);
            }
        }

        void OnValidate()
        {
            if (m_ClampedMotion)
                m_Value = Mathf.Clamp01(m_Value);

            if (m_MinAngle > m_MaxAngle)
                m_MinAngle = m_MaxAngle;

            SetKnobRotation(ValueToRotation());
        }
    }
}
"
zjziiVvY,Stupidly simple image series viewer,WarPie90,Delphi,Sunday 1st of October 2023 07:30:27 PM CDT,"program ImageVideoSeries;
(*
  Views an image series at specified FPS. 
  Pauses with space.
  When paused you can rewind or skip forward using arrow-keys.
*)

const
  DISK_LOCATION = 'C:\Simba\Images\';
  PAUSE_BUTTON  = VK_SPACE;
  REWIND_FRAME  = VK_LEFT;
  FORWARD_FRAME = VK_RIGHT;
  FPS           = 5;

var
  bmp: TMufasaBitmap;
  i: Int32;
  frames: TStringArray;

procedure ShowFrame(i: Int32);
begin
  bmp.Init();
  bmp.LoadFromFile(DISK_LOCATION+frames[i]);
  ShowBitmap(bmp);
  bmp.Free();
end;

procedure HandleAll();
var
  t: Double;
  isPaused: Boolean;
begin
  t := GetTimeRunning() + 1000 div FPS;
  while GetTimeRunning() < t do
  begin
    isPaused := isKeyDown(PAUSE_BUTTON);
    while isKeyDown(PAUSE_BUTTON) do Sleep(1);

    if isPaused then
    begin
      while not isKeyDown(PAUSE_BUTTON) do
      begin
        //check for rewinding
        if isKeyDown(REWIND_FRAME) then
        begin
          WriteLn('<< [frame='+ToStr(i-1)+']');
          while isKeyDown(REWIND_FRAME) do Sleep(1);
          i := Max(0,i-1);
          ShowFrame(i);
        end;

        if isKeyDown(FORWARD_FRAME) then
        begin
          WriteLn('>> [frame='+ToStr(i+1)+']');
          while isKeyDown(FORWARD_FRAME) do Sleep(1);
          i := Min(i+1, High(frames));
          ShowFrame(i);
        end;
        Sleep(1);
      end;
      while isKeyDown(PAUSE_BUTTON) do Sleep(1);
    end;
    Sleep(1);
  end;
end;


begin
  frames := GetFiles(DISK_LOCATION,'png');

  for i:=0 to High(frames) do
  begin
    ShowFrame(i);
    HandleAll();
  end;
end."
