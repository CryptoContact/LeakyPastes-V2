id,title,username,language,date,content
8ZJ4DmcA,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Thursday 14th of December 2023 11:54:13 PM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view#g2a_refund_exploit.pdf

Working as of 
13 December 2023

708704"
H7c7WUEd,Burial Grounds,calvarycemetery,HTML,Thursday 14th of December 2023 11:40:07 PM CDT,"Calvary Cemetery serves as a sanctuary of reverence and respect, committed to preserving the memory of your beloved. Our compassionate team deeply comprehends the importance of extending caring support and ensuring that their final arrangements are executed with the utmost dignity. We provide an array of burial options, including <a href=""https://calvarycemetery.org/ground-burial/""><b>burial grounds</b></a> and mausoleum entombments, all tailored to your individual preferences. Within our tranquil environment, we offer a peaceful space for contemplation and remembrance, allowing loved ones to bid their farewells in a profoundly meaningful manner. Please do not hesitate to reach out to us today to explore our burial services further and to understand how we can assist during this challenging period."
c4ZrjhWH,Syphilis Symptoms,endinghivok,HTML,Thursday 14th of December 2023 11:06:25 PM CDT,"Syphilis can present with symptoms like sores, rashes, and fever. If untreated, it can lead to severe complications. Learn more about <a href=""https://endinghivoklahoma.org/syphilis-symptoms/""><b>syphilis symptoms</b></a> and seek timely medical attention for diagnosis and treatment. Learn more about Syphilis Symptoms."
HTcgvSE6,ServerHandler,ArcaneSunku,Java,Thursday 14th of December 2023 10:57:09 PM CDT,"package git.eclipse.core.network;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.InetSocketAddress;

public class ServerHandler implements Runnable {
    protected DatagramSocket m_Socket;
    protected InetAddress m_IP;
    protected int m_Port;

    protected Thread m_Thread;
    protected volatile boolean m_Running;

    public ServerHandler(String ip, int port) {
        try {
            m_IP = InetAddress.getByName(ip);
            m_Port = port;
            m_Socket = new DatagramSocket(m_Port);
            m_Socket.setBroadcast(true);
            m_Socket.setSoTimeout(29000);
        } catch (IOException e) {
            System.err.println(e.getMessage());
        }
    }

    public synchronized void start() {
        m_Thread = new Thread(this, ""Server_Thread"");
        m_Running = m_Socket.isBound();
        m_Thread.start();
    }

    public synchronized void stop() {
        if(m_Running) m_Running = false;

        try {
            if(m_Socket != null && !m_Socket.isClosed()) m_Socket.close();
            m_Thread.join(1);
        } catch (InterruptedException e) {
            System.err.println(e.getMessage());
        }
    }

    @Override
    public void run() {
        while(m_Running) {
            if(m_Socket == null || m_Socket.isClosed()) {
                stop();
                continue;
            }

            byte[] data = new byte[1024];
            DatagramPacket packet = new DatagramPacket(data, data.length);
            try {
                m_Socket.receive(packet);
            } catch (IOException e) {
                System.err.println(e.getMessage());
            }

            if(m_Socket == null || packet.getAddress() == null) continue;

            String message = new String(packet.getData()).trim();
            System.out.println(""Client > "" + message);

            if(message.equalsIgnoreCase(""ping""))
                sendData(""pong"".getBytes(), packet.getAddress(), packet.getPort());
        }
    }

    public void sendData(byte[] data, InetAddress ipAddress, int port) {
        DatagramPacket packet = new DatagramPacket(data, data.length, ipAddress, port);
        try {
            m_Socket.send(packet);
        } catch (IOException e) {
            System.err.println(e.getMessage());
        }
    }

    public boolean isRunning() {
        return m_Running;
    }
}
"
BsDaXYd4,ClientHandler,ArcaneSunku,Java,Thursday 14th of December 2023 10:55:58 PM CDT,"package git.eclipse.core.network;

import java.io.IOException;
import java.net.*;

public class ClientHandler implements Runnable {

    protected DatagramSocket m_Socket;
    protected InetAddress m_IPAddress;
    protected int m_Port;

    protected Thread m_Thread;
    protected volatile boolean m_Connected;

    public ClientHandler(String ipAddress, int port) {
        try {
            m_IPAddress = InetAddress.getByName(ipAddress);
            m_Port = port;

            m_Socket = new DatagramSocket();
            m_Socket.setBroadcast(true);
            m_Socket.setSoTimeout(29000);

            m_Socket.connect(m_IPAddress, m_Port);
            m_Connected = m_Socket.isConnected();
        } catch (UnknownHostException | SocketException e) {
            m_Connected = false;
            System.err.println(e.getMessage());
        }
    }

    public synchronized void start() {
        m_Thread = new Thread(this, ""Client_Thread"");
        m_Thread.start();
    }

    public synchronized void stop() {
        if(m_Connected) m_Connected = false;

        try {
            if(m_Socket != null && !m_Socket.isClosed()) m_Socket.close();
            m_Thread.join(1);
        } catch (InterruptedException e) {
            System.err.println(e.getMessage());
        }
    }

    @Override
    public void run() {
        while(m_Connected) {
            if(!m_Socket.isConnected() && m_Socket.isClosed()) {
                stop();
                continue;
            }

            byte[] data = new byte[1024];
            DatagramPacket packet = new DatagramPacket(data, data.length);
            try {
                m_Socket.receive(packet);
            } catch (IOException e) {
                System.err.println(e.getMessage());
            }

            if(m_Socket == null || packet.getAddress() == null) return;

            String message = new String(packet.getData()).trim();
            System.out.println(""Server > "" + message);

            if(message.equalsIgnoreCase(""pong""))
                sendData(""ping"".getBytes());
        }
    }

    public void sendData(byte[] data) {
        DatagramPacket packet = new DatagramPacket(data, data.length, m_IPAddress, m_Port);
        try {
            m_Socket.send(packet);
        } catch (IOException e) {
            System.err.println(e.getMessage());
        }
    }

    public boolean isConnected() {
        return m_Connected;
    }
}"
4qJy7rXQ,[mpv] autoshader.lua,alaestor,Lua,Thursday 14th of December 2023 10:45:58 PM CDT,"function autoshader()
    local height = tonumber(mp.get_property(""height""))
	if height >= 720 then -- Anime4K mode A (HQ)
		print(""Vertical resolution of"", height, ""(>= 720): Loading Anime4K mode A."")
		mp.commandv(""set"", ""glsl-shaders"", ""~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_VL.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"")
	elseif height >= 480 then --Anime4K mode B
		print(""Vertical resolution of"", height, ""(>= 480): Loading Anime4K mode B."")
		mp.commandv(""set"", ""glsl-shaders"", ""~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"")
	else --Anime4K mode C
		print(""Vertical resolution of"", height, ""(< 480): Loading Anime4K mode C."")
		mp.commandv(""set"", ""glsl-shaders"", ""~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"")
	end
end

mp.add_key_binding(nil, ""autoshader"", autoshader)
mp.register_event(""file-loaded"", autoshader)
"
N80pHm9p,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Thursday 14th of December 2023 10:41:55 PM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-824558"
5dHZfE1k,Untitled,Constantine_M,C++,Thursday 14th of December 2023 10:34:21 PM CDT,"(* Выходное воздействие *)
(*//OLD_BEGIN
IF V_manualNaKnd THEN
	setNaTnd := setNaTndManual;
ELSE
	If fuelRegState = _TR_SM_OFF Then
   		if nialg.loc.typeGtdKpvRvna then /* ГПА с КПВ */
     		if alg.tr.condition = _TR_SM2_WASH_START then /* При промывке не открывать КПВ */
	  			setNaTnd := scale(fuelRegTun.scale[ _SC_KPV_ALT ], 0.0);
     		else /* При работе, по графику */
	   			setNaTnd := scale(fuelRegTun.scale[ _SC_KPV_ALT ], gtuRedData.nTndPr.val);
	 		end_if;
   		else /* ГПА с РВНА */
     		setNaTnd := scale(fuelRegTun.scale[ _SC_RVNA_ALT ],fuelRegTunScale.nTndPrFiltr);
   		end_if;
  	Else /* fuelRegState = _TR_SM_OFF */ 
    	if nialg.loc.typeGtdKpvRvna then /* ГПА с КПВ */
      		setNaTnd := scale(fuelRegTun.scale[ _SC_KPV ], gtuRedData.nTndPr.val);
		else /* ГПА с РВНА */
	  		setNaTnd := scale(fuelRegTun.scale[ _SC_RVNA ], fuelRegTunScale.nTndPrFiltr);
		end_if;
  	End_if;
END_IF;
OLD_END//*)

(*//NEW_BEGIN *)
If V_manualNaKnd Then
	setNaTnd := setNaTndManual;
Else
	IF fuelRegState = _TR_SM_OFF THEN
		(* ГПА с КПВ *)
   		if nialg.loc.typeGtdKpvRvna then
     		if (alg.tr.condition = _TR_SM2_WASH_START or alg.tr.condition = _TR_SM2_COLD_START) then (* При промывке и ХП не открывать КПВ *)
	  			setNaTnd := scale(fuelRegTun.scale[ _SC_KPV_ALT ], 0.0);
     		else(* При работе, по графику *)
	   			setNaTnd := scale(fuelRegTun.scale[ _SC_KPV_ALT ], gtuRedData.nTndPr.val);
	 		end_if;
		(* ГПА с РВНА *)
   		else
			if (alg.tr.condition = _TR_SM2_WASH_START or alg.tr.condition = _TR_SM2_COLD_START) then (* При промывке и ХП не открывать КПВ *)
	  			setNaTnd := scale(fuelRegTun.scale[ _SC_RVNA_ALT ], 0.0);
     		else(* При работе, по графику *)
     			setNaTnd := scale(fuelRegTun.scale[ _SC_RVNA_ALT ],fuelRegTunScale.nTndPrFiltr);
			end_if;
   		end_if;
  	ELSE (* fuelRegState != _TR_SM_OFF *)
		(* ГПА с КПВ *)
    	if nialg.loc.typeGtdKpvRvna then 
			if (alg.tr.condition = _TR_SM2_WASH_START or alg.tr.condition = _TR_SM2_COLD_START) then (* При промывке и ХП не открывать КПВ *)
	  			setNaTnd := scale(fuelRegTun.scale[ _SC_KPV ], 0.0);
     		else(* При работе, по графику *)
				setNaTnd := scale(fuelRegTun.scale[ _SC_KPV ], gtuRedData.nTndPr.val);
			end_if;
		(* ГПА с РВНА *)
		else
			if (alg.tr.condition = _TR_SM2_WASH_START or alg.tr.condition = _TR_SM2_COLD_START) then (* При промывке и ХП не открывать КПВ *)
	  			setNaTnd := scale(fuelRegTun.scale[ _SC_RVNA ], 0.0);
     		else(* При работе, по графику *)
	  			setNaTnd := scale(fuelRegTun.scale[ _SC_RVNA ], fuelRegTunScale.nTndPrFiltr);
			end_if;
		end_if;
  	END_IF;
End_if;
(*NEW_END//*)"
1BDsDdPz,give feedback,mike3d0g,Python,Thursday 14th of December 2023 10:24:40 PM CDT,"def check_guess(user_guess, answer):
    if user_guess == answer:
        print(""You Win!"")
        return True
    if user_guess < answer:
        print(""Your guess was to low."")
    if user_guess > answer:
        print(""Your guess was to high."")
    return False

    # I don't think the code below belongs in this function
    # The first part of this function checks right or wrong
    # The code below checks if we're at max guesses and
    # and launches a new game. You don't expect that INSIDE check_guess
    if guesses_left == 0:
        print(""You lose."")
    else:
        play_again()
"
yVKr0tbt,guess 1-100,mike3d0g,Python,Thursday 14th of December 2023 10:13:40 PM CDT,"def get_level():
    """"""Ask user for level, return guesses_max (5 or 10).""""""
    # Your code
    return guesses_max


def give_clue(user_guess, correct_answer):
    """"""Tell the user if they're low, high or right.""""""
    # Your code


def is_right(user_guess, correct_answer):
    ""See if answer is correct.""""""
    pass

def play_again():
    """"""Ask user if they want to play again, return T/F.""""""
    # Your code


def end_game():
    """"""Thank user or something.""""""
    pass


# Code loop that runs the game
while True:
    correct_answer = random...
    guesses_max = get_level()
    guesses_current = 0
    while guesses_current != guesses_max:
        guess = get_guess()
        give_clue(...)
        if is_right(...):
            break
        guess = guess + 1
    if not play_again():
        break

# Code that ends the game
    end_game()
"
MxPEyCXG,hwidwl,Richyrich457,Lua,Thursday 14th of December 2023 09:22:41 PM CDT,"--[[                            
         ___    ___ ________  ________     
        |\  \  /  /|\   __  \|\   __  \    
        \ \  \/  / | \  \|\  \ \  \|\  \   
         \ \    / / \ \  \\\  \ \   _  _\  
          /     \/   \ \  \\\  \ \  \\  \| 
         /  /\   \    \ \_______\ \__\\ _\ 
        /__/ /\ __\    \|_______|\|__|\|__|
        |__|/ \|__|                        
         -------------------------------     
                   SLIMECITYJS  
                                                                                    
]]--  

--[[
	This is the table we are going to use to list all of our HWID / ClientID's.

	All you need to do is to replace the ""Insert your HWID here."" text with your HWID / Client ID and upload it to pastebin / github.

	Please note that you will have to manually update this table when you want to add another HWID in here.
]]

return {
	"""",
	"""",
	"""",
}"
XKXBd9qQ,Untitled,BayangBec,JavaScript,Thursday 14th of December 2023 09:07:08 PM CDT,"const { has } = require(""lodash"");
const { v4: uuidv4 } = require('uuid');
const moment = require('moment');
const { APPICATION, CONFIG_SETTING } = require('@mocobaas/shared/constanta');
const utilQueue = require('../../utils/queue-util');
const TelegramBot = require('node-telegram-bot-api');

// @ts-check
/**
 * You can also import another NPM package
 * const _ = require(""lodash"");
 * const moment = require(""moment"");
 */

/**
 * @description handler for cron-activation-newspaper-magazine
 * @param {import('@mocobaas/server-sdk').SchedulerContext} ctx
 */

async function handler(ctx) {
  const { knex } = ctx.moco.tables;
  let datas = {};
  const userInfo = { user_name: 'cron-activation-newspaper-magazine' };
  const token = process.env.TOKEN_TELEBOT;

  try {
    const dateNow = moment(new Date()).format('YYYY-MM-DD');
    datas = await knex('content_subscriptions as cs')
      .select('cs.id', 'cs.media_type_id', 'cs.organization_id', 'cs.catalog_id', 'catalog_file')
      .join('catalogs as c', 'c.id', 'cs.catalog_id')
      .whereNull('process_date')
      .where('process_isrun', false)
      .whereRaw(`(to_char(publish_date, 'YYYY-MM-DD') = '${dateNow}')`)
      .orderBy('cs.publish_date', 'desc');

    const [credential, agentManager] = await Promise.all([
      knex('config_setting').select('config_value').where('id', CONFIG_SETTING.AGENT_MANAGER).first(),
      knex('application').select('app_client_api').where('id', APPICATION.AGENT_MANAGER).first()
    ]);

    const configAgent = {
      credential: credential.config_value[0],
      app_client_api: agentManager.app_client_api,
      app_id: APPICATION.CENTRALIZED
    };

    if (datas.length != 0) {
      // const payloadMigration = [];
      const payloadActivation = [];
      // const payloadDrm = [];
      const payloadSubscriptionItems = [];
      const trxId = uuidv4()

      await Promise.all(datas.map(async (item) => {
        const findIncome = await knex('others_income_products as oip')
          .select('oi.income_info', 'oip.product_copy', 'oi.income_end_date', 'oi.id')
          .join('others_incomes as oi', 'oi.id', 'oip.income_id')
          .where('product_category_id', item.media_type_id)
          .whereRaw(`(to_char(income_start_date, 'YYYY-MM-DD') <= '${dateNow}')`)
          .whereRaw(`(to_char(income_end_date, 'YYYY-MM-DD') >= '${dateNow}')`)
          .where('organization_id', item.organization_id);

        if (findIncome.length != 0) {
          await Promise.all(findIncome.map(async (i) => {
            payloadActivation.push({
              catalog_id: item.catalog_id,
              created_at: new Date(),
              epustaka_id: i.income_info.epustaka_id,
              epustaka_catalog_qty: i.product_copy
            });

            let expired = null;
            
            if (i.income_info.archiving_type_code) {
              switch(i.income_info.archiving_type_code) {
                case 'PERMINGGU':
                    userData = {...userData, verified: false}
                break;
                case 2:
                    userData = {...userData, verified: true}
                    break;
                default:
                  expired = new Date(i.income_end_date);
                  expired.setFullYear(expired.getFullYear() + 1000);
              };
            };

            payloadSubscriptionItems.push({
              id: uuidv4(),
              epustaka_id: i.income_info.epustaka_id,
              catalog_id: item.catalog_id,
              epustaka_catalog_qty: i.product_copy,
              epustaka_expired: expired,
              transaction_id: i.id
            });
  
            await knex('content_subscriptions').update({process_date: new Date(), process_isrun: true}).where('id', item.id);

            let findExtSyncLogs = await knex('ext_sync_logs')
            .where('catalog_id', item.catalog_id)
            .andWhere('process_iserror', false)
            .orderBy('created_at', 'desc').first();

            if (findExtSyncLogs) {
              let startProcess = new Date();
              startProcess.setHours(startProcess.getHours() + 7);
              const updatedNow = new Date();
              const createdAt = new Date(findExtSyncLogs.process_sync[0].file_created);

              const hitung = updatedNow.setMilliseconds(0) - createdAt.setMilliseconds(0);

              const menit = Math.floor(hitung / (1000 * 60));
              const detik = Math.floor((hitung / 1000) % 60);
    
              findExtSyncLogs.process_sync.push({
                start_date: startProcess,
                process_name: `Distribusi Konten Ke Spot Baca ${i.income_info.epustaka_name}`,
                end_date: startProcess
              });
          
              await knex('ext_sync_logs').update({process_sync: JSON.stringify(findExtSyncLogs.process_sync), updated_at: updatedNow}).where('id', findExtSyncLogs.id);

              const bot = new TelegramBot(token, { polling: false });

              let pesan = `Berikut adalah data sync koran dan majalah:\n
*Proses Membaca File Dari FTP (${moment(findExtSyncLogs.process_sync[1].start_date).format(""hh:mm:ss"")})*
Judul: *${findExtSyncLogs.catalog_title}*
Upload FTP: *${moment(findExtSyncLogs.process_sync[0].file_created).format(""DD-MM-YYYY hh:mm:ss"")}*
Nama Asli File: *${findExtSyncLogs.process_sync[0].original_file_name}*
Ukuran File: *${findExtSyncLogs.process_sync[0].file_size}*
Proses: *${findExtSyncLogs.process_iserror === true ? 'Gagal' : 'Sukses'} ${menit} Menit ${detik} Detik*
==================================================
*Proses Membaca Metadata Dari File FTP (${moment(findExtSyncLogs.process_sync[2].start_date).format(""hh:mm:ss"")} - ${moment(findExtSyncLogs.process_sync[2].end_date).format(""hh:mm:ss"")})*
==================================================
*Proses Menambahkan Metadata Konten Ke Database MCCP V1 (${moment(findExtSyncLogs.process_sync[3].start_date).format(""hh:mm:ss"")} - ${moment(findExtSyncLogs.process_sync[3].end_date).format(""hh:mm:ss"")})*
==================================================
*Data Masuk Dari MCCP V1 (${moment(findExtSyncLogs.process_sync[4].start_date).add(5, 'h').format(""hh:mm:ss"")})*
==================================================
*Data Masuk Konten Berlangganan (${moment(findExtSyncLogs.process_sync[5].start_date).add(5, 'h').format(""hh:mm:ss"")} - ${moment(findExtSyncLogs.process_sync[5].end_date).add(5, 'h').format(""hh:mm:ss"")})*
==================================================
*Distribusi Konten Ke Spot Baca ${i.income_info.epustaka_name} (${moment(findExtSyncLogs.process_sync[6].start_date).add(5, 'h').format(""hh:mm:ss"")})*`;

              const chatId = process.env.CHAT_ID_TELEBOT;
              bot.sendMessage(chatId, pesan, { parse_mode: 'Markdown' });
            };
          }));
        };
      }));

      let limitManager = 50;
      const pageActivation = Math.ceil(payloadActivation.length / limitManager);

      await Promise.all([
        knex.batchInsert('content_subscription_items', payloadSubscriptionItems, 50),
        utilQueue.booksActivationAgentManager({ ...ctx, userInfo, trxId}, configAgent, payloadActivation, pageActivation, limitManager, null, true)
      ])
    };

    return true;
  } catch (error) {
    const _messages = (error.response && has(error.response, ""data"")) ? (error.response.data.message || error.response.data.error) : error.message;
    const payloadError = {
        id: uuidv4(),
        action: 'cron-activation-newspaper-magazine',
        content: JSON.stringify(datas),
        err_message: _messages
    };

    await knex('error_logs').insert(payloadError);
    return false;
  }
}

module.exports = handler;"
90mURrV8,SVG thing,herodotus_machine,HTML,Thursday 14th of December 2023 08:20:28 PM CDT,"
<svg xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"" width=""350.7"" height=""248"" viewBox=""0 0 1052.4 744.1"">
  <defs>
    <radialGradient id=""a"" gradientUnits=""userSpaceOnUse"" cy=""-15"" cx=""22.7"" gradientTransform=""matrix(1 0 0 2.37143 0 20)"" r=""3.2"">
      <stop stop-color=""#e7e7e7"" offset=""0""/>
      <stop stop-color=""#565656"" offset=""1""/>
    </radialGradient>
    <radialGradient id=""c"" gradientUnits=""userSpaceOnUse"" cy=""30.7"" cx=""25.5"" gradientTransform=""matrix(1.55222 0 0 .6192 -14 5.1)"" r=""15.2"">
      <stop offset=""0""/>
      <stop stop-color=""#5e5e5e"" offset=""1""/>
    </radialGradient>
    <radialGradient xlink:href=""#a"" id=""f"" gradientUnits=""userSpaceOnUse"" gradientTransform=""matrix(1 0 0 2.37143 0 20)"" cx=""22.7"" cy=""-15"" r=""3.2""/>
    <radialGradient xlink:href=""#a"" id=""g"" gradientUnits=""userSpaceOnUse"" gradientTransform=""matrix(1 0 0 2.37143 0 20)"" cx=""22.7"" cy=""-15"" r=""3.2""/>
    <radialGradient xlink:href=""#c"" id=""i"" gradientUnits=""userSpaceOnUse"" gradientTransform=""matrix(29.1164 0 0 11.61495 -339.2 200.3)"" cx=""25.5"" cy=""30.7"" r=""15.2""/>
    <linearGradient id=""b"" y2=""35.9"" gradientUnits=""userSpaceOnUse"" x2=""10.8"" gradientTransform=""matrix(1.04306 0 0 1.04306 -1 -1.3)"" y1=""33.6"" x1=""11.7"">
      <stop stop-color=""#96d2e2"" offset=""0""/>
      <stop stop-color=""#1d5868"" offset=""1""/>
    </linearGradient>
    <linearGradient id=""d"">
      <stop stop-color=""#666"" offset=""0""/>
      <stop stop-color=""#ababab"" stop-opacity=""0"" offset=""1""/>
    </linearGradient>
    <linearGradient xlink:href=""#b"" id=""h"" gradientUnits=""userSpaceOnUse"" gradientTransform=""matrix(19.56562 0 0 19.56562 -95.6 80)"" x1=""11.7"" y1=""33.6"" x2=""10.8"" y2=""35.9""/>
    <linearGradient xlink:href=""#d"" id=""j"" gradientUnits=""userSpaceOnUse"" gradientTransform=""matrix(19.56562 0 0 19.56562 -95.6 80)"" x1=""22.9"" y1=""27.2"" x2=""21.3"" y2=""16.7""/>
    <linearGradient xlink:href=""#d"" id=""k"" gradientUnits=""userSpaceOnUse"" gradientTransform=""matrix(19.56562 0 0 19.56562 -95.6 80)"" x1=""9.6"" y1=""29.3"" x2=""20.7"" y2=""18.3""/>
    <filter id=""e"" color-interpolation-filters=""sRGB"">
    <feGaussianBlur stdDeviation="".6""/>
    </filter>
  </defs>
  <g transform=""translate(151.9 -274.1)"">
    <path 
      d=""M131.4 525.2c-14.5 13.5-54.5 6-45.7-25.8 8.9-31.7 47.6-14.8 52 3.2-3 12.2-5.7 12.7-6.3 22.6z"" 
      style=""fill:red""/>
    <path 
      d=""M131.4 525.2c-15.6 16.7-58 1.2-42.1-24 9.7-15.6 28.1-2.1 39.1 14.6-2.9 12.1 3.6-.5 3 9.4z"" 
      style=""fill:#a00""/>
    <path 
      d=""M4.9 37.4c0 2.8 14 8 18.8 7.3 2.4-.4 19.7-13.5 19.2-15.1-2.9-9.8-37.8.3-38 7.8z"" 
      transform=""matrix(22.69597 0 0 22.69597 -168.7 -28.5)"" 
      style=""opacity:.5;fill:#000;filter:url(#e)""/>
    <g style=""fill-rule:nonzero"">
      <path 
      style=""color:#000;fill:#000;enable-background:accumulate"" 
        d=""M25 27c-1.3 0-2.4 2.4-2.4 5.3 0 2.5.8 4.6 1.7 5.2.9.7 1.8.7 2.8.5 1.3 0 2.2-2.4 2.2-5.3 0-3-1-5.4-2.3-5.4-.9.5-1.2.1-2-.4z"" 
        transform=""translate(202.5 -11.3) scale(19.23714)""/>
      <path 
      style=""color:#000;fill:url(#f);enable-background:accumulate"" 
        d=""M27-14.5a3.2 7.7 0 1 1-6.4 0 3.2 7.7 0 1 1 6.5 0z"" 
        transform=""translate(561.1 715.6) scale(6.78678)""/>
    </g>
    <g style=""fill-rule:nonzero"">
      <path 
      style=""color:#000;fill:#000;enable-background:accumulate"" 
        d=""M25 27c-1.3 0-2.4 2.4-2.4 5.3 0 2.5.8 4.6 1.7 5.2.9.7 1.8.7 2.8.5 1.3 0 2.2-2.4 2.2-5.3 0-3-1-5.4-2.3-5.4-.9.5-1.2.1-2-.4z"" 
        transform=""matrix(22.69597 0 0 22.69597 -184.2 84.6)""/>
      <path 
      style=""color:#000;fill:url(#g);enable-background:accumulate"" 
        d=""M27-14.5a3.2 7.7 0 1 1-6.4 0 3.2 7.7 0 1 1 6.5 0z"" 
        transform=""translate(239 942.2) scale(8.00704)""/>
    </g>
    <path 
      d=""M120 525c-5.4 10.1-26.7 4.9-27.2-3.3-.9-14.8 32.5-6.9 27.1 3.3z"" 
      style=""fill:#6d0000""/>
    <path 
      style=""color:#000;fill:red;fill-rule:nonzero;enable-background:accumulate"" 
      d=""M410 303.7c-9.5.3-18.2 1.4-25.7 3-59.7 13.7-136.3 67.3-158 80.8-24.9 15.6-76.2 92-108.8 132.7C99.2 543-49 594.2-60.8 651.6c-5 24-6.9 44-8 61.2v.6c-4.9 9-7.9 21.2-7.9 34.8 0 23.7 10.4 41.3 21.4 49 103 71.7 222 110.3 343.7 135.7 45.2 7.8 96-23.2 96-23.2s-10-138.8 37.9-174.3c57.2-42.5 50 109 67.2 94.8 26.8-22.2 179.7-138 193.2-146.2 13.6-8.1.3-123.2 33.6-145.5 48.9-32.5 43 95.5 55.7 80.1 11.5-13.9 18.6-14.4 21.4-19.5 11.7-6.2 20.2-25.5 20.2-48.3 0-23.7-9.1-43.5-21.4-49-1.6-15.6-4.7-30.3-11.7-40.3-13.8-20-23-31-81.3-45.9a273.6 273.6 0 0 0-78.9-65.4c-35-18.9-143.6-48.5-210.3-46.5z""/>
    <path 
      d=""M383.1 331.3c-29.2-1-67.8 9.8-118 41-30 18.5 58.5 14.2 177.3 59.8 30 11.6 28.3-97.9-59.3-100.8zM93.3 575.8c-34 .7-71.2 12-109.4 39.2-41.6 29.5 187.1 108.5 295.9 139.4 55.8 15.8-39.3-181.6-186.5-178.6z"" 
      style=""fill:#ff8080""/>
    <path 
      style=""color:#000;fill:#a00;fill-rule:nonzero;enable-background:accumulate"" 
      d=""M620.4 365.5c-44.1-1.9-147.2 58.7-155.7 79.1-9.1 21.8-34.4 166.5-45.3 181-10.9 14.5-99.8 118.7-109.2 143.5-13.8 36.2-10.1 109.2-10.8 127-.7 15.2-13.8 28-44 29.5 11 2.5 21.9 5 33 7.3 45.2 7.8 96-23.2 96-23.2s-10-138.8 37.9-174.3c57.2-42.5 50 109 67.2 94.8 26.8-22.2 179.6-138 193.2-146.1 13.6-8.2.3-123.3 33.6-145.6 48.9-32.5 43 95.6 55.7 80.1 11.5-13.9 18.6-14.4 21.4-19.5 11.7-6.2 20.2-25.5 20.2-48.3 0-23.7-9.1-43.5-21.4-49-1.7-15.6-4.7-30.3-11.7-40.3a89.6 89.6 0 0 0-17.7-20.8 53.4 53.4 0 0 0-37.3-3.6c-37.4-21.4-63-69.8-105.1-71.6z""/>
    <path 
      d=""M335.9 758c-20 5.5.5 14.9-30.8 14.5-33.5-.3-326.4-110.6-359-128.7-5-2.8-16.3 61.7-12.7 70.7 3.6 9 103.4 54.4 163.2 78 59.8 23.6 174 65.2 201.2 63.4C325 854.1 370.4 758 336 758z"" 
      style=""fill:#a00""/>
    <path 
      d=""M45.5 757.2 164 802M44.6 724.2l135.8 54.2"" 
      style=""fill:none;stroke:#000;stroke-width:13.34506607px;stroke-linecap:round;stroke-linejoin:miter""/>
    <path 
      d=""M-60.8 651.6a435 435 0 0 0-8 56.3l89.4 37.9-17.2-62.4-64.2-31.8zM234 765.4l-40.3 48.3c100.6 40.8 116 41.5 151.6 23.8 21.6-10.7 2-63.4-17.1-53.2-19.2 10.3-42.2-4.8-94.2-19z"" 
      style=""fill:url(#h)""/>
    <path 
      d=""M428.4 305c-44 12-160.5 61.3-169.4 93-4.3 15-51.5 118.6-56.2 126.5-4.8 7.8-130.3 77.3-175.5 157.1l56.2 20.2c45.8-69.8 160.5-140.6 173-151.6 12.6-11 44.2-125 57-145 22.4-35.3 143-85.9 173-93.5l1.8-.6a453.6 453.6 0 0 0-60-6.1zm111.9 17.7c-1.7.4-3.4.3-5 .6-62.6 14.8-151.9 61.5-170.5 93-8 13.5-56.4 143.1-61.2 151-4.7 7.8-108.8 74.3-154 161.4l63.5 22c45.8-77 134.8-151 147.4-162 12.6-11 40.9-129.6 52-150.4 20.7-39 120.1-87.8 183.4-98.5a576.5 576.5 0 0 0-55.6-17.1z"" 
      style=""fill:#ccc""/>
    <path 
      d=""M622.2 380.2c-13.6 0-49.5 6.6-38.9 18 15.8 16.7 35.3 64 45.9 92.3 7 18.5 65.2-28 70.6-38.8 8.2-16.3-64-71.5-77.6-71.5zm-381.3 14.3c-2.3 0-3.8.1-4.9.6-16 6.4-98.2 114-100.8 133.3-1.6 11 262.3 96.6 268.4 81.3 10.8-27.2 52.8-148.5 42.2-160.2-10.4-11.3-170.5-55.2-204.9-55zM551.6 409c-13.6 0-66.7 29.1-72.8 43.5-6 14-40.2 143.5-27 147.3 19 5.4 146.3-76.6 151.7-87.4 8.2-16.3-38.4-103.4-52-103.4z"" 
      style=""fill:url(#i)""/>
    <path 
      style=""color:#000;fill:#a00;fill-rule:nonzero;enable-background:accumulate"" 
      d=""M-72.4 772.7a50.6 50.6 0 0 0 17.1 24.5c103 71.7 222 110.3 343.7 135.7 9.3 1.6 18.8 1 28 0-2.6-29.6-14.8-63.5-16.4-43.4-2 24.7-29.9 19.6-52.6 16.5-59.3-8.2-274.7-95.9-319.8-133.3z""/>
    <path 
      d=""m29.5 781.6-1 48.1 135.2 52.7v-50L29.4 781.6z"" 
      style=""fill:#b3b3b3""/>
    <path 
      d=""m39 691.6 162.5 63.7"" 
      style=""fill:none;stroke:#000;stroke-width:13.34506607px;stroke-linecap:round;stroke-linejoin:miter""/>
    <path 
      d=""M764 458.4c-22.3 1.5-53.6 23.4-112.5 78.3-91.3 85.2-185.9 64.9-303.2 226.8-27.3 37.7 2.9 57.8-18.9 90.4-21.7 32.7-20.5 60 14 58.2 5.8-.3 21.3-9 40.3-21.4-.8-38 1-127.4 38.6-155.3 45.8-34 55.6 32.1 65.6 79.3 66-49.4 135.1-102 201-153.3 3.6-36.7 2.3-106 27.5-122.9 35-23.3 47.6 19 53.4 61.4 7.4-5.6 13.1-11.5 19.3-16.1a70.5 70.5 0 0 0 24.5-33v-.7c-.2-23.3-9.2-42.8-21.4-48.3-1.6-15.6-4.7-30.3-11.6-40.3-5-2.3-10.6-3.5-16.5-3z"" 
      style=""fill:#6d0000""/>
    <path 
      d=""M-60.8 651.6a435 435 0 0 0-8 56.3l16.6 7.3c3.2-23.6 7.5-41.8 11-53.8l-19.6-9.8zm392.6 131.5c-1.2.2-2.5.6-3.7 1.2-9.5 5-19.9 3.5-34.2-.6a261.2 261.2 0 0 0-14.7 60.5c30 7.5 44.6 4 66-6.7 20.2-10 4.4-57-13.4-54.4z"" 
      style=""fill:#ff9e00""/>
    <path 
      d=""M622.2 380.2c-13.6 0-49.8 6.3-39.1 17.7 33.1 7 73.4 19.5 105.7 30.6-19.3-21.8-57.1-48.3-66.6-48.3z"" 
      style=""fill:url(#j)""/>
    <path 
      d=""M240.7 394.2c-2.3 0-3.8.2-5 .7-16 6.3-98.2 114-100.8 133.2 111.5-62.3 150.8-91.6 182-119.8-33.4-8.2-63.5-14.1-76.2-14z"" 
      style=""fill:url(#k)""/>
    <path 
      d=""M-64 729.2c5.3-2.9 160.5 68.3 154 68.9-38.8 3.5-175.4-57.4-154-69z"" 
      style=""fill:#f55""/>
    <path 
      d=""M371.5 331.3c-6.6.4-13.3 2-20.8 3.6-33.7 15.4-67.5 33.3-83.1 49.5 9.7 3.6 28.1 6.9 53.2 12.3 18.7-19.1 58.9-40.6 96-57.5a83.1 83.1 0 0 0-33.7-8c-3.6 0-7.6-.2-11.6 0zm71 27.5c-31.5 16-58.7 34.4-72.2 50.1a770.6 770.6 0 0 1 52 16.5c8.8-9.7 21.9-19.8 36.6-29.3a81 81 0 0 0-16.5-37.3zm-316.2 220c-32 24.4-66.9 55.1-89.9 88.1 16.2 7.8 35.2 15.3 55 23.3 24.6-32.3 61.9-63.5 94.8-88.7a187.2 187.2 0 0 0-59.9-22.6zm101 52.7c-25 23.3-50.7 52-69.8 83.7a2270 2270 0 0 0 64.8 22 517.8 517.8 0 0 1 45.9-59.3 273 273 0 0 0-41-46.4z"" 
      style=""fill:#fff""/>
    <path 
      d=""M631.1 532.2c8.6 49 12.9 111 15.8 169.9 10.5-34.4 10.7-123.3-15.8-169.9z"" 
      style=""fill:#a00""/>
    <path 
      d=""M563 396.1c59.9 105.6 72.6 148.1 82.3 302.3C659.9 571.5 617.9 460 563 396z"" 
      style=""fill:#2b0000""/>
    <path 
      d=""M460.2 642.1c22.2 56.2 40 120 38.4 172.6 13.2-48-4.7-142.3-38.4-172.6z"" 
      style=""fill:#a00""/>
    <path 
      d=""M439.2 613a485.8 485.8 0 0 1 59.1 194.3c7-75.1-21.9-151.4-59.1-194.3z"" 
      style=""fill:#2b0000""/>
    <path 
      d=""M449.3 622.8c10.7 17.8 62.6 26.8 66.2-5.4 3.6-32.2-39.4-35.8-59-25-31.3 17-7.2 28.6-7.2 30.4z"" 
      style=""fill:red""/>
    <path 
      d=""M449.3 622.8c9 18.3 66.1 27.7 66-8-.2-32.4-42.2-12.7-61.8-11.4-20.2 1.5-9.4 15.8-4.2 19.4z"" 
      style=""fill:#a00""/>
    <path 
      d=""M449.3 622.8c17.2 22.2 59.2 17.4 53.6-2.5-7-24.9-29.4 2.7-47.2-4.3-23-8.9-13.3 5.4-6.4 6.8z"" 
      style=""fill:#6d0000""/>
    <rect 
      style=""opacity:.5;color:#000;fill:#1a1a1a;fill-rule:nonzero;enable-background:accumulate"" 
      transform=""matrix(.96122 .27577 -.20533 .9787 0 0)"" rx=""5.3"" ry=""3.9"" height=""23.2"" width=""64.8"" y=""322.8"" x=""382.1""/>
    <path 
      d=""M29.6 784.4c-3.7 10.6-8.2 36.8-1.7 45.8 1.5-12.2 2-28.4 1.7-45.8z"" 
      style=""fill:#6d0000""/>
    <path 
      d=""M24.5 826.3c3.4 11.3 130.5 59 141.2 55.7-76.4-26.9-139-56.7-141.2-55.7z"" 
      style=""fill:#6d0000""/>
    <path 
      d=""M332 782.8c-1.1.2-3 .6-4.2 1.3-3.4 1.8-7 2.7-10.8 3a249.7 249.7 0 0 0-6 60.3 86.9 86.9 0 0 0 34.3-9.6c20.3-10 4.6-57.6-13.2-55z"" 
      style=""opacity:.5;color:#000;fill:#963500;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:6;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate""/>
  </g>
</svg>"
KLBjhEvg,Integer to Roman Numerals v1.0.3.C,lduran,C,Thursday 14th of December 2023 07:44:11 PM CDT,"/**
 * Canonical : https://github.com/lduran2/my-leetcode-sync/blob/master/problems/integer_to_roman/solution.c
 * Given an integer, convert it to a roman numeral
 * represented by seven different symbols: I, V, X, L, C, D and M.
 * Language  : C with Basic inline x86 Assembly/GNU assembly syntax
 * By        : Leomar Durán <https://github.com/lduran2>
 * For       : https://leetcode.com/problems/integer-to-roman/
 *
 * CHANGELOG :
 *  v1.0.3 - 2023-12-14t20:27R
 *      implemented adding each numeral symbol
 *      clean up
 *
 *  v1.0.2 - 2023-12-14t15:31R
 *      correct placement for null terminator
 *      fixed endianness of symbol values
 *
 *  v1.0.1 - 2023-12-14t07:14R
 *      testing conversion table
 *
 *  v1.0.0 - 2023-12-14t06:25R
 *      testing character buffer 
 */

#include <stddef.h> /* for size_t */
#include <stdlib.h> /* for malloc */

/**
 * Conversion table between integers and Roman numerals symbols.
 * Each row represents a conversion by repeated subtraction from
 * highest to lowest.
 * All cells are bytes so each integer equivalents are represented as
 * 2 bytes = 1 word, which is big endian according to the endianness
 * of LeetCode's implementation of gcc (check your own version).
 * (So for this reason, integers > 255 are represented in the
 * hexadecimal base).
 *
 * column 0: the # of rows.
 * column 1: low  byte of integer equivalent of Roman numeral symbol.
 * column 2: high byte of integer equivalent ... .
 * column 3: number of characters in Roman numeral symbol.
 * column 4...: each successive character of the Roman numeral symbol,
 * the number of which is stored in column 3.
 */
char const ROMAN_TABLE[]
  = {13, /* 1000 */ 0xE8, 0x3, 1, 'M',
         /*  900 */ 0x84, 0x3, 2, 'C', 'M',
         /*  500 */ 0xF4, 0x1, 1, 'D',
         /*  400 */ 0x90, 0x1, 2, 'C', 'D',
             100,           0, 1, 'C',
              90,           0, 2, 'X', 'C',
              50,           0, 1, 'L',
              40,           0, 2, 'X', 'L',
              10,           0, 1, 'X',
               9,           0, 2, 'I', 'X',
               5,           0, 1, 'V',
               4,           0, 2, 'I', 'V',
               1,           0, 1, 'I',
    }; /* end ROMAN_TABLE */

/**
 * The size of ""MMMDCCCLXXXVIII"" (3888) the longest number in [1..3999]
 * in Roman numerals symbols plus the null terminator.
 */
size_t const MAX_ROMAN_LEN = 16;

/**
 * Converts the integer $num to a Roman numeral.
 * This function creates the Roman numeral string.
 * @param num: int[1..3999] = to convert to Roman numerals
 * @return: array[2..16]<char> = $num in Roman numerals
 * @see #MAX_ROMAN_LEN
 * @see #addNumerals
 */ 
char* intToRoman(int num) {
    /* for adding Roman numerals */
    char *addNumerals(char *, char const *, int);
    /* buffer for roman numerals */
    char *roman = addNumerals(malloc(MAX_ROMAN_LEN), ROMAN_TABLE, num);
    return roman;
} /* end intToRoman(int) */

/**
 * Adds the numeral representation of the integer $num, translated
 * according to the given conversion @table character, to buffer @cbuf.
 * @param cbuf %rdi: char * = to contain $num as numerals
 * @param table %rsi: char const * = by which to convert $num
 * @param num %rdx: int = to convert and add to @cbuf
 * @return @cbuf
 * @see #intToRoman
 */
__attribute__((naked))
char *addNumerals(char *cbuf, char const *table, int num) {
    __asm__(
        "".extern addSymbol;""    /* for adding each numeral symbol */

        ""push %rdi;""            /* store %rdi for return */
        ""push %rbx;""            /* store %rbx for use as symbol size */

        /* for each symbol row in the conversion table */ 
        ""movzb (%rsi), %rcx;""   /* load the number of symbols */
        ""inc  %rsi;""            /* first symbol row */
    ""numeral_table_loop:""
        ""movzw 0(%rsi), %rax;""  /* %rax := value of symbol */
        ""movzb 2(%rsi), %rbx;""  /* %rbx :=  size of symbol */
        /* if (num < *table) then skip_numeral_symbol */
        ""sub  %rax, %rdx;""
        ""jl   skip_numeral_symbol;""
        ""call addSymbol;""       /* otherwise add the symbol */
        ""add  %rbx, %rdi;""      /* advance cbuf */
        ""jmp  numeral_table_loop;""  /* jump without dec rcx */
    ""skip_numeral_symbol:""
        ""add  %rax, %rdx;""      /* recover %rdx from if-subtract */
        /* next symbol row */
        ""add  %rbx, %rsi;""
        ""add    $3, %rsi;""      /* value word length + size byte */
        ""loop numeral_table_loop;""
    ""end_numeral_table_loop:""

        ""movb $0, (%rdi);""      /* null terminate */

        ""pop  %rbx;""            /* restore %rbx */
        ""pop  %rdi;""            /* restore %rdi for return */
        ""mov  %rdi, %rax;""      /* return original @cbuf */
        ""ret;""
    );
} /* end addNumerals(char *, char const *, int) */

/**
 * Adds the symbol in the given @row to buffer @cbuf.
 * @param cbuf %rdi: char * = to contain $num as numerals
 * @param row %rsi: char const * = whose symbol to add (from address of
 * value)
 */
__attribute__((naked))
void addSymbol(char *cbuf, char const *row) {
    __asm__(
        /* new call frame */
        ""push %rdi;""
        ""push %rsi;""
        ""push %rcx;""
        ""push %rbx;""

        /* for each symbol character */
        ""movzb 2(%rsi), %rcx;""      /* load symbol size into count */
    ""numeral_symbol_loop:""
        ""movb 2(%rsi,%rcx), %bl;""   /* load character from symbol row */
        ""movb %bl, -1(%rdi,%rcx);""  /* store in buffer */
        ""loop numeral_symbol_loop;""
    ""end_numeral_symbol_loop:""

        /* old call frame */
        ""pop  %rbx;""
        ""pop  %rcx;""
        ""pop  %rsi;""
        ""pop  %rdi;""
        ""ret;""
    );
} /* end addSymbol(char *, char const *) */"
eJcQwXJP,gig,idnah,Python,Thursday 14th of December 2023 06:33:00 PM CDT,"if GigCET <= GigCD:
    GigCET = GigCET + 7"
HLi4hbab,"AoC 2023, day 14, part 1 (dc)",musifter,Bash,Thursday 14th of December 2023 06:29:41 PM CDT,"# Command: perl -pe's/(.)/$1 /g;y/.O#/012/' <input | dc -fpart1.dc

?
zdsn                                # n = size; i = n
[
    d 2 r:a                         # a(i) = 2
    1- d0<I
] dsIx
+                                   # clear i (+0)

[
    [
        z d;a 3* 3R+ r:a            # a(z) = 3*a(z) + top
        z0<L
    ] dsLx
    ? z0<M
] dsMx

[ lc1+sc ] sC

# Score: i h a(i) -> i h a(i)
[
    rd lcd                          # a(i) h  h c c
    3R2* r- 1+ *                    # a(i) h  c*(2h-c+1)
    2/
    ls+ss
    0sc
    r
] sS

ln                                  # i=n
[
    d;a 0r                          # i h=0 a(i)
    [
        3~                          # h a(i)=a(i)/3 val=a(i)%3
        d 1=C                       # count if val == 1
          2=S                       # score if val == 0; stack: h a(i)
        r1+r                        # h++
        d 0<H                       # loop if a(i) non-zero
    ] dsHx

    # stack: i h 0
    *+                              # clear 2 (+ 0*h)
    1- d0<I
] dsIx

[Part 1: ]nlsp
"
5j5ZZ9Qf,Home Assistant Core,LightMoon,Bash,Thursday 14th of December 2023 06:18:38 PM CDT,"2023-12-15 10:56:35.346 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration airtouch5 which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2023-12-15 10:56:35.350 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration grott which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2023-12-15 10:56:35.352 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration hacs which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2023-12-15 10:56:55.924 ERROR (MainThread) [homeassistant.components.mqtt.mixins] Error 'invalid template (TemplateSyntaxError: expected token 'end of print statement', got '_voltage') for dictionary value @ data['value_template']' when processing MQTT discovery message topic: 'homeassistant/sensor/grott/XGD6CM31UN_L1-2_voltage/config', message: '{'name': 'Phase1-2 Voltage', 'unique_id': 'grott_XGD6CM31UN_L1-2_voltage', 'state_topic': 'homeassistant/grott/XGD6CM31UN/state', 'device': {'identifiers': ['XGD6CM31UN'], 'name': 'XGD6CM31UN', 'manufacturer': 'GrowWatt'}, 'value_template': '{{ value_json.L1-2_voltage | float / 10 }}', 'state_class': 'measurement', 'device_class': 'voltage', 'unit_of_measurement': 'V', 'platform': 'mqtt'}'
2023-12-15 10:56:55.925 ERROR (MainThread) [homeassistant.components.mqtt.mixins] Error 'invalid template (TemplateSyntaxError: expected token 'end of print statement', got '_voltage') for dictionary value @ data['value_template']' when processing MQTT discovery message topic: 'homeassistant/sensor/grott/XGD6CM31UN_L2-3_voltage/config', message: '{'name': 'Phase2-3 Voltage', 'unique_id': 'grott_XGD6CM31UN_L2-3_voltage', 'state_topic': 'homeassistant/grott/XGD6CM31UN/state', 'device': {'identifiers': ['XGD6CM31UN'], 'name': 'XGD6CM31UN', 'manufacturer': 'GrowWatt'}, 'value_template': '{{ value_json.L2-3_voltage | float / 10 }}', 'state_class': 'measurement', 'device_class': 'voltage', 'unit_of_measurement': 'V', 'platform': 'mqtt'}'
2023-12-15 10:56:55.926 ERROR (MainThread) [homeassistant.components.mqtt.mixins] Error 'invalid template (TemplateSyntaxError: expected token 'end of print statement', got '_voltage') for dictionary value @ data['value_template']' when processing MQTT discovery message topic: 'homeassistant/sensor/grott/XGD6CM31UN_L3-1_voltage/config', message: '{'name': 'Phase3-1 Voltage', 'unique_id': 'grott_XGD6CM31UN_L3-1_voltage', 'state_topic': 'homeassistant/grott/XGD6CM31UN/state', 'device': {'identifiers': ['XGD6CM31UN'], 'name': 'XGD6CM31UN', 'manufacturer': 'GrowWatt'}, 'value_template': '{{ value_json.L3-1_voltage | float / 10 }}', 'state_class': 'measurement', 'device_class': 'voltage', 'unit_of_measurement': 'V', 'platform': 'mqtt'}'
2023-12-15 10:56:56.136 ERROR (MainThread) [homeassistant] Error doing job: Task exception was never retrieved"
PzrjGHUk,2023-12-14_stats.json,rdp_snitch,JSON,Thursday 14th of December 2023 06:18:03 PM CDT,"{
  ""ip"": {
    ""110.86.3.66"": 6,
    ""194.165.17.21"": 42,
    ""31.43.185.3"": 6,
    ""45.227.254.8"": 6,
    ""20.204.6.102"": 3,
    ""185.229.59.65"": 3,
    ""138.68.232.124"": 12,
    ""45.33.95.124"": 3,
    ""141.98.9.34"": 3,
    ""87.251.75.145"": 9,
    ""62.204.41.240"": 12,
    ""198.235.24.106"": 9,
    ""185.170.144.3"": 6,
    ""45.140.17.46"": 9,
    ""185.170.144.113"": 36,
    ""194.165.16.73"": 12,
    ""198.235.24.77"": 9,
    ""162.142.125.217"": 3,
    ""45.93.20.204"": 9,
    ""87.251.75.120"": 6,
    ""81.19.135.47"": 18,
    ""45.227.254.22"": 9,
    ""165.154.138.85"": 3,
    ""58.218.204.183"": 9,
    ""198.235.24.234"": 9,
    ""196.190.117.7"": 3,
    ""62.204.61.207"": 3,
    ""47.254.254.42"": 204,
    ""51.75.160.42"": 24,
    ""103.183.121.117"": 3,
    ""43.129.75.233"": 3,
    ""152.32.206.247"": 3,
    ""205.210.31.43"": 9,
    ""193.37.69.150"": 9,
    ""68.183.79.68"": 3
  },
  ""asn"": {
    ""AS4134"": 15,
    ""AS48721"": 54,
    ""AS211736"": 6,
    ""AS267784"": 15,
    ""AS8075"": 3,
    ""AS147049"": 3,
    ""AS14061"": 15,
    ""AS63949"": 3,
    ""AS209588"": 21,
    ""AS208091"": 24,
    ""AS59425"": 12,
    ""AS396982"": 36,
    ""AS197414"": 42,
    ""AS198953"": 9,
    ""AS398324"": 3,
    ""AS57523"": 9,
    ""AS135377"": 6,
    ""AS24757"": 3,
    ""AS34412"": 3,
    ""AS45102"": 204,
    ""AS16276"": 24,
    ""AS135918"": 3,
    ""AS132203"": 3
  },
  ""isp"": {
    ""Chinanet"": 15,
    ""Flyservers S.A."": 90,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Microsoft Corporation"": 3,
    ""PacketHub S.A."": 3,
    ""DigitalOcean, LLC"": 15,
    ""Akamai Technologies, Inc."": 3,
    ""Xhost Internet Solutions LP"": 57,
    ""Horizon LLC"": 12,
    ""Google LLC"": 36,
    ""Proton66 OOO"": 9,
    ""Censys, Inc."": 3,
    ""Chang Way Technologies Co. Limited"": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Ethiotelecom"": 3,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 3,
    ""Alibaba (US) Technology Co., Ltd."": 204,
    ""OVH SAS"": 24,
    ""GRCITY"": 3,
    ""Aceville Pte.ltd"": 3,
    ""Xhost Internet Solutions"": 9
  },
  ""org"": {
    ""Chinanet FJ"": 6,
    ""Flyservers S.A"": 54,
    ""FOP Dmytro Nedilskyi"": 6,
    ""UAB Host Baltic"": 15,
    ""Microsoft Azure Cloud (centralindia)"": 3,
    ""NordVPN"": 3,
    ""DigitalOcean, LLC"": 15,
    ""Linode"": 3,
    ""Alviva Holding Limited"": 21,
    ""Xhost Internet Solutions"": 15,
    ""Horizon LLC"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhostis"": 42,
    ""Proton66 LLC"": 9,
    ""Censys Inc"": 3,
    ""Starcrecium Limited"": 9,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Chinanet JS"": 9,
    ""Unknown"": 6,
    ""Saba Abr Mizban LLC"": 3,
    ""Alibaba.com LLC"": 204,
    ""OVH Ltd"": 24,
    ""GREEN CITY Construction Investment Joint Stock Company"": 3,
    ""Ucloud Information Technology"": 3,
    ""XHOSTIS"": 9
  },
  ""regionName"": {
    ""Fujian"": 6,
    ""Kaunas"": 54,
    ""Dnipropetrovsk Oblast"": 6,
    ""Vilnius"": 15,
    ""Maharashtra"": 3,
    ""Missouri"": 3,
    ""California"": 48,
    ""New Jersey"": 3,
    ""North Holland"": 69,
    ""Moscow"": 30,
    ""Michigan"": 3,
    ""Sverdlovsk Oblast"": 18,
    ""Hesse"": 6,
    ""Jiangsu"": 9,
    ""Addis Ababa"": 3,
    ""Tehran"": 3,
    ""Kuala Lumpur"": 204,
    ""England"": 24,
    ""Gia Lai"": 3,
    ""Central and Western District"": 3,
    ""Virginia"": 3
  },
  ""country"": {
    ""China"": 15,
    ""Lithuania"": 69,
    ""Ukraine"": 6,
    ""India"": 3,
    ""United States"": 60,
    ""The Netherlands"": 69,
    ""Russia"": 48,
    ""Germany"": 6,
    ""Ethiopia"": 3,
    ""Iran"": 3,
    ""Malaysia"": 204,
    ""United Kingdom"": 24,
    ""Vietnam"": 3,
    ""Hong Kong"": 3
  },
  ""account"": {
    ""(empty)"": 15,
    ""hello"": 267,
    ""Administr"": 30,
    ""Test"": 51,
    ""0x24l7ap"": 12,
    ""beio"": 3,
    ""cQTlzYEcu"": 3,
    ""jTJGnv"": 3,
    ""bmftmB"": 3,
    ""Domain"": 96,
    ""nCYhrIHpz"": 3,
    ""rzfKhe"": 3,
    ""KYyCeS"": 3,
    ""Administrator"": 6,
    ""dfBZTqGNe"": 3,
    ""avDebl"": 3,
    ""ZpLpwy"": 3,
    ""scyepUaHt"": 3,
    ""XEQIbC"": 3,
    ""cSNyHL"": 3
  },
  ""keyboard"": {
    ""Unknown"": 516
  },
  ""client_build"": {
    ""Unknown"": 516
  },
  ""client_name"": {
    ""Unknown"": 516
  },
  ""ip_type"": {
    ""mobile"": 9,
    ""Unknown"": 192,
    ""hosting"": 282,
    ""proxy"": 21,
    ""hosting & proxy"": 12
  }
}"
rZ43ydGc,2023-12-14_stats.json,rdp_snitch,JSON,Thursday 14th of December 2023 06:16:08 PM CDT,"{
  ""ip"": {
    ""110.86.3.66"": 4,
    ""194.165.17.21"": 28,
    ""31.43.185.3"": 4,
    ""45.227.254.8"": 4,
    ""20.204.6.102"": 2,
    ""185.229.59.65"": 2,
    ""138.68.232.124"": 8,
    ""45.33.95.124"": 2,
    ""141.98.9.34"": 2,
    ""87.251.75.145"": 6,
    ""62.204.41.240"": 8,
    ""198.235.24.106"": 6,
    ""185.170.144.3"": 4,
    ""45.140.17.46"": 6,
    ""185.170.144.113"": 24,
    ""194.165.16.73"": 8,
    ""198.235.24.77"": 6,
    ""162.142.125.217"": 2,
    ""45.93.20.204"": 6,
    ""87.251.75.120"": 4,
    ""81.19.135.47"": 12,
    ""45.227.254.22"": 6,
    ""165.154.138.85"": 2,
    ""58.218.204.183"": 6,
    ""198.235.24.234"": 6,
    ""196.190.117.7"": 2,
    ""62.204.61.207"": 2,
    ""47.254.254.42"": 136,
    ""51.75.160.42"": 16,
    ""103.183.121.117"": 2,
    ""43.129.75.233"": 2,
    ""152.32.206.247"": 2,
    ""205.210.31.43"": 6,
    ""193.37.69.150"": 6,
    ""68.183.79.68"": 2
  },
  ""asn"": {
    ""AS4134"": 10,
    ""AS48721"": 36,
    ""AS211736"": 4,
    ""AS267784"": 10,
    ""AS8075"": 2,
    ""AS147049"": 2,
    ""AS14061"": 10,
    ""AS63949"": 2,
    ""AS209588"": 14,
    ""AS208091"": 16,
    ""AS59425"": 8,
    ""AS396982"": 24,
    ""AS197414"": 28,
    ""AS198953"": 6,
    ""AS398324"": 2,
    ""AS57523"": 6,
    ""AS135377"": 4,
    ""AS24757"": 2,
    ""AS34412"": 2,
    ""AS45102"": 136,
    ""AS16276"": 16,
    ""AS135918"": 2,
    ""AS132203"": 2
  },
  ""isp"": {
    ""Chinanet"": 10,
    ""Flyservers S.A."": 60,
    ""FOP Dmytro Nedilskyi"": 4,
    ""Microsoft Corporation"": 2,
    ""PacketHub S.A."": 2,
    ""DigitalOcean, LLC"": 10,
    ""Akamai Technologies, Inc."": 2,
    ""Xhost Internet Solutions LP"": 38,
    ""Horizon LLC"": 8,
    ""Google LLC"": 24,
    ""Proton66 OOO"": 6,
    ""Censys, Inc."": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Ethiotelecom"": 2,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 2,
    ""Alibaba (US) Technology Co., Ltd."": 136,
    ""OVH SAS"": 16,
    ""GRCITY"": 2,
    ""Aceville Pte.ltd"": 2,
    ""Xhost Internet Solutions"": 6
  },
  ""org"": {
    ""Chinanet FJ"": 4,
    ""Flyservers S.A"": 36,
    ""FOP Dmytro Nedilskyi"": 4,
    ""UAB Host Baltic"": 10,
    ""Microsoft Azure Cloud (centralindia)"": 2,
    ""NordVPN"": 2,
    ""DigitalOcean, LLC"": 10,
    ""Linode"": 2,
    ""Alviva Holding Limited"": 14,
    ""Xhost Internet Solutions"": 10,
    ""Horizon LLC"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhostis"": 28,
    ""Proton66 LLC"": 6,
    ""Censys Inc"": 2,
    ""Starcrecium Limited"": 6,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Chinanet JS"": 6,
    ""Unknown"": 4,
    ""Saba Abr Mizban LLC"": 2,
    ""Alibaba.com LLC"": 136,
    ""OVH Ltd"": 16,
    ""GREEN CITY Construction Investment Joint Stock Company"": 2,
    ""Ucloud Information Technology"": 2,
    ""XHOSTIS"": 6
  },
  ""regionName"": {
    ""Fujian"": 4,
    ""Kaunas"": 36,
    ""Dnipropetrovsk Oblast"": 4,
    ""Vilnius"": 10,
    ""Maharashtra"": 2,
    ""Missouri"": 2,
    ""California"": 32,
    ""New Jersey"": 2,
    ""North Holland"": 46,
    ""Moscow"": 20,
    ""Michigan"": 2,
    ""Sverdlovsk Oblast"": 12,
    ""Hesse"": 4,
    ""Jiangsu"": 6,
    ""Addis Ababa"": 2,
    ""Tehran"": 2,
    ""Kuala Lumpur"": 136,
    ""England"": 16,
    ""Gia Lai"": 2,
    ""Central and Western District"": 2,
    ""Virginia"": 2
  },
  ""country"": {
    ""China"": 10,
    ""Lithuania"": 46,
    ""Ukraine"": 4,
    ""India"": 2,
    ""United States"": 40,
    ""The Netherlands"": 46,
    ""Russia"": 32,
    ""Germany"": 4,
    ""Ethiopia"": 2,
    ""Iran"": 2,
    ""Malaysia"": 136,
    ""United Kingdom"": 16,
    ""Vietnam"": 2,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""(empty)"": 10,
    ""hello"": 178,
    ""Administr"": 20,
    ""Test"": 34,
    ""0x24l7ap"": 8,
    ""beio"": 2,
    ""cQTlzYEcu"": 2,
    ""jTJGnv"": 2,
    ""bmftmB"": 2,
    ""Domain"": 64,
    ""nCYhrIHpz"": 2,
    ""rzfKhe"": 2,
    ""KYyCeS"": 2,
    ""Administrator"": 4,
    ""dfBZTqGNe"": 2,
    ""avDebl"": 2,
    ""ZpLpwy"": 2,
    ""scyepUaHt"": 2,
    ""XEQIbC"": 2,
    ""cSNyHL"": 2
  },
  ""keyboard"": {
    ""Unknown"": 344
  },
  ""client_build"": {
    ""Unknown"": 344
  },
  ""client_name"": {
    ""Unknown"": 344
  },
  ""ip_type"": {
    ""mobile"": 6,
    ""Unknown"": 128,
    ""hosting"": 188,
    ""proxy"": 14,
    ""hosting & proxy"": 8
  }
}"
u0uAseRK,2023-12-14_stats.json,rdp_snitch,JSON,Thursday 14th of December 2023 06:15:09 PM CDT,"{
  ""ip"": {
    ""110.86.3.66"": 2,
    ""194.165.17.21"": 14,
    ""31.43.185.3"": 2,
    ""45.227.254.8"": 2,
    ""20.204.6.102"": 1,
    ""185.229.59.65"": 1,
    ""138.68.232.124"": 4,
    ""45.33.95.124"": 1,
    ""141.98.9.34"": 1,
    ""87.251.75.145"": 3,
    ""62.204.41.240"": 4,
    ""198.235.24.106"": 3,
    ""185.170.144.3"": 2,
    ""45.140.17.46"": 3,
    ""185.170.144.113"": 12,
    ""194.165.16.73"": 4,
    ""198.235.24.77"": 3,
    ""162.142.125.217"": 1,
    ""45.93.20.204"": 3,
    ""87.251.75.120"": 2,
    ""81.19.135.47"": 6,
    ""45.227.254.22"": 3,
    ""165.154.138.85"": 1,
    ""58.218.204.183"": 3,
    ""198.235.24.234"": 3,
    ""196.190.117.7"": 1,
    ""62.204.61.207"": 1,
    ""47.254.254.42"": 68,
    ""51.75.160.42"": 8,
    ""103.183.121.117"": 1,
    ""43.129.75.233"": 1,
    ""152.32.206.247"": 1,
    ""205.210.31.43"": 3,
    ""193.37.69.150"": 3,
    ""68.183.79.68"": 1
  },
  ""asn"": {
    ""AS4134"": 5,
    ""AS48721"": 18,
    ""AS211736"": 2,
    ""AS267784"": 5,
    ""AS8075"": 1,
    ""AS147049"": 1,
    ""AS14061"": 5,
    ""AS63949"": 1,
    ""AS209588"": 7,
    ""AS208091"": 8,
    ""AS59425"": 4,
    ""AS396982"": 12,
    ""AS197414"": 14,
    ""AS198953"": 3,
    ""AS398324"": 1,
    ""AS57523"": 3,
    ""AS135377"": 2,
    ""AS24757"": 1,
    ""AS34412"": 1,
    ""AS45102"": 68,
    ""AS16276"": 8,
    ""AS135918"": 1,
    ""AS132203"": 1
  },
  ""isp"": {
    ""Chinanet"": 5,
    ""Flyservers S.A."": 30,
    ""FOP Dmytro Nedilskyi"": 2,
    ""Microsoft Corporation"": 1,
    ""PacketHub S.A."": 1,
    ""DigitalOcean, LLC"": 5,
    ""Akamai Technologies, Inc."": 1,
    ""Xhost Internet Solutions LP"": 19,
    ""Horizon LLC"": 4,
    ""Google LLC"": 12,
    ""Proton66 OOO"": 3,
    ""Censys, Inc."": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Ethiotelecom"": 1,
    ""Saba Hour Yeganeh Co. ( Private Joint Stock)"": 1,
    ""Alibaba (US) Technology Co., Ltd."": 68,
    ""OVH SAS"": 8,
    ""GRCITY"": 1,
    ""Aceville Pte.ltd"": 1,
    ""Xhost Internet Solutions"": 3
  },
  ""org"": {
    ""Chinanet FJ"": 2,
    ""Flyservers S.A"": 18,
    ""FOP Dmytro Nedilskyi"": 2,
    ""UAB Host Baltic"": 5,
    ""Microsoft Azure Cloud (centralindia)"": 1,
    ""NordVPN"": 1,
    ""DigitalOcean, LLC"": 5,
    ""Linode"": 1,
    ""Alviva Holding Limited"": 7,
    ""Xhost Internet Solutions"": 5,
    ""Horizon LLC"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhostis"": 14,
    ""Proton66 LLC"": 3,
    ""Censys Inc"": 1,
    ""Starcrecium Limited"": 3,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Chinanet JS"": 3,
    ""Unknown"": 2,
    ""Saba Abr Mizban LLC"": 1,
    ""Alibaba.com LLC"": 68,
    ""OVH Ltd"": 8,
    ""GREEN CITY Construction Investment Joint Stock Company"": 1,
    ""Ucloud Information Technology"": 1,
    ""XHOSTIS"": 3
  },
  ""regionName"": {
    ""Fujian"": 2,
    ""Kaunas"": 18,
    ""Dnipropetrovsk Oblast"": 2,
    ""Vilnius"": 5,
    ""Maharashtra"": 1,
    ""Missouri"": 1,
    ""California"": 16,
    ""New Jersey"": 1,
    ""North Holland"": 23,
    ""Moscow"": 10,
    ""Michigan"": 1,
    ""Sverdlovsk Oblast"": 6,
    ""Hesse"": 2,
    ""Jiangsu"": 3,
    ""Addis Ababa"": 1,
    ""Tehran"": 1,
    ""Kuala Lumpur"": 68,
    ""England"": 8,
    ""Gia Lai"": 1,
    ""Central and Western District"": 1,
    ""Virginia"": 1
  },
  ""country"": {
    ""China"": 5,
    ""Lithuania"": 23,
    ""Ukraine"": 2,
    ""India"": 1,
    ""United States"": 20,
    ""The Netherlands"": 23,
    ""Russia"": 16,
    ""Germany"": 2,
    ""Ethiopia"": 1,
    ""Iran"": 1,
    ""Malaysia"": 68,
    ""United Kingdom"": 8,
    ""Vietnam"": 1,
    ""Hong Kong"": 1
  },
  ""account"": {
    ""(empty)"": 5,
    ""hello"": 89,
    ""Administr"": 10,
    ""Test"": 17,
    ""0x24l7ap"": 4,
    ""beio"": 1,
    ""cQTlzYEcu"": 1,
    ""jTJGnv"": 1,
    ""bmftmB"": 1,
    ""Domain"": 32,
    ""nCYhrIHpz"": 1,
    ""rzfKhe"": 1,
    ""KYyCeS"": 1,
    ""Administrator"": 2,
    ""dfBZTqGNe"": 1,
    ""avDebl"": 1,
    ""ZpLpwy"": 1,
    ""scyepUaHt"": 1,
    ""XEQIbC"": 1,
    ""cSNyHL"": 1
  },
  ""keyboard"": {
    ""Unknown"": 172
  },
  ""client_build"": {
    ""Unknown"": 172
  },
  ""client_name"": {
    ""Unknown"": 172
  },
  ""ip_type"": {
    ""mobile"": 3,
    ""Unknown"": 64,
    ""hosting"": 94,
    ""proxy"": 7,
    ""hosting & proxy"": 4
  }
}"
viKSD2Ss,Grott Beta branch (2.8),LightMoon,Bash,Thursday 14th of December 2023 06:14:24 PM CDT,"	 - Grott extension processing disabled 

	 - Growatt packet received:
		  <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 2006)>
	 - Data less then minimum record length, data not processed

	 - Growatt packet received:
		  <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 39098), raddr=('47.91.67.66', 5279)>
	 - Growatt original Data:
		 \x00\x45\x00\x06\x01\x0e\x01\x20\x1f\x35\x2b\x41\x22\x39\x47\x76\x27\x21\x77
		 \x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72
		 \x3c\x27\x2c\x46\x30\x05\x37\x5f\x43\x55\x74\x74\x47\x72\x6f\x77\x61\x74\x74
		 \x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x76\x78\x7b\x4c\x75\x4f\x77\xa9
		 \x74\x74\x47\xf6\x6f\x77\x68\xf9\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
		 \xd7\x61\x74\x74\x47\x72\x6f\x77\x61\x8b\x8b\x39\xdd\x6f\x77\x61\x74\x74\x47
		 \x72\x6f\x77\x61\xfb\x9e\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x36\xa0\x74
		 \x74\x47\x72\x6f\x77\x61\x74\x8b\xb8\x8e\xea\x77\x61\x74\x74\x47\x72\x6f\x77
		 \x9e\x8b\x0a\xe8\x72\x6f\xf8\x8b\x74\x74\x06\xb3\x90\x88\x9d\xf1\x74\x47\x73
		 \x9b\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x7a\x65\x74\x74
		 \x0f\xd8\x6f\x77\x5b\x08\x74\x47\x77\x4a\x77\x61\x74\x74\x47\x72\x3a\xd9\x61
		 \x74\x4b\xe5\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
		 \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
		 \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
		 \x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x9f\x4e
	 - Grott automatic protocol detection
	 - Grott data record length 278
	 - layout   :  T060120
	 - Record layout used :  T060120
	 - Growatt data decrypted V2
	 - Grott Growatt data decrypted
	 - Growatt plain data:
		 00450006010e012058474436434d3331554e00000000000000000000000000000000000000005
		 3504d324442453034340000000000000000000000000000000000000000170c0f0b072000c800
		 0000840000098d0000000000000000000000a00000000000000000ffff7eaf000000000000000
		 000008fea0000000000000000000041c10000000000000000fffffc850000000000000000ffff
		 7eaf00008fea000041c1fffffc85000001f400000000000000000000000000000d04000048aa0
		 0003a7c0000052500000000000055ae00003fa200000000000000000000000000000000000000
		 00000000000000000000000000000000000000000000000000000000000000000000000000000
		 0000000000000f039
	 - Growatt new layout processing
		 - decrypt       :  True
		 - offset        :  6
		 - record layout :  T060120

	 - Grott data record date/time processing started
	 - date-time:  2023-12-15T11:07:32
	 - Grott values retrieved:
		 -  datalogserial        :  XGD6CM31UN
		 -  pvserial             :  SPM2DBE044
		 -  voltage_l1           :  244.5
		 -  voltage_l2           :  0.0
		 -  voltage_l3           :  0.0
		 -  Current_l1           :  16.0
		 -  Current_l2           :  0.0
		 -  Current_l3           :  0.0
		 -  act_power_l1         :  -3310.5
		 -  act_power_l2         :  0.0
		 -  act_power_l3         :  0.0
		 -  app_power_l1         :  3684.2
		 -  app_power_l2         :  0.0
		 -  app_power_l3         :  0.0
		 -  react_power_l1       :  1683.3
		 -  react_power_l2       :  0.0
		 -  react_power_l3       :  0.0
		 -  powerfactor_l1       :  -0.9
		 -  powerfactor_l2       :  0.0
		 -  powerfactor_l3       :  0.0
		 -  pos_rev_act_power    :  -3310.5
		 -  pos_act_power        :  -3310.5
		 -  rev_act_power        :  -3310.5
		 -  app_power            :  3684.2
		 -  react_power          :  1683.3
		 -  powerfactor          :  -0.9
		 -  frequency            :  50.0
		 -  L1-2_voltage         :  0.0
		 -  L2-3_voltage         :  0.0
		 -  L3-1_voltage         :  0.0
		 -  pos_act_energy       :  333.2
		 -  rev_act_energy       :  1860.2
	 - MQTT jsonmsg: 
			 {""device"": ""XGD6CM31UN"", ""time"": ""2023-12-15T11:07:32"", ""buffered"": ""no"",
			 ""values"": {""datalogserial"": ""XGD6CM31UN"", ""pvserial"": ""SPM2DBE044"",
			 ""voltage_l1"": 2445, ""voltage_l2"": 0, ""voltage_l3"": 0, ""Current_l1"": 160,
			 ""Current_l2"": 0, ""Current_l3"": 0, ""act_power_l1"": -33105, ""act_power_l2"": 0,
			 ""act_power_l3"": 0, ""app_power_l1"": 36842, ""app_power_l2"": 0, ""app_power_l3"":
			 0, ""react_power_l1"": 16833, ""react_power_l2"": 0, ""react_power_l3"": 0,
			 ""powerfactor_l1"": -891, ""powerfactor_l2"": 0, ""powerfactor_l3"": 0,
			 ""pos_rev_act_power"": -33105, ""pos_act_power"": -33105, ""rev_act_power"":
			 -33105, ""app_power"": 36842, ""react_power"": 16833, ""powerfactor"": -891,
			 ""frequency"": 500, ""L1-2_voltage"": 0, ""L2-3_voltage"": 0, ""L3-1_voltage"": 0,
			 ""pos_act_energy"": 3332, ""rev_act_energy"": 18602}}
	 - Grott MQTT topic used : energy/growatt
	 - MQTT message message sent
	 - Grott Send data to PVOutput disabled 
	 - Grott Send data to Influx disabled 
	 - Grott extension processing disabled 

	 - Growatt packet received:
		  <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 2006)>
	 - Data less then minimum record length, data not processed"
kGyUipSH,ha host logs --identifier addon_1ef934e0_grott-beta,LightMoon,Bash,Thursday 14th of December 2023 06:12:21 PM CDT,"Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x60\x55\x1d\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x2c\xc8\x74
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x8b\xb8\x8e\x23\x77\x61\x74\x74\x47\x72\x6f\x77
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9e\x8a\x99\x9c\x72\x6e\x56\x08\x74\x74\x1c\xdb\x90\x88\x9d\x38\x74\x47\x73
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x9b\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x7a\x65\x74\x74
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x0f\xd4\x6f\x77\x5b\x0f\x74\x47\x77\x4a\x77\x61\x74\x74\x47\x72\x3a\xdd\x61
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x4b\xe7\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x6f\x77\x61\x74
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  \x74\x47\x72\x6f\x77\x61\x74\x74\x47\x72\x90\x89
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott automatic protocol detection
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record length 278
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - layout   :  T060120
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Record layout used :  T060120
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt data decrypted V2
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Growatt data decrypted
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt plain data:
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  00440006010e012058474436434d3331554e00000000000000000000000000000000000000005
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  3504d324442453034340000000000000000000000000000000000000000170c0f0b022b00c800
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  000084000009a10000000000000000000001300000000000000000fffeeddb000000000000000
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  000012169000000000000000000005ba90000000000000000fffffc4c0000000000000000fffe
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  eddb0001216900005ba9fffffc4c000001f400000000000000000000000000000d04000048a60
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  0003a7b0000052500000000000055aa00003fa000000000000000000000000000000000000000
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  00000000000000000000000000000000000000000000000000000000000000000000000000000
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  0000000000000fffe
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt new layout processing
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  - decrypt       :  True
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  - offset        :  6
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  - record layout :  T060120
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott data record date/time processing started
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - date-time:  2023-12-15T11:02:43
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott values retrieved:
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  datalogserial        :  XGD6CM31UN
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pvserial             :  SPM2DBE044
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l1           :  246.5
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l2           :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  voltage_l3           :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l1           :  30.4
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l2           :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  Current_l3           :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l1         :  -7018.1
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l2         :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  act_power_l3         :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l1         :  7408.9
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l2         :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power_l3         :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l1       :  2346.5
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l2       :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power_l3       :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l1       :  -0.9
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l2       :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor_l3       :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_rev_act_power    :  -7018.1
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_act_power        :  -7018.1
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  rev_act_power        :  -7018.1
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  app_power            :  7408.9
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  react_power          :  2346.5
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  powerfactor          :  -0.9
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  frequency            :  50.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L1-2_voltage         :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L2-3_voltage         :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  L3-1_voltage         :  0.0
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  pos_act_energy       :  333.2
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                  -  rev_act_energy       :  1859.8
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT jsonmsg: 
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          {""device"": ""XGD6CM31UN"", ""time"": ""2023-12-15T11:02:43"", ""buffered"": ""no"",
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          ""values"": {""datalogserial"": ""XGD6CM31UN"", ""pvserial"": ""SPM2DBE044"",
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          ""voltage_l1"": 2465, ""voltage_l2"": 0, ""voltage_l3"": 0, ""Current_l1"": 304,
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          ""Current_l2"": 0, ""Current_l3"": 0, ""act_power_l1"": -70181, ""act_power_l2"": 0,
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          ""act_power_l3"": 0, ""app_power_l1"": 74089, ""app_power_l2"": 0, ""app_power_l3"":
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          0, ""react_power_l1"": 23465, ""react_power_l2"": 0, ""react_power_l3"": 0,
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          ""powerfactor_l1"": -948, ""powerfactor_l2"": 0, ""powerfactor_l3"": 0,
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pos_rev_act_power"": -70181, ""pos_act_power"": -70181, ""rev_act_power"":
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          -70181, ""app_power"": 74089, ""react_power"": 23465, ""powerfactor"": -948,
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          ""frequency"": 500, ""L1-2_voltage"": 0, ""L2-3_voltage"": 0, ""L3-1_voltage"": 0,
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:                          ""pos_act_energy"": 3332, ""rev_act_energy"": 18598}}
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott MQTT topic used : energy/growatt
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - MQTT message message sent
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to PVOutput disabled 
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott Send data to Influx disabled 
Dec 15 00:02:51 homeassistant addon_1ef934e0_grott-beta[400]:          - Grott extension processing disabled 
Dec 15 00:02:52 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 00:02:52 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 00:02:52 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 2006)>
Dec 15 00:02:52 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 00:03:25 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 00:03:25 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 00:03:25 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 39098), raddr=('47.91.67.66', 5279)>
Dec 15 00:03:25 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 00:03:26 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 00:03:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 00:03:26 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 2006)>
Dec 15 00:03:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 00:06:26 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 00:06:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 00:06:26 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=4, family=2, type=1, proto=0, laddr=('172.30.33.3', 39098), raddr=('47.91.67.66', 5279)>
Dec 15 00:06:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
Dec 15 00:06:26 homeassistant addon_1ef934e0_grott-beta[400]: 
Dec 15 00:06:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Growatt packet received:
Dec 15 00:06:26 homeassistant addon_1ef934e0_grott-beta[400]:                   <socket.socket fd=5, family=2, type=1, proto=0, laddr=('172.30.33.3', 5279), raddr=('192.168.10.92', 2006)>
Dec 15 00:06:26 homeassistant addon_1ef934e0_grott-beta[400]:          - Data less then minimum record length, data not processed
"
GnErDTNW,AoC 2023 day 13 (Smalltalk),musifter,Smalltalk,Thursday 14th of December 2023 04:09:24 PM CDT,"#!/usr/local/bin/gst -q

Symbol extend     [ value: obj     [^obj perform: self] ]

Integer extend    [ oneBitSet      [^(self bitAnd: (self - 1)) = 0] ]
Collection extend [ reduceAsBinary [^self inject: 0 into: [:num :dig | num*2 + dig]] ]

Array extend [
    "" Method for finding index of reflection line in part 1: ""
    findMirrorIndex [
        | stack |
        stack := OrderedCollection with: (self first).
        self allButFirst keysAndValuesDo: [:i :val |
            (val = stack last) ifTrue:  [ stack removeLast ]
                               ifFalse: [ stack add: val   ].

            (stack isEmpty) ifTrue: [ ^(i+1) / 2 ]
        ].
        ^0
    ]

    "" Method for finding index of reflection line in part 2: ""
    findSmudgedIndex [
        | check pushVal popVal back |

        (1 to: self size // 2) do: [:depth |
            back  := depth * 2 + 1.
            check := 0.
            (1 to: depth) do: [:i |
                pushVal := self at: i.
                popVal  := self at: back - i.
                (pushVal ~= popVal) ifTrue: [
                    "" add one if 1 bit, 2 if more ""
                    check := check + ((pushVal bitXor: popVal) oneBitSet ifTrue:  [1]
                                                                         ifFalse: [2]).
                ].
            ].

            "" Check equals 1 only when exactly one 1-bit difference is seen ""
            (check = 1) ifTrue: [ ^depth ].
        ].
        ^0
    ]

    "" Scoring for problem: ""
    score  [ ^100 * self first + self second ]

    scanForMirrors: symMethod [
        | score |
        "" Try backwards mirrors: ""
        score := ((self collect: #reverse) collect: [:list | |val|
                     val := list perform: symMethod.
                     (val ~= 0) ifTrue: [ list size - val ] ifFalse: [0].
                 ]) score.

        "" Try forwards mirrors: ""
        score := score + (self collect: symMethod) score.

        ^score
    ]
]

""
| Mainline
""
input := stdin contents tokenize: '\n\n'.

grids := input collect: [:grid |
             (grid tokenize: '\n') collect: [:line |
                 line asArray collect: [:chr | (chr = $#) ifTrue: [1] ifFalse: [0]].
             ]
         ].

part1 := 0.
part2 := 0.

grids do: [:grid |
    "" dimArrays has two elements: array of rows and array of cols ""
    dimArrays := {
        "" Parse rows as binary numbers: ""
        grid collect: #reduceAsBinary.

        "" Parse cols as binary numbers: ""
        (1 to: grid first size) collect: [:col |
            (grid collect: [:row | row at: col]) reduceAsBinary
        ].
    }.

    part1 := part1 + (dimArrays scanForMirrors: #findMirrorIndex).
    part2 := part2 + (dimArrays scanForMirrors: #findSmudgedIndex).
].


('Part 1: %1' % {part1}) displayNl.
('Part 2: %1' % {part2}) displayNl."
TuR5w90f,AoC 2023 day 14 (Perl),musifter,Perl,Thursday 14th of December 2023 04:05:23 PM CDT,"#!/usr/bin/perl

use strict;
use warnings;

use feature         qw(say);
use List::AllUtils  qw(indexes);

$| = 1;

# Read in text grid:
use Math::Vector::Real;

my ($vy,$vx) = Math::Vector::Real->canonical_base(2);

# Read in grid:
my @Grid = map { chomp; ['#', split(//), '#'] } <>;
my $Size = scalar( @Grid );                 # ASSUME: square platform
unshift( @Grid, [('#') x ($Size + 2)] );
push( @Grid, [('#') x ($Size + 2)] );

my @Dirs  = (-$vy, -$vx, $vy, $vx);         #  NWSE (order required)
my @Perp  = ( $vx,  $vy, $vx, $vy);

my @Start = (V($Size,1), V(1,$Size), V(1,1), V(1,1));

sub grid_at  ($)  { my $p = shift; return ($Grid[$p->[0]][$p->[1]]) }
sub grid_set ($$) { my ($p,$c) = @_; $Grid[$p->[0]][$p->[1]] = $c   }
sub print_grid    { say ""\t"", join( '', @$_ ) foreach (@Grid)       }

sub shift_grid {
    my $d = shift;

    my $count = 0;
    my $y = $Start[$d];
    for (my $i = 0; $i < $Size; $i++) {

        my $x = $y;
        for (my $j = 0; $j <= $Size; $j++) {
            if (grid_at($x) eq 'O') {
                grid_set($x, '.');
                $count++;

            } elsif (grid_at($x) eq '#') {
                my $p = $x - $Dirs[$d];
                for (my $k = 0; $k < $count; $k++) {
                    grid_set($p, 'O');
                    $p -= $Dirs[$d];
                }

                $count = 0;
            }
            $x += $Dirs[$d];
        }
        $y += $Perp[$d];
    }
}

sub score_grid {
    my $score = 0;
    my @stones;

    foreach (my $y = 1; $y <= $Size; $y++) {
        my $h = @Grid - $y - 1;
        my @s = indexes { $_ eq 'O' } $Grid[$y]->@*;

        $score += $h * @s;
        push( @stones, ""$y:"" . join(',', @s) );
    }

    return ($score, join(';', @stones));
}

#
# Part 1
#
&shift_grid(0);
say ""Part 1: "", (&score_grid)[0];

#
# Part 2
#
my $Num_Cycles = 1_000_000_000;

my %hash;
my @scores;

CYCLE:
foreach my $i (0 .. $Num_Cycles - 1) {
    &shift_grid($_) foreach (0 .. 3);

    my ($score, $stones) = &score_grid;
    push( @scores, $score );

    print ::stderr ""Cycle: $i; Score: $score \r""  if ($i % 10 == 0);

    if (!exists $hash{$stones}) {
        $hash{$stones} = $i;
        next CYCLE;
    }

    my $cycle_len = $i - $hash{$stones};
    my $mod = ($Num_Cycles - 1) % $cycle_len;

    say ""\nPart 2: "", $scores[$i - $cycle_len + ($mod - $i % $cycle_len)];
    last;
}"
57pvsaJN,illuminate.java,tchnmncr,Java,Thursday 14th of December 2023 04:05:01 PM CDT,"/* This code was generated by ChatGPT with this header comment added my me.

This code requires the necessary permissions for camera access and audio recording (for voice recognition), which need to be declared in your AndroidManifest.xml file:

<uses-permission android:name=""android.permission.CAMERA"" />
<uses-feature android:name=""android.hardware.camera"" />
<uses-feature android:name=""android.hardware.camera.flash"" />
<uses-permission android:name=""android.permission.RECORD_AUDIO"" />
<uses-permission android:name=""android.permission.INTERNET"" />

*/

import android.Manifest;
import android.content.pm.PackageManager;
import android.hardware.camera2.CameraAccessException;
import android.hardware.camera2.CameraManager;
import android.os.Bundle;
import android.speech.RecognizerIntent;
import android.speech.SpeechRecognizer;
import android.content.Intent;
import android.speech.RecognitionListener;
import android.support.annotation.NonNull;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.widget.Toast;
import java.util.ArrayList;
import java.util.Locale;

public class MainActivity extends AppCompatActivity {

    private SpeechRecognizer speechRecognizer;
    private CameraManager cameraManager;
    private String cameraId;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        cameraManager = (CameraManager) getSystemService(CAMERA_SERVICE);
        try {
            cameraId = cameraManager.getCameraIdList()[0];
        } catch (CameraAccessException e) {
            e.printStackTrace();
        }

        speechRecognizer = SpeechRecognizer.createSpeechRecognizer(this);
        Intent speechRecognizerIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        speechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
        speechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault());

        speechRecognizer.setRecognitionListener(new RecognitionListener() {
            @Override
            public void onResults(Bundle bundle) {
                ArrayList<String> data = bundle.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);
                if (data != null && data.get(0).equalsIgnoreCase(""Illuminate"")) {
                    toggleFlashLight();
                }
            }

            // Implement other necessary methods of RecognitionListener interface
        });

        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.RECORD_AUDIO}, 1);
        } else {
            speechRecognizer.startListening(speechRecognizerIntent);
        }
    }

    private void toggleFlashLight() {
        try {
            if (getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA_FLASH)) {
                cameraManager.setTorchMode(cameraId, true); // Turn on
                Toast.makeText(this, ""Flashlight turned on"", Toast.LENGTH_SHORT).show();
            }
        } catch (CameraAccessException e) {
            e.printStackTrace();
        }
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (speechRecognizer != null) {
            speechRecognizer.destroy();
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == 1 && grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            speechRecognizer.startListening(new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH));
        }
    }
}


"
sSkrMhjU,17.1,myloyo,C#,Thursday 14th of December 2023 04:01:41 PM CDT,"using System;
using System.IO;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Security.Cryptography.X509Certificates;

namespace myloyorrr
{
    class Program
    {
        class SPoint
        {
            private int x, y;
            public SPoint() { } //конструктор с нулевыми координатами
            public SPoint(int x, int y) { //конструктор с заданными координатами
                this.x = x; this.y = y ; 
            }
            public SPoint(SPoint a) 
            {
                this.x = a.x; this.y = a.y;
            }
            public void Show(StreamWriter sw) // выводим координаты точки на экран
            {
                sw.WriteLine(""({0}, {1})"", this.x, this.y);
            }
            public double Distance() // расстояние от начала координат до точки
            {
                return Math.Sqrt(x * x + y * y);
            }
            public int[] Vector(int a, int b) // перемещаем точку на вектор
            {
                this.x = x + a;
                this.y = y + b;
                int[] coord = {x, y};
                return coord;
            }
            public int X //получить-установить точку х
            {
                get { return x; }
                set { x = value; }
            }
            public int Y //получить-установить точку y
            {
                get { return y; }
                set { y = value; }
            }
            public int Mul //умножаем точку на скаляр
            {
                set
                {
                    x *= value;
                    y *= value;
                }
            }
            public int this[int i] //индексатор
            {
                get
                {
                    if (i == 0)
                    {
                        return x;
                    }
                    else if (i == 1)
                    {
                        return y;
                    }
                    else
                    {
                        throw new IndexOutOfRangeException(""unacceptable index"");
                    }
                }
                set
                {
                    if (i == 0)
                    {
                        x = value;
                    }
                    else if (i == 1)
                    {
                        y = value;
                    }
                    else
                    {
                        throw new IndexOutOfRangeException(""unacceptable index"");
                    }
                }
            }
            public static SPoint operator++(SPoint x)
            {
                SPoint p = new SPoint(x);
                p.x++;
                p.y++;
                return p;
            }
            public static SPoint operator --(SPoint x)
            {
                SPoint p = new SPoint(x);
                p.x -= 1;
                p.y -= 1;
                return p;
            }
            public static bool operator true(SPoint a)
            {
                if (a.x != a.y)
                {
                    return false;
                }
                return true;
            }
            public static bool operator false(SPoint a)
            {
                if (a.x == a.y)
                {
                    return false;
                }
                return true;
            }
            public static SPoint operator +(SPoint t, int a)
            {
                SPoint temp = new SPoint(t);
                temp.x += a;
                temp.y += a;
                return temp;

            }
            public static SPoint operator -(SPoint t, int a)
            {
                SPoint temp = new SPoint(t);
                temp.x -= a;
                temp.y -= a;
                return temp;
            }

        }
        static void Main()
        {
            using (StreamReader sr = new StreamReader(""C:/Настя/книит/in.txt""))
            {
                using (StreamWriter sw = new StreamWriter(""C:/Настя/книит/out.txt""))
                {
                    SPoint t = new SPoint (3, 3); // создаем точку (2,3)
                    t.Show(sw);

                    double r = t.Distance();
                    sw.WriteLine(r); // расстояние от начала координат до точки

                    t.Vector(3, 4); // перемещаем точку на вектор
                    t.Show(sw);

                    t.X = -5; // изменяем координату точки х
                    t.Y = -3; // изменяем координату точки у
                    t.Show(sw);

                    t.Mul = 5;
                    t.Show(sw);

                    sw.WriteLine(t[0]);
                    sw.WriteLine(t[1]);

                    t++;
                    t.Show(sw);
                    t--;
                    t.Show(sw);

                    if (t)
                    {
                        sw.WriteLine(""значения полей одинаковые"");
                    }
                    else
                    {
                        sw.WriteLine(""значения полей разные"");
                    }

                    t.X = -15;
                    if (t)
                    {
                        sw.WriteLine(""значения полей одинаковые"");
                    }
                    else
                    {
                        sw.WriteLine(""значения полей разные"");
                    }

                    t = t + 4;
                    t.Show(sw);

                    t = t - 10;
                    t.Show(sw);

                    sw.WriteLine(t[2]);

                }
            }

        }
    }
}"
LH34Gwb2,"Vaughan Aleman Frases Clave, Audios",bpmircea,BrainFuck,Thursday 14th of December 2023 03:59:21 PM CDT,"Vaughan Aleman Frases Clave
Audios

Uploading..."
55MBekDP,WooCommerce:  Modifica el precio de los productos para países específicos,YordanSoares,PHP,Thursday 14th of December 2023 03:35:40 PM CDT,"<?php
/**
 * WooCommerce:
 * Modifica el precio de los productos para países específicos
 */
add_filter( 'woocommerce_product_get_price', 'wc_return_custom_price', 10, 2 );
add_filter( 'woocommerce_product_variation_get_price', 'wc_return_custom_price', 10, 2 );
function wc_return_custom_price( $price, $product ) {    
    global $woocommerce;
	
    // Array que contiene los códigos de los países donde se aplicará el precio modificado
    $countries = array( 'US', 'GB' );
    
    // Si es la página de finalizar pago y el país de facturación del cliente está en el array...
    if ( is_checkout() && in_array( $woocommerce->customer->get_billing_country(), $countries ) ){
        // ...devuelve el precio modificado
        return ( $price / 260 ) * 1.25;
    } else {
        // Si no, devuelve el precio normal
        return $price;
    }
}"
A7s0K20s,AoC 2023 Day 14 String Method,illuminati229,Python,Thursday 14th of December 2023 03:11:08 PM CDT,"from time import time


def timer_func(func):
    # This function shows the execution time of
    # the function object passed
    def wrap_func(*args, **kwargs):
        t1 = time()
        result = func(*args, **kwargs)
        t2 = time()
        print(f'Function {func.__name__!r} executed in {(t2 - t1):.4f}s')
        return result

    return wrap_func


def tilt_east(rock_map: tuple):
    # rock map is a tuple of strings
    return tuple('#'.join([''.join(sorted(p)) for p in row.split('#')]) for row in rock_map)


def tilt_north(m: tuple):
    return rotate_counterclockwise(tilt_east(rotate_clockwise(m)))


def transpose(m: tuple):
    # transposes a tuple of strings
    return tuple(''.join(i) for i in list(zip(*m)))


def flip(m: tuple):
    # flip a tuple north-south
    return m[::-1]


def rotate_clockwise(m: tuple):
    # rotate clockwise a tuple of string
    return transpose(flip(m))


def rotate_counterclockwise(m: tuple):
    # rotate counterclockwise a tuple of strings
    return flip(transpose(m))


def spin_platform(rock_map):
    for _ in range(4):
        rock_map = rotate_clockwise(rock_map)
        rock_map = tilt_east(rock_map)
    return rock_map


def north_load(m):
    return sum([row.count('O') * i for i, row in enumerate(m[::-1], 1)])


@timer_func
def day14(filepath, part2=False):
    with open(filepath) as fin:
        rock_map = tuple(line.strip() for line in fin.readlines())

    if not part2:
        return north_load(tilt_north(rock_map))
    else:
        rm_dict = {}
        for i in range(1, 1000000000):
            rock_map = spin_platform(rock_map)
            if rock_map in rm_dict:
                loop_start = rm_dict[rock_map]
                loop_length = i - loop_start
                i_f = (1000000000 - loop_start) % loop_length + loop_start
                for rock_map, j in rm_dict.items():
                    if j == i_f:
                        return north_load(rock_map)
            else:
                rm_dict[rock_map] = i


def main():
    assert day14('test14') == 136
    print(f""Part 1: {day14('input14')}"")

    assert day14('test14', True) == 64
    print(f""Part 2: {day14('input14', True)}"")


if __name__ == '__main__':
    main()
"
3ahEs2vX,test,RealDjox,JavaScript,Thursday 14th of December 2023 03:05:54 PM CDT,"var chance = Math.random();

if (user.toLowerCase() === ""realdjox"") {
    if (chance < 0.5) {
        success = ""И у него это получилось VeryPog"";
    } else {
        success = ""MmmHmm"";
    }
    result = ""Дурачок пытается КАМнуть в себя же. "" + success;
} else {
    var negodnik = ""негодяй camonBra "";
    
    if (user.toLowerCase() === ""lizkasosiska19"") {
        negodnik = ""негодяйка Jammies "";
    }

    if (chance < 0.5) {
        result = user + "" стреляет КАМом прям в RealDjox и попадает же, "" + negodnik;
    } else {
        result = user + "" стреляет КАМом прям в RealDjox, но не попадает happyReset"";
    }
}
"
71PBabaZ,AoC 2023 Day 14,illuminati229,Python,Thursday 14th of December 2023 03:02:22 PM CDT,"from time import time


def timer_func(func):
    # This function shows the execution time of
    # the function object passed
    def wrap_func(*args, **kwargs):
        t1 = time()
        result = func(*args, **kwargs)
        t2 = time()
        print(f'Function {func.__name__!r} executed in {(t2 - t1):.4f}s')
        return result

    return wrap_func


def tilt_north(rock_map: list):
    move = True
    while move:
        move = False
        for x, line in enumerate(rock_map[1:]):
            # x will be off by one
            for y, c in enumerate(line):
                if rock_map[x + 1][y] in '.#':
                    continue
                if rock_map[x][y] in '#O':
                    continue
                else:
                    rock_map[x][y] = 'O'
                    rock_map[x + 1][y] = '.'
                    move = True
    return rock_map


def transpose(m: list):
    # transposes a list of lists
    return [list(r) for r in list(zip(*m))]


def flip(m: list):
    return m[::-1]


def spin_platform(rock_map):
    for _ in range(4):
        rock_map = tilt_north(rock_map)
        rock_map = flip(rock_map)
        rock_map = transpose(rock_map)
    return rock_map


@timer_func
def day14(filepath, part2=False):
    with open(filepath) as fin:
        lines = [line.strip() for line in fin.readlines()]

    if not part2:
        round_rocks = []
        cube_rocks = set()
        stuck_rocks = set()
        for x, line in enumerate(lines):
            for y, c in enumerate(line):
                if c == '#':
                    cube_rocks.add(complex(x, y))
                elif c == 'O':
                    round_rocks.append(complex(x, y))
        while round_rocks:
            moved_rocks = []
            for rock in round_rocks:
                if rock.real == 0:
                    stuck_rocks.add(rock)
                elif stuck_rocks.intersection([rock - 1]) or cube_rocks.intersection([rock - 1]):
                    stuck_rocks.add(rock)
                else:
                    moved_rocks.append(rock - 1)
            round_rocks = [*moved_rocks]
        round_rocks = stuck_rocks
        rock_load = 0
        height = len(lines)
        for rock in round_rocks:
            rock_load += height - rock.real

        return int(rock_load)
    else:
        rock_map = [list(x) for x in lines]
        rm_dict = {}
        loop_start = 0
        loop_length = 0
        for i in range(1, 1000000000):
            rock_map = spin_platform(rock_map)
            # make a string representation of the map for hashing
            rmh = ''.join(''.join(r) for r in rock_map)
            if rmh in rm_dict:
                loop_start = rm_dict[rmh]
                loop_length = i - loop_start
                break
            else:
                rm_dict[rmh] = i
        i_f = (1000000000 - loop_start) % loop_length + loop_start
        rmh = 0
        for rmh, i in rm_dict.items():
            if i == i_f:
                break
        # unpack the string map into something easier to calculate on
        n = len(rock_map[0])
        rock_map = [rmh[i:i+n] for i in range(0, len(rmh), n)]
        load = 0
        for i, row in enumerate(rock_map[::-1]):
            load += row.count('O') * (i + 1)
        return load


def main():
    assert day14('test14') == 136
    print(f""Part 1: {day14('input14')}"")

    assert day14('test14', True) == 64
    print(f""Part 2: {day14('input14', True)}"")


if __name__ == '__main__':
    main()
"
nTgACQqg,yopta,Ab0ba,C++,Thursday 14th of December 2023 02:37:23 PM CDT,"﻿#include <iostream>
#include <functional>
#include <chrono>
#include <omp.h>

using namespace std;

using GetEllapsedTimeFn = function<chrono::duration<double>()>;

constexpr unsigned ITERATIONS_COUNT = 1000000000;

GetEllapsedTimeFn StartTimer();
double syncCalculatePi(int iterations);
double parallelForCalculatePi(int iterations);
double atomicCalculatePi(int iterations);
double reductionCalculatePi(int iterations);


int main()
{
    double syncPi = syncCalculatePi(ITERATIONS_COUNT);
    cout << syncPi << endl;

    double parallelPi = parallelForCalculatePi(ITERATIONS_COUNT);
    cout << parallelPi << endl;

    double atomicPi = atomicCalculatePi(ITERATIONS_COUNT / 10);
    cout << atomicPi << endl;

    double reductionPi = reductionCalculatePi(ITERATIONS_COUNT);
    cout << reductionPi << endl;

    return 0;
}


GetEllapsedTimeFn StartTimer()
{
    chrono::steady_clock::time_point start = chrono::steady_clock::now();

    return [start]()
    {
        return chrono::steady_clock::now() - start;
    };
}

double syncCalculatePi(int iterations)
{
    auto getEllapsedTime = StartTimer();

    double result = 0.0;
    for (int i = 0; i < iterations; ++i)
    {
        result += (i % 2 == 0 ? 1.0 : -1.0) / (2.0 * i + 1);
    }
    result *= 4;

    cout << ""syncCalculatePi time: "" << getEllapsedTime().count() << endl;

    return result;
}

double parallelForCalculatePi(int iterations)
{
    auto getEllapsedTime = StartTimer();

    double result = 0.0;
#pragma omp parallel for
    for (int i = 0; i < iterations; ++i)
    {
        result += (i % 2 == 0 ? 1.0 : -1.0) / (2.0 * i + 1);
    }
    result *= 4;

    cout << ""parallelForCalculatePi time: "" << getEllapsedTime().count() << endl;

    return result;
}

double atomicCalculatePi(int iterations)
{
    auto getEllapsedTime = StartTimer();

    double result = 0.0;
#pragma omp parallel for
    for (int i = 0; i < iterations; ++i)
    {
        double term = (i % 2 == 0 ? 1.0 : -1.0) / (2.0 * i + 1);
#pragma omp atomic
        result += term;
    }
    result *= 4;

    cout << ""atomicCalculatePi time: "" << getEllapsedTime().count() * 10 << endl;

    return result;
}

double reductionCalculatePi(int iterations)
{
    auto getEllapsedTime = StartTimer();

    double result = 0.0;
#pragma omp parallel for reduction(+:result)
    for (int i = 0; i < iterations; ++i)
    {
        result += (i % 2 == 0 ? 1.0 : -1.0) / (2.0 * i + 1);
    }
    result *= 4;

    cout << ""reductionCalculatePi time: "" << getEllapsedTime().count() << endl;

    return result;
}"
ruyLW40M,Enderchest-ME,MagmaLP,Lua,Thursday 14th of December 2023 02:31:48 PM CDT,"Sensorside = ""bottom""
PIPE_SIDE = ""right""

function ClearPages()
    sleep(0.5)
    redstone.setBundledOutput(""back"",colors.combine(redstone.getBundledOutput(""back""), colors.black))
    sleep(0.5)
    redstone.setBundledOutput(""back"",colors.subtract(redstone.getBundledOutput(""back""), colors.black))
    sleep(2)
end
 
function ResetSignals()
    sleep(0.5)
    redstone.setBundledOutput(""back"",colors.subtract(redstone.getBundledOutput(""back""), colors.orange))
    sleep(0.5)
    redstone.setBundledOutput(""back"",colors.combine(redstone.getBundledOutput(""back""), colors.blue))
end

function RequestItems()
    -- IMPLEMENTATION
    function convertNBT(nbt)
        local conv = {}
        if (nbt == nil) then
            return nil
        elseif (nbt[""type""] == ""NBTTagCompound"") or (nbt[""type""] == ""NBTTagList"") then
            for key, value in pairs(nbt[""value""]) do
                conv[key] = convertNBT(value)
            end
        else
            conv = nbt[""value""]
        end
        return conv
    end
 
    function getItems(pipe)
        pipe.getAvailableItems()
        local event, result = os.pullEvent(""available_items_return"")
        return result
    end
 
    -- Funktion inList anpassen, um Variablen zu verwenden
    function inList(item)
        local id = item.id
        local dmg = item.dmg
        local idKey = tostring(id)
        local exists, requestAmount = false, 0
 
        local variantKey = idKey .. "":"" .. tostring(dmg)
        if REQUEST_IDS[variantKey] then
            exists = true
            requestAmount = REQUEST_IDS[variantKey]
        end
 
        return exists, requestAmount
    end
 
    -- MAIN
    local pipe = peripheral.wrap(PIPE_SIDE)
    for i, result in pairs(getItems(pipe)) do
        local iid, amount = unpack(result)
        local item = {
            id = pipe.getItemID(iid),
            dmg = pipe.getItemDamage(iid),
            nbt = convertNBT(pipe.getNBTTagCompound(iid))
        }
        local exists, requestAmount = inList(item)
        if exists then
            pipe.makeRequest(iid, requestAmount)
            sleep(0.15)
        end
    end
end

function ladeItems(page)
    local datei = fs.open(""ItemsInPage"" .. page, ""r"")  -- Datei im Lesemodus öffnen
    if not datei then
        print(""Fehler: Datei nicht gefunden"")
        return
    end
 
    local items = {
        ItemName = {},
        ItemSize = {},
        ItemID_1 = {},
        ItemID_2 = {}
    }
 
    -- Schleife durch jede Zeile der Datei
    MaxItems = 0
    repeat
        local zeile = datei.readLine()
        if zeile then
            local itemName, itemSize, itemID = zeile:match(""([^%-]+)%-([^%-]+)%-(.+)"")
            if itemName and itemSize and itemID then
                table.insert(items.ItemName, itemName)
                table.insert(items.ItemSize, tonumber(itemSize))
                table.insert(items.ItemID_1, tonumber(itemID:match(""%d+"")))
                table.insert(items.ItemID_2, tonumber(itemID:match("":(%d+)"")))
                MaxItems = MaxItems + 1
            else
                print(""Fehlerhafte Zeile in der Datei: "" .. zeile)
            end
        end
    until not zeile
 
    datei:close()  -- Datei schließen
 
    return items
end

function RequestPage()
	local ItemsInPage = ladeItems(Page)  -- Lade Items aus der Page
 	for a = 1, MaxItems do
        ItemID_1 = ItemsInPage.ItemID_1[a]
        ItemID_2 = ItemsInPage.ItemID_2[a]
        ItemSize = ItemsInPage.ItemSize[a]

        io.write(ItemsInPage.ItemName[a] .. "" "")
        io.write(ItemsInPage.ItemID_1[a] .. "":"")
        io.write(ItemsInPage.ItemID_2[a] .. "" "")
        io.write(ItemsInPage.ItemSize[a] .. "" "")
        io.write(""\n"")

        REQUEST_IDS = {
            [tostring(ItemID_1) .. "":"" .. tostring(ItemID_2)] = ItemSize,}
        RequestItems()
        sleep(0.2)
    end
end

------programm start------
sle = 0.1 --Sleep zwischen jeder Request
os.loadAPI(""ocs/apis/sensor"")
sen = sensor.wrap(""bottom"")

redstone.setBundledOutput(""back"",colors.combine(redstone.getBundledOutput(""back""), colors.orange))  --orange an
sleep(0.5)
redstone.setBundledOutput(""back"",colors.subtract(redstone.getBundledOutput(""back""), colors.blue))   --blau aus
 
while true do
    s = sen.getTargets()
    function getS()
        for v, k  in pairs(s) do
            if k.Name == ""ME Wireless Access Point"" then   
                target = v
            end
        end
        return target
    end
 
    f = getS()
    s1 = sen.getTargetDetails(target)
    
    local Page1 = 0
    local Page2 = 0
    local Page3 = 0
    local Page4 = 0
    local Page5 = 0
    local Page6 = 0
    local Page7 = 0
    local Page8 = 0
    local Page9 = 0
 
    for _, item in pairs(s1.Items) do
        if item.Name == ""ME Wireless Access Terminal"" then
            Page1 = item.Size -- Werte ermittels und setzen
        end
        if item.Name == ""Advanced Solar Panel"" then
            Page2 = item.Size -- Werte ermittels und setzen
        end
        if item.Name == ""Remote Orderer"" then
            Page3 = item.Size -- Werte ermittels und setzen
        end
        if item.Name == ""Cobblestone"" then
            Page4 = item.Size -- Werte ermittels und setzen
        end
        if item.Name == ""tile.machineBlock"" then
            Page5 = item.Size -- Werte ermittels und setzen
        end
        if item.Name == ""item.PipeItemsDiamond"" then
            Page6 = item.Size -- Werte ermittels und setzen
        end
        if item.Name == ""Electric Furnace"" then
            Page7 = item.Size -- Werte ermittels und setzen
        end
        if item.Name == ""Clay Dust"" then
            Page8 = item.Size -- Werte ermittels und setzen
        end
        if item.Name == ""Wooden Axe"" then
            Page9 = item.Size -- Werte ermittels und setzen
        end
        if item.Size < 0 then
            os.reboot()
        end
    end
    
    term.setCursorPos(1,1)
    term.clear()
    print(""1: ""..Page1)
    print(""2: ""..Page2)
    print(""3: ""..Page3)
    print(""4: ""..Page4)
    print(""5: ""..Page5)
    print(""6: ""..Page6)
    print(""7: ""..Page7)
    print(""8: ""..Page8)
    print(""9: ""..Page9)
    
    reboot = 1
    if Page1 < 1 or Page2 < 1 or Page3 < 1 or Page4 < 1 or Page5 < 1 or Page6 < 1 or Page7 < 1 or Page8 < 1 or Page9 < 1 then
        ResetSignals()
        ClearPages()  
        
        if Page1 < 1 then
            Page = 1
        elseif Page2 < 1 then
            Page = 2
        elseif Page3 < 1 then
            Page = 3
        elseif Page4 < 1 then
            Page = 4
        elseif Page4 < 1 then
            Page = 5
        elseif Page4 < 1 then
            Page = 6
        elseif Page4 < 1 then
            Page = 7
        elseif Page4 < 1 then
            Page = 8
        elseif Page4 < 1 then
            Page = 9
        end
    
        if Page1 < 1 or Page2 < 1 or Page3 < 1 or Page4 < 1 or Page5 < 1 or Page6 < 1 or Page7 < 1 or Page8 < 1 or Page9 < 1 then
            RequestPage()
            sleep(2)
            reboot = 0
        end
    end
    
    if reboot == 0 then
        os.reboot()
    end
    sleep(1)
end"
U2MjFpKy,basic_example_spectrum_python,Danila_lipatov,Python,Thursday 14th of December 2023 02:12:45 PM CDT,"Fs = 1024
sampling_rate = 100 #signal freq
N = int(Fs / sampling_rate) #number of samples
t_step = 1 / Fs
t = np.linspace(0, (N - 1) * t_step, N) #time interval
freq = Fs / N #freq step
f = np.linspace(0, (N - 1) * freq, N) # freq interval

data = np.sin(2 * np.pi * sampling_rate * t)
fureir = scipy.fft.fft(data)
fureier_abs = abs(fureir / N)
data_spec = f[0 : int(N / 2 + 1)]
furier_abs_plot = 2 * fureier_abs[0 : int(N / 2 + 1)]
fureier_abs[0] /= 2
fig, [ax1, ax2] = plt.subplots(nrows=2, ncols=1)
ax1.plot(t, data)
ax2.plot(data_spec, furier_abs_plot)
plt.show()"
TXFzHQW2,pluto bootstrap charmed-hpc,Kangarooo,Bash,Thursday 14th of December 2023 02:09:36 PM CDT,"pluto bootstrap charmed-hpc



Deploying cluster charmed-hpc. This will take several minutes...                
Deploying HPC services... \ (4.5s)                                              Traceback (most recent call last):
  File ""/snap/pluto/3/bin/pluto"", line 8, in <module>
    sys.exit(main())
  File ""/snap/pluto/3/lib/python3.10/site-packages/pluto/main.py"", line 49, in main
    exit_code = dispatcher.run()
  File ""/snap/pluto/3/lib/python3.10/site-packages/craft_cli/dispatcher.py"", line 448, in run
    return self._loaded_command.run(self._parsed_command_args)
  File ""/snap/pluto/3/lib/python3.10/site-packages/pluto/cmd/bootstrap.py"", line 328, in run
    loop.run_until_complete(
  File ""/usr/lib/python3.10/asyncio/base_events.py"", line 649, in run_until_complete
    return future.result()
  File ""/snap/pluto/3/lib/python3.10/site-packages/pluto/cmd/bootstrap.py"", line 117, in _bootstrap
    await asyncio.gather(
  File ""/snap/pluto/3/lib/python3.10/site-packages/juju/model.py"", line 1723, in deploy
    is_sub = await self.charmhub.is_subordinate(url.name)
  File ""/snap/pluto/3/lib/python3.10/site-packages/juju/charmhub.py"", line 35, in is_subordinate
    conn, headers, path_prefix = self.model.connection().https_connection()
  File ""/snap/pluto/3/lib/python3.10/site-packages/juju/client/connection.py"", line 699, in https_connection
    host, int(port),
ValueError: invalid literal for int() with base 10: 'a5aa:9178:cee6:216:3eff:fead:27d]:17070'



user@user-300E5EV-300E4EV-270E5EV-270E4EV:~$ pluto bootstrap -n 1 charmed-hpc
Usage: pluto [options] command [args]...
Try 'pluto bootstrap -h' for help.

Error: unrecognized arguments: -n charmed-hpc

"
RvRTKFhd,juju bootstrap localhost,Kangarooo,Bash,Thursday 14th of December 2023 02:01:26 PM CDT,"juju bootstrap localhost
Since Juju 3 is being run for the first time, it has downloaded the latest public cloud information.
Creating Juju controller ""localhost-localhost"" on localhost/localhost
Looking for packaged Juju agent version 3.1.6 for amd64
Located Juju agent version 3.1.6-ubuntu-amd64 at https://streams.canonical.com/juju/tools/agent/3.1.6/juju-3.1.6-linux-amd64.tgz
To configure your system to better support LXD containers, please see: https://documentation.ubuntu.com/lxd/en/latest/explanation/performance_tuning/
Launching controller instance(s) on localhost/localhost...
 - juju-848e49-0 (arch=amd64)                   
Installing Juju agent on bootstrap instance
Waiting for address
Attempting to connect to fd42:a5aa:9178:cee6:216:3eff:fead:27d:22
Attempting to connect to 10.22.28.134:22
Connected to fd42:a5aa:9178:cee6:216:3eff:fead:27d
Running machine configuration script...
Bootstrap agent now started
Contacting Juju controller at 10.22.28.134 to verify accessibility...

Bootstrap complete, controller ""localhost-localhost"" is now available
Controller machines are in the ""controller"" model

Now you can run
        juju add-model <model-name>
to create a new model to deploy workloads."
MsRnAMN2,Untitled,Maliuga,C++,Thursday 14th of December 2023 01:50:39 PM CDT,"std::vector<GatheringEvent> FindGatherEvents(const ItemGathererProvider& provider) {

    std::vector<GatheringEvent> detected_events;

    static auto eq_pt = [](geom::Point2D p1, geom::Point2D p2) {
        return p1.x == p2.x && p1.y == p2.y;
    };

    for (size_t g = 0; g < provider.GatherersCount(); ++g) {
        Gatherer gatherer = provider.GetGatherer(g);
        if (eq_pt(gatherer.start_pos, gatherer.end_pos)) {
            continue;
        }
        for (size_t i = 0; i < provider.ItemsCount(); ++i) {
            Item item = provider.GetItem(i);
            auto collect_result
                = TryCollectPoint(gatherer.start_pos, gatherer.end_pos, item.position);

            if (collect_result.IsCollected(gatherer.width + item.width)) {
                GatheringEvent evt{.item_id = i,
                                   .gatherer_id = g,
                                   .sq_distance = collect_result.sq_distance,
                                   .time = collect_result.proj_ratio};
                detected_events.push_back(evt);
            }
        }
    }

    std::sort(detected_events.begin(), detected_events.end(),
              [](const GatheringEvent& e_l, const GatheringEvent& e_r) {
                  return e_l.time < e_r.time;
              });

    return detected_events;
}"
8JkZuak8,Advent of code 2023 day 14 fast,hhoppe,Python,Thursday 14th of December 2023 01:06:42 PM CDT,"@numba.njit
def day14_slide_left(grid):
  for row in grid:
    open = 0
    for x, v in enumerate(row):
      if v == ord('.'):
        pass
      elif v == ord('O'):
        if open < x:
          row[open], row[x] = ord('O'), ord('.')
        open += 1
      else:
        open = x + 1


def day14(s, *, part2=False, num=1_000_000_000):
  grid = np.array([[ord(ch) for ch in line] for line in s.splitlines()], np.uint8)
  grid = np.rot90(grid)  # North is now left.
  grid = np.ascontiguousarray(grid)  # Layout in C-order, for tobytes().

  if not part2:
    day14_slide_left(grid)

  else:
    configs: dict[Any, int] = {}  # hashed_grid -> index.
    period = -1
    index = 0
    while True:
      if period < 0:
        if (prev_index := configs.setdefault(grid.tobytes(), index)) != index:
          period = index - prev_index
          print(f'At {index=}, found cycle with {period=}.')
          index = num - (num - index) % period
      if index == num:
        break
      for _ in range(4):
        day14_slide_left(grid)
        grid = np.rot90(grid, -1)
      index += 1

  return sum(len(grid[0]) - x for _, x in np.argwhere(grid == ord('O')))"
D2DDzvhK,Untitled,Josif_tepe,C++,Thursday 14th of December 2023 01:01:28 PM CDT,"#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <bits/stdc++.h>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    string s;
    cin >> s;
    if(n > 30) {
        cout << ""GRESHKA"" << endl;
        return 0;
    }
    queue<string> q_s;
    queue<int> q;
    q_s.push(s);
    q.push(0);
    unordered_map<string, bool> visited;
    visited[s] = true;
    while(!q_s.empty()) {
        string t = q_s.front();
        q_s.pop();
        int cekor = q.front();
        q.pop();
        bool ok = true;
        int i = 0, j = n - 1;
        while(i < j) {
            if(t[i] != t[j]) {
                ok = false;
                break;
            }
            i++;
            j--;
        }
        if(ok) {
            cout << cekor << endl;
            return 0;
        }
        for(int i = 0; i + 1 < n; i++) {
            swap(t[i], t[i + 1]);
            if(!visited[t]) {
                visited[t] = true;
                q_s.push(t);
                q.push(cekor + 1);
            }
            swap(t[i], t[i + 1]);
            
        }
    }
    cout << ""GRESHKA"" << endl;
    return 0;
}
"
sdrnwy6W,Untitled,Hazkin,C#,Thursday 14th of December 2023 12:58:43 PM CDT,"public class Character
{
	public string Name { get; private set; }
	//some code to set new name
}

public interface IBackEndAPI
{
	UniTask<string> SetNameAsync(Character character, string newName);
}

public class RenameService : IBackEndAPI
{
	public async UniTask<string> SetNameAsync(Character character, string newName)
	{
		var tx = RenameHero(character, newName);
		await tx.Invoke();
		// get character Name here
		//[...]
		return characterName;
	}
}

public class Mediator
{
	private Character _character;
	private IBackEndAPI _api;

	public Mediator(Character character, IBackEndAPI api)
	{
		_api = api;
		_character = character;
	}

	public async UniTask<string> SetName(string newName)
	{
		var result = await _api.SetNameAsync(_character, newName);
		return result;
	}
}

public class CharacterNameView : MonoBehaviour
{
	[SerializeField] private TMP_Text characterName;
	[SerializeField] private Button setNewName;
	[SerializeField] private TMP_InputField input;
	[SerializeField] private GameObject dimmer;
	
	private Mediator _mediator;

	private void Awake()
	{
		setNewName.onClick.AddListener(OnSetNewName);
	}
	
	public void SetupChangeNameMediator(Mediator mediator)
	{
		_mediator = mediator;
	}

	private async void OnSetNewName()
	{
		if (_mediator == null) 
			return;
		dimmer.SetActive(true);
		var result = await _mediator.SetName(input.text);
		characterName.text = result;
		dimmer.SetActive(false);
	}
}"
i4tGQ2Fs,Untitled,makinotori14,C++,Thursday 14th of December 2023 12:54:03 PM CDT,"#include <bits/stdc++.h>

using namespace std;

using ll = long long;
using ld = long double;
using ull = unsigned long long;
using pii = pair<int, int>;

mt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());

template <typename T1, typename T2>
ostream& operator <<(ostream& out, pair<T1, T2> &p) {
    out << '{' << p.first << "", "" << p.second << '}';
    return out;
}

template <typename T>
ostream& operator <<(ostream& out, set<T> &s) {
    for (auto &x : s)
        out << x << ' ';
    return out;
}

template <typename T>
ostream& operator <<(ostream &out, multiset<T> &s) {
    for (auto &x : s)
        out << x << ' ';
    return out;
}

template <typename T>
bool ckmin(T &a, T b) {
    return (a > b ? a = b, true : false);
}

template <typename T>
bool ckmax(T &a, T b) {
    return (a < b ? a = b, true : false);
}

template <typename T>
ostream& operator <<(ostream& out, vector<T> &v) {
    for (auto &x : v)
        cout << x << ' ';
    return out;
}

void visit(vector<vector<int>> &g, vector<char> &vis, int v) {
    vis[v] = 1;
    for (auto &u : g[v]) {
        if (!vis[u])
            visit(g, vis, u);
    }
}

bool check_comp(vector<vector<int>> &g) {
    vector<vector<int>> g_unor((int)g.size());
    for (int v = 0; v < (int)g.size(); ++v) {
        for (auto &u : g[v]) {
            g_unor[v].push_back(u);
            g_unor[u].push_back(v);
        }
    }

    vector<char> vis((int)g.size());
    visit(g_unor, vis, 0);

    return count(vis.begin(), vis.end(), 1) == (int)g.size();
}

bool ts_dfs(vector<vector<int>> &g, vector<char> &vis, int v, vector<int> &ts) {
    vis[v] = 1;
    for (auto &u : g[v]) {
        if (vis[u] == 1) {
            return false;
        }
        if (!vis[u]) {
            if (!ts_dfs(g, vis, u, ts))
                return false;
        }
    }
    vis[v] = 2;
    ts.push_back(v);
    return true;
}

vector<int> topsort(vector<vector<int>> &g) {
    int n = (int)g.size();
    vector<char> vis(n);
    vector<int> ts;
    for (int i = 0; i < n; ++i) {
        if (!vis[i]) {
            if (!ts_dfs(g, vis, i, ts)) {
                return {};
            }
        }
    }
    reverse(ts.begin(), ts.end());
    return ts;
}

vector<int> clear_edges(vector<int> &ts, vector<vector<int>> &g, vector<int> &tin, vector<int> &tout) {
    int n = (int)g.size();
    vector<vector<int>> ng(n);
    vector<int> last(n, -1);
    for (auto &v : ts) {
        for (auto &u : g[v]) {
            if (last[u] != -1) {
                if (!(tin[last[u]] < tin[v] && tout[last[u]] > tout[v])) {
                    cout << ""No\n"";
                    exit(0);
                }
            }
            last[u] = v;
        }
    }
    for (int v = 0; v < n; ++v) {
        if (last[v] == -1) continue;
        ng[last[v]].push_back(v);
    }
    g = ng;
    return last;
}

void time_dfs(vector<vector<int>> &g, vector<char> &vis, int v, vector<int> &tin, vector<int> &tout, int &cur) {
    vis[v] = 1;
    tin[v] = cur++;

    for (auto &u : g[v]) {
        if (!vis[u])
            time_dfs(g, vis, u, tin, tout, cur);
    }

    tout[v] = cur++;
}

bool check_time(vector<vector<int>> &g, vector<char> &vis, int v, vector<int> &tin, vector<int> &tout) {
    vis[v] = 1;
    for (auto &u : g[v]) {
        if (!(tin[v] < tin[u] && tout[v] > tout[u]))
            return false;
        if (!vis[u]) {
            if (!check_time(g, vis, u, tin, tout))
                return false;
        }
    }
    return true;
}

void solve() {
    int n, m;
    cin >> n >> m;

    map<pii, char> used;

    vector<vector<int>> g(n);
    for (int i = 0; i < m; ++i) {
        int v, u;
        cin >> v >> u, --v, --u;

        if (!used[{v, u}]) {
            g[v].push_back(u);
            used[{v, u}] = 1;
        }
    }

    if (!check_comp(g)) {
        cout << ""No\n"";
        return;
    }

    vector<int> ts = topsort(g);

    if (ts.empty()) {
        cout << ""No\n"";
        return;
    }

    vector<char> vis(n);
    vector<int> tin(n), tout(n);
    int cur = 0;
    time_dfs(g, vis, ts[0], tin, tout, cur);

    vector<int> ans = clear_edges(ts, g, tin, tout);

    fill(vis.begin(), vis.end(), 0);
    visit(g, vis, ts[0]);
    if ((int)count(vis.begin(), vis.end(), 1) != n) {
        cout << ""No\n"";
        return;
    }

    cout << ""Yes\n"";
    for (auto &x : ans) {
        if (x == -1)
            cout << -1 << ' ';
        else
            cout << x + 1 << ' ';
    }
    cout << '\n';
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(9);
    int t = 1;
    //cin >> t;
    while (t--) {
        solve();
    }
}
"
jnh4YMkX,Untitled,Josif_tepe,C++,Thursday 14th of December 2023 12:45:42 PM CDT,"#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    string s;
    cin >> s;
    int res =0 ;
    int n = (int) s.size();
    vector<int> v[26];
    
    for(int i = 0; i < n; i++) {
        v[s[i] - 'A'].push_back(i);
    }
    
    for(int i = 0; i < n; i++) {
        int c = s[i] - 'A';
       
        for(int k = (int) v[c].size() - 1; k >= 0; k--) {
            int p = v[c][k];
            if(p <= i) break;
            int sz = p - i + 1;
                if(sz % 4 == 0) {
                    sz /= 4;
                    int cnt = 1;
                    bool ok = true;
                    for(int j = i; j < i + sz; j++) {
                        if(s[j] == s[i + 2 * sz - cnt] and s[j] == s[j + 2 * sz] and s[j] == s[i + 4 * sz - cnt]) {
                            
                        }
                        else {
                            ok = false;
                            break;
                        }
                        cnt++;
                    }
                    if(ok) {
                        res = max(res, 4 * sz);
                        i = p;
                        break;
                    }
                }
            }
        
    }
    cout << res << endl;
    return 0;
}
"
ET3j5XBx,Untitled,Josif_tepe,C++,Thursday 14th of December 2023 12:19:20 PM CDT,"#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    string s;
    cin >> s;
    int res =0 ;
    int n = (int) s.size();
    for(int sz = n / 4; sz >= 0; sz--) {
        for(int i = 0; i < n; i++) {
            if(i + 4 * sz - 1 < n) {
                
                if(s[i] == s[i + 2 * sz - 1] and s[i] == s[i + 2 * sz] and s[i] == s[i + 4 * sz - 1]) {
                    bool ok = true;
                    int cnt = 1;
                    for(int j = i + 1; j < i + sz; j++) {
                        
                        if(s[j] != s[i + 2 * sz - 1 - cnt] or s[j] != s[j + 2 * sz] or s[j] != s[i + 4 * sz - 1 - cnt]) {
                            ok = false;
                            break;
                        }
                        cnt++;
                    }
                    if(ok) {
                        cout << sz * 4 << endl;
                        return 0;
                    }
                }
            }
        }
    }
    cout << res * 4 << endl;
    return 0;
}
"
T0hfQbbD,mat,Dmaxiya,Java,Thursday 14th of December 2023 12:09:01 PM CDT,"import java.util.Scanner;

public class Main {
    public static int t(int n, int m) {
        if (m == 1) {
            return 1;
        } else if (m == 2) {
            return n + 1;
        } else if (n == 2) {
            int fz = 0;
            for (int i = 1; i <= m; i++) {
                for (int j = 1; j <= m; j++) {
                    if (gcd(i, j) == 1) {
                        fz++;
                    }
                }
            }
            return fz;
        } else {
            return 0;
        }
    }

    // 返回最大公约数
    private static int gcd(int a, int b) {
        while(true) {
            int t = a % b;
            if (t == 0) {
                break;
            } else {
                a = b;
                b = t;
            }
        }
        return b;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        System.out.println(t(n, m));
    }
}
"
i9nTy5j4,Untitled,Josif_tepe,C++,Thursday 14th of December 2023 11:54:06 AM CDT,"#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    string s;
    cin >> s;
    int n = (int) s.size();
    if(n <= 1000) {
        int res = 0;
        for(int i = 0; i < n; i++) {
            string tmp = """";
            for(int j = i; j < n; j++) {
                tmp += s[j];
                string rev_tmp = tmp;
                reverse(rev_tmp.begin(), rev_tmp.end());
                string x = tmp + rev_tmp + tmp + rev_tmp;
                if(s.find(x) != string::npos) {
                    res = max(res, (int) x.size());
                }
            }
        }
        cout << res << endl;
    }
    
    return 0;
}
"
VkNa2eQE,Untitled,Nikaas,C#,Thursday 14th of December 2023 11:37:36 AM CDT,"        public override void SetItem<T>(string name, T value)
        {
            string playerPrefsKey = GetPlayerPrefsKey(name);
            switch (value)
            {
                case int:
                case Enum:
                    PlayerPrefs.SetInt(playerPrefsKey, (int)(object)value);
                    break;
                case float:
                    PlayerPrefs.SetFloat(playerPrefsKey, (float)(object)value);
                    break;
                case string:
                    PlayerPrefs.SetString(playerPrefsKey, (string)(object)value);
                    break;
                case not int and not Enum and not float and not string:
                    throw new Exception($""Can not set data item named {name} of type {typeof(T)}. "" +
                        $""{nameof(PlayerPrefs)} stores only {nameof(Int32)}, {nameof(Single)} or {nameof(String)}."");
            }
        }"
HNHSYknF,Untitled,Josif_tepe,C++,Thursday 14th of December 2023 11:36:31 AM CDT,"class Solution {
public:
    int repeatedStringMatch(string a, string b) {
        int n = a.size(), m = b.size();
        int rep = m / n;
        string s = """";
        for(int i = 0; i < rep; i++) {
            s += a;
        }
        for(int i = 0; i < 5; i++)  {
            if(s.find(b) != string::npos) {
                return rep + i;
            }
            s += a;
            
        }
        return -1;
    }
};"
urE08mkP,Untitled,Josif_tepe,C++,Thursday 14th of December 2023 11:27:37 AM CDT,"class Solution {
public:
    vector<string> findRepeatedDnaSequences(string s) {
        vector<string> res;
        unordered_map<string, int> m;
        int n = s.size();
        for(int i = 0; i < n; i++) {
            string tmp = """";
            for(int j = i; j < min(i + 10, n); j++) {
                tmp += s[j];
            }
            if(tmp.size() == 10) {
                m[tmp]++;
            }
        }
        for(unordered_map<string, int>::iterator it = m.begin(); it != m.end(); it++) {
            if(it->second > 1) {
                res.push_back(it->first);
            }
        }
        return res;
    }
};"
EBS7NNmY,Script para sincronizar el AppScript de Google Sheet con Divi,oscarviedma,HTML,Thursday 14th of December 2023 11:21:07 AM CDT,"<section id=""ov-listado-menu"">
<!-- Aquí es donde se cargará el contenido dinámico -->
</section>

<script>
// Hacer una solicitud GET a la URL de la aplicación web de Google Apps Script
fetch('https://script.google.com/macros/s/AKfycbzeXVrsOq7dvgbnQQn-0Mektvb6P9wLe_BRKoZsq6CqlMh6w-XGUWleBDaYX7f6u9Qr/exec')
	.then(response => response.json())
  .then(data => {
  // Procesar los datos y construir el HTML
    var html = '';
    for (var section in data) {
    	html += '<h2 class=""titulo-seccion"">' + section + '</h2>\n';
    		for (var i = 0; i < data[section].length; i++) {
      		var dish = data[section][i];
          html += '<div class=""card-menu"">\n';
          html += '<div class=""img-cover"">\n';
          html += '<img src=""' + dish.image + '"" alt=""' + dish.name + '"">\n';
          html += '</div>\n';
          html += '<div class=""info-menu"">\n';
          html += '<h3 class=""titulo"">' + dish.name + '</h3>\n';
          html += '<p class=""descripcion"">' + dish.description + '</p>\n';
          html += '<div class=""precio"">' + dish.price + '</div>\n';
          html += '</div>\n';
          html += '</div>\n';
        }
      }
    // Insertar el contenido dinámico en el contenedor
      document.getElementById('ov-listado-menu').innerHTML = html;
    })
    .catch(error => console.error('Error al obtener el contenido:', error));
</script>"
gJy0eapT,filecheck,iconoclasthero,Bash,Thursday 14th of December 2023 11:19:30 AM CDT,"filecheck() {
if [[ ""$1"" != *\ --\ Audiobook.m4b ]] && printf 'The file specified: %s\nis not in the correct format of\n* -- Audiobook.m4b, checking directory for an m4b file...""
elif [[ ""$1"" == *\ --\ Audiobook.m4b ]] && [[ -f ""$1"" ]]  #suggested this is poor design to ignore the input if it is not in the correct format.
 then
   m4bin=""$1""
   echo ""$m4bin""
else
#   for i in *m4b
#    do
      files=(*m4b)
      elif [[ -f ""$files"" ]] && [[ ""${#files[@]}"" == 1 ]]
       then
         if [[ ""$files"" == *\ --\ Audiobook.m4b ]]
          then
            m4bin=""$files""
         elif [[ ""$files"" == *m4b ]]
          then
            m4bin=""${files/.m4b/ -- Audiobook.m4b}""
            mv ""$files"" ""$m4bin""
         fi
      else
        echo ""No single & appropriate input file found or specified, please check and retry...""
        ls
        exit 1
      fi
fi
}

"
