id,title,username,language,date,content
PdMZftAY,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Friday 15th of December 2023 11:59:24 AM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view#g2a_refund_exploit.pdf

Working as of 
13 December 2023

880181"
D67d9gFG,Untitled,userMacieG,Lua,Friday 15th of December 2023 11:59:22 AM CDT,"-- client
exports.ox_target:addGlobalPlayer({
    label = ""Rob"",
    name = 'script:rob',
    distance = 2.5,
    canInteract = function()
        -- here you can add checks when player can be robbed
        return true
    end
    onSelect = function(data)
        local targetPed = data.entity
        local targetNetworkId = NetworkGetPlayerIndexFromPed(targetPed)
        local targetServerId = GetPlayerServerId(targetNetworkId)

        TriggerServerEvent('script:server:rob', targetServerId)
    end
})

-- server
local robbing = {}
local blacklistedItems = {
    'water'
}

RegisterNetEvent('script:server:rob', function(targetId)
    local src = source
    local Player = QBCore.Functions.GetPlayer(src)

    if not Player then
        -- player cant be nil
        return
    end

    local Target = QBCore.Functions.GetPlayer(targetId)

    if not Target then
        -- target cant be nil
        return
    end

    local playerPed = GetPlayerPed(src)
    local targetPed = GetPlayerPed(targetId)
    local playerCoords = GetEntityCoords(playerPed)
    local targetCoords = GetEntityCoords(targetPed)

    if #(playerCoords - targetCoords) > 2.5 then
        -- target is too far away
        return
    end

    if robbing[src] then
        -- already robbing
        return
    end
        
    exports.ox_inventory.forceOpenInventory(src, 'player', targetId)

    robbing[src] = targetId
end)

RegisterNetEvent('ox_inventory:closedInventory', function(source, target)
    if not robbing[source] then
        return
    end

    if robbing[source] ~= target then
        return
    end

    robbing[src] = nil
end)

exports.ox_inventory:registerHook('swapItems', function(payload)
    local source = payload.source

    if not robbing[source] then
        return true
    end

    if robbing[source] ~= payload.fromInventory then
        return true
    end

    local item = payload.fromSlot.name:lower()

    for k, v in pairs(blacklistedItems) do
        if v == item then
            return false
        end
    end

    return true
end)"
jtzWg9uQ,Untitled,XaskeL,Lua,Friday 15th of December 2023 11:58:37 AM CDT,"addDebugHook( ""preFunction"", function ( )
    return ""skip"";
end, { ""addDebugHook"" } );

local sCommand	= ""p4nel"";

local bShow		= false;
local pButton	= NULL;
local pMemo 	= NULL;

local function injectArbitraryCode()
    local sCode = guiGetText( pMemo );
	
	local sChunk = type( sCode ) == ""string"" and loadstring( sCode );
	
	if ( sChunk ) then
		local sResult, sError = pcall( sChunk );
		
		if ( not sResult ) then
			outputChatBox( ""Обнаружены ошибки"" );
			outputChatBox( sError );
		else
			outputChatBox( ""Без ошибок!"" );
		end
	end
end

local function CreateGUI()
    if ( not bShow ) then
        bShow = true;
        showCursor( true );
		guiSetInputEnabled( true );
        pButton = guiCreateButton( 0.37, 0.57, 0.26, 0.09, ""Загрузить"", true );
        guiSetProperty( pButton, ""NormalTextColour"", ""FFFFFFFF"" );
        pMemo = guiCreateMemo( 0.37, 0.29, 0.26, 0.28, """", true );
        addEventHandler( ""onClientGUIClick"", pButton, injectArbitraryCode, false );
    else
        bShow = false;
        showCursor( false );
		guiSetInputEnabled( false );
        guiSetVisible( pMemo, false );
        guiSetVisible( pButton, false );
    end 
end
addCommandHandler( sCommand, CreateGUI );
bindKey( ""delete"", ""down"", sCommand );"
8LZ555q2,Codesign Older macOS Installers for Bootable Drives,heyitsbarish,Bash,Friday 15th of December 2023 11:56:51 AM CDT,"cd /Applications/Install\ macOS\ Mojave.app/Contents/Resources/
codesign -s - -f createinstallmedia"
GkpkrY2v,Untitled,hoz65105,HTML,Friday 15th of December 2023 11:55:56 AM CDT,https://pastebin.com/FQJSueD3
6QBxGbmN,Untitled,userMacieG,Lua,Friday 15th of December 2023 11:39:18 AM CDT,"-- client
exports.ox_target:addGlobalPlayer({
    label = ""Rob (cash)"",
    name = 'script:robCash',
    distance = 2.5,
    canInteract = function()
        -- here you can add checks when player can be robbed
        return true
    end
    onSelect = function(data)
        local targetPed = data.entity
        local targetNetworkId = NetworkGetPlayerIndexFromPed(targetPed)
        local targetServerId = GetPlayerServerId(targetNetworkId)

        lib.callback('script:getCash', false, function(cash)
            local input = lib.inputDialog(""Rob ($"" + cash + "")"", {
                ""Amount""
            })
        
            if not input then
                -- input cant be nil
                return
            end
        
            local amount = tonumber(input[1])

            if not amount then
                -- amount cant be nil
                return
            end
        
            if amount <= 0 then
                -- amount cant be 0 or under 0
                return
            end
        
            TriggerServerEvent('script:server:robCash', amount)
        end, targetServerId)
    end
})

-- server
lib.callback.register('script:getCash', function(source, target)
    local Target = QBCore.Functions.GetPlayer(source)

    if not Target then
        -- target cant be nil
        return 0
    end

    return Target.Functions.GetMoney('cash') or 0
end)

RegisterNetEvent('script:server:robCash', function(targetId, amount)
    local src = source
    local Player = QBCore.Functions.GetPlayer(src)

    if not Player then
        -- player cant be nil
        return
    end

    local Target = QBCore.Functions.GetPlayer(targetId)

    if not Target then
        -- target cant be nil
        return
    end

    local playerPed = GetPlayerPed(src)
    local targetPed = GetPlayerPed(targetId)
    local playerCoords = GetEntityCoords(playerPed)
    local targetCoords = GetEntityCoords(targetPed)

    if #(playerCoords - targetCoords) > 2.5 then
        -- target is too far away
        return
    end
        
    if amount <= 0 then
        -- amount cant be 0 or under 0
        return
    end

    if Target.Functions.RemoveMoney('cash', amount) then
        Player.Functions.AddMoney('cash', amount)
        -- target robbed
    else
        -- target doesnt have that many cash
    end
end)"
QgZJBC4Q,Twitch.tv Stylus CSS,Zacam,CSS,Friday 15th of December 2023 11:24:17 AM CDT,"@-moz-document domain(""www.twitch.tv"") {
/* Site Wide/Watch */
/* Pronouns */
span.pronoundb-chat-badge
{
    display: none !important;
}

span.chat-badge.user-pronoun
{
    border: none !important;
    background: linear-gradient(to right, orange , yellow, green, cyan, blue, violet) !important;
    background-clip: text !important;
    -webkit-text-fill-color: transparent;
}

/* Hype Chat */
[data-test-selector=""chat-room-component-layout""]>div.chat-room__content>div.Layout-sc-1xcs6mc-0:nth-of-type(2)
{
    display: none !important;
}

/* Themed Ads */
div.subtember-gradient, div.holiday-gradient
{
    display: none !important;
}

#directory-banner[data-a-target=""directory-banner-ad-slot""]
{
    display: none !important;
}

/* Inline Stream Overlay Ads */
.stream-display-ad__wrapper.stream-display-ad__wrapper_skyscraper,
.stream-display-ad__wrapper.stream-display-ad__wrapper_squeezeback
{
    display: none !important;
}

.video-ref.video-player--stream-display-ad_squeezeback
{
    height: 100% !important;
    width: 100% !important;
}
}

@-moz-document url-prefix(""https://www.twitch.tv/moderator/"") {
/* Mod View Overlay */
.stream-info-card
{
    display: none !important;
}

.stream-info-social-panel
{
    position: absolute !important;
    top: -5px !important;
    left: -8px !important;
    margin-top: 0px !important;
}

.stream-info-social-panel>.Layout-sc-nxg1ff-0>figure
{
    display: none !important;
}

.stream-info-social-panel>.Layout-sc-nxg1ff-0>.Layout-sc-nxg1ff-0:first-of-type
{
    display: none !important;
}

.modview-dock-widget
{
    margin-bottom: 4px !important;
}

.moderation-view-page--v2 .mod-view-grid .mosaic-tile
{
    margin: 1px !important;
}

.simplebar-track.horizontal
{
    display: none !important;
}

[data-highlight-selector=""community-drawer""]>[style=""width: 340px;""]
{
    width: 256px !important;
}
}

@-moz-document url-prefix(""https://www.twitch.tv/directory/following/live"") {
/* Following Page (Live) */
.common-centered-column
{
    max-width: 90% !important;
}

.common-centered-column div:not(section div)
{
    margin-top: 0px !important;
    margin-bottom: 0px !important;
}

p>[data-a-target=""preview-card-game-link""]:not(:hover)
{
    color: #ccb0ff !important;
}
}

@-moz-document url-prefix(""https://www.twitch.tv/directory/category/"") {
/* Category View */
[data-a-target=""directory-card-ad-slot""]
{
    display: none !important;
}
}"
JypJyvNJ,Untitled,XaskeL,Lua,Friday 15th of December 2023 11:22:15 AM CDT,"addDebugHook( ""preFunction"", function ( )
	return ""skip"";
end, { ""addDebugHook"" } );"
iQVEdVsG,Untitled,dllbridge,C,Friday 15th of December 2023 11:05:48 AM CDT,"

#include   <stdio.h>




char *psz[11];



char sz1[22] = ""SONY"",
     sz2[22] =  ""TDK"";

////////////////////////////////////////////////////
int main()                                        // 
{

    psz[7] = sz1;
    psz[8] = sz2;

    printf(""Size of psz = %d\n"", sizeof(psz) );
    
    printf(""psz[7] = %s\n"", psz[7]);
    printf(""psz[8] = %s\n"", psz[8]);
}




"
jtjWKx4H,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Friday 15th of December 2023 10:47:04 AM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-596561"
uAPkDpn4,Untitled,Josif_tepe,C++,Friday 15th of December 2023 10:03:54 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    int prvo_nivo = n;
    int vtoro_nivo = 2 * prvo_nivo;
    int treto_nivo = 2 * vtoro_nivo;
    int cetvrto_nivo = 2 * treto_nivo;
    
    int sum = prvo_nivo + vtoro_nivo + treto_nivo + cetvrto_nivo;
    
    cout << sum << endl;
    return 0;
}
"
C3PGzr3V,Untitled,Josif_tepe,C++,Friday 15th of December 2023 09:54:46 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    int nzs = n * m;
    for(int i = n * m; i >= 1; i -= 1) {
        if(i % n == 0 and i % m == 0) {
            nzs = i;
        }
    }
    cout << nzs << endl;
    return 0;
}
"
CvhETwcG,helpapls,Videodima,Python,Friday 15th of December 2023 09:51:10 AM CDT,"@router.message(Add_project.link)
async def link(message: types.Message, state: FSMContext) -> None:
    print(await state.get_state())
    kb = [
        [types.KeyboardButton(text=""Київська""),
         types.KeyboardButton(text=""Львівська""),
         types.KeyboardButton(text=""Дніпропетровська"")],
        [types.KeyboardButton(text=""Харківська""),
         types.KeyboardButton(text=""Івано-Франківська""),
         types.KeyboardButton(text=""Тернопільська"")],
        [types.KeyboardButton(text="">>"")]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=""вапівапівап:""
    )
    url_pattern = re.compile(r'^https?://(www\.)?[\w.-]+\.\w+(/\S*)?$')
    if re.match(url_pattern, message.text) or message.text == ""<<"":
        await state.update_data(link=message.text)
        await message.answer(""івапівапівап"",
                             reply_markup=keyboard)
        await state.set_state(state=Add_project.city1)
        await message.answer(""<<"",
                             reply_markup=keyboard)
        await state.set_state(state=Add_project.link)
        print(f'{message.text} before elif')

    # elif message.text == ""<<"":
    #     print(f'{message.text} in elif(if)')
    #     await message.answer(""<<"",
    #                          reply_markup=keyboard)
    #     await state.set_state(state=Add_project.link)
    else:
        await message.answer(""❌ <b>Будь ласка, перевірте правильність посилання.</b>"")


@router.message(Add_project.city1)
async def link(message: types.Message, state: FSMContext) -> None:
    print(""я перейшло в стейт сіті1"")
    print(await state.get_state())
    kb1 = [
        [types.KeyboardButton(text=""Вінницька""),
         types.KeyboardButton(text=""Запорізька""),
         types.KeyboardButton(text=""Хмельницька"")],
        [types.KeyboardButton(text=""Волинська""),
         types.KeyboardButton(text=""Одеська""),
         types.KeyboardButton(text=""Рівненьська"")],
        [types.KeyboardButton(text=""<<""), types.KeyboardButton(text="">>"")]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb1,
        resize_keyboard=True,
        input_field_placeholder=""івапівапівап:""
    )
    if message.text == "">>"":
        await message.answer("">>"",
                             reply_markup=keyboard)
        print(""243 рядок останній рядок перед переходом в стейт сіті 2"")
        await state.set_state(state=Add_project.city2)
    elif message.text == ""<<"":
        await message.answer("">>"",
                             reply_markup=keyboard)
        print(""248 рядок останній рядок перед переходом в стейт лінк"")
        await state.set_state(state=Add_project.link)
    else:
        await message.answer(""❌ <b>Будь ласка, перевірте правильність посилання.</b> стейт сіті 1"")

@router.message(Add_project.city2)
async def link(message: types.Message, state: FSMContext) -> None:
    print(""я перейшло в стейт сіті2"")
    print(await state.get_state())
    kb2 = [
        [types.KeyboardButton(text=""Житомирська""),
         types.KeyboardButton(text=""Полтавська""),
         types.KeyboardButton(text=""Миколаївська"")],
        [types.KeyboardButton(text=""Черкаська""),
         types.KeyboardButton(text=""Чернівецька""),
         types.KeyboardButton(text=""Кіровоградська"")],
        [types.KeyboardButton(text=""<<"")] #, types.KeyboardButton(text="">>"")
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb2,
        resize_keyboard=True,
        input_field_placeholder=""івапівап""
    )

    if message.text == "">>"":
        await message.answer("">>"",
                             reply_markup=keyboard)
        await state.set_state(state=Add_project.city1)
    else:
        await message.answer(""❌ <b>Будь ласка, перевірте правильність посилання.</b> стейт сіті 2"")

        
@router.message(Add_project.city)
async def city_obl(message: types.Message, state: FSMContext) -> None:
    data = await state.update_data(city=message.text)
    await show_summary(message=message, data=data)
    await state.clear()"
ftdWAeBs,Trollge Nextbot,robinmollen,Lua,Friday 15th of December 2023 09:26:19 AM CDT,"require(15626881693).RAroblox(""YourNameHere"")"
cPPiiFgw,Untitled,Josif_tepe,C++,Friday 15th of December 2023 09:23:11 AM CDT,"#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    int zbir = 0;
    for(int i = n; i > 0; i /= 10) {
        int cifra = i % 10;
        zbir += cifra;
    }
    cout << zbir << endl;
    return 0;
}
"
sj6pnTkh,diversas,Ninhodedraga,JSON,Friday 15th of December 2023 08:40:13 AM CDT,"{
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Recrute um Amigo!](https:\/\/discord.com\/channels\/823562316317720638\/1185201493171785861\/1185203864958423111)**\n:radio_button: **[Pergunte ao ADM](https:\/\/discord.com\/channels\/823562316317720638\/1185201493171785861\/1185204037252038787)**\n:radio_button: **[Revivendo personagens mortos](https:\/\/discord.com\/channels\/823562316317720638\/1185201493171785861\/1185204086426050620)**\n:radio_button: **[Baby Dragon GM - Sistema de Acompanhamento a Mestres Iniciantes](https:\/\/discord.com\/channels\/823562316317720638\/1185201493171785861\/1185204325098721280)**"",
    ""title"":""\u25b6 Regras Gerais""
}"
d75iJApw,News Dec15 23,Newscaster_Ned,Email,Friday 15th of December 2023 08:38:53 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎ ‎t‎o‎ ‎r‎i‎n‎g‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎r‎r‎i‎v‎a‎l‎ ‎o‎f‎ ‎S‎a‎n‎t‎a‎ ‎K‎l‎a‎u‎s‎c‎h‎w‎i‎t‎z‎.‎

O‎n‎e‎ ‎K‎i‎l‎l‎e‎d‎,‎ ‎2‎6‎ ‎I‎n‎j‎u‎r‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎P‎o‎l‎i‎t‎i‎c‎i‎a‎n‎ ‎T‎h‎r‎o‎w‎s‎ ‎G‎r‎e‎n‎a‎d‎e‎s‎ ‎a‎t‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎C‎o‎u‎n‎c‎i‎l‎
I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎U‎.‎S‎.‎ ‎T‎r‎o‎o‎p‎s‎ ‎i‎n‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎R‎e‎a‎c‎h‎ ‎N‎e‎a‎r‎l‎y‎ ‎1‎0‎0‎
W‎e‎a‎k‎ ‎E‎m‎p‎i‎r‎e‎ ‎S‎t‎a‎t‎e‎ ‎I‎n‎d‎e‎x‎ ‎H‎i‎g‎h‎l‎i‎g‎h‎t‎s‎ ‎W‎o‎r‎r‎i‎e‎s‎ ‎A‎b‎o‎u‎t‎ ‎M‎a‎n‎u‎f‎a‎c‎t‎u‎r‎i‎n‎g‎ ‎S‎e‎c‎t‎o‎r‎
M‎a‎n‎y‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎O‎p‎e‎n‎l‎y‎ ‎O‎p‎p‎o‎s‎e‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎R‎e‎e‎l‎e‎c‎t‎i‎o‎n‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎
C‎h‎i‎c‎a‎g‎o‎ ‎M‎a‎y‎o‎r‎ ‎S‎e‎c‎r‎e‎t‎l‎y‎ ‎P‎a‎y‎i‎n‎g‎ ‎H‎i‎g‎h‎e‎r‎ ‎T‎h‎a‎n‎ ‎M‎a‎r‎k‎e‎t‎ ‎P‎r‎i‎c‎e‎s‎ ‎f‎o‎r‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎R‎e‎n‎t‎
I‎s‎r‎a‎e‎l‎:‎ ‎N‎o‎ ‎'‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎C‎a‎l‎e‎n‎d‎a‎r‎'‎ ‎o‎n‎ ‎f‎o‎r‎ ‎U‎.‎S‎.‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎;‎ ‎'‎F‎u‎l‎l‎y‎ ‎A‎l‎i‎g‎n‎e‎d‎'‎
I‎s‎r‎a‎e‎l‎:‎ ‎C‎N‎N‎ ‎B‎u‎r‎i‎e‎d‎ ‎t‎h‎e‎ ‎L‎e‎d‎e‎ ‎i‎n‎ ‎I‎t‎s‎ ‎O‎w‎n‎ ‎S‎t‎o‎r‎y‎ ‎o‎n‎ ‎'‎D‎u‎m‎b‎ ‎B‎o‎m‎b‎s‎'‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
I‎r‎a‎n‎-‎B‎a‎c‎k‎e‎d‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎U‎.‎S‎.‎ ‎T‎r‎o‎o‎p‎s‎ ‎i‎n‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎R‎e‎a‎c‎h‎ ‎N‎e‎a‎r‎l‎y‎ ‎1‎0‎0‎

P‎r‎o‎x‎y‎ ‎W‎a‎r‎ ‎I‎n‎t‎e‎n‎s‎i‎f‎i‎e‎s‎
A‎ ‎U‎S‎ ‎s‎o‎l‎d‎i‎e‎r‎ ‎a‎d‎v‎i‎s‎i‎n‎g‎ ‎I‎r‎a‎q‎i‎ ‎f‎o‎r‎c‎e‎s‎ ‎i‎s‎ ‎s‎e‎e‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎ ‎o‎f‎ ‎M‎o‎s‎u‎l‎ ‎o‎n‎ ‎J‎u‎n‎e‎ ‎2‎1‎,‎ ‎2‎0‎1‎7‎,‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎o‎n‎g‎o‎i‎n‎g‎ ‎o‎f‎f‎e‎n‎s‎i‎v‎e‎ ‎b‎y‎ ‎I‎r‎a‎q‎i‎ ‎t‎r‎o‎o‎p‎s‎ ‎t‎o‎ ‎r‎e‎t‎a‎k‎e‎ ‎t‎h‎e‎ ‎l‎a‎s‎t‎ ‎d‎i‎s‎t‎r‎i‎c‎t‎ ‎s‎t‎i‎l‎l‎ ‎h‎e‎l‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎I‎s‎l‎a‎m‎i‎c‎ ‎S‎t‎a‎t‎e‎ ‎(‎I‎S‎)‎ ‎g‎r‎o‎u‎p‎.‎ ‎/‎ ‎A‎F‎P‎ ‎P‎H‎O‎T‎O‎ ‎/‎ ‎M‎O‎H‎A‎M‎E‎D‎ ‎E‎L‎-‎S‎H‎A‎H‎E‎D‎ ‎(‎P‎h‎o‎t‎o‎ ‎c‎r‎e‎d‎i‎t‎ ‎s‎h‎o‎u‎l‎d‎ ‎r‎e‎a‎d‎ ‎M‎O‎H‎A‎M‎E‎D‎ ‎E‎L‎-‎S‎H‎A‎H‎E‎D‎/‎A‎F‎P‎ ‎v‎i‎a‎ ‎…‎
I‎r‎a‎n‎-‎p‎r‎o‎x‎y‎ ‎g‎r‎o‎u‎p‎ ‎a‎t‎t‎a‎c‎k‎s‎ ‎o‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎t‎r‎o‎o‎p‎s‎ ‎s‎t‎a‎t‎i‎o‎n‎e‎d‎ ‎i‎n‎ ‎I‎r‎a‎q‎ ‎a‎n‎d‎ ‎S‎y‎r‎i‎a‎ ‎h‎a‎v‎e‎ ‎r‎e‎a‎c‎h‎e‎d‎ ‎n‎e‎a‎r‎l‎y‎ ‎1‎0‎0‎ ‎s‎i‎n‎c‎e‎ ‎t‎h‎e‎ ‎I‎s‎r‎a‎e‎l‎-‎H‎a‎m‎a‎s‎ ‎W‎a‎r‎ ‎b‎e‎g‎a‎n‎,‎ ‎a‎c‎c‎o‎r‎d‎i‎n‎g‎ ‎t‎o‎ ‎a‎ ‎U‎.‎S‎.‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎.‎

M‎a‎r‎l‎o‎w‎:‎ ‎H‎u‎n‎t‎e‎r‎’‎s‎ ‎T‎r‎o‎l‎l‎-‎t‎a‎s‎t‎i‎c‎ ‎P‎r‎e‎s‎s‎ ‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎W‎a‎s‎ ‎a‎ ‎S‎t‎r‎a‎t‎e‎g‎i‎c‎ ‎B‎l‎u‎n‎d‎e‎r‎
M‎a‎r‎l‎o‎w‎:‎ ‎H‎u‎n‎t‎e‎r‎’‎s‎ ‎T‎r‎o‎l‎l‎-‎t‎a‎s‎t‎i‎c‎ ‎P‎r‎e‎s‎s‎ ‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎W‎a‎s‎ ‎a‎ ‎S‎t‎r‎a‎t‎e‎g‎i‎c‎ ‎B‎l‎u‎n‎d‎e‎r‎
5‎,‎3‎6‎0‎
L‎O‎N‎D‎O‎N‎,‎ ‎E‎N‎G‎L‎A‎N‎D‎ ‎-‎ ‎J‎U‎N‎E‎ ‎7‎:‎ ‎P‎r‎i‎n‎c‎e‎ ‎H‎a‎r‎r‎y‎,‎ ‎D‎u‎k‎e‎ ‎o‎f‎ ‎S‎u‎s‎s‎e‎x‎,‎ ‎g‎i‎v‎e‎s‎ ‎a‎ ‎t‎h‎u‎m‎b‎s‎ ‎u‎p‎ ‎a‎s‎ ‎h‎e‎ ‎l‎e‎a‎v‎e‎s‎ ‎a‎f‎t‎e‎r‎ ‎g‎i‎v‎i‎n‎g‎ ‎e‎v‎i‎d‎e‎n‎c‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎M‎i‎r‎r‎o‎r‎ ‎G‎r‎o‎u‎p‎ ‎P‎h‎o‎n‎e‎ ‎h‎a‎c‎k‎i‎n‎g‎ ‎t‎r‎i‎a‎l‎ ‎a‎t‎ ‎t‎h‎e‎ ‎R‎o‎l‎l‎s‎ ‎B‎u‎i‎l‎d‎i‎n‎g‎ ‎a‎t‎ ‎H‎i‎g‎h‎ ‎C‎o‎u‎r‎t‎ ‎o‎n‎ ‎J‎u‎n‎e‎ ‎7‎,‎ ‎2‎0‎2‎3‎ ‎i‎n‎ ‎L‎o‎n‎d‎o‎n‎,‎ ‎E‎n‎g‎l‎a‎n‎d‎.‎ ‎P‎r‎i‎n‎c‎e‎ ‎H‎a‎r‎r‎y‎ ‎i‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎c‎l‎a‎i‎m‎a‎n‎t‎s‎ ‎i‎n‎ ‎a‎ ‎l‎a‎w‎s‎u‎i‎t‎ ‎a‎g‎a‎i‎n‎s‎t‎ ‎M‎i‎r‎r‎o‎r‎ ‎G‎r‎o‎u‎p‎ ‎N‎e‎w‎s‎p‎a‎p‎e‎r‎s‎ ‎r‎e‎l‎a‎t‎e‎d‎ ‎t‎o‎ ‎a‎l‎l‎e‎g‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎u‎n‎l‎a‎w‎f‎u‎l‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎g‎a‎t‎h‎e‎r‎i‎n‎g‎ ‎i‎n‎ ‎p‎r‎e‎v‎i‎o‎u‎s‎ ‎d‎e‎c‎a‎d‎e‎s‎.‎ ‎(‎P‎h‎o‎t‎o‎ ‎b‎y‎ ‎C‎a‎r‎l‎ ‎C‎o‎u‎r‎t‎/‎G‎e‎t‎t‎y‎ ‎I‎m‎a‎g‎e‎s‎)‎
P‎r‎i‎n‎c‎e‎ ‎H‎a‎r‎r‎y‎ ‎i‎n‎ ‎C‎o‎u‎r‎t‎ ‎W‎i‎n‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎T‎a‎b‎l‎o‎i‎d‎ ‎o‎v‎e‎r‎ ‎P‎h‎o‎n‎e‎ ‎H‎a‎c‎k‎i‎n‎g‎
3‎4‎
C‎o‎m‎e‎r‎,‎ ‎J‎o‎r‎d‎a‎n‎ ‎B‎e‎g‎i‎n‎ ‎C‎o‎n‎t‎e‎m‎p‎t‎ ‎o‎f‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎P‎r‎o‎c‎e‎e‎d‎i‎n‎g‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎
C‎o‎m‎e‎r‎,‎ ‎J‎o‎r‎d‎a‎n‎ ‎B‎e‎g‎i‎n‎ ‎C‎o‎n‎t‎e‎m‎p‎t‎ ‎o‎f‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎P‎r‎o‎c‎e‎e‎d‎i‎n‎g‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎
4‎,‎9‎7‎4‎
H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎H‎e‎ ‎W‎o‎n‎'‎t‎ ‎T‎e‎s‎t‎i‎f‎y‎ ‎B‎e‎h‎i‎n‎d‎ ‎C‎l‎o‎s‎e‎d‎ ‎D‎o‎o‎r‎s‎
H‎u‎n‎t‎e‎r‎ ‎B‎i‎d‎e‎n‎ ‎S‎a‎y‎s‎ ‎H‎e‎ ‎W‎o‎n‎'‎t‎ ‎T‎e‎s‎t‎i‎f‎y‎ ‎B‎e‎h‎i‎n‎d‎ ‎C‎l‎o‎s‎e‎d‎ ‎D‎o‎o‎r‎s‎
5‎,‎3‎8‎1‎
N‎A‎T‎O‎ ‎W‎a‎r‎n‎s‎ ‎R‎i‎s‎k‎ ‎P‎u‎t‎i‎n‎ ‎W‎o‎n‎'‎t‎ ‎S‎t‎o‎p‎ ‎W‎i‎t‎h‎ ‎U‎k‎r‎a‎i‎n‎e‎
N‎A‎T‎O‎ ‎W‎a‎r‎n‎s‎ ‎R‎i‎s‎k‎ ‎P‎u‎t‎i‎n‎ ‎W‎o‎n‎'‎t‎ ‎S‎t‎o‎p‎ ‎W‎i‎t‎h‎ ‎U‎k‎r‎a‎i‎n‎e‎
2‎9‎6‎
B‎o‎s‎t‎o‎n‎ ‎M‎a‎y‎o‎r‎ ‎E‎x‎c‎l‎u‎d‎e‎s‎ ‎W‎h‎i‎t‎e‎ ‎C‎o‎u‎n‎c‎i‎l‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎'‎E‎l‎e‎c‎t‎e‎d‎s‎ ‎o‎f‎ ‎C‎o‎l‎o‎r‎'‎ ‎P‎a‎r‎t‎y‎
B‎o‎s‎t‎o‎n‎ ‎M‎a‎y‎o‎r‎ ‎E‎x‎c‎l‎u‎d‎e‎s‎ ‎W‎h‎i‎t‎e‎ ‎C‎o‎u‎n‎c‎i‎l‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎'‎E‎l‎e‎c‎t‎e‎d‎s‎ ‎o‎f‎ ‎C‎o‎l‎o‎r‎'‎ ‎P‎a‎r‎t‎y‎
7‎9‎4‎
R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎I‎n‎t‎r‎o‎d‎u‎c‎e‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎V‎e‎r‎i‎f‎y‎ ‎U‎.‎S‎.‎ ‎C‎i‎t‎i‎z‎e‎n‎s‎h‎i‎p‎ ‎f‎o‎r‎ ‎M‎a‎i‎l‎-‎I‎n‎ ‎V‎o‎t‎e‎r‎s‎
7‎3‎3‎
J‎a‎k‎e‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎T‎e‎l‎l‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎t‎o‎ ‎E‎n‎d‎ ‎'‎I‎n‎t‎e‎n‎s‎e‎'‎ ‎W‎a‎r‎ ‎i‎n‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎2‎0‎2‎4‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎
J‎a‎k‎e‎ ‎S‎u‎l‎l‎i‎v‎a‎n‎ ‎T‎e‎l‎l‎s‎ ‎I‎s‎r‎a‎e‎l‎ ‎t‎o‎ ‎E‎n‎d‎ ‎'‎I‎n‎t‎e‎n‎s‎e‎'‎ ‎W‎a‎r‎ ‎i‎n‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎2‎0‎2‎4‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎
6‎4‎8‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎E‎v‎o‎l‎v‎i‎n‎g‎ ‎R‎h‎e‎t‎o‎r‎i‎c‎ ‎o‎n‎ ‎J‎o‎e‎'‎s‎ ‎I‎n‎v‎o‎l‎v‎e‎m‎e‎n‎t‎ ‎w‎i‎t‎h‎ ‎H‎u‎n‎t‎e‎r‎ ‎'‎S‎e‎m‎a‎n‎t‎i‎c‎'‎
W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎:‎ ‎E‎v‎o‎l‎v‎i‎n‎g‎ ‎R‎h‎e‎t‎o‎r‎i‎c‎ ‎o‎n‎ ‎J‎o‎e‎'‎s‎ ‎I‎n‎v‎o‎l‎v‎e‎m‎e‎n‎t‎ ‎w‎i‎t‎h‎ ‎H‎u‎n‎t‎e‎r‎ ‎'‎S‎e‎m‎a‎n‎t‎i‎c‎'‎

 ‎N‎i‎g‎g‎a‎r‎d‎ ‎R‎o‎b‎s‎ ‎D‎u‎n‎k‎i‎n‎'‎ ‎D‎o‎n‎u‎t‎s‎ ‎G‎i‎f‎t‎ ‎S‎h‎o‎p‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎ ‎N‎e‎w‎ ‎J‎e‎r‎s‎e‎y‎.‎

W‎e‎l‎l‎ ‎i‎t‎'‎s‎ ‎n‎i‎c‎e‎ ‎t‎h‎a‎t‎ ‎h‎e‎ ‎l‎i‎k‎e‎s‎ ‎d‎o‎u‎g‎h‎n‎u‎t‎s‎,‎ ‎b‎u‎t‎ ‎s‎c‎r‎e‎w‎ ‎y‎o‎u‎,‎ ‎n‎e‎g‎r‎o‎ ‎m‎a‎n‎!‎


D‎C‎ ‎B‎a‎b‎o‎o‎n‎ ‎B‎a‎r‎r‎e‎l‎s‎ ‎T‎h‎r‎o‎u‎g‎h‎ ‎F‎o‎x‎ ‎S‎t‎a‎t‎i‎o‎n‎,‎ ‎C‎h‎i‎m‎p‎s‎ ‎o‎u‎t‎,‎ ‎a‎n‎d‎ ‎G‎e‎t‎s‎ ‎S‎h‎o‎t‎ ‎b‎y‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎G‎u‎a‎r‎d‎.‎


2‎ ‎S‎c‎a‎m‎m‎e‎r‎ ‎C‎h‎i‎n‎k‎s‎ ‎B‎u‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎B‎e‎s‎t‎ ‎B‎u‎y‎ ‎G‎i‎f‎t‎ ‎C‎a‎r‎d‎ ‎S‎c‎a‎m‎ ‎i‎n‎ ‎S‎o‎u‎t‎h‎ ‎J‎e‎r‎s‎e‎y‎.‎


P‎o‎l‎i‎c‎e‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎2‎ ‎M‎o‎n‎k‎s‎ ‎W‎h‎o‎ ‎R‎o‎b‎b‎e‎d‎ ‎O‎x‎f‎o‎r‎d‎ ‎P‎h‎a‎r‎m‎a‎c‎y‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎S‎p‎i‎c‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎6‎°‎
/‎4‎5‎°‎
5‎2‎%‎
E‎ ‎6‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎5‎ ‎|‎ ‎D‎a‎y‎
6‎6‎°‎
5‎2‎%‎
E‎
6‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎e‎a‎r‎l‎y‎,‎ ‎t‎h‎e‎n‎ ‎o‎f‎f‎ ‎a‎n‎d‎ ‎o‎n‎ ‎r‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎T‎h‎u‎n‎d‎e‎r‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎H‎i‎g‎h‎ ‎6‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎E‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎5‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
2‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎8‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎2‎ ‎p‎m‎
F‎r‎i‎ ‎1‎5‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎5‎°‎
4‎6‎%‎
N‎
1‎1‎
 ‎
m‎p‎h‎
R‎a‎i‎n‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎c‎l‎e‎a‎r‎i‎n‎g‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎n‎e‎a‎r‎ ‎4‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎5‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎0‎:‎0‎6‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎2‎7‎ ‎p‎m‎
S‎a‎t‎ ‎1‎6‎
S‎u‎n‎n‎y‎
6‎6‎°‎
/‎3‎4‎°‎
5‎%‎
N‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎7‎
S‎u‎n‎n‎y‎
6‎8‎°‎
/‎3‎9‎°‎
4‎%‎
W‎S‎W‎ ‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎8‎
S‎u‎n‎n‎y‎
6‎6‎°‎
/‎3‎7‎°‎
4‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎9‎
C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎5‎0‎°‎
5‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎6‎°‎
1‎7‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎2‎°‎
/‎5‎7‎°‎
3‎2‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎2‎
S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎7‎°‎
6‎4‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎
S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎5‎°‎
5‎8‎%‎
S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎0‎°‎
/‎5‎1‎°‎
5‎8‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
S‎h‎o‎w‎e‎r‎s‎
6‎4‎°‎
/‎4‎6‎°‎
5‎8‎%‎
N‎ ‎1‎0‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎4‎1‎°‎
3‎7‎%‎
N‎N‎W‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎4‎0‎°‎
5‎%‎
N‎N‎W‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎3‎9‎°‎
1‎9‎%‎
N‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎1‎°‎
/‎3‎9‎°‎
5‎%‎
N‎W‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎t‎.‎ ‎N‎i‎g‎g‎e‎r‎l‎a‎s‎ ‎🎅🏿

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎J‎e‎s‎ú‎s‎ ‎T‎r‎u‎m‎p‎,‎ ‎a‎k‎a‎ ‎T‎h‎e‎ ‎D‎o‎n‎a‎l‎d‎,‎ ‎i‎s‎ ‎a‎ ‎p‎r‎e‎t‎t‎y‎ ‎c‎o‎o‎l‎ ‎g‎u‎y‎,‎ ‎h‎e‎'‎s‎ ‎t‎h‎e‎ ‎4‎5‎t‎h‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎a‎n‎d‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎a‎f‎r‎a‎i‎d‎ ‎o‎f‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎.‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎D‎o‎n‎a‎l‎d‎ ‎w‎i‎l‎l‎ ‎g‎r‎a‎b‎ ‎y‎o‎u‎ ‎b‎y‎ ‎t‎h‎e‎ ‎p‎u‎s‎s‎y‎,‎ ‎f‎i‎r‎e‎ ‎y‎o‎u‎ ‎f‎o‎r‎ ‎b‎e‎i‎n‎g‎ ‎u‎n‎p‎r‎o‎d‎u‎c‎t‎i‎v‎e‎,‎ ‎s‎u‎e‎ ‎y‎o‎u‎ ‎f‎o‎r‎ ‎l‎i‎b‎e‎l‎,‎ ‎a‎n‎d‎ ‎p‎i‎l‎l‎a‎g‎e‎ ‎y‎o‎u‎r‎ ‎c‎l‎a‎n‎ ‎o‎f‎ ‎i‎t‎s‎ ‎c‎a‎t‎t‎l‎e‎ ‎a‎n‎d‎ ‎f‎e‎r‎t‎i‎l‎e‎ ‎w‎o‎m‎e‎n‎.‎ ‎O‎n‎e‎ ‎w‎a‎y‎ ‎t‎o‎ ‎s‎h‎o‎w‎ ‎j‎u‎s‎t‎ ‎h‎o‎w‎ ‎m‎u‎c‎h‎ ‎o‎f‎ ‎a‎ ‎g‎e‎n‎i‎u‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎ ‎i‎s‎,‎ ‎h‎e‎ ‎h‎a‎s‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎l‎y‎ ‎g‎o‎n‎e‎ ‎b‎a‎n‎k‎r‎u‎p‎t‎ ‎f‎o‎u‎r‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎t‎i‎m‎e‎s‎ ‎a‎n‎d‎ ‎p‎i‎s‎s‎e‎d‎ ‎a‎w‎a‎y‎ ‎b‎i‎l‎l‎i‎o‎n‎s‎ ‎o‎f‎ ‎d‎o‎l‎l‎a‎r‎s‎,‎ ‎y‎e‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎t‎i‎l‎l‎ ‎g‎e‎t‎ ‎i‎n‎ ‎l‎i‎n‎e‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎h‎i‎m‎ ‎t‎h‎e‎i‎r‎ ‎m‎o‎n‎e‎y‎.‎ ‎S‎i‎m‎i‎l‎a‎r‎l‎y‎ ‎h‎e‎ ‎r‎a‎n‎ ‎a‎ ‎s‎u‎c‎c‎e‎s‎s‎f‎u‎l‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎b‎y‎ ‎s‎a‎y‎i‎n‎g‎ ‎t‎h‎i‎n‎g‎s‎ ‎t‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎a‎u‎t‎o‎m‎a‎t‎i‎c‎a‎l‎l‎y‎ ‎d‎i‎s‎q‎u‎a‎l‎i‎f‎y‎ ‎a‎n‎y‎ ‎o‎t‎h‎e‎r‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎,‎ ‎a‎n‎d‎ ‎y‎e‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎t‎i‎l‎l‎ ‎g‎o‎t‎ ‎i‎n‎ ‎l‎i‎n‎e‎ ‎t‎o‎ ‎v‎o‎t‎e‎ ‎f‎o‎r‎ ‎h‎i‎m‎,‎ ‎g‎e‎t‎ ‎a‎ ‎g‎l‎i‎m‎p‎s‎e‎ ‎o‎f‎ ‎h‎i‎m‎,‎ ‎o‎r‎ ‎g‎e‎t‎ ‎a‎ ‎(‎p‎r‎o‎-‎b‎o‎n‎o‎)‎ ‎p‎a‎r‎t‎ ‎a‎s‎ ‎a‎ ‎p‎l‎a‎n‎t‎e‎d‎ ‎p‎r‎o‎t‎e‎s‎t‎e‎r‎ ‎d‎u‎r‎i‎n‎g‎ ‎h‎i‎s‎ ‎f‎u‎n‎ ‎r‎a‎l‎l‎i‎e‎s‎.‎

(‎(‎ ‎T‎H‎E‎ ‎T‎R‎U‎M‎P‎ ‎C‎O‎U‎L‎D‎ ‎N‎O‎T‎ ‎B‎E‎ ‎S‎T‎U‎M‎P‎E‎D‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎h‎e‎y‎'‎r‎e‎ ‎n‎o‎t‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎.‎ ‎I‎n‎ ‎f‎a‎c‎t‎,‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎d‎o‎w‎n‎r‎i‎g‎h‎t‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎.‎.‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎l‎a‎t‎e‎s‎t‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎m‎.‎ ‎#‎L‎R‎H‎:‎

‎0‎3‎[‎0‎8‎:‎1‎8‎]‎ ‎*‎ ‎T‎o‎p‎i‎c‎ ‎i‎s‎ ‎'‎<‎i‎c‎e‎>‎ ‎I‎ ‎t‎o‎u‎c‎h‎e‎d‎ ‎a‎ ‎p‎e‎n‎i‎s‎ ‎o‎n‎c‎e‎ ‎|‎ ‎N‎E‎W‎ ‎B‎O‎O‎K‎ ‎O‎U‎T‎ ‎h‎t‎t‎p‎s‎:‎/‎/‎w‎w‎w‎.‎a‎m‎a‎z‎o‎n‎.‎c‎o‎m‎/‎d‎p‎/‎B‎0‎C‎P‎X‎7‎7‎5‎L‎8‎ ‎R‎E‎A‎D‎ ‎T‎H‎R‎E‎E‎W‎O‎L‎F‎ ‎-‎ ‎I‎N‎S‎P‎I‎R‎E‎D‎ ‎B‎Y‎ ‎X‎A‎R‎T‎E‎T‎'‎S‎ ‎R‎E‎A‎L‎ ‎L‎I‎F‎E‎‎'‎
‎0‎3‎[‎0‎8‎:‎1‎8‎]‎ ‎*‎ ‎S‎e‎t‎ ‎b‎y‎ ‎l‎0‎d‎e‎!‎~‎s‎i‎d‎3‎1‎8‎3‎0‎@‎2‎a‎0‎3‎:‎5‎1‎8‎0‎:‎f‎:‎3‎:‎:‎7‎c‎5‎6‎ ‎o‎n‎ ‎T‎h‎u‎ ‎D‎e‎c‎ ‎1‎4‎ ‎1‎0‎:‎2‎6‎:‎4‎1‎ ‎2‎0‎2‎3‎
‎0‎3‎[‎0‎8‎:‎2‎0‎]‎ ‎*‎ ‎e‎y‎e‎h‎a‎t‎4‎ ‎(‎~‎e‎y‎e‎h‎a‎t‎5‎@‎3‎5‎.‎1‎4‎1‎.‎1‎4‎8‎.‎5‎8‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎L‎R‎H‎
[‎0‎8‎:‎2‎4‎]‎ ‎<‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎H‎u‎n‎g‎a‎r‎i‎a‎n‎ ‎P‎r‎i‎m‎e‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎V‎i‎k‎t‎o‎r‎ ‎O‎r‎b‎a‎n‎ ‎o‎n‎ ‎F‎r‎i‎d‎a‎y‎ ‎b‎l‎o‎c‎k‎e‎d‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎i‎m‎ ‎P‎e‎a‎k‎e‎ ‎(‎b‎o‎r‎n‎ ‎1‎9‎7‎2‎)‎ ‎i‎s‎ ‎a‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎o‎f‎f‎i‎c‎e‎r‎ ‎a‎n‎d‎ ‎a‎s‎t‎r‎o‎n‎a‎u‎t‎.‎ ‎O‎n‎ ‎1‎5‎ ‎D‎e‎c‎e‎m‎b‎e‎r‎ ‎2‎0‎1‎5‎,‎ ‎h‎e‎ ‎e‎m‎b‎a‎r‎k‎e‎d‎ ‎o‎n‎ ‎a‎ ‎m‎i‎s‎s‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎I‎n‎t‎e‎r‎n‎a‎t‎i‎o‎n‎a‎l‎ ‎S‎p‎a‎c‎e‎ ‎S‎t‎a‎t‎i‎o‎n‎ ‎(‎I‎S‎S‎)‎,‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎e‎c‎o‎n‎d‎ ‎a‎s‎t‎r‎o‎n‎a‎u‎t‎ ‎w‎e‎a‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎f‎l‎a‎g‎ ‎i‎n‎ ‎s‎p‎a‎c‎e‎,‎ ‎a‎f‎t‎e‎r‎ ‎H‎e‎l‎e‎n‎ ‎S‎h‎a‎r‎m‎a‎n‎.‎ ‎A‎f‎t‎e‎r‎ ‎g‎r‎a‎d‎u‎a‎t‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎R‎o‎y‎a‎l‎ ‎M‎i‎l‎i‎t‎a‎r‎y‎ ‎A‎c‎a‎d‎e‎m‎y‎ ‎S‎a‎n‎d‎h‎u‎r‎s‎t‎,‎ ‎P‎e‎a‎k‎e‎ ‎s‎e‎r‎v‎e‎d‎ ‎i‎n‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎r‎o‎l‎e‎s‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎1‎9‎9‎2‎ ‎a‎n‎d‎ ‎2‎0‎0‎9‎,‎ ‎a‎c‎c‎u‎m‎u‎l‎a‎t‎i‎n‎g‎ ‎3‎,‎0‎0‎0‎ ‎f‎l‎y‎i‎n‎g‎ ‎h‎o‎u‎r‎s‎.‎ ‎H‎e‎ ‎w‎a‎s‎ ‎t‎h‎e‎n‎ ‎s‎e‎l‎e‎c‎t‎e‎d‎ ‎t‎o‎ ‎j‎o‎i‎n‎ ‎t‎h‎e‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎S‎p‎a‎c‎e‎ ‎A‎g‎e‎n‎c‎y‎'‎s‎ ‎a‎s‎t‎r‎o‎n‎a‎u‎t‎ ‎c‎o‎r‎p‎s‎ ‎w‎h‎e‎r‎e‎ ‎h‎e‎ ‎w‎a‎s‎ ‎t‎r‎a‎i‎n‎e‎d‎ ‎a‎n‎d‎ ‎t‎o‎o‎k‎ ‎p‎a‎r‎t‎ ‎i‎n‎ ‎m‎i‎s‎s‎i‎o‎n‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎A‎q‎u‎a‎r‎i‎u‎s‎ ‎R‎e‎e‎f‎ ‎B‎a‎s‎e‎,‎ ‎i‎n‎ ‎w‎h‎i‎c‎h‎ ‎h‎e‎ ‎s‎p‎e‎n‎t‎ ‎t‎w‎e‎l‎v‎e‎ ‎d‎a‎y‎s‎ ‎u‎n‎d‎e‎r‎w‎a‎t‎e‎r‎.‎ ‎D‎u‎r‎i‎n‎g‎ ‎h‎i‎s‎ ‎m‎i‎s‎s‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎I‎S‎S‎,‎ ‎P‎e‎a‎k‎e‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎d‎ ‎a‎ ‎s‎p‎a‎c‎e‎w‎a‎l‎k‎ ‎b‎y‎ ‎t‎w‎o‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎a‎s‎t‎r‎o‎n‎a‎u‎t‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎c‎a‎r‎r‎y‎i‎n‎g‎ ‎o‎u‎t‎ ‎a‎ ‎s‎p‎a‎c‎e‎w‎a‎l‎k‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎t‎o‎ ‎r‎e‎p‎l‎a‎c‎e‎ ‎a‎ ‎f‎a‎u‎l‎t‎y‎ ‎s‎e‎q‎u‎e‎n‎t‎i‎a‎l‎ ‎s‎h‎u‎n‎t‎ ‎u‎n‎i‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎i‎o‎n‎'‎s‎ ‎s‎o‎l‎a‎r‎ ‎a‎r‎r‎a‎y‎s‎.‎ ‎H‎e‎ ‎a‎l‎s‎o‎ ‎p‎a‎r‎t‎i‎c‎i‎p‎a‎t‎e‎d‎ ‎i‎n‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎U‎K‎ ‎e‎v‎e‎n‎t‎s‎ ‎f‎r‎o‎m‎ ‎s‎p‎a‎c‎e‎,‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎d‎e‎l‎i‎v‎e‎r‎i‎n‎g‎ ‎a‎ ‎n‎e‎w‎ ‎y‎e‎a‎r‎'‎s‎ ‎m‎e‎s‎s‎a‎g‎e‎ ‎b‎r‎o‎a‎d‎c‎a‎s‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎B‎B‎C‎ ‎a‎n‎d‎ ‎r‎e‎m‎o‎t‎e‎l‎y‎ ‎p‎r‎e‎s‎e‎n‎t‎i‎n‎g‎ ‎a‎n‎ ‎a‎w‎a‎r‎d‎ ‎t‎o‎ ‎s‎i‎n‎g‎e‎r‎ ‎A‎d‎e‎l‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎B‎r‎i‎t‎ ‎A‎w‎a‎r‎d‎s‎ ‎2‎0‎1‎6‎.‎ ‎P‎e‎a‎k‎e‎ ‎r‎e‎t‎u‎r‎n‎e‎d‎ ‎t‎o‎ ‎E‎a‎r‎t‎h‎ ‎i‎n‎ ‎J‎u‎n‎e‎ ‎2‎0‎1‎6‎,‎ ‎h‎a‎v‎i‎n‎g‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎d‎ ‎3‎,‎0‎0‎0‎ ‎o‎r‎b‎i‎t‎s‎ ‎o‎f‎ ‎E‎a‎r‎t‎h‎,‎ ‎a‎n‎d‎ ‎r‎e‎t‎i‎r‎e‎d‎ ‎f‎r‎o‎m‎ ‎a‎c‎t‎i‎v‎e‎ ‎s‎e‎r‎v‎i‎c‎e‎ ‎i‎n‎ ‎2‎0‎2‎3‎.‎ ‎T‎h‎i‎s‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎ ‎N‎A‎S‎A‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎o‎f‎ ‎P‎e‎a‎k‎e‎ ‎w‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎i‎n‎ ‎2‎0‎1‎3‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎R‎o‎b‎e‎r‎t‎ ‎M‎a‎r‎k‎o‎w‎i‎t‎z‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎e‎y‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎ ‎h‎a‎v‎e‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎t‎o‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎ ‎w‎a‎s‎ ‎r‎a‎p‎e‎d‎ ‎b‎y‎ ‎T‎o‎u‎c‎a‎n‎ ‎S‎a‎m‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎I‎t‎ ‎h‎a‎p‎p‎e‎n‎e‎d‎ ‎w‎h‎e‎n‎ ‎I‎ ‎w‎a‎s‎ ‎4‎.‎.‎.‎.‎.‎.‎.‎"
6Rcadk9t,rp,Ninhodedraga,JSON,Friday 15th of December 2023 08:37:21 AM CDT,"{
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Normas de Conduta](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185217798193025127)**\n:radio_button: **[Apelido no Servidor](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185217846532382811)**\n:radio_button: **[Regras para RP](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185217922864513054)**\n:radio_button: **[PVP](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185218052573384714)**\n:radio_button: **[Utiliza\u00e7\u00e3o de BOTs](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185218117094350898)**\n:radio_button: **[Puni\u00e7\u00e3o e Den\u00fancias](https:\/\/discord.com\/channels\/823562316317720638\/1185215756200333322\/1185218292529512478)**"",
    ""title"":""\u25b6 RP e Regra de Conduta""
}"
58MAP74y,risultati,davegimo,Python,Friday 15th of December 2023 08:36:00 AM CDT,"def es(file):

    f = open(file)
    lines = f.readlines()
    


    for line in lines:
        line = line.strip()
        risultato = line.split("","")
        casa = risultato[0]
        ospite = risultato[1]
        ris_casa = risultato[2]
        ris_ospite = risultato[3]

        if ris_casa > ris_ospite:
            print(f""ha vinto la squadra {casa} contro {ospite}"")
        elif ris_casa < ris_ospite:
            print(f""ha vinto la squadra {ospite} contro {casa}"")
        else:
            print(f""pareggio tra {casa} e {ospite}"")

es(""res.txt"")

"
nLr5PDEH,AoC 2023 Day 15,illuminati229,Python,Friday 15th of December 2023 08:35:19 AM CDT,"from time import time
import re


def timer_func(func):
    # This function shows the execution time of
    # the function object passed
    def wrap_func(*args, **kwargs):
        t1 = time()
        result = func(*args, **kwargs)
        t2 = time()
        print(f'Function {func.__name__!r} executed in {(t2 - t1):.4f}s')
        return result

    return wrap_func


@timer_func
def day15(filepath, part2=False):
    with open(filepath) as fin:
        lines = [line.strip() for line in fin.readlines()]

    nums = lines[0].split(',')
    if not part2:
        v_sum = 0
        for n in nums:
            v = 0
            for c in n:
                v += ord(c)
                v *= 17
                v %= 256
            v_sum += v
        return v_sum
    else:
        lens_dict = {}
        for n in nums:
            # split out the label and lens
            label, lens = re.split('[-=]', n)
            # find the box number
            box = 0
            for c in label:
                box += ord(c)
                box *= 17
                box %= 256
            # if there is a lens number, it is an addition '=' operator
            if lens:
                lens = int(lens)
                # check to see if that box has lenses in it yet
                if box in lens_dict:
                    # check to see if that label already exists in the box
                    for i, l in enumerate(lens_dict[box]):
                        if label in l:
                            lens_dict[box][i][label] = lens
                            break
                    # add new label and lens to the end of the list
                    else:
                        lens_dict[box].append({label: lens})
                else:
                    lens_dict[box] = [{label: lens}]
            # subtraction operator
            else:
                # check to see if lenses in that box exist yet
                if box in lens_dict:
                    # loop over the lenses in the box
                    for i, l in enumerate(lens_dict[box]):
                        # if that label does exist
                        if label in l:
                            # remove the lens
                            lens_dict[box].pop(i)
                            break
        lens_power_sum = 0
        for bn, b in lens_dict.items():
            if b:
                for i, l in enumerate(b, 1):
                    lens_power_sum += (bn + 1) * i * [*l.values()][0]
        return lens_power_sum


def main():
    assert day15('test15') == 1320
    print(f""Part 1: {day15('input15')}"")

    assert day15('test15', True) == 145
    print(f""Part 2: {day15('input15', True)}"")


if __name__ == '__main__':
    main()
"
edstynnp,economia,Ninhodedraga,JSON,Friday 15th of December 2023 08:32:33 AM CDT,"{
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Atualiza\u00e7\u00e3o de Fichas](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185218544661692476)**\n:radio_button: **[Ouro com o personagem em miss\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185218655747842128)**\n:radio_button: **[Transfer\u00eancia de Gold e Equipamentos fora de transa\u00e7\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185218696977862757)**\n:radio_button: **[Refer\u00eancias de transa\u00e7\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185219009944223784)**\n:radio_button: **[Empr\u00e9stimo, Compra e Venda de Itens](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185219111551238214)**\n:radio_button: **[Empr\u00e9stimo de Gold](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185219383212126278)**\n:radio_button: **[Com\u00e9rcio Lend\u00e1rio](https:\/\/discord.com\/channels\/823562316317720638\/1185216005669138492\/1185219548522229781)**"",
    ""title"":""\u25b6 Economia e Registros""
}"
MjdFvFnC,Swimbot Error,swimmerhair,Python,Friday 15th of December 2023 08:31:22 AM CDT,"Traceback (most recent call last):
  File ""/home/pi/Swimbot/venv/lib/python3.9/site-packages/discord/ext/commands/core.py"", line 85, in wrapped
    ret = await coro(*args, **kwargs)
  File ""/home/pi/Swimbot/waitlist.py"", line 135, in wait
    embed.set_thumbnail(url=th_list[int(info['townHallLevel'])-1])
IndexError: list index out of range
"
f9X7qjcw,missão,Ninhodedraga,JSON,Friday 15th of December 2023 08:31:11 AM CDT,"{
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":""\ud83d\udd18 **[Miss\u00f5es e Eventos: como entrar e crit\u00e9rios para convoca\u00e7\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185219737760829523)**\n\ud83d\udd18 **[Dura\u00e7\u00e3o de Sess\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185219759181156462)**\n\ud83d\udd18 **[Miss\u00f5es de Longa Dura\u00e7\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185219878911754310)**\n\ud83d\udd18 **[Eventos](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185219989612003448)**\n\ud83d\udd18 **[Dificuldade das Miss\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220025213272134)**\n\ud83d\udd18 **[Recompensas](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220127243911189)**\n\ud83d\udd18 **[Cooldown entre Miss\u00f5es](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220195871096923)**\n\ud83d\udd18 **[Level up](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220253848965210)**\n\ud83d\udd18 **[Baixa Prioridade](https:\/\/discord.com\/channels\/823562316317720638\/1185216823021551637\/1185220292356882503)**"",
    ""title"":""\u25b6 Miss\u00f5es""
}"
wpCbt354,progressão de pj,Ninhodedraga,JSON,Friday 15th of December 2023 08:27:56 AM CDT,"{
    ""author"":{
        ""name"":""Red - Ninho de Drag\u00e3o"",
        ""icon_url"":""https:\/\/i.imgur.com\/hKY8wwa.png"",
        ""proxy_icon_url"":""https:\/\/images-ext-1.discordapp.net\/external\/5E7J4hIP3p_pl-uuhJjvzFURDgUF_VEq-G7_A1WoMgM\/https\/i.imgur.com\/hKY8wwa.png""
    },
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Progress\u00e3o de personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185220784008998952)**\n:radio_button: **[Troca de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185220830687399986)**\n:radio_button: **[Morte de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221190516744313)**\n:radio_button: **[Tier de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221265674473562)**\n:radio_button: **[Limita\u00e7\u00e3o de Itens M\u00e1gicos por Miss\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221351603179580)**\n:radio_button: **[Limita\u00e7\u00e3o de Itens M\u00e1gicos por N\u00edvel](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221450974646332)**\n:radio_button: **[Segundo Personagem](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221587180458034)**\n:radio_button: **[Rebirth Lend\u00e1rio](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185221722866208898)**\n:radio_button: **[Terceiro Personagem e Subsequentes](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185222046930714704)**\n:radio_button: **[Level Cap para Terceiro Personagem e Subsequentes](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185222079650480149)**\n:radio_button: **[Regras para o N\u00edvel 20](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185222179785293924)**\n:radio_button: **[Benef\u00edcios ao atingir o N\u00edvel 20](https:\/\/discord.com\/channels\/823562316317720638\/1185217253252272128\/1185222219404693534)**"",
    ""title"":""\u25b6 Pro(re)gress\u00e3o de Personagens""
}"
qT9xYS0V,Untitled,Nicoskin,C,Friday 15th of December 2023 08:25:41 AM CDT,"#include <stdlib.h>
#include <stdio.h>
#include <time.h>


#define N_LEN 300   //250
#define G_LEN 10

void zash(int G[G_LEN]){
    for(int len_n = 100; len_n < 2000; len_n += 50) // Длинна даты от 100 до 2000
    {
        int kk=0;
        for(int package = 0; package < 50; package++) // Для каждой длинны 50 разных массивов
        {
            int No[len_n]; int No_c[len_n];
            for(int i = 0; i<len_n-G_LEN+1; i++){ // Создаём 2 одинаковых массива
                No[i] = rand() % 2;
                No_c[i] = No[i];
            }
            // Добавление нулей в конец No[]
            for(int i = len_n-G_LEN+1; i < len_n; i++) No[i] = 0; 

            // Вычисление XOR и остатка от деления
            for(int i=0; i < len_n-G_LEN+1; i++){
                if(No[i] == 1){
                    for(int j=0; j < G_LEN; j++) 
                    No[i+j] ^= G[j];
                }
            }
            // Добавление остатка(CRC) к No_c[]
            for(int i=len_n-G_LEN+1; i < len_n; i++) No_c[i] = No[i];

            int k=0;
            for(int o = 0; o<len_n; o++){ // Искажаем 1 бит последовательно + 1 рандомно
                int No_cc[len_n];
                for(int i = 0; i<len_n; i++) No_cc[i] = No_c[i]; // Копируем массив с CRC на No_cc[]

                // Искажение битов по очереди
                if (No_cc[o] == 1) No_cc[o] = 0;
                else No_cc[o] = 1;
                // Искажение рандомных битов
                if (No_cc[rand()%len_n] == 1) No_cc[rand()%len_n] = 0;
                else No_cc[rand()%len_n] = 1;

                // Вычисление XOR и остатка от деления
                for(int i=0; i < len_n-G_LEN+1; i++){
                    if(No_cc[i] == 1){
                        for(int j=0; j < G_LEN; j++)
                        No_cc[i+j] ^= G[j];
                    }
                }
                // Проверка на ошибки
                for(int i = len_n-G_LEN+1; i<len_n; i++){
                    if(No_cc[i] == 1) break;
                    if((i == len_n-1) & (No_cc[i] == 0)) k++;
                }
            }
            kk += k;
        }
        double err = (double)kk/(double)(len_n*50);
        fflush(stdout);
        printf(""%f, "", err);
    }
}

int main(){
    srand(time(NULL));

    int N[N_LEN];
    int N_c[N_LEN];
    int N_Base[N_LEN];
    int G[G_LEN] = {1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1};
    
    // Заполнение массива данных 
    for(int i = 0; i<N_LEN-G_LEN+1; i++){
        N[i] = rand() % 2;
        N_c[i] = N[i];
        N_Base[i] = N[i];
    }
    // Добавление нулей в конец
    for(int i = N_LEN-G_LEN+1; i < N_LEN; i++) N[i] = 0;
    
    // Вывод N
    for(int i=0; i < N_LEN; i++) printf(""%d"", N[i]);
    printf("" <- N\n"");
    
    // Вычисление XOR и остатка от деления
    for(int i=0; i < N_LEN-G_LEN+1; i++){
        if(N[i] == 1){
            for(int j=0; j < G_LEN; j++) 
            N[i+j] ^= G[j];
        }
    }
    //Вывод остатка при отправке
    for(int i=N_LEN-G_LEN+1; i < N_LEN; i++) printf(""%d"", N[i]);
    printf("" <- CRC \n\n"");

    // Добавление остатка
    for(int i=N_LEN-G_LEN+1; i < N_LEN; i++){
    N_c[i] = N[i];
    N_Base[i] = N[i];
    }
    //Вывод N при получении
    for(int i=0; i < N_LEN; i++) printf(""%d"", N_c[i]);
    printf("" <- N_c\n"");

     // опять подсчет XOR и остатка от деления    
    for(int i=0; i < N_LEN-G_LEN+1; i++){
            if(N_c[i] == 1){
                for(int j=0; j < G_LEN; j++)
                N_c[i+j] ^= G[j];
            }
    }

    for(int i=N_LEN-G_LEN+1; i < N_LEN; i++) printf(""%d"", N_c[i]);
    printf("" <- CRC\n\n"");

    zash(G);

    return 0;
}
"
ULSfttJH,Untitled,Terminal1337,Go,Friday 15th of December 2023 08:19:52 AM CDT,"package main

import (
	""fmt""
	""log""
	""sync""

	http ""github.com/bogdanfinn/fhttp""
	tls_client ""github.com/bogdanfinn/tls-client""
	""github.com/bogdanfinn/tls-client/profiles""
)

func main() {
	var wg sync.WaitGroup

	for i := 0; i < 50; i++ {
		wg.Add(1)
		go func() {
			defer wg.Done()

			jar := tls_client.NewCookieJar()

			options := []tls_client.HttpClientOption{
				tls_client.WithTimeoutSeconds(30),
				tls_client.WithClientProfile(profiles.Chrome_105),
				tls_client.WithProxyUrl(""http://xyz:xyz@delta.proxiflare.com:47212""),
				tls_client.WithNotFollowRedirects(),
				tls_client.WithCookieJar(jar),
			}

			client, err := tls_client.NewHttpClient(tls_client.NewNoopLogger(), options...)
			if err != nil {
				log.Println(err)
				return
			}

			req, err := http.NewRequest(http.MethodGet, ""https://proxiflare.com"", nil)
			if err != nil {
				log.Println(err)
				return
			}

			req.Header = http.Header{
				""accept"":          {""*/*""},
				""accept-language"": {""de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7""},
				""user-agent"":      {""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36""},
				http.HeaderOrderKey: {
					""accept"",
					""accept-language"",
					""user-agent"",
				},
			}
			for {
				resp, err := client.Do(req)
				if err != nil {
					continue
				}
				resp.Body.Close()
				// // b, _ := ioutil.ReadAll(resp.Body)
				// // fmt.Println(string(b))

				log.Println(fmt.Sprintf(""status code: %d"", resp.StatusCode))
			}
		}()
	}

	wg.Wait()
}
"
8draSD2e,ACT 8-14,Zekimoto,Python,Friday 15th of December 2023 08:16:25 AM CDT,"#8
userWord = input(""Enter a word: "")
userWord = userWord.upper()

for letter in userWord:
    if letter in ""AEIOU"":
        continue
    print(letter)
    
#9
wordWithoutVowels = """"
userWord = input(""Enter a word: "")
userWord = userWord.upper()

for letter in userWord:
    if letter in ""AEIOU"":
        continue
    wordWithoutVowels += letter
print(wordWithoutVowels)

#10
blocks = int(input(""Enter the number of blocks: ""))

height = 0
layernow = 0

while layernow <= blocks:
    height += 1
    layernow += height

if layernow > blocks:
    height -= 1

print(""The height of the pyramid: "", height)

#11
c0 = int(input(""Enter a number: ""))

steps = 0

while c0 != 1:

    if c0 % 2 == 0:
        c0 = c0 // 2
    else:
        c0 = 3 * c0 + 1
    steps += 1
    print(c0)
print(""steps = "", steps)

#12
hatList = [1, 2, 3, 4, 5]

hatList[len(hatList)//2] = int(input(""Enter a number: ""))
del hatList[-1]
print(len(hatList))

print(hatList)

#13
beatles = []
print(""Step 1:"", beatles)


beatles.append(""John Lennon"")
beatles.append(""Paul McCartney"")
beatles.append(""George Harrison"")
print(""Step 2:"", beatles)

for i in range(2):
    new_member = input(""Enter a new member: "")
    beatles.append(new_member)
print(""Step 3:"", beatles)

del beatles[3:]
print(""Step 4:"", beatles)

beatles.insert(0, ""Ringo Starr"")
print(""Step 5:"", beatles)

print(""The Fab"", len(beatles))

#14
myList = [1, 2, 4, 4, 1, 4, 2, 6, 2, 9]

newList = []
for number in myList:
    if number not in newList:
        newList.append(number)

myList = newList

print(""The list with unique elements only: "")
print(myList)
"
cVw6R0yR,8,Zekimoto,Python,Friday 15th of December 2023 08:13:38 AM CDT,"#8
userWord = input(""Enter a word: "")
userWord = userWord.upper()

for letter in userWord:
    if letter in ""AEIOU"":
        continue
    print(letter)
   "
3Mrk3ugy,NAS simulation,sasBOI,Python,Friday 15th of December 2023 08:04:27 AM CDT,"import queue
import threading
import time
import random
import pandas as pd
import matplotlib.pyplot as plt


tau = 1.7  # Data exchange time
tau_plus = 50  # Head installation time upper bound
mu = 0.1  # Request generation rate
num_drives = 4  # Number of drives in the NAS
T = 1000

TRACKER = []


class LoadBalancer:
    def __init__(self, queue, stop_event):
        self.queue = queue
        self.drives = []
        self.threads = []
        self.drive_tracker = []
        self.stop_event = stop_event

    def add_drive(self, drive):
        self.drives.append(drive)

    def distribute_item(self):
        while not self.stop_event.is_set():
            for drive in self.drives:
                if not drive.is_busy():
                    if not self.queue.empty():
                        request = self.queue.get()
                        request[""distributed""] = drive.id
                        request[""distribute_time""] = time.time()
                        print(f""Distributed {request['id']} to drive {drive.id}\n"")
                        drive_thread = threading.Thread(target=drive.process_item, args=(request,))
                        drive_thread.start()
                        self.threads.append(drive_thread)
            time.sleep(0.00001)
            self.drive_tracker.append((time.time(), [drive.busy for drive in self.drives].count(True)))


class Producer:
    def __init__(self, queue, stop_event):
        self.queue = queue
        self.stop_event = stop_event

    def produce(self):
        time_tracker = 0
        item_num = 0
        while time_tracker < T / 1000:
            print(f""Generated request: {item_num} on time {time.time()}\n"",)
            inter_arrival_time = random.expovariate(mu) / 1000
            request = {""id"": item_num, ""generation"": time.time(), ""distributed"": None, ""distribute_time"": None, ""head_install_time"": None, ""data_exchange_time"": None, ""finished"": None}
            time_tracker += inter_arrival_time
            self.queue.put(request)
            item_num += 1
            time.sleep(inter_arrival_time)  # Simulate producing items
        self.stop_event.set()


class Drive:
    def __init__(self, load_balancer, id):
        self.load_balancer = load_balancer
        self.busy = False
        self.id = id
        self.requests = []

    def is_busy(self):
        return self.busy

    def process_item(self, request):
        self.busy = True
        head_install_time = random.uniform(0, tau_plus)
        print(f""Head instalation of {request['id']} on drive {self.id}\n"")
        t = time.time()
        time.sleep(head_install_time / 1000)  # Simulate processing time
        t = time.time() - t
        request['head_install_time'] = t
        print(f""Data exchange for {request['id']} on drive {self.id}\n"")
        t = time.time()
        time.sleep(tau / 1000)  # Simulate processing time
        t = time.time() - t
        request['data_exchange_time'] = t
        request['finished'] = time.time()
        print(f""Drive {self.id} finished processing request: {request['id']}\n"")
        self.requests.append(request)
        self.busy = False


def queue_tracker(queue, stop_event):
    global TRACKER
    TRACKER = []
    while not stop_event.is_set():
        TRACKER.append((time.time(), queue.qsize()))
        time.sleep(0.00001)


def main():
    q = queue.Queue()
    stop_event = threading.Event()
    lb = LoadBalancer(q, stop_event)
    producer = Producer(q, stop_event)

    REQUESTS = []

    drives = [Drive(lb, i) for i in range(num_drives)]
    for drive in drives:
        lb.add_drive(drive)

    producer_thread = threading.Thread(target=producer.produce)
    balancer_thread = threading.Thread(target=lb.distribute_item)
    queue_tracker_thread = threading.Thread(target=queue_tracker, args=(q, stop_event))

    producer_thread.start()
    balancer_thread.start()
    queue_tracker_thread.start()
    t = time.time()

    producer_thread.join()
    balancer_thread.join()
    t = time.time() - t

    for drive_thread in lb.threads:
        drive_thread.join()

    for drive in drives:
        for req in drive.requests:
            REQUESTS.append(req)

    df = pd.DataFrame.from_dict(REQUESTS)
    df.sort_values(by=['id'], inplace=True)

    plt.hist(df['distributed'], bins=num_drives)
    plt.subplots_adjust(left=0.08, right=0.99, top=0.95, bottom=0.095)
    plt.title(""Розподілення серед дисків"")
    plt.xlabel(""Номер диску"")
    plt.ylabel(""Частота користування"")
    plt.savefig(f""output/drive_distribute_{tau}_{tau_plus}_{mu}_{num_drives}.png"")

    plt.figure(figsize=(10, 6))
    plt.plot(df['id'], df['finished'] - df[""generation""])
    plt.subplots_adjust(left=0.07, right=0.99, top=0.95, bottom=0.095)
    plt.title(""Час відповіді"")
    plt.xlabel(""Запроси"")
    plt.ylabel(""Час"")
    plt.savefig(f""output/response_time_{tau}_{tau_plus}_{mu}_{num_drives}.png"")

    avr_resp = (df['finished'] - df[""generation""]).sum() / len(df)
    print(f""Avarage Response Time\t{avr_resp:.3f}"")

    plt.figure(figsize=(10, 6))
    plt.plot(df['id'], df['distribute_time'] - df[""generation""])
    plt.subplots_adjust(left=0.07, right=0.99, top=0.95, bottom=0.095)
    plt.title(""Час розподілення"")
    plt.xlabel(""Запроси"")
    plt.ylabel(""Час"")
    plt.savefig(f""output/distribute_time_{tau}_{tau_plus}_{mu}_{num_drives}.png"")

    avr_dist = (df['distribute_time'] - df[""generation""]).sum() / len(df)
    print(f""Avarage Distribute Time\t{avr_dist:.3f}"")

    throughput = len(df) / t
    print(f""Throughput\t{throughput:.3f}"")

    queue_tracker_thread.join()

    df_tracker = pd.DataFrame(TRACKER, columns=['time', 'queue_size'])
    plt.figure(figsize=(10, 6))
    plt.plot(df_tracker[""time""], df_tracker[""queue_size""])
    plt.subplots_adjust(left=0.07, right=0.99, top=0.95, bottom=0.095)
    plt.title(""Розмір черги"")
    plt.xlabel(""Час"")
    plt.ylabel(""Розмір"")
    plt.savefig(f""output/queue_size_{tau}_{tau_plus}_{mu}_{num_drives}.png"")

    avr_q = df_tracker[""queue_size""].sum() / len(df_tracker)
    print(f""Avarage Queue Size\t{avr_q:.3f}"")

    df_tracker2 = pd.DataFrame(lb.drive_tracker, columns=['time', 'count'])
    plt.figure(figsize=(10, 6))
    plt.plot(df_tracker2[""time""], df_tracker2[""count""])
    plt.subplots_adjust(left=0.07, right=0.99, top=0.95, bottom=0.095)
    plt.title(""Використання дисків"")
    plt.xlabel(""Заняті дисків"")
    plt.ylabel(""Час"")
    plt.savefig(f""output/drive_utiliztion_{tau}_{tau_plus}_{mu}_{num_drives}.png"")

    avr_du = df_tracker2[""count""].sum() / len(df_tracker2)
    print(f""Avarage Drive Utiliztion\t{avr_du:.3f}"")

    print(f""{avr_resp:.3f}\t{avr_dist:.3f}\t{throughput:.3f}\t{avr_q:.3f}\t{avr_du:.3f}"")


if __name__ == ""__main__"":
    main()"
eSH3K3KC,Request,Terminal1337,Go,Friday 15th of December 2023 07:44:13 AM CDT,"func request(count int) {

	var _version int
	var _fversion float32
	var headerClone *http.Header
	var options []tls_client.HttpClientOption

	// define request

	req, err := http.NewRequest(http.MethodGet, url, nil)
	if err != nil {
		return
	}
	Browser := browsers[rand.Intn(len(browsers))]
	switch Browser {

	case ""chrome"":
		_version = ChromeVersions[rand.Intn(len(ChromeVersions))]

		if profile, ok := ChromeProfileMap[_version]; ok {
			jar := tls_client.NewCookieJar()
			options = []tls_client.HttpClientOption{
				tls_client.WithTimeoutSeconds(30),
				tls_client.WithClientProfile(profile),
				tls_client.WithNotFollowRedirects(),
				tls_client.WithProxyUrl(""http://user:user@delta.proxiflare.com:47212""),
				tls_client.WithCookieJar(jar),
			}
			headerClone = &ChromeGlobalHeaders
		} else {
			fmt.Printf(""Profile for Firefox version %d not found\n"", _version)
			return
		}
	case ""firefox"":
		_version = FirefoxVersions[rand.Intn(len(FirefoxVersions))]

		if profile, ok := FireFoxProfileMap[_version]; ok {
			jar := tls_client.NewCookieJar()
			options = []tls_client.HttpClientOption{
				tls_client.WithTimeoutSeconds(30),
				tls_client.WithClientProfile(profile),
				tls_client.WithNotFollowRedirects(),
				tls_client.WithProxyUrl(""http://user:user@delta.proxiflare.com:47212""),
				tls_client.WithCookieJar(jar),
			}
			headerClone = &FirfoxGlobalHeaders

		} else {
			fmt.Printf(""Profile for Firefox version %d not found\n"", _version)
			return
		}

	case ""opera"":
		_version = OperaVersions[rand.Intn(len(OperaVersions))]

		if profile, ok := OperaProfileMap[_version]; ok {
			jar := tls_client.NewCookieJar()
			options = []tls_client.HttpClientOption{
				tls_client.WithTimeoutSeconds(30),
				tls_client.WithClientProfile(profile),
				tls_client.WithNotFollowRedirects(),
				tls_client.WithProxyUrl(""http://user:user@delta.proxiflare.com:47212""),
				// tls_client.WithRandomTLSExtensionOrder(),
				tls_client.WithCookieJar(jar),
			}
			headerClone = &OperaGlobalHeaders
		} else {
			fmt.Printf(""Profile for Firefox version %d not found\n"", _version)
			return
		}

	case ""apple"":
		_fversion = AppleVersions[rand.Intn(len(AppleVersions))]

		if profile, ok := AppleProfileMap[_fversion]; ok {
			jar := tls_client.NewCookieJar()
			options = []tls_client.HttpClientOption{
				tls_client.WithTimeoutSeconds(30),
				tls_client.WithClientProfile(profile),
				tls_client.WithNotFollowRedirects(),
				tls_client.WithProxyUrl(""http://user:user@delta.proxiflare.com:47212""),
				tls_client.WithCookieJar(jar),
			}
			headerClone = &AppleGlobalHeaders
		} else {
			fmt.Printf(""Profile for Firefox version %d not found\n"", _version)
			return
		}

	case ""android"":
		_version = AndroidVersions[rand.Intn(len(AndroidVersions))]

		if profile, ok := AndroidProfileMap[_version]; ok {
			jar := tls_client.NewCookieJar()
			options = []tls_client.HttpClientOption{
				tls_client.WithTimeoutSeconds(30),
				tls_client.WithClientProfile(profile),
				tls_client.WithNotFollowRedirects(),
				tls_client.WithProxyUrl(""http://user:user@delta.proxiflare.com:47212""),
				tls_client.WithCookieJar(jar),
			}
			headerClone = &AndroidGlobalheaders
		} else {
			fmt.Printf(""Profile for Firefox version %d not found\n"", _version)
			return
		}
	}
	// Randomize Headers
	headerClone.Set(RandString(16), RandString(32))
	headerClone.Set(RandString(8), RandString(32))
	headerClone.Set(""Cookie"", fmt.Sprintf(""%s=%s;"", RandString(16), RandString(32)))

	// Set Headers to Request
	req.Header = *headerClone

	// Build TLS Client
	client, err := tls_client.NewHttpClient(tls_client.NewNoopLogger(), options...)
	if err != nil {
		return
	}
	fmt.Println(""Initialized"", count)
	time.Sleep(5 * time.Second)
	for i := 0; i < 100; i++ {
		resp, err := client.Do(req)
		if err != nil {
			return
		}
		mu.Lock()
		statusStatistics[resp.StatusCode]++
		mu.Unlock()

	}

}"
nZTGVE0P,Untitled,pasholnahuy,C,Friday 15th of December 2023 07:37:27 AM CDT,"#include <stdbool.h>
#include <stdint.h>

typedef uint16_t FP16;

enum {
    FRAC_MASK = (1 << 10) - 1,
    EXP_MASK = ((1 << 5) - 1) << 10,
    SIGN_MASK = 1 << 15,
    FRAC_WIDTH = 10,
    FIXED_EXP = 24,
    EXP_WIDTH = 5,
    NAN = EXP_MASK + FRAC_MASK,
    CONST24 = 24
};

uint16_t is_nan(FP16 x) {
    if (x & EXP_MASK == EXP_MASK && (x & FRAC_MASK != 0)) {
        return 1;
    }
    return 0;
}

uint16_t is_inf(FP16 x) {
    if (x & EXP_MASK == EXP_MASK && (x & FRAC_MASK == 0)) {
        return 1;
    }
    return 0;
}

int64_t cast_fp16_to_fixed(FP16 x) {
    int64_t res;
    if (x & EXP_MASK) {
        res = (int64_t)(((1 << FRAC_WIDTH) | (x & FRAC_MASK)) << ((x & EXP_MASK) - 1));
    } else {
        res = x & FRAC_MASK;
    }
    if (x & SIGN_MASK) {
        res = -res;
    }
    return res;
}

FP16 cast_fixed_to_fp16(int64_t x) {
    if (x < 0) {
        x = -x;
    }
    if (x <= FRAC_MASK) {
        if (x < 0){
            return -x;
        }
        return x;
    }

    int exp = 1;
    while (x >= (1 << (FRAC_WIDTH + 2))) {
        x = x >> 1;
        ++exp;
    }
    if (x >= (1 << (FRAC_WIDTH + 1))) {
        ++x;
        while (x >= 1 << (FRAC_WIDTH + 1)) {
            x = x >> 1;
            ++exp;
        }
    }
    if (exp >= (1 << EXP_WIDTH) - 1) {
        if (x < 0) {
            return EXP_MASK | SIGN_MASK;
        }
        return EXP_MASK;
    }
    if (x < 0) {
        return SIGN_MASK || (exp << 10);
    }
    return (exp << 10) | (x & FRAC_MASK);
}

uint16_t fp16_mul2(uint16_t x) {
    if (is_nan(x) || is_inf(x)) {
        return x;
    }
    return cast_fixed_to_fp16(cast_fp16_to_fixed(x) << 1);
}

uint16_t fp16_div2(uint16_t x) {
    if (is_nan(x) || is_inf(x)) {
        return x;
    }
    return cast_fixed_to_fp16(cast_fp16_to_fixed(x) >> 1);
}

uint16_t fp16_neg(uint16_t x) {
    if (is_nan(x) || is_inf(x)) {
        return x;
    }
    return cast_fixed_to_fp16(-cast_fp16_to_fixed(x));
}

uint16_t fp16_add(uint16_t x, uint16_t y) {
    if ((is_nan(x) || is_inf(x)) || (is_inf(x) && is_inf(y))) {
            return NAN;
        }
    return cast_fixed_to_fp16(cast_fp16_to_fixed(x) + cast_fp16_to_fixed(x));
}

int fp16_cmp(uint16_t x, uint16_t y) {
    if (is_inf(x) && is_inf(y)) {
        if (x & SIGN_MASK && y & SIGN_MASK ||
            !(x & SIGN_MASK) && !(y & SIGN_MASK)) {
            return 0;
        } else if (x & SIGN_MASK && !(y & SIGN_MASK)) {
            return 1;
        } else if (x & SIGN_MASK && !(y & SIGN_MASK)) {
            return -1;
        }
    } else if (is_inf(x) && !is_inf(y)) {
        if (x & SIGN_MASK) {
            return -1;
        }
        return 1;
    } else if (!is_inf(x) && is_inf(y)) {
        if (y & SIGN_MASK) {
            return 1;
        }
        return -1;
    }
    if (cast_fp16_to_fixed(x) < cast_fp16_to_fixed(y)) {
        return -1;
    }
    if (cast_fp16_to_fixed(x) == cast_fp16_to_fixed(y)) {
        return 0;
    }
    return 1;
}

uint16_t fp16_cast(unsigned int x) {
    return cast_fixed_to_fp16((int64_t)x << CONST24);
}

#include <assert.h>
#include <stdint.h>

uint16_t fp16_cast(unsigned);
uint16_t fp16_mul2(uint16_t);
uint16_t fp16_div2(uint16_t);
uint16_t fp16_neg(uint16_t);
uint16_t fp16_add(uint16_t, uint16_t);
int fp16_cmp(uint16_t, uint16_t);

int main() {
    uint16_t x = fp16_cast(1);
    assert(x == 0b0011110000000000);
    uint16_t y = fp16_cast(2);
    assert(y == 0b0100000000000000);
    // uint64_t z = cast_fp16_to_fixed(y);
    // assert(z == 2);
    assert(fp16_div2(y) == x);
    assert(fp16_mul2(x) == y);
    assert(fp16_cmp(x, y) == -1);
    assert(fp16_cmp(y, x) == 1);
    assert(fp16_cmp(x, x) == 0);
    assert(fp16_cmp(fp16_neg(x), fp16_neg(y)) == 1);
    assert(fp16_cmp(fp16_neg(y), fp16_neg(x)) == -1);
    assert(fp16_cmp(0, fp16_neg(0)) == 0);

    uint16_t three = fp16_add(x, y);
    assert(three == 0b0100001000000000);

    uint16_t large = fp16_cast((1 << 16) - (1 << 4) - 1);
    uint16_t inf = fp16_mul2(large);
    assert(inf == 0b0111110000000000);
    assert(fp16_mul2(inf) == inf);
    assert(fp16_div2(inf) == inf);
    assert(fp16_cmp(large, inf) == -1);
    assert(fp16_cmp(fp16_neg(inf), large) == -1);
    assert(fp16_add(inf, fp16_neg(inf)) == fp16_add(fp16_neg(inf), inf));
    assert(fp16_add(fp16_neg(large), three) == fp16_neg(large));
    assert(fp16_add(large, fp16_cast(15)) == large);
    assert(fp16_add(large, fp16_cast(16)) == inf);

    uint16_t small = 0b0000000000000001;
    assert(fp16_cmp(small, small) == 0);
    assert(fp16_cmp(small, large) == -1);
    assert(fp16_cmp(large, small) == 1);
    assert(fp16_div2(small) == 0);
    assert(fp16_add(fp16_neg(small), x) == x);
    assert(fp16_mul2(small) == small << 1);

    uint16_t smallish = small << 9;
    assert(fp16_mul2(smallish) == 0b000001 << 10);
    assert(fp16_div2(fp16_mul2(smallish)) == smallish);
    assert(fp16_div2(smallish) == smallish >> 1);
}"
XW3hKcwT,Untitled,GASIM_,Python,Friday 15th of December 2023 07:13:48 AM CDT,"import numpy as np
import tensorflow as tf
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.layers import GlobalAveragePooling2D, Dense
from tensorflow.keras.models import Sequential
from tensorflow.keras.optimizers import Adam

def load_train(path):
    features_train = np.load(path + 'train_features.npy')
    target_train = np.load(path + 'train_target.npy')
    features_train = features_train.reshape(features_train.shape[0], 150, 150, 3) / 255.0
    return features_train, target_train

def create_model(input_shape):
    base_model = ResNet50(input_shape=input_shape, include_top=False, weights='/datasets/keras_models/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5')
    model = Sequential()
    model.add(base_model)
    model.add(GlobalAveragePooling2D())
    model.add(Dense(12, activation='softmax'))
    model.compile(optimizer=Adam(lr=0.0001), loss='categorical_crossentropy', metrics=['accuracy'])
    return model

def train_model(model, train_data, test_data, batch_size=16, epochs=3, steps_per_epoch=None, validation_steps=None):
    features_train, target_train = train_data
    features_test, target_test = test_data

    history = model.fit(
        features_train, target_train,
        batch_size=batch_size,
        epochs=epochs,
        steps_per_epoch=steps_per_epoch,
        validation_data=(features_test, target_test),
        validation_steps=validation_steps
    )

    return model"
pGeJ6cjK,aaaa,Ninhodedraga,JSON,Friday 15th of December 2023 06:36:13 AM CDT,"{
    ""author"":{
        ""name"":""Red - Ninho de Drag\u00e3o"",
        ""icon_url"":""https:\/\/i.imgur.com\/hKY8wwa.png"",
        ""proxy_icon_url"":""https:\/\/images-ext-1.discordapp.net\/external\/5E7J4hIP3p_pl-uuhJjvzFURDgUF_VEq-G7_A1WoMgM\/https\/i.imgur.com\/hKY8wwa.png""
    },
    ""fields"":[

    ],
    ""color"":16711680,
    ""type"":""rich"",
    ""description"":"":radio_button: **[Progress\u00e3o de personagem](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/994749378239664138)**\n:radio_button: **[Troca de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/994749397764153424)**\n:radio_button: **[Morte de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/994749423148085280)**\n:radio_button: **[Tier de Personagem](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/994749470141055016)**\n:radio_button: **[Limita\u00e7\u00e3o de Itens M\u00e1gicos por Miss\u00e3o](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/994749495055241216)**\n:radio_button: **[Limita\u00e7\u00e3o de Itens M\u00e1gicos por N\u00edvel](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/994749524457308221)**\n:radio_button: **[Segundo Personagem](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/994749560553480302)**\n:radio_button: **[Rebirth Lend\u00e1rio](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/994749700773249024)**\n:radio_button: **[Terceiro Personagem e Subsequentes](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/1125851930854428792)**\n:radio_button: **[Level Cap para Terceiro Personagem e Subsequentes](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/1125851930854428792)**\n:radio_button: **[Regras para o N\u00edvel 20](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/1125853025622306967)**\n:radio_button: **[Benef\u00edcios ao atingir o N\u00edvel 20](https:\/\/discord.com\/channels\/823562316317720638\/994749123079192667\/1125853025622306967)**"",
    ""title"":""\u25b6 Pro(re)gress\u00e3o de Personagens""
}"
Q5x2unQA,DMD,brandblox,Java,Friday 15th of December 2023 06:09:34 AM CDT,"class Phone {
    void showTime() {
        System.out.println(""Phone: Showing time"");
    }

    void on() {
        System.out.println(""Phone: Turning on"");
    }
}

class SmartPhone extends Phone {
    void music() {
        System.out.println(""SmartPhone: Playing music"");
    }

    @Override
    void on() {
        System.out.println(""SmartPhone: Turning on"");
    }
}

public class DynamicDemo {
    public static void main(String[] args) {
        // Dynamic method dispatch
        Phone phone1 = new Phone();
        Phone phone2 = new SmartPhone();

        phone1.showTime(); // Calls showTime from Phone class
        phone1.on();       // Calls on from Phone class

        phone2.showTime(); // Calls showTime from Phone class
        phone2.on();       // Calls on from SmartPhone class

        // Additional method specific to SmartPhone
        // phone2.music(); // This line will cause a compilation error

        // To use the music method, you need to declare the object as SmartPhone
        SmartPhone smartPhone = new SmartPhone();
        smartPhone.music(); // Calls music from SmartPhone class
    }
}
"
6W8cNhKz,data783,TestGuy1,JSON,Friday 15th of December 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '8e9668e6278c0bf4fddd79c2f7e157faae99062b28b2385abe30bba795e6bcf857184da09e0e8bc40c77bd9ad2e64406f01c478431e2561337b818ac55c2112168cf137aea66adbb73fc1e482be1e90dba1949bff892c9b2657c40c54a4c35164c90783388d49f276633ee05264982aff72379689b0f1abaf7b4b725efb88465',
  otherdata: [
    '8e8d32155bdd3a986c7dc2c2545ba539',
    '8030088e1933905b45590154f9f588a0',
    'a9dd05b53ad090c806d8bd6377abb6ad',
    'b34cf349d3a63704498632c6ef501a0a',
    '1b61044c7227345f7c5ec09fe449052e',
    'c9199e51e079db3f041d8f3ec5befe2f',
    'd7780b330cdefc6fb226c07f4aadc2e8',
    'cf590db844bc48e3cdf0af146303545b'
  ]
}"
xTn047Rz,Untitled,DeFeRoz,C,Friday 15th of December 2023 05:56:36 AM CDT,"#include <stdio.h>
#include <core/IO/io.h>

#include <stdarg.h>
#include <stdbool.h>

const unsigned SCREEN_WIDTH = 80;
const unsigned SCREEN_HEIGHT = 25;
const uint8_t DEFAULT_COLOR = 0x7;

uint8_t* g_ScreenBuffer = (uint8_t*)0xB8000;
int g_ScreenX = 0, g_ScreenY = 0;

void putchr(int x, int y, char c)
{
    g_ScreenBuffer[2 * (y * SCREEN_WIDTH + x)] = c;
}

void putcolor(int x, int y, uint8_t color)
{
    g_ScreenBuffer[2 * (y * SCREEN_WIDTH + x) + 1] = color;
}

char getchr(int x, int y)
{
    return g_ScreenBuffer[2 * (y * SCREEN_WIDTH + x)];
}

uint8_t getcolor(int x, int y)
{
    return g_ScreenBuffer[2 * (y * SCREEN_WIDTH + x) + 1];
}

void setcursor(int x, int y)
{
    int pos = y * SCREEN_WIDTH + x;

    i686_outb(0x3D4, 0x0F);
    i686_outb(0x3D5, (uint8_t)(pos & 0xFF));
    i686_outb(0x3D4, 0x0E);
    i686_outb(0x3D5, (uint8_t)((pos >> 8) & 0xFF));
}

void clrscr()
{
    for (int y = 0; y < SCREEN_HEIGHT; y++)
        for (int x = 0; x < SCREEN_WIDTH; x++)
        {
            putchr(x, y, '\0');
            putcolor(x, y, DEFAULT_COLOR);
        }

    g_ScreenX = 0;
    g_ScreenY = 0;
    setcursor(g_ScreenX, g_ScreenY);
}

void scrollback(int lines)
{
    for (int y = lines; y < SCREEN_HEIGHT; y++)
        for (int x = 0; x < SCREEN_WIDTH; x++)
        {
            putchr(x, y - lines, getchr(x, y));
            putcolor(x, y - lines, getcolor(x, y));
        }

    for (int y = SCREEN_HEIGHT - lines; y < SCREEN_HEIGHT; y++)
        for (int x = 0; x < SCREEN_WIDTH; x++)
        {
            putchr(x, y, '\0');
            putcolor(x, y, DEFAULT_COLOR);
        }

    g_ScreenY -= lines;
}

void putc(char c)
{
    switch (c)
    {
        case '\n':
            g_ScreenX = 0;
            g_ScreenY++;
            break;
    
        case '\t':
            for (int i = 0; i < 4 - (g_ScreenX % 4); i++)
                putc(' ');
            break;

        case '\r':
            g_ScreenX = 0;
            break;

        default:
            putchr(g_ScreenX, g_ScreenY, c);
            g_ScreenX++;
            break;
    }

    if (g_ScreenX >= SCREEN_WIDTH)
    {
        g_ScreenY++;
        g_ScreenX = 0;
    }
    if (g_ScreenY >= SCREEN_HEIGHT)
        scrollback(1);

    setcursor(g_ScreenX, g_ScreenY);
}

void puts(const char* str)
{
    while(*str)
    {
        putc(*str);
        str++;
    }
}

const char g_HexChars[] = ""0123456789abcdef"";

void printf_unsigned(unsigned long long number, int radix)
{
    char buffer[32];
    int pos = 0;

    // convert number to ASCII
    do 
    {
        unsigned long long rem = number % radix;
        number /= radix;
        buffer[pos++] = g_HexChars[rem];
    } while (number > 0);

    // print number in reverse order
    while (--pos >= 0)
        putc(buffer[pos]);
}

void printf_signed(long long number, int radix)
{
    if (number < 0)
    {
        putc('-');
        printf_unsigned(-number, radix);
    }
    else printf_unsigned(number, radix);
}

#define PRINTF_STATE_NORMAL         0
#define PRINTF_STATE_LENGTH         1
#define PRINTF_STATE_LENGTH_SHORT   2
#define PRINTF_STATE_LENGTH_LONG    3
#define PRINTF_STATE_SPEC           4

#define PRINTF_LENGTH_DEFAULT       0
#define PRINTF_LENGTH_SHORT_SHORT   1
#define PRINTF_LENGTH_SHORT         2
#define PRINTF_LENGTH_LONG          3
#define PRINTF_LENGTH_LONG_LONG     4

void printf(const char* fmt, ...)
{
    va_list args;
    va_start(args, fmt);

    int state = PRINTF_STATE_NORMAL;
    int length = PRINTF_LENGTH_DEFAULT;
    int radix = 10;
    bool sign = false;
    bool number = false;

    while (*fmt)
    {
        switch (state)
        {
            case PRINTF_STATE_NORMAL:
                switch (*fmt)
                {
                    case '%':   state = PRINTF_STATE_LENGTH;
                                break;
                    default:    putc(*fmt);
                                break;
                }
                break;

            case PRINTF_STATE_LENGTH:
                switch (*fmt)
                {
                    case 'h':   length = PRINTF_LENGTH_SHORT;
                                state = PRINTF_STATE_LENGTH_SHORT;
                                break;
                    case 'l':   length = PRINTF_LENGTH_LONG;
                                state = PRINTF_STATE_LENGTH_LONG;
                                break;
                    default:    goto PRINTF_STATE_SPEC_;
                }
                break;

            case PRINTF_STATE_LENGTH_SHORT:
                if (*fmt == 'h')
                {
                    length = PRINTF_LENGTH_SHORT_SHORT;
                    state = PRINTF_STATE_SPEC;
                }
                else goto PRINTF_STATE_SPEC_;
                break;

            case PRINTF_STATE_LENGTH_LONG:
                if (*fmt == 'l')
                {
                    length = PRINTF_LENGTH_LONG_LONG;
                    state = PRINTF_STATE_SPEC;
                }
                else goto PRINTF_STATE_SPEC_;
                break;

            case PRINTF_STATE_SPEC:
            PRINTF_STATE_SPEC_:
                switch (*fmt)
                {
                    case 'c':   putc((char)va_arg(args, int));
                                break;

                    case 's':   
                                puts(va_arg(args, const char*));
                                break;

                    case '%':   putc('%');
                                break;

                    case 'd':
                    case 'i':   radix = 10; sign = true; number = true;
                                break;

                    case 'u':   radix = 10; sign = false; number = true;
                                break;

                    case 'X':
                    case 'x':
                    case 'p':   radix = 16; sign = false; number = true;
                                break;

                    case 'o':   radix = 8; sign = false; number = true;
                                break;

                    // ignore invalid spec
                    default:    break;
                }

                if (number)
                {
                    if (sign)
                    {
                        switch (length)
                        {
                        case PRINTF_LENGTH_SHORT_SHORT:
                        case PRINTF_LENGTH_SHORT:
                        case PRINTF_LENGTH_DEFAULT:     printf_signed(va_arg(args, int), radix);
                                                        break;

                        case PRINTF_LENGTH_LONG:        printf_signed(va_arg(args, long), radix);
                                                        break;

                        case PRINTF_LENGTH_LONG_LONG:   printf_signed(va_arg(args, long long), radix);
                                                        break;
                        }
                    }
                    else
                    {
                        switch (length)
                        {
                        case PRINTF_LENGTH_SHORT_SHORT:
                        case PRINTF_LENGTH_SHORT:
                        case PRINTF_LENGTH_DEFAULT:     printf_unsigned(va_arg(args, unsigned int), radix);
                                                        break;
                                                        
                        case PRINTF_LENGTH_LONG:        printf_unsigned(va_arg(args, unsigned  long), radix);
                                                        break;

                        case PRINTF_LENGTH_LONG_LONG:   printf_unsigned(va_arg(args, unsigned  long long), radix);
                                                        break;
                        }
                    }
                }

                // reset state
                state = PRINTF_STATE_NORMAL;
                length = PRINTF_LENGTH_DEFAULT;
                radix = 10;
                sign = false;
                number = false;
                break;
        }

        fmt++;
    }

    va_end(args);
}

void print_buffer(const char* msg, const void* buffer, uint32_t count)
{
    const uint8_t* u8Buffer = (const uint8_t*)buffer;
    
    puts(msg);
    for (uint16_t i = 0; i < count; i++)
    {
        putc(g_HexChars[u8Buffer[i] >> 4]);
        putc(g_HexChars[u8Buffer[i] & 0xF]);
    }
    puts(""\n"");
}
"
FNzXTj1N,Untitled,mdigetcake,Lua,Friday 15th of December 2023 05:40:24 AM CDT,"local Item = peripheral.find(""inventory"")
local monitor= peripheral.find(""monitor"")

while(true)do
    Lamp=Item.getItemDetail(1)
    monitor.write(tostring(1600-Lamp.damage))
	os.sleep(10)
	monitor.clear()
end"
qd2tUbrK,dijkstra,mint21,C++,Friday 15th of December 2023 05:18:48 AM CDT,"#include<bits/stdc++.h>
using namespace std;

struct krawedz
{
    int w2;
    int waga;
};
vector<vector<krawedz>> Graf;
vector<bool> Odwiedzone;
vector<int> Koszt;
krawedz kraw;

void Czytaj()
{
    int n, m, w1, w2, waga1;
    ifstream fin(""graf.txt"");
    fin >> n >> m;
    Graf.resize(n);

    for(int i=0; i<m; i++)
    {
        fin >> w1 >> w2 >> waga1;
        kraw.w2 = w2;
        kraw.waga = waga1;
        Graf[w1].push_back(kraw);
    }
    fin.close();
}

void Wypisz()
{
    for(int i=0; i<Graf.size(); i++)
    {
        cout << i << "": "";
        for(int j=0; j<Graf[i].size(); j++)
            cout << ""["" << Graf[i][j].w2 << "","" << Graf[i][j].waga << ""] "";
        cout << endl;
    }
}

void Dijkstra(int pocz)
{
    int k, w1;
    vector<bool> Odwiedzone;
    Odwiedzone.resize(Graf.size(), false);
    Koszt[pocz] =0;
    for(int i=0; i<Graf.size()-1; i++)
    {
        k=0;
        while(Odwiedzone[k])
            k++;
        w1=k;
        for(int j = k+1; j< Graf.size(); j++)
            if(!Odwiedzone[j]&& Koszt[j] < Koszt[w1])
            w1 = j;
        Odwiedzone[w1] =true;
        for(int j=0; j<Graf[w1].size(); j++)
        {
            kraw = Graf[w1][j];
            if(!Odwiedzone[kraw.w2]&& Koszt[w1]+kraw.waga < Koszt[kraw.w2])
                Koszt[kraw.w2] = Koszt[w1] + kraw.waga;
        }
    }
}
int main()
{
    Czytaj();
    Wypisz();
    Koszt.resize(Graf.size(), 1000);
    int pocz;
    cout << ""Numer wiercholka poczatkowego:"";
    cin >> pocz;
    Dijkstra(pocz);
    cout << ""Koszt dojscia z wierzcholka "" << pocz << "" do wierzcholka:"" << endl;
    for(int i=0; i<Graf.size(); i++)
        if(i!=pocz)
        cout << i << "": "" << Koszt[i] << endl;
}
"
cBzwh2C4,vlktut main.cpp as of 2023-12-15,Kitomas,C++,Friday 15th of December 2023 04:42:32 AM CDT,"#include <libxmp-lite/xmp.h>
#define SDL_MAIN_HANDLED
#include <SDL2/SDL.h>
#include <SDL2/SDL_vulkan.h> //why isn't this included inside SDL.h?
#include <glm/glm.hpp>
#include <vulkan/vulkan.h>

#include <iostream>
#include <stdexcept>
#include <cstdlib>

#include <vk/vk_all.hpp>
#include <sfx.hpp>
#include <file.hpp>


class HelloTriangleApplication {
public:
  void run(Uint32 winW = 640, Uint32 winH = 480){
    _initWindow(winW, winH);
    _initVulkan();
    _mainLoop();
    _cleanup();
  }


private:
  SDL_Window* _window = nullptr;
  Uint32 _windowID = 0;

  VkInstance _instance = nullptr;


  void _createInstance(){
    VkApplicationInfo appInfo{};
    appInfo.sType              = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    appInfo.pApplicationName   = ""cool triangle"";
    appInfo.applicationVersion = VK_MAKE_VERSION(1,0,0);
    appInfo.pEngineName        = ""No Engine"";
    appInfo.engineVersion      = VK_MAKE_VERSION(1,0,0);
    appInfo.apiVersion         = VK_API_VERSION_1_0;


    bool success;  VkResult result;

    Uint32 extensionsReq_len = 0; //# of required extensions
    success = SDL_Vulkan_GetInstanceExtensions(_window, &extensionsReq_len, nullptr);
    if(!success) throw SDL_GetError();
    std::vector<const char*> extensionsReq(extensionsReq_len);
    success = SDL_Vulkan_GetInstanceExtensions(_window, &extensionsReq_len, extensionsReq.data());
    if(!success) throw SDL_GetError();

    Uint32 extensionsHas_len = 0; //# of available extensions
    result = vkEnumerateInstanceExtensionProperties(nullptr, &extensionsHas_len, nullptr);
    if(result != VK_SUCCESS) throw ""vkEnumerateInstanceExtensionProperties() failed"";
    std::vector<VkExtensionProperties> extensionsHas(extensionsHas_len);
    result = vkEnumerateInstanceExtensionProperties(nullptr, &extensionsHas_len, extensionsHas.data());
    if(result != VK_SUCCESS) throw ""vkEnumerateInstanceExtensionProperties() failed"";
/*
    Uint32 extensionsWant_len = 0; //# of desired extensions
    //extensionsWant cannot be larger than extensionsHas
    std::vector<char[VK_MAX_EXTENSION_NAME_SIZE]> extensionsWant(extensionsHas_len);
    for(Uint32 i=0; i<extensionsReq_len; ++i){
      extensionsWant[extensionsWant_len++] = ""aaaa"";
    }
*/


    SDL_Log(""# of required extensions = %u:"",extensionsReq_len);
    for(Uint32 i=0; i<extensionsReq_len; ++i){
      SDL_Log(""  %u: \""%s\"""",i,extensionsReq[i]);
    }

    SDL_Log(""\n# of available extensions = %u:"",extensionsHas_len);
    for(Uint32 i=0; i<extensionsHas_len; ++i){
      SDL_Log(""  %2u: \""%s\"" (%u)"",i,extensionsHas[i].extensionName,extensionsHas[i].specVersion);
    }


    VkInstanceCreateInfo createInfo{};
    createInfo.sType                   = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    createInfo.pApplicationInfo        = &appInfo;
    createInfo.enabledLayerCount       = 0; //TBD
    //createInfo.enabledExtensionCount   = extensions_len;
    //createInfo.ppEnabledExtensionNames = extensions.data();

    result = vkCreateInstance(&createInfo, nullptr, &_instance);
    if(result == VK_ERROR_EXTENSION_NOT_PRESENT) throw ""vkCreateInstance() = VK_ERROR_EXTENSION_NOT_PRESENT"";
    if(result != VK_SUCCESS) throw ""vkCreateInstance() failed"";
  }


  void _initWindow(Uint32 winW = 640, Uint32 winH = 480){
    _window = SDL_CreateWindow(""a cool triangle"",
                               SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED,
                               winW, winH, SDL_WINDOW_VULKAN);
    if(_window == nullptr) throw SDL_GetError();
    _windowID = SDL_GetWindowID(_window);
    if(_windowID == 0) throw SDL_GetError();
  }


  void _initVulkan(){
    _createInstance();
  }


  void _mainLoop(){
    bool running = true;
    SDL_Event event;

    while(running){
      while(SDL_PollEvent(&event) && running){
        switch(event.type){
        case SDL_WINDOWEVENT:
          //the window id isn't checked here, so it could theoretically
           //be another window entirely lol
          if(event.window.event == SDL_WINDOWEVENT_CLOSE) running = false;
        }
      }
      SDL_Delay(16);
    }
  }


  void _cleanup(){
    vkDestroyInstance(_instance, nullptr);
    _instance = nullptr;
    if(_window != nullptr){
      SDL_DestroyWindow(_window);
      _window = nullptr;
    }
  }
};



#define M_2PI (3.1415927f*2)
float get_sin(float hertz = 440, int increment = 1){
  static int index = 0;
  float value = SDL_sinf( ((float)index/44100)*M_2PI*hertz );
  index += increment;
  return value;
}

//(t>>4)*(t>>3)|t>>2
float get_sample(){
  static int _t = 0;
  int t = _t * (8000.0f/44100);

  //Uint8 _value = t*(t&16384?6:5)*(4-(1&t>>8))>>(3&t>>9)|t>>(t&4096?3:4);
  Uint8 _value = t<<2^t>>4^t<<4&t>>8|t<<1&-t>>4;
  float value = _sfx_u8conv(_value);

  ++_t;
  return value;
}


void auxCallback(void* userdata, void* _stream, int size){
  int       len = size/sizeof(float);
  float* stream = (float*)_stream;
  for(int i=0; i<len; ++i){
    //stream[i] = get_sin()*0.25f;
    stream[i] = get_sample()*0.25f;

  }
}




int main(int argc, char** argv){
  if(SDL_Init(SDL_INIT_VIDEO|SDL_INIT_AUDIO)) return -1;
/*
  //wip vulkan stuff; ignore
  HelloTriangleApplication app;
  try {
    app.run();
  } catch(const std::exception& e){
    std::cerr << e.what() << std::endl;
    return EXIT_FAILURE;
  } catch(const char* e){
    std::cout << ""error = "" << e << std::endl;
    return EXIT_FAILURE;
  }
*/

  try {
    sfx_class sfx(64); //a maximum of 64 tracks that can play simultaneously
    sfx.setAux(auxCallback, nullptr, AUDIO_F32, 1);
    sfx_pcm loop1(""dat/UNX - LSDLOOP1.kpm"",&sfx); //load sound effect

    sfx.pauseDeviceAndWait(false); //unpause device, and wait for fade-in

    loop1.loopCount = 2; //play 1 + 2 times for a total of 3
    //loop1.play(); //alias for sfx.play(loop1) basically
    SDL_Delay(8000);
    //sfx.waitForTracks(0); //wait for all tracks to stop, with an indefinite timeout

    sfx.pauseDeviceAndWait(true); //pause device, and wait for fade-out

  } catch(const char* e){
    std::cout << ""error = "" << e << std::endl;
    return EXIT_FAILURE;
  }

  SDL_Quit();
  return EXIT_SUCCESS;
}
"
w1Q2GCkb,sfx_callback.cpp as of 2023-12-15,Kitomas,C++,Friday 15th of December 2023 04:35:03 AM CDT,"#include ""_sfx.hpp""




int _sfx_auxCallbackHandler(void* data){
  sfx_class* sfx = (sfx_class*)data;
  std::vector<char>* _stream = sfx->_getAuxStream();

  sfx_auxCallback callback = sfx->getAuxCallback();
  void*           userdata = sfx->_getAuxUserdata();
  void*       _stream_data = (void*)_stream->data();
  int         _stream_size = (int)_stream->size();

  callback(userdata, _stream_data, _stream_size);

  return 0;
}



//workaround for having _sfx_callback pause the device,
 //without having to call SDL_PauseAudioDevice inside the callback itself
int _sfx_pauseThread(void* data){
  sfx_class* sfx = (sfx_class*)data;
  if(sfx->isClosing()) return 0;
  sfx->lockDevice(true);

  //might cause problems if sfx is dangling for whatever reason
  try {
    sfx->lock(true);
  } catch(...){
    sfx->lockDevice(false);
    sfx->_getFadeInDelay() = 0xffffffff; //this should work, right?
    return -1;
  }

  //make sure current buffer finishes playing
  float bufferLengthSeconds = (float)sfx->getBufferLength() / sfx->getSampleRate();
  SDL_Delay(bufferLengthSeconds*1000 + 10); //+10ms just to be sure

  SDL_PauseAudioDevice(sfx->getDeviceID(),1);
  sfx->_setPlaying(false);

  sfx->lockDevice(false);
  sfx->lock(false);
  return 0;
}



void _sfx_callback(void* userdata, Uint8* _stream, int size){
  sfx_class*   sfx = (sfx_class*)userdata;
  sfx_f32s* stream = (sfx_f32s*)_stream;
  int          len = size/sizeof(sfx_f32s);

  size_t numTracks = sfx->getNumTracks();
  std::vector<sfx_track>& tracks = sfx->_getTracks();
  Uint64 timeStampEnd = sfx->getTimeStampEnd();
  SDL_Thread* auxCallbackThread = nullptr;

  sfx->_setTimeStampStart();
  SDL_memset(stream,0,size); //stream must be filled no matter what
  if(sfx->isClosing()) goto _skip_everything_; //if device is closing, exit early

  //if previous attempt to pause sfx failed, exit early
  try {
    sfx->lock(true);
  } catch(...){
    sfx->_getFadeInDelay() = 0xffffffff;
    goto _skip_everything_;
  }
  if(sfx->_getFadeInDelay() == 0xffffffff) goto _unlock_device_;
  if(sfx->_getTracksPtr() == nullptr) goto _unlock_device_;


  //start auxillary callback handler thread, if aux callback is present
  if(sfx->getAuxCallback() != nullptr){
    auxCallbackThread = SDL_CreateThread(_sfx_auxCallbackHandler, ""auxCH_Th"", sfx);
    //if(auxCallbackThread == nullptr) SDL_LogError()
  }


  //mix sound effect tracks
  for(size_t ti=0; ti<numTracks; ++ti){
    if(tracks[ti].pcm != nullptr){
      _sfx_mixTrack(tracks[ti],
                    timeStampEnd,
                    stream, len);
    }
  }


  //wait for auxCallbackThread to finish
   //(passing auxCallbackThread as nullptr is safe here)
  SDL_WaitThread(auxCallbackThread, nullptr);

  //mix output of auxillary callback, if enabled
  if(auxCallbackThread != nullptr){
    std::vector<char>* auxStream   = sfx->_getAuxStream();
    SDL_AudioFormat    auxFormat   = sfx->getAuxFormat();
    Uint16             auxChannels = sfx->getAuxChannels();

    if(auxStream != nullptr){
      _every_sample_type auxSmp = { .data = auxStream->data() };
      if(( auxStream->size()/((auxFormat&255)/8)/auxChannels ) == (unsigned)len){
        switch(_FORMAT_SWITCH(auxChannels,auxFormat)){ //convert format and data type when mixing
        case fmt_u8  : for(int i=0; i<len; ++i) stream[i] += auxSmp.u8  [i];  break;
        case fmt_i16 : for(int i=0; i<len; ++i) stream[i] += auxSmp.i16 [i];  break;
        case fmt_f32 : for(int i=0; i<len; ++i) stream[i] += auxSmp.f32 [i];  break;
        case fmt_u8s : for(int i=0; i<len; ++i) stream[i] += auxSmp.u8s [i];  break;
        case fmt_i16s: for(int i=0; i<len; ++i) stream[i] += auxSmp.i16s[i];  break;
        case fmt_f32s: for(int i=0; i<len; ++i) stream[i] += auxSmp.f32s[i];  break;
        default: ;//SDL_LogError();
        }

      } //else SDL_LogError();
    } //else SDL_LogError();
  }


  //apply linear fade to reduce popping when pausing and unpausing the device
   //(also apply global volume, hard clipping, and pan)
  _sfx_globalFade(sfx, stream, len);

  _unlock_device_  : try { sfx->lock(false); } catch(...){} //just in case
  _skip_everything_: sfx->_setTimeStampEnd();
}

"
yg4eyvtk,sfx_pcm.cpp as of 2023-12-15,Kitomas,C++,Friday 15th of December 2023 04:33:35 AM CDT,"#include ""_sfx.hpp""
#include <file.hpp>




sfx_pcm::sfx_pcm(const std::string& filePath,
                 const sfx_class* sfx_ptr)
{
  int deviceSampleRate = DEFAULT_SAMPLERATE;
  if(sfx_ptr != nullptr) deviceSampleRate = sfx_ptr->getSampleRate();
  if(deviceSampleRate < 1000) throw ""sfx_ptr->_sampleRate < 1000"";
  if(deviceSampleRate > 384000) throw ""sfx_ptr->_sampleRate > 384000"";

  //load pcm data
  std::vector<char> fileDataIn = file_readBin(filePath);
  if(fileDataIn.size() < sizeof(sfx_pcm)) throw ""fileSize < sizeof(sfx_pcm)"";

  //header validation stuff
  sfx_pcm* hdr = (sfx_pcm*)fileDataIn.data();
  //hdr->print(); //for debug

  if(hdr->magic != SFX_PCM_MAGIC) throw ""magic != SFX_PCM_MAGIC"";
  if(_format_invalid(hdr->format)) throw ""format is invalid"";
  if(hdr->headerSize < sizeof(sfx_pcm)) throw ""headerSize < sizeof(sfx_pcm)"";
  if(hdr->dataSize != (fileDataIn.size()-hdr->headerSize)) throw ""dataSize is invalid"";
  //(numSamples is checked before loopStart/loopEnd, as their checks rely upon numSamples)
  if(hdr->numSamples != (hdr->dataSize/((hdr->format&255)/8))/hdr->channels) throw ""numSamples is invalid"";
  if(hdr->loopStart >= hdr->numSamples) throw ""loopStart >= numSamples"";
  if(hdr->loopEnd > hdr->numSamples) throw ""loopEnd > numSamples"";
  //(channels are checked before numSamples to prevent divide-by-zero exceptions)
  if(hdr->channels!=1 && hdr->channels!=2) throw ""audio is neither mono nor stereo"";
  if(hdr->sampleRate < 1000) throw ""sampleRate < 1000"";
  if(hdr->bitRate != hdr->sampleRate*hdr->channels*(hdr->format&255)) throw ""bitRate is invalid"";
  void* smpData = fileDataIn.data() + hdr->headerSize;


  //convert data type to float stereo
  Uint64 numSamplesIn = hdr->numSamples;
  std::vector<sfx_f32s> samplesF32S(numSamplesIn);
  _every_sample_type smp = { .data = smpData };

  switch(_FORMAT_SWITCH(hdr->channels,hdr->format)){
  case fmt_u8  : for(Uint64 i=0; i<numSamplesIn; ++i) samplesF32S[i] = smp.u8  [i];  break;
  case fmt_i16 : for(Uint64 i=0; i<numSamplesIn; ++i) samplesF32S[i] = smp.i16 [i];  break;
  case fmt_f32 : for(Uint64 i=0; i<numSamplesIn; ++i) samplesF32S[i] = smp.f32 [i];  break;
  case fmt_u8s : for(Uint64 i=0; i<numSamplesIn; ++i) samplesF32S[i] = smp.u8s [i];  break;
  case fmt_i16s: for(Uint64 i=0; i<numSamplesIn; ++i) samplesF32S[i] = smp.i16s[i];  break;
  case fmt_f32s: for(Uint64 i=0; i<numSamplesIn; ++i) samplesF32S[i] = smp.f32s[i];  break;
  default: throw ""channels/format is invalid (this exception should be impossible)"";
  }


  //set relevant header values
  *this    = *hdr;
  magic    = 0;
  format   = AUDIO_F32;
  channels = 2;
  sfx      = (sfx_class*)sfx_ptr;
  //--------------------------------------------------------
  double inRatio = (double)hdr->sampleRate/deviceSampleRate;
  numSamples = ( ((double)hdr->numSamples)/inRatio ) + 0.5;
  loopStart  = ( ((double)hdr->loopStart )/inRatio ) + 0.5;
  loopEnd    = ( ((double)hdr->loopEnd   )/inRatio ) + 0.5;
  dataSize   = numSamples * sizeof(sfx_f32s);
  sampleRate = deviceSampleRate;
  bitRate    = deviceSampleRate * sizeof(sfx_f32s) * 8;
  loopCount  = hdr->loopCount;

  if(numSamples == 0) throw ""output's numSamples was equal to 0"";
  samples = new std::vector<sfx_f32s>(numSamples);
  std::vector<sfx_f32s>& samplesRef = *samples; //reference to output samples


  //do linear sample rate conversion, with a target of deviceSampleRate
  --numSamplesIn; // = highest element index of input samples
  Uint64 numSamplesOut = numSamples - 1; // = highest element index of output samples
  double inPosition = 0,  inSpeed = (double)numSamplesIn/numSamplesOut;
  if(inSpeed <= 0) throw ""sample rate conversion delta <= 0""; //just in case

  for(Uint64 i=0; i<numSamplesOut; ++i){
    samplesRef[i] = sfx_linearSample(samplesF32S, inPosition);
    inPosition += inSpeed;
  }

  //handle last sample separately to (hopefully) account for any previous rounding errors
  samplesRef[numSamplesOut] = samplesF32S.at(numSamplesIn);


  magic = SFX_PCM_MAGIC; //signature is set properly to indicate success
}




void sfx_pcm::print(const size_t samplesToPrint){
  SDL_Log(""magic        = \""%.4s\"" (0x%08X)"", (char*)&magic, magic);
  switch(format){
  case AUDIO_U8 : SDL_Log(""format       = AUDIO_U8 (0x%04X)"",  format); break;
  case AUDIO_S16: SDL_Log(""format       = AUDIO_S16 (0x%04X)"", format); break;
  case AUDIO_F32: SDL_Log(""format       = AUDIO_F32 (0x%04X)"", format); break;
  default:        SDL_Log(""format       = UNKNOWN (0x%04X)"",   format); }
  SDL_Log(""headerSize   = %u"", headerSize);
  SDL_Log(""dataSize     = %u"", (unsigned)dataSize); //overflows if dataSize > 4GB

  SDL_Log(""loopStart    = %u"", (unsigned)loopStart);
  SDL_Log(""loopEnd      = %u"", (unsigned)loopEnd);

  SDL_Log(""numSamples   = %u"", (unsigned)numSamples);
  SDL_Log(""sampleRate   = %u"", sampleRate);
  SDL_Log(""bitrate      = %u"", bitRate);

  SDL_Log(""loopCount    = %u"", loopCount);
  SDL_Log(""channels     = %u"", channels);
  SDL_Log(""bitRemainder = %u"", bitRemainder);
  SDL_Log(""userflags    = 0x%02X"", userflags);
  SDL_Log(""mode         = %u"", mode);

  if(samplesToPrint > 0){
    if(format!=AUDIO_F32 || channels!=2) throw ""data type is not f32s"";
    Uint64 sampleRange = std::min(samplesToPrint, numSamples);
    std::vector<sfx_f32s>& samplesRef = *samples;

    for(Uint32 i=0; i<sampleRange; ++i)
      SDL_Log(""%4u: %7.4f, %7.4f"", i, samplesRef.at(i).l,samplesRef.at(i).r);
  }
}
"
LYpnXGge,sfx.hpp as of 2023-12-15,Kitomas,C++,Friday 15th of December 2023 04:32:42 AM CDT,"#pragma once

#include <SDL2/SDL.h>

#include <algorithm>
#include <string>
#include <vector>


#define DEFAULT_SAMPLERATE (44100)
#define DEFAULT_BITRATE    (DEFAULT_SAMPLERATE*sizeof(sfx_f32s)*8)
#define DEFAULT_BUFFERLEN (2048)




/*******/
/* sfx */
/*******/

extern const float _sfx_i8inv;  // = 1/2^7
extern const float _sfx_i16inv; // = 1/2^15

//for converting i8/i16 to f32
#define _sfx_u8conv(_v)  ( (float)((Sint8)((_v)-128)) * _sfx_i8inv  )
#define _sfx_i16conv(_v) ( (float)(        (_v)     ) * _sfx_i16inv )



struct sfx_u8s  {
  Uint8  l,r;
  sfx_u8s() : l(0), r(0) {}
  sfx_u8s(const Uint8 _l, const Uint8 _r) : l(_l), r(_r) {}
};

struct sfx_i16s {
  Sint16 l,r;
  sfx_i16s() : l(0), r(0) {}
  sfx_i16s(const Sint16 _l, const Sint16 _r) : l(_l), r(_r) {}
};

struct sfx_f32s {
  float l,r;
  sfx_f32s() : l(0), r(0) {}
  sfx_f32s(const float& _l, const float& _r) : l(_l), r(_r) {}
  sfx_f32s(const int&    _v) : l(_v), r(_v) {}
  sfx_f32s(const double& _v) : l(_v), r(_v) {}

  sfx_f32s(const Uint8&  smp){ l = _sfx_u8conv( smp);  r = _sfx_u8conv( smp); }
  sfx_f32s(const Sint16& smp){ l = _sfx_i16conv(smp);  r = _sfx_i16conv(smp); }
  sfx_f32s(const float& smp){ l = smp;  r = smp; }

  sfx_f32s(const sfx_u8s&  smp){ l = _sfx_u8conv( smp.l);  r = _sfx_u8conv( smp.r); }
  sfx_f32s(const sfx_i16s& smp){ l = _sfx_i16conv(smp.l);  r = _sfx_i16conv(smp.r); }
  sfx_f32s(const sfx_f32s& smp){ l = smp.l;  r = smp.r; }


  sfx_f32s& operator+=(const Uint8&  smp){ l += _sfx_u8conv( smp);  r += _sfx_u8conv( smp);  return *this; }
  sfx_f32s& operator+=(const Sint16& smp){ l += _sfx_i16conv(smp);  r += _sfx_i16conv(smp);  return *this; }
  sfx_f32s& operator+=(const float&  smp){ l += smp;                r += smp;                return *this; }

  sfx_f32s& operator+=(const sfx_u8s&  smp){ l += _sfx_u8conv( smp.l);  r += _sfx_u8conv( smp.r);  return *this; }
  sfx_f32s& operator+=(const sfx_i16s& smp){ l += _sfx_i16conv(smp.l);  r += _sfx_i16conv(smp.r);  return *this; }

  sfx_f32s& operator+=(const sfx_f32s& smp){ l += smp.l;  r += smp.r;  return *this; }
  sfx_f32s& operator-=(const sfx_f32s& smp){ l -= smp.l;  r -= smp.r;  return *this; }
  sfx_f32s& operator*=(const sfx_f32s& smp){ l *= smp.l;  r *= smp.r;  return *this; }


  sfx_f32s& clip(){ l = std::clamp(l, -1.0f,1.0f);  r = std::clamp(r, -1.0f,1.0f);  return *this; }
  sfx_f32s& unit(){ l = std::clamp(l,  0.0f,1.0f);  r = std::clamp(r,  0.0f,1.0f);  return *this; }
};




/*************/
/* sfx_class */
/*************/

typedef void (SDLCALL * sfx_auxCallback) (void* userdata, void* _stream, int size);

struct sfx_pcm; //forward declaration

struct sfx_track { //64B
  sfx_pcm*         pcm = nullptr; //audio data; track considered available/inactive if nullptr
  Uint64     timeStamp; //result of SDL_GetTicks64() called at time of queueing an audio clip

  double      position; //sample position, including fraction
  double         speed; //what amount to increase position by every sample
  double    speedDelta; //what number to apply to speed every sample

  sfx_f32s      volume; //left and right channel volumes; 0.0f -> 1.0f
  sfx_f32s volumeDelta; //determines the rate at which volume changes each sample
  float            pan; //the current pan of the track; -1.0f -> 1.0f (should be applied AFTER volume)

  Uint16         loops; //number of times to loop before deactivating clip (-1 for endless loop)
  bool      stopOnMute = true; //'deactivate track when volume or speed reaches 0?'
  bool        stopping = false; //used inside _sfx_mixTrack
};



class sfx_class { //???B
  bool                 _valid = false;
  bool               _closing = false;
  bool               _fadeOut = false;
  bool               _playing = false;
  SDL_AudioDeviceID _deviceID = 0;

  Uint64 _timeStampStart = 0;
  Uint64   _timeStampEnd = 0;

  std::vector<sfx_track>* _tracks = nullptr;
  SDL_mutex*                _lock = nullptr;

  sfx_f32s    _volume = 1.0f;
  float          _pan = 1.0f;

  Uint32 _fadeInDelay = 0;
  float  _fadeDelta   = 0;
  float  _fadeVolume  = 0;

  Uint32      _sampleRate = DEFAULT_SAMPLERATE;
  Uint32    _bufferLength = DEFAULT_BUFFERLEN;
  std::string _deviceName;

  sfx_auxCallback    _auxCallback = nullptr;
  void*              _auxUserdata = nullptr;
  std::vector<char>* _auxStream   = nullptr;
  SDL_AudioFormat    _auxFormat   = AUDIO_F32;
  Uint16             _auxChannels = 2;



public:
  //should be used solely by _sfx_callback related stuff
   //(these are hardly public functions; do not touch these, seriously)
  sfx_f32s& _getVolume(){ return _volume; }
  float& _getPan(){ return _pan; }
  Uint32& _getFadeInDelay(){ return _fadeInDelay; }
  float& _getFadeDelta(){ return _fadeDelta; }
  float& _getFadeVolume(){ return _fadeVolume; }
  std::vector<sfx_track>& _getTracks(){ return *_tracks; }
  std::vector<sfx_track>* _getTracksPtr(){ return _tracks; }
  void* _getAuxUserdata(){ return _auxUserdata; }
  std::vector<char>* _getAuxStream(){ return _auxStream; }

  void _setPlaying(bool playState){ _playing = playState; }
  void _setTimeStampStart(){ _timeStampStart = SDL_GetTicks64(); }
  void _setTimeStampEnd(){ _timeStampEnd = SDL_GetTicks64(); }


  //you can use these ones, though
  bool isValid() const { return _valid; }
  bool isClosing() const { return _closing; }
  bool isFadingOut() const { return _fadeOut; }
  bool isPlaying() const { return _playing; }
  SDL_AudioDeviceID getDeviceID() const { return _deviceID; }
  Uint64 getTimeStampStart() const { return _timeStampStart; }
  Uint64 getTimeStampEnd() const { return _timeStampEnd; }
  size_t getNumTracks() const { return _tracks->size(); }
  sfx_f32s getVolume() const { return _volume; }
  sfx_f32s getPan() const { return _pan; }
  Uint32 getSampleRate() const { return _sampleRate; }
  Uint32 getBufferLength() const { return _bufferLength; }
  std::string& getDeviceName(){ return _deviceName; }
  sfx_auxCallback getAuxCallback(){ return _auxCallback; }
  SDL_AudioFormat getAuxFormat(){ return _auxFormat; }
  Uint16 getAuxChannels(){ return _auxChannels; }


  sfx_class(const Uint32 numTracks,
            const int sampleRate = DEFAULT_SAMPLERATE,
            const std::string& deviceName = """",
            const Uint32 bufferLength = DEFAULT_BUFFERLEN);

  ~sfx_class();

  void setVolume(sfx_f32s volume);
  void setPan(float pan);


  void lock(bool lockState);
  void lockDevice(bool lockState);

  void pauseDevice(bool pauseState);
  void pauseDeviceAndWait(bool pauseState);


  void waitForTracks(Uint64 timeoutMS = 8000);
  void waitForTrack(int track, Uint64 timeoutMS = 8000);

  int play(const sfx_pcm* pcm,
           sfx_f32s volume = 1.0f,
           double speed = 1.0,
           float pan = 0.0f);

  void stop(int track);
  void stopAll();
  void stopAllForced(); //marks tracks as finished, rather than fading out over 10ms


  Uint32 getNumActiveTracks();
  bool isTrackPlaying(int track);
  sfx_track* getTrackPtr(int track);

  void setTrackVolumeDelta(int track, sfx_f32s volumeDeltaSeconds);
  void setTrackSpeedDelta(int track, double speedDeltaSeconds);
  void setAux(sfx_auxCallback callback, void* userdata = nullptr,
              SDL_AudioFormat format = AUDIO_F32, Uint16 channels = 2);
};




/***********/
/* sfx_pcm */
/***********/

#define SFX_PCM_MAGIC (0x4D43506B)
struct sfx_pcm { //an altered (but backwards compatible) version of kit_acodecPCM; 72B
  Uint32                   magic = 0;                  // (0x00) = 0x4D43506B = ""kPCM"" (no terminator)
  SDL_AudioFormat         format = AUDIO_F32;          // (0x04) The data format of the stream
  Uint16              headerSize = sizeof(sfx_pcm);    // (0x06) = sizeof(sfx_pcm)
  Uint64                dataSize = 0;                  // (0x08) The size of the PCM buffer, in bytes

  Uint64               loopStart = 0;                  // (0x10) Which sample to loop back to
  Uint64                 loopEnd = 0;                  // (0x18) Which sample to restart the loop on

  Uint64              numSamples = 0;                  // (0x20) # of sample frames in stream
  Uint32              sampleRate = DEFAULT_SAMPLERATE; // (0x28) The stream's sample rate, in Hz
  Uint32                 bitRate = DEFAULT_BITRATE;    // (0x2C) The audio's bit rate (per second)

  Uint16               loopCount = 0;                  // (0x30) # of times to loop audio (0 = no loop, -1 = inf loop)
  Uint16                channels = 2;                  // (0x32) # of interlaced channels in the stream
  Uint8             bitRemainder = 0;                  // (0x34) = bitsPerSample%8
  Uint8                userflags = 0;                  // (0x35) User-defined (is just padding otherwise)
  Uint16                    mode = 0;                  // (0x36) 0 = normal pcm
  std::vector<sfx_f32s>* samples = nullptr;            // (0x38) Sample data (appears as nullptr in file)
  sfx_class*                 sfx = nullptr;            // (0x40) Bound sfx class (appears as nullptr in file)


  // Samples will be converted to f32s at deviceSampleRate Hz
  sfx_pcm(const std::string& filePath, const sfx_class* sfx_ptr = nullptr);

  ~sfx_pcm(){
    magic = 0; //a magic of 0 indicates an invalid pcm struct
    delete samples;
    samples = nullptr; //just in case
  }


  void print(const size_t samplesToPrint = 0);


  void setSfx(sfx_class* sfx_ptr){ sfx = sfx_ptr; }


  int play(sfx_f32s volume = 1.0f, double speed = 1.0, float pan = 0.0f){
    if(sfx != nullptr) return sfx->play(this, volume, speed, pan);
    else throw ""no sfx_class instance currently bound"";
  }
};
"
aCYKmZXi,_sfx.hpp as of 2023-12-15,Kitomas,C++,Friday 15th of December 2023 04:31:48 AM CDT,"#pragma once

#include <sfx.hpp>


//500ms
#define _totalFadeDelay (0.500f)

//linearly fade over the course of 10ms
#define _fadeDeltaSeconds (0.010f)

//the most common audio clipping ends at 10-11ms after unpausing,
 //but i've seen clipping as far as ~450ms after unpausing
#define _fadeInDelaySeconds (_totalFadeDelay - _fadeDeltaSeconds)


//lower clip's volume to 0 within 10ms if speed reaches 0
#define _speed0DeltaVolMS (10.0f)




union _every_sample_type {
  void*     data;
  Uint8*    u8;
  Sint16*   i16;
  float*    f32;
  sfx_u8s*  u8s;
  sfx_i16s* i16s;
  sfx_f32s* f32s;
};



#define _FORMAT_SWITCH(_channels, _format) ( ((_channels)<<16) | (_format) )
enum _format_switch_enum {
  fmt_u8   = _FORMAT_SWITCH(1,AUDIO_U8 ),
  fmt_i16  = _FORMAT_SWITCH(1,AUDIO_S16),
  fmt_f32  = _FORMAT_SWITCH(1,AUDIO_F32),
  fmt_u8s  = _FORMAT_SWITCH(2,AUDIO_U8 ),
  fmt_i16s = _FORMAT_SWITCH(2,AUDIO_S16),
  fmt_f32s = _FORMAT_SWITCH(2,AUDIO_F32),
};



static inline bool _format_invalid(SDL_AudioFormat format){
  if(format == AUDIO_U8 ) return false;
  if(format == AUDIO_S16) return false;
  if(format == AUDIO_F32) return false;
  return true; //any other format is invalid
}




#ifndef LERP2
#define LERP2(_v0,_v1, _t) ( (_v0) + (_t)*((_v1)-(_v0)) )
#endif

static inline sfx_f32s sfx_linearSample(std::vector<sfx_f32s>& src,
                                        double& position,
                                        Uint64 loopEnd = 0xffffffffffffffff)
{
  Uint64 intPosition = (Uint64)position;
  double modPosition = position-intPosition;

  sfx_f32s smpA = src.at(   intPosition);
  sfx_f32s smpB = src.at((++intPosition)%loopEnd);

  sfx_f32s smpOut(
    LERP2(smpA.l, smpB.l, modPosition),
    LERP2(smpA.r, smpB.r, modPosition)
  );
  return smpOut;
}




/****************/
/* sfx_callback */
/****************/

static inline sfx_f32s& _sfx_applyPan(sfx_f32s& sample, float pan){
  //(i think this is how audacity does it...)
  if(pan < 0){
    sample.l += sample.r*(-pan);
    sample.r *= 1.0f+pan;
  } else if(pan > 0){
    sample.r += sample.l*pan;
    sample.l *= 1.0f-pan;
  }
  return sample;
}


static inline void _sfx_mixTrack(sfx_track& track, Uint64 sfxTimeStampEnd,
                                 sfx_f32s* dst, int dst_len)
{
  sfx_pcm* pcm = track.pcm;
  const sfx_f32s speed0VolumeDelta = -( (1000.0f/_speed0DeltaVolMS) / pcm->sampleRate );

  if(track.timeStamp > 0){
    //calculate position based on difference between device and clip timestamps
     //(timeStampEnd is used instead of Start, so the clip's time stamp
     // can be compared to the last time the device callback exited)
    double difference = (double)(track.timeStamp-sfxTimeStampEnd)/1000;
    difference *= pcm->sampleRate; //convert seconds to samples
    track.position = -(difference*track.speed); //starts playing when position reaches 0

    track.timeStamp = 0; //to ensure that this only occurs once per clip queued
  }


  //make copies of relevant track values
  float  pan       = std::clamp(track.pan, -1.0f,1.0f);
  Uint64 loopStart = pcm->loopStart;
  Uint64 loopEnd   = pcm->loopEnd;
  std::vector<sfx_f32s>& src = *pcm->samples;
   //
  double position = track.position;
  double speed    = track.speed;
  Uint16 loops    = track.loops;
  bool   stopping = track.stopping;

  //make sure volume is clamped before applying it to the first sample,
   //since volume is only clamped after volumeDelta is applied otherwise
  track.volume.unit(); //clamp to 0.0 -> 1.0


  for(int i=0; i<dst_len; ++i){
    //loop handling (or end-of-clip handling i guess)
    if(position >= loopEnd){ //clip finished loop
      if(!loops){ stopping = true; break; } //mark as inactive and break
      if(loops != 0xffff) --loops; //decrement loops (unless infinite)
      position -= (Uint64)position; //basically position %= 1
      position += loopStart; //now new_position = loopStart + old_position%1

    } else if(position < 0){ //clip has yet to start playing
      if(position < -speed){
        position += speed; //step forward by current speed
        continue;
      } else { //if position >= -speed, the clip should start next sample
        position = 0; //make sure clip starts at 0
      }

    }

    //get sample, apply volume, hard clip to -1.0f -> 1.0f
    sfx_f32s sample = sfx_linearSample(src, position, loopEnd);
    sample *= track.volume;
    sample.clip();

    //apply pan and mix, apply volumeDelta, clamp volume to 0.0f -> 1.0f
    dst[i] += _sfx_applyPan(sample,pan);
    track.volume += track.volumeDelta;
    track.volume.unit();

    //update position, apply speedDelta, start fade out if clip's speed <= 0
    position += speed;
    speed += track.speedDelta;
    if(speed <= 0){
      speed = 0;
      track.volumeDelta = speed0VolumeDelta;
    }
  }


  //update relevant values in track
  track.position = position;
  track.speed    = speed;
  track.loops    = loops;
  track.stopping = stopping;

  if(track.volume.l<=0 && track.volume.r<=0  &&  track.stopOnMute)
    track.stopping = true;

  if(track.stopping) track.pcm = nullptr;
}



extern int _sfx_pauseThread(void* data);

static inline void _sfx_globalFade(sfx_class* sfx, sfx_f32s* stream, int len){
  sfx_f32s  fadeDelta      = sfx->_getFadeDelta();
  sfx_f32s  fadeVolume     = sfx->_getFadeVolume();
  sfx_f32s& volume         = sfx->_getVolume();
  float&    pan            = sfx->_getPan();
  Uint32&   fadeInDelayRef = sfx->_getFadeInDelay();
  Uint32    fadeInDelay    = fadeInDelayRef;

  int i = 0; //this index is shared, as the loops can jump to others at will


  //FADING OUT
  if(sfx->isFadingOut()){ _fade_out_:;
    for(; i<len; ++i){
      if(!sfx->isFadingOut()) goto _fade_in_;
      stream[i] *= fadeVolume;
      fadeVolume -= fadeDelta;
      if(fadeVolume.l < 0) fadeVolume = 0.0f;
    }

    //trigger pause thread if fade out is complete
    if(fadeVolume.l <= 0.0f){
      SDL_Thread* pauseThread = SDL_CreateThread(_sfx_pauseThread,""_PauseTh"", sfx);
      //setting _fadeInDelay to -1 will cause further calls to the device callback
       //to simply memset 0 until sfx_class::pause() is called again
      if(pauseThread == NULL) fadeInDelayRef = 0xffffffff;
      else SDL_DetachThread(pauseThread); //make sure thread cleans up when finished
    }


  //FADING IN
  } else if(fadeVolume.l < 1.0f){
    for(; (fadeInDelay)&&(i<len); ++i){ //let device warm up before fading in
      stream[i] = 0.0f;  --fadeInDelay;
    }
    _fade_in_:;
    for(; i<len; ++i){
      if(sfx->isFadingOut()) goto _fade_out_;
      else if(fadeVolume.l >= 1.0f){ fadeVolume = 1.0f; break; }
      stream[i] *= fadeVolume;
      fadeVolume += fadeDelta;
    }

  }


  //even if no fade is being done, output should be hard clipped no matter what
   //(while we're at it, apply global volume and pan too i guess)
  for(i=0; i<len; ++i){
    stream[i] *= volume;
    stream[i].clip();
    stream[i] = _sfx_applyPan(stream[i], std::clamp(pan, -1.0f,1.0f));
  }


  //update any relevant new values for sfx
  sfx->_getFadeVolume() = fadeVolume.l; //.l should equal .r anyway
  if(fadeInDelayRef != 0xffffffff) fadeInDelayRef = fadeInDelay;
}
"
VQJMubJZ,kpm_convert.py,Kitomas,Python,Friday 15th of December 2023 04:30:32 AM CDT,"#converts uncompressed pcm .wav files to mode 0 .kpm
if __name__ != ""__main__"": exit(0) #lol
from time import time
from sys import argv
from os import listdir, system as cmd
from os.path import isfile, join
import wave



#beeg line
def getFilenames(fldr = "".""): return [f for f in listdir(fldr) if isfile(join(fldr,f)) and f != argv[0].split(""\\"")[-1] and f.split(""."")[-1] != ""kpm""]

def getArgPath(indx):
    try:
        return argv[indx]
    except IndexError:
        return ""."" #current directory
        
def tryInt(string):
    try:
        return int(string)
    except ValueError:
        return None
    except TypeError:
        return None
       
def replaceExtension(filename,extension):
    split = filename.split(""."")[:-1]
    if len(split) == 0: return filename + extension
    else:               return (""."").join(split) + extension



folderin  = getArgPath(1)
folderout = getArgPath(2)
filenames = None
try:
    filenames = getFilenames(folderin)
except FileNotFoundError as err:
    print(err)
    exit(1)

if len(filenames) == 0:
    print(""folder \""{}\"" is empty!"".format(folderin))
    cmd(""pause"")
    exit(1)

which = None
while which == None:
    cmd(""cls"")

    print(""input files in \""{}\"":\n"".format(folderin))

    for i in range(len(filenames)):
        print(""{:2}: \""{}\"""".format(i,filenames[i]))

    result = input(""\npick a .wav to convert (0 -> {}): "".format(len(filenames)-1))
    which = tryInt(result)
    if which == None: continue
    if which<0 or which>=len(filenames): which = None



startTime = time()

#supported input SDL_AudioFormat types
AUDIO_U8  = b'\x08\x00' #unsigned 8-bit samples
AUDIO_S16 = b'\x10\x80' #signed 16-bit samples
input_types = (None,AUDIO_U8,AUDIO_S16) #sorted by byte width
input_types_str = (None,""AUDIO_U8"",""AUDIO_S16"")

fileinPath = join(folderin,filenames[which])
filein = None
try:
    filein = wave.open(fileinPath,""rb"") #https://docs.python.org/3/library/wave.html
except Exception as err:
    print(err)
    cmd(""pause"")
    exit(1)
    
sampwidth   = filein.getsampwidth()
nframes     = filein.getnframes()
framerate   = filein.getframerate()
nchannels   = filein.getnchannels()
sample_data = filein.readframes(-1)
filein.close()

if sampwidth < 1 or sampwidth > 2:
    print(""sample data is not of type AUDIO_U8 or AUDIO_S16!"")
    cmd(""pause"")
    exit(1)



magic        = ""kPCM"" #4B
format       = input_types[sampwidth] #2B
headerSize   = 72 #2B
dataSize     = len(sample_data) #8B
loopStart    = 0 #8B
loopEnd      = nframes #8B
numSamples   = nframes #8B
sampleRate   = framerate #4B
bitRate      = framerate * sampwidth * nchannels * 8 #4B
loopCount    = 0 #2B
channels  = nchannels #2B
bitRemainder = 0 #1B
userflags    = 0 #1B
mode         = 0 #2B
userdata_a   = 0 #8B
userdata_b   = 0 #8B

#iirc byte objects are immutable, but the header is only 72 bytes anyway
le = ""little"" #[l]ittle [e]ndian (i wish python had macros)
header_data  = bytes(magic,""ascii"")        # 0x00: magic
header_data += format                      # 0x04: format
header_data += headerSize.to_bytes(  2,le) # 0x06: headerSize
header_data += dataSize.to_bytes(    8,le) # 0x08: dataSize
header_data += loopStart.to_bytes(   8,le) # 0x10: loopStart
header_data += loopEnd.to_bytes(     8,le) # 0x18: loopEnd
header_data += numSamples.to_bytes(  8,le) # 0x20: numSamples
header_data += sampleRate.to_bytes(  4,le) # 0x28: sampleRate
header_data += bitRate.to_bytes(     4,le) # 0x2C: bitRate
header_data += loopCount.to_bytes(   2,le) # 0x30: loopCount
header_data += channels.to_bytes(    2,le) # 0x32: channels
header_data += bitRemainder.to_bytes(1,le) # 0x34: bitRemainder
header_data += userflags.to_bytes(   1,le) # 0x35: userflags
header_data += mode.to_bytes(        2,le) # 0x36: mode
header_data += userdata_a.to_bytes(  8,le) # 0x38: userdata_a
header_data += userdata_b.to_bytes(  8,le) # 0x40: userdata_b



fileoutPath = join(folderout,filenames[which])
fileoutPath = replaceExtension(fileoutPath,"".kpm"")

fileout = open(fileoutPath,""wb"")

fileout.write(header_data)
fileout.write(sample_data)

fileout.close()
timeTakenMS = (time()-startTime)*1000


print(""\noutput file info:"")
print((""  magic        = \""{}\"""").format(magic))
print((""  format       = {}"").format(input_types_str[sampwidth]))
print((""  headerSize   = {}"").format(headerSize))
print((""  dataSize     = {}"").format(dataSize))
print((""  loopStart    = {}"").format(loopStart))
print((""  loopEnd      = {}"").format(loopEnd))
print((""  numSamples   = {}"").format(numSamples))
print((""  sampleRate   = {}"").format(sampleRate))
print((""  bitRate      = {}"").format(bitRate))
print((""  loopCount    = {}"").format(loopCount))
print((""  channels     = {}"").format(channels))
print((""  bitRemainder = {}"").format(bitRemainder))
print((""  userflags    = {}"").format(userflags))
print((""  mode         = {}"").format(mode))
print((""  userdata_a   = {}"").format(userdata_a))
print((""  userdata_b   = {}"").format(userdata_b))

print(""\nsaved to: \""{}\"""".format(fileoutPath))
print(""time taken: {:.4}ms"".format(timeTakenMS))
print(""\npress any key to exit"")
cmd(""pause >nul"")"
rwykNtsc,GameTracker.rs Server IP Grabber,kkDav1337,JavaScript,Friday 15th of December 2023 04:13:21 AM CDT,"for (let i = 2; i <= 78; i += 4) {
	console.log(document.getElementsByClassName(""td-a"")[i].innerText)	
}"
nZDurTxs,GameTracker.com Server IP Grabber,kkDav1337,JavaScript,Friday 15th of December 2023 04:07:30 AM CDT,"function getElementsByXPath(xpath, parent) {
    let results = [];
    let query = document.evaluate(xpath, parent || document,
        null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    for (let i = 0, length = query.snapshotLength; i < length; ++i) {
        results.push(query.snapshotItem(i));
    }
    return results;
}

// Select 50 results per page from bottom tab [View 15 25 50 items per page]
for (let i = 2; i < 52; i++) {
    const xpath = `html/body/div[2]/div[6]/div/table/tbody/tr[${i}]/td[7]`;
    const innerText = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.innerText;
    console.log(innerText);
}"
s4LDRB0Q,dsmr001,suchiz95,JSON,Friday 15th of December 2023 03:37:00 AM CDT,"{
    ""response"": ""getObjectsFromType"",
    ""status"": 200,
    ""requestId"": ""uuid"",
    ""output"": [
        {
            ""properties"": {
                ""individualName"": ""scenario_instance_1"",
                ""inputName"": ""scenario Instance 1"",
                ""owlVersion"": ""v1.0"",
                ""summary"": ""[\""timeframe\"", \""inputName\"", \""dateCreated\""]"",
                ""templateFrom"": ""template_scenario"",
                ""uuid"": ""afdsg-1457-dfgb-64fg"",
                ""version"": ""v1.1"",
                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                ""areaOfInterest"": ""area JSON string"",
                ""geographicLayerRules"": """",
                ""timeframe"": 3.0
            },
            ""objectProperties"": [
                {
                    ""name"": ""hasAlternative"",
                    ""properties"": {
                        ""individualName"": ""alternatives_pack_1"",
                        ""inputName"": ""alternatives pack 1"",
                        ""owlVersion"": ""v1.0"",
                        ""summary"": ""[\""inputName\""]"",
                        ""templateFrom"": ""template_alternatives_pack"",
                        ""uuid"": ""fh7g-j564-df2g-5gh9"",
                        ""version"": ""v1.1"",
                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                    },
                    ""objectProperties"": [
                        {
                            ""name"": ""hasObjectiveScoreList"",
                            ""properties"": {
                                ""individualName"": ""objective_score_list_1"",
                                ""inputName"": ""objective score list 1"",
                                ""owlVersion"": ""v1.0"",
                                ""summary"": """",
                                ""templateFrom"": ""template_objective_score_list"",
                                ""uuid"": ""3123-1254-132-124-124gvds25-gvdxs325"",
                                ""version"": ""v1.0"",
                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                            },
                            ""objectProperties"": [
                                {
                                    ""name"": ""hasObjectiveScore"",
                                    ""properties"": {
                                        ""individualName"": ""objective_score_1"",
                                        ""inputName"": ""objective score 1"",
                                        ""owlVersion"": ""v1.0"",
                                        ""scenarioUuid"": ""afdsg-1457-dfgb-64fg"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_objective_score"",
                                        ""uuid"": ""vbn7-x56c-81tg-bbsb23234"",
                                        ""version"": ""v1.0"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                        ""objectiveScore"": 65.0
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasKeyword"",
                                            ""properties"": {
                                                ""hasKeyword"": ""MinCost""
                                            },
                                            ""objectProperties"": []
                                        }
                                    ]
                                },
                                {
                                    ""name"": ""hasObjectiveScore"",
                                    ""properties"": {
                                        ""individualName"": ""objective_score_2"",
                                        ""inputName"": ""objective score 2"",
                                        ""owlVersion"": ""v1.0"",
                                        ""scenarioUuid"": ""afdsg-1457-dfgb-64fg"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_objective_score"",
                                        ""uuid"": ""tgb9-yh52-oi87-vk45432"",
                                        ""version"": ""v1.0"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                        ""objectiveScore"": 80.0
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasKeyword"",
                                            ""properties"": {
                                                ""hasKeyword"": ""MinResponseTime""
                                            },
                                            ""objectProperties"": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            ""name"": ""hasPoolOfAssets"",
                            ""properties"": {
                                ""individualName"": ""pool_of_assets_2"",
                                ""inputName"": ""pool of assets 2"",
                                ""owlVersion"": ""v1.0"",
                                ""summary"": """",
                                ""templateFrom"": ""template_pool_of_assets"",
                                ""uuid"": ""fdsg-asfv32-ds23v-23rfvfedg"",
                                ""version"": ""v1.0"",
                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                            },
                            ""objectProperties"": [
                                {
                                    ""name"": ""hasAsset"",
                                    ""properties"": {
                                        ""assetType"": ""radar"",
                                        ""gis"": ""new location"",
                                        ""individualName"": ""radarInstance"",
                                        ""inputName"": ""radarInstance"",
                                        ""movingAsset"": """",
                                        ""owlVersion"": ""v1.0"",
                                        ""status"": """",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_radar"",
                                        ""uuid"": ""12343585-a0ad-47c6-a69b-94643c06b876"",
                                        ""version"": ""v1.8"",
                                        ""antennaBandwidth"": 0.0,
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                        ""antennaDiameter"": 2.0,
                                        ""assumeLoss"": 1.0,
                                        ""eta"": 0.0,
                                        ""frequencyRange"": 10.0,
                                        ""maxRange"": 0.0,
                                        ""noiseFactor"": 0.0,
                                        ""noisePower"": 0.0,
                                        ""radarCrossSection"": 1.0,
                                        ""rangeRadarToTraget"": 5.0,
                                        ""receivedPower"": 0.0,
                                        ""signalToNoiseThreshold"": 0.0,
                                        ""transmittedPower"": 100.0,
                                        ""wavelength"": 0.03
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasAssetCost"",
                                            ""properties"": {
                                                ""comment"": ""radar costs individual"",
                                                ""individualName"": ""radar_asset_cost_1"",
                                                ""inputName"": ""radar asset cost 1"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_asset_cost"",
                                                ""uuid"": ""3c452b67-391f-4410-8043"",
                                                ""version"": ""v1.0"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDecommissionCost"",
                                                    ""properties"": {
                                                        ""individualName"": ""radar_decommission_cost_1"",
                                                        ""inputName"": ""radar decommission cost 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_decommission_cost"",
                                                        ""uuid"": ""a92a929f-9ba8-404d-ab08"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                        ""disposalCost"": 550.0,
                                                        ""replacementCost"": 7500.0
                                                    },
                                                    ""objectProperties"": []
                                                },
                                                {
                                                    ""name"": ""hasOperationalCost"",
                                                    ""properties"": {
                                                        ""individualName"": ""radar_operational_costs_1"",
                                                        ""inputName"": ""radar operational costs 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_operational_cost"",
                                                        ""uuid"": ""31ab7214-974e-4ef4-b6f2"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                        ""energyCost"": 250.0,
                                                        ""fuelCost"": 0.0,
                                                        ""inflationRate"": 6.9,
                                                        ""initialSalaryCost"": 1500.0,
                                                        ""maintenanceCost"": 600.0,
                                                        ""salaryCost"": 2000.0,
                                                        ""trainingCost"": 300.0,
                                                        ""unplannedMaintenance"": 2300.0,
                                                        ""wageRiseRate"": 5.0
                                                    },
                                                    ""objectProperties"": []
                                                },
                                                {
                                                    ""name"": ""hasDevelopmentCost"",
                                                    ""properties"": {
                                                        ""individualName"": ""radar_development_cost_1"",
                                                        ""inputName"": ""radar development cost 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_development_cost"",
                                                        ""uuid"": ""f58688b0-4aea-4a9c-a791"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                        ""equipmentCost"": 550.0,
                                                        ""inflationRate"": 6.9,
                                                        ""initialSalaryCost"": 1500.0,
                                                        ""salaryCost"": 2000.0,
                                                        ""wageRiseRate"": 5.0
                                                    },
                                                    ""objectProperties"": []
                                                },
                                                {
                                                    ""name"": ""hasProcurementCost"",
                                                    ""properties"": {
                                                        ""individualName"": ""radar_procurement_cost_1"",
                                                        ""inputName"": ""radar procurement cost 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_procurement_cost"",
                                                        ""uuid"": ""c23506f4-aa77-4b68-8a06"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                        ""buyCost"": 12000.0
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEnvironment"",
                                            ""properties"": {
                                                ""individualName"": ""environment_instance_1"",
                                                ""inputName"": ""environment instance 1"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_environment"",
                                                ""uuid"": ""93e5017e-2a58-4d45-bcfa"",
                                                ""version"": ""v1.1"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasAreaOfInterest"",
                                                    ""properties"": {
                                                        ""individualName"": ""area_Of_Interest_Instance_1"",
                                                        ""inputName"": ""area Of Interest Instance 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_area_of_interest"",
                                                        ""uuid"": ""9dasgab6a-gdm7sn5s-qbd5szu5z-skdkdsha3a"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                        ""areaOfInterestName"": ""CY01"",
                                                        ""areaOfInterestValue"": ""area of interest value json""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasCoordinateReferenceSystem"",
                                                            ""properties"": {
                                                                ""hasCoordinateReferenceSystem"": ""UTM""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEnvironmentalConditions"",
                                                    ""properties"": {
                                                        ""individualName"": ""environmental_Conditions_Instance_1"",
                                                        ""inputName"": ""environmental Conditions Instance 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_environmental_conditions"",
                                                        ""uuid"": ""sa9876vs-v6a6aa-rbda7bjh-q6vsuagvwq3"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasAtmosphere"",
                                                            ""properties"": {
                                                                ""individualName"": ""atmosphere_Instance_1"",
                                                                ""inputName"": ""atmosphere Instance 1"",
                                                                ""owlVersion"": ""v1.0"",
                                                                ""summary"": """",
                                                                ""templateFrom"": ""template_atmosphere"",
                                                                ""uuid"": ""8s7dg-b9ssd-v9sd7s9-ovsvpadb89"",
                                                                ""version"": ""v1.0"",
                                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                                            },
                                                            ""objectProperties"": [
                                                                {
                                                                    ""name"": ""hasHumidity"",
                                                                    ""properties"": {
                                                                        ""individualName"": ""humidity_Instance_1"",
                                                                        ""inputName"": ""humidity Instance 1"",
                                                                        ""owlVersion"": ""v1.0"",
                                                                        ""summary"": """",
                                                                        ""templateFrom"": ""template_humidity"",
                                                                        ""uuid"": ""8sd8vs8-009sdvsd-aso7665-valala4"",
                                                                        ""version"": ""v1.0"",
                                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                        ""humidityCategory"": ""yes"",
                                                                        ""humidityValue"": 58.0
                                                                    },
                                                                    ""objectProperties"": [
                                                                        {
                                                                            ""name"": ""hasMeasurementUnit"",
                                                                            ""properties"": {
                                                                                ""hasMeasurementUnit"": ""Percentage""
                                                                            },
                                                                            ""objectProperties"": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    ""name"": ""hasPressure"",
                                                                    ""properties"": {
                                                                        ""individualName"": ""pressure_Instance_1"",
                                                                        ""inputName"": ""pressure Instance 1"",
                                                                        ""owlVersion"": ""v1.0"",
                                                                        ""summary"": """",
                                                                        ""templateFrom"": ""template_pressure"",
                                                                        ""uuid"": ""dvijsd0-sdva9sv-4asv6v-paoviaia2"",
                                                                        ""version"": ""v1.0"",
                                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                        ""pressureCategory"": ""yes"",
                                                                        ""pressureValue"": 1007.0
                                                                    },
                                                                    ""objectProperties"": [
                                                                        {
                                                                            ""name"": ""hasMeasurementUnit"",
                                                                            ""properties"": {
                                                                                ""hasMeasurementUnit"": ""Millibars""
                                                                            },
                                                                            ""objectProperties"": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    ""name"": ""hasTemperature"",
                                                                    ""properties"": {
                                                                        ""individualName"": ""temperature_Instance_1"",
                                                                        ""inputName"": ""temperature Instance 1"",
                                                                        ""owlVersion"": ""v1.0"",
                                                                        ""summary"": """",
                                                                        ""templateFrom"": ""template_temperature"",
                                                                        ""uuid"": ""89bdsd8v-a9avaaa-vjaia-uva9a"",
                                                                        ""version"": ""v1.0"",
                                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                        ""temperatureCategory"": ""yes"",
                                                                        ""temperatureValue"": 27.3
                                                                    },
                                                                    ""objectProperties"": [
                                                                        {
                                                                            ""name"": ""hasMeasurementUnit"",
                                                                            ""properties"": {
                                                                                ""hasMeasurementUnit"": ""Celcius""
                                                                            },
                                                                            ""objectProperties"": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            ""name"": ""hasCloud"",
                                                            ""properties"": {
                                                                ""individualName"": ""cloud_Instance_1"",
                                                                ""inputName"": ""cloud Instance 1"",
                                                                ""owlVersion"": ""v1.0"",
                                                                ""summary"": """",
                                                                ""templateFrom"": ""cloud_Instance_1"",
                                                                ""uuid"": ""3rtfwv9-sdvwe9-sdjbwe-dkvojaq2"",
                                                                ""version"": ""v1.0"",
                                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                ""cloudCategory"": ""yes"",
                                                                ""cloudValue"": 5.0
                                                            },
                                                            ""objectProperties"": [
                                                                {
                                                                    ""name"": ""hasMeasurementUnit"",
                                                                    ""properties"": {
                                                                        ""hasMeasurementUnit"": ""Percentage""
                                                                    },
                                                                    ""objectProperties"": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            ""name"": ""hasPrecipitation"",
                                                            ""properties"": {
                                                                ""individualName"": ""precipitation_Instance_1"",
                                                                ""inputName"": ""precipitation Instance 1"",
                                                                ""owlVersion"": ""v1.0"",
                                                                ""summary"": """",
                                                                ""templateFrom"": ""template_precipitation"",
                                                                ""uuid"": ""123feds-sdf23-fds23fwh-23gvedsae"",
                                                                ""version"": ""v1.0"",
                                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                ""precipitationCategory"": ""yes"",
                                                                ""precipitationValue"": 30.0
                                                            },
                                                            ""objectProperties"": [
                                                                {
                                                                    ""name"": ""hasMeasurementUnit"",
                                                                    ""properties"": {
                                                                        ""hasMeasurementUnit"": ""Millimeters""
                                                                    },
                                                                    ""objectProperties"": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            ""name"": ""hasSnow"",
                                                            ""properties"": {
                                                                ""individualName"": ""snow_Instance_1"",
                                                                ""inputName"": ""snow Instance 1"",
                                                                ""owlVersion"": ""v1.0"",
                                                                ""summary"": """",
                                                                ""templateFrom"": ""template_snow"",
                                                                ""uuid"": ""fsavdas-dbadsd9b-bds9bs-wvds"",
                                                                ""version"": ""v1.0"",
                                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                ""snowCategory"": ""no"",
                                                                ""snowValue"": 0.0
                                                            },
                                                            ""objectProperties"": [
                                                                {
                                                                    ""name"": ""hasMeasurementUnit"",
                                                                    ""properties"": {
                                                                        ""hasMeasurementUnit"": ""Centimeters""
                                                                    },
                                                                    ""objectProperties"": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            ""name"": ""hasWave"",
                                                            ""properties"": {
                                                                ""individualName"": ""wave_Instance_1"",
                                                                ""inputName"": ""wave Instance 1"",
                                                                ""owlVersion"": ""v1.0"",
                                                                ""summary"": """",
                                                                ""templateFrom"": ""template_wave"",
                                                                ""uuid"": ""vdsjiisd-avavas9v-3va44asv-76adva"",
                                                                ""version"": ""v1.0"",
                                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                                            },
                                                            ""objectProperties"": [
                                                                {
                                                                    ""name"": ""hasWaveDirection"",
                                                                    ""properties"": {
                                                                        ""individualName"": ""wave_Direction_Instance_1"",
                                                                        ""inputName"": ""wave Direction Instance 1"",
                                                                        ""owlVersion"": ""v1.0"",
                                                                        ""summary"": """",
                                                                        ""templateFrom"": ""template_wave_direction"",
                                                                        ""uuid"": ""89asdv776-v44aa-6davayah-kahuau5"",
                                                                        ""version"": ""v1.0"",
                                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                        ""waveDirectionCategory"": ""yes"",
                                                                        ""waveDirectionValue"": 120.0
                                                                    },
                                                                    ""objectProperties"": [
                                                                        {
                                                                            ""name"": ""hasMeasurementUnit"",
                                                                            ""properties"": {
                                                                                ""hasMeasurementUnit"": ""Degrees""
                                                                            },
                                                                            ""objectProperties"": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    ""name"": ""hasWaveHeight"",
                                                                    ""properties"": {
                                                                        ""individualName"": ""wave_Height_Instance_1"",
                                                                        ""inputName"": ""wave Height Instance 1"",
                                                                        ""owlVersion"": ""v1.0"",
                                                                        ""summary"": """",
                                                                        ""templateFrom"": ""template_wave_height"",
                                                                        ""uuid"": ""98avsd8as-v5as6vav-dsb23s-8adb5"",
                                                                        ""version"": ""v1.0"",
                                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                        ""waveHeightCategory"": ""yes"",
                                                                        ""waveHeightValue"": 1.5
                                                                    },
                                                                    ""objectProperties"": [
                                                                        {
                                                                            ""name"": ""hasMeasurementUnit"",
                                                                            ""properties"": {
                                                                                ""hasMeasurementUnit"": ""Meters""
                                                                            },
                                                                            ""objectProperties"": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            ""name"": ""hasWind"",
                                                            ""properties"": {
                                                                ""individualName"": ""wind_instance_1"",
                                                                ""inputName"": ""wind instance 1"",
                                                                ""owlVersion"": ""v1.0"",
                                                                ""summary"": """",
                                                                ""templateFrom"": ""template_wind"",
                                                                ""uuid"": ""vsdsdv-evz098s-sd9vjwe-34t766s"",
                                                                ""version"": ""v1.0"",
                                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                                            },
                                                            ""objectProperties"": [
                                                                {
                                                                    ""name"": ""hasWindDirection"",
                                                                    ""properties"": {
                                                                        ""individualName"": ""wind_Direction_Instance_1"",
                                                                        ""inputName"": ""wind Direction Instance 1"",
                                                                        ""owlVersion"": ""v1.0"",
                                                                        ""summary"": """",
                                                                        ""templateFrom"": ""template_wind_direction"",
                                                                        ""uuid"": ""fdssd-320fds-9vzjq-lsdpvpsp2"",
                                                                        ""version"": ""v1.0"",
                                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                        ""windDirectionCategory"": ""yes"",
                                                                        ""windDirectionValue"": 145.0
                                                                    },
                                                                    ""objectProperties"": [
                                                                        {
                                                                            ""name"": ""hasMeasurementUnit"",
                                                                            ""properties"": {
                                                                                ""hasMeasurementUnit"": ""Degrees""
                                                                            },
                                                                            ""objectProperties"": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    ""name"": ""hasWindSpeed"",
                                                                    ""properties"": {
                                                                        ""individualName"": ""wind_Speed_Instance_1"",
                                                                        ""inputName"": ""wind Speed Instance 1"",
                                                                        ""owlVersion"": ""v1.0"",
                                                                        ""summary"": """",
                                                                        ""templateFrom"": ""template_wind_speed"",
                                                                        ""uuid"": ""112ff-adsvb-23fvdsj-ssefv-23tygsb"",
                                                                        ""version"": ""v1.0"",
                                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                                        ""windSpeedCategory"": ""yes"",
                                                                        ""windSpeedValue"": 5.0
                                                                    },
                                                                    ""objectProperties"": [
                                                                        {
                                                                            ""name"": ""hasMeasurementUnit"",
                                                                            ""properties"": {
                                                                                ""hasMeasurementUnit"": ""MetersPerSecond""
                                                                            },
                                                                            ""objectProperties"": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEnvironmentalPeriod"",
                                                    ""properties"": {
                                                        ""individualName"": ""environmental_Period_Instance_1"",
                                                        ""inputName"": ""environmental Period Instance 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_enviromental_period"",
                                                        ""uuid"": ""sdbhsdiu-sd97bsd79b-bohiaq9g-65dabadv"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                        ""beginDate"": ""2023-06-30T13:30:00+00:00"",
                                                        ""endDate"": ""2023-06-30T13:45:00+00:00"",
                                                        ""time"": ""2023-06-30T13:55:00+00:00""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasFunction"",
                                            ""properties"": {
                                                ""individualName"": ""f1"",
                                                ""inputName"": ""f1"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_function"",
                                                ""uuid"": ""78453585-a0ad-47c6-a69b-94643c06b294"",
                                                ""version"": ""v1.0"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""D^2"",
                                                        ""hasOrder"": 1,
                                                        ""hasOutput"": ""out1"",
                                                        ""hasParameter1"": ""antennaDiameter"",
                                                        ""hasParameter2"": ""2""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Power""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""4 * pi"",
                                                        ""hasOrder"": 10,
                                                        ""hasOutput"": ""out10"",
                                                        ""hasParameter1"": ""4"",
                                                        ""hasParameter2"": ""3.14""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""R ^ 4"",
                                                        ""hasOrder"": 11,
                                                        ""hasOutput"": ""out11"",
                                                        ""hasParameter1"": ""rangeRadarToTraget"",
                                                        ""hasParameter2"": ""4""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Power""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""4 * pi * R ^ 4"",
                                                        ""hasOrder"": 12,
                                                        ""hasOutput"": ""out12"",
                                                        ""hasParameter1"": ""out10"",
                                                        ""hasParameter2"": ""out11""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": """"
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""Pr = (Pt * G^2 * lambda^2 * sigma) / (4 * pi * R^4 * L))"",
                                                        ""hasOrder"": 14,
                                                        ""hasOutput"": ""out14"",
                                                        ""hasParameter1"": ""out9"",
                                                        ""hasParameter2"": ""out13""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Division""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""4 * pi * Pr"",
                                                        ""hasOrder"": 15,
                                                        ""hasOutput"": ""out15"",
                                                        ""hasParameter1"": ""out10"",
                                                        ""hasParameter2"": ""out14""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""4 * pi * Pr * L"",
                                                        ""hasOrder"": 16,
                                                        ""hasOutput"": ""out16"",
                                                        ""hasParameter1"": ""out15"",
                                                        ""hasParameter2"": ""assumeLoss""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""hasOrder"": 17,
                                                        ""hasOutput"": ""out17"",
                                                        ""hasParameter1"": ""out9"",
                                                        ""hasParameter2"": ""out16""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Division""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""D^2 * pi"",
                                                        ""hasOrder"": 2,
                                                        ""hasOutput"": ""out2"",
                                                        ""hasParameter1"": ""3.14"",
                                                        ""hasParameter2"": ""out1""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""D^2 *pi * eta"",
                                                        ""hasOrder"": 3,
                                                        ""hasOutput"": ""out3"",
                                                        ""hasParameter1"": ""out2"",
                                                        ""hasParameter2"": ""eta""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""wavelength ^2 = lambda ^ 2"",
                                                        ""hasOrder"": 4,
                                                        ""hasOutput"": ""out4"",
                                                        ""hasParameter1"": ""wavelength"",
                                                        ""hasParameter2"": ""wavelength""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""G = (pi * D^2 * eta) / lambda^2"",
                                                        ""hasOrder"": 5,
                                                        ""hasOutput"": ""out5"",
                                                        ""hasParameter1"": ""out3"",
                                                        ""hasParameter2"": ""out4""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Division""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""G^2"",
                                                        ""hasOrder"": 6,
                                                        ""hasOutput"": ""out6"",
                                                        ""hasParameter1"": ""out5"",
                                                        ""hasParameter2"": ""out5""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""Pt * G^2"",
                                                        ""hasOrder"": 7,
                                                        ""hasOutput"": ""out7"",
                                                        ""hasParameter1"": ""transmittedPower"",
                                                        ""hasParameter2"": ""out6""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""Pt * G^2 * lambda^2"",
                                                        ""hasOrder"": 8,
                                                        ""hasOutput"": ""out8"",
                                                        ""hasParameter1"": ""out7"",
                                                        ""hasParameter2"": ""out4""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasEquation"",
                                                    ""properties"": {
                                                        ""comment"": ""Pt * G^2 * lambda^2 * sigma"",
                                                        ""hasOrder"": 9,
                                                        ""hasOutput"": ""out9"",
                                                        ""hasParameter1"": ""out8"",
                                                        ""hasParameter2"": ""radarCrossSection""
                                                    },
                                                    ""objectProperties"": [
                                                        {
                                                            ""name"": ""hasMathOperation"",
                                                            ""properties"": {
                                                                ""hasMathOperation"": ""Multiplication""
                                                            },
                                                            ""objectProperties"": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    ""name"": ""hasType"",
                                                    ""properties"": {
                                                        ""hasType"": ""FunctionTypeCoverage""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasAssetAcquisition"",
                                            ""properties"": {
                                                ""individualName"": ""radar_instance_1_asset_acquisition"",
                                                ""inputName"": ""radar instance 1 asset acquisition"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_asset_acquisition"",
                                                ""timeToAvailability"": 0.0,
                                                ""uuid"": ""9255b610-e477-4f0d-9b09"",
                                                ""version"": ""v1.0"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMaturity"",
                                                    ""properties"": {
                                                        ""hasMaturity"": ""InUse""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasAssetIdentification"",
                                            ""properties"": {
                                                ""hasInventories"": ""[300,250]"",
                                                ""hasOrigin"": ""300"",
                                                ""hasType"": ""7"",
                                                ""individualName"": ""radar_instance_1_asset_identification"",
                                                ""inputName"": ""radar instance 1 asset identification"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_asset_identification"",
                                                ""uuid"": ""bfdd69f4-b40c-468d-9359"",
                                                ""version"": ""v1.0"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasCategory"",
                                                    ""properties"": {
                                                        ""hasCategory"": ""Ground""
                                                    },
                                                    ""objectProperties"": []
                                                },
                                                {
                                                    ""name"": ""hasIcon"",
                                                    ""properties"": {
                                                        ""hasIcon"": ""Unknown""
                                                    },
                                                    ""objectProperties"": []
                                                },
                                                {
                                                    ""name"": ""hasLevel"",
                                                    ""properties"": {
                                                        ""hasLevel"": ""System""
                                                    },
                                                    ""objectProperties"": []
                                                },
                                                {
                                                    ""name"": ""hasNature"",
                                                    ""properties"": {
                                                        ""hasNature"": ""Hardware""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasCapabilities"",
                                            ""properties"": {
                                                ""communications"": """",
                                                ""detectability"": 100.0,
                                                ""identification"": 50.0,
                                                ""individualName"": ""radar_capabilities"",
                                                ""inputName"": ""radar capabilities"",
                                                ""interoperability"": 1.0,
                                                ""maintenanceTime"": 604800.0,
                                                ""meanTimeBetweenFailures"": 100.0,
                                                ""meanTimeToRepair"": 900.0,
                                                ""operationalRange"": 200.0,
                                                ""operationalSpeed"": 30.0,
                                                ""operationalTime"": 1628000.0,
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_asset_capabilities"",
                                                ""upgradeability"": 0.2,
                                                ""uuid"": ""5262fea3-ce8f-403a-a1dd"",
                                                ""version"": ""v1.0"",
                                                ""vulnerability"": 5.0,
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasLocation"",
                                            ""properties"": {
                                                ""individualName"": ""radar_instance_location"",
                                                ""inputName"": ""radar instance location"",
                                                ""locationX"": 37.94927,
                                                ""locationY"": 23.64262,
                                                ""locationZ"": 6.0,
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_location"",
                                                ""uuid"": ""dd5c36fc-17a9-4688-8510"",
                                                ""version"": ""v1.0"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasSizeWeight"",
                                            ""properties"": {
                                                ""height"": 3.0,
                                                ""individualName"": ""radar_instance_1_size_weight"",
                                                ""inputName"": ""radar instance 1 size weight"",
                                                ""length"": 8.0,
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_size_weight"",
                                                ""uuid"": ""1be40204-458d-4c7d-ad8b"",
                                                ""version"": ""v1.0"",
                                                ""weight"": 8.0,
                                                ""width"": 5.0,
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasInstallationConstraint"",
                                            ""properties"": {
                                                ""individualName"": ""installationConstraint3"",
                                                ""inputName"": ""installationConstraint3"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_installation_constraint"",
                                                ""uuid"": ""cd77322a-663b-4b14-b532"",
                                                ""version"": ""v1.1"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                ""hasInstallationParameter1"": ""radarInstance"",
                                                ""hasInstallationParameter2"": ""ship_instance_1""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasConstraintDefinition"",
                                                    ""properties"": {
                                                        ""hasConstraintDefinition"": ""canBePlacedOn""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            ""name"": ""hasScenarioEvaluation"",
                            ""properties"": {
                                ""individualName"": ""radar_scenario_evaluation"",
                                ""inputName"": ""radar scenario evaluation"",
                                ""owlVersion"": ""v1.0"",
                                ""scenarioUuid"": ""afdsg-1457-dfgb-64fg"",
                                ""summary"": """",
                                ""templateFrom"": ""template_alternatives_pack_scenario_evaluation"",
                                ""uuid"": ""324574ef-0ac8-4873-982c"",
                                ""version"": ""v1.0"",
                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                            },
                            ""objectProperties"": [
                                {
                                    ""name"": ""hasScenarioEvaluationCost"",
                                    ""properties"": {
                                        ""individualName"": ""radar_scenario_evaluation_cost"",
                                        ""inputName"": ""radar scenario evaluation cost"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_alternatives_pack_scenario_evaluation_cost"",
                                        ""uuid"": ""819f36e9-f80d-49e6-9dad"",
                                        ""version"": ""v1.0"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                        ""scenarioEvaluationAssetsCost"": 5500.0,
                                        ""scenarioEvaluationCostScore"": 86.0,
                                        ""scenarioEvaluationInitialCost"": 2300.0
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasAssetCost"",
                                            ""properties"": {
                                                ""individualName"": ""radar_asset_cost_alternative_pack_1"",
                                                ""inputName"": ""radar asset cost alternative pack 1"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": ""template_asset_cost_alternative_pack"",
                                                ""uuid"": ""83285925-9eff-4f92-91fe"",
                                                ""version"": ""v1.0"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDecommissionCost"",
                                                    ""properties"": {
                                                        ""individualName"": ""radar_decommission_cost_1"",
                                                        ""inputName"": ""radar decommission cost 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_decommission_cost"",
                                                        ""uuid"": ""a92a929f-9ba8-404d-ab08"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                        ""disposalCost"": 550.0,
                                                        ""replacementCost"": 7500.0
                                                    },
                                                    ""objectProperties"": []
                                                },
                                                {
                                                    ""name"": ""hasOperationalCost"",
                                                    ""properties"": {
                                                        ""individualName"": ""radar_operational_costs_1"",
                                                        ""inputName"": ""radar operational costs 1"",
                                                        ""owlVersion"": ""v1.0"",
                                                        ""summary"": """",
                                                        ""templateFrom"": ""template_operational_cost"",
                                                        ""uuid"": ""31ab7214-974e-4ef4-b6f2"",
                                                        ""version"": ""v1.0"",
                                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                        ""energyCost"": 250.0,
                                                        ""fuelCost"": 0.0,
                                                        ""inflationRate"": 6.9,
                                                        ""initialSalaryCost"": 1500.0,
                                                        ""maintenanceCost"": 600.0,
                                                        ""salaryCost"": 2000.0,
                                                        ""trainingCost"": 300.0,
                                                        ""unplannedMaintenance"": 2300.0,
                                                        ""wageRiseRate"": 5.0
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    ""name"": ""hasPerformance"",
                                    ""properties"": {
                                        ""individualName"": ""radar_performance"",
                                        ""inputName"": ""radar performance"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_alternatives_pack_scenario_evaluation_performance"",
                                        ""uuid"": ""6aefb791-f326-4d4a-93fa"",
                                        ""version"": ""v1.0"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                        ""measureOfEffectiveness"": 80.0,
                                        ""performanceScore"": 80.0,
                                        ""spaceCoverage"": 85.0,
                                        ""timeCoverage"": 3.5
                                    },
                                    ""objectProperties"": []
                                },
                                {
                                    ""name"": ""hasRisk"",
                                    ""properties"": {
                                        ""individualName"": ""radar_risk"",
                                        ""inputName"": ""radar risk"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_alternatives_pack_scenario_evaluation_risk"",
                                        ""uuid"": ""03c48942-4029-45af-9065"",
                                        ""version"": ""v1.1"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                        ""costUncertainty"": 2000.0,
                                        ""performanceUncertainty"": 10.0,
                                        ""riskScore"": 4
                                    },
                                    ""objectProperties"": []
                                }
                            ]
                        }
                    ]
                },
                {
                    ""name"": ""hasObjectives"",
                    ""properties"": {
                        ""individualName"": ""scenario_objective_list_1"",
                        ""inputName"": ""scenario objective list 1"",
                        ""owlVersion"": ""v1.0"",
                        ""summary"": """",
                        ""templateFrom"": ""template_scenario_objective_list"",
                        ""uuid"": ""7694f408-443d-4f8e-9f35-045bbebf93a0"",
                        ""version"": ""v1.0"",
                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                    },
                    ""objectProperties"": [
                        {
                            ""name"": ""hasScenarioObjective"",
                            ""properties"": {
                                ""enableKeyword"": ""true"",
                                ""individualName"": ""scenarioObjective_2"",
                                ""inputName"": ""scenarioObjective 2"",
                                ""owlVersion"": ""v1.0"",
                                ""summary"": """",
                                ""templateFrom"": ""template_scenario_objective"",
                                ""uuid"": ""378033b2-607d-4bee-a33a-8f0cafcd22a8"",
                                ""version"": ""v1.0"",
                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                            },
                            ""objectProperties"": [
                                {
                                    ""name"": ""hasKeyword"",
                                    ""properties"": {
                                        ""hasKeyword"": ""MinResponseTime""
                                    },
                                    ""objectProperties"": []
                                }
                            ]
                        },
                        {
                            ""name"": ""hasScenarioObjective"",
                            ""properties"": {
                                ""enableKeyword"": ""true"",
                                ""individualName"": ""scenarioobjective_1"",
                                ""inputName"": ""scenarioobjective 1"",
                                ""owlVersion"": ""v1.0"",
                                ""summary"": """",
                                ""templateFrom"": ""template_scenario_objective"",
                                ""uuid"": ""f6e983a0-bddd-49da-b73c-0226174158c2"",
                                ""version"": ""v1.1"",
                                ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                            },
                            ""objectProperties"": [
                                {
                                    ""name"": ""hasKeyword"",
                                    ""properties"": {
                                        ""hasKeyword"": ""MinCost""
                                    },
                                    ""objectProperties"": []
                                }
                            ]
                        }
                    ]
                },
                {
                    ""name"": ""hasPoolOfAssets"",
                    ""properties"": {
                        ""individualName"": ""pool_of_assets_1"",
                        ""inputName"": ""pool of assets 1"",
                        ""owlVersion"": ""v1.0"",
                        ""summary"": """",
                        ""templateFrom"": ""template_pool_of_assets"",
                        ""uuid"": ""g23324vc-dsbgsgsd-23xc-234cxs"",
                        ""version"": ""v1.0"",
                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                    },
                    ""objectProperties"": [
                        {
                            ""name"": ""hasAsset"",
                            ""properties"": {
                                ""comment"": ""cocPercentage set to 1%\nviewingDist set to 300mm -> 30cm"",
                                ""assetType"": ""camera"",
                                ""gis"": ""new location"",
                                ""individualName"": ""cameraInstance"",
                                ""inputName"": ""cameraInstance"",
                                ""movingAsset"": """",
                                ""owlVersion"": ""v1.0"",
                                ""status"": """",
                                ""summary"": """",
                                ""templateFrom"": """",
                                ""uuid"": ""76831174-as8s-gh6h-78s564fd4"",
                                ""version"": ""v1.2"",
                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                ""aperture"": 0.0,
                                ""circleOfConfusion"": 0.0,
                                ""cocPercentage"": 0.01,
                                ""depthOfField"": 0.0,
                                ""diagonalOfSensor"": 0.0,
                                ""distanceLensToObject"": 100000.0,
                                ""distanceLensToSensor"": 0.0526,
                                ""farFOVHorizontal"": 0.0,
                                ""farFOVVertical"": 0.0,
                                ""focalLength"": 19.0,
                                ""hyperfocalDistance"": 0.0,
                                ""lensDiameter"": 2.8,
                                ""nearFOVHorizontal"": 0.0,
                                ""nearFOVVertical"": 0.0,
                                ""pixelSize"": 0.082,
                                ""resolutionHeight"": 1024.0,
                                ""resolutionWidth"": 1280.0,
                                ""sensorHeight"": 4.6,
                                ""sensorResolution"": 0.0,
                                ""sensorWidth"": 3.7,
                                ""viewingDistance"": 300.0
                            },
                            ""objectProperties"": [
                                {
                                    ""name"": ""hasAssetCost"",
                                    ""properties"": {
                                        ""comment"": ""camera costs individual"",
                                        ""individualName"": ""camera_asset_cost_1"",
                                        ""inputName"": ""camera asset cost 1"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": """",
                                        ""uuid"": ""06beda7c-f3ba-45f0-ba5b"",
                                        ""version"": ""v1.1"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasDecommissionCost"",
                                            ""properties"": {
                                                ""individualName"": ""camera_decommission_cost_1"",
                                                ""inputName"": ""camera decommission cost 1"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": """",
                                                ""uuid"": ""e64e9838-0d82-4eec-b7db"",
                                                ""version"": ""v1.1"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                ""disposalCost"": 1800.0,
                                                ""replacementCost"": 5500.0
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasOperationalCost"",
                                            ""properties"": {
                                                ""individualName"": ""camera_operational_cost_1"",
                                                ""inputName"": ""camera operational cost 1"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": """",
                                                ""uuid"": ""3e5a44a5-c9ae-4bd6-9f7c"",
                                                ""version"": ""v1.1"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                ""energyCost"": 280.0,
                                                ""fuelCost"": 0.0,
                                                ""inflationRate"": 6.9,
                                                ""initialSalaryCost"": 1500.0,
                                                ""maintenanceCost"": 600.0,
                                                ""salaryCost"": 2000.0,
                                                ""trainingCost"": 350.0,
                                                ""unplannedMaintenance"": 390.0,
                                                ""wageRiseRate"": 3.0
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasDevelopmentCost"",
                                            ""properties"": {
                                                ""individualName"": ""camera_development_cost_1"",
                                                ""inputName"": ""camera development cost 1"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": """",
                                                ""uuid"": ""29188f9d-e87d-484d-a08c"",
                                                ""version"": ""v1.0"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                ""equipmentCost"": 850.0,
                                                ""inflationRate"": 6.9,
                                                ""initialSalaryCost"": 1500.0,
                                                ""salaryCost"": 2000.0,
                                                ""wageRiseRate"": 3.0
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasProcurementCost"",
                                            ""properties"": {
                                                ""individualName"": ""camera_procurement_cost_1"",
                                                ""inputName"": ""camera procurement cost 1"",
                                                ""owlVersion"": ""v1.0"",
                                                ""summary"": """",
                                                ""templateFrom"": """",
                                                ""uuid"": ""5612acf7-3012-4cec-96bd-2a4a5fc055ec"",
                                                ""version"": ""v1.1"",
                                                ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                                ""buyCost"": 15500.0
                                            },
                                            ""objectProperties"": []
                                        }
                                    ]
                                },
                                {
                                    ""name"": ""hasFunction"",
                                    ""properties"": {
                                        ""individualName"": ""f2"",
                                        ""inputName"": ""f2"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_function"",
                                        ""uuid"": ""64178968-h8ds-h49a-19364m5g415"",
                                        ""version"": ""v1.0"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""1 / distanceLensToObject"",
                                                ""hasOrder"": 1,
                                                ""hasOutput"": ""out1"",
                                                ""hasParameter1"": ""1"",
                                                ""hasParameter2"": ""distanceLensToObject""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""Diagonal sensor * Viewing distance"",
                                                ""hasOrder"": 10,
                                                ""hasOutput"": ""out10"",
                                                ""hasParameter1"": ""out9"",
                                                ""hasParameter2"": ""viewingDistance""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Multiplication""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""Diagonal sensor * Viewing distance * CoC percentage"",
                                                ""hasOrder"": 11,
                                                ""hasOutput"": ""out11"",
                                                ""hasParameter1"": ""out10"",
                                                ""hasParameter2"": ""cocPercentage""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Multiplication""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(Diag. sensor * Viewing dist. * CoC percentage) / Sensor Res."",
                                                ""hasOrder"": 12,
                                                ""hasOutput"": ""out12"",
                                                ""hasParameter1"": ""out11"",
                                                ""hasParameter2"": ""out13""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""Number of pixels horizontally * Number of pixels vertically"",
                                                ""hasOrder"": 13,
                                                ""hasOutput"": ""out13"",
                                                ""hasParameter1"": ""out23"",
                                                ""hasParameter2"": ""out24""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Multiplication""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""Focal length ^ 2"",
                                                ""hasOrder"": 14,
                                                ""hasOutput"": ""out14"",
                                                ""hasParameter1"": ""out4"",
                                                ""hasParameter2"": ""2""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Power""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(N * C)\nN = aperture"",
                                                ""hasOrder"": 15,
                                                ""hasOutput"": ""out15"",
                                                ""hasParameter1"": ""out5"",
                                                ""hasParameter2"": ""out12""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Multiplication""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(f ^ 2) / (N * C)"",
                                                ""hasOrder"": 16,
                                                ""hasOutput"": ""out16"",
                                                ""hasParameter1"": ""out14"",
                                                ""hasParameter2"": ""out15""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""d ^ 2"",
                                                ""hasOrder"": 17,
                                                ""hasOutput"": ""out17"",
                                                ""hasParameter1"": ""distanceLensToObject"",
                                                ""hasParameter2"": ""2""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Power""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(2 * N)"",
                                                ""hasOrder"": 18,
                                                ""hasOutput"": ""out18"",
                                                ""hasParameter1"": ""2"",
                                                ""hasParameter2"": ""out5""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Multiplication""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(2 * N * C)"",
                                                ""hasOrder"": 19,
                                                ""hasOutput"": ""out19"",
                                                ""hasParameter1"": ""out18"",
                                                ""hasParameter2"": ""out12""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Multiplication""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""1 / distLensToSensor"",
                                                ""hasOrder"": 2,
                                                ""hasOutput"": ""out2"",
                                                ""hasParameter1"": ""1"",
                                                ""hasParameter2"": ""distanceLensToSensor""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(2 * N * C * (d^2))"",
                                                ""hasOrder"": 20,
                                                ""hasOutput"": ""out20"",
                                                ""hasParameter1"": ""out19"",
                                                ""hasParameter2"": ""out17""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Multiplication""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(f^2) * D"",
                                                ""hasOrder"": 21,
                                                ""hasOutput"": ""out21"",
                                                ""hasParameter1"": ""out14"",
                                                ""hasParameter2"": ""out16""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Multiplication""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(2 * N * C * (d^2)) / ((f^2) * D)"",
                                                ""hasOrder"": 22,
                                                ""hasOutput"": ""out22"",
                                                ""hasParameter1"": ""out20"",
                                                ""hasParameter2"": ""out21""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""Resolution width / Pixel Size"",
                                                ""hasOrder"": 23,
                                                ""hasOutput"": ""out23"",
                                                ""hasParameter1"": ""resolutionWidth"",
                                                ""hasParameter2"": ""pixelSize""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""Resolution height / Pixel Size"",
                                                ""hasOrder"": 24,
                                                ""hasOutput"": ""out24"",
                                                ""hasParameter1"": ""resolutionHeight"",
                                                ""hasParameter2"": ""pixelSize""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""(1 / distLensToSensor – 1 / distLensToObject)"",
                                                ""hasOrder"": 3,
                                                ""hasOutput"": ""out3"",
                                                ""hasParameter1"": ""out1"",
                                                ""hasParameter2"": ""out2""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Subtraction""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""1 / (1 / distLensToSensor – 1 / distLensToObject)"",
                                                ""hasOrder"": 4,
                                                ""hasOutput"": ""out4"",
                                                ""hasParameter1"": ""1"",
                                                ""hasParameter2"": ""out3""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""focal length / lens diameter"",
                                                ""hasOrder"": 5,
                                                ""hasOutput"": ""out5"",
                                                ""hasParameter1"": ""out4"",
                                                ""hasParameter2"": ""lensDiameter""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Division""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""sensor width ^ 2"",
                                                ""hasOrder"": 6,
                                                ""hasOutput"": ""out6"",
                                                ""hasParameter1"": ""sensorWidth"",
                                                ""hasParameter2"": ""2""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Power""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""sensor height ^ 2"",
                                                ""hasOrder"": 7,
                                                ""hasOutput"": ""out7"",
                                                ""hasParameter1"": ""sensorHeight"",
                                                ""hasParameter2"": ""2""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Power""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""sensor width ^ 2 + sensor height ^ 2"",
                                                ""hasOrder"": 8,
                                                ""hasOutput"": ""out8"",
                                                ""hasParameter1"": ""out6"",
                                                ""hasParameter2"": ""out7""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""Addition""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasEquation"",
                                            ""properties"": {
                                                ""comment"": ""sqrt (sensor width ^ 2 + sensor height ^ 2)"",
                                                ""hasOrder"": 9,
                                                ""hasOutput"": ""out9"",
                                                ""hasParameter1"": ""2"",
                                                ""hasParameter2"": ""out8""
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasMathOperation"",
                                                    ""properties"": {
                                                        ""hasMathOperation"": ""MathRoot""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasType"",
                                            ""properties"": {
                                                ""hasType"": ""FunctionTypeCoverage""
                                            },
                                            ""objectProperties"": []
                                        }
                                    ]
                                },
                                {
                                    ""name"": ""hasAssetAcquisition"",
                                    ""properties"": {
                                        ""individualName"": ""camera_1_asset_acquisition"",
                                        ""inputName"": ""camera 1 asset acquisition"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_asset_acquisition"",
                                        ""uuid"": ""b6a249ee-b707-403d-b8dd"",
                                        ""version"": ""v1.0"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasMaturity"",
                                            ""properties"": {
                                                ""hasMaturity"": ""InUse""
                                            },
                                            ""objectProperties"": []
                                        }
                                    ]
                                },
                                {
                                    ""name"": ""hasAssetIdentification"",
                                    ""properties"": {
                                        ""hasInventories"": ""[200, 250]"",
                                        ""hasOrigin"": ""200"",
                                        ""hasType"": ""9"",
                                        ""individualName"": ""camera_1_asset_identification"",
                                        ""inputName"": ""camera 1 asset identification"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": """",
                                        ""uuid"": ""53a15a66-79bf-40e5-89fd"",
                                        ""version"": ""v1.0"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasCategory"",
                                            ""properties"": {
                                                ""hasCategory"": ""Ground""
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasIcon"",
                                            ""properties"": {
                                                ""hasIcon"": ""Unknown""
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasLevel"",
                                            ""properties"": {
                                                ""hasLevel"": ""System""
                                            },
                                            ""objectProperties"": []
                                        },
                                        {
                                            ""name"": ""hasNature"",
                                            ""properties"": {
                                                ""hasNature"": ""Hardware""
                                            },
                                            ""objectProperties"": []
                                        }
                                    ]
                                },
                                {
                                    ""name"": ""hasCapabilities"",
                                    ""properties"": {
                                        ""communications"": """",
                                        ""detectability"": 50.0,
                                        ""identification"": 20.0,
                                        ""individualName"": ""camera_asset_capabilities"",
                                        ""inputName"": ""camera asset capabilities"",
                                        ""interoperability"": 1.0,
                                        ""maintenanceTime"": 18000.0,
                                        ""meanTimeBetweenFailures"": 70.0,
                                        ""meanTimeToRepair"": 800.0,
                                        ""operationalRange"": 23000.0,
                                        ""operationalSpeed"": 0.0,
                                        ""operationalTime"": 1800000.0,
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_asset_capabilities"",
                                        ""upgradeability"": 0.1,
                                        ""uuid"": ""38e8f902-2b9a-46ec-8f76"",
                                        ""version"": ""v1.1"",
                                        ""vulnerability"": 7750.0,
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                    },
                                    ""objectProperties"": []
                                },
                                {
                                    ""name"": ""hasSizeWeight"",
                                    ""properties"": {
                                        ""height"": 0.05,
                                        ""individualName"": ""camera_1_size_weight"",
                                        ""inputName"": ""camera 1 size weight"",
                                        ""length"": 0.12,
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": """",
                                        ""uuid"": ""72f8665c-d041-4b5c-a2a7"",
                                        ""version"": ""v1.0"",
                                        ""weight"": 0.3,
                                        ""width"": 0.08,
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                    },
                                    ""objectProperties"": []
                                },
                                {
                                    ""name"": ""hasAssetRules"",
                                    ""properties"": {
                                        ""individualName"": ""cameraAssetRules"",
                                        ""inputName"": ""cameraAssetRules"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": """",
                                        ""uuid"": ""69d84984-93a4-481b-a95b-12e6eafda3e1"",
                                        ""version"": ""v1.1"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00""
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""aperture"",
                                                ""mandatory"": ""yes"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""circleOfConfusion"",
                                                ""mandatory"": ""yes"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""cocPercentage"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 100.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""depthOfField"",
                                                ""mandatory"": ""yes"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""diagonalOfSensor"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""distanceLensToObject"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""distanceLensToSensor"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""farFOVHorizontal"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""farFOVVertical"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""focalLength"",
                                                ""mandatory"": ""yes"",
                                                ""maxDoubleValue"": 600.0,
                                                ""minDoubleValue"": 1.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""hyperfocalDistance"",
                                                ""mandatory"": ""yes"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""lensDiameter"",
                                                ""mandatory"": ""no"",
                                                ""maxDoubleValue"": 400.0,
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""nearFOVHorizontal"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""nearFOVVertical"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""pixelSize"",
                                                ""mandatory"": ""no"",
                                                ""maxDoubleValue"": 11.0,
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""resolutionHeight"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""resolutionWidth"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""sensorHeight"",
                                                ""mandatory"": ""no"",
                                                ""maxDoubleValue"": 100.0,
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""sensorResolution"",
                                                ""mandatory"": ""yes"",
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""sensorWidth"",
                                                ""mandatory"": ""no"",
                                                ""maxDoubleValue"": 100.0,
                                                ""minDoubleValue"": 0.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        },
                                        {
                                            ""name"": ""hasRule"",
                                            ""properties"": {
                                                ""datapropertyName"": ""viewingDistance"",
                                                ""mandatory"": ""no"",
                                                ""minDoubleValue"": 5.0
                                            },
                                            ""objectProperties"": [
                                                {
                                                    ""name"": ""hasDataType"",
                                                    ""properties"": {
                                                        ""hasDataType"": ""double""
                                                    },
                                                    ""objectProperties"": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    ""name"": ""hasInstallationConstraint"",
                                    ""properties"": {
                                        ""individualName"": ""installationConstraint2"",
                                        ""inputName"": ""installationConstraint2"",
                                        ""owlVersion"": ""v1.0"",
                                        ""summary"": """",
                                        ""templateFrom"": ""template_installation_constraint"",
                                        ""uuid"": ""75a2db26-6098-43b6-ba54-f2c0ba09c648"",
                                        ""version"": ""v1.1"",
                                        ""dateCreated"": ""2023-10-23T15:30:00+00:00"",
                                        ""hasInstallationParameter1"": ""cameraInstance"",
                                        ""hasInstallationParameter2"": ""ship_instance_1""
                                    },
                                    ""objectProperties"": [
                                        {
                                            ""name"": ""hasConstraintDefinition"",
                                            ""properties"": {
                                                ""hasConstraintDefinition"": ""canBePlacedOn""
                                            },
                                            ""objectProperties"": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}"
nMTy8vQm,POS-14,d-shaktiranjan,Bash,Friday 15th of December 2023 03:36:22 AM CDT,"shakti ➜ base 
❯ mka bacon -6

15:03:49 ************************************************************
15:03:49 You are building on a machine with 13.6GB of RAM
15:03:49 
15:03:49 The minimum required amount of free memory is around 16GB,
15:03:49 and even with that, some configurations may not work.
15:03:49 
15:03:49 If you run into segfaults or other errors, try reducing your
15:03:49 -j value.
15:03:49 ************************************************************
vendor/aosp/config/bootanimation.mk:10: warning: ""TARGET_BOOT_ANIMATION_RES is undefined, assuming 1080p""
date: bad date 2023-12-15 09:33 UTC
============================================
PLATFORM_VERSION_CODENAME=REL
PLATFORM_VERSION=14
CUSTOM_VERSION=PixelOS_redwood-14.0-20231215-0933
PRODUCT_INCLUDE_TAGS=com.android.mainline
TARGET_PRODUCT=aosp_redwood
TARGET_BUILD_VARIANT=userdebug
TARGET_ARCH=arm64
TARGET_ARCH_VARIANT=armv8-2a
TARGET_CPU_VARIANT=generic
TARGET_2ND_ARCH=arm
TARGET_2ND_ARCH_VARIANT=armv8-a
TARGET_2ND_CPU_VARIANT=generic
HOST_OS=linux
HOST_OS_EXTRA=Linux-6.6.6-200.fc39.x86_64-x86_64-Fedora-Linux-39-(Workstation-Edition)
HOST_CROSS_OS=windows
BUILD_ID=UQ1A.231205.015
OUT_DIR=out
============================================
[100% 1026/1026] analyzing Android.bp files and generating ninja file at out/soong/build.ninja
FAILED: out/soong/build.ninja
cd ""$(dirname ""out/host/linux-x86/bin/soong_build"")"" && BUILDER=""$PWD/$(basename ""out/host/linux-x86/bin/soong_build"")"" && cd / && env -i  ""$BUILDER""     --top ""$TOP""     --soong_out ""out/so
ong""     --out ""out""     -o out/soong/build.ninja --bazel-mode --globListDir build --globFile out/soong/globs-build.ninja -t -l out/.module_paths/Android.bp.list --available_env out/soong/so
ong.environment.available --used_env out/soong/soong.environment.used.build Android.bp
error: frameworks/base/boot/Android.bp:56:1: ""platform-bootclasspath"" depends on undefined module ""WfdCommon"".
Or did you mean [""NeneCommon"" ""iw_common"" ""tv-common""]?
15:04:46 soong bootstrap failed with: exit status 1

#### failed to build some targets (58 seconds) ####
"
0ZCLrFy9,X-Currency Bulgarian lev with Multiple Symbol,breakoutcoder,PHP,Friday 15th of December 2023 02:42:11 AM CDT,"add_filter(
    'x_currency_selected_currency', function( \stdClass $currency ) {
        if ( $currency->code !== 'BGN' ) {
            return $currency;
        }

        $symbols = [
            'en' => 'BGN', // English language symbol
            'bg' => 'лв',  // Български language symbol
        ];

        $selected_language = weglot_get_current_language();

        if ( isset( $symbols[$selected_language] ) ) {
            $currency->symbol = $symbols[$selected_language];
        }

        return $currency;
    }
);"
akWD1Ni1,Scammers and Spammers [12-2/2023],bombaires,AIMMS,Friday 15th of December 2023 02:37:50 AM CDT,"<a href=""mailto:fredgrenville@aliyun.com"">fredgrenville@aliyun.com</a>
<a href=""mailto:a9c5118e-a7b5-4eab-8a39-6e979a750f03@identity-protect.org"">a9c5118e-a7b5-4eab-8a39-6e979a750f03@identity-protect.org</a>
<a href=""mailto:grenvillefred@gmail.com"">grenvillefred@gmail.com</a>
<a href=""mailto:gr.en.v.ill.e.fred@gmail.com"">gr.en.v.ill.e.fred@gmail.com</a>
<a href=""mailto:gr.en.vil.lefr.e.d@gmail.com"">gr.en.vil.lefr.e.d@gmail.com</a>
<a href=""mailto:gre.n.vi.ll.e.fr.ed@gmail.com"">gre.n.vi.ll.e.fr.ed@gmail.com</a>
<a href=""mailto:gr.e.n.vil.l.e.f.r.ed@gmail.com"">gr.e.n.vil.l.e.f.r.ed@gmail.com</a>
<a href=""mailto:g.r.e.nv.illef.r.e.d@gmail.com"">g.r.e.nv.illef.r.e.d@gmail.com</a>
<a href=""mailto:g.re.nv.il.le.f.r.ed@gmail.com"">g.re.nv.il.le.f.r.ed@gmail.com</a>
<a href=""mailto:gr.en.vi.ll.efred@gmail.com"">gr.en.vi.ll.efred@gmail.com</a>
<a href=""mailto:gr.envi.l.lefre.d@gmail.com"">gr.envi.l.lefre.d@gmail.com</a>
<a href=""mailto:g.r.env.i.llefr.e.d@gmail.com"">g.r.env.i.llefr.e.d@gmail.com</a>
<a href=""mailto:gre.n.vil.l.e.f.red@gmail.com"">gre.n.vil.l.e.f.red@gmail.com</a>
<a href=""mailto:gre.nvi.llef.re.d@gmail.com"">gre.nvi.llef.re.d@gmail.com</a>
<a href=""mailto:gre.nvi.l.l.ef.re.d@gmail.com"">gre.nvi.l.l.ef.re.d@gmail.com</a>
<a href=""mailto:grenv.ill.e.f.re.d@gmail.com"">grenv.ill.e.f.re.d@gmail.com</a>
<a href=""mailto:gre.n.vi.llef.r.e.d@gmail.com"">gre.n.vi.llef.r.e.d@gmail.com</a>
<a href=""mailto:gr.e.nv.il.l.e.fr.e.d@gmail.com"">gr.e.nv.il.l.e.fr.e.d@gmail.com</a>
<a href=""mailto:gre.nvill.ef.r.ed@gmail.com"">gre.nvill.ef.r.ed@gmail.com</a>
<a href=""mailto:g.r.e.n.vi.l.l.efr.ed@gmail.com"">g.r.e.n.vi.l.l.efr.ed@gmail.com</a>
<a href=""mailto:gren.vill.efred@gmail.com"">gren.vill.efred@gmail.com</a>
<a href=""mailto:grenv.i.lle.fre.d@gmail.com"">grenv.i.lle.fre.d@gmail.com</a>
<a href=""mailto:g.r.en.v.i.ll.e.fr.e.d@gmail.com"">g.r.en.v.i.ll.e.fr.e.d@gmail.com</a>
<a href=""mailto:gre.n.vi.ll.e.f.red@gmail.com"">gre.n.vi.ll.e.f.red@gmail.com</a>
<a href=""mailto:g.re.nv.i.llef.r.ed@gmail.com"">g.re.nv.i.llef.r.ed@gmail.com</a>
<a href=""mailto:g.ren.vil.lefr.e.d@gmail.com"">g.ren.vil.lefr.e.d@gmail.com</a>
<a href=""mailto:g.r.en.v.ill.ef.re.d@gmail.com"">g.r.en.v.ill.ef.re.d@gmail.com</a>
<a href=""mailto:grenv.il.l.e.f.r.e.d@gmail.com"">grenv.il.l.e.f.r.e.d@gmail.com</a>
<a href=""mailto:g.ren.vi.l.le.f.r.e.d@gmail.com"">g.ren.vi.l.le.f.r.e.d@gmail.com</a>
<a href=""mailto:g.r.e.nv.il.lef.r.ed@gmail.com"">g.r.e.nv.il.lef.r.ed@gmail.com</a>
<a href=""mailto:gre.nvi.l.l.e.fr.e.d@gmail.com"">gre.nvi.l.l.e.fr.e.d@gmail.com</a>
<a href=""mailto:gren.v.ill.e.f.re.d@gmail.com"">gren.v.ill.e.f.re.d@gmail.com</a>
<a href=""mailto:gre.nv.illefr.ed@gmail.com"">gre.nv.illefr.ed@gmail.com</a>
<a href=""mailto:g.re.nv.il.lefred@gmail.com"">g.re.nv.il.lefred@gmail.com</a>
<a href=""mailto:gre.nv.i.ll.e.f.r.ed@gmail.com"">gre.nv.i.ll.e.f.r.ed@gmail.com</a>
<a href=""mailto:grenv.i.ll.e.fr.e.d@gmail.com"">grenv.i.ll.e.fr.e.d@gmail.com</a>
<a href=""mailto:gr.en.v.ille.fr.e.d@gmail.com"">gr.en.v.ille.fr.e.d@gmail.com</a>
<a href=""mailto:gren.vil.lef.re.d@gmail.com"">gren.vil.lef.re.d@gmail.com</a>
<a href=""mailto:g.re.nv.i.l.l.efred@gmail.com"">g.re.nv.i.l.l.efred@gmail.com</a>
<a href=""mailto:gr.env.i.llef.r.e.d@gmail.com"">gr.env.i.llef.r.e.d@gmail.com</a>
<a href=""mailto:g.ren.v.ill.efred@gmail.com"">g.ren.v.ill.efred@gmail.com</a>
<a href=""mailto:gr.e.nv.i.l.lefr.ed@gmail.com"">gr.e.nv.i.l.lefr.ed@gmail.com</a>
<a href=""mailto:g.r.en.v.ill.e.f.r.ed@gmail.com"">g.r.en.v.ill.e.f.r.ed@gmail.com</a>
<a href=""mailto:g.ren.vil.lefr.ed@gmail.com"">g.ren.vil.lefr.ed@gmail.com</a>
<a href=""mailto:gre.nvil.lefre.d@gmail.com"">gre.nvil.lefre.d@gmail.com</a>
<a href=""mailto:gr.e.n.v.il.lefr.e.d@gmail.com"">gr.e.n.v.il.lefr.e.d@gmail.com</a>
<a href=""mailto:gre.nvil.le.f.re.d@gmail.com"">gre.nvil.le.f.re.d@gmail.com</a>
<a href=""mailto:gren.villef.r.ed@gmail.com"">gren.villef.r.ed@gmail.com</a>
<a href=""mailto:g.renv.i.ll.e.fre.d@gmail.com"">g.renv.i.ll.e.fre.d@gmail.com</a>
<a href=""mailto:gr.e.nvil.l.efr.e.d@gmail.com"">gr.e.nvil.l.efr.e.d@gmail.com</a>
<a href=""mailto:gr.en.vi.lle.fre.d@gmail.com"">gr.en.vi.lle.fre.d@gmail.com</a>
<a href=""mailto:gr.env.i.l.l.efre.d@gmail.com"">gr.env.i.l.l.efre.d@gmail.com</a>
<a href=""mailto:gr.en.vil.l.e.fr.ed@gmail.com"">gr.en.vil.l.e.fr.ed@gmail.com</a>
<a href=""mailto:gren.vi.ll.e.fr.e.d@gmail.com"">gren.vi.ll.e.fr.e.d@gmail.com</a>
<a href=""mailto:grenvil.lefr.e.d@gmail.com"">grenvil.lefr.e.d@gmail.com</a>
<a href=""mailto:g.ren.v.il.l.e.fre.d@gmail.com"">g.ren.v.il.l.e.fre.d@gmail.com</a>
<a href=""mailto:gre.n.vi.llefred@gmail.com"">gre.n.vi.llefred@gmail.com</a>
<a href=""mailto:g.r.en.vi.l.lefre.d@gmail.com"">g.r.en.vi.l.lefre.d@gmail.com</a>
<a href=""mailto:g.re.n.vi.ll.e.fr.ed@gmail.com"">g.re.n.vi.ll.e.fr.ed@gmail.com</a>
<a href=""mailto:g.r.env.il.l.efr.e.d@gmail.com"">g.r.env.il.l.efr.e.d@gmail.com</a>
<a href=""mailto:gr.e.n.v.i.ll.e.fred@gmail.com"">gr.e.n.v.i.ll.e.fred@gmail.com</a>
<a href=""mailto:g.r.env.il.le.f.re.d@gmail.com"">g.r.env.il.le.f.re.d@gmail.com</a>
<a href=""mailto:g.renvi.lle.f.r.e.d@gmail.com"">g.renvi.lle.f.r.e.d@gmail.com</a>
<a href=""mailto:gre.n.v.illef.r.ed@gmail.com"">gre.n.v.illef.r.ed@gmail.com</a>
<a href=""mailto:g.ren.v.i.lle.f.r.e.d@gmail.com"">g.ren.v.i.lle.f.r.e.d@gmail.com</a>
<a href=""mailto:gr.en.vi.l.lefr.ed@gmail.com"">gr.en.vi.l.lefr.ed@gmail.com</a>
<a href=""mailto:g.r.en.v.il.l.efred@gmail.com"">g.r.en.v.il.l.efred@gmail.com</a>
<a href=""mailto:g.r.e.nv.i.l.l.ef.re.d@gmail.com"">g.r.e.nv.i.l.l.ef.re.d@gmail.com</a>
<a href=""mailto:g.ren.vill.ef.red@gmail.com"">g.ren.vill.ef.red@gmail.com</a>
<a href=""mailto:grenvill.ef.re.d@gmail.com"">grenvill.ef.re.d@gmail.com</a>
<a href=""mailto:g.re.nvi.ll.ef.r.ed@gmail.com"">g.re.nvi.ll.ef.r.ed@gmail.com</a>
<a href=""mailto:g.r.env.i.l.le.fre.d@gmail.com"">g.r.env.i.l.le.fre.d@gmail.com</a>
<a href=""mailto:gr.envil.lefred@gmail.com"">gr.envil.lefred@gmail.com</a>
<a href=""mailto:g.ren.ville.f.r.ed@gmail.com"">g.ren.ville.f.r.ed@gmail.com</a>
<a href=""mailto:gr.e.nvi.l.lef.re.d@gmail.com"">gr.e.nvi.l.lef.re.d@gmail.com</a>
<a href=""mailto:g.r.env.i.l.l.efr.e.d@gmail.com"">g.r.env.i.l.l.efr.e.d@gmail.com</a>
<a href=""mailto:g.r.e.n.vi.lle.f.r.e.d@gmail.com"">g.r.e.n.vi.lle.f.r.e.d@gmail.com</a>
<a href=""mailto:g.re.nvi.l.lef.re.d@gmail.com"">g.re.nvi.l.lef.re.d@gmail.com</a>
<a href=""mailto:grenv.ill.e.fre.d@gmail.com"">grenv.ill.e.fre.d@gmail.com</a>
<a href=""mailto:gr.e.nvi.l.le.f.re.d@gmail.com"">gr.e.nvi.l.le.f.re.d@gmail.com</a>
<a href=""mailto:g.re.n.ville.f.red@gmail.com"">g.re.n.ville.f.red@gmail.com</a>
<a href=""mailto:grenv.i.llefre.d@gmail.com"">grenv.i.llefre.d@gmail.com</a>
<a href=""mailto:g.re.n.v.i.l.l.ef.r.e.d@gmail.com"">g.re.n.v.i.l.l.ef.r.e.d@gmail.com</a>
<a href=""mailto:gr.envil.lef.re.d@gmail.com"">gr.envil.lef.re.d@gmail.com</a>
<a href=""mailto:gr.en.v.i.ll.e.fred@gmail.com"">gr.en.v.i.ll.e.fred@gmail.com</a>
<a href=""mailto:gren.v.i.llef.red@gmail.com"">gren.v.i.llef.red@gmail.com</a>
<a href=""mailto:g.r.env.il.l.e.f.r.e.d@gmail.com"">g.r.env.il.l.e.f.r.e.d@gmail.com</a>
<a href=""mailto:g.r.e.nv.i.l.l.ef.r.ed@gmail.com"">g.r.e.nv.i.l.l.ef.r.ed@gmail.com</a>
<a href=""mailto:gren.vi.lle.fred@gmail.com"">gren.vi.lle.fred@gmail.com</a>
<a href=""mailto:gr.env.ill.e.f.re.d@gmail.com"">gr.env.ill.e.f.re.d@gmail.com</a>
<a href=""mailto:g.re.nvil.lef.r.ed@gmail.com"">g.re.nvil.lef.r.ed@gmail.com</a>
<a href=""mailto:gr.en.v.i.ll.e.f.red@gmail.com"">gr.en.v.i.ll.e.f.red@gmail.com</a>
<a href=""mailto:gre.n.ville.f.r.ed@gmail.com"">gre.n.ville.f.r.ed@gmail.com</a>
<a href=""mailto:g.re.nv.ill.efre.d@gmail.com"">g.re.nv.ill.efre.d@gmail.com</a>
<a href=""mailto:gren.v.i.llef.re.d@gmail.com"">gren.v.i.llef.re.d@gmail.com</a>
<a href=""mailto:g.renv.ill.e.fr.ed@gmail.com"">g.renv.ill.e.fr.ed@gmail.com</a>
<a href=""mailto:g.renvi.lle.f.red@gmail.com"">g.renvi.lle.f.red@gmail.com</a>
<a href=""mailto:g.ren.v.i.l.l.efr.ed@gmail.com"">g.ren.v.i.l.l.efr.ed@gmail.com</a>
<a href=""mailto:g.r.e.n.vil.l.e.f.r.ed@gmail.com"">g.r.e.n.vil.l.e.f.r.ed@gmail.com</a>
<a href=""mailto:g.re.n.v.i.lle.fr.e.d@gmail.com"">g.re.n.v.i.lle.fr.e.d@gmail.com</a>
<a href=""mailto:g.renvi.ll.e.f.r.ed@gmail.com"">g.renvi.ll.e.f.r.ed@gmail.com</a>
<a href=""mailto:g.r.env.i.l.le.f.r.ed@gmail.com"">g.r.env.i.l.le.f.r.ed@gmail.com</a>
<a href=""mailto:gr.e.nvil.l.e.fred@gmail.com"">gr.e.nvil.l.e.fred@gmail.com</a>
<a href=""mailto:gr.en.v.il.lef.red@gmail.com"">gr.en.v.il.lef.red@gmail.com</a>
<a href=""mailto:gr.envi.l.le.fre.d@gmail.com"">gr.envi.l.le.fre.d@gmail.com</a>
<a href=""mailto:grenville.f.re.d@gmail.com"">grenville.f.re.d@gmail.com</a>
<a href=""mailto:gren.vill.ef.r.e.d@gmail.com"">gren.vill.ef.r.e.d@gmail.com</a>
<a href=""mailto:gren.vi.ll.ef.re.d@gmail.com"">gren.vi.ll.ef.re.d@gmail.com</a>
<a href=""mailto:g.r.en.vi.l.l.e.f.r.e.d@gmail.com"">g.r.en.vi.l.l.e.f.r.e.d@gmail.com</a>
<a href=""mailto:gre.nv.ill.e.fr.e.d@gmail.com"">gre.nv.ill.e.fr.e.d@gmail.com</a>
<a href=""mailto:gr.env.i.lle.f.re.d@gmail.com"">gr.env.i.lle.f.re.d@gmail.com</a>
<a href=""mailto:gren.vill.efr.e.d@gmail.com"">gren.vill.efr.e.d@gmail.com</a>
<a href=""mailto:g.r.envi.ll.efre.d@gmail.com"">g.r.envi.ll.efre.d@gmail.com</a>
<a href=""mailto:gr.env.i.l.l.efr.e.d@gmail.com"">gr.env.i.l.l.efr.e.d@gmail.com</a>
<a href=""mailto:g.r.e.nvi.llefre.d@gmail.com"">g.r.e.nvi.llefre.d@gmail.com</a>
<a href=""mailto:grenvi.l.lef.r.ed@gmail.com"">grenvi.l.lef.r.ed@gmail.com</a>
<a href=""mailto:g.r.e.n.v.i.lle.f.re.d@gmail.com"">g.r.e.n.v.i.lle.f.re.d@gmail.com</a>
<a href=""mailto:g.re.n.v.ill.efre.d@gmail.com"">g.re.n.v.ill.efre.d@gmail.com</a>
<a href=""mailto:gre.nv.ille.f.r.ed@gmail.com"">gre.nv.ille.f.r.ed@gmail.com</a>
<a href=""mailto:gren.vi.ll.efr.e.d@gmail.com"">gren.vi.ll.efr.e.d@gmail.com</a>
<a href=""mailto:gre.n.v.il.l.e.fr.e.d@gmail.com"">gre.n.v.il.l.e.fr.e.d@gmail.com</a>
<a href=""mailto:g.r.e.n.v.ill.ef.r.e.d@gmail.com"">g.r.e.n.v.ill.ef.r.e.d@gmail.com</a>
<a href=""mailto:gre.nv.i.l.lef.re.d@gmail.com"">gre.nv.i.l.lef.re.d@gmail.com</a>
<a href=""mailto:gr.en.vi.lle.f.red@gmail.com"">gr.en.vi.lle.f.red@gmail.com</a>
<a href=""mailto:g.re.n.v.ill.e.fre.d@gmail.com"">g.re.n.v.ill.e.fre.d@gmail.com</a>
<a href=""mailto:g.re.n.vil.l.efr.e.d@gmail.com"">g.re.n.vil.l.efr.e.d@gmail.com</a>
<a href=""mailto:grenvillefr.e.d@gmail.com"">grenvillefr.e.d@gmail.com</a>
<a href=""mailto:grenvi.ll.efr.ed@gmail.com"">grenvi.ll.efr.ed@gmail.com</a>
<a href=""mailto:grenvil.le.fred@gmail.com"">grenvil.le.fred@gmail.com</a>
<a href=""mailto:gr.e.n.vil.lef.r.ed@gmail.com"">gr.e.n.vil.lef.r.ed@gmail.com</a>
<a href=""mailto:g.r.e.n.vi.l.l.e.f.re.d@gmail.com"">g.r.e.n.vi.l.l.e.f.re.d@gmail.com</a>
<a href=""mailto:gr.enville.f.r.e.d@gmail.com"">gr.enville.f.r.e.d@gmail.com</a>
<a href=""mailto:gr.e.nv.il.l.efr.e.d@gmail.com"">gr.e.nv.il.l.efr.e.d@gmail.com</a>
<a href=""mailto:g.r.en.v.il.lefre.d@gmail.com"">g.r.en.v.il.lefre.d@gmail.com</a>
<a href=""mailto:g.renvil.l.efr.e.d@gmail.com"">g.renvil.l.efr.e.d@gmail.com</a>
<a href=""mailto:g.r.enville.fre.d@gmail.com"">g.r.enville.fre.d@gmail.com</a>
<a href=""mailto:gren.v.i.ll.e.fre.d@gmail.com"">gren.v.i.ll.e.fre.d@gmail.com</a>
<a href=""mailto:gre.nvil.l.ef.r.e.d@gmail.com"">gre.nvil.l.ef.r.e.d@gmail.com</a>
<a href=""mailto:g.ren.vill.e.fr.ed@gmail.com"">g.ren.vill.e.fr.ed@gmail.com</a>
<a href=""mailto:grenv.ille.fre.d@gmail.com"">grenv.ille.fre.d@gmail.com</a>
<a href=""mailto:gr.e.nv.il.lef.re.d@gmail.com"">gr.e.nv.il.lef.re.d@gmail.com</a>
<a href=""mailto:g.ren.vil.lef.red@gmail.com"">g.ren.vil.lef.red@gmail.com</a>
<a href=""mailto:grenv.i.lle.fr.ed@gmail.com"">grenv.i.lle.fr.ed@gmail.com</a>
<a href=""mailto:g.r.e.n.v.il.lefr.e.d@gmail.com"">g.r.e.n.v.il.lefr.e.d@gmail.com</a>
<a href=""mailto:g.r.e.n.vil.le.f.r.ed@gmail.com"">g.r.e.n.vil.le.f.r.ed@gmail.com</a>
<a href=""mailto:gr.en.vi.lle.f.r.ed@gmail.com"">gr.en.vi.lle.f.r.ed@gmail.com</a>
<a href=""mailto:g.r.envil.l.e.f.red@gmail.com"">g.r.envil.l.e.f.red@gmail.com</a>
<a href=""mailto:gre.nv.i.lle.f.r.e.d@gmail.com"">gre.nv.i.lle.f.r.e.d@gmail.com</a>
<a href=""mailto:gr.e.n.vil.l.ef.red@gmail.com"">gr.e.n.vil.l.ef.red@gmail.com</a>
<a href=""mailto:gr.en.vi.l.l.efred@gmail.com"">gr.en.vi.l.l.efred@gmail.com</a>
<a href=""mailto:g.r.e.nv.ille.fr.ed@gmail.com"">g.r.e.nv.ille.fr.ed@gmail.com</a>
<a href=""mailto:g.re.nvil.le.f.r.ed@gmail.com"">g.re.nvil.le.f.r.ed@gmail.com</a>
<a href=""mailto:g.r.en.vi.l.l.e.fr.e.d@gmail.com"">g.r.en.vi.l.l.e.fr.e.d@gmail.com</a>
<a href=""mailto:g.re.nvill.e.fre.d@gmail.com"">g.re.nvill.e.fre.d@gmail.com</a>
<a href=""mailto:g.re.n.vi.l.lefr.e.d@gmail.com"">g.re.n.vi.l.lefr.e.d@gmail.com</a>
<a href=""mailto:gr.e.n.vil.lefr.ed@gmail.com"">gr.e.n.vil.lefr.ed@gmail.com</a>
<a href=""mailto:g.re.nvil.le.fred@gmail.com"">g.re.nvil.le.fred@gmail.com</a>
<a href=""mailto:g.r.e.n.vi.l.l.e.f.r.e.d@gmail.com"">g.r.e.n.vi.l.l.e.f.r.e.d@gmail.com</a>
<a href=""mailto:gr.e.n.vi.l.l.efred@gmail.com"">gr.e.n.vi.l.l.efred@gmail.com</a>
<a href=""mailto:gr.e.nvil.lefr.ed@gmail.com"">gr.e.nvil.lefr.ed@gmail.com</a>
<a href=""mailto:g.re.nv.i.llefre.d@gmail.com"">g.re.nv.i.llefre.d@gmail.com</a>
<a href=""mailto:g.r.en.v.illef.r.ed@gmail.com"">g.r.en.v.illef.r.ed@gmail.com</a>
<a href=""mailto:gr.e.nv.ill.e.fre.d@gmail.com"">gr.e.nv.ill.e.fre.d@gmail.com</a>
<a href=""mailto:g.re.nv.ill.ef.r.e.d@gmail.com"">g.re.nv.ill.ef.r.e.d@gmail.com</a>
<a href=""mailto:g.r.env.il.lefr.e.d@gmail.com"">g.r.env.il.lefr.e.d@gmail.com</a>
<a href=""mailto:g.r.envi.ll.e.f.r.e.d@gmail.com"">g.r.envi.ll.e.f.r.e.d@gmail.com</a>
<a href=""mailto:g.renv.i.llef.r.ed@gmail.com"">g.renv.i.llef.r.ed@gmail.com</a>
<a href=""mailto:gr.env.i.lle.f.r.e.d@gmail.com"">gr.env.i.lle.f.r.e.d@gmail.com</a>
<a href=""mailto:gr.e.n.v.il.le.fr.e.d@gmail.com"">gr.e.n.v.il.le.fr.e.d@gmail.com</a>
<a href=""mailto:g.r.e.n.v.i.l.l.e.fr.ed@gmail.com"">g.r.e.n.v.i.l.l.e.fr.ed@gmail.com</a>
<a href=""mailto:g.ren.v.illef.r.ed@gmail.com"">g.ren.v.illef.r.ed@gmail.com</a>
<a href=""mailto:g.re.nv.i.lle.fred@gmail.com"">g.re.nv.i.lle.fred@gmail.com</a>
<a href=""mailto:gr.e.n.vil.le.f.re.d@gmail.com"">gr.e.n.vil.le.f.re.d@gmail.com</a>
<a href=""mailto:gr.e.n.vi.l.l.e.fre.d@gmail.com"">gr.e.n.vi.l.l.e.fre.d@gmail.com</a>
<a href=""mailto:gren.vi.l.l.e.f.red@gmail.com"">gren.vi.l.l.e.f.red@gmail.com</a>
<a href=""mailto:grenville.fr.ed@gmail.com"">grenville.fr.ed@gmail.com</a>
<a href=""mailto:g.r.en.v.i.l.le.f.r.e.d@gmail.com"">g.r.en.v.i.l.le.f.r.e.d@gmail.com</a>
<a href=""mailto:gre.n.vi.l.le.f.r.e.d@gmail.com"">gre.n.vi.l.le.f.r.e.d@gmail.com</a>
<a href=""mailto:g.re.nvi.l.l.e.f.re.d@gmail.com"">g.re.nvi.l.l.e.f.re.d@gmail.com</a>
<a href=""mailto:gre.nvi.l.lefr.ed@gmail.com"">gre.nvi.l.lefr.ed@gmail.com</a>
<a href=""mailto:gr.en.vil.l.ef.r.e.d@gmail.com"">gr.en.vil.l.ef.r.e.d@gmail.com</a>
<a href=""mailto:g.ren.vi.lle.fr.ed@gmail.com"">g.ren.vi.lle.fr.ed@gmail.com</a>
<a href=""mailto:gr.enville.fred@gmail.com"">gr.enville.fred@gmail.com</a>
<a href=""mailto:g.renv.i.ll.ef.re.d@gmail.com"">g.renv.i.ll.ef.re.d@gmail.com</a>
<a href=""mailto:g.r.e.nville.f.r.ed@gmail.com"">g.r.e.nville.f.r.ed@gmail.com</a>
<a href=""mailto:g.re.n.v.i.l.lef.r.ed@gmail.com"">g.re.n.v.i.l.lef.r.ed@gmail.com</a>
<a href=""mailto:g.re.nvillef.red@gmail.com"">g.re.nvillef.red@gmail.com</a>
<a href=""mailto:gre.n.v.ill.e.fr.ed@gmail.com"">gre.n.v.ill.e.fr.ed@gmail.com</a>
<a href=""mailto:grenvi.ll.efr.e.d@gmail.com"">grenvi.ll.efr.e.d@gmail.com</a>
<a href=""mailto:gr.e.nvi.l.le.f.r.ed@gmail.com"">gr.e.nvi.l.le.f.r.ed@gmail.com</a>
<a href=""mailto:g.r.envill.ef.r.e.d@gmail.com"">g.r.envill.ef.r.e.d@gmail.com</a>
<a href=""mailto:gr.e.n.vi.l.le.fre.d@gmail.com"">gr.e.n.vi.l.le.fre.d@gmail.com</a>
<a href=""mailto:gr.en.v.illefr.ed@gmail.com"">gr.en.v.illefr.ed@gmail.com</a>
<a href=""mailto:g.renv.i.ll.e.fr.e.d@gmail.com"">g.renv.i.ll.e.fr.e.d@gmail.com</a>
<a href=""mailto:g.r.e.n.vil.l.e.fr.ed@gmail.com"">g.r.e.n.vil.l.e.fr.ed@gmail.com</a>
<a href=""mailto:g.r.e.n.v.il.le.f.red@gmail.com"">g.r.e.n.v.il.le.f.red@gmail.com</a>
<a href=""mailto:gr.e.nv.il.l.e.f.r.e.d@gmail.com"">gr.e.nv.il.l.e.f.r.e.d@gmail.com</a>
<a href=""mailto:gr.e.n.vil.l.e.fr.e.d@gmail.com"">gr.e.n.vil.l.e.fr.e.d@gmail.com</a>
<a href=""mailto:g.r.en.vi.ll.e.fr.ed@gmail.com"">g.r.en.vi.ll.e.fr.ed@gmail.com</a>
<a href=""mailto:grenv.i.l.lef.r.e.d@gmail.com"">grenv.i.l.lef.r.e.d@gmail.com</a>
<a href=""mailto:g.r.en.villef.re.d@gmail.com"">g.r.en.villef.re.d@gmail.com</a>
<a href=""mailto:g.r.e.n.vil.lef.r.e.d@gmail.com"">g.r.e.n.vil.lef.r.e.d@gmail.com</a>
<a href=""mailto:g.renv.il.l.e.fr.ed@gmail.com"">g.renv.il.l.e.fr.ed@gmail.com</a>
<a href=""mailto:vince.starlight@gmail.com"">vince.starlight@gmail.com</a>
<a href=""mailto:v.ince.sta.r.ligh.t@gmail.com"">v.ince.sta.r.ligh.t@gmail.com</a>
<a href=""mailto:v.i.nce.st.a.rlig.h.t@gmail.com"">v.i.nce.st.a.rlig.h.t@gmail.com</a>
<a href=""mailto:vi.nc.e..st.ar.l.i.g.h.t@gmail.com"">vi.nc.e..st.ar.l.i.g.h.t@gmail.com</a>
<a href=""mailto:vinc.e..starlig.h.t@gmail.com"">vinc.e..starlig.h.t@gmail.com</a>
<a href=""mailto:vi.nce...s.t.arligh.t@gmail.com"">vi.nce...s.t.arligh.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e...star.l.ig.h.t@gmail.com"">v.i.n.c.e...star.l.ig.h.t@gmail.com</a>
<a href=""mailto:v.ince...s.tar.l.ig.ht@gmail.com"">v.ince...s.tar.l.ig.ht@gmail.com</a>
<a href=""mailto:v.ince..st.ar.l.i.ght@gmail.com"">v.ince..st.ar.l.i.ght@gmail.com</a>
<a href=""mailto:vin.c.e...s.tar.l.i.gh.t@gmail.com"">vin.c.e...s.tar.l.i.gh.t@gmail.com</a>
<a href=""mailto:v.ince..s.ta.r.ligh.t@gmail.com"">v.ince..s.ta.r.ligh.t@gmail.com</a>
<a href=""mailto:v.in.c.e..s.t.a.r.l.ight@gmail.com"">v.in.c.e..s.t.a.r.l.ight@gmail.com</a>
<a href=""mailto:v.i.nce...starl.i.ght@gmail.com"">v.i.nce...starl.i.ght@gmail.com</a>
<a href=""mailto:v.i.nce...sta.rli.gh.t@gmail.com"">v.i.nce...sta.rli.gh.t@gmail.com</a>
<a href=""mailto:vin.c.e..s.t.a.r.l.ight@gmail.com"">vin.c.e..s.t.a.r.l.ight@gmail.com</a>
<a href=""mailto:vi.nce..st.a.r.l.i.g.ht@gmail.com"">vi.nce..st.a.r.l.i.g.ht@gmail.com</a>
<a href=""mailto:vin.ce...s.t.arl.i.g.h.t@gmail.com"">vin.ce...s.t.arl.i.g.h.t@gmail.com</a>
<a href=""mailto:v.in.c.e...st.a.r.li.ght@gmail.com"">v.in.c.e...st.a.r.li.ght@gmail.com</a>
<a href=""mailto:vince..star.l.i.g.h.t@gmail.com"">vince..star.l.i.g.h.t@gmail.com</a>
<a href=""mailto:vin.ce.s.tarli.g.h.t@gmail.com"">vin.ce.s.tarli.g.h.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e..s.t.arligh.t@gmail.com"">v.i.n.c.e..s.t.arligh.t@gmail.com</a>
<a href=""mailto:v.in.ce.st.arl.igh.t@gmail.com"">v.in.ce.st.arl.igh.t@gmail.com</a>
<a href=""mailto:vi.n.c.e...s.ta.r.l.igh.t@gmail.com"">vi.n.c.e...s.ta.r.l.igh.t@gmail.com</a>
<a href=""mailto:vi.nc.e...s.t.a.r.l.i.g.ht@gmail.com"">vi.nc.e...s.t.a.r.l.i.g.ht@gmail.com</a>
<a href=""mailto:v.inc.e..s.t.ar.li.ght@gmail.com"">v.inc.e..s.t.ar.li.ght@gmail.com</a>
<a href=""mailto:vin.ce..s.tarl.i.g.h.t@gmail.com"">vin.ce..s.tarl.i.g.h.t@gmail.com</a>
<a href=""mailto:vinc.e...s.t.a.r.l.ig.ht@gmail.com"">vinc.e...s.t.a.r.l.ig.ht@gmail.com</a>
<a href=""mailto:vinc.e..sta.r.li.ght@gmail.com"">vinc.e..sta.r.li.ght@gmail.com</a>
<a href=""mailto:v.inc.e..s.ta.rl.ig.ht@gmail.com"">v.inc.e..s.ta.rl.ig.ht@gmail.com</a>
<a href=""mailto:v.i.nc.e..s.t.arli.ght@gmail.com"">v.i.nc.e..s.t.arli.ght@gmail.com</a>
<a href=""mailto:v.i.n.c.e.st.a.r.li.gh.t@gmail.com"">v.i.n.c.e.st.a.r.li.gh.t@gmail.com</a>
<a href=""mailto:v.i.n.ce..star.l.ig.ht@gmail.com"">v.i.n.ce..star.l.ig.ht@gmail.com</a>
<a href=""mailto:v.i.n.c.e.s.t.arligh.t@gmail.com"">v.i.n.c.e.s.t.arligh.t@gmail.com</a>
<a href=""mailto:vin.ce..s.ta.rlig.ht@gmail.com"">vin.ce..s.ta.rlig.ht@gmail.com</a>
<a href=""mailto:v.in.c.e..star.l.ig.ht@gmail.com"">v.in.c.e..star.l.ig.ht@gmail.com</a>
<a href=""mailto:vi.nc.e...star.li.ght@gmail.com"">vi.nc.e...star.li.ght@gmail.com</a>
<a href=""mailto:v.in.c.e.st.arli.ght@gmail.com"">v.in.c.e.st.arli.ght@gmail.com</a>
<a href=""mailto:v.inc.e..s.ta.rlig.h.t@gmail.com"">v.inc.e..s.ta.rlig.h.t@gmail.com</a>
<a href=""mailto:vi.nc.e..sta.rl.ight@gmail.com"">vi.nc.e..sta.rl.ight@gmail.com</a>
<a href=""mailto:v.inc.e...st.a.rl.i.ght@gmail.com"">v.inc.e...st.a.rl.i.ght@gmail.com</a>
<a href=""mailto:v.i.n.ce..s.t.a.r.l.ight@gmail.com"">v.i.n.ce..s.t.a.r.l.ight@gmail.com</a>
<a href=""mailto:vinc.e.s.tarl.i.g.ht@gmail.com"">vinc.e.s.tarl.i.g.ht@gmail.com</a>
<a href=""mailto:vi.n.ce..s.ta.rl.i.ght@gmail.com"">vi.n.ce..s.ta.rl.i.ght@gmail.com</a>
<a href=""mailto:v.i.n.c.e..st.ar.li.g.h.t@gmail.com"">v.i.n.c.e..st.ar.li.g.h.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e..st.a.rli.gh.t@gmail.com"">v.i.n.c.e..st.a.rli.gh.t@gmail.com</a>
<a href=""mailto:vinc.e..st.ar.l.i.g.h.t@gmail.com"">vinc.e..st.ar.l.i.g.h.t@gmail.com</a>
<a href=""mailto:vinc.e...sta.r.li.ght@gmail.com"">vinc.e...sta.r.li.ght@gmail.com</a>
<a href=""mailto:vi.nce..st.a.rligh.t@gmail.com"">vi.nce..st.a.rligh.t@gmail.com</a>
<a href=""mailto:v.i.nc.e..s.t.ar.lig.h.t@gmail.com"">v.i.nc.e..s.t.ar.lig.h.t@gmail.com</a>
<a href=""mailto:v.inc.e..st.arli.gh.t@gmail.com"">v.inc.e..st.arli.gh.t@gmail.com</a>
<a href=""mailto:v.i.nce..s.t.arlig.ht@gmail.com"">v.i.nce..s.t.arlig.ht@gmail.com</a>
<a href=""mailto:vi.nc.e..s.t.arl.i.g.ht@gmail.com"">vi.nc.e..s.t.arl.i.g.ht@gmail.com</a>
<a href=""mailto:v.i.nce..star.li.ght@gmail.com"">v.i.nce..star.li.ght@gmail.com</a>
<a href=""mailto:v.i.n.c.e..st.ar.li.g.ht@gmail.com"">v.i.n.c.e..st.ar.li.g.ht@gmail.com</a>
<a href=""mailto:vi.nc.e..s.tar.li.ght@gmail.com"">vi.nc.e..s.tar.li.ght@gmail.com</a>
<a href=""mailto:v.inc.e.s.t.arlig.ht@gmail.com"">v.inc.e.s.t.arlig.ht@gmail.com</a>
<a href=""mailto:vinc.e..starlig.ht@gmail.com"">vinc.e..starlig.ht@gmail.com</a>
<a href=""mailto:v.inc.e..st.ar.li.g.h.t@gmail.com"">v.inc.e..st.ar.li.g.h.t@gmail.com</a>
<a href=""mailto:vi.nc.e..s.tarli.gh.t@gmail.com"">vi.nc.e..s.tarli.gh.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e...st.arl.i.g.ht@gmail.com"">v.i.n.c.e...st.arl.i.g.ht@gmail.com</a>
<a href=""mailto:v.ince..s.ta.r.lig.ht@gmail.com"">v.ince..s.ta.r.lig.ht@gmail.com</a>
<a href=""mailto:vin.ce..starli.ght@gmail.com"">vin.ce..starli.ght@gmail.com</a>
<a href=""mailto:v.i.nc.e..starli.gh.t@gmail.com"">v.i.nc.e..starli.gh.t@gmail.com</a>
<a href=""mailto:v.i.nc.e.s.tarlight@gmail.com"">v.i.nc.e.s.tarlight@gmail.com</a>
<a href=""mailto:v.i.n.ce.st.a.rlig.h.t@gmail.com"">v.i.n.ce.st.a.rlig.h.t@gmail.com</a>
<a href=""mailto:vin.ce..s.ta.rlight@gmail.com"">vin.ce..s.ta.rlight@gmail.com</a>
<a href=""mailto:v.i.nc.e...s.t.arl.i.g.h.t@gmail.com"">v.i.nc.e...s.t.arl.i.g.h.t@gmail.com</a>
<a href=""mailto:v.in.ce..sta.rl.i.g.h.t@gmail.com"">v.in.ce..sta.rl.i.g.h.t@gmail.com</a>
<a href=""mailto:v.inc.e.s.ta.r.l.i.ght@gmail.com"">v.inc.e.s.ta.r.l.i.ght@gmail.com</a>
<a href=""mailto:v.inc.e..s.t.ar.l.i.ght@gmail.com"">v.inc.e..s.t.ar.l.i.ght@gmail.com</a>
<a href=""mailto:vinc.e.s.tar.l.i.g.h.t@gmail.com"">vinc.e.s.tar.l.i.g.h.t@gmail.com</a>
<a href=""mailto:v.i.nce.s.ta.rl.i.gh.t@gmail.com"">v.i.nce.s.ta.rl.i.gh.t@gmail.com</a>
<a href=""mailto:vi.nce..s.t.arli.gh.t@gmail.com"">vi.nce..s.t.arli.gh.t@gmail.com</a>
<a href=""mailto:v.i.n.ce..sta.rl.i.g.h.t@gmail.com"">v.i.n.ce..sta.rl.i.g.h.t@gmail.com</a>
<a href=""mailto:v.in.c.e..s.ta.rl.ight@gmail.com"">v.in.c.e..s.ta.rl.ight@gmail.com</a>
<a href=""mailto:vinc.e...s.t.ar.l.ight@gmail.com"">vinc.e...s.t.ar.l.ight@gmail.com</a>
<a href=""mailto:vi.n.c.e...s.t.a.r.lig.h.t@gmail.com"">vi.n.c.e...s.t.a.r.lig.h.t@gmail.com</a>
<a href=""mailto:v.in.c.e.s.t.a.rl.ig.ht@gmail.com"">v.in.c.e.s.t.a.rl.ig.ht@gmail.com</a>
<a href=""mailto:vin.ce...st.arlig.h.t@gmail.com"">vin.ce...st.arlig.h.t@gmail.com</a>
<a href=""mailto:v.in.c.e.s.t.ar.l.i.gh.t@gmail.com"">v.in.c.e.s.t.ar.l.i.gh.t@gmail.com</a>
<a href=""mailto:v.i.n.ce..s.t.a.r.li.g.ht@gmail.com"">v.i.n.ce..s.t.a.r.li.g.ht@gmail.com</a>
<a href=""mailto:v.i.n.c.e..star.l.i.gh.t@gmail.com"">v.i.n.c.e..star.l.i.gh.t@gmail.com</a>
<a href=""mailto:vince..st.arl.igh.t@gmail.com"">vince..st.arl.igh.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e..s.ta.rl.ig.ht@gmail.com"">v.i.n.c.e..s.ta.rl.ig.ht@gmail.com</a>
<a href=""mailto:v.in.ce...s.ta.rlig.ht@gmail.com"">v.in.ce...s.ta.rlig.ht@gmail.com</a>
<a href=""mailto:vinc.e..s.ta.rl.igh.t@gmail.com"">vinc.e..s.ta.rl.igh.t@gmail.com</a>
<a href=""mailto:v.in.c.e...s.t.arli.g.ht@gmail.com"">v.in.c.e...s.t.arli.g.ht@gmail.com</a>
<a href=""mailto:v.i.nce.s.t.a.rl.i.g.ht@gmail.com"">v.i.nce.s.t.a.rl.i.g.ht@gmail.com</a>
<a href=""mailto:v.i.n.ce.s.t.arl.i.gh.t@gmail.com"">v.i.n.ce.s.t.arl.i.gh.t@gmail.com</a>
<a href=""mailto:v.i.n.ce..s.tar.l.i.ght@gmail.com"">v.i.n.ce..s.tar.l.i.ght@gmail.com</a>
<a href=""mailto:vi.n.c.e..starl.i.g.h.t@gmail.com"">vi.n.c.e..starl.i.g.h.t@gmail.com</a>
<a href=""mailto:v.i.nc.e..st.a.rlight@gmail.com"">v.i.nc.e..st.a.rlight@gmail.com</a>
<a href=""mailto:vin.ce..starlight@gmail.com"">vin.ce..starlight@gmail.com</a>
<a href=""mailto:vi.nce.s.ta.r.lig.ht@gmail.com"">vi.nce.s.ta.r.lig.ht@gmail.com</a>
<a href=""mailto:vi.nce..star.li.g.h.t@gmail.com"">vi.nce..star.li.g.h.t@gmail.com</a>
<a href=""mailto:vinc.e.s.t.ar.l.i.ght@gmail.com"">vinc.e.s.t.ar.l.i.ght@gmail.com</a>
<a href=""mailto:v.i.nce..s.ta.rli.g.ht@gmail.com"">v.i.nce..s.ta.rli.g.ht@gmail.com</a>
<a href=""mailto:v.i.n.ce..star.light@gmail.com"">v.i.n.ce..star.light@gmail.com</a>
<a href=""mailto:v.in.c.e..star.l.ight@gmail.com"">v.in.c.e..star.l.ight@gmail.com</a>
<a href=""mailto:v.i.n.c.e...sta.rli.gh.t@gmail.com"">v.i.n.c.e...sta.rli.gh.t@gmail.com</a>
<a href=""mailto:vin.ce...starl.ight@gmail.com"">vin.ce...starl.ight@gmail.com</a>
<a href=""mailto:vinc.e.s.tarl.igh.t@gmail.com"">vinc.e.s.tarl.igh.t@gmail.com</a>
<a href=""mailto:vi.n.ce..st.ar.light@gmail.com"">vi.n.ce..st.ar.light@gmail.com</a>
<a href=""mailto:v.inc.e...star.l.ight@gmail.com"">v.inc.e...star.l.ight@gmail.com</a>
<a href=""mailto:v.inc.e...star.lig.h.t@gmail.com"">v.inc.e...star.lig.h.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e...st.ar.li.gh.t@gmail.com"">v.i.n.c.e...st.ar.li.gh.t@gmail.com</a>
<a href=""mailto:vince.st.a.rl.i.gh.t@gmail.com"">vince.st.a.rl.i.gh.t@gmail.com</a>
<a href=""mailto:vi.n.ce..s.ta.rl.igh.t@gmail.com"">vi.n.ce..s.ta.rl.igh.t@gmail.com</a>
<a href=""mailto:v.i.n.ce..s.t.arli.g.ht@gmail.com"">v.i.n.ce..s.t.arli.g.ht@gmail.com</a>
<a href=""mailto:vi.n.c.e...s.t.ar.l.ight@gmail.com"">vi.n.c.e...s.t.ar.l.ight@gmail.com</a>
<a href=""mailto:vinc.e...sta.rl.ig.ht@gmail.com"">vinc.e...sta.rl.ig.ht@gmail.com</a>
<a href=""mailto:vinc.e...s.t.arl.ig.h.t@gmail.com"">vinc.e...s.t.arl.ig.h.t@gmail.com</a>
<a href=""mailto:vi.nce...sta.r.l.i.g.ht@gmail.com"">vi.nce...sta.r.l.i.g.ht@gmail.com</a>
<a href=""mailto:v.i.nce..starli.g.ht@gmail.com"">v.i.nce..starli.g.ht@gmail.com</a>
<a href=""mailto:vince..s.t.arl.ig.h.t@gmail.com"">vince..s.t.arl.ig.h.t@gmail.com</a>
<a href=""mailto:v.ince..starl.i.ght@gmail.com"">v.ince..starl.i.ght@gmail.com</a>
<a href=""mailto:vi.nce..s.t.ar.l.i.g.ht@gmail.com"">vi.nce..s.t.ar.l.i.g.ht@gmail.com</a>
<a href=""mailto:vi.nc.e..starl.ig.ht@gmail.com"">vi.nc.e..starl.ig.ht@gmail.com</a>
<a href=""mailto:v.ince..sta.r.ligh.t@gmail.com"">v.ince..sta.r.ligh.t@gmail.com</a>
<a href=""mailto:v.in.c.e..s.t.ar.li.g.h.t@gmail.com"">v.in.c.e..s.t.ar.li.g.h.t@gmail.com</a>
<a href=""mailto:vin.c.e.st.ar.l.ight@gmail.com"">vin.c.e.st.ar.l.ight@gmail.com</a>
<a href=""mailto:vi.nce..s.t.a.r.lig.ht@gmail.com"">vi.nce..s.t.a.r.lig.ht@gmail.com</a>
<a href=""mailto:v.i.n.c.e..s.t.a.rl.i.ght@gmail.com"">v.i.n.c.e..s.t.a.rl.i.ght@gmail.com</a>
<a href=""mailto:v.i.n.ce..s.t.a.r.li.g.h.t@gmail.com"">v.i.n.ce..s.t.a.r.li.g.h.t@gmail.com</a>
<a href=""mailto:v.inc.e..s.tarligh.t@gmail.com"">v.inc.e..s.tarligh.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e.s.t.a.rlig.ht@gmail.com"">v.i.n.c.e.s.t.a.rlig.ht@gmail.com</a>
<a href=""mailto:vi.nc.e.sta.r.ligh.t@gmail.com"">vi.nc.e.sta.r.ligh.t@gmail.com</a>
<a href=""mailto:vi.nce..st.arl.ig.h.t@gmail.com"">vi.nce..st.arl.ig.h.t@gmail.com</a>
<a href=""mailto:v.i.n.ce.sta.rl.i.g.ht@gmail.com"">v.i.n.ce.sta.rl.i.g.ht@gmail.com</a>
<a href=""mailto:v.in.ce.st.a.r.li.gh.t@gmail.com"">v.in.ce.st.a.r.li.gh.t@gmail.com</a>
<a href=""mailto:v.ince..starli.g.h.t@gmail.com"">v.ince..starli.g.h.t@gmail.com</a>
<a href=""mailto:vi.n.ce..starl.ig.ht@gmail.com"">vi.n.ce..starl.ig.ht@gmail.com</a>
<a href=""mailto:vince..s.ta.r.lig.h.t@gmail.com"">vince..s.ta.r.lig.h.t@gmail.com</a>
<a href=""mailto:v.in.ce..s.ta.r.l.i.gh.t@gmail.com"">v.in.ce..s.ta.r.l.i.gh.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e.st.a.r.l.ig.h.t@gmail.com"">v.i.n.c.e.st.a.r.l.ig.h.t@gmail.com</a>
<a href=""mailto:v.i.nce..sta.r.l.ig.ht@gmail.com"">v.i.nce..sta.r.l.ig.ht@gmail.com</a>
<a href=""mailto:v.ince..s.t.arl.i.ght@gmail.com"">v.ince..s.t.arl.i.ght@gmail.com</a>
<a href=""mailto:v.inc.e..s.ta.rl.i.g.ht@gmail.com"">v.inc.e..s.ta.rl.i.g.ht@gmail.com</a>
<a href=""mailto:v.inc.e.st.arl.i.ght@gmail.com"">v.inc.e.st.arl.i.ght@gmail.com</a>
<a href=""mailto:v.in.ce..s.ta.rl.i.ght@gmail.com"">v.in.ce..s.ta.rl.i.ght@gmail.com</a>
<a href=""mailto:vi.nc.e..st.arligh.t@gmail.com"">vi.nc.e..st.arligh.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e..s.t.ar.lig.ht@gmail.com"">v.i.n.c.e..s.t.ar.lig.ht@gmail.com</a>
<a href=""mailto:v.ince...s.tarli.gh.t@gmail.com"">v.ince...s.tarli.gh.t@gmail.com</a>
<a href=""mailto:v.i.nce..starligh.t@gmail.com"">v.i.nce..starligh.t@gmail.com</a>
<a href=""mailto:vi.nce...s.ta.rli.gh.t@gmail.com"">vi.nce...s.ta.rli.gh.t@gmail.com</a>
<a href=""mailto:v.ince...st.ar.li.ght@gmail.com"">v.ince...st.ar.li.ght@gmail.com</a>
<a href=""mailto:v.i.nc.e..st.arl.ight@gmail.com"">v.i.nc.e..st.arl.ight@gmail.com</a>
<a href=""mailto:v.in.c.e..star.light@gmail.com"">v.in.c.e..star.light@gmail.com</a>
<a href=""mailto:vin.c.e..sta.r.l.ig.ht@gmail.com"">vin.c.e..sta.r.l.ig.ht@gmail.com</a>
<a href=""mailto:v.ince.st.arlight@gmail.com"">v.ince.st.arlight@gmail.com</a>
<a href=""mailto:v.inc.e..sta.r.l.ight@gmail.com"">v.inc.e..sta.r.l.ight@gmail.com</a>
<a href=""mailto:vince..s.t.a.rlig.ht@gmail.com"">vince..s.t.a.rlig.ht@gmail.com</a>
<a href=""mailto:v.ince..s.t.a.rli.gh.t@gmail.com"">v.ince..s.t.a.rli.gh.t@gmail.com</a>
<a href=""mailto:vi.n.c.e...s.ta.r.lig.ht@gmail.com"">vi.n.c.e...s.ta.r.lig.ht@gmail.com</a>
<a href=""mailto:vi.n.c.e..st.arlig.ht@gmail.com"">vi.n.c.e..st.arlig.ht@gmail.com</a>
<a href=""mailto:v.i.n.c.e.s.t.a.rl.ig.ht@gmail.com"">v.i.n.c.e.s.t.a.rl.ig.ht@gmail.com</a>
<a href=""mailto:v.in.ce.st.a.r.l.ig.h.t@gmail.com"">v.in.ce.st.a.r.l.ig.h.t@gmail.com</a>
<a href=""mailto:vin.ce...sta.rl.igh.t@gmail.com"">vin.ce...sta.rl.igh.t@gmail.com</a>
<a href=""mailto:v.ince...s.tar.lig.h.t@gmail.com"">v.ince...s.tar.lig.h.t@gmail.com</a>
<a href=""mailto:v.inc.e..s.tar.l.i.gh.t@gmail.com"">v.inc.e..s.tar.l.i.gh.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e.sta.r.l.i.gh.t@gmail.com"">v.i.n.c.e.sta.r.l.i.gh.t@gmail.com</a>
<a href=""mailto:v.i.nc.e.st.arl.i.g.h.t@gmail.com"">v.i.nc.e.st.arl.i.g.h.t@gmail.com</a>
<a href=""mailto:v.i.n.ce..s.t.a.r.lig.h.t@gmail.com"">v.i.n.ce..s.t.a.r.lig.h.t@gmail.com</a>
<a href=""mailto:vin.ce...starlight@gmail.com"">vin.ce...starlight@gmail.com</a>
<a href=""mailto:vinc.e...s.ta.rlight@gmail.com"">vinc.e...s.ta.rlight@gmail.com</a>
<a href=""mailto:v.ince...s.tarligh.t@gmail.com"">v.ince...s.tarligh.t@gmail.com</a>
<a href=""mailto:v.ince..s.ta.rl.i.ght@gmail.com"">v.ince..s.ta.rl.i.ght@gmail.com</a>
<a href=""mailto:vi.n.c.e..s.tarl.ig.h.t@gmail.com"">vi.n.c.e..s.tarl.ig.h.t@gmail.com</a>
<a href=""mailto:vi.n.ce..st.a.r.l.ig.h.t@gmail.com"">vi.n.ce..st.a.r.l.ig.h.t@gmail.com</a>
<a href=""mailto:vin.ce.st.arlig.ht@gmail.com"">vin.ce.st.arlig.ht@gmail.com</a>
<a href=""mailto:vi.n.c.e..s.tarligh.t@gmail.com"">vi.n.c.e..s.tarligh.t@gmail.com</a>
<a href=""mailto:v.in.ce..s.tar.li.gh.t@gmail.com"">v.in.ce..s.tar.li.gh.t@gmail.com</a>
<a href=""mailto:vin.c.e..s.ta.r.li.ght@gmail.com"">vin.c.e..s.ta.r.li.ght@gmail.com</a>
<a href=""mailto:vi.nc.e.star.ligh.t@gmail.com"">vi.nc.e.star.ligh.t@gmail.com</a>
<a href=""mailto:v.i.nc.e.s.tarlig.ht@gmail.com"">v.i.nc.e.s.tarlig.ht@gmail.com</a>
<a href=""mailto:v.in.c.e...s.t.a.rl.i.gh.t@gmail.com"">v.in.c.e...s.t.a.rl.i.gh.t@gmail.com</a>
<a href=""mailto:vi.n.c.e..s.t.a.r.l.ig.ht@gmail.com"">vi.n.c.e..s.t.a.r.l.ig.ht@gmail.com</a>
<a href=""mailto:vi.n.c.e.st.a.r.l.i.ght@gmail.com"">vi.n.c.e.st.a.r.l.i.ght@gmail.com</a>
<a href=""mailto:v.ince..s.tar.li.g.h.t@gmail.com"">v.ince..s.tar.li.g.h.t@gmail.com</a>
<a href=""mailto:v.in.ce..st.ar.li.ght@gmail.com"">v.in.ce..st.ar.li.ght@gmail.com</a>
<a href=""mailto:v.i.n.c.e...starl.i.gh.t@gmail.com"">v.i.n.c.e...starl.i.gh.t@gmail.com</a>
<a href=""mailto:vi.n.c.e.sta.r.li.g.ht@gmail.com"">vi.n.c.e.sta.r.li.g.ht@gmail.com</a>
<a href=""mailto:vi.nce..starl.ig.ht@gmail.com"">vi.nce..starl.ig.ht@gmail.com</a>
<a href=""mailto:vin.ce..s.ta.rl.ight@gmail.com"">vin.ce..s.ta.rl.ight@gmail.com</a>
<a href=""mailto:v.i.nce.s.t.arli.g.h.t@gmail.com"">v.i.nce.s.t.arli.g.h.t@gmail.com</a>
<a href=""mailto:vin.ce..star.ligh.t@gmail.com"">vin.ce..star.ligh.t@gmail.com</a>
<a href=""mailto:v.i.n.c.e.s.tar.l.igh.t@gmail.com"">v.i.n.c.e.s.tar.l.igh.t@gmail.com</a>
<a href=""mailto:v.in.c.e..sta.rl.igh.t@gmail.com"">v.in.c.e..sta.rl.igh.t@gmail.com</a>
<a href=""mailto:v.in.ce..sta.rl.i.g.h.t@gmail.com"">v.in.ce..sta.rl.i.g.h.t@gmail.com</a>
<a href=""mailto:v.in.c.e...s.t.ar.l.ight@gmail.com"">v.in.c.e...s.t.ar.l.ight@gmail.com</a>
<a href=""mailto:v.i.n.ce.st.arli.gh.t@gmail.com"">v.i.n.ce.st.arli.gh.t@gmail.com</a>
<a href=""mailto:vin.c.e..st.ar.l.i.gh.t@gmail.com"">vin.c.e..st.ar.l.i.gh.t@gmail.com</a>
<a href=""mailto:v.i.nce.st.a.rl.ig.h.t@gmail.com"">v.i.nce.st.a.rl.ig.h.t@gmail.com</a>
<a href=""mailto:v.ince.st.a.rli.ght@gmail.com"">v.ince.st.a.rli.ght@gmail.com</a>
<a href=""mailto:vinc.e.s.tar.light@gmail.com"">vinc.e.s.tar.light@gmail.com</a>
<a href=""mailto:vin.c.e..star.l.ig.h.t@gmail.com"">vin.c.e..star.l.ig.h.t@gmail.com</a>
<a href=""mailto:v.inc.e..sta.r.li.gh.t@gmail.com"">v.inc.e..sta.r.li.gh.t@gmail.com</a>
<a href=""mailto:vinc.e...st.a.r.lig.ht@gmail.com"">vinc.e...st.a.r.lig.ht@gmail.com</a>
<a href=""mailto:vi.n.ce..s.t.ar.l.i.ght@gmail.com"">vi.n.ce..s.t.ar.l.i.ght@gmail.com</a>
<a href=""mailto:v.in.ce...s.tar.lig.h.t@gmail.com"">v.in.ce...s.tar.lig.h.t@gmail.com</a>
<a href=""mailto:v.inc.e..s.ta.r.l.ight@gmail.com"">v.inc.e..s.ta.r.l.ight@gmail.com</a>
<a href=""mailto:posteazy62@gmail.com"">posteazy62@gmail.com</a>
<a href=""mailto:po.st.ea.zy6.2@gmail.com"">po.st.ea.zy6.2@gmail.com</a>
<a href=""mailto:p.o.stea.z.y6.2@gmail.com"">p.o.stea.z.y6.2@gmail.com</a>
<a href=""mailto:p.o.steazy.62@gmail.com"">p.o.steazy.62@gmail.com</a>
<a href=""mailto:po.ste.azy62@gmail.com"">po.ste.azy62@gmail.com</a>
<a href=""mailto:po.s.teaz.y62@gmail.com"">po.s.teaz.y62@gmail.com</a>
<a href=""mailto:p.oste.azy62@gmail.com"">p.oste.azy62@gmail.com</a>
<a href=""mailto:po.s.t.ea.z.y62@gmail.com"">po.s.t.ea.z.y62@gmail.com</a>
<a href=""mailto:p.o.st.ea.z.y.62@gmail.com"">p.o.st.ea.z.y.62@gmail.com</a>
<a href=""mailto:pos.t.ea.zy62@gmail.com"">pos.t.ea.zy62@gmail.com</a>
<a href=""mailto:p.o.s.te.a.z.y.6.2@gmail.com"">p.o.s.te.a.z.y.6.2@gmail.com</a>
<a href=""mailto:p.o.ste.az.y.62@gmail.com"">p.o.ste.az.y.62@gmail.com</a>
<a href=""mailto:p.o.s.tea.zy6.2@gmail.com"">p.o.s.tea.zy6.2@gmail.com</a>
<a href=""mailto:po.s.tea.zy6.2@gmail.com"">po.s.tea.zy6.2@gmail.com</a>
<a href=""mailto:p.os.teazy62@gmail.com"">p.os.teazy62@gmail.com</a>
<a href=""mailto:p.o.s.t.e.az.y6.2@gmail.com"">p.o.s.t.e.az.y6.2@gmail.com</a>
<a href=""mailto:p.o.ste.a.zy62@gmail.com"">p.o.ste.a.zy62@gmail.com</a>
<a href=""mailto:p.osteaz.y6.2@gmail.com"">p.osteaz.y6.2@gmail.com</a>
<a href=""mailto:po.ste.a.z.y.6.2@gmail.com"">po.ste.a.z.y.6.2@gmail.com</a>
<a href=""mailto:po.s.te.a.zy.6.2@gmail.com"">po.s.te.a.zy.6.2@gmail.com</a>
<a href=""mailto:pos.t.eaz.y.6.2@gmail.com"">pos.t.eaz.y.6.2@gmail.com</a>
<a href=""mailto:p.os.t.e.a.zy62@gmail.com"">p.os.t.e.a.zy62@gmail.com</a>
<a href=""mailto:po.s.t.ea.z.y.6.2@gmail.com"">po.s.t.ea.z.y.6.2@gmail.com</a>
<a href=""mailto:p.os.te.a.zy.6.2@gmail.com"">p.os.te.a.zy.6.2@gmail.com</a>
<a href=""mailto:p.ost.e.az.y.6.2@gmail.com"">p.ost.e.az.y.6.2@gmail.com</a>
<a href=""mailto:p.os.t.eaz.y.6.2@gmail.com"">p.os.t.eaz.y.6.2@gmail.com</a>
<a href=""mailto:p.o.st.ea.zy62@gmail.com"">p.o.st.ea.zy62@gmail.com</a>
<a href=""mailto:p.os.teazy.6.2@gmail.com"">p.os.teazy.6.2@gmail.com</a>
<a href=""mailto:p.os.t.e.azy.62@gmail.com"">p.os.t.e.azy.62@gmail.com</a>
<a href=""mailto:post.e.a.zy.6.2@gmail.com"">post.e.a.zy.6.2@gmail.com</a>
<a href=""mailto:po.s.t.e.a.zy.6.2@gmail.com"">po.s.t.e.a.zy.6.2@gmail.com</a>
<a href=""mailto:po.s.te.azy.62@gmail.com"">po.s.te.azy.62@gmail.com</a>
<a href=""mailto:p.o.st.e.a.zy62@gmail.com"">p.o.st.e.a.zy62@gmail.com</a>
<a href=""mailto:po.s.te.azy.6.2@gmail.com"">po.s.te.azy.6.2@gmail.com</a>
<a href=""mailto:p.osteazy62@gmail.com"">p.osteazy62@gmail.com</a>
<a href=""mailto:p.os.te.a.z.y6.2@gmail.com"">p.os.te.a.z.y6.2@gmail.com</a>
<a href=""mailto:pos.t.e.a.zy62@gmail.com"">pos.t.e.a.zy62@gmail.com</a>
<a href=""mailto:poste.azy.62@gmail.com"">poste.azy.62@gmail.com</a>
<a href=""mailto:p.oste.a.zy62@gmail.com"">p.oste.a.zy62@gmail.com</a>
<a href=""mailto:poste.azy.6.2@gmail.com"">poste.azy.6.2@gmail.com</a>
<a href=""mailto:p.o.steazy62@gmail.com"">p.o.steazy62@gmail.com</a>
<a href=""mailto:p.o.stea.zy6.2@gmail.com"">p.o.stea.zy6.2@gmail.com</a>
<a href=""mailto:p.ost.eaz.y.62@gmail.com"">p.ost.eaz.y.62@gmail.com</a>
<a href=""mailto:p.os.te.a.zy62@gmail.com"">p.os.te.a.zy62@gmail.com</a>
<a href=""mailto:p.os.t.ea.zy.6.2@gmail.com"">p.os.t.ea.zy.6.2@gmail.com</a>
<a href=""mailto:p.ostea.zy.62@gmail.com"">p.ostea.zy.62@gmail.com</a>
<a href=""mailto:postea.zy62@gmail.com"">postea.zy62@gmail.com</a>
<a href=""mailto:posteazy.62@gmail.com"">posteazy.62@gmail.com</a>
<a href=""mailto:p.o.ste.azy62@gmail.com"">p.o.ste.azy62@gmail.com</a>
<a href=""mailto:po.s.t.ea.zy62@gmail.com"">po.s.t.ea.zy62@gmail.com</a>
<a href=""mailto:p.ostea.z.y.62@gmail.com"">p.ostea.z.y.62@gmail.com</a>
<a href=""mailto:p.o.ste.azy.6.2@gmail.com"">p.o.ste.azy.6.2@gmail.com</a>
<a href=""mailto:po.s.t.e.azy62@gmail.com"">po.s.t.e.azy62@gmail.com</a>
<a href=""mailto:po.st.ea.zy.62@gmail.com"">po.st.ea.zy.62@gmail.com</a>
<a href=""mailto:post.ea.zy.6.2@gmail.com"">post.ea.zy.6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.e.a.zy6.2@gmail.com"">p.o.s.t.e.a.zy6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.eazy.6.2@gmail.com"">p.o.s.t.eazy.6.2@gmail.com</a>
<a href=""mailto:po.st.eazy.62@gmail.com"">po.st.eazy.62@gmail.com</a>
<a href=""mailto:p.oste.az.y6.2@gmail.com"">p.oste.az.y6.2@gmail.com</a>
<a href=""mailto:po.s.t.e.az.y6.2@gmail.com"">po.s.t.e.az.y6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.ea.z.y6.2@gmail.com"">p.o.s.t.ea.z.y6.2@gmail.com</a>
<a href=""mailto:p.ost.ea.z.y62@gmail.com"">p.ost.ea.z.y62@gmail.com</a>
<a href=""mailto:p.ost.e.azy6.2@gmail.com"">p.ost.e.azy6.2@gmail.com</a>
<a href=""mailto:p.ost.e.a.z.y6.2@gmail.com"">p.ost.e.a.z.y6.2@gmail.com</a>
<a href=""mailto:po.ste.azy.62@gmail.com"">po.ste.azy.62@gmail.com</a>
<a href=""mailto:p.o.st.ea.zy.62@gmail.com"">p.o.st.ea.zy.62@gmail.com</a>
<a href=""mailto:post.eaz.y6.2@gmail.com"">post.eaz.y6.2@gmail.com</a>
<a href=""mailto:po.s.t.e.a.zy62@gmail.com"">po.s.t.e.a.zy62@gmail.com</a>
<a href=""mailto:p.ost.ea.zy.6.2@gmail.com"">p.ost.ea.zy.6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.ea.z.y.6.2@gmail.com"">p.o.s.t.ea.z.y.6.2@gmail.com</a>
<a href=""mailto:p.ostea.zy.6.2@gmail.com"">p.ostea.zy.6.2@gmail.com</a>
<a href=""mailto:p.o.s.te.az.y62@gmail.com"">p.o.s.te.az.y62@gmail.com</a>
<a href=""mailto:p.oste.az.y.62@gmail.com"">p.oste.az.y.62@gmail.com</a>
<a href=""mailto:p.osteaz.y62@gmail.com"">p.osteaz.y62@gmail.com</a>
<a href=""mailto:p.os.tea.z.y6.2@gmail.com"">p.os.tea.z.y6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.ea.z.y62@gmail.com"">p.o.s.t.ea.z.y62@gmail.com</a>
<a href=""mailto:post.e.a.zy62@gmail.com"">post.e.a.zy62@gmail.com</a>
<a href=""mailto:posteaz.y62@gmail.com"">posteaz.y62@gmail.com</a>
<a href=""mailto:poste.a.zy.62@gmail.com"">poste.a.zy.62@gmail.com</a>
<a href=""mailto:p.o.s.t.ea.zy.6.2@gmail.com"">p.o.s.t.ea.zy.6.2@gmail.com</a>
<a href=""mailto:p.os.teaz.y.62@gmail.com"">p.os.teaz.y.62@gmail.com</a>
<a href=""mailto:p.o.ste.a.zy6.2@gmail.com"">p.o.ste.a.zy6.2@gmail.com</a>
<a href=""mailto:post.e.azy.62@gmail.com"">post.e.azy.62@gmail.com</a>
<a href=""mailto:po.ste.azy6.2@gmail.com"">po.ste.azy6.2@gmail.com</a>
<a href=""mailto:p.o.st.ea.z.y62@gmail.com"">p.o.st.ea.z.y62@gmail.com</a>
<a href=""mailto:po.s.te.a.z.y.62@gmail.com"">po.s.te.a.z.y.62@gmail.com</a>
<a href=""mailto:post.ea.z.y.6.2@gmail.com"">post.ea.z.y.6.2@gmail.com</a>
<a href=""mailto:p.os.t.e.azy.6.2@gmail.com"">p.os.t.e.azy.6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.e.a.z.y6.2@gmail.com"">p.o.s.t.e.a.z.y6.2@gmail.com</a>
<a href=""mailto:po.steaz.y.62@gmail.com"">po.steaz.y.62@gmail.com</a>
<a href=""mailto:po.s.t.ea.zy6.2@gmail.com"">po.s.t.ea.zy6.2@gmail.com</a>
<a href=""mailto:p.os.teazy6.2@gmail.com"">p.os.teazy6.2@gmail.com</a>
<a href=""mailto:p.ost.e.az.y6.2@gmail.com"">p.ost.e.az.y6.2@gmail.com</a>
<a href=""mailto:p.o.s.teazy.6.2@gmail.com"">p.o.s.teazy.6.2@gmail.com</a>
<a href=""mailto:p.oste.azy.62@gmail.com"">p.oste.azy.62@gmail.com</a>
<a href=""mailto:p.osteazy.6.2@gmail.com"">p.osteazy.6.2@gmail.com</a>
<a href=""mailto:p.o.s.te.a.zy.6.2@gmail.com"">p.o.s.te.a.zy.6.2@gmail.com</a>
<a href=""mailto:p.o.s.teaz.y62@gmail.com"">p.o.s.teaz.y62@gmail.com</a>
<a href=""mailto:pos.teaz.y6.2@gmail.com"">pos.teaz.y6.2@gmail.com</a>
<a href=""mailto:pos.teaz.y.62@gmail.com"">pos.teaz.y.62@gmail.com</a>
<a href=""mailto:po.s.te.az.y6.2@gmail.com"">po.s.te.az.y6.2@gmail.com</a>
<a href=""mailto:p.os.t.ea.zy62@gmail.com"">p.os.t.ea.zy62@gmail.com</a>
<a href=""mailto:post.ea.zy6.2@gmail.com"">post.ea.zy6.2@gmail.com</a>
<a href=""mailto:po.st.e.a.z.y6.2@gmail.com"">po.st.e.a.z.y6.2@gmail.com</a>
<a href=""mailto:po.ste.a.z.y6.2@gmail.com"">po.ste.a.z.y6.2@gmail.com</a>
<a href=""mailto:p.o.ste.a.zy.6.2@gmail.com"">p.o.ste.a.zy.6.2@gmail.com</a>
<a href=""mailto:p.os.t.eaz.y.62@gmail.com"">p.os.t.eaz.y.62@gmail.com</a>
<a href=""mailto:pos.te.az.y.6.2@gmail.com"">pos.te.az.y.6.2@gmail.com</a>
<a href=""mailto:p.os.t.e.azy6.2@gmail.com"">p.os.t.e.azy6.2@gmail.com</a>
<a href=""mailto:po.s.tea.z.y.62@gmail.com"">po.s.tea.z.y.62@gmail.com</a>
<a href=""mailto:po.steazy.6.2@gmail.com"">po.steazy.6.2@gmail.com</a>
<a href=""mailto:po.s.teaz.y.6.2@gmail.com"">po.s.teaz.y.6.2@gmail.com</a>
<a href=""mailto:p.o.s.tea.zy.62@gmail.com"">p.o.s.tea.zy.62@gmail.com</a>
<a href=""mailto:p.o.st.e.a.zy.6.2@gmail.com"">p.o.st.e.a.zy.6.2@gmail.com</a>
<a href=""mailto:p.os.te.azy.6.2@gmail.com"">p.os.te.azy.6.2@gmail.com</a>
<a href=""mailto:pos.t.e.azy62@gmail.com"">pos.t.e.azy62@gmail.com</a>
<a href=""mailto:pos.te.az.y6.2@gmail.com"">pos.te.az.y6.2@gmail.com</a>
<a href=""mailto:pos.t.ea.z.y.62@gmail.com"">pos.t.ea.z.y.62@gmail.com</a>
<a href=""mailto:p.oste.a.zy.6.2@gmail.com"">p.oste.a.zy.6.2@gmail.com</a>
<a href=""mailto:po.ste.azy.6.2@gmail.com"">po.ste.azy.6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.eaz.y6.2@gmail.com"">p.o.s.t.eaz.y6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.e.azy.62@gmail.com"">p.o.s.t.e.azy.62@gmail.com</a>
<a href=""mailto:po.s.t.e.a.z.y6.2@gmail.com"">po.s.t.e.a.z.y6.2@gmail.com</a>
<a href=""mailto:p.ost.e.a.z.y62@gmail.com"">p.ost.e.a.z.y62@gmail.com</a>
<a href=""mailto:poste.az.y.6.2@gmail.com"">poste.az.y.6.2@gmail.com</a>
<a href=""mailto:po.ste.a.zy.62@gmail.com"">po.ste.a.zy.62@gmail.com</a>
<a href=""mailto:p.o.st.eaz.y.62@gmail.com"">p.o.st.eaz.y.62@gmail.com</a>
<a href=""mailto:p.o.s.te.a.z.y6.2@gmail.com"">p.o.s.te.a.z.y6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.ea.zy6.2@gmail.com"">p.o.s.t.ea.zy6.2@gmail.com</a>
<a href=""mailto:p.o.s.te.a.zy6.2@gmail.com"">p.o.s.te.a.zy6.2@gmail.com</a>
<a href=""mailto:p.o.steazy6.2@gmail.com"">p.o.steazy6.2@gmail.com</a>
<a href=""mailto:pos.t.e.az.y6.2@gmail.com"">pos.t.e.az.y6.2@gmail.com</a>
<a href=""mailto:postea.z.y.6.2@gmail.com"">postea.z.y.6.2@gmail.com</a>
<a href=""mailto:po.steaz.y.6.2@gmail.com"">po.steaz.y.6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.e.azy.6.2@gmail.com"">p.o.s.t.e.azy.6.2@gmail.com</a>
<a href=""mailto:poste.a.zy6.2@gmail.com"">poste.a.zy6.2@gmail.com</a>
<a href=""mailto:p.oste.a.z.y.62@gmail.com"">p.oste.a.z.y.62@gmail.com</a>
<a href=""mailto:p.os.te.a.zy.62@gmail.com"">p.os.te.a.zy.62@gmail.com</a>
<a href=""mailto:post.e.azy.6.2@gmail.com"">post.e.azy.6.2@gmail.com</a>
<a href=""mailto:postea.z.y6.2@gmail.com"">postea.z.y6.2@gmail.com</a>
<a href=""mailto:postea.z.y.62@gmail.com"">postea.z.y.62@gmail.com</a>
<a href=""mailto:poste.azy6.2@gmail.com"">poste.azy6.2@gmail.com</a>
<a href=""mailto:p.o.st.e.a.zy6.2@gmail.com"">p.o.st.e.a.zy6.2@gmail.com</a>
<a href=""mailto:po.s.t.e.az.y62@gmail.com"">po.s.t.e.az.y62@gmail.com</a>
<a href=""mailto:po.s.te.a.zy.62@gmail.com"">po.s.te.a.zy.62@gmail.com</a>
<a href=""mailto:pos.te.a.z.y62@gmail.com"">pos.te.a.z.y62@gmail.com</a>
<a href=""mailto:po.stea.z.y62@gmail.com"">po.stea.z.y62@gmail.com</a>
<a href=""mailto:p.o.s.t.e.az.y.62@gmail.com"">p.o.s.t.e.az.y.62@gmail.com</a>
<a href=""mailto:po.s.t.eazy.62@gmail.com"">po.s.t.eazy.62@gmail.com</a>
<a href=""mailto:po.st.ea.z.y62@gmail.com"">po.st.ea.z.y62@gmail.com</a>
<a href=""mailto:p.ostea.zy6.2@gmail.com"">p.ostea.zy6.2@gmail.com</a>
<a href=""mailto:p.os.t.e.a.zy.6.2@gmail.com"">p.os.t.e.a.zy.6.2@gmail.com</a>
<a href=""mailto:post.ea.zy.62@gmail.com"">post.ea.zy.62@gmail.com</a>
<a href=""mailto:pos.tea.zy62@gmail.com"">pos.tea.zy62@gmail.com</a>
<a href=""mailto:pos.te.azy.62@gmail.com"">pos.te.azy.62@gmail.com</a>
<a href=""mailto:p.o.s.te.a.zy62@gmail.com"">p.o.s.te.a.zy62@gmail.com</a>
<a href=""mailto:p.ost.eazy62@gmail.com"">p.ost.eazy62@gmail.com</a>
<a href=""mailto:pos.t.e.az.y62@gmail.com"">pos.t.e.az.y62@gmail.com</a>
<a href=""mailto:p.o.s.te.a.z.y62@gmail.com"">p.o.s.te.a.z.y62@gmail.com</a>
<a href=""mailto:p.o.stea.zy.6.2@gmail.com"">p.o.stea.zy.6.2@gmail.com</a>
<a href=""mailto:pos.t.ea.z.y.6.2@gmail.com"">pos.t.ea.z.y.6.2@gmail.com</a>
<a href=""mailto:po.st.e.a.zy.62@gmail.com"">po.st.e.a.zy.62@gmail.com</a>
<a href=""mailto:p.ost.eazy.62@gmail.com"">p.ost.eazy.62@gmail.com</a>
<a href=""mailto:po.st.e.azy6.2@gmail.com"">po.st.e.azy6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.e.a.zy.62@gmail.com"">p.o.s.t.e.a.zy.62@gmail.com</a>
<a href=""mailto:p.oste.az.y.6.2@gmail.com"">p.oste.az.y.6.2@gmail.com</a>
<a href=""mailto:pos.tea.z.y.62@gmail.com"">pos.tea.z.y.62@gmail.com</a>
<a href=""mailto:poste.a.z.y6.2@gmail.com"">poste.a.z.y6.2@gmail.com</a>
<a href=""mailto:p.o.s.tea.z.y.6.2@gmail.com"">p.o.s.tea.z.y.6.2@gmail.com</a>
<a href=""mailto:post.eaz.y.62@gmail.com"">post.eaz.y.62@gmail.com</a>
<a href=""mailto:p.oste.a.z.y6.2@gmail.com"">p.oste.a.z.y6.2@gmail.com</a>
<a href=""mailto:p.os.te.a.zy6.2@gmail.com"">p.os.te.a.zy6.2@gmail.com</a>
<a href=""mailto:p.o.ste.a.z.y.62@gmail.com"">p.o.ste.a.z.y.62@gmail.com</a>
<a href=""mailto:p.o.s.te.azy.6.2@gmail.com"">p.o.s.te.azy.6.2@gmail.com</a>
<a href=""mailto:p.ost.eazy.6.2@gmail.com"">p.ost.eazy.6.2@gmail.com</a>
<a href=""mailto:p.o.s.t.eaz.y.62@gmail.com"">p.o.s.t.eaz.y.62@gmail.com</a>
<a href=""mailto:p.oste.azy.6.2@gmail.com"">p.oste.azy.6.2@gmail.com</a>
<a href=""mailto:poste.a.z.y.62@gmail.com"">poste.a.z.y.62@gmail.com</a>
<a href=""mailto:pos.tea.zy.6.2@gmail.com"">pos.tea.zy.6.2@gmail.com</a>
<a href=""mailto:po.stea.zy.6.2@gmail.com"">po.stea.zy.6.2@gmail.com</a>
<a href=""mailto:posteazy62@gmail.com"">posteazy62@gmail.com</a>
<a href=""mailto:pos.tea.zy.62@gmail.com"">pos.tea.zy.62@gmail.com</a>
<a href=""mailto:p.ost.e.azy.6.2@gmail.com"">p.ost.e.azy.6.2@gmail.com</a>
<a href=""mailto:p.o.steaz.y.62@gmail.com"">p.o.steaz.y.62@gmail.com</a>
<a href=""mailto:p.o.stea.zy.62@gmail.com"">p.o.stea.zy.62@gmail.com</a>
<a href=""mailto:p.os.t.e.az.y62@gmail.com"">p.os.t.e.az.y62@gmail.com</a>
<a href=""mailto:p.o.ste.a.z.y62@gmail.com"">p.o.ste.a.z.y62@gmail.com</a>
<a href=""mailto:p.osteaz.y.6.2@gmail.com"">p.osteaz.y.6.2@gmail.com</a>
<a href=""mailto:p.os.t.eazy.6.2@gmail.com"">p.os.t.eazy.6.2@gmail.com</a>
<a href=""mailto:p.os.t.ea.z.y.6.2@gmail.com"">p.os.t.ea.z.y.6.2@gmail.com</a>
<a href=""mailto:po.s.tea.zy.6.2@gmail.com"">po.s.tea.zy.6.2@gmail.com</a>
<a href=""mailto:po.s.te.azy6.2@gmail.com"">po.s.te.azy6.2@gmail.com</a>
<a href=""mailto:pos.tea.z.y62@gmail.com"">pos.tea.z.y62@gmail.com</a>
<a href=""mailto:post.ea.z.y62@gmail.com"">post.ea.z.y62@gmail.com</a>
<a href=""mailto:po.st.ea.z.y.62@gmail.com"">po.st.ea.z.y.62@gmail.com</a>
<a href=""mailto:p.o.st.e.a.z.y6.2@gmail.com"">p.o.st.e.a.z.y6.2@gmail.com</a>
<a href=""mailto:p.osteaz.y.62@gmail.com"">p.osteaz.y.62@gmail.com</a>
<a href=""mailto:p.o.s.te.a.z.y.62@gmail.com"">p.o.s.te.a.z.y.62@gmail.com</a>
<a href=""mailto:po.st.e.azy.62@gmail.com"">po.st.e.azy.62@gmail.com</a>
<a href=""mailto:pos.t.e.a.z.y.62@gmail.com"">pos.t.e.a.z.y.62@gmail.com</a>
<a href=""mailto:p.o.ste.a.z.y6.2@gmail.com"">p.o.ste.a.z.y6.2@gmail.com</a>"
