id,title,username,language,date,content
9Ad8mEnt,My Break In STORY Leaderboard Main,Sungmingamerpro13,CSS,Monday 16th of October 2023 12:55:49 AM CDT,"local TeleportService = game:GetService(""TeleportService"")
local SaveCurrency = game:GetService(""DataStoreService""):GetDataStore(""Wins"")
local SaveCurrency2 = game:GetService(""DataStoreService""):GetDataStore(""Rounds"")
local SaveCurrency3 = game:GetService(""DataStoreService""):GetDataStore(""Coins"")
local SaveExtraLives = game:GetService(""DataStoreService""):GetDataStore(""Lives"")

local VIPGamepassId = ""265392817""

game.Players.PlayerAdded:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then
		local Folder = Instance.new(""Folder"",player)
		Folder.Name = ""leaderstats""

		local Currency = Instance.new(""NumberValue"",Folder)
		Currency.Name = game.ReplicatedStorage.Tags.RoundsValue.Value
		Currency.Value = SaveCurrency2:GetAsync(player.UserId) or 0

		local Currency2 = Instance.new(""NumberValue"",Folder)
		Currency2.Name = game.ReplicatedStorage.Tags.WinsValue.Value
		Currency2.Value = SaveCurrency:GetAsync(player.UserId) or 0

		local previousData = SaveCurrency3:GetAsync(player.UserId) 
		local Coins

		if previousData ~= nil then
			Coins = previousData
		else
			Coins = 0
			SaveCurrency3:SetAsync(player.UserId, 0)
		end

		local CoinsValue = Instance.new(""NumberValue"", player)
		CoinsValue.Name = ""Coins""
		CoinsValue.Value = Coins

		local val1 = Instance.new(""StringValue"",player)
		val1.Name = 'GotPet'
		val1.Value = ''

		local val2 = Instance.new(""StringValue"",player)
		val2.Name = 'OpenValue'
		val2.Value = ''

		local previousData2 = SaveExtraLives:GetAsync(player.UserId)
		local Lives

		if previousData2 ~= nil then
			Lives = previousData2
		else
			Lives = 0
			SaveExtraLives:SetAsync(player.UserId, 0)
		end

		local ExtraLivesValue = Instance.new(""NumberValue"", player)
		ExtraLivesValue.Name = ""Lives""
		ExtraLivesValue.Value = Lives
		
		local Role = Instance.new(""StringValue"", player)
		Role.Parent = player
		Role.Name = ""Role""
		Role.Value = """"

		if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
			player.Coins.Value = player.Coins.Value * 2
		end

		player.Lives.Value = 5
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then	
		SaveCurrency2:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.RoundsValue.Value].Value)
		SaveCurrency:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.WinsValue.Value].Value)
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Coins.Value
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Coins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value2 = player.Lives.Value
		SaveExtraLives:SetAsync(player.UserId, value2)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value2 = player.Lives.Value

	if value2 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveExtraLives:SetAsync(player.UserId, value2)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)
"
xhZ749YF,My Break In STORY Leaderstats Lobby,Sungmingamerpro13,CSS,Monday 16th of October 2023 12:54:45 AM CDT,"local TeleportService = game:GetService(""TeleportService"")
local SaveCurrency = game:GetService(""DataStoreService""):GetDataStore(""Wins"")
local SaveCurrency2 = game:GetService(""DataStoreService""):GetDataStore(""Rounds"")
local SaveCurrency3 = game:GetService(""DataStoreService""):GetDataStore(""Coins"")
local SaveExtraLives = game:GetService(""DataStoreService""):GetDataStore(""Lives"")

local VIPGamepassId = ""265392817""

game.Players.PlayerAdded:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then
		local Folder = Instance.new(""Folder"",player)
		Folder.Name = ""leaderstats""

		local Currency = Instance.new(""NumberValue"",Folder)
		Currency.Name = game.ReplicatedStorage.Tags.RoundsValue.Value
		Currency.Value = SaveCurrency2:GetAsync(player.UserId) or 0

		local Currency2 = Instance.new(""NumberValue"",Folder)
		Currency2.Name = game.ReplicatedStorage.Tags.WinsValue.Value
		Currency2.Value = SaveCurrency:GetAsync(player.UserId) or 0

		local previousData = SaveCurrency3:GetAsync(player.UserId) 
		local Coins

		if previousData ~= nil then
			Coins = previousData
		else
			Coins = 0
			SaveCurrency3:SetAsync(player.UserId, 0)
		end

		local CoinsValue = Instance.new(""NumberValue"", player)
		CoinsValue.Name = ""Coins""
		CoinsValue.Value = Coins

		local val1 = Instance.new(""StringValue"",player)
		val1.Name = 'GotPet'
		val1.Value = ''

		local val2 = Instance.new(""StringValue"",player)
		val2.Name = 'OpenValue'
		val2.Value = ''

		local previousData2 = SaveExtraLives:GetAsync(player.UserId)
		local Lives

		if previousData2 ~= nil then
			Lives = previousData2
		else
			Lives = 0
			SaveExtraLives:SetAsync(player.UserId, 0)
		end

		local ExtraLivesValue = Instance.new(""NumberValue"", player)
		ExtraLivesValue.Name = ""Lives""
		ExtraLivesValue.Value = Lives
		
		local Role = Instance.new(""StringValue"", player)
		Role.Parent = player
		Role.Name = ""Role""
		Role.Value = """"

		if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
			player.Coins.Value = player.Coins.Value * 2
		end

		player.Lives.Value = 5
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then	
		SaveCurrency2:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.RoundsValue.Value].Value)
		SaveCurrency:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.WinsValue.Value].Value)
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Coins.Value
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Coins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value2 = player.Lives.Value
		SaveExtraLives:SetAsync(player.UserId, value2)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value2 = player.Lives.Value

	if value2 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveExtraLives:SetAsync(player.UserId, value2)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

local teleportData = TeleportService:GetLocalPlayerTeleportData()

if teleportData then
	local Player = game.Players:GetPlayerByUserId(teleportData.PlayerName)
	Player.leaderstats.Wins.Value = Player.leaderstats.Wins.Value + 1
end

"
9F6xnNn2,tiktok_downloader.sh,Ivam3,Bash,Monday 16th of October 2023 12:45:50 AM CDT,"#!/usr/bin/bash
#THIS SCRIPT DOWNWLOAD A SOCIAL MEDIA TIKTOK VIDEO
#WITHOUT WATER MARK

while [ $# -eq 0 ]; do
  echo ""USAGE: $0 <tiktok url link>""
  exit 1
done

file=$(mktemp)
url_SITE=""https://ssstik.io/abc?url=dl"" 
url_Video=""$1""
end_Dork=""&locale=en&tt=OHp3azhn""
video_name=$(echo ""$url_Video""|awk -F ""/"" '{print $4}'|tr -d ""@"")
#
# ENCODING URL 
url_encoded=$(printf ""%s"" ""$url_Video"" | jq -s -R -r @uri)

echo ""Getting Video ...""
$(command -v curl) -sL ""$url_SITE"" --data ""id=$url_encoded$end_Dork"" -o $file

echo ""Getting link to download ...""
url_Down=$(grep ""href=\""https://tikcdn.io/ssstik/"" $file|head -n1|awk -F ""\"""" '{print $2}')

echo ""Downloading ...""
wget --tries=5 ""$url_Down"" -O ${HOME}/$video_name.mp4

[[ -e ${HOME}/$video_name.mp4 ]] && { echo ""Saved in:${HOME}/$video_name.mp4"";}

rm $file 2>/dev/null && exit 0

####  For help join to https://t.me/ivam3_bot
"
8LFYfYtL,217. Contains Duplicate,micahbales,JavaScript,Monday 16th of October 2023 12:03:52 AM CDT,"/**
* Problem statement:
*
* This solution has a time complexity of O(n), and a space complexity of O(n).
*/

/**
 * @param {number[]} nums
 * @return {boolean}
 */
var containsDuplicate = function(nums) {
    const dict = {};
    for (i = 0; i < nums.length; i++) {
        const isDuplicate = dict[nums[i]];
        if (isDuplicate) {
            return true;
        } else {
            dict[nums[i]] = true;
        }
    }
    return false;
};"
BjLJ2fNv,"Mean, Median and Mode",King_Kuro,C,Sunday 15th of October 2023 11:57:24 PM CDT,"// Online C compiler to run C program online
#include <stdio.h>

int main() {
    //mean, mode and median algorithm
    
    //get dataset size
    int sizeOfData = NULL;
    printf(""ENTER SIZE OF DATASET: "");
    scanf(""%d"", &sizeOfData);
    
    int dataSet[sizeOfData];
    
    //get dataset elements
    for (int i = 0; i < sizeOfData; i++) {
        printf(""ENTER ELEMENT (%d) : "", (i+1));
        scanf(""%d"", &dataSet[i]);
    }
    
    //print dataset
    printf(""DATASET: "");
    for (int i = 0; i < sizeOfData; i++) {
        printf(""%d "", dataSet[i]);
    }
    
    int temp = NULL;
    int swapped = NULL;
    //sort the dataset
    for (int i = 0; i < sizeOfData - 1; i++) {
        swapped = 0; // A flag to check if any swaps were made in this pass

        for (int j = 0; j < sizeOfData - i - 1; j++) {
            if (dataSet[j] > dataSet[j + 1]) {
                // Swap the elements because they are in the wrong order
                temp = dataSet[j];
                dataSet[j] = dataSet[j + 1];
                dataSet[j + 1] = temp;
                swapped = 1;
            }
        }

        // If no swaps were made in this pass, the array is already sorted
        if (swapped == 0) {
            break;
        }
    }
    
    printf(""\n"");
    printf(""DATASET SORTED: "");
    for (int i = 0; i < sizeOfData; i++) {
        printf(""%d "", dataSet[i]);
    }
    
    printf(""\n"");
    mean(sizeOfData, dataSet);
    printf(""\n"");
    mode(sizeOfData, dataSet);
    printf(""\n"");
    median(sizeOfData, dataSet);
}

int mean(int sizeOfData, int dataSet[sizeOfData]) {
    int meanOfData = NULL;
    for (int i = 0; i < sizeOfData; i++) {
        meanOfData += dataSet[i];
    }
    printf(""MEAN: %d"", meanOfData);
}

int mode(int sizeOfData, int dataSet[sizeOfData]) {
    int mode = dataSet[0];
    int maxCount = 0;
    for (int i = 0; i < sizeOfData; i++) {
        int currentNumber = dataSet[i];
        int currentCount = 1;

        for (int j = i + 1; j < sizeOfData; j++) {
            if (dataSet[j] == currentNumber) {
                currentCount++;
            }
        }

        if (currentCount > maxCount) {
            maxCount = currentCount;
            mode = currentNumber;
        }
    }
    printf(""Mode: %d"", mode);
}

int median(int sizeOfData, int dataSet[sizeOfData]) {
    int median = 0;
    if (sizeOfData % 2 == 0) {
        int middleElement = sizeOfData / 2;
        median = dataSet[middleElement-1] + dataSet[middleElement];
    }
    else {
        median = dataSet[sizeOfData/2];
    }
    printf(""Median: %d"", median);
}"
fPpFBLXM,Untitled,vuseless,HTML,Sunday 15th of October 2023 11:55:32 PM CDT,strawpoll.de/1xgdexb
jqTc9PHG,876. Middle of the Linked List,micahbales,JavaScript,Sunday 15th of October 2023 11:54:45 PM CDT,"/**
* Problem statement: https://leetcode.com/problems/middle-of-the-linked-list/
*
* My solution uses the length-counting technique. It has a time complexity of O(n) and space complexity of O(1)
*
* I have also included a very elegant two-pointer algorithm as an alternative solution that is probably
* more efficient. (See commented code at end of file.)
*
* My takeaway from this exercise is that I should always consider the two-pointer pattern whenever 
* dealing with linked list problems. Nevertheless, I a pretty satisfied with the solution I did come up with.
*/

function getListLength(head) {
    let count = 0;
    let currentNode = head;
    while (currentNode.next) {
        currentNode = currentNode.next;
        count++;
    }
    return count;
}

function retrieveNode(head, n) {
    let depth = 0;
    let currentNode = head;
    while (depth < n) {
        currentNode = currentNode.next;
        depth++;
    }
    return currentNode;
}

/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var middleNode = function(head) {
    const listLength = getListLength(head);

    const middleNodeDepth = Math.ceil(listLength / 2);

    return retrieveNode(head, middleNodeDepth);
};

// /**
//  * Definition for singly-linked list.
//  * function ListNode(val, next) {
//  *     this.val = (val===undefined ? 0 : val)
//  *     this.next = (next===undefined ? null : next)
//  * }
//  */
// /**
//  * @param {ListNode} head
//  * @return {ListNode}
//  */
// var middleNode = function(head) {
//     let once = head;
//     let twice = head;

//     while(twice?.next) {
//         once = once.next;
//         twice = twice.next.next;
//     }
//     return once;
// };"
KrpUHRSQ,Reinas_PMX.py,andreerival,Python,Sunday 15th of October 2023 11:44:41 PM CDT,"import random
import matplotlib.pyplot as plt

def plot_queens(board):
    n = len(board)

    # Crear un tablero de ajedrez con casillas blancas y negras
    chessboard = [[(i + j) % 2 for i in range(n)] for j in range(n)]

    fig, ax = plt.subplots()
    ax.matshow(chessboard, cmap='binary')

    # Colocar las reinas en el tablero
    for i in range(n):
        ax.text(board[i] - 1, i, '♛', ha='center', va='center', color='brown', fontsize=14)

    plt.axis('off')
    plt.show()

def pmx_crossover(parent1, parent2):
    size = len(parent1)
    start, end = sorted([random.randint(0, size-1), random.randint(0, size-1)])
    offspring = [-1] * size
    offspring[start:end] = parent1[start:end]

    for i in range(size):
        if i < start or i >= end:
            j = i
            while offspring[j] != -1:
                j = parent2.index(parent1[j])
            offspring[j] = parent2[i]

    return offspring

def count_queen_collisions(board):
    n = len(board)
    collisions = 0

    for i in range(n):
        for j in range(i + 1, n):
            if board[i] == board[j] or abs(board[i] - board[j]) == abs(i - j):
                collisions += 1

    return collisions

def mutate_queens(board):
    n = len(board)
    new_board = list(board)
    random.shuffle(new_board)  # Se reorganizan aleatoriamente las posiciones de las reinas
    return new_board

def roulette_selection(population, fitnesses):
    total_fitness = sum(fitnesses)
    r = random.uniform(0, total_fitness)
    acc = 0
    for i, fitness in enumerate(fitnesses):
        acc += fitness
        if acc >= r:
            return population[i]

def generate_child_without_collisions(population, num_attempts=100, num_generations=100):
    best_child = None
    best_collisions = float('inf')

    for generation in range(num_generations):
        new_population = []
        fitnesses = [1 / (1 + count_queen_collisions(individual)) for individual in population]  # Fitness es inversamente proporcional a las colisiones

        for attempt in range(num_attempts):
            parent1 = roulette_selection(population, fitnesses)
            parent2 = roulette_selection(population, fitnesses)

            # Asegurarse de que los dos padres seleccionados sean diferentes
            while parent1 == parent2:
                parent2 = roulette_selection(population, fitnesses)

            child = pmx_crossover(parent1, parent2)
            collisions = count_queen_collisions(child)

            if collisions == 0:  # Si no hay colisiones, el hijo es óptimo
                print(f""Generación {generation + 1}, intento {attempt + 1}:"")
                print(""Padre 1:"", parent1)
                print(""Padre 2:"", parent2)
                print(""Hijo óptimo:"", child)
                return child, collisions

            # Intentar mutar el hijo para reducir colisiones
            mutated_child = mutate_queens(child)
            mutated_collisions = count_queen_collisions(mutated_child)

            if mutated_collisions < best_collisions:
                best_child = mutated_child
                best_collisions = mutated_collisions

                print(f""Generación {generation + 1}, intento {attempt + 1}:"")
                print(""Padre 1:"", parent1)
                print(""Padre 2:"", parent2)
                print(""Hijo mutado:"", mutated_child)
                print(""Colisiones:"", mutated_collisions)

            new_population.append(mutated_child)

        if best_collisions == 0:  # Si no hay colisiones, el mejor hijo es óptimo
            return best_child, best_collisions

        population = new_population  # Reemplazar la población antigua con la nueva

    return best_child, best_collisions

population = [[random.randint(1, 8) for _ in range(8)] for _ in range(100)]  # Población inicial de 100 individuos con posiciones de reinas aleatorias
best_child, best_collisions = generate_child_without_collisions(population)
print(""Número de colisiones entre reinas en el mejor descendiente:"", best_collisions)
print(""Descendiente con el menor número de colisiones:"", best_child)
plot_queens(best_child)"
K45z145j,mpdlog,iconoclasthero,Bash,Sunday 15th of October 2023 11:40:41 PM CDT,"$ cat mpdlog
#!/usr/bin/env python3
from __future__ import unicode_literals, print_function
from tinytag import TinyTag				 #https://pypi.org/project/tinytag/
from prompt_toolkit import print_formatted_text as print #https://python-prompt-toolkit.readthedocs.io/en/master/pages/printing_text.html
from prompt_toolkit import HTML
import string
import subprocess
import io
import os.path
from os import path
import pathlib

codecs = ('.mp3','.oga','.ogg','.opus','.wav','.flac','.wma','.m4b','.m4a','.mp4')
musicpath = '/library/music/'
logpath = '/var/log/mpd/mpd.log'
proc = subprocess.Popen(['tail', '-40', logpath], stdout=subprocess.PIPE)
songcount=1
for line in io.TextIOWrapper(proc.stdout, encoding=""utf-8""):
#   if ""played"" or ""scanned"" or ""skipped"" or ""removed"" in line:					#ignores all log lines that contain information other than about played and scanned songs
   if ""played"" in line or ""scanned"" in line or ""skipped"" in line or ""removed"" in line:		#ignores all log lines that contain information other than about played and scanned songs
         time = line[0:7]+'@ '+line[7:12]
         if ""played"" in line:
            line2 = line[31:-2]
         elif ""skipped & removed"" in line:
            line2 = line[56:-2]
         elif ""removed"" in line:
            line2 = line[42:-2]
         elif ""scanned"" in line:
            line2 = line[32:-2]
         elif ""skipped"" in line:
            line2 = line[32:-2]
         line2 = musicpath+line2
         if os.path.exists(line2) and line2.endswith(codecs):
           tag = TinyTag.get(line2)
           if tag.title:
              title = tag.title						#variable isn't used anywhere
              if tag.artist:
                 artist = tag.artist					#variable isn't used anywhere
                 if tag.album:
                    album = tag.album					#variable isn't used anywhere
                    if tag.year:
                       year = tag.year[0:4]				#variable isn't used anywhere
                       if ""played"" in line:
                          print(HTML(str(songcount).zfill(2)+':  Played <b>\""%s\""</b> by <b>%s</b> from <i>%s</i> (%s) on '+time) % (tag.title, tag.artist, tag.album, tag.year[0:4]))
                       elif ""skipped & removed"" in line:
                          print(HTML(str(songcount).zfill(2)+':  Skipped and removed from playlist <b>\""%s\""</b> by <b>%s</b> from <i>%s</i> (%s) on '+time) % (tag.title, tag.artist, tag.album, tag.year[0:4]))
                       elif ""removed"" in line:
                          print(HTML(str(songcount).zfill(2)+':  Scanned and removed from playlist <b>\""%s\""</b> by <b>%s</b> from <i>%s</i> (%s) on '+time) % (tag.title, tag.artist, tag.album, tag.year[0:4]))
                       elif ""scanned"" in line:
                          print(HTML(str(songcount).zfill(2)+':  Scanned <b>\""%s\""</b> by <b>%s</b> from <i>%s</i> (%s) on '+time) % (tag.title, tag.artist, tag.album, tag.year[0:4]))
                       elif ""skipped"" in line:
                          print(HTML(str(songcount).zfill(2)+':  Skipped <b>\""%s\""</b> by <b>%s</b> from <i>%s</i> (%s) on '+time) % (tag.title, tag.artist, tag.album, tag.year[0:4]))
                    else:  print(HTML(str(songcount).zfill(2)+':  <b>Error!</b>  Missing album year:  '+line2))
                 else:  print(HTML(str(songcount).zfill(2)+':  <b>Error!</b>  Missing album title:  '+line2))
              else:  print(HTML(str(songcount).zfill(2)+':  <b>Error!</b>  Missing artist:  '+line2))
           else:  print(HTML(str(songcount).zfill(2)+':  <b>Error!</b>  Missing song title:  '+line2))
         else:  print(HTML(str(songcount).zfill(2)+':  <b>Error!</b>  Missing file or unsupported format:  '+line2))
         print()
         songcount=songcount + 1
#current = subprocess.Popen(['mpc', 'current', '-f %file%'], stdout=subprocess.PIPE)
current = subprocess.Popen(['mpc', 'current'], stdout=subprocess.PIPE)
output, errors = current.communicate()
current = output.rstrip()
current = current.decode()
current = current.split("" - "", 2)
cartist = current[0]
ctitle = current[1]
print(HTML('Current song: \""<i>%s</i>\"" by <b>%s</b>') % (str(ctitle), str(cartist)))

print()
"
a76GZyxs,543. Diameter of Binary Tree,micahbales,JavaScript,Sunday 15th of October 2023 11:19:46 PM CDT,"/**
* Problem statement: https://leetcode.com/problems/diameter-of-binary-tree/description/
*
* I must admit that I did not solve this problem on my own. I first went and solved Maximum Depth of Binary Tree (https://pastebin.com/vMR4F3yt), knowing that this would be a key part of the solution for this problem.
*
* Turns out, it was very crucial, but the solution that I received from another contributor was more elegant than anything
* that I believe I would have come up with on my own at this stage.
*
* In particular, I don't think that it would have occurred to me to wrap the 'dfs' function within the body of the
* main function, thereby giving access to the 'diameter' variable within the scope of both function bodies.
*
* The crux of this solution is the realization that the longest path in a tree can be determined by, when traversing
* the tree in a depth-first search, taking a note of the total distance between the deepest left and right leaves for
* each node. Whichever node sits at the confluence of the two most-distance leaves will provide the longest path by
* adding together the left and right depths.
* 
* As we were informed in the problem statement, the longest path may run through the root node, but it may not. This
* solution does not depend on checking the root node, but checks every node, all the way up the tree, to see if that
* node is the confluence of the longest path (the two leaves with the deepest summed path between them).
*/

/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var diameterOfBinaryTree = function(root) {
    let diameter = 0;

    dfs(root);

    return diameter;
    
    function dfs(node) {
        if (node === null) return 0;
 
        const left = dfs(node.left);
        const right = dfs(node.right);

        diameter = Math.max(diameter, left + right);
    
        return Math.max(left, right) + 1;
    }
};"
hbuesKms,Server-3-tower.log,TrapeNoOne,Bash,Sunday 15th of October 2023 11:06:43 PM CDT,"2023-10-15 16:01:27,536 ERROR    awx.conf.settings Database settings are not available, using defaults.
Traceback (most recent call last):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/base/base.py"", line 235, in _cursor
    return self._prepare_cursor(self.create_cursor(name))
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/postgresql/base.py"", line 223, in create_cursor
    cursor = self.connection.cursor()
psycopg2.InterfaceError: connection already closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 81, in _ctit_db_wrapper
    yield
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 446, in __getattr__
    value = self._get_local(name)
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 357, in _get_local
    self._preload_cache()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 319, in _preload_cache
    for setting in Setting.objects.filter(key__in=settings_to_cache.keys(), user__isnull=True).order_by('pk'):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 274, in __iter__
    self._fetch_all()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 1242, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 55, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
"
eyym1QwZ,Server-2-tower-log,TrapeNoOne,Bash,Sunday 15th of October 2023 11:05:34 PM CDT,"2023-10-15 16:01:10,517 ERROR    awx.conf.settings Database settings are not available, using defaults.
Traceback (most recent call last):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/base/base.py"", line 235, in _cursor
    return self._prepare_cursor(self.create_cursor(name))
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/postgresql/base.py"", line 223, in create_cursor
    cursor = self.connection.cursor()
psycopg2.InterfaceError: connection already closed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 81, in _ctit_db_wrapper
    yield
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 446, in __getattr__
    value = self._get_local(name)
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 357, in _get_local
    self._preload_cache()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 319, in _preload_cache
    for setting in Setting.objects.filter(key__in=settings_to_cache.keys(), user__isnull=True).order_by('pk'):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 274, in __iter__
    self._fetch_all()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 1242, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 55, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
/var/log/tower/tower.log
"
M0J4XxRN,Installing driver rtl8821CU Linux,Rnery,Bash,Sunday 15th of October 2023 11:03:50 PM CDT,"#!/usr/bin/env bash

_check_directory() {
    if [[ -d build ]]; then
        echo ""O diretório /build já existe""
    else
        echo ""Diretório /build criado!""
        mkdir build
    fi
}

_check_git() {
    local url=""https://github.com/brektrou/rtl8821CU.git""
    if wget -q --spider ""$url""; then
        return 0
    else
        return 1
    fi
}

_make_compile() {
    _check_directory
    cd build || exit 1

    if _check_git; then
        git clone ""https://github.com/brektrou/rtl8821CU.git""
        cd rtl8821CU/ || exit 1
        make && sudo make install
    else
        echo ""Falha na operação.""
        exit 1
    fi
}

_check_driver() {
    if ls /lib/modules/""$(uname -r)""/kernel/drivers/net/wireless/realtek/rtl8821cu &> /dev/null; then
        echo ""Instalado com sucesso!""
    else
        echo ""Não instalado!""
    fi
}

_make_compile
_check_driver
"
Hmq2Rinu,Server-1-tower.log,TrapeNoOne,Bash,Sunday 15th of October 2023 11:03:02 PM CDT,"2023-10-15 16:01:15,961 ERROR    awx.conf.settings Database settings are not available, using defaults.
Traceback (most recent call last):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/base/base.py"", line 217, in ensur
e_connection
    self.connect()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/base/base.py"", line 195, in conne
ct
    self.connection = self.get_new_connection(conn_params)
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/postgresql/base.py"", line 178, in
 get_new_connection
    connection = Database.connect(**conn_params)
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/psycopg2/__init__.py"", line 126, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: Connection timed out
        Is the server running on host ""ip-address"" and accepting
        TCP/IP connections on port 5432?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 81, in _ctit_db_wrapper
    yield
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 446, in __getattr__
    value = self._get_local(name)
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 357, in _get_local
    self._preload_cache()
File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/awx/conf/settings.py"", line 319, in _preload_cache
    for setting in Setting.objects.filter(key__in=settings_to_cache.keys(), user__isnull=True).order_by('pk'):
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 274, in __iter__
    self._fetch_all()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 1242, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/query.py"", line 55, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/models/sql/compiler.py"", line 1140, in execute_sql
    cursor = self.connection.cursor()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/base/base.py"", line 256, in cursor
    return self._cursor()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/base/base.py"", line 233, in _cursor
    self.ensure_connection()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/base/base.py"", line 217, in ensure_connection
    self.connect()
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/utils.py"", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File ""/var/lib/awx/venv/awx/lib64/python3.6/site-packages/django/db/backends/base/base.py"", line 217, in ensure_connection
:
"
n4rHSDkc,python errror,iconoclasthero,Bash,Sunday 15th of October 2023 10:58:18 PM CDT,"$ ../python dump_keys.py 
Traceback (most recent call last):
  File ""/dev/shm/cache/frida/bin/dumper/dump_keys.py"", line 6, in <module>
    from Helpers.Scanner import Scan
  File ""/dev/shm/cache/frida/bin/dumper/Helpers/Scanner.py"", line 7, in <module>
    from Helpers.wv_proto2_pb2 import SignedLicenseRequest
  File ""/dev/shm/cache/frida/bin/dumper/Helpers/wv_proto2_pb2.py"", line 33, in <module>
    _descriptor.EnumValueDescriptor(
  File ""/dev/shm/cache/frida/lib/python3.11/site-packages/google/protobuf/descriptor.py"", line 796, in __new__
    _message.Message._CheckCalledFromGeneratedFile()
TypeError: Descriptors cannot not be created directly.
If this call came from a _pb2.py file, your generated code is out of date and must be regenerated with protoc >= 3.19.0.
If you cannot immediately regenerate your protos, some other possible workarounds are:
 1. Downgrade the protobuf package to 3.20.x or lower.
 2. Set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python (but this will use pure-Python parsing and will be much slower).

More information: https://developers.google.com/protocol-buffers/docs/news/2022-05-06#python-updates
"
vMR4F3yt,104. Maximum Depth of Binary Tree,micahbales,JavaScript,Sunday 15th of October 2023 10:47:17 PM CDT,"/**
* Problem statement: https://leetcode.com/problems/maximum-depth-of-binary-tree/
*/

/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var maxDepth = function(root) {
    if (root === null) return 0;

    const left = maxDepth(root.left);
    const right = maxDepth(root.right);

    return Math.max(left, right) + 1;
};"
QMhaRPjg,Untitled,Ethan-ZYF,C++,Sunday 15th of October 2023 10:28:00 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using i64 = int; // AC
// using i64 = long long; //!WA
constexpr int N = 105;
i64 n, W, nums[N][3];

void solve() {
    cin >> n >> W;
    for (int i = 1; i <= n; i++) {
        cin >> nums[i][0] >> nums[i][1] >> nums[i][2];
    }
    // vector<vector<i64>> dp(n + 1, vector(W + 1, 0LL));
    vector<vector<i64>> dp(n + 1, vector(W + 1, 0));
    for (i64 i = 1; i <= n; i++) {
        i64 v = nums[i][0], w = nums[i][1], cnt = nums[i][2];
        map<i64, deque<pair<i64, i64>>> mp;
        for (i64 j = 0; j <= W; j++) {
            i64 mod = j % w, t = j / w;
            i64 temp = dp[i - 1][j] - t * v;
            while (!mp[mod].empty() && temp >= mp[mod].back().second)
                mp[mod].pop_back();
            mp[mod].emplace_back(t, temp);
            while (t - mp[mod].front().first > cnt)
                mp[mod].pop_front();
            dp[i][j] = max(dp[i][j - 1], mp[mod].front().second + t * v);
        }
    }
    cout << dp[n][W] << endl;
}

int main() {
    cin.tie(nullptr)->sync_with_stdio(false);
    solve();
}"
yTSKa7Vc,67. Add Binary,micahbales,JavaScript,Sunday 15th of October 2023 10:05:02 PM CDT,"/**
* Problem statement: https://leetcode.com/problems/add-binary/description/
*
* The un-commented solution below solves the problem in the way that an interviewer would probably want to see it solved.
*
* In addition, there is also a solution (commented out, at the bottom of this file) that represents how I might solve this
* for real-life web applications that might be performing this operation casually.
*
* It's not clear to me whether there is a significant difference in performance between the two algorithms, but the second
* one is far more concise and readable.
**/

/**
* @param {number} n
* @return {string} - A string of n zeros (e.g. ""0000"")
**/
function getZerosString(n) {
    let s = '';
    for (i = 0; i < n; i++) {
        s += '0';
    }
    return s;
}

/**
* Compare the two strings and add a number of ""0"" to the front of
* the shorter string, equal to difference in length between the two
*
* @param {string} a - A string binary representation (e.g. ""11011"")
* @param {string} b - A string binary representation (e.g. ""11011"")
* @return {ey: string, bee: string} - An object containing two binary string representations,
* each still having the same numeric value, but with an equal number of characters
*
**/
function equalizeBinaryStrings(a, b) {
    if (a.length === b.length) return {ey: a, bee: b};
    if (a.length > b.length) {
        return {
            ey: a,
            bee: getZerosString(a.length - b.length) + b,
        };
    } else {
        return {
            ey: getZerosString(b.length - a.length) + a,
            bee: b,
        };
    }
}

/**
 * @param {string} a
 * @param {string} b
 * @return {string}
 */
var addBinary = function(a, b) {
    const {ey, bee} = equalizeBinaryStrings(a, b);
    
    let newBinaryString = '';
    let carryover = 0;
    for (i = ey.length - 1; i >= 0; i--) {
        const aVal = parseInt(ey[i]);
        const bVal = parseInt(bee[i]);
        const sum = aVal + bVal + carryover;
        switch(sum) {
            // if 0 + 0 (+ 0 carryover) - zero
            case 0:
                // TODO: it might be more efficient to use an array and concat the string at the end
                newBinaryString = '0' + newBinaryString;
                break;
            // if 0 + 0 (+ 1 carryover) - one
            // if 0 + 1 (+ 0 carryover) - one
            case 1:
                newBinaryString = '1' + newBinaryString;
                carryover = 0;
                break;
            // if 0 + 1 (+ 1 carryover) - zero, but carry the one
            // if 1 + 1 (+ 0 carryover) - zero, but carry the one
            case 2:
                newBinaryString = '0' + newBinaryString;
                carryover = 1;
                break;
            // if 1 + 1 (+ 1 carryover) - one, AND carry the one
            case 3:
                newBinaryString = '1' + newBinaryString;
                carryover = 1;
                break;
            default:
                throw Error('invalid binary addition!');
        }
    }

    // If there is still a carryover, add a ""1"" to the start of the string
    if (carryover === 1) {
        newBinaryString = '1' + newBinaryString;
    }

    return newBinaryString;
};

// /**
//  * @param {string} a
//  * @param {string} b
//  * @return {string}
//  */
// var addBinary = function(a, b) {
//     return (BigInt(`0b${a}`) + BigInt(`0b${b}`)).toString(2);
// };"
0W0PtRaB,Untitled,Vemox,YAML,Sunday 15th of October 2023 10:02:32 PM CDT,"$engine: 3
$onesync: on
name: VORPCore
author: vorpcore
description: VorpCore Official txAdmin recipe! This will set up a base vorp official server.

variables:
    steam_webApiKey: ""none""

tasks:
# Recipe Specific server.cfg files
  - action: download_github
    src: https://github.com/JustZerooo/VORP_txAdmin
    ref: main
    dest: ./temp/vorp_txAdminRecipe
  
  - action: move_path
    src: ./temp/vorp_txAdminRecipe/server.cfg
    dest: ./server.cfg
  
# Run Database SQL
  - action: connect_database
  - action: query_database
    file: ./temp/vorp_txAdminRecipe/MariaDB.sql
    
# Download default CFX resources
  - action: download_github
    src: https://github.com/citizenfx/cfx-server-data
    ref: master
    subpath: resources
    dest: ./resources/

# Download Pre-Made Files
  - action: download_github
    src: https://github.com/VORPCORE/vorp_pre-made
    ref: main
    dest: ./temp/premade
  
# Move all vorp resources and files to root for txadmin
  - action: move_path
    src: ./temp/premade/server/resources/[VORP]
    dest: ./resources/[VORP]

  - action: move_path
    src: ./temp/premade/server/icon.png
    dest: ./icon.png

# Clean up temporary files
  - action: remove_path
    path: ./temp"
x4tRAPsF,formatResources,horizonstar,Python,Sunday 15th of October 2023 10:00:35 PM CDT,"#!/usr/bin/env python

import re, sys

# Print out a list of {{Resource X}} template tags for the resources
# listed on the command line.  Resources are expected to be named as
# they appear in the Starmap's planet information box (i.e. chemical
# symbols instead of full names), but case and punctuation are ignored.

cmdlineArgs = list(sys.argv)
cmdlineArgs.pop(0)
if len(cmdlineArgs) == 0:
    exit

resourceTemplateName = {
    ""ad""  : ""Aldumite"", ""cnhn"": ""Alkanes"", ""al"": ""Aluminum"", ""sb"": ""Antimony"", ""aq"": ""Aqueous Hematite"", ""ar"": ""Argon"",
    ""c6hn"": ""Benzene"", ""be"": ""Beryllium"",
    ""ct""  : ""Caelumite"", ""cs"": ""Caesium"", ""rcooh"": ""Carboxylic Acids"", ""cl"": ""Chlorine"", ""sih3cl"": ""Chlorosilanes"", ""co"": ""Cobalt"", ""cu"": ""Copper"",
    ""dy""  : ""Dysprosium"",
    ""eu""  : ""Europium"",
    ""f""   : ""Fluorine"",
    ""au""  : ""Gold"",
    ""he3"" : ""Helium-3"",
    ""fe""  : ""Iron"", ""in"": ""Indicite"", ""il"": ""Ionic Liquids"", ""ir"": ""Iridium"",
    ""li""  : ""Lithium"",
    ""hg""  : ""Mercury"",
    ""nd""  : ""Neodymium"", ""ne"": ""Neon"", ""ni"": ""Nickel"",
    ""pb""  : ""Lead"",
    ""pd""  : ""Palladium"", ""pt"": ""Platinum"", ""pu"": ""Plutonium"",
    ""rc""  : ""Rothicite"",
    ""ag""  : ""Silver"",
    ""ta""  : ""Tantalum"", ""tsn"": ""Tasine"", ""xf4"": ""Tetrafluorides"", ""ti"": ""Titanium"", ""w"": ""Tungsten"",
    ""u""   : ""Uranium"",
    ""v""   : ""Vanadium"", ""vr"": ""Veryl"", ""vy"": ""Vytinium"",
    ""h2o"" : ""Water"",
    ""xe""  : ""Xenon"",
    ""yb""  : ""Ytterbium""                           
}

output = """"
for resource in cmdlineArgs:
    # convert to lowercase
    cleanedResource = resource.lower()
    # remove any punctuation
    cleanedResource = re.sub(r'\W', '', cleanedResource)
    output += f""{{{{Resource {resourceTemplateName[cleanedResource]}}}}}""

print(output)
"
BjgK4WzF,Day 27 2n3,HarrJ,Java,Sunday 15th of October 2023 09:48:35 PM CDT,"-- para sa group 2 and 3 sample

CREATE TABLE tbl_g23_orderlst (
    fld_orid INT AUTO_INCREMENT PRIMARY KEY
    , fld_id INT NOT NULL
    , fld_curr_price DECIMAL(20,4) NOT NULL
    , fld_or_qty INT NOT NULL
    , fld_or_qtytotal DECIMAL(20,4) NOT NULL
    , fld_recid INT NOT NULL
);

CREATE TABLE tbl_g23_reciept (
    fld_recid INT AUTO_INCREMENT PRIMARY KEY
    , fld_tr_date DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
    , fld_rec_qty INT NOT NULL
    , fld_rec_qtytotal DECIMAL(20,4) NOT NULL
);

INSERT INTO tbl_g23_orderlst(fld_id, fld_curr_price, fld_or_qty, fld_or_qtytotal, fld_recid) VALUES (?,?,?,?);

INSERT INTO tbl_g23_reciept(fld_rec_qty, fld_rec_qtytotal) VALUE (?,?);

SELECT fld_recid FROM tbl_g23_reciept WHERE fld_rec_qty = ? AND fld_rec_qtytotal = ? ORDER BY fld_recid DESC;

-- RECORD RESIBO
-- KUKUNIN NUMBER NG RESIBO
-- RECORD BINILI


-- para sa group 1 and 4 sample
CREATE TABLE tbl_g14_product_in(
    pIN_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
  ,fld_id INT NOT NULL
  ,pin_date DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
  ,pin_qty INT NOT NULL
  ,pin_staff VARCHAR(30) NOT NULL
);


CREATE TABLE tbl_g14_product_out(
  pOUT_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
  ,fld_id INT NOT NULL
  ,pout_date DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
  ,pout_qty INT NOT NULL
  ,pout_staff VARCHAR(30) NOT NULL
  );

-- tbl_infolist is proxy for your main table 
-- group 1 fld_num_i is PROXY for your tbl_Product_list quantity_in_stock field
-- kayo na bahala sa date
INSERT INTO tbl_g14_product_in(fld_id ,pin_qty, pin_staff)VALUES(?,?,?,?);
-- group 1 follow up for INSERT INTO tbl_product_in
UPDATE tbl_infolist SET fld_num_i = (SELECT fld_num_i + ? FROM tbl_infolist WHERE fld_id = ? LIMIT 1) WHERE fld_id = ?;

--sample in action assuming product id 12 have incoming 20 items
INSERT INTO tbl_g14_product_in(fld_id, pin_qty, pin_staff)VALUES(12,20,'Elbert');
UPDATE tbl_infolist 
SET fld_num_i = (SELECT fld_num_i + 20 FROM tbl_infolist WHERE fld_id = 12 LIMIT 1))
WHERE fld_id = 12;
-- end sample

-- what about product going out
-- need check of there is available number of items
SELECT fld_num_i FROM tbl_infolist WHERE fld_id = ?;
-- gagawa ka ng if statement sa java if fld_num_i > pout_qty
-- di gagana ang out kung mag ne negative ang quantity
-- kayo na bahala sa date
INSERT INTO tbl_g14_product_out(fld_id , pout_qty, pout_staff)VALUES(?,?,?);

--Methods-------------------------------------------
package weekDay27;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public class Day27G23Methods {
    private String address = ""jdbc:mysql://localhost:3306/db_mng_b8"";
    private String userName = ""root"";
    private String passWord = """";
    
    public void getAllRows(JTable tableIn) {
        DefaultTableModel tblModel = (DefaultTableModel) tableIn.getModel();
        tblModel.setRowCount(0);
        String sqlQuery = ""SELECT * FROM tbl_infolist;"";
        
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            ResultSet rs = stmt.executeQuery();
            //result set starts with 1 or field name 
            while (rs.next()) {
                Object[] newRow = {
                    rs.getInt(1)
                    ,rs.getString(2)
                    ,rs.getString(3)
                    ,rs.getInt(4)
                    ,rs.getDouble(5)
                    ,rs.getString(6)
                    ,rs.getString(7)};
                tblModel.addRow(newRow);
            }
            conn.close();
        } catch (Exception e) {
            Object[] error = new Object[7];
            error[0] = ""Connection error:\n"" + e.getMessage();
            tblModel.addRow(error);
        }
    }
    
//-=-=-=-=-=-=-=-=-=-=-=
    
    public int addNewOrder(int prodID, double prodPrice, int prodQty
            , double prodTotal, int recID){
        int rowsAffected = 0;
        String sqlQuery = ""INSERT INTO tbl_g23_orderlst(fld_id, fld_curr_price""
                + "", fld_or_qty, fld_or_qtytotal, fld_recid) VALUES (?,?,?,?,?);"";
        
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            stmt.setInt(1, prodID);
            stmt.setDouble(2, prodPrice);
            stmt.setInt(3, prodQty);
            stmt.setDouble(4, prodTotal);
            stmt.setInt(5, recID);
            
            rowsAffected = stmt.executeUpdate();
            
            conn.close();
        } catch (Exception e) {
            rowsAffected = -1;
            System.out.println(e.getMessage());
        }
        
        return rowsAffected;
    }
    
//-=-=-=-=-=-=-=-=-=-=-=
    
    public int addNewReciept(int rcQty, double rcTotal){
        int rowsAffected = 0;
        String sqlQuery = ""INSERT INTO tbl_g23_reciept(fld_rec_qty, fld_rec_qtytotal) VALUE (?,?);"";
        
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            stmt.setInt(1, rcQty);
            stmt.setDouble(2, rcTotal);
            
            rowsAffected = stmt.executeUpdate();
            
            conn.close();
        } catch (Exception e) {
            rowsAffected = -1;
            System.out.println(e.getMessage());
        }
        
        return rowsAffected;
    }
    
    public int getRecieptID(int rcQty, double rcTotal) {
        int rcID = 0;
        String sqlQuery = ""SELECT fld_recid FROM tbl_g23_reciept WHERE fld_rec_qty = ? AND fld_rec_qtytotal = ? ORDER BY fld_recid DESC;"";
        // kukuha ng kelangan
        try {
            Connection conn = DriverManager.getConnection(address, userName, passWord);
            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
            
            stmt.setInt(1, rcQty);
            stmt.setDouble(2, rcTotal);
            
            ResultSet rs = stmt.executeQuery();
            
            rs.next();
            
            rcID = rs.getInt(1);
            
            conn.close();
        } catch (Exception e) {
//            rowsAffected = -1;
            System.out.println(e.getMessage());
        }
        
        return rcID;

    }
}
--events---------------------------------------
private void btnAddToOrderActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // Taking inspiration from Day22AForm
        Object[] forTblPOut = new Object[5];
        forTblPOut[0] = tblProductList.getValueAt(tblProductList.getSelectedRow(), 0);
        forTblPOut[1] = tblProductList.getValueAt(tblProductList.getSelectedRow(), 4); 
        forTblPOut[2] = Integer.parseInt(txtQty.getText());
        Double orTotal = Double.parseDouble(txtQty.getText()) 
                * Double.parseDouble(tblProductList.getValueAt(tblProductList.getSelectedRow(), 4).toString());
        
        forTblPOut[3] = String.format(""%.4f"", orTotal);
        
        DefaultTableModel tblModel = (DefaultTableModel) tblForOrderRecord.getModel();
        tblModel.addRow(forTblPOut);
        
        double totalReceipt = 0;
        int itemSold = 0;
        String printout="""";
        for(int i = 0; i < tblForOrderRecord.getRowCount(); i++){
//        JOptionPane.showMessageDialog(this, ""awooo"");
            itemSold+= Integer.parseInt(tblForOrderRecord.getValueAt(i, 2).toString());
            totalReceipt += Double.parseDouble(tblForOrderRecord.getValueAt(i, 3).toString());
        }
        printout += ""Items Sold: "" + itemSold;
        printout += ""\nTotal Amount: "" + totalReceipt;
        JOptionPane.showMessageDialog(this, printout);
        txtTotalQty.setText(String.valueOf(itemSold));
        txtTotalPrice.setText(String.format(""%.4f"",totalReceipt));
    }                                             

    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        Day27G23Methods callG23Methods = new Day27G23Methods();
        callG23Methods.getAllRows(tblProductList);
    }                                 

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {                                            
        int rcQty = Integer.parseInt(txtTotalQty.getText());
        double rcTotal = Double.parseDouble(txtTotalPrice.getText());
        int receiptNumber = 0;
        Day27G23Methods callG23Methods = new Day27G23Methods();
        
        int result= 0;
        result = callG23Methods.addNewReciept(rcQty, rcTotal);
        if (result == 1) {
            receiptNumber = callG23Methods.getRecieptID(rcQty, rcTotal);
            txtRecieptNum.setText(String.valueOf(receiptNumber));
            jTextArea1.setText(jTextArea1 + ""\n-reciept "" + receiptNumber);
        }
            JOptionPane.showMessageDialog(this, ""reciept "" + receiptNumber);
        if (receiptNumber > 0) {
            for(int i = 0; i < tblForOrderRecord.getRowCount(); i++){
    //        JOptionPane.showMessageDialog(this, ""awooo"");
                int currentPID = Integer.parseInt(tblForOrderRecord.getValueAt(i, 0).toString());
                double currentPrice = Double.parseDouble(tblForOrderRecord.getValueAt(i, 1).toString());  
                int currentQTY = Integer.parseInt(tblForOrderRecord.getValueAt(i, 2).toString());
                double currentTotal = Double.parseDouble(tblForOrderRecord.getValueAt(i, 3).toString());
                int orderRec = callG23Methods.addNewOrder(currentPID, currentPrice, currentQTY, currentTotal, receiptNumber);
                if (orderRec == 1) {
                    jTextArea1.setText(jTextArea1.getText() + ""\n-recorded "" + i);
                }
            }
        }
    }"
Piyw0PZQ,best snowybot ever,coinwalk,JavaScript,Sunday 15th of October 2023 09:42:02 PM CDT,"var smiley = parseFloat(document.getElementById('pct_balance').value);
var nudie = Number((smiley/144000).toFixed(8));
var burp = nudie;
var taget = 80000;
var bolux = (nudie*10);
var poopy = (nudie*6.5);
var sexual = ((Math.floor(smiley/bolux))*bolux);
var woman = ((Math.floor(smiley/bolux))*bolux);
var fart = 1;
var submarine = 2.5;
var plane = 6.5;
var jockey = ((burp*1).toFixed(8));
var bolance = smiley;
var bilance = smiley;


 
function get(){
console.clear();
bolance = document.getElementById('pct_balance').value;
if (bolance>(sexual+(burp*plane))) {
    burp = burp*2;
    submarine = 4.5;
    plane = 4.5;
    sexual = parseFloat(bolance);
}
if (bolance<(sexual-(burp*submarine))) {
    burp = burp*2;
    fart = 0;
    submarine = 4.9;
    plane = 4.9;
    sexual = parseFloat(bolance);
}
if ((bolance>=(woman+(bolux*fart)))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    burp = nudie;
    fart = 1;
    submarine = 2.9;
    plane = 6.9;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
    sexual = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
}
if ((bolance>=(bilance*2.4))&&(bolance<(((Math.floor(bolance/bolux))*bolux)+poopy))) {
    nudie = Number(((parseFloat(bolance))/144000).toFixed(8));
    bolux = (nudie*10);
    poopy = (nudie*6.5);
    burp = nudie;
    fart = 1;
    submarine = 2.9;
    plane = 6.9;
    woman = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
    sexual = ((Math.floor((parseFloat(bolance))/bolux))*bolux);
    bilance = parseFloat(bolance);
}
    if (bolance >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
jockey = ((burp*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(jockey);
$('#a_lo').click();
var dog = ((bolance-smiley).toFixed(8));
console.log(""profit"");
console.log(dog);
setTimeout(() => get(), 1);
}
get();"
tw3Um6Tm,Reinas_OX.py,andreerival,Python,Sunday 15th of October 2023 09:37:07 PM CDT,"import random
import matplotlib.pyplot as plt

def plot_queens(board):
    n = len(board)

    # Crear un tablero de ajedrez con casillas blancas y negras
    chessboard = [[(i + j) % 2 for i in range(n)] for j in range(n)]

    fig, ax = plt.subplots()
    ax.matshow(chessboard, cmap='binary')

    # Colocar las reinas en el tablero
    for i in range(n):
        ax.text(board[i] - 1, i, '♛', ha='center', va='center', color='brown', fontsize=14)

    plt.axis('off')
    plt.show()

def order_crossover(parent1, parent2):
    size = len(parent1)
    start, end = sorted([random.randint(0, size-1), random.randint(0, size-1)])

    # Asegurarse de que start y end sean diferentes
    while start == end:
        start, end = sorted([random.randint(0, size-1), random.randint(0, size-1)])

    offspring = [-1] * size
    offspring[start:end] = parent1[start:end]

    j = end
    for i in range(size):
        if parent2[(i+end)%size] not in offspring:
            offspring[j] = parent2[(i+end)%size]
            j = (j+1) % size

    return offspring

def count_queen_collisions(board):
    n = len(board)
    collisions = 0

    for i in range(n):
        if board[i] < 1:  # Contar números negativos como colisiones
            collisions += 1

        for j in range(i + 1, n):
            if board[i] == board[j] or abs(board[i] - board[j]) == abs(i - j):
                collisions += 1

    return collisions

def mutate_queens(board):
    n = len(board)
    new_board = list(board)
    random.shuffle(new_board)  # Se reorganizan aleatoriamente las posiciones de las reinas
    return new_board

def roulette_selection(population, fitnesses):
    total_fitness = sum(fitnesses)
    r = random.uniform(0, total_fitness)
    acc = 0
    for i, fitness in enumerate(fitnesses):
        acc += fitness
        if acc >= r:
            return population[i]

def generate_child_without_collisions(population, num_attempts=100, num_generations=100):
    best_child = None
    best_collisions = float('inf')

    for generation in range(num_generations):
        new_population = []
        fitnesses = [1 / (1 + count_queen_collisions(individual)) for individual in population]  # Fitness es inversamente proporcional a las colisiones

        for attempt in range(num_attempts):
            parent1 = roulette_selection(population, fitnesses)
            parent2 = roulette_selection(population, fitnesses)
            child = order_crossover(parent1, parent2)

            collisions = count_queen_collisions(child)

            if collisions == 0:  # Si no hay colisiones, el hijo es óptimo
                print(f""Generación {generation + 1}, intento {attempt + 1}:"")
                print(""Padre 1:"", parent1)
                print(""Padre 2:"", parent2)
                print(""Hijo óptimo:"", child)
                return child, collisions

            # Intentar mutar el hijo para reducir colisiones
            mutated_child = mutate_queens(child)
            mutated_collisions = count_queen_collisions(mutated_child)

            if mutated_collisions < best_collisions:
                best_child = mutated_child
                best_collisions = mutated_collisions

                print(f""Generación {generation + 1}, intento {attempt + 1}:"")
                print(""Padre 1:"", parent1)
                print(""Padre 2:"", parent2)
                print(""Hijo mutado:"", mutated_child)
                print(""Colisiones:"", mutated_collisions)

            new_population.append(mutated_child)

        if best_collisions == 0:  # Si no hay colisiones, el mejor hijo es óptimo
            return best_child, best_collisions

        population = new_population  # Reemplazar la población antigua con la nueva

    return best_child, best_collisions
    
population = [[random.randint(1, 8) for _ in range(8)] for _ in range(100)]  # Población inicial de 100 individuos con posiciones de reinas aleatorias
best_child, best_collisions = generate_child_without_collisions(population)
print(""Número de colisiones entre reinas en el mejor descendiente:"", best_collisions)
print(""Descendiente con el menor número de colisiones:"", best_child)
plot_queens(best_child)"
8dg0q9dn,MethodConverter,Julien-Bernard,C#,Sunday 15th of October 2023 09:29:37 PM CDT,"    public class MethodConverter : MarkupExtension
    {
        public MethodConverter()
        {
        }

        public string Path { get; set; } = """";

        public string Method { get; set; } = """";

        public override object ProvideValue(IServiceProvider serviceProvider)
        {
            var binding = new ReflectionBindingExtension(Path)
            {
                Mode = BindingMode.OneWay,
                Converter = new FuncValueConverter<object, object?>(e =>
                {
                    if (e == null) { return $""Converter extension error - null element""; }
                    Type? objectType = e.GetType();

                    MethodInfo? methodInfo = objectType?.GetMethod(Method);
                    if (methodInfo != null) {
                        if (methodInfo.GetParameters().Length != 0) { return $""Converter extension error - method {Method} takes parameters""; }
                        return methodInfo.Invoke(e, new object[] { });
                    }

                    var extensionMethods = AppDomain.CurrentDomain.GetAssemblies().ToList()
                        .SelectMany(assembly => assembly.GetTypes())
                        .Where(type => type.IsSealed && !type.IsGenericType && !type.IsNested)
                        .SelectMany(type => type.GetMethods(BindingFlags.Static | BindingFlags.Public))
                        .Where(method => method.IsDefined(typeof(System.Runtime.CompilerServices.ExtensionAttribute), false) && method.GetParameters()[0].ParameterType == objectType);
                    var suitableExtensionMethod = extensionMethods.First(method => method.Name == Method);
                    if (suitableExtensionMethod != null)
                    {
                        if (suitableExtensionMethod.GetParameters().Length != 1) { return $""Converter extension error - extension method {Method} takes parameters""; }
                        return suitableExtensionMethod.Invoke(null, new object[] { e });
                    }

                    return $""Converter extension error - method {Method} unresolved for type {objectType}"";
                })
            };

            return binding.ProvideValue(serviceProvider);
        }
    }
"
HR61UhYs,[ComputerCraft] display_names,spyproof,JSON,Sunday 15th of October 2023 09:26:24 PM CDT,"{
  ""minecraft:netherite_upgrade_smithing_template"": ""Diamond => Netherite"",
  ""minecraft:sentry_armor_trim_smithing_template"": ""Sentry armor trim"",
  ""minecraft:vex_armor_trim_smithing_template"": ""Vex armor trim"",
  ""minecraft:wild_armor_trim_smithing_template"": ""Wild armor trim"",
  ""minecraft:coast_armor_trim_smithing_template"": ""Coast armor trim"",
  ""minecraft:dune_armor_trim_smithing_template"": ""Dune armor trim"",
  ""minecraft:wayfinder_armor_trim_smithing_template"": ""Wayfinder armor trim"",
  ""minecraft:raiser_armor_trim_smithing_template"": ""Raiser armor trim"",
  ""minecraft:shaper_armor_trim_smithing_template"": ""Shaper armor trim"",
  ""minecraft:host_armor_trim_smithing_template"": ""Host armor trim"",
  ""minecraft:ward_armor_trim_smithing_template"": ""Ward armor trim"",
  ""minecraft:silence_armor_trim_smithing_template"": ""Silence armor trim"",
  ""minecraft:tide_armor_trim_smithing_template"": ""Tide armor trim"",
  ""minecraft:snout_armor_trim_smithing_template"": ""Snout armor trim"",
  ""minecraft:rib_armor_trim_smithing_template"": ""Rib armor trim"",
  ""minecraft:eye_armor_trim_smithing_template"": ""Eye armor trim"",
  ""minecraft:spire_armor_trim_smithing_template"": ""Spire armor trim"",
  ""allthemodium:allthemodium_upgrade_smithing_template"": ""Netherite => Allthemodium"",
  ""allthemodium:vibranium_upgrade_smithing_template"": ""Allthemodium => Vibranium"",
  ""allthemodium:unobtainium_upgrade_smithing_template"": ""Vibranium => Unobtainium"",
  ""deeperdarker:warden_upgrade_smithing_template"": ""Netherite => Warden"",
  ""undergarden:forgotten_upgrade_smithing_template"": ""Clogrum => Forgotten""
}"
QjZvnESU,formatStarSystem,horizonstar,Python,Sunday 15th of October 2023 09:21:14 PM CDT,"#!/usr/bin/env python

import sys

# Print out a wiki list of planet/moon names for a system using the
# default Starfield naming scheme.  NOTE that in addition to some
# planets' and moons' having unique names, sometimes Starfield moons
# are named out of orbit order.  (Maybe sometimes planets are too?)

# Can be run interactively (no command line arguments) or
# non-interactively with command line arguments as follows:
#
#   ""system name"" ""number of moons of planet 1"" ""number of moons of planet 2"" ...

if len(sys.argv) > 1:
    cmdlineArgs = list(sys.argv)
    cmdlineArgs.pop(0)
    systemName = cmdlineArgs.pop(0)
    numPlanets = len(cmdlineArgs)
    numMoons = list(map(int, cmdlineArgs))
else:
    systemName = input(""System name: "")
    numPlanets = int(input(""Number of planets: ""))

    numMoons = []
    for i in range(numPlanets):
        numMoons.append( int(input(f""Number of moons of planet {i+1}: "")) )

if numPlanets == 0:
    exit

romans = [""I"", ""II"", ""III"", ""IV"", ""V"", ""VI"", ""VII"", ""VIII"", ""IX"", ""X"", ""XI"", ""XII"", ""XIII"", ""XIV"", ""XV""]
moonLetters = [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j""]
    
for i in range(numPlanets):
    print(f""* [[SF:{systemName} {romans[i]}|]]"")
    for j in range(numMoons[i]):
        print(f""** [[SF:{systemName} {romans[i]}-{moonLetters[j]}|]]"")
"
i7uQsf2h,Hangman,abc123mewot,C,Sunday 15th of October 2023 09:18:56 PM CDT,"#include ""stdio.h""
#include ""stdlib.h""
#include ""string.h""
#include ""stdint.h""

void drawHangman(uint8_t tries, char** extraLns) {
	if(tries > 10) puts(""ERROR - Too many tries!"");
	char lns[8][16];
	strcpy(lns[0], ""    ______    "");
	strcpy(lns[1], ""    |/   |    "");
	strcpy(lns[2], ""    |   `O`   "");
	strcpy(lns[3], ""    |   /|\\  "");
	strcpy(lns[4], ""    |  * | * "");
	strcpy(lns[5], ""    |   /*\\  "");
	strcpy(lns[6], ""    |  /   \\  "");
	strcpy(lns[7], ""____|____     "");
	char fc = ' ';
	switch(tries) {
		case 10: fc = 'X';       // Remove head and replace figure character with X
				lns[2][9] = fc;
		case 9: lns[2][8] = fc;  // Remove ears
				lns[2][10] = fc;
		case 8: lns[3][9] = fc;  // Remove torso
		case 7: lns[4][9] = fc;  // Remove pelvis
				lns[5][9] = fc;  
		case 6: lns[5][8] = fc;  // Remove legs
				lns[5][10] = fc;
		case 5: lns[3][8] = fc;  // Remove arms
				lns[3][10] = fc;
		case 4: lns[6][11] = fc; // Remove right foot
		case 3: lns[6][7] = fc;  // Remvoe left foot
		case 2: lns[4][11] = fc; // Remove right hand
		case 1: lns[4][7] = fc;  // Remove left hand
		break;
	}
	for(uint8_t i = 0; i < 8; i++) {
		printf(""%s%s\n"", ((extraLns && extraLns[i]) ? extraLns[i] : """"), lns[i]);
	}
	printf(""\n%s%d/10 Tries\n\n"", ((extraLns && extraLns[8]) ? extraLns[8] : """"), 10 - tries);
}

int main(int argc, char** argv) {
	if(argc < 2) return 1;
	char* secret = argv[1];
	uint8_t secretLen = strlen(secret);
	
	// Initialize a line containing all the spaces needed
	uint8_t borderLen = secretLen < 12 ? 16 - secretLen : 4;
	uint8_t extraLen = borderLen * 2 + secretLen;
	char* spaceLn = (char*) malloc(extraLen + 1);
	for(uint8_t i = 0; i < extraLen; i++) spaceLn[i] = ' ';
	spaceLn[extraLen] = 0;
	// Initialize a line for the word
	char* wordStr = (char*) malloc(extraLen + 1);
	for(uint8_t i = 0; i < borderLen; i++) wordStr[i] = ' ';
	for(uint8_t i = 0; i < secretLen; i++) wordStr[i + borderLen] = '_';
	for(uint8_t i = 0; i < borderLen; i++) wordStr[i + secretLen + borderLen] = ' ';
	wordStr[extraLen] = 0;
	// Intialize a line for the tries string
	char* triesStr = (char*) malloc(extraLen + 1);
	uint8_t triesBorderLen = (extraLen - 10) / 2;
	for(uint8_t i = 0; i < triesBorderLen; i++) triesStr[i] = ' ';
	for(uint8_t i = 0; i < 10; i++) triesStr[i + triesBorderLen] = '_';
	uint8_t extraSpaceLen = (extraLen - 10) % 2 ? triesBorderLen + 1 : triesBorderLen;
	for(uint8_t i = 0; i < extraSpaceLen; i++) triesStr[i + 10 + triesBorderLen] = ' ';
	triesStr[extraLen] = 0;
	// Extra lines used by drawHangman
	char* extraLns[9] = { spaceLn, spaceLn, spaceLn, wordStr, spaceLn, spaceLn, spaceLn, spaceLn, triesStr };
	
	uint8_t tries = 0;
	puts(""Welcome to hangman!"");
	while(tries <= 10) {
		printf(""\e[2J\e[1;1H"");
		puts(""Try to guess the magic word!"");
		drawHangman(tries, extraLns);
		if(tries == 10) break;
		printf(""Your guess: "");
		char guess = getchar();
		if((guess >= 'a' && guess <= 'z') || (guess >= 'A' && guess <= 'Z') || guess == ' ') {
			getchar();
			uint8_t originalGuess = 1;
			for(uint8_t i = triesBorderLen; i < triesBorderLen + 10; i++) {
				if(triesStr[i] == guess) {
					originalGuess = 0;
					break;
				}
			}
			if(originalGuess) {
				uint8_t winnerCheck = 0, invalidGuess = 1;;
				for(uint8_t i = 0; i < secretLen; i++) {
					if(secret[i] == guess) {
						wordStr[borderLen + i] = guess;
						invalidGuess = 0;
					}
					if(secret[i] == wordStr[borderLen + i]) winnerCheck++;
				}
				if(invalidGuess) {	
					triesStr[triesBorderLen + tries] = guess;
					tries++;
				}
				if(winnerCheck == secretLen) {
					break;
				}
			} else puts(""You've already guessed that letter!"");
		} else puts(""Invalid guess!"");
	}
	if(tries == 10) {
		printf(""You loose! The word was: %s\n"", secret);
	} else {
		printf(""You win with %d tries remaining! Good job!\n"", 10 - tries);
	}
	free(spaceLn);
	free(wordStr);
	return 0;
}
"
hWzVdA8P,c syntax,Kaipa,C++,Sunday 15th of October 2023 07:25:28 PM CDT,"#ifndef WIN32
 
#include <string.h>
 
#include ""cpack.h""
#include ""extract.h""
 
static u_int8_t *
cpack_next_boundary(u_int8_t *buf, u_int8_t *p, size_t alignment)
{
    size_t misalignment = (size_t)(p - buf) % alignment;
 
    if (misalignment == 0)
        return p;
 
    return p + (alignment - misalignment);
}
 
/* Advance to the next wordsize boundary. Return NULL if fewer than
 * wordsize bytes remain in the buffer after the boundary.  Otherwise,
 * return a pointer to the boundary.
 */
static u_int8_t *
cpack_align_and_reserve(struct cpack_state *cs, size_t wordsize)
{
    u_int8_t *next;
 
    /* Ensure alignment. */
    next = cpack_next_boundary(cs->c_buf, cs->c_next, wordsize);
 
    /* Too little space for wordsize bytes? */
    if (next - cs->c_buf + wordsize > cs->c_len)
        return 0;
 
    return next;
}
 
int
cpack_init(struct cpack_state *cs, u_int8_t *buf, size_t buflen)
{
    memset(cs, 0, sizeof(*cs));
 
    cs->c_buf = buf;
    cs->c_len = buflen;
    cs->c_next = cs->c_buf;
 
    return 0;
}
 
/* Unpack a 64-bit unsigned integer. */
int
cpack_uint64(struct cpack_state *cs, u_int64_t *u)
{
    u_int8_t *next;
 
    if ((next = cpack_align_and_reserve(cs, sizeof(*u))) == NULL)
        return -1;
 
    *u = EXTRACT_LE_64BITS(next);
 
    /* Move pointer past the u_int64_t. */
    cs->c_next = next + sizeof(*u);
    return 0;
}
 
/* Unpack a 32-bit unsigned integer. */
int
cpack_uint32(struct cpack_state *cs, u_int32_t *u)
{
    u_int8_t *next;
 
    if ((next = cpack_align_and_reserve(cs, sizeof(*u))) == NULL)
        return -1;
 
    *u = EXTRACT_LE_32BITS(next);
 
    /* Move pointer past the u_int32_t. */
    cs->c_next = next + sizeof(*u);
    return 0;
}
 
/* Unpack a 16-bit unsigned integer. */
int
cpack_uint16(struct cpack_state *cs, u_int16_t *u)
{
    u_int8_t *next;
 
    if ((next = cpack_align_and_reserve(cs, sizeof(*u))) == NULL)
        return -1;
 
    *u = EXTRACT_LE_16BITS(next);
 
    /* Move pointer past the u_int16_t. */
    cs->c_next = next + sizeof(*u);
    return 0;
}
 
// recv hh21-soundury

int cpack_uint8(struct cpack_state *cs, u_int8_t *u)
{
    /* No space left? */
    if ((size_t)(cs->c_next - cs->c_buf) >= cs->c_len)
        return -1;
 
    *u = *cs->c_next;
 
    /* Move pointer past the u_int8_t. */
    cs->c_next++;
    return 0;
}
#endif"
EYe6N02H,2023-10-15_stats.json,rdp_snitch,JSON,Sunday 15th of October 2023 07:18:00 PM CDT,"{
  ""ip"": {
    ""80.94.95.238"": 9,
    ""205.210.31.66"": 9,
    ""45.143.201.62"": 15,
    ""65.109.119.114"": 6,
    ""157.245.4.89"": 3,
    ""154.8.183.80"": 3,
    ""185.170.144.3"": 6,
    ""87.251.75.120"": 3,
    ""198.235.24.211"": 9,
    ""79.124.62.106"": 6,
    ""31.43.185.3"": 6,
    ""47.254.76.136"": 3,
    ""194.28.115.243"": 9,
    ""167.94.138.127"": 3,
    ""106.116.169.71"": 3,
    ""152.32.243.98"": 3,
    ""152.89.198.133"": 6,
    ""62.122.184.165"": 6,
    ""136.144.35.161"": 3,
    ""205.210.31.75"": 9,
    ""193.142.146.17"": 9,
    ""193.142.147.9"": 9,
    ""167.94.145.54"": 3,
    ""188.208.141.105"": 18,
    ""185.170.144.113"": 6,
    ""152.32.157.92"": 3,
    ""111.61.253.55"": 3,
    ""166.0.2.222"": 3,
    ""198.235.24.252"": 9,
    ""165.140.8.210"": 3,
    ""103.81.87.208"": 3,
    ""122.3.71.174"": 6
  },
  ""asn"": {
    ""AS204428"": 9,
    ""AS396982"": 36,
    ""AS210950"": 15,
    ""AS24940"": 6,
    ""AS14061"": 3,
    ""AS45090"": 3,
    ""AS197414"": 12,
    ""AS208091"": 3,
    ""AS207812"": 6,
    ""AS211736"": 6,
    ""AS45102"": 3,
    ""AS50968"": 9,
    ""AS398324"": 3,
    ""AS4134"": 3,
    ""AS135377"": 6,
    ""AS57523"": 12,
    ""AS396356"": 3,
    ""AS208046"": 18,
    ""AS398705"": 3,
    ""AS146943"": 18,
    ""AS24547"": 3,
    ""AS211318"": 3,
    ""AS23470"": 3,
    ""AS140825"": 3,
    ""AS9299"": 6
  },
  ""isp"": {
    ""SS-Net"": 9,
    ""Google LLC"": 36,
    ""TOV E-RISHENNYA"": 15,
    ""Hetzner Online GmbH"": 6,
    ""DigitalOcean, LLC"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 3,
    ""Xhost Internet Solutions LP"": 15,
    ""DM AUTO EOOD"": 6,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Alibaba.com LLC"": 3,
    ""Hostmaster, Ltd."": 9,
    ""Censys, Inc."": 6,
    ""Chinanet"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Latitude.sh"": 3,
    ""ColocationX Ltd."": 18,
    ""Tier 4 Cloud Services"": 18,
    ""China Mobile communications corporation"": 3,
    ""Ipxo LLC"": 6,
    ""Thien Quang Digital technology joint stock company"": 3,
    ""Philippine Long Distance Telephone Co."": 6
  },
  ""org"": {
    ""Internet-Transit LTD"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""TOV VAIZ PARTNER"": 15,
    ""Hetzner Online GmbH"": 6,
    ""DigitalOcean, LLC"": 3,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 3,
    ""Xhostis"": 12,
    ""Xhost Internet Solutions"": 3,
    ""Internet Solutions & Innovations LTD"": 6,
    ""FOP Dmytro Nedilskyi"": 6,
    ""ALICLOUD-US"": 3,
    ""Network Systems Ltd"": 9,
    ""Censys, Inc"": 3,
    ""Chinanet HE"": 3,
    ""Ucloud Information Technology (hk) Limited"": 6,
    ""Starcrecium Limited"": 6,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Panq B.V"": 3,
    ""ColocationX Ltd"": 9,
    ""x33 Networks IBC"": 9,
    ""Censys, Inc."": 3,
    ""Leap"": 18,
    ""China Mobile"": 3,
    ""Webriva Bilisim Hizmetleri"": 3,
    ""Unknown"": 3,
    ""HOSTINGVIET"": 3,
    ""Philippine Long Distance Telephone Company"": 6
  },
  ""regionName"": {
    ""Budapest"": 9,
    ""California"": 42,
    ""Kyiv City"": 15,
    ""Uusimaa"": 6,
    ""New Jersey"": 6,
    ""Guangdong"": 3,
    ""North Holland"": 36,
    ""England"": 6,
    ""English River"": 15,
    ""Michigan"": 3,
    ""Hebei"": 6,
    ""Seoul"": 3,
    ""Moscow"": 12,
    ""Hesse"": 3,
    ""Maharashtra"": 18,
    ""Bursa Province"": 3,
    ""Hanoi"": 3,
    ""Central Luzon"": 6
  },
  ""country"": {
    ""Hungary"": 9,
    ""United States"": 51,
    ""Ukraine"": 15,
    ""Finland"": 6,
    ""China"": 9,
    ""Netherlands"": 36,
    ""United Kingdom"": 6,
    ""Seychelles"": 15,
    ""South Korea"": 3,
    ""Russia"": 12,
    ""Germany"": 3,
    ""India"": 18,
    ""Turkey"": 3,
    ""Vietnam"": 3,
    ""Philippines"": 6
  },
  ""account"": {
    ""Administr"": 45,
    ""bPySDJPLK"": 3,
    ""ZGOFWE"": 3,
    ""nwZLFN"": 3,
    ""hello"": 48,
    ""rWVpZiLLU"": 3,
    ""oMOtZk"": 3,
    ""INaCzr"": 3,
    ""Domain"": 45,
    ""(empty)"": 15,
    ""Administrator"": 6,
    ""aevkMYrxE"": 3,
    ""WPjGda"": 3,
    ""vkHKNB"": 3,
    ""JoXddJpsT"": 3,
    ""wzFYQj"": 3,
    ""wDsqCQ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 195
  },
  ""client_build"": {
    ""Unknown"": 195
  },
  ""client_name"": {
    ""Unknown"": 195
  },
  ""ip_type"": {
    ""Unknown"": 117,
    ""hosting"": 63,
    ""proxy"": 9,
    ""mobile"": 3,
    ""mobile & hosting"": 3
  }
}"
mnbei9LE,2023-10-15_stats.json,rdp_snitch,JSON,Sunday 15th of October 2023 07:16:05 PM CDT,"{
  ""ip"": {
    ""80.94.95.238"": 6,
    ""205.210.31.66"": 6,
    ""45.143.201.62"": 10,
    ""65.109.119.114"": 4,
    ""157.245.4.89"": 2,
    ""154.8.183.80"": 2,
    ""185.170.144.3"": 4,
    ""87.251.75.120"": 2,
    ""198.235.24.211"": 6,
    ""79.124.62.106"": 4,
    ""31.43.185.3"": 4,
    ""47.254.76.136"": 2,
    ""194.28.115.243"": 6,
    ""167.94.138.127"": 2,
    ""106.116.169.71"": 2,
    ""152.32.243.98"": 2,
    ""152.89.198.133"": 4,
    ""62.122.184.165"": 4,
    ""136.144.35.161"": 2,
    ""205.210.31.75"": 6,
    ""193.142.146.17"": 6,
    ""193.142.147.9"": 6,
    ""167.94.145.54"": 2,
    ""188.208.141.105"": 12,
    ""185.170.144.113"": 4,
    ""152.32.157.92"": 2,
    ""111.61.253.55"": 2,
    ""166.0.2.222"": 2,
    ""198.235.24.252"": 6,
    ""165.140.8.210"": 2,
    ""103.81.87.208"": 2,
    ""122.3.71.174"": 4
  },
  ""asn"": {
    ""AS204428"": 6,
    ""AS396982"": 24,
    ""AS210950"": 10,
    ""AS24940"": 4,
    ""AS14061"": 2,
    ""AS45090"": 2,
    ""AS197414"": 8,
    ""AS208091"": 2,
    ""AS207812"": 4,
    ""AS211736"": 4,
    ""AS45102"": 2,
    ""AS50968"": 6,
    ""AS398324"": 2,
    ""AS4134"": 2,
    ""AS135377"": 4,
    ""AS57523"": 8,
    ""AS396356"": 2,
    ""AS208046"": 12,
    ""AS398705"": 2,
    ""AS146943"": 12,
    ""AS24547"": 2,
    ""AS211318"": 2,
    ""AS23470"": 2,
    ""AS140825"": 2,
    ""AS9299"": 4
  },
  ""isp"": {
    ""SS-Net"": 6,
    ""Google LLC"": 24,
    ""TOV E-RISHENNYA"": 10,
    ""Hetzner Online GmbH"": 4,
    ""DigitalOcean, LLC"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""Xhost Internet Solutions LP"": 10,
    ""DM AUTO EOOD"": 4,
    ""FOP Dmytro Nedilskyi"": 4,
    ""Alibaba.com LLC"": 2,
    ""Hostmaster, Ltd."": 6,
    ""Censys, Inc."": 4,
    ""Chinanet"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Latitude.sh"": 2,
    ""ColocationX Ltd."": 12,
    ""Tier 4 Cloud Services"": 12,
    ""China Mobile communications corporation"": 2,
    ""Ipxo LLC"": 4,
    ""Thien Quang Digital technology joint stock company"": 2,
    ""Philippine Long Distance Telephone Co."": 4
  },
  ""org"": {
    ""Internet-Transit LTD"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""TOV VAIZ PARTNER"": 10,
    ""Hetzner Online GmbH"": 4,
    ""DigitalOcean, LLC"": 2,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 2,
    ""Xhostis"": 8,
    ""Xhost Internet Solutions"": 2,
    ""Internet Solutions & Innovations LTD"": 4,
    ""FOP Dmytro Nedilskyi"": 4,
    ""ALICLOUD-US"": 2,
    ""Network Systems Ltd"": 6,
    ""Censys, Inc"": 2,
    ""Chinanet HE"": 2,
    ""Ucloud Information Technology (hk) Limited"": 4,
    ""Starcrecium Limited"": 4,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Panq B.V"": 2,
    ""ColocationX Ltd"": 6,
    ""x33 Networks IBC"": 6,
    ""Censys, Inc."": 2,
    ""Leap"": 12,
    ""China Mobile"": 2,
    ""Webriva Bilisim Hizmetleri"": 2,
    ""Unknown"": 2,
    ""HOSTINGVIET"": 2,
    ""Philippine Long Distance Telephone Company"": 4
  },
  ""regionName"": {
    ""Budapest"": 6,
    ""California"": 28,
    ""Kyiv City"": 10,
    ""Uusimaa"": 4,
    ""New Jersey"": 4,
    ""Guangdong"": 2,
    ""North Holland"": 24,
    ""England"": 4,
    ""English River"": 10,
    ""Michigan"": 2,
    ""Hebei"": 4,
    ""Seoul"": 2,
    ""Moscow"": 8,
    ""Hesse"": 2,
    ""Maharashtra"": 12,
    ""Bursa Province"": 2,
    ""Hanoi"": 2,
    ""Central Luzon"": 4
  },
  ""country"": {
    ""Hungary"": 6,
    ""United States"": 34,
    ""Ukraine"": 10,
    ""Finland"": 4,
    ""China"": 6,
    ""Netherlands"": 24,
    ""United Kingdom"": 4,
    ""Seychelles"": 10,
    ""South Korea"": 2,
    ""Russia"": 8,
    ""Germany"": 2,
    ""India"": 12,
    ""Turkey"": 2,
    ""Vietnam"": 2,
    ""Philippines"": 4
  },
  ""account"": {
    ""Administr"": 30,
    ""bPySDJPLK"": 2,
    ""ZGOFWE"": 2,
    ""nwZLFN"": 2,
    ""hello"": 32,
    ""rWVpZiLLU"": 2,
    ""oMOtZk"": 2,
    ""INaCzr"": 2,
    ""Domain"": 30,
    ""(empty)"": 10,
    ""Administrator"": 4,
    ""aevkMYrxE"": 2,
    ""WPjGda"": 2,
    ""vkHKNB"": 2,
    ""JoXddJpsT"": 2,
    ""wzFYQj"": 2,
    ""wDsqCQ"": 2
  },
  ""keyboard"": {
    ""Unknown"": 130
  },
  ""client_build"": {
    ""Unknown"": 130
  },
  ""client_name"": {
    ""Unknown"": 130
  },
  ""ip_type"": {
    ""Unknown"": 78,
    ""hosting"": 42,
    ""proxy"": 6,
    ""mobile"": 2,
    ""mobile & hosting"": 2
  }
}"
yg0whdd7,2023-10-15_stats.json,rdp_snitch,JSON,Sunday 15th of October 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""80.94.95.238"": 3,
    ""205.210.31.66"": 3,
    ""45.143.201.62"": 5,
    ""65.109.119.114"": 2,
    ""157.245.4.89"": 1,
    ""154.8.183.80"": 1,
    ""185.170.144.3"": 2,
    ""87.251.75.120"": 1,
    ""198.235.24.211"": 3,
    ""79.124.62.106"": 2,
    ""31.43.185.3"": 2,
    ""47.254.76.136"": 1,
    ""194.28.115.243"": 3,
    ""167.94.138.127"": 1,
    ""106.116.169.71"": 1,
    ""152.32.243.98"": 1,
    ""152.89.198.133"": 2,
    ""62.122.184.165"": 2,
    ""136.144.35.161"": 1,
    ""205.210.31.75"": 3,
    ""193.142.146.17"": 3,
    ""193.142.147.9"": 3,
    ""167.94.145.54"": 1,
    ""188.208.141.105"": 6,
    ""185.170.144.113"": 2,
    ""152.32.157.92"": 1,
    ""111.61.253.55"": 1,
    ""166.0.2.222"": 1,
    ""198.235.24.252"": 3,
    ""165.140.8.210"": 1,
    ""103.81.87.208"": 1,
    ""122.3.71.174"": 2
  },
  ""asn"": {
    ""AS204428"": 3,
    ""AS396982"": 12,
    ""AS210950"": 5,
    ""AS24940"": 2,
    ""AS14061"": 1,
    ""AS45090"": 1,
    ""AS197414"": 4,
    ""AS208091"": 1,
    ""AS207812"": 2,
    ""AS211736"": 2,
    ""AS45102"": 1,
    ""AS50968"": 3,
    ""AS398324"": 1,
    ""AS4134"": 1,
    ""AS135377"": 2,
    ""AS57523"": 4,
    ""AS396356"": 1,
    ""AS208046"": 6,
    ""AS398705"": 1,
    ""AS146943"": 6,
    ""AS24547"": 1,
    ""AS211318"": 1,
    ""AS23470"": 1,
    ""AS140825"": 1,
    ""AS9299"": 2
  },
  ""isp"": {
    ""SS-Net"": 3,
    ""Google LLC"": 12,
    ""TOV E-RISHENNYA"": 5,
    ""Hetzner Online GmbH"": 2,
    ""DigitalOcean, LLC"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""Xhost Internet Solutions LP"": 5,
    ""DM AUTO EOOD"": 2,
    ""FOP Dmytro Nedilskyi"": 2,
    ""Alibaba.com LLC"": 1,
    ""Hostmaster, Ltd."": 3,
    ""Censys, Inc."": 2,
    ""Chinanet"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Latitude.sh"": 1,
    ""ColocationX Ltd."": 6,
    ""Tier 4 Cloud Services"": 6,
    ""China Mobile communications corporation"": 1,
    ""Ipxo LLC"": 2,
    ""Thien Quang Digital technology joint stock company"": 1,
    ""Philippine Long Distance Telephone Co."": 2
  },
  ""org"": {
    ""Internet-Transit LTD"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""TOV VAIZ PARTNER"": 5,
    ""Hetzner Online GmbH"": 2,
    ""DigitalOcean, LLC"": 1,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 1,
    ""Xhostis"": 4,
    ""Xhost Internet Solutions"": 1,
    ""Internet Solutions & Innovations LTD"": 2,
    ""FOP Dmytro Nedilskyi"": 2,
    ""ALICLOUD-US"": 1,
    ""Network Systems Ltd"": 3,
    ""Censys, Inc"": 1,
    ""Chinanet HE"": 1,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Starcrecium Limited"": 2,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Panq B.V"": 1,
    ""ColocationX Ltd"": 3,
    ""x33 Networks IBC"": 3,
    ""Censys, Inc."": 1,
    ""Leap"": 6,
    ""China Mobile"": 1,
    ""Webriva Bilisim Hizmetleri"": 1,
    ""Unknown"": 1,
    ""HOSTINGVIET"": 1,
    ""Philippine Long Distance Telephone Company"": 2
  },
  ""regionName"": {
    ""Budapest"": 3,
    ""California"": 14,
    ""Kyiv City"": 5,
    ""Uusimaa"": 2,
    ""New Jersey"": 2,
    ""Guangdong"": 1,
    ""North Holland"": 12,
    ""England"": 2,
    ""English River"": 5,
    ""Michigan"": 1,
    ""Hebei"": 2,
    ""Seoul"": 1,
    ""Moscow"": 4,
    ""Hesse"": 1,
    ""Maharashtra"": 6,
    ""Bursa Province"": 1,
    ""Hanoi"": 1,
    ""Central Luzon"": 2
  },
  ""country"": {
    ""Hungary"": 3,
    ""United States"": 17,
    ""Ukraine"": 5,
    ""Finland"": 2,
    ""China"": 3,
    ""Netherlands"": 12,
    ""United Kingdom"": 2,
    ""Seychelles"": 5,
    ""South Korea"": 1,
    ""Russia"": 4,
    ""Germany"": 1,
    ""India"": 6,
    ""Turkey"": 1,
    ""Vietnam"": 1,
    ""Philippines"": 2
  },
  ""account"": {
    ""Administr"": 15,
    ""bPySDJPLK"": 1,
    ""ZGOFWE"": 1,
    ""nwZLFN"": 1,
    ""hello"": 16,
    ""rWVpZiLLU"": 1,
    ""oMOtZk"": 1,
    ""INaCzr"": 1,
    ""Domain"": 15,
    ""(empty)"": 5,
    ""Administrator"": 2,
    ""aevkMYrxE"": 1,
    ""WPjGda"": 1,
    ""vkHKNB"": 1,
    ""JoXddJpsT"": 1,
    ""wzFYQj"": 1,
    ""wDsqCQ"": 1
  },
  ""keyboard"": {
    ""Unknown"": 65
  },
  ""client_build"": {
    ""Unknown"": 65
  },
  ""client_name"": {
    ""Unknown"": 65
  },
  ""ip_type"": {
    ""Unknown"": 39,
    ""hosting"": 21,
    ""proxy"": 3,
    ""mobile"": 1,
    ""mobile & hosting"": 1
  }
}"
iY6PRYNH,Popup.axaml,Julien-Bernard,C#,Sunday 15th of October 2023 07:05:07 PM CDT,"XAML

<UserControl xmlns=""https://github.com/avaloniaui""
             xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""
             xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""
             xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""
             mc:Ignorable=""d"" d:DesignWidth=""800"" d:DesignHeight=""450""
             x:Class=""LosslessAdapterManager2.Views.Popup"">
  <StackPanel x:Name=""MainStackPanel"" Orientation=""Vertical"" Margin=""10 10 10 10"">
    <SelectableTextBlock x:Name=""Contents"" TextWrapping=""Wrap"" HorizontalAlignment=""Center"" VerticalAlignment=""Center""/>
    <StackPanel x:Name=""Buttons"" HorizontalAlignment=""Right"" Margin=""0 10 0 0"" Orientation=""Horizontal""/>
  </StackPanel>
</UserControl>

Codebehind

using Avalonia;
using Avalonia.Controls;
using Avalonia.Input;
using Avalonia.Threading;
using LosslessAdapterManager2.Utils;
using Material.Icons;
using System.Linq;
using System.Threading.Tasks;

namespace LosslessAdapterManager2.Views
{
    public class PopupOptions
    {
        public bool topMost = false;
        public string? okButtonText = null;
        public MaterialIconKind? icon = null;
        public bool yesNo = false;
        public bool noButton = false;
    }

    public partial class Popup : Window
    {
        public bool resultIsYes = false;
        private Popup(string title, string contents, PopupOptions options)
        {
            InitializeComponent();
            Topmost = options.topMost;
            Title = title;
            Icon = WindowIconUtils.WindowIconFromMaterialIcon(options.icon != null ? options.icon.Value : MaterialIconKind.Warning);

            var _contents = this.FindControl<TextBlock>(""Contents"");
            if (_contents != null) {
                _contents.Text = contents;
            }

            var buttons = this.FindControl<StackPanel>(""Buttons"");
            if (buttons != null)
            {
                if (options.noButton)
                {
                    KeyDown += (sender, e) => {
                        if ((new[] { Key.Space, Key.Enter, Key.Escape }).Any(x => x == e.Key))
                            Close();
                    };
                }
                else if (options.yesNo)
                {
                    var noButton = new Button() { Content = ""No"", Margin = new Thickness(10, 0, 0, 0), MinWidth = 60, HorizontalContentAlignment = Avalonia.Layout.HorizontalAlignment.Center };
                    noButton.Click += (sender, e) =>
                    {
                        resultIsYes = false;
                        Close();
                    };
                    buttons.Children.Add(noButton);

                    var yesButton = new Button() { Content = ""Yes"", Margin = new Thickness(10, 0, 0, 0), MinWidth = 60, HorizontalContentAlignment = Avalonia.Layout.HorizontalAlignment.Center };
                    yesButton.Click += (sender, e) =>
                    {
                        resultIsYes = true;
                        Close();
                    };
                    buttons.Children.Add(yesButton);

                    KeyDown += (sender, e) => {
                        if ((new[] { Key.Space, Key.Enter }).Any(x => x == e.Key))
                        {
                            resultIsYes = true;
                            Close();
                        }
                        if ((new[] { Key.Escape }).Any(x => x == e.Key))
                        {
                            resultIsYes = false;
                            Close();
                        }
                    };
                }
                else
                {
                    var okButton = new Button() { Content = options.okButtonText == null ? ""OK"" : options.okButtonText, MinWidth = 60, HorizontalContentAlignment = Avalonia.Layout.HorizontalAlignment.Center };
                    okButton.Click += (sender, e) => Close();
                    buttons.Children.Add(okButton);

                    KeyDown += (sender, e) => {
                        if ((new[] { Key.Space, Key.Enter, Key.Escape, Key.Right, Key.Down }).Any(x => x == e.Key))
                            Close();
                    };
                }

                var mainStackPanel = this.FindControl<StackPanel>(""MainStackPanel"");
                if (mainStackPanel != null)
                {
                    //mainStackPanel.MaxWidth = 1000;
                    mainStackPanel.Measure(new Size(1000, double.PositiveInfinity));
                    Size desiredSize = mainStackPanel.DesiredSize;
                    Width = desiredSize.Width+20;
                    Height = desiredSize.Height;
                }
            }

            /*var okButton = this.FindControl<Button>(""OKButton"");
            if (okButton != null)
            {
                okButton.Click += (sender, e) => Close();
                if (options.okButtonText != null) okButton.Content = options.okButtonText;
            }*/
        }

        public static Task<bool> Show(string title, string contents)
        {
            return Show(title, contents, new PopupOptions());
        }

        public static Task<bool> Show(string title, string contents, PopupOptions options)
        {
            return Dispatcher.UIThread.InvokeAsync(() =>
            {
                var window = new Popup(title, contents, options);
                var tcs = new TaskCompletionSource<bool>();

                window.Closed += (sender, e) =>
                {
                    tcs.TrySetResult(window.resultIsYes);
                };

                window.Show();

                return tcs.Task;
            });
        }
    }
}
"
BqSijcMk,display link,cerr_,Bash,Sunday 15th of October 2023 06:31:06 PM CDT,"Oct 15 16:03:01 NotebookRon audit[10034]: USER_ACCT pid=10034 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='op=PAM:accounting
grantors=pam_access,pam_unix,pam_localuser acct=""root"" exe=""/usr/sbin/crond"" hostname=? addr=? terminal=cron res=success'
Oct 15 16:03:01 NotebookRon audit[10034]: CRED_ACQ pid=10034 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='op=PAM:setcred gra
ntors=pam_env,pam_fprintd acct=""root"" exe=""/usr/sbin/crond"" hostname=? addr=? terminal=cron res=success'
Oct 15 16:03:01 NotebookRon systemd[1]: Created slice user-0.slice - User Slice of UID 0.
Oct 15 16:03:01 NotebookRon systemd[1]: Starting user-runtime-dir@0.service - User Runtime Directory /run/user/0...
Oct 15 16:03:01 NotebookRon systemd[1]: Finished user-runtime-dir@0.service - User Runtime Directory /run/user/0.
Oct 15 16:03:01 NotebookRon audit[1]: SERVICE_START pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='unit=user-runtime-dir@0 comm=""syst
emd"" exe=""/usr/lib/systemd/systemd"" hostname=? addr=? terminal=? res=success'
Oct 15 16:03:02 NotebookRon systemd[1]: Starting user@0.service - User Manager for UID 0...
Oct 15 16:03:02 NotebookRon uresourced[1963]: Setting resources on user-0.slice (MemoryMin: 0, MemoryLow: 0, CPUWeight: 100, IOWeight: 100)
Oct 15 16:03:02 NotebookRon uresourced[1963]: Setting resources on user@0.service (MemoryMin: 0, MemoryLow: 0, CPUWeight: 100, IOWeight: 100)
Oct 15 16:03:02 NotebookRon audit[10042]: USER_ACCT pid=10042 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='op=PAM:accounting grantors=pam
_unix acct=""root"" exe=""/usr/lib/systemd/systemd"" hostname=? addr=? terminal=? res=success'
Oct 15 16:03:02 NotebookRon audit[10042]: CRED_ACQ pid=10042 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='op=PAM:setcred grantors=? acct=
""root"" exe=""/usr/lib/systemd/systemd"" hostname=? addr=? terminal=? res=failed'
Oct 15 16:03:02 NotebookRon audit[10042]: USER_ROLE_CHANGE pid=10042 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='pam: default-context=un
confined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 selected-context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 exe=""/usr/lib/systemd/systemd"" hostname=? ad
dr=? terminal=? res=success'
Oct 15 16:03:02 NotebookRon (systemd)[10042]: pam_unix(systemd-user:session): session opened for user root(uid=0) by (uid=0)
Oct 15 16:03:02 NotebookRon audit[10042]: USER_START pid=10042 uid=0 auid=0 ses=51 subj=system_u:system_r:init_t:s0 msg='op=PAM:session_open grantors=pam_selinux,pam_s
elinux,pam_loginuid,pam_keyinit,pam_namespace,pam_systemd_home,pam_keyinit,pam_limits,pam_systemd,pam_unix acct=""root"" exe=""/usr/lib/systemd/systemd"" hostname=? addr=?
terminal=? res=success'
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=414 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=414 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=415 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=415 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=416 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=416 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=417 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=417 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=418 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=418 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=419 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=419 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=420 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=421 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=420 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=421 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=422 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=422 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=423 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=423 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=424 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=424 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=425 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=425 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=426 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=427 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=427 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=428 op=LOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=426 op=UNLOAD
Oct 15 16:03:02 NotebookRon audit: BPF prog-id=428 op=UNLOAD
Oct 15 16:03:02 NotebookRon systemd[10042]: Queued start job for default target default.target.
Oct 15 16:03:02 NotebookRon systemd[10042]: Created slice app.slice - User Application Slice.
Oct 15 16:03:02 NotebookRon systemd[10042]: Started systemd-tmpfiles-clean.timer - Daily Cleanup of User's Temporary Directories.
Oct 15 16:03:02 NotebookRon systemd[10042]: Reached target paths.target - Paths.
Oct 15 16:03:02 NotebookRon systemd[10042]: Reached target timers.target - Timers.
Oct 15 16:03:02 NotebookRon systemd[10042]: Starting dbus.socket - D-Bus User Message Bus Socket...
Oct 15 16:03:02 NotebookRon systemd[10042]: pipewire-pulse.socket - PipeWire PulseAudio was skipped because of an unmet condition check (ConditionUser=!root).
Oct 15 16:03:02 NotebookRon systemd[10042]: Listening on pipewire.socket - PipeWire Multimedia System Socket.
Oct 15 16:03:02 NotebookRon systemd[10042]: Starting systemd-tmpfiles-setup.service - Create User's Volatile Files and Directories...
Oct 15 16:03:02 NotebookRon systemd[10042]: Listening on dbus.socket - D-Bus User Message Bus Socket.
Oct 15 16:03:02 NotebookRon systemd[10042]: Reached target sockets.target - Sockets.
Oct 15 16:03:02 NotebookRon systemd[10042]: Finished systemd-tmpfiles-setup.service - Create User's Volatile Files and Directories.
Oct 15 16:03:02 NotebookRon systemd[10042]: Reached target basic.target - Basic System.
Oct 15 16:03:02 NotebookRon systemd[10042]: Reached target default.target - Main User Target.
Oct 15 16:03:02 NotebookRon systemd[10042]: Startup finished in 188ms.
Oct 15 16:03:02 NotebookRon systemd[1]: Started user@0.service - User Manager for UID 0.
Oct 15 16:03:02 NotebookRon audit[1]: SERVICE_START pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='unit=user@0 comm=""systemd"" exe=""/u
sr/lib/systemd/systemd"" hostname=? addr=? terminal=? res=success'
Oct 15 16:03:02 NotebookRon systemd[1]: Started session-50.scope - Session 50 of User root.
Oct 15 16:03:02 NotebookRon audit[10034]: USER_START pid=10034 uid=0 auid=0 ses=50 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='op=PAM:session_open grantors=pam_
loginuid,pam_keyinit,pam_limits,pam_systemd acct=""root"" exe=""/usr/sbin/crond"" hostname=? addr=? terminal=cron res=success'
Oct 15 16:03:02 NotebookRon audit[10034]: CRED_REFR pid=10034 uid=0 auid=0 ses=50 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='op=PAM:setcred grantors=pam_env,pa
m_fprintd acct=""root"" exe=""/usr/sbin/crond"" hostname=? addr=? terminal=cron res=success'
Oct 15 16:03:02 NotebookRon CROND[10093]: (root) CMD (/home/ron/scripts/chrg_thrshld_set.sh)
Oct 15 16:03:02 NotebookRon CROND[10034]: (root) CMDEND (/home/ron/scripts/chrg_thrshld_set.sh)
Oct 15 16:03:02 NotebookRon audit[10034]: CRED_DISP pid=10034 uid=0 auid=0 ses=50 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='op=PAM:setcred grantors=pam_env,pa
m_fprintd acct=""root"" exe=""/usr/sbin/crond"" hostname=? addr=? terminal=cron res=success'
Oct 15 16:03:02 NotebookRon audit[10034]: USER_END pid=10034 uid=0 auid=0 ses=50 subj=system_u:system_r:crond_t:s0-s0:c0.c1023 msg='op=PAM:session_close grantors=pam_l
oginuid,pam_keyinit,pam_limits,pam_systemd acct=""root"" exe=""/usr/sbin/crond"" hostname=? addr=? terminal=cron res=success'
Oct 15 16:03:02 NotebookRon systemd[1]: session-50.scope: Deactivated successfully.
Oct 15 16:03:03 NotebookRon systemd[1]: systemd-hostnamed.service: Deactivated successfully.
Oct 15 16:03:03 NotebookRon audit[1]: SERVICE_STOP pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='unit=systemd-hostnamed comm=""system
d"" exe=""/usr/lib/systemd/systemd"" hostname=? addr=? terminal=? res=success'
Oct 15 16:03:03 NotebookRon audit: BPF prog-id=413 op=UNLOAD
Oct 15 16:03:03 NotebookRon audit: BPF prog-id=412 op=UNLOAD
Oct 15 16:03:03 NotebookRon audit: BPF prog-id=411 op=UNLOAD
Oct 15 16:03:05 NotebookRon kernel: usb 2-1: new SuperSpeed USB device number 3 using xhci_hcd
Oct 15 16:03:05 NotebookRon kernel: usb 2-1: New USB device found, idVendor=17e9, idProduct=4301, bcdDevice=35.94
Oct 15 16:03:05 NotebookRon kernel: usb 2-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3
Oct 15 16:03:05 NotebookRon kernel: usb 2-1: Product: USB3.0 UHD HDMI Adapter
Oct 15 16:03:05 NotebookRon kernel: usb 2-1: Manufacturer: DisplayLink
Oct 15 16:03:05 NotebookRon kernel: usb 2-1: SerialNumber: 000100122023380
Oct 15 16:03:05 NotebookRon kernel: usb 2-1: Warning! Unlikely big volume range (=511), cval->res is probably wrong.
Oct 15 16:03:05 NotebookRon kernel: usb 2-1: [13] FU [DisplayLink Audio Playback Volume] ch = 2, val = -8176/0/16
Oct 15 16:03:05 NotebookRon mtp-probe[10159]: checking bus 2, device 3: ""/sys/devices/pci0000:00/0000:00:14.0/usb2/2-1""
Oct 15 16:03:05 NotebookRon mtp-probe[10159]: bus: 2, device: 3 was not an MTP device
Oct 15 16:03:05 NotebookRon systemd[10042]: Reached target sound.target - Sound Card.
Oct 15 16:03:05 NotebookRon systemd[2415]: Reached target sound.target - Sound Card.
Oct 15 16:03:05 NotebookRon systemd[1]: Starting displaylink-driver.service - DisplayLink Driver Service...
Oct 15 16:03:05 NotebookRon mtp-probe[10186]: checking bus 2, device 3: ""/sys/devices/pci0000:00/0000:00:14.0/usb2/2-1""
Oct 15 16:03:05 NotebookRon mtp-probe[10186]: bus: 2, device: 3 was not an MTP device
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] Initialising logging on level 4
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] Atomic driver: yes
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] Increasing device count to 4
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] (card0) Opened by Task 10184 (modprobe) of process 10184 (modprobe)
Oct 15 16:03:05 NotebookRon kernel: evdi evdi.0: [drm] Cannot find any crtc or sizes
Oct 15 16:03:05 NotebookRon kernel: [drm] Initialized evdi 1.14.1 20230721 for evdi.0 on minor 0
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] Evdi platform_device create
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] (card2) Opened by Task 10184 (modprobe) of process 10184 (modprobe)
Oct 15 16:03:05 NotebookRon kernel: evdi evdi.1: [drm] Cannot find any crtc or sizes
Oct 15 16:03:05 NotebookRon kernel: [drm] Initialized evdi 1.14.1 20230721 for evdi.1 on minor 2
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] Evdi platform_device create
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] (card3) Opened by Task 10184 (modprobe) of process 10184 (modprobe)
Oct 15 16:03:05 NotebookRon kernel: evdi evdi.2: [drm] Cannot find any crtc or sizes
Oct 15 16:03:05 NotebookRon kernel: [drm] Initialized evdi 1.14.1 20230721 for evdi.2 on minor 3
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] Evdi platform_device create
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] (card4) Opened by Task 10184 (modprobe) of process 10184 (modprobe)
Oct 15 16:03:05 NotebookRon kernel: evdi evdi.3: [drm] Cannot find any crtc or sizes
Oct 15 16:03:05 NotebookRon kernel: [drm] Initialized evdi 1.14.1 20230721 for evdi.3 on minor 4
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] Evdi platform_device create
Oct 15 16:03:05 NotebookRon systemd[1]: Started displaylink-driver.service - DisplayLink Driver Service.
Oct 15 16:03:05 NotebookRon audit[1]: SERVICE_START pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='unit=displaylink-driver comm=""syst
emd"" exe=""/usr/lib/systemd/systemd"" hostname=? addr=? terminal=? res=success'
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): EDID vendor \""ACI\"", prod id 9210\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Using hsync ranges from config file\n(II) modeset(0): Using vrefresh ranges from config
file\n(II) modeset(0): Printing DDC gathered Modelines:\n(II) modeset(0): Modeline \""1920x1080\""x0.0  148.50  1920 2008 2052 2200  1080 1084 1089 1125 +hsync +vsync (6
7.5 kHz eP)\n(II) modeset(0): Modeline \""720x480\""x0.0   27.00  720 736 798 858  480 489 495 525 -hsync -vsync (31.5 kHz e)\n(II) modeset(0): Modeline \""1280x720\""x0.0
  74.25  1280 1390 1430 1650  720 725 730 750 +hsync +vsync (45.0 kHz e)\n(II) modeset(0): Modeline \""1280x720\""x0.0   74.25  1280 1720 1760 1980  720 725 730 750 +hs
ync +vsync (37.5 kHz e)\n(II) modeset(0): Modeline \""720x576\""x0.0   27.00  720 732 796 864  576 581 586 625 -hsync -vsync (31.2 kHz e)\n(II) modeset(0): Modeline \""64
0x480\""x0.0   25.18  640 656 752 800  480 490 492 525 -hsync -vsync (31.5 kHz e)\n(II) modeset(0): Modeline \""1920x1080i\""x0.0   74.25  1920 2448 2492 2640  1080 1084
1094 1125 interlace +hsync +vsync (28.1 kHz e)\n(II) modeset(0): Modeline \""1920x1080i\""x0.0   74.25  1920 2008 2052 2200  1080 1084 1094 1125 interlace +hsync +vsync
(33.8 kHz e)\n(II) modeset(0): Modeline \""1440x480\""x0.0   54.00  1440 1472 1596 1716  480 489 495 525 -hsync -vsync (31.5 kHz e)\n(II) modeset(0): Modeline \""1440x576
\""x0.0   54.00  1440 1464 1592 1728  576 581 586 625 -hsync -vsync (31.2 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1920x1080\""x0.0  148.50  1920 2448 2492 2640  1080 1084 1089 1125 +hsync +vsy
nc (56.2 kHz e)\n(II) modeset(0): Modeline \""800x600\""x0.0   40.00  800 840 968 1056  600 601 605 628 +hsync +vsync (37.9 kHz e)\n(II) modeset(0): Modeline \""800x600\""
x0.0   36.00  800 824 896 1024  600 601 603 625 +hsync +vsync (35.2 kHz e)\n(II) modeset(0): Modeline \""640x480\""x0.0   31.50  640 656 720 840  480 481 484 500 -hsync
-vsync (37.5 kHz e)\n(II) modeset(0): Modeline \""640x480\""x0.0   30.24  640 704 768 864  480 483 486 525 -hsync -vsync (35.0 kHz e)\n(II) modeset(0): Modeline \""720x40
0\""x0.0   28.32  720 738 846 900  400 412 414 449 -hsync +vsync (31.5 kHz e)\n(II) modeset(0): Modeline \""1280x1024\""x0.0  135.00  1280 1296 1440 1688  1024 1025 1028
1066 +hsync +vsync (80.0 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1024x768\""x0.0   78.75  1024 1040 1136 1312  768 769 772 800 +hsync +vsync (6
0.0 kHz e)\n(II) modeset(0): Modeline \""1024x768\""x0.0   75.00  1024 1048 1184 1328  768 771 777 806 -hsync -vsync (56.5 kHz e)\n(II) modeset(0): Modeline \""1024x768\""
x0.0   65.00  1024 1048 1184 1344  768 771 777 806 -hsync -vsync (48.4 kHz e)\n(II) modeset(0): Modeline \""832x624\""x0.0   57.28  832 864 928 1152  624 625 628 667 -hs
ync -vsync (49.7 kHz e)\n(II) modeset(0): Modeline \""800x600\""x0.0   49.50  800 816 896 1056  600 601 604 625 +hsync +vsync (46.9 kHz e)\n(II) modeset(0): Modeline \""8
00x600\""x0.0   50.00  800 856 976 1040  600 637 643 666 +hsync +vsync (48.1 kHz e)\n(II) modeset(0): Modeline \""1152x864\""x0.0  108.00  1152 1216 1344 1600  864 865 86
8 900 +hsync +vsync (67.5 kHz e)\n(II) modeset(0): Modeline \""1280x960\""x0.0  108.00  1280 1376 1488 1800  960 961 964 1000 +hsync +vsync (60.0 kHz e)\n(II) modeset(0)
: Modeline \""1280x1024\""x0.0  108.00  1280 1328 1440 1688  1024 1025 1028 1066 +hsync +vsync (64.0 kHz e)\n(II) modeset(0): Modeline \""1440x900\""x0.0   88.75  1440 148
8 1520 1600  900 903 909 926 +hsync -vsync (55.5 kHz e)\n(II) modeset(0): Modeline \""1680x1050\""x0.0  119.00  1680 1728 1760 1840  1050 1053 1059 1080 +hsync -vsync (6
4.7 kHz e)\n(II) modeset(0): Modeline \""1280x800\""x0.0   71.00  1280 1328 1360 1440  800 803 809 823 +hsync -vsync (49.3 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(--) modeset(0): HDMI max TMDS frequency 300000KHz\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) config/udev: removing GPU device /sys/devices/platform/evdi.0/drm/card0 /dev/dri/card0\n(II) config/
udev: Adding drm device (/dev/dri/card0)\n(II) xfree86: Adding drm device (/dev/dri/card0)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) systemd-logind: got fd for /dev/dri/card0 226:0 fd 157 paused 0\n(II) LoadModule: \""modesetting\""\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/drivers/modesetting_drv.so\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module modesetting: vendor=\""X.Org Foundation\""\n\tcompiled for 1.20.14, module version = 1.20.14\n\
tModule class: X.Org Video Driver\n\tABI class: X.Org Video Driver, version 24.1\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) UnloadModule: \""modesetting\""\n(II) ""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""Unloading modesetting\n(II) Failed to load module \""modesetting\"" (already loaded, 0)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G0): using drv /dev/dri/card0\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G0): Depth 24, ""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(==) framebuffer bpp 32\n(II) Applying OutputClass \""DisplayLink\"" options to /dev/dri/card0\n(**) modese
t(G0): Option \""SWcursor\""""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: "" \""on\""\n(**) modeset(G0): Option \""ShadowFB\""""
Oct 15 16:03:05 NotebookRon kernel: evdi: [I] (card0) Opened by Task 958 (systemd-logind) of process 958 (systemd-logind)
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: "" \""true\""\n(**) modeset(G0): Option \""AccelMethod\""""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: "" \""none\""\n(**) modeset(G0): Option \""PageFlip\""""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: "" \""off\""\n(==) modeset(G0): RGB weight 888\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G0): Default visual is TrueColor\n(**) modeset(G0): glamor disabled\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G0): ShadowFB: preferred NO, enabled YES\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G0): Double-buffered shadow updates: off\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G0): Output DVI-I-1-1 has no monitor section\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G0): Using gamma correction (1.0, 1.0, 1.0)\n(**) modeset(G0): Display dimensions: (510, 290
) mm\n(**) modeset(G0): DPI set to (50, 67)\n(II) Loading sub module \""fb\""\n(II) LoadModule: \""fb\""""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/libfb.so\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module fb: vendor=\""X.Org Foundation\""\n\tcompiled for 1.20.14""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: "", module version = 1.0.0\n\tABI class: X.Org ANSI C Emulation, version 0.4\n(II) Loading sub module \""sha
dow\""\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) LoadModule: \""shadow\""\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/libshadow.so\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module shadow: vendor=\""X.Org Foundation\""\n\tcompiled for 1.20.14, module version = 1.1.0\n\tABI cl
ass: X.Org ANSI C Emulation, version 0.4\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G0): Backing store enabled\n(==) modeset(G0): Silken mouse enabled\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G0): Initializing kms color map for depth 24, 8 bpc.\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G0): DPMS enabled\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G0): Damage tracking initialized\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""xf86: found device 2\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): EDID vendor \""ACI\"", prod id 9210\n(II) modeset(0): Using hsync ranges from config file\
n(II) modeset(0): Using vrefresh ranges from config file\n(II) modeset(0): Printing DDC gathered Modelines:\n(II) modeset(0): Modeline \""1920x1080\""x0.0  148.50  1920
2008 2052 2200  1080 1084 1089 1125 +hsync +vsync (67.5 kHz eP)\n(II) modeset(0): Modeline \""720x480\""x0.0   27.00  720 736 798 858  480 489 495 525 -hsync -vsync (31.
5 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1280x720\""x0.0   74.25  1280 1390 1430 1650  720 725 730 750 +hsync +vsync (4
5.0 kHz e)\n(II) modeset(0): Modeline \""1280x720\""x0.0   74.25  1280 1720 1760 1980  720 725 730 750 +hsync +vsync (37.5 kHz e)\n(II) modeset(0): Modeline \""720x576\""x
0.0   27.00  720 732 796 864  576 581 586 625 -hsync -vsync (31.2 kHz e)\n(II) modeset(0): Modeline \""640x480\""x0.0   25.18  640 656 752 800  480 490 492 525 -hsync -v
sync (31.5 kHz e)\n(II) modeset(0): Modeline \""1920x1080i\""x0.0   74.25  1920 2448 2492 2640  1080 1084 1094 1125 interlace +hsync +vsync (28.1 kHz e)\n(II) modeset(0)
: Modeline \""1920x1080i\""x0.0   74.25  1920 2008 2052 2200  1080 1084 1094 1125 interlace +hsync +vsync (33.8 kHz e)\n(II) modeset(0): Modeline \""1440x480\""x0.0   54.0
0  1440 1472 1596 1716  480 489 495 525 -hsync -vsync (31.5 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1440x576\""x0.0   54.00  1440 1464 1592 1728  576 581 586 625 -hsync -vsync (3
1.2 kHz e)\n(II) modeset(0): Modeline \""1920x1080\""x0.0  148.50  1920 2448 2492 2640  1080 1084 1089 1125 +hsync +vsync (56.2 kHz e)\n(II) modeset(0): Modeline \""800x6
00\""x0.0   40.00  800 840 968 1056  600 601 605 628 +hsync +vsync (37.9 kHz e)\n(II) modeset(0): Modeline \""800x600\""x0.0   36.00  800 824 896 1024  600 601 603 625 +h
sync +vsync (35.2 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""640x480\""x0.0   31.50  640 656 720 840  480 481 484 500 -hsync -vsync (37.5 k
Hz e)\n(II) modeset(0): Modeline \""640x480\""x0.0   30.24  640 704 768 864  480 483 486 525 -hsync -vsync (35.0 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""720x400\""x0.0   28.32  720 738 846 900  400 412 414 449 -hsync +vsync (31.5 k
Hz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1280x1024\""x0.0  135.00  1280 1296 1440 1688  1024 1025 1028 1066 +hsync +vsy
nc (80.0 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1024x768\""x0.0   78.75  1024 1040 1136 1312  768 769 772 800 +hsync +vsync (6
0.0 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1024x768\""x0.0   75.00  1024 1048 1184 1328  768 771 777 806 -hsync -vsync (5
6.5 kHz e)\n(II) modeset(0): Modeline \""1024x768\""x0.0   65.00  1024 1048 1184 1344  768 771 777 806 -hsync -vsync (48.4 kHz e)\n(II) modeset(0): Modeline \""832x624\""x
0.0   57.28  832 864 928 1152  624 625 628 667 -hsync -vsync (49.7 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""800x600\""x0.0   49.50  800 816 896 1056  600 601 604 625 +hsync +vsync (46.9
kHz e)\n(II) modeset(0): Modeline \""800x600\""x0.0   50.00  800 856 976 1040  600 637 643 666 +hsync +vsync (48.1 kHz e)\n(II) modeset(0): Modeline \""1152x864\""x0.0  10
8.00  1152 1216 1344 1600  864 865 868 900 +hsync +vsync (67.5 kHz e)\n(II) modeset(0): Modeline \""1280x960\""x0.0  108.00  1280 1376 1488 1800  960 961 964 1000 +hsync
+vsync (60.0 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1280x1024\""x0.0  108.00  1280 1328 1440 1688  1024 1025 1028 1066 +hsync +vsy
nc (64.0 kHz e)\n(II) modeset(0): Modeline \""1440x900\""x0.0   88.75  1440 1488 1520 1600  900 903 909 926 +hsync -vsync (55.5 kHz e)\n(II) modeset(0): Modeline \""1680x
1050\""x0.0  119.00  1680 1728 1760 1840  1050 1053 1059 1080 +hsync -vsync (64.7 kHz e)\n""
Oct 15 16:03:05 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1280x800\""x0.0   71.00  1280 1328 1360 1440  800 803 809 823 +hsync -vsync (4
9.3 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(--) modeset(0): HDMI max TMDS frequency 300000KHz\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) config/udev: removing GPU device /sys/devices/platform/evdi.1/drm/card2 /dev/dri/card2\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) config/udev: Adding drm device (/dev/dri/card2)\n(II) xfree86: Adding drm device (/dev/dri/card2)\n""
Oct 15 16:03:06 NotebookRon kernel: evdi: [I] (card2) Opened by Task 958 (systemd-logind) of process 958 (systemd-logind)
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) systemd-logind: got fd for /dev/dri/card2 226:2 fd 159 paused 0\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) LoadModule: \""modesetting\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/drivers/modesetting_drv.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module modesetting: vendor=\""X.Org Foundation\""\n\tcompiled for 1.20.14""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "", module version = 1.20.14\n\tModule class: X.Org Video Driver\n\tABI class: X.Org Video Driver, version
24.1\n(II) ""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""UnloadModule: \""modesetting\""\n(II) Unloading modesetting\n(II) Failed to load module \""modesetting\"" (al
ready loaded, 0)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G1): using drv /dev/dri/card2\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G1): Depth 24, ""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) framebuffer bpp 32\n(II) Applying OutputClass \""DisplayLink\"" options to /dev/dri/card2\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G1): Option \""SWcursor\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "" \""on\""\n(**) modeset(G1): Option \""ShadowFB\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "" \""true\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\n(**) modeset(G1): Option \""AccelMethod\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "" \""none\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G1): Option \""PageFlip\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "" \""off\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G1): RGB weight 888\n(==) modeset(G1): Default visual is TrueColor\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G1): glamor disabled\n(II) modeset(G1): ShadowFB: preferred NO, enabled YES\n(II) modeset(G1
): Double-buffered shadow updates: off\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G1): Output DVI-I-2-2 has no monitor section\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G1): Using gamma correction (1.0, 1.0, 1.0)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G1): Display dimensions: (510, 290) mm\n(**) modeset(G1): DPI set to (50, 67)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading sub module \""fb\""\n(II) LoadModule: \""fb\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/libfb.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module fb: vendor=\""X.Org Foundation\""\n\tcompiled for 1.20.14, module version = 1.0.0\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\tABI class: X.Org ANSI C Emulation, version 0.4\n(II) Loading sub module \""shadow\""\n(II) LoadModule: \""
shadow\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/libshadow.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module shadow: vendor=\""X.Org Foundation\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\tcompiled for 1.20.14, module version = 1.1.0\n\tABI class: X.Org ANSI C Emulation, version 0.4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G1): Backing store enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G1): Silken mouse enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G1): Initializing kms color map for depth 24, 8 bpc.\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G1): DPMS enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G1): Damage tracking initialized\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""xf86: found device 3\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) config/udev: removing GPU device /sys/devices/platform/evdi.3/drm/card4 /dev/dri/card4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) config/udev: Adding drm device (/dev/dri/card4)\n(II) xfree86: Adding drm device (/dev/dri/card4)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) systemd-logind: got fd for /dev/dri/card4 226:4 fd 163 paused 0\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) LoadModule: \""modesetting\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/drivers/modesetting_drv.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module modesetting: vendor=\""X.Org Foundation\""\n\tcompiled for 1.20.14""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "", module version = 1.20.14\n\tModule class: X.Org Video Driver\n\tABI class: X.Org Video Driver, version
24.1\n(II)""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "" UnloadModule: \""modesetting\""\n(II) Unloading modesetting\n(II) Failed to load module \""modesetting\"" (a
lready loaded, 0)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G2): using drv /dev/dri/card4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G2): Depth 24, ""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) framebuffer bpp 32\n(II) Applying OutputClass \""DisplayLink\"" options to /dev/dri/card4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G2): Option \""SWcursor\"" \""on\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G2): Option \""ShadowFB\"" \""true\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G2): Option \""AccelMethod\"" \""none\""\n""
Oct 15 16:03:06 NotebookRon kernel: evdi: [I] (card4) Opened by Task 958 (systemd-logind) of process 958 (systemd-logind)
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G2): Option \""PageFlip\"" \""off\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G2): RGB weight 888\n(==) modeset(G2): Default visual is TrueColor\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G2): glamor disabled\n(II) modeset(G2): ShadowFB: preferred NO, enabled YES\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G2): Double-buffered shadow updates: off\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G2): Output DVI-I-3-4 has no monitor section\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G2): Using gamma correction (1.0, 1.0, 1.0)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G2): Display dimensions: (510, 290) mm\n(**) modeset(G2): DPI set to (50, 67)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading sub module \""fb\""\n(II) LoadModule: \""fb\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/libfb.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module fb: vendor=\""X.Org Foundation\""\n\tcompiled for 1.20.14, module version = 1.0.0\n\tABI class:
X.Org ANSI C Emulation, version 0.4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading sub module \""shadow\""\n(II) LoadModule: \""shadow\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/libshadow.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module shadow: vendor=\""X.Org Foundation\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\tcompiled for 1.20.14""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "", module version = 1.1.0\n\tABI class: X.Org ANSI C Emulation, version 0.4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G2): Backing store enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G2): Silken mouse enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G2): Initializing kms color map for depth 24, 8 bpc.\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G2): DPMS enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G2): Damage tracking initialized\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""xf86: found device 4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) config/udev: removing GPU device /sys/devices/platform/evdi.2/drm/card3 /dev/dri/card3\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) config/udev: Adding drm device (/dev/dri/card3)\n(II) xfree86: Adding drm device (/dev/dri/card3)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) systemd-logind: got fd for /dev/dri/card3 226:3 fd 165 paused 0\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) LoadModule: \""modesetting\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/drivers/modesetting_drv.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module modesetting: vendor=\""X.Org Foundation\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\tcompiled for 1.20.14, module version = 1.20.14\n\tModule class: X.Org Video Driver\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\tABI class: X.Org Video Driver, version 24.1\n(II)""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "" UnloadModule: \""modesetting\""\n(II) ""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""Unloading modesetting\n(II) Failed to load module \""modesetting\"" (already loaded, 0)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G3): using drv /dev/dri/card3\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G3): Depth 24, ""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) framebuffer bpp 32\n(II) Applying OutputClass \""DisplayLink\"" options to /dev/dri/card3\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G3): Option \""SWcursor\"" \""on\""\n(**) modeset(G3): Option \""ShadowFB\""""
Oct 15 16:03:06 NotebookRon kernel: evdi: [I] (card3) Opened by Task 958 (systemd-logind) of process 958 (systemd-logind)
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "" \""true\""\n(**) modeset(G3): Option \""AccelMethod\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: "" \""none\""\n(**) modeset(G3): Option \""PageFlip\"" \""off\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\n(==) modeset(G3): RGB weight 888\n(==) modeset(G3): Default visual is TrueColor\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G3): glamor disabled\n(II) modeset(G3): ShadowFB: preferred NO, enabled YES\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G3): Double-buffered shadow updates: off\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G3): Output DVI-I-4-3 has no monitor section\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G3): Using gamma correction (1.0, 1.0, 1.0)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(**) modeset(G3): Display dimensions: (510, 290) mm\n(**) modeset(G3): DPI set to (50, 67)\n(II) Loading
sub module \""fb\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) LoadModule: \""fb\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/libfb.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module fb: vendor=\""X.Org Foundation\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\tcompiled for 1.20.14, module version = 1.0.0\n\tABI class: X.Org ANSI C Emulation, version 0.4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading sub module \""shadow\""\n(II) LoadModule: \""shadow\""""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Loading /usr/lib64/xorg/modules/libshadow.so\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) Module shadow: vendor=\""X.Org Foundation\""\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""\tcompiled for 1.20.14, module version = 1.1.0\n\tABI class: X.Org ANSI C Emulation, version 0.4\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G3): Backing store enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G3): Silken mouse enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G3): Initializing kms color map for depth 24, 8 bpc.\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(==) modeset(G3): DPMS enabled\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(G3): Damage tracking initialized\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""xf86: found device 5\n""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-Chimei Innolux Corporation' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 0 ) ""_ICC_PROFILE"" on output: ""eDP-1""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-Ancor Communications Inc-ASUS VS238-F7LMTF149103' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 1 ) ""_ICC_PROFILE_1"" on output: ""DP-1""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-LG Electronics-LG ULTRAFINE-305NTWG1V993' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 2 ) ""_ICC_PROFILE_2"" on output: ""HDMI-2""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-Chimei Innolux Corporation' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 0 ) ""_ICC_PROFILE"" on output: ""eDP-1""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-Ancor Communications Inc-ASUS VS238-F7LMTF149103' already exists""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): EDID vendor \""ACI\"", prod id 9210\n(II) modeset(0): Using hsync ranges from config file\
n(II) modeset(0): Using vrefresh ranges from config file\n(II) modeset(0): Printing DDC gathered Modelines:\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1920x1080\""x0.0  148.50  1920 2008 2052 2200  1080 1084 1089 1125 +hsync +vsy
nc (67.5 kHz eP)\n(II) modeset(0): Modeline \""720x480\""x0.0   27.00  720 736 798 858  480 489 495 525 -hsync -vsync (31.5 kHz e)\n(II) modeset(0): Modeline \""1280x720\
""x0.0   74.25  1280 1390 1430 1650  720 725 730 750 +hsync +vsync (45.0 kHz e)\n(II) modeset(0): Modeline \""1280x720\""x0.0   74.25  1280 1720 1760 1980  720 725 730 75
0 +hsync +vsync (37.5 kHz e)\n(II) modeset(0): Modeline \""720x576\""x0.0   27.00  720 732 796 864  576 581 586 625 -hsync -vsync (31.2 kHz e)\n(II) modeset(0): Modeline
\""640x480\""x0.0   25.18  640 656 752 800  480 490 492 525 -hsync -vsync (31.5 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1920x1080i\""x0.0   74.25  1920 2448 2492 2640  1080 1084 1094 1125 interlace
+hsync +vsync (28.1 kHz e)\n(II) modeset(0): Modeline \""1920x1080i\""x0.0   74.25  1920 2008 2052 2200  1080 1084 1094 1125 interlace +hsync +vsync (33.8 kHz e)\n(II) m
odeset(0): Modeline \""1440x480\""x0.0   54.00  1440 1472 1596 1716  480 489 495 525 -hsync -vsync (31.5 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1440x576\""x0.0   54.00  1440 1464 1592 1728  576 581 586 625 -hsync -vsync (3
1.2 kHz e)\n(II) modeset(0): Modeline \""1920x1080\""x0.0  148.50  1920 2448 2492 2640  1080 1084 1089 1125 +hsync +vsync (56.2 kHz e)\n(II) modeset(0): Modeline \""800x6
00\""x0.0   40.00  800 840 968 1056  600 601 605 628 +hsync +vsync (37.9 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""800x600\""x0.0   36.00  800 824 896 1024  600 601 603 625 +hsync +vsync (35.2
kHz e)\n(II) modeset(0): Modeline \""640x480\""x0.0   31.50  640 656 720 840  480 481 484 500 -hsync -vsync (37.5 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""640x480\""x0.0   30.24  640 704 768 864  480 483 486 525 -hsync -vsync (35.0 k
Hz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""720x400\""x0.0   28.32  720 738 846 900  400 412 414 449 -hsync +vsync (31.5 k
Hz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1280x1024\""x0.0  135.00  1280 1296 1440 1688  1024 1025 1028 1066 +hsync +vsy
nc (80.0 kHz e)\n(II) modeset(0): Modeline \""1024x768\""x0.0   78.75  1024 1040 1136 1312  768 769 772 800 +hsync +vsync (60.0 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1024x768\""x0.0   75.00  1024 1048 1184 1328  768 771 777 806 -hsync -vsync (5
6.5 kHz e)\n(II) modeset(0): Modeline \""1024x768\""x0.0   65.00  1024 1048 1184 1344  768 771 777 806 -hsync -vsync (48.4 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""832x624\""x0.0   57.28  832 864 928 1152  624 625 628 667 -hsync -vsync (49.7
kHz e)\n(II) modeset(0): Modeline \""800x600\""x0.0   49.50  800 816 896 1056  600 601 604 625 +hsync +vsync (46.9 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""800x600\""x0.0   50.00  800 856 976 1040  600 637 643 666 +hsync +vsync (48.1
kHz e)\n(II) modeset(0): Modeline \""1152x864\""x0.0  108.00  1152 1216 1344 1600  864 865 868 900 +hsync +vsync (67.5 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1280x960\""x0.0  108.00  1280 1376 1488 1800  960 961 964 1000 +hsync +vsync (
60.0 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1280x1024\""x0.0  108.00  1280 1328 1440 1688  1024 1025 1028 1066 +hsync +vsy
nc (64.0 kHz e)\n(II) modeset(0): Modeline \""1440x900\""x0.0   88.75  1440 1488 1520 1600  900 903 909 926 +hsync -vsync (55.5 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(II) modeset(0): Modeline \""1680x1050\""x0.0  119.00  1680 1728 1760 1840  1050 1053 1059 1080 +hsync -vsy
nc (64.7 kHz e)\n(II) modeset(0): Modeline \""1280x800\""x0.0   71.00  1280 1328 1360 1440  800 803 809 823 +hsync -vsync (49.3 kHz e)\n""
Oct 15 16:03:06 NotebookRon sddm-helper-start-x11user[2435]: ""(--) modeset(0): HDMI max TMDS frequency 300000KHz\n""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 1 ) ""_ICC_PROFILE_1"" on output: ""DP-1""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-LG Electronics-LG ULTRAFINE-305NTWG1V993' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 2 ) ""_ICC_PROFILE_2"" on output: ""HDMI-2""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-Chimei Innolux Corporation' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 0 ) ""_ICC_PROFILE"" on output: ""eDP-1""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-Ancor Communications Inc-ASUS VS238-F7LMTF149103' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 1 ) ""_ICC_PROFILE_1"" on output: ""DP-1""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-LG Electronics-LG ULTRAFINE-305NTWG1V993' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 2 ) ""_ICC_PROFILE_2"" on output: ""HDMI-2""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-Chimei Innolux Corporation' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 0 ) ""_ICC_PROFILE"" on output: ""eDP-1""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-Ancor Communications Inc-ASUS VS238-F7LMTF149103' already exists""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Setting X atom (id: 1 ) ""_ICC_PROFILE_1"" on output: ""DP-1""
Oct 15 16:03:06 NotebookRon kded5[2915]: colord: Failed to register device: ""device id 'xrandr-LG Electronics-LG ULTRAFINE-305NTWG1V993' already exists""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: Setting X atom (id: 2 ) ""_ICC_PROFILE_2"" on output: ""HDMI-2""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-961d6644a1350b183b61bc9c885fe056.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-5f78eeb94756d99e802761b9739b6ca1.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-29fecd9280d2a8e41c445a66d2b499bb.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-961d6644a1350b183b61bc9c885fe056.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-5f78eeb94756d99e802761b9739b6ca1.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-29fecd9280d2a8e41c445a66d2b499bb.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-961d6644a1350b183b61bc9c885fe056.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-5f78eeb94756d99e802761b9739b6ca1.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-29fecd9280d2a8e41c445a66d2b499bb.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-961d6644a1350b183b61bc9c885fe056.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-5f78eeb94756d99e802761b9739b6ca1.icc""
Oct 15 16:03:07 NotebookRon kded5[2915]: colord: EDID ICC Profile already exists ""/home/ron/.local/share/icc/edid-29fecd9280d2a8e41c445a66d2b499bb.icc""
Oct 15 16:03:12 NotebookRon systemd[1]: Stopping user@0.service - User Manager for UID 0...
Oct 15 16:03:12 NotebookRon systemd[10042]: Activating special unit exit.target...
Oct 15 16:03:12 NotebookRon systemd[10042]: Stopped target default.target - Main User Target.
Oct 15 16:03:12 NotebookRon systemd[10042]: Stopped target basic.target - Basic System.
Oct 15 16:03:12 NotebookRon systemd[10042]: Stopped target paths.target - Paths.
Oct 15 16:03:12 NotebookRon systemd[10042]: Stopped target sockets.target - Sockets.
Oct 15 16:03:12 NotebookRon systemd[10042]: Stopped target sound.target - Sound Card.
Oct 15 16:03:12 NotebookRon systemd[10042]: Stopped target timers.target - Timers.
Oct 15 16:03:12 NotebookRon systemd[10042]: Stopped systemd-tmpfiles-clean.timer - Daily Cleanup of User's Temporary Directories.
Oct 15 16:03:12 NotebookRon systemd[10042]: Closed dbus.socket - D-Bus User Message Bus Socket.
Oct 15 16:03:12 NotebookRon systemd[10042]: Closed pipewire.socket - PipeWire Multimedia System Socket.
Oct 15 16:03:12 NotebookRon systemd[10042]: Stopped systemd-tmpfiles-setup.service - Create User's Volatile Files and Directories.
Oct 15 16:03:12 NotebookRon systemd[10042]: Removed slice app.slice - User Application Slice.
Oct 15 16:03:12 NotebookRon systemd[10042]: Reached target shutdown.target - Shutdown.
Oct 15 16:03:12 NotebookRon systemd[10042]: Finished systemd-exit.service - Exit the Session.
Oct 15 16:03:12 NotebookRon systemd[10042]: Reached target exit.target - Exit the Session.
Oct 15 16:03:12 NotebookRon audit[10059]: CRED_DISP pid=10059 uid=0 auid=0 ses=51 subj=system_u:system_r:init_t:s0 msg='op=PAM:setcred grantors=? acct=""root"" exe=""/usr
/lib/systemd/systemd"" hostname=? addr=? terminal=? res=failed'
Oct 15 16:03:12 NotebookRon systemd[1]: user@0.service: Deactivated successfully.
Oct 15 16:03:12 NotebookRon systemd[1]: Stopped user@0.service - User Manager for UID 0.
Oct 15 16:03:12 NotebookRon audit[1]: SERVICE_STOP pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='unit=user@0 comm=""systemd"" exe=""/us
r/lib/systemd/systemd"" hostname=? addr=? terminal=? res=success'
Oct 15 16:03:12 NotebookRon systemd[1]: Stopping user-runtime-dir@0.service - User Runtime Directory /run/user/0...
Oct 15 16:03:12 NotebookRon systemd[1]: run-user-0.mount: Deactivated successfully.
Oct 15 16:03:12 NotebookRon systemd[1]: user-runtime-dir@0.service: Deactivated successfully.
Oct 15 16:03:12 NotebookRon systemd[1]: Stopped user-runtime-dir@0.service - User Runtime Directory /run/user/0.
Oct 15 16:03:12 NotebookRon audit[1]: SERVICE_STOP pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='unit=user-runtime-dir@0 comm=""syste
md"" exe=""/usr/lib/systemd/systemd"" hostname=? addr=? terminal=? res=success'
Oct 15 16:03:12 NotebookRon systemd[1]: Removed slice user-0.slice - User Slice of UID 0."
jryb6jz5,CodeWars | Stop gninnipS My sdroW!,alkapwn3d,Java,Sunday 15th of October 2023 06:27:43 PM CDT,"public class SpinWords {
  public String spinWords(String sentence) {
    String reversedSentence = """";
    String[] listOfWords = sentence.split("" "");

    for (int i = 0; i < listOfWords.length; i++) {
      String word = listOfWords[i];
      
      // if word is not the first item, concat empty space to reversedSentence
      if (i != 0) {
        reversedSentence += "" "";
      }

      // if word is less than 5, concat to reversedSentence then skip loop
      if (word.length() < 5) {
        reversedSentence += word;
        continue;
      }

      // for loop reads chars in string from right to left
      // increments index in decending order
      String reversedWord = """";
      for (int j = word.length() - 1; j >= 0; j--) {
        // get char at string index
		// convert char to string, then concat to reversedWord
      	reversedWord += Character.toString(word.charAt(j));
      }

      // concat word to sentence
      reversedSentence += reversedWord;
    }
    return reversedSentence;
  }
}"
PR6nnUJh,Projeto AB2 C.E - Árvore por Programação Genética,EduPsEudo,Python,Sunday 15th of October 2023 05:55:55 PM CDT,"import random
import numpy as np
import pandas as pd
from math import log2
 
gramatica = {
    'Gender': ['Male', 'Female'],
    'Age': ['<= 30', '> 30'],
    'Height': ['<= 165', '> 165'],
    'Weight': ['<= 60', '> 60'],
    'BMI': ['<= 21', '> 21'],
    'Label': ['Normal Weight', 'Overweight', 'Obese', 'Underweight']
}
 
class Node:
    def __init__(self, data, dataset, r_left, r_right, pai=None, r_pai=None):
        self.pai = pai #se pai == None é o no raiz
        self.r_pai = r_pai #Resposta do pai para chegar a esse no
        self.data = data # Label (pergunta a ser feita)
        self.left = {'Resposta': r_left, 'No': None}
        self.right = {'Resposta': r_right, 'No': None}
        self.dataset = dataset # Dataset filtrado de acordo com o caminho do No
        self.response = (r_left, r_right) #resposta a Esquerda/Direita
 
    def __str__(self):
        return f""Data: {self.data} - Respostas: {self.response}\nDataset: \n{self.dataset}\nTamanho: {len(self.dataset)}""
 
def gen_tree(label_list, pai,r_pai, df):
    if pai is None:
        df_copy = df
    elif pai.data == ""Gender"":
        df_copy = df[df[pai.data] == r_pai]
    else:
        resposta_pai = r_pai.split()
        if resposta_pai[0] == '<=':
            df_copy = df[df[pai.data] <= float(resposta_pai[1])] 
        else:
            df_copy = df[df[pai.data] > float(resposta_pai[1])]
            
    if len(df_copy) == 0:
        label = ""Label""   
    elif pai is None:
        label = random.choice(label_list)
    else:
        if random.randint(0, 10) <= 2:
            label = ""Label""
        else:
            label = random.choice(label_list)
        
    if label == ""Label"":
        resposta=random.choice(gramatica[label])
        no = Node(data = label, dataset=df_copy, r_left=resposta, r_right=None, pai=pai, r_pai=r_pai)
        return no
    
    resposta_left=gramatica[label][0]
    resposta_right=gramatica[label][1]
             
    no = Node(data=label, dataset=df_copy, r_left=resposta_left, r_right=resposta_right, pai=pai, r_pai=r_pai)
    label_list.remove(label)
    if len(label_list) == 0:
        label = ""Label""
        resposta=random.choice(gramatica[label])

        no = Node(data = label, dataset=df_copy, r_left=resposta, r_right=None, pai=pai, r_pai=r_pai)
    else:
        no.left['No'] = gen_tree(label_list.copy(), no, no.left['Resposta'], df_copy)
        no.right['No'] = gen_tree(label_list.copy(), no, no.right['Resposta'], df_copy)
    
    return no
 
def aptidao(no, entropia):
    if no.data == ""Label"":
        return 0
    
    #-P(NW)* log2(P(NW))- P(OV)* log2(P(OV))-P(OB)*log2(P(OB)) -P(UN)*log2(P(UN))
    total = len(no.dataset)
    
    Nw = len(no.dataset[no.dataset['Label'] == 'Normal Weight'])
    Nw_log = 0 if Nw == 0 else -(Nw/total)*np.log2(Nw/total)
      
    Ud = len(no.dataset[no.dataset['Label'] == 'Underweight'])
    Ud_log = 0 if Ud == 0 else -(Ud/total)*np.log2(Ud/total)
    
    Ov = len(no.dataset[no.dataset['Label'] == 'Overweight'])
    Ov_log = 0 if Ov == 0 else -(Ov/total)*np.log2(Ov/total)
    
    Ob = len(no.dataset[no.dataset['Label'] == 'Obese'])
    Ob_log = 0 if Ob == 0 else -(Ob/total)*np.log2(Ob/total)
    
    entropia += Nw_log + Ud_log + Ov_log + Ob_log
    
    entropia += aptidao(no.left['No'], entropia)
    entropia += aptidao(no.right['No'], entropia)
    
    return entropia
 
def print_tree(no):
    if no.pai is not None:
        print(f""\nPai {no.pai.data}: {no.r_pai}"")
    else:
        print(""Raiz"")
    print(no)
    if no.left['No'] is not None:
        print_tree(no.left['No'])
    if no.right['No'] is not None:
        print_tree(no.right['No'])

def excluiSubarvore(arvore):
    if arvore.f_left == None and arvore.f_right == None:
        return
 
    f1 = arvore.f_left
    f2 = arvore.f_right
 
    del arvore
    
    excluiSubarvore(f1)
    excluiSubarvore(f2)
    
def mutacao(arvore, label_list):

    nos = []
    nos.append(arvore)
    chances_mutacao = 3

    for no in nos:
        if isinstance(no, Node) and no.data in label_list:
            label_list.remove(no.data)
        if random.randint(0, 10) <= chances_mutacao:
            if isinstance(no, Node):
                no.left['No'] = gen_tree(label_list.copy(), no, no.left['Resposta'], no.dataset)
                no.right['No'] = gen_tree(label_list.copy(), no, no.right['Resposta'], no.dataset)
            break
        if isinstance(no, Node) and no.left != None:
            nos.append(no.left)
        if isinstance(no, Node) and no.right != None:
            nos.append(no.right)

    return arvore
    
def selecao(pop):
    k = 2
    nova_pop = []
    for i in range(len(pop)):
        torneio = random.sample(pop, k)
        torneio.sort(key=lambda x: x[1], reverse=False)
        nova_pop.append([torneio[0][0], torneio[0][1], torneio[0][2]])

    return nova_pop

def substituicao(pop):

    for i in range(len(pop)):
        if pop[i][2] > 5:
            novoIndividuo = gen_tree(label_list.copy(), None, None, df)
            aptNovo = aptidao(novoIndividuo, 0)
            if pop[i][1] > aptNovo:
                pop[i][0] = novoIndividuo
                pop[i][1] = aptNovo
                pop[i][2] = 0
        if pop[i][2] > 15:
            pop[i][0] = gen_tree(label_list.copy(), None, None, df)
            pop[i][1] = aptidao(pop[i][0], 0)
            pop[i][2] = 0

    return pop

if __name__ == '__main__':
    # Carregando dataset
    df = pd.read_csv('balance\Obesity_Classification.csv', sep=',')
    #Removendo coluna ID porque não é utilizavel para classificação
    df = df.drop(df.columns[0], axis=1)
    #Eliminando possiveis linhas duplicadas
    df.drop_duplicates(inplace = True)
    label_list = ['Age', 'Gender', 'Height', 'Weight', 'BMI']

    # Parametros para o algoritmo genetico
    tamanho_pop = 10
    pop = []
    generations = 25

    # Gerando população inicial
    for i in range(tamanho_pop):
        cromossomo = gen_tree(label_list.copy(), None, None, df)
        apt = round(aptidao(cromossomo, 0), 2)
        tempoVida = 0
        pop.append([cromossomo, apt, tempoVida])

    print('Aptidao da populacao inicial: ')
    for i in range(len(pop)):
        print(f'Cromossomo {i + 1} Aptidao: {pop[i][1]} | Vida: {pop[i][2]}')

    for g in range(generations):
        # print(f'Geracao: {g + 1}')

        # Adicionando tempo de vida
        for i in range(len(pop)):
            pop[i][2] += 1

        # Seleção
        pop = selecao(pop)
        
        # Não fizemos cruzamento por inviabilidade computacional

        # Mutação
        for i in range(len(pop)):
            if random.randint(0, 10) < 3:
                pop[i][0] = mutacao(pop[i][0], label_list.copy())
                pop[i][1] = aptidao(pop[i][0], 0)

        pop = substituicao(pop)


    print('Aptidao da populacao final: ')
    for i in range(len(pop)):
        print(f'Cromossomo {i + 1} Aptidao: {pop[i][1]} | Vida: {pop[i][2]}')
"
GcYQCzZ7,print the cycle with nodes' sum smallest.,Mohammad_Dipu_Sultan,C++,Sunday 15th of October 2023 04:43:43 PM CDT,"#include <bits/stdc++.h>
using namespace std;

vector<int> adj[111], cycle;
int vis[111], pathvis[111];

vector<int> smallestCycle; // To store the smallest cycle found
int smallestSum = INT_MAX; // To track the smallest sum of nodes in a cycle

int dfs(int node) {
    vis[node] = 1;
    pathvis[node] = 1;
    cycle.push_back(node);

    for (auto it : adj[node]) {
        if (pathvis[it] == 1) {
            int startIndex = 0;
            while (cycle[startIndex] != it) {
                startIndex++;
            }

            int currentSum = 0;
            vector<int> currentCycle;

            // Calculate the sum of nodes and create a vector for the current cycle
            for (int i = startIndex; i < cycle.size(); i++) {
                currentSum += cycle[i];
                currentCycle.push_back(cycle[i]);
            }

            if (currentSum < smallestSum || (currentSum == smallestSum && currentCycle < smallestCycle)) {
                smallestSum = currentSum;
                smallestCycle = currentCycle;
            }
        } else if (vis[it] == 0) {
            if (dfs(it) == true) {
                return true;
            }
        }
    }

    pathvis[node] = 0;
    cycle.pop_back();
    return false;
}

int main() {
    int v, e;
    cin >> v >> e;
    for (int i = 0; i < e; i++) {
        int x, y;
        cin >> x >> y;
        adj[x].push_back(y);
    }
    memset(vis, 0, sizeof(vis));
    memset(pathvis, 0, sizeof(pathvis));

    for (int i = 0; i < v; i++) {
        if (vis[i] == 0) {
            dfs(i);
        }
    }

    // Sort the nodes of the smallest cycle in ascending order
    sort(smallestCycle.begin(), smallestCycle.end());

    // Print the smallest cycle
    for (int node : smallestCycle) {
        cout << node << "" "";
    }
    cout << endl;

    return 0;
}

/*5 5
1 2 2 4 4 5 5 3 3 2

2 3 4 5

5 5
2 4 2 3 4 3 1 5 5 1

1 5*/"
EydiucN9,Print all cycle,Mohammad_Dipu_Sultan,C++,Sunday 15th of October 2023 04:27:13 PM CDT,"// Print all cycle if there multiple cycle exist
#include<bits/stdc++.h>
using namespace std;

vector<int>adj[111], cycle;
int vis[111], pathvis[111];

int dfs(int node){
	vis[node] = 1;
	pathvis[node] = 1;
	cycle.push_back(node);

	for(auto it: adj[node]){
		if(pathvis[it] == 1){
			int startIndex = 0;
			while(cycle[startIndex] != it){
				startIndex++;
			}
			for(int i = startIndex; i < cycle.size(); i++){
				cout << cycle[i] << "" "";
			}
			cout << endl;
		}
		else if(vis[it] == 0){
			if(dfs(it) == true){
				return true;
			}
		}
	}
	pathvis[node] = 0;
	cycle.pop_back();
	return false;
}
int main(){
	int v, e;
	cin >> v >> e;
	for(int i = 0; i < e; i++){
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
	}
	memset(vis, 0, sizeof(vis));
	memset(pathvis, 0, sizeof(pathvis));

	for(int i = 0; i < v; i++){
		if(vis[i] == 0){
			dfs(i);
		}
	}
	return 0;
}
"
hx4MFrdf,Print a cycle on directed graph,Mohammad_Dipu_Sultan,C++,Sunday 15th of October 2023 04:10:27 PM CDT,"// If there is multiple cycle print any of them, graph will be directed graph
#include<bits/stdc++.h>
using namespace std;
vector<int>adj[100], cycle;
int vis[100], pathvis[100];

int dfs(int node){
	vis[node] = 1;
	pathvis[node] = 1;
	cycle.push_back(node);

	for(auto it: adj[node]){
		if(pathvis[it] == 1){
			// Cycle found
			int startindex = 0;
			while(cycle[startindex]!=it){
				startindex++;
			}

			for(int i = startindex; i <cycle.size(); i++){
				cout << cycle[i] << "" "";
			}
			cout << it << endl;

			return true; // Stop DFS after finding the first cycle
		}
		else if(vis[it] == 0){
			if(dfs(it)==true){
				return true; // Stop DFS early if a cycle is found
			}
		}
	}
	pathvis[node] = 0;
	cycle.pop_back();
	return false; 
}
int main(){

	int v, e;
	cin >> v >> e;

	for(int i = 0; i < e; i++){
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
	}
	memset(vis, 0, sizeof(vis));
	memset(pathvis, 0, sizeof(pathvis));

	for(int i = 0; i < v; i++){
		if(vis[i] == 0){
			cycle.clear();
			dfs(i);
			break; //Stop after finding the first cycle
		}
	}

	return 0;
}"
Q9KU2SjM,4 Random Number,tampurus,C,Sunday 15th of October 2023 04:03:15 PM CDT,"#include <stdio.h>
#include <math.h>
int main()
{
    int n,itr;
    printf(""Enter any four digit number\n"");
    scanf(""%d"",&n);
    
    printf(""\nEnter number of iteration you want to perform\n"");
    scanf(""%d"",&itr);
    
    
    long int sqr=n,digit,first_two,first;
    for(int i=1 ; i<=itr; i++)
    {
        sqr *= sqr ;
        printf(""\n%d iteration Square is %ld "",i,sqr);
        digit = log10(sqr) +1;
        if(digit == 8){
            first_two = sqr / 1000000;
            sqr /= 100;
            sqr -= (first_two * 10000);
        }
        else{
            first = sqr / 1000000;
            sqr /=100;
            sqr -= (first * 10000);
        }
        
        printf(""random value extracted is %ld"",sqr);
    }

    return 0;
}
"
DqhwryZs,[ComputerCraft] touchpoint,spyproof,Lua,Sunday 15th of October 2023 04:00:38 PM CDT,"--[[
The MIT License (MIT)
 
Copyright (c) 2013 Lyqyd
 
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
 
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
 
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
--]]

--- @class TouchPoint
--- @field draw fun(self: TouchPoint)
--- @field add fun(self: TouchPoint, key: string, label: string, func: fun() | nil, xMin: number, yMin: number, xMax: number, yMax: number, inactiveColor, activeColor, inactiveText, activeText)
--- @field remove fun(self: TouchPoint, key: string)
--- @field run fun(self: TouchPoint)
--- @field handleEvents fun(self: TouchPoint)
--- @field toggleButton fun(self: TouchPoint, key: string, noDraw?: boolean)
--- @field flash fun(self: TouchPoint, key: string, duration?: number)
--- @field rename fun(self: TouchPoint, key: string, newLabel: string)
--- @field side string
--- @field mon any
--- @field buttonList table<string, any>
--- @field clickMap table<number, any>

local function setupLabel(buttonLen, minY, maxY, name)
	local labelTable = {}
	if type(name) == ""table"" then
		for i = 1, #name do
			labelTable[i] = name[i]
		end
		name = name.label
	elseif type(name) == ""string"" then
		local buttonText = string.sub(name, 1, buttonLen - 2)
		if #buttonText < #name then
			buttonText = "" ""..buttonText.."" ""
		else
			local labelLine = string.rep("" "", math.floor((buttonLen - #buttonText) / 2))..buttonText
			buttonText = labelLine..string.rep("" "", buttonLen - #labelLine)
		end
		for i = 1, maxY - minY + 1 do
			if maxY == minY or i == math.floor((maxY - minY) / 2) + 1 then
				labelTable[i] = buttonText
			else
				labelTable[i] = string.rep("" "", buttonLen)
			end
		end
	end
	return labelTable, name
end

local Button = {
	draw = function(self)
		local old = term.redirect(self.mon)
		term.setTextColor(colors.white)
		term.setBackgroundColor(colors.black)
		term.clear()
		for name, buttonData in pairs(self.buttonList) do
			if buttonData.active then
				term.setBackgroundColor(buttonData.activeColor)
				term.setTextColor(buttonData.activeText)
			else
				term.setBackgroundColor(buttonData.inactiveColor)
				term.setTextColor(buttonData.inactiveText)
			end
			for i = buttonData.yMin, buttonData.yMax do
				term.setCursorPos(buttonData.xMin, i)
				term.write(buttonData.label[i - buttonData.yMin + 1])
			end
		end
		if old then
			term.redirect(old)
		else
			term.restore()
		end
	end,
	add = function(self, key, label, func, xMin, yMin, xMax, yMax, inactiveColor, activeColor, inactiveText, activeText)
		local labelTable, label = setupLabel(xMax - xMin + 1, yMin, yMax, label)
		if self.buttonList[key] then error(""button already exists"", 2) end
		local x, y = self.mon.getSize()
		if xMin < 1 or yMin < 1 or xMax > x or yMax > y then error(""button out of bounds"", 2) end
		self.buttonList[key] = {
			func = func,
			xMin = xMin,
			yMin = yMin,
			xMax = xMax,
			yMax = yMax,
			active = false,
			inactiveColor = inactiveColor or colors.red,
			activeColor = activeColor or colors.lime,
			inactiveText = inactiveText or colors.white,
			activeText = activeText or colors.white,
			label = labelTable,
		}
		for i = xMin, xMax do
			for j = yMin, yMax do
				if self.clickMap[i][j] ~= nil then
					--undo changes
					for k = xMin, xMax do
						if self.clickMap[k] ~= nil then
							for l = yMin, yMax do
								if self.clickMap[k][l] == key then
									self.clickMap[k][l] = nil
								end
							end
						end
					end
					self.buttonList[key] = nil
					error(""overlapping button"", 2)
				end
				self.clickMap[i][j] = key
			end
		end
	end,
	remove = function(self, key)
		if self.buttonList[key] then
			local button = self.buttonList[key]
			for i = button.xMin, button.xMax do
				for j = button.yMin, button.yMax do
					self.clickMap[i][j] = nil
				end
			end
			self.buttonList[key] = nil
		end
	end,
	run = function(self)
		while true do
			self:draw()
			local event = {self:handleEvents(os.pullEvent(self.side == ""term"" and ""mouse_click"" or ""monitor_touch""))}
			if event[1] == ""button_click"" then
				self.buttonList[event[2]].func()
			end
		end
	end,
	handleEvents = function(self, ...)
		local event = {...}
		if #event == 0 then event = {os.pullEvent()} end
		if (self.side == ""term"" and event[1] == ""mouse_click"") or (self.side ~= ""term"" and event[1] == ""monitor_touch"" and event[2] == self.side) then
			local clicked = self.clickMap[event[3]][event[4]]
			if clicked and self.buttonList[clicked] then
				return ""button_click"", clicked
			end
		end
		return unpack(event)
	end,
	toggleButton = function(self, key, noDraw)
		self.buttonList[key].active = not self.buttonList[key].active
		if not noDraw then self:draw() end
	end,
	flash = function(self, name, duration)
		self:toggleButton(name)
		sleep(tonumber(duration) or 0.15)
		self:toggleButton(name)
	end,
	rename = function(self, key, newLabel)
		self.buttonList[key].label, newLabel = setupLabel(self.buttonList[key].xMax - self.buttonList[key].xMin + 1, self.buttonList[key].yMin, self.buttonList[key].yMax, newLabel)
		if not self.buttonList[key] then error(""no such button"", 2) end
		for i = self.buttonList[key].xMin, self.buttonList[key].xMax do
			for j = self.buttonList[key].yMin, self.buttonList[key].yMax do
				self.clickMap[i][j] = newLabel
			end
		end
		self:draw()
	end,
}

---@param monSide string
---@return TouchPoint
function createTouchpoint(monSide)
	local buttonInstance = {
		side = monSide or ""term"",
		mon = monSide and peripheral.wrap(monSide) or term.current(),
		buttonList = {},
		clickMap = {},
	}
	local x, y = buttonInstance.mon.getSize()
	for i = 1, x do
		buttonInstance.clickMap[i] = {}
	end
	setmetatable(buttonInstance, {__index = Button})
	return buttonInstance
end"
v699B2gw,[ComputerCraft] printer,spyproof,Lua,Sunday 15th of October 2023 04:00:03 PM CDT,"function wrapPrint(fn)
  local file = fs.open(""out.txt"", ""w"");
  local function printOverwrite(...)
    for i, value in ipairs(arg) do
      if (type(value) == ""string"") then
        io.write(value)
        file.write(value);
      else
        io.write(textutils.serialise(value))
        file.write(textutils.serialise(value));
      end
      io.write(' ')
      file.write(' ');
    end
    io.write('\n')
    file.write('\n');
  end

  local originalPrint = print;
  print = printOverwrite;
  
  local status, err = pcall(fn)
  if (err ~= nil) then
    print(err);
  end

  file.close()
end"
CcBCB8Ln,Morse code raspberry pi pico,greeter,C,Sunday 15th of October 2023 03:59:08 PM CDT,"/**
 * Copyright (c) 2020 Raspberry Pi (Trading) Ltd.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#include ""pico/stdlib.h""
#include ""hardware/pwm.h""
#include <string.h>

#ifndef PICO_DEFAULT_LED_PIN
#warning blink example requires a board with a regular LED
#else
#define LED 25
#define SND 15

#define BASE 100
//above is base speed of single . unit of morse in milliseconds

void blink_dit() {
    gpio_put(LED, 1);
    pwm_set_gpio_level(SND, 15000);
    sleep_ms(BASE);
    gpio_put(LED, 0);
    pwm_set_gpio_level(SND, 0);
    sleep_ms(BASE);
    return;
}

void blink_dat() {
    gpio_put(LED, 1);
    pwm_set_gpio_level(SND, 15000);
    sleep_ms(BASE * 3);
    gpio_put(LED, 0);
    pwm_set_gpio_level(SND, 0);
    sleep_ms(BASE);
    return;
}

void output(char *a) {
    int i = 0;
    while (a[i] != '\0') {
        if (a[i] == '.') blink_dit();
        if (a[i] == '-') blink_dat();
        if (a[i] == 'S') sleep_ms(BASE); //represents silence one base unit long, or one .
        i++;
    }
    sleep_ms(BASE * 3);
    return;
}

void morse(char *a) {
    int i = 0, j = strlen(a);
    for (i = 0; i != j; i++) {
        if (a[i] == 'A' || a[i] == 'a') output("".-"");
        if (a[i] == 'B' || a[i] == 'b') output(""-..."");
        if (a[i] == 'C' || a[i] == 'c') output(""-.-."");
        if (a[i] == 'D' || a[i] == 'd') output(""-.."");
        if (a[i] == 'E' || a[i] == 'e') output(""."");
        if (a[i] == 'F' || a[i] == 'f') output(""..-."");
        if (a[i] == 'G' || a[i] == 'g') output(""--."");
        if (a[i] == 'H' || a[i] == 'h') output(""...."");
        if (a[i] == 'I' || a[i] == 'i') output("".."");
        if (a[i] == 'J' || a[i] == 'j') output("".---"");
        if (a[i] == 'K' || a[i] == 'k') output(""-.-"");
        if (a[i] == 'L' || a[i] == 'l') output("".-.."");
        if (a[i] == 'M' || a[i] == 'm') output(""--"");
        if (a[i] == 'N' || a[i] == 'n') output(""-."");
        if (a[i] == 'O' || a[i] == 'o') output(""---"");
        if (a[i] == 'P' || a[i] == 'p') output("".--."");
        if (a[i] == 'Q' || a[i] == 'q') output(""--.-"");
        if (a[i] == 'R' || a[i] == 'r') output("".-."");
        if (a[i] == 'S' || a[i] == 's') output(""..."");
        if (a[i] == 'T' || a[i] == 't') output(""-"");
        if (a[i] == 'U' || a[i] == 'u') output(""..-"");
        if (a[i] == 'V' || a[i] == 'v') output(""...-"");
        if (a[i] == 'W' || a[i] == 'w') output("".--"");
        if (a[i] == 'X' || a[i] == 'x') output(""-..-"");
        if (a[i] == 'Y' || a[i] == 'y') output(""-.--"");
        if (a[i] == 'Z' || a[i] == 'z') output(""--.."");
        if (a[i] == '0') output(""-----"");
        if (a[i] == '1') output("".----"");
        if (a[i] == '2') output(""..---"");
        if (a[i] == '3') output(""...--"");
        if (a[i] == '4') output(""....-"");
        if (a[i] == '5') output(""....."");
        if (a[i] == '6') output(""-...."");
        if (a[i] == '7') output(""--..."");
        if (a[i] == '8') output(""---.."");
        if (a[i] == '9') output(""----."");
        if (a[i] == '.') output("".-.-.-SSSSSSS"");
        if (a[i] == '?') output(""..--..SSSSSSS"");
        if (a[i] == ' ') output(""SSS"");
    }
    return;
}

int main() {
    int i = 0;
    uint slice_snd;

    sleep_ms(5000);

    gpio_init(LED);
    gpio_init(SND);
    gpio_set_function(SND, GPIO_FUNC_PWM);
    gpio_set_dir(LED, GPIO_OUT);

    pwm_config config = pwm_get_default_config();
    slice_snd = pwm_gpio_to_slice_num(SND);
    pwm_init(slice_snd, &config, true);

    morse(""HAVING FUN WITH PULSE WIDTH MODULATION"");

#endif
    return 0;
}
"
ci29HtAu,[ComputerCraft] crafter_client,spyproof,Lua,Sunday 15th of October 2023 03:58:59 PM CDT,"-- https://docs.advanced-peripherals.de/peripherals/rs_bridge/
local rsBridge = nil;
-- https://docs.advanced-peripherals.de/peripherals/me_bridge/
local meBridge = nil;
-- http://www.computercraft.info/forums2/index.php?/topic/14784-touchpoint-api/
--- @type TouchPoint
local touchApi = nil;
--- @type inventory
local turtleInventory = nil;
--- @type modem
local wrirelessModem = nil;
local modemPort = 5984;
local mon = nil;
local mcDropper = nil;
local modularRouter = nil;

local sides = {""bottom"", ""top"", ""left"", ""right"", ""front"", ""back""};

function tableHasValue(table, v)
  for index, value in ipairs(table) do
    if value == v then
      return true
    end
  end

  return false
end


function findPeripherals()
  rsBridge = peripheral.find(""rsBridge"");
  meBridge = peripheral.find(""meBridge"");
  mon = peripheral.find(""monitor"") or error(""Could not find a monitor"");

  require(""touchpoint"")
  touchApi = createTouchpoint(peripheral.getName(mon));

  if (rsBridge ~= nil and tableHasValue(sides, peripheral.getName(rsBridge))) then
    error('The RS Bridge needs to be connected through a wired modem, not next to the computer.');
  end

  for i, name in pairs(peripheral.getNames()) do
    local per = peripheral.wrap(name);
    for j, type in pairs({peripheral.getType(per)}) do
      if (type == 'inventory' and per.size() >= 18) then
        if (turtleInventory ~= nil) then
          error('Found multiple connected inventories. There should only be one and it should be next to a crafting turtle.');
        end
        turtleInventory = per;
      elseif (type == ""modem"") then
        if (per.isWireless()) then
          wrirelessModem = per;
        end
      elseif (type == ""minecraft:dropper"" or type == ""minecraft:dispenser"") then
        mcDropper = per;
      elseif (type == ""modularrouters:modular_router"") then
        modularRouter = per;
      end
    end
  end
  if (turtleInventory == nil) then
    error(""Found no connected inventories. There should be one (and only one) and it should be next to a crafting turtle."");
  end
  if (wrirelessModem == nil) then
    error(""Found no wireless modem."");
  end
  wrirelessModem.open(modemPort)
end

--- @return pattern | nil
function normalizeAePattern(item)
  if (type(item.nbt) ~= 'table') then
    return nil;
  end

  if (item.name == 'ae2:crafting_pattern') then
    --- @type pattern
    local pattern = {
      output = {
        name = item.nbt.tag.out.id,
        count = item.nbt.tag.out.Count,
      },
      input = {},
      inputSummary = {}
    };
    
    for craftIndex, inputItem in pairs(item.nbt.tag['in']) do
      -- input items are always an array of 9 tables, empty table = no item
      if (inputItem.id ~= nil) then
        pattern.input[craftIndex + 1] = {
          name = inputItem.id,
          count = inputItem.Count,
        };
      end
    end

    return pattern;
  end
  return nil;
end

--- Validate that the minimum required fields are present
---@param pattern pattern
---@return boolean
function validatePattern(pattern)
  if (type(pattern) ~= 'table') then
    return false;
  end
  if (type(pattern.output) ~= 'table') then
    return false;
  end
  if (type(pattern.output.name) ~= 'string') then
    return false;
  end
  if (type(pattern.output.count) ~= 'number') then
    return false;
  end
  if (type(pattern.input) ~= 'table') then
    return false;
  end
  for i, input in pairs(pattern.input) do
    if (type(i) ~= 'number') then
      return false;
    end
    if (type(input.name) ~= 'string') then
      return false;
    end
    if (type(input.count) ~= 'number') then
      return false;
    end
  end
  
  return true;
end

--- @return table<number, pattern>
function getDuplicatePatterns()
  --- @type table<string, pattern>
  local allPatterns = {};

  if (fs.exists('recipes.json')) then
    pcall(function ()
      local file = fs.open(""recipes.json"", ""r"")
      local contents = textutils.unserialiseJSON(file.readAll());
      file.close()

      for i, pattern in pairs(contents) do
        if (validatePattern(pattern)) then
          table.insert(allPatterns, pattern);
        end
      end
    end)
  end

  local displayNames = {};
  if (meBridge ~= nil) then
    for i, meItem in pairs(meBridge.listItems()) do
      displayNames[meItem.name] = meItem.displayName;
      local pattern = normalizeAePattern(meItem);
      if (pattern ~= nil) then
        allPatterns[pattern.output.name] = pattern;
      end
    end
  end

  if (rsBridge ~= nil) then
    for i, rsItem in pairs(rsBridge.listCraftableItems()) do
      local rsPattern = rsBridge.getPattern(rsItem);
      if (rsPattern and table.getn(rsPattern.outputs) == 1) then
        displayNames[rsItem.name] = string.sub(rsPattern.outputs[1].displayName, 5, string.len(rsPattern.outputs[1].displayName) - 1);
        ---@type pattern
        local item = {
          output = {
            name = rsItem.name,
            count = rsPattern.outputs[1].amount,
          },
          input = {},
          inputSummary = {}
        };


        for craftIndex, inputItem in pairs(rsPattern.inputs) do
          -- input item seems to me a single object within an array. Not really sure if this is intended or a bug
          if (inputItem[1] ~= nil and table.getn(inputItem) == 1) then
            inputItem = inputItem[1];
          end
          -- input items are always an array of 9 tables, empty table = no item
          if (inputItem.name ~= nil) then
            displayNames[rsItem.name] = string.sub(inputItem.displayName, 5, string.len(inputItem.displayName) - 1);
            item.input[craftIndex] = {
              name = inputItem.name,
              count = inputItem.amount,
            };
          end
        end

        allPatterns[item.output.name] = item;
      end
    end
    for i, rsItem in pairs(rsBridge.listItems()) do
      displayNames[rsItem.name] = rsItem.displayName:sub(5, rsItem.displayName:len() - 1);
    end
  end

  for name, pattern in pairs(allPatterns) do
    if (pattern.output.displayName ~= nil) then
      displayNames[name] = pattern.output.displayName;
    end
    for i, input in pairs(pattern.input) do
      if (input.displayName ~= nil) then
        displayNames[input.name] = input.displayName;
      end
    end
  end

  if (fs.exists('display_names.json')) then
    pcall(function ()
      local file = fs.open(""display_names.json"", ""r"")
      local contents = textutils.unserialiseJSON(file.readAll());
      file.close()

      for itemName, displayName in pairs(contents) do
        displayNames[itemName] = displayName;
      end
    end)
  end

  for i, item in pairs(allPatterns) do
    -- Add display name to output
    if (displayNames[item.output.name] ~= nil) then
      item.output.displayName = displayNames[item.output.name];
    end
    if (item.output.displayName == nil) then
      item.output.displayName = item.output.name;
    end

    -- Add display name to inputs
    for craftingIndex, inputItem in pairs(item.input) do
      if (displayNames[inputItem.name] ~= nil) then
        inputItem.displayName = displayNames[inputItem.name];
      end
      if (inputItem.displayName == nil) then
        inputItem.displayName = inputItem.name;
      end
    end

    item.inputSummary = {};
    for craftingIndex, inputItem in pairs(item.input) do
      if (item.inputSummary[inputItem.name] == nil) then
        item.inputSummary[inputItem.name] = 0;
      end
      item.inputSummary[inputItem.name] = item.inputSummary[inputItem.name] + inputItem.count;
    end
  end

  -- Filter to only return patterns that duplicate their ingredients
  --- @type table<number, pattern>
  local filteredPatterns = {};
  local addedPatterns = {};
  for i, pattern in pairs(allPatterns) do
    local outputCount = pattern.output.count;
    local inputCount = pattern.inputSummary[pattern.output.name];

    if (addedPatterns[pattern.output.name] ~= true and inputCount ~= nil and outputCount > inputCount and inputCount > 0) then
      table.insert(filteredPatterns, pattern);
      addedPatterns[pattern.output.name] = true;
    end
  end

  return filteredPatterns;
end

function eject()
  local keepItemAmountByItemName = {};
  for i, pattern in pairs(getDuplicatePatterns()) do
    if (keepItemAmountByItemName[pattern.output.name] == nil) then
      keepItemAmountByItemName[pattern.output.name] = pattern.inputSummary[pattern.output.name];
    else
      keepItemAmountByItemName[pattern.output.name] = math.max(keepItemAmountByItemName[pattern.output.name], pattern.inputSummary[pattern.output.name]);
    end
  end
  
  -- re-import turtleInventory
  for slot, item in pairs(turtleInventory.list()) do
    if (rsBridge ~= nil) then
      rsBridge.importItemFromPeripheral({item = item.name}, peripheral.getName(turtleInventory))
    elseif (meBridge ~= nil) then
      meBridge.importItemFromPeripheral({item = item.name}, peripheral.getName(turtleInventory))
    end
  end

  local itemsToEject = {};
  if (rsBridge ~= nil) then
    for i, rsItem in pairs(rsBridge.listItems()) do
      local keepAmount = keepItemAmountByItemName[rsItem.name];
      if (keepAmount == nil) then
        keepAmount = 0;
      end
      local ejectAmount = rsItem.amount - keepAmount;
      if (ejectAmount > 0) then
        table.insert(itemsToEject, {name = rsItem.name, count = ejectAmount, source = 'rsBridge'});
      end
    end
  end
  
  if (meBridge ~= nil) then
    for i, meItem in pairs(meBridge.listItems()) do
      local keepAmount = keepItemAmountByItemName[meItem.name];
      if (keepAmount == nil) then
        keepAmount = 0;
      end
      local ejectAmount = meItem.amount - keepAmount;
      if (ejectAmount > 0 and meItem.name ~= 'ae2:crafting_pattern') then
        table.insert(itemsToEject, {name = meItem.name, count = ejectAmount, source = 'meBridge'});
      end
    end
  end

  if (modularRouter ~= nil) then
    local hasItemsToEject = true;
    while hasItemsToEject do
      hasItemsToEject = false;
      for itemName, item in pairs(itemsToEject) do
        if (item.count > 0) then
          local exportedAmount;
          if (item.source == 'rsBridge') then
            exportedAmount = rsBridge.exportItemToPeripheral(item, peripheral.getName(modularRouter))
          elseif (item.source == 'meBridge') then
            local amount, err = meBridge.exportItemToPeripheral(item, peripheral.getName(modularRouter));
            exportedAmount = amount;
          elseif (item.source == 'turtleInventory') then
            exportedAmount = turtleInventory.pushItems(peripheral.getName(modularRouter), item.slot, item.count);
          end
          os.sleep(1);
          itemsToEject[itemName].count = item.count - exportedAmount;
          if itemsToEject[itemName].count > 0 then
            hasItemsToEject = true;
          end
        end
      end
    end
  elseif (mcDropper ~= nil) then
    -- fastest drop rate is 1 item per 4 game ticks
    -- https://minecraft.fandom.com/wiki/Dropper#Redstone_component
    -- https://minecraft.fandom.com/wiki/Dispenser#Redstone_component
    error(""Droppers/Dispenser are not yet supported"");
  end
end

-- Returns Table{success: true}
-- Returns Table{success: false, missingItems: Array<Table{name: string, displayName: string, missing: number}>}
function attemptCraft(name)
  ---@type pattern
  local pattern = nil;
  for i, pat in pairs(getDuplicatePatterns()) do
    if (pat.output.name == name) then
      pattern = pat;
      break;
    end
  end

  if (pattern == nil) then
    -- should never get triggered by the end user
    error(""No pattern found for "" .. name);
  end

  if (rsBridge ~= nil) then
    -- TODO Refined storage
  end

  if (meBridge ~= nil) then
    local hasAllItems = true;
    for itemName, amount in pairs(pattern.inputSummary) do
      local meItem = meBridge.getItem({name = itemName});
      if (meItem == nil or meItem.name ~= itemName or meItem.amount < amount) then
        hasAllItems = false;
        break;
      end
    end

    if (hasAllItems) then
      for itemName, amount in pairs(pattern.inputSummary) do
        meBridge.exportItemToPeripheral({name = itemName, count = amount}, peripheral.getName(turtleInventory));
      end

      local request = {
        type = 'craft-request',
        data = pattern
      };
      wrirelessModem.transmit(modemPort, modemPort, request);
      local response = nil;
      while response == nil do
        parallel.waitForAny(function ()
          local event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"");
          if (channel == modemPort and type(message) == 'table' and message.type == 'craft-request-response') then
            response = message.data;
          end
        end, function ()
          os.sleep(15);
          response = {success = false};
        end)
      end
      eject();
      if (not response.success) then
        print('request', request);
        print('response', response);
      end
      return response;
    end
  end

  eject();
  return {success = false}
end

---@param page? number
function drawButtons(page)

  for name, value in pairs(touchApi.buttonList) do
    touchApi:remove(name);
  end

  local widestOutputName = 0;
  local patterns = getDuplicatePatterns();
  table.sort(patterns, function (a, b) return a.output.displayName < b.output.displayName end)
  for i, pattern in pairs(patterns) do
    widestOutputName = math.max(widestOutputName, string.len(pattern.output.displayName));
  end

  local padding = 1;
  local monWidth, monHeight = mon.getSize();
  widestOutputName = math.min((monWidth / 2) - padding - 2, widestOutputName)
  -- print(monWidth, ""x"", monHeight);

  local nrOfColumns = math.floor((monWidth) / (widestOutputName + 2 + padding));
  local nrOfRows = math.ceil(table.maxn(patterns) / nrOfColumns);
  local maxNrOfRowsOnScreen = math.floor(monHeight / 4);
  local paginationNeeded = nrOfRows > maxNrOfRowsOnScreen;
  if (paginationNeeded) then
    -- Make room for next/previous buttons
    maxNrOfRowsOnScreen = maxNrOfRowsOnScreen - 1;
  else
    page = 1;
  end
  
  if (page == nil) then
    page = touchApi.page;
  end
  if (page == nil) then
    page = 1;
  end
  if page < 1 then
    page = 1;
  end
  page = math.max(math.min(page, math.ceil(nrOfRows / maxNrOfRowsOnScreen)), 1)
  touchApi.page = page;

  if paginationNeeded then
    local pageLabel = page .. '/' .. math.ceil(nrOfRows / maxNrOfRowsOnScreen);
    local startLabelX = math.floor((monWidth - string.len(pageLabel) - 2) / 2);
    
    local startY = monHeight - 2;
    local endY = monHeight;
    touchApi:add('page index', pageLabel, nil, startLabelX, startY, (startLabelX + string.len(pageLabel) + 1), endY, colors.blue, colors.lime)
    if (page ~= 1) then
      touchApi:add('previous page', '<==', function () drawButtons(page - 1) end, 1, startY, 5, endY, colors.blue, colors.lime)
    end
    if (page < (nrOfRows / maxNrOfRowsOnScreen)) then
      touchApi:add('next page', '==>', function () drawButtons(page + 1) end, monWidth - 5, startY, monWidth, endY, colors.blue, colors.lime)
    end
  end

  local pageSize = nrOfColumns * maxNrOfRowsOnScreen;
  for i = (pageSize * (page - 1)) + 1, math.min(pageSize * page, table.maxn(patterns)), 1 do
    local pattern = patterns[i];
    local indexX = (i-1) % nrOfColumns;
    local indexY = (math.floor((i-1) / nrOfColumns)) % maxNrOfRowsOnScreen;

    local startX = 1 + (indexX * (padding)) + (indexX * (widestOutputName + 2));
    local endX = startX + widestOutputName;
    local startY = 1 + (indexY * padding) + (indexY * 3);
    local endY = startY + 2;

    local function onClick()
      touchApi:toggleButton(pattern.output.name);
      local craftResponse = attemptCraft(pattern.output.name);
      if (not craftResponse.success) then
        touchApi:remove(pattern.output.name)
        touchApi:add(pattern.output.name, ""Missing items"", nil, startX, startY, endX, endY, colors.blue, colors.lime);
        touchApi:draw();
        -- TODO this is a blocking operation, should add background tasks somehow
        os.sleep(3);
        touchApi:remove(pattern.output.name)
        touchApi:add(pattern.output.name, pattern.output.displayName, onClick, startX, startY, endX, endY, colors.red, colors.lime)
        touchApi:draw();
      else 
        touchApi:toggleButton(pattern.output.name);
      end
    end

    -- print('X:', startX, ""==>"", endX, '  & Y:', startY, ""==>"", endY, pattern.output.displayName);
    if (endX <= monWidth and endY <= monHeight) then
      touchApi:add(pattern.output.name, pattern.output.displayName, onClick, startX, startY, endX, endY, colors.red, colors.lime)
    end
  end

  touchApi:draw();
end

function start()
  findPeripherals();

  drawButtons()

  -- Do these things at the same time
  parallel.waitForAll(
    function ()
      -- draw the buttons
      touchApi:run()
    end,
    function ()
      -- redraw on monitor resize
      while true do
        os.pullEvent(""monitor_resize"");
        os.sleep(1);
        drawButtons()
      end
    end
  )
end

require('printer')
wrapPrint(start);"
FP4NmkmK,salesF2Round,CR7CR7,C#,Sunday 15th of October 2023 03:55:39 PM CDT,"using System;

public class ComputerSales
{
    public static void Main(string[] args)
    {
        Console.WriteLine(""Enter the number of computer models: "");
        int numModels = int.Parse(Console.ReadLine());

        int totalSales = 0;
        int totalRatings = 0;

        for (int i = 0; i < numModels; i++)
        {
            Console.WriteLine(""Enter sales and rating for model {0}: "", i + 1);
            int salesAndRating = int.Parse(Console.ReadLine());

            int sales = salesAndRating / 100; // possible sales
            int rating = salesAndRating % 10; // rating

            totalSales += CalculateSales(sales, rating);
            totalRatings += rating;
        }

        double averageRating = (double)totalRatings / numModels;
        double averageSales = (double)totalSales / numModels;

        Console.WriteLine(""Average rating: {0:F2}"", averageRating);
        Console.WriteLine(""Average sales: {0:F2}"", averageSales);
    }

    public static int CalculateSales(int sales, int rating)
    {
        double calculatedSales;
        switch (rating)
        {
            case 2:
                calculatedSales = 0;
                break;
            case 3:
                calculatedSales = sales * 0.5;
                break;
            case 4:
                calculatedSales = sales * 0.7;
                break;
            case 5:
                calculatedSales = sales * 0.85;
                break;
            case 6:
                calculatedSales = sales;
                break;
            default:
                calculatedSales = 0;
                break;
        }

        // Round to second decimal mark using F2 rounding.
        return (int)Math.Round(calculatedSales, 2);
    }
}
"
fM9bUzAt,Sum of Nodes in Kth Level,Mohammad_Dipu_Sultan,C++,Sunday 15th of October 2023 03:52:08 PM CDT,"#include<bits/stdc++.h>
using namespace std;

int main(){
	int k;
	cin >> k;
	string s;
	cin >> s;
	int level = -1, sum = 0, n = s.size(), value = 0;
	for(int i = 0; i < n; i++){
		if(s[i] == '(') level++;
		else if(s[i] == ')') level--;
		else if(level == k){
			if(s[i] == '-'){
				i++;
				value = 0;
				while(s[i]!='(' and s[i]!= ')' and s[i]>='0' and s[i]<='9'){
					value = value * 10 + s[i]-'0';
					i++;
				}
				i--;
				value = - value;
				sum+=value;
			}
			else{
				value = 0;
				while(s[i]!='(' and s[i]!= ')' and s[i]>='0' and s[i]<='9'){
					value = value * 10 + s[i]-'0';
					i++;
				}
				i--;
				sum+=value;
			}
		}
	}
	cout << sum << endl;
}

/*
2
(0(5(16()())(4()(9()())))(7(1()())(3()())))

24
*/"
bzU667FF,salesTask,CR7CR7,C#,Sunday 15th of October 2023 03:51:14 PM CDT,"using System;

public class ComputerSales
{
    public static void Main(string[] args)
    {
        Console.WriteLine(""Enter the number of computer models: "");
        int numModels = int.Parse(Console.ReadLine());

        int totalSales = 0;
        int totalRatings = 0;

        for (int i = 0; i < numModels; i++)
        {
            Console.WriteLine(""Enter sales and rating for model {0}: "", i + 1);
            int salesAndRating = int.Parse(Console.ReadLine());

            int sales = salesAndRating / 100; // possible sales
            int rating = salesAndRating % 10; // rating

            int calculatedSales;
            switch (rating)
            {
                case 2:
                    calculatedSales = 0;
                    break;
                case 3:
                    calculatedSales = (int)(sales * 0.5);
                    break;
                case 4:
                    calculatedSales = (int)(sales * 0.7);
                    break;
                case 5:
                    calculatedSales = (int)(sales * 0.85);
                    break;
                case 6:
                    calculatedSales = sales;
                    break;
                default:
                    calculatedSales = 0;
                    break;
            }

            totalSales += calculatedSales;
            totalRatings += rating;
        }

        double averageRating = (double)totalRatings / numModels;
        double averageSales = (double)totalSales / numModels;

        Console.WriteLine(""Average rating: {0}"", averageRating);
        Console.WriteLine(""Average sales: {0}"", averageSales);
    }
}
"
nwJfeUch,FisherMan_SRBD,Mohammad_Dipu_Sultan,C++,Sunday 15th of October 2023 03:40:30 PM CDT,"#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin >> n;
    vector<pair<int, int>> v(3);
    cin >> v[0].first >> v[1].first >> v[2].first;
    cin >> v[0].second >> v[1].second >> v[2].second;

    int g1, g2, g3, p1, p2, p3;
    sort(v.begin(), v.end());
    g1 = v[0].first, g2 = v[1].first, g3 = v[2].first;
    p1 = v[0].second, p2 = v[1].second , p3 = v[2].second;
    int ans = INT_MAX;
    for(int i = 1; i+p1-1+p2+p3 <= n; i++){
        for(int j = i+p1; j+p2-1+p3 <= n; j++){
            for(int k = j+p2; k+p3-1 <= n; k++){

                int tmp = 0;
                for(int t = i; t < p1+i; t++){
                    tmp+=abs(g1-t)+1;
                }
                for(int t = j; t < p2+j; t++){
                    tmp+=abs(g2-t)+1;
                }
                for(int t = k; t < p3+k; t++){
                    tmp+=abs(g3-t)+1;
                }
                ans = min(ans, tmp);
            }
        }
    }
    cout << ans << endl;

}

/*10
4 6 10
5 2 2

18*/"
AvXPYxWV,Burst Balloons Optimally_SRBD,Mohammad_Dipu_Sultan,C++,Sunday 15th of October 2023 03:25:05 PM CDT,"#include<bits/stdc++.h>
using namespace std;

int n, a[15];
vector<int>seen;
int sum(int ind){
	int store = 1, f = 0;

	for(int i = ind+1; i < n; i++){
		if(seen[i] == 0){
			store = store * a[i];
			f = 1;
			break;
		}
	}
	for(int i = ind-1; i>=0; i--){
		if(seen[i] == 0){
			store = store * a[i];
			f=1;
			break;
		}
	}
	if(f==1){
		return store;
	}
	else{
		return a[ind];
	}
}
int Brust(int ind){
	if(ind == n){
		return 0;
	}
	int ans = INT_MIN; // This have to declare here
	for(int i = 0; i < n; i++){
		if(seen[i] == 0){
			seen[i] = 1;
			ans = max(ans, sum(i)+Brust(ind+1));
			seen[i] = 0;
		}
	}
	return ans;
}
int main(){

	cin >> n;
	seen.assign(n, 0);
	for(int i = 0; i < n; i++){
		cin >> a[i];
	}

	cout << Brust(0) << endl;

	return 0;
}

/*4
1 2 3 4

20*/
"
eQSgDZix,Warmholes,Mohammad_Dipu_Sultan,C++,Sunday 15th of October 2023 03:15:17 PM CDT,"#include<bits/stdc++.h>
using namespace std;

int x2, y2, n, ans;
int a[105][5];
vector<int>seen;

void solve(int x1, int y1, int ind, int cost){
	if(ind == n){
		int x = abs(x1 - x2) + abs(y1-y2);
		ans = min(ans, x+cost);
		return;
	}

	int c1 = cost + abs(x1 - a[ind][0]) + abs(y1 - a[ind][1]) + a[ind][4];
	int c2 = cost + abs(x1 - a[ind][2]) + abs(y1 - a[ind][3]) + a[ind][4];

	if(c1 <= c2 and c1 < ans){
		solve(a[ind][2], a[ind][3], ind+1, c1);
	}
	else if(c2 < ans){
		solve(a[ind][0], a[ind][1], ind+1, c2);
	}
	if(cost < ans){
		solve(x1, y1, ind+1, cost);
	}
}

int main(){
	int tc;
	cin >> tc;
	while(tc--){
		
		cin >> n;
		int x1, y1;
		cin >> x1 >> y1 >> x2 >> y2;

		for(int i = 0; i < n; i++){
			cin >> a[i][0] >> a[i][1] >> a[i][2] >> a[i][3] >> a[i][4];
		}
		ans = INT_MAX;
		solve(x1, y1, 0, 0);
		cout << ans << endl;
	}

	return 0;

}

/*1
3
0 0 100 100
1 2 120 120 16
2 5 120 100 21
6 8 150 180 16

48
*/"
KixXQGa2,Kim and Refrigerators,Mohammad_Dipu_Sultan,C++,Sunday 15th of October 2023 03:04:13 PM CDT,"#include<bits/stdc++.h>
using namespace std;

int a[14], b[14], n, ans;
vector<int>seen;
void solve(int cur, int ind, int cost){

	if(ind == n){
		int x = abs(a[cur] - a[1]) + abs(b[cur]-b[1]);
		ans =  min(ans, x+cost);
		return;
	}

	for(int i = 2; i < n+2; i++){
		if(seen[i] == 0){
			seen[i] = 1;
			solve(i, ind+1, cost + abs(a[cur]-a[i]) + abs(b[cur] - b[i]));
			seen[i]  = 0;
		}
	}
}
int main(){
	int tc=10, cases=1;
	while(tc--){
		cin >> n;
		seen.assign(n+2, 0);
		for(int i = 0; i < n + 2; i++){
			cin >> a[i] >> b[i];
		}

		ans = INT_MAX;
		solve(0, 0, 0);
		cout << ""# ""<< cases++ <<"" "" << ans << endl;
	}

}

/*5
0 0 100 100 70 40 30 10 10 5 90 70 50 20
6
88 81 85 80 19 22 31 15 27 29 30 10 20 26 5 14
5
0 0 100 100 70 40 30 10 10 5 90 70 50 20
6
88 81 85 80 19 22 31 15 27 29 30 10 20 26 5 14
5
0 0 100 100 70 40 30 10 10 5 90 70 50 20
6
88 81 85 80 19 22 31 15 27 29 30 10 20 26 5 14
5
0 0 100 100 70 40 30 10 10 5 90 70 50 20
6
88 81 85 80 19 22 31 15 27 29 30 10 20 26 5 14
5
0 0 100 100 70 40 30 10 10 5 90 70 50 20
6
88 81 85 80 19 22 31 15 27 29 30 10 20 26 5 14

# 1 200
# 2 304
# 3 200
# 4 304
# 5 200
# 6 304
# 7 200
# 8 304
# 9 200
# 10 304
*/"
