id,title,username,language,date,content
s86hFZsn,Farm Factory Tycoon Best Script GUI,AlexYaWon,Lua,Sunday 1st of October 2023 05:41:56 PM CDT,"local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua'))()

local Window = Rayfield:CreateWindow({
    Name = ""DEV | Farm Factory Tycoon"",
    LoadingTitle = ""Farm Factory Tycoon"",
    LoadingSubtitle = ""By [REDACTED]"",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = ""DEV"",
        FileName = ""DevSave""
    },

})

Rayfield:Notify(""Loaded"", ""loaded in "", 4483362458) -- Notfication -- Title, Content, Image

local Tab = Window:CreateTab(""Main "", 4483362458)        -- Title, Image
local Section = Tab:CreateSection(""Main"")

local Button = Tab:CreateButton({
    Name = ""Infinite Money"",
    Callback = function()
        game.Players.LocalPlayer.PlayerGui.Hud.Main.Cash.Effect.Visible = false
        game.Players.LocalPlayer.PlayerGui.Hud.Main.Diamond.Effect.Visible = false
        game.Players.LocalPlayer.Character.HumanoidRootPart.RootRigAttachment:Destroy()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/CreatorProfessional/fft/main/generateinfinitemoney'))()
    end,
})

local Button = Tab:CreateButton({
    Name = ""Auto Upgrade"",
    Callback = function()
        getgenv().yourTycoon = nil
local descendants = game.Workspace.Tycoon:GetDescendants()

for index, descendant in pairs(descendants) do
if descendant.Name == ""Onwer"" then
if descendant.Value == game.Players.LocalPlayer then
  getgenv().yourTycoon = descendant.Parent
end
end
end
    end,
})

local Button = Tab:CreateButton({
    Name = ""Auto Obby"",
    Callback = function()
        getgenv().autoObbying = true

while getgenv().autoObbying do
  task.wait()
  local hrpCFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
  local end3 = game:GetService(""Workspace"").Obby.Obby3.End
  local end2 = game:GetService(""Workspace"").Obby.Obby2.End
  local end1 = game:GetService(""Workspace"").Obby.Obby1.End
  end3.Transparency = 1
  end2.Transparency = 1
  end1.Transparency = 1
  end3.CFrame = hrpCFrame
  end2.CFrame = hrpCFrame
  end1.CFrame = hrpCFrame
  end3.CanCollide = false
  end2.CanCollide = false
  end1.CanCollide = false
end
    end,
})

local Button = Tab:CreateButton({
    Name = ""Claim Gifts Every Second"",
    Callback = function()
        while wait(1) do
            local args = {
            [1] = 1
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 2
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 3
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 4
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 5
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 6
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 7
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 8
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 9
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 10
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 11
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        local args = {
            [1] = 12
        }
        
        game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Function""):WaitForChild(""FreeGifts""):WaitForChild(""ClaimGift""):InvokeServer(unpack(args))
        end
    end,
})

local Button = Tab:CreateButton({
    Name = ""Auto Upgrade+Rebirth Animals"",
    Callback = function()
        while wait(0.01) do

            local args = {
                [1] = ""Chicken10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Chicken1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            
            
            local args = {
                [1] = ""Cow10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Cow1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            
            
            local args = {
                [1] = ""Sheep10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep10""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep9""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep8""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep7""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep6""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep5""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep4""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep3""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep2""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryUpgrade""):FireServer(unpack(args))
            local args = {
                [1] = ""Sheep1""
            }
            
            game:GetService(""ReplicatedStorage""):WaitForChild(""Remote""):WaitForChild(""Event""):WaitForChild(""Spawn""):WaitForChild(""[C-S]TryRebirth""):FireServer(unpack(args))
        end
    end,
})
local Label = Tab:CreateLabel(""BE AWARE YOUR SCREEN WILL GET FLOODED WITH NOTIFICATIONS SUCH AS 'did not reach the level'."")
local Label = Tab:CreateLabel(""If you know where the notification comes from please contact me."")
local Tab = Window:CreateTab(""Misc "", 4483362458)        -- Title, Image
local Section = Tab:CreateSection(""Player Settings"")

local Slider = Tab:CreateSlider({
    Name = ""Speed"",
    Range = { 0, 250 },
    Increment = 1,
    Suffix = ""Walkspeed"",
    CurrentValue = 16,
    Flag = ""Slider2"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        while Value do
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =  Value
        end
    end,
})

local Slider = Tab:CreateSlider({
    Name = ""JumpPower"",
    Range = { 0, 250 },
    Increment = 1,
    Suffix = ""JumpPower"",
    CurrentValue = 50,
    Flag = ""Slider3"", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        while Value do
            wait(0.1)
            game.Players.LocalPlayer.Character.Humanoid.JumpPower =  Value
        end
    end,
})



local Section = Tab:CreateSection(""Misc"")
local Button = Tab:CreateButton({
    Name = ""Ctrl+Click TP"",
    Callback = function()
        local Plr = game:GetService(""Players"").LocalPlayer
local Mouse = Plr:GetMouse()
Mouse.Button1Down:connect(function()
if not game:GetService(""UserInputService""):IsKeyDown(Enum.KeyCode.LeftControl) then return end
if not Mouse.Target then return end
Plr.Character:MoveTo(Mouse.Hit.p)
end)
    end,
})
local Button = Tab:CreateButton({
    Name = ""Remote Spy - Simply Spy"",
    Callback = function()
        loadstring(game:HttpGet(""https://pastebin.com/raw/z3CJvrXt""))()
    end,
})
local Button = Tab:CreateButton({
    Name = ""DarkDex"",
    Callback = function()
        getfenv(1).currentTheme = ""Graphite""
        loadstring(game:HttpGet(""https://raw.githubusercontent.com/loglizzy/dex-custom-icons/main/main.lua""))()
    end,
})
local Button = Tab:CreateButton({
    Name = ""Destroy UI"",
    Callback = function()
        Rayfield:Destroy()
        
    end,
})
local Label = Tab:CreateLabel(""ANTI AFK ALREADY APPLIED ON EXECUTION"")

-- local Button = Tab:CreateButton({
    --Name = ""Stand In Place"",
    --Callback = function()
        --game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
    --end,
--})

--local Button = Tab:CreateButton({
    --Name = ""Sit"",
    --Callback = function()
        --game.Players.LocalPlayer.Character.Humanoid.Sit = true
    --end,
--})

--local Button = Tab:CreateButton({
    --Name = ""Get up"",
    --Callback = function()
        --game.Players.LocalPlayer.Character.Humanoid.Sit = false
        --game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
    --end,
--})

-- AntiAfk

if game.Players.LocalPlayer then
    local vu = game:GetService(""VirtualUser"")
game:GetService(""Players"").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
end


-- Extras

-- getgenv().SecureMode = true -- Only Set To True If Games Are Detecting/Crashing The UI

-- Rayfield:Destroy() -- Destroys UI

-- Rayfield:LoadConfiguration() -- Enables Configuration Saving

-- Section:Set(""Section Example"") -- Use To Update Section Text

-- Button:Set(""Button Example"") -- Use To Update Button Text

-- Toggle:Set(false) -- Use To Update Toggle

-- Slider:Set(10) -- Use To Update Slider Value

-- Label:Set(""Label Example"") -- Use To Update Label Text

-- Paragraph:Set({Title = ""Paragraph Example"", Content = ""Paragraph Example""}) -- Use To Update Paragraph Text

-- Keybind:Set(""RightCtrl"") -- Keybind (string) -- Use To Update Keybind

-- Dropdown:Set(""Option 2"") -- The new option value -- Use To Update/Set New Dropdowns"
V9Ed3B5C,Point Of Segment(Ternary Operator),Spocoman,Python,Sunday 1st of October 2023 04:54:39 PM CDT,"first = int(input())
second = int(input())
point = int(input())

print(""in"" if first >= point >= second or first <= point <= second else ""out"")
print(min(abs(first - point), abs(second - point)))
"
YAvjXtY2,Point Of Segment(Ternary Operator),Spocoman,JavaScript,Sunday 1st of October 2023 04:49:58 PM CDT,"function pointOfSegment(input) {
    let first = Number(input[0]);
    let second = Number(input[1]);
    let point = Number(input[2]);
    
    console.log(point <= first && point >= second || point >= first && point <= second ? ""in"" : ""out"");
    console.log(Math.min(Math.abs(first - point), Math.abs(second - point)));

    return;
}"
rxfYP4qF,Point Of Segment(Ternary Operator),Spocoman,C++,Sunday 1st of October 2023 04:44:53 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int first, second, point;
    cin >> first >> second >> point;

    cout << (point <= first && point >= second || point >= first && point <= second ? ""in"" : ""out"")
        << endl << min(abs(first - point), abs(second - point)) << endl;

    return 0;
}"
VfVbHtVS,Point Of Segment(Ternary Operator),Spocoman,C#,Sunday 1st of October 2023 04:36:28 PM CDT,"using System;

namespace PointOfSegment
{
    class Program
    {
        static void Main(string[] args)
        {
            int first = int.Parse(Console.ReadLine());
            int second = int.Parse(Console.ReadLine());
            int point = int.Parse(Console.ReadLine());

            Console.WriteLine(point <= first && point >= second || point >= first && point <= second ? ""in"" : ""out"");
            Console.WriteLine(Math.Min(Math.Abs(first - point), Math.Abs(second - point)));
        }
    }
}"
cFLCZMLt,rsh_server.lua,cul8ter,Lua,Sunday 1st of October 2023 04:03:04 PM CDT,"local ot=term
local nt={}
local mod=peripheral.find(""modem"")
mod.open(545)
local function call_remote(k,...)
    args={...}
    mod.transmit(555,545,{""NSA"",k,args})
end
for k,v in pairs(term) do
    nt[k]=function(...) call_remote(k,...) return ot[k](...) end
    print(""Hooked: ""..k)
    os.sleep(0)
end
_G.term=nt
nt.clear()
nt.setCursorPos(1,1)
local oldf=_G.os.pullEventRaw
_G.os.pullEventRaw=function()
    local name,a,b,c,d,e=oldf()
    if name==""modem_message"" then
        if b==545 then
            if d[3]~=_G.tmp then
                _G.tmp=d[3]
                os.queueEvent(d[1],d[2])
            end
        end
    end
    return name,a,b,c,d,e
end
shell.run(""sh"")
_G.term=ot
_G.os.pullEventRaw=oldf
print(""exited"")"
WmSZKsS3,HedgehogFacts,Tivorak,JSON,Sunday 1st of October 2023 03:50:16 PM CDT,"[
    ""It’s a myth that hedgehogs can’t swim."",
    ""A baby hedgehog is called a hoglet. "",
    ""The average hedgehog has 44 teeth."",
    ""The name “hedge” hog comes from their habitat."",
    ""Even a cute hedgehog can bite."",
    ""Hedgehogs and porcupines have many differences."",
    ""Hedgehog quills act as their primary defense mechanism."",
    ""Porcupine quills are more dangerous than hedgehog quills."",
    ""The African pygmy hedgehog is the most popular pet hedgehog. "",
    ""The hedgehog diet mainly consists of garden pests."",
    ""Hedgehogs have been featured in Alice in Wonderland."",
    ""People used to believe that hedgehogs drank milk from cows."",
    ""Hedgehogs have partial immunity to snake venom."",
    ""In New Zealand, the hedgehog is considered an invasive species."",
    ""Wild hedgehogs live in nests."",
    ""Hedgehogs were once considered sacred."",
    ""Hedgehog noises communicate different things. While looking for food, hedgehogs usually grunt and snuffe like pigs. During mating season, they chuff like a train to attract mates."",
    ""Hedgehogs perform a unique behavior called anointing."",
    ""No one knows why hedgehogs anoint."",
    ""Cars pose a big threat to hedgehogs."",
    ""Hedgehogs may suffer from balloon syndrome."",
    ""Hedgehogs aren’t rodents."",
    ""Long-eared hedgehogs are prone to carrying parasites and diseases."",
    ""Pet hedgehogs exhibit tubing."",
    ""European hedgehogs are the largest species."",
    ""African pygmy hedgehogs are the smallest hedgehogs in the world."",
    ""Scientists discovered the Sonic Hedgehog protein in 1980."",
    ""The oldest hedgehog lived up to 16 years old."",
    ""Hedgehogs can’t roll while they are curled up."",
    ""Most hedgehogs are only active at night."",
    ""Hedgehogs are omnivorous.""
]"
2NwDAtm3,Untitled,Techn0id,VBScript,Sunday 1st of October 2023 03:35:03 PM CDT,"Set WshShell = CreateObject(""WScript.Shell"")
MsgBox ConvertToKey(WshShell.RegRead(""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\DigitalProductId""))
FileLocation = GetCurrentFolder()
call WriteToFIle(ConvertToKey(WshShell.RegRead(""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\DigitalProductId"")),FileLocation)

Function GetCurrentFolder()
    Dim FSO
    Set FSO = CreateObject(""Scripting.FileSystemObject"")
    GetCurrentFolder = FSO.GetAbsolutePathName(""."")
End Function

Function WriteToFIle(prokey,File)
    '~ Create a FileSystemObject
    Set objFSO=CreateObject(""Scripting.FileSystemObject"")
    '~ Provide file path
     outFile=File
     '~ Setting up file to write
    Set objFile = objFSO.CreateTextFile(outFile&""/Productkey.txt"",True)
	 objFile.WriteLine prokey
	 objFile.Close
End Function

Function ConvertToKey(Key)
	Const KeyOffset = 52
	i = 28
	Chars = ""BCDFGHJKMPQRTVWXY2346789""
	Do
	Cur = 0
	x = 14
	Do
	Cur = Cur * 256
	Cur = Key(x + KeyOffset) + Cur
	Key(x + KeyOffset) = (Cur \ 24) And 255
	Cur = Cur Mod 24
	x = x -1
	Loop While x >= 0
	i = i -1
	KeyOutput = Mid(Chars, Cur + 1, 1) & KeyOutput
	If (((29 - i) Mod 6) = 0) And (i <> -1) Then
	i = i -1
	KeyOutput = ""-"" & KeyOutput
	End If
	Loop While i >= 0
	ConvertToKey = KeyOutput
End Function"
hxsAe1gX,[LUA] Door Lock for CC: Tweaked,takkairo,Lua,Sunday 1st of October 2023 03:34:22 PM CDT,"while true do
    -- Clear after/reset cursor each try 
    term.clear()
    term.setCursorPos(1, 1)

    -- Prompt user for password 
    print(""Please Enter Password:"")
    input = read(""*"")

     -- Validate password 
    if input == ""4123"" then
        -- Open door if password is correct
        redstone.setOutput(""bottom"", true) 
        -- Close door after 5 seconds
        sleep(5)
        redstone.setOutput(""bottom"", false)
    end
end"
EzYbi3pg,Untitled,renatagakhanov,Python,Sunday 1st of October 2023 03:25:55 PM CDT,"@dp.message_handler(state='UnicPhoto', content_types=['photo'])
async def unic_photo(message: types.Message, state: FSMContext):
    await state.finish()
    photo = message.photo
    for i in photo:
        letters = string.ascii_lowercase
        name = ''.join(random.choice(letters) for i in range(16))
        path = f'C:/Users/admin/Desktop/Teams/media/file_user/photo_{name}.png'
        await i.download(path)
        output_image_path = await applyFilter(path)
        await message.answer_photo(photo=open(output_image_path, 'rb'))"
8Rff58Gs,Untitled,Skos_Martren,C++,Sunday 1st of October 2023 03:06:23 PM CDT,"#include <iostream>
#include <vector>
#include<algorithm>
#include <array>

using namespace std; 



class Solution {

private:

    struct Event {

        int Val;
        int Type;

    };

    const bool operator<(const Event L, const Event R) {
        return (L.Val == R.Val ? L.Type < R.Type : L.Val < R.Val);
    }

private:

    int MNCR = 0; // Minimum Number of Conference Rooms 

public:

    int minMeetingRooms(vector<vector<int>>& intervals) {

        vector<Event> events; events.reserve(2 * intervals.size()); // ""2 * "" <-- укладывания концов в intervals в events 

        for (int i = 0; i < intervals.size(); ++i) {

            const auto event = intervals[intervals.size() - 1 - i];
            events.pop_back();

            events.push_back({ event.front(), 1 });
            events.push_back({ event.back(), -1 });

        }

        sort(events.begin(), events.end());

        int CurrentNCR = 0;

        for (const auto [val, type] : events) {
            CurrentNCR += type;
            max(MNCR, CurrentNCR);
        }


        return MNCR;

    }

};"
B5TSd2ry,Sweet Dessert,Spocoman,Python,Sunday 1st of October 2023 02:42:38 PM CDT,"from math import ceil

budget = float(input())
guests = int(input())
banana_price = float(input())
egg_price = float(input())
berries_kilo_price = float(input())

needed_money = ceil(guests / 6) * (banana_price * 2 + egg_price * 4 + berries_kilo_price / 5)

if budget >= needed_money:
    print(f""Ivancho has enough money - it would cost {needed_money:.2f}lv."")
else:
    print(f""Ivancho will have to withdraw money - he will need {needed_money - budget:.2f}lv more."")
"
fx6w7YQv,Sweet Dessert,Spocoman,JavaScript,Sunday 1st of October 2023 02:34:10 PM CDT,"function sweetDessert(input) {
    let budget = Number(input[0]);
    let guests = Number(input[1]);
    let bananaPrice = Number(input[2]);
    let eggPrice = Number(input[3]);
    let berriesKiloPrice = Number(input[4]);
 
    let neededMoney = Math.ceil(guests / 6) * (bananaPrice * 2 + eggPrice * 4 + berriesKiloPrice / 5);
 
    if (budget >= neededMoney) {
        console.log(`Ivancho has enough money - it would cost ${neededMoney.toFixed(2)}lv.`);
    }
    else {
        console.log(`Ivancho will have to withdraw money - he will need ${(neededMoney - budget).toFixed(2)}lv more.`);
    }

    return;
}"
y888cEVJ,Untitled,mrlolthe1st,C++,Sunday 1st of October 2023 02:31:31 PM CDT,"#define _CRT_SECURE_NO_WARNINGS
#include <assert.h>

#include <algorithm>
#include <array>
#include <string_view>
#include <bitset>
#include <chrono>
#include <fstream>
#include <functional>
#include <iomanip>
#include <variant>
#include <iostream>
#include <map>
#include <numeric>
#include <optional>
#include <queue>
#include <random>
#include <set>
#include <sstream>
#include <string>
#include <thread>
#include <unordered_map>
#include <unordered_set>
#include <variant>
#include <vector>

using namespace std;
const int MAXN = 3e6;
struct /*__attribute__((__packed__))*/ node {
	int l, r, sz;
	uint32_t rk;
	char lit;
};
mt19937 gen(345678);
node nodes[MAXN];
int cid = 0;
int next() {
	int r = ++cid;
	if (r == MAXN) exit(-1);
	nodes[r].rk = gen();
	return r;
}

void upd(int v) {
	if (!v) return;
	nodes[v].sz = 1 + (nodes[v].l ? nodes[nodes[v].l].sz : 0) +
		(nodes[v].r ? nodes[nodes[v].r].sz : 0);
}

inline int cnt(int v) {
	if (!v) return 0;
	return nodes[v].sz;
}

int merge(int l, int r) {
	if (!l) return r;
	if (!r) return l;
	if (nodes[l].rk > nodes[r].rk) {
		nodes[l].r = merge(nodes[l].r, r);
		upd(l);
		return l;
	}
	else {
		nodes[r].l = merge(l, nodes[r].l);
		upd(r);
		return r;
	}
}

pair<int, int> split(int p, int x) {
	if (!p) return { 0, 0 };
	if (cnt(nodes[p].l) < x) {
		auto [l, r] = split(nodes[p].r, x - cnt(nodes[p].l) - 1);
		nodes[p].r = l;
		upd(p);
		return { p, r };
	}
	else {
		auto [l, r] = split(nodes[p].l, x);
		nodes[p].l = r;
		upd(p);
		return { l, p };
	}
}

void append(int& t, int it) { t = merge(t, it); }

int insert(const string& l, const string& r) {
	int ll = 0, rr = 0;
	if (l.size() == 1) {
		ll = next();
		nodes[ll].sz = 1;
		nodes[ll].lit = l[0];
	}
	if (r.size() == 1) {
		rr = next();
		nodes[rr].sz = 1;
		nodes[rr].lit = r[0];
	}
	if (!ll && !rr) return merge(insert(l.substr(0, l.size() / 2), l.substr(l.size() / 2)), insert(r.substr(0, r.size() / 2), r.substr(r.size() / 2)));
	if (!rr && r.size()) return merge(ll, insert(r.substr(0, r.size() / 2), r.substr(r.size() / 2)));
	if (!ll && l.size()) return merge(insert(l.substr(0, l.size() / 2), l.substr(l.size() / 2)), rr);
	return merge(ll, rr);
}

void print(stringstream& s, int t) {
	if (!t) return;
	print(s, nodes[t].l);
	s << nodes[t].lit;
	print(s, nodes[t].r);
}

void print(string& s, int t) {
	stringstream ss;
	print(ss, t);
	ss.flush();
	s = ss.str();
}

void insert(int& t, const string& s) {
	t = merge(t, insert(s.substr(0, s.size() / 2), s.substr(s.size() / 2)));
}

int K = 400;
int vnum = 0;
vector<string> ans(K);
vector<vector<vector<int>>> changes(2 * K);
vector<vector<vector<char>>> changes_i(2 * K);
vector<vector<vector<int>>> changes_int(2 * K);
vector<vector<vector<string>>> changes_str(2 * K);
signed main(int argc, char** argv) {
	int L, Q;
	string S;
	cin >> L >> Q >> S;
	int deco = 0;
	insert(deco, S);
	ans[0] = S;
	int processed = 0;
	int cnt1 = 1;
	int vnum = 1;
	while (Q--) {
		string t;
		cin >> t;
		if (t == ""GET"") {
			int v, l, r;
			cin >> v >> l >> r;
			--v;
			int p = v / K;
			int off = v % K;
			--off;
			auto& block = changes[p];
			auto& block_str = changes_str[p];
			auto& block_int = changes_int[p];
			auto& block_i = changes_i[p];
			for (int j = l; j <= r; ++j) {
				int cpos = j;
				int curr_off = off;
				while (curr_off > -1) {
					auto& cur_chng = block[curr_off];
					auto& cur_chng_i = block_i[curr_off];
					auto& cur_chng_int = block_int[curr_off];
					auto& cur_chng_str = block_str[curr_off];
					auto x = upper_bound(cur_chng.begin(), cur_chng.end(), cpos);
					--x;
					int idx = x - cur_chng.begin();
					if (cur_chng_i[idx]) {
						cout << cur_chng_str[idx][cpos - cur_chng[idx]];
						break;
					}
					else {
						cpos = cur_chng_int[idx] + cpos - cur_chng[idx];
						--curr_off;
					}
				}
				if (curr_off == -1) {
					cout << ans[p][cpos - 1];
				}
			}
			cout << endl;
		}
		else if (t == ""COMMIT"") {
			++processed;
			int c;
			cin >> c;
			int new_treap = 0;
			int copy = deco;
			int removed = 0;
			int curr_idx = 1;
			vector<int> changes_;
			vector<char> changes_i_;
			vector<int> changes_int_;
			vector<string> changes_str_;
			changes_.reserve(c);
			changes_int_.reserve(c);
			changes_i_.reserve(c);
			changes_str_.reserve(c);
			while (c--) {
				string t;
				cin >> t;
				if (t == ""add"") {
					cin >> t;
					insert(new_treap, t);
					changes_.push_back(curr_idx);
					curr_idx += t.size();
					changes_str_.emplace_back(std::move(t));
					changes_i_.push_back(1);
					changes_int_.push_back(0);
				}
				else {
					int l, r;
					cin >> l >> r;
					auto [a, b] = split(copy, l - 1 - removed);
					auto [c, d] = split(b, r - l + 1);
					new_treap = merge(new_treap, c);
					removed = r;
					copy = d;
					changes_.push_back(curr_idx);
					changes_str_.emplace_back();
					changes_i_.push_back(0);
					changes_int_.push_back(l);
					curr_idx += r - l + 1;
				}
			}
			changes[cnt1 - 1].emplace_back(std::move(changes_));
			changes_str[cnt1 - 1].emplace_back(std::move(changes_str_));
			changes_int[cnt1 - 1].emplace_back(std::move(changes_int_));
			changes_i[cnt1 - 1].emplace_back(std::move(changes_i_));
			deco = new_treap;
			cout << ""version "" << ++vnum << std::endl;
			if (processed == K - 1) {
				print(ans[cnt1++], deco);
				processed = 0;
			}
		}
		else if (t == ""FLUSH"") {
			cout << ""==="" << std::endl;
		}
	}
}"
V6x7VJTC,Strategies for Earning Profits Through Football Betting,livebetpro,PHP,Sunday 1st of October 2023 02:24:22 PM CDT,https://www.livebetpro.com/strategies-for-earning-profits-through-football-betting/
f97GTj7T,FTB FanProc: Drop and wait,Tobnac,Lua,Sunday 1st of October 2023 02:19:23 PM CDT,"local inventorySize = 16

while 1 do
	for i = 1, inventorySize do
		turtle.select(i)
    	turtle.suckUp()
    end
	for i = 1, inventorySize do
    	turtle.select(i)
		turtle.drop()
    end

	sleep(40)

	for i = 1, inventorySize do
		turtle.select(i)
    	turtle.suck()
    end
	turtle.turnLeft()
	for i = 1, inventorySize do
		turtle.select(i)
    	turtle.drop()
    end
	turtle.turnRight()
end"
DRqRL367,Sweet Dessert,Spocoman,C++,Sunday 1st of October 2023 02:18:55 PM CDT,"#include <iostream>
#include <cmath>

using namespace std;

int main() {
    double budget, guests, bananaPrice, eggPrice, berriesKiloPrice;
    cin >> budget >> guests >> bananaPrice >> eggPrice >> berriesKiloPrice;

    double neededMoney = ceil(guests / 6) * (bananaPrice * 2 + eggPrice * 4 + berriesKiloPrice / 5);

    if (budget >= neededMoney) {
        printf(""Ivancho has enough money - it would cost %.2flv."", neededMoney);
    }
    else {
        printf(""Ivancho will have to withdraw money - he will need %.2flv more."", neededMoney - budget);
    }
    return 0;
}"
QCwZvvmJ,Sweet Dessert,Spocoman,C#,Sunday 1st of October 2023 02:11:55 PM CDT,"using System;

namespace SweetDessert
{
    class Program
    {
        static void Main(string[] args)
        {
            double budget = double.Parse(Console.ReadLine());
            int guests = int.Parse(Console.ReadLine());
            double bananaPrice = double.Parse(Console.ReadLine());
            double eggPrice = double.Parse(Console.ReadLine());
            double berriesKiloPrice = double.Parse(Console.ReadLine());

            double neededMoney = Math.Ceiling((double)guests / 6) * (bananaPrice * 2 + eggPrice * 4 + berriesKiloPrice / 5);
           
            if(budget >= neededMoney)
            {
                Console.WriteLine($""Ivancho has enough money - it would cost {neededMoney:f2}lv."");
            }
            else
            {
                Console.WriteLine($""Ivancho will have to withdraw money - he will need {neededMoney - budget:f2}lv more."");
            }
        }
    }
}"
Ci9rTmfz,Claim Your $30 Free Account with Windsor Brokers,reviewbrokers,PHP,Sunday 1st of October 2023 02:11:14 PM CDT,https://www.reviewbrokers.net/claim-your-30-free-account-with-windsor-brokers/
SsVHQcjv,Stored Agent Shortcode,threemarketing,PHP,Sunday 1st of October 2023 01:57:20 PM CDT,"[oxygen data='phpfunction' function='get_option' arguments='stored_agent_login']

[oxygen data='phpfunction' function='get_option' arguments='stored_agent_register']

[oxygen data='phpfunction' function='get_option' arguments='stored_agent_line']"
pRPN05Kj,AVFX Capital | $100 Free Welcome Bonus,fxvnpro,PHP,Sunday 1st of October 2023 01:56:20 PM CDT,https://www.fxvnpro.com/avfx-capital-100-free-welcome-bonus/
tQxRdUQC,LeetCode 128 - Longest Consecutive Sequence - 2023.10.02 solution,nathanwailes,Python,Sunday 1st of October 2023 01:51:15 PM CDT,"class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        """""" If it was sorted, we could just track the longest sequence as
        we went.  But sorting is O(nlogn) time.  To get O(n) time we may need
        to use extra memory, like by using a dict. Also it's important to
        remember that we can go through the list multiple times and still have
        an O(n) solution.
        The question to ask yourself is: what would you want to know, when
        looking at each element, to know if it's the element you need to
        return?
        In our case, we'd want to know what the length of the sequence is of
        which this element is a part.  And then after iterating through the
        entire list and storing a variable to keep track of the longest
        sequence we've seen we'd have our answer.
        So the next question is: how could we determine the length of the sequence of
        each element as we came to that element? A: If we knew, for each element,
        whether there existed in the list the previous element and next
        element, we could traverse each sequence as we came to each element
        to determine its length.
        
        But we don't actually need to check *every* element as we come to
        it, but rather just
        one per sequence, and we'd get the answer (the length of the 
        longest sequence). So which element of each sequence should we
        check?  The only ones we know will exist in every sequence are
        the first and last elements of the sequence because we can't just say
        'oh we'll use the second element' if we don't know if all the
        sequences are at least 2 long.
        So if we're only checking the length of a sequence for the first
        element, then we need to know, when we get to each element in the
        original list, whether it's the first of a sequence or not. And we
        can do that by using our dict to check if the number one less than it
        is in the list or not.

        So, what we need to know:
        - For each element, the index of an element with a value of 1 less 
          than it, if such an element exists
        - For each element, the index of an element with a value 1 more than
          it, if it exists.
        - We could do this with one dict mapping from value to index.
        """"""
        num_set = set(nums)
        longest_length = 0
        for n in nums:
            if n - 1 in num_set:
                continue
            length = 0
            j = n
            while j in num_set:
                length += 1
                j += 1
            longest_length = max(length, longest_length)
        return longest_length
"
jqF73qxa,Python super,alaex777,Python,Sunday 1st of October 2023 01:49:54 PM CDT,"# 01.10.23

class Phone:
    def __init__(self, price: float, name: str) -> None:
        self.price = price
        self.name = name

    def __repr__(self) -> str:
        return f'{self.name} for {self.price}$'

'''
super keyword in python allows you to get parent methods and
fields inside child class. It is a usefull instrument, when
you want to reduce code duplication.
'''

class IPhone(Phone):
    def __init__(
        self,
        price: float, 
        name: str,
        ios_version: str
    ) -> None:
        super().__init__(price, name)
        self.ios_version = ios_version

    def __repr__(self) -> str:
        return f'{super().__repr__()} with {self.ios_version}'


print(IPhone(name='iphone 15', price=1299.99, ios_version='ios 16'))
# iphone 15 for 1299.99$ with ios 16
"
WFVSQfZi,Англо-русский словарь,DaniDori,C++,Sunday 1st of October 2023 01:18:42 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <windows.h>
using namespace std;

struct DictionaryEntry {
    char englishWord[50]; // английское слово
    char russianWord[50];  // русское слово
};

// 2.6.1. Преобразование тестовых данных из текстового файла в двоичный файл.
void convertTextToBinary(const string& textFilename, const string& binaryFilename) {
    ifstream infile(textFilename);
    ofstream outfile(binaryFilename, ios::binary);

    if (!infile.is_open() || !outfile.is_open()) {
        cerr << ""Ошибка при открытии файлов."" << endl;
        return;
    }

    string eng, rus;
    //Закидываем по одному слову(англ-рус) из файла ввода в файл вывода
    while (infile >> eng >> rus) {
        DictionaryEntry entry;
        strncpy(entry.englishWord, eng.c_str(), sizeof(entry.englishWord));
        strncpy(entry.russianWord, rus.c_str(), sizeof(entry.russianWord));
        // два слова пишем в файл вывода
        outfile.write(reinterpret_cast<char*>(&entry), sizeof(entry));
        //reinterpret_cast<char*>(&entry) - переводит тип с указателя на массив char
    }

    infile.close();
    outfile.close();
}

// 2.6.2. Преобразование данных из двоичного файла в текстовый.
void convertBinaryToText(const string& binaryFilename, const string& textFilename) {
    ifstream infile(binaryFilename, ios::binary);
    ofstream outfile(textFilename);

    if (!infile.is_open() || !outfile.is_open()) {
        cerr << ""Ошибка при открытии файлов."" << endl;
        return;
    }

    DictionaryEntry entry;
    while (infile.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        outfile << entry.englishWord << "" "" << entry.russianWord << ""\n"";
    }

    infile.close();
    outfile.close();
}

// 2.6.3. Вывод всех записей двоичного файла.
void displayAllEntries(const string& binaryFilename) {
    ifstream infile(binaryFilename, ios::binary);

    if (!infile.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
        return;
    }

    DictionaryEntry entry;
    while (infile.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        cout << entry.englishWord << "" - "" << entry.russianWord << ""\n"";
    }

    infile.close();
}

// 2.6.4. Доступ к записи по её порядковому номеру в файле.
DictionaryEntry getEntryByIndex(const string& binaryFilename, size_t index) {
    ifstream infile(binaryFilename, ios::binary);

    if (!infile.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
    }
    //перемещает указатель старта чтения на необходимое место(пропускает ненужное)
    infile.seekg(index * sizeof(DictionaryEntry));
    DictionaryEntry entry;
    infile.read(reinterpret_cast<char*>(&entry), sizeof(entry));

    infile.close();
    return entry;
}

// 2.6.5. Удаление записи с заданным значением ключа.
void deleteEntryByKey(const string& binaryFilename, const string& key) {
    ifstream infile(binaryFilename, ios::binary);
    if (!infile.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
        return;
    }
    //закидываем пары слов из файла в вектор(массив-список)
    vector<DictionaryEntry> entries;
    DictionaryEntry entry;
    while (infile.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        entries.push_back(entry);
    }

    infile.close();

    for (size_t i = 0; i < entries.size(); ++i) {
        if (string(entries[i].englishWord) == key) {
            //найденное слово перемещаем в конец списка
            entries[i] = entries.back();
            //удаляем последний элемент списка
            entries.pop_back();
            break;
        }
    }
    //перезаписываем файл
    ofstream outfile(binaryFilename, ios::binary);
    for (const auto& e : entries) {
        outfile.write(reinterpret_cast<const char*>(&e), sizeof(e));
    }

    outfile.close();
}

// 1. Сформировать список английских слов, начинающихся с указанной буквы и их русский перевод.
void listWordsByLetter(const string& binaryFilename, char letter) {
    ifstream infile(binaryFilename, ios::binary);
    if (!infile.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
        return;
    }

    DictionaryEntry entry;
    while (infile.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        //если первая буква в английском слове совпала с искомой
        if (entry.englishWord[0] == letter) {
            cout << entry.englishWord << "" - "" << entry.russianWord << ""\n"";
        }
    }

    infile.close();
}

// 2. Обновить запись, записав новый вариант русского перевода по заданному слову.
void updateTranslation(const string& binaryFilename, const string& key, const string& newTranslation) {
    fstream file(binaryFilename, ios::binary | ios::in | ios::out);
    if (!file.is_open()) {
        cerr << ""Ошибка при открытии файла."" << endl;
        return;
    }

    DictionaryEntry entry;
    while (file.read(reinterpret_cast<char*>(&entry), sizeof(entry))) {
        if (string(entry.englishWord) == key) {
            //Копируем в найденную пару новое русское слово
            strncpy(entry.russianWord, newTranslation.c_str(), sizeof(entry.russianWord));
            //мотает курсор работы с файлом на один шаг назад
            file.seekp(static_cast<long long>(file.tellg()) - sizeof(entry));
            file.write(reinterpret_cast<const char*>(&entry), sizeof(entry));
            break;
        }
    }

    file.close();
}

void binaryMenu() {
    string filename;
    cout << ""Введите имя двоичного файла: "";
    cin >> filename;

    while (true) {
        cout << ""\n--- Меню ---\n"";
        cout << ""1. Преобразовать текстовый файл в двоичный\n"";
        cout << ""2. Преобразовать двоичный файл в текстовый\n"";
        cout << ""3. Показать все записи из двоичного файла\n"";
        cout << ""4. Доступ к записи по её порядковому номеру\n"";
        cout << ""5. Удалить запись по английскому слову\n"";
        cout << ""6. Показать слова, начинающиеся с заданной буквы\n"";
        cout << ""7. Обновить русский перевод для заданного слова\n"";
        cout << ""8. Выход\n"";
        cout << ""Выберите действие: "";

        int choice;
        cin >> choice;
        cin.ignore(99999, '\n');  // очистка буфера

        switch (choice) {
        case 1: {
            string textFilename;
            cout << ""Введите имя текстового файла для преобразования: "";
            cin >> textFilename;
            convertTextToBinary(textFilename, filename);
            cout << ""успешно!\n "";
            break;
        }
        case 2: {
            string textFilename;
            cout << ""Введите имя текстового файла для сохранения: "";
            cin >> textFilename;
            convertBinaryToText(filename, textFilename);
            break;
        }
        case 3: {
            cout << ""Все слова из двоичного файла: \n"";
            displayAllEntries(filename);
            break;
        }
        case 4: {
            size_t index;
            cout << ""Введите порядковый номер записи: "";
            cin >> index;
            DictionaryEntry entry = getEntryByIndex(filename, index);
            cout << entry.englishWord << "" - "" << entry.russianWord << ""\n"";
            break;
        }
        case 5: {
            string key;
            cout << ""Введите английское слово для удаления: "";
            cin >> key;
            deleteEntryByKey(filename, key);
            break;
        }
        case 6: {
            char letter;
            cout << ""Введите английскую букву: "";
            cin >> letter;
            listWordsByLetter(filename, letter);
            break;
        }
        case 7: {
            string key, translation;
            cout << ""Введите английское слово: "";
            cin >> key;
            cout << ""Введите новый русский перевод: "";
            cin >> translation;
            updateTranslation(filename, key, translation);
            break;
        }
        case 8:
            return;
        default:
            cout << ""Неверный выбор.\n"";
        }
    }
}

int main() {
    //Подключаем русский
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);
    binaryMenu();
    return 0;
}
"
pAVhiGrw,Untitled,Zlatas863,PHP,Sunday 1st of October 2023 12:48:43 PM CDT,"<?php
class Database {
  private PDO $connect;
  private string $host;
  private int $port;
  private string $username;
  private string $password;  
  private string $database;
  private array $config = array(
   PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
   PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES utf8'
  );
  private string $sql;
  public function __construct(private array $input) {
    $this->host = $input[""host""];
    $this->port = intval($input[""port""]);
    $this->username = $input[""username""];
    $this->password = $input[""password""];
    $this->database = $input[""database""];
    $this->connect();
  }
  private function connectError(): void {
    echo ""Nelze se připojit k databázi"";    
  }
  private function querryError(array $error): void {
    echo new Alert(array(
      ""zprava"" =>""Chyba databáze ("" .  $error[1] . ""):<br>"" . $error[2],
      ""presmerovani"" => false
    ));
  }
  public function connect(): PDO {
    if (!isset($this->connect)) {      
      try {
        $this->connect = new PDO(
          ""mysql:host="" . $this->host . 
          "";port="" . $this->port .
          "";dbname="" . $this->database,
          $this->username,
          $this->password,
          $this->config
        );  
      } catch (PDOException $e) {
        $this->connectError();
        exit;
      }
    }
    return $this->connect; 
  }
  public function query(string $sql, array $params = array(), bool $commit=true): PDOStatement {  
    try {
      $query = $this->connect->prepare($sql);    
      $query->execute($params);
    } catch(PDOException) {
      $this->querryError($query->errorInfo());
      exit;
    }
    return $query;
  }
}
?>"
RXqZLqcE,Start At L:59,tomtomvader298,JavaScript,Sunday 1st of October 2023 12:42:12 PM CDT,"const fs = require('fs');
const { Client, GatewayIntentBits, Partials, Collection, EmbedBuilder, AutoModerationRuleManager, AutoModerationRule, } = require('discord.js');
const { token } = require('./config.json');
const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.MessageContent], partials: [Partials.Channel, Partials.Message], ws: [{ properties: { $browser: ""Discord Android"" } }] });
const Filter = require('bad-words');
const commandFiles = fs.readdirSync('./commands').filter(file => file.endsWith('.js'));
const eventFiles = fs.readdirSync('./events').filter(file => file.endsWith('.js'));
//
client.on(""ready"", () => {
  console.log(`Logged Into The Discord Client In ${client.ws.ping}ms!`);
  console.log(`Ready! Logged Into Discord Under The Name Of ${client.user.username}, In ${client.guilds.cache.size} Servers`);
  setInterval(() => {
    const statuses = [
      `Looking For Bad Words!`,
      `Auditing What You Do!`,
      `Making Sure Im Still ${client.user.username}`
    ];
    const Activity = [
      0,
      1,
      2,
      3,
      5,
    ];
    const s = statuses[Math.floor(Math.random() * statuses.length)];
    const a = Activity[Math.floor(Math.random() * Activity.length)];
    client.user.setPresence({ activities: [{ name: `${s}`, type: a }], status: 'dnd' });
  }, 20000);
})
//const channel = client.channels.cache.get(""ID""); this can be used to call a discord channel kept in index as a ref
client.commands = new Collection();
for (const file of commandFiles) {
  const command = require(`./commands/${file}`);
  client.commands.set(command.data.name, command);
}
for (const file of eventFiles) {
  const event = require(`./events/${file}`);
  if (event.once) {
    client.once(event.name, (...args) => event.execute(...args));
  } else { client.on(event.name, (...args) => event.execute(...args)); }
}
//
client.on('interactionCreate', async interaction => {
  console.log(`${interaction.user.tag} in #${interaction.channel.name} from ${interaction.guild.name} triggered an interaction (Slash Command: ${interaction.commandName}) .`);
  if (!interaction.isCommand()) return;
  const command = client.commands.get(interaction.commandName);
  if (!command) return; try {
    await command.execute(interaction);
  } catch (error) {
    console.error(error);
    return interaction.reply({ content: '```diff\n- OH NO! \n-A Error Has Occurred, Bot Owner Will Fix Whenever \n```', ephemeral: true });
  }
});


//Start Automod Section: Trail Alpha

//Bad Word Detection:
async function setupAutoModeration() {
  const manager = client.automod.createAutoModerationRuleManager();
  const loggingChannelId = '917549440347299840';
  const filter = new Filter();

  const badWordRule = new AutoModerationRule({
    name: 'Bad Words',
    reason: 'Using Inappropriate Language Is Not Allowed In This Server.',
    validate: async (message) => {
      if (message.member.permissions.has(PermissionFlagsBits.Administrator)) {
        return false; // Administration Bypass
      }
      const content = message.content.toLowerCase();
      return filter.isProfane(content);
    },
    punish: async (message) => {
      await message.delete();
      await message.channel.send({ content: `# ${message.author} \nPlease Refrain From Using Inappropriate Language.` });
      const loggingChannel = message.guild.channels.cache.get(loggingChannelId);
      if (loggingChannel) {
        await loggingChannel.send({ content: `A User (${message.author}) Has Been Flagged For Saying The Following:\n# ${content}` });
      }
    },
  });

  manager.addRule(badWordRule);
  manager.enable();
}

setupAutoModeration();

//Bad Nickname Detection:
async function setupAutoModeration() {
  const manager = new AutoModerationRuleManager();
  const loggingChannelId = '917549440347299840';
  const filter = new Filter();

  const blockedUsernameRule = new AutoModerationRule({
    name: 'Blocked Usernames',
    reason: 'We Do Not Condemn Inappropriate Usernames/Knicknames In This Server.',
    validate: async (member) => {
      if (message.member.permissions.has(PermissionFlagsBits.Administrator)) {
        return false; // Administration Bypass
      }
      const nickname = member.displayName.toLowerCase();
      return filter.isProfane(nickname);
    },
    punish: async (member) => {
      await member.setNickname('');
      const loggingChannel = message.guild.channels.cache.get(loggingChannelId);
      if (loggingChannel) {
        let clearedNameReason = `We Do Not Condemn Inappropriate Nicknames In This Server.`
        await loggingChannel.send({ content: `A User (${member}) Has Had There Display Name Reset For The Following Reason:\n# ${clearedNameReason}` });
      }
    },

  });

  manager.addRule(blockedUsernameRule);
  manager.enable();
}

setupAutoModeration();

//Mess Mention Detection:
async function setupAutoModeration() {
  const manager = client.automod.createAutoModerationRuleManager();
  const maxMentions = 6; // Maximum number of allowed mentions
  const timeoutDuration = 10 * 60; // 10 minutes (in seconds)
  const loggingChannelId = '917549440347299840';

  const mentionSpamRule = new AutoModerationRule({
    name: 'Mention Spam',
    reason: 'Excessive mention spam is not allowed in this server.',
    validate: async (message) => {
      if (message.member.permissions.has(PermissionFlagsBits.Administrator)) {
        return false; // Administration Bypass
      }
      const mentionCount = message.mentions.users.size;
      return mentionCount > maxMentions;
    },
    punish: async (message) => {
      await message.delete();
      await message.channel.send(`${message.author}, Please Refrain From Excessive Mention Spam.`);
      const member = message.guild.members.cache.get(message.author.id);
      if (member) {
        await member.timeout({ reason: 'Excessive mention spam', timeout: timeoutDuration });
        const loggingChannel = message.guild.channels.cache.get(loggingChannelId);
        if (loggingChannel) {
          await loggingChannel.send(`A User (${message.author}) Has Been Flagged For Mass Mentioning. They Have Been Timed Out For: ${timeoutDuration} Minutes.`);
        }
      }
    },
  });

  manager.addRule(mentionSpamRule);
  manager.enable();
}

setupAutoModeration();

//Mass Spam Detection:
async function setupAutoModeration() {
  const manager = client.automod.createAutoModerationRuleManager();
  const spamThreshold = 5; // Number of messages within the time frame to consider as spam
  const timeFrame = 10000; // Time frame in milliseconds (10 seconds)
  const removeCount = 3; // Number of messages to remove
  const timeoutDuration = 300000; // Timeout duration in milliseconds (5 minutes)
  const loggingChannelId = '917549440347299840';

  const spamRule = new AutoModerationRule({
    name: 'Spam Rule',
    reason: 'Sending multiple messages within a short time frame is considered spamming.',
    validate: async (message) => {
      if (message.member.permissions.has(PermissionFlagsBits.Administrator)) {
        return false; // Administration Bypass
      }
      const channelMessages = await message.channel.messages.fetch({ limit: spamThreshold });
      const spamMessages = channelMessages.filter((msg) => msg.author.id === message.author.id && msg.createdTimestamp >= (Date.now() - timeFrame));
      return spamMessages.size >= spamThreshold;
    },
    punish: async (message) => {
      const channelMessages = await message.channel.messages.fetch({ limit: removeCount + 1 });
      const spamMessages = channelMessages.filter((msg) => msg.author.id === message.author.id && msg.createdTimestamp >= (Date.now() - timeFrame));
      const messagesToRemove = spamMessages.array().slice(0, removeCount);
      await message.channel.bulkDelete(messagesToRemove);
      await message.channel.send(`${message.author}, Stop Spamming, It Floods The Chat.`);
      const member = message.guild.members.cache.get(message.author.id);
      if (member) {
        await member.timeout({ reason: 'Sending Multiple Messages Within A Short Time Frame Is Considered Spamming.', timeout: timeoutDuration });
      }
      const loggingChannel = message.guild.channels.cache.get(loggingChannelId);
      if (loggingChannel) {
        let clearedNameReason = `Sending Multiple Messages Within A Short Time Frame Is Considered Spamming.`
        await loggingChannel.send({ content: `A User (${member}) Has Been Timed Out For The Following Reason:\n# ${clearedNameReason}` });
      }
    },
  });

  manager.addRule(spamRule);
  manager.enable();
}

setupAutoModeration();

//Block Unallowed Discord Server Invites:
async function setupAutoModeration() {
  const manager = client.automod.createAutoModerationRuleManager();
  const loggingChannelId = '917549440347299840';

  const inviteLinkRule = new AutoModerationRule({
    name: 'Invite Link Filter',
    reason: 'Sending invite links is restricted to administrators only.',
    validate: async (message) => {
      if (message.member.permissions.has(PermissionFlagsBits.Administrator)) {
        return false; // Administration Bypass
      }
      const inviteRegex = /(https?:\/\/)?(www\.)?(discord\.(gg|io|me|li)|discord(app)?\.com\/invite)\/.+[a-z]/i;
      return inviteRegex.test(message.content); // Check if the message contains an invite link
    },
    punish: async (message) => {
      await message.delete();
      await message.channel.send({ content: `${message.author}, Only administrators are allowed to send invite links in this server.` });
      const loggingChannel = message.guild.channels.cache.get(loggingChannelId);
      if (loggingChannel) {
        let clearedNameReason = `Sent A Discord Invite Link.`
        await loggingChannel.send({ content: `A User (${member}) Has Been Flagged For The Following Reason:\n# ${clearedNameReason}` });
      }
    },
  });

  manager.addRule(inviteLinkRule);
  manager.enable();
}

setupAutoModeration();
//End Automod For Now

//------LOGIN------\\
client.login(token);
"
vTqQAWq9,09 2023,spidersam,JSON,Sunday 1st of October 2023 12:10:49 PM CDT,"[
 
  {
    ""name"": ""Zoo-01-09-2023-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/1bf489f5-9c95-d5a7-562a-113781ed66d1.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-02-09-2023-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/c0150afa-70f4-975b-f7f9-784af4458b61.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-04-09-2023-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/23a79e34-95dc-adf0-6d46-5d38aee5e086.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-05-09-2023-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/400880b7-129f-8f43-3b8f-49cf037cef51.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-06-09-2023-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/121c537c-21ab-f2a3-ce67-f5841601c1e4.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-07-09-2023-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/ddcebf35-8d74-cf0f-2f0e-f7a9f9c4195e.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-08-09-2023-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/c49e8c51-779c-81f6-9334-d3bf5722fe25.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-09-09-2023-Compilation-The Jackal"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/36207598-1d0a-4c25-3aa0-2ff5036e74c3.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-11-09-2023-Compilation-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/a25acb89-b21e-105c-5799-f30ac7ed6c15.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-12-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/88459b52-7e39-75f4-8190-3b728a6e3e02.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-13-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/6957033a-dee2-5173-caad-eeaa7c040810.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-14-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/a2cab2f1-51a1-1924-b6e0-7ad3fa6dfbbb.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-15-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/4d354e60-beee-38f9-fe8c-f670d1d03477.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""SabaZoo-16-09-2023-The Jackal"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-9-1/99433f72-796b-ace2-40b7-da045fa1f540.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-18-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/88ccab3f-53ea-9a16-0edb-90b72db2e785.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-19-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/3a48ab70-a400-8492-29eb-7427ebc8add7.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-20-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/8dd01cbc-bd92-f333-fb9b-619525bb52c4.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-21-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/a02f1db0-9467-63c8-2b54-308fb1eccc0b.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-22-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/b016ab70-5f40-9675-85af-44a472229345.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""SabaZoo-23-09-2023-The Jackalmp3"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/db49e2ab-eb9c-e051-8e61-042aa6934a77.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-25-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/e99ddbe7-794d-3f8f-8603-bc2191508744.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-26-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/bfd4b77f-441f-bfa2-ba60-41e12d58e1f0.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-27-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/0f61e5b1-9220-ddf5-fa58-a5101687d445.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-28-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/8d6a26e4-997b-ac69-871f-14e379e3a422.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  },
  {
    ""name"": ""Zoo-29-09-2023-S@m"",
    ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2023-8-30/74c39318-0c41-1101-d92b-0d5f6307b13f.mp3"",
    ""imageUrl"": ""https://i.imgur.com/MGXdb63m.jpg""
  }
]"
3ne5TmD4,Untitled,abstract_abstract,C++,Sunday 1st of October 2023 11:53:07 AM CDT,"#include ""Server.h""
#include <iostream>
#include <winsock2.h>
#include <ws2tcpip.h>

#pragma comment(lib, ""ws2_32.lib"")

Server::Server(const std::string& address, int port)
        : address(address), port(port), connected(false), serverSocket(0), clientSocket(0) {
    WSADATA wsaData;
    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {
        std::cerr << ""Ошибка при инициализации библиотеки WSA"" << std::endl;
        return;
    }

// Создание сокета
    serverSocket = socket(AF_INET, SOCK_STREAM, 0);
    if (serverSocket == INVALID_SOCKET) {
        std::cerr << ""Ошибка при создании сокета"" << std::endl;
        WSACleanup();
        return;
    }

// Настройка адреса и порта сервера
    sockaddr_in serverAddress{};
    serverAddress.sin_family = AF_INET;
    serverAddress.sin_port = htons(port);

    if (inet_pton(AF_INET, address.c_str(), &(serverAddress.sin_addr)) <= 0) {
        std::cerr << ""Некорректный адрес сервера"" << std::endl;
        closesocket(serverSocket);
        WSACleanup();
        return;
    }

// Привязка сокета к адресу и порту
    if (bind(serverSocket, (struct sockaddr*)&serverAddress, sizeof(serverAddress)) == SOCKET_ERROR) {
        std::cerr << ""Ошибка при привязке сокета"" << std::endl;
        closesocket(serverSocket);
        WSACleanup();
        return;
    }

// Ожидание подключений
    if (listen(serverSocket, 1) == SOCKET_ERROR) {
        std::cerr << ""Ошибка при ожидании подключений"" << std::endl;
        closesocket(serverSocket);
        WSACleanup();
        return;
    }

    std::cout << ""Сервер запущен и ожидает подключений..."" << std::endl;
    connected = true;
}

Server::~Server() {
    if (connected) {
        // Остановка сервера

        connected = false;
        std::cout << ""Сервер успешно остановлен из деструктора"" << std::endl;
    }
}

void Server::start() {
    if (!connected) {
        std::cerr << ""Сервер не был успешно запущен"" << std::endl;
        return;
    }

    while (true) {
        sockaddr_in clientAddress{};
        int clientAddressLen = sizeof(clientAddress);

        // Принятие нового подключения
        clientSocket = accept(serverSocket, (struct sockaddr*)&clientAddress, &clientAddressLen);
        if (clientSocket == INVALID_SOCKET) {
            std::cerr << ""Ошибка при принятии подключения"" << std::endl;
            continue;
        }

        char clientIp[INET_ADDRSTRLEN];
        inet_ntop(AF_INET, &(clientAddress.sin_addr), clientIp, INET_ADDRSTRLEN);
        int clientPort = ntohs(clientAddress.sin_port);

        std::cout << ""Получено новое соединение от "" << clientIp << "":"" << clientPort << std::endl;

        // Ваш код для обработки подключения

        // Закрытие сокета клиента
        closesocket(clientSocket);
        std::cout << ""Соединение с "" << clientIp << "":"" << clientPort << "" завершено"" << std::endl;
    }
}


void Server::stop() {
    if (connected) {
        // Остановка сервера

        // Закрытие клиентского сокета (если активно)
        if (clientSocket != 0) {
            closesocket(clientSocket);
            clientSocket = 0;
        }

        // Закрытие серверного сокета
        closesocket(serverSocket);
        WSACleanup();

        connected = false;
        std::cout << ""Сервер успешно остановлен"" << std::endl;
    } else {
        std::cerr << ""Сервер не был запущен"" << std::endl;
    }
}


bool Server::isConnected() const {
    return connected;
}

bool Server::isRunning() const {
    if (connected) {
        if(serverSocket != 0) {
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}
"
9p3jptFB,Untitled,greedydev,Swift,Sunday 1st of October 2023 11:42:16 AM CDT,"struct User {
    init(name: String) {
        self.name = name
    }
    
    let name: String
    
    private var interests = [Interest]()
    private var following = [User]()
    
    mutating func addInterest(_ interest: Interest) {
        interests.append(interest)
    }
    
    mutating func removeInterest(_ interest: Interest) {
        interests.removeAll(where: { $0 == interest })
    }
    
    mutating func follow(_ target: User) {
        following.append(target)
    }
    
    mutating func unfollow(_ target: User) {
        following.removeAll(where: { $0 == target })
    }
    
    func getFollowingList() -> [User] {
        return following
    }
    
    func getInterestsList() -> [Interest] {
        return interests
    }
}

extension User: Equatable {
    static func == (lhs: Self, rhs: Self) -> Bool {
        return lhs.name == rhs.name
    }
}

struct Interest {
    let name: String
}

extension Interest: Equatable {
    static func == (lhs: Self, rhs: Self) -> Bool {
        return lhs.name == rhs.name
    }
}
"
YGH8Xm3P,Equal Sum,Pijomir,JavaScript,Sunday 1st of October 2023 11:37:32 AM CDT,"function checkForEqualSums(arr) {
    let result = 'no';
    for (let i = 0; i < arr.length; i++) {
        let leftSum = 0;
        let rightSum = 0;
        for (let j = 0; j < i; j++) {
            leftSum += arr[j];
        }

        for (let k = i + 1; k < arr.length; k++) {
            rightSum += arr[k];
        }

        if(leftSum === rightSum) {
            result = i;
            break;
        }
    }

    console.log(result);
}"
ihpK1gYQ,Untitled,drinfernoo,Python,Sunday 1st of October 2023 11:29:54 AM CDT,"class Calculator:
    def add(self, a, b):
        return a + b

    def subtract(self, a, b):
        return a - b

    def multiply(self, a, b):
        return a * b

    def divide(self, a, b):
        try:
            return a / b
        except ZeroDivisionError:
            return ""You can't divide by zero!""
"
kb7x7P4z,Untitled,drinfernoo,Python,Sunday 1st of October 2023 11:23:30 AM CDT,"class Calculator:
    def add(self, a, b):
        return a + b

    def subtract(self, a, b):
        return a - b

    def multiply(self, a, b):
        return a * b

    def divide(self, a, b):
        return a / b if b != 0 else ""You can't divide by zero!""
"
ppvSLJ73,triggers for elizabeth,vsevolod026,PostgreSQL,Sunday 1st of October 2023 11:11:41 AM CDT,"create type cud_operation as enum('update', 'insert', 'delete');

-- Создание таблицы для логов
create table session.building_logs(
    id_log serial primary key,
    operation_type cud_operation not null,
    operation_time timestamp without time zone,
    affected_building_id int null,
    affected_building_name text null
);

-- Создание метода для триггера
CREATE OR REPLACE FUNCTION building_add_to_log() RETURNS TRIGGER AS $$
DECLARE
    var_operation_type cud_operation;
BEGIN
    IF  TG_OP = 'INSERT' THEN
        var_operation_type := 'insert';
        insert into
            session.building_logs(operation_type, operation_time, affected_building_id, affected_building_name)
        VALUES
            (var_operation_type, now(), new.building_id, new.building_name);
        RETURN NEW;
    ELSIF TG_OP = 'UPDATE' THEN
        var_operation_type := 'update';
        insert into
            session.building_logs(operation_type, operation_time, affected_building_id, affected_building_name)
        VALUES
            (var_operation_type, now(), old.building_id, old.building_name);
        RETURN NEW;
    ELSIF TG_OP = 'DELETE' THEN
        var_operation_type := 'delete';
        insert into
            session.building_logs(operation_type, operation_time, affected_building_id, affected_building_name)
        VALUES
            (var_operation_type, now(), old.building_id, old.building_name);
        RETURN OLD;
    END IF;
END
$$ LANGUAGE plpgsql;



create trigger log_trigger
    after insert or update or delete on session.building
    for each row execute procedure building_add_to_log();

drop trigger log_trigger on session.building;



delete  from session.building_logs;

select * from session.building_logs;

update session.building
set
    building_name = 'корпус228'
where building_id=5;

insert into session.building(building_id, address, building_name) values
    (7, 'sample address', 'корпус30');

delete from session.building where building_id=7;


select edu_plan_subject_id from session.edu_plan_subject
    where edu_plan_id=(select edu_plan_id from session.""group""
        where group_id=(select group_id from session.student_in_group
            where student_in_group_id=100));

create or replace function check_subject_in_edu_plan() returns trigger as
$$
declare
    edu_plan_subject_ids int[];
begin
    select array_agg(edu_plan_subject_id) into edu_plan_subject_ids from session.edu_plan_subject
    where edu_plan_id=(select edu_plan_id from session.""group""
        where group_id=(select group_id from session.student_in_group
            where student_in_group_id=new.student_in_group_id));

    if new.edu_plan_subject_id <> any(edu_plan_subject_ids) then
        raise EXCEPTION 'Нет такого учебного курса в учебном плане группы';
    end if;

    return new;
end
$$ language plpgsql;


create trigger check_subject_trigger
before insert on session.attestation
for each row execute procedure check_subject_in_edu_plan();

select edu_plan_subject_id from session.edu_plan_subject
    where edu_plan_id=(select edu_plan_id from session.""group""
        where group_id=(select group_id from session.student_in_group
            where student_in_group_id=1));


insert into session.attestation(grade, attestation_date, teacher_id, edu_plan_subject_id, student_in_group_id, attempt_count)
values (5, '2020-03-03', 0, 0, 1, 1)

"
jvd40JqH,Untitled,dllbridge,C,Sunday 1st of October 2023 11:07:55 AM CDT,"

#include    <stdio.h>
char sz[99] = ""Paramout_Pictures"";
void foo(char *psz);


int  n = 77;
int *p = &n;

//////////////////////////////////////////////////////// 
int main()                                            //
{
	foo(sz);
}

////////////////////////////////////////////////////
void foo(char *psz)
{
	
    psz += 9;	

	
	printf(""%s"", psz);
}







/*
#include    <stdio.h>


void foo(int &pn);

//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	int nx = 123;
	
	printf(""address nx = %d\n"", &nx);
	
	foo(nx);
	
	printf(""from main nx = %d"", nx);
	
}




//////////////////////////////////
void foo(int &a)
{
	

	
	a = a - 100;
	
  // *pn = *pn - 100;
	
	printf(""address a = %d\n"", &a);
	
	
	
}

*/





/*
#include    <stdio.h>


void foo(int *pn);

//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	int nx = 123;
	
	printf(""address nx = %d\n"", &nx);
	
	foo(&nx);
	
	printf(""from main nx = %d"", nx);
	
}




//////////////////////////////////
void foo(int *pn)
{
	
	int &a = *pn;
	
	a = a - 100;
	
  // *pn = *pn - 100;
	
	printf(""pn = %d\n"", pn);
	
	
	
}
*/





/*

#include    <stdio.h>


void foo(int *pn);

//////////////////////////////////////////////////////// 
int main()                                            //
{
	
	int nx = 123;
	
	printf(""address nx = %d\n"", &nx);
	
	foo(&nx);
	
	printf(""from main nx = %d"", nx);
	
}




//////////////////////////////////
void foo(int *pn)
{
	
   *pn = *pn - 100;
	
	printf(""pn = %d\n"", pn);
	
	
	
}


*/






"
kBEdwTzi,random.html,amrul813,HTML,Sunday 1st of October 2023 11:02:19 AM CDT,"<!DOCTYPE html>
<html>
<head>
	<meta charset=""utf-8"">
	<title>Redirecting...</title>
	<script type=""text/javascript"">
		/*
		This file randomly redirects a user to one of the URLs in a list. It is built
		with the intent of randomization in a controlled experiment.

		For example, create three Google Docs forms (or equivalent) and add their URLs
		to the list below. That's it!

		The user is then automatically and randomly assigned to one of the URLs when
		the user visits this file. If the user decides to close and reopen the browser,
		the user is still redirected to the same URL since a cookie is saved in the
		user's browser.
		
		Peter M. Dahlgren
		@peterdalle
		peterdahlgren.com
		2016-01-05
		*/
		
		// List of URLs (two or more) for the experimental treatment and control groups.
		var RedirectURLs = {
			""urls"" : [
				{ ""url"" : ""http://www.google.com/"" },
				{ ""url"" : ""http://www.youtube.com/"" },
				{ ""url"" : ""https://kusonime.com/"" }
			]
		}

		// Count the number of URLs in list.
		var Groups = RedirectURLs.urls.length;

		// Randomize number and get the corresponding index for the URL in list.
		var gotoUrl = RedirectURLs.urls[GetRandomNumber(Groups)].url

		// Perform redirection.
		if (window.location.search == ""?debug"") {
			// Debug mode: If user supplies a ?debug querystring,
			// then only show the redirect URL, but don't actually redirect.
			document.write(""Redirect URL: "" + gotoUrl);
		} else {
			// Redirect the user to the new URL.
			document.location = gotoUrl;
		}

		// Perform randomization and save it to a cookie.
		function GetRandomNumber(Groups) {
			// Has cookie been set?
			var rndIndex = null;
			if (GetCookie() != """") {
				// Yes, get randomization from cookie.
				rndIndex = GetCookie()
			} else {
				// No, set random value to cookie.
				rndIndex = Math.floor((Math.random() * Groups));
				SetCookie(rndIndex, 30) // Set cookie for 30 days.
			}
			return rndIndex
		}

		// Set cookie with randomization value.
		function SetCookie(CookieValue, DaysUntilExpire) {
			var d = new Date();
			d.setTime(d.getTime() + (DaysUntilExpire * 24 * 60 * 60 * 1000));
			document.cookie = ""rnd="" + CookieValue + "";expires="" + d.toUTCString();
		}

		// Get cookie with randomization value. Return empty string if not set.
		function GetCookie() {
			var ca = document.cookie.split(';');
			for(var i = 0; i < ca.length; i++) {
				var c = ca[i];
				while (c.charAt(0) == ' ') c = c.substring(1);
				if (c.indexOf(""rnd="") == 0) return c.substring(4, c.length);
			}
			return """";
		}
	</script>
</head>
<body>
</body>
</html>
"
gs4c4tcz,Perfect Diamond,Spocoman,Python,Sunday 1st of October 2023 10:28:41 AM CDT,"n = int(input())

for i in range(n):
    print(' ' * (n - (i + 1)) + '*' + ""-*"" * i)

for i in range(n - 2, -1, -1):
    print(' ' * (n - (i + 1)) + '*' + ""-*"" * i)
"
CFBf2dmL,Untitled,remico,JavaScript,Sunday 1st of October 2023 10:20:04 AM CDT,"function oscars (inputArray){
let actorNameInput = inputArray [0];
let academiPoints = Number (inputArray [1]); //205
let juryCountInput = Number (inputArray [2]);//4

for (let i = 3; i < juryCountInput ; i +=2){ 
    let juryName = inputArray [i];
    let juryPoints = Number (inputArray [i +1]);
    let poinsWon = juryName.length * juryPoints / 2;
    academiPoints += poinsWon

    
    if  (academiPoints > 1250.50){
        console.log (`Congratulations, ${actorNameInput} got a nominee for leading role with ${academiPoints.toFixed(1)}!`);
        break;
    }
    if (academiPoints <= 1250.50) {
        let pointsNeeded = 1250.50 - academiPoints;
        console.log (`Sorry, ${actorNameInput} you need ${pointsNeeded.toFixed(1)} more!`);
    }  
}
}
//oscars ([""Zahari Baharov"",""205"",""4"",""Johnny Depp"",""45"",""Will Smith"",""29"",""Jet Lee"",""10"",""Matthew Mcconaughey"",""39""]);"
TQVnVA3h,First Impression,circlejourney,HTML 5,Sunday 1st of October 2023 10:18:18 AM CDT,"<!-- 
    First Impression snippet by Circlejourney. See my codes here:
    https://toyhou.se/orchestrator/characters/folder:524040
    
    Placeholders (use Ctrl + F to replace):
        Outline colour: #cfcfcf
        Text shadow colour: #ddd
        Text highlight colour: #eee
        FA accent icon: fa-umbrella-beach
-->

<div class=""row no-gutters rounded"" style=""overflow: hidden; border: 3px solid #cfcfcf; background: #cfcfcf; position: relative;"">
    <div class=""col-12 col-md-6 d-flex"" style=""border: 3px solid #cfcfcf; height: 400px;"">
        
        <!-- Replace background-image URL to change first image -->
        <div id=""SLICE-1""
            style=""background-image: url(https://i.postimg.cc/150pr270/1130.png);
                background-size: cover;
                background-position: 20%;
                width: 200px;""
            class=""flex-grow-1 rounded-left""></div>
        
        <!-- Replace background-image URL to change second image -->
        <div id=""SLICE-2""
            style=""background-image: url(https://i.postimg.cc/bvV02nCK/s-a12-Cb12-Cc12-Cd12-Ce0f0g64h0-C282-C183748-EF6560-E69-A7-CD8-BA98-DAD0-AAi-C.png);
                background-size: cover;
                width: 200px;
                clip-path: polygon(0 0, 100% 0%, 100% 100%, 60px 100%);
                margin-left: -60px;""
            class=""flex-grow-1""></div>
            
    </div>
    
    
    <div id=""NAME-BLOCK"" style=""width: 0;"" class=""col-12 col-md-auto flex-column justify-content-center align-items-center"">
        <div style=""color: #333; z-index: 3; text-shadow: -3px -3px 0 #eee, 0px -3px 0 #eee, 3px -3px 0 #eee, -3px 0px 0 #ddd, 0px 0px 0 #ddd, 3px 0px 0 #ddd, -3px 3px 0 #ddd, 0px 3px 0 #ddd, 3px 3px 0 #ddd; line-height: 0.4em;"" class=""display-2 font-weight-bold text-uppercase text-center font-italic"">
            Character
        </div>
        
        <!-- Replace src property below to change character portrait -->
        <img id=""PORTRAIT""
            src=""https://f2.toyhou.se/file/f2-toyhou-se/users/admin?9""
            class=""rounded-circle""
            style=""z-index: 2; max-width: none; width: 250px; height: 250px; border: 6px solid #cfcfcf;"">
        
        <div class=""display-2 font-weight-bold text-uppercase text-center font-italic"" style=""color: #333; z-index: 3; text-shadow:  -3px -3px 0 #eee, 0px -3px 0 #eee, 3px -3px 0 #eee, -3px 0px 0 #ddd, 0px 0px 0 #ddd, 3px 0px 0 #ddd, -3px 3px 0 #ddd, 0px 3px 0 #ddd, 3px 3px 0 #ddd; line-height: 0em;"">
            Name
        </div>
    </div>
    
    
    <div class=""col-12 col-md-6 d-flex"" style=""border: 3px solid #cfcfcf; height: 400px;"">
        
        <!-- Replace background-image URL to change third image -->
        <div id=""SLICE-3""
            style=""background-image: url(https://i.postimg.cc/hvTVw5DB/s-a12-Cb12-Cc12-Cd12-Ce0f0g64h-EFF2-E2-E4-E1-C4-DECEAEDDB79-DABDBF3i-B5.png);
                background-size: cover;
                position: left;
                width: 200px;
                margin-right: -60px;""
            data-toggle=""tooltip""
            title=""Tooltip text 1""
            class=""flex-grow-1"" ></div>
            
        <!-- Replace background-image URL to change fourth image -->
        <div id=""SLICE-4""
            style=""background-image: url(https://i.postimg.cc/ZR98PqX0/s-a12-Cb12-Cc12-Cd12-Ce0f0g64h162136193649-E79799-E3-B2-A3-E3-CAB3-E8-DFC8i85.png);   
                background-size: cover;
                background-position: top;
                width: 200px;
                clip-path: polygon(60px 0, 100% 0%, 100% 100%, 0 100%);""
            data-toggle=""tooltip""
            title=""Tooltip text 2""
            class=""flex-grow-1 rounded-right""></div>
    </div>
    
    <div id=""CORNER-ICON"" style=""position: absolute; z-index: 2; font-size: 150pt; bottom: -5%; right: -3%; color: #cfcfcf; line-height: 1em;"">
        <i class=""fa-thin fa-fw fa-umbrella-beach""></i>
    </div>
    
</div>

<div id=""CREDIT"" style=""z-index: 3; font-size: 9pt; opacity: 0.5;"">
    <a href=""https://toyhou.se/~forums/16.htmlcss-graphics/75580.circlejourney-s-code-creations-free-""><i class=""fa fa-code""></i> Snippet by Circlejourney</a>
</div>"
n1vtDSaW,MOK layout Batang Arab,dksetiavan,YAML,Sunday 1st of October 2023 09:52:09 AM CDT,"{
""title"":""Batang Arab"",
""onScreen"":{
""main"":[
""١٢٣٤٥٦٧٨٩٠"",
""ڠورتيَُِف"",
""اسدْغهکل"",
""[SHIFT][MC:َٕ][MC:ُو]بنم[DEL]"",
""[TOOL][ALTGR:،][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""﷽ﷻﷺﷸﷷﷶﷵﷴﷳﷲ"",
""عةظطئًٌٍث"",
""ءشذّجحخل"",
""[SHIFT]ـٕصضـ[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""sym"":[
""!@#$۞٪&*)(۝"",
""]}{\/_-=|+۩["",
""~؎﷼£¥€:؛'ʺ٭"",
""[SHIFT]؟…؏؞«»,.?[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""altGr"":[
""1234567890"",
"">‎‏‭‮‬‪‫ <"",
""°•ىـ−ٱۤ،﴾﴿;"",
""[SHIFT]ٰٖٜٗ؍٫٬‐۔[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
uZNNuUW7,Perfect Diamond,Spocoman,JavaScript,Sunday 1st of October 2023 09:47:29 AM CDT,"function perfectDiamond(input) {
    let n = Number(input);

   for (let i = 0; i <n; i++) {
    console.log("" "".repeat(n - (i + 1)) + '*' + ""-*"".repeat(i));
    }
 
    for (let i = n - 2; i >= 0; i--) {
        console.log("" "".repeat(n - (i + 1)) + '*' + ""-*"".repeat(i));
    }

    return;
}"
PQdUmc2V,shared.module.ts,donev,TypeScript,Sunday 1st of October 2023 09:37:18 AM CDT,"import { NgModule } from '@angular/core';

import { PrimeNgModule } from './prime-ng/prime-ng.module';
import { ComponentsModule } from './components/components.module';
import { DirectivesModule } from './directives/directives.module';

@NgModule({
  imports: [PrimeNgModule, ComponentsModule, DirectivesModule],
  exports: [PrimeNgModule, ComponentsModule, DirectivesModule],
})
export class SharedModule {}"
pf0EJsBF,directives.module.ts,donev,TypeScript,Sunday 1st of October 2023 09:36:17 AM CDT,"import { NgModule } from '@angular/core';

import { ImageErrorHandlerDirective } from './image-error-handler.directive';
import { SvgIconDirective } from './svg-icon.directive';

@NgModule({
  declarations: [ImageErrorHandlerDirective, SvgIconDirective],
  exports: [ImageErrorHandlerDirective, SvgIconDirective],
})
export class DirectivesModule {}"
iwmEC4CH,directive.ts,donev,JavaScript,Sunday 1st of October 2023 09:35:09 AM CDT,"import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';

@Directive({
  selector: '[svg-icon]',
})
export class SvgIconDirective {
  @Input() svgName!: string;
  @Input() svgWidth: string = '30';
  @Input() svgHeight: string = 'auto';
  @Input() svgColor: string = 'black';

  constructor(private el: ElementRef, private renderer: Renderer2) {}

  ngOnInit(): void {
    const svgFilePath = `assets/svg/${this.svgName}.svg`;

    fetch(svgFilePath)
      .then((response) => response.text())
      .then((svgData) => {
        const parser = new DOMParser();
        const svgElement = parser.parseFromString(
          svgData,
          'image/svg+xml'
        ).documentElement;

        svgElement.setAttribute('width', this.svgWidth);
        svgElement.setAttribute('height', this.svgHeight);

        this.renderer.setStyle(svgElement, 'fill', this.svgColor);
        this.renderer.appendChild(this.el.nativeElement, svgElement);
      });
  }
}"
ZvqrnTAM,Perfect Diamond,Spocoman,C++,Sunday 1st of October 2023 09:32:40 AM CDT,"#include <iostream>

using namespace std;

string repeat(string s, int n) {
    string result;
    for (int i = 0; i < n; i++) {
        result += s;
    }
    return result;
}

int main() {
    int n;
    cin >> n;
    
    for (int i = 0; i < n; i++) {
        cout << repeat("" "", (n - (i + 1))) + '*' + repeat(""-*"", i) << endl;
    }

    for (int i = n - 2; i >= 0; i--) {
        cout << repeat("" "", (n - (i + 1))) + '*' + repeat(""-*"", i) << endl;
    }

    return 0;
}"
eB9LwtPn,Untitled,remico,JavaScript,Sunday 1st of October 2023 09:25:35 AM CDT,"function tennisRanklist (input) {
    let tournamentCount = Number (input[0]);//5
    let startingPoints = Number (input[1]);//1400
    let allPoints =startingPoints + 0;
    let averagePointTournir = 0;
    let averageTotal = averagePointTournir/5;
    let allWins = 0;
    let percentWins = (allWins / 5)* 100;


    for ( let i =2; i<= tournamentCount; i++){
        if (input = ""W""){
            allPoints +=2000;
            averagePointTournir+=2000
            allWins +=1;
        }else if (input =""F""){
            allPoints +=1200;
            averagePointTournir +=1200;
        }else if (input =""SF""){
            allPoints +=720;
            averagePointTournir +=720;
        }
                
    }
        console.log (`Final points: ${allPoints}`);
        console.log (`Average point ${averageTotal}`);
        console.log (`${percentWins}%`);
    }
    //tennisRanklist ([""5"",""1400"",""F"",""SF"",""W"",""W"",""SF""]);"
Buz4gJbq,Untitled,remico,JavaScript,Sunday 1st of October 2023 09:22:47 AM CDT,"function oscars (inputArray){
let actorNameInput = inputArray [0];
let startingPointsInput = Number (inputArray [1]); //205
let juryCountInput = Number (inputArray [2]);//4

let allPoints =0;

for (let i = 3; i < juryCountInput ; i ++){ 
    let juryName = inputArray [i + 2];
    let juryPoints = Number (inputArray [i + 3]);
    let totalJuryPoints = startingPointsInput + (juryName.length) * juryPoints / 2;
    allPoints =  Math.abs(1250.5 - totalJuryPoints);
    if  (allPoints > 1250.50){
        console.log (`Congratulations, ${actorNameInput} got a nominee for leading role with ${allPoints}!`);
        break;
    }else {
        console.log (`Sorry, ${actorNameInput} you need ${allPoints} more!`);
    }  
}
}
//oscars ([""Zahari Baharov"",""205"",""4"",""Johnny Depp"",""45"",""Will Smith"",""29"",""Jet Lee"",""10"",""Matthew Mcconaughey"",""39""]);"
yXk0YqEU,Perfect Diamond,Spocoman,C#,Sunday 1st of October 2023 09:22:44 AM CDT,"using System;

namespace PerfectDiamond
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());

            for (int i = 1; i <= n; i++)
            {
                Console.Write(new string(' ', n - i) + '*');
                for (int j = 1; j < i; j++)
                {
                    Console.Write(""-*"");
                }
                Console.WriteLine();
            }

            for (int i = 1; i < n; i++)
            {
                Console.Write(new string(' ', i) + '*');
                for (int j = n - 2; j >= i; j--)
                {
                    Console.Write(""-*"");
                }
                Console.WriteLine();
            }
        }
    }
}

Решение със StringBuilder():

using System;
using System.Text;

namespace PerfectDiamond
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());

            for (int i = 0; i < n; i++)
            {
                Console.WriteLine(new string(' ', n - (i + 1)) + '*' + new StringBuilder().Insert(0, ""-*"", i));
            }

            for (int i = n - 2; i >= 0; i--)
            {
                Console.WriteLine(new string(' ', n - (i + 1)) + '*' + new StringBuilder().Insert(0, ""-*"", i));
            }
        }
    }
}"
sZcfk2m2,MOK layout Maguindanao,dksetiavan,YAML,Sunday 1st of October 2023 09:16:48 AM CDT,"{
""title"":""Maguindanao"",
""onScreen"":{
""main"":[
""١٢٣٤٥٦٧٨٩٠"",
""قویرتيَُِڤ"",
""اسدفݢهجکل"",
""[SHIFT]زڠْبنم[DEL]"",
""[TOOL][ALTGR:،][SPACE][][][SYM:.][ENTER]""
],

""shifted"":[
""﷽ﷻﷺﷸﷷﷶﷵﷴﷳﷲ"",
""صضـظطئًٌٍث"",
""ءشذفغحخکل"",
""[SHIFT]ةعّبنم[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""sym"":[
""!@#$۞٪&*)(۝"",
""]}{\/_-=|+۩["",
""~؎﷼£¥€:؛'ʺ٭"",
""[SHIFT]؟…؏؞«»,.?[DEL]"",
""[LOCK][ALTGR:‍][SPACE][][][SYM:‌][ENTER]""
],

""altGr"":[
""1234567890"",
"">‎‏‭‮‬‪‫ <"",
""°•ىـ−ٱۤ،﴾﴿;"",
""[SHIFT]ٰٖٜٗ؍٫٬‐۔[DEL]"",
""[LOCK][ALTGR:,][SPACE][][][SYM:.][ENTER]""
]}}
    "
fwAmsFcN,How to buy fake NHL Stenden diploma?,jf123123,C,Sunday 1st of October 2023 09:04:31 AM CDT,"How to buy fake NHL Stenden diploma? How do I buy a fake Stenden University of Applied Sciences degree certificate? Get a fake Stenden University of Applied Sciences certificate online. Stenden University of Applied Sciences is a state-funded professional university in the north of the Netherlands. The University is the product of the merger in 2008 of Hogeschool Drenthe and Christelijke Hogeschool Nederland. Stenden University of Applied Sciences has more than 11,000 students. How to order fake Hanze University of Applied Sciences diploma?

Stenden University offers a variety of bachelor’s and master’s degree programs in fields such as business, hospitality, tourism, media, technology, and education. It offers a wide range of applied sciences programs to students from all over the world.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com"
5Ts5dsRR,Escape sequence,Rakib6k-,Java,Sunday 1st of October 2023 09:02:49 AM CDT,"class Hello {
    public static void main(String[] args) {
        System.out.println(""Hello,\nHi!"");
    }
}"
