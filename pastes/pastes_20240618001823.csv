id,title,username,language,date,content
mP7iGANV,2024-06-17_stats.json,rdp_snitch,JSON,Monday 17th of June 2024 07:16:19 PM CDT,"{
  ""ip"": {
    ""180.93.172.29"": 2,
    ""104.248.154.46"": 36,
    ""223.166.31.100"": 4,
    ""149.34.246.34"": 2,
    ""159.203.164.232"": 2,
    ""81.19.135.157"": 2,
    ""198.235.24.82"": 6,
    ""64.124.50.139"": 4,
    ""103.121.74.4"": 4,
    ""60.255.174.158"": 2,
    ""138.197.162.167"": 6,
    ""187.157.89.218"": 2,
    ""185.170.144.3"": 4,
    ""167.94.138.36"": 2,
    ""194.165.16.11"": 4,
    ""45.227.254.49"": 4,
    ""117.24.12.217"": 2,
    ""66.115.149.56"": 2,
    ""66.115.149.94"": 2,
    ""195.154.56.68"": 2,
    ""205.210.31.44"": 6,
    ""91.238.181.71"": 4,
    ""39.109.113.135"": 1562,
    ""213.109.202.238"": 12,
    ""152.32.249.95"": 2,
    ""81.19.135.2"": 6,
    ""147.185.132.243"": 6,
    ""45.140.17.52"": 2,
    ""87.251.75.64"": 2,
    ""158.51.14.114"": 4,
    ""152.32.149.246"": 2,
    ""167.172.81.188"": 2,
    ""103.145.58.228"": 2,
    ""194.165.16.37"": 4,
    ""194.165.16.73"": 4,
    ""147.185.132.106"": 6,
    ""152.89.198.99"": 4
  },
  ""asn"": {
    ""AS135944"": 2,
    ""AS14061"": 46,
    ""AS17621"": 4,
    ""AS212238"": 2,
    ""AS209588"": 8,
    ""AS396982"": 24,
    ""AS6461"": 4,
    ""AS134886"": 4,
    ""AS4837"": 2,
    ""AS8151"": 2,
    ""AS197414"": 4,
    ""AS398324"": 2,
    ""AS48721"": 12,
    ""AS267784"": 4,
    ""AS133776"": 2,
    ""AS46562"": 4,
    ""AS12876"": 2,
    ""AS49434"": 4,
    ""AS142403"": 1562,
    ""AS208312"": 12,
    ""AS135377"": 4,
    ""AS198953"": 2,
    ""AS208091"": 2,
    ""AS398465"": 4,
    ""AS997"": 2,
    ""AS57523"": 4
  },
  ""isp"": {
    ""SPT"": 2,
    ""DigitalOcean, LLC"": 46,
    ""China Unicom Shanghai Province Network"": 4,
    ""Datacamp Limited"": 2,
    ""Flyservers S.A."": 24,
    ""Google LLC"": 24,
    ""Zayo Bandwidth"": 4,
    ""Super Sonic Broadband Pvt. Ltd"": 4,
    ""China Unicom China169 Network"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""Xhost Internet Solutions LP"": 6,
    ""Censys, Inc."": 2,
    ""Quanzhou"": 2,
    ""Performive LLC"": 4,
    ""Online SAS"": 2,
    ""Datacenter location PAR1 France"": 4,
    ""Yisu Cloud LTD"": 1562,
    ""Red Byte LLC"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Proton66 OOO"": 2,
    ""Rackdog, LLC"": 4,
    ""23 Tai Seng Drive Singapore"": 2,
    ""Chang Way Technologies Co. Limited"": 4
  },
  ""org"": {
    ""Saigon Postel Corporation"": 2,
    ""DigitalOcean, LLC"": 44,
    ""Unknown"": 8,
    ""Datacamp Limited"": 2,
    ""Digital Ocean"": 2,
    ""Alviva Holding Limited"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Microsoft Corporation"": 4,
    ""Super Sonic Broadband Pvt Ltd"": 4,
    ""SiChuan Cable TV Network CO., LTD"": 2,
    ""Uninet S.A. de C.V."": 2,
    ""Xhostis"": 4,
    ""Censys, Inc"": 2,
    ""Flyservers S.A"": 12,
    ""UAB Host Baltic"": 4,
    ""Chinanet FJ"": 2,
    ""Total server solutions LLC"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Yisu Cloud LTD"": 1562,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Ucloud Information Technology (hk) Limited"": 4,
    ""Proton66 LLC"": 2,
    ""Xhost Internet Solutions"": 2,
    ""AB E-Commerce, LLC"": 4,
    ""Starcrecium Limited"": 4
  },
  ""regionName"": {
    ""Ho Chi Minh"": 4,
    ""Central Singapore"": 36,
    ""Shanghai"": 4,
    ""Hesse"": 10,
    ""New Jersey"": 2,
    ""California"": 24,
    ""Washington"": 8,
    ""Maharashtra"": 4,
    ""Sichuan"": 2,
    ""Ontario"": 6,
    ""Mexico City"": 2,
    ""North Holland"": 6,
    ""Michigan"": 2,
    ""Kaunas"": 12,
    ""Vilnius"": 4,
    ""Fujian"": 2,
    ""Grand Est"": 2,
    ""\u00cele-de-France"": 4,
    ""Tsuen Wan District"": 1562,
    ""Moscow"": 18,
    ""Illinois"": 4,
    ""Virginia"": 2,
    ""South West"": 2,
    ""North West"": 2
  },
  ""country"": {
    ""Vietnam"": 4,
    ""Singapore"": 40,
    ""China"": 8,
    ""Germany"": 10,
    ""United States"": 42,
    ""India"": 4,
    ""Canada"": 6,
    ""Mexico"": 2,
    ""The Netherlands"": 6,
    ""Lithuania"": 16,
    ""France"": 6,
    ""Hong Kong"": 1562,
    ""Russia"": 18
  },
  ""account"": {
    ""hello"": 58,
    ""(empty)"": 10,
    ""Test"": 38,
    ""Administr"": 14,
    ""ucyEmAVAb"": 2,
    ""kHunBW"": 2,
    ""VwVWWq"": 2,
    ""bvNEPsAeh"": 2,
    ""WENDIR"": 2,
    ""aGkkdM"": 2,
    ""3586682873"": 1562,
    ""Domain"": 14,
    ""Administrator"": 4,
    ""wbyLNNrFo"": 2,
    ""QuBfLD"": 2,
    ""oVimxK"": 2,
    ""zpSbkvSZN"": 2,
    ""zgqXgd"": 2,
    ""WTGYeW"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1724
  },
  ""client_build"": {
    ""Unknown"": 1724
  },
  ""client_name"": {
    ""Unknown"": 1724
  },
  ""ip_type"": {
    ""mobile"": 2,
    ""hosting"": 76,
    ""Unknown"": 1616,
    ""hosting & proxy"": 10,
    ""proxy"": 20
  }
}"
qcxscdEV,🤑G2A.com Free Gift Card FIX June 2024🤑,PetrikDev,JavaScript,Monday 17th of June 2024 07:16:16 PM CDT,"G2A.com complimentary gift card & games guide.
Any gift card for free on G2A.com including Amazon gift cards & anything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
y1yLTqa3,2024-06-17_stats.json,rdp_snitch,JSON,Monday 17th of June 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""180.93.172.29"": 1,
    ""104.248.154.46"": 18,
    ""223.166.31.100"": 2,
    ""149.34.246.34"": 1,
    ""159.203.164.232"": 1,
    ""81.19.135.157"": 1,
    ""198.235.24.82"": 3,
    ""64.124.50.139"": 2,
    ""103.121.74.4"": 2,
    ""60.255.174.158"": 1,
    ""138.197.162.167"": 3,
    ""187.157.89.218"": 1,
    ""185.170.144.3"": 2,
    ""167.94.138.36"": 1,
    ""194.165.16.11"": 2,
    ""45.227.254.49"": 2,
    ""117.24.12.217"": 1,
    ""66.115.149.56"": 1,
    ""66.115.149.94"": 1,
    ""195.154.56.68"": 1,
    ""205.210.31.44"": 3,
    ""91.238.181.71"": 2,
    ""39.109.113.135"": 781,
    ""213.109.202.238"": 6,
    ""152.32.249.95"": 1,
    ""81.19.135.2"": 3,
    ""147.185.132.243"": 3,
    ""45.140.17.52"": 1,
    ""87.251.75.64"": 1,
    ""158.51.14.114"": 2,
    ""152.32.149.246"": 1,
    ""167.172.81.188"": 1,
    ""103.145.58.228"": 1,
    ""194.165.16.37"": 2,
    ""194.165.16.73"": 2,
    ""147.185.132.106"": 3,
    ""152.89.198.99"": 2
  },
  ""asn"": {
    ""AS135944"": 1,
    ""AS14061"": 23,
    ""AS17621"": 2,
    ""AS212238"": 1,
    ""AS209588"": 4,
    ""AS396982"": 12,
    ""AS6461"": 2,
    ""AS134886"": 2,
    ""AS4837"": 1,
    ""AS8151"": 1,
    ""AS197414"": 2,
    ""AS398324"": 1,
    ""AS48721"": 6,
    ""AS267784"": 2,
    ""AS133776"": 1,
    ""AS46562"": 2,
    ""AS12876"": 1,
    ""AS49434"": 2,
    ""AS142403"": 781,
    ""AS208312"": 6,
    ""AS135377"": 2,
    ""AS198953"": 1,
    ""AS208091"": 1,
    ""AS398465"": 2,
    ""AS997"": 1,
    ""AS57523"": 2
  },
  ""isp"": {
    ""SPT"": 1,
    ""DigitalOcean, LLC"": 23,
    ""China Unicom Shanghai Province Network"": 2,
    ""Datacamp Limited"": 1,
    ""Flyservers S.A."": 12,
    ""Google LLC"": 12,
    ""Zayo Bandwidth"": 2,
    ""Super Sonic Broadband Pvt. Ltd"": 2,
    ""China Unicom China169 Network"": 1,
    ""Uninet S.A. de C.V."": 1,
    ""Xhost Internet Solutions LP"": 3,
    ""Censys, Inc."": 1,
    ""Quanzhou"": 1,
    ""Performive LLC"": 2,
    ""Online SAS"": 1,
    ""Datacenter location PAR1 France"": 2,
    ""Yisu Cloud LTD"": 781,
    ""Red Byte LLC"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Proton66 OOO"": 1,
    ""Rackdog, LLC"": 2,
    ""23 Tai Seng Drive Singapore"": 1,
    ""Chang Way Technologies Co. Limited"": 2
  },
  ""org"": {
    ""Saigon Postel Corporation"": 1,
    ""DigitalOcean, LLC"": 22,
    ""Unknown"": 4,
    ""Datacamp Limited"": 1,
    ""Digital Ocean"": 1,
    ""Alviva Holding Limited"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Microsoft Corporation"": 2,
    ""Super Sonic Broadband Pvt Ltd"": 2,
    ""SiChuan Cable TV Network CO., LTD"": 1,
    ""Uninet S.A. de C.V."": 1,
    ""Xhostis"": 2,
    ""Censys, Inc"": 1,
    ""Flyservers S.A"": 6,
    ""UAB Host Baltic"": 2,
    ""Chinanet FJ"": 1,
    ""Total server solutions LLC"": 2,
    ""ThinkTech Technology Industrial CO. Limited"": 2,
    ""Yisu Cloud LTD"": 781,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Proton66 LLC"": 1,
    ""Xhost Internet Solutions"": 1,
    ""AB E-Commerce, LLC"": 2,
    ""Starcrecium Limited"": 2
  },
  ""regionName"": {
    ""Ho Chi Minh"": 2,
    ""Central Singapore"": 18,
    ""Shanghai"": 2,
    ""Hesse"": 5,
    ""New Jersey"": 1,
    ""California"": 12,
    ""Washington"": 4,
    ""Maharashtra"": 2,
    ""Sichuan"": 1,
    ""Ontario"": 3,
    ""Mexico City"": 1,
    ""North Holland"": 3,
    ""Michigan"": 1,
    ""Kaunas"": 6,
    ""Vilnius"": 2,
    ""Fujian"": 1,
    ""Grand Est"": 1,
    ""\u00cele-de-France"": 2,
    ""Tsuen Wan District"": 781,
    ""Moscow"": 9,
    ""Illinois"": 2,
    ""Virginia"": 1,
    ""South West"": 1,
    ""North West"": 1
  },
  ""country"": {
    ""Vietnam"": 2,
    ""Singapore"": 20,
    ""China"": 4,
    ""Germany"": 5,
    ""United States"": 21,
    ""India"": 2,
    ""Canada"": 3,
    ""Mexico"": 1,
    ""The Netherlands"": 3,
    ""Lithuania"": 8,
    ""France"": 3,
    ""Hong Kong"": 781,
    ""Russia"": 9
  },
  ""account"": {
    ""hello"": 29,
    ""(empty)"": 5,
    ""Test"": 19,
    ""Administr"": 7,
    ""ucyEmAVAb"": 1,
    ""kHunBW"": 1,
    ""VwVWWq"": 1,
    ""bvNEPsAeh"": 1,
    ""WENDIR"": 1,
    ""aGkkdM"": 1,
    ""3586682873"": 781,
    ""Domain"": 7,
    ""Administrator"": 2,
    ""wbyLNNrFo"": 1,
    ""QuBfLD"": 1,
    ""oVimxK"": 1,
    ""zpSbkvSZN"": 1,
    ""zgqXgd"": 1,
    ""WTGYeW"": 1
  },
  ""keyboard"": {
    ""Unknown"": 862
  },
  ""client_build"": {
    ""Unknown"": 862
  },
  ""client_name"": {
    ""Unknown"": 862
  },
  ""ip_type"": {
    ""mobile"": 1,
    ""hosting"": 38,
    ""Unknown"": 808,
    ""hosting & proxy"": 5,
    ""proxy"": 10
  }
}"
LT7FQFC2,🤑G2A.com Free Gift Card FIX June 2024🎁,x3kiN,JavaScript,Monday 17th of June 2024 07:10:15 PM CDT,"G2A.com free voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
HW7Nzu5i,🤑G2A.com Free Gift Card FIX June 2024🎁,FeasModz514,JavaScript,Monday 17th of June 2024 07:04:17 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any gift card for free on G2A.com including Steam gift cards & all else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
xiWZx4CH,🎁 G2A.COM FREE GIFT CARD GUIDE JUN 2024 V2 🎁,jusst2k4,GetText,Monday 17th of June 2024 07:03:29 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_233672.pdf
 
Working as of:
18 June 2024"
Jfkfkrfm,🤑G2A.com Free Gift Card FIX June 2024🎁,kiraezwhethe,JavaScript,Monday 17th of June 2024 06:58:20 PM CDT,"G2A.com free voucher & games guide.
Any voucher for free on G2A.com including Amazon gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
yVpdVU9e,🤑G2A.com Free Gift Card FIX June 2024🤑,ColtM4A2,JavaScript,Monday 17th of June 2024 06:52:19 PM CDT,"G2A.com free gift card & games guide.
Any item for free on G2A.com including Xbox gift cards & everything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
9MPi9nxu,elevatorScript,Downfire,Lua,Monday 17th of June 2024 06:51:25 PM CDT,"local elevatorNumber = 0
local floorNumber = 0 -- set Floor Number, start with top""0""
local rsSendSide = """"
local rsReceiveSide = """"
rednet.open(""top"") -- set side where endermodem is connected to computer

local isElevatorOnFloor = false


local basalt = require(""basalt"")
local monitor = peripheral.find(""monitor"")
monitor.setTextScale(0.5)

local protocol = (""Elevator %d""):format(elevatorNumber)

local mainFrame = basalt.createFrame() -- Computer mainFrame
local mainMonitorFrame = basalt.addMonitor() --Monitor mainFrame
mainMonitorFrame:setMonitor(monitor)

local elevatorPosiLabel = mainMonitorFrame:addLabel():setTextAlign(""center""):setSize(""parent.w"",""parent.h"")
local callButton = mainMonitorFrame:addButton():setSize(20,6):setPosition(""parent.w / 2 - 10"", ""parent.h / 2 - 3""):setText(""Call Elevator"")

callButton:onClick(function(self,event,button,x,y)
    if(event==""mouse_click"")and(button==1)then
        redstone.setOutput(rsSendSide, true)
        os.sleep(0.1)
        redstone.setOutput(rsSendSide, false)
    end
end)

local function broadcastRedstoneSignal()
    while true do
        isElevatorOnFloor = redstone.getInput(rsReceiveSide)
        if isElevatorOnFloor == true then
            rednet.broadcast(floorNumber, protocol)
        end
        os.sleep(0.5)
    end
end


local function readRednet()
    while true do
        local id, message = rednet.receive(protocol)
        elevatorPosiLabel:setText(tostring(message))
    end
end

mainFrame:addThread():start(broadcastRedstoneSignal)
mainFrame:addThread():start(readRednet)
basalt.autoUpdate()"
T0SPxLun,🤑G2A.com Free Gift Card FIX June 2024🤑,Skarface-MKL,JavaScript,Monday 17th of June 2024 06:46:19 PM CDT,"G2A.com complimentary voucher & games guide.
Any item for free on G2A.com including Xbox gift cards & all else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
zJjXrBPk,🤑G2A.com Free Gift Card FIX June 2024🤑,thepplayz,JavaScript,Monday 17th of June 2024 06:40:21 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any item for free on G2A.com including Amazon gift cards & everything else offered.
This is the most latest version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
RsKL2SS2,🤑G2A.com Free Gift Card FIX June 2024🎁,sirmikey,JavaScript,Monday 17th of June 2024 06:34:22 PM CDT,"G2A.com free gift card & gaming guide.
Any voucher for free on G2A.com including Xbox gift cards & anything else offered.
This is the most current version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17th 2024

"
EPw9MnGS,🤑G2A.com Free Gift Card FIX June 2024🎁,sayid83,JavaScript,Monday 17th of June 2024 06:28:15 PM CDT,"G2A.com free voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & everything else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
17th of June 2024

"
ZU8rJDYc,🤑G2A.com Free Gift Card FIX June 2024🤑,PetrikDev,JavaScript,Monday 17th of June 2024 06:22:18 PM CDT,"G2A.com complimentary voucher & gaming guide.
Any voucher for free on G2A.com including Playstation gift cards & all else offered.
This is the most up to date version of this script.

PDF guide here:
https://drive.google.com/file/d/1oScJEHt6q28O32jChlklUQU6fKtmP1mn/view?11648

Working as of:
June 17 2024

"
aNbya5Cp,Telegram Stripe Payment,vacendak,Python,Monday 17th of June 2024 06:09:52 PM CDT,"from telebot import types
import settings


def register_payments_command(bot):
    @bot.message_handler(commands=[""comprar""])
    def show_buy_button(message):
        keyboard = types.InlineKeyboardMarkup()
        buy_button = types.InlineKeyboardButton(""COMPRAR PARTICIPACIÓN"", callback_data=""comprar"")
        keyboard.add(buy_button)
        bot.send_message(message.chat.id, ""¿Quieres una participación?"", reply_markup=keyboard)

    @bot.callback_query_handler(func=lambda call: call.data == ""comprar"")
    def callback_buy(call):
        product_price = types.LabeledPrice(label=""Participación"", amount=500)
        bot.send_invoice(
            chat_id=call.message.chat.id,
            title=""Participación"",
            description=""Participación en el sorteo"",
            invoice_payload=""custom-paylooad-buy-product"",
            provider_token=settings.STRIPE_TEST_TOKEN,
            currency=""eur"",
            prices=[product_price],
            start_parameter=""product-purchase"",
        )

    @bot.pre_checkout_query_handler(func=lambda query: True)
    def checkout_process(pre_checkout_query):
        bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)

    @bot.message_handler(content_types=[""successful_payment""])
    def got_payment(message):
        bot.send_message(message.chat.id, ""Gracias por participar y suerte en el sorteo!"")
"
mDdBFuzG,🎁G2A.com Free Gift Card Guide June 2024 NEW🎁,ssss50w,GetText,Monday 17th of June 2024 05:54:07 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here;
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view

Working as of:
18 June 2024"
ivFh16n2,UI,Zekirooo,Lua,Monday 17th of June 2024 05:35:31 PM CDT,"local Library = {}

-- services
local players        = game:GetService(""Players"")
local tweenService   = game:GetService(""TweenService"")
local runService     = game:GetService(""RunService"")
local coreGui        = game:GetService(""CoreGui"")
local UIS            = game:GetService(""UserInputService"")

-- vars
local localplayer    = players.LocalPlayer
local mouse          = localplayer:GetMouse()
local tweenInfo      = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

function Library:validate(defaults, options)
    for i, v in pairs(defaults) do
        if options[i] == nil then
            options[i] = v
        end
    end
    return options
end

function Library:tween(object, goal, callback)
    local tween = tweenService:Create(object, tweenInfo, goal)
    tween.Completed:Connect(callback or function() end)
    tween:Play()
end

-- Main Library Start
function Library:Init(options)
    local options = options or {}
    options = self:validate({
        name = ""reality.new""
    }, options)

    local GUI = {
        CurrentTab = nil
    }

    -- Main
    local ScreenGui = Instance.new(""ScreenGui"")
    ScreenGui.Parent = coreGui
    ScreenGui.Name = options.name

    local Container1 = Instance.new(""Frame"")
    Container1.Parent = ScreenGui
    Container1.Size = UDim2.new(0, 750, 0, 480)
    Container1.AnchorPoint = Vector2.new(0.5, 0.5)
    Container1.Position = UDim2.new(0.5, -100, 0.5, -50)
    Container1.BackgroundColor3 = Color3.fromRGB(39, 39, 47)
    Container1.BorderSizePixel = 0
    Container1.Name = ""Container1""

    local stroke1 = Instance.new(""UIStroke"")
    stroke1.Thickness = 2
    stroke1.Color = Color3.fromRGB(60, 60, 70)
    stroke1.LineJoinMode = Enum.LineJoinMode.Miter
    stroke1.Parent = Container1
    stroke1.Name = ""stroke1""

    local Container2 = Instance.new(""Frame"")
    Container2.Parent = Container1
    Container2.Size = UDim2.new(0, 740, 0, 470)
    Container2.AnchorPoint = Vector2.new(0.5, 0.5)
    Container2.Position = UDim2.new(0.5, 0, 0.5, 0)
    Container2.BackgroundColor3 = Color3.fromRGB(23, 23, 30)
    Container2.BorderSizePixel = 0
    Container2.Name = ""Container2""

    local Container2Line = Instance.new(""Frame"")
    Container2Line.Parent = Container2
    Container2Line.Size = UDim2.new(1, -4, 0, 2)
    Container2Line.Position = UDim2.new(1, -2, 0, 4)
    Container2Line.AnchorPoint = Vector2.new(1, 1)
    Container2Line.BackgroundColor3 = Color3.fromRGB(206, 115, 136)
    Container2Line.BorderSizePixel = 0
    Container2Line.Name = ""Container2Line""

    local TabContainer = Instance.new(""Frame"")
    TabContainer.Parent = Container2
    TabContainer.Size = UDim2.new(0, 710, 0, 29)
    TabContainer.AnchorPoint = Vector2.new(0.5, 0.5)
    TabContainer.Position = UDim2.new(0.5, 0, 0.5, -203)
    TabContainer.BackgroundTransparency = 1
    TabContainer.BorderSizePixel = 0
    TabContainer.Name = ""TabContainer""
    
	local ContainerStroke = Instance.new(""UIStroke"")
	ContainerStroke.Thickness = 1.25
	ContainerStroke.Color = Color3.fromRGB(59, 59, 69)
	ContainerStroke.LineJoinMode = Enum.LineJoinMode.Miter
	ContainerStroke.Parent = TabContainer
	ContainerStroke.Name = ""TabStroke""

	local TabLayout = Instance.new(""UIListLayout"")
	TabLayout.Parent = TabContainer
	TabLayout.FillDirection = Enum.FillDirection.Horizontal
	TabLayout.VerticalAlignment = Enum.VerticalAlignment.Center
	TabLayout.Padding = UDim.new(0.0, 0)
	TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
	TabLayout.Name = ""TabLayout""

	local stroke2 = Instance.new(""UIStroke"")
	stroke2.Thickness = 1.25	
	stroke2.Color = Color3.fromRGB(59, 59, 69)
	stroke2.LineJoinMode = Enum.LineJoinMode.Miter
	stroke2.Parent = Container2
	stroke2.Name = ""stroke2""

	local Container3 = Instance.new(""Frame"")
	Container3.Parent = Container2
	Container3.Size = UDim2.new(0, 710, 0, 410)
    Container3.AnchorPoint = Vector2.new(.5,.5)
	Container3.Position = UDim2.new(.5, 0, .5, 19)
    Container3.BackgroundColor3 = Color3.fromRGB(32, 32, 38) 
    Container3.BorderSizePixel = 0
	Container3.Name = ""Container3""

	local stroke3 = Instance.new(""UIStroke"")
	stroke3.Thickness = 1.25
	stroke3.Color = Color3.fromRGB(61, 61, 76)
	stroke3.LineJoinMode = Enum.LineJoinMode.Miter
	stroke3.Parent = Container3
	stroke3.Name = ""stroke3""

	function GUI:AddTab(options)
		options = Library:validate({
			name = ""Preview"",
		}, options or {})

		local tab = {
			Hover = false,
			Active = false
		}

		local Tab = Instance.new(""Frame"")
		Tab.Parent = TabContainer
		Tab.Size = UDim2.new(1, 0, 1, 0)
		Tab.BackgroundColor3 = Color3.fromRGB(61, 61, 65) 
		Tab.BorderSizePixel = 0
		Tab.Name = options.name

		local UIGradient = Instance.new(""UIGradient"")
		UIGradient.Transparency = NumberSequence.new{
			NumberSequenceKeypoint.new(0.00, 0.00),
			NumberSequenceKeypoint.new(0.1, 0.50),
			NumberSequenceKeypoint.new(1.00, 1)
		}
		UIGradient.Rotation = 90 -- Verticle Gradient
		UIGradient.Parent = Tab
		
		local TabText = Instance.new(""TextLabel"")
		TabText.Parent = Tab
		TabText.Size = UDim2.new(1, 0, 1, 0)
		TabText.BackgroundTransparency = 1
		TabText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
		TabText.Text = options.name
		TabText.TextColor3 = Color3.fromRGB(200, 200, 200)
		TabText.TextSize = 14
		TabText.TextXAlignment = Enum.TextXAlignment.Center
		TabText.Name = ""TabText""

		local TabStroke = Instance.new(""UIStroke"")
		TabStroke.Thickness = 1
		TabStroke.Color = Color3.fromRGB(61, 61, 76)
		TabStroke.LineJoinMode = Enum.LineJoinMode.Miter
		TabStroke.Parent = Tab
		TabStroke.Name = ""TabStroke""

		local TabLine = Instance.new(""Frame"")
		TabLine.Parent = Tab
		TabLine.Size = UDim2.new(1, -4, 0, 2)
		TabLine.Position = UDim2.new(1, -2, 1, 0)
		TabLine.AnchorPoint = Vector2.new(1, 1)
		TabLine.BackgroundColor3 = Color3.fromRGB(206, 115, 136)
		TabLine.BackgroundTransparency = 1
		TabLine.BorderSizePixel = 0
		TabLine.Name = ""TabLine""

		local ContentContainer = Instance.new(""Frame"")
		ContentContainer.Parent = Container3
		ContentContainer.Size = UDim2.new(1,0,1,0)
		ContentContainer.AnchorPoint = Vector2.new(0,0)
		ContentContainer.Position = UDim2.new(0, 0, 0,0)
		ContentContainer.BackgroundColor3 = Color3.fromRGB(32, 32, 38) 
		ContentContainer.BorderSizePixel = 0
		ContentContainer.Active = false
		ContentContainer.Visible = false
		ContentContainer.Name = options.name
		ContentContainer.ZIndex = 2

		local LeftContainer = Instance.new(""Frame"")
		LeftContainer.Parent = ContentContainer
		LeftContainer.Visible = false
		LeftContainer.Size = UDim2.new(0,334,1,-5)
		LeftContainer.AnchorPoint = Vector2.new(0,0)
		LeftContainer.Position = UDim2.new(0, 10, 0,0)
		LeftContainer.BackgroundTransparency = 1
		LeftContainer.BorderSizePixel = 0
		LeftContainer.Name = ""LeftContainer""
		LeftContainer.ZIndex = 2

		local RightContainer = Instance.new(""Frame"")
		RightContainer.Parent = ContentContainer
		RightContainer.Visible = false
		RightContainer.Size = UDim2.new(0,334,1,-5)
		RightContainer.AnchorPoint = Vector2.new(1,0)
		RightContainer.Position = UDim2.new(1, -10, 0,0)
		RightContainer.BackgroundTransparency = 1
		RightContainer.BorderSizePixel = 0
		RightContainer.Name = ""RightContainer""
		RightContainer.ZIndex = 2

		-- Dynamic Tab Sizing  [ NEEDS IMPROVING ]
		do
			local tabCount = 0
			for _, tab in ipairs(TabContainer:GetChildren()) do
				if tab:IsA(""Frame"") then
					tabCount = tabCount + 1
				end
			end
			local finalValue = 710 / tabCount
			for _, tab in ipairs(TabContainer:GetChildren()) do
				if tab:IsA(""Frame"") then
					tab.Size = UDim2.new(0, finalValue, 1, 0)
				end
			end
		end

		-- Functionality
		do
			function tab:Activate()
				if not tab.Active then
					if GUI.CurrentTab ~= nil then
						tab:Deactivate()
					end

					tab.Active = true
					ContentContainer.Active = true
					ContentContainer.Visible = true
					LeftContainer.Visible = true
					RightContainer.Visible = true
					Library:tween(TabStroke, {Color = Color3.fromRGB(61, 61, 76)})
					Library:tween(TabLine, {BackgroundTransparency = 0})

					GUI.CurrentTab = Tab
				end
			end
			
			function tab:Deactivate()
				if tab.Active then

					tab.Active = false
					tab.Hover = false

					ContentContainer.Active = false
					ContentContainer.Visible = false

					LeftContainer.Visible = false
					RightContainer.Visible = false

					Library:tween(TabStroke, {Color = Color3.fromRGB(61, 61, 76)})
					Library:tween(TabLine, {BackgroundTransparency = 1})
				end
			end

			-- Logic
			Tab.MouseEnter:Connect(function()
				tab.Hover = true

				if not tab.Active then
					Library:tween(TabText, {TextColor3 = Color3.fromRGB(231, 231, 231)})
					Library:tween(TabLine, {BackgroundTransparency = 0})
				end
			end)	
		
			Tab.MouseLeave:Connect(function()
				tab.Hover = false

				if not tab.Active then
					Library:tween(TabText, {TextColor3 = Color3.fromRGB(200, 200, 200)})
					Library:tween(TabLine, {BackgroundTransparency = 1})
				end
			end)

			TabContainer.MouseEnter:Connect(function()
				tab.MouseInside = true
			end)	

			TabContainer.MouseLeave:Connect(function()
				tab.MouseInside = false
			end)	

			UIS.InputBegan:Connect(function(input,gpe)
				if gpe then return end

				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					if tab.Hover then
						tab:Activate()
					elseif tab.MouseInside then
						tab:Deactivate()
					end
				end
			end)

			if GUI.CurrentTab == nil then
				tab:Activate()
			end
		end

		local LeftHeight = {}
		local RightHeight = {}

		local NewPos = 0
		-- Sections
		function tab:AddSection(options)
			options = Library:validate({
				name = ""Preview"",
				side = ""Left"",
				height = ""300""
			}, options or {})

			local section = {}

			-- Calculate Section Position
			do
				if options.side == ""Left"" then
					if LeftHeight then
						if #LeftHeight > 0 then
							NewPos = LeftHeight[1] + 30
						else
							NewPos = 15
						end
					else
						NewPos = 15
					end
				else
					if RightHeight then
						if #RightHeight > 0 then
							NewPos = RightHeight[1] + 30
						else
							NewPos = 15
						end
					else
						NewPos = 15
					end
				end
			end

			local Section = Instance.new(""Frame"")
			Section.Size = UDim2.new(1,0,0,options.height)
			Section.AnchorPoint = Vector2.new(0,0)
			Section.BackgroundColor3 = Color3.fromRGB(27, 27, 34)
			Section.Position = UDim2.new(0, 0, 0, NewPos)
			Section.BorderSizePixel = 0
			Section.Name = options.name
			Section.ZIndex = 2

			-- handle side picking
			if options.side == ""Right"" then
				Section.Parent = RightContainer
				table.insert(RightHeight, Section.Size.Y.Offset)
			else
				Section.Parent = LeftContainer
				table.insert(LeftHeight, Section.Size.Y.Offset)
			end

			local SectionText = Instance.new(""TextLabel"")
			SectionText.Parent = Section
			SectionText.Size = UDim2.new(0, 0, 0, 1)
			SectionText.Position = UDim2.new(0, 30, 0, -2)
			SectionText.AnchorPoint = Vector2.new(1,0)
			SectionText.BackgroundTransparency = 1
			SectionText.TextXAlignment = Enum.TextXAlignment.Left
			SectionText.FontFace = Font.fromId(12187362578, Enum.FontWeight.SemiBold)
			SectionText.Text = options.name
			SectionText.TextColor3 = Color3.fromRGB(200, 200, 200)
			SectionText.TextSize = 13	
			SectionText.Name = ""SectionText""
			SectionText.ZIndex = 3

			local Size = SectionText.TextBounds.X + 20
			local LineSize = Size / -1

			local SectionLine = Instance.new(""Frame"")
			SectionLine.Parent = Section
			SectionLine.Size = UDim2.new(0, LineSize, 0, 1)
			SectionLine.Position = UDim2.new(0, 20, 0, -1)
			SectionLine.AnchorPoint = Vector2.new(1, 0)
			SectionLine.BackgroundColor3 = Color3.fromRGB(27, 27, 34)
			SectionLine.BackgroundTransparency = 0
			SectionLine.BorderSizePixel = 0
			SectionLine.Name = ""SectionLine""
			SectionLine.ZIndex = 2

			local UIStroke = Instance.new(""UIStroke"")
			UIStroke.Thickness = 1
			UIStroke.Color = Color3.fromRGB(49, 49, 56)
			UIStroke.LineJoinMode = Enum.LineJoinMode.Miter
			UIStroke.Parent = Section
			UIStroke.Name = ""UIStroke""

			local SubContainer = Instance.new(""Frame"")
			SubContainer.Parent = Section
			SubContainer.Size = UDim2.new(0, 304, 0, 30)
			SubContainer.AnchorPoint = Vector2.new(0,0)
			SubContainer.Position = UDim2.new(0, 15, 0, 10)
			SubContainer.BackgroundColor3 = Color3.fromRGB(23, 23, 30)
			SubContainer.BackgroundTransparency = 1
			SubContainer.BorderSizePixel = 0
			SubContainer.Name = ""SubContainer""
			SubContainer.ZIndex = 3
			SubContainer.Active = true

			local SectionTabLayout = Instance.new(""UIListLayout"")
			SectionTabLayout.Parent = SubContainer
			SectionTabLayout.FillDirection = Enum.FillDirection.Horizontal
			SectionTabLayout.VerticalAlignment = Enum.VerticalAlignment.Center
			SectionTabLayout.Padding = UDim.new(0.0, 0)
			SectionTabLayout.SortOrder = Enum.SortOrder.LayoutOrder
			SectionTabLayout.Name = ""SectionTabLayout""

			local SectionContentContainer = Instance.new(""Frame"")
			SectionContentContainer.Parent = Section
			SectionContentContainer.Size = UDim2.new(1,-80,1,-30)
			SectionContentContainer.AnchorPoint = Vector2.new(0,0)
			SectionContentContainer.Position = UDim2.new(0, 40, 0,15)
			SectionContentContainer.BackgroundTransparency = 1
			SectionContentContainer.BorderSizePixel = 0
			SectionContentContainer.Name = ""SectionContentContainer""
			SectionContentContainer.ZIndex = 3

			local SectionContentLayout = Instance.new(""UIListLayout"")
			SectionContentLayout.Parent = SectionContentContainer
			SectionContentLayout.FillDirection = Enum.FillDirection.Vertical
			SectionContentLayout.VerticalAlignment = Enum.VerticalAlignment.Top
			SectionContentLayout.Padding = UDim.new(0, 8)
			SectionContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
			SectionContentLayout.Name = ""ContentLayout""

			_G.TabsExist = false -- No tabs exist until section:AddTab is called

			function section:AddTab(options)
				options = Library:validate({
					name = ""Preview""
				}, options or {})

				local sectiontab = {
					Hover = false,
					Active = false
				}

				local TabGUI = {
					CurrentTab = nil
				}
				
				_G.TabsExist = true

				SubContainer.BackgroundTransparency = 0
				SectionContentContainer:Destroy()

				local SectionTab = Instance.new(""Frame"")
				SectionTab.Parent = SubContainer
				SectionTab.Size = UDim2.new(1, 0, 1, 0)
				SectionTab.BackgroundColor3 = Color3.fromRGB(61, 61, 65) 
				SectionTab.BorderSizePixel = 0
				SectionTab.Name = options.name
				SectionTab.ZIndex = 3
		
				local UIGradient = Instance.new(""UIGradient"")
				UIGradient.Transparency = NumberSequence.new{
					NumberSequenceKeypoint.new(0.00, 0.20),
					NumberSequenceKeypoint.new(0.4, 0.50),
					NumberSequenceKeypoint.new(1.00, 1)
				}
				UIGradient.Rotation = 90
				UIGradient.Parent = SectionTab
				
				local SectionTabText = Instance.new(""TextLabel"")
				SectionTabText.Parent = SectionTab
				SectionTabText.Size = UDim2.new(1, 0, 1, 0)
				SectionTabText.BackgroundTransparency = 1
				SectionTabText.Font = Enum.Font.Code
				SectionTabText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				SectionTabText.Text = options.name
				SectionTabText.TextColor3 = Color3.fromRGB(200, 200, 200)
				SectionTabText.TextSize = 14
				SectionTabText.TextXAlignment = Enum.TextXAlignment.Center
				SectionTabText.Name = ""SectionText""
				SectionTabText.ZIndex = 3
		
				local SectionTabStroke = Instance.new(""UIStroke"")
				SectionTabStroke.Thickness = 1
				SectionTabStroke.Color = Color3.fromRGB(61, 61, 76)
				SectionTabStroke.LineJoinMode = Enum.LineJoinMode.Miter
				SectionTabStroke.Parent = SectionTab
				SectionTabStroke.Name = ""SectionStroke""
		
				local SectionTabLine = Instance.new(""Frame"")
				SectionTabLine.Parent = SectionTab
				SectionTabLine.Size = UDim2.new(1, -4, 0, 2)
				SectionTabLine.Position = UDim2.new(1, -2, 1, 0)
				SectionTabLine.AnchorPoint = Vector2.new(1, 1)
				SectionTabLine.BackgroundColor3 = Color3.fromRGB(206, 115, 136)
				SectionTabLine.BackgroundTransparency = 1
				SectionTabLine.BorderSizePixel = 0
				SectionTabLine.Name = ""SectionLine""
				SectionTabLine.ZIndex = 3

				-- Calculate Tab Size To Fit
				do
					local tabCount = 0
					for _, sectiontab in ipairs(SubContainer:GetChildren()) do
						if sectiontab:IsA(""Frame"") then
							tabCount = tabCount + 1
						end
					end
					
					local finalValue = 304 / tabCount
					for _, sectiontab in ipairs(SubContainer:GetChildren()) do
						if sectiontab:IsA(""Frame"") then
							sectiontab.Size = UDim2.new(0, finalValue, 1, 0)
						end
					end
				end

				local TabContentContainer = Instance.new(""Frame"")
				TabContentContainer.Parent = Section
				TabContentContainer.Size = UDim2.new(1,-80,1,-60)
				TabContentContainer.AnchorPoint = Vector2.new(0,0)
				TabContentContainer.Position = UDim2.new(0, 40, 0,50)
				TabContentContainer.BackgroundTransparency = 1
				TabContentContainer.BorderSizePixel = 0
				TabContentContainer.Active = false
				TabContentContainer.Visible = false
				TabContentContainer.Name = ""TabContentContainer""
				TabContentContainer.ZIndex = 3

				_G.TabContentContainer = TabContentContainer

				-- Functionality
				do
					function sectiontab:Activate()
						if not sectiontab.Active then
							if TabGUI.CurrentTab ~= nil then
								sectiontab:Deactivate()
							end
					
							sectiontab.Active = true

							TabContentContainer.Active = true
							TabContentContainer.Visible = true

							Library:tween(SectionTabLine, {BackgroundTransparency = 0})
					
							TabGUI.CurrentTab = sectiontab
						end
					end

					function sectiontab:Deactivate()
						if sectiontab.Active then
					
							sectiontab.Active = false
							sectiontab.Hover = false
					
							TabContentContainer.Active = false
							TabContentContainer.Visible = false
					
							Library:tween(SectionTabLine, {BackgroundTransparency = 1})
						end
					end

					-- Logic
					SectionTab.MouseEnter:Connect(function()
						sectiontab.Hover = true

						if not sectiontab.Active then
							Library:tween(SectionTabText, {TextColor3 = Color3.fromRGB(231, 231, 231)})
							Library:tween(SectionTabLine, {BackgroundTransparency = 0})
						end
					end)
				
					SectionTab.MouseLeave:Connect(function()
						sectiontab.Hover = false

						if not sectiontab.Active then
							Library:tween(SectionTabText, {TextColor3 = Color3.fromRGB(200, 200, 200)})
							Library:tween(SectionTabLine, {BackgroundTransparency = 1})
						end
					end)

					SubContainer.MouseEnter:Connect(function()
						sectiontab.MouseInside = true
					end)
					
					SubContainer.MouseLeave:Connect(function()
						sectiontab.MouseInside = false
					end)

					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if sectiontab.Hover then
								sectiontab:Activate()
							elseif sectiontab.MouseInside then
								sectiontab:Deactivate()
							end
						end
					end)
				end

				local ContentLayout = Instance.new(""UIListLayout"")
				ContentLayout.Parent = TabContentContainer
				ContentLayout.FillDirection = Enum.FillDirection.Vertical
				ContentLayout.VerticalAlignment = Enum.VerticalAlignment.Top
				ContentLayout.Padding = UDim.new(0, 8)
				ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
				ContentLayout.Name = ""ContentLayout""

				return section

			end -- section:AddTab

			function section:AddLabel(options)
				options = Library:validate({
					name = ""Example Label""
				}, options or {})

				if _G.TabsExist == true then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				local LabelContainer = Instance.new(""Frame"")
				LabelContainer.Size = UDim2.new(1,0,0,15)
				LabelContainer.Parent = _G.elementparent
				LabelContainer.AnchorPoint = Vector2.new(0.5,0)
				LabelContainer.BackgroundTransparency = 1
				LabelContainer.BorderSizePixel = 0
				LabelContainer.Name = ""LabelContainer""
				LabelContainer.ZIndex = 4
				
				local LabelLine = Instance.new(""Frame"")
				LabelLine.Parent = LabelContainer
				LabelLine.Size = UDim2.new(1,0,0,1)
				LabelLine.Position = UDim2.new(0,0,1,-1)
				LabelLine.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
				LabelLine.BorderSizePixel = 0
				LabelLine.Name = ""LabelLine""
				LabelLine.ZIndex = 3

				local LabelText = Instance.new(""TextLabel"")
				LabelText.Position = UDim2.new(0,0,0,-4)
				LabelText.Size = UDim2.new(1,0,1,0)
				LabelText.Parent = LabelContainer
				LabelText.AnchorPoint = Vector2.new(0,0)
				LabelText.BackgroundTransparency = 1
				LabelText.BorderSizePixel = 0
				LabelText.TextXAlignment = Enum.TextXAlignment.Center
				LabelText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				LabelText.Text = options.name
				LabelText.TextColor3 = Color3.fromRGB(200, 200, 200)
				LabelText.TextSize = 13
				LabelText.Name = options.name
				LabelText.ZIndex = 4
			end -- section:AddLabel

			function section:AddButton(options)
				options = Library:validate({
					name = ""Example Button"",
					callback = function() end
				}, options or {})

				local button = {}
				
				if _G.TabsExist == true then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				local ButtonContainer = Instance.new(""Frame"")
				ButtonContainer.Size = UDim2.new(1,0,0,20)
				ButtonContainer.Parent = _G.elementparent
				ButtonContainer.AnchorPoint = Vector2.new(0.5,0)
				ButtonContainer.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
				ButtonContainer.BorderSizePixel = 0
				ButtonContainer.Name = ""ButtonContainer""
				ButtonContainer.ZIndex = 4

				local ButtonText = Instance.new(""TextLabel"")
				ButtonText.Size = UDim2.new(1,0,1,0)
				ButtonText.Parent = ButtonContainer
				ButtonText.AnchorPoint = Vector2.new(0,0)
				ButtonText.BackgroundTransparency = 1
				ButtonText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				ButtonText.Text = options.name
				ButtonText.TextColor3 = Color3.fromRGB(200, 200, 200)
				ButtonText.TextSize = 13
				ButtonText.Name = options.name
				ButtonText.ZIndex = 4

				local ButtonStroke = Instance.new(""UIStroke"")
				ButtonStroke.Parent = ButtonContainer
				ButtonStroke.Thickness = 1.5
				ButtonStroke.Color = Color3.fromRGB(18, 18, 24)
				
				-- Functionality
				do
					ButtonContainer.MouseEnter:Connect(function()
						button.Hover = true
		
						Library:tween(ButtonText, {TextColor3 = Color3.fromRGB(255, 255, 255)})
						Library:tween(ButtonStroke, {Color = Color3.fromRGB(34,34,40)})
					end)
				
					ButtonContainer.MouseLeave:Connect(function()
						button.Hover = false

						Library:tween(ButtonText, {TextColor3 = Color3.fromRGB(200, 200, 200)})
						Library:tween(ButtonStroke, {Color = Color3.fromRGB(18, 18, 24)})
					end)

					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if button.Hover then
								options.callback()
							end
						end
					end)
				end

				return section
			end -- section:AddButton

			function section:AddToggle(options)
				options = Library:validate({
					name = ""Example Toggle"",
					state = false,
					callback = function() end
				}, options or {})

				local toggle = {}
				toggle.state = options.state

				if _G.TabsExist then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				local ToggleContainer = Instance.new(""Frame"")
				ToggleContainer.Size = UDim2.new(1,0,0,15)
				ToggleContainer.Parent = _G.elementparent
				ToggleContainer.AnchorPoint = Vector2.new(0.5,0)
				ToggleContainer.BackgroundTransparency = 1
				ToggleContainer.BorderSizePixel = 0
				ToggleContainer.Name = ""ToggleContainer""
				ToggleContainer.ZIndex = 4

				local ToggleBox = Instance.new(""Frame"")
				ToggleBox.Size = UDim2.new(0,8,0,8)
				ToggleBox.Parent = ToggleContainer
				ToggleBox.Position = UDim2.new(0, 5, 0, 4)
				ToggleBox.BackgroundColor3 = Color3.fromRGB(75, 75, 86)
				ToggleBox.BackgroundTransparency = 0
				ToggleBox.BorderSizePixel = 0
				ToggleBox.Name = ""ToggleContainer""
				ToggleBox.ZIndex = 4

				local ToggleStroke = Instance.new(""UIStroke"")
				ToggleStroke.Parent = ToggleBox
				ToggleStroke.Thickness = 2
				ToggleStroke.Color = Color3.fromRGB(18, 18, 24)

				local ToggleText = Instance.new(""TextLabel"")
				ToggleText.Size = UDim2.new(1,0,1,0)
				ToggleText.Parent = ToggleContainer
				ToggleText.TextXAlignment = Enum.TextXAlignment.Left
				ToggleText.Position = UDim2.new(0, 30, 0, -1)
				ToggleText.BackgroundTransparency = 1
				ToggleText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				ToggleText.Text = options.name
				ToggleText.TextColor3 = Color3.fromRGB(150, 150, 150)
				ToggleText.TextSize = 13
				ToggleText.Name = options.name
				ToggleText.ZIndex = 4

				-- Functionality
				do
					ToggleBox.MouseEnter:Connect(function()
						toggle.Hover = true
						if toggle.state ~= true then
							Library:tween(ToggleBox, {BackgroundColor3 = Color3.fromRGB(206, 115, 136)})
							Library:tween(ToggleStroke, {Color = Color3.fromRGB(0,0,0)})
						end
					end)
				
					ToggleBox.MouseLeave:Connect(function()
						toggle.Hover = false
						if toggle.state ~= true then
							Library:tween(ToggleBox, {BackgroundColor3 = Color3.fromRGB(75, 75, 86)})
							Library:tween(ToggleStroke, {Color = Color3.fromRGB(18, 18, 24)})
						end
					end)

					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if toggle.Hover then
								toggle.state = not toggle.state
								options.callback(toggle.state)
							end
						end
					end)

					if toggle.state == true then
						Library:tween(ToggleBox, {BackgroundColor3 = Color3.fromRGB(206, 115, 136)})
					else
						Library:tween(ToggleBox, {BackgroundColor3 = Color3.fromRGB(75, 75, 86)})
					end
				end

				return section
			end -- section:AddToggle
			
			function section:AddSlider(options)
				options = Library:validate({
					name = ""Example Toggle"",
					min = 0,
					max = 100,
					default = nil,
					callback = function(v)
						print(v)
					end
				}, options or {})

				local slider = {
					MouseDown = false,
					Hover = false,
					Connection = nil
				}

				if _G.TabsExist then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				options.value = 0
				options.default = options.default or options.min

				local SliderContainer = Instance.new(""Frame"")
				SliderContainer.Size = UDim2.new(1,0,0,25)
				SliderContainer.Parent = _G.elementparent
				SliderContainer.AnchorPoint = Vector2.new(0.5,0)
				SliderContainer.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
				SliderContainer.BackgroundTransparency = 1
				SliderContainer.BorderSizePixel = 0
				SliderContainer.Name = ""SliderContainer""
				SliderContainer.ZIndex = 3

				local SliderBackground = Instance.new(""Frame"")
				SliderBackground.Size = UDim2.new(1,-20,0,8)
				SliderBackground.Parent = SliderContainer
				SliderBackground.AnchorPoint = Vector2.new(0,0)
				SliderBackground.Position = UDim2.new(0, 11, 0, 15)
				SliderBackground.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
				SliderBackground.BorderSizePixel = 0
				SliderBackground.Name = ""SliderBackground""
				SliderBackground.ZIndex = 3

				local MoveSlider = Instance.new(""Frame"")
				MoveSlider.Size = UDim2.new(1,-50,1,0)
				MoveSlider.Parent = SliderBackground
				MoveSlider.BackgroundColor3 = Color3.fromRGB(206, 115, 136)
				MoveSlider.BorderSizePixel = 0
				MoveSlider.Name = ""MoveSlider""
				MoveSlider.ZIndex = 3

				local SliderValue = Instance.new(""TextLabel"")
				SliderValue.Size = UDim2.new(0,10,0,10)
				SliderValue.Parent = MoveSlider
				SliderValue.TextXAlignment = Enum.TextXAlignment.Center
				SliderValue.Position = UDim2.new(1, -5, 0, 8)
				SliderValue.BackgroundTransparency = 1
				SliderValue.FontFace = Font.fromId(12187362578, Enum.FontWeight.ExtraBold)
				SliderValue.Text = options.value
				SliderValue.TextColor3 = Color3.fromRGB(150, 150, 150)
				SliderValue.TextSize = 13
				SliderValue.Name = options.name
				SliderValue.ZIndex = 4

				local ValueOutline = Instance.new(""UIStroke"")
				ValueOutline.Thickness = 1 -- Set the thickness of the outline
				ValueOutline.Color = Color3.new(0, 0, 0) -- Set the color of the outline
				ValueOutline.Parent = SliderValue

				local SliderStroke = Instance.new(""UIStroke"")
				SliderStroke.Parent = SliderBackground
				SliderStroke.Thickness = 1
				SliderStroke.Color = Color3.fromRGB(18, 18, 24)

				local SliderText = Instance.new(""TextLabel"")
				SliderText.Size = UDim2.new(1,0,1,0)
				SliderText.Parent = SliderContainer
				SliderText.TextXAlignment = Enum.TextXAlignment.Left
				SliderText.Position = UDim2.new(0, 12, 0, -6)
				SliderText.BackgroundTransparency = 1
				SliderText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				SliderText.Text = options.name
				SliderText.TextColor3 = Color3.fromRGB(150, 150, 150)
				SliderText.TextSize = 12
				SliderText.Name = options.name
				SliderText.ZIndex = 4

				-- Methods

				function slider:SetValue(v)
					if v == nil then
						local output = (mouse.X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X
						local slidervalue = math.clamp(math.round(output * (options.max - options.min) + options.min), options.min, options.max)
				
						SliderValue.Text = slidervalue
						MoveSlider.Size = UDim2.fromScale((slidervalue - options.min) / (options.max - options.min), 1)
					end
					options.callback(slider:GetValue())
				end

				function slider:GetValue()
					return tonumber(SliderValue.Text)
				end

				MoveSlider.Size = UDim2.fromScale((options.default - options.min) / (options.max - options.min), 1)
				SliderValue.Text = options.default

				-- Functionality
				do
					SliderBackground.MouseEnter:Connect(function()
						slider.Hover = true
						Library:tween(SliderValue, {TextColor3 = Color3.fromRGB(255, 255, 255)})
					end)
					
					SliderBackground.MouseLeave:Connect(function()
						slider.Hover = false
						Library:tween(SliderValue, {TextColor3 = Color3.fromRGB(150, 150, 150)})
					end)
					
					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 and slider.Hover then
							slider.MouseDown = true
							-- slider value
							if not slider.Connection then
								slider.Connection = runService.RenderStepped:Connect(function()
									slider:SetValue()
								end)
							end
						end
					end)
					
					UIS.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							slider.MouseDown = false
							slider.Hover = false
							-- Stop slider value
							if slider.Connection then
								slider.Connection:Disconnect()
							end
							slider.Connection = nil
						end
					end)
				end
				
			end -- section:AddSlider

			function section:AddDropdown(options)
				options = Library:validate({
					name = ""Example Dropdown"",
					list = {""Example 1"", ""Example 2"", ""Example 3"", ""Example 4""},
					default = 1,
					callback = function(active)
						print(active)
					end
				}, options or {})

				options.default = options.default or 1

				local dropdown = {
					Hover = false,
					active = {options.list[options.default]},
					state = false
				}

				if _G.TabsExist then
					elementParent = _G.TabContentContainer
				else
					elementParent = SectionContentContainer
				end
				_G.elementparent = elementParent

				local DropdownContainer = Instance.new(""Frame"")
				DropdownContainer.Size = UDim2.new(1,0,0,40)
				DropdownContainer.Position = UDim2.new(0, 0, 0, 0)
				DropdownContainer.Parent = _G.elementparent
				DropdownContainer.AnchorPoint = Vector2.new(0.5,0)
				DropdownContainer.BackgroundTransparency = 1
				DropdownContainer.BorderSizePixel = 0
				DropdownContainer.Name = ""DropdownContainer""
				DropdownContainer.ZIndex = 4

				local DropdownText = Instance.new(""TextLabel"")
				DropdownText.Size = UDim2.new(1,0,0,0)
				DropdownText.Parent = DropdownContainer
				DropdownText.Position = UDim2.new(0, 35, 0, 6)
				DropdownText.BackgroundTransparency = 1
				DropdownText.TextXAlignment = Enum.TextXAlignment.Left
				DropdownText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				DropdownText.Text = options.name
				DropdownText.TextColor3 = Color3.fromRGB(150, 150, 150)
				DropdownText.TextSize = 13
				DropdownText.Name = options.name
				DropdownText.ZIndex = 4

				local ActiveChoice = Instance.new(""Frame"")
				ActiveChoice.Size = UDim2.new(1,-65,0,20)
				ActiveChoice.Position = UDim2.new(0.5, 0, 0, 15)
				ActiveChoice.Parent = DropdownContainer
				ActiveChoice.AnchorPoint = Vector2.new(0.5,0)
				ActiveChoice.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
				ActiveChoice.Name = ""ActiveChoice""
				ActiveChoice.ZIndex = 4

				local ActiveText = Instance.new(""TextLabel"")
				ActiveText.Size = UDim2.new(1,0,1,0)
				ActiveText.Parent = ActiveChoice
				ActiveText.AnchorPoint = Vector2.new(0.5,0)
				ActiveText.Position = UDim2.new(0.5, 0, 0, 0)
				ActiveText.BackgroundTransparency = 1
				ActiveText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
				ActiveText.Text = table.concat(dropdown.active, "", "")
				ActiveText.TextColor3 = Color3.fromRGB(200, 200, 200)
				ActiveText.TextSize = 13
				ActiveText.Name = options.name
				ActiveText.ZIndex = 4

				local DropdownStroke = Instance.new(""UIStroke"")
				DropdownStroke.Parent = ActiveChoice
				DropdownStroke.Thickness = 1.5
				DropdownStroke.Color = Color3.fromRGB(18, 18, 24)

				local ChoiceHolder = Instance.new(""Frame"")
				ChoiceHolder.Size = UDim2.new(1,0,0,0)
				ChoiceHolder.Position = UDim2.new(0.5, 0, 0, 21)
				ChoiceHolder.Parent = ActiveChoice
				ChoiceHolder.AnchorPoint = Vector2.new(0.5,0)
				ChoiceHolder.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
				ChoiceHolder.Visible = false
				ChoiceHolder.BorderSizePixel = 0
				ChoiceHolder.ZIndex = 4

				local ChoiceLayout = Instance.new(""UIListLayout"")
				ChoiceLayout.Parent = ChoiceHolder
				ChoiceLayout.SortOrder = Enum.SortOrder.LayoutOrder
				ChoiceLayout.FillDirection = Enum.FillDirection.Vertical
				ChoiceLayout.Padding = UDim.new(0, 0)
				ChoiceLayout.Name = ""ChoiceLayout""

				function dropdown:AddChoice(name)
					local choice = {
						Name = name,
						Hover = false,
						state = false
					}

					if dropdown.active == choice.Name then
						choice.state = true
					end

					ChoiceHolder.Size = UDim2.new(1,0,0,ChoiceHolder.Size.Y.Offset + 20)

					local Choice = Instance.new(""Frame"")
					Choice.Size = UDim2.new(1,0,0,20)
					Choice.Parent = ChoiceHolder
					Choice.AnchorPoint = Vector2.new(0.5,0)
					Choice.BackgroundColor3 = Color3.fromRGB(39, 39, 46)
					Choice.BorderSizePixel = 0
					Choice.ZIndex = 4

					local ChoiceText = Instance.new(""TextLabel"")
					ChoiceText.Size = UDim2.new(1,0,1,0)
					ChoiceText.Parent = Choice
					ChoiceText.AnchorPoint = Vector2.new(0.5,0)
					ChoiceText.Position = UDim2.new(0.5, 1, 0, 0)
					ChoiceText.BackgroundTransparency = 1
					ChoiceText.FontFace = Font.fromId(12187362578, Enum.FontWeight.Thin)
					ChoiceText.Text = name
					ChoiceText.TextColor3 = Color3.fromRGB(150,150,150)
					ChoiceText.TextSize = 12
					ChoiceText.Name = name
					ChoiceText.ZIndex = 4

					for i, name in ipairs(dropdown.active) do -- Handle Default Choice
						if name == choice.Name then
							choice.state = true
							ActiveText.Text = table.concat(dropdown.active, "", "")
							Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(255, 255, 255)})
							options.callback(ActiveText.Text)
							break
						end
					end

					-- Choice Functionality
					do
						Choice.MouseEnter:Connect(function()
							if choice.state ~= true then
								Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(255,255,255)})
							end
							choice.Hover = true
						end)
					
						Choice.MouseLeave:Connect(function()
							if choice.state ~= true then
								Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(150, 150, 150)})
							end
							choice.Hover = false
						end)

						UIS.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if choice.Hover == true then
									choice.state = not choice.state
									if choice.state == true then
										Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(255, 255, 255)})
										table.insert(dropdown.active, choice.Name)
										ActiveText.Text = table.concat(dropdown.active, "", "")
										options.callback(ActiveText.Text)
									else
										Library:tween(ChoiceText, {TextColor3 = Color3.fromRGB(150, 150, 150)})
										for i, name in ipairs(dropdown.active) do
											if name == choice.Name then
												table.remove(dropdown.active, i)
												ActiveText.Text = table.concat(dropdown.active, "", "")
												options.callback(ActiveText.Text)
												break
											end
										end
									end
								end
							end
						end)

					end
				end -- dropdown:AddChoice

				for _,v in pairs(options.list) do
					dropdown:AddChoice(v)
				end

				-- Dropdown Functionality
				do
					ActiveChoice.MouseEnter:Connect(function()
						dropdown.Hover = true
						if dropdown.state ~= true then
							Library:tween(DropdownStroke, {Color = Color3.fromRGB(34,34,40)})
							Library:tween(ActiveText, {TextColor3 = Color3.fromRGB(255,255,255)})
						end
					end)
				
					ActiveChoice.MouseLeave:Connect(function()
						dropdown.Hover = false
						if dropdown.state ~= true then
							Library:tween(DropdownStroke, {Color = Color3.fromRGB(18, 18, 24)})
							Library:tween(ActiveText, {TextColor3 = Color3.fromRGB(200, 200, 200)})
						end
					end)

					UIS.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if dropdown.Hover then
								dropdown.state = not dropdown.state
								ChoiceHolder.Visible = dropdown.state
								if dropdown.state == true then
									DropdownContainer.Size = UDim2.new(1,0,0,ChoiceHolder.Size.Y.Offset + 40)
								else
									DropdownContainer.Size = UDim2.new(1,0,0,40)
								end
							end
						end
					end)

					if dropdown.state == true then
						Library:tween(DropdownStroke, {Color = Color3.fromRGB(34,34,40)})
						Library:tween(ActiveText, {TextColor3 = Color3.fromRGB(255,255,255)})
					else
						Library:tween(DropdownStroke, {Color = Color3.fromRGB(18, 18, 24)})
						Library:tween(ActiveText, {TextColor3 = Color3.fromRGB(200,200,200)})
					end
				end

				return section
			end

			return section
		end -- tab:AddSection
		return tab
	end -- GUI:AddTab

	-- Drag GUI
	do

		local container = {
			Hover = false
		}

		-- This prevents it from dragging on elements like sliders and colorpickers.
		Container3.MouseEnter:Connect(function()
			container.Hover = true
		end)
	
		Container3.MouseLeave:Connect(function()
			container.Hover = false
		end)

		local dragging
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			if container.Hover == false then
				local delta = input.Position - dragStart
				Container1.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			end
		end

		Container1.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				dragStart = input.Position
				startPos = Container1.Position
				
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		Container1.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				dragInput = input
			end
		end)

		UIS.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	end

	-- Hide GUI
	local GUIToggle = true -- Variable to track visibility state

	UIS.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.RightShift then
			GUIToggle = not GUIToggle
			Container1.Visible = GUIToggle
			Container1.Active = GUIToggle
		end
	end)

	-- Destroy GUI
	UIS.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.M then
			ScreenGui:Destroy()
		end
	end)

end

-- Initialize the Library
local GUI = Library:Init()"
eH4x2nkR,18_06_2024_pw000d_43_005,uuu000,C++,Monday 17th of June 2024 05:23:01 PM CDT,"      #include ""EasyNextionLibrary.h""  // Include EasyNextionLibrary
      #include <MsTimer2.h>
      EasyNex myNex(Serial); 
      #define MEASURE_PERIOD 1000
      // uint16_t u=1000;
      int timeCount;               // счетчик времени
      float sum,sum1;                   // переменные для суммирования кодов АЦП
    float vale;  
      float val;               // сумма кодов АЦП (среднее значение * 500)
      boolean flagReady;
      boolean i;
  long value,value1;

  //-------------------------------------------------
        
         int Number_read ;
        int Number_read1 ;
        int Number_read2 ;
        int Number_read3 ;
        int Number_read4 ;  
    
      void setup(){
 
  myNex.begin(9600); // Begin the object with a baud rate of 9600

MsTimer2::set(1, timerInterupt);  // прерывания по таймеру, период 1 мс
 MsTimer2::start();                // разрешение прерывания 
  
 pinMode(3, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(3, LOW); // Setting the built-in LED to LOW = off
   pinMode(4, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(4, LOW); // Setting the built-in LED to LOW = off
  pinMode(5, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(5, LOW); // Setting the built-in LED to LOW = off
   pinMode(6, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(6, LOW); // Setting the built-in LED to LOW = off
   pinMode(7, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(7, LOW); // Setting the built-in LED to LOW = off

}

// обработка прерывания 1 мс
void timerInterupt() {

  timeCount++;            // +1 счетчик выборок усреднения
  sum += analogRead(A1);  // суммирование кодов АЦП
 

  // проверка числа выборок усреднения
  if (timeCount >= MEASURE_PERIOD) {
    timeCount = 0;
    val = sum;  // перегрузка среднего значения
  
    sum = 0;
   

    flagReady = true;  // признак результат измерений готов
  }

 
}
//-------------------------------------
    void loop() {
        myNex.NextionListen();   
   
        if (flagReady == true) {
    flagReady = false;
 vale=val/1000;
    float data = mapf(vale, 0, 1023.0, 0, 5.0);//--------------------------------------------
   long value = (data*1000)/8.8;
   long value1 = val/1000;   //------------------------------------------
    myNex.writeNum(""main.x0.val"",value);
    myNex.writeNum(""page0.x0.val"",value);
    myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
   myNex.writeStr(""main.click x0,1""); 
   myNex.writeStr(""page0.click x0,1""); 
       myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");     
myNex.writeNum(""main.n1.val"", (val / 1000));
myNex.writeNum(""page0.n1.val"", (val / 1000));
    myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
 myNex.writeStr(""main.click n1,1"");
 myNex.writeStr(""page0.click n1,1"");  
     myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
  delay (100);
      }
  //---------------------------------------------------------
  Number_read = myNex.readNumber(""n2.val"");
  Number_read = myNex.readNumber(""n2.val"");
   Number_read1 = myNex.readNumber(""n3.val"");
  Number_read1 = myNex.readNumber(""n3.val"");
   Number_read2 = myNex.readNumber(""n4.val"");
  Number_read2 = myNex.readNumber(""n4.val"");
  Number_read3 = myNex.readNumber(""n6.val"");
  Number_read3 = myNex.readNumber(""n6.val"");
   Number_read4 = myNex.readNumber(""n7.val"");
  Number_read4 = myNex.readNumber(""n7.val"");
     
      
     if(Number_read==1)
      {
        digitalWrite(3, HIGH);
        }
       else
       {
        digitalWrite(3, LOW);
        } 
//-------------------------------------
         if(Number_read1==1)
      {
        digitalWrite(4, HIGH);
        }
       else
       {
        digitalWrite(4, LOW);
        }
//------------------------------------
          if(Number_read2==1)
      {
        digitalWrite(5, HIGH);
        }
       else
       {
        digitalWrite(5, LOW);
        }
//--------------------------------------
         if(Number_read3==1)
      {
        digitalWrite(6, HIGH);
      //  i=1;
        }
       else
       {
        digitalWrite(6, LOW);
       //  i=0;
        } 
//-------------------------------------
         if(Number_read4==1)
      {
        digitalWrite(7, HIGH);
        }
       else
       {
        digitalWrite(7, LOW);
        }
}
float mapf(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  float result;
  result = (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow;
  return result;
}//-------------------------------------------------


"
SqmA5BrE,Untitled,MariyanGrigorov,Python,Monday 17th of June 2024 05:13:40 PM CDT,"import re

main_string = input()
patterns = re.compile(
    r""([=/])(?P<location>[A-Z][a-zA-Z]{2,})\1"")
list_result = list()
result = re.finditer(patterns, main_string)
total_points = 0
for show in result:
    list_result.append(show[""location""])
    total_points += len(show[""location""])

print(f""Destinations: {', '.join(list_result)}"")
print(f""Travel Points: {total_points}"")"
FDt52YsC,test bash,DnTo,Bash,Monday 17th of June 2024 04:48:04 PM CDT,test bash
sQakDdKe,Problem 2 - Destination Mapper-falls,MariyanGrigorov,Python,Monday 17th of June 2024 04:46:30 PM CDT,"input_string = input().split('/')
new_list = []
for i in input_string:
    x = i.count('=')
    if x == 2:
        new_list.append(i)
    elif x == i.count('='):
        if x == 0:
            new_list.append(i)
new_list1 = []
for leather in new_list:
    if '=' in leather:
        a = leather.replace('=','')
        new_list1.append(a)
    elif '=' not in leather:
        a = leather
        new_list1.append(a)
word_list = []
for word in new_list1:
    if word.isalpha() and len(word) > 3 and str(word[0]).isupper():
        word_list.append(word)

result = ', '.join(word_list)
total_sum = sum(len(word_list)for word_list in word_list)
print(f'Destinations: {result}')
print(f'Travel Points: {total_sum}')"
cDwFm9CT,CC OS 2 os/.settings,Leon_Lejon,Lua,Monday 17th of June 2024 04:26:12 PM CDT,"local w,h = term.getSize()

--Center Text

function printCentered (y,s)
    local x = math.floor((w - string.len(s)) /2)
    term.setCursorPos(x,y)
    term.clearLine()
    term.write(s)
end

--Drawmenu

local nOption = 1

local function drawMenu()
    term.setBackgroundColor(colors.cyan)
    term.clear()
    term.setCursorPos(1,1)
    local logo = paintutils.loadImage(""os/.logo"")
    paintutils.drawImage(logo, 1, 1)
    term.setBackgroundColor(colors.cyan)
    
    term.setCursorPos(w-11,1)
    if nOption == 1 then
        term.write(""Reset account"")
    elseif nOption == 2 then
        term.write(""Exit"")
 	else
        end
end    

--GUI

term.clear()
local function drawFrontend()
    printCentered(math.floor(h/2) -3, """")
    printCentered(math.floor(h/2) -2, ""SETTINGS"")
    printCentered(math.floor(h/2) -1, """")
    printCentered(math.floor(h/2) + 0, (nOption == 1 and ""[ Reset account ]"") or ""Reset account"")
    printCentered(math.floor(h/2) + 1, (nOption == 2 and ""[ Exit ]"") or ""Exit"")
end

--Display

drawMenu()
drawFrontend()

while true do
    local e,p = os.pullEvent()
        if e == ""key"" then
            local key = p
            if key == 17 or key == 200 then
            
                if nOption > 1 then
                    nOption = nOption -1
                    drawMenu()
                    drawFrontend()
                end
            elseif key == 31 or key == 208 then
                if nOption < 2 then
                    nOption = nOption +1
                    drawMenu()
                    drawFrontend()
                end
        elseif key == 28 then
            break
end
end
end

term.clear()

--Conditions
if nOption == 1 then
    term.clear()
    term.setCursorPos(1,1)
    print(""Are you sure? Password and username will be wiped and reset! y/n"")
    alt = read()
    if alt == ""y"" then
    	shell.run(""os/setup"")    
    elseif alt == ""n"" then
        print(""Reset Aborted"")
        sleep(3)
        shell.run(""os/.functions"")
    end
else
	shell.run(""os/.functions"")
end"
priD5Pj6,1.0,MintXeido,JSON,Monday 17th of June 2024 04:22:15 PM CDT,"{
   “version”:”1.0”,
   “pasteid”:”priD5Pj6”
   “support”:{
      “ios”:[16],
      “ipados”:[0],
      “macos”:[0],
      “watchos”:[0]
   },
   “content”:[
      “fa3d196a04a44ab68194af5cba8785ff”
   ]  
}"
F0Kt3t3K,boot.lua,AngelinaJolie25,Lua,Monday 17th of June 2024 03:43:06 PM CDT,"-- called from /init.lua
local raw_loadfile = ...

_G._OSVERSION = ""OpenOS 1.8.5""

-- luacheck: globals component computer unicode _OSVERSION
local component = component
local computer = computer
local unicode = unicode

-- Runlevel information.
_G.runlevel = ""S""
local shutdown = computer.shutdown
computer.runlevel = function() return _G.runlevel end
computer.shutdown = function(reboot)
  _G.runlevel = reboot and 6 or 0
  if os.sleep then
    computer.pushSignal(""shutdown"")
    os.sleep(0.1) -- Allow shutdown processing.
  end
  shutdown(reboot)
end

local w, h
local screen = component.list(""screen"", true)()
local gpu = screen and component.list(""gpu"", true)()
if gpu then
  gpu = component.proxy(gpu)
  if not gpu.getScreen() then
    gpu.bind(screen)
  end
  _G.boot_screen = gpu.getScreen()
  w, h = gpu.maxResolution()
  gpu.setResolution(w, h)
  gpu.setBackground(0x000000)
  gpu.setForeground(0xFFFFFF)
  gpu.fill(1, 1, w, h, "" "")
end

-- Report boot progress if possible.
local y = 1
local uptime = computer.uptime
-- we actually want to ref the original pullSignal here because /lib/event intercepts it later
-- because of that, we must re-pushSignal when we use this, else things break badly
local pull = computer.pullSignal
local last_sleep = uptime()
local function status(msg)
  gpu.setResolution(10, 1)
  gpu.set(1, y, ""Loading..."")
  -- boot can be slow in some environments, protect from timeouts
  if uptime() - last_sleep > 1 then
    local signal = table.pack(pull(0))
    -- there might not be any signal
    if signal.n > 0 then
      -- push the signal back in queue for the system to use it
      computer.pushSignal(table.unpack(signal, 1, signal.n))
    end
    last_sleep = uptime()
  end
end

status(""Booting "" .. _OSVERSION .. ""..."")

-- Custom low-level dofile implementation reading from our ROM.
local function dofile(file)
  status(""> "" .. file)
  local program, reason = raw_loadfile(file)
  if program then
    local result = table.pack(pcall(program))
    if result[1] then
      return table.unpack(result, 2, result.n)
    else
      error(result[2])
    end
  else
    error(reason)
  end
end

status(""Initializing package management..."")

-- Load file system related libraries we need to load other stuff moree
-- comfortably. This is basically wrapper stuff for the file streams
-- provided by the filesystem components.
local package = dofile(""/lib/package.lua"")

do
  -- Unclutter global namespace now that we have the package module and a filesystem
  _G.component = nil
  _G.computer = nil
  _G.process = nil
  _G.unicode = nil
  -- Inject the package modules into the global namespace, as in Lua.
  _G.package = package

  -- Initialize the package module with some of our own APIs.
  package.loaded.component = component
  package.loaded.computer = computer
  package.loaded.unicode = unicode
  package.loaded.buffer = dofile(""/lib/buffer.lua"")
  package.loaded.filesystem = dofile(""/lib/filesystem.lua"")

  -- Inject the io modules
  _G.io = dofile(""/lib/io.lua"")
end

status(""Initializing file system..."")

-- Mount the ROM and temporary file systems to allow working on the file
-- system module from this point on.
require(""filesystem"").mount(computer.getBootAddress(), ""/"")

status(""Running boot scripts..."")

-- Run library startup scripts. These mostly initialize event handlers.
local function rom_invoke(method, ...)
  return component.invoke(computer.getBootAddress(), method, ...)
end

local scripts = {}
for _, file in ipairs(rom_invoke(""list"", ""boot"")) do
  local path = ""boot/"" .. file
  if not rom_invoke(""isDirectory"", path) then
    table.insert(scripts, path)
  end
end
table.sort(scripts)
for i = 1, #scripts do
  dofile(scripts[i])
end

status(""Initializing components..."")

for c, t in component.list() do
  computer.pushSignal(""component_added"", c, t)
end

status(""Initializing system..."")

computer.pushSignal(""init"") -- so libs know components are initialized.
require(""event"").pull(1, ""init"") -- Allow init processing.
_G.runlevel = 1

w, h = gpu.maxResolution()
gpu.setResolution(w, h)
"
M5w1WpBa,CSS Image Full Screen,1xptolevitico69,HTML,Monday 17th of June 2024 03:21:29 PM CDT,  <a href='https://l.facebook.com/l.php?u=https%3A%2F%2F1xpto.netlify.app%2Farticles%2Fcss%2520image%2520full%2520screen%2F%3Ffbclid%3DIwZXh0bgNhZW0CMTEAAR2zg6qxzXfDtjIHMBLoxcPWUSeoIpNvbl6nP8acs-3HpEpDAF0Jukx4eTA_aem_ZmFrZWR1bW15MTZieXRlcw&h=AT2ZH5EIr5cqhwZyoVo6VwbpcMPpLvmiXB3iFSLt7UvtvZN7MfhvZqq70RcrITqN-C-CDPPPKuu19GiIF6soAQKefGjOHnU5Z_E6OQ5fPwYciuJlwd38FqRNuiZYsCwr1M9d&__tn__=H-R&c[0]=AT0xppHXlmkmehtbh6RFrICSe58_8vG2lIcFrEN14N4t4kKvMs5oFI0AQbIHGA9aT6x3jYAH3kcjwPXc6LRhgG5Y4OI36x6gyYobxlhswJzGlFtVzTEMDEBJJQ1qdaiSaGFzNoW_XV3LOWDG0jxK3zRmCA'>CSS Image Full Screen</a>
iGwJTksp,Needs cleaning,Maderdash,Arduino,Monday 17th of June 2024 03:06:01 PM CDT,"/*
  -- New project --
  
  This source code of graphical user interface 
  has been generated automatically by RemoteXY editor.
  To compile this code using RemoteXY library 3.1.13 or later version 
  download by link http://remotexy.com/en/library/
  To connect using RemoteXY mobile app by link http://remotexy.com/en/download/                   
    - for ANDROID 4.13.13 or later version;
    - for iOS 1.10.3 or later version;
  
  This source code is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.    
*/


//////////////////////////////////////////////
//        RemoteXY include library          //
//////////////////////////////////////////////


// you can enable debug logging to Serial at 115200
//#define REMOTEXY__DEBUGLOG


// RemoteXY select connection mode and include library
#define REMOTEXY_MODE__ESP32CORE_BLE

#include <BLEDevice.h>

// RemoteXY connection settings
#define REMOTEXY_BLUETOOTH_NAME ""düpr""
#define REMOTEXY_ACCESS_PASSWORD ""esp""


#include <RemoteXY.h>

// RemoteXY GUI configuration
#pragma pack(push, 1)
uint8_t RemoteXY_CONF[] =  // 92 bytes
  { 255, 6, 0, 4, 0, 85, 0, 17, 0, 0, 0, 31, 2, 106, 200, 200, 84, 1, 1, 5,
    0, 5, 201, 21, 143, 143, 2, 18, 54, 54, 32, 190, 28, 31, 5, 28, 21, 129, 129, 144,
    17, 54, 54, 32, 190, 28, 31, 4, 44, 232, 7, 86, 25, 2, 154, 14, 128, 190, 28, 2,
    52, 74, 23, 52, 112, 30, 30, 11, 0, 190, 28, 31, 31, 79, 78, 0, 79, 70, 70, 0,
    68, 45, 112, 21, 95, 55, 53, 90, 31, 17, 28, 190 };

// this structure defines all the variables and events of your control interface
struct {

  // input variables
  int8_t joystick_links_x;   // from -100 to 100
  int8_t joystick_links_y;   // from -100 to 100
  int8_t joystick_rechts_x;  // from -100 to 100
  int8_t joystick_rechts_y;  // from -100 to 100
  int8_t servo;              // from 0 to 100
  uint8_t switch_main;       // =1 if switch ON and =0 if OFF


  // output variables
  float onlineGraph_01_var1;

  // other variable
  uint8_t connect_flag;  // =1 if wire connected, else =0

} RemoteXY;
#pragma pack(pop)


/////////////////////////////////////////////
//           END RemoteXY include          //
/////////////////////////////////////////////


#include <ESP32Servo.h>

Servo myServo;


void setup() {
  int A = 4;
  int B = 5;
  int l;
  int L;
  l = RemoteXY.joystick_links_y;
  L = l / 100 * 255;
  if (l > 0) {
    L = L;
    digitalWrite(A, 0);
    analogWrite(B, L);
  } else if (l < 0) {
    L = -L;
    digitalWrite(B, 0);
    analogWrite(A, L);
  } else {
    L = 0;
    digitalWrite(A, 0);
    analogWrite(B, 0);
  }

  int C = 6;
  int D = 7;
  int r;
  int R;
  r = RemoteXY.joystick_rechts_y;
  R = r / 100 * 255;
  if (r > 0) {
    R = R;
    digitalWrite(C, 0);
    analogWrite(D, R);
  } else if (r < 0) {
    R = -R;
    digitalWrite(D, 0);
    analogWrite(C, R);
  } else {
    R = 0;
    digitalWrite(C, 0);
    analogWrite(D, 0);
  }

  RemoteXY_Init();

  myServo.attach(1);
  RemoteXY.servo = 0;

  // TODO your setup code
}




void loop() {
  RemoteXY_Handler();
  
  int ms = RemoteXY.servo * 20 + 500;
  myServo.writeMicroseconds(ms);
  
  drive();
}"
6Z4UUSf9,Untitled,Georgiy1108,Python,Monday 17th of June 2024 03:02:23 PM CDT,"import os
import face_recognition
from collections import defaultdict
import shutil
import torch
import numpy as np
import time
import logging
import json

# Глобальные переменные
LIMITED_FILES_COUNT = 20
THRESHOLDS = [0.43, 0.54, 0.6]
EMBEDDINGS_DIR = ""embeddings""

# Настройка логирования
logging.basicConfig(level=logging.INFO, format='%(asctime)s %(message)s', handlers=[logging.FileHandler(""log.txt""), logging.StreamHandler()])

# Функция для извлечения префикса из имени файла
def get_prefix(filename):
    parts = filename.split('-')
    if len(parts) >= 3:
        return '-'.join(parts[:2])
    else:
        prefix = ''
        for char in filename:
            if char.isdigit():
                break
            prefix += char
        return prefix if prefix else filename

# Функция для извлечения эмбеддингов лиц и сохранения их в файл
def extract_embeddings(image_path):
    embedding_path = os.path.join(EMBEDDINGS_DIR, os.path.basename(image_path) + "".json"")
    if os.path.exists(embedding_path):
        with open(embedding_path, 'r') as f:
            embedding = json.load(f)
        return np.array(embedding)
    else:
        logging.info(f""Processing file: {image_path}"")
        image = face_recognition.load_image_file(image_path)
        face_encodings = face_recognition.face_encodings(image)
        if face_encodings:
            embedding = face_encodings[0]
            with open(embedding_path, 'w') as f:
                json.dump(embedding.tolist(), f)
            return embedding
        else:
            return None

# Группировка файлов по префиксу
def group_by_prefix(file_list):
    groups = defaultdict(list)
    for file in file_list:
        prefix = get_prefix(file)
        groups[prefix].append(file)
    return groups

# Функция для извлечения и кэширования эмбеддингов для всех изображений
def extract_and_cache_embeddings(grouped_files):
    embeddings_cache = {}
    for key, files in grouped_files.items():
        limited_files = files[:LIMITED_FILES_COUNT // 2] + files[-LIMITED_FILES_COUNT // 2:]
        embeddings_cache[key] = [(extract_embeddings(file), file) for file in limited_files if extract_embeddings(file) is not None]
    return embeddings_cache

# Функция для сравнения двух эмбеддингов
def compare_embeddings(embedding1, embedding2):
    device = torch.device(""cuda"" if torch.cuda.is_available() else ""cpu"")
    embedding1 = torch.tensor(embedding1).to(device)
    embedding2 = torch.tensor(embedding2).to(device)
    distance = torch.nn.functional.pairwise_distance(embedding1.unsqueeze(0), embedding2.unsqueeze(0)).item()
    return distance

# Функция для объединения групп на основе новых правил
def merge_groups(groups, embeddings_cache, threshold):
    merged_groups = []
    group_keys = list(groups.keys())

    while group_keys:
        current_key = group_keys.pop(0)
        current_group = groups[current_key]
        current_embeddings = embeddings_cache[current_key]

        i = 0
        while i < len(group_keys):
            comparison_key = group_keys[i]
            comparison_group = groups[comparison_key]
            comparison_embeddings = embeddings_cache[comparison_key]
            
            total_comparisons = 0
            distances = []

            for (emb1, file1) in current_embeddings:
                for (emb2, file2) in comparison_embeddings:
                    total_comparisons += 1
                    distance = compare_embeddings(emb1, emb2)
                    distances.append(distance)
                    logging.info(f""Comparing {file1} and {file2}: Distance = {distance}"")

            if total_comparisons == 0:
                i += 1
                continue

            # Применяем новые правила
            count_45 = sum(1 for d in distances if d <= 0.45)
            count_50 = sum(1 for d in distances if d <= 0.5)
            count_55 = sum(1 for d in distances if d <= 0.55)
            count_57 = sum(1 for d in distances if d >= 0.57)
            count_65 = sum(1 for d in distances if d > 0.65)
            count_70 = sum(1 for d in distances if d > 0.7)

            percent_45 = count_45 / total_comparisons
            percent_50 = count_50 / total_comparisons
            percent_55 = count_55 / total_comparisons
            percent_57 = count_57 / total_comparisons
            percent_65 = count_65 / total_comparisons
            percent_70 = count_70 / total_comparisons

            logging.info(f""Group {current_key} vs Group {comparison_key}: {percent_45*100:.2f}% <= 0.45, {percent_50*100:.2f}% <= 0.5, {percent_55*100:.2f}% <= 0.55, {percent_57*100:.2f}% >= 0.57, {percent_65*100:.2f}% > 0.65, {percent_70*100:.2f}% > 0.7"")

            if percent_45 >= 0.1:
                current_group.extend(comparison_group)
                del groups[comparison_key]
                del embeddings_cache[comparison_key]
                group_keys.pop(i)
            elif percent_50 >= 0.4:
                current_group.extend(comparison_group)
                del groups[comparison_key]
                del embeddings_cache[comparison_key]
                group_keys.pop(i)
            elif percent_55 >= 0.7:
                current_group.extend(comparison_group)
                del groups[comparison_key]
                del embeddings_cache[comparison_key]
                group_keys.pop(i)
            elif percent_65 >= 0.3:
                i += 1
            elif percent_70 >= 0.1:
                i += 1
            elif percent_57 >= 0.8:
                i += 1
            else:
                i += 1

        merged_groups.append((current_key, current_group))

    # Преобразуем список обратно в словарь для следующей итерации
    new_groups = {}
    new_embeddings_cache = {}
    for i, (key, group) in enumerate(merged_groups):
        new_key = f""group_{i}""
        new_groups[new_key] = group
        # Обновляем кэшированные эмбеддинги для новых групп
        new_embeddings_cache[new_key] = []
        for emb, file in embeddings_cache[key]:
            if file in group:
                new_embeddings_cache[new_key].append((emb, file))

    return new_groups, new_embeddings_cache

# Функция для копирования файлов в выходную директорию
def copy_files_to_output(merged_groups, output_directory):
    if not os.path.exists(output_directory):
        os.makedirs(output_directory)
    
    for i, (group_name, group) in enumerate(merged_groups.items()):
        group_dir = os.path.join(output_directory, f""group_{i + 1}"")
        if not os.path.exists(group_dir):
            os.makedirs(group_dir)
        
        for file in group:
            shutil.copy(file, group_dir)

# Функция для копирования групп, содержащих только один префикс, в отдельную папку
def copy_single_prefix_groups_to_output(groups, output_directory):
    single_prefix_dir = os.path.join(output_directory, ""single_prefix_groups"")
    if not os.path.exists(single_prefix_dir):
        os.makedirs(single_prefix_dir)
    
    prefix_counts = defaultdict(int)
    for group in groups.values():
        for file in group:
            prefix = get_prefix(file)
            prefix_counts[prefix] += 1
    
    for i, (group_name, group) in enumerate(groups.items()):
        group_prefixes = set(get_prefix(file) for file in group)
        if all(prefix_counts[prefix] == len(group) for prefix in group_prefixes):
            group_dir = os.path.join(single_prefix_dir, f""group_{i + 1}"")
            if not os.path.exists(group_dir):
                os.makedirs(group_dir)
            for file in group:
                shutil.copy(file, group_dir)

# Основная функция
def main(input_directory, output_directory):
    # Проверка доступности GPU
    if not torch.cuda.is_available():
        logging.error(""GPU is not available. Please ensure you have installed the correct drivers and CUDA toolkit."")
        return

    logging.info(f""Using GPU: {torch.cuda.get_device_name(torch.cuda.current_device())}"")

    # Создание директории для эмбеддингов, если она не существует
    if not os.path.exists(EMBEDDINGS_DIR):
        os.makedirs(EMBEDDINGS_DIR)

    start_time = time.time()
    
    files = [os.path.join(input_directory, file) for file in os.listdir(input_directory) if file.endswith('.jpg')]
    grouped_files = group_by_prefix(files)
    
    # Вывод количества групп по префиксам
    logging.info(f""Number of groups by prefix: {len(grouped_files)}"")
    
    # Извлечение и кэширование эмбеддингов
embeddings_cache = extract_and_cache_embeddings(grouped_files)

# Проводим многократную группировку с разными значениями порога
for threshold in THRESHOLDS:
    logging.info(f""Grouping with threshold: {threshold}"")
    grouped_files, embeddings_cache = merge_groups(grouped_files, embeddings_cache, threshold)
    logging.info(f""Number of groups after grouping with threshold {threshold}: {len(grouped_files)}"")

# Копируем файлы в выходную директорию
copy_files_to_output(grouped_files, output_directory)

# Отделяем группы с одним префиксом и копируем в отдельную папку
copy_single_prefix_groups_to_output(grouped_files, output_directory)

end_time = time.time()
logging.info(f""Total execution time: {end_time - start_time} seconds"")

for i, (group_name, group) in enumerate(grouped_files.items()):
    logging.info(f""Group {i + 1}:"")
    for file in group:
        logging.info(f""  {file}"")"
8uvRBjfZ,CoDUO: Key map debug commands,brague,VB.NET,Monday 17th of June 2024 02:35:40 PM CDT,"CoDUO: Key map debug commands
 
by Wuphon's Reach
March 1, 2006


/devmap [nombre del mapa]
Le permite cargar un mapa en modo de depuración.

/cg_drawFPS 2
Te muestra información adicional, como la cantidad de tris/vértices/primativas/entidades visibles en este momento.

/cg_drawshader 1
Le muestra los nombres de las texturas debajo de la mira.

/r_showportals 1
Dibuja los límites del portal, lo que le permite ver cómo se seccionó el mapa.

/r_showtris 2
Dibuja los contornos de las superficies. Útil para ver qué tan finamente se dividió un área.

/r_showsurfcounts 1
Muestra el número de texturas utilizadas por un modelo en particular.

/r_showtricounts 1
Muestra el número de triángulos utilizados por un modelo en particular. Esta es una buena medida de la complejidad del modelo.


Cree un nuevo enlace al archivo EXE multijugador [ ""C:\Program Files\Call of Duty\CoDMP.exe"" +set thereisacow 1337 +set developer 1 +set sv_cheats 1 +set monkeytoy 0 + set com_introplayed 1 ]
Abra el enlace, escriba \devmap mp_hurtgen y luego \cg_drawshader 1.
Apunta tu arma a una textura.





"
hHz0tXX8,Baza_danych_broni.json,tetkris,JSON,Monday 17th of June 2024 02:35:20 PM CDT,"{
    ""to jest schemat pliku"": {
        ""#schema:"": {
            ""#weapons:"": {
                ""#weaponName"": ""weapon_name"",
                ""#length:"": [
                    ""short"",
                    ""long""
                ],
                ""#type:"": [
                    ""pistol"",
                    ""submachineGun"",
                    ""rifle"",
                    ""shootGun"",
                    ""sniperRifle""
                ],
                ""#discipline:"": [
                    ""ag"",
                    ""asg""
                ],
                ""#caliber:"": [
                    ""4.5_mm"",
                    ""5.5_mm""
                ],
                ""#typeAmmo:"": [
                    ""plasticBB"",
                    ""metalBB"",
                    ""leadShot""
                ],
                ""#typeDrive:"": [
                    ""spring"",
                    ""electric"",
                    ""co2"",
                    ""greenGas"",
                    ""pca"",
                    ""pcp""
                ],
                ""#status:"": [
                    ""in_service"",
                    ""maybe_need_fix"",
                    ""breaked""
                ]
            }
        }
    },
    ""#to jest poczatek w formacie yaml:"": ""---"",
    ""weapons"": {
        ""Umarex_DX17:"": {
            ""length"": ""short"",
            ""type:"": ""pistol"",
            ""discipline:"": ""ag"",
            ""caliber:"": ""4.5_mm"",
            ""typeAmmo:"": [
                ""leadShot, metalBB""
            ],
            ""typeDrive:"": ""spring""
        }
    },
    ""Umarex_WaltherPPQ:"": {
        ""length:"": ""short"",
        ""type:"": ""pistol"",
        ""discipline:"": ""asg"",
        ""caliber:"": ""5.5_mm"",
        ""typeAmmo:"": ""plasticBB"",
        ""typeDrive:"": ""spring""
    },
    ""Glock_17:"": {
        ""length:"": ""short"",
        ""type:"": ""pistol"",
        ""discipline:"": ""asg"",
        ""caliber:"": ""5.5_mm"",
        ""typeAmmo:"": ""plasticBB"",
        ""typeDrive:"": ""spring""
    },
    ""Beretta_92_FS"": {
        ""length:"": ""short"",
        ""type:"": ""pistol"",
        ""discipline:"": ""ag"",
        ""caliber:"": ""4.5_mm"",
        ""typeAmmo:"": ""metalBB"",
        ""typeDrive:"": ""co2""
    },
    ""ASG_CZ_75_P07_Duty:"": {
        ""length:"": ""short"",
        ""type:"": ""pistol"",
        ""discipline:"": ""ag"",
        ""caliber:"": ""4.5_mm"",
        ""typeAmmo:"": ""metalBB"",
        ""typeDrive:"": ""co2""
    },
    ""We_E99C/WaltherP99AS_C:"": {
        ""length:"": ""short"",
        ""type:"": ""pistol"",
        ""discipline:"": ""asg"",
        ""caliber:"": ""5.5_mm"",
        ""typeAmmo:"": ""plasticBB"",
        ""typeDrive:"": ""greenGas""
    },
    ""Artemis_CP2:"": {
        ""length:"": ""long"",
        ""type:"": ""sniperRifle"",
        ""discipline:"": ""ag"",
        ""caliber:"": ""4.5_mm"",
        ""typeAmmo:"": ""leadShot"",
        ""typeDrive:"": ""co2"",
        ""status:"": ""maybe_need_fix""
    },
    ""Sas_Franchi12:"": {
        ""length:"": ""long"",
        ""type:"": ""shootGun"",
        ""discipline:"": ""asg"",
        ""caliber:"": ""5.5_mm"",
        ""typeAmmo:"": ""plasticBB"",
        ""typeDrive:"": ""spring""
    },
    ""#Breaked weapons"": {
        ""Umarex/H_and_K UMP:"": {
            ""type:"": ""submachineGun"",
            ""discipline:"": ""asg"",
            ""typeDrive:"": ""electric"",
            ""status:"": ""in_service""
        },
        ""Asg_CZ_V61_Scorpion:"": {
            ""type:"": ""submachineGun"",
            ""discipline:"": ""asg"",
            ""typeDrive:"": ""electric"",
            ""status:"": ""in_service""
        },
        ""noName_Glock_43:"": {
            ""type:"": ""pistol"",
            ""discipline:"": ""asg"",
            ""typeDrive:"": ""spring"",
            ""status:"": ""breaked""
        }
    },
    ""#Features_weapons"": {
        ""Umarex_HK_416D:"": {
            ""type:"": ""rifle"",
            ""discipline:"": ""asg"",
            ""typeDrive:"": ""electric""
        },
        ""Crosman_AK1_Full_Auto:"": {
            ""type:"": ""rifle"",
            ""discipline:"": ""ag"",
            ""typeDrive:"": ""co2""
        }
    },
    ""#How_many_live_weapons"": {
        ""Stats:"": {
            ""type:"": {
                ""- pistol:"": 6,
                ""- sniperRifle:"": 1,
                ""- shootGun:"": 1
            },
            ""length:"": {
                ""- short:"": 6,
                ""- long:"": 2
            },
            ""discipline:"": {
                ""- ag:"": 4,
                ""- asg:"": 4
            },
            ""typeDrive:"": {
                ""- spring:"": 4,
                ""- co2:"": 3,
                ""- greenGas:"": 1
            }
        }
    }
}
"
JCqBwChs,Untitled,EasyDevX,Lua,Monday 17th of June 2024 02:08:08 PM CDT,"import time
import re
import pyautogui
from itertools import permutations
import enchant

# Initialize pyenchant dictionary for English words
d = enchant.Dict(""en_US"")

def follow(thefile):
    thefile.seek(0, 2)
    while True:
        line = thefile.readline()
        if not line:
            time.sleep(0.01)  # Reduce delay to make it more responsive
            continue
        try:
            yield line  # No need to decode, as it's already a string
        except UnicodeDecodeError:
            continue  # Skip decoding errors

def extract_task(line):
    # Regular expressions to match different types of tasks
    unscramble_match = re.search(r'\[CHAT\].*?Unscramble the word ([a-zA-Z]+)\s*', line, re.IGNORECASE)
    type_word_match = re.search(r'\[CHAT\].*?Type the word ([a-zA-Z]+)\s*', line, re.IGNORECASE)
    math_equation_match = re.search(r'\[CHAT\].*?(\d+\s*[+x\-/]\s*\d+)\s*', line, re.IGNORECASE)

    if unscramble_match:
        return 'unscramble', unscramble_match.group(1)
    elif type_word_match:
        return 'type_word', type_word_match.group(1)
    elif math_equation_match:
        return 'ath_equation', math_equation_match.group(1)
    
    return None, None

def unscramble_word(scrambled_word):
    # Function to unscramble the word
    def is_valid_unscramble(candidate):
        return d.check(candidate.lower())

    # Sort characters of the word for optimized permutation checking
    sorted_chars = ''.join(sorted(scrambled_word.lower()))
    for length in range(len(scrambled_word), 0, -1):
        for perm in permutations(sorted_chars, length):
            perm_word = ''.join(perm)
            if is_valid_unscramble(perm_word) and perm_word.lower()!= scrambled_word.lower():
                return perm_word
    return None

def solve_equation(equation):
    # Solve simple addition, subtraction, multiplication, and division equations
    try:
        equation = equation.replace('x', '*').replace('/', '//')  # Replace 'x' with '*' and '/' with '//'
        answer = eval(equation)
        return answer
    except Exception as e:
        print(f""Error solving equation {equation}: {e}"")
        return None

def type_word(word):
    # Press 'T' to open the chat and type the word
    pyautogui.press('t')
    time.sleep(0.1)  # Short delay to ensure chat is open
    # Type the word directly into the chat
    pyautogui.typewrite(word)
    # Press 'Enter' to send the message
    pyautogui.press('enter')

def perform_task(task_type, task_content):
    start_time = time.time()  # Start measuring task execution time

    if task_type == 'unscramble':
        unscrambled_word = unscramble_word(task_content)
        if unscrambled_word and len(unscrambled_word) == len(task_content):
            print(f""Unscrambled: {task_content} -> {unscrambled_word}"")
            type_word(unscrambled_word)
        else:
            print(f""Unable to unscramble: {task_content}"")

    elif task_type == 'type_word':
        print(f""Typing word: {task_content}"")
        type_word(task_content)

    elif task_type == 'ath_equation':
        answer = solve_equation(task_content)
        if answer is not None:
            print(f""Solved equation: {task_content} = {answer}"")
            type_word(str(answer))
        else:
            print(f""Unable to solve equation: {task_content}"")

    task_time = time.time() - start_time
    print(f""Task completed in {task_time:.4f} seconds"")

if __name__ == ""__main__"":
    logfile_path = r""C:\Users\Morga\AppData\Roaming\.minecraft\logs\latest.log""
    start_time = time.time()  # Start measuring overall script execution time
    with open(logfile_path, 'r', encoding='utf-8', errors='replace') as logfile:
        loglines = follow(logfile)
        for line in loglines:
            task_type, task_content = extract_task(line)
            if task_type:
                perform_task(task_type, task_content)

    total_time = time.time() - start_time
    print(f""Total script execution time: {total_time:.2f} seconds"")"
g5xcs6BF,Untitled,Pasterbiner123321,PHP,Monday 17th of June 2024 01:56:36 PM CDT,"{% if quests_enabled %}
    <!-- QUESTS -->
    <td width=""40%"" valign=""top"">
        <table border=""0"" cellspacing=""1"" cellpadding=""4"" width=""100%"">
            <tr bgcolor=""{{ config.vdarkborder }}"">
                <td colspan=""4"" class=""white""><b>Quests</b></td>
            </tr>
            {% set i = 0 %}
            <tr>
            {% for name, done in quests %}
                {% if i % 2 == 0 and i > 0 %}
                    </tr><tr>
                {% endif %}
                <td valign=""top"" width=""50%"">{{ name }}</td>
                <td><img src=""images/{% if done %}true{% else %}false{% endif %}.png"" border=""0""/></td>
                {% set i = i + 1 %}
            {% endfor %}
            </tr>
        </table>
    </td>
    <!-- QUESTS_END -->
{% endif %}

{{ hook(constant('HOOK_CHARACTERS_AFTER_QUESTS')) }}
"
D37w9vyV,17_06_2024_pw000d_43_004_ino,uuu000,C++,Monday 17th of June 2024 01:28:34 PM CDT,"      #include ""EasyNextionLibrary.h""  // Include EasyNextionLibrary
      #include <MsTimer2.h>
      EasyNex myNex(Serial); 
      #define MEASURE_PERIOD 1000
      // uint16_t u=1000;
      int timeCount;               // счетчик времени
      float sum,sum1;                   // переменные для суммирования кодов АЦП
    float vale;  
      float val;               // сумма кодов АЦП (среднее значение * 500)
      boolean flagReady;
      boolean i;
  long value,value1;

  //-------------------------------------------------
        
         int Number_read ;
        int Number_read1 ;
        int Number_read2 ;
        int Number_read3 ;
        int Number_read4 ;  
    
      void setup(){
 
  myNex.begin(9600); // Begin the object with a baud rate of 9600

MsTimer2::set(1, timerInterupt);  // прерывания по таймеру, период 1 мс
 MsTimer2::start();                // разрешение прерывания 
  
 pinMode(3, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(3, LOW); // Setting the built-in LED to LOW = off
   pinMode(4, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(4, LOW); // Setting the built-in LED to LOW = off
  pinMode(5, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(5, LOW); // Setting the built-in LED to LOW = off
   pinMode(6, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(6, LOW); // Setting the built-in LED to LOW = off
   pinMode(7, OUTPUT);   // The built-in LED is initialized as an output          
  digitalWrite(7, LOW); // Setting the built-in LED to LOW = off

}

// обработка прерывания 1 мс
void timerInterupt() {

  timeCount++;            // +1 счетчик выборок усреднения
  sum += analogRead(A1);  // суммирование кодов АЦП
 

  // проверка числа выборок усреднения
  if (timeCount >= MEASURE_PERIOD) {
    timeCount = 0;
    val = sum;  // перегрузка среднего значения
  
    sum = 0;
   

    flagReady = true;  // признак результат измерений готов
  }

 
}
//-------------------------------------
    void loop() {
        myNex.NextionListen();   
   
        if (flagReady == true) {
    flagReady = false;
 vale=val/1000;
    float data = mapf(vale, 0, 1023.0, 0, 5.0);//--------------------------------------------
   long value = (data*1000)/8.8;
   long value1 = val/1000;   //------------------------------------------
    myNex.writeNum(""x0.val"",value);
    myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
   myNex.writeStr(""click x0,1""); 
       myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");     
myNex.writeNum(""n1.val"", (val / 1000));
    myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
 myNex.writeStr(""click n1,1""); 
     myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
myNex.writeStr(""0xFF"");
  delay (100);
      }
  //---------------------------------------------------------
  Number_read = myNex.readNumber(""n2.val"");
  Number_read = myNex.readNumber(""n2.val"");
   Number_read1 = myNex.readNumber(""n3.val"");
  Number_read1 = myNex.readNumber(""n3.val"");
   Number_read2 = myNex.readNumber(""n4.val"");
  Number_read2 = myNex.readNumber(""n4.val"");
  Number_read3 = myNex.readNumber(""n6.val"");
  Number_read3 = myNex.readNumber(""n6.val"");
   Number_read4 = myNex.readNumber(""n7.val"");
  Number_read4 = myNex.readNumber(""n7.val"");
     
      
     if(Number_read==1)
      {
        digitalWrite(3, HIGH);
        }
       else
       {
        digitalWrite(3, LOW);
        } 
//-------------------------------------
         if(Number_read1==1)
      {
        digitalWrite(4, HIGH);
        }
       else
       {
        digitalWrite(4, LOW);
        }
//------------------------------------
          if(Number_read2==1)
      {
        digitalWrite(5, HIGH);
        }
       else
       {
        digitalWrite(5, LOW);
        }
//--------------------------------------
         if(Number_read3==1)
      {
        digitalWrite(6, HIGH);
      //  i=1;
        }
       else
       {
        digitalWrite(6, LOW);
       //  i=0;
        } 
//-------------------------------------
         if(Number_read4==1)
      {
        digitalWrite(7, HIGH);
        }
       else
       {
        digitalWrite(7, LOW);
        }
}
float mapf(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  float result;
  result = (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow;
  return result;
}//-------------------------------------------------


"
aePK7ujF,How Can I Get The PM Financials Forex No Deposit Bonus,reviewbrokers,PHP,Monday 17th of June 2024 12:13:11 PM CDT,"https://www.reviewbrokers.net/how-can-i-get-the-pm-financials-forex-no-deposit-bonus/
 Table of Contents:

 	Key Details
 	Steps to Qualify
 	Terms and Conditions
 	Additional Information

Key Details
Bonus Amount: $50
Eligibility: Available exclusively to new clients of PM Financials.

Geographical Restrictions: Residents of the USA, Japan, and certain other jurisdictions are not eligible for the PM Financials Forex No Deposit Bonus.

Verification: Account verification may be required, although specific details are not explicitly provided by PM Financials.
Steps to Qualify
Register as a New User:

 	Sign up as a new client on the PM Financials official website. Ensure you're registering for the first time to qualify for the Forex No Deposit Bonus.

Open a Trading Account:

 	Create a live trading account with PM Financials to start utilizing the bonus funds immediately.

Account Verification:

 	Complete any necessary account verification steps as required by PM Financials, which typically include submitting proof of identity and address.

Receive the Bonus:

 	Once your account verification is successfully completed and approved, PM Financials will credit the $50 Forex No Deposit Bonus to your trading account.

Terms and Conditions
Trading Requirements:

 	The PM Financials Forex No Deposit Bonus funds can be used for trading on their platform. While specific trading volume requirements or withdrawal conditions are not detailed here, they typically apply and can be found on PM Financials’ official website.

Withdrawal of Profits:

 	Profits generated from trading with the bonus can usually be withdrawn after meeting certain terms, such as achieving a specified trading volume or maintaining trades for a minimum duration.

Bonus Validity:

 	The duration of the PM Financials Forex No Deposit Bonus is limited, though specifics are not mentioned. For precise details, refer to PM Financials’ terms and conditions or contact their customer support.

Additional Information
Platform Features:

 	PM Financials offers competitive spreads, leverages up to 400:1, and a diverse range of tradable instruments including currency pairs, commodities, indices, and stocks.

Support:

 	PM Financials provides 24/7 customer support to assist clients with any inquiries or issues they may encounter during their trading experience.

By following these steps and complying with the terms and conditions, new traders can effectively utilize the PM Financials $50 Forex No Deposit Bonus to initiate their trading journey without any initial financial commitment. This promotion not only facilitates risk-free exploration of Forex trading but also presents an opportunity to potentially earn profits under favorable conditions. For the latest updates and detailed information about the PM Financials Forex No Deposit Bonus, visit their official website or contact their customer support team directly."
95vkPptn,snowybot 3.14,coinwalk,JavaScript,Monday 17th of June 2024 11:57:43 AM CDT,"elderly      = (balance/1000)
origin       = balance
prefit       = elderly
winnerdinner = balance
tens         = (prefit*10)
sevens       = (prefit*6.9)
eights       = (prefit*7.9)
small        = tens*20
belance      = small
winnerdinner = balance
fools        = balance
freak        = small
joey         = ((math.floor(belance/tens))*tens)
upper        = 6.9
downer       = 2.9
chance       = 49.5
bethigh      = false
nextbet      = prefit
resetstats()



function dobet()
if (win) then
    belance = belance+previousbet
end
if (!win) then
    belance = belance-previousbet
end
if (belance<nextbet) then 
    belance = small
end
if ((belance>(small*2)) and (balance>fools)) then
    belance = small
end
if (belance>(joey+(previousbet*upper))) then
    nextbet = previousbet*2
    upper   = 4.9
    downer  = 4.9
    joey    = belance
end
if (belance<(joey-(previousbet*downer))) then
    nextbet = previousbet*2
    upper   = 4.9
    downer  = 4.9
    joey    = belance
end
if (((nextbet)>=(belance/2)) and (belance>(((math.floor(belance/tens))*tens)+eights))) then
    nextbet = prefit
    upper   = 6.9
    downer  = 2.9
    joey    = ((math.floor(belance/tens))*tens)
end
if (((nextbet)>=(belance/2)) and (belance<(((math.floor(belance/tens))*tens)+sevens))) then
    nextbet = prefit
    upper   = 6.9
    downer  = 2.9
    joey    = ((math.floor(belance/tens))*tens)
    end
if (((nextbet)>=(belance/2)) and (belance>(((math.floor(belance/tens))*tens)+sevens)) and (belance<(((math.floor(belance/tens))*tens)+eights))) then
    nextbet = prefit*2
    upper   = 4.9
    downer  = 4.9
    joey    = belance
    end
if (((nextbet)>=(belance/4)) and (balance>origin) and (belance>(((math.floor(belance/tens))*tens)+eights))) then
    nextbet = prefit
    upper   = 6.9
    downer  = 2.9
    origin  = balance
    joey    = ((math.floor(belance/tens))*tens)
end
if (((nextbet)>=(belance/4)) and (balance>origin) and (belance<(((math.floor(belance/tens))*tens)+sevens))) then
    nextbet = prefit
    upper   = 6.9
    downer  = 2.9
    origin  = balance
    joey    = ((math.floor(belance/tens))*tens)
    end
if (((nextbet)>=(belance/4)) and (balance>origin) and (belance>(((math.floor(belance/tens))*tens)+sevens)) and (belance<(((math.floor(belance/tens))*tens)+eights))) then
    nextbet = prefit*2
    upper   = 4.9
    downer  = 4.9
    origin  = balance
    joey    = belance
    end
if (((nextbet)>=(small)) and (belance>small) and (belance>(((math.floor(belance/tens))*tens)+eights))) then
    nextbet = prefit
    upper   = 6.9
    downer  = 2.9
    origin  = balance
    joey    = ((math.floor(belance/tens))*tens)
    end
if (((nextbet)>=(small)) and (belance>small) and (belance<(((math.floor(belance/tens))*tens)+sevens))) then
    nextbet = prefit
    upper   = 6.9
    downer  = 2.9
    origin  = balance
    joey    = ((math.floor(belance/tens))*tens)
    end
if (((nextbet)>=(small)) and (belance>small) and (belance>(((math.floor(belance/tens))*tens)+sevens)) and (belance<(((math.floor(belance/tens))*tens)+eights))) then
    nextbet = prefit*2
    upper   = 4.9
    downer  = 4.9
    origin  = balance
    joey    = belance
    end
if (balance>=(winnerdinner*24)) then
    stop()
end
end"
56bJvVPw,How To Claim An UNFXB $500 No Deposit Bonus,fxvnpro,PHP,Monday 17th of June 2024 11:49:00 AM CDT,"https://www.fxvnpro.com/how-to-claim-an-unfxb-500-no-deposit-bonus/
 Table of Contents

 	Steps to Claim the UNFXB No Deposit Bonus

 	Register as a New User
 	Open a Trading Account
 	Account Verification


 	Conditions for Profit Withdrawal

 	Trade Volume
 	Trade Duration
 	No Hedging
 	Withdrawal Limit


 	Additional Considerations

Steps to Claim the UNFXB No Deposit Bonus
Register as a New User
The UNFXB No Deposit Bonus is available exclusively to new traders who register with Unicorn Forex Broker (UNFXB) for the first time.
Open a Trading Account

 	Navigate to the official UNFXB promo page.
 	Fill in the necessary information, including your country and email.
 	Go to the M5 Trading Accounts section and open the “No Deposit Bonus” trading account.

Account Verification

 	Complete the email verification process.
 	Complete KYC (Know Your Customer) verification by uploading proof of identity (ID/POI) and proof of address (POA) documents.

Conditions for Profit Withdrawal
Trade Volume
Complete at least 35 standard lots of trades within 30 days.
Trade Duration

 	Each trade must last over 3 minutes. Trades lasting less than 3 minutes will result in the deduction of profits from those trades and an additional 20% deduction from other earned profits.
 	Additionally, trades must be open for a minimum of 5 minutes to be eligible for profit withdrawal.

No Hedging
Trades involving hedging are not allowed.
Withdrawal Limit
Bonuses and profits can be withdrawn up to a maximum of $500 after meeting the trading volume and duration requirements.
Additional Considerations

 	The UNFXB No Deposit Bonus is valid for 30 days from the time it is credited to your account.
 	The promotion may change or be stopped at any time without prior notice.

By following these steps and meeting the specified conditions, you can successfully claim and benefit from the UNFXB No Deposit Bonus."
TmWtjNRz,monitor2.lua,ZathegamE,Lua,Monday 17th of June 2024 11:39:23 AM CDT,"--backtank monitor
local mon = peripheral.find(""monitor"")
mon.setTextScale(2.5)
mon.clear()
mon.setBackgroundColour(colors.black)
mon.setTextColour(colors.white)
lettre = 1
pos = 1
local texte = {
"" "",
"" "",
"" "",
"" "",
""r"",
""e"",
""c"",
""h"",
""a"",
""r"",
""g"",
""e"",
"" "",
""é"",
""q"",
""u"",
""i"",
""p"",
""e"",
""m"",
""e"",
""n"",
""t"",
""  ""
} 
while true do
lettre2 = lettre +1
lettre3 = lettre2 +1
lettre4 = lettre3 +1
lettre5 = lettre4 +1
mon.setCursorPos(2,pos)
mon.write(texte[lettre])
mon.setCursorPos(2,pos + 1)
mon.write(texte[lettre2])
mon.setCursorPos(2,pos + 2)
mon.write(texte[lettre3])
mon.setCursorPos(2,pos + 3)
mon.write(texte[lettre4])
mon.setCursorPos(2,pos + 4)
mon.write(texte[lettre5])
print(texte[lettre])
lettre = lettre + 1
pos = pos
if pos == 25 then
pos = 3
mon.clear()
end
if lettre == 25 then
lettre = 1
mon.clear()
end
sleep(0.5)
end"
QEJfg1Wi,requestbacktank.lua,ZathegamE,Lua,Monday 17th of June 2024 11:30:08 AM CDT,"local integrator = peripheral.find(""redstoneIntegrator"")
local envd = peripheral.find(""environmentDetector"")
local speaker = peripheral.find(""speaker"")
rs.setOutput(""left"",true)
list_ = fs.open(""allow_list.txt"",""r"")
list = textutils.unserialize(list_.readAll())
list_.close()
function has(table,compare)
    for _,b in pairs(table) do
        if b == compare then
            return true
        end
    end
    return false
end  
open = false
function eepy(time)
local timer_id = os.startTimer(time)
local event, id
repeat
    event, id = os.pullEvent(""timer"")
    until id == timer_id
end
while true do
term.clear()
term.setCursorPos(1,1)
term.write(""Solliciter Recharge [o]/[n]"")
term.setCursorPos(1,2) 
open = false
   input = read()
   if input == ""o"" then
     entities = envd.scanEntities(3) or {} 
    for _,tab in pairs(entities) do
        for type,data in pairs(tab) do
            if type == ""name"" then
                if has(list,data) then
                  --  print(data)
                    rs.setOutput(""left"",false)
                    open = true
                    term.clear()
                    term.setCursorPos(1,1)
                    term.write(""Accès accordé"")
					               eepy(28.13)
                    rs.setOutput(""left"",true)
                end
                end
            end
            end
            else
            if input == ""n"" then
            term.write(""ok"")
			sleep(0.5)
            else
			term.write(""accès refusé"")
            sleep(2)
            end
            end
            end
    if not open then
        rs.setOutput(""left"",true)
end"
YfruETUX,Unit_24,lovelyvook,C#,Monday 17th of June 2024 10:52:58 AM CDT,"using System;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string sentence = ""live long and prosper"";
            char symbol = ' ';

            string[] words = sentence.Split(symbol);

            foreach (string word in words)
            {
                Console.WriteLine(word);
            }
        }
    }
}"
xtscCWGd,Untitled,AlexG2230954,F#,Monday 17th of June 2024 10:41:45 AM CDT,"type SmartList<'State, 't> = ('State -> 't -> 'State) -> 'State -> 'State

let fromList L folder state = Seq.fold folder state L

let fold folder state L = L folder state
let map f L folder state = L (fun s el -> folder s (f el)) state
let filter p L folder state =
    let updatedFolder s el =
        if p el then folder s el
        else s
    L updatedFolder state

// check
let result = fromList [1; 2; 3; 4; 5] |> filter (fun x -> x > 2) |> fold (+) 0
printfn ""%A"" result"
jcynR36d,Problem 1 - Registration-exam-mistake!!,MariyanGrigorov,Python,Monday 17th of June 2024 10:41:31 AM CDT,"user = input()
len_user = len(user)
command = input().split()
new_string = user

while command[0] != ""Registration"":
    if command[0] == 'Letters' and command[1] == 'Lower':
        user = user.lower()
        print(user)
    elif command[0] == 'Letters' and command[1] == 'Upper':
        user = user.upper()
        print(user)
    elif command[0] == 'Reverse':
        start = int(command[1])
        end = int(command[2])
        if 0 <= start < len_user and 0 < end < len_user and start < end:
            substring = user[start:end+1][::-1]
            print(substring)
        else:
            print(""Invalid indices. Start and end must be within the username length."")
    elif command[0] == 'Substring':
        if command[1] not in new_string:
            print(f""The username {user} doesn't contain {command[1]}."")
        else:
            new_string = new_string.replace(command[1], '')
            print(new_string)
    elif command[0] == 'Replace':
        new_string = user.replace(command[1], '-')
        print(new_string)
    elif command[0] == 'IsValid':
        if command[1] in user:
            print(""Valid username."")
        else:
            print(f""{command[1]} must be contained in your username."")
    command = input().split()"
0dnGeJN7,Unit_23,lovelyvook,C#,Monday 17th of June 2024 10:37:28 AM CDT,"using System;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int arrayCapacity = 10;
            int[] numbers = new int[arrayCapacity];
            Random random = new Random();
            int lessNumberForRandom = 1;
            int topNumberForRandom = 10;
            int tempNumber;

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(lessNumberForRandom, topNumberForRandom);
                Console.Write(numbers[i] + "" "");
            }

            for (int i = 0; i < numbers.Length; i++)
            {
                for (int j = i + 1; j < numbers.Length; j++)
                {
                    if (numbers[i] > numbers[j])
                    {
                        tempNumber = numbers[i];
                        numbers[i] = numbers[j];
                        numbers[j] = tempNumber;
                    }
                }
            }

            Console.WriteLine();

            foreach (int number in numbers)
            {
                Console.Write(number + "" "");
            }
        }
    }
}"
ZCqaxA0H,Unit_22,lovelyvook,C#,Monday 17th of June 2024 10:15:39 AM CDT,"using System;

namespace Ijunior
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int arrayCapacity = 30;
            int[] numbers = new int[arrayCapacity];
            Random random = new Random();
            int lessNumberForRandom = 1;
            int topNumberForRandom = 10;
            int countRepeatedNumbers = 1;
            int tempCountRepeatedNumbers = 1;
            int maxRepeatedNumber = 0;

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(lessNumberForRandom, topNumberForRandom);
                Console.Write(numbers[i] + "" "");
            }

            for (int i = 0; i < numbers.Length - 1; i++)
            {
                if (numbers[i] == numbers[i + 1])
                {
                    tempCountRepeatedNumbers++;

                    if (countRepeatedNumbers < tempCountRepeatedNumbers)
                    {
                        countRepeatedNumbers = tempCountRepeatedNumbers;
                        maxRepeatedNumber = numbers[i];
                    }
                }
                else
                {
                    tempCountRepeatedNumbers = 1;
                }
            }

            if (countRepeatedNumbers > 1)
            {
                Console.WriteLine($""\n\nЧисло {maxRepeatedNumber} повторяется подряд больше всего раз: {countRepeatedNumbers}"");
            }
            else
            {
                Console.WriteLine(""\n\nНет повтораяющихся подряд чисел"");
            }
        }
    }
}"
SqWi2zAH,[FTU] DST Compendium Code,BeeTufft,HTML,Monday 17th of June 2024 10:14:15 AM CDT,"<!-------------------------------------------------
   |     Don't Starve Together Compendium      |
   |             coded by Beetufft             |  Colours:
   |         Please don't remove credit        |  Text #e7e7db, Light Text #8f8f8f, Buttons #d8ad6d and #ac8855, Links #4e4028
   |                     o                     |
   |  Things such as colour, font, roundness,  |  Roundness:
   | image position are made so that they can  |  0.5em - 1em
   |             be easily changed             |
   |                     o                     | - All links are temporarily #, that's where you insert your links
   |        This code is meant to mimic        | - All fancy icons are from the free section of Font Awesome, you can swap them out for a different feel
   | DST's Compendium, all assets except added | - All things are separated with <!--- and the font is Times New Roman
   |    art belongs to Klei Entertainment      |
-------------------------------------------------->

<!------ Background Image ------>
<div class=""container p-3"" style="" background-image: url(https://f2.toyhou.se/file/f2-toyhou-se/images/79486498_J9WEPfO1neUSqbe.png?1711085173); border-radius:2em; color:#e7e7db; font-family:Times New Roman;"">
  <div class=""row justify-content-center"">
<!------ Background Image END ------>

<!------ Name & Frame Image END ------> 
    <div class=""col-4"">
            <div class=""col m-2"">
             <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83676157_MLUVpEipNnQFmAs.png?1718622012"">
                
             <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83676433_VLiVomDDLHkm2em.png"">
            </div>
<!------ Name & Frame Image END ------>
            
<!------ Stats Section ------>
            <div class=""col justify-content-between"">
                
             <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83677912_kfnLT8TtIw4BpW1.png"">
             <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83677916_sUD6SuHrCCP5Hp4.png"">
             <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83677923_6afvkoxbGnw4F77.png"">
             
            </div>
             
            <div class=""col justify-content-between"" style=""padding-left:35px; padding-right:35px;"">
                 <p style=""background-image: linear-gradient(145deg, #d8ad6d, #ac8855); color: #000000; padding:2px; border-radius:0.1em; box-shadow: 5px 5px 10px; font-size:18px;""><b>150</b></p>
                 <p style=""background-image: linear-gradient(145deg, #d8ad6d, #ac8855); color: #000000; padding:2px; border-radius:0.1em; box-shadow: 5px 5px 10px; font-size:18px;""><b>150</b></p>
                 <p style=""background-image: linear-gradient(145deg, #d8ad6d, #ac8855); color: #000000; padding:2px; border-radius:0.1em; box-shadow: 5px 5px 10px; font-size:18px;""><b>150</b></p>
            </div>
<!------ Stats Section END ------>
             
<!------ Enters Constant With Section ------>
            <div class=""col m-2 pt-2 justify-content-center"">
             <h3>Enters The Constant With</h3>
            </div>
            
            <div class=""col m-2 pb-2 justify-content-center"" style=""height:80px;"">
            <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83680462_lS5rRDgaQTqztp1.png?1718631968"" style=""box-shadow: 5px 5px 10px #000000;"">
            
    <!-------- ADDITIONAL ITEMS UNDER HERE, If only need 1 then delete these!  -------->
            <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83680462_lS5rRDgaQTqztp1.png?1718631968"" style=""box-shadow: 5px 5px 10px #000000; margin-left:10px;"">
            
            <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83680462_lS5rRDgaQTqztp1.png?1718631968"" style=""box-shadow: 5px 5px 10px #000000; margin-left:10px;"">
            
            <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/83680462_lS5rRDgaQTqztp1.png?1718631968"" style=""box-shadow: 5px 5px 10px #000000; margin-left:10px;"">
            </div>
            
    </div>
<!------ Enters Constant With Section END ------>
    
<!------ Compendium Info ------>
    <div class=""col m-2 p-4"">
        
     <div class=""col m-2 p-4"" style=""overflow:auto; height:700px; border-radius:2em; font-size:16px; color::#e7e7db;background-opacity: 0.5;"">
      <h1>The Gentleman Scientist</h1>
      <p style=""color:#8f8f8f;"">At heart Wilson is truely a man of science. It's not in his name to resist the call of the unknown</p>
      
        <br>
        
      <h1>Perks and Quirks</h1>
      <p style=""color:#8f8f8f;"">*Grows a magnificent Beard</p>
      
        <br>
        
      <h1>Quote</h1>
      <p style=""color:#8f8f8f;"">"" I'll conquer this world with the power of my MIND ""</p>
      
        <br>
        
      <h1>Birthday</h1>
      <p style=""color:#8f8f8f;"">April 23</p>
      
        <br>
        
      <h1>Favorite Food</h1>
      <p style=""color:#8f8f8f;"">Bacon and Eggs</p>
      
        <br>
        
      <h1>Secret Knowledge</h1>
      <p style=""color:#8f8f8f;"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin elit sed tellus blandit viverra sed eget odio. Donec accumsan tempor lacus, et venenatis elit feugiat non. Duis porta eros et velit blandit dapibus. Curabitur ac finibus eros. Duis placerat velit vitae massa sodales, eget mattis nibh pellentesque.</p>
     
     </div>
<!------ Compendium Info END ------>
     
<!------ Bottom Boxes ------>
     <div class=""col m-2 p-4 justify-content-center"">
         
        <div class=""col"" style=""background: linear-gradient(to bottom right, #d8ad6d 0%, #ac8855 100%); color: #000000; padding:10px; padding-bottom:0px; margin-right:50px; border-radius:0.5em; box-shadow: 5px 5px 10px; text-align:center;"">
            <h3><a href=""#"" style=""color:#4e4028;"">Voice Claim or Instrument</a></h3>
        </div>
        
        <div class=""col"" style=""background: linear-gradient(to bottom right, #d8ad6d 0%, #ac8855 100%); color: #000000; padding:10px; padding-bottom:0px; border-radius:0.5em; box-shadow: 5px 5px 10px; text-align:center;"">
            <h3><a href=""#"" style=""color:#4e4028;"">Reference</a></h3>
        </div>
        
     </div>
<!------ Bottom Boxes END ------>
     
    </div>
  </div>
</div>

<!------ CREDIT DO NOT REMOVE you can change the font awesome icon though ------>

<div class=""col justify-content-center"">
  <a href=""https://toyhou.se/BeeTufft"" style=""font-size:22px; color:#ac8855;"" class=""tooltipster"" Title=""Code by BEETUFF""><i class=""fa-solid fa-bee""></i></a>
</div>"
pav7Wjai,Untitled,eqeqwan21,JavaScript,Monday 17th of June 2024 10:12:48 AM CDT,"$(async function() {
  $('#notificationBell').hide();
  $('#loader').show();
  let town;
  if (environment.login_name.indexOf(""_"") !== -1) {
    town = '&town='+capitalizeFirstLetter(environment.login_name.split('_')[0])
  }
  else{
    town = ''
  }
  let previousTotal = localStorage.getItem('previousTotal') ? parseInt(localStorage.getItem('previousTotal') - 1) : 0;
  let soundEnabled = false;

  function updateEventData() {
    $.ajax({
      url: environment.base_url+""/""+'?do=api&fn=last_statistic'+town,
      type: 'GET',
      dataType: ""json"",
      success: function(data) {
        let eventData = data.rows[0]
        var eventList = $('#eventList');
        const now = new Date();
        const formattedDateTime = now.toLocaleString();
        const total = eventData.PowerFailureCount + eventData.EquipmentFailureCount + eventData.SipFailureCount + eventData.IpFailureCount + eventData.TimeAlertFailureCount + eventData.ControllerFailureCount + eventData.DoorOpenCount + eventData.SyncFailureCount;
        if (total !== previousTotal) {
          eventList.empty();
          eventList.append('<li class=""datetime"">Current Time: ' + formattedDateTime + '</li>');
          eventList.append('<li>' + i18next.t(""Power Failure"") + ': ' + eventData.PowerFailureCount + '</li>');
          eventList.append('<li>' + i18next.t(""Object Failure"") + ': ' + eventData.EquipmentFailureCount + '</li>');
          eventList.append('<li>' + i18next.t(""SIP failure"") + ':  ' + eventData.SipFailureCount + '</li>');
          eventList.append('<li>' + i18next.t(""IP failure"") + ': ' + eventData.IpFailureCount + '</li>');
          eventList.append('<li>' + i18next.t(""Clock error"") + ': ' + eventData.TimeAlertFailureCount + '</li>');
          eventList.append('<li>' + i18next.t(""Controller error"") + ': ' + eventData.ControllerFailureCount + '</li>');
          eventList.append('<li>' + i18next.t(""Door open"") + ': ' + eventData.DoorOpenCount + '</li>');
          eventList.append('<li>' + i18next.t(""Out of sync"") + ': ' + eventData.SyncFailureCount + '</li>');
          $('#eventCount').text(total)
        } else {
          eventList.find('li.datetime').text('Current Time: ' + formattedDateTime + '')
        }
        $('#loader').hide();
        $('#notificationBell').show();
        if(total > 100){
          $('.notification-container').addClass('large')
        }
        if (total > previousTotal && soundEnabled) {
          $('#notificationSound')[0].play();
        }

        previousTotal = total;
        localStorage.setItem('previousTotal', previousTotal);
      }
    });
  }

  setInterval(updateEventData, 1000);

  $('#eventCount').click(function() {
    $('#eventDropdown').toggle();
  });

  $('#notificationBell').click(function() {
    soundEnabled = true;
    $('#notificationBell').removeClass('disabled').addClass('active');
  });

  $(document).click(function(event) {
    if (!$(event.target).closest('#eventCount, #eventDropdown').length) {
      if ($('#eventDropdown').is("":visible"")) {
        $('#eventDropdown').hide();
      }
    }
  });
});"
Ubgtrj9m,[M] search page scroll fix,petar_bonov,HTML,Monday 17th of June 2024 09:54:01 AM CDT,"<script src=""https://fdn.gsmarena.com/vv/assets12/js/m/decrypt.js?v=1""></script>
<script>
    window.addEventListener(""DOMContentLoaded"", function () {
        const decrypted = document.querySelector(""#decrypted"");

        decryptData(
            IV, KEY, DATA, 
            function (text) {
                decrypted.innerHTML = text;

				// -----------------
                var swiperContainers = [""#news-container"", ""#reviews-container"", ""#latest-container"", ""#instores-container""];
                for (var i = 0; i < swiperContainers.length; i++) {
                    new Swiper(swiperContainers[i], {
                        slidesPerView: 'auto',
                        scrollbar: '.swiper-scrollbar',
                        scrollbarHide: true,  
                        spaceBetween: 0
                    });
                }
				// -----------------
            },
            function (error) {
                decrypted.innerHTML = `<b style=""color: red;"">ERROR:</b> ${error.toString()}`;
            }
        );
    });
</script>"
X9AMWR9Y,邀您一起看：花花影院.DT🐺,xiaomianao666,JavaScript,Monday 17th of June 2024 09:50:12 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥花花影院.DT🐺@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcInRleHRfMVwiLFwibmFtZVwiOlwiQ2xhc3NUYWJcIixcInBhdGhcIjpcIkNsYXNzVGFiXCIsXCJydWxlXCI6XCJ2YXIge1xcbiAgICBRSU5HX1RJVExFLCB0aXRsZSwgdXJsLFxcbiAgICBjbGFzc19uYW1lLCBjbGFzc191cmwsXFxuICAgIGFyZWFfbmFtZSwgYXJlYV91cmwsXFxuICAgIHllYXJfbmFtZSwgeWVhcl91cmwsXFxuICAgIHNvcnRfbmFtZSwgc29ydF91cmxcXG59ID0gJC5pbXBvcnRQYXJhbVxcbmNvbnN0IENsYXNzVGFiID0gZnVuY3Rpb24oY2xhc3NBcnJheSwgcGFyYW1zKSB7XFxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgcGFyYW1zKVxcbiAgICB0aGlzLmFyciA9IGNsYXNzQXJyYXkubWFwKHYgPT4gdGhpcy5pbml0KHYpKVxcbiAgICB0aGlzLnNpZ24gPSAnJCcgKyBRSU5HX1RJVExFICsgJ18nICsgKHRoaXMubmFtZSB8fCAnJykgKyAnXydcXG4gICAgdGhpcy5jb2xvciA9IHRoaXMuY29sb3IgfHwgJyMxMmI2NjgnXFxuICAgIHRoaXMuYm91bmRhcnkgPSB0aGlzLmJvdW5kYXJ5IHx8ICdibGFua19ibG9jaydcXG59XFxuQ2xhc3NUYWIucHJvdG90eXBlID0ge1xcbiAgICBjb25zdHJ1Y3RvcjogQ2xhc3NUYWIsXFxuICAgIGxvYWQoZWwpIHtcXG4gICAgICAgIGxldCBmb2xkZWQgPSB0aGlzLmZvbGQgJiYgZ2V0VmFyKCckZm9sZF8nICsgdGhpcy5zaWduLCAnJylcXG4gICAgICAgIGlmICh0aGlzLmFyci5sZW5ndGggPiAxICYmIHRoaXMuZm9sZCkgZWwucHVzaCh7XFxuICAgICAgICAgICAgdGl0bGU6ICfigJzigJzigJ3igJ0nICsgKGZvbGRlZCA/ICfilrYnIDogJ+KWvCcpLmZvbnRjb2xvcignIzA0OWVmZicpLFxcbiAgICAgICAgICAgIHVybDogJCgnI25vTG9hZGluZyMnKS5sYXp5UnVsZSgoc2lnbiwgZm9sZGVkKSA9PiB7XFxuICAgICAgICAgICAgICAgIHB1dFZhcignJGZvbGRfJyArIHNpZ24sIGZvbGRlZCA/ICcnIDogJ1QnKVxcbiAgICAgICAgICAgICAgICByZWZyZXNoUGFnZShmYWxzZSlcXG4gICAgICAgICAgICAgICAgcmV0dXJuICdoaWtlcjovL2VtcHR5J1xcbiAgICAgICAgICAgIH0sIHRoaXMuc2lnbiwgZm9sZGVkKSxcXG4gICAgICAgICAgICBjb2xfdHlwZTogJ3Njcm9sbF9idXR0b24nXFxuICAgICAgICB9KVxcbiAgICAgICAgbGV0IGFyciA9IGZvbGRlZCA/IFt0aGlzLmFyclswXV0gOiB0aGlzLmFyclxcbiAgICAgICAgYXJyLmZvckVhY2goKHYpID0+IHtcXG4gICAgICAgICAgICBsZXQgeyBpZCwgY2xhc3NfbmFtZSwgY2xhc3NfdXJsIH0gPSB2LFxcbiAgICAgICAgICAgIHNlbGVjdGVkID0gSlNPTi5zdHJpbmdpZnkodGhpcy5nZXRDbGFzcyhpZCkpXFxuICAgICAgICAgICAgY2xhc3NfbmFtZS5mb3JFYWNoKChuYW1lLCBpKSA9PiB7XFxuICAgICAgICAgICAgICAgIGxldCB1cmwgPSBjbGFzc191cmxbaV0sXFxuICAgICAgICAgICAgICAgICAgICBub3cgPSBKU09OLnN0cmluZ2lmeSh7IG5hbWU6IG5hbWUsIHVybDogdXJsIH0pXFxuICAgICAgICAgICAgICAgIGVsLnB1c2goe1xcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHNlbGVjdGVkID09IG5vdyA/ICfigJzigJzigJ3igJ0nICsgbmFtZS5mb250Y29sb3IodGhpcy5jb2xvcikuYm9sZCgpIDogbmFtZSxcXG4gICAgICAgICAgICAgICAgICAgIHVybDogc2VsZWN0ZWQgPT0gbm93ID8gJ2hpa2VyOi8vZW1wdHknIDogJCgnI25vTG9hZGluZyMnKS5sYXp5UnVsZSgoc2lnbiwgaWQsIG5vdykgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHB1dFZhcihzaWduICsgaWQsIG5vdylcXG4gICAgICAgICAgICAgICAgICAgICAgICByZWZyZXNoUGFnZShmYWxzZSlcXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXFxuICAgICAgICAgICAgICAgICAgICB9LCB0aGlzLnNpZ24sIGlkLCBub3cpLFxcbiAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6ICdzY3JvbGxfYnV0dG9uJ1xcbiAgICAgICAgICAgICAgICB9KVxcbiAgICAgICAgICAgIH0pXFxuICAgICAgICAgICAgZWwucHVzaCh7IGNvbF90eXBlOiB0aGlzLmJvdW5kYXJ5IH0pXFxuICAgICAgICB9KVxcbiAgICB9LFxcbiAgICBpbml0KGNsYXNzT2JqZWN0KSB7XFxuICAgICAgICBpZiAodHlwZW9mIGNsYXNzT2JqZWN0LmNsYXNzX25hbWUgPT0gJ3N0cmluZycpXFxuICAgICAgICAgICAgY2xhc3NPYmplY3QuY2xhc3NfbmFtZSA9IGNsYXNzT2JqZWN0LmNsYXNzX25hbWUuc3BsaXQoJyYnKVxcbiAgICAgICAgaWYgKHR5cGVvZiBjbGFzc09iamVjdC5jbGFzc191cmwgPT0gJ3N0cmluZycpXFxuICAgICAgICAgICAgY2xhc3NPYmplY3QuY2xhc3NfdXJsID0gY2xhc3NPYmplY3QuY2xhc3NfdXJsLnNwbGl0KCcmJykubWFwKCh2KSA9PiB2LnRyaW0oKSlcXG4gICAgICAgIHJldHVybiBjbGFzc09iamVjdFxcbiAgICB9LFxcbiAgICBwdXNoKGNsYXNzT2JqZWN0KSB7XFxuICAgICAgICB0aGlzLmFyci5wdXNoKHRoaXMuaW5pdChjbGFzc09iamVjdCkpXFxuICAgIH0sXFxuICAgIGdldENsYXNzKGlkKSB7XFxuICAgICAgICBsZXQgZGVmYXVsdENsYXNzID0gdGhpcy5hcnIuZmluZChpdGVtID0+IGl0ZW0uaWQgPT0gaWQpXFxuICAgICAgICBkZWZhdWx0Q2xhc3MgPSBKU09OLnN0cmluZ2lmeShkZWZhdWx0Q2xhc3MgPyB7XFxuICAgICAgICAgICAgbmFtZTogZGVmYXVsdENsYXNzLmNsYXNzX25hbWVbMF0sXFxuICAgICAgICAgICAgdXJsOiBkZWZhdWx0Q2xhc3MuY2xhc3NfdXJsWzBdXFxuICAgICAgICB9IDogeyBuYW1lOiAgJ2Nhbm5vdCBmaW5kIGlkOiAnICsgaWQgKyAnIGluIGNsYXNzVGFiOiAnICsgdGhpcy5zaWduLCB1cmw6ICcnfSlcXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGdldFZhcih0aGlzLnNpZ24gKyBpZCwgZGVmYXVsdENsYXNzKSlcXG4gICAgfSxcXG4gICAgc2V0VXJsKHVybCkge1xcbiAgICAgICAgcmV0dXJuIHVybC5yZXBsYWNlKC9cXFxcJFxcXFx7KFtefV0qKVxcXFx9L2csIChfLCBpZCkgPT4gdGhpcy5nZXRDbGFzcyhpZCkudXJsKVxcbiAgICB9XFxufVxcbi8vIOeUn+aIkOWktOmDqOWIhuexu1xcbmxldCBmeUFsbCA9IHVybC5pbmNsdWRlcygnZnlBbGwnKSxcXG4gICAgdGFiSGVhZGVyID0gW11cXG5pZiAoY2xhc3NfbmFtZSkgdGFiSGVhZGVyLnB1c2goe1xcbiAgICBpZDogZnlBbGwgPyAnZnlBbGwnIDogJ2Z5Y2xhc3MnLFxcbiAgICBjbGFzc19uYW1lOiBjbGFzc19uYW1lLFxcbiAgICBjbGFzc191cmw6IGNsYXNzX3VybFxcbn0pXFxuaWYgKGFyZWFfbmFtZSkgdGFiSGVhZGVyLnB1c2goe1xcbiAgICBpZDogZnlBbGwgPyAnZnlBbGwnIDogJ2Z5YXJlYScsXFxuICAgIGNsYXNzX25hbWU6IGFyZWFfbmFtZSxcXG4gICAgY2xhc3NfdXJsOiBhcmVhX3VybFxcbn0pXFxuaWYgKHllYXJfbmFtZSkgdGFiSGVhZGVyLnB1c2goe1xcbiAgICBpZDogZnlBbGwgPyAnZnlBbGwnIDogJ2Z5eWVhcicsXFxuICAgIGNsYXNzX25hbWU6IHllYXJfbmFtZSxcXG4gICAgY2xhc3NfdXJsOiB5ZWFyX3VybFxcbn0pXFxuaWYgKHNvcnRfbmFtZSkgdGFiSGVhZGVyLnB1c2goe1xcbiAgICBpZDogZnlBbGwgPyAnZnlBbGwnIDogJ2Z5c29ydCcsXFxuICAgIGNsYXNzX25hbWU6IHNvcnRfbmFtZSxcXG4gICAgY2xhc3NfdXJsOiBzb3J0X3VybFxcbn0pXFxuJC5leHBvcnRzID0ge1xcbiAgICBmeUFsbDogZnlBbGwsXFxuICAgIHRhYkhlYWRlcjogbmV3IENsYXNzVGFiKHRhYkhlYWRlciwgeyBuYW1lOiB0aXRsZSwgZm9sZDogcmVhZEZpbGUoJ3RhYkZvbGQnKSwgfSlcXG59XFxuXCJ9LHtcImNvbF90eXBlXCI6XCJpY29uXzJfcm91bmRcIixcIm5hbWVcIjpcIuiuvue9rlwiLFwicGF0aFwiOlwiQ29uZmlnXCIsXCJydWxlXCI6XCJqczpcXG5hZGRMaXN0ZW5lcignb25DbG9zZScsICdjbGVhck15VmFyKFxcXCJzb3J0RmxhZ1xcXCIpO3JlZnJlc2hQYWdlKCknKVxcbnNldFBhZ2VUaXRsZSgn4pqZIOi9u+WQiOmbhuiuvue9riDimpknKVxcbmNvbnN0IFFJTkdfVElUTEUgPSBnZXRNeVZhcignbXlDb2xsZWN0aW9uJyksXFxuICAgIHVybCA9IGdldE15VmFyKCdyZW1vdGVVcmwnKVxcbmxldCBkYXRhID0gJC5yZXF1aXJlKCdoaWtlcjovL3BhZ2UvZGF0YUxvYWQ/cnVsZT0nICsgUUlOR19USVRMRSwgdHJ1ZSksXFxuICAgIGVsID0gW3tcXG4gICAgICAgIHRpdGxlOiAnPGI+IOa4hemZpOe8k+WtmO+8jOeri+WNs+abtOaWsCA8c21hbGw+IO+8iOWfuuS6jui/nOeoi+S7k+W6k++8jOS4jeimgemikee5geeCueWHu++8iScsXFxuICAgICAgICB1cmw6ICQoJyNub0xvYWRpbmcjJykubGF6eVJ1bGUoKHVybCkgPT4ge1xcbiAgICAgICAgICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnaGlrZXI6Ly8nKSB8fCB1cmwuc3RhcnRzV2l0aCgnZmlsZTovLycpKVxcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3RvYXN0Oi8v5LuT5bqT5Li65pys5Zyw5paH5Lu277yM5LiN5Lya6L+b6KGM57yT5a2Y77yM5pys5Yqf6IO95Lmf5peg5pWIJ1xcbiAgICAgICAgICAgIGRlbGV0ZUNhY2hlKHVybClcXG4gICAgICAgICAgICBiYWNrKGZhbHNlKVxcbiAgICAgICAgICAgIHJldHVybiAndG9hc3Q6Ly/lt7Lmm7TmlrAnXFxuICAgICAgICB9LCB1cmwpLFxcbiAgICAgICAgaW1nOiAnaGlrZXI6Ly9pbWFnZXMvaWNvbjQnLFxcbiAgICAgICAgY29sX3R5cGU6ICdhdmF0YXInXFxuICAgIH1dLFxcbiAgICB1cGRhdGVJbnRlcnZhbCA9IHJlYWRGaWxlKCd1cGRhdGVJbnRlcnZhbCcpIHx8ICcxJyxcXG4gICAgbmV3V2luZG93ID0gcmVhZEZpbGUoJ25ld1dpbmRvdycpLFxcbiAgICB0YWJGb2xkID0gcmVhZEZpbGUoJ3RhYkZvbGQnKSxcXG4gICAgZGlzYWJsZUN1c3RvbSA9IHJlYWRGaWxlKCdkaXNhYmxlQ3VzdG9tJyksXFxuICAgIGVkaXRNb2RlID0gZGlzYWJsZUN1c3RvbSA/ICflr7zlhaXmtbfpmJQnIDogZ2V0TXlWYXIoJ2VkaXRNb2RlJywgJ+WQr+eUqC/npoHnlKgnKVxcblxcbmVsLnB1c2goe1xcbiAgICB0aXRsZTogJyAg8J+SoSDmm7TmlrDpopHnjoc6ICcgKyAodXBkYXRlSW50ZXJ2YWwgPT0gMCA/ICfmiYvliqgnIDogdXBkYXRlSW50ZXJ2YWwgKyAn5aSpJykgKyAnICAnLFxcbiAgICB1cmw6ICQodXBkYXRlSW50ZXJ2YWwsICfovpPlhaXmm7TmlrDpl7TpmpTvvIjlpKnvvInvvIzkuLow5YiZ5omL5Yqo5pu05pawXFxcXG7mnKzlnLDmlofku7bpk77mjqXml6DmlYgnKS5pbnB1dCgoKSA9PiB7XFxuICAgICAgICBpbnB1dCA9IHBhcnNlSW50KGlucHV0KVxcbiAgICAgICAgaWYgKE51bWJlci5pc05hTihpbnB1dCkpIGlucHV0ID0gMVxcbiAgICAgICAgZWxzZSBpZiAoaW5wdXQgPCAxKSBpbnB1dCA9IDBcXG4gICAgICAgIHNhdmVGaWxlKCd1cGRhdGVJbnRlcnZhbCcsIGlucHV0LnRvU3RyaW5nKCkpXFxuICAgICAgICByZWZyZXNoUGFnZSgpXFxuICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXFxuICAgIH0pLFxcbiAgICBjb2xfdHlwZTogJ3Njcm9sbF9idXR0b24nXFxufSwge1xcbiAgICB0aXRsZTogJyAg8J+WpSDni6znq4vpppbpobU6ICcgKyAobmV3V2luZG93ID8gJ+aYrycgOiAn5ZCmJykgKyAnICAnLFxcbiAgICB1cmw6ICQoJyNub0xvYWRpbmcjJykubGF6eVJ1bGUoKG5ld1dpbmRvdykgPT4ge1xcbiAgICAgICAgc2F2ZUZpbGUoJ25ld1dpbmRvdycsIG5ld1dpbmRvdyA/ICcnIDogJ1QnKVxcbiAgICAgICAgcmVmcmVzaFBhZ2UoKVxcbiAgICAgICAgcmV0dXJuICdoaWtlcjovL2VtcHR5J1xcbiAgICB9LCBuZXdXaW5kb3cpLFxcbiAgICBjb2xfdHlwZTogJ3Njcm9sbF9idXR0b24nXFxufSwge1xcbiAgICB0aXRsZTogJyAg8J+SoCDliIbnsbvmipjlj6A6ICcgKyAodGFiRm9sZCA/ICfmmK8nIDogJ+WQpicpICsgJyAgJyxcXG4gICAgdXJsOiAkKCcjbm9Mb2FkaW5nIycpLmxhenlSdWxlKCh0YWJGb2xkKSA9PiB7XFxuICAgICAgICBzYXZlRmlsZSgndGFiRm9sZCcsIHRhYkZvbGQgPyAnJyA6ICdUJylcXG4gICAgICAgIHJlZnJlc2hQYWdlKClcXG4gICAgICAgIHJldHVybiAnaGlrZXI6Ly9lbXB0eSdcXG4gICAgfSwgdGFiRm9sZCksXFxuICAgIGNvbF90eXBlOiAnc2Nyb2xsX2J1dHRvbidcXG59LCB7XFxuICAgIHRpdGxlOiAnICDwn5K8IOWkh+S7veaBouWkjSAgJyxcXG4gICAgdXJsOiAkKFsn5aSH5Lu9JywgJ+aBouWkjSddLCAxKS5zZWxlY3QoKFFJTkdfVElUTEUsIHVwZGF0ZUludGVydmFsLCBuZXdXaW5kb3csIHRhYkZvbGQsIGRpc2FibGVDdXN0b20pID0+IHtcXG4gICAgICAgIGxldCB1cmwgPSBnZXRNeVZhcigncmVtb3RlVXJsJylcXG4gICAgICAgIGlmICghdXJsLnN0YXJ0c1dpdGgoJ2hpa2VyOi8vJykgJiYgIXVybC5zdGFydHNXaXRoKCdmaWxlOi8vJykpXFxuICAgICAgICAgICAgdXJsID0gJ2hpa2VyOi8vZmlsZXMvbGlicy8nICsgbWQ1KHVybCkgKyAnLmpzJ1xcbiAgICAgICAgZWxzZSBpZiAodXJsLnN0YXJ0c1dpdGgoJ2hpa2VyOi8vcGFnZS8nKSkgdXJsID0gJ2hpa2VyOi8vZW1wdHknXFxuICAgICAgICBpZiAoaW5wdXQgPT0gJ+Wkh+S7vScpIHJldHVybiAkKCdoaWtlcjovL2ZpbGVzL3RtcC8nICsgUUlOR19USVRMRSArICdfYmFja3VwLmpzb24nLCAn6L6T5YWl5aSH5Lu96Lev5b6EJylcXG4gICAgICAgICAgICAuaW5wdXQoKHVybCwgdXBkYXRlSW50ZXJ2YWwsIG5ld1dpbmRvdywgdGFiRm9sZCwgZGlzYWJsZUN1c3RvbSkgPT4ge1xcbiAgICAgICAgICAgICAgICBsZXQgcnVsZXMgPSByZXF1ZXN0KHVybCksXFxuICAgICAgICAgICAgICAgICAgICBjdXN0b21EYXRhID0gcmVhZEZpbGUoJ2N1c3RvbURhdGEnKVxcbiAgICAgICAgICAgICAgICB3cml0ZUZpbGUoaW5wdXQsIEpTT04uc3RyaW5naWZ5KHtcXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZUludGVydmFsOiB1cGRhdGVJbnRlcnZhbCxcXG4gICAgICAgICAgICAgICAgICAgIG5ld1dpbmRvdzogbmV3V2luZG93LFxcbiAgICAgICAgICAgICAgICAgICAgdGFiRm9sZDogdGFiRm9sZCxcXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVDdXN0b206IGRpc2FibGVDdXN0b20sXFxuICAgICAgICAgICAgICAgICAgICBjdXN0b21EYXRhOiBjdXN0b21EYXRhLFxcbiAgICAgICAgICAgICAgICAgICAgcnVsZXM6IHJ1bGVzXFxuICAgICAgICAgICAgICAgIH0pKVxcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3RvYXN0Oi8v5bey5aSH5Lu977yM5rOo5oSP6Iul5LuT5bqT5Li65a2Q6aG16Z2i5YiZ5LiN5aSH5Lu9J1xcbiAgICAgICAgICAgIH0sIHVybCwgdXBkYXRlSW50ZXJ2YWwsIG5ld1dpbmRvdywgdGFiRm9sZCwgZGlzYWJsZUN1c3RvbSlcXG4gICAgICAgIGVsc2UgcmV0dXJuICQoJ2hpa2VyOi8vZmlsZXMvdG1wLycgKyBRSU5HX1RJVExFICsgJ19iYWNrdXAuanNvbicsICfovpPlhaXlpIfku73ot6/lvoQnKS5pbnB1dCgodXJsKSA9PiB7XFxuICAgICAgICAgICAgbGV0IHsgdXBkYXRlSW50ZXJ2YWwsIG5ld1dpbmRvdywgdGFiRm9sZCwgZGlzYWJsZUN1c3RvbSwgY3VzdG9tRGF0YSwgcnVsZXMgfSA9IEpTT04ucGFyc2UocmVxdWVzdChpbnB1dCkpXFxuICAgICAgICAgICAgc2F2ZUZpbGUoJ3VwZGF0ZUludGVydmFsJywgdXBkYXRlSW50ZXJ2YWwpXFxuICAgICAgICAgICAgc2F2ZUZpbGUoJ25ld1dpbmRvdycsIG5ld1dpbmRvdylcXG4gICAgICAgICAgICBzYXZlRmlsZSgndGFiRm9sZCcsIHRhYkZvbGQpXFxuICAgICAgICAgICAgc2F2ZUZpbGUoJ2Rpc2FibGVDdXN0b20nLCBkaXNhYmxlQ3VzdG9tKVxcbiAgICAgICAgICAgIHNhdmVGaWxlKCdjdXN0b21EYXRhJywgY3VzdG9tRGF0YSlcXG4gICAgICAgICAgICBpZiAocnVsZXMpIHdyaXRlRmlsZSh1cmwsIHJ1bGVzKVxcbiAgICAgICAgICAgIHJlZnJlc2hQYWdlKClcXG4gICAgICAgICAgICByZXR1cm4gJ3RvYXN0Oi8v5bey5oGi5aSN77yM5aaC5p6c5LiN5oOz5ZCM5q2l6L+c56iL5LuT5bqT77yM5Y+v5Lul6K6+572u5pu05paw6aKR546H5Li65omL5YqoJ1xcbiAgICAgICAgfSwgdXJsKVxcbiAgICB9LCBRSU5HX1RJVExFLCB1cGRhdGVJbnRlcnZhbCwgbmV3V2luZG93LCB0YWJGb2xkLCBkaXNhYmxlQ3VzdG9tKSxcXG4gICAgY29sX3R5cGU6ICdzY3JvbGxfYnV0dG9uJ1xcbn0sIHtcXG4gICAgdGl0bGU6ICfigJzigJzigJ3igJ08Zm9udCBjb2xvcj1cXFwiIzY2NjY2NlxcXCI+PHNtYWxsPueJueWIq+m4o+iwou+8jOWwj+eoi+W6j+aPkOS+m+iAhe+8mlxcXFxuJyArXFxuICAgICAgICBkYXRhLnJlZHVjZSgoc2VsZiwgdikgPT4gdi5hdXRob3IgPyBzZWxmLmNvbmNhdCh2LmF1dGhvci5zcGxpdCgnJicpKSA6IHNlbGYsIFtdKVxcbiAgICAgICAgLmZpbHRlcigodiwgaSwgYXJyKSA9PiB2ICYmIGFyci5pbmRleE9mKHYpID09IGkpLmpvaW4oJ+OAgScpLFxcbiAgICB1cmw6ICdoaWtlcjovL2VtcHR5JyxcXG4gICAgY29sX3R5cGU6ICd0ZXh0X2NlbnRlcl8xJ1xcbn0pXFxuXFxuZWwucHVzaCh7IGNvbF90eXBlOiAnbGluZScgfSwge1xcbiAgICB0aXRsZTogJ+KAnOKAnOKAneKAnScgKyAn8J+TnScuc21hbGwoKSArICcmbmJzcCDovbvlkIjpm4boh6rlrprkuYkgJm5ic3AnLmJvbGQoKS5mb250Y29sb3IoJyM3NTc1NzUnKSArIChkaXNhYmxlQ3VzdG9tID8gJ+KdjCcgOiAn4q2VJykuc21hbGwoKSxcXG4gICAgdXJsOiAkKFsoZGlzYWJsZUN1c3RvbSA/ICflkK/nlKgnIDogJ+emgeeUqCcpICsgJ+WQiOmbhuiHquWumuS5iScsICfmuIXpmaToh6rlrprkuYnmlbDmja4nLCAn57yW6L6RSlNPTiddLCAxKS5zZWxlY3QoKCkgPT4ge1xcbiAgICAgICAgc3dpdGNoIChpbnB1dC5zbGljZSgwLCAyKSkge1xcbiAgICAgICAgICAgIGNhc2UgJ+a4hemZpCc6XFxuICAgICAgICAgICAgICAgIGRlbGV0ZUZpbGUoJ2N1c3RvbURhdGEnKVxcbiAgICAgICAgICAgICAgICBicmVha1xcbiAgICAgICAgICAgIGNhc2UgJ+WQr+eUqCc6XFxuICAgICAgICAgICAgICAgIHNhdmVGaWxlKCdkaXNhYmxlQ3VzdG9tJywgJycpXFxuICAgICAgICAgICAgICAgIGJyZWFrXFxuICAgICAgICAgICAgY2FzZSAn56aB55SoJzpcXG4gICAgICAgICAgICAgICAgc2F2ZUZpbGUoJ2Rpc2FibGVDdXN0b20nLCAnVCcpXFxuICAgICAgICAgICAgICAgIGlucHV0ICs9ICdcXFxcbuWwj+eoi+W6j+WQr+eUqC/npoHnlKjjgIHph43mlrDmjpLluo/nrYnmk43kvZzlnYfkuI3kvJrkvZPnjrDlnKjpppbpobXlsI/nqIvluo/liJfooajkuK0nXFxuICAgICAgICAgICAgICAgIGJyZWFrXFxuICAgICAgICAgICAgY2FzZSAn57yW6L6RJzpcXG4gICAgICAgICAgICAgICAgbGV0IHVybCA9IGdldE15VmFyKCdyZW1vdGVVcmwnKVxcbiAgICAgICAgICAgICAgICBpZiAoIXVybC5zdGFydHNXaXRoKCdoaWtlcjovL2ZpbGVzLycpICYmICF1cmwuc3RhcnRzV2l0aCgnZmlsZTovLycpKVxcbiAgICAgICAgICAgICAgICAgICAgdXJsID0gJ2hpa2VyOi8vZmlsZXMvbGlicy8nICsgbWQ1KHVybCkgKyAnLmpzJ1xcbiAgICAgICAgICAgICAgICByZXR1cm4gICdoaWtlcjovL3BhZ2UvaW50ZXJmYWNlI25vUmVmcmVzaCMjbm9IaXN0b3J5IyNub1JlY29yZEhpc3RvcnkjP3J1bGU9SlNPTue8lui+keWZqCZKc29uPScrYmFzZTY0RW5jb2RlKHVybClcXG4gICAgICAgIH1cXG4gICAgICAgIHJlZnJlc2hQYWdlKGZhbHNlKVxcbiAgICAgICAgcmV0dXJuICd0b2FzdDovL+W3sicgKyBpbnB1dFxcbiAgICB9KSxcXG4gICAgY29sX3R5cGU6ICd0ZXh0X2NlbnRlcl8xJyxcXG4gICAgZXh0cmE6IHsgbGluZVZpc2libGU6IGZhbHNlIH1cXG59KTtcXG4oZGlzYWJsZUN1c3RvbSA/IFsn5a+85YWl5rW36ZiUJ10gOiBbJ+WQr+eUqC/npoHnlKgnLCAn6YeN5paw5o6S5bqPJywgJ+abtOaUueWbvuaghycsICflr7zlhaXmtbfpmJQnXSkuZm9yRWFjaCgodikgPT4ge1xcbiAgICBlbC5wdXNoKHtcXG4gICAgICAgIHRpdGxlOiB2ID09IGVkaXRNb2RlID8gJ+KAnOKAnOKAneKAnScgKyB2LmJvbGQoKS5mb250Y29sb3IoJyMxMmI2NjgnKSA6IHYsXFxuICAgICAgICB1cmw6IHYgPT0gZWRpdE1vZGUgPyAnaGlrZXI6Ly9lbXB0eScgOiAkKCcjbm9Mb2FkaW5nIycpLmxhenlSdWxlKCh2KSA9PiB7XFxuICAgICAgICAgICAgcHV0TXlWYXIoJ2VkaXRNb2RlJywgdilcXG4gICAgICAgICAgICByZWZyZXNoUGFnZShmYWxzZSlcXG4gICAgICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXFxuICAgICAgICB9LCB2KSxcXG4gICAgICAgIGNvbF90eXBlOiAnc2Nyb2xsX2J1dHRvbidcXG4gICAgfSlcXG59KTtcXG5pZiAoZWRpdE1vZGUgPT0gJ+WvvOWFpea1t+mYlCcpIGVsLnB1c2goe1xcbiAgICB0aXRsZTogJ+WFqOmDqOWvvOWFpScsXFxuICAgIHVybDogJ+a1t+mYlOinhueVjO+/pWhvbWVfcnVsZV91cmzvv6UnICsgKHVybC5zdGFydHNXaXRoKCdoaWtlcjovLycpIHx8IHVybC5zdGFydHNXaXRoKCdmaWxlOi8vJykgPyB1cmwgOiAnaGlrZXI6Ly9maWxlcy9saWJzLycgKyBtZDUodXJsKSArICcuanMnKSxcXG4gICAgY29sX3R5cGU6ICd0ZXh0X2NlbnRlcl8xJyxcXG4gICAgZXh0cmE6IHsgbGluZVZpc2libGU6IGZhbHNlIH1cXG59KTtcXG4oZGlzYWJsZUN1c3RvbSA/IGRhdGEgOiBKU09OLnBhcnNlKHJlYWRGaWxlKCdjdXN0b21EYXRhJykgfHwgJ1tdJykpLmZvckVhY2goKHYsIGkpID0+IHtcXG4gICAgbGV0IGQgPSB7IHRpdGxlOiB2LnRpdGxlLCBpbWc6IGRhdGFbaV0uaWNvbiB9XFxuICAgIHN3aXRjaCAoZWRpdE1vZGUpIHtcXG4gICAgICAgIGNhc2UgJ+WQr+eUqC/npoHnlKgnOlxcbiAgICAgICAgICAgIGQudGl0bGUgPSAodi52aXNpYmxlID8gJ/Cfn6IgICcgOiAn8J+UtCAgJykgKyBkLnRpdGxlXFxuICAgICAgICAgICAgZC51cmwgPSAkKCcjbm9Mb2FkaW5nIycpLmxhenlSdWxlKChpKSA9PiB7XFxuICAgICAgICAgICAgICAgIGxldCBydWxlcyA9IEpTT04ucGFyc2UocmVhZEZpbGUoJ2N1c3RvbURhdGEnKSB8fCAnW10nKVxcbiAgICAgICAgICAgICAgICBydWxlc1tpXS52aXNpYmxlID0gIXJ1bGVzW2ldLnZpc2libGVcXG4gICAgICAgICAgICAgICAgc2F2ZUZpbGUoJ2N1c3RvbURhdGEnLCBKU09OLnN0cmluZ2lmeShydWxlcykpXFxuICAgICAgICAgICAgICAgIHJlZnJlc2hQYWdlKGZhbHNlKVxcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXFxuICAgICAgICAgICAgfSwgaSlcXG4gICAgICAgICAgICBicmVha1xcbiAgICAgICAgY2FzZSAn6YeN5paw5o6S5bqPJzpcXG4gICAgICAgICAgICBsZXQgc29ydEZsYWcgPSBwYXJzZUludChnZXRNeVZhcignc29ydEZsYWcnLCAnLTEnKSlcXG4gICAgICAgICAgICBkLnRpdGxlID0gKHNvcnRGbGFnID09IGkgPyAn8J+UgyAgJyA6ICcnKSArIGQudGl0bGVcXG4gICAgICAgICAgICBpZiAoc29ydEZsYWcgPT0gLTEpXFxuICAgICAgICAgICAgICAgIGQudXJsID0gJCgnI25vTG9hZGluZyMnKS5sYXp5UnVsZSgoaSkgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgcHV0TXlWYXIoJ3NvcnRGbGFnJywgaS50b1N0cmluZygpKVxcbiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoZmFsc2UpXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ3RvYXN0Oi8v6YCJ5oup6KaB56e75Yqo5Yiw55qE5L2N572uJ1xcbiAgICAgICAgICAgICAgICB9LCBpKVxcbiAgICAgICAgICAgIGVsc2VcXG4gICAgICAgICAgICAgICAgZC51cmwgPSAkKCcjbm9Mb2FkaW5nIycpLmxhenlSdWxlKChvbGRJbmRleCwgbmV3SW5kZXgpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgIGxldCBydWxlcyA9IEpTT04ucGFyc2UocmVhZEZpbGUoJ2N1c3RvbURhdGEnKSB8fCAnW10nKVxcbiAgICAgICAgICAgICAgICAgICAgcnVsZXMuc3BsaWNlKG5ld0luZGV4LCAwLCBydWxlcy5zcGxpY2Uob2xkSW5kZXgsIDEpWzBdKVxcbiAgICAgICAgICAgICAgICAgICAgc2F2ZUZpbGUoJ2N1c3RvbURhdGEnLCBKU09OLnN0cmluZ2lmeShydWxlcykpXFxuICAgICAgICAgICAgICAgICAgICBwdXRNeVZhcignc29ydEZsYWcnLCAnLTEnKVxcbiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoZmFsc2UpXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXFxuICAgICAgICAgICAgICAgIH0sIHNvcnRGbGFnLCBpKVxcbiAgICAgICAgICAgIGJyZWFrXFxuICAgICAgICBjYXNlICfmm7TmlLnlm77moIcnOlxcbiAgICAgICAgICAgIGQudXJsID0gJCh2Lmljb24gfHwgJycsICfovpPlhaXmlrDlm77moIflnLDlnYDmiJbpopzoibLku6PnoIHvvJonKS5pbnB1dCgoaSkgPT4ge1xcbiAgICAgICAgICAgICAgICBsZXQgcnVsZXMgPSBKU09OLnBhcnNlKHJlYWRGaWxlKCdjdXN0b21EYXRhJykgfHwgJ1tdJylcXG4gICAgICAgICAgICAgICAgaWYgKGlucHV0KVxcbiAgICAgICAgICAgICAgICAgICAgcnVsZXNbaV0uaWNvbiA9IGlucHV0XFxuICAgICAgICAgICAgICAgIGVsc2VcXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBydWxlc1tpXS5pY29uXFxuICAgICAgICAgICAgICAgIHNhdmVGaWxlKCdjdXN0b21EYXRhJywgSlNPTi5zdHJpbmdpZnkocnVsZXMpKVxcbiAgICAgICAgICAgICAgICByZWZyZXNoUGFnZShmYWxzZSlcXG4gICAgICAgICAgICAgICAgcmV0dXJuICdoaWtlcjovL2VtcHR5J1xcbiAgICAgICAgICAgIH0sIGkpXFxuICAgICAgICAgICAgYnJlYWtcXG4gICAgICAgIGNhc2UgJ+WvvOWFpea1t+mYlCc6XFxuICAgICAgICAgICAgZC51cmwgPSAkKCcjbm9Mb2FkaW5nIycpLmxhenlSdWxlKChpKSA9PiB7XFxuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gJC5yZXF1aXJlKCdoaWtlcjovL3BhZ2UvZGF0YUxvYWQ/cnVsZT0nICsgZ2V0TXlWYXIoJ215Q29sbGVjdGlvbicpLCB0cnVlKVxcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3J1bGU6Ly8nICsgYmFzZTY0RW5jb2RlKEpTT04uc3RyaW5naWZ5KGRhdGFbaV0pKVxcbiAgICAgICAgICAgIH0sIGkpXFxuICAgICAgICAgICAgYnJlYWtcXG4gICAgfVxcbiAgICBlbC5wdXNoKGQpXFxufSlcXG5zZXRSZXN1bHQoZWwpXFxuXCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLpobXpnaLovb3lhaVcIixcInBhdGhcIjpcImZyYW1lTG9hZFwiLFwicnVsZVwiOlwianM6XFxuY29uc3QgUUlOR19USVRMRSA9IGdldE15VmFyKCdteUNvbGxlY3Rpb24nKVxcbnZhciBteUNvbGxfZWwgPSBbXVxcbmV2YWwoSlNPTi5wYXJzZShmZXRjaCgnaGlrZXI6Ly9wYWdlL2hpamFja0Vudj9ydWxlPScgKyBRSU5HX1RJVExFKSkucnVsZSlcXG5cXG5pZiAoIWlzSW5kZXgpIHtcXG4gICAgaWYgKHBhZ2VUaXRsZSkgc2V0UGFnZVRpdGxlKHBhZ2VUaXRsZSlcXG4gICAgc2V0TGFzdENoYXB0ZXJSdWxlKG9yaVJVTEUubGFzdF9jaGFwdGVyX3J1bGUpXFxuICAgIE1ZX1BBUkFNUyA9IE1ZX1JVTEUucGFyYW1zXFxufSBlbHNlIGlmIChNWV9QQUdFID09IDEpIHtcXG4gICAgdGFiSGVhZGVyLmxvYWQobXlDb2xsX2VsKVxcbiAgICBpZiAoUlVMRS5zZWFyY2hfdXJsKSBteUNvbGxfZWwucHVzaCh7XFxuICAgICAgICB0aXRsZTogXFxcIuaQnOe0olxcXCIsXFxuICAgICAgICBkZXNjOiBcXFwi6L+Z5piv6L275ZCI6ZuG55qE5pCc57Si5ZOmfn5cXFwiLFxcbiAgICAgICAgdXJsOiAnXFxcImhpa2VyOi8vc2VhcmNoP3M9XFxcIitpbnB1dCcsXFxuICAgICAgICBleHRyYToge1xcbiAgICAgICAgICAgIHJ1bGVzOiAkLnRvU3RyaW5nKChRSU5HX1RJVExFLCB0aXRsZSkgPT4ge1xcbiAgICAgICAgICAgICAgICBsZXQgcnVsZXMgPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9kYXRhTG9hZD9ydWxlPScgKyBRSU5HX1RJVExFKVxcbiAgICAgICAgICAgICAgICBydWxlcyA9IFtydWxlcy5maW5kKCh2KSA9PiB2LnRpdGxlID09IHRpdGxlKV1cXG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHJ1bGVzKVxcbiAgICAgICAgICAgIH0sIFFJTkdfVElUTEUsIFJVTEUudGl0bGUpLFxcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogZ2V0TXlWYXIoJ3NlYXJjaEtleScsICcnKSxcXG4gICAgICAgICAgICBvbkNoYW5nZTogXFxcInB1dE15VmFyKCdzZWFyY2hLZXknLGlucHV0KVxcXCJcXG4gICAgICAgIH0sXFxuICAgICAgICBjb2xfdHlwZTogXFxcImlucHV0XFxcIixcXG4gICAgfSlcXG59XFxuLy8g5q2j5paH6Kej5p6QXFxudmFyIHtcXG4gICAgcGFyYW1IYW5kbGUsXFxuICAgIHJ1blByZVJ1bGUsXFxuICAgIGdlbkV4VXJsLFxcbiAgICBoaWphY2tMYXp5UnVsZVxcbn0gPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9mdW5jVG9vbHM/cnVsZT0nICsgUUlOR19USVRMRSlcXG5ydW5QcmVSdWxlKG9yaVJVTEUucHJlUnVsZSlcXG5pZiAoTVlfUlVMRS5maW5kX3J1bGUuc3RhcnRzV2l0aCgnanM6JykpIHtcXG4gICAgbGV0IHsgaGlqYWNrRWwgfSA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2Z1bmNUb29scz9ydWxlPScgKyBRSU5HX1RJVExFKVxcbiAgICBzZXRSZXN1bHQgPSBmdW5jdGlvbihwYXJhbTAsIHBhcmFtMSwgcGFyYW0yLCBwYXJhbTMpIHtcXG4gICAgICAgIHBhcmFtMSA9IENBTExCQUNLX0tFWVxcbiAgICAgICAgcGFyYW0yID0gTVlfUlVMRVxcbiAgICAgICAgcGFyYW0zID0gTVlfVFlQRVxcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW0wLmRhdGEpKSBwYXJhbTAgPSBwYXJhbTAuZGF0YVxcbiAgICAgICAgQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkobXlDb2xsX2VsLCBwYXJhbTAubWFwKGhpamFja0VsKSlcXG4gICAgICAgIG1ldGhvZF9zZXRSZXN1bHQuaW52b2tlKGphdmFDb250ZXh0LCBteUNvbGxfZWwsIHBhcmFtMSwgcGFyYW0yLCBwYXJhbTMpXFxuICAgIH1cXG4gICAgc2V0SG9tZVJlc3VsdCA9IHNldFJlc3VsdFxcbiAgICBzZXRTZWFyY2hSZXN1bHQgPSBzZXRSZXN1bHRcXG5cXG4gICAgZXZhbChNWV9SVUxFLmZpbmRfcnVsZS5zbGljZSgzKSlcXG59IGVsc2Uge1xcbiAgICBsZXQgeyBydW5Db2RlIH0gPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9mdW5jVG9vbHM/cnVsZT0nICsgUUlOR19USVRMRSksXFxuICAgICAgICBbXywgZmluZFJ1bGUsIGRldGFpbEZpbmRSdWxlXSA9IE1ZX1JVTEUuZmluZF9ydWxlLm1hdGNoKC9eKFtcXFxcc1xcXFxTXSo/KSg/Oj09PihbXFxcXHNcXFxcU10qKSk/JC8pXFxuICAgIGZpbmRSdWxlID0gZmluZFJ1bGUuc3BsaXQoJzsnKVxcbiAgICBwYXJzZURvbUZvckFycmF5KGdldFJlc0NvZGUoKSwgZmluZFJ1bGUuc2hpZnQoKSkuZm9yRWFjaCgoZGF0YSkgPT4ge1xcbiAgICAgICAgbGV0IFt0aXRsZSwgaW1nLCBkZXNjLCB1cmxdID0gZmluZFJ1bGUubWFwKCh2LCBpKSA9PiB7XFxuICAgICAgICAgICAgICAgIHRyeSB7XFxuICAgICAgICAgICAgICAgICAgICBpZiAodiA9PSAnKicpIHJldHVybiAnJ1xcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB2ID0gKGkgPT0gMSB8fCBpID09IDMpID9cXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZURvbShkYXRhLCB2KSA6XFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VEb21Gb3JIdG1sKGRhdGEsIHYpXFxuICAgICAgICAgICAgICAgICAgICBpZiAoaSAhPSAzKSB2ID0gcnVuQ29kZSh2KVxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZcXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgeyByZXR1cm4gJycgfVxcbiAgICAgICAgICAgIH0pLFxcbiAgICAgICAgICAgIHJlcyA9IHtcXG4gICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLCB1cmw6IHVybCxcXG4gICAgICAgICAgICAgICAgZGVzYzogZGVzYywgaW1nOiBpbWcsXFxuICAgICAgICAgICAgICAgIGNvbF90eXBlOiBNWV9SVUxFLmNvbF90eXBlXFxuICAgICAgICAgICAgfVxcbiAgICAgICAgaWYgKHJlcy51cmwpIHtcXG4gICAgICAgICAgICBpZiAocmVzLnVybC5pbmNsdWRlcygnQGxhenlSdWxlPScpKSB7XFxuICAgICAgICAgICAgICAgIGxldCByZUluZGV4ID0gcmVzLnVybC5pbmRleE9mKCcuanM6JylcXG4gICAgICAgICAgICAgICAgaWYgKHJlSW5kZXggPj0gMCkgcmVzLnVybCA9IHJlcy51cmwuc2xpY2UoMCwgcmVJbmRleCkgKyAnLmpzOicgKyBoaWphY2tMYXp5UnVsZSArICc7JyArIHJlcy51cmwuc2xpY2UocmVJbmRleCArIDQpXFxuICAgICAgICAgICAgfSBlbHNlICBpZiAoZGV0YWlsRmluZFJ1bGUpIHtcXG4gICAgICAgICAgICAgICAgcmVzLmV4dHJhID0ge1xcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBnZW5FeFVybCh1cmwpLFxcbiAgICAgICAgICAgICAgICAgICAgUlVMRTogYmFzZTY0RW5jb2RlKEpTT04uc3RyaW5naWZ5KE9iamVjdC5hc3NpZ24oZ2VuTXlSdWxlKCksIHsgZGV0YWlsX2ZpbmRfcnVsZTogZGV0YWlsRmluZFJ1bGUgfSkpKSxcXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VUaXRsZTogaXNJbmRleCAmJiB0aXRsZVxcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIHJlcy51cmwgPSAnaGlrZXI6Ly9wYWdlL2ZyYW1lTG9hZD9ydWxlPScgKyBRSU5HX1RJVExFXFxuICAgICAgICAgICAgfSBlbHNlIGlmIChNWV9SVUxFLmRldGFpbF9maW5kX3J1bGUpIHtcXG4gICAgICAgICAgICAgICAgcmVzLmV4dHJhID0ge1xcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBnZW5FeFVybCh1cmwpLFxcbiAgICAgICAgICAgICAgICAgICAgUlVMRTogYmFzZTY0RW5jb2RlKEpTT04uc3RyaW5naWZ5KGdlbk15UnVsZSgpKSksXFxuICAgICAgICAgICAgICAgICAgICBwYWdlVGl0bGU6IGlzSW5kZXggJiYgdGl0bGVcXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICByZXMudXJsID0gJ2hpa2VyOi8vcGFnZS9mcmFtZUxvYWQ/cnVsZT0nICsgUUlOR19USVRMRVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIG15Q29sbF9lbC5wdXNoKHJlcylcXG4gICAgfSlcXG4gICAgc2V0UmVzdWx0KG15Q29sbF9lbClcXG59XFxuXCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLmlbDmja7ovb3lhaVcIixcInBhdGhcIjpcImRhdGFMb2FkXCIsXCJydWxlXCI6XCJsZXQgc2hvd0FsbCA9ICQuaW1wb3J0UGFyYW0sXFxuICAgIHVybCA9IGdldE15VmFyKCdyZW1vdGVVcmwnKSxcXG4gICAgZGF0YSA9IFtdXFxuaWYgKHVybC5zdGFydHNXaXRoKCdoaWtlcjovLycpIHx8IHVybC5zdGFydHNXaXRoKCdmaWxlOi8vJykpIHtcXG4gICAgLy8g5aaC5p6c5Li65pys5Zyw5paH5Lu25YiZ5LiN6L+b6KGM57yT5a2YXFxuICAgIHRyeSB7XFxuICAgICAgICBsZXQgb3JpRGF0YSA9IGZldGNoKHVybClcXG4gICAgICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnaGlrZXI6Ly9wYWdlLycpKVxcbiAgICAgICAgICAgIG9yaURhdGEgPSBKU09OLnBhcnNlKG9yaURhdGEpLnJ1bGVcXG4gICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKG9yaURhdGEpXFxuICAgIH0gY2F0Y2ggKGUpIHt9XFxufSBlbHNlIHtcXG4gICAgLy8g6I635Y+W6L+c56iL5pWw5o2u77yM5qOA5p+l6Ze06ZqU6buY6K6k5LiA5aSpXFxuICAgIGxldCBpbnRlcnZhbCA9IHBhcnNlSW50KHJlYWRGaWxlKCd1cGRhdGVJbnRlcnZhbCcpIHx8ICcxJyksXFxuICAgICAgICBvbGREYXRhID0gZmV0Y2goJ2hpa2VyOi8vZmlsZXMvbGlicy8nICsgbWQ1KHVybCkgKyAnLmpzJyksXFxuICAgICAgICByZW1vdGVEYXRhID0gW11cXG4gICAgaWYgKGludGVydmFsID09IDApIGludGVydmFsID0gLTFcXG4gICAgdHJ5IHsgcmVtb3RlRGF0YSA9IEpTT04ucGFyc2UoZmV0Y2hDYWNoZSh1cmwsIDI0ICogaW50ZXJ2YWwsIHsgdGltZW91dDogNTAwMDAgfSkpIH0gY2F0Y2ggKGUpIHt9XFxuICAgIGlmICghQXJyYXkuaXNBcnJheShyZW1vdGVEYXRhKSkgcmVtb3RlRGF0YSA9IFtdXFxuICAgIGlmIChyZW1vdGVEYXRhLmxlbmd0aCA8IDMpIHtcXG4gICAgICAgIGxvZygn5pyq6I635Y+W5Yiw5pWw5o2uJylcXG4gICAgICAgIGlmIChvbGREYXRhKSB3cml0ZUZpbGUoJ2hpa2VyOi8vZmlsZXMvbGlicy8nICsgbWQ1KHVybCkgKyAnLmpzJywgb2xkRGF0YSlcXG4gICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKG9sZERhdGEgfHwgJ1tdJylcXG4gICAgfSBlbHNlIHtcXG4gICAgICAgIGxvZygn5bey6I635Y+W5Yiw5pWw5o2uJylcXG4gICAgICAgIGRhdGEgPSByZW1vdGVEYXRhXFxuICAgIH1cXG59XFxuZGF0YSA9IGRhdGEuZmlsdGVyKCh2KSA9PiB2LnRpdGxlICE9IGdldE15VmFyKCdteUNvbGxlY3Rpb24nKSAmJiAhKHYuYXV0aG9yIHx8ICcnKS5pbmNsdWRlcygn6L275ZCI6ZuG55Sf5oiQ5ZmoJykpXFxuaWYgKHJlYWRGaWxlKCdkaXNhYmxlQ3VzdG9tJykpICQuZXhwb3J0cyA9IGRhdGFcXG5lbHNlIHsgLy8g5YaZ5YWl6Ieq5a6a5LmJ5pWw5o2uXFxuICAgIGxldCBjdXN0b21EYXRhID0gSlNPTi5wYXJzZShyZWFkRmlsZSgnY3VzdG9tRGF0YScpIHx8ICdbXScpLFxcbiAgICAgICAgcmV3cml0ZURhdGEgPSBbXVxcbiAgICBjdXN0b21EYXRhID0gY3VzdG9tRGF0YS5yZWR1Y2UoKHNlbGYsIHYpID0+IHtcXG4gICAgICAgIGxldCBpbmRleCA9IGRhdGEuZmluZEluZGV4KCh2dikgPT4gdi50aXRsZSA9PSB2di50aXRsZSlcXG4gICAgICAgIGlmIChpbmRleCA+PSAwKSB7XFxuICAgICAgICAgICAgc2VsZi5wdXNoKHYpXFxuICAgICAgICAgICAgbGV0IHJ1bGUgPSBkYXRhLnNwbGljZShpbmRleCwgMSlbMF1cXG4gICAgICAgICAgICBpZiAoc2hvd0FsbCB8fCB2LnZpc2libGUpXFxuICAgICAgICAgICAgICAgIHJld3JpdGVEYXRhLnB1c2goT2JqZWN0LmFzc2lnbihydWxlLCB2KSlcXG4gICAgICAgIH1cXG4gICAgICAgIHJldHVybiBzZWxmXFxuICAgIH0sIFtdKVxcbiAgICBkYXRhLmZvckVhY2goKHYpID0+IGN1c3RvbURhdGEucHVzaCh7IHRpdGxlOiB2LnRpdGxlLCB2aXNpYmxlOiB0cnVlIH0pKVxcbiAgICBzYXZlRmlsZSgnY3VzdG9tRGF0YScsIEpTT04uc3RyaW5naWZ5KGN1c3RvbURhdGEpKVxcbiAgICAkLmV4cG9ydHMgPSByZXdyaXRlRGF0YS5jb25jYXQoZGF0YSlcXG59XFxuXCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLnjq/looPliqvmjIFcIixcInBhdGhcIjpcImhpamFja0VudlwiLFwicnVsZVwiOlwidmFyIHsgUlVMRSwgaXNJbmRleCwgcGFnZVRpdGxlIH0gPSBNWV9QQVJBTVNcXG5SVUxFID0gSlNPTi5wYXJzZShiYXNlNjREZWNvZGUoUlVMRSkpXFxudmFyIG9yaVJVTEUgPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9kYXRhTG9hZD9ydWxlPScgKyBRSU5HX1RJVExFKS5maW5kKCh2KSA9PiB2LnRpdGxlID09IFJVTEUudGl0bGUpXFxuaWYgKGlzSW5kZXgpIHtcXG4gICAgUlVMRSA9IG9yaVJVTEVcXG4gICAgdmFyIHsgdGFiSGVhZGVyLCBmeUFsbCB9ID0gJC5yZXF1aXJlKCdoaWtlcjovL3BhZ2UvQ2xhc3NUYWI/cnVsZT0nICsgUUlOR19USVRMRSwgT2JqZWN0LmFzc2lnbih7IFFJTkdfVElUTEU6IFFJTkdfVElUTEUgfSwgUlVMRSkpXFxuICAgIC8vIOWkhOeQhk1ZX1JVTEVcXG4gICAgTVlfUlVMRS5jbGFzc191cmwgPSB0YWJIZWFkZXIuZ2V0Q2xhc3MoZnlBbGwgPyAnZnlBbGwnIDogJ2Z5Y2xhc3MnKS51cmxcXG4gICAgTVlfUlVMRS5hcmVhX3VybCA9IGZ5QWxsID8gTVlfUlVMRS5jbGFzc191cmwgOiB0YWJIZWFkZXIuZ2V0Q2xhc3MoJ2Z5YXJlYScpLnVybFxcbiAgICBNWV9SVUxFLnllYXJfdXJsID0gZnlBbGwgPyBNWV9SVUxFLmNsYXNzX3VybCA6IHRhYkhlYWRlci5nZXRDbGFzcygnZnl5ZWFyJykudXJsXFxuICAgIE1ZX1JVTEUuc29ydF91cmwgPSBmeUFsbCA/IE1ZX1JVTEUuY2xhc3NfdXJsIDogdGFiSGVhZGVyLmdldENsYXNzKCdmeXNvcnQnKS51cmxcXG4gICAgTVlfUlVMRS51cmwgPSBSVUxFLnVybFxcbiAgICBNWV9SVUxFLmNvbF90eXBlID0gUlVMRS5jb2xfdHlwZVxcbiAgICBNWV9SVUxFLmRldGFpbF9jb2xfdHlwZSA9IFJVTEUuZGV0YWlsX2NvbF90eXBlXFxuICAgIE1ZX1JVTEUuZmluZF9ydWxlID0gUlVMRS5maW5kX3J1bGVcXG4gICAgTVlfUlVMRS5kZXRhaWxfZmluZF9ydWxlID0gUlVMRS5kZXRhaWxfZmluZF9ydWxlXFxuICAgIE1ZX1JVTEUucGFyYW1zID0ge31cXG59IGVsc2Uge1xcbiAgICBSVUxFLnBhZ2VzID0gb3JpUlVMRS5wYWdlc1xcbiAgICAvLyDlpITnkIZNWV9SVUxFXFxuICAgIE1ZX1JVTEUudXJsID0gTVlfUEFSQU1TLnVybFxcbiAgICBNWV9SVUxFLmNvbF90eXBlID0gUlVMRS5kZXRhaWxfY29sX3R5cGVcXG4gICAgTVlfUlVMRS5maW5kX3J1bGUgPSBSVUxFLmRldGFpbF9maW5kX3J1bGVcXG4gICAgTVlfUlVMRS5wYXJhbXMgPSBSVUxFLnBhcmFtc1xcbn1cXG5NWV9SVUxFLnBhZ2VzID0gUlVMRS5wYWdlc1xcbk1ZX1JVTEUucGFnZUxpc3QgPSBKU09OLnBhcnNlKE1ZX1JVTEUucGFnZXMgfHwgJ1tdJylcXG5NWV9SVUxFLnRpdGxlID0gUlVMRS50aXRsZVxcbk1ZX1JVTEUudWEgPSBSVUxFLnVhXFxubG9nKE1ZX1JVTEUudXJsKVxcbi8vIOi9veWFpeWHveaVsOW3peWFt1xcbnZhciB7IGdlbk15UnVsZSB9ID0gJC5yZXF1aXJlKCdoaWtlcjovL3BhZ2UvZnVuY1Rvb2xzP3J1bGU9JyArIFFJTkdfVElUTEUsIHtcXG4gICAgUUlOR19USVRMRTogUUlOR19USVRMRSxcXG4gICAgTVlfUlVMRTogTVlfUlVMRSxcXG4gICAgaXNJbmRleDogaXNJbmRleFxcbn0pXFxuLy8g6Ziy5q2icmVxdWlyZeWkmuasoei/kOihjFxcbmNvbnN0IG15Q29sbF9yZXF1aXJlZCA9IHt9XFxucmVxdWlyZSA9IGZ1bmN0aW9uKHBhcmFtMCwgcGFyYW0xLCBwYXJhbTIsIHBhcmFtMywgcGFyYW00KSB7XFxuICAgIGlmIChteUNvbGxfcmVxdWlyZWRbcGFyYW0wXSkgcmV0dXJuXFxuICAgIG15Q29sbF9yZXF1aXJlZFtwYXJhbTBdID0gdHJ1ZVxcbiAgICBwYXJhbTIgPSBwYXJhbTIgIT0gbnVsbCA/IHBhcmFtMiA6IDBcXG4gICAgcGFyYW0zID0gTVlfVElDS0VUXFxuICAgIHBhcmFtNCA9IGV2YWxcXG4gICAgcmV0dXJuIG1ldGhvZF9yZXF1aXJlLmludm9rZShqYXZhQ29udGV4dCwgcGFyYW0wLCBwYXJhbTEsIHBhcmFtMiwgcGFyYW0zLCBwYXJhbTQpXFxufVxcbnJlcXVpcmVDYWNoZSA9IGZ1bmN0aW9uKHBhcmFtMCwgcGFyYW0xLCBwYXJhbTIsIHBhcmFtMywgcGFyYW00LCBwYXJhbTUpIHtcXG4gICAgaWYgKG15Q29sbF9yZXF1aXJlZFtwYXJhbTBdKSByZXR1cm5cXG4gICAgbXlDb2xsX3JlcXVpcmVkW3BhcmFtMF0gPSB0cnVlXFxuICAgIHBhcmFtMyA9IHBhcmFtMyAhPSBudWxsID8gcGFyYW0zIDogMFxcbiAgICBwYXJhbTQgPSBNWV9USUNLRVRcXG4gICAgcGFyYW01ID0gZXZhbFxcbiAgICByZXR1cm4gbWV0aG9kX3JlcXVpcmVDYWNoZS5pbnZva2UoamF2YUNvbnRleHQsIHBhcmFtMCwgcGFyYW0xLCBwYXJhbTIsIHBhcmFtMywgcGFyYW00LCBwYXJhbTUpXFxufVxcbnJjID0gcmVxdWlyZUNhY2hlXFxuLy8g5pyA5paw56ug6IqC6KeE5YiZ546v5aKD5Yqr5oyBXFxuc2V0TGFzdENoYXB0ZXJSdWxlID0gZnVuY3Rpb24ocGFyYW0wKSB7XFxuICAgIGlmIChwYXJhbTAuc3RhcnRzV2l0aChcXFwianM6XFxcIikpIHtcXG4gICAgICAgIHBhcmFtMCA9ICdqczonICsgJC50b1N0cmluZygoUUlOR19USVRMRSwgTVlfUEFSQU1TKSA9PiB7XFxuICAgICAgICAgICAgZXZhbChKU09OLnBhcnNlKGZldGNoKCdoaWtlcjovL3BhZ2UvaGlqYWNrRW52P3J1bGU9JyArIFFJTkdfVElUTEUpKS5ydWxlKVxcbiAgICAgICAgICAgIHZhciB7IHJ1blByZVJ1bGUgfSA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2Z1bmNUb29scz9ydWxlPScgKyBRSU5HX1RJVExFKVxcbiAgICAgICAgICAgIHJ1blByZVJ1bGUob3JpUlVMRS5wcmVSdWxlKVxcbiAgICAgICAgfSwgUUlOR19USVRMRSwgeyB1cmw6IE1ZX1JVTEUudXJsLCBSVUxFOiBiYXNlNjRFbmNvZGUoSlNPTi5zdHJpbmdpZnkoZ2VuTXlSdWxlKCkpKSwgaXNJbmRleDogaXNJbmRleCB9KSArICc7JyArIHBhcmFtMC5zbGljZSgzKVxcbiAgICB9XFxuICAgIG1ldGhvZF9zZXRMYXN0Q2hhcHRlclJ1bGUuaW52b2tlKGphdmFDb250ZXh0LCBwYXJhbTApXFxufVxcbi8vIOWKqOaAgeaWsOWinuWHveaVsOWKq+aMgVxcbmFkZEl0ZW1BZnRlciA9IGZ1bmN0aW9uKHBhcmFtMCwgcGFyYW0xKSB7XFxuICAgIGlmIChBcnJheS5pc0FycmF5KHBhcmFtMSkpIHBhcmFtMSA9IHBhcmFtMS5tYXAoaGlqYWNrRWwpXFxuICAgIGVsc2UgcGFyYW0xID0gaGlqYWNrRWwocGFyYW0xKVxcbiAgICBtZXRob2RfYWRkSXRlbUFmdGVyLmludm9rZShqYXZhQ29udGV4dCwgcGFyYW0wLCBwYXJhbTEpXFxufVxcbmFkZEl0ZW1CZWZvcmUgPSBmdW5jdGlvbihwYXJhbTAsIHBhcmFtMSkge1xcbiAgICBpZiAoQXJyYXkuaXNBcnJheShwYXJhbTEpKSBwYXJhbTEgPSBwYXJhbTEubWFwKGhpamFja0VsKVxcbiAgICBlbHNlIHBhcmFtMSA9IGhpamFja0VsKHBhcmFtMSlcXG4gICAgbWV0aG9kX2FkZEl0ZW1CZWZvcmUuaW52b2tlKGphdmFDb250ZXh0LCBwYXJhbTAsIHBhcmFtMSlcXG59XFxuXCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLlh73mlbDlt6XlhbdcIixcInBhdGhcIjpcImZ1bmNUb29sc1wiLFwicnVsZVwiOlwibGV0IHsgUUlOR19USVRMRSwgTVlfUlVMRSwgaXNJbmRleCB9ID0gJC5pbXBvcnRQYXJhbVxcbmlmICghTVlfUlVMRSkgTVlfUlVMRSA9IHt9XFxuXFxuZnVuY3Rpb24gcnVuQ29kZShydWxlKSB7XFxuICAgIHRyeSB7XFxuICAgICAgICBsZXQgW2lucHV0LCBjb2RlXSA9IHJ1bGUuc3BsaXQoJy5qczonKVxcbiAgICAgICAgcmV0dXJuIGNvZGUgPyBldmFsKGNvZGUpIDogcnVsZVxcbiAgICB9IGNhdGNoIChlKSB7IHJldHVybiBydWxlIH1cXG59XFxuLy8g6aaW6aG16ZO+5o6l5pu/5o2i5YiG57G7XFxuZnVuY3Rpb24gaW5kZXhVcmwocGFyYW0pIHtcXG4gICAgTVlfUlVMRSA9IEpTT04ucGFyc2UoYmFzZTY0RGVjb2RlKE1ZX1JVTEUpKVxcbiAgICBsZXQgcGFnZU51bSA9IHBhcnNlSW50KHBhcmFtLnNwbGl0KCcjIyMnKVsxXSksXFxuICAgICAgICB1cmwgPSBNWV9SVUxFLnVybCxcXG4gICAgICAgIHsgZnlBbGwsIHRhYkhlYWRlciB9ID0gJC5yZXF1aXJlKCdoaWtlcjovL3BhZ2UvQ2xhc3NUYWI/cnVsZT0nICsgUUlOR19USVRMRSwgT2JqZWN0LmFzc2lnbih7IFFJTkdfVElUTEU6IFFJTkdfVElUTEUgfSwgTVlfUlVMRSkpXFxuXFxuICAgIHVybCA9IHRhYkhlYWRlci5zZXRVcmwoZnlBbGwgPyB1cmwucmVwbGFjZSgvZnlBbGwvZywgJyQke2Z5QWxsfScpIDogdXJsLnJlcGxhY2UoL2Z5KGNsYXNzfGFyZWF8eWVhcnxzb3J0KS9nLCAnJCR7ZnkkMX0nKSlcXG4gICAgdXJsID0gdXJsLnJlcGxhY2UoL2Z5cGFnZSg/OkAoLT9cXFxcZCspQCk/KD86XFxcXCooXFxcXGQrKUApPy9nLCAoXywgc3RhcnQsIHNwYWNlKSA9PiBwYXJzZUludChzdGFydCB8fCAwKSArIDEgKyAocGFnZU51bSAtIDEpICogcGFyc2VJbnQoc3BhY2UgfHwgMSkpXFxuICAgIHVybCA9IC9eKFtcXFxcc1xcXFxTXSo/KSg/OlxcXFxbZmlyc3RQYWdlPShbXFxcXHNcXFxcU10qPylcXFxcXSk/KD86KFxcXFwuanM6W1xcXFxzXFxcXFNdKj8pKT8kLy5leGVjKHVybClcXG4gICAgaWYgKHBhZ2VOdW0gPT0gMSAmJiB1cmxbMl0pIHVybFsxXSA9IHVybFsyXVxcbiAgICBpZiAodXJsWzNdICYmICF1cmxbMV0uaW5jbHVkZXMoJy5qczonKSkgdXJsWzFdICs9IHVybFszXVxcbiAgICByZXR1cm4gcnVuQ29kZSh1cmxbMV0pXFxufVxcblxcbmZ1bmN0aW9uIHBhcmFtSGFuZGxlKHVybFBhcmFtLCB1YSwgdXJsVG1wKSB7XFxuICAgIGxldCBjaGFyc2V0LCBwYXJhbVRtcFxcbiAgICB0cnkgeyAvLyDpk77mjqXnmoTnvJbnoIHjgIFVQeWSjFJlZmVyZXLlupTor6XmmK/pppblhYjnu6fmib/pppbpobXpk77mjqVcXG4gICAgICAgIFssICwgY2hhcnNldCwgcGFyYW1UbXBdID0gdXJsVG1wLnNwbGl0KCc7JylcXG4gICAgICAgIHBhcmFtVG1wID0gcGFyYW1UbXAubWF0Y2goL157KC4qKX0kLylbMV0uc3BsaXQoJyYmJylcXG4gICAgfSBjYXRjaCAoZSkgeyBwYXJhbVRtcCA9IFtdIH1cXG4gICAgbGV0IFVzZXJBZ2VudCA9IHBhcmFtVG1wLmZpbmQoKHYpID0+IHYuc3RhcnRzV2l0aCgnVXNlci1BZ2VudEAnKSksXFxuICAgICAgICBSZWZlcmVyID0gcGFyYW1UbXAuZmluZCgodikgPT4gdi5zdGFydHNXaXRoKCdSZWZlcmVyQCcpKVxcbiAgICB1cmxQYXJhbVswXSA9IHVybFBhcmFtWzBdIHx8ICdHRVQnXFxuICAgIHVybFBhcmFtWzFdID0gdXJsUGFyYW1bMV0gfHwgY2hhcnNldCB8fCAnVVRGLTgnXFxuICAgIHRyeSB7XFxuICAgICAgICB1cmxQYXJhbVsyXSA9IHVybFBhcmFtWzJdLm1hdGNoKC9eeyguKil9JC8pWzFdLnNwbGl0KCcmJicpXFxuICAgIH0gY2F0Y2ggKGUpIHsgdXJsUGFyYW1bMl0gPSBbXSB9XFxuICAgIC8vIOa3u+WKoOWFqOWxgFVB5ZKM5LiK57qnUmVmZXJlclxcbiAgICBpZiAoIXVybFBhcmFtWzJdLnNvbWUoKHYpID0+IHYuc3RhcnRzV2l0aCgnVXNlci1BZ2VudEAnKSkpIHtcXG4gICAgICAgIGlmIChVc2VyQWdlbnQpIHVybFBhcmFtWzJdLnB1c2goVXNlckFnZW50KVxcbiAgICAgICAgZWxzZSBpZiAodWEgPT0gJ3BjJylcXG4gICAgICAgICAgICB1cmxQYXJhbVsyXS5wdXNoKCdVc2VyLUFnZW50QCcgKyBQQ19VQS5yZXBsYWNlKC87L2csICfvvJvvvJsnKS5yZXBsYWNlKC9cXFxcPy8sICfvvJ/vvJ8nKSlcXG4gICAgICAgIGVsc2UgaWYgKHVhID09ICdtb2JpbGUnKVxcbiAgICAgICAgICAgIHVybFBhcmFtWzJdLnB1c2goJ1VzZXItQWdlbnRAJyArIE1PQklMRV9VQS5yZXBsYWNlKC87L2csICfvvJvvvJsnKS5yZXBsYWNlKC9cXFxcPy8sICfvvJ/vvJ8nKSlcXG4gICAgfVxcbiAgICBpZiAoUmVmZXJlciAmJiAhdXJsUGFyYW1bMl0uc29tZSgodikgPT4gdi5zdGFydHNXaXRoKCdSZWZlcmVyQCcpKSlcXG4gICAgICAgIHVybFBhcmFtWzJdLnB1c2goUmVmZXJlcilcXG4gICAgdXJsUGFyYW1bMl0gPSAneycgKyB1cmxQYXJhbVsyXS5qb2luKCcmJicpICsgJ30nXFxuICAgIHJldHVybiB1cmxQYXJhbS5qb2luKCc7JylcXG59XFxuLy8g6aKE5aSE55CG5bm25Yid5aeL5YyWY29uZmlnXFxuZnVuY3Rpb24gcnVuUHJlUnVsZShydWxlKSB7XFxuICAgIGlmICgodHlwZW9mIE1ZX1BBR0UgIT0gJ3VuZGVmaW5lZCcgJiYgIE1ZX1BBR0UgPT0gMSkgJiZcXG4gICAgICAgICAoaXNJbmRleCB8fCAhZ2V0TXlWYXIoJyRwcmVSdWxlXycgKyBNWV9SVUxFLnRpdGxlKSkpIHtcXG4gICAgICAgIGV2YWwocnVsZSlcXG4gICAgICAgIHB1dE15VmFyKCckcHJlUnVsZV8nICsgTVlfUlVMRS50aXRsZSwgJ1QnKVxcbiAgICB9XFxuICAgIGxldCBfY2ZnID0gZ2V0TXlWYXIoJ2luaXRDb25maWcnLCAne30nKVxcbiAgICBpZiAoX2NmZyAmJiBfY2ZnLmxlbmd0aCA+IDApIHtcXG4gICAgICAgIGNvbmZpZyA9IEpTT04ucGFyc2UoX2NmZylcXG4gICAgfVxcbn1cXG4vLyDmraPmlofop6PmnpDpgJrnlKjlj5jph49cXG5mdW5jdGlvbiBnZW5NeVJ1bGUoKSB7XFxuICAgIGxldCBSVUxFID0gT2JqZWN0LmFzc2lnbih7fSwgTVlfUlVMRSlcXG4gICAgZGVsZXRlIFJVTEUubGFzdF9jaGFwdGVyX3J1bGVcXG4gICAgZGVsZXRlIFJVTEUucHJlUnVsZVxcbiAgICBkZWxldGUgUlVMRS5wYWdlTGlzdFxcbiAgICBkZWxldGUgUlVMRS5wYWdlc1xcbiAgICByZXR1cm4gUlVMRVxcbn1cXG5cXG5mdW5jdGlvbiBnZW5FeFVybCh1cmwpIHtcXG4gICAgdXJsID0gdXJsLnNwbGl0KCc7JylcXG4gICAgcmV0dXJuIHVybC5zaGlmdCgpICsgJzsnICsgcGFyYW1IYW5kbGUodXJsLCBNWV9SVUxFLnVhLCBNWV9SVUxFLnVybClcXG59XFxuXFxuaGlqYWNrTGF6eVJ1bGUgPSAkLnRvU3RyaW5nKChRSU5HX1RJVExFLCBNWV9QQVJBTVMpID0+IHtcXG4gICAgaWYgKCFNWV9SVUxFKSBNWV9SVUxFID0ge31cXG4gICAgTVlfUEFSQU1TID0gSlNPTi5wYXJzZShiYXNlNjREZWNvZGUoTVlfUEFSQU1TKSlcXG4gICAgZXZhbChKU09OLnBhcnNlKGZldGNoKCdoaWtlcjovL3BhZ2UvaGlqYWNrRW52P3J1bGU9JyArIFFJTkdfVElUTEUpKS5ydWxlKVxcbiAgICB2YXIge1xcbiAgICAgICAgcGFyYW1IYW5kbGUsXFxuICAgICAgICBnZW5FeFVybCxcXG4gICAgICAgIGhpamFja0xhenlSdWxlLFxcbiAgICAgICAgaGlqYWNrRWxcXG4gICAgfSA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2Z1bmNUb29scz9ydWxlPScgKyBRSU5HX1RJVExFKVxcbn0sIFFJTkdfVElUTEUsIGJhc2U2NEVuY29kZShKU09OLnN0cmluZ2lmeSh7IHVybDogTVlfUlVMRS51cmwsIFJVTEU6IGJhc2U2NEVuY29kZShKU09OLnN0cmluZ2lmeShnZW5NeVJ1bGUoKSkpLCBpc0luZGV4OiBpc0luZGV4IH0pKSlcXG5cXG5mdW5jdGlvbiBoaWphY2tFbChlbCkge1xcbiAgICBpZighZWwgfHwgdHlwZW9mIGVsICE9ICdvYmplY3QnKSByZXR1cm5cXG4gICAgaWYgKCFlbC5leHRyYSkgZWwuZXh0cmEgPSB7fVxcbiAgICBlbC5jb2xfdHlwZSA9IGVsLmNvbF90eXBlIHx8IE1ZX1JVTEUuY29sX3R5cGVcXG4gICAgbGV0IE5PV19SVUxFID0gT2JqZWN0LmFzc2lnbihnZW5NeVJ1bGUoKSwgeyBwYXJhbXM6IGVsLmV4dHJhIH0pXFxuXFxuICAgIGlmICh0eXBlb2YgZWwudXJsICE9ICdzdHJpbmcnIHx8XFxuICAgICAgICBbJ3g1X3dlYnZpZXdfc2luZ2xlJywgJ2lucHV0J10uc29tZSgodikgPT4gZWwuY29sX3R5cGUgPT0gdikgfHxcXG4gICAgICAgIFsn5rW36ZiU6KeG55WMJywgJ2phdmFzY3JpcHQ6J10uc29tZSgodikgPT4gZWwudXJsLnN0YXJ0c1dpdGgodikpIHx8XFxuICAgICAgICBbJ3J1bGUnLCAncGljcycsICd0b2FzdCcsICdjb3B5JywgJ2VkaXRGaWxlJywgJ3g1JywgJ3g1V2ViVmlldycsICd4NVBsYXknLCAnd2ViJywgJ3g1UnVsZScsICd3ZWJSdWxlJyxcXG4gICAgICAgICAgICAnZG93bmxvYWQnLCAnc2hhcmUnLCAnZmlsZVNlbGVjdCcsICd2aWRlbyddLnNvbWUoKHYpID0+IGVsLnVybC5zdGFydHNXaXRoKHYgKyAnOi8vJykpKSB7XFxuICAgICAgICByZXR1cm4gZWxcXG4gICAgfSBlbHNlIGlmIChlbC51cmwuc3RhcnRzV2l0aCgnaW5wdXQ6Ly8nKSkge1xcbiAgICAgICAgbGV0IHBhcmEgPSBKU09OLnBhcnNlKGVsLnVybC5zbGljZSg4KSlcXG4gICAgICAgIGlmIChwYXJhLmpzKSBwYXJhLmpzID0gaGlqYWNrTGF6eVJ1bGUgKyAnOycgKyBwYXJhLmpzXFxuICAgICAgICBlbC51cmwgPSAnaW5wdXQ6Ly8nICsgSlNPTi5zdHJpbmdpZnkocGFyYSlcXG4gICAgICAgIHJldHVybiBlbFxcbiAgICB9IGVsc2UgaWYgKGVsLnVybC5zdGFydHNXaXRoKCdjb25maXJtOi8vJykpIHtcXG4gICAgICAgIGxldCByZUluZGV4ID0gZWwudXJsLmluZGV4T2YoJy5qczonKVxcbiAgICAgICAgaWYgKHJlSW5kZXggPj0gMCkgZWwudXJsID0gZWwudXJsLnNsaWNlKDAsIHJlSW5kZXgpICsgJy5qczonICsgaGlqYWNrTGF6eVJ1bGUgKyAnOycgKyBlbC51cmwuc2xpY2UocmVJbmRleCArIDQpXFxuICAgICAgICByZXR1cm4gZWxcXG4gICAgfSBlbHNlIGlmIChlbC51cmwuc3RhcnRzV2l0aCgnc2VsZWN0Oi8vJykpIHtcXG4gICAgICAgIGxldCBwYXJhID0gSlNPTi5wYXJzZShlbC51cmwuc2xpY2UoOSkpXFxuICAgICAgICBpZiAocGFyYS5qcykgcGFyYS5qcyA9IGhpamFja0xhenlSdWxlICsgJzsnICsgcGFyYS5qc1xcbiAgICAgICAgZWwudXJsID0gJ3NlbGVjdDovLycgKyBKU09OLnN0cmluZ2lmeShwYXJhKVxcbiAgICAgICAgcmV0dXJuIGVsXFxuICAgIH0gZWxzZSBpZiAoZWwudXJsLmluY2x1ZGVzKCdAcnVsZT0nKSkge1xcbiAgICAgICAgbGV0IFtfLCB1cmwsIHJ1bGVdID0gZWwudXJsLm1hdGNoKC9eKFtcXFxcc1xcXFxTXSo/KUBydWxlPShbXFxcXHNcXFxcU10qKSQvKVxcbiAgICAgICAgZWwudXJsID0gdXJsXFxuICAgICAgICBOT1dfUlVMRS5kZXRhaWxfZmluZF9ydWxlID0gcnVsZVxcbiAgICAgICAgTk9XX1JVTEUuZGV0YWlsX2NvbF90eXBlID0gTVlfUlVMRS5jb2xfdHlwZVxcbiAgICB9IGVsc2UgaWYgKGVsLnVybC5zdGFydHNXaXRoKCdoaWtlcjovL3BhZ2UvJykpIHtcXG4gICAgICAgIGlmIChlbC51cmwuaW5jbHVkZXMoJ3J1bGU9JykgfHwgZWwuZXh0cmEucnVsZSlcXG4gICAgICAgICAgICByZXR1cm4gZWxcXG4gICAgICAgIGxldCBbXywgcGF0aCwgZmxhZywgcGFyYW1zXSA9IGVsLnVybC5tYXRjaCgvXmhpa2VyOlxcXFwvXFxcXC9wYWdlXFxcXC8oLis/KSgjLio/KT8oPzpcXFxcPyguKikpPyQvKSxcXG4gICAgICAgICAgICBzdWJQYWdlID0gTVlfUlVMRS5wYWdlTGlzdC5maW5kKCh2KSA9PiB2LnBhdGggPT0gcGF0aCksXFxuICAgICAgICAgICAgc3ViVXJsID0gKHBhcmFtcyB8fCAnJykuc3BsaXQoJyYnKS5maW5kKCh2KSA9PiB2LnN0YXJ0c1dpdGgoJ3VybD0nKSlcXG4gICAgICAgIGVsLnVybCA9IChzdWJVcmwgPyBzdWJVcmwuc2xpY2UoNCkucmVwbGFjZSgv77yf77yfL2csICc/JykucmVwbGFjZSgv77yG77yGL2csICcmJykgOiAoZWwuZXh0cmEgfHwge30pLnVybCkgfHwgJ2hpa2VyOi8vZW1wdHknICsgZmxhZyArICc/JyArIChwYXJhbXMgfHwgJycpXFxuICAgICAgICBOT1dfUlVMRS5kZXRhaWxfZmluZF9ydWxlID0gc3ViUGFnZS5ydWxlXFxuICAgICAgICBOT1dfUlVMRS5kZXRhaWxfY29sX3R5cGUgPSBzdWJQYWdlLmNvbF90eXBlXFxuICAgIH0gZWxzZSBpZiAoZWwudXJsLmluY2x1ZGVzKCdAbGF6eVJ1bGU9JykpIHtcXG4gICAgICAgIGxldCByZUluZGV4ID0gZWwudXJsLmluZGV4T2YoJy5qczonKVxcbiAgICAgICAgaWYgKHJlSW5kZXggPj0gMCkgZWwudXJsID0gZWwudXJsLnNsaWNlKDAsIHJlSW5kZXgpICsgJy5qczonICsgaGlqYWNrTGF6eVJ1bGUgKyAnOycgKyBlbC51cmwuc2xpY2UocmVJbmRleCArIDQpXFxuICAgICAgICByZXR1cm4gZWxcXG4gICAgfSBlbHNlIGlmIChpc0luZGV4KSB7XFxuICAgICAgICBpZiAoIU1ZX1JVTEUuZGV0YWlsX2ZpbmRfcnVsZSB8fCAvaGlrZXI6XFxcXC9cXFxcLyg/IWVtcHR5LiskKS8udGVzdChlbC51cmwpKSByZXR1cm4gZWxcXG4gICAgfSBlbHNlIHtcXG4gICAgICAgIHJldHVybiBlbFxcbiAgICB9XFxuICAgIGVsLmV4dHJhID0gT2JqZWN0LmFzc2lnbih7fSwgZWwuZXh0cmEsIHtcXG4gICAgICAgIHVybDogZ2VuRXhVcmwoZWwudXJsKSxcXG4gICAgICAgIFJVTEU6IGJhc2U2NEVuY29kZShKU09OLnN0cmluZ2lmeShOT1dfUlVMRSkpLFxcbiAgICAgICAgcGFnZVRpdGxlOiBpc0luZGV4ICYmIGVsLnRpdGxlXFxuICAgIH0pXFxuICAgIGVsLnVybCA9ICdoaWtlcjovL3BhZ2UvZnJhbWVMb2FkP3J1bGU9JyArIFFJTkdfVElUTEVcXG4gICAgcmV0dXJuIGVsXFxufVxcbiQuZXhwb3J0cyA9IHtcXG4gICAgcnVuQ29kZTogcnVuQ29kZSxcXG4gICAgaW5kZXhVcmw6IGluZGV4VXJsLFxcbiAgICBwYXJhbUhhbmRsZTogcGFyYW1IYW5kbGUsXFxuICAgIHJ1blByZVJ1bGU6IHJ1blByZVJ1bGUsXFxuICAgIGdlbk15UnVsZTogZ2VuTXlSdWxlLFxcbiAgICBnZW5FeFVybDogZ2VuRXhVcmwsXFxuICAgIGhpamFja0xhenlSdWxlOiBoaWphY2tMYXp5UnVsZSxcXG4gICAgaGlqYWNrRWw6IGhpamFja0VsXFxufVxcblwifV0sXCJwYXJhbXNcIjpcIntcXFwiUlVMRVxcXCI6XFxcImV5SjBhWFJzWlNJNkl1aUtzZWlLc2VXOXNlbVpvaTVFVlBDZmtMb2lmUT09XFxcIixcXFwiaXNJbmRleFxcXCI6dHJ1ZSxcXFwidXJsXFxcIjpcXFwiaGlrZXI6Ly9lbXB0eS8jbm9IaXN0b3J5IyNub1JlY29yZEhpc3RvcnkjIyMjZnlwYWdlLmpzOmxldCB7IHJ1bkNvZGUsIGluZGV4VXJsIH0gPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2UvZnVuY1Rvb2xz77yf77yfcnVsZT3ovbvlkIjpm4Yu5a625aiDXFxcXFxcXCIsIHtcXFxcXFxcIk1ZX1JVTEVcXFxcXFxcIjpcXFxcXFxcImV5SjBhWFJzWlNJNkl1aUtzZWlLc2VXOXNlbVpvaTVFVlBDZmtMb2lMQ0oxY213aU9pSm9hV3RsY2pvdkwyVnRjSFI1SXlOb2RIUndjem92TDNkM2R5NTNaV2x0YjNacFpYTXVZMjl0TDNadlpITm9iM2N2WkdsaGJubHBibWN0TFMwdExTMHRMV1o1Y0dGblpTMHRMUzhpTENKamJHRnpjMTl1WVcxbElqb2lJaXdpWTJ4aGMzTmZkWEpzSWpvaUlpd2lZWEpsWVY5dVlXMWxJam9pSWl3aVlYSmxZVjkxY213aU9pSWlMQ0o1WldGeVgyNWhiV1VpT2lJaUxDSjVaV0Z5WDNWeWJDSTZJaUlzSW5OdmNuUmZibUZ0WlNJNklpSXNJbk52Y25SZmRYSnNJam9pSW4wPVxcXFxcXFwiLFxcXFxcXFwiUUlOR19USVRMRVxcXFxcXFwiOlxcXFxcXFwi6L275ZCI6ZuGLuWutuWog1xcXFxcXFwifSnvvJvvvJtpbmRleFVybChpbnB1dCk7R0VUO1VURi04O3tVc2VyLUFnZW50QE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjDvvJvvvJsgV2luNjTvvJvvvJsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTA1LjAuMC4wIFNhZmFyaS81MzcuMzZ9XFxcIn1cIixcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi6L275ZCI6ZuGLuWutuWog1wiLFwidmVyc2lvblwiOjAsXCJ1cmxcIjpcImhpa2VyOi8vZW1wdHkvI25vSGlzdG9yeSMjbm9SZWNvcmRIaXN0b3J5IyMjI2Z5cGFnZS5qczpsZXQgeyBydW5Db2RlLCBpbmRleFVybCB9ID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UvZnVuY1Rvb2xz77yf77yfcnVsZT3ovbvlkIjpm4Yu5a625aiDXFxcIiwge1xcXCJNWV9SVUxFXFxcIjpcXFwiZXlKMGFYUnNaU0k2SXVpS3NlaUtzZVc5c2VtWm9pNUVWUENma0xvaUxDSjFjbXdpT2lKb2FXdGxjam92TDJWdGNIUjVJeU5vZEhSd2N6b3ZMM2QzZHk1M1pXbHRiM1pwWlhNdVkyOXRMM1p2WkhOb2IzY3ZaR2xoYm5scGJtY3RMUzB0TFMwdExXWjVjR0ZuWlMwdExTOGlMQ0pqYkdGemMxOXVZVzFsSWpvaUlpd2lZMnhoYzNOZmRYSnNJam9pSWl3aVlYSmxZVjl1WVcxbElqb2lJaXdpWVhKbFlWOTFjbXdpT2lJaUxDSjVaV0Z5WDI1aGJXVWlPaUlpTENKNVpXRnlYM1Z5YkNJNklpSXNJbk52Y25SZmJtRnRaU0k2SWlJc0luTnZjblJmZFhKc0lqb2lJbjA9XFxcIixcXFwiUUlOR19USVRMRVxcXCI6XFxcIui9u+WQiOmbhi7lrrblqINcXFwifSnvvJvvvJtpbmRleFVybChpbnB1dCk7R0VUO1VURi04O3tVc2VyLUFnZW50QE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjDvvJvvvJsgV2luNjTvvJvvvJsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTA1LjAuMC4wIFNhZmFyaS81MzcuMzZ9XCIsXCJjb2xfdHlwZVwiOlwibW92aWVfM1wiLFwiZmluZF9ydWxlXCI6XCJqczpcXG5jb25zdCBRSU5HX1RJVExFID0gZ2V0TXlWYXIoJ215Q29sbGVjdGlvbicpXFxudmFyIG15Q29sbF9lbCA9IFtdXFxuZXZhbChKU09OLnBhcnNlKGZldGNoKCdoaWtlcjovL3BhZ2UvaGlqYWNrRW52P3J1bGU9JyArIFFJTkdfVElUTEUpKS5ydWxlKVxcblxcbmlmICghaXNJbmRleCkge1xcbiAgICBpZiAocGFnZVRpdGxlKSBzZXRQYWdlVGl0bGUocGFnZVRpdGxlKVxcbiAgICBzZXRMYXN0Q2hhcHRlclJ1bGUob3JpUlVMRS5sYXN0X2NoYXB0ZXJfcnVsZSlcXG4gICAgTVlfUEFSQU1TID0gTVlfUlVMRS5wYXJhbXNcXG59IGVsc2UgaWYgKE1ZX1BBR0UgPT0gMSkge1xcbiAgICB0YWJIZWFkZXIubG9hZChteUNvbGxfZWwpXFxuICAgIGlmIChSVUxFLnNlYXJjaF91cmwpIG15Q29sbF9lbC5wdXNoKHtcXG4gICAgICAgIHRpdGxlOiBcXFwi5pCc57SiXFxcIixcXG4gICAgICAgIGRlc2M6IFxcXCLov5nmmK/ovbvlkIjpm4bnmoTmkJzntKLlk6Z+flxcXCIsXFxuICAgICAgICB1cmw6ICdcXFwiaGlrZXI6Ly9zZWFyY2g/cz1cXFwiK2lucHV0JyxcXG4gICAgICAgIGV4dHJhOiB7XFxuICAgICAgICAgICAgcnVsZXM6ICQudG9TdHJpbmcoKFFJTkdfVElUTEUsIHRpdGxlKSA9PiB7XFxuICAgICAgICAgICAgICAgIGxldCBydWxlcyA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2RhdGFMb2FkP3J1bGU9JyArIFFJTkdfVElUTEUpXFxuICAgICAgICAgICAgICAgIHJ1bGVzID0gW3J1bGVzLmZpbmQoKHYpID0+IHYudGl0bGUgPT0gdGl0bGUpXVxcbiAgICAgICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkocnVsZXMpXFxuICAgICAgICAgICAgfSwgUUlOR19USVRMRSwgUlVMRS50aXRsZSksXFxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBnZXRNeVZhcignc2VhcmNoS2V5JywgJycpLFxcbiAgICAgICAgICAgIG9uQ2hhbmdlOiBcXFwicHV0TXlWYXIoJ3NlYXJjaEtleScsaW5wdXQpXFxcIlxcbiAgICAgICAgfSxcXG4gICAgICAgIGNvbF90eXBlOiBcXFwiaW5wdXRcXFwiLFxcbiAgICB9KVxcbn1cXG4vLyDmraPmlofop6PmnpBcXG52YXIge1xcbiAgICBwYXJhbUhhbmRsZSxcXG4gICAgcnVuUHJlUnVsZSxcXG4gICAgZ2VuRXhVcmwsXFxuICAgIGhpamFja0xhenlSdWxlXFxufSA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2Z1bmNUb29scz9ydWxlPScgKyBRSU5HX1RJVExFKVxcbnJ1blByZVJ1bGUob3JpUlVMRS5wcmVSdWxlKVxcbmlmIChNWV9SVUxFLmZpbmRfcnVsZS5zdGFydHNXaXRoKCdqczonKSkge1xcbiAgICBsZXQgeyBoaWphY2tFbCB9ID0gJC5yZXF1aXJlKCdoaWtlcjovL3BhZ2UvZnVuY1Rvb2xzP3J1bGU9JyArIFFJTkdfVElUTEUpXFxuICAgIHNldFJlc3VsdCA9IGZ1bmN0aW9uKHBhcmFtMCwgcGFyYW0xLCBwYXJhbTIsIHBhcmFtMykge1xcbiAgICAgICAgcGFyYW0xID0gQ0FMTEJBQ0tfS0VZXFxuICAgICAgICBwYXJhbTIgPSBNWV9SVUxFXFxuICAgICAgICBwYXJhbTMgPSBNWV9UWVBFXFxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShwYXJhbTAuZGF0YSkpIHBhcmFtMCA9IHBhcmFtMC5kYXRhXFxuICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShteUNvbGxfZWwsIHBhcmFtMC5tYXAoaGlqYWNrRWwpKVxcbiAgICAgICAgbWV0aG9kX3NldFJlc3VsdC5pbnZva2UoamF2YUNvbnRleHQsIG15Q29sbF9lbCwgcGFyYW0xLCBwYXJhbTIsIHBhcmFtMylcXG4gICAgfVxcbiAgICBzZXRIb21lUmVzdWx0ID0gc2V0UmVzdWx0XFxuICAgIHNldFNlYXJjaFJlc3VsdCA9IHNldFJlc3VsdFxcblxcbiAgICBldmFsKE1ZX1JVTEUuZmluZF9ydWxlLnNsaWNlKDMpKVxcbn0gZWxzZSB7XFxuICAgIGxldCB7IHJ1bkNvZGUgfSA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2Z1bmNUb29scz9ydWxlPScgKyBRSU5HX1RJVExFKSxcXG4gICAgICAgIFtfLCBmaW5kUnVsZSwgZGV0YWlsRmluZFJ1bGVdID0gTVlfUlVMRS5maW5kX3J1bGUubWF0Y2goL14oW1xcXFxzXFxcXFNdKj8pKD86PT0+KFtcXFxcc1xcXFxTXSopKT8kLylcXG4gICAgZmluZFJ1bGUgPSBmaW5kUnVsZS5zcGxpdCgnOycpXFxuICAgIHBhcnNlRG9tRm9yQXJyYXkoZ2V0UmVzQ29kZSgpLCBmaW5kUnVsZS5zaGlmdCgpKS5mb3JFYWNoKChkYXRhKSA9PiB7XFxuICAgICAgICBsZXQgW3RpdGxlLCBpbWcsIGRlc2MsIHVybF0gPSBmaW5kUnVsZS5tYXAoKHYsIGkpID0+IHtcXG4gICAgICAgICAgICAgICAgdHJ5IHtcXG4gICAgICAgICAgICAgICAgICAgIGlmICh2ID09ICcqJykgcmV0dXJuICcnXFxuICAgICAgICAgICAgICAgICAgICBlbHNlIHYgPSAoaSA9PSAxIHx8IGkgPT0gMykgP1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlRG9tKGRhdGEsIHYpIDpcXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZURvbUZvckh0bWwoZGF0YSwgdilcXG4gICAgICAgICAgICAgICAgICAgIGlmIChpICE9IDMpIHYgPSBydW5Db2RlKHYpXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdlxcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7IHJldHVybiAnJyB9XFxuICAgICAgICAgICAgfSksXFxuICAgICAgICAgICAgcmVzID0ge1xcbiAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsIHVybDogdXJsLFxcbiAgICAgICAgICAgICAgICBkZXNjOiBkZXNjLCBpbWc6IGltZyxcXG4gICAgICAgICAgICAgICAgY29sX3R5cGU6IE1ZX1JVTEUuY29sX3R5cGVcXG4gICAgICAgICAgICB9XFxuICAgICAgICBpZiAocmVzLnVybCkge1xcbiAgICAgICAgICAgIGlmIChyZXMudXJsLmluY2x1ZGVzKCdAbGF6eVJ1bGU9JykpIHtcXG4gICAgICAgICAgICAgICAgbGV0IHJlSW5kZXggPSByZXMudXJsLmluZGV4T2YoJy5qczonKVxcbiAgICAgICAgICAgICAgICBpZiAocmVJbmRleCA+PSAwKSByZXMudXJsID0gcmVzLnVybC5zbGljZSgwLCByZUluZGV4KSArICcuanM6JyArIGhpamFja0xhenlSdWxlICsgJzsnICsgcmVzLnVybC5zbGljZShyZUluZGV4ICsgNClcXG4gICAgICAgICAgICB9IGVsc2UgIGlmIChkZXRhaWxGaW5kUnVsZSkge1xcbiAgICAgICAgICAgICAgICByZXMuZXh0cmEgPSB7XFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGdlbkV4VXJsKHVybCksXFxuICAgICAgICAgICAgICAgICAgICBSVUxFOiBiYXNlNjRFbmNvZGUoSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmFzc2lnbihnZW5NeVJ1bGUoKSwgeyBkZXRhaWxfZmluZF9ydWxlOiBkZXRhaWxGaW5kUnVsZSB9KSkpLFxcbiAgICAgICAgICAgICAgICAgICAgcGFnZVRpdGxlOiBpc0luZGV4ICYmIHRpdGxlXFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgcmVzLnVybCA9ICdoaWtlcjovL3BhZ2UvZnJhbWVMb2FkP3J1bGU9JyArIFFJTkdfVElUTEVcXG4gICAgICAgICAgICB9IGVsc2UgaWYgKE1ZX1JVTEUuZGV0YWlsX2ZpbmRfcnVsZSkge1xcbiAgICAgICAgICAgICAgICByZXMuZXh0cmEgPSB7XFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGdlbkV4VXJsKHVybCksXFxuICAgICAgICAgICAgICAgICAgICBSVUxFOiBiYXNlNjRFbmNvZGUoSlNPTi5zdHJpbmdpZnkoZ2VuTXlSdWxlKCkpKSxcXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VUaXRsZTogaXNJbmRleCAmJiB0aXRsZVxcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIHJlcy51cmwgPSAnaGlrZXI6Ly9wYWdlL2ZyYW1lTG9hZD9ydWxlPScgKyBRSU5HX1RJVExFXFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgbXlDb2xsX2VsLnB1c2gocmVzKVxcbiAgICB9KVxcbiAgICBzZXRSZXN1bHQobXlDb2xsX2VsKVxcbn1cXG5cIixcImdyb3VwXCI6XCLikaDovbvlkIjpm4ZcIixcInVhXCI6XCJtb2JpbGVcIixcInByZVJ1bGVcIjpcInB1dE15VmFyKCdteUNvbGxlY3Rpb24nLCBNWV9SVUxFLnRpdGxlKVxcbnB1dE15VmFyKCdyZW1vdGVVcmwnLCAnaHR0cDovLzQ3LjEwOS4yNC4yNDQ6ODAyNS9oaWtlcnVsZS9kZXYvanNvbl9saXN0P25hbWU9NDE3MDM2MzYnKVxcbi8vIFxcbi8qXFxuKi9cIixcInBhZ2VzXCI6XCJbe1xcXCJjb2xfdHlwZVxcXCI6XFxcInRleHRfMVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJDbGFzc1RhYlxcXCIsXFxcInBhdGhcXFwiOlxcXCJDbGFzc1RhYlxcXCIsXFxcInJ1bGVcXFwiOlxcXCJ2YXIge1xcXFxuICAgIFFJTkdfVElUTEUsIHRpdGxlLCB1cmwsXFxcXG4gICAgY2xhc3NfbmFtZSwgY2xhc3NfdXJsLFxcXFxuICAgIGFyZWFfbmFtZSwgYXJlYV91cmwsXFxcXG4gICAgeWVhcl9uYW1lLCB5ZWFyX3VybCxcXFxcbiAgICBzb3J0X25hbWUsIHNvcnRfdXJsXFxcXG59ID0gJC5pbXBvcnRQYXJhbVxcXFxuY29uc3QgQ2xhc3NUYWIgPSBmdW5jdGlvbihjbGFzc0FycmF5LCBwYXJhbXMpIHtcXFxcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIHBhcmFtcylcXFxcbiAgICB0aGlzLmFyciA9IGNsYXNzQXJyYXkubWFwKHYgPT4gdGhpcy5pbml0KHYpKVxcXFxuICAgIHRoaXMuc2lnbiA9ICckJyArIFFJTkdfVElUTEUgKyAnXycgKyAodGhpcy5uYW1lIHx8ICcnKSArICdfJ1xcXFxuICAgIHRoaXMuY29sb3IgPSB0aGlzLmNvbG9yIHx8ICcjMTJiNjY4J1xcXFxuICAgIHRoaXMuYm91bmRhcnkgPSB0aGlzLmJvdW5kYXJ5IHx8ICdibGFua19ibG9jaydcXFxcbn1cXFxcbkNsYXNzVGFiLnByb3RvdHlwZSA9IHtcXFxcbiAgICBjb25zdHJ1Y3RvcjogQ2xhc3NUYWIsXFxcXG4gICAgbG9hZChlbCkge1xcXFxuICAgICAgICBsZXQgZm9sZGVkID0gdGhpcy5mb2xkICYmIGdldFZhcignJGZvbGRfJyArIHRoaXMuc2lnbiwgJycpXFxcXG4gICAgICAgIGlmICh0aGlzLmFyci5sZW5ndGggPiAxICYmIHRoaXMuZm9sZCkgZWwucHVzaCh7XFxcXG4gICAgICAgICAgICB0aXRsZTogJ+KAnOKAnOKAneKAnScgKyAoZm9sZGVkID8gJ+KWticgOiAn4pa8JykuZm9udGNvbG9yKCcjMDQ5ZWZmJyksXFxcXG4gICAgICAgICAgICB1cmw6ICQoJyNub0xvYWRpbmcjJykubGF6eVJ1bGUoKHNpZ24sIGZvbGRlZCkgPT4ge1xcXFxuICAgICAgICAgICAgICAgIHB1dFZhcignJGZvbGRfJyArIHNpZ24sIGZvbGRlZCA/ICcnIDogJ1QnKVxcXFxuICAgICAgICAgICAgICAgIHJlZnJlc2hQYWdlKGZhbHNlKVxcXFxuICAgICAgICAgICAgICAgIHJldHVybiAnaGlrZXI6Ly9lbXB0eSdcXFxcbiAgICAgICAgICAgIH0sIHRoaXMuc2lnbiwgZm9sZGVkKSxcXFxcbiAgICAgICAgICAgIGNvbF90eXBlOiAnc2Nyb2xsX2J1dHRvbidcXFxcbiAgICAgICAgfSlcXFxcbiAgICAgICAgbGV0IGFyciA9IGZvbGRlZCA/IFt0aGlzLmFyclswXV0gOiB0aGlzLmFyclxcXFxuICAgICAgICBhcnIuZm9yRWFjaCgodikgPT4ge1xcXFxuICAgICAgICAgICAgbGV0IHsgaWQsIGNsYXNzX25hbWUsIGNsYXNzX3VybCB9ID0gdixcXFxcbiAgICAgICAgICAgIHNlbGVjdGVkID0gSlNPTi5zdHJpbmdpZnkodGhpcy5nZXRDbGFzcyhpZCkpXFxcXG4gICAgICAgICAgICBjbGFzc19uYW1lLmZvckVhY2goKG5hbWUsIGkpID0+IHtcXFxcbiAgICAgICAgICAgICAgICBsZXQgdXJsID0gY2xhc3NfdXJsW2ldLFxcXFxuICAgICAgICAgICAgICAgICAgICBub3cgPSBKU09OLnN0cmluZ2lmeSh7IG5hbWU6IG5hbWUsIHVybDogdXJsIH0pXFxcXG4gICAgICAgICAgICAgICAgZWwucHVzaCh7XFxcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBzZWxlY3RlZCA9PSBub3cgPyAn4oCc4oCc4oCd4oCdJyArIG5hbWUuZm9udGNvbG9yKHRoaXMuY29sb3IpLmJvbGQoKSA6IG5hbWUsXFxcXG4gICAgICAgICAgICAgICAgICAgIHVybDogc2VsZWN0ZWQgPT0gbm93ID8gJ2hpa2VyOi8vZW1wdHknIDogJCgnI25vTG9hZGluZyMnKS5sYXp5UnVsZSgoc2lnbiwgaWQsIG5vdykgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgcHV0VmFyKHNpZ24gKyBpZCwgbm93KVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoZmFsc2UpXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXFxcXG4gICAgICAgICAgICAgICAgICAgIH0sIHRoaXMuc2lnbiwgaWQsIG5vdyksXFxcXG4gICAgICAgICAgICAgICAgICAgIGNvbF90eXBlOiAnc2Nyb2xsX2J1dHRvbidcXFxcbiAgICAgICAgICAgICAgICB9KVxcXFxuICAgICAgICAgICAgfSlcXFxcbiAgICAgICAgICAgIGVsLnB1c2goeyBjb2xfdHlwZTogdGhpcy5ib3VuZGFyeSB9KVxcXFxuICAgICAgICB9KVxcXFxuICAgIH0sXFxcXG4gICAgaW5pdChjbGFzc09iamVjdCkge1xcXFxuICAgICAgICBpZiAodHlwZW9mIGNsYXNzT2JqZWN0LmNsYXNzX25hbWUgPT0gJ3N0cmluZycpXFxcXG4gICAgICAgICAgICBjbGFzc09iamVjdC5jbGFzc19uYW1lID0gY2xhc3NPYmplY3QuY2xhc3NfbmFtZS5zcGxpdCgnJicpXFxcXG4gICAgICAgIGlmICh0eXBlb2YgY2xhc3NPYmplY3QuY2xhc3NfdXJsID09ICdzdHJpbmcnKVxcXFxuICAgICAgICAgICAgY2xhc3NPYmplY3QuY2xhc3NfdXJsID0gY2xhc3NPYmplY3QuY2xhc3NfdXJsLnNwbGl0KCcmJykubWFwKCh2KSA9PiB2LnRyaW0oKSlcXFxcbiAgICAgICAgcmV0dXJuIGNsYXNzT2JqZWN0XFxcXG4gICAgfSxcXFxcbiAgICBwdXNoKGNsYXNzT2JqZWN0KSB7XFxcXG4gICAgICAgIHRoaXMuYXJyLnB1c2godGhpcy5pbml0KGNsYXNzT2JqZWN0KSlcXFxcbiAgICB9LFxcXFxuICAgIGdldENsYXNzKGlkKSB7XFxcXG4gICAgICAgIGxldCBkZWZhdWx0Q2xhc3MgPSB0aGlzLmFyci5maW5kKGl0ZW0gPT4gaXRlbS5pZCA9PSBpZClcXFxcbiAgICAgICAgZGVmYXVsdENsYXNzID0gSlNPTi5zdHJpbmdpZnkoZGVmYXVsdENsYXNzID8ge1xcXFxuICAgICAgICAgICAgbmFtZTogZGVmYXVsdENsYXNzLmNsYXNzX25hbWVbMF0sXFxcXG4gICAgICAgICAgICB1cmw6IGRlZmF1bHRDbGFzcy5jbGFzc191cmxbMF1cXFxcbiAgICAgICAgfSA6IHsgbmFtZTogICdjYW5ub3QgZmluZCBpZDogJyArIGlkICsgJyBpbiBjbGFzc1RhYjogJyArIHRoaXMuc2lnbiwgdXJsOiAnJ30pXFxcXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGdldFZhcih0aGlzLnNpZ24gKyBpZCwgZGVmYXVsdENsYXNzKSlcXFxcbiAgICB9LFxcXFxuICAgIHNldFVybCh1cmwpIHtcXFxcbiAgICAgICAgcmV0dXJuIHVybC5yZXBsYWNlKC9cXFxcXFxcXCRcXFxcXFxcXHsoW159XSopXFxcXFxcXFx9L2csIChfLCBpZCkgPT4gdGhpcy5nZXRDbGFzcyhpZCkudXJsKVxcXFxuICAgIH1cXFxcbn1cXFxcbi8vIOeUn+aIkOWktOmDqOWIhuexu1xcXFxubGV0IGZ5QWxsID0gdXJsLmluY2x1ZGVzKCdmeUFsbCcpLFxcXFxuICAgIHRhYkhlYWRlciA9IFtdXFxcXG5pZiAoY2xhc3NfbmFtZSkgdGFiSGVhZGVyLnB1c2goe1xcXFxuICAgIGlkOiBmeUFsbCA/ICdmeUFsbCcgOiAnZnljbGFzcycsXFxcXG4gICAgY2xhc3NfbmFtZTogY2xhc3NfbmFtZSxcXFxcbiAgICBjbGFzc191cmw6IGNsYXNzX3VybFxcXFxufSlcXFxcbmlmIChhcmVhX25hbWUpIHRhYkhlYWRlci5wdXNoKHtcXFxcbiAgICBpZDogZnlBbGwgPyAnZnlBbGwnIDogJ2Z5YXJlYScsXFxcXG4gICAgY2xhc3NfbmFtZTogYXJlYV9uYW1lLFxcXFxuICAgIGNsYXNzX3VybDogYXJlYV91cmxcXFxcbn0pXFxcXG5pZiAoeWVhcl9uYW1lKSB0YWJIZWFkZXIucHVzaCh7XFxcXG4gICAgaWQ6IGZ5QWxsID8gJ2Z5QWxsJyA6ICdmeXllYXInLFxcXFxuICAgIGNsYXNzX25hbWU6IHllYXJfbmFtZSxcXFxcbiAgICBjbGFzc191cmw6IHllYXJfdXJsXFxcXG59KVxcXFxuaWYgKHNvcnRfbmFtZSkgdGFiSGVhZGVyLnB1c2goe1xcXFxuICAgIGlkOiBmeUFsbCA/ICdmeUFsbCcgOiAnZnlzb3J0JyxcXFxcbiAgICBjbGFzc19uYW1lOiBzb3J0X25hbWUsXFxcXG4gICAgY2xhc3NfdXJsOiBzb3J0X3VybFxcXFxufSlcXFxcbiQuZXhwb3J0cyA9IHtcXFxcbiAgICBmeUFsbDogZnlBbGwsXFxcXG4gICAgdGFiSGVhZGVyOiBuZXcgQ2xhc3NUYWIodGFiSGVhZGVyLCB7IG5hbWU6IHRpdGxlLCBmb2xkOiByZWFkRmlsZSgndGFiRm9sZCcpLCB9KVxcXFxufVxcXFxuXFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcImljb25fMl9yb3VuZFxcXCIsXFxcIm5hbWVcXFwiOlxcXCLorr7nva5cXFwiLFxcXCJwYXRoXFxcIjpcXFwiQ29uZmlnXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxuYWRkTGlzdGVuZXIoJ29uQ2xvc2UnLCAnY2xlYXJNeVZhcihcXFxcXFxcInNvcnRGbGFnXFxcXFxcXCIpO3JlZnJlc2hQYWdlKCknKVxcXFxuc2V0UGFnZVRpdGxlKCfimpkg6L275ZCI6ZuG6K6+572uIOKamScpXFxcXG5jb25zdCBRSU5HX1RJVExFID0gZ2V0TXlWYXIoJ215Q29sbGVjdGlvbicpLFxcXFxuICAgIHVybCA9IGdldE15VmFyKCdyZW1vdGVVcmwnKVxcXFxubGV0IGRhdGEgPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9kYXRhTG9hZD9ydWxlPScgKyBRSU5HX1RJVExFLCB0cnVlKSxcXFxcbiAgICBlbCA9IFt7XFxcXG4gICAgICAgIHRpdGxlOiAnPGI+IOa4hemZpOe8k+WtmO+8jOeri+WNs+abtOaWsCA8c21hbGw+IO+8iOWfuuS6jui/nOeoi+S7k+W6k++8jOS4jeimgemikee5geeCueWHu++8iScsXFxcXG4gICAgICAgIHVybDogJCgnI25vTG9hZGluZyMnKS5sYXp5UnVsZSgodXJsKSA9PiB7XFxcXG4gICAgICAgICAgICBpZiAodXJsLnN0YXJ0c1dpdGgoJ2hpa2VyOi8vJykgfHwgdXJsLnN0YXJ0c1dpdGgoJ2ZpbGU6Ly8nKSlcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3RvYXN0Oi8v5LuT5bqT5Li65pys5Zyw5paH5Lu277yM5LiN5Lya6L+b6KGM57yT5a2Y77yM5pys5Yqf6IO95Lmf5peg5pWIJ1xcXFxuICAgICAgICAgICAgZGVsZXRlQ2FjaGUodXJsKVxcXFxuICAgICAgICAgICAgYmFjayhmYWxzZSlcXFxcbiAgICAgICAgICAgIHJldHVybiAndG9hc3Q6Ly/lt7Lmm7TmlrAnXFxcXG4gICAgICAgIH0sIHVybCksXFxcXG4gICAgICAgIGltZzogJ2hpa2VyOi8vaW1hZ2VzL2ljb240JyxcXFxcbiAgICAgICAgY29sX3R5cGU6ICdhdmF0YXInXFxcXG4gICAgfV0sXFxcXG4gICAgdXBkYXRlSW50ZXJ2YWwgPSByZWFkRmlsZSgndXBkYXRlSW50ZXJ2YWwnKSB8fCAnMScsXFxcXG4gICAgbmV3V2luZG93ID0gcmVhZEZpbGUoJ25ld1dpbmRvdycpLFxcXFxuICAgIHRhYkZvbGQgPSByZWFkRmlsZSgndGFiRm9sZCcpLFxcXFxuICAgIGRpc2FibGVDdXN0b20gPSByZWFkRmlsZSgnZGlzYWJsZUN1c3RvbScpLFxcXFxuICAgIGVkaXRNb2RlID0gZGlzYWJsZUN1c3RvbSA/ICflr7zlhaXmtbfpmJQnIDogZ2V0TXlWYXIoJ2VkaXRNb2RlJywgJ+WQr+eUqC/npoHnlKgnKVxcXFxuXFxcXG5lbC5wdXNoKHtcXFxcbiAgICB0aXRsZTogJyAg8J+SoSDmm7TmlrDpopHnjoc6ICcgKyAodXBkYXRlSW50ZXJ2YWwgPT0gMCA/ICfmiYvliqgnIDogdXBkYXRlSW50ZXJ2YWwgKyAn5aSpJykgKyAnICAnLFxcXFxuICAgIHVybDogJCh1cGRhdGVJbnRlcnZhbCwgJ+i+k+WFpeabtOaWsOmXtOmalO+8iOWkqe+8ie+8jOS4ujDliJnmiYvliqjmm7TmlrBcXFxcXFxcXG7mnKzlnLDmlofku7bpk77mjqXml6DmlYgnKS5pbnB1dCgoKSA9PiB7XFxcXG4gICAgICAgIGlucHV0ID0gcGFyc2VJbnQoaW5wdXQpXFxcXG4gICAgICAgIGlmIChOdW1iZXIuaXNOYU4oaW5wdXQpKSBpbnB1dCA9IDFcXFxcbiAgICAgICAgZWxzZSBpZiAoaW5wdXQgPCAxKSBpbnB1dCA9IDBcXFxcbiAgICAgICAgc2F2ZUZpbGUoJ3VwZGF0ZUludGVydmFsJywgaW5wdXQudG9TdHJpbmcoKSlcXFxcbiAgICAgICAgcmVmcmVzaFBhZ2UoKVxcXFxuICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXFxcXG4gICAgfSksXFxcXG4gICAgY29sX3R5cGU6ICdzY3JvbGxfYnV0dG9uJ1xcXFxufSwge1xcXFxuICAgIHRpdGxlOiAnICDwn5alIOeLrOeri+mmlumhtTogJyArIChuZXdXaW5kb3cgPyAn5pivJyA6ICflkKYnKSArICcgICcsXFxcXG4gICAgdXJsOiAkKCcjbm9Mb2FkaW5nIycpLmxhenlSdWxlKChuZXdXaW5kb3cpID0+IHtcXFxcbiAgICAgICAgc2F2ZUZpbGUoJ25ld1dpbmRvdycsIG5ld1dpbmRvdyA/ICcnIDogJ1QnKVxcXFxuICAgICAgICByZWZyZXNoUGFnZSgpXFxcXG4gICAgICAgIHJldHVybiAnaGlrZXI6Ly9lbXB0eSdcXFxcbiAgICB9LCBuZXdXaW5kb3cpLFxcXFxuICAgIGNvbF90eXBlOiAnc2Nyb2xsX2J1dHRvbidcXFxcbn0sIHtcXFxcbiAgICB0aXRsZTogJyAg8J+SoCDliIbnsbvmipjlj6A6ICcgKyAodGFiRm9sZCA/ICfmmK8nIDogJ+WQpicpICsgJyAgJyxcXFxcbiAgICB1cmw6ICQoJyNub0xvYWRpbmcjJykubGF6eVJ1bGUoKHRhYkZvbGQpID0+IHtcXFxcbiAgICAgICAgc2F2ZUZpbGUoJ3RhYkZvbGQnLCB0YWJGb2xkID8gJycgOiAnVCcpXFxcXG4gICAgICAgIHJlZnJlc2hQYWdlKClcXFxcbiAgICAgICAgcmV0dXJuICdoaWtlcjovL2VtcHR5J1xcXFxuICAgIH0sIHRhYkZvbGQpLFxcXFxuICAgIGNvbF90eXBlOiAnc2Nyb2xsX2J1dHRvbidcXFxcbn0sIHtcXFxcbiAgICB0aXRsZTogJyAg8J+SvCDlpIfku73mgaLlpI0gICcsXFxcXG4gICAgdXJsOiAkKFsn5aSH5Lu9JywgJ+aBouWkjSddLCAxKS5zZWxlY3QoKFFJTkdfVElUTEUsIHVwZGF0ZUludGVydmFsLCBuZXdXaW5kb3csIHRhYkZvbGQsIGRpc2FibGVDdXN0b20pID0+IHtcXFxcbiAgICAgICAgbGV0IHVybCA9IGdldE15VmFyKCdyZW1vdGVVcmwnKVxcXFxuICAgICAgICBpZiAoIXVybC5zdGFydHNXaXRoKCdoaWtlcjovLycpICYmICF1cmwuc3RhcnRzV2l0aCgnZmlsZTovLycpKVxcXFxuICAgICAgICAgICAgdXJsID0gJ2hpa2VyOi8vZmlsZXMvbGlicy8nICsgbWQ1KHVybCkgKyAnLmpzJ1xcXFxuICAgICAgICBlbHNlIGlmICh1cmwuc3RhcnRzV2l0aCgnaGlrZXI6Ly9wYWdlLycpKSB1cmwgPSAnaGlrZXI6Ly9lbXB0eSdcXFxcbiAgICAgICAgaWYgKGlucHV0ID09ICflpIfku70nKSByZXR1cm4gJCgnaGlrZXI6Ly9maWxlcy90bXAvJyArIFFJTkdfVElUTEUgKyAnX2JhY2t1cC5qc29uJywgJ+i+k+WFpeWkh+S7vei3r+W+hCcpXFxcXG4gICAgICAgICAgICAuaW5wdXQoKHVybCwgdXBkYXRlSW50ZXJ2YWwsIG5ld1dpbmRvdywgdGFiRm9sZCwgZGlzYWJsZUN1c3RvbSkgPT4ge1xcXFxuICAgICAgICAgICAgICAgIGxldCBydWxlcyA9IHJlcXVlc3QodXJsKSxcXFxcbiAgICAgICAgICAgICAgICAgICAgY3VzdG9tRGF0YSA9IHJlYWRGaWxlKCdjdXN0b21EYXRhJylcXFxcbiAgICAgICAgICAgICAgICB3cml0ZUZpbGUoaW5wdXQsIEpTT04uc3RyaW5naWZ5KHtcXFxcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlSW50ZXJ2YWw6IHVwZGF0ZUludGVydmFsLFxcXFxuICAgICAgICAgICAgICAgICAgICBuZXdXaW5kb3c6IG5ld1dpbmRvdyxcXFxcbiAgICAgICAgICAgICAgICAgICAgdGFiRm9sZDogdGFiRm9sZCxcXFxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZUN1c3RvbTogZGlzYWJsZUN1c3RvbSxcXFxcbiAgICAgICAgICAgICAgICAgICAgY3VzdG9tRGF0YTogY3VzdG9tRGF0YSxcXFxcbiAgICAgICAgICAgICAgICAgICAgcnVsZXM6IHJ1bGVzXFxcXG4gICAgICAgICAgICAgICAgfSkpXFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuICd0b2FzdDovL+W3suWkh+S7ve+8jOazqOaEj+iLpeS7k+W6k+S4uuWtkOmhtemdouWImeS4jeWkh+S7vSdcXFxcbiAgICAgICAgICAgIH0sIHVybCwgdXBkYXRlSW50ZXJ2YWwsIG5ld1dpbmRvdywgdGFiRm9sZCwgZGlzYWJsZUN1c3RvbSlcXFxcbiAgICAgICAgZWxzZSByZXR1cm4gJCgnaGlrZXI6Ly9maWxlcy90bXAvJyArIFFJTkdfVElUTEUgKyAnX2JhY2t1cC5qc29uJywgJ+i+k+WFpeWkh+S7vei3r+W+hCcpLmlucHV0KCh1cmwpID0+IHtcXFxcbiAgICAgICAgICAgIGxldCB7IHVwZGF0ZUludGVydmFsLCBuZXdXaW5kb3csIHRhYkZvbGQsIGRpc2FibGVDdXN0b20sIGN1c3RvbURhdGEsIHJ1bGVzIH0gPSBKU09OLnBhcnNlKHJlcXVlc3QoaW5wdXQpKVxcXFxuICAgICAgICAgICAgc2F2ZUZpbGUoJ3VwZGF0ZUludGVydmFsJywgdXBkYXRlSW50ZXJ2YWwpXFxcXG4gICAgICAgICAgICBzYXZlRmlsZSgnbmV3V2luZG93JywgbmV3V2luZG93KVxcXFxuICAgICAgICAgICAgc2F2ZUZpbGUoJ3RhYkZvbGQnLCB0YWJGb2xkKVxcXFxuICAgICAgICAgICAgc2F2ZUZpbGUoJ2Rpc2FibGVDdXN0b20nLCBkaXNhYmxlQ3VzdG9tKVxcXFxuICAgICAgICAgICAgc2F2ZUZpbGUoJ2N1c3RvbURhdGEnLCBjdXN0b21EYXRhKVxcXFxuICAgICAgICAgICAgaWYgKHJ1bGVzKSB3cml0ZUZpbGUodXJsLCBydWxlcylcXFxcbiAgICAgICAgICAgIHJlZnJlc2hQYWdlKClcXFxcbiAgICAgICAgICAgIHJldHVybiAndG9hc3Q6Ly/lt7LmgaLlpI3vvIzlpoLmnpzkuI3mg7PlkIzmraXov5znqIvku5PlupPvvIzlj6/ku6Xorr7nva7mm7TmlrDpopHnjofkuLrmiYvliqgnXFxcXG4gICAgICAgIH0sIHVybClcXFxcbiAgICB9LCBRSU5HX1RJVExFLCB1cGRhdGVJbnRlcnZhbCwgbmV3V2luZG93LCB0YWJGb2xkLCBkaXNhYmxlQ3VzdG9tKSxcXFxcbiAgICBjb2xfdHlwZTogJ3Njcm9sbF9idXR0b24nXFxcXG59LCB7XFxcXG4gICAgdGl0bGU6ICfigJzigJzigJ3igJ08Zm9udCBjb2xvcj1cXFxcXFxcIiM2NjY2NjZcXFxcXFxcIj48c21hbGw+54m55Yir6bij6LCi77yM5bCP56iL5bqP5o+Q5L6b6ICF77yaXFxcXFxcXFxuJyArXFxcXG4gICAgICAgIGRhdGEucmVkdWNlKChzZWxmLCB2KSA9PiB2LmF1dGhvciA/IHNlbGYuY29uY2F0KHYuYXV0aG9yLnNwbGl0KCcmJykpIDogc2VsZiwgW10pXFxcXG4gICAgICAgIC5maWx0ZXIoKHYsIGksIGFycikgPT4gdiAmJiBhcnIuaW5kZXhPZih2KSA9PSBpKS5qb2luKCfjgIEnKSxcXFxcbiAgICB1cmw6ICdoaWtlcjovL2VtcHR5JyxcXFxcbiAgICBjb2xfdHlwZTogJ3RleHRfY2VudGVyXzEnXFxcXG59KVxcXFxuXFxcXG5lbC5wdXNoKHsgY29sX3R5cGU6ICdsaW5lJyB9LCB7XFxcXG4gICAgdGl0bGU6ICfigJzigJzigJ3igJ0nICsgJ/Cfk50nLnNtYWxsKCkgKyAnJm5ic3Ag6L275ZCI6ZuG6Ieq5a6a5LmJICZuYnNwJy5ib2xkKCkuZm9udGNvbG9yKCcjNzU3NTc1JykgKyAoZGlzYWJsZUN1c3RvbSA/ICfinYwnIDogJ+KtlScpLnNtYWxsKCksXFxcXG4gICAgdXJsOiAkKFsoZGlzYWJsZUN1c3RvbSA/ICflkK/nlKgnIDogJ+emgeeUqCcpICsgJ+WQiOmbhuiHquWumuS5iScsICfmuIXpmaToh6rlrprkuYnmlbDmja4nLCAn57yW6L6RSlNPTiddLCAxKS5zZWxlY3QoKCkgPT4ge1xcXFxuICAgICAgICBzd2l0Y2ggKGlucHV0LnNsaWNlKDAsIDIpKSB7XFxcXG4gICAgICAgICAgICBjYXNlICfmuIXpmaQnOlxcXFxuICAgICAgICAgICAgICAgIGRlbGV0ZUZpbGUoJ2N1c3RvbURhdGEnKVxcXFxuICAgICAgICAgICAgICAgIGJyZWFrXFxcXG4gICAgICAgICAgICBjYXNlICflkK/nlKgnOlxcXFxuICAgICAgICAgICAgICAgIHNhdmVGaWxlKCdkaXNhYmxlQ3VzdG9tJywgJycpXFxcXG4gICAgICAgICAgICAgICAgYnJlYWtcXFxcbiAgICAgICAgICAgIGNhc2UgJ+emgeeUqCc6XFxcXG4gICAgICAgICAgICAgICAgc2F2ZUZpbGUoJ2Rpc2FibGVDdXN0b20nLCAnVCcpXFxcXG4gICAgICAgICAgICAgICAgaW5wdXQgKz0gJ1xcXFxcXFxcbuWwj+eoi+W6j+WQr+eUqC/npoHnlKjjgIHph43mlrDmjpLluo/nrYnmk43kvZzlnYfkuI3kvJrkvZPnjrDlnKjpppbpobXlsI/nqIvluo/liJfooajkuK0nXFxcXG4gICAgICAgICAgICAgICAgYnJlYWtcXFxcbiAgICAgICAgICAgIGNhc2UgJ+e8lui+kSc6XFxcXG4gICAgICAgICAgICAgICAgbGV0IHVybCA9IGdldE15VmFyKCdyZW1vdGVVcmwnKVxcXFxuICAgICAgICAgICAgICAgIGlmICghdXJsLnN0YXJ0c1dpdGgoJ2hpa2VyOi8vZmlsZXMvJykgJiYgIXVybC5zdGFydHNXaXRoKCdmaWxlOi8vJykpXFxcXG4gICAgICAgICAgICAgICAgICAgIHVybCA9ICdoaWtlcjovL2ZpbGVzL2xpYnMvJyArIG1kNSh1cmwpICsgJy5qcydcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gICdoaWtlcjovL3BhZ2UvaW50ZXJmYWNlI25vUmVmcmVzaCMjbm9IaXN0b3J5IyNub1JlY29yZEhpc3RvcnkjP3J1bGU9SlNPTue8lui+keWZqCZKc29uPScrYmFzZTY0RW5jb2RlKHVybClcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICByZWZyZXNoUGFnZShmYWxzZSlcXFxcbiAgICAgICAgcmV0dXJuICd0b2FzdDovL+W3sicgKyBpbnB1dFxcXFxuICAgIH0pLFxcXFxuICAgIGNvbF90eXBlOiAndGV4dF9jZW50ZXJfMScsXFxcXG4gICAgZXh0cmE6IHsgbGluZVZpc2libGU6IGZhbHNlIH1cXFxcbn0pO1xcXFxuKGRpc2FibGVDdXN0b20gPyBbJ+WvvOWFpea1t+mYlCddIDogWyflkK/nlKgv56aB55SoJywgJ+mHjeaWsOaOkuW6jycsICfmm7TmlLnlm77moIcnLCAn5a+85YWl5rW36ZiUJ10pLmZvckVhY2goKHYpID0+IHtcXFxcbiAgICBlbC5wdXNoKHtcXFxcbiAgICAgICAgdGl0bGU6IHYgPT0gZWRpdE1vZGUgPyAn4oCc4oCc4oCd4oCdJyArIHYuYm9sZCgpLmZvbnRjb2xvcignIzEyYjY2OCcpIDogdixcXFxcbiAgICAgICAgdXJsOiB2ID09IGVkaXRNb2RlID8gJ2hpa2VyOi8vZW1wdHknIDogJCgnI25vTG9hZGluZyMnKS5sYXp5UnVsZSgodikgPT4ge1xcXFxuICAgICAgICAgICAgcHV0TXlWYXIoJ2VkaXRNb2RlJywgdilcXFxcbiAgICAgICAgICAgIHJlZnJlc2hQYWdlKGZhbHNlKVxcXFxuICAgICAgICAgICAgcmV0dXJuICdoaWtlcjovL2VtcHR5J1xcXFxuICAgICAgICB9LCB2KSxcXFxcbiAgICAgICAgY29sX3R5cGU6ICdzY3JvbGxfYnV0dG9uJ1xcXFxuICAgIH0pXFxcXG59KTtcXFxcbmlmIChlZGl0TW9kZSA9PSAn5a+85YWl5rW36ZiUJykgZWwucHVzaCh7XFxcXG4gICAgdGl0bGU6ICflhajpg6jlr7zlhaUnLFxcXFxuICAgIHVybDogJ+a1t+mYlOinhueVjO+/pWhvbWVfcnVsZV91cmzvv6UnICsgKHVybC5zdGFydHNXaXRoKCdoaWtlcjovLycpIHx8IHVybC5zdGFydHNXaXRoKCdmaWxlOi8vJykgPyB1cmwgOiAnaGlrZXI6Ly9maWxlcy9saWJzLycgKyBtZDUodXJsKSArICcuanMnKSxcXFxcbiAgICBjb2xfdHlwZTogJ3RleHRfY2VudGVyXzEnLFxcXFxuICAgIGV4dHJhOiB7IGxpbmVWaXNpYmxlOiBmYWxzZSB9XFxcXG59KTtcXFxcbihkaXNhYmxlQ3VzdG9tID8gZGF0YSA6IEpTT04ucGFyc2UocmVhZEZpbGUoJ2N1c3RvbURhdGEnKSB8fCAnW10nKSkuZm9yRWFjaCgodiwgaSkgPT4ge1xcXFxuICAgIGxldCBkID0geyB0aXRsZTogdi50aXRsZSwgaW1nOiBkYXRhW2ldLmljb24gfVxcXFxuICAgIHN3aXRjaCAoZWRpdE1vZGUpIHtcXFxcbiAgICAgICAgY2FzZSAn5ZCv55SoL+emgeeUqCc6XFxcXG4gICAgICAgICAgICBkLnRpdGxlID0gKHYudmlzaWJsZSA/ICfwn5+iICAnIDogJ/CflLQgICcpICsgZC50aXRsZVxcXFxuICAgICAgICAgICAgZC51cmwgPSAkKCcjbm9Mb2FkaW5nIycpLmxhenlSdWxlKChpKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgbGV0IHJ1bGVzID0gSlNPTi5wYXJzZShyZWFkRmlsZSgnY3VzdG9tRGF0YScpIHx8ICdbXScpXFxcXG4gICAgICAgICAgICAgICAgcnVsZXNbaV0udmlzaWJsZSA9ICFydWxlc1tpXS52aXNpYmxlXFxcXG4gICAgICAgICAgICAgICAgc2F2ZUZpbGUoJ2N1c3RvbURhdGEnLCBKU09OLnN0cmluZ2lmeShydWxlcykpXFxcXG4gICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoZmFsc2UpXFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuICdoaWtlcjovL2VtcHR5J1xcXFxuICAgICAgICAgICAgfSwgaSlcXFxcbiAgICAgICAgICAgIGJyZWFrXFxcXG4gICAgICAgIGNhc2UgJ+mHjeaWsOaOkuW6jyc6XFxcXG4gICAgICAgICAgICBsZXQgc29ydEZsYWcgPSBwYXJzZUludChnZXRNeVZhcignc29ydEZsYWcnLCAnLTEnKSlcXFxcbiAgICAgICAgICAgIGQudGl0bGUgPSAoc29ydEZsYWcgPT0gaSA/ICfwn5SDICAnIDogJycpICsgZC50aXRsZVxcXFxuICAgICAgICAgICAgaWYgKHNvcnRGbGFnID09IC0xKVxcXFxuICAgICAgICAgICAgICAgIGQudXJsID0gJCgnI25vTG9hZGluZyMnKS5sYXp5UnVsZSgoaSkgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICBwdXRNeVZhcignc29ydEZsYWcnLCBpLnRvU3RyaW5nKCkpXFxcXG4gICAgICAgICAgICAgICAgICAgIHJlZnJlc2hQYWdlKGZhbHNlKVxcXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ3RvYXN0Oi8v6YCJ5oup6KaB56e75Yqo5Yiw55qE5L2N572uJ1xcXFxuICAgICAgICAgICAgICAgIH0sIGkpXFxcXG4gICAgICAgICAgICBlbHNlXFxcXG4gICAgICAgICAgICAgICAgZC51cmwgPSAkKCcjbm9Mb2FkaW5nIycpLmxhenlSdWxlKChvbGRJbmRleCwgbmV3SW5kZXgpID0+IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJ1bGVzID0gSlNPTi5wYXJzZShyZWFkRmlsZSgnY3VzdG9tRGF0YScpIHx8ICdbXScpXFxcXG4gICAgICAgICAgICAgICAgICAgIHJ1bGVzLnNwbGljZShuZXdJbmRleCwgMCwgcnVsZXMuc3BsaWNlKG9sZEluZGV4LCAxKVswXSlcXFxcbiAgICAgICAgICAgICAgICAgICAgc2F2ZUZpbGUoJ2N1c3RvbURhdGEnLCBKU09OLnN0cmluZ2lmeShydWxlcykpXFxcXG4gICAgICAgICAgICAgICAgICAgIHB1dE15VmFyKCdzb3J0RmxhZycsICctMScpXFxcXG4gICAgICAgICAgICAgICAgICAgIHJlZnJlc2hQYWdlKGZhbHNlKVxcXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXFxcXG4gICAgICAgICAgICAgICAgfSwgc29ydEZsYWcsIGkpXFxcXG4gICAgICAgICAgICBicmVha1xcXFxuICAgICAgICBjYXNlICfmm7TmlLnlm77moIcnOlxcXFxuICAgICAgICAgICAgZC51cmwgPSAkKHYuaWNvbiB8fCAnJywgJ+i+k+WFpeaWsOWbvuagh+WcsOWdgOaIluminOiJsuS7o+egge+8micpLmlucHV0KChpKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgbGV0IHJ1bGVzID0gSlNPTi5wYXJzZShyZWFkRmlsZSgnY3VzdG9tRGF0YScpIHx8ICdbXScpXFxcXG4gICAgICAgICAgICAgICAgaWYgKGlucHV0KVxcXFxuICAgICAgICAgICAgICAgICAgICBydWxlc1tpXS5pY29uID0gaW5wdXRcXFxcbiAgICAgICAgICAgICAgICBlbHNlXFxcXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBydWxlc1tpXS5pY29uXFxcXG4gICAgICAgICAgICAgICAgc2F2ZUZpbGUoJ2N1c3RvbURhdGEnLCBKU09OLnN0cmluZ2lmeShydWxlcykpXFxcXG4gICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoZmFsc2UpXFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuICdoaWtlcjovL2VtcHR5J1xcXFxuICAgICAgICAgICAgfSwgaSlcXFxcbiAgICAgICAgICAgIGJyZWFrXFxcXG4gICAgICAgIGNhc2UgJ+WvvOWFpea1t+mYlCc6XFxcXG4gICAgICAgICAgICBkLnVybCA9ICQoJyNub0xvYWRpbmcjJykubGF6eVJ1bGUoKGkpID0+IHtcXFxcbiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2RhdGFMb2FkP3J1bGU9JyArIGdldE15VmFyKCdteUNvbGxlY3Rpb24nKSwgdHJ1ZSlcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3J1bGU6Ly8nICsgYmFzZTY0RW5jb2RlKEpTT04uc3RyaW5naWZ5KGRhdGFbaV0pKVxcXFxuICAgICAgICAgICAgfSwgaSlcXFxcbiAgICAgICAgICAgIGJyZWFrXFxcXG4gICAgfVxcXFxuICAgIGVsLnB1c2goZClcXFxcbn0pXFxcXG5zZXRSZXN1bHQoZWwpXFxcXG5cXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLpobXpnaLovb3lhaVcXFwiLFxcXCJwYXRoXFxcIjpcXFwiZnJhbWVMb2FkXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxuY29uc3QgUUlOR19USVRMRSA9IGdldE15VmFyKCdteUNvbGxlY3Rpb24nKVxcXFxudmFyIG15Q29sbF9lbCA9IFtdXFxcXG5ldmFsKEpTT04ucGFyc2UoZmV0Y2goJ2hpa2VyOi8vcGFnZS9oaWphY2tFbnY/cnVsZT0nICsgUUlOR19USVRMRSkpLnJ1bGUpXFxcXG5cXFxcbmlmICghaXNJbmRleCkge1xcXFxuICAgIGlmIChwYWdlVGl0bGUpIHNldFBhZ2VUaXRsZShwYWdlVGl0bGUpXFxcXG4gICAgc2V0TGFzdENoYXB0ZXJSdWxlKG9yaVJVTEUubGFzdF9jaGFwdGVyX3J1bGUpXFxcXG4gICAgTVlfUEFSQU1TID0gTVlfUlVMRS5wYXJhbXNcXFxcbn0gZWxzZSBpZiAoTVlfUEFHRSA9PSAxKSB7XFxcXG4gICAgdGFiSGVhZGVyLmxvYWQobXlDb2xsX2VsKVxcXFxuICAgIGlmIChSVUxFLnNlYXJjaF91cmwpIG15Q29sbF9lbC5wdXNoKHtcXFxcbiAgICAgICAgdGl0bGU6IFxcXFxcXFwi5pCc57SiXFxcXFxcXCIsXFxcXG4gICAgICAgIGRlc2M6IFxcXFxcXFwi6L+Z5piv6L275ZCI6ZuG55qE5pCc57Si5ZOmfn5cXFxcXFxcIixcXFxcbiAgICAgICAgdXJsOiAnXFxcXFxcXCJoaWtlcjovL3NlYXJjaD9zPVxcXFxcXFwiK2lucHV0JyxcXFxcbiAgICAgICAgZXh0cmE6IHtcXFxcbiAgICAgICAgICAgIHJ1bGVzOiAkLnRvU3RyaW5nKChRSU5HX1RJVExFLCB0aXRsZSkgPT4ge1xcXFxuICAgICAgICAgICAgICAgIGxldCBydWxlcyA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2RhdGFMb2FkP3J1bGU9JyArIFFJTkdfVElUTEUpXFxcXG4gICAgICAgICAgICAgICAgcnVsZXMgPSBbcnVsZXMuZmluZCgodikgPT4gdi50aXRsZSA9PSB0aXRsZSldXFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHJ1bGVzKVxcXFxuICAgICAgICAgICAgfSwgUUlOR19USVRMRSwgUlVMRS50aXRsZSksXFxcXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU6IGdldE15VmFyKCdzZWFyY2hLZXknLCAnJyksXFxcXG4gICAgICAgICAgICBvbkNoYW5nZTogXFxcXFxcXCJwdXRNeVZhcignc2VhcmNoS2V5JyxpbnB1dClcXFxcXFxcIlxcXFxuICAgICAgICB9LFxcXFxuICAgICAgICBjb2xfdHlwZTogXFxcXFxcXCJpbnB1dFxcXFxcXFwiLFxcXFxuICAgIH0pXFxcXG59XFxcXG4vLyDmraPmlofop6PmnpBcXFxcbnZhciB7XFxcXG4gICAgcGFyYW1IYW5kbGUsXFxcXG4gICAgcnVuUHJlUnVsZSxcXFxcbiAgICBnZW5FeFVybCxcXFxcbiAgICBoaWphY2tMYXp5UnVsZVxcXFxufSA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2Z1bmNUb29scz9ydWxlPScgKyBRSU5HX1RJVExFKVxcXFxucnVuUHJlUnVsZShvcmlSVUxFLnByZVJ1bGUpXFxcXG5pZiAoTVlfUlVMRS5maW5kX3J1bGUuc3RhcnRzV2l0aCgnanM6JykpIHtcXFxcbiAgICBsZXQgeyBoaWphY2tFbCB9ID0gJC5yZXF1aXJlKCdoaWtlcjovL3BhZ2UvZnVuY1Rvb2xzP3J1bGU9JyArIFFJTkdfVElUTEUpXFxcXG4gICAgc2V0UmVzdWx0ID0gZnVuY3Rpb24ocGFyYW0wLCBwYXJhbTEsIHBhcmFtMiwgcGFyYW0zKSB7XFxcXG4gICAgICAgIHBhcmFtMSA9IENBTExCQUNLX0tFWVxcXFxuICAgICAgICBwYXJhbTIgPSBNWV9SVUxFXFxcXG4gICAgICAgIHBhcmFtMyA9IE1ZX1RZUEVcXFxcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW0wLmRhdGEpKSBwYXJhbTAgPSBwYXJhbTAuZGF0YVxcXFxuICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShteUNvbGxfZWwsIHBhcmFtMC5tYXAoaGlqYWNrRWwpKVxcXFxuICAgICAgICBtZXRob2Rfc2V0UmVzdWx0Lmludm9rZShqYXZhQ29udGV4dCwgbXlDb2xsX2VsLCBwYXJhbTEsIHBhcmFtMiwgcGFyYW0zKVxcXFxuICAgIH1cXFxcbiAgICBzZXRIb21lUmVzdWx0ID0gc2V0UmVzdWx0XFxcXG4gICAgc2V0U2VhcmNoUmVzdWx0ID0gc2V0UmVzdWx0XFxcXG5cXFxcbiAgICBldmFsKE1ZX1JVTEUuZmluZF9ydWxlLnNsaWNlKDMpKVxcXFxufSBlbHNlIHtcXFxcbiAgICBsZXQgeyBydW5Db2RlIH0gPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9mdW5jVG9vbHM/cnVsZT0nICsgUUlOR19USVRMRSksXFxcXG4gICAgICAgIFtfLCBmaW5kUnVsZSwgZGV0YWlsRmluZFJ1bGVdID0gTVlfUlVMRS5maW5kX3J1bGUubWF0Y2goL14oW1xcXFxcXFxcc1xcXFxcXFxcU10qPykoPzo9PT4oW1xcXFxcXFxcc1xcXFxcXFxcU10qKSk/JC8pXFxcXG4gICAgZmluZFJ1bGUgPSBmaW5kUnVsZS5zcGxpdCgnOycpXFxcXG4gICAgcGFyc2VEb21Gb3JBcnJheShnZXRSZXNDb2RlKCksIGZpbmRSdWxlLnNoaWZ0KCkpLmZvckVhY2goKGRhdGEpID0+IHtcXFxcbiAgICAgICAgbGV0IFt0aXRsZSwgaW1nLCBkZXNjLCB1cmxdID0gZmluZFJ1bGUubWFwKCh2LCBpKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgdHJ5IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgaWYgKHYgPT0gJyonKSByZXR1cm4gJydcXFxcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB2ID0gKGkgPT0gMSB8fCBpID09IDMpID9cXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlRG9tKGRhdGEsIHYpIDpcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlRG9tRm9ySHRtbChkYXRhLCB2KVxcXFxuICAgICAgICAgICAgICAgICAgICBpZiAoaSAhPSAzKSB2ID0gcnVuQ29kZSh2KVxcXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdlxcXFxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsgcmV0dXJuICcnIH1cXFxcbiAgICAgICAgICAgIH0pLFxcXFxuICAgICAgICAgICAgcmVzID0ge1xcXFxuICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSwgdXJsOiB1cmwsXFxcXG4gICAgICAgICAgICAgICAgZGVzYzogZGVzYywgaW1nOiBpbWcsXFxcXG4gICAgICAgICAgICAgICAgY29sX3R5cGU6IE1ZX1JVTEUuY29sX3R5cGVcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgaWYgKHJlcy51cmwpIHtcXFxcbiAgICAgICAgICAgIGlmIChyZXMudXJsLmluY2x1ZGVzKCdAbGF6eVJ1bGU9JykpIHtcXFxcbiAgICAgICAgICAgICAgICBsZXQgcmVJbmRleCA9IHJlcy51cmwuaW5kZXhPZignLmpzOicpXFxcXG4gICAgICAgICAgICAgICAgaWYgKHJlSW5kZXggPj0gMCkgcmVzLnVybCA9IHJlcy51cmwuc2xpY2UoMCwgcmVJbmRleCkgKyAnLmpzOicgKyBoaWphY2tMYXp5UnVsZSArICc7JyArIHJlcy51cmwuc2xpY2UocmVJbmRleCArIDQpXFxcXG4gICAgICAgICAgICB9IGVsc2UgIGlmIChkZXRhaWxGaW5kUnVsZSkge1xcXFxuICAgICAgICAgICAgICAgIHJlcy5leHRyYSA9IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBnZW5FeFVybCh1cmwpLFxcXFxuICAgICAgICAgICAgICAgICAgICBSVUxFOiBiYXNlNjRFbmNvZGUoSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmFzc2lnbihnZW5NeVJ1bGUoKSwgeyBkZXRhaWxfZmluZF9ydWxlOiBkZXRhaWxGaW5kUnVsZSB9KSkpLFxcXFxuICAgICAgICAgICAgICAgICAgICBwYWdlVGl0bGU6IGlzSW5kZXggJiYgdGl0bGVcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgcmVzLnVybCA9ICdoaWtlcjovL3BhZ2UvZnJhbWVMb2FkP3J1bGU9JyArIFFJTkdfVElUTEVcXFxcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoTVlfUlVMRS5kZXRhaWxfZmluZF9ydWxlKSB7XFxcXG4gICAgICAgICAgICAgICAgcmVzLmV4dHJhID0ge1xcXFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGdlbkV4VXJsKHVybCksXFxcXG4gICAgICAgICAgICAgICAgICAgIFJVTEU6IGJhc2U2NEVuY29kZShKU09OLnN0cmluZ2lmeShnZW5NeVJ1bGUoKSkpLFxcXFxuICAgICAgICAgICAgICAgICAgICBwYWdlVGl0bGU6IGlzSW5kZXggJiYgdGl0bGVcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgcmVzLnVybCA9ICdoaWtlcjovL3BhZ2UvZnJhbWVMb2FkP3J1bGU9JyArIFFJTkdfVElUTEVcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBteUNvbGxfZWwucHVzaChyZXMpXFxcXG4gICAgfSlcXFxcbiAgICBzZXRSZXN1bHQobXlDb2xsX2VsKVxcXFxufVxcXFxuXFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5pWw5o2u6L295YWlXFxcIixcXFwicGF0aFxcXCI6XFxcImRhdGFMb2FkXFxcIixcXFwicnVsZVxcXCI6XFxcImxldCBzaG93QWxsID0gJC5pbXBvcnRQYXJhbSxcXFxcbiAgICB1cmwgPSBnZXRNeVZhcigncmVtb3RlVXJsJyksXFxcXG4gICAgZGF0YSA9IFtdXFxcXG5pZiAodXJsLnN0YXJ0c1dpdGgoJ2hpa2VyOi8vJykgfHwgdXJsLnN0YXJ0c1dpdGgoJ2ZpbGU6Ly8nKSkge1xcXFxuICAgIC8vIOWmguaenOS4uuacrOWcsOaWh+S7tuWImeS4jei/m+ihjOe8k+WtmFxcXFxuICAgIHRyeSB7XFxcXG4gICAgICAgIGxldCBvcmlEYXRhID0gZmV0Y2godXJsKVxcXFxuICAgICAgICBpZiAodXJsLnN0YXJ0c1dpdGgoJ2hpa2VyOi8vcGFnZS8nKSlcXFxcbiAgICAgICAgICAgIG9yaURhdGEgPSBKU09OLnBhcnNlKG9yaURhdGEpLnJ1bGVcXFxcbiAgICAgICAgZGF0YSA9IEpTT04ucGFyc2Uob3JpRGF0YSlcXFxcbiAgICB9IGNhdGNoIChlKSB7fVxcXFxufSBlbHNlIHtcXFxcbiAgICAvLyDojrflj5bov5znqIvmlbDmja7vvIzmo4Dmn6Xpl7TpmpTpu5jorqTkuIDlpKlcXFxcbiAgICBsZXQgaW50ZXJ2YWwgPSBwYXJzZUludChyZWFkRmlsZSgndXBkYXRlSW50ZXJ2YWwnKSB8fCAnMScpLFxcXFxuICAgICAgICBvbGREYXRhID0gZmV0Y2goJ2hpa2VyOi8vZmlsZXMvbGlicy8nICsgbWQ1KHVybCkgKyAnLmpzJyksXFxcXG4gICAgICAgIHJlbW90ZURhdGEgPSBbXVxcXFxuICAgIGlmIChpbnRlcnZhbCA9PSAwKSBpbnRlcnZhbCA9IC0xXFxcXG4gICAgdHJ5IHsgcmVtb3RlRGF0YSA9IEpTT04ucGFyc2UoZmV0Y2hDYWNoZSh1cmwsIDI0ICogaW50ZXJ2YWwsIHsgdGltZW91dDogNTAwMDAgfSkpIH0gY2F0Y2ggKGUpIHt9XFxcXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHJlbW90ZURhdGEpKSByZW1vdGVEYXRhID0gW11cXFxcbiAgICBpZiAocmVtb3RlRGF0YS5sZW5ndGggPCAzKSB7XFxcXG4gICAgICAgIGxvZygn5pyq6I635Y+W5Yiw5pWw5o2uJylcXFxcbiAgICAgICAgaWYgKG9sZERhdGEpIHdyaXRlRmlsZSgnaGlrZXI6Ly9maWxlcy9saWJzLycgKyBtZDUodXJsKSArICcuanMnLCBvbGREYXRhKVxcXFxuICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShvbGREYXRhIHx8ICdbXScpXFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgICAgbG9nKCflt7Lojrflj5bliLDmlbDmja4nKVxcXFxuICAgICAgICBkYXRhID0gcmVtb3RlRGF0YVxcXFxuICAgIH1cXFxcbn1cXFxcbmRhdGEgPSBkYXRhLmZpbHRlcigodikgPT4gdi50aXRsZSAhPSBnZXRNeVZhcignbXlDb2xsZWN0aW9uJykgJiYgISh2LmF1dGhvciB8fCAnJykuaW5jbHVkZXMoJ+i9u+WQiOmbhueUn+aIkOWZqCcpKVxcXFxuaWYgKHJlYWRGaWxlKCdkaXNhYmxlQ3VzdG9tJykpICQuZXhwb3J0cyA9IGRhdGFcXFxcbmVsc2UgeyAvLyDlhpnlhaXoh6rlrprkuYnmlbDmja5cXFxcbiAgICBsZXQgY3VzdG9tRGF0YSA9IEpTT04ucGFyc2UocmVhZEZpbGUoJ2N1c3RvbURhdGEnKSB8fCAnW10nKSxcXFxcbiAgICAgICAgcmV3cml0ZURhdGEgPSBbXVxcXFxuICAgIGN1c3RvbURhdGEgPSBjdXN0b21EYXRhLnJlZHVjZSgoc2VsZiwgdikgPT4ge1xcXFxuICAgICAgICBsZXQgaW5kZXggPSBkYXRhLmZpbmRJbmRleCgodnYpID0+IHYudGl0bGUgPT0gdnYudGl0bGUpXFxcXG4gICAgICAgIGlmIChpbmRleCA+PSAwKSB7XFxcXG4gICAgICAgICAgICBzZWxmLnB1c2godilcXFxcbiAgICAgICAgICAgIGxldCBydWxlID0gZGF0YS5zcGxpY2UoaW5kZXgsIDEpWzBdXFxcXG4gICAgICAgICAgICBpZiAoc2hvd0FsbCB8fCB2LnZpc2libGUpXFxcXG4gICAgICAgICAgICAgICAgcmV3cml0ZURhdGEucHVzaChPYmplY3QuYXNzaWduKHJ1bGUsIHYpKVxcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHJldHVybiBzZWxmXFxcXG4gICAgfSwgW10pXFxcXG4gICAgZGF0YS5mb3JFYWNoKCh2KSA9PiBjdXN0b21EYXRhLnB1c2goeyB0aXRsZTogdi50aXRsZSwgdmlzaWJsZTogdHJ1ZSB9KSlcXFxcbiAgICBzYXZlRmlsZSgnY3VzdG9tRGF0YScsIEpTT04uc3RyaW5naWZ5KGN1c3RvbURhdGEpKVxcXFxuICAgICQuZXhwb3J0cyA9IHJld3JpdGVEYXRhLmNvbmNhdChkYXRhKVxcXFxufVxcXFxuXFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi546v5aKD5Yqr5oyBXFxcIixcXFwicGF0aFxcXCI6XFxcImhpamFja0VudlxcXCIsXFxcInJ1bGVcXFwiOlxcXCJ2YXIgeyBSVUxFLCBpc0luZGV4LCBwYWdlVGl0bGUgfSA9IE1ZX1BBUkFNU1xcXFxuUlVMRSA9IEpTT04ucGFyc2UoYmFzZTY0RGVjb2RlKFJVTEUpKVxcXFxudmFyIG9yaVJVTEUgPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9kYXRhTG9hZD9ydWxlPScgKyBRSU5HX1RJVExFKS5maW5kKCh2KSA9PiB2LnRpdGxlID09IFJVTEUudGl0bGUpXFxcXG5pZiAoaXNJbmRleCkge1xcXFxuICAgIFJVTEUgPSBvcmlSVUxFXFxcXG4gICAgdmFyIHsgdGFiSGVhZGVyLCBmeUFsbCB9ID0gJC5yZXF1aXJlKCdoaWtlcjovL3BhZ2UvQ2xhc3NUYWI/cnVsZT0nICsgUUlOR19USVRMRSwgT2JqZWN0LmFzc2lnbih7IFFJTkdfVElUTEU6IFFJTkdfVElUTEUgfSwgUlVMRSkpXFxcXG4gICAgLy8g5aSE55CGTVlfUlVMRVxcXFxuICAgIE1ZX1JVTEUuY2xhc3NfdXJsID0gdGFiSGVhZGVyLmdldENsYXNzKGZ5QWxsID8gJ2Z5QWxsJyA6ICdmeWNsYXNzJykudXJsXFxcXG4gICAgTVlfUlVMRS5hcmVhX3VybCA9IGZ5QWxsID8gTVlfUlVMRS5jbGFzc191cmwgOiB0YWJIZWFkZXIuZ2V0Q2xhc3MoJ2Z5YXJlYScpLnVybFxcXFxuICAgIE1ZX1JVTEUueWVhcl91cmwgPSBmeUFsbCA/IE1ZX1JVTEUuY2xhc3NfdXJsIDogdGFiSGVhZGVyLmdldENsYXNzKCdmeXllYXInKS51cmxcXFxcbiAgICBNWV9SVUxFLnNvcnRfdXJsID0gZnlBbGwgPyBNWV9SVUxFLmNsYXNzX3VybCA6IHRhYkhlYWRlci5nZXRDbGFzcygnZnlzb3J0JykudXJsXFxcXG4gICAgTVlfUlVMRS51cmwgPSBSVUxFLnVybFxcXFxuICAgIE1ZX1JVTEUuY29sX3R5cGUgPSBSVUxFLmNvbF90eXBlXFxcXG4gICAgTVlfUlVMRS5kZXRhaWxfY29sX3R5cGUgPSBSVUxFLmRldGFpbF9jb2xfdHlwZVxcXFxuICAgIE1ZX1JVTEUuZmluZF9ydWxlID0gUlVMRS5maW5kX3J1bGVcXFxcbiAgICBNWV9SVUxFLmRldGFpbF9maW5kX3J1bGUgPSBSVUxFLmRldGFpbF9maW5kX3J1bGVcXFxcbiAgICBNWV9SVUxFLnBhcmFtcyA9IHt9XFxcXG59IGVsc2Uge1xcXFxuICAgIFJVTEUucGFnZXMgPSBvcmlSVUxFLnBhZ2VzXFxcXG4gICAgLy8g5aSE55CGTVlfUlVMRVxcXFxuICAgIE1ZX1JVTEUudXJsID0gTVlfUEFSQU1TLnVybFxcXFxuICAgIE1ZX1JVTEUuY29sX3R5cGUgPSBSVUxFLmRldGFpbF9jb2xfdHlwZVxcXFxuICAgIE1ZX1JVTEUuZmluZF9ydWxlID0gUlVMRS5kZXRhaWxfZmluZF9ydWxlXFxcXG4gICAgTVlfUlVMRS5wYXJhbXMgPSBSVUxFLnBhcmFtc1xcXFxufVxcXFxuTVlfUlVMRS5wYWdlcyA9IFJVTEUucGFnZXNcXFxcbk1ZX1JVTEUucGFnZUxpc3QgPSBKU09OLnBhcnNlKE1ZX1JVTEUucGFnZXMgfHwgJ1tdJylcXFxcbk1ZX1JVTEUudGl0bGUgPSBSVUxFLnRpdGxlXFxcXG5NWV9SVUxFLnVhID0gUlVMRS51YVxcXFxubG9nKE1ZX1JVTEUudXJsKVxcXFxuLy8g6L295YWl5Ye95pWw5bel5YW3XFxcXG52YXIgeyBnZW5NeVJ1bGUgfSA9ICQucmVxdWlyZSgnaGlrZXI6Ly9wYWdlL2Z1bmNUb29scz9ydWxlPScgKyBRSU5HX1RJVExFLCB7XFxcXG4gICAgUUlOR19USVRMRTogUUlOR19USVRMRSxcXFxcbiAgICBNWV9SVUxFOiBNWV9SVUxFLFxcXFxuICAgIGlzSW5kZXg6IGlzSW5kZXhcXFxcbn0pXFxcXG4vLyDpmLLmraJyZXF1aXJl5aSa5qyh6L+Q6KGMXFxcXG5jb25zdCBteUNvbGxfcmVxdWlyZWQgPSB7fVxcXFxucmVxdWlyZSA9IGZ1bmN0aW9uKHBhcmFtMCwgcGFyYW0xLCBwYXJhbTIsIHBhcmFtMywgcGFyYW00KSB7XFxcXG4gICAgaWYgKG15Q29sbF9yZXF1aXJlZFtwYXJhbTBdKSByZXR1cm5cXFxcbiAgICBteUNvbGxfcmVxdWlyZWRbcGFyYW0wXSA9IHRydWVcXFxcbiAgICBwYXJhbTIgPSBwYXJhbTIgIT0gbnVsbCA/IHBhcmFtMiA6IDBcXFxcbiAgICBwYXJhbTMgPSBNWV9USUNLRVRcXFxcbiAgICBwYXJhbTQgPSBldmFsXFxcXG4gICAgcmV0dXJuIG1ldGhvZF9yZXF1aXJlLmludm9rZShqYXZhQ29udGV4dCwgcGFyYW0wLCBwYXJhbTEsIHBhcmFtMiwgcGFyYW0zLCBwYXJhbTQpXFxcXG59XFxcXG5yZXF1aXJlQ2FjaGUgPSBmdW5jdGlvbihwYXJhbTAsIHBhcmFtMSwgcGFyYW0yLCBwYXJhbTMsIHBhcmFtNCwgcGFyYW01KSB7XFxcXG4gICAgaWYgKG15Q29sbF9yZXF1aXJlZFtwYXJhbTBdKSByZXR1cm5cXFxcbiAgICBteUNvbGxfcmVxdWlyZWRbcGFyYW0wXSA9IHRydWVcXFxcbiAgICBwYXJhbTMgPSBwYXJhbTMgIT0gbnVsbCA/IHBhcmFtMyA6IDBcXFxcbiAgICBwYXJhbTQgPSBNWV9USUNLRVRcXFxcbiAgICBwYXJhbTUgPSBldmFsXFxcXG4gICAgcmV0dXJuIG1ldGhvZF9yZXF1aXJlQ2FjaGUuaW52b2tlKGphdmFDb250ZXh0LCBwYXJhbTAsIHBhcmFtMSwgcGFyYW0yLCBwYXJhbTMsIHBhcmFtNCwgcGFyYW01KVxcXFxufVxcXFxucmMgPSByZXF1aXJlQ2FjaGVcXFxcbi8vIOacgOaWsOeroOiKguinhOWImeeOr+Wig+WKq+aMgVxcXFxuc2V0TGFzdENoYXB0ZXJSdWxlID0gZnVuY3Rpb24ocGFyYW0wKSB7XFxcXG4gICAgaWYgKHBhcmFtMC5zdGFydHNXaXRoKFxcXFxcXFwianM6XFxcXFxcXCIpKSB7XFxcXG4gICAgICAgIHBhcmFtMCA9ICdqczonICsgJC50b1N0cmluZygoUUlOR19USVRMRSwgTVlfUEFSQU1TKSA9PiB7XFxcXG4gICAgICAgICAgICBldmFsKEpTT04ucGFyc2UoZmV0Y2goJ2hpa2VyOi8vcGFnZS9oaWphY2tFbnY/cnVsZT0nICsgUUlOR19USVRMRSkpLnJ1bGUpXFxcXG4gICAgICAgICAgICB2YXIgeyBydW5QcmVSdWxlIH0gPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9mdW5jVG9vbHM/cnVsZT0nICsgUUlOR19USVRMRSlcXFxcbiAgICAgICAgICAgIHJ1blByZVJ1bGUob3JpUlVMRS5wcmVSdWxlKVxcXFxuICAgICAgICB9LCBRSU5HX1RJVExFLCB7IHVybDogTVlfUlVMRS51cmwsIFJVTEU6IGJhc2U2NEVuY29kZShKU09OLnN0cmluZ2lmeShnZW5NeVJ1bGUoKSkpLCBpc0luZGV4OiBpc0luZGV4IH0pICsgJzsnICsgcGFyYW0wLnNsaWNlKDMpXFxcXG4gICAgfVxcXFxuICAgIG1ldGhvZF9zZXRMYXN0Q2hhcHRlclJ1bGUuaW52b2tlKGphdmFDb250ZXh0LCBwYXJhbTApXFxcXG59XFxcXG4vLyDliqjmgIHmlrDlop7lh73mlbDliqvmjIFcXFxcbmFkZEl0ZW1BZnRlciA9IGZ1bmN0aW9uKHBhcmFtMCwgcGFyYW0xKSB7XFxcXG4gICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW0xKSkgcGFyYW0xID0gcGFyYW0xLm1hcChoaWphY2tFbClcXFxcbiAgICBlbHNlIHBhcmFtMSA9IGhpamFja0VsKHBhcmFtMSlcXFxcbiAgICBtZXRob2RfYWRkSXRlbUFmdGVyLmludm9rZShqYXZhQ29udGV4dCwgcGFyYW0wLCBwYXJhbTEpXFxcXG59XFxcXG5hZGRJdGVtQmVmb3JlID0gZnVuY3Rpb24ocGFyYW0wLCBwYXJhbTEpIHtcXFxcbiAgICBpZiAoQXJyYXkuaXNBcnJheShwYXJhbTEpKSBwYXJhbTEgPSBwYXJhbTEubWFwKGhpamFja0VsKVxcXFxuICAgIGVsc2UgcGFyYW0xID0gaGlqYWNrRWwocGFyYW0xKVxcXFxuICAgIG1ldGhvZF9hZGRJdGVtQmVmb3JlLmludm9rZShqYXZhQ29udGV4dCwgcGFyYW0wLCBwYXJhbTEpXFxcXG59XFxcXG5cXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLlh73mlbDlt6XlhbdcXFwiLFxcXCJwYXRoXFxcIjpcXFwiZnVuY1Rvb2xzXFxcIixcXFwicnVsZVxcXCI6XFxcImxldCB7IFFJTkdfVElUTEUsIE1ZX1JVTEUsIGlzSW5kZXggfSA9ICQuaW1wb3J0UGFyYW1cXFxcbmlmICghTVlfUlVMRSkgTVlfUlVMRSA9IHt9XFxcXG5cXFxcbmZ1bmN0aW9uIHJ1bkNvZGUocnVsZSkge1xcXFxuICAgIHRyeSB7XFxcXG4gICAgICAgIGxldCBbaW5wdXQsIGNvZGVdID0gcnVsZS5zcGxpdCgnLmpzOicpXFxcXG4gICAgICAgIHJldHVybiBjb2RlID8gZXZhbChjb2RlKSA6IHJ1bGVcXFxcbiAgICB9IGNhdGNoIChlKSB7IHJldHVybiBydWxlIH1cXFxcbn1cXFxcbi8vIOmmlumhtemTvuaOpeabv+aNouWIhuexu1xcXFxuZnVuY3Rpb24gaW5kZXhVcmwocGFyYW0pIHtcXFxcbiAgICBNWV9SVUxFID0gSlNPTi5wYXJzZShiYXNlNjREZWNvZGUoTVlfUlVMRSkpXFxcXG4gICAgbGV0IHBhZ2VOdW0gPSBwYXJzZUludChwYXJhbS5zcGxpdCgnIyMjJylbMV0pLFxcXFxuICAgICAgICB1cmwgPSBNWV9SVUxFLnVybCxcXFxcbiAgICAgICAgeyBmeUFsbCwgdGFiSGVhZGVyIH0gPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9DbGFzc1RhYj9ydWxlPScgKyBRSU5HX1RJVExFLCBPYmplY3QuYXNzaWduKHsgUUlOR19USVRMRTogUUlOR19USVRMRSB9LCBNWV9SVUxFKSlcXFxcblxcXFxuICAgIHVybCA9IHRhYkhlYWRlci5zZXRVcmwoZnlBbGwgPyB1cmwucmVwbGFjZSgvZnlBbGwvZywgJyQke2Z5QWxsfScpIDogdXJsLnJlcGxhY2UoL2Z5KGNsYXNzfGFyZWF8eWVhcnxzb3J0KS9nLCAnJCR7ZnkkMX0nKSlcXFxcbiAgICB1cmwgPSB1cmwucmVwbGFjZSgvZnlwYWdlKD86QCgtP1xcXFxcXFxcZCspQCk/KD86XFxcXFxcXFwqKFxcXFxcXFxcZCspQCk/L2csIChfLCBzdGFydCwgc3BhY2UpID0+IHBhcnNlSW50KHN0YXJ0IHx8IDApICsgMSArIChwYWdlTnVtIC0gMSkgKiBwYXJzZUludChzcGFjZSB8fCAxKSlcXFxcbiAgICB1cmwgPSAvXihbXFxcXFxcXFxzXFxcXFxcXFxTXSo/KSg/OlxcXFxcXFxcW2ZpcnN0UGFnZT0oW1xcXFxcXFxcc1xcXFxcXFxcU10qPylcXFxcXFxcXF0pPyg/OihcXFxcXFxcXC5qczpbXFxcXFxcXFxzXFxcXFxcXFxTXSo/KSk/JC8uZXhlYyh1cmwpXFxcXG4gICAgaWYgKHBhZ2VOdW0gPT0gMSAmJiB1cmxbMl0pIHVybFsxXSA9IHVybFsyXVxcXFxuICAgIGlmICh1cmxbM10gJiYgIXVybFsxXS5pbmNsdWRlcygnLmpzOicpKSB1cmxbMV0gKz0gdXJsWzNdXFxcXG4gICAgcmV0dXJuIHJ1bkNvZGUodXJsWzFdKVxcXFxufVxcXFxuXFxcXG5mdW5jdGlvbiBwYXJhbUhhbmRsZSh1cmxQYXJhbSwgdWEsIHVybFRtcCkge1xcXFxuICAgIGxldCBjaGFyc2V0LCBwYXJhbVRtcFxcXFxuICAgIHRyeSB7IC8vIOmTvuaOpeeahOe8lueggeOAgVVB5ZKMUmVmZXJlcuW6lOivpeaYr+mmluWFiOe7p+aJv+mmlumhtemTvuaOpVxcXFxuICAgICAgICBbLCAsIGNoYXJzZXQsIHBhcmFtVG1wXSA9IHVybFRtcC5zcGxpdCgnOycpXFxcXG4gICAgICAgIHBhcmFtVG1wID0gcGFyYW1UbXAubWF0Y2goL157KC4qKX0kLylbMV0uc3BsaXQoJyYmJylcXFxcbiAgICB9IGNhdGNoIChlKSB7IHBhcmFtVG1wID0gW10gfVxcXFxuICAgIGxldCBVc2VyQWdlbnQgPSBwYXJhbVRtcC5maW5kKCh2KSA9PiB2LnN0YXJ0c1dpdGgoJ1VzZXItQWdlbnRAJykpLFxcXFxuICAgICAgICBSZWZlcmVyID0gcGFyYW1UbXAuZmluZCgodikgPT4gdi5zdGFydHNXaXRoKCdSZWZlcmVyQCcpKVxcXFxuICAgIHVybFBhcmFtWzBdID0gdXJsUGFyYW1bMF0gfHwgJ0dFVCdcXFxcbiAgICB1cmxQYXJhbVsxXSA9IHVybFBhcmFtWzFdIHx8IGNoYXJzZXQgfHwgJ1VURi04J1xcXFxuICAgIHRyeSB7XFxcXG4gICAgICAgIHVybFBhcmFtWzJdID0gdXJsUGFyYW1bMl0ubWF0Y2goL157KC4qKX0kLylbMV0uc3BsaXQoJyYmJylcXFxcbiAgICB9IGNhdGNoIChlKSB7IHVybFBhcmFtWzJdID0gW10gfVxcXFxuICAgIC8vIOa3u+WKoOWFqOWxgFVB5ZKM5LiK57qnUmVmZXJlclxcXFxuICAgIGlmICghdXJsUGFyYW1bMl0uc29tZSgodikgPT4gdi5zdGFydHNXaXRoKCdVc2VyLUFnZW50QCcpKSkge1xcXFxuICAgICAgICBpZiAoVXNlckFnZW50KSB1cmxQYXJhbVsyXS5wdXNoKFVzZXJBZ2VudClcXFxcbiAgICAgICAgZWxzZSBpZiAodWEgPT0gJ3BjJylcXFxcbiAgICAgICAgICAgIHVybFBhcmFtWzJdLnB1c2goJ1VzZXItQWdlbnRAJyArIFBDX1VBLnJlcGxhY2UoLzsvZywgJ++8m++8mycpLnJlcGxhY2UoL1xcXFxcXFxcPy8sICfvvJ/vvJ8nKSlcXFxcbiAgICAgICAgZWxzZSBpZiAodWEgPT0gJ21vYmlsZScpXFxcXG4gICAgICAgICAgICB1cmxQYXJhbVsyXS5wdXNoKCdVc2VyLUFnZW50QCcgKyBNT0JJTEVfVUEucmVwbGFjZSgvOy9nLCAn77yb77ybJykucmVwbGFjZSgvXFxcXFxcXFw/LywgJ++8n++8nycpKVxcXFxuICAgIH1cXFxcbiAgICBpZiAoUmVmZXJlciAmJiAhdXJsUGFyYW1bMl0uc29tZSgodikgPT4gdi5zdGFydHNXaXRoKCdSZWZlcmVyQCcpKSlcXFxcbiAgICAgICAgdXJsUGFyYW1bMl0ucHVzaChSZWZlcmVyKVxcXFxuICAgIHVybFBhcmFtWzJdID0gJ3snICsgdXJsUGFyYW1bMl0uam9pbignJiYnKSArICd9J1xcXFxuICAgIHJldHVybiB1cmxQYXJhbS5qb2luKCc7JylcXFxcbn1cXFxcbi8vIOmihOWkhOeQhuW5tuWIneWni+WMlmNvbmZpZ1xcXFxuZnVuY3Rpb24gcnVuUHJlUnVsZShydWxlKSB7XFxcXG4gICAgaWYgKCh0eXBlb2YgTVlfUEFHRSAhPSAndW5kZWZpbmVkJyAmJiAgTVlfUEFHRSA9PSAxKSAmJlxcXFxuICAgICAgICAgKGlzSW5kZXggfHwgIWdldE15VmFyKCckcHJlUnVsZV8nICsgTVlfUlVMRS50aXRsZSkpKSB7XFxcXG4gICAgICAgIGV2YWwocnVsZSlcXFxcbiAgICAgICAgcHV0TXlWYXIoJyRwcmVSdWxlXycgKyBNWV9SVUxFLnRpdGxlLCAnVCcpXFxcXG4gICAgfVxcXFxuICAgIGxldCBfY2ZnID0gZ2V0TXlWYXIoJ2luaXRDb25maWcnLCAne30nKVxcXFxuICAgIGlmIChfY2ZnICYmIF9jZmcubGVuZ3RoID4gMCkge1xcXFxuICAgICAgICBjb25maWcgPSBKU09OLnBhcnNlKF9jZmcpXFxcXG4gICAgfVxcXFxufVxcXFxuLy8g5q2j5paH6Kej5p6Q6YCa55So5Y+Y6YePXFxcXG5mdW5jdGlvbiBnZW5NeVJ1bGUoKSB7XFxcXG4gICAgbGV0IFJVTEUgPSBPYmplY3QuYXNzaWduKHt9LCBNWV9SVUxFKVxcXFxuICAgIGRlbGV0ZSBSVUxFLmxhc3RfY2hhcHRlcl9ydWxlXFxcXG4gICAgZGVsZXRlIFJVTEUucHJlUnVsZVxcXFxuICAgIGRlbGV0ZSBSVUxFLnBhZ2VMaXN0XFxcXG4gICAgZGVsZXRlIFJVTEUucGFnZXNcXFxcbiAgICByZXR1cm4gUlVMRVxcXFxufVxcXFxuXFxcXG5mdW5jdGlvbiBnZW5FeFVybCh1cmwpIHtcXFxcbiAgICB1cmwgPSB1cmwuc3BsaXQoJzsnKVxcXFxuICAgIHJldHVybiB1cmwuc2hpZnQoKSArICc7JyArIHBhcmFtSGFuZGxlKHVybCwgTVlfUlVMRS51YSwgTVlfUlVMRS51cmwpXFxcXG59XFxcXG5cXFxcbmhpamFja0xhenlSdWxlID0gJC50b1N0cmluZygoUUlOR19USVRMRSwgTVlfUEFSQU1TKSA9PiB7XFxcXG4gICAgaWYgKCFNWV9SVUxFKSBNWV9SVUxFID0ge31cXFxcbiAgICBNWV9QQVJBTVMgPSBKU09OLnBhcnNlKGJhc2U2NERlY29kZShNWV9QQVJBTVMpKVxcXFxuICAgIGV2YWwoSlNPTi5wYXJzZShmZXRjaCgnaGlrZXI6Ly9wYWdlL2hpamFja0Vudj9ydWxlPScgKyBRSU5HX1RJVExFKSkucnVsZSlcXFxcbiAgICB2YXIge1xcXFxuICAgICAgICBwYXJhbUhhbmRsZSxcXFxcbiAgICAgICAgZ2VuRXhVcmwsXFxcXG4gICAgICAgIGhpamFja0xhenlSdWxlLFxcXFxuICAgICAgICBoaWphY2tFbFxcXFxuICAgIH0gPSAkLnJlcXVpcmUoJ2hpa2VyOi8vcGFnZS9mdW5jVG9vbHM/cnVsZT0nICsgUUlOR19USVRMRSlcXFxcbn0sIFFJTkdfVElUTEUsIGJhc2U2NEVuY29kZShKU09OLnN0cmluZ2lmeSh7IHVybDogTVlfUlVMRS51cmwsIFJVTEU6IGJhc2U2NEVuY29kZShKU09OLnN0cmluZ2lmeShnZW5NeVJ1bGUoKSkpLCBpc0luZGV4OiBpc0luZGV4IH0pKSlcXFxcblxcXFxuZnVuY3Rpb24gaGlqYWNrRWwoZWwpIHtcXFxcbiAgICBpZighZWwgfHwgdHlwZW9mIGVsICE9ICdvYmplY3QnKSByZXR1cm5cXFxcbiAgICBpZiAoIWVsLmV4dHJhKSBlbC5leHRyYSA9IHt9XFxcXG4gICAgZWwuY29sX3R5cGUgPSBlbC5jb2xfdHlwZSB8fCBNWV9SVUxFLmNvbF90eXBlXFxcXG4gICAgbGV0IE5PV19SVUxFID0gT2JqZWN0LmFzc2lnbihnZW5NeVJ1bGUoKSwgeyBwYXJhbXM6IGVsLmV4dHJhIH0pXFxcXG5cXFxcbiAgICBpZiAodHlwZW9mIGVsLnVybCAhPSAnc3RyaW5nJyB8fFxcXFxuICAgICAgICBbJ3g1X3dlYnZpZXdfc2luZ2xlJywgJ2lucHV0J10uc29tZSgodikgPT4gZWwuY29sX3R5cGUgPT0gdikgfHxcXFxcbiAgICAgICAgWyfmtbfpmJTop4bnlYwnLCAnamF2YXNjcmlwdDonXS5zb21lKCh2KSA9PiBlbC51cmwuc3RhcnRzV2l0aCh2KSkgfHxcXFxcbiAgICAgICAgWydydWxlJywgJ3BpY3MnLCAndG9hc3QnLCAnY29weScsICdlZGl0RmlsZScsICd4NScsICd4NVdlYlZpZXcnLCAneDVQbGF5JywgJ3dlYicsICd4NVJ1bGUnLCAnd2ViUnVsZScsXFxcXG4gICAgICAgICAgICAnZG93bmxvYWQnLCAnc2hhcmUnLCAnZmlsZVNlbGVjdCcsICd2aWRlbyddLnNvbWUoKHYpID0+IGVsLnVybC5zdGFydHNXaXRoKHYgKyAnOi8vJykpKSB7XFxcXG4gICAgICAgIHJldHVybiBlbFxcXFxuICAgIH0gZWxzZSBpZiAoZWwudXJsLnN0YXJ0c1dpdGgoJ2lucHV0Oi8vJykpIHtcXFxcbiAgICAgICAgbGV0IHBhcmEgPSBKU09OLnBhcnNlKGVsLnVybC5zbGljZSg4KSlcXFxcbiAgICAgICAgaWYgKHBhcmEuanMpIHBhcmEuanMgPSBoaWphY2tMYXp5UnVsZSArICc7JyArIHBhcmEuanNcXFxcbiAgICAgICAgZWwudXJsID0gJ2lucHV0Oi8vJyArIEpTT04uc3RyaW5naWZ5KHBhcmEpXFxcXG4gICAgICAgIHJldHVybiBlbFxcXFxuICAgIH0gZWxzZSBpZiAoZWwudXJsLnN0YXJ0c1dpdGgoJ2NvbmZpcm06Ly8nKSkge1xcXFxuICAgICAgICBsZXQgcmVJbmRleCA9IGVsLnVybC5pbmRleE9mKCcuanM6JylcXFxcbiAgICAgICAgaWYgKHJlSW5kZXggPj0gMCkgZWwudXJsID0gZWwudXJsLnNsaWNlKDAsIHJlSW5kZXgpICsgJy5qczonICsgaGlqYWNrTGF6eVJ1bGUgKyAnOycgKyBlbC51cmwuc2xpY2UocmVJbmRleCArIDQpXFxcXG4gICAgICAgIHJldHVybiBlbFxcXFxuICAgIH0gZWxzZSBpZiAoZWwudXJsLnN0YXJ0c1dpdGgoJ3NlbGVjdDovLycpKSB7XFxcXG4gICAgICAgIGxldCBwYXJhID0gSlNPTi5wYXJzZShlbC51cmwuc2xpY2UoOSkpXFxcXG4gICAgICAgIGlmIChwYXJhLmpzKSBwYXJhLmpzID0gaGlqYWNrTGF6eVJ1bGUgKyAnOycgKyBwYXJhLmpzXFxcXG4gICAgICAgIGVsLnVybCA9ICdzZWxlY3Q6Ly8nICsgSlNPTi5zdHJpbmdpZnkocGFyYSlcXFxcbiAgICAgICAgcmV0dXJuIGVsXFxcXG4gICAgfSBlbHNlIGlmIChlbC51cmwuaW5jbHVkZXMoJ0BydWxlPScpKSB7XFxcXG4gICAgICAgIGxldCBbXywgdXJsLCBydWxlXSA9IGVsLnVybC5tYXRjaCgvXihbXFxcXFxcXFxzXFxcXFxcXFxTXSo/KUBydWxlPShbXFxcXFxcXFxzXFxcXFxcXFxTXSopJC8pXFxcXG4gICAgICAgIGVsLnVybCA9IHVybFxcXFxuICAgICAgICBOT1dfUlVMRS5kZXRhaWxfZmluZF9ydWxlID0gcnVsZVxcXFxuICAgICAgICBOT1dfUlVMRS5kZXRhaWxfY29sX3R5cGUgPSBNWV9SVUxFLmNvbF90eXBlXFxcXG4gICAgfSBlbHNlIGlmIChlbC51cmwuc3RhcnRzV2l0aCgnaGlrZXI6Ly9wYWdlLycpKSB7XFxcXG4gICAgICAgIGlmIChlbC51cmwuaW5jbHVkZXMoJ3J1bGU9JykgfHwgZWwuZXh0cmEucnVsZSlcXFxcbiAgICAgICAgICAgIHJldHVybiBlbFxcXFxuICAgICAgICBsZXQgW18sIHBhdGgsIGZsYWcsIHBhcmFtc10gPSBlbC51cmwubWF0Y2goL15oaWtlcjpcXFxcXFxcXC9cXFxcXFxcXC9wYWdlXFxcXFxcXFwvKC4rPykoIy4qPyk/KD86XFxcXFxcXFw/KC4qKSk/JC8pLFxcXFxuICAgICAgICAgICAgc3ViUGFnZSA9IE1ZX1JVTEUucGFnZUxpc3QuZmluZCgodikgPT4gdi5wYXRoID09IHBhdGgpLFxcXFxuICAgICAgICAgICAgc3ViVXJsID0gKHBhcmFtcyB8fCAnJykuc3BsaXQoJyYnKS5maW5kKCh2KSA9PiB2LnN0YXJ0c1dpdGgoJ3VybD0nKSlcXFxcbiAgICAgICAgZWwudXJsID0gKHN1YlVybCA/IHN1YlVybC5zbGljZSg0KS5yZXBsYWNlKC/vvJ/vvJ8vZywgJz8nKS5yZXBsYWNlKC/vvIbvvIYvZywgJyYnKSA6IChlbC5leHRyYSB8fCB7fSkudXJsKSB8fCAnaGlrZXI6Ly9lbXB0eScgKyBmbGFnICsgJz8nICsgKHBhcmFtcyB8fCAnJylcXFxcbiAgICAgICAgTk9XX1JVTEUuZGV0YWlsX2ZpbmRfcnVsZSA9IHN1YlBhZ2UucnVsZVxcXFxuICAgICAgICBOT1dfUlVMRS5kZXRhaWxfY29sX3R5cGUgPSBzdWJQYWdlLmNvbF90eXBlXFxcXG4gICAgfSBlbHNlIGlmIChlbC51cmwuaW5jbHVkZXMoJ0BsYXp5UnVsZT0nKSkge1xcXFxuICAgICAgICBsZXQgcmVJbmRleCA9IGVsLnVybC5pbmRleE9mKCcuanM6JylcXFxcbiAgICAgICAgaWYgKHJlSW5kZXggPj0gMCkgZWwudXJsID0gZWwudXJsLnNsaWNlKDAsIHJlSW5kZXgpICsgJy5qczonICsgaGlqYWNrTGF6eVJ1bGUgKyAnOycgKyBlbC51cmwuc2xpY2UocmVJbmRleCArIDQpXFxcXG4gICAgICAgIHJldHVybiBlbFxcXFxuICAgIH0gZWxzZSBpZiAoaXNJbmRleCkge1xcXFxuICAgICAgICBpZiAoIU1ZX1JVTEUuZGV0YWlsX2ZpbmRfcnVsZSB8fCAvaGlrZXI6XFxcXFxcXFwvXFxcXFxcXFwvKD8hZW1wdHkuKyQpLy50ZXN0KGVsLnVybCkpIHJldHVybiBlbFxcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIHJldHVybiBlbFxcXFxuICAgIH1cXFxcbiAgICBlbC5leHRyYSA9IE9iamVjdC5hc3NpZ24oe30sIGVsLmV4dHJhLCB7XFxcXG4gICAgICAgIHVybDogZ2VuRXhVcmwoZWwudXJsKSxcXFxcbiAgICAgICAgUlVMRTogYmFzZTY0RW5jb2RlKEpTT04uc3RyaW5naWZ5KE5PV19SVUxFKSksXFxcXG4gICAgICAgIHBhZ2VUaXRsZTogaXNJbmRleCAmJiBlbC50aXRsZVxcXFxuICAgIH0pXFxcXG4gICAgZWwudXJsID0gJ2hpa2VyOi8vcGFnZS9mcmFtZUxvYWQ/cnVsZT0nICsgUUlOR19USVRMRVxcXFxuICAgIHJldHVybiBlbFxcXFxufVxcXFxuJC5leHBvcnRzID0ge1xcXFxuICAgIHJ1bkNvZGU6IHJ1bkNvZGUsXFxcXG4gICAgaW5kZXhVcmw6IGluZGV4VXJsLFxcXFxuICAgIHBhcmFtSGFuZGxlOiBwYXJhbUhhbmRsZSxcXFxcbiAgICBydW5QcmVSdWxlOiBydW5QcmVSdWxlLFxcXFxuICAgIGdlbk15UnVsZTogZ2VuTXlSdWxlLFxcXFxuICAgIGdlbkV4VXJsOiBnZW5FeFVybCxcXFxcbiAgICBoaWphY2tMYXp5UnVsZTogaGlqYWNrTGF6eVJ1bGUsXFxcXG4gICAgaGlqYWNrRWw6IGhpamFja0VsXFxcXG59XFxcXG5cXFwifV1cIixcInByb3h5XCI6XCJcIn0iLCJwaWNVcmwiOiJodHRwczovL3d3dy53ZWltb3ZpZXMuY29tL3RlbXBsYXRlL214b25lL214c3RhdGljL3BpY3R1cmUvZmF2aWNvbi5wbmciLCJ0aXRsZSI6IuiKseiKseW9semZoi5EVPCfkLoifQ==
q3uQJBHW,Hit Rocks Script (Works on boss fight),S4W77_SpiringCord,Lua,Monday 17th of June 2024 09:26:41 AM CDT,"-- HIT SPIRIT ROCKS ON BOSS FIGHT!!!
-- Made by Thyme

-- Gui to Lua
-- Version: 3.6

-- Instances:

local UI = Instance.new(""ScreenGui"")
local control = Instance.new(""TextButton"")
local UICorner = Instance.new(""UICorner"")
local time = Instance.new(""TextButton"")
local UICorner_2 = Instance.new(""UICorner"")

-- Properties:

UI.Name = ""UI""
UI.Parent = game.CoreGui
UI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

is_opened = false

control.Name = ""control""
control.Parent = UI
control.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
control.BorderColor3 = Color3.fromRGB(0, 0, 0)
control.BorderSizePixel = 0
control.Position = UDim2.new(0.0287451521, 0, 0.587098241, 0)
control.Size = UDim2.new(0, 46, 0, 32)
control.Font = Enum.Font.Ubuntu
control.Text = ""OPEN""
control.TextColor3 = Color3.fromRGB(0, 0, 0)
control.TextScaled = true
control.TextWrapped = true
control.Draggable = true
control.MouseButton1Click:Connect(function()
	if is_opened == false then
		time.Visible = true
		control.Text = ""CLOSE""
		is_opened = true
	else
		time.Visible = false
		control.Text = ""OPEN""
		is_opened = false
	end
end)

UICorner.Parent = control

time.Name = ""time""
time.Parent = UI
time.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
time.BackgroundTransparency = 0.500
time.BorderColor3 = Color3.fromRGB(0, 0, 0)
time.BorderSizePixel = 0
time.Position = UDim2.new(0.817132056, 0, 0.166689456, 0)
time.Size = UDim2.new(0, 88, 0, 29)
time.Font = Enum.Font.Ubuntu
time.Text = ""Hit Rock""
time.TextColor3 = Color3.fromRGB(255, 255, 255)
time.TextScaled = true
time.Visible = false
time.TextWrapped = true
time.Draggable = true
time.MouseButton1Click:Connect(function()
	game.Workspace:WaitForChild(""SpiritRock""):WaitForChild(""DamageEvent""):FireServer()
end)

UICorner_2.Parent = time"
kfKjwxSz,Exercise: Web Crawler,fenixD3,Go,Monday 17th of June 2024 09:10:29 AM CDT,"package main

import (
	""fmt""
	""sync""
)

type Fetcher interface {
	// Fetch returns the body of URL and
	// a slice of URLs found on that page.
	Fetch(url string) (body string, urls []string, err error)
}

// Crawl uses fetcher to recursively crawl
// pages starting with url, to a maximum of depth.
func Crawl(url string, depth int, fetcher Fetcher) {
	// TODO: Fetch URLs in parallel.
	// TODO: Don't fetch the same URL twice.
	// This implementation doesn't do either:
	type CachedData struct {
		body string
		urls []string
	}
	cached_urls_data := make(map[string]CachedData)
	var mutex sync.Mutex

	var walk func(url string, depth int, ch chan string)
	walk = func(url string, depth int, ch chan string) {
		defer close(ch)
		if depth <= 0 {
			return
		}

		var body string
		var urls []string
		var err error

		mutex.Lock()
		cached_data, was_stored := cached_urls_data[url]
		mutex.Unlock()

		if !was_stored {
			body, urls, err = fetcher.Fetch(url)
			if err != nil {
				ch <- err.Error()
				return
			}

			mutex.Lock()
			cached_urls_data[url] = CachedData{body, urls}
			mutex.Unlock()
		} else {
			urls = cached_data.urls
			body = cached_data.body
		}

		ch <- fmt.Sprintf(""found: %s %q"", url, body)

		results := make([]chan string, len(urls))
		for i, u := range urls {
			results[i] = make(chan string)
			go walk(u, depth-1, results[i])
		}
		for _, channel := range results {
			for res := range channel {
				ch <- res
			}
		}
	}

	ch := make(chan string)
	go walk(url, depth, ch)
	for found := range ch {
		fmt.Println(found)
	}
}

func main() {
	Crawl(""https://golang.org/"", 4, fetcher)
}

// fakeFetcher is Fetcher that returns canned results.
type fakeFetcher map[string]*fakeResult

type fakeResult struct {
	body string
	urls []string
}

func (f fakeFetcher) Fetch(url string) (string, []string, error) {
	if res, ok := f[url]; ok {
		return res.body, res.urls, nil
	}
	return """", nil, fmt.Errorf(""not found: %s"", url)
}

// fetcher is a populated fakeFetcher.
var fetcher = fakeFetcher{
	""https://golang.org/"": &fakeResult{
		""The Go Programming Language"",
		[]string{
			""https://golang.org/pkg/"",
			""https://golang.org/cmd/"",
		},
	},
	""https://golang.org/pkg/"": &fakeResult{
		""Packages"",
		[]string{
			""https://golang.org/"",
			""https://golang.org/cmd/"",
			""https://golang.org/pkg/fmt/"",
			""https://golang.org/pkg/os/"",
		},
	},
	""https://golang.org/pkg/fmt/"": &fakeResult{
		""Package fmt"",
		[]string{
			""https://golang.org/"",
			""https://golang.org/pkg/"",
		},
	},
	""https://golang.org/pkg/os/"": &fakeResult{
		""Package os"",
		[]string{
			""https://golang.org/"",
			""https://golang.org/pkg/"",
		},
	},
}
"
JGiKMSRv,Exercise: Equivalent Binary Trees,fenixD3,Go,Monday 17th of June 2024 09:03:44 AM CDT,"package main

import ""golang.org/x/tour/tree""
import ""fmt""

// Walk walks the tree t sending all values
// from the tree to the channel ch.
func Walk(t *tree.Tree, ch chan int) {
	var traverse func(t *tree.Tree)
	traverse = func(t *tree.Tree) {
		if t == nil {
			return
		}
		traverse(t.Left)
		ch <- t.Value
		traverse(t.Right)
	}
	traverse(t)
	close(ch)
}

// Same determines whether the trees
// t1 and t2 contain the same values.
func Same(t1, t2 *tree.Tree) bool {
	ch_1, ch_2 := make(chan int), make(chan int)
	go Walk(t1, ch_1)
	go Walk(t2, ch_2)
	for first := range ch_1 {
		select {
		case second := <-ch_2:
			if first != second {
				return false
			}
		default:
			break
		}

		/*		second := <-ch_2
				if first != second {
					return false
				}*/
	}
	/*	if _, ok := <-ch_2; ok {
		return false
	}*/
	return true
}

func main() {
	fmt.Println(Same(tree.New(1), tree.New(1)))
	fmt.Println(Same(tree.New(1), tree.New(2)))
	fmt.Println(Same(tree.New(2), tree.New(1)))

	t1 := tree.New(2)
	t2 := tree.New(3)
	fmt.Println(t1)
	fmt.Println(t2)
	fmt.Println(Same(t1, t2))
}
"
fqbJvyKR,Window request animation frame,1xptolevitico69,HTML,Monday 17th of June 2024 08:51:27 AM CDT,  <a href='https://l.facebook.com/l.php?u=https%3A%2F%2F1xpto.netlify.app%2Fredirects%2Fframe%2Findex.html%3Ffbclid%3DIwZXh0bgNhZW0CMTEAAR1TPdtJsyRF8GH2fGbOKP6gdjUc8jOMPA8Sf1LohgyFHgKkiX4KRw03Hco_aem_3PieC_q91sUOyCl_qz5ABw&h=AT16FCJWBXJD-2SYETLgxO9c493tuF4jwt7c6QvuN8G1-yszhdglvWY-Y2YV-ZEkUL84ND3HnGguNif_gglSsqko_TuUO5rPvndoZVVHv-CbRLmO2RS0ZPOvYps875Vsum82&__tn__=H-R&c[0]=AT1nyFhjrFqRT2AUfHUgboFSo4KMfu46bOS9vRG6XoE-fg-NmdKEWc64U87nTLK6FjalbpsMpxlmi3mgZNk-MAS-opUX3I_sx7n6S3fi8REYeHJ-ApdBlbfVac4ldu2wwwGc'>Window request animation frame</a>
