id,title,username,language,date,content
dnZcXjeL,the best snowybot,coinwalk,JavaScript,Thursday 25th of January 2024 12:02:56 AM CDT,"var oldestbal = parseFloat(document.getElementById('pct_balance').value);
var base = Number((oldestbal/144000).toFixed(8));
var bellance = oldestbal;
var dodgey = oldestbal;
var kitty = oldestbal;
var botplus = base;
var trget = oldestbal;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var upper = 6.9;
var downer = 2.9;
var fart = ((Math.floor(oldestbal/tens))*tens);
var james = oldestbal;


function get(){
dodgey = document.getElementById('pct_balance').value;
if (dodgey>kitty){
bellance = bellance+botplus
kitty = parseFloat(dodgey);
}
if (dodgey<kitty){
bellance = bellance-botplus
kitty = parseFloat(dodgey);
}
var good = ((bellance-oldestbal).toFixed(8));
console.clear();
console.log(""profit"");
console.log(good);
if (bellance>(fart+(botplus*upper))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if (bellance<(fart-(botplus*downer))){
    botplus = botplus*2;
    upper = 4.9;
    downer = 4.9;
    fart = parseFloat(bellance);
}
if ((botplus>=tens)&&(bellance>=james)&&(bellance<(((Math.floor(bellance/tens))*tens)+sevens))){
    botplus = base;
    upper = 6.9;
    downer = 2.9;
    fart = ((Math.floor(bellance/tens))*tens);
    james = parseFloat(bellance);
}
if (bellance>=150000) {
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((botplus*1).toFixed(8)));
$('#a_lo').click();
}
setTimeout(() => get(), 10);
"
qHdwAbVS,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Wednesday 24th of January 2024 11:47:55 PM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

617971"
fxgjrUgn,.bash_aliases_tiny,iax,Bash,Wednesday 24th of January 2024 11:30:09 PM CDT,"alias ..='cd ..'
alias ...='cd ../../'
alias l='ls -l'
alias ll='ls -halF --color'
PS1='\[\e[31m\]\u\[\e[m\]\[\e[33m\]@\[\e[m\]\[\e[32m\]\h\[\e[m\]:\[\e[36m\]\w\[\e[m\]\$ '
PS2='\[\e[32m\]> \[\e[m\]'
"
R1m2xaQv,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Wednesday 24th of January 2024 11:08:24 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_546426.pdf
 
Working as of
25 January 2024"
eZYihfEA,BDFD - IsValidLink,StaffVanish,Go,Wednesday 24th of January 2024 11:06:51 PM CDT,"$var[isValidLink;INPUT LINK]
$var[isValidLink;true]
$try $httpGet[$var[isValidLink]] $if[$httpStatus!=200]$var[isValidLink;false]$endif $catch $var[isValidLink;false] $endtry $var[isValidLink]"
N7dgLce6,BDFD - FindSpecialChars,StaffVanish,Go,Wednesday 24th of January 2024 10:59:21 PM CDT,"$var[findSpecialChar;INPUT A STRING HERE]
$var[findSpecialChar;$replaceText[$replaceText[$replaceText[$replaceText[$replaceText[$replaceText[$replaceText[$replaceText[$replaceText[$replaceText[$toLowercase[$var[findSpecialChar]];1;];2];3;];4;];5;];6;];7;];8;];9;];0;];q;];w;];e;];r;];t;];y;];u;];i;];o;];p;];a;];s;];d;];f;];g;];h;];j;];k;];l;];z;];x;];c;];v;];b;];n;];m;]]
$var[findSpecialChar] $c[<=== Result]"
NZyqCHab,BDFD - FindAlpha,StaffVanish,Go,Wednesday 24th of January 2024 10:51:25 PM CDT,"$var[findAlpha;INPUT A STRING TO SEARCH]
$var[q;$cropText[$var[findAlpha];2500;]]
$var[w;$cropText[$replaceText[$var[alpha];$var[q];];2500;]]
$var[a;]$var[b;]
$textSplit[$var[q];]
$eval[%{DOL}%var[a\;%{DOL}%url[decode\;$joinSplitText[\]\]%{DOL}%if[%{DOL}%checkContains[%{DOL}%toLowercase[%{DOL}%var[a\]\]\;a\;b\;c\;d\;e\;f\;g\;h\;i\;j\;k\;l\;m\;n\;o\;p\;q\;r\;s\;t\;u\;v\;w\;x\;y\;z\]\]%{DOL}%var[b\;%{DOL}%var[a\]%{DOL}%var[b\]\]%{DOL}%endif %{DOL}%var[a\;%{DOL}%url[decode\;]\]\]%{DOL}%if[%{DOL}%checkContains[%{DOL}%toLowercase[%{DOL}%var[a\]\]\;a\;b\;c\;d\;e\;f\;g\;h\;i\;j\;k\;l\;m\;n\;o\;p\;q\;r\;s\;t\;u\;v\;w\;x\;y\;z\]\]%{DOL}%var[b\;%{DOL}%var[a\]%{DOL}%var[b\]\]%{DOL}%endif]$var[q;$var[b]]$var[a;]$var[b;]$textSplit[$var[w];]$eval[%{DOL}%var[a\;%{DOL}%url[decode\;$joinSplitText[\]\]%{DOL}%if[%{DOL}%checkContains[%{DOL}%toLowercase[%{DOL}%var[a\]\]\;a\;b\;c\;d\;e\;f\;g\;h\;i\;j\;k\;l\;m\;n\;o\;p\;q\;r\;s\;t\;u\;v\;w\;x\;y\;z\]\]%{DOL}%var[b\;%{DOL}%var[a\]%{DOL}%var[b\]\]%{DOL}%endif %{DOL}%var[a\;%{DOL}%url[decode\;]\]\]%{DOL}%if[%{DOL}%checkContains[%{DOL}%toLowercase[%{DOL}%var[a\]\]\;a\;b\;c\;d\;e\;f\;g\;h\;i\;j\;k\;l\;m\;n\;o\;p\;q\;r\;s\;t\;u\;v\;w\;x\;y\;z\]\]%{DOL}%var[b\;%{DOL}%var[a\]%{DOL}%var[b\]\]%{DOL}%endif]
$var[findAlpha;$var[q]$var[b]]
$var[findAlpha]"
zcjCCGMC,BDFD - FindAlphaNum,StaffVanish,Go,Wednesday 24th of January 2024 10:47:57 PM CDT,"$var[findAlphaNumSym;INPUT A STRING TO SEARCH]
$var[q;$cropText[$var[findAlphaNumSym];2500;]]
$var[w;$cropText[$replaceText[$var[alphaNumSym];$var[q];];2500;]]
$var[a;]$var[b;]
$textSplit[$var[q];]
$eval[%{DOL}%var[a\;%{DOL}%url[decode\;$joinSplitText[\]\]%{DOL}%if[%{DOL}%checkContains[%{DOL}%toLowercase[%{DOL}%var[a\]\]\;a\;b\;c\;d\;e\;f\;g\;h\;i\;j\;k\;l\;m\;n\;o\;p\;q\;r\;s\;t\;u\;v\;w\;x\;y\;z\; \;1\;2\;3\;4\;5\;6\;7\;8\;9\;0\;-\;_\;.\]\]%{DOL}%var[b\;%{DOL}%var[a\]%{DOL}%var[b\]\]%{DOL}%endif %{DOL}%var[a\;%{DOL}%url[decode\;]\]\]%{DOL}%if[%{DOL}%checkContains[%{DOL}%toLowercase[%{DOL}%var[a\]\]\;a\;b\;c\;d\;e\;f\;g\;h\;i\;j\;k\;l\;m\;n\;o\;p\;q\;r\;s\;t\;u\;v\;w\;x\;y\;z\; \;1\;2\;3\;4\;5\;6\;7\;8\;9\;0\;-\;_\;.\]\]%{DOL}%var[b\;%{DOL}%var[a\]%{DOL}%var[b\]\]%{DOL}%endif]$var[q;$var[b]]$var[a;]$var[b;]$textSplit[$var[w];]$eval[%{DOL}%var[a\;%{DOL}%url[decode\;$joinSplitText[\]\]%{DOL}%if[%{DOL}%checkContains[%{DOL}%toLowercase[%{DOL}%var[a\]\]\;a\;b\;c\;d\;e\;f\;g\;h\;i\;j\;k\;l\;m\;n\;o\;p\;q\;r\;s\;t\;u\;v\;w\;x\;y\;z\; \;1\;2\;3\;4\;5\;6\;7\;8\;9\;0\;-\;_\;.\]\]%{DOL}%var[b\;%{DOL}%var[a\]%{DOL}%var[b\]\]%{DOL}%endif %{DOL}%var[a\;%{DOL}%url[decode\;]\]\]%{DOL}%if[%{DOL}%checkContains[%{DOL}%toLowercase[%{DOL}%var[a\]\]\;a\;b\;c\;d\;e\;f\;g\;h\;i\;j\;k\;l\;m\;n\;o\;p\;q\;r\;s\;t\;u\;v\;w\;x\;y\;z\; \;1\;2\;3\;4\;5\;6\;7\;8\;9\;0\;-\;_\;.\]\]%{DOL}%var[b\;%{DOL}%var[a\]%{DOL}%var[b\]\]%{DOL}%endif]
$var[findAlphaNumSym;$var[q]$var[b]]
$var[findAlphaNumSym] $c[<=== Result]"
xGe1kP9a,SumOfNumbers,SaNik74,C#,Wednesday 24th of January 2024 10:42:20 PM CDT,"class Program
{
    static void Main(string[] args)
    {
        int minNumber = 1;
        int maxNumber = 100;
        int denomunatorThree = 3;
        int denominatorFive = 5;
        int sumOfNumbersMultiplesThreeAndFive = 0;

        Random rand = new Random();
        int value = rand.Next(minNumber, maxNumber);

        for (int i = value; i > 0; i--)
        {
            if (i % denominatorFive == 0 || i % denomunatorThree == 0)
            {
                sumOfNumbersMultiplesThreeAndFive += i;
            }
        }
        Console.WriteLine(sumOfNumbersMultiplesThreeAndFive);
    }
}"
8DHqfXmx,Nigerian scammers [24-1-3/2024],bombaires,AIMMS,Wednesday 24th of January 2024 10:28:05 PM CDT,"<a href=""mailto:ladyaishayakoub@yahoo.com"">ladyaishayakoub@yahoo.com</a>
<a href=""mailto:crownsteven330@gmail.com"">crownsteven330@gmail.com</a>
<a href=""mailto:cro.wnstev.en3.30@gmail.com"">cro.wnstev.en3.30@gmail.com</a>
<a href=""mailto:cr.ow.ns.tev.en3.3.0@gmail.com"">cr.ow.ns.tev.en3.3.0@gmail.com</a>
<a href=""mailto:c.row.n.s.t.even3.30@gmail.com"">c.row.n.s.t.even3.30@gmail.com</a>
<a href=""mailto:c.r.owns.t.e.ven.3.30@gmail.com"">c.r.owns.t.e.ven.3.30@gmail.com</a>
<a href=""mailto:cro.wn.stev.en.3.30@gmail.com"">cro.wn.stev.en.3.30@gmail.com</a>
<a href=""mailto:c.row.nst.eve.n3.3.0@gmail.com"">c.row.nst.eve.n3.3.0@gmail.com</a>
<a href=""mailto:cro.wns.t.e.v.e.n.33.0@gmail.com"">cro.wns.t.e.v.e.n.33.0@gmail.com</a>
<a href=""mailto:c.r.ow.ns.t.ev.en3.3.0@gmail.com"">c.r.ow.ns.t.ev.en3.3.0@gmail.com</a>
<a href=""mailto:c.ro.w.ns.t.ev.e.n.3.30@gmail.com"">c.ro.w.ns.t.ev.e.n.3.30@gmail.com</a>
<a href=""mailto:cro.w.ns.te.ven.3.3.0@gmail.com"">cro.w.ns.te.ven.3.3.0@gmail.com</a>
<a href=""mailto:c.row.nst.e.ve.n330@gmail.com"">c.row.nst.e.ve.n330@gmail.com</a>
<a href=""mailto:c.r.o.w.ns.te.v.e.n.3.30@gmail.com"">c.r.o.w.ns.te.v.e.n.3.30@gmail.com</a>
<a href=""mailto:c.ro.wn.s.teven.3.30@gmail.com"">c.ro.wn.s.teven.3.30@gmail.com</a>
<a href=""mailto:c.r.owns.te.v.en.3.3.0@gmail.com"">c.r.owns.te.v.en.3.3.0@gmail.com</a>
<a href=""mailto:cro.w.nst.e.v.en.33.0@gmail.com"">cro.w.nst.e.v.en.33.0@gmail.com</a>
<a href=""mailto:c.r.own.s.teven330@gmail.com"">c.r.own.s.teven330@gmail.com</a>
<a href=""mailto:cr.o.w.nstev.e.n3.30@gmail.com"">cr.o.w.nstev.e.n3.30@gmail.com</a>
<a href=""mailto:crow.ns.teve.n3.3.0@gmail.com"">crow.ns.teve.n3.3.0@gmail.com</a>
<a href=""mailto:c.ro.w.n.s.tev.en.3.30@gmail.com"">c.ro.w.n.s.tev.en.3.30@gmail.com</a>
<a href=""mailto:cro.w.n.st.e.ve.n33.0@gmail.com"">cro.w.n.st.e.ve.n33.0@gmail.com</a>
<a href=""mailto:cro.w.nst.even.3.30@gmail.com"">cro.w.nst.even.3.30@gmail.com</a>
<a href=""mailto:cro.wn.s.t.even3.30@gmail.com"">cro.wn.s.t.even3.30@gmail.com</a>
<a href=""mailto:c.ro.wnsteven.3.30@gmail.com"">c.ro.wnsteven.3.30@gmail.com</a>
<a href=""mailto:c.r.o.w.n.st.e.v.en.330@gmail.com"">c.r.o.w.n.st.e.v.en.330@gmail.com</a>
<a href=""mailto:cr.o.w.n.s.teven33.0@gmail.com"">cr.o.w.n.s.teven33.0@gmail.com</a>
<a href=""mailto:cr.own.s.t.e.v.en3.30@gmail.com"">cr.own.s.t.e.v.en3.30@gmail.com</a>
<a href=""mailto:cr.o.w.nste.ven330@gmail.com"">cr.o.w.nste.ven330@gmail.com</a>
<a href=""mailto:cro.wnsteven.330@gmail.com"">cro.wnsteven.330@gmail.com</a>
<a href=""mailto:cr.ow.nst.e.ven.330@gmail.com"">cr.ow.nst.e.ven.330@gmail.com</a>
<a href=""mailto:cr.ow.ns.te.v.e.n33.0@gmail.com"">cr.ow.ns.te.v.e.n33.0@gmail.com</a>
<a href=""mailto:crow.nst.even3.3.0@gmail.com"">crow.nst.even3.3.0@gmail.com</a>
<a href=""mailto:c.row.n.s.t.eve.n3.3.0@gmail.com"">c.row.n.s.t.eve.n3.3.0@gmail.com</a>
<a href=""mailto:c.r.o.wns.te.v.e.n.330@gmail.com"">c.r.o.wns.te.v.e.n.330@gmail.com</a>
<a href=""mailto:cro.w.ns.t.ev.en3.3.0@gmail.com"">cro.w.ns.t.ev.en3.3.0@gmail.com</a>
<a href=""mailto:c.r.o.w.ns.te.ve.n.3.30@gmail.com"">c.r.o.w.ns.te.ve.n.3.30@gmail.com</a>
<a href=""mailto:c.row.nstev.en33.0@gmail.com"">c.row.nstev.en33.0@gmail.com</a>
<a href=""mailto:cr.owns.tev.en3.3.0@gmail.com"">cr.owns.tev.en3.3.0@gmail.com</a>
<a href=""mailto:cro.wn.stev.e.n33.0@gmail.com"">cro.wn.stev.e.n33.0@gmail.com</a>
<a href=""mailto:crow.ns.t.e.ve.n3.3.0@gmail.com"">crow.ns.t.e.ve.n3.3.0@gmail.com</a>
<a href=""mailto:cr.o.wnst.even.330@gmail.com"">cr.o.wnst.even.330@gmail.com</a>
<a href=""mailto:c.r.o.w.n.s.teve.n.33.0@gmail.com"">c.r.o.w.n.s.teve.n.33.0@gmail.com</a>
<a href=""mailto:c.r.o.wns.te.v.en.3.30@gmail.com"">c.r.o.wns.te.v.en.3.30@gmail.com</a>
<a href=""mailto:crow.n.s.teve.n.3.3.0@gmail.com"">crow.n.s.teve.n.3.3.0@gmail.com</a>
<a href=""mailto:crow.nst.e.ven330@gmail.com"">crow.nst.e.ven330@gmail.com</a>
<a href=""mailto:c.rown.s.tev.en.3.30@gmail.com"">c.rown.s.tev.en.3.30@gmail.com</a>
<a href=""mailto:c.r.o.w.n.s.t.e.v.e.n330@gmail.com"">c.r.o.w.n.s.t.e.v.e.n330@gmail.com</a>
<a href=""mailto:crow.nstev.e.n.3.3.0@gmail.com"">crow.nstev.e.n.3.3.0@gmail.com</a>
<a href=""mailto:cr.o.wn.s.tev.en3.3.0@gmail.com"">cr.o.wn.s.tev.en3.3.0@gmail.com</a>
<a href=""mailto:c.r.ow.nst.e.ven.3.3.0@gmail.com"">c.r.ow.nst.e.ven.3.3.0@gmail.com</a>
<a href=""mailto:crow.nst.even.330@gmail.com"">crow.nst.even.330@gmail.com</a>
<a href=""mailto:c.r.o.wns.t.ev.e.n33.0@gmail.com"">c.r.o.wns.t.ev.e.n33.0@gmail.com</a>
<a href=""mailto:c.ro.w.nstev.e.n.33.0@gmail.com"">c.ro.w.nstev.e.n.33.0@gmail.com</a>
<a href=""mailto:c.ro.w.n.s.t.even3.3.0@gmail.com"">c.ro.w.n.s.t.even3.3.0@gmail.com</a>
<a href=""mailto:cro.w.n.s.tev.en3.3.0@gmail.com"">cro.w.n.s.tev.en3.3.0@gmail.com</a>
<a href=""mailto:crow.n.st.ev.e.n.330@gmail.com"">crow.n.st.ev.e.n.330@gmail.com</a>
<a href=""mailto:c.r.ow.ns.teven330@gmail.com"">c.r.ow.ns.teven330@gmail.com</a>
<a href=""mailto:c.r.o.wnst.e.ven.3.30@gmail.com"">c.r.o.wnst.e.ven.3.30@gmail.com</a>
<a href=""mailto:c.r.ow.ns.te.ven3.30@gmail.com"">c.r.ow.ns.te.ven3.30@gmail.com</a>
<a href=""mailto:c.r.ow.n.ste.ven.33.0@gmail.com"">c.r.ow.n.ste.ven.33.0@gmail.com</a>
<a href=""mailto:c.r.ownste.v.e.n330@gmail.com"">c.r.ownste.v.e.n330@gmail.com</a>
<a href=""mailto:cro.wnste.v.e.n.3.3.0@gmail.com"">cro.wnste.v.e.n.3.3.0@gmail.com</a>
<a href=""mailto:cro.wnst.e.v.e.n.3.30@gmail.com"">cro.wnst.e.v.e.n.3.30@gmail.com</a>
<a href=""mailto:crown.s.teven.3.30@gmail.com"">crown.s.teven.3.30@gmail.com</a>
<a href=""mailto:c.r.ownst.e.ven.33.0@gmail.com"">c.r.ownst.e.ven.33.0@gmail.com</a>
<a href=""mailto:c.r.o.w.nst.e.v.e.n33.0@gmail.com"">c.r.o.w.nst.e.v.e.n33.0@gmail.com</a>
<a href=""mailto:cr.o.w.nst.e.v.e.n3.3.0@gmail.com"">cr.o.w.nst.e.v.e.n3.3.0@gmail.com</a>
<a href=""mailto:c.r.o.wn.s.t.ev.en330@gmail.com"">c.r.o.wn.s.t.ev.en330@gmail.com</a>
<a href=""mailto:c.rowns.teve.n33.0@gmail.com"">c.rowns.teve.n33.0@gmail.com</a>
<a href=""mailto:c.r.o.w.ns.te.ven3.30@gmail.com"">c.r.o.w.ns.te.ven3.30@gmail.com</a>
<a href=""mailto:cr.o.w.nste.v.e.n.330@gmail.com"">cr.o.w.nste.v.e.n.330@gmail.com</a>
<a href=""mailto:c.ro.w.n.stev.en.3.3.0@gmail.com"">c.ro.w.n.stev.en.3.3.0@gmail.com</a>
<a href=""mailto:c.row.nst.e.v.en.3.3.0@gmail.com"">c.row.nst.e.v.en.3.3.0@gmail.com</a>
<a href=""mailto:crow.n.stev.e.n.330@gmail.com"">crow.n.stev.e.n.330@gmail.com</a>
<a href=""mailto:cr.owns.teven33.0@gmail.com"">cr.owns.teven33.0@gmail.com</a>
<a href=""mailto:crown.st.e.ven.33.0@gmail.com"">crown.st.e.ven.33.0@gmail.com</a>
<a href=""mailto:crow.n.s.te.v.e.n.3.3.0@gmail.com"">crow.n.s.te.v.e.n.3.3.0@gmail.com</a>
<a href=""mailto:c.ro.wn.s.tev.e.n33.0@gmail.com"">c.ro.wn.s.tev.e.n33.0@gmail.com</a>
<a href=""mailto:c.r.o.w.n.s.te.v.e.n.3.30@gmail.com"">c.r.o.w.n.s.te.v.e.n.3.30@gmail.com</a>
<a href=""mailto:c.r.owns.t.ev.en3.30@gmail.com"">c.r.owns.t.ev.en3.30@gmail.com</a>
<a href=""mailto:c.rown.s.teve.n.3.3.0@gmail.com"">c.rown.s.teve.n.3.3.0@gmail.com</a>
<a href=""mailto:cr.o.wnstev.en.3.3.0@gmail.com"">cr.o.wnstev.en.3.3.0@gmail.com</a>
<a href=""mailto:c.ro.w.nste.v.e.n33.0@gmail.com"">c.ro.w.nste.v.e.n33.0@gmail.com</a>
<a href=""mailto:cr.o.wnsteve.n.3.3.0@gmail.com"">cr.o.wnsteve.n.3.3.0@gmail.com</a>
<a href=""mailto:c.r.o.w.nst.e.ven33.0@gmail.com"">c.r.o.w.nst.e.ven33.0@gmail.com</a>
<a href=""mailto:cr.o.wnstev.e.n.33.0@gmail.com"">cr.o.wnstev.e.n.33.0@gmail.com</a>
<a href=""mailto:c.ro.w.n.s.t.eve.n330@gmail.com"">c.ro.w.n.s.t.eve.n330@gmail.com</a>
<a href=""mailto:c.r.o.wns.teve.n.3.3.0@gmail.com"">c.r.o.wns.teve.n.3.3.0@gmail.com</a>
<a href=""mailto:c.ro.w.n.s.te.ven3.3.0@gmail.com"">c.ro.w.n.s.te.ven3.3.0@gmail.com</a>
<a href=""mailto:cro.wns.t.ev.e.n3.3.0@gmail.com"">cro.wns.t.ev.e.n3.3.0@gmail.com</a>
<a href=""mailto:c.row.ns.te.v.e.n.330@gmail.com"">c.row.ns.te.v.e.n.330@gmail.com</a>
<a href=""mailto:cr.o.wns.te.ve.n3.3.0@gmail.com"">cr.o.wns.te.ve.n3.3.0@gmail.com</a>
<a href=""mailto:cr.o.w.n.s.tev.en.3.30@gmail.com"">cr.o.w.n.s.tev.en.3.30@gmail.com</a>
<a href=""mailto:c.row.nst.e.ve.n.33.0@gmail.com"">c.row.nst.e.ve.n.33.0@gmail.com</a>
<a href=""mailto:crown.ste.ven330@gmail.com"">crown.ste.ven330@gmail.com</a>
<a href=""mailto:cro.w.ns.t.e.ven.3.30@gmail.com"">cro.w.ns.t.e.ven.3.30@gmail.com</a>
<a href=""mailto:cr.o.wn.ste.v.e.n330@gmail.com"">cr.o.wn.ste.v.e.n330@gmail.com</a>
<a href=""mailto:c.r.o.wn.s.t.e.ven33.0@gmail.com"">c.r.o.wn.s.t.e.ven33.0@gmail.com</a>
<a href=""mailto:cro.w.nsteven330@gmail.com"">cro.w.nsteven330@gmail.com</a>
<a href=""mailto:c.r.ownst.eve.n.330@gmail.com"">c.r.ownst.eve.n.330@gmail.com</a>
<a href=""mailto:cr.o.w.n.st.e.v.e.n3.30@gmail.com"">cr.o.w.n.st.e.v.e.n3.30@gmail.com</a>
<a href=""mailto:c.r.ownstev.en.3.30@gmail.com"">c.r.ownstev.en.3.30@gmail.com</a>
<a href=""mailto:cr.o.w.nste.ven.3.30@gmail.com"">cr.o.w.nste.ven.3.30@gmail.com</a>
<a href=""mailto:c.r.ow.ns.t.e.ve.n3.3.0@gmail.com"">c.r.ow.ns.t.e.ve.n3.3.0@gmail.com</a>
<a href=""mailto:cr.ow.nst.e.ven.3.30@gmail.com"">cr.ow.nst.e.ven.3.30@gmail.com</a>
<a href=""mailto:cro.wn.s.te.ve.n.3.3.0@gmail.com"">cro.wn.s.te.ve.n.3.3.0@gmail.com</a>
<a href=""mailto:cro.w.nste.v.en3.30@gmail.com"">cro.w.nste.v.en3.30@gmail.com</a>
<a href=""mailto:cro.wns.tev.e.n.3.3.0@gmail.com"">cro.wns.tev.e.n.3.3.0@gmail.com</a>
<a href=""mailto:crownst.e.ve.n.33.0@gmail.com"">crownst.e.ve.n.33.0@gmail.com</a>
<a href=""mailto:cro.wn.stev.e.n.33.0@gmail.com"">cro.wn.stev.e.n.33.0@gmail.com</a>
<a href=""mailto:c.row.n.st.even330@gmail.com"">c.row.n.st.even330@gmail.com</a>
<a href=""mailto:crow.ns.te.v.e.n.33.0@gmail.com"">crow.ns.te.v.e.n.33.0@gmail.com</a>
<a href=""mailto:c.r.ow.n.steve.n.3.30@gmail.com"">c.r.ow.n.steve.n.3.30@gmail.com</a>
<a href=""mailto:c.ro.w.nst.ev.en.330@gmail.com"">c.ro.w.nst.ev.en.330@gmail.com</a>
<a href=""mailto:c.r.o.wn.s.t.eve.n.3.30@gmail.com"">c.r.o.wn.s.t.eve.n.3.30@gmail.com</a>
<a href=""mailto:cr.o.w.nst.eve.n3.30@gmail.com"">cr.o.w.nst.eve.n3.30@gmail.com</a>
<a href=""mailto:c.ro.w.nst.ev.en33.0@gmail.com"">c.ro.w.nst.ev.en33.0@gmail.com</a>
<a href=""mailto:cro.wn.s.te.v.en3.3.0@gmail.com"">cro.wn.s.te.v.en3.3.0@gmail.com</a>
<a href=""mailto:cro.w.n.s.t.e.ve.n3.30@gmail.com"">cro.w.n.s.t.e.ve.n3.30@gmail.com</a>
<a href=""mailto:cr.o.w.ns.te.ve.n330@gmail.com"">cr.o.w.ns.te.ve.n330@gmail.com</a>
<a href=""mailto:crow.nstev.en3.3.0@gmail.com"">crow.nstev.en3.3.0@gmail.com</a>
<a href=""mailto:c.row.n.st.ev.e.n330@gmail.com"">c.row.n.st.ev.e.n330@gmail.com</a>
<a href=""mailto:c.row.n.s.te.v.e.n3.30@gmail.com"">c.row.n.s.te.v.e.n3.30@gmail.com</a>
<a href=""mailto:cr.ow.ns.t.eve.n3.3.0@gmail.com"">cr.ow.ns.t.eve.n3.3.0@gmail.com</a>
<a href=""mailto:cro.w.nste.v.e.n330@gmail.com"">cro.w.nste.v.e.n330@gmail.com</a>
<a href=""mailto:cr.ow.n.st.e.v.e.n.330@gmail.com"">cr.ow.n.st.e.v.e.n.330@gmail.com</a>
<a href=""mailto:c.ro.w.ns.t.e.ven.3.30@gmail.com"">c.ro.w.ns.t.e.ven.3.30@gmail.com</a>
<a href=""mailto:c.row.n.s.teven.3.3.0@gmail.com"">c.row.n.s.teven.3.3.0@gmail.com</a>
<a href=""mailto:cr.o.w.ns.tev.e.n.330@gmail.com"">cr.o.w.ns.tev.e.n.330@gmail.com</a>
<a href=""mailto:c.rown.s.te.v.e.n.3.3.0@gmail.com"">c.rown.s.te.v.e.n.3.3.0@gmail.com</a>
<a href=""mailto:cro.wns.t.eve.n.3.30@gmail.com"">cro.wns.t.eve.n.3.30@gmail.com</a>
<a href=""mailto:c.r.o.w.n.s.t.eve.n.3.3.0@gmail.com"">c.r.o.w.n.s.t.eve.n.3.3.0@gmail.com</a>
<a href=""mailto:cr.ow.ns.t.eve.n330@gmail.com"">cr.ow.ns.t.eve.n330@gmail.com</a>
<a href=""mailto:c.r.o.w.nst.eve.n.330@gmail.com"">c.r.o.w.nst.eve.n.330@gmail.com</a>
<a href=""mailto:cr.o.wn.s.tev.e.n3.30@gmail.com"">cr.o.wn.s.tev.e.n3.30@gmail.com</a>
<a href=""mailto:c.r.o.wn.s.t.e.ven330@gmail.com"">c.r.o.wn.s.t.e.ven330@gmail.com</a>
<a href=""mailto:cro.w.nstev.e.n.3.30@gmail.com"">cro.w.nstev.e.n.3.30@gmail.com</a>
<a href=""mailto:c.rownste.ven.330@gmail.com"">c.rownste.ven.330@gmail.com</a>
<a href=""mailto:c.ro.wn.s.te.ven330@gmail.com"">c.ro.wn.s.te.ven330@gmail.com</a>
<a href=""mailto:cro.w.nstev.e.n.3.3.0@gmail.com"">cro.w.nstev.e.n.3.3.0@gmail.com</a>
<a href=""mailto:c.r.own.ste.ve.n.330@gmail.com"">c.r.own.ste.ve.n.330@gmail.com</a>
<a href=""mailto:cr.o.wns.te.ve.n3.30@gmail.com"">cr.o.wns.te.ve.n3.30@gmail.com</a>
<a href=""mailto:cr.o.w.nst.even.33.0@gmail.com"">cr.o.w.nst.even.33.0@gmail.com</a>
<a href=""mailto:c.r.owns.teven3.3.0@gmail.com"">c.r.owns.teven3.3.0@gmail.com</a>
<a href=""mailto:c.ro.w.nstev.en330@gmail.com"">c.ro.w.nstev.en330@gmail.com</a>
<a href=""mailto:c.ro.wns.tev.e.n.330@gmail.com"">c.ro.wns.tev.e.n.330@gmail.com</a>
<a href=""mailto:cr.o.wn.s.te.ve.n.330@gmail.com"">cr.o.wn.s.te.ve.n.330@gmail.com</a>
<a href=""mailto:crowns.teven33.0@gmail.com"">crowns.teven33.0@gmail.com</a>
<a href=""mailto:c.ro.wnsteven3.30@gmail.com"">c.ro.wnsteven3.30@gmail.com</a>
<a href=""mailto:cr.o.wns.t.ev.e.n3.3.0@gmail.com"">cr.o.wns.t.ev.e.n3.3.0@gmail.com</a>
<a href=""mailto:c.rown.s.te.ven.330@gmail.com"">c.rown.s.te.ven.330@gmail.com</a>
<a href=""mailto:Kristalinagoergieva@Usa.Com"">Kristalinagoergieva@Usa.Com</a>
<a href=""mailto:cr.ownst.even.33.0@gmail.com"">cr.ownst.even.33.0@gmail.com</a>
<a href=""mailto:cr.o.wn.s.teven33.0@gmail.com"">cr.o.wn.s.teven33.0@gmail.com</a>
<a href=""mailto:cro.w.ns.t.even33.0@gmail.com"">cro.w.ns.t.even33.0@gmail.com</a>
<a href=""mailto:c.r.ownsteven.330@gmail.com"">c.r.ownsteven.330@gmail.com</a>
<a href=""mailto:crownst.eve.n330@gmail.com"">crownst.eve.n330@gmail.com</a>
<a href=""mailto:cro.wn.st.ev.e.n.3.3.0@gmail.com"">cro.wn.st.ev.e.n.3.3.0@gmail.com</a>
<a href=""mailto:cr.own.st.ev.en.3.30@gmail.com"">cr.own.st.ev.en.3.30@gmail.com</a>
<a href=""mailto:Kristalinagoergieva@Usa.Com"">Kristalinagoergieva@Usa.Com</a>
<a href=""mailto:cr.o.w.ns.te.ve.n.3.3.0@gmail.com"">cr.o.w.ns.te.ve.n.3.3.0@gmail.com</a>
<a href=""mailto:c.ro.w.n.s.teve.n33.0@gmail.com"">c.ro.w.n.s.teve.n33.0@gmail.com</a>
<a href=""mailto:c.ro.w.nste.v.e.n3.30@gmail.com"">c.ro.w.nste.v.e.n3.30@gmail.com</a>
<a href=""mailto:cr.o.w.n.st.eve.n330@gmail.com"">cr.o.w.n.st.eve.n330@gmail.com</a>
<a href=""mailto:c.rowns.tev.en.33.0@gmail.com"">c.rowns.tev.en.33.0@gmail.com</a>
<a href=""mailto:c.r.o.wn.s.teven.3.3.0@gmail.com"">c.r.o.wn.s.teven.3.3.0@gmail.com</a>
<a href=""mailto:cro.wn.st.e.v.e.n.33.0@gmail.com"">cro.wn.st.e.v.e.n.33.0@gmail.com</a>
<a href=""mailto:c.ro.w.n.stev.en.330@gmail.com"">c.ro.w.n.stev.en.330@gmail.com</a>
<a href=""mailto:c.r.ow.n.s.teven33.0@gmail.com"">c.r.ow.n.s.teven33.0@gmail.com</a>
<a href=""mailto:c.rown.s.te.ve.n.3.3.0@gmail.com"">c.rown.s.te.ve.n.3.3.0@gmail.com</a>
<a href=""mailto:c.r.ownst.eve.n33.0@gmail.com"">c.r.ownst.eve.n33.0@gmail.com</a>
<a href=""mailto:cr.o.w.n.stev.e.n3.30@gmail.com"">cr.o.w.n.stev.e.n3.30@gmail.com</a>
<a href=""mailto:cr.ow.ns.teven33.0@gmail.com"">cr.ow.ns.teven33.0@gmail.com</a>
<a href=""mailto:crow.n.s.te.ven3.3.0@gmail.com"">crow.n.s.te.ven3.3.0@gmail.com</a>
<a href=""mailto:c.r.ow.n.s.teven.330@gmail.com"">c.r.ow.n.s.teven.330@gmail.com</a>
<a href=""mailto:c.r.ow.n.s.t.e.ve.n330@gmail.com"">c.r.ow.n.s.t.e.ve.n330@gmail.com</a>
<a href=""mailto:c.row.n.st.even.330@gmail.com"">c.row.n.st.even.330@gmail.com</a>
<a href=""mailto:c.row.ns.te.ve.n330@gmail.com"">c.row.ns.te.ve.n330@gmail.com</a>
<a href=""mailto:cr.ow.n.s.teven.3.30@gmail.com"">cr.ow.n.s.teven.3.30@gmail.com</a>
<a href=""mailto:c.r.o.w.n.s.t.e.v.en.330@gmail.com"">c.r.o.w.n.s.t.e.v.en.330@gmail.com</a>
<a href=""mailto:c.ro.w.ns.teve.n.3.3.0@gmail.com"">c.ro.w.ns.teve.n.3.3.0@gmail.com</a>
<a href=""mailto:cr.own.s.tev.e.n3.3.0@gmail.com"">cr.own.s.tev.e.n3.3.0@gmail.com</a>
<a href=""mailto:c.ro.w.ns.t.e.ven33.0@gmail.com"">c.ro.w.ns.t.e.ven33.0@gmail.com</a>
<a href=""mailto:crowns.t.e.ve.n.33.0@gmail.com"">crowns.t.e.ve.n.33.0@gmail.com</a>
<a href=""mailto:c.r.o.w.n.s.teve.n33.0@gmail.com"">c.r.o.w.n.s.teve.n33.0@gmail.com</a>
<a href=""mailto:crowns.t.ev.en.33.0@gmail.com"">crowns.t.ev.en.33.0@gmail.com</a>
<a href=""mailto:c.rown.s.t.eve.n.3.30@gmail.com"">c.rown.s.t.eve.n.3.30@gmail.com</a>
<a href=""mailto:cr.ow.ns.t.eve.n.33.0@gmail.com"">cr.ow.ns.t.eve.n.33.0@gmail.com</a>
<a href=""mailto:cro.w.n.st.e.v.e.n33.0@gmail.com"">cro.w.n.st.e.v.e.n33.0@gmail.com</a>
<a href=""mailto:c.ro.w.n.steven.3.3.0@gmail.com"">c.ro.w.n.steven.3.3.0@gmail.com</a>
<a href=""mailto:c.r.o.wnst.even33.0@gmail.com"">c.r.o.wnst.even33.0@gmail.com</a>
<a href=""mailto:c.ro.w.ns.t.ev.en3.30@gmail.com"">c.ro.w.ns.t.ev.en3.30@gmail.com</a>
<a href=""mailto:c.ro.wnsteve.n.3.30@gmail.com"">c.ro.wnsteve.n.3.30@gmail.com</a>
<a href=""mailto:c.r.o.wn.s.t.ev.en.3.3.0@gmail.com"">c.r.o.wn.s.t.ev.en.3.3.0@gmail.com</a>
<a href=""mailto:cr.ow.ns.teve.n33.0@gmail.com"">cr.ow.ns.teve.n33.0@gmail.com</a>
<a href=""mailto:crowns.teve.n.3.30@gmail.com"">crowns.teve.n.3.30@gmail.com</a>
<a href=""mailto:c.r.o.w.ns.teven3.30@gmail.com"">c.r.o.w.ns.teven3.30@gmail.com</a>
<a href=""mailto:cr.own.st.e.v.e.n33.0@gmail.com"">cr.own.st.e.v.e.n33.0@gmail.com</a>
<a href=""mailto:c.r.ownst.ev.e.n.330@gmail.com"">c.r.ownst.ev.e.n.330@gmail.com</a>
<a href=""mailto:cr.ow.n.st.ev.e.n.33.0@gmail.com"">cr.ow.n.st.ev.e.n.33.0@gmail.com</a>
<a href=""mailto:c.rownst.ev.e.n330@gmail.com"">c.rownst.ev.e.n330@gmail.com</a>
<a href=""mailto:c.ro.wns.t.e.ven.3.30@gmail.com"">c.ro.wns.t.e.ven.3.30@gmail.com</a>
<a href=""mailto:cr.o.wn.st.eve.n3.30@gmail.com"">cr.o.wn.st.eve.n3.30@gmail.com</a>
<a href=""mailto:ladyaishayakoub@gmail.com"">ladyaishayakoub@gmail.com</a>
<a href=""mailto:lad.y.a.i.s.h.ay.akou.b@gmail.com"">lad.y.a.i.s.h.ay.akou.b@gmail.com</a>
<a href=""mailto:l.a.d.yais.ha.ya.k.ou.b@gmail.com"">l.a.d.yais.ha.ya.k.ou.b@gmail.com</a>
<a href=""mailto:ladyai.s.hay.a.k.oub@gmail.com"">ladyai.s.hay.a.k.oub@gmail.com</a>
<a href=""mailto:lady.a.is.h.ay.ak.oub@gmail.com"">lady.a.is.h.ay.ak.oub@gmail.com</a>
<a href=""mailto:l.ady.a.i.sh.aya.k.ou.b@gmail.com"">l.ady.a.i.sh.aya.k.ou.b@gmail.com</a>
<a href=""mailto:l.ad.y.ai.s.h.ay.a.kou.b@gmail.com"">l.ad.y.ai.s.h.ay.a.kou.b@gmail.com</a>
<a href=""mailto:la.dy.a.isha.yak.ou.b@gmail.com"">la.dy.a.isha.yak.ou.b@gmail.com</a>
<a href=""mailto:la.dyais.hayakoub@gmail.com"">la.dyais.hayakoub@gmail.com</a>
<a href=""mailto:l.a.d.yais.ha.yak.oub@gmail.com"">l.a.d.yais.ha.yak.oub@gmail.com</a>
<a href=""mailto:lad.y.ai.s.h.ay.a.ko.ub@gmail.com"">lad.y.ai.s.h.ay.a.ko.ub@gmail.com</a>
<a href=""mailto:l.ad.ya.is.h.a.yak.o.u.b@gmail.com"">l.ad.ya.is.h.a.yak.o.u.b@gmail.com</a>
<a href=""mailto:l.a.dy.ais.h.aya.koub@gmail.com"">l.a.dy.ais.h.aya.koub@gmail.com</a>
<a href=""mailto:l.ad.ya.is.ha.y.a.k.o.u.b@gmail.com"">l.ad.ya.is.ha.y.a.k.o.u.b@gmail.com</a>
<a href=""mailto:l.a.d.yaish.ay.a.k.oub@gmail.com"">l.a.d.yaish.ay.a.k.oub@gmail.com</a>
<a href=""mailto:l.a.d.ya.i.sh.a.y.ako.ub@gmail.com"">l.a.d.ya.i.sh.a.y.ako.ub@gmail.com</a>
<a href=""mailto:lad.y.ai.sh.ay.ak.oub@gmail.com"">lad.y.ai.sh.ay.ak.oub@gmail.com</a>
<a href=""mailto:la.dy.a.is.ha.ya.k.o.u.b@gmail.com"">la.dy.a.is.ha.ya.k.o.u.b@gmail.com</a>
<a href=""mailto:la.dy.a.i.sha.y.ako.u.b@gmail.com"">la.dy.a.i.sha.y.ako.u.b@gmail.com</a>
<a href=""mailto:l.ad.y.ai.shay.ak.o.u.b@gmail.com"">l.ad.y.ai.shay.ak.o.u.b@gmail.com</a>
<a href=""mailto:la.d.ya.i.s.h.a.ya.k.o.u.b@gmail.com"">la.d.ya.i.s.h.a.ya.k.o.u.b@gmail.com</a>
<a href=""mailto:la.d.ya.ish.a.ya.kou.b@gmail.com"">la.d.ya.ish.a.ya.kou.b@gmail.com</a>
<a href=""mailto:lad.y.ai.sha.yakou.b@gmail.com"">lad.y.ai.sha.yakou.b@gmail.com</a>
<a href=""mailto:l.a.d.y.a.i.sha.yak.o.ub@gmail.com"">l.a.d.y.a.i.sha.yak.o.ub@gmail.com</a>
<a href=""mailto:la.d.y.ais.ha.y.ak.ou.b@gmail.com"">la.d.y.ais.ha.y.ak.ou.b@gmail.com</a>
<a href=""mailto:lad.y.a.i.s.h.ayako.ub@gmail.com"">lad.y.a.i.s.h.ayako.ub@gmail.com</a>
<a href=""mailto:l.ad.y.a.isha.ya.k.o.u.b@gmail.com"">l.ad.y.a.isha.ya.k.o.u.b@gmail.com</a>
<a href=""mailto:la.dy.a.ish.a.y.a.k.ou.b@gmail.com"">la.dy.a.ish.a.y.a.k.ou.b@gmail.com</a>
<a href=""mailto:la.dy.ais.h.a.yakoub@gmail.com"">la.dy.ais.h.a.yakoub@gmail.com</a>
<a href=""mailto:lad.y.aish.ayak.ou.b@gmail.com"">lad.y.aish.ayak.ou.b@gmail.com</a>
<a href=""mailto:lady.a.i.sha.y.a.k.oub@gmail.com"">lady.a.i.sha.y.a.k.oub@gmail.com</a>
<a href=""mailto:la.d.ya.is.ha.yak.o.ub@gmail.com"">la.d.ya.is.ha.yak.o.ub@gmail.com</a>
<a href=""mailto:l.a.d.yai.s.h.a.y.ako.ub@gmail.com"">l.a.d.yai.s.h.a.y.ako.ub@gmail.com</a>
<a href=""mailto:lady.ai.s.h.a.y.ak.o.ub@gmail.com"">lady.ai.s.h.a.y.ak.o.ub@gmail.com</a>
<a href=""mailto:la.dy.aish.ay.ak.o.ub@gmail.com"">la.dy.aish.ay.ak.o.ub@gmail.com</a>
<a href=""mailto:la.d.y.a.i.s.h.a.y.a.k.o.u.b@gmail.com"">la.d.y.a.i.s.h.a.y.a.k.o.u.b@gmail.com</a>
<a href=""mailto:l.a.dya.i.s.ha.y.ako.ub@gmail.com"">l.a.dya.i.s.ha.y.ako.ub@gmail.com</a>
<a href=""mailto:lady.aish.ayakou.b@gmail.com"">lady.aish.ayakou.b@gmail.com</a>
<a href=""mailto:l.ad.y.a.ish.a.y.a.k.o.ub@gmail.com"">l.ad.y.a.ish.a.y.a.k.o.ub@gmail.com</a>
<a href=""mailto:l.a.d.y.ai.s.hayak.oub@gmail.com"">l.a.d.y.ai.s.hayak.oub@gmail.com</a>
<a href=""mailto:l.a.dyaish.a.ya.ko.u.b@gmail.com"">l.a.dyaish.a.ya.ko.u.b@gmail.com</a>
<a href=""mailto:lad.yai.sha.ya.k.ou.b@gmail.com"">lad.yai.sha.ya.k.ou.b@gmail.com</a>
<a href=""mailto:ladya.i.s.ha.y.akoub@gmail.com"">ladya.i.s.ha.y.akoub@gmail.com</a>
<a href=""mailto:l.a.d.y.ais.hay.ak.ou.b@gmail.com"">l.a.d.y.ais.hay.ak.ou.b@gmail.com</a>
<a href=""mailto:l.ady.a.ishay.a.ko.ub@gmail.com"">l.ady.a.ishay.a.ko.ub@gmail.com</a>
<a href=""mailto:l.ad.ya.is.ha.ya.ko.u.b@gmail.com"">l.ad.ya.is.ha.ya.ko.u.b@gmail.com</a>
<a href=""mailto:l.ad.yai.s.h.a.yak.o.ub@gmail.com"">l.ad.yai.s.h.a.yak.o.ub@gmail.com</a>
<a href=""mailto:la.d.y.a.ish.a.y.a.ko.u.b@gmail.com"">la.d.y.a.ish.a.y.a.ko.u.b@gmail.com</a>
<a href=""mailto:l.ady.ai.s.h.ayak.oub@gmail.com"">l.ady.ai.s.h.ayak.oub@gmail.com</a>
<a href=""mailto:l.a.d.ya.i.sh.ayako.u.b@gmail.com"">l.a.d.ya.i.sh.ayako.u.b@gmail.com</a>
<a href=""mailto:l.adya.ishaya.k.o.u.b@gmail.com"">l.adya.ishaya.k.o.u.b@gmail.com</a>
<a href=""mailto:l.a.d.ya.isha.y.a.k.oub@gmail.com"">l.a.d.ya.isha.y.a.k.oub@gmail.com</a>
<a href=""mailto:lady.a.i.sha.y.a.k.ou.b@gmail.com"">lady.a.i.sha.y.a.k.ou.b@gmail.com</a>
<a href=""mailto:l.ad.y.aisha.yak.oub@gmail.com"">l.ad.y.aisha.yak.oub@gmail.com</a>
<a href=""mailto:lady.a.i.shay.akou.b@gmail.com"">lady.a.i.shay.akou.b@gmail.com</a>
<a href=""mailto:l.a.d.y.ai.shaya.ko.u.b@gmail.com"">l.a.d.y.ai.shaya.ko.u.b@gmail.com</a>
<a href=""mailto:lad.y.a.i.s.h.a.y.a.koub@gmail.com"">lad.y.a.i.s.h.a.y.a.koub@gmail.com</a>
<a href=""mailto:l.adyai.sha.y.ako.u.b@gmail.com"">l.adyai.sha.y.ako.u.b@gmail.com</a>
<a href=""mailto:lad.y.ais.ha.yak.oub@gmail.com"">lad.y.ais.ha.yak.oub@gmail.com</a>
<a href=""mailto:l.ad.yais.ha.y.akoub@gmail.com"">l.ad.yais.ha.y.akoub@gmail.com</a>
<a href=""mailto:l.ad.y.a.is.hay.a.k.ou.b@gmail.com"">l.ad.y.a.is.hay.a.k.ou.b@gmail.com</a>
<a href=""mailto:l.a.dya.i.sha.y.ako.u.b@gmail.com"">l.a.dya.i.sha.y.ako.u.b@gmail.com</a>
<a href=""mailto:l.ad.yais.ha.y.ako.ub@gmail.com"">l.ad.yais.ha.y.ako.ub@gmail.com</a>
<a href=""mailto:l.a.dy.aishay.a.koub@gmail.com"">l.a.dy.aishay.a.koub@gmail.com</a>
<a href=""mailto:l.adyaisha.ya.kou.b@gmail.com"">l.adyaisha.ya.kou.b@gmail.com</a>
<a href=""mailto:l.adyais.h.a.ya.k.ou.b@gmail.com"">l.adyais.h.a.ya.k.ou.b@gmail.com</a>
<a href=""mailto:l.a.dyaisha.ya.k.oub@gmail.com"">l.a.dyaisha.ya.k.oub@gmail.com</a>
<a href=""mailto:lad.y.a.i.s.haya.k.oub@gmail.com"">lad.y.a.i.s.haya.k.oub@gmail.com</a>
<a href=""mailto:l.a.d.ya.is.h.a.y.ak.o.u.b@gmail.com"">l.a.d.ya.is.h.a.y.ak.o.u.b@gmail.com</a>
<a href=""mailto:la.d.y.ai.s.h.a.yako.ub@gmail.com"">la.d.y.ai.s.h.a.yako.ub@gmail.com</a>
<a href=""mailto:ladyai.s.h.ay.a.k.o.u.b@gmail.com"">ladyai.s.h.ay.a.k.o.u.b@gmail.com</a>
<a href=""mailto:ladya.is.ha.y.a.k.o.ub@gmail.com"">ladya.is.ha.y.a.k.o.ub@gmail.com</a>
<a href=""mailto:la.dyai.shayakoub@gmail.com"">la.dyai.shayakoub@gmail.com</a>
<a href=""mailto:ladyais.h.aya.k.o.u.b@gmail.com"">ladyais.h.aya.k.o.u.b@gmail.com</a>
<a href=""mailto:la.d.y.a.ish.a.yak.o.ub@gmail.com"">la.d.y.a.ish.a.yak.o.ub@gmail.com</a>
<a href=""mailto:la.dy.a.ish.aya.k.oub@gmail.com"">la.dy.a.ish.aya.k.oub@gmail.com</a>
<a href=""mailto:la.dya.i.s.haya.ko.ub@gmail.com"">la.dya.i.s.haya.ko.ub@gmail.com</a>
<a href=""mailto:lad.y.ai.s.h.a.ya.koub@gmail.com"">lad.y.ai.s.h.a.ya.koub@gmail.com</a>
<a href=""mailto:l.ad.y.a.is.ha.y.a.k.o.ub@gmail.com"">l.ad.y.a.is.ha.y.a.k.o.ub@gmail.com</a>
<a href=""mailto:lad.y.a.i.sh.ay.ako.u.b@gmail.com"">lad.y.a.i.sh.ay.ako.u.b@gmail.com</a>
<a href=""mailto:la.d.ya.i.sha.y.ak.o.ub@gmail.com"">la.d.ya.i.sha.y.ak.o.ub@gmail.com</a>
<a href=""mailto:lad.y.a.ishay.a.kou.b@gmail.com"">lad.y.a.ishay.a.kou.b@gmail.com</a>
<a href=""mailto:la.d.ya.is.h.ay.ak.o.ub@gmail.com"">la.d.ya.is.h.ay.ak.o.ub@gmail.com</a>
<a href=""mailto:ladyaish.ay.a.k.oub@gmail.com"">ladyaish.ay.a.k.oub@gmail.com</a>
<a href=""mailto:l.ad.y.a.i.sh.a.ya.koub@gmail.com"">l.ad.y.a.i.sh.a.ya.koub@gmail.com</a>
<a href=""mailto:lad.yai.s.hay.a.k.oub@gmail.com"">lad.yai.s.hay.a.k.oub@gmail.com</a>
<a href=""mailto:lad.y.a.ish.a.y.a.kou.b@gmail.com"">lad.y.a.ish.a.y.a.kou.b@gmail.com</a>
<a href=""mailto:l.ad.yai.sha.ya.k.o.u.b@gmail.com"">l.ad.yai.sha.ya.k.o.u.b@gmail.com</a>
<a href=""mailto:l.a.d.y.ai.shaya.koub@gmail.com"">l.a.d.y.ai.shaya.koub@gmail.com</a>
<a href=""mailto:la.dyais.h.ay.ako.ub@gmail.com"">la.dyais.h.ay.ako.ub@gmail.com</a>
<a href=""mailto:la.dy.a.is.h.ay.ak.o.u.b@gmail.com"">la.dy.a.is.h.ay.ak.o.u.b@gmail.com</a>
<a href=""mailto:lad.ya.ish.ay.a.kou.b@gmail.com"">lad.ya.ish.ay.a.kou.b@gmail.com</a>
<a href=""mailto:lady.ais.h.a.ya.k.o.u.b@gmail.com"">lady.ais.h.a.ya.k.o.u.b@gmail.com</a>
<a href=""mailto:lad.y.ais.ha.yak.o.u.b@gmail.com"">lad.y.ais.ha.yak.o.u.b@gmail.com</a>
<a href=""mailto:la.d.y.aish.a.yak.ou.b@gmail.com"">la.d.y.aish.a.yak.ou.b@gmail.com</a>
<a href=""mailto:l.a.dy.a.i.sh.aya.koub@gmail.com"">l.a.dy.a.i.sh.aya.koub@gmail.com</a>
<a href=""mailto:la.d.ya.ishay.ak.oub@gmail.com"">la.d.ya.ishay.ak.oub@gmail.com</a>
<a href=""mailto:lady.a.ish.ay.akou.b@gmail.com"">lady.a.ish.ay.akou.b@gmail.com</a>
<a href=""mailto:l.adyaishay.ako.ub@gmail.com"">l.adyaishay.ako.ub@gmail.com</a>
<a href=""mailto:lad.y.a.i.s.ha.y.ak.ou.b@gmail.com"">lad.y.a.i.s.ha.y.ak.ou.b@gmail.com</a>
<a href=""mailto:la.d.yai.shay.a.kou.b@gmail.com"">la.d.yai.shay.a.kou.b@gmail.com</a>
<a href=""mailto:l.ad.ya.i.s.ha.y.ak.o.u.b@gmail.com"">l.ad.ya.i.s.ha.y.ak.o.u.b@gmail.com</a>
<a href=""mailto:l.a.dyaish.a.ya.k.o.u.b@gmail.com"">l.a.dyaish.a.ya.k.o.u.b@gmail.com</a>
<a href=""mailto:l.a.d.y.a.i.shaya.k.ou.b@gmail.com"">l.a.d.y.a.i.shaya.k.ou.b@gmail.com</a>
<a href=""mailto:l.a.dya.is.h.a.y.akou.b@gmail.com"">l.a.dya.is.h.a.y.akou.b@gmail.com</a>
<a href=""mailto:la.dyai.s.hay.a.kou.b@gmail.com"">la.dyai.s.hay.a.kou.b@gmail.com</a>
<a href=""mailto:la.d.ya.i.sh.a.ya.koub@gmail.com"">la.d.ya.i.sh.a.ya.koub@gmail.com</a>
<a href=""mailto:lad.y.aisha.ya.ko.ub@gmail.com"">lad.y.aisha.ya.ko.ub@gmail.com</a>
<a href=""mailto:lad.yais.hayak.ou.b@gmail.com"">lad.yais.hayak.ou.b@gmail.com</a>
<a href=""mailto:lad.y.ai.s.h.ay.akou.b@gmail.com"">lad.y.ai.s.h.ay.akou.b@gmail.com</a>
<a href=""mailto:l.ady.aishayako.ub@gmail.com"">l.ady.aishayako.ub@gmail.com</a>
<a href=""mailto:l.ad.ya.isha.y.ako.u.b@gmail.com"">l.ad.ya.isha.y.ako.u.b@gmail.com</a>
<a href=""mailto:lad.ya.is.ha.yako.ub@gmail.com"">lad.ya.is.ha.yako.ub@gmail.com</a>
<a href=""mailto:la.d.y.a.i.shaya.k.ou.b@gmail.com"">la.d.y.a.i.shaya.k.ou.b@gmail.com</a>
<a href=""mailto:l.ad.yai.s.hay.ak.oub@gmail.com"">l.ad.yai.s.hay.ak.oub@gmail.com</a>
<a href=""mailto:lady.a.i.s.h.ay.ako.u.b@gmail.com"">lady.a.i.s.h.ay.ako.u.b@gmail.com</a>
<a href=""mailto:l.a.dyai.sh.a.y.a.k.o.u.b@gmail.com"">l.a.dyai.sh.a.y.a.k.o.u.b@gmail.com</a>
<a href=""mailto:lad.y.a.i.s.ha.y.a.koub@gmail.com"">lad.y.a.i.s.ha.y.a.koub@gmail.com</a>
<a href=""mailto:lad.y.ai.shay.a.k.oub@gmail.com"">lad.y.ai.shay.a.k.oub@gmail.com</a>
<a href=""mailto:la.dy.a.i.sh.ay.ako.u.b@gmail.com"">la.dy.a.i.sh.ay.ako.u.b@gmail.com</a>
<a href=""mailto:l.a.dy.a.i.s.ha.y.a.k.o.ub@gmail.com"">l.a.dy.a.i.s.ha.y.a.k.o.ub@gmail.com</a>
<a href=""mailto:l.ady.a.isha.yak.o.ub@gmail.com"">l.ady.a.isha.yak.o.ub@gmail.com</a>
<a href=""mailto:l.ad.yai.shay.a.ko.ub@gmail.com"">l.ad.yai.shay.a.ko.ub@gmail.com</a>
<a href=""mailto:lad.y.aish.ay.ako.u.b@gmail.com"">lad.y.aish.ay.ako.u.b@gmail.com</a>
<a href=""mailto:ladyai.sh.a.y.akou.b@gmail.com"">ladyai.sh.a.y.akou.b@gmail.com</a>
<a href=""mailto:la.dy.aishay.a.ko.u.b@gmail.com"">la.dy.aishay.a.ko.u.b@gmail.com</a>
<a href=""mailto:lady.ais.h.ayakou.b@gmail.com"">lady.ais.h.ayakou.b@gmail.com</a>
<a href=""mailto:la.dyai.s.h.a.yak.ou.b@gmail.com"">la.dyai.s.h.a.yak.ou.b@gmail.com</a>
<a href=""mailto:l.ad.yaishayakou.b@gmail.com"">l.ad.yaishayakou.b@gmail.com</a>
<a href=""mailto:l.a.dya.i.s.h.a.ya.k.o.ub@gmail.com"">l.a.dya.i.s.h.a.ya.k.o.ub@gmail.com</a>
<a href=""mailto:l.ad.y.a.i.sh.a.y.akoub@gmail.com"">l.ad.y.a.i.sh.a.y.akoub@gmail.com</a>
<a href=""mailto:l.ad.ya.i.sh.a.yakoub@gmail.com"">l.ad.ya.i.sh.a.yakoub@gmail.com</a>
<a href=""mailto:la.dy.a.isha.y.ak.o.ub@gmail.com"">la.dy.a.isha.y.ak.o.ub@gmail.com</a>
<a href=""mailto:l.a.dya.i.s.ha.yako.ub@gmail.com"">l.a.dya.i.s.ha.yako.ub@gmail.com</a>
<a href=""mailto:l.a.dyaishaya.ko.ub@gmail.com"">l.a.dyaishaya.ko.ub@gmail.com</a>
<a href=""mailto:lad.ya.ish.a.y.ak.o.ub@gmail.com"">lad.ya.ish.a.y.ak.o.ub@gmail.com</a>
<a href=""mailto:la.dy.a.i.s.ha.yako.u.b@gmail.com"">la.dy.a.i.s.ha.yako.u.b@gmail.com</a>
<a href=""mailto:ladyai.s.haya.k.oub@gmail.com"">ladyai.s.haya.k.oub@gmail.com</a>
<a href=""mailto:l.a.d.ya.isha.y.a.ko.u.b@gmail.com"">l.a.d.ya.isha.y.a.ko.u.b@gmail.com</a>
<a href=""mailto:l.adya.i.sh.ay.ako.u.b@gmail.com"">l.adya.i.sh.ay.ako.u.b@gmail.com</a>
<a href=""mailto:l.a.dya.i.s.hay.ak.ou.b@gmail.com"">l.a.dya.i.s.hay.ak.ou.b@gmail.com</a>
<a href=""mailto:la.d.yai.sh.a.yakoub@gmail.com"">la.d.yai.sh.a.yakoub@gmail.com</a>
<a href=""mailto:la.dya.is.ha.yak.ou.b@gmail.com"">la.dya.is.ha.yak.ou.b@gmail.com</a>
<a href=""mailto:lad.y.a.ishayakou.b@gmail.com"">lad.y.a.ishayakou.b@gmail.com</a>
<a href=""mailto:lad.ya.is.h.ayak.o.ub@gmail.com"">lad.ya.is.h.ayak.o.ub@gmail.com</a>
<a href=""mailto:la.d.y.aisha.y.a.koub@gmail.com"">la.d.y.aisha.y.a.koub@gmail.com</a>
<a href=""mailto:lady.a.is.hay.ak.o.u.b@gmail.com"">lady.a.is.hay.ak.o.u.b@gmail.com</a>
<a href=""mailto:l.a.d.yaish.ayakoub@gmail.com"">l.a.d.yaish.ayakoub@gmail.com</a>
<a href=""mailto:la.dya.i.s.h.aya.kou.b@gmail.com"">la.dya.i.s.h.aya.kou.b@gmail.com</a>
<a href=""mailto:la.dy.a.is.haya.kou.b@gmail.com"">la.dy.a.is.haya.kou.b@gmail.com</a>
<a href=""mailto:ladyais.hay.ak.o.u.b@gmail.com"">ladyais.hay.ak.o.u.b@gmail.com</a>
<a href=""mailto:lad.ya.i.s.h.a.yako.ub@gmail.com"">lad.ya.i.s.h.a.yako.ub@gmail.com</a>
<a href=""mailto:l.a.d.yais.ha.yako.u.b@gmail.com"">l.a.d.yais.ha.yako.u.b@gmail.com</a>
<a href=""mailto:lad.yais.h.ay.akoub@gmail.com"">lad.yais.h.ay.akoub@gmail.com</a>
<a href=""mailto:l.ad.y.ais.ha.y.a.ko.u.b@gmail.com"">l.ad.y.ais.ha.y.a.ko.u.b@gmail.com</a>
<a href=""mailto:la.d.ya.isha.ya.koub@gmail.com"">la.d.ya.isha.ya.koub@gmail.com</a>
<a href=""mailto:l.a.d.y.a.ish.a.yako.u.b@gmail.com"">l.a.d.y.a.ish.a.yako.u.b@gmail.com</a>
<a href=""mailto:l.ad.y.a.ish.a.yak.oub@gmail.com"">l.ad.y.a.ish.a.yak.oub@gmail.com</a>
<a href=""mailto:ladya.ish.ay.a.kou.b@gmail.com"">ladya.ish.ay.a.kou.b@gmail.com</a>
<a href=""mailto:la.d.y.ais.ha.y.akoub@gmail.com"">la.d.y.ais.ha.y.akoub@gmail.com</a>
<a href=""mailto:la.d.yai.s.hayako.u.b@gmail.com"">la.d.yai.s.hayako.u.b@gmail.com</a>
<a href=""mailto:ladya.i.s.hay.a.k.o.ub@gmail.com"">ladya.i.s.hay.a.k.o.ub@gmail.com</a>
<a href=""mailto:l.ad.y.aish.ay.a.ko.ub@gmail.com"">l.ad.y.aish.ay.a.ko.ub@gmail.com</a>
<a href=""mailto:l.adya.i.sha.yak.o.ub@gmail.com"">l.adya.i.sha.yak.o.ub@gmail.com</a>
<a href=""mailto:la.d.ya.is.hayako.u.b@gmail.com"">la.d.ya.is.hayako.u.b@gmail.com</a>
<a href=""mailto:l.a.dya.ish.ay.ako.ub@gmail.com"">l.a.dya.ish.ay.ako.ub@gmail.com</a>
<a href=""mailto:la.d.y.a.i.s.h.a.y.a.ko.u.b@gmail.com"">la.d.y.a.i.s.h.a.y.a.ko.u.b@gmail.com</a>
<a href=""mailto:ladyaish.ay.ak.o.ub@gmail.com"">ladyaish.ay.ak.o.ub@gmail.com</a>
<a href=""mailto:l.a.d.ya.i.sha.y.akou.b@gmail.com"">l.a.d.ya.i.sha.y.akou.b@gmail.com</a>
<a href=""mailto:la.d.y.a.i.s.h.ayako.ub@gmail.com"">la.d.y.a.i.s.h.ayako.ub@gmail.com</a>
<a href=""mailto:l.ad.ya.i.sha.yak.ou.b@gmail.com"">l.ad.ya.i.sha.yak.ou.b@gmail.com</a>
<a href=""mailto:ladyais.h.a.y.a.k.o.u.b@gmail.com"">ladyais.h.a.y.a.k.o.u.b@gmail.com</a>
<a href=""mailto:l.ad.y.ais.h.ayak.ou.b@gmail.com"">l.ad.y.ais.h.ayak.ou.b@gmail.com</a>
<a href=""mailto:l.a.d.y.a.i.sh.ayak.o.ub@gmail.com"">l.a.d.y.a.i.sh.ayak.o.ub@gmail.com</a>
<a href=""mailto:lady.ai.s.h.a.y.a.ko.u.b@gmail.com"">lady.ai.s.h.a.y.a.ko.u.b@gmail.com</a>
<a href=""mailto:la.dya.i.s.h.a.yako.ub@gmail.com"">la.dya.i.s.h.a.yako.ub@gmail.com</a>
<a href=""mailto:la.d.y.a.isha.ya.kou.b@gmail.com"">la.d.y.a.isha.ya.kou.b@gmail.com</a>
<a href=""mailto:la.dyais.hay.ak.oub@gmail.com"">la.dyais.hay.ak.oub@gmail.com</a>
<a href=""mailto:la.dya.i.sh.ayak.ou.b@gmail.com"">la.dya.i.sh.ayak.ou.b@gmail.com</a>
<a href=""mailto:l.adya.ish.ay.a.ko.u.b@gmail.com"">l.adya.ish.ay.a.ko.u.b@gmail.com</a>
<a href=""mailto:la.dy.a.is.h.ay.a.ko.u.b@gmail.com"">la.dy.a.is.h.ay.a.ko.u.b@gmail.com</a>
<a href=""mailto:lad.yaishaya.ko.ub@gmail.com"">lad.yaishaya.ko.ub@gmail.com</a>
<a href=""mailto:lad.yai.s.hay.a.k.o.ub@gmail.com"">lad.yai.s.hay.a.k.o.ub@gmail.com</a>
<a href=""mailto:la.d.y.a.i.sh.ay.a.koub@gmail.com"">la.d.y.a.i.sh.ay.a.koub@gmail.com</a>
<a href=""mailto:lad.ya.i.s.hay.a.kou.b@gmail.com"">lad.ya.i.s.hay.a.kou.b@gmail.com</a>
<a href=""mailto:l.adyai.s.h.ayakoub@gmail.com"">l.adyai.s.h.ayakoub@gmail.com</a>
<a href=""mailto:la.dyais.h.ay.a.ko.u.b@gmail.com"">la.dyais.h.ay.a.ko.u.b@gmail.com</a>
<a href=""mailto:l.adyaisha.y.akoub@gmail.com"">l.adyaisha.y.akoub@gmail.com</a>
<a href=""mailto:lady.ai.sh.aya.kou.b@gmail.com"">lady.ai.sh.aya.kou.b@gmail.com</a>
<a href=""mailto:l.a.d.ya.is.haya.k.o.u.b@gmail.com"">l.a.d.ya.is.haya.k.o.u.b@gmail.com</a>
<a href=""mailto:lad.yai.sha.ya.koub@gmail.com"">lad.yai.sha.ya.koub@gmail.com</a>
<a href=""mailto:l.a.d.y.ai.s.h.ay.a.k.ou.b@gmail.com"">l.a.d.y.ai.s.h.ay.a.k.ou.b@gmail.com</a>
<a href=""mailto:la.d.ya.is.ha.yako.u.b@gmail.com"">la.d.ya.is.ha.yako.u.b@gmail.com</a>
<a href=""mailto:ladya.ishayak.o.ub@gmail.com"">ladya.ishayak.o.ub@gmail.com</a>
<a href=""mailto:l.a.d.yai.sh.aya.koub@gmail.com"">l.a.d.yai.sh.aya.koub@gmail.com</a>
<a href=""mailto:la.dyaish.ay.a.k.o.u.b@gmail.com"">la.dyaish.ay.a.k.o.u.b@gmail.com</a>
<a href=""mailto:la.dya.is.h.ay.a.koub@gmail.com"">la.dya.is.h.ay.a.koub@gmail.com</a>
<a href=""mailto:la.dya.i.sh.aya.ko.ub@gmail.com"">la.dya.i.sh.aya.ko.ub@gmail.com</a>
<a href=""mailto:la.d.y.ais.hayak.o.u.b@gmail.com"">la.d.y.ais.hayak.o.u.b@gmail.com</a>
<a href=""mailto:l.adyai.sh.ay.ak.ou.b@gmail.com"">l.adyai.sh.ay.ak.ou.b@gmail.com</a>
<a href=""mailto:l.a.dyaish.a.ya.k.o.ub@gmail.com"">l.a.dyaish.a.ya.k.o.ub@gmail.com</a>
<a href=""mailto:johnson72ed@gmail.com"">johnson72ed@gmail.com</a>
<a href=""mailto:john.so.n.7.2.ed@gmail.com"">john.so.n.7.2.ed@gmail.com</a>
<a href=""mailto:j.o.hn.s.o.n.72e.d@gmail.com"">j.o.hn.s.o.n.72e.d@gmail.com</a>
<a href=""mailto:j.o.h.n.s.o.n72.e.d@gmail.com"">j.o.h.n.s.o.n72.e.d@gmail.com</a>
<a href=""mailto:jo.hnso.n72ed@gmail.com"">jo.hnso.n72ed@gmail.com</a>
<a href=""mailto:john.so.n72.e.d@gmail.com"">john.so.n72.e.d@gmail.com</a>
<a href=""mailto:jo.hn.s.o.n7.2.ed@gmail.com"">jo.hn.s.o.n7.2.ed@gmail.com</a>
<a href=""mailto:jo.hns.o.n72.e.d@gmail.com"">jo.hns.o.n72.e.d@gmail.com</a>
<a href=""mailto:jo.h.n.s.o.n.7.2.e.d@gmail.com"">jo.h.n.s.o.n.7.2.e.d@gmail.com</a>
<a href=""mailto:j.o.h.ns.on72ed@gmail.com"">j.o.h.ns.on72ed@gmail.com</a>
<a href=""mailto:john.s.o.n.72.e.d@gmail.com"">john.s.o.n.72.e.d@gmail.com</a>
<a href=""mailto:j.o.hnso.n72ed@gmail.com"">j.o.hnso.n72ed@gmail.com</a>
<a href=""mailto:j.o.hn.s.on72.ed@gmail.com"">j.o.hn.s.on72.ed@gmail.com</a>
<a href=""mailto:joh.n.so.n.72.e.d@gmail.com"">joh.n.so.n.72.e.d@gmail.com</a>
<a href=""mailto:john.s.o.n7.2ed@gmail.com"">john.s.o.n7.2ed@gmail.com</a>
<a href=""mailto:j.o.h.ns.o.n7.2e.d@gmail.com"">j.o.h.ns.o.n7.2e.d@gmail.com</a>
<a href=""mailto:john.son.7.2ed@gmail.com"">john.son.7.2ed@gmail.com</a>
<a href=""mailto:j.o.h.nson72.e.d@gmail.com"">j.o.h.nson72.e.d@gmail.com</a>
<a href=""mailto:j.ohn.s.on7.2e.d@gmail.com"">j.ohn.s.on7.2e.d@gmail.com</a>
<a href=""mailto:j.o.h.n.s.on.72.e.d@gmail.com"">j.o.h.n.s.on.72.e.d@gmail.com</a>
<a href=""mailto:j.ohnso.n.72.ed@gmail.com"">j.ohnso.n.72.ed@gmail.com</a>
<a href=""mailto:johnso.n72.e.d@gmail.com"">johnso.n72.e.d@gmail.com</a>
<a href=""mailto:jo.hn.son72.e.d@gmail.com"">jo.hn.son72.e.d@gmail.com</a>
<a href=""mailto:john.so.n7.2.ed@gmail.com"">john.so.n7.2.ed@gmail.com</a>
<a href=""mailto:jo.hnso.n7.2.ed@gmail.com"">jo.hnso.n7.2.ed@gmail.com</a>
<a href=""mailto:joh.ns.o.n72ed@gmail.com"">joh.ns.o.n72ed@gmail.com</a>
<a href=""mailto:jo.hnson7.2.ed@gmail.com"">jo.hnson7.2.ed@gmail.com</a>
<a href=""mailto:j.ohnson72e.d@gmail.com"">j.ohnson72e.d@gmail.com</a>
<a href=""mailto:jo.h.n.s.o.n7.2e.d@gmail.com"">jo.h.n.s.o.n7.2e.d@gmail.com</a>
<a href=""mailto:jo.h.ns.on.72.e.d@gmail.com"">jo.h.ns.on.72.e.d@gmail.com</a>
<a href=""mailto:johnson.72.e.d@gmail.com"">johnson.72.e.d@gmail.com</a>
<a href=""mailto:jo.hn.s.on7.2ed@gmail.com"">jo.hn.s.on7.2ed@gmail.com</a>
<a href=""mailto:johns.on7.2.ed@gmail.com"">johns.on7.2.ed@gmail.com</a>
<a href=""mailto:johns.o.n7.2.ed@gmail.com"">johns.o.n7.2.ed@gmail.com</a>
<a href=""mailto:j.oh.n.s.o.n.7.2.ed@gmail.com"">j.oh.n.s.o.n.7.2.ed@gmail.com</a>
<a href=""mailto:j.o.h.n.s.o.n.72.ed@gmail.com"">j.o.h.n.s.o.n.72.ed@gmail.com</a>
<a href=""mailto:joh.n.s.on72e.d@gmail.com"">joh.n.s.on72e.d@gmail.com</a>
<a href=""mailto:j.o.h.ns.on72.ed@gmail.com"">j.o.h.ns.on72.ed@gmail.com</a>
<a href=""mailto:jo.hn.so.n.7.2.e.d@gmail.com"">jo.hn.so.n.7.2.e.d@gmail.com</a>
<a href=""mailto:j.o.hn.so.n.72.e.d@gmail.com"">j.o.hn.so.n.72.e.d@gmail.com</a>
<a href=""mailto:j.o.hnso.n.7.2.e.d@gmail.com"">j.o.hnso.n.7.2.e.d@gmail.com</a>
<a href=""mailto:j.o.hnson72ed@gmail.com"">j.o.hnson72ed@gmail.com</a>
<a href=""mailto:jo.hn.s.on.7.2.e.d@gmail.com"">jo.hn.s.on.7.2.e.d@gmail.com</a>
<a href=""mailto:j.oh.n.so.n7.2ed@gmail.com"">j.oh.n.so.n7.2ed@gmail.com</a>
<a href=""mailto:jo.h.nso.n7.2.ed@gmail.com"">jo.h.nso.n7.2.ed@gmail.com</a>
<a href=""mailto:j.o.hn.s.o.n7.2e.d@gmail.com"">j.o.hn.s.o.n7.2e.d@gmail.com</a>
<a href=""mailto:j.oh.n.so.n.72ed@gmail.com"">j.oh.n.so.n.72ed@gmail.com</a>
<a href=""mailto:jo.hn.s.o.n72ed@gmail.com"">jo.hn.s.o.n72ed@gmail.com</a>
<a href=""mailto:john.so.n.72.ed@gmail.com"">john.so.n.72.ed@gmail.com</a>
<a href=""mailto:jo.hnson7.2ed@gmail.com"">jo.hnson7.2ed@gmail.com</a>
<a href=""mailto:johnso.n7.2ed@gmail.com"">johnso.n7.2ed@gmail.com</a>
<a href=""mailto:j.o.hn.so.n7.2ed@gmail.com"">j.o.hn.so.n7.2ed@gmail.com</a>
<a href=""mailto:j.oh.ns.o.n72ed@gmail.com"">j.oh.ns.o.n72ed@gmail.com</a>
<a href=""mailto:j.o.h.ns.o.n72.e.d@gmail.com"">j.o.h.ns.o.n72.e.d@gmail.com</a>
<a href=""mailto:jo.hn.so.n.72ed@gmail.com"">jo.hn.so.n.72ed@gmail.com</a>
<a href=""mailto:j.o.hnson72.ed@gmail.com"">j.o.hnson72.ed@gmail.com</a>
<a href=""mailto:john.son.7.2e.d@gmail.com"">john.son.7.2e.d@gmail.com</a>
<a href=""mailto:john.s.o.n.7.2.e.d@gmail.com"">john.s.o.n.7.2.e.d@gmail.com</a>
<a href=""mailto:jo.hn.s.o.n72.ed@gmail.com"">jo.hn.s.o.n72.ed@gmail.com</a>
<a href=""mailto:j.o.hnso.n72.ed@gmail.com"">j.o.hnso.n72.ed@gmail.com</a>
<a href=""mailto:joh.nso.n.72e.d@gmail.com"">joh.nso.n.72e.d@gmail.com</a>
<a href=""mailto:jo.h.n.s.o.n.72.e.d@gmail.com"">jo.h.n.s.o.n.72.e.d@gmail.com</a>
<a href=""mailto:j.o.h.nso.n72e.d@gmail.com"">j.o.h.nso.n72e.d@gmail.com</a>
<a href=""mailto:j.oh.n.s.o.n72ed@gmail.com"">j.oh.n.s.o.n72ed@gmail.com</a>
<a href=""mailto:j.oh.ns.on72.ed@gmail.com"">j.oh.ns.on72.ed@gmail.com</a>
<a href=""mailto:john.so.n72ed@gmail.com"">john.so.n72ed@gmail.com</a>
<a href=""mailto:joh.n.so.n7.2e.d@gmail.com"">joh.n.so.n7.2e.d@gmail.com</a>
<a href=""mailto:j.ohn.s.o.n.72.e.d@gmail.com"">j.ohn.s.o.n.72.e.d@gmail.com</a>
<a href=""mailto:jo.hns.o.n7.2ed@gmail.com"">jo.hns.o.n7.2ed@gmail.com</a>
<a href=""mailto:jo.h.n.s.o.n7.2.e.d@gmail.com"">jo.h.n.s.o.n7.2.e.d@gmail.com</a>
<a href=""mailto:joh.nso.n.7.2ed@gmail.com"">joh.nso.n.7.2ed@gmail.com</a>
<a href=""mailto:j.o.hnso.n.72.e.d@gmail.com"">j.o.hnso.n.72.e.d@gmail.com</a>
<a href=""mailto:j.ohn.son.7.2ed@gmail.com"">j.ohn.son.7.2ed@gmail.com</a>
<a href=""mailto:jo.hns.o.n.72e.d@gmail.com"">jo.hns.o.n.72e.d@gmail.com</a>
<a href=""mailto:jo.h.nson.72ed@gmail.com"">jo.h.nson.72ed@gmail.com</a>
<a href=""mailto:j.oh.n.s.o.n.72e.d@gmail.com"">j.oh.n.s.o.n.72e.d@gmail.com</a>
<a href=""mailto:j.ohnson.7.2ed@gmail.com"">j.ohnson.7.2ed@gmail.com</a>
<a href=""mailto:j.o.hn.son.72.e.d@gmail.com"">j.o.hn.son.72.e.d@gmail.com</a>
<a href=""mailto:j.o.hn.son.7.2.ed@gmail.com"">j.o.hn.son.7.2.ed@gmail.com</a>
<a href=""mailto:jo.h.nson.72.ed@gmail.com"">jo.h.nson.72.ed@gmail.com</a>
<a href=""mailto:johnson7.2.e.d@gmail.com"">johnson7.2.e.d@gmail.com</a>
<a href=""mailto:joh.n.so.n7.2.ed@gmail.com"">joh.n.so.n7.2.ed@gmail.com</a>
<a href=""mailto:j.o.h.n.so.n.72ed@gmail.com"">j.o.h.n.so.n.72ed@gmail.com</a>
<a href=""mailto:jo.h.nson7.2.ed@gmail.com"">jo.h.nson7.2.ed@gmail.com</a>
<a href=""mailto:j.oh.n.son.7.2.e.d@gmail.com"">j.oh.n.son.7.2.e.d@gmail.com</a>
<a href=""mailto:john.s.on72.e.d@gmail.com"">john.s.on72.e.d@gmail.com</a>
<a href=""mailto:jo.h.n.s.o.n72ed@gmail.com"">jo.h.n.s.o.n72ed@gmail.com</a>
<a href=""mailto:joh.n.so.n.72.ed@gmail.com"">joh.n.so.n.72.ed@gmail.com</a>
<a href=""mailto:john.s.on.7.2ed@gmail.com"">john.s.on.7.2ed@gmail.com</a>
<a href=""mailto:j.ohnso.n7.2.e.d@gmail.com"">j.ohnso.n7.2.e.d@gmail.com</a>
<a href=""mailto:j.o.hn.s.o.n.72ed@gmail.com"">j.o.hn.s.o.n.72ed@gmail.com</a>
<a href=""mailto:j.o.h.nson7.2.ed@gmail.com"">j.o.h.nson7.2.ed@gmail.com</a>
<a href=""mailto:joh.ns.o.n.7.2.e.d@gmail.com"">joh.ns.o.n.7.2.e.d@gmail.com</a>
<a href=""mailto:jo.hnso.n7.2ed@gmail.com"">jo.hnso.n7.2ed@gmail.com</a>
<a href=""mailto:j.o.hns.o.n72.ed@gmail.com"">j.o.hns.o.n72.ed@gmail.com</a>
<a href=""mailto:joh.nson.72ed@gmail.com"">joh.nson.72ed@gmail.com</a>
<a href=""mailto:j.o.h.n.s.o.n.7.2e.d@gmail.com"">j.o.h.n.s.o.n.7.2e.d@gmail.com</a>
<a href=""mailto:j.o.hn.so.n7.2e.d@gmail.com"">j.o.hn.so.n7.2e.d@gmail.com</a>
<a href=""mailto:j.o.h.nson7.2ed@gmail.com"">j.o.h.nson7.2ed@gmail.com</a>
<a href=""mailto:joh.ns.on.72e.d@gmail.com"">joh.ns.on.72e.d@gmail.com</a>
<a href=""mailto:j.ohnson7.2.e.d@gmail.com"">j.ohnson7.2.e.d@gmail.com</a>
<a href=""mailto:j.o.h.n.so.n.7.2ed@gmail.com"">j.o.h.n.so.n.7.2ed@gmail.com</a>
<a href=""mailto:j.o.hn.s.o.n72.ed@gmail.com"">j.o.hn.s.o.n72.ed@gmail.com</a>
<a href=""mailto:jo.hn.so.n.72.e.d@gmail.com"">jo.hn.so.n.72.e.d@gmail.com</a>
<a href=""mailto:j.ohnso.n72e.d@gmail.com"">j.ohnso.n72e.d@gmail.com</a>
<a href=""mailto:joh.nso.n72.e.d@gmail.com"">joh.nso.n72.e.d@gmail.com</a>
<a href=""mailto:j.o.h.nson.72e.d@gmail.com"">j.o.h.nson.72e.d@gmail.com</a>
<a href=""mailto:joh.nson.7.2.ed@gmail.com"">joh.nson.7.2.ed@gmail.com</a>
<a href=""mailto:j.o.hn.s.o.n7.2.e.d@gmail.com"">j.o.hn.s.o.n7.2.e.d@gmail.com</a>
<a href=""mailto:jo.h.nso.n.7.2.e.d@gmail.com"">jo.h.nso.n.7.2.e.d@gmail.com</a>
<a href=""mailto:j.oh.nso.n.72.ed@gmail.com"">j.oh.nso.n.72.ed@gmail.com</a>
<a href=""mailto:joh.n.son.72e.d@gmail.com"">joh.n.son.72e.d@gmail.com</a>
<a href=""mailto:j.o.h.n.son7.2ed@gmail.com"">j.o.h.n.son7.2ed@gmail.com</a>
<a href=""mailto:j.o.hn.s.o.n7.2.ed@gmail.com"">j.o.hn.s.o.n7.2.ed@gmail.com</a>
<a href=""mailto:joh.n.son72.ed@gmail.com"">joh.n.son72.ed@gmail.com</a>
<a href=""mailto:john.so.n7.2e.d@gmail.com"">john.so.n7.2e.d@gmail.com</a>
<a href=""mailto:j.o.hn.son.72e.d@gmail.com"">j.o.hn.son.72e.d@gmail.com</a>
<a href=""mailto:jo.h.nso.n.7.2.ed@gmail.com"">jo.h.nso.n.7.2.ed@gmail.com</a>
<a href=""mailto:joh.nson7.2e.d@gmail.com"">joh.nson7.2e.d@gmail.com</a>
<a href=""mailto:j.o.hnson.72.e.d@gmail.com"">j.o.hnson.72.e.d@gmail.com</a>
<a href=""mailto:j.ohn.son7.2e.d@gmail.com"">j.ohn.son7.2e.d@gmail.com</a>
<a href=""mailto:j.oh.nson7.2e.d@gmail.com"">j.oh.nson7.2e.d@gmail.com</a>
<a href=""mailto:j.ohn.so.n72.e.d@gmail.com"">j.ohn.so.n72.e.d@gmail.com</a>
<a href=""mailto:jo.h.ns.on.72e.d@gmail.com"">jo.h.ns.on.72e.d@gmail.com</a>
<a href=""mailto:j.o.hn.s.o.n.72.ed@gmail.com"">j.o.hn.s.o.n.72.ed@gmail.com</a>
<a href=""mailto:johnson7.2.ed@gmail.com"">johnson7.2.ed@gmail.com</a>
<a href=""mailto:john.s.on.72ed@gmail.com"">john.s.on.72ed@gmail.com</a>
<a href=""mailto:joh.nso.n7.2.e.d@gmail.com"">joh.nso.n7.2.e.d@gmail.com</a>
<a href=""mailto:j.oh.n.son72.e.d@gmail.com"">j.oh.n.son72.e.d@gmail.com</a>
<a href=""mailto:j.ohn.so.n72.ed@gmail.com"">j.ohn.so.n72.ed@gmail.com</a>
<a href=""mailto:j.o.hnso.n7.2.ed@gmail.com"">j.o.hnso.n7.2.ed@gmail.com</a>
<a href=""mailto:john.s.o.n7.2e.d@gmail.com"">john.s.o.n7.2e.d@gmail.com</a>
<a href=""mailto:jo.h.n.s.o.n.72.ed@gmail.com"">jo.h.n.s.o.n.72.ed@gmail.com</a>
<a href=""mailto:jo.hn.son72e.d@gmail.com"">jo.hn.son72e.d@gmail.com</a>
<a href=""mailto:j.ohn.son.7.2.e.d@gmail.com"">j.ohn.son.7.2.e.d@gmail.com</a>
<a href=""mailto:jo.hn.son.7.2e.d@gmail.com"">jo.hn.son.7.2e.d@gmail.com</a>
<a href=""mailto:jo.h.nson.7.2.e.d@gmail.com"">jo.h.nson.7.2.e.d@gmail.com</a>
<a href=""mailto:john.s.o.n7.2.e.d@gmail.com"">john.s.o.n7.2.e.d@gmail.com</a>
<a href=""mailto:j.oh.n.s.on7.2.e.d@gmail.com"">j.oh.n.s.on7.2.e.d@gmail.com</a>
<a href=""mailto:joh.ns.on.7.2e.d@gmail.com"">joh.ns.on.7.2e.d@gmail.com</a>
<a href=""mailto:j.o.hn.son7.2ed@gmail.com"">j.o.hn.son7.2ed@gmail.com</a>
<a href=""mailto:j.o.h.ns.on7.2e.d@gmail.com"">j.o.h.ns.on7.2e.d@gmail.com</a>
<a href=""mailto:j.o.hnson.72.ed@gmail.com"">j.o.hnson.72.ed@gmail.com</a>
<a href=""mailto:j.ohns.o.n.72.ed@gmail.com"">j.ohns.o.n.72.ed@gmail.com</a>
<a href=""mailto:jo.hn.so.n.7.2.ed@gmail.com"">jo.hn.so.n.7.2.ed@gmail.com</a>
<a href=""mailto:jo.h.ns.on.7.2e.d@gmail.com"">jo.h.ns.on.7.2e.d@gmail.com</a>
<a href=""mailto:jo.hns.o.n7.2e.d@gmail.com"">jo.hns.o.n7.2e.d@gmail.com</a>
<a href=""mailto:j.o.h.n.s.on7.2e.d@gmail.com"">j.o.h.n.s.on7.2e.d@gmail.com</a>
<a href=""mailto:jo.hn.s.o.n72.e.d@gmail.com"">jo.hn.s.o.n72.e.d@gmail.com</a>
<a href=""mailto:j.o.hn.s.on.7.2.ed@gmail.com"">j.o.hn.s.on.7.2.ed@gmail.com</a>
<a href=""mailto:j.oh.n.so.n.7.2.ed@gmail.com"">j.oh.n.so.n.7.2.ed@gmail.com</a>
<a href=""mailto:jo.h.ns.o.n.7.2e.d@gmail.com"">jo.h.ns.o.n.7.2e.d@gmail.com</a>
<a href=""mailto:j.ohnso.n.7.2.ed@gmail.com"">j.ohnso.n.7.2.ed@gmail.com</a>
<a href=""mailto:john.s.on.72.ed@gmail.com"">john.s.on.72.ed@gmail.com</a>
<a href=""mailto:jo.h.n.so.n.72ed@gmail.com"">jo.h.n.so.n.72ed@gmail.com</a>
<a href=""mailto:jo.h.nson7.2.e.d@gmail.com"">jo.h.nson7.2.e.d@gmail.com</a>
<a href=""mailto:j.ohn.son.72ed@gmail.com"">j.ohn.son.72ed@gmail.com</a>
<a href=""mailto:j.ohn.so.n7.2ed@gmail.com"">j.ohn.so.n7.2ed@gmail.com</a>
<a href=""mailto:j.o.h.nson72.ed@gmail.com"">j.o.h.nson72.ed@gmail.com</a>
<a href=""mailto:jo.hn.son.72ed@gmail.com"">jo.hn.son.72ed@gmail.com</a>
<a href=""mailto:jo.hn.s.o.n.7.2.ed@gmail.com"">jo.hn.s.o.n.7.2.ed@gmail.com</a>
<a href=""mailto:j.oh.ns.o.n.7.2e.d@gmail.com"">j.oh.ns.o.n.7.2e.d@gmail.com</a>
<a href=""mailto:j.ohn.s.on.72.e.d@gmail.com"">j.ohn.s.on.72.e.d@gmail.com</a>
<a href=""mailto:j.ohnson7.2e.d@gmail.com"">j.ohnson7.2e.d@gmail.com</a>
<a href=""mailto:jo.hns.o.n72.ed@gmail.com"">jo.hns.o.n72.ed@gmail.com</a>
<a href=""mailto:j.ohn.so.n.7.2ed@gmail.com"">j.ohn.so.n.7.2ed@gmail.com</a>
<a href=""mailto:j.ohns.on7.2ed@gmail.com"">j.ohns.on7.2ed@gmail.com</a>
<a href=""mailto:j.o.hns.on72.e.d@gmail.com"">j.o.hns.on72.e.d@gmail.com</a>
<a href=""mailto:j.o.hnson.7.2.ed@gmail.com"">j.o.hnson.7.2.ed@gmail.com</a>
<a href=""mailto:jo.h.nson72.e.d@gmail.com"">jo.h.nson72.e.d@gmail.com</a>
<a href=""mailto:jo.h.n.s.o.n.7.2.ed@gmail.com"">jo.h.n.s.o.n.7.2.ed@gmail.com</a>
<a href=""mailto:j.o.hns.o.n72.e.d@gmail.com"">j.o.hns.o.n72.e.d@gmail.com</a>
<a href=""mailto:j.ohns.on72ed@gmail.com"">j.ohns.on72ed@gmail.com</a>
<a href=""mailto:j.ohn.s.on.7.2ed@gmail.com"">j.ohn.s.on.7.2ed@gmail.com</a>
<a href=""mailto:jo.hnson72.ed@gmail.com"">jo.hnson72.ed@gmail.com</a>
<a href=""mailto:j.o.hnso.n7.2ed@gmail.com"">j.o.hnso.n7.2ed@gmail.com</a>
<a href=""mailto:j.o.hn.s.on.7.2e.d@gmail.com"">j.o.hn.s.on.7.2e.d@gmail.com</a>
<a href=""mailto:joh.n.s.o.n7.2ed@gmail.com"">joh.n.s.o.n7.2ed@gmail.com</a>
<a href=""mailto:john.so.n.7.2.e.d@gmail.com"">john.so.n.7.2.e.d@gmail.com</a>
<a href=""mailto:jo.hnso.n.72ed@gmail.com"">jo.hnso.n.72ed@gmail.com</a>
<a href=""mailto:j.oh.ns.on72.e.d@gmail.com"">j.oh.ns.on72.e.d@gmail.com</a>
<a href=""mailto:jo.hn.s.o.n7.2.e.d@gmail.com"">jo.hn.s.o.n7.2.e.d@gmail.com</a>
<a href=""mailto:jo.h.n.so.n.72.ed@gmail.com"">jo.h.n.so.n.72.ed@gmail.com</a>
<a href=""mailto:j.oh.ns.o.n72e.d@gmail.com"">j.oh.ns.o.n72e.d@gmail.com</a>
<a href=""mailto:johnson.72ed@gmail.com"">johnson.72ed@gmail.com</a>
<a href=""mailto:jo.h.nso.n.72.ed@gmail.com"">jo.h.nso.n.72.ed@gmail.com</a>
<a href=""mailto:j.o.h.n.so.n.72.ed@gmail.com"">j.o.h.n.so.n.72.ed@gmail.com</a>
<a href=""mailto:john.son7.2ed@gmail.com"">john.son7.2ed@gmail.com</a>
<a href=""mailto:j.o.h.n.s.o.n72e.d@gmail.com"">j.o.h.n.s.o.n72e.d@gmail.com</a>
<a href=""mailto:johnson72ed@gmail.com"">johnson72ed@gmail.com</a>
<a href=""mailto:j.o.hns.o.n.72ed@gmail.com"">j.o.hns.o.n.72ed@gmail.com</a>
<a href=""mailto:j.o.h.n.s.on.7.2ed@gmail.com"">j.o.h.n.s.on.7.2ed@gmail.com</a>
<a href=""mailto:jo.h.ns.o.n.72.e.d@gmail.com"">jo.h.ns.o.n.72.e.d@gmail.com</a>
<a href=""mailto:j.ohn.so.n7.2.ed@gmail.com"">j.ohn.so.n7.2.ed@gmail.com</a>
<a href=""mailto:j.oh.ns.on.72.e.d@gmail.com"">j.oh.ns.on.72.e.d@gmail.com</a>
<a href=""mailto:jo.hns.o.n.72ed@gmail.com"">jo.hns.o.n.72ed@gmail.com</a>
<a href=""mailto:john.s.on.72.e.d@gmail.com"">john.s.on.72.e.d@gmail.com</a>
<a href=""mailto:j.oh.n.s.on7.2ed@gmail.com"">j.oh.n.s.on7.2ed@gmail.com</a>
<a href=""mailto:j.oh.n.s.o.n.7.2e.d@gmail.com"">j.oh.n.s.o.n.7.2e.d@gmail.com</a>
<a href=""mailto:j.oh.ns.o.n.7.2.e.d@gmail.com"">j.oh.ns.o.n.7.2.e.d@gmail.com</a>
<a href=""mailto:j.oh.n.s.on7.2e.d@gmail.com"">j.oh.n.s.on7.2e.d@gmail.com</a>
<a href=""mailto:revjackmorgan@gmail.com"">revjackmorgan@gmail.com</a>
<a href=""mailto:re.v.jack.mo.r.gan@gmail.com"">re.v.jack.mo.r.gan@gmail.com</a>
<a href=""mailto:r.ev.j.ac.km.or.g.an@gmail.com"">r.ev.j.ac.km.or.g.an@gmail.com</a>
<a href=""mailto:rev.j.a.ckm.or.ga.n@gmail.com"">rev.j.a.ckm.or.ga.n@gmail.com</a>
<a href=""mailto:re.v.jackm.o.rg.an@gmail.com"">re.v.jackm.o.rg.an@gmail.com</a>
<a href=""mailto:revja.ck.morga.n@gmail.com"">revja.ck.morga.n@gmail.com</a>
<a href=""mailto:r.ev.j.ac.k.m.org.a.n@gmail.com"">r.ev.j.ac.k.m.org.a.n@gmail.com</a>
<a href=""mailto:r.e.vjac.k.mo.r.g.an@gmail.com"">r.e.vjac.k.mo.r.g.an@gmail.com</a>
<a href=""mailto:r.ev.j.a.ckmo.r.g.an@gmail.com"">r.ev.j.a.ckmo.r.g.an@gmail.com</a>
<a href=""mailto:revja.c.kmorga.n@gmail.com"">revja.c.kmorga.n@gmail.com</a>
<a href=""mailto:re.vj.a.c.k.morga.n@gmail.com"">re.vj.a.c.k.morga.n@gmail.com</a>
<a href=""mailto:rev.jack.mor.g.an@gmail.com"">rev.jack.mor.g.an@gmail.com</a>
<a href=""mailto:re.vjac.kmor.g.a.n@gmail.com"">re.vjac.kmor.g.a.n@gmail.com</a>
<a href=""mailto:r.e.vj.a.ckm.or.g.an@gmail.com"">r.e.vj.a.ckm.or.g.an@gmail.com</a>
<a href=""mailto:rev.j.a.ck.mo.rgan@gmail.com"">rev.j.a.ck.mo.rgan@gmail.com</a>
<a href=""mailto:r.ev.ja.c.k.m.or.g.an@gmail.com"">r.ev.ja.c.k.m.or.g.an@gmail.com</a>
<a href=""mailto:r.evjac.k.m.organ@gmail.com"">r.evjac.k.m.organ@gmail.com</a>
<a href=""mailto:re.v.j.ac.k.mor.g.an@gmail.com"">re.v.j.ac.k.mor.g.an@gmail.com</a>
<a href=""mailto:re.v.jack.mor.ga.n@gmail.com"">re.v.jack.mor.ga.n@gmail.com</a>
<a href=""mailto:revj.a.c.km.o.r.ga.n@gmail.com"">revj.a.c.km.o.r.ga.n@gmail.com</a>
<a href=""mailto:r.e.vja.ck.m.o.r.g.an@gmail.com"">r.e.vja.ck.m.o.r.g.an@gmail.com</a>
<a href=""mailto:re.vjackm.org.an@gmail.com"">re.vjackm.org.an@gmail.com</a>
<a href=""mailto:revj.a.ckm.or.gan@gmail.com"">revj.a.ckm.or.gan@gmail.com</a>
<a href=""mailto:r.e.v.ja.c.k.morga.n@gmail.com"">r.e.v.ja.c.k.morga.n@gmail.com</a>
<a href=""mailto:revj.ac.km.or.g.a.n@gmail.com"">revj.ac.km.or.g.a.n@gmail.com</a>
<a href=""mailto:revj.ac.kmo.r.ga.n@gmail.com"">revj.ac.kmo.r.ga.n@gmail.com</a>
<a href=""mailto:r.e.vj.a.ck.mo.r.g.an@gmail.com"">r.e.vj.a.ck.mo.r.g.an@gmail.com</a>
<a href=""mailto:revjac.km.or.g.a.n@gmail.com"">revjac.km.or.g.a.n@gmail.com</a>
<a href=""mailto:r.e.v.j.ac.kmor.gan@gmail.com"">r.e.v.j.ac.kmor.gan@gmail.com</a>
<a href=""mailto:r.evj.ack.m.orga.n@gmail.com"">r.evj.ack.m.orga.n@gmail.com</a>
<a href=""mailto:re.v.jackmo.rga.n@gmail.com"">re.v.jackmo.rga.n@gmail.com</a>
<a href=""mailto:r.evjackm.o.r.gan@gmail.com"">r.evjackm.o.r.gan@gmail.com</a>
<a href=""mailto:r.evja.c.k.m.o.r.ga.n@gmail.com"">r.evja.c.k.m.o.r.ga.n@gmail.com</a>
<a href=""mailto:r.e.vj.ac.k.mo.r.g.an@gmail.com"">r.e.vj.ac.k.mo.r.g.an@gmail.com</a>
<a href=""mailto:r.e.vj.a.ck.mo.r.gan@gmail.com"">r.e.vj.a.ck.mo.r.gan@gmail.com</a>
<a href=""mailto:r.evja.c.k.m.o.rg.an@gmail.com"">r.evja.c.k.m.o.rg.an@gmail.com</a>
<a href=""mailto:r.ev.ja.ckmorg.a.n@gmail.com"">r.ev.ja.ckmorg.a.n@gmail.com</a>
<a href=""mailto:re.v.j.a.ckm.o.rgan@gmail.com"">re.v.j.a.ckm.o.rgan@gmail.com</a>
<a href=""mailto:revj.a.ck.mo.r.g.a.n@gmail.com"">revj.a.ck.mo.r.g.a.n@gmail.com</a>
<a href=""mailto:r.ev.j.ackmorg.a.n@gmail.com"">r.ev.j.ackmorg.a.n@gmail.com</a>
<a href=""mailto:r.evj.a.c.km.or.g.a.n@gmail.com"">r.evj.a.c.km.or.g.a.n@gmail.com</a>
<a href=""mailto:revj.ackmo.r.gan@gmail.com"">revj.ackmo.r.gan@gmail.com</a>
<a href=""mailto:r.ev.jac.kmo.r.g.a.n@gmail.com"">r.ev.jac.kmo.r.g.a.n@gmail.com</a>
<a href=""mailto:re.vja.ck.mo.r.g.an@gmail.com"">re.vja.ck.mo.r.g.an@gmail.com</a>
<a href=""mailto:re.v.ja.c.k.m.o.rg.an@gmail.com"">re.v.ja.c.k.m.o.rg.an@gmail.com</a>
<a href=""mailto:rev.j.a.c.km.o.rga.n@gmail.com"">rev.j.a.c.km.o.rga.n@gmail.com</a>
<a href=""mailto:rev.jack.mor.ga.n@gmail.com"">rev.jack.mor.ga.n@gmail.com</a>
<a href=""mailto:r.ev.j.ac.km.orga.n@gmail.com"">r.ev.j.ac.km.orga.n@gmail.com</a>
<a href=""mailto:revjac.km.or.gan@gmail.com"">revjac.km.or.gan@gmail.com</a>
<a href=""mailto:r.e.v.ja.c.kmor.ga.n@gmail.com"">r.e.v.ja.c.kmor.ga.n@gmail.com</a>
<a href=""mailto:r.e.vj.ac.k.morga.n@gmail.com"">r.e.vj.ac.k.morga.n@gmail.com</a>
<a href=""mailto:r.e.vj.ac.km.o.r.g.an@gmail.com"">r.e.vj.ac.km.o.r.g.an@gmail.com</a>
<a href=""mailto:r.e.v.j.ac.k.mo.rgan@gmail.com"">r.e.v.j.ac.k.mo.rgan@gmail.com</a>
<a href=""mailto:r.e.v.jac.k.mo.r.g.an@gmail.com"">r.e.v.jac.k.mo.r.g.an@gmail.com</a>
<a href=""mailto:r.e.v.jack.morg.a.n@gmail.com"">r.e.v.jack.morg.a.n@gmail.com</a>
<a href=""mailto:revjack.mor.ga.n@gmail.com"">revjack.mor.ga.n@gmail.com</a>
<a href=""mailto:revjackm.o.rg.a.n@gmail.com"">revjackm.o.rg.a.n@gmail.com</a>
<a href=""mailto:r.ev.jac.kmorgan@gmail.com"">r.ev.jac.kmorgan@gmail.com</a>
<a href=""mailto:r.e.v.j.ac.k.morg.an@gmail.com"">r.e.v.j.ac.k.morg.an@gmail.com</a>
<a href=""mailto:r.e.vja.ckmo.r.ga.n@gmail.com"">r.e.vja.ckmo.r.ga.n@gmail.com</a>
<a href=""mailto:rev.j.a.ckmo.rg.an@gmail.com"">rev.j.a.ckmo.rg.an@gmail.com</a>
<a href=""mailto:rev.j.ackm.o.rg.a.n@gmail.com"">rev.j.ackm.o.rg.a.n@gmail.com</a>
<a href=""mailto:r.ev.j.ac.k.mo.rgan@gmail.com"">r.ev.j.ac.k.mo.rgan@gmail.com</a>
<a href=""mailto:re.v.j.ack.m.orga.n@gmail.com"">re.v.j.ack.m.orga.n@gmail.com</a>
<a href=""mailto:revja.ck.m.or.g.a.n@gmail.com"">revja.ck.m.or.g.a.n@gmail.com</a>
<a href=""mailto:revj.ackmorgan@gmail.com"">revj.ackmorgan@gmail.com</a>
<a href=""mailto:r.evja.ckm.org.a.n@gmail.com"">r.evja.ckm.org.a.n@gmail.com</a>
<a href=""mailto:r.evj.a.c.km.o.rga.n@gmail.com"">r.evj.a.c.km.o.rga.n@gmail.com</a>
<a href=""mailto:revjac.k.mo.rgan@gmail.com"">revjac.k.mo.rgan@gmail.com</a>
<a href=""mailto:re.v.j.ac.kmo.rg.a.n@gmail.com"">re.v.j.ac.kmo.rg.a.n@gmail.com</a>
<a href=""mailto:re.v.j.ac.k.m.or.g.a.n@gmail.com"">re.v.j.ac.k.m.or.g.a.n@gmail.com</a>
<a href=""mailto:r.e.vj.ac.k.m.or.gan@gmail.com"">r.e.vj.ac.k.m.or.gan@gmail.com</a>
<a href=""mailto:re.vja.ck.m.org.an@gmail.com"">re.vja.ck.m.org.an@gmail.com</a>
<a href=""mailto:r.ev.j.ack.m.orga.n@gmail.com"">r.ev.j.ack.m.orga.n@gmail.com</a>
<a href=""mailto:r.e.vj.a.ck.m.or.g.an@gmail.com"">r.e.vj.a.ck.m.or.g.an@gmail.com</a>
<a href=""mailto:revja.ck.mo.rga.n@gmail.com"">revja.ck.mo.rga.n@gmail.com</a>
<a href=""mailto:r.e.vj.a.c.k.mor.g.an@gmail.com"">r.e.vj.a.c.k.mor.g.an@gmail.com</a>
<a href=""mailto:r.evja.ckm.o.r.g.an@gmail.com"">r.evja.ckm.o.r.g.an@gmail.com</a>
<a href=""mailto:r.e.vj.a.c.km.org.a.n@gmail.com"">r.e.vj.a.c.km.org.a.n@gmail.com</a>
<a href=""mailto:revja.c.k.m.or.g.an@gmail.com"">revja.c.k.m.or.g.an@gmail.com</a>
<a href=""mailto:revj.ackmorg.a.n@gmail.com"">revj.ackmorg.a.n@gmail.com</a>
<a href=""mailto:rev.ja.ckm.o.rga.n@gmail.com"">rev.ja.ckm.o.rga.n@gmail.com</a>
<a href=""mailto:r.e.v.j.ac.k.m.organ@gmail.com"">r.e.v.j.ac.k.m.organ@gmail.com</a>
<a href=""mailto:r.evj.ackmo.rga.n@gmail.com"">r.evj.ackmo.rga.n@gmail.com</a>
<a href=""mailto:revjack.m.or.g.an@gmail.com"">revjack.m.or.g.an@gmail.com</a>
<a href=""mailto:r.ev.j.ack.m.or.ga.n@gmail.com"">r.ev.j.ack.m.or.ga.n@gmail.com</a>
<a href=""mailto:r.evjackm.or.g.a.n@gmail.com"">r.evjackm.or.g.a.n@gmail.com</a>
<a href=""mailto:re.v.j.a.ckm.o.rga.n@gmail.com"">re.v.j.a.ckm.o.rga.n@gmail.com</a>
<a href=""mailto:re.v.jackmo.rg.an@gmail.com"">re.v.jackmo.rg.an@gmail.com</a>
<a href=""mailto:r.ev.jac.km.o.r.g.an@gmail.com"">r.ev.jac.km.o.r.g.an@gmail.com</a>
<a href=""mailto:revj.ackm.or.g.a.n@gmail.com"">revj.ackm.or.g.a.n@gmail.com</a>
<a href=""mailto:r.evj.a.ck.m.o.r.ga.n@gmail.com"">r.evj.a.ck.m.o.r.ga.n@gmail.com</a>
<a href=""mailto:revj.a.ck.m.o.rg.a.n@gmail.com"">revj.a.ck.m.o.rg.a.n@gmail.com</a>
<a href=""mailto:r.ev.ja.ckm.o.rg.a.n@gmail.com"">r.ev.ja.ckm.o.rg.a.n@gmail.com</a>
<a href=""mailto:r.e.vja.c.km.or.ga.n@gmail.com"">r.e.vja.c.km.or.ga.n@gmail.com</a>
<a href=""mailto:revj.ack.mor.g.a.n@gmail.com"">revj.ack.mor.g.a.n@gmail.com</a>
<a href=""mailto:re.vj.a.c.kmo.r.ga.n@gmail.com"">re.vj.a.c.kmo.r.ga.n@gmail.com</a>
<a href=""mailto:re.v.j.a.ck.m.org.a.n@gmail.com"">re.v.j.a.ck.m.org.a.n@gmail.com</a>
<a href=""mailto:r.evja.c.kmor.g.a.n@gmail.com"">r.evja.c.kmor.g.a.n@gmail.com</a>
<a href=""mailto:r.evj.a.ckmor.gan@gmail.com"">r.evj.a.ckmor.gan@gmail.com</a>
<a href=""mailto:r.ev.j.ac.km.o.rgan@gmail.com"">r.ev.j.ac.km.o.rgan@gmail.com</a>
<a href=""mailto:r.evj.ac.kmor.ga.n@gmail.com"">r.evj.ac.kmor.ga.n@gmail.com</a>
<a href=""mailto:r.e.vj.ackmorg.a.n@gmail.com"">r.e.vj.ackmorg.a.n@gmail.com</a>
<a href=""mailto:rev.j.a.ckm.or.gan@gmail.com"">rev.j.a.ckm.or.gan@gmail.com</a>
<a href=""mailto:r.evjackmorga.n@gmail.com"">r.evjackmorga.n@gmail.com</a>
<a href=""mailto:r.e.v.j.a.ckm.o.r.gan@gmail.com"">r.e.v.j.a.ckm.o.r.gan@gmail.com</a>
<a href=""mailto:revj.ack.mo.rgan@gmail.com"">revj.ack.mo.rgan@gmail.com</a>
<a href=""mailto:revj.a.c.k.mor.ga.n@gmail.com"">revj.a.c.k.mor.ga.n@gmail.com</a>
<a href=""mailto:r.e.v.jac.km.o.rg.a.n@gmail.com"">r.e.v.jac.km.o.rg.a.n@gmail.com</a>
<a href=""mailto:r.evjackmo.rg.a.n@gmail.com"">r.evjackmo.rg.a.n@gmail.com</a>
<a href=""mailto:r.e.v.j.ack.morga.n@gmail.com"">r.e.v.j.ack.morga.n@gmail.com</a>
<a href=""mailto:r.ev.j.a.ck.mo.rga.n@gmail.com"">r.ev.j.a.ck.mo.rga.n@gmail.com</a>
<a href=""mailto:r.evj.a.c.k.morg.an@gmail.com"">r.evj.a.c.k.morg.an@gmail.com</a>
<a href=""mailto:r.evj.ackmo.r.g.an@gmail.com"">r.evj.ackmo.r.g.an@gmail.com</a>
<a href=""mailto:r.e.vj.ackm.or.gan@gmail.com"">r.e.vj.ackm.or.gan@gmail.com</a>
<a href=""mailto:revjac.km.or.g.an@gmail.com"">revjac.km.or.g.an@gmail.com</a>
<a href=""mailto:re.v.jac.k.mo.r.gan@gmail.com"">re.v.jac.k.mo.r.gan@gmail.com</a>
<a href=""mailto:r.ev.j.a.ckm.orga.n@gmail.com"">r.ev.j.a.ckm.orga.n@gmail.com</a>
<a href=""mailto:r.evj.a.c.kmorg.an@gmail.com"">r.evj.a.c.kmorg.an@gmail.com</a>
<a href=""mailto:re.vj.ac.k.m.org.a.n@gmail.com"">re.vj.ac.k.m.org.a.n@gmail.com</a>
<a href=""mailto:re.v.j.ac.kmo.r.g.a.n@gmail.com"">re.v.j.ac.kmo.r.g.a.n@gmail.com</a>
<a href=""mailto:revj.a.c.k.m.or.g.an@gmail.com"">revj.a.c.k.m.or.g.an@gmail.com</a>
<a href=""mailto:revja.c.kmo.rgan@gmail.com"">revja.c.kmo.rgan@gmail.com</a>
<a href=""mailto:revj.a.c.k.m.o.rg.an@gmail.com"">revj.a.c.k.m.o.rg.an@gmail.com</a>
<a href=""mailto:r.evj.a.c.k.m.or.g.an@gmail.com"">r.evj.a.c.k.m.or.g.an@gmail.com</a>
<a href=""mailto:r.e.vj.ack.m.o.r.g.a.n@gmail.com"">r.e.vj.ack.m.o.r.g.a.n@gmail.com</a>
<a href=""mailto:r.ev.ja.ckm.o.r.gan@gmail.com"">r.ev.ja.ckm.o.r.gan@gmail.com</a>
<a href=""mailto:r.e.v.j.a.c.kmor.g.an@gmail.com"">r.e.v.j.a.c.kmor.g.an@gmail.com</a>
<a href=""mailto:r.ev.ja.c.kmorg.a.n@gmail.com"">r.ev.ja.c.kmorg.a.n@gmail.com</a>
<a href=""mailto:r.ev.j.ac.kmo.rgan@gmail.com"">r.ev.j.ac.kmo.rgan@gmail.com</a>
<a href=""mailto:r.ev.j.ac.kmo.rg.a.n@gmail.com"">r.ev.j.ac.kmo.rg.a.n@gmail.com</a>
<a href=""mailto:r.e.v.j.a.c.k.morg.an@gmail.com"">r.e.v.j.a.c.k.morg.an@gmail.com</a>
<a href=""mailto:r.ev.j.a.ck.mor.gan@gmail.com"">r.ev.j.a.ck.mor.gan@gmail.com</a>
<a href=""mailto:revj.a.c.km.o.r.g.an@gmail.com"">revj.a.c.km.o.r.g.an@gmail.com</a>
<a href=""mailto:r.e.vja.c.kmor.g.an@gmail.com"">r.e.vja.c.kmor.g.an@gmail.com</a>
<a href=""mailto:r.e.v.j.ac.km.org.an@gmail.com"">r.e.v.j.ac.km.org.an@gmail.com</a>
<a href=""mailto:revj.ackm.o.r.g.a.n@gmail.com"">revj.ackm.o.r.g.a.n@gmail.com</a>
<a href=""mailto:re.vjackmor.ga.n@gmail.com"">re.vjackmor.ga.n@gmail.com</a>
<a href=""mailto:r.e.vj.a.c.km.o.r.g.an@gmail.com"">r.e.vj.a.c.km.o.r.g.an@gmail.com</a>
<a href=""mailto:revja.c.km.or.g.an@gmail.com"">revja.c.km.or.g.an@gmail.com</a>
<a href=""mailto:r.evja.ck.mor.ga.n@gmail.com"">r.evja.ck.mor.ga.n@gmail.com</a>
<a href=""mailto:re.vj.a.c.kmorgan@gmail.com"">re.vj.a.c.kmorgan@gmail.com</a>
<a href=""mailto:revja.ckm.o.rg.an@gmail.com"">revja.ckm.o.rg.an@gmail.com</a>
<a href=""mailto:r.evjack.m.or.gan@gmail.com"">r.evjack.m.or.gan@gmail.com</a>
<a href=""mailto:re.v.jac.k.m.o.r.gan@gmail.com"">re.v.jac.k.m.o.r.gan@gmail.com</a>
<a href=""mailto:r.e.v.j.a.c.kmo.rga.n@gmail.com"">r.e.v.j.a.c.kmo.rga.n@gmail.com</a>
<a href=""mailto:re.vj.a.c.k.mo.r.ga.n@gmail.com"">re.vj.a.c.k.mo.r.ga.n@gmail.com</a>
<a href=""mailto:re.v.ja.c.km.or.g.an@gmail.com"">re.v.ja.c.km.or.g.an@gmail.com</a>
<a href=""mailto:r.evjackmorg.an@gmail.com"">r.evjackmorg.an@gmail.com</a>
<a href=""mailto:r.evj.ac.kmo.rg.a.n@gmail.com"">r.evj.ac.kmo.rg.a.n@gmail.com</a>
<a href=""mailto:r.e.vj.a.ck.m.or.g.a.n@gmail.com"">r.e.vj.a.ck.m.or.g.a.n@gmail.com</a>
<a href=""mailto:r.e.vj.ac.k.m.or.g.a.n@gmail.com"">r.e.vj.ac.k.m.or.g.a.n@gmail.com</a>
<a href=""mailto:re.v.jac.k.m.or.gan@gmail.com"">re.v.jac.k.m.or.gan@gmail.com</a>
<a href=""mailto:rev.j.a.c.k.mo.rg.a.n@gmail.com"">rev.j.a.c.k.mo.rg.a.n@gmail.com</a>
<a href=""mailto:r.ev.j.a.c.km.o.rg.an@gmail.com"">r.ev.j.a.c.km.o.rg.an@gmail.com</a>
<a href=""mailto:r.evjac.k.mor.g.a.n@gmail.com"">r.evjac.k.mor.g.a.n@gmail.com</a>
<a href=""mailto:rev.ja.c.kmorga.n@gmail.com"">rev.ja.c.kmorga.n@gmail.com</a>
<a href=""mailto:rev.jac.k.mor.ga.n@gmail.com"">rev.jac.k.mor.ga.n@gmail.com</a>
<a href=""mailto:r.ev.j.a.c.k.mor.gan@gmail.com"">r.ev.j.a.c.k.mor.gan@gmail.com</a>
<a href=""mailto:r.e.v.j.a.c.k.m.or.g.an@gmail.com"">r.e.v.j.a.c.k.m.or.g.an@gmail.com</a>
<a href=""mailto:r.ev.j.ackm.or.g.an@gmail.com"">r.ev.j.ackm.or.g.an@gmail.com</a>
<a href=""mailto:r.evja.c.km.o.r.ga.n@gmail.com"">r.evja.c.km.o.r.ga.n@gmail.com</a>
<a href=""mailto:re.v.j.ack.m.o.rgan@gmail.com"">re.v.j.ack.m.o.rgan@gmail.com</a>
<a href=""mailto:r.ev.ja.c.k.m.o.r.g.an@gmail.com"">r.ev.ja.c.k.m.o.r.g.an@gmail.com</a>
<a href=""mailto:re.v.jack.mo.rga.n@gmail.com"">re.v.jack.mo.rga.n@gmail.com</a>
<a href=""mailto:revjac.k.m.organ@gmail.com"">revjac.k.m.organ@gmail.com</a>
<a href=""mailto:r.ev.j.ac.k.m.orga.n@gmail.com"">r.ev.j.ac.k.m.orga.n@gmail.com</a>
<a href=""mailto:r.evja.c.km.or.g.an@gmail.com"">r.evja.c.km.or.g.an@gmail.com</a>
<a href=""mailto:revjac.kmorg.an@gmail.com"">revjac.kmorg.an@gmail.com</a>
<a href=""mailto:revj.a.c.kmorg.an@gmail.com"">revj.a.c.kmorg.an@gmail.com</a>
<a href=""mailto:r.e.vj.a.c.km.or.g.a.n@gmail.com"">r.e.vj.a.c.km.or.g.a.n@gmail.com</a>
<a href=""mailto:re.vja.c.kmorg.a.n@gmail.com"">re.vja.c.kmorg.a.n@gmail.com</a>
<a href=""mailto:revjac.km.org.a.n@gmail.com"">revjac.km.org.a.n@gmail.com</a>
<a href=""mailto:r.evj.a.c.k.m.or.gan@gmail.com"">r.evj.a.c.k.m.or.gan@gmail.com</a>
<a href=""mailto:r.e.v.j.a.c.k.m.or.gan@gmail.com"">r.e.v.j.a.c.k.m.or.gan@gmail.com</a>
<a href=""mailto:r.e.vjac.kmor.g.a.n@gmail.com"">r.e.vjac.kmor.g.a.n@gmail.com</a>
<a href=""mailto:r.ev.jackmo.r.gan@gmail.com"">r.ev.jackmo.r.gan@gmail.com</a>
<a href=""mailto:r.ev.jac.k.m.o.r.g.an@gmail.com"">r.ev.jac.k.m.o.r.g.an@gmail.com</a>
<a href=""mailto:re.v.j.a.c.km.or.ga.n@gmail.com"">re.v.j.a.c.km.or.ga.n@gmail.com</a>
<a href=""mailto:r.e.v.ja.c.kmorg.an@gmail.com"">r.e.v.ja.c.kmorg.an@gmail.com</a>
<a href=""mailto:r.evjac.k.m.o.r.g.a.n@gmail.com"">r.evjac.k.m.o.r.g.a.n@gmail.com</a>
<a href=""mailto:re.v.j.ac.k.m.o.rg.an@gmail.com"">re.v.j.ac.k.m.o.rg.an@gmail.com</a>
<a href=""mailto:r.e.vj.a.ck.m.o.rg.an@gmail.com"">r.e.vj.a.ck.m.o.rg.an@gmail.com</a>
<a href=""mailto:r.ev.ja.ck.m.o.r.g.a.n@gmail.com"">r.ev.ja.ck.m.o.r.g.a.n@gmail.com</a>
<a href=""mailto:r.ev.jac.kmorg.a.n@gmail.com"">r.ev.jac.kmorg.a.n@gmail.com</a>
<a href=""mailto:r.e.vjac.k.m.or.g.a.n@gmail.com"">r.e.vjac.k.m.or.g.a.n@gmail.com</a>
<a href=""mailto:re.v.ja.ck.morgan@gmail.com"">re.v.ja.ck.morgan@gmail.com</a>
<a href=""mailto:re.vja.ck.morgan@gmail.com"">re.vja.ck.morgan@gmail.com</a>
<a href=""mailto:r.e.v.ja.ck.morg.a.n@gmail.com"">r.e.v.ja.ck.morg.a.n@gmail.com</a>
<a href=""mailto:r.ev.j.a.ck.m.o.r.g.an@gmail.com"">r.ev.j.a.ck.m.o.r.g.an@gmail.com</a>
<a href=""mailto:r.ev.jackmo.rg.an@gmail.com"">r.ev.jackmo.rg.an@gmail.com</a>
<a href=""mailto:r.e.vjackmorg.a.n@gmail.com"">r.e.vjackmorg.a.n@gmail.com</a>
<a href=""mailto:r.ev.ja.ck.mo.r.g.a.n@gmail.com"">r.ev.ja.ck.mo.r.g.a.n@gmail.com</a>
<a href=""mailto:r.ev.j.a.c.km.org.an@gmail.com"">r.ev.j.a.c.km.org.an@gmail.com</a>
<a href=""mailto:re.vjac.k.m.or.ga.n@gmail.com"">re.vjac.k.m.or.ga.n@gmail.com</a>
<a href=""mailto:rev.jac.k.mo.rg.an@gmail.com"">rev.jac.k.mo.rg.an@gmail.com</a>
<a href=""mailto:r.e.vja.c.k.mo.r.g.a.n@gmail.com"">r.e.vja.c.k.mo.r.g.a.n@gmail.com</a>
<a href=""mailto:rev.jackm.org.a.n@gmail.com"">rev.jackm.org.a.n@gmail.com</a>
<a href=""mailto:r.ev.j.a.ckmo.r.gan@gmail.com"">r.ev.j.a.ckmo.r.gan@gmail.com</a>
<a href=""mailto:r.e.vj.a.ckm.o.rga.n@gmail.com"">r.e.vj.a.ckm.o.rga.n@gmail.com</a>
<a href=""mailto:rev.ja.ck.morg.an@gmail.com"">rev.ja.ck.morg.an@gmail.com</a>
<a href=""mailto:bayportfinance33@gmail.com"">bayportfinance33@gmail.com</a>
<a href=""mailto:ba.yp.o.rtf.in.anc.e3.3@gmail.com"">ba.yp.o.rtf.in.anc.e3.3@gmail.com</a>
<a href=""mailto:b.a.ypor.tf.i.na.nc.e.33@gmail.com"">b.a.ypor.tf.i.na.nc.e.33@gmail.com</a>
<a href=""mailto:ba.y.po.r.t.fi.n.a.nc.e3.3@gmail.com"">ba.y.po.r.t.fi.n.a.nc.e3.3@gmail.com</a>
<a href=""mailto:ba.y.por.tf.i.na.nce3.3@gmail.com"">ba.y.por.tf.i.na.nce3.3@gmail.com</a>
<a href=""mailto:ba.y.p.ortfina.nce33@gmail.com"">ba.y.p.ortfina.nce33@gmail.com</a>
<a href=""mailto:b.a.yp.ortfi.nan.c.e3.3@gmail.com"">b.a.yp.ortfi.nan.c.e3.3@gmail.com</a>
<a href=""mailto:bayport.finan.c.e3.3@gmail.com"">bayport.finan.c.e3.3@gmail.com</a>
<a href=""mailto:bayp.o.r.tfina.n.ce3.3@gmail.com"">bayp.o.r.tfina.n.ce3.3@gmail.com</a>
<a href=""mailto:ba.y.p.ortfin.a.n.ce33@gmail.com"">ba.y.p.ortfin.a.n.ce33@gmail.com</a>
<a href=""mailto:b.a.y.p.ortf.inan.ce33@gmail.com"">b.a.y.p.ortf.inan.ce33@gmail.com</a>
<a href=""mailto:b.ayp.or.tf.i.nan.ce.33@gmail.com"">b.ayp.or.tf.i.nan.ce.33@gmail.com</a>
<a href=""mailto:b.a.yp.or.tfin.ance.33@gmail.com"">b.a.yp.or.tfin.ance.33@gmail.com</a>
<a href=""mailto:ba.yp.o.r.t.f.inance.33@gmail.com"">ba.yp.o.r.t.f.inance.33@gmail.com</a>
<a href=""mailto:b.ay.p.ortf.i.nan.c.e.33@gmail.com"">b.ay.p.ortf.i.nan.c.e.33@gmail.com</a>
<a href=""mailto:b.a.ypo.r.t.fina.n.c.e33@gmail.com"">b.a.ypo.r.t.fina.n.c.e33@gmail.com</a>
<a href=""mailto:b.a.y.po.rt.f.i.na.nc.e.33@gmail.com"">b.a.y.po.rt.f.i.na.nc.e.33@gmail.com</a>
<a href=""mailto:b.aypor.t.fi.nance33@gmail.com"">b.aypor.t.fi.nance33@gmail.com</a>
<a href=""mailto:bayp.o.rt.f.i.nan.c.e33@gmail.com"">bayp.o.rt.f.i.nan.c.e33@gmail.com</a>
<a href=""mailto:b.a.ypor.t.financ.e.3.3@gmail.com"">b.a.ypor.t.financ.e.3.3@gmail.com</a>
<a href=""mailto:bay.p.or.tfinan.ce.33@gmail.com"">bay.p.or.tfinan.ce.33@gmail.com</a>
<a href=""mailto:ba.yport.f.in.a.n.c.e.3.3@gmail.com"">ba.yport.f.in.a.n.c.e.3.3@gmail.com</a>
<a href=""mailto:ba.y.po.rtf.ina.nce3.3@gmail.com"">ba.y.po.rtf.ina.nce3.3@gmail.com</a>
<a href=""mailto:b.a.yp.ort.f.ina.n.ce3.3@gmail.com"">b.a.yp.ort.f.ina.n.ce3.3@gmail.com</a>
<a href=""mailto:b.aypor.tf.in.a.nc.e.3.3@gmail.com"">b.aypor.tf.in.a.nc.e.3.3@gmail.com</a>
<a href=""mailto:ba.y.po.r.t.f.ina.n.ce3.3@gmail.com"">ba.y.po.r.t.f.ina.n.ce3.3@gmail.com</a>
<a href=""mailto:ba.y.por.t.fi.n.anc.e.3.3@gmail.com"">ba.y.por.t.fi.n.anc.e.3.3@gmail.com</a>
<a href=""mailto:ba.y.por.t.f.in.a.nc.e33@gmail.com"">ba.y.por.t.f.in.a.nc.e33@gmail.com</a>
<a href=""mailto:bayp.o.r.t.f.in.a.n.c.e3.3@gmail.com"">bayp.o.r.t.f.in.a.n.c.e3.3@gmail.com</a>
<a href=""mailto:b.a.y.por.t.f.ina.nc.e.33@gmail.com"">b.a.y.por.t.f.ina.nc.e.33@gmail.com</a>
<a href=""mailto:b.a.y.por.tf.inanc.e.3.3@gmail.com"">b.a.y.por.tf.inanc.e.3.3@gmail.com</a>
<a href=""mailto:baypo.rtf.inance33@gmail.com"">baypo.rtf.inance33@gmail.com</a>
<a href=""mailto:b.ay.p.or.t.fin.ance.3.3@gmail.com"">b.ay.p.or.t.fin.ance.3.3@gmail.com</a>
<a href=""mailto:ba.ypo.rt.f.in.a.nce.3.3@gmail.com"">ba.ypo.rt.f.in.a.nce.3.3@gmail.com</a>
<a href=""mailto:baypo.rt.f.i.nanc.e33@gmail.com"">baypo.rt.f.i.nanc.e33@gmail.com</a>
<a href=""mailto:bay.po.rtfi.na.nce3.3@gmail.com"">bay.po.rtfi.na.nce3.3@gmail.com</a>
<a href=""mailto:b.aypo.r.t.fin.a.n.ce33@gmail.com"">b.aypo.r.t.fin.a.n.ce33@gmail.com</a>
<a href=""mailto:b.a.y.p.o.r.t.f.in.an.ce.33@gmail.com"">b.a.y.p.o.r.t.f.in.an.ce.33@gmail.com</a>
<a href=""mailto:ba.ypo.rt.fi.n.ance3.3@gmail.com"">ba.ypo.rt.fi.n.ance3.3@gmail.com</a>
<a href=""mailto:b.ay.p.o.rt.fin.a.n.ce.3.3@gmail.com"">b.ay.p.o.rt.fin.a.n.ce.3.3@gmail.com</a>
<a href=""mailto:b.ay.port.fi.n.ance.33@gmail.com"">b.ay.port.fi.n.ance.33@gmail.com</a>
<a href=""mailto:b.aypo.r.tf.ina.nc.e.3.3@gmail.com"">b.aypo.r.tf.ina.nc.e.3.3@gmail.com</a>
<a href=""mailto:b.a.ypo.rt.f.i.n.an.c.e33@gmail.com"">b.a.ypo.rt.f.i.n.an.c.e33@gmail.com</a>
<a href=""mailto:baypor.t.fina.n.c.e3.3@gmail.com"">baypor.t.fina.n.c.e3.3@gmail.com</a>
<a href=""mailto:b.a.y.p.o.rtf.i.nan.c.e.33@gmail.com"">b.a.y.p.o.rtf.i.nan.c.e.33@gmail.com</a>
<a href=""mailto:bayp.o.rtfin.a.nc.e.33@gmail.com"">bayp.o.rtfin.a.nc.e.33@gmail.com</a>
<a href=""mailto:b.a.y.p.o.rt.finan.c.e.3.3@gmail.com"">b.a.y.p.o.rt.finan.c.e.3.3@gmail.com</a>
<a href=""mailto:b.a.y.p.or.tfinan.ce.3.3@gmail.com"">b.a.y.p.or.tfinan.ce.3.3@gmail.com</a>
<a href=""mailto:b.a.yp.o.rt.f.i.n.an.ce3.3@gmail.com"">b.a.yp.o.rt.f.i.n.an.ce3.3@gmail.com</a>
<a href=""mailto:ba.y.por.tfi.n.a.n.ce.33@gmail.com"">ba.y.por.tfi.n.a.n.ce.33@gmail.com</a>
<a href=""mailto:ba.ypo.r.tf.ina.n.ce.33@gmail.com"">ba.ypo.r.tf.ina.n.ce.33@gmail.com</a>
<a href=""mailto:bayportfi.n.anc.e.3.3@gmail.com"">bayportfi.n.anc.e.3.3@gmail.com</a>
<a href=""mailto:bayp.o.rt.f.i.na.nc.e33@gmail.com"">bayp.o.rt.f.i.na.nc.e33@gmail.com</a>
<a href=""mailto:b.ay.p.o.r.tf.inanc.e33@gmail.com"">b.ay.p.o.r.tf.inanc.e33@gmail.com</a>
<a href=""mailto:bayp.ortfin.an.c.e.33@gmail.com"">bayp.ortfin.an.c.e.33@gmail.com</a>
<a href=""mailto:bayp.o.r.tfin.anc.e3.3@gmail.com"">bayp.o.r.tfin.anc.e3.3@gmail.com</a>
<a href=""mailto:bay.port.f.in.a.n.ce.3.3@gmail.com"">bay.port.f.in.a.n.ce.3.3@gmail.com</a>
<a href=""mailto:ba.yport.f.i.na.nc.e3.3@gmail.com"">ba.yport.f.i.na.nc.e3.3@gmail.com</a>
<a href=""mailto:bayp.or.tfinanc.e33@gmail.com"">bayp.or.tfinanc.e33@gmail.com</a>
<a href=""mailto:b.ay.por.t.fi.n.anc.e.3.3@gmail.com"">b.ay.por.t.fi.n.anc.e.3.3@gmail.com</a>
<a href=""mailto:bay.po.rtfin.a.n.ce.33@gmail.com"">bay.po.rtfin.a.n.ce.33@gmail.com</a>
<a href=""mailto:bayp.o.rt.fi.na.n.c.e.33@gmail.com"">bayp.o.rt.fi.na.n.c.e.33@gmail.com</a>
<a href=""mailto:b.a.yp.ort.fi.n.a.n.ce.33@gmail.com"">b.a.yp.ort.fi.n.a.n.ce.33@gmail.com</a>
<a href=""mailto:b.a.yp.ortfinanc.e.3.3@gmail.com"">b.a.yp.ortfinanc.e.3.3@gmail.com</a>
<a href=""mailto:b.a.y.por.tfi.nanc.e.3.3@gmail.com"">b.a.y.por.tfi.nanc.e.3.3@gmail.com</a>
<a href=""mailto:ba.y.po.r.tfi.n.an.ce.3.3@gmail.com"">ba.y.po.r.tfi.n.an.ce.3.3@gmail.com</a>
<a href=""mailto:b.ayp.o.rtfi.n.a.nce3.3@gmail.com"">b.ayp.o.rtfi.n.a.nce3.3@gmail.com</a>
<a href=""mailto:baypo.rtf.i.n.a.nc.e.3.3@gmail.com"">baypo.rtf.i.n.a.nc.e.3.3@gmail.com</a>
<a href=""mailto:bayp.o.rtfi.na.nc.e3.3@gmail.com"">bayp.o.rtfi.na.nc.e3.3@gmail.com</a>
<a href=""mailto:ba.yp.or.tf.in.an.ce3.3@gmail.com"">ba.yp.or.tf.in.an.ce3.3@gmail.com</a>
<a href=""mailto:b.a.yp.o.rtfi.nanc.e.3.3@gmail.com"">b.a.yp.o.rtfi.nanc.e.3.3@gmail.com</a>
<a href=""mailto:bay.p.o.r.t.f.i.n.ance33@gmail.com"">bay.p.o.r.t.f.i.n.ance33@gmail.com</a>
<a href=""mailto:ba.y.po.rtf.in.a.n.ce.33@gmail.com"">ba.y.po.rtf.in.a.n.ce.33@gmail.com</a>
<a href=""mailto:b.ayportfi.nance.33@gmail.com"">b.ayportfi.nance.33@gmail.com</a>
<a href=""mailto:ba.y.po.r.t.fin.ance3.3@gmail.com"">ba.y.po.r.t.fin.ance3.3@gmail.com</a>
<a href=""mailto:b.ayp.o.rtf.in.ance3.3@gmail.com"">b.ayp.o.rtf.in.ance3.3@gmail.com</a>
<a href=""mailto:b.a.yp.o.r.t.fi.nan.ce3.3@gmail.com"">b.a.yp.o.r.t.fi.nan.ce3.3@gmail.com</a>
<a href=""mailto:b.a.y.po.r.t.fin.a.n.c.e.33@gmail.com"">b.a.y.po.r.t.fin.a.n.c.e.33@gmail.com</a>
<a href=""mailto:ba.y.p.ortfin.an.c.e33@gmail.com"">ba.y.p.ortfin.an.c.e33@gmail.com</a>
<a href=""mailto:baypo.r.t.f.in.anc.e.3.3@gmail.com"">baypo.r.t.f.in.anc.e.3.3@gmail.com</a>
<a href=""mailto:b.aypo.rt.f.i.na.nc.e33@gmail.com"">b.aypo.rt.f.i.na.nc.e33@gmail.com</a>
<a href=""mailto:baypo.r.t.fi.n.anc.e.3.3@gmail.com"">baypo.r.t.fi.n.anc.e.3.3@gmail.com</a>
<a href=""mailto:ba.yp.o.r.tfin.a.nc.e3.3@gmail.com"">ba.yp.o.r.tfin.a.nc.e3.3@gmail.com</a>
<a href=""mailto:b.a.y.po.r.t.f.i.nance.33@gmail.com"">b.a.y.po.r.t.f.i.nance.33@gmail.com</a>
<a href=""mailto:baypor.tfi.n.anc.e33@gmail.com"">baypor.tfi.n.anc.e33@gmail.com</a>
<a href=""mailto:b.a.y.po.r.t.fi.n.anc.e.3.3@gmail.com"">b.a.y.po.r.t.fi.n.anc.e.3.3@gmail.com</a>
<a href=""mailto:b.a.y.po.r.tfin.a.n.c.e33@gmail.com"">b.a.y.po.r.tfin.a.n.c.e33@gmail.com</a>
<a href=""mailto:b.a.ypo.r.t.fin.a.nce.3.3@gmail.com"">b.a.ypo.r.t.fin.a.nce.3.3@gmail.com</a>
<a href=""mailto:bayp.o.rt.fi.n.an.ce.33@gmail.com"">bayp.o.rt.fi.n.an.ce.33@gmail.com</a>
<a href=""mailto:bay.p.o.rtfi.nan.c.e.3.3@gmail.com"">bay.p.o.rtfi.nan.c.e.3.3@gmail.com</a>
<a href=""mailto:baypo.rtf.i.n.a.n.ce3.3@gmail.com"">baypo.rtf.i.n.a.n.ce3.3@gmail.com</a>
<a href=""mailto:bay.p.or.tf.i.n.a.n.ce3.3@gmail.com"">bay.p.or.tf.i.n.a.n.ce3.3@gmail.com</a>
<a href=""mailto:b.ayp.o.rt.f.i.n.ance3.3@gmail.com"">b.ayp.o.rt.f.i.n.ance3.3@gmail.com</a>
<a href=""mailto:b.ay.port.finan.c.e3.3@gmail.com"">b.ay.port.finan.c.e3.3@gmail.com</a>
<a href=""mailto:b.aypo.r.t.fi.n.an.c.e33@gmail.com"">b.aypo.r.t.fi.n.an.c.e33@gmail.com</a>
<a href=""mailto:bay.p.ortfi.n.a.n.c.e3.3@gmail.com"">bay.p.ortfi.n.a.n.c.e3.3@gmail.com</a>
<a href=""mailto:b.a.yp.o.rtfina.nc.e.33@gmail.com"">b.a.yp.o.rtfina.nc.e.33@gmail.com</a>
<a href=""mailto:b.a.y.po.rtf.i.nan.ce.33@gmail.com"">b.a.y.po.rtf.i.nan.ce.33@gmail.com</a>
<a href=""mailto:ba.y.po.r.t.f.in.ance33@gmail.com"">ba.y.po.r.t.f.in.ance33@gmail.com</a>
<a href=""mailto:ba.y.port.fin.anc.e33@gmail.com"">ba.y.port.fin.anc.e33@gmail.com</a>
<a href=""mailto:bayp.o.r.tfin.a.nc.e3.3@gmail.com"">bayp.o.r.tfin.a.nc.e3.3@gmail.com</a>
<a href=""mailto:b.ay.po.rtf.ina.nc.e33@gmail.com"">b.ay.po.rtf.ina.nc.e33@gmail.com</a>
<a href=""mailto:ba.y.po.r.tf.in.a.n.c.e.33@gmail.com"">ba.y.po.r.tf.in.a.n.c.e.33@gmail.com</a>
<a href=""mailto:baypor.t.f.in.an.ce3.3@gmail.com"">baypor.t.f.in.an.ce3.3@gmail.com</a>
<a href=""mailto:b.a.y.p.or.tfi.n.an.ce3.3@gmail.com"">b.a.y.p.or.tfi.n.an.ce3.3@gmail.com</a>
<a href=""mailto:bayportf.in.a.n.c.e.33@gmail.com"">bayportf.in.a.n.c.e.33@gmail.com</a>
<a href=""mailto:bay.port.fin.anc.e33@gmail.com"">bay.port.fin.anc.e33@gmail.com</a>
<a href=""mailto:b.a.y.p.o.rt.f.i.nanc.e33@gmail.com"">b.a.y.p.o.rt.f.i.nanc.e33@gmail.com</a>
<a href=""mailto:b.a.y.por.t.fin.a.nc.e.3.3@gmail.com"">b.a.y.por.t.fin.a.nc.e.3.3@gmail.com</a>
<a href=""mailto:b.a.y.po.r.tf.i.na.n.c.e33@gmail.com"">b.a.y.po.r.tf.i.na.n.c.e33@gmail.com</a>
<a href=""mailto:ba.y.p.ortfin.ance.33@gmail.com"">ba.y.p.ortfin.ance.33@gmail.com</a>
<a href=""mailto:b.a.y.p.o.r.tfina.nc.e3.3@gmail.com"">b.a.y.p.o.r.tfina.nc.e3.3@gmail.com</a>
<a href=""mailto:baypor.t.finan.c.e.3.3@gmail.com"">baypor.t.finan.c.e.3.3@gmail.com</a>
<a href=""mailto:ba.y.p.o.r.tfi.n.an.ce3.3@gmail.com"">ba.y.p.o.r.tfi.n.an.ce3.3@gmail.com</a>
<a href=""mailto:bayp.ort.f.inance33@gmail.com"">bayp.ort.f.inance33@gmail.com</a>
<a href=""mailto:ba.y.p.o.r.tfi.nan.ce.33@gmail.com"">ba.y.p.o.r.tfi.nan.ce.33@gmail.com</a>
<a href=""mailto:b.ayp.or.tf.i.na.n.ce3.3@gmail.com"">b.ayp.or.tf.i.na.n.ce3.3@gmail.com</a>
<a href=""mailto:ba.ypo.r.t.f.i.n.anc.e.3.3@gmail.com"">ba.ypo.r.t.f.i.n.anc.e.3.3@gmail.com</a>
<a href=""mailto:b.a.y.p.o.rt.fi.n.a.n.c.e33@gmail.com"">b.a.y.p.o.rt.fi.n.a.n.c.e33@gmail.com</a>
<a href=""mailto:b.ayport.fin.anc.e33@gmail.com"">b.ayport.fin.anc.e33@gmail.com</a>
<a href=""mailto:ba.ypo.rt.fi.nan.ce3.3@gmail.com"">ba.ypo.rt.fi.nan.ce3.3@gmail.com</a>
<a href=""mailto:bay.port.f.in.a.nc.e.33@gmail.com"">bay.port.f.in.a.nc.e.33@gmail.com</a>
<a href=""mailto:b.a.y.p.o.r.tfi.nan.c.e.33@gmail.com"">b.a.y.p.o.r.tfi.nan.c.e.33@gmail.com</a>
<a href=""mailto:b.a.y.po.rtf.i.nan.ce33@gmail.com"">b.a.y.po.rtf.i.nan.ce33@gmail.com</a>
<a href=""mailto:ba.ypo.r.t.fi.n.anc.e3.3@gmail.com"">ba.ypo.r.t.fi.n.anc.e3.3@gmail.com</a>
<a href=""mailto:ba.y.por.tfi.nanc.e.3.3@gmail.com"">ba.y.por.tfi.nanc.e.3.3@gmail.com</a>
<a href=""mailto:bay.p.o.rt.f.in.ance.3.3@gmail.com"">bay.p.o.rt.f.in.ance.3.3@gmail.com</a>
<a href=""mailto:b.a.y.p.o.rtfin.a.n.ce.3.3@gmail.com"">b.a.y.p.o.rtfin.a.n.ce.3.3@gmail.com</a>
<a href=""mailto:ba.y.p.ortfi.n.an.ce3.3@gmail.com"">ba.y.p.ortfi.n.an.ce3.3@gmail.com</a>
<a href=""mailto:b.ay.p.o.rtfin.an.c.e.3.3@gmail.com"">b.ay.p.o.rtfin.an.c.e.3.3@gmail.com</a>
<a href=""mailto:ba.ypo.rt.f.inan.c.e.33@gmail.com"">ba.ypo.rt.f.inan.c.e.33@gmail.com</a>
<a href=""mailto:ba.yp.or.t.fi.na.nc.e.3.3@gmail.com"">ba.yp.or.t.fi.na.nc.e.3.3@gmail.com</a>
<a href=""mailto:bay.po.r.tfin.ance.3.3@gmail.com"">bay.po.r.tfin.ance.3.3@gmail.com</a>
<a href=""mailto:b.ayportfinan.c.e33@gmail.com"">b.ayportfinan.c.e33@gmail.com</a>
<a href=""mailto:b.ay.por.tf.i.n.a.nc.e.3.3@gmail.com"">b.ay.por.tf.i.n.a.nc.e.3.3@gmail.com</a>
<a href=""mailto:b.ay.po.r.tf.i.n.ance33@gmail.com"">b.ay.po.r.tf.i.n.ance33@gmail.com</a>
<a href=""mailto:ba.y.port.f.ina.n.ce.33@gmail.com"">ba.y.port.f.ina.n.ce.33@gmail.com</a>
<a href=""mailto:b.a.y.p.or.tf.i.n.a.nce3.3@gmail.com"">b.a.y.p.or.tf.i.n.a.nce3.3@gmail.com</a>
<a href=""mailto:ba.yport.f.i.nance3.3@gmail.com"">ba.yport.f.i.nance3.3@gmail.com</a>
<a href=""mailto:b.ay.por.t.fi.nance.3.3@gmail.com"">b.ay.por.t.fi.nance.3.3@gmail.com</a>
<a href=""mailto:b.ayp.ort.f.inance.3.3@gmail.com"">b.ayp.ort.f.inance.3.3@gmail.com</a>
<a href=""mailto:b.ay.p.o.r.tf.in.a.n.c.e.33@gmail.com"">b.ay.p.o.r.tf.in.a.n.c.e.33@gmail.com</a>
<a href=""mailto:b.a.y.p.ort.f.i.na.nce3.3@gmail.com"">b.a.y.p.ort.f.i.na.nce3.3@gmail.com</a>
<a href=""mailto:baypo.rt.fi.nan.c.e3.3@gmail.com"">baypo.rt.fi.nan.c.e3.3@gmail.com</a>
<a href=""mailto:b.a.yp.ort.fi.n.an.ce33@gmail.com"">b.a.yp.ort.fi.n.an.ce33@gmail.com</a>
<a href=""mailto:bayportf.in.anc.e33@gmail.com"">bayportf.in.anc.e33@gmail.com</a>
<a href=""mailto:b.ayp.o.rtfin.a.nce.3.3@gmail.com"">b.ayp.o.rtfin.a.nce.3.3@gmail.com</a>
<a href=""mailto:b.a.yp.o.rtfi.n.a.nce.33@gmail.com"">b.a.yp.o.rtfi.n.a.nce.33@gmail.com</a>
<a href=""mailto:ba.y.p.ortfinanc.e.3.3@gmail.com"">ba.y.p.ortfinanc.e.3.3@gmail.com</a>
<a href=""mailto:ba.y.p.o.rt.fi.n.an.c.e.3.3@gmail.com"">ba.y.p.o.rt.fi.n.an.c.e.3.3@gmail.com</a>
<a href=""mailto:ba.ypor.tfi.nan.ce3.3@gmail.com"">ba.ypor.tfi.nan.ce3.3@gmail.com</a>
<a href=""mailto:bay.p.o.rtf.i.na.n.c.e.3.3@gmail.com"">bay.p.o.rtf.i.na.n.c.e.3.3@gmail.com</a>
<a href=""mailto:b.ayp.o.rtf.i.nan.c.e3.3@gmail.com"">b.ayp.o.rtf.i.nan.c.e3.3@gmail.com</a>
<a href=""mailto:bayportf.i.na.nce3.3@gmail.com"">bayportf.i.na.nce3.3@gmail.com</a>
<a href=""mailto:baypo.r.t.fi.na.n.ce3.3@gmail.com"">baypo.r.t.fi.na.n.ce3.3@gmail.com</a>
<a href=""mailto:b.ayp.o.rt.f.i.n.a.nce.33@gmail.com"">b.ayp.o.rt.f.i.n.a.nce.33@gmail.com</a>
<a href=""mailto:ba.yp.ort.fi.na.n.c.e.3.3@gmail.com"">ba.yp.ort.fi.na.n.c.e.3.3@gmail.com</a>
<a href=""mailto:b.a.yp.o.rt.fina.nce.33@gmail.com"">b.a.yp.o.rt.fina.nce.33@gmail.com</a>
<a href=""mailto:b.a.y.po.r.t.f.i.n.an.ce.33@gmail.com"">b.a.y.po.r.t.f.i.n.an.ce.33@gmail.com</a>
<a href=""mailto:ba.ypo.rt.fi.na.nc.e.33@gmail.com"">ba.ypo.rt.fi.na.nc.e.33@gmail.com</a>
<a href=""mailto:b.a.yp.o.rtf.i.n.an.c.e.33@gmail.com"">b.a.yp.o.rtf.i.n.an.c.e.33@gmail.com</a>
<a href=""mailto:bayportfinanc.e3.3@gmail.com"">bayportfinanc.e3.3@gmail.com</a>
<a href=""mailto:b.ay.p.o.r.tf.i.n.a.nce.3.3@gmail.com"">b.ay.p.o.r.tf.i.n.a.nce.3.3@gmail.com</a>
<a href=""mailto:b.aypo.rt.fi.n.ance3.3@gmail.com"">b.aypo.rt.fi.n.ance3.3@gmail.com</a>
<a href=""mailto:bay.p.o.r.t.f.i.nanc.e3.3@gmail.com"">bay.p.o.r.t.f.i.nanc.e3.3@gmail.com</a>
<a href=""mailto:ba.yp.or.t.f.i.n.anc.e33@gmail.com"">ba.yp.or.t.f.i.n.anc.e33@gmail.com</a>
<a href=""mailto:b.aypor.tfi.na.nc.e3.3@gmail.com"">b.aypor.tfi.na.nc.e3.3@gmail.com</a>
<a href=""mailto:bayportfina.nce3.3@gmail.com"">bayportfina.nce3.3@gmail.com</a>
<a href=""mailto:ba.yport.fi.na.nce33@gmail.com"">ba.yport.fi.na.nce33@gmail.com</a>
<a href=""mailto:bayp.ortfi.n.an.ce.3.3@gmail.com"">bayp.ortfi.n.an.ce.3.3@gmail.com</a>
<a href=""mailto:baypo.r.t.finan.ce3.3@gmail.com"">baypo.r.t.finan.ce3.3@gmail.com</a>
<a href=""mailto:ba.ypo.r.tfin.a.nce.33@gmail.com"">ba.ypo.r.tfin.a.nce.33@gmail.com</a>
<a href=""mailto:bayp.o.r.tf.in.anc.e.33@gmail.com"">bayp.o.r.tf.in.anc.e.33@gmail.com</a>
<a href=""mailto:b.a.ypor.t.fi.nan.ce.3.3@gmail.com"">b.a.ypor.t.fi.nan.ce.3.3@gmail.com</a>
<a href=""mailto:b.a.y.po.rtfi.n.a.n.ce.3.3@gmail.com"">b.a.y.po.rtfi.n.a.n.ce.3.3@gmail.com</a>
<a href=""mailto:ba.y.p.o.rtfin.a.n.ce.33@gmail.com"">ba.y.p.o.rtfin.a.n.ce.33@gmail.com</a>
<a href=""mailto:bay.po.r.t.fi.n.a.n.c.e.33@gmail.com"">bay.po.r.t.fi.n.a.n.c.e.33@gmail.com</a>
<a href=""mailto:ba.y.port.fi.n.an.ce3.3@gmail.com"">ba.y.port.fi.n.an.ce3.3@gmail.com</a>
<a href=""mailto:ba.y.por.tf.i.n.a.nce33@gmail.com"">ba.y.por.tf.i.n.a.nce33@gmail.com</a>
<a href=""mailto:b.ay.p.or.t.f.in.a.nc.e33@gmail.com"">b.ay.p.or.t.f.in.a.nc.e33@gmail.com</a>
<a href=""mailto:bayp.o.rt.fi.n.a.nce.3.3@gmail.com"">bayp.o.rt.fi.n.a.nce.3.3@gmail.com</a>
<a href=""mailto:b.ay.p.ort.f.i.n.a.nc.e.3.3@gmail.com"">b.ay.p.ort.f.i.n.a.nc.e.3.3@gmail.com</a>
<a href=""mailto:b.ayp.o.rtf.i.n.a.n.ce.3.3@gmail.com"">b.ayp.o.rtf.i.n.a.n.ce.3.3@gmail.com</a>
<a href=""mailto:bay.port.f.inanc.e.3.3@gmail.com"">bay.port.f.inanc.e.3.3@gmail.com</a>
<a href=""mailto:bay.po.rtfinan.c.e33@gmail.com"">bay.po.rtfinan.c.e33@gmail.com</a>
<a href=""mailto:ba.yp.ort.f.inan.c.e.33@gmail.com"">ba.yp.ort.f.inan.c.e.33@gmail.com</a>
<a href=""mailto:ba.y.p.or.tfi.n.an.ce.33@gmail.com"">ba.y.p.or.tfi.n.an.ce.33@gmail.com</a>
<a href=""mailto:b.ayp.or.tf.inanc.e.33@gmail.com"">b.ayp.or.tf.inanc.e.33@gmail.com</a>
<a href=""mailto:b.ay.por.tf.i.n.an.c.e.3.3@gmail.com"">b.ay.por.tf.i.n.an.c.e.3.3@gmail.com</a>
<a href=""mailto:ba.y.por.tfi.na.n.ce.3.3@gmail.com"">ba.y.por.tfi.na.n.ce.3.3@gmail.com</a>
<a href=""mailto:b.ayp.o.r.t.fin.an.c.e.33@gmail.com"">b.ayp.o.r.t.fin.an.c.e.33@gmail.com</a>
<a href=""mailto:bay.p.o.r.t.f.ina.n.c.e.33@gmail.com"">bay.p.o.r.t.f.ina.n.c.e.33@gmail.com</a>
<a href=""mailto:ba.yp.o.r.t.f.i.nan.c.e3.3@gmail.com"">ba.yp.o.r.t.f.i.nan.c.e3.3@gmail.com</a>
<a href=""mailto:baypor.tf.in.a.n.c.e.3.3@gmail.com"">baypor.tf.in.a.n.c.e.3.3@gmail.com</a>
<a href=""mailto:b.a.y.p.ortfin.ance3.3@gmail.com"">b.a.y.p.ortfin.ance3.3@gmail.com</a>
<a href=""mailto:b.ayp.ortfi.na.nc.e3.3@gmail.com"">b.ayp.ortfi.na.nc.e3.3@gmail.com</a>
<a href=""mailto:b.a.y.po.rtf.i.n.an.c.e3.3@gmail.com"">b.a.y.po.rtf.i.n.an.c.e3.3@gmail.com</a>
<a href=""mailto:b.ayp.o.r.tfi.n.a.n.ce3.3@gmail.com"">b.ayp.o.r.tfi.n.a.n.ce3.3@gmail.com</a>
<a href=""mailto:bayp.o.rtf.i.n.anc.e33@gmail.com"">bayp.o.rtf.i.n.anc.e33@gmail.com</a>
<a href=""mailto:b.ay.po.r.t.f.ina.nc.e.33@gmail.com"">b.ay.po.r.t.f.ina.nc.e.33@gmail.com</a>
<a href=""mailto:b.a.yp.o.rt.fi.na.n.ce.3.3@gmail.com"">b.a.yp.o.rt.fi.na.n.ce.3.3@gmail.com</a>
<a href=""mailto:marydada73@gmail.com"">marydada73@gmail.com</a>
<a href=""mailto:m.a.ry.d.ad.a.73@gmail.com"">m.a.ry.d.ad.a.73@gmail.com</a>
<a href=""mailto:m.arydada.73@gmail.com"">m.arydada.73@gmail.com</a>
<a href=""mailto:mary.d.a.d.a73@gmail.com"">mary.d.a.d.a73@gmail.com</a>
<a href=""mailto:m.a.r.y.da.da.7.3@gmail.com"">m.a.r.y.da.da.7.3@gmail.com</a>
<a href=""mailto:m.a.ryd.a.da.7.3@gmail.com"">m.a.ryd.a.da.7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.dada.73@gmail.com"">m.a.r.y.dada.73@gmail.com</a>
<a href=""mailto:m.aryda.d.a7.3@gmail.com"">m.aryda.d.a7.3@gmail.com</a>
<a href=""mailto:m.a.ry.da.d.a.7.3@gmail.com"">m.a.ry.da.d.a.7.3@gmail.com</a>
<a href=""mailto:m.aryd.ad.a.7.3@gmail.com"">m.aryd.ad.a.7.3@gmail.com</a>
<a href=""mailto:mar.y.d.a.da73@gmail.com"">mar.y.d.a.da73@gmail.com</a>
<a href=""mailto:m.ar.yd.ad.a.7.3@gmail.com"">m.ar.yd.ad.a.7.3@gmail.com</a>
<a href=""mailto:ma.ry.dad.a.73@gmail.com"">ma.ry.dad.a.73@gmail.com</a>
<a href=""mailto:m.a.ryda.d.a7.3@gmail.com"">m.a.ryda.d.a7.3@gmail.com</a>
<a href=""mailto:ma.ry.da.d.a.73@gmail.com"">ma.ry.da.d.a.73@gmail.com</a>
<a href=""mailto:m.a.ryda.d.a.7.3@gmail.com"">m.a.ryda.d.a.7.3@gmail.com</a>
<a href=""mailto:ma.ry.da.d.a.7.3@gmail.com"">ma.ry.da.d.a.7.3@gmail.com</a>
<a href=""mailto:maryda.da73@gmail.com"">maryda.da73@gmail.com</a>
<a href=""mailto:mar.yda.da7.3@gmail.com"">mar.yda.da7.3@gmail.com</a>
<a href=""mailto:ma.r.y.da.da73@gmail.com"">ma.r.y.da.da73@gmail.com</a>
<a href=""mailto:m.a.ry.d.ad.a.7.3@gmail.com"">m.a.ry.d.ad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.d.a.da73@gmail.com"">m.a.r.y.d.a.da73@gmail.com</a>
<a href=""mailto:m.ar.yd.a.d.a.7.3@gmail.com"">m.ar.yd.a.d.a.7.3@gmail.com</a>
<a href=""mailto:m.ar.y.d.a.d.a.7.3@gmail.com"">m.ar.y.d.a.d.a.7.3@gmail.com</a>
<a href=""mailto:ma.ry.dada.7.3@gmail.com"">ma.ry.dada.7.3@gmail.com</a>
<a href=""mailto:mar.yd.a.da73@gmail.com"">mar.yd.a.da73@gmail.com</a>
<a href=""mailto:m.aryda.da.73@gmail.com"">m.aryda.da.73@gmail.com</a>
<a href=""mailto:maryd.ada7.3@gmail.com"">maryd.ada7.3@gmail.com</a>
<a href=""mailto:ma.r.y.d.a.d.a73@gmail.com"">ma.r.y.d.a.d.a73@gmail.com</a>
<a href=""mailto:m.ar.y.d.ada.7.3@gmail.com"">m.ar.y.d.ada.7.3@gmail.com</a>
<a href=""mailto:mar.yd.ada.73@gmail.com"">mar.yd.ada.73@gmail.com</a>
<a href=""mailto:m.aryda.d.a.73@gmail.com"">m.aryda.d.a.73@gmail.com</a>
<a href=""mailto:m.a.r.yda.d.a.7.3@gmail.com"">m.a.r.yda.d.a.7.3@gmail.com</a>
<a href=""mailto:mary.dad.a7.3@gmail.com"">mary.dad.a7.3@gmail.com</a>
<a href=""mailto:m.ar.y.dada.73@gmail.com"">m.ar.y.dada.73@gmail.com</a>
<a href=""mailto:m.ar.y.da.da.7.3@gmail.com"">m.ar.y.da.da.7.3@gmail.com</a>
<a href=""mailto:m.aryda.da73@gmail.com"">m.aryda.da73@gmail.com</a>
<a href=""mailto:mar.ydada73@gmail.com"">mar.ydada73@gmail.com</a>
<a href=""mailto:ma.r.y.d.ad.a.73@gmail.com"">ma.r.y.d.ad.a.73@gmail.com</a>
<a href=""mailto:ma.ryda.d.a73@gmail.com"">ma.ryda.d.a73@gmail.com</a>
<a href=""mailto:m.ary.da.d.a7.3@gmail.com"">m.ary.da.d.a7.3@gmail.com</a>
<a href=""mailto:m.ar.ydad.a7.3@gmail.com"">m.ar.ydad.a7.3@gmail.com</a>
<a href=""mailto:m.a.ry.d.ada7.3@gmail.com"">m.a.ry.d.ada7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.d.a.d.a.73@gmail.com"">m.a.r.y.d.a.d.a.73@gmail.com</a>
<a href=""mailto:mary.dad.a.7.3@gmail.com"">mary.dad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.ry.d.a.da73@gmail.com"">m.a.ry.d.a.da73@gmail.com</a>
<a href=""mailto:marydada.7.3@gmail.com"">marydada.7.3@gmail.com</a>
<a href=""mailto:m.ar.y.d.a.da7.3@gmail.com"">m.ar.y.d.a.da7.3@gmail.com</a>
<a href=""mailto:m.ar.y.d.a.d.a7.3@gmail.com"">m.ar.y.d.a.d.a7.3@gmail.com</a>
<a href=""mailto:ma.r.yd.ad.a.73@gmail.com"">ma.r.yd.ad.a.73@gmail.com</a>
<a href=""mailto:ma.r.ydada73@gmail.com"">ma.r.ydada73@gmail.com</a>
<a href=""mailto:ma.r.ydad.a7.3@gmail.com"">ma.r.ydad.a7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.dad.a.73@gmail.com"">m.a.r.y.dad.a.73@gmail.com</a>
<a href=""mailto:mar.ydad.a.73@gmail.com"">mar.ydad.a.73@gmail.com</a>
<a href=""mailto:m.ar.yda.da73@gmail.com"">m.ar.yda.da73@gmail.com</a>
<a href=""mailto:ma.ry.d.ada73@gmail.com"">ma.ry.d.ada73@gmail.com</a>
<a href=""mailto:m.a.ry.d.a.da7.3@gmail.com"">m.a.ry.d.a.da7.3@gmail.com</a>
<a href=""mailto:ma.ryd.a.da.7.3@gmail.com"">ma.ryd.a.da.7.3@gmail.com</a>
<a href=""mailto:m.a.ryd.a.d.a.7.3@gmail.com"">m.a.ryd.a.d.a.7.3@gmail.com</a>
<a href=""mailto:m.a.r.ydad.a.73@gmail.com"">m.a.r.ydad.a.73@gmail.com</a>
<a href=""mailto:m.a.ryd.ad.a7.3@gmail.com"">m.a.ryd.ad.a7.3@gmail.com</a>
<a href=""mailto:marydad.a73@gmail.com"">marydad.a73@gmail.com</a>
<a href=""mailto:m.a.ry.d.a.da.7.3@gmail.com"">m.a.ry.d.a.da.7.3@gmail.com</a>
<a href=""mailto:ma.r.yda.da73@gmail.com"">ma.r.yda.da73@gmail.com</a>
<a href=""mailto:ma.r.yd.a.da7.3@gmail.com"">ma.r.yd.a.da7.3@gmail.com</a>
<a href=""mailto:ma.ryd.ada73@gmail.com"">ma.ryd.ada73@gmail.com</a>
<a href=""mailto:mar.y.dad.a7.3@gmail.com"">mar.y.dad.a7.3@gmail.com</a>
<a href=""mailto:mar.y.dad.a73@gmail.com"">mar.y.dad.a73@gmail.com</a>
<a href=""mailto:m.ary.dada.7.3@gmail.com"">m.ary.dada.7.3@gmail.com</a>
<a href=""mailto:m.ar.y.dad.a.7.3@gmail.com"">m.ar.y.dad.a.7.3@gmail.com</a>
<a href=""mailto:m.ar.ydad.a.7.3@gmail.com"">m.ar.ydad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.r.yd.ada.7.3@gmail.com"">m.a.r.yd.ada.7.3@gmail.com</a>
<a href=""mailto:mary.da.d.a.7.3@gmail.com"">mary.da.d.a.7.3@gmail.com</a>
<a href=""mailto:ma.r.y.d.a.da.7.3@gmail.com"">ma.r.y.d.a.da.7.3@gmail.com</a>
<a href=""mailto:ma.r.y.d.ada7.3@gmail.com"">ma.r.y.d.ada7.3@gmail.com</a>
<a href=""mailto:m.ary.da.da7.3@gmail.com"">m.ary.da.da7.3@gmail.com</a>
<a href=""mailto:m.aryd.a.d.a7.3@gmail.com"">m.aryd.a.d.a7.3@gmail.com</a>
<a href=""mailto:mar.yda.da73@gmail.com"">mar.yda.da73@gmail.com</a>
<a href=""mailto:ma.r.yd.ad.a73@gmail.com"">ma.r.yd.ad.a73@gmail.com</a>
<a href=""mailto:m.a.ry.dad.a73@gmail.com"">m.a.ry.dad.a73@gmail.com</a>
<a href=""mailto:m.aryd.a.d.a73@gmail.com"">m.aryd.a.d.a73@gmail.com</a>
<a href=""mailto:m.ar.y.dada7.3@gmail.com"">m.ar.y.dada7.3@gmail.com</a>
<a href=""mailto:m.ary.d.ada.73@gmail.com"">m.ary.d.ada.73@gmail.com</a>
<a href=""mailto:mar.yda.da.73@gmail.com"">mar.yda.da.73@gmail.com</a>
<a href=""mailto:mar.y.da.d.a.7.3@gmail.com"">mar.y.da.d.a.7.3@gmail.com</a>
<a href=""mailto:m.aryd.a.da73@gmail.com"">m.aryd.a.da73@gmail.com</a>
<a href=""mailto:ma.ryd.ada.7.3@gmail.com"">ma.ryd.ada.7.3@gmail.com</a>
<a href=""mailto:mar.y.dad.a.7.3@gmail.com"">mar.y.dad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.dad.a.7.3@gmail.com"">m.a.r.y.dad.a.7.3@gmail.com</a>
<a href=""mailto:maryd.ada73@gmail.com"">maryd.ada73@gmail.com</a>
<a href=""mailto:ma.r.y.d.a.da7.3@gmail.com"">ma.r.y.d.a.da7.3@gmail.com</a>
<a href=""mailto:ma.r.y.d.a.d.a7.3@gmail.com"">ma.r.y.d.a.d.a7.3@gmail.com</a>
<a href=""mailto:m.a.ryda.d.a73@gmail.com"">m.a.ryda.d.a73@gmail.com</a>
<a href=""mailto:ma.ryd.ad.a.73@gmail.com"">ma.ryd.ad.a.73@gmail.com</a>
<a href=""mailto:m.a.ryda.da73@gmail.com"">m.a.ryda.da73@gmail.com</a>
<a href=""mailto:m.a.ryd.ad.a.7.3@gmail.com"">m.a.ryd.ad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.ry.d.ad.a73@gmail.com"">m.a.ry.d.ad.a73@gmail.com</a>
<a href=""mailto:mar.y.da.da7.3@gmail.com"">mar.y.da.da7.3@gmail.com</a>
<a href=""mailto:ma.ry.d.a.da73@gmail.com"">ma.ry.d.a.da73@gmail.com</a>
<a href=""mailto:ma.r.y.d.a.da.73@gmail.com"">ma.r.y.d.a.da.73@gmail.com</a>
<a href=""mailto:m.ar.y.d.a.d.a.73@gmail.com"">m.ar.y.d.a.d.a.73@gmail.com</a>
<a href=""mailto:mar.y.dada73@gmail.com"">mar.y.dada73@gmail.com</a>
<a href=""mailto:m.aryd.a.da.73@gmail.com"">m.aryd.a.da.73@gmail.com</a>
<a href=""mailto:ma.r.y.da.d.a.7.3@gmail.com"">ma.r.y.da.d.a.7.3@gmail.com</a>
<a href=""mailto:m.a.ryda.d.a.73@gmail.com"">m.a.ryda.d.a.73@gmail.com</a>
<a href=""mailto:ma.r.yda.da.73@gmail.com"">ma.r.yda.da.73@gmail.com</a>
<a href=""mailto:maryda.d.a.73@gmail.com"">maryda.d.a.73@gmail.com</a>
<a href=""mailto:mary.dada73@gmail.com"">mary.dada73@gmail.com</a>
<a href=""mailto:mar.ydada.73@gmail.com"">mar.ydada.73@gmail.com</a>
<a href=""mailto:m.aryda.da.7.3@gmail.com"">m.aryda.da.7.3@gmail.com</a>
<a href=""mailto:ma.r.yd.ada7.3@gmail.com"">ma.r.yd.ada7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.d.ad.a73@gmail.com"">m.a.r.y.d.ad.a73@gmail.com</a>
<a href=""mailto:mar.y.da.da73@gmail.com"">mar.y.da.da73@gmail.com</a>
<a href=""mailto:ma.rydad.a73@gmail.com"">ma.rydad.a73@gmail.com</a>
<a href=""mailto:m.a.r.yda.da.7.3@gmail.com"">m.a.r.yda.da.7.3@gmail.com</a>
<a href=""mailto:m.ar.yd.ad.a73@gmail.com"">m.ar.yd.ad.a73@gmail.com</a>
<a href=""mailto:m.ary.dad.a.7.3@gmail.com"">m.ary.dad.a.7.3@gmail.com</a>
<a href=""mailto:ma.r.yd.ada73@gmail.com"">ma.r.yd.ada73@gmail.com</a>
<a href=""mailto:mar.y.dada7.3@gmail.com"">mar.y.dada7.3@gmail.com</a>
<a href=""mailto:m.a.r.ydada.73@gmail.com"">m.a.r.ydada.73@gmail.com</a>
<a href=""mailto:m.ary.dad.a7.3@gmail.com"">m.ary.dad.a7.3@gmail.com</a>
<a href=""mailto:mar.yda.d.a7.3@gmail.com"">mar.yda.d.a7.3@gmail.com</a>
<a href=""mailto:ma.r.yda.d.a.73@gmail.com"">ma.r.yda.d.a.73@gmail.com</a>
<a href=""mailto:m.a.ry.d.ada73@gmail.com"">m.a.ry.d.ada73@gmail.com</a>
<a href=""mailto:mary.dada7.3@gmail.com"">mary.dada7.3@gmail.com</a>
<a href=""mailto:m.a.ry.da.da73@gmail.com"">m.a.ry.da.da73@gmail.com</a>
<a href=""mailto:mar.ydad.a.7.3@gmail.com"">mar.ydad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.da.d.a73@gmail.com"">m.a.r.y.da.d.a73@gmail.com</a>
<a href=""mailto:ma.ry.d.ad.a7.3@gmail.com"">ma.ry.d.ad.a7.3@gmail.com</a>
<a href=""mailto:m.ary.da.d.a.73@gmail.com"">m.ary.da.d.a.73@gmail.com</a>
<a href=""mailto:m.ar.y.d.a.da73@gmail.com"">m.ar.y.d.a.da73@gmail.com</a>
<a href=""mailto:mar.y.d.a.d.a73@gmail.com"">mar.y.d.a.d.a73@gmail.com</a>
<a href=""mailto:ma.r.ydad.a.7.3@gmail.com"">ma.r.ydad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.d.a.da.73@gmail.com"">m.a.r.y.d.a.da.73@gmail.com</a>
<a href=""mailto:m.a.ry.d.ada.73@gmail.com"">m.a.ry.d.ada.73@gmail.com</a>
<a href=""mailto:m.ary.da.da.7.3@gmail.com"">m.ary.da.da.7.3@gmail.com</a>
<a href=""mailto:m.a.ryda.da7.3@gmail.com"">m.a.ryda.da7.3@gmail.com</a>
<a href=""mailto:ma.r.ydada.7.3@gmail.com"">ma.r.ydada.7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.dada73@gmail.com"">m.a.r.y.dada73@gmail.com</a>
<a href=""mailto:ma.r.y.dada.73@gmail.com"">ma.r.y.dada.73@gmail.com</a>
<a href=""mailto:m.aryd.a.d.a.73@gmail.com"">m.aryd.a.d.a.73@gmail.com</a>
<a href=""mailto:mar.yd.ad.a.7.3@gmail.com"">mar.yd.ad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.r.yd.a.d.a.73@gmail.com"">m.a.r.yd.a.d.a.73@gmail.com</a>
<a href=""mailto:ma.ryda.da73@gmail.com"">ma.ryda.da73@gmail.com</a>
<a href=""mailto:maryda.d.a.7.3@gmail.com"">maryda.d.a.7.3@gmail.com</a>
<a href=""mailto:ma.ryd.a.da.73@gmail.com"">ma.ryd.a.da.73@gmail.com</a>
<a href=""mailto:m.ar.y.d.ad.a73@gmail.com"">m.ar.y.d.ad.a73@gmail.com</a>
<a href=""mailto:ma.r.y.da.da.73@gmail.com"">ma.r.y.da.da.73@gmail.com</a>
<a href=""mailto:m.a.rydada73@gmail.com"">m.a.rydada73@gmail.com</a>
<a href=""mailto:mar.y.d.a.d.a.7.3@gmail.com"">mar.y.d.a.d.a.7.3@gmail.com</a>
<a href=""mailto:mar.yd.ad.a73@gmail.com"">mar.yd.ad.a73@gmail.com</a>
<a href=""mailto:m.aryd.ada.7.3@gmail.com"">m.aryd.ada.7.3@gmail.com</a>
<a href=""mailto:m.a.ry.d.a.d.a7.3@gmail.com"">m.a.ry.d.a.d.a7.3@gmail.com</a>
<a href=""mailto:mary.d.a.d.a.73@gmail.com"">mary.d.a.d.a.73@gmail.com</a>
<a href=""mailto:ma.r.ydad.a73@gmail.com"">ma.r.ydad.a73@gmail.com</a>
<a href=""mailto:m.ar.yd.a.da.7.3@gmail.com"">m.ar.yd.a.da.7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.d.ada7.3@gmail.com"">m.a.r.y.d.ada7.3@gmail.com</a>
<a href=""mailto:ma.r.y.d.ada73@gmail.com"">ma.r.y.d.ada73@gmail.com</a>
<a href=""mailto:m.ary.d.a.d.a.7.3@gmail.com"">m.ary.d.a.d.a.7.3@gmail.com</a>
<a href=""mailto:m.a.ry.d.a.d.a.73@gmail.com"">m.a.ry.d.a.d.a.73@gmail.com</a>
<a href=""mailto:m.ar.y.d.a.d.a73@gmail.com"">m.ar.y.d.a.d.a73@gmail.com</a>
<a href=""mailto:maryd.a.da7.3@gmail.com"">maryd.a.da7.3@gmail.com</a>
<a href=""mailto:m.ar.yd.a.da73@gmail.com"">m.ar.yd.a.da73@gmail.com</a>
<a href=""mailto:mar.y.d.ada.7.3@gmail.com"">mar.y.d.ada.7.3@gmail.com</a>
<a href=""mailto:mary.d.ada73@gmail.com"">mary.d.ada73@gmail.com</a>
<a href=""mailto:ma.ryd.a.d.a73@gmail.com"">ma.ryd.a.d.a73@gmail.com</a>
<a href=""mailto:m.a.r.y.da.da73@gmail.com"">m.a.r.y.da.da73@gmail.com</a>
<a href=""mailto:mary.d.a.da.73@gmail.com"">mary.d.a.da.73@gmail.com</a>
<a href=""mailto:m.a.r.yd.a.da73@gmail.com"">m.a.r.yd.a.da73@gmail.com</a>
<a href=""mailto:m.a.r.y.da.d.a7.3@gmail.com"">m.a.r.y.da.d.a7.3@gmail.com</a>
<a href=""mailto:ma.r.yda.d.a7.3@gmail.com"">ma.r.yda.d.a7.3@gmail.com</a>
<a href=""mailto:mary.da.da.73@gmail.com"">mary.da.da.73@gmail.com</a>
<a href=""mailto:ma.r.yd.a.da.73@gmail.com"">ma.r.yd.a.da.73@gmail.com</a>
<a href=""mailto:ma.ry.da.da.7.3@gmail.com"">ma.ry.da.da.7.3@gmail.com</a>
<a href=""mailto:ma.ryd.a.da73@gmail.com"">ma.ryd.a.da73@gmail.com</a>
<a href=""mailto:m.ar.yd.ada.7.3@gmail.com"">m.ar.yd.ada.7.3@gmail.com</a>
<a href=""mailto:m.ar.yd.a.da.73@gmail.com"">m.ar.yd.a.da.73@gmail.com</a>
<a href=""mailto:m.ar.yda.d.a.7.3@gmail.com"">m.ar.yda.d.a.7.3@gmail.com</a>
<a href=""mailto:mary.d.ad.a.7.3@gmail.com"">mary.d.ad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.ryda.da.73@gmail.com"">m.a.ryda.da.73@gmail.com</a>
<a href=""mailto:m.ar.y.dada.7.3@gmail.com"">m.ar.y.dada.7.3@gmail.com</a>
<a href=""mailto:ma.r.yda.da7.3@gmail.com"">ma.r.yda.da7.3@gmail.com</a>
<a href=""mailto:m.aryda.da7.3@gmail.com"">m.aryda.da7.3@gmail.com</a>
<a href=""mailto:maryda.da7.3@gmail.com"">maryda.da7.3@gmail.com</a>
<a href=""mailto:m.a.r.yd.a.d.a7.3@gmail.com"">m.a.r.yd.a.d.a7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.da.da7.3@gmail.com"">m.a.r.y.da.da7.3@gmail.com</a>
<a href=""mailto:mary.da.da73@gmail.com"">mary.da.da73@gmail.com</a>
<a href=""mailto:ma.ryda.d.a.7.3@gmail.com"">ma.ryda.d.a.7.3@gmail.com</a>
<a href=""mailto:maryd.a.d.a7.3@gmail.com"">maryd.a.d.a7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.dada.7.3@gmail.com"">m.a.r.y.dada.7.3@gmail.com</a>
<a href=""mailto:m.a.r.yd.ada7.3@gmail.com"">m.a.r.yd.ada7.3@gmail.com</a>
<a href=""mailto:mar.yd.a.da7.3@gmail.com"">mar.yd.a.da7.3@gmail.com</a>
<a href=""mailto:ma.r.y.dad.a.7.3@gmail.com"">ma.r.y.dad.a.7.3@gmail.com</a>
<a href=""mailto:m.ar.yd.ad.a.73@gmail.com"">m.ar.yd.ad.a.73@gmail.com</a>
<a href=""mailto:m.a.ryd.ad.a.73@gmail.com"">m.a.ryd.ad.a.73@gmail.com</a>
<a href=""mailto:ma.r.y.dada.7.3@gmail.com"">ma.r.y.dada.7.3@gmail.com</a>
<a href=""mailto:m.a.ry.da.da.73@gmail.com"">m.a.ry.da.da.73@gmail.com</a>
<a href=""mailto:ma.r.y.d.ad.a.7.3@gmail.com"">ma.r.y.d.ad.a.7.3@gmail.com</a>
<a href=""mailto:m.a.r.y.d.ad.a.7.3@gmail.com"">m.a.r.y.d.ad.a.7.3@gmail.com</a>
<a href=""mailto:m.ary.d.ada7.3@gmail.com"">m.ary.d.ada7.3@gmail.com</a>
<a href=""mailto:ma.ry.dad.a7.3@gmail.com"">ma.ry.dad.a7.3@gmail.com</a>"
qPNQ63u2,Untitled,AyAks69,Python,Wednesday 24th of January 2024 10:11:06 PM CDT,"User
import numpy as np
from anytree import Node, RenderTree, PreOrderIter

counter = 0

def isSafe(chess, row, col, n):
    for i in range(0, n):
        if chess[row][i] == 1:
            return False

    diff = 0

    while diff < n:
        if (
            row - diff > -1 and col - diff > -1 and chess[row - diff][col - diff] == 1
        ) or (
            row - diff > -1 and col + diff < n and chess[row - diff][col + diff] == 1
        ) or (
            row + diff < n and col - diff > -1 and chess[row + diff][col - diff] == 1
        ) or (
            row + diff < n and col + diff < n and chess[row + diff][col + diff] == 1
        ):
            return False

        diff += 1

    return True

def dfs(chess, curr_column, n, parent_node=None):
    global counter

    if curr_column > n - 1:
        # When reaching the last column, print the result and backtrack
        if parent_node is not None:
            goal_node = Node(""Goal state reached!"", parent=parent_node)
#             print(RenderTree(goal_node))
        return

    for row in range(0, n):
        counter += 1

        for clr in range(row, -1, -1):
            chess[clr][curr_column] = 0

        if parent_node:
            child_node = Node(f""Moves: {counter}"", parent=parent_node)
        else:
            child_node = Node(f""Root: Moves: {counter}"")

        if isSafe(chess, row, curr_column, n):
            chess[row][curr_column] = 1
            if curr_column == n-1:
                print ('moves:', counter)
                print (chess)
            dfs(chess, curr_column + 1, n, parent_node=child_node)

if __name__ == ""__main__"":
    n = 6
    chess = np.full((n, n), 0)
    root_node = Node(f""Root: Moves: {counter}"")
    dfs(chess, 0, n, parent_node=root_node)

    # Print the tree structure using anytree
    for pre, _, node in RenderTree(root_node):
        print(f""{pre}{node.name}"")

    depth_of_tree = max([node.depth for node in PreOrderIter(root_node)])-1
    branching_factor = counter / (2 ** (depth_of_tree - 1))

    print(f""\nDepth of the tree: {depth_of_tree}"")
    print(f""Branching factor of the tree: {branching_factor}"")
"
nJV3yqH4,CCXT Ticker Example,J2897,Python,Wednesday 24th of January 2024 09:27:46 PM CDT,"import ccxt
import time
from datetime import datetime
import os

symbol = 'BTC/USDT'

def fetch_and_print_ticker():
    ticker = exchange.fetch_ticker(symbol)
    timestamp = ticker['timestamp']
    datetime_str = datetime.utcfromtimestamp(timestamp / 1000.0).strftime('%Y-%m-%d %H:%M:%S')

    os.system('cls' if os.name == 'nt' else 'clear')  # Clear the console based on the operating system
    # print('Ticker:', ticker)
    print(f""Symbol: {ticker['symbol']}"")
    print(f""Timestamp: {datetime_str}"")
    print(f""High: {ticker['high']}"")
    print(f""Low: {ticker['low']}"")
    print(f""Bid Price: {ticker['bid']}"")
    print(f""Bid Volume: {ticker['bidVolume']}"")
    print(f""Ask Price: {ticker['ask']}"")
    print(f""Ask Volume: {ticker['askVolume']}"")
    print(f""Last Price: {ticker['last']}"")
    print(f""Change: {ticker['change']}"")
    print(f""Percentage Change: {ticker['percentage']}"")
    print(""------------------------------"")

# Create a Binance instance without API credentials
exchange = ccxt.binance()

# Fetch and print ticker information every 5 seconds (adjust as needed)
while True:
    fetch_and_print_ticker()
    time.sleep(5)
"
JEZ1HYUV,Terminal,nailacrooc12,Java,Wednesday 24th of January 2024 09:27:35 PM CDT,"import java.util.*;

public class Terminal
{
    Test mainCall = new Test();
    Card card = new Card (500, 1000, 1);
    int card1TickBal = card.ticketBalance;
    
    public void Terminal(){
        
        Scanner in = new Scanner (System.in);
        System.out.println(""What do you want to do? Pick a number"");
        System.out.println(""1. Redeem Prizes\n2. Transfer Tickets\n3. Check Balance\n4. Back\n*********************************"");
        int act = in.nextInt();
        
        if (act == 1){
            System.out.println(""Choose Prize: ""); 
            System.out.println(""1. Stuffed Toy (300 Tickets)\n2. Candies (10 Tickets)\n3. Accesories (100 Tickets)\n4. Back\n*********************************"");
            int choose = in.nextInt();
            if (choose == 1 && card1TickBal >= 300){
                card.minusTickets(300);
                System.out.println(""Stuffed Toy was redeemed sucesfully\n*********************************"");
                mainCall.main(null);
            }else if(choose == 2 && card1TickBal >= 10){
                card.minusTickets(10);
                System.out.println(""Candies were redeemed sucesfully\n*********************************"");
                mainCall.main(null);
            }else if (choose == 3 && card1TickBal >= 100){
                card.minusTickets(100);
                System.out.println(""Accesories were redeemed sucesfully\n*********************************"");
                mainCall.main(null);
            }else if (choose == 4){
                Terminal();
            }
        }else if (act == 2){
            System.out.println(""Choose Option: "");
            System.out.println(""1. Card 1 -> Card 2\n2. Card 2 -> Card 1\n*********************************"");
            int pick = in.nextInt();
            if (pick == 1){
                System.out.println(""Transferred Sucesfully"");
                mainCall.main(null);
            }else if (pick == 2){
                System.out.println(""Transferred Sucesfully"");
                mainCall.main(null);
            }
        }else if (act == 3){
            System.out.println(""Which card do you want to check?\n1. Card 1\n2. Card 2\n*********************************"");
            int cardPick = in.nextInt();
            if (cardPick == 1){
                card.cardDetails1();
                mainCall.main(null);
            }else if (cardPick == 2){
                card.cardDetails2();
                mainCall.main(null);
            }
        }else if (act == 4){
            mainCall.main(null);
        }
        
        
    }
   
}"
vF1EC0Xz,Game,nailacrooc12,Java,Wednesday 24th of January 2024 09:26:43 PM CDT,"import java.util.*;

public class Game
{
    Test mainCall = new Test();
    Card card = new Card(500, 1000, 1);
    int card1Bal = card.creditBalance;
    
    public void Begin(){
        Scanner in = new Scanner (System.in);
        System.out.println(""Choose game: "");
        System.out.println(""1. Guess the number (200 Credits)\n2. Back\n*********************************"");
        int chooseGame = in.nextInt();
    
        if (chooseGame == 1 && card1Bal >= 200){
            card.minusCredits(200);
            guessGame();
        }else if (chooseGame == 2){
        mainCall.main(null);
        }
    }
    
    public void guessGame(){
        Scanner in = new Scanner (System.in);
        Random random = new Random();
        
        System.out.println(""Total Credits: "" + card.getCB());
        System.out.println(""Guess the number from 1-5\n*********************************"");
        int numGuess = in.nextInt();
        int randomNum = random.nextInt(5)+1;
   
        if (numGuess == randomNum){
            card.getTickets(20);
            System.out.println(""HOORAY! The answer is "" + randomNum);
            System.out.println(""Total Tickets: "" + card.getTB() + ""\n*********************************"");
            
            mainCall.main(null);
        }else{
            System.out.println(""The answer is "" + randomNum + "". Better luck next time"");
            System.out.println(""Total Tickets: "" + card.getTB() + ""\n*********************************"");
            mainCall.main(null);
        }
    }
   

}"
C8DjGRh9,Card,nailacrooc12,Java,Wednesday 24th of January 2024 09:24:56 PM CDT,"import java.util.*;

public class Test
{
    public static void main(String[] args) {
        int amount;
        Card card1 = new Card(500, 1000, 1);
        Card card2 = new Card(200, 700, 2);
        Game game = new Game();
        Terminal term = new Terminal();
        
        System.out.println(""What do you want to do? Pick a number"");
        System.out.println(""1. Buy Credits\n2. Play a game\n3. Go to Terminal\n*********************************"" );
        Scanner in = new Scanner (System.in);
        int act = in.nextInt();
        
        if (act == 1){
            System.out.println(""Pick which card you want to load credits with: \n1. Card 1\n2. Card 2\n*********************************"");
            int cardPick = in.nextInt();
            if (cardPick == 1){
                System.out.println(""Enter amount of credits: \n*********************************"");
                amount = in.nextInt();
                card1.buyCredits(amount);
                System.out.println(""Credit balance is : "" + card1.getCB() + ""\n*********************************"");
                main(null);
            }else if (cardPick == 2){
                System.out.println(""Enter amount of credits: "");
                amount = in.nextInt();
                card2.buyCredits(amount);
                System.out.println(""Credit balance is : "" + card2.getCB() + ""\n*********************************"");
                main(null);
            }else{
                System.out.println(""SYSTEM ERROR"");
            }
        }else if (act == 2){
            game.Begin();
        }else if (act == 3){
            term.Terminal();
        }else{
            System.out.println(""SYSTEM ERROR"");
        }
        
    }
}"
15EmAHt7,Untitled,sulyvahn,Python,Wednesday 24th of January 2024 09:01:24 PM CDT,"import cv2
import numpy as np

marker_size = 100
offset = 10
markers = []
markers_dict = cv2.aruco.getPredefinedDictionary(cv2.aruco.DICT_4X4_50)


def _generate_marker(idx):
    marker = np.zeros((marker_size, marker_size, 1), dtype=""uint8"")
    markers_dict.generateImageMarker(idx, marker_size, marker)
    return marker


def generate_markers():
    ids = [4, 7, 13, 24]
    _markers = []
    for i, idx in enumerate(ids):
        new_marker = _generate_marker(idx)
        new_marker = np.rot90(new_marker, i)
        _markers.append(new_marker)

    return _markers


def place_markers(image):
    offset = 10
    size_offseted = marker_size + offset
    image[offset:size_offseted, offset:size_offseted] = markers[0]  # левый верхний
    image[-size_offseted:-offset, offset:size_offseted] = markers[1]  # левый нижний
    image[-size_offseted:-offset, -size_offseted:-
          offset] = markers[2]  # правый нижний
    image[offset:size_offseted, -size_offseted:-
          offset] = markers[3]  # правый верхний


def detect_markers(image):
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    detector_params = cv2.aruco.DetectorParameters()
    detector = cv2.aruco.ArucoDetector(markers_dict, detector_params)
    rejected_points = np.array([])
    detected_markers = {""Corners"": [], ""Ids"": []}
    detected_markers[""Corners""], detected_markers[""Ids""], rejected_points = detector.detectMarkers(
        gray)
    detected_markers[""Corners""] = np.array(detected_markers[""Corners""])
    if type(detected_markers[""Ids""]) == np.ndarray:
        detected_markers = _sort_markers(detected_markers)
    return detected_markers, rejected_points


def _sort_markers(detected_markers):
    sortedIds = detected_markers[""Ids""].argsort(0)[:, 0]
    detected_markers[""Ids""] = detected_markers[""Ids""][sortedIds]
    detected_markers[""Corners""] = detected_markers[""Corners""][sortedIds]
    return detected_markers


def outline_markers(image, detected_markers):
    cv2.aruco.drawDetectedMarkers(
        image, detected_markers[""Corners""], detected_markers[""Ids""])


def get_image_corners(markers_corners):
    image_corners = []
    for i in markers_corners:
        image_corners.append(i[0][0])
    image_corners = np.array(image_corners)
    return image_corners


def get_warp_matrix(image, original_image, detected_markers):
    corners = get_image_corners(detected_markers['Corners'])
    print(corners)
    outline_markers(image, detected_markers)
    warp_matrix = None
    if type(corners) == np.ndarray:
        # x, y format
        out = np.float32([[0, 0], [0, original_image.shape[0] - 1],
                          [original_image.shape[1] - 1,
                           original_image.shape[0] - 1],
                          [original_image.shape[1] - 1, 0]])
        warp_matrix = cv2.getPerspectiveTransform(corners, out)

    return warp_matrix


image = np.empty((480, 640, 3), dtype='uint8')
image.fill(255)

markers = generate_markers()
place_markers(image)

detected_markers, _ = detect_markers(image)

warp_matrix = get_warp_matrix(image, image, detected_markers)
warped_image = cv2.warpPerspective(
    image, warp_matrix, (640, 480))
cv2.imshow(""Markers"", image)
cv2.imshow(""Warp"", warped_image)

# later
# cv2.imshow('No Wrap', )

cv2.waitKey(0)
cv2.destroyAllWindows()
"
bvSURE5i,Untitled,wym1111,C++,Wednesday 24th of January 2024 09:00:28 PM CDT,"#include<bits/stdc++.h>
using namespace std;

int n, m;
int a[102][102];
int sum[102][102]; // sum[x][y] 表示第x行y列左上角的和
int x_1, y_1, x_2, y_2;

int main() {
	cin >> n >> m;
	for (int i = 1; i <= n; i ++) {
		for (int j = 1; j <= m; j ++) {
			cin >> a[i][j];
		}
	}
	// 预处理二维前缀和
	for (int i = 1; i <= n; i ++) {
		int tmp = 0;
		for (int j = 1; j <= n; j ++) {
			tmp += a[i][j];
			sum[i][j] = sum[i - 1][j] + tmp;
		}
	}
	
	cin >> x_1 >> y_1 >> x_2 >> y_2;
	
	int s1 = sum[x_2][y_2]; // 绿色矩形
	int s2 = sum[x_1 - 1][y_2]; // 橙色矩形1
	int s3 = sum[x_2][y_1 - 1]; // 橙色矩形2
	int s4 = sum[x_1 - 1][y_1 - 1]; // 青色矩形
	
	int s = s1 - (s2 + s3) + s4; //红色目标子矩阵
	
	cout << s;
	
	return 0;
} "
UVHamdYD,DECRYPT-IMAGES.bat,Najeebsk,Batch,Wednesday 24th of January 2024 08:41:13 PM CDT,"@ECHO OFF
TITLE ~~~*** NAJEEB FILES DECRYPT IMAGES ***~~~
COLOR 1B
setlocal enabledelayedexpansion
Mode con cols=75 lines=18
:home
ECHO                    ~~~*** NAJEEB SHAH KHAN DECRYPT IMAGES ***~~~
ECHO                           %TIME%  %DATE%
ECHO  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ECHO.
::============================Extension=======================
set /p PASS= ENTER PASSWORD =
set /p input= DECRYPT IMAGES Extension Only  =
set /p input2= Type Change Extension Only =
::echo ""%PASS%"" | magick *.%input% -encipher - -transpose  -depth 8   png24:message_obfuscate.%input2%
echo ""%PASS%"" | magick *.%input% -transpose -decipher -  message_restored.%input2%
Pause:
CLS
goto home
"
uqUSwKdf,ENCRYPT-IMAGES.bat,Najeebsk,Batch,Wednesday 24th of January 2024 08:39:37 PM CDT,"@ECHO OFF
TITLE ~~~*** NAJEEB FILES CREATE ENCRYPT IMAGES ***~~~
COLOR 1B
setlocal enabledelayedexpansion
Mode con cols=75 lines=18
:home
ECHO                    ~~~*** NAJEEB SHAH KHAN ENCRYPT IMAGES ***~~~
ECHO                           %TIME%  %DATE%
ECHO  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ECHO.
::============================Extension=======================
set /p PASS= ENTER PASSWORD =
set /p input= ENCRYPT IMAGES Extension Only =
set /p input2= Type Change Extension Only =
echo ""%PASS%"" | magick *.%input% -encipher - -transpose  -depth 8   png24:message_obfuscate.%input2%
Pause:
CLS
goto home
"
YrD6WFHW,Minecraft Stargate Journey 1.20.1-0.6.17 ReadMe,MarcosKoco,Lua,Wednesday 24th of January 2024 08:35:05 PM CDT,"Version: 0.0.1 :
 
Made the program till it worked my way.
Dail with milky way stargate to other gates or press 0 to close the portal with cc:tweaked (computercraft).
To added a address u can use the equals key. It will be save in a file and u also can edit the file. It will load it at the start of the program. Warning, dont go over the 9. Im still working to added more adresses, but they wont be on number buttons.

Mod updated with chaged commands had to update script"
G6LCpk2B,Minecraft Stargate Journey 1.20.1-0.6.17,MarcosKoco,Lua,Wednesday 24th of January 2024 08:33:16 PM CDT,"-- For advance computers else change colours to black and white!!

-- Version 0.0.3

sleep(1) -- Wait some time so the portal can start.

local file -- Local to put file names in.

local w, h = term.getSize() -- Get screen height and width.

local interface -- Local for the portal interface.
local Monitor -- Local for the Monitor.
local OldTerm -- Local to put in the terminal screen when switch to monitor
local test -- Local just for testing stuff
local MonitorState = ""M"" -- Local for the monitor state. M = monitor, T = Terminal
local found = false -- Local for if something is found or not.

local CLS = term.clear -- New command for clearing the complete screen.
local setCurs = term.setCursorPos -- New command for setting the cursor position.
local Loop = true -- Local for head menu to loop or end.

for i,name in pairs(peripheral.getNames()) do -- Go through all attached things and get the names.
    
    for j,method in pairs(peripheral.getMethods(name)) do -- Go through all methods that are avadible.
		
		if (method == 'clear') then -- If found metod clear then do
            
            Monitor = peripheral.wrap(name) -- Set and warp local monitor to the real monitor.
			found = true -- Set local found to true.
			
        end -- end if statement
        
		if (found) then -- If local found is true then do.
			
			break -- Break the for ..... do.
			
		end -- end if statement.
	
    end -- end for ..... do.
	
	if (found) then -- If local found is true then do.
		
		break -- Break the for ..... do.
		
	end -- end if statement.
	
end -- end for ..... do.

local X, Y -- local for the height and width for the screen or monitor

if MonitorState == ""T"" then -- If local monitorstate is T do.
	X, Y = term.getSize() -- Get screen height and width.
elseif MonitorState == ""M"" and Monitor then -- Else if local monitorstate is M do.
	OldTerm = term.redirect(Monitor) -- Set the term screen in the local oldterm to not loose it,
	Monitor.setTextScale(1) -- Set the scale of the text on the screen
	X, Y = Monitor.getSize() -- Get screen height and width.
end -- end if statement.

local X2, Y2 = X / 2, Y /2 -- Some calculations for the screen and saved in the locals.
local a = X + 1 - X2 -- Some calculations for the screen and saved in the locals.
local b = Y + 1 - Y2 -- Some calculations for the screen and saved in the locals.

local MenuScreen = window.create(term.current(),1,1,X2,Y) -- Make in screen a new window.
MenuScreen.setBackgroundColour(colours.blue) -- Set background color in this window.
MenuScreen.setTextColour(colours.white) -- Set text color in this window.
MenuScreen.clear() -- Clear the window and put in that backgound color.
local MenuScreenX, MenuScreenY = MenuScreen.getSize() -- Get window height and width.
local MenuScreenX2, MenuScreenY2 = MenuScreenX/2, MenuScreenY/2 -- Some calculations for the window and saved in the locals.

local DailScreen = window.create(term.current(),X2+1,1,a,Y2) -- Make in screen a new window.
DailScreen.setBackgroundColour(colours.green) -- Set background color in this window.
DailScreen.setTextColour(colours.black) -- Set text color in this window.
DailScreen.clear() -- Clear the window and put in that backgound color.
local DailScreenX, DailScreenY = DailScreen.getSize() -- Get window height and width.
local DailScreenX2, DailScreenY2 = DailScreenX/2, DailScreenY/2 -- Some calculations for the window and saved in the locals.

local IncomingScreen = window.create(term.current(),X2+1,Y2+1,a,b) -- Make in screen a new window.
IncomingScreen.setBackgroundColour(colours.red) -- Set background color in this window.
IncomingScreen.setTextColour(colours.black) -- Set text color in this window.
IncomingScreen.clear() -- Clear the window and put in that backgound color.
local IncomingScreenX, IncomingScreenY = IncomingScreen.getSize() -- Get window height and width.
local IncomingScreenX2, IncomingScreenY2 = IncomingScreenX/2, IncomingScreenY/2 -- Some calculations for the window and saved in the locals.

local Text = """" -- Local for text.
local timer -- Local for a timer.
local z -- Local for a line number.

local Addresses = { -- Local for adresses to dail to.
    [1] = {
        Name = ""Abydos"", -- Name to dail to.
        Address = {26,6,14,31,11,29,0} -- ID (Address) to dail to, end with a 0 (zero) to start dailing.
    },
    [2] = {
        Name = ""Chulak"",
        Address = {8,1,22,14,36,19,0}
    },
    [3] = {
        Name = ""Lantea"",
        Address = {18,20,1,15,14,7,19,0}
    },
    [4] = {
        Name = ""Earth"",
        Address = {16,23,32,12,19,15,18,22,0} -- own made potal, change me to ur own.
    },
    [5] = {
        Name = ""Space Fairy"",
        Address = {35,27,26,29,34,25,23,31,0} -- Space station in orbid (Ad astra mod), change me to ur own or del me and make nether roof number 5.
    },
    [6] = {
        Name = ""Nether Roof"",
        Address = {8,35,34,25,14,27,15,2,0} -- found nether roof portal.
    }
} -- add your own adress to TXT or Press = in Menu, Or do it like her and change them.

if fs.exists(""Addresses.txt"") then -- If file exists then do.
	file = fs.open(""Addresses.txt"", ""r"") -- Open the file.
	Addresses = textutils.unserialize(file.readAll()) -- Read the file and save it in the local Addresses.
	file.close() -- Close the file.
else -- If file not exists then do.
	file = fs.open(""Addresses.txt"", ""w"") -- Make the file.
	file.write(textutils.serialize(Addresses)) -- Safe the local Addresses in the file.
	file.close() -- Close the file.
end -- end if statement.
	
found = false -- Set local found to false again.

for i,name in pairs(peripheral.getNames()) do -- Go through all attached things and get the names.
	
	for j,method in pairs(peripheral.getMethods(name)) do -- Go through all methods that are avadible.
		
		if (method == 'getChevronsEngaged') then -- If found metod getVhevronsEngaged then do
			
			interface = peripheral.wrap(name) -- Set and warp local interface to the portal interface.
			found = true -- Set local found to true.
			
		end -- end if statement.
		
		if (found) then -- If local found is true then do.
			
			break -- Break the for ..... do.
			
		end -- end if statement.
		
	end -- end for ..... do.
	
	if (found) then -- If local found is true then do.
		
		break -- Break the for ..... do.
		
	end -- end if statement.
	
end -- end for ..... do.

local buttona = {} -- Local for Api Buttons.
local color = {
				normale = {
					text = colors.white,
					background = colors.blue
				},
				clicked = {
					text = colors.blue,
					background = colors.white
				}
			} -- Set some colors for the buttons.

function classButton() -- Make the button Api.
	
	clsButton = {}
	clsButton.__index = clsButton -- failed table lookups on the instances should fallback to the class table, to get methods

    local self = setmetatable({}, clsButton)
	
	function clsButton.clearButtons(self) buttona = {} end -- Clear the local buttona
	
	function clsButton.setButton(self, name, func, xmin, xmax, ymin, ymax, state, extra)
		
		buttona[name] = {}
		buttona[name][""func""] = func
		buttona[name][""extra""] = extra
		buttona[name][""active""] = false
		buttona[name][""show""] = state
		buttona[name][""xmin""] = xmin
		buttona[name][""ymin""] = ymin
		buttona[name][""xmax""] = xmax
		buttona[name][""ymax""] = ymax
		
	end
	
	function clsButton.setButtonShow(self, name, data)
		
		buttona[name][""show""] = data
		
	end
	
	function clsButton.onScreen(self)
	   
	   local background
	   local text
	   
		for name,data in pairs(buttona) do
			
			if data[""show""] then
				
				if term.isColor then
					
					if (data[""active""]) then 
						
						background = color.clicked.background
						text = 	color.clicked.text
						
					else 
						
						background = color.normale.background
						text = color.normale.text
						
					end
					
				else
					
					if (data[""active""]) then 
						
						background = colors.white
						text = colors.black
						
					else 
						
						background = colors.black
						text = colors.white
						
					end
					
				end

				term.setBackgroundColor(background)
				term.setTextColor(text)
				
				local yspot = math.floor((data[""ymin""] + data[""ymax""]) /2)
				local xspot = math.floor((data[""xmax""] - data[""xmin""] - string.len(name)) /2) +1
				
				for j = data[""ymin""], data[""ymax""] do
				   
					term.setCursorPos(data[""xmin""]-2, j)
					
					if j == yspot then
						
						term.write(name)
						
					else
						
						for i = data[""xmin""], data[""xmax""] do
							
							term.write("" "")
							
						end
						
					end
					
				end
				
				term.setBackgroundColor(colors.black)
				term.setTextColor(colors.white)
				
			end
			
		end
		
	end
	
	function clsButton.toggleButton(self, name)
	   
	   buttona[name][""active""] = not buttona[name][""active""]
	   clsButton.onScreen()
	   
	end

	function clsButton.flashButton(self, name)
	   
	   clsButton.toggleButton(self, name)
	   clsButton.onScreen(self)
	   sleep(0.15)
	   clsButton.toggleButton(self, name)
	   clsButton.onScreen(self)
	   
	end
	
	function clsButton.buttonPressed(self, x, y)
		
		for name, data in pairs(buttona) do
			
			if data[""show""] then
				
				if y>=data[""ymin""] and  y <= data[""ymax""] then
					
					if x>=data[""xmin""] and x<= data[""xmax""] then
						
						clsButton.flashButton(self,name)
						
						if data[""extra""] then
							
							data[""func""](data[""extra""])
							
						else
							
							data[""func""]()
							
						end
						
						return true
						
					end
					
				end
				
			end
			
		end
		
		return false
		
	end
	
	return self
	
end

local Button = classButton() -- Set the button Api.


function MakeButtons() -- To make the buttons.
	z = 2
	for i in pairs(Addresses) do -- For the addresses
		z = z + 1
		MenuScreen.setCursorPos(2, z)
		if i <= 9 then
			Text = string.format(""%3i%s%s"", i, "" = "", Addresses[i].Name) -- Set text
			Button:setButton(Text, dial, 2, MenuScreenX - 1, z, z, true, Addresses[i]) -- Make a button with the text and use some locals to set heigh and width. (Text, function, xmin, xmax, ymin, ymax, Visable, extra for the funtion like Funtion -> Dail(extra -> addresses(1))).
		end
		
		
		-- This is for if there are more then 9 addresses.
		-- if i > 9 then
			-- if i == 10 then
				-- Text = string.format(""%s%s%s"", ""A"", "" = "", Addresses[i].Name)
				-- Button:setButton(Text, dial, 2, MenuScreenX - 1, z, z, true, Addresses[i])
			-- elseif i == 11 then
				-- Text = string.format(""%s%s%s"", ""B"", "" = "", Addresses[i].Name)
				-- Button:setButton(Text, dial, 2, MenuScreenX - 1, z, z, true, Addresses[i])
			-- end
		-- end
	end
	
	if Monitor then -- If monitor found do.
		MenuScreen.setCursorPos(2, z+2)
		Text = ""  M = Change Screen""
		Button:setButton(Text, ChangeMonitor, 2, MenuScreenX - 1, z+2, z+2, true)
		MenuScreen.setCursorPos(2, z+3)
		Text = ""  R = Reset""
		Button:setButton(Text, Resset, 2, MenuScreenX - 1, z+3, z+3, true)
		MenuScreen.setCursorPos(2, z+4)
		Text = ""  Q = Quit Program""
		Button:setButton(Text, Quitt, 2, MenuScreenX - 1, z+4, z+4, true)
	else -- If no monitor found do.
		MenuScreen.setCursorPos(2, z+3)
		Text = ""  R = Reset""
		Button:setButton(Text, Resset, 2, MenuScreenX - 1, z+3, z+3, true)
		MenuScreen.setCursorPos(2, z+4)
		Text = ""  Q = Quit Program""
		Button:setButton(Text, Quitt, 2, MenuScreenX - 1, z+4, z+4, true)
	end
	
end

function Buttonshow(What) -- To set a button to visable or not.
	for i in pairs(Addresses) do
		if i <= 9 then
			Text = string.format(""%3i%s%s"", i, "" = "", Addresses[i].Name)
			Button:setButtonShow(Text, What)
		end
	end
end


function Recount() -- When change monitor to screen or back, it need to recount every thing.
	
	if MonitorState == ""T"" then
		X, Y = term.getSize()
	elseif MonitorState == ""M"" then
		Monitor.setTextScale(1)
		X, Y = Monitor.getSize()
	end
	
	X2, Y2 = X / 2, Y /2
	a = X + 1 - X2
	b = Y + 1 - Y2
	
	MenuScreen.reposition(1,1,X2,Y,term.current())
	MenuScreenX, MenuScreenY = MenuScreen.getSize()
	MenuScreenX2, MenuScreenY2 = MenuScreenX/2, MenuScreenY/2
	
	DailScreen.reposition(X2+1,1,a,Y2,term.current())
	DailScreenX, DailScreenY = DailScreen.getSize()
	DailScreenX2, DailScreenY2 = DailScreenX/2, DailScreenY/2
	
	IncomingScreen.reposition(X2+1,Y2+1,a,b,term.current())
	IncomingScreenX, IncomingScreenY = IncomingScreen.getSize()
	IncomingScreenX2, IncomingScreenY2 = IncomingScreenX/2, IncomingScreenY/2
	
end

function ChangeMonitor() -- When change monitor to screen or back.
	if MonitorState == ""T"" and Monitor then
		term.setBackgroundColour(colours.black)
		CLS()
		OldTerm = term.redirect(Monitor) -- Set term in oldterm and change to monitor
		MonitorState = ""M""
		Recount()
		term.setBackgroundColour(colours.blue)
	elseif MonitorState == ""M"" and Monitor then
		term.setBackgroundColour(colours.black)
		CLS()
		test = term.redirect(OldTerm) -- Set monitor in test and change back to term
		MonitorState = ""T""
		Recount()
		term.setBackgroundColour(colours.blue)
	end	
end



function SaveFile() -- Save the adresses in a file
	file = fs.open(""Addresses.txt"", ""w"")
	file.write(textutils.serialize(Addresses))
	file.close()
end

function dial(address) -- Dial to the gate
   local a = address.Address
   local addressLength = #a
   local start = interface.getChevronsEngaged() + 1
   
   Buttonshow(false)
   MenuScreen.clear()
   
   term.setBackgroundColour(colours.green)
   term.setTextColour(colours.black)
   
   DailScreen.clear()
   
    for chevron = start,addressLength,1 do
		
        local symbol = address.Address[chevron]
        
        if chevron % 2 == 0 then
            interface.rotateClockwise(symbol)
        else
            interface.rotateAntiClockwise(symbol)
        end
        
		DailScreen.clear()
		DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
		print(""Dailing:"",address.Name)
		DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
		print(""Symbol:"",chevron,"" = "",symbol)
		DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 + 1)
		print(""State: Locating"")
		
		while(not interface.isCurrentSymbol(symbol)) do
            sleep(0)
        end
		
		if interface.openChevron() == 11 then
			
		    DailScreen.clear()
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
			print(""Dailing:"",address.Name)
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
			print(""Symbol:"",chevron,"" = "",symbol)
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 + 1)
			print(""State: Lock On"")
			sleep(1)
		end
		
		if interface.closeChevron() == 1 then
			
			DailScreen.clear()
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
			print(""Dailing:"",address.Name)
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
			print(""Symbol:"",chevron,"" = "",symbol)
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 + 1)
			print(""State: Locked"")
			sleep(1)
		end
		
		if chevron == addressLength then
			
			DailScreen.clear()
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
			print(""Opening portal to:"")
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
			print(address.Name)
			sleep(3)
			DailScreen.clear()
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
			print(""Portal Open to"")
			DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
			print(address.Name)
			term.setBackgroundColour(colours.red)
			IncomingScreen.clear()
			IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 - 1)
			print(""Incoming Portal from "")
			IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2)
			print(""?"")
			IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 + 1)
			print(""Portal Open True"")
			while interface.isStargateConnected() do
				timer = os.startTimer(3)
				local Event, p1, p2, p3, p4, p5 = os.pullEvent()
				if Event == ""timer"" then
					sleep(0)
				elseif Event == ""key"" then
					if p1 == keys.zero or p1 == keys.numPad0 then
						interface.disconnectStargate()
					end
				end
			end
		end
    end
	
	term.setBackgroundColour(colours.blue)
    term.setTextColour(colours.white)
	
end

function Incoming() -- On incoming wormhole
	
	term.setBackgroundColour(colours.red)
	term.setTextColour(colours.black)
	
	MenuScreen.clear()
	
	IncomingScreen.clear()
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 - 1)
	print(""Incoming Portal from "")
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2)
	print(""?"")
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 + 1)
	print(""Portal Open True"")
	while interface.isStargateConnected() do
		timer = os.startTimer(1)
		local Event, p1, p2, p3, p4, p5 = os.pullEvent()
		if Event == ""timer"" then
			sleep(0)
		elseif Event == ""key"" then
			if p1 == keys.zero or p1 == keys.numPad0 then
				interface.disconnectStargate() -- close the gate
			end
		end
	end
	IncomingScreen.clear()
	term.setBackgroundColour(colours.blue)
	term.setTextColour(colours.white)
	CLS()
end

function AddAddress() -- Add address
	
	CLS()
	setCurs(1,Y2)
	term.write(""Name: "")
	local name = io.read()
	
	CLS()
	setCurs(1,Y2)
	term.write(""Close with a zero"")
	setCurs(1,Y2+1)
	term.write(""Adress A:"")
	local A = tonumber(io.read())
	local B
	local C
	local D
	local E
	local F
	local G
	local H
	local I
	
	if A ~= 0 and A ~= nil then
		CLS()
		setCurs(1,Y2)
		term.write(""Close with a zero"")
		setCurs(1,Y2+1)
		term.write(""Adress B:"")
		B = tonumber(io.read())
	end
	
	if B ~= 0 and B ~= nil then
		CLS()
		setCurs(1,Y2)
		term.write(""Close with a zero"")
		setCurs(1,Y2+1)
		term.write(""Adress C:"")
		C = tonumber(io.read())
	end
	
	if C ~= 0 and C ~= nil then
		CLS()
		setCurs(1,Y2)
		term.write(""Close with a zero"")
		setCurs(1,Y2+1)
		term.write(""Adress D:"")
		D = tonumber(io.read())
	end
	
	if D ~= 0 and D ~= nil then
		CLS()
		setCurs(1,Y2)
		term.write(""Close with a zero"")
		setCurs(1,Y2+1)
		term.write(""Adress E:"")
		E = tonumber(io.read())
	end
	
	if E ~= 0 and E ~= nil then
		CLS()
		setCurs(1,Y2)
		term.write(""Close with a zero"")
		setCurs(1,Y2+1)
		term.write(""Adress F:"")
		F = tonumber(io.read())
	end
	
	if F ~= 0 and F ~= nil then
		CLS()
		setCurs(1,Y2)
		term.write(""Close with a zero"")
		setCurs(1,Y2+1)
		term.write(""Adress G:"")
		G = tonumber(io.read())
	end
	
	if G ~= 0 and G ~= nil then
		CLS()
		setCurs(1,Y2)
		term.write(""Close with a zero"")
		setCurs(1,Y2+1)
		term.write(""Adress H:"")
		H = tonumber(io.read())
	end
	
	if H ~= 0 and H ~= nil then
		CLS()
		setCurs(1,Y2)
		term.write(""Close with a zero"")
		setCurs(1,Y2+1)
		term.write(""Adress I:"")
		I = tonumber(io.read())
	end
	
	local Data = { Name = tostring(name), Address = {A, B, C, D, E, F, G, H, I} }
	
	table.insert(Addresses, Data)
	
	SaveFile()
end

function Resset() -- Reset the gate. Like if crashed while dialing.
	Buttonshow(false)
    MenuScreen.clear()
	interface.closeChevron()
	sleep(1)
	interface.rotateClockwise(0)
	while(not interface.isCurrentSymbol(0)) do
		sleep(0)
	end
	interface.openChevron()
	sleep(1)
	interface.closeChevron()
	sleep(1)
	
	if interface.isStargateConnected() then
		interface.disconnectStargate()
	end
	
	interface.closeChevron()
	sleep(1)
	interface.rotateClockwise(0)
	while(not interface.isCurrentSymbol(0)) do
		sleep(0)
	end
	interface.openChevron()
	sleep(1)
	interface.closeChevron()
	sleep(1)
	
	if interface.isStargateConnected() then
		interface.disconnectStargate()
	end
	term.setBackgroundColour(colours.blue)
    term.setTextColour(colours.white)
end

function Quitt() -- Quit the program and reboot the computer
	Loop = false
	CLS()
	setCurs(1, 1)
end


MakeButtons() -- Go to and do

CLS()
MenuScreen.clear()

while Loop do
	
	timer = os.startTimer(1) -- Start a timer
	
	term.setBackgroundColour(colours.blue)
	term.setTextColour(colours.white)
	
	MenuScreen.setCursorPos(2, 1)
	print(""Awaiting input:"")
	
	Button:onScreen()
	
	term.setBackgroundColour(colours.green)
	term.setTextColour(colours.black)
	
	DailScreen.clear()
	DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 - 1)
	print(""Dailing:"")
	DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2)
	print(""Symbol:"")
	DailScreen.setCursorPos(DailScreenX2 - 10, DailScreenY2 + 1)
	print(""State:"")
	
	term.setBackgroundColour(colours.red)
	term.setTextColour(colours.black)
	
	IncomingScreen.clear()
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 - 1)
	print(""Incoming Portal from "")
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2)
	print(""?"")
	IncomingScreen.setCursorPos(IncomingScreenX2 - 10, IncomingScreenY2 + 1)
	print(""Portal Open False"")
	
	term.setBackgroundColour(colours.blue)
	term.setTextColour(colours.white)
	
	local Event, p1, p2, p3, p4, p5 = os.pullEvent()
	
	if Event == ""key"" then -- wWen a key is pressed
		
		MenuScreen.clear()
		
		if p1 == keys.one or p1 == keys.numPad1 then -- Dial to
			dial(Addresses[1])
		elseif p1 == keys.two or p1 == keys.numPad2 then -- Dial to
			dial(Addresses[2])
		elseif p1 == keys.three or p1 == keys.numPad3 then -- Dial to
			dial(Addresses[3])
		elseif p1 == keys.four or p1 == keys.numPad4 then -- Dial to
			dial(Addresses[4])
		elseif p1 == keys.five or p1 == keys.numPad5 then -- Dial to
			dial(Addresses[5])
		elseif p1 == keys.six or p1 == keys.numPad6 then -- Dial to
			dial(Addresses[6])
		-- elseif p1 == keys.a then -- Dial to
			-- dial(Addresses[10])
		elseif p1 == keys.m and Monitor then -- Change to monitor or back to terminal
			ChangeMonitor()
		elseif p1== keys.equals then -- Add address
			AddAddress()
		elseif p1 == keys.q then -- Quit
			Quitt()
		elseif p1 == keys.r then -- Reset
			Resset()
		elseif p1 == keys.zero or p1 == keys.numPad0 then -- Dissconnect
			interface.disconnectStargate()
		end
		
		Buttonshow(true)
		DailScreen.clear()
		CLS()
		
	elseif Event == ""mouse_click"" and MonitorState == ""T"" then -- For the buttons when clicked on them
		
		MenuScreen.clear()
		
		local Buton, MX, MY = p1, p2, p3
        
        Button:buttonPressed(MX, MY)
		
		Buttonshow(true)
		DailScreen.clear()
		CLS()
		
	elseif Event == ""monitor_touch"" and MonitorState == ""M"" then -- For the buttons when clicked on them
		
		MenuScreen.clear()
		
        local Buton, MX, MY = p1, p2, p3
        
        Button:buttonPressed(MX, MY)
        
		Buttonshow(true)
		DailScreen.clear()
		CLS()
		
	elseif Event == ""timer"" then -- when the timer expires
		
		if interface.isStargateConnected() == true then
			Buttonshow(false)
			Incoming()
			Buttonshow(true)
		end
		
		sleep(0)
		
	end
	
end


os.reboot()
"
sPKYCMbn,6 / f) - Architect Arithmetic - Great Mosque of Mecca with one Method,IvanITD,C#,Wednesday 24th of January 2024 07:12:27 PM CDT,"namespace ArchitectArithmeticGreatMosqueOfMeccaOneMethod
{
    class Program
    {
        static void Main(string[] args)
        {
            CalculateTotalCost();
        }

        static void CalculateTotalCost(
            double length1 = 284,
            double width1 = 264,
            double length2 = 106,
            double width2 = 180,
            double bottom = 264,
            double height = 84
            )
            {
                double area1 = length1 * width1;
                double area2 = length2 * width2;
                double area = 0.5 * bottom * height;

                double totalShapeArea = area1 + area2 + area;

                double flooringPrice = 180;

                double totalCost = totalShapeArea * flooringPrice;

                Console.WriteLine($""The total cost for the flooring material, for the Great Mosque of Mecca is: {Math.Round(totalCost):F2} riyal!"");
            }
    }
}"
vgDPAJpX,6 / e) - Architect Arithmetic - Great Mosque of Mecca,IvanITD,C#,Wednesday 24th of January 2024 07:11:24 PM CDT,"namespace ArchitectArithmeticGreatMosqueOfMecca
{
    class Program
    {
        // In this section we will write a program tha gives the total cost of the flooring material for the Great Mosque of Mecca, in Mecca, Saudi Arabia
        static void Main(string[] args)
        {
            // Here I need to get the length and width of the first rectangle and return the area!
            double length1 = 284;
            double width1 = 264;

            // Here I get the first rectangle area back from the method!
            double firstRectangleArea = FirstRectangle(length1, width1);

            // Here I need to get the length and width of the second rectangle and return the area!
            double length2 = 106;
            double width2 = 180;

            // Here I get the second rectangle area back from the method!
            double secondRectangleArea = SecondRectangle(length2, width2);

            // Here I need to get the bottom and height of the first triangle and return the area!
            double bottom = 264;
            double height = 84;

            // Here I get the triangle are back from the method!
            double triangleArea = Triangle(bottom, height);
            
            // Now we need to get the total shape area!
            double totalShapeArea = firstRectangleArea + secondRectangleArea + triangleArea;

            // Here we get the floor material pricing
            double floorMaterialPricing = 180;

            // Now we multiply the total shape area with the floor pricing in order to get the total cost!
            double totalCost = totalShapeArea * floorMaterialPricing;

            // And now we need to print the result!
            Console.WriteLine($""The total cost for the flooring material, for the Great Mosque of Mecca is: {Math.Round(totalCost):F2} riyal!"");
            // The next step is to round the result to the nearest integer!
        }

        static double FirstRectangle(double length1, double width1)
        {
            double area1 = length1 * width1;
            return area1;
        }

        static double SecondRectangle(double length2, double width2)
        {
            double area2 = length2 * width2;
            return area2;
        }

        static double Triangle(double bottom, double height)
        {
            double area = 0.5 * bottom * height;
            return area;
        }
    }
}"
9AmL5Rws,2024-01-24_stats.json,rdp_snitch,JSON,Wednesday 24th of January 2024 06:18:24 PM CDT,"{
  ""ip"": {
    ""84.9.179.179"": 6,
    ""80.243.58.249"": 3,
    ""216.73.161.81"": 3,
    ""106.58.178.111"": 12,
    ""203.56.40.167"": 12,
    ""194.165.17.21"": 57,
    ""36.111.146.78"": 6,
    ""43.133.56.30"": 6,
    ""150.223.76.57"": 9,
    ""222.93.104.67"": 12,
    ""117.145.27.42"": 18,
    ""43.243.136.202"": 39,
    ""111.173.80.147"": 12,
    ""203.56.4.242"": 6,
    ""111.161.41.132"": 21,
    ""103.240.84.186"": 9,
    ""101.36.112.125"": 3,
    ""27.8.44.19"": 27,
    ""62.6.252.50"": 3,
    ""110.40.34.231"": 39,
    ""121.5.74.35"": 3,
    ""124.67.254.109"": 36,
    ""134.175.53.186"": 3,
    ""109.69.7.157"": 27,
    ""106.58.164.84"": 15,
    ""42.193.192.91"": 3,
    ""101.32.126.66"": 9,
    ""12.193.127.18"": 27,
    ""211.91.60.69"": 9,
    ""95.130.227.198"": 6,
    ""122.227.146.74"": 15,
    ""113.200.222.57"": 15,
    ""124.67.115.210"": 15,
    ""101.43.49.131"": 3,
    ""103.215.81.133"": 9,
    ""45.87.212.184"": 3,
    ""36.111.174.56"": 39,
    ""101.33.237.209"": 3,
    ""45.141.26.228"": 9,
    ""106.225.199.92"": 3,
    ""103.39.222.217"": 9,
    ""106.58.212.201"": 3,
    ""172.233.17.43"": 3,
    ""208.53.61.115"": 6,
    ""106.75.20.182"": 6,
    ""219.144.67.36"": 6,
    ""106.58.165.88"": 9,
    ""27.128.239.46"": 6,
    ""140.246.215.173"": 6,
    ""45.141.26.52"": 3,
    ""205.210.31.109"": 9,
    ""121.17.7.75"": 3,
    ""150.223.35.239"": 6,
    ""62.204.41.195"": 18,
    ""45.227.254.8"": 6,
    ""82.32.227.142"": 3,
    ""216.202.197.116"": 21,
    ""120.202.49.41"": 3,
    ""222.219.129.74"": 6,
    ""43.128.12.208"": 3,
    ""113.30.188.235"": 3,
    ""43.134.171.213"": 6,
    ""125.88.211.59"": 9,
    ""141.98.9.34"": 3,
    ""45.227.254.49"": 12,
    ""106.58.217.61"": 12,
    ""150.223.46.21"": 9,
    ""80.151.251.216"": 21,
    ""150.223.79.15"": 3,
    ""111.231.15.224"": 6,
    ""111.173.80.148"": 12,
    ""103.245.195.202"": 27,
    ""150.223.13.195"": 6,
    ""106.225.199.24"": 9,
    ""216.73.161.24"": 3,
    ""115.236.75.10"": 6,
    ""180.76.153.250"": 6,
    ""222.219.240.13"": 9,
    ""113.108.8.125"": 3,
    ""185.170.144.3"": 6,
    ""203.57.39.224"": 9,
    ""14.18.41.26"": 9,
    ""101.32.116.25"": 9,
    ""195.97.20.99"": 6,
    ""106.58.212.195"": 6,
    ""106.58.164.95"": 6,
    ""116.73.243.187"": 6,
    ""150.223.66.55"": 3,
    ""106.116.169.71"": 3,
    ""218.90.120.19"": 9,
    ""205.210.31.111"": 9,
    ""175.4.26.179"": 12,
    ""43.134.33.208"": 3,
    ""185.106.176.8"": 6,
    ""20.127.108.193"": 3,
    ""183.134.89.41"": 9,
    ""106.58.210.135"": 6,
    ""106.58.221.13"": 3,
    ""1.168.138.101"": 3,
    ""47.94.109.53"": 27,
    ""220.76.251.176"": 18,
    ""52.80.19.192"": 6,
    ""39.98.127.243"": 12,
    ""43.134.0.225"": 6,
    ""106.75.123.252"": 6,
    ""117.33.174.14"": 3,
    ""2.57.149.186"": 9,
    ""194.165.16.73"": 6,
    ""182.61.55.68"": 6,
    ""103.210.237.233"": 3,
    ""176.111.174.250"": 9,
    ""123.58.207.151"": 3,
    ""212.186.143.100"": 6,
    ""106.58.178.2"": 9,
    ""106.58.211.156"": 6,
    ""196.190.117.7"": 3,
    ""198.235.24.87"": 9,
    ""42.51.39.209"": 3,
    ""37.19.200.118"": 3,
    ""169.150.254.77"": 9,
    ""1.82.238.130"": 3,
    ""147.135.91.23"": 12,
    ""150.223.32.106"": 3,
    ""118.193.44.118"": 6,
    ""74.105.22.131"": 15,
    ""203.57.46.218"": 6,
    ""87.251.75.64"": 9,
    ""106.58.217.149"": 6,
    ""36.111.166.97"": 3,
    ""220.76.61.114"": 3,
    ""106.58.184.58"": 3,
    ""45.141.26.68"": 3,
    ""106.58.219.212"": 3,
    ""61.171.113.104"": 3,
    ""63.135.161.145"": 3,
    ""103.38.236.147"": 15,
    ""205.210.31.174"": 9,
    ""87.191.150.194"": 3,
    ""120.48.64.252"": 6
  },
  ""asn"": {
    ""AS25310"": 6,
    ""AS21413"": 3,
    ""AS206092"": 9,
    ""AS4134"": 177,
    ""AS58519"": 126,
    ""AS48721"": 63,
    ""AS132203"": 42,
    ""AS9808"": 21,
    ""AS4808"": 39,
    ""AS148981"": 24,
    ""AS4837"": 135,
    ""AS135377"": 12,
    ""AS2856"": 3,
    ""AS38283"": 39,
    ""AS45090"": 21,
    ""AS21183"": 27,
    ""AS7018"": 27,
    ""AS35682"": 6,
    ""AS55933"": 9,
    ""AS9009"": 3,
    ""AS142299"": 15,
    ""AS134238"": 12,
    ""AS4816"": 9,
    ""AS63949"": 3,
    ""AS17341"": 6,
    ""AS23724"": 12,
    ""AS134768"": 12,
    ""AS396982"": 36,
    ""AS59425"": 18,
    ""AS267784"": 18,
    ""AS5089"": 3,
    ""AS3356"": 21,
    ""AS41436"": 3,
    ""AS58466"": 9,
    ""AS209588"": 3,
    ""AS3320"": 24,
    ""AS9541"": 27,
    ""AS38365"": 18,
    ""AS197414"": 6,
    ""AS3329"": 6,
    ""AS17488"": 6,
    ""AS63838"": 12,
    ""AS42960"": 6,
    ""AS8075"": 3,
    ""AS58461"": 9,
    ""AS3462"": 3,
    ""AS37963"": 39,
    ""AS4766"": 21,
    ""AS55960"": 6,
    ""AS208312"": 9,
    ""AS142403"": 3,
    ""AS57523"": 9,
    ""AS8412"": 6,
    ""AS24757"": 3,
    ""AS56005"": 3,
    ""AS212238"": 12,
    ""AS16276"": 12,
    ""AS701"": 15,
    ""AS208091"": 9,
    ""AS4812"": 3,
    ""AS149148"": 15
  },
  ""isp"": {
    ""Bulldog Communications"": 6,
    ""envia TEL GmbH"": 3,
    ""Ipxo Limited"": 6,
    ""Chinanet"": 177,
    ""Cloud Computing Corporation"": 126,
    ""Flyservers S.A."": 84,
    ""Aceville Pte.ltd"": 33,
    ""China Mobile communications corporation"": 21,
    ""China Unicom Beijing Province Network"": 39,
    ""China Telecom"": 33,
    ""China Unicom Tianjin Province Network"": 21,
    ""China Unicom CHINA169 Network"": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 12,
    ""China Unicom Chongqing Province Network"": 27,
    ""British Telecommunications PLC"": 3,
    ""CHINANET SiChuan Telecom Internet Data Center"": 39,
    ""China Internet Network Information Center"": 6,
    ""CNC Group CHINA169 Neimeng Province Network"": 51,
    ""Shenzhen Tencent Computer Systems Company Limited"": 24,
    ""Vodafone Network"": 27,
    ""AT&T Services, Inc."": 27,
    ""CHINA UNICOM China169 Backbone"": 12,
    ""Best Internet Solution XK"": 6,
    ""CNC Group CHINA169 Shannxi Province Network"": 15,
    ""Cloudie Limited"": 9,
    ""M247 Europe SRL"": 3,
    ""CLOUDFOREST CO., LTD"": 15,
    ""CHINANET Jiangx province IDC network"": 12,
    ""China Telecom (Group)"": 12,
    ""Akamai Technologies, Inc."": 3,
    ""C7 Data Centers"": 6,
    ""UCLOUD"": 12,
    ""CHINANET SHAANXI province Cloud Base network"": 12,
    ""Google LLC"": 36,
    ""Horizon LLC"": 18,
    ""Virgin Media"": 3,
    ""Level 3 Communications"": 21,
    ""Kamatera Inc"": 3,
    ""Deutsche Telekom AG"": 24,
    ""Cyber Internet Services (Private) Limited"": 27,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 18,
    ""Xhost Internet Solutions LP"": 15,
    ""CHINANET Guangdong province network"": 9,
    ""HOL"": 6,
    ""Hathway IP over Cable Internet Access"": 6,
    ""Hengyang"": 12,
    ""VH-GLOBAL"": 6,
    ""Microsoft Corporation"": 3,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""Hangzhou Alibaba Advertising Co"": 39,
    ""Korea Telecom"": 21,
    ""Beijing Guanghuan Xinwang Digital"": 6,
    ""Red Byte LLC"": 9,
    ""Yisu Cloud LTD"": 3,
    ""Chang Way Technologies Co. Limited"": 9,
    ""T-Mobile Austria GmbH"": 6,
    ""Ethiotelecom"": 3,
    ""China Unicom Henan Province network"": 3,
    ""Datacamp Limited"": 12,
    ""OVH SAS"": 12,
    ""Verizon Business"": 15,
    ""Rockion LLC"": 3,
    ""Phu Hai Computer Co., Ltd"": 15
  },
  ""org"": {
    ""Unknown"": 213,
    ""envia.tel GmbH"": 3,
    ""Bandito Networks"": 6,
    ""Chinanet YN"": 114,
    ""Chinanet FJ"": 33,
    ""Flyservers S.A"": 63,
    ""Chinanet ZJ"": 48,
    ""Chinanet SD"": 45,
    ""Chinanet JS"": 21,
    ""China Mobile"": 21,
    ""Beijing yunchuang communication Technology Co."": 39,
    ""Chinanet HB"": 24,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 9,
    ""Btnet"": 3,
    ""Chengdu Giant Times Technology Co., Ltd"": 39,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 12,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 9,
    ""ATT SERVICES INC- PEG"": 27,
    ""Unicom"": 9,
    ""Best Internet Solution XK"": 6,
    ""Ningbo chaoji mamawangluojishu ltd"": 15,
    ""Netads Online Limited"": 9,
    ""M247 LTD"": 3,
    ""Cloudforest CO., LTD"": 15,
    ""Chinanet JX"": 12,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 9,
    ""Akamai Technologies, Inc."": 3,
    ""VegaDigital Solutions"": 6,
    ""Shanghai UCloud Information Technology Company Limited"": 12,
    ""Chinanet SN"": 12,
    ""Chinanet HE"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""HS City Authority"": 3,
    ""Horizon LLC"": 18,
    ""UAB Host Baltic"": 18,
    ""Fort Wayne Internet, LLC"": 21,
    ""Cloudwebmanage EU"": 3,
    ""Alviva Holding Limited"": 3,
    ""Deutsche Telekom AG"": 24,
    ""Cyber Internet Services Pakistan"": 27,
    ""Hangzhou xiaoshan public transportation co., LTD"": 6,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 18,
    ""Chinanet GD"": 12,
    ""Xhostis"": 6,
    ""Koumakis Emm. S.A."": 6,
    ""Hathway Cable and Datacom Limited"": 6,
    ""Chinanet HN"": 12,
    ""Tencent Cloud Computing"": 9,
    ""VH Global Limited"": 6,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""Aliyun Computing Co., LTD"": 39,
    ""Kornet"": 18,
    ""AWS EC2 (cn-north-1)"": 6,
    ""Chang Way Technologies Co. Limited"": 18,
    ""HK Kwaifong Group Limited"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""LBR GmbH"": 6,
    ""Henan Telcom Union Technology Co., LTD"": 3,
    ""Cdnext DAL"": 12,
    ""OVH US LLC"": 12,
    ""Verizon Business"": 15,
    ""Xhost Internet Solutions"": 9,
    ""Korea Telecom"": 3,
    ""Chinanet SH"": 3,
    ""Ipxo LLC"": 3,
    ""Phu Hai Computer Co., Ltd"": 15
  },
  ""regionName"": {
    ""England"": 12,
    ""Brandenburg"": 3,
    ""New York"": 9,
    ""Yunnan"": 114,
    ""Fujian"": 48,
    ""Kaunas"": 63,
    ""Zhejiang"": 78,
    ""North West"": 21,
    ""Shandong"": 45,
    ""Jiangsu"": 21,
    ""Guangdong"": 60,
    ""Beijing"": 135,
    ""Hubei"": 24,
    ""Tianjin"": 21,
    ""Central and Western District"": 27,
    ""Chongqing"": 27,
    ""Sichuan"": 39,
    ""Inner Mongolia"": 36,
    ""Tirana"": 27,
    ""Central Singapore"": 18,
    ""Texas"": 39,
    ""Tashkent"": 6,
    ""Shaanxi"": 18,
    ""Shanghai"": 12,
    ""Hesse"": 3,
    ""Bangkok"": 15,
    ""Jiangxi"": 12,
    ""Sao Paulo"": 3,
    ""Utah"": 6,
    ""Shanxi"": 9,
    ""Hebei"": 12,
    ""California"": 36,
    ""Moscow"": 27,
    ""Vilnius"": 18,
    ""Scotland"": 3,
    ""Indiana"": 21,
    ""North Holland"": 21,
    ""Bavaria"": 21,
    ""Sindh"": 27,
    ""Attica"": 6,
    ""Karnataka"": 6,
    ""Hunan"": 12,
    ""Virginia"": 15,
    ""Taichung City"": 3,
    ""Seoul"": 21,
    ""Lesser Poland"": 9,
    ""Tsuen Wan District"": 3,
    ""Vienna"": 6,
    ""Addis Ababa"": 3,
    ""Henan"": 3,
    ""New Jersey"": 15,
    ""Hanoi"": 15,
    ""Rheinland-Pfalz"": 3
  },
  ""country"": {
    ""United Kingdom"": 15,
    ""Germany"": 30,
    ""United States"": 141,
    ""China"": 726,
    ""Lithuania"": 81,
    ""Singapore"": 39,
    ""Hong Kong"": 30,
    ""Albania"": 27,
    ""Uzbekistan"": 6,
    ""Thailand"": 15,
    ""Brazil"": 3,
    ""Russia"": 27,
    ""The Netherlands"": 21,
    ""Pakistan"": 27,
    ""Greece"": 6,
    ""India"": 6,
    ""Taiwan"": 3,
    ""South Korea"": 21,
    ""Poland"": 9,
    ""Austria"": 6,
    ""Ethiopia"": 3,
    ""Vietnam"": 15
  },
  ""account"": {
    ""142.93.8.59"": 1008,
    ""(empty)"": 12,
    ""Test"": 48,
    ""hello"": 84,
    ""cnbPTTNrz"": 3,
    ""IgptRb"": 3,
    ""nMhvfl"": 3,
    ""Administr"": 27,
    ""MNKgsKuxe"": 3,
    ""VXAVjH"": 3,
    ""vGLgLI"": 3,
    ""hgdffbrq"": 18,
    ""Domain"": 21,
    ""Administrator"": 3,
    ""rjaSqvBSM"": 3,
    ""silyyl"": 3,
    ""RqIMZj"": 3,
    ""pcyRCCDxT"": 3,
    ""tIxMEm"": 3,
    ""nQFXqC"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1257
  },
  ""client_build"": {
    ""Unknown"": 1257
  },
  ""client_name"": {
    ""Unknown"": 1257
  },
  ""ip_type"": {
    ""Unknown"": 858,
    ""mobile & proxy"": 6,
    ""hosting"": 300,
    ""mobile"": 33,
    ""hosting & proxy"": 18,
    ""proxy"": 42
  }
}"
6xvmRV85,2024-01-24_stats.json,rdp_snitch,JSON,Wednesday 24th of January 2024 06:16:17 PM CDT,"{
  ""ip"": {
    ""84.9.179.179"": 4,
    ""80.243.58.249"": 2,
    ""216.73.161.81"": 2,
    ""106.58.178.111"": 8,
    ""203.56.40.167"": 8,
    ""194.165.17.21"": 38,
    ""36.111.146.78"": 4,
    ""43.133.56.30"": 4,
    ""150.223.76.57"": 6,
    ""222.93.104.67"": 8,
    ""117.145.27.42"": 12,
    ""43.243.136.202"": 26,
    ""111.173.80.147"": 8,
    ""203.56.4.242"": 4,
    ""111.161.41.132"": 14,
    ""103.240.84.186"": 6,
    ""101.36.112.125"": 2,
    ""27.8.44.19"": 18,
    ""62.6.252.50"": 2,
    ""110.40.34.231"": 26,
    ""121.5.74.35"": 2,
    ""124.67.254.109"": 24,
    ""134.175.53.186"": 2,
    ""109.69.7.157"": 18,
    ""106.58.164.84"": 10,
    ""42.193.192.91"": 2,
    ""101.32.126.66"": 6,
    ""12.193.127.18"": 18,
    ""211.91.60.69"": 6,
    ""95.130.227.198"": 4,
    ""122.227.146.74"": 10,
    ""113.200.222.57"": 10,
    ""124.67.115.210"": 10,
    ""101.43.49.131"": 2,
    ""103.215.81.133"": 6,
    ""45.87.212.184"": 2,
    ""36.111.174.56"": 26,
    ""101.33.237.209"": 2,
    ""45.141.26.228"": 6,
    ""106.225.199.92"": 2,
    ""103.39.222.217"": 6,
    ""106.58.212.201"": 2,
    ""172.233.17.43"": 2,
    ""208.53.61.115"": 4,
    ""106.75.20.182"": 4,
    ""219.144.67.36"": 4,
    ""106.58.165.88"": 6,
    ""27.128.239.46"": 4,
    ""140.246.215.173"": 4,
    ""45.141.26.52"": 2,
    ""205.210.31.109"": 6,
    ""121.17.7.75"": 2,
    ""150.223.35.239"": 4,
    ""62.204.41.195"": 12,
    ""45.227.254.8"": 4,
    ""82.32.227.142"": 2,
    ""216.202.197.116"": 14,
    ""120.202.49.41"": 2,
    ""222.219.129.74"": 4,
    ""43.128.12.208"": 2,
    ""113.30.188.235"": 2,
    ""43.134.171.213"": 4,
    ""125.88.211.59"": 6,
    ""141.98.9.34"": 2,
    ""45.227.254.49"": 8,
    ""106.58.217.61"": 8,
    ""150.223.46.21"": 6,
    ""80.151.251.216"": 14,
    ""150.223.79.15"": 2,
    ""111.231.15.224"": 4,
    ""111.173.80.148"": 8,
    ""103.245.195.202"": 18,
    ""150.223.13.195"": 4,
    ""106.225.199.24"": 6,
    ""216.73.161.24"": 2,
    ""115.236.75.10"": 4,
    ""180.76.153.250"": 4,
    ""222.219.240.13"": 6,
    ""113.108.8.125"": 2,
    ""185.170.144.3"": 4,
    ""203.57.39.224"": 6,
    ""14.18.41.26"": 6,
    ""101.32.116.25"": 6,
    ""195.97.20.99"": 4,
    ""106.58.212.195"": 4,
    ""106.58.164.95"": 4,
    ""116.73.243.187"": 4,
    ""150.223.66.55"": 2,
    ""106.116.169.71"": 2,
    ""218.90.120.19"": 6,
    ""205.210.31.111"": 6,
    ""175.4.26.179"": 8,
    ""43.134.33.208"": 2,
    ""185.106.176.8"": 4,
    ""20.127.108.193"": 2,
    ""183.134.89.41"": 6,
    ""106.58.210.135"": 4,
    ""106.58.221.13"": 2,
    ""1.168.138.101"": 2,
    ""47.94.109.53"": 18,
    ""220.76.251.176"": 12,
    ""52.80.19.192"": 4,
    ""39.98.127.243"": 8,
    ""43.134.0.225"": 4,
    ""106.75.123.252"": 4,
    ""117.33.174.14"": 2,
    ""2.57.149.186"": 6,
    ""194.165.16.73"": 4,
    ""182.61.55.68"": 4,
    ""103.210.237.233"": 2,
    ""176.111.174.250"": 6,
    ""123.58.207.151"": 2,
    ""212.186.143.100"": 4,
    ""106.58.178.2"": 6,
    ""106.58.211.156"": 4,
    ""196.190.117.7"": 2,
    ""198.235.24.87"": 6,
    ""42.51.39.209"": 2,
    ""37.19.200.118"": 2,
    ""169.150.254.77"": 6,
    ""1.82.238.130"": 2,
    ""147.135.91.23"": 8,
    ""150.223.32.106"": 2,
    ""118.193.44.118"": 4,
    ""74.105.22.131"": 10,
    ""203.57.46.218"": 4,
    ""87.251.75.64"": 6,
    ""106.58.217.149"": 4,
    ""36.111.166.97"": 2,
    ""220.76.61.114"": 2,
    ""106.58.184.58"": 2,
    ""45.141.26.68"": 2,
    ""106.58.219.212"": 2,
    ""61.171.113.104"": 2,
    ""63.135.161.145"": 2,
    ""103.38.236.147"": 10,
    ""205.210.31.174"": 6,
    ""87.191.150.194"": 2,
    ""120.48.64.252"": 4
  },
  ""asn"": {
    ""AS25310"": 4,
    ""AS21413"": 2,
    ""AS206092"": 6,
    ""AS4134"": 118,
    ""AS58519"": 84,
    ""AS48721"": 42,
    ""AS132203"": 28,
    ""AS9808"": 14,
    ""AS4808"": 26,
    ""AS148981"": 16,
    ""AS4837"": 90,
    ""AS135377"": 8,
    ""AS2856"": 2,
    ""AS38283"": 26,
    ""AS45090"": 14,
    ""AS21183"": 18,
    ""AS7018"": 18,
    ""AS35682"": 4,
    ""AS55933"": 6,
    ""AS9009"": 2,
    ""AS142299"": 10,
    ""AS134238"": 8,
    ""AS4816"": 6,
    ""AS63949"": 2,
    ""AS17341"": 4,
    ""AS23724"": 8,
    ""AS134768"": 8,
    ""AS396982"": 24,
    ""AS59425"": 12,
    ""AS267784"": 12,
    ""AS5089"": 2,
    ""AS3356"": 14,
    ""AS41436"": 2,
    ""AS58466"": 6,
    ""AS209588"": 2,
    ""AS3320"": 16,
    ""AS9541"": 18,
    ""AS38365"": 12,
    ""AS197414"": 4,
    ""AS3329"": 4,
    ""AS17488"": 4,
    ""AS63838"": 8,
    ""AS42960"": 4,
    ""AS8075"": 2,
    ""AS58461"": 6,
    ""AS3462"": 2,
    ""AS37963"": 26,
    ""AS4766"": 14,
    ""AS55960"": 4,
    ""AS208312"": 6,
    ""AS142403"": 2,
    ""AS57523"": 6,
    ""AS8412"": 4,
    ""AS24757"": 2,
    ""AS56005"": 2,
    ""AS212238"": 8,
    ""AS16276"": 8,
    ""AS701"": 10,
    ""AS208091"": 6,
    ""AS4812"": 2,
    ""AS149148"": 10
  },
  ""isp"": {
    ""Bulldog Communications"": 4,
    ""envia TEL GmbH"": 2,
    ""Ipxo Limited"": 4,
    ""Chinanet"": 118,
    ""Cloud Computing Corporation"": 84,
    ""Flyservers S.A."": 56,
    ""Aceville Pte.ltd"": 22,
    ""China Mobile communications corporation"": 14,
    ""China Unicom Beijing Province Network"": 26,
    ""China Telecom"": 22,
    ""China Unicom Tianjin Province Network"": 14,
    ""China Unicom CHINA169 Network"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 8,
    ""China Unicom Chongqing Province Network"": 18,
    ""British Telecommunications PLC"": 2,
    ""CHINANET SiChuan Telecom Internet Data Center"": 26,
    ""China Internet Network Information Center"": 4,
    ""CNC Group CHINA169 Neimeng Province Network"": 34,
    ""Shenzhen Tencent Computer Systems Company Limited"": 16,
    ""Vodafone Network"": 18,
    ""AT&T Services, Inc."": 18,
    ""CHINA UNICOM China169 Backbone"": 8,
    ""Best Internet Solution XK"": 4,
    ""CNC Group CHINA169 Shannxi Province Network"": 10,
    ""Cloudie Limited"": 6,
    ""M247 Europe SRL"": 2,
    ""CLOUDFOREST CO., LTD"": 10,
    ""CHINANET Jiangx province IDC network"": 8,
    ""China Telecom (Group)"": 8,
    ""Akamai Technologies, Inc."": 2,
    ""C7 Data Centers"": 4,
    ""UCLOUD"": 8,
    ""CHINANET SHAANXI province Cloud Base network"": 8,
    ""Google LLC"": 24,
    ""Horizon LLC"": 12,
    ""Virgin Media"": 2,
    ""Level 3 Communications"": 14,
    ""Kamatera Inc"": 2,
    ""Deutsche Telekom AG"": 16,
    ""Cyber Internet Services (Private) Limited"": 18,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 12,
    ""Xhost Internet Solutions LP"": 10,
    ""CHINANET Guangdong province network"": 6,
    ""HOL"": 4,
    ""Hathway IP over Cable Internet Access"": 4,
    ""Hengyang"": 8,
    ""VH-GLOBAL"": 4,
    ""Microsoft Corporation"": 2,
    ""Chunghwa Telecom Co., Ltd."": 2,
    ""Hangzhou Alibaba Advertising Co"": 26,
    ""Korea Telecom"": 14,
    ""Beijing Guanghuan Xinwang Digital"": 4,
    ""Red Byte LLC"": 6,
    ""Yisu Cloud LTD"": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""T-Mobile Austria GmbH"": 4,
    ""Ethiotelecom"": 2,
    ""China Unicom Henan Province network"": 2,
    ""Datacamp Limited"": 8,
    ""OVH SAS"": 8,
    ""Verizon Business"": 10,
    ""Rockion LLC"": 2,
    ""Phu Hai Computer Co., Ltd"": 10
  },
  ""org"": {
    ""Unknown"": 142,
    ""envia.tel GmbH"": 2,
    ""Bandito Networks"": 4,
    ""Chinanet YN"": 76,
    ""Chinanet FJ"": 22,
    ""Flyservers S.A"": 42,
    ""Chinanet ZJ"": 32,
    ""Chinanet SD"": 30,
    ""Chinanet JS"": 14,
    ""China Mobile"": 14,
    ""Beijing yunchuang communication Technology Co."": 26,
    ""Chinanet HB"": 16,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Btnet"": 2,
    ""Chengdu Giant Times Technology Co., Ltd"": 26,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 8,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 6,
    ""ATT SERVICES INC- PEG"": 18,
    ""Unicom"": 6,
    ""Best Internet Solution XK"": 4,
    ""Ningbo chaoji mamawangluojishu ltd"": 10,
    ""Netads Online Limited"": 6,
    ""M247 LTD"": 2,
    ""Cloudforest CO., LTD"": 10,
    ""Chinanet JX"": 8,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 6,
    ""Akamai Technologies, Inc."": 2,
    ""VegaDigital Solutions"": 4,
    ""Shanghai UCloud Information Technology Company Limited"": 8,
    ""Chinanet SN"": 8,
    ""Chinanet HE"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""HS City Authority"": 2,
    ""Horizon LLC"": 12,
    ""UAB Host Baltic"": 12,
    ""Fort Wayne Internet, LLC"": 14,
    ""Cloudwebmanage EU"": 2,
    ""Alviva Holding Limited"": 2,
    ""Deutsche Telekom AG"": 16,
    ""Cyber Internet Services Pakistan"": 18,
    ""Hangzhou xiaoshan public transportation co., LTD"": 4,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 12,
    ""Chinanet GD"": 8,
    ""Xhostis"": 4,
    ""Koumakis Emm. S.A."": 4,
    ""Hathway Cable and Datacom Limited"": 4,
    ""Chinanet HN"": 8,
    ""Tencent Cloud Computing"": 6,
    ""VH Global Limited"": 4,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Chunghwa Telecom Co. Ltd."": 2,
    ""Aliyun Computing Co., LTD"": 26,
    ""Kornet"": 12,
    ""AWS EC2 (cn-north-1)"": 4,
    ""Chang Way Technologies Co. Limited"": 12,
    ""HK Kwaifong Group Limited"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""LBR GmbH"": 4,
    ""Henan Telcom Union Technology Co., LTD"": 2,
    ""Cdnext DAL"": 8,
    ""OVH US LLC"": 8,
    ""Verizon Business"": 10,
    ""Xhost Internet Solutions"": 6,
    ""Korea Telecom"": 2,
    ""Chinanet SH"": 2,
    ""Ipxo LLC"": 2,
    ""Phu Hai Computer Co., Ltd"": 10
  },
  ""regionName"": {
    ""England"": 8,
    ""Brandenburg"": 2,
    ""New York"": 6,
    ""Yunnan"": 76,
    ""Fujian"": 32,
    ""Kaunas"": 42,
    ""Zhejiang"": 52,
    ""North West"": 14,
    ""Shandong"": 30,
    ""Jiangsu"": 14,
    ""Guangdong"": 40,
    ""Beijing"": 90,
    ""Hubei"": 16,
    ""Tianjin"": 14,
    ""Central and Western District"": 18,
    ""Chongqing"": 18,
    ""Sichuan"": 26,
    ""Inner Mongolia"": 24,
    ""Tirana"": 18,
    ""Central Singapore"": 12,
    ""Texas"": 26,
    ""Tashkent"": 4,
    ""Shaanxi"": 12,
    ""Shanghai"": 8,
    ""Hesse"": 2,
    ""Bangkok"": 10,
    ""Jiangxi"": 8,
    ""Sao Paulo"": 2,
    ""Utah"": 4,
    ""Shanxi"": 6,
    ""Hebei"": 8,
    ""California"": 24,
    ""Moscow"": 18,
    ""Vilnius"": 12,
    ""Scotland"": 2,
    ""Indiana"": 14,
    ""North Holland"": 14,
    ""Bavaria"": 14,
    ""Sindh"": 18,
    ""Attica"": 4,
    ""Karnataka"": 4,
    ""Hunan"": 8,
    ""Virginia"": 10,
    ""Taichung City"": 2,
    ""Seoul"": 14,
    ""Lesser Poland"": 6,
    ""Tsuen Wan District"": 2,
    ""Vienna"": 4,
    ""Addis Ababa"": 2,
    ""Henan"": 2,
    ""New Jersey"": 10,
    ""Hanoi"": 10,
    ""Rheinland-Pfalz"": 2
  },
  ""country"": {
    ""United Kingdom"": 10,
    ""Germany"": 20,
    ""United States"": 94,
    ""China"": 484,
    ""Lithuania"": 54,
    ""Singapore"": 26,
    ""Hong Kong"": 20,
    ""Albania"": 18,
    ""Uzbekistan"": 4,
    ""Thailand"": 10,
    ""Brazil"": 2,
    ""Russia"": 18,
    ""The Netherlands"": 14,
    ""Pakistan"": 18,
    ""Greece"": 4,
    ""India"": 4,
    ""Taiwan"": 2,
    ""South Korea"": 14,
    ""Poland"": 6,
    ""Austria"": 4,
    ""Ethiopia"": 2,
    ""Vietnam"": 10
  },
  ""account"": {
    ""142.93.8.59"": 672,
    ""(empty)"": 8,
    ""Test"": 32,
    ""hello"": 56,
    ""cnbPTTNrz"": 2,
    ""IgptRb"": 2,
    ""nMhvfl"": 2,
    ""Administr"": 18,
    ""MNKgsKuxe"": 2,
    ""VXAVjH"": 2,
    ""vGLgLI"": 2,
    ""hgdffbrq"": 12,
    ""Domain"": 14,
    ""Administrator"": 2,
    ""rjaSqvBSM"": 2,
    ""silyyl"": 2,
    ""RqIMZj"": 2,
    ""pcyRCCDxT"": 2,
    ""tIxMEm"": 2,
    ""nQFXqC"": 2
  },
  ""keyboard"": {
    ""Unknown"": 838
  },
  ""client_build"": {
    ""Unknown"": 838
  },
  ""client_name"": {
    ""Unknown"": 838
  },
  ""ip_type"": {
    ""Unknown"": 572,
    ""mobile & proxy"": 4,
    ""hosting"": 200,
    ""mobile"": 22,
    ""hosting & proxy"": 12,
    ""proxy"": 28
  }
}"
9CjRhytG,2024-01-24_stats.json,rdp_snitch,JSON,Wednesday 24th of January 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""84.9.179.179"": 2,
    ""80.243.58.249"": 1,
    ""216.73.161.81"": 1,
    ""106.58.178.111"": 4,
    ""203.56.40.167"": 4,
    ""194.165.17.21"": 19,
    ""36.111.146.78"": 2,
    ""43.133.56.30"": 2,
    ""150.223.76.57"": 3,
    ""222.93.104.67"": 4,
    ""117.145.27.42"": 6,
    ""43.243.136.202"": 13,
    ""111.173.80.147"": 4,
    ""203.56.4.242"": 2,
    ""111.161.41.132"": 7,
    ""103.240.84.186"": 3,
    ""101.36.112.125"": 1,
    ""27.8.44.19"": 9,
    ""62.6.252.50"": 1,
    ""110.40.34.231"": 13,
    ""121.5.74.35"": 1,
    ""124.67.254.109"": 12,
    ""134.175.53.186"": 1,
    ""109.69.7.157"": 9,
    ""106.58.164.84"": 5,
    ""42.193.192.91"": 1,
    ""101.32.126.66"": 3,
    ""12.193.127.18"": 9,
    ""211.91.60.69"": 3,
    ""95.130.227.198"": 2,
    ""122.227.146.74"": 5,
    ""113.200.222.57"": 5,
    ""124.67.115.210"": 5,
    ""101.43.49.131"": 1,
    ""103.215.81.133"": 3,
    ""45.87.212.184"": 1,
    ""36.111.174.56"": 13,
    ""101.33.237.209"": 1,
    ""45.141.26.228"": 3,
    ""106.225.199.92"": 1,
    ""103.39.222.217"": 3,
    ""106.58.212.201"": 1,
    ""172.233.17.43"": 1,
    ""208.53.61.115"": 2,
    ""106.75.20.182"": 2,
    ""219.144.67.36"": 2,
    ""106.58.165.88"": 3,
    ""27.128.239.46"": 2,
    ""140.246.215.173"": 2,
    ""45.141.26.52"": 1,
    ""205.210.31.109"": 3,
    ""121.17.7.75"": 1,
    ""150.223.35.239"": 2,
    ""62.204.41.195"": 6,
    ""45.227.254.8"": 2,
    ""82.32.227.142"": 1,
    ""216.202.197.116"": 7,
    ""120.202.49.41"": 1,
    ""222.219.129.74"": 2,
    ""43.128.12.208"": 1,
    ""113.30.188.235"": 1,
    ""43.134.171.213"": 2,
    ""125.88.211.59"": 3,
    ""141.98.9.34"": 1,
    ""45.227.254.49"": 4,
    ""106.58.217.61"": 4,
    ""150.223.46.21"": 3,
    ""80.151.251.216"": 7,
    ""150.223.79.15"": 1,
    ""111.231.15.224"": 2,
    ""111.173.80.148"": 4,
    ""103.245.195.202"": 9,
    ""150.223.13.195"": 2,
    ""106.225.199.24"": 3,
    ""216.73.161.24"": 1,
    ""115.236.75.10"": 2,
    ""180.76.153.250"": 2,
    ""222.219.240.13"": 3,
    ""113.108.8.125"": 1,
    ""185.170.144.3"": 2,
    ""203.57.39.224"": 3,
    ""14.18.41.26"": 3,
    ""101.32.116.25"": 3,
    ""195.97.20.99"": 2,
    ""106.58.212.195"": 2,
    ""106.58.164.95"": 2,
    ""116.73.243.187"": 2,
    ""150.223.66.55"": 1,
    ""106.116.169.71"": 1,
    ""218.90.120.19"": 3,
    ""205.210.31.111"": 3,
    ""175.4.26.179"": 4,
    ""43.134.33.208"": 1,
    ""185.106.176.8"": 2,
    ""20.127.108.193"": 1,
    ""183.134.89.41"": 3,
    ""106.58.210.135"": 2,
    ""106.58.221.13"": 1,
    ""1.168.138.101"": 1,
    ""47.94.109.53"": 9,
    ""220.76.251.176"": 6,
    ""52.80.19.192"": 2,
    ""39.98.127.243"": 4,
    ""43.134.0.225"": 2,
    ""106.75.123.252"": 2,
    ""117.33.174.14"": 1,
    ""2.57.149.186"": 3,
    ""194.165.16.73"": 2,
    ""182.61.55.68"": 2,
    ""103.210.237.233"": 1,
    ""176.111.174.250"": 3,
    ""123.58.207.151"": 1,
    ""212.186.143.100"": 2,
    ""106.58.178.2"": 3,
    ""106.58.211.156"": 2,
    ""196.190.117.7"": 1,
    ""198.235.24.87"": 3,
    ""42.51.39.209"": 1,
    ""37.19.200.118"": 1,
    ""169.150.254.77"": 3,
    ""1.82.238.130"": 1,
    ""147.135.91.23"": 4,
    ""150.223.32.106"": 1,
    ""118.193.44.118"": 2,
    ""74.105.22.131"": 5,
    ""203.57.46.218"": 2,
    ""87.251.75.64"": 3,
    ""106.58.217.149"": 2,
    ""36.111.166.97"": 1,
    ""220.76.61.114"": 1,
    ""106.58.184.58"": 1,
    ""45.141.26.68"": 1,
    ""106.58.219.212"": 1,
    ""61.171.113.104"": 1,
    ""63.135.161.145"": 1,
    ""103.38.236.147"": 5,
    ""205.210.31.174"": 3,
    ""87.191.150.194"": 1,
    ""120.48.64.252"": 2
  },
  ""asn"": {
    ""AS25310"": 2,
    ""AS21413"": 1,
    ""AS206092"": 3,
    ""AS4134"": 59,
    ""AS58519"": 42,
    ""AS48721"": 21,
    ""AS132203"": 14,
    ""AS9808"": 7,
    ""AS4808"": 13,
    ""AS148981"": 8,
    ""AS4837"": 45,
    ""AS135377"": 4,
    ""AS2856"": 1,
    ""AS38283"": 13,
    ""AS45090"": 7,
    ""AS21183"": 9,
    ""AS7018"": 9,
    ""AS35682"": 2,
    ""AS55933"": 3,
    ""AS9009"": 1,
    ""AS142299"": 5,
    ""AS134238"": 4,
    ""AS4816"": 3,
    ""AS63949"": 1,
    ""AS17341"": 2,
    ""AS23724"": 4,
    ""AS134768"": 4,
    ""AS396982"": 12,
    ""AS59425"": 6,
    ""AS267784"": 6,
    ""AS5089"": 1,
    ""AS3356"": 7,
    ""AS41436"": 1,
    ""AS58466"": 3,
    ""AS209588"": 1,
    ""AS3320"": 8,
    ""AS9541"": 9,
    ""AS38365"": 6,
    ""AS197414"": 2,
    ""AS3329"": 2,
    ""AS17488"": 2,
    ""AS63838"": 4,
    ""AS42960"": 2,
    ""AS8075"": 1,
    ""AS58461"": 3,
    ""AS3462"": 1,
    ""AS37963"": 13,
    ""AS4766"": 7,
    ""AS55960"": 2,
    ""AS208312"": 3,
    ""AS142403"": 1,
    ""AS57523"": 3,
    ""AS8412"": 2,
    ""AS24757"": 1,
    ""AS56005"": 1,
    ""AS212238"": 4,
    ""AS16276"": 4,
    ""AS701"": 5,
    ""AS208091"": 3,
    ""AS4812"": 1,
    ""AS149148"": 5
  },
  ""isp"": {
    ""Bulldog Communications"": 2,
    ""envia TEL GmbH"": 1,
    ""Ipxo Limited"": 2,
    ""Chinanet"": 59,
    ""Cloud Computing Corporation"": 42,
    ""Flyservers S.A."": 28,
    ""Aceville Pte.ltd"": 11,
    ""China Mobile communications corporation"": 7,
    ""China Unicom Beijing Province Network"": 13,
    ""China Telecom"": 11,
    ""China Unicom Tianjin Province Network"": 7,
    ""China Unicom CHINA169 Network"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""China Unicom Chongqing Province Network"": 9,
    ""British Telecommunications PLC"": 1,
    ""CHINANET SiChuan Telecom Internet Data Center"": 13,
    ""China Internet Network Information Center"": 2,
    ""CNC Group CHINA169 Neimeng Province Network"": 17,
    ""Shenzhen Tencent Computer Systems Company Limited"": 8,
    ""Vodafone Network"": 9,
    ""AT&T Services, Inc."": 9,
    ""CHINA UNICOM China169 Backbone"": 4,
    ""Best Internet Solution XK"": 2,
    ""CNC Group CHINA169 Shannxi Province Network"": 5,
    ""Cloudie Limited"": 3,
    ""M247 Europe SRL"": 1,
    ""CLOUDFOREST CO., LTD"": 5,
    ""CHINANET Jiangx province IDC network"": 4,
    ""China Telecom (Group)"": 4,
    ""Akamai Technologies, Inc."": 1,
    ""C7 Data Centers"": 2,
    ""UCLOUD"": 4,
    ""CHINANET SHAANXI province Cloud Base network"": 4,
    ""Google LLC"": 12,
    ""Horizon LLC"": 6,
    ""Virgin Media"": 1,
    ""Level 3 Communications"": 7,
    ""Kamatera Inc"": 1,
    ""Deutsche Telekom AG"": 8,
    ""Cyber Internet Services (Private) Limited"": 9,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 6,
    ""Xhost Internet Solutions LP"": 5,
    ""CHINANET Guangdong province network"": 3,
    ""HOL"": 2,
    ""Hathway IP over Cable Internet Access"": 2,
    ""Hengyang"": 4,
    ""VH-GLOBAL"": 2,
    ""Microsoft Corporation"": 1,
    ""Chunghwa Telecom Co., Ltd."": 1,
    ""Hangzhou Alibaba Advertising Co"": 13,
    ""Korea Telecom"": 7,
    ""Beijing Guanghuan Xinwang Digital"": 2,
    ""Red Byte LLC"": 3,
    ""Yisu Cloud LTD"": 1,
    ""Chang Way Technologies Co. Limited"": 3,
    ""T-Mobile Austria GmbH"": 2,
    ""Ethiotelecom"": 1,
    ""China Unicom Henan Province network"": 1,
    ""Datacamp Limited"": 4,
    ""OVH SAS"": 4,
    ""Verizon Business"": 5,
    ""Rockion LLC"": 1,
    ""Phu Hai Computer Co., Ltd"": 5
  },
  ""org"": {
    ""Unknown"": 71,
    ""envia.tel GmbH"": 1,
    ""Bandito Networks"": 2,
    ""Chinanet YN"": 38,
    ""Chinanet FJ"": 11,
    ""Flyservers S.A"": 21,
    ""Chinanet ZJ"": 16,
    ""Chinanet SD"": 15,
    ""Chinanet JS"": 7,
    ""China Mobile"": 7,
    ""Beijing yunchuang communication Technology Co."": 13,
    ""Chinanet HB"": 8,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Btnet"": 1,
    ""Chengdu Giant Times Technology Co., Ltd"": 13,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 4,
    ""Tencent Cloud Computing (Beijing) Co., Ltd"": 3,
    ""ATT SERVICES INC- PEG"": 9,
    ""Unicom"": 3,
    ""Best Internet Solution XK"": 2,
    ""Ningbo chaoji mamawangluojishu ltd"": 5,
    ""Netads Online Limited"": 3,
    ""M247 LTD"": 1,
    ""Cloudforest CO., LTD"": 5,
    ""Chinanet JX"": 4,
    ""Shenzhen Qianhai bird cloud computing Co. Ltd."": 3,
    ""Akamai Technologies, Inc."": 1,
    ""VegaDigital Solutions"": 2,
    ""Shanghai UCloud Information Technology Company Limited"": 4,
    ""Chinanet SN"": 4,
    ""Chinanet HE"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""HS City Authority"": 1,
    ""Horizon LLC"": 6,
    ""UAB Host Baltic"": 6,
    ""Fort Wayne Internet, LLC"": 7,
    ""Cloudwebmanage EU"": 1,
    ""Alviva Holding Limited"": 1,
    ""Deutsche Telekom AG"": 8,
    ""Cyber Internet Services Pakistan"": 9,
    ""Hangzhou xiaoshan public transportation co., LTD"": 2,
    ""Beijing Baidu Netcom Science and Technology Co., Ltd."": 6,
    ""Chinanet GD"": 4,
    ""Xhostis"": 2,
    ""Koumakis Emm. S.A."": 2,
    ""Hathway Cable and Datacom Limited"": 2,
    ""Chinanet HN"": 4,
    ""Tencent Cloud Computing"": 3,
    ""VH Global Limited"": 2,
    ""Microsoft Azure Cloud (eastus)"": 1,
    ""Chunghwa Telecom Co. Ltd."": 1,
    ""Aliyun Computing Co., LTD"": 13,
    ""Kornet"": 6,
    ""AWS EC2 (cn-north-1)"": 2,
    ""Chang Way Technologies Co. Limited"": 6,
    ""HK Kwaifong Group Limited"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""LBR GmbH"": 2,
    ""Henan Telcom Union Technology Co., LTD"": 1,
    ""Cdnext DAL"": 4,
    ""OVH US LLC"": 4,
    ""Verizon Business"": 5,
    ""Xhost Internet Solutions"": 3,
    ""Korea Telecom"": 1,
    ""Chinanet SH"": 1,
    ""Ipxo LLC"": 1,
    ""Phu Hai Computer Co., Ltd"": 5
  },
  ""regionName"": {
    ""England"": 4,
    ""Brandenburg"": 1,
    ""New York"": 3,
    ""Yunnan"": 38,
    ""Fujian"": 16,
    ""Kaunas"": 21,
    ""Zhejiang"": 26,
    ""North West"": 7,
    ""Shandong"": 15,
    ""Jiangsu"": 7,
    ""Guangdong"": 20,
    ""Beijing"": 45,
    ""Hubei"": 8,
    ""Tianjin"": 7,
    ""Central and Western District"": 9,
    ""Chongqing"": 9,
    ""Sichuan"": 13,
    ""Inner Mongolia"": 12,
    ""Tirana"": 9,
    ""Central Singapore"": 6,
    ""Texas"": 13,
    ""Tashkent"": 2,
    ""Shaanxi"": 6,
    ""Shanghai"": 4,
    ""Hesse"": 1,
    ""Bangkok"": 5,
    ""Jiangxi"": 4,
    ""Sao Paulo"": 1,
    ""Utah"": 2,
    ""Shanxi"": 3,
    ""Hebei"": 4,
    ""California"": 12,
    ""Moscow"": 9,
    ""Vilnius"": 6,
    ""Scotland"": 1,
    ""Indiana"": 7,
    ""North Holland"": 7,
    ""Bavaria"": 7,
    ""Sindh"": 9,
    ""Attica"": 2,
    ""Karnataka"": 2,
    ""Hunan"": 4,
    ""Virginia"": 5,
    ""Taichung City"": 1,
    ""Seoul"": 7,
    ""Lesser Poland"": 3,
    ""Tsuen Wan District"": 1,
    ""Vienna"": 2,
    ""Addis Ababa"": 1,
    ""Henan"": 1,
    ""New Jersey"": 5,
    ""Hanoi"": 5,
    ""Rheinland-Pfalz"": 1
  },
  ""country"": {
    ""United Kingdom"": 5,
    ""Germany"": 10,
    ""United States"": 47,
    ""China"": 242,
    ""Lithuania"": 27,
    ""Singapore"": 13,
    ""Hong Kong"": 10,
    ""Albania"": 9,
    ""Uzbekistan"": 2,
    ""Thailand"": 5,
    ""Brazil"": 1,
    ""Russia"": 9,
    ""The Netherlands"": 7,
    ""Pakistan"": 9,
    ""Greece"": 2,
    ""India"": 2,
    ""Taiwan"": 1,
    ""South Korea"": 7,
    ""Poland"": 3,
    ""Austria"": 2,
    ""Ethiopia"": 1,
    ""Vietnam"": 5
  },
  ""account"": {
    ""142.93.8.59"": 336,
    ""(empty)"": 4,
    ""Test"": 16,
    ""hello"": 28,
    ""cnbPTTNrz"": 1,
    ""IgptRb"": 1,
    ""nMhvfl"": 1,
    ""Administr"": 9,
    ""MNKgsKuxe"": 1,
    ""VXAVjH"": 1,
    ""vGLgLI"": 1,
    ""hgdffbrq"": 6,
    ""Domain"": 7,
    ""Administrator"": 1,
    ""rjaSqvBSM"": 1,
    ""silyyl"": 1,
    ""RqIMZj"": 1,
    ""pcyRCCDxT"": 1,
    ""tIxMEm"": 1,
    ""nQFXqC"": 1
  },
  ""keyboard"": {
    ""Unknown"": 419
  },
  ""client_build"": {
    ""Unknown"": 419
  },
  ""client_name"": {
    ""Unknown"": 419
  },
  ""ip_type"": {
    ""Unknown"": 286,
    ""mobile & proxy"": 2,
    ""hosting"": 100,
    ""mobile"": 11,
    ""hosting & proxy"": 6,
    ""proxy"": 14
  }
}"
Xuvuud0v,6 / d) Architect Arithmetic - Taj Mahal with one Method,IvanITD,C#,Wednesday 24th of January 2024 06:13:28 PM CDT,"namespace Architect_Arithmetic__TajMahalWithOneMethod
{
    class Program
    {
        static void Main(string[] args)
        {
            CalculateTotalCost();
        }

        static void CalculateTotalCost(
            double length = 90.5,
            double width = 90.5,
            double bottom = 24.0,
            double height = 24.0
        )
        {
            double rectangleArea = length * width;
            double triangleArea = bottom * height; 
            triangleArea *= 4;

            double flooringMaterialCost = 180;
            
            double totalShapeArea = rectangleArea + triangleArea;
            double totalCost = totalShapeArea * flooringMaterialCost;
            Console.WriteLine($""The total cost of the flooring material for the Taj Mahal is {totalCost} rupee!"");

        }
    
    }
}"
63jSqh5n,6 / c) - Architect Arithmetic - Taj Mahal,IvanITD,C#,Wednesday 24th of January 2024 06:12:05 PM CDT,"using System.ComponentModel.DataAnnotations;

namespace Arhitect_Arithmetic_Taj_Mahal
{
    class Program
    {   
        //In this section we will write a program that gives the total cost of the flooring material for the ""Taj Mahal"", in Agra, India.
        static void Main(string[] args)
        {
            // Here I need to get the length and width of the rectangle and return the area!
            double length = 90.5;
            double width = 90.5;

            // Here I get the rectangle area back from the method!
            double rectangleArea = Rectangle(length, width);

            // Here I need to get the bottom and height of the triangle and return the area!
            double bottom = 24.0;
            double height = 24.0;

            // here I get the triangle area back from the method!
            double triangleArea = Triangle(bottom, height);

            // After we separate the floor plan on a paper, we need to get the result from every shape's area, and add them back together!
            // The total result should be saved in a double variable, because in this project, we are instructed to work only with the variable double!
            double totalShapeArea = rectangleArea + triangleArea;

            // Now in order to do the next step, we need to write the flooring price!
            double flooringMaterialPrice = 180;

            // And now if we want to get the total cost of the flooring material, we need to multiply the totalShapeArea by the flooring material price!
            double totalCost = totalShapeArea * flooringMaterialPrice;

            // And now we need to print the result!
            Console.WriteLine($""The total cost of the flooring material for the Taj Mahal is {totalCost} rupee!"");
        }

        static double Rectangle(double length, double width)
        {
            // Here we calculate the area of the rectangle!
            
            double area = length * width;

            // Here we return the calculated area of the rectangle, back to the main method!
            return area;
        }

        static double Triangle(double bottom, double height)
        {
            // Here we calculate the area of the triangle!
            double area = bottom * height;

            // In order to get the right amount of triangles we need to multiply the area by 4, because the triangles are 4 in total!
            area *= 4;

            // Here we return the calculated area of the triangle, back to the main method!
            return area;
        }
    }
}"
DyrY8vvV,6 / b) - Architect Arithmetic - Pantheon with one Method,IvanITD,C#,Wednesday 24th of January 2024 05:56:23 PM CDT,"namespace Architect_Arithmetic_PantheonWithOneMethod
{
    class Program
    {
        static void Main(string[] args)
        {
            CalculateTotalCost();
        }

        static void CalculateTotalCost(
            double length = 15,
            double width = 18,
            double radius = 21.5
        )
        {
            double rectangleArea = length * width;
            double circleArea = radius * radius * Math.PI;
            
            double totalShapeArea = rectangleArea + (circleArea / 2);
            double flooringMaterialPrice = 180;
            double totalCost = totalShapeArea * flooringMaterialPrice;
            Console.WriteLine($""The total cost for the flooring material, for the Pantheon is: {Math.Round(totalCost)} euro!"");
        }
    }
}"
YkfPWprK,6 / a) - Architect Arithmetic - Pantheon,IvanITD,C#,Wednesday 24th of January 2024 05:55:24 PM CDT,"namespace Architect_Arithmetic_Pantheon
{
    internal class Program
    {

        //In this section we will write a program that gives the total cost of the flooring material for the ""Pantheon"", in Rome, Italy.
        static void Main(string[] args)
        {
            // Here I need to get the length and width of the rectangle and return the area!
            double length = 15;
            double width = 18;

            // Here I get the rectangle area back from the method!
            double rectangleArea = Rectangle(length, width);

            // Here I need to get the radius of the circle and return the area!
            double radius = 21.5;

            // Here I get the circle area!
            double circleArea = Circle(radius);


            // After we separate the floor plan on a paper, we need to get the result from every shape's area, and then add them together!
            //The total result should be saved in a double variable, because in this project, we are instructed to work only with the variable double!
            double totalShapeArea = rectangleArea + (circleArea / 2);

            // Now in order to do the next step, we need to write the flooring price!
            double flooringMaterialPrice = 180;

            // And now in order to get the cost of the flooring material, we need to multiply the total shape area by the price of the material!
            double totalCost = totalShapeArea * flooringMaterialPrice;

            // And now we need to print the result!
            Console.WriteLine($""The total cost for the flooring material, for the Pantheon, is: {Math.Round(totalCost)} euro!""); 
            // The next step is to round the result to the nearest integer!
            
        }
        static double Rectangle(double length, double width)
        {
            // Here we calculate the area of the rectangle!
            double area = length * width;
            // Here we return the calculated area, of the rectangle, back to the main method!
            return area;
        }
        static double Circle(double radius)
        {
            // Here we calculate the area of the circle!
            double area = Math.PI * Math.Pow(radius, 2);
            // Here we return the calculated area, of the circle, back to the main method!
            return area;
        }
        
        
    }
}
"
QkW814Xc,Wrath rune crafting,abc123mewot,Lua,Wednesday 24th of January 2024 05:06:30 PM CDT,"print(""Necroflower autocrafting turtle"")

-- ME Interface must be placed in front of the turtle

if not fs.exists(""utils.lua"") then
	print(""Downloading Botany Base Utils API"")
	shell.run(""pastebin get zBLN8K4d utils.lua"")
end
os.loadAPI(""utils.lua"")

utils.setSignalItem(""minecraft:cobblestone"")

local expectingFlower = false

while true do
	if utils.scanForItem(""botania:rune"") then
		print(""Crafting a necroflower"")
		os.sleep(1) -- Wait for the turtle to get all the items from the interface
		utils.dropDownAllItems() -- Drop all items on runic alter
		os.sleep(3) -- Give it some time to craft
		expectingFlower = true
	end
	
	if utils.scanForItem(""botania:rune"") then
		if expectingFlower then print(""Flower was crafted"") else print(""Got unexpected flower!"") end
		utils.dropAllItems(true) -- Also drop the signal item
		expectingFlower = false
		os.sleep(0.1)
	end
	
	if not expectingFlower then -- If a rune is expected to craft then constantly check for it
		if utils.isServerRestartingSoon() then
			break -- Stop crafting if the servers going to restart
		end
		os.sleep(1)
	end
end
"
dfFTfVrp,KTZInv,klassekatze,C#,Wednesday 24th of January 2024 04:40:16 PM CDT,"/*
 * R e a d m e
 * -----------
 * 
 * In this file you can include any instructions or other comments you want to have injected onto the 
 * top of your final script. You can safely delete this file if you do not want any such comments.
 */

static public Program gProgram = null;
static public DateTime bootTime;
public Program()
{
	gProgram = this;
	resourceLoader = new ResourceLoader();
	resourceLoader.p = this;
	bootTime = DateTime.Now;

	log(""BOOT"", LT.LOG_N);
	//Config = new Config_();
	Runtime.UpdateFrequency = UpdateFrequency.Update1;
}

public void Save()
{
	// Called when the program needs to save its state. Use
	// this method to save your state to the Storage field
	// or some other means.
	//
	// This method is optional and can be removed if not
	// needed.
}
public static int tick = -1;
static BurnoutTrack bt60 = new BurnoutTrack(60, MAX_MS_PER_SEC_BOOT);

static Profiler initP = new Profiler(""init"");
static Profiler mainP = new Profiler(""main"");
public void Main(string arg, UpdateType upd)
{
	tick += 1;
	if (bt60.burnoutpre()) return;

	if (tick % 20 == 0) if (Me.Closed)
		{
			Runtime.UpdateFrequency = UpdateFrequency.None;
			return;
		}
	mainP.start();
	main(arg, upd);
	mainP.stop();
	if (tick % 5 == 0)
	{
		Echo(tick.ToString());
		if (profileLog != null) profileLog.WriteText(""name:ms1t:ms60t\n"" + Profiler.getAllReports());
	}
	if (consoleLog != null && tick % 5 == 0)
	{
		if (Logger.loggedMessagesDirty)
		{
			Logger.updateLoggedMessagesRender();
			consoleLog.WriteText(Logger.loggedMessagesRender);
		}
	}
	if (bt60.burnoutpost()) return;
}


Inventory gInv = null;
bool first = true;
void main(string arg, UpdateType upd)
{
	initP.start();
	if (tick % 10 == 0)
	{
		resourceLoader.update();
	}
	initP.stop();
	if (resourceLoader.neverFullyLoaded)
	{
		Echo(""INITIALIZING: "" + resourceLoader.step + ""/11"");
		if (statusLog != null) statusLog.WriteText(""INIT: "" + resourceLoader.step + ""/11"");
		//if (radarLog != null) radarLog.WriteText(""INIT: "" + resourceLoader.step + ""/11"");
		return;
	}
	if (first)
	{
		first = false;

		gInv = new Inventory();
		gInv.updateContainers(inventoryBlocks);
	}
	if (tick % 10 == 0) connectEvent();

	gInv.update();
}


Dictionary<IMyShipConnector, bool> lConnected = new Dictionary<IMyShipConnector, bool>();

bool cnctE = false;
public void connectEvent()
{
	try
	{
		bool evnt = false;
		foreach (var c in connectors)
		{
			var con = c.Status == MyShipConnectorStatus.Connected;
			var lcon = false;
			lConnected.TryGetValue(c, out lcon);
			if (lcon != con) evnt = true;
			lConnected[c] = con;
		}
		if (evnt)
		{
			log(""connector change"");
			GridTerminalSystem.GetBlocksOfType(inventoryBlocks, b => b.HasInventory && b.HasPlayerAccess(Me.OwnerId));
			gInv.updateContainers(inventoryBlocks);
		}
	}
	catch (Exception e)
	{
		if (!cnctE)
		{
			cnctE = true;
			log(""Exception: "" + e.ToString());
		}
	}
}

const double MAX_MS_PER_SEC_BOOT = 0.1;
const double MAX_MS_PER_SEC = 0.1;
const int PBLIMIT_STARTUPTICKS = 0;//20 by default
class BurnoutTrack
{
	public double maxmspersec = 0.25;
	public static double[] defertrack;
	public int len = 60;
	public BurnoutTrack(int l, double ms)
	{
		len = l;
		maxmspersec = ms;
		defertrack = new double[len];
	}
	int defercalls = 0;
	int deferpos = 0;
	static bool hangflag = false;
	int hangticks = 0;
	int hangtick = 0;
	bool fsdbg = false;
	DateTime bf = DateTime.Now;
	public bool burnoutpre()
	{
		bf = DateTime.Now;
		if (hangflag)
		{
			if (tick > hangtick)
			{
				double avg = 0;
				foreach (var d in defertrack) avg += d;
				avg = avg / (defercalls > defertrack.Length ? defertrack.Length : defercalls);
				if (avg > maxmspersec * len / 60)
				{
					defertrack[deferpos] = 0;
					defercalls += 1;
					deferpos = (deferpos + 1) % defertrack.Length;
					return true;
				}
				else
				{
					hangflag = false;
					//log(""Resuming after "" + (hangticks / 60.0d).ToString(""0.0"") + ""s"", LT.LOG_N);
				}
			}
		}
		return hangflag;
	}
	public double avg()
	{
		double avg = 0;
		foreach (var d in defertrack) avg += d;
		avg = avg / (defercalls > defertrack.Length ? defertrack.Length : defercalls);
		return avg;
	}
	public bool burnoutpost()
	{
		double ms = (DateTime.Now - bf).TotalMilliseconds;
		defertrack[deferpos] = ms;
		defercalls += 1;
		deferpos = (deferpos + 1) % defertrack.Length;
		if (!hangflag)
		{
			double p_avg = 0;
			foreach (var d in defertrack) p_avg += d;
			int divisor = defercalls > defertrack.Length ? defertrack.Length : defercalls;
			var avg = p_avg / divisor;
			var mtch = maxmspersec * len / 60;
			if (avg > mtch)
			{
				int tickstodoom = PBLIMIT_STARTUPTICKS - tick;
				if (tickstodoom > 0 && tickstodoom * maxmspersec < avg) return false;

				int waitticks = 0;
				while (p_avg / (divisor + waitticks) > mtch) waitticks++;

				hangticks = waitticks;
				hangtick = tick + waitticks;
				hangflag = true;


				var lstr = tick + "": "" + avg.ToString(""0.00"") + "">"" + (mtch).ToString(""0.00"") + ""ms/s exec. Sleeping "" + (hangticks / 60.0d).ToString(""0.0"") + ""s"";
				log(lstr, LT.LOG_N);
				/*var c = getCtrl();
						if (c != null)
						{
							if (!fsdbg)
							{
								c.CustomData = """";
								fsdbg = true;
							}
							c.CustomData += ""\n\n"" + lstr + ""\n\n"" + Profiler.getAllReports();
						}
						else getCtrlTick = -9000;*/

				return true;
			}
		}
		else return true;
		return false;
	}
}

class Inventory
{
	static bool sortProductionInput = false;
	static bool treatBlankAsAlltype = false;
	public class InventoryManifest
	{
		public InventoryManifest()
		{

		}

		public Dictionary<MyItemType, MyFixedPoint> stuff = new Dictionary<MyItemType, MyFixedPoint>();
		public MyFixedPoint maxVolume;
		public MyFixedPoint freeVolume;
		public void set(BlockInventory bi)//IMyTerminalBlock b)
		{
			stuff.Clear();
			maxVolume = freeVolume = 0;

			var invs = bi.getSortedInventories(false);

			foreach(var nv in invs)// (int i = 0; i < b.InventoryCount; i++)
			{
				///..var nv = b.GetInventory(i);
				var mv = nv.MaxVolume;
				var cv = nv.CurrentVolume;
				maxVolume += mv;
				freeVolume += mv - cv;
				List<MyInventoryItem> itms = new List<MyInventoryItem>();
				nv.GetItems(itms);
				foreach (MyInventoryItem it in itms)
				{
					if (stuff.ContainsKey(it.Type)) stuff[it.Type] += it.Amount;
					else stuff[it.Type] = it.Amount;
				}
			}
		}
		public void sub(InventoryManifest o)
		{//if we don't even have the thing being subtracted nothing will be subtracted
			foreach (var kvp in o.stuff) if (stuff.ContainsKey(kvp.Key)) stuff[kvp.Key] -= kvp.Value;
		}
		public void add(InventoryManifest o)
		{
			foreach (var kvp in o.stuff)
			{
				if (stuff.ContainsKey(kvp.Key)) stuff[kvp.Key] += kvp.Value;
				else stuff[kvp.Key] = kvp.Value;
			}
		}
	}
	public class BlockInventory : IComparable<BlockInventory>
	{
		const bool LOG = false;

		public static List<BlockInventory> bFIList = new List<BlockInventory>();
		public static List<BlockInventory> bPriorityList = new List<BlockInventory>();
		public static Dictionary<IMyTerminalBlock, BlockInventory> bIDict = new Dictionary<IMyTerminalBlock, BlockInventory>();
		static Dictionary<string, MyItemType> typeTable = new Dictionary<string, MyItemType>();
		public static BlockInventory getBI(IMyTerminalBlock b)
		{
			BlockInventory r = null;
			bIDict.TryGetValue(b, out r);
			if (r == null) r = new BlockInventory(b);
			return r;
		}

		static MyItemType getType(string type, string subtype)
		{//can throw exceptions, MyItemType is fiddly
			var k = type + ""/"" + subtype;
			if (typeTable.ContainsKey(k)) return typeTable[k];
			else
			{
				return typeTable[k] = new MyItemType(type, subtype);
			}
		}
		const string bpprefix = ""MyObjectBuilder_"";
		const string everything = ""alltypes"";
		static Dictionary<string, string> cattocargo = new Dictionary<string, string>()
		{
			{""MyObjectBuilder_OxygenContainerObject"",""Bottles""},
			{""MyObjectBuilder_GasContainerObject"",""Bottles""},
			{""MyObjectBuilder_PhysicalGunObject"",""Tools""},
			{""MyObjectBuilder_AmmoMagazine"",""Ammo""},
			{""MyObjectBuilder_Ore"",""Ores""},
			{""MyObjectBuilder_Ingot"",""Ingots""},
			{""MyObjectBuilder_Component"",""Components""},
		};
		static string cargokeywordbytype(string type)
		{
			string r = """";
			cattocargo.TryGetValue(type, out r);
			return r;
		}

		public static int idl = 0;
		public int idx = 0;
		public BlockInventory(IMyTerminalBlock b)
		{
			this.b = b;

			bPriorityList.Add(this);
			bIDict[b] = this;
			idx = idl;
			idl++;


			for (var i = 0; i < b.InventoryCount; i++)
			{
				sortedInventories.Add(b.GetInventory(i));
			}
			if (b is IMyProductionBlock)
			{
				isProduction = true;
				var p = (IMyProductionBlock)b;
				sortedInventoriesNoInput.Add(p.OutputInventory);
			}else
			{
				sortedInventoriesNoInput.AddRange(sortedInventories);
			}
		}
		public IMyTerminalBlock b = null;
		public InventoryManifest manifest = null;

		public List<string> categories = new List<string>();

		List<IMyInventory> sortedInventoriesNoInput = new List<IMyInventory>();
		List<IMyInventory> sortedInventories = new List<IMyInventory>();
		public List<IMyInventory> getSortedInventories(bool inc_input)
		{
			if (inc_input) return sortedInventories;
			else return sortedInventoriesNoInput;

		}
		public bool isProduction = false;
		public Dictionary<MyItemType, MyFixedPoint> target = new Dictionary<MyItemType, MyFixedPoint>();
		public bool special = false;
		public bool locked = false;
		public bool hidden = false;
		public bool holdall = false;
		const int default_p = 9999999;
		public int priority = default_p;
		public string lastCD = ""-31234"";
		public string lastN = ""-234523"";

		public void updateP()
		{
			if (b.CustomName != lastN)
			{
				lastN = b.CustomName;
				priority = default_p;
				special = false;
				locked = false;
				hidden = false;
				holdall = false;
				var t = lastN.Split(' ');
				categories.Clear();
				foreach (var tok in t)
				{
					var ltok = tok.ToLower();

					if (ltok == ""special"")
					{
						special = true;
						priority -= 10000;
					}else if (ltok == ""locked"")
					{
						locked = true;
					}
					else if (ltok == ""hidden"")
					{
						locked = true;
						hidden = true;
					}
					else if (ltok.StartsWith(""p""))
					{
						priority -= 10000;
						var ap = tok.Substring(1);
						int c = 0;
						int.TryParse(ap, out c);
						if (c.ToString() == ap)
						{
							priority += c;
						}
					}else if(ltok == everything)
					{
						holdall = true;
					}
					else
					{
						foreach(var kvp in cattocargo)
						{
							if(tok == kvp.Value)
							{
								if (!categories.Contains(tok)) categories.Add(tok);
								break;
							}
						}
					}
				}
				if(treatBlankAsAlltype && !special && !locked && categories.Count == 0 && !isProduction)
				{
					holdall = true;
					priority += 1;
				}
				if(!special && categories.Count == 0 && APIWC.HasCoreWeapon(b))
				{
					locked = true;
				}
				bPriorityList.Sort();
			}
			if (special && b.CustomData != lastCD)
			{
				if (special && b.CustomData == """")
				{
					List<MyItemType> alltypes = new List<MyItemType>();
					List<MyItemType> t = new List<MyItemType>();
					for (var i = 0; i < b.InventoryCount; i++)
					{
						b.GetInventory(i).GetAcceptedItems(t);
						foreach (var e in t) if (!alltypes.Contains(e)) alltypes.Add(e);
					}
					List<string> clines = new List<string>();
					//alltypes.Sort();
					//string o = """";
					foreach (var e in alltypes)
					{
						clines.Add(e.TypeId.Substring(bpprefix.Length) + ""/"" + e.SubtypeId + ""=0"");//\n"";
					}
					clines.Sort();

					b.CustomData = String.Join(""\n"",clines);
				}
				lastCD = b.CustomData;
				target.Clear();
				var lines = lastCD.Split('\n');
				foreach (var l in lines)
				{
					var lr = l.Split('=');
					if (lr.Length == 2)
					{
						var ids = lr[0].Split('/');
						if (ids.Length == 2)
						{
							try
							{
								var t = getType(bpprefix+ids[0], ids[1]);
								if (lr[1] == ""all"")
								{
									target[t] = int.MaxValue;
									if(LOG)log(b.CustomName+"" ""+t.SubtypeId + ""=all"");
								}
								else
								{
									var c = (MyFixedPoint)double.Parse(lr[1]);
									if (c > 0)
									{
										target[t] = c;
										if (LOG) log(b.CustomName + "" "" + t.SubtypeId + ""=""+c);
									}
								}
							}
							catch (Exception) { }
						}
					}
				}
			}
		}
		public void updateM()
		{
			InventoryManifest nm = new InventoryManifest();
			if(!hidden)nm.set(this);
			if (manifest != null) Inventory.globalManifest.sub(manifest);
			Inventory.globalManifest.add(nm);
			manifest = nm;
		}


		/*public int Compare(BlockInventory x, BlockInventory y)
				{
					if (x.priority == y.priority)
					{
						return x.idx.CompareTo(y.idx);
					}
					return x.priority.CompareTo(y.priority);
				}*/
		int IComparable<BlockInventory>.CompareTo(BlockInventory y)
		{
			var x = this;
			if (x.priority == y.priority)
			{
				return x.idx.CompareTo(y.idx);
			}
			return x.priority.CompareTo(y.priority);
		}

		public void updateT()
		{
			if (locked) return;

			if (special)
			{
				List<MyItemType> handle = new List<MyItemType>();
				foreach (var kvp in target) handle.Add(kvp.Key);
				foreach (var kvp in manifest.stuff)if (!handle.Contains(kvp.Key)) handle.Add(kvp.Key);

				foreach(var k in handle)
				{
					MyFixedPoint stock = 0;
					manifest.stuff.TryGetValue(k, out stock);
					MyFixedPoint trg = 0;
					target.TryGetValue(k, out trg);
					if (trg > stock)
					{
						MyFixedPoint gstock = 0;
						globalManifest.stuff.TryGetValue(k, out gstock);
						if (gstock > stock)
						{
							if (LOG) log(b.CustomName + "" "" + k.SubtypeId + "" pmove "" + trg + "" "" + stock);
							var r = retrieve(this, k, trg - stock);
							if (r > 0) if (LOG) log(""unable to satisfy by "" + r);
						}
					}
					else if (trg < stock)
					{
						if (LOG) log(""attempt expel "" + k.SubtypeId + "": "" + trg + "" < "" + stock + "" in "" + this.b.CustomName);
						expel(this, k, stock - trg);
					}
				}
			}else
			{
				List<MyItemType> handle = new List<MyItemType>();
				foreach (var kvp in manifest.stuff)handle.Add(kvp.Key);

				foreach (var k in handle)
				{
					var kw = cargokeywordbytype(k.TypeId);
					MyFixedPoint stock = 0;
					manifest.stuff.TryGetValue(k, out stock);
					MyFixedPoint trg = 0;
					if (categories.Contains(kw) || holdall) trg = MyFixedPoint.MaxValue;

					if (trg > stock)// && priority != default_p)
					{
						//this might add up if we somehow had a shitload of lowwer priority containers.
						//but we won't, really. retrieve only looks at the lower p stuff so in 99% of cases it'll just fail immediately
						//leaving expel( on other containers to send misplaced shit to us.

						if (LOG) log(""cat: "" + b.CustomName + "" "" + k.SubtypeId + "" pmove "" + trg + "" "" + stock);
						var r = retrieve(this, k, trg - stock);
						if (r > 0) if (LOG) log(""unable to satisfy by "" + r);
					}
					else if (trg < stock)
					{
						if (LOG) log(""cat attempt expel "" + k.SubtypeId + "": "" + trg + "" < "" + stock + "" in "" + this.b.CustomName);
						expel(this, k, stock - trg);
					}
				}
			}
		}

		public void shuffleRefineryInputs()
		{

		}

		public MyFixedPoint expel(BlockInventory b, MyItemType t, MyFixedPoint v, bool inputs=false)
		{
			var nfo = t.GetItemInfo();
			var kw = cargokeywordbytype(t.TypeId);
			for (var i = 0; i < BlockInventory.bPriorityList.Count; i++)
			{
				var inv = BlockInventory.bPriorityList[i];
				if(inv != b && !inv.locked)
				{
					MyFixedPoint amt = 0;
					MyFixedPoint max_accept = (inv.manifest.freeVolume * (MyFixedPoint)(1 / nfo.Volume));
					if (!nfo.IsOre && !nfo.IsIngot) max_accept = MyFixedPoint.Floor(max_accept + (MyFixedPoint)0.001);

					if (!inv.special && (inv.categories.Contains(kw) || inv.holdall)) amt = max_accept;
					else if (inv.special)
					{
						MyFixedPoint stock = 0;
						inv.manifest.stuff.TryGetValue(t, out stock);
						MyFixedPoint trg = 0;
						inv.target.TryGetValue(t, out trg);
						if (trg > stock)
						{
							amt = trg-stock;
							if (amt > max_accept) amt = max_accept;
						}
					}
					if(amt > 0)
					{
						if (LOG) log(""maxaccept="" + max_accept);
						if (LOG) log(""pushing ""+ amt+"" to ""+inv.b.CustomName);
						var remaining = imove(b, inv, t, amt, inputs);
						v -= amt;
						v += remaining;
					}
				}
				if (v <= 0) break;
			}
			return v;
		}

		public MyFixedPoint retrieve(BlockInventory dest, MyItemType t, MyFixedPoint v)
		{
			var nfo = t.GetItemInfo();
			int pidx = BlockInventory.bPriorityList.IndexOf(dest);
			if (LOG) log(""pidx="" + pidx);
			if (LOG) log(""BlockInventory.bPriorityList.Count="" + BlockInventory.bPriorityList.Count);
			for (var i = BlockInventory.bPriorityList.Count - 1; i > pidx; i--)
			{
				var inv = BlockInventory.bPriorityList[i];
				if (inv.manifest.stuff.ContainsKey(t))
				{

					MyFixedPoint avail = inv.manifest.stuff[t];
					if (LOG) log(inv.b.CustomName + ""has item, stock "" + avail);
					MyFixedPoint trns_amt = avail > v ? v : avail;
					if (LOG) log(""tamt=""+ trns_amt);

					MyFixedPoint max_accept = (inv.manifest.freeVolume * (MyFixedPoint)(1 / nfo.Volume));
					if (!nfo.IsOre && !nfo.IsIngot) max_accept = MyFixedPoint.Floor(max_accept + (MyFixedPoint)0.001);
					if (trns_amt > max_accept) trns_amt = max_accept;
					if (LOG) log(""tamt_ma="" + trns_amt);
					var rem = imove(inv, dest, t, trns_amt);
					v -= trns_amt;
					v += rem;
				}
				if (v <= 0) break;
			}
			return v;
		}
		public MyFixedPoint imove(BlockInventory a, BlockInventory b, MyItemType t, MyFixedPoint v, bool inputs=false)
		{
			if (v == 0) return 0;
			if (LOG) log(""imove ""+a.b.CustomName +"" > ""+b.b.CustomName);
			MyFixedPoint sa = v;

			foreach(var inva in a.getSortedInventories(inputs))
			{
				foreach (var invb in b.getSortedInventories(inputs))
				{
					v = imove(inva, invb, t, v);
					if (v <= 0) break;
				}
				if (v <= 0) break;
			}
			/*for (int ia = 0; ia < a.b.InventoryCount; ia++)
					{
						var inva = a.b.GetInventory(ia);
						for (int ib = 0; ib < b.b.InventoryCount; ib++)
						{
							var invb = b.b.GetInventory(ib);
							v = imove(inva, invb, t, v);
							if (v <= 0) break;
						}
						if (v <= 0) break;
					}*/
			if(sa != v)
			{
				if (LOG) log(""moved "" + (sa - v) + "" "" + t.SubtypeId + "" to "" + b.b.CustomName + "" from ""+a.b.CustomName);
				a.updateM();
				b.updateM();
			}
			return v;
		}

		public MyFixedPoint imove(IMyInventory a, IMyInventory b, MyItemType t, MyFixedPoint v)
		{
			List<MyInventoryItem> itms = new List<MyInventoryItem>();
			a.GetItems(itms);
			foreach (MyInventoryItem item in itms)
			{
				if (item.Type == t)
				{
					MyFixedPoint trns_amt = item.Amount > v ? v : item.Amount;
					if (LOG) log(""_imove tamt "" + trns_amt);
					var nfo = t.GetItemInfo();
					MyFixedPoint max_accept = ((b.MaxVolume - b.CurrentVolume) * (1f / nfo.Volume));
					if (LOG) log(""_imove max_accept "" + max_accept);
					if (!nfo.IsOre && !nfo.IsIngot) max_accept = MyFixedPoint.Floor(max_accept + (MyFixedPoint)0.001);
					//int max_room_for = (int)Math.Floor((double)(destination.MaxVolume - destination.CurrentVolume + (MyFixedPoint)0.001) / unit_volume);
					if (trns_amt > max_accept) trns_amt = max_accept;
					if (LOG) log(""_imove avail ""+ trns_amt);
					if (trns_amt > 0)
					{
						if (a.TransferItemTo(b, item, trns_amt))
						//if (b.TransferItemFrom(a, item, trns_amt))
						{
							v -= trns_amt;
							if (LOG) log(""moved ""+ trns_amt + ""!""+ item.Type.SubtypeId);
						}
						else if(LOG) log(""moved fail"");
					}
				}
				if (v <= 0) break;
			}
			return v;
		}


	}
	public static InventoryManifest globalManifest = new InventoryManifest();
	//public static Dictionary<IMyTerminalBlock, InventoryManifest> invManifests = new Dictionary<IMyTerminalBlock, InventoryManifest>();
	public void updateContainers(List<IMyTerminalBlock> c)// where T : IMyTerminalBlock
	{

		List<IMyTerminalBlock> del = new List<IMyTerminalBlock>();
		foreach(var b in containers)
		{
			if (!c.Contains(b)) del.Add(b);
		}
		InventoryManifest dMan = new InventoryManifest();
		foreach (var b in del)
		{
			BlockInventory bi = BlockInventory.getBI(b);
			Inventory.globalManifest.sub(bi.manifest);
		}
		containers.Clear();


		foreach (var e in c) if(e.CubeGrid.EntityId != gProgram.Me.EntityId) containers.Add(e);
		foreach (var e in c) if (e.CubeGrid.EntityId == gProgram.Me.EntityId) containers.Add(e);

		upd();
	}
	List<IMyTerminalBlock> containers = new List<IMyTerminalBlock>();
	int nextC = 0;
	bool itemsUpdating = true;
	public bool hasUpdatedOnce = false;
	public int updateInterval = 1;//60 * 10;
	public int lastUpdateTick = 0;
	public int ticksRun = 0;

	static Profiler invuP = new Profiler(""invu"");

	void clr()
	{
		itemsUpdating = false;
		ticksRun = tick - lastUpdateTick;
		lastUpdateTick = tick;
		nextC = 0;
	}
	void upd()
	{
		itemsUpdating = true;
		lastUpdateTick = tick;
		nextC = 0;
	}
	public void update()
	{

		if (!itemsUpdating && (tick - lastUpdateTick > updateInterval))
		{
			upd();
			if (statusLog != null)
			{
				string o = """";
				foreach (var e in BlockInventory.bPriorityList)
				{
					o += e.priority + ""|||"" + e.b.CustomName + ""\n"";
				}
				statusLog.WriteText(o);
			}
		}
		invuP.s();
		if (itemsUpdating && tick % 5 == 0)
		{
			if (nextC >= containers.Count)
			{
				clr();
				log(""full run ("" + containers.Count+""):"" + ticksRun + ""t ("" + (ticksRun / 60.0d).ToString(""0.0"") + ""s"");
				hasUpdatedOnce = true;
			}
			else
			{
				IMyTerminalBlock t = containers[nextC];
				BlockInventory bi = BlockInventory.getBI(t);
				//by doing these simultaneously there can absolutely be irregularities.
				//for example, if you empty a low priority box into a high priority one, it will think it is still full halfway through the update sequence
				bi.updateM();
				bi.updateP();
				bi.updateT();
				nextC++;
			}
		}
		invuP.e();
	}

	public Inventory()
	{

	}

}

public enum LT
{
	LOG_N = 0,
	LOG_D,
	LOG_DD
}
string[] logtype_labels = { ""INFO"",""_DBG"",""DDBG""};

public static LT LOG_LEVEL = LT.LOG_N;
public static Logger logger = new Logger();
public static void log(string s, LT level)
{
	Logger.log(s, level);
}
public static void log(string s)
{
	Logger.log(s, LT.LOG_N);
}

public class Logger
{
	public class logmsg
	{
		public logmsg(string m,string m2, LT l) { msg = m; msg_raw = m2; level = l; }
		public string msg = """";
		public string msg_raw = """";
		public int c = 1;
		public LT level = LT.LOG_N;
	}

	static List<logmsg> loggedMessages = new List<logmsg>();
	static int MAX_LOG = 50;
	static List<logmsg> superLoggedMessages = new List<logmsg>();
	static int MAX_SUPER_LOG = 500;

	static public bool loggedMessagesDirty = true;

	public static void log(string s, LT level)
	{
		if (level > LOG_LEVEL) return;
		string s2 = s;
		if (s.Length > 50)
		{
			List<string> tok = new List<string>();
			while (s.Length > 50)
			{
				int c = 0;
				if (tok.Count > 0) c = 2;
				tok.Add(s.Substring(0, 50 - c));
				s = s.Substring(50 - c);
			}
			tok.Add(s);
			s = string.Join(""\n "", tok);
		}
		var p = gProgram;
		logmsg l = null;
		if (loggedMessages.Count > 0)
		{
			l = loggedMessages[loggedMessages.Count - 1];
		}
		if (l != null)
		{
			if (l.msg == s) l.c += 1;
			else loggedMessages.Add(new logmsg(s, s2, level));
		}
		else loggedMessages.Add(new logmsg(s, s2, level));
		if (loggedMessages.Count > MAX_LOG) loggedMessages.RemoveAt(0);

		l = null;
		if (superLoggedMessages.Count > 0)
		{
			l = superLoggedMessages[superLoggedMessages.Count - 1];
		}
		if (l != null)
		{
			if (l.msg == s) l.c += 1;
			else superLoggedMessages.Add(new logmsg(s, s2, level));
		}
		else superLoggedMessages.Add(new logmsg(s, s2, level));
		if (superLoggedMessages.Count > MAX_SUPER_LOG) superLoggedMessages.RemoveAt(0);

		loggedMessagesDirty = true;
	}


	static public string loggedMessagesRender = """";
	static public void updateLoggedMessagesRender()
	{
		if (!loggedMessagesDirty) return;
		StringBuilder b = new StringBuilder();
		//if (!loggedMessagesDirty) return;// loggedMessagesRender;


		foreach (var m in loggedMessages)
		{
			b.Append(m.msg);
			if (m.c > 1) bapp(b,"" ("" ,m.c ,"")"");
			b.Append(""\n"");
		}
		string o = b.ToString();
		loggedMessagesDirty = false;
		loggedMessagesRender = o;
	}
}

static void bapp(StringBuilder b, params object[] args)
{
	foreach (object a in args)
	{
		b.Append(a.ToString());
	}
}
public class Profiler
{


	static bool PROFILING_ENABLED = true;
	static List<Profiler> profilers = new List<Profiler>();
	const int mstracklen = 60;
	double[] mstrack = new double[mstracklen];
	double msdiv = 1.0d / mstracklen;
	int mscursor = 0;
	DateTime start_time = DateTime.MinValue;
	string Name = """";
	string pre = """";
	string post = """";
	int _ticks_between_calls = 1;
	int ltick = int.MinValue;
	//..int callspertick = 1;

	static int base_sort_position_c = 0;
	int base_sort_position = 0;

	bool nevercalled = true;
	//bool closed = true;
	public int getSortPosition()
	{
		if (nevercalled) return int.MaxValue;
		int mult = (int)Math.Pow(10, 8 - (depth * 2));
		if (parent != null) return parent.getSortPosition() + (base_sort_position * mult);
		return base_sort_position * mult;
	}
	static int basep = (int)Math.Pow(10, 5);
	public Profiler(string name)
	{
		if (PROFILING_ENABLED)
		{
			Name = name;
			profilers.Add(this);
			for(var i =0; i < mstracklen; i++)mstrack[i] = 0;
			base_sort_position = base_sort_position_c;
			base_sort_position_c += 1;
		}
	}
	public void s()
	{
		start();
	}
	public void e()
	{
		stop();
	}
	static List<Profiler> stack = new List<Profiler>();
	Profiler parent = null;
	int depth = 0;
	bool adding = false;
	public void start()
	{
		if (PROFILING_ENABLED)
		{
			//closed = false;
			nevercalled = false;
			if (tick != ltick)
			{
				if (_ticks_between_calls == 1 && ltick != int.MinValue)
				{
					_ticks_between_calls = tick - ltick;
				}else
				{
					var tbc = tick - ltick;
					if (tbc != _ticks_between_calls)
					{
						_ticks_between_calls = 1;
						for (var i = 0; i < mstracklen; i++) mstrack[i] = 0;
					}
				}

				ltick = tick;
				//callspertick = 1;
				adding = false;
			}
			else
			{
				adding = true;
			}
			if (depth == 0) depth = stack.Count;
			if (depth > 11) depth = 11;
			if (stack.Count > 0 && parent == null) parent = stack[stack.Count - 1];
			stack.Add(this);
			start_time = DateTime.Now;
		}
	}
	double lastms = 0;
	double average = 0;


	/// <summary>
			/// records a fake ms consumption for this timeframe - for tests or demo
			/// </summary>
	public double FAKE_stop(double fakems)
	{
		return stop(fakems);
	}
	/// <summary>
			/// adds the elapsed time since start() to the records
			/// </summary>
	public double stop()
	{
		double time = 0;
		if (PROFILING_ENABLED)
		{
			//closed = true;
			time = (DateTime.Now - start_time).TotalMilliseconds;
		}
		return stop(time);
	}

	private double stop(double _ms)
	{
		double time = 0;
		if (PROFILING_ENABLED)
		{
			time = _ms;

			stack.Pop();
			if (parent != null)
			{
				depth = parent.depth + 1;
			}

			//if(!adding)mscursor = (mscursor + 1) % mstracklen;


			if (!adding) mstrack[mscursor] = 0;
			mstrack[mscursor] += time;
			if (!adding) mscursor = (mscursor + 1) % mstracklen;

			average = 0d;
			foreach (double ms in mstrack) average += ms;
			average *= msdiv;
			average /= _ticks_between_calls;
			lastms = time;
		}
		return time;
	}
	/// <summary>
			/// generates a monospaced report text. If called every tick, every 120 ticks it will recalculate treeview data.
			/// </summary>
	//the treeview can be initially inaccurate as some profilers might not be called every tick, depending on program architecture
	public string getReport(StringBuilder bu)
	{
		if (PROFILING_ENABLED)
		{
			if (tick % 120 == 25)//recalculate hacky treeview data, delayed by 25 ticks from program start
			{
				try
				{
					profilers.Sort(delegate (Profiler x, Profiler y)
					{
						return x.getSortPosition().CompareTo(y.getSortPosition());
					});
				}
				catch (Exception) { }

				for (int i = 0; i < profilers.Count; i++)
				{
					Profiler p = profilers[i];

					p.pre = """";
					if (p.depth > 0 && p.parent != null)
					{
						bool parent_has_future_siblings = false;
						bool has_future_siblings_under_parent = false;
						for (int b = i + 1; b < profilers.Count; b++)
						{
							if (profilers[b].depth == p.parent.depth) parent_has_future_siblings = true;
							if (profilers[b].depth == p.depth) has_future_siblings_under_parent = true;
							if (profilers[b].depth < p.depth) break;

						}
						while (p.pre.Length < p.parent.depth)
						{
							if (parent_has_future_siblings) p.pre += ""│"";
							else p.pre += "" "";
						}
						bool last = false;

						if (!has_future_siblings_under_parent)
						{
							if (i < profilers.Count - 1)
							{
								if (profilers[i + 1].depth != p.depth) last = true;
							}
							else last = true;
						}
						if (last) p.pre += ""└"";
						else p.pre += ""├"";
						while (p.pre.Length < p.depth) p.pre += ""─"";
					}
				}
				int mlen = 0;
				foreach (Profiler p in profilers) if (p.pre.Length + p.Name.Length > mlen) mlen = p.pre.Length + p.Name.Length;
				foreach (Profiler p in profilers)
				{
					p.post = """";
					int l = p.pre.Length + p.Name.Length + p.post.Length;
					if (l < mlen) p.post = new string('_', mlen - l);
				}
			}
			if (nevercalled) bapp(bu, ""!!!!"", Name , ""!!!!: NEVER CALLED!"");
			else bapp(bu, pre, Name, post, "": "" , lastms.ToString(""0.00"") , "";"", average.ToString(""0.00""));
		}
		return """";
	}
	static public string getAllReports()
	{
		StringBuilder b = new StringBuilder();
		//string r = """";
		if (PROFILING_ENABLED)
		{
			foreach (Profiler watch in profilers)
			{
				watch.getReport(b);
				b.Append(""\n"");
			}
		}
		if (stack.Count > 0)
		{
			bapp(b,""profile stack error:\n"", stack.Count, ""\n"");
			foreach (var s in stack)
			{
				bapp(b, s.Name, "","");
			}
		}
		return b.ToString();
	}
}

static IMyTextSurface consoleLog = null;
static IMyTextSurface statusLog = null;
static IMyTextSurface profileLog = null;
static IMyTextSurface PDCLog = null;
//static List<IMyTerminalBlock> weaponCoreWeapons = new List<IMyTerminalBlock>();
static List<IMyShipController> controllers = new List<IMyShipController>();
static List<IMyShipConnector> connectors = new List<IMyShipConnector>();
static List<IMyTerminalBlock> inventoryBlocks = new List<IMyTerminalBlock>();
static public WcPbApi APIWC = null;
static public ResourceLoader resourceLoader = null;
public class ResourceLoader
{
	public Program p;

	public bool neverFullyLoaded = true;
	public ResourceLoader()
	{
		mkBlockCheckMachine();
	}

	bool readConfig = false;

	public void update()
	{
		if (APIWC == null)
		{
			APIWC = new WcPbApi();
			try
			{
				APIWC.Activate(gProgram.Me);
			}
			catch (Exception) { }

		}
		if (!APIWC.isReady && tick % 30 == 0)
		{
			try
			{
				APIWC.Activate(gProgram.Me);
			}
			catch (Exception) { }
		}
		if (!APIWC.isReady) return;

		if (!readConfig || tick % 60 == 0)
		{
			readConfig = true;
			/*if (p.Me.CustomData != lastCustomData)
					{
						//log(""Loading CustomData."", LT.LOG_N);
						//deserializeConfig(p.Me.CustomData);
						//p.Me.CustomData = lastCustomData = serializeConfig();
					}*/
		}

		if (blockCheckMachine != null)
		{
			if (!blockCheckMachine.MoveNext())
			{
				blockCheckMachine.Dispose();
				blockCheckMachine = null;
			}
		}
		else if (readConfig && tick % (5 * 60 * 60) == 0) mkBlockCheckMachine();
	}
	public string lastCustomData = ""-1"";

	IEnumerator<bool> blockCheckMachine = null;
	void mkBlockCheckMachine()
	{
		if (blockCheckMachine != null) blockCheckMachine.Dispose();
		blockCheckMachine = blockLoader();
		step = 0;
	}
	public int step = 0;

	public bool isThis(IMyTerminalBlock b)
	{
		return b.OwnerId == p.Me.OwnerId && b.CubeGrid == p.Me.CubeGrid;
	}
	public IEnumerator<bool> blockLoader()
	{
		var gts = p.GridTerminalSystem;
		consoleLog = null;
		statusLog = null;
		profileLog = null;
		List<IMyTerminalBlock> LCDs = new List<IMyTerminalBlock>();
		gts.GetBlocksOfType(LCDs, b => (b is IMyTextSurface) && b.CubeGrid == p.Me.CubeGrid);
		foreach (var b in LCDs)
		{
			IMyTextSurface s = b as IMyTextSurface;
			if (b.CustomData.Contains(""statusLog"")) statusLog = s;
			else if (b.CustomData.Contains(""consoleLog"")) consoleLog = s;
			else if (b.CustomData.Contains(""profileLog"")) profileLog = s;
			else if (b.CustomData.Contains(""PDCLog"")) PDCLog = s;
		}
		step++;
		yield return true;
		gts.GetBlocksOfType(controllers, isThis);
		step++;
		yield return true;
		step++;
		connectors.Clear();
		gts.GetBlocksOfType(connectors, isThis);
		yield return true;
		step++;
		//gts.GetBlocksOfType(weaponCoreWeapons, b => b.CubeGrid == p.Me.CubeGrid && b.IsFunctional && APIWC.HasCoreWeapon(b));
		//yield return true;
		//step++;
		gts.GetBlocksOfType(inventoryBlocks, b => b.HasInventory && b.HasPlayerAccess(p.Me.OwnerId));
		yield return true;
		step++;
		if (neverFullyLoaded) log(""BOOT DONE. ""+tick+""t (""+(((float)tick)/60).ToString(""0.0"")+""s)"", LT.LOG_N);
		neverFullyLoaded = false;
		step++;
		yield return false;
	}
}

public class SpriteHUDLCD
{
	static Dictionary<string, Color> ColorList = new Dictionary<string, Color> { { ""aliceblue"", Color.AliceBlue }, { ""antiquewhite"", Color.AntiqueWhite }, { ""aqua"", Color.Aqua }, { ""aquamarine"", Color.Aquamarine }, { ""azure"", Color.Azure }, { ""beige"", Color.Beige }, { ""bisque"", Color.Bisque }, { ""black"", Color.Black }, { ""blanchedalmond"", Color.BlanchedAlmond }, { ""blue"", Color.Blue }, { ""blueviolet"", Color.BlueViolet }, { ""brown"", Color.Brown }, { ""burlywood"", Color.BurlyWood }, { ""badetblue"", Color.CadetBlue }, { ""chartreuse"", Color.Chartreuse }, { ""chocolate"", Color.Chocolate }, { ""coral"", Color.Coral }, { ""cornflowerblue"", Color.CornflowerBlue }, { ""cornsilk"", Color.Cornsilk }, { ""crimson"", Color.Crimson }, { ""cyan"", Color.Cyan }, { ""darkblue"", Color.DarkBlue }, { ""darkcyan"", Color.DarkCyan }, { ""darkgoldenrod"", Color.DarkGoldenrod }, { ""darkgray"", Color.DarkGray }, { ""darkgreen"", Color.DarkGreen }, { ""darkkhaki"", Color.DarkKhaki }, { ""darkmagenta"", Color.DarkMagenta }, { ""darkoliveGreen"", Color.DarkOliveGreen }, { ""darkorange"", Color.DarkOrange }, { ""darkorchid"", Color.DarkOrchid }, { ""darkred"", Color.DarkRed }, { ""darksalmon"", Color.DarkSalmon }, { ""darkseagreen"", Color.DarkSeaGreen }, { ""darkslateblue"", Color.DarkSlateBlue }, { ""darkslategray"", Color.DarkSlateGray }, { ""darkturquoise"", Color.DarkTurquoise }, { ""darkviolet"", Color.DarkViolet }, { ""deeppink"", Color.DeepPink }, { ""deepskyblue"", Color.DeepSkyBlue }, { ""dimgray"", Color.DimGray }, { ""dodgerblue"", Color.DodgerBlue }, { ""firebrick"", Color.Firebrick }, { ""floralwhite"", Color.FloralWhite }, { ""forestgreen"", Color.ForestGreen }, { ""fuchsia"", Color.Fuchsia }, { ""gainsboro"", Color.Gainsboro }, { ""ghostwhite"", Color.GhostWhite }, { ""gold"", Color.Gold }, { ""goldenrod"", Color.Goldenrod }, { ""gray"", Color.Gray }, { ""green"", Color.Green }, { ""greenyellow"", Color.GreenYellow }, { ""doneydew"", Color.Honeydew }, { ""hotpink"", Color.HotPink }, { ""indianred"", Color.IndianRed }, { ""indigo"", Color.Indigo }, { ""ivory"", Color.Ivory }, { ""khaki"", Color.Khaki }, { ""lavender"", Color.Lavender }, { ""lavenderblush"", Color.LavenderBlush }, { ""lawngreen"", Color.LawnGreen }, { ""lemonchiffon"", Color.LemonChiffon }, { ""lightblue"", Color.LightBlue }, { ""lightcoral"", Color.LightCoral }, { ""lightcyan"", Color.LightCyan }, { ""lightgoldenrodyellow"", Color.LightGoldenrodYellow }, { ""lightgray"", Color.LightGray }, { ""lightgreen"", Color.LightGreen }, { ""lightpink"", Color.LightPink }, { ""lightsalmon"", Color.LightSalmon }, { ""lightseagreen"", Color.LightSeaGreen }, { ""lightskyblue"", Color.LightSkyBlue }, { ""lightslategray"", Color.LightSlateGray }, { ""lightsteelblue"", Color.LightSteelBlue }, { ""lightyellow"", Color.LightYellow }, { ""lime"", Color.Lime }, { ""limegreen"", Color.LimeGreen }, { ""linen"", Color.Linen }, { ""magenta"", Color.Magenta }, { ""maroon"", Color.Maroon }, { ""mediumaquamarine"", Color.MediumAquamarine }, { ""mediumblue"", Color.MediumBlue }, { ""mediumorchid"", Color.MediumOrchid }, { ""mediumpurple"", Color.MediumPurple }, { ""mediumseagreen"", Color.MediumSeaGreen }, { ""mediumslateblue"", Color.MediumSlateBlue }, { ""mediumspringgreen"", Color.MediumSpringGreen }, { ""mediumturquoise"", Color.MediumTurquoise }, { ""mediumvioletred"", Color.MediumVioletRed }, { ""midnightblue"", Color.MidnightBlue }, { ""mintcream"", Color.MintCream }, { ""mistyrose"", Color.MistyRose }, { ""moccasin"", Color.Moccasin }, { ""navajowhite"", Color.NavajoWhite }, { ""navy"", Color.Navy }, { ""oldlace"", Color.OldLace }, { ""olive"", Color.Olive }, { ""olivedrab"", Color.OliveDrab }, { ""orange"", Color.Orange }, { ""orangered"", Color.OrangeRed }, { ""orchid"", Color.Orchid }, { ""palegoldenrod"", Color.PaleGoldenrod }, { ""palegreen"", Color.PaleGreen }, { ""paleturquoise"", Color.PaleTurquoise }, { ""palevioletred"", Color.PaleVioletRed }, { ""papayawhip"", Color.PapayaWhip }, { ""peachpuff"", Color.PeachPuff }, { ""peru"", Color.Peru }, { ""pink"", Color.Pink }, { ""plum"", Color.Plum }, { ""powderblue"", Color.PowderBlue }, { ""purple"", Color.Purple }, { ""red"", Color.Red }, { ""rosybrown"", Color.RosyBrown }, { ""royalblue"", Color.RoyalBlue }, { ""saddlebrown"", Color.SaddleBrown }, { ""salmon"", Color.Salmon }, { ""sandybrown"", Color.SandyBrown }, { ""seagreen"", Color.SeaGreen }, { ""seashell"", Color.SeaShell }, { ""sienna"", Color.Sienna }, { ""silver"", Color.Silver }, { ""skyblue"", Color.SkyBlue }, { ""slateblue"", Color.SlateBlue }, { ""slategray"", Color.SlateGray }, { ""snow"", Color.Snow }, { ""springgreen"", Color.SpringGreen }, { ""steelblue"", Color.SteelBlue }, { ""tan"", Color.Tan }, { ""teal"", Color.Teal }, { ""thistle"", Color.Thistle }, { ""tomato"", Color.Tomato }, { ""turquoise"", Color.Turquoise }, { ""violet"", Color.Violet }, { ""wheat"", Color.Wheat }, { ""white"", Color.White }, { ""whitesmoke"", Color.WhiteSmoke }, { ""yellow"", Color.Yellow }, { ""yellowgreen"", Color.YellowGreen } };
	public IMyTextSurface s = null;

	public SpriteHUDLCD(IMyTextSurface s)
	{
		this.s = s;
	}
	int ltick = -1;
	string lasttext = ""-1"";
	public void setLCD(string text)
	{
		if (text != lasttext || tick - ltick > 120)
		{
			ltick = tick;
			lasttext = text;
			s.WriteText(text);
			List<object> tok = new List<object>();
			string[] tokens = text.Split(new string[] { ""<color="" }, StringSplitOptions.None);
			for (int i = 0; i < tokens.Length; i++)
			{
				var t = tokens[i];
				foreach (var kvp in ColorList)
				{
					if (t.StartsWith(kvp.Key + "">""))
					{
						t = t.Substring(kvp.Key.Length + 1);
						tok.Add(kvp.Value);
						break;
					}
				}
				tok.Add(t);
			}

			s.ContentType = ContentType.SCRIPT;
			s.Script = """";
			s.Font = ""Monospace"";
			RectangleF _viewport;
			_viewport = new RectangleF(
	(s.TextureSize - s.SurfaceSize) / 2f,
	s.SurfaceSize
);
			using (var frame = s.DrawFrame())
			{
				var zpos = new Vector2(0, 0) + _viewport.Position + new Vector2(s.TextPadding / 100 * s.SurfaceSize.X, s.TextPadding / 100 * s.SurfaceSize.Y);
				var position = zpos;
				Color cColor = Color.White;
				foreach (var t in tok)
				{
					if (t is Color) cColor = (Color)t;
					else if (t is string) writeText((string)t, frame, ref position, zpos, s.FontSize, cColor);
				}
			}
		}
	}

	public void writeText(string text, MySpriteDrawFrame frame, ref Vector2 pos, Vector2 zpos, float textSize, Color color)
	{
		string[] lines = text.Split('\n');
		for (int l = 0; l < lines.Length; l++)
		{
			var line = lines[l];
			if (line.Length > 0)
			{
				MySprite sprite = MySprite.CreateText(line, ""Monospace"", color, textSize, TextAlignment.LEFT);
				sprite.Position = pos;
				frame.Add(sprite);
			}
			if (l < lines.Length - 1)
			{
				pos.X = zpos.X;
				pos.Y += 28 * textSize;
			}
			else pos.X += 20 * textSize * line.Length;
		}
	}
}

}

public class WcPbApi
{
	public string[] WcBlockTypeLabels = new string[]
		{
			""Any"",
			""Offense"",
			""Utility"",
			""Power"",
			""Production"",
			""Thrust"",
			""Jumping"",
			""Steering""
		};

	private Action<ICollection<MyDefinitionId>> a;
	private Func<IMyTerminalBlock, IDictionary<string, int>, bool> b;
	private Action<IMyTerminalBlock, IDictionary<MyDetectedEntityInfo, float>> c;
	private Func<long, bool> d;
	private Func<long, int, MyDetectedEntityInfo> e;
	private Func<IMyTerminalBlock, long, int, bool> f;
	private Action<IMyTerminalBlock, bool, bool, int> g;
	private Func<IMyTerminalBlock, bool> h;
	private Action<IMyTerminalBlock, ICollection<MyDetectedEntityInfo>> i;
	private Func<IMyTerminalBlock, ICollection<string>, int, bool> j;
	private Action<IMyTerminalBlock, ICollection<string>, int> k;
	private Func<IMyTerminalBlock, long, int, Vector3D?> l;

	private Func<IMyTerminalBlock, int, Matrix> m;
	private Func<IMyTerminalBlock, int, Matrix> n;
	private Func<IMyTerminalBlock, long, int, MyTuple<bool, Vector3D?>> o;
	private Func<IMyTerminalBlock, int, string> p;
	private Action<IMyTerminalBlock, int, string> q;
	private Func<long, float> r;
	private Func<IMyTerminalBlock, int, MyDetectedEntityInfo> s;
	private Action<IMyTerminalBlock, long, int> t;
	private Func<long, MyTuple<bool, int, int>> u;

	private Action<IMyTerminalBlock, bool, int> v;
	private Func<IMyTerminalBlock, int, bool, bool, bool> w;
	private Func<IMyTerminalBlock, int, float> x;
	private Func<IMyTerminalBlock, int, MyTuple<Vector3D, Vector3D>> y;
	private Func<IMyTerminalBlock, float> _getCurrentPower;
	public Func<Sandbox.ModAPI.Ingame.IMyTerminalBlock, float> _getHeatLevel;

	public bool isReady = false;
	IMyTerminalBlock pbBlock = null;
	public bool Activate(IMyTerminalBlock pbBlock)
	{
		this.pbBlock = pbBlock;
		var dict = pbBlock.GetProperty(""WcPbAPI"")?.As<IReadOnlyDictionary<string, Delegate>>().GetValue(pbBlock);
		if (dict == null) throw new Exception(""WcPbAPI failed to activate"");
		return ApiAssign(dict);
	}

	public bool ApiAssign(IReadOnlyDictionary<string, Delegate> delegates)
	{
		if (delegates == null)
			return false;
		AssignMethod(delegates, ""GetCoreWeapons"", ref a);
		AssignMethod(delegates, ""GetBlockWeaponMap"", ref b);
		AssignMethod(delegates, ""GetSortedThreats"", ref c);
		AssignMethod(delegates, ""GetObstructions"", ref i);
		AssignMethod(delegates, ""HasGridAi"", ref d);
		AssignMethod(delegates, ""GetAiFocus"", ref e);
		AssignMethod(delegates, ""SetAiFocus"", ref f);
		AssignMethod(delegates, ""HasCoreWeapon"", ref h);
		AssignMethod(delegates, ""GetPredictedTargetPosition"", ref l);
		AssignMethod(delegates, ""GetTurretTargetTypes"", ref j);
		AssignMethod(delegates, ""SetTurretTargetTypes"", ref k);
		AssignMethod(delegates, ""GetWeaponAzimuthMatrix"", ref m);
		AssignMethod(delegates, ""GetWeaponElevationMatrix"", ref n);
		AssignMethod(delegates, ""IsTargetAlignedExtended"", ref o);
		AssignMethod(delegates, ""GetActiveAmmo"", ref p);
		AssignMethod(delegates, ""SetActiveAmmo"", ref q);
		AssignMethod(delegates, ""GetConstructEffectiveDps"", ref r);
		AssignMethod(delegates, ""GetWeaponTarget"", ref s);
		AssignMethod(delegates, ""SetWeaponTarget"", ref t);
		AssignMethod(delegates, ""GetProjectilesLockedOn"", ref u);

		AssignMethod(delegates, ""FireWeaponOnce"", ref v);
		AssignMethod(delegates, ""ToggleWeaponFire"", ref g);
		AssignMethod(delegates, ""IsWeaponReadyToFire"", ref w);
		AssignMethod(delegates, ""GetMaxWeaponRange"", ref x);
		AssignMethod(delegates, ""GetWeaponScope"", ref y);

		AssignMethod(delegates, ""GetCurrentPower"", ref _getCurrentPower);
		AssignMethod(delegates, ""GetHeatLevel"", ref _getHeatLevel);

		//Delegate.CreateDelegate(null, null);

		isReady = true;
		return true;
	}
	private void AssignMethod<T>(IReadOnlyDictionary<string, Delegate> delegates, string name, ref T field) where T : class
	{
		if (delegates == null)
		{
			field = null;
			return;
		}
		Delegate del;
		if (!delegates.TryGetValue(name, out del))
			throw new Exception($""{GetType().Name} :: Couldn't find {name} delegate of type {typeof(T)}"");
		field = del as T;
		if (field == null)
			throw new Exception(
				$""{GetType().Name} :: Delegate {name} is not type {typeof(T)}, instead it's: {del.GetType()}"");
	}

	public void GetAllCoreWeapons(ICollection<MyDefinitionId> collection) => a?.Invoke(collection);
	public void GetSortedThreats(IDictionary<MyDetectedEntityInfo, float> collection) =>
		c?.Invoke(pbBlock, collection);
	public bool HasGridAi(long entity) => d?.Invoke(entity) ?? false;
	public MyDetectedEntityInfo? GetAiFocus(long shooter, int priority = 0) => e?.Invoke(shooter, priority);

	public bool SetAiFocus(IMyTerminalBlock pBlock, long target, int priority = 0) =>
		f?.Invoke(pBlock, target, priority) ?? false;

	public void ToggleWeaponFire(IMyTerminalBlock weapon, bool on, bool allWeapons, int weaponId = 0) =>
		g?.Invoke(weapon, on, allWeapons, weaponId);
	public bool HasCoreWeapon(IMyTerminalBlock weapon) => h?.Invoke(weapon) ?? false;

	public void GetObstructions(IMyTerminalBlock pBlock, ICollection<MyDetectedEntityInfo> collection) =>
		i?.Invoke(pBlock, collection);

	public Vector3D? GetPredictedTargetPosition(IMyTerminalBlock weapon, long targetEnt, int weaponId) =>
		l?.Invoke(weapon, targetEnt, weaponId) ?? null;

	public Matrix GetWeaponAzimuthMatrix(IMyTerminalBlock weapon, int weaponId) =>
		m?.Invoke(weapon, weaponId) ?? Matrix.Zero;

	public Matrix GetWeaponElevationMatrix(IMyTerminalBlock weapon, int weaponId) =>
		n?.Invoke(weapon, weaponId) ?? Matrix.Zero;

	public MyTuple<bool, Vector3D?> IsTargetAlignedExtended(IMyTerminalBlock weapon, long targetEnt, int weaponId) =>
		o?.Invoke(weapon, targetEnt, weaponId) ?? new MyTuple<bool, Vector3D?>();
	public string GetActiveAmmo(IMyTerminalBlock weapon, int weaponId) =>
		p?.Invoke(weapon, weaponId) ?? null;

	public void SetActiveAmmo(IMyTerminalBlock weapon, int weaponId, string ammoType) =>
		q?.Invoke(weapon, weaponId, ammoType);

	public float GetConstructEffectiveDps(long entity) => r?.Invoke(entity) ?? 0f;

	public MyDetectedEntityInfo? GetWeaponTarget(IMyTerminalBlock weapon, int weaponId = 0) =>
		s?.Invoke(weapon, weaponId);

	public void SetWeaponTarget(IMyTerminalBlock weapon, long target, int weaponId = 0) =>
		t?.Invoke(weapon, target, weaponId);

	public bool GetBlockWeaponMap(IMyTerminalBlock weaponBlock, IDictionary<string, int> collection) =>
		b?.Invoke(weaponBlock, collection) ?? false;

	public MyTuple<bool, int, int> GetProjectilesLockedOn(long victim) =>
		u?.Invoke(victim) ?? new MyTuple<bool, int, int>();

	public void FireWeaponOnce(IMyTerminalBlock weapon, bool allWeapons = true, int weaponId = 0) =>
			v?.Invoke(weapon, allWeapons, weaponId);


	public bool IsWeaponReadyToFire(IMyTerminalBlock weapon, int weaponId = 0, bool anyWeaponReady = true,
		bool shootReady = false) =>
		w?.Invoke(weapon, weaponId, anyWeaponReady, shootReady) ?? false;

	public float GetMaxWeaponRange(IMyTerminalBlock weapon, int weaponId) =>
		x?.Invoke(weapon, weaponId) ?? 0f;

	public MyTuple<Vector3D, Vector3D> GetWeaponScope(IMyTerminalBlock weapon, int weaponId) =>
		y?.Invoke(weapon, weaponId) ?? new MyTuple<Vector3D, Vector3D>();
	public float GetCurrentPower(IMyTerminalBlock weapon) => _getCurrentPower?.Invoke(weapon) ?? 0f;

	public float GetHeatLevel(Sandbox.ModAPI.Ingame.IMyTerminalBlock weapon) => _getHeatLevel?.Invoke(weapon) ?? 0f;"
wmyQ5bAd,HA climate new test,chemelli74,Python,Wednesday 24th of January 2024 04:27:26 PM CDT,"""""""Support for climates.""""""
from __future__ import annotations

from typing import Any

from aiocomelit import ComelitSerialBridgeObject
from aiocomelit.const import CLIMATE

from homeassistant.components.climate import (
    ClimateEntity,
    ClimateEntityFeature,
    HVACAction,
    HVACMode,
    UnitOfTemperature,
)
from homeassistant.config_entries import ConfigEntry
from homeassistant.const import ATTR_TEMPERATURE
from homeassistant.core import HomeAssistant
from homeassistant.helpers.entity_platform import AddEntitiesCallback
from homeassistant.helpers.update_coordinator import CoordinatorEntity

from .const import _LOGGER, DOMAIN
from .coordinator import ComelitSerialBridge

CLIMATE_ACTIONS: dict[HVACMode, str] = {
    HVACMode.OFF: ""off"",
    HVACMode.AUTO: ""auto"",
    HVACMode.HEAT: ""on"",
    HVACMode.COOL: ""on"",
}

PRESET_MODES: dict[str, list[str]] = {
    ""Estate"": [""L"", ""lower""],
    ""Inverno"": [""U"", ""upper""],
}


async def async_setup_entry(
    hass: HomeAssistant,
    config_entry: ConfigEntry,
    async_add_entities: AddEntitiesCallback,
) -> None:
    """"""Set up Comelit climates.""""""

    coordinator: ComelitSerialBridge = hass.data[DOMAIN][config_entry.entry_id]

    async_add_entities(
        ComelitClimateEntity(coordinator, device, config_entry.entry_id)
        for device in coordinator.data[CLIMATE].values()
    )


class ComelitClimateEntity(CoordinatorEntity[ComelitSerialBridge], ClimateEntity):
    """"""Climate device.""""""

    _attr_hvac_modes = [HVACMode.OFF, HVACMode.HEAT, HVACMode.COOL, HVACMode.AUTO]
    _attr_icon = ""mdi:thermostat""
    _attr_max_temp = 30
    _attr_min_temp = 5
    _attr_preset_modes = [""ESTATE"", ""INVERNO""]
    _attr_supported_features = (
        ClimateEntityFeature.TARGET_TEMPERATURE | ClimateEntityFeature.PRESET_MODE
    )
    _attr_target_temperature_step = 0.1
    _attr_temperature_unit = UnitOfTemperature.CELSIUS
    _attr_has_entity_name = True
    _attr_name = None

    def __init__(
        self,
        coordinator: ComelitSerialBridge,
        device: ComelitSerialBridgeObject,
        config_entry_entry_id: str,
    ) -> None:
        """"""Init light entity.""""""
        self._api = coordinator.api
        self._device = device
        super().__init__(coordinator)
        # Use config_entry.entry_id as base for unique_id
        # because no serial number or mac is available
        self._attr_unique_id = f""{config_entry_entry_id}-{device.index}""
        self._attr_device_info = coordinator.platform_device_info(device, device.type)

    @property
    def _clima(self) -> list[Any]:
        """"""Return clima device data.""""""
        # CLIMATE has 2 turple:
        # - first  for Clima
        # - second for Humidifier
        return self.coordinator.data[CLIMATE][self._device.index].val[0]

    @property
    def _api_preset(self) -> str:
        """"""Return device preset.""""""
        # Values from API: ""O"", ""L"", ""U""
        _LOGGER.debug(""_api_preset = %s"", self._clima[2])
        return self._clima[2]

    @property
    def _api_active(self) -> bool:
        ""Return device active/idle.""
        _LOGGER.debug(""_api_active = %s"", self._clima[1])
        return self._clima[1]

    @property
    def _api_automatic(self) -> bool:
        """"""Return device in automatic/manual mode.""""""
        _LOGGER.debug(""_api_automatic = %s"", self._clima[3] == ""A"")
        return self._clima[3] == ""A""

    @property
    def target_temperature(self) -> float:
        """"""Set target temperature.""""""
        _LOGGER.debug(""target_temperature = %s"", self._clima[4] / 10)
        return self._clima[4] / 10

    @property
    def current_temperature(self) -> float:
        """"""Return current temperature.""""""
        _LOGGER.debug(""current_temperature = %s"", self._clima[0] / 10)
        return self._clima[0] / 10

    @property
    def hvac_mode(self) -> HVACMode:
        """"""HVAC current mode.""""""
        if self._api_preset == ""O"":
            _LOGGER.debug(""hvac_mode = OFF"")
            return HVACMode.OFF

        if self._api_preset == ""L"":
            _LOGGER.debug(""hvac_mode = COOL"")
            return HVACMode.COOL

        if self._api_preset == ""U"":
            _LOGGER.debug(""hvac_mode = HEAT"")
            return HVACMode.HEAT

        # _api_preset = ""S""
        _LOGGER.debug(""hvac_mode = AUTO"")
        return HVACMode.AUTO

    @property
    def hvac_action(self) -> HVACAction:
        """"""HVAC current action.""""""

        if not self._api_active:
            _LOGGER.debug(""hvac_action = IDLE"")
            return HVACAction.IDLE

        _LOGGER.debug(
            ""hvac_action = %s"",
            ""heating"" if self.preset_mode == ""INVERNO"" else ""cooling"",
        )
        return (
            HVACAction.HEATING if self.preset_mode == ""INVERNO"" else HVACAction.COOLING
        )

    @property
    def preset_mode(self) -> str | None:
        """"""Return preset mode.""""""

        if self._api_preset == ""L"":
            _LOGGER.debug(""preset_mode = ESTATE"")
            return ""ESTATE""

        if self._api_preset == ""U"":
            _LOGGER.debug(""preset_mode = INVERNO"")
            return ""INVERNO""

        return None

    async def async_set_temperature(self, **kwargs: Any) -> None:
        """"""Set new target temperature.""""""
        if (target_temp := kwargs.get(ATTR_TEMPERATURE)) is None:
            return

        await self.coordinator.api.set_clima_status(
            self._device.index, ""set"", target_temp * 10
        )

    async def async_set_hvac_mode(self, hvac_mode: HVACMode) -> None:
        """"""Set hvac mode.""""""
        await self.coordinator.api.set_clima_status(
            self._device.index, CLIMATE_ACTIONS[hvac_mode], 0
        )

    async def async_set_preset_mode(self, preset_mode: str) -> None:
        """"""Set new target preset mode.""""""
        if preset_mode == ""ESTATE"":
            action = ""lower""
        else:
            action = ""upper""
        await self.coordinator.api.set_clima_status(self._device.index, action)
"
CrGf7tJs,Player Detect,ShinukiAyatoVT,Lua,Wednesday 24th of January 2024 03:48:47 PM CDT,"local pd = peripheral.find(""playerDetector"")
local radius = 4

local pos1 = {x=-1270, y=63, z=1909}
local pos2 = {x=-1211, y=80, z=185}

local visitors = {}

while true do
  for _, name in pairs(pd.getPlayersInCoords({x=-1270, y=63, z=1909}, {x=-1211, y=80, z=185})) do
    if not visitors[name] then
      if visitors[name] == nil then
        if print(name, ""entered the casino"") then
          visitors[name] = true;
        end
      else
        visitors[name] = true;
      end
    end
  end
  for name in pairs(visitors) do
    if visitors[name] then
      visitors[name] = false
    else
      local res, reason = print(name, ""leaved the casino"")
      if res or reason == ""incorrect player name/uuid"" then
        visitors[name] = nil
      end
    end
  end
end"
waqq1iQX,More Swipers,kasilia_creations,JavaScript,Wednesday 24th of January 2024 02:58:40 PM CDT,"import React, { useRef, useState } from 'react';
// Import Swiper React components
import { Swiper, SwiperSlide } from 'swiper/react';

// Import Swiper styles
import 'swiper/css';
import 'swiper/css/pagination';

import './styles.css';

// import required modules
import { Pagination } from 'swiper/modules';

export default function App() {
  return (
    <>
      <Swiper
        slidesPerView={3}
        spaceBetween={30}
        pagination={{
          clickable: true,
        }}
        modules={[Pagination]}
        className=""mySwiper""
      >
        <SwiperSlide>Slide 1</SwiperSlide>
        <SwiperSlide>Slide 2</SwiperSlide>
        <SwiperSlide>Slide 3</SwiperSlide>
        <SwiperSlide>Slide 4</SwiperSlide>
        <SwiperSlide>Slide 5</SwiperSlide>
        <SwiperSlide>Slide 6</SwiperSlide>
        <SwiperSlide>Slide 7</SwiperSlide>
        <SwiperSlide>Slide 8</SwiperSlide>
        <SwiperSlide>Slide 9</SwiperSlide>
      </Swiper>
    </>
  );
}


// Nested for the next section
import React, { useRef, useState } from 'react';
// Import Swiper React components
import { Swiper, SwiperSlide } from 'swiper/react';

// Import Swiper styles
import 'swiper/css';
import 'swiper/css/grid';
import 'swiper/css/pagination';

import './styles.css';

// import required modules
import { Grid, Pagination } from 'swiper/modules';

export default function App() {
  return (
    <>
      <Swiper
        slidesPerView={3}
        grid={{
          rows: 2,
        }}
        spaceBetween={30}
        pagination={{
          clickable: true,
        }}
        modules={[Grid, Pagination]}
        className=""mySwiper""
      >
        <SwiperSlide>Slide 1</SwiperSlide>
        <SwiperSlide>Slide 2</SwiperSlide>
        <SwiperSlide>Slide 3</SwiperSlide>
        <SwiperSlide>Slide 4</SwiperSlide>
        <SwiperSlide>Slide 5</SwiperSlide>
        <SwiperSlide>Slide 6</SwiperSlide>
        <SwiperSlide>Slide 7</SwiperSlide>
        <SwiperSlide>Slide 8</SwiperSlide>
        <SwiperSlide>Slide 9</SwiperSlide>
      </Swiper>
    </>
  );
}

// Auto Play
import React, { useRef, useState } from 'react';
// Import Swiper React components
import { Swiper, SwiperSlide } from 'swiper/react';

// Import Swiper styles
import 'swiper/css';
import 'swiper/css/pagination';
import 'swiper/css/navigation';

import './styles.css';

// import required modules
import { Autoplay, Pagination, Navigation } from 'swiper/modules';

export default function App() {
  return (
    <>
      <Swiper
        spaceBetween={30}
        centeredSlides={true}
        autoplay={{
          delay: 2500,
          disableOnInteraction: false,
        }}
        pagination={{
          clickable: true,
        }}
        navigation={true}
        modules={[Autoplay, Pagination, Navigation]}
        className=""mySwiper""
      >
        <SwiperSlide>Slide 1</SwiperSlide>
        <SwiperSlide>Slide 2</SwiperSlide>
        <SwiperSlide>Slide 3</SwiperSlide>
        <SwiperSlide>Slide 4</SwiperSlide>
        <SwiperSlide>Slide 5</SwiperSlide>
        <SwiperSlide>Slide 6</SwiperSlide>
        <SwiperSlide>Slide 7</SwiperSlide>
        <SwiperSlide>Slide 8</SwiperSlide>
        <SwiperSlide>Slide 9</SwiperSlide>
      </Swiper>
    </>
  );
}
"
Ecdg3G7N,Задача 9,dmemsm,Python,Wednesday 24th of January 2024 02:38:43 PM CDT,"result = 1/103

for i in range(97, 0, -6):
    result = 1 / (i + result)

print(result)

# 0.8761857313542953"
Ai98f571,derp.py,j0h,Python,Wednesday 24th of January 2024 02:34:56 PM CDT,"#!/usr/bin/python3

def x():
    print(""Fk"")

    def y():
        print(""My"")

        def z():
            print(""Life"")

        z() #Call the inner most function inside y() 

    y()  # Call the inner function inside x()

# Call the outer function
x()"
Hi7eYbch,DIABLO DEMO CODE,imk0tter,mIRC,Wednesday 24th of January 2024 02:34:40 PM CDT,"alias ABSN {
  var %sqrt 2 ^ -1
  var %number $1 ^ 2
  var %result %number ^ %sqrt

  return %result
}
alias ATANN {
  var %x $1 / $absn($1)
  return %x

}
alias COUNT_TO_NUMBER {
  return $calc($1 + $ATANN($calc($1 ^ $ATANN($1))) * $ABSN($2))
}
alias LIMIT {
  return $max($min($3, $1), $2)
}
alias TRIM {
  return $calc($1 - $1 % 1) 
}
;;;;;;;;;;;;;;;;;;;
; FOR DIABLO DEMO ;
;;;;;;;;;;;;;;;;;;;
alias DIABLO_D2_CRAFT_COST {
  ;$1 = Item Level
  ;$2 = Minimum Gold Tick (% BASED)
  return $calc(2 ^ $1 * (100 / $2))
}
alias DIABLO_EXP_TO_D2_GOLD {
  ;$1 = Player Level
  ;$2 = Monster Level
  ;$3 = Monster Count Start
  ;$4 = Monster Count Interval
  ;$5 = Goldfind Multiplier (% BASED)
  ;$6 = Minimum Gold Tick (% BASED)

  var %MINIMUM_GOLD_TICK $$6
  var %PLAYER_LEVEL $1
  var %MONSTER_LEVEL $2
  var %MONSTER_COUNT_START $3
  var %MONSTER_COUNT_INTERVAL $4
  var %GOLDFIND_MULTIPLIER $5

  var %tiers 12

  return $TRIM($calc((2 ^ (($DIABLO_PLEVEL_AND_MLEVEL_TO_EXP_NEW(%PLAYER_LEVEL,%MONSTER_LEVEL,%MONSTER_COUNT_START,%MONSTER_COUNT_INTERVAL) - 1) / %tiers - 1) * ($limit(%GOLDFIND_MULTIPLIER,0,100) / 100) * 2 ^ ($limit(%GOLDFIND_MULTIPLIER,100,$calc(%GOLDFIND_MULTIPLIER + 100)) / 100)) * (100 / %MINIMUM_GOLD_TICK)))

  ;return $calc(2 ^ ($DIABLO_PLEVEL_AND_MLEVEL_TO_EXP_NEW($1,$2,$3,$4) / 12 + ($5 / 100 - 1)))
}
; COUNT = PLEVEL - MLEVEL
; OFFSET = COUNT_TO_NUMBER(COUNT)
; print(""OFFSETA: "" + str(OFFSET))
; return (((PLEVEL + 1) / ABSN(OFFSET) ** ATANN(OFFSET)) / MONSTER_COUNT_INTERVAL) / MONSTER_COUNT_START
alias DIABLO_PLEVEL_AND_MLEVEL_TO_EXP_NEW {
  var %plevel $1
  var %mlevel $iif($2,$2,$1)
  var %monster_start $iif($3,$3,1)
  var %monster_count $iif($4,$4,1)

  var %COUNT $COUNT_TO_NUMBER($calc((%PLEVEL - %MLEVEL) * %monster_count + %monster_start - $LIMIT($DTEST_VIRII(%monster_start),0,1)),1)

  return $ABSN($calc((%PLEVEL + 1) / %COUNT ^ $ATANN(%COUNT)))
}
alias DTEST_VIRII {
  return $calc((($1 ^ 2) ^ -1 - ($1 ^ -1) + 1) * $1)
}
;;;;;;;;;;;;;;;;;;;;;;;
; END FOR DIABLO DEMO ;
;;;;;;;;;;;;;;;;;;;;;;;"
612Bad42,Задача 3,dmemsm,Python,Wednesday 24th of January 2024 02:34:31 PM CDT,"import math

result = 95+math.sqrt(5)

for i in range(90, 0, -5):
    result += i + math.sqrt(result)/2

result = math.sqrt(result)
print(result)

# 34.44878785772421"
jsrWEzw0,TP02_Punto02,gabriel097,Java,Wednesday 24th of January 2024 02:30:40 PM CDT,"/*
2) Escribir un programa que permita verificar la parentización múltiple de una expresión matemática; se dice
parentización múltiple porque se utilizan varios símbolos que deben emparejarse; en este caso los símbolos
de apertura son: “(”, “[” y “{”; los símbolos de cierre son: “)”, “]” y “}” respectivamente. Para la resolución
del ejercicio se deben utilizar las versiones básica o genérica de Stack propuestas en teoría.
 */
import java.util.Scanner;

public class Punto02 {

    public static void main(String[] args) {
        char resp;
        do {
            Scanner entrada = new Scanner(System.in);
            System.out.println(""Ingrese expresion matematica:.."");
            String cadena = entrada.nextLine();
            if (verificarParentesis(cadena)) {
                System.out.println(""La expresion esta bien parentizada"");
            } else {
                System.out.println(""La expresion NO esta bien parentizada"");
            }
            System.out.println(""¿Continuar ingresando?...s/n"");
            resp=helper.validarRespuesta();
        } while (resp!= 'n');
    }

    static boolean verificarParentesis(String cadena) {
        Stack<Character> pila = new Stack<Character>();
        char c;
        //lee la cadena caracter por caracter
        for (int i = 0; i < cadena.length(); i++) {
            c = cadena.charAt(i);
            if (c == '(' || c == '{' || c == '[') {
                pila.push(c);// se guarda en la pila
            } else {
                if (c == ')' || c == '}' || c == ']') {
                    if (!pila.empty()) {
                        pila.pop(); //se desapila 
                    } else {
                        return false;
                    }
                }
            }
        }
        return pila.size() == 0;
        //si esta bien parentizada entonces la pila esta vacia retorna true
        //sino si la pila no esta vacia retorna false

    }
}
"
EhdkM9Qi,Вопрос 2,dmemsm,Python,Wednesday 24th of January 2024 02:27:41 PM CDT,"import math

a, b, c = map(int, input().split())
#ax**2+bx+c-16=0
c -= 16
D = b**2-4*a*c
if D < 0:
    print(""Нет корней"")
elif D == 0:
    x = -1*b/(2*a)
    print(""Один корень: "" + x)
else:
    sqrtd = math.sqrt(D)
    x1 = (-1*b-sqrtd)/(2*a)
    x2 = (-1*b+sqrtd)/(2*a)
    print(f""Два корня: {x1} и {x2}"")"
ymPNN978,Задача 1,dmemsm,Python,Wednesday 24th of January 2024 02:26:30 PM CDT,"for i in range(100, 1000):
    istr = str(i)
    d1 = int(istr[0] + istr[1])
    d2 = int(istr[1] + istr[0])
    m = int(istr[0]) * int(istr[1]) * int(istr[2])
    if m**2 == d1 or m**2 == d2:
        print(istr)
"
Na76rgqP,Swiper Autoplay,kasilia_creations,JavaScript,Wednesday 24th of January 2024 02:04:24 PM CDT,"import React, { useRef, useState } from 'react';
// Import Swiper React components
import { Swiper, SwiperSlide } from 'swiper/react';

// Import Swiper styles
import 'swiper/css';
import 'swiper/css/pagination';
import 'swiper/css/navigation';

import './styles.css';

// import required modules
import { Autoplay, Pagination, Navigation } from 'swiper/modules';

export default function App() {
  const progressCircle = useRef(null);
  const progressContent = useRef(null);
  const onAutoplayTimeLeft = (s, time, progress) => {
    progressCircle.current.style.setProperty('--progress', 1 - progress);
    progressContent.current.textContent = `${Math.ceil(time / 1000)}s`;
  };
  return (
    <>
      <Swiper
        spaceBetween={30}
        centeredSlides={true}
        autoplay={{
          delay: 2500,
          disableOnInteraction: false,
        }}
        pagination={{
          clickable: true,
        }}
        navigation={true}
        modules={[Autoplay, Pagination, Navigation]}
        onAutoplayTimeLeft={onAutoplayTimeLeft}
        className=""mySwiper""
      >
        <SwiperSlide>Slide 1</SwiperSlide>
        <SwiperSlide>Slide 2</SwiperSlide>
        <SwiperSlide>Slide 3</SwiperSlide>
        <SwiperSlide>Slide 4</SwiperSlide>
        <SwiperSlide>Slide 5</SwiperSlide>
        <SwiperSlide>Slide 6</SwiperSlide>
        <SwiperSlide>Slide 7</SwiperSlide>
        <SwiperSlide>Slide 8</SwiperSlide>
        <SwiperSlide>Slide 9</SwiperSlide>
        <div className=""autoplay-progress"" slot=""container-end"">
          <svg viewBox=""0 0 48 48"" ref={progressCircle}>
            <circle cx=""24"" cy=""24"" r=""20""></circle>
          </svg>
          <span ref={progressContent}></span>
        </div>
      </Swiper>
    </>
  );
}
"
7wuR7brQ,Transpose,PIBogdanov,C,Wednesday 24th of January 2024 02:02:40 PM CDT,"#include <stdio.h>

int main()
{
    int numbers[13][13];

    printf(""Input elements into the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            scanf(""%d"", &numbers[i][j]);
        }

        printf(""\n"");
    }

    printf(""\n\nPrinting the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            printf(""%d "", numbers[i][j]);
        }

        printf(""\n"");
    }

    printf(""\n\n\nTransposing the array ....\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = i + 1; j < 13; j++)
        {
            numbers[i][j] += numbers[j][i];

            numbers[j][i] = numbers[i][j] - numbers[j][i];

            numbers[i][j] -= numbers[j][i];

            if (numbers[j][i] < 0)
            {
                numbers[j][i] = -numbers[j][i];
            }
        }
    }

    printf(""\nPrinting the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            printf(""%d "", numbers[i][j]);
        }

        printf(""\n"");
    }

    return 0;
}"
xKmvunA2,Transpose,PIBogdanov,C,Wednesday 24th of January 2024 02:00:33 PM CDT,"#include <stdio.h>

int main()
{
    int numbers[13][13];

    printf(""Input elements into the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            scanf(""%d"", &numbers[i][j]);
        }

        printf(""\n"");
    }

    printf(""\n\nPrinting the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            printf(""%d "", numbers[i][j]);
        }

        printf(""\n"");
    }

    printf(""\n\n\nTransposing the array ....\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = i + 1; j < 13; j++)
        {
            numbers[i][j] += numbers[j][i];

            numbers[j][i] = numbers[i][j] - numbers[j][i];

            numbers[i][j] -= numbers[j][i];

            if (numbers[j][i] >= 0)
            {
                numbers[j][i] = numbers[j][i];
            }

            else
            {
                numbers[j][i] = -numbers[j][i];
            }
        }
    }

    printf(""\nPrinting the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            printf(""%d "", numbers[i][j]);
        }

        printf(""\n"");
    }

    return 0;
}"
DM17bLDb,Visual Voice Mail file on Android,metalx1000,Bash,Wednesday 24th of January 2024 01:48:49 PM CDT,"# Visual Voice Mail file on Android

cd /data/data/com.google.android.dialer/files
strings VisualVoicemailFragmentModelCacheData.pb"
gMd1chTA,Transpose,PIBogdanov,C,Wednesday 24th of January 2024 01:46:30 PM CDT,"#include <stdio.h>

int main()
{
    int numbers[13][13];

    printf(""Input elements into the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            scanf(""%d"", &numbers[i][j]);
        }

        printf(""\n"");
    }

    printf(""\n\nPrinting the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            printf(""%d "", numbers[i][j]);
        }

        printf(""\n"");
    }

    printf(""\n\n\nTransposing the array ....\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = i + 1; j < 13; j++)
        {
            numbers[i][j] += numbers[j][i];

            numbers[j][i] = numbers[i][j] - numbers[j][i];

            numbers[i][j] -= numbers[j][i];
        }
    }

    printf(""\nPrinting the array:\n\n"");

    for (int i = 0; i < 13; i++)
    {
        for (int j = 0; j < 13; j++)
        {
            printf(""%d "", numbers[i][j]);
        }

        printf(""\n"");
    }

    return 0;
}"
5uSRrTaE,Scraping Data from Google Dialer,metalx1000,Bash,Wednesday 24th of January 2024 01:31:26 PM CDT,"#Android Public Listings
#if Google Phone Dialer is installed
cd /data/data/com.google.android.dialer/files/datadownload/shared/public

# names and phone
strings *|grep -v http|grep -v '^\$'|sed 's/2$//g'|grep '+' -B1

# user photo
strings *|sed 's/http/\nhttp/g'|grep http"
ps3JGLEi,burstmissile for addaction,Gamenator,SQF,Wednesday 24th of January 2024 01:29:01 PM CDT,"null=[]spawn{
_i=100;

if(((vehicle player iskindof ""Plane"") || (vehicle player iskindof ""Helicopter"")) && (side player == west))then{  
  _bomb = ""FIR_GBU24A_BLU118"";  
     
if ((( getposatl vehicle player) select 2 > 750) || (( getposatl vehicle player) select 2 < 10)) then{
    private _degree=0;       
    private _position1 = vehicle player getRelPos [0,0];    
    private _newPos1 = _position1 vectorAdd [0,0,720];
    _missile = createVehicle [_bomb, _newpos1, [], 0, ""CAN_COLLIDE""];        
	triggerammo _missile;  
	for ""_i"" from 0 to 3 do{
	 private _rand_num = [10, 250] call BIS_fnc_randomInt;
	 private _position1 = vehicle player getRelPos [_rand_num,_degree];    
	 private _newPos1 = _position1 vectorAdd [0,0,720];
	 _missile1 = createVehicle [_bomb, _newpos1, [], 0, ""CAN_COLLIDE""];
	 triggerammo _missile1;
	_degree = _degree +90;
	};
           
        
    }else{  
 _missile = createVehicle [_bomb, vehicle player, [], 0, ""CAN_COLLIDE""];  
  triggerammo _missile;
  for ""_i"" from 0 to 3 do{
	 private _rand_num = [10, 250] call BIS_fnc_randomInt;
	 private _rand_num1 = [10, 250] call BIS_fnc_randomInt;
	 private _position0 = getposatl vehicle player;   
	 private _newPos0 = _position0 vectorAdd [_rand_num,_rand_num1];
	 _missile1 = createVehicle [_bomb, _newpos0, [], 0, ""CAN_COLLIDE""];
	 triggerammo _missile1;
	};
         
  };   
    
      
     
deletevehicle p2;}  
};"
Esn7nWFY,Format The Text,Pijomir,JavaScript,Wednesday 24th of January 2024 01:22:47 PM CDT,"function solve() {
    let outputRef = document.getElementById(""output"");
    let text = document.getElementById(""input"").value;
    let sentences = text.split('.').filter(Boolean);
    let counter = 0;
    let currentParagraph = [];
    while (sentences.length > 0) {
      if (counter === 3) {
        outputRef.innerHTML += `<p>${currentParagraph.join('.')}.</p>`;
        counter = 0;
        currentParagraph = [];
      }

      let currentSentence = sentences.shift();
      currentParagraph.push(currentSentence);
      counter++;
    }

    outputRef.innerHTML += `<p>${currentParagraph.join('.')}.</p>`;
}"
