id,title,username,language,date,content
uD4wzjbZ,ROBLOX BLADE BALL KEYLESS SCRIPTS,Artani,Lua,Tuesday 3rd of October 2023 06:28:21 AM CDT,"GET THE SCRIPTS HERE
https://artanisrbx.com/blade-ball-script-gui-hack-auto-win-auto-farm-auto-parry-infinite-coins-pastebin-2023/
COPY LINK INTO BROWSER"
B0wKRuUZ,Split Table Function,slanda,Lua,Tuesday 3rd of October 2023 06:27:41 AM CDT,"function split(inStr, sep)
    local t = {}
    for str in string.gmatch(inStr, ""([^""..sep..""]+)"") do
        table.insert(t, str)
    end
    return t
end

return {split = split}"
fkLpeFjH,Pastebin Installer,slanda,Lua,Tuesday 3rd of October 2023 06:25:46 AM CDT,"-- By: Lua Nub
function Pastebin( sCode, sPath )
	local response = http.get(""http://pastebin.com/raw.php?i=""..textutils.urlEncode( sCode ))
	if response then
    	local sResponse = response.readAll()
    	response.close()
    	local file = fs.open( sPath, ""w"" )
    	file.write( sResponse )
    	file.close()
	end
end

local filename = ""startup.lua""
local code = ""7wzqwmAz""

if not fs.exists(filename) then
  Pastebin(code, filename)
end"
hB1hEhyK,10. Online Store,horozov86,Python,Tuesday 3rd of October 2023 06:25:27 AM CDT,"CREATE TABLE item_types (
    id SERIAL PRIMARY KEY,
    item_type_name VARCHAR(50)
);

CREATE TABLE items (
    id SERIAL PRIMARY KEY,
    item_name VARCHAR(50),
    item_type_id INT,

    CONSTRAINT fk_items_item_types
    FOREIGN KEY (item_type_id)
    REFERENCES item_types(id)
);

CREATE TABLE cities (
    id SERIAL PRIMARY KEY,
    city_name VARCHAR(50)
);

CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    customer_name VARCHAR(100),
    birthday DATE,
    city_id INT,

    CONSTRAINT fk_customers_cities
    FOREIGN KEY (city_id)
    REFERENCES cities(id)
);

CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    customer_id INT,

    CONSTRAINT fk_orders_customers
    FOREIGN KEY (customer_id)
    REFERENCES customers(id)
);

CREATE TABLE order_items (
    order_id INT,
    item_id INT,

    CONSTRAINT pk_order_items
    PRIMARY KEY (order_id, item_id),

    CONSTRAINT fk_order_items_orders
    FOREIGN KEY (order_id)
    REFERENCES orders(id),

    CONSTRAINT fk_order_items_items
    FOREIGN KEY (item_id)
    REFERENCES items(id)
    
);"
7wzqwmAz,PlayerWatch,slanda,Lua,Tuesday 3rd of October 2023 06:16:02 AM CDT,"split = require(""split"").split
local pd = peripheral.wrap(""right"")
local range = 10
os.startTimer(1)

function checkTable(t, i)
    for _, item in t do
        if item == i then
            return true
        end
    end
    return false
end

while true do
    local event = os.pullEvent()
    local players = {}
    if event == ""timer"" then
        local file = fs.open(""players.txt"", ""r"")
        local oldPlayers = split(file.readAll(), "","")
        file.close()
        local newTable = {}
        players = pd.getPlayersInRange(range)
        for _, player in pairs(players) do
            if not checkTable(oldPlayers, player) then
                table.insert(newTable, player)
            end
        end
        local file = fs.open(""players.txt"", ""a"")
        file.write(newTable)
        file.close()
    end
end"
NU3BB7zu,Untitled,andarz,C#,Tuesday 3rd of October 2023 06:13:02 AM CDT,"public static Stack<T> ReverseStack<T>(Stack<T> inputStack)
{
    // Создаем временный список для хранения элементов
    List<T> tempList = new List<T>();

    // Переносим элементы из стека в список
    while (inputStack.Count > 0)
    {
        tempList.Add(inputStack.Pop());
    }

    return new Stack<T>(tempList);"
mRjM7sGB,data714,TestGuy1,JSON,Tuesday 3rd of October 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3af4d5954b77574371df28c38ca05ee37279b13a35a24c631260bac6ad43f8e7312f14557c4898a85799716acc26a5e6098e62593baf83739ef2a93f960bedcf1d60ad153e865309c7e1e21155e879c98a4edac8688606f22891e71ce889342141120613e36d5d36366edd9d32a2099c555399960cdd90aa156f373d0f95bfbb',
  otherdata: [
    '0e8246c233efbf3ddf0b1f7b501904c4',
    'e343a27f8cd21dc94563aa958a54359c',
    '9d211c73ebdfdd8c905a32acfb40bd1c',
    'c8157b0e9d4e91ab529fa9a766f604e4',
    '7347be69110f37b7debf941334a81cf9',
    'b72593a6d181ce80b77f75d8ddeded3b',
    '319dabbb5dad4a1b1d5ead6bb4e9de2a',
    'a100c63c184611169662b261e06f3ca4'
  ]
}"
RfRsCESc,purchase datalayer script - phhennestrand.dk,chiragsolanki,JavaScript,Tuesday 3rd of October 2023 05:41:35 AM CDT,"window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  event: 'GA4_purchase',            // name of the event. In this case, it always must be GA4_purchase
  ecommerce: {
    currency: 'DKK',
    value: 4,944.00,                       // order total (price of all products + shipping). If you want, it can be only price of all products
    tax: 824.00,                          // tax
    shipping: 20.00,                 // shipping costs
    transaction_id: 'abc123',           // transaction id
    coupon: 'ENDOFSUMMER',          // if coupon was applied to the order, include it here          
    items: [{                           // an array with all products
      item_name: 'ELVINE, AYDEN JAKKE I SAND',           // insert an actual product name
      item_id: 'product1',              // insert an actual product ID
      price: 1,600.00,                 // insert an actual product price. Number or a string. Don't include currency code
      item_brand: 'brand A',            // insert an actual product brand
      item_category: 'Elvine',         // insert an actual product top-level category
      quantity: '1',                    // product quantity
      item_coupon: 'SUMMER20'           // if a coupon was applied not to the entire order but to one product, use item_coupon
    },{
      item_name: 'MILESTONE, TERENZ SKINDJAKKE I GRØN',
      item_id: 'product2',
      price: 2,500.00,
      item_brand: 'Brand B',
      item_category: 'Milestone',
      quantity: '1'
    }]
  }
});"
6srq7sxx,Sorted List,nm9505,Latex,Tuesday 3rd of October 2023 05:38:15 AM CDT,"using System;
using System.Text.RegularExpressions;
using System.IO;
using Mono.CSharp;
using Android.Widget;
using Android.Content;
using Android.Views.InputMethods;
using System.Threading.Tasks;
using NativeUiLib; //This ads the GUI contols. Minor abstractions over Xamarin.Android/Mono.Android
namespace SORTED
{
	public static class Program
	{
		public static async void Main()
		{
			var Bolas = ""01234567890987654321012345678901234567890123456789"";
			string lista = null;
			int[] sf = new int[10];
			int z=0;
			var sort = new char[5]; var bola = new Random(); 
			var lay1 = new LinearLayout();
			//lay1.Orientation = Android.Widget.Orientation.Vertical;
			
			var lbl = lay1.AddTextView();
			var valor = lay1.AddEditText(true);
			
			
			//var lay2 = new LinearLayout();
			//lay2.Orientation = Android.Widget.Orientation.Horizontal;
			int N = 50000;
			var btn = lay1.AddButton();
			var btn1 = lay1.AddButton();
			var lbl1 = lay1.AddTextView();
			
			lbl1.SetPadding(4,5,5,0);
			if (valor.Text != """")
			{
				N = Convert.ToInt32(valor.Text);
			}
			string[] sorteo = new string[N]; 
			lbl.Text = "" Xamarin.Forms/Mono.Android/App "";
			btn.Text = "" SORTEAR "";
			btn1.Text = "" BORRAR "";
			lay1.Show(); Console.Clear();
			//lay2.Show();
			await Task.Delay(300);
			btn.Click += delegate
			{
				if (valor.Text != """")
				{
					N = Convert.ToInt32(valor.Text);
				}
				lista = null;
				for(int j=0; j<N; j++)
				{
					for (int i=0; i < sort.Length; i++)
					{
						sort[i] = Bolas[bola.Next(Bolas.Length)];
					}
					sorteo [j] = new String(sort);
				}
				for(int k=0; k<N; k++)
				{
					lista = lista + sorteo[k] + ""  "";
				}
				for (int i=0; i<10; i++)
				{
					sf[i]=0; z=0;
					for(int j=0; j<N; j++)
					{
						string x = Convert.ToString(sorteo[j][4]);
						if (x == $""{i}"")
						{
							z++;
						}
					}
					sf[i]=z;
				}
				lbl1.Text = $""Terminaciones de 0, 1, 2, 3, 4, 5, 6, 7, 8 y 9 respectivamente:\n {sf[0]},{sf[1]},{sf[2]},{sf[3]},{sf[4]},{sf[5]},{sf[6]},{sf[7]},{sf[8]},{sf[9]}\n\n"" + lista;
			};
			btn1.Click += delegate
			{
				lbl1.Text = """";
				valor.Text = """";
				N=0;
				for (int i=0; i<10; i++)
				{
					sf[i]=0;
				}
			};
		}
	}
}"
Er6uzFVW,8.Study Session,horozov86,Python,Tuesday 3rd of October 2023 05:19:29 AM CDT,"CREATE TABLE students(
    id SERIAL PRIMARY KEY,
    student_name VARCHAR(20)
);

CREATE TABLE exams(
    id INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 101 INCREMENT 1) PRIMARY KEY,
    exam_name VARCHAR(20)
);

CREATE TABLE study_halls(
    id SERIAL PRIMARY KEY,
    study_hall_name VARCHAR(30),
    exam_id INTEGER,

    CONSTRAINT fk_study_halls_exams
    FOREIGN KEY (exam_id)
    REFERENCES exams(id)
);


CREATE TABLE students_exams(
    student_id INT,
    exam_id INT,

    CONSTRAINT pk_students_exams
    PRIMARY KEY (student_id, exam_id),
    
    CONSTRAINT fk_students_exams_students
    FOREIGN KEY (student_id)
    REFERENCES students(id),

    CONSTRAINT fk_students_exams_exams
    FOREIGN KEY (exam_id)
    REFERENCES exams(id)

);

INSERT INTO students(student_name)
VALUES
    ('Mila'),
    ('Toni'),
    ('Ron');

INSERT INTO exams(exam_name)
VALUES
    ('Python Advanced'),
    ('Python OOP'),
    ('PostgreSQL');

INSERT INTO study_halls(study_hall_name, exam_id)
VALUES
    ('Open Source Hall', 102),
    ('Inspiration Hall', 101),
    ('Creative Hall', 103),
    ('Masterclass Hall', 103),
    ('Information Security Hall', 103);

INSERT INTO students_exams
VALUES 
    (1, 101),
    (1, 102),
    (2, 101),
    (3, 103), 
    (2, 102),
    (2, 103);"
8Y9s0nER,Untitled,frolkin28,HTML,Tuesday 3rd of October 2023 05:07:45 AM CDT,"# coding: utf-8
<%inherit file=""/bigl_portable/base.mako""/>
<%namespace name=""bgl_common"" file=""/bigl/portlets/common.mako""/>


<%def name=""alredy_answered()"">
    <div class=""ek-box ek-box_padding-tb_s"">
        <span class=""ek-text ek-text_align_center"">
            <div class=""ek-grid ek-grid_column_1 ek-grid_indent_s"">
                <div class=""ek-grid__item"">
                    <span class=""ek-text ek-text_size_h3 ek-text_weight_medium"">
                        ${_(u""Спасибо, Ваша оценка записана."")}
                        <br>
                        ${_(u""Благодарим за то, что помогаете нам стать лучше"")}
                    </span>
                </div>
                <div class=""ek-grid__item"">
                    <span class=""ek-text ek-text_size_h5"">
                        <a class=""ek-link ek-link_color_link"" href=""${h.url.bigl('main_page')}"">
                            ${_(u'Вернуться к покупкам')}</a>
                    </span>
                </div>
                <div class=""ek-grid__item"">
                    <div class=""ek-box ek-box_padding-tb_s"">
                        <img
                            class='ek-image ek-image_align_center ek-box_width_4-10 ek-box_width_1-4@medium'
                            src=""${h.url.static('/bigl/images/dogs/dog-with-paper.svg')}""
                            alt=""""
                        >
                    </div>
                </div>
            </div>
        </span>
    </div>
</%def>


<%def name=""placeholder()"">
    <div class=""ek-box ek-box_margin-tb_xxs ek-box_padding-tb_3xl"">
        <span class=""ek-text ek-text_align_center"">
            ${bgl_common.preloader(size=""medium"")}
        </span>
    </div>
</%def>


<%def name=""content()"">
    <div class=""ek-box ek-box_margin-top_xxs ek-box_margin-bottom_m"">
        <span class=""ek-text ek-text_size_h3 ek-text_weight_medium"">
            ${_(u""Расскажите нам"")}
        </span>
    </div>
</%def>


<div class=""ek-box ek-box_background_gray ek-box_padding_xs ek-box_padding_m@small"">
    <div class=""ek-box ek-box_margin-lr_auto ek-box_width_8-10@small ek-box_width_6-10@medium"">

        <div class=""ek-box ek-box_background_white ek-box_padding_xs ek-box_padding_m@small ek-box_round_l"">
            <div
                data-bazooka=""ColbertQuestionnaire""
                data-colbert-questionnaire-id=${h.to_json(h.get_config('bigl.colbert.question.nps'))|n}
            >
                <div data-colbert-questionnaire-placeholder-node>
                    ${placeholder()}
                </div>
                <div data-colbert-questionnaire-mount-node hidden>
                    ${content()}
                </div>
                <div data-colbert-questionnaire-alredy-answered-node hidden>
                    ${alredy_answered()}
                </div>
            </div>
        </div>

    </div>
</div>
"
bpdRfefU,Untitled,frolkin28,JavaScript,Tuesday 3rd of October 2023 05:06:57 AM CDT,"/* eslint-disable max-classes-per-file */
import React from 'react';
import PropTypes from 'prop-types';


function ColbertMountNode(props) {
    return <div>{props.children}</div>;
}


function ColbertPreloader(props) {
    return <div>{props.children}</div>;
}


class ColbertQuestionnaireError extends Error {}


class ColbertQuestionnaire extends React.Component {
    static propTypes = {
        questionId: PropTypes.string.isRequired,
    };

    constructor(props) {
        super(props);
        this.references = {};
    }

    state = {
        loading: true,
        mounted: false,
    };

    componentDidMount() {
        if (!window.colbert) {
            this.hide();
            return;
        }
        if (!this.references.mountNode) {
            throw new ColbertQuestionnaireError('""ColbertMountNode"" is not found in child components');
        }
        const options = {
            id: this.props.questionId,
            onSuccess: this.onSuccess,
            onFailure: this.onFailure,
        };
        window.colbert('mountQuestionnaire', this.references.mountNode, options);
    }

    onSuccess = () => {
        if (this.isStillMounted()) {
            this.setState({ loading: false, mounted: true });
        }
    };

    onFailure = () => {
        if (this.isStillMounted()) {
            this.hide();
        }
    };

    getOptsForComponent = (component) => {
        switch (component.type) {
            case ColbertPreloader:
                return { hidden: !this.state.loading };
            case ColbertMountNode:
                return {
                    ref: (ref) => { this.references.mountNode = ref; },
                    hidden: !this.state.mounted,
                };
            default:
                return null;
        }
    };

    isStillMounted = () => {
        // This component has methods that's used as callbacks in external library
        // so we should check that's this component is still mounted
        return this.references.mountNode;
    };

    hide = () => {
        this.setState({ loading: false, mounted: false });
    };

    childrenWithRefs = () => {
        return React.Children.map(this.props.children, (child) => {
            const opts = this.getOptsForComponent(child);
            if (!opts) {
                return child;
            }
            return (
                <div className={child.props.className} {...opts}>
                    {child}
                </div>
            );
        });
    };

    render() {
        const hidden = !(this.state.loading || this.state.mounted);
        return (
            <div className={this.props.className} hidden={hidden}>
                {this.childrenWithRefs()}
            </div>
        );
    }
}

export {
    ColbertQuestionnaire,
    ColbertMountNode,
    ColbertPreloader,
};"
Vrz20HG1,Поляков 6207,Aleks_Basher,Python,Tuesday 3rd of October 2023 04:43:36 AM CDT,"maxValue = 0
for x in range(0, 67):
    num1 = 1 * 81**0 + 2 * 81**1 + x * 81**2 + 3 * 81**3
    num2 = 4 * 67**0 + x * 67**1 + 7 * 67**2 + 1 * 67**3
    summ = num1 + num2
    if summ % 35 == 0:
        maxValue = summ / 35
print(maxValue)"
qqbiRjLB,Untitled,okpalan,Python,Tuesday 3rd of October 2023 04:10:35 AM CDT,"import hashlib

class CustomPRNG:
    def __init__(self, seed=None):
        if seed is None:
            seed = self._generate_seed()
        self.state = seed

    def _generate_seed(self):
        return hashlib.sha256(str(hash(time.time())).encode()).digest()

    def _hash_state(self):
        return hashlib.sha256(self.state).digest()

    def random(self):
        # Use the current state as the seed for the next state
        self.state = self._hash_state()
        
        # Convert the hashed state to a float in the range [0, 1)
        return int.from_bytes(self.state, byteorder='big') / (2**256)

# Usage
prng = CustomPRNG()
for _ in range(10):
    print(prng.random())
"
dkT1Qy3j,binding,vahotm,Swift,Tuesday 3rd of October 2023 03:54:12 AM CDT,"struct ParentView: View {
    @State var selectedId: String?
    
    var body: some View {
        ChildView($selectedId)
    }
}

struct ChildView: View {
    @Binding var selectedId: String?
    
    init(_ selectedId: Binding<String?> = Binding.constant(nil)) {
        self._selectedId = selectedId
    }
    
    var body: some View {
		// Magic
    }
}"
Ncm1bnZs,SvgTestDoc,cepxuozab,C++,Tuesday 3rd of October 2023 03:47:28 AM CDT,"void Polymorph() {
    using namespace std;
        {
            Document doc;
            doc.Render(cout);
            cout << endl;
        } {
            Document doc;
            doc.Add(Circle().SetCenter({20, 20}).SetRadius(10));
            doc.Render(cout);
            cout << endl;
        } {
            Document doc;
            doc.Add(Circle().SetCenter({20, 20}).SetRadius(10));
            doc.Add(Text()
                            .SetFontFamily(""Verdana""s)
                            .SetPosition({35, 20})
                            .SetOffset({0, 6})
                            .SetFontSize(12)
                            .SetFontWeight(""bold""s)
                            .SetData(""Hello C++""s));
            doc.Add(Polyline().AddPoint({20, 20}).AddPoint({10, 15}).AddPoint({0, 10}));
            doc.Render(cout);
            cout << endl;
        } {
            Document doc;
            doc.AddPtr(make_unique<Circle>(move(
                    Circle().SetCenter({20, 20}).SetRadius(10))));
            doc.AddPtr(make_unique<Text>(move(
                        Text()
                        .SetFontFamily(""Verdana""s)
                        .SetPosition({35, 20})
                        .SetOffset({0, 6})
                        .SetFontSize(12)
                        .SetFontWeight(""bold""s)
                        .SetData(""Hello C++""s))));
            doc.AddPtr(make_unique<Polyline>(move(
                    Polyline().AddPoint({20, 20}).AddPoint({10, 15}).AddPoint({0, 10}))));
            doc.Render(cout);
        }
    }

<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
</svg>
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
</svg>
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
  <text x=""35"" y=""20"" dx=""0"" dy=""6"" font-size=""12"" font-family=""Verdana"" font-weight=""bold"">Hello C++</text>
  <polyline points=""20,20 10,15 0,10"" />
</svg>
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
  <text x=""35"" y=""20"" dx=""0"" dy=""6"" font-size=""12"" font-family=""Verdana"" font-weight=""bold"">Hello C++</text>
  <polyline points=""20,20 10,15 0,10"" />
</svg>"
TtDy0SFW,TestSvgDoc,cepxuozab,C++,Tuesday 3rd of October 2023 03:43:31 AM CDT,"void Doc() {
    using namespace std;
        {
            Document doc;
            doc.Render(cout);
            cout << endl;
        } {
            Document doc;
            doc.Add(Circle().SetCenter({20, 20}).SetRadius(10));
            doc.Render(cout);
            cout << ""endl"";
        } {
            Document doc;
            doc.Add(Circle().SetCenter({20, 20}).SetRadius(10));
            doc.Add(Text()
                            .SetFontFamily(""Verdana""s)
                            .SetPosition({35, 20})
                            .SetOffset({0, 6})
                            .SetFontSize(12)
                            .SetFontWeight(""bold""s)
                            .SetData(""Hello C++""s));
            doc.Add(Polyline().AddPoint({20, 20}).AddPoint({10, 15}).AddPoint({0, 10}));
            doc.Render(cout);
            cout << endl;
        } {
            Document doc;
            doc.AddPtr(make_unique<Circle>(move(
                    Circle().SetCenter({20, 20}).SetRadius(10))));
            doc.AddPtr(make_unique<Text>(move(
                        Text()
                        .SetFontFamily(""Verdana""s)
                        .SetPosition({35, 20})
                        .SetOffset({0, 6})
                        .SetFontSize(12)
                        .SetFontWeight(""bold""s)
                        .SetData(""Hello C++""s))));
            doc.AddPtr(make_unique<Polyline>(move(
                    Polyline().AddPoint({20, 20}).AddPoint({10, 15}).AddPoint({0, 10}))));
            doc.Render(cout);
        }
    }


<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
</svg>
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
</svg>endl<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
  <text x=""35"" y=""20"" dx=""0"" dy=""6"" font-size=""12"" font-family=""Verdana"" font-weight=""bold"">Hello C++</text>
  <polyline points=""20,20 10,15 0,10"" />
</svg>
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<svg xmlns=""http://www.w3.org/2000/svg"" version=""1.1"">
  <circle cx=""20"" cy=""20"" r=""10"" />
  <text x=""35"" y=""20"" dx=""0"" dy=""6"" font-size=""12"" font-family=""Verdana"" font-weight=""bold"">Hello C++</text>
  <polyline points=""20,20 10,15 0,10"" />
</svg>"
h2VPGMvA,Armor,Win4Win,Lua,Tuesday 3rd of October 2023 03:19:07 AM CDT,"local sensor = peripheral.wrap(""top"")
for i, v in pairs(sensor.sense()) do
    local Meta = sensor.getMetaByID(v.id)
    if not Meta or not Meta.food then
    else
        for i, v in pairs(Meta.potionEffects) do
            print(i)
            print(v)
            sleep(3)
        end
    end
end"
jBT3AcJR,Some git aliases for your .gitconfig,reywillow,Bash,Tuesday 3rd of October 2023 03:09:18 AM CDT,"[alias]
	gone = ""!f() { git fetch --all --prune; git branch -vv | awk '/: gone]/{print \"" gone: \""$1}'; }; f""
	rmgone = ""!f() { git fetch --all --prune; git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D; }; f""
    graph = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)' --all"
A4Z8pfCF,Untitled,burcev,PHP,Tuesday 3rd of October 2023 02:56:56 AM CDT,"$ar = [
            '{catalog_list}' => array(
                'ru' => array(
                    'meta_title' => '{$section_name} — {$ending_title}',
                    'description' => '{$section_name} — в магазині ⭐INTERTOP⭐ ✅ Лучшие цены в интернете {$ending_description}',
                ),
                'ua' => array(
                    'meta_title' => '{$section_name} — {$ending_title}',
                    'description' => '{$section_name} — в магазине ⭐INTERTOP⭐ ✅ Найкращі ціни в інтернеті {$ending_description}',
                )
            ),
            '{catalog_detail}' => array(
                'ru' => array(
                    'meta_title' => '{$subtype_or_good_type} {$brand} {$model_or_collection} {$fabric_article} {$gender_product} {$color} - {$ending_title}',
                    'description' => '{$subtype_or_good_type} {$brand} {$model_or_collection} {$fabric_article} ➦ {$ending_description}',
                ),
                'ua' => array(
                    'meta_title' => '{$subtype_or_good_type} {$brand} {$model_or_collection} {$fabric_article} {$gender_product} {$color} - {$ending_title}',
                    'description' => '{$subtype_or_good_type} {$brand} {$model_or_collection} {$fabric_article} ➦ {$ending_description}',
                )
            ),
            '{brands_detail}' => array(
                'ru' => array(
                    'meta_title' => '{$brand} - {$ending_title}',
                    'description' => 'Каталог товаров【{$brand}】в магазине ⭐INTERTOP⭐ Широкий выбор товаров бренда ✅Лучшие цены в интернете {$ending_description}',
                ),
                'ua' => array(
                    'meta_title' => '{$brand} - {$ending_title}',
                    'description' => 'Каталог товарів 【{$brand}】в магазині ⭐INTERTOP⭐ Широкий вибір товарів бренду ✅ Кращі ціни в інтернеті {$ending_description}',
                ),
            ),
        ];"
QrFtjtX6,Soal 2 Pertemuan 1,ZeeXy,Java,Tuesday 3rd of October 2023 01:45:37 AM CDT,"package Pertemuan1;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class YesYes2 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        ArrayList<Double> nilaiKelasA = new ArrayList<>();
        ArrayList<Double> nilaiKelasB = new ArrayList<>();

        while (true) {
            System.out.println(""\nMenu:"");
            System.out.println(""1. Input Nilai Kelas A"");
            System.out.println(""2. Input Nilai Kelas B"");
            System.out.println(""3. Lihat Statistik Kelas A"");
            System.out.println(""4. Lihat Statistik Kelas B"");
            System.out.println(""5. Keluar"");
            System.out.print(""Pilih menu (1/2/3/4/5): "");
            int pilihan = input.nextInt();

            switch (pilihan) {
                case 1:
                    System.out.print(""Masukkan nilai PBO untuk Kelas A: "");
                    double nilaiA = input.nextDouble();
                    nilaiKelasA.add(nilaiA);
                    break;
                case 2:
                    System.out.print(""Masukkan nilai PBO untuk Kelas B: "");
                    double nilaiB = input.nextDouble();
                    nilaiKelasB.add(nilaiB);
                    break;
                case 3:
                    tampilkanStatistik(""Kelas A"", nilaiKelasA);
                    break;
                case 4:
                    tampilkanStatistik(""Kelas B"", nilaiKelasB);
                    break;
                case 5:
                    System.out.println(""Terima kasih! Program selesai."");
                    System.exit(0);
                default:
                    System.out.println(""Pilihan tidak valid. Silakan coba lagi."");
            }
        }
    }

    private static void tampilkanStatistik(String kelas, ArrayList<Double> nilaiKelas) {
        if (nilaiKelas.isEmpty()) {
            System.out.println(""Tidak ada nilai PBO yang tersimpan untuk "" + kelas);
            return;
        }

        double rataRata = hitungRataRata(nilaiKelas);
        double nilaiTertinggi = Collections.max(nilaiKelas);
        double nilaiTerendah = Collections.min(nilaiKelas);

        System.out.println(""Statistik untuk "" + kelas + "":"");
        System.out.println(""Nilai Tersimpan: "" + nilaiKelas);
        System.out.println(""Rata-rata: "" + rataRata);
        System.out.println(""Nilai Tertinggi: "" + nilaiTertinggi);
        System.out.println(""Nilai Terendah: "" + nilaiTerendah);
    }

    private static double hitungRataRata(ArrayList<Double> nilaiKelas) {
        double total = 0;
        for (double nilai : nilaiKelas) {
            total += nilai;
        }
        return total / nilaiKelas.size();
    }

}"
8E55QsPi,cuci mobil,firzaelbuho,C++,Tuesday 3rd of October 2023 01:34:52 AM CDT,"#include <iostream>
#include <string>
using namespace std;

// Struktur data untuk menyimpan detail kendaraan
struct Car {
    string ownerName;
    string carBrand;
    string platNumber;
    char status; // 'n' untuk belum dicuci, 'y' untuk sudah dicuci
    char carType; // 'a' untuk Matic, 'b' untuk Manual
    char package; // 'a' untuk Regular Wash, 'b' untuk Premium Wash, 'c' untuk Grooming Wash
    int price;
    Car* next;
};

// Inisialisasi linked list
Car* head = NULL;

// Fungsi untuk menambah data ke dalam linked list
void inputData() {
    int n;
    cout << ""Masukkan jumlah data yang akan diinput: "";
    cin >> n;

    for (int i = 0; i < n; i++) {
        Car* newCar = new Car;
        cout << ""Owner Name: "";
        cin.ignore();
        getline(cin, newCar->ownerName);
        cout << ""Car Brand: "";
        getline(cin, newCar->carBrand);
        cout << ""Plat Number: "";
        getline(cin, newCar->platNumber);
        cout << ""Status (y/n): "";
        cin >> newCar->status;

        cout << ""Pilih Tipe Mobil:"" << endl;
        cout << ""a. Matic"" << endl;
        cout << ""b. Manual"" << endl;
        cout << ""Pilih: "";
        cin >> newCar->carType;

        cout << ""Pilih Paket Pencucian:"" << endl;
        cout << ""a. Regular Wash"" << endl;
        cout << ""b. Premium Wash"" << endl;
        cout << ""c. Grooming Wash"" << endl;
        cout << ""Pilih: "";
        cin >> newCar->package;

        // Set harga berdasarkan tipe mobil dan paket cuci
        if (newCar->carType == 'a') { // Matic
            if (newCar->package == 'a') // Reguler Wash
                newCar->price = 50000;
            else if (newCar->package == 'b') // Premium Wash
                newCar->price = 100000;
            else if (newCar->package == 'c') // Grooming Wash
                newCar->price = 200000;
        } else if (newCar->carType == 'b') { // Manual
            if (newCar->package == 'a') // Reguler Wash
                newCar->price = 55000;
            else if (newCar->package == 'b') // Premium Wash
                newCar->price = 105000;
            else if (newCar->package == 'c') // Grooming Wash
                newCar->price = 200000;
        }

        // Tambahkan ke linked list
        newCar->next = head;
        head = newCar;

        if (i < n - 1) {
            cout << endl; // Beri jarak antara data inputan
        }
    }
    cout << ""Data berhasil diinput."" << endl;
}

// Fungsi bantu untuk menukar dua objek Car pada proses Quick Sort
int partition(Car* arr[], int low, int high) {
    Car* pivot = arr[high];
    int i = (low - 1);

    for (int j = low; j <= high - 1; j++) {
        if (arr[j]->platNumber < pivot->platNumber) {
            i++;
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[i + 1], arr[high]);
    return (i + 1);
}

// Fungsi untuk melakukan Quick Sort pada data antrian
void quickSort(Car* arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

// Fungsi untuk melihat data antrian mobil yang sudah diurutkan
void lihatDataAntrian() {
    int count = 1;
    Car* current = head;

    cout << ""--------------------------------"" << endl;
    cout << ""Lihat Data Antrian"" << endl;
    cout << ""--------------------------------"" << endl;

    int size = 0;
    while (current != NULL) {
        size++;
        current = current->next;
    }

    Car* arr[size];
    current = head;

    for (int i = 0; i < size; i++) {
        arr[i] = current;
        current = current->next;
    }

    quickSort(arr, 0, size - 1);

    for (int i = 0; i < size; i++) {
        cout << ""["" << count << ""] Data Antrian"" << endl;
        cout << ""Owner Name: "" << arr[i]->ownerName << endl;
        cout << ""Car Brand: "" << arr[i]->carBrand << endl;
        cout << ""Plat Number: "" << arr[i]->platNumber << endl;
        cout << ""Status: "" << arr[i]->status << endl;
        cout << ""Harga: "" << arr[i]->price << endl;
        cout << endl;

        count++;
    }
}

// Fungsi untuk mencari dan mengubah status pencucian
void ubahStatus() {
    string ownerName;
    cout << ""Input nama Owner: "";
    cin.ignore();
    getline(cin, ownerName);

    Car* current = head;
    bool found = false;

    while (current != NULL) {
        if (current->ownerName == ownerName) {
            found = true;
            cout << ""["" << current->ownerName << ""] ditemukan dengan plat nomor mobil ["" << current->platNumber << ""]"" << endl;
            char choice;
            cout << ""Ubah Status (y/n) ?: "";
            cin >> choice;
            if (choice == 'y') {
                current->status = 'y';
                cout << ""Status berhasil diubah."" << endl;
            }
            break;
        }
        current = current->next;
    }

    if (!found) {
        cout << ""Data tidak ditemukan."" << endl;
    }
}

// Fungsi untuk menghapus data berdasarkan nomor plat
void hapusData() {
    string platNumber;
    cout << ""Masukkan nomor plat yang akan dihapus: "";
    cin.ignore();
    getline(cin, platNumber);

    Car* current = head;
    Car* prev = NULL;
    bool found = false;

    while (current != NULL) {
        if (current->platNumber == platNumber) {
            found = true;
            if (prev == NULL) {
                head = current->next;
            } else {
                prev->next = current->next;
            }
            delete current;
            cout << ""Data berhasil dihapus."" << endl;
            break;
        }
        prev = current;
        current = current->next;
    }

    if (!found) {
        cout << ""Data tidak ditemukan."" << endl;
    }
}

int main() {
    char choice;
    do {
        cout << ""---------------------"" << endl;
        cout << ""Car Wash IF-D"" << endl;
        cout << ""---------------------"" << endl;
        cout << ""1. Input Data"" << endl;
        cout << ""2. Lihat Data Antrian"" << endl;
        cout << ""3. Lihat Status Pencucian"" << endl;
        cout << ""4. Hapus Data"" << endl;
        cout << ""5. Exit"" << endl;
        cout << ""Pilih: "";
        cin >> choice;

        switch (choice) {
            case '1':
                inputData();
                break;
            case '2':
                lihatDataAntrian();
                break;
            case '3':
                ubahStatus();
                break;
            case '4':
                hapusData();
                break;
            case '5':
                return 0;
            default:
                cout << ""Pilihan tidak valid."" << endl;
        }

        cout << ""Kembali ke Menu utama? (y/n): "";
        cin >> choice;
    } while (choice == 'y' || choice == 'Y');

    return 0;
}
"
3yrfwDta,addRemove_Stacks,andarz,C#,Tuesday 3rd of October 2023 01:23:30 AM CDT,"namespace DemoStacks
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string inputLine = Console.ReadLine();
            string[] digits = inputLine.Split(' ');
            int[] intDigits = Array.ConvertAll(digits, int.Parse);
            Stack<int> myStack = new Stack<int>();
            int sum = 0;
            
            foreach (int digitChar in intDigits)
            {
                myStack.Push(digitChar);
            }
            string command = Console.ReadLine();

            while (command != ""end"")
            {
                string[] commArr = command.Split(' ');
                string token = """";
                foreach (string elem in commArr)
                {
                    
                    if (int.TryParse(elem, out _))
                    {
                        int number = int.Parse(elem.ToString());

                        switch (token)
                        {
                            case ""add"":
                                myStack.Push(number);
                                break;
                            case ""remove"":
                                if (number > myStack.Count)
                                    continue;
                                for (int i = 0; i < number; i++)
                                {
                                    myStack.Pop();
                                }
                                break;
                        }
                    }
                    else
                    {
                        token = elem.ToLower();
                    }
                }
                command = Console.ReadLine().ToLower();
            }
            foreach (int i in myStack)
            {
                sum += i;
            }
            Console.WriteLine($""Sum: {sum}"");
        }
    }
}
"
ATYEQEXJ,Longest Consecutive 1's,jayati,C++,Tuesday 3rd of October 2023 01:16:18 AM CDT,"//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

/*  Function to calculate the longest consecutive ones
*   N: given input to calculate the longest consecutive ones
*/
class Solution
{
    public:
    int maxConsecutiveOnes(int N)
    {
        int ans = 0;
        int c = 0;

        while (N != 0)
        {
            if (N & 1)
            {
                c++;
                ans = max(ans, c);
            }
            else
            {
                
                c = 0;
            }

            N = N >> 1;
        }

        ans = max(ans, c);

        return ans;
    }
};


//{ Driver Code Starts.

// Driver Code
int main() {
	int t;
	cin>>t;//testcases
	while(t--)
	{
		int n;
		cin>>n;//input n
		Solution obj;
		//calling maxConsecutiveOnes() function
		cout<<obj.maxConsecutiveOnes(n)<<endl;
	}
	return 0;
}
// } Driver Code Ends"
bGsHVtex,utils.lua,hugohamon,Lua,Tuesday 3rd of October 2023 01:13:52 AM CDT,"-- Utils file for ChunkEater
local utils = {}

-- Constants
local VERSION = ""0.0.0""
local PASTEBIN = ""bGsHVtex""

-- isUpToDate: Check if the utils file is up to date with the latest version
function utils.isUpToDate()
    shell.run(""pastebin"", ""get"", PASTEBIN, ""update.lua"")
    local file = fs.open(""update.lua"", ""r"")
    local content = file.readAll()
    file.close()
    fs.delete(""update.lua"")
    local version = string.match(content, ""local VERSION = \""%d+.%d+.%d+\"""")
    version = string.match(version, ""%d+.%d+.%d+"")
    return VERSION == version
end

return utils"
Ur7n2RBP,Factorial calculator function,lofty248,C++,Tuesday 3rd of October 2023 01:09:38 AM CDT,"/*
 Function:  factorial() 
 
  
  input: number to find the factorial of
  
  Function will print each digit of the result

  Method inspiration taken from https://www.javatpoint.com/extra-long-factorials-in-c 
  and adapted to work for the given application
 */
void factorial(int n) {
  int result[1000];    //store digits of the factorial
  result[0] = 1;       //initialize with 1
  int resultSize = 1;  //number of digits in the result
  //loop through numbers from 2 to n
  for (int i = 2; i <= n; i++) {
    int remainder = 0;  //initialize remainder for multiplication
    //loop through each digit of the result
    for (int j = 0; j < resultSize; j++) {
      int product = result[j] * i + remainder;  //calculate digit * i + remainder
      result[j] = product % 10;                 //store least significant digit
      remainder = product / 10;                 //update remainder for next iteration
    }
    //factor in any remainder
    while (remainder) {
      result[resultSize] = remainder % 10;  //store remainder as new digit
      remainder /= 10;                      //update remainder
      resultSize++;                         //increase the saved size of the result array
    }
  }

  //loop through result to print the calculated factorial
  for (int i = resultSize - 1; i >= 0; i--) {  //loop through digits in reverse order
    printf(""%d"", result[i]);                   //print each digit of the result
  }
}"
ibhMia4m,V2Ray,EClsiny,JSON,Tuesday 3rd of October 2023 01:09:31 AM CDT,"2,new servers added"
Vm0crTYD,Count total set bits,jayati,C++,Tuesday 3rd of October 2023 12:51:55 AM CDT,"//{ Driver Code Starts
//Initial Template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution{
    public:
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
    int findlargest(int num)
    {
        int x=0;
        while(1<<x <= num)
        {
            x++;
        }
        return x-1;
    }
    int countSetBits(int n)
    {
        if(n==0)
        {
            return 0;
        }
        int x=findlargest(n);
        int counttillx=(1<<(x-1))*x;
        int countafterx=(n-(1<<x))+1;
        int rest= (n-(1<<x));
        int ans=counttillx+countafterx+countSetBits(rest);
        return ans;
    }
};


//{ Driver Code Starts.

// Driver code
int main()
{
	 int t;
	 cin>>t;// input testcases
	 while(t--) //while testcases exist
	 {
	       int n;
	       cin>>n; //input n
	       Solution ob;
	       cout << ob.countSetBits(n) << endl;// print the answer
	  }
	  return 0;
}

// } Driver Code Ends"
NdF3M0Bk,detect and save Fonts and Paragraphs from docx to html,nicuf,Python,Tuesday 3rd of October 2023 12:38:29 AM CDT,"import docx

def run_get_style(run) -> str:
    if run.bold:
        return ""bold""
    elif run.italic:
        return ""italic""
    else:
        return ""normal""

def convert_docx_to_html_with_styles(document: docx.Document, output_file: str) -> None:
    with open(output_file, ""w"") as f:
        f.write(""<html>\n<body>\n"")
        current_style = None

        for paragraph in document.paragraphs:
            runs = paragraph.runs
            if not runs:
                continue

            for run in runs:
                run_style = run_get_style(run)

                if run_style == current_style:
                    f.write(run.text)
                else:
                    if current_style:
                        if current_style == ""bold"":
                            f.write(""</b>"")
                        elif current_style == ""italic"":
                            f.write(""</em>"")
                    if run_style == ""bold"":
                        f.write(""<b>"")
                    elif run_style == ""italic"":
                        f.write(""<em>"")

                    f.write(run.text)
                    current_style = run_style

            f.write(""<br>\n"")  # Adăugăm un salt de linie între paragrafe

        if current_style:
            if current_style == ""bold"":
                f.write(""</b>"")
            elif current_style == ""italic"":
                f.write(""</em>"")

        f.write(""</body>\n</html>"")

def main():
    document = docx.Document(""bebe.docx"")
    convert_docx_to_html_with_styles(document, ""bebe.html"")

if __name__ == ""__main__"":
    main()
"
PjT7G1Wr,song snowy,coinwalk,JavaScript,Tuesday 3rd of October 2023 12:34:13 AM CDT,"next time i feel I've a little ditty going through my head...
I'll find a means of attack to my very worse nightmares
seems like... they fall on deaf doors... and feed the souls... it will keep....
because life's got no turns but creepy
creepy vibes hits the doors of closed ears,
whack a mole on a stereo
its nice to dream...
been golden for my relatives .... they say nothing about what i can or did.... 
sometimes... i pray they don't fade away...
some time i pray they'd ring me just to see if I'm OK..
every time i see them they think i want something from them ..
its not always the case...
I'm probably their disgrace...
I'm torn outta place..
because life's no turns but creepy.
creepy vibes hits the doors of closed ears
whack a mole on a stereo
its nice to dream..."
8NsXZakj,TimeMemoryGenerator.sh,swear01,Bash,Tuesday 3rd of October 2023 12:11:51 AM CDT,"#!/usr/bin/bash

#############################################################################
# File       [ TimeMemoryGenerator.sh ]
# Author     [ Swear01 ]
# Synopsis   [ simple test for algorithm PA1 homework format program ]
# Date       [ 2020/10/01 ]
#############################################################################

# please ensure your code is right before use this
# please use this under PA1 folder


#SIZES = (1000 2000 4000 8000 16000 32000 1000000)
declare -a SIZES=(1000 2000 4000 8000 16000 32000 1000000)
declare -a CASE_ORDERS=(2 3 1)
declare -a METHODS=(IS MS QS RQS HS)


#init
make

echo -n ""data,"" > ram.csv
echo -n ""data,"" > cpu_time.csv

for method in ""${METHODS[@]}"" ; do
    echo -n ""$method,"" >> ram.csv
    echo -n ""$method,"" >> cpu_time.csv
done

echo "" "" >> ram.csv
echo "" "" >> cpu_time.csv

for size in ""${SIZES[@]}"" ; do
    for case_order in ""${CASE_ORDERS[@]}"" ; do
        echo -n ""$size"".case""$case_order,"" >> cpu_time.csv
        echo -n ""$size"".case""$case_order,"" >> ram.csv
        for method in ""${METHODS[@]}"" ; do
            echo current running -""$method"" inputs/""$size"".case""$case_order"".in
            bin/NTU_sort -""$method"" inputs/""$size"".case""$case_order"".in outputs/""$size"".case""$case_order"".out > tmp.txt
            #utility/PA1_Result_Checker inputs/""$size"".case""$case_order"".in outputs/""$size"".case""$case_order"".out 
            
            nums=($(grep -Eo '[0-9\.]+' tmp.txt))

            echo -n ""${nums[0]},"" >> cpu_time.csv
            echo -n ""${nums[1]},"" >> ram.csv
        done
        echo "" "" >> ram.csv
        echo "" "" >> cpu_time.csv
    done
done"
DiuFREBW,Untitled,Coolaidman,Python,Tuesday 3rd of October 2023 12:02:45 AM CDT,"{""embed"": {""title"": ""hey there how are you"", ""description"": ""this is a description""}}"
c7B2Bfqr,CC,Snorlax_6987,Lua,Monday 2nd of October 2023 11:26:45 PM CDT,"local currentSlot = 1

function findItems()
    local items = {}

    for itemSlot = 1, 16 do
        if turtle.getItemSpace(itemSlot) ~= 64 then
            table.insert(items, itemSlot)
        end
    end

    return items
end

function itemCheck()
    local itemTable = findItems()
    if #itemTable == 0 then
        return false
    end
    for _,itemSlot in pairs(itemTable) do
        currentSlot = itemSlot
        turtle.select(currentSlot)
        os.sleep(0.05)
        turtle.dropDown()
    end
end

local lastCheck = os.clock()

while true do
    local now = os.clock()
    turtle.attack()
    if now - lastCheck > 1 then
        lastCheck = now
        itemCheck()
    end
    os.sleep(0.25)
end"
HwzkuHYC,TP5_PUNTO3,FacundoCruz,Scilab,Monday 2nd of October 2023 10:39:18 PM CDT,"// --------------      Leer los datos del archivo de texto plano  -----------------

// obtener los datos de la curva 1

[pSupx,pSupy] = readarchivo('C:\Users\PC\Desktop\Calculo Numerico\TP5\curva 1.txt');
  
// obtener los datos de la curva 2

 [pInfx,pInfy] = readarchivo('C:\Users\PC\Desktop\Calculo Numerico\TP5\curva 2.txt');
  
// obtener los datos de la curva 3

 [pAlaSupx,pAlaSupy] = readarchivo('C:\Users\PC\Desktop\Calculo Numerico\TP5\curva 3.txt');
  

//Generar los trazadores cubicos
d1 = splin(pSupx,pSupy);
xx1 = linspace(pSupx(1),pSupx(length(pSupx)));
yy1 = interp(xx1,pSupx,pSupy,d1); //perfil superior

d2 = splin(pInfx,pInfy);
xx2 = linspace(pInfx(1),pInfx(length(pInfx)));
yy2 = interp(xx2,pInfx,pInfy,d2); //perfill inferior


d3 = splin(pAlaSupx,pAlaSupy);
xx3 = linspace(pAlaSupx(1),pAlaSupx(length(pAlaSupx)));
yy3 = interp(xx3,pAlaSupx,pAlaSupy,d3); //perfil ala superior


//Graficar perfil aproximado del snoopy
plot(xx1,yy1,'r')
plot(pSupx,pSupy,'bo')

plot(xx2,yy2)
plot(pInfx,pInfy,'ro')

plot(xx3,yy3,'k')
plot(pAlaSupx,pAlaSupy,'go')

xgrid(12)

title('Snoopy')"
xz28DA4D,Nigerian scammers [2-10-1/2023],bombaires,HTML,Monday 2nd of October 2023 10:32:52 PM CDT,"<a href=""mailto:financialconsultantroger@gmail.com"">financialconsultantroger@gmail.com</a>
<a href=""mailto:financialconsultantroger+26304@gmail.com"">financialconsultantroger+26304@gmail.com</a>
<a href=""mailto:financialconsultantroger+5504@gmail.com"">financialconsultantroger+5504@gmail.com</a>
<a href=""mailto:financialconsultantroger+26077@gmail.com"">financialconsultantroger+26077@gmail.com</a>
<a href=""mailto:financialconsultantroger+4997@gmail.com"">financialconsultantroger+4997@gmail.com</a>
<a href=""mailto:financialconsultantroger+31923@gmail.com"">financialconsultantroger+31923@gmail.com</a>
<a href=""mailto:financialconsultantroger+3874@gmail.com"">financialconsultantroger+3874@gmail.com</a>
<a href=""mailto:financialconsultantroger+12740@gmail.com"">financialconsultantroger+12740@gmail.com</a>
<a href=""mailto:financialconsultantroger+20662@gmail.com"">financialconsultantroger+20662@gmail.com</a>
<a href=""mailto:financialconsultantroger+26735@gmail.com"">financialconsultantroger+26735@gmail.com</a>
<a href=""mailto:financialconsultantroger+27397@gmail.com"">financialconsultantroger+27397@gmail.com</a>
<a href=""mailto:financialconsultantroger+22751@gmail.com"">financialconsultantroger+22751@gmail.com</a>
<a href=""mailto:financialconsultantroger+25817@gmail.com"">financialconsultantroger+25817@gmail.com</a>
<a href=""mailto:financialconsultantroger+6805@gmail.com"">financialconsultantroger+6805@gmail.com</a>
<a href=""mailto:financialconsultantroger+1239@gmail.com"">financialconsultantroger+1239@gmail.com</a>
<a href=""mailto:financialconsultantroger+16694@gmail.com"">financialconsultantroger+16694@gmail.com</a>
<a href=""mailto:financialconsultantroger+5987@gmail.com"">financialconsultantroger+5987@gmail.com</a>
<a href=""mailto:financialconsultantroger+13393@gmail.com"">financialconsultantroger+13393@gmail.com</a>
<a href=""mailto:financialconsultantroger+7359@gmail.com"">financialconsultantroger+7359@gmail.com</a>
<a href=""mailto:financialconsultantroger+15322@gmail.com"">financialconsultantroger+15322@gmail.com</a>
<a href=""mailto:financialconsultantroger+23164@gmail.com"">financialconsultantroger+23164@gmail.com</a>
<a href=""mailto:financialconsultantroger+30025@gmail.com"">financialconsultantroger+30025@gmail.com</a>
<a href=""mailto:financialconsultantroger+26325@gmail.com"">financialconsultantroger+26325@gmail.com</a>
<a href=""mailto:financialconsultantroger+23303@gmail.com"">financialconsultantroger+23303@gmail.com</a>
<a href=""mailto:financialconsultantroger+10613@gmail.com"">financialconsultantroger+10613@gmail.com</a>
<a href=""mailto:financialconsultantroger+13953@gmail.com"">financialconsultantroger+13953@gmail.com</a>
<a href=""mailto:financialconsultantroger+3183@gmail.com"">financialconsultantroger+3183@gmail.com</a>
<a href=""mailto:financialconsultantroger+20720@gmail.com"">financialconsultantroger+20720@gmail.com</a>
<a href=""mailto:financialconsultantroger+11304@gmail.com"">financialconsultantroger+11304@gmail.com</a>
<a href=""mailto:financialconsultantroger+9834@gmail.com"">financialconsultantroger+9834@gmail.com</a>
<a href=""mailto:financialconsultantroger+7051@gmail.com"">financialconsultantroger+7051@gmail.com</a>
<a href=""mailto:financialconsultantroger+19325@gmail.com"">financialconsultantroger+19325@gmail.com</a>
<a href=""mailto:financialconsultantroger+4361@gmail.com"">financialconsultantroger+4361@gmail.com</a>
<a href=""mailto:financialconsultantroger+3172@gmail.com"">financialconsultantroger+3172@gmail.com</a>
<a href=""mailto:financialconsultantroger+3213@gmail.com"">financialconsultantroger+3213@gmail.com</a>
<a href=""mailto:financialconsultantroger+12383@gmail.com"">financialconsultantroger+12383@gmail.com</a>
<a href=""mailto:financialconsultantroger+13014@gmail.com"">financialconsultantroger+13014@gmail.com</a>
<a href=""mailto:financialconsultantroger+27980@gmail.com"">financialconsultantroger+27980@gmail.com</a>
<a href=""mailto:financialconsultantroger+29542@gmail.com"">financialconsultantroger+29542@gmail.com</a>
<a href=""mailto:financialconsultantroger+23418@gmail.com"">financialconsultantroger+23418@gmail.com</a>
<a href=""mailto:financialconsultantroger+16510@gmail.com"">financialconsultantroger+16510@gmail.com</a>
<a href=""mailto:financialconsultantroger+15704@gmail.com"">financialconsultantroger+15704@gmail.com</a>
<a href=""mailto:financialconsultantroger+26561@gmail.com"">financialconsultantroger+26561@gmail.com</a>
<a href=""mailto:financialconsultantroger+15055@gmail.com"">financialconsultantroger+15055@gmail.com</a>
<a href=""mailto:financialconsultantroger+2645@gmail.com"">financialconsultantroger+2645@gmail.com</a>
<a href=""mailto:financialconsultantroger+13855@gmail.com"">financialconsultantroger+13855@gmail.com</a>
<a href=""mailto:financialconsultantroger+23778@gmail.com"">financialconsultantroger+23778@gmail.com</a>
<a href=""mailto:financialconsultantroger+1943@gmail.com"">financialconsultantroger+1943@gmail.com</a>
<a href=""mailto:financialconsultantroger+1294@gmail.com"">financialconsultantroger+1294@gmail.com</a>
<a href=""mailto:financialconsultantroger+15219@gmail.com"">financialconsultantroger+15219@gmail.com</a>
<a href=""mailto:financialconsultantroger+14225@gmail.com"">financialconsultantroger+14225@gmail.com</a>
<a href=""mailto:financialconsultantroger+3509@gmail.com"">financialconsultantroger+3509@gmail.com</a>
<a href=""mailto:financialconsultantroger+5696@gmail.com"">financialconsultantroger+5696@gmail.com</a>
<a href=""mailto:financialconsultantroger+5505@gmail.com"">financialconsultantroger+5505@gmail.com</a>
<a href=""mailto:financialconsultantroger+11834@gmail.com"">financialconsultantroger+11834@gmail.com</a>
<a href=""mailto:financialconsultantroger+30318@gmail.com"">financialconsultantroger+30318@gmail.com</a>
<a href=""mailto:financialconsultantroger+32489@gmail.com"">financialconsultantroger+32489@gmail.com</a>
<a href=""mailto:financialconsultantroger+27834@gmail.com"">financialconsultantroger+27834@gmail.com</a>
<a href=""mailto:financialconsultantroger+21983@gmail.com"">financialconsultantroger+21983@gmail.com</a>
<a href=""mailto:financialconsultantroger+30665@gmail.com"">financialconsultantroger+30665@gmail.com</a>
<a href=""mailto:financialconsultantroger+31641@gmail.com"">financialconsultantroger+31641@gmail.com</a>
<a href=""mailto:financialconsultantroger+7468@gmail.com"">financialconsultantroger+7468@gmail.com</a>
<a href=""mailto:financialconsultantroger+13268@gmail.com"">financialconsultantroger+13268@gmail.com</a>
<a href=""mailto:financialconsultantroger+24402@gmail.com"">financialconsultantroger+24402@gmail.com</a>
<a href=""mailto:financialconsultantroger+28461@gmail.com"">financialconsultantroger+28461@gmail.com</a>
<a href=""mailto:financialconsultantroger+31998@gmail.com"">financialconsultantroger+31998@gmail.com</a>
<a href=""mailto:financialconsultantroger+31875@gmail.com"">financialconsultantroger+31875@gmail.com</a>
<a href=""mailto:financialconsultantroger+17113@gmail.com"">financialconsultantroger+17113@gmail.com</a>
<a href=""mailto:financialconsultantroger+29612@gmail.com"">financialconsultantroger+29612@gmail.com</a>
<a href=""mailto:financialconsultantroger+19383@gmail.com"">financialconsultantroger+19383@gmail.com</a>
<a href=""mailto:financialconsultantroger+2019@gmail.com"">financialconsultantroger+2019@gmail.com</a>
<a href=""mailto:financialconsultantroger+20149@gmail.com"">financialconsultantroger+20149@gmail.com</a>
<a href=""mailto:financialconsultantroger+15455@gmail.com"">financialconsultantroger+15455@gmail.com</a>
<a href=""mailto:financialconsultantroger+14997@gmail.com"">financialconsultantroger+14997@gmail.com</a>
<a href=""mailto:financialconsultantroger+24965@gmail.com"">financialconsultantroger+24965@gmail.com</a>
<a href=""mailto:financialconsultantroger+12513@gmail.com"">financialconsultantroger+12513@gmail.com</a>
<a href=""mailto:financialconsultantroger+19471@gmail.com"">financialconsultantroger+19471@gmail.com</a>
<a href=""mailto:financialconsultantroger+1965@gmail.com"">financialconsultantroger+1965@gmail.com</a>
<a href=""mailto:financialconsultantroger+11230@gmail.com"">financialconsultantroger+11230@gmail.com</a>
<a href=""mailto:financialconsultantroger+14552@gmail.com"">financialconsultantroger+14552@gmail.com</a>
<a href=""mailto:financialconsultantroger+3831@gmail.com"">financialconsultantroger+3831@gmail.com</a>
<a href=""mailto:financialconsultantroger+9327@gmail.com"">financialconsultantroger+9327@gmail.com</a>
<a href=""mailto:financialconsultantroger+28530@gmail.com"">financialconsultantroger+28530@gmail.com</a>
<a href=""mailto:financialconsultantroger+6857@gmail.com"">financialconsultantroger+6857@gmail.com</a>
<a href=""mailto:financialconsultantroger+435@gmail.com"">financialconsultantroger+435@gmail.com</a>
<a href=""mailto:financialconsultantroger+4483@gmail.com"">financialconsultantroger+4483@gmail.com</a>
<a href=""mailto:financialconsultantroger+10934@gmail.com"">financialconsultantroger+10934@gmail.com</a>
<a href=""mailto:financialconsultantroger+23812@gmail.com"">financialconsultantroger+23812@gmail.com</a>
<a href=""mailto:financialconsultantroger+506@gmail.com"">financialconsultantroger+506@gmail.com</a>
<a href=""mailto:financialconsultantroger+12962@gmail.com"">financialconsultantroger+12962@gmail.com</a>
<a href=""mailto:financialconsultantroger+20788@gmail.com"">financialconsultantroger+20788@gmail.com</a>
<a href=""mailto:financialconsultantroger+30612@gmail.com"">financialconsultantroger+30612@gmail.com</a>
<a href=""mailto:financialconsultantroger+18919@gmail.com"">financialconsultantroger+18919@gmail.com</a>
<a href=""mailto:financialconsultantroger+28225@gmail.com"">financialconsultantroger+28225@gmail.com</a>
<a href=""mailto:financialconsultantroger+8931@gmail.com"">financialconsultantroger+8931@gmail.com</a>
<a href=""mailto:financialconsultantroger+4936@gmail.com"">financialconsultantroger+4936@gmail.com</a>
<a href=""mailto:financialconsultantroger+14379@gmail.com"">financialconsultantroger+14379@gmail.com</a>
<a href=""mailto:financialconsultantroger+7351@gmail.com"">financialconsultantroger+7351@gmail.com</a>
<a href=""mailto:financialconsultantroger+11500@gmail.com"">financialconsultantroger+11500@gmail.com</a>
<a href=""mailto:financialconsultantroger+28142@gmail.com"">financialconsultantroger+28142@gmail.com</a>
<a href=""mailto:financialconsultantroger+4784@gmail.com"">financialconsultantroger+4784@gmail.com</a>"
RkWwCBFb,diff.py,dyeske,Python,Monday 2nd of October 2023 10:25:37 PM CDT,"#!/usr/bin/env python
"""""" This takes unified diff output and adds colors """"""

from __future__ import print_function
import re
import sys

def main():
    """""" main routine """"""
    RED = '\033[0;31m'
    GREEN = '\033[0;32m'
    YELLOW = '\033[0;33m'
    BLUE = '\033[0;34m'
    MAGENTA = '\033[0;35m'
    ENDCOLOR = '\033[0m'
    added = 0
    deleted = 0

    try:
        for line in sys.stdin:
            if re.search('(^Index: .*)', line):
                line = ""%s%s%s"" % (BLUE, line, ENDCOLOR)
            elif re.search('(^\+\+\+ .*)', line):
                line = ""%s%s%s"" % (MAGENTA, line, ENDCOLOR)
            elif re.search('(^\+.*)', line):
                line = ""%s%s%s"" % (GREEN, line, ENDCOLOR)
                added = added + 1
            elif re.search('(^\-\-\- .*)', line):
                line = ""%s%s%s"" % (YELLOW, line, ENDCOLOR)
            elif re.search('(^\-.*)', line):
                line = ""%s%s%s"" % (RED, line, ENDCOLOR)
                deleted = deleted + 1
            else:
                pass
            sys.stdout.write(line)
        print('added ' + str(added) + ' deleted ' + str(deleted))
    except:
        print('exception')

if __name__ == '__main__':
    main()
"
GHUmxY4D,virtual autoclicker roblox |,404Coder,Lua,Monday 2nd of October 2023 10:06:50 PM CDT,"local VirtualUserInput = game.Player(""VirtualUserInput"")
local VirtualUserInput = game:GetInputService()
function InputService(inputservice)
    if InputService == Player.VirtualUserInput then
        VirtualUserInput.Player.mouse = game:GetVirtualUserMouse())
    if VirtualUserMouse then
        virtualUser.Mouse = mouse.player()
        end
    end
_G VirtualUserInput = true
game.VirtualUserInput = game.VirtualUserInput:GetMouse()
if VirtualUserInput == mouse2 and Player.Mouse == mouse1:Getmouse2 not mouse1
    if mouse2 == VirtualUserInput then
        _G autoclicker = true
        _G autoclicker.mouse2 = (""VirtualUserInput, mouse2"")
        end
    end
    end)
"
CN82b17J,Untitled,MrFast,Java,Monday 2nd of October 2023 09:42:12 PM CDT,"javascript:if(location.href==""https://ccccblackboard.blackboard.com/ultra/course"") {const scriptURL=""https://raw.githubusercontent.com/MrFast-js/SchoolTils/main/blackboard-todo-list.js"";fetch(scriptURL).then(t=>t.text()).then(scriptCode=>{eval(scriptCode)}).catch(t=>{console.error(""Error fetching or executing the script:"",t)})} else {location.href=""https://ccccblackboard.blackboard.com/ultra/course""};"
Atj5T41U,2. Buku David,firzaelbuho,C,Monday 2nd of October 2023 09:32:59 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define MAX_STACK_SIZE 7

struct Stack {
    char books[MAX_STACK_SIZE][100];
    int top;
};

// Inisialisasi stack
void initStack(struct Stack* stack) {
    stack->top = -1;
}

// Cek apakah stack kosong
bool isEmpty(struct Stack* stack) {
    return (stack->top == -1);
}

// Cek apakah stack penuh
bool isFull(struct Stack* stack) {
    return (stack->top == MAX_STACK_SIZE - 1);
}

// Menambahkan buku ke dalam stack (lemari)
void push(struct Stack* stack, const char* bookTitle) {
    if (!isFull(stack)) {
        stack->top++;
        strcpy(stack->books[stack->top], bookTitle);
        printf(""Buku '%s' berhasil ditambahkan ke dalam lemari.\n"", bookTitle);
    } else {
        printf(""Lemari sudah penuh, tidak bisa menambahkan buku.\n"");
    }
}

// Mengambil buku dari stack (lemari)
void pop(struct Stack* stack) {
    if (!isEmpty(stack)) {
        printf(""David mengambil buku '%s' dari lemari.\n"", stack->books[stack->top]);
        stack->top--;
    } else {
        printf(""Lemari sudah kosong, tidak ada buku yang dapat diambil.\n"");
    }
}

int main() {
    struct Stack lemariDavid;
    initStack(&lemariDavid);

    // Menambahkan buku-buku ke dalam lemari
    push(&lemariDavid, ""The Secret Garden"");
    push(&lemariDavid, ""The Catcher in the Rye"");
    push(&lemariDavid, ""Harry Potter and the Sorcerer's Stone"");
    push(&lemariDavid, ""To Kill a Mockingbird"");
    push(&lemariDavid, ""1984"");
    push(&lemariDavid, ""The Great Gatsby"");
    push(&lemariDavid, ""Pride and Prejudice"");

    // David mengambil buku-buku sesuai keinginannya
    pop(&lemariDavid); // Mengambil buku ""Pride and Prejudice""
    pop(&lemariDavid); // Mengambil buku ""The Great Gatsby""

    return 0;
}
"
xrjqai98,"1. Fungsi cetak 4,9,16",firzaelbuho,C++,Monday 2nd of October 2023 09:18:17 PM CDT,"#include <stdio.h>
#include <stdlib.h>

// Struktur untuk merepresentasikan node dalam linked list
struct Node {
    int data;
    struct Node* next;
};

// Fungsi untuk mencetak nilai 4, 9, dan 16 dari linked list
void cetakNilai(struct Node* head) {
    // Loop melalui linked list
    while (head != NULL) {
        if (head->data == 4 || head->data == 9 || head->data == 16) {
            // Cetak nilai yang diinginkan
            printf(""%d "", head->data);
        }
        head = head->next;
    }
}

int main() {
    // Membuat linked list sesuai dengan struktur yang diberikan
    struct Node* head = (struct Node*)malloc(sizeof(struct Node));
    head->data = 2;
    head->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->data = 4;
    head->next->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->next->data = 9;
    head->next->next->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->next->next->data = 12;
    head->next->next->next->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->next->next->next->data = 14;
    head->next->next->next->next->next = (struct Node*)malloc(sizeof(struct Node));
    head->next->next->next->next->next->data = 16;
    head->next->next->next->next->next->next = NULL;

    // Memanggil fungsi untuk mencetak nilai yang diinginkan
    cetakNilai(head);

    // Dealokasi memori
    while (head != NULL) {
        struct Node* temp = head;
        head = head->next;
        free(temp);
    }

    return 0;
}
"
ZQ1p63d6,snowybot good,coinwalk,JavaScript,Monday 2nd of October 2023 08:43:30 PM CDT,"var smmly = parseFloat(document.getElementById('pct_balance').value);
var nudle = Number((smmly/144000).toFixed(8));
var blert = nudle;
var taget = (smmly*7);
var bogs = (nudle*10);
var bpop = (nudle*6.5);
var piper = (nudle*7.5);
var circuit = 0;
var sysch = ((Math.floor(smmly/bogs))*bogs);
var sinch = ((Math.floor(smmly/bogs))*bogs);
var fatt = 1;
var distj = ((blert*1).toFixed(8));
var nemo = smmly;
var shit = smmly;
var wons = parseFloat(document.getElementById('wins').innerHTML);
var vons = parseFloat(document.getElementById('wins').innerHTML);
var loms = parseFloat(document.getElementById('losses').innerHTML);
var loon = parseFloat(document.getElementById('losses').innerHTML);
var brother = smmly;
var beboon = true;
 
function get(){
console.clear();
vons = document.getElementById('wins').innerHTML;
loon = document.getElementById('losses').innerHTML;
nemo = document.getElementById('pct_balance').value;
if ((nemo>shit)&&(vons>wons)&&(beboon)){
shit = parseFloat(nemo);
wons = parseFloat(vons);
}
if ((nemo<shit)&&(loon>loms)&&(beboon)){
shit = parseFloat(nemo);
loms = parseFloat(loon);
}
if ((vons>wons)&&(nemo<shit)&&(beboon)){
console.log('bet not verified counted green on reds');
return;
}
if ((loon>loms)&(nemo>shit)&&(beboon)){
console.log('bet not verified counted reds on green');
return;
}
if ((vons<wons)||(loon<loms)&&(beboon)){
console.log('bet not verified negative');
return;
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo>sysch)) {
    blert = blert*2;
    circuit = parseFloat(nemo);
}
if ((nemo>(((Math.floor(nemo/bogs))*bogs)+bpop))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+piper))&&(nemo!=circuit)&&(nemo<sysch)) {
    blert = blert*2;
    fatt = 0;
    circuit = parseFloat(nemo);
}
if ((nemo>=(sysch+(bogs*fatt)))&&(nemo<(((Math.floor(nemo/bogs))*bogs)+bpop))) { 
    blert = nudle;
    circuit = 0;
    fatt = 1;
    sysch = ((Math.floor((parseFloat(nemo))/bogs))*bogs);
}
    if (nemo >= taget) {
        console.log(""winner winner chicken dinner"");
        return;
    }
if ((nemo!=brother)&&(!beboon)){
brother = parseFloat(nemo);
beboon = true;
}
if ((nemo==brother)&&(beboon)){
razzle = ((blert*1).toFixed(8));
$('#pct_chance').val(49.5);
$('#pct_bet').val(razzle);
$('#a_lo').click();
beboon = false;
}
var good = ((nemo-smmly).toFixed(8));
console.log(""profit"");
console.log(good);
setTimeout(() => get(), 10);
}
get();"
N1d65eKG,particle simulator,KrYn0MoRe,Lua,Monday 2nd of October 2023 08:25:13 PM CDT,"local part = Instance.new(""Part"")
part.Size = Vector3.new(10,10,1)
part.Position = Vector3.new(0,10,20)
part.Anchored = true
part.CanCollide = false
part.Parent = script

local surface = Instance.new(""SurfaceGui"")
surface.SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud
surface.PixelsPerStud = 50
surface.Parent = part

local main = Instance.new(""Frame"")
main.Size = UDim2.new(1,0,1,0)
main.BorderSizePixel = 0
main.BackgroundColor3 = Color3.new(0,0,0)
main.ClipsDescendants = true
main.Parent = surface

local particle_list = {}
local groups = {}
local particle_data = {}

local scale = 10 -- size and velocity scaling
local mas = main.AbsoluteSize

function create_particle(x,y)
	x = x or 0
	y = y or 0
	
	local p = Instance.new(""Frame"")
	p.Size = UDim2.new(0,scale,0,scale)
	p.Position = UDim2.new(0,mas.X/2,0,mas.Y/2)+UDim2.new(0,x*scale,0,y*scale)
	p.BackgroundColor3 = Color3.new(1,1,1)
	p.Name = #particle_list+1
	p.BorderSizePixel = 0
	p.Parent = main
	
	particle_data[p] = {}
	particle_data[p].force = Vector2.new(0,0)
	particle_data[p].position = Vector2.new(p.Position.X.Offset,p.Position.Y.Offset)
	particle_data[p].mass = 1
	
	table.insert(particle_list,p)
end

function update_divs(divs)
	for _,div in pairs(divs) do
		for x = 0,div do
			groups[div][x] = {}

			for y = 0,div do
				groups[div][x][y] = 0

				local visualize = false

				if visualize then
					local p = Instance.new(""Frame"")
					p.Size = UDim2.new(3,0,0,1)
					p.Position = UDim2.new(0,mas.X/div*x,0,mas.Y/div*y)
					p.BackgroundColor3 = Color3.new(1,1,1)
					p.BackgroundTransparency = .9
					p.BorderSizePixel = 0
					p.Parent = main

					local p = Instance.new(""Frame"")
					p.Size = UDim2.new(0,1,3,0)
					p.Position = UDim2.new(0,mas.X/div*x,0,mas.Y/div*y)
					p.BackgroundColor3 = Color3.new(1,1,1)
					p.BackgroundTransparency = .9
					p.BorderSizePixel = 0
					p.Parent = main
				end
			end
		end
	end
	for i,v in ipairs(particle_list) do -- first establish group population
		local pos = v.Position
		for _,div in pairs(divs) do
			local x = math.floor(pos.X.Offset/mas.X*div)
			local y = math.floor(pos.Y.Offset/mas.Y*div)
			
			if div > x and div > y and x > 0 and y > 0 then
				groups[div][x][y] += 1 -- increase population in group area
			end
		end
	end
end

function update_groups()
	local divs = {60,40,20}
	local total_div = 0
	
	for _,div in pairs(divs) do
		total_div += div
		groups[div] = {}
	end
	update_divs(divs)
	
	for i,v in ipairs(particle_list) do -- update colors
		local pos = v.Position
		
		local pop = 0
		
		for _,div in pairs(divs) do
			local x = math.floor(pos.X.Offset/mas.X*div)
			local y = math.floor(pos.Y.Offset/mas.Y*div)

			if div > x and div > y and x > 0 and y > 0 then
				local divpop = groups[div][x][y]
				pop += divpop^2/(mas.X/div)
			end
		end

		local radiance = pop
		v.BackgroundColor3 = Color3.new(radiance,radiance,radiance)
		--v.BackgroundColor3 = Color3.new(0.4+radiance*0.4,0.8-radiance*0.4,0.8-radiance*0.4)
	end
	
	--[[ -- supposed to update gravity with large amounts of particles but im lazy to add
	for _,p in ipairs(particle_list) do -- update gravity
		local pos = p.Position
		
		local force = 0
		
		for _,div in pairs(divs) do
			local x = math.floor(pos.X.Offset/mas.X*div)
			local y = math.floor(pos.Y.Offset/mas.Y*div)
			
			if div > x and div > y and x > 0 and y > 0 then
				local divpop = groups[div][x][y]
				force += divpop/(mas.X/div) -- all the particles have mass of 1, no extra steps
			end
		end

		local p_vec = Vector2.new(p.Position.X.Offset,p.Position.Y.Offset)
		local new_vec = p_vec+force

		p.Position = UDim2.new(0,new_vec.X,0,new_vec.Y)
	end
	]]
end

function update_particle(p)
	local G = 6.67408 * 10^-4--1/1000
	for i,v in ipairs(particle_list) do
		if v ~= p then
			local m1 = particle_data[p].mass
			local m2 = particle_data[v].mass
			local p_vec = particle_data[p].position
			local v_vec = particle_data[v].position
			local force_vec = v_vec-p_vec
			local r = force_vec.Magnitude
			local F = G*(m1*m2)/r^2
			local A = F/m1
			if r > 0 then
				force_vec = force_vec*A
			end
			force_vec = particle_data[p].force+force_vec
			particle_data[p].force = force_vec

			local new_vec = p_vec+force_vec
			particle_data[p].position = new_vec
			--p.Position = UDim2.new(0,new_vec.X,0,new_vec.Y)
		end
	end
end

function update_sim()
	for _,p in ipairs(particle_list) do
		update_particle(p)
	end
	for _,p in ipairs(particle_list) do
		local new_vec = particle_data[p].position
		p.Position = UDim2.new(0,new_vec.X,0,new_vec.Y)
	end
	update_groups()
end

local mx = 15
local my = 15

for x = 1,mx do
	for y = 1,my do
		create_particle((-mx*2/2)+x*2,(-my*2/2)+y*2)
	end
end

update_groups()

task.wait(3)

while true do
	update_sim()
	task.wait()
end"
cbBkEfin,Getting IP adress nic,Rnery,Bash,Monday 2nd of October 2023 08:15:42 PM CDT,"#!/usr/bin/env bash
set -euo pipefail

_ip_notfound() {
    clear
    sleep 1
    echo ""Erro, IP não encontrado.""
    exit 1
}

_show_dev() {
    ip address show dev eth0
}

_address_condition() {
    _show_dev > /dev/null 2>&1
}

_ipv4() {
    if _address_condition; then
        _show_dev |
        grep -E '\w{3}[.]' |
        awk '{print $2}'
    else
        _ip_notfound
    fi
}

_ipv6() {
    if _address_condition; then
        _show_dev |
        grep -E 'inet6\s[0-9a-fA-F]{4}[:]' |
        awk '{print $2}'
    else
        _ip_notfound
    fi
}

case $1 in
    4)  _ipv4;;
    6)  _ipv6;;
    *)  clear; echo ""Não existe essa versão de IP, digite 4 ou 6""
esac
"
6piXMdsU,Swap all odd and even bits,jayati,C++,Monday 2nd of October 2023 07:50:57 PM CDT,"//{ Driver Code Starts
//Initial Template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution
{
    public:
    //Function to swap odd and even bits.
    unsigned int swapBits(unsigned int n)
    {
    	int oddm=0x55555555;
        int evenm=0xAAAAAAAA;
        
        int odd=n&oddm;
        int even=n&evenm;
        
        odd=odd<<1;
       
        even=even>>1;
       
        n=odd|even;
        return n;
    }
};

//{ Driver Code Starts.

// Driver code
int main()
{
	int t;
	cin>>t;//testcases
	while(t--)
	{
		unsigned int n;
		cin>>n;//input n
		
		Solution ob;
		//calling swapBits() method
		cout << ob.swapBits(n) << endl;
	}
	return 0;
}
// } Driver Code Ends"
86ZS5YHQ,Python 3 Simple prime_number Class,HasteBin0,Python,Monday 2nd of October 2023 07:41:39 PM CDT,"

tri = NewType('tri', Optional[bool])


class prime_numbers:
    prime_naturals_oeis40: Tuple[int, ...] = (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,
                                              173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271)  # https://oeis.org/A000040
    
    __primes: Deque[int] | Tuple[int, ...] = deque(prime_naturals_oeis40)
    __max_p_tmp: int = max(__primes)  # enables efficient resumes of searching in edit mode
    
    @classmethod
    def freeze_primes(cls, get_freeze_unfreeze: tri) -> tri:
        """""" This method allows the user to ""freeze"" or ""unfreeze"" the __primes attribute. When frozen, __primes is converted to a tuple (immutable), and when unfrozen, it's converted back to a deque (mutable).
            The method returns the current state (True for unfrozen, False for frozen, or None for an error). """"""
        if get_freeze_unfreeze is None:  # get
            return isinstance(cls.__primes, deque)
        elif get_freeze_unfreeze is False:  # freeze
            try:
                cls.__primes = tuple(cls.__primes)
                return False
            except MemoryError:
                return isinstance(cls.__primes, deque)
        elif get_freeze_unfreeze is True:  # unfreeze
            try:
                cls.__primes = deque(cls.__primes)
                return True
            except MemoryError:
                return isinstance(cls.__primes, deque)
    
    range_spec_tuple_t = NewType('range_spec_tuple_t', Tuple[int] | Tuple[int, int] | Tuple[int, int, int])
    
    @classmethod
    def gen_primes_sieve_1_resumable(cls, output_wanted: range_spec_tuple_t, below: Optional[int] = None, above: Optional[int] = None, max_look_ahead: Optional[int] = None, edit: bool = False) -> Iterable[Optional[Tuple[int, int]]]:
        """"""
        Generate prime numbers in a resumable manner using a simple trial division method.

        Parameters:
        - output_wanted (range_spec_tuple_t): A tuple specifying the range of prime numbers desired.
        - below (Optional[int]): An optional integer specifying the upper limit for the prime numbers.
        - above (Optional[int]): An optional integer specifying the lower limit for the prime numbers.
        - max_look_ahead (Optional[int]): An optional integer specifying the maximum number of primes to look ahead in one search.
        - edit (bool): A boolean indicating whether to edit the list of known primes or not.

        Returns:
        Iterable[Optional[Tuple[int, int]]]: An iterable of optional tuples, where each tuple contains a prime number and its position in __primes if it's in the desired output range.

        Functionality:
        1. If `edit` is True, the method attempts to find new prime numbers by checking if they are divisible by any of the known primes. If a new prime is found, it's appended to the __primes list.
        2. If `edit` is False, the method checks if the last known prime is within the specified range. If not, it yields None and returns.
        3. The method then iterates through the known primes and yields those that are within the specified range, along with their positions.
        4. Finally, the method yields None to indicate the end of the sequence.
        5. In edit mode, the progress of the search is saved. So, search can be chunked by the `max_look_ahead`.
        """"""
        primes = cls.__primes
        rso = range(*output_wanted)
        above: int = above or (min(rso) - 1)
        below: int = below or (max(rso) + 1)
        max_look_ahead: int = max_look_ahead or (len(rso) + 1)
        del rso
        if edit:
            attempt: int = 0
            for attempt in range(max(primes[-1] + 2, cls.__max_p_tmp), min(below, above + max_look_ahead), 2):
                if not any(attempt % x == 0 for x in primes):
                    primes.append(attempt)
            if attempt != 0:
                cls.__max_p_tmp = attempt
            del attempt
        elif primes[-1] > below or primes[-1] < above:
            yield None
            return
        else:
            if above <= below or below < 2:
                yield None
                return
        ipi = enumerate(primes)
        oro = range(*output_wanted)
        for pid, x in ipi:
            if x > above:
                if x in oro:
                    yield x, pid
                break
        for pid, x in ipi:
            if x >= below:
                break
            if x in oro:
                yield x, pid
        yield None
        return
    
    @classmethod
    def gen_primes_sieve_2_eratosthenes(cls, output_wanted: range_spec_tuple_t, below: Optional[int] = None, above: Optional[int] = None, max_look_ahead: Optional[int] = None) -> Iterable[int]:
        """""" Generate prime numbers using the Sieve of Eratosthenes algorithm. """"""
        oro = range(*output_wanted)
        start, stop, step = oro.start, oro.stop, oro.step
        
        # Ensure the range is valid
        if start > stop:
            return iter([])  # Return an empty iterator
        
        # If the range is within the already known primes
        if start <= cls.__primes[-1]:
            for prime in cls.__primes:
                if start <= prime <= stop:
                    yield prime
            return
        
        # Determine the range for the sieve based on the provided parameters
        sieve_start = above or start
        sieve_end = below or max(stop, cls.__primes[-1] ** 2)
        if max_look_ahead:
            sieve_end = min(sieve_end, sieve_start + max_look_ahead)
        
        sieve = [True] * (sieve_end + 1)
        for prime in cls.__primes:
            for multiple in range(max(2 * prime, sieve_start), sieve_end + 1, prime):
                sieve[multiple] = False
        
        # Generate new primes and add them to __primes
        for num in range(max(2, sieve_start), sieve_end + 1):
            if sieve[num]:
                cls.__primes.append(num)
                if start <= num <= stop:
                    yield num
    
    @classmethod
    def can_check_sieve(cls, nr: range_spec_tuple_t) -> tri:
        range_object = range(*nr)
        if range_object:
            return cls.__primes[-1] ** 2 > max(range_object)
    "
4VehDAbs,SSM2CSS,nick36585,CSS,Monday 2nd of October 2023 07:28:04 PM CDT,"
$yellow: #FFE800;
$brown: #404040;
$blue: #1CD3F8;
$angle: 8px;
$angle-o: 4px;


.box
{
	text-align:center;
	padding:0px;
	box-shadow:none;
}

.thing,.box-header,.box-footer,.box-bit
{
	background:#39f;
	box-shadow:0px 0px 4px rgba(0,0,0,0.2),1px 1px 2px rgba(0,0,0,0.5),0px 0px 4px rgba(255,255,255,0.5) inset;
}
.box-bit{border-radius:0px;}

.box-header
{
	border-bottom-left-radius:20px;
	border-bottom-right-radius:20px;
	margin-bottom:0px;
	text-align: center;
}
.box-footer
{
	border-top-left-radius:20px;
	border-top-right-radius:20px;
	margin-top:1px;
}


#game{
background-image: hidden !important;
z-index: 3 !important; 
}

.thing .shiny .noClick .noText{

z-index: -1 !important; 

}

.thing .shiny .bigButton .noText{

z-index: 4 !important; 

}



.shiny-icon{


//opacity: 0.2;
//transform: rotate(90deg) !important;

}

#box-main
{
	left:0px;
	top:0px;
	bottom:0px;
	overflow:hidden;
	width:30%;
	position:absolute;
}
#box-res.fullWidth
{
	width:100%;
	top:40%;
	height:5%;
	min-height:32px;
	z-index:100;
	position:absolute;
}
#box-buttons
{
	top:0px;
	right:0px;
	bottom:0px;
	left:0px;
	position:absolute;
}
#box-store
{
	right:0px;
	top:0px;
	bottom:0px;
	margin-bottom:0px;
	width:70%;
	position:absolute;
}
#box-buildings,#box-upgrades,#box-buildings2,#box-upgrades2
{
	top:0px;
	bottom:0px;
	width:25%;
	//right:0px;
	overflow-x:hidden;
	overflow-y:scroll;
	padding-bottom:48px;/* this is to accommodate the info and settings buttons */
	position:absolute;
}
#box-buildings
{right:75%;}

#box-upgrades
{right:50%;}

#box-buildings2
{
right:0%;

}

#box-upgrades2
{right:25%;}


//#box-buildings{background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 20%);}
//#box-upgrades{background:rgba(0,0,0,0.3);}
//#box-buildings2{background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 20%);}
//#box-upgrades2{background:rgba(0,0,0,0.3);}

#bulkDisplay{margin:-11px 24px 4px 24px;}


.thing
{
	display:inline-block;
	padding:auto;
	margin:auto;
	margin-bottom:1px;
	cursor:pointer;
}
.thing:hover,.thing.lit
{
	background:#6cf;
}
.thing.cantAfford
{
	opacity:0.65;
}
.upgrade.cantAfford
{
	box-shadow:0px 0px 4px #39f;
	border-radius:8px;
}
.upgrade.cantAfford:hover
{
	box-shadow:0px 0px 4px #6cf;
}
.upgrade.owned,.achiev.owned
{
	background:#6cf;
}
.thing-text,.thing-costs{font-weight:bold;}



.building
{
	padding-left: 10% !important;
	border-top-left-radius:20px;
	border-bottom-left-radius:20px;
	display:block;
	padding-right: auto;
	margin-right:auto;
	font-size:14px;
}

.fullWidth
{
	display:block;
	margin-left:0px;
	margin-right:0px;
	z-index:10;
}
#game .fullWidth
{
	height:auto;
	min-height:auto;
}
.fullWidth,.fullWidth:hover
{
	/*background:rgba(0,0,0,0.5);
	background:linear-gradient(to bottom,rgba(0,0,0,0.5) 0%,rgba(0,0,0,0.25) 50%,rgba(0,0,0,0.5) 100%);*/
	background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 50%,rgba(0,0,0,0) 100%);
	box-shadow:none;
}
.fullWidth:before,.fullWidth:after
{
	content:'';
	height:1px;
	background:linear-gradient(to right,rgba(255,255,255,0) 0%,rgba(255,255,255,0.25) 50%,rgba(255,255,255,0) 100%);
	position:absolute;
	left:0px;
	right:0px;
	z-index:-1;
}
.fullWidth:before{top:-1px;}
.fullWidth:after{bottom:-1px;}

.fullWidth .thing-icon
{
	margin-top:-14px;
	margin-bottom:-14px;
}
.fullWidth .thing-text
{
	margin-top:-4px;
	margin-bottom:-4px;
}

#game.filtersOn .thing-icon{filter:drop-shadow(0px 0px 0px rgba(0,0,0,0));}


//---------------------------------------------------------------------------------------------------------





#game
  {
    background:#002130;
    background-size: cover;
    font-family: DejaVu Sans Mono, monospace !important;
    letter-spacing: 0px;
 	//font-size: 12px;
    font-stretch: ultra-expanded
   
   // font-family:Century Gothic,sans-serif;
    //font-weight:100;
    color:#000000;
  }
.upgrade, .building
  {

background-repeat: no-repeat;
    font-weight:100 !important;
    margin-top:0px;
    padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#000000;
    border: 0px solid #000000;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to right, #00000000 , #4286f433 , #93f8ff55);
	width: 100%;

  transition: all .15s linear 0s;
  position: relative;
  display: inline-block;
  
  background-color: $yellow;
  color: $brown;
  
  
  
  box-shadow: -6px 6px 0 $brown;
  text-decoration: none;
  
  &:hover {
    top: 3px;
    left: -3px;
    box-shadow: -3px 3px 0 $brown;
    
    &::after {
      top: 1px;
      left: -2px;
      width: $angle-o;
      height: $angle-o;
    }
    
    &::before {
      bottom: -2px;
      right: 1px;
      width: $angle-o;
      height: $angle-o;
    }
  }
  
  &::after {
    transition: all .15s linear 0s;
    content: '';
    position: absolute;
    top: 2px;
    left: -4px;
    width: $angle;
    height: $angle;
    background-color: $brown;
    transform: rotate(45deg);
    z-index: -1;
    
  }
  
  &::before {
    transition: all .15s linear 0s;
    content: '';
    position: absolute;
    bottom: -4px;
    right: 2px;
    width: $angle;
    height: $angle;
    background-color: $brown;
    transform: rotate(45deg);
    z-index: -1;
  }
}

.thing-text
{



}
.thing-icon
{
 	
 }


#thing-0
  {
   
    background-repeat: no-repeat;
    //max-width: 250px;
    //max-height: 250px;
    padding: 0px 50px;
    border-radius:50%;
    float: left;
    padding-left: 21%;
    background:rgba(0,55,79,0.00);
	 
	
 
/*-webkit-animation-name: spin;
    -webkit-animation-duration: 4000ms;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-timing-function: linear;
    -moz-animation-name: spin;
    -moz-animation-duration: 4000ms;
    -moz-animation-iteration-count: infinite;
    -moz-animation-timing-function: linear;
    -ms-animation-name: spin;
    -ms-animation-duration: 4000ms;
    -ms-animation-iteration-count: infinite;
    -ms-animation-timing-function: linear;
   
    animation-name: spin;
    animation-duration: 910000ms;
    animation-iteration-count: infinite;
    animation-timing-function: linear;*/
}
@-ms-keyframes spin {
    from { -ms-transform: rotate(0deg); }
    to { -ms-transform: rotate(360deg); }
}
@-moz-keyframes spin {
    from { -moz-transform: rotate(0deg); }
    to { -moz-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
    from { -webkit-transform: rotate(0deg); }
    to { -webkit-transform: rotate(360deg); }
}
@keyframes spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(360deg);
    }
}
 
 
 
#thing-0:hover
  {
   	
    padding: 50px 50px;
    border-radius:50%;
    float: left;
    padding-left: 21%;
    color:#e75480;
    background:rgba(0,55,79,0.00);
    //background-image: linear-gradient(to right, #00000000 , #4286f466 , #93f8ff99);
   
  }
 
.thing-text{
 
font-weight:100;
 
}
 
#thing-1
  {
    padding: 40px 40px;
    float: left;
    padding-left: 14%;
	width: 90%;
   
  }
 
#thing-2
  {
    padding: 40px 40px;
    padding-left: 14%;
	padding-top: 10px !important;
    float: left;
	width: 90%;
   
  }
#thing-3
  {
    padding: 40px 40px;
    padding-left: 14%;
	padding-top: 10px !important;
    float: left;
	width: 90%;
   
  }
#thing-4
  {
    padding: 40px 40px;
    padding-left: 14%;
	padding-top: 10px !important;
    float: left;
	width: 90%;
   
  }
 
 
.building:hover {
 top: 0px !important;
right: 0px !important;
left: 0px !important;
    //transform: skew(30deg);
	
}
 
.thing:hover
  {
    border: 0px solid #93f8ff;
    //background:#002130;
    color:#93f8ff;
    background:rgba(0,55,79,0.00);
    background-image: linear-gradient(to right, #00000000 , #4286f466 , #93f8ff99);
	
  }
.thing:active
  {
   
    border: 0px solid #FFFFFF;
    background:#002130;
    color:#002130;
    transform: translateY(2px);
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to right, #00000000 , #93f8ff55);
  }
 
.upgrade.owned, .achiev.owned {
    //width: 100%;
    //padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to right, #00000000 , #4286f433 , #93f8ff55);
}
.upgrade:hover{
top: 0px !important;
right: 0px !important;
left: 0px !important;
    //width: 100%;
    float: left;
    border: 0px solid #93f8ff;
    //background:#002130;
    color:#93f8ff;
    text-align: left;
    background:rgba(0,55,79,0.00);
    background-image: linear-gradient(to left, #00000000 , #4286f466 , #93f8ff99);
    box-shadow: 0px 0px 0px #39f;
}
.upgrade.owned:hover{
    //width: 100%;
    float: left;
    padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to right, #00000000 , #4286f466 , #93f8ff99);
}
.upgrade.cantAfford {
    //width: 100%;
    float: left;
    padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to left, #00000000 , #4286f433 , #93f8ff55);
    box-shadow: 0px 0px 0px #39f;
}
.upgrade {
    width: 100%;
    float: left;
    padding: 6% 6%;
	padding-left: 10% !important;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to left, #00000000 , #4286f433 , #93f8ff55);
    box-shadow: 0px 0px 0px #39f;
	font-family: DejaVu Sans Mono, monospace !important;
	font-size: 14px;
}
.upgrade.notOwned {
    width: 101% !important;
    float: left;
	margin-left: auto;
	margin-right: auto;
	padding: 6% 6%;
    text-align: left;
    //height: 48px;
    border-radius:0px;
    //background:#002130;
    border: 0px solid #002130;
    background:rgba(255,255,255,0.0);
    background-image: linear-gradient(to left, #00000000 , #4286f433 , #93f8ff55);
    box-shadow: 0px 0px 0px #39f;
}
 
.upgrade.notOwned:hover{
    
    //float: left;
    border: 0px solid #93f8ff;
    //background:#002130;
    color:#93f8ff;
    text-align: left;
    background:rgba(0,55,79,0.00);
    background-image: linear-gradient(to left, #00000000 , #4286f466 , #93f8ff99);
    box-shadow: 0px 0px 0px #39f;
}
 
 
.thing,.box-header,.box-footer,.box-bit
{
   
    border: 0px solid #000000;
    //font-family:""Courier"",Courier,monospace;
    //font-weight:300;
    color:#93f8ff;
    background:#002130;
    background:rgba(255,255,255,0.0);
    box-shadow:0px 0px 0px rgba(0,0,0,0),0px 0px 0px rgba(0,0,0,0),0px 0px 0px rgba(0,55,79,0) inset;
    background-image: linear-gradient(to right, #00000000 , #4286f433 , #93f8ff55);
}
 
.glow {
    animation: glow 0.0s;
}
 
 
 
.box-header {
	
    margin-bottom:1px;
    padding: 15px 15px;
    height: 40px;
    border: 0px solid #000000;
    border-radius: 0px;
    //font-family: ""Courier"",Courier,monospace;
    font-size: 18px;
    color: #93f8ff;
    background: #002130;
    background: rgba(255,255,255,0.0);
    box-shadow: 0px 0px 0px rgba(0,0,0,0), 0px 0px 0px rgba(0,0,0,0), 0px 0px 0px rgba(0,55,79,0) inset;
    background-image: linear-gradient(to right, #00000000 , #4286f433 , #93f8ff55);
	text-align: center;
}
 
 
#bulkDisplay {
    position: relative;
    top: 0px;
    margin: 0px 0px 0px 0px;
    margin-bottom: 0px;
}
 
#box-things-Buildings {
position: relative;
    
 
}
 
.box-bit{
padding: 0% 0%;
margin-bottom:0px;
position: relative;
top: 0px;
border-radius: 0px;
background: #00213000;
}
 
//#game.filtersOn .thing-icon{filter:drop-shadow(3px 3px 1px rgba(0,0,0,0.5));}
#game.filtersOn .thing-icon{filter:drop-shadow(0px 0px 0px rgba(0,0,0,0));}
 
.popup, #tooltip, .toast {
    background: #000000FF;
    background-image: linear-gradient(to top, #00000000 , #4286f455);
    //text-shadow: 1px 1px 0px rgba(0,0,0,0.5);
    color: #93f8ff;
    //border: 0px solid #93f8ff;
    //background: url(lib/img/darkNoise.jpg);
    border-radius: 0px;
    /*box-shadow: 0px 0px 0px 1px #000, 0px 0px 0px 2px rgba(255,255,255,0.5), 0px 0px 15px 1px rgba(255,255,255,0.15) inset, 4px 4px 2px rgba(0,0,0,0.25), 4px 4px 20px rgba(0,0,0,0.5);*/
    box-sizing: border-box;
    padding: 8px 8px;
 
}

 
#tooltipContent{
color: #93f8ff;
font-weight: 100;
 
}
 
::-webkit-scrollbar-thumb {
    background: #93f8ff33;
	//background: #1f546a;

    //background-image: linear-gradient(to left, #00000000 , #93f8ff55);
    box-shadow: 0px 0px 0px 0px #333 inset, 0px 0px 0px 0px #999 inset, 0px 0px 0px 0px #fff inset;
}
 
::-webkit-scrollbar-track {
    background: #4286f400;
	box-shadow: 0px 0px 0px 0px #00000000 inset, 0px 0px 0px 0px #444 inset, 0px 0px 0px 0px #222 inset;
	width: 20px !important;
}
::-webkit-scrollbar-thumb {
    background: #93f8ff33;
	//background: #1f546a;
	
    //background-image: linear-gradient(to left, #00000000, #93f8ff55);
    box-shadow: 0px 0px 0px 0px #000 inset, 0px 0px 0px 0px #999 inset, 0px 0px 0px 0px #fff inset;
}
::-webkit-scrollbar-thumb:hover {
    background: #93f8ff99;
	//background: #5cb2c5;

    box-shadow: 0px 0px 0px 0px #000 inset, 0px 0px 0px 0px #999 inset, 0px 0px 0px 0px #fff inset;
}
.achiev, .achiev:hover{
    padding:5px 5px;
    background-image: linear-gradient(to right, #00000000 , #4286f400 , #93f8ff00);
}
title {
    display: none;
}
 
.my-anim {
    animation-name: my-anim;
    animation-duration: 0s;
}
 
.thing.bigButton, .thing-icon {
top: 21%;
left: 51%;
background-repeat: no-repeat;
    opacity: 1;
    transform: scale(1);
    transition: transform 0.00s ease-out;
	
}
#thing-icon-0{
z-index: -2 !important;

}
.thing.bigButton:hover, .thing-icon:hover {
background-repeat: no-repeat;
    transform: scale(1);
    transition: transform 0.00s ease-out;
    transition: transform 0.00s ease-in;
	
	
}
 
#game.filtersOn .shadowed {
    filter: drop-shadow(0px 0px 0px rgba(0,0,0,0.0));
}
 
.wobble {
    animation: wobble 1s;
    transform: scale(1);
    animation-duration: 5s;
    transition: transform 5.00s ease-out;
    transition: transform 0.00s ease-in;
}
 
@keyframes wobble {
0% {
    opacity: 0.7;
    transform: scale(1.3);
}
10% {
    opacity: 1;
    transform: scale(1.3);
}
100%
    opacity: 1;
    transform: scale(1);
}
}
 
.thing.bigButton .thing-icon{transform:scale(1);}
.thing.bigButton:hover .thing-icon{transform:scale(1);}
.thing.bigButton:active .thing-icon{transform:scale(1);}

div {
    display: visible !important;
}

#bulkDisplay {
    position: relative;
    top: 0px;
    margin: 0px 0px 0px 0px;
    margin-top: 5px;
    margin-right: 0px;
    margin-bottom: 0px;
    margin-left: 0px;
    margin-bottom: 0px;
	visibility: visible !important;
	
	text-align: right;
}


.box-bit-content{

display: inline !important;
}

div#bulkDisplay.box-bit {
float: right;
margin-right: auto;
margin-left: auto;

}

.popup {
    position: relative;
	left: 50%;
	top: 50%;
	width: 30%;
    pointer-events: auto;
    transition: opacity 0.15s,left 0.15s,top 0.15s;
    opacity: 0;
}
.box{
margin: 0px !important;
padding: 0px !important;
}

#fpsGraph {
    background: #333;
    color: #93f8ff33;
    position: absolute;
    left: 0px;
    bottom: 0px;
    padding: 3px;
    width: 128px;
    height: 64px;
    z-index: 10000000;
    opacity: 0.5;
    pointer-events: none;
}



#box-upgrades::-webkit-scrollbar, #box-buildings::-webkit-scrollbar, #box-upgrades2::-webkit-scrollbar, #box-buildings2::-webkit-scrollbar {
    width: 8px !important;
}

#box-upgrades, #box-buildings, #box-upgrades2, #box-buildings2{
    top: 41px !important;
	overflow-y: auto !important;
}

#box-upgrades{
width: 25%;
}



.outFrame #game {
    right: 0% !important;
    bottom: 0px;
}
div#bulkDisplay.box-bit
{

}
#box-store{

top: 0px !important;
}

#box-buildings2Header{

right:0%;


}
#box-upgrades2Header{

right:25%;


}
#box-upgradesHeader{

right:50%;


}
#box-buildingsHeader{

right:75%;


}

#box-buildings2Header, #box-upgrades2Header, #box-upgradesHeader, #box-buildingsHeader{
top: 0px;
position:absolute;
width: 25%;
height: 40px;
}

#toasts {
position: absolute !important;
right: 72% !important;

}
#fpsCounter, #fpsGraph{
position: absolute !important;
bottom: 0px !important;
left: 0px !important;
width: 128px !important;
height: 64px !important;
}

#thing-8{
position: absolute !important;
top: -39vh;
font-size: 2.8vh;
left: 0.2vw;
color: #ffffff44;
background-color: #00000000;
background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 0%,rgba(0,0,0,0) 0%);
}

#thing-text-8{
font-weight: 900 !important;
}

#thing-9{
position: absolute !important;
top: -37vh;
font-size: 1.8vh;
left: 0.2vw;
color: #93f8ff44;
background-color: #00000000;
background:linear-gradient(to right,rgba(0,0,0,0) 0%,rgba(0,0,0,0.25) 0%,rgba(0,0,0,0) 0%);

}

#log::-webkit-scrollbar {
  display: none;
}



#logOuter{
border-style: solid !important;
border-radius: 10% !important;
border-color: #FFFFFF !important;
}
#logInner{
display: flex;
flex-direction: column;
width: 20vw !important;
padding: 5%;
font-family: 'Courier Prime', monospace !important;
color: #FFFFFF;
overflow:auto;
}
#box-log{
border-style: solid !important;
border-radius: 10% !important;
border: 1px;
border-color: #FFFFFF !important;
background-color: #002130;
}
.log{
width: 100% !important;
opacity: 50% !important;
top: 81% !important;
left: 4% !important;
height: 12% !important;
width: 20% !important;
}

#thing-text-1, #thing-text-2, #thing-text-3, #thing-text-4{

}

#box-res{
}

#thing-icon-1, #thing-icon-2, #thing-icon-3, #thing-icon-4{


}
#thing-1, #thing-2, #thing-3, #thing-4{

}

img{object-fit: contain !important;}

#box-things-sortup, #box-things-sortup2, #box-things-Upgrades, #box-things-upgrades2  /*if necessary, change this to the name of the box containing your upgrades. it should start with ""box-things"" and you can use inspect element to find it*/
{
    display:flex;
    flex-wrap:wrap;
    justify-content:center; /*you can change this to ""flex-start"" if you want upgrades aligned to the left*/
	flex-direction: column-reverse;
}

#box-things-Buildings, #box-things-buildings2{
	display:flex;
    flex-wrap:wrap;
    justify-content:center; /*you can change this to ""flex-start"" if you want upgrades aligned to the left*/

	flex-direction: column-reverse;
}

.tag-sortup, .tag-sortup2, .building, .thing-77, .upgrade2.notOwned, .upgrade2.cantAfford{
    order:3;
}
.upgrade.notOwned {
    order:2;
}
.upgrade.owned, .upgrade2.owned
{
    order:1;
}"
cnEFs4iR,2023-10-02_stats.json,rdp_snitch,JSON,Monday 2nd of October 2023 07:18:24 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 6,
    ""193.142.147.9"": 18,
    ""193.142.146.17"": 18,
    ""152.32.192.36"": 3,
    ""87.251.75.145"": 6,
    ""194.165.16.10"": 12,
    ""141.98.11.128"": 9,
    ""205.210.31.82"": 9,
    ""5.161.224.71"": 6,
    ""167.94.138.51"": 3,
    ""194.165.16.111"": 3,
    ""185.170.144.3"": 6,
    ""87.251.75.120"": 3,
    ""138.197.109.5"": 6,
    ""54.144.241.209"": 540,
    ""45.143.201.62"": 15,
    ""38.181.35.81"": 9,
    ""212.129.42.204"": 3,
    ""43.132.213.11"": 3,
    ""205.210.31.248"": 9,
    ""163.172.201.146"": 3,
    ""195.181.244.184"": 6,
    ""136.144.35.81"": 3,
    ""62.204.41.137"": 12,
    ""45.227.254.26"": 6,
    ""45.140.17.16"": 6,
    ""58.218.204.183"": 9,
    ""83.97.73.77"": 6,
    ""165.154.12.38"": 3,
    ""111.61.253.55"": 3,
    ""103.171.0.205"": 3,
    ""146.190.83.254"": 12,
    ""198.235.24.32"": 9,
    ""87.251.75.64"": 3,
    ""45.227.254.8"": 6,
    ""85.209.11.69"": 3,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""213.226.123.100"": 15,
    ""31.171.251.109"": 6,
    ""194.165.16.11"": 6,
    ""205.210.31.106"": 9
  },
  ""asn"": {
    ""AS4134"": 15,
    ""AS208046"": 36,
    ""AS135377"": 6,
    ""AS208091"": 12,
    ""AS48721"": 21,
    ""AS209605"": 9,
    ""AS396982"": 36,
    ""AS213230"": 6,
    ""AS398324"": 3,
    ""AS197414"": 6,
    ""AS14061"": 18,
    ""AS14618"": 540,
    ""AS210950"": 15,
    ""AS140227"": 9,
    ""AS12876"": 6,
    ""AS132203"": 3,
    ""AS212531"": 6,
    ""AS396356"": 3,
    ""AS59425"": 12,
    ""AS267784"": 12,
    ""AS198953"": 6,
    ""AS208312"": 6,
    ""AS24547"": 3,
    ""AS63737"": 3,
    ""AS57523"": 27,
    ""AS49943"": 15,
    ""AS50837"": 6
  },
  ""isp"": {
    ""Chinanet"": 15,
    ""ColocationX Ltd."": 36,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""Xhost Internet Solutions LP"": 18,
    ""Flyservers S.A."": 33,
    ""UAB Host Baltic"": 9,
    ""Google LLC"": 36,
    ""Hetzner Online GmbH"": 6,
    ""Censys, Inc."": 3,
    ""DigitalOcean, LLC"": 18,
    ""Amazon Technologies Inc."": 540,
    ""TOV E-RISHENNYA"": 15,
    ""Hong Kong Communications International Co., Limited"": 9,
    ""Online S.A.S."": 6,
    ""Aceville Pte.ltd"": 3,
    ""UAB \""Interneto vizija\"""": 6,
    ""Latitude.sh"": 3,
    ""Horizon LLC"": 12,
    ""Proton66 OOO"": 6,
    ""Red Byte LLC"": 6,
    ""China Mobile communications corporation"": 3,
    ""Vietserver Services Technology Company Limited"": 3,
    ""Chang Way Technologies Co. Limited"": 27,
    ""IT Resheniya LLC"": 15,
    ""CloudSigma"": 6
  },
  ""org"": {
    ""Chinanet HE"": 6,
    ""x33 Networks IBC"": 18,
    ""ColocationX Ltd"": 18,
    ""Ucloud Information Technology"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Flyservers S.A"": 21,
    ""Unknown"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""HETZNER-DC"": 6,
    ""Censys, Inc"": 3,
    ""Xhostis"": 6,
    ""Digital Ocean"": 6,
    ""AWS EC2 (us-east-1)"": 540,
    ""TOV VAIZ PARTNER"": 15,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 9,
    ""ONLINE"": 6,
    ""RACKRAY"": 6,
    ""Panq B.V"": 3,
    ""Horizon LLC"": 12,
    ""UAB Host Baltic"": 12,
    ""Proton66 LLC"": 6,
    ""Chinanet JS"": 9,
    ""Red Byte LLC"": 6,
    ""China Mobile"": 3,
    ""YUH Application Software Company Limited"": 3,
    ""DigitalOcean, LLC"": 12,
    ""Chang Way Technologies Co. Limited"": 27,
    ""IT Resheniya LLC"": 15
  },
  ""regionName"": {
    ""Hebei"": 9,
    ""English River"": 18,
    ""North Holland"": 24,
    ""Central and Western District"": 6,
    ""England"": 12,
    ""Kaunas"": 36,
    ""California"": 36,
    ""Virginia"": 546,
    ""Michigan"": 3,
    ""New Jersey"": 9,
    ""Kyiv City"": 15,
    ""Eastern"": 9,
    ""\u00cele-de-France"": 6,
    ""Moscow"": 51,
    ""Vilnius"": 12,
    ""Jiangsu"": 9,
    ""Dubai"": 3,
    ""Hanoi"": 3,
    ""Central Singapore"": 12,
    ""St.-Petersburg"": 15,
    ""Zurich"": 6
  },
  ""country"": {
    ""China"": 18,
    ""Seychelles"": 18,
    ""Netherlands"": 24,
    ""Hong Kong"": 15,
    ""United Kingdom"": 12,
    ""Lithuania"": 48,
    ""United States"": 594,
    ""Ukraine"": 15,
    ""France"": 6,
    ""Russia"": 66,
    ""United Arab Emirates"": 3,
    ""Vietnam"": 3,
    ""Singapore"": 12,
    ""Switzerland"": 6
  },
  ""account"": {
    ""(empty)"": 18,
    ""Domain"": 81,
    ""nmap"": 3,
    ""Administr"": 69,
    ""Test"": 30,
    ""IKGBBtMZv"": 3,
    ""WrbdoG"": 3,
    ""juRRFW"": 3,
    ""hello"": 600,
    ""gxSSthSoD"": 3,
    ""DWXBoW"": 3,
    ""bNXkGf"": 3,
    ""Administrator"": 3,
    ""CZWwlOhjT"": 3,
    ""RPKaXR"": 3,
    ""kZKDKQ"": 3,
    ""FSovHLvoe"": 3,
    ""GnADof"": 3,
    ""Ugslrf"": 3
  },
  ""keyboard"": {
    ""Unknown"": 840
  },
  ""client_build"": {
    ""Unknown"": 840
  },
  ""client_name"": {
    ""Unknown"": 840
  },
  ""ip_type"": {
    ""Unknown"": 219,
    ""hosting"": 600,
    ""hosting & proxy"": 15,
    ""proxy"": 3,
    ""mobile"": 3
  }
}"
miJeF6rP,2023-10-02_stats.json,rdp_snitch,JSON,Monday 2nd of October 2023 07:16:15 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 4,
    ""193.142.147.9"": 12,
    ""193.142.146.17"": 12,
    ""152.32.192.36"": 2,
    ""87.251.75.145"": 4,
    ""194.165.16.10"": 8,
    ""141.98.11.128"": 6,
    ""205.210.31.82"": 6,
    ""5.161.224.71"": 4,
    ""167.94.138.51"": 2,
    ""194.165.16.111"": 2,
    ""185.170.144.3"": 4,
    ""87.251.75.120"": 2,
    ""138.197.109.5"": 4,
    ""54.144.241.209"": 360,
    ""45.143.201.62"": 10,
    ""38.181.35.81"": 6,
    ""212.129.42.204"": 2,
    ""43.132.213.11"": 2,
    ""205.210.31.248"": 6,
    ""163.172.201.146"": 2,
    ""195.181.244.184"": 4,
    ""136.144.35.81"": 2,
    ""62.204.41.137"": 8,
    ""45.227.254.26"": 4,
    ""45.140.17.16"": 4,
    ""58.218.204.183"": 6,
    ""83.97.73.77"": 4,
    ""165.154.12.38"": 2,
    ""111.61.253.55"": 2,
    ""103.171.0.205"": 2,
    ""146.190.83.254"": 8,
    ""198.235.24.32"": 6,
    ""87.251.75.64"": 2,
    ""45.227.254.8"": 4,
    ""85.209.11.69"": 2,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""213.226.123.100"": 10,
    ""31.171.251.109"": 4,
    ""194.165.16.11"": 4,
    ""205.210.31.106"": 6
  },
  ""asn"": {
    ""AS4134"": 10,
    ""AS208046"": 24,
    ""AS135377"": 4,
    ""AS208091"": 8,
    ""AS48721"": 14,
    ""AS209605"": 6,
    ""AS396982"": 24,
    ""AS213230"": 4,
    ""AS398324"": 2,
    ""AS197414"": 4,
    ""AS14061"": 12,
    ""AS14618"": 360,
    ""AS210950"": 10,
    ""AS140227"": 6,
    ""AS12876"": 4,
    ""AS132203"": 2,
    ""AS212531"": 4,
    ""AS396356"": 2,
    ""AS59425"": 8,
    ""AS267784"": 8,
    ""AS198953"": 4,
    ""AS208312"": 4,
    ""AS24547"": 2,
    ""AS63737"": 2,
    ""AS57523"": 18,
    ""AS49943"": 10,
    ""AS50837"": 4
  },
  ""isp"": {
    ""Chinanet"": 10,
    ""ColocationX Ltd."": 24,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""Xhost Internet Solutions LP"": 12,
    ""Flyservers S.A."": 22,
    ""UAB Host Baltic"": 6,
    ""Google LLC"": 24,
    ""Hetzner Online GmbH"": 4,
    ""Censys, Inc."": 2,
    ""DigitalOcean, LLC"": 12,
    ""Amazon Technologies Inc."": 360,
    ""TOV E-RISHENNYA"": 10,
    ""Hong Kong Communications International Co., Limited"": 6,
    ""Online S.A.S."": 4,
    ""Aceville Pte.ltd"": 2,
    ""UAB \""Interneto vizija\"""": 4,
    ""Latitude.sh"": 2,
    ""Horizon LLC"": 8,
    ""Proton66 OOO"": 4,
    ""Red Byte LLC"": 4,
    ""China Mobile communications corporation"": 2,
    ""Vietserver Services Technology Company Limited"": 2,
    ""Chang Way Technologies Co. Limited"": 18,
    ""IT Resheniya LLC"": 10,
    ""CloudSigma"": 4
  },
  ""org"": {
    ""Chinanet HE"": 4,
    ""x33 Networks IBC"": 12,
    ""ColocationX Ltd"": 12,
    ""Ucloud Information Technology"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Flyservers S.A"": 14,
    ""Unknown"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""HETZNER-DC"": 4,
    ""Censys, Inc"": 2,
    ""Xhostis"": 4,
    ""Digital Ocean"": 4,
    ""AWS EC2 (us-east-1)"": 360,
    ""TOV VAIZ PARTNER"": 10,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 6,
    ""ONLINE"": 4,
    ""RACKRAY"": 4,
    ""Panq B.V"": 2,
    ""Horizon LLC"": 8,
    ""UAB Host Baltic"": 8,
    ""Proton66 LLC"": 4,
    ""Chinanet JS"": 6,
    ""Red Byte LLC"": 4,
    ""China Mobile"": 2,
    ""YUH Application Software Company Limited"": 2,
    ""DigitalOcean, LLC"": 8,
    ""Chang Way Technologies Co. Limited"": 18,
    ""IT Resheniya LLC"": 10
  },
  ""regionName"": {
    ""Hebei"": 6,
    ""English River"": 12,
    ""North Holland"": 16,
    ""Central and Western District"": 4,
    ""England"": 8,
    ""Kaunas"": 24,
    ""California"": 24,
    ""Virginia"": 364,
    ""Michigan"": 2,
    ""New Jersey"": 6,
    ""Kyiv City"": 10,
    ""Eastern"": 6,
    ""\u00cele-de-France"": 4,
    ""Moscow"": 34,
    ""Vilnius"": 8,
    ""Jiangsu"": 6,
    ""Dubai"": 2,
    ""Hanoi"": 2,
    ""Central Singapore"": 8,
    ""St.-Petersburg"": 10,
    ""Zurich"": 4
  },
  ""country"": {
    ""China"": 12,
    ""Seychelles"": 12,
    ""Netherlands"": 16,
    ""Hong Kong"": 10,
    ""United Kingdom"": 8,
    ""Lithuania"": 32,
    ""United States"": 396,
    ""Ukraine"": 10,
    ""France"": 4,
    ""Russia"": 44,
    ""United Arab Emirates"": 2,
    ""Vietnam"": 2,
    ""Singapore"": 8,
    ""Switzerland"": 4
  },
  ""account"": {
    ""(empty)"": 12,
    ""Domain"": 54,
    ""nmap"": 2,
    ""Administr"": 46,
    ""Test"": 20,
    ""IKGBBtMZv"": 2,
    ""WrbdoG"": 2,
    ""juRRFW"": 2,
    ""hello"": 400,
    ""gxSSthSoD"": 2,
    ""DWXBoW"": 2,
    ""bNXkGf"": 2,
    ""Administrator"": 2,
    ""CZWwlOhjT"": 2,
    ""RPKaXR"": 2,
    ""kZKDKQ"": 2,
    ""FSovHLvoe"": 2,
    ""GnADof"": 2,
    ""Ugslrf"": 2
  },
  ""keyboard"": {
    ""Unknown"": 560
  },
  ""client_build"": {
    ""Unknown"": 560
  },
  ""client_name"": {
    ""Unknown"": 560
  },
  ""ip_type"": {
    ""Unknown"": 146,
    ""hosting"": 400,
    ""hosting & proxy"": 10,
    ""proxy"": 2,
    ""mobile"": 2
  }
}"
0BX07gCB,2023-10-02_stats.json,rdp_snitch,JSON,Monday 2nd of October 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 2,
    ""193.142.147.9"": 6,
    ""193.142.146.17"": 6,
    ""152.32.192.36"": 1,
    ""87.251.75.145"": 2,
    ""194.165.16.10"": 4,
    ""141.98.11.128"": 3,
    ""205.210.31.82"": 3,
    ""5.161.224.71"": 2,
    ""167.94.138.51"": 1,
    ""194.165.16.111"": 1,
    ""185.170.144.3"": 2,
    ""87.251.75.120"": 1,
    ""138.197.109.5"": 2,
    ""54.144.241.209"": 180,
    ""45.143.201.62"": 5,
    ""38.181.35.81"": 3,
    ""212.129.42.204"": 1,
    ""43.132.213.11"": 1,
    ""205.210.31.248"": 3,
    ""163.172.201.146"": 1,
    ""195.181.244.184"": 2,
    ""136.144.35.81"": 1,
    ""62.204.41.137"": 4,
    ""45.227.254.26"": 2,
    ""45.140.17.16"": 2,
    ""58.218.204.183"": 3,
    ""83.97.73.77"": 2,
    ""165.154.12.38"": 1,
    ""111.61.253.55"": 1,
    ""103.171.0.205"": 1,
    ""146.190.83.254"": 4,
    ""198.235.24.32"": 3,
    ""87.251.75.64"": 1,
    ""45.227.254.8"": 2,
    ""85.209.11.69"": 1,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""213.226.123.100"": 5,
    ""31.171.251.109"": 2,
    ""194.165.16.11"": 2,
    ""205.210.31.106"": 3
  },
  ""asn"": {
    ""AS4134"": 5,
    ""AS208046"": 12,
    ""AS135377"": 2,
    ""AS208091"": 4,
    ""AS48721"": 7,
    ""AS209605"": 3,
    ""AS396982"": 12,
    ""AS213230"": 2,
    ""AS398324"": 1,
    ""AS197414"": 2,
    ""AS14061"": 6,
    ""AS14618"": 180,
    ""AS210950"": 5,
    ""AS140227"": 3,
    ""AS12876"": 2,
    ""AS132203"": 1,
    ""AS212531"": 2,
    ""AS396356"": 1,
    ""AS59425"": 4,
    ""AS267784"": 4,
    ""AS198953"": 2,
    ""AS208312"": 2,
    ""AS24547"": 1,
    ""AS63737"": 1,
    ""AS57523"": 9,
    ""AS49943"": 5,
    ""AS50837"": 2
  },
  ""isp"": {
    ""Chinanet"": 5,
    ""ColocationX Ltd."": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Xhost Internet Solutions LP"": 6,
    ""Flyservers S.A."": 11,
    ""UAB Host Baltic"": 3,
    ""Google LLC"": 12,
    ""Hetzner Online GmbH"": 2,
    ""Censys, Inc."": 1,
    ""DigitalOcean, LLC"": 6,
    ""Amazon Technologies Inc."": 180,
    ""TOV E-RISHENNYA"": 5,
    ""Hong Kong Communications International Co., Limited"": 3,
    ""Online S.A.S."": 2,
    ""Aceville Pte.ltd"": 1,
    ""UAB \""Interneto vizija\"""": 2,
    ""Latitude.sh"": 1,
    ""Horizon LLC"": 4,
    ""Proton66 OOO"": 2,
    ""Red Byte LLC"": 2,
    ""China Mobile communications corporation"": 1,
    ""Vietserver Services Technology Company Limited"": 1,
    ""Chang Way Technologies Co. Limited"": 9,
    ""IT Resheniya LLC"": 5,
    ""CloudSigma"": 2
  },
  ""org"": {
    ""Chinanet HE"": 2,
    ""x33 Networks IBC"": 6,
    ""ColocationX Ltd"": 6,
    ""Ucloud Information Technology"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Flyservers S.A"": 7,
    ""Unknown"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""HETZNER-DC"": 2,
    ""Censys, Inc"": 1,
    ""Xhostis"": 2,
    ""Digital Ocean"": 2,
    ""AWS EC2 (us-east-1)"": 180,
    ""TOV VAIZ PARTNER"": 5,
    ""HONG KONG COMMUNICATIONS INTERNATIONAL CO., LIMITED"": 3,
    ""ONLINE"": 2,
    ""RACKRAY"": 2,
    ""Panq B.V"": 1,
    ""Horizon LLC"": 4,
    ""UAB Host Baltic"": 4,
    ""Proton66 LLC"": 2,
    ""Chinanet JS"": 3,
    ""Red Byte LLC"": 2,
    ""China Mobile"": 1,
    ""YUH Application Software Company Limited"": 1,
    ""DigitalOcean, LLC"": 4,
    ""Chang Way Technologies Co. Limited"": 9,
    ""IT Resheniya LLC"": 5
  },
  ""regionName"": {
    ""Hebei"": 3,
    ""English River"": 6,
    ""North Holland"": 8,
    ""Central and Western District"": 2,
    ""England"": 4,
    ""Kaunas"": 12,
    ""California"": 12,
    ""Virginia"": 182,
    ""Michigan"": 1,
    ""New Jersey"": 3,
    ""Kyiv City"": 5,
    ""Eastern"": 3,
    ""\u00cele-de-France"": 2,
    ""Moscow"": 17,
    ""Vilnius"": 4,
    ""Jiangsu"": 3,
    ""Dubai"": 1,
    ""Hanoi"": 1,
    ""Central Singapore"": 4,
    ""St.-Petersburg"": 5,
    ""Zurich"": 2
  },
  ""country"": {
    ""China"": 6,
    ""Seychelles"": 6,
    ""Netherlands"": 8,
    ""Hong Kong"": 5,
    ""United Kingdom"": 4,
    ""Lithuania"": 16,
    ""United States"": 198,
    ""Ukraine"": 5,
    ""France"": 2,
    ""Russia"": 22,
    ""United Arab Emirates"": 1,
    ""Vietnam"": 1,
    ""Singapore"": 4,
    ""Switzerland"": 2
  },
  ""account"": {
    ""(empty)"": 6,
    ""Domain"": 27,
    ""nmap"": 1,
    ""Administr"": 23,
    ""Test"": 10,
    ""IKGBBtMZv"": 1,
    ""WrbdoG"": 1,
    ""juRRFW"": 1,
    ""hello"": 200,
    ""gxSSthSoD"": 1,
    ""DWXBoW"": 1,
    ""bNXkGf"": 1,
    ""Administrator"": 1,
    ""CZWwlOhjT"": 1,
    ""RPKaXR"": 1,
    ""kZKDKQ"": 1,
    ""FSovHLvoe"": 1,
    ""GnADof"": 1,
    ""Ugslrf"": 1
  },
  ""keyboard"": {
    ""Unknown"": 280
  },
  ""client_build"": {
    ""Unknown"": 280
  },
  ""client_name"": {
    ""Unknown"": 280
  },
  ""ip_type"": {
    ""Unknown"": 73,
    ""hosting"": 200,
    ""hosting & proxy"": 5,
    ""proxy"": 1,
    ""mobile"": 1
  }
}"
gyXzAgJJ,Jojo's Steel Ball Run,anaodia7,CSS,Monday 2nd of October 2023 06:44:01 PM CDT,"/*Usar por cima do Yotsuba Blue*/

html{
    background-image:url(""https://i.ibb.co/RHDnCxL/jjbg.png"");
    background-repeat: inherit;
    background-size: cover;
    background-attachment: fixed;
}

body{
    background: rgba(254, 168, 24, 0.5) !important;
    color:#000;
    font-family:arial,helvetica,sans-serif;
    font-size:10pt;
}

a{
  color: #186efe;
text-shadow: black 1px 1px 1px;
}

.options_tab_icon.active, .options_tab_icon:hover{
  color: gold;
}

a:hover{
  color: green;
text-shadow: black 1px 1px 1px;
}

form table tr th, #options_div, #alert_div, div.pages, .theme-catalog div.grid-size-small{
  color: gold;
  background: #186efe;
  border: dotted blue 2px;
}

.boardlist{
  background: #186efe !important;
  color: gold !important;
  border-bottom: dotted blue 2px !important;
}

.boardlist a{
  color: #A2C5FE !important;
}

.boardlist a:hover{
  color: green !important;
}

div.post.reply{
  border: dotted blue 2px;
  background: #74A8FE;
}

.intro span.name{
  color: gold !important;
text-shadow: black 1px 1px 1px;
}
 
div.post.reply.highlighted{
    background: magenta;
    border: #FFF 2px dashed !important;
  color: #FFF;
}

div.post.reply:hover{
    background: #392c20;
    border: green 2px dashed !important;
  color: green;
}

/*banner shit*/
img.banner, img.board_image {
    display: block;
 
/*added linkcde*/
    content:url('https://i.ibb.co/HKsBNd5/1500jojo.png');
    border: 2px dashed gold;
  margin-top: 40px !important;
}
 
 
a.quick-reply-btn{
  visibility: hidden !important;
visibility: collapse !important;
}
 
textarea#body{
   width: 295px;
   height: 92px;
}
 
.dropzone-wrap{
  width: 295px !important;
}

h1, h2, h3, h4, div.ban h2{
  color: gold !important;
}"
