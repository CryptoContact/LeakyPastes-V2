id,title,username,language,date,content
ebyGxit0,Finesweet Cookie Variable,prabapro,JavaScript,Thursday 14th of September 2023 12:53:10 PM CDT,"function() {
  var urlEncodedJson = {{cookie - fs-cc}};

  // Decode the URL-encoded JSON twice to get valid JSON
  var decodedJson = JSON.parse(decodeURIComponent(decodeURIComponent(urlEncodedJson)));

  // Helper function to serialize an object with pipes and commas
  function serializeObject(obj) {
    var serialized = [];
    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        serialized.push(key + ':' + (typeof obj[key] === 'object' ? serializeObject(obj[key]) : obj[key]));
      }
    }
    return serialized.join('|');
  }

  // Serialize the object with properties separated by pipes and commas
  var serializedString = Object.keys(decodedJson).map(function(key) {
    return key + ':' + (key === 'consents' ? serializeObject(decodedJson[key]) : decodedJson[key]);
  }).join('|');

  // Return the serialized string
  return serializedString;
}"
qH7nkdj0,SOFIA VIAC VYSVETLENE CAZ AI,Michal_Jankura,Python,Thursday 14th of September 2023 12:43:29 PM CDT,"import tkinter
canvas = tkinter.Canvas(width=500, height=300)
canvas.pack()

# float pre desatinne cisla
moja_vaha = float(input(""Zadajte vašu hmotnosť: ""))
moja_vyska = float(input(""Zadajte vašu výšku (v cm): ""))

# Definícia funkcie mierka, ktorá nakreslí farebnú mierku na canvas.
def mierka():
    canvas.create_rectangle(0, 100, 240, 200, fill=""yellow"", outline="""")
    canvas.create_rectangle(240, 100, 330, 200, fill=""green"", outline="""")
    canvas.create_rectangle(330, 100, 390, 200, fill=""orange"", outline="""")
    canvas.create_rectangle(390, 100, 500, 200, fill=""red"", outline="""")

# Definícia funkcie vypocitaj_bmi, ktorá vypočíta BMI a zobrazí výsledok na canvas.
def vypocitaj_bmi(vyska, vaha):
    m = vyska / 100
    bmi = round(vaha / (m ** 2))

    # Rozličné podmienky na zobrazenie informácií o BMI a zafarbenie mierky podľa hodnoty BMI.
    if 0 <= bmi < 17.5:
        canvas.create_text(250, 230, text=""podvýživa"", font=(""Arial"", ""15"", ""bold""), fill=""yellow"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"", ""15"", ""bold""), fill=""yellow"")
        a = (bmi * 500) / 40 + 17.5
        canvas.create_rectangle(a, 90, a + 5, 210, fill=""black"")

    if 17.5 <= bmi <= 25:
        canvas.create_text(250, 230, text=""ideálna a zdravá váha"", font=(""Arial"", ""15"", ""bold""), fill=""green"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"", ""15"", ""bold""), fill=""green"")
        a = (bmi * 500) / 40 + 7.5
        canvas.create_rectangle(a, 90, a + 5, 210, fill=""black"")

    if 25 < bmi < 30:
        canvas.create_text(250, 230, text=""mierna nadváha"", font=(""Arial"", ""15"", ""bold""), fill=""orange"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"", ""15"", ""bold""), fill=""orange"")
        a = (bmi * 500) / 40 + 5
        canvas.create_rectangle(a, 90, a + 5, 210, fill=""black"")

    if 30 <= bmi < 40:
        canvas.create_text(250, 230, text=""obezita"", font=(""Arial"", ""15"", ""bold""), fill=""red"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"", ""15"", ""bold""), fill=""red"")
        a = (bmi * 500) / 40 + 10
        canvas.create_rectangle(a, 90, a + 5, 210, fill=""black"")

    if bmi >= 40:
        canvas.create_text(250, 230, text=""ťažká obezita"", font=(""Arial"", ""15"", ""bold""), fill=""red"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"", ""15"", ""bold""), fill=""red"")
    canvas.create_text(250, 50, text=f""výška {round(vyska)} cm, váha {vaha} kg"", font=(""Arial"", ""15""))

# Zavolanie funkcie mierka na nakreslenie mierky.
mierka()

# Zavolanie funkcie vypocitaj_bmi na výpočet a zobrazenie BMI.
vypocitaj_bmi(moja_vyska, moja_vaha)

# Spustenie tkinter event loop.
canvas.mainloop()
"
iS2eTjhG,OC Item Sorter,0x13f,Lua,Thursday 14th of September 2023 12:40:42 PM CDT,"local transposer_addr
for k,v in component.list(""transposer"") do
	transposer_addr = k
	break
end

if transposer_addr == nil then
	print(""No transposer found!"")
else
	print(""Transposer: ""..transposer_addr)
end

local transposer = component.proxy(transposer_addr)

"
5W2EK91a,BMI PRE SOFI,Michal_Jankura,Python,Thursday 14th of September 2023 12:32:04 PM CDT,"import tkinter
canvas = tkinter.Canvas(width = 500, height = 300)
canvas.pack()

""""""VSTUP KDE ZADAME VAHU A VYSKU""""""

#float pre desatinne cisla
moja_vaha = float(input(""Zadajte vašu hmotnosť: ""))
moja_vyska = float(input(""Zadajte vašu výšku (v cm): ""))

""""""NAKRESLIME MIERKU""""""
def mierka():
    canvas.create_rectangle(0, 100, 240, 200, fill = ""yellow"", outline="""")
    canvas.create_rectangle(240, 100, 330, 200, fill = ""green"", outline="""")
    canvas.create_rectangle(330, 100, 390, 200, fill = ""orange"", outline="""")
    canvas.create_rectangle(390, 100, 500, 200, fill = ""red"", outline="""")

""""""FUNKCIA S PARAMETRAMI VYSKA A VAHA""""""
def vypocitaj_bmi(vyska,vaha):
    """"""PRIRADIME VSTUPY DO PREMENNEJ m ako HMOTNOST
    PRE VYPOCET BMI SME POUZILI FUNKCIU ROUND KTORA ZAOKRUHLI VYSLEDOK""""""
    m = vyska/100
    bmi = round(vaha/(m**2))

    """"""PODMIENKY""""""
    if 0 <= bmi < 17.5:
        canvas.create_text(250, 230, text=""podvýživa"", font=(""Arial"",""15"", ""bold""), fill=""yellow"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"",""15"", ""bold""), fill=""yellow"")
        a = (bmi*500)/40+17.5
        canvas.create_rectangle(a, 90, a+5, 210, fill=""black"")

    if 17.5 <= bmi <= 25:
        canvas.create_text(250, 230, text=""ideálna a zdravá váha"", font=(""Arial"",""15"", ""bold""), fill=""green"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"",""15"", ""bold""), fill=""green"")
        a = (bmi*500)/40+7.5
        canvas.create_rectangle(a, 90, a+5, 210, fill=""black"")

    if 25 < bmi < 30:
        canvas.create_text(250, 230, text=""mierna nadváha"", font=(""Arial"",""15"", ""bold""), fill=""orange"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"",""15"", ""bold""), fill=""orange"")
        a = (bmi*500)/40+5
        canvas.create_rectangle(a, 90, a+5, 210, fill=""black"")

    if 30 <= bmi < 40:
        canvas.create_text(250, 230, text=""obezita"", font=(""Arial"",""15"", ""bold""), fill=""red"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"",""15"", ""bold""), fill=""red"")
        a = (bmi*500)/40+10
        canvas.create_rectangle(a, 90, a+5, 210, fill=""black"")

    if bmi >= 40:
        canvas.create_text(250, 230, text=""ťažká obezita"", font=(""Arial"",""15"", ""bold""), fill=""red"")
        canvas.create_text(250, 250, text=f""BMI = {bmi}"", font=(""Arial"",""15"", ""bold""), fill=""red"")
    canvas.create_text(250, 50, text=f""výška {round(vyska)} cm, váha {vaha} kg"", font=(""Arial"",""15""))

mierka()
vypocitaj_bmi(moja_vyska,moja_vaha)


canvas.mainloop()
"
ptSRRZN3,10. Diamond,Spocoman,C++,Thursday 14th of September 2023 12:03:22 PM CDT,"#include <iostream>

using namespace std;

string repeat(string s, int n) {
    string result;

    for (int i = 0; i < n; i++)
        result += s;

    return result;
}

int main() {
    int n;
    cin >> n;

    string inDashes, outDashes, border;

    for (int i = 0; i < n / 2 + (n % 2); i++) {
        outDashes = repeat(""-"", (n - 1) / 2 - i);
        border = ""*"";

        if (i == 0) {
            if (n % 2 == 0) {
                border = ""**"";
            }
            cout << outDashes + border + outDashes << endl;
        }
        else {
            string inDashes = repeat(""-"", i * 2);
            if (n % 2 == 1) {
                inDashes = repeat(""-"", i * 2 - 1);
            }
            cout << outDashes + border + inDashes + border + outDashes << endl;
        }
    }

    for (int i = n / 2 - (1 + (n - 1) % 2); i >= 0; i--) {
        outDashes = repeat(""-"", (n - 1) / 2 - i);
        border = ""*"";

        if (i == 0) {
            if (n % 2 == 0) {
                border = ""**"";
            }
            cout << outDashes + border + outDashes << endl;
        }
        else {
            inDashes = repeat(""-"", i * 2);
            if (n % 2 == 1) {
                inDashes = repeat(""-"", i * 2 - 1);
            }
            cout << outDashes + border + inDashes + border + outDashes << endl;
        }
    }

    return 0;
}"
EyGS3WJ3,lf kb 3.22,kiso,C,Thursday 14th of September 2023 11:59:56 AM CDT,
Sr4aDemY,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Thursday 14th of September 2023 11:55:06 AM CDT,"Pasted at: 14/09/2023 17:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
Q1rUDyxC,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Thursday 14th of September 2023 11:55:04 AM CDT,"Pasted at: 14/09/2023 17:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
eMRffGkU,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 14th of September 2023 11:55:03 AM CDT,"Pasted at: 14/09/2023 17:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
rEVhw5Ai,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Thursday 14th of September 2023 11:55:01 AM CDT,"Pasted at: 14/09/2023 17:55
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
hX5g7mVE,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Thursday 14th of September 2023 11:55:00 AM CDT,"Pasted at: 14/09/2023 17:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
5RBFU5TT,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Thursday 14th of September 2023 11:54:58 AM CDT,"Pasted at: 14/09/2023 17:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
MF1sPWmz,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 14th of September 2023 11:54:55 AM CDT,"Pasted at: 14/09/2023 17:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
4zavZgMY,Hashed Email With Exclude,wheresTheAnyKey,C,Thursday 14th of September 2023 11:54:54 AM CDT,"Pasted at: 14/09/2023 17:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
MY58Xb3k,Hashed Email - Full,wheresTheAnyKey,C,Thursday 14th of September 2023 11:54:52 AM CDT,"Pasted at: 14/09/2023 17:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
1Vw8y6RY,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 14th of September 2023 11:54:51 AM CDT,"Pasted at: 14/09/2023 17:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
JjXDc1cm,邀您一起看：云口令,xiaomianao666,JavaScript,Thursday 14th of September 2023 11:37:09 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥云口令@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5LqR5Y+j5LukXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8veGlhb21pYW5hby5sYW56b3VtLmNvbS9pYmVHSTE4ZW1hNGZcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLkupHlj6Pku6QifQ==
jxX6K8qT,09. House,Spocoman,C++,Thursday 14th of September 2023 11:30:16 AM CDT,"#include <iostream>

using namespace std;

int main() {
    int n;
    cin >> n;

    for (int i = 1; i <= (n + 1) / 2; i++) {
        for (int j = 0; j < (n + 1) / 2 - i; j++) {
            cout << ""-"";
        }
        if (n % 2 == 1) {
            cout << ""*"";
        }
        else {
            cout << ""**"";
        }

        for (int k = 1; k < i; k++){

            cout << ""**"";
        }
        for (int j = 0; j < (n + 1) / 2 - i; j++) {
            cout << ""-"";
        }
        cout << endl;
    }

    for (int i = 0; i < n / 2; i++) {
        cout << ""|"";
        for (int x = 0; x < n - 2; x++) {
            cout << ""*"";
        }
        cout << ""|"" << endl;
    }

    return 0;
}"
DK8fh0gN,08. Sunglasses,Spocoman,C++,Thursday 14th of September 2023 11:29:13 AM CDT,"Решение с тернарен оператор:

#include <iostream>

using namespace std;

int main() {
    int n;
    cin >> n;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n * 2; j++) {
            cout << ((i != 0 && i != n - 1 && j != 0 && j != n * 2 - 1) ? '/' : '*');
        }

        for (int k = 0; k < n; k++) {
            cout << (((i == n / 2 && n % 2 == 1) || (i + 1 == n / 2 && n % 2 == 0)) ? '|' : ' ');
        }

        for (int j = 0; j < n * 2; j++) {
                cout << ((i != 0 && i != n - 1 && j != 0 && j != n * 2 - 1) ? '/' : '*');   
        }
        cout << endl;
    }

    return 0;
}"
iCCKE4Te,Untitled,remico,JavaScript,Thursday 14th of September 2023 11:10:30 AM CDT,"function pipesInPool (input) {
let v = Number (input[0]);//1000    100
let p1 = Number (input[1]);//100    100
let p2 = Number (input[2]);//120    100
let h = Number (input[3]);//3       2.5
let p1h = p1 * h;//300
let p2h = p2 * h;//360
let allPH = p1h + p2h;//660 l       500 l


 if (allPH < v){
    let procentFull =  (allPH /10).toFixed(2);//66
    
    
    let p1Procent = ((p1h / allPH) *100).toFixed(2);//
    let p2Procent = ((p2h / allPH) * 100).toFixed(2); //
    
console.log(`The pool is ${procentFull}% full. Pipe 1: ${p1Procent}%. Pipe 2: ${p2Procent}%.`);
}else {
    let overflows = Math.abs(allPH - v);
console.log(`For ${h.toFixed(2)} hours the pool overflows with ${overflows.toFixed(2)} liters.`);
 }
}
//pipesInPool (['1000','100','120','3']);"
bMqpkt0r,Untitled,Rofyda_Elghadban1,C++,Thursday 14th of September 2023 11:00:31 AM CDT," #include <bits/stdc++.h> 
 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/
 
 using namespace std;
 
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 int partial[1000000]{};
 void solve(){
  int n,m;
  cin>>n>>m;
  vector<int>v(m+2),ans;
  while(n--){
    int l,r;
    cin>>l>>r;
    v[l]+=1;
    v[r+1]-=1;
  }
  for(int i=1;i<=m;i++){
    v[i]+=v[i-1];
  }
  for(int i=1;i<=m;i++){
    if(v[i]==0){
      ans.push_back(i);
    }
  }
  if(ans.size()!=0){
    cout<<ans.size()<<""\n"";
    cout(ans);
  }else if(ans.size()==0){
    cout<<ans.size()<<""\n""<<"" "";
  }



  
 }
 
 
 int main(){
 Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 solve();
 

 
 
 return 0;
}
 
 "
uBDsGq8z,Untitled,Rofyda_Elghadban1,C++,Thursday 14th of September 2023 10:59:57 AM CDT," #include <bits/stdc++.h> 
 
 #define ll long long
 #define ull unsigned long long
 #define pi 3.141592654
 #define NUM 1e18
 #define Mod  1'000'000'007
 #define fixed(n) fixed<<setprecision(n)
 #define cin(v) for(auto &i:v) cin >> i ;
 #define cout(v) for(auto &i:v) cout << i  <<"" "";
 #define vowel(x) (x=='e'||x=='a'||x=='i'||x=='o'||x=='u')
 #define small(x) (x>=97&&x<=122)
 #define capital(x) (x>=65&&x<=90)
 #define Tolower(s) transform(s.begin(),s.end(),s.begin(),::tolower);
 #define Toupper(s) transform(s.begin(),s.end(),s.begin(),::toupper); 
 #define all(v) ((v).begin()), ((v).end())
 #define allr(v) ((v).rbegin()), ((v).rend())
 #define updmax(a,b) a=max(a,b)
 #define updmin(a,b) a=min(a,b)
 #define ceil(a,b) ((a/b)+(a%b?1:0))
 /* asc -> 1 2 3 ,des -> 3 2 1 */
 
 /***********************************************************************************/
 
 using namespace std;
 
 void Rofyda_Elghadban(){
  #ifndef ONLINE_JUDGE   
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
   #endif
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 }

 int partial[1000000]{};
 void solve(){
  int n,m;
  cin>>n>>m;
  vector<int>v(m+1),ans;
  while(n--){
    int l,r;
    cin>>l>>r;
    partial[l]+=1;
    partial[r+1]-=1;
  }
  for(int i=1;i<=m;i++){
    partial[i]+=partial[i-1];
  }
  for(int i=1;i<=m;i++){
    if(partial[i]==0){
      ans.push_back(i);
    }
  }
  if(ans.size()!=0){
    cout<<ans.size()<<""\n"";
    cout(ans);
  }else if(ans.size()==0){
    cout<<ans.size()<<""\n""<<"" "";
  }



  
 }
 
 
 int main(){
 Rofyda_Elghadban();
 //freopen(""input.txt"",""r"",stdin);
 //freopen(""output.txt"",""r"",stdout);
 solve();
 

 
 
 return 0;
}
 
 "
Uw8kCjY6,Power Slap Simulator,LuaXe,Lua,Thursday 14th of September 2023 10:46:44 AM CDT,"function C() spawn(function () while getgenv().C do
local args = {[1] = ""ClickStat"",[2] = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}game:GetService(""ReplicatedStorage"").Remotes.Client:InvokeServer(unpack(args))
local args = {[1] = ""ClickStat"",[2] = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}game:GetService(""ReplicatedStorage"").Remotes.Client:InvokeServer(unpack(args))
local args = {[1] = ""ClickStat"",[2] = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}game:GetService(""ReplicatedStorage"").Remotes.Client:InvokeServer(unpack(args))
local args = {[1] = ""ClickStat"",[2] = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}game:GetService(""ReplicatedStorage"").Remotes.Client:InvokeServer(unpack(args))
local args = {[1] = ""ClickStat"",[2] = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}game:GetService(""ReplicatedStorage"").Remotes.Client:InvokeServer(unpack(args))
task.wait()
        end
    end)
end
function W() spawn(function () while getgenv().W do
local args = {[1] = ""Wins""}game:GetService(""ReplicatedStorage"").Remotes.Client:InvokeServer(unpack(args)) task.wait()
        end
    end)
end
function R() spawn(function () while getgenv().R do
game:GetService(""ReplicatedStorage"").Remotes.Rebirth:FireServer() task.wait()
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Power Slap Simulator"")

local b = w:CreateFolder(""Main"")

b:Toggle(""INFINITE STRENGTH"",function(val) getgenv().C = val C() end)
b:Toggle(""INFINITE WINS"",function(val) getgenv().W = val W() end)
b:Toggle(""INFINITE REBIRTHS"",function(val) getgenv().R = val R() end)

b:Label(""Made by LuaXie"",{TextSize = 23; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Slider(""WalkSpeed"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val end)
b:Slider(""JumpPower"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.JumpPower = val end)
b:Slider(""HipHeight"",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.HipHeight = val end)
b:Slider(""Gravity"",{min = 0; max = 360; precise = false;},function(val) game.workspace.Gravity = val end)
b:Slider(""FOV"",{min = 0;max = 120;precise = false;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function RTPCFrame(M_CF) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then M_CF.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end end
function PHP(Player_HP) if game.Players.LocalPlayer.Character:FindFirstChild(""Humanoid"") then game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end end"
NCuk9jge,Untitled,v1sper,INI file,Thursday 14th of September 2023 10:26:45 AM CDT,"[/script/shootergame.shootergamemode]
MaxTribeLogs=1000
bDisableFriendlyFire=False
bPvEDisableFriendlyFire=False
bDisableLootCrates=False
bIncreasePvPRespawnInterval=False
bAutoPvETimer=False
MaxNumberOfPlayersInTribe=10
MaxAlliancesPerTribe=10
MaxTribesPerAlliance=10
bPvEAllowTribeWar=True
bPvEAllowTribeWarCancel=False
bAllowCustomRecipes=True
bUseCorpseLocator=True
bAllowUnlimitedRespecs=True
bAllowPlatformSaddleMultiFloors=True
RandomSupplyCratePoints=True
bDisableGenesisMissions=False
bDisableDefaultMapItemSets=False
bDisableWorldBuffs=False
bEnableWorldBuffScaling=False
BaseHexagonRewardMultiplier=1.000000
HexagonCostMultiplier=1.000000
StructureDamageRepairCooldown=180
PvPZoneStructureDamageMultiplier=6.000000
bPassiveDefensesDamageRiderlessDinos=False
bDisableStructurePlacementCollision=True
bLimitTurretsInRange=False
bHardLimitTurretsInRange=False
bGenesisUseStructuresPreventionVolumes=False
SupplyCrateLootQualityMultiplier=2.500000
FishingLootQualityMultiplier=3.100000
PlayerHarvestingDamageMultiplier=2.500000
CraftingSkillBonusMultiplier=2.000000
MaxFallSpeedMultiplier=1.500000
DinoHarvestingDamageMultiplier=5.000000
MatingIntervalMultiplier=0.005000
MatingSpeedMultiplier=3.000000
EggHatchSpeedMultiplier=20.000000
BabyMatureSpeedMultiplier=40.000000
BabyFoodConsumptionSpeedMultiplier=0.500000
BabyCuddleIntervalMultiplier=0.100000
BabyCuddleGracePeriodMultiplier=5.000000
PassiveTameIntervalMultiplier=1.250000
LayEggIntervalMultiplier=0.100000
GlobalSpoilingTimeMultiplier=1.000000
GlobalItemDecompositionTimeMultiplier=2.000000
OverrideMaxExperiencePointsPlayer=4750075200
bAllowFlyerSpeedLeveling=True
CropGrowthSpeedMultiplier=4.000000
BabyImprintAmountMultiplier=5.000000
ResourceNoReplenishRadiusStructures=2.000000
GlobalPoweredBatteryDurabilityDecreasePerSecond=3.000000
AdjustableMutagenSpawnDelayMultiplier=1.000000
bUseDinoLevelUpAnimations=True
bAllowUnclaimDinos=True
bIgnoreStructuresPreventionVolumes=False
PerLevelStatsMultiplier_Player[1]=1.25
PerLevelStatsMultiplier_Player[7]=1.5
DinoSpawnWeightMultipliers=(DinoNameTag=""Rhyniognatha"",OverrideSpawnLimitPercentage=True,SpawnLimitPercentage=2.000000,SpawnWeightMultiplier=1.000000)
DinoSpawnWeightMultipliers=(DinoNameTag=""Compy"",OverrideSpawnLimitPercentage=True,SpawnLimitPercentage=1.000000,SpawnWeightMultiplier=0.300000)
NPCReplacements=(FromClassName=""Archa_Character_BP_C"",ToClassName=""Deinonychus_Character_BP_C"")
NPCReplacements=(FromClassName=""Compy_Character_BP_C"",ToClassName=""Raptor_Character_BP_Aberrant_C"")
ConfigAddNPCSpawnEntriesContainer=(NPCSpawnEntriesContainerClassString=""DinoSpawnEntriesJungle_C"",NPCSpawnEntries=((AnEntryName=""SinoJungle"",EntryWeight=0.07,NPCsToSpawnStrings=(""Sinomacrops_Character_BP_C""))),NPCSpawnLimits((NPCClassString=""Sinomacrops_Character_BP_C"",MaxPercentageOfDesiredNumToAllow=0.01)))
ConfigAddNPCSpawnEntriesContainer=(NPCSpawnEntriesContainerClassString=""DinoSpawnEntriesSwamp_C"",NPCSpawnEntries=((AnEntryName=""SinoSwamp"",EntryWeight=0.07,NPCsToSpawnStrings=(""Sinomacrops_Character_BP_C""))),NPCSpawnLimits((NPCClassString=""Sinomacrops_Character_BP_C"",MaxPercentageOfDesiredNumToAllow=0.05)))"
60QJA33m,Dismissable Pagedoll,Keileon,HTML,Thursday 14th of September 2023 10:21:23 AM CDT,"<!-- Ideally, put this before all of your other code, or at least code that adds content to the page instead of just styling it. -->
<div id=""pagedoll"" class=""carousel"" data-ride=""false"" data-pause=""true"">
  <!-- Indicators -->
    <ul class=""carousel-indicators"">
        <li data-target=""#pagedoll"" data-slide-to=""0"" class=""active""></li>
        <li data-target=""#pagedoll"" data-slide-to=""1""></li>
    </ul>

    <!-- Wrapper for slides -->
        <!-- Change ""left"" to ""right"" to change what side the pagedoll is on! -->
    <div class=""carousel-innerbtn btn-outline-transparent p-0 hidden-md-down"" style=""max-width:15%; position:fixed; bottom:5px; left:5px; z-index:900;"">
        <div class=""carousel-item active"">
            <!-- Pagedoll Source -->
            <img src=""https://via.placeholder.com/200"">
        </div>

        <div class=""carousel-item"">
            <!-- Blank Image - DO NOT DELETE -->
                <!-- You CAN replace this image if you want a toggle or something instead, but this is why it can hide. -->
            <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/69285236_y1EjlGNUDtSLcxE.png?1691713755"">
        </div>
    </div>

    <!-- Toggle Control -->
    <a class=""btn btn-outline-secondary carousel-control-prev"" style=""position: absolute; top: -70px; left: 80px; max-height: 40px; max-width: 200px;"" 
            href=""#pagedoll"" data-slide=""prev"">
		<!-- Change text-danger into whatever bootstrap color you want, or apply a color argument in style. -->
        <span class=""carousel-control-text text-danger"" style=""z-index:900; width:500px; font-style:italic;"">Click to show/hide pagedoll</span>
    </a>
</div>"
9gGTRfby,test.js,AdamBrianBright,JavaScript,Thursday 14th of September 2023 09:59:25 AM CDT,"import { bench, group, run } from 'mitata';

const AllowedLetters = 'QWERTYUIOPASDFGHJKLZXCVBNM';
const AllowedLettersRegex = /[QWERTYUIOPASDFGHJKLZXCVBNM]/;
const AllowedLettersArray = [...AllowedLetters];
const AllowedLettersSet = new Set(AllowedLetters);

function capitalsUpperCase(word) {
  const caps = [];
  for (let i = 0; i < word.length; i++) {
    if (word[i] === word[i].toUpperCase()) caps.push(i);
  }
  return caps;
}
function capitalsRegexMatch(word) {
  const caps = [];
  for (let i = 0; i < word.length; i++) {
    if (word[i].match(AllowedLettersRegex)) caps.push(i);
  }
  return caps;
}
function capitalsRegexSearch(word) {
  const caps = [];
  for (let i = 0; i < word.length; i++) {
    if (~word[i].search(AllowedLettersRegex)) caps.push(i);
  }
  return caps;
}
function capitalsStringIndexOf(word) {
  const caps = [];
  for (let i = 0; i < word.length; i++) {
    if (~AllowedLetters.indexOf(word[i])) caps.push(i);
  }
  return caps;
}
function capitalsStringIncludes(word) {
  const caps = [];
  for (let i = 0; i < word.length; i++) {
    if (AllowedLetters.includes(word[i])) caps.push(i);
  }
  return caps;
}
function capitalsArrayIndexOf(word) {
  const caps = [];
  for (let i = 0; i < word.length; i++) {
    if (~AllowedLettersArray.indexOf(word[i])) caps.push(i);
  }
  return caps;
}
function capitalsArrayIncludes(word) {
  const caps = [];
  for (let i = 0; i < word.length; i++) {
    if (AllowedLettersArray.includes(word[i])) caps.push(i);
  }
  return caps;
}
function capitalsSet(word) {
  const caps = [];
  for (let i = 0; i < word.length; i++) {
    if (AllowedLettersSet.has(word[i])) caps.push(i);
  }
  return caps;
}

const words = [
  Array(10 / 2)
    .fill('S')
    .join('s'),
  Array(1000 / 2)
    .fill('S')
    .join('s'),
  Array(1000_000 / 2)
    .fill('S')
    .join('s'),
];

for (const word of words) {
  group({ name: 'String length: ' + word.length, summary: true }, () => {
    bench('capitalsUpperCase', () => capitalsUpperCase(word));
    bench('capitalsRegexMatch', () => capitalsRegexMatch(word));
    bench('capitalsRegexSearch', () => capitalsRegexSearch(word));
    bench('capitalsStringIndexOf', () => capitalsStringIndexOf(word));
    bench('capitalsStringIncludes', () => capitalsStringIncludes(word));
    bench('capitalsArrayIndexOf', () => capitalsArrayIndexOf(word));
    bench('capitalsArrayIncludes', () => capitalsArrayIncludes(word));
    bench('capitalsSet', () => capitalsSet(word));
  });
}

await run();"
YCd9SpHc,Untitled,wheresTheAnyKey,Bash,Thursday 14th of September 2023 09:38:07 AM CDT,"Grove.Feldbaum@findmetesting.co.uk
Fuzzy/Wuzzy"
1YBBSfuY,Untitled,hoz65105,SQL,Thursday 14th of September 2023 09:28:27 AM CDT,https://pastebin.com/3JehPD4e
D79aZ2Cs,Remove Microsoft OneDrive,coldReactive,Batch,Thursday 14th of September 2023 09:19:39 AM CDT,"@echo off
cls

set x86=""%SYSTEMROOT%\System32\OneDriveSetup.exe""
set x64=""%SYSTEMROOT%\SysWOW64\OneDriveSetup.exe""

echo Closing OneDrive process.
echo.
taskkill /f /im OneDrive.exe > NUL 2>&1
ping 127.0.0.1 -n 5 > NUL 2>&1

echo Uninstalling OneDrive.
echo.
if exist %x64% (
%x64% /uninstall
) else (
%x86% /uninstall
)
ping 127.0.0.1 -n 5 > NUL 2>&1

echo Removing OneDrive leftovers.
echo.
rd ""%USERPROFILE%\OneDrive"" /Q /S > NUL 2>&1
rd ""C:\OneDriveTemp"" /Q /S > NUL 2>&1
rd ""%LOCALAPPDATA%\Microsoft\OneDrive"" /Q /S > NUL 2>&1
rd ""%PROGRAMDATA%\Microsoft OneDrive"" /Q /S > NUL 2>&1

echo Removing OneDrive from the Explorer Side Panel.
echo.
REG DELETE ""HKEY_CLASSES_ROOT\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"" /f > NUL 2>&1
REG DELETE ""HKEY_CLASSES_ROOT\Wow6432Node\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}"" /f > NUL 2>&1
pause"
DEDXXxXz,CodinGame_2023_09_14__16_19_29__team_set.java,MonsterScripter,Java,Thursday 14th of September 2023 09:19:36 AM CDT,"/*
 * Objectif
 * Sur le terrain de jeu, il y a une file d'enfants : allTheKids.
 * Divisez-les en numOfTeams équipes.
 * 
 * Exemple de fonctionnement :
 * Si numOfTeams est 3 :
 * • Le 1er enfant va dans l'équipe 1.
 * • Le 2ème enfant va dans l'équipe 2.
 * • Le 3ème enfant va dans l'équipe 3.
 * • Le 4ème enfant va dans l'équipe 1.
 * • Le 5ème enfant va dans l'équipe 2.
 * • Le 6ème enfant va dans l'équipe 3.
 * • Le 7ème enfant va dans l'équipe 1.
 * • Etc., jusqu'à ce que tous les enfants aient été assignés à une équipe.
 * (Les équipes finales peuvent ne pas avoir le même nombre d'enfants.)
 * 
 * Entrée
 * Ligne 1 : une chaîne de caractères allTheKids, séparée par des virgules et un espace.
 * Ligne 2 : un entier numOfTeams.
 * 
 * Sortie
 * numOfTeams lignes : Équipe numéro d'équipe : lesEnfantsDansCetteÉquipe
 * • Le numéro d'équipe varie de 1 à numOfTeams.
 * • Les enfants sont séparés par une virgule et un espace.
 * 
 * Contraintes
 * 
 * Exemple
 * Entrée
 * Lisa, Frank, Lucy, Ann, Helen, Fran
 * 3
 * 
 * Sortie
 * Équipe 1: Lisa, Ann
 * Équipe 2: Frank, Helen
 * Équipe 3: Lucy, Fran
 */
import java.util.*;

class Solution {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        String allKids = in.nextLine();
        int numOfTeams = in.nextInt();
        String[] kids = allKids.split("", "");
        for (int i = 0; i < numOfTeams; i++) {
            String r = ""Équipe "" + (i +1) + "": ""; 
            for (int j = i; j < kids.length; j += numOfTeams) {
                r += kids[j] + "", "";
            }
            r = r.substring(0, r.length()-2);
            System.out.println(r);
        }
    }
}
"
5FpqNTpv,CodinGame_2023_09_14__16_17_48__team_set.rb,MonsterScripter,Ruby,Thursday 14th of September 2023 09:18:01 AM CDT,"allKids = gets.chomp
numOfTeams = gets.to_i
kids = allKids.split(', ')

numOfTeams.times do |i|
  r = ""Team #{i + 1}: ""
  (i...kids.length).step(numOfTeams) do |j|
    r += ""#{kids[j]}, ""
  end
  r = r[0...-2]
  puts r
end
"
KVq5m4MZ,CodinGame_2023_09_14__16_01_02__substring_a_b.java,MonsterScripter,Java,Thursday 14th of September 2023 09:02:15 AM CDT,"import java.util.Scanner;

/**
 * Objectif
 * Vous recevez deux chaînes de caractères a et b, de telle sorte que b apparaisse comme une sous-séquence de a exactement une fois.
 * Vous devez produire la chaîne de suppression d. Autrement dit, d doit être identique à a, mais où seule la sous-séquence b est conservée et tous les autres caractères sont remplacés par -.
 * 
 * Entrée
 * Ligne 1 : Une chaîne de caractères a.
 * Ligne 2 : Une chaîne de caractères b.
 * 
 * Sortie
 * La chaîne de suppression d de a et b.
 * 
 * Contraintes
 * 1 <= longueur(b) < longueur(a) <= 10^3
 * 1 <= longueur(a) * longueur(b) <= 6 * 10^5
 * 
 * Exemple
 * Entrée
 * abcdef
 * abef
 * 
 * Sortie
 * ab--ef
 */
class Solution {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        String a = in.nextLine();
        String b = in.nextLine();

        int j=0;
        for (int i = 0; i < a.length(); i++) {
            if (j < b.length() && a.charAt(i) == b.charAt(j)) {
                System.out.print(a.charAt(i));
                j++;
            } else {
                System.out.print(""-"");
            }
        }
    }
}
"
wasTkJFY,P0_O152730 [Вайтбокс],kirber,JSON,Thursday 14th of September 2023 08:58:17 AM CDT,"{
   ""Source"":""crm"",
   ""Message"":"""",
   ""Id"":""3cc07a18-abb9-ed11-b826-005056b89b68"",
   ""Type"":""resend"",
   ""Time"":""2023-09-13T17:35:20"",
   ""Attributes"":{
      ""createdon"":""2023-04-27T12:38:36"",
      ""smt_addition_realization_termid"":null,
      ""smt_colorcode"":null,
      ""smt_constructor_groupcode"":100000002,
      ""smt_default_optionbit"":false,
      ""smt_description"":null,
      ""smt_discount_amount"":5000.0000,
      ""smt_discount_percent"":null,
      ""smt_discount_typecode"":100000000,
      ""smt_end_date"":""2023-11-01T03:00:00"",
      ""smt_group_for_websitecode"":null,
      ""smt_initial_fee"":null,
      ""smt_interest_rate"":null,
      ""smt_marketing_name"":null,
      ""smt_max_quantity"":null,
      ""smt_mortgage_program_validity"":null,
      ""smt_name"":""ДЯ_К1_White Box"",
      ""smt_option_classcode"":null,
      ""smt_parent_realization_termid"":{
         ""Id"":""1bd13c29-aab9-ed11-b825-005056b8a72c"",
         ""LogicalName"":""smt_realization_term"",
         ""Name"":""Подопция_White Box""
      },
      ""smt_payment_optioncode"":null,
      ""smt_postsale"":null,
      ""smt_realization_term_classifier_smt_isfurnishing"":null,
      ""smt_realization_term_classifierid"":{
         ""Id"":""c1e9f3f1-a9b9-ed11-b825-005056b8a72c"",
         ""LogicalName"":""smt_realization_term_classifier"",
         ""Name"":""White Box""
      },
      ""smt_realization_termid"":""3cc07a18-abb9-ed11-b826-005056b89b68"",
      ""smt_realization_termParent_smt_default_optionbit"":false,
      ""smt_realization_termParent_smt_name"":""Подопция_White Box"",
      ""smt_realization_termParent_smt_parent_realization_termid"":{
         ""Id"":""e906c00c-aab9-ed11-b825-005056b8a72c"",
         ""LogicalName"":""smt_realization_term"",
         ""Name"":""Опция_White Box""
      },
      ""smt_realization_termParent_smt_realization_termid"":""1bd13c29-aab9-ed11-b825-005056b8a72c"",
      ""smt_required_optionbit"":false,
      ""smt_room_for_optioncode"":null,
      ""smt_roomcode"":null,
      ""smt_start_date"":""2023-03-03T03:00:00"",
      ""smt_stylecode"":null,
      ""smt_technicsbit"":false,
      ""smt_term_typecode"":100000003,
      ""smt_translate_to_dypricebit"":null,
      ""statecode"":0,
      ""statuscode"":1
   },
   ""LinkEntities"":{
      
   },
   ""ManyMany"":{
      
   }
}"
3rk7NZLW,Untitled,adampielak,Python,Thursday 14th of September 2023 08:56:03 AM CDT,"#!/var/ossec/framework/python/bin/python3

import sys
import json
import requests
from requests.auth import HTTPBasicAuth
import time
import os

# Configure logging
debug_enabled = True
pwd = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
log_file = '{0}/logs/integrations.log'.format(pwd)

def debug(msg):
    if debug_enabled:
        now = time.strftime(""%a %b %d %H:%M:%S %Z %Y"")
        msg = ""{0}: {1}\n"".format(now, msg)
        print(msg)
        f = open(log_file, ""a"")
        f.write(msg)
        f.close()

debug('Starting to run Jira integration')

# Set the project attributes
project_alias = 'SD'
issue_name ='Wazuh Alert'
project_key = 'SD'
#issuetypeid = '10101'
issuetypeid = '10100'
duty = '[~tick]'

# Read configuration parameters
alert_file = open(sys.argv[1])
user = sys.argv[2].split(':')[0]
api_key = sys.argv[2].split(':')[1]
hook_url = sys.argv[3]

debug('Reading alert file ' + sys.argv[1])

# Read the alert file
alert_json = json.loads(alert_file.read())
alert_file.close()

# Extract issue fields
client = alert_json['agent']['labels']['group']
date = alert_json['timestamp']
alert_level = alert_json['rule']['level']
description = alert_json['rule']['description']
ruleid = alert_json['rule']['id']
agentid = alert_json['agent']['id']
agentname = alert_json['agent']['name']
agentip = alert_json['agent']['ip']
full = alert_json.get('full_log')

# Generate request
msg_data = {}
msg_data['update'] = {}
msg_data['fields'] = {}
msg_data['fields']['project'] = {}
msg_data['fields']['project']['key'] = project_key
msg_data['fields']['summary'] = '[WAZUH] Severity: HIGH, Security alert on: ' + agentname + ', Group: ' + client + ' - ' + description + ''
msg_data['fields']['description'] = '- Date: ' + str(date) + '\n- Rule ID: ' + str(ruleid) + '\n- State: ' + description + '\n- Alert level: ' + str(alert_level) + '\n- Agent: ' + str(agentname)+ '\n- Agent IP: ' + str(agentip) + '\n- Agent Group: ' + str(client) + '\n- Full log: ' + str(full) + '\n- Duty: ' + str(duty) + ''
msg_data['fields']['issuetype'] = {}
msg_data['fields']['issuetype']['id'] = issuetypeid
msg_data['fields']['customfield_10203'] = {}
msg_data['fields']['customfield_10203']['value'] = 'Security'
msg_data['fields']['customfield_10203']['id'] = '119508389'
msg_data['fields']['customfield_10202'] = {}
msg_data['fields']['customfield_10202']['value'] = 'Security'
msg_data['fields']['customfield_10202']['id'] = '10014'
msg_data['fields']['customfield_12102'] = {}
msg_data['fields']['customfield_12102']['value'] = 'Internal'
msg_data['fields']['customfield_12605'] = agentname
msg_data['fields']['customfield_12607'] = 'HIGH'
msg_data['fields']['customfield_12610'] = 'WAZUH'
msg_data['fields']['labels'] = {}
msg_data['fields']['labels'] = 'security','securityalert','wazuh','siem','wazuh-alert','high'
msg_data['update'] = {}

headers = {'content-type': 'application/json', 'Accept-Charset': 'UTF-8'}

debug('Sending message with the content: ' + str(msg_data))

# Send the request
# print (requests.post(hook_url, data=json.dumps(msg_data), headers=headers, auth=(user, api_key)))
response = requests.post(hook_url, data=json.dumps(msg_data), headers=headers, auth=(user, api_key))
print(json.dumps(json.loads(response.text), sort_keys=True, indent=4, separators=("","", "": "")))

debug('Jira replied: '+ response.text)

sys.exit(0)
"
42K8zKsV,Untitled,tuomasvaltanen,Python,Thursday 14th of September 2023 08:36:22 AM CDT,"# koodipaja 2, 14.9.2023
print(""Tervetuloa!"")

# UUSI TIEDOSTO

# Boolean-muuttuja, isompi esimerkki

# TEHTÄVÄNANTO:

# Tehdään ohjelma, joka päättelee muuttujista, onko ulkona HYVÄ vai HUONO sää
# Sään logiikka on tämä:
# Huono sää: jos lämpötila on alle +10 C
# Huono sää: jos kosteusprosentti on yli 80 %
# Huono sää: jos tuulennopeus on yli 2.5 (m/s)
# Huono sää: jos ulkona on pimeää
# Tässä tapauksessa ulkona on pimeää, jos klo on joko 20-24 tai 0-7

# alustetaan Boolean ja muut muuttujat
good_weather = True
temperature = 15
humidity = 32
wind_speed = 1.4
time = 23

# apumuuttujat, eli rajat milloin aurinko laskee ja nousee
# tai milloin tulee pimeää ja milloin on taas valoisaa
sun_down = 20
sun_rises = 7

# Booleania muuttavat koodilogiikat tähän väliin (ehtolauseita)
# yhdellä if-lauseella alkaa mennä melko monimutkaiseksi tämä ehdon rakentaminen...???
# if temperature < 10 or humidity > 80 or wind_speed > 2.5 or (time > sun_down or ...)

# hoidetaan ehto kerrallaan, ja muutetaan Boolean Falseksi
# jos raja ylittyy sopivalla tavalla
if temperature < 10:
    good_weather = False

if humidity > 80:
    good_weather = False

if wind_speed > 2.5:
    good_weather = False

# tarkistetaan onko aika pimeän aikana, eli 20-24 tai 0-7
# toisin sanoen, arvot 8-19 ovat ok
if time > sun_down or time < sun_rises:
    good_weather = False

# tarkistetaan lopputulos, eli mikä on Booleanin tilanne
# ja tulostetaan sopiva teksti
if good_weather:
    print(""Hyvä sää!"")
else:
    print(""Huono sää..."")

"
amyezuZZ,Aggregate Elements JS Advanced,TZinovieva,JavaScript,Thursday 14th of September 2023 08:29:15 AM CDT,"function aggregateElements(arr) {
    let sum = arr.reduce((a, b) => a + b, 0);
    let inverseSum = arr.reduce((a, b) => a + 1 / b, 0);
    let string = arr.join('');

    console.log(sum);
    console.log(inverseSum);
    console.log(string);
}

OR

function aggregateElements(arr) {
    let sum = 0;
    let inverseSum = 0;
    let string = '';
    for (let el of arr) {
        sum += el;
        inverseSum += 1 / el;
        string += el;
    }
    console.log(sum);
    console.log(inverseSum);
    console.log(string);
}"
4NQQtHDQ,Square Of Stars JS Advanced,TZinovieva,JavaScript,Thursday 14th of September 2023 08:27:03 AM CDT,"function squareOfStars(parameter) {
    let stars = ('* '.repeat(parameter));
    for (let i = 1; i <= parameter; i++) {
            console.log(stars);
    }
}"
bTgxaFVJ,Days In A Month JS Advanced,TZinovieva,JavaScript,Thursday 14th of September 2023 08:25:47 AM CDT,"function daysInaMonth(month, year) {
    console.log(new Date(year, month, 0).getDate());
}"
R2sMUGdj,Day Of Week JS Advanced,TZinovieva,JavaScript,Thursday 14th of September 2023 08:24:12 AM CDT,"function dayOfWeek(day) {
   let week = {
    'Monday': 1,
    'Tuesday': 2,
    'Wednesday': 3,
    'Thursday': 4,
    'Friday': 5,
    'Saturday': 6,
    'Sunday': 7
   };
   if (week.hasOwnProperty(day)) {
    console.log(week[day]);
   } else {
    console.log(""error"");
   }
}"
z4Q7s4UP,Sum of Numbers N…M JS Advanced,TZinovieva,JavaScript,Thursday 14th of September 2023 08:22:21 AM CDT,"function sumOfNumbers(n, m) {
    let n1 = Number(n);
    let n2 = Number(m);

    let sum = 0;
    for (let i = n1; i <= n2; i++) {
        sum += i;
    }
    return sum;
}"
iYXDR3yY,Math Operations JS Advanced,TZinovieva,JavaScript,Thursday 14th of September 2023 08:19:31 AM CDT,"function mathOperations(num1, num2, sign) {
    const operations = {
        '+': (a, b) => a + b,
        '-': (a, b) => a - b,
        '*': (a, b) => a * b,
        '/': (a, b) => a / b,
        '%': (a, b) => a % b,
        '**': (a, b) => a ** b
    };

    const result = operations[sign](num1, num2);
    console.log(result);
}

OR 

function mathOperations(num1, num2, sign) {
    let result = 0;
    if (sign === '+') {
        result = num1 + num2;
    } else if (sign === '-') {
        result = num1 - num2;
    } else if (sign === '*') {
        result = num1 * num2;
    } else if (sign === '/') {
        result = num1 / num2;
    } else if (sign === '%') {
        result = num1 % num2;
    } else if (sign === '**') {
        result = Math.pow(num1, num2);
    }
    console.log(result);
}"
8yfHTuSb,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Thursday 14th of September 2023 08:17:52 AM CDT,"Pasted at: 14/09/2023 14:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
VK6TT3dR,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Thursday 14th of September 2023 08:17:50 AM CDT,"Pasted at: 14/09/2023 14:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
K0LwkaYG,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 14th of September 2023 08:17:47 AM CDT,"Pasted at: 14/09/2023 14:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
2PSZ5WVa,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Thursday 14th of September 2023 08:17:45 AM CDT,"Pasted at: 14/09/2023 14:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
6R5eZrZt,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Thursday 14th of September 2023 08:17:42 AM CDT,"Pasted at: 14/09/2023 14:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
Aj4eHyQu,Circle Area JS Advanced,TZinovieva,JavaScript,Thursday 14th of September 2023 08:17:40 AM CDT,"function circleArea(argument) {
    if (typeof argument === 'number') {
        console.log(`${(Math.PI * argument * argument).toFixed(2)}`);
    } else {
        console.log(`We can not calculate the circle area, because we receive a ${typeof argument}.`);
    }
}"
A58WzvFP,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Thursday 14th of September 2023 08:17:40 AM CDT,"Pasted at: 14/09/2023 14:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
GhKKhjjH,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 14th of September 2023 08:17:35 AM CDT,"Pasted at: 14/09/2023 14:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
uHeXsT0V,Hashed Email With Exclude,wheresTheAnyKey,C,Thursday 14th of September 2023 08:17:33 AM CDT,"Pasted at: 14/09/2023 14:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
