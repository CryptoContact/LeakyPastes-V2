id,title,username,language,date,content
j7AdjavY,test,Demchel,Lua,Sunday 17th of March 2024 12:57:45 PM CDT,"getupvalues = getupvalues or debug.getupvalues
setupvalue = setupvalue or debug.setupvalue
if not (getrawmetatable and getupvalues and setupvalue and (getreg or debug.getregistry)) then
	local h = Instance.new(""Hint"",workspace)
	h.Text = ""Incompatible exploit.""
	wait(3)
	h:Destroy()
	return
end
local settings = {refill_at=5, refill_end=95, deliver_at=24, stay_in_kitchen=true}
local doCashier,doBoxer,doCook,doSupplier,doDelivery = false,false,false,false,false
if readfile then
	pcall(function()
		local new = game:GetService(""HttpService""):JSONDecode(readfile(""PizzaFarm.txt""))
		--corruption?
		local doOverwrite=false
		for k,v in pairs(new) do
			if settings[k]==nil then
				doOverwrite=true
				new[k]=nil
			end
		end
		for k,v in pairs(settings) do
			if new[k]==nil then
				doOverwrite=true
				new[k]=v
			end
		end
		--use input
		if doOverwrite then
			warn(""Settings overwritten"")
			writefile(""PizzaFarm.txt"",game:GetService(""HttpService""):JSONEncode(new))
		end
		settings = new
	end)
end

if getconnections then
	for _,c in next,getconnections(game:GetService(""ScriptContext"").Error) do
		c:Disable()
	end
end

local player = game:GetService(""Players"").LocalPlayer
local ffc = game.FindFirstChild
local RNG = Random.new()
local network
local character,root,humanoid
do
	local reg = (getreg or debug.getregistry)()
	for i=1,#reg do
		local f = reg[i]
		if type(f)==""function"" then
		    for k,v in next,getupvalues(f) do
				if typeof(v)==""Instance"" then
				    if v.Name==""CashOut"" then
					    setupvalue(f,k,{MouseButton1Click={wait=function()end,Wait=function()end}})
				    elseif v.Name==""StickerName"" then
				        setupvalue(f,k,nil)
				    end
				end
			end
    		if tostring(getfenv(f).script) == ""Music"" then
    		    local consts = getconstants(f)
    		    local loc=false
		        for ci,c in next,consts do
		            if c == ""location changed"" then
		                loc=true
		            elseif loc and c == ""SendData"" then
		                setconstant(f,ci,""ExplodeString"")
		                break
		            end
		        end
    		end
		elseif type(f)==""table"" and rawget(f,""FireServer"") and rawget(f,""BindEvents"") then
			network = f
		end
	end
end
assert(network,""failed to find network"")
--//gui
Create = function(class,parent,props)
	local new = Instance.new(class)
	for k,v in next,props do
		new[k]=v
	end
	new.Parent = parent
	return new
end
gui=Create(""ScreenGui"",game.CoreGui,{Name=""Farm"", ZIndexBehavior=""Sibling""})
main=Create(""Frame"",gui,{Name=""main"", Draggable=true, Active=true, Size=UDim2.new(0,350,0,100), Position=UDim2.new(.335,0,0.02,0), BackgroundColor3=Color3.new(0.098,0.098,0.098)})
topbar=Create(""Frame"",main,{Name=""topbar"", Size=UDim2.new(1,0,0.15,0), BackgroundColor3=Color3.new(0.255,0.255,0.255)})
closeBtn=Create(""TextButton"",topbar,{Name=""closeBtn"", TextWrapped=true, Size=UDim2.new(0.03,0,1,0), TextColor3=Color3.new(1,1,1), Text=""НЕТ"", BackgroundTransparency=1, 
	Font=""GothamSemibold"", Position=UDim2.new(0.96,0,0,0), TextSize=14, TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
titleLbl=Create(""TextLabel"",topbar,{Name=""titleLbl"", TextWrapped=true, Size=UDim2.new(0.5,0,1,0), Text=""Пицца фарминг"", TextSize=16, Font=""GothamSemibold"", 
	BackgroundTransparency=1, Position=UDim2.new(0.25,0,0,0), TextColor3=Color3.new(1,1,3), BackgroundColor3=Color3.new(1,1,3)})
saveBtn=Create(""ImageButton"",topbar,{Name=""saveBtn"", Image=""rbxassetid://55687833"", Size=UDim2.new(0.05,0,1,0), Position=UDim2.new(0.01,0,0,0), BackgroundTransparency=1, BackgroundColor3=Color3.new(), Visible=writefile~=nil})
settings_1=Create(""Frame"",main,{Name=""settings"", BackgroundTransparency=1, Size=UDim2.new(0.97,0,0.75,0), Position=UDim2.new(0.025,0,0.2,0), BackgroundColor3=Color3.new(1,1,1)})
Layout=Create(""UIGridLayout"",settings_1,{VerticalAlignment=""Center"", SortOrder=""LayoutOrder"", HorizontalAlignment=""Center"", CellPadding=UDim2.new(0.01,0,0.1,0), CellSize=UDim2.new(0.325,0,0.26,0)})
cashier=Create(""Frame"",settings_1,{Name=""cashier"", LayoutOrder=4, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
Label=Create(""TextLabel"",cashier,{TextWrapped=true, Size=UDim2.new(0.6,0,1,0), Text=""Кассир"", TextSize=14, TextXAlignment=""Left"", Font=""SourceSans"", 
	BackgroundTransparency=1, Position=UDim2.new(0.4,0,0,0), TextColor3=Color3.new(1,1,1), TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
cashierBtn=Create(""ImageButton"",cashier,{Name=""cashierBtn"", ImageTransparency=1, BorderSizePixel=0, Size=UDim2.new(0.38,0,1,0), BackgroundColor3=Color3.new(0.392,0.392,0.392)})
cashierSlider=Create(""Frame"",cashierBtn,{Name=""slider"", Size=UDim2.new(0.5,-4,1,-4), Position=UDim2.new(doCashier and 0.5 or 0,2,0,2), BorderSizePixel=0, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
kitchen=Create(""Frame"",settings_1,{Name=""kitchen"", LayoutOrder=9, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
Label_2=Create(""TextLabel"",kitchen,{TextWrapped=true, Size=UDim2.new(0.6,0,1,0), Text=""Доставить от:"", TextSize=14, TextXAlignment=""Right"", Font=""SourceSans"", 
	BackgroundTransparency=1, TextColor3=Color3.new(1,1,1), TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
deliverAtBox=Create(""TextBox"",kitchen,{Name=""deliverAtBox"", TextWrapped=true, Size=UDim2.new(0.25,0,1,0), Text=tostring(settings.deliver_at), TextSize=50, TextColor3=Color3.new(), 
	Font=""Code"", Position=UDim2.new(0.62,0,0,0), TextScaled=true, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
refillEnd=Create(""Frame"",settings_1,{Name=""refillEnd"", LayoutOrder=8, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
refillEndBox=Create(""TextBox"",refillEnd,{Name=""refillEndBox"", TextWrapped=true, Size=UDim2.new(0.25,0,1,0), Text=tostring(settings.refill_end), TextSize=50, TextColor3=Color3.new(), 
	Font=""Code"", Position=UDim2.new(0.62,0,0,0), TextScaled=true, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
Label_3=Create(""TextLabel"",refillEnd,{TextWrapped=true, Size=UDim2.new(0.6,0,1,0), Text=""Заполнить до:"", TextSize=14, TextXAlignment=""Right"", Font=""SourceSans"", 
	BackgroundTransparency=1, TextColor3=Color3.new(1,1,1), TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
refillAt=Create(""Frame"",settings_1,{Name=""refillAt"", LayoutOrder=7, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
Label_4=Create(""TextLabel"",refillAt,{TextWrapped=true, Size=UDim2.new(0.5,0,1,0), Text=""Заполнить от:"", TextSize=14, TextXAlignment=""Right"", Font=""SourceSans"", 
	BackgroundTransparency=1, TextColor3=Color3.new(1,1,1), TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
refillAtBox=Create(""TextBox"",refillAt,{Name=""refillAtBox"", TextWrapped=true, Size=UDim2.new(0.25,0,1,0), Text=tostring(settings.refill_at), TextSize=50, TextColor3=Color3.new(), 
	Font=""Code"", Position=UDim2.new(0.52,0,0,0), TextScaled=true, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
supplier=Create(""Frame"",settings_1,{Name=""supplier"", LayoutOrder=6, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
Label_5=Create(""TextLabel"",supplier,{TextWrapped=true, Size=UDim2.new(0.6,0,1,0), Text=""Поставщик"", TextSize=14, TextXAlignment=""Left"", Font=""SourceSans"", 
	BackgroundTransparency=1, Position=UDim2.new(0.4,0,0,0), TextColor3=Color3.new(1,1,1), TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
supplierBtn=Create(""ImageButton"",supplier,{Name=""supplierBtn"", ImageTransparency=1, BorderSizePixel=0, Size=UDim2.new(0.38,0,1,0), BackgroundColor3=Color3.new(0.392,0.392,0.392)})
supplierSlider=Create(""Frame"",supplierBtn,{Name=""slider"", Size=UDim2.new(0.5,-4,1,-4), Position=UDim2.new(doSupplier and 0.5 or 0,2,0,2), BorderSizePixel=0, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
delivery=Create(""Frame"",settings_1,{Name=""delivery"", LayoutOrder=5, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
Label_6=Create(""TextLabel"",delivery,{TextWrapped=true, Size=UDim2.new(0.6,0,1,0), Text=""Курьер"", TextSize=14, TextXAlignment=""Left"", Font=""SourceSans"", 
	BackgroundTransparency=1, Position=UDim2.new(0.4,0,0,0), TextColor3=Color3.new(1,1,1), TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
deliveryBtn=Create(""ImageButton"",delivery,{Name=""deliveryBtn"", ImageTransparency=1, BorderSizePixel=0, Size=UDim2.new(0.38,0,1,0), BackgroundColor3=Color3.new(0.392,0.392,0.392)})
deliverySlider=Create(""Frame"",deliveryBtn,{Name=""slider"", Size=UDim2.new(0.5,-4,1,-4), Position=UDim2.new(doDelivery and 0.5 or 0,2,0,2), BorderSizePixel=0, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
boxer=Create(""Frame"",settings_1,{Name=""boxer"", LayoutOrder=2, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
boxerLbl=Create(""TextLabel"",boxer,{TextWrapped=true, Size=UDim2.new(0.6,0,1,0), Text=""Фасовщик"", TextSize=14, TextXAlignment=""Left"", Font=""SourceSans"", 
	BackgroundTransparency=1, Position=UDim2.new(0.4,0,0,0), TextColor3=Color3.new(1,1,1), TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
boxerBtn=Create(""ImageButton"",boxer,{Name=""boxerBtn"", ImageTransparency=1, BorderSizePixel=0, Size=UDim2.new(0.38,0,1,0), BackgroundColor3=Color3.new(0.392,0.392,0.392)})
boxerSlider=Create(""Frame"",boxerBtn,{Name=""slider"", Size=UDim2.new(0.5,-4,1,-4), Position=UDim2.new(doBoxer and 0.5 or 0,2,0,2), BorderSizePixel=0, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
cook=Create(""Frame"",settings_1,{Name=""cook"", LayoutOrder=3, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
cookLbl=Create(""TextLabel"",cook,{TextWrapped=true, Size=UDim2.new(0.6,0,1,0), Text=""Повар"", TextSize=14, TextXAlignment=""Left"", Font=""SourceSans"", 
	BackgroundTransparency=1, Position=UDim2.new(0.4,0,0,0), TextColor3=Color3.new(1,1,1), TextScaled=true, BackgroundColor3=Color3.new(1,1,1)})
cookBtn=Create(""ImageButton"",cook,{Name=""cookBtn"", ImageTransparency=1, BorderSizePixel=0, Size=UDim2.new(0.38,0,1,0), BackgroundColor3=Color3.new(0.392,0.392,0.392)})
cookSlider=Create(""Frame"",cookBtn,{Name=""slider"", Size=UDim2.new(0.5,-4,1,-4), Position=UDim2.new(doCook and 0.5 or 0,2,0,2), BorderSizePixel=0, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
toggleAll=Create(""Frame"",settings_1,{Name=""toggleAll"", LayoutOrder=1, BackgroundTransparency=1, Size=UDim2.new(0,100,0,100), BackgroundColor3=Color3.new(1,1,1)})
switch=Create(""Frame"",toggleAll,{Name=""switch"", BackgroundTransparency=1, Size=UDim2.new(0.75,0,1,0), BackgroundColor3=Color3.new(1,1,1)})
allOffBtn=Create(""ImageButton"",switch,{Name=""allOffBtn"", ImageTransparency=1, BorderSizePixel=0, Size=UDim2.new(0.5,0,1,0), BackgroundColor3=Color3.new(0.235,0.235,0.235)})
allOnBtn=Create(""ImageButton"",switch,{Name=""allOnBtn"", ImageTransparency=1, BorderSizePixel=0, Size=UDim2.new(0.5,0,1,0), Position=UDim2.new(0.5,0,0,0), BackgroundColor3=Color3.new(0.333,0.333,0.333)})
toggleAllSlider=Create(""Frame"",switch,{Name=""slider"", Size=UDim2.new(0.1,0,1,4), Position=UDim2.new(0.45,0,0,-2), BorderSizePixel=0, BackgroundColor3=Color3.new(0.784,0.784,0.784)})
messageLbl=Create(""TextLabel"",topbar,{Name=""messageLbl"", Size=UDim2.new(0.5,0,1,0), Text=""Saved."", TextSize=14, Font=""GothamSemibold"", BackgroundTransparency=1, 
	Position=UDim2.new(0.07,0,0,0), TextColor3=Color3.new(1,1,1), Visible=false, TextXAlignment=""Left""})
camframe=Create(""Frame"",gui,{Name=""camframe"", BackgroundTransparency=1, Size=UDim2.new(0,120,0,40), Position=UDim2.new(0.5,-320,0,-38), BackgroundColor3=Color3.new(0.118,0.118,0.118)})
rightCamBtn=Create(""ImageButton"",camframe,{Name=""rightCamBtn"", Image=""rbxassetid://144168163"", Size=UDim2.new(0.333,0,1,0), Rotation=180, Position=UDim2.new(0.666,0,0,0), BackgroundTransparency=1, 
	BackgroundColor3=Color3.new(1,1,1)})
leftCamBtn=Create(""ImageButton"",camframe,{Name=""leftCamBtn"", Image=""rbxassetid://144168163"", Size=UDim2.new(0.333,0,1,0), BackgroundTransparency=1, BackgroundColor3=Color3.new(1,1,1)})
centerCamBtn=Create(""ImageButton"",camframe,{Name=""centerCamBtn"", Image=""rbxassetid://58282192"", Size=UDim2.new(0.333,0,1,0), Position=UDim2.new(0.333,0,0,0), BackgroundTransparency=1, BackgroundColor3=Color3.new(1,1,1)})
creditLbl=Create(""TextLabel"",main,{Position=UDim2.new(0,0,1,5),Size=UDim2.new(0,100,0,15),BackgroundTransparency=1,TextColor3=Color3.new(1,1,1),Text=""Ву Димапчик"",TextScaled=true,TextStrokeTransparency=.8})

local function toggleCashier(bool)
	if bool~=nil then
		doCashier=bool
	else
		doCashier = not doCashier
	end
	cashierSlider:TweenPosition(UDim2.new(doCashier and 0.5 or 0,2,0,2),nil,""Sine"",0.1,true)
end
local function toggleCook(bool)
	if bool~=nil then
		doCook=bool
	else
		doCook = not doCook
	end
	cookSlider:TweenPosition(UDim2.new(doCook and 0.5 or 0,2,0,2),nil,""Sine"",0.1,true)
end
local function toggleBoxer(bool)
	if bool~=nil then
		doBoxer=bool
	else
		doBoxer = not doBoxer
	end
	boxerSlider:TweenPosition(UDim2.new(doBoxer and 0.5 or 0,2,0,2),nil,""Sine"",0.1,true)
end
local function toggleDelivery(bool)
	if bool~=nil then
		doDelivery=bool
	else
		doDelivery = not doDelivery
	end
	deliverySlider:TweenPosition(UDim2.new(doDelivery and 0.5 or 0,2,0,2),nil,""Sine"",0.1,true)
end
local function toggleSupplier(bool)
	if bool~=nil then
		doSupplier=bool
	else
		doSupplier = not doSupplier
	end
	supplierSlider:TweenPosition(UDim2.new(doSupplier and 0.5 or 0,2,0,2),nil,""Sine"",0.1,true)
end
cashierBtn.MouseButton1Click:Connect(toggleCashier)
cookBtn.MouseButton1Click:Connect(toggleCook)
boxerBtn.MouseButton1Click:Connect(toggleBoxer)
deliveryBtn.MouseButton1Click:Connect(toggleDelivery)
supplierBtn.MouseButton1Click:Connect(toggleSupplier)
allOffBtn.InputBegan:Connect(function()
	if game:GetService(""UserInputService""):IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
		toggleCashier(false)
		toggleCook(false)
		toggleBoxer(false)
		toggleDelivery(false)
		toggleSupplier(false)
		toggleAllSlider:TweenPosition(UDim2.new(0,0,0,-2),nil,""Sine"",0.1,true)
		wait(1)
		if toggleAllSlider.Position.X.Scale<.01 then
			toggleAllSlider:TweenPosition(UDim2.new(0.45,0,0,-2),nil,""Sine"",0.1,true)
		end
	end
end)
allOnBtn.InputBegan:Connect(function()
	if game:GetService(""UserInputService""):IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
		toggleCashier(true)
		toggleCook(true)
		toggleBoxer(true)
		toggleDelivery(true)
		toggleSupplier(true)
		toggleAllSlider:TweenPosition(UDim2.new(0.9,0,0,-2),nil,""Sine"",0.1,true)
		wait(1)
		if toggleAllSlider.Position.X.Scale>.88 then
			toggleAllSlider:TweenPosition(UDim2.new(0.45,0,0,-2),nil,""Sine"",0.1,true)
		end
	end
end)
local oldRefillAt=refillAtBox.Text
refillAtBox:GetPropertyChangedSignal(""Text""):Connect(function()
	if #refillAtBox.Text>2 or refillAtBox.Text:match(""%D"") then
		refillAtBox.Text = oldRefillAt
	end
	oldRefillAt = refillAtBox.Text
end)
refillAtBox.FocusLost:Connect(function()
	if tonumber(refillAtBox.Text) then
		settings.refill_at=tonumber(refillAtBox.Text)
	end
	refillAtBox.Text=tostring(settings.refill_at)
end)
local oldRefillEnd=refillEndBox.Text
refillEndBox:GetPropertyChangedSignal(""Text""):Connect(function()
	if #refillEndBox.Text>2 or refillEndBox.Text:match(""%D"") then
		refillEndBox.Text = oldRefillEnd
	end
	oldRefillEnd = refillEndBox.Text
end)
refillEndBox.FocusLost:Connect(function()
	if tonumber(refillEndBox.Text) then
		settings.refill_end=tonumber(refillEndBox.Text)
	end
	refillEndBox.Text=tostring(settings.refill_end)
end)
local oldDeliverAt=deliverAtBox.Text
deliverAtBox:GetPropertyChangedSignal(""Text""):Connect(function()
	if #deliverAtBox.Text>2 or deliverAtBox.Text:match(""%D"") then
		deliverAtBox.Text = oldDeliverAt
	end
	oldDeliverAt = deliverAtBox.Text
end)
deliverAtBox.FocusLost:Connect(function()
	if tonumber(deliverAtBox.Text) then
		settings.deliver_at=tonumber(deliverAtBox.Text)
	end
	deliverAtBox.Text=tostring(settings.deliver_at)
end)
closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
    doCashier,doBoxer,doCook,doSupplier,doDelivery = false,false,false,false,false
end)
closeBtn.MouseEnter:Connect(function() closeBtn.TextColor3=Color3.new(.9,0,0) end)
closeBtn.MouseLeave:Connect(function() closeBtn.TextColor3=Color3.new(1,1,1) end)
saveBtn.MouseButton1Click:Connect(function()
	if writefile and messageLbl.Visible==false then
		writefile(""PizzaFarm.txt"",game:GetService(""HttpService""):JSONEncode(settings))
		messageLbl.Visible=true
		wait(2)
		messageLbl.Visible=false
	end
end)
local cameraArray = {CFrame.new(23,14,65,0.629,0.386,-0.674,-0,0.867,0.497,0.777,-0.313,0.545),CFrame.new(39,15,83,-0.571,0.392,-0.720,-0,0.878,0.478,0.820,0.273,-0.502),CFrame.new(40,20,-38,-0.801,-0.229,0.552,-0,0.923,0.384,-0.598,0.307,-0.739),CFrame.new(51,15,-25,-0.707,0.338,-0.620,0,0.878,0.478,0.707,0.338,-0.620),CFrame.new(47,12,21,0.026,0.323,-0.945,-0,0.946,0.323,0.999,-0.008,0.024)}
local cameraIndex = 0
centerCamBtn.MouseButton1Click:Connect(function()
	cameraIndex = 0
	workspace.CurrentCamera.CameraType = ""Custom""
end)
leftCamBtn.MouseButton1Click:Connect(function()
	cameraIndex = cameraIndex - 1
	if cameraIndex < 0 then
		cameraIndex = #cameraArray
	end
	if cameraIndex == 0 then
		workspace.CurrentCamera.CameraType=""Custom""
	else
		local cf = cameraArray[cameraIndex]
		workspace.CurrentCamera.CameraType=""Scriptable""
		workspace.CurrentCamera:Interpolate(cf,cf+cf.lookVector*10,0.5)
	end
end)
rightCamBtn.MouseButton1Click:Connect(function()
	cameraIndex = cameraIndex + 1
	if cameraIndex > #cameraArray then
		cameraIndex = 0
		workspace.CurrentCamera.CameraType=""Custom""
	else
		local cf = cameraArray[cameraIndex]
		workspace.CurrentCamera.CameraType=""Scriptable""
		workspace.CurrentCamera:Interpolate(cf,cf+cf.lookVector*10,0.5)
	end
end)

--//subroutines
local supplyCounts = {TomatoSauce=99,Cheese=99,Sausage=99,Pepperoni=99,Dough=99,Box=99,Dew=99}
for name in pairs(supplyCounts) do
	local lbl = workspace.SupplyCounters.Model[name==""Dew"" and ""CounterMountainDew"" or ""Counter""..name].a.SG.Counter
	supplyCounts[name]=tonumber(lbl.Text)
	lbl.Changed:Connect(function()
		supplyCounts[name]=tonumber(lbl.Text)
	end)
	print(supplyCounts[7])
end

local function FindFirstCustomer()
	local children = workspace.Customers:GetChildren()
	for i=1,#children do
		local c = children[i]
		if ffc(c,""Head"") and ffc(c,""Humanoid"") and c.Head.CFrame.Z<90000002 and ffc(c.Head,""Dialog"") and ffc(c.Head.Dialog,""Correct"") and ((c.Humanoid.SeatPart and c.Humanoid.SeatPart.Anchored) or (c.Humanoid.SeatPart==nil and (c.Head.Velocity.Z^2)^.5<.0001)) then
			local dialog = c.Head.Dialog.Correct.ResponseDialog or ''
			local order = ""MountainDew""
			if dialog:sub(-8)==""instead."" then
				dialog = dialog:sub(-30)
			end
			if dialog:find(""pepperoni"",1,true) then
				order = ""PepperoniPizza""
			elseif dialog:find(""sausage"",1,true) then
				order = ""SausagePizza""
			elseif dialog:find(""cheese"",1,true) then
				order = ""CheesePizza""
			end
			return c,order
		end
	end
end

local boxPtick=0
local boxDtick=0
local function FindBoxes()
	local c,o,f
	local children = workspace.AllBox:GetChildren()
	for i=1,#children do
		local b = children[i]
		if ffc(b,""HasPizzaInside"") or ffc(b,""Pizza"") then
			if c==nil and b.Name==""BoxClosed"" and b.Anchored==false and not b.HasPizzaInside.Value then
				c=b
			elseif o==nil and b.Name==""BoxOpen"" and b.Anchored==false and not b.Pizza.Value then
				o=b
			elseif f==nil and (b.Name==""BoxOpen"" and b.Pizza.Value) or (b.Name==""BoxClosed"" and b.HasPizzaInside.Value) then
				f=b
			end
			if c and o and f then
				return c,o,f
			end
		end
	end
	return c,o,f
end
local function FindBoxingFoods()
	local p,d
	local children = workspace.BoxingRoom:GetChildren()
	for i=1,#children do
		local f = children[i]
		if not f.Anchored then
			if p==nil and f.Name==""Pizza"" then
				p=f
			elseif d==nil and f.Name==""Dew"" then
				d=f
			end
			if p and d then
				return p,d
			end
		end
	end
	return p,d
end

local orderDict={[""3540529228""]=""Cheese"",[""3540530535""]=""Sausage"",[""3540529917""]=""Pepperoni"",[""2512571151""]=""Dew"",[""2512441325""]=""Dew""}
local cookingDict = {Cheese=0,Sausage=0,Pepperoni=0,Dew=0}
local cookPtick=0
local cookDtick=0
local cookWarned=false
local boxerWarned=false
local function getOrders()
	local orders={}
	local tempCookingDict = {}
	for i,v in pairs(cookingDict) do tempCookingDict[i]=v end
	local children = workspace.Orders:GetChildren()
	for i=1,#children do
		local o = orderDict[children[i].SG.ImageLabel.Image:match(""%d+$"")]
		if o then
			if tempCookingDict[o]>0 then
				--ignores oven pizzas, so new orders are priority
				tempCookingDict[o]=tempCookingDict[o]-1
			elseif (o==""Dew"" and #workspace.AllMountainDew:GetChildren()>0) or (supplyCounts[o]>0 and supplyCounts.TomatoSauce>0 and supplyCounts.Cheese>0) then
				--need supplies
				orders[#orders+1]=o
			end
		end
	end
	return orders
end
local function FindFirstDew()
	local children = workspace.AllMountainDew:GetChildren()
	for i=1,#children do
		local d = children[i]
		if (ffc(d,""IsBurned"")==nil or d.IsBurned.Value==false) and not d.Anchored then
			return d
		end
	end
end
local function FindBadDew()
	local children = workspace.AllMountainDew:GetChildren()
	for i=1,#children do
		local d = children[i]
		if (ffc(d,""IsBurned"")==nil or d.IsBurned.Value==false) and d.Position.X > 53 and d.Position.Z > 50 and not d.Anchored then
			return d
		end
	end
end
local function FindDoughAndWithout(str)
	local goodraw,p,raw,trash
	local children = workspace.AllDough:GetChildren()
	for i = #children, 2, -1 do --shuffle
		local j = RNG:NextInteger(1, i)
		children[j], children[i] = children[i], children[j]
	end
	for i=1,#children do
		local d = children[i]
		if d.Anchored==false and #d:GetChildren()>9 then
			if d.IsBurned.Value or d.HasBugs.Value or d.Cold.Value or (d.BrickColor.Name==""Bright orange"" and ffc(d,""XBillboard"")) then
				if trash==nil and d.Position.Y > 0 and ((d.Position*Vector3.new(1,0,1))-Vector3.new(47.90, 0, 72.49)).Magnitude > 1 then
					trash=d
				end
			elseif p==nil and d.BrickColor.Name==""Bright orange"" then
				p=d
			elseif goodraw==nil and d.Position.X<55 and d.BrickColor.Name==""Brick yellow"" and ((str and not ffc(d.SG.Frame,str)) or (str==nil and ffc(d.SG.Frame,""Sausage"")==nil and ffc(d.SG.Frame,""Pepperoni"")==nil)) then
				--prefers flat
				if d.Mesh.Scale.Y<1.1 then
					goodraw=d
				else
					raw=d
				end
			end
			if goodraw and p and trash then
				return goodraw,p,trash
			end
		end
	end
	return goodraw or raw,p,trash
end
local function getOvenNear(pos)
	local children = workspace.Ovens:GetChildren()
	for i=1,#children do
		if ffc(children[i],""Bottom"") and (children[i].Bottom.Position-pos).magnitude < 1.5 then
			return children[i]
		end
	end
end
local function getDoughNear(pos)
	local children = workspace.AllDough:GetChildren()
	for i=1,#children do
		if (children[i].Position-pos).magnitude < 1.5 then
			return children[i]
		end
	end
end
local function isFullyOpen(oven)
	return oven.IsOpen.Value==true and (oven.Door.Meter.RotVelocity.Z^2)^.5<.0001
end

local bcolorToSupply = {[""Dark orange""]=""Sausage"",[""Bright blue""]=""Pepperoni"",[""Bright yellow""]=""Cheese"",[""Bright red""]=""TomatoSauce"",[""Navy blue""]=""Dew"",[""Brick yellow""]=""Dough"",[""Light stone grey""]=""Box"",[""Really black""]=""Dew""}
local supplyButtons = {}
for i,v in ipairs(workspace.SupplyButtons:GetChildren()) do
	supplyButtons[i] = v.Unpressed
end
table.sort(supplyButtons,function(a,b) return a.Position.X < b.Position.X end)
local delTick = 0
local function FindAllDeliveryTools(parent)
	local t = {}
	local children = parent:GetChildren()
	for i=1,#children do
		local v = children[i]
		if v.ClassName==""Tool"" and v.Name:match(""^%u%d$"") and ffc(v,""Handle"") and ffc(v,""House"") and (parent~=workspace or (v.Handle.Position-Vector3.new(54.45, 4.02, -16.56)).Magnitude < 30) then
			t[#t+1] = v
		end
	end
	return t
end
local function getHousePart(address)
    local houses = workspace.Houses:GetChildren()
    for i=1,#houses do
        local h = houses[i]
        if ffc(h,""Address"") and h.Address.Value==address and ffc(h,""GivePizza"",true) then
            return ffc(h,""GivePizza"",true)
        end
    end
end
local function onCharacterAdded(char)
	if not char then return end
	character=char
	root = character:WaitForChild(""HumanoidRootPart"")
	humanoid = character:WaitForChild(""Humanoid"")
	humanoid:SetStateEnabled(""FallingDown"",false)
end
onCharacterAdded(player.Character or player.CharacterAdded:Wait())
player.CharacterAdded:Connect(onCharacterAdded)

local function bypassTP2(cf)
	local cf0 = (cf-cf.p) + root.Position + Vector3.new(0,4,0)
	local diff = cf.p - root.Position
	local oldg = workspace.Gravity
	workspace.Gravity = 0
	for i=0,diff.Magnitude,0.9 do
		humanoid.Sit=false
		root.CFrame = cf0 + diff.Unit * i
		root.Velocity,root.RotVelocity=Vector3.new(),Vector3.new()
		wait()
	end
	root.CFrame = cf
	workspace.Gravity = oldg
end
local function bypassTP(cf)
    if (cf.p-root.Position).Magnitude > 5 then
        local btns = workspace.JobButtons:GetChildren()
        if player:FindFirstChild(""House"") and player.House.Value then
            btns[#btns+1] = player.House.Value:FindFirstChild(""Marker"") 
        end
        table.sort(btns,function(a,b) return (a.Position-cf.p).Magnitude < (b.Position-cf.p).Magnitude end)
        if (btns[1].Position-cf.p).Magnitude < (cf.p-root.Position).Magnitude then
            game:GetService(""ReplicatedStorage"").PlayerChannel:FireServer(""TeleportToJob"", ((btns[1].Name == ""Marker"") and ""House"" or btns[1].Name))
            wait(0.2)
            if (cf.p-root.Position).Magnitude < 1 then
                return
            end
        end
    end
    bypassTP2(cf)
end
for _,o in ipairs(workspace.Ovens:GetChildren()) do
	if ffc(o,""Bottom"") then
		o.Bottom.CanTouch = false
	end
end
local function tryCook()
	for zz=1,18 do
		local order = getOrders()[1]
		local topping
		if order==""Pepperoni"" or order==""Sausage"" then topping=order end
		local cookD = FindFirstDew()
		local badD = FindBadDew()
		local raw,cookP,trash
		if topping then
			--pepperoni order avoids sausage dough and vice verca
			raw,cookP,trash = FindDoughAndWithout(topping==""Pepperoni"" and ""Sausage"" or ""Pepperoni"")
		else
			raw,cookP,trash = FindDoughAndWithout()
		end
		local ovens = workspace.Ovens:GetChildren()
		for i=#ovens,1,-1 do
		    if #ovens[i]:GetChildren() < 10 then
		        table.remove(ovens,i)
		    end
		end
		for i = #ovens, 2, -1 do --shuffle
			local j = RNG:NextInteger(1, i)
			ovens[j], ovens[i] = ovens[i], ovens[j]
		end
		if doCook then
			local didsomething=false
			--move final pizza
			if cookP and tick()-cookPtick>0.8 then
				local oven = getOvenNear(cookP.Position)
				if oven==nil or oven.IsOpen.Value then
					cookPtick=tick()
					didsomething=true
					if (root.Position-Vector3.new(36.64, 3.80, 54.11)).magnitude>9 then  bypassTP(CFrame.new(36.64, 3.80, 54.11)) wait(.1) end
					network:FireServer(""UpdateProperty"", cookP, ""CFrame"", CFrame.new(RNG:NextNumber(56,57),4.1,38))
				end
			end
			if order then
				if order==""Dew"" and cookD and tick()-cookDtick>0.8 then
					--move dew if ordered
					cookDtick=tick()
					didsomething=true
					if (root.Position-Vector3.new(36.64, 3.80, 54.11)).magnitude>9 then  bypassTP(CFrame.new(36.64, 3.80, 54.11)) wait(.1) end
					network:FireServer(""UpdateProperty"", cookD, ""CFrame"", CFrame.new(53,4.68,36.5))
				elseif order~=""Dew"" and raw and raw.Parent and supplyCounts[order]>0 and supplyCounts.TomatoSauce>0 and supplyCounts.Cheese>0 then
					--make pizza
					if raw.Mesh.Scale.Y>1.5 then
						if (root.Position-Vector3.new(36.64, 3.80, 54.11)).magnitude>9 then  bypassTP(CFrame.new(36.64, 3.80, 54.11)) wait(.1) end
						didsomething=true
						network:FireServer(""UpdateProperty"", raw, ""CFrame"", CFrame.new(RNG:NextNumber(29.6,44.6),3.7,RNG:NextNumber(42.5,48.5)))
						wait()
						network:FireServer(""SquishDough"", raw)
					else
						--make sure it will have an oven
						local oven
						for _,o in ipairs(ovens) do
							if isFullyOpen(o) then
								local other = getDoughNear(o.Bottom.Position)
								if other==nil or not (other.BrickColor.Name==""Bright orange"" and ffc(other.SG.Frame,""TomatoSauce"") and ffc(other.SG.Frame,""MeltedCheese"")) then
									if other then
										--replace mistaken dough
										didsomething=true
										if (root.Position-Vector3.new(36.64, 3.80, 54.11)).magnitude>9 then  bypassTP(CFrame.new(36.64, 3.80, 54.11)) wait(.1) end
										network:FireServer(""UpdateProperty"", other, ""CFrame"", CFrame.new(RNG:NextNumber(29.6,44.6),3.7,RNG:NextNumber(42.5,48.5)))
										wait()
									end
									oven=o
									break
								end
							end
						end
						if oven and raw.Parent==workspace.AllDough then
							--make
							if (root.Position-Vector3.new(36.64, 3.80, 54.11)).magnitude>9 then  bypassTP(CFrame.new(36.64, 3.80, 54.11)) wait(.1) end
							didsomething=true
							network:FireServer(""AddIngredientToPizza"", raw,""TomatoSauce"")
							network:FireServer(""AddIngredientToPizza"", raw,""Cheese"")
							network:FireServer(""AddIngredientToPizza"", raw,topping)
							network:FireServer(""UpdateProperty"", raw, ""CFrame"", oven.Bottom.CFrame+Vector3.new(0,0.7,0))
							oven.Door.ClickDetector.Detector:FireServer()
							--mark as cooking
							cookingDict[order]=cookingDict[order]+1
							local revoked=false
							spawn(function()
								raw.AncestryChanged:Wait()
								if not revoked then
									cookingDict[order]=cookingDict[order]-1
									revoked=true
								end
							end)
							delay(40, function()
								if not revoked then
									cookingDict[order]=cookingDict[order]-1
									revoked=true
								end
							end)
						end
					end
				end
			end
			--open unnecessarily closed ovens
			for _,o in ipairs(ovens) do
				local bar = o.Door.Meter.SurfaceGui.ProgressBar.Bar
				if o.IsOpen.Value==false and (o.IsCooking.Value==false or (Vector3.new(bar.ImageColor3.r,bar.ImageColor3.g,bar.ImageColor3.b)-Vector3.new(.871,.518,.224)).magnitude>.1) then
					didsomething=true
					if (root.Position-Vector3.new(36.64, 3.80, 54.11)).magnitude>9 then  bypassTP(CFrame.new(36.64, 3.80, 54.11)) wait(.1) end
					o.Door.ClickDetector.Detector:FireServer()
					break
				end
			end
			--trash
			if badD then
				didsomething=true
				if (root.Position-Vector3.new(36.64, 3.80, 54.11)).magnitude>9 then  bypassTP(CFrame.new(36.64, 3.80, 54.11)) wait(.1) end
				network:FireServer(""UpdateProperty"", badD, ""CFrame"", CFrame.new(RNG:NextNumber(28,30), 1.7, RNG:NextNumber(55,57)))
			end
			if trash and (trash.IsBurned.Value==false or getOvenNear(trash.Position)==nil or getOvenNear(trash.Position).IsOpen.Value) then
				--closed oven breaks if you take burnt out of it
				didsomething=true
				if (root.Position-Vector3.new(36.64, 3.80, 54.11)).magnitude>9 then  bypassTP(CFrame.new(36.64, 3.80, 54.11)) wait(.1) end
				network:FireServer(""UpdateProperty"", trash, ""CFrame"", CFrame.new(47.90, 7.00, 72.49, 1, 0, -0, 0, 0, 1, 0, -1, 0))
			end
			if didsomething then wait(0.5) else break end
		else
			break
		end
	end
end
wait(1)
--//main loop
while gui.Parent do
	wait(0.9)
	humanoid.Sit=false
	if RNG:NextInteger(1,20)==1 then
        game:GetService(""VirtualInputManager""):SendKeyEvent(true,""Z"",false,game)
        wait()
        game:GetService(""VirtualInputManager""):SendKeyEvent(false,""Z"",false,game)
	end
	for zz=1,3 do
		local c,order = FindFirstCustomer()
		if doCashier and c and order then
			local reg = 3
			if c.Head.Position.X < 50 then
			    reg = 2
			elseif c.Head.Position.X < 70 then
			    reg = 1
			end
			network:FireServer(""OrderComplete"", c, order, workspace[""Register""..reg])
			wait(0.3)
		else
			break
		end
	end
	tryCook()
	for zz=1,7 do
		if doBoxer then
			local didsomething = false
			local boxP,boxD = FindBoxingFoods()
			local closedBox,openBox,fullBox = FindBoxes()
			if boxD and tick()-boxDtick>0.8 then
				boxDtick=tick()
				didsomething=true
				if (root.Position-Vector3.new(58.74, 3.80, 12.400)).magnitude>9 then  bypassTP(CFrame.new(58.74, 3.80, 12.40))wait(.1) continue end
				network:FireServer(""UpdateProperty"", boxD, ""CFrame"", CFrame.new(63,4.9,-1,-1,0,0,0,1,0,0,0,-1))
			end
			if fullBox then
				if fullBox.Name==""BoxOpen"" then
					didsomething=true
					if (root.Position-Vector3.new(58.74, 3.80, 12.400)).magnitude>9 then  bypassTP(CFrame.new(58.74, 3.80, 12.40))wait(.1) continue end
					network:FireServer(""CloseBox"", fullBox)
					--will be moved next loop
				elseif tick()-boxPtick>0.8 then
					didsomething=true
					if (root.Position-Vector3.new(58.74, 3.80, 12.400)).magnitude>9 then  bypassTP(CFrame.new(58.74, 3.80, 12.40))wait(.1) continue end
					network:FireServer(""UpdateProperty"", fullBox, ""CFrame"", CFrame.new(68.2,4.4,RNG:NextNumber(-3,-2),-1,0,0,0,1,0,0,0,-1))
					boxPtick=tick()
				end
			end
			if closedBox and not openBox then
				didsomething=true
				if (root.Position-Vector3.new(58.74, 3.80, 12.400)).magnitude>9 then  bypassTP(CFrame.new(58.74, 3.80, 12.40))wait(.1) continue end
				network:FireServer(""UpdateProperty"", closedBox, ""CFrame"", CFrame.new(RNG:NextNumber(62.5,70.5),3.5,RNG:NextNumber(11,25)))
				wait()
				network:FireServer(""OpenBox"", closedBox)
			end
			if openBox and boxP then
				didsomething=true
				if (root.Position-Vector3.new(58.74, 3.80, 12.400)).magnitude>9 then  bypassTP(CFrame.new(58.74, 3.80, 12.40))wait(.1) continue end
				network:FireServer(""UpdateProperty"", boxP, ""Anchored"", true)
				network:FireServer(""UpdateProperty"", openBox, ""Anchored"", true)
				wait()
				network:FireServer(""UpdateProperty"", boxP, ""CFrame"", openBox.CFrame+Vector3.new(0,-2,0))
				wait()
				network:FireServer(""AssignPizzaToBox"", openBox, boxP)
			end
			if didsomething then wait(0.5) else break end
		else
			break
		end
	end
	if doDelivery then
		local wstools = FindAllDeliveryTools(workspace)
		if #wstools > 1 or (wstools[1] and ffc(wstools[1].Handle,""X10"")) then
			--get tools
			if (root.Position-Vector3.new(54.45, 4.02, -15)).magnitude>9 then bypassTP(CFrame.new(54.45, 4.02, -15)) wait(.01) end
			for i=1,#wstools do
				if wstools[i].Parent == workspace then
					humanoid:EquipTool(wstools[i])
					wait()
				end
			end
			wait(0.3)
			local t = FindAllDeliveryTools(character)
    		for i=1,#t do
    			t[i].Parent = player.Backpack
    		end
    		wait(0.1)
    		if ffc(character,""RightHand"") and ffc(character.RightHand,""RightGrip"") then
    			character.RightHand.RightGrip:Destroy()
    		end
		end
		local bptools = FindAllDeliveryTools(player.Backpack)
		if #bptools >= settings.deliver_at and #bptools > 0 and tick()-delTick > 30 then
			--deliver to houses
			table.sort(bptools,function(a,b)
				a,b=tostring(a),tostring(b)
				if (a:sub(1,1)==""B"" and b:sub(1,1)==""B"") then
					return a < b
				end
				return a > b
			end)
			local fatass=false
			for i=1,#bptools do
				if not doDelivery then
					break
				end
				humanoid.Sit=false
				local tool = bptools[i]
				local giver = getHousePart(tool.Name)
				local ogp = giver.Position
				if giver then
					if (giver.Position-root.Position).Magnitude > 9 then
						bypassTP(giver.CFrame+Vector3.new(0,7,0))
						if giver.Parent==nil or (giver.Position-ogp).Magnitude>1 then
							giver = getHousePart(tool.Name) or giver
							bypassTP(giver.CFrame+Vector3.new(0,7,0))
						end
						pcall(function() tool.Parent = character end)
						wait(0.5)
						local t = FindAllDeliveryTools(character)
                		for i=1,#t do
                		    if t[i] ~= tool then
                			    t[i].Parent = player.Backpack
                			end
                		end
						wait(2)
						fatass=false
					else
						if fatass then
							wait(0.2)
						else
							wait(0.7)
						end
						pcall(function() tool.Parent = character end)
						wait()
						fatass=true
					end
				end
			end
			delTick = tick()
		end
	end
	tryCook()
	if doSupplier then
		local refill=false
		for s,c in pairs(supplyCounts) do
			if c <= settings.refill_at then
				refill=true
				break
			end
		end
		if refill then
			local oldcf = root.CFrame
			local waiting = false
			local waitingTick = 0
			local lastBox
			while doSupplier do
				--check if refill is done otherwise hit buttons
				local fulfilled=true
				local boxes = workspace.AllSupplyBoxes:GetChildren()
				for yy=1,2 do
				local needtp=true
				local realc = 0
				for _,btn in ipairs(supplyButtons) do
				    local s = bcolorToSupply[btn.BrickColor.Name]
					if supplyCounts[s] < settings.refill_end then
						local count = 0
						if #boxes > 30 then
							for i=1,#boxes do
								local box = boxes[i]
								if bcolorToSupply[box.BrickColor.Name]==s and box.Anchored==false and box.Position.Z < -940 then
									count=count+1
								end
							end
						end
						if count < 2 then
							if needtp then
							    needtp=false
								bypassTP(btn.CFrame + Vector3.new(0,3,2.5))
								wait(0.1)
							end
							if not doSupplier then break end
							root.CFrame = btn.CFrame + Vector3.new(0,3,0)
							wait(0.1)
							realc=realc+1
						end
						fulfilled=false
					end
				end
				wait(0.2)
				if yy == 1 and realc < 3 then
				    wait(0.6)
				end
				end
				if fulfilled or not (doSupplier) then
					break
				end
				bypassTP(CFrame.new(8,12.4,-1020))
				if not doSupplier then break end
				--check if can finish waiting for boxes to move
				if waiting and (lastBox.Position.X>42 or tick()-waitingTick>6) then
					waiting=false
					if lastBox.Position.X<42 then
						--clear boxes if stuck
						bypassTP(CFrame.new(20.5,8,-35))
						wait(0.1)
						local boxes = workspace.AllSupplyBoxes:GetChildren()
						for i=1,#boxes do
							local box = boxes[i]
							if box.Anchored==false and box.Position.Z>-55 then
								network:FireServer(""UpdateProperty"", box, ""CFrame"", CFrame.new(RNG:NextNumber(0,40),RNG:NextNumber(-10,-30),-70))
								wait()
							end
						end
						wait(0.1)
					end
				end
				if not waiting then
					--move boxes
					if root.Position.Z > -900 then bypassTP(CFrame.new(8,12.4,-1020)) end
					wait(0.1)
					lastBox=nil
					local j=0
					local boxes = workspace.AllSupplyBoxes:GetChildren()
					for i=1,#boxes do
						local box = boxes[i]
						if box.Anchored==false and box.Position.Z < -940 and bcolorToSupply[box.BrickColor.Name] and supplyCounts[bcolorToSupply[box.BrickColor.Name]]<settings.refill_end then
							box.CFrame = CFrame.new(38-4.3*math.floor(j/2),5,-7-5*(j%2))
							network:FireServer(""UpdateProperty"", box, ""CFrame"", box.CFrame)
							lastBox=box
							j=j+1
							if j>13 then break end
						end
					end
					if lastBox then
						waiting=true
						waitingTick=tick()
					end
				end
			end
			--bypassTP(oldcf)
		end
	end
end"
7KqAkr4b,Crypto Prices,actorcat,VisualBasic,Sunday 17th of March 2024 12:31:49 PM CDT,"'''must change module name to JsonConverter
'''must reference Microsoft Scripting Runtime, Microsoft Internet Controls, Microsoft HTML Object Library...
'''https://www.etsy.com/shop/ExcelByActorkitten


'''COPY SUB AND PASTE INTO ANOTHER MODULE THEN UNCOMMENT...
'Sub Crypto_Prices()
'''put crypto on column A,,, BTC, ETH, DOGE,,, ETC...
'''put currency on row 1,,, USD, CAD, YEN,,, ETC...
'Dim strURL As String, strJSON As String, strTicker As String, strCurrency As String, strLength As String
'Dim i As Integer
'Dim i2 As Integer
'Dim http As Object
'Dim Json As Object
'Dim lastcolumn As Long
'Dim lastrow As Long
'With ActiveSheet
'    lastcolumn = .Cells(1, .Columns.Count).End(xlToLeft).Column
'    lastrow = .Cells(Rows.Count, 1).End(xlUp).Row
'End With
'For i = 2 To lastrow
'    For i2 = 2 To lastcolumn
'    strCurrency = Cells(1, i2).Value
'    strTicker = Cells(i, 1).Value
'    strURL = ""https://min-api.cryptocompare.com/data/histoday?fsym="" & strTicker & ""&tsym="" & strCurrency & ""&limit=60&aggregate=3&e=CCCAGG""
'    Set http = CreateObject(""MSXML2.XMLHTTP"")
'    http.Open ""GET"", strURL, False
'    http.Send
'    strJSON = http.responsetext

'''Debug.Print http.responsetext: Stop

'    Set Json = JsonConverter.ParseJson(strJSON)
'    On Error Resume Next
'    Cells(i, i2).Value = Json(""Data"")(61)(""close"")
'If Err.Number = 13 Then MsgBox strTicker & "" error""
'    DoEvents
'    Next i2
'DoEvents
'Next i
'End Sub







' VBA-JSON v2.3.1
' (c) Tim Hall - https://github.com/VBA-tools/VBA-JSON
'
' JSON Converter for VBA
'
' Errors:
' 10001 - JSON parse error
'
' @class JsonConverter
' @author tim.hall.engr@gmail.com
' @license MIT (http://www.opensource.org/licenses/mit-license.php)
'' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ '
'
' Based originally on vba-json (with extensive changes)
' BSD license included below
'
' JSONLib, http://code.google.com/p/vba-json/
'
' Copyright (c) 2013, Ryo Yokoyama
' All rights reserved.
'
' Redistribution and use in source and binary forms, with or without
' modification, are permitted provided that the following conditions are met:
'     * Redistributions of source code must retain the above copyright
'       notice, this list of conditions and the following disclaimer.
'     * Redistributions in binary form must reproduce the above copyright
'       notice, this list of conditions and the following disclaimer in the
'       documentation and/or other materials provided with the distribution.
'     * Neither the name of the <organization> nor the
'       names of its contributors may be used to endorse or promote products
'       derived from this software without specific prior written permission.
'
' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
' ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
' WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
' DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
' DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
' (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
' LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
' ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
' (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
' SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ '
Option Explicit

' === VBA-UTC Headers
#If Mac Then

#If VBA7 Then

' 64-bit Mac (2016)
Private Declare PtrSafe Function utc_popen Lib ""/usr/lib/libc.dylib"" Alias ""popen"" _
    (ByVal utc_Command As String, ByVal utc_Mode As String) As LongPtr
Private Declare PtrSafe Function utc_pclose Lib ""/usr/lib/libc.dylib"" Alias ""pclose"" _
    (ByVal utc_File As LongPtr) As LongPtr
Private Declare PtrSafe Function utc_fread Lib ""/usr/lib/libc.dylib"" Alias ""fread"" _
    (ByVal utc_Buffer As String, ByVal utc_Size As LongPtr, ByVal utc_Number As LongPtr, ByVal utc_File As LongPtr) As LongPtr
Private Declare PtrSafe Function utc_feof Lib ""/usr/lib/libc.dylib"" Alias ""feof"" _
    (ByVal utc_File As LongPtr) As LongPtr

#Else

' 32-bit Mac
Private Declare Function utc_popen Lib ""libc.dylib"" Alias ""popen"" _
    (ByVal utc_Command As String, ByVal utc_Mode As String) As Long
Private Declare Function utc_pclose Lib ""libc.dylib"" Alias ""pclose"" _
    (ByVal utc_File As Long) As Long
Private Declare Function utc_fread Lib ""libc.dylib"" Alias ""fread"" _
    (ByVal utc_Buffer As String, ByVal utc_Size As Long, ByVal utc_Number As Long, ByVal utc_File As Long) As Long
Private Declare Function utc_feof Lib ""libc.dylib"" Alias ""feof"" _
    (ByVal utc_File As Long) As Long

#End If

#ElseIf VBA7 Then

' http://msdn.microsoft.com/en-us/library/windows/desktop/ms724421.aspx
' http://msdn.microsoft.com/en-us/library/windows/desktop/ms724949.aspx
' http://msdn.microsoft.com/en-us/library/windows/desktop/ms725485.aspx
Private Declare PtrSafe Function utc_GetTimeZoneInformation Lib ""kernel32"" Alias ""GetTimeZoneInformation"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION) As Long
Private Declare PtrSafe Function utc_SystemTimeToTzSpecificLocalTime Lib ""kernel32"" Alias ""SystemTimeToTzSpecificLocalTime"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION, utc_lpUniversalTime As utc_SYSTEMTIME, utc_lpLocalTime As utc_SYSTEMTIME) As Long
Private Declare PtrSafe Function utc_TzSpecificLocalTimeToSystemTime Lib ""kernel32"" Alias ""TzSpecificLocalTimeToSystemTime"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION, utc_lpLocalTime As utc_SYSTEMTIME, utc_lpUniversalTime As utc_SYSTEMTIME) As Long

#Else

Private Declare Function utc_GetTimeZoneInformation Lib ""kernel32"" Alias ""GetTimeZoneInformation"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION) As Long
Private Declare Function utc_SystemTimeToTzSpecificLocalTime Lib ""kernel32"" Alias ""SystemTimeToTzSpecificLocalTime"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION, utc_lpUniversalTime As utc_SYSTEMTIME, utc_lpLocalTime As utc_SYSTEMTIME) As Long
Private Declare Function utc_TzSpecificLocalTimeToSystemTime Lib ""kernel32"" Alias ""TzSpecificLocalTimeToSystemTime"" _
    (utc_lpTimeZoneInformation As utc_TIME_ZONE_INFORMATION, utc_lpLocalTime As utc_SYSTEMTIME, utc_lpUniversalTime As utc_SYSTEMTIME) As Long

#End If

#If Mac Then

#If VBA7 Then
Private Type utc_ShellResult
    utc_Output As String
    utc_ExitCode As LongPtr
End Type

#Else

Private Type utc_ShellResult
    utc_Output As String
    utc_ExitCode As Long
End Type

#End If

#Else

Private Type utc_SYSTEMTIME
    utc_wYear As Integer
    utc_wMonth As Integer
    utc_wDayOfWeek As Integer
    utc_wDay As Integer
    utc_wHour As Integer
    utc_wMinute As Integer
    utc_wSecond As Integer
    utc_wMilliseconds As Integer
End Type

Private Type utc_TIME_ZONE_INFORMATION
    utc_Bias As Long
    utc_StandardName(0 To 31) As Integer
    utc_StandardDate As utc_SYSTEMTIME
    utc_StandardBias As Long
    utc_DaylightName(0 To 31) As Integer
    utc_DaylightDate As utc_SYSTEMTIME
    utc_DaylightBias As Long
End Type

#End If
' === End VBA-UTC

Private Type json_Options
    ' VBA only stores 15 significant digits, so any numbers larger than that are truncated
    ' This can lead to issues when BIGINT's are used (e.g. for Ids or Credit Cards), as they will be invalid above 15 digits
    ' See: http://support.microsoft.com/kb/269370
    '
    ' By default, VBA-JSON will use String for numbers longer than 15 characters that contain only digits
    ' to override set `JsonConverter.JsonOptions.UseDoubleForLargeNumbers = True`
    UseDoubleForLargeNumbers As Boolean

    ' The JSON standard requires object keys to be quoted ("" or '), use this option to allow unquoted keys
    AllowUnquotedKeys As Boolean

    ' The solidus (/) is not required to be escaped, use this option to escape them as \/ in ConvertToJson
    EscapeSolidus As Boolean
End Type
Public JsonOptions As json_Options

' ============================================= '
' Public Methods
' ============================================= '

''
' Convert JSON string to object (Dictionary/Collection)
'
' @method ParseJson
' @param {String} json_String
' @return {Object} (Dictionary or Collection)
' @throws 10001 - JSON parse error
''
Public Function ParseJson(ByVal JsonString As String) As Object
    Dim json_Index As Long
    json_Index = 1

    ' Remove vbCr, vbLf, and vbTab from json_String
    JsonString = VBA.Replace(VBA.Replace(VBA.Replace(JsonString, VBA.vbCr, """"), VBA.vbLf, """"), VBA.vbTab, """")

    json_SkipSpaces JsonString, json_Index
    Select Case VBA.Mid$(JsonString, json_Index, 1)
    Case ""{""
        Set ParseJson = json_ParseObject(JsonString, json_Index)
    Case ""[""
        Set ParseJson = json_ParseArray(JsonString, json_Index)
    Case Else
        ' Error: Invalid JSON string
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(JsonString, json_Index, ""Expecting '{' or '['"")
    End Select
End Function

''
' Convert object (Dictionary/Collection/Array) to JSON
'
' @method ConvertToJson
' @param {Variant} JsonValue (Dictionary, Collection, or Array)
' @param {Integer|String} Whitespace ""Pretty"" print json with given number of spaces per indentation (Integer) or given string
' @return {String}
''
Public Function ConvertToJson(ByVal JsonValue As Variant, Optional ByVal Whitespace As Variant, Optional ByVal json_CurrentIndentation As Long = 0) As String
    Dim json_Buffer As String
    Dim json_BufferPosition As Long
    Dim json_BufferLength As Long
    Dim json_Index As Long
    Dim json_LBound As Long
    Dim json_UBound As Long
    Dim json_IsFirstItem As Boolean
    Dim json_Index2D As Long
    Dim json_LBound2D As Long
    Dim json_UBound2D As Long
    Dim json_IsFirstItem2D As Boolean
    Dim json_Key As Variant
    Dim json_Value As Variant
    Dim json_DateStr As String
    Dim json_Converted As String
    Dim json_SkipItem As Boolean
    Dim json_PrettyPrint As Boolean
    Dim json_Indentation As String
    Dim json_InnerIndentation As String

    json_LBound = -1
    json_UBound = -1
    json_IsFirstItem = True
    json_LBound2D = -1
    json_UBound2D = -1
    json_IsFirstItem2D = True
    json_PrettyPrint = Not IsMissing(Whitespace)

    Select Case VBA.VarType(JsonValue)
    Case VBA.vbNull
        ConvertToJson = ""null""
    Case VBA.vbDate
        ' Date
        json_DateStr = ConvertToIso(VBA.CDate(JsonValue))

        ConvertToJson = """""""" & json_DateStr & """"""""
    Case VBA.vbString
        ' String (or large number encoded as string)
        If Not JsonOptions.UseDoubleForLargeNumbers And json_StringIsLargeNumber(JsonValue) Then
            ConvertToJson = JsonValue
        Else
            ConvertToJson = """""""" & json_Encode(JsonValue) & """"""""
        End If
    Case VBA.vbBoolean
        If JsonValue Then
            ConvertToJson = ""true""
        Else
            ConvertToJson = ""false""
        End If
    Case VBA.vbArray To VBA.vbArray + VBA.vbByte
        If json_PrettyPrint Then
            If VBA.VarType(Whitespace) = VBA.vbString Then
                json_Indentation = VBA.String$(json_CurrentIndentation + 1, Whitespace)
                json_InnerIndentation = VBA.String$(json_CurrentIndentation + 2, Whitespace)
            Else
                json_Indentation = VBA.Space$((json_CurrentIndentation + 1) * Whitespace)
                json_InnerIndentation = VBA.Space$((json_CurrentIndentation + 2) * Whitespace)
            End If
        End If

        ' Array
        json_BufferAppend json_Buffer, ""["", json_BufferPosition, json_BufferLength

        On Error Resume Next

        json_LBound = LBound(JsonValue, 1)
        json_UBound = UBound(JsonValue, 1)
        json_LBound2D = LBound(JsonValue, 2)
        json_UBound2D = UBound(JsonValue, 2)

        If json_LBound >= 0 And json_UBound >= 0 Then
            For json_Index = json_LBound To json_UBound
                If json_IsFirstItem Then
                    json_IsFirstItem = False
                Else
                    ' Append comma to previous line
                    json_BufferAppend json_Buffer, "","", json_BufferPosition, json_BufferLength
                End If

                If json_LBound2D >= 0 And json_UBound2D >= 0 Then
                    ' 2D Array
                    If json_PrettyPrint Then
                        json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength
                    End If
                    json_BufferAppend json_Buffer, json_Indentation & ""["", json_BufferPosition, json_BufferLength

                    For json_Index2D = json_LBound2D To json_UBound2D
                        If json_IsFirstItem2D Then
                            json_IsFirstItem2D = False
                        Else
                            json_BufferAppend json_Buffer, "","", json_BufferPosition, json_BufferLength
                        End If

                        json_Converted = ConvertToJson(JsonValue(json_Index, json_Index2D), Whitespace, json_CurrentIndentation + 2)

                        ' For Arrays/Collections, undefined (Empty/Nothing) is treated as null
                        If json_Converted = """" Then
                            ' (nest to only check if converted = """")
                            If json_IsUndefined(JsonValue(json_Index, json_Index2D)) Then
                                json_Converted = ""null""
                            End If
                        End If

                        If json_PrettyPrint Then
                            json_Converted = vbNewLine & json_InnerIndentation & json_Converted
                        End If

                        json_BufferAppend json_Buffer, json_Converted, json_BufferPosition, json_BufferLength
                    Next json_Index2D

                    If json_PrettyPrint Then
                        json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength
                    End If

                    json_BufferAppend json_Buffer, json_Indentation & ""]"", json_BufferPosition, json_BufferLength
                    json_IsFirstItem2D = True
                Else
                    ' 1D Array
                    json_Converted = ConvertToJson(JsonValue(json_Index), Whitespace, json_CurrentIndentation + 1)

                    ' For Arrays/Collections, undefined (Empty/Nothing) is treated as null
                    If json_Converted = """" Then
                        ' (nest to only check if converted = """")
                        If json_IsUndefined(JsonValue(json_Index)) Then
                            json_Converted = ""null""
                        End If
                    End If

                    If json_PrettyPrint Then
                        json_Converted = vbNewLine & json_Indentation & json_Converted
                    End If

                    json_BufferAppend json_Buffer, json_Converted, json_BufferPosition, json_BufferLength
                End If
            Next json_Index
        End If

        On Error GoTo 0

        If json_PrettyPrint Then
            json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength

            If VBA.VarType(Whitespace) = VBA.vbString Then
                json_Indentation = VBA.String$(json_CurrentIndentation, Whitespace)
            Else
                json_Indentation = VBA.Space$(json_CurrentIndentation * Whitespace)
            End If
        End If

        json_BufferAppend json_Buffer, json_Indentation & ""]"", json_BufferPosition, json_BufferLength

        ConvertToJson = json_BufferToString(json_Buffer, json_BufferPosition)

    ' Dictionary or Collection
    Case VBA.vbObject
        If json_PrettyPrint Then
            If VBA.VarType(Whitespace) = VBA.vbString Then
                json_Indentation = VBA.String$(json_CurrentIndentation + 1, Whitespace)
            Else
                json_Indentation = VBA.Space$((json_CurrentIndentation + 1) * Whitespace)
            End If
        End If

        ' Dictionary
        If VBA.TypeName(JsonValue) = ""Dictionary"" Then
            json_BufferAppend json_Buffer, ""{"", json_BufferPosition, json_BufferLength
            For Each json_Key In JsonValue.Keys
                ' For Objects, undefined (Empty/Nothing) is not added to object
                json_Converted = ConvertToJson(JsonValue(json_Key), Whitespace, json_CurrentIndentation + 1)
                If json_Converted = """" Then
                    json_SkipItem = json_IsUndefined(JsonValue(json_Key))
                Else
                    json_SkipItem = False
                End If

                If Not json_SkipItem Then
                    If json_IsFirstItem Then
                        json_IsFirstItem = False
                    Else
                        json_BufferAppend json_Buffer, "","", json_BufferPosition, json_BufferLength
                    End If

                    If json_PrettyPrint Then
                        json_Converted = vbNewLine & json_Indentation & """""""" & json_Key & """""": "" & json_Converted
                    Else
                        json_Converted = """""""" & json_Key & """""":"" & json_Converted
                    End If

                    json_BufferAppend json_Buffer, json_Converted, json_BufferPosition, json_BufferLength
                End If
            Next json_Key

            If json_PrettyPrint Then
                json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength

                If VBA.VarType(Whitespace) = VBA.vbString Then
                    json_Indentation = VBA.String$(json_CurrentIndentation, Whitespace)
                Else
                    json_Indentation = VBA.Space$(json_CurrentIndentation * Whitespace)
                End If
            End If

            json_BufferAppend json_Buffer, json_Indentation & ""}"", json_BufferPosition, json_BufferLength

        ' Collection
        ElseIf VBA.TypeName(JsonValue) = ""Collection"" Then
            json_BufferAppend json_Buffer, ""["", json_BufferPosition, json_BufferLength
            For Each json_Value In JsonValue
                If json_IsFirstItem Then
                    json_IsFirstItem = False
                Else
                    json_BufferAppend json_Buffer, "","", json_BufferPosition, json_BufferLength
                End If

                json_Converted = ConvertToJson(json_Value, Whitespace, json_CurrentIndentation + 1)

                ' For Arrays/Collections, undefined (Empty/Nothing) is treated as null
                If json_Converted = """" Then
                    ' (nest to only check if converted = """")
                    If json_IsUndefined(json_Value) Then
                        json_Converted = ""null""
                    End If
                End If

                If json_PrettyPrint Then
                    json_Converted = vbNewLine & json_Indentation & json_Converted
                End If

                json_BufferAppend json_Buffer, json_Converted, json_BufferPosition, json_BufferLength
            Next json_Value

            If json_PrettyPrint Then
                json_BufferAppend json_Buffer, vbNewLine, json_BufferPosition, json_BufferLength

                If VBA.VarType(Whitespace) = VBA.vbString Then
                    json_Indentation = VBA.String$(json_CurrentIndentation, Whitespace)
                Else
                    json_Indentation = VBA.Space$(json_CurrentIndentation * Whitespace)
                End If
            End If

            json_BufferAppend json_Buffer, json_Indentation & ""]"", json_BufferPosition, json_BufferLength
        End If

        ConvertToJson = json_BufferToString(json_Buffer, json_BufferPosition)
    Case VBA.vbInteger, VBA.vbLong, VBA.vbSingle, VBA.vbDouble, VBA.vbCurrency, VBA.vbDecimal
        ' Number (use decimals for numbers)
        ConvertToJson = VBA.Replace(JsonValue, "","", ""."")
    Case Else
        ' vbEmpty, vbError, vbDataObject, vbByte, vbUserDefinedType
        ' Use VBA's built-in to-string
        On Error Resume Next
        ConvertToJson = JsonValue
        On Error GoTo 0
    End Select
End Function

' ============================================= '
' Private Functions
' ============================================= '

Private Function json_ParseObject(json_String As String, ByRef json_Index As Long) As Dictionary
    Dim json_Key As String
    Dim json_NextChar As String

    Set json_ParseObject = New Dictionary
    json_SkipSpaces json_String, json_Index
    If VBA.Mid$(json_String, json_Index, 1) <> ""{"" Then
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting '{'"")
    Else
        json_Index = json_Index + 1

        Do
            json_SkipSpaces json_String, json_Index
            If VBA.Mid$(json_String, json_Index, 1) = ""}"" Then
                json_Index = json_Index + 1
                Exit Function
            ElseIf VBA.Mid$(json_String, json_Index, 1) = "","" Then
                json_Index = json_Index + 1
                json_SkipSpaces json_String, json_Index
            End If

            json_Key = json_ParseKey(json_String, json_Index)
            json_NextChar = json_Peek(json_String, json_Index)
            If json_NextChar = ""["" Or json_NextChar = ""{"" Then
                Set json_ParseObject.item(json_Key) = json_ParseValue(json_String, json_Index)
            Else
                json_ParseObject.item(json_Key) = json_ParseValue(json_String, json_Index)
            End If
        Loop
    End If
End Function

Private Function json_ParseArray(json_String As String, ByRef json_Index As Long) As Collection
    Set json_ParseArray = New Collection

    json_SkipSpaces json_String, json_Index
    If VBA.Mid$(json_String, json_Index, 1) <> ""["" Then
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting '['"")
    Else
        json_Index = json_Index + 1

        Do
            json_SkipSpaces json_String, json_Index
            If VBA.Mid$(json_String, json_Index, 1) = ""]"" Then
                json_Index = json_Index + 1
                Exit Function
            ElseIf VBA.Mid$(json_String, json_Index, 1) = "","" Then
                json_Index = json_Index + 1
                json_SkipSpaces json_String, json_Index
            End If

            json_ParseArray.Add json_ParseValue(json_String, json_Index)
        Loop
    End If
End Function

Private Function json_ParseValue(json_String As String, ByRef json_Index As Long) As Variant
    json_SkipSpaces json_String, json_Index
    Select Case VBA.Mid$(json_String, json_Index, 1)
    Case ""{""
        Set json_ParseValue = json_ParseObject(json_String, json_Index)
    Case ""[""
        Set json_ParseValue = json_ParseArray(json_String, json_Index)
    Case """""""", ""'""
        json_ParseValue = json_ParseString(json_String, json_Index)
    Case Else
        If VBA.Mid$(json_String, json_Index, 4) = ""true"" Then
            json_ParseValue = True
            json_Index = json_Index + 4
        ElseIf VBA.Mid$(json_String, json_Index, 5) = ""false"" Then
            json_ParseValue = False
            json_Index = json_Index + 5
        ElseIf VBA.Mid$(json_String, json_Index, 4) = ""null"" Then
            json_ParseValue = Null
            json_Index = json_Index + 4
        ElseIf VBA.InStr(""+-0123456789"", VBA.Mid$(json_String, json_Index, 1)) Then
            json_ParseValue = json_ParseNumber(json_String, json_Index)
        Else
            Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting 'STRING', 'NUMBER', null, true, false, '{', or '['"")
        End If
    End Select
End Function

Private Function json_ParseString(json_String As String, ByRef json_Index As Long) As String
    Dim json_Quote As String
    Dim json_Char As String
    Dim json_Code As String
    Dim json_Buffer As String
    Dim json_BufferPosition As Long
    Dim json_BufferLength As Long

    json_SkipSpaces json_String, json_Index

    ' Store opening quote to look for matching closing quote
    json_Quote = VBA.Mid$(json_String, json_Index, 1)
    json_Index = json_Index + 1

    Do While json_Index > 0 And json_Index <= Len(json_String)
        json_Char = VBA.Mid$(json_String, json_Index, 1)

        Select Case json_Char
        Case ""\""
            ' Escaped string, \\, or \/
            json_Index = json_Index + 1
            json_Char = VBA.Mid$(json_String, json_Index, 1)

            Select Case json_Char
            Case """""""", ""\"", ""/"", ""'""
                json_BufferAppend json_Buffer, json_Char, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""b""
                json_BufferAppend json_Buffer, vbBack, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""f""
                json_BufferAppend json_Buffer, vbFormFeed, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""n""
                json_BufferAppend json_Buffer, vbCrLf, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""r""
                json_BufferAppend json_Buffer, vbCr, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""t""
                json_BufferAppend json_Buffer, vbTab, json_BufferPosition, json_BufferLength
                json_Index = json_Index + 1
            Case ""u""
                ' Unicode character escape (e.g. \u00a9 = Copyright)
                json_Index = json_Index + 1
                json_Code = VBA.Mid$(json_String, json_Index, 4)
                json_BufferAppend json_Buffer, VBA.ChrW(VBA.Val(""&h"" + json_Code)), json_BufferPosition, json_BufferLength
                json_Index = json_Index + 4
            End Select
        Case json_Quote
            json_ParseString = json_BufferToString(json_Buffer, json_BufferPosition)
            json_Index = json_Index + 1
            Exit Function
        Case Else
            json_BufferAppend json_Buffer, json_Char, json_BufferPosition, json_BufferLength
            json_Index = json_Index + 1
        End Select
    Loop
End Function

Private Function json_ParseNumber(json_String As String, ByRef json_Index As Long) As Variant
    Dim json_Char As String
    Dim json_Value As String
    Dim json_IsLargeNumber As Boolean

    json_SkipSpaces json_String, json_Index

    Do While json_Index > 0 And json_Index <= Len(json_String)
        json_Char = VBA.Mid$(json_String, json_Index, 1)

        If VBA.InStr(""+-0123456789.eE"", json_Char) Then
            ' Unlikely to have massive number, so use simple append rather than buffer here
            json_Value = json_Value & json_Char
            json_Index = json_Index + 1
        Else
            ' Excel only stores 15 significant digits, so any numbers larger than that are truncated
            ' This can lead to issues when BIGINT's are used (e.g. for Ids or Credit Cards), as they will be invalid above 15 digits
            ' See: http://support.microsoft.com/kb/269370
            '
            ' Fix: Parse -> String, Convert -> String longer than 15/16 characters containing only numbers and decimal points -> Number
            ' (decimal doesn't factor into significant digit count, so if present check for 15 digits + decimal = 16)
            json_IsLargeNumber = IIf(InStr(json_Value, "".""), Len(json_Value) >= 17, Len(json_Value) >= 16)
            If Not JsonOptions.UseDoubleForLargeNumbers And json_IsLargeNumber Then
                json_ParseNumber = json_Value
            Else
                ' VBA.Val does not use regional settings, so guard for comma is not needed
                json_ParseNumber = VBA.Val(json_Value)
            End If
            Exit Function
        End If
    Loop
End Function

Private Function json_ParseKey(json_String As String, ByRef json_Index As Long) As String
    ' Parse key with single or double quotes
    If VBA.Mid$(json_String, json_Index, 1) = """""""" Or VBA.Mid$(json_String, json_Index, 1) = ""'"" Then
        json_ParseKey = json_ParseString(json_String, json_Index)
    ElseIf JsonOptions.AllowUnquotedKeys Then
        Dim json_Char As String
        Do While json_Index > 0 And json_Index <= Len(json_String)
            json_Char = VBA.Mid$(json_String, json_Index, 1)
            If (json_Char <> "" "") And (json_Char <> "":"") Then
                json_ParseKey = json_ParseKey & json_Char
                json_Index = json_Index + 1
            Else
                Exit Do
            End If
        Loop
    Else
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting '""""' or '''"")
    End If

    ' Check for colon and skip if present or throw if not present
    json_SkipSpaces json_String, json_Index
    If VBA.Mid$(json_String, json_Index, 1) <> "":"" Then
        Err.Raise 10001, ""JSONConverter"", json_ParseErrorMessage(json_String, json_Index, ""Expecting ':'"")
    Else
        json_Index = json_Index + 1
    End If
End Function

Private Function json_IsUndefined(ByVal json_Value As Variant) As Boolean
    ' Empty / Nothing -> undefined
    Select Case VBA.VarType(json_Value)
    Case VBA.vbEmpty
        json_IsUndefined = True
    Case VBA.vbObject
        Select Case VBA.TypeName(json_Value)
        Case ""Empty"", ""Nothing""
            json_IsUndefined = True
        End Select
    End Select
End Function

Private Function json_Encode(ByVal json_Text As Variant) As String
    ' Reference: http://www.ietf.org/rfc/rfc4627.txt
    ' Escape: "", \, /, backspace, form feed, line feed, carriage return, tab
    Dim json_Index As Long
    Dim json_Char As String
    Dim json_AscCode As Long
    Dim json_Buffer As String
    Dim json_BufferPosition As Long
    Dim json_BufferLength As Long

    For json_Index = 1 To VBA.Len(json_Text)
        json_Char = VBA.Mid$(json_Text, json_Index, 1)
        json_AscCode = VBA.AscW(json_Char)

        ' When AscW returns a negative number, it returns the twos complement form of that number.
        ' To convert the twos complement notation into normal binary notation, add 0xFFF to the return result.
        ' https://support.microsoft.com/en-us/kb/272138
        If json_AscCode < 0 Then
            json_AscCode = json_AscCode + 65536
        End If

        ' From spec, "", \, and control characters must be escaped (solidus is optional)

        Select Case json_AscCode
        Case 34
            ' "" -> 34 -> \""
            json_Char = ""\""""""
        Case 92
            ' \ -> 92 -> \\
            json_Char = ""\\""
        Case 47
            ' / -> 47 -> \/ (optional)
            If JsonOptions.EscapeSolidus Then
                json_Char = ""\/""
            End If
        Case 8
            ' backspace -> 8 -> \b
            json_Char = ""\b""
        Case 12
            ' form feed -> 12 -> \f
            json_Char = ""\f""
        Case 10
            ' line feed -> 10 -> \n
            json_Char = ""\n""
        Case 13
            ' carriage return -> 13 -> \r
            json_Char = ""\r""
        Case 9
            ' tab -> 9 -> \t
            json_Char = ""\t""
        Case 0 To 31, 127 To 65535
            ' Non-ascii characters -> convert to 4-digit hex
            json_Char = ""\u"" & VBA.Right$(""0000"" & VBA.Hex$(json_AscCode), 4)
        End Select

        json_BufferAppend json_Buffer, json_Char, json_BufferPosition, json_BufferLength
    Next json_Index

    json_Encode = json_BufferToString(json_Buffer, json_BufferPosition)
End Function

Private Function json_Peek(json_String As String, ByVal json_Index As Long, Optional json_NumberOfCharacters As Long = 1) As String
    ' ""Peek"" at the next number of characters without incrementing json_Index (ByVal instead of ByRef)
    json_SkipSpaces json_String, json_Index
    json_Peek = VBA.Mid$(json_String, json_Index, json_NumberOfCharacters)
End Function

Private Sub json_SkipSpaces(json_String As String, ByRef json_Index As Long)
    ' Increment index to skip over spaces
    Do While json_Index > 0 And json_Index <= VBA.Len(json_String) And VBA.Mid$(json_String, json_Index, 1) = "" ""
        json_Index = json_Index + 1
    Loop
End Sub

Private Function json_StringIsLargeNumber(json_String As Variant) As Boolean
    ' Check if the given string is considered a ""large number""
    ' (See json_ParseNumber)

    Dim json_Length As Long
    Dim json_CharIndex As Long
    json_Length = VBA.Len(json_String)

    ' Length with be at least 16 characters and assume will be less than 100 characters
    If json_Length >= 16 And json_Length <= 100 Then
        Dim json_CharCode As String

        json_StringIsLargeNumber = True

        For json_CharIndex = 1 To json_Length
            json_CharCode = VBA.Asc(VBA.Mid$(json_String, json_CharIndex, 1))
            Select Case json_CharCode
            ' Look for .|0-9|E|e
            Case 46, 48 To 57, 69, 101
                ' Continue through characters
            Case Else
                json_StringIsLargeNumber = False
                Exit Function
            End Select
        Next json_CharIndex
    End If
End Function

Private Function json_ParseErrorMessage(json_String As String, ByRef json_Index As Long, ErrorMessage As String)
    ' Provide detailed parse error message, including details of where and what occurred
    '
    ' Example:
    ' Error parsing JSON:
    ' {""abcde"":True}
    '          ^
    ' Expecting 'STRING', 'NUMBER', null, true, false, '{', or '['

    Dim json_StartIndex As Long
    Dim json_StopIndex As Long

    ' Include 10 characters before and after error (if possible)
    json_StartIndex = json_Index - 10
    json_StopIndex = json_Index + 10
    If json_StartIndex <= 0 Then
        json_StartIndex = 1
    End If
    If json_StopIndex > VBA.Len(json_String) Then
        json_StopIndex = VBA.Len(json_String)
    End If

    json_ParseErrorMessage = ""Error parsing JSON:"" & VBA.vbNewLine & _
                             VBA.Mid$(json_String, json_StartIndex, json_StopIndex - json_StartIndex + 1) & VBA.vbNewLine & _
                             VBA.Space$(json_Index - json_StartIndex) & ""^"" & VBA.vbNewLine & _
                             ErrorMessage
End Function

Private Sub json_BufferAppend(ByRef json_Buffer As String, _
                              ByRef json_Append As Variant, _
                              ByRef json_BufferPosition As Long, _
                              ByRef json_BufferLength As Long)
    ' VBA can be slow to append strings due to allocating a new string for each append
    ' Instead of using the traditional append, allocate a large empty string and then copy string at append position
    '
    ' Example:
    ' Buffer: ""abc  ""
    ' Append: ""def""
    ' Buffer Position: 3
    ' Buffer Length: 5
    '
    ' Buffer position + Append length > Buffer length -> Append chunk of blank space to buffer
    ' Buffer: ""abc       ""
    ' Buffer Length: 10
    '
    ' Put ""def"" into buffer at position 3 (0-based)
    ' Buffer: ""abcdef    ""
    '
    ' Approach based on cStringBuilder from vbAccelerator
    ' http://www.vbaccelerator.com/home/VB/Code/Techniques/RunTime_Debug_Tracing/VB6_Tracer_Utility_zip_cStringBuilder_cls.asp
    '
    ' and clsStringAppend from Philip Swannell
    ' https://github.com/VBA-tools/VBA-JSON/pull/82

    Dim json_AppendLength As Long
    Dim json_LengthPlusPosition As Long

    json_AppendLength = VBA.Len(json_Append)
    json_LengthPlusPosition = json_AppendLength + json_BufferPosition

    If json_LengthPlusPosition > json_BufferLength Then
        ' Appending would overflow buffer, add chunk
        ' (double buffer length or append length, whichever is bigger)
        Dim json_AddedLength As Long
        json_AddedLength = IIf(json_AppendLength > json_BufferLength, json_AppendLength, json_BufferLength)

        json_Buffer = json_Buffer & VBA.Space$(json_AddedLength)
        json_BufferLength = json_BufferLength + json_AddedLength
    End If

    ' Note: Namespacing with VBA.Mid$ doesn't work properly here, throwing compile error:
    ' Function call on left-hand side of assignment must return Variant or Object
    Mid$(json_Buffer, json_BufferPosition + 1, json_AppendLength) = CStr(json_Append)
    json_BufferPosition = json_BufferPosition + json_AppendLength
End Sub

Private Function json_BufferToString(ByRef json_Buffer As String, ByVal json_BufferPosition As Long) As String
    If json_BufferPosition > 0 Then
        json_BufferToString = VBA.Left$(json_Buffer, json_BufferPosition)
    End If
End Function

''
' VBA-UTC v1.0.6
' (c) Tim Hall - https://github.com/VBA-tools/VBA-UtcConverter
'
' UTC/ISO 8601 Converter for VBA
'
' Errors:
' 10011 - UTC parsing error
' 10012 - UTC conversion error
' 10013 - ISO 8601 parsing error
' 10014 - ISO 8601 conversion error
'
' @module UtcConverter
' @author tim.hall.engr@gmail.com
' @license MIT (http://www.opensource.org/licenses/mit-license.php)
'' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ '

' (Declarations moved to top)

' ============================================= '
' Public Methods
' ============================================= '

''
' Parse UTC date to local date
'
' @method ParseUtc
' @param {Date} UtcDate
' @return {Date} Local date
' @throws 10011 - UTC parsing error
''
Public Function ParseUtc(utc_UtcDate As Date) As Date
    On Error GoTo utc_ErrorHandling

#If Mac Then
    ParseUtc = utc_ConvertDate(utc_UtcDate)
#Else
    Dim utc_TimeZoneInfo As utc_TIME_ZONE_INFORMATION
    Dim utc_LocalDate As utc_SYSTEMTIME

    utc_GetTimeZoneInformation utc_TimeZoneInfo
    utc_SystemTimeToTzSpecificLocalTime utc_TimeZoneInfo, utc_DateToSystemTime(utc_UtcDate), utc_LocalDate

    ParseUtc = utc_SystemTimeToDate(utc_LocalDate)
#End If

    Exit Function

utc_ErrorHandling:
    Err.Raise 10011, ""UtcConverter.ParseUtc"", ""UTC parsing error: "" & Err.Number & "" - "" & Err.Description
End Function

''
' Convert local date to UTC date
'
' @method ConvertToUrc
' @param {Date} utc_LocalDate
' @return {Date} UTC date
' @throws 10012 - UTC conversion error
''
Public Function ConvertToUtc(utc_LocalDate As Date) As Date
    On Error GoTo utc_ErrorHandling

#If Mac Then
    ConvertToUtc = utc_ConvertDate(utc_LocalDate, utc_ConvertToUtc:=True)
#Else
    Dim utc_TimeZoneInfo As utc_TIME_ZONE_INFORMATION
    Dim utc_UtcDate As utc_SYSTEMTIME

    utc_GetTimeZoneInformation utc_TimeZoneInfo
    utc_TzSpecificLocalTimeToSystemTime utc_TimeZoneInfo, utc_DateToSystemTime(utc_LocalDate), utc_UtcDate

    ConvertToUtc = utc_SystemTimeToDate(utc_UtcDate)
#End If

    Exit Function

utc_ErrorHandling:
    Err.Raise 10012, ""UtcConverter.ConvertToUtc"", ""UTC conversion error: "" & Err.Number & "" - "" & Err.Description
End Function

''
' Parse ISO 8601 date string to local date
'
' @method ParseIso
' @param {Date} utc_IsoString
' @return {Date} Local date
' @throws 10013 - ISO 8601 parsing error
''
Public Function ParseIso(utc_IsoString As String) As Date
    On Error GoTo utc_ErrorHandling

    Dim utc_Parts() As String
    Dim utc_DateParts() As String
    Dim utc_TimeParts() As String
    Dim utc_OffsetIndex As Long
    Dim utc_HasOffset As Boolean
    Dim utc_NegativeOffset As Boolean
    Dim utc_OffsetParts() As String
    Dim utc_Offset As Date

    utc_Parts = VBA.Split(utc_IsoString, ""T"")
    utc_DateParts = VBA.Split(utc_Parts(0), ""-"")
    ParseIso = VBA.DateSerial(VBA.CInt(utc_DateParts(0)), VBA.CInt(utc_DateParts(1)), VBA.CInt(utc_DateParts(2)))

    If UBound(utc_Parts) > 0 Then
        If VBA.InStr(utc_Parts(1), ""Z"") Then
            utc_TimeParts = VBA.Split(VBA.Replace(utc_Parts(1), ""Z"", """"), "":"")
        Else
            utc_OffsetIndex = VBA.InStr(1, utc_Parts(1), ""+"")
            If utc_OffsetIndex = 0 Then
                utc_NegativeOffset = True
                utc_OffsetIndex = VBA.InStr(1, utc_Parts(1), ""-"")
            End If

            If utc_OffsetIndex > 0 Then
                utc_HasOffset = True
                utc_TimeParts = VBA.Split(VBA.Left$(utc_Parts(1), utc_OffsetIndex - 1), "":"")
                utc_OffsetParts = VBA.Split(VBA.Right$(utc_Parts(1), Len(utc_Parts(1)) - utc_OffsetIndex), "":"")

                Select Case UBound(utc_OffsetParts)
                Case 0
                    utc_Offset = TimeSerial(VBA.CInt(utc_OffsetParts(0)), 0, 0)
                Case 1
                    utc_Offset = TimeSerial(VBA.CInt(utc_OffsetParts(0)), VBA.CInt(utc_OffsetParts(1)), 0)
                Case 2
                    ' VBA.Val does not use regional settings, use for seconds to avoid decimal/comma issues
                    utc_Offset = TimeSerial(VBA.CInt(utc_OffsetParts(0)), VBA.CInt(utc_OffsetParts(1)), Int(VBA.Val(utc_OffsetParts(2))))
                End Select

                If utc_NegativeOffset Then: utc_Offset = -utc_Offset
            Else
                utc_TimeParts = VBA.Split(utc_Parts(1), "":"")
            End If
        End If

        Select Case UBound(utc_TimeParts)
        Case 0
            ParseIso = ParseIso + VBA.TimeSerial(VBA.CInt(utc_TimeParts(0)), 0, 0)
        Case 1
            ParseIso = ParseIso + VBA.TimeSerial(VBA.CInt(utc_TimeParts(0)), VBA.CInt(utc_TimeParts(1)), 0)
        Case 2
            ' VBA.Val does not use regional settings, use for seconds to avoid decimal/comma issues
            ParseIso = ParseIso + VBA.TimeSerial(VBA.CInt(utc_TimeParts(0)), VBA.CInt(utc_TimeParts(1)), Int(VBA.Val(utc_TimeParts(2))))
        End Select

        ParseIso = ParseUtc(ParseIso)

        If utc_HasOffset Then
            ParseIso = ParseIso - utc_Offset
        End If
    End If

    Exit Function

utc_ErrorHandling:
    Err.Raise 10013, ""UtcConverter.ParseIso"", ""ISO 8601 parsing error for "" & utc_IsoString & "": "" & Err.Number & "" - "" & Err.Description
End Function

''
' Convert local date to ISO 8601 string
'
' @method ConvertToIso
' @param {Date} utc_LocalDate
' @return {Date} ISO 8601 string
' @throws 10014 - ISO 8601 conversion error
''
Public Function ConvertToIso(utc_LocalDate As Date) As String
    On Error GoTo utc_ErrorHandling

    ConvertToIso = VBA.Format$(ConvertToUtc(utc_LocalDate), ""yyyy-mm-ddTHH:mm:ss.000Z"")

    Exit Function

utc_ErrorHandling:
    Err.Raise 10014, ""UtcConverter.ConvertToIso"", ""ISO 8601 conversion error: "" & Err.Number & "" - "" & Err.Description
End Function

' ============================================= '
' Private Functions
' ============================================= '

#If Mac Then

Private Function utc_ConvertDate(utc_Value As Date, Optional utc_ConvertToUtc As Boolean = False) As Date
    Dim utc_ShellCommand As String
    Dim utc_Result As utc_ShellResult
    Dim utc_Parts() As String
    Dim utc_DateParts() As String
    Dim utc_TimeParts() As String

    If utc_ConvertToUtc Then
        utc_ShellCommand = ""date -ur `date -jf '%Y-%m-%d %H:%M:%S' "" & _
            ""'"" & VBA.Format$(utc_Value, ""yyyy-mm-dd HH:mm:ss"") & ""' "" & _
            "" +'%s'` +'%Y-%m-%d %H:%M:%S'""
    Else
        utc_ShellCommand = ""date -jf '%Y-%m-%d %H:%M:%S %z' "" & _
            ""'"" & VBA.Format$(utc_Value, ""yyyy-mm-dd HH:mm:ss"") & "" +0000' "" & _
            ""+'%Y-%m-%d %H:%M:%S'""
    End If

    utc_Result = utc_ExecuteInShell(utc_ShellCommand)

    If utc_Result.utc_Output = """" Then
        Err.Raise 10015, ""UtcConverter.utc_ConvertDate"", ""'date' command failed""
    Else
        utc_Parts = Split(utc_Result.utc_Output, "" "")
        utc_DateParts = Split(utc_Parts(0), ""-"")
        utc_TimeParts = Split(utc_Parts(1), "":"")

        utc_ConvertDate = DateSerial(utc_DateParts(0), utc_DateParts(1), utc_DateParts(2)) + _
            TimeSerial(utc_TimeParts(0), utc_TimeParts(1), utc_TimeParts(2))
    End If
End Function

Private Function utc_ExecuteInShell(utc_ShellCommand As String) As utc_ShellResult
#If VBA7 Then
    Dim utc_File As LongPtr
    Dim utc_Read As LongPtr
#Else
    Dim utc_File As Long
    Dim utc_Read As Long
#End If

    Dim utc_Chunk As String

    On Error GoTo utc_ErrorHandling
    utc_File = utc_popen(utc_ShellCommand, ""r"")

    If utc_File = 0 Then: Exit Function

    Do While utc_feof(utc_File) = 0
        utc_Chunk = VBA.Space$(50)
        utc_Read = CLng(utc_fread(utc_Chunk, 1, Len(utc_Chunk) - 1, utc_File))
        If utc_Read > 0 Then
            utc_Chunk = VBA.Left$(utc_Chunk, CLng(utc_Read))
            utc_ExecuteInShell.utc_Output = utc_ExecuteInShell.utc_Output & utc_Chunk
        End If
    Loop

utc_ErrorHandling:
    utc_ExecuteInShell.utc_ExitCode = CLng(utc_pclose(utc_File))
End Function

#Else

Private Function utc_DateToSystemTime(utc_Value As Date) As utc_SYSTEMTIME
    utc_DateToSystemTime.utc_wYear = VBA.Year(utc_Value)
    utc_DateToSystemTime.utc_wMonth = VBA.Month(utc_Value)
    utc_DateToSystemTime.utc_wDay = VBA.Day(utc_Value)
    utc_DateToSystemTime.utc_wHour = VBA.Hour(utc_Value)
    utc_DateToSystemTime.utc_wMinute = VBA.Minute(utc_Value)
    utc_DateToSystemTime.utc_wSecond = VBA.Second(utc_Value)
    utc_DateToSystemTime.utc_wMilliseconds = 0
End Function

Private Function utc_SystemTimeToDate(utc_Value As utc_SYSTEMTIME) As Date
    utc_SystemTimeToDate = DateSerial(utc_Value.utc_wYear, utc_Value.utc_wMonth, utc_Value.utc_wDay) + _
        TimeSerial(utc_Value.utc_wHour, utc_Value.utc_wMinute, utc_Value.utc_wSecond)
End Function

#End If
"
r1BqvZza,LongDeposit,AlexandrP,JavaScript,Sunday 17th of March 2024 12:27:22 PM CDT,"package com.epam.rd.qa.aggregation;

import java.math.BigDecimal;
import java.math.RoundingMode;

public class LongDeposit extends Deposit {
    public LongDeposit(BigDecimal amount, int period) {
        super(amount, period);
    }

    @Override
    public BigDecimal income() {
        BigDecimal totalIncome = BigDecimal.ZERO;
        BigDecimal currentAmount = getAmount();
        for (int i = 1; i <= getPeriod(); i++) {
            BigDecimal rawInterest;
            BigDecimal interest;
            if (i > 6) {
                rawInterest = currentAmount.multiply(BigDecimal.valueOf(0.15));
            } else {
                rawInterest = BigDecimal.ZERO; // No interest for the first 6 months
            }
            interest = rawInterest.setScale(2, RoundingMode.HALF_EVEN);

            totalIncome = totalIncome.add(interest);
            currentAmount = currentAmount.add(interest);
        }
        return totalIncome;
    }

}
"
L7RdjAYK,BaseDeposit,AlexandrP,JavaScript,Sunday 17th of March 2024 12:26:54 PM CDT,"package com.epam.rd.qa.aggregation;

import java.math.BigDecimal;
import java.math.RoundingMode;

public class BaseDeposit extends Deposit {
    public BaseDeposit(BigDecimal amount, int period) {
        super(amount, period);
    }

    @Override
    public BigDecimal income() {
        BigDecimal totalIncome = BigDecimal.ZERO;
        BigDecimal currentAmount = getAmount();
        for (int i = 0; i < getPeriod(); i++) {
            BigDecimal interestRate = BigDecimal.valueOf(0.05);
            BigDecimal rawInterest = currentAmount.multiply(interestRate);
            BigDecimal interest = rawInterest.setScale(2, RoundingMode.HALF_EVEN);

            totalIncome = totalIncome.add(interest);
            currentAmount = currentAmount.add(interest);
        }
        return totalIncome;
    }

}
"
pZwP8eSe,SpecialDeposit,AlexandrP,Java,Sunday 17th of March 2024 12:26:20 PM CDT,"package com.epam.rd.qa.aggregation;

import java.math.BigDecimal;
import java.math.RoundingMode;

public class SpecialDeposit extends Deposit {
    public SpecialDeposit(BigDecimal amount, int period) {
        super(amount, period);
    }

    @Override
    public BigDecimal income() {
        BigDecimal totalIncome = BigDecimal.ZERO;
        BigDecimal currentAmount = getAmount();
        for (int i = 1; i <= getPeriod(); i++) {
            BigDecimal divisor = BigDecimal.valueOf(100);
            BigDecimal interestRate = BigDecimal.valueOf(i);
            BigDecimal interestFraction = interestRate.divide(divisor, 2, RoundingMode.HALF_EVEN);
            BigDecimal rawInterest = currentAmount.multiply(interestFraction);
            BigDecimal interest = rawInterest.setScale(2, RoundingMode.HALF_EVEN);

            totalIncome = totalIncome.add(interest);
            currentAmount = currentAmount.add(interest);
        }
        return totalIncome;
    }

}

"
9Mf0Hezv,🤑 G2A.com Free Gift Card Guide Mar 2024 FIX 🤑,ounnuo,GetText,Sunday 17th of March 2024 12:12:56 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

If you use this make sure to use the English version of G2A.com otherwise this will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_388702.pdf

Working as of:
17 March 2024"
ZCeqA1HE,G2A.com Free Gift Card Guide Mar 2024 FIX,HastyBasher0,GetText,Sunday 17th of March 2024 12:11:35 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

IMPORTANT: If you use this make sure to use the English version of G2A.com otherwise this will not work!

You can buy gift cards directly with it or you can buy popular games then put them on fresh steam accounts and then sell those accounts.
 
PDF guide here:
https://smallpdf.com/file#s=cea149fd-ead1-4939-94cf-d10a8ce7936a
 
Working as of:
17 March 2024















































"
briJVWnc,"cat x.sdp; /usr/local/bin/ffplay x.sdp -protocol_whitelist file,udp,rtp",iconoclasthero,Bash,Sunday 17th of March 2024 12:09:53 PM CDT,"$ cat x.sdp; /usr/local/bin/ffplay x.sdp -protocol_whitelist file,udp,rtp
v=0
o=- 0 0 IN IP4 224.0.0.56
s=-
m=audio 4011 RTP/AVP 127
c=IN IP4 224.0.0.56

ffplay version N-114212-gf5441e441f Copyright (c) 2003-2024 the FFmpeg developers
  built with gcc 11 (Ubuntu 11.4.0-1ubuntu1~22.04)
  configuration: --bindir=/usr/local/bin --prefix=/cache/ffmpeg_build --pkg-config-flags=--static --extra-cflags=-I/cache/ffmpeg_build/include --extra-ldflags=-L/cache/ffmpeg_build/lib --extra-libs='-lpthread -lm' --ld=g++ --enable-gpl --enable-gnutls --enable-libaom --enable-libass --enable-libfdk-aac --enable-libfreetype --enable-libmp3lame --enable-libopus --enable-libsvtav1 --enable-libdav1d --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-nonfree --enable-libpulse
  libavutil      59.  1.100 / 59.  1.100
  libavcodec     61.  1.101 / 61.  1.101
  libavformat    61.  0.100 / 61.  0.100
  libavdevice    61.  0.100 / 61.  0.100
  libavfilter    10.  0.100 / 10.  0.100
  libswscale      8.  0.100 /  8.  0.100
  libswresample   5.  0.100 /  5.  0.100
  libpostproc    58.  0.100 / 58.  0.100
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 4 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 10 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 4 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 4 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 5 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 3 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 4 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 3 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 7 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 4 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 3 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 6 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 2 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 3 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
[sdp @ 0x7b1a00000c80] RTP: missed 1 packets
[sdp @ 0x7b1a00000c80] max delay reached. need to consume packet
"
5utVYyc7,pattern: mirrored diamond,Divyansh_Chourey,C,Sunday 17th of March 2024 12:08:13 PM CDT,"#include<stdio.h>
int main(){
	int col;
	printf(""Enter number of columns: "");
	scanf(""%d"", &col);
	for(int i = 1; i <= col; i++){
		for(int j = 1; j <= col-i; j++){printf("" "");}
		for(int j = 1; j <= i; j++){printf(""*"");}
		printf(""\n"");
	}
	for(int i = col-1; i>0; i--){
		for(int j = 1; j <= col-i; j++){printf("" "");}
		for(int j = 1; j <= i; j++){printf(""*"");}
		printf(""\n"");
	}
	return 0;
}"
jK2m2md7,pattern: parallelogram,Divyansh_Chourey,C,Sunday 17th of March 2024 12:05:55 PM CDT,"#include<stdio.h>
int main(){
	int col;
	printf(""Enter number of columns: "");
	scanf(""%d"", &col);
	
	for(int i=1; i<=4; i++){
		for(int j=1; j < i; j++){printf("" "");}
		for(int j =1; j <= col; j++){printf(""*"");}
		printf(""\n"");
	}
	
	return 0;
}"
X4aaFfmR,glasses.lua,Erdioner,Lua,Sunday 17th of March 2024 11:51:28 AM CDT,"local interface = nil
local canvas = nil
local config = {
    excludeStatuses = {},
    excludeTags = {},
    heartbeatTimeout = 10000,
}

local function loadConfig()
    if not fs.exists(""/config/glasses.cfg"") then
        error(""No configuration file found"")
        return
    end

    local file = fs.open(""/config/glasses.cfg"", ""r"")
    local configOverride = textutils.unserialize(file.readAll())
    if not configOverride.interfaceSide then
        error(""No interface side specified"")
    end

    for key, value in pairs(configOverride) do
        config[key] = value
    end

    file.close()
end

local function setup()
    interface = peripheral.wrap(config.interfaceSide)
    canvas = interface.canvas()
end

local function shouldDrawDeviceStatus(device)
    for _, excludeStatus in ipairs(config.excludeStatuses) do
        if device.status == excludeStatus then
            return false
        end
    end

    for _, excludeTag in ipairs(config.excludeTags) do
        if device.tags[excludeTag] then
            return false
        end
    end

    local includeStatus = false
    if config.includeStatus then
        for _, status in ipairs(config.includeStatus) do
            if device.status == status then
                includeStatus = true
                break
            end
        end
    end

    local includeTag = false
    if config.includeTags then
        for _, tag in ipairs(config.includeTags) do
            if device.tags[tag] then
                includeTag = true
                break
            end
        end
    end

    if not config.includeStatus and not config.includeTags then
        return true
    end

    return includeStatus or includeTag
end

local function secondsToStringTime(seconds)
    seconds = math.floor(seconds)
    if seconds < 60 then
        return seconds .. ""s""
    elseif seconds < 3600 then
        return math.floor(seconds / 60) .. ""m "" .. seconds % 60 .. ""s""
    else
        return math.floor(seconds / 3600) .. ""h "" .. math.floor((seconds % 3600) / 60) .. ""m "" .. seconds % 60 .. ""s""
    end
end

local function drawDeviceStatus(devices)
    canvas.clear()

    local width, height = canvas.getSize()
    local now = os.epoch(""utc"")
    local i = 1
    for _, device in pairs(devices) do
        if shouldDrawDeviceStatus(device) then
            local position = { 5, height - i * 10 }
            if device.lastHeartbeat < now - config.heartbeatTimeout then
                local seconds = (now - device.lastHeartbeat) / 1000
                local timeString = secondsToStringTime(seconds)
                canvas.addText(position, device.name .. "": "" .. device.status .. "" ("" .. timeString .. "")"", 0xFF0000FF,
                    0.75)
            else
                local seconds = (now - device.lastStatusChange) / 1000
                local timeString = secondsToStringTime(seconds)
                canvas.addText(position, device.name .. "": "" .. device.status .. "" ("" .. timeString .. "")"", 0x00FF00FF,
                    0.75)
            end

            i = i + 1
        end
    end
end

local function main()
    loadConfig()
    setup()

    while true do
        local _, message = rednet.receive(""device_status"")
        drawDeviceStatus(message)
    end
end

main()
"
r7KVW2GJ,Kino,Tallerik,Lua,Sunday 17th of March 2024 11:46:17 AM CDT,"local monitor_side = ""right""
local redstone_side = ""bottom""

os.loadAPI(""lib/bars.lua"")

local playing = false
local barShown = false
local mon = peripheral.wrap(monitor_side)
mon.clear()
mon.setCursorPos(1,1)

bars.construct(mon)


redstone.setOutput(redstone_side, true)

function string.starts(String,Start)
    return string.sub(String,1,string.len(Start))==Start
end

function string.split(inputstr, sep)
    if sep == nil then
            sep = ""%s""
    end
    local t={}
    for str in string.gmatch(inputstr, ""([^""..sep..""]+)"") do
            table.insert(t, str)
    end
    return t
end


print(""Youtube Url:"")
local url = read()

local function video_playback()
    --term.redirect(mon)
    shell.run(""monitor "".. monitor_side .."" youcube "" .. url)
    --shell.run(""youcube ""..url)
    --term.redirect(term.native())
end

local function event_handler()
    while true do
        local event, param1, param2 = os.pullEvent()
        --[[if string.find(event, ""youcube"") and not string.find(event, ""buffer"") then
            print(""Event: "" .. event)
            
        end ]]--
        if event == ""youcube:status"" then
            if string.starts(param1.message, ""frame "") then
                mon.clear()
                local data = string.split(param1.message)
                local progress = string.split(data[2], ""/"")
                local remaining = data[6]
                mon.setCursorPos(30,20)
                mon.write(""Frames: "" .. progress[1] .. "" von "" .. progress[2])
                mon.setCursorPos(30,21)
                mon.write(""Remaining: "" .. remaining)

                if not barShown then
                    bars.add(""prog"", ""hor"", progress[2], progress[1], 10, 22, 55, 1)
                    bars.screen()
                    barShown = true
                else
                    bars.set(""prog"", ""cur"", progress[1])
                    bars.screen()
                end
            end
        end

        if event == ""youcube:playing"" then
            redstone.setOutput(redstone_side, false)
            if barShown then
                bars.clear()
                barShown = false
            end
            playing = true
        end

        if event == ""youcube:playback_ended"" then
            mon.setCursorPos(20,20)
            mon.write(""Ende"")
            redstone.setOutput(redstone_side, true)
            playing = false
        end
    end
end
--[[
print(""Starting in 10s"")
mon.clear()
mon.setCursorPos(10,10)
mon.write(""Film startet gleich"")
mon.clear()
for i = 0, 10, 1 do
    local k = 10 - i
    mon.write(k)
    os.sleep(1)
    mon.clear()
    if k < 4 then
        redstone.setOutput(redstone_side, false)
    end
end
]]--

--redstone.setOutput(redstone_side, true)




parallel.waitForAll(video_playback, event_handler)
"
VXf8R74Q,MC4 Conference - Talk Announcement,vvv1488,Latex,Sunday 17th of March 2024 11:43:52 AM CDT,"\documentclass[12pt, a4paper, figuresright]{book}
\usepackage{mathtools, commath, amssymb, amsthm}
\usepackage{tabularx,graphicx,url,xcolor,rotating,multicol,epsfig,colortbl,lipsum}
\usepackage[T2A]{fontenc}
\usepackage[english,main=russian]{babel}

\setlength{\textheight}{25.2cm}
\setlength{\textwidth}{16.5cm}
\setlength{\voffset}{-1.6cm}
\setlength{\hoffset}{-0.3cm}
\setlength{\evensidemargin}{-0.3cm} 
\setlength{\oddsidemargin}{0.3cm}
\setlength{\parindent}{0cm} 
\setlength{\parskip}{0.3cm}

\newenvironment{talk}[6]{%
\vskip 0pt\nopagebreak%
\vskip 0pt\nopagebreak%
\textbf{#1}\vspace{3mm}\\\nopagebreak%
\textit{#2}\\\nopagebreak%
#3\\\nopagebreak%
\url{#4}\vspace{3mm}\\\nopagebreak%
\ifthenelse{\equal{#5}{}}{}{Соавторы: #5\vspace{3mm}\\\nopagebreak}%
\ifthenelse{\equal{#6}{}}{}{Секция: #6\quad \vspace{3mm}\\\nopagebreak}%
}

\pagestyle{empty}

\begin{document}
	
\begin{talk}
  {Название доклада} % [1] название доклада
  {Имя докладчика} % [2] имя докладчика
  {Аффилиация докладчика}% [3] аффилиация
  {name@gmail.com} % [4] адрес электронной почты (НЕОБЯЗАТЕЛЬНО)
  {Имена соавторов (без аффилиаций)} % [5] соавторы (НЕОБЯЗАТЕЛЬНО)
  {Название секции} % [6] название секции

Разместите здесь аннотацию к Вашему докладу. Пожалуйста, не используйте собственные команды и макросы, старайтесь минимально прибегать к формулам, и в случае необходимости записывайте математические выражения, обрамляя их знаками доллара вот так: $\pi = \frac{22}{7}$.

\medskip

Если Вы хотите включить список литературы, пожалуйста, оформляйте его в виде обычного списка (см. пример ниже). Не используйте окружение \texttt{bibliography} или \texttt{bibtex}.

\begin{enumerate}
	\item[{[1]}] Edwin Hewitt, Kenneth A. Ross, {\it Abstract harmonic analysis I}, Springer, 1979.
	\item[{[2]}] V. G. Bardakov, R. Mikhailov, V. V. Vershinin, J. Wu, {\it Brunnian braids on surfaces}, Algebraic \& Geometric Topology, 12 (2012), 1607–1648.
\end{enumerate}
\end{talk}
\end{document}
"
p9GUaTmq,08. Lunch Break,GabrielHr00,Java,Sunday 17th of March 2024 11:20:38 AM CDT,"package _02_ConditionalStatements;

import java.util.Scanner;

public class LunchBreak {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String seriesName = scanner.nextLine();
        int episodeTime = Integer.parseInt(scanner.nextLine());
        int breakTime = Integer.parseInt(scanner.nextLine());

        double lunchTime = breakTime / 8.0;
        double restTime = breakTime / 4.0;
        double freeTime = breakTime - lunchTime - restTime;

        if (freeTime >= episodeTime) {
            System.out.printf(""You have enough time to watch %s and left with %.0f minutes free time."",
                    seriesName, Math.ceil(freeTime - episodeTime));
        } else {
            System.out.printf(""You don't have enough time to watch %s, you need %.0f more minutes."",
                    seriesName, Math.ceil(episodeTime - freeTime));
        }

    }
}"
upcgeU20,🤑 G2A.com Free Gift Card Guide Mar 2024 🤑,luckysw,GetText,Sunday 17th of March 2024 11:20:21 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
If you use this make sure to use the English version of G2A.com otherwise this will not work!
  
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view
 
Working as of:
17 March 2024
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 























"
ywf7DBJ1,07. Shopping,GabrielHr00,Java,Sunday 17th of March 2024 11:19:46 AM CDT,"package _02_ConditionalStatements;

import java.util.Scanner;

public class Shopping {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double budget = Double.parseDouble(scanner.nextLine());
        int videoCount = Integer.parseInt(scanner.nextLine());
        int processorsCount = Integer.parseInt(scanner.nextLine());
        int ramCount = Integer.parseInt(scanner.nextLine());

        double videoPrice = videoCount * 250.0;
        double processorsPrice = processorsCount * (videoPrice * 0.35);
        double ramPrice = ramCount * (videoPrice * 0.10);

        double sumPrice = videoPrice + processorsPrice + ramPrice;

        if (videoCount > processorsCount) {
            sumPrice = sumPrice - (sumPrice * 0.15);
            // sumPrice = sumPrice * 0.85;
        }

        double diff = Math.abs(budget - sumPrice);
        if (budget >= sumPrice) {
            System.out.printf(""You have %.2f leva left!"", diff);
        } else {
            System.out.printf(""Not enough money! You need %.2f leva more!"", diff);
        }

    }
}"
MV0ejMvT,Untitled,sissou123,HTML,Sunday 17th of March 2024 11:19:25 AM CDT,"Build Websites from Scratch with HTML & CSS
Learn Web Development Essentials and Become a Web Developer From Scratch in this Complete HTML & CSS Beginner's Course 
What you'll learn
By the end of this course, you will have a basic & thorough understanding of HTML & CSS
Upon completion, you will have coded a handful of useful HTML & CSS examples 
for more:https://www.clictune.com/jIcU
"
NRqqC7ux,06. World Swimming Record,GabrielHr00,Java,Sunday 17th of March 2024 11:18:28 AM CDT,"package _02_ConditionalStatements;

import java.util.Scanner;

public class WorldSwimmingRecord {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double record = Double.parseDouble(scanner.nextLine());
        double distanceMeters = Double.parseDouble(scanner.nextLine());
        double timeFor1Meter = Double.parseDouble(scanner.nextLine());

        double swimmingTime = distanceMeters * timeFor1Meter;

        double intervals = Math.floor(distanceMeters / 15);
        double slowingTime = intervals * 12.5;

        swimmingTime = swimmingTime + slowingTime;

        if (swimmingTime < record) {
            System.out.printf(""Yes, he succeeded! The new world record is %.2f seconds."", swimmingTime);
        } else {
            System.out.printf(""No, he failed! He was %.2f seconds slower."", swimmingTime - record);
        }
    }
}"
LG5acDub,05. Godzilla vs. Kong,GabrielHr00,Java,Sunday 17th of March 2024 11:17:38 AM CDT,"package _02_ConditionalStatements;

import java.util.Scanner;

public class GodzillaVSKong {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double budget = Double.parseDouble(scanner.nextLine());
        int mutesCount = Integer.parseInt(scanner.nextLine());
        double muteClothesPrice = Double.parseDouble(scanner.nextLine());

        double decor = budget * 0.10;

        if(mutesCount > 150) {
            muteClothesPrice = muteClothesPrice * 0.90;
        }

        double priceMutesClothing = muteClothesPrice * mutesCount;
        double totalPrice = decor + priceMutesClothing;

        double diff = Math.abs(totalPrice - budget);
        if(totalPrice > budget) {
            System.out.printf(""Not enough money!%nWingard needs %.2f leva more."", diff);
        } else {
            System.out.printf(""Action!%nWingard starts filming with %.2f leva left."", diff);
        }
    }
}
"
4fwAPgZV,04. Toy Shop,GabrielHr00,Java,Sunday 17th of March 2024 11:16:42 AM CDT,"package _02_ConditionalStatements;

import java.util.Scanner;

public class ToyShop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double tripPrice = Double.parseDouble(scanner.nextLine());
        int puzzleCount = Integer.parseInt(scanner.nextLine());
        int dollsCount = Integer.parseInt(scanner.nextLine());
        int teddiesCount = Integer.parseInt(scanner.nextLine());
        int minionsCount = Integer.parseInt(scanner.nextLine());
        int trucksCount = Integer.parseInt(scanner.nextLine());

        double totalSum = (2.60 * puzzleCount) + (3.0 * dollsCount) + (4.10 * teddiesCount)
                + (8.20 * minionsCount) + (2.0 * trucksCount);

        int totalCount = puzzleCount + dollsCount + teddiesCount + minionsCount + trucksCount;
        if(totalCount >= 50) {
            totalSum = totalSum - (totalSum * 0.25);
        }

        totalSum = totalSum - (totalSum * 0.10);

        double diff = Math.abs(totalSum - tripPrice);
        if(totalSum >= tripPrice) {
            System.out.printf(""Yes! %.2f lv left."", diff);
        } else {
            System.out.printf(""Not enough money! %.2f lv needed."", diff);
        }

    }
}"
cwbwYHsp,03. Time + 15 Minutes,GabrielHr00,Java,Sunday 17th of March 2024 11:15:30 AM CDT,"package _02_ConditionalStatements;

import java.util.Scanner;

public class TimePlus15Minutes {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int hours = Integer.parseInt(scanner.nextLine());
        int minutes = Integer.parseInt(scanner.nextLine());

        minutes = minutes + 15;

        if (minutes >= 60) {
            minutes = minutes - 60;
            hours = hours + 1;
        }

        if (hours > 23) {
            hours = 0;
        }

        System.out.printf(""%d:%02d"", hours, minutes);
    }
}"
JXZtKFt7,02. Bonus Score,GabrielHr00,Java,Sunday 17th of March 2024 11:14:52 AM CDT,"package _02_ConditionalStatements;

import java.util.Scanner;

public class BonusScore {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int number = Integer.parseInt(scanner.nextLine());
        double bonusPoints = 0.0;

        if (number <= 100) {
            bonusPoints = 5.0;
        } else if (number <= 1000) {
            bonusPoints = number * 0.20;
        } else if (number > 1000) {
            bonusPoints = number * 0.10;
        }

        if (number % 2 == 0) {
            bonusPoints = bonusPoints + 1;
        } else if (number % 10 == 5) {
            bonusPoints = bonusPoints + 2;
        }

        System.out.println(bonusPoints);
        System.out.println(bonusPoints + number);
    }
}"
YRGbPNGE,01. Sum Seconds,GabrielHr00,Java,Sunday 17th of March 2024 11:13:37 AM CDT,"package _02_ConditionalStatements;

import java.util.Scanner;

public class SumSeconds {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int firstTime = Integer.parseInt(scanner.nextLine());
        int secondTime = Integer.parseInt(scanner.nextLine());
        int thirdTime = Integer.parseInt(scanner.nextLine());

        int finalTimeInSeconds = firstTime + secondTime + thirdTime;
        int minutes = finalTimeInSeconds / 60;
        int seconds = finalTimeInSeconds % 60;

        if (seconds < 10) {
            System.out.printf(""%d:0%d"", minutes, seconds);
        } else {
            System.out.printf(""%d:%d"", minutes, seconds);
        }

    }
}
"
ZLpQM70S,Admin Wilan,PapiGemezs,PHP,Sunday 17th of March 2024 11:00:53 AM CDT,"{
   ""Wilan"": [
      {
         ""version"": 1.1
      }
   ]
}"
mNg4hJ6A,Admin RizkyRahman,PapiGemezs,PHP,Sunday 17th of March 2024 10:59:03 AM CDT,"{
   ""RizkyRahman"": [
      {
         ""version"": 1.1
      }
   ]
}"
kc1nmrjE,Admin Riki,PapiGemezs,PHP,Sunday 17th of March 2024 10:56:47 AM CDT,"{
   ""Riki"": [
      {
         ""version"": 1.1
      }
   ]
}"
QpPZajYq,Admin Xyneric,PapiGemezs,PHP,Sunday 17th of March 2024 10:54:51 AM CDT,"{
   ""Xyneric"": [
      {
         ""version"": 1.1
      }
   ]
}"
wLTMubUM,Admin Verzstore,PapiGemezs,PHP,Sunday 17th of March 2024 10:52:06 AM CDT,"{
   ""Verzstore"": [
      {
         ""version"": 1.1
      }
   ]
}"
hFCrdKyF,Admin Gibran,PapiGemezs,PHP,Sunday 17th of March 2024 10:49:23 AM CDT,"{
   ""Gibran"": [
      {
         ""version"": 1.1
      }
   ]
}"
9BfXjRTP,OnBoarding (Si Poetry),AhmadXploit,Dart,Sunday 17th of March 2024 10:48:45 AM CDT,"[
  {
	""imageUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1709969449/Soccer%20Point/League/ronaldo_lp5vzq.png"",
	""onBoarding"": ""Welcome to the Si Poetry! \n\nHere, you will always be connected to the world of football. Get live scores and the latest news about your favorite teams easily and quickly.\n\nStart exploring the world of football with us! \nPress the ''Start'' button to begin your experience.""
  }
]"
GqWTcPJG,Admin Arief,PapiGemezs,PHP,Sunday 17th of March 2024 10:47:18 AM CDT,"{
   ""Arief"": [
      {
         ""version"": 1.1
      }
   ]
}"
bpUDRixw,Admin TriSora,PapiGemezs,PHP,Sunday 17th of March 2024 10:45:22 AM CDT,"{
   ""TriSora"": [
      {
         ""version"": 1.1
      }
   ]
}"
1iyrahAr,Untitled,D3ENNY,CSS,Sunday 17th of March 2024 10:45:05 AM CDT,"section {
    min-height: 100vh;
    height: max-content;

    @media (max-width: 640px) {
        div#bottles{
            gap: 2rem 7rem !important;
            margin: 4%;
            & > div{
                border: 4px solid red;
                box-sizing: border-box;
                flex: 1;
                width: fit-content;
                height: 100%;
            }
        }
    }

}"
SdkN9rFM,Untitled,D3ENNY,HTML,Sunday 17th of March 2024 10:44:36 AM CDT,"<ng-template #bottleTemplate let-class=""class"" let-array=""array"">
    <div id=""bottles"" class=""flex flex-wrap justify-center items-center gap-60 h-full"" [ngClass]=""class"">
        <div class=""text-center"" *ngFor=""let bottle of array"">
            <img src=""{{bottle.imagePath}}"" alt="""" class=""brightness-75 saturate-50 drop-shadow-oil-900 w-max"">
            <p class=""text-oil-200 text-2xl text-center"">{{bottle.name}}</p>
        </div>
    </div>
</ng-template>

<section class=""bg-obsidian mb-10 grid gap-y-10 place-items-center py-8"">
    <p class=""text-oil-50 uppercase text-center text-4xl"">I nostri prodotti</p>
    @defer (on viewport) {
        <ng-container 
            [ngTemplateOutlet]=""bottleTemplate""
            [ngTemplateOutletContext]=""{class: 'animate-slide', array: oils}"">
        </ng-container>
    }
    @placeholder {
        <div>
            <ng-container 
                [ngTemplateOutlet]=""bottleTemplate""
                [ngTemplateOutletContext]=""{array: oils}"">
            </ng-container>
        </div>
    }
    <div class=""container"">
        <p class=""text-oil-50 uppercase text-center text-4xl"">Le bottiglie</p>
        <hr class=""h-1 mb-8 mt-2 bg-oil-100 border-0"">
    </div>
    @defer (on viewport) {
        <ng-container 
            [ngTemplateOutlet]=""bottleTemplate""
            [ngTemplateOutletContext]=""{class: 'animate-slide', array: bottles}"">
        </ng-container>
    }
    @placeholder {
        <div>
            <ng-container 
                [ngTemplateOutlet]=""bottleTemplate""
                [ngTemplateOutletContext]=""{array: bottles}"">
            </ng-container>
        </div>
    }

    


</section>
"
ZnTjhHGd,Admin Iqbal,PapiGemezs,PHP,Sunday 17th of March 2024 10:43:02 AM CDT,"{
   ""Iqbal"": [
      {
         ""version"": 1.1
      }
   ]
}"
phHpmU7n,Admin Papadil,PapiGemezs,PHP,Sunday 17th of March 2024 10:40:52 AM CDT,"{
   ""Papadil"": [
      {
         ""version"": 1.1
      }
   ]
}"
rqpSQB5g,Admin Richart,PapiGemezs,PHP,Sunday 17th of March 2024 10:38:05 AM CDT,"{
   ""Richart"": [
      {
         ""version"": 1.1
      }
   ]
}"
1DhpVk1E,quarry_monitor.lua,Erdioner,Lua,Sunday 17th of March 2024 10:37:49 AM CDT,"local logger = require(""logger"")
local status = require(""status"")
status.setup()

local config = {}

local function loadConfig()
    if not fs.exists(""/config/quarry_monitor.cfg"") then
        logger.log(logger.ERROR, ""No configuration file found"")
        return
    end

    local file = fs.open(""/config/quarry_monitor.cfg"", ""r"")
    config = textutils.unserialize(file.readAll())
    file.close()
end

local function updateStatus()
    local isEnginesOperating = redstone.getInput(config.engineOperationSide)
    if not isEnginesOperating then
        status.changeStatus(status.FINISHED)
    end

    local isQuarryOperating = redstone.getInput(config.quarryOperatingSide)
    if isQuarryOperating then
        status.changeStatus(status.WORKING)
    else
        status.changeStatus(status.IDLE)
    end
end

local function main()
    logger.log(logger.INFO, ""Setting up quarry monitor"")
    loadConfig()

    while true do
        updateStatus()
        status.handleHeartbeat()
    end
end

main()
"
zW4Mv52i,Admin Gustian,PapiGemezs,PHP,Sunday 17th of March 2024 10:35:17 AM CDT,"{
   ""Gustian"": [
      {
         ""version"": 1.1
      }
   ]
}"
ug1ZJFTk,Admin KingStore,PapiGemezs,PHP,Sunday 17th of March 2024 10:32:59 AM CDT,"{
   ""KingStore"": [
      {
         ""version"": 1.1
      }
   ]
}"
eLX9rXuX,pactl list sources modules sinks,iconoclasthero,Bash,Sunday 17th of March 2024 10:24:29 AM CDT,"$ pactl list modules sources sinks
Sink #50
	State: IDLE
	Name: alsa_output.pci-0000_00_1f.3.analog-stereo
	Description: Built-in Audio Analog Stereo
	Driver: PipeWire
	Sample Specification: s32le 2ch 48000Hz
	Channel Map: front-left,front-right
	Owner Module: 4294967295
	Mute: no
	Volume: front-left: 45876 /  70% / -9.29 dB,   front-right: 45876 /  70% / -9.29 dB
	        balance 0.00
	Base Volume: 65536 / 100% / 0.00 dB
	Monitor Source: alsa_output.pci-0000_00_1f.3.analog-stereo.monitor
	Latency: 0 usec, configured 0 usec
	Flags: HARDWARE HW_MUTE_CTRL HW_VOLUME_CTRL DECIBEL_VOLUME LATENCY 
	Properties:
		alsa.card = ""0""
		alsa.card_name = ""HDA Intel PCH""
		alsa.class = ""generic""
		alsa.device = ""0""
		alsa.driver_name = ""snd_hda_intel""
		alsa.id = ""ALC3253 Analog""
		alsa.long_card_name = ""HDA Intel PCH at 0xec228000 irq 150""
		alsa.name = ""ALC3253 Analog""
		alsa.resolution_bits = ""16""
		alsa.subclass = ""generic-mix""
		alsa.subdevice = ""0""
		alsa.subdevice_name = ""subdevice #0""
		api.alsa.card.longname = ""HDA Intel PCH at 0xec228000 irq 150""
		api.alsa.card.name = ""HDA Intel PCH""
		api.alsa.path = ""front:0""
		api.alsa.pcm.card = ""0""
		api.alsa.pcm.stream = ""playback""
		audio.channels = ""2""
		audio.position = ""FL,FR""
		card.profile.device = ""6""
		device.api = ""alsa""
		device.class = ""sound""
		device.id = ""46""
		device.profile.description = ""Analog Stereo""
		device.profile.name = ""analog-stereo""
		device.routes = ""2""
		factory.name = ""api.alsa.pcm.sink""
		media.class = ""Audio/Sink""
		device.description = ""Built-in Audio Analog Stereo""
		node.name = ""alsa_output.pci-0000_00_1f.3.analog-stereo""
		node.nick = ""HDA Intel PCH""
		node.pause-on-idle = ""false""
		object.path = ""alsa:pcm:0:front:0:playback""
		priority.driver = ""1009""
		priority.session = ""1009""
		factory.id = ""18""
		client.id = ""33""
		clock.quantum-limit = ""8192""
		node.driver = ""true""
		factory.mode = ""merge""
		audio.adapt.follower = """"
		library.name = ""audioconvert/libspa-audioconvert""
		object.id = ""49""
		object.serial = ""50""
		node.max-latency = ""16384/48000""
	Ports:
		analog-output-speaker: Speakers (type: Speaker, priority: 10000, availability group: Legacy 3, availability unknown)
		analog-output-headphones: Headphones (type: Headphones, priority: 9900, availability group: Legacy 2, not available)
	Active Port: analog-output-speaker
	Formats:
		pcm

Sink #534
	State: RUNNING
	Name: monitor
	Description: audio
	Driver: PipeWire
	Sample Specification: float32le 2ch 48000Hz
	Channel Map: front-left,front-right
	Owner Module: 536870914
	Mute: no
	Volume: front-left: 65536 / 100% / 0.00 dB,   front-right: 65536 / 100% / 0.00 dB
	        balance 0.00
	Base Volume: 65536 / 100% / 0.00 dB
	Monitor Source: monitor.monitor
	Latency: 0 usec, configured 0 usec
	Flags: DECIBEL_VOLUME LATENCY 
	Properties:
		module.author = ""Wim Taymans <wim.taymans@gmail.com>""
		module.description = ""A NULL sink""
		module.usage = ""sink_name=<name of sink> sink_properties=<properties for the sink> format=<sample format> rate=<sample rate> channels=<number of channels> channel_map=<channel map>""
		module.version = ""0.3.48""
		node.name = ""monitor""
		device.description = ""audio""
		audio.channels = ""2""
		audio.position = ""FL,FR""
		media.class = ""Audio/Sink""
		factory.name = ""support.null-audio-sink""
		monitor.channel-volumes = ""true""
		pulse.module.id = ""536870914""
		factory.id = ""18""
		client.id = ""74""
		clock.quantum-limit = ""8192""
		node.driver = ""true""
		factory.mode = ""merge""
		audio.adapt.follower = """"
		library.name = ""audioconvert/libspa-audioconvert""
		object.id = ""75""
		object.serial = ""534""
	Formats:
		pcm

Sink #999
	State: IDLE
	Name: bluez_output.00_42_79_D9_B6_AF.a2dp-sink
	Description: JBL Xtreme 2
	Driver: PipeWire
	Sample Specification: s16le 2ch 48000Hz
	Channel Map: front-left,front-right
	Owner Module: 4294967295
	Mute: no
	Volume: front-left: 35606 /  54% / -15.90 dB,   front-right: 35606 /  54% / -15.90 dB
	        balance 0.00
	Base Volume: 65536 / 100% / 0.00 dB
	Monitor Source: bluez_output.00_42_79_D9_B6_AF.a2dp-sink.monitor
	Latency: 0 usec, configured 0 usec
	Flags: HARDWARE HW_VOLUME_CTRL DECIBEL_VOLUME LATENCY 
	Properties:
		api.bluez5.address = ""00:42:79:D9:B6:AF""
		api.bluez5.codec = ""sbc""
		api.bluez5.profile = ""a2dp-sink""
		api.bluez5.transport = """"
		card.profile.device = ""1""
		device.id = ""64""
		device.routes = ""1""
		factory.name = ""api.bluez5.a2dp.sink""
		device.description = ""JBL Xtreme 2""
		node.name = ""bluez_output.00_42_79_D9_B6_AF.a2dp-sink""
		node.pause-on-idle = ""false""
		priority.driver = ""1010""
		priority.session = ""1010""
		factory.id = ""8""
		clock.quantum-limit = ""8192""
		device.api = ""bluez5""
		media.class = ""Audio/Sink""
		node.driver = ""true""
		node.latency = ""512/48000""
		factory.mode = ""merge""
		audio.adapt.follower = """"
		library.name = ""audioconvert/libspa-audioconvert""
		object.id = ""70""
		object.serial = ""999""
		client.id = ""33""
	Ports:
		speaker-output: Speaker (type: Speaker, priority: 0, available)
	Active Port: speaker-output
	Formats:
		pcm
"
E8kbfK1e,stopwatch - measures time between a certain start & end point,pintcat,Bash,Sunday 17th of March 2024 10:14:11 AM CDT,"##############################################################################################################
# stopwatch v1.4 - simple tool to measure time between a certain start & end point                           #
# Handshake:                                                                                                 #
# $SW_PREC sets the precision level. Higher values result in larger, more precise measurements (default: 3)  #
# Usage: If called the first time it sets the current time as start time. If called every other time it      #
#  calculates and shows the difference between start and current time and also sets the current time as next #
#  start time.                                                                                               #
##############################################################################################################

SW_PREC=3
SW_START=

SW_TRIGGER(){
	SW_MULT=1$(printf %""$SW_PREC""s | tr "" "" ""0"")
	SW_TIME=$(date +%s:%""$SW_PREC""N | awk -F ':' '{print ($1*'$SW_MULT')+$2}')
	if [ -n ""$SW_START"" ]; then
		SW_DIFF=$(($(date +%s:%""$SW_PREC""N | awk -F ':' '{print ($1*'$SW_MULT')+$2}')-$SW_START))
		[ $SW_PREC -gt 3 ] && SW_DIFF=$(printf $SW_DIFF | awk '{printf(""%.""SW_DP""f\n"",$1/10^SW_DP)}' SW_DP=$(($SW_PREC-3)))
		echo $SW_DIFF""ms""
	fi
	SW_START=$SW_TIME
}
"
vbzEgRpr,MQTT Battery,Emilica,Kotlin,Sunday 17th of March 2024 10:09:24 AM CDT,"== MainActivity ==

class MainActivity : AppCompatActivity() {

    private lateinit var mqttClient : MQTTClient
    @RequiresApi(Build.VERSION_CODES.M)
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val batteryChangeListener = BatteryChangeListener()
        val filter = IntentFilter(Intent.ACTION_BATTERY_CHANGED)
        registerReceiver(batteryChangeListener, filter)

                 //----------------------------------------------------------------------------------
        findViewById<Button>(R.id.button_connect).setOnClickListener{
            // Get arguments passed by ConnectFragment
            val serverURI   = ""tcp://192.168.0.72:1883""
            val clientId    = ""UrgTT""
            val username    = ""mqtt_face""
            val pwd         = ""mqtt_pass""
            val topic       = ""homeassistant/phonebat""

            // Check if passed arguments are valid
            if (    serverURI   != null    &&
                clientId    != null    &&
                username    != null    &&
                pwd         != null        ) {
                // Open MQTT Broker communication
                mqttClient = MQTTClient(this, serverURI, clientId)

                // Connect and login to MQTT Broker
                mqttClient.connect( username,
                    pwd,
                    object : IMqttActionListener {
                        override fun onSuccess(asyncActionToken: IMqttToken?) {
                            Log.d(this.javaClass.name, ""Connection success"")
                            Toast.makeText(this@MainActivity, ""MQTT Connection success"", Toast.LENGTH_SHORT).show()
                        }

                        override fun onFailure(asyncActionToken: IMqttToken?, exception: Throwable?) {
                            Log.d(this.javaClass.name, ""Connection failure: ${exception.toString()}"")
                            Toast.makeText(this@MainActivity, ""MQTT Connection fails: ${exception.toString()}"", Toast.LENGTH_SHORT).show()
                        }
                    },
                    object : MqttCallback {
                        override fun messageArrived(topic: String?, message: MqttMessage?) {
                            val msg = ""Receive message: ${message.toString()} from topic: $topic""
                            Log.d(this.javaClass.name, msg)
                            Toast.makeText(this@MainActivity, msg, Toast.LENGTH_SHORT).show()
                        }

                        override fun connectionLost(cause: Throwable?) {
                            Log.d(this.javaClass.name, ""Connection lost ${cause.toString()}"")
                        }

                        override fun deliveryComplete(token: IMqttDeliveryToken?) {
                            Log.d(this.javaClass.name, ""Delivery complete"")
                        }
                    })
            }
        }
        //======================================================================
        findViewById<Button>(R.id.btnDisconnect).setOnClickListener {

            if (mqttClient.isConnected()) {
                // Disconnect from MQTT Broker
                mqttClient.disconnect(object : IMqttActionListener {
                    override fun onSuccess(asyncActionToken: IMqttToken?) {
                        Log.d(this.javaClass.name, ""Disconnected"")
                        Toast.makeText(this@MainActivity, ""MQTT Disconnection success"", Toast.LENGTH_SHORT).show()

                    }
                    override fun onFailure(asyncActionToken: IMqttToken?, exception: Throwable?) {
                        Log.d(this.javaClass.name, ""Failed to disconnect"")
                    }
                })
            } else {
                Log.d(this.javaClass.name, ""Impossible to disconnect, no server connected"")
            }
        }
        //====================================================================================
        findViewById<Button>(R.id.btnPublish).setOnClickListener {

            val topic   = findViewById<EditText>(R.id.editText_topic).text.toString()
            val message = findViewById<EditText>(R.id.editText_msg).text.toString()

            if (mqttClient.isConnected()) {
                mqttClient.publish(topic,
                    message,
                    1,
                    false,
                    object : IMqttActionListener {
                        override fun onSuccess(asyncActionToken: IMqttToken?) {
                            val msg =""Publish message: $message to topic: $topic""
                            Log.d(this.javaClass.name, msg)
                            Toast.makeText(this@MainActivity, msg, Toast.LENGTH_SHORT).show()
                        }
                        override fun onFailure(asyncActionToken: IMqttToken?, exception: Throwable?) {
                            Log.d(this.javaClass.name, ""Failed to publish message to topic"")
                        }
                    })
            } else {
                Log.d(this.javaClass.name, ""Impossible to publish, no server connected"")
            }
        }
    //===========================================================================================
    }//override fun onCreate


}
//==================================================================================================================================
== batteryChanging.kt ==

class BatteryChangeListener : BroadcastReceiver() {

    override fun onReceive(context: Context?, intent: Intent?) {

        if (intent?.action == Intent.ACTION_BATTERY_CHANGED) {

            var percent = intent.getIntExtra(BatteryManager.EXTRA_LEVEL, -1)
            var status_int = intent.getIntExtra(BatteryManager.EXTRA_STATUS, -1)

            var starea : String = """"

            var status = when (status_int) {
                2 ->   ""Charging""       //""BATTERY_STATUS_CHARGING""
                3 ->   ""Discharging""    //""BATTERY_STATUS_DISCHARGING""
                4 ->   ""NotCharging""    //""BATTERY_STATUS_NOT_CHARGING""
                5 ->   ""Full""           //""BATTERY_STATUS_FULL""
                else -> ""Invalid_Status"" // 1 -> Unknown
            }

            starea = ""{\""percent\"":$percent,\""state\"":\""$status\""}""
            Toast.makeText(context, ""$starea"", Toast.LENGTH_SHORT).show()

             //sendToMQTTBroker(starea)
        }
    }

}// class BatteryChangeListener
//===============================================================================================================================
== MQTTClient.kt ==

class MQTTClient(context: Context?,
                 serverURI: String,
                 clientID: String = """") {
    private var mqttClient = MqttAndroidClient(context, serverURI, clientID)
    private val defaultCbConnect = object : IMqttActionListener {
        override fun onSuccess(asyncActionToken: IMqttToken?) {
            Log.d(this.javaClass.name, ""(Default) Connection success"")
        }

        override fun onFailure(asyncActionToken: IMqttToken?, exception: Throwable?) {
            Log.d(this.javaClass.name, ""Connection failure: ${exception.toString()}"")
        }
    }
    private val defaultCbClient = object : MqttCallback {
        override fun messageArrived(topic: String?, message: MqttMessage?) {
            Log.d(this.javaClass.name, ""Receive message: ${message.toString()} from topic: $topic"")
        }

        override fun connectionLost(cause: Throwable?) {
            Log.d(this.javaClass.name, ""Connection lost ${cause.toString()}"")
        }

        override fun deliveryComplete(token: IMqttDeliveryToken?) {
            Log.d(this.javaClass.name, ""Delivery completed"")
        }
    }
    private val defaultCbSubscribe = object : IMqttActionListener {
        override fun onSuccess(asyncActionToken: IMqttToken?) {
            Log.d(this.javaClass.name, ""Subscribed to topic"")
        }

        override fun onFailure(asyncActionToken: IMqttToken?, exception: Throwable?) {
            Log.d(this.javaClass.name, ""Failed to subscribe topic"")
        }
    }
    private val defaultCbUnsubscribe = object : IMqttActionListener {
        override fun onSuccess(asyncActionToken: IMqttToken?) {
            Log.d(this.javaClass.name, ""Unsubscribed to topic"")
        }

        override fun onFailure(asyncActionToken: IMqttToken?, exception: Throwable?) {
            Log.d(this.javaClass.name, ""Failed to unsubscribe topic"")
        }
    }
    private val defaultCbPublish = object : IMqttActionListener {
        override fun onSuccess(asyncActionToken: IMqttToken?) {
            Log.d(this.javaClass.name, ""Message published to topic"")
        }

        override fun onFailure(asyncActionToken: IMqttToken?, exception: Throwable?) {
            Log.d(this.javaClass.name, ""Failed to publish message to topic"")
        }
    }
    private val defaultCbDisconnect = object : IMqttActionListener {
        override fun onSuccess(asyncActionToken: IMqttToken?) {
            Log.d(this.javaClass.name, ""Disconnected"")
        }

        override fun onFailure(asyncActionToken: IMqttToken?, exception: Throwable?) {
            Log.d(this.javaClass.name, ""Failed to disconnect"")
        }
    }

    fun connect(username:   String               = """",
                password:   String               = """",
                cbConnect:  IMqttActionListener  = defaultCbConnect,
                cbClient:   MqttCallback         = defaultCbClient) {
        mqttClient.setCallback(cbClient)
        val options = MqttConnectOptions()
        options.userName = username
        options.password = password.toCharArray()

        try {
            mqttClient.connect(options, null, cbConnect)
        } catch (e: MqttException) {
            e.printStackTrace()
        }
    }

    fun isConnected(): Boolean {
        return mqttClient.isConnected
    }

    fun subscribe(topic:        String,
                  qos:          Int                 = 1,
                  cbSubscribe:  IMqttActionListener = defaultCbSubscribe) {
        try {
            mqttClient.subscribe(topic, qos, null, cbSubscribe)
        } catch (e: MqttException) {
            e.printStackTrace()
        }
    }

    fun unsubscribe(topic:          String,
                    cbUnsubscribe:  IMqttActionListener = defaultCbUnsubscribe) {
        try {
            mqttClient.unsubscribe(topic, null, cbUnsubscribe)
        } catch (e: MqttException) {
            e.printStackTrace()
        }
    }

    fun publish(topic:      String,
                msg:        String,
                qos:        Int                 = 1,
                retained:   Boolean             = false,
                cbPublish:  IMqttActionListener = defaultCbPublish) {
        try {
            val message = MqttMessage()
            message.payload = msg.toByteArray()
            message.qos = qos
            message.isRetained = retained
            mqttClient.publish(topic, message, null, cbPublish)
        } catch (e: MqttException) {
            e.printStackTrace()
        }
    }

    fun disconnect(cbDisconnect: IMqttActionListener = defaultCbDisconnect ) {
        try {
            mqttClient.disconnect(null, cbDisconnect)
        } catch (e: MqttException) {
            e.printStackTrace()
        }
    }
}
//=============================================================================================================================
"
h9QALsFH,debounceWithoutDebounce,Ruslan_nig,Arduino,Sunday 17th of March 2024 10:04:44 AM CDT,"//в этом коде дребезг в общем-то не обрабатывается
//а используется обходной приём
const byte ledPin = 9;
const byte buttonPin = 8;
volatile bool toggleState = false;

void checkSwitch(){
  if(digitalRead(buttonPin) == LOW){
    delay(200);
//тут нет как таковой защиты от дребезга, просто после мгновенного выполнения if в течение delay ниакие процессы не работают
//в том числе и дребезг во время delay ""не работает"", то есть игнорируется как и всё остальное
//переключение toggleState наступает после delay, но к этому времени все действия с кнопкой уже завершены
//поэтому важна длительность данного delay, если она будет менее 150 мс, 
//то возможно кнопка ещё будет в ""физическом процессе""
//если будет занчительно больше 200 мс, например 1 сек, то переключение toggleState будет происходить с этой задержкой
    toggleState = !toggleState;
    digitalWrite(ledPin, toggleState);
  }
}

void setup() {
pinMode(buttonPin,INPUT_PULLUP);
pinMode(ledPin,OUTPUT);
}

void loop() {
  checkSwitch();
}
"
dwE5Wwii,Admin Acil,PapiGemezs,PHP,Sunday 17th of March 2024 09:50:18 AM CDT,"{
   ""Acil"": [
      {
         ""version"": 1.1
      }
   ]
}"
hnGv9PqX,CharacterService,TaylorsRus,Lua,Sunday 17th of March 2024 09:48:11 AM CDT,"-- [[ Services ]] --
local ReplicatedStorage = game:GetService('ReplicatedStorage');
local CollectionService = game:GetService(""CollectionService"")

-- [[ Resources ]] --
local CardinalSystem = require(ReplicatedStorage:WaitForChild('CardinalSystem'));

-- [[ Variables ]] --
local Assets = ReplicatedStorage:FindFirstChild(""Assets"");
assert(Assets, ""Assets not found."");
local Outfits = Assets:FindFirstChild(""Outfits"");
assert(Outfits, ""Outfits couldn't be found."");
local Katana = Assets:FindFirstChild(""Katana"");
local Motors = Katana and Katana:FindFirstChild(""Motors"");
assert(Motors, ""Motors couldn't be found."");
local Models = Katana and Katana:FindFirstChild(""Models"");
assert(Models, ""Katana Models couldn't be found."");

-- [[ Service ]] --
local CharacterService = CardinalSystem:CreateService({
	Name = 'CharacterService';
});

local function ToggleAnchor(Character : Model, Bool : boolean)
	for _,Basepart in pairs(Character:GetDescendants()) do
		if Basepart:IsA(""BasePart"") then
			Basepart.Anchored = Bool
		end
	end
end

function CharacterService:OnInit()
	self.Services = {
		DatastoreService = CardinalSystem:GetService('DatastoreService');
		BreathingService = CardinalSystem:GetService(""BreathingService"")
	};

	self.Resources = {
		StatusHandler = CardinalSystem:LoadLibrary('StatusHandler');
		LimbsHandler = CardinalSystem:LoadLibrary(""Limbs"");
		Janitor = CardinalSystem:LoadLibrary(""Janitor"");
	};

	self.Clothings = {};
	self.StatusHandlers = {};
	self.Limbs = {};
end

local _BaseStatus = {
	{
		Type = ""Breathe"",
		Value = 0;
		Min = 0;
		Max = 100;
	};
}

function CharacterService:AddStatusHandler(Character: Model)
	local StatusHandler = self.Resources.StatusHandler;
	local LimbsHandler = self.Resources.LimbsHandler;
	local Janitor = self.Resources.Janitor;

	local Handler = StatusHandler.new(Character);
	local Limbs = LimbsHandler.new(Character);

	local _Janitor = Janitor.new();

	_Janitor:Add(function()
		Handler:Destroy();
		Limbs:Destroy();
		self.Limbs[Character] = nil;
		self.StatusHandlers[Character] = nil;
	end, true);

	_Janitor:LinkToInstance(Character);
	Character.Humanoid.Died:Connect(function()
		Character:BreakJoints()
		_Janitor:Cleanup()
	end)

	self.StatusHandlers[Character] = Handler;
	self.Limbs[Character] = Limbs;

	for _, Table in pairs(_BaseStatus) do
		Handler:AddStatus(Table)
	end
	
	self.Services.BreathingService:InitPlayer(Character, Handler)
	
	return Handler;
end

function CharacterService:HandleRagdoll(Character : Model, Humanoid : Humanoid)
	local Janitor = self.Resources.Janitor

	local _Janitor = Janitor.new()
	print(""HandleRagdoll"")

	_Janitor:Add(Humanoid:GetPropertyChangedSignal(""Health""):Connect(function()
		local NewHealth = math.ceil(Humanoid.Health)
		if CollectionService:HasTag(Character, ""Ragdolled"") then
			if NewHealth >= 20 then
				CollectionService:RemoveTag(Character, ""Ragdolled"")
				ToggleAnchor(Character, false)
				task.wait(.1)
				Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
			end
		else
			if NewHealth <= 0 and not CollectionService:HasTag(Character, ""Ragdolled"") then
				print(""Activating ragdoll"")
				task.wait(.1)
				CollectionService:AddTag(Character, ""Ragdolled"")
				Humanoid:ChangeState(Enum.HumanoidStateType.Ragdoll)
				--Character.HumanoidRootPart:ApplyAngularImpulse(Vector3.new(-90, 0, 0))
			end
		end

	end), ""Disconnect"")
	_Janitor:LinkToInstance(Character)

	Humanoid.BreakJointsOnDeath = false
	Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
	Humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
end

local function Weld(P0, P1, RefPart) -- P0 for Character Part, P1 For new part
	P1.CFrame = P0.CFrame * (RefPart.CFrame:Inverse() * P1.CFrame)
	
	local WeldConst = Instance.new(""WeldConstraint"", P1)
	WeldConst.Part0 = P0
	WeldConst.Part1 = P1
	return WeldConst
end

function CharacterService:SetupHaori(Character, Style: string)
	local HaoriModel = Assets.Models.Haoris:FindFirstChild(""Haori ""..Style)
	local HaoriRef = HaoriModel
	if HaoriModel then
		local StoreFolder = Instance.new(""Folder"", Character); StoreFolder.Name = ""Haori""
		HaoriModel = HaoriModel.Haori:Clone()
		HaoriModel.Parent = Character
		local function SetupBaseparts()
			for _, Basepart in pairs(HaoriModel:GetChildren()) do
				if Basepart:IsA(""BasePart"") then
					Basepart.Parent = StoreFolder
					Weld(Character:FindFirstChild(Basepart.Name), Basepart, HaoriRef.Rig:FindFirstChild(Basepart.Name))
				end
			end
		end
		SetupBaseparts()
	end
end

function CharacterService:SetupUniform(Character, Style: string)
	local UniModel = Assets.Models.Uniforms:FindFirstChild(Style)
	local ReferenceModel = UniModel
	if UniModel then
		local StoreFolder = Instance.new(""Folder"", Character); StoreFolder.Name = Style
		UniModel = UniModel.Cloth:Clone()
		UniModel.Parent = Character
		local function SetupBaseparts()
			for _, Basepart in pairs(UniModel:GetChildren()) do
				if Basepart:IsA(""BasePart"") then
					Basepart.Parent = StoreFolder
					Weld(Character:FindFirstChild(Basepart.Name), Basepart, ReferenceModel.Rig:FindFirstChild(Basepart.Name))
				end
			end
		end
		SetupBaseparts()
	end
end

function CharacterService:UpdateClothing(Player: Player)
	local DatastoreService = self.Services.DatastoreService;

	if not DatastoreService then
		return
	end

	local Clothing = self.Clothings[Player];
	if not Clothing then
		repeat
			Clothing = self.Clothings[Player];
			task.wait();
		until Clothing;
	end

	local Shirt = Clothing.Shirt;
	local Pants = Clothing.Pants;

	DatastoreService:GetPlayerProfile(Player):andThen(function(Profile)
		local Data = Profile:GetData();
		if not Data then return end

		local Success, Selected = pcall(function()
			return Outfits[tostring(Data.Customization.Shirt.Id)].Shirt;
		end)

		if Success and Shirt and Selected then
			Shirt.ShirtTemplate = Selected.ShirtTemplate;
		end

		Success, Selected = pcall(function()
			return Outfits[tostring(Data.Customization.Pants.Id)].Pants;
		end)

		if Success and Pants and Selected then
			Pants.PantsTemplate = Selected.PantsTemplate;
		end
		
		
	end)
end

function CharacterService:OnCharacterAdded(Character: Model, Player: Player)
	local DatastoreService = self.Services.DatastoreService;

	if not DatastoreService then
		return
	end

	local Hrp = Character:WaitForChild(""HumanoidRootPart"");
	Character.Parent = workspace:FindFirstChild(""Living"");

	DatastoreService:GetPlayerProfile(Player):andThen(function(Profile)
		local Data = Profile:GetData();
		if not Data then return end

		local Location = Data.Stats.Location;
		Hrp.CFrame = CFrame.new(Location.X, Location.Y, Location.Z);

		if Data.Stats.Race == ""Human"" then
			local Torso = Character:FindFirstChild(""Torso"");
			local Folder = Models:FindFirstChild(tostring(Data.Customization.Nichirin.Id));
			if Torso and Folder then
				local Weapon = Folder:FindFirstChild(""Weapon"");
				if Weapon then
					local Motor = Motors.Handle:Clone();
					Motor.Part0 = Character[""Right Arm""];
					Motor.Enabled = false;

					Weapon = Weapon:Clone();
					Motor.Part1 = Weapon.PrimaryPart;
					Motor.Parent = Weapon.Welds;
					Weapon.Parent = Character;
				end

				local Sheathe = Folder:FindFirstChild(""Sheathe"");
				if Sheathe then
					local Motor = Motors.Sheathe:Clone();
					Motor.Part0 = Torso;

					local Motor1 = Motors.DefaultSheathe:Clone();

					Sheathe = Sheathe:Clone();
					Motor.Part1 = Sheathe.PrimaryPart;
					Motor1.Part0 = Sheathe.PrimaryPart;
					Motor1.Part1 = Character:FindFirstChild(""Weapon"") and Character.Weapon.PrimaryPart;
					Motor.Parent = Sheathe.Welds;
					Motor1.Parent = Sheathe.Welds;

					Motor.Enabled = true;
					Motor1.Enabled = true;

					Sheathe.Parent = Character;
				end
			end
		end
	end)

	local Shirt = Character:FindFirstChild(""Shirt"");
	local Pants = Character:FindFirstChild(""Pants"");

	if not Shirt then
		Shirt = Instance.new(""Shirt"");
		Shirt.Name = ""Shirt"";
		Shirt.Parent = Character;
	end

	if not Pants then
		Pants = Instance.new(""Pants"");
		Shirt.Name = ""Pants"";
		Pants.Parent = Character;
	end

	self.Clothings[Player] = {
		Shirt = Shirt;
		Pants = Pants;
	}

	self:UpdateClothing(Player);
	self:AddStatusHandler(Character);
	
	self:SetupUniform(Character, ""Slayers"")
	
	local Humanoid = Character:WaitForChild(""Humanoid"",20)
	self:HandleRagdoll(Character, Humanoid)
end

function CharacterService:OnHeartbeat(dt)
	for _, Handler in pairs(self.StatusHandlers) do
		task.spawn(Handler._OnHeartbeat, Handler, dt);
	end
end

return CharacterService;"
ZJiaa05e,Admin DsPro,PapiGemezs,PHP,Sunday 17th of March 2024 09:47:14 AM CDT,"{
   ""DsPro"": [
      {
         ""version"": 1.1
      }
   ]
}"
cqVWHqVy,zoomer.pyw,AbdeltwabMF,C++,Sunday 17th of March 2024 09:23:57 AM CDT,"from time import sleep
from webbrowser import open
from datetime import datetime, timedelta


TOOLING_ZOOM_URL = ""https://zoom.us/j/80071805851?pwd=SmFNNThINEg2aFI2REZQbEExV74gdz09""
WORKING_DAYS = [
  'Sunday',
  'Monday',
  'Tuesday',
  'Wednesday',
  'Thursday',
]

current_date = datetime.now().date()
# !Add meeting time (in 24-format) and url as needed
meeting_schedule = [
  {'time': datetime.combine(current_date, datetime.strptime('08:59:00', '%H:%M:%S').time()), 'url': TOOLING_ZOOM_URL},
]
meeting_schedule.sort(key=lambda x: x['time'])

while True:
  # Get the current time
  now = datetime.now()
  day_name = now.strftime(""%A"")

  # Loop through the meeting schedule
  for meeting in meeting_schedule:
    if day_name in WORKING_DAYS and now < meeting['time']:
      # Calculate the time until the next meeting
      difference = (meeting['time'] - now).total_seconds()

      # Sleep until the next meeting
      sleep(difference)

      # Launch the Zoom meeting
      open(meeting['url'])

      # Break out of the loop and wait until the next meeting
      break

  # If there are no more meetings today, sleep until tomorrow
  else:
    tomorrow = now.date() + timedelta(days=1)
    next_meeting_time = datetime.combine(tomorrow, meeting_schedule[0]['time'].time())
    difference = (next_meeting_time - now).total_seconds()
    sleep(difference)"
WC9xTKbF,Untitled,Josif_tepe,C++,Sunday 17th of March 2024 09:22:29 AM CDT,"#include <iostream>
#include <vector>

using namespace std;
typedef long long ll;
const int maxn = 2e5 + 10;
const int logn = 18;
int parent[maxn][logn];
vector<int> depth(maxn, 0);
vector<int> graph[maxn];
int timer = 0;
int in_time[maxn], out_time[maxn];
void dfs(int node, int prev) {
    timer++;
    in_time[node] = timer;
    parent[node][0] = prev;
    for(int i = 1; i < logn; i++) {
        parent[node][i] = parent[parent[node][i - 1]][i - 1];
    }
    for(int neighbour : graph[node]) {
        if(prev != neighbour) {
            dfs(neighbour, node);
        }
    }



    timer++;
    out_time[node] = timer;
}
bool is_ancestor(int a, int b) {
    return (in_time[a] <= in_time[b] and out_time[a] >= out_time[b]);
}
int LCA(int a, int b) {
    if(is_ancestor(a, b)) {
        return a;
    }
    if(is_ancestor(b, a)) {
        return b;
    }
    for(int i = logn - 1; i >= 0; i--) {
        if(!is_ancestor(parent[a][i], b)) {
            a = parent[a][i];
        }
    }
    return parent[a][0];
}

int main() {
    int n, q;
    cin >> n >> q;
    vector<int> tree(n + 1, -1);
    
    for(int i = 2; i <= n; i++) {
        cin >> tree[i];
        graph[i].push_back(tree[i]);
        graph[tree[i]].push_back(i);
        parent[i][0] = tree[i];
    }
    parent[1][0] = -1;
    dfs(1, 1);
    while(q--) {
        int a, b;
        cin >> a >> b;
        cout << LCA(a, b) << endl;
    }
    return 0;
}

"
ZgabQPiG,TowerScript(EP.11),Anukun_Lucifer,Lua,Sunday 17th of March 2024 09:10:38 AM CDT,"local physicsservice = game:GetService(""PhysicsService"")
local serverstorage = game:GetService(""ServerStorage"")
local replicatedstorage = game:GetService(""ReplicatedStorage"")

local functions = replicatedstorage:WaitForChild(""Functions"")
local requestTowerFuntion = functions:WaitForChild(""RequestTower"")
local event = replicatedstorage:WaitForChild(""Events"")
local spawntowerFuntion = functions:WaitForChild(""SpawnTower"")
local animatetowerevent = event:WaitForChild(""AnimateTower"")
local maxTowers = 10

local tower = {}
--------------------------------------------
local function FindNearestTarget(newTower,range)
	local nearestTarget = nil

	for i, target in ipairs(workspace.Grassland.Mob:GetChildren()) do
		local distance = (target.HumanoidRootPart.Position - newTower.HumanoidRootPart.Position).Magnitude
		if distance < range then
			nearestTarget = target
			range = distance
		end
	end

	return nearestTarget
end

function tower.Attack(newTower ,player)
	local config = newTower.Config
	local target = FindNearestTarget(newTower,config.Range.Value)
	
	if target and target:FindFirstChild(""Humanoid"") and target.Humanoid.Health > 0 then
		
		local targetCFrame = CFrame.lookAt(newTower.HumanoidRootPart.Position, target.HumanoidRootPart.Position)
		newTower.HumanoidRootPart.BodyGyro.CFrame = targetCFrame
		
		animatetowerevent:FireAllClients(newTower, ""Attack"")
		target.Humanoid:TakeDamage(config.Damage.Value)
		
		if target.Humanoid.Health <= 0 then
			player.Gold.Value += target.Humanoid.MaxHealth
		end
		
		task.wait(config.Cooldown.Value)
		
	end
	task.wait(0.1)
	
	if newTower and newTower.Parent then
		tower.Attack(newTower, player)
	end
end
---------------------------------------------
function tower.Spawn(player, name, cframe, previous)
	local allowedToSpawn = tower.CheckSpawn(player, name)

	if allowedToSpawn then
		
		local newTower
		if previous then
			previous:Destroy()
			newTower = replicatedstorage.Towers.Upgrades[name]:Clone()
		else
			newTower = replicatedstorage.Towers[name]:Clone()
		end

		newTower.HumanoidRootPart.CFrame = cframe
		newTower.Parent = workspace.Grassland.Tower
		newTower.HumanoidRootPart:SetNetworkOwner(nil)
		
		local bodyGyro = Instance.new(""BodyGyro"")
		bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
		bodyGyro.D = 0
		bodyGyro.CFrame = newTower.HumanoidRootPart.CFrame
		bodyGyro.Parent = newTower.HumanoidRootPart

		for i, object in ipairs(newTower:GetDescendants()) do
			if object:IsA(""BasePart"") then
				physicsservice:SetPartCollisionGroup(object, ""Tower"")
			end
		end
		
		player.Gold.Value -= newTower.Config.Price.Value
		player.PlacedTowers.Value +=1
		
		coroutine.wrap(tower.Attack) (newTower ,player)
		
		return newTower
	else
		warn(""Requested mob dose not exist"",name)
		return false
	end
end

spawntowerFuntion.OnServerInvoke = tower.Spawn

function tower.CheckSpawn(player, name)
	local towerExists = replicatedstorage.Towers:FindFirstChild(name, true)
	
	if towerExists then
		if towerExists.Config.Price.Value <= player.Gold.Value then
			print(""okkkkkkkkkkkkkkkkkkkkkkkkkkkkkk"")
			if player.PlacedTowers.Value < maxTowers then
				return true
			end
		end
	end
	return false
end

requestTowerFuntion.OnServerInvoke = tower.CheckSpawn

return tower
"
