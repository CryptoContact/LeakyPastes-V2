id,title,username,language,date,content
GiYCEzx5,2023-11-20_stats.json,rdp_snitch,JSON,Tuesday 21st of November 2023 06:15:10 PM CDT,"{
  ""ip"": {
    ""207.148.77.173"": 46,
    ""50.118.145.49"": 6,
    ""194.165.17.21"": 72,
    ""20.127.65.148"": 6,
    ""172.233.198.57"": 24,
    ""58.218.204.183"": 9,
    ""45.227.254.54"": 6,
    ""185.195.59.224"": 3,
    ""106.116.169.71"": 6,
    ""49.157.46.212"": 3,
    ""142.93.234.101"": 3,
    ""205.210.31.175"": 9,
    ""167.248.133.35"": 3,
    ""45.227.254.26"": 6,
    ""180.93.172.226"": 3,
    ""212.70.149.146"": 3,
    ""36.91.222.100"": 9,
    ""202.165.85.100"": 6,
    ""198.235.24.50"": 9,
    ""185.220.103.12"": 3,
    ""45.227.254.49"": 6,
    ""165.154.182.154"": 3,
    ""146.70.126.175"": 3,
    ""103.178.59.224"": 24,
    ""192.46.227.151"": 6,
    ""138.199.34.136"": 6,
    ""205.210.31.110"": 9,
    ""173.230.152.219"": 12,
    ""163.228.231.145"": 3,
    ""45.227.254.55"": 6,
    ""142.4.218.114"": 3,
    ""213.32.39.47"": 3,
    ""149.28.70.189"": 3,
    ""162.243.174.58"": 3,
    ""51.75.160.42"": 6,
    ""205.210.31.25"": 9,
    ""106.246.227.18"": 6,
    ""118.32.156.55"": 6,
    ""103.20.191.77"": 9,
    ""141.98.11.169"": 3,
    ""45.77.252.32"": 42,
    ""45.77.32.122"": 33,
    ""207.148.65.47"": 72,
    ""149.28.141.233"": 24,
    ""139.180.157.164"": 51,
    ""149.28.153.131"": 15,
    ""45.76.157.103"": 15,
    ""45.76.187.31"": 66,
    ""45.76.179.129"": 36,
    ""149.28.154.181"": 48,
    ""66.42.63.228"": 48,
    ""45.77.47.166"": 72,
    ""45.77.168.153"": 63,
    ""149.28.139.58"": 57,
    ""45.32.107.0"": 39,
    ""45.77.174.169"": 42,
    ""139.180.157.3"": 27,
    ""149.28.131.228"": 33,
    ""139.180.153.225"": 42,
    ""45.77.174.85"": 51,
    ""45.77.169.252"": 72,
    ""45.77.171.162"": 45,
    ""149.28.146.83"": 24,
    ""139.180.136.174"": 33,
    ""149.28.148.186"": 60,
    ""45.76.145.95"": 30,
    ""139.180.218.216"": 42,
    ""207.148.117.212"": 51,
    ""207.148.69.159"": 54,
    ""45.76.184.249"": 24
  },
  ""asn"": {
    ""AS20473"": 1360,
    ""AS149440"": 6,
    ""AS48721"": 72,
    ""AS8075"": 6,
    ""AS63949"": 42,
    ""AS4134"": 15,
    ""AS267784"": 24,
    ""AS62240"": 3,
    ""AS9658"": 3,
    ""AS14061"": 6,
    ""AS396982"": 36,
    ""AS398324"": 3,
    ""AS135944"": 3,
    ""AS204428"": 3,
    ""AS7713"": 9,
    ""AS136255"": 6,
    ""AS4224"": 3,
    ""AS135377"": 3,
    ""AS9009"": 3,
    ""AS133676"": 24,
    ""AS212238"": 6,
    ""AS58593"": 3,
    ""AS16276"": 12,
    ""AS3786"": 6,
    ""AS4766"": 6,
    ""AS55685"": 9,
    ""AS209605"": 3
  },
  ""isp"": {
    ""Choopa"": 694,
    ""EGIHosting"": 6,
    ""Flyservers S.A."": 96,
    ""Microsoft Corporation"": 6,
    ""Akamai Technologies, Inc."": 42,
    ""Chinanet"": 15,
    ""New York Network"": 3,
    ""Eastern Telecommunications Philippines, Inc."": 3,
    ""DigitalOcean, LLC"": 6,
    ""Google LLC"": 36,
    ""Censys, Inc."": 3,
    ""SPT"": 3,
    ""SS-Net"": 3,
    ""PT Telekomunikasi Indonesia"": 9,
    ""Telecom International Myanmar Company Limited"": 6,
    ""The Calyx Institute"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""M247 Europe Infra"": 3,
    ""Precious netcom pvt ltd"": 24,
    ""Datacamp Limited"": 6,
    ""Shanghai Blue Cloud Technology Co., Ltd"": 3,
    ""OVH SAS"": 12,
    ""The Constant Company"": 666,
    ""LG DACOM Corporation"": 6,
    ""Korea Telecom"": 6,
    ""PT. Jala Lintas Media"": 9,
    ""UAB Host Baltic"": 3
  },
  ""org"": {
    ""Unknown"": 484,
    ""Evoxt"": 6,
    ""Flyservers S.A"": 72,
    ""Microsoft Azure Cloud (eastus)"": 6,
    ""Akamai Technologies, Inc."": 24,
    ""Chinanet JS"": 9,
    ""UAB Host Baltic"": 24,
    ""Packethub S.A"": 3,
    ""Chinanet HE"": 6,
    ""DSL Network"": 3,
    ""DigitalOcean, LLC"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 3,
    ""Saigon Postel Corporation"": 3,
    ""4Media Ltd"": 3,
    ""Telekomunikasi Indonesia"": 9,
    ""Mytel"": 6,
    ""The Calyx Institute"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""M247 Ltd Zurich"": 3,
    ""A ONE Services"": 24,
    ""Linode, LLC"": 6,
    ""Cdnext BRA"": 6,
    ""Linode"": 12,
    ""Microsoft Azure Cloud (chinanorth3)"": 3,
    ""OVH Hosting, Inc."": 3,
    ""ONYPHE"": 3,
    ""Vultr Holdings, LLC"": 894,
    ""Digital Ocean"": 3,
    ""OVH Ltd"": 6,
    ""Boranet"": 6
  },
  ""regionName"": {
    ""South West"": 1279,
    ""California"": 60,
    ""Kaunas"": 75,
    ""Virginia"": 30,
    ""Jiangsu"": 9,
    ""Vilnius"": 24,
    ""New York"": 6,
    ""Hebei"": 9,
    ""Metro Manila"": 3,
    ""North Holland"": 3,
    ""Michigan"": 3,
    ""Hanoi"": 3,
    ""Plovdiv"": 3,
    ""Jakarta"": 9,
    ""Yangon"": 6,
    ""Zurich"": 3,
    ""West Bengal"": 24,
    ""North West"": 6,
    ""Bratislava"": 6,
    ""Quebec"": 3,
    ""Hauts-de-France"": 3,
    ""New Jersey"": 3,
    ""England"": 6,
    ""Gyeonggi-do"": 6,
    ""Seoul"": 6,
    ""West Java"": 9,
    ""Central Singapore"": 78
  },
  ""country"": {
    ""Singapore"": 1363,
    ""United States"": 102,
    ""Lithuania"": 99,
    ""China"": 18,
    ""Philippines"": 3,
    ""The Netherlands"": 3,
    ""Vietnam"": 3,
    ""Bulgaria"": 3,
    ""Indonesia"": 18,
    ""Myanmar"": 6,
    ""Switzerland"": 3,
    ""India"": 24,
    ""Slovakia"": 6,
    ""Canada"": 3,
    ""France"": 3,
    ""United Kingdom"": 6,
    ""South Korea"": 12
  },
  ""account"": {
    ""142.93.8.59"": 1357,
    ""hello"": 186,
    ""Test"": 57,
    ""(empty)"": 15,
    ""gPaoPxznF"": 3,
    ""xYiaeZ"": 3,
    ""KWlIOP"": 3,
    ""XksJZdFDR"": 3,
    ""boBvnD"": 3,
    ""gLpwNs"": 3,
    ""Administrator"": 9,
    ""OkXdutKZU"": 3,
    ""RzzBIf"": 3,
    ""aYlOsQ"": 3,
    ""b0zl37cv"": 12,
    ""beio"": 3,
    ""kAZogSYhe"": 3,
    ""HjyaWz"": 3,
    ""BzmbsY"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1675
  },
  ""client_build"": {
    ""Unknown"": 1675
  },
  ""client_name"": {
    ""Unknown"": 1675
  },
  ""ip_type"": {
    ""hosting"": 1423,
    ""Unknown"": 183,
    ""proxy"": 15,
    ""hosting & proxy"": 54
  }
}"
ZMtYvkiv,Untitled,Dorex,Linden Scripting,Tuesday 21st of November 2023 05:46:57 PM CDT,"//
//##############################################################################
//
// Get The Avatars Key By Name
//
// Dorex Delicioso 2023
//
// YouTube: https://www.youtube.com/@SecondLifeSimplyScripting
// Marketplace: https://marketplace.secondlife.com/stores/173632
//
//##############################################################################

// ############################## VARIABLES ####################################

key name_key_query;

// ############################## DEFAULT STATE ##############################
// ############################## DEFAULT STATE ##############################
// ############################## DEFAULT STATE ##############################

default
{  

    touch_start(integer num_detected){
        //
        // Turns an av's name into their key. They don't have to be in the same region
        //          
        name_key_query = llRequestUserKey(""Dorex Delicioso"");
    }

    dataserver(key queryid, string data) 
    {
       if ( name_key_query == queryid ){
         
            llOwnerSay(""Av Key "" + data);
       } 
    }
}"
Ga7sau5h,Untitled,MrFast,Java,Tuesday 21st of November 2023 05:35:18 PM CDT,"if i have a open source large scale java application being used by people around the world how can i make a server in with node js that will only accept requests from that compiled java application, do not use any ip whitelisting anybody should be able to use the api, just as long as it is through the application. Im using Java 8 with gradle. https://google.com"
gVpKsN6X,BTC Wallet Credentials have been reset,VQ-Moe,GetText,Tuesday 21st of November 2023 05:25:18 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please contact us immediately.

Your new login credentials will be: 
josli45:KoE3dG1 on 159.223.212.34
You can connect via SSH.

Regards
BT824415"
ErQD8DeH,c++ array 4,AleksandarKrastinkov,C++,Tuesday 21st of November 2023 05:03:39 PM CDT,"#include <iostream>
#include <cstdlib>  // For rand() and srand()
#include <ctime>    // For time()

using namespace std;

void randomNums(int ar[], int len)
{
	for (int i = 0; i < len; i++)
	{
		int rnd = rand() % 41 - 10;
		ar[i] = rnd;
	}
	for (int i = 0; i < len; i++)
	{
		cout << ar[i] << "", "";
	}
	cout << endl;
}
void minusNumbers(int ar[], int len)
{
	for (int i = 0; i < len; i++)
	{
		if (ar[i] < -1)
		{
			while (true)
			{
				cout << ""Enter a number between -110 and 330: "";
				cin >> ar[i];
				if (ar[i] > -110 && ar[i] < 330)
				{
					break;
				}
			}
		}
	} 
	cout << endl;
	for (int i = 0; i < len; i++)
	{
		cout << ar[i] << "", "";
	}
	cout << endl;
}

void searchForNumber(int ar[], int len)
{
	bool findElement = false;
	int maxElement = 9999;
	for (int i = 0; i < len; i++)
	{
		int curI = ar[i];
		if (curI % 3 != 0 && i % 2 == 0)
		{
			if (findElement == false)
			{
				maxElement = curI;
				findElement = true;
			}
			else if (findElement == true)
			{
				if (abs(maxElement) > abs(curI))   
				{
					maxElement = curI;
				}
			}			
		}
	}
	if (findElement = true)
	{
		cout << ""the element you are surching for is: "" << maxElement << endl;
	}
	else 
	{
		cout << ""There isn't an element that can't be devided by 3 and his index to be Even"" << endl;
	}
}
 
void showNumbers(const int ar[], int len)
{
	int lastTwoNumbers = ar[10] + ar[9]; 
	for (int i = 0; i < len -1; ++i)
	{
		int curI = ar[i];
		int NetI = ar[i + 1];

		if ((curI + NetI) <= lastTwoNumbers)
		{
			cout << i << "" "" << i + 1 << endl;
		}
	}
}


int main()
{
	srand(static_cast<unsigned int>(time(0)));
						
	int const Len = 11;
	int array[Len];
	randomNums(array, Len);
	minusNumbers(array, Len);
	searchForNumber(array, Len);
	showNumbers(array, Len);

}
"
wkM0xTmz,BulkStore,hctorres02,PHP,Tuesday 21st of November 2023 05:02:15 PM CDT,"<?php

namespace App\Traits;

trait BulkStore
{
    /**
     * Executa inserção, remoção e atualização em massa de registros relacionados.
     *
     * @param string $key
     * @param \Illuminate\Database\Eloquent\Relations\HasMany|\Illuminate\Database\Eloquent\Builder $scope
     * @param array $items
     * @param int $usuario_id
     * @param array $columns_for_update
     * @param bool $remove
     * @param \Illuminate\Database\Eloquent\Model $model
     * @return bool
     */
    public function bulkStore(
        string $key,
        $scope,
        array $items,
        int $usuario_id,
        array $columns_for_update = [],
        bool $remove = true,
        $model = null
    ): bool {
        $items = collect($items);

        /**
         * Itens atualmente no banco.
         * Extrai do banco uma array contendo a coluna-chave ($key) com os índices sendo o valor do `auto_increment`
         */
        $current = $scope->pluck($key, 'id');

        /**
         * Inverte a chave pelo valor da lista de itens existentes.
         * Isso evita o uso de `array_search` para buscar o índice correspondente a chave primária do item ($items).
         * Em alguns casos, `$key` é igual a chave-primária. Nos casos que não for, isso se faz necessário.
         */
        $current_flipped = $current->flip();

        /**
         * Lista representada pela coluna-chave.
         * Somente os valores são necessários.
         * Evita lançamento de erro ao tentar comparar elementos com `array_diff`.
         */
        $changes = $items->pluck($key);
        $wasChanged = false;

        /**
         * Lista de itens que foram adicionados.
         * São comparados os valores da collection e não as chaves.
         */
        $added = $changes->diff($current);

        /**
         * Lista de itens que foram removidos.
         * São comparados os valores da collection e não as chaves.
         * O método `values` é necessário, pois collection retornam as chaves por padrão.
         */
        $removed = $current->diff($changes)->values();

        /**
         * Lista de itens atualizados.
         * São comparados os valores da collection e não as chaves.
         * Tudo aquilo que não foi adicionado ou removido, é considerado atualizado, mesmo que não tenha sido.
         * Quando tentar realizar a transação, o banco se encarrega de efetivar as alterações (affected rows).
         */
        $updated = $changes->diff($removed)->diff($added);

        /**
         * Localiza os valores para os itens adicionados no arranjo inicial ($items).
         * Recupera os valores enviados pelo usuário (form data).
         */
        $added = $items->whereIn($key, $added);

        /**
         * Localiza os valores para os itens atualizados no arranjo inicial ($items).
         * Recupera os valores enviados pelo usuário (form data).
         */
        $updated = $items->whereIn($key, $updated)->map(function ($item) use ($key, $current_flipped) {
            // atribui chave primária (id) ao valor recebido da consulta aos itens existentes
            $item['id'] = $current_flipped->get($item[$key]);

            return $item;
        });

        if ($added->count()) {
            $wasChanged = $this->adicionarItensRelacionados($key, clone $scope, $added->all(), $usuario_id) || $wasChanged;
        }

        if ($removed->count() && $remove) {
            $wasChanged = $this->removerItensRelacionados($key, clone $scope, $removed->all()) || $wasChanged;
        }

        if ($updated->count() && !empty($columns_for_update)) {
            $wasChanged = $this->atualizarItensRelacionados($key, clone $scope, $updated->all(), $columns_for_update) || $wasChanged;
        }

        return $wasChanged;
    }
    
    /**
    * Associa itens ao relacionamento.
    *
    * @param string $key
    * @param \Illuminate\Database\Eloquent\Relations\HasMany|\Illuminate\Database\Eloquent\Builder $scope
    * @param array $items
    * @param int $created_by
    * @return bool
    */
    private function adicionarItensRelacionados(
        string $key,
        $scope,
        array $items,
        int $created_by
    ): bool {
    	$fields = [
        	'created_at' => now(),
        	'created_by' => $created_by,
    	];

    	$bulk = array_map(function ($value) use ($key, $fields) {
        	if (is_array($value)) {
            	return $value;
        	}

        	return array_merge($fields, [$key => $value]);
    	}, $items);

    	return (bool) $scope->createMany($bulk);
	}

    /**
     * Remove itens associados ao relacionamento.
     *
     * @param string $key
     * @param \Illuminate\Database\Eloquent\Relations\HasMany|\Illuminate\Database\Eloquent\Builder $scope
     * @param array $items
     * @return bool
     */
    private function removerItensRelacionados(
        string $key,
        $scope,
        array $items
    ): bool {
        return (bool) $scope->whereIn($key, $items)->delete();
    }

    /**
     * Atualiza itens associados ao relacionamento.
     *
     * ! TODO: revisar e mesclar com `\App\Helpers@updateConfiguracoes`
     *
     * @param string $key
     * @param \Illuminate\Database\Eloquent\Relations\HasMany|\Illuminate\Database\Eloquent\Builder $scope
     * @param array $items
     * @return bool
     */
    private function atualizarItensRelacionados(
        string $key,
        $scope,
        array $items,
        array $columns_for_update
    ): bool {
        return (bool) $scope->upsert($items, $key, $columns_for_update);
    }
}
"
JTd7wvKj,Database,LidiaIvanova,Python,Tuesday 21st of November 2023 04:38:46 PM CDT,"from django.db import models
from django.core.validators import MinLengthValidator, MaxValueValidator, MinValueValidator


# Create your models here.

class BasePerson(models.Model):
    full_name = models.CharField(max_length=120,
                                 validators=[MinLengthValidator(2)])
    birth_date = models.DateField(default='1900-01-01')
    nationality = models.CharField(max_length=50,
                                   default='Unknown')

    class Meta:
        abstract = True


class Director(BasePerson):
    years_of_experience = models.SmallIntegerField(default=0,
                                                   validators=[MinValueValidator(0)])


class Actor(BasePerson):
    is_awarded = models.BooleanField(default=False)
    last_update = models.DateTimeField(auto_now=True)


class Movie(models.Model):
    GENRE_CHOICES = (
        ('Action', 'Action'),
        ('Comedy', 'Comedy'),
        ('Drama', 'Drama'),
        ('Other', 'Other')
    )
    title = models.CharField(max_length=150, validators=[MinLengthValidator(5)])
    release_date = models.DateField()
    storyline = models.TextField(blank=True, null=True)
    genre = models.CharField(max_length=6, default='Other', choices=GENRE_CHOICES)
    rating = models.DecimalField(max_digits=3, decimal_places=1, default=0.0,
                                 validators=[MinValueValidator(0.0), MaxValueValidator(10.0)])
    is_classic = models.BooleanField(default=False)
    is_awarded = models.BooleanField(default=False)
    last_updated = models.DateTimeField(auto_now=True)
    director = models.ForeignKey(to=Director, on_delete=models.CASCADE, related_name='director_movies')
    starring_actor = models.ForeignKey(to=Actor, blank=True, null=True, on_delete=models.SET_NULL, related_name='starring_movies')
    actors = models.ManyToManyField(to=Actor, related_name='actor_movies')"
hJ4FBUjs,About Vitrine Yuna,TessCarstairs,HTML,Tuesday 21st of November 2023 04:19:44 PM CDT,"COR DE FUNDO: #e3a7b8
COR DA BOX: #e3a7b8
COR DA FONTE: #cd688d
 
LEMBRETES: A borda está fixa em seu perfil e os avatares precisam ser de 196x350 ou maior.
 
CÓDIGO PARA ABOUT HTML:
<div
    style=""
        width: 1966px;
        height: 936px;
        background: url('https://i.postimg.cc/Dn2NCjvb/about-yuna.png');
        margin: -77px -697px;
    ""
    class=""uk-position-relative side-main-user""
>
    <div style=""margin-left: 310px; margin-top: 80px"">
        <a href=""/add-friend/893918"" alt=""ADICIONAR""
            ><img
                src=""https://i.postimg.cc/FRq3PzjX/links.png""
                alt=""ADICIONAR""
        />
        <br>
    <a href=""/scraps/jiuweihu"" alt=""RECADOS""
            ><img
                src=""https://i.postimg.cc/FRq3PzjX/links.png""
                alt=""RECADOS""
                style=""margin-top: 38px;""
        />
        <br>
    <a href=""/friends/jiuweihu"" alt=""AMIGOS""
            ><img
                src=""https://i.postimg.cc/FRq3PzjX/links.png""
                alt=""AMIGOS""
                style=""margin-top: 38px;""
        />
        <br>
    <a href=""/remove-friend/893918"" alt=""REMOVER""
            ><img
                src=""https://i.postimg.cc/FRq3PzjX/links.png""
                alt=""REMOVER""
                style=""margin-top: 38px;""
        />
        <br>
    <a href=""/communities/jiuweihu"" alt=""COMUNIDADES""
            ><img
                src=""https://i.postimg.cc/FRq3PzjX/links.png""
                alt=""COMUNIDADES""
                style=""margin-top: 38px;""
        />
        <br>
    </div>
</div>  "
Wf0WyWLe,Untitled,sandervspl,TypeScript,Tuesday 21st of November 2023 04:14:40 PM CDT,"import { sql } from 'drizzle-orm';
import { text, integer, sqliteTable, unique, index } from 'drizzle-orm/sqlite-core';
import { createInsertSchema } from 'drizzle-zod';

export const items = sqliteTable(
  'items',
  {
    id: text('id').notNull().primaryKey(),
    shortid: integer('shortid').notNull(),
    name: text('name').notNull(),
    sellPrice: integer('SellPrice').notNull(),
    stackCount: integer('StackCount').notNull(),
    classId: integer('ClassID').notNull(),
    subclassId: integer('SubClassID').notNull(),
    rarity: integer('Rarity').notNull(),
    minLevel: integer('MinLevel').notNull(),
    link: text('Link').notNull(),
    olink: text('OLink').notNull(),
    timestamp: text('ts').default(sql`CURRENT_TIMESTAMP`),
  },
  (table) => ({
    shortidunq: unique('shortidunq').on(table.shortid),
    nameidx: index('nameidx').on(table.name),
    rarityidx: index('rarityidx').on(table.rarity),
    sellpriceidx: index('sellpriceidx').on(table.sellPrice),
  }),
);

export const insertItemsSchema = createInsertSchema(items);

export const scanmeta = sqliteTable(
  'scanmeta',
  {
    id: integer('id').primaryKey({ autoIncrement: true }),
    realm: text('realm').notNull(),
    faction: text('faction', { enum: ['Neutral', 'Alliance', 'Horde'] }).notNull(),
    scanner: text('scanner').notNull(),
    timestamp: text('ts').default(sql`CURRENT_TIMESTAMP`),
  },
  (table) => ({
    unique_scan: unique('unique_scan').on(table.timestamp, table.scanner),
  }),
);

export const insertScanmetaSchema = createInsertSchema(scanmeta);

export const auctions = sqliteTable(
  'auctions',
  {
    scanId: integer('scanId')
      .notNull()
      .references(() => scanmeta.id),
    itemId: text('itemId')
      .notNull()
      .references(() => items.id),
    timestamp: text('ts').default(sql`CURRENT_TIMESTAMP`),
    seller: text('seller').notNull(),
    timeLeft: integer('timeLeft').notNull(),
    itemCount: integer('itemCount').notNull(),
    minBid: integer('minBid').notNull(),
    buyout: integer('buyout').notNull(),
    curBid: integer('curBid').notNull(),
  },
  (table) => ({
    buyoutidx: index('buyoutidx').on(table.buyout),
    itemididx: index('itemididx').on(table.itemId),
  }),
);

export const insertAuctionsSchema = createInsertSchema(auctions);
"
tmhcyTYr,Chunk Miner,MigasRocha,Lua,Tuesday 21st of November 2023 03:35:11 PM CDT,"function turnAround()

    turtle.turnLeft()
    turtle.turnLeft()
end


function refuel()

    if turtle.getFuelLevel() < 100 then
        turtle.select(2) --- slot 2 refuel chest ---
    if turtle.detectUp then
        turtle.digUp()
        turtle.placeUp()
        turtle.suckUp()
        turtle.refuel()
        turtle.dropUp()
        turtle.digUp()
  	  end
	end
end

function wholechunk()

    refuel()
    for a=1,15 do 
        turtle.detect()
        turtle.dig()
        turtle.forward()
        end
end

function chunkload()


    turtle.detectUp()
    turtle.digUp()
    turtle.select(16) ---slot 16 chunkloader---
    turtle.placeUp()

wholechunk()

turtle.detectUp()
turtle.digUp()
turtle.placeUp()

turnAround()

turtle.forward()
turtle.forward()
turtle.forward()

end

--- A turtle está agora na posição 13 pronta para colocar builder ---

function builder()

refuel()
    turtle.select(4) ---slot 4 builder ---
    turnAround()
    turtle.place()
    turtle.digDown()
    turtle.down()
    turtle.dig()
    turtle.select(1) ---slot 1 quantum entagloporter---
    turtle.place()
    turtle.up()
    turtle.turnLeft()
    turtle.detect()
    turtle.dig()
    turtle.forward()
    turtle.turnRight()
    turtle.detect()
    turtle.dig()
    turtle.select(5) ---slot 5 redstone torch ---
    turtle.place()
    turtle.turnRight()
    turtle.forward()
    turtle.turnLeft()
end

function firstphase()

chunkload()
builder()

end

function secondphase()

function backUp()

    refuel()
    for b=1,178 do
        turtle.up()
    end
end


function standby()

    while turtle.detect() == true do
          sleep(1)
        if turtle.detect() == false then
        backUp()
        end
    end
end

function netherrack()

    local sucess, data = turtle.inspectDown()
        if sucess == true then
            if data.name == ""minecraft:bedrock"" then
                turtle.turnRight()
                turtle.select(15) ---slot 15 bloco de netherrack---
                turtle.place()
                standby()
            end
        end
end


function goDown()

    refuel()
    while true do 
        turtle.digDown()
        turtle.down()
        netherrack()
    end
end

goDown()
standby()
backUp()

end

firstphase()
secondphase()"
YbadDddv,Untitled,Nataliya07,JavaScript,Tuesday 21st of November 2023 02:59:19 PM CDT,"function solve(matrix) {
    let rowTotal = matrix[0].reduce((a, b) => a + b);
    let colTotal = 0;

    matrix.forEach(row => {
        colTotal += row[0];
    });

    let result = true;
    let counter = 0;

    for (let i = 0; i < matrix.length; i++) {
        const currentRow = matrix[i].reduce((acc, item) => acc + item);
        let currentCol = 0;
        for (let j = 0; j < matrix.length; j++) {
            const num = matrix[j][i];
            currentCol += num;
        }
        if (currentRow !== rowTotal || currentCol !== colTotal) {
            result = false;
            break;
        }

    }

    console.log(result);
}

solve([[4, 5, 6],
[6, 5, 4],
[5, 5, 5]]);"
Gbw69nE2,03. Replace Repeating Chars,Spocoman,C++,Tuesday 21st of November 2023 02:18:17 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() { 
    string str;
    getline(cin, str);

    int startIndex = 0, replacedLength = 0;

    for (size_t i = 1; i <= str.length(); i++) {
        if (str[startIndex] != str[i]) {
            startIndex++;
            replacedLength = i - startIndex;
            str.replace(startIndex, replacedLength, """");
            i = startIndex;
        }
    }
       
    cout << str << endl;
    return 0;
}

ИЛИ:

#include <iostream>
#include <string>

using namespace std;

int main() { 
    string str;
    getline(cin, str);

    int startIndex = 0, replacedLength = 0;

    for (size_t i = 1; i <= str.length(); i++) {
        if (str[startIndex] != str[i]) {
            startIndex++;
            replacedLength = i - startIndex;
            str.erase(startIndex, replacedLength);
            i = startIndex;
        }
    }
       
    cout << str << endl;
    return 0;
}

ИЛИ:

#include <iostream>
#include <string>

using namespace std;

int main() { 
    string str, result;
    getline(cin, str);

    result = str[0];

    for (size_t i = 1; i < str.length(); i++) {
        if (result[result.length() - 1] != str[i]) {
            result += str[i];
        }
    }
       
    cout << result << endl;
    return 0;
}"
BHdFy0VS,Wakolda.2013.VO.DVDRip.h264.ac3.Subs-bp,bpmircea,BrainFuck,Tuesday 21st of November 2023 02:17:52 PM CDT,"Wakolda (The German Doctor) (Lucía Puenzo, 2013)
aka
Wakolda.2013.VO.DVDRip.h264.ac3.Subs-bp
https://www.imdb.com/title/tt1847746/

audio - Spanisch, Deutsch, Hebräisch | subs - multi

Uploading..."
MAU2KXj3,any2webm.lua,TangentFox,Lua,Tuesday 21st of November 2023 02:13:11 PM CDT,"
-- any2webm.lua
-- Runs on Windows. Place in a directory with video files and they will all slowly be converted to webm files.

os.execute(""dir /w /b > files.txt"")
os.execute(""mkdir any2webm-output"")

for line in io.lines(""files.txt"") do
  if line:find(""%."") and line ~= ""files.txt"" and line ~= ""any2webm.lua"" then
    os.execute(""ffmpeg -threads 1 -i \"""" .. line .. ""\"" -threads 1 \""any2webm-output/"" .. line .. "".webm\"""")
  end
end

os.execute(""rm files.txt"")
"
efwPLWqT,Untitled,eptesicus,Autohotkey,Tuesday 21st of November 2023 02:06:22 PM CDT,"; Reference: https://www.reddit.com/r/AutoHotkey/comments/rog13v/comment/hq96cky/

; ## Autoexecution ##
#Persistent
Menu, Tray, Icon, %A_ScriptDir%\images\icon.ico
#SingleInstance Force
SetBatchLines -1
SetTimer tDim, 250
vBrt := 255  ; Initial Brightness (Don't change!)

; #### Play Area Variables ####
vDur := 1		; Number of minutes to wait
vMin := 70		; Minimum dimness level (0-254)
dRng := 4       ; Dimming frame skip (lower/slower)
dDly := 15      ; Number of ms between dimming frames
uRng := 8       ; Lighting frame skip (lower/slower)
uDly := 15      ; Number of ms between lighting frames (0/Instant)
wWidth := 10320 ; Total width of all displays
wHeight := 1440 ; Total height of all displays
xPos := -3440   ; Starting position of leftmost display
yPos := 0       ; Starting position of leftmost display

; #### Gui Build ####
Gui Dimmer:New, +AlwaysOnTop +ToolWindow -Caption +E0x20
Gui Color, 000000
Gui Dimmer:Show, NoActivate x%xPos% y%yPos% w%wWidth% h%wHeight%, Dimmer
WinSet Transparent, 0, Dimmer
Gui Hide

; #### Main Code ####
tDim:
    ; Check for both mouse movement and keyboard activity
    If (A_TimeIdle > (vDur * 60000) || A_TimeSincePriorHotkey > (vDur * 1000)) && !fChk {
        MouseGetPos mX, mY
        BlockInput MouseMove
        MouseMove wWidth, wHeight, 0
        Gui Dimmer:Show, NoActivate
        WinSet AlwaysOnTop, On, Dimmer
        If fU {
            SetTimer tU, Off
            fU := 0
        }
        SetTimer tD, % dDly
        fD := 1, fChk := 1
    } Else If (A_TimeIdle < 200) && fChk {
        MouseMove mX, mY, 0
        BlockInput MouseMoveOff
        If fD {
            SetTimer tD, Off
            fD := 0
        }
        If !uDly {
            WinSet Transparent, % 255 - (vBrt := 255), Dimmer
        } Else {
            SetTimer tU, % uDly
            fU := 1
        }
        While fU {
            ; Allow other events to be processed during the delay
            Critical, Off
            Sleep, 10
            Critical, On
        }
        WinSet AlwaysOnTop, Off, Dimmer
        Gui Dimmer:Hide
        fChk := 0
    }
    Return

; ##### Timers ######
tD:
    vBrt -= dRng
    If (vBrt <= vMin)
        vBrt := vMin
    WinSet Transparent, % 255 - vBrt, Dimmer
    If (vBrt = vMin) {
        SetTimer tD, Off
        fD := 0
    }
    Return

tU:
    vBrt += uRng
    If (vBrt >= 255)
        vBrt := 255
    WinSet Transparent, % 255 - vBrt, Dimmer
    If (vBrt = 255) {
        SetTimer tU, Off
        fU := 0
    }
    Return
"
Xki7SJch,Ok_Can2925,gruntfutuk,Python,Tuesday 21st of November 2023 01:48:42 PM CDT,"#How to play rock paper scissors!
import random

print(""Welcome to Rock Paper Scissors!!!"")
user_wins = 0
computer_wins = 0
options = [""rock"", ""paper"", ""scissors""]

#0,1,2
def game_step():

    global user_wins
    global computer_wins

while True:
    user_input = input(""Type Rock/Paper/Scissors or Q to quit: "").lower()
    if user_input == ""q"":
        break
    if user_input not in options:
        continue
    random_number = random.randint(0, 2)

    #rock: 0, paper: 1, scissors: 2
    computer_pick = options[random_number]
    print(""Computer picked"", computer_pick + ""."")

    if user_input == ""rock"" and computer_pick == ""scissors"":
        print(""You won!"")
        user_wins += 1
    elif user_input == ""paper"" and computer_pick == ""rock"":
        print(""You won!"")
        user_wins += 1
    elif user_input == ""scissors"" and computer_pick == ""paper"":
        print(""You won"")
        user_wins += 1
    else:
        print(""You lost!"")
        computer_wins += 1

print(""You won"", user_wins, ""times."")
print(""The computer won"", computer_wins, ""times."")
print(""Goodbye!"")"
XVaSNVWS,Untitled,kozim,C#,Tuesday 21st of November 2023 01:38:04 PM CDT,"using ProductShop.DTOs.Export;
using ProductShop.Models;
using System.Text;
using System.Xml.Serialization;

namespace ProductShop;

public class XmlHelper
{
    public static string Serialize<T>(
        T dataTransferObjects,
        string xmlRootAttributeName)
    {
        XmlSerializer serializer = new XmlSerializer(typeof(T), new XmlRootAttribute(xmlRootAttributeName));

        var builder = new StringBuilder();

        using var write = new StringWriter(builder);
        serializer.Serialize(write, dataTransferObjects, GetXmlNamespaces());

        return builder.ToString();
    }
    private static XmlSerializerNamespaces GetXmlNamespaces()
    {
        XmlSerializerNamespaces xmlNamespaces = new XmlSerializerNamespaces();
        xmlNamespaces.Add(string.Empty, string.Empty);
        return xmlNamespaces;
    }
}"
VtMf5CA1,wpa_supplicant wifi script,metalx1000,Bash,Tuesday 21st of November 2023 01:37:42 PM CDT,"#!/bin/bash
###################################################################### 
#Copyright (C) 2023  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
###################################################################### 

config=""/etc/wpa_supplicant/wpa_supplicant.conf""

function error(){
  echo $*
  exit 1
}

function get_device(){
  device=""$(ifconfig -a|grep wlp|cut -d\: -f1|head -n1)""
  [[ $device ]] || error ""No Device Found""
  echo $device
}

function scan_ssid(){
  [[ $device ]] || error ""No Device Found""
  ssid=""$(sudo iwlist ""$device"" scan|grep ESSID|cut -d\"" -f2|sort -u|fzf --prompt ""Select a Network: "")""
  [[ $ssid ]] || error ""No SSID Selected""
}

function save_config(){
  read -p ""Enter Pass Phrase for Network: "" pass
  [[ $pass ]] || error ""No Pass Phrase Entered""
  [[ $ssid ]] || error ""No SSID Selected""
  config=""$(sudo wpa_passphrase $ssid $pass)""
  echo ""$config""
  echo """"
  read -p ""Add above to wpa_supplicant.conf [Y/n]? "" confirm
  [[ ""$confirm"" == ""n"" ]] && exit
  echo $config |sudo tee -a $config 
}

function connect2network(){
  [[ $device ]] || error ""No Device Found""
  sudo ifconfig $device down
  sudo ifconfig $device up 
  sudo wpa_supplicant -B -c $config -i $device 
  sudo dhcpclient $deivce 

  #reset permissions
  sudo chmod 0600 /etc/wpa_supplicant/wpa_supplicant.conf
}

function new_network(){
  get_device
  scan_ssid
  save_config
}

new_network
read -p ""Connect to Network [Y/n]?"" connect
[[ ""$connect"" != ""n"" ]] && connect2network

read -p ""Press Enter to Continue.""
cat $config
"
wcG8Arv0,Wakolda.2013.VO.DVDRip.mpeg.mp3.Subs-bp,bpmircea,BrainFuck,Tuesday 21st of November 2023 01:34:49 PM CDT,"Wakolda (The German Doctor) (Lucía Puenzo, 2013)
aka
Wakolda.2013.VO.DVDRip.mpeg.mp3.Subs-bp
https://www.imdb.com/title/tt1847746/

audio - Spanisch, Deutsch, Hebräisch | subs - multi

Uploading..."
7Lqp7sTg,Untitled,Nenogzar,Python,Tuesday 21st of November 2023 01:15:54 PM CDT,"coordinate_a = list(map(int, input(""A: "").split()))
coordinate_b = list(map(int, input(""B: "").split()))
coordinate_c = list(map(int, input(""C: "").split()))
coordinate_d = list(map(int, input(""D: "").split()))

coordinates = [coordinate_a, coordinate_b, coordinate_c, coordinate_d]

small = coordinates[0]
larg = coordinates[0]

for coordinate in coordinates[1:]:
    if len(coordinate) < len(small):
        small = coordinate

    if len(coordinate) > len(larg):
        larg = coordinate


print(""май - малкия"", small)
print(""най - големия"", larg)"
mi0HvpXb,ejercicio03,fgallego,C++,Tuesday 21st of November 2023 01:11:14 PM CDT,"#include <raylib.h>
#include <array>
#include <cstdint>
#include <cstdlib>
#include <cassert>
#include <span>
#include <optional>

constexpr uint16_t SCR_WIDTH  { 800 };
constexpr uint16_t SCR_HEIGHT { 600 };

struct RenderComponent{
   uint16_t x{}, y{};
   uint16_t w{1}, h{1};
   Color c{WHITE};
};
struct PhysicsComponent{
   float x{}, y{};
   float vx{}, vy{};
};

struct Entity {
   RenderComponent*  ren{};
   PhysicsComponent* phy{};
};

// Dará acceso al array devolviendolo por referencia constante
struct EntityManager {
   static constexpr std::size_t MAX_ENTITIES { 100 };

   Entity& newEntity() noexcept {
      assert(alive_ < MAX_ENTITIES);
      
      alive_ += 1;
      return entities_[alive_ - 1];
   }

   std::size_t freeEntities() const noexcept { return MAX_ENTITIES - alive_; }

   std::span<Entity const> getEntities() const { 
      return std::span{ entities_.begin(), alive_ }; 
   }
private:
   std::size_t alive_{};
   std::array<Entity, MAX_ENTITIES> entities_{};
};

void render_system(EntityManager& EM) {
   BeginDrawing();

   for( auto& e : EM.getEntities() ) {
      if ( e.ren ) {
         auto& r = *e.ren;
         DrawRectangle(r.x, r.y, r.w, r.h, r.c);
      }
   }

   EndDrawing();
}

int main() {
   InitWindow(SCR_WIDTH, SCR_HEIGHT, ""My Game"");
   EntityManager  EM{};
   PhysicsComponent p{ .x=1.f, .y=2.f, .vy=-1.f },
                     p2{ .vx=2.f };
   RenderComponent  r{ .x=100, .y=2, .w=50, .h=25 };
   RenderComponent r2 { .w=20, .h=20 };
               
   {
      auto& e = EM.newEntity();
      e.phy = &p;
      e.ren = &r;
   }
   {
      auto& e = EM.newEntity();
      e.ren = &r2;
   }
   {
      auto& e = EM.newEntity();
      e.phy = &p2;
   }
   EM.newEntity();
   
   while ( ! WindowShouldClose() ) {
      //update_entities(EM);
      render_system(EM);
   }

   CloseWindow();
}"
Vs2Vea2w,all and working grey multiple,max2201111,Python,Tuesday 21st of November 2023 01:10:30 PM CDT,"import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tqdm import tqdm


from IPython.display import display
from IPython.display import Javascript
display(Javascript('IPython.OutputArea.auto_scroll_threshold = 9999;'))

label_colors = {0: [0, 128, 0], 1: [255, 0, 0]}


# Function to create images based on predictions
def create_image(data, predictions):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data), np.max(data)], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        # Create a gradient based on the normalized values
        gradient_value = int(np.interp(predictions[i], [0, 1], [0, 255]))
        image[i, -1] = np.array([gradient_value] * 3)

    return image

def create_image(data, predictions):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data), np.max(data)], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        # Use red for class 0 and green for class 1
        if predictions[i] == 0:
            image[i, -1] = np.array([255, 0, 0])  # Red
        elif predictions[i] == 1:
            image[i, -1] = np.array([0, 128, 0])  # Green

    return image

def create_image(data, predictions, label_colors):
    num_rows, num_columns = len(data), len(data[0])
    image = np.zeros((num_rows, num_columns + 1, 3), dtype=np.uint8)

    for i in range(num_rows):
        for j in range(num_columns):
            pixel_value = int(np.interp(data[i][j], [np.min(data), np.max(data)], [0, 255]))
            image[i, j] = np.array([pixel_value] * 3)

        # Use the specified color for the last column based on the label
        image[i, -1] = label_colors[predictions[i]]

    return image


# Load data from a file
file_path = 'C:/Users/Hynek/Desktop/example4.txt'

all_results = []
with open(file_path, 'r') as file:
    file_content = file.read()

# Execute the content as Python code
exec(file_content)

# Now, all_results contains lists corresponding to each row in the CSV file
##print(all_results)

# Assign values to variables dynamically based on the rows of matrix A
for i, row in enumerate(A, start=1):
    globals()[f""person{i}_results""] = list(row)

# Print the assigned variables
for i in range(1, len(A) + 1):
  #  print(f""person{i}_results {globals()[f'person{i}_results']}"")
    all_results.append(f""person{i}_results"")
##print(all_results)



result_variables = []

# Loop through the variable names and get the corresponding variables using globals()
for var_name in all_results:
    result_variables.append(globals()[var_name])

# Now, result_variables contains the variables with names specified in variable_names
#print(result_variables)

all_results = result_variables
new_persons_results = result_variables


# # Define the blood test results for sixteen persons
# person1_results = [80, 90, 100, 125, 120, 0]
# person2_results = [95, 105, 115, 110, 135, 1]
# person3_results = [110, 120, 130, 140, 150, 0]
# person4_results = [100, 110, 120, 130, 140, 1]
# person5_results = [105, 115, 100, 105, 110, 0]
# person6_results = [90, 110, 115, 95, 120, 1]
# person7_results = [116, 99, 106, 105, 119, 0]
# person8_results = [111, 93, 118, 118, 107, 1]
# person9_results = [107, 97, 105, 119, 98, 0]
# person10_results = [92, 108, 90, 117, 111, 1]
# person11_results = [118, 105, 103, 118, 99, 0]
# person12_results = [97, 115, 101, 101, 113, 1]
# person13_results = [95, 111, 93, 112, 120, 0]
# person14_results = [100, 112, 118, 109, 103, 1]
# person15_results = [113, 91, 94, 93, 99, 0]
# person16_results = [103, 92, 95, 110, 98, 1]

# # Combine the results into a list
# all_results = [person1_results, person2_results, person3_results, person4_results,
#                person5_results, person6_results, person7_results, person8_results,
#                person9_results, person10_results, person11_results, person12_results,
#                person13_results, person14_results, person15_results, person16_results]


# #all_results = [person1_results, person2_results]


# Extract the last column (0 or 1) as labels
labels = [results[-1] for results in all_results]

# Remove the last column from the dataset
data = [results[:-1] for results in all_results]

# Define the number of rows for training and testing
num_training_rows = 20
num_testing_rows = 20

# Split the data into training and testing datasets
X_train, X_test, y_train, y_test = data[:num_training_rows], data[-num_testing_rows:], labels[:num_training_rows], labels[-num_testing_rows:]

X_train, X_test, y_train, y_test = data[:num_training_rows], data[:num_training_rows], labels[:num_training_rows], labels[:num_training_rows]


# Normalize the training data
min_values = np.min(X_train, axis=0)
max_values = np.max(X_train, axis=0)
X_train_normalized = (X_train - min_values) / (max_values - min_values)


# Normalize the training data
min_values = np.min(X_train, axis=0)
max_values = np.max(X_train, axis=0)
X_train_normalized = (X_train - min_values) / (max_values - min_values)

# Normalize the testing data using the min and max values of the training data
X_test_normalized = (X_test - min_values) / (max_values - min_values)


# Print normalized training data
print(""Normalized Training Data:"")
print(X_train_normalized)
print(""Adenormalized"",X_train_normalized*(max_values - min_values)+min_values,""Bdenormalized"")

# Define a simple neural network model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(128, activation='relu', input_shape=(len(X_train[0]),)),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Lists to store accuracy values
accuracy_history = []

# Create images for the training data
image_training = np.zeros((num_training_rows, len(X_train[0]) + 1, 3), dtype=np.uint8)


min_pixel_value = np.min(X_train_normalized)
max_pixel_value = np.max(X_train_normalized)

# Populate image_training with consistent gray and red/green colors based on the labels in the last column
# for i, label in enumerate(y_train):
#     for j in range(len(X_train[0])
#         pixel_value = int(np.interp(X_train_normalized[i][j], [min_pixel_value, max_pixel_value], [0, 255]))
#         image_training[i, j] = np.array([pixel_value] * 3)
#         image_training[i, -1] = np.array([128, 128, 128])
#     if label == 0:
#         image_training[i, -1] = np.array([0, 128, 0])
#     elif label == 1:
#         image_training[i, -1] = np.array([255, 0, 0])

        
        
# Populate image_training with consistent gray and red/green colors based on the labels in the last column
for i, label in enumerate(y_train):
    for j in range(len(X_train[0])):
        pixel_value = int(np.interp(X_train_normalized[i][j], [min_pixel_value, max_pixel_value], [0, 255]))
        image_training[i, j] = np.array([pixel_value] * 3)
    image_training[i, -1] = np.array([128, 128, 128])
    if label == 0:
        image_training[i, -1] = np.array([0, 128, 0])
    elif label == 1:
        image_training[i, -1] = np.array([255, 0, 0])

       
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

# Train the model for 400 epochs
epochs = 400
# Assuming 'new_persons_results' is a list of new persons, where each person is represented as a list of features
new_persons_results = [
    [101, 112],
    [0.54422416, 0.02778176],
    [22.57372914, 17.96922325]
    # Add more new persons as needed
]

for epoch in tqdm(range(epochs)):
    # history = model.fit(X_train_normalized, y_train, epochs=1, verbose=0)
#    history = model.fit(X_train_normalized, np.array(y_train), epochs=1, verbose=0)
    history = model.fit(X_train_normalized, np.array(y_train), epochs=1, verbose=0, shuffle=False)


    accuracy_history.append(history.history['accuracy'][0])

    if epoch == 1:
        # Normalize the testing data
        X_test_normalized = (X_test - min_values) / (max_values - min_values)
        # Normalize the testing data using the min and max values of the training data
        X_test_normalized = (X_test - min_values) / (max_values - min_values)


        y_pred_after_2nd_epoch = model.predict(X_test_normalized)
        y_pred_binary_after_2nd_epoch = [1 if pred >= 0.5 else 0 for pred in y_pred_after_2nd_epoch]
     #   image_testing_before_2nd_epoch = create_image(X_test_normalized, y_pred_binary_after_2nd_epoch)
        image_testing_before_2nd_epoch = create_image(X_test_normalized, y_pred_binary_after_2nd_epoch, label_colors_testing)


    if epoch == epochs - 1:
        # Iterate through new persons
        for idx, personNEW_results in enumerate(new_persons_results, start=1):
            # Ensure that personNEW_results has the same number of features as the model expects
            assert len(personNEW_results) == len(X_train[0]), ""Mismatch in the number of features.""

            personNEW_results_normalized = (np.array(personNEW_results) - min_values) / (max_values - min_values)

            personNEW_prediction = model.predict(np.array([personNEW_results_normalized]))
            personNEW_label = 1 if personNEW_prediction >= 0.5 else 0
            y_pred_after_50_epochs = model.predict(X_test_normalized)
            y_pred_binary_after_50_epochs = [1 if pred >= 0.5 else 0 for pred in y_pred_after_50_epochs]
            #image_testing_after_50_epochs = create_image(X_test_normalized, y_pred_binary_after_50_epochs)
            image_testing_after_50_epochs = create_image(X_test_normalized, y_pred_binary_after_50_epochs, label_colors_testing)

            # Create an image for the new person
            #image_personNEW = create_image([personNEW_results_normalized], [personNEW_label])
            image_personNEW = create_image([personNEW_results_normalized], [personNEW_label], label_colors)

            # Display the images
            plt.figure(figsize=(8, 8))
            plt.imshow(image_personNEW)
            plt.title(f""New Person {idx}\nLabel: {personNEW_label}, Prediction: {personNEW_prediction}"")
            plt.axis(""off"")
            plt.show()

# Display the images
plt.figure(figsize=(25, 15))
plt.subplot(2, 2, 1)
plt.imshow(image_training)
plt.title(""Training Data"")
plt.axis(""off"")

plt.subplot(2, 2, 2)
plt.imshow(image_testing_before_2nd_epoch)
plt.title(""Testing Data (2nd Epoch)"")
plt.axis(""off"")

plt.subplot(2, 2, 3)
plt.imshow(image_testing_after_50_epochs)
plt.title(f""Testing Data ({epochs} Epochs)"")
plt.axis(""off"")

plt.subplot(2, 2, 4)
plt.imshow(image_personNEW)
plt.title(f""New Person\nLabel: {personNEW_label},[{personNEW_prediction}]"")
plt.axis(""off"")

# Plot accuracy history
plt.figure(figsize=(12, 5))
plt.plot(range(1, epochs + 1), accuracy_history, marker='o')
plt.title('Accuracy Over Epochs')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.grid()

# Print normalized data
print(""Normalized PersonNEW Data:"")
print(personNEW_results_normalized)

plt.show()

print(""X_train before normalization:"")
print(X_train)
print(""X_test before normalization:"")
print(X_test)




print(""KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK"")
print(X_test)
print(""HHHHHHHHHHHHHHHHHHHHHHHHHHHHHH"")
print(X_train)
print(""LLLLLLLLLLLLLLLLLLLLLLLLLLLLL"")"
K2AYiARD,Wakolda.2013.VO.DVDRip.h264.aac.Subs-bp,bpmircea,BrainFuck,Tuesday 21st of November 2023 12:59:52 PM CDT,"Wakolda (The German Doctor) (Lucía Puenzo, 2013)
aka
Wakolda.2013.VO.DVDRip.h264.aac.Subs-bp
https://www.imdb.com/title/tt1847746/

audio - Spanisch, Deutsch, Hebräisch | subs - multi

Uploading..."
hZZVniY6,bash set ALSA loopback,plirof2,Bash,Tuesday 21st of November 2023 12:50:15 PM CDT,"VOL=80;
VOL255=230;

amixer set ""Loopback Mixing"" Enabled;
amixer set ""Auto-Mute Mode"" Enabled;
amixer set ""Input Source"" 'Line';
amixer set ""Input Source"",1 'Line';

amixer set ""Master"" 80;
amixer set ""PCM"" $VOL255;
amixer set ""Front"" $VOL;
amixer set ""Line"" $VOL;
amixer set ""Headphone"" $VOL;

amixer set ""Capture"" $VOL;

------------------------------------------

"
Lcp3z8Jj,Scammers and spammers [11-2/2023],bombaires,AIMMS,Tuesday 21st of November 2023 12:49:40 PM CDT,"<a href=""mailto:admin@videostape.com"">admin@videostape.com</a>
<a href=""mailto:62ebe8d18c93456a8d19c365505bc599.protect@withheldforprivacy.com"">62ebe8d18c93456a8d19c365505bc599.protect@withheldforprivacy.com</a>
<a href=""mailto:support@SIAM855.com"">support@SIAM855.com</a>
<a href=""mailto:pwd077034@gmail.com"">pwd077034@gmail.com</a>
<a href=""mailto:p.w.d.0.770.3.4@gmail.com"">p.w.d.0.770.3.4@gmail.com</a>
<a href=""mailto:p.wd0.77.03.4@gmail.com"">p.wd0.77.03.4@gmail.com</a>
<a href=""mailto:pw.d.0.77.034@gmail.com"">pw.d.0.77.034@gmail.com</a>
<a href=""mailto:p.wd0.7.7.0.3.4@gmail.com"">p.wd0.7.7.0.3.4@gmail.com</a>
<a href=""mailto:pwd.0.77034@gmail.com"">pwd.0.77034@gmail.com</a>
<a href=""mailto:p.w.d.0.77.03.4@gmail.com"">p.w.d.0.77.03.4@gmail.com</a>
<a href=""mailto:p.wd0.77.034@gmail.com"">p.wd0.77.034@gmail.com</a>
<a href=""mailto:p.w.d.0770.3.4@gmail.com"">p.w.d.0770.3.4@gmail.com</a>
<a href=""mailto:pwd0.7.7.0.3.4@gmail.com"">pwd0.7.7.0.3.4@gmail.com</a>
<a href=""mailto:pwd.07.7.03.4@gmail.com"">pwd.07.7.03.4@gmail.com</a>
<a href=""mailto:p.wd.07703.4@gmail.com"">p.wd.07703.4@gmail.com</a>
<a href=""mailto:pw.d07.7.0.3.4@gmail.com"">pw.d07.7.0.3.4@gmail.com</a>
<a href=""mailto:pw.d0.7.7.03.4@gmail.com"">pw.d0.7.7.03.4@gmail.com</a>
<a href=""mailto:p.wd.0.7.7.0.3.4@gmail.com"">p.wd.0.7.7.0.3.4@gmail.com</a>
<a href=""mailto:pwd.0.7.7.0.34@gmail.com"">pwd.0.7.7.0.34@gmail.com</a>
<a href=""mailto:pwd0770.3.4@gmail.com"">pwd0770.3.4@gmail.com</a>
<a href=""mailto:pwd.077.034@gmail.com"">pwd.077.034@gmail.com</a>
<a href=""mailto:pw.d0.77.0.34@gmail.com"">pw.d0.77.0.34@gmail.com</a>
<a href=""mailto:pw.d.07.703.4@gmail.com"">pw.d.07.703.4@gmail.com</a>
<a href=""mailto:p.wd07.7.0.3.4@gmail.com"">p.wd07.7.0.3.4@gmail.com</a>
<a href=""mailto:p.w.d0770.3.4@gmail.com"">p.w.d0770.3.4@gmail.com</a>
<a href=""mailto:pw.d0.770.34@gmail.com"">pw.d0.770.34@gmail.com</a>
<a href=""mailto:pwd07.703.4@gmail.com"">pwd07.703.4@gmail.com</a>
<a href=""mailto:pw.d0.77.0.3.4@gmail.com"">pw.d0.77.0.3.4@gmail.com</a>
<a href=""mailto:p.wd.0.77.03.4@gmail.com"">p.wd.0.77.03.4@gmail.com</a>
<a href=""mailto:pwd.077034@gmail.com"">pwd.077034@gmail.com</a>
<a href=""mailto:p.wd.07.703.4@gmail.com"">p.wd.07.703.4@gmail.com</a>
<a href=""mailto:pwd07.7.034@gmail.com"">pwd07.7.034@gmail.com</a>
<a href=""mailto:p.wd.07.7.0.3.4@gmail.com"">p.wd.07.7.0.3.4@gmail.com</a>
<a href=""mailto:pw.d07.7.03.4@gmail.com"">pw.d07.7.03.4@gmail.com</a>
<a href=""mailto:pw.d0.770.3.4@gmail.com"">pw.d0.770.3.4@gmail.com</a>
<a href=""mailto:p.w.d0.7.7.034@gmail.com"">p.w.d0.7.7.034@gmail.com</a>
<a href=""mailto:pw.d.0.770.34@gmail.com"">pw.d.0.770.34@gmail.com</a>
<a href=""mailto:p.w.d0.7.7.0.34@gmail.com"">p.w.d0.7.7.0.34@gmail.com</a>
<a href=""mailto:p.w.d.0.7.7.034@gmail.com"">p.w.d.0.7.7.034@gmail.com</a>
<a href=""mailto:pw.d07.7.0.34@gmail.com"">pw.d07.7.0.34@gmail.com</a>
<a href=""mailto:p.w.d07.7.0.3.4@gmail.com"">p.w.d07.7.0.3.4@gmail.com</a>
<a href=""mailto:pw.d07.7034@gmail.com"">pw.d07.7034@gmail.com</a>
<a href=""mailto:pw.d.07.7.0.3.4@gmail.com"">pw.d.07.7.0.3.4@gmail.com</a>
<a href=""mailto:pw.d.0.7.7.03.4@gmail.com"">pw.d.0.7.7.03.4@gmail.com</a>
<a href=""mailto:pwd07703.4@gmail.com"">pwd07703.4@gmail.com</a>
<a href=""mailto:p.wd.0.770.34@gmail.com"">p.wd.0.770.34@gmail.com</a>
<a href=""mailto:p.w.d0.77.03.4@gmail.com"">p.w.d0.77.03.4@gmail.com</a>
<a href=""mailto:pwd0.7.7.03.4@gmail.com"">pwd0.7.7.03.4@gmail.com</a>
<a href=""mailto:p.wd.0.7.70.3.4@gmail.com"">p.wd.0.7.70.3.4@gmail.com</a>
<a href=""mailto:pw.d0.7.7.0.3.4@gmail.com"">pw.d0.7.7.0.3.4@gmail.com</a>
<a href=""mailto:p.w.d.0.77034@gmail.com"">p.w.d.0.77034@gmail.com</a>
<a href=""mailto:pwd.0.77.034@gmail.com"">pwd.0.77.034@gmail.com</a>
<a href=""mailto:pw.d0.77.03.4@gmail.com"">pw.d0.77.03.4@gmail.com</a>
<a href=""mailto:p.wd.077.0.34@gmail.com"">p.wd.077.0.34@gmail.com</a>
<a href=""mailto:p.w.d.07.7.03.4@gmail.com"">p.w.d.07.7.03.4@gmail.com</a>
<a href=""mailto:pw.d.07.7.03.4@gmail.com"">pw.d.07.7.03.4@gmail.com</a>
<a href=""mailto:pwd07.7.03.4@gmail.com"">pwd07.7.03.4@gmail.com</a>
<a href=""mailto:p.wd.07.70.34@gmail.com"">p.wd.07.70.34@gmail.com</a>
<a href=""mailto:pwd.07.7034@gmail.com"">pwd.07.7034@gmail.com</a>
<a href=""mailto:p.w.d0.7.70.34@gmail.com"">p.w.d0.7.70.34@gmail.com</a>
<a href=""mailto:p.wd07.70.3.4@gmail.com"">p.wd07.70.3.4@gmail.com</a>
<a href=""mailto:p.wd.0.77.034@gmail.com"">p.wd.0.77.034@gmail.com</a>
<a href=""mailto:p.wd07703.4@gmail.com"">p.wd07703.4@gmail.com</a>
<a href=""mailto:pwd.0770.3.4@gmail.com"">pwd.0770.3.4@gmail.com</a>
<a href=""mailto:pwd.0.7.703.4@gmail.com"">pwd.0.7.703.4@gmail.com</a>
<a href=""mailto:pwd0.77.0.34@gmail.com"">pwd0.77.0.34@gmail.com</a>
<a href=""mailto:pw.d07.703.4@gmail.com"">pw.d07.703.4@gmail.com</a>
<a href=""mailto:p.wd.0.77034@gmail.com"">p.wd.0.77034@gmail.com</a>
<a href=""mailto:p.w.d0.77.0.34@gmail.com"">p.w.d0.77.0.34@gmail.com</a>
<a href=""mailto:p.wd077.034@gmail.com"">p.wd077.034@gmail.com</a>
<a href=""mailto:pwd0.7.703.4@gmail.com"">pwd0.7.703.4@gmail.com</a>
<a href=""mailto:p.wd.077.0.3.4@gmail.com"">p.wd.077.0.3.4@gmail.com</a>
<a href=""mailto:p.w.d0.7.7034@gmail.com"">p.w.d0.7.7034@gmail.com</a>
<a href=""mailto:p.wd.07.7034@gmail.com"">p.wd.07.7034@gmail.com</a>
<a href=""mailto:p.w.d077.0.34@gmail.com"">p.w.d077.0.34@gmail.com</a>
<a href=""mailto:pw.d0770.34@gmail.com"">pw.d0770.34@gmail.com</a>
<a href=""mailto:pwd077034@gmail.com"">pwd077034@gmail.com</a>
<a href=""mailto:pw.d.0.7703.4@gmail.com"">pw.d.0.7703.4@gmail.com</a>
<a href=""mailto:p.wd.0.7.7.034@gmail.com"">p.wd.0.7.7.034@gmail.com</a>
<a href=""mailto:pw.d.07.7.034@gmail.com"">pw.d.07.7.034@gmail.com</a>
<a href=""mailto:pwd07.7034@gmail.com"">pwd07.7034@gmail.com</a>
<a href=""mailto:pwd.0.7.7034@gmail.com"">pwd.0.7.7034@gmail.com</a>
<a href=""mailto:p.wd0.7703.4@gmail.com"">p.wd0.7703.4@gmail.com</a>
<a href=""mailto:pw.d07703.4@gmail.com"">pw.d07703.4@gmail.com</a>
<a href=""mailto:p.wd.07.7.0.34@gmail.com"">p.wd.07.7.0.34@gmail.com</a>
<a href=""mailto:p.wd.077034@gmail.com"">p.wd.077034@gmail.com</a>
<a href=""mailto:p.wd0.7.70.34@gmail.com"">p.wd0.7.70.34@gmail.com</a>
<a href=""mailto:p.w.d.0.7703.4@gmail.com"">p.w.d.0.7703.4@gmail.com</a>
<a href=""mailto:p.w.d077.03.4@gmail.com"">p.w.d077.03.4@gmail.com</a>
<a href=""mailto:pwd0.770.3.4@gmail.com"">pwd0.770.3.4@gmail.com</a>
<a href=""mailto:pwd077.0.34@gmail.com"">pwd077.0.34@gmail.com</a>
<a href=""mailto:pwd.077.0.3.4@gmail.com"">pwd.077.0.3.4@gmail.com</a>
<a href=""mailto:p.wd.0770.3.4@gmail.com"">p.wd.0770.3.4@gmail.com</a>
<a href=""mailto:p.wd077.03.4@gmail.com"">p.wd077.03.4@gmail.com</a>
<a href=""mailto:p.w.d.077.0.34@gmail.com"">p.w.d.077.0.34@gmail.com</a>
<a href=""mailto:pw.d077.0.3.4@gmail.com"">pw.d077.0.3.4@gmail.com</a>
<a href=""mailto:p.w.d0.7.703.4@gmail.com"">p.w.d0.7.703.4@gmail.com</a>
<a href=""mailto:pwd.0770.34@gmail.com"">pwd.0770.34@gmail.com</a>
<a href=""mailto:pwd0.7.7034@gmail.com"">pwd0.7.7034@gmail.com</a>
<a href=""mailto:p.wd.077.034@gmail.com"">p.wd.077.034@gmail.com</a>
<a href=""mailto:p.w.d0.77.034@gmail.com"">p.w.d0.77.034@gmail.com</a>
<a href=""mailto:p.wd07.7.034@gmail.com"">p.wd07.7.034@gmail.com</a>
<a href=""mailto:p.wd0.77034@gmail.com"">p.wd0.77034@gmail.com</a>
<a href=""mailto:pw.d0770.3.4@gmail.com"">pw.d0770.3.4@gmail.com</a>
<a href=""mailto:p.w.d0.770.3.4@gmail.com"">p.w.d0.770.3.4@gmail.com</a>
<a href=""mailto:p.w.d.07703.4@gmail.com"">p.w.d.07703.4@gmail.com</a>
<a href=""mailto:p.w.d0.7703.4@gmail.com"">p.w.d0.7703.4@gmail.com</a>
<a href=""mailto:pwd0.77.03.4@gmail.com"">pwd0.77.03.4@gmail.com</a>
<a href=""mailto:pw.d.0.7.7.0.34@gmail.com"">pw.d.0.7.7.0.34@gmail.com</a>
<a href=""mailto:pw.d.07.7.0.34@gmail.com"">pw.d.07.7.0.34@gmail.com</a>
<a href=""mailto:pwd.0.77.0.3.4@gmail.com"">pwd.0.77.0.3.4@gmail.com</a>
<a href=""mailto:p.wd.077.03.4@gmail.com"">p.wd.077.03.4@gmail.com</a>
<a href=""mailto:p.w.d.077.034@gmail.com"">p.w.d.077.034@gmail.com</a>
<a href=""mailto:pw.d07.70.3.4@gmail.com"">pw.d07.70.3.4@gmail.com</a>
<a href=""mailto:pwd077.0.3.4@gmail.com"">pwd077.0.3.4@gmail.com</a>
<a href=""mailto:p.wd077034@gmail.com"">p.wd077034@gmail.com</a>
<a href=""mailto:p.w.d07.70.34@gmail.com"">p.w.d07.70.34@gmail.com</a>
<a href=""mailto:p.wd.0770.34@gmail.com"">p.wd.0770.34@gmail.com</a>
<a href=""mailto:pw.d.0.77034@gmail.com"">pw.d.0.77034@gmail.com</a>
<a href=""mailto:p.wd.0.7.7034@gmail.com"">p.wd.0.7.7034@gmail.com</a>
<a href=""mailto:pwd07.70.3.4@gmail.com"">pwd07.70.3.4@gmail.com</a>
<a href=""mailto:pw.d.077.03.4@gmail.com"">pw.d.077.03.4@gmail.com</a>
<a href=""mailto:pw.d0.7.7.034@gmail.com"">pw.d0.7.7.034@gmail.com</a>
<a href=""mailto:pwd0.7.70.3.4@gmail.com"">pwd0.7.70.3.4@gmail.com</a>
<a href=""mailto:p.wd0.77.0.3.4@gmail.com"">p.wd0.77.0.3.4@gmail.com</a>
<a href=""mailto:pwd0.7.7.0.34@gmail.com"">pwd0.7.7.0.34@gmail.com</a>
<a href=""mailto:pwd.07703.4@gmail.com"">pwd.07703.4@gmail.com</a>
<a href=""mailto:p.w.d0.7.7.0.3.4@gmail.com"">p.w.d0.7.7.0.3.4@gmail.com</a>
<a href=""mailto:pwd0.770.34@gmail.com"">pwd0.770.34@gmail.com</a>
<a href=""mailto:pw.d0.7.70.34@gmail.com"">pw.d0.7.70.34@gmail.com</a>
<a href=""mailto:p.wd.0.7.7.0.34@gmail.com"">p.wd.0.7.7.0.34@gmail.com</a>
<a href=""mailto:pw.d.0.7.70.3.4@gmail.com"">pw.d.0.7.70.3.4@gmail.com</a>
<a href=""mailto:p.w.d.0.77.0.34@gmail.com"">p.w.d.0.77.0.34@gmail.com</a>
<a href=""mailto:p.wd.0.7703.4@gmail.com"">p.wd.0.7703.4@gmail.com</a>
<a href=""mailto:p.w.d.07.7.0.34@gmail.com"">p.w.d.07.7.0.34@gmail.com</a>
<a href=""mailto:pw.d.0.77.03.4@gmail.com"">pw.d.0.77.03.4@gmail.com</a>
<a href=""mailto:p.w.d.07.7.0.3.4@gmail.com"">p.w.d.07.7.0.3.4@gmail.com</a>
<a href=""mailto:pwd.0.7.7.03.4@gmail.com"">pwd.0.7.7.03.4@gmail.com</a>
<a href=""mailto:pw.d.07.7034@gmail.com"">pw.d.07.7034@gmail.com</a>
<a href=""mailto:pwd.0.770.34@gmail.com"">pwd.0.770.34@gmail.com</a>
<a href=""mailto:pw.d.0770.3.4@gmail.com"">pw.d.0770.3.4@gmail.com</a>
<a href=""mailto:p.w.d.0.77.0.3.4@gmail.com"">p.w.d.0.77.0.3.4@gmail.com</a>
<a href=""mailto:p.w.d.077.03.4@gmail.com"">p.w.d.077.03.4@gmail.com</a>
<a href=""mailto:p.wd0.7.7.034@gmail.com"">p.wd0.7.7.034@gmail.com</a>
<a href=""mailto:p.wd0.770.3.4@gmail.com"">p.wd0.770.3.4@gmail.com</a>
<a href=""mailto:p.w.d.0.77.034@gmail.com"">p.w.d.0.77.034@gmail.com</a>
<a href=""mailto:p.wd.0.77.0.34@gmail.com"">p.wd.0.77.0.34@gmail.com</a>
<a href=""mailto:p.wd0.7.7034@gmail.com"">p.wd0.7.7034@gmail.com</a>
<a href=""mailto:p.wd0770.3.4@gmail.com"">p.wd0770.3.4@gmail.com</a>
<a href=""mailto:pw.d.0770.34@gmail.com"">pw.d.0770.34@gmail.com</a>
<a href=""mailto:p.wd0.7.703.4@gmail.com"">p.wd0.7.703.4@gmail.com</a>
<a href=""mailto:p.wd0.770.34@gmail.com"">p.wd0.770.34@gmail.com</a>
<a href=""mailto:pwd.07.7.0.3.4@gmail.com"">pwd.07.7.0.3.4@gmail.com</a>
<a href=""mailto:p.wd.07.7.034@gmail.com"">p.wd.07.7.034@gmail.com</a>
<a href=""mailto:p.w.d.0.7.70.3.4@gmail.com"">p.w.d.0.7.70.3.4@gmail.com</a>
<a href=""mailto:pwd0.77034@gmail.com"">pwd0.77034@gmail.com</a>
<a href=""mailto:p.w.d0.77.0.3.4@gmail.com"">p.w.d0.77.0.3.4@gmail.com</a>
<a href=""mailto:p.wd07.703.4@gmail.com"">p.wd07.703.4@gmail.com</a>
<a href=""mailto:p.w.d.07.70.3.4@gmail.com"">p.w.d.07.70.3.4@gmail.com</a>
<a href=""mailto:p.w.d07703.4@gmail.com"">p.w.d07703.4@gmail.com</a>
<a href=""mailto:p.w.d07.703.4@gmail.com"">p.w.d07.703.4@gmail.com</a>
<a href=""mailto:pwd077.03.4@gmail.com"">pwd077.03.4@gmail.com</a>
<a href=""mailto:pw.d.07.70.3.4@gmail.com"">pw.d.07.70.3.4@gmail.com</a>
<a href=""mailto:p.w.d0.770.34@gmail.com"">p.w.d0.770.34@gmail.com</a>
<a href=""mailto:pwd.0.770.3.4@gmail.com"">pwd.0.770.3.4@gmail.com</a>
<a href=""mailto:pwd07.7.0.34@gmail.com"">pwd07.7.0.34@gmail.com</a>
<a href=""mailto:pwd.07.70.34@gmail.com"">pwd.07.70.34@gmail.com</a>
<a href=""mailto:p.wd07.7034@gmail.com"">p.wd07.7034@gmail.com</a>
<a href=""mailto:pwd.077.0.34@gmail.com"">pwd.077.0.34@gmail.com</a>
<a href=""mailto:p.wd0770.34@gmail.com"">p.wd0770.34@gmail.com</a>
<a href=""mailto:pwd.0.77.0.34@gmail.com"">pwd.0.77.0.34@gmail.com</a>
<a href=""mailto:pw.d.07703.4@gmail.com"">pw.d.07703.4@gmail.com</a>
<a href=""mailto:pw.d077.034@gmail.com"">pw.d077.034@gmail.com</a>
<a href=""mailto:p.w.d07.70.3.4@gmail.com"">p.w.d07.70.3.4@gmail.com</a>
<a href=""mailto:p.w.d077.034@gmail.com"">p.w.d077.034@gmail.com</a>
<a href=""mailto:pwd077.034@gmail.com"">pwd077.034@gmail.com</a>
<a href=""mailto:pw.d0.77034@gmail.com"">pw.d0.77034@gmail.com</a>
<a href=""mailto:pwd0.7.7.034@gmail.com"">pwd0.7.7.034@gmail.com</a>
<a href=""mailto:p.w.d.0.7.7.0.3.4@gmail.com"">p.w.d.0.7.7.0.3.4@gmail.com</a>
<a href=""mailto:p.wd.0.7.7.03.4@gmail.com"">p.wd.0.7.7.03.4@gmail.com</a>
<a href=""mailto:pwd.07.7.034@gmail.com"">pwd.07.7.034@gmail.com</a>
<a href=""mailto:p.w.d.0.7.7.03.4@gmail.com"">p.w.d.0.7.7.03.4@gmail.com</a>
<a href=""mailto:pw.d.077.0.3.4@gmail.com"">pw.d.077.0.3.4@gmail.com</a>
<a href=""mailto:p.wd.07.70.3.4@gmail.com"">p.wd.07.70.3.4@gmail.com</a>
<a href=""mailto:pwd.077.03.4@gmail.com"">pwd.077.03.4@gmail.com</a>
<a href=""mailto:p.w.d.077.0.3.4@gmail.com"">p.w.d.077.0.3.4@gmail.com</a>
<a href=""mailto:p.w.d0.7.70.3.4@gmail.com"">p.w.d0.7.70.3.4@gmail.com</a>
<a href=""mailto:p.wd07.7.03.4@gmail.com"">p.wd07.7.03.4@gmail.com</a>
<a href=""mailto:p.w.d07.7034@gmail.com"">p.w.d07.7034@gmail.com</a>
<a href=""mailto:p.w.d07.7.0.34@gmail.com"">p.w.d07.7.0.34@gmail.com</a>
<a href=""mailto:pwd0.77.034@gmail.com"">pwd0.77.034@gmail.com</a>
<a href=""mailto:pw.d.0.77.0.34@gmail.com"">pw.d.0.77.0.34@gmail.com</a>
<a href=""mailto:pw.d0.7.7.0.34@gmail.com"">pw.d0.7.7.0.34@gmail.com</a>
<a href=""mailto:p.w.d.0.7.70.34@gmail.com"">p.w.d.0.7.70.34@gmail.com</a>
<a href=""mailto:p.wd0.7.70.3.4@gmail.com"">p.wd0.7.70.3.4@gmail.com</a>
<a href=""mailto:p.wd0.77.0.34@gmail.com"">p.wd0.77.0.34@gmail.com</a>
<a href=""mailto:pw.d.0.77.0.3.4@gmail.com"">pw.d.0.77.0.3.4@gmail.com</a>
<a href=""mailto:p.w.d.07.703.4@gmail.com"">p.w.d.07.703.4@gmail.com</a>
<a href=""mailto:p.wd.0.77.0.3.4@gmail.com"">p.wd.0.77.0.3.4@gmail.com</a>
<a href=""mailto:p.wd07.70.34@gmail.com"">p.wd07.70.34@gmail.com</a>
<a href=""mailto:pw.d077034@gmail.com"">pw.d077034@gmail.com</a>
<a href=""mailto:pw.d0.7703.4@gmail.com"">pw.d0.7703.4@gmail.com</a>
<a href=""mailto:p.w.d07.7.03.4@gmail.com"">p.w.d07.7.03.4@gmail.com</a>
<a href=""mailto:p.w.d.077034@gmail.com"">p.w.d.077034@gmail.com</a>
<a href=""mailto:videostape6@gmail.com"">videostape6@gmail.com</a>
<a href=""mailto:v.id.e.ost.ape6@gmail.com"">v.id.e.ost.ape6@gmail.com</a>
<a href=""mailto:vi.de.o.st.a.pe6@gmail.com"">vi.de.o.st.a.pe6@gmail.com</a>
<a href=""mailto:vide.o.stap.e6@gmail.com"">vide.o.stap.e6@gmail.com</a>
<a href=""mailto:v.ideos.t.a.pe.6@gmail.com"">v.ideos.t.a.pe.6@gmail.com</a>
<a href=""mailto:vid.e.o.s.tap.e6@gmail.com"">vid.e.o.s.tap.e6@gmail.com</a>
<a href=""mailto:v.ideo.st.a.pe6@gmail.com"">v.ideo.st.a.pe6@gmail.com</a>
<a href=""mailto:vi.d.e.o.s.t.a.p.e6@gmail.com"">vi.d.e.o.s.t.a.p.e6@gmail.com</a>
<a href=""mailto:vid.eos.tape.6@gmail.com"">vid.eos.tape.6@gmail.com</a>
<a href=""mailto:v.i.d.e.os.t.a.p.e.6@gmail.com"">v.i.d.e.os.t.a.p.e.6@gmail.com</a>
<a href=""mailto:v.id.e.os.t.ap.e.6@gmail.com"">v.id.e.os.t.ap.e.6@gmail.com</a>
<a href=""mailto:vide.o.stap.e.6@gmail.com"">vide.o.stap.e.6@gmail.com</a>
<a href=""mailto:vi.d.eost.a.pe.6@gmail.com"">vi.d.eost.a.pe.6@gmail.com</a>
<a href=""mailto:videost.ap.e6@gmail.com"">videost.ap.e6@gmail.com</a>
<a href=""mailto:vi.d.eosta.p.e.6@gmail.com"">vi.d.eosta.p.e.6@gmail.com</a>
<a href=""mailto:v.i.d.eo.s.t.a.p.e6@gmail.com"">v.i.d.eo.s.t.a.p.e6@gmail.com</a>
<a href=""mailto:vi.deost.a.p.e.6@gmail.com"">vi.deost.a.p.e.6@gmail.com</a>
<a href=""mailto:vi.d.eos.t.ap.e.6@gmail.com"">vi.d.eos.t.ap.e.6@gmail.com</a>
<a href=""mailto:video.stap.e.6@gmail.com"">video.stap.e.6@gmail.com</a>
<a href=""mailto:vi.d.eostap.e.6@gmail.com"">vi.d.eostap.e.6@gmail.com</a>
<a href=""mailto:vi.de.ostap.e6@gmail.com"">vi.de.ostap.e6@gmail.com</a>
<a href=""mailto:vi.de.o.st.ape.6@gmail.com"">vi.de.o.st.ape.6@gmail.com</a>
<a href=""mailto:v.id.e.o.stape.6@gmail.com"">v.id.e.o.stape.6@gmail.com</a>
<a href=""mailto:vid.e.os.t.a.p.e6@gmail.com"">vid.e.os.t.a.p.e6@gmail.com</a>
<a href=""mailto:vide.ostap.e.6@gmail.com"">vide.ostap.e.6@gmail.com</a>
<a href=""mailto:v.i.deos.t.ap.e6@gmail.com"">v.i.deos.t.ap.e6@gmail.com</a>
<a href=""mailto:vi.d.eos.t.a.pe6@gmail.com"">vi.d.eos.t.a.pe6@gmail.com</a>
<a href=""mailto:v.i.d.eo.stap.e.6@gmail.com"">v.i.d.eo.stap.e.6@gmail.com</a>
<a href=""mailto:v.ide.os.t.a.pe.6@gmail.com"">v.ide.os.t.a.pe.6@gmail.com</a>
<a href=""mailto:vi.d.e.os.t.ap.e6@gmail.com"">vi.d.e.os.t.ap.e6@gmail.com</a>
<a href=""mailto:vi.d.e.ostap.e6@gmail.com"">vi.d.e.ostap.e6@gmail.com</a>
<a href=""mailto:vi.d.eo.st.a.pe.6@gmail.com"">vi.d.eo.st.a.pe.6@gmail.com</a>
<a href=""mailto:vi.d.eo.s.tape.6@gmail.com"">vi.d.eo.s.tape.6@gmail.com</a>
<a href=""mailto:v.ideos.t.ap.e.6@gmail.com"">v.ideos.t.ap.e.6@gmail.com</a>
<a href=""mailto:v.i.deo.s.tape6@gmail.com"">v.i.deo.s.tape6@gmail.com</a>
<a href=""mailto:vi.d.e.osta.pe.6@gmail.com"">vi.d.e.osta.pe.6@gmail.com</a>
<a href=""mailto:v.ideos.tap.e.6@gmail.com"">v.ideos.tap.e.6@gmail.com</a>
<a href=""mailto:vid.eosta.pe6@gmail.com"">vid.eosta.pe6@gmail.com</a>
<a href=""mailto:v.i.d.eo.s.tap.e.6@gmail.com"">v.i.d.eo.s.tap.e.6@gmail.com</a>
<a href=""mailto:v.id.eo.s.tap.e6@gmail.com"">v.id.eo.s.tap.e6@gmail.com</a>
<a href=""mailto:vide.ost.ap.e6@gmail.com"">vide.ost.ap.e6@gmail.com</a>
<a href=""mailto:vi.deo.s.t.a.p.e6@gmail.com"">vi.deo.s.t.a.p.e6@gmail.com</a>
<a href=""mailto:vid.eo.s.t.ape6@gmail.com"">vid.eo.s.t.ape6@gmail.com</a>
<a href=""mailto:vi.d.eost.ape.6@gmail.com"">vi.d.eost.ape.6@gmail.com</a>
<a href=""mailto:vi.de.os.t.ape.6@gmail.com"">vi.de.os.t.ape.6@gmail.com</a>
<a href=""mailto:v.id.e.ost.a.p.e6@gmail.com"">v.id.e.ost.a.p.e6@gmail.com</a>
<a href=""mailto:v.id.eo.s.t.ape.6@gmail.com"">v.id.eo.s.t.ape.6@gmail.com</a>
<a href=""mailto:vid.e.ostap.e.6@gmail.com"">vid.e.ostap.e.6@gmail.com</a>
<a href=""mailto:vi.deos.t.a.p.e6@gmail.com"">vi.deos.t.a.p.e6@gmail.com</a>
<a href=""mailto:vid.e.o.sta.pe.6@gmail.com"">vid.e.o.sta.pe.6@gmail.com</a>
<a href=""mailto:v.i.de.osta.pe6@gmail.com"">v.i.de.osta.pe6@gmail.com</a>
<a href=""mailto:v.i.deo.st.ape6@gmail.com"">v.i.deo.st.ape6@gmail.com</a>
<a href=""mailto:vid.e.o.sta.p.e6@gmail.com"">vid.e.o.sta.p.e6@gmail.com</a>
<a href=""mailto:v.i.d.eo.s.tape6@gmail.com"">v.i.d.eo.s.tape6@gmail.com</a>
<a href=""mailto:vi.de.o.s.tap.e6@gmail.com"">vi.de.o.s.tap.e6@gmail.com</a>
<a href=""mailto:vide.os.tape6@gmail.com"">vide.os.tape6@gmail.com</a>
<a href=""mailto:video.s.tape6@gmail.com"">video.s.tape6@gmail.com</a>
<a href=""mailto:videosta.p.e6@gmail.com"">videosta.p.e6@gmail.com</a>
<a href=""mailto:vi.d.e.ost.ape.6@gmail.com"">vi.d.e.ost.ape.6@gmail.com</a>
<a href=""mailto:vid.eo.sta.p.e.6@gmail.com"">vid.eo.sta.p.e.6@gmail.com</a>
<a href=""mailto:vi.de.o.sta.pe.6@gmail.com"">vi.de.o.sta.pe.6@gmail.com</a>
<a href=""mailto:v.i.d.eostap.e6@gmail.com"">v.i.d.eostap.e6@gmail.com</a>
<a href=""mailto:vi.d.e.ost.ape6@gmail.com"">vi.d.e.ost.ape6@gmail.com</a>
<a href=""mailto:v.i.de.o.sta.p.e.6@gmail.com"">v.i.de.o.sta.p.e.6@gmail.com</a>
<a href=""mailto:v.ide.osta.pe6@gmail.com"">v.ide.osta.pe6@gmail.com</a>
<a href=""mailto:vi.d.eo.s.tap.e6@gmail.com"">vi.d.eo.s.tap.e6@gmail.com</a>
<a href=""mailto:vi.d.eostap.e6@gmail.com"">vi.d.eostap.e6@gmail.com</a>
<a href=""mailto:v.ide.o.st.ap.e6@gmail.com"">v.ide.o.st.ap.e6@gmail.com</a>
<a href=""mailto:v.i.de.o.st.ape.6@gmail.com"">v.i.de.o.st.ape.6@gmail.com</a>
<a href=""mailto:vid.eost.a.p.e.6@gmail.com"">vid.eost.a.p.e.6@gmail.com</a>
<a href=""mailto:vide.ostape6@gmail.com"">vide.ostape6@gmail.com</a>
<a href=""mailto:vi.deos.ta.p.e.6@gmail.com"">vi.deos.ta.p.e.6@gmail.com</a>
<a href=""mailto:vi.d.e.o.s.ta.p.e.6@gmail.com"">vi.d.e.o.s.ta.p.e.6@gmail.com</a>
<a href=""mailto:v.i.deo.s.ta.p.e6@gmail.com"">v.i.deo.s.ta.p.e6@gmail.com</a>
<a href=""mailto:v.i.d.e.o.st.a.p.e6@gmail.com"">v.i.d.e.o.st.a.p.e6@gmail.com</a>
<a href=""mailto:v.ideo.s.t.ape6@gmail.com"">v.ideo.s.t.ape6@gmail.com</a>
<a href=""mailto:vi.d.e.os.t.a.pe.6@gmail.com"">vi.d.e.os.t.a.pe.6@gmail.com</a>
<a href=""mailto:vide.ost.a.p.e.6@gmail.com"">vide.ost.a.p.e.6@gmail.com</a>
<a href=""mailto:vid.eo.stap.e.6@gmail.com"">vid.eo.stap.e.6@gmail.com</a>
<a href=""mailto:vid.eosta.p.e.6@gmail.com"">vid.eosta.p.e.6@gmail.com</a>
<a href=""mailto:v.i.d.e.o.st.ape6@gmail.com"">v.i.d.e.o.st.ape6@gmail.com</a>
<a href=""mailto:v.i.d.eos.tap.e.6@gmail.com"">v.i.d.eos.tap.e.6@gmail.com</a>
<a href=""mailto:vide.os.t.a.pe.6@gmail.com"">vide.os.t.a.pe.6@gmail.com</a>
<a href=""mailto:v.id.e.o.st.a.pe6@gmail.com"">v.id.e.o.st.a.pe6@gmail.com</a>
<a href=""mailto:v.ide.ost.ap.e.6@gmail.com"">v.ide.ost.ap.e.6@gmail.com</a>
<a href=""mailto:v.ide.ost.a.pe6@gmail.com"">v.ide.ost.a.pe6@gmail.com</a>
<a href=""mailto:v.i.de.o.s.ta.pe6@gmail.com"">v.i.de.o.s.ta.pe6@gmail.com</a>
<a href=""mailto:v.i.de.ost.ap.e.6@gmail.com"">v.i.de.ost.ap.e.6@gmail.com</a>
<a href=""mailto:v.ide.o.s.t.ape.6@gmail.com"">v.ide.o.s.t.ape.6@gmail.com</a>
<a href=""mailto:v.ide.osta.p.e6@gmail.com"">v.ide.osta.p.e6@gmail.com</a>
<a href=""mailto:v.i.deost.ape.6@gmail.com"">v.i.deost.ape.6@gmail.com</a>
<a href=""mailto:v.i.deo.stap.e.6@gmail.com"">v.i.deo.stap.e.6@gmail.com</a>
<a href=""mailto:vid.eost.ape.6@gmail.com"">vid.eost.ape.6@gmail.com</a>
<a href=""mailto:vid.eo.st.a.p.e6@gmail.com"">vid.eo.st.a.p.e6@gmail.com</a>
<a href=""mailto:v.i.d.e.o.st.ape.6@gmail.com"">v.i.d.e.o.st.ape.6@gmail.com</a>
<a href=""mailto:vid.e.os.tape6@gmail.com"">vid.e.os.tape6@gmail.com</a>
<a href=""mailto:vid.eos.t.a.pe.6@gmail.com"">vid.eos.t.a.pe.6@gmail.com</a>
<a href=""mailto:v.i.d.e.os.t.a.pe6@gmail.com"">v.i.d.e.os.t.a.pe6@gmail.com</a>
<a href=""mailto:vide.os.t.ap.e.6@gmail.com"">vide.os.t.ap.e.6@gmail.com</a>
<a href=""mailto:v.i.deo.st.ap.e6@gmail.com"">v.i.deo.st.ap.e6@gmail.com</a>
<a href=""mailto:v.id.e.o.s.t.a.pe6@gmail.com"">v.id.e.o.s.t.a.pe6@gmail.com</a>
<a href=""mailto:v.i.d.eos.ta.p.e.6@gmail.com"">v.i.d.eos.ta.p.e.6@gmail.com</a>
<a href=""mailto:v.id.eos.ta.pe.6@gmail.com"">v.id.eos.ta.pe.6@gmail.com</a>
<a href=""mailto:vi.deo.s.ta.p.e.6@gmail.com"">vi.deo.s.ta.p.e.6@gmail.com</a>
<a href=""mailto:vi.deo.s.tap.e.6@gmail.com"">vi.deo.s.tap.e.6@gmail.com</a>
<a href=""mailto:vid.e.os.t.a.pe6@gmail.com"">vid.e.os.t.a.pe6@gmail.com</a>
<a href=""mailto:v.i.de.o.s.tap.e6@gmail.com"">v.i.de.o.s.tap.e6@gmail.com</a>
<a href=""mailto:videos.t.ap.e6@gmail.com"">videos.t.ap.e6@gmail.com</a>
<a href=""mailto:vi.d.e.os.t.ap.e.6@gmail.com"">vi.d.e.os.t.ap.e.6@gmail.com</a>
<a href=""mailto:vid.eos.ta.p.e6@gmail.com"">vid.eos.ta.p.e6@gmail.com</a>
<a href=""mailto:vi.de.ost.a.pe6@gmail.com"">vi.de.ost.a.pe6@gmail.com</a>
<a href=""mailto:vi.de.o.st.a.p.e.6@gmail.com"">vi.de.o.st.a.p.e.6@gmail.com</a>
<a href=""mailto:vid.e.ost.ape6@gmail.com"">vid.e.ost.ape6@gmail.com</a>
<a href=""mailto:vi.deostap.e6@gmail.com"">vi.deostap.e6@gmail.com</a>
<a href=""mailto:vi.de.o.st.a.pe.6@gmail.com"">vi.de.o.st.a.pe.6@gmail.com</a>
<a href=""mailto:v.i.d.eo.stape6@gmail.com"">v.i.d.eo.stape6@gmail.com</a>
<a href=""mailto:v.id.eo.s.tap.e.6@gmail.com"">v.id.eo.s.tap.e.6@gmail.com</a>
<a href=""mailto:v.id.e.o.s.tape.6@gmail.com"">v.id.e.o.s.tape.6@gmail.com</a>
<a href=""mailto:v.id.e.o.stap.e.6@gmail.com"">v.id.e.o.stap.e.6@gmail.com</a>
<a href=""mailto:vide.o.st.a.p.e.6@gmail.com"">vide.o.st.a.p.e.6@gmail.com</a>
<a href=""mailto:vi.de.ost.ape6@gmail.com"">vi.de.ost.ape6@gmail.com</a>
<a href=""mailto:vi.d.eo.s.t.ap.e6@gmail.com"">vi.d.eo.s.t.ap.e6@gmail.com</a>
<a href=""mailto:vide.ostape.6@gmail.com"">vide.ostape.6@gmail.com</a>
<a href=""mailto:v.id.eost.ap.e.6@gmail.com"">v.id.eost.ap.e.6@gmail.com</a>
<a href=""mailto:videost.a.p.e.6@gmail.com"">videost.a.p.e.6@gmail.com</a>
<a href=""mailto:vid.e.ostape.6@gmail.com"">vid.e.ostape.6@gmail.com</a>
<a href=""mailto:v.id.e.o.st.a.p.e.6@gmail.com"">v.id.e.o.st.a.p.e.6@gmail.com</a>
<a href=""mailto:v.id.e.o.s.tap.e6@gmail.com"">v.id.e.o.s.tap.e6@gmail.com</a>
<a href=""mailto:v.ide.o.stape.6@gmail.com"">v.ide.o.stape.6@gmail.com</a>
<a href=""mailto:vi.d.eos.ta.pe.6@gmail.com"">vi.d.eos.ta.pe.6@gmail.com</a>
<a href=""mailto:vi.d.e.o.sta.p.e6@gmail.com"">vi.d.e.o.sta.p.e6@gmail.com</a>
<a href=""mailto:v.i.de.os.t.a.pe6@gmail.com"">v.i.de.os.t.a.pe6@gmail.com</a>
<a href=""mailto:videost.ap.e.6@gmail.com"">videost.ap.e.6@gmail.com</a>
<a href=""mailto:v.i.de.o.stape6@gmail.com"">v.i.de.o.stape6@gmail.com</a>
<a href=""mailto:v.i.d.e.o.st.ap.e.6@gmail.com"">v.i.d.e.o.st.ap.e.6@gmail.com</a>
<a href=""mailto:vi.d.e.o.stap.e.6@gmail.com"">vi.d.e.o.stap.e.6@gmail.com</a>
<a href=""mailto:vi.d.eo.s.t.a.pe.6@gmail.com"">vi.d.eo.s.t.a.pe.6@gmail.com</a>
<a href=""mailto:vid.eo.s.t.a.pe6@gmail.com"">vid.eo.s.t.a.pe6@gmail.com</a>
<a href=""mailto:vid.eo.s.t.a.p.e.6@gmail.com"">vid.eo.s.t.a.p.e.6@gmail.com</a>
<a href=""mailto:vid.e.os.t.ap.e6@gmail.com"">vid.e.os.t.ap.e6@gmail.com</a>
<a href=""mailto:v.i.d.e.o.stap.e.6@gmail.com"">v.i.d.e.o.stap.e.6@gmail.com</a>
<a href=""mailto:v.i.d.e.o.s.ta.pe.6@gmail.com"">v.i.d.e.o.s.ta.pe.6@gmail.com</a>
<a href=""mailto:vi.deo.sta.pe.6@gmail.com"">vi.deo.sta.pe.6@gmail.com</a>
<a href=""mailto:vi.d.eos.ta.p.e6@gmail.com"">vi.d.eos.ta.p.e6@gmail.com</a>
<a href=""mailto:videos.ta.pe6@gmail.com"">videos.ta.pe6@gmail.com</a>
<a href=""mailto:vide.os.t.ape.6@gmail.com"">vide.os.t.ape.6@gmail.com</a>
<a href=""mailto:v.i.d.eo.s.tap.e6@gmail.com"">v.i.d.eo.s.tap.e6@gmail.com</a>
<a href=""mailto:video.st.ap.e.6@gmail.com"">video.st.ap.e.6@gmail.com</a>
<a href=""mailto:v.ide.o.sta.p.e.6@gmail.com"">v.ide.o.sta.p.e.6@gmail.com</a>
<a href=""mailto:v.i.deo.s.tap.e.6@gmail.com"">v.i.deo.s.tap.e.6@gmail.com</a>
<a href=""mailto:v.ideost.a.pe6@gmail.com"">v.ideost.a.pe6@gmail.com</a>
<a href=""mailto:vi.deost.a.p.e6@gmail.com"">vi.deost.a.p.e6@gmail.com</a>
<a href=""mailto:vid.e.o.st.ape6@gmail.com"">vid.e.o.st.ape6@gmail.com</a>
<a href=""mailto:vide.osta.pe6@gmail.com"">vide.osta.pe6@gmail.com</a>
<a href=""mailto:vid.eost.ape6@gmail.com"">vid.eost.ape6@gmail.com</a>
<a href=""mailto:vi.deo.st.ap.e6@gmail.com"">vi.deo.st.ap.e6@gmail.com</a>
<a href=""mailto:vid.eo.s.t.ape.6@gmail.com"">vid.eo.s.t.ape.6@gmail.com</a>
<a href=""mailto:vi.de.o.s.ta.pe.6@gmail.com"">vi.de.o.s.ta.pe.6@gmail.com</a>
<a href=""mailto:v.ideo.s.tap.e6@gmail.com"">v.ideo.s.tap.e6@gmail.com</a>
<a href=""mailto:v.i.d.e.ost.a.pe6@gmail.com"">v.i.d.e.ost.a.pe6@gmail.com</a>
<a href=""mailto:v.i.d.eos.ta.pe.6@gmail.com"">v.i.d.eos.ta.pe.6@gmail.com</a>
<a href=""mailto:vi.deo.s.t.ape.6@gmail.com"">vi.deo.s.t.ape.6@gmail.com</a>
<a href=""mailto:v.ideost.a.p.e6@gmail.com"">v.ideost.a.p.e6@gmail.com</a>
<a href=""mailto:v.i.deo.s.t.ap.e6@gmail.com"">v.i.deo.s.t.ap.e6@gmail.com</a>
<a href=""mailto:vi.d.eo.st.ap.e6@gmail.com"">vi.d.eo.st.ap.e6@gmail.com</a>
<a href=""mailto:v.i.d.e.o.s.ta.pe6@gmail.com"">v.i.d.e.o.s.ta.pe6@gmail.com</a>
<a href=""mailto:vi.de.os.t.ap.e6@gmail.com"">vi.de.os.t.ap.e6@gmail.com</a>
<a href=""mailto:vi.de.ost.ap.e6@gmail.com"">vi.de.ost.ap.e6@gmail.com</a>
<a href=""mailto:video.s.ta.p.e6@gmail.com"">video.s.ta.p.e6@gmail.com</a>
<a href=""mailto:v.ideost.a.p.e.6@gmail.com"">v.ideost.a.p.e.6@gmail.com</a>
<a href=""mailto:v.id.e.o.s.t.a.p.e6@gmail.com"">v.id.e.o.s.t.a.p.e6@gmail.com</a>
<a href=""mailto:v.id.eo.sta.p.e6@gmail.com"">v.id.eo.sta.p.e6@gmail.com</a>
<a href=""mailto:vi.de.osta.pe.6@gmail.com"">vi.de.osta.pe.6@gmail.com</a>
<a href=""mailto:vid.e.ost.a.pe6@gmail.com"">vid.e.ost.a.pe6@gmail.com</a>
<a href=""mailto:video.st.ape.6@gmail.com"">video.st.ape.6@gmail.com</a>
<a href=""mailto:vide.o.st.a.pe.6@gmail.com"">vide.o.st.a.pe.6@gmail.com</a>
<a href=""mailto:vid.eo.s.tap.e6@gmail.com"">vid.eo.s.tap.e6@gmail.com</a>
<a href=""mailto:v.i.d.eo.st.ap.e.6@gmail.com"">v.i.d.eo.st.ap.e.6@gmail.com</a>
<a href=""mailto:v.i.d.eos.t.a.p.e.6@gmail.com"">v.i.d.eos.t.a.p.e.6@gmail.com</a>
<a href=""mailto:vid.eo.sta.pe6@gmail.com"">vid.eo.sta.pe6@gmail.com</a>
<a href=""mailto:vi.de.o.s.tape6@gmail.com"">vi.de.o.s.tape6@gmail.com</a>
<a href=""mailto:vi.d.e.ost.a.pe6@gmail.com"">vi.d.e.ost.a.pe6@gmail.com</a>
<a href=""mailto:v.i.d.e.os.t.a.pe.6@gmail.com"">v.i.d.e.os.t.a.pe.6@gmail.com</a>
<a href=""mailto:vide.os.t.a.p.e6@gmail.com"">vide.os.t.a.p.e6@gmail.com</a>
<a href=""mailto:vi.de.o.s.t.ape.6@gmail.com"">vi.de.o.s.t.ape.6@gmail.com</a>
<a href=""mailto:vi.d.eos.tap.e.6@gmail.com"">vi.d.eos.tap.e.6@gmail.com</a>
<a href=""mailto:vide.o.s.t.ap.e.6@gmail.com"">vide.o.s.t.ap.e.6@gmail.com</a>
<a href=""mailto:v.i.d.e.o.s.t.ape.6@gmail.com"">v.i.d.e.o.s.t.ape.6@gmail.com</a>
<a href=""mailto:v.id.eo.s.ta.p.e6@gmail.com"">v.id.eo.s.ta.p.e6@gmail.com</a>
<a href=""mailto:vi.deo.s.t.ape6@gmail.com"">vi.deo.s.t.ape6@gmail.com</a>
<a href=""mailto:v.i.d.eo.s.t.a.pe6@gmail.com"">v.i.d.eo.s.t.a.pe6@gmail.com</a>
<a href=""mailto:v.id.eost.a.pe.6@gmail.com"">v.id.eost.a.pe.6@gmail.com</a>
<a href=""mailto:vi.deost.ape6@gmail.com"">vi.deost.ape6@gmail.com</a>
<a href=""mailto:vi.de.o.sta.p.e.6@gmail.com"">vi.de.o.sta.p.e.6@gmail.com</a>
<a href=""mailto:v.i.deostap.e.6@gmail.com"">v.i.deostap.e.6@gmail.com</a>
<a href=""mailto:vi.deost.ap.e6@gmail.com"">vi.deost.ap.e6@gmail.com</a>
<a href=""mailto:v.id.eos.tape6@gmail.com"">v.id.eos.tape6@gmail.com</a>
<a href=""mailto:v.id.e.os.t.a.pe.6@gmail.com"">v.id.e.os.t.a.pe.6@gmail.com</a>
<a href=""mailto:v.i.deo.stape6@gmail.com"">v.i.deo.stape6@gmail.com</a>
<a href=""mailto:v.id.e.ost.ap.e6@gmail.com"">v.id.e.ost.ap.e6@gmail.com</a>
<a href=""mailto:vi.d.eo.st.a.p.e6@gmail.com"">vi.d.eo.st.a.p.e6@gmail.com</a>"
tcF813dD,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:31 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
9KBZ7b5q,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:29 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
S94644WP,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:28 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
jh0t51NS,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:26 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
0dD3vaVh,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:25 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
4XyiVMuk,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:23 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
AP7bcsWk,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:20 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Y2tNaid0,Hashed Email With Exclude,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:19 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
SZCRU856,Hashed Email - Full,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:17 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
X9vuSkaZ,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 21st of November 2023 12:31:16 PM CDT,"Pasted at: 21/11/2023 18:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
mTXfsstW,Zadania - lekcja 11,drakon-firestone,Python,Tuesday 21st of November 2023 12:28:10 PM CDT,"'''
1. Zadanie rozgrzewkowe:
Przygotuj funkcję, która jako argument otrzymuje string oraz listę stringów, a
zwraca napis, gdzie pomiędzy elementy z listy dokładana jest zawartość
pierwszego argumentu. Przykład:

foo(‘?’, [‘ala’, ‘ma’, ‘kota’]) -> ‘ala?ma?kota’
'''

'''
2. Napisz funkcję, która obliczy obwód, pole i długość przekątnej dla prostokąta.
Funkcja jako argumenty powinna otrzymać długości boków.
'''

'''
3. Napisz funkcję, która otrzyma dwa argumenty pierwszym będzie liczba, którą
chcemy podzielić bez reszty a drugim argumentem będzie dzielnik. Należy
sprawdzić czy można dokonać dzielenia a jeśli tak zwrócić informację czy
liczba jest podzielna bez reszty czy nie.
'''

'''
4. Napisz funkcję, która przyjmuje następujące argumenty: imie (str), wiek (int),
wzrost_m (float), a zwraca napis: “Jan, lat 20, 1.75 m wzrostu” - oczywiście
argumenty należy podstawić do szablonu. Wzrost ma zawsze pokazywać dwa
miejsca po przecinku.
'''

'''
5. Napisz funkcję, która zapyta użytkownika o hasło i login. Funkcja ma zwrócić
True, jeśli podano poprawne hasło i login lub False w innym przypadku.
'''

'''
6. Wykorzystaj powyższą funkcję w funkcji, która pozwala na n prób logowań.
Zwraca True jeśli udało się zalogować lub False jeśli przekroczono liczbę
prób. Funkcja również musi przyjmować poprawne hasło i login.
Wprowadzenie niepoprawnej wartości n powinno zostać obsłużone (zapytanie
jednorazowe dla takich przypadków).
'''"
CkRm6HQ9,ejercicio02,fgallego,C++,Tuesday 21st of November 2023 12:25:58 PM CDT,"#include <raylib.h>
#include <array>
#include <cstdint>
#include <cstdlib>
#include <cassert>
#include <span>
#include <optional>

constexpr uint16_t SCR_WIDTH  { 800 };
constexpr uint16_t SCR_HEIGHT { 600 };

struct RenderComponent{
   uint16_t x{}, y{};
   uint16_t w{1}, h{1};
   Color c{WHITE};
};
struct PhysicsComponent{
   float x{}, y{};
   float vx{}, vy{};
};

struct Entity {
   RenderComponent*  ren{};
   PhysicsComponent* phy{};
};

// Dará acceso al array devolviendolo por referencia constante
struct EntityManager {
   static constexpr std::size_t MAX_ENTITIES { 100 };

   Entity& newEntity() noexcept {
      assert(alive_ < MAX_ENTITIES);
      
      alive_ += 1;
      return entities_[alive_ - 1];
   }

   std::size_t freeEntities() const noexcept { return MAX_ENTITIES - alive_; }

   std::span<Entity const> getEntities() const { 
      return std::span{ entities_.begin(), alive_ }; 
   }
private:
   std::size_t alive_{};
   std::array<Entity, MAX_ENTITIES> entities_{};
};

void render_system(EntityManager& EM) {
   BeginDrawing();
   EndDrawing();
}

int main() {
   InitWindow(SCR_WIDTH, SCR_HEIGHT, ""My Game"");
   EntityManager  EM{};
   PhysicsComponent p{ .x=1.f, .y=2.f, .vy=-1.f },
                     p2{ .vx=2.f };
   RenderComponent  r{ .x=1, .y=2, .w=5, .h=2 },
                    r2{};

   {
      auto& e = EM.newEntity();
      e.phy = &p;
      e.ren = &r;
   }
   {
      auto& e = EM.newEntity();
      e.ren = &r2;
   }
   {
      auto& e = EM.newEntity();
      e.phy = &p2;
   }
   EM.newEntity();
   
   while ( ! WindowShouldClose() ) {
      //update_entities(EM);
      render_system(EM);
   }

   CloseWindow();
}"
uwGaE4UV,Untitled,Nenogzar,Python,Tuesday 21st of November 2023 12:12:58 PM CDT,"coordinate_a = list(map(int, input(""A: "").split()))
coordinate_b = list(map(int, input(""B: "").split()))
coordinate_c = list(map(int, input(""C: "").split()))
coordinate_d = list(map(int, input(""D: "").split()))

# Поправки във формулата
formula = 0.5 * (
    (coordinate_a[0] * coordinate_b[1])
    + (coordinate_b[0] * coordinate_c[1])
    + (coordinate_c[0] * coordinate_d[1])
    + (coordinate_d[0] * coordinate_a[1])
    - (coordinate_b[0] * coordinate_a[1])
    - (coordinate_c[0] * coordinate_b[1])
    - (coordinate_d[0] * coordinate_c[1])
    - (coordinate_a[0] * coordinate_d[1])
)

print(""Лицето на четириъгълника е:"", abs(formula))"
8xA5PpVV,02. Caesar Cipher,Spocoman,C++,Tuesday 21st of November 2023 12:10:36 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() { 
    string message;
    getline(cin, message);

    for (size_t i = 0; i < message.length(); i++) {
        message[i] += 3;
    }
       
    cout << message << endl;
    return 0;
}"
jMarFgfj,Списки(3 сем),anticlown,C,Tuesday 21st of November 2023 12:03:22 PM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <malloc.h>
#include <stdbool.h>

//node struct
typedef struct Node {
    int value;
    struct Node* next;
} Node;

//struct methods prototypes
int pop(Node** head);
void popBack(Node** head);
void push(Node** head, int data);
void pushBack(Node* head, int value);
Node* getNth(Node* head, int n);
Node* getLast(Node* head);
Node* getLastButOne(Node* head);
void insert(Node* head, unsigned pos, int val);
int deleteNth(Node** head, int n);
void fromArray(Node** head, int* arr, size_t size);
int* toArray(const Node* head, const int length);
void printLinkedList(const Node* head);

//task prototypes
void insert44BeforeAnyMultipleOfSeven(Node* head);

//print prototypes
void printLinkedList(const Node* head);
void printTaskInfo();

/*      list methods start      */
void push(Node** head, int data) {
    Node* tmp = (Node*)malloc(sizeof(Node));
    tmp->value = data;
    tmp->next = (*head);
    (*head) = tmp;
}

void pushBack(Node* head, int value) {
    Node* last = getLast(head);
    Node* tmp = (Node*)malloc(sizeof(Node));
    tmp->value = value;
    tmp->next = NULL;
    last->next = tmp;
}

int pop(Node** head) {
    Node* prev = NULL;
    int val;
    if (head == NULL) {
        exit(-1);
    }
    prev = (*head);
    val = prev->value;
    (*head) = (*head)->next;
    free(prev);
    return val;
}

void popBack(Node** head) {
    Node* lastbn = NULL;
    //Получили NULL
    if (!head) {
        exit(-1);
    }
    //Список пуст
    if (!(*head)) {
        exit(-1);
    }
    lastbn = getLastButOne(*head);
    //Если в списке один элемент
    if (lastbn == NULL) {
        free(*head);
        *head = NULL;
    }
    else {
        free(lastbn->next);
        lastbn->next = NULL;
    }
}

Node* getNth(Node* head, int n) {
    int counter = 0;
    while (counter < n && head) {
        head = head->next;
        counter++;
    }
    return head;
}

Node* getLast(Node* head) {
    if (head == NULL) {
        return NULL;
    }
    while (head->next) {
        head = head->next;
    }
    return head;
}

Node* getLastButOne(Node* head) {
    if (head == NULL) {
        exit(-2);
    }
    if (head->next == NULL) {
        return NULL;
    }
    while (head->next->next) {
        head = head->next;
    }
    return head;
}

//вставка на n-ое место
void insert(Node* head, unsigned pos, int val) {
    unsigned i = 0;
    Node* tmp = NULL;
    while (i < pos && head->next) {
        head = head->next;
        i++;
    }
    tmp = (Node*)malloc(sizeof(Node));
    tmp->value = val;
    if (head->next) {
        tmp->next = head->next;
    }
    else {
        tmp->next = NULL;
    }
    head->next = tmp;
}

//удаление n-го места
int deleteNth(Node** head, int n) {
    if (n == 0) {
        return pop(head);
    }
    else {
        Node* prev = getNth(*head, n - 1);
        Node* elm = prev->next;
        int val = elm->value;

        prev->next = elm->next;
        free(elm);
        return val;
    }
}

void fromArray(Node** head, int* arr, size_t size) {
    size_t i = size - 1;
    if (arr == NULL || size == 0) {
        return;
    }
    do {
        push(head, arr[i]);
    } while (i-- != 0);
}

int* toArray(const Node* head, const int length) {
    int leng = length;
    int* values = (int*)malloc(leng * sizeof(int));
    while (head) {
        values[--leng] = head->value;
        head = head->next;
    }
    return values;
}

/*      task methods start      */
int findFirstMultipleOfFive(const Node* head) {
    int counter = 0;
    while (head) {
        if (head->value % 5 == 0) {
            return counter;
        }
        counter++;
        head = head->next;
    }
    return -1;
}

void insert44BeforeAnyMultipleOfSeven(Node* head) {
    int pos = 0;
    Node* tempHead = head;
    while (tempHead) {
        if (tempHead->value % 7 == 0) {
           insert(head, pos - 1, 44);
           pos++;
        }
        pos++;
        tempHead = tempHead->next;
    }
}
/*      task methods end        */

/*      print procs start      */
void printLinkedList(const Node* head) {
    while (head) {
        printf(""%d "", head->value);
        head = head->next;
    }
    printf(""\n"");
}

void printTaskInfo() {
    printf(""Данная программа создает однонаправленный список из целых чисел.\n"");
    printf(""Затем удаляет первый элемент, кратный 5. После этого вставляет число 44 перед каждым числом, кратным 7.\n"");
}
/*      print procs end      */

int main()
{
    setlocale(LC_ALL, ""Rus"");
    printTaskInfo();
    Node* head = NULL;

    int arr[] = { 1,7,5,23,25,11,12,21,19,100 };
    fromArray(&head, arr, 10);

    printf(""Начальный список: "");
    printLinkedList(head);

    int posToDel = findFirstMultipleOfFive(head);
    if (posToDel == -1) {
        printf(""Элемента со значением, кратным пяти, нет в списке."");
    }
    else {
        deleteNth(&head, posToDel);
        printf(""Список после удаление первого элемента, кратного пяти: "");
        printLinkedList(head);
    }

    insert44BeforeAnyMultipleOfSeven(head);
    printf(""Список после вставки 44 перед каждым элементом, кратным семи: "");
    printLinkedList(head);

    getch();
}"
kFaDjYrr,01. Valid Usernames,Spocoman,C++,Tuesday 21st of November 2023 12:01:20 PM CDT,"#include <iostream>
#include <string>

using namespace std;

int main() { 
    string passwords, pass;
    getline(cin, passwords);

    while (passwords.length() != 0) {
        pass = passwords.substr(0, passwords.find("", ""));
        passwords.erase(0, pass.length() + 2);
        bool isValid = true;
        if (pass.length() > 3 && pass.length() <= 16) {
            for (size_t i = 0; i < pass.length(); i++) {
                if (!isalpha(pass[i]) && !isdigit(pass[i]) && pass[i] != '-' && pass[i] != '_') {
                    isValid = false;
                    continue;
                }
            }
        }
        else {
            continue;
        }
       
        if (isValid) {
            cout << pass << endl;
        }
    }

    return 0;
}"
LVPHsZj5,func_decorator_for_recursive_fibonacci_with_cache,bAngelov,Python,Tuesday 21st of November 2023 11:58:33 AM CDT,"def cache(func):
    def decorator(n):
        if not decorator.log.get(n):
            decorator.log[n] = func(n)
        return decorator.log[n]
    decorator.log = {}
    return decorator"
ibZ5aXDb,Untitled,wheresTheAnyKey,Bash,Tuesday 21st of November 2023 11:54:40 AM CDT,"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s sohail.ayers@greencastle.org.uk the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.

"
jDMr67QL,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:13 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
hbfTyq6X,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:11 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
FCB3M7XT,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:10 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
VsznPTQZ,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:08 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
7R7jKbEL,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:07 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
NVyCXr59,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:05 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
Nr3z6biE,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 21st of November 2023 11:51:02 AM CDT,"Pasted at: 21/11/2023 17:51
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
