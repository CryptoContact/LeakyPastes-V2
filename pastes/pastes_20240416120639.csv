id,title,username,language,date,content
a1v0xRyM,2.ContactList,Silviya7,JavaScript,Tuesday 16th of April 2024 07:04:54 AM CDT,"function solve() {
    //...TODO

    const AddBtn= document.getElementById('add-btn');
    const ElementName= document.getElementById('name');
    const ElementPhone= document.getElementById('phone');
    const ElementCAtegory= document.getElementById('category');

    const CheckList= document.getElementById('check-list');


    AddBtn.addEventListener(('click'),()=>{

      const Elementp1=document.createElement('p');
      Elementp1.textContent=`name:${ElementName.value}`;

      const Elementp2=document.createElement('p');
      Elementp2.textContent=`phone:${ElementPhone.value}`;
      const Elementp3=document.createElement('p');
      Elementp3.textContent=`category:${ElementCAtegory.value}`;

      const Article= document.createElement('article');
      Article.appendChild(Elementp1);
      Article.appendChild(Elementp2);
      Article.appendChild(Elementp3);

       const ElementLi= document.createElement('li');

      const ContainerButtons= document.createElement('div');
      ContainerButtons.classList.add('buttons');

      const BtnEdit=document.createElement('button');
      BtnEdit.classList.add('edit-btn');
      const BtnSave=document.createElement('button');
      BtnSave.classList.add('save-btn');
      ContainerButtons.appendChild(BtnEdit);
      ContainerButtons.appendChild(BtnSave);

      ElementLi.appendChild(Article);
      ElementLi.appendChild(ContainerButtons);
      CheckList.appendChild(ElementLi);

       ElementName.value='';
       ElementPhone.value='';
       ElementCAtegory.value='';

       //editBtn
       BtnEdit.addEventListener('click',()=>{
        let ListNodes=document.querySelectorAll('article p');
        let AllList= Array.from(ListNodes);

        
       ElementName.value= AllList[0].textContent.substring(5);
       ElementPhone.value=AllList[1].textContent.substring(6);
       ElementCAtegory.value= AllList[2].textContent.substring(9);
       ElementLi.remove();
       });

       //saveBtn
       BtnSave.addEventListener('click',()=>{
       

        const DivContact= document.getElementById('contact-list');
        DivContact.appendChild(ElementLi);

        BtnEdit.remove();
        BtnSave.remove();

        const DeleteBtn= document.createElement('button');
        DeleteBtn.classList.add('del-btn');
        ElementLi.appendChild(DeleteBtn);

        DeleteBtn.addEventListener('click',()=>{

          ElementLi.remove();
        })

       });

    })


  }"
YpuCNhy4,2. félév 10. hét,Levi0227,C#,Tuesday 16th of April 2024 06:54:11 AM CDT,"using System;
using System.Collections.Generic;
using System.IO.Pipes;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            OrderedItemsHandler orderedItemsHandler = new OrderedItemsHandler(3);
            orderedItemsHandler.Sort(OrderedItemsHandler.SortingMethod.Selection);
            Person[] cancerFreeTeam = orderedItemsHandler.Filter(IsCancerFreePerson);

            Console.Read();
        }

        private static bool IsCancerFreePerson(Person person)
        {
            return !person.IsCancer();
        }
    }
}

---------------------------------------------------------------------------------
Osztályak
---------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    internal class Person : IComparable
    {
        private static Random random = new Random();
        private int age;
        private bool isCancer;
        private StateOfCancer stateOfCancer;

        public event Action<Person> CancerStateChanged;
        public event Action<Person> TreatmentOfCancer;

        public enum StateOfCancer
        { 
            None, One, Two, Three, Four
        }
        public Person(int age) 
        { 
            this.age = age;
        }

        public int GetAge() 
        { return this.age; }

        public bool IsCancer()
        { return this.isCancer; }

        public StateOfCancer GetStateOfCancer()
        { return this.stateOfCancer; }

        public void Diagnose()
        { 
            int rng = random.Next(1, 101);
            if (this.isCancer && rng < 45)
            {
                int newState = random.Next(1, 4);
                this.stateOfCancer = (StateOfCancer)newState;
                this.CancerStateChanged?.Invoke(this);

                return;
            }

            if (!this.isCancer && rng <= 90)
            {
                this.isCancer = true;
                int newState = random.Next(1, 4);
                this.stateOfCancer = (StateOfCancer)newState;
                this.CancerStateChanged?.Invoke(this);
            }
        }

        public void GetTreatment()
        {
            int treatmentPower = random.Next(1, 11);
            if (this.isCancer && treatmentPower < 9)
            {
                this.stateOfCancer = StateOfCancer.None;
                this.isCancer = false;
                this.TreatmentOfCancer?.Invoke(this);
            }

            if (this.isCancer && treatmentPower > 9)
            {
                this.Diagnose();
            }
        }

        int IComparable.CompareTo(object obj)
        {
            if (obj is Person)
            { 
                Person otherPerson = obj as Person;
                if (this.age < otherPerson.age) return -1; 
                if (this.age > otherPerson.age) return 1; 
            }

            return 0;
        }
    }
}

---------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    internal class OrderedItemsHandler
    {
        private static Random random = new Random();
        private Person[] people;
        public enum SortingMethod
        { 
            Selection, Bubble, Insertion
        }
        public enum Sorting
        { 
            ASC, DESC
        }

        public OrderedItemsHandler(int n)
        {
            this.people = new Person[n];
            for (int i = 0; i < n; ++i)
            {
                this.people[i] = new Person(random.Next(20,96));
                this.people[i].Diagnose();
            }
        }

        public Person[] Filter(Predicate<Person> p)
        {
            if (p == null)
            {
                return this.people;
            }

            Person[] filtered = new Person[this.people.Length];
            foreach (Person person in this.people)
            {
                if (p.Invoke(person))
                {
                    filtered.Append(person);
                }
            }

            return filtered;
        }

        public void Sort(SortingMethod sortingMethod = SortingMethod.Bubble, Sorting sorting = Sorting.ASC) 
        { 
            switch (sortingMethod) 
            {
                case SortingMethod.Selection: SelectionSort();
                    break;
                case SortingMethod.Bubble:
                    BubbleSort();
                    break;
                case SortingMethod.Insertion:
                    InsertionSort();
                    break;
            }
        }

        private void BubbleSort() 
        {
            int i = this.people.Length;
            while (i >= 1) 
            { 
                int idx = -1;
                for (int j = 0; j < i-1; ++j) 
                {
                    if (this.people[j].CompareTo(this.people[j+1]))
                    {
                        Person helper = this.people[j];
                        this.people[j] = this.people[j + 1];
                        this.people[j + 1] = helper;
                        idx = j;
                    }
                }
                i = idx;
            }
        }

        private void SelectionSort()
        {
            for (int i = 0; i < this.people.Length-1; ++i)
            {
                int min = i;
                for (int j = i + 1; j < this.people.Length; ++j)
                {
                    if (this.people[min].CompareTo(this.people[j]) == -1)
                    {
                        min = j;
                        Person helper = this.people[min];
                        this.people[min] = this.people[i];
                        this.people[i] = helper;
                    }
                }
            }
        }

        private void InsertionSort()
        {
            for (int i = 1; i < people.Length; ++i)
            {
                int j = i - 1;
                while (j > 0 && this.people[j].CompareTo(this.people[j + 1]) == -1)
                {
                    Person helper = this.people[j];
                    this.people[j] = this.people[j+1];
                    this.people[j + 1] = helper;
                    i = j - 1;
                }
            }
        }

        public int BinarySearchByAge(int left, int right, int age)
        {
            if (left > right) return -1;

            int center = (left + right) / 2;

            if (this.people[center].GetAge() == age)
            {
                return center;
            }

            if (this.people[center].GetAge() > age)
            {
                return BinarySearchByAge(left, center - 1, age);
            }

            else
            {
                return BinarySearchByAge(center + 1, right, age);
            }
        }
    }
}
"
2QExBzgU,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Tuesday 16th of April 2024 06:53:28 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
16 April 2024"
PMDQKPNn,Untitled,CarlosDelfino,C++,Tuesday 16th of April 2024 06:50:29 AM CDT,"carlosdelfino@estudio-6b:~$ obs
debug: Found portal inhibitor
debug: Attempted path: share/obs/obs-studio/locale/en-US.ini
debug: Attempted path: /usr/share/obs/obs-studio/locale/en-US.ini
debug: Attempted path: share/obs/obs-studio/locale.ini
debug: Attempted path: /usr/share/obs/obs-studio/locale.ini
debug: Attempted path: share/obs/obs-studio/locale/pt-BR.ini
debug: Attempted path: /usr/share/obs/obs-studio/locale/pt-BR.ini
info: Using preferred locale 'pt-BR'
debug: Attempted path: share/obs/obs-studio/themes
debug: Attempted path: /usr/share/obs/obs-studio/themes
debug: Attempted path: share/obs/obs-studio/themes/Yami.qss
debug: Attempted path: /usr/share/obs/obs-studio/themes/Yami.qss
info: Platform: Wayland
info: CPU Name: Intel(R) Core(TM) i5-2400 CPU @ 3.10GHz
info: CPU Speed: 3272.137MHz
info: Physical Cores: 4, Logical Cores: 4
info: Physical Memory: 7895MB Total, 231MB Free
info: Kernel Version: Linux 6.5.0-27-generic
info: Distribution: ""Ubuntu"" ""22.04""
info: Desktop Environment: ubuntu:GNOME (ubuntu)
info: Session Type: wayland
info: Qt Version: 6.2.4 (runtime), 6.2.4 (compiled)
info: Portable mode: false
info: OBS 30.1.2 (linux)
info: ---------------------------------
info: ---------------------------------
info: audio settings reset:
	samples per sec: 48000
	speakers:        2
	max buffering:   960 milliseconds
	buffering type:  dynamically increasing
info: ---------------------------------
info: Initializing OpenGL...
info: Using EGL/Wayland
info: Initialized EGL 1.5
info: Loading up OpenGL on adapter Mesa NV106
info: OpenGL loaded successfully, version 4.3 (Core Profile) Mesa 23.2.1-1ubuntu3.1~22.04.2, shading language 4.30
info: ---------------------------------
info: video settings reset:
	base resolution:   1920x1080
	output resolution: 1280x720
	downscale filter:  Bicubic
	fps:               60/1
	format:            NV12
	YUV mode:          Rec. 709/Partial
info: NV12 texture support enabled
info: P010 texture support not available
info: Audio monitoring device:
	name: Padrão
	id: default
info: ---------------------------------
warning: No AJA devices found, skipping loading AJA UI plugin
warning: Failed to initialize module 'aja-output-ui.so'
warning: No AJA devices found, skipping loading AJA plugin
warning: Failed to initialize module 'aja.so'
warning: Failed to load 'en-US' text for module: 'decklink-captions.so'
warning: Failed to load 'en-US' text for module: 'decklink-output-ui.so'
libDeckLinkAPI.so: não é possível abrir arquivo compartilhado: Arquivo ou diretório inexistente
warning: A DeckLink iterator could not be created.  The DeckLink drivers may not be installed
warning: Failed to initialize module 'decklink.so'
info: [pipewire] Available captures:
info: [pipewire]     - Desktop capture
info: [pipewire]     - Window capture
info: [obs-browser]: Version 2.23.4
info: [obs-browser]: CEF Version 103.0.5060.134 (runtime), 103.0.0-5060-shared-textures.2594+g17f8588+chromium-103.0.5060.134 (compiled)
info: NVENC supported
info: VAAPI: API version 1.14
info: FFmpeg VAAPI H264 encoding not supported
info: FFmpeg VAAPI AV1 encoding not supported
info: FFmpeg VAAPI HEVC encoding not supported
info: [obs-websocket] [obs_module_load] you can haz websockets (Version: 5.4.2 | RPC Version: 1)
info: [obs-websocket] [obs_module_load] Qt version (compile-time): 6.2.4 | Qt version (run-time): 6.2.4
info: [obs-websocket] [obs_module_load] Linked ASIO Version: 101801
info: [obs-websocket] [obs_module_load] Module loaded.
info: [vlc-video]: VLC 3.0.16 Vetinari found, VLC video source enabled
info: ---------------------------------
info:   Loaded Modules:
info:     vlc-video.so
info:     text-freetype2.so
info:     rtmp-services.so
info:     obs-x264.so
info:     obs-websocket.so
info:     obs-vst.so
info:     obs-transitions.so
info:     obs-qsv11.so
info:     obs-outputs.so
info:     obs-libfdk.so
info:     obs-filters.so
info:     obs-ffmpeg.so
info:     obs-browser.so
info:     linux-v4l2.so
info:     linux-pulseaudio.so
info:     linux-pipewire.so
info:     linux-jack.so
info:     linux-capture.so
info:     linux-alsa.so
info:     image-source.so
info:     frontend-tools.so
info:     decklink-output-ui.so
info:     decklink-captions.so
info: ---------------------------------
warning: QWidget::setTabOrder: 'first' and 'second' must be in the same window
info: ==== Startup complete ===============================================
info: Switched to Preview/Program mode
info: ------------------------------------------------
info: All scene data cleared
info: ------------------------------------------------
info: pulse-input: Server name: 'pulseaudio 15.99.1'
info: pulse-input: Audio format: s16le, 44100 Hz, 2 channels
info: pulse-input: Started recording from 'alsa_output.pci-0000_00_1b.0.analog-stereo.monitor' (default)
info: [Loaded global audio device]: 'Áudio do desktop'
info: pulse-input: Server name: 'pulseaudio 15.99.1'
info: pulse-input: Audio format: s16le, 44100 Hz, 2 channels
info: pulse-input: Started recording from 'alsa_input.pci-0000_00_1b.0.analog-stereo' (default)
info: [Loaded global audio device]: 'Mic/Aux'
info: PipeWire initialized
info: Switched to scene 'Cena 2'
info: User switched Program to scene 'Cena'
info: ------------------------------------------------
info: Loaded scenes:
info: - scene 'Cena':
info:     - source: 'Captura de tela (PipeWire)' (pipewire-desktop-capture-source)
info: - scene 'Cena 2':
info:     - source: 'Fonte de vídeo do VLC' (vlc_source)
info: ------------------------------------------------
warning: Wayland does not support QWindow::requestActivate()
info: [pipewire] Screencast session created
info: [pipewire] Asking for desktop
info: [pipewire] desktop selected, setting up screencast
info: [pipewire] Server version: 0.3.48
info: [pipewire] Library version: 0.3.48
info: [pipewire] Header version: 0.3.48
info: [pipewire] Created stream 0x60412c96ecb0
info: [pipewire] Stream 0x60412c96ecb0 state: ""connecting"" (error: none)
info: [pipewire] Playing stream 0x60412c96ecb0
info: [pipewire] Stream 0x60412c96ecb0 state: ""paused"" (error: none)
info: [pipewire] Negotiated format:
info: [pipewire]     Format: 8 (Spa:Enum:VideoFormat:BGRx)
info: [pipewire]     Modifier: 0xffffffffffffff
info: [pipewire]     Size: 1440x900
info: [pipewire]     Framerate: 0/1
info: [pipewire] Stream 0x60412c96ecb0 state: ""streaming"" (error: none)
info: User switched to scene 'Cena'
info: [pipewire] Stream 0x60412c96ecb0 state: ""paused"" (error: none)
info: [pipewire] Stream 0x60412c96ecb0 state: ""unconnected"" (error: none)
info: PipeWire initialized
info: [pipewire] Screencast session created
info: [pipewire] Asking for desktop
info: [pipewire] desktop selected, setting up screencast
info: [pipewire] Server version: 0.3.48
info: [pipewire] Library version: 0.3.48
info: [pipewire] Header version: 0.3.48
info: [pipewire] Created stream 0x60412ec103a0
info: [pipewire] Stream 0x60412ec103a0 state: ""connecting"" (error: none)
info: [pipewire] Playing stream 0x60412ec103a0
info: [pipewire] Stream 0x60412ec103a0 state: ""paused"" (error: none)
info: [pipewire] Negotiated format:
info: [pipewire]     Format: 8 (Spa:Enum:VideoFormat:BGRx)
info: [pipewire]     Modifier: 0xffffffffffffff
info: [pipewire]     Size: 1440x900
info: [pipewire]     Framerate: 0/1
info: [pipewire] Stream 0x60412ec103a0 state: ""streaming"" (error: none)


"
yijmrBFN,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Tuesday 16th of April 2024 06:44:41 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_618567.pdf

Working as of:
16 April 2024"
Zpy3be3U,Yersinia Tool Install in Kali Linux,pablopc,Bash,Tuesday 16th of April 2024 06:28:29 AM CDT,"#!/bin/bash
# Script to download & compile yersinia tool in Kali Linux

[[ -$UID ne 0 ]] && echo ""Run this script as root"" && exit 0
git clone https://github.com/tomac/yersinia /opt/yersinia
chmod -R u+w /opt/yersinia
cd /opt/yersinia
apt install -y autoconf libgtk-3-dev libnet1-dev libgtk2.0-dev libpcap-dev
./autogen.sh
./configure --with-gtk
make
make install
echo
echo
echo ""Ahora ejecuta el siguiente comando:""
echo ""yersinia -G"""
zWvZZrcc,Untitled,Falexom,Go,Tuesday 16th of April 2024 06:27:08 AM CDT,"package main

import (
	""fmt""
	""math/rand""
	""sync""
	""time""
)

type Semaphore interface {
	Acquire(int)
	Release()
}

type countingSemaphore struct {
	counter  int64
	maxCount int64
	open     bool
}

func NewSemaphore(MaxCount int) *countingSemaphore {
	return &countingSemaphore{
		counter:  0,
		maxCount: int64(MaxCount),
		open:     true,
	}
}

func (c *countingSemaphore) Acquire(val int) {
	fmt.Printf(""Current state: %d\n"", c.counter)
	if c.counter >= c.maxCount {
		c.open = false

		for !c.open {
			var mutex sync.Mutex
			cond := sync.NewCond(&mutex)
			cond.L.Lock()
			cond.Wait()
		}
		fmt.Printf(""%d approved\n"", val)
		c.counter++
		return
	} else {
		fmt.Printf(""%d approved\n"", val)
		c.counter++
		return
	}
}

func (c *countingSemaphore) Release(val int) {
	fmt.Printf(""%d leaved\n"", val)
	if c.counter >= c.maxCount {
		c.open = true
		c.counter--
		return
	} else {
		c.counter--
		return
	}
}

func runTime(value int, cs *countingSemaphore) {
	fmt.Printf(""%d entered loop\n"", value)

	for {
		min := int64(1000000000)
		max := int64(10000000000)
		randomNumber := rand.Int63n(max-min+1) + min
		cs.Acquire(value)
		time.Sleep(time.Duration(randomNumber))
		cs.Release(value)
	}
}

func main() {
	fmt.Println(""Start"")
	sem := NewSemaphore(3)

	for i := 5; i < 10; i++ {
		go runTime(i, sem)
	}
	select {}
}"
Ub1gVNAg,luvs ya guys snowybots completed,coinwalk,JavaScript,Tuesday 16th of April 2024 06:26:59 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var drivein = 1200;
var monkey = Number((olsenest/drivein).toFixed(8)); 
var okka = parseFloat(document.getElementById('pct_balance').value);
var downpipe = (drivein/60);
var uppipe = (drivein/30);
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = ((Math.floor(olsenest/tens))*tens);
var belance = olsenest;
var oxen = olsenest;
var godly = (olsenest*3);
var pigzie = olsenest;
var upper = 6.9;
var downer = 2.9;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(350);
console.clear();
belance = document.getElementById('pct_balance').value;
var dog = ((belance-okka).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (belance<(olsen-(bolux*downer))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (((belance-(bolux*downpipe))<=0)&&(belance<oxen)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*uppipe))<=0)&&(belance>pigzie)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    pigzie = parseFloat(belance);
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (belance>=godly){
olsenest = parseFloat(belance);
monkey = Number((olsenest/drivein).toFixed(8));
downpipe = (drivein/60);
uppipe = (drivein/30);
bolux = monkey;
tens = (monkey*10);
sevens = (monkey*6.9);
eights = (monkey*7.9);
awesome = ((Math.floor(belance/tens))*tens);
olsen = ((Math.floor(belance/tens))*tens);
belance = olsenest;
oxen = olsenest;
pigzie = olsenest;
upper = 6.9;
downer = 2.9;
godly = (olsenest*3);
}
if (belance>=14400){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
FfQSHH2g,data898,TestGuy1,JSON,Tuesday 16th of April 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'd2963c2b641dbbeb4299c520f41bc13b2b36062ec7d04488a5ed236d1bcc533a3009f2b45c06adfea79d5be7fc54599fd504499cbff39e52e13154d469c8c8f9691cbb8332ce4c3d5d28dd1e7d0751ed36374a1dfc88a02752a925ccb86a8e5523b6a11f6a526867da6e1d2ac2429ae11be106e01d3acdad2f8ee916606680a6',
  otherdata: [
    '14acb0cd0d63c9430d6f067f9761a3d7',
    '27bff1f1cffb2225673532c92a3c0cb6',
    '91006a87bdc734aaf7150cac6914c958',
    '4897a0e228653f2b89626f63ec86dbd0',
    'c55a1dad1bb686dcf22c9025e8bd15a5',
    'f949812bb51d8b71f9bb8bb9b71b743d',
    'e658e7632014de9e7a7aacee17148e22',
    '185daacb436fa3097e4d1d9dd3a13552'
  ]
}"
jyyfA7xU,Untitled,35657,C++,Tuesday 16th of April 2024 05:53:59 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>

using namespace std;

class String {

public:

	String() : size_(0), capacity_(15), str_(new char[capacity_]) {
		total_number_string_++;
	}

	explicit String(const int string_capacity) : size_(0), capacity_(string_capacity), str_(new char[capacity_]) {
		total_number_string_++;
	} // здесь ставим explicit во избежание неявного приведения int к string

	String(const char* new_string) : size_(strlen(new_string)), capacity_(size_ + 1), str_(new char[capacity_]) {
		strcpy(str_, new_string);
		total_number_string_++;
	} // здесь explicit лучше не ставить чтобы иметь возможность преобразовать символьный массив к String

	String(const String& other) : size_(other.size_), capacity_(other.capacity_), str_(new char[capacity_]) {
		strcpy(str_, other.str_);
		total_number_string_++;
	}

	String(String&& other) : size_(other.size_), capacity_(other.capacity_), str_(other.str_) {
		other.str_ = nullptr;
		other.size_ = 0;
		other.capacity_ = 0;
		total_number_string_++;
	}

	String& operator=(const String& other) {
		if (&other != this) { // проверка на самоприсваивание
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] str_;
			str_ = new char[capacity_];
			strcpy(str_, other.str_);
		}
		return *this;
	} // переопределение копирующего оператора присваивания для String

	String& operator=(String&& other) {
		if (&other != this) { // проверка на самоприсваивание
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] str_;
			str_ = other.str_;
			other.str_ = nullptr;
			other.size_ = 0;
			other.capacity_ = 0;
		}
		return *this;
	} // переопределение перемещающего оператора присваивания для String

	String& operator=(const char* str) {
        size_ = strlen(str);
        capacity_ = size_ + 1;
        delete[] str_;
        str_ = new char[capacity_];
        strcpy(str_, str);
        return *this;
    } // переопределение копирующего оператора присваивания для строкового литерала

	const char* get_string() const {
		return str_;
	}


	int size() const {
		return size_;
	}

	int capacity() const {
		return capacity_;
	}

	bool operator==(const String& other) const {
		return !strcmp(str_, other.str_);
	} // переопределение оператора ==

	bool operator!=(const String& other) const {
		return strcmp(str_, other.str_);
	} // переопределение оператора !=

	char& operator[](const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return str_[index];
	} // переопределение оператора индексирования

	const char& operator[](const int index) const {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return str_[index];
	} // переопределение оператора индексирования для константных объектов

	static int get_total_number_strings() {
		return total_number_string_;
	}

	~String() {
		delete[] str_;
		total_number_string_--;
	}


private:
	int size_;
	int capacity_;
	char* str_;
	static int total_number_string_;
};

ostream& operator<<(ostream& output, const String& string) {
	output << string.get_string();
	return output;
} // переопределение оператора вывода в поток

istream& operator>>(istream& input, String& string) {
	int capacity = 15;
	int i = 0;
	char* str = new char[capacity];
	char ch;
	while (ch = input.get()) {
		if (ch == ' ' || ch == '\n') {
			break;
		}
		if (i == capacity - 1) {
			char* temp = new char[capacity *= 2];
			for (int j = 0; j < i; j++) {
				temp[j] = str[j];
			}
			delete[] str;
			str = temp;
		}
		str[i] = ch;
		i++;
	}
	str[i] = '\0';
	string = str;
	return input;
} // переопределение оператора чтения из потока



int String::total_number_string_ = 0;

int main() {
	setlocale(LC_ALL, ""ru"");

	String str1;

	String str2(30);

	cout << String::get_total_number_strings() << endl;

	String str3(""Привет"");

	cout << str3 << endl;

	str3 = ""Новая строка"";

	cout << str3 << endl;

	str1 = ""Еще одна новая строка"";

	cout << str1 << endl;

	String str4(str3);

	cout << str3 << endl;

	cout << str4 << endl;

	cout << (str1 == str4) << endl;
	cout << (str3 == str4) << endl;
	cout << (str1 != str4) << endl;
	cout << (str3 != str4) << endl;

	String str5;
	str5 = str1;
	cout << str5 << endl;
	str5 = str5;
	str5[0] = 'Т';
	cout << str5 << endl;

	String str7 = ""Привет"";

	cout << str7[0] << endl;

	cout << str7 << endl;

	String str8;
	str8 = move(str7);
}
"
p6iS61VQ,piston-pusher.lua,Inlife,Lua,Tuesday 16th of April 2024 05:40:32 AM CDT,"function iterate()
	local timer = os.startTimer(5)
    local event = os.pullEvent()

	if event ~= ""redstone"" and event ~= ""timer"" then
		return
	end
	
	if event == ""redstone"" then
		if not redstone.getInput(""bottom"") and not redstone.getInput(""left"") then
			return
		end
	end

	os.cancelTimer(timer)
	print(""[cr] caught event"")
	sleep(0.1)

	print(""[cr] pushing piston"")
	redstone.setOutput(""right"", true)
	sleep(0.1)

	print(""[cr] retracting piston"")
	redstone.setOutput(""right"", false)
	sleep(0.3)
end

function main()
    print(""\n\n-------------------------------"")
    print(""[cr] starting the program; v1.0"")
    print(""-------------------------------\n\n"");

    while true do
        iterate()
    end
end

main()"
fJugD3Vt,snowybot,coinwalk,JavaScript,Tuesday 16th of April 2024 05:28:24 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var drivein = 1200;
var monkey = Number((olsenest/drivein).toFixed(8)); 
var okka = parseFloat(document.getElementById('pct_balance').value);
var downpipe = (drivein/6);
var uppipe = (drivein/3);
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = ((Math.floor(olsenest/tens))*tens);
var belance = olsenest;
var oxen = olsenest;
var godly = (olsenest*1.24);
var pigzie = olsenest;
var upper = 6.9;
var downer = 2.9;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(350);
console.clear();
belance = document.getElementById('pct_balance').value;
var dog = ((belance-okka).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (belance<(olsen-(bolux*downer))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (((belance-(bolux*downpipe))<=0)&&((belance-bolux)<oxen)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*uppipe))<=0)&&(belance>pigzie)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    pigzie = parseFloat(belance);
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (belance>=godly){
olsenest = parseFloat(belance);
monkey = (olsenest/drivein); 
downpipe = (drivein/6);
uppipe = (drivein/3);
bolux = monkey;
tens = (monkey*10);
sevens = (monkey*6.9);
eights = (monkey*7.9);
awesome = ((Math.floor(belance/tens))*tens);
olsen = ((Math.floor(belance/tens))*tens);
belance = olsenest;
oxen = olsenest;
pigzie = olsenest;
upper = 6.9;
downer = 2.9;
godly = (olsenest*1.24);
}
if (belance>=14400){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
u3w6qFCS,git,VladimirLavrenchuk,Bash,Tuesday 16th of April 2024 05:21:06 AM CDT,"git commit --allow-empty -m ""make pull request""

git rebase -i master

git rebase --continue
"
6L839gjc,1SMR_SOM_BASH_23-24 - EJERCICIO EJEMPLO 1,javidocente,Bash,Tuesday 16th of April 2024 05:12:45 AM CDT,"#!/bin/bash

# ===========================================
# Escribe un script en Bash que reciba como parámetro un archivo y muestre información sobre él.
# El script debe cumplir con los siguientes requisitos:
# - Debe mostrar el nombre del script.
# - Debe mostrar los primeros 9 parámetros pasados al script, si están disponibles.
# - Debe mostrar el número total de parámetros pasados al script.
# - Debe mostrar todos los parámetros pasados al script utilizando ""$*"" y ""$@"".
# - Debe mostrar el PID de la shell.
# - Debe simular un comando (por ejemplo, ""ls"") utilizando el archivo pasado como primer parámetro y mostrar el estado de salida del último comando o script ejecutado.
# ===========================================

# Este script recibe como parámetro un archivo y muestra información sobre él.
# Verificamos que se haya proporcionado al menos un parámetro al script.
if [ $# -eq 0 ]; then
    echo ""Error: Se requiere al menos un parámetro.""
    echo ""Uso: $0 archivo""
    exit 1
fi
# Mostramos el nombre del script.
echo ""Nombre del script: $0""
# Mostramos los primeros 9 parámetros pasados al script, si están disponibles.
echo ""Primeros 9 parámetros:""
for i in {1..9}; do
    echo ""\$$i: ${i}""
done
# Mostramos el número total de parámetros pasados al script.
echo ""Número total de parámetros: $#""
# Mostramos todos los parámetros pasados al script utilizando ""$*"".
echo ""Parámetros pasados al script (utilizando \$*): $*""
# Mostramos todos los parámetros pasados al script utilizando ""$@"".
echo ""Parámetros pasados al script (utilizando \$@): $@""
# Mostramos el PID de la shell.
echo ""PID de la shell: $$""
# Simulamos un comando y mostramos el estado de salida.
ls ""$1""  # Por ejemplo, supongamos que queremos mostrar información sobre el archivo pasado como primer parámetro.
echo ""Estado de salida del último comando o script ejecutado: $?""
"
fhRm7Aah,Untitled,35657,C++,Tuesday 16th of April 2024 05:09:42 AM CDT,"#include <iostream>

using namespace std;

template <typename T>
class Vector {

public:
	Vector() : size_(0), capacity_(4), arr_(new T[4]) {}

	explicit Vector(const int vector_capacity) : size_(0), capacity_(vector_capacity), arr_(new T[vector_capacity]) {}

	Vector(const Vector& other) : size_(other.size_), capacity_(other.capacity_), arr_(new T[capacity_]) {
		for (int i = 0; i < size_; i++) {
			arr_[i] = other.arr_[i];
		}
		total_number_elements_ += size_;
	} // конструктор копирования

	Vector(const initializer_list<T>& list) : size_(list.size()), capacity_(list.size()), arr_(new T[list.size()]) {
		int i = 0;
		for (const T& element : list) {
			arr_[i] = element;
			i++;
		}
	}

	Vector& operator=(const Vector& other) {
		if (&other != this) { // проверка на самоприсваивание
			total_number_elements_ += other.size_ - size_; // общее количество увеличивается (уменьшается) на разность элементов
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] arr_;
			arr_ = new T[capacity_];
			for (int i = 0; i < size_; i++) {
				arr_[i] = other.arr_[i];
			}
		}
		return *this;
	} // копирующий оператор присваивания =

	Vector(Vector&& other) : size_(other.size_), capacity_(other.capacity_), arr_(other.arr_) {
		other.arr_ = nullptr;
		other.size_ = 0;
		other.capacity_ = 0;
	} // конструктор перемещения

	Vector& operator=(Vector&& other) {
		if (&other != this) {
			total_number_elements_ += other.size_ - size_; // общее количество увеличивается (уменьшается) на разность элементов
			size_ = other.size_;
			capacity_ = other.capacity_;
			delete[] arr_;
			arr_ = other.arr_;
			other.arr_ = nullptr;
			other.size_ = 0;
			other.capacity_ = 0;
		}
		return *this;
	} // перемещающий оператор присваивания =

	void push_back(const T& value) {
		check_capacity();
		arr_[size_] = value;
		size_++;
		total_number_elements_++;
	}

	void pop_back() {
		if (size_ > 0) {
			size_--;
		}
		total_number_elements_--;
	}

	void insert(const int index, const T& value) {
		if (index < 0 || index > size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		check_capacity();
		for (int i = size_; i > index; i--) {
			arr_[i] = arr_[i - 1];
		}
		arr_[index] = value;
		size_++;
		total_number_elements_++;
	}

	void erase(const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
			return;
		}
		for (int i = index; i < size_ - 1; i++) {
			arr_[i] = arr_[i + 1];
		}
		size_--;
		total_number_elements_--;
	}

	T& operator[](const int index) {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return arr_[index];
	}

	const T& operator[](const int index) const {
		if (index < 0 || index >= size_) {
			cout << ""Некорректный индекс"" << endl;
		}
		return arr_[index];
	}

	int size() const {
		return size_;
	}

	int capacity() const {
		return capacity_;
	}

	bool operator==(const Vector& right) const {
		if (right.size_ != size_) {
			return false;
		}
		for (int i = 0; i < size_; i++) {
			if (arr_[i] != right.arr_[i])
				return false;
		}
		return true;
	}

	bool operator!=(const Vector& right) const {
		return !(*this == right);
	}

	void print() const {
		for (int i = 0; i < size_; i++) {
			cout << arr_[i] << "" "";
		}
		cout << endl;
	}

	static int get_total_number_elements() {
		return total_number_elements_;
	}


	~Vector() {
		delete[] arr_;
		total_number_elements_ -= size_;
	}

private:

	void check_capacity() {
		if (size_ == capacity_) {
			int* temp = new int[capacity_ * 2];
			for (int i = 0; i < size_; i++) {
				temp[i] = arr_[i];
			}
			delete[] arr_;
			arr_ = temp;
			capacity_ *= 2;
		}
	}

	int size_; // текущее количество элементов
	int capacity_; // емкость хранилища
	T* arr_; // хранилище
	static int total_number_elements_; // общее количество элементов по всем векторам
};

template <typename T>
int Vector<T>::total_number_elements_ = 0;

template <typename T>
class List {
public:

    List() : size_(0), head_(nullptr), last_(nullptr) {}

    List(const List& other) : size_(0), head_(nullptr), last_(nullptr) {
        Node* temp = other.last_;
        while (temp != nullptr) {
            push_front(temp->value);
            temp = temp->prev;
        }
    }

    List(List&& other) : size_(other.size_), head_(other.head_), last_(other.last_) {
        other.head_ = other.last_ = nullptr;
    }

    List& operator=(const List& other) {
        if (this != &other) {
            clear();
            Node* temp = other.last_;
            while (temp != nullptr) {
                push_front(temp->value);
                temp = temp->prev;
            }
        }
        return *this;
    }

    List& operator=(List&& other) {
        if (this != &other) {
            clear();
            size_ = other.size_;
            head_ = other.head_;
            last_ = other.last_;
            other.head_ = other.last_ = nullptr;
        }
        return *this;
    }

    void push_front(const T& value) {
        if (size_ == 0) {
            last_ = head_ = new Node{ value, nullptr, nullptr };
            size_++;
            return;
        }
        Node* temp = new Node{ value, head_, nullptr };
        head_->prev = temp;
        head_ = temp;
        size_++;
    }

    void push_back(const T& value) {
        if (size_ == 0) {
            last_ = head_ = new Node{ value, nullptr, nullptr };
            size_++;
            return;
        }
        Node* temp = new Node{ value, nullptr, last_ };
        last_->next = temp;
        last_ = temp;
        size_++;
    }

    void pop_front() {
        if (size_ > 0) {
            if (size_ == 1) {
                delete head_;
                last_ = head_ = nullptr;
                size_--;
                return;
            }
            Node* temp = head_;
            head_ = head_->next;
            delete temp;
            head_->prev = nullptr;
            size_--;
        }
    }

    void pop_back() {
        if (size_ > 0) {
            if (size_ == 1) {
                delete head_;
                last_ = head_ = nullptr;
                size_--;
                return;
            }
            Node* temp = last_;
            last_ = last_->prev;
            delete temp;
            last_->next = nullptr;
            size_--;
        }
    }

    void insert(const int index, const T& value) {
        if (index == 0) {
            push_front(value);
            return;
        }
        if (index == size_) {
            push_back(value);
            return;
        }
        if (index > 0 && index < size_) {
            Node* temp = head_;
            for (int i = 0; i < index - 1; i++) {
                temp = temp->next;
            }
            Node* buf = new Node{ value, temp->next, temp };
            temp->next->prev = buf;
            temp->next = buf;
            size_++;
        }
    }

    void erase(const int index) {
        if (index == 0) {
            pop_front();
            return;
        }
        if (index == size_ - 1) {
            pop_back();
            return;
        }
        if (index > 0 && index < size_ - 1) {
            Node* temp = head_;
            for (int i = 0; i < index - 1; i++) {
                temp = temp->next;
            }
            Node* buf = temp->next->next;
            delete temp->next;
            temp->next = buf;
            buf->prev = temp;
            size_--;
        }
    }

    T& operator[] (const int index) {
        if (index >= 0 && index < size_) {
            Node* temp = head_;
            for (int i = 0; i < index; i++) {
                temp = temp->next;
            }
            return temp->value;
        }
    }

    const T& operator[] (const int index) const {
        if (index >= 0 && index < size_) {
            Node* temp = head_;
            for (int i = 0; i < index; i++) {
                temp = temp->next;
            }
            return temp->value;
        }
    }

    bool operator==(const List& other) const {
        if (size_ != other.size_) {
            return false;
        }
        Node* temp = head_;
        Node* other_temp = other.head_;

        while (temp != nullptr) {
            if (temp->value != other_temp->value) {
                return false;
            }
            temp = temp->next;
            other_temp = other_temp->next;
        }
        return true;
    }

    bool operator!=(const List& other) const {
        return !(*this == other);
    }

    int find(const T& value) const {
        int index = 0;
        Node* temp = head_;

        while (temp != nullptr && temp->value != value) {
            temp = temp->next;
            index++;
        }
        if (temp != nullptr) {
            return index;
        }
        return -1;
    }

    T& front() {
        if (head_ != nullptr) {
            return head_->value;
        }
    }

    const T& front() const {
        if (head_ != nullptr) {
            return head_->value;
        }
    }

    T& back() {
        if (last_ != nullptr) {
            return last_->value;
        }
    }

    const T& back() const {
        if (last_ != nullptr) {
            return last_->value;
        }
    }

    void print() {
        Node* temp = head_;
        while (temp != nullptr) {
            cout << temp->value << "" "";
            temp = temp->next;
        }
        cout << endl;
    }

    int size() const {
        return size_;
    }

    void clear() {
        while (head_ != nullptr) {
            pop_front();
        }
    }

    ~List() {
        clear();
    }

private:
    struct Node { // двусвязный список состоит из узлов
        T value; // узел хранит информативную часть
        Node* next; // указатель на следующий узел в списке
        Node* prev; // указатель на предыдущий узел
    };

    int size_;
    Node* head_;
    Node* last_;
};

template<typename T>
class Set {

public:

    struct Node {
        T value;
        Node* left;
        Node* right;
        Node* parent;
    };

    Set() : root_(nullptr), size_(0) {}

    Set(const initializer_list<T>& list) : root_(nullptr), size_(0) {
        for (const T& element : list) {
            insert(element);
        }
    }

    Set(const Set& other) : root_(copy(other.root_, nullptr)), size_(other.size_) {}

    Set(Set&& other) : root_(other.root_), size_(other.size_) {
        other.root_ = nullptr;
    }

    Set& operator=(const Set& other) {
        if (this != &other) {
            clear();
            size_ = other.size_;
            root_ = copy(other.root_, nullptr);
        }
        return *this;
    }

    Set& operator=(Set&& other) {
        if (this != &other) {
            clear();
            size_ = other.size_;
            root_ = other.root_;
            other.root_ = nullptr;
        }
        return *this;
    }

    void insert(const T& val) {
        if (root_ == nullptr) {
            root_ = new Node{ val, nullptr, nullptr, nullptr };
            size_++;
            return;
        }
        Node* parent = nullptr;
        Node* node = root_;
        while (node != nullptr && node->value != val) {
            parent = node;
            node = node->value > val ? node->left : node->right;
        }
        if (node == nullptr) {
            node = new Node{ val, nullptr, nullptr, parent };
            parent->value > val ? parent->left = node : parent->right = node;
            size_++;
        }
    }

    void erase(const T& val) {
        Node* parent = nullptr;
        Node* node = root_;
        while (node != nullptr && node->value != val) {
            parent = node;
            node = node->value > val ? node->left : node->right;
        }
        if (node != nullptr) {
            if (node->left == nullptr && node->right == nullptr) {
                if (node == root_) {
                    root_ = nullptr;
                }
                else {
                    node == parent->right ? parent->right = nullptr : parent->left = nullptr;
                }
                delete node;
            }
            else if (node->left == nullptr) {
                node->right->parent = node->parent;
                if (node == root_) {
                    root_ = node->right;
                }
                else {
                    node == parent->right ? parent->right = node->right : parent->left = node->right;
                }
                delete node;
            }
            else if (node->right == nullptr) {
                node->left->parent = node->parent;
                if (node == root_) {
                    root_ = node->left;
                }
                else {
                    node == parent->right ? parent->right = node->left : parent->left = node->left;
                }
                delete node;
            }
            else {
                Node* temp = min(node->right);
                node->value = temp->value;
                if (temp->right != nullptr) {
                    temp->right->parent = temp->parent;
                }
                temp == temp->parent->right ? temp->parent->right = temp->right : temp->parent->left = temp->right;
                delete temp;
            }
            size_--;
        }
    }

    Node* min(Node* node) {
        if (node != nullptr) {
            while (node->left != nullptr) {
                node = node->left;
            }
        }
        return node;
    }

    Node* max(Node* node) {
        if (node != nullptr) {
            while (node->right != nullptr) {
                node = node->right;
            }
        }
        return node;
    }

    void print() {
        print(root_);
        cout << endl;
    }

    int size() const {
        return size_;
    }

    void clear() {
        clear(root_);
        root_ = nullptr;
        size_ = 0;
    }

    Node* find(const T& val) {
        Node* node = root_;
        while (node != nullptr && node->value != val) {
            node = node->value > val ? node->left : node->right;
        }
        return node;
    }

    Node* begin() {
        return min(root_);
    }

    Node* end() {
        return max(root_);
    }

    bool operator==(const Set& other) {
        return size_ == other.size_ ? compare(min(root_), min(other.root_)) : false;
    }

    bool operator!=(const Set& other) {
        return !(*this == other);
    }

    ~Set() {
        clear(root_);
    }

private:

    // вариант сравнения деревьев на случай разной топологии но одинакового размера 
    bool compare(Node* a, Node* b) {
        if (a == nullptr && b == nullptr) {
            return true;
        }
        return  a->value == b->value && compare(next(a), next(b));
    }

    Node* next(Node* node) {
        if (node != nullptr) {
            if (node->right != nullptr) {
                return min(node->right);
            }
            Node* temp = node->parent;
            while (temp != nullptr && node->value > temp->value) {
                temp = temp->parent;
            }
            return temp;
        }
        return node;
    }

    Node* prev(Node* node) {
        if (node != nullptr) {
            if (node->left != nullptr) {
                return max(node->left);
            }
            Node* temp = node->parent;
            while (temp != nullptr && node->value < temp->value) {
                temp = temp->parent;
            }
            return temp;
        }
        return node;
    }

    Node* copy(Node* node, Node* parent) {
        if (node == nullptr) {
            return nullptr;
        }
        Node* temp = new Node{ node->value, nullptr, nullptr, parent };
        temp->left = copy(node->left, temp);
        temp->right = copy(node->right, temp);
        return temp;
    }

    void clear(Node* node) {
        if (node != nullptr) {
            clear(node->left);
            clear(node->right);
            delete node;
        }
    }

    void print(Node* node) {
        if (node != nullptr) {
            print(node->left);
            cout << node->value << "" "";
            // раскомментировать для проверки построения дерева
           /* cout << "" value "" << node->value << "" "";
            if (node->parent) {
                cout << "" parent "" << node->parent->value;
            }
            else {
                cout << '\t';
            }
            if (node->left) {
                cout << "" left "" << node->left->value;
            }
            else {
                cout << '\t';
            }
            if (node->right) {
                cout << "" right "" << node->right->value;
            }
            else {
                cout << '\t';
            }
            cout << "" "" << node << endl;*/
            print(node->right);
        }
    }

    Node* root_;
    int size_;
};

int main() {
	setlocale(LC_ALL, ""ru"");

    // проверить функционал каждого класса
	
}
"
SbjW0t5Q,CF 939 D. Nene and the Mex Operator,coder0687,Java,Tuesday 16th of April 2024 05:08:52 AM CDT,"import java.io.*;
import java.util.*;
import static java.lang.System.*;
import static java.lang.Math.*;
// reference taken from editorial and solution from : https://www.youtube.com/watch?v=lrX0a-kjIk8
public class D {
	List<int[]> op;
    void run() {
        int tc=ni();
        while(tc-->0) {
            int n=ni(), a[]=ni(n);
            op = new ArrayList<>();
            func(a);
            int s = 0;
            for(int v: a) s += v;
            ap(s(s), "" "", s(op.size()), ""\n"");
            for(int indx[]: op) { 
            	for(int i: indx) ap(s(i+1), "" "");
            	ap(""\n"");
            }
            ap(""\n"");
        }
        out.println(sb);
        out.flush();
        out.close();
    }
    // in this we will create a sequence of 0, 1, 2, . . .
    void func2(int a[], int l, int r) {
    	if(l == r) {
    		if(a[l] != 0) {
    			op.add(new int[]{l, l});
    			a[l] = 0;
    		}
    		return;
    	}
    	// set all the elements to zero; we have to check individually each of them
    	// bcz it might happen that already it contains 0
    	func2(a, l+1, r);
    	// check if its having a sequence of [r-l, r-l-1, . . . 1, 0] b/w {l, r}, 
    	if(a[l] != r-l) {
	    	// if not then we have to set r-l to all bcz we have already [r-l-1, . . 1, 0] b/w {l+1, r}
    		op.add(new int[]{l, r});
    		for(int i = l; i <= r; i++) {
    			a[i] = r - l;
    		}
    		// and here we call again {l+1, r} to create a sequence of [r-l-1, . . . 1, 0] b/w {l+1, r}
    		func2(a, l + 1, r);
    	}
    }
    void func(int a[]) {
    	int n = a.length;
    	int bstMask=0, bstSum=0;
    	for(int i = 0; i < (1<<n); i++) {
    		int tmp = 0;
    		for(int l=0;l<n;l++) {
    			// if 0 at ith bit means we have to replace all with length
    			if((i&(1<<l)) == 0) {
    				int r = l;
    				while(r+1<n && (i&(1<<(r+1)))==0) ++r;
    				tmp += (r-l+1) * (r-l+1);
    				l=r;
    			}
    			else {
    				tmp += a[l];
    			}
    		}
    		if(bstSum < tmp) {
    			bstSum = tmp;
    			bstMask = i;
    		}
    	}
    	
    	// debug(Integer.toBinaryString(bstMask), "" "", s(bstSum));

    	// now here we will generate all the operation needed to get bstSum from bstMask
    	for(int l=0;l<n;l++) {
    		if((bstMask&(1<<l)) == 0) {
    			int r=l;
    			while(r+1<n && (bstMask&(1<<(r+1)))==0) ++r;
    			// to generate operation from {l, r}
    			func2(a, l, r);
    			op.add(new int[]{l, r});

    			for(int i=l;i<=r;i++) {
    				a[i] = r-l+1;
    			}
    			l=r;
    		}
    	}
    }
    void funcX(int a[], int l, int r) {
    	if(l > r) return;
    	int s = 0;
    	for(int i=l;i<=r;i++) s += a[i];
    	// if sum of all elements b/w {l, r} is less than square of length 
    	// then try to create a sequence of 0, 1, 2, . . . to get max value
    	if(s < (r - l + 1) * (r - l + 1)) {
    		func2(a, l, r);
    		// now after func2 it becomes like [r-l, r-l-1, . . . 1, 0] 
    		op.add(new int[]{l, r});
    		// so after applying operation {l, r} all a[i] becomes (r - l + 1);
    		for(int i=l;i<=r;i++) {
    			a[i] = r - l + 1;
    		}
    	}
    	// else here we will split based on the max position of element in array and do same thing recursively
    	else {
    		int mx = -1, pos = -1;
    		for(int i=l;i<=r;i++) {
    			if(mx < a[i]) {
    				mx = a[i];
    				pos = i;
    			}
    		}
    		funcX(a, l, pos-1);
    		funcX(a, pos+1, r);
    	}
    }
    public static void main(String[] args)throws Exception {
        try { 
            new Thread(null, new D()::run, ""1"", 1 << 26).start();
            // new Thread(null, new D(""ONLINE_JUDGE"")::run, ""1"", 1 << 26).start();
        } catch(Exception e) {}
    }

    FastReader sc=null;PrintWriter out = null;
    public D()throws Exception {
        sc = new FastReader(new FileInputStream(""../input.txt""));
        out = new PrintWriter(new BufferedWriter(new FileWriter(""../output.txt"")));
    }
    public D(String JUDGE) {
        sc = new FastReader(System.in);
        out = new PrintWriter(System.out);      
    }

    long ceil(long a, long b) {
        return (a + b - 1) / b;
    }

    StringBuilder sb = new StringBuilder();
    final int IMAX = Integer.MAX_VALUE;
    final int IMIN = Integer.MIN_VALUE;
    final long LMAX = Long.MAX_VALUE;
    final long LMIN = Long.MIN_VALUE;
    final int MOD = (int)1e9+7;

    void ap(String... str) {
        for(String s: str) sb.append(s);
    }
    void ap(Integer... arr) {
        for(Integer a: arr) sb.append(a);
    }
    void ap(Long... arr) {
        for(Long a: arr) sb.append(a);
    }
    void debug(String... str) {
        for(String s: str) System.out.print(s+"" - "");
        System.out.println();
    }
    void debug(Integer... a) {
        for(Integer v: a) System.out.print(v+"" - "");
        System.out.println();
    }
    void debug(Long... a) {
        for(long v: a) System.out.print(v+"" - "");
        System.out.println();
    }
    void debug(int a[], Integer... b) {
        System.out.println(Arrays.toString(a));
        debug(b);
    }
    void debug(int a[][], Integer... b) {
        System.out.println(Arrays.deepToString(a));
        debug(b);
    }
    void debug(long a[], Long... b) {
        System.out.println(Arrays.toString(a));
        debug(b);
    }
    void debug(long a[][], Long... b) {
        System.out.println(Arrays.deepToString(a));
        debug(b);
    }
    String s(Long n) {
        return String.valueOf(n);
    }
    String s(Integer n) {
        return String.valueOf(n);
    }

    String ns() { return sc.next(); }
    int ni() { return sc.nextInt(); }
    long nl() { return sc.nextLong(); }
    char[] nc() {
        return ns().toCharArray();
    }
    char[][] nc(int n) {
        char c[][] = new char[n][];
        for(int i=0;i<n;i++) {
            c[i] = ns().toCharArray();
        }
        return c;
    }
    int[][] _ni(int n) {
        int a[][] = new int[n][];
        for(int i=0;i<n;a[i]=new int[]{i, ni()});
        return a;
    }
    int[] ni(int n) {
        int a[]=new int[n];
        for(int i=0;i<n;a[i++]=ni());
        return a;
    }
    long[] nl(int n) {
        long a[]=new long[n];
        for(int i=0;i<n;a[i++]=nl());
        return a;
    }
    
    int[][] ni(int n,int m) {
        int a[][]=new int[n][m];
        for(int i=0;i<n;i++) 
            for(int j=0;j<m;j++)
                a[i][j]=ni();
        return a;
    }
    long[][] nl(int n,int m) {
        long a[][]=new long[n][m];
        for(int i=0;i<n;i++) 
            for(int j=0;j<m;j++)
                a[i][j]=nl();
        return a;
    }
    int gcd(int a, int b) {
        return b==0?a:gcd(b,a%b);
    }
    static class FastReader {
        private InputStream stream;
        private byte[] buf = new byte[1024];
        private int curChar;
        private int numChars;
        private FastReader.SpaceCharFilter filter;
        public FastReader(InputStream stream) {
            this.stream = stream;
        }

        public int read() {
            if (numChars == -1) throw new InputMismatchException();
            if (curChar >= numChars) {
                curChar = 0;
                try {
                    numChars = stream.read(buf);
                } catch (IOException e) {
                    throw new InputMismatchException();
                }
                if (numChars <= 0) return -1;
            }
            return buf[curChar++];
        }

        public int nextInt() {
            int c = read();
            while (isSpaceChar(c)) c = read();
            int sgn = 1;
            if (c == '-') {
                sgn = -1;
                c = read();
            }
            int res = 0;
            do {
                if (c < '0' || c > '9') throw new InputMismatchException();
                res *= 10;
                res += c - '0';
                c = read();
            }
            while (!isSpaceChar(c));
            return res * sgn;
        }
        
        public long nextLong() {
            int c = read();
            while (isSpaceChar(c)) c = read();
            int sgn = 1;
            if (c == '-') {
                sgn = -1;
                c = read();
            }
            long res = 0;
            do {
                if (c < '0' || c > '9') throw new InputMismatchException();
                res = res*1L*10;
                res += c - '0';
                c = read();
            }
            while (!isSpaceChar(c));
            return res *1L* sgn;
        }
        
        public String next() {
            int c = read();
            while (isSpaceChar(c)) c = read();
            StringBuilder res = new StringBuilder();
            do {
                res.appendCodePoint(c);
                c = read();
            } while (!isSpaceChar(c));
            return res.toString();
        }

        public boolean isSpaceChar(int c) {
            if (filter != null) return filter.isSpaceChar(c);
            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
        }

        public interface SpaceCharFilter {
            public boolean isSpaceChar(int ch);

        }
    }
}"
TNkEuykr,perfect number,4doorsmorehories,C,Tuesday 16th of April 2024 04:57:10 AM CDT,"#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    

    int n,m;
    scanf(""%d"",&n);
    for(int i=2; i<n/2; i++){
        m= pow(2,(i-1))*(pow(2,i)-1);
        printf(""%d"",m);
        if(m==n){
            printf(""Perfect Number"");
            return 0;
        }
    }
    printf(""Not a Perfect Number"");
    
}





#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    
    

    int n,m;
    scanf(""%d"",&n);
    for(int i=2; i<n/2; i++){
        m= pow(2,(i-1))*(pow(2,i)-1);
        if(m==n){
            printf(""Perfect Number"");
            return 0;
        }
    }
    printf(""Not a Perfect Number"");
    
}




#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {

    int n;
    scanf(""%d"", &n);
    for(int i=2; i<n/2; i++){
        if(n%i == 0){
            printf(""Not a Prime Number"");
            return 0;
        }
    }
    n!=1 ? printf(""Prime Number"") : printf(""Not a Prime Number"");;
}



#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {

    int n,i;
    scanf(""%d%d"", &n,&i);
    if(n%i==0){
        printf(""Smooth Number"");
        return 0;
    }
    printf(""Not a Smooth Number"");
    
}"
Tc4iMcTR,Untitled,YuraSidorets,C#,Tuesday 16th of April 2024 04:42:37 AM CDT,"public class SlowRequestController : Controller
{
    private readonly IRepository _repository;

    public SlowRequestController(IRepository repository)
    {
        _repository = repository;
    }

    [HttpGet(""/slowtest"")]
    public async Task<IActionResult> Get(CancellationToken cancellationToken)
    {
        await _repository.LongRunningTask(cancellationToken);

        return Ok();
    }
}

public class Repository : IRepository 
{  
    public async Task LongRunningTask(CancellationToken cancellationToken)
    {
    
    	// token.ThrowIfCancellationRequested(); or below
        if (token.IsCancellationRequested) // true if RequestAborted by any reason
        {
            Console.WriteLine(""Task cancelled"");
            return;
        }

        // slow cancellable work
        await Task.Delay(10_000, cancellationToken);
    }
}"
xJfwA1JV,eshell backtrace,Wurfkreuz,Lisp,Tuesday 16th of April 2024 04:36:49 AM CDT,"Debugger entered--Lisp error: (permission-denied ""Removing old name Permission denied /etc/testfile1"")
  tramp-signal-hook-function(permission-denied (""Removing old name"" ""Permission denied"" ""/etc/testfile1""))
  signal(permission-denied (""Removing old name"" ""Permission denied"" ""/etc/testfile1""))
  tramp-do-copy-or-rename-file(rename #(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) ""/home/wurfkreuz/.local/share/trash/testfile1.~1~"" nil keep-time preserve-uid-gid)
  tramp-sh-handle-rename-file(#(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) ""/home/wurfkreuz/.local/share/trash/testfile1.~1~"" nil)
  tramp-sh-file-name-handler(rename-file #(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) ""/home/wurfkreuz/.local/share/trash/testfile1.~1~"" nil)
  apply(tramp-sh-file-name-handler rename-file (#(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) ""/home/wurfkreuz/.local/share/trash/testfile1.~1~"" nil))
  tramp-file-name-handler(rename-file #(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) ""/home/wurfkreuz/.local/share/trash/testfile1.~1~"" nil)
  rename-file(#(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) ""/home/wurfkreuz/.local/share/trash/testfile1.~1~"")
  move-file-to-trash(#(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)))
  tramp-sh-handle-delete-file(#(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) t)
  tramp-sh-file-name-handler(delete-file #(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) t)
  apply(tramp-sh-file-name-handler delete-file (#(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) t))
  tramp-file-name-handler(delete-file #(""/sudo:root@archlinux:/etc/testfile1"" 6 10 (tramp-default t) 11 20 (tramp-default t)) t)
  #f(compiled-function (filename &optional trash) ""Delete file named FILENAME.  If it is a symlink, remove the symlink.\nIf file has multiple names, it continues to exist with the other names.\nTRASH non-nil means to trash the file instead of deleting, provided\n`delete-by-moving-to-trash' is non-nil.\n\nWhen called interactively, TRASH is t if no prefix argument is given.\nWith a prefix argument, TRASH is nil."" (interactive #f(compiled-function () #<bytecode 0x1bcf55e29dba65c4>)) #<bytecode 0x1a698f0b2d60>)(""/sudo::/etc/testfile1"" t)
  apply(#f(compiled-function (filename &optional trash) ""Delete file named FILENAME.  If it is a symlink, remove the symlink.\nIf file has multiple names, it continues to exist with the other names.\nTRASH non-nil means to trash the file instead of deleting, provided\n`delete-by-moving-to-trash' is non-nil.\n\nWhen called interactively, TRASH is t if no prefix argument is given.\nWith a prefix argument, TRASH is nil."" (interactive #f(compiled-function () #<bytecode 0x1bcf55e29dba65c4>)) #<bytecode 0x1a698f0b2d60>) (""/sudo::/etc/testfile1"" t))
  delete-file(""/sudo::/etc/testfile1"" t)
  apply(delete-file (""/sudo::/etc/testfile1"" t))
  eshell-exec-lisp(eshell-printn eshell-errorn delete-file (""/sudo::/etc/testfile1"" t) nil)
  eshell-remove-entries((""/sudo::/etc/testfile1"") t)
  eshell/rm(""/sudo::/etc/testfile1"")
  apply(eshell/rm ""/sudo::/etc/testfile1"")
  eshell-exec-lisp(eshell-print eshell-error eshell/rm (""/sudo::/etc/testfile1"") nil)
  eshell-lisp-command(eshell/rm (""/sudo::/etc/testfile1""))
  eshell-plain-command(""rm"" (""/sudo::/etc/testfile1""))
  eshell-named-command(""rm"" (""/sudo::/etc/testfile1""))
  (unwind-protect (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1"")) (mapc #'funcall eshell-this-command-hook))
  (let ((eshell-this-command-hook '(ignore))) (unwind-protect (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1"")) (mapc #'funcall eshell-this-command-hook)))
  (condition-case err (let ((eshell-this-command-hook '(ignore))) (unwind-protect (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1"")) (mapc #'funcall eshell-this-command-hook))) ((debug error) (eshell-errorn (error-message-string err)) (eshell-close-handles 1)))
  (condition-case-unless-debug err (let ((eshell-this-command-hook '(ignore))) (unwind-protect (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1"")) (mapc #'funcall eshell-this-command-hook))) (error (eshell-errorn (error-message-string err)) (eshell-close-handles 1)))
  (if eshell-handle-errors (condition-case-unless-debug err (let ((eshell-this-command-hook '(ignore))) (unwind-protect (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1"")) (mapc #'funcall eshell-this-command-hook))) (error (eshell-errorn (error-message-string err)) (eshell-close-handles 1))) (let ((eshell-this-command-hook '(ignore))) (unwind-protect (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1"")) (mapc #'funcall eshell-this-command-hook))))
  (eshell-condition-case err (let ((eshell-this-command-hook '(ignore))) (unwind-protect (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1"")) (mapc #'funcall eshell-this-command-hook))) (error (eshell-errorn (error-message-string err)) (eshell-close-handles 1)))
  (eshell-trap-errors (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1"")))
  (let ((eshell-current-handles (eshell-duplicate-handles eshell-current-handles t))) (eshell-trap-errors (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1""))))
  (eshell-with-copied-handles (eshell-trap-errors (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1""))) t)
  (progn (eshell-with-copied-handles (eshell-trap-errors (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1""))) t))
  (unwind-protect (progn (eshell-with-copied-handles (eshell-trap-errors (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1""))) t)) (run-hooks 'eshell-post-command-hook))
  (progn (run-hooks 'eshell-pre-command-hook) (unwind-protect (progn (eshell-with-copied-handles (eshell-trap-errors (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1""))) t)) (run-hooks 'eshell-post-command-hook)))
  (let ((eshell-current-handles (eshell-create-handles t 'append)) eshell-current-subjob-p) (progn (run-hooks 'eshell-pre-command-hook) (unwind-protect (progn (eshell-with-copied-handles (eshell-trap-errors (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1""))) t)) (run-hooks 'eshell-post-command-hook))))
  (eshell-commands (progn (run-hooks 'eshell-pre-command-hook) (unwind-protect (progn (eshell-with-copied-handles (eshell-trap-errors (eshell-named-command ""rm"" (list ""/sudo::/etc/testfile1""))) t)) (run-hooks 'eshell-post-command-hook))))
  eval((eshell-commands (progn (run-hooks 'eshell-pre-command-hook) (unwind-protect (progn (eshell-with-copied-handles (eshell-trap-errors (eshell-named-command ""rm"" ...)) t)) (run-hooks 'eshell-post-command-hook)))))
  eshell-send-input(nil)
  funcall-interactively(eshell-send-input nil)
  command-execute(eshell-send-input)
"
CcXxagcP,luvs ya guys snowybots completed,coinwalk,JavaScript,Tuesday 16th of April 2024 04:10:44 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var okka = parseFloat(document.getElementById('pct_balance').value);
var drivein = 1200; //divide;
var monkey = (olsenest/drivein); 
var downpipe = (drivein/6);
var uppipe = (drivein/3);
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = ((Math.floor(olsenest/tens))*tens);
var belance = olsenest;
var oxen = olsenest;
var godly = (olsenest*1.24);
var pigzie = olsenest;
var upper = 6.9;
var downer = 2.9;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(350);
console.clear();
belance = document.getElementById('pct_balance').value;
var dog = ((belance-okka).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (belance<(olsen-(bolux*downer))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (((belance-(bolux*downpipe))<=0)&&((belance-bolux)<oxen)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*uppipe))<=0)&&(belance>pigzie)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    pigzie = parseFloat(belance);
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (belance>=godly){
olsenest = parseFloat(belance);
monkey = (olsenest/drivein); 
downpipe = (drivein/6);
uppipe = (drivein/3);
bolux = monkey;
tens = (monkey*10);
sevens = (monkey*6.9);
eights = (monkey*7.9);
awesome = ((Math.floor(belance/tens))*tens);
olsen = ((Math.floor(belance/tens))*tens);
belance = olsenest;
oxen = olsenest;
pigzie = olsenest;
upper = 6.9;
downer = 2.9;
godly = (olsenest*1.24);
}
if (belance>=14400){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
UM1XcpRy,luvs ya guys snowybots completed,coinwalk,JavaScript,Tuesday 16th of April 2024 04:05:12 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var drivein = 1200; //divide;
var monkey = (olsenest/drivein); 
var downpipe = (drivein/6);
var uppipe = (drivein/3);
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = ((Math.floor(olsenest/tens))*tens);
var belance = olsenest;
var oxen = olsenest;
var godly = (olsenest*1.24);
var pigzie = olsenest;
var upper = 6.9;
var downer = 2.9;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(350);
console.clear();
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (belance<(olsen-(bolux*downer))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (((belance-(bolux*downpipe))<=0)&&((belance-bolux)<oxen)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*uppipe))<=0)&&(belance>pigzie)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    pigzie = parseFloat(belance);
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (belance>=godly){
olsenest = parseFloat(belance);
monkey = (olsenest/1200); 
bolux = monkey;
tens = (monkey*10);
sevens = (monkey*6.9);
eights = (monkey*7.9);
awesome = ((Math.floor(belance/tens))*tens);
olsen = ((Math.floor(belance/tens))*tens);
belance = olsenest;
oxen = olsenest;
pigzie = olsenest;
upper = 6.9;
downer = 2.9;
godly = (olsenest*1.24);
}
if (belance>=14400){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
QLSbmamY,luvs ya guys snowybots completed,coinwalk,JavaScript,Tuesday 16th of April 2024 03:49:25 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = (olsenest/1200); 
monkey;
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = ((Math.floor(olsenest/tens))*tens);
var belance = olsenest;
var oxen = olsenest;
var godly = (olsenest*1.24);
var pigzie = olsenest;
var upper = 6.9;
var downer = 2.9;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(350);
console.clear();
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (belance<(olsen-(bolux*downer))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (((belance-(bolux*200))<=0)&&((belance-bolux)<oxen)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*400))<=0)&&(belance>pigzie)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    pigzie = parseFloat(belance);
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (belance>=godly){
olsenest = parseFloat(belance);
monkey = (olsenest/1200); 
bolux = monkey;
tens = (monkey*10);
sevens = (monkey*6.9);
eights = (monkey*7.9);
awesome = ((Math.floor(belance/tens))*tens);
olsen = ((Math.floor(belance/tens))*tens);
belance = olsenest;
oxen = olsenest;
pigzie = olsenest;
upper = 6.9;
downer = 2.9;
godly = (olsenest*1.24);
}
if (belance>=14400){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
n8DeJMFW,python lab (16/04/2024),brandblox,Python,Tuesday 16th of April 2024 03:48:13 AM CDT,"#Q1. python program to check if a string starts with the and end with spain use regex


import re

def check_string(input_string):
    pattern = r'^the.*spain$'
    if re.match(pattern, input_string, re.IGNORECASE):
        return True
    else:
        return False

test_string1 = input(""Enter string: "")

print(check_string(test_string1))

#output: 
Enter string: the spain
True
Enter string: the spain not
False


#Q. program to find all lowercase charcters aplhabetically between a and m, use regex
import re

def find_lower_chars(input_string):
    pattern = r'[a-m]'
    result = re.findall(pattern, input_string)
    return result

user_input = input(""Enter a string: "")
lowercase_chars = find_lower_chars(user_input)
print(""Lowercase characters between 'a' and 'm':"", lowercase_chars)

#output:
Enter a string: The quick brown fox jumps over the lazy dog
Lowercase characters between 'a' and 'm': ['h', 'e', 'i', 'c', 'k', 'b', 'f', 'j', 'm', 'e', 'h', 'e', 'l', 'a', 'd', 'g']

#Q. program to search for the first white space character in the string


import re

txt = ""The rain in Spain""
x = re.search(""\s"", txt)

print(""The first white-space character is located in position:"", x.start())

#Output:
The first white-space character is located in position: 3

#Q. program to split at each whitespace character using regex

import re

def split_at_whitespace(input_string):
    return re.split(r'\s+', input_string)

user_input = input(""Enter a string: "")
result = split_at_whitespace(user_input)
print(""Split at each whitespace character:"", result)


#Output: 
Enter a string: This is a demo input.
Split at each whitespace character: ['This', 'is', 'a', 'demo', 'input.']


#Q. replace every white space character with the number nine

import re

def replace_whitespace_with_nine(input_string):
    return re.sub(r'\s', '9', input_string)

user_input = input(""Enter a string: "")
result = replace_whitespace_with_nine(user_input)
print(""String with every whitespace character replaced with '9':"", result)


#Output:
Enter a string: This is a demo input
String with every whitespace character replaced with '9': This9is9a9demo9inputp


#Q: check if email valid or not:
import re

def validate_email(email):
    pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    regex = re.compile(pattern)
    return bool(regex.match(email))

user_email = input(""Enter your email address: "")

if validate_email(user_email):
    print(""Valid email address!"")
else:
    print(""Invalid email address. Please enter a valid email."")


#Output:
Enter your email address: arijit@gmail.com
Valid email address!

Enter your email address: arijit@gmail
Invalid email address. Please enter a valid email."
64bYyfHW,Soccer Prediction Betting Tips 16042024,livebetpro,PHP,Tuesday 16th of April 2024 03:16:12 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-16042024/
XswfZ93M,Untitled,pacho_the_python,Python,Tuesday 16th of April 2024 03:10:41 AM CDT,"import unittest

class TestRestaurant(unittest.TestCase):

    def setUp(self):
        # Initialize a restaurant with a capacity of 3
        self.restaurant = Restaurant(""Test Restaurant"", 3)

    def test_init(self):
        # Test if the restaurant is initialized correctly
        self.assertEqual(self.restaurant.name, ""Test Restaurant"")
        self.assertEqual(self.restaurant.capacity, 3)
        self.assertEqual(self.restaurant.waiters, [])

    def test_name_setter(self):
        # Test setting the name property with a valid name
        self.restaurant.name = ""New Restaurant Name""
        self.assertEqual(self.restaurant.name, ""New Restaurant Name"")

        # Test setting the name property with an invalid name
        with self.assertRaises(ValueError):
            self.restaurant.name = """"

    def test_capacity_setter(self):
        # Test setting the capacity property with a valid capacity
        self.restaurant.capacity = 5
        self.assertEqual(self.restaurant.capacity, 5)

        # Test setting the capacity property with an invalid capacity
        with self.assertRaises(ValueError):
            self.restaurant.capacity = -1

    def test_add_waiter(self):
        # Test adding a waiter to the restaurant
        result = self.restaurant.add_waiter(""John"")
        self.assertEqual(result, ""The waiter John has been added."")

        # Test adding a waiter with the same name
        result = self.restaurant.add_waiter(""John"")
        self.assertEqual(result, ""The waiter John already exists!"")

        # Test adding a waiter when the restaurant is at full capacity
        self.restaurant.add_waiter(""Alice"")
        self.restaurant.add_waiter(""Bob"")
        result = self.restaurant.add_waiter(""Eve"")
        self.assertEqual(result, ""No more places!"")

    def test_remove_waiter(self):
        # Test removing a waiter from the restaurant
        self.restaurant.add_waiter(""John"")
        result = self.restaurant.remove_waiter(""John"")
        self.assertEqual(result, ""The waiter John has been removed."")

        # Test removing a waiter that does not exist
        result = self.restaurant.remove_waiter(""Alice"")
        self.assertEqual(result, ""No waiter found with the name Alice."")

    def test_get_total_earnings(self):
        # Test getting total earnings when there are no waiters
        result = self.restaurant.get_total_earnings()
        self.assertEqual(result, 0)

        # Test getting total earnings when there are waiters
        self.restaurant.add_waiter(""John"")
        self.restaurant.add_waiter(""Alice"")
        self.restaurant.waiters[0]['total_earnings'] = 100
        self.restaurant.waiters[1]['total_earnings'] = 200
        result = self.restaurant.get_total_earnings()
        self.assertEqual(result, 300)

    def test_get_waiters(self):
        # Test getting waiters with no filters
        self.restaurant.add_waiter(""John"")
        self.restaurant.add_waiter(""Alice"")
        self.restaurant.add_waiter(""Bob"")
        result = self.restaurant.get_waiters()
        self.assertEqual(len(result), 3)

        # Test getting waiters with min_earnings filter
        self.restaurant.waiters[0]['total_earnings'] = 100
        self.restaurant.waiters[1]['total_earnings'] = 200
        self.restaurant.waiters[2]['total_earnings'] = 300
        result = self.restaurant.get_waiters(min_earnings=150)
        self.assertEqual(len(result), 2)

        # Test getting waiters with max_earnings filter
        result = self.restaurant.get_waiters(max_earnings=250)
        self.assertEqual(len(result), 2)

        # Test getting waiters with both min_earnings and max_earnings filters
        result = self.restaurant.get_waiters(min_earnings=100, max_earnings=250)
        self.assertEqual(len(result), 2)

if __name__ == '__main__':
    unittest.main()"
Y7mke0ML,luvs ya guys snowybots completed,coinwalk,JavaScript,Tuesday 16th of April 2024 03:07:35 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/1200).toFixed(8)); 
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = ((Math.floor(olsenest/tens))*tens);
var belance = olsenest;
var oxen = olsenest;
var godly = (olsenest*1.24);
var pigzie = olsenest;
var upper = 6.9;
var downer = 2.9;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(350);
console.clear();
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (belance<(olsen-(bolux*downer))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (((belance-(bolux*200))<=0)&&((belance-bolux)<oxen)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*400))<=0)&&(belance>pigzie)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    pigzie = parseFloat(belance);
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (belance>=godly){
olsenest = parseFloat(belance);
monkey = Number((olsenest/1200).toFixed(8)); 
bolux = monkey;
tens = (monkey*10);
sevens = (monkey*6.9);
eights = (monkey*7.9);
awesome = ((Math.floor(belance/tens))*tens);
olsen = ((Math.floor(belance/tens))*tens);
belance = olsenest;
oxen = olsenest;
pigzie = olsenest;
upper = 6.9;
downer = 2.9;
godly = (olsenest*1.24);
}
if (belance>=14400){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
XwMq4tzf,maze - backtracking,Filip13,C#,Tuesday 16th of April 2024 03:06:19 AM CDT,"namespace prolazak_kroz_lavirint___backtracking
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string[,] maze = new string[,]
            {
                { """", ""X"", ""X"", ""X"", ""X"" },
                { """", ""X"",  """",  """",  """" },
                { """",  """",  """",  """",  """" },
                { """", ""X"",  """", ""X"",  """" },
            };

            int xStart = 1;
            int yStart = 0;

            int xEnd = 2;
            int yEnd = 4;


            int[,] moves = new int[,]
            {
                {-1, 0 },   //left
                {0, -1 },   //up
                {1, 0 },    //right
                {0, 1 },    //down
            };

            maze[xStart, yStart] = ""."";

            bool gotOut = false;

            //GetOutOfTheMaze(maze, moves, xStart, yStart, xEnd, yEnd, ref gotOut);//first solution, not fastest

            int numSteps = 0;
            int minSteps = int.MaxValue;
            //string[,] shortestSolution = new string[,];

            GetOutOfTheMazeShortest(maze, moves, xStart, yStart, xEnd, yEnd, numSteps, ref minSteps);
        }

        private static void GetOutOfTheMaze(string[,] maze, int[,] moves, int x, int y, int xEnd, int yEnd, ref bool gotOut)
        {
            if (x == xEnd && y == yEnd)
            {
                outputMatrix(maze);
                gotOut = true;
                return;
            }


            for (int i = 0; i <= moves.GetLength(0) - 1; i++)
            {
                int newX = x + moves[i, 0];
                int newY = y + moves[i, 1];


                if (ValidMove(newX, newY, maze) && !gotOut)
                {
                    maze[newX, newY] = ""."";//add new move

                    GetOutOfTheMaze(maze, moves, newX, newY, xEnd, yEnd, ref gotOut);

                    maze[newX, newY] = """";//erase that(new) move

                }
            }


        }

        private static void GetOutOfTheMazeShortest(string[,] maze, int[,] moves, int x, int y, int xEnd, int yEnd, int numSteps, ref int minSteps)
        {
            if (x == xEnd && y == yEnd)
            {
                if (minSteps < numSteps)
                {
                    outputMatrix(maze);
                    minSteps = numSteps;
                }

                return;
            }


            for (int i = 0; i <= moves.GetLength(0) - 1; i++)
            {
                int newX = x + moves[i, 0];
                int newY = y + moves[i, 1];


                if (ValidMove(newX, newY, maze))
                {
                    maze[newX, newY] = ""."";//add new move

                    GetOutOfTheMazeShortest(maze, moves, newX, newY, xEnd, yEnd);

                    maze[newX, newY] = """";//erase that(new) move

                }
            }


        }


        private static bool ValidMove(int newX, int newY, string[,] maze)
        {
            return newX >= 0 && newX <= maze.GetLength(0) - 1 && newY >= 0 && newY <= maze.GetLength(1) - 1 && maze[newX, newY] == """";
        }

        private static void outputMatrix(string[,] maze)
        {
            for (int i = 0; i <= maze.GetLength(0) - 1; i++)
            {
                for (int j = 0; j <= maze.GetLength(1) - 1; j++)
                {
                    Console.Write(maze[i, j].PadLeft(2));
                }
                Console.WriteLine();
            }

            Console.WriteLine();
        }

    }
}"
SuDDc4tF,Untitled,pacho_the_python,Python,Tuesday 16th of April 2024 03:04:56 AM CDT,"import unittest

class TestGetWaiters(unittest.TestCase):
    def setUp(self):
        # Mock data for testing
        self.waiters = [
            {'name': 'John', 'total_earnings': 100},
            {'name': 'Alice', 'total_earnings': 200},
            {'name': 'Bob', 'total_earnings': 150},
            {'name': 'Eve', 'total_earnings': 300}
        ]
        self.test_object = YourClass(self.waiters)  # Replace YourClass with your actual class name

    def test_no_filter(self):
        # Test when no filter is applied
        result = self.test_object.get_waiters()
        self.assertEqual(len(result), 4)  # Expecting all 4 waiters

    def test_min_earnings_filter(self):
        # Test when only min_earnings filter is applied
        result = self.test_object.get_waiters(min_earnings=150)
        self.assertEqual(len(result), 3)  # Expecting 3 waiters with earnings >= 150

    def test_max_earnings_filter(self):
        # Test when only max_earnings filter is applied
        result = self.test_object.get_waiters(max_earnings=200)
        self.assertEqual(len(result), 3)  # Expecting 3 waiters with earnings <= 200

    def test_both_filters(self):
        # Test when both min_earnings and max_earnings filters are applied
        result = self.test_object.get_waiters(min_earnings=150, max_earnings=250)
        self.assertEqual(len(result), 2)  # Expecting 2 waiters with earnings between 150 and 250

    def test_invalid_filters(self):
        # Test when invalid filters are provided
        result = self.test_object.get_waiters(min_earnings=500, max_earnings=1000)
        self.assertEqual(len(result), 0)  # Expecting no waiters as earnings range is invalid

if __name__ == '__main__':
    unittest.main()"
Mr7ynWrp,Rock (MoodPlay),AhmadXploit,Dart,Tuesday 16th of April 2024 03:02:26 AM CDT,"{
  ""rocks"": [
    {
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806421/MoodPlay/KPop/BTS/Photos/images_3_kiytvp.jpg"",
      ""name"": ""BTS"",
      ""detailPage"": [
        {
          ""nameAccount"": ""BTS"",
          ""thumbnail"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlSong"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700624/MoodPlay/Alan%20Walker/Videos/Alan_Walker_K-391_Emelie_Hollow_-_Lily_Lyrics_ebixag.mp4"",
          ""titleSong"": ""Lily""
        }
      ]
    },
    {
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806659/MoodPlay/KPop/EXO/Photos/images_5_au2xqj.jpg"",
      ""name"": ""EXO"",
      ""detailPage"": [
        {
          ""nameAccount"": ""EXO"",
          ""thumbnail"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1691942620/Story/hamzah_j4glhq.webp"",
          ""videoUrlSong"": ""https://flutter.github.io/assets-for-api-docs/assets/videos/bee.mp4"",
          ""titleSong"": ""Overdose""
        }
      ]
    },
    {
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711806801/MoodPlay/KPop/BLACKPINK/Photos/images_2_gpglxm.jpg"",
      ""name"": ""BLACKPINK"",
      ""detailPage"": [
        {
          ""nameAccount"": ""BLACKPINK"",
          ""thumbnail"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711695853/MoodPlay/Maroon%205/Photos/images_2_g76mrs.jpg"",
          ""videoUrlSong"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711696035/MoodPlay/Maroon%205/Videos/Maroon_5_-_Memories_Lyrics_jebb8j.mp4"",
          ""titleSong"": ""Money rain""
        }
      ]
    },
    {
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807062/MoodPlay/KPop/SUPER%20JUNIOR/Photos/images_4_fu90ne.jpg"",
      ""name"": ""SUPER JUNIOR"",
      ""detailPage"": [
        {
          ""nameAccount"": ""SUPER JUNIOR"",
          ""thumbnail"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlSong"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699016/MoodPlay/Eminem/Videos/Eminem_-_Mockingbird_Lyrics_g8bzkz.mp4"",
          ""titleSong"": ""Mr Simple""
        }
      ]
    },
    {
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711808148/MoodPlay/KPop/SNSD/Photos/images_8_hwumwc.jpg"",
      ""name"": ""SNSD"",
      ""detailPage"": [
        {
          ""nameAccount"": ""SNSD"",
          ""thumbnail"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711699041/MoodPlay/Eminem/Photos/ab6761610000e5eba00b11c129b27a88fc72f36b_jdi1o0.jpg"",
          ""videoUrlSong"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711699016/MoodPlay/Eminem/Videos/Eminem_-_Mockingbird_Lyrics_g8bzkz.mp4"",
          ""titleSong"": ""Lagu""
        }
      ]
    },
    {
      ""logoUrl"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711807864/MoodPlay/KPop/ITZY/Photos/images_11_kj7t1u.jpg"",
      ""name"": ""ITZY"",
      ""detailPage"": [
        {
          ""nameAccount"": ""ITZY"",
          ""thumbnail"": ""https://res.cloudinary.com/dybvjvrib/image/upload/v1711700451/MoodPlay/Alan%20Walker/Photos/images_2_xy3r9y.jpg"",
          ""videoUrlSong"": ""https://res.cloudinary.com/dybvjvrib/video/upload/v1711700624/MoodPlay/Alan%20Walker/Videos/Alan_Walker_K-391_Emelie_Hollow_-_Lily_Lyrics_ebixag.mp4"",
          ""titleSong"": ""Lagu itzy""
        }
      ]
    }
  ]
}"
gX42p1aw,luvs ya guys snowybots completed,coinwalk,JavaScript,Tuesday 16th of April 2024 02:51:57 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/120).toFixed(8)); 
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = ((Math.floor(olsenest/tens))*tens);
var belance = olsenest;
var oxen = olsenest;
var godly = (olsenest*2.4);
var pigzie = olsenest;
var upper = 6.9;
var downer = 2.9;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(350);
console.clear();
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (belance<(olsen-(bolux*downer))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (((belance-(bolux*20))<=0)&&((belance-bolux)<oxen)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*40))<=0)&&(belance>pigzie)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    pigzie = parseFloat(belance);
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (belance>=godly){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
ZSHqHQCG,Experiment3-labwork,Saboten758,SQL,Tuesday 16th of April 2024 02:43:26 AM CDT,"
select Deptno, count(*) as no_of_employees from Emp group by DeptNo;

select avg(sal),count(*) as lok_jon,DeptNo from Emp  group by DeptNo having lok_jon>5 ;


select Job from Emp group by Sal  having Sal>=5000;
select job from Emp where Sal>=5000


select deptno,sum(sal) as total,avg(sal) as Avg,count(*) as lok_jon from Emp group by DeptNo;



select job,count(*) as lok_jon from Emp  group by job order by lok_jon desc;

select sum(sal) as total_salary,min(sal) as minimum_salary,max(sal) as maximum_salary,job from Emp group by Job;

select avg(sal),Job from Emp group by Job having Job!='Manager'

select Job,deptno,sum(Sal) as total_sum,max(sal) as max_sal,min(Sal) as min_sal,avg(sal) as avg_sal from Emp group by job having deptno=20

select job,deptno,sum(sal) as total_salary,max(sal) as maximum_salary,min(sal) as minimum_salary,avg(sal) as avg_salary from Emp group by job having deptno=20 and avg(sal)>1000"
wHy2rBuB,Code,Incrementator,Python,Tuesday 16th of April 2024 02:39:13 AM CDT,"import pandas as pd

logs = pd.read_csv('/datasets/logs.csv')
logs['email'] = logs['email'].fillna(value='')
logs.loc[logs['source'] == 'None', 'source'] = 'email'

logs_grouped = logs.groupby('source')['purchase'].agg(['count', 'sum'])#запишите ваш код сюда

print(logs_grouped)"
NKeA6yhd,UPIuCIbr1o,charis2324,JSON,Tuesday 16th of April 2024 02:37:32 AM CDT,"{
  ""chat-id"": ""UPIuCIbr1o"",
  ""created-at"": ""2024-04-16T02:23:14"",
  ""creator"": ""Charis"",
  ""participants"": [
    ""Charis"",
    ""Doxa"",
    ""Charis2""
  ],
  ""messages"": [
    {
      ""created-at"": ""2024-04-16T02:23:14"",
      ""author"": ""Charis"",
      ""message"": ""Helsdo, World""
    },
    {
      ""created-at"": ""2024-04-16T03:37:33"",
      ""author"": ""Doxa"",
      ""message"": ""Sorry I am having a test soon. I am grinding through it now.""
    },
    {
      ""created-at"": ""2024-04-16T03:38:22"",
      ""author"": ""Charis"",
      ""message"": ""Nvm. I will ask you out after that.""
    },
    {
      ""created-at"": ""2024-04-16T03:47:12"",
      ""author"": ""Doxa"",
      ""message"": ""see ya.""
    },
    {
      ""created-at"": ""2024-04-16T05:36:49"",
      ""author"": ""Charis2"",
      ""message"": ""bye""
    },
    {
      ""created-at"": ""2024-04-16T07:42:54"",
      ""author"": ""Doxa"",
      ""message"": ""Bye""
    },
    {
      ""created-at"": ""2024-04-16T07:43:12"",
      ""author"": ""Doxa"",
      ""message"": ""Bye""
    },
    {
      ""created-at"": ""2024-04-16T07:43:15"",
      ""author"": ""Doxa"",
      ""message"": ""Bye""
    }
  ]
}"
v9KTyXKn,horse movment in chess - backtracking,Filip13,C#,Tuesday 16th of April 2024 02:30:30 AM CDT,"using System;
namespace backtracking_konj_u_sahu
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int tableDimension = 5;
            int[,] table = new int[tableDimension, tableDimension];
            int[,] moves = new int[,]{
                { -2, -1 }, { -2, 1 },  //left
                { -1, -2 }, { 1, -2 },  //up
                { 2,-1},{ 2,1},         //right
                { -1,2},{ 1,2}          //down
            };

            //startingfrom (0,0)
            //int posX = 0;
            //int posY = 0;

            //starting from random position - from console

            int posX = int.Parse(Console.ReadLine());
            int posY = int.Parse(Console.ReadLine());
            int numMoves = 1;
            table[posX, posY] = numMoves;

            GoThroughTable(table, moves, posX, posY, numMoves);
        }

        private static void GoThroughTable(int[,] table, int[,] moves, int posX, int posY, int numMoves)
        {
            int tableSize = table.GetLength(0) * table.GetLength(1);
            if (numMoves == tableSize)
            {
                outputTable(table);
                return;
            }

            for (int i = 0; i < moves.GetLength(0); i++)
            {
                int newX = posX + moves[i, 0];
                int newY = posY + moves[i, 1];

                if (ValidMove(newX, newY, table))
                {
                    numMoves++;
                    table[newX, newY] = numMoves;

                    GoThroughTable(table, moves, newX, newY, numMoves);

                    numMoves--;
                    table[newX, newY] = 0;

                }
            }


        }

        private static bool ValidMove(int newX, int newY, int[,] table)
        {
            return newX >= 0 && newY >= 0 && newX < table.GetLength(0) && newY < table.GetLength(0) && table[newX, newY] == 0;
        }

        private static void outputTable(int[,] matrix)
        {
            for (int i = 0; i <= matrix.GetLength(0) - 1; i++)
            {
                for (int j = 0; j <= matrix.GetLength(1) - 1; j++)
                {
                    Console.Write($"" {matrix[i, j],2}"");
                }
                Console.WriteLine();
            }

            Console.WriteLine();
        }
    }
}"
V1g1zaP9,luvs ya guys snowybots completed,coinwalk,JavaScript,Tuesday 16th of April 2024 02:22:20 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var monkey = Number((olsenest/120).toFixed(8)); 
var bolux = monkey;
var tens = (monkey*10);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var awesome = ((Math.floor(olsenest/tens))*tens);
var olsen = ((Math.floor(olsenest/tens))*tens);
var belance = olsenest;
var oxen = olsenest;
var pigzie = olsenest;
var upper = 6.9;
var downer = 2.9;
 
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
 
 
async function go(){
await sleep(350);
console.clear();
belance = document.getElementById('pct_balance').value;
var dog = ((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if (belance>(olsen+(bolux*upper))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (belance<(olsen-(bolux*downer))){
    bolux = bolux*2;
    upper = 4.9;
    downer = 4.9;
    olsen = parseFloat(belance);
}
if (((belance-(bolux*20))<=0)&&((belance-bolux)<oxen)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (((belance-(bolux*40))<=0)&&(belance>pigzie)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    upper = 6.9;
    downer = 2.9;
    pigzie = parseFloat(belance);
    oxen = parseFloat(belance);
    olsen = ((Math.floor(belance/tens))*tens);
}
if (belance>=(olsenest*2.4)){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
await go();
}
go();"
AR15QrfF,old cube script,The_Red,Lua,Tuesday 16th of April 2024 02:11:35 AM CDT,"local plr = game.Players.LocalPlayer
local mouse = plr:GetMouse()
local cas = game:GetService(""ContextActionService"")
local multiplyfactor = 0.1

function click(actionName, inputState, inputObject, part)
	if mouse and mouse.Target and mouse.Target:GetTags()[1] == ""ScriptedPart"" then
		if inputState == Enum.UserInputState.Begin then
			local part = mouse.Target
			local points = math.random() * multiplyfactor
			local rdmSize = Vector3.one * points
			print(rdmSize)
			print(points)
			part.Size += rdmSize
			part.Position = part.Position + Vector3.new(0,rdmSize.Y/2,0)
			part.Highlight.FillColor = BrickColor.random().Color
			part.Highlight.OutlineColor = BrickColor.random().Color
			local increment = math.floor(points)
			if increment <= 0 then
				increment += 1
			end
			game.ReplicatedStorage.IncrementPoints:FireServer(increment)
		end
	end
end

game:GetService(""RunService"").RenderStepped:Connect(function()
	if mouse and mouse.Target and mouse.Target:GetTags()[1] == ""ScriptedPart"" then
		if not mouse.Target:FindFirstChild(""Highlight"") then
			local higlight = Instance.new(""Highlight"",mouse.Target)
			higlight.FillColor = BrickColor.random().Color
			higlight.OutlineColor = BrickColor.random().Color
		end
		cas:BindAction(""click"",click,false,Enum.UserInputType.MouseButton1)
	else
		for i,v in workspace:GetChildren() do
			if v:GetTags()[1] == ""ScriptedPart"" then
				for index,highlight in v:GetChildren() do
					if highlight:IsA(""Highlight"") then
						highlight:Destroy()
					end
				end
			end
		end
		cas:UnbindAction(""click"")
	end
end)"
PhyADGXD,Untitled,TotKtoIzNiotkuda,JSON,Tuesday 16th of April 2024 02:08:51 AM CDT,"{
key1
}"
ZKMkBc6s,Untitled,jevixlugya,Dart,Tuesday 16th of April 2024 01:37:42 AM CDT,"  PlatformFile? pickedFile;

  UploadTask? uploadTask;
  Future selectFile()async{
    //final File fileForFirebase = File(""${pickedFile!.path}"");
    final result= await FilePicker.platform.pickFiles();
    if (result==null) return;
    setState(() {
      pickedFile=result.files.first;
    });

    try {

      final path = 'postfiles/${pickedFile!.name}';
      final file = File(pickedFile!.path!);
      final ref = FirebaseStorage.instance.ref().child(path);
      uploadTask = ref.putFile(file);
      final imageUrl = await uploadTask!.whenComplete(() {});
      final urlDownload = await imageUrl.ref.getDownloadURL();
      print('firebase image =$urlDownload');

      setState(() {
        postfileController.text = urlDownload;
      });
    }catch(e){
    ScaffoldMessenger.of(context).showSnackBar(
    const SnackBar(
    content: Text(
    'check your details /network, and try again',
    ),
    ),
    );
    }
  }"
ugmAMDbB,Untitled,jevixlugya,Dart,Tuesday 16th of April 2024 01:34:46 AM CDT,"import 'package:audioplayers/audioplayers.dart';
import 'package:flutter/material.dart';
import 'package:path/path.dart';


class playaudios extends StatefulWidget {
//a url that will be fetchde from database
  final String url;


  const playaudios({super. key,required this.url});

  @override
  State<playaudios> createState() => _playaudiosState();
}

class _playaudiosState extends State<playaudios> {
  final audioPlayer=AudioPlayer();
  bool isPlaying=false;
  Duration duration=Duration.zero;
  Duration position=Duration.zero;
  @override
  void initState(){
    super.initState();
    //Listen to states:playing, pause,stopped
    audioPlayer.onPlayerStateChanged.listen((state) {
      setState(() {
        isPlaying=state==PlayerState.playing;
      });

    });
    //Listen to audio duration
    audioPlayer.onDurationChanged.listen((newDuration) {
      setState(() {
        duration=newDuration;
      });
    }) ;
   //Listen to audio position
    audioPlayer.onPositionChanged.listen((newDuration){
      setState(() {
        position=newDuration;
      });
    });
    audioPlayer.onPlayerComplete.listen((state) {
      setState(() {
       // audioPlayer.setReleaseMode(ReleaseMode.loop);
      });
    });
  }
  @override
  void dispose(){
    audioPlayer.dispose();
    super.dispose();
  }
  String formatTime(Duration duration){
    String twoDigits(int n)=>n.toString().padLeft(2,'0');
    final hours=twoDigits(duration.inHours);
    final minutes=twoDigits(duration.inMinutes.remainder(60));
    final seconds=twoDigits(duration.inSeconds.remainder(60));

    return [
      if (duration.inHours > 0 )hours,
      minutes,
      seconds,
    ].join(':');

  }
  @override
  Widget build(BuildContext context) {
    return Container(
              height: 80,
              //color: Colors.purple,
              decoration: BoxDecoration(
                  color: Colors.black26,
                borderRadius: BorderRadius.circular(30)
              ),
              child: Padding(
                padding: const EdgeInsets.all(2.0),
                child: Row(
                  children: [
                    CircleAvatar(
                      radius: 35,
                      child: IconButton(
                        icon:Icon(
                          isPlaying ? Icons.pause: Icons.play_arrow,

                        ),


                        iconSize:40,
                        onPressed: ()async{
                          //await audioPlayer.audioCache.clearAll(),
                          if (isPlaying){
                            await audioPlayer.pause();
                          }else{
                            //String url='https://firebasestorage.googleapis.com/v0/b/sda-community.appspot.com/o/postfiles%2FLowooza%20ku%20maka.mp3?alt=media&token=6081c2e7-4f41-40b0-860a-63ff4b281832';
                            await audioPlayer.play(UrlSource('$url'));

                          }
                        },
                      ),
                    ),
                   Slider(
                     min: 0,
                     value: position.inSeconds.toDouble(),
                     max: duration.inSeconds.toDouble(),

                     onChanged: (value) async {
                       final position=Duration(seconds: value.toInt());
                       await audioPlayer.seek(position);
                       await audioPlayer.resume();
                     },
                   ),
                    Text(formatTime(duration-position))


                  ],
                ),
              ),

    );

  }"
NhdQxkWt,Auto Increment Query MySQL,Virajsinh,MySQL,Tuesday 16th of April 2024 01:06:47 AM CDT,ALTER TABLE tbl_name AUTO_INCREMENT = 5;
6J6aEMfN,autorun playermodel GMOD,SRial,Lua,Tuesday 16th of April 2024 12:11:54 AM CDT,"player_manager.AddValidModel( ""SoulCaliburVI"", ""models/Drull/SoulCaliburVI/2B/2bscvi.mdl"" )
list.Set( ""PlayerOptionsModel"",  ""SoulCaliburVI"", ""models/Drull/SoulCaliburVI/2B/2bscvi.mdl"" )

-- crowbar.qc
$modelname ""Syndicate/""Файл"".mdl""
$cdmaterials ""models/syndicate""
$scale 1
$body ""Body"" """"Файл"".smd"" 
$sequence ""idle"" """"Файл"".smd"" fps 30"
eYneFKny,ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None],basedcount_bot,Python,Monday 15th of April 2024 11:36:33 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 992, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1112, in create_connection
    transport, protocol = await self._create_connection_transport(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/.pyenv/versions/3.11.7/lib/python3.11/asyncio/base_events.py"", line 1145, in _create_connection_transport
    await waiter
ConnectionAbortedError: SSL handshake is taking longer than 60.0 seconds: aborting the connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 46, in wrapper
    await func(lemmy_instance, databased)
  File ""/root/Bots/basedcount_bot_lemmy/basedcount_bot.py"", line 228, in read_comments
    async for comment in lemmy_instance.stream_comments(skip_existing=True):  # Comment
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/async_lemmy.py"", line 64, in stream_comments
    comments = await self.request_builder.get(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/async_lemmy_py/request_builder.py"", line 57, in get
    async with self.client_session.get(url, headers=headers, params=params) as resp:
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 1194, in __aenter__
    self._resp = await self._coro
                 ^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/client.py"", line 578, in _request
    conn = await self._connector.connect(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 544, in connect
    proto = await self._create_connection(req, traces, timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 911, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1235, in _create_direct_connection
    raise last_exc
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1204, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/root/Bots/basedcount_bot_lemmy/.venv/lib/python3.11/site-packages/aiohttp/connector.py"", line 1000, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host lemmy.basedcount.com:443 ssl:default [None]
"
jrRFpyDT,Atualização,Paulohacker,JSON,Monday 15th of April 2024 11:19:00 PM CDT,"{
""version"": ""2.0"",
""title"": ""Atualização "",
""downloadLink"": ""https://t.me/KingApplicationspremium/448"",
""positivebtn"": ""Atualizar"",
""message"": ""Atualize para Usar Novos recursos disponíveis "",
""negativebtn"": ""fechar ""
}"
aHsjbQna,Atualização,Paulohacker,JSON,Monday 15th of April 2024 11:00:28 PM CDT,"{
""version"": ""6.3"",
""title"": ""Atualização "",
""message"": ""Novos recursos "",
""negativeBtn"": ""Fechar "",
""positiveBtn"": ""Atualizar "",
""getLink"": ""https://t.me/KingApplicationspremium/448""
}"
LkvKjTha,MainScript v2,Sungmingamerpro13,CSS,Monday 15th of April 2024 10:43:24 PM CDT,"--- Sungmingamerpro13

-- Services
PlayerService = game:GetService('Players')
TweenService = game:GetService('TweenService')

-- Variables
DefaultMessageDelayTime = 4
LetterInvertal = 0.05
MessageWaitSigns = {',', '?', '.'}
MessageWaitSignDelay = 1

MessageValue = game.ReplicatedStorage.Message
SpeakerValue = game.ReplicatedStorage.Message.Speaker

-- randomPlayer or NPC

local randomPlayer

-- Functions

function BroadcastMessage(Text, MessageDelayTime)
	-- This makes the message appear like a typewriter
	for i = 1,#Text,1 do
		MessageValue.Value = string.sub(Text,1,i)
		for _, L in pairs(MessageWaitSigns) do
			if string.sub(Text,i,i) == L then
				wait(MessageWaitSignDelay)
			end
		end
		wait(LetterInvertal)
	end
	if tonumber(MessageDelayTime) ~= nil then
		wait(MessageDelayTime)
	else
		wait(DefaultMessageDelayTime)
	end
	MessageValue.Value = 'None'
	return true
end

function SetMessageSpeaker(Name, Model)
	if Name == randomPlayer then
		randomPlayer = game.Players:GetChildren()[math.random(1,#game.Players:GetChildren())]
		Name = randomPlayer.Name
	end
	SpeakerValue.Value = Name or Model
end

function ChangeTime(ToTime, TweenDuration)
	local Lightning = game.Lighting
	local TI = TweenInfo.new(TweenDuration,Enum.EasingStyle.Linear)
	local Tween = TweenService:Create(Lightning, TI, {ClockTime = ToTime})
	Tween:Play()
end

function ChangeFogend(ChangeTo, TweenDuration,ColourOrNone)
	if ColourOrNone ~= 'None' then
		game.Lighting.FogColor = ColourOrNone
	end
	local FogendValue = Instance.new('IntValue')
	FogendValue.Value = game.Lighting.FogEnd
	FogendValue:GetPropertyChangedSignal('Value'):Connect(function()
		game.Lighting.FogEnd = FogendValue.Value
	end)
	local TI = TweenInfo.new(TweenDuration,Enum.EasingStyle.Linear)
	local Tween = TweenService:Create(FogendValue, TI, {Value = ChangeTo})
	Tween:Play()
	spawn(function()
		Tween.Completed:Connect(function()
			FogendValue:Destroy()
		end)
	end)
end

function teleportPlayers(partCFrame)
	local players = game.Players:getPlayers()
	for _,player in pairs(players) do
		if player.Character then
			if player.Character.HumanoidRootPart.Anchored == false then
				player.Character.Humanoid.Jump = true
			end
		end
	end
	wait(.5)
	for _,player in pairs(players) do
		if player.Character then
			if player.Character.HumanoidRootPart.Anchored == false then
				player.Character:SetPrimaryPartCFrame(partCFrame)
			end
		end
	end
end

function TransitionScreen()
	for _, player in pairs(game.Players:GetChildren()) do
		spawn(function()
			local NewGui = game.ServerStorage.Assets.TransitionScreen:Clone()
			NewGui.Parent = player.PlayerGui
		end)
	end
end

function ObjectiveSystem(Text)
	game.ReplicatedStorage.ObjectiveEvent:FireAllClients(Text)
end

function Timer(Time)
	for i = Time, 0, -1 do
		game.ReplicatedStorage.TopText.Value = i
		wait(1)
	end
	game.ReplicatedStorage.TopText.Value = ""None""
end

function MoveNPC(Location, NPCName)
	local NPC = workspace[NPCName]
	NPC.Humanoid:MoveTo(Location.Position)
	NPC.Humanoid.MoveToFinished:Wait()
end

function FaceNPC(NPCName, faceID)
	local NPC = workspace[NPCName]
	NPC.Head.face.Texture = ""rbxassetid://""..faceID
end"
7MHSqvL2,DialogueScript,Sungmingamerpro13,CSS,Monday 15th of April 2024 10:39:51 PM CDT,"local camera = Instance.new(""Camera"", script.Parent)
local Message = game.ReplicatedStorage:WaitForChild(""Message"")
local Speaker = Message:WaitForChild(""Speaker"")

local player = game.Players.LocalPlayer
local DialogueFrame = player.PlayerGui:WaitForChild(""DialogueGui"").DialogueFrame

function UpdaterCharacter(character)
	for i, v in pairs(DialogueFrame.Icon.Character:GetDescendants()) do
		v:Destroy()
	end
	for i, v in pairs(character:GetChildren()) do
		if v:IsA(""BasePart"") or v:IsA(""Accessory"") or v:IsA(""Shirt"") or v:IsA(""Pants"") or v:IsA(""ShirtGraphic"") or v:IsA(""BodyColors"") or v:IsA(""Humanoid"") then
			local new = v:Clone()
			new.Parent = DialogueFrame.Icon.Character
			if v:IsA(""Humanoid"") then
				new.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
			end
		end
	end
	DialogueFrame.Icon.CurrentCamera = camera
	camera.CFrame = character.PrimaryPart.CFrame * CFrame.new(0, 1.5, -2) * CFrame.Angles(0, math.rad(180), 0)
end

Message:GetPropertyChangedSignal(""Value""):Connect(function()
	if Message.Value == ""None"" then
		DialogueFrame.Visible = false
	else
		DialogueFrame.Visible = true
	end
	DialogueFrame.TextLabel.Text = Message.Value
	script.DialogueSound:Play()
end)

Speaker:GetPropertyChangedSignal(""Value""):Connect(function()
	UpdaterCharacter(workspace[Speaker.Value])
	DialogueFrame.Icon.nameLabel.Text = Speaker.Value
end)
"
r0BDDmy0,Untitled,retroman,FreeBasic,Monday 15th of April 2024 10:28:08 PM CDT,"sub chrrep(source as string, depth as integer)
	for i as integer = ((depth<0) and (-depth)) _
	to ((depth>0) and depth) _
	step sgn(depth)
		print chr(source[i])
	next
end sub

dim s as string = ""abc""

chrrep(s, -2)
print ""--------""
chrrep(s, 2)

"
2TBXGhW3,A6VkP78SQv,charis2324,JSON,Monday 15th of April 2024 10:16:25 PM CDT,"{
  ""chat-id"": ""A6VkP78SQv"",
  ""created-at"": ""2024-04-16T03:12:50"",
  ""creator"": ""Charis"",
  ""participants"": [
    ""Charis"",
    ""Doxa""
  ],
  ""messages"": [
    {
      ""created-at"": ""2024-04-16T03:12:50"",
      ""author"": ""Charis"",
      ""message"": ""Hello there!""
    },
    {
      ""created-at"": ""2024-04-16T03:13:23"",
      ""author"": ""Doxa"",
      ""message"": ""Hello Charis! I am eating lunch now!""
    },
    {
      ""created-at"": ""2024-04-16T03:14:08"",
      ""author"": ""Charis"",
      ""message"": ""Good to know that! is it tasty?""
    },
    {
      ""created-at"": ""2024-04-16T03:22:08"",
      ""author"": ""Charis"",
      ""message"": ""Would you like to hang out tmr?""
    }
  ]
}"
u6y9T5wg,Kill All,Msizz,Lua,Monday 15th of April 2024 10:00:49 PM CDT,"getgenv().kill_all = false

local function set(option, bool)
    if option == ""kill all"" then
        getgenv().kill_all = bool
        while true do
            if kill_all then
                for i,v in pairs(game.Players:GetPlayers()) do
                    if v.Character then
                        local args = {
                            [1] = {
                                [1] = v.Character
                            }
                        }
                        game:GetService(""Players"").LocalPlayer.BasePlayer.RE.EnergyBeamHitbox:FireServer(unpack(args))
                    end
                end
            else
                break
            end
            wait()
        end 
    end
end

local ui = loadstring(game:HttpGet(""https://pastebin.com/raw/3xXCHAQD""))()
ui:Window(""Ouxie / Legends Arena"")

local op = ui:NewTab(""OP"", ""0"")

op:Toggle(""kill all"", ""Spam kills everyone in the game."", function()
    set(""kill all"", bool)
end)"
QnQcYHpv,array functions,Divyansh_Chourey,C,Monday 15th of April 2024 09:11:12 PM CDT,"#include<stdio.h>

void display_array(int array[], int size){
    for (int i=0; i<size; i++){
        printf(""%d "", array[i]);
    }
    printf(""\n"");
}

void input_array(int array[], int size){
    for(int i=0; i<size; i++){
        printf(""Enter element %d: "", i+1);
        scanf(""%d"", &array[i]);
    }
}
//display matrix
//input matrix

//sort array in accending order
void sort_accending(int array[], int size){
    int a;
    for(int i=0; i<size; i++){
        for(int j=i+1; j<size; j++){
            if(array[j]<array[i]){
                //swap numbers
                a = array[j];
                array[j] = array[i];
                array[i] = a;
            }
        }
    }
}
//sort array in decending order
void sort_accending(int array[], int size){
    int a;
    for(int i=0; i<size; i++){
        for(int j=i+1; j<size; j++){
            if(array[j]>array[i]){
                //swap numbers
                a = array[j];
                array[j] = array[i];
                array[i] = a;
            }
        }
    }
}
//insert a element
//delete a element
//find number of elements in an array

"
