id,title,username,language,date,content
VQqxC38u,Food Stocks,Sungmingamerpro13,CSS,Monday 6th of May 2024 12:42:43 AM CDT,"local Food = script.Parent

local Stock = 100

Food.CashGui.stockLabel.Text = ""Stock: ""..Stock

Food.ClickDetector.MouseClick:Connect(function(player)
	if player.Coins.Value >= 150 then
		player.Coins.Value = player.Coins.Value - 150

		Stock = Stock - 1

		Food.CashGui.stockLabel.Text = ""Stock: ""..Stock

		if not player.Backpack:FindFirstChild(""Cupcake"") then
			game.ServerStorage.Foods.Chips:Clone().Parent = player.Backpack
		end
	else
		Food.CashGui.cashLabel.Text = ""Insufficient Coins""
		wait(2)
		Food.CashGui.cashLabel.Text = ""100 Coins""
	end
end)

Food.ClickDetector.MouseHoverEnter:Connect(function()
	Food.SelectionBox.Visible = true
end)

Food.ClickDetector.MouseHoverLeave:Connect(function()
	Food.SelectionBox.Visible = false
end)
"
hsRFRxRV,ü§ë G2A.com Free Gift Card Guide May 2024 FIX ü§ë,jusst2k4,GetText,Monday 6th of May 2024 12:11:15 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_777856.pdf

Working as of:
06 May 2024"
hY6gvmYX,calculate the difference between two times in PHP in both HH:MM:SS format and decimal format in PhP,Virajsinh,PHP,Monday 6th of May 2024 12:10:24 AM CDT,"<?php
	$start_time = ""09:00 PM""; //	$start_time = ""21:00:00"";
	$end_time = ""08:12 AM"";   //	$end_time = ""08:12:00"";

	$time_format_A = DateTime::createFromFormat(""h:i A"", $start_time);
	$time_format_B = DateTime::createFromFormat(""H:i:s"", $start_time);
	if($time_format_A !== false){
		$start_datetime = DateTime::createFromFormat(""h:i A"", $start_time);
		$end_datetime   = DateTime::createFromFormat(""h:i A"", $end_time);
	}elseif($time_format_B !== false){
		$start_datetime = DateTime::createFromFormat(""H:i:s"", $start_time);
		$end_datetime   = DateTime::createFromFormat(""H:i:s"", $end_time);
	}else{
		return """";
	}

	// --------------------------------------------------------------
	// $start_time = ""09:00 PM"";
	// $end_time = ""08:12 AM"";

	// Create DateTime objects for start and end times
	// $start_datetime = DateTime::createFromFormat('h:i A', $start_time);
	// $end_datetime = DateTime::createFromFormat('h:i A', $end_time);
	// --------------------------------------------------------------
	// $start_time = ""08:54:00"";
	// $end_time = ""12:21:00"";

	// Convert times to DateTime objects
	// $start_datetime = DateTime::createFromFormat('H:i:s', $start_time);
	// $end_datetime = DateTime::createFromFormat('H:i:s', $end_time);
	// --------------------------------------------------------------

	// If end time is before start time, it means it's on the next day
	if($end_datetime < $start_datetime) {
		$end_datetime->modify('+1 day'); // Add 1 day to end time
	}

	// Calculate the difference as a DateInterval
	$interval = $start_datetime->diff($end_datetime);

	// Format the difference as HH:MM:SS
	$time_difference = $interval->format('%H:%I:%S');

	// Convert the difference to decimal hours
	$total_seconds = $interval->s + $interval->i * 60 + $interval->h * 3600;
	$decimal_hours = $total_seconds / 3600;

	echo ""Difference (HH:MM:SS): "" . $time_difference . ""<br>"";
	echo ""Difference (Decimal hours): "" . number_format($decimal_hours, 2);
?>"
p8TsqiaA,02. Mi Vida A Tu Lado | Cronolog√≠a,Athenea-Owl,HTML,Sunday 5th of May 2024 11:17:28 PM CDT,"---------MI VIDA A TU LADO | CRONOLOG√çA PARA FORO MODERNBB----------

<center><div class=""athec2i"" style=""background-image: var(--2gradient), url(https://i.servimg.com/u/f81/19/51/91/06/abbue10.png)"">Mi vida a tu lado</div><div class=""athec2links""><a href=""LINK"">Biograf√≠a</a><a href=""LINK"">Perfil</a><a href=""LINK"">Relaciones</a><a href=""LINK"">Mensaje Privado</a></div><div class=""athec2cbl""><label for=""athec2i1"">1</label><label for=""athec2i2"">2</label><label for=""athec2i3"">3</label><label for=""athec2i4"">4</label><label for=""athec2i5"">5</label></div><div class=""athec2""><hr/><input type=""radio"" name=""radio"" id=""athec2i1""><div class=""athec2id1""><h2>Mis Primeros Pasos</h2>
No es que recuerde mucho de la vida cuando empec√© a dar mis primeros pasos, pero mam√° me lleg√≥ a contar que cuando era peque√±a y te ve√≠a llegar, abuelo, corr√≠a hac√≠a a ti e intentaba escalarte como si fueses una alta monta√±a s√≥lo para que me cargaras.
<h2>Cuando ten√≠a cinco a√±os</h2>
Lo que viene a mi mente cuando ten√≠a esa edad son las vacaciones en el rancho ‚Äîque si bien fueron muchas‚Äî recuerdo como las primeras que llegu√© a vivir.

Siempre fuiste un hombre trabajador, pues te sol√≠as despertar a las seis de la ma√±ana cuando a veces todav√≠a hab√≠a neblina. Por mi parte, yo me despertaba una hora despu√©s, como a las siete de la ma√±ana, y cuando no te ve√≠a, lo que hac√≠a era ir a la cocina y preguntar por ti. Casi siempre me dec√≠an que estabas orde√±ando las vacas y lo que yo hac√≠a era ir contigo para acompa√±arte hasta que terminaras tus labores de la ma√±ana hasta la hora del almuerzo.
<h2>El vestido del cabrito</h2>
Fue tambi√©n de peque√±a cuando vi por primera vez c√≥mo se mataba un cabrito, el cual ese d√≠a terminamos comiendo. No quer√≠a que mataran al cabrito de manchas caf√©s porque era muy bonito, pero creo que fue √©se al que terminaron atrapando. Cuando estaba ya muerto y le empezaste a quitar la piel te dije: no, abuelito, no le quites el vestido al cabrito...
</div></input>
<input type=""radio"" name=""radio"" id=""athec2i2""><div class=""athec2id2"">
<h2>Amabas a tus animales</h2>
El rancho era tu vida y lo amabas. Amabas a tus animales y ellos te amaban tanto a ti que, incluso recuerdo que una vez al Duque, el perro favorito del rancho y un pastor alem√°n, mientras estaba echado frente a la casa tomando una siesta, le dije tu nombre y luego mencion√© a las vacas.

Qued√© tan impresionada ese d√≠a de su comportamiento, pues despu√©s de haber dicho eso se levant√≥ tan r√°pido como un cohete y se fue corriendo hasta el corral de las vacas a buscarte. Era un perro muy listo, el m√°s trabajador de todos y siempre nos cuidaba.
<h2>Siempre te recordar√©...</h2>
Podr√≠a decir muchas cosas m√°s sobre mis memorias. A pesar de los a√±os, estoy contenta de haber vivido los √∫ltimos a√±os muy cerca de ti. S√© que no te gustaba quedarte muchos d√≠as en mi casa, pues tu vida era el rancho y no te encontrabas a ti mismo dentro de estas cuatro paredes y en esta escandalosa ciudad. ¬øQui√©n lo dir√≠a? M√°s de novena a√±os y tu segu√≠as trabajando en el rancho y haciendo tus cosas solo. 

Siempre fuiste un ave en libertad y as√≠ fue como te fuiste. Todo fue tan repentino en plena navidad, despu√©s de dos d√≠as sab√≠a lo que estaba por venir y pas√≥ todo tan r√°pido, pero estoy contenta de poder haberme despedido de ti.

Tu partida me desgarr√≥ y cuando me acuerdo de ti todav√≠a lloro, porque aunque mi consciencia est√© tranquila, s√≥lo yo s√© lo mucho que te am√© y todav√≠a me duele que no est√©s.
Gracias por todo, abuelo, o mejor dicho, Papi Gil.
</div></input>
<input type=""radio"" name=""radio"" id=""athec2i3""><div class=""athec2id3"">
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
</div></input>
<input type=""radio"" name=""radio"" id=""athec2i4""><div class=""athec2id4"">
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
</div></input>
<input type=""radio"" name=""radio"" id=""athec2i5""><div class=""athec2id5"">
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
</div></input>
</div><a class=""athec02"" href=""https://athenea-owl.tumblr.com"">Athenea</a>
</center>
<style>.athec2, .athec2cbl, .athec2i, .athec2links{--2fondo: #f5f5dc;--2fuente: Satisfy;--2borde: #a47c48;--2boton: #6b4d2f;--2hover: #49341f;--2size: 15px;--2size1: 20px;--2texto: #dcc251;--2texto1: #666;--2gradient: linear-gradient(0deg,rgb(164 124 72) 0%, rgb(0 0 0 / 0%) 100%)}</style>
<link href=""https://dl.dropbox.com/scl/fi/jp2oriquzv09agqpha1q0/01.-La-Flecha-del-Castigo-Afiliaci-n-Modernbb.css?rlkey=2bt6ccl42cglaqedknrocda1w&st=pvh3nsmm&"" rel=""stylesheet""><link rel=""preconnect"" href=""https://fonts.googleapis.com""><link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin><link href=""https://fonts.googleapis.com/css2?family=Satisfy&display=swap"" rel=""stylesheet"">


---------MI VIDA A TU LADO | CRONOLOG√çA PARA FORO PHPBB----------


<center><div class=""athec2i"" style=""background-image: var(--2gradient), url(https://i.servimg.com/u/f81/19/51/91/06/abbue10.png)"">Mi vida a tu lado</div><div class=""athec2links""><a href=""LINK"">Biograf√≠a</a><a href=""LINK"">Perfil</a><a href=""LINK"">Relaciones</a><a href=""LINK"">Mensaje Privado</a></div><div class=""athec2cbl""><label for=""athec2i1"">1</label><label for=""athec2i2"">2</label><label for=""athec2i3"">3</label><label for=""athec2i4"">4</label><label for=""athec2i5"">5</label></div><div class=""athec2""><hr/><input type=""radio"" name=""radio"" id=""athec2i1""><div class=""athec2id1""><h2>Mis Primeros Pasos</h2>
No es que recuerde mucho de la vida cuando empec√© a dar mis primeros pasos, pero mam√° me lleg√≥ a contar que cuando era peque√±a y te ve√≠a llegar, abuelo, corr√≠a hac√≠a a ti e intentaba escalarte como si fueses una alta monta√±a s√≥lo para que me cargaras.
<h2>Cuando ten√≠a cinco a√±os</h2>
Lo que viene a mi mente cuando ten√≠a esa edad son las vacaciones en el rancho ‚Äîque si bien fueron muchas‚Äî recuerdo como las primeras que llegu√© a vivir.

Siempre fuiste un hombre trabajador, pues te sol√≠as despertar a las seis de la ma√±ana cuando a veces todav√≠a hab√≠a neblina. Por mi parte, yo me despertaba una hora despu√©s, como a las siete de la ma√±ana, y cuando no te ve√≠a, lo que hac√≠a era ir a la cocina y preguntar por ti. Casi siempre me dec√≠an que estabas orde√±ando las vacas y lo que yo hac√≠a era ir contigo para acompa√±arte hasta que terminaras tus labores de la ma√±ana hasta la hora del almuerzo.
<h2>El vestido del cabrito</h2>
Fue tambi√©n de peque√±a cuando vi por primera vez c√≥mo se mataba un cabrito, el cual ese d√≠a terminamos comiendo. No quer√≠a que mataran al cabrito de manchas caf√©s porque era muy bonito, pero creo que fue √©se al que terminaron atrapando. Cuando estaba ya muerto y le empezaste a quitar la piel te dije: no, abuelito, no le quites el vestido al cabrito...
</div></input>
<input type=""radio"" name=""radio"" id=""athec2i2""><div class=""athec2id2"">
<h2>Amabas a tus animales</h2>
El rancho era tu vida y lo amabas. Amabas a tus animales y ellos te amaban tanto a ti que, incluso recuerdo que una vez al Duque, el perro favorito del rancho y un pastor alem√°n, mientras estaba echado frente a la casa tomando una siesta, le dije tu nombre y luego mencion√© a las vacas.

Qued√© tan impresionada ese d√≠a de su comportamiento, pues despu√©s de haber dicho eso se levant√≥ tan r√°pido como un cohete y se fue corriendo hasta el corral de las vacas a buscarte. Era un perro muy listo, el m√°s trabajador de todos y siempre nos cuidaba.
<h2>Siempre te recordar√©...</h2>
Podr√≠a decir muchas cosas m√°s sobre mis memorias. A pesar de los a√±os, estoy contenta de haber vivido los √∫ltimos a√±os muy cerca de ti. S√© que no te gustaba quedarte muchos d√≠as en mi casa, pues tu vida era el rancho y no te encontrabas a ti mismo dentro de estas cuatro paredes y en esta escandalosa ciudad. ¬øQui√©n lo dir√≠a? M√°s de novena a√±os y tu segu√≠as trabajando en el rancho y haciendo tus cosas solo. 

Siempre fuiste un ave en libertad y as√≠ fue como te fuiste. Todo fue tan repentino en plena navidad, despu√©s de dos d√≠as sab√≠a lo que estaba por venir y pas√≥ todo tan r√°pido, pero estoy contenta de poder haberme despedido de ti.

Tu partida me desgarr√≥ y cuando me acuerdo de ti todav√≠a lloro, porque aunque mi consciencia est√© tranquila, s√≥lo yo s√© lo mucho que te am√© y todav√≠a me duele que no est√©s.
Gracias por todo, abuelo, o mejor dicho, Papi Gil.
</div></input>
<input type=""radio"" name=""radio"" id=""athec2i3""><div class=""athec2id3"">
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
</div></input>
<input type=""radio"" name=""radio"" id=""athec2i4""><div class=""athec2id4"">
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
</div></input>
<input type=""radio"" name=""radio"" id=""athec2i5""><div class=""athec2id5"">
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
<h2>Titulo</h2>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In ac nisi ligula. Proin venenatis, metus at iaculis congue, augue risus ornare enim, eget pretium diam arcu vitae ligula.
</div></input>
</div><a class=""athec02"" href=""https://athenea-owl.tumblr.com"">Athenea</a>
</center>

<style>.athec2, .athec2cbl, .athec2i, .athec2links{--2fondo: #f5f5dc;--2fuente: Satisfy;--2borde: #a47c48;--2boton: #6b4d2f;--2hover: #49341f;--2size: 15px;--2size1: 20px;--2texto: #dcc251;--2texto1: #666;--2gradient: linear-gradient(0deg,rgb(164 124 72) 0%, rgb(0 0 0 / 0%) 100%)}</style>
<link href=""https://dl.dropbox.com/scl/fi/rxcudggf6k2dv2w68dmvc/01.-La-Flecha-del-Castigo-Afiliaci-n-Phpbb.css?rlkey=ctzbo90s996tdqwloijgjwk1q&st=21igwewm&"" rel=""stylesheet""><link rel=""preconnect"" href=""https://fonts.googleapis.com""><link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin><link href=""https://fonts.googleapis.com/css2?family=Satisfy&display=swap"" rel=""stylesheet"">"
99kVD12H,rot_all,Python253,Python,Sunday 5th of May 2024 11:02:55 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: rot_all.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script presents users with a menu-driven interface for encrypting and decrypting text.
It employs the ROT-n algorithm where 'n' represents the user-specified rotation value for text manipulation.
Users can easily specify their desired rotation value and input text to perform encryption or decryption operations.

Functions:
    - encrypt(text, rot): Encrypts the input text using the specified rotation value.
    - decrypt(text, rot): Decrypts the input text using the specified rotation value.
    - main(): Main function that displays the menu and handles user input.

Requirements:
    - Python 3.x

Usage:
    1. Run the script.
    2. Choose from the menu options:
       - Option 1: Encrypt - Input text and rotation value, then see the encrypted text.
       - Option 2: Decrypt - Input text and rotation value, then see the decrypted text.
       - Option 3: Exit - Quit the program.

Example Output:

    ------------------------------
    :: Rot-All Menu ::

    1. Encode
    2. Decode
    3. Exit

    Enter your choice: 1

    Enter text to encode: Jeoi Reqi

    Enter rotation value (1-25) or '26' for ALL: 22

    Encoded text:

     Fake Name
    ------------------------------
    :: Rot-All Menu ::

    1. Encode
    2. Decode
    3. Exit

    Enter your choice: 2

    Enter text to decode: Fake Name

    Enter rotation value (1-25) or '26' for ALL: 22

    Decoded text:

     Jeoi Reqi
    ------------------------------
    :: Rot-All Menu ::

    1. Encode
    2. Decode
    3. Exit

    Enter your choice: 2

    Enter text to decode: Fake Name

    Enter rotation value (1-25) or '26' for ALL: 26

    Decoded text:

        ROT-1:   Gblf Obnf
        ROT-2:   Hcmg Pcog
        ROT-3:   Idnh Qdph
        ROT-4:   Jeoi Reqi
        ROT-5:   Kfpj Sfrj
        ROT-6:   Lgqk Tgsk
        ROT-7:   Mhrl Uhtl
        ROT-8:   Nism Vium
        ROT-9:   Ojtn Wjvn
        ROT-10:  Pkuo Xkwo
        ROT-11:  Qlvp Ylxp
        ROT-12:  Rmwq Zmyq
        ROT-13:  Snxr Anzr
        ROT-14:  Toys Boas
        ROT-15:  Upzt Cpbt
        ROT-16:  Vqau Dqcu
        ROT-17:  Wrbv Erdv
        ROT-18:  Xscw Fsew
        ROT-19:  Ytdx Gtfx
        ROT-20:  Zuey Hugy
        ROT-21:  Avfz Ivhz
        ROT-22:  Bwga Jwia
        ROT-23:  Cxhb Kxjb
        ROT-24:  Dyic Lykc
        ROT-25:  Ezjd Mzld

    ------------------------------
    :: Rot-All Menu ::

    1. Encode
    2. Decode
    3. Exit

    Enter your choice: 3

    Exiting Program...  GoodBye!


    ------------------------------
    
Additional Notes:
    - The rotation value should be an integer between 1 and 25.
    - Encryption and decryption are case-sensitive.
    - Non-alphabetic characters remain unchanged during encryption/decryption.
""""""

def encrypt(text, rot):
    result = ''
    if rot == 26:  # Encode with all ROT values
        for i in range(1, 26):
            result += f""\tROT-{i}:\t{encrypt(text, i)}\n""
    else:
        for char in text:
            if 'a' <= char <= 'z':
                result += chr((ord(char) - ord('a') + rot) % 26 + ord('a'))
            elif 'A' <= char <= 'Z':
                result += chr((ord(char) - ord('A') + rot) % 26 + ord('A'))
            else:
                result += char
    return result


def decrypt(text, rot):
    result = ''
    if rot == 26:  # Decode with all ROT values
        for i in range(1, 26):
            result += f""\tROT-{i}:\t{encrypt(text, i)}\n""
    else:
        for char in text:
            if 'a' <= char <= 'z':
                result += chr((ord(char) - ord('a') - rot) % 26 + ord('a'))
            elif 'A' <= char <= 'Z':
                result += chr((ord(char) - ord('A') - rot) % 26 + ord('A'))
            else:
                result += char
    return result


def main():
    while True:
        print(""-"" * 30)
        print("":: Rot-All Menu ::\n"")
        print(""1. Encode"")
        print(""2. Decode"")
        print(""3. Exit"")
        
        choice = input(""\nEnter your choice: "")

        if choice == '1':
            text = input(""\nEnter text to encode: "")
            rot = int(input(""\nEnter rotation value (1-25) or '26' for ALL: ""))
            print(""\nEncoded text:\n\n"", encrypt(text, rot))
        elif choice == '2':
            text = input(""\nEnter text to decode: "")
            rot = int(input(""\nEnter rotation value (1-25) or '26' for ALL: ""))
            print(""\nDecoded text:\n\n"", decrypt(text, rot))
        elif choice == '3':
            print(""\nExiting Program...\tGoodBye!\n\n"")
            print(""-"" * 30)
            break
        else:
            print(""\nInvalid choice! Please enter a valid option.\n"")

if __name__ == ""__main__"":
    main()

"
LjrTBK0H,Gerenciador de Senhas,MizunoBrasil,Python,Sunday 5th of May 2024 10:45:15 PM CDT,"import tkinter as tk
from tkinter import ttk, messagebox
import threading
import os
import pyperclip


class Application(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title(""Gerenciador de Senhas"")
        self.geometry(""1000x600"")

        self.create_widgets()

        # Adicionar r√≥tulo com data no canto inferior esquerdo
        self.date_label = ttk.Label(self, text=""Mizuno - 06/05/2024"")
        self.date_label.place(x=10, y=self.winfo_height() - 30)

    def create_widgets(self):
        self.tree = ttk.Treeview(self, columns=(""Site"", ""URL"", ""Login"", ""Senha""), show=""headings"")
        self.tree.heading(""Site"", text=""Site"")
        self.tree.heading(""URL"", text=""URL"")
        self.tree.heading(""Login"", text=""Login"")
        self.tree.heading(""Senha"", text=""Senha"")
        self.tree.pack(pady=10)

        self.refresh_button = ttk.Button(self, text=""Atualizar"", command=self.refresh_tree)
        self.refresh_button.pack()

        self.add_button = ttk.Button(self, text=""Adicionar"", command=self.add_entry)
        self.add_button.pack()

        self.edit_button = ttk.Button(self, text=""Editar"", command=self.edit_entry)
        self.edit_button.pack()

        self.delete_button = ttk.Button(self, text=""Excluir"", command=self.confirm_delete)
        self.delete_button.pack()

        # Carregar dados do arquivo ao iniciar
        self.load_data()

        # Adicionar menu de contexto √† √°rvore
        self.tree.bind(""<Button-3>"", self.popup_menu)

        # Centralizar janela principal
        self.center_window()

    def center_window(self):
        self.update_idletasks()
        width = self.winfo_width()
        height = self.winfo_height()
        x = (self.winfo_screenwidth() - width) // 2
        y = (self.winfo_screenheight() - height) // 2
        self.geometry('{}x{}+{}+{}'.format(width, height, x, y))

    def load_data(self):
        if os.path.exists(""dados.txt""):
            with open(""dados.txt"", ""r"") as f:
                for line in f:
                    data = line.strip().split("","")
                    self.tree.insert("""", ""end"", values=data)

    def save_data(self):
        with open(""dados.txt"", ""w"") as f:
            for item in self.tree.get_children():
                values = self.tree.item(item, ""values"")
                f.write("","".join(values) + ""\n"")

    def refresh_tree(self):
        for item in self.tree.get_children():
            self.tree.delete(item)
        self.load_data()

    def add_entry(self):
        AddEntryWindow(self)

    def edit_entry(self):
        try:
            item = self.tree.selection()[0]
            values = self.tree.item(item, ""values"")
            EditEntryWindow(self, values)
        except IndexError:
            messagebox.showerror(""Erro"", ""Selecione um registro para editar."")

    def delete_entry(self):
        selected_item = self.tree.selection()[0]
        self.tree.delete(selected_item)
        self.save_data()

    def confirm_delete(self):
        try:
            if messagebox.askyesno(""Confirmar"", ""Tem certeza que deseja excluir este registro?""):
                self.delete_entry()
        except IndexError:
            messagebox.showerror(""Erro"", ""Selecione um registro para excluir."")

    def popup_menu(self, event):
        popup_menu = tk.Menu(self, tearoff=0)
        popup_menu.add_command(label=""Copiar URL"", command=lambda: self.copy_to_clipboard(1))
        popup_menu.add_command(label=""Copiar Login"", command=lambda: self.copy_to_clipboard(2))
        popup_menu.add_command(label=""Copiar Senha"", command=lambda: self.copy_to_clipboard(3))
        popup_menu.post(event.x_root, event.y_root)

    def copy_to_clipboard(self, column_index):
        item = self.tree.selection()[0]
        value = self.tree.item(item, ""values"")[column_index]
        pyperclip.copy(value)


class AddEntryWindow(tk.Toplevel):
    def __init__(self, master):
        super().__init__(master)

        self.title(""Adicionar Registro"")
        self.geometry(""300x250"")

        self.site_label = ttk.Label(self, text=""Site:"")
        self.site_label.pack()
        self.site_entry = ttk.Entry(self)
        self.site_entry.pack()

        self.url_label = ttk.Label(self, text=""URL:"")
        self.url_label.pack()
        self.url_entry = ttk.Entry(self)
        self.url_entry.pack()

        self.login_label = ttk.Label(self, text=""Login:"")
        self.login_label.pack()
        self.login_entry = ttk.Entry(self)
        self.login_entry.pack()

        self.password_label = ttk.Label(self, text=""Senha:"")
        self.password_label.pack()
        self.password_entry = ttk.Entry(self, show=""*"")
        self.password_entry.pack()

        self.add_button = ttk.Button(self, text=""Adicionar"", command=self.add_entry)
        self.add_button.pack()

        # Centralizar janela de adicionar registro
        self.center_window()

    def center_window(self):
        self.update_idletasks()
        width = self.winfo_width()
        height = self.winfo_height()
        x = (self.winfo_screenwidth() - width) // 2
        y = (self.winfo_screenheight() - height) // 2
        self.geometry('{}x{}+{}+{}'.format(width, height, x, y))

    def add_entry(self):
        site = self.site_entry.get()
        url = self.url_entry.get()
        login = self.login_entry.get()
        password = self.password_entry.get()

        if site and url and login and password:
            self.master.tree.insert("""", ""end"", values=(site, url, login, password))
            self.master.save_data()
            self.destroy()
        else:
            messagebox.showerror(""Erro"", ""Preencha todos os campos."")


class EditEntryWindow(AddEntryWindow):
    def __init__(self, master, values):
        super().__init__(master)

        self.title(""Editar Registro"")

        self.site_entry.insert(0, values[0])
        self.url_entry.insert(0, values[1])
        self.login_entry.insert(0, values[2])
        self.password_entry.insert(0, values[3])

        self.add_button.config(text=""Salvar"")
        self.add_button.config(command=self.save_entry)

        self.values = values

        # Centralizar janela de editar registro
        self.center_window()

    def save_entry(self):
        site = self.site_entry.get()
        url = self.url_entry.get()
        login = self.login_entry.get()
        password = self.password_entry.get()

        if site and url and login and password:
            self.master.tree.item(self.master.tree.selection(), values=(site, url, login, password))
            self.master.save_data()
            self.destroy()
        else:
            messagebox.showerror(""Erro"", ""Preencha todos os campos."")


def main():
    app = Application()
    app.mainloop()


if __name__ == ""__main__"":
    main()
"
MWK5TjjA,ESP32 OTA...,mudhita_triari,C++,Sunday 5th of May 2024 10:41:33 PM CDT,"#include <Arduino.h>
#include <otadrive_esp.h>
#include <WiFi.h>
#include <TensorFlowLite_ESP32.h>

const char* FW_VERSION = ""1.0.0"";
const char* TOKEN = ""TOKEN"";
const char* SSID_WIFI = ""SSID"";
const char* KATA_SANDI_WIFI = ""PASSWORD"";

unsigned long previousMillis = 0;
bool Terhubung_WiFi = false;

// Inisialisasi model TensorFlow Lite
tflite::ErrorReporter pelaporKesalahan;
const tflite::Model* model = tflite::GetModel(g_model);
tflite::MicroInterpreter interpreter(model, pelaporKesalahan);
TfLiteTensor* tensorInput = interpreter.input(0);
TfLiteTensor* tensorOutput = interpreter.output(0);

// Inisialisasi OTA
OTADRIVE otaDrive;

// Fungsi tangani kesalahan
void penanganan_kesalahan(const char* pesan) {
    Serial.print(""Ups! Ada masalah: "");
    Serial.println(pesan);
    if (strcmp(pesan, ""Gagal update"") == 0) {
        otaDrive.rollbackFirmware(); // Jika gagal update firmware, kembali ke versi sebelumnya
    }
}

void onProsesUpdate(int progress, int totalt) {
    Serial.print(""*"");
}

void menghubungkan_WiFi() {
    WiFi.begin(SSID_WIFI, KATA_SANDI_WIFI);
    Serial.print(""Menghubungkan ke WiFi"");
    for (int i = 0; i < 20 && WiFi.status() != WL_CONNECTED; ++i) {
        delay(500);
        Serial.print(""."");
    }
    if (WiFi.status() == WL_CONNECTED) {
        Serial.println(""\nWiFi terhubung!"");
        Terhubung_WiFi = true;
    } else {
        penanganan_kesalahan(""Koneksi WiFi gagal"");
    }
}

void setup() {
    Serial.begin(115200);
    pinMode(LED_BUILTIN, OUTPUT);

    // Inisialisasi OTA
    otaDrive.setInfo(TOKEN, String(""v@"") + FW_VERSION);
    otaDrive.onUpdateFirmwareProgress(onProsesUpdate);

    // Inisialisasi TensorFlow Lite interpreter
    interpreter.AllocateTensors();
}

void Jalankan_Sinkronisasi() {
    if (!Terhubung_WiFi) {
        menghubungkan_WiFi();
        if (!Terhubung_WiFi) {
            penanganan_kesalahan(""Gagal sambung ke WiFi"");
            return;
        }
    }

    if (otaDrive.isUpdateAvailable()) {
        Serial.println(""Ada update OTA tersedia. Mulai update..."");
        if (otaDrive.updateFirmware()) {
            Serial.println(""Update selesai"");
        } else {
            Serial.println(""Update gagal"");
            penanganan_kesalahan(""Update gagal"");
        }
    } else {
        Serial.println(""Tidak ada update OTA yang tersedia"");
    }
}

void loop() {
    unsigned long waktu = millis();
    if (waktu - previousMillis >= 2200) {
        previousMillis = waktu;
        digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));

        float dataInput[3] = {
            WiFi.RSSI(), 
            otaDrive.getUpdateSize(), 
            waktu - previousMillis
        };

        memcpy(tensorInput->data.f, dataInput, sizeof(dataInput));
        interpreter.Invoke();

        float dataOutput[1];
        memcpy(dataOutput, tensorOutput->data.f, sizeof(dataOutput));

        if (dataOutput[0] > 0.5) {
            Jalankan_Sinkronisasi();
        }
    }
}
"
4tX97keW,Another Life,meromerc,HTML,Sunday 5th of May 2024 10:30:42 PM CDT,"<!--
    
    ANOTHER LIFE
    by meromercury
    
    accent color: primary
    ctrl + f to replace
    
    created and released 5/5/24
   
-->

<div class=""align-items-center"" style=""font-family:tahoma; font-size:12px;"">
    <div class=""container col-sm-4 p-0""><div class=""card"" style=""border-width:4px; box-shadow: 2px 2px 4px rgba(0,0,0,0.5)"">
        
        <div class=""card-header font-weight-bold text-primary justify-content-between p-0"" style=""font-size:15px;"">
            <div class=""p-1""><i class=""fa-solid fa-user fa-sm mx-1""></i>
            
            <!----- USERNAME ----->
            USER
            </div>
            <div><a href=""https://toyhou.se/meromercury"" class=""text-primary"" target=_blank><div class=""btn pull-right p-1"" style=""width:30px"" data-toggle=""tooltip"" title=""made by mero"">
            <i class=""fa-solid fa-code fa-sm""></i>
            </div></a></div>
        </div>
        <div class=""row no-gutters"">
            <div class=""col p-1"">
                
                <!------- IMAGE - WILL BE ADJUSTED AUTOMATICALLY ------->
                <img src=""
                IMG URL
                "" style=""width:100%; height:100%"">
            </div>
            <div class=""col-9 text-muted"">
                <div class=""p-1 text-center"" style=""line-height:20px; font-size:11px; letter-spacing:0.04rem; height:30px; overflow:hidden;"">
                
                <!-------
                TEXT BOX 1:
                Use this for pronouns, age, pride flags, or whatever you want!
                This box DOES NOT SCROLL, so keep it to one line only.
                ------->
                
                    pro/nouns
                    <span class=""mx-2"">‚Ä¢</span>
                    age
                    <span class=""mx-2"">‚Ä¢</span>
                    timezone
                    <!----- You can add your pride flags here if you want.. Maximum of 3. See here: https://toyhou.se/16962387.html-pride-flags ----->
                    <!----- And if you want to add more dividers, copy and paste the <span>...</span> code above this line. ----->
                    
                    <!----- FOR BLINKIES:
                    REMOVE the lines above this (up to pronouns) and paste this code instead:
                    
                    <img src=""IMG URL"">
                    <img src=""IMG URL"">
                    
                    Then replace the IMG URL with the image url to your blinkie.
                    You can have up to TWO blinkies. If you want more than two blinkies, add them to the box below instead.
                    Keep in mind that the second blinkie will be hidden on some mobile devices.
                    ----->
                    
                <!----- END TEXT BOX 1 ----->
                </div>
                
                <hr class=""mt-0 mb-1"">
                
                <div class=""p-1 font-italic text-center table-responsive"" style=""height:90px; letter-spacing:0.04rem"">
                    
                    <!-------
                    TEXT BOX 2:
                    Use this for additional text or stamps.
                    Don't forget to wrap your text in <p> paragraph tags </p> so it doesn't get bunched together.
                    This box scrolls, but for aesthetic purposes, I recommend keeping it short. That means up to THREE stamps.
                    ------->					
                   
                   
                   <p> Guess I'll see you in another life... </p>
                   
                   
                    <!-----	To use stamps, add this code above:
                    <img src=""IMG URL"">
                    and replace IMG URL with the image url of your stamp. ----->
                    
                <!----- END TEXT BOX 2 ----->
                </div>
            </div>
        </div>
        <div class=""card-footer p-0 text-muted align-items-center justify-content-between"" style=""display:flex"">
        <div class=""align-items-center"">
            <div class=""melody-embed btn text-primary p-1"">
                    <iframe frameborder=""0"" style=""z-index:999;height:20px;width:35px;opacity:0.0001;position:absolute;""
                      
                      src=""https://www.youtube.com/embed/pmyTi8JebD4"">
                      <!-------
                      MUSIC PLAYER TUTORIAL
                      
                      1. in the link to your youtube video, copy everything after watch?v=
                      2. replace the jumble of letters after /embed/ with what you just copied
                      
                      remember to keep the ""QUOTATION MARKS"" around the entire link or else it could break.
                      ------->
                     </iframe>
                <i class=""fa-solid fa-play-pause mx-2""></i>
              </div>
            <span class=""text-primary"">Now Playing:</span></div>
            
            <div class=""fa-fade font-italic pull-right p-1 mr-1"" style=""letter-spacing:0.04rem; text-shadow: 2px 2px 4px rgba(0,0,0,0.5)"">
            <!----- SONG TITLE ----->
            ANOTHER LIFE (ft. Rema) . . . PinkPantheress
            </div>
        </div>
    </div>
</div></div>"
PKd1KPcm,01. La Flecha del Castigo | Afiliaci√≥n,Athenea-Owl,HTML,Sunday 5th of May 2024 10:06:48 PM CDT,"---------LA FLECHA DEL CASTIGO | AFILIACI√ìN PARA FORO MODERNBB----------

<center><div class=""athepa1""><div class=""athepa1i"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)"">La Flecha del Castigo</div><div class=""athepa1l""><a href=""LINK"">Foro</a><a href=""LINK"">Reglamento</a><a href=""LINK"">Afiliaciones</a></div><div class=""athepa1s""><i class=""fas fa-book""></i> Ambientaci√≥n </div><div class=""athepa1t"">
<b>L</b>orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, <i>quis nostrud exercitation</i> ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."" <a href=""/"">Leer m√°s...</a>

</div><div class=""athepa1s""><i class=""fas fa-users-cog""></i> Administraci√≥n </div><div class=""athepa1ta"">
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Administrador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Administrador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Moderador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Moderador</b></a></div>
</div><div class=""athepa1s""><i class=""fas fa-stop""></i> Botones </div><div class=""athepa1tb"">
<b>T</b>us botones aqu√≠...
</div></div><div class=""athec1""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f81/19/51/91/06/logoat10.png""/><br/>Athenea</a></div></center>

<style>.athepa1{--1fondo: #1F2126;--1borde: #090A0D;--1titulo: #fff;--1textos: #734D8C;--1textoc: #5F6A73;} .athepa1{width: 600px;height: auto;background-color: var(--1fondo);border: 50px solid var(--1borde);} .athepa1i{width: 500px;height: 200px;background-position: center;background-size: cover;font-family: 'Kings';font-size: 50px;padding-top: 17%;text-shadow: 4px 0px 10px var(--1textos);color: var(--1titulo);} .athepa1l{background-color: var(--1fondo);width: 100%;height: 50px;text-align: center;justify-content: space-around;display: flex;text-decoration: none;} .athepa1l a{color: var(--1titulo);position: relative;top: 30%;font-family: calibri;font-size: 10px;text-transform: uppercase;background-color: var(--1textos);width: 100px;height: 20px;letter-spacing: 2px;padding: 2px;text-decoration: none;} .athepa1s{background-color: var(--1textos);width: 100%;height: 50px;text-align: left;font-family: 'Kings';font-size: 20px;padding-top: 3%;letter-spacing: 4px;padding-left: 5%;color: var(--1titulo);} .athepa1t, .athepa1tb{text-align: justify;padding: 20px;font-family: Times New Roman;font-size: 12px;color: var(--1textoc);} .athepa1t b, .athepa1tb b{font-family: 'Kings';font-size: 25px;color: var(--1textos);font-style: italic;text-transform: capitalize;width: 25px;height: 25px;display: inline-block;border-left: 4px solid var(--1textos);padding: 4px;margin-right: 4px;} .athepa1a{width: 100px;height: 100px;border: 4px solid var(--1textos);margin: 4px;background-position: center;background-size: cover;} .athepa1ta{text-align: center;padding: 20px;font-family: Times New Roman;font-size: 12px;color: var(--1textoc);display: flex;justify-content: space-around;} .athepa1a a{background-color: var(--1textos);color: var(--1titulo);padding: 2px;position: relative;top: 60%;text-align: center;width: 100%;height: 22px;display: block;font-family: 'Kings';font-size: 12px;text-transform: capitalize;letter-spacing: 1px;text-decoration: none;} .athepa1a a b{font-family: calibri;font-size: 8px;text-transform: uppercase;font-weight: normal;background-color: var(--1borde);display: block;width: 106%;position: relative;left: -2px;height: 100%;} .athepa1t a{color: var(--1textos);font-style: italic;border-left: 2px solid var(--1textos);padding-left: 4px;font-weight: bold;text-decoration: none;} .athepa1t i{color: var(--1textos);font-weight: bold;} .athepa1tb i{color: var(--1textos);font-weight: bold;} .athepa1l a:hover{text-decoration: none!important;} .athepa1a a:hover{text-decoration: none!important;} .athec1{width: 100px;height: 25px;} .athec1 a{font-family: calibri;text-align: center;text-transform: lowercase;font-size: 10px;letter-spacing: 2px;text-decoration: none;} .athec1 a:hover{text-decoration: none!important;} .athec1 img{width:25px;height: 25px;} .athepa1t a:hover{text-decoration: none!important;} @font-face {font-family: 'Kings';font-style: normal;font-weight: 400;font-display: swap;src: url(https://fonts.gstatic.com/s/kings/v7/8AtnGsK4O5CYXX_BoaCiPQ.woff2) format('woff2');unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;} @font-face {font-family: 'Kings';font-style: normal;font-weight: 400;font-display: swap;src: url(https://fonts.gstatic.com/s/kings/v7/8AtnGsK4O5CYXX_PoaA.woff2) format('woff2');unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;}</style><link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous"">

---------LA FLECHA DEL CASTIGO | AFILIACI√ìN PARA FORO PHPBB----------

<center><div class=""athepa1""><div class=""athepa1i"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)"">La Flecha del Castigo</div><div class=""athepa1l""><a href=""LINK"">Foro</a><a href=""LINK"">Reglamento</a><a href=""LINK"">Afiliaciones</a></div><div class=""athepa1s""><i class=""fas fa-book""></i> Ambientaci√≥n </div><div class=""athepa1t"">
<b>L</b>orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, <i>quis nostrud exercitation</i> ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."" <a href=""/"">Leer m√°s...</a>

</div><div class=""athepa1s""><i class=""fas fa-users-cog""></i> Administraci√≥n </div><div class=""athepa1ta"">
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Administrador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Administrador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Moderador</b></a></div>
<div class=""athepa1a"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/80fca410.jpg)""><a href=""LINK"">Nombre<b>Moderador</b></a></div>
</div><div class=""athepa1s""><i class=""fas fa-stop""></i> Botones </div><div class=""athepa1tb"">
<b>T</b>us botones aqu√≠...
</div></div><div class=""athec1""><a href=""https://athenea-owl.tumblr.com""><img src=""https://i.servimg.com/u/f81/19/51/91/06/logoat10.png""/><br/>Athenea</a></center>


<link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous"">
<style>.athepa1{--1fondo: #1F2126;--1borde: #090A0D;--1titulo: #fff;--1textos: #734D8C;--1textoc: #5F6A73;} .athepa1{width: 500px;height: auto;background-color: var(--1fondo);border: 50px solid var(--1borde);} .athepa1i{width: 500px;height: 100px;background-position: center;background-size: cover;font-family: 'Kings';font-size: 50px;padding-top: 17%;text-shadow: 4px 0px 10px var(--1textos);color: var(--1titulo);} .athepa1l{background-color: var(--1fondo);width: 100%;height: 50px;text-align: center;justify-content: space-around;display: flex;} .athepa1l a{color: var(--1titulo);position: relative;top: 30%;font-family: calibri;font-size: 10px;text-transform: uppercase;background-color: var(--1textos);width: 100px;height: 20px;letter-spacing: 2px;padding: 2px;text-decoration: none;} .athepa1s{background-color: var(--1textos);width: 95%;height: 30px;text-align: left;font-family: 'Kings';font-size: 20px;padding-top: 3%;letter-spacing: 4px;padding-left: 5%;color: var(--1titulo);} .athepa1t, .athepa1tb{text-align: justify;padding: 20px;font-family: Times New Roman;font-size: 12px;color: var(--1textoc);} .athepa1t b, .athepa1tb b{font-family: 'Kings';font-size: 25px;color: var(--1textos);font-style: italic;text-transform: capitalize;width: 25px;height: 25px;display: inline-block;border-left: 4px solid var(--1textos);padding: 4px;margin-right: 4px;} .athepa1a{width: 100px;height: 100px;border: 4px solid var(--1textos);margin: 4px;background-position: center;background-size: cover;} .athepa1ta{text-align: center;padding: 20px;font-family: Times New Roman;font-size: 12px;color: var(--1textoc);display: flex;justify-content: space-around;} .athepa1a a{background-color: var(--1textos);color: var(--1titulo);padding: 2px;position: relative;top: 60%;text-align: center;width: 100%;height: 22px;display: block;font-family: 'Kings';font-size: 12px;text-transform: capitalize;letter-spacing: 1px;text-decoration: none;} .athepa1a a b{font-family: calibri;font-size: 8px;text-transform: uppercase;font-weight: normal;background-color: var(--1borde);display: block;width: 106%;position: relative;left: -5px;height: 100%;} .athepa1t a{color: var(--1textos);font-style: italic;border-left: 2px solid var(--1textos);padding-left: 4px;font-weight: bold;text-decoration: none;} .athepa1t i{color: var(--1textos);font-weight: bold;} .athepa1tb i{color: var(--1textos);font-weight: bold;} .athepa1l a:hover{text-decoration: none!important;} .athepa1a a:hover{text-decoration: none!important;} .athec1{width: 100px;height: 25px;} .athec1 a{font-family: calibri;text-align: center;text-transform: lowercase;font-size: 10px;letter-spacing: 2px;text-decoration: none;} .athec1 a:hover{text-decoration: none!important;} .athec1 img{width:25px;height: 25px;} .athepa1t a:hover{text-decoration: none!important;} @font-face {font-family: 'Kings';font-style: normal;font-weight: 400;font-display: swap;src: url(https://fonts.gstatic.com/s/kings/v7/8AtnGsK4O5CYXX_BoaCiPQ.woff2) format('woff2');unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;} @font-face {font-family: 'Kings';font-style: normal;font-weight: 400;font-display: swap;src: url(https://fonts.gstatic.com/s/kings/v7/8AtnGsK4O5CYXX_PoaA.woff2) format('woff2');unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;}</style>"
6qmDBPLh,Asteroid Collision,jayati,C++,Sunday 5th of May 2024 10:01:10 PM CDT,"class Solution {
public:
    vector<int> asteroidCollision(vector<int>& asteroids) {
        stack<int> s;
        for(int x:asteroids)
        {
            bool f=true;
            if(x>0)
            {
                s.push(x);
            }
            else
            {
                while(!s.empty())
                {
                    int y=s.top();
                    if(y<0)
                    {
                        break;
                    }
                    else
                    {
                        if(x+y==0)
                        {
                            s.pop();
                            f=false;;
                            break;
                        }
                        else if(x+y<0)
                        {
                            s.pop();
                        }
                        else
                        {
                            f=false;
                            break;
                        }
                    }


                }
                if(f)
                {
                    s.push(x);
                }
               
            }
        }
        int n=s.size();
        vector<int> ans(n);
        for(int i=n-1; i>=0; i--){
            ans[i]=s.top();
            s.pop();
        }
        return ans;
    }
};"
2MfeFH4v,guessnummodified,Ad009,Python,Sunday 5th of May 2024 09:19:39 PM CDT,"import random #import random library


dl= input('Enter Difficulty Level for guess the number game!:\n E for easy, M for medium, H for Hard, B for Blindfold Hard mode(No hints)') #Selects Difficulty level

if dl=='E' or dl== 'e':
    maxn = 10
    n = random.randint(1, maxn)
    print('Welcome to guess the number game: Easy mode!')
    print('Guess the number from 1 to %d' % maxn)
    guess = None
    while guess != n:
        guess = int(input('Your try: '))
        if guess > n:
            print('Too high')
        if guess < n:
            print('Too low')
        if guess==n:
            print('Congratulations, You won!')


elif dl=='M' or dl== 'm':
    maxn = 50
    n = random.randint(1, maxn)
    print('Welcome to guess the number game: Medium mode!')
    print('Guess the number from 1 to %d' % maxn)
    guess = None
    while guess != n:
        guess = int(input('Your try: '))
        if guess > n:
            print('Too high')
        if guess < n:
            print('Too low')
        if guess==n:
            print('Congratulations, You won!')
            
elif dl == 'H' or dl== 'h':
    maxn = 100
    n = random.randint(1, maxn)
    print('Welcome to guess the number game: Hard mode!')
    print('Guess the number from 1 to %d' % maxn)
    guess = None
    while guess != n:
        guess = int(input('Your try: '))
        if guess > n:
            print('Too high')
        if guess < n:
            print('Too low')
        if guess==n:
            print('Congratulations, You won!')

elif dl=='B':
    maxn = 100
    n = random.randint(1, maxn)
    print('Welcome to guess the number game: Blindfold Hard mode!')
    print('Guess the number from 1 to %d' % maxn)
    guess = None
    while guess != n:
        guess = int(input('Your try: '))
        if guess==n:
            print('Congratulations, You won!')
else:
    print('Please enter a valid letter for difficulty level')"
8MKnvpWP,nytimes soduko auto solver,ConcealedReal,JavaScript,Sunday 5th of May 2024 08:28:07 PM CDT,"// ==UserScript==
// @name         NYTimes Sudoku Auto Solver
// @namespace    http://tampermonkey.net/
// @version      Beta
// @description  Automatically solves the Sudoku for you on nytimes.com
// @author       Splxff
// @match        https://www.nytimes.com/puzzles/sudoku*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=nytimes.com
// @grant        none
// ==/UserScript==

! function () {
    function e() {
        if (document.querySelector(""[data-cell]"")) {
            var t = [];

            function o(e) {
                for (let t = 0; t < 9; t++) console.log(e[t].join("" ""))
            }

            function r(e, t, o, r) {
                for (let o = 0; o < 9; o++)
                    if (e[t][o] === r) return !1;
                for (let t = 0; t < 9; t++)
                    if (e[t][o] === r) return !1;
                const l = 3 * Math.floor(t / 3)
                    , n = 3 * Math.floor(o / 3);
                for (let t = l; t < l + 3; t++)
                    for (let o = n; o < n + 3; o++)
                        if (e[t][o] === r) return !1;
                return !0
            }
            document.querySelectorAll(""[data-cell]"")
                .forEach(((e, o) => {
                    const r = Math.floor(o / 9);
                    t[r] ? t[r].length < 9 && t[r].push(parseInt(isNaN(e.getAttribute(""aria-label"")) ? 0 : e.getAttribute(""aria-label""))) : t[r] = [parseInt(isNaN(e.getAttribute(""aria-label"")) ? 0 : e.getAttribute(""aria-label""))], 80 === o && t.forEach(((e, t) => {
                        for (; e.length < 9;) e.push(0)
                    }))
                })), console.log(""Sudoku before solving:""), o(t), console.log(""\nSudoku after solving:""), ! function e(t) {
                    for (let o = 0; o < 9; o++)
                        for (let l = 0; l < 9; l++)
                            if (0 === t[o][l]) {
                                for (let n = 1; n <= 9; n++)
                                    if (r(t, o, l, n)) {
                                        if (t[o][l] = n, e(t)) return !0;
                                        t[o][l] = 0
                                    } return !1
                            } return !0
                }(t) ? console.log(""No solution exists for the given Sudoku."") : o(t), Array.from(document.querySelectorAll(""[data-cell]""))
                .forEach(((e, o) => {
                    o--, setTimeout((() => {
                        e.click();
                        var r = t[Math.floor(o / 9)][o % 9]
                            , l = Array.from(document.querySelectorAll(""svg""))
                            .filter((e => e.getAttribute(""number"") == r.toString()));
                        l[l.length - 1].dispatchEvent(new MouseEvent(""click"", {
                            bubbles: !0
                        }))
                    }), 1 * o)
                }))
        } else setTimeout((() => {
            e()
        }), 2e3)
    }
    document.querySelector(""[data-cell]"") ? e() : setTimeout((() => {
        e()
    }), 2e3)
}();"
VtYXx9i1,ü§ë G2A.com Free Gift Card Guide May 2024 FIX üí∞,ssss50w,GetText,Sunday 5th of May 2024 07:25:58 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
06 May 2024"
5e9dx6eS,2024-05-05_stats.json,rdp_snitch,JSON,Sunday 5th of May 2024 07:18:14 PM CDT,"{
  ""ip"": {
    ""123.31.20.85"": 78,
    ""194.165.16.11"": 12,
    ""120.89.61.36"": 18,
    ""167.94.138.119"": 3,
    ""103.232.53.123"": 6,
    ""80.94.95.114"": 18,
    ""210.211.117.165"": 6,
    ""199.45.154.75"": 3,
    ""152.32.183.213"": 294,
    ""185.161.248.121"": 6,
    ""45.118.133.109"": 12,
    ""198.235.24.228"": 9,
    ""87.251.75.64"": 3,
    ""87.251.75.145"": 6,
    ""185.170.144.3"": 6,
    ""103.238.234.199"": 3,
    ""185.196.220.41"": 9,
    ""58.218.204.183"": 3,
    ""159.223.34.114"": 3,
    ""193.142.146.227"": 9,
    ""194.28.115.243"": 9,
    ""165.154.32.235"": 3,
    ""205.210.31.216"": 9,
    ""45.227.254.49"": 6,
    ""147.182.145.21"": 9,
    ""123.56.20.194"": 21,
    ""164.70.86.10"": 6,
    ""185.20.197.102"": 6,
    ""64.124.50.139"": 6,
    ""112.4.139.162"": 3,
    ""194.165.16.73"": 6,
    ""142.93.236.84"": 1989,
    ""116.140.196.215"": 3,
    ""36.91.222.100"": 6,
    ""188.119.66.112"": 3,
    ""192.53.118.129"": 96,
    ""172.105.117.227"": 3,
    ""198.235.24.164"": 9,
    ""99.229.172.242"": 3,
    ""27.8.44.19"": 3,
    ""167.94.146.58"": 3,
    ""203.160.55.91"": 12837,
    ""195.181.174.229"": 3,
    ""107.167.82.123"": 3,
    ""185.170.144.113"": 9,
    ""198.235.24.104"": 9,
    ""198.135.49.131"": 3
  },
  ""asn"": {
    ""AS45899"": 78,
    ""AS48721"": 18,
    ""AS9658"": 18,
    ""AS398324"": 3,
    ""AS63737"": 6,
    ""AS204428"": 18,
    ""AS38731"": 6,
    ""AS398722"": 3,
    ""AS135377"": 297,
    ""AS49202"": 6,
    ""AS63949"": 111,
    ""AS396982"": 36,
    ""AS208091"": 9,
    ""AS197414"": 15,
    ""AS140810"": 3,
    ""AS208046"": 18,
    ""AS4134"": 3,
    ""AS14061"": 2001,
    ""AS50968"": 9,
    ""AS267784"": 6,
    ""AS37963"": 21,
    ""AS2514"": 6,
    ""AS203217"": 6,
    ""AS6461"": 6,
    ""AS56046"": 3,
    ""AS4837"": 6,
    ""AS7713"": 6,
    ""AS57523"": 3,
    ""AS812"": 3,
    ""AS398705"": 3,
    ""AS55933"": 12837,
    ""AS60068"": 3,
    ""AS53755"": 3,
    ""AS396073"": 3
  },
  ""isp"": {
    ""VietNam Post and Telecom Corporation"": 78,
    ""Flyservers S.A."": 24,
    ""Eastern Telecommunications Philippines, Inc."": 18,
    ""Censys, Inc."": 9,
    ""VIETSERVER"": 6,
    ""SS-Net"": 18,
    ""VTDC"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 297,
    ""Kisara LLC"": 6,
    ""Akamai Technologies, Inc."": 108,
    ""Google LLC"": 36,
    ""Xhost Internet Solutions LP"": 24,
    ""MAYTINHVPSTTT"": 3,
    ""ColocationX Ltd."": 18,
    ""Chinanet"": 3,
    ""DigitalOcean, LLC"": 2001,
    ""Hostmaster, Ltd."": 9,
    ""Hangzhou Alibaba Advertising Co"": 21,
    ""InfoSphere"": 6,
    ""Horizon Scope Mobile Telecom WLL"": 6,
    ""Zayo Bandwidth"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""China Unicom CHINA169 Network"": 3,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Akamai Technologies"": 3,
    ""Rogers Communications Canada Inc."": 3,
    ""China Unicom Chongqing Province Network"": 3,
    ""Cloudie Limited"": 12837,
    ""DataCamp Limited"": 3,
    ""Input Output Flood LLC"": 3,
    ""Majestic Hosting Solutions, LLC"": 3
  },
  ""org"": {
    ""Vietnam Posts and Telecommunications Group"": 78,
    ""Flyservers S.A"": 18,
    ""Eastern Telecommunications Philippines, Inc"": 18,
    ""Censys, Inc"": 3,
    ""VietServer Services technology company limited"": 6,
    ""Unmanaged LTD"": 18,
    ""Viettel - CHT Company Ltd"": 6,
    ""Censys, Inc."": 6,
    ""Ucloud Information Technology"": 294,
    ""Kisara LLC"": 6,
    ""Linode"": 15,
    ""Palo Alto Networks, Inc"": 36,
    ""Xhost Internet Solutions"": 9,
    ""Xhostis"": 15,
    ""Vpsttt Computer Company Limited"": 3,
    ""Makut Investments"": 9,
    ""Chinanet JS"": 3,
    ""DigitalOcean, LLC"": 2001,
    ""ColocationX Ltd"": 9,
    ""Network Systems Ltd"": 9,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""UAB Host Baltic"": 6,
    ""Aliyun Computing Co., LTD"": 21,
    ""NTTPC Communications, Inc"": 6,
    ""Horizon Scope Mobile Telecom WLL"": 6,
    ""Microsoft Corporation"": 6,
    ""China Mobile Communications Corporation"": 3,
    ""China United Network Communications Corporation Limited"": 3,
    ""Telekomunikasi Indonesia"": 6,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Linode, LLC"": 96,
    ""Rogers Communications Canada Inc"": 3,
    ""Unknown"": 3,
    ""Cloudie Limited"": 12837,
    ""CDN77 - Frankfurt POP"": 3,
    ""DemonVPS"": 3,
    ""Majestic Hosting Solutions, LLC"": 3
  },
  ""regionName"": {
    ""Hanoi"": 84,
    ""Kaunas"": 18,
    ""Metro Manila"": 21,
    ""Michigan"": 3,
    ""Budapest"": 18,
    ""Ho Chi Minh"": 9,
    ""New York"": 3,
    ""Virginia"": 309,
    ""Moscow"": 9,
    ""Central Singapore"": 15,
    ""California"": 36,
    ""North Holland"": 2031,
    ""Jiangsu"": 6,
    ""Vilnius"": 6,
    ""Ontario"": 12,
    ""Beijing"": 24,
    ""Tokyo"": 6,
    ""Baghdad"": 6,
    ""Jakarta"": 6,
    ""North West"": 99,
    ""Chongqing"": 3,
    ""Hesse"": 6,
    ""Central and Western District"": 12837,
    ""Arizona"": 3,
    ""Texas"": 3
  },
  ""country"": {
    ""Vietnam"": 93,
    ""Lithuania"": 24,
    ""Philippines"": 21,
    ""United States"": 357,
    ""Hungary"": 18,
    ""Russia"": 9,
    ""Singapore"": 114,
    ""The Netherlands"": 2031,
    ""China"": 33,
    ""Canada"": 12,
    ""Japan"": 6,
    ""Iraq"": 6,
    ""Indonesia"": 6,
    ""Germany"": 6,
    ""Hong Kong"": 12837
  },
  ""account"": {
    ""hello"": 183,
    ""Test"": 45,
    ""(empty)"": 15,
    ""Domain"": 54,
    ""Administrator"": 297,
    ""Admin"": 282,
    ""Whatuptime.com"": 315,
    ""Jakartakini123#"": 291,
    ""Hello World"": 309,
    ""TinHocThucHanh"": 294,
    ""Hey"": 342,
    ""TqdafELom"": 3,
    ""CKAsav"": 3,
    ""AZWnqK"": 3,
    ""Administr"": 21,
    ""MvRwHglTn"": 3,
    ""pHmxLi"": 3,
    ""MUonti"": 3,
    ""John"": 252,
    ""vdTdHyjXT"": 3,
    ""RGhzvr"": 3,
    ""rTwGRL"": 3,
    ""2963199753"": 12837,
    ""CozHFkLCR"": 3,
    ""gihvaI"": 3,
    ""ssagXe"": 3
  },
  ""keyboard"": {
    ""Unknown"": 15573
  },
  ""client_build"": {
    ""Unknown"": 15573
  },
  ""client_name"": {
    ""Unknown"": 15573
  },
  ""ip_type"": {
    ""Unknown"": 198,
    ""proxy"": 30,
    ""hosting"": 15312,
    ""mobile"": 18,
    ""hosting & proxy"": 15
  }
}"
x9XQmYCq,2024-05-05_stats.json,rdp_snitch,JSON,Sunday 5th of May 2024 07:16:06 PM CDT,"{
  ""ip"": {
    ""123.31.20.85"": 52,
    ""194.165.16.11"": 8,
    ""120.89.61.36"": 12,
    ""167.94.138.119"": 2,
    ""103.232.53.123"": 4,
    ""80.94.95.114"": 12,
    ""210.211.117.165"": 4,
    ""199.45.154.75"": 2,
    ""152.32.183.213"": 196,
    ""185.161.248.121"": 4,
    ""45.118.133.109"": 8,
    ""198.235.24.228"": 6,
    ""87.251.75.64"": 2,
    ""87.251.75.145"": 4,
    ""185.170.144.3"": 4,
    ""103.238.234.199"": 2,
    ""185.196.220.41"": 6,
    ""58.218.204.183"": 2,
    ""159.223.34.114"": 2,
    ""193.142.146.227"": 6,
    ""194.28.115.243"": 6,
    ""165.154.32.235"": 2,
    ""205.210.31.216"": 6,
    ""45.227.254.49"": 4,
    ""147.182.145.21"": 6,
    ""123.56.20.194"": 14,
    ""164.70.86.10"": 4,
    ""185.20.197.102"": 4,
    ""64.124.50.139"": 4,
    ""112.4.139.162"": 2,
    ""194.165.16.73"": 4,
    ""142.93.236.84"": 1326,
    ""116.140.196.215"": 2,
    ""36.91.222.100"": 4,
    ""188.119.66.112"": 2,
    ""192.53.118.129"": 64,
    ""172.105.117.227"": 2,
    ""198.235.24.164"": 6,
    ""99.229.172.242"": 2,
    ""27.8.44.19"": 2,
    ""167.94.146.58"": 2,
    ""203.160.55.91"": 8558,
    ""195.181.174.229"": 2,
    ""107.167.82.123"": 2,
    ""185.170.144.113"": 6,
    ""198.235.24.104"": 6,
    ""198.135.49.131"": 2
  },
  ""asn"": {
    ""AS45899"": 52,
    ""AS48721"": 12,
    ""AS9658"": 12,
    ""AS398324"": 2,
    ""AS63737"": 4,
    ""AS204428"": 12,
    ""AS38731"": 4,
    ""AS398722"": 2,
    ""AS135377"": 198,
    ""AS49202"": 4,
    ""AS63949"": 74,
    ""AS396982"": 24,
    ""AS208091"": 6,
    ""AS197414"": 10,
    ""AS140810"": 2,
    ""AS208046"": 12,
    ""AS4134"": 2,
    ""AS14061"": 1334,
    ""AS50968"": 6,
    ""AS267784"": 4,
    ""AS37963"": 14,
    ""AS2514"": 4,
    ""AS203217"": 4,
    ""AS6461"": 4,
    ""AS56046"": 2,
    ""AS4837"": 4,
    ""AS7713"": 4,
    ""AS57523"": 2,
    ""AS812"": 2,
    ""AS398705"": 2,
    ""AS55933"": 8558,
    ""AS60068"": 2,
    ""AS53755"": 2,
    ""AS396073"": 2
  },
  ""isp"": {
    ""VietNam Post and Telecom Corporation"": 52,
    ""Flyservers S.A."": 16,
    ""Eastern Telecommunications Philippines, Inc."": 12,
    ""Censys, Inc."": 6,
    ""VIETSERVER"": 4,
    ""SS-Net"": 12,
    ""VTDC"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 198,
    ""Kisara LLC"": 4,
    ""Akamai Technologies, Inc."": 72,
    ""Google LLC"": 24,
    ""Xhost Internet Solutions LP"": 16,
    ""MAYTINHVPSTTT"": 2,
    ""ColocationX Ltd."": 12,
    ""Chinanet"": 2,
    ""DigitalOcean, LLC"": 1334,
    ""Hostmaster, Ltd."": 6,
    ""Hangzhou Alibaba Advertising Co"": 14,
    ""InfoSphere"": 4,
    ""Horizon Scope Mobile Telecom WLL"": 4,
    ""Zayo Bandwidth"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""China Unicom CHINA169 Network"": 2,
    ""PT Telekomunikasi Indonesia"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Akamai Technologies"": 2,
    ""Rogers Communications Canada Inc."": 2,
    ""China Unicom Chongqing Province Network"": 2,
    ""Cloudie Limited"": 8558,
    ""DataCamp Limited"": 2,
    ""Input Output Flood LLC"": 2,
    ""Majestic Hosting Solutions, LLC"": 2
  },
  ""org"": {
    ""Vietnam Posts and Telecommunications Group"": 52,
    ""Flyservers S.A"": 12,
    ""Eastern Telecommunications Philippines, Inc"": 12,
    ""Censys, Inc"": 2,
    ""VietServer Services technology company limited"": 4,
    ""Unmanaged LTD"": 12,
    ""Viettel - CHT Company Ltd"": 4,
    ""Censys, Inc."": 4,
    ""Ucloud Information Technology"": 196,
    ""Kisara LLC"": 4,
    ""Linode"": 10,
    ""Palo Alto Networks, Inc"": 24,
    ""Xhost Internet Solutions"": 6,
    ""Xhostis"": 10,
    ""Vpsttt Computer Company Limited"": 2,
    ""Makut Investments"": 6,
    ""Chinanet JS"": 2,
    ""DigitalOcean, LLC"": 1334,
    ""ColocationX Ltd"": 6,
    ""Network Systems Ltd"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""UAB Host Baltic"": 4,
    ""Aliyun Computing Co., LTD"": 14,
    ""NTTPC Communications, Inc"": 4,
    ""Horizon Scope Mobile Telecom WLL"": 4,
    ""Microsoft Corporation"": 4,
    ""China Mobile Communications Corporation"": 2,
    ""China United Network Communications Corporation Limited"": 2,
    ""Telekomunikasi Indonesia"": 4,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Linode, LLC"": 64,
    ""Rogers Communications Canada Inc"": 2,
    ""Unknown"": 2,
    ""Cloudie Limited"": 8558,
    ""CDN77 - Frankfurt POP"": 2,
    ""DemonVPS"": 2,
    ""Majestic Hosting Solutions, LLC"": 2
  },
  ""regionName"": {
    ""Hanoi"": 56,
    ""Kaunas"": 12,
    ""Metro Manila"": 14,
    ""Michigan"": 2,
    ""Budapest"": 12,
    ""Ho Chi Minh"": 6,
    ""New York"": 2,
    ""Virginia"": 206,
    ""Moscow"": 6,
    ""Central Singapore"": 10,
    ""California"": 24,
    ""North Holland"": 1354,
    ""Jiangsu"": 4,
    ""Vilnius"": 4,
    ""Ontario"": 8,
    ""Beijing"": 16,
    ""Tokyo"": 4,
    ""Baghdad"": 4,
    ""Jakarta"": 4,
    ""North West"": 66,
    ""Chongqing"": 2,
    ""Hesse"": 4,
    ""Central and Western District"": 8558,
    ""Arizona"": 2,
    ""Texas"": 2
  },
  ""country"": {
    ""Vietnam"": 62,
    ""Lithuania"": 16,
    ""Philippines"": 14,
    ""United States"": 238,
    ""Hungary"": 12,
    ""Russia"": 6,
    ""Singapore"": 76,
    ""The Netherlands"": 1354,
    ""China"": 22,
    ""Canada"": 8,
    ""Japan"": 4,
    ""Iraq"": 4,
    ""Indonesia"": 4,
    ""Germany"": 4,
    ""Hong Kong"": 8558
  },
  ""account"": {
    ""hello"": 122,
    ""Test"": 30,
    ""(empty)"": 10,
    ""Domain"": 36,
    ""Administrator"": 198,
    ""Admin"": 188,
    ""Whatuptime.com"": 210,
    ""Jakartakini123#"": 194,
    ""Hello World"": 206,
    ""TinHocThucHanh"": 196,
    ""Hey"": 228,
    ""TqdafELom"": 2,
    ""CKAsav"": 2,
    ""AZWnqK"": 2,
    ""Administr"": 14,
    ""MvRwHglTn"": 2,
    ""pHmxLi"": 2,
    ""MUonti"": 2,
    ""John"": 168,
    ""vdTdHyjXT"": 2,
    ""RGhzvr"": 2,
    ""rTwGRL"": 2,
    ""2963199753"": 8558,
    ""CozHFkLCR"": 2,
    ""gihvaI"": 2,
    ""ssagXe"": 2
  },
  ""keyboard"": {
    ""Unknown"": 10382
  },
  ""client_build"": {
    ""Unknown"": 10382
  },
  ""client_name"": {
    ""Unknown"": 10382
  },
  ""ip_type"": {
    ""Unknown"": 132,
    ""proxy"": 20,
    ""hosting"": 10208,
    ""mobile"": 12,
    ""hosting & proxy"": 10
  }
}"
13zdRJFT,2024-05-05_stats.json,rdp_snitch,JSON,Sunday 5th of May 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""123.31.20.85"": 26,
    ""194.165.16.11"": 4,
    ""120.89.61.36"": 6,
    ""167.94.138.119"": 1,
    ""103.232.53.123"": 2,
    ""80.94.95.114"": 6,
    ""210.211.117.165"": 2,
    ""199.45.154.75"": 1,
    ""152.32.183.213"": 98,
    ""185.161.248.121"": 2,
    ""45.118.133.109"": 4,
    ""198.235.24.228"": 3,
    ""87.251.75.64"": 1,
    ""87.251.75.145"": 2,
    ""185.170.144.3"": 2,
    ""103.238.234.199"": 1,
    ""185.196.220.41"": 3,
    ""58.218.204.183"": 1,
    ""159.223.34.114"": 1,
    ""193.142.146.227"": 3,
    ""194.28.115.243"": 3,
    ""165.154.32.235"": 1,
    ""205.210.31.216"": 3,
    ""45.227.254.49"": 2,
    ""147.182.145.21"": 3,
    ""123.56.20.194"": 7,
    ""164.70.86.10"": 2,
    ""185.20.197.102"": 2,
    ""64.124.50.139"": 2,
    ""112.4.139.162"": 1,
    ""194.165.16.73"": 2,
    ""142.93.236.84"": 663,
    ""116.140.196.215"": 1,
    ""36.91.222.100"": 2,
    ""188.119.66.112"": 1,
    ""192.53.118.129"": 32,
    ""172.105.117.227"": 1,
    ""198.235.24.164"": 3,
    ""99.229.172.242"": 1,
    ""27.8.44.19"": 1,
    ""167.94.146.58"": 1,
    ""203.160.55.91"": 4279,
    ""195.181.174.229"": 1,
    ""107.167.82.123"": 1,
    ""185.170.144.113"": 3,
    ""198.235.24.104"": 3,
    ""198.135.49.131"": 1
  },
  ""asn"": {
    ""AS45899"": 26,
    ""AS48721"": 6,
    ""AS9658"": 6,
    ""AS398324"": 1,
    ""AS63737"": 2,
    ""AS204428"": 6,
    ""AS38731"": 2,
    ""AS398722"": 1,
    ""AS135377"": 99,
    ""AS49202"": 2,
    ""AS63949"": 37,
    ""AS396982"": 12,
    ""AS208091"": 3,
    ""AS197414"": 5,
    ""AS140810"": 1,
    ""AS208046"": 6,
    ""AS4134"": 1,
    ""AS14061"": 667,
    ""AS50968"": 3,
    ""AS267784"": 2,
    ""AS37963"": 7,
    ""AS2514"": 2,
    ""AS203217"": 2,
    ""AS6461"": 2,
    ""AS56046"": 1,
    ""AS4837"": 2,
    ""AS7713"": 2,
    ""AS57523"": 1,
    ""AS812"": 1,
    ""AS398705"": 1,
    ""AS55933"": 4279,
    ""AS60068"": 1,
    ""AS53755"": 1,
    ""AS396073"": 1
  },
  ""isp"": {
    ""VietNam Post and Telecom Corporation"": 26,
    ""Flyservers S.A."": 8,
    ""Eastern Telecommunications Philippines, Inc."": 6,
    ""Censys, Inc."": 3,
    ""VIETSERVER"": 2,
    ""SS-Net"": 6,
    ""VTDC"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 99,
    ""Kisara LLC"": 2,
    ""Akamai Technologies, Inc."": 36,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 8,
    ""MAYTINHVPSTTT"": 1,
    ""ColocationX Ltd."": 6,
    ""Chinanet"": 1,
    ""DigitalOcean, LLC"": 667,
    ""Hostmaster, Ltd."": 3,
    ""Hangzhou Alibaba Advertising Co"": 7,
    ""InfoSphere"": 2,
    ""Horizon Scope Mobile Telecom WLL"": 2,
    ""Zayo Bandwidth"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""China Unicom CHINA169 Network"": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Akamai Technologies"": 1,
    ""Rogers Communications Canada Inc."": 1,
    ""China Unicom Chongqing Province Network"": 1,
    ""Cloudie Limited"": 4279,
    ""DataCamp Limited"": 1,
    ""Input Output Flood LLC"": 1,
    ""Majestic Hosting Solutions, LLC"": 1
  },
  ""org"": {
    ""Vietnam Posts and Telecommunications Group"": 26,
    ""Flyservers S.A"": 6,
    ""Eastern Telecommunications Philippines, Inc"": 6,
    ""Censys, Inc"": 1,
    ""VietServer Services technology company limited"": 2,
    ""Unmanaged LTD"": 6,
    ""Viettel - CHT Company Ltd"": 2,
    ""Censys, Inc."": 2,
    ""Ucloud Information Technology"": 98,
    ""Kisara LLC"": 2,
    ""Linode"": 5,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 3,
    ""Xhostis"": 5,
    ""Vpsttt Computer Company Limited"": 1,
    ""Makut Investments"": 3,
    ""Chinanet JS"": 1,
    ""DigitalOcean, LLC"": 667,
    ""ColocationX Ltd"": 3,
    ""Network Systems Ltd"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""UAB Host Baltic"": 2,
    ""Aliyun Computing Co., LTD"": 7,
    ""NTTPC Communications, Inc"": 2,
    ""Horizon Scope Mobile Telecom WLL"": 2,
    ""Microsoft Corporation"": 2,
    ""China Mobile Communications Corporation"": 1,
    ""China United Network Communications Corporation Limited"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Chang Way Technologies Co. Limited"": 1,
    ""Linode, LLC"": 32,
    ""Rogers Communications Canada Inc"": 1,
    ""Unknown"": 1,
    ""Cloudie Limited"": 4279,
    ""CDN77 - Frankfurt POP"": 1,
    ""DemonVPS"": 1,
    ""Majestic Hosting Solutions, LLC"": 1
  },
  ""regionName"": {
    ""Hanoi"": 28,
    ""Kaunas"": 6,
    ""Metro Manila"": 7,
    ""Michigan"": 1,
    ""Budapest"": 6,
    ""Ho Chi Minh"": 3,
    ""New York"": 1,
    ""Virginia"": 103,
    ""Moscow"": 3,
    ""Central Singapore"": 5,
    ""California"": 12,
    ""North Holland"": 677,
    ""Jiangsu"": 2,
    ""Vilnius"": 2,
    ""Ontario"": 4,
    ""Beijing"": 8,
    ""Tokyo"": 2,
    ""Baghdad"": 2,
    ""Jakarta"": 2,
    ""North West"": 33,
    ""Chongqing"": 1,
    ""Hesse"": 2,
    ""Central and Western District"": 4279,
    ""Arizona"": 1,
    ""Texas"": 1
  },
  ""country"": {
    ""Vietnam"": 31,
    ""Lithuania"": 8,
    ""Philippines"": 7,
    ""United States"": 119,
    ""Hungary"": 6,
    ""Russia"": 3,
    ""Singapore"": 38,
    ""The Netherlands"": 677,
    ""China"": 11,
    ""Canada"": 4,
    ""Japan"": 2,
    ""Iraq"": 2,
    ""Indonesia"": 2,
    ""Germany"": 2,
    ""Hong Kong"": 4279
  },
  ""account"": {
    ""hello"": 61,
    ""Test"": 15,
    ""(empty)"": 5,
    ""Domain"": 18,
    ""Administrator"": 99,
    ""Admin"": 94,
    ""Whatuptime.com"": 105,
    ""Jakartakini123#"": 97,
    ""Hello World"": 103,
    ""TinHocThucHanh"": 98,
    ""Hey"": 114,
    ""TqdafELom"": 1,
    ""CKAsav"": 1,
    ""AZWnqK"": 1,
    ""Administr"": 7,
    ""MvRwHglTn"": 1,
    ""pHmxLi"": 1,
    ""MUonti"": 1,
    ""John"": 84,
    ""vdTdHyjXT"": 1,
    ""RGhzvr"": 1,
    ""rTwGRL"": 1,
    ""2963199753"": 4279,
    ""CozHFkLCR"": 1,
    ""gihvaI"": 1,
    ""ssagXe"": 1
  },
  ""keyboard"": {
    ""Unknown"": 5191
  },
  ""client_build"": {
    ""Unknown"": 5191
  },
  ""client_name"": {
    ""Unknown"": 5191
  },
  ""ip_type"": {
    ""Unknown"": 66,
    ""proxy"": 10,
    ""hosting"": 5104,
    ""mobile"": 6,
    ""hosting & proxy"": 5
  }
}"
ah3W3g81,Untitled,CyMC888,Lua,Sunday 5th of May 2024 06:32:07 PM CDT,"if not host:isHost() then return end

local panels = require('panels.main')



local main = panels.newPage('main')



--                                                              Functions

function pings.toggleGlitch(t, self)

    animations.model.glitch:setPlaying(t)

    print(t)

    if t then

        host:setActionbar('Glitch Animation : True')

    else

        host:setActionbar('Glitch Animation : False')

    end
end



panels.setPage(main)

main:newText():setText('Avatar Settings'):setSize(1.5, 1.5):setMargin(4)
main:newToggle():setText('Glitch Effect'):onToggle(pings.toggleGlitch)   "
jafVVLKv,Untitled,xaxxy0000,PHP,Sunday 5th of May 2024 06:11:11 PM CDT,"<?php
define('OAUTH2_CLIENT_ID', '');
define('OAUTH2_CLIENT_SECRET', '');
define('GUILD_ID', '');
define('BOT_TOKEN', '');

// Minimalized code
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
ini_set('max_execution_time', 300);
error_reporting(E_ALL);

function apiRequest($url, $post=FALSE, $headers=array()) {
	$ch = curl_init();
	curl_setopt_array($ch, [
		CURLOPT_URL => $url,
		CURLOPT_IPRESOLVE => CURL_IPRESOLVE_V4,
		CURLOPT_RETURNTRANSFER => TRUE,
		CURLOPT_HTTPHEADER => $headers,
	]);
	if($post) {
		curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($post));
	}
	if(session('access_token')) {
		$headers[] = 'Authorization: Bearer ' . session('access_token');
	}
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
	$response = curl_exec($ch);
	return json_decode($response, true);
}

function logout($url, $data=array()) {
		$ch = curl_init();
		curl_setopt_array($ch, [
				CURLOPT_URL => $url,
				CURLOPT_POST => TRUE,
				CURLOPT_RETURNTRANSFER => TRUE,
				CURLOPT_IPRESOLVE => CURL_IPRESOLVE_V4,
				CURLOPT_POSTFIELDS => http_build_query($data),
				CURLOPT_HTTPHEADER => ['Content-Type: application/x-www-form-urlencoded'],
		]);
		$response = curl_exec($ch);
		return json_decode($response);
}

function addGuildMember($userId, $accessToken) {
		$headers = [
				""Authorization: Bot "".BOT_TOKEN,
				""Content-Type: application/json""
		];
		$data = [
				""access_token"" => $accessToken
		];
		$dataString = json_encode($data);
		$ch = curl_init();
		curl_setopt_array($ch, [
				CURLOPT_URL => ""https://discord.com/api/v9/guilds/"".GUILD_ID.""/members/{$userId}"",
				CURLOPT_CUSTOMREQUEST => ""PUT"",
				CURLOPT_POSTFIELDS => $dataString,
				CURLOPT_RETURNTRANSFER => true,
				CURLOPT_HTTPHEADER => $headers,
		]);
		$result = curl_exec($ch);
		$statusCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
		curl_close($ch);
	return $statusCode;
}

function get($key, $default=NULL) {
	return array_key_exists($key, $_GET) ? $_GET[$key] : $default;
}

function session($key, $default=NULL) {
	return array_key_exists($key, $_SESSION) ? $_SESSION[$key] : $default;
}
function getSessionCookies() {
    $url = 'https:///auth/session';
    $data = array(
        'username' => '',
        'password' => ''
    );
    $ch = curl_init();
    curl_setopt_array($ch, array(
        CURLOPT_URL => $url,
        CURLOPT_POST => 1,
        CURLOPT_POSTFIELDS => json_encode($data),
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_HEADER => true,
        CURLOPT_SSL_VERIFYHOST => 0,
        CURLOPT_SSL_VERIFYPEER => 0,
        CURLOPT_HTTPHEADER => array(
            'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0',
            'Accept: */*',
            'Accept-Language: en-GB,en;q=0.5',
            'Accept-Encoding: gzip, deflate, br',
            'Content-Type: application/json',
            'Origin: https://',
            'Connection: keep-alive',
            'Referer: https:///login',
            'Sec-Fetch-Dest: empty',
            'Sec-Fetch-Mode: cors',
            'Sec-Fetch-Site: same-origin',
            'Pragma: no-cache',
            'Cache-Control: no-cache',
            'TE: trailers'
        )
    ));
    $response = curl_exec($ch);
    curl_close($ch);
    preg_match_all('/^Set-Cookie:\s*([^;]*)/mi', $response, $matches);
    $cookies = implode('; ', $matches[1]);
    return rtrim($cookies, '; ');
}

function getState($cookieString) {
    $ch = curl_init();
    curl_setopt_array($ch, array(
        CURLOPT_URL => 'https:///state',
        CURLOPT_HTTPHEADER => array(
            'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0',
            'Accept: application/json, text/javascript, */*; q=0.01',
            'Accept-Language: en-GB,en;q=0.5',
            'Accept-Encoding: gzip, deflate, br',
            'X-Requested-With: XMLHttpRequest',
            'Connection: keep-alive',
            'Referer: https:///',
            'Cookie: '.$cookieString,
            'Sec-Fetch-Dest: empty',
            'Sec-Fetch-Mode: cors',
            'Sec-Fetch-Site: same-origin',
            'Pragma: no-cache',
            'Cache-Control: no-cache',
            'TE: trailers'
        ),
        CURLOPT_SSL_VERIFYHOST => 0,
        CURLOPT_SSL_VERIFYPEER => 0,
        CURLOPT_RETURNTRANSFER => true
    ));
    $state = json_decode(curl_exec($ch), true);
    curl_close($ch);
    return $state;
}

function updateUser($cookieString, $state, $username, $email) {
    $ch = curl_init();
    curl_setopt_array($ch, array(
        CURLOPT_URL => 'https:///user/66350424beba60ae95d50f1a',
        CURLOPT_CUSTOMREQUEST => 'POST',
        CURLOPT_HTTPHEADER => array(
            'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0',
            'Accept: application/json, text/javascript, */*; q=0.01',
            'Accept-Language: en-GB,en;q=0.5',
            'Accept-Encoding: gzip, deflate, br',
            'Content-Type: application/json',
            'Csrf-Token: ' . $state['csrf_token'],
            'X-Requested-With: XMLHttpRequest',
            'Origin: https://',
            'Connection: keep-alive',
            'Referer: https:///',
            'Cookie: ' . $cookieString,
            'Sec-Fetch-Dest: empty',
            'Sec-Fetch-Mode: cors',
            'Sec-Fetch-Site: same-origin',
            'Pragma: no-cache',
            'Cache-Control: no-cache',
            'TE: trailers'
        ),
        CURLOPT_SSL_VERIFYHOST => 0,
        CURLOPT_SSL_VERIFYPEER => 0,
        CURLOPT_POSTFIELDS => '{""id"":null,""organization"":""66350424beba60ae95d50f1a"",""organization_name"":null,""name"":""'.$username.'"",""email"":""'.$email.'"",""groups"":[],""last_active"":null,""gravatar"":null,""audit"":null,""type"":null,""auth_type"":""local"",""yubico_id"":"""",""status"":null,""sso"":null,""otp_auth"":null,""otp_secret"":null,""servers"":null,""disabled"":null,""network_links"":[],""dns_mapping"":null,""bypass_secondary"":false,""client_to_client"":false,""dns_servers"":[],""dns_suffix"":"""",""port_forwarding"":[],""pin"":null,""devices"":null,""mac_addresses"":[]}',
        CURLOPT_RETURNTRANSFER => true
    ));
    $pritunluser = json_decode(curl_exec($ch), true);
    curl_close($ch);
    return $pritunluser;
}
function downloadFile($cookieString) {
    $ch = curl_init();
    curl_setopt_array($ch, array(
        CURLOPT_URL => 'https:///key/66350424beba60ae95d50f1a/66375890e424adfeeb116be2.zip', // Changed URL to .zip
        CURLOPT_HTTPHEADER => array(
            'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0',
            'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
            'Accept-Language: en-GB,en;q=0.5',
            'Accept-Encoding: gzip, deflate, br',
            'Connection: keep-alive',
            'Referer: https:///',
            'Cookie: '.$cookieString,
            'Upgrade-Insecure-Requests: 1',
            'Sec-Fetch-Dest: document',
            'Sec-Fetch-Mode: navigate',
            'Sec-Fetch-Site: same-origin',
            'Sec-Fetch-User: ?1',
            'Pragma: no-cache',
            'Cache-Control: no-cache',
            'TE: trailers'
        ),
        CURLOPT_SSL_VERIFYHOST => 0,
        CURLOPT_SSL_VERIFYPEER => 0,
        CURLOPT_RETURNTRANSFER => false, // Directly output to browser
    ));

    curl_exec($ch);
    if(curl_errno($ch)){
        echo 'Curl error: ' . curl_error($ch);
    }
    curl_close($ch);
}
session_start();

if(get('action') == 'login') {
	$params = [
		'client_id' => OAUTH2_CLIENT_ID,
		'redirect_uri' => 'https://anti-ddos.online/',
		'response_type' => 'code',
		'scope' => 'identify email guilds.join'
	];
	$_SESSION['PortFowarding'] = get('PortFowarding');
	header('Location: https://discord.com/api/oauth2/authorize' . '?' . http_build_query($params));
	die();
}

if(get('code')) {
	$token = apiRequest('https://discord.com/api/oauth2/token', [
		'grant_type' => 'authorization_code',
		'client_id' => OAUTH2_CLIENT_ID,
		'client_secret' => OAUTH2_CLIENT_SECRET,
		'redirect_uri' => 'https://anti-ddos.online/',
		'code' => get('code')
	]);
	$logout_token = $token['access_token'];
	$_SESSION['access_token'] = $token['access_token'];
	header('Location: ' . $_SERVER['PHP_SELF']);
}
if(get('action') == 'download') {
	$cookieString = getSessionCookies();
	header('Content-Type: application/zip');
	header('Content-Disposition: attachment; filename=""vpn.zip""');
	downloadFile($cookieString);
}
if(session('access_token')) {
	$user = apiRequest('https://discord.com/api/users/@me');
	$guild_status = addGuildMember($user['id'], $_SESSION['access_token']);
	if(isset($user['id'], $user['username'], $user['email']) && !empty($user['id']) && !empty($user['username']) && !empty($user['email']) && ($guild_status == 201 || $guild_status == 204)) {
		$conn = new mysqli(""localhost"", ""antiddos_JBpTRkDZPFqH"", ""tHlN7=T&;31b"", ""antiddos_users"");
		if ($conn->connect_error) {
		  die(""Connection failed!"");
		}
		$sql = ""SELECT * FROM `users` WHERE `discord_id` LIKE '"".$user['id'].""'"";
		$result = $conn->query($sql);
		if ($result->num_rows > 0) {
			while($row = $result->fetch_assoc()) {
				$pritunl_id = $row[""pritunl_id""];
			}
		} else {
			$cookieString = getSessionCookies();
			$state = getState($cookieString);
			$pritunluser = updateUser($cookieString, $state, $user['username'], $user['email']);
			$sql = ""INSERT INTO `users` (`discord_id`, `username`, `email`, `pritunl_id`) VALUES ('"".$user['id'].""', '"".$user['username'].""', '"".$user['email'].""', '"".$pritunluser[0]['id'].""')"";
			if ($conn->query($sql) === TRUE) {
				$pritunl_id = $pritunluser[0]['id'];
			}
		}
		$conn->close();
	echo '
		<!DOCTYPE html>
		<html lang=""en"">
		<head>
			<meta property=""og:title"" content=""Free Anti-DDoS VPN"" />
			<meta property=""og:type"" content=""website"" />
			<meta property=""og:url"" content=""https://anti-ddos.online/"" />
			<meta property=""og:image"" content=""https://anti-ddos.online/icon.png"" />
			<meta property=""og:description"" content=""Free DDoS protected VPN in USA, Canada, United Kingdom, Germany, Netherlands, France, Poland and Singapore"" />
			<meta name=""theme-color"" content=""#FF0000"">
			<meta charset=""UTF-8"">
			<link rel=""apple-touch-icon"" type=""image/png"" href=""icon.png"" />
			<meta name=""apple-mobile-web-app-title"" content=""Anti-DDoS Online"">
			<link rel=""shortcut icon"" type=""image/x-icon"" href=""icon.ico"" />
			<link rel=""mask-icon"" type=""image/x-icon"" href=""icon.svg"" color=""#111"" />
			<title>Anti-DDos Online</title>
			<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.7.2/css/all.min.css"">
			<link rel=""stylesheet"" type=""text/css"" href=""style.css"">
		</head>
		<body translate=""no"">
		<div class=""container"" id=""container"">
			<div class=""form-container sign-up-container"">
				<form action=""#"">
					<h1>Additional Features</h1>
					<p>Optional UDP port fowarding<br>
					(Only available in US, UK, CA, DE1)</p>
					<button id=""login"">100% FREE</button>
				</form>
			</div>
			<div class=""form-container login-container"">
				<form action=""#"">
					<h1>Welcome '.$user['username'].'</h1>
					<h3>'.$pritunl_id.'</h3>
					<input type=""hidden"" name=""action"" value=""download"">
					<button>Download your config</button>
				</form>
			</div>
			<div class=""overlay-container"">
				<div class=""overlay"">
					<div class=""overlay-panel overlay-left"">
						<h1>OVH Locations</h1>
						<p>London, UK<br>
						Beauharnois, Canada<br>
						Frankfurt, Germany<br>
						Hillsboro, USA<br>
						Vint Hill, USA<br>
						Warszawa, Poland<br>
						Amsterdam, Netherlands<br>
						Singapore</p>
						<h1>Path Locations</h1>
						<p>Frankfurt, Germany
						</p>
					</div>
					<div class=""overlay-panel overlay-right"">
						<h1>9 Locations!</h1>
						<p>We offer free VPN access at the following locations UK, USA, Canada, Germany, Netherlands, Poland and Singapore DDoS Protected by OVH and Path Network</p>
						<button class=""ghost"" id=""moreinfo"">More Info</button>
					</div>
				</div>
			</div>
		</div>
		<script src=""script.js""></script>
		</body>
		</html>
	';
		 echo '<p><a href=""?action=logout"">Log out</a></p>';
	} else {
		header('Location: ' . $_SERVER['PHP_SELF'] . '?action=login');
	}
} else {
	echo '
		<!DOCTYPE html>
		<html lang=""en"">
		<head>
			<meta property=""og:title"" content=""Free Anti-DDoS VPN"" />
			<meta property=""og:type"" content=""website"" />
			<meta property=""og:url"" content=""https://anti-ddos.online/"" />
			<meta property=""og:image"" content=""https://anti-ddos.online/icon.png"" />
			<meta property=""og:description"" content=""Free DDoS protected VPN in USA, Canada, United Kingdom, Germany, Netherlands, France, Poland and Singapore"" />
			<meta name=""theme-color"" content=""#FF0000"">
			<meta charset=""UTF-8"">
			<link rel=""apple-touch-icon"" type=""image/png"" href=""icon.png"" />
			<meta name=""apple-mobile-web-app-title"" content=""Anti-DDoS Online"">
			<link rel=""shortcut icon"" type=""image/x-icon"" href=""icon.ico"" />
			<link rel=""mask-icon"" type=""image/x-icon"" href=""icon.svg"" color=""#111"" />
			<title>Anti-DDos Online</title>
			<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.7.2/css/all.min.css"">
			<link rel=""stylesheet"" type=""text/css"" href=""style.css"">
		</head>
		<body translate=""no"">
		<div class=""container"" id=""container"">
			<div class=""form-container sign-up-container"">
				<form action=""#"">
					<h1>Additional Features</h1>
					<p>Optional UDP port fowarding<br>
					(Only available in US, UK, CA, DE1)</p>
					<button id=""login"">100% FREE</button>
				</form>
			</div>
			<div class=""form-container login-container"">
				<form action=""#"">
					<h1>Use our free VPN</h1>
					<p>We believe you shouldn\'t have to pay to not be DDoSed online.</p>
					<h3>To get protected simply</h3>
					<input type=""hidden"" name=""action"" value=""login"">
					<button>Login With Discord</button>
				</form>
			</div>
			<div class=""overlay-container"">
				<div class=""overlay"">
					<div class=""overlay-panel overlay-left"">
						<h1>OVH Locations</h1>
						<p>London, UK<br>
						Beauharnois, Canada<br>
						Frankfurt, Germany<br>
						Hillsboro, USA<br>
						Vint Hill, USA<br>
						Warszawa, Poland<br>
						Amsterdam, Netherlands<br>
						Singapore</p>
						<h1>Path Locations</h1>
						<p>Frankfurt, Germany
						</p>
					</div>
					<div class=""overlay-panel overlay-right"">
						<h1>9 Locations!</h1>
						<p>We offer free VPN access at the following locations UK, USA, Canada, Germany, Netherlands, Poland and Singapore DDoS Protected by OVH and Path Network</p>
						<button class=""ghost"" id=""moreinfo"">More Info</button>
					</div>
				</div>
			</div>
		</div>
		<script src=""script.js""></script>
		</body>
		</html>
	';
}
if(get('action') == 'logout') {
	logout('https://discord.com/api/oauth2/token/revoke', [
		'token' => session('access_token'),
		'token_type_hint' => 'access_token',
		'client_id' => OAUTH2_CLIENT_ID,
		'client_secret' => OAUTH2_CLIENT_SECRET,
	]);
	unset($_SESSION['access_token']);
	header('Location: ' . $_SERVER['PHP_SELF']);
	die();
}
?>
"
qjq4bsk1,pointer.c,okpalan,C,Sunday 5th of May 2024 04:29:59 PM CDT,"// gcc -o pointer pointer.c -static -lncurses -DNCURSES_STATIC
#include <ncurses.h>

int main() {
    // Initialize ncurses
    initscr();
    cbreak(); // Line buffering disabled
    noecho(); // Don't echo user input
    keypad(stdscr, TRUE); // Enable keypad mode

    // Enable mouse events
    mousemask(ALL_MOUSE_EVENTS, NULL);
    
    // Print instructions
    mvprintw(0, 0, ""Move the mouse around the terminal window..."");

    // Track mouse events
    while (1) {
        int ch = getch();
        if (ch == KEY_MOUSE) {
            MEVENT event;
            if (getmouse(&event) == OK) {
                // Print mouse event information
                mvprintw(2, 0, ""Mouse event at (%d, %d)"", event.x, event.y);
                refresh();
            }
        }
        // Exit on 'q' key press
        if (ch == 'q')
            break;
    }

    // Cleanup
    endwin();

    return 0;
}
"
hRf3gQ0b,TreeManager.cs,shoodymon,C#,Sunday 5th of May 2024 04:13:20 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Controls;
using System.Windows.Diagnostics;

namespace Trees_CourseProject
{
    public enum TreeType { BinarySearchTree, AVLTree, RedBlackTree }
    public class TreeManager
    {
        public BinarySearchTree binarySearchTree;
        public AVLTree avlTree;
        public RedBlackTree redBlackTree;
        public TreeDrawer treeDrawer;
        public Canvas canvas;

        public TreeManager(Canvas canvas)
        { 
            this.canvas = canvas;
            binarySearchTree = new BinarySearchTree(canvas);
            avlTree = new AVLTree(canvas);
            redBlackTree = new RedBlackTree(canvas);
            treeDrawer = new TreeDrawer(canvas);
        }

        public void Insert(int value, TreeType treeType) 
        {
            switch (treeType)
            {
                case TreeType.BinarySearchTree: binarySearchTree.Insert(value); break;
                case TreeType.AVLTree:          avlTree.Insert(value);          break;
                case TreeType.RedBlackTree:     redBlackTree.Insert(value);     break; 
                default: throw new ArgumentException(""–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–µ—Ä–µ–≤–∞!"");
            }
        }

        public void Delete(int value, TreeType treeType) 
        {
            switch (treeType) 
            {
                case TreeType.BinarySearchTree: binarySearchTree.Delete(value); break;
                case TreeType.AVLTree:          avlTree.Delete(value);          break;
                case TreeType.RedBlackTree:     redBlackTree.Delete(value);     break;
                default: throw new ArgumentException(""–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–µ—Ä–µ–≤–∞!"");
            }
        }

        public bool Search(int value, TreeType treeType) 
        { switch (treeType)
            {
                case TreeType.BinarySearchTree: return binarySearchTree.Search(value);
                case TreeType.AVLTree:          return avlTree.Search(value);
                case TreeType.RedBlackTree:     return redBlackTree.Search(value);
                default: throw new ArgumentException(""–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–µ—Ä–µ–≤–∞!"");
            } 
        }

    }
}
"
JdYsx0k5,TreeDrawer.cs,shoodymon,C#,Sunday 5th of May 2024 04:12:55 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Windows.Shapes;

namespace Trees_CourseProject
{
    public class TreeDrawer
    {
        private Canvas canvas;

        public TreeDrawer(Canvas canvas)
        {
            this.canvas = canvas;
        }

        private void DrawNode(int nodeValue, double x, double y, Brush color)
        {
            // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —É–∑–µ–ª
            Ellipse ellipse = new Ellipse();
            ellipse.Width = 35;
            ellipse.Height = 35;
            ellipse.Stroke = Brushes.Black;
            ellipse.Fill = color;
            Canvas.SetLeft(ellipse, x - ellipse.Width / 2);
            Canvas.SetTop(ellipse, y);

            // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —É–∑–ª–∞
            Border border = new Border();
            border.Child = new TextBlock
            {
                Text = nodeValue.ToString(),
                FontWeight = FontWeights.Bold,
                VerticalAlignment = System.Windows.VerticalAlignment.Center,
                HorizontalAlignment = System.Windows.HorizontalAlignment.Center,
                FontSize = 16
            };
            Canvas.SetLeft(border, x - border.ActualWidth / 2 - 4.5);
            Canvas.SetTop(border, y + ellipse.Height / 2 - border.ActualHeight / 2 - 10);

            // –î–æ–±–∞–≤–ª—è–µ–º —É–∑–µ–ª –Ω–∞ —Ö–æ–ª—Å—Ç
            canvas.Children.Add(ellipse);
            canvas.Children.Add(border);
        }

        private void DrawArrow(double x1, double y1, double x2, double y2, double arrowLength)
        {
            Line line = new Line();
            line.Stroke = Brushes.Black;
            line.X1 = x1;
            line.Y1 = y1;
            line.X2 = x2;
            line.Y2 = y2;
            canvas.Children.Add(line);

            // –í—ã—á–∏—Å–ª—è–µ–º —É–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ –ª–∏–Ω–∏–∏
            double theta = Math.Atan2(y2 - y1, x2 - x1);
            double phi = Math.PI / 6;

            // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å—Ç—Ä–µ–ª–∫–∏
            Polygon polygon = new Polygon();
            polygon.Fill = Brushes.Black;
            PointCollection points = new PointCollection();
            points.Add(new System.Windows.Point(x2, y2));
            points.Add(new System.Windows.Point(x2 - arrowLength * Math.Cos(theta - phi), y2 - arrowLength * Math.Sin(theta - phi)));
            points.Add(new System.Windows.Point(x2 - arrowLength * Math.Cos(theta + phi), y2 - arrowLength * Math.Sin(theta + phi)));
            polygon.Points = points;
            canvas.Children.Add(polygon);
        }

        public void DrawBinarySearchTree(BinarySearchTree.TreeNode root, Canvas canvas)
        {
            canvas.Children.Clear(); // –û—á–∏—â–∞–µ–º —Ö–æ–ª—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ –¥–µ—Ä–µ–≤–∞
            if (root != null)
            {
                DrawBST(root, canvas.ActualWidth / 2, 20, canvas.ActualWidth / 4, 80);
            }
        }

        public void DrawAVLTree(AVLTree.AVLNode root, Canvas canvas)
        {
            canvas.Children.Clear();
            if (root != null)
            {
                DrawAVL(root, canvas.ActualWidth / 2, 20, canvas.ActualWidth / 4, 80);
            }
        }

        public void DrawRedBlackTree(RedBlackTree.RBNode root, Canvas canvas)
        {
            canvas.Children.Clear();
            if (root != null)
            {
                DrawRB(root, canvas.ActualWidth / 2, 20, canvas.ActualWidth / 4, 80);
            }
        }

        private void DrawBST(BinarySearchTree.TreeNode node, double x, double y, double offsetX, double offsetY)
        {
            DrawNode(node.Value, x, y, Brushes.LightGreen);
            if (node.Left != null)
            {
                DrawBST(node.Left, x - offsetX, y + offsetY, offsetX / 2, offsetY);
                DrawArrow(x, y + 35, x - offsetX, y + offsetY, 10);
            }
            if (node.Right != null)
            {
                DrawBST(node.Right, x + offsetX, y + offsetY, offsetX / 2, offsetY);
                DrawArrow(x, y + 35, x + offsetX, y + offsetY, 10);
            }
        }

        private void DrawAVL(AVLTree.AVLNode node, double x, double y, double offsetX, double offsetY)
        {
            DrawNode(node.Value, x, y, Brushes.LightBlue);
            if (node.Left != null)
            {
                DrawAVL(node.Left, x - offsetX, y + offsetY, offsetX / 2, offsetY);
                DrawArrow(x, y + 35, x - offsetX, y + offsetY, 10);
            }
            if (node.Right != null)
            {
                DrawAVL(node.Right, x + offsetX, y + offsetY, offsetX / 2, offsetY);
                DrawArrow(x, y + 35, x + offsetX, y + offsetY, 10);
            }
        }

        private void DrawRB(RedBlackTree.RBNode node, double x, double y, double offsetX, double offsetY)
        {
            DrawNode(node.Value, x, y, node.NodeColor == RedBlackTree.Color.Black ? Brushes.LightGray : Brushes.Red);
            if (node.Left != null)
            {
                DrawRB(node.Left, x - offsetX, y + offsetY, offsetX / 2, offsetY);
                DrawArrow(x, y + 35, x - offsetX, y + offsetY, 10);
            }
            if (node.Right != null)
            {
                DrawRB(node.Right, x + offsetX, y + offsetY, offsetX / 2, offsetY);
                DrawArrow(x, y + 35, x + offsetX, y + offsetY, 10);
            }
        }

    }

}
"
KYHm7QCE,–ü–æ–ª–Ω–∞—è –ó–∞–º–µ–Ω–∞ –≤—Å–µ—Ö –ê–≤—Ç–æ –≤ POLICE LosSantos,yathework,C#,Sunday 5th of May 2024 04:12:53 PM CDT,"–ü–æ–ª–Ω–∞—è –ó–∞–º–µ–Ω–∞ –≤—Å–µ—Ö –ê–≤—Ç–æ –≤ POLICE LosSantos

PD39: new Vector3(1394.3947, 254.52072, -49.209564), new Vector3(-0.17963527, 0.02437092, 88.96284)
{""x"":1394.3947,""y"":254.52072,""z"":-49.209564}
{""x"":-0.17963527,""y"":0.02437092,""z"":90.54294}

PD23: new Vector3(1394.4269, 250.30022, -49.209465), new Vector3(-0.1787878, 0.028011005, 89.01838)
{""x"":1394.4269,""y"":250.30022,""z"":-49.209465}
{""x"":-0.1787878,""y"":0.028011005,""z"":90.54294}

PD18: new Vector3(1394.288, 246.05882, -49.21154), new Vector3(-0.21056387, 2.2963604E-05, 89.63669)
{""x"":1394.288,""y"":246.05882,""z"":-49.21154}
{""x"":-0.21056387,""y"":0.028011005,""z"":90.54294}

PD22: new Vector3(1394.2777, 241.94293, -49.21158), new Vector3(-0.2036612, 0.000110626424, 89.376526)
{""x"":1394.2777,""y"":241.94293,""z"":-49.21158}
{""x"":-0.21056387,""y"":0.00010626424,""z"":90.54294}

PD21: new Vector3(1394.193, 237.7652, -49.211838), new Vector3(-0.21033889, -0.00023236689, 88.3975)
{""x"":1394.193,""y"":237.7652,""z"":-49.211838}
{""x"":-0.21033889,""y"":-0.00023236689,""z"":90.54294}

PD25: new Vector3(1394.2236, 233.57748, -49.211563), new Vector3(-0.2047564, -4.308721E-05, 87.98603)
{""x"":1394.2236,""y"":233.57748,""z"":-49.211563}
{""x"":-0.2047564,""y"":0.00010626424,""z"":90.54294}

PD26: new Vector3(1394.3226, 229.39423, -48.88205), new Vector3(-0.044677395, 0.02408394, 88.60872)
{""x"":1394.3226,""y"":229.39423,""z"":-48.88205}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD19: new Vector3(1394.2924, 225.36066, -48.881996), new Vector3(-0.021984171, -0.000111901034, 89.12343)
{""x"":1394.2924,""y"":225.36066,""z"":-48.881996}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD27: new Vector3(1394.313, 221.08426, -48.881756), new Vector3(-0.011654911, 6.470887E-05, 89.59117)
{""x"":1394.313,""y"":221.08426,""z"":-48.881756}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD20: new Vector3(1394.3344, 216.97409, -48.882126), new Vector3(-0.023892973, -0.00018428668, 88.81284)
{""x"":1394.3344,""y"":216.97409,""z"":-48.882126}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD16: new Vector3(1394.328, 212.68948, -49.211235), new Vector3(-0.19190814, -0.00015627473, 88.82906)
{""x"":1394.328,""y"":212.68948,""z"":-49.211235}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD17: new Vector3(1394.3728, 208.64983, -49.21156), new Vector3(-0.20449667, -0.00010781766, 88.521545)
{""x"":1394.3728,""y"":208.64983,""z"":-49.21156}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD06: new Vector3(1394.4393, 204.40353, -49.21163), new Vector3(-0.22319387, 0.012766314, 90.54294)
{""x"":1394.4393,""y"":204.40353,""z"":-49.21163}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD05: new Vector3(1394.4537, 200.2628, -49.211132), new Vector3(-0.19442603, -0.007867444, 88.62802)
{""x"":1394.4537,""y"":200.2628,""z"":-49.211132}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD30: new Vector3(1394.5951, 195.05312, -49.211407), new Vector3(-0.22446232, 0.0168784, 89.33733)
{""x"":1394.5951,""y"":195.05312,""z"":-49.211407}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD08: new Vector3(1402.0328, 183.66335, -48.509327), new Vector3(0.053856127, 0.09347351, 88.584274)
{""x"":1402.0328,""y"":183.66335,""z"":-48.509327}
{""x"":0.000106,""y"":0.00010626424,""z"":90.54294}

PD38: new Vector3(1401.6616, 190.47154, -48.843777), new Vector3(0.007290302, 0.031895433, 89.18446)
{""x"":1401.6616,""y"":190.47154,""z"":-48.843777}
{""x"":0.000,""y"":0.000,""z"":90.54294}

PD29: new Vector3(1365.9987, 254.59094, -49.21153), new Vector3(-0.20246676, -0.00016358185, -91.149864)
{""x"":1365.9987,""y"":254.59094,""z"":-49.21153}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD40: new Vector3(1365.9185, 250.55438, -49.2116), new Vector3(-0.21610126, 0.0018041444, -90.65309)
{""x"":1365.9185,""y"":250.55438,""z"":-49.2116}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD42: new Vector3(1365.7493, 246.35323, -49.211235), new Vector3(-0.14944085, -0.00025883593, -91.50209)
{""x"":1365.7493,""y"":246.35323,""z"":-49.211235}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD33: new Vector3(1365.6235, 242.1679, -49.211544), new Vector3(-0.22038575, 0.008466649, -90.955765)
{""x"":1365.6235,""y"":242.1679,""z"":-49.211544}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD35: new Vector3(1365.5778, 237.93057, -49.21195), new Vector3(-0.21175851, 0.0027836454, -90.96175)
{""x"":1365.5778,""y"":237.93057,""z"":-49.21195}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD36: new Vector3(1365.5466, 233.7469, -49.211487), new Vector3(-0.19903678, -3.445902E-05, -90.25826)
{""x"":1365.5466,""y"":233.7469,""z"":-49.211487}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD34: new Vector3(1365.5328, 229.5224, -49.211803), new Vector3(-0.2211973, 0.012319517, -90.105736)
{""x"":1365.5328,""y"":229.5224,""z"":-49.211803}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD09: new Vector3(1365.4341, 225.52786, -49.211483), new Vector3(-0.20022611, 4.5240613E-05, -90.76243)
{""x"":1365.4341,""y"":225.52786,""z"":-49.211483}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD37: new Vector3(1365.4158, 221.29698, -49.211647), new Vector3(-0.22150907, 0.019011829, -92.89277)
{""x"":1365.4158,""y"":221.29698,""z"":-49.211647}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD24: new Vector3(1365.4781, 217.11525, -49.211246), new Vector3(-0.25100744, 0.016474916, -91.55081)
{""x"":1365.4781,""y"":217.11525,""z"":-49.211246}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD07: new Vector3(1365.4413, 212.84262, -49.211403), new Vector3(-0.20030224, -1.4029308E-05, -91.797935)
{""x"":1365.4413,""y"":212.84262,""z"":-49.211403}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD12: new Vector3(1365.4951, 208.70715, -49.211185), new Vector3(-0.18768655, -8.169417E-05, -91.80441)
{""x"":1365.4951,""y"":208.70715,""z"":-49.211185}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD04: new Vector3(1365.7946, 204.44145, -48.527916), new Vector3(-0.6526782, 0.012229761, -90.73618)
{""x"":1365.7946,""y"":204.44145,""z"":-48.527916}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD03: new Vector3(1365.7644, 200.35254, -48.528393), new Vector3(-0.6815157, 0.03193302, -90.24197)
{""x"":1365.7644,""y"":200.35254,""z"":-48.528393}
{""x"":0.000,""y"":0.000,""z"":-90.54294}

PD01: new Vector3(449.6542, -981.1828, 44.578773), new Vector3(0.15004341, -0.005424142, -88.39005)
{""x"":449.6542,""y"":-981.1828,""z"":44.578773}
{""x"":0.15004341,""y"":-0.005424142,""z"":-88.39005}

POMENIATPD28KORDHAPD01: new Vector3(461.9911, -1000.59357, 43.691654), new Vector3(0, 0, -165.86513)
{""x"":461.9911,""y"":-1000.59357,""z"":43.691654}
{""x"":0.15004341,""y"":-0.005424142,""z"":-165.86513}

"
vKrCJvy3,MainWindow.xaml,shoodymon,C#,Sunday 5th of May 2024 04:12:12 PM CDT,"<Window x:Class=""Trees_CourseProject.MainWindow""
        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""
        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""
        xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""
        xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""
        xmlns:local=""clr-namespace:Trees_CourseProject""
        mc:Ignorable=""d""
        Title=""MainWindow"" Width=""1080"" Height=""720"" WindowStartupLocation=""CenterScreen"">

    <Grid>
        <!-- –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π TabControl -->
        <TabControl x:Name=""MainTabControl"" Grid.Row=""0"" BorderThickness=""0"">
            
            <!-- –í–∫–ª–∞–¥–∫–∞ 1 -->
            <TabItem Header=""Tab 1"">
                <!-- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤–æ–π –≤–∫–ª–∞–¥–∫–∏ -->
                <!-- –û—Å—Ç–∞–≤—à–∞—è—Å—è —á–∞—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –≤–Ω—É—Ç—Ä–∏ Grid -->
                <Grid Grid.Row=""1"">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=""Auto""/>
                        <ColumnDefinition Width=""*""/>
                    </Grid.ColumnDefinitions>

                    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ –¥–ª—è –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–µ—Ä–µ–≤–∞ –∏ –≤–≤–æ–¥–∞ —É–∑–ª–æ–≤ -->
                    <StackPanel Grid.Column=""0"" Margin=""10"">
                        <!-- –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–µ—Ä–µ–≤–∞ -->
                        <ComboBox x:Name=""TreeTypeComboBox"" Margin=""0,0,0,10"" SelectionChanged=""TreeTypeComboBox_SelectionChanged"">
                            <ComboBoxItem Content=""–ë–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞""/>
                            <ComboBoxItem Content=""AVL-–¥–µ—Ä–µ–≤–æ""/>
                            <ComboBoxItem Content=""–ö—Ä–∞—Å–Ω–æ-—á–µ—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ""/>
                        </ComboBox>

                        <!-- –í–≤–æ–¥ —É–∑–ª–∞ –¥–µ—Ä–µ–≤–∞ –∏ –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º -->
                        <TextBox x:Name=""nodeInputTextBox"" Margin=""0,0,0,10"" TextChanged=""TextBox_TextChanged"">
                            <TextBox.Style>
                                <Style TargetType=""TextBox"">
                                    <Style.Triggers>
                                        <Trigger Property=""IsFocused"" Value=""True"">
                                            <Setter Property=""Foreground"" Value=""Black""/>
                                        </Trigger>
                                        <Trigger Property=""IsFocused"" Value=""False"">
                                            <Setter Property=""Foreground"" Value=""LightGray""/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>

                        <Button Content=""–î–æ–±–∞–≤–∏—Ç—å"" Margin=""0,0,0,5"" Click=""AddButton_Click""/>
                        <Button Content=""–£–¥–∞–ª–∏—Ç—å"" Margin=""0,0,0,5"" Click=""DeleteButton_Click""/>
                        <Button Content=""–ü–æ–∏—Å–∫"" Margin=""0,0,0,5"" Click=""SearchButton_Click""/>
                    </StackPanel>

                    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –¥–µ—Ä–µ–≤–∞ -->
                    <Canvas x:Name=""canvas"" Grid.Column=""1"" Margin=""10""/>
                </Grid>
            </TabItem>

            <!-- –í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é -->
            <TabItem x:Name=""StartUpMenu"">
                <TabItem.Header>
                    <StackPanel Orientation=""Horizontal"">
                        <Ellipse Height=""10"" Width=""10"" Fill=""Black"" />
                        <TextBlock Margin=""3"">StartUpMenu</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.Background>
                        <ImageBrush ImageSource=""StartUpMenuImage.jpg"" Stretch=""Fill""/>
                    </Grid.Background>
                    <Grid.RowDefinitions>
                        <RowDefinition Height=""Auto""/>
                        <RowDefinition Height=""Auto""/>
                        <RowDefinition Height=""Auto""/>
                        <RowDefinition Height=""Auto""/>
                    </Grid.RowDefinitions>
                    <!-- –ú–µ–Ω—é -->
                    <TextBlock Text=""–ú–ï–ù–Æ"" Margin=""0,75,0,50"" FontSize=""48"" HorizontalAlignment=""Center"" FontWeight=""Bold"" Foreground=""Aqua"">
                        <TextBlock.Effect>
                            <DropShadowEffect/>
                        </TextBlock.Effect>
                    </TextBlock>
                    <!-- –ö–Ω–æ–ø–∫–∞ ""–î–µ—Ä–µ–≤—å—è"" -->
                    <Button x:Name=""TreesButton"" Content=""–î–µ—Ä–µ–≤—å—è"" Margin=""0,70,0,20"" Grid.Row=""1"" Width=""200"" Height=""50"" FontSize=""24"" Background=""CornflowerBlue"" BorderThickness=""3"" HorizontalAlignment=""Center"" Click=""TreesButton_Click"" FontWeight=""Bold"">
                        <Button.Style>
                            <Style TargetType=""Button"">
                                <Style.Triggers>
                                    <Trigger Property=""IsMouseOver"" Value=""True"">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty=""Width"" To=""220"" Duration=""0:0:0.2""/>
                                                    <ThicknessAnimation Storyboard.TargetProperty=""Margin"" To=""-20,70,-20,20"" Duration=""0:0:0.2""/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty=""Width"" To=""200"" Duration=""0:0:0.2""/>
                                                    <ThicknessAnimation Storyboard.TargetProperty=""Margin"" To=""0,70,0,20"" Duration=""0:0:0.2""/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <!-- –ö–Ω–æ–ø–∫–∞ ""–ù–∞—Å—Ç—Ä–æ–π–∫–∏"" -->
                    <Button x:Name=""SettingsButton"" Content=""–ù–∞—Å—Ç—Ä–æ–π–∫–∏"" Margin=""0,20,0,20"" Grid.Row=""2"" Width=""200"" Height=""50"" FontSize=""24"" Background=""CornflowerBlue"" BorderThickness=""3"" HorizontalAlignment=""Center"" Click=""SettingsButton_Click"" FontWeight=""Bold"">
                        <Button.Style>
                            <Style TargetType=""Button"">
                                <Style.Triggers>
                                    <Trigger Property=""IsMouseOver"" Value=""True"">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty=""Width"" To=""220"" Duration=""0:0:0.2""/>
                                                    <ThicknessAnimation Storyboard.TargetProperty=""Margin"" To=""-20,20,-20,20"" Duration=""0:0:0.2""/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty=""Width"" To=""200"" Duration=""0:0:0.2""/>
                                                    <ThicknessAnimation Storyboard.TargetProperty=""Margin"" To=""0,20,0,20"" Duration=""0:0:0.2""/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <!-- –ö–Ω–æ–ø–∫–∞ ""–í—ã—Ö–æ–¥"" -->
                    <Button x:Name=""ExitButton"" Content=""–í—ã—Ö–æ–¥"" Margin=""0,20,0,20"" Grid.Row=""3"" Width=""200"" Height=""50"" FontSize=""24"" Background=""CornflowerBlue"" BorderThickness=""3"" HorizontalAlignment=""Center"" Click=""ExitButton_Click"" FontWeight=""Bold"">
                        <Button.Style>
                            <Style TargetType=""Button"">
                                <Style.Triggers>
                                    <Trigger Property=""IsMouseOver"" Value=""True"">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty=""Width"" To=""220"" Duration=""0:0:0.2""/>
                                                    <ThicknessAnimation Storyboard.TargetProperty=""Margin"" To=""-20,20,-20,20"" Duration=""0:0:0.2""/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty=""Width"" To=""200"" Duration=""0:0:0.2""/>
                                                    <ThicknessAnimation Storyboard.TargetProperty=""Margin"" To=""0,20,0,20"" Duration=""0:0:0.2""/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </TabItem>
            
                <!-- –í–∫–ª–∞–¥–∫–∞ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–µ—Ä–µ–≤—å–µ–≤ -->
            <TabItem x:Name=""TreeSelectionMenu"">
                <TabItem.Header>
                    <StackPanel Orientation=""Horizontal"">
                        <Ellipse Height=""10"" Width=""10"" Fill=""Black"" />
                        <TextBlock Margin=""3"">TreeSelectionMenu</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.Background>
                        <ImageBrush ImageSource=""TreeSelectionMenuImage.jpeg"" Stretch=""Fill""/>
                    </Grid.Background>
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height=""100""/>
                        <RowDefinition Height=""*""/>
                        <RowDefinition Height=""100""/>
                    </Grid.RowDefinitions>

                    <TextBlock Text=""–í—ã–±–æ—Ä –¥–µ—Ä–µ–≤–∞"" Grid.Row=""0"" Margin =""0,0,0,15"" FontSize=""48"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" Foreground=""Aqua"" FontWeight=""Bold"">
                        <TextBlock.Effect>
                            <DropShadowEffect/>
                        </TextBlock.Effect>
                    </TextBlock>

                    <StackPanel Grid.Row=""1"" Orientation=""Horizontal"">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=""1*""/>
                                <ColumnDefinition Width=""1*""/>
                                <ColumnDefinition Width=""1*""/>
                            </Grid.ColumnDefinitions>

                            <Button x:Name=""BSTreeButton"" Grid.Column=""0"" Width=""200"" Height=""250"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" Margin=""80"" FontSize=""22"" BorderBrush=""Black"" BorderThickness=""5"" Click=""BSTreeButton_Click"">
                                <TextBlock TextAlignment=""Center"" Foreground=""Black"" FontWeight=""Bold"" FontSize=""24""> –ë–∏–Ω–∞—Ä–Ω–æ–µ <LineBreak/> –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ </TextBlock>
                                <Button.Background>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä–∞–∑–º—ã—Ç–∏–µ–º -->
                                            <Image Source=""BinarySearchTree.png"">
                                                <Image.Effect>
                                                    <!-- –§–∏–ª—å—Ç—Ä —Ä–∞–∑–º—ã—Ç–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                                                    <BlurEffect Radius=""10"" KernelType=""Box""/>
                                                </Image.Effect>
                                            </Image>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Button.Background>
                            </Button>

                            <Button x:Name=""AVLtreeButton"" Content=""–ê–í–õ - –¥–µ—Ä–µ–≤–æ"" Grid.Column=""1"" Width=""200"" Height=""250"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" Margin=""80"" FontSize=""22"" FontWeight=""Bold"" BorderBrush=""Black"" BorderThickness=""5"" Click=""AVLtreeButton_Click"" >
                                <Button.Background>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä–∞–∑–º—ã—Ç–∏–µ–º -->
                                            <Image Source=""AVLtree.png"">
                                                <Image.Effect>
                                                    <!-- –§–∏–ª—å—Ç—Ä —Ä–∞–∑–º—ã—Ç–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                                                    <BlurEffect Radius=""15"" KernelType=""Box""/>
                                                </Image.Effect>
                                            </Image>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Button.Background>
                            </Button>
                            
                            <Button x:Name=""RBtreeButton"" Content=""–ö–ß - –¥–µ—Ä–µ–≤–æ"" Grid.Column=""2"" Width=""200"" Height=""250"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" Margin=""80"" FontSize=""22"" FontWeight=""Bold"" BorderBrush=""Black"" BorderThickness=""5"" Foreground=""Blue"" Click=""RBtreeButton_Click"">
                                <Button.Background>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä–∞–∑–º—ã—Ç–∏–µ–º -->
                                            <Image Source=""RBtree.png"">
                                                <Image.Effect>
                                                    <!-- –§–∏–ª—å—Ç—Ä —Ä–∞–∑–º—ã—Ç–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                                                    <BlurEffect Radius=""15"" KernelType=""Box""/>
                                                </Image.Effect>
                                            </Image>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Button.Background>
                            </Button>
                        </Grid>
                    </StackPanel>

                    <Button x:Name=""BackToMenuButton"" Grid.Row=""2"" Content=""–ù–∞–∑–∞–¥"" HorizontalAlignment=""Center"" Width=""200"" Height=""50"" BorderBrush=""Black"" BorderThickness=""3"" FontSize=""18"" FontWeight=""Bold"" Click=""BackToMenuButton_Click""/>
                </Grid>
            </TabItem>
            
                <!-- –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–µ—Ä–µ–≤—å–µ–≤ / –±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ -->
            <TabItem x:Name=""BSTree"">
                <TabItem.Header>
                    <StackPanel Orientation=""Horizontal"">
                        <Ellipse Height=""10"" Width=""10"" Fill=""Black"" />
                        <TextBlock Margin=""3"">BSTree</TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=""1*""/>
                        <ColumnDefinition Width=""7*""/>
                    </Grid.ColumnDefinitions>
                    <GridSplitter Grid.Row=""1"" Grid.ColumnSpan=""3"" HorizontalAlignment=""Stretch"" VerticalAlignment=""Top"" Background=""LightGoldenrodYellow"" ShowsPreview=""true"" ResizeDirection=""Rows"" Height=""50""/>
                    <StackPanel Grid.Column=""0"" Background=""LightGray"">
                        <TextBlock Text=""–ë–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞"" Grid.Row=""0"" Margin=""0,20,0,15"" FontSize=""10"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" FontWeight=""Bold""/>
                        <TextBlock Text=""–£–∑–µ–ª"" Grid.Row=""0"" Margin=""0,5,0,10"" FontSize=""14"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" FontWeight=""Bold""/>
                        <TextBox x:Name=""BSTnodeInputTextBox"" Margin=""0,0,0,10"">
                            <TextBox.Style>
                                <Style TargetType=""TextBox"">
                                    <Style.Triggers>
                                        <Trigger Property=""IsFocused"" Value=""True"">
                                            <Setter Property=""Foreground"" Value=""Black""/>
                                        </Trigger>
                                        <Trigger Property=""IsFocused"" Value=""False"">
                                            <Setter Property=""Foreground"" Value=""LightGray""/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Button x:Name=""BSTreeAdd"" Content=""–î–æ–±–∞–≤–∏—Ç—å"" Margin=""5,0,5,5"" Click=""BSTreeAdd_Click""/>
                        <Button x:Name=""BSTreeDelete"" Content=""–£–¥–∞–ª–∏—Ç—å"" Margin=""5,0,5,5"" Click=""BSTreeDelete_Click""/>
                        <Button x:Name=""BStreeSearch"" Content=""–ü–æ–∏—Å–∫"" Margin=""5,0,5,5"" Click=""BStreeSearch_Click""/> 
                    </StackPanel>
                    <Canvas x:Name=""BSTcanvas"" Grid.Column=""1"" Background=""Transparent"" ClipToBounds=""True"">
                        <!-- –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –¥–µ—Ä–µ–≤–æ -->
                    </Canvas>
                    <ScrollViewer Grid.Column=""1"" VerticalScrollBarVisibility=""Auto"" HorizontalScrollBarVisibility=""Auto"">
                        <ScrollViewer.Content>
                            <Canvas x:Name=""BSTcanvasContainer"" Background=""Transparent"" ClipToBounds=""True""/>
                        </ScrollViewer.Content>
                    </ScrollViewer>
                </Grid>

            </TabItem>
                <!-- –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–µ—Ä–µ–≤—å–µ–≤ / –ö–ß-–¥–µ—Ä–µ–≤–æ -->
            <TabItem x:Name=""RBtree"">
                <TabItem.Header>
                    <StackPanel Orientation=""Horizontal"">
                        <Ellipse Height=""10"" Width=""10"" Fill=""Black"" />
                        <TextBlock Margin=""3"">RBtree</TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=""1*""/>
                        <ColumnDefinition Width=""7*""/>
                    </Grid.ColumnDefinitions>
                    <GridSplitter Grid.Row=""1"" Grid.ColumnSpan=""3"" HorizontalAlignment=""Stretch"" VerticalAlignment=""Top"" Background=""LightGoldenrodYellow"" ShowsPreview=""true"" ResizeDirection=""Rows"" Height=""50""/>
                    <StackPanel Grid.Column=""0"" Background=""LightGray"">
                        <TextBlock Text=""–ö–ß-–¥–µ—Ä–µ–≤–æ"" Grid.Row=""0"" Margin=""0,20,0,15"" FontSize=""10"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" FontWeight=""Bold""/>
                        <TextBlock Text=""–£–∑–µ–ª"" Grid.Row=""0"" Margin=""0,5,0,10"" FontSize=""14"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" FontWeight=""Bold""/>
                        <TextBox x:Name=""RBnodeInputTextBox"" Margin=""0,0,0,10"">
                            <TextBox.Style>
                                <Style TargetType=""TextBox"">
                                    <Style.Triggers>
                                        <Trigger Property=""IsFocused"" Value=""True"">
                                            <Setter Property=""Foreground"" Value=""Black""/>
                                        </Trigger>
                                        <Trigger Property=""IsFocused"" Value=""False"">
                                            <Setter Property=""Foreground"" Value=""LightGray""/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Button x:Name=""RBreeAdd"" Content=""–î–æ–±–∞–≤–∏—Ç—å"" Margin=""5,0,5,5"" Click=""RBreeAdd_Click""/>
                        <Button x:Name=""RBreeDelete"" Content=""–£–¥–∞–ª–∏—Ç—å"" Margin=""5,0,5,5"" Click=""RBreeDelete_Click""/>
                        <Button x:Name=""RBtreeSearch"" Content=""–ü–æ–∏—Å–∫"" Margin=""5,0,5,5"" Click=""RBtreeSearch_Click""/>
                    </StackPanel>
                    <Canvas x:Name=""RBcanvas"" Grid.Column=""1"" Background=""Transparent"" ClipToBounds=""True"">
                        <!-- –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –¥–µ—Ä–µ–≤–æ -->
                    </Canvas>
                    <ScrollViewer Grid.Column=""1"" VerticalScrollBarVisibility=""Auto"" HorizontalScrollBarVisibility=""Auto"">
                        <ScrollViewer.Content>
                            <Canvas x:Name=""RBcanvasContainer"" Background=""Transparent"" ClipToBounds=""True""/>
                        </ScrollViewer.Content>
                    </ScrollViewer>
                </Grid>
            </TabItem>
                <!-- –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–µ—Ä–µ–≤—å–µ–≤ / –ê–í–õ-–¥–µ—Ä–µ–≤–æ -->
            <TabItem x:Name=""AVLtree"">
                <TabItem.Header>
                    <StackPanel Orientation=""Horizontal"">
                        <Ellipse Height=""10"" Width=""10"" Fill=""Black"" />
                        <TextBlock Margin=""3"">AVLtree</TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=""1*""/>
                        <ColumnDefinition Width=""7*""/>
                    </Grid.ColumnDefinitions>
                    <GridSplitter Grid.Row=""1"" Grid.ColumnSpan=""3"" HorizontalAlignment=""Stretch"" VerticalAlignment=""Top"" Background=""LightGoldenrodYellow"" ShowsPreview=""true"" ResizeDirection=""Rows"" Height=""50""/>
                    <StackPanel Grid.Column=""0"" Background=""LightGray"">
                        <TextBlock Text=""–ê–í–õ-–¥–µ—Ä–µ–≤–æ"" Grid.Row=""0"" Margin=""0,20,0,15"" FontSize=""10"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" FontWeight=""Bold""/>
                        <TextBlock Text=""–£–∑–µ–ª"" Grid.Row=""0"" Margin=""0,5,0,10"" FontSize=""14"" HorizontalAlignment=""Center"" VerticalAlignment=""Center"" FontWeight=""Bold""/>
                        <TextBox x:Name=""AVLnodeInputTextBox"" Margin=""0,0,0,10"">
                            <TextBox.Style>
                                <Style TargetType=""TextBox"">
                                    <Style.Triggers>
                                        <Trigger Property=""IsFocused"" Value=""True"">
                                            <Setter Property=""Foreground"" Value=""Black""/>
                                        </Trigger>
                                        <Trigger Property=""IsFocused"" Value=""False"">
                                            <Setter Property=""Foreground"" Value=""LightGray""/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Button x:Name=""AVLtreeAdd"" Content=""–î–æ–±–∞–≤–∏—Ç—å"" Margin=""5,0,5,5"" Click=""AVLtreeAdd_Click""/>
                        <Button x:Name=""AVLtreeDelete"" Content=""–£–¥–∞–ª–∏—Ç—å"" Margin=""5,0,5,5"" Click=""AVLtreeDelete_Click""/>
                        <Button x:Name=""AVLtreeSearch"" Content=""–ü–æ–∏—Å–∫"" Margin=""5,0,5,5"" Click=""AVLtreeSearch_Click""/>
                    </StackPanel>
                    <Canvas x:Name=""AVLcanvas"" Grid.Column=""1"" Background=""Transparent"" ClipToBounds=""True"">
                        <!-- –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –¥–µ—Ä–µ–≤–æ -->
                    </Canvas>
                    <ScrollViewer Grid.Column=""1"" VerticalScrollBarVisibility=""Auto"" HorizontalScrollBarVisibility=""Auto"">
                        <ScrollViewer.Content>
                            <Canvas x:Name=""AVLcanvasContainer"" Background=""Transparent"" ClipToBounds=""True""/>
                        </ScrollViewer.Content>
                    </ScrollViewer>
                </Grid>
            </TabItem>
                <!-- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é / –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -->
            <TabItem x:Name=""Settings"">
                <TabItem.Header>
                    <StackPanel Orientation=""Horizontal"">
                        <Ellipse Height=""10"" Width=""10"" Fill=""Black"" />
                        <TextBlock Margin=""3"">Settings</TextBlock>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
"
v0QsxNUn,MainWindow.xaml.cs,shoodymon,C#,Sunday 5th of May 2024 04:11:30 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using static Trees_CourseProject.MainWindow;

namespace Trees_CourseProject
{
    public class BinarySearchTree
    {
        public class TreeNode
        {
            private int value;

            // –û—Ç–∫—Ä—ã—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ Value, –∫–æ—Ç–æ—Ä–æ–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π value –∏–∑–≤–Ω–µ –∫–ª–∞—Å—Å–∞.
            public int Value
            {
                get { return value; }
                set
                {
                    if (value >= -99 && value <= 99)
                    {
                        this.value = value;
                    }
                    else
                    {
                        throw new ArgumentOutOfRangeException(""Value must be between -99 and 99"");
                    }
                }
            }

            public TreeNode Left { get; set; }
            public TreeNode Right { get; set; }

            // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –æ–¥–Ω–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è —É–∑–ª–∞
            public TreeNode(int value)
            {
                Value = value;
                Left = null;
                Right = null;
            }
        }

        public TreeNode root;
        private Canvas canvas;

        public BinarySearchTree(Canvas canvas)
        {
            root = null;
            this.canvas = canvas;
        }

        // –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–µ—Ä–µ–≤–æ
        public void Insert(int value)
        {
            root = Insert(root, value);
            Console.WriteLine($""Inserted node with value {value}"");
        }

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–µ—Ä–µ–≤–æ
        private TreeNode Insert(TreeNode node, int value)
        {
            if (node == null)
            {
                node = new TreeNode(value);
            }
            else if (value < node.Value)
            {
                node.Left = Insert(node.Left, value);
            }
            else if (value > node.Value)
            {
                node.Right = Insert(node.Right, value);
            }
            // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –¥–µ—Ä–µ–≤–µ, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
            return node;
        }

        // –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –¥–µ—Ä–µ–≤–∞
        public void Delete(int value)
        {
            root = Delete(root, value);
            Console.WriteLine($""Deleted node with value {value}"");
        }

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –¥–µ—Ä–µ–≤–∞
        private TreeNode Delete(TreeNode node, int value)
        {
            if (node == null)
            {
                return null;
            }
            else if (value < node.Value)
            {
                node.Left = Delete(node.Left, value);
            }
            else if (value > node.Value)
            {
                node.Right = Delete(node.Right, value);
            }
            else
            {
                // –£–∑–µ–ª –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è
                if (node.Left == null)
                {
                    return node.Right;
                }
                else if (node.Right == null)
                {
                    return node.Left;
                }
                else
                {
                    // –£ —É–∑–ª–∞ –µ—Å—Ç—å –æ–±–∞ –ø–æ—Ç–æ–º–∫–∞
                    // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∏–º–µ–Ω—å—à–∏–π —É–∑–µ–ª –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ (–∏–ª–∏ –Ω–∞–∏–±–æ–ª—å—à–∏–π –≤ –ª–µ–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ)
                    TreeNode minRight = FindMin(node.Right);
                    // –ö–æ–ø–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —É–∑–ª–∞ –≤ —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª
                    node.Value = minRight.Value;
                    // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —É–¥–∞–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —É–∑–µ–ª
                    node.Right = Delete(node.Right, minRight.Value);
                }
            }
            return node;
        }

        // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–∏–º–µ–Ω—å—à–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–µ—Ä–µ–≤–µ
        private TreeNode FindMin(TreeNode node)
        {
            while (node.Left != null)
            {
                node = node.Left;
            }
            return node;
        }

        // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–µ—Ä–µ–≤–µ
        public bool Search(int value)
        {
            return Search(root, value);
        }

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–µ—Ä–µ–≤–µ
        private bool Search(TreeNode node, int value)
        {
            if (node == null)
            {
                return false;
            }
            else if (node.Value == value)
            {
                return true;
            }
            else if (value < node.Value)
            {
                return Search(node.Left, value);
            }
            else
            {
                return Search(node.Right, value);
            }
        }

        // –ú–µ—Ç–æ–¥—ã –¥–ª—è –æ–±—Ö–æ–¥–∞ –¥–µ—Ä–µ–≤–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ—Ä—è–¥–∫–∞—Ö (–ø—Ä—è–º–æ–º, —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ–º –∏ –æ–±—Ä–∞—Ç–Ω–æ–º)
        public void PreOrderTraversal()
        {
            PreOrderTraversal(root);
        }

        private void PreOrderTraversal(TreeNode node)
        {
            if (node != null)
            {
                Console.Write(node.Value + "" "");
                PreOrderTraversal(node.Left);
                PreOrderTraversal(node.Right);
            }
        }

        public void InOrderTraversal()
        {
            InOrderTraversal(root);
        }

        private void InOrderTraversal(TreeNode node)
        {
            if (node != null)
            {
                InOrderTraversal(node.Left);
                Console.Write(node.Value + "" "");
                InOrderTraversal(node.Right);
            }
        }

        public void PostOrderTraversal()
        {
            PostOrderTraversal(root);
        }

        private void PostOrderTraversal(TreeNode node)
        {
            if (node != null)
            {
                PostOrderTraversal(node.Left);
                PostOrderTraversal(node.Right);
                Console.Write(node.Value + "" "");
            }
        }

    }

    public class AVLTree
    {
        public class AVLNode
        {
            public int Value;
            public int Height;
            public AVLNode Left;
            public AVLNode Right;

            public AVLNode(int value)
            {
                Value = value;
                Height = 1;
                Left = null;
                Right = null;
            }
        }

        public AVLNode root;
        private Canvas canvas;

        public AVLTree(Canvas canvas)
        {
            root = null;
            this.canvas = canvas;
        }

        private int Height(AVLNode node)
        {
            return node == null ? 0 : node.Height;
        }

        private int BalanceFactor(AVLNode node)
        {
            return Height(node.Left) - Height(node.Right);
        }

        private void UpdateHeight(AVLNode node)
        {
            node.Height = 1 + Math.Max(Height(node.Left), Height(node.Right));
        }

        private AVLNode RightRotate(AVLNode pivot)
        {
            AVLNode newRoot = pivot.Left;
            pivot.Left = newRoot.Right;
            newRoot.Right = pivot;
            UpdateHeight(pivot);
            UpdateHeight(newRoot);
            return newRoot;
        }

        private AVLNode LeftRotate(AVLNode newRoot)
        {
            AVLNode pivot = newRoot.Right;
            newRoot.Right = pivot.Left;
            pivot.Left = newRoot;
            UpdateHeight(newRoot);
            UpdateHeight(pivot);
            return pivot;
        }

        private AVLNode Insert(AVLNode node, int value)
        {
            if (node == null)
                return new AVLNode(value);

            if (value < node.Value)
                node.Left = Insert(node.Left, value);
            else if (value > node.Value)
                node.Right = Insert(node.Right, value);
            else
                return node; // –ó–Ω–∞—á–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –¥–µ—Ä–µ–≤–µ, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

            UpdateHeight(node);

            int balance = BalanceFactor(node);

            // –ü–µ—Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –¥–µ—Ä–µ–≤–∞, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            if (balance > 1)
            {
                // –í—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—å—à–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ª–µ–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
                if (value < node.Left.Value)
                    return RightRotate(node);
                // –í—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ª–µ–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
                if (value > node.Left.Value)
                {
                    node.Left = LeftRotate(node.Left);
                    return RightRotate(node);
                }
            }
            else if (balance < -1)
            {
                // –í—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
                if (value > node.Right.Value)
                    return LeftRotate(node);
                // –í—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—å—à–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
                if (value < node.Right.Value)
                {
                    node.Right = RightRotate(node.Right);
                    return LeftRotate(node);
                }
            }

            return node;
        }

        public void Insert(int value)
        {
            root = Insert(root, value);
        }

        private AVLNode Delete(AVLNode root, int key)
        {
            if (root == null)
                return root;

            if (key < root.Value)
                root.Left = Delete(root.Left, key);
            else if (key > root.Value)
                root.Right = Delete(root.Right, key);
            else
            {
                if (root.Left == null || root.Right == null)
                {
                    AVLNode temp = root.Left != null ? root.Left : root.Right;

                    // –£–∑–µ–ª —Å –æ–¥–Ω–∏–º –∏–ª–∏ –±–µ–∑ –¥–µ—Ç–µ–π
                    if (temp == null)
                    {
                        temp = root;
                        root = null;
                    }
                    else
                        root = temp;
                }
                else
                {
                    // –£–∑–µ–ª —Å –¥–≤—É–º—è –¥–µ—Ç—å–º–∏: –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∏–º–µ–Ω—å—à–∏–π —É–∑–µ–ª –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
                    AVLNode temp = MinValueNode(root.Right);

                    // –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–∏–º–µ–Ω—å—à–µ–≥–æ —É–∑–ª–∞ –≤ —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª
                    root.Value = temp.Value;

                    // –£–¥–∞–ª—è–µ–º –Ω–∞–∏–º–µ–Ω—å—à–∏–π —É–∑–µ–ª –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
                    root.Right = Delete(root.Right, temp.Value);
                }
            }

            // –ï—Å–ª–∏ –¥–µ—Ä–µ–≤–æ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –æ–¥–Ω–æ–≥–æ —É–∑–ª–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
            if (root == null)
                return root;

            // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã—Å–æ—Ç—É —Ç–µ–∫—É—â–µ–≥–æ —É–∑–ª–∞
            UpdateHeight(root);

            // –ü–æ–ª—É—á–∞–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —É–∑–ª–∞
            int balance = BalanceFactor(root);

            // –ü–µ—Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –¥–µ—Ä–µ–≤–∞, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            if (balance > 1 && BalanceFactor(root.Left) >= 0)
                return RightRotate(root);

            if (balance < -1 && BalanceFactor(root.Right) <= 0)
                return LeftRotate(root);

            if (balance > 1 && BalanceFactor(root.Left) < 0)
            {
                root.Left = LeftRotate(root.Left);
                return RightRotate(root);
            }

            if (balance < -1 && BalanceFactor(root.Right) > 0)
            {
                root.Right = RightRotate(root.Right);
                return LeftRotate(root);
            }

            return root;
        }

        private AVLNode MinValueNode(AVLNode node)
        {
            AVLNode current = node;
            while (current.Left != null)
                current = current.Left;
            return current;
        }

        public void Delete(int key)
        {
            root = Delete(root, key);
        }

        public bool Search(int key)
        {
            return Search(root, key);
        }

        private bool Search(AVLNode node, int key)
        {
            if (node == null)
                return false;
            if (key == node.Value)
                return true;
            if (key < node.Value)
                return Search(node.Left, key);
            else
                return Search(node.Right, key);
        }

    }

    public class RedBlackTree
    {
        public enum Color { Red, Black }

        public class RBNode
        {
            public int Value;
            public Color NodeColor;
            public RBNode Left;
            public RBNode Right;
            public RBNode Parent;

            public RBNode(int value)
            {
                Value = value;
                NodeColor = Color.Red;
                Left = null;
                Right = null;
                Parent = null;
            }
        }

        public RBNode root;
        private Canvas canvas;

        public RedBlackTree(Canvas canvas)
        {
            root = null;
            this.canvas = canvas;
        }

        // –ú–µ—Ç–æ–¥—ã –≤—Å—Ç–∞–≤–∫–∏, —É–¥–∞–ª–µ–Ω–∏—è –∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –¥–µ—Ä–µ–≤–∞ –±—É–¥—É—Ç –∑–¥–µ—Å—å
        public void Insert(int value)
        {
            root = Insert(root, null, value); // –ù–∞—á–∏–Ω–∞–µ–º —Å –∫–æ—Ä–Ω—è, —É –∫–æ—Ä–Ω—è –Ω–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è
                                              // –ö–æ—Ä–µ–Ω—å –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–µ—Ä–Ω—ã–º, —á—Ç–æ–±—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∫—Ä–∞—Å–Ω–æ-—á–µ—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞
            root.NodeColor = Color.Black;
            Console.WriteLine($""Inserted node with value {value}"");
        }

        private RBNode Insert(RBNode node, RBNode parent, int value)
        {
            if (node == null)
            {
                node = new RBNode(value);
                node.Parent = parent;
                return node;
            }

            if (value < node.Value)
                node.Left = Insert(node.Left, node, value);
            else if (value > node.Value)
                node.Right = Insert(node.Right, node, value);
            else
                return node; // –ó–Ω–∞—á–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –¥–µ—Ä–µ–≤–µ, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –∫—Ä–∞—Å–Ω–æ-—á–µ—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞
            if (node.Parent != null && node.Parent.NodeColor == Color.Red)
            {
                RBNode parentNode = node.Parent; // –ò–∑–º–µ–Ω–µ–Ω–æ –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
                RBNode grandparent = parentNode.Parent;
                RBNode uncle = grandparent.Left == parentNode ? grandparent.Right : grandparent.Left;

                // –°–ª—É—á–∞–π 1: –î—è–¥—è –∫—Ä–∞—Å–Ω—ã–π
                if (uncle != null && uncle.NodeColor == Color.Red)
                {
                    parentNode.NodeColor = Color.Black;
                    uncle.NodeColor = Color.Black;
                    grandparent.NodeColor = Color.Red;
                    return Insert(grandparent, grandparent.Parent, node.Value); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–≤–æ–π—Å—Ç–≤ —Å –¥–µ–¥—É—à–∫–æ–π
                }

                // –°–ª—É—á–∞–π 2: –î—è–¥—è —á–µ—Ä–Ω—ã–π, —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª - –ø—Ä–∞–≤—ã–π –ø–æ—Ç–æ–º–æ–∫ —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
                if (parentNode.Right == node && grandparent.Left == parentNode)
                {
                    parentNode = LeftRotate(parentNode);
                    node = node.Left;
                }
                // –°–ª—É—á–∞–π 3: –î—è–¥—è —á–µ—Ä–Ω—ã–π, —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª - –ª–µ–≤—ã–π –ø–æ—Ç–æ–º–æ–∫ —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
                else if (parentNode.Left == node && grandparent.Right == parentNode)
                {
                    parentNode = RightRotate(parentNode);
                    node = node.Right;
                }

                // –°–ª—É—á–∞–π 4: –î—è–¥—è —á–µ—Ä–Ω—ã–π, —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª - –ª–µ–≤—ã–π –ø–æ—Ç–æ–º–æ–∫ —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
                parentNode.NodeColor = Color.Black;
                grandparent.NodeColor = Color.Red;
                if (parentNode.Left == node && grandparent.Left == parentNode)
                    grandparent = RightRotate(grandparent);
                else
                    grandparent = LeftRotate(grandparent);
            }


            return node;
        }

        public bool Search(int value)
        {
            return Search(root, value);
        }

        private bool Search(RBNode node, int value)
        {
            if (node == null)
                return false;

            if (value == node.Value)
                return true;

            if (value < node.Value)
                return Search(node.Left, value);
            else
                return Search(node.Right, value);
        }

        public void Delete(int value)
        {
            root = Delete(root, value);
        }

        private RBNode Delete(RBNode node, int value)
        {
            if (node == null)
                return null;

            if (value < node.Value)
                node.Left = Delete(node.Left, value);
            else if (value > node.Value)
                node.Right = Delete(node.Right, value);
            else
            {
                // –ù–∞–π–¥–µ–Ω —É–∑–µ–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
                if (node.Left == null)
                    return node.Right;
                else if (node.Right == null)
                    return node.Left;

                // –£ —É–∑–ª–∞ –µ—Å—Ç—å –æ–±–∞ –ø–æ—Ç–æ–º–∫–∞
                // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∏–º–µ–Ω—å—à–∏–π —É–∑–µ–ª –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ (–∏–ª–∏ –Ω–∞–∏–±–æ–ª—å—à–∏–π –≤ –ª–µ–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ)
                RBNode minRight = FindMin(node.Right);
                // –ö–æ–ø–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —É–∑–ª–∞ –≤ —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª
                node.Value = minRight.Value;
                // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —É–¥–∞–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —É–∑–µ–ª
                node.Right = Delete(node.Right, minRight.Value);
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –∫—Ä–∞—Å–Ω–æ-—á–µ—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —É–∑–ª–∞
            if (node.NodeColor == Color.Black)
            {
                if (node.Left != null && node.Left.NodeColor == Color.Red)
                    node.Left.NodeColor = Color.Black;
                else if (node.Right != null && node.Right.NodeColor == Color.Red)
                    node.Right.NodeColor = Color.Black;
                else
                    node = FixDoubleBlack(node);
            }

            return node;
        }

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–∏–º–µ–Ω—å—à–µ–≥–æ —É–∑–ª–∞ –≤ –¥–µ—Ä–µ–≤–µ
        private RBNode FindMin(RBNode node)
        {
            while (node.Left != null)
                node = node.Left;
            return node;
        }

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–π —á–µ—Ä–Ω–æ–π –≤—ã—Å–æ—Ç—ã —É–∑–ª–∞
        private RBNode FixDoubleBlack(RBNode node)
        {
            if (node.Parent == null)
                return node;

            RBNode sibling = GetSibling(node);
            RBNode parent = node.Parent;

            if (sibling == null)
                return FixDoubleBlack(parent);

            if (sibling.NodeColor == Color.Black)
            {
                // –°–ª—É—á–∞–π 1: –ë—Ä–∞—Ç —á–µ—Ä–Ω—ã–π –∏ —É –±—Ä–∞—Ç–∞ –µ—Å—Ç—å –∫—Ä–∞—Å–Ω—ã–π –ø–æ—Ç–æ–º–æ–∫
                if ((sibling.Left != null && sibling.Left.NodeColor == Color.Red) || (sibling.Right != null && sibling.Right.NodeColor == Color.Red))
                {
                    if (sibling.Left != null && sibling.Left.NodeColor == Color.Red)
                    {
                        if (parent.Left == sibling)
                        {
                            sibling.Left.NodeColor = sibling.NodeColor;
                            sibling.NodeColor = parent.NodeColor;
                            RightRotate(parent);
                        }
                        else
                        {
                            sibling.Left.NodeColor = parent.NodeColor;
                            RightRotate(sibling);
                            LeftRotate(parent);
                        }
                    }
                    else
                    {
                        if (parent.Left == sibling)
                        {
                            sibling.Right.NodeColor = parent.NodeColor;
                            LeftRotate(sibling);
                            RightRotate(parent);
                        }
                        else
                        {
                            sibling.Right.NodeColor = sibling.NodeColor;
                            sibling.NodeColor = parent.NodeColor;
                            LeftRotate(parent);
                        }
                    }
                    parent.NodeColor = Color.Black;
                }
                // –°–ª—É—á–∞–π 2: –ë—Ä–∞—Ç —á–µ—Ä–Ω—ã–π –∏ —É –±—Ä–∞—Ç–∞ –Ω–µ—Ç –∫—Ä–∞—Å–Ω–æ–≥–æ –ø–æ—Ç–æ–º–∫–∞
                else
                {
                    sibling.NodeColor = Color.Red;
                    if (parent.NodeColor == Color.Black)
                        return FixDoubleBlack(parent);
                    else
                        parent.NodeColor = Color.Black;
                }
            }
            // –°–ª—É—á–∞–π 3: –ë—Ä–∞—Ç –∫—Ä–∞—Å–Ω—ã–π
            else
            {
                if (parent.Left == sibling)
                    RightRotate(parent);
                else
                    LeftRotate(parent);
                parent.NodeColor = Color.Red;
                sibling.NodeColor = Color.Black;
                return FixDoubleBlack(node);
            }

            return node;
        }

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±—Ä–∞—Ç–∞ —É–∑–ª–∞
        private RBNode GetSibling(RBNode node)
        {
            if (node.Parent == null)
                return null;

            if (node == node.Parent.Left)
                return node.Parent.Right;
            else
                return node.Parent.Left;
        }

        private RBNode LeftRotate(RBNode node)
        {
            RBNode newRoot = node.Right;
            node.Right = newRoot.Left;
            if (newRoot.Left != null)
                newRoot.Left.Parent = node;
            newRoot.Parent = node.Parent;
            if (node.Parent == null)
                root = newRoot;
            else if (node == node.Parent.Left)
                node.Parent.Left = newRoot;
            else
                node.Parent.Right = newRoot;
            newRoot.Left = node;
            node.Parent = newRoot;
            return newRoot;
        }

        private RBNode RightRotate(RBNode node)
        {
            RBNode newRoot = node.Left;
            node.Left = newRoot.Right;
            if (newRoot.Right != null)
                newRoot.Right.Parent = node;
            newRoot.Parent = node.Parent;
            if (node.Parent == null)
                root = newRoot;
            else if (node == node.Parent.Right)
                node.Parent.Right = newRoot;
            else
                node.Parent.Left = newRoot;
            newRoot.Right = node;
            node.Parent = newRoot;
            return newRoot;
        }

    }

    /// <summary>
    /// –õ–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        private TreeManager treeManager;
        private TreeDrawer treeDrawer;

        private TreeManager binarySearchTreeManager;
        private TreeManager avlTreeManager;
        private TreeManager redBlackTreeManager;

        private TreeDrawer binarySearchTreeDrawer;
        private TreeDrawer avlTreeDrawer;
        private TreeDrawer redBlackTreeDrawer;

        public MainWindow()
        {
            InitializeComponent();
            treeManager = new TreeManager(canvas);
            treeDrawer = new TreeDrawer(canvas);

            binarySearchTreeManager = new TreeManager(BSTcanvas);
            avlTreeManager = new TreeManager(AVLcanvas);
            redBlackTreeManager = new TreeManager(RBcanvas);

            binarySearchTreeDrawer = new TreeDrawer(BSTcanvas);
            avlTreeDrawer = new TreeDrawer(AVLcanvas);
            redBlackTreeDrawer = new TreeDrawer(RBcanvas);
        }

        private void TextBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            TextBox textBox = (TextBox)sender;
            if (string.IsNullOrEmpty(textBox.Text))
            {
                textBox.Foreground = Brushes.LightGray;
            }
            else
            {
                textBox.Foreground = Brushes.Black;
            }
        }

        private void TreeTypeComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            canvas.Children.Clear();

            ComboBox comboBox = (ComboBox)sender;
            TreeType selectedTree = (TreeType)comboBox.SelectedIndex;

            UpdateTreeDrawing(selectedTree);
        }

        private void AddButton_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(nodeInputTextBox.Text))
            {
                int value = int.Parse(nodeInputTextBox.Text); // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞
                TreeType selectedTree = (TreeType)TreeTypeComboBox.SelectedIndex;
                treeManager.Insert(value, selectedTree);
                UpdateTreeDrawing(selectedTree);
            }
        }

        private void DeleteButton_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(nodeInputTextBox.Text))
            {
                int value = int.Parse(nodeInputTextBox.Text);
                TreeType selectedTree = (TreeType)TreeTypeComboBox.SelectedIndex;
                treeManager.Delete(value, selectedTree);
                UpdateTreeDrawing(selectedTree);
            }
        }

        private void SearchButton_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(nodeInputTextBox.Text))
            {
                int value = int.Parse(nodeInputTextBox.Text);
                TreeType selectedTree = (TreeType)TreeTypeComboBox.SelectedIndex;
                bool found = treeManager.Search(value, selectedTree);

                if (found)
                {
                    MessageBox.Show($""–£–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {value} –Ω–∞–π–¥–µ–Ω –≤ –¥–µ—Ä–µ–≤–µ."", ""–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"", MessageBoxButton.OK, MessageBoxImage.Information);
                }
                else
                {
                    MessageBox.Show($""–£–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {value} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–µ—Ä–µ–≤–µ."", ""–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"", MessageBoxButton.OK, MessageBoxImage.Information);
                }
            }
        }

        private void UpdateTreeDrawing(TreeType treeType)
        {
            switch (treeType)
            {
                case TreeType.BinarySearchTree:
                    if (MainTabControl.SelectedItem == BSTree)
                    {
                        treeDrawer.DrawBinarySearchTree(treeManager.binarySearchTree.root, BSTcanvas);
                    }
                    break;
                case TreeType.AVLTree:
                    if (MainTabControl.SelectedItem == AVLtree)
                    {
                        treeDrawer.DrawAVLTree(treeManager.avlTree.root, AVLcanvas);
                    }
                    break;
                case TreeType.RedBlackTree:
                    if (MainTabControl.SelectedItem == RBtree)
                    {
                        treeDrawer.DrawRedBlackTree(treeManager.redBlackTree.root, RBcanvas);
                    }
                    break;
            }
        }


        private void UpdateTreeDrawingTabItem(TreeType treeType)
        {
            switch (treeType)
            {
                case TreeType.BinarySearchTree:
                    if (MainTabControl.SelectedItem == BSTree)
                    {
                        treeDrawer.DrawBinarySearchTree(treeManager.binarySearchTree.root, BSTcanvas);
                    }
                    break;
                case TreeType.AVLTree:
                    if (MainTabControl.SelectedItem == AVLtree)
                    {
                        treeDrawer.DrawAVLTree(treeManager.avlTree.root, AVLcanvas);
                    }
                    break;
                case TreeType.RedBlackTree:
                    if (MainTabControl.SelectedItem == RBtree)
                    {
                        treeDrawer.DrawRedBlackTree(treeManager.redBlackTree.root, RBcanvas);
                    }
                    break;
            }
        }



        private void TreesButton_Click(object sender, RoutedEventArgs e)
        {
            TabControl mainTabControl = this.MainTabControl;
            if (mainTabControl != null)
            {
                mainTabControl.SelectedItem = mainTabControl.Items.OfType<TabItem>().FirstOrDefault(t => t.Name == ""TreeSelectionMenu"");
            }
        }

        private void SettingsButton_Click(object sender, RoutedEventArgs e)
        {
            TabControl mainTabControl = this.MainTabControl;
            if (mainTabControl != null)
            {
                mainTabControl.SelectedItem = mainTabControl.Items.OfType<TabItem>().FirstOrDefault(t => t.Name == ""Settings"");
            }
        }

        private void ExitButton_Click(object sender, RoutedEventArgs e)
        {
            Application.Current.Shutdown();
        }

        private void BSTreeButton_Click(object sender, RoutedEventArgs e)
        {
            MainTabControl.SelectedItem = BSTree;
            UpdateTreeDrawingTabItem(TreeType.BinarySearchTree);
        }

        private void AVLtreeButton_Click(object sender, RoutedEventArgs e)
        {
            MainTabControl.SelectedItem = AVLtree;
            treeDrawer.DrawAVLTree(treeManager.avlTree.root, AVLcanvas);
        }

        private void RBtreeButton_Click(object sender, RoutedEventArgs e)
        {
            MainTabControl.SelectedItem = RBtree;
            treeDrawer.DrawRedBlackTree(treeManager.redBlackTree.root, RBcanvas);
        }

        private void BackToMenuButton_Click(object sender, RoutedEventArgs e)
        {
            MainTabControl.SelectedItem = StartUpMenu;
        }

        private void BSTreeAdd_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(BSTnodeInputTextBox.Text))
            {
                int value = int.Parse(BSTnodeInputTextBox.Text);
                treeManager.Insert(value, TreeType.BinarySearchTree);
                UpdateTreeDrawingTabItem(TreeType.BinarySearchTree);
            }
        }

        private void BSTreeDelete_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(BSTnodeInputTextBox.Text))
            {
                int value = int.Parse(BSTnodeInputTextBox.Text);
                treeManager.Delete(value, TreeType.BinarySearchTree);
                UpdateTreeDrawingTabItem(TreeType.BinarySearchTree);
            }
        }

        private void BStreeSearch_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(BSTnodeInputTextBox.Text))
            {
                int value = int.Parse(BSTnodeInputTextBox.Text);
                bool found = treeManager.Search(value, TreeType.BinarySearchTree);

                if (found)
                {
                    MessageBox.Show($""–£–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {value} –Ω–∞–π–¥–µ–Ω –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ –ø–æ–∏—Å–∫–∞."", ""–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"", MessageBoxButton.OK, MessageBoxImage.Information);
                }
                else
                {
                    MessageBox.Show($""–£–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {value} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ –ø–æ–∏—Å–∫–∞."", ""–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"", MessageBoxButton.OK, MessageBoxImage.Information);
                }
            }
        }

        private void RBreeAdd_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(RBnodeInputTextBox.Text))
            {
                int value = int.Parse(RBnodeInputTextBox.Text);
                treeManager.Insert(value, TreeType.RedBlackTree);
                UpdateTreeDrawingTabItem(TreeType.RedBlackTree);
            }
        }

        private void RBreeDelete_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(RBnodeInputTextBox.Text))
            {
                int value = int.Parse(RBnodeInputTextBox.Text);
                treeManager.Delete(value, TreeType.RedBlackTree);
                UpdateTreeDrawingTabItem(TreeType.RedBlackTree);
            }
        }

        private void RBtreeSearch_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(RBnodeInputTextBox.Text))
            {
                int value = int.Parse(RBnodeInputTextBox.Text);
                bool found = treeManager.Search(value, TreeType.RedBlackTree);

                if (found)
                {
                    MessageBox.Show($""–£–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {value} –Ω–∞–π–¥–µ–Ω –≤ –ö–ß-–¥–µ—Ä–µ–≤–µ."", ""–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"", MessageBoxButton.OK, MessageBoxImage.Information);
                }
                else
                {
                    MessageBox.Show($""–£–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {value} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ö–ß-–¥–µ—Ä–µ–≤–µ."", ""–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"", MessageBoxButton.OK, MessageBoxImage.Information);
                }
            }
        }

        private void AVLtreeAdd_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(AVLnodeInputTextBox.Text))
            {
                int value = int.Parse(AVLnodeInputTextBox.Text);
                treeManager.Insert(value, TreeType.AVLTree);
                UpdateTreeDrawingTabItem(TreeType.AVLTree);
            }
        }

        private void AVLtreeDelete_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(AVLnodeInputTextBox.Text))
            {
                int value = int.Parse(AVLnodeInputTextBox.Text);
                treeManager.Delete(value, TreeType.AVLTree);
                UpdateTreeDrawingTabItem(TreeType.AVLTree);
            }
        }

        private void AVLtreeSearch_Click(object sender, RoutedEventArgs e)
        {
            if (!string.IsNullOrEmpty(AVLnodeInputTextBox.Text))
            {
                int value = int.Parse(AVLnodeInputTextBox.Text);
                bool found = treeManager.Search(value, TreeType.AVLTree);

                if (found)
                {
                    MessageBox.Show($""–£–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {value} –Ω–∞–π–¥–µ–Ω –≤ AVL-–¥–µ—Ä–µ–≤–µ."", ""–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"", MessageBoxButton.OK, MessageBoxImage.Information);
                }
                else
                {
                    MessageBox.Show($""–£–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {value} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ AVL-–¥–µ—Ä–µ–≤–µ."", ""–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞"", MessageBoxButton.OK, MessageBoxImage.Information);
                }
            }
        }
    }

}"
kj37KCbS,Untitled,DiamondDaDog,Lua,Sunday 5th of May 2024 03:40:22 PM CDT,"Vaults = 2


fs.makeDir(""vault_cache"")

Controller = peripheral.wrap(""top"")

DirectionOut = true
DirectionIn = false

function DistanceToRotationDuration(speed, distance)
    return (math.ceil(distance / (speed / 512)) + 2) / 20
end

function Split(inputstr, sep)
    if sep == nil then
            sep = ""%s""
    end
    local t={}
    for str in string.gmatch(inputstr, ""([^""..sep..""]+)"") do
            table.insert(t, str)
    end
    return t
end


function SetPusherLock(state)
    Controller.setOutput(""top"", state)
end

function SetHandDirection(dir)
    Controller.setOutput(""right"", not dir)
end

function SetGrabberLock(state)
    Controller.setOutput(""back"", state)
end

function SetChassisDirection(dir)
    Controller.setOutput(""left"", not dir)
end

function SetChassisLock(state)
    Controller.setOutput(""front"", state)
end

function Reset()
    SetHandDirection(DirectionIn)
    SetPusherLock(false)
    SetGrabberLock(false)
    sleep(5)
    SetPusherLock(true)
    SetGrabberLock(true)

    SetChassisDirection(DirectionIn)
    SetChassisLock(false)
    sleep(5)
    SetChassisLock(true)
end

function GrabVault(index)
    Duration = DistanceToRotationDuration(128, index * 3 + 3)

    SetChassisDirection(DirectionOut)
    SetChassisLock(false)
    sleep(Duration)
    SetChassisLock(true)

    SetHandDirection(DirectionOut)
    SetGrabberLock(false)
    sleep(2)
    SetHandDirection(DirectionIn)
    sleep(2)
    SetGrabberLock(true)

    SetChassisDirection(DirectionIn)
    SetChassisLock(false)
    sleep(Duration)
    SetChassisLock(true)

    SetHandDirection(DirectionOut)
    SetPusherLock(false)
    sleep(2)
    SetHandDirection(DirectionIn)
    sleep(2)
    SetPusherLock(true)
end

function ReturnVault(index)
    Duration = DistanceToRotationDuration(128, index * 3 + 3)

    SetHandDirection(DirectionOut)
    SetGrabberLock(false)
    sleep(2)
    SetHandDirection(DirectionIn)
    sleep(2)
    SetGrabberLock(true)

    SetChassisDirection(DirectionOut)
    SetChassisLock(false)
    sleep(Duration)
    SetChassisLock(true)

    SetHandDirection(DirectionOut)
    SetPusherLock(false)
    sleep(2)
    SetHandDirection(DirectionIn)
    sleep(2)
    SetPusherLock(true)

    SetChassisDirection(DirectionIn)
    SetChassisLock(false)
    sleep(Duration)
    SetChassisLock(true)
end

function GrabAndIndexVault(index)
    GrabVault(index)

    IndexVault(index)

    ReturnVault(index)
end

function IndexVault(index)
    local vault = peripheral.wrap(""back"")
    local size = vault.size()

    local file = fs.open(""vault_cache/"" .. index + 1, ""w"")
    local empty = 0
    for i = 1, size do
        local detail = vault.getItemDetail(i)
        if detail then
            file.writeLine(i .. "","" .. detail.displayName .. "","" .. detail.count)
        else empty = empty + 1 end

        if empty > 10 then break end
    end
    file.close()
end

function GetItems(index)
    local file = fs.open(""vault_cache/"" .. index, ""r"")
    local items = {}
    if not file then return items end
    local i = 1
    while true do
        local line = file.readLine()
        if line then
            local parts = Split(line, "","")
            items[i] = {name = parts[2], count = tonumber(parts[3]), vault = index, slot = tonumber(parts[1])}
        else break end
        i = i + 1
    end
    file.close()
    return items
end

function GetAllItems()
    local items = {}
    for i = 1, Vaults do
        items[i] = GetItems(i)
    end
    -- flatten array
    local flat = {}
    for i = 1, Vaults do
        for j = 1, #items[i] do
            table.insert(flat, items[i][j])
        end
    end
    return flat
end

function CombineLikeItems(items)
    local combined = {}
    for i = 1, #items do
        local item = items[i]
        if combined[item.name] then
            combined[item.name].count = combined[item.name].count + item.count

            -- if not already in the list of vaults
            if not table.concat(combined[item.name].vaults, "" ""):find(item.vault) then
                table.insert(combined[item.name].vaults, item.vault)
            end
        else
            combined[item.name] = {count = item.count, vaults = {item.vault}}
        end
    end
    return combined
end

while true do
    term.clear()

    local cachedVaults = fs.list(""vault_cache"")

    print(""Available Vaults: "" .. Vaults)
    print(""Indexed Vaults: "" .. table.concat(cachedVaults, "", ""))
    print(""Type 'search' to search for an item, or type 'more' for more options"")

    local input = read()
    local items = GetAllItems()
    local combined = CombineLikeItems(items)


    if input == ""more"" then
        term.clear();
        print(""index: Index a vault"")
        print(""indexall: Index all vaults"")
        print(""reset: Reset the system"")
        print(""list: List all items"")
        print(""empty: Empty the chest into a vault"")
        print(""exit: Exit the program"")
        read()
    elseif input == ""index"" then
        term.clear();
        print(""Enter the index of the vault to index"")
        local index = tonumber(read())
        if index then
            GrabAndIndexVault(index - 1)
        else
            print(""Invalid index"")
            read()
        end
    elseif input == ""indexall"" then
        term.clear();
        for i = 1, Vaults do
            GrabAndIndexVault(i - 1)
        end
    elseif input == ""reset"" then
        term.clear();
        Reset()
    elseif input == ""list"" then
        term.clear();
        for name, item in pairs(combined) do
            print(name .. "" x"" .. item.count .. "" in vaults "" .. table.concat(item.vaults, "", ""))
        end
        read()
    elseif input == ""empty"" then
        term.clear();

        -- use the cache to find if a vault is full
        local fullVaults = {}
        for i = 1, Vaults do
            local file = fs.open(""vault_cache/"" .. i, ""r"")
            if file.readAll():find(""1620"") then
                table.insert(fullVaults, i)
            end
        end

        -- get the first non-full vault
        local vaultNum = 1
        while true do
            if not table.concat(fullVaults, "" ""):find(vaultNum) then
                break
            end
            vaultNum = vaultNum + 1
        end

        GrabVault(vaultNum - 1)

        local chest = peripheral.wrap(""left"")

        for i = 1, chest.size() do
            local detail = chest.getItemDetail(i)
            if detail then
                chest.pushItems(""back"", i, detail.count)
            end
        end

        IndexVault(vaultNum - 1)
        ReturnVault(vaultNum - 1)
    elseif input == ""search"" then
        term.clear();
        local currentVault = -1
        local search = """"

        while search ~= ""done"" do
            term.clear();
            print(""Enter the name of an item to search for or 'done' to exit"")
            search = read()

            if search == ""done"" then break end

            local found = false
            for name, item in pairs(combined) do
                if name:lower():find(search:lower()) then
                    found = true
                    print(""Found "" .. name .. "" x"" .. item.count .. "" in vaults "" .. table.concat(item.vaults, "", ""))
                    print(""How many would you like to retrieve? (0 to skip)"")
                    local input = read()
                    if input == ""all"" then
                        input = item.count
                    end
                    local amount = tonumber(input)

                    if amount > item.count then
                        print(""Not enough items in vaults"")
                        read()
                    elseif amount > 0 then
                        local retrieved = 0
                        local vaultNum = 1

                        while retrieved < amount do
                            term.clear()
                            print(""Retrieving "" .. name .. "" x"" .. amount .. "" from vault "" .. vaultNum)

                            if currentVault ~= vaultNum then
                                if currentVault ~= -1 then ReturnVault(vaultNum - 1) end
                                GrabVault(vaultNum - 1)
                                currentVault = vaultNum
                            end

                            local vault = peripheral.wrap(""back"")

                            local vaultItems = GetItems(vaultNum)
                            for i = 1, #vaultItems do
                                if vaultItems[i].name == name then
                                    local toRetrieve = math.min(vaultItems[i].count, amount - retrieved)
                                    vault.pushItems(""left"", vaultItems[i].slot, toRetrieve)
                                    retrieved = retrieved + toRetrieve
                                end
                            end

                            IndexVault(vaultNum - 1)
                            if retrieved < amount then
                                ReturnVault(vaultNum - 1)
                                -- find next vault with the item
                                local found = false
                                for i = 1, Vaults do
                                    if i ~= vaultNum then
                                        local vaultItems = GetItems(i)
                                        for j = 1, #vaultItems do
                                            if vaultItems[j].name == name then
                                                vaultNum = i
                                                found = true
                                                break
                                            end
                                        end
                                    end
                                    if found then break end
                                end
                            end
                        end
                    end
                    break
                end
            end

            if not found then
                print(""No items found with name "" .. search)
                read()
            end
        end

        if currentVault ~= -1 then ReturnVault(currentVault - 1) end
    end
end"
VWaWdeBm,Untitled,7134956,C,Sunday 5th of May 2024 03:38:53 PM CDT,"
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include ""spi.h""
#include ""task.h""

// 24 MHz max SPI frequency
#define ICM426XX_MAX_SPI_CLK_HZ 24000000

#define ICM426XX_RA_REG_BANK_SEL                    0x76
#define ICM426XX_BANK_SELECT0                       0x00
#define ICM426XX_BANK_SELECT1                       0x01
#define ICM426XX_BANK_SELECT2                       0x02
#define ICM426XX_BANK_SELECT3                       0x03
#define ICM426XX_BANK_SELECT4                       0x04

#define ICM426XX_RA_PWR_MGMT0                       0x4E  // User Bank 0
#define ICM426XX_PWR_MGMT0_ACCEL_MODE_LN            (3 << 0)
#define ICM426XX_PWR_MGMT0_GYRO_MODE_LN             (3 << 2)
#define ICM426XX_PWR_MGMT0_GYRO_ACCEL_MODE_OFF      ((0 << 0) | (0 << 2))
#define ICM426XX_PWR_MGMT0_TEMP_DISABLE_OFF         (0 << 5)
#define ICM426XX_PWR_MGMT0_TEMP_DISABLE_ON          (1 << 5)

#define ICM426XX_RA_GYRO_CONFIG0                    0x4F
#define ICM426XX_RA_ACCEL_CONFIG0                   0x50

// --- Registers for gyro and acc Anti-Alias Filter ---------
#define ICM426XX_RA_GYRO_CONFIG_STATIC3             0x0C  // User Bank 1
#define ICM426XX_RA_GYRO_CONFIG_STATIC4             0x0D  // User Bank 1
#define ICM426XX_RA_GYRO_CONFIG_STATIC5             0x0E  // User Bank 1
#define ICM426XX_RA_ACCEL_CONFIG_STATIC2            0x03  // User Bank 2
#define ICM426XX_RA_ACCEL_CONFIG_STATIC3            0x04  // User Bank 2
#define ICM426XX_RA_ACCEL_CONFIG_STATIC4            0x05  // User Bank 2
// --- Register & setting for gyro and acc UI Filter --------
#define ICM426XX_RA_GYRO_ACCEL_CONFIG0              0x52  // User Bank 0
#define ICM426XX_ACCEL_UI_FILT_BW_LOW_LATENCY       (15 << 4) 
#define ICM426XX_GYRO_UI_FILT_BW_LOW_LATENCY        (15 << 0)
// ----------------------------------------------------------

#define ICM426XX_RA_GYRO_DATA_X1                    0x25  // User Bank 0
#define ICM426XX_RA_ACCEL_DATA_X1                   0x1F  // User Bank 0

#define ICM426XX_RA_INT_CONFIG                      0x14  // User Bank 0
#define ICM426XX_INT1_MODE_PULSED                   (0 << 2)
#define ICM426XX_INT1_MODE_LATCHED                  (1 << 2)
#define ICM426XX_INT1_DRIVE_CIRCUIT_OD              (0 << 1)
#define ICM426XX_INT1_DRIVE_CIRCUIT_PP              (1 << 1)
#define ICM426XX_INT1_POLARITY_ACTIVE_LOW           (0 << 0)
#define ICM426XX_INT1_POLARITY_ACTIVE_HIGH          (1 << 0)

#define ICM426XX_RA_INT_CONFIG0                     0x63  // User Bank 0
#define ICM426XX_UI_DRDY_INT_CLEAR_ON_SBR           ((0 << 5) || (0 << 4))
#define ICM426XX_UI_DRDY_INT_CLEAR_ON_SBR_DUPLICATE ((0 << 5) || (0 << 4)) // duplicate settings in datasheet, Rev 1.2.
#define ICM426XX_UI_DRDY_INT_CLEAR_ON_F1BR          ((1 << 5) || (0 << 4))
#define ICM426XX_UI_DRDY_INT_CLEAR_ON_SBR_AND_F1BR  ((1 << 5) || (1 << 4))

#define ICM426XX_RA_INT_CONFIG1                     0x64   // User Bank 0
#define ICM426XX_INT_ASYNC_RESET_BIT                4
#define ICM426XX_INT_TDEASSERT_DISABLE_BIT          5
#define ICM426XX_INT_TDEASSERT_ENABLED              (0 << ICM426XX_INT_TDEASSERT_DISABLE_BIT)
#define ICM426XX_INT_TDEASSERT_DISABLED             (1 << ICM426XX_INT_TDEASSERT_DISABLE_BIT)
#define ICM426XX_INT_TPULSE_DURATION_BIT            6
#define ICM426XX_INT_TPULSE_DURATION_100            (0 << ICM426XX_INT_TPULSE_DURATION_BIT)
#define ICM426XX_INT_TPULSE_DURATION_8              (1 << ICM426XX_INT_TPULSE_DURATION_BIT)

#define ICM426XX_RA_INT_SOURCE0                     0x65  // User Bank 0
#define ICM426XX_UI_DRDY_INT1_EN_DISABLED           (0 << 3)
#define ICM426XX_UI_DRDY_INT1_EN_ENABLED            (1 << 3)

enum gyro_fsr_e {
    INV_FSR_250DPS = 0,
    INV_FSR_500DPS,
    INV_FSR_1000DPS,
    INV_FSR_2000DPS,
    NUM_GYRO_FSR
};

enum accel_fsr_e {
    INV_FSR_2G = 0,
    INV_FSR_4G,
    INV_FSR_8G,
    INV_FSR_16G,
    NUM_ACCEL_FSR
};

typedef enum {
    ODR_CONFIG_8K = 0,
    ODR_CONFIG_4K,
    ODR_CONFIG_2K,
    ODR_CONFIG_1K,
    ODR_CONFIG_COUNT
} odrConfig_e;

typedef enum {
    AAF_CONFIG_258HZ = 0,
    AAF_CONFIG_536HZ,
    AAF_CONFIG_997HZ,
    AAF_CONFIG_1962HZ,
    AAF_CONFIG_COUNT
} aafConfig_e;

typedef struct aafConfig_s {
    uint8_t delt;
    uint16_t deltSqr;
    uint8_t bitshift;
} aafConfig_t;

// Possible output data rates (ODRs)
static uint8_t odrLUT[ODR_CONFIG_COUNT] = {  // see GYRO_ODR in section 5.6
    [ODR_CONFIG_8K] = 3,
    [ODR_CONFIG_4K] = 4,
    [ODR_CONFIG_2K] = 5,
    [ODR_CONFIG_1K] = 6,
};

// Possible gyro Anti-Alias Filter (AAF) cutoffs for ICM-42688P
static aafConfig_t aafLUT42688[AAF_CONFIG_COUNT] = {  // see table in section 5.3
    [AAF_CONFIG_258HZ]  = {  6,   36, 10 },
    [AAF_CONFIG_536HZ]  = { 12,  144,  8 },
    [AAF_CONFIG_997HZ]  = { 21,  440,  6 },
    [AAF_CONFIG_1962HZ] = { 37, 1376,  4 },
};

void spiWriteReg(uint8_t addr, uint8_t data)
{
    spi_select_chip();

    spi_send_byte(addr);
    spi_send_byte(data);

    spi_deselect_chip();
}

uint8_t spiReadReg(uint8_t addr)
{
    uint8_t t;

    spi_select_chip();

    spi_send_byte(addr);
    t = spi_send_byte(0);

    spi_deselect_chip();

    return t;
}

static void turnAGOff(void)
{
    spiWriteReg(ICM426XX_RA_PWR_MGMT0, ICM426XX_PWR_MGMT0_GYRO_ACCEL_MODE_OFF);
}

// Turn on gyro and acc on in Low Noise mode
static void turnAGOn(void)
{
    spiWriteReg(ICM426XX_RA_PWR_MGMT0, ICM426XX_PWR_MGMT0_TEMP_DISABLE_OFF | ICM426XX_PWR_MGMT0_ACCEL_MODE_LN | ICM426XX_PWR_MGMT0_GYRO_MODE_LN);
    task_wait(1);
}

static void setUserBank(const uint8_t user_bank)
{
    spiWriteReg(ICM426XX_RA_REG_BANK_SEL, user_bank & 7);
}

void icm426xxAGInit(void)
{
    SPI_Configuration();

    //accDataReg = ICM426XX_RA_ACCEL_DATA_X1;
    //gyro->gyroDataReg = ICM426XX_RA_GYRO_DATA_X1;

    // Turn off ACC and GYRO so they can be configured
    // See section 12.9 in ICM-42688-P datasheet v1.7
    setUserBank(ICM426XX_BANK_SELECT0);
    turnAGOff();

    // Configure gyro Anti-Alias Filter (see section 5.3 ""ANTI-ALIAS FILTER"")
    aafConfig_t aafConfig = aafLUT42688[AAF_CONFIG_258HZ];
    setUserBank(ICM426XX_BANK_SELECT1);
    spiWriteReg(ICM426XX_RA_GYRO_CONFIG_STATIC3, aafConfig.delt);
    spiWriteReg(ICM426XX_RA_GYRO_CONFIG_STATIC4, aafConfig.deltSqr & 0xFF);
    spiWriteReg(ICM426XX_RA_GYRO_CONFIG_STATIC5, (aafConfig.deltSqr >> 8) | (aafConfig.bitshift << 4));

    // Configure acc Anti-Alias Filter for 1kHz sample rate (see tasks.c)
    aafConfig = aafLUT42688[AAF_CONFIG_258HZ];
    setUserBank(ICM426XX_BANK_SELECT2);
    spiWriteReg(ICM426XX_RA_ACCEL_CONFIG_STATIC2, aafConfig.delt << 1);
    spiWriteReg(ICM426XX_RA_ACCEL_CONFIG_STATIC3, aafConfig.deltSqr & 0xFF);
    spiWriteReg(ICM426XX_RA_ACCEL_CONFIG_STATIC4, (aafConfig.deltSqr >> 8) | (aafConfig.bitshift << 4));

    // Configure gyro and acc UI Filters
    setUserBank(ICM426XX_BANK_SELECT0);
    spiWriteReg(ICM426XX_RA_GYRO_ACCEL_CONFIG0, ICM426XX_ACCEL_UI_FILT_BW_LOW_LATENCY | ICM426XX_GYRO_UI_FILT_BW_LOW_LATENCY);

    // Configure interrupt pin
    spiWriteReg(ICM426XX_RA_INT_CONFIG, ICM426XX_INT1_MODE_PULSED | ICM426XX_INT1_DRIVE_CIRCUIT_PP | ICM426XX_INT1_POLARITY_ACTIVE_HIGH);
    spiWriteReg(ICM426XX_RA_INT_CONFIG0, ICM426XX_UI_DRDY_INT_CLEAR_ON_SBR);

    spiWriteReg(ICM426XX_RA_INT_SOURCE0, ICM426XX_UI_DRDY_INT1_EN_ENABLED);

    uint8_t intConfig1Value = spiReadReg(ICM426XX_RA_INT_CONFIG1 | 0x80);
    // Datasheet says: ""User should change setting to 0 from default setting of 1, for proper INT1 and INT2 pin operation""
    intConfig1Value &= ~(1 << ICM426XX_INT_ASYNC_RESET_BIT);
    intConfig1Value |= (ICM426XX_INT_TPULSE_DURATION_8 | ICM426XX_INT_TDEASSERT_DISABLED);

    spiWriteReg(ICM426XX_RA_INT_CONFIG1, intConfig1Value);

    // Turn on gyro and acc on again so ODR and FSR can be configured
    turnAGOn();

    uint8_t odrConfig = odrLUT[ODR_CONFIG_1K];

    spiWriteReg(ICM426XX_RA_GYRO_CONFIG0, (3 - INV_FSR_2000DPS) << 5 | (odrConfig & 0x0F));
    task_wait(15);

    spiWriteReg(ICM426XX_RA_ACCEL_CONFIG0, (3 - INV_FSR_16G) << 5 | (odrConfig & 0x0F));
    task_wait(15);
}
"
KPHGydz3,ASP.NET Weather Example API for HiddenDevs C# application,tommarek_CZE,C#,Sunday 5th of May 2024 03:13:21 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using Newtonsoft.Json;

namespace testWebAplication
{
    [ApiController]
    [Route(""[controller]"")]
    public class WeatherForecastController : ControllerBase
    {

        [HttpGet(Name = ""GetWeatherForecast"")]

        // Asyncrhonous function thats return ASP.NET api data from outside API
        public async Task<IEnumerable<WeatherForecast>> Get()
        {
            var apiUrl = ""10.10.0.45/getSensorsData"";
            var weatherForecasts = await GetData(apiUrl);

            return weatherForecasts;
        }

        // Asynchronous function that fetch all data from outside api and returns it
        private async Task<IEnumerable<WeatherForecast>> GetData(string apiUrl)
        {
            // Create http client that fetches the data from outside api and awaites reponse
            using (HttpClient client = new HttpClient())
            {
                HttpResponseMessage response = await client.GetAsync(apiUrl);

                // If response retiturn succes code, desearize and assing fetched data from the outside api
                if (response.IsSuccessStatusCode)
                {
                    // Get json from response and deseralize it
                    string json = await response.Content.ReadAsStringAsync();
                    var data = JsonConvert.DeserializeObject<Data>(json);

                    // Assing all extracted varriables to the api varriables
                    var weatherForecasts = data.extractedData.Select(item => new WeatherForecast
                    {
                        localDate = DateOnly.FromDateTime(DateTime.Now),
                        localTime = TimeOnly.FromDateTime(DateTime.Now),
                        lat = Convert.ToInt32(item.Name == ""lat"" ? item.Varriable : null),
                        lon = Convert.ToInt32(item.Name == ""lon"" ? item.Varriable : null),
                        country = item.Name == ""country"" ? Convert.ToString(item.Varriable) : null,
                        region = item.Name == ""region"" ? Convert.ToString(item.Varriable) : null,
                        city = item.Name == ""city"" ? Convert.ToString(item.Varriable) : null,
                        celsiusTemperature = item.Name == ""celsiusTemperature"" ? Convert.ToInt32(item.Varriable) : 0,
                        windDegree = item.Name == ""windDegree"" ? Convert.ToInt32(item.Varriable) : 0,
                        windDir = item.Name == ""windDir"" ? Convert.ToString(item.Varriable) : null,
                        co = item.Name == ""co"" ? Convert.ToInt32(item.Varriable) : 0,
                        o3 = item.Name == ""o3"" ? Convert.ToInt32(item.Varriable) : 0,
                        windKm = item.Name == ""windKm"" ? Convert.ToInt32(item.Varriable) : 0,
                        clouds = item.Name == ""clouds"" ? Convert.ToInt32(item.Varriable) : 0,
                        pm10 = item.Name == ""pm10"" ? Convert.ToInt32(item.Varriable) : 0,
                        uvSensor = item.Name == ""uvSensor"" ? Convert.ToInt32(item.Varriable) : 0,
                        condition = item.Name == ""condition"" ? Convert.ToString(item.Varriable) : null
                    });

                    return weatherForecasts;
                }
                else
                {
                    return null;
                }
            }
        }
    }

    // Define classes for json deserialization
    public class Data
    {
        [JsonProperty(""weatherData"")]
        public apiData[] extractedData { get; set; }
    }

    public class apiData
    {
        [JsonProperty(""name"")]
        public string Name { get; set; }

        [JsonProperty(""varriable"")]
        public object Varriable { get; set; }
    }
}
"
hbwHjHeq,Sudoku v1,Catsher,Python,Sunday 5th of May 2024 03:11:11 PM CDT,"from typing import Tuple


def generate_matrixes(start_matrix: list[list[int]], nulls_passed: int = 0) -> list[list[list[int]]]:
    if nulls_passed - 1 == count_nulls_in_matrix(start_matrix):
        return [start_matrix]
    
    coords = count_coords(start_matrix, nulls_passed)
    if coords is None:
        print(""\n\n\n\n\n\n\nNI NI NI\n\n\n\n\n\n\n"")
    x, y = coords

    numbers_we_can_put = get_possible_numbers(start_matrix, x, y)

    all_new_matrixes: list[list[list[int]]] = []
    for numb in numbers_we_can_put:
        new_matrix = my_deep_copy(start_matrix)
        new_matrix[x][y] = numb
        new_generated_matrixes = generate_matrixes(new_matrix, nulls_passed + 1)
        all_new_matrixes = my_extend(all_new_matrixes, new_generated_matrixes)

    return all_new_matrixes
    

def my_extend(arr1: list[list[list]], arr2: list[list[list]]) -> list[list[list]]:
    for matrix in arr2:
        arr1.append(matrix)
    return arr1


def my_deep_copy(arr: list[list]) -> list[list]:
    new_arr = []
    for i in range(len(arr)):
        new_row = []
        for j in range(len(arr[i])):
            new_row.append(arr[i][j])
        new_arr.append(new_row)
    return new_arr

def count_coords(matrix: list[list[int]], at_null: int) -> Tuple[int, int]:
    numbers_passed = 0

    for ind1 in range(len(matrix)):
        for ind2 in range(len(matrix[ind1])):
            elem = matrix[ind1][ind2]
            if elem == 0 and numbers_passed != at_null:
                numbers_passed += 1
            elif elem == 0 and numbers_passed == at_null:
                return ind1, ind2
            

def get_possible_numbers(matrix: list[int], i: int, j: int) -> list[int]:
    possible_numbers = get_canon_numbers()

    for ind_in_row in range(len(matrix[i])):
        elem_in_row = matrix[i][ind_in_row]
        if ind_in_row != j and elem_in_row != 0:
            try_to_remove(possible_numbers, elem_in_row)

    for ind_in_col in range(len(matrix)):
        elem_in_col = matrix[ind_in_col][j]
        if ind_in_col != i and elem_in_col != 0:
            try_to_remove(possible_numbers, elem_in_col)
    
    square = get_square(matrix, i, j)
    for ind_1 in range(3):
        for ind_2 in range(3):
            elem = square[ind_1][ind_2]
            if not(ind_1 == i and ind_2==j):
                if elem != 0:
                    try_to_remove(possible_numbers, elem)

    return possible_numbers

def try_to_remove(arr: list[int], numb: int) -> list:
    if numb in arr:
        arr.remove(numb)
    
    return arr


def get_square(matrix: list[int], i: int, j: int) -> list[int]:
    square_i = i // 3
    square_j = j // 3

    square = []
    for ind_1 in range(3):
        square_row = []

        for ind_2 in range(3):
            elem = matrix[(square_i * 3) + ind_1][(square_j * 3) + ind_2]
            square_row.append(elem)

        square.append(square_row)

    return square


def count_nulls_in_matrix(matrix: list[list[int]]) -> int:
    summ = 0
    for i in range(len(matrix)):
        for j in range(len(matrix[i])):
            if matrix[i][j] == 0:
                summ += 1
    return summ


def check_if_matrix_right(matrix: list[list[int]]) -> bool:
    canon_numbers = get_canon_numbers()

    for i in range(len(matrix)):
        numbers_arr = []
        for j in range(len(matrix[i])):
            elem = matrix[i][j]
            if elem == 0:
                return False
            numbers_arr.append(elem)

        if not is_arrays_equal(numbers_arr, canon_numbers):
            return False
        
    for col_ind in range(len(matrix)):
        numbers_arr = []
        for row_ind in range(len(matrix[col_ind])):
            elem = matrix[row_ind][col_ind]
            numbers_arr.append(elem)

        if not is_arrays_equal(numbers_arr, canon_numbers):
            return False
        
    for square_i in range(3):
        for square_j in range(3):
            square = get_square(matrix, square_i * 3, square_j * 3)
            numbers_arr = []
            for i in range(3):
                for j in range(3):
                    elem = square[i][j]
                    numbers_arr.append(elem) 
            if not is_arrays_equal(numbers_arr, canon_numbers):
                return False
            
    return True
        
            
def get_canon_numbers() -> list[int]:
    return [i for i in range(1, 9 + 1)]


def is_arrays_equal(arr1: list[int], arr2: list[int]) -> bool:
    if len(arr1) != len(arr2):
        return False
    
    for i in range(len(arr1)):
        if arr1[i] != arr2[i]:
            return False
        
    return True


def sudoku(matrix):
    all_variants = generate_matrixes(matrix, 0)
    for variant in all_variants:
        if check_if_matrix_right(variant):
            return variant
        
    return matrix


if __name__ == '__main__':
    matrix =    [ [0, 0, 0, 8, 0, 0, 0, 0, 0],
                      [4, 0, 0, 0, 1, 5, 0, 3, 0],
                      [0, 2, 9, 0, 4, 0, 5, 1, 8],
                      [0, 4, 0, 0, 0, 0, 1, 2, 0],
                      [0, 0, 0, 6, 0, 2, 0, 0, 0],
                      [0, 3, 2, 0, 0, 0, 0, 9, 0],
                      [6, 9, 3, 0, 5, 0, 8, 7, 0],
                      [0, 5, 0, 4, 8, 0, 0, 0, 1],
                      [0, 0, 0, 0, 0, 3, 0, 0, 0] ]
                      
    matrix_copy =    [ [0, 0, 0, 8, 0, 0, 0, 0, 0],
                      [4, 0, 0, 0, 1, 5, 0, 3, 0],
                      [0, 2, 9, 0, 4, 0, 5, 1, 8],
                      [0, 4, 0, 0, 0, 0, 1, 2, 0],
                      [0, 0, 0, 6, 0, 2, 0, 0, 0],
                      [0, 3, 2, 0, 0, 0, 0, 9, 0],
                      [6, 9, 3, 0, 5, 0, 8, 7, 0],
                      [0, 5, 0, 4, 8, 0, 0, 0, 1],
                      [0, 0, 0, 0, 0, 3, 0, 0, 0] ]
    
    ans = sudoku(matrix)
    is_right = check_if_matrix_right(ans)
    print(is_right)
    print(ans)"
WWTUqSVD,Hurta retirho koncovka OK 3400 insufficient material Very Good,max2201111,Python,Sunday 5th of May 2024 02:50:56 PM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves, considering no captures or pawn moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False

    for move in history[-10:]:
        if board.is_capture(move):
            return False
        # Z√≠sk√°n√≠ objektu tahu a kontrola, zda se pohyboval pƒõ≈°cem
        if board.piece_type_at(move.from_square) == chess.PAWN:
            return False
    return True

# def evaluate_board(board, depth):
#     if board.is_checkmate():
#         return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
#     elif board.is_stalemate() or board.is_insufficient_material() or ten_moves_rule(board):
#         return 0
#     return 0

def evaluate_board(board, depth):
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 2210
    elif board.is_insufficient_material():
        return 3400
    elif ten_moves_rule(board):
        return 9800
    return 7001  # Default return if none of the above conditions are met


def minimax(board, depth, alpha, beta, maximizing_player, depth2, depths, position_count, memo, start_time, last_print_time):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key]

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = (None, eval)
        return None, eval

    best_move = None
    if maximizing_player:
        max_eval = float('-inf')
        for move in board.legal_moves:
            board.push(move)
            _, eval = minimax(board, depth - 1, alpha, beta, False, depth2 + 1, depths, position_count, memo, start_time, last_print_time)
            board.pop()
            if eval > max_eval:
                max_eval = eval
                best_move = move
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        memo[key] = (best_move, max_eval)
        if depth2 not in depths:
            depths.append(depth2)
            print(f""\nHloubka rekurze: {depth2}"")
        return best_move, max_eval
    else:
        min_eval = float('inf')
        for move in board.legal_moves:
            board.push(move)
            _, eval = minimax(board, depth - 1, alpha, beta, True, depth2 + 1, depths, position_count, memo, start_time, last_print_time)
            board.pop()
            if eval < min_eval:
                min_eval = eval
                best_move = move
            beta = min(beta, eval)
            if beta <= alpha:
                break
        memo[key] = (best_move, min_eval)
        if depth2 not in depths:
            depths.append(depth2)
            print(f""Hloubka rekurze: {depth2}"")
        return best_move, min_eval

# Initialization and main execution logic
start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""
board = chess.Board(start_fen)
depths = []
position_count = [0]
memo = {}
start_time = time.time()
last_print_time = [start_time]  # Initialize last print time

best_move, best_score = minimax(board, 24, float('-inf'), float('inf'), True, 0, depths, position_count, memo, start_time, last_print_time)
if best_move:
    move_san = board.san(best_move)
    print(f""\nThe best move from position {start_fen} is {move_san} with a score of {best_score}."")
else:
    print(""\nNo move found, or the game is over. Score: "", best_score)
"
96paUwkX,Untitled,Rodunskiy,C#,Sunday 5th of May 2024 01:18:25 PM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            int number = 5;
            int upNumber = 7;
            bool isWorking = true;

            while (isWorking)
            {
                Console.WriteLine(number);
                number = number + upNumber;
                Console.ReadKey();
            }
        }
    }
}
"
VQwSpCbT,Untitled,Rodunskiy,C#,Sunday 5th of May 2024 01:11:56 PM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            string word;
            bool isExit = true;

            while (isExit)
            {
                Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —Å–ª–æ–≤–æ:\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤–≤–æ–¥ —Å–ª–æ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ exit"");
                word = Console.ReadLine();

                if (word == ""exit"") 
                {
                    isExit = false;
                }
            }
        }
    }
}"
3ZAthUFH,"""Servo Control"" rev_04",pleasedontcode,Arduino,Sunday 5th of May 2024 01:09:34 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Servo Control""
	- Source Code compiled for: Arduino Uno
	- Source Code created on: 2024-05-05 18:08:23

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* a system of two servo, that will close the road */
	/* when the button is pushed 1st time and open when */
	/* pushed 2nd time. */
/****** END SYSTEM REQUIREMENTS *****/


/****** DEFINITION OF LIBRARIES *****/
#include <Servo.h> // https://github.com/arduino-libraries/Servo

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);
void toggleServoPosition(Servo &servo);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t PushButton_PIN_D2 = 2;

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t Servomotor_PWMSignal_PIN_D3 = 3;
const uint8_t Servomotor_PWMSignal_PIN_D5 = 5;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
uint8_t Servomotor_PWMSignal_PIN_D3_rawData = 0;
uint8_t Servomotor_PWMSignal_PIN_D5_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float Servomotor_PWMSignal_PIN_D3_phyData = 0.0;
float Servomotor_PWMSignal_PIN_D5_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Servo servo1; // Servo object for Servo motor 1
Servo servo2; // Servo object for Servo motor 2

bool isPushButtonPressed = false;
int pushButtonState = 0;

void setup(void)
{
  // put your setup code here, to run once:
  pinMode(PushButton_PIN_D2, INPUT_PULLUP);

  pinMode(Servomotor_PWMSignal_PIN_D3, OUTPUT);
  pinMode(Servomotor_PWMSignal_PIN_D5, OUTPUT);

  servo1.attach(Servomotor_PWMSignal_PIN_D3); // Attach servo1 to PWM pin 3
  servo2.attach(Servomotor_PWMSignal_PIN_D5); // Attach servo2 to PWM pin 5
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  pushButtonState = digitalRead(PushButton_PIN_D2);

  if (pushButtonState == LOW && !isPushButtonPressed) {
    toggleServoPosition(servo1);
    isPushButtonPressed = true;
  } else if (pushButtonState == LOW && isPushButtonPressed) {
    toggleServoPosition(servo2);
    isPushButtonPressed = false;
  }
}

void updateOutputs()
{
  servo1.write(Servomotor_PWMSignal_PIN_D3_rawData);
  servo2.write(Servomotor_PWMSignal_PIN_D5_rawData);
}

void toggleServoPosition(Servo &servo)
{
  int pos = servo.read();
  if (pos == 0) {
    servo.write(180);
  } else {
    servo.write(0);
  }
}

/* END CODE */"
idaSFB1C,Control Servos rev_03,pleasedontcode,Arduino,Sunday 5th of May 2024 01:07:00 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Control Servos
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-05-05 18:06:08

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* a system of two servo, that will close the road */
	/* when the button is pushed 1st time and open when */
	/* pushed 2nd time. */
/****** END SYSTEM REQUIREMENTS *****/

/****** DEFINITION OF LIBRARIES *****/
#include <Servo.h> // https://github.com/arduino-libraries/Servo

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void updateOutputs(void);
void toggleServoPosition(Servo &servo);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t PushButton_PIN_D2 = 2;

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t Servomotor_PWMSignal_PIN_D3 = 3;
const uint8_t Servomotor_PWMSignal_PIN_D5 = 5;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
/***** used to store raw data *****/
uint8_t Servomotor_PWMSignal_PIN_D3_rawData = 0;
uint8_t Servomotor_PWMSignal_PIN_D5_rawData = 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
/***** used to store data after characteristic curve transformation *****/
float Servomotor_PWMSignal_PIN_D3_phyData = 0.0;
float Servomotor_PWMSignal_PIN_D5_phyData = 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
Servo servo1; // Servo object for Servo motor 1
Servo servo2; // Servo object for Servo motor 2

bool isPushButtonPressed = false;
int pushButtonState = 0;

void setup(void)
{
  // put your setup code here, to run once:
  pinMode(PushButton_PIN_D2, INPUT_PULLUP);

  pinMode(Servomotor_PWMSignal_PIN_D3, OUTPUT);
  pinMode(Servomotor_PWMSignal_PIN_D5, OUTPUT);

  servo1.attach(Servomotor_PWMSignal_PIN_D3); // Attach servo1 to PWM pin 3
  servo2.attach(Servomotor_PWMSignal_PIN_D5); // Attach servo2 to PWM pin 5
}

void loop(void)
{
  // put your main code here, to run repeatedly:
  pushButtonState = digitalRead(PushButton_PIN_D2);

  if (pushButtonState == LOW && !isPushButtonPressed) {
    toggleServoPosition(servo1);
    isPushButtonPressed = true;
  } else if (pushButtonState == LOW && isPushButtonPressed) {
    toggleServoPosition(servo2);
    isPushButtonPressed = false;
  }
}

void updateOutputs()
{
  servo1.write(Servomotor_PWMSignal_PIN_D3_rawData);
  servo2.write(Servomotor_PWMSignal_PIN_D5_rawData);
}

void toggleServoPosition(Servo &servo)
{
  int pos = servo.read();
  if (pos == 0) {
    servo.write(180);
  } else {
    servo.write(0);
  }
}

/* END CODE */"
MG8HaMeA,Untitled,Rodunskiy,C#,Sunday 5th of May 2024 01:03:41 PM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            string text;
            int numberRepetitions;

            Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:"");
            text = Console.ReadLine();

            Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π:"");
            numberRepetitions = Convert.ToInt32(Console.ReadLine());
            Console.Clear();

            for (int i = 0; i < numberRepetitions; i++)
            {
                Console.WriteLine(text);
            }
        }
    }
}"
MesmWFiE,Untitled,kwest87,C#,Sunday 5th of May 2024 12:32:34 PM CDT,"using System;

namespace ConsoleApp30
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int number;
            number = ReturnNumber();
            Console.WriteLine($""–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ {number}."");
        }

        static int ReturnNumber()
        {
            Console.WriteLine(""–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ :"");
            string userInput = Console.ReadLine();
            int number ;

            while (int.TryParse(userInput, out  number) == false)
            {
                Console.WriteLine(""–ù–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ , –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ : "");
                userInput = Console.ReadLine();
            }

            return number;
        }
    }
}"
Kw2fxgSR,aaaaa,argui,Latex,Sunday 5th of May 2024 12:17:26 PM CDT,"140g glutinous rice flour
0.5tbsp of salt
50g sugar
240ml hot milk (or water)
mix everything together and slowly add milk and mix it good
microwave for 90 secs
mix it again
microwave 90 secs
mix again. if middle still liquid put it in again
taste, if it tastes like flour add milk and put back in microwave, undercooked
mix or 5 more mins, VERY HARD STICKY
put corn starch on board
roll it out pretty thinly
cut in bitesize pieces
roll it in hand and its done, add more corn flour to prevent sticking "
LavftDrT,Untitled,kwest87,C#,Sunday 5th of May 2024 12:16:18 PM CDT,"using System;

namespace ConsoleApp30
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int number;
            number = ReturnNumber();
            Console.WriteLine($""–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ {number}."");
        }

        static int ReturnNumber()
        {
            Console.WriteLine(""–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ :"");
            string userInput = Console.ReadLine();
            int resultingNumber =0;

            while (int.TryParse(userInput, out int number) == false)
            {
                Console.WriteLine(""–ù–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ , –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ : "");
                userInput = Console.ReadLine();
                number=resultingNumber;
            }

            return resultingNumber;
        }
    }
}"
PLA6JiX8,hloubka rekurze minimax OK spolu s casem,max2201111,Python,Sunday 5th of May 2024 12:04:10 PM CDT,"import chess
import time

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False
    for move in history[-10:]:
        if board.is_capture(move):
            return False
    return True

def evaluate_board(board, depth):
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate() or board.is_insufficient_material() or ten_moves_rule(board):
        return 0
    return 0

def minimax(board, depth, alpha, beta, maximizing_player, depth2, depths, position_count, memo, start_time, last_print_time):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key]

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = (None, eval)
        return None, eval

    best_move = None
    if maximizing_player:
        max_eval = float('-inf')
        for move in board.legal_moves:
            board.push(move)
            _, eval = minimax(board, depth - 1, alpha, beta, False, depth2 + 1, depths, position_count, memo, start_time, last_print_time)
            board.pop()
            if eval > max_eval:
                max_eval = eval
                best_move = move
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        memo[key] = (best_move, max_eval)
        if depth2 not in depths:
            depths.append(depth2)
            print(f""\nHloubka rekurze: {depth2}"")
        return best_move, max_eval
    else:
        min_eval = float('inf')
        for move in board.legal_moves:
            board.push(move)
            _, eval = minimax(board, depth - 1, alpha, beta, True, depth2 + 1, depths, position_count, memo, start_time, last_print_time)
            board.pop()
            if eval < min_eval:
                min_eval = eval
                best_move = move
            beta = min(beta, eval)
            if beta <= alpha:
                break
        memo[key] = (best_move, min_eval)
        if depth2 not in depths:
            depths.append(depth2)
            print(f""Hloubka rekurze: {depth2}"")
        return best_move, min_eval

# Initialization and main execution logic
start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""
board = chess.Board(start_fen)
depths = []
position_count = [0]
memo = {}
start_time = time.time()
last_print_time = [start_time]  # Initialize last print time

best_move, best_score = minimax(board, 22, float('-inf'), float('inf'), True, 0, depths, position_count, memo, start_time, last_print_time)
if best_move:
    move_san = board.san(best_move)
    print(f""\nThe best move from position {start_fen} is {move_san} with a score of {best_score}."")
else:
    print(""\nNo move found, or the game is over. Score: "", best_score)
"
GMDD0Hc5,dobre i s casem 10 moves rule,max2201111,Python,Sunday 5th of May 2024 11:55:56 AM CDT,"import chess
import time
import sys

def ten_moves_rule(board):
    """"""Custom rule to evaluate a draw condition based on the last ten moves.""""""
    history = list(board.move_stack)
    if len(history) < 10:
        return False
    for move in history[-10:]:
        if board.is_capture(move):
            return False
    return True

def evaluate_board(board, depth):
    if board.is_checkmate():
        return -1000 + depth if board.turn == chess.WHITE else 1000 - depth
    elif board.is_stalemate():
        return 2210
    elif board.is_insufficient_material():
        return 3400
    elif ten_moves_rule(board):
        return 9800
    return 7001  # Default return if none of the above conditions are met

def minimax(board, depth, alpha, beta, maximizing_player, depth2, depths, position_count, memo, start_time, last_print_time):
    current_time = time.time()
    if current_time - last_print_time[0] >= 1:
        elapsed_hours, remainder = divmod(current_time - start_time, 3600)
        elapsed_minutes, elapsed_seconds = divmod(remainder, 60)
        print(f""\r{int(elapsed_hours):02d}h {int(elapsed_minutes):02d}m {int(elapsed_seconds):02d}s"", end='', flush=True)
        last_print_time[0] = current_time

    position_count[0] += 1
    if position_count[0] % 1000000 == 0:
        print(f""\nProzkoumano {position_count[0]} pozic."")

    key = (board.fen(), maximizing_player, depth, alpha, beta)
    if key in memo:
        return memo[key]

    if depth == 0 or board.is_game_over():
        eval = evaluate_board(board, depth2)
        memo[key] = (None, eval)
        return None, eval

    best_move = None
    if maximizing_player:
        max_eval = float('-inf')
        for move in board.legal_moves:
            board.push(move)
            _, eval = minimax(board, depth - 1, alpha, beta, False, depth2 + 1, depths, position_count, memo, start_time, last_print_time)
            board.pop()
            if eval > max_eval:
                max_eval = eval
                best_move = move
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        memo[key] = (best_move, max_eval)
        return best_move, max_eval
    else:
        min_eval = float('inf')
        for move in board.legal_moves:
            board.push(move)
            _, eval = minimax(board, depth - 1, alpha, beta, True, depth2 + 1, depths, position_count, memo, start_time, last_print_time)
            board.pop()
            if eval < min_eval:
                min_eval = eval
                best_move = move
            beta = min(beta, eval)
            if beta <= alpha:
                break
        memo[key] = (best_move, min_eval)
        return best_move, min_eval

# Initialization and main execution logic
start_fen = ""7K/8/k1P5/7p/8/8/8/8 w - - 0 1""
board = chess.Board(start_fen)
depths = []
position_count = [0]
memo = {}
start_time = time.time()
last_print_time = [start_time]  # Initialize last print time

best_move, best_score = minimax(board, 22, float('-inf'), float('inf'), True, 0, depths, position_count, memo, start_time, last_print_time)
if best_move:
    move_san = board.san(best_move)
    print(f""\nThe best move from position {start_fen} is {move_san} with a score of {best_score}."")
else:
    print(""\nNo move found, or the game is over. Score: "", best_score)
"
sf7raneP,[GMod] Simple Screengrab,SneakySquid,Lua,Sunday 5th of May 2024 11:51:36 AM CDT,"local ScreenMat = CreateMaterial(""ScreenMat"", ""Fillrate"", {})

local function screengrab(open_menu)
	file.CreateDir(""screengrabs"")

	hook.Add(""PostRender"", ""Screengrab"", function()
		local frame_count = FrameNumber()

		render.UpdateScreenEffectTexture(1)
		ScreenMat:SetTexture(""$basetexture"", render.GetScreenEffectTexture(1):GetName())

		cam.Start2D()
			surface.SetMaterial(ScreenMat)
			surface.SetDrawColor(255, 255, 255, 255)
			surface.DrawTexturedRect(0, 0, ScrW(), ScrH())

			surface.SetDrawColor(0, 255, 0, 255)
			surface.DrawRect(0, 0, 10, 10)

			file.Write(string.format(""screengrabs/%i.jpg"", os.time()), render.Capture{
				format = ""jpg"",
				quality = 100,
				x = 0, y = 0,
				w = ScrW(), h = ScrH(),
			})
		cam.End2D()

		if frame_count ~= FrameNumber() then
			while true do end
		end

		if open_menu then
			gui.ActivateGameUI()
		end

		hook.Remove(""PostRender"", ""Screengrab"")
	end)
end

concommand.Add(""screengrab"", function()
	local escape_menu = gui.IsGameUIVisible()

	if escape_menu then
		gui.HideGameUI()
	end

	screengrab(escape_menu)
end)
"
vK55QnXC,Exercicios0505,Smokahontas,C,Sunday 5th of May 2024 11:47:50 AM CDT,"Exercicio 1:
Resposta correta : (A)

C√≥digo:
1. for (i = 0 to 29) {
2.   for (j = 0 to 39) {
3.     if (a[i] == b[j]) {
4.       print(a[i]);
5.     }
6.   }
7. }


////////////////////////////////////////////

Exercicio 2:
3. if (a[i] == b[j]) {

4.       print (a[i]);

5. }

////////////////////////////////////////////

Exercicio 3:

C√°lculo feito:
-a * b++ - c--
= -1 * 2++ - 0--
= -2 - 0
= -2

Ent√£o, o resultado da express√£o -a * b++ - c-- √© -2, correspondendo √† op√ß√£o (E).

////////////////////////////////////////////

EXERCICIO 4:

A: A melhor op√ß√£o para este problema √© uma matriz. por ser uma tabela organizada em linhas e colunas, ideal para representar a planta√ß√£o de caf√©.


B:
int contarFalhasPlantio(int matriz[3][5], int linhas, int colunas) {
    int falhas = 0;
    for (int linha = 0; linha < linhas; linha++) {
        for (int coluna = 0; coluna < colunas; coluna++) {
            if (matriz[linha][coluna] == 0) {
                falhas++;
            }
        }
    }
    return falhas;
}

int main() {
   
    int plantacao[3][5] = {
        {1, 0, 1, 0, 0},
        {0, 1, 0, 1, 0},
        {1, 0, 0, 0, 1}
    };

    int linhas = 3;
    int colunas = 5;

    int totalFalhas = contarFalhasPlantio(plantacao, linhas, colunas);
    printf(""Total de falhas de plantio: %d\n"", totalFalhas);

    return 0;
}"
QhsG80m1,Untitled,kwest87,C#,Sunday 5th of May 2024 11:14:53 AM CDT,"namespace ConsoleApp30
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int number;
            number = ReturnNumber();
            Console.WriteLine($""–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ {number}."");
        }

        static int ReturnNumber()
        {
            Console.WriteLine(""–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ :"");
            string userInput = Console.ReadLine();

            while (int.TryParse(userInput, out int number) == false)
            {
                Console.WriteLine(""–ù–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ , –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ : "");
                userInput = Console.ReadLine();
            }

            int resultingNumber = Convert.ToInt32(userInput);
            return resultingNumber;
        }
    }
}"
RzRvN3VC,Simple CLI C# File Manager,tommarek_CZE,C#,Sunday 5th of May 2024 11:03:21 AM CDT,"using System.Runtime.InteropServices;
using Microsoft.VisualBasic;
using System.Diagnostics;

internal class Program
{
    private static void Main(string[] args)
    {
        // Set current directory value to default
        string currentDir = @""C:\\"";

        Console.WriteLine(""CLI File Manager V1"");
        Console.WriteLine(""Enter 'help' command to get help"");

        // Function that open file with default program
        void OpenWithDefaultProgram(string path)
        {   try {
                // Create new procces, assing explorer as procces and then starts the procces
                using Process fileopener = new Process();

                fileopener.StartInfo.FileName = ""explorer"";
                fileopener.StartInfo.Arguments = ""\"""" + path + ""\"""";
                fileopener.Start();
            } catch {
                Console.WriteLine(""Exception occured while executing command"");
            }
        }

        // Function that lists all directories and files
        void listCommand() {
            try {
                Console.WriteLine(""Showing contents of "" + currentDir);
                // For each file, get its name and displays it
                string[] allfiles = Directory.GetFiles(currentDir);
                foreach (var file in allfiles){
                    FileInfo info = new FileInfo(file);
                    Console.WriteLine(info.Name + "" <FILE>"");
                }

                // For each directory, get its name and displays it
                string[] directories = Directory.GetDirectories(currentDir);
                foreach (string dir in directories)
                {
                    string trimmedString = Path.GetFileName(dir);

                    Console.WriteLine(trimmedString + "" <DIRECTORY>"");
                }
            } catch {
                Console.WriteLine(""Exception occured while executing command"");
            }
        }

        void goCommand() {
            try {
                Console.WriteLine(""Enter directory name"");
                // Read from the console what directory user wanna acces
                string arg = Console.ReadLine();
                // Gets directories inside current directory and scans the list it for the desired directory, if found the current directory would be assigned to desired directory
                string[] directories = Directory.GetDirectories(currentDir);
                foreach (string dir in directories)
                {
                    string trimmedString = Path.GetFileName(dir);
                    if (trimmedString == arg) {
                        currentDir = dir;
                        Console.WriteLine(""Jumped into "" + trimmedString + "" directory"");
                        return;
                    }
                }
                Console.WriteLine(""Directory "" + arg + "" was not founded"");
            } catch {
                Console.WriteLine(""Exception occured while executing command"");
            }
        }

        void returnCommand() {
            try {
                // Get parent of current directory and then sets it as current directory
                string parentDirectory = Directory.GetParent(currentDir).FullName;
                currentDir = parentDirectory;
                Console.WriteLine(""Jumped into "" + currentDir + "" directory"");
            } catch {
                Console.WriteLine(""Exception occured while executing command"");
            }
        }

        void openCommand() {
            try {
                Console.WriteLine(""Enter file name"");
                // Get arguments from console, what file the user wanna open
                string arg = Console.ReadLine();
                // Gets all files and scans them for desired file, if found it would be opened via OpenWithDefaultProgram function
                string[] allfiles = Directory.GetFiles(currentDir);
                foreach (var file in allfiles){
                    FileInfo info = new FileInfo(file);
                    if (arg == info.Name) {
                        OpenWithDefaultProgram(info.FullName);
                        Console.WriteLine(""File "" + info.Name + "" was opened"");
                        return;
                    }
                }
                Console.WriteLine(""File "" + arg + "" was not founded"");
            } catch {
                Console.WriteLine(""Exception occured while executing command"");
            }

        }

        void dcreateCommand() {
            try {
                Console.WriteLine(""Enter directory name that you wanna create"");
                // Gets arguments from console, what directory user wanna create
                string arg = Console.ReadLine();
                string path = currentDir + ""\\"" + arg;
                // Check if directory does not exist, if donsent exist it would create the desired directory
                if (!Directory.Exists(path))
                {
                    Directory.CreateDirectory(path);
                    Console.WriteLine(""Directory "" + arg + "" created succefuely"");
                    return;
                }
                Console.WriteLine(""Directory "" + arg + "" already exist"");
            } catch {
                Console.WriteLine(""Exception occured while executing command"");
            }
        }

        void fcreateCommand() {
            try {
                // Gets arguments from console, what file user wanna create
                Console.WriteLine(""Enter file name that you wanna create"");
                string arg = Console.ReadLine();
                string path = currentDir + ""\\"" + arg;

                // Check if file does not exist, if donsent exist it would create the desired file
                if (!File.Exists(path))
                {
                    File.Create(path).Dispose();
                    Console.WriteLine(""File "" + arg + "" created succefuely"");
                    return;       
                }
                Console.WriteLine(""File "" + arg + "" already exist"");
            } catch {
                Console.WriteLine(""Exception occured while executing command"");
            }
        }

        void deleteCommand() {
            try {
                Console.WriteLine(""Enter file or directory that you wanna delete"");
                // Get the arguments from console, what folder or file user wanna get deleted
                string arg = Console.ReadLine();
                string path = currentDir + ""\\"" + arg;
                // Check if directory exist, if yes it would delete the directory
                if (Directory.Exists(path))
                {
                    Directory.Delete(path, true);
                    Console.WriteLine(""Directory "" + arg + ""succesfully deleted"");
                    return;
                }
                // Check if file exist, if yes delete the file
                else if (File.Exists(path))
                {
                    File.Delete(path);
                    Console.WriteLine(""File "" + arg + ""succesfully deleted"");
                    return;
                }
                Console.WriteLine(""File or directory "" + arg + ""dosen't exist"");            
            } catch {
                Console.WriteLine(""Exception occured while executing command"");
            }
        }

        // Display help menu to the console
        void helpCommand() {
            Console.WriteLine(""Commands list:"");
            Console.WriteLine(""list > display contents of current directory"");
            Console.WriteLine(""go > go to specific directory"");
            Console.WriteLine(""retirn > go to the parent directory"");
            Console.WriteLine(""open > open specific file"");
            Console.WriteLine(""dcreate > create folder in current directory"");
            Console.WriteLine(""fcreate > create file in current directory"");
            Console.WriteLine(""delete > delete specific file or directory"");
            Console.WriteLine(""help > show this current message"");
            Console.WriteLine(""-----\nDon't put arguments behind commands, the argument handler is after you execute the command"");
        }

        // Switch that binds functions to commands
        void handleCommands(string command)
        {
            switch (command)
            {
                case ""list"": // List files/Directories
                    listCommand();
                    break;
                case ""dcreate"": // Create Folder
                    dcreateCommand();
                    break;
                case ""open"": // Open File
                    openCommand();
                    break;
                case ""go"": // Go to directory/path
                    goCommand();
                    break;
                case ""return"": // Return to the lower directory
                    returnCommand();
                    break;
                case ""fcreate"": // Create file
                    fcreateCommand();
                    break;
                case ""help"": // Show help dialog
                    helpCommand();
                    break;
                case ""delete"": // Delete file
                    deleteCommand();
                    break;
                default:
                    Console.WriteLine(""Undefined command"");
                    break;
            }
        }
        
        // Handle console input, and make infinite loop
        void handeInput()
        {
            Console.WriteLine(""          "");
            string command = Console.ReadLine();
            Console.WriteLine(""Command executed> "" + command);
            handleCommands(command);
            handeInput();
        }

        handeInput();
    }
}"
fmWuYvD0,Untitled,Rodunskiy,C#,Sunday 5th of May 2024 10:56:10 AM CDT,"using System;

namespace CSLight
{
    public class Program
    {
        static void Main(string[] args)
        {
            int peopleInQueue;
            int fixedTimeOnePerson = 10;
            int timeInQueueHour;
            int timeInQueueMinute;
            int minutesInHour = 60;

            Console.WriteLine(""–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –ª—é–¥–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏."");
            peopleInQueue = Convert.ToInt32(Console.ReadLine());

            int totalTimeInQueue = fixedTimeOnePerson * peopleInQueue;

            timeInQueueHour = totalTimeInQueue / minutesInHour;
            timeInQueueMinute = totalTimeInQueue % minutesInHour;

            Console.WriteLine($""–í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç—Å—Ç–æ—è—Ç—å –≤ –æ—á–µ—Ä–µ–¥–∏ {timeInQueueHour} —á–∞—Å–∞ –∏ {timeInQueueMinute} –º–∏–Ω—É—Ç."");
        }
	}
}



"
1WQP8dx1,car price prediction,aize33,Python,Sunday 5th of May 2024 10:53:40 AM CDT,"# Importing Libraries

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn import metrics

# Data Collection and Processing

car_dataset = pd.read_csv('car data.csv')
car_dataset.head()
car_dataset.shape
car_dataset.info()

# Checking for missing values

print(car_dataset.isnull().sum())

# Checking the distribution of categorical data

print(car_dataset.Fuel_Type.value_counts())
print(car_dataset.Seller_Type.value_counts())
print(car_dataset.Transmission.value_counts())

# Categorical data encoding

car_dataset.replace({'Fuel_Type': { 'Petrol': 0, 'Diesel':1, 'CNG':2 }}, inplace=True)
car_dataset.replace({'Seller_Type': { 'Dealer': 0, 'Individual':1 }}, inplace=True)
car_dataset.replace({'Transmission': { 'Manual': 0, 'Automatic':1 }}, inplace=True)

print(car_dataset.head())

# Data splitting into Feature data and Target data

X = car_dataset.drop(['Car_Name', 'Selling_Price'], axis = 1)
y = car_dataset['Selling_Price']

print(X)
print(y)

# Data splitting into training and testing data

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = 2)


# Model Training : Linear Rgression

lin_reg = LinearRegression()

lin_reg.fit(X_train, y_train)

# Model evaluation : Training data

training_data_prediction = lin_reg.predict(X_train)

# Metrics using R squared eror

error_score = metrics.r2_score(y_train, training_data_prediction)
print('R squared Error : ', error_score)

# Visualize the Actual prices and Predicted prices

plt.scatter(y_train, training_data_prediction)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual Prices vs Predicted Prices')
plt.show()

# Model evaluation : Testing data

test_data_prediction = lin_reg.predict(X_test)

# Metrics using R squared eror in test data

error_score = metrics.r2_score(y_test, test_data_prediction)
print('R squared Error : ', error_score)

# Visualize the Actual prices and Predicted prices in test data

plt.scatter(y_test, test_data_prediction)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual Prices vs Predicted Prices')
plt.show()

# Model Training : Lasso Rgression

lass_reg = Lasso()

lass_reg.fit(X_train, y_train)

# Model evaluation : Training data

training_data_prediction = lass_reg.predict(X_train)

# Metrics using R squared eror

error_score = metrics.r2_score(y_train, training_data_prediction)
print('R squared Error : ', error_score)


# Visualize the Actual prices and Predicted prices

plt.scatter(y_train, training_data_prediction)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual Prices vs Predicted Prices')
plt.show()

# Model evaluation : Testing data

test_data_prediction = lass_reg.predict(X_test)

# Metrics using R squared eror in test data

error_score = metrics.r2_score(y_test, test_data_prediction)
print('R squared Error : ', error_score)

# Visualize the Actual prices and Predicted prices in test data

plt.scatter(y_test, test_data_prediction)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual Prices vs Predicted Prices')
plt.show()"
BB2pG4LP,arrays comparison,PhZh,Java,Sunday 5th of May 2024 10:32:41 AM CDT,"// ++++++++++++ Option 1 ++++++++++++

class Praktikum {
    public static void main(String[] args) {
        // –°–æ–∑–¥–∞–π—Ç–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ –∏–º–µ–Ω–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–∫–∏
        String[] participants = {""–ü—ë—Ç—Ä"", ""–ù–∞–¥–µ–∂–¥–∞"", ""–í–∞–ª–µ–Ω—Ç–∏–Ω–∞""};
        // participants[0] = ""–ü—ë—Ç—Ä"";
        // participants[1] = ""–ù–∞–¥–µ–∂–¥–∞"";
        // participants[2] = ""–í–∞–ª–µ–Ω—Ç–∏–Ω–∞"";
        // –°–æ–∑–¥–∞–π—Ç–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–∫–∏ (—Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã)
        String[] documents = {""–ü–∞—Å–ø–æ—Ä—Ç"", ""–í–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ"", ""–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏""};
        // documents[0] = ""–ü–∞—Å–ø–æ—Ä—Ç"";
        // documents[1] = ""–í–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ"";
        // documents[2] = ""–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏"";  

        // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ —á–∏—Å–ª—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        if (participants.length == documents.length) {
            System.out.println(""–î–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤–µ—Ä–Ω–æ. –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:"");
            // –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –≤–µ—Ä–Ω–æ, –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ""–ü—ë—Ç—Ä: –ü–∞—Å–ø–æ—Ä—Ç""
            System.out.println(participants[0] + "": "" + documents[0]);
            System.out.println(participants[1] + "": "" + documents[1]);
            System.out.println(participants[2] + "": "" + documents[2]);
        } else {
            /* –î–ª—è –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–µ—á–∞—Ç—å —Ç–∞–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:
						 ""–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–∫–∏."" */
            System.out.println(""–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–∫–∏."");
        }
    }
}

// ++++++++++++ Option 2 ++++++++++++

class Praktikum {
    public static void main(String[] args) {
        // –°–æ–∑–¥–∞–π—Ç–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ –∏–º–µ–Ω–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–∫–∏
        String[] participants = new String[3];
        participants[0] = ""–ü—ë—Ç—Ä"";
        participants[1] = ""–ù–∞–¥–µ–∂–¥–∞"";
        participants[2] = ""–í–∞–ª–µ–Ω—Ç–∏–Ω–∞"";
        // –°–æ–∑–¥–∞–π—Ç–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–∫–∏ (—Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã)
        String[] documents = new String[3];
        documents[0] = ""–ü–∞—Å–ø–æ—Ä—Ç"";
        documents[1] = ""–í–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ"";
        documents[2] = ""–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏"";  

        // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ —á–∏—Å–ª—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        if (participants.length == documents.length) {
            System.out.println(""–î–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤–µ—Ä–Ω–æ. –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:"");
            // –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –≤–µ—Ä–Ω–æ, –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ""–ü—ë—Ç—Ä: –ü–∞—Å–ø–æ—Ä—Ç""
            System.out.println(participants[0] + "": "" + documents[0]);
            System.out.println(participants[1] + "": "" + documents[1]);
            System.out.println(participants[2] + "": "" + documents[2]);
        } else {
            /* –î–ª—è –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–µ—á–∞—Ç—å —Ç–∞–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:
						 ""–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–∫–∏."" */
            System.out.println(""–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–∫–∏."");
        }
    }
}"
Y03BVxef,openwrt router,coinwalk,JavaScript,Sunday 5th of May 2024 10:31:32 AM CDT,"uci add_list dhcp.@dnsmasq[0].server=""/partner.googleadservices.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/code.jquery.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/www.googletagmanager.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/cdn.jsdelivr.net/#""
uci add_list dhcp.@dnsmasq[0].server=""/just-dice.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/altquick.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/freebitcoins.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/newassets.hcaptcha.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/googleads.g.doubleclick.net/#""
uci add_list dhcp.@dnsmasq[0].server=""/pagead2.googlesyndication.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/tpc.googlesyndication.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/www.google.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/hcaptcha.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/coinspot.com.au/#""
uci add_list dhcp.@dnsmasq[0].server=""/ing.com.au/#""
uci add_list dhcp.@dnsmasq[0].server=""/pastebin.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/challenges.cloudflare.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/s0.2mdn.net/#""
uci add_list dhcp.@dnsmasq[0].server=""/fundingchoicesmessages.google.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/match.adsrvr.org/#""
uci add_list dhcp.@dnsmasq[0].server=""/c1.adform.net/#""
uci add_list dhcp.@dnsmasq[0].server=""/gtrace.mediago.io/#""
uci add_list dhcp.@dnsmasq[0].server=""/analytics.pangle-ads.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/a.tribalfusion.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/cm.g.doubleclick.net/#""
uci add_list dhcp.@dnsmasq[0].server=""/doubleclick.net/#""
uci add_list dhcp.@dnsmasq[0].server=""/fonts.gstatic.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/x.bidswitch.net/#""
uci add_list dhcp.@dnsmasq[0].server=""/dis.criteo.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/cms.quantserve.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/www.googleadservices.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/adform.net/#""
uci add_list dhcp.@dnsmasq[0].server=""/analytics.google.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/www.gstatic.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/www.adsensecustomsearchads.com/#""
uci add_list dhcp.@dnsmasq[0].server=""/#/"""
s9uUmHmZ,Untitled,coderbodrul,C++,Sunday 5th of May 2024 10:12:28 AM CDT,"#include<bits/stdc++.h>
using namespace std;
const int mx = 1e6;

map<string, int> state_to_int; //mapping every state to unique value
map<int, string> int_to_state; //getting the state for every int value
string d; // destination state
int ind = 0; // a variable for representing every state to int
vector<int> adj[mx + 1];
vector<int> par(mx + 1, -1);
int dx[4] = {1, -1, 0, 0};
int dy[4] = {0, 0, 1, -1};
int vis[mx + 1];

void bfs(int strt) {
	queue<int> q;
	q.push(strt);

	while(!q.empty()) {
		int fr = q.front();
		string str = int_to_state[fr];
		q.pop();
		vis[fr] = 1;
		if (str == d) {
            return;
		}

		int x, y, sx, sy;
		for (int i = 0; i < 9; i++) {
			if (str[i] == '0') {
				x = i / 3;
				y = i % 3;
				break;
			}
		}

		for (int i = 0; i < 4; i++) {
			sx = x + dx[i];
			sy = y + dy[i];
			if (sx >= 0  and sx < 3 and sy >= 0  and sy < 3) {
				string tem = str;
				swap(tem[x * 3 + y], tem[sx * 3 + sy]);
				if (state_to_int.find(tem) == state_to_int.end()) {
					state_to_int[tem] = ind;
					int_to_state[ind] = tem;
					ind++;
					adj[fr].push_back(state_to_int[tem]);
					par[state_to_int[tem]] = fr;
				}
			}
		}
		for (int i = 0; i < adj[fr].size(); i++) {
			if (!vis[adj[fr][i]]) {
				q.push(adj[fr][i]);
				vis[adj[fr][i]] = 1;
			}
		}
	}
}

int32_t main() {

	// define destination state & map the state to int
	d = ""123456780"";
	// taking input the source state
	string s = """";
	char c;
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
			cin >> c;
			s += c;
		}
	}

	state_to_int[s] = ind;
	int_to_state[ind] = s;
	ind++;

	memset(vis, 0, sizeof(vis));
	bfs(state_to_int[s]);

	stack<int> st;
	int node = state_to_int[d];
	while(node != -1) {
		st.push(node);
		node = par[node];
	}

	string str;
	while(!st.empty()) {
		str = int_to_state[st.top()];
		st.pop();
		cout << endl;
		for (int i = 0; i < 9; i++) {
			cout << str[i] << "" \n""[i % 3 == 2];
		}
	}

	return 0;
}
"
UxrSqF0k,Untitled,martinms,PHP,Sunday 5th of May 2024 09:35:28 AM CDT,"@extends('layouts.admin')
@section('title', 'Data Konsultasi')

@section('custom_head')
    <style>
        .accordion-button:not(.collapsed) {
            background-color: #696cff;
            color: #fff;
        }
    </style>
@endsection

@section('content')
    <div class=""container-xxl flex-grow-1 container-p-y"">
        <h4 class=""fw-bold py-3 mb-4""><span class=""text-muted fw-light"">Dashboard /</span> Data Konsultasi</h4>

        <!-- Basic Bootstrap Table -->
        <div class=""card mb-3"">
            <div class=""card-header d-flex justify-content-between"">
                <h5 class=""card-title"">Data Konsultasi</h5>

                <a href=""{{ route('admin.konsultasi.index') }}"" class=""btn btn-sm btn-primary"">Kembali</a>
            </div>
            <div class=""card-body border-bottom"">
                <div class=""me-2 mb-3"">
                    <h6 class=""mb-0"">User</h6>
                    <small class=""text-muted"">{{ $konsultasi->user->name }}</small>
                </div>

                <div class=""me-2 mb-3"">
                    <h6 class=""mb-0"">Tanggal</h6>
                    <small class=""text-muted"">{{ $konsultasi->created_at->translatedFormat('l, d F Y H:i') }}</small>
                </div>

                <div class=""me-2 mb-3"">
                    <h6 class=""mb-0"">Penyakit Terdiagnosa</h6>
                    <small class=""text-muted"">{{ $konsultasi->penyakit->nama }}</small>
                </div>

                <div class=""me-2 mb-3"">
                    <h6 class=""mb-0"">Persentase</h6>
                    <small class=""text-muted"">{{ $konsultasi->persentase }}%</small>
                </div>
            </div>
        </div>
        <!--/ Basic Bootstrap Table -->

        <div class=""card mb-3"">
            <div class=""card-header d-flex justify-content-between"">
                <h5 class=""card-title"">Gejala Yang Dipilih</h5>
            </div>
            <div class=""card-body"">
                <div class=""table-responsive text-nowrap"">
                    <table class=""table table-hover dt-data"">
                        <thead>
                        <tr>
                            <th class=""d-flex justify-content-start"">#</th>
                            <th>Kode</th>
                            <th>Nama</th>
                        </tr>
                        </thead>
                        <tbody class=""table-border-bottom-0"">
                        @foreach ($konsultasi->gejala as $gejala)
                            <tr>
                                <td class=""text-start"">
                                    {{ $loop->iteration }}
                                </td>
                                <td>{{ $gejala->kode }}</td>
                                <td>{{ $gejala->nama }}</td>
                            </tr>
                        @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class=""card mb-3"">
            <div class=""card-header d-flex justify-content-between"">
                <h5 class=""card-title"">Tabel Nodes</h5>
            </div>
            <div class=""card-body p-4"">
                <div class=""table-responsive rounded-2 mb-4"">
                    <table
                        class=""table table-bordered table-hover text-nowrap customize-table mb-0 align-middle dt-data"">
                        <!--begin::Table head-->
                        <thead>
                        <tr>
                            <th rowspan=""2"" class=""text-center"" style=""vertical-align: middle;"">Gejala</th>
                            <th colspan=""{{ $penyakit->count() }}"" class=""text-center"">Penyakit</th>
                        </tr>
                        <tr>
                            @foreach ($penyakit as $penyakit)
                                <td class=""text-center"">
                                    <span data-bs-toggle=""tooltip""
                                          data-bs-title=""{{ $penyakit->name }}"">{{ $penyakit->kode }}</span>
                                </td>
                            @endforeach
                        </tr>
                        </thead>
                        <!--end::Table head-->
                        <!--begin::Table body-->
                        <tbody>
                        @foreach ($VCIRS->CFMatrix() as $gejalaCode => $data)
                            <tr>
                                <th class=""text-center"">{{ $gejalaCode }}</th>
                                @foreach ($data as $value)
                                    <td class=""text-center"">
                                        {{ $value ?? '-' }}
                                    </td>
                                @endforeach
                            </tr>
                        @endforeach
                        </tbody>
                        <!--end::Table body-->
                    </table>
                </div>
            </div>
        </div>

        <div class=""card w-100 position-relative overflow-hidden"">
            <div class=""px-4 py-3 border-bottom d-flex justify-content-between"">
                <h5 class=""card-title fw-semibold mb-0 lh-sm"">Perhitungan VCIRS</h5>
            </div>
            <!--begin::Card body-->
            <div class=""card-body p-4"">
                <div class=""accordion"" id=""calculations"">
                    @foreach ($VCIRS->calculate() as $data)
                        <h2 class=""accordion-header border"" id=""heading-{{ $loop->index }}"">
                            <button class=""accordion-button {{ $loop->index == 0 ? '' : 'collapsed' }}"" type=""button""
                                    data-bs-toggle=""collapse""
                                    data-bs-target=""#collapse-{{ $loop->index }}""
                                    aria-expanded=""{{ $loop->index == 0 ? 'true' : 'false' }}""
                                    aria-controls=""collapse-{{ $loop->index }}"">
                                ({{ $data['penyakit']->kode }}) {{ $data['penyakit']->nama }}
                                ({{ $data['cf_kombinasi']['persentase'] }}%)
                            </button>
                        </h2>
                        <div id=""collapse-{{ $loop->index }}""
                             class=""accordion-collapse collapse {{ $loop->index == 0 ? 'show' : '' }}""
                             aria-labelledby=""heading-{{ $loop->index }}"" data-bs-parent=""#calculations"">
                            <div class=""accordion-body border"">
                                <h6 class=""mb-2 lh-sm pt-2"">Rule</h6>

                                <!--begin::Table-->
                                <div class=""table-responsive rounded-2 mb-4"">
                                    <table
                                        class=""table border text-nowrap customize-table mb-0 align-middle table-hover""
                                        style=""width: 100%;"">
                                        <thead class=""text-dark"">
                                        <tr>
                                            <th>Kode</th>
                                            <th>Nama Gejala</th>
                                            <th>Jumlah Node</th>
                                            <th>Node yang menggunakan</th>
                                            <th class=""text-center"">Urutan Node</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach ($data['rule'] as $rule)
                                            <tr>
                                                <td>{{ $rule['gejala']->kode }}</td>
                                                <td>{{ $rule['gejala']->nama }}</td>
                                                <td class=""text-center"">{{ $rule['jumlah_node'] }}</td>
                                                <td>
                                                    @foreach ($rule['nodes'] as $node)
                                                        <span class=""badge bg-primary"">
                                                                            P0{{ $node }}#{{ $node }}
                                                                        </span>
                                                    @endforeach
                                                </td>
                                                <td class=""text-center"">{{ $rule['n'] }}</td>
                                            </tr>
                                        @endforeach
                                        </tbody>
                                    </table>
                                </div>
                                <!--end::Table-->

                                <h6 class=""mb-2 lh-sm"">Nilai VUR</h6>
                                <!--begin::Table-->
                                <div class=""table-responsive rounded-2 mb-4"">
                                    <table
                                        class=""table border text-nowrap table-bordered customize-table mb-0 align-middle table-hover""
                                        style=""width: 100%;"">
                                        <thead class=""text-dark"">
                                        <tr>
                                            <th class=""text-center"">Kode Gejala</th>
                                            <th>Nilai VUR</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach ($data['vur'] as $vur)
                                            <tr>
                                                <td class=""text-center"">{{ $vur['gejala']->kode }}</td>
                                                <td>
                                                    VUR = <i>Credit</i> x (NS x VO/TO)
                                                    <br>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                    = {{ $credit }} &times;
                                                    ({{ $vur['_jumlahNode'] }}
                                                    &times;
                                                    {{ $vur['_urutanVariabel'] }}
                                                    /{{ $vur['_totalVariabel'] }})
                                                    <br>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                    = {{ $vur['value'] }}
                                                </td>
                                            </tr>
                                        @endforeach
                                        </tbody>
                                    </table>
                                </div>
                                <!-- end::Table-->

                                <ul class=""list-group"">
                                    <li class=""list-group-item"">
                                        <h6 class=""mb-2 lh-sm"">Nilai NUR</h6>
                                        <p>
                                            NUR<sub>j</sub> = <img
                                                src=""{{ asset('assets/images/rumus/rumus nur.png') }}""/>
                                            <br>
                                            NUR = @php
                                                $nurItems = $data['_nurItems'];
                                                $nurDivider = $data['_nurDivider'];
                                            @endphp

                                            @if (count($nurItems) > 0)
                                                ({{ implode(' + ', $nurItems) }}) /
                                                {{ $nurDivider }}
                                            @endif
                                            <br>
                                            NUR = {{ $data['nur'] }}
                                        </p>
                                        <p>Nilai NUR didapatkan: <strong>{{ $data['nur'] }}</strong></p>
                                    </li>
                                    <li class=""list-group-item"">
                                        <h6 class=""mb-2 lh-sm"">Nilai RUR</h6>
                                        <p>
                                            RUR<sub>k</sub> = <img
                                                src=""{{ asset('assets/images/rumus/rumus rur.png') }}""
                                                alt="""">
                                            <br>
                                            NUR = {{ $data['nur'] }}
                                            <br>
                                            RUR = {{ $data['rur'] }} / {{ $data['_rurDivider'] }}
                                            <br>
                                            RUR = {{ $data['rur'] }}
                                        </p>
                                        <p>Nilai RUR didapatkan: <strong>{{ $data['rur'] }}</strong></p>
                                    </li>
                                </ul>

                                <h6 class=""mb-2 mt-3 lh-sm"">Perhitungan Nilai CF</h6>

                                <!--begin::Table-->
                                <div class=""table-responsive rounded-2 mb-4"">
                                    <table
                                        class=""table border table-bordered text-nowrap customize-table mb-0 align-middle table-hover""
                                        style=""width: 100%;"">
                                        <thead class=""text-dark"">
                                        <tr>
                                            <th class=""text-center"">Kode Gejala</th>
                                            <th class=""text-center"">Jawaban User</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach ($data['jawaban_user'] as $jawaban)
                                            <tr>
                                                <td class=""text-center"">{{ $jawaban['gejala']->kode }}</td>
                                                <td class=""text-center"">{{ $jawaban['jawaban'] }}</td>
                                            </tr>
                                        @endforeach
                                        </tbody>
                                    </table>
                                </div>
                                <!--end::Table-->

                                <h6 class=""mt-2"">Nilai CF</h6>
                                <!--begin::Table-->
                                <div class=""table-responsive rounded-2 mb-4"">
                                    <table
                                        class=""table border text-nowrap customize-table mb-0 align-middle table-hover table-bordered""
                                        style=""width: 100%;"">
                                        <thead class=""text-dark"">
                                        <tr>
                                            <th rowspan=""2"" class=""text-center""
                                                style=""vertical-align: middle;"">Kode Gejala
                                            </th>
                                            <th colspan=""2"" class=""text-center""
                                                style=""vertical-align: middle;"">Bobot
                                            </th>
                                            <th colspan=""2"" class=""text-center""
                                                style=""vertical-align: middle;"">Nilai
                                            </th>
                                        </tr>
                                        <tr>
                                            <td class=""text-center"">Pakar</td>
                                            <td class=""text-center"">User</td>
                                            <td class=""text-center"">CF</td>
                                            <td class=""text-center"">CFR</td>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach ($data['bobot'] as $CFValue)
                                            <tr>
                                                <td class=""text-center"">{{ $CFValue['gejala']->kode }}
                                                </td>
                                                <td class=""text-center"">{{ $CFValue['bobot']['pakar'] }}
                                                </td>
                                                <td class=""text-center"">{{ $CFValue['bobot']['user'] }}
                                                </td>
                                                <td>
                                                    <div class=""row"">
                                                        <div class=""col-4"">CF [H,
                                                            E]<sub>{{ removeFromStr($CFValue['gejala']->kode, 'G') }}</sub>
                                                        </div>
                                                        <div class=""col-1"">=</div>
                                                        <div class=""col-7"">CF [H]
                                                            &times; CF [E]
                                                        </div>
                                                    </div>
                                                    <div class=""row"">
                                                        <div class=""col-4""></div>
                                                        <div class=""col-1"">=</div>
                                                        <div class=""col-7"">
                                                            {{ $CFValue['bobot']['pakar'] }}
                                                            &times;
                                                            {{ $CFValue['bobot']['user'] }}
                                                        </div>
                                                    </div>
                                                    <div class=""row"">
                                                        <div class=""col-4""></div>
                                                        <div class=""col-1"">=</div>
                                                        <div class=""col-7"">
                                                            {{ $CFValue['value']['cf'] }}
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    CFR<sub>{{ removeFromStr($CFValue['gejala']->kode, 'G') }}</sub>
                                                    = CF [H, E] &times; RUR
                                                    <br>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                    = {{ $CFValue['value']['cf'] }}
                                                    &times;
                                                    {{ $data['rur'] }}
                                                    <br>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                    = {{ $CFValue['value']['cfr'] }}
                                                </td>
                                            </tr>
                                        @endforeach
                                        </tbody>
                                    </table>
                                </div>
                                <!--end::Table-->

                                <h6 class=""mt-2"">Nilai CF Kombinasi</h6>

                                <div class=""table-responsive"">
                                    <table class=""table table-hover table-bordered"">
                                        @php
                                            $previousGejala = $data['gejala_penyakit'][0];
                                            $currentLeft = 'CFR' . removeFromStr($previousGejala->kode, 'G');
                                            $previousFormula = '';
                                        @endphp

                                        @for ($i = 0; $i < count($data['gejala_penyakit']) - 1; $i++)
                                            @php
                                                $currentGejala = $data['gejala_penyakit'][$i];
                                                $nextGejala = $data['gejala_penyakit'][$i + 1];

                                                $_left = 'R' . removeFromStr($nextGejala->kode, 'G');
                                                $left = $currentLeft . $_left;
                                                $currentLeft = $left;

                                                $previousGejala = $currentGejala;
                                                $base = ($i == 0) ? $data['bobot'][$i]['value']['cfr'] : $data['cf_kombinasi']['steps'][$i-1];
                                            @endphp

                                            <tr>
                                                <td>
                                                    {!! $left !!}
                                                </td>
                                                <td>
                                                    =
                                                    <br>
                                                    =
                                                    <br>
                                                    =
                                                </td>
                                                <td>
                                                    @for ($j = 0; $j < 3; $j++)
                                                        @if ($j == 0)
                                                            @php
                                                                $_right = $previousFormula . 'R' . removeFromStr($currentGejala->kode, 'G');
                                                                $previousFormula = $_right;

                                                                $right = 'CF' . $_right . ' + CFR' . removeFromStr($nextGejala->kode, 'G') . ' * (1 - CF' . $_right . ')';
                                                            @endphp
                                                            {!! $right !!}
                                                        @elseif ($j == 1)
                                                            <br>
                                                            {{ $base }}
                                                            +
                                                            {{ $data['bobot'][$i + 1]['value']['cfr'] }}
                                                            *
                                                            (1 -
                                                            {{ $base }})
                                                        @elseif ($j == 2)
                                                            <br>
                                                            {{ $data['cf_kombinasi']['steps'][$i] }}
                                                        @endif
                                                    @endfor

                                                </td>
                                            </tr>
                                        @endfor
                                        <tr>
                                            <td>
                                                Nilai CF Kombinasi
                                            </td>
                                            <td>
                                                =
                                                <br>
                                                =
                                            </td>
                                            <td>
                                                {{ $data['cf_kombinasi']['hasil'] }}
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                Persentase
                                            </td>
                                            <td>=</td>
                                            <td>
                                                Nilai CF Kombinasi &times; 100%
                                                <br>
                                                {{ $data['cf_kombinasi']['persentase'] }}%
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                                {{--                                <ul class=""list-group"">--}}
                                {{--                                    <li class=""list-group-item"">--}}
                                {{--                                        <h6 class=""mt-3 mb-0 lh-sm"">Nilai CF Kombinasi</h6>--}}
                                {{--                                        <p>--}}
                                {{--                                            Berdasarkan hasil perhitungan, permasalahan--}}
                                {{--                                            <b>{{ $data['permasalahan']['nama'] }}</b>--}}
                                {{--                                            menghasilkan nilai {{ $data['cf_kombinasi']['result'] }} atau--}}
                                {{--                                            {{ $data['cf_kombinasi']['persentase'] }}% keyakinan.--}}
                                {{--                                        </p>--}}
                                {{--                                    </li>--}}
                                {{--                                </ul>--}}
                            </div>
                        </div>
                    @endforeach
                </div>
            </div>
            <!--end::Card body-->
        </div>

    </div>
@endsection
"
QnpWFYhs,Flush Links,ofmarconi,PHP,Sunday 5th of May 2024 09:29:30 AM CDT,"<?php
/**
 * Plugin Name: Network Flush Rewrite Rules Button
 * Description: Adds a button to the WordPress admin bar to flush rewrite rules across all sites in a Multisite network for Editors and Administrators. Reminds to clear site cache after flushing.
 * Version: 1.0
 * Network: true
 */

add_action('admin_bar_menu', 'add_network_flush_button', 100);

/**
 * Adds a button to the WordPress admin bar if the user is an editor or administrator.
 */
function add_network_flush_button($wp_admin_bar) {
    if (!is_user_logged_in()) {
        return;
    }
    if (!current_user_can('edit_others_posts')) { // Checks if the user can edit other users' posts, common among editors and administrators
        return;
    }

    $args = array(
        'id'    => 'network-flush-rewrite',
        'title' => 'Flush Network Rewrites',
        'href'  => '#',
        'meta'  => array(
            'onclick' => 'flushNetworkRewrites();',
            'class'   => 'flush-rewrite-button',
            'title'   => 'Flush Rewrite Rules Across All Sites'
        )
    );
    $wp_admin_bar->add_node($args);
}

add_action('admin_footer', 'flush_rewrite_javascript');

/**
 * JavaScript to handle the flush action when the button is clicked.
 */
function flush_rewrite_javascript() {
    ?>
    <script type=""text/javascript"">
        function flushNetworkRewrites() {
            if (confirm(""Are you sure you want to flush rewrite rules across all network sites? This action can affect site performance."")) {
                window.location.href = ""<?php echo admin_url('admin-post.php?action=flush_network_rewrites'); ?>"";
            }
        }
    </script>
    <?php
}

add_action('admin_post_flush_network_rewrites', 'handle_network_flush_rewrite');

/**
 * Handles the flush action when the button is clicked.
 */
function handle_network_flush_rewrite() {
    if (!current_user_can('edit_others_posts')) {
        wp_die('You do not have sufficient permissions to perform this action.');
    }

    flush_network_rewrite_rules(); // Assumes the function is defined in previous examples
    wp_redirect(add_query_arg(['flushed' => '1'], admin_url()));
    exit;
}

add_action('admin_notices', 'show_flush_notification');

/**
 * Shows a notification after the flush operation has been completed.
 */
function show_flush_notification() {
    if (isset($_GET['flushed']) && $_GET['flushed'] == '1') {
        echo '<div class=""notice notice-success is-dismissible""><p>Flush completed. Do not forget to clear the ""Site Cache"".</p></div>';
    }
}

// The function flush_network_rewrite_rules is assumed to be defined in previous examples
"
