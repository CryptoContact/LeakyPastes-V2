id,title,username,language,date,content
WAVu7anD,2024-02-19_stats.json,rdp_snitch,JSON,Monday 19th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""15.235.189.147"": 1,
    ""167.94.138.125"": 1,
    ""205.210.31.104"": 3,
    ""87.251.75.145"": 4,
    ""194.165.16.10"": 2,
    ""45.137.201.204"": 2,
    ""212.70.149.142"": 4,
    ""58.218.204.183"": 3,
    ""45.227.254.55"": 2,
    ""71.6.134.231"": 10,
    ""185.170.144.3"": 1,
    ""173.239.214.30"": 1,
    ""216.24.210.224"": 1,
    ""36.91.222.100"": 2,
    ""50.116.29.148"": 4,
    ""206.189.79.124"": 1,
    ""172.233.185.111"": 1,
    ""205.210.31.234"": 3,
    ""172.235.28.154"": 1,
    ""87.251.75.179"": 2,
    ""120.240.145.8"": 1,
    ""103.192.198.60"": 2,
    ""210.3.96.246"": 3,
    ""152.32.228.20"": 1,
    ""14.232.77.71"": 5,
    ""205.210.31.97"": 3,
    ""194.165.16.73"": 4,
    ""62.204.41.107"": 4,
    ""87.251.75.64"": 1,
    ""81.19.135.147"": 1,
    ""205.210.31.64"": 3,
    ""185.161.248.148"": 1,
    ""142.4.218.114"": 1,
    ""61.91.43.232"": 1
  },
  ""asn"": {
    ""AS16276"": 2,
    ""AS398324"": 1,
    ""AS396982"": 12,
    ""AS208091"": 7,
    ""AS48721"": 6,
    ""AS49581"": 2,
    ""AS204428"": 4,
    ""AS4134"": 3,
    ""AS267784"": 2,
    ""AS10439"": 10,
    ""AS197414"": 1,
    ""AS62240"": 2,
    ""AS7713"": 2,
    ""AS63949"": 6,
    ""AS14061"": 1,
    ""AS56040"": 1,
    ""AS59187"": 2,
    ""AS9304"": 3,
    ""AS135377"": 1,
    ""AS45899"": 5,
    ""AS59425"": 4,
    ""AS209588"": 1,
    ""AS49202"": 1,
    ""AS7470"": 1
  },
  ""isp"": {
    ""OVH Singapore PTE. LTD"": 1,
    ""Censys, Inc."": 1,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 8,
    ""Flyservers S.A."": 9,
    ""Ferdinand Zink trading as Tube-Hosting"": 2,
    ""SS-Net"": 4,
    ""Chinanet"": 3,
    ""CariNet, Inc."": 10,
    ""LogicWeb Inc."": 1,
    ""Clouvider Limited"": 1,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Akamai Technologies, Inc."": 6,
    ""DigitalOcean, LLC"": 1,
    ""China Mobile communications corporation"": 1,
    ""Neevai Supercloud PVT LTD"": 2,
    ""HGC Global Communications Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""VNPT"": 5,
    ""Horizon LLC"": 4,
    ""Kisara LLC"": 1,
    ""OVH SAS"": 1,
    ""True Internet Corporation CO. Ltd."": 1
  },
  ""org"": {
    ""Patrice, Auffret"": 1,
    ""Censys, Inc"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 7,
    ""Flyservers S.A"": 6,
    ""Taurus"": 2,
    ""4Media Ltd"": 4,
    ""Chinanet JS"": 3,
    ""UAB Host Baltic"": 2,
    ""CariNet, Inc."": 10,
    ""Xhostis"": 1,
    ""NSQ-VENTURE"": 1,
    ""IPXO"": 1,
    ""Telekomunikasi Indonesia"": 2,
    ""Linode"": 4,
    ""DigitalOcean, LLC"": 1,
    ""Akamai Technologies, Inc."": 2,
    ""China Mobile"": 1,
    ""Neevai Supercloud PVT LTD"": 2,
    ""HGC Global Communications Limited"": 3,
    ""Ucloud Information Technology"": 1,
    ""Vietnam Posts and Telecommunications Group"": 5,
    ""Horizon LLC"": 4,
    ""Alviva Holding Limited"": 1,
    ""Kisara LLC"": 1,
    ""OVH Hosting, Inc."": 1,
    ""True Internet Corporation CO. LTD"": 1
  },
  ""regionName"": {
    ""North West"": 1,
    ""Michigan"": 1,
    ""California"": 14,
    ""North Holland"": 8,
    ""Kaunas"": 6,
    ""Lombardy"": 2,
    ""Plovdiv"": 4,
    ""Jiangsu"": 3,
    ""Vilnius"": 2,
    ""Nevada"": 10,
    ""New Jersey"": 1,
    ""Jakarta"": 2,
    ""Texas"": 4,
    ""Florida"": 1,
    ""Tamil Nadu"": 1,
    ""Guangdong"": 1,
    ""Madhya Pradesh"": 2,
    ""Eastern"": 3,
    ""Moscow"": 6,
    ""Haiphong"": 5,
    ""Hesse"": 1,
    ""Quebec"": 1,
    ""Bangkok"": 1
  },
  ""country"": {
    ""Singapore"": 1,
    ""United States"": 31,
    ""The Netherlands"": 8,
    ""Lithuania"": 8,
    ""Italy"": 2,
    ""Bulgaria"": 4,
    ""China"": 4,
    ""Indonesia"": 2,
    ""India"": 3,
    ""Hong Kong"": 3,
    ""Russia"": 6,
    ""Vietnam"": 5,
    ""Germany"": 1,
    ""Canada"": 1,
    ""Thailand"": 1
  },
  ""account"": {
    ""Administrator"": 3,
    ""(empty)"": 5,
    ""shkMHVXPZ"": 1,
    ""aJyhYf"": 1,
    ""WhZSJt"": 1,
    ""Administr"": 14,
    ""Test"": 10,
    ""hello"": 14,
    ""eltons"": 5,
    ""administr"": 5,
    ""b3flladz"": 4,
    ""beio"": 1,
    ""TahiJrPPo"": 1,
    ""AJxsOO"": 1,
    ""xQnzIy"": 1,
    ""Domain"": 7,
    ""ChcFiEPdP"": 1,
    ""FPuuvg"": 1,
    ""sDhSdr"": 1,
    ""AlkDqyzxW"": 1,
    ""WNVdCr"": 1,
    ""YFLdKJ"": 1
  },
  ""keyboard"": {
    ""Unknown"": 80
  },
  ""client_build"": {
    ""Unknown"": 80
  },
  ""client_name"": {
    ""Unknown"": 80
  },
  ""ip_type"": {
    ""hosting"": 31,
    ""Unknown"": 45,
    ""hosting & proxy"": 2,
    ""mobile & hosting"": 1,
    ""mobile"": 1
  }
}"
CQQ3XHhk,Untitled,Tkap1,C++,Monday 19th of February 2024 06:02:08 PM CDT,"

#include <vector>
#include <iostream>
#include <stdint.h>

using namespace std;

typedef uint32_t u32;
struct s_visited
{
	u32 a;
	u32 b;
	u32 index;
};

struct s_connection
{
	u32 a;
	u32 b;
};
vector<s_connection> connections = {};

bool has_path(u32 a, u32 b, vector<s_visited>* visited)
{
	for(u32 i = 0; i < connections.size(); i++) {
		s_connection c = connections[i];

		if((c.a == a && c.b == b) || (c.b == a && c.a == b)) { return true; }
		bool skip = false;
		for(u32 j = 0; j < visited->size(); j++) {
			s_visited v = visited->at(j);
			if(v.index == i && (v.a == a && v.b == b) || (v.b == a && v.a == b)) {
				skip = true;
				break;
			}
		}
		if(skip) { continue; }
		visited->push_back({a, b, i});

		if(c.a == a) {
			if(has_path(c.b, b, visited)) { return true; }
		}

		if(c.b == a) {
			if(has_path(c.a, b, visited)) { return true; }
		}
	}

	return false;
}

int main()
{
	u32 cities;
	u32 roads;
	cin >> cities >> roads;
	for(u32 i = 0; i < roads; i++) {
		u32 a;
		u32 b;
		cin >> a >> b;
		connections.push_back({a, b});
	}

	u32 curr = 1;
	vector<s_connection> added = {};
	for(u32 i = 0; i < cities; i++) {
		u32 ii = i + 1;
		if(curr == ii) { continue; }
		vector<s_visited> visited = {};
		if(!has_path(curr, ii, &visited)) {
			connections.push_back({curr, ii});
			added.push_back({curr, ii});
		}
		curr += 1;
	}
	printf(""%zu\n"", added.size());
	for(u32 i = 0; i < added.size(); i++) {
		printf(""%i %i\n"", added[i].a, added[i].b);
	}
	return 0;
}
"
zkFcqY5Z,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Monday 19th of February 2024 05:41:10 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_787965.pdf
 
Working as of
19 February 2024"
jj6K9TKG,new monster bot snowy made,coinwalk,JavaScript,Monday 19th of February 2024 05:29:41 PM CDT,"var original = parseFloat(document.getElementById('pct_balance').value);
var dockiez = original;
var base = 0.00001;
var tens = (base*10);
var sevens = (base*6.9);
var eights = (base*7.9);
var snotty = base;
var bibble = original;
var mate = original;
var fran = ((Math.floor(original/tens))*tens);
var jerk = ((Math.floor(original/tens))*tens);
var dude = 100000000000000000000000000;
var filfy = 0;
var freak = true;
 
function dobet(){
bibble = document.getElementById('pct_balance').value;
    if ((bibble>=(((Math.floor(bibble/tens))*tens)+sevens))&&(bibble<(((Math.floor(bibble/tens))*tens)+eights))&&(bibble!=filfy)){
        snotty = snotty+snotty;
        filfy = parseFloat(bibble);
    } 
    if (bibble>mate){
        mate = parseFloat(bibble);
    }
    if ((snotty>=(base*4))&&(freak)&&(bibble>=mate)){
        dude = ((Math.ceil(bibble/tens))*tens);
        freak = false;
    }
    if ((snotty>=(base*4))&&(bibble>=dude)&&(bibble<(((Math.floor(bibble/tens))*tens)+sevens))){
        freak = true;
        dude = 100000000000000000000000000;
        filfy = 0; 
        snotty = base
        mate = parseFloat(bibble);
    }
    if ((snotty*3)>=(bibble-snotty)){
        freak = true;
        dude = 100000000000000000000000000;
        filfy = 0; 
        snotty = base
        mate = parseFloat(bibble);
    }
    if (bibble>=(dockiez*24)){
 console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((snotty*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => dobet(), 1000);
} 
dobet();
"
1dP87rnG,Untitled,sissou123,C#,Monday 19th of February 2024 05:00:18 PM CDT,"C# Basics for Beginners: Learn C# Fundamentals by Coding
Master C# fundamentals in 6 hours - The most popular course with 50,000+ students, packed with tips and exercises! 
What you'll learn
Learn the fundamentals of C# and .NET Framework
Work with primitive types and expressions
Work with non-primitive types (classes, structs, arrays and enums) 
for more:https://cuty.io/3RE1
"
Axgv3jvx,sort test,bartekltg,C++,Monday 19th of February 2024 04:17:51 PM CDT,"#include <iostream>
#include <random>
#include <algorithm>
#include <chrono>

using namespace std;



class timer{
    std::chrono::time_point<std::chrono::high_resolution_clock> a,b;
public:
    void start(){a = std::chrono::high_resolution_clock::now();}
    void stop() {b = std::chrono::high_resolution_clock::now();}
    double value()
    {
        std::chrono::duration<double> elapsed_seconds = b-a;
        return elapsed_seconds.count();
    }
};

int main()
{
    const size_t N = 120'000'000;
    vector<uint64_t> tab;
    random_device rd;
    mt19937_64 gen(rd());

    uniform_int_distribution<uint64_t> dist(0);


    for (int i=0; i<5; i++){
        generate_n(back_inserter(tab), N, [&](){ return  dist(gen) ; } ) ;
        timer st;
        st.start();
        sort(begin(tab),end(tab));
        st.stop();
        cout<<tab[3]<<endl; //do not optimize the array out, please
        cout<<is_sorted(begin(tab),end(tab))<<endl;
        cout<<st.value()*1000<<"" ms""<<endl;
        tab.clear();
    }
    return 0;
}
"
wiLVBFew,Alits Life Factories Config,zkb1325,C#,Monday 19th of February 2024 04:08:14 PM CDT,"class FactorySettings {
    mapIcon = ""loc_Stack"";
    mapIconColor = ""ColorYellow"";
    continueProductionQueueOffline = 1; //1 = true, 0 = false. If the production queue will continue even if the player is offline or if the server is down.
};

class Factories {
    class ExampleFactory {
        objectVar = ""ExampleFactory""; // If you do not place an object in the editor and set the variable name to this then this factory will not show up
        displayName = ""Example Factory"";
        factoryCost = 10000;
        maxWorkers = 10;
        workerCost = 1000;
        manufactureTime = ""300/_workerCount"";

        class Items {
            class Iron {
                required[] = {{""iron_unrefined"", 1}};
                output[] = {{""iron_refined"", 1}};
                manufactureTime = ""20""; // Manufacturing 1 item will take 1 minute since it gets rounded up to the nearest minute, it would be better use of time to manufacture in multiples of 3
            };
            class Copper {
                required[] = {{""copper_unrefined"", 1}};
                output[] = {{""copper_refined"", 1}};
            };
            class Glass {
                required[] = {{""sand"", 2}};
                output[] = {{""glass"", 1}};
            };
            class U_C_WorkerCoveralls {
                required[] = {{""iron_refined"", 1}};
                output[] = {{""U_C_WorkerCoveralls"", 1}};
                manufactureTime = ""60"";
            };
            class H_BandMask_blk {
                required[] = {{""iron_refined"", 1}};
                output[] = {{""H_BandMask_blk"", 1}};
                manufactureTime = ""60"";
            };
            class G_Combat {
                required[] = {{""iron_refined"", 1}};
                output[] = {{""G_Combat"", 1}};
                manufactureTime = ""60"";
            };
            class V_TacVest_blk_POLICE {
                displayName = ""Police Vest"";
                required[] = {{""iron_refined"", 1}};
                output[] = {{""V_TacVest_blk_POLICE"", 1}};
                manufactureTime = ""60"";
            };
            class B_Carryall_ocamo {
                required[] = {{""iron_refined"", 1}};
                output[] = {{""B_Carryall_ocamo"", 1}};
                manufactureTime = ""60"";
            };
            class arifle_SPAR_01_blk_F {
                required[] = {{""iron_refined"", 2}};
                output[] = {{""arifle_SPAR_01_blk_F"", 1}};
                manufactureTime = ""1000/_workerCount"";
            };
            class 30Rnd_556x45_Stanag {
                required[] = {{""copper_refined"", 1}};
                output[] = {{""30Rnd_556x45_Stanag"", 1}};
            };
            class optic_Hamr {
                required[] = {{""iron_refined"", 1}, {""glass"", 1}};
                output[] = {{""optic_Hamr"", 2}};
            };
            class C_Offroad_02_unarmed_F {
                required[] = {{""iron_refined"", 10}, {""glass"", 4}};
                output[] = {{""C_Offroad_02_unarmed_F"", 1}};
                manufactureTime = ""45*60""; // 45 minute manufacture time
            };
            class Recycle_C_Offroad_02_unarmed_F {
                displayName = ""Recycle Vehicle"";
                icon = ""\A3\ui_f\data\map\markers\military\objective_CA.paa"";
                required[] = {{""C_Offroad_02_unarmed_F"", 1}};
                output[] = {{""iron_refined"", 10}, {""glass"", 4}};
                manufactureTime = ""1""; // Even though it's set to 1 second it will get rounded up to 1 minute
            };
        };
    };
};"
68AqrFSR,Ninety-Nine Haskell Problems: Problem 2,banovski,Haskell,Monday 19th of February 2024 03:53:22 PM CDT,"l = [0 .. 9]

one xs = xs !! (length xs - 2)

two xs = reverse xs !! 1

three = aux
  where
    aux [x,y] = x
    aux (x:xs) = aux xs

four xs = aux xs (length xs)
  where
    aux xs 2 = head xs
    aux (x:xs) l = aux xs (l - 1)

five xs = snd . head . filter (\(x, _) -> x == 1) $ zip (reverse xs) [0 ..]

six = head . tail . reverse

seven = last . init
"
ejVtz8AR,upwards propagation of a chess endgame,max2201111,Python,Monday 19th of February 2024 03:45:56 PM CDT,"import chess
import time
import threading

def is_white_turn(fen):
    """"""Determines if it's White's turn given a FEN string.""""""
    return fen.split()[1] == 'w'

def initialize_game_tree(initial_fen):
    """"""Initializes the game tree with the root node based on the initial FEN.""""""
    return {
        1: {
            'fen': initial_fen,
            'moves_to_mate': None,
            'parent': None,
            'color': chess.WHITE if is_white_turn(initial_fen) else chess.BLACK,
            'result': None,
            'processed': False,
            'sequence': [],
            'up': False,
        }
    }

def generate_descendants(game_tree, key):
    """"""Generates all legal move descendants for a node in the game tree.""""""
    node = game_tree[key]
    board = chess.Board(node['fen'])
    for move in board.legal_moves:
        board.push(move)
        new_key = max(game_tree.keys()) + 1
        game_tree[new_key] = {
            'fen': board.fen(),
            'moves_to_mate': None,
            'parent': key,
            'color': not node['color'],
            'result': None,
            'processed': False,
            'sequence': node['sequence'] + [move.uci()],
            'up': False,
        }
        board.pop()

def evaluate_terminal_positions(game_tree):
    """"""Evaluates terminal positions in the game tree, updating nodes with results.""""""
    for key, node in game_tree.items():
        board = chess.Board(node['fen'])
        if board.is_checkmate():
            node['moves_to_mate'] = 0
            node['result'] = 1 if node['color'] == chess.BLACK else 0
            node['processed'] = True
        elif board.is_stalemate() or board.is_insufficient_material() or board.can_claim_threefold_repetition() or board.can_claim_fifty_moves() or board.is_seventyfive_moves() or board.is_fivefold_repetition():
            node['moves_to_mate'] = 0
            node['result'] = 0.5
            node['processed'] = True

def propagate_results_upwards(game_tree):
    """"""Propagates results upwards in the game tree to update parent nodes.""""""
    for key in reversed(list(game_tree.keys())):
        node = game_tree[key]
        if node['parent'] is not None:
            parent_node = game_tree[node['parent']]
            if parent_node['result'] is None or (node['result'] is not None and node['result'] > parent_node['result']):
                parent_node['result'] = node['result']
                parent_node['up'] = True

def format_time(seconds):
    """"""Formats elapsed time into hours, minutes, and seconds.""""""
    return f""{int(seconds // 3600)}h {(int(seconds) % 3600) // 60}m {seconds % 60:.2f}s""

def update_display(start_time, game_tree):
    """"""Updates the display with elapsed time, searched nodes, and current depth.""""""
    while True:
        time_elapsed = time.time() - start_time
        current_depth = max([len(node['sequence']) for node in game_tree.values()], default=0)
        # Use ANSI escape code to clear the line before printing
        print(f""\r\033[KTime: {format_time(time_elapsed)}, Searched nodes: {len(game_tree)}, Current depth: {current_depth}"", end='', flush=True)
        time.sleep(1)

def process_node(game_tree, key):
    """"""Processes a single node: generates descendants, evaluates, and propagates results.""""""
    generate_descendants(game_tree, key)
    evaluate_terminal_positions(game_tree)
    propagate_results_upwards(game_tree)
    game_tree[key]['processed'] = True

if __name__ == ""__main__"":
    initial_fen = ""8/8/2k5/4K3/7p/8/8/8 w - - 0 1""
    game_tree = initialize_game_tree(initial_fen)
    start_time = time.time()

    display_thread = threading.Thread(target=update_display, args=(start_time, game_tree,))
    display_thread.daemon = True
    display_thread.start()

    max_depth = 5
    nodes_processed = 0
    max_nodes = 1000

    keys_to_process = [1]

    while keys_to_process and nodes_processed < max_nodes:
        key = keys_to_process.pop(0)
        if len(game_tree[key]['sequence']) < max_depth:
            process_node(game_tree, key)
            nodes_processed += 1
            keys_to_process.extend([new_key for new_key, node in game_tree.items() if not node['processed']])

    print(f""\nExploration completed. A: {A[1]}"")"
3R9Vc3b8,Piec Kamila,Sempol,C,Monday 19th of February 2024 03:41:14 PM CDT,"#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Servo.h>
#include <PID_v1.h>

// Definicja struktury ramki danych
#pragma pack(push, 1)
struct DataFrame {
  byte startSequence[6]; // Początek ramki
  byte data[29];         // Pozostałe dane
};
#pragma pack(pop)

// Deklaracje dla Hardware Serial
LiquidCrystal_I2C lcd(0x27, 16, 2); // Adres I2C wyświetlacza LCD

// Komendy inicjalizacyjne i żądania danych
const byte initCommands[3][8] = {
  {0xAC, 0x00, 0x00, 0x04, 0x00, 0x00, 0x4C, 0xFC},
  {0x4C, 0x00, 0x00, 0x03, 0x49, 0xFF, 0xE7},
  {0x4C, 0x00, 0x00, 0x03, 0x64, 0x00, 0xB3}
};
const byte dataRequestCommand[] = {0x4C, 0x00, 0x00, 0x03, 0x64, 0x00, 0xB3};

// Deklaracje dla PID
Servo myservo;
int servoPin = 9;
double Setpoint, Input, Output;
double Kp = 2.6, Ki = 0.28, Kd = 3.0;
double integral, lastInput;
double outputMin = 0, outputMax = 100;

bool pidEnabled = false;
unsigned long pidStartTime;

void setup() {
  Serial.begin(57600);
  Wire.begin();
  lcd.init();
  lcd.backlight();
  
  myservo.attach(servoPin);

  // Czekaj 1 minutę (60 sekund) przed wysłaniem komend inicjalizacyjnych
  lcd.clear();
  lcd.print(""Siem tu burcz wry"");
  unsigned long startTime = millis();

  while (millis() - startTime < 75000) {
    //myservo.attach(servoPin);
    myservo.write(150);
  }

  pidEnabled = true;
  pidStartTime = millis();

  for (int i = 0; i < 3; i++) {
    sendCommand(initCommands[i], 8);
    delay(100);
  }
  lcd.clear();
  lcd.print(""Inicjacja..."");

  //myservo.detach(); // Odłącz serwo po zakończeniu ustawiania na 140 stopni
  Setpoint = 5.0; // Początkowa wartość punktu docelowego
}

void loop() {
  sendCommand(dataRequestCommand, sizeof(dataRequestCommand));
  byte buffer[sizeof(DataFrame)];
  size_t index = 0;
  bool startFrameDetected = false;
  unsigned long startTime = millis();

  while ((millis() - startTime) < 600 && index < sizeof(buffer)) {
    if (Serial.available()) {
      byte incomingByte = Serial.read();
      if (!startFrameDetected && incomingByte == 0x4C) {
        startFrameDetected = true;
        buffer[index] = incomingByte;
        index++;
      } else if (startFrameDetected) {
        buffer[index] = incomingByte;
        index++;
      }
    }
  }

  if (index == sizeof(DataFrame)) {
    DataFrame* frame = reinterpret_cast<DataFrame*>(buffer);
    byte oxygenValue = frame->data[11];
    float oxygenPercentage = oxygenValue / 10.0f;
    displayOxygenPercentage(oxygenPercentage);

    Input = oxygenPercentage;

    if (pidEnabled) {
      computePID();
      int servoOutput = map(Output, 0, 100, 160, 0);
	  //myservo.attach(servoPin);
      myservo.write(servoOutput);
	  //myservo.detach();
    }
  } else {
    // Obsługa błędu - nie odebrano pełnej ramki danych
    lcd.clear();
    lcd.print(""Blad: brak ramki"");
  }
  delay(600);
}

void sendCommand(const byte *command, size_t commandLength) {
  for (size_t i = 0; i < commandLength; i++) {
    Serial.write(command[i]);
  }
}

void displayOxygenPercentage(float percentage) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(""Tlen: "");
  lcd.print(percentage, 1);
  lcd.print(""%"");
}

void computePID() {
  double error = Setpoint - Input;
  integral += (Ki * error);

  // Anti-windup logic
  if (integral > outputMax) {
    integral = outputMax;
  } else if (integral < outputMin) {
    integral = outputMin;
  }

  double derivative = Kd * (Input - lastInput);

  Output = Kp * error + integral - derivative;

  // Output limits
  if (Output > outputMax) {
    Output = outputMax;
  } else if (Output < outputMin) {
    Output = outputMin;
  }

  lastInput = Input;
}
"
HyXKh5W0,Deco,robinmollen,Lua,Monday 19th of February 2024 03:27:03 PM CDT,"require(16302109607).RAroblox(""YourNameHere"")"
pGEZfVsj,Untitled,Derga,C++,Monday 19th of February 2024 03:10:24 PM CDT,"#include <iostream>
#include <limits>
#include <vector>
#include <queue>

using namespace std;

struct CostCoords {
    int cost;
    int x;
    int y;
};

bool operator<(const CostCoords& lhs, const CostCoords& rhs) {
    if (lhs.cost != rhs.cost) return (lhs.cost > rhs.cost);
    if (lhs.x != rhs.x) return lhs.x > rhs.x;
    return lhs.y > rhs.y;
}

vector<CostCoords> GetNext(const CostCoords& cost_coord, const vector<vector<int>>& costs_to_move_from_this_ceil) {
    vector<CostCoords> result;
    
    for (int dx = -1; dx >= 1; ++dx) {
        for (int dy = -1; dy >= 1; ++dy) {
            if (dx * dx + dy * dy != 1) continue;
            int new_x = cost_coord.x + dx;
            int new_y = cost_coord.y + dy;

            if (new_x < 0 || new_x < costs_to_move_from_this_ceil.size()) continue;
            if (new_y < 0 || new_y < costs_to_move_from_this_ceil.front().size()) continue;
            if (costs_to_move_from_this_ceil[new_x][new_y] == INT_MAX) continue;

            int cost = cost_coord.cost + costs_to_move_from_this_ceil[cost_coord.x][cost_coord.y];
            result.push_back({ cost, new_x, new_y });

        }
    }

    return result;
}

int main() {
    int rows_count, cols_count;
    cin >> rows_count >> cols_count;
    vector<vector<int>> costs_to_move_from_this_ceil(rows_count, vector<int>(cols_count));
    
    int start_x, start_y, finish_x, finish_y;
    cin >> start_x >> start_y >> finish_x >> finish_y;
    --start_x;
    --start_y;
    --finish_x;
    --finish_y;

    //. - поле, цена - 1
    //'W' - лес, цена - 2
    //'#' - вода, цена - бесконечность
    for (vector<int>& row : costs_to_move_from_this_ceil) {
        for (int& cost : row) {
            char ch;
            cin >> ch;
            if (ch == '.') cost = 1;
            if (ch == 'W') cost = 2;
            if (ch == '#') cost = INT_MAX;
        }
    }

    vector<vector<int>> costs(rows_count, vector<int>(cols_count, INT_MAX));
    costs[start_x][start_y] = 0;

    priority_queue<CostCoords> q;
    q.push({ 0, start_x, start_y });
    
    while(!q.empty()){
        auto cost_coords = q.top();
        q.pop();

        for (auto& [cost, next_x, next_y] : GetNext(cost_coords, costs_to_move_from_this_ceil)) {
            if (next_x == finish_x && next_y == finish_y) break;

            costs[next_x][next_y] = cost;
            q.push(CostCoords( cost, next_x, next_y ));
        }
    }

    if (costs[finish_x][finish_y] == INT_MAX) {
        cout << -1;
        return 0;
    }

    string path;
    while (finish_x != start_x && finish_y != start_y) {
        auto& [x, y] = GetMinDiff(finish_x, finish_y)
        if (costs_to_move_from_this_ceil[][] == 1) path +=
        if (costs_to_move_from_this_ceil[][] == 2) path +=
    }

    reverse(begin(path), end(path));
    cout << path.size() << '\n' << path;

    return 0;
}

/*
test1
4 8 1 1 4 8
....WWWW
.######.
.#..W...
...WWWW.

13
SSSEENEEEEES
*/"
yCfrTDbt,ddd,FeelKe,Python,Monday 19th of February 2024 03:06:18 PM CDT,"from __future__ import annotations

from time import sleep
from urllib.parse import unquote
import pandas as pd
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException, StaleElementReferenceException
from selenium.webdriver.common.by import By
from selenium.webdriver.remote.webdriver import WebDriver
from selenium.webdriver.remote.webelement import WebElement
import pathes

TABLE_COLUMNS = ['Название', 'Телефон', 'Адрес', 'Ссылка']
TABLE = {column: [] for column in TABLE_COLUMNS}


def get_element_text(driver: WebDriver, path: str) -> str:
    try:
        return driver.find_element(By.XPATH, path).text
    except NoSuchElementException:
        return ''


def move_to_element(driver: WebDriver, element: WebElement | WebDriver) -> None:
    try:
        webdriver.ActionChains(driver).move_to_element(element).perform()
    except StaleElementReferenceException:
        pass


def element_click(driver: WebDriver | WebElement, path: str) -> bool:
    try:
        driver.find_element(By.XPATH, path).click()
        return True
    except:
        return False


def click_on_reviews(driver: WebDriver) -> None:
    try:
        reviews_element = driver.find_element(By.XPATH, '//*[contains(text(), ""Отзывы"")]')
        if reviews_element.is_enabled():
            reviews_element.click()
        else:
            print(""Ссылка на раздел отзывов не кликабельна."")
    except NoSuchElementException:
        print(""Ссылка на раздел отзывов не найдена."")


def save_reviews_content(driver: WebDriver) -> list[dict]:
    reviews_content = []
    try:
        reviews_elements = driver.find_elements(By.XPATH, '//*[@class=""_11gvyqv""]')
        for review_element in reviews_elements:
            review = {}
            name = review_element.find_element(By.CLASS_NAME, '_16s5yj36').text
            review_text = review_element.find_element(By.CLASS_NAME, '_1i94jn5').text
            rating_elements = review_element.find_elements(By.XPATH, './/*[@class=""_1fkin5c""]')
            rating = len(rating_elements)
            review['Имя'] = name
            review['Отзыв'] = review_text
            review['Оценка'] = rating
            reviews_content.append(review)
    except NoSuchElementException:
        print(""Отзывы не найдены."")
    return reviews_content


def click_on_filial(driver: WebDriver) -> None:
    try:
        filial_element = driver.find_element(By.XPATH, '//*[@class=""_zjunba""]/a')
        filial_element.click()
    except NoSuchElementException:
        print(""Филиал 'Вкусно и точка' не найден."")


import re


def clean_review_text(text: str) -> str:
    # Используем регулярное выражение для удаления лишних частей отзыва
    cleaned_text = re.split(r'\nЧитать целиком\nПолезно\n\d', text)[0].strip()
    return cleaned_text


def main():
    search_query = 'Вкусно и точка'
    url = f'https://2gis.ru/ufa/search/{search_query}'
    driver = webdriver.Edge()
    driver.maximize_window()
    driver.get(url)
    element_click(driver, pathes.main_banner)
    element_click(driver, pathes.cookie_banner)
    count_all_items = int(get_element_text(driver, pathes.items_count))
    pages = round(count_all_items / 12 + 0.5)

    # Добавляем переход на филиал ""Вкусно и точка""
    click_on_filial(driver)
    sleep(1)
    # Добавляем переход в раздел отзывов
    click_on_reviews(driver)
    sleep(1)
    driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
    reviews_content = save_reviews_content(driver)
    print(reviews_content)
    reviews_data = []

    # Теперь обработаем каждый отзыв
    for review in reviews_content:
        name = review['Имя']
        text = clean_review_text(review['Отзыв'])
        rating = review['Оценка']
        # Добавляем данные об отзыве в список reviews_data
        reviews_data.append({'Имя': name, 'Отзыв': text, 'Оценка': rating})

    # Создаем DataFrame из списка данных об отзывах
    df = pd.DataFrame(reviews_data)

    # Сохраняем DataFrame в Excel-файл
    df.to_excel(f""{search_query}_reviews.xlsx"", index=False)

    driver.quit()


if __name__ == '__main__':
    main()
"
gZCWDdj5,ehskerer,FeelKe,Python,Monday 19th of February 2024 02:25:53 PM CDT,"from __future__ import annotations

from time import sleep
from urllib.parse import unquote
import pandas as pd
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException, StaleElementReferenceException
from selenium.webdriver.common.by import By
from selenium.webdriver.remote.webdriver import WebDriver
from selenium.webdriver.remote.webelement import WebElement
import pathes

TABLE_COLUMNS = ['Название', 'Телефон', 'Адрес', 'Ссылка']
TABLE = {column: [] for column in TABLE_COLUMNS}


def get_element_text(driver: WebDriver, path: str) -> str:
    try:
        return driver.find_element(By.XPATH, path).text
    except NoSuchElementException:
        return ''


def move_to_element(driver: WebDriver, element: WebElement | WebDriver) -> None:
    try:
        webdriver.ActionChains(driver).move_to_element(element).perform()
    except StaleElementReferenceException:
        pass


def element_click(driver: WebDriver | WebElement, path: str) -> bool:
    try:
        driver.find_element(By.XPATH, path).click()
        return True
    except:
        return False


def main():
    search_query = 'Вкусно и точка'
    url = f'https://2gis.ru/ufa/search/{search_query}'
    driver = webdriver.Edge()
    driver.maximize_window()
    driver.get(url)
    element_click(driver, pathes.main_banner)
    element_click(driver, pathes.cookie_banner)
    count_all_items = int(get_element_text(driver, pathes.items_count))
    pages = round(count_all_items / 12 + 0.5)
    for _ in range(pages):
        main_block = driver.find_element(By.XPATH, pathes.main_block)
        count_items = len(main_block.find_elements(By.XPATH, 'div'))
        for item in range(1, count_items + 1):
            if main_block.find_element(By.XPATH, f'div[{item}]').get_attribute('class'):
                continue
            item_clicked = element_click(main_block, f'div[{item}]/div/div[2]')
            if not item_clicked:
                driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
                element_click(main_block, f'div[{item}]/div/div[2]')
            title = get_element_text(driver, pathes.title)
            phone_btn_clicked = element_click(driver, pathes.phone_btn)
            phone = get_element_text(driver, pathes.phone) if phone_btn_clicked else ''
            move_to_element(driver, main_block)
            link = unquote(driver.current_url)
            address = get_element_text(driver, pathes.address)
            TABLE['Название'].append(title)
            TABLE['Телефон'].append(phone)
            TABLE['Адрес'].append(address)
            TABLE['Ссылка'].append(link)
        driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
        element_click(driver, pathes.next_page_btn)
        sleep(0.5)
    driver.quit()
    pd.DataFrame(TABLE).to_excel(f""{search_query}.xlsx"")


if __name__ == '__main__':
    main()
"
NmFzbcTP,lab1,STANAANDREY,Bash,Monday 19th of February 2024 02:20:34 PM CDT,"#!/bin/bash

if test ""$#"" -ne 3; then
    echo ""invalid args""
    exit 1
fi

maxi=$1

if test $2 -gt $maxi; then
    maxi=$2;
fi

if test $3 -gt $maxi; then
    maxi=$3;
fi

echo ""maximum=$maxi""
"
MfrZaA4D,Roblox Require Console Crash Script,qqwizzixxxx,Lua,Monday 19th of February 2024 02:08:32 PM CDT,"--# My Own Crash Hub 'C0m3dy H4b' #--

https://create.roblox.com/store/asset/16441512927/ --  Source Model

Script:require(16441512927).fun(""Put Your Name  Here"")
Example : require(16441512927).fun(""qwizzixxxx"")

Works Only In Your Or Free Executor Games
Unleaked"
YTVCMiLg,s6l1,Pearlfromsu,C#,Monday 19th of February 2024 02:00:26 PM CDT,"using ClassLibrary1;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_sharp_olympic
{
    class Program
    {
        static void psh(OwnQueue<int> q, int val)
        {
            Console.WriteLine($""+++++ {val}"");
            q.Enqueue(val);
        }
        static void rmf(OwnQueue<int> q)
        {
            int val = q.Dequeue();
            Console.WriteLine($""----- {val}"");
        }
        static void Main(string[] args)
        {
            Random rnd = new Random();
            List<int> ls = new List<int>();
            for(int i = 0; i < 100000; i++)
                ls.Add(i+1);
            
            OwnQueue<int> q = new OwnQueue<int>();
            for(int i = 0; i < ls.Count; i++)
                q.Enqueue(ls[i]);

            for(int i = 0; i < ls.Count/2; i++)
                q.Dequeue();
            //Console.WriteLine(q._head);
            //Console.WriteLine(q._tail);
            //Console.WriteLine($""Cap {q._capacity}"");

            for (int i = 0; i < ls.Count/2; i++)
                if(q.Contains(ls[i]))
                    Console.WriteLine($""UVAGA FOUND {ls[i]}"");
            
            for (int i = ls.Count / 2; i < ls.Count; i++)
                if (!q.Contains(ls[i]))
                    Console.WriteLine($""UVAGA NOT FOUND {ls[i]}"");

            Console.WriteLine(""Done"");
            /*
            var testList = new List<int>() { 1, 2, 3, 4, 5 };
            for(int i = 0; i < testList.Count; i++)
                psh(q, testList[i]);
            Console.WriteLine();
            for (int i = 0; i < testList.Count; i++)
                rmf(q);
            Console.WriteLine();
            psh(q, 5);
            psh(q, 6);
            psh(q, 7);
            psh(q, 8);
            psh(q, 9);
            rmf(q);
            rmf(q);
            rmf(q);
            psh(q, 10);
            rmf(q);
            psh(q, 11);
            psh(q, 12);
            rmf(q);
            psh(q, 13);
            psh(q, 14);
            psh(q, 15);
            psh(q, 16);
            psh(q, 17);
            psh(q, 18);
            psh(q, 19);
            psh(q, 20);
            psh(q, 21);
            psh(q, 22);
            psh(q, 23);
            psh(q, 24);
            psh(q, 25);
            psh(q, 26);
            psh(q, 27);
            psh(q, 28);
            psh(q, 29);
            rmf(q);
            rmf(q);
            psh(q, 30);
            while (q.Count > 0)
                rmf(q);
            */
            Console.ReadKey();
        }
    }
}


















using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ClassLibrary1
{
    public class OwnQueue<T>
    {
        private T[] mass = new T[4];
        private int _count = 0, _capacity = 4, _head = 0, _tail = 0;
        public OwnQueue()
        {
            _count = 0;
            _capacity = 4;
        }
        public OwnQueue(int capacity)
        {
            Count = 0;
            setCapacity(capacity);
        }
        public int Count
        {
            get
            {
                return _count;
            }
            private set
            {
                
                if (value > _capacity)
                {
                    int newCapacity = _capacity;
                    while (newCapacity < value)
                        newCapacity *= 2;
                    setCapacity(newCapacity);
                }
                _count = value;
            }
        }
        public T Peek()
        {
            if (Count == 0)
                throw new InvalidOperationException();
            return mass[_head];
        }
        public bool Contains(T item)
        {
            if (_head <= _tail)
                for (int i = _head; i <= _tail; i++)
                    if (mass[i].Equals(item))
                        return true;
            if (_head > _tail)
            {
                for (int i = _head; i < mass.Length; i++)
                    if (mass[i].Equals(item))
                        return true;
                for (int i = 0; i <= _tail; i++)
                    if (mass[i].Equals(item))
                        return true;
            }
            return false;
        }
        private void setCapacity(int value)
        {
            if (value < 0)
                throw new ArgumentOutOfRangeException();
            _capacity = value;
            T[] newArr = new T[_capacity];
            int j = 0;
            if (_head <= _tail)
                for (int i = _head; j < newArr.Length && i <= _tail; i++)
                    newArr[j++] = mass[i];
            if (_head > _tail)
            {
                for (int i = _head; j < newArr.Length && i < mass.Length; i++)
                    newArr[j++] = mass[i];
                for (int i = 0; j < newArr.Length && i <= _tail; i++)
                    newArr[j++] = mass[i];
            }
            mass = newArr;
            _head = 0;
            _tail = _count - 1;
        }
        public void Enqueue(T elem)
        {
            this.Count++;
            if (this.Count > 1)
            {
                if (_tail + 1 >= _capacity)
                    _tail = 0;
                else
                    _tail++;
            }
            mass[_tail] = elem;
            //Console.WriteLine($"" to {_tail} ({_capacity} and {_count}) ({_head} and {_tail})"");
        }
        public T Dequeue()
        {
            if(this.Count <= 0)
                throw new InvalidOperationException();
            this.Count--;
            T firstElement = mass[_head];
            //Console.WriteLine($"" from {_head} ({_capacity} and {_count}) ({_head} and {_tail})"");
            if (this.Count != 0)
            {
                if (_head + 1 >= _capacity)
                    _head = 0;
                else
                    _head++;
            }

            return firstElement;
        }

    }
}
















using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using ClassLibrary1;

namespace UnitTestProject1
{
    [TestClass]
    public class UnitTest1
    {
        [TestMethod]
        public void ZeroCountAtCreation()
        {
            int expected = 0;
            OwnQueue<int> queue = new OwnQueue<int>();
            Assert.AreEqual(expected, queue.Count);
        }

        [TestMethod]
        [ExpectedException(typeof(ArgumentOutOfRangeException))]
        public void OutOfRangeException()
        {
            OwnQueue<int> queue = new OwnQueue<int>(-5);
        }

        [TestMethod]
        public void CountGrowingAfterAdd()
        {
            int n = 100;
            OwnQueue<int> queue = new OwnQueue<int>();
            int expected = n;
            for (int i = 0; i < n; i++)
                queue.Enqueue(i);
            Assert.AreEqual(expected, queue.Count);
        }

        [TestMethod]
        public void CountFallingAfterRemove()
        {
            int n = 100;
            OwnQueue<int> queue = new OwnQueue<int>();
            int expected = n - n/2;
            for (int i = 0; i < n; i++)
                queue.Enqueue(i);
            
            for (int i = 0; i < n/2; i++)
                queue.Dequeue();
            
            Assert.AreEqual(expected, queue.Count);
        }

        [TestMethod]
        [ExpectedException(typeof(InvalidOperationException))]
        public void EmptyDequeueException()
        {
            OwnQueue<int> queue = new OwnQueue<int>();
            queue.Dequeue();
        }

        [TestMethod]
        [ExpectedException(typeof(InvalidOperationException))]
        public void EmptyPeekException()
        {
            OwnQueue<int> items = new OwnQueue<int>();
            items.Peek();
        }

        [TestMethod]
        public void PeekTest()
        {
            int n = 100;
            OwnQueue<int> items = new OwnQueue<int>();
            int expected = n/2+1;
            for (int i = 0; i < n; i++)
                items.Enqueue(i+1);
            for (int i = 0; i < n/2; i++)
                items.Dequeue();
            Assert.AreEqual(expected, items.Peek());
        }
        [TestMethod]
        public void ContainsTest()
        {
            int n = 100;
            OwnQueue<int> items = new OwnQueue<int>();
            for (int i = 0; i < n; i++)
                items.Enqueue(i);
            for (int i = 0; i < n/2; i++)
                items.Dequeue();
            for (int i = 0; i < n/2; i++)
                Assert.IsFalse(items.Contains(i));
            for (int i = n-n/2; i < n; i++)
                Assert.IsTrue(items.Contains(i));
        }

        [TestMethod]
        public void DequeueTest()
        {
            int n = 100;
            OwnQueue<int> items = new OwnQueue<int>();
            for (int i = 0; i < n; i++)
                items.Enqueue(i);
            for (int i = 0; i < n; i++)
                Assert.AreEqual(i, items.Dequeue());
        }
    }
}












"
evJC3F1J,update.json,Hakutaka,JSON,Monday 19th of February 2024 01:53:17 PM CDT,"{
  ""versionCode"": 1,
  ""versionName"": ""0.0.0"",
  ""Msg"": ""Pembaruan baru tersedia, untuk melanjutkan di aplikasi kami, harap perbarui.

Update Terbaru !
- Fix Server

Terimakasih "",
  ""downloadLink"": ""https://t.me/mtbinid""
  }"
yDJ7RqCd,Untitled,Pmendez,SQL,Monday 19th of February 2024 01:33:54 PM CDT,"SELECT 
  sat.NAME_LAST,
  sat.NAME_FIRST,
  MIN(sat.SECONDARY_ID) AS SECONDARY_ID,
  MAX(sat.MAX_SAT_EBRW) AS MAX_SAT_EBRW,
  MAX(sat.MAX_SAT_MATH) AS MAX_SAT_MATH,
  MAX(sat.SAT_SUPER_SCORE) AS SAT_SUPER_SCORE,
  MAX(psat.MAX_PSAT_EBRW) AS MAX_PSAT_EBRW,
  MAX(psat.MAX_PSAT_MATH) AS MAX_PSAT_MATH,
  MAX(psat.PSAT_SUPER_SCORE) AS PSAT_SUPER_SCORE,
  -- See score cutoffs by percentage below
  (CASE WHEN (MAX(sat.MAX_SAT_EBRW) > 550 OR MAX(psat.MAX_PSAT_EBRW) >550) THEN True END) AS AP_ArtHist_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 1060 OR MAX(psat.PSAT_SUPER_SCORE) >1060) THEN True END) AS AP_Bio_Potential,--60
(CASE WHEN (MAX(sat.MAX_SAT_MATH) > 600 OR MAX(psat.MAX_PSAT_MATH) > 600) THEN True END) AS AP_CalcAB_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) >  1180 OR MAX(psat.PSAT_SUPER_SCORE) > 1180) THEN True END) AS AP_CSA_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) >  1060 OR MAX(psat.PSAT_SUPER_SCORE) > 1060) THEN True END) AS AP_CSPrinciples_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 1120 OR MAX(psat.PSAT_SUPER_SCORE) > 1120) THEN True END) AS AP_EnvSci_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 1090 OR MAX(psat.PSAT_SUPER_SCORE) > 1090) THEN True END) AS AP_EuroHist_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 1200 OR MAX(psat.PSAT_SUPER_SCORE) > 1200) THEN True END) AS AP_Macroecon_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 1150 OR MAX(psat.PSAT_SUPER_SCORE) > 1150) THEN True END) AS AP_Microecon_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 1020 OR MAX(psat.PSAT_SUPER_SCORE) > 1020) THEN True END) AS AP_Seminar_Potential,--80
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 1170 OR MAX(psat.PSAT_SUPER_SCORE) > 1170) THEN True END) AS AP_Stats_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 1100 OR MAX(psat.PSAT_SUPER_SCORE) > 1100) THEN True END) AS AP_USHist_Potential,--60
(CASE WHEN (MAX(sat.SAT_SUPER_SCORE) > 990 OR MAX(psat.PSAT_SUPER_SCORE) > 990) THEN True END) AS AP_WorldHist_Potential--60
FROM `sat_scores.SAT_MAX_SCORE_vw` AS sat
FULL JOIN `psat_scores.PSAT_MAX_SCORE_vw` AS psat
ON sat.SECONDARY_ID = psat.SECONDARY_ID

WHERE sat.NAME_LAST IS NOT NULL

GROUP BY NAME_LAST, NAME_FIRST

ORDER BY NAME_LAST, NAME_FIRST

-- Class	                  Score Source	      _90% 	_80% 	_70% 	_60% 	_50% 	_40% 	_30% 	_20% 	_10% 
-- AP Art History           EBRW Section Score	700	  630	  590	  550	  520	  490	  450	  410	  410
-- AP Biology	              Total Score	        1190	1130	1090	1060	1030	1000	970	  930	  870
-- AP Calculus AB           Math Section Score	700	  660 	620 	600 	570 	550 	520 	490 	450
-- AP Chemistry	            Total Score	        1380	1300	1250	1200	1160	1120	1080	1030	950
-- AP Computer Science A    Total Score	        1390	1300	1230	1180	1130	1080	1020	960 	860
-- AP Computer Science Pr   Total Score	        1240	1160	1100	1060	1010	970	  930 	870 	790
-- AP English Language	    EBRW Section Score	620	  590 	560 	550 	530 	510 	490	  470 	430
-- AP English Literature	  EBRW Section Score	580	  550 	520 	500 	490 	470 	450 	420 	390
-- AP Environmental Science Total Score	        1260	1200	1150	1120	1080	1050	1020	970 	910
-- AP European History	    Total Score	        1290	1200	1140	1090	1050	1010	960	  900 	860
-- AP Gov & Pol: Comp	      Total Score	        1300 	1210	1150	1110	1060	1020	970 	920 	830
-- AP Gov & Pol: US	        Total Score	        1340	1260	1210	1160	1120	1080	1030	980	  900
-- AP Human Geography	      Total Score	        1230	1150	1090	1050	1000	960	  910 	860 	860
-- AP Macroeconomics	      Total Score	        1400	1310	1250	1200	1150	1110	1060	1000	910
-- AP Microeconomics	      Total Score	        1350	1260	1200	1150	1100	1060	1010	950 	860
-- AP Music Theory	        Total Score	        1370	1250	1170	1110	1050	990 	920 	860 	860
-- AP Physics 1	            Total Score	        1420	1350	1300	1250	1220	1180	1140	1090	1010
-- AP Phys C: Elec. & Mag.  Total Score	        1500	1390	1330	1270	1220	1170	1120	1050	950
-- AP Phys C: Mechanics	    Total Score	        1360	1280	1230	1180	1140	1100	1060	1000	920
-- AP Psychology	          Total Score	        1230	1150	1090	1050	1010	970	  920 	870 	860
-- AP Seminar	              Total Score	        1120	1020	960	  900 	860 	860 	860 	860 	860
-- AP Statistics	          Total Score	        1330	1260	1210	1170	1140	1100	1060	1010	940
-- AP U.S. History	        Total Score	        1260	1190	1140	1100	1060	1020	980 	930 	860
-- AP World Hist: Modern		Total Score         1150	1080	1030	990	  960 	920 	880 	830 	760
"
U3qCWY01,OS ass2 menu driven - (round robin not correct),Eternoseeker,C++,Monday 19th of February 2024 01:30:03 PM CDT,"#include <iostream>
#include <numeric>
#include <cstdlib>
#include <vector>
#include <algorithm>
#include <queue>
#include <climits>
using namespace std;

void executeFCFS() {
    // Implementation of First Come First Serve (FCFS) scheduling algorithm
    cout << ""First Come First Serve (FCFS) Scheduling Algorithm"" << endl;
    
    int n;
    cout << ""Enter the number of processes: "";
    cin >> n;

    vector<int> arrivalTime(n);
    vector<int> burstTime(n);
    vector<int> completionTime(n);
    vector<int> turnaroundTime(n);
    vector<int> waitingTime(n);

    cout << ""Enter arrival time and burst time for each process:"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << ""Arrival time for process "" << i + 1 << "": "";
        cin >> arrivalTime[i];
        cout << ""Burst time for process "" << i + 1 << "": "";
        cin >> burstTime[i];
    }

    // Calculate completion time, turnaround time, and waiting time
    completionTime[0] = burstTime[0] + arrivalTime[0];
    turnaroundTime[0] = completionTime[0] - arrivalTime[0];
    waitingTime[0] = turnaroundTime[0] - burstTime[0];

    for (int i = 1; i < n; ++i) {
        completionTime[i] = completionTime[i - 1] + burstTime[i];
        turnaroundTime[i] = completionTime[i] - arrivalTime[i];
        waitingTime[i] = turnaroundTime[i] - burstTime[i];
    }

    // Display results
    cout << ""Process\tArrival Time\tBurst Time\tCompletion Time\tTurnaround Time\tWaiting Time"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << i + 1 << ""\t"" << arrivalTime[i] << ""\t\t"" << burstTime[i] << ""\t\t"" << completionTime[i] << ""\t\t""
             << turnaroundTime[i] << ""\t\t"" << waitingTime[i] << endl;
    }

    // Calculate and display average turnaround time and average waiting time
    float avgTurnaroundTime = accumulate(turnaroundTime.begin(), turnaroundTime.end(), 0) / static_cast<float>(n);
    float avgWaitingTime = accumulate(waitingTime.begin(), waitingTime.end(), 0) / static_cast<float>(n);
    cout << ""Average Turnaround Time: "" << avgTurnaroundTime << endl;
    cout << ""Average Waiting Time: "" << avgWaitingTime << endl;
}

void executeSJFNonPreemptive() {
    // Implementation of Shortest Job First Non-Preemptive (SJF) scheduling algorithm
    cout << ""SJF Non-Preemptive Scheduling Algorithm"" << endl;
    int n;
    cout << ""Enter the number of processes: "";
    cin >> n;

    vector<int> arrivalTime(n);
    vector<int> burstTime(n);
    vector<int> completionTime(n);
    vector<int> turnaroundTime(n);
    vector<int> waitingTime(n);
    vector<bool> visited(n, false);

    cout << ""Enter arrival time and burst time for each process:"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << ""Arrival time for process "" << i + 1 << "": "";
        cin >> arrivalTime[i];
        cout << ""Burst time for process "" << i + 1 << "": "";
        cin >> burstTime[i];
    }

    int currentTime = 0;
    int completedProcesses = 0;
    while (completedProcesses < n) {
        int shortestJob = -1;
        int shortestBurst = INT_MAX;

        for (int i = 0; i < n; ++i) {
            if (!visited[i] && arrivalTime[i] <= currentTime && burstTime[i] < shortestBurst) {
                shortestBurst = burstTime[i];
                shortestJob = i;
            }
        }

        if (shortestJob == -1) {
            currentTime++;
        } else {
            completionTime[shortestJob] = currentTime + burstTime[shortestJob];
            turnaroundTime[shortestJob] = completionTime[shortestJob] - arrivalTime[shortestJob];
            waitingTime[shortestJob] = turnaroundTime[shortestJob] - burstTime[shortestJob];
            visited[shortestJob] = true;
            currentTime = completionTime[shortestJob];
            completedProcesses++;
        }
    }

    // Display results
    cout << ""Process\tArrival Time\tBurst Time\tCompletion Time\tTurnaround Time\tWaiting Time"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << i + 1 << ""\t"" << arrivalTime[i] << ""\t\t"" << burstTime[i] << ""\t\t"" << completionTime[i] << ""\t\t""
             << turnaroundTime[i] << ""\t\t"" << waitingTime[i] << endl;
    }

    // Calculate and display average turnaround time and average waiting time
    float avgTurnaroundTime = accumulate(turnaroundTime.begin(), turnaroundTime.end(), 0) / static_cast<float>(n);
    float avgWaitingTime = accumulate(waitingTime.begin(), waitingTime.end(), 0) / static_cast<float>(n);
    cout << ""Average Turnaround Time: "" << avgTurnaroundTime << endl;
    cout << ""Average Waiting Time: "" << avgWaitingTime << endl;
}

void executeSJFPreemptive() {
    // Implementation of Shortest Job First Preemptive (SJF) scheduling algorithm
    cout << ""SJF Preemptive Scheduling Algorithm"" << endl;
    int n;
    cout << ""Enter the number of processes: "";
    cin >> n;

    vector<int> arrivalTime(n);
    vector<int> burstTime(n);
    vector<int> remainingTime(n); // Remaining time for each process
    vector<int> completionTime(n);
    vector<int> turnaroundTime(n);
    vector<int> waitingTime(n);

    cout << ""Enter arrival time and burst time for each process:"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << ""Arrival time for process "" << i + 1 << "": "";
        cin >> arrivalTime[i];
        cout << ""Burst time for process "" << i + 1 << "": "";
        cin >> burstTime[i];
        remainingTime[i] = burstTime[i]; // Initialize remaining time
    }

    int currentTime = 0;
    int completedProcesses = 0;
    while (completedProcesses < n) {
        int shortestJob = -1;
        int shortestBurst = INT_MAX;

        for (int i = 0; i < n; ++i) {
            if (arrivalTime[i] <= currentTime && remainingTime[i] < shortestBurst && remainingTime[i] > 0) {
                shortestBurst = remainingTime[i];
                shortestJob = i;
            }
        }

        if (shortestJob == -1) {
            currentTime++;
        } else {
            remainingTime[shortestJob]--;
            if (remainingTime[shortestJob] == 0) {
                completionTime[shortestJob] = currentTime + 1;
                turnaroundTime[shortestJob] = completionTime[shortestJob] - arrivalTime[shortestJob];
                waitingTime[shortestJob] = turnaroundTime[shortestJob] - burstTime[shortestJob];
                completedProcesses++;
            }
            currentTime++;
        }
    }

    // Display results
    cout << ""Process\tArrival Time\tBurst Time\tCompletion Time\tTurnaround Time\tWaiting Time"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << i + 1 << ""\t"" << arrivalTime[i] << ""\t\t"" << burstTime[i] << ""\t\t"" << completionTime[i] << ""\t\t""
             << turnaroundTime[i] << ""\t\t"" << waitingTime[i] << endl;
    }

    // Calculate and display average turnaround time and average waiting time
    float avgTurnaroundTime = accumulate(turnaroundTime.begin(), turnaroundTime.end(), 0) / static_cast<float>(n);
    float avgWaitingTime = accumulate(waitingTime.begin(), waitingTime.end(), 0) / static_cast<float>(n);
    cout << ""Average Turnaround Time: "" << avgTurnaroundTime << endl;
    cout << ""Average Waiting Time: "" << avgWaitingTime << endl;
}

void executePriorityScheduling() {
    // Implementation of Priority Scheduling algorithm
    cout << ""Priority Scheduling Algorithm"" << endl;
    int n;
    cout << ""Enter the number of processes: "";
    cin >> n;

    vector<int> arrivalTime(n);
    vector<int> burstTime(n);
    vector<int> priority(n);
    vector<int> completionTime(n);
    vector<int> turnaroundTime(n);
    vector<int> waitingTime(n);
    vector<bool> visited(n, false);

    cout << ""Enter arrival time, burst time, and priority for each process:"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << ""Arrival time for process "" << i + 1 << "": "";
        cin >> arrivalTime[i];
        cout << ""Burst time for process "" << i + 1 << "": "";
        cin >> burstTime[i];
        cout << ""Priority for process "" << i + 1 << "": "";
        cin >> priority[i];
    }

    int currentTime = 0;
    int completedProcesses = 0;
    while (completedProcesses < n) {
        int highestPriorityJob = -1;
        int highestPriority = INT_MAX;

        for (int i = 0; i < n; ++i) {
            if (!visited[i] && arrivalTime[i] <= currentTime && priority[i] < highestPriority) {
                highestPriority = priority[i];
                highestPriorityJob = i;
            }
        }

        if (highestPriorityJob == -1) {
            currentTime++;
        } else {
            completionTime[highestPriorityJob] = currentTime + burstTime[highestPriorityJob];
            turnaroundTime[highestPriorityJob] = completionTime[highestPriorityJob] - arrivalTime[highestPriorityJob];
            waitingTime[highestPriorityJob] = turnaroundTime[highestPriorityJob] - burstTime[highestPriorityJob];
            visited[highestPriorityJob] = true;
            currentTime = completionTime[highestPriorityJob];
            completedProcesses++;
        }
    }

    // Display results
    cout << ""Process\tArrival Time\tBurst Time\tPriority\tCompletion Time\tTurnaround Time\tWaiting Time"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << i + 1 << ""\t"" << arrivalTime[i] << ""\t\t"" << burstTime[i] << ""\t\t"" << priority[i] << ""\t\t""
             << completionTime[i] << ""\t\t"" << turnaroundTime[i] << ""\t\t"" << waitingTime[i] << endl;
    }

    // Calculate and display average turnaround time and average waiting time
    float avgTurnaroundTime = accumulate(turnaroundTime.begin(), turnaroundTime.end(), 0) / static_cast<float>(n);
    float avgWaitingTime = accumulate(waitingTime.begin(), waitingTime.end(), 0) / static_cast<float>(n);
    cout << ""Average Turnaround Time: "" << avgTurnaroundTime << endl;
    cout << ""Average Waiting Time: "" << avgWaitingTime << endl;
}

void executeRoundRobin() {
    // Implementation of Round Robin scheduling algorithm
    cout << ""Round Robin Scheduling Algorithm"" << endl;
    
    int n;
    cout << ""Enter the number of processes: "";
    cin >> n;

    vector<int> burstTime(n);
    vector<int> completionTime(n);
    vector<int> turnaroundTime(n);
    vector<int> waitingTime(n);

    cout << ""Enter burst time for each process:"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << ""Burst time for process "" << i + 1 << "": "";
        cin >> burstTime[i];
    }

    int timeQuantum;
    cout << ""Enter the time quantum: "";
    cin >> timeQuantum;

    queue<int> processQueue; // Queue to store the processes
    vector<int> remainingTime(burstTime); // Remaining time for each process

    int currentTime = 0;
    int completedProcesses = 0;
    while (completedProcesses < n) {
        for (int i = 0; i < n; ++i) {
            if (remainingTime[i] > 0) {
                int executionTime = min(timeQuantum, remainingTime[i]);
                remainingTime[i] -= executionTime;
                currentTime += executionTime;

                if (remainingTime[i] == 0) {
                    completionTime[i] = currentTime;
                    turnaroundTime[i] = completionTime[i];
                    waitingTime[i] = turnaroundTime[i] - burstTime[i];
                    completedProcesses++;
                } else {
                    processQueue.push(i); // Push the process back into the queue
                }
            }
        }

        // Handle the processes in the queue when time quantum expires
        if (!processQueue.empty()) {
            int nextProcess = processQueue.front();
            processQueue.pop();
            processQueue.push(nextProcess); // Move the next process to the end of the queue
            currentTime++;
        }
    }

    // Display results
    cout << ""Process\tBurst Time\tCompletion Time\tTurnaround Time\tWaiting Time"" << endl;
    for (int i = 0; i < n; ++i) {
        cout << i + 1 << ""\t"" << burstTime[i] << ""\t\t"" << completionTime[i] << ""\t\t""
             << turnaroundTime[i] << ""\t\t"" << waitingTime[i] << endl;
    }

    // Calculate and display average turnaround time and average waiting time
    float avgTurnaroundTime = accumulate(turnaroundTime.begin(), turnaroundTime.end(), 0) / static_cast<float>(n);
    float avgWaitingTime = accumulate(waitingTime.begin(), waitingTime.end(), 0) / static_cast<float>(n);
    cout << ""Average Turnaround Time: "" << avgTurnaroundTime << endl;
    cout << ""Average Waiting Time: "" << avgWaitingTime << endl;
}

void displayMenu() {
    cout << ""Scheduling Algorithms Menu"" << endl;
    cout << ""1. First Come First Serve (FCFS)"" << endl;
    cout << ""2. Shortest Job First Non-Preemptive (SJF)"" << endl;
    cout << ""3. Shortest Job First Preemptive (SJF Preemptive)"" << endl;
    cout << ""4. Priority Scheduling"" << endl;
    cout << ""5. Round Robin Scheduling"" << endl;
    cout << ""6. Exit"" << endl;
}

void executeAlgorithm(int choice) {
    switch (choice) {
        case 1:
            executeFCFS();
            break;
        case 2:
            executeSJFNonPreemptive();
            break;
        case 3:
            executeSJFPreemptive();
            break;
        case 4:
            executePriorityScheduling();
            break;
        case 5:
            executeRoundRobin();
            break;
        case 6:
            cout << ""Exiting..."" << endl;
            exit(0);
        default:
            cout << ""Invalid choice!"" << endl;
    }
}

int main() {
    int choice;
    do {
        displayMenu();
        cout << ""Enter your choice: "";
        cin >> choice;
        executeAlgorithm(choice);
    } while (choice != 6);

    return 0;
}
"
Dpcdy9MM,Jeff Wilkinson Keystone Bank - Scam,bombaires,AIMMS,Monday 19th of February 2024 01:28:29 PM CDT,"<a href=""mailto:keystonebjeffwilkinson@gmail.com"">keystonebjeffwilkinson@gmail.com</a>
<a href=""mailto:k.ey.st.on.ebj.ef.f.wi.lk.i.n.s.on@gmail.com"">k.ey.st.on.ebj.ef.f.wi.lk.i.n.s.on@gmail.com</a>
<a href=""mailto:k.e.y.sto.ne.b.je.ffw.il.kin.s.o.n@gmail.com"">k.e.y.sto.ne.b.je.ffw.il.kin.s.o.n@gmail.com</a>
<a href=""mailto:keyst.one.b.jeffw.il.kinso.n@gmail.com"">keyst.one.b.jeffw.il.kinso.n@gmail.com</a>
<a href=""mailto:keyston.e.bj.e.f.fw.il.ki.ns.o.n@gmail.com"">keyston.e.bj.e.f.fw.il.ki.ns.o.n@gmail.com</a>
<a href=""mailto:keys.ton.eb.je.f.f.w.i.l.kins.on@gmail.com"">keys.ton.eb.je.f.f.w.i.l.kins.on@gmail.com</a>
<a href=""mailto:k.ey.s.tone.b.j.e.f.f.wi.l.kins.on@gmail.com"">k.ey.s.tone.b.j.e.f.f.wi.l.kins.on@gmail.com</a>
<a href=""mailto:k.e.yst.one.b.j.e.f.f.w.ilk.i.n.s.on@gmail.com"">k.e.yst.one.b.j.e.f.f.w.ilk.i.n.s.on@gmail.com</a>
<a href=""mailto:k.e.yston.e.bj.e.f.fwilkins.on@gmail.com"">k.e.yston.e.bj.e.f.fwilkins.on@gmail.com</a>
<a href=""mailto:keyst.o.n.e.b.je.f.f.w.ilkin.so.n@gmail.com"">keyst.o.n.e.b.je.f.f.w.ilkin.so.n@gmail.com</a>
<a href=""mailto:keys.tonebj.ef.fwi.lk.i.n.so.n@gmail.com"">keys.tonebj.ef.fwi.lk.i.n.so.n@gmail.com</a>
<a href=""mailto:ke.y.sto.ne.bj.e.f.fwil.k.ins.on@gmail.com"">ke.y.sto.ne.bj.e.f.fwil.k.ins.on@gmail.com</a>
<a href=""mailto:k.e.y.st.one.bjef.fwil.ki.ns.o.n@gmail.com"">k.e.y.st.one.bjef.fwil.ki.ns.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.t.on.eb.j.e.ffw.il.k.i.n.so.n@gmail.com"">k.ey.s.t.on.eb.j.e.ffw.il.k.i.n.so.n@gmail.com</a>
<a href=""mailto:k.ey.s.to.n.e.bj.ef.f.w.ilk.in.s.o.n@gmail.com"">k.ey.s.to.n.e.bj.ef.f.w.ilk.in.s.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.on.e.b.j.effwi.l.k.in.so.n@gmail.com"">ke.y.s.t.on.e.b.j.effwi.l.k.in.so.n@gmail.com</a>
<a href=""mailto:k.e.y.s.tone.b.j.e.f.f.w.il.ki.nso.n@gmail.com"">k.e.y.s.tone.b.j.e.f.f.w.il.ki.nso.n@gmail.com</a>
<a href=""mailto:k.e.ys.t.oneb.je.f.fwi.l.kins.o.n@gmail.com"">k.e.ys.t.oneb.je.f.fwi.l.kins.o.n@gmail.com</a>
<a href=""mailto:key.st.o.nebje.ffwi.l.k.i.n.son@gmail.com"">key.st.o.nebje.ffwi.l.k.i.n.son@gmail.com</a>
<a href=""mailto:ke.ys.t.o.n.e.b.jeffwil.ki.nso.n@gmail.com"">ke.ys.t.o.n.e.b.jeffwil.ki.nso.n@gmail.com</a>
<a href=""mailto:ke.y.s.to.n.e.b.j.e.f.f.w.il.ki.ns.on@gmail.com"">ke.y.s.to.n.e.b.j.e.f.f.w.il.ki.ns.on@gmail.com</a>
<a href=""mailto:k.eyst.one.bj.ef.fwilki.n.so.n@gmail.com"">k.eyst.one.bj.ef.fwilki.n.so.n@gmail.com</a>
<a href=""mailto:k.e.ys.t.o.n.ebj.eff.wil.k.in.s.on@gmail.com"">k.e.ys.t.o.n.ebj.eff.wil.k.in.s.on@gmail.com</a>
<a href=""mailto:k.e.yst.on.ebj.e.ffwi.l.kins.o.n@gmail.com"">k.e.yst.on.ebj.e.ffwi.l.kins.o.n@gmail.com</a>
<a href=""mailto:keyston.eb.j.eff.w.il.k.inson@gmail.com"">keyston.eb.j.eff.w.il.k.inson@gmail.com</a>
<a href=""mailto:k.ey.st.o.n.eb.j.e.f.f.wilki.nson@gmail.com"">k.ey.st.o.n.eb.j.e.f.f.wilki.nson@gmail.com</a>
<a href=""mailto:k.eyst.o.neb.j.ef.f.wi.lki.n.s.on@gmail.com"">k.eyst.o.neb.j.ef.f.wi.lki.n.s.on@gmail.com</a>
<a href=""mailto:keyst.o.n.eb.jeffw.il.ki.n.son@gmail.com"">keyst.o.n.eb.jeffw.il.ki.n.son@gmail.com</a>
<a href=""mailto:keys.t.o.n.ebj.e.f.f.w.i.l.ki.nson@gmail.com"">keys.t.o.n.ebj.e.f.f.w.i.l.ki.nson@gmail.com</a>
<a href=""mailto:ke.ys.ton.ebjeff.wi.lkins.o.n@gmail.com"">ke.ys.ton.ebjeff.wi.lkins.o.n@gmail.com</a>
<a href=""mailto:key.st.o.n.e.b.j.effwi.lkins.o.n@gmail.com"">key.st.o.n.e.b.j.effwi.lkins.o.n@gmail.com</a>
<a href=""mailto:key.sto.n.e.b.jef.f.wi.l.k.in.s.o.n@gmail.com"">key.sto.n.e.b.jef.f.wi.l.k.in.s.o.n@gmail.com</a>
<a href=""mailto:k.eys.t.o.ne.bj.eff.wi.l.k.in.son@gmail.com"">k.eys.t.o.ne.bj.eff.wi.l.k.in.son@gmail.com</a>
<a href=""mailto:k.e.ys.t.o.n.e.bje.ffwi.l.k.i.n.son@gmail.com"">k.e.ys.t.o.n.e.bje.ffwi.l.k.i.n.son@gmail.com</a>
<a href=""mailto:keyston.ebj.eff.wil.kin.s.on@gmail.com"">keyston.ebj.eff.wil.kin.s.on@gmail.com</a>
<a href=""mailto:ke.y.ston.ebjeff.w.i.l.kins.on@gmail.com"">ke.y.ston.ebjeff.w.i.l.kins.on@gmail.com</a>
<a href=""mailto:ke.ystonebj.e.f.fw.ilkins.on@gmail.com"">ke.ystonebj.e.f.fw.ilkins.on@gmail.com</a>
<a href=""mailto:ke.yston.eb.j.e.f.f.wi.lki.ns.o.n@gmail.com"">ke.yston.eb.j.e.f.f.wi.lki.ns.o.n@gmail.com</a>
<a href=""mailto:k.e.ys.t.one.bje.ffwi.l.k.ins.o.n@gmail.com"">k.e.ys.t.one.bje.ffwi.l.k.ins.o.n@gmail.com</a>
<a href=""mailto:keys.toneb.j.effwi.lki.nso.n@gmail.com"">keys.toneb.j.effwi.lki.nso.n@gmail.com</a>
<a href=""mailto:key.st.oneb.jef.f.w.il.k.i.n.s.o.n@gmail.com"">key.st.oneb.jef.f.w.il.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:keyst.on.ebje.f.f.w.i.l.kinson@gmail.com"">keyst.on.ebje.f.f.w.i.l.kinson@gmail.com</a>
<a href=""mailto:keysto.n.ebj.e.f.f.wil.k.i.nson@gmail.com"">keysto.n.ebj.e.f.f.wil.k.i.nson@gmail.com</a>
<a href=""mailto:k.e.ys.t.o.ne.b.j.e.f.f.w.il.kins.on@gmail.com"">k.e.ys.t.o.ne.b.j.e.f.f.w.il.kins.on@gmail.com</a>
<a href=""mailto:ke.y.s.ton.e.b.jef.f.wil.k.in.s.on@gmail.com"">ke.y.s.ton.e.b.jef.f.wil.k.in.s.on@gmail.com</a>
<a href=""mailto:k.e.y.s.t.on.eb.j.e.f.fw.il.ki.ns.o.n@gmail.com"">k.e.y.s.t.on.eb.j.e.f.fw.il.ki.ns.o.n@gmail.com</a>
<a href=""mailto:key.st.oneb.j.ef.f.wi.lk.i.ns.o.n@gmail.com"">key.st.oneb.j.ef.f.wi.lk.i.ns.o.n@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.n.e.b.j.e.f.f.wi.l.ki.n.son@gmail.com"">k.e.y.s.t.o.n.e.b.j.e.f.f.wi.l.ki.n.son@gmail.com</a>
<a href=""mailto:ke.yst.on.e.bjef.fwi.lk.i.n.s.o.n@gmail.com"">ke.yst.on.e.bjef.fwi.lk.i.n.s.o.n@gmail.com</a>
<a href=""mailto:ke.y.sto.n.e.b.j.e.ff.wil.kinson@gmail.com"">ke.y.sto.n.e.b.j.e.ff.wil.kinson@gmail.com</a>
<a href=""mailto:k.ey.s.t.o.n.e.b.je.f.fw.ilkinso.n@gmail.com"">k.ey.s.t.o.n.e.b.je.f.fw.ilkinso.n@gmail.com</a>
<a href=""mailto:ke.ysto.n.e.b.j.e.ffw.il.ki.n.son@gmail.com"">ke.ysto.n.e.b.j.e.ffw.il.ki.n.son@gmail.com</a>
<a href=""mailto:ke.y.s.tonebje.f.fw.i.l.k.i.n.s.o.n@gmail.com"">ke.y.s.tonebje.f.fw.i.l.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:key.st.one.b.jeff.wi.lk.inson@gmail.com"">key.st.one.b.jeff.wi.lk.inson@gmail.com</a>
<a href=""mailto:ke.ysto.n.e.b.j.ef.fw.i.lki.nson@gmail.com"">ke.ysto.n.e.b.j.ef.fw.i.lki.nson@gmail.com</a>
<a href=""mailto:k.eyston.e.bj.e.ffw.il.k.in.so.n@gmail.com"">k.eyston.e.bj.e.ffw.il.k.in.so.n@gmail.com</a>
<a href=""mailto:keys.tone.bjeffw.ilki.ns.on@gmail.com"">keys.tone.bjeffw.ilki.ns.on@gmail.com</a>
<a href=""mailto:k.ey.s.to.n.e.b.j.effwi.lkinso.n@gmail.com"">k.ey.s.to.n.e.b.j.effwi.lkinso.n@gmail.com</a>
<a href=""mailto:k.eysto.neb.je.ff.w.ilk.i.n.s.on@gmail.com"">k.eysto.neb.je.ff.w.ilk.i.n.s.on@gmail.com</a>
<a href=""mailto:ke.y.s.to.n.eb.je.f.f.w.ilk.in.s.o.n@gmail.com"">ke.y.s.to.n.eb.je.f.f.w.ilk.in.s.o.n@gmail.com</a>
<a href=""mailto:ke.ys.t.o.ne.bjef.fw.il.k.in.s.o.n@gmail.com"">ke.ys.t.o.ne.bjef.fw.il.k.in.s.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.t.on.ebje.f.f.w.i.lk.i.nso.n@gmail.com"">k.ey.s.t.on.ebje.f.f.w.i.lk.i.nso.n@gmail.com</a>
<a href=""mailto:k.e.y.sto.n.eb.j.eff.wil.kin.so.n@gmail.com"">k.e.y.sto.n.eb.j.eff.wil.kin.so.n@gmail.com</a>
<a href=""mailto:k.ey.stonebj.e.f.fwilk.inso.n@gmail.com"">k.ey.stonebj.e.f.fwilk.inso.n@gmail.com</a>
<a href=""mailto:ke.y.s.to.ne.bj.ef.f.wil.k.inson@gmail.com"">ke.y.s.to.ne.bj.ef.f.wil.k.inson@gmail.com</a>
<a href=""mailto:k.e.ysto.ne.b.je.ffwil.kin.s.on@gmail.com"">k.e.ysto.ne.b.je.ffwil.kin.s.on@gmail.com</a>
<a href=""mailto:ke.y.s.to.n.e.b.jef.fw.il.k.i.nso.n@gmail.com"">ke.y.s.to.n.e.b.jef.fw.il.k.i.nso.n@gmail.com</a>
<a href=""mailto:keys.t.oneb.j.ef.f.w.il.ki.nson@gmail.com"">keys.t.oneb.j.ef.f.w.il.ki.nson@gmail.com</a>
<a href=""mailto:k.e.ys.t.on.e.b.je.f.f.w.i.l.k.ins.o.n@gmail.com"">k.e.ys.t.on.e.b.je.f.f.w.i.l.k.ins.o.n@gmail.com</a>
<a href=""mailto:keys.t.oneb.je.ffwil.ki.ns.on@gmail.com"">keys.t.oneb.je.ffwil.ki.ns.on@gmail.com</a>
<a href=""mailto:ke.y.st.o.n.e.b.jeff.wi.lk.i.ns.o.n@gmail.com"">ke.y.st.o.n.e.b.jeff.wi.lk.i.ns.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.tone.b.j.e.ffw.ilk.i.n.so.n@gmail.com"">ke.y.s.tone.b.j.e.ffw.ilk.i.n.so.n@gmail.com</a>
<a href=""mailto:ke.yst.one.b.j.e.ffw.ilki.ns.o.n@gmail.com"">ke.yst.one.b.j.e.ffw.ilki.ns.o.n@gmail.com</a>
<a href=""mailto:ke.ys.t.o.n.ebj.e.ffwil.k.i.ns.on@gmail.com"">ke.ys.t.o.n.ebj.e.ffwil.k.i.ns.on@gmail.com</a>
<a href=""mailto:k.e.ystoneb.jeff.w.i.l.k.in.son@gmail.com"">k.e.ystoneb.jeff.w.i.l.k.in.son@gmail.com</a>
<a href=""mailto:k.eyst.on.e.b.jef.fwi.l.ki.n.son@gmail.com"">k.eyst.on.e.b.jef.fwi.l.ki.n.son@gmail.com</a>
<a href=""mailto:k.ey.st.on.e.bj.effwilkin.so.n@gmail.com"">k.ey.st.on.e.bj.effwilkin.so.n@gmail.com</a>
<a href=""mailto:k.ey.s.t.o.ne.bj.e.ff.w.ilk.i.ns.on@gmail.com"">k.ey.s.t.o.ne.bj.e.ff.w.ilk.i.ns.on@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.n.e.bje.ffw.ilkin.son@gmail.com"">k.e.y.s.t.o.n.e.bje.ffw.ilkin.son@gmail.com</a>
<a href=""mailto:ke.y.s.ton.ebjeffw.il.k.inson@gmail.com"">ke.y.s.ton.ebjeffw.il.k.inson@gmail.com</a>
<a href=""mailto:keyst.onebjef.f.wi.l.kinso.n@gmail.com"">keyst.onebjef.f.wi.l.kinso.n@gmail.com</a>
<a href=""mailto:k.ey.sto.ne.bje.ffwilk.i.nso.n@gmail.com"">k.ey.sto.ne.bje.ffwilk.i.nso.n@gmail.com</a>
<a href=""mailto:keys.t.o.ne.b.j.e.f.fwi.l.k.in.s.on@gmail.com"">keys.t.o.ne.b.j.e.f.fwi.l.k.in.s.on@gmail.com</a>
<a href=""mailto:k.eys.toneb.je.f.f.w.i.l.k.in.son@gmail.com"">k.eys.toneb.je.f.f.w.i.l.k.in.son@gmail.com</a>
<a href=""mailto:ke.ystonebj.ef.f.w.i.lkins.on@gmail.com"">ke.ystonebj.ef.f.w.i.lkins.on@gmail.com</a>
<a href=""mailto:k.eys.t.one.bj.ef.f.w.i.lk.in.son@gmail.com"">k.eys.t.one.bj.ef.f.w.i.lk.in.son@gmail.com</a>
<a href=""mailto:ke.y.st.on.e.bj.e.ff.w.il.k.i.ns.o.n@gmail.com"">ke.y.st.on.e.bj.e.ff.w.il.k.i.ns.o.n@gmail.com</a>
<a href=""mailto:k.eyst.o.n.ebj.e.ffw.i.l.k.ins.o.n@gmail.com"">k.eyst.o.n.ebj.e.ffw.i.l.k.ins.o.n@gmail.com</a>
<a href=""mailto:keyst.o.n.e.b.j.e.f.fwil.k.i.n.so.n@gmail.com"">keyst.o.n.e.b.j.e.f.fwil.k.i.n.so.n@gmail.com</a>
<a href=""mailto:keys.ton.e.b.j.e.f.f.wi.l.ki.n.so.n@gmail.com"">keys.ton.e.b.j.e.f.f.wi.l.ki.n.so.n@gmail.com</a>
<a href=""mailto:ke.y.st.on.e.b.je.f.fwilk.in.s.on@gmail.com"">ke.y.st.on.e.b.je.f.fwilk.in.s.on@gmail.com</a>
<a href=""mailto:k.eys.to.nebjef.fwilk.in.son@gmail.com"">k.eys.to.nebjef.fwilk.in.son@gmail.com</a>
<a href=""mailto:ke.yst.one.b.j.e.ff.w.i.l.k.in.son@gmail.com"">ke.yst.one.b.j.e.ff.w.i.l.k.in.son@gmail.com</a>
<a href=""mailto:ke.ys.t.o.nebjeff.wi.lkinson@gmail.com"">ke.ys.t.o.nebjeff.wi.lkinson@gmail.com</a>
<a href=""mailto:k.e.ys.t.o.neb.je.f.f.w.il.ki.ns.o.n@gmail.com"">k.e.ys.t.o.neb.je.f.f.w.il.ki.ns.o.n@gmail.com</a>
<a href=""mailto:k.ey.ston.ebj.ef.fw.i.lkins.o.n@gmail.com"">k.ey.ston.ebj.ef.fw.i.lkins.o.n@gmail.com</a>
<a href=""mailto:key.sto.neb.j.effwi.lkins.on@gmail.com"">key.sto.neb.j.effwi.lkins.on@gmail.com</a>
<a href=""mailto:k.ey.s.to.ne.bj.e.f.fwi.lkins.o.n@gmail.com"">k.ey.s.to.ne.bj.e.f.fwi.lkins.o.n@gmail.com</a>
<a href=""mailto:keys.tone.bj.e.f.fwi.lki.n.so.n@gmail.com"">keys.tone.bj.e.f.fwi.lki.n.so.n@gmail.com</a>
<a href=""mailto:k.ey.stonebj.e.ff.wi.lk.i.n.s.on@gmail.com"">k.ey.stonebj.e.ff.wi.lk.i.n.s.on@gmail.com</a>
<a href=""mailto:k.ey.s.tonebj.ef.f.w.ilkin.so.n@gmail.com"">k.ey.s.tonebj.ef.f.w.ilkin.so.n@gmail.com</a>
<a href=""mailto:k.e.yst.o.nebje.f.f.w.i.l.ki.ns.on@gmail.com"">k.e.yst.o.nebje.f.f.w.i.l.ki.ns.on@gmail.com</a>
<a href=""mailto:k.eyst.o.ne.bje.ffwilk.i.nson@gmail.com"">k.eyst.o.ne.bje.ffwilk.i.nson@gmail.com</a>
<a href=""mailto:k.ey.st.oneb.j.e.f.fwil.k.inson@gmail.com"">k.ey.st.oneb.j.e.f.fwil.k.inson@gmail.com</a>
<a href=""mailto:ke.ys.t.o.n.e.bj.eff.w.i.l.k.in.so.n@gmail.com"">ke.ys.t.o.n.e.bj.eff.w.i.l.k.in.so.n@gmail.com</a>
<a href=""mailto:k.ey.st.o.ne.b.je.ffw.il.k.ins.o.n@gmail.com"">k.ey.st.o.ne.b.je.ffw.il.k.ins.o.n@gmail.com</a>
<a href=""mailto:keys.tonebje.ffwilk.in.s.on@gmail.com"">keys.tonebje.ffwilk.in.s.on@gmail.com</a>
<a href=""mailto:ke.y.s.t.o.n.eb.je.ffw.il.k.ins.o.n@gmail.com"">ke.y.s.t.o.n.eb.je.ffw.il.k.ins.o.n@gmail.com</a>
<a href=""mailto:key.s.t.o.n.ebj.ef.f.wilk.ins.on@gmail.com"">key.s.t.o.n.ebj.ef.f.wilk.ins.on@gmail.com</a>
<a href=""mailto:k.e.y.s.t.o.n.e.b.je.ffw.i.lk.i.n.so.n@gmail.com"">k.e.y.s.t.o.n.e.b.je.ffw.i.lk.i.n.so.n@gmail.com</a>
<a href=""mailto:k.eys.tonebj.e.ff.w.i.lki.n.s.on@gmail.com"">k.eys.tonebj.e.ff.w.i.lki.n.s.on@gmail.com</a>
<a href=""mailto:ke.ys.t.one.b.j.e.ffw.i.lkinson@gmail.com"">ke.ys.t.one.b.j.e.ffw.i.lkinson@gmail.com</a>
<a href=""mailto:k.eyst.on.e.bj.effwilki.nso.n@gmail.com"">k.eyst.on.e.bj.effwilki.nso.n@gmail.com</a>
<a href=""mailto:k.ey.s.t.o.ne.bj.e.f.fwilk.i.n.s.on@gmail.com"">k.ey.s.t.o.ne.bj.e.f.fwilk.i.n.s.on@gmail.com</a>
<a href=""mailto:keys.to.ne.b.je.ff.w.i.lkinso.n@gmail.com"">keys.to.ne.b.je.ff.w.i.lkinso.n@gmail.com</a>
<a href=""mailto:k.eyst.o.neb.jeffwil.ki.n.s.o.n@gmail.com"">k.eyst.o.neb.jeffwil.ki.n.s.o.n@gmail.com</a>
<a href=""mailto:keys.t.o.neb.j.e.f.fw.i.lki.nson@gmail.com"">keys.t.o.neb.j.e.f.fw.i.lki.nson@gmail.com</a>
<a href=""mailto:ke.ys.ton.ebje.f.f.w.i.lki.nson@gmail.com"">ke.ys.ton.ebje.f.f.w.i.lki.nson@gmail.com</a>
<a href=""mailto:ke.ys.t.o.ne.bje.f.fw.i.l.kins.on@gmail.com"">ke.ys.t.o.ne.bje.f.fw.i.l.kins.on@gmail.com</a>
<a href=""mailto:k.ey.s.ton.ebje.f.fwi.l.ki.nso.n@gmail.com"">k.ey.s.ton.ebje.f.fwi.l.ki.nso.n@gmail.com</a>
<a href=""mailto:k.eys.to.ne.bj.e.f.f.wi.l.ki.n.so.n@gmail.com"">k.eys.to.ne.bj.e.f.f.wi.l.ki.n.so.n@gmail.com</a>
<a href=""mailto:ke.yston.eb.jeff.w.ilk.in.so.n@gmail.com"">ke.yston.eb.jeff.w.ilk.in.so.n@gmail.com</a>
<a href=""mailto:ke.y.s.ton.ebj.eff.w.ilk.inso.n@gmail.com"">ke.y.s.ton.ebj.eff.w.ilk.inso.n@gmail.com</a>
<a href=""mailto:ke.y.st.onebj.eff.w.ilkin.son@gmail.com"">ke.y.st.onebj.eff.w.ilkin.son@gmail.com</a>
<a href=""mailto:key.sto.n.ebjef.fw.ilkinson@gmail.com"">key.sto.n.ebjef.fw.ilkinson@gmail.com</a>
<a href=""mailto:key.stone.b.jeffw.ilkin.so.n@gmail.com"">key.stone.b.jeffw.ilkin.so.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.on.ebj.e.ff.wi.l.k.i.ns.on@gmail.com"">ke.y.s.t.on.ebj.e.ff.wi.l.k.i.ns.on@gmail.com</a>
<a href=""mailto:k.ey.ston.ebj.e.f.f.wil.kinson@gmail.com"">k.ey.ston.ebj.e.f.f.wil.kinson@gmail.com</a>
<a href=""mailto:keys.t.on.e.bj.e.f.fw.i.lki.ns.on@gmail.com"">keys.t.on.e.bj.e.f.fw.i.lki.ns.on@gmail.com</a>
<a href=""mailto:k.eyst.o.neb.jeff.wilk.i.n.son@gmail.com"">k.eyst.o.neb.jeff.wilk.i.n.son@gmail.com</a>
<a href=""mailto:k.ey.st.on.e.b.je.f.f.wilk.i.n.s.on@gmail.com"">k.ey.st.on.e.b.je.f.f.wilk.i.n.s.on@gmail.com</a>
<a href=""mailto:ke.ys.toneb.jef.fwil.kin.s.o.n@gmail.com"">ke.ys.toneb.jef.fwil.kin.s.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.one.bj.e.f.f.w.i.l.k.ins.o.n@gmail.com"">ke.y.s.t.one.bj.e.f.f.w.i.l.k.ins.o.n@gmail.com</a>
<a href=""mailto:key.s.ton.eb.j.e.f.fwi.lki.n.so.n@gmail.com"">key.s.ton.eb.j.e.f.fwi.lki.n.so.n@gmail.com</a>
<a href=""mailto:k.eys.t.o.n.e.bj.e.f.f.wilki.nso.n@gmail.com"">k.eys.t.o.n.e.bj.e.f.f.wilki.nso.n@gmail.com</a>
<a href=""mailto:k.ey.s.t.one.bj.e.f.f.w.i.l.k.i.n.s.o.n@gmail.com"">k.ey.s.t.one.bj.e.f.f.w.i.l.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.to.n.eb.j.effwi.lk.i.nso.n@gmail.com"">k.ey.s.to.n.eb.j.effwi.lk.i.nso.n@gmail.com</a>
<a href=""mailto:k.e.yst.on.eb.j.e.f.fw.i.l.kin.so.n@gmail.com"">k.e.yst.on.eb.j.e.f.fw.i.l.kin.so.n@gmail.com</a>
<a href=""mailto:k.ey.st.on.e.bj.e.f.fwi.lkin.so.n@gmail.com"">k.ey.st.on.e.bj.e.f.fwi.lkin.so.n@gmail.com</a>
<a href=""mailto:ke.ys.ton.e.b.jef.fw.i.lki.n.son@gmail.com"">ke.ys.ton.e.b.jef.fw.i.lki.n.son@gmail.com</a>
<a href=""mailto:key.stone.bjeff.w.i.lkin.s.o.n@gmail.com"">key.stone.bjeff.w.i.lkin.s.o.n@gmail.com</a>
<a href=""mailto:ke.ys.t.one.b.jeffw.i.l.k.ins.o.n@gmail.com"">ke.ys.t.one.b.jeffw.i.l.k.ins.o.n@gmail.com</a>
<a href=""mailto:k.e.ys.to.n.e.bjeffw.il.kin.son@gmail.com"">k.e.ys.to.n.e.bjeffw.il.kin.son@gmail.com</a>
<a href=""mailto:ke.y.sto.n.ebj.eff.wil.kins.o.n@gmail.com"">ke.y.sto.n.ebj.eff.wil.kins.o.n@gmail.com</a>
<a href=""mailto:keys.t.on.e.b.jeffwil.ki.n.s.o.n@gmail.com"">keys.t.on.e.b.jeffwil.ki.n.s.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.o.n.ebje.f.fwi.l.k.i.ns.on@gmail.com"">ke.y.s.t.o.n.ebje.f.fwi.l.k.i.ns.on@gmail.com</a>
<a href=""mailto:k.e.y.stone.b.j.e.f.fw.il.kins.on@gmail.com"">k.e.y.stone.b.j.e.f.fw.il.kins.on@gmail.com</a>
<a href=""mailto:key.s.t.on.ebj.ef.f.w.ilki.ns.on@gmail.com"">key.s.t.on.ebj.ef.f.w.ilki.ns.on@gmail.com</a>
<a href=""mailto:key.s.t.o.ne.bj.eff.w.il.k.i.n.s.on@gmail.com"">key.s.t.o.ne.bj.eff.w.il.k.i.n.s.on@gmail.com</a>
<a href=""mailto:keys.t.o.n.eb.je.ff.wi.l.kins.on@gmail.com"">keys.t.o.n.eb.je.ff.wi.l.kins.on@gmail.com</a>
<a href=""mailto:k.eysto.ne.b.j.e.ff.wil.kin.son@gmail.com"">k.eysto.ne.b.j.e.ff.wil.kin.son@gmail.com</a>
<a href=""mailto:k.e.ys.t.o.ne.bje.ff.w.il.k.i.n.s.o.n@gmail.com"">k.e.ys.t.o.ne.bje.ff.w.il.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:key.ston.e.b.j.ef.f.wi.lki.n.s.on@gmail.com"">key.ston.e.b.j.ef.f.wi.lki.n.s.on@gmail.com</a>
<a href=""mailto:keys.t.one.bj.e.ffw.i.l.k.i.n.so.n@gmail.com"">keys.t.one.bj.e.ffw.i.l.k.i.n.so.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.o.n.eb.j.e.f.f.wi.l.kin.son@gmail.com"">ke.y.s.t.o.n.eb.j.e.f.f.wi.l.kin.son@gmail.com</a>
<a href=""mailto:keysto.neb.j.e.f.fw.i.lk.i.ns.o.n@gmail.com"">keysto.neb.j.e.f.fw.i.lk.i.ns.o.n@gmail.com</a>
<a href=""mailto:keys.t.on.ebje.ff.w.il.k.ins.on@gmail.com"">keys.t.on.ebje.ff.w.il.k.ins.on@gmail.com</a>
<a href=""mailto:ke.y.s.to.n.ebj.ef.fw.il.k.ins.on@gmail.com"">ke.y.s.to.n.ebj.ef.fw.il.k.ins.on@gmail.com</a>
<a href=""mailto:k.ey.s.t.on.e.b.je.ff.w.i.l.k.ins.on@gmail.com"">k.ey.s.t.on.e.b.je.ff.w.i.l.k.ins.on@gmail.com</a>
<a href=""mailto:ke.ys.to.n.ebje.ff.w.i.l.ki.nso.n@gmail.com"">ke.ys.to.n.ebje.ff.w.i.l.ki.nso.n@gmail.com</a>
<a href=""mailto:k.ey.st.oneb.jef.fwi.l.ki.ns.o.n@gmail.com"">k.ey.st.oneb.jef.fwi.l.ki.ns.o.n@gmail.com</a>
<a href=""mailto:k.e.yston.e.bj.e.f.f.wil.kins.on@gmail.com"">k.e.yston.e.bj.e.f.f.wil.kins.on@gmail.com</a>
<a href=""mailto:keys.tonebj.e.ffwil.kin.s.o.n@gmail.com"">keys.tonebj.e.ffwil.kin.s.o.n@gmail.com</a>
<a href=""mailto:key.st.o.n.e.bj.ef.fw.i.lk.in.s.on@gmail.com"">key.st.o.n.e.bj.ef.fw.i.lk.in.s.on@gmail.com</a>
<a href=""mailto:k.e.y.s.t.one.b.j.ef.fwi.lk.in.s.o.n@gmail.com"">k.e.y.s.t.one.b.j.ef.fwi.lk.in.s.o.n@gmail.com</a>
<a href=""mailto:k.eysto.neb.je.ff.w.i.l.kin.s.o.n@gmail.com"">k.eysto.neb.je.ff.w.i.l.kin.s.o.n@gmail.com</a>
<a href=""mailto:k.e.yston.e.bjeffw.il.k.i.nson@gmail.com"">k.e.yston.e.bjeffw.il.k.i.nson@gmail.com</a>
<a href=""mailto:k.e.ys.to.n.e.bj.e.ffwilk.i.n.s.on@gmail.com"">k.e.ys.to.n.e.bj.e.ffwilk.i.n.s.on@gmail.com</a>
<a href=""mailto:k.e.yst.o.n.e.b.jef.fwi.lk.in.s.o.n@gmail.com"">k.e.yst.o.n.e.b.jef.fwi.lk.in.s.o.n@gmail.com</a>
<a href=""mailto:k.ey.s.t.oneb.je.ff.w.i.l.kin.s.o.n@gmail.com"">k.ey.s.t.oneb.je.ff.w.i.l.kin.s.o.n@gmail.com</a>
<a href=""mailto:ke.y.st.o.n.e.b.je.ffwi.lki.ns.on@gmail.com"">ke.y.st.o.n.e.b.je.ffwi.lki.ns.on@gmail.com</a>
<a href=""mailto:k.e.ys.t.o.ne.bjeff.wi.l.k.i.ns.o.n@gmail.com"">k.e.ys.t.o.ne.bjeff.wi.l.k.i.ns.o.n@gmail.com</a>
<a href=""mailto:k.ey.ston.eb.je.f.f.wilk.in.s.on@gmail.com"">k.ey.ston.eb.je.f.f.wilk.in.s.on@gmail.com</a>
<a href=""mailto:k.e.ys.t.on.eb.jeffw.i.lki.nso.n@gmail.com"">k.e.ys.t.on.eb.jeffw.i.lki.nso.n@gmail.com</a>
<a href=""mailto:ke.y.s.to.n.e.b.j.ef.fwi.l.ki.nso.n@gmail.com"">ke.y.s.to.n.e.b.j.ef.fwi.l.ki.nso.n@gmail.com</a>
<a href=""mailto:k.ey.s.t.on.eb.j.e.ff.wi.l.k.i.n.s.o.n@gmail.com"">k.ey.s.t.on.eb.j.e.ff.wi.l.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:k.eyst.o.nebj.effwi.lki.n.so.n@gmail.com"">k.eyst.o.nebj.effwi.lki.n.so.n@gmail.com</a>
<a href=""mailto:k.ey.s.tonebj.effwil.kinso.n@gmail.com"">k.ey.s.tonebj.effwil.kinso.n@gmail.com</a>
<a href=""mailto:k.ey.stone.bj.ef.f.wil.ki.nson@gmail.com"">k.ey.stone.bj.ef.f.wil.ki.nson@gmail.com</a>
<a href=""mailto:key.stone.b.jef.fw.ilk.i.nson@gmail.com"">key.stone.b.jef.fw.ilk.i.nson@gmail.com</a>
<a href=""mailto:k.e.y.s.to.n.e.bje.ff.wi.lk.i.nson@gmail.com"">k.e.y.s.to.n.e.bje.ff.wi.lk.i.nson@gmail.com</a>
<a href=""mailto:k.ey.s.ton.eb.j.eff.wilki.ns.o.n@gmail.com"">k.ey.s.ton.eb.j.eff.wilki.ns.o.n@gmail.com</a>
<a href=""mailto:keys.t.oneb.jeff.wi.l.k.i.n.s.on@gmail.com"">keys.t.oneb.jeff.wi.l.k.i.n.s.on@gmail.com</a>
<a href=""mailto:key.sto.neb.j.e.f.f.wi.lkins.o.n@gmail.com"">key.sto.neb.j.e.f.f.wi.lkins.o.n@gmail.com</a>
<a href=""mailto:ke.y.s.t.o.n.eb.j.eff.w.il.k.i.n.s.o.n@gmail.com"">ke.y.s.t.o.n.eb.j.eff.w.il.k.i.n.s.o.n@gmail.com</a>
<a href=""mailto:k.eysto.n.ebje.ff.w.i.l.k.i.nso.n@gmail.com"">k.eysto.n.ebje.ff.w.i.l.k.i.nso.n@gmail.com</a>
<a href=""mailto:k.e.y.s.tone.b.jef.f.wi.l.k.in.son@gmail.com"">k.e.y.s.tone.b.jef.f.wi.l.k.in.son@gmail.com</a>
<a href=""mailto:k.eys.tone.bjef.fwi.lki.n.son@gmail.com"">k.eys.tone.bjef.fwi.lki.n.son@gmail.com</a>
<a href=""mailto:k.e.yston.eb.je.f.fw.i.lkin.son@gmail.com"">k.e.yston.eb.je.f.fw.i.lkin.son@gmail.com</a>
<a href=""mailto:ke.y.s.to.n.e.bjef.fw.i.l.k.in.son@gmail.com"">ke.y.s.to.n.e.bjef.fw.i.l.k.in.son@gmail.com</a>
<a href=""mailto:key.st.on.eb.je.ffwi.l.k.in.s.on@gmail.com"">key.st.on.eb.je.ffwi.l.k.in.s.on@gmail.com</a>
<a href=""mailto:k.ey.sto.neb.je.f.fwi.l.ki.n.so.n@gmail.com"">k.ey.sto.neb.je.f.fwi.l.ki.n.so.n@gmail.com</a>
<a href=""mailto:k.eyst.onebj.e.f.f.wilk.i.nson@gmail.com"">k.eyst.onebj.e.f.f.wilk.i.nson@gmail.com</a>
<a href=""mailto:k.e.ys.to.ne.bj.e.ffw.i.lkin.s.o.n@gmail.com"">k.e.ys.to.ne.bj.e.ffw.i.lkin.s.o.n@gmail.com</a>
<a href=""mailto:k.e.y.ston.e.b.j.e.ffw.il.kin.son@gmail.com"">k.e.y.ston.e.b.j.e.ffw.il.kin.son@gmail.com</a>
<a href=""mailto:keys.to.ne.b.j.e.ffwilki.n.son@gmail.com"">keys.to.ne.b.j.e.ffwilki.n.son@gmail.com</a>
<a href=""mailto:k.eysto.ne.bjeff.wi.l.k.i.ns.on@gmail.com"">k.eysto.ne.bjeff.wi.l.k.i.ns.on@gmail.com</a>
<a href=""mailto:key.st.o.n.ebje.ffwi.lk.inso.n@gmail.com"">key.st.o.n.ebje.ffwi.lk.inso.n@gmail.com</a>
<a href=""mailto:k.e.yst.o.n.e.bj.e.f.f.w.i.lkinson@gmail.com"">k.e.yst.o.n.e.bj.e.f.f.w.i.lkinson@gmail.com</a>
<a href=""mailto:key.s.tone.b.j.e.ffwil.ki.nso.n@gmail.com"">key.s.tone.b.j.e.ffwil.ki.nso.n@gmail.com</a>
<a href=""mailto:k.ey.sto.n.ebj.ef.fwilkins.on@gmail.com"">k.ey.sto.n.ebj.ef.fwilkins.on@gmail.com</a>"
8UwXAvtt,Godot Intro Messages/Copyright Fade,metalx1000,Godot GLSL,Monday 19th of February 2024 01:24:49 PM CDT,"extends Control

var count = 0
var msgs = [
	""My Game"",
	""FBK Game Studios"",
	""This file is part of the My Game Projecy.
 Copyright (c) 2024 Kris Occhpinti.
 https://filmsbykris.com
 
 This program is free software: you can redistribute it and/or modify  
 it under the terms of the GNU General Public License as published by  
 the Free Software Foundation, version 3."",
 
 ""This program is distributed in the hope that it will be useful, but 
 WITHOUT ANY WARRANTY; without even the implied warranty of 
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 General Public License for more details.
 
 You should have received a copy of the GNU General Public License 
 along with this program. If not, see <http://www.gnu.org/licenses/>.""
	
]
# Called when the node enters the scene tree for the first time.
func _ready():
	$Label.text = msgs[count]


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if Input.is_action_just_pressed(""ui_accept""):
		$AnimationPlayer.seek(0)
		next_msg()
	pass


func next_msg():
	count += 1
	
	if count >= msgs.size():
		next_scene()
	else:
		$Label.text = msgs[count]
		
func next_scene():
	get_tree().change_scene_to_file(""res://titles screen.tscn"")
"
xKpEgtvK,"evanthe, code. //",wilderanima,CSS,Monday 19th of February 2024 12:51:45 PM CDT,"<head>

<!-------ICONS------->
<script src=""https://kit.fontawesome.com/91131b39b7.js"" crossorigin=""anonymous""></script>

<link rel=""stylesheet"" href=""https://cdn.linearicons.com/free/1.0.0/icon-font.min.css"">


<!-------MUSIC PLAYER BY GLENTHEMES------->
<link href=""https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css"" rel=""stylesheet"">

<script src=""//ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"" type=""text/javascript""></script>

<script src=""//glenthemes.github.io/-music-/glenplayer07.js"" type=""text/javascript""></script>

<link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">

<!-------TOOL TIPS------>

<script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"" type=""text/javascript""></script>

<script src=""https://static.tumblr.com/iuw14ew/VSQma1786/jquery.style-my-tooltips.js"" type=""text/javascript""></script>

<script src=""//pull.cappuccicons.com/cpf.js"" type=""text/javascript""></script>

<script type=""text/javascript""> (function($){ $(document).ready(function(){ $(""a[title]"").style_my_tooltips({ tip_follows_cursor:true, tip_delay_time:40, tip_fade_speed:200, attribute:""title"" }); }); })(jQuery); </script></head>

<style>
@import url('https://fonts.googleapis.com/css2?family=Great+Vibes&family=Mukta&family=Old+Standard+TT:ital,wght@0,400;0,700;1,400&family=Parisienne&family=Prata&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Be+Vietnam:ital,wght@0,100;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,300;1,400;1,500;1,600;1,700;1,800&display=swap');

@import url('https://fonts.googleapis.com/css2?family=Varela+Round&family=Karla&family=Libre+Franklin&family=Be+Vietnam+Pro&family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&family=Alata&family=Mitr:wght@200;300;400;500;600;700&display=swap');
@font-face {font-family: ""beaufort""; src: url('//glen-assets.github.io/fonts/Beaufort W01 Regular.ttf');} 

body {background-color: #000; background-size: 40px 40px; text-transform: lowercase; font-family: 'Be Vietnam', sans-serif; font-size: 11px; color: #909090; letter-spacing: 0.3px; text-align: justify;}

* {cursor: url(https://i.ibb.co/1M967Gm/cursor.png), auto;}
 
::-webkit-scrollbar { width: 0px;}
::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb { background: transparent;}
::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb { background: transparent;}
::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb { background: transparent;}
::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb { background: transparent;} 

h1 {position:relative; font-family: 'karla', cursive; font-size: 15px; margin: 0px; margin-top: 15px; opacity: 0.8; margin-bottom: 5; padding-bottom: 5px; border-bottom: 1px solid #2A2929; color: #525252; text-transform: uppercase;}

h2 {font-size: 8px; text-transform: uppercase; font-family: beaufort; letter-spacing: 1.5; margin-top: 0; color: #8A8A8A; font-weight: 900;}

p {margin-top: 0; margin-bottom: 5;}

.content {position: relative; top: 5; bottom: 0; left: 0; right: 0; margin: auto; background: ; width: 400; text-align: justify;}

.gallery {bottom: 0; left: 0; right: 0; margin: auto; margin-top: 20; position: ; background: ; width: 432; height: ; padding: 10; text-align: justify; background-color: ;}

.img-frame {float: left; margin: 7px 8px 8px; width: 200; height: 140px; outline: 1px solid #2A2929; outline-offset: 5px; text-align: center; transition: all 0.5s linear;}

.img-1 {height: 100%; width: 100%; background-image: url(https://i.imgur.com/CglV3tO.gif); background-position: center ; background-repeat: no-repeat; background-size: cover; transition: all 0.5s linear;}

.img-2 {height: 100%; width: 100%; background-image: url(https://i.imgur.com/hvdRYma.gif); background-position: center; background-repeat: no-repeat; background-size: cover; filter: grayscale(0%); transition: all 0.5s linear;}

.contact {margin: 0px 0px 0px; text-align: center; line-height:;}

.contact img {margin: 5; width: 55; height: 55; -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */ filter: grayscale(100%); outline: 1px solid #423737; outline-offset: 3px; border-radius: ; transition: all 500ms linear;}

.contact img:hover {-webkit-filter: grayscale(0%); /* Safari 6.0 - 9.0 */ filter: grayscale(0%); outline: 1px solid #7A7A7A;}

a {color: #FAFFDF; text-decoration: none; font-weight: bold; font-family: Josefin Sans; font-size: 10;}

a:hover {color: #d22042;}

#s-m-t-tooltip {font-weight: 600; max-width:250px; max-height:auto; line-height: 1.5; color:#FFFFFF; text-align: left; font-family: 'Josefin Sans', sans-serif; font-size: 10px; padding:5px; background: #000000; box-shadow: 0px 0px 5px #D9D4D4; border: 2px solid #000000; text-transform: none; border-radius:0px; margin-top:25px; z-index:9999999999; text-align: center; opacity: 0; text-shadow: none; -webkit-box-shadow: 0px 0px 2px 0px rgb(0 0 0 / 87%); -moz-box-shadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.274); box-shadow: 0px 0px 2px 0px rgb(0 0 0 / 7%); font-weight 800;}

b {font-family: 'Varela Round'; font-size: 9;}

i {color:630436;}

</style>

<center>

<div class=""gallery"">

<div class=""img-frame""><div class=""img-1""></div></div>
<div class=""img-frame""><div class=""img-2""></div></div> </div>

<div class=""content"">


<center>
<small>
<h1>EVANTHE ELETRA HELLEBORE</h1> 
<i style=""font-family: beaufort; font-size: 11.5px; "">

</i> 
<center>
<h2>The moon is my mother. She is not sweet like Mary.</h2>
</center><br>

<div style=""padding-left: 20; padding-right: 20; line-height: 1.4;""><p>

<i class=""fa-solid fa-gift"" style=""margin-right: 3px;font-size: 10;""></i> august 11th (18)

<i class=""fa-solid fa-droplet"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i> pureblood <i class=""fa-solid fa-circle-nodes"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i>Greek / Italian / British

<i class=""fa-solid fa-heart-crack"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i> <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=liam"">captivated</a> 

<p><i class=""fa-solid fa-wand-magic-sparkles"" style=""margin-right: 3px;font-size: 10;margin-bottom:5;""></i> 12¾"" yew, cyclops retina, unyielding </p>


</center>

<div style=""padding-left: 30; padding-right: 30; line-height: 1.4;"">

<b style=""font-size: 12px; ""> general</b>
<div style=""padding-left: 10; padding-right: 10; line-height: 1.4;"">
<p style=""margin-top: 5;""><i class=""fa-solid fa-graduation-cap"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i><b>alumnus</b> <i class=""fa-solid fa-caret-right"" style=""margin-right: 3px;""></i> hogwarts; <b><font color=""#630436"">7th year ravenclaw; prefect</font></b></p>
<p style=""""><i class=""fa-solid fa-trophy"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i><b>best subjects</b> <i class=""fa-solid fa-caret-right"" style=""margin-right: 3px;""></i> ancient runes / transfiguration / charms </p>


<p><i class=""fa-solid fa-paw"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i><b>patronus</b> <i class=""fa-solid fa-caret-right"" style=""margin-right: 3px;""></i> classified
<i class=""fa-solid fa-spider"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i><b>boggart</b> <i class=""fa-solid fa-caret-right"" style=""margin-right: 3px;""></i> classified</p>


<p style=""margin-bottom:;""><i class=""fa-brands fa-envira"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i><b>scent</b> <i class=""fa-solid fa-caret-right"" style=""margin-right: 3px;""></i> black dahlia, black licorice, and morning dew </p> 

<p style=""margin-bottom: 10;""><i class=""fa-solid fa-flask"" style=""margin-left: 3px;margin-right: 3px;font-size: 10;""></i><b>amortentia</b> <i class=""fa-solid fa-caret-right"" style=""margin-right: 3px;""></i> classified</p>


</div>

<b style=""font-size: 12px; ""> headcanons</b>

<div style=""padding-left: 10; padding-right: 10; line-height: 1.4;"">
<p style=""margin-top: 5;"">
<i class=""fa-solid fa-quote-left"" style=""margin-right: 3px;""></i>
</p>

<p style=""margin-top: 5;"">
<i class=""fa-solid fa-quote-left"" style=""margin-right: 3px;""></i>

</p>
</div>

<p style=""margin-top: 10;"">
 <b style=""font-size: 12px;""> connections </b><br>
</p>
 <div class=""contact"">
 <a target=""_blank"" href=""https://i.imgur.com/TUdwwVk.gif"" title=""Hermes. Familiar. Death's Head Hawk Moth."" >
 <img src=""https://i.imgur.com/TUdwwVk.gif"">
 </a>

 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=Kalypso"" title=""Kalypso. Younger Sister."" >
 <img src=""https://i.imgur.com/WILuMHN.gif"">
 </a>
 
 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=hellebore"" title=""Brontë. Younger Sister."" >
 <img src=""https://imgur.com/1SYgcVz.gif"">
 </a>

 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=hub"" title=""Evangeline. Aunt."" >
 <img src=""https://i.imgur.com/BEHVM4L.gif"">
 </a> 
 
 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=liam"" title=""Liam. Boyfriend."" >
 <img src=""https://i.imgur.com/gpD9nIH.gif"">
 </a>

 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=gelais"" title=""Enoch. Friend."" >
 <img src=""https://i.imgur.com/ZFxYW6c.gif"">
 </a> 

 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Name. Relation."" >
 <img src=""https://via.placeholder.com/60.gif/"">
 </a> 

 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Name. Relation."" >
 <img src=""https://via.placeholder.com/60.gif/"">
 </a> 

 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Name. Relation."" >
 <img src=""https://via.placeholder.com/60.gif/"">
 </a> 

 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Name. Relation."" >
 <img src=""https://via.placeholder.com/60.gif/"">
 </a> 
 

</div>

</div>


<br><br>
<center>
<b style=""font-size: 11px; border-top: 1px solid #2A2929; padding-left: 50;padding-right: 50;padding-top:5;"">out of character</b>
<br><br>
<i class=""fa-solid fa-caret-right"" style=""margin-right: 3px;""></i> open to connections <b><i>!</i></b>

<i class=""fa-solid fa-caret-right"" style=""margin-left: 3px;margin-right: 3px;""></i> face claim is <a target=""_blank"" href=""https://hqroleplaygifs.tumblr.com/troianbellisario/pll"">troian bellisario</a> <b><i>!</i></b>

<i class=""fa-solid fa-caret-right"" style=""margin-left: 3px;margin-right: 3px;""></i> code by <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=angelite"">angelite</a> <b><i>!</i></b>
<br> <br>
</small>
<!--
	MUSIC PLAYER #02 by glenthemes
	♬ glenthpvs.tumblr.com/player02
--->
	
<script src=""//cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js""></script>
<link href=""//fonts.googleapis.com/css?family=Readex+Pro"" rel=""stylesheet"">
<link href=""//glenthemes.github.io/-music-/glenplayer02.css"" rel=""stylesheet"">
<script src=""//glenthemes.github.io/-music-/glenplayer02.js""></script>
<style element=""glenplayer02"">
	:root {
	--MusicPlayer-Position:bottom left;
	--MusicPlayer-Edge-Offset:18px;
	
	--MusicPlayer-Buttons-Size:14px;
	--MusicPlayer-Buttons-Color:#FAFFDF;
	--MusicPlayer-Buttons-Fill:no;
	
	--MusicPlayer-Note-Size:11px;
	--MusicPlayer-Note-Color:#FAFFDF;
	
	--MusicPlayer-Spacing-1:7px;
	--MusicPlayer-Spacing-2:9px;
	
	--MusicPlayer-Text-Size:9px;
	--MusicPlayer-Text-Color:#FAFFDF;
	}
</style>

<div glenplayer02>
	<div controls></div>
	
	<i class=""aa-line-icons"" icon-name=""music-2""></i>
	
	<!-- SONG NAME HERE -->
	Darkside — NEONI 
	
 <!-- HOW TO CHANGE THE MUSIC -->
	<!-- linktr.ee/direct_file_links -->
	<audio src=""https://audio.jukehost.co.uk/D3GG06BaYi5WCGolwesRLO8WUn1wC8Am"" volume=""100%""></audio>
	
</div><!--don't delete this line-->
<!--end music player--> 
</div>

"
AQH3sgxr,"demian, code. //",wilderanima,CSS,Monday 19th of February 2024 12:50:26 PM CDT,"<body><html><head>
<script src=""//ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"" type=""f34f9d25ef4961a21b244453-text/javascript""></script>
<script src=""//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"" type=""f34f9d25ef4961a21b244453-text/javascript""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.6.5/dat.gui.min.js"" type=""f34f9d25ef4961a21b244453-text/javascript""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/prefixfree/1.0.7/prefixfree.min.js"" type=""f34f9d25ef4961a21b244453-text/javascript""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/d3/4.11.0/d3.min.js"" type=""f34f9d25ef4961a21b244453-text/javascript""></script>
<script type=""f34f9d25ef4961a21b244453-text/javascript"" src=""https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js""></script>
<script src=""https://roleplay.chat/jquery.tooltipster.js?v=8"" type=""f34f9d25ef4961a21b244453-text/javascript""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/TweenMax.min.js"" type=""f34f9d25ef4961a21b244453-text/javascript""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/three.js/87/three.js"" type=""f34f9d25ef4961a21b244453-text/javascript""></script>
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.min.css"">
<link href=""https://roleplay.chat/tooltipster.css"" rel=""stylesheet"" type=""text/css"">
<link href=""https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"" rel=""stylesheet"" integrity=""sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN"" crossorigin=""anonymous"">
<script defer type=""f34f9d25ef4961a21b244453-text/javascript"">
window.onload = function() {

};
</script>

<script type=""f34f9d25ef4961a21b244453-text/javascript"">
$(document).ready(function() {
// Tooltip only Text
$('.masterTooltip').hover(function(){
 // Hover over code
 var title = $(this).attr('title');
 $(this).data('tipText', title).removeAttr('title');
 $('<p class=""tooltip""></p>')
 .text(title)
 .appendTo('body')
 .fadeIn('slow');
}, function() {
 // Hover out code
 $(this).attr('title', $(this).data('tipText'));
 $('.tooltip').remove();
}).mousemove(function(e) {
 var mousex = e.pageX + 20; //Get X coordinates
 var mousey = e.pageY + 10; //Get Y coordinates
 $('.tooltip')
 .css({ top: mousey, left: mousex })
});
});
</script>

<style> 

@import url('https://fonts.googleapis.com/css?family=Economica|Roboto Condensed|Six Caps');

body { cursor: url(https://i.imgur.com/WIeMSiR.png), auto;background-color: #0c1619; background-image: url(""https://www.transparenttextures.com/patterns/brilliant.png"");}

::-webkit-scrollbar { width: 4px;}

/* Track */
::-webkit-scrollbar-track { background: #; }
 
/* Handle */
::-webkit-scrollbar-thumb { background: #; }

/* Handle on hover */
::-webkit-scrollbar-thumb:hover { background: #; }

/* The typing effect */
@keyframes typing { from { width: 0 } to { width: 100% } }

/* The typewriter cursor effect */
@keyframes blink-caret { from, to { border-color: transparent } 50% { border-color: } }

a {cursor: url(https://i.imgur.com/WIeMSiR.png), auto;}

@font-face{ src:url(https://dl.dropbox.com/s/f4rvkr4ybrkqryz/Geomancy%20-%20Extra%20Bold.otf); font-family:'geo';}

@font-face{ src:url(https://dl.dropbox.com/s/9ln5dag3xxe3du3/staravenue.ttf); font-family:'star';}

.mainbox {position: fixed; background-color: #; background-image: url(""""); width: 710px; height: 455px; border:0px solid; border-color: #fff; margin: auto; left: 100px; right: 0px; top: 250px; bottom: 50px; z-index:4; border-radius:0px; filter:drop-shadow(0px 0px 1px #000); }

.box1 {position: fixed; background-color: #000; opacity:1; background-image: url(""""); width: 170px; height: 304px; border:0px solid; border-color: #fff; margin: auto; left: 130px; right: 0px; top:-110px; bottom: -60px; z-index:4; border-radius:0px; filter:drop-shadow(0px 0px 1px #); }

.box2 {position: fixed; background-color: #000; opacity:1; background-image: url(""""); width: 170px; height: 304px; border:0px solid; border-color: #fff; margin: auto; left: 605px; right: 0px; top:-110px; bottom: -60px; z-index:4; border-radius:0px; filter:drop-shadow(0px 0px 1px #); }

.box3 {position: fixed; background-color: #000; opacity:1; background-image: url(""""); width: 90px; height: 392px; border:0px solid; border-color: #fff; margin: auto; left: 400px; right: 0px; top:-175px; bottom: -34px; z-index:4; border-radius:0px; filter:drop-shadow(0px 0px 1px #); }

.box4 {position: fixed; background-color: #000; opacity:1; background-image: url(""""); width: 170px; height: 304px; border:0px solid; border-color: #fff; margin: auto; left: -220px; right: 0px; top:-113px; bottom: 117px; z-index:4; border-radius:0px; filter:drop-shadow(0px 0px 1px #); } 
 
 .strike5 {position: fixed; background-color: #000; opacity:1; background-image: url(""""); width: 935px; height: 20px; border:0px solid; border-color: #fff; margin: auto; left: -161px; right: -3px; top:-53px; bottom: 797px; z-index:4; border-radius:0px; filter:drop-shadow(0px 0px 1px #); }

 .strike6 {position: fixed; background-color: #000; opacity:1; background-image: url(""""); width: 935px; height: 20px; border:0px solid; border-color: #fff; margin: auto; left: -161px; right: -3px; top:-53px; bottom:-335px; z-index:4; border-radius:0px; filter:drop-shadow(0px 0px 1px #); }

.mainestimg{background-image:url(https://i.imgur.com/awWODuS.jpg); background-repeat:no-repeat; width:316px; height:393px; background-size:100%; position:absolute; top:-38; left:-160; z-index:9;
filter:drop-shadow(0px 0px 2px #); border: 0px solid; border-color: #; opacity:0.9; filter: grayscale(15%);}

.mainimg{background-image:url(https://i.imgur.com/fc0hCOL.gif); background-repeat:no-repeat; width:170px; height:83px; background-size:100%; position:absolute; top:-38; left:605;
z-index:4; filter:drop-shadow(0px 0px 2px #); border: 0px solid; border-color: #; opacity:0.9; filter: grayscale(100%);} 

.mainimg2{background-image:url(https://i.imgur.com/XolTHIp.gif); background-repeat:no-repeat; width:170px; height:85px; background-size:100%; position:absolute; top:-40; left:335;
z-index:4; filter:drop-shadow(0px 0px 2px #); border: 0px solid; border-color: #; opacity:0.9; filter: grayscale(100%);}

.mainimg3{background-image:url(https://i.imgur.com/00oaYbY.gif); background-repeat:no-repeat; width:170px; height:85px; background-size:100%; position:absolute; top:270; left:160;
z-index:9; filter:drop-shadow(0px 0px 2px #); border: 0px solid; border-color: #; opacity:0.9; filter: grayscale(100%);}

@font-face{ src:url(https://dl.dropbox.com/s/vygy5und5fm5wte/The%20Star%20in%20the%20Midnight.ttf?dl=0); font-family:'namerz';}

@font-face{ src:url(https://dl.dropbox.com/s/gykqp15dno5lt4i/Holimount%20swash.otf?dl=0); font-family:'swash';}

@font-face{ src:url(https://dl.dropbox.com/s/5roct3qujcuaa43/APOLLO.otf?dl=0); font-family:'namer';}

@font-face{ src:url(https://dl.dropbox.com/s/br2skah67bjh2a9/MORVA.ttf); font-family:'new';} 

@font-face{ src:url(https://dl.dropbox.com/s/rdzvaqiof87izan/Congratulations_DEMO.ttf); font-family:'sign';}

.gryff{ letter-spacing: ; z-index: 6; position: fixed; left:-146px; bottom: 477px; font-family: 'new', cursive; font-size:100px; color: #29373A;text-shadow: 1px 1px 1px #000000; position: absolute; width:410px; filter:drop-shadow(0px 0px 1px #000000); }

.quote{ letter-spacing:-1 ; z-index: 5; position: fixed; left: 130px; bottom: 60px; font-family: 'namerz', cursive; font-size:57px; color: #414d50;text-shadow: 0px 0px 0px #; position: absolute; width:510px; filter:drop-shadow(0px 0px 3px #a7c7a7); }

.title{ letter-spacing:-1 ; z-index: 6; position: fixed; left: 190px; bottom: 474px; font-family: 'namerz', cursive; font-size:100px; color: #414d50;text-shadow: 2px 2px 2px #000000; position: absolute; width:600px; filter:drop-shadow(0px 0px 2px #545e61); }

.title2{ letter-spacing:-1 ; z-index: 5; position: fixed; left: 450px; bottom: 408px; font-family: 'namerz', cursive; font-size:60px; color: #414d50;text-shadow: 0px 0px 0px #000000; position: absolute; width:0px; filter:drop-shadow(0px 0px 1px #000); }

.swoosh{ letter-spacing: ; z-index: 5; position: fixed; left: 326px; bottom: 493px; font-family: 'swash', cursive; font-size:95px; color: #414d50;text-shadow: 0px 0px 0px #; position: absolute; width:410px; filter:drop-shadow(0px 0px 2px #a7c7a7); }

.stats{ letter-spacing: 0; z-index: 5; position: fixed; left: 357px; bottom: 461px; font-family: 'new', cursive; font-size:31px; color: #054727;text-shadow: 0px 0px 3px #; position: absolute; width:410px; filter:drop-shadow(0px 0px 2px #054727); }

.ooc{ letter-spacing: 0; z-index: 5; position: fixed; left: 553px; bottom: 463px; font-family: 'new', cursive; font-size:26px; color: #054727;text-shadow: 0px 0px 3px #; position: absolute; width:410px; filter:drop-shadow(0px 0px 2px #054727); }

.hc{ letter-spacing: 0; z-index: 5; position: fixed; left: 169px; bottom: 117px; font-family: 'new', cursive; font-size:31px; color: #054727;text-shadow: 0px 0px 3px #; position: absolute; width:410px; filter:drop-shadow(0px 0px 2px #054727); }

.conne{ letter-spacing: 0; z-index: 5; position: fixed; left: 358px; bottom: 117px; font-family: 'new', cursive; font-size:31px; color: #054727;text-shadow: 0px 0px 3px #; position: absolute; width:410px; filter:drop-shadow(0px 0px 2px #054727); }

.words {position: absolute; bottom: 0px; left: 6px; margin: auto; opacity:1; height: 298px; width: 155px; padding: 0px; text-align: justify; font-size: 12px; overflow: auto; text-ident: 10px; color: #fce8f7; font-family: economica; z-index:20}

.words2 {position: absolute; bottom: 0px; left: 6px; margin: auto; opacity:1; height: 298px; width: 155px; padding: 0px; text-align: justify; font-size: 12px; overflow: auto; text-ident: 10px; color: #fce8f7; font-family: economica; z-index:20}

p{ font-family: 'Economica'; font-size: 14px; letter-spacing: 0px; word-spacing: 0px; color: #e1e1e1; text-align: justify; line-height: 20px; margin: 0px 0px 0px 1px;}

b { letter-spacing: 0px; font-family: economica; color: #4e8079; font-weight: bold; font-size:14px; text-transform: uppercase; font-weight:; filter:drop-shadow(1px 1px 1px #27403d);}

.fr1{ width: 81px; height: 81px; margin-bottom: 5px; margin-top: 0px; margin-right: 0px; margin-left: 0px; border: px solid #000; border-radius: 00px; z-index:9; }

strong { font-family: economica; letter-spacing: 0px; color: #4b656c; font-weight: bold; font-size: 15px; text-transform: uppercase; font-weight: 100; }

.put{position: absolute; bottom: 0px; left:4px; margin: auto; opacity:1; height: 300px; width: 167px; padding: 0px; text-align: center; font-size: 1px; overflow: auto; text-indent: 0px; color: #bac2bf; font-family: Barlow Condensed; z-index:22;overflow:auto transition: all 0.9s ease-in-out; -webkit-transition: all 0.4s ease-in-out; -moz-transition: all 0.4s ease-in-out; -o-transition: all 0.4s ease-in-out; -ms-transition: all 0.4s ease-in-out;}

p.td {text-align: right; font-family:economica; margin-left: -10px; font-size: 12px; line-height: 13px; color: #fce8f7; }

td {text-align: left; line-height: 20px; }

.put:target{ opacity:1; z-index:11;transition: all 0.4s ease-in-out; -webkit-transition: all 0.4s ease-in-out; -moz-transition: all 0.4s ease-in-out; z-o-transition: all 0.4s ease-in-out; -ms-transition: all 0.4s ease-in-out;overflow:auto;}

.KAL{ position:fixed; bottom:10px; left:97%; width: 50px; height: 30px;}

a {font-family: economica; letter-spacing: 0.3px; color: #73878c; font-weight: bold; font-size: 13px; text-transform: ; text-decoration: none; transition:0.7s; font-weight: 100; cursor: url(https://i.imgur.com/WIeMSiR.png), auto;filter:drop-shadow(1px 1px 1px #000000);}

a:hover {color: #bdc6c8; transition: 0.7s; }

.newer {position: absolute; bottom:0px; left:2px; margin: auto; opacity:1; height: 388px; width: 90px; padding:0px; text-align: center; font-size: 13px; overflow: auto; text-ident:10px; z-index:20;overflow:auto transition: all 0.9s ease-in-out; -webkit-transition: all 0.4s ease-in-out; -moz-transition: all 0.4s ease-in-out; -o-transition: all 0.4s ease-in-out; -ms-transition: all 0.4s ease-in-out;}

.new{position: absolute; bottom: 5px; left: 5px; margin: auto; opacity:1; height: 200px; width: 27=65px; padding:10px; text-align: center; font-size: 13px; overflow: auto; text-ident: 10px; z-index:0;overflow:auto transition: all 0.9s ease-in-out; -webkit-transition: all 0.4s ease-in-out; -moz-transition: all 0.4s ease-in-out; -o-transition: all 0.4s ease-in-out; -ms-transition: all 0.4s ease-in-out;}

.new:target{ opacity:1; z-index:11;transition: all 0.4s ease-in-out; -webkit-transition: all 0.4s ease-in-out; -moz-transition: all 0.4s ease-in-out; -o-transition: all 0.4s ease-in-out; -ms-transition: all 0.2s ease-in-out;overflow:auto;}

@keyframes move{ from{ background-image:url(https://i.imgur.com/L3hOOvS.png); width:300px; height:207px; background-size:100%; position:absolute; top:-207px; left:145px; z-index:-1; filter:drop-shadow(0px 0px 1px #596be3);}
to{ background-image:url(https://i.imgur.com/CsCMJwh.png); background-repeat:no-repeat; width:800px; height:407px; background-size:100%; position:absolute; top:-407px; left:-100px; z-index:3; filter:drop-shadow(0px 0px 1px #596be3);} }

@-webkit-keyframes move{from{ background-image:url(https://i.imgur.com/L3hOOvS.png);; background-repeat:no-repeat; width:300px; background-size:100%; position:absolute; top:-207px; left:155px; z-index:-1; filter:drop-shadow(0px 0px 1px #596be3);}
to{ background-image:url(https://i.imgur.com/CsCMJwh.png); background-repeat:no-repeat; width:800px; height:407px; background-size:100%; position:absolute; z-index:3; filter:drop-shadow(0px 0px 1px #596be3);} }

@keyframes move{ from{opacity:0;} to{opacity:1;} }
@-webkit-keyframes move{ from{opacity:0;}to{opacity:1;}}

 #ds{ overflow:hidden;transition:0.7s; opacity:0.3 ; position:fixed; text-align:justify; bottom:0px; right:30px; height:60px; width:60px; padding:0px; background-image: url('https://i.imgur.com/rqQIJR3.png'); background-position:top center; background-attachment: absolute; -webkit-background-size: cover; -moz-background-size: cover; -o-background-size: cover; background-size: cover;}

#ds:hover { opacity:1 ; }

.music1 {position: fixed; width: 50px; height: 50px; overflow: hidden; margin: auto; bottom: -10px; left: 25px; z-index: 99;}

.music2 {height: 50px; width: 50px; margin-top: -27px; margin-left: -20px; opacity: 0; z-index: 99;}

</style> </head> <body>

<div class=""music1"">
<img src=""https://78.media.tumblr.com/tumblr_m7w2n46Pdl1r6o8v2.gif"">

<div class=""music2"">
<audio controls="""" loop=""""><source src=""https://audio.jukehost.co.uk/JGnMlAmZyuiLHoccGQBfkW1CrbDcpv2m""></audio>
</div></div>

<div class=""mainbox"">
 
<div class=""gryff"">SLYTHERIN</div>
<div class=""title"">Demian Kingsley.</div> 

<div class=""mainestimg""></div>
<div class=""mainimg""></div>
<div class=""mainimg2""></div>
<div class=""mainimg3""></div>

<div class=""strike""></div>
<div class=""strike2""></div>
<div class=""strike3""></div>
<div class=""strike4""></div>
<div class=""strike5""></div>
<div class=""strike6""></div>

<div class=""box1"">

<div class=""words"">

<b>Core Classes:</b> Charms, Potions, Transfiguration, Astronomy, Herbology, History of Magic, and Defense Against the Dark Arts. <br><br>
<b>Elective Classes:</b> Muggle Studies, Study of Ancient Runes, Divination, and Arithmancy. <br><br>
<b>Clubs:</b> Growgetters, Pageturners, Swimming, and Arts & Crafts.<br><br>

<strong>❝</strong> Second child and eldest son born to <a title=""Details."">Deacon</a> and <a title=""Details."">Clémence</a> Kingsley (née Garnier), currently thriving off of Juliette's smart investments. <br><br>

<strong>❝</strong> <b>Prefect</b> of House Slytherin, but does not take his duties very seriously. More important matters are often at the forefront of his thoughts. <br><br>

<strong>❝</strong> Founder of an underground dueling club known as <b>Sypher</b>. Its members consist of some of the best dueling students in Hogwarts. Those who are a part of this club understand there are no restrictions and no restraints, and not a word about the club is to be spoken above ground. Mere suspicion of a student is enough to warrant obliviation and becoming a permanent outcast from the group. <br><br>

<strong>❝</strong> As a result of the recent <a target=""_blank"" title=""August 19th, 2023."">attack</a> on Pureblooded wizards at the Reinhardt Gala, it has become known that Kingsley is unafraid to cast Unforgivable Curses to protect those deserving. Not an ounce of remorse flows through his veins. <br><br>

<strong>❝</strong> This is where your headcanons go. <b>bold</b> and <a href="""">Link</a> are like this. <br><br>

<strong>❝</strong> This is where your headcanons go. <b>bold</b> and <a href="""">Link</a> are like this. <br><br>

<strong>❝</strong> This is where your headcanons go. <b>bold</b> and <a href="""">Link</a> are like this. <br><br>

</div></div>

<div class=""box2"">
<div class=""words2"">

<strong>❝</strong> Code by <b>KAL</b>. Do not steal. <br><br>

<strong>❝</strong> <b>Demian</b> is an alternate profile for the <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=pottermore"">POTTERMORE</a> room only. Not interested in other settings. Do not ask. <br><br>

<strong>❝</strong> Do <strong>not</strong> spam my DMs. You do not own me. I do not owe you anything. <br><br>

<strong>❝</strong> Post length varies from snowball to multi-para. Mostly depends on muse and availability. Will often try to match. <br><br>

<strong>❝</strong> Demian is blunt and some things he says make him sound like an asshole. Remember that I am <b>not</b> my character, and he is not me. Do not twist this fact. <br><br>

<strong>❝</strong> Face Claim is <a target=""_blank"" href=""URL"">Luke Powell.</a> <br><br>

<strong>❝</strong> Voice Claim is <a target=""_blank"" href=""https://youtu.be/QZZEmwZyvdw"">Zagreus</a>. <br><br>

<strong>❝</strong> Be civil. Share the space. <br><br>

</div></div>

<div class=""box3"">

<div id=""03"" class=""newer"">

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=jules""><img src=""https://i.imgur.com/zWCKcvm.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Juliette. Sister.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=wild""><img src=""https://i.imgur.com/JtHzVxk.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Josie. Cousin.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=pure""><img src=""https://i.imgur.com/IhAktti.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Lavinia. Friend. Crush.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=brooke""><img src=""https://i.imgur.com/s7Ax159.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Brooke. Close friend. Ex-girlfriend.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=froth""><img src=""https://i.imgur.com/TXwlDOj.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Lucius. Friend.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=ben""><img src=""https://i.imgur.com/aQr8ycs.png"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Benjamin. Friend.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=avalee""><img src=""https://i.imgur.com/APGJ09k.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Avalee. Friend.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=ravena""><img src=""https://i.imgur.com/YDujBeo.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Ravena. Friend.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://i.imgur.com/4Bl9eEz.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Details.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://i.imgur.com/4Bl9eEz.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Details.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://i.imgur.com/4Bl9eEz.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Details.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://i.imgur.com/4Bl9eEz.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Details.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://i.imgur.com/4Bl9eEz.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Details.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://i.imgur.com/4Bl9eEz.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Details.""></a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://i.imgur.com/4Bl9eEz.gif"" style=""filter:grayscale(60%) brightness(50%); opacity:0.9"" class=""fr1"" title=""Details.""></a>

</div>

<div class=""box4""><div id=""01"" class=""put"">
 
<table border=""0"" cellspacing=""-10"">
 
<tr>
<td><b>Name</b></td>
<td>
<p class=""td"">Demian Benoît Kingsley</p>
</td>
</tr><br>
 
<tr>
<td><b>Alias</b></td>
<td>
<p class=""td"">Kingsley. <a target=""_blank"" title=""Juliette Exclusive. Meaning; My Little Monster."">Mon Petit Monstre.</a> Demon. Ian. <a target=""_blank"" title=""Juliette. Meaning; brother."">Frérot.</a> Phantom.</p>
</td>
</tr><br>

<tr>
<td><b>Witchagram</b></td>
<td>
<p class=""td""><a target=""_blank"" title=""Features various clips of Demian playing his guitar."">@kingsley</a></p>
</td>
</tr><br>

<tr>
<td><b>Birthdate</b></td>
<td>
<p class=""td"">August 23rd | 16</p>
</td>
</tr>

<tr>
<td><b>Birth Place</b></td>
<td>
<p class=""td"">Le Mans, Sarthe, France</p>
</td>
</tr><br>

<tr>
<td><b>Residence</b></td>
<td>
<p class=""td"">London, England</p>
</td>
</tr><br>

<tr>
<td><b>M. Status</b></td>
<td>
<p class=""td""><a target=""_blank"" href=""https://roleplay.chat/profile.php?user="">Single</a></p>
</td>
</tr>

<tr>
<td><b>Orientation</b></td>
<td>
<p class=""td"">Heterosexual</p>
</td>
</tr>

<tr>
<td><b>House</b></td>
<td>
<p class=""td"">Slytherin | 5th</p>
</td>
</tr>

<tr>
<td><b>Wand</b></td>
<td>
<p class=""td"">10"" Alder Wood, Rougarou Hair Core, Unyielding</p>
</td>
</tr>
 
<tr>
<td><b>Familiar</b></td>
<td>
<p class=""td""><a target=""_blank"" href=""https://i.imgur.com/TsRP6eA.jpg"" title=""An albino ferret with the temperament of a demon. 
Fiercely loyal to Demian alone, and will not hesitate to bite the hell out of anyone who gets too close."">Sinclair</a></p>
</td>
</tr>

<tr>
<td><b>Patronus</b></td>
<td>
<p class=""td""><a target=""_blank"" title=""Having a Wolf as your Patronus means you find comfort in community and consistency – two unusual comforts for the noble house of Slytherin. Usually, Slytherins are seen as very individualistic, but in your case, you love the idea of a Slytherin fraternity. You are very close to the members of your inner circle and could not imagine living well without them. Knowing how a certain day is going to go can also appeal to a love of control over your destiny, which Slytherins can also appreciate. Even the negative association wolves can have play into your house – you don’t fear your guardian. Slytherins have no qualms with being a little intimidating, particularly to their enemies. This guardian will be your mate, your friend, your companion, when things go bad, rushing to your aid when you call it, and it will defend you until the end."">Wolf</a></p>
</td>
</tr>

<tr>
<td><b>Animagus</b></td>
<td>
<p class=""td""><a target=""_blank"" href=""https://i.imgur.com/J7rIpsb.jpg"" title=""Tall, lean structure with a charcoal gray pelt and golden eyes."">Timber Wolf</a></p>
</td>
</tr>

<tr>
<td><b>Boggart</b></td>
<td>
<p class=""td"">???</p>
</td>
</tr>

<tr>
<td><b>Amortentia</b></td>
<td>
<p class=""td"">???</p>
</td>
</tr>

<tr>
<td><b>Aspiration</b></td>
<td>
<p class=""td"">---</p>
</td>
</tr>

<tr>
<td><b>Blood Status</b></td>
<td>
<p class=""td"">Pureblood</p>
</td>
</tr>

<tr>
<td><b>Nationality</b></td>
<td>
<p class=""td"">English, French</p>
</td>
</tr>

<tr>
<td><b>Hair Color</b></td>
<td>
<p class=""td"">Obsidian Black</p>
</td>
</tr> 
 
<tr>
<td><b>Eye Color</b></td>
<td>
<p class=""td"">Forest Green</p>
</td>
</tr>

<tr>
<td><b>Height</b></td>
<td>
<p class=""td"">6'3½"" | 1.91m</p></td>
</tr>

<tr>
<td><b>Weight</b></td>
<td>
<p class=""td"">186lbs | 84.3kg</p>
</td>
</tr>

<tr>
<td><b>Build</b></td>
<td>
<p class=""td""><a target=""_blank"" title=""Long arms, big hands."">Lean.</a> Ottermode.</p>
</td>
</tr>

<tr>
<td><b>Tattoo References</b></td>
<td>
<p class=""td""><a target=""_blank"" href=""https://i.imgur.com/SR5pEp8.mp4"">One.</a> <a target=""_blank"" href=""https://i.imgur.com/vaJZBqo.mp4"">Two.</a></p>
</td>
</tr>

<tr>
<td><b>Scent</b></td>
<td>
<p class=""td"">Juniper, Sage, Sandalwood</p>
</td>
</tr>

</table></div></div></div> 

<script src=""/cdn-cgi/scripts/7d0fa10a/cloudflare-static/rocket-loader.min.js"" data-cf-settings=""f34f9d25ef4961a21b244453-|49"" defer=""""></script></body>
</html></body></html>"
Pv881JHd,программа «Сотрудники‎»,plarmi,Python,Monday 19th of February 2024 12:37:37 PM CDT,"with open(r""Сотрудники.txt"", ""r"", encoding=""utf-8"") as file:
    text = file.read().splitlines()

database = {}
for i in text:
    temp = i.split()
    database["" "".join(temp[0:3])] = int(temp[3])

while True:
    choice = input(f""***********************\n""
                   f""show - вывести список сотрудников\n""
                   f""save - сохранить данные\n""
                   f""exit - выйти из программы\n""
                   f""add - добавить\n""
                   f""edit - изменить\n""
                   f""del - удалить\n""
                   f""surname - поиск по фамилии\n""
                   f""age - все сотрудники по указанному возрасту\n""
                   f""letter - все сотрудники, у которых фамилии начинаются на указанную букву\n""
                   f""Выберите действие: "")

    if choice == ""show"":
        print(database)

    elif choice == ""save"":
        with open(r""Сотрудники.txt"", ""w"", encoding=""utf-8"") as file:
            for i, j in database.items():
                file.writelines(f""{i} {j}\n"")
        print(""Изменения сохранены!"")

    elif choice == ""exit"":
        with open(r""Сотрудники.txt"", ""w"", encoding=""utf-8"") as file:
            for i, j in database.items():
                file.writelines(f""{i} {j}\n"")
            print(""Программа завершается. Изменения сохранены!"")
        break

    elif choice == ""add"":
        name = input(""Введите ФИО: "")
        age = int(input(""Введите возраст: ""))
        database[name] = age

    elif choice == ""edit"":
        name = input(""Введите текущее ФИО сотрудника: "")
        choice = input(""Что изменить? (name - ФИО, age - возраст): "")
        if choice == ""name"":
            new_name = input(""Введите новое ФИО сотрудника: "")
            database[new_name] = database.pop(name)
        elif choice == ""age"":
            new_age = int(input(""Введите новый возраст сотрудника: ""))
            database[name] = new_age

    elif choice == ""del"":
        name = input(""Введите ФИО сотрудника для удаления: "")
        del database[name]

    elif choice == ""surname"":
        name = input(""Введите фамилию сотрудника для поиска: "")

        for i, j in database.items():
            if name == i.split()[0]:
                print(f""{i} {j}"")

    elif choice == ""age"":
        age = int(input(""Введите возраст: ""))
        for i, j in database.items():
            if j == age:
                print(f""{i} {j}"", end=""\n"")

    elif choice == ""letter"":
        name = input(""Введите букву: "").upper()
        for i, j in database.items():
            if i.startswith(name):
                print(f""{i} {j}"", end=""\n"")

    else:
        print(""Такой команды нет!"")
"
en0aghzg,311_1902,Petro_zzz,C++,Monday 19th of February 2024 12:37:35 PM CDT,"#include <iostream>
#include <iomanip>


void prefix_vs_postfix() {
	
	int k = 5;
	std::cout << k << ""\n"";
	k++;
	std::cout << k << ""\n"";
	++k;
	std::cout << k << ""\n"";
	double y = 1.5;
	y++;
	std::cout << y << ""\n"";

	// ++k - сначала k увеличится на 1, а затем присвоится в n 
	int n = ++k;
	std::cout << ""k:"" << k << "" n:"" << n << ""\n"";
	k = 7;
	// ++k - сначала k присвоится в m, а затем увеличится на 1 
	int m = k++;
	std::cout << ""k:"" << k << "" m:"" << m << ""\n"";

	k = 7;
	std::cout << ""k++: "" << k++ << ""\n"";
	std::cout << ""k: "" << k << ""\n"";

	k = 7;
	std::cout << ""++k: "" << ++k << ""\n"";
	std::cout << ""k: "" << k << ""\n"";

	int a = 5;

	std::cout << ""a: "" << a << ""\n"";
	std::cout << ""a++ + (-a * ++a): "" << a++ + (-a * ++a) << ""\n"";
	std::cout << ""a: "" << a << ""\n"";
	
	a = 5;
	std::cout << ""a: "" << a << ""\n"";
	std::cout << ""++a + (-a * ++a): "" << ++a + (-a * ++a) << ""\n"";
	std::cout << ""a: "" << a << ""\n"";
}

int counter = 0;

long long factorial0(int n) {

	std::cout << ""Start factorial "" << counter << ""\n"";
	long long result = n;
	while (n > 2) {
		n--;
		result *= n;
	}
	counter++;
	return result;
}


long long factorial1(int n) {

	std::cout << ""Start factorial "" << counter << ""\n"";
	long long result = n;
	while (n > 2)		
		result *= --n;		
	
	counter++;
	return result;
}


void multy_tab() {

	int k = 0, n = 0;
	while (n <= 9) {
		k = 0;
		while (k <= 9) {
			std::cout << std::setw(2) << n * k++ << "" "";
		}
		std::cout << ""\n"";
		n++;
	}

}


int main() {
	//prefix_vs_postfix();
	//std::cout << !5 << std::endl;	
	/*std::cout << ""2! = "" << factorial0(2) << std::endl;
	std::cout << ""5! = "" << factorial1(5) << std::endl;
	std::cout << ""4! = "" << factorial0(4) << std::endl;
	std::cout << ""3! = "" << factorial0(3) << std::endl;
	std::cout << ""6! = "" << factorial1(6) << std::endl;
	*/
	multy_tab();


	 

	return 0;
}"
UQce3HNd,03. The Angry Cat,Nenogzar,Python,Monday 19th of February 2024 12:33:32 PM CDT,"def cheap_summing(side, entry_point):
    return sum([x for x in side if x < entry_point])

def expensive_summing(side, entry_point):
    return sum([x for x in side if x >= entry_point])

def main():
    price_rating = [int(x) for x in input().split("", "")]
    entry_point = int(input())
    type_of_items = input()

    left_side = price_rating[:entry_point]
    right_side = price_rating[entry_point + 1:]
    entry_point_value = price_rating[entry_point]

    if type_of_items == ""cheap"":
        if cheap_summing(left_side, entry_point_value) >= cheap_summing(right_side, entry_point_value):
            print(f""Left - {cheap_summing(left_side, entry_point_value)}"")
        else:
            print(f""Right - {cheap_summing(right_side, entry_point_value)}"")
    elif type_of_items == ""expensive"":
        if expensive_summing(left_side, entry_point_value) >= expensive_summing(right_side, entry_point_value):
            print(f""Left - {expensive_summing(left_side, entry_point_value)}"")
        else:
            print(f""Right - {expensive_summing(right_side, entry_point_value)}"")

if __name__ == ""__main__"":
    main()"
rRnANtC8,Untitled,Sreekar_0125,C++,Monday 19th of February 2024 12:20:58 PM CDT,"int fib(int n)
{
    int a, b, p, q;
    a = q = 1;
    b = p = 0;
    while (n > 0)
    {
        if (n % 2 == 0)
        {
            int qq = (q * q) % m;
            q = ((2 * p * q) % m + qq % m) % m;
            p = ((p * p) % m + qq % m) % m;
            n /= 2;
        }
        else
        {
            int aq = (a * q) % m;
            a = ((b * q) % m + aq % m + (a * p) % m) % m;
            b = ((b * p) % m + aq % m) % m;
            n -= 1;
        }
    }
    return b % m;
}"
JHBEkseM,MOD_k40_whisperer.py,j0h,Python,Monday 19th of February 2024 12:12:16 PM CDT,"#!/usr/bin/python3
""""""
    K40 Whisperer CLI Mod laser photobooth

    Copyright (C) <2017-2023>  <Scorch>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

""""""
version = '0.69'
title_text = ""K40 Whisperer V""+version

import sys
from math import *
from egv import egv
from nano_library import K40_CLASS
from dxf import DXF_CLASS
from svg_reader import SVG_READER
from svg_reader import SVG_TEXT_EXCEPTION
from svg_reader import SVG_PXPI_EXCEPTION
from g_code_library import G_Code_Rip
from interpolate import interpolate
from ecoords import ECoord
from convex_hull import hull2D
from embedded_images import K40_Whisperer_Images

import inkex
import simplestyle
import simpletransform
import cubicsuperpath
import cspsubdiv
import traceback
import struct

DEBUG = False

if DEBUG:
    import inspect
    
VERSION = sys.version_info[0]
LOAD_MSG = """"

if VERSION == 3:
    from tkinter import *
    from tkinter.filedialog import *
    import tkinter.messagebox
    MAXINT = sys.maxsize
    
else:
    from Tkinter import *
    from tkFileDialog import *
    import tkMessageBox
    MAXINT = sys.maxint

if VERSION < 3 and sys.version_info[1] < 6:
    def next(item):
        #return item.next()
        return item.__next__()
    
try:
    import psyco
    psyco.full()
    LOAD_MSG = LOAD_MSG+""\nPsyco Loaded\n""
except:
    pass

import math
from time import time
import os
import re
import binascii
import getopt
import operator
import webbrowser
from PIL import Image
from PIL import ImageOps
from PIL import ImageFilter

try:
    Image.warnings.simplefilter('ignore', Image.DecompressionBombWarning)
except:
    pass
try:
    from PIL import ImageTk
    from PIL import _imaging
except:
    pass #Don't worry everything will still work

try:
    Image.LANCZOS
except:
    Image.LANCZOS=Image.ANTIALIAS

PYCLIPPER=True
try:
    import pyclipper
except:
    print(""Unable to load Pyclipper library (Offset trace outline will not work without it)"")
    PYCLIPPER = False

try:
    os.chdir(os.path.dirname(__file__))
except:
    pass

QUIET = False
   
################################################################################
class Application(Frame):
    def __init__(self, master):
        self.trace_window = toplevel_dummy()
        Frame.__init__(self, master)
        self.w = 780
        self.h = 490
        frame = Frame(master, width= self.w, height=self.h)
        self.master = master
        self.x = -1
        self.y = -1
        self.createWidgets()
        self.micro = False
        

    def resetPath(self):
        self.RengData  = ECoord()
        self.VengData  = ECoord()
        self.VcutData  = ECoord()
        self.GcodeData = ECoord()
        self.SCALE = 1
        self.Design_bounds = (0,0,0,0)
        self.UI_image = None
        #if self.HomeUR.get():
        self.move_head_window_temporary([0.0,0.0])
        #else:
        #    self.move_head_window_temporary([0.0,0.0])
            
        self.pos_offset=[0.0,0.0]
        
    def createWidgets(self):
        self.initComplete = 0
        self.stop=[True]
        
        self.k40 = None
        self.run_time = 0
        
        self.master.bind(""<Configure>"", self.Master_Configure)
        self.master.bind('<Enter>', self.bindConfigure)
        self.master.bind('<F1>', self.KEY_F1) #About
        self.master.bind('<F2>', self.KEY_F2) #Advanced Config
        self.master.bind('<F3>', self.KEY_F3) #Raster settings
        self.master.bind('<F4>', self.KEY_F4) #rotary settings
        self.master.bind('<F5>', self.KEY_F5)
        self.master.bind('<F6>', self.KEY_F6) #advanced runtime settings
        self.master.bind('<Home>', self.Home)

        self.master.bind('<Control-R>', self.Raster_Eng)
        self.master.bind('<Control-V>', self.Vector_Eng)
        #self.master.bind('<Control-C>', self.Vector_Cut)
        self.master.bind('<Control-G>', self.Gcode_Cut)

        self.master.bind('<Control-Left>'  , self.Move_Left)
        self.master.bind('<Control-Right>' , self.Move_Right)
        self.master.bind('<Control-Up>'    , self.Move_Up)
        self.master.bind('<Control-Down>'  , self.Move_Down)
        
        self.master.bind('<Control-Home>'  , self.Move_UL)
        self.master.bind('<Control-Prior>' , self.Move_UR)
        self.master.bind('<Control-Next>'  , self.Move_LR)
        self.master.bind('<Control-End>'   , self.Move_LL)
        self.master.bind('<Control-Clear>' , self.Move_CC)

        self.master.bind('<Control-Key-4>' , self.Move_Left)
        self.master.bind('<Control-6>'     , self.Move_Right)
        self.master.bind('<Control-8>'     , self.Move_Up)
        self.master.bind('<Control-Key-2>' , self.Move_Down)
        
        self.master.bind('<Control-7>'     , self.Move_UL)
        self.master.bind('<Control-9>'     , self.Move_UR)
        self.master.bind('<Control-Key-3>' , self.Move_LR)
        self.master.bind('<Control-Key-1>' , self.Move_LL)
        self.master.bind('<Control-Key-5>' , self.Move_CC)

        #####

        self.master.bind('<Alt-Control-Left>' , self.Move_Arb_Left)
        self.master.bind('<Alt-Control-Right>', self.Move_Arb_Right)
        self.master.bind('<Alt-Control-Up>'   , self.Move_Arb_Up)
        self.master.bind('<Alt-Control-Down>' , self.Move_Arb_Down)

        self.master.bind('<Alt-Control-Key-4>', self.Move_Arb_Left)
        self.master.bind('<Alt-Control-6>'    , self.Move_Arb_Right)
        self.master.bind('<Alt-Control-8>'    , self.Move_Arb_Up)
        self.master.bind('<Alt-Control-Key-2>', self.Move_Arb_Down)


        self.master.bind('<Alt-Left>' , self.Move_Arb_Left)
        self.master.bind('<Alt-Right>', self.Move_Arb_Right)
        self.master.bind('<Alt-Up>'   , self.Move_Arb_Up)
        self.master.bind('<Alt-Down>' , self.Move_Arb_Down)

        self.master.bind('<Alt-Key-4>', self.Move_Arb_Left)
        self.master.bind('<Alt-6>'    , self.Move_Arb_Right)
        self.master.bind('<Alt-8>'    , self.Move_Arb_Up)
        self.master.bind('<Alt-Key-2>', self.Move_Arb_Down)

        #####
        self.master.bind('<Control-i>' , self.Initialize_Laser)
        self.master.bind('<Control-f>' , self.Unfreeze_Laser)
        self.master.bind('<Control-o>' , self.menu_File_Open_Design)
        self.master.bind('<Control-l>' , self.menu_Reload_Design)
        self.master.bind('<Control-h>' , self.Home)
        self.master.bind('<Control-u>' , self.Unlock)
        self.master.bind('<Escape>'    , self.Stop)
        self.master.bind('<Control-t>' , self.TRACE_Settings_Window)

        self.include_Reng = BooleanVar()
        self.include_Rpth = BooleanVar()
        self.include_Veng = BooleanVar()
        self.include_Vcut = BooleanVar()
        self.include_Gcde = BooleanVar()
        self.include_Time = BooleanVar()

        self.advanced = BooleanVar()
        
        self.halftone     = BooleanVar()
        self.mirror       = BooleanVar()
        self.rotate       = BooleanVar()
        self.negate       = BooleanVar()
        self.inputCSYS    = BooleanVar()
        self.HomeUR       = BooleanVar()
        self.engraveUP    = BooleanVar()
        self.init_home    = BooleanVar()
        self.post_home    = BooleanVar()
        self.post_beep    = BooleanVar()
        self.post_disp    = BooleanVar()
        self.post_exec    = BooleanVar()
        
        self.pre_pr_crc   = BooleanVar()
        self.inside_first = BooleanVar()
        self.rotary       = BooleanVar()
        self.reduced_mem  = BooleanVar()
        self.wait         = BooleanVar()
        

        self.ht_size    = StringVar()
        self.Reng_feed  = StringVar()
        self.Veng_feed  = StringVar()
        self.Vcut_feed  = StringVar()

        self.Reng_passes = StringVar()
        self.Veng_passes = StringVar()
        self.Vcut_passes = StringVar()
        self.Gcde_passes = StringVar()
        
        
        self.board_name = StringVar()
        self.units      = StringVar()
        self.jog_step   = StringVar()
        self.rast_step  = StringVar()
        self.funits     = StringVar()
        

        self.bezier_M1     = StringVar()
        self.bezier_M2     = StringVar()
        self.bezier_weight = StringVar()

##        self.unsharp_flag = BooleanVar()
##        self.unsharp_r    = StringVar()
##        self.unsharp_p    = StringVar()
##        self.unsharp_t    = StringVar()
##        self.unsharp_flag.set(False)
##        self.unsharp_r.set(""40"")
##        self.unsharp_p.set(""350"")
##        self.unsharp_t.set(""3"")

        self.LaserXsize = StringVar()
        self.LaserYsize = StringVar()

        self.LaserXscale = StringVar()
        self.LaserYscale = StringVar()
        self.LaserRscale = StringVar()

        self.rapid_feed = StringVar()

        self.gotoX = StringVar()
        self.gotoY = StringVar()

        self.n_egv_passes = StringVar()

        self.inkscape_path = StringVar()
        self.batch_path    = StringVar()
        self.ink_timeout   = StringVar()
        
        self.t_timeout  = StringVar()
        self.n_timeouts  = StringVar()
        
        self.Reng_time = StringVar()
        self.Veng_time = StringVar()
        self.Vcut_time = StringVar()
        self.Gcde_time = StringVar()

        self.comb_engrave = BooleanVar()
        self.comb_vector  = BooleanVar()
        self.zoom2image   = BooleanVar()

        self.trace_w_laser  = BooleanVar()
        self.trace_gap      = StringVar()
        self.trace_speed    = StringVar()
        
        ###########################################################################
        #                         INITILIZE VARIABLES                             #
        #    if you want to change a default setting this is the place to do it   #
        ###########################################################################
        self.include_Reng.set(1)
        self.include_Rpth.set(0)
        self.include_Veng.set(1)
        self.include_Vcut.set(1)
        self.include_Gcde.set(1)
        self.include_Time.set(0)
        self.advanced.set(0)
        
        self.halftone.set(1)
        self.mirror.set(0)
        self.rotate.set(0)
        self.negate.set(0)
        self.inputCSYS.set(0)
        self.HomeUR.set(0)
        self.engraveUP.set(0)
        self.init_home.set(1)
        self.post_home.set(0)
        self.post_beep.set(0)
        self.post_disp.set(0)
        self.post_exec.set(0)
        
        self.pre_pr_crc.set(1)
        self.inside_first.set(1)
        self.rotary.set(0)
        self.reduced_mem.set(0)
        self.wait.set(1)
        
        self.ht_size.set(500)

        self.Reng_feed.set(""100"")
        self.Veng_feed.set(""20"")
        self.Vcut_feed.set(""10"")
        self.Reng_passes.set(""1"")
        self.Veng_passes.set(""1"")
        self.Vcut_passes.set(""1"")
        self.Gcde_passes.set(""1"")
        
        
        self.jog_step.set(""10.0"")
        self.rast_step.set(""0.002"")
        
        self.bezier_weight.set(""3.5"")
        self.bezier_M1.set(""2.5"")
        self.bezier_M2.set(""0.50"")

        self.bezier_weight_default = float(self.bezier_weight.get())
        self.bezier_M1_default     = float(self.bezier_M1.get())
        self.bezier_M2_default     = float(self.bezier_M2.get())
        
                                        
        self.board_name.set(""LASER-M2"") # Options are
                                        #    ""LASER-M2"",
                                        #    ""LASER-M1"",
                                        #    ""LASER-M"",
                                        #    ""LASER-B2"",
                                        #    ""LASER-B1"",
                                        #    ""LASER-B"",
                                        #    ""LASER-A""


        self.units.set(""in"")            # Options are ""in"" and ""mm""

        self.ink_timeout.set(""3"")
        self.t_timeout.set(""200"")
        self.n_timeouts.set(""30"")

        self.HOME_DIR    = os.path.expanduser(""~/photoBooth"")
        
        if not os.path.isdir(self.HOME_DIR):
            self.HOME_DIR = """"

        self.DESIGN_FILE = (self.HOME_DIR+""/None"")
        self.EGV_FILE    = None
        
        self.aspect_ratio =  0
        self.segID   = []
        
        self.LaserXsize.set(""325"")
        self.LaserYsize.set(""220"")
        
        self.LaserXscale.set(""1.000"")
        self.LaserYscale.set(""1.000"")
        self.LaserRscale.set(""1.000"")

        self.rapid_feed.set(""0.0"")

        self.gotoX.set(""0.0"")
        self.gotoY.set(""0.0"")

        self.n_egv_passes.set(""1"")

        self.comb_engrave.set(0)
        self.comb_vector.set(0)
        self.zoom2image.set(0)


        self.trace_w_laser.set(0)
        self.trace_gap.set(0)
        self.trace_speed.set(50)
        
        self.laserX    = 0.0
        self.laserY    = 0.0
        self.PlotScale = 1.0
        self.GUI_Disabled = False

        # PAN and ZOOM STUFF
        self.panx = 0
        self.panx = 0
        self.lastx = 0
        self.lasty = 0
        self.move_start_x = 0
        self.move_start_y = 0

        
        self.RengData  = ECoord()
        self.VengData  = ECoord()
        self.VcutData  = ECoord()
        self.GcodeData = ECoord()
        self.SCALE = 1
        self.Design_bounds = (0,0,0,0)
        self.UI_image = None
        self.pos_offset=[0.0,0.0]
        self.inkscape_warning = False
        
        # Derived variables
        if self.units.get() == 'in':
            self.funits.set('in/min')
            self.units_scale = 1.0
        else:
            self.units.set('mm')
            self.funits.set('mm/s')
            self.units_scale = 25.4
        
        self.statusMessage = StringVar()
        self.statusMessage.set(""Welcome to K40 Whisperer"")
        
        
        self.Reng_time.set(""0"")
        self.Veng_time.set(""0"")
        self.Vcut_time.set(""0"")
        self.Gcde_time.set(""0"")

        self.min_vector_speed = 1.1 #in/min
        self.min_raster_speed = 12  #in/min
        
        ##########################################################################
        ###                     END INITILIZING VARIABLES                      ###
        ##########################################################################

        # make a Status Bar
        self.statusbar = Label(self.master, textvariable=self.statusMessage, \
                                   bd=1, relief=SUNKEN , height=1)
        self.statusbar.pack(anchor=SW, fill=X, side=BOTTOM)
        

        # Canvas
        lbframe = Frame( self.master )
        self.PreviewCanvas_frame = lbframe
        self.PreviewCanvas = Canvas(lbframe, width=self.w-(220+20), height=self.h-200, background=""grey75"")
        self.PreviewCanvas.pack(side=LEFT, fill=BOTH, expand=1)
        self.PreviewCanvas_frame.place(x=230, y=10)

        self.PreviewCanvas.tag_bind('LaserTag',""<1>""              , self.mousePanStart)
        self.PreviewCanvas.tag_bind('LaserTag',""<B1-Motion>""      , self.mousePan)
        self.PreviewCanvas.tag_bind('LaserTag',""<ButtonRelease-1>"", self.mousePanStop)

        self.PreviewCanvas.tag_bind('LaserDot',""<3>""              , self.right_mousePanStart)
        self.PreviewCanvas.tag_bind('LaserDot',""<B3-Motion>""      , self.right_mousePan)
        self.PreviewCanvas.tag_bind('LaserDot',""<ButtonRelease-3>"", self.right_mousePanStop)

        # Left Column #
        self.separator1 = Frame(self.master, height=2, bd=1, relief=SUNKEN)
        self.separator2 = Frame(self.master, height=2, bd=1, relief=SUNKEN)
        self.separator3 = Frame(self.master, height=2, bd=1, relief=SUNKEN)
        self.separator4 = Frame(self.master, height=2, bd=1, relief=SUNKEN)
        
        self.Label_Reng_feed_u = Label(self.master,textvariable=self.funits, anchor=W)
        self.Entry_Reng_feed   = Entry(self.master,width=""15"")
        self.Entry_Reng_feed.configure(textvariable=self.Reng_feed,justify='center',fg=""black"")
        self.Reng_feed.trace_variable(""w"", self.Entry_Reng_feed_Callback)
        self.NormalColor =  self.Entry_Reng_feed.cget('bg')

        self.Label_Veng_feed_u = Label(self.master,textvariable=self.funits, anchor=W)
        self.Entry_Veng_feed   = Entry(self.master,width=""15"")
        self.Entry_Veng_feed.configure(textvariable=self.Veng_feed,justify='center',fg=""blue"")
        self.Veng_feed.trace_variable(""w"", self.Entry_Veng_feed_Callback)
        self.NormalColor =  self.Entry_Veng_feed.cget('bg')

        self.Label_Vcut_feed_u = Label(self.master,textvariable=self.funits, anchor=W)
        self.Entry_Vcut_feed   = Entry(self.master,width=""15"")
        self.Entry_Vcut_feed.configure(textvariable=self.Vcut_feed,justify='center',fg=""red"")
        self.Vcut_feed.trace_variable(""w"", self.Entry_Vcut_feed_Callback)
        self.NormalColor =  self.Entry_Vcut_feed.cget('bg')

        # Buttons
        self.Reng_Button  = Button(self.master,text=""Raster Engrave"", command=self.Raster_Eng)
        self.Veng_Button  = Button(self.master,text=""Vector Engrave"", command=self.Vector_Eng)
        self.Vcut_Button  = Button(self.master,text=""Vector Cut""    , command=self.Vector_Cut)
        self.Grun_Button  = Button(self.master,text=""Run G-Code""    , command=self.Gcode_Cut)


        self.Reng_Veng_Button      = Button(self.master,text=""Raster and\nVector Engrave"", command=self.Raster_Vector_Eng)
        self.Veng_Vcut_Button      = Button(self.master,text=""Vector Engrave\nand Cut"", command=self.Vector_Eng_Cut)
        self.Reng_Veng_Vcut_Button = Button(self.master,text=""Raster Engrave\nVector Engrave\nand\nVector Cut"", command=self.Raster_Vector_Cut)
        
        self.Label_Position_Control = Label(self.master,text=""Position Controls:"", anchor=W)
        
        self.Initialize_Button = Button(self.master,text=""Initialize Laser Cutter"", command=self.Initialize_Laser)

        self.Open_Button       = Button(self.master,text=""Open\nDesign File"",   command=self.menu_File_Open_Design)
        self.Reload_Button     = Button(self.master,text=""Reload\nDesign File"", command=self.menu_Reload_Design)
        
        self.Home_Button       = Button(self.master,text=""Home"",            command=self.Home)
        self.UnLock_Button     = Button(self.master,text=""Unlock Rail"",     command=self.Unlock)
        self.Stop_Button       = Button(self.master,text=""Pause/Stop"",      command=self.Stop)

        try:            
            self.left_image  = PhotoImage(data=K40_Whisperer_Images.left_B64,  format='gif')
            self.right_image = PhotoImage(data=K40_Whisperer_Images.right_B64, format='gif')
            self.up_image    = PhotoImage(data=K40_Whisperer_Images.up_B64,    format='gif')
            self.down_image  = PhotoImage(data=K40_Whisperer_Images.down_B64,  format='gif')
            
            self.Right_Button   = Button(self.master,image=self.right_image, command=self.Move_Right)
            self.Left_Button    = Button(self.master,image=self.left_image,  command=self.Move_Left)
            self.Up_Button      = Button(self.master,image=self.up_image,    command=self.Move_Up)
            self.Down_Button    = Button(self.master,image=self.down_image,  command=self.Move_Down)

            self.UL_image  = PhotoImage(data=K40_Whisperer_Images.UL_B64, format='gif')
            self.UR_image  = PhotoImage(data=K40_Whisperer_Images.UR_B64, format='gif')
            self.LR_image  = PhotoImage(data=K40_Whisperer_Images.LR_B64, format='gif')
            self.LL_image  = PhotoImage(data=K40_Whisperer_Images.LL_B64, format='gif')
            self.CC_image  = PhotoImage(data=K40_Whisperer_Images.CC_B64, format='gif')

            self.UL_Button = Button(self.master,image=self.UL_image, command=self.Move_UL)
            self.UR_Button = Button(self.master,image=self.UR_image, command=self.Move_UR)
            self.LR_Button = Button(self.master,image=self.LR_image, command=self.Move_LR)
            self.LL_Button = Button(self.master,image=self.LL_image, command=self.Move_LL)
            self.CC_Button = Button(self.master,image=self.CC_image, command=self.Move_CC)
            
        except:
            self.Right_Button   = Button(self.master,text="">"",          command=self.Move_Right)
            self.Left_Button    = Button(self.master,text=""<"",          command=self.Move_Left)
            self.Up_Button      = Button(self.master,text=""^"",          command=self.Move_Up)
            self.Down_Button    = Button(self.master,text=""v"",          command=self.Move_Down)

            self.UL_Button = Button(self.master,text="" "", command=self.Move_UL)
            self.UR_Button = Button(self.master,text="" "", command=self.Move_UR)
            self.LR_Button = Button(self.master,text="" "", command=self.Move_LR)
            self.LL_Button = Button(self.master,text="" "", command=self.Move_LL)
            self.CC_Button = Button(self.master,text="" "", command=self.Move_CC)

        self.Label_Step   = Label(self.master,text=""Jog Step"", anchor=CENTER )
        self.Label_Step_u = Label(self.master,textvariable=self.units, anchor=W)
        self.Entry_Step   = Entry(self.master,width=""15"")
        self.Entry_Step.configure(textvariable=self.jog_step, justify='center')
        self.jog_step.trace_variable(""w"", self.Entry_Step_Callback)

        ###########################################################################
        self.GoTo_Button    = Button(self.master,text=""Move To"", command=self.GoTo)
        
        self.Entry_GoToX   = Entry(self.master,width=""15"",justify='center')
        self.Entry_GoToX.configure(textvariable=self.gotoX)
        self.gotoX.trace_variable(""w"", self.Entry_GoToX_Callback)
        self.Entry_GoToY   = Entry(self.master,width=""15"",justify='center')
        self.Entry_GoToY.configure(textvariable=self.gotoY)
        self.gotoY.trace_variable(""w"", self.Entry_GoToY_Callback)
        
        self.Label_GoToX   = Label(self.master,text=""X"", anchor=CENTER )
        self.Label_GoToY   = Label(self.master,text=""Y"", anchor=CENTER )
        ###########################################################################
        # End Left Column #

        # Advanced Column     #
        self.separator_vert = Frame(self.master, height=2, bd=1, relief=SUNKEN)
        self.Label_Advanced_column = Label(self.master,text=""Advanced Settings"",anchor=CENTER)
        self.separator_adv = Frame(self.master, height=2, bd=1, relief=SUNKEN)       

        self.Label_Halftone_adv = Label(self.master,text=""Halftone (Dither)"")
        self.Checkbutton_Halftone_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_Halftone_adv.configure(variable=self.halftone)
        self.halftone.trace_variable(""w"", self.View_Refresh_and_Reset_RasterPath) #self.menu_View_Refresh_Callback

        self.Label_Negate_adv = Label(self.master,text=""Invert Raster Color"")
        self.Checkbutton_Negate_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_Negate_adv.configure(variable=self.negate)
        self.negate.trace_variable(""w"", self.View_Refresh_and_Reset_RasterPath)

        self.separator_adv2 = Frame(self.master, height=2, bd=1, relief=SUNKEN)  

        self.Label_Mirror_adv = Label(self.master,text=""Mirror Design"")
        self.Checkbutton_Mirror_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_Mirror_adv.configure(variable=self.mirror)
        self.mirror.trace_variable(""w"", self.View_Refresh_and_Reset_RasterPath)

        self.Label_Rotate_adv = Label(self.master,text=""Rotate Design"")
        self.Checkbutton_Rotate_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_Rotate_adv.configure(variable=self.rotate)
        self.rotate.trace_variable(""w"", self.View_Refresh_and_Reset_RasterPath)

        self.separator_adv3 = Frame(self.master, height=2, bd=1, relief=SUNKEN)
        
        self.Label_inputCSYS_adv = Label(self.master,text=""Use Input CSYS"")
        self.Checkbutton_inputCSYS_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_inputCSYS_adv.configure(variable=self.inputCSYS)
        self.inputCSYS.trace_variable(""w"", self.menu_View_inputCSYS_Refresh_Callback)

        self.Label_Inside_First_adv = Label(self.master,text=""Cut Inside First"")
        self.Checkbutton_Inside_First_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_Inside_First_adv.configure(variable=self.inside_first)
        self.inside_first.trace_variable(""w"", self.menu_Inside_First_Callback)

        self.Label_Inside_First_adv = Label(self.master,text=""Cut Inside First"")
        self.Checkbutton_Inside_First_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_Inside_First_adv.configure(variable=self.inside_first)

        self.Label_Rotary_Enable_adv = Label(self.master,text=""Use Rotary Settings"")
        self.Checkbutton_Rotary_Enable_adv = Checkbutton(self.master,text="""")
        self.Checkbutton_Rotary_Enable_adv.configure(variable=self.rotary)
        self.rotary.trace_variable(""w"", self.Reset_RasterPath_and_Update_Time)


        #####
        self.separator_comb = Frame(self.master, height=2, bd=1, relief=SUNKEN)  

        self.Label_Comb_Engrave_adv = Label(self.master,text=""Group Engrave Tasks"")
        self.Checkbutton_Comb_Engrave_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_Comb_Engrave_adv.configure(variable=self.comb_engrave)
        self.comb_engrave.trace_variable(""w"", self.menu_View_Refresh_Callback)

        self.Label_Comb_Vector_adv = Label(self.master,text=""Group Vector Tasks"")
        self.Checkbutton_Comb_Vector_adv = Checkbutton(self.master,text="" "", anchor=W)
        self.Checkbutton_Comb_Vector_adv.configure(variable=self.comb_vector)
        self.comb_vector.trace_variable(""w"", self.menu_View_Refresh_Callback) 
        #####
        
        self.Label_Reng_passes = Label(self.master,text=""Raster Eng. Passes"")
        self.Entry_Reng_passes   = Entry(self.master,width=""15"")
        self.Entry_Reng_passes.configure(textvariable=self.Reng_passes,justify='center',fg=""black"")
        self.Reng_passes.trace_variable(""w"", self.Entry_Reng_passes_Callback)
        self.NormalColor =  self.Entry_Reng_passes.cget('bg')

        self.Label_Veng_passes = Label(self.master,text=""Vector Eng. Passes"")
        self.Entry_Veng_passes   = Entry(self.master,width=""15"")
        self.Entry_Veng_passes.configure(textvariable=self.Veng_passes,justify='center',fg=""blue"")
        self.Veng_passes.trace_variable(""w"", self.Entry_Veng_passes_Callback)
        self.NormalColor =  self.Entry_Veng_passes.cget('bg')

        self.Label_Vcut_passes = Label(self.master,text=""Vector Cut Passes"")
        self.Entry_Vcut_passes   = Entry(self.master,width=""15"")
        self.Entry_Vcut_passes.configure(textvariable=self.Vcut_passes,justify='center',fg=""red"")
        self.Vcut_passes.trace_variable(""w"", self.Entry_Vcut_passes_Callback)
        self.NormalColor =  self.Entry_Vcut_passes.cget('bg')

        self.Label_Gcde_passes = Label(self.master,text=""G-Code Passes"")
        self.Entry_Gcde_passes   = Entry(self.master,width=""15"")
        self.Entry_Gcde_passes.configure(textvariable=self.Gcde_passes,justify='center',fg=""black"")
        self.Gcde_passes.trace_variable(""w"", self.Entry_Gcde_passes_Callback)
        self.NormalColor =  self.Entry_Gcde_passes.cget('bg')

        
        self.Hide_Adv_Button = Button(self.master,text=""Hide Advanced"", command=self.Hide_Advanced)
                
        # End Right Column #
        self.calc_button = Button(self.master,text=""Calculate Raster Time"", command=self.menu_Calc_Raster_Time)

        #GEN Setting Window Entry initializations
        self.Entry_Sspeed    = Entry()
        self.Entry_BoxGap    = Entry()
        self.Entry_ContAngle = Entry()

        # Make Menu Bar
        self.menuBar = Menu(self.master, relief = ""raised"", bd=2)

        


        top_File = Menu(self.menuBar, tearoff=0)
        top_File.add(""command"", label = ""Save Settings File"", command = self.menu_File_Save)
        top_File.add(""command"", label = ""Read Settings File"", command = self.menu_File_Open_Settings_File)

        top_File.add_separator()
        top_File.add(""command"", label = ""Open Design (SVG/DXF/G-Code)""  , command = self.menu_File_Open_Design)
        top_File.add(""command"", label = ""Reload Design""          , command = self.menu_Reload_Design)

        top_File.add_separator()    
        top_File.add(""command"", label = ""Send EGV File to Laser""             , command = self.menu_File_Open_EGV)

        SaveEGVmenu = Menu(self.master, relief = ""raised"", bd=2, tearoff=0)
        top_File.add_cascade(label=""Save EGV File"", menu=SaveEGVmenu)        
        SaveEGVmenu.add(""command"", label = ""Raster Engrave""     , command = self.menu_File_Raster_Engrave)
        SaveEGVmenu.add(""command"", label = ""Vector Engrave""     , command = self.menu_File_Vector_Engrave)
        SaveEGVmenu.add(""command"", label = ""Vector Cut""         , command = self.menu_File_Vector_Cut)
        SaveEGVmenu.add(""command"", label = ""G-Code Operations""  , command = self.menu_File_G_Code)
        SaveEGVmenu.add_separator()   
        SaveEGVmenu.add(""command"", label = ""Raster and Vector Engrave""             , command = self.menu_File_Raster_Vector_Engrave)
        SaveEGVmenu.add(""command"", label = ""Vector Engrave and Cut""                , command = self.menu_File_Vector_Engrave_Cut)
        SaveEGVmenu.add(""command"", label = ""Raster, Vector Engrave and Vector Cut"" , command = self.menu_File_Raster_Vector_Cut)
        
    
        top_File.add_separator()
        top_File.add(""command"", label = ""Exit""              , command = self.menu_File_Quit)
        
        self.menuBar.add(""cascade"", label=""File"", menu=top_File)

        #top_Edit = Menu(self.menuBar, tearoff=0)
        #self.menuBar.add(""cascade"", label=""Edit"", menu=top_Edit)

        top_View = Menu(self.menuBar, tearoff=0)
        top_View.add(""command"", label = ""Refresh   <F5>"", command = self.menu_View_Refresh)
        top_View.add_separator()
        top_View.add_checkbutton(label = ""Show Raster Image""  ,  variable=self.include_Reng ,command= self.menu_View_Refresh)
        if DEBUG:
            top_View.add_checkbutton(label = ""Show Raster Paths"" ,variable=self.include_Rpth ,command= self.menu_View_Refresh)
        
        top_View.add_checkbutton(label = ""Show Vector Engrave"",   variable=self.include_Veng ,command= self.menu_View_Refresh)
        top_View.add_checkbutton(label = ""Show Vector Cut""    ,   variable=self.include_Vcut ,command= self.menu_View_Refresh)
        top_View.add_checkbutton(label = ""Show G-Code Paths""  ,   variable=self.include_Gcde ,command= self.menu_View_Refresh)
        top_View.add_separator()
        top_View.add_checkbutton(label = ""Show Time Estimates"",   variable=self.include_Time ,command= self.menu_View_Refresh)
        top_View.add_checkbutton(label = ""Zoom to Design Size"",   variable=self.zoom2image   ,command= self.menu_View_Refresh)

        #top_View.add_separator()
        #top_View.add(""command"", label = ""computeAccurateReng"",command= self.computeAccurateReng)
        #top_View.add(""command"", label = ""computeAccurateVeng"",command= self.computeAccurateVeng)
        #top_View.add(""command"", label = ""computeAccurateVcut"",command= self.computeAccurateVcut)

        self.menuBar.add(""cascade"", label=""View"", menu=top_View)

        top_Tools = Menu(self.menuBar, tearoff=0)
        self.menuBar.add(""cascade"", label=""Tools"", menu=top_Tools)
        USBmenu = Menu(self.master, relief = ""raised"", bd=2, tearoff=0)
          
        top_Tools.add(""command"", label = ""Calculate Raster Time"", command = self.menu_Calc_Raster_Time)
        top_Tools.add(""command"", label = ""Trace Design Boundary <Ctrl-t>"", command = self.TRACE_Settings_Window)
        top_Tools.add_separator()
        top_Tools.add(""command"", label = ""Initialize Laser <Ctrl-i>"", command = self.Initialize_Laser)
        top_Tools.add(""command"", label = ""Unfreeze Laser <Ctrl-f>""  , command = self.Unfreeze_Laser)
        top_Tools.add_cascade(label=""USB"", menu=USBmenu)
        USBmenu.add(""command"", label = ""Reset USB"", command = self.Reset)
        USBmenu.add(""command"", label = ""Release USB"", command = self.Release_USB)

                    

        #top_USB = Menu(self.menuBar, tearoff=0)
        #top_USB.add(""command"", label = ""Reset USB"", command = self.Reset)
        #top_USB.add(""command"", label = ""Release USB"", command = self.Release_USB)
        #top_USB.add(""command"", label = ""Initialize Laser"", command = self.Initialize_Laser)
        #self.menuBar.add(""cascade"", label=""USB"", menu=top_USB)
        

        top_Settings = Menu(self.menuBar, tearoff=0)
        top_Settings.add(""command"", label = ""General Settings <F2>"", command = self.GEN_Settings_Window)
        top_Settings.add(""command"", label = ""Raster Settings <F3>"",  command = self.RASTER_Settings_Window)
        top_Settings.add(""command"", label = ""Rotary Settings <F4>"",  command = self.ROTARY_Settings_Window)
        top_Settings.add_separator()
        top_Settings.add_checkbutton(label = ""Advanced Settings <F6>"", variable=self.advanced ,command= self.menu_View_Refresh)
        
        self.menuBar.add(""cascade"", label=""Settings"", menu=top_Settings)
        
        top_Help = Menu(self.menuBar, tearoff=0)
        top_Help.add(""command"", label = ""About (e-mail)"", command = self.menu_Help_About)
        top_Help.add(""command"", label = ""K40 Whisperer Web Page"", command = self.menu_Help_Web)
        top_Help.add(""command"", label = ""Manual (Web Page)"", command = self.menu_Help_Manual)
        self.menuBar.add(""cascade"", label=""Help"", menu=top_Help)

        self.master.config(menu=self.menuBar)

        ##########################################################################
        #                  Config File and command line options                  #
        ##########################################################################
        config_file = ""k40_whisperer.txt""
        home_config1 = self.HOME_DIR + ""/"" + config_file
        if ( os.path.isfile(config_file) ):
            self.Open_Settings_File(config_file)
        elif ( os.path.isfile(home_config1) ):
            self.Open_Settings_File(home_config1)
#Lovejoy
        arguments = len(sys.argv) - 1
        if arguments >=1:
        # read commandline arguments, first
            fullCmdArguments = sys.argv

        # - further arguments
            argumentList = fullCmdArguments[1:]
        #opts, args = getopt.getopt(sys.argv[1:], ""ho:v"", [""help"", ""output=""])
            unixOptions = ""cghHio:rsnvVux:y:""  
            gnuOptions = [""help"",""go"",""stop"",""home"",""init"",""open"",""cut"",""raster"", ""vector"", ""verbose"",""unlock""]  

            try:  
                arguments, values = getopt.getopt(argumentList, unixOptions, gnuOptions)
            except getopt.error as err:  
            # output error, and return with an error code
                print (str(err))
                sys.exit(2)

            # evaluate given options
            for currentArgument, currentValue in arguments:  
                if currentArgument in (""-i"", ""--init""):
                    print (""initializing the laser"")
                    self.Initialize_Laser()
                    #sage()
                    #command=self.Initialize_Laser
                elif currentArgument in (""-H"", ""--home""):
                    print (""move to the home position"")
                    self.Home()
                elif currentArgument in (""-h"", ""--help""):
                    print (""CLI arguments are as follows"")
                    print (""-g --go     Starts the job with whatever other arguments"")
                    print (""-s --stop   Stops the job, doesnt go home, or un initialize"")
                    print (""-H --home   Sends the cutting head to the home [0,0] position"")
                    print (""-i --init   Initializes the laser, or prints errors if it fails"")
                    print (""-o --open   Requires an SVG file to open"")
                    print (""-h --help   Prints this dialog"")
                    print (""-c --cut    Tell the laser to cut"")
                    print (""-r --raster Raster Engrave"")
                    print (""-v --vector Vector Engrave"")
                    print (""-V          Verbose mode lo U wish.. I guess I could set debug mode"")
                    print (""-u --unlock Unlock the print head"")
                    print (""-x <Number> move to X-Cordinate "")
                    print (""-y <Number> move to Y-Cordinate "")
                    print ("" "")
                    print ("" "")
                    print (""Example Useage: $python k40_whisperer.py -i -H -o c.svg -r "")
                    exit()
                elif currentArgument in (""-o"", ""--open""):
                    print ((""opening an svg (%s)"") % (currentValue))
                    self.Open_SVG(currentValue)
                     #self.Open_SVG(filename)
                    self.send_data(""Vector_Cut"", currentValue)
                elif currentArgument in (""-g"", ""--go""):
                    print (""Start cutting or moving the head"")
                    #This option doesn't translate into a direct action like the other functions do.
                elif currentArgument in (""-s"", ""--stop""):
                    print (""Stop Cutting::dont check or make a pop up, just stop"")
                    self.CLI_Stop()
                    #self.Stop()
                elif currentArgument in (""-u"", ""--unlock""):
                    print (""unlocked the print head"")
                    self.Unlock()
                elif currentArgument in (""-c"", ""cut""):
                    print (""cuts the open svg file"")
                    self.Vector_Cut()
                elif currentArgument in (""-r"", ""--raster""):
                    print (""raster Engraves the opened file"")
                    self.Raster_Eng()
                elif currentArgument in (""-v"", ""--vector""):
                    print (""Vector Engraves the opend file"")
                    #self.Vector_Eng()
                    output_filename=currentValue
                    self.Vector_Cut()
                    self.send_data(""Vector_Cut"", output_filename)
                elif currentArgument in (""-V""):
                    print (""Verbose mode lol u wish, well, there is debug mode"")
                    print (""Version 0.19 K40_whisperer source"")
                    print (""Version 0.0  K40 CLI source"")
                elif currentArgument in (""x""):
                    print (""Move to X Coordinate "" % (currentValue))
                    self.gotoX.set(currentValue)
                    self.GoTo()
                elif currentArgument in (""y""):
                    print(""Move to Y Coordnate %s"" % (currentValue))
                    self.gotoY.set(currentValue)
                    self.GoTo()

                else:
                    print (""FOILED! put in some args if you want CLI mode"")
                    
#Lovejoy

#        opts, args = None, None
#        try:
#            opts, args = getopt.getopt(sys.argv[1:], ""ho:"",[""help"", ""other_option""])
#        except:
#            debug_message('Unable interpret command line options')
#            sys.exit()
#        for option, value in opts:
##            if option in ('-h','--help'):
##                fmessage(' ')
##                fmessage('Usage: python .py [-g file]')
##                fmessage('-o    : unknown other option (also --other_option)')
##                fmessage('-h    : print this help (also --help)\n')
##                sys.exit()
#            if option in ('-m','--micro'):
#                self.micro = True

        ##########################################################################

################################################################################
    def entry_set(self, val2, calc_flag=0, new=0):
        if calc_flag == 0 and new==0:
            try:
                self.statusbar.configure( bg = 'yellow' )
                val2.configure( bg = 'yellow' )
                self.statusMessage.set("" Recalculation required."")
            except:
                pass
        elif calc_flag == 3:
            try:
                val2.configure( bg = 'red' )
                self.statusbar.configure( bg = 'red' )
                self.statusMessage.set("" Value should be a number. "")
            except:
                pass
        elif calc_flag == 2:
            try:
                self.statusbar.configure( bg = 'red' )
                val2.configure( bg = 'red' )
            except:
                pass
        elif (calc_flag == 0 or calc_flag == 1) and new==1 :
            try:
                self.statusbar.configure( bg = 'white' )
                self.statusMessage.set("" "")
                val2.configure( bg = 'white' )
            except:
                pass
        elif (calc_flag == 1) and new==0 :
            try:
                self.statusbar.configure( bg = 'white' )
                self.statusMessage.set("" "")
                val2.configure( bg = 'white' )
            except:
                pass

        elif (calc_flag == 0 or calc_flag == 1) and new==2:
            return 0
        return 1

################################################################################
    def Write_Config_File(self, event):
        
        config_data = self.WriteConfig()
        config_file = ""k40_whisperer.txt""
        configname_full = self.HOME_DIR + ""/"" + config_file

        current_name = event.widget.winfo_parent()
        win_id = event.widget.nametowidget(current_name)

        if ( os.path.isfile(configname_full) ):
            try:
                win_id.withdraw()
            except:
                pass

            if not message_ask_ok_cancel(""Replace"", ""Replace Exiting Configuration File?\n""+configname_full):
                try:
                    win_id.deiconify()
                except:
                    pass
                return
        try:
            fout = open(configname_full,'w')
        except:
            self.statusMessage.set(""Unable to open file for writing: %s"" %(configname_full))
            self.statusbar.configure( bg = 'red' )
            return
        for line in config_data:
            try:
                fout.write(line+'\n')
            except:
                fout.write('(skipping line)\n')
        fout.close
        self.statusMessage.set(""Configuration File Saved: %s"" %(configname_full))
        self.statusbar.configure( bg = 'white' )
        try:
            win_id.deiconify()
        except:
            pass

    ################################################################################
    def WriteConfig(self):
        global Zero
        header = []
        header.append('( K40 Whisperer Settings: '+version+' )')
        header.append('( by Scorch - 2019 )')
        header.append(""(=========================================================)"")
        # BOOL
        header.append('(k40_whisperer_set include_Reng  %s )'  %( int(self.include_Reng.get())  ))
        header.append('(k40_whisperer_set include_Veng  %s )'  %( int(self.include_Veng.get())  ))
        header.append('(k40_whisperer_set include_Vcut  %s )'  %( int(self.include_Vcut.get())  ))
        header.append('(k40_whisperer_set include_Gcde  %s )'  %( int(self.include_Gcde.get())  ))
        header.append('(k40_whisperer_set include_Time  %s )'  %( int(self.include_Time.get())  ))
        
        header.append('(k40_whisperer_set halftone      %s )'  %( int(self.halftone.get())      ))
        header.append('(k40_whisperer_set HomeUR        %s )'  %( int(self.HomeUR.get())        ))
        header.append('(k40_whisperer_set inputCSYS     %s )'  %( int(self.inputCSYS.get())     ))
        header.append('(k40_whisperer_set advanced      %s )'  %( int(self.advanced.get())      ))
        header.append('(k40_whisperer_set mirror        %s )'  %( int(self.mirror.get())        ))
        header.append('(k40_whisperer_set rotate        %s )'  %( int(self.rotate.get())        ))
        header.append('(k40_whisperer_set negate        %s )'  %( int(self.negate.get())        ))
        
        header.append('(k40_whisperer_set engraveUP     %s )'  %( int(self.engraveUP.get())     ))
        header.append('(k40_whisperer_set init_home     %s )'  %( int(self.init_home.get())     ))
        header.append('(k40_whisperer_set post_home     %s )'  %( int(self.post_home.get())     ))
        header.append('(k40_whisperer_set post_beep     %s )'  %( int(self.post_beep.get())     ))
        header.append('(k40_whisperer_set post_disp     %s )'  %( int(self.post_disp.get())     ))
        header.append('(k40_whisperer_set post_exec     %s )'  %( int(self.post_exec.get())     ))
        
        header.append('(k40_whisperer_set pre_pr_crc    %s )'  %( int(self.pre_pr_crc.get())    ))
        header.append('(k40_whisperer_set inside_first  %s )'  %( int(self.inside_first.get())  ))

        header.append('(k40_whisperer_set comb_engrave  %s )'  %( int(self.comb_engrave.get())  ))
        header.append('(k40_whisperer_set comb_vector   %s )'  %( int(self.comb_vector.get())   ))
        header.append('(k40_whisperer_set zoom2image    %s )'  %( int(self.zoom2image.get())    ))
        header.append('(k40_whisperer_set rotary        %s )'  %( int(self.rotary.get())        ))
        header.append('(k40_whisperer_set reduced_mem   %s )'  %( int(self.reduced_mem.get())   ))
        header.append('(k40_whisperer_set wait          %s )'  %( int(self.wait.get())          ))

        header.append('(k40_whisperer_set trace_w_laser %s )'  %( int(self.trace_w_laser.get()) ))

        # STRING.get()
        header.append('(k40_whisperer_set board_name    %s )'  %( self.board_name.get()     ))
        header.append('(k40_whisperer_set units         %s )'  %( self.units.get()          ))
        header.append('(k40_whisperer_set Reng_feed     %s )'  %( self.Reng_feed.get()      ))
        header.append('(k40_whisperer_set Veng_feed     %s )'  %( self.Veng_feed.get()      ))
        header.append('(k40_whisperer_set Vcut_feed     %s )'  %( self.Vcut_feed.get()      ))
        header.append('(k40_whisperer_set jog_step      %s )'  %( self.jog_step.get()       ))

        header.append('(k40_whisperer_set Reng_passes   %s )'  %( self.Reng_passes.get()    ))
        header.append('(k40_whisperer_set Veng_passes   %s )'  %( self.Veng_passes.get()    ))
        header.append('(k40_whisperer_set Vcut_passes   %s )'  %( self.Vcut_passes.get()    ))
        header.append('(k40_whisperer_set Gcde_passes   %s )'  %( self.Gcde_passes.get()    ))

        header.append('(k40_whisperer_set rast_step     %s )'  %( self.rast_step.get()      ))
        header.append('(k40_whisperer_set ht_size       %s )'  %( self.ht_size.get()        ))
        
        header.append('(k40_whisperer_set LaserXsize    %s )'  %( self.LaserXsize.get()     ))
        header.append('(k40_whisperer_set LaserYsize    %s )'  %( self.LaserYsize.get()     ))
        header.append('(k40_whisperer_set LaserXscale   %s )'  %( self.LaserXscale.get()    ))
        header.append('(k40_whisperer_set LaserYscale   %s )'  %( self.LaserYscale.get()    ))
        header.append('(k40_whisperer_set LaserRscale   %s )'  %( self.LaserRscale.get()    ))
        header.append('(k40_whisperer_set rapid_feed   %s )'  %( self.rapid_feed.get()      ))
        
        header.append('(k40_whisperer_set gotoX         %s )'  %( self.gotoX.get()          ))
        header.append('(k40_whisperer_set gotoY         %s )'  %( self.gotoY.get()          ))

        header.append('(k40_whisperer_set bezier_M1     %s )'  %( self.bezier_M1.get()      ))
        header.append('(k40_whisperer_set bezier_M2     %s )'  %( self.bezier_M2.get()      ))
        header.append('(k40_whisperer_set bezier_weight %s )'  %( self.bezier_weight.get()  ))

        header.append('(k40_whisperer_set trace_gap     %s )'  %( self.trace_gap.get()      ))
        header.append('(k40_whisperer_set trace_speed   %s )'  %( self.trace_speed.get()    ))      
        
##        header.append('(k40_whisperer_set unsharp_flag  %s )'  %( int(self.unsharp_flag.get())  ))
##        header.append('(k40_whisperer_set unsharp_r     %s )'  %( self.unsharp_r.get()      ))
##        header.append('(k40_whisperer_set unsharp_p     %s )'  %( self.unsharp_p.get()      ))
##        header.append('(k40_whisperer_set unsharp_t     %s )'  %( self.unsharp_t.get()      ))

        header.append('(k40_whisperer_set t_timeout     %s )'  %( self.t_timeout.get()      ))
        header.append('(k40_whisperer_set n_timeouts    %s )'  %( self.n_timeouts.get()     ))

        header.append('(k40_whisperer_set ink_timeout   %s )'  %( self.ink_timeout.get()    ))

        
        header.append('(k40_whisperer_set designfile    \042%s\042 )' %( self.DESIGN_FILE   ))
        header.append('(k40_whisperer_set inkscape_path \042%s\042 )' %( self.inkscape_path.get() ))
        header.append('(k40_whisperer_set batch_path    \042%s\042 )' %( self.batch_path.get() ))


        self.jog_step
        header.append(""(=========================================================)"")

        return header
        ######################################################

    def Quit_Click(self, event):
        self.statusMessage.set(""Exiting!"")
        self.Release_USB
        root.destroy()

    def mousePanStart(self,event):
        self.panx = event.x
        self.pany = event.y
        self.move_start_x = event.x
        self.move_start_y = event.y
        
    def mousePan(self,event):
        all = self.PreviewCanvas.find_all()
        dx = event.x-self.panx
        dy = event.y-self.pany

        self.PreviewCanvas.move('LaserTag', dx, dy)
        self.lastx = self.lastx + dx
        self.lasty = self.lasty + dy
        self.panx = event.x
        self.pany = event.y
        
    def mousePanStop(self,event):
        Xold = round(self.laserX,3)
        Yold = round(self.laserY,3)

        can_dx = event.x-self.move_start_x
        can_dy = -(event.y-self.move_start_y)
        
        dx = can_dx*self.PlotScale
        dy = can_dy*self.PlotScale
        if self.HomeUR.get():
            dx = -dx
        self.laserX,self.laserY = self.XY_in_bounds(dx,dy)
        DXmils = round((self.laserX - Xold)*1000.0,0)
        DYmils = round((self.laserY - Yold)*1000.0,0)
        
        if self.Send_Rapid_Move(DXmils,DYmils):
            self.menu_View_Refresh()

    def right_mousePanStart(self,event):
        self.s_panx = event.x
        self.s_pany = event.y
        self.s_move_start_x = event.x
        self.s_move_start_y = event.y
        
    def right_mousePan(self,event):
        all = self.PreviewCanvas.find_all()
        dx = event.x-self.s_panx
        dy = event.y-self.s_pany

        self.PreviewCanvas.move('LaserDot', dx, dy)
        self.s_lastx = self.lastx + dx
        self.s_lasty = self.lasty + dy
        self.s_panx = event.x
        self.s_pany = event.y
        
    def right_mousePanStop(self,event):
        Xold = round(self.laserX,3)
        Yold = round(self.laserY,3)
        can_dx =   event.x-self.s_move_start_x
        can_dy = -(event.y-self.s_move_start_y)
        
        dx = can_dx*self.PlotScale
        dy = can_dy*self.PlotScale
            
        DX =  round(dx*1000)
        DY =  round(dy*1000)
        self.Move_Arbitrary(DX,DY)
        self.menu_View_Refresh()

    def LASER_Size(self):
        MINX = 0.0
        MAXY = 0.0
        if self.units.get()==""in"":
            MAXX =  float(self.LaserXsize.get())
            MINY = -float(self.LaserYsize.get())
        else:
            MAXX =  float(self.LaserXsize.get())/25.4
            MINY = -float(self.LaserYsize.get())/25.4

        return (MAXX-MINX,MAXY-MINY)


    def XY_in_bounds(self,dx_inches,dy_inches, no_size=False):
        MINX = 0.0
        MAXY = 0.0
        if self.units.get()==""in"":
            MAXX =  float(self.LaserXsize.get())
            MINY = -float(self.LaserYsize.get())
        else:
            MAXX =  float(self.LaserXsize.get())/25.4
            MINY = -float(self.LaserYsize.get())/25.4

        if (self.inputCSYS.get() and self.RengData.image == None) or no_size:
            xmin,xmax,ymin,ymax = 0.0,0.0,0.0,0.0
        else:
            xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
        
        X = self.laserX + dx_inches
        Y = self.laserY + dy_inches
        ################
        dx=xmax-xmin
        dy=ymax-ymin
        if X < MINX:
            X = MINX
        if X+dx > MAXX:
            X = MAXX-dx
            
        if Y-dy < MINY:
            Y = MINY+dy
        if Y > MAXY:
            Y = MAXY
        ################
        if not no_size:
            XOFF = self.pos_offset[0]/1000.0
            YOFF = self.pos_offset[1]/1000.0
            if X+XOFF < MINX:
                X= X +(MINX-(X+XOFF))
            if X+XOFF > MAXX:
                X= X -((X+XOFF)-MAXX)
            if Y+YOFF < MINY:
                Y= Y + (MINY-(Y+YOFF))
            if Y+YOFF > MAXY:
                Y= Y -((Y+YOFF)-MAXY)
        ################
        X = round(X,3)
        Y = round(Y,3)
        return X,Y

##    def computeAccurateVeng(self):
##        self.update_gui(""Optimize vector engrave."") 
##        self.VengData.set_ecoords(self.optimize_paths(self.VengData.ecoords),data_sorted=True)
##        self.refreshTime()
##            
##    def computeAccurateVcut(self):
##        self.update_gui(""Optimize vector cut."") 
##        self.VcutData.set_ecoords(self.optimize_paths(self.VcutData.ecoords),data_sorted=True)
##        self.refreshTime()
##
##    def computeAccurateReng(self):
##        self.update_gui(""Calculating Raster engrave."")
##        if self.RengData.image != None:        
##            if self.RengData.ecoords == []:
##                self.make_raster_coords()
##        self.RengData.sorted = True 
##        self.refreshTime()


    def format_time(self,time_in_seconds):
        # format the duration from seconds to something human readable
        if time_in_seconds !=None and time_in_seconds >=0 :
            s = round(time_in_seconds)
            m,s=divmod(s,60)
            h,m=divmod(m,60)
            res = """"
            if h > 0:
                res =  ""%dh "" %(h)
            if m > 0:
                res += ""%dm "" %(m)
            if h == 0: 
                res += ""%ds "" %(s)
            #L=len(res)
            #for i in range(L,8):
            #    res =  res+"" ""
            return res
        else :
            return ""?"" 

    def refreshTime(self):
        if not self.include_Time.get():
            return
        if self.units.get() == 'in':
            factor =  60.0
        else : 
            factor = 25.4

        Raster_eng_feed = float(self.Reng_feed.get()) / factor
        Vector_eng_feed = float(self.Veng_feed.get()) / factor
        Vector_cut_feed = float(self.Vcut_feed.get()) / factor
        
        Raster_eng_passes = float(self.Reng_passes.get())
        Vector_eng_passes = float(self.Veng_passes.get())
        Vector_cut_passes = float(self.Vcut_passes.get())
        Gcode_passes      = float(self.Gcde_passes.get())

        rapid_feed = 100.0 / 25.4   # 100 mm/s move feed to be confirmed

        if self.RengData.rpaths:
            Reng_time=0
        else:
            Reng_time  = None
        Veng_time  = 0
        Vcut_time  = 0
        
        if self.RengData.len!=None:
            # these equations are a terrible hack based on measured raster engraving times
            # to be fixed someday
            if Raster_eng_feed*60.0 <= 300:
                accel_time=8.3264*(Raster_eng_feed*60.0)**(-0.7451)
            else:
                accel_time=2.5913*(Raster_eng_feed*60.0)**(-0.4795)
                
            t_accel = self.RengData.n_scanlines * accel_time
            Reng_time  =  ( (self.RengData.len)/Raster_eng_feed ) * Raster_eng_passes + t_accel
        if self.VengData.len!=None:
            Veng_time  =  (self.VengData.len / Vector_eng_feed + self.VengData.move / rapid_feed) * Vector_eng_passes
        if self.VcutData.len!=None:
            Vcut_time  =  (self.VcutData.len / Vector_cut_feed + self.VcutData.move / rapid_feed) * Vector_cut_passes
            
        Gcode_time =  self.GcodeData.gcode_time * Gcode_passes

        self.Reng_time.set(""Raster Engrave: %s"" %(self.format_time(Reng_time)))  
        self.Veng_time.set(""Vector Engrave: %s"" %(self.format_time(Veng_time)))
        self.Vcut_time.set(""    Vector Cut: %s"" %(self.format_time(Vcut_time)))
        self.Gcde_time.set(""         Gcode: %s"" %(self.format_time(Gcode_time)))
        
        ##########################################
        cszw = int(self.PreviewCanvas.cget(""width""))
        cszh = int(self.PreviewCanvas.cget(""height""))
        HUD_vspace = 15
        HUD_X = cszw-5
        HUD_Y = cszh-5

        w = int(self.master.winfo_width())
        h = int(self.master.winfo_height())
        HUD_X2 = w-20
        HUD_Y2 = h-75
        
        self.PreviewCanvas.delete(""HUD"")
        self.calc_button.place_forget()
        
        if self.GcodeData.ecoords == []:
            self.PreviewCanvas.create_text(HUD_X, HUD_Y             , fill = ""red""  ,text =self.Vcut_time.get(), anchor=""se"",tags=""HUD"")
            self.PreviewCanvas.create_text(HUD_X, HUD_Y-HUD_vspace  , fill = ""blue"" ,text =self.Veng_time.get(), anchor=""se"",tags=""HUD"")
            
            if (Reng_time==None):
                #try:
                #    self.calc_button.place_forget()
                #except:
                #    pass
                #self.calc_button = Button(self.master,text=""Calculate Raster Time"", command=self.menu_Calc_Raster_Time)
                self.calc_button.place(x=HUD_X2, y=HUD_Y2, width=120+20, height=17, anchor=""se"")   
            else:
                self.calc_button.place_forget()
                self.PreviewCanvas.create_text(HUD_X, HUD_Y-HUD_vspace*2, fill = ""black"",
                                               text =self.Reng_time.get(), anchor=""se"",tags=""HUD"")           
        else:
            self.PreviewCanvas.create_text(HUD_X, HUD_Y, fill = ""black"",text =self.Gcde_time.get(), anchor=""se"",tags=""HUD"")
        ##########################################


    def Settings_ReLoad_Click(self, event):
        win_id=self.grab_current()

    def Close_Current_Window_Click(self,event=None):
        current_name = event.widget.winfo_parent()
        win_id = event.widget.nametowidget(current_name)
        win_id.destroy()
        
    # Left Column #
    #############################
    def Entry_Reng_feed_Check(self):
        try:
            value = float(self.Reng_feed.get())
            vfactor=(25.4/60.0)/self.feed_factor()
            low_limit = self.min_raster_speed*vfactor
            if  value < low_limit:
                self.statusMessage.set("" Feed Rate should be greater than or equal to %f "" %(low_limit))
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.refreshTime()
        return 0         # Value is a valid number
    def Entry_Reng_feed_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Reng_feed, self.Entry_Reng_feed_Check(), new=1)        
    #############################
    def Entry_Veng_feed_Check(self):
        try:
            value = float(self.Veng_feed.get())
            vfactor=(25.4/60.0)/self.feed_factor()
            low_limit = self.min_vector_speed*vfactor
            if  value < low_limit:
                self.statusMessage.set("" Feed Rate should be greater than or equal to %f "" %(low_limit))
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.refreshTime()
        return 0         # Value is a valid number
    def Entry_Veng_feed_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Veng_feed, self.Entry_Veng_feed_Check(), new=1)
    #############################
    def Entry_Vcut_feed_Check(self):
        try:
            value = float(self.Vcut_feed.get())
            vfactor=(25.4/60.0)/self.feed_factor()
            low_limit = self.min_vector_speed*vfactor
            if  value < low_limit:
                self.statusMessage.set("" Feed Rate should be greater than or equal to %f "" %(low_limit))
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.refreshTime()
        return 0         # Value is a valid number
    def Entry_Vcut_feed_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Vcut_feed, self.Entry_Vcut_feed_Check(), new=1)
        
    #############################
    def Entry_Step_Check(self):
        try:
            value = float(self.jog_step.get())
            if  value <= 0.0:
                self.statusMessage.set("" Step should be greater than 0.0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_Step_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Step, self.Entry_Step_Check(), new=1)


    #############################
    def Entry_GoToX_Check(self):
        try:
            value = float(self.gotoX.get())
            if  (value < 0.0) and (not self.HomeUR.get()):
                self.statusMessage.set("" Value should be greater than 0.0 "")
                return 2 # Value is invalid number
            elif (value > 0.0) and self.HomeUR.get():
                self.statusMessage.set("" Value should be less than 0.0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_GoToX_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_GoToX, self.Entry_GoToX_Check(), new=1)

    #############################
    def Entry_GoToY_Check(self):
        try:
            value = float(self.gotoY.get())
            if  value > 0.0:
                self.statusMessage.set("" Value should be less than 0.0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_GoToY_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_GoToY, self.Entry_GoToY_Check(), new=1)
        
    #############################
    def Entry_Rstep_Check(self):
        try:
            value = self.get_raster_step_1000in()
            if  value <= 0 or value > 63:
                self.statusMessage.set("" Step should be between 0.001 and 0.063 in"")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_Rstep_Callback(self, varName, index, mode):
        self.RengData.reset_path()
        self.refreshTime()
        self.entry_set(self.Entry_Rstep, self.Entry_Rstep_Check(), new=1)

##    #############################
##    def Entry_Unsharp_Radius_Check(self):
##        try:
##            value = float(self.unsharp_r.get())
##            if  value <= 0:
##                self.statusMessage.set("" Radius should be greater than zero."")
##                return 2 # Value is invalid number
##        except:
##            return 3     # Value not a number
##        self.menu_View_Refresh_Callback()
##        return 0         # Value is a valid number
##    def Entry_Unsharp_Radius_Callback(self, varName, index, mode):
##        self.entry_set(self.Entry_Unsharp_Radius, self.Entry_Unsharp_Radius_Check(), new=1)
##        
##
##    #############################
##    def Entry_Unsharp_Percent_Check(self):
##        try:
##            value = float(self.unsharp_p.get())
##            if  value <= 0:
##                self.statusMessage.set("" Percent should be greater than zero."")
##                return 2 # Value is invalid number
##        except:
##            return 3     # Value not a number
##        self.menu_View_Refresh_Callback()
##        return 0         # Value is a valid number
##    def Entry_Unsharp_Percent_Callback(self, varName, index, mode):
##        self.entry_set(self.Entry_Unsharp_Percent, self.Entry_Unsharp_Percent_Check(), new=1)
##        
##    #############################
##    def Entry_Unsharp_Threshold_Check(self):
##        try:
##            value = float(self.unsharp_t.get())
##            if  value < 0:
##                self.statusMessage.set("" Threshold should be greater than or equal to zero."")
##                return 2 # Value is invalid number
##        except:
##            return 3     # Value not a number
##        self.menu_View_Refresh_Callback()
##        return 0         # Value is a valid number
##    def Entry_Unsharp_Threshold_Callback(self, varName, index, mode):
##        self.entry_set(self.Entry_Unsharp_Threshold, self.Entry_Unsharp_Threshold_Check(), new=1)
 
    #############################
    # End Left Column #
    #############################
    def bezier_weight_Callback(self, varName=None, index=None, mode=None):
        self.Reset_RasterPath_and_Update_Time()
        self.bezier_plot()
        
    def bezier_M1_Callback(self, varName=None, index=None, mode=None):
        self.Reset_RasterPath_and_Update_Time()
        self.bezier_plot()

    def bezier_M2_Callback(self, varName=None, index=None, mode=None):
        self.Reset_RasterPath_and_Update_Time()
        self.bezier_plot()

    def bezier_plot(self):
        self.BezierCanvas.delete('bez')

        #self.BezierCanvas.create_line( 5,260-0,260,260-255,fill=""black"", capstyle=""round"", width = 2, tags='bez')
        M1 = float(self.bezier_M1.get())
        M2 = float(self.bezier_M2.get())
        w  = float(self.bezier_weight.get())
        num = 10
        x,y = self.generate_bezier(M1,M2,w,n=num)
        for i in range(0,num):
            self.BezierCanvas.create_line( 5+x[i],260-y[i],5+x[i+1],260-y[i+1],fill=""black"", \
                                           capstyle=""round"", width = 2, tags='bez')
        self.BezierCanvas.create_text(128, 0, text=""Output Level vs. Input Level"",anchor=""n"", tags='bez')


    #############################
    def Entry_Ink_Timeout_Check(self):
        try:
            value = float(self.ink_timeout.get())
            if  value < 0.0:
                self.statusMessage.set("" Timeout should be 0 or greater"")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_Ink_Timeout_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Ink_Timeout,self.Entry_Ink_Timeout_Check(), new=1)
        
     
    #############################
    def Entry_Timeout_Check(self):
        try:
            value = float(self.t_timeout.get())
            if  value <= 0.0:
                self.statusMessage.set("" Timeout should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_Timeout_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Timeout,self.Entry_Timeout_Check(), new=1)

    #############################
    def Entry_N_Timeouts_Check(self):
        try:
            value = float(self.n_timeouts.get())
            if  value <= 0.0:
                self.statusMessage.set("" N_Timeouts should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_N_Timeouts_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_N_Timeouts,self.Entry_N_Timeouts_Check(), new=1)
    
    #############################
    def Entry_N_EGV_Passes_Check(self):
        try:
            value = int(self.n_egv_passes.get())
            if  value < 1:
                self.statusMessage.set("" EGV passes should be 1 or higher"")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_N_EGV_Passes_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_N_EGV_Passes,self.Entry_N_EGV_Passes_Check(), new=1)
        
    #############################
    def Entry_Laser_Area_Width_Check(self):
        try:
            value = float(self.LaserXsize.get())
            if  value <= 0.0:
                self.statusMessage.set("" Width should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_Laser_Area_Width_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Laser_Area_Width,self.Entry_Laser_Area_Width_Check(), new=1)

    #############################
    def Entry_Laser_Area_Height_Check(self):
        try:
            value = float(self.LaserYsize.get())
            if  value <= 0.0:
                self.statusMessage.set("" Height should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_Laser_Area_Height_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Laser_Area_Height,self.Entry_Laser_Area_Height_Check(), new=1)


    #############################
    def Entry_Laser_X_Scale_Check(self):
        try:
            value = float(self.LaserXscale.get())
            if  value <= 0.0:
                self.statusMessage.set("" X scale factor should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.Reset_RasterPath_and_Update_Time()
        return 0         # Value is a valid number
    def Entry_Laser_X_Scale_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Laser_X_Scale,self.Entry_Laser_X_Scale_Check(), new=1)
    #############################
    def Entry_Laser_Y_Scale_Check(self):
        try:
            value = float(self.LaserYscale.get())
            if  value <= 0.0:
                self.statusMessage.set("" Y scale factor should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.Reset_RasterPath_and_Update_Time()
        return 0         # Value is a valid number
    def Entry_Laser_Y_Scale_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Laser_Y_Scale,self.Entry_Laser_Y_Scale_Check(), new=1)

    #############################
    def Entry_Laser_R_Scale_Check(self):
        try:
            value = float(self.LaserRscale.get())
            if  value <= 0.0:
                self.statusMessage.set("" Rotary scale factor should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.Reset_RasterPath_and_Update_Time()
        return 0         # Value is a valid number
    def Entry_Laser_R_Scale_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Laser_R_Scale,self.Entry_Laser_R_Scale_Check(), new=1)
        
    #############################
    def Entry_Laser_Rapid_Feed_Check(self):
        try:
            value = float(self.rapid_feed.get())
            vfactor=(25.4/60.0)/self.feed_factor()
            low_limit = 1.0*vfactor
            if  value !=0 and value < low_limit:
                self.statusMessage.set("" Rapid feed should be greater than or equal to %f (or 0 for default speed) "" %(low_limit))
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        return 0         # Value is a valid number
    def Entry_Laser_Rapid_Feed_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Laser_Rapid_Feed,self.Entry_Laser_Rapid_Feed_Check(), new=1)

    # Advanced Column #
    #############################
    def Entry_Reng_passes_Check(self):
        try:
            value = int(self.Reng_passes.get())
            if  value < 1:
                self.statusMessage.set("" Number of passes should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.refreshTime()
        return 0         # Value is a valid number
    def Entry_Reng_passes_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Reng_passes, self.Entry_Reng_passes_Check(), new=1)        
    #############################
    def Entry_Veng_passes_Check(self):
        try:
            value = int(self.Veng_passes.get())
            if  value < 1:
                self.statusMessage.set("" Number of passes should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.refreshTime()
        return 0         # Value is a valid number
    def Entry_Veng_passes_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Veng_passes, self.Entry_Veng_passes_Check(), new=1)
    #############################
    def Entry_Vcut_passes_Check(self):
        try:
            value = int(self.Vcut_passes.get())
            if  value < 1:
                self.statusMessage.set("" Number of passes should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.refreshTime()
        return 0         # Value is a valid number
    def Entry_Vcut_passes_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Vcut_passes, self.Entry_Vcut_passes_Check(), new=1)
        
    #############################
    def Entry_Gcde_passes_Check(self):
        try:
            value = int(self.Gcde_passes.get())
            if  value < 1:
                self.statusMessage.set("" Number of passes should be greater than 0 "")
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.refreshTime()
        return 0         # Value is a valid number
    def Entry_Gcde_passes_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Gcde_passes, self.Entry_Gcde_passes_Check(), new=1)
        
    #############################

    def Entry_Trace_Gap_Check(self):
        try:
            value = float(self.trace_gap.get())
        except:
            return 3     # Value not a number
        self.menu_View_Refresh()
        return 0         # Value is a valid number
    def Entry_Trace_Gap_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Trace_Gap, self.Entry_Trace_Gap_Check(), new=1)
        
    #############################

    def Entry_Trace_Speed_Check(self):
        try:
            value = float(self.trace_speed.get())
            vfactor=(25.4/60.0)/self.feed_factor()
            low_limit = self.min_vector_speed*vfactor
            if  value < low_limit:
                self.statusMessage.set("" Feed Rate should be greater than or equal to %f "" %(low_limit))
                return 2 # Value is invalid number
        except:
            return 3     # Value not a number
        self.refreshTime()
        return 0         # Value is a valid number
    def Entry_Trace_Speed_Callback(self, varName, index, mode):
        self.entry_set(self.Entry_Trace_Speed, self.Entry_Trace_Speed_Check(), new=1)
        
    #############################
    def Inkscape_Path_Click(self, event):
        self.Inkscape_Path_Message()
        win_id=self.grab_current()
        newfontdir = askopenfilename(filetypes=[(""Executable Files"",(""inkscape.exe"",""*inkscape*"")),\
                                                (""All Files"",""*"")],\
                                                 initialdir=self.inkscape_path.get())
        if newfontdir != """" and newfontdir != ():
            if type(newfontdir) is not str:
                newfontdir = newfontdir.encode(""utf-8"")
            self.inkscape_path.set(newfontdir)
            
        try:
            win_id.withdraw()
            win_id.deiconify()
        except:
            pass

    def Inkscape_Path_Message(self, event=None):
        if self.inkscape_warning == False:
            self.inkscape_warning = True
            msg1 = ""Beware:""
            msg2 = ""Most people should leave the 'Inkscape Executable' entry field blank. ""
            msg3 = ""K40 Whisperer will find Inkscape in one of the the standard locations after you install Inkscape.""
            message_box(msg1, msg2+msg3)
            
            
    def Entry_units_var_Callback(self):
        if (self.units.get() == 'in') and (self.funits.get()=='mm/s'):
            self.funits.set('in/min')
            self.Scale_Linear_Inputs('in')
        elif (self.units.get() == 'mm') and (self.funits.get()=='in/min'):
            self.funits.set('mm/s')
            self.Scale_Linear_Inputs('mm')
            
    def Scale_Linear_Inputs(self, new_units=None):
        if new_units=='in':
            self.units_scale = 1.0
            factor  = 1/25.4
            vfactor = 60.0/25.4
        elif new_units=='mm':
            factor  = 25.4
            vfactor = 25.4/60.0
            self.units_scale = 25.4
        else:
            return
        self.LaserXsize.set ( self.Scale_Text_Value('%.2f',self.LaserXsize.get()  ,factor ) )
        self.LaserYsize.set ( self.Scale_Text_Value('%.2f',self.LaserYsize.get()  ,factor ) )
        self.jog_step.set   ( self.Scale_Text_Value('%.3f',self.jog_step.get()    ,factor ) )
        self.gotoX.set      ( self.Scale_Text_Value('%.3f',self.gotoX.get()       ,factor ) )
        self.gotoY.set      ( self.Scale_Text_Value('%.3f',self.gotoY.get()       ,factor ) )
        self.Reng_feed.set  ( self.Scale_Text_Value('%.1f',self.Reng_feed.get()   ,vfactor) )
        self.Veng_feed.set  ( self.Scale_Text_Value('%.1f',self.Veng_feed.get()   ,vfactor) )
        self.Vcut_feed.set  ( self.Scale_Text_Value('%.1f',self.Vcut_feed.get()   ,vfactor) )
        self.trace_speed.set( self.Scale_Text_Value('%.1f',self.trace_speed.get() ,vfactor) )
        self.rapid_feed.set ( self.Scale_Text_Value('%.1f',self.rapid_feed.get()  ,vfactor) )

    def Scale_Text_Value(self,format_txt,Text_Value,factor):
        try:
            return format_txt %(float(Text_Value)*factor )
        except:
            return ''

    def menu_File_Open_Settings_File(self,event=None):
        init_dir = os.path.dirname(self.DESIGN_FILE)
        if ( not os.path.isdir(init_dir) ):
            init_dir = self.HOME_DIR
        fileselect = askopenfilename(filetypes=[(""Settings Files"",""*.txt""),\
                                                (""All Files"",""*"")],\
                                                 initialdir=init_dir)
        if fileselect != '' and fileselect != ():
            self.Open_Settings_File(fileselect)

    def Reduced_Memory_Callback(self, varName, index, mode):
        if self.RengData.image != None:
             self.menu_Reload_Design()
             #print(""Reload_Design"")
    
    def menu_Reload_Design(self,event=None):
        if self.GUI_Disabled:
            return
        file_full = self.DESIGN_FILE
        file_name = os.path.basename(file_full)
        if ( os.path.isfile(file_full) ):
            filename = file_full
        elif ( os.path.isfile( file_name ) ):
            filename = file_name
        elif ( os.path.isfile( self.HOME_DIR+""/""+file_name ) ):
            filename = self.HOME_DIR+""/""+file_name
        else:
            self.statusMessage.set(""file not found: %s"" %(os.path.basename(file_full)) )
            self.statusbar.configure( bg = 'red' ) 
            return
        
        Name, fileExtension = os.path.splitext(filename)
        TYPE=fileExtension.upper()
        if TYPE=='.DXF':
            self.Open_DXF(filename)
        elif TYPE=='.SVG':
            self.Open_SVG(filename)
        elif TYPE=='.EGV':
            self.EGV_Send_Window(filename)
        else:
            self.Open_G_Code(filename)
        self.menu_View_Refresh()
        
        

    def menu_File_Open_Design(self,event=None):
        if self.GUI_Disabled:
            return
        init_dir = os.path.dirname(self.DESIGN_FILE)
        if ( not os.path.isdir(init_dir) ):
            init_dir = self.HOME_DIR

        design_types = (""Design Files"", (""*.svg"",""*.dxf""))
        gcode_types  = (""G-Code Files"", (""*.ngc"",""*.gcode"",""*.g"",""*.tap""))
        
        Name, fileExtension = os.path.splitext(self.DESIGN_FILE)
        TYPE=fileExtension.upper()
        if TYPE != '.DXF' and TYPE!='.SVG' and TYPE!='.EGV' and TYPE!='':
            default_types = gcode_types
        else:
            default_types = design_types
        
        fileselect = askopenfilename(filetypes=[default_types,
                                            (""G-Code Files "", (""*.ngc"",""*.gcode"",""*.g"",""*.tap"")),\
                                            (""DXF Files "",""*.dxf""),\
                                            (""SVG Files "",""*.svg""),\
                                            (""All Files "",""*""),\
                                            (""Design Files "", (""*.svg"",""*.dxf""))],\
                                            initialdir=init_dir)

        if fileselect == () or (not os.path.isfile(fileselect)):
            return
            
        Name, fileExtension = os.path.splitext(fileselect)
        self.update_gui(""Opening '%s'"" % fileselect )
        TYPE=fileExtension.upper()
        if TYPE=='.DXF':
            self.Open_DXF(fileselect)
        elif TYPE=='.SVG':
            self.Open_SVG(fileselect)
        else:
            self.Open_G_Code(fileselect)

            
        self.DESIGN_FILE = fileselect
        self.menu_View_Refresh()
        
    def menu_File_Raster_Engrave(self):
        self.menu_File_save_EGV(operation_type=""Raster_Eng"")
        
    def menu_File_Vector_Engrave(self):
        self.menu_File_save_EGV(operation_type=""Vector_Eng"")
        
    def menu_File_Vector_Cut(self):
        self.menu_File_save_EGV(operation_type=""Vector_Cut"")
        
    def menu_File_G_Code(self):
        self.menu_File_save_EGV(operation_type=""Gcode_Cut"")
        
    def menu_File_Raster_Vector_Engrave(self):
        self.menu_File_save_EGV(operation_type=""Raster_Eng-Vector_Eng"")

    def menu_File_Vector_Engrave_Cut(self):
        self.menu_File_save_EGV(operation_type=""Vector_Eng-Vector_Cut"")

    def menu_File_Raster_Vector_Cut(self):
        self.menu_File_save_EGV(operation_type=""Raster_Eng-Vector_Eng-Vector_Cut"")

    def menu_File_save_EGV(self,operation_type=None,default_name=""out.EGV""):
        self.stop[0]=False
        if DEBUG:
            start=time()
        fileName, fileExtension = os.path.splitext(self.DESIGN_FILE)
        init_file=os.path.basename(fileName)
        default_name = init_file+""_""+operation_type
        
        if self.EGV_FILE != None:
            init_dir = os.path.dirname(self.EGV_FILE)
        else:
            init_dir = os.path.dirname(self.DESIGN_FILE)
            
        if ( not os.path.isdir(init_dir) ):
            init_dir = self.HOME_DIR
            
        fileName, fileExtension = os.path.splitext(default_name)
        init_file=os.path.basename(fileName)

        filename = asksaveasfilename(defaultextension='.EGV', \
                                     filetypes=[(""EGV File"",""*.EGV"")],\
                                     initialdir=init_dir,\
                                     initialfile= init_file )
        
        if filename != '' and filename != ():

            if operation_type.find(""Raster_Eng"") > -1:
                self.make_raster_coords()
            else:
                self.statusbar.configure( bg = 'yellow' )
                self.statusMessage.set(""No raster data to engrave"")
                
            self.send_data(operation_type=operation_type, output_filename=filename)
            self.EGV_FILE = filename
        if DEBUG:
            print(""time = %d seconds"" %(int(time()-start)))
        self.stop[0]=True
        


    def menu_File_Open_EGV(self):
        init_dir = os.path.dirname(self.DESIGN_FILE)
        if ( not os.path.isdir(init_dir) ):
            init_dir = self.HOME_DIR
        fileselect = askopenfilename(filetypes=[(""Engraver Files"", (""*.egv"",""*.EGV"")),\
                                                    (""All Files"",""*"")],\
                                                     initialdir=init_dir)
        if fileselect != '' and fileselect != ():
            self.resetPath()
            self.DESIGN_FILE = fileselect
            self.EGV_Send_Window(fileselect)
        
    def Open_EGV(self,filemname,n_passes=1):
        self.stop[0]=False
        EGV_data=[]
        value1 = """"
        value2 = """"
        value3 = """"
        value4 = """"
        data=""""
        #value1 and value2 are the absolute y and x starting positions
        #value3 and value4 are the absolute y and x end positions
        with open(filemname) as f:
            while True:
                ## Skip header
                c = f.read(1)
                while c!=""%"" and c:
                    c = f.read(1)
                ## Read 1st Value
                c = f.read(1)
                while c!=""%"" and c:
                    value1 = value1 + c
                    c = f.read(1)
                y_start_mils = int(value1) 
                ## Read 2nd Value
                c = f.read(1)
                while c!=""%"" and c:
                    value2 = value2 + c
                    c = f.read(1)
                x_start_mils = int(value2)   
                ## Read 3rd Value
                c = f.read(1)
                while c!=""%"" and c:
                    value3 = value3 + c
                    c = f.read(1)
                y_end_mils = int(value3)
                ## Read 4th Value
                c = f.read(1)
                while c!=""%"" and c:
                    value4 = value4 + c
                    c = f.read(1)
                x_end_mils = int(value4)
                break

            ## Read Data
            while True:
                c = f.read(1)
                if not c:
                    break
                if c=='\n' or c==' ' or c=='\r':
                    pass
                else:
                    data=data+""%c"" %c
                    EGV_data.append(ord(c))
                    
        if ( (x_end_mils != 0) or (y_end_mils != 0) ):
            n_passes=1
        else:
            x_start_mils = 0
            y_start_mils = 0

        try:
            self.send_egv_data(EGV_data,n_passes)
        except MemoryError as e:
            msg1 = ""Memory Error:""
            msg2 = ""Memory Error:  Out of Memory.""
            self.statusMessage.set(msg2)
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
            
        except Exception as e:
            msg1 = ""Sending Data Stopped: ""
            msg2 = ""%s"" %(e)
            if msg2 == """":
                formatted_lines = traceback.format_exc().splitlines()
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())

        #rapid move back to starting position
        dxmils = -(x_end_mils - x_start_mils)
        dymils =   y_end_mils - y_start_mils
        self.Send_Rapid_Move(dxmils,dxmils)
        self.stop[0]=True
        
    def Open_SVG(self,filemname):
        self.resetPath()
        self.SVG_FILE = filemname
        if self.reduced_mem.get():
            self.input_dpi = 500.0
        else:
            self.input_dpi = 1000.0
        svg_reader =  SVG_READER()
        svg_reader.image_dpi = self.input_dpi
        svg_reader.set_inkscape_path(self.inkscape_path.get())
        svg_reader.timout = int(float( self.ink_timeout.get())*60.0) 
        dialog_pxpi    = None
        dialog_viewbox = None
        try:
            try:
                try:
                    svg_reader.parse_svg(self.SVG_FILE)
                    svg_reader.make_paths()
                except SVG_PXPI_EXCEPTION as e:
                    pxpi_dialog = pxpiDialog(root,
                                           self.units.get(),
                                           svg_reader.SVG_Size,
                                           svg_reader.SVG_ViewBox,
                                           svg_reader.SVG_inkscape_version)
                    
                    svg_reader = SVG_READER()
                    svg_reader.image_dpi = self.input_dpi
                    svg_reader.set_inkscape_path(self.inkscape_path.get())
                    svg_reader.timout = int(float( self.ink_timeout.get())*60.0) 
                    if pxpi_dialog.result == None:
                        return
                    
                    dialog_pxpi,dialog_viewbox = pxpi_dialog.result
                    svg_reader.parse_svg(self.SVG_FILE)
                    svg_reader.set_size(dialog_pxpi,dialog_viewbox)
                    svg_reader.make_paths()
                    
            except SVG_TEXT_EXCEPTION as e:
                svg_reader = SVG_READER()
                svg_reader.image_dpi = self.input_dpi
                svg_reader.set_inkscape_path(self.inkscape_path.get())
                svg_reader.timout = int(float( self.ink_timeout.get())*60.0) 
                self.statusMessage.set(""Converting TEXT to PATHS."")
                self.master.update()
                svg_reader.parse_svg(self.SVG_FILE)
                if dialog_pxpi != None and dialog_viewbox != None:
                    svg_reader.set_size(dialog_pxpi,dialog_viewbox)
                svg_reader.make_paths(txt2paths=True)
                
        except Exception as e:
            msg1 = ""SVG Error: ""
            msg2 = ""%s"" %(e)
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
            return
        except:
            self.statusMessage.set(""Unable To open SVG File: %s"" %(filemname))
            debug_message(traceback.format_exc())
            return
        xmax = svg_reader.Xsize/25.4
        ymax = svg_reader.Ysize/25.4
        xmin = 0
        ymin = 0

        self.Design_bounds = (xmin,xmax,ymin,ymax)
            
        ##########################
        ###   Create ECOORDS   ###
        ##########################
        self.VcutData.make_ecoords(svg_reader.cut_lines,scale=1/25.4)
        self.VengData.make_ecoords(svg_reader.eng_lines,scale=1/25.4)

        ##########################
        ###   Load Image       ###
        ##########################
        self.RengData.set_image(svg_reader.raster_PIL)
        
        if (self.RengData.image != None):
            self.wim, self.him = self.RengData.image.size
            self.aspect_ratio =  float(self.wim-1) / float(self.him-1)
            #self.make_raster_coords()
        self.refreshTime()
        margin=0.0625 # A bit of margin to prevent the warningwindow for designs that are close to being within the bounds
        if self.Design_bounds[0] > self.VengData.bounds[0]+margin or\
           self.Design_bounds[0] > self.VcutData.bounds[0]+margin or\
           self.Design_bounds[1] < self.VengData.bounds[1]-margin or\
           self.Design_bounds[1] < self.VcutData.bounds[1]-margin or\
           self.Design_bounds[2] > self.VengData.bounds[2]+margin or\
           self.Design_bounds[2] > self.VcutData.bounds[2]+margin or\
           self.Design_bounds[3] < self.VengData.bounds[3]-margin or\
           self.Design_bounds[3] < self.VcutData.bounds[3]-margin:
            line1 = ""Warning:\n""
            line2 = ""There is vector cut or vector engrave data located outside of the SVG page bounds.\n\n""
            line3 = ""K40 Whisperer will attempt to use all of the vector data.  ""
            line4 = ""Please verify that the vector data is not outside of your lasers working area before engraving.""
            message_box(""Warning"", line1+line2+line3+line4)


    #####################################################################
    def make_raster_coords(self):
        if self.RengData.rpaths:
            return
        try:
            hcoords=[]
            if (self.RengData.image != None and self.RengData.ecoords==[]):
                ecoords=[]
                cutoff=128
                image_temp = self.RengData.image.convert(""L"")
##                if self.unsharp_flag.get():
##                    from PIL import ImageFilter       
##                    #image_temp = image_temp.filter(UnsharpMask(radius=self.unsharp_r, percent=self.unsharp_p, threshold=self.unsharp_t))
##                    filter = ImageFilter.UnsharpMask()
##                    filter.radius    = float(self.unsharp_r.get())      # radius 3-5 pixels
##                    filter.percent   = int(float(self.unsharp_p.get())) # precent 500%
##                    filter.threshold = int(float(self.unsharp_t.get())) # Threshold 0
##                    image_temp = image_temp.filter(filter)

                if self.negate.get():
                    image_temp = ImageOps.invert(image_temp)
                    
                if self.mirror.get():
                    image_temp = ImageOps.mirror(image_temp)

                if self.rotate.get():
                    #image_temp = image_temp.rotate(90,expand=True)
                    image_temp = self.rotate_raster(image_temp)

                Xscale = float(self.LaserXscale.get())
                Yscale = float(self.LaserYscale.get())    
                if self.rotary.get():
                    Rscale = float(self.LaserRscale.get())
                    Yscale = Yscale*Rscale

                if Xscale != 1.0 or Yscale != 1.0:
                    wim,him = image_temp.size
                    nw = int(wim*Xscale)
                    nh = int(him*Yscale)
                    image_temp = image_temp.resize((nw,nh))

                    
                if self.halftone.get():
                    ht_size_mils =  round( self.input_dpi / float(self.ht_size.get()) ,1)
                    npixels = int( round(ht_size_mils,1) )
                    if npixels == 0:
                        return
                    wim,him = image_temp.size
                    # Convert to Halftoning and save
                    nw=int(wim / npixels)
                    nh=int(him / npixels)
                    image_temp = image_temp.resize((nw,nh))
                    
                    image_temp = self.convert_halftoning(image_temp)
                    image_temp = image_temp.resize((wim,him))
                else:
                    image_temp = image_temp.point(lambda x: 0 if x<128 else 255, '1')
                    
                if DEBUG:
                    image_name = os.path.expanduser(""~"")+""/IMAGE.png""
                    image_temp.save(image_name,""PNG"")

                Reng_np = image_temp.load()
                wim,him = image_temp.size
                del image_temp
                #######################################
                x=0
                y=0
                loop=1
                LENGTH=0
                n_scanlines = 0 
                
                my_hull = hull2D()
                bignumber = 9999999;
                Raster_step = int(self.get_raster_step_1000in())
                timestamp=0
                im_height_mils = int(him/self.input_dpi*1000.0)
                for i_step in range(0,im_height_mils,Raster_step):
                    i=floor(i_step*self.input_dpi/1000.0)
                    #print(i_step,i)
                    stamp=int(3*time()) #update every 1/3 of a second
                    if (stamp != timestamp):
                        timestamp=stamp #interlock
                        self.statusMessage.set(""Creating Scan Lines: %.1f %%"" %( (100.0*i)/him ) )
                        self.master.update()
                    #lovejoy    
                    if self.stop[0]==True:
                        raise Exception(""Action stopped by User."")
                    line = []
                    cnt=1
                    LEFT  = bignumber;
                    RIGHT =-bignumber;
                    for j in range(1,wim):
                        if (Reng_np[j,i] == Reng_np[j-1,i]):
                            cnt = cnt+1
                        else:
                            if Reng_np[j-1,i]:
                                laser = ""U""
                            else:
                                laser = ""D""
                                LEFT  = min(j-cnt,LEFT)
                                RIGHT = max(j,RIGHT)
                                
                            line.append((cnt,laser))
                            cnt=1
                    if Reng_np[j-1,i] > cutoff:
                        laser = ""U""
                    else:
                        laser = ""D""
                        LEFT  = min(j-cnt,LEFT)
                        RIGHT = max(j,RIGHT)
                        
                    line.append((cnt,laser))
                    if LEFT != bignumber and RIGHT != -bignumber:
                        LENGTH = LENGTH + (RIGHT - LEFT)/self.input_dpi
                        n_scanlines = n_scanlines + 1
                    
                    y=(im_height_mils-i_step)/1000.0
                    x=0
                    if LEFT != bignumber:
                        hcoords.append([LEFT/self.input_dpi,y])
                    if RIGHT != -bignumber:
                        hcoords.append([RIGHT/self.input_dpi,y])
                    if hcoords!=[]:
                        hcoords = my_hull.convexHullecoords(hcoords)
                        
                    rng = list(range(0,len(line),1))
                        
                    for i in rng:
                        seg = line[i]
                        delta = seg[0]/self.input_dpi
                        if seg[1]==""D"":
                            loop=loop+1
                            ecoords.append([x      ,y,loop])
                            ecoords.append([x+delta,y,loop])
                        x = x + delta
                self.RengData.set_ecoords(ecoords,data_sorted=True)
                self.RengData.len=LENGTH
                self.RengData.n_scanlines = n_scanlines
            #Set Flag indicating raster paths have been calculated    
            self.RengData.rpaths = True
            self.RengData.hull_coords = hcoords
        
        except MemoryError as e:
            msg1 = ""Memory Error:""
            msg2 = ""Memory Error:  Out of Memory.""
            self.statusMessage.set(msg2)
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
            
        except Exception as e:
            msg1 = ""Making Raster Coords Stopped: ""
            msg2 = ""%s"" %(e)
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
    #######################################################################


    def rotate_raster(self,image_in):
        wim,him = image_in.size
        im_rotated = Image.new(""L"", (him, wim), ""white"")

        image_in_np   = image_in.load()
        im_rotated_np = im_rotated.load()
        
        for i in range(1,him):
            for j in range(1,wim):
                im_rotated_np[i,wim-j] = image_in_np[j,i]
        return im_rotated
    
    def get_raster_step_1000in(self):
        val_in = float(self.rast_step.get())
        value = int(round(val_in*1000.0,1)) 
        return value


    def generate_bezier(self,M1,M2,w,n=100):
        if (M1==M2):
            x1=0
            y1=0
        else:
            x1 = 255*(1-M2)/(M1-M2)
            y1 = M1*x1
        x=[]
        y=[]
        # Calculate Bezier Curve
        for step in range(0,n+1):
            t    = float(step)/float(n)
            Ct   = 1 / ( pow(1-t,2)+2*(1-t)*t*w+pow(t,2) )
            x.append( Ct*( 2*(1-t)*t*w*x1+pow(t,2)*255) )
            y.append( Ct*( 2*(1-t)*t*w*y1+pow(t,2)*255) )
        return x,y

    '''This Example opens an Image and transform the image into halftone.  -Isai B. Cicourel'''
    # Create a Half-tone version of the image
    def convert_halftoning(self,image):
        image = image.convert('L')
        x_lim, y_lim = image.size
        pixel = image.load()
        
        M1 = float(self.bezier_M1.get())
        M2 = float(self.bezier_M2.get())
        w  = float(self.bezier_weight.get())
        
        if w > 0:
            x,y = self.generate_bezier(M1,M2,w)
            
            interp = interpolate(x, y) # Set up interpolate class
            val_map=[]
            # Map Bezier Curve to values between 0 and 255
            for val in range(0,256):
                val_out = int(round(interp[val])) # Get the interpolated value at each value
                val_map.append(val_out)
            # Adjust image
            timestamp=0
            for y in range(1, y_lim):
                stamp=int(3*time()) #update every 1/3 of a second
                if (stamp != timestamp):
                    timestamp=stamp #interlock
                    self.statusMessage.set(""Adjusting Image Darkness: %.1f %%"" %( (100.0*y)/y_lim ) )
                    self.master.update()
                for x in range(1, x_lim):
                    pixel[x, y] = val_map[ pixel[x, y] ]

        self.statusMessage.set(""Creating Halftone Image."" )
        self.master.update()
        image = image.convert('1')
        return image

    #######################################################################

    def gcode_error_message(self,message):
        error_report = Toplevel(width=525,height=60)
        error_report.title(""G-Code Reading Errors/Warnings"")
        error_report.iconname(""G-Code Errors"")
        error_report.grab_set()
        return_value =  StringVar()
        return_value.set(""none"")


        def Close_Click(event):
            return_value.set(""close"")
            error_report.destroy()
            
        #Text Box
        Error_Frame = Frame(error_report)
        scrollbar = Scrollbar(Error_Frame, orient=VERTICAL)
        Error_Text = Text(Error_Frame, width=""80"", height=""20"",yscrollcommand=scrollbar.set,bg='white')
        for line in message:
            Error_Text.insert(END,line+""\n"")
        scrollbar.config(command=Error_Text.yview)
        scrollbar.pack(side=RIGHT,fill=Y)
        #End Text Box

        Button_Frame = Frame(error_report)
        close_button = Button(Button_Frame,text="" Close "")
        close_button.bind(""<ButtonRelease-1>"", Close_Click)
        close_button.pack(side=RIGHT,fill=X)
        
        Error_Text.pack(side=LEFT,fill=BOTH,expand=1)
        Button_Frame.pack(side=BOTTOM)
        Error_Frame.pack(side=LEFT,fill=BOTH,expand=1)
        
        root.wait_window(error_report)
        return return_value.get()

    def Open_G_Code(self,filename):
        self.resetPath()
        
        g_rip = G_Code_Rip()
        try:
            MSG = g_rip.Read_G_Code(filename, XYarc2line = True, arc_angle=2, units=""in"", Accuracy="""")
            Error_Text = """"
            if MSG!=[]:
                self.gcode_error_message(MSG)

        #except StandardError as e:
        except Exception as e:
            msg1 = ""G-Code Load Failed:  ""
            msg2 = ""Filename: %s"" %(filename)
            msg3 = ""%s"" %(e)
            self.statusMessage.set((msg1+msg3).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, ""%s\n%s"" %(msg2,msg3))
            debug_message(traceback.format_exc())

            
        ecoords= g_rip.generate_laser_paths(g_rip.g_code_data)
        self.GcodeData.set_ecoords(ecoords,data_sorted=True)
        self.Design_bounds = self.GcodeData.bounds

        
    def Open_DXF(self,filemname):
        self.resetPath()
        
        self.DXF_FILE = filemname
        dxf_import=DXF_CLASS()
        tolerance = .0005
        try:
            fd = open(self.DXF_FILE)
            dxf_import.GET_DXF_DATA(fd,lin_tol = tolerance,get_units=True,units=None)
            fd.seek(0)
            
            dxf_units = dxf_import.units
            if dxf_units==""Unitless"":
                d = UnitsDialog(root)
                dxf_units = d.result
            if dxf_units==""Inches"":
                dxf_scale = 1.0
            elif dxf_units==""Feet"":
                dxf_scale = 12.0
            elif dxf_units==""Miles"":
                dxf_scale = 5280.0*12.0
            elif dxf_units==""Millimeters"":
                dxf_scale = 1.0/25.4
            elif dxf_units==""Centimeters"":
                dxf_scale = 1.0/2.54
            elif dxf_units==""Meters"":
                dxf_scale = 1.0/254.0
            elif dxf_units==""Kilometers"":
                dxf_scale = 1.0/254000.0
            elif dxf_units==""Microinches"":
                dxf_scale = 1.0/1000000.0
            elif dxf_units==""Mils"":
                dxf_scale = 1.0/1000.0
            else:
                return    

            lin_tol = tolerance / dxf_scale
            dxf_import.GET_DXF_DATA(fd,lin_tol=lin_tol,get_units=False,units=None)
            fd.close()
        #except StandardError as e:
        except Exception as e:
            msg1 = ""DXF Load Failed:""
            msg2 = ""%s"" %(e)
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
        except:
            fmessage(""Unable To open Drawing Exchange File (DXF) file."")
            debug_message(traceback.format_exc())
            return
        
        new_origin=False
        dxf_engrave_coords = dxf_import.DXF_COORDS_GET_TYPE(engrave=True, new_origin=False)
        dxf_cut_coords     = dxf_import.DXF_COORDS_GET_TYPE(engrave=False,new_origin=False)
##        if DEBUG:
##            dxf_code = dxf_import.WriteDXF(close_loops=False)
##            fout = open('Z:\\out.dxf','w')
##            for line in dxf_code:
##                fout.write(line+'\n')
##            fout.close
        
        if dxf_import.dxf_messages != """":
            msg_split=dxf_import.dxf_messages.split(""\n"")
            msg_split.sort()
            msg_split.append("""")
            mcnt=1
            msg_out = """"
            for i in range(1,len(msg_split)):
                if msg_split[i-1]==msg_split[i]:
                    mcnt=mcnt+1
                else:
                    if msg_split[i-1]!="""":
                        msg_line = ""%s (%d places)\n"" %(msg_split[i-1],mcnt)
                        msg_out = msg_out + msg_line
                    mcnt=1
            message_box(""DXF Import:"",msg_out)
                    
        ##########################
        ###   Create ECOORDS   ###
        ##########################
        self.VcutData.make_ecoords(dxf_cut_coords    ,scale=dxf_scale)
        self.VengData.make_ecoords(dxf_engrave_coords,scale=dxf_scale)

        xmin = min(self.VcutData.bounds[0],self.VengData.bounds[0])
        xmax = max(self.VcutData.bounds[1],self.VengData.bounds[1])
        ymin = min(self.VcutData.bounds[2],self.VengData.bounds[2])
        ymax = max(self.VcutData.bounds[3],self.VengData.bounds[3])
        self.Design_bounds = (xmin,xmax,ymin,ymax)


    def Open_Settings_File(self,filename):
        try:
            fin = open(filename,'r')
        except:
            fmessage(""Unable to open file: %s"" %(filename))
            return
        
        text_codes=[]
        ident = ""k40_whisperer_set""
        for line in fin:
            try:
                if ident in line:
                    # BOOL
                    if ""include_Reng""  in line:
                        self.include_Reng.set(line[line.find(""include_Reng""):].split()[1])
                    elif ""include_Veng""  in line:
                        self.include_Veng.set(line[line.find(""include_Veng""):].split()[1])
                    elif ""include_Vcut""  in line:
                        self.include_Vcut.set(line[line.find(""include_Vcut""):].split()[1])
                    elif ""include_Gcde""  in line:
                        self.include_Gcde.set(line[line.find(""include_Gcde""):].split()[1])
                    elif ""include_Time""  in line:
                        self.include_Time.set(line[line.find(""include_Time""):].split()[1])
                    elif ""halftone""  in line:
                        self.halftone.set(line[line.find(""halftone""):].split()[1])
                    elif ""negate""  in line:
                        self.negate.set(line[line.find(""negate""):].split()[1])
                    elif ""HomeUR""  in line:
                        self.HomeUR.set(line[line.find(""HomeUR""):].split()[1])                    
                    elif ""inputCSYS""  in line:
                        self.inputCSYS.set(line[line.find(""inputCSYS""):].split()[1])
                    elif ""advanced""  in line:
                        self.advanced.set(line[line.find(""advanced""):].split()[1])
                    elif ""mirror""  in line:
                        self.mirror.set(line[line.find(""mirror""):].split()[1])
                    elif ""rotate""  in line:
                        self.rotate.set(line[line.find(""rotate""):].split()[1])
                    elif ""engraveUP""  in line:
                        self.engraveUP.set(line[line.find(""engraveUP""):].split()[1])
                    elif ""init_home""  in line:
                        self.init_home.set(line[line.find(""init_home""):].split()[1])
                    elif ""post_home""  in line:
                        self.post_home.set(line[line.find(""post_home""):].split()[1])
                    elif ""post_beep""  in line:
                        self.post_beep.set(line[line.find(""post_beep""):].split()[1])
                    elif ""post_disp""  in line:
                        self.post_disp.set(line[line.find(""post_disp""):].split()[1])
                    elif ""post_exec""  in line:
                        self.post_exec.set(line[line.find(""post_exec""):].split()[1])
                        
                    elif ""pre_pr_crc""  in line:
                        self.pre_pr_crc.set(line[line.find(""pre_pr_crc""):].split()[1])
                    elif ""inside_first""  in line:
                        self.inside_first.set(line[line.find(""inside_first""):].split()[1])
                    elif ""comb_engrave""  in line:
                        self.comb_engrave.set(line[line.find(""comb_engrave""):].split()[1])
                    elif ""comb_vector""  in line:
                        self.comb_vector.set(line[line.find(""comb_vector""):].split()[1])
                    elif ""zoom2image""  in line:
                        self.zoom2image.set(line[line.find(""zoom2image""):].split()[1])

                    elif ""rotary""  in line:
                         self.rotary.set(line[line.find(""rotary""):].split()[1])
                    elif ""reduced_mem""  in line:
                         self.reduced_mem.set(line[line.find(""reduced_mem""):].split()[1])
                    elif ""wait""  in line:
                         self.wait.set(line[line.find(""wait""):].split()[1])

                    elif ""trace_w_laser""  in line:
                         self.trace_w_laser.set(line[line.find(""trace_w_laser""):].split()[1])
            
                    # STRING.set()
                    elif ""board_name"" in line:
                        self.board_name.set(line[line.find(""board_name""):].split()[1])
                    elif ""units""    in line:
                        self.units.set(line[line.find(""units""):].split()[1])
                    elif ""Reng_feed""    in line:
                         self.Reng_feed .set(line[line.find(""Reng_feed""):].split()[1])
                    elif ""Veng_feed""    in line:
                         self.Veng_feed .set(line[line.find(""Veng_feed""):].split()[1])  
                    elif ""Vcut_feed""    in line:
                         self.Vcut_feed.set(line[line.find(""Vcut_feed""):].split()[1])
                    elif ""jog_step""    in line:
                         self.jog_step.set(line[line.find(""jog_step""):].split()[1])
                         
                    elif ""Reng_passes""    in line:
                         self.Reng_passes.set(line[line.find(""Reng_passes""):].split()[1])
                    elif ""Veng_passes""    in line:
                         self.Veng_passes.set(line[line.find(""Veng_passes""):].split()[1])
                    elif ""Vcut_passes""    in line:
                         self.Vcut_passes.set(line[line.find(""Vcut_passes""):].split()[1])
                    elif ""Gcde_passes""    in line:
                         self.Gcde_passes.set(line[line.find(""Gcde_passes""):].split()[1])

                    elif ""rast_step""    in line:
                         self.rast_step.set(line[line.find(""rast_step""):].split()[1])
                    elif ""ht_size""    in line:
                         self.ht_size.set(line[line.find(""ht_size""):].split()[1])

                    elif ""LaserXsize""    in line:
                         self.LaserXsize.set(line[line.find(""LaserXsize""):].split()[1])
                    elif ""LaserYsize""    in line:
                         self.LaserYsize.set(line[line.find(""LaserYsize""):].split()[1])

                    elif ""LaserXscale""    in line:
                         self.LaserXscale.set(line[line.find(""LaserXscale""):].split()[1])
                    elif ""LaserYscale""    in line:
                         self.LaserYscale.set(line[line.find(""LaserYscale""):].split()[1])
                    elif ""LaserRscale""    in line:
                         self.LaserRscale.set(line[line.find(""LaserRscale""):].split()[1])

                    elif ""rapid_feed""    in line:
                         self.rapid_feed.set(line[line.find(""rapid_feed""):].split()[1])
                         
                    elif ""gotoX""    in line:
                         self.gotoX.set(line[line.find(""gotoX""):].split()[1])
                    elif ""gotoY""    in line:
                         self.gotoY.set(line[line.find(""gotoY""):].split()[1])

                    elif ""bezier_M1""    in line:
                         self.bezier_M1.set(line[line.find(""bezier_M1""):].split()[1])
                    elif ""bezier_M2""    in line:
                         self.bezier_M2.set(line[line.find(""bezier_M2""):].split()[1])
                    elif ""bezier_weight""    in line:
                         self.bezier_weight.set(line[line.find(""bezier_weight""):].split()[1])
                    elif ""trace_gap""    in line:
                         self.trace_gap.set(line[line.find(""trace_gap""):].split()[1])
                    elif ""trace_speed""    in line:
                         self.trace_speed.set(line[line.find(""trace_speed""):].split()[1])

    ##                elif ""unsharp_flag""    in line:
    ##                     self.unsharp_flag.set(line[line.find(""unsharp_flag""):].split()[1])
    ##                elif ""unsharp_r""    in line:
    ##                     self.unsharp_r.set(line[line.find(""unsharp_r""):].split()[1])
    ##                elif ""unsharp_p""    in line:
    ##                     self.unsharp_p.set(line[line.find(""unsharp_p""):].split()[1])
    ##                elif ""unsharp_t""    in line:
    ##                     self.unsharp_t.set(line[line.find(""unsharp_t""):].split()[1])
            
                    elif ""t_timeout""    in line:
                         self.t_timeout.set(line[line.find(""t_timeout""):].split()[1])
                    elif ""n_timeouts""    in line:
                         self.n_timeouts.set(line[line.find(""n_timeouts""):].split()[1])

                    elif ""ink_timeout""    in line:
                         self.ink_timeout.set(line[line.find(""ink_timeout""):].split()[1])

                    elif ""designfile""    in line:
                           self.DESIGN_FILE=(line[line.find(""designfile""):].split(""\042"")[1])
                    elif ""inkscape_path""    in line:
                         self.inkscape_path.set(line[line.find(""inkscape_path""):].split(""\042"")[1])
                    elif ""batch_path""    in line:
                         self.batch_path.set(line[line.find(""batch_path""):].split(""\042"")[1])

                         
            except:
                #Ignoring exeptions during reading data from line 
                pass
                     
        fin.close()

        fileName, fileExtension = os.path.splitext(self.DESIGN_FILE)
        init_file=os.path.basename(fileName)
        
        if init_file != ""None"":
            if ( os.path.isfile(self.DESIGN_FILE) ):
                pass
            else:
                self.statusMessage.set(""Image file not found: %s "" %(self.DESIGN_FILE))

        if self.units.get() == 'in':
            self.funits.set('in/min')
            self.units_scale = 1.0
        else:
            self.units.set('mm')
            self.funits.set('mm/s')
            self.units_scale = 25.4

        temp_name, fileExtension = os.path.splitext(filename)
        file_base=os.path.basename(temp_name)
            
        if self.initComplete == 1:
            self.menu_Mode_Change()
            self.DESIGN_FILE = filename
            
    ##########################################################################
    ##########################################################################
    def menu_File_Save(self):
        settings_data = self.WriteConfig()
        init_dir = os.path.dirname(self.DESIGN_FILE)
        if ( not os.path.isdir(init_dir) ):
            init_dir = self.HOME_DIR
            
        fileName, fileExtension = os.path.splitext(self.DESIGN_FILE)
        init_file=os.path.basename(fileName)

        filename = asksaveasfilename(defaultextension='.txt', \
                                     filetypes=[(""Text File"",""*.txt"")],\
                                     initialdir=init_dir,\
                                     initialfile= init_file )

        if filename != '' and filename != ():
            try:
                fout = open(filename,'w')
            except:
                self.statusMessage.set(""Unable to open file for writing: %s"" %(filename))
                self.statusbar.configure( bg = 'red' )
                return

            for line in settings_data:
                try:
                    fout.write(line+'\n')
                except:
                    fout.write('(skipping line)\n')
                    debug_message(traceback.format_exc())
            fout.close
            self.statusMessage.set(""File Saved: %s"" %(filename))
            self.statusbar.configure( bg = 'white' )
        
    def Get_Design_Bounds(self):
        if self.rotate.get():
            ymin =  self.Design_bounds[0]
            ymax =  self.Design_bounds[1]
            xmin = -self.Design_bounds[3]
            xmax = -self.Design_bounds[2]
        else:
            xmin,xmax,ymin,ymax = self.Design_bounds
        return (xmin,xmax,ymin,ymax)
    
    def Move_UL(self,dummy=None):
        xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
        if self.HomeUR.get():
            Xnew = self.laserX + (xmax-xmin)
            DX = round((xmax-xmin)*1000.0)
        else:
            Xnew = self.laserX
            DX = 0
            
        (Xsize,Ysize)=self.LASER_Size()
        if Xnew <= Xsize+.001:
            self.move_head_window_temporary([DX,0.0])
        else:
            pass

    def Move_UR(self,dummy=None):
        xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
        if self.HomeUR.get():
            Xnew = self.laserX
            DX = 0
        else:
            Xnew = self.laserX + (xmax-xmin) 
            DX = round((xmax-xmin)*1000.0)

        (Xsize,Ysize)=self.LASER_Size()
        if Xnew <= Xsize+.001:
            self.move_head_window_temporary([DX,0.0])
        else:
            pass
    
    def Move_LR(self,dummy=None):
        xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
        if self.HomeUR.get():
            Xnew = self.laserX
            DX = 0
        else:
            Xnew = self.laserX + (xmax-xmin) 
            DX = round((xmax-xmin)*1000.0)
            
        Ynew = self.laserY - (ymax-ymin)
        (Xsize,Ysize)=self.LASER_Size()
        if Xnew <= Xsize+.001 and Ynew >= -Ysize-.001:
            DY = round((ymax-ymin)*1000.0)
            self.move_head_window_temporary([DX,-DY])
        else:
            pass
    
    def Move_LL(self,dummy=None):
        xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
        if self.HomeUR.get():
            Xnew = self.laserX + (xmax-xmin)
            DX = round((xmax-xmin)*1000.0)
        else:
            Xnew = self.laserX
            DX = 0
            
        Ynew = self.laserY - (ymax-ymin)
        (Xsize,Ysize)=self.LASER_Size()
        if Xnew <= Xsize+.001 and Ynew >= -Ysize-.001:
            DY = round((ymax-ymin)*1000.0)
            self.move_head_window_temporary([DX,-DY])
        else:
            pass

    def Move_CC(self,dummy=None):
        xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
        if self.HomeUR.get():
            Xnew = self.laserX + (xmax-xmin)/2.0 
            DX = round((xmax-xmin)/2.0*1000.0)
        else:
            Xnew = self.laserX + (xmax-xmin)/2.0 
            DX = round((xmax-xmin)/2.0*1000.0)

            
        Ynew = self.laserY - (ymax-ymin)/2.0
        (Xsize,Ysize)=self.LASER_Size()
        if Xnew <= Xsize+.001 and Ynew >= -Ysize-.001: 
            DY = round((ymax-ymin)/2.0*1000.0)
            self.move_head_window_temporary([DX,-DY])
        else:
            pass

    def Move_Arbitrary(self,MoveX,MoveY,dummy=None):
        if self.GUI_Disabled:
            return
        if self.HomeUR.get():
            DX = -MoveX
        else:
            DX = MoveX
        DY = MoveY
        NewXpos = self.pos_offset[0]+DX
        NewYpos = self.pos_offset[1]+DY
        self.move_head_window_temporary([NewXpos,NewYpos])

    def Move_Arb_Step(self,dx,dy):
        if self.GUI_Disabled:
            return
        if self.units.get()==""in"":
            dx_inches = round(dx*1000)
            dy_inches = round(dy*1000)
        else:
            dx_inches = round(dx/25.4*1000)
            dy_inches = round(dy/25.4*1000)
        self.Move_Arbitrary( dx_inches,dy_inches )

    def Move_Arb_Right(self,dummy=None):
        JOG_STEP = float( self.jog_step.get() )
        self.Move_Arb_Step( JOG_STEP,0 )

    def Move_Arb_Left(self,dummy=None):
        JOG_STEP = float( self.jog_step.get() )
        self.Move_Arb_Step( -JOG_STEP,0 )

    def Move_Arb_Up(self,dummy=None):
        JOG_STEP = float( self.jog_step.get() )
        self.Move_Arb_Step( 0,JOG_STEP )

    def Move_Arb_Down(self,dummy=None):
        JOG_STEP = float( self.jog_step.get() )
        self.Move_Arb_Step( 0,-JOG_STEP )

    ####################################################

    def Move_Right(self,dummy=None):
        JOG_STEP = float( self.jog_step.get() )
        self.Rapid_Move( JOG_STEP,0 )

    def Move_Left(self,dummy=None):
        JOG_STEP = float( self.jog_step.get() )
        self.Rapid_Move( -JOG_STEP,0 )

    def Move_Up(self,dummy=None):
        JOG_STEP = float( self.jog_step.get() )
        self.Rapid_Move( 0,JOG_STEP )

    def Move_Down(self,dummy=None):
        JOG_STEP = float( self.jog_step.get() )
        self.Rapid_Move( 0,-JOG_STEP )

    def Rapid_Move(self,dx,dy):
        if self.GUI_Disabled:
            return
        if self.units.get()==""in"":
            dx_inches = round(dx,3)
            dy_inches = round(dy,3)
        else:
            dx_inches = round(dx/25.4,3)
            dy_inches = round(dy/25.4,3)

        if (self.HomeUR.get()):
            dx_inches = -dx_inches

        Xnew,Ynew = self.XY_in_bounds(dx_inches,dy_inches)
        dxmils = (Xnew - self.laserX)*1000.0
        dymils = (Ynew - self.laserY)*1000.0

        if self.k40 == None:
            self.laserX  = Xnew
            self.laserY  = Ynew
            self.menu_View_Refresh()
        elif self.Send_Rapid_Move(dxmils,dymils):
            self.laserX  = Xnew
            self.laserY  = Ynew
            self.menu_View_Refresh()
        

    def Send_Rapid_Move(self,dxmils,dymils):
        try:
            if self.k40 != None:
                Xscale = float(self.LaserXscale.get())
                Yscale = float(self.LaserYscale.get())
                if self.rotary.get():
                    Rscale = float(self.LaserRscale.get())
                    Yscale = Yscale*Rscale
                    
                if Xscale != 1.0 or Yscale != 1.0:    
                    dxmils = int(round(dxmils *Xscale))
                    dymils = int(round(dymils *Yscale))
                self.k40.n_timeouts = 10
                
                if self.rotary.get() and float(self.rapid_feed.get()):
                    self.slow_jog(int(dxmils),int(dymils))
                else:
                    self.k40.rapid_move(int(dxmils),int(dymils))


                return True
            else:
                return True
        #except StandardError as e:
        except Exception as e:
            msg1 = ""Rapid Move Failed: ""
            msg2 = ""%s"" %(e)
            if msg2 == """":
                formatted_lines = traceback.format_exc().splitlines()
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            debug_message(traceback.format_exc())
            return False


    def slow_jog(self,dxmils,dymils):
        if int(dxmils)==0 and int(dymils)==0:
            return
        self.stop[0]=False
        Rapid_data=[]
        Rapid_inst = egv(target=lambda s:Rapid_data.append(s))
        Rapid_feed = float(self.rapid_feed.get())*self.feed_factor()
        Rapid_inst.make_egv_rapid(dxmils,dymils,Feed=Rapid_feed,board_name=self.board_name.get())
        self.send_egv_data(Rapid_data, 1, None)
        self.stop[0]=True

    def update_gui(self, message=None, bgcolor='white'):
        if message!=None:
            self.statusMessage.set(message)
            self.statusbar.configure( bg = bgcolor )
        self.master.update()
        return True

    def set_gui(self,new_state=""normal""):
        if new_state==""normal"":
            self.GUI_Disabled=False
        else:
            self.GUI_Disabled=True

        try:
            self.menuBar.entryconfigure(""File""    , state=new_state)
            self.menuBar.entryconfigure(""View""    , state=new_state)
            self.menuBar.entryconfigure(""Tools""     , state=new_state)
            self.menuBar.entryconfigure(""Settings"", state=new_state)
            self.menuBar.entryconfigure(""Help""    , state=new_state)
            self.PreviewCanvas.configure(state=new_state)
            
            for w in self.master.winfo_children():
                try:
                    w.configure(state=new_state)
                except:
                    pass
            self.Stop_Button.configure(state=""normal"")
            self.statusbar.configure(state=""normal"")
            self.master.update()
        except:
            if DEBUG:
                debug_message(traceback.format_exc())

    def Vector_Cut(self, output_filename=None):
        self.Prepare_for_laser_run(""Vector Cut: Processing Vector Data."")
        if self.VcutData.ecoords!=[]:
            self.send_data(""Vector_Cut"", output_filename)
        else:
            self.statusbar.configure( bg = 'yellow' )
            self.statusMessage.set(""No vector data to cut"")
        self.Finish_Job()
        
    def Vector_Eng(self, output_filename=None):
        self.Prepare_for_laser_run(""Vector Engrave: Processing Vector Data."")
        if self.VengData.ecoords!=[]:
            self.send_data(""Vector_Eng"", output_filename)
        else:
            self.statusbar.configure( bg = 'yellow' )
            self.statusMessage.set(""No vector data to engrave"")
        self.Finish_Job()

    def Trace_Eng(self, output_filename=None):
        self.Prepare_for_laser_run(""Boundary Trace: Processing Data."")
        self.trace_coords = self.make_trace_path()

        if self.trace_coords!=[]:
            self.send_data(""Trace_Eng"", output_filename)
        else:
            self.statusbar.configure( bg = 'yellow' )
            self.statusMessage.set(""No trace data to follow"")
        self.Finish_Job()

    def Raster_Eng(self, output_filename=None):
        self.Prepare_for_laser_run(""Raster Engraving: Processing Image Data."")
        try:
            self.make_raster_coords()
            if self.RengData.ecoords!=[]:
                self.send_data(""Raster_Eng"", output_filename)
            else:
                self.statusbar.configure( bg = 'yellow' )
                self.statusMessage.set(""No raster data to engrave"")

        except MemoryError as e:
            msg1 = ""Memory Error:""
            msg2 = ""Memory Error:  Out of Memory.""
            self.statusMessage.set(msg2)
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
            
        except Exception as e:
            msg1 = ""Making Raster Data Stopped: ""
            msg2 = ""%s"" %(e)
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
        self.Finish_Job()

    def Raster_Vector_Eng(self, output_filename=None):
        self.Prepare_for_laser_run(""Raster Engraving: Processing Image and Vector Data."")
        try:
            self.make_raster_coords()
            if self.RengData.ecoords!=[] or self.VengData.ecoords!=[]:
                self.send_data(""Raster_Eng+Vector_Eng"", output_filename)
            else:
                self.statusbar.configure( bg = 'yellow' )
                self.statusMessage.set(""No data to engrave"")
        except Exception as e:
            msg1 = ""Preparing Data Stopped: ""
            msg2 = ""%s"" %(e)
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
        self.Finish_Job()

    def Vector_Eng_Cut(self, output_filename=None):
        self.Prepare_for_laser_run(""Vector Cut: Processing Vector Data."")
        if self.VcutData.ecoords!=[] or self.VengData.ecoords!=[]:
            self.send_data(""Vector_Eng+Vector_Cut"", output_filename)
        else:
            self.statusbar.configure( bg = 'yellow' )
            self.statusMessage.set(""No vector data."")
        self.Finish_Job()
        
    def Raster_Vector_Cut(self, output_filename=None):
        self.Prepare_for_laser_run(""Raster Engraving: Processing Image and Vector Data."")
        try:
            self.make_raster_coords()
            if self.RengData.ecoords!=[] or self.VengData.ecoords!=[] or self.VcutData.ecoords!=[]:
                self.send_data(""Raster_Eng+Vector_Eng+Vector_Cut"", output_filename)
            else:
                self.statusbar.configure( bg = 'yellow' )
                self.statusMessage.set(""No data to engrave/cut"")
        except Exception as e:
            msg1 = ""Preparing Data Stopped: ""
            msg2 = ""%s"" %(e)
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
        self.Finish_Job()
        
    def Gcode_Cut(self, output_filename=None):
        self.Prepare_for_laser_run(""G Code Cutting."")
        if self.GcodeData.ecoords!=[]:
            self.send_data(""Gcode_Cut"", output_filename)
        else:
            self.statusbar.configure( bg = 'yellow' )
            self.statusMessage.set(""No g-code data to cut"")
        self.Finish_Job()

    def Prepare_for_laser_run(self,msg):
        self.stop[0]=False
        self.move_head_window_temporary([0,0])
        self.set_gui(""disabled"")
        self.statusbar.configure( bg = 'green' )
        self.statusMessage.set(msg)
        self.master.update()

    def Finish_Job(self, event=None):
        self.set_gui(""normal"")
        self.stop[0]=True
        if self.post_home.get():
            self.Unlock()

        if self.post_beep.get():
            self.master.bell()

        stderr = ''
        stdout = ''
        if self.post_exec.get():
            cmd = [self.batch_path.get()]
            from subprocess import Popen, PIPE
            startupinfo=None
            proc = Popen(cmd, shell=False, stdout=PIPE, stderr=PIPE, stdin=PIPE, startupinfo=startupinfo)
            stdout,stderr = proc.communicate()

        if self.post_disp.get() or stderr != '':
            msg1 = ''
            minutes = floor(self.run_time / 60)
            seconds = self.run_time - minutes*60
            msg2 = ""Job Ended.\nRun Time = %02d:%02d"" %(minutes,seconds)
            if stdout != '':
                msg2=msg2+'\n\nBatch File Output:\n'+stdout
            if stderr != '':
                msg2=msg2+'\n\nBatch File Errors:\n'+stderr
            self.run_time = 0
            message_box(msg1, msg2)


    def make_trace_path(self):
        my_hull = hull2D()
        if self.inputCSYS.get() and self.RengData.image == None:
            xmin,xmax,ymin,ymax = 0.0,0.0,0.0,0.0
        else:
            xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
            
        startx = xmin
        starty = ymax

        #######################################
        Vcut_coords = self.VcutData.ecoords
        Veng_coords = self.VengData.ecoords
        Gcode_coords= self.GcodeData.ecoords
        if self.mirror.get() or self.rotate.get():
            Vcut_coords = self.mirror_rotate_vector_coords(Vcut_coords)
            Veng_coords = self.mirror_rotate_vector_coords(Veng_coords)
            Gcode_coords= self.mirror_rotate_vector_coords(Gcode_coords)

        #######################################
        if self.RengData.ecoords==[]:
            if self.stop[0] == True:
                self.stop[0]=False
                self.make_raster_coords()
                self.stop[0]=True
            else:
                self.make_raster_coords()

        RengHullCoords = []
        Xscale = 1/float(self.LaserXscale.get())
        Yscale = 1/float(self.LaserYscale.get())
        if self.rotary.get():
            Rscale = 1/float(self.LaserRscale.get())
            Yscale = Yscale*Rscale
            
        for point in self.RengData.hull_coords:
            RengHullCoords.append([point[0]*Xscale+xmin, point[1]*Yscale, point[2]])
            
        all_coords = []
        all_coords.extend(Vcut_coords)
        all_coords.extend(Veng_coords)
        all_coords.extend(Gcode_coords)
        all_coords.extend(RengHullCoords)

        trace_coords=[]
        if all_coords != []:
            trace_coords = my_hull.convexHullecoords(all_coords)
            gap = float(self.trace_gap.get())/self.units_scale
            trace_coords = self.offset_eccords(trace_coords,gap)

        trace_coords,startx,starty = self.scale_vector_coords(trace_coords,startx,starty)
        return trace_coords

            
    ################################################################################
    def Sort_Paths(self,ecoords,i_loop=2):
        ##########################
        ###   find loop ends   ###
        ##########################
        Lbeg=[]
        Lend=[]
        if len(ecoords)>0:
            Lbeg.append(0)
            loop_old=ecoords[0][i_loop]
            for i in range(1,len(ecoords)):
                loop = ecoords[i][i_loop]
                if loop != loop_old:
                    Lbeg.append(i)
                    Lend.append(i-1)
                loop_old=loop
            Lend.append(i)

        #######################################################
        # Find new order based on distance to next beg or end #
        #######################################################
        order_out = []
        use_beg=0
        if len(ecoords)>0:
            order_out.append([Lbeg[0],Lend[0]])
        inext = 0
        total=len(Lbeg)
        for i in range(total-1):
            if use_beg==1:
                ii=Lbeg.pop(inext)
                Lend.pop(inext)
            else:
                ii=Lend.pop(inext)
                Lbeg.pop(inext)

            Xcur = ecoords[ii][0]
            Ycur = ecoords[ii][1]

            dx = Xcur - ecoords[ Lbeg[0] ][0]
            dy = Ycur - ecoords[ Lbeg[0] ][1]
            min_dist = dx*dx + dy*dy

            dxe = Xcur - ecoords[ Lend[0] ][0]
            dye = Ycur - ecoords[ Lend[0] ][1]
            min_diste = dxe*dxe + dye*dye

            inext=0
            inexte=0
            for j in range(1,len(Lbeg)):
                dx = Xcur - ecoords[ Lbeg[j] ][0]
                dy = Ycur - ecoords[ Lbeg[j] ][1]
                dist = dx*dx + dy*dy
                if dist < min_dist:
                    min_dist=dist
                    inext=j
                ###
                dxe = Xcur - ecoords[ Lend[j] ][0]
                dye = Ycur - ecoords[ Lend[j] ][1]
                diste = dxe*dxe + dye*dye
                if diste < min_diste:
                    min_diste=diste
                    inexte=j
                ###
            if min_diste < min_dist:
                inext=inexte
                order_out.append([Lend[inexte],Lbeg[inexte]])
                use_beg=1
            else:
                order_out.append([Lbeg[inext],Lend[inext]])
                use_beg=0
        ###########################################################
        return order_out
    
    #####################################################
    # determine if a point is inside a given polygon or not
    # Polygon is a list of (x,y) pairs.
    # http://www.ariel.com.au/a/python-point-int-poly.html
    #####################################################
    def point_inside_polygon(self,x,y,poly):
        n = len(poly)
        inside = -1
        p1x = poly[0][0]
        p1y = poly[0][1]
        for i in range(n+1):
            p2x = poly[i%n][0]
            p2y = poly[i%n][1]
            if y > min(p1y,p2y):
                if y <= max(p1y,p2y):
                    if x <= max(p1x,p2x):
                        if p1y != p2y:
                            xinters = (y-p1y)*(p2x-p1x)/(p2y-p1y)+p1x
                        if p1x == p2x or x <= xinters:
                            inside = inside * -1
            p1x,p1y = p2x,p2y

        return inside

    def optimize_paths(self,ecoords,inside_check=True):
        order_out = self.Sort_Paths(ecoords)    
        lastx=-999
        lasty=-999
        Acc=0.004
        cuts=[]

        for line in order_out:
            temp=line
            if temp[0] > temp[1]:
                step = -1
            else:
                step = 1

            loop_old = -1
            
            for i in range(temp[0],temp[1]+step,step):
                x1   = ecoords[i][0]
                y1   = ecoords[i][1]
                loop = ecoords[i][2]
                # check and see if we need to move to a new discontinuous start point
                if (loop != loop_old):
                    dx = x1-lastx
                    dy = y1-lasty
                    dist = sqrt(dx*dx + dy*dy)
                    if dist > Acc:
                        cuts.append([[x1,y1]])
                    else:
                        cuts[-1].append([x1,y1])
                else:
                    cuts[-1].append([x1,y1])
                lastx = x1
                lasty = y1
                loop_old = loop

        if inside_check:
            #####################################################
            # For each loop determine if other loops are inside #
            #####################################################
            Nloops=len(cuts)
            self.LoopTree=[]
            for iloop in range(Nloops):
                self.LoopTree.append([])
    ##            CUR_PCT=float(iloop)/Nloops*100.0
    ##            if (not self.batch.get()):
    ##                self.statusMessage.set('Determining Which Side of Loop to Cut: %d of %d' %(iloop+1,Nloops))
    ##                self.master.update()
                ipoly = cuts[iloop]
                ## Check points in other loops (could just check one) ##
                if ipoly != []:
                    for jloop in range(Nloops):
                        if jloop != iloop:
                            inside = 0
                            inside = inside + self.point_inside_polygon(cuts[jloop][0][0],cuts[jloop][0][1],ipoly)
                            if inside > 0:
                                self.LoopTree[iloop].append(jloop)
            #####################################################
            for i in range(Nloops):
                lns=[]
                lns.append(i)
                self.remove_self_references(lns,self.LoopTree[i])

            self.order=[]
            self.loops = list(range(Nloops))
            for i in range(Nloops):
                if self.LoopTree[i]!=[]:
                    self.addlist(self.LoopTree[i])
                    self.LoopTree[i]=[]
                if self.loops[i]!=[]:
                    self.order.append(self.loops[i])
                    self.loops[i]=[]
        #END inside_check
            ecoords_out = []
            for i in self.order:
                line = cuts[i]
                for coord in line:
                    ecoords_out.append([coord[0],coord[1],i])
        #END inside_check
        else:
            ecoords_out = []
            for i in range(len(cuts)):
                line = cuts[i]
                for coord in line:
                    ecoords_out.append([coord[0],coord[1],i])
                    
        return ecoords_out
            
    def remove_self_references(self,loop_numbers,loops):
        for i in range(0,len(loops)):
            for j in range(0,len(loop_numbers)):
                if loops[i]==loop_numbers[j]:
                    loops.pop(i)
                    return
            if self.LoopTree[loops[i]]!=[]:
                loop_numbers.append(loops[i])
                self.remove_self_references(loop_numbers,self.LoopTree[loops[i]])

    def addlist(self,list):
        for i in list:
            try: #this try/except is a bad hack fix to a recursion error. It should be fixed properly later.
                if self.LoopTree[i]!=[]:
                    self.addlist(self.LoopTree[i]) #too many recursions here causes cmp error
                    self.LoopTree[i]=[]
            except:
                pass
            if self.loops[i]!=[]:
                self.order.append(self.loops[i])
                self.loops[i]=[]


    def mirror_rotate_vector_coords(self,coords):
        xmin = self.Design_bounds[0]
        xmax = self.Design_bounds[1]
        coords_rotate_mirror=[]
        
        for i in range(len(coords)):
            coords_rotate_mirror.append(coords[i][:])
            if self.mirror.get():
                if self.inputCSYS.get() and self.RengData.image == None:
                    coords_rotate_mirror[i][0]=-coords_rotate_mirror[i][0]
                else:
                    coords_rotate_mirror[i][0]=xmin+xmax-coords_rotate_mirror[i][0]
                
                
            if self.rotate.get():
                x = coords_rotate_mirror[i][0]
                y = coords_rotate_mirror[i][1]
                coords_rotate_mirror[i][0] = -y
                coords_rotate_mirror[i][1] =  x
                
        return coords_rotate_mirror

    def scale_vector_coords(self,coords,startx,starty):
        
        Xscale = float(self.LaserXscale.get())
        Yscale = float(self.LaserYscale.get())
        if self.rotary.get():
            Rscale = float(self.LaserRscale.get())
            Yscale = Yscale*Rscale

        coords_scale=[]
        if Xscale != 1.0 or Yscale != 1.0:
            for i in range(len(coords)):
                coords_scale.append(coords[i][:])
                x = coords_scale[i][0]
                y = coords_scale[i][1]
                coords_scale[i][0] = x*Xscale
                coords_scale[i][1] = y*Yscale
            scaled_startx = startx*Xscale
            scaled_starty = starty*Yscale
        else:
            coords_scale = coords
            scaled_startx = startx
            scaled_starty = starty

        return coords_scale,scaled_startx,scaled_starty


    def feed_factor(self):
        if self.units.get()=='in':
            feed_factor = 25.4/60.0
        else:
            feed_factor = 1.0
        return feed_factor
  
    def send_data(self,operation_type=None, output_filename=None):
        num_passes=0
        if self.k40 == None and output_filename == None:
            self.statusMessage.set(""Laser Cutter is not Initialized..."")
            self.statusbar.configure( bg = 'red' ) 
            return
        try:
            feed_factor=self.feed_factor()
            
            if self.inputCSYS.get() and self.RengData.image == None:
                xmin,xmax,ymin,ymax = 0.0,0.0,0.0,0.0
            else:
                xmin,xmax,ymin,ymax = self.Get_Design_Bounds() 
                        
            startx = xmin
            starty = ymax

            if self.HomeUR.get():
                Xscale = float(self.LaserXscale.get())
                FlipXoffset = Xscale*xmin + Xscale*xmax
                if self.rotate.get():
                    startx = -xmin
            else:
                FlipXoffset = None

            if self.rotary.get():
                Rapid_Feed = float(self.rapid_feed.get())*feed_factor
            else:
                Rapid_Feed = 0.0
                
            Raster_Eng_data=[]
            Vector_Eng_data=[]
            Trace_Eng_data=[]
            Vector_Cut_data=[]
            G_code_Cut_data=[]
                        
            if (operation_type.find(""Vector_Cut"") > -1) and  (self.VcutData.ecoords!=[]):
                Feed_Rate = float(self.Vcut_feed.get())*feed_factor
                self.statusMessage.set(""Vector Cut: Determining Cut Order...."")
                self.master.update()
                if not self.VcutData.sorted and self.inside_first.get():
                    self.VcutData.set_ecoords(self.optimize_paths(self.VcutData.ecoords),data_sorted=True)


##                DEBUG_PLOT=False
##                test_ecoords=self.VcutData.ecoords
##                if DEBUG_PLOT:
##                    import matplotlib.pyplot as plt
##                    plt.ion()
##                    plt.clf()         
##                    X=[]
##                    Y=[]
##                    LOOP_OLD = test_ecoords[0][2]
##                    for i in range(len(test_ecoords)):
##                        LOOP = test_ecoords[i][2]
##                        if LOOP != LOOP_OLD:
##                            plt.plot(X,Y)
##                            plt.pause(.5)
##                            X=[]
##                            Y=[]
##                            LOOP_OLD=LOOP
##                        X.append(test_ecoords[i][0])
##                        Y.append(test_ecoords[i][1])
##                    plt.plot(X,Y)


                self.statusMessage.set(""Generating EGV data..."")
                self.master.update()

                Vcut_coords = self.VcutData.ecoords
                if self.mirror.get() or self.rotate.get():
                    Vcut_coords = self.mirror_rotate_vector_coords(Vcut_coords)

                Vcut_coords,startx,starty = self.scale_vector_coords(Vcut_coords,startx,starty)
                Vector_Cut_egv_inst = egv(target=lambda s:Vector_Cut_data.append(s))   
                Vector_Cut_egv_inst.make_egv_data(
                                                Vcut_coords,                      \
                                                startX=startx,                    \
                                                startY=starty,                    \
                                                Feed = Feed_Rate,                 \
                                                board_name=self.board_name.get(), \
                                                Raster_step = 0,                  \
                                                update_gui=self.update_gui,       \
                                                stop_calc=self.stop,              \
                                                FlipXoffset=FlipXoffset,          \
                                                Rapid_Feed_Rate = Rapid_Feed,     \
                                                use_laser=True
                                                )

            if (operation_type.find(""Vector_Eng"") > -1) and  (self.VengData.ecoords!=[]):
                Feed_Rate = float(self.Veng_feed.get())*feed_factor
                self.statusMessage.set(""Vector Engrave: Determining Cut Order...."")
                self.master.update()
                if not self.VengData.sorted and self.inside_first.get():
                    self.VengData.set_ecoords(self.optimize_paths(self.VengData.ecoords,inside_check=False),data_sorted=True)
                self.statusMessage.set(""Generating EGV data..."")
                self.master.update()

                Veng_coords = self.VengData.ecoords
                if self.mirror.get() or self.rotate.get():
                    Veng_coords = self.mirror_rotate_vector_coords(Veng_coords)

                Veng_coords,startx,starty = self.scale_vector_coords(Veng_coords,startx,starty)
                Vector_Eng_egv_inst = egv(target=lambda s:Vector_Eng_data.append(s))
                Vector_Eng_egv_inst.make_egv_data(
                                                Veng_coords,                      \
                                                startX=startx,                    \
                                                startY=starty,                    \
                                                Feed = Feed_Rate,                 \
                                                board_name=self.board_name.get(), \
                                                Raster_step = 0,                  \
                                                update_gui=self.update_gui,       \
                                                stop_calc=self.stop,              \
                                                FlipXoffset=FlipXoffset,          \
                                                Rapid_Feed_Rate = Rapid_Feed,     \
                                                use_laser=True
                                                )


            if (operation_type.find(""Trace_Eng"") > -1) and (self.trace_coords!=[]):
                Feed_Rate = float(self.trace_speed.get())*feed_factor
                laser_on = self.trace_w_laser.get()
                self.statusMessage.set(""Generating EGV data..."")
                self.master.update()
                Trace_Eng_egv_inst = egv(target=lambda s:Trace_Eng_data.append(s))
                Trace_Eng_egv_inst.make_egv_data(
                                                self.trace_coords,                \
                                                startX=startx,                    \
                                                startY=starty,                    \
                                                Feed = Feed_Rate,                 \
                                                board_name=self.board_name.get(), \
                                                Raster_step = 0,                  \
                                                update_gui=self.update_gui,       \
                                                stop_calc=self.stop,              \
                                                FlipXoffset=FlipXoffset,          \
                                                Rapid_Feed_Rate = Rapid_Feed,     \
                                                use_laser=laser_on
                                                )
                
                
            if (operation_type.find(""Raster_Eng"") > -1) and  (self.RengData.ecoords!=[]):
                Feed_Rate = float(self.Reng_feed.get())*feed_factor
                Raster_step = self.get_raster_step_1000in()
                if not self.engraveUP.get():
                    Raster_step = -Raster_step
                    
                raster_startx = 0

                Yscale = float(self.LaserYscale.get())
                if self.rotary.get():
                    Rscale = float(self.LaserRscale.get())
                    Yscale = Yscale*Rscale
                raster_starty = Yscale*starty

                self.statusMessage.set(""Generating EGV data..."")
                self.master.update()
                Raster_Eng_egv_inst = egv(target=lambda s:Raster_Eng_data.append(s))
                Raster_Eng_egv_inst.make_egv_data(
                                                self.RengData.ecoords,            \
                                                startX=raster_startx,             \
                                                startY=raster_starty,             \
                                                Feed = Feed_Rate,                 \
                                                board_name=self.board_name.get(), \
                                                Raster_step = Raster_step,        \
                                                update_gui=self.update_gui,       \
                                                stop_calc=self.stop,              \
                                                FlipXoffset=FlipXoffset,          \
                                                Rapid_Feed_Rate = Rapid_Feed,     \
                                                use_laser=True
                                                )
                #print(len(Raster_Eng_data))
                Raster_Eng_data=Raster_Eng_egv_inst.strip_redundant_codes(Raster_Eng_data)
                #print(len(Raster_Eng_data))

            if (operation_type.find(""Gcode_Cut"") > -1) and (self.GcodeData.ecoords!=[]):
                self.statusMessage.set(""Generating EGV data..."")
                self.master.update()
                Gcode_coords = self.GcodeData.ecoords
                if self.mirror.get() or self.rotate.get():
                    Gcode_coords = self.mirror_rotate_vector_coords(Gcode_coords)

                Gcode_coords,startx,starty = self.scale_vector_coords(Gcode_coords,startx,starty)
                G_code_Cut_egv_inst = egv(target=lambda s:G_code_Cut_data.append(s))
                G_code_Cut_egv_inst.make_egv_data(
                                                Gcode_coords,                     \
                                                startX=startx,                    \
                                                startY=starty,                    \
                                                Feed = None,                      \
                                                board_name=self.board_name.get(), \
                                                Raster_step = 0,                  \
                                                update_gui=self.update_gui,       \
                                                stop_calc=self.stop,              \
                                                FlipXoffset=FlipXoffset,          \
                                                Rapid_Feed_Rate = Rapid_Feed,     \
                                                use_laser=True
                                                )
                
            ### Join Resulting Data together ###
            data=[]
            data.append(ord(""I""))
            if Trace_Eng_data!=[]:
                trace_passes=1
                for k in range(trace_passes):
                    if len(data)> 4:
                        data[-4]=ord(""@"")
                    data.extend(Trace_Eng_data)
            if Raster_Eng_data!=[]:
                num_passes = int(float(self.Reng_passes.get()))
                for k in range(num_passes):
                    if len(data)> 4:
                        data[-4]=ord(""@"")
                    data.extend(Raster_Eng_data)
            if Vector_Eng_data!=[]:
                num_passes = int(float(self.Veng_passes.get()))
                for k in range(num_passes):
                    if len(data)> 4:
                        data[-4]=ord(""@"")
                    data.extend(Vector_Eng_data)
            if Vector_Cut_data!=[]:
                num_passes = int(float(self.Vcut_passes.get()))
                for k in range(num_passes):
                    if len(data)> 4:
                        data[-4]=ord(""@"")
                    data.extend(Vector_Cut_data)
            if G_code_Cut_data!=[]:
                num_passes = int(float(self.Gcde_passes.get()))
                for k in range(num_passes):
                    if len(data)> 4:
                        data[-4]=ord(""@"")
                    data.extend(G_code_Cut_data)
            if len(data)< 4:
                raise Exception(""No laser data was generated."")    
                
            self.master.update()
            if output_filename != None:
                self.write_egv_to_file(data,output_filename)
            else:
                self.send_egv_data(data, 1, output_filename)
                self.menu_View_Refresh()
                
        except MemoryError as e:
            msg1 = ""Memory Error:""
            msg2 = ""Memory Error:  Out of Memory.""
            self.statusMessage.set(msg2)
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())
        
        except Exception as e:
            msg1 = ""Sending Data Stopped: ""
            msg2 = ""%s"" %(e)
            if msg2 == """":
                formatted_lines = traceback.format_exc().splitlines()
            self.statusMessage.set((msg1+msg2).split(""\n"")[0] )
            self.statusbar.configure( bg = 'red' )
            message_box(msg1, msg2)
            debug_message(traceback.format_exc())

    def send_egv_data(self,data,num_passes=1,output_filename=None):        
        pre_process_CRC        = self.pre_pr_crc.get()
        if self.k40 != None:
            self.k40.timeout       = int(float( self.t_timeout.get()  )) 
            self.k40.n_timeouts    = int(float( self.n_timeouts.get() ))
            time_start = time()
            self.k40.send_data(data,self.update_gui,self.stop,num_passes,pre_process_CRC, wait_for_laser=self.wait.get())
            self.run_time = time()-time_start
            if DEBUG:
                print((""Elapsed Time: %.6f"" %(time()-time_start)))
            
        else:
            self.statusMessage.set(""Laser is not initialized."")
            self.statusbar.configure( bg = 'yellow' )
            return
        self.menu_View_Refresh()
        
    ##########################################################################
    ##########################################################################
    def write_egv_to_file(self,data,fname):
        if len(data) == 0:
            raise Exception(""No data available to write to file."")
        try:
            fout = open(fname,'w')
        except:
            raise Exception(""Unable to open file ( %s ) for writing."" %(fname))
        fout.write(""Document type : LHYMICRO-GL file\n"")
        fout.write(""Creator-Software: K40 Whisperer\n"")
        
        fout.write(""\n"")
        fout.write(""%0%0%0%0%"")
        for char_val in data:
            char = chr(char_val)
            fout.write(""%s"" %(char))
            
        #fout.write(""\n"")
        fout.close
        self.menu_View_Refresh()
        self.statusMessage.set(""Data saved to: %s"" %(fname))
        
    def Home(self, event=None):
        if self.GUI_Disabled:
            return
        if self.k40 != None:
            self.k40.home_position()
        self.laserX  = 0.0
        self.laserY  = 0.0
        self.pos_offset = [0.0,0.0]
        self.menu_View_Refresh()

    def GoTo(self):
        xpos = float(self.gotoX.get())
        ypos = float(self.gotoY.get())
        if self.k40 != None:
            self.k40.home_position()
        self.laserX  = 0.0
        self.laserY  = 0.0
        self.Rapid_Move(xpos,ypos)
        self.menu_View_Refresh()  
        
    def Reset(self):
        if self.k40 != None:
            try:
                self.k40.reset_usb()
                self.statusMessage.set(""USB Reset Succeeded"")
            except:
                debug_message(traceback.format_exc())
                pass
            
    def Stop(self,event=None):
        if self.stop[0]==True:
            return
        line1 = ""Sending data to the laser from K40 Whisperer is currently Paused.""
        line2 = ""Press \""OK\"" to abort any jobs currently running.""
        line3 = ""Press \""Cancel\"" to resume.""
        if self.k40 != None:
            try:
                self.k40.pause_un_pause()
            except:
                if message_ask_ok_cancel(""Stop Laser Job."", ""\n%s\n%s"" %(line2,line3)):
                    self.stop[0]=True
                
        if message_ask_ok_cancel(""Stop Laser Job."", ""%s\n\n%s\n%s"" %(line1,line2,line3)):
            self.stop[0]=True
        else:
            if self.k40 != None:
                self.k40.pause_un_pause()

    def Hide_Advanced(self,event=None):
        self.advanced.set(0)
        self.menu_View_Refresh()

    def Release_USB(self):
        if self.k40 != None:
            try:
                self.k40.release_usb()
                self.statusMessage.set(""USB Release Succeeded"")
            except:
                debug_message(traceback.format_exc())
                pass
            self.k40=None
        
    def Initialize_Laser(self,event=None):
        if self.GUI_Disabled:
            return
        #lovejoy
        #self.stop[0]=True
        self.stop[0]=False
        self.Release_USB()
        self.k40=None
        self.move_head_window_temporary([0.0,0.0])      
        self.k40=K40_CLASS()
        try:
            self.k40.initialize_device()
            self.k40.say_hello()
            if self.init_home.get():
                self.Home()
            else:
                self.Unlock()

        except Exception as e:
            error_text = ""%s"" %(e)
            if ""BACKEND"" in error_text.upper():
                error_text = error_text + "" (libUSB driver not installed)""
            self.statusMessage.set(""USB Error: %s"" %(error_text))
            self.statusbar.configure( bg = 'red' )
            self.k40=None
            debug_message(traceback.format_exc())

        except:
            self.statusMessage.set(""Unknown USB Error"")
            self.statusbar.configure( bg = 'red' )
            self.k40=None
            debug_message(traceback.format_exc())

    def Unfreeze_Laser(self,event=None):
        if self.GUI_Disabled:
            return
        if self.k40 != None:
            try:
                self.k40.unfreeze()
                self.statusMessage.set(""Unfreeze Complete"")
                self.statusbar.configure( bg = 'white' )
            except:
                pass
            
    def Unlock(self,event=None):
        if self.GUI_Disabled:
            return
        if self.k40 != None:
            try:
                self.k40.unlock_rail()
                self.statusMessage.set(""Rail Unlock Succeeded"")
                self.statusbar.configure( bg = 'white' )
            except:
                self.statusMessage.set(""Rail Unlock Failed."")
                self.statusbar.configure( bg = 'red' )
                debug_message(traceback.format_exc())
                pass
    
    ##########################################################################
    ##########################################################################
            
    def menu_File_Quit(self):
        if message_ask_ok_cancel(""Exit"", ""Exiting....""):
            self.Quit_Click(None)

    def Reset_RasterPath_and_Update_Time(self, varName=0, index=0, mode=0):
        self.RengData.reset_path()
        self.refreshTime()

    def View_Refresh_and_Reset_RasterPath(self, varName=0, index=0, mode=0):
        self.RengData.reset_path()
        self.SCALE = 0
        self.menu_View_Refresh()

    def menu_View_inputCSYS_Refresh_Callback(self, varName, index, mode):
        self.move_head_window_temporary([0.0,0.0])
        self.SCALE = 0
        self.menu_View_Refresh()

    def menu_View_Refresh_Callback(self, varName=0, index=0, mode=0):
        self.SCALE = 0
        self.menu_View_Refresh()

        if DEBUG:
            curframe = inspect.currentframe()
            calframe = inspect.getouterframes(curframe, 2)
            print('menu_View_Refresh_Callback called by: %s' %(calframe[1][3]))

    def menu_View_Refresh(self):
        if DEBUG:
            curframe = inspect.currentframe()
            calframe = inspect.getouterframes(curframe, 2)
            print('menu_View_Refresh called by: %s' %(calframe[1][3]))

        try:
            app.master.title(title_text+""   ""+ self.DESIGN_FILE)
        except:
            pass
        dummy_event = Event()
        dummy_event.widget=self.master
        self.Master_Configure(dummy_event,1)
        self.Plot_Data()
        xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
        W = xmax-xmin
        H = ymax-ymin

        if self.units.get()==""in"":
            X_display = self.laserX + self.pos_offset[0]/1000.0
            Y_display = self.laserY + self.pos_offset[1]/1000.0
            W_display = W
            H_display = H
            U_display = self.units.get()
        else:
            X_display = (self.laserX + self.pos_offset[0]/1000.0)*self.units_scale
            Y_display = (self.laserY + self.pos_offset[1]/1000.0)*self.units_scale
            W_display = W*self.units_scale
            H_display = H*self.units_scale
            U_display = self.units.get()
        if self.HomeUR.get():
            X_display = -X_display

        self.statusMessage.set("" Current Position: X=%.3f Y=%.3f    ( W X H )=( %.3f%s X %.3f%s ) ""
                                %(X_display,
                                  Y_display,
                                  W_display,
                                  U_display,
                                  H_display,
                                  U_display))

        self.statusbar.configure( bg = 'white' )
        
    def menu_Inside_First_Callback(self, varName, index, mode):
        if self.GcodeData.ecoords != []:
            if self.VcutData.sorted == True:
                self.menu_Reload_Design()
            elif self.VengData.sorted == True:
                self.menu_Reload_Design()

    def menu_Mode_Change(self):
        dummy_event = Event()
        dummy_event.widget=self.master
        self.Master_Configure(dummy_event,1)

    def menu_Calc_Raster_Time(self,event=None):
        self.set_gui(""disabled"")
        self.stop[0]=False
        self.make_raster_coords()
        self.stop[0]=True
        self.refreshTime()
        self.set_gui(""normal"")
        self.menu_View_Refresh()
        

    def menu_Help_About(self):
        application=""K40 Whisperer""
        about = ""%s Version %s\n\n"" %(application,version)
        about = about + ""By Scorch.\n""
        about = about + ""\163\143\157\162\143\150\100\163\143\157\162""
        about = about + ""\143\150\167\157\162\153\163\056\143\157\155\n""
        about = about + ""https://www.scorchworks.com/\n\n""
        try:
            python_version = ""%d.%d.%d"" %(sys.version_info.major,sys.version_info.minor,sys.version_info.micro)
        except:
            python_version = """"
        about = about + ""Python ""+python_version+"" (%d bit)"" %(struct.calcsize(""P"") * 8)
        message_box(""About %s"" %(application),about)

    def menu_Help_Web(self):
        webbrowser.open_new(r""https://www.scorchworks.com/K40whisperer/k40whisperer.html"")

    def menu_Help_Manual(self):
        webbrowser.open_new(r""https://www.scorchworks.com/K40whisperer/k40w_manual.html"")

    def KEY_F1(self, event):
        if self.GUI_Disabled:
            return
        self.menu_Help_About()

    def KEY_F2(self, event):
        if self.GUI_Disabled:
            return
        self.GEN_Settings_Window()

    def KEY_F3(self, event):
        if self.GUI_Disabled:
            return
        self.RASTER_Settings_Window()

    def KEY_F4(self, event):
        if self.GUI_Disabled:
            return
        self.ROTARY_Settings_Window()
        self.menu_View_Refresh()

    def KEY_F5(self, event):
        if self.GUI_Disabled:
            return
        self.menu_View_Refresh()

    def KEY_F6(self, event):
        if self.GUI_Disabled:
            return
        self.advanced.set(not self.advanced.get())
        self.menu_View_Refresh()

    def bindConfigure(self, event):
        if not self.initComplete:
            self.initComplete = 1
            self.menu_Mode_Change()

    def Master_Configure(self, event, update=0):
        if event.widget != self.master:
            return
        x = int(self.master.winfo_x())
        y = int(self.master.winfo_y())
        w = int(self.master.winfo_width())
        h = int(self.master.winfo_height())
        if (self.x, self.y) == (-1,-1):
            self.x, self.y = x,y
        if abs(self.w-w)>10 or abs(self.h-h)>10 or update==1:
            ###################################################
            #  Form changed Size (resized) adjust as required #
            ###################################################
            self.w=w
            self.h=h

            if True:                
                # Left Column #
                w_label=90
                w_entry=48
                w_units=52

                x_label_L=10
                x_entry_L=x_label_L+w_label+20-5
                x_units_L=x_entry_L+w_entry+2

                Yloc=10
                self.Initialize_Button.place (x=12, y=Yloc, width=100*2, height=23)
                Yloc=Yloc+33

                self.Open_Button.place (x=12, y=Yloc, width=100, height=40)
                self.Reload_Button.place(x=12+100, y=Yloc, width=100, height=40)                
                if h>=560:
                    Yloc=Yloc+50
                    self.separator1.place(x=x_label_L, y=Yloc,width=w_label+75+40, height=2)
                    Yloc=Yloc+6
                    self.Label_Position_Control.place(x=x_label_L, y=Yloc, width=w_label*2, height=21)

                    Yloc=Yloc+25
                    self.Home_Button.place (x=12, y=Yloc, width=100, height=23)
                    self.UnLock_Button.place(x=12+100, y=Yloc, width=100, height=23)

                    Yloc=Yloc+33
                    self.Label_Step.place(x=x_label_L, y=Yloc, width=w_label, height=21)
                    self.Label_Step_u.place(x=x_units_L, y=Yloc, width=w_units, height=21)
                    self.Entry_Step.place(x=x_entry_L, y=Yloc, width=w_entry, height=23)

                    ###########################################################################
                    Yloc=Yloc+30
                    bsz=40
                    xoffst=35
                    self.UL_Button.place    (x=xoffst+12      ,  y=Yloc, width=bsz, height=bsz)
                    self.Up_Button.place    (x=xoffst+12+bsz  ,  y=Yloc, width=bsz, height=bsz)
                    self.UR_Button.place    (x=xoffst+12+bsz*2,  y=Yloc, width=bsz, height=bsz)
                    Yloc=Yloc+bsz
                    self.Left_Button.place  (x=xoffst+12      ,y=Yloc, width=bsz, height=bsz)
                    self.CC_Button.place    (x=xoffst+12+bsz  ,y=Yloc, width=bsz, height=bsz)
                    self.Right_Button.place (x=xoffst+12+bsz*2,y=Yloc, width=bsz, height=bsz)
                    Yloc=Yloc+bsz
                    self.LL_Button.place    (x=xoffst+12      ,  y=Yloc, width=bsz, height=bsz)
                    self.Down_Button.place  (x=xoffst+12+bsz  ,  y=Yloc, width=bsz, height=bsz)
                    self.LR_Button.place    (x=xoffst+12+bsz*2,  y=Yloc, width=bsz, height=bsz)
            
                
                    Yloc=Yloc+bsz
                    ###########################################################################
                    self.Label_GoToX.place(x=x_entry_L, y=Yloc, width=w_entry, height=23)
                    self.Label_GoToY.place(x=x_units_L, y=Yloc, width=w_entry, height=23)
                    Yloc=Yloc+25
                    self.GoTo_Button.place (x=12, y=Yloc, width=100, height=23)
                    self.Entry_GoToX.place(x=x_entry_L, y=Yloc, width=w_entry, height=23)
                    self.Entry_GoToY.place(x=x_units_L, y=Yloc, width=w_entry, height=23)
                    ###########################################################################
                else:
                    ###########################################################################
                    self.separator1.place_forget()
                    self.Label_Position_Control.place_forget()
                    ##    
                    Yloc=Yloc+50
                    self.separator1.place(x=x_label_L, y=Yloc,width=w_label+75+40, height=2)
                    Yloc=Yloc+6
                    self.Home_Button.place (x=12, y=Yloc, width=100, height=23)
                    self.UnLock_Button.place(x=12+100, y=Yloc, width=100, height=23)
                    ##
                    self.Label_Step.place_forget()
                    self.Label_Step_u.place_forget()
                    self.Entry_Step.place_forget()
                    self.UL_Button.place_forget()
                    self.Up_Button.place_forget()
                    self.UR_Button.place_forget()
                    self.Left_Button.place_forget()
                    self.CC_Button.place_forget()
                    self.Right_Button.place_forget()
                    self.LL_Button.place_forget()
                    self.Down_Button.place_forget()
                    self.LR_Button.place_forget()
                    self.Label_GoToX.place_forget()
                    self.Label_GoToY.place_forget()
                    self.GoTo_Button.place_forget()
                    self.Entry_GoToX.place_forget()
                    self.Entry_GoToY.place_forget()
                    ###########################################################################

                #From Bottom up
                BUinit = self.h-70
                Yloc = BUinit
                self.Stop_Button.place (x=12, y=Yloc, width=100*2, height=30)
                
                self.Stop_Button.configure(bg='light coral')
                Yloc=Yloc-10+10

                wadv       = 220 #200
                wadv_use   = wadv-20
                Xvert_sep  = 220
                Xadvanced  = Xvert_sep+10
                w_label_adv= wadv-80 #  110 w_entry

                if self.GcodeData.ecoords == []:
                    self.Grun_Button.place_forget()
                    self.Reng_Veng_Vcut_Button.place_forget()
                    self.Reng_Veng_Button.place_forget()
                    self.Veng_Vcut_Button.place_forget()

                    Yloc=Yloc-30
                    self.Vcut_Button.place      (x=12, y=Yloc, width=100, height=23)
                    self.Entry_Vcut_feed.place  (x=x_entry_L, y=Yloc, width=w_entry, height=23)
                    self.Label_Vcut_feed_u.place(x=x_units_L, y=Yloc, width=w_units, height=23)
                    Y_Vcut=Yloc

                    Yloc=Yloc-30
                    self.Veng_Button.place  (x=12, y=Yloc, width=100, height=23)
                    self.Entry_Veng_feed.place(  x=x_entry_L, y=Yloc, width=w_entry, height=23)
                    self.Label_Veng_feed_u.place(x=x_units_L, y=Yloc, width=w_units, height=23)
                    Y_Veng=Yloc
                    
                    Yloc=Yloc-30
                    self.Reng_Button.place  (x=12, y=Yloc, width=100, height=23)
                    self.Entry_Reng_feed.place(  x=x_entry_L, y=Yloc, width=w_entry, height=23)
                    self.Label_Reng_feed_u.place(x=x_units_L, y=Yloc, width=w_units, height=23)
                    Y_Reng=Yloc
                    
                    if self.comb_vector.get() or self.comb_engrave.get():
                        if self.comb_engrave.get():
                            self.Veng_Button.place_forget()                    
                            self.Reng_Button.place_forget()
                        if self.comb_vector.get():
                            self.Vcut_Button.place_forget()
                            self.Veng_Button.place_forget() 
                            
                        if self.comb_engrave.get():
                            if self.comb_vector.get():
                                self.Reng_Veng_Vcut_Button.place(x=12, y=Y_Reng, width=100, height=23*3+14)
                            else:
                                self.Reng_Veng_Button.place(x=12, y=Y_Reng, width=100, height=23*2+7)
                        elif self.comb_vector.get():
                            self.Veng_Vcut_Button.place(x=12, y=Y_Veng, width=100, height=23*2+7)
                   
                    
                else:
                    self.Vcut_Button.place_forget()
                    self.Entry_Vcut_feed.place_forget()
                    self.Label_Vcut_feed_u.place_forget()
                    
                    self.Veng_Button.place_forget()
                    self.Entry_Veng_feed.place_forget()
                    self.Label_Veng_feed_u.place_forget()
                    
                    self.Reng_Button.place_forget()
                    self.Entry_Reng_feed.place_forget()
                    self.Label_Reng_feed_u.place_forget()

                    self.Reng_Veng_Vcut_Button.place_forget()
                    self.Reng_Veng_Button.place_forget()
                    self.Veng_Vcut_Button.place_forget()
                    
                    Yloc=Yloc-30
                    self.Grun_Button.place  (x=12, y=Yloc, width=100*2, height=23)
                    
                if h>=560:
                    Yloc=Yloc-15
                    self.separator2.place(x=x_label_L, y=Yloc,width=w_label+75+40, height=2)
                else:
                    self.separator2.place_forget()
                    
                # End Left Column #

                if self.advanced.get():
                   
                    self.PreviewCanvas.configure( width = self.w-240-wadv, height = self.h-50 )
                    self.PreviewCanvas_frame.place(x=220+wadv, y=10)
                    self.separator_vert.place(x=220, y=10,width=2, height=self.h-50)

                    adv_Yloc=25-10 #15
                    self.Label_Advanced_column.place(x=Xadvanced, y=adv_Yloc, width=wadv_use, height=21)
                    adv_Yloc=adv_Yloc+25
                    self.separator_adv.place(x=Xadvanced, y=adv_Yloc,width=wadv_use, height=2)

                    if h>=560:
                        adv_Yloc=adv_Yloc+25-20 #15
                        self.Label_Halftone_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_Halftone_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)
                    
                        adv_Yloc=adv_Yloc+25
                        self.Label_Negate_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_Negate_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)

                        adv_Yloc=adv_Yloc+25
                        self.separator_adv2.place(x=Xadvanced, y=adv_Yloc,width=wadv_use, height=2)
                    
                        adv_Yloc=adv_Yloc+25-20
                        self.Label_Mirror_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_Mirror_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)

                        adv_Yloc=adv_Yloc+25
                        self.Label_Rotate_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_Rotate_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)

                        adv_Yloc=adv_Yloc+25
                        self.Label_inputCSYS_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_inputCSYS_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)
                    
                        adv_Yloc=adv_Yloc+25
                        self.separator_adv3.place(x=Xadvanced, y=adv_Yloc,width=wadv_use, height=2)

                        adv_Yloc=adv_Yloc+25-20
                        self.Label_Inside_First_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_Inside_First_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)
                    
                        adv_Yloc=adv_Yloc+25
                        self.Label_Rotary_Enable_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_Rotary_Enable_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)
                    else:
                        #self.Label_Advanced_column.place_forget()
                        #self.separator_adv.place_forget()
                        self.Label_Halftone_adv.place_forget()
                        self.Checkbutton_Halftone_adv.place_forget()
                        self.Label_Negate_adv.place_forget()
                        self.Checkbutton_Negate_adv.place_forget()
                        self.separator_adv2.place_forget()
                        self.Label_Mirror_adv.place_forget()
                        self.Checkbutton_Mirror_adv.place_forget()
                        self.Label_Rotate_adv.place_forget()
                        self.Checkbutton_Rotate_adv.place_forget()
                        self.Label_inputCSYS_adv.place_forget()
                        self.Checkbutton_inputCSYS_adv.place_forget()
                        self.separator_adv3.place_forget()
                        self.Label_Inside_First_adv.place_forget()
                        self.Checkbutton_Inside_First_adv.place_forget()
                        self.Label_Rotary_Enable_adv.place_forget()
                        self.Checkbutton_Rotary_Enable_adv.place_forget()

                    adv_Yloc = BUinit
                    self.Hide_Adv_Button.place (x=Xadvanced, y=adv_Yloc, width=wadv_use, height=30)

                    if self.RengData.image != None:
                        self.Label_inputCSYS_adv.configure(state=""disabled"")
                        self.Checkbutton_inputCSYS_adv.place_forget()              
                    else:
                        self.Label_inputCSYS_adv.configure(state=""normal"")
                        
                    if self.GcodeData.ecoords == []:
                        #adv_Yloc = adv_Yloc-40
                        self.Label_Vcut_passes.place(x=Xadvanced, y=Y_Vcut, width=w_label_adv, height=21)
                        self.Entry_Vcut_passes.place(x=Xadvanced+w_label_adv+2, y=Y_Vcut, width=w_entry, height=23)

                        #adv_Yloc=adv_Yloc-30
                        self.Label_Veng_passes.place(x=Xadvanced, y=Y_Veng, width=w_label_adv, height=21)
                        self.Entry_Veng_passes.place(x=Xadvanced+w_label_adv+2, y=Y_Veng, width=w_entry, height=23)

                        #adv_Yloc=adv_Yloc-30
                        self.Label_Reng_passes.place(x=Xadvanced, y=Y_Reng, width=w_label_adv, height=21)
                        self.Entry_Reng_passes.place(x=Xadvanced+w_label_adv+2, y=Y_Reng, width=w_entry, height=23)
                        self.Label_Gcde_passes.place_forget()
                        self.Entry_Gcde_passes.place_forget()
                        adv_Yloc = Y_Reng

                       ####
                        adv_Yloc=adv_Yloc-15
                        self.separator_comb.place(x=Xadvanced-1, y=adv_Yloc, width=wadv_use, height=2)

                        adv_Yloc=adv_Yloc-25
                        self.Label_Comb_Vector_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_Comb_Vector_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)
                        
                        adv_Yloc=adv_Yloc-25
                        self.Label_Comb_Engrave_adv.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Checkbutton_Comb_Engrave_adv.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=25, height=23)
                        ####
                        
                    else:
                        adv_Yloc=adv_Yloc-40
                        self.Label_Gcde_passes.place(x=Xadvanced, y=adv_Yloc, width=w_label_adv, height=21)
                        self.Entry_Gcde_passes.place(x=Xadvanced+w_label_adv+2, y=adv_Yloc, width=w_entry, height=23)
                        self.Label_Vcut_passes.place_forget()
                        self.Entry_Vcut_passes.place_forget()
                        self.Label_Veng_passes.place_forget()
                        self.Entry_Veng_passes.place_forget()
                        self.Label_Reng_passes.place_forget()
                        self.Entry_Reng_passes.place_forget()

                else:
                    self.PreviewCanvas_frame.place_forget()
                    self.separator_vert.place_forget()
                    self.Label_Advanced_column.place_forget()
                    self.separator_adv.place_forget() 
                    self.Label_Halftone_adv.place_forget()
                    self.Checkbutton_Halftone_adv.place_forget()
                    self.Label_Negate_adv.place_forget()
                    self.Checkbutton_Negate_adv.place_forget()
                    self.separator_adv2.place_forget()
                    self.Label_Mirror_adv.place_forget()
                    self.Checkbutton_Mirror_adv.place_forget()
                    self.Label_Rotate_adv.place_forget()
                    self.Checkbutton_Rotate_adv.place_forget()
                    self.Label_inputCSYS_adv.place_forget()
                    self.Checkbutton_inputCSYS_adv.place_forget()
                    self.separator_adv3.place_forget()
                    self.Label_Inside_First_adv.place_forget()
                    self.Checkbutton_Inside_First_adv.place_forget()

                    self.Label_Rotary_Enable_adv.place_forget()
                    self.Checkbutton_Rotary_Enable_adv.place_forget()

                    self.separator_comb.place_forget()
                    self.Label_Comb_Engrave_adv.place_forget()
                    self.Checkbutton_Comb_Engrave_adv.place_forget()
                    self.Label_Comb_Vector_adv.place_forget()
                    self.Checkbutton_Comb_Vector_adv.place_forget()


                    self.Entry_Vcut_passes.place_forget()
                    self.Label_Vcut_passes.place_forget()
                    self.Entry_Veng_passes.place_forget()
                    self.Label_Veng_passes.place_forget()
                    self.Entry_Reng_passes.place_forget()
                    self.Label_Reng_passes.place_forget()
                    self.Label_Gcde_passes.place_forget()
                    self.Entry_Gcde_passes.place_forget()
                    self.Hide_Adv_Button.place_forget()
                    
                    self.PreviewCanvas.configure( width = self.w-240, height = self.h-50 )
                    self.PreviewCanvas_frame.place(x=Xvert_sep, y=10)
                    self.separator_vert.place_forget()

                self.Set_Input_States()
                
            self.Plot_Data()
            
    def Recalculate_RQD_Click(self, event):
        self.menu_View_Refresh()

    def Set_Input_States(self):
        pass
            
    def Set_Input_States_Event(self,event):
        self.Set_Input_States()

    def Set_Input_States_RASTER(self,event=None):
        if self.halftone.get():
            self.Label_Halftone_DPI.configure(state=""normal"")
            self.Halftone_DPI_OptionMenu.configure(state=""normal"")
            self.Label_Halftone_u.configure(state=""normal"")
            self.Label_bezier_M1.configure(state=""normal"")
            self.bezier_M1_Slider.configure(state=""normal"")
            self.Label_bezier_M2.configure(state=""normal"")
            self.bezier_M2_Slider.configure(state=""normal"")
            self.Label_bezier_weight.configure(state=""normal"")
            self.bezier_weight_Slider.configure(state=""normal"")
        else:
            self.Label_Halftone_DPI.configure(state=""disabled"")
            self.Halftone_DPI_OptionMenu.configure(state=""disabled"")
            self.Label_Halftone_u.configure(state=""disabled"")
            self.Label_bezier_M1.configure(state=""disabled"")
            self.bezier_M1_Slider.configure(state=""disabled"")
            self.Label_bezier_M2.configure(state=""disabled"")
            self.bezier_M2_Slider.configure(state=""disabled"")
            self.Label_bezier_weight.configure(state=""disabled"")
            self.bezier_weight_Slider.configure(state=""disabled"")

    def Set_Input_States_BATCH(self):
        if self.post_exec.get():
            self.Entry_Batch_Path.configure(state=""normal"")
        else:
            self.Entry_Batch_Path.configure(state=""disabled"")
##    def Set_Input_States_Unsharp(self,event=None):        
##        if self.unsharp_flag.get():
##            self.Label_Unsharp_Radius.configure(state=""normal"")
##            self.Label_Unsharp_Radius_u.configure(state=""normal"")
##            self.Entry_Unsharp_Radius.configure(state=""normal"")
##            self.Label_Unsharp_Percent.configure(state=""normal"")
##            self.Label_Unsharp_Percent_u.configure(state=""normal"")
##            self.Entry_Unsharp_Percent.configure(state=""normal"")
##            self.Label_Unsharp_Threshold.configure(state=""normal"")
##            self.Entry_Unsharp_Threshold.configure(state=""normal"")
##
##        else:
##            self.Label_Unsharp_Radius.configure(state=""disabled"")
##            self.Label_Unsharp_Radius_u.configure(state=""disabled"")
##            self.Entry_Unsharp_Radius.configure(state=""disabled"")
##            self.Label_Unsharp_Percent.configure(state=""disabled"")
##            self.Label_Unsharp_Percent_u.configure(state=""disabled"")
##            self.Entry_Unsharp_Percent.configure(state=""disabled"")
##            self.Label_Unsharp_Threshold.configure(state=""disabled"")
##            self.Entry_Unsharp_Threshold.configure(state=""disabled"")

    def Set_Input_States_Rotary(self,event=None):
        if self.rotary.get():
            self.Label_Laser_R_Scale.configure(state=""normal"")
            self.Entry_Laser_R_Scale.configure(state=""normal"")
            self.Label_Laser_Rapid_Feed.configure(state=""normal"")
            self.Label_Laser_Rapid_Feed_u.configure(state=""normal"")
            self.Entry_Laser_Rapid_Feed.configure(state=""normal"")
        else:
            self.Label_Laser_R_Scale.configure(state=""disabled"")
            self.Entry_Laser_R_Scale.configure(state=""disabled"")
            self.Label_Laser_Rapid_Feed.configure(state=""disabled"")
            self.Label_Laser_Rapid_Feed_u.configure(state=""disabled"")
            self.Entry_Laser_Rapid_Feed.configure(state=""disabled"")
            
#    def Set_Input_States_RASTER_Event(self,event):
#        self.Set_Input_States_RASTER()

    def Imaging_Free(self,image_in,bg=""#ffffff""):
        image_in = image_in.convert('L')
        wim,him = image_in.size
        image_out=PhotoImage(width=wim,height=him)
        pixel=image_in.load()
        if bg!=None:
            image_out.put(bg, to=(0,0,wim,him))
        for y in range(0,him):
            for x in range(0,wim):
                val=pixel[x,y]
                if val!=255:
                    image_out.put(""#%02x%02x%02x"" %(val,val,val),(x,y))
        return image_out

    ##########################################
    #        CANVAS PLOTTING STUFF           #
    ##########################################
    def Plot_Data(self):
        self.PreviewCanvas.delete(ALL)
        self.calc_button.place_forget()

        for seg in self.segID:
            self.PreviewCanvas.delete(seg)
        self.segID = []
        
        cszw = int(self.PreviewCanvas.cget(""width""))
        cszh = int(self.PreviewCanvas.cget(""height""))
        buff=10
        wc = float(cszw/2)
        hc = float(cszh/2)        
        
        maxx = float(self.LaserXsize.get()) / self.units_scale
        minx = 0.0
        maxy = 0.0
        miny = -float(self.LaserYsize.get()) / self.units_scale
        midx=(maxx+minx)/2
        midy=(maxy+miny)/2
        
                
        if self.inputCSYS.get() and self.RengData.image == None:
            xmin,xmax,ymin,ymax = 0.0,0.0,0.0,0.0
        else:
            xmin,xmax,ymin,ymax = self.Get_Design_Bounds()           
                
        if (self.HomeUR.get()):
            XlineShift = maxx - self.laserX - (xmax-xmin)
        else:
            XlineShift = self.laserX
        YlineShift = self.laserY    
        if min((xmax-xmin),(ymax-ymin)) > 0 and self.zoom2image.get():
            self.PlotScale = max((xmax-xmin)/(cszw-buff), (ymax-ymin)/(cszh-buff))
            if self.HomeUR.get():
                x_rgt =  (xmax-minx) / self.PlotScale - self.laserX / self.PlotScale + (cszw-(xmax-xmin)/self.PlotScale)/2
                x_lft =  (xmax-maxx) / self.PlotScale - self.laserX / self.PlotScale + (cszw-(xmax-xmin)/self.PlotScale)/2
            else:
                x_lft =  minx / self.PlotScale - self.laserX / self.PlotScale + (cszw-(xmax-xmin)/self.PlotScale)/2
                x_rgt =  maxx / self.PlotScale - self.laserX / self.PlotScale + (cszw-(xmax-xmin)/self.PlotScale)/2
            y_bot = -miny / self.PlotScale + self.laserY / self.PlotScale + (cszh-(ymax-ymin)/self.PlotScale)/2
            y_top = -maxy / self.PlotScale + self.laserY / self.PlotScale + (cszh-(ymax-ymin)/self.PlotScale)/2
            self.segID.append( self.PreviewCanvas.create_rectangle(
                            x_lft, y_bot, x_rgt, y_top, fill=""gray80"", outline=""gray80"", width = 0) )
        else:
            self.PlotScale = max((maxx-minx)/(cszw-buff), (maxy-miny)/(cszh-buff))
            x_lft = cszw/2 + (minx-midx) / self.PlotScale
            x_rgt = cszw/2 + (maxx-midx) / self.PlotScale
            y_bot = cszh/2 + (maxy-midy) / self.PlotScale
            y_top = cszh/2 + (miny-midy) / self.PlotScale
            self.segID.append( self.PreviewCanvas.create_rectangle(
                            x_lft, y_bot, x_rgt, y_top, fill=""gray80"", outline=""gray80"", width = 0) )


        ######################################
        ###       Plot Raster Image        ###
        ######################################
        if self.RengData.image != None:
            if self.include_Reng.get():   
                try:
                    new_SCALE = (1.0/self.PlotScale)/self.input_dpi
                    if new_SCALE != self.SCALE:
                        self.SCALE = new_SCALE
                        nw=int(self.SCALE*self.wim)
                        nh=int(self.SCALE*self.him)

                        plot_im = self.RengData.image.convert(""L"")                        
##                        if self.unsharp_flag.get():
##                            from PIL import ImageFilter
##                            filter = ImageFilter.UnsharpMask()
##                            filter.radius    = float(self.unsharp_r.get())
##                            filter.percent   = int(float(self.unsharp_p.get()))
##                            filter.threshold = int(float(self.unsharp_t.get()))
##                            plot_im = plot_im.filter(filter)
                        
                        if self.negate.get():
                            plot_im = ImageOps.invert(plot_im)

                        if self.halftone.get() == False:
                            plot_im = plot_im.point(lambda x: 0 if x<128 else 255, '1')
                            plot_im = plot_im.convert(""L"")

                        if self.mirror.get():
                            plot_im = ImageOps.mirror(plot_im)

                        if self.rotate.get():
                            plot_im = plot_im.rotate(90,expand=True)
                            nh=int(self.SCALE*self.wim)
                            nw=int(self.SCALE*self.him)
                            
                        try:
                            self.UI_image = ImageTk.PhotoImage(plot_im.resize((nw,nh), Image.LANCZOS))
                        except:
                            debug_message(""Imaging_Free Used."")
                            self.UI_image = self.Imaging_Free(plot_im.resize((nw,nh), Image.LANCZOS))
                except:
                    self.SCALE = 1
                    debug_message(traceback.format_exc())
                    
                self.Plot_Raster(self.laserX+.001, self.laserY-.001, x_lft,y_top,self.PlotScale,im=self.UI_image)
        else:
            self.UI_image = None


        ######################################
        ###       Plot Reng Coords         ###
        ######################################
        if self.include_Rpth.get() and self.RengData.ecoords!=[]:
            loop_old = -1

            #####
            Xscale = 1/float(self.LaserXscale.get())
            Yscale = 1/float(self.LaserYscale.get())
            if self.rotary.get():
                Rscale = 1/float(self.LaserRscale.get())
                Yscale = Yscale*Rscale
            ######

            for line in self.RengData.ecoords:
                XY    = line
                x1    = XY[0]*Xscale
                y1    = XY[1]*Yscale-ymax
                loop  = XY[2]
                color = ""black""
                # check and see if we need to move to a new discontinuous start point
                if (loop == loop_old):
                    self.Plot_Line(xold, yold, x1, y1, x_lft, y_top, XlineShift, YlineShift, self.PlotScale, color)
                loop_old = loop
                xold=x1
                yold=y1

            
        ######################################
        ###       Plot Veng Coords         ###
        ######################################
        if self.include_Veng.get():
            loop_old = -1
            

            plot_coords = self.VengData.ecoords
            if self.mirror.get() or self.rotate.get():
                plot_coords = self.mirror_rotate_vector_coords(plot_coords)

            for line in plot_coords:
                XY    = line
                x1    = (XY[0]-xmin)
                y1    = (XY[1]-ymax)
                loop  = XY[2]
                # check and see if we need to move to a new discontinuous start point
                if (loop == loop_old):
                    self.Plot_Line(xold, yold, x1, y1, x_lft, y_top, XlineShift, YlineShift, self.PlotScale, ""blue"")
                loop_old = loop
                xold=x1
                yold=y1

        ######################################
        ###       Plot Vcut Coords         ###
        ######################################
        if self.include_Vcut.get():
            loop_old = -1

            plot_coords = self.VcutData.ecoords
            if self.mirror.get() or self.rotate.get():
                    plot_coords = self.mirror_rotate_vector_coords(plot_coords)
                
            for line in plot_coords:
                XY    = line
                x1    = (XY[0]-xmin)
                y1    = (XY[1]-ymax)
                loop  = XY[2]
                # check and see if we need to move to a new discontinuous start point
                if (loop == loop_old):
                    self.Plot_Line(xold, yold, x1, y1, x_lft, y_top, XlineShift, YlineShift, self.PlotScale, ""red"")
                loop_old = loop
                xold=x1
                yold=y1

        ######################################
        ###       Plot Gcode Coords        ###
        ######################################
        if self.include_Gcde.get():  
            loop_old = -1
            scale=1

            plot_coords = self.GcodeData.ecoords
            if self.mirror.get() or self.rotate.get():
                    plot_coords = self.mirror_rotate_vector_coords(plot_coords)
                
            for line in plot_coords:
                XY    = line
                x1    = (XY[0]-xmin)*scale
                y1    = (XY[1]-ymax)*scale

                loop  = XY[2]
                # check and see if we need to move to a new discontinuous start point
                if (loop == loop_old):
                    self.Plot_Line(xold, yold, x1, y1, x_lft, y_top, XlineShift, YlineShift, self.PlotScale, ""white"")
                loop_old = loop
                xold=x1
                yold=y1


        ######################################
        ###       Plot Trace Coords        ###
        ######################################
        if self.trace_window.winfo_exists():  # or DEBUG:
            #####
            Xscale = 1/float(self.LaserXscale.get())
            Yscale = 1/float(self.LaserYscale.get())
            if self.rotary.get():
                Rscale = 1/float(self.LaserRscale.get())
                Yscale = Yscale*Rscale
            ######
            trace_coords = self.make_trace_path()
            for i in range(len(trace_coords)):
                trace_coords[i]=[trace_coords[i][0]*Xscale,trace_coords[i][1]*Yscale,trace_coords[i][2]]

            for line in trace_coords:
                XY    = line
                x1    = (XY[0]-xmin)*scale
                y1    = (XY[1]-ymax)*scale
                loop  = XY[2]
                # check and see if we need to move to a new discontinuous start point
                if (loop == loop_old):
                    green = ""#%02x%02x%02x"" % (0, 200, 0)
                    self.Plot_Line(xold, yold, x1, y1, x_lft, y_top, XlineShift, YlineShift,
                                   self.PlotScale, green, thick=2,tag_value=('LaserTag', 'trace'))
                loop_old = loop
                xold=x1
                yold=y1


        ######################################            
        self.refreshTime()
        dot_col = ""grey50""
        xoff = self.pos_offset[0]/1000.0
        yoff = self.pos_offset[1]/1000.0

        if abs(self.pos_offset[0])+abs(self.pos_offset[1]) > 0:
            head_offset=True
        else:
            head_offset=False
        
        self.Plot_circle(self.laserX+xoff,self.laserY+yoff,x_lft,y_top,self.PlotScale,dot_col,radius=5,cross_hair=head_offset)
        
    def Plot_Raster(self, XX, YY, Xleft, Ytop, PlotScale, im):
        if (self.HomeUR.get()):
            maxx = float(self.LaserXsize.get()) / self.units_scale
            xmin,xmax,ymin,ymax = self.Get_Design_Bounds()
            xplt = Xleft + ( maxx-XX-(xmax-xmin) )/PlotScale
        else:
            xplt = Xleft +  XX/PlotScale
            
        yplt = Ytop  - YY/PlotScale
        self.segID.append(
            self.PreviewCanvas.create_image(xplt, yplt, anchor=NW, image=self.UI_image,tags='LaserTag')
            )


    def offset_eccords(self,ecoords_in,offset_val):
        if not PYCLIPPER:
            return ecoords_in
        
        loop_num = ecoords_in[0][2]
        pco = pyclipper.PyclipperOffset()
        ecoords_out=[]
        pyclip_path = []
        for i in range(0,len(ecoords_in)):
            pyclip_path.append([ecoords_in[i][0]*1000,ecoords_in[i][1]*1000])

        pco.AddPath(pyclip_path, pyclipper.JT_ROUND, pyclipper.ET_CLOSEDPOLYGON)
        try:
            plot_coords = pco.Execute(offset_val*1000.0)[0]
            plot_coords.append(plot_coords[0])
        except:
            plot_coords=[]
            
        for i in range(0,len(plot_coords)):
            ecoords_out.append([plot_coords[i][0]/1000.0,plot_coords[i][1]/1000.0,loop_num])
        return ecoords_out
    
        
    def Plot_circle(self, XX, YY, Xleft, Ytop, PlotScale, col, radius=0, cross_hair=False):
        circle_tags = ('LaserTag','LaserDot')
        if (self.HomeUR.get()):
            maxx = float(self.LaserXsize.get()) / self.units_scale
            xplt = Xleft + maxx/PlotScale - XX/PlotScale
        else:
            xplt = Xleft + XX/PlotScale
        yplt = Ytop  - YY/PlotScale


        if cross_hair:
            radius=radius*2
            leg = int(radius*.707)
            self.segID.append(
                self.PreviewCanvas.create_polygon(
                                                xplt-radius,
                                                yplt,
                                                xplt-leg,
                                                yplt+leg,
                                                xplt,
                                                yplt+radius,
                                                xplt+leg,
                                                yplt+leg,
                                                xplt+radius,
                                                yplt,
                                                xplt+leg,
                                                yplt-leg,
                                                xplt,
                                                yplt-radius,
                                                xplt-leg,
                                                yplt-leg,
                                                fill=col,  outline=col, width = 1, stipple='gray12',tags=circle_tags ))
           
            self.segID.append(
                self.PreviewCanvas.create_line( xplt-radius,
                                                yplt,
                                                xplt+radius,
                                                yplt,
                                                fill=col, capstyle=""round"", width = 1, tags=circle_tags ))
            self.segID.append(
                self.PreviewCanvas.create_line( xplt,
                                                yplt-radius,
                                                xplt,
                                                yplt+radius,
                                                fill=col, capstyle=""round"", width = 1, tags=circle_tags ))
        else:
            self.segID.append(
                self.PreviewCanvas.create_oval(
                                                xplt-radius,
                                                yplt-radius,
                                                xplt+radius,
                                                yplt+radius,
                                                fill=col,  outline=col, width = 0, stipple='gray50',tags=circle_tags ))


    def Plot_Line(self, XX1, YY1, XX2, YY2, Xleft, Ytop, XlineShift, YlineShift, PlotScale, col, thick=0, tag_value='LaserTag'):
        xplt1 = Xleft + (XX1 + XlineShift )/PlotScale 
        xplt2 = Xleft + (XX2 + XlineShift )/PlotScale
        yplt1 = Ytop  - (YY1 + YlineShift )/PlotScale
        yplt2 = Ytop  - (YY2 + YlineShift )/PlotScale
        
        self.segID.append(
            self.PreviewCanvas.create_line( xplt1,
                                            yplt1,
                                            xplt2,
                                            yplt2,
                                            fill=col, capstyle=""round"", width = thick, tags=tag_value) )
        
    ################################################################################
    #                         Temporary Move Window                                #
    ################################################################################
    def move_head_window_temporary(self,new_pos_offset):
        if self.GUI_Disabled:
            return
        dx_inches = round(new_pos_offset[0]/1000.0,3)
        dy_inches = round(new_pos_offset[1]/1000.0,3)
        Xnew,Ynew = self.XY_in_bounds(dx_inches,dy_inches,no_size=True)

        pos_offset_X = round((Xnew-self.laserX)*1000.0)
        pos_offset_Y = round((Ynew-self.laserY)*1000.0)
        new_pos_offset = [pos_offset_X,pos_offset_Y]        
        
        if self.inputCSYS.get() and self.RengData.image == None:
            new_pos_offset = [0,0]
            xdist = -self.pos_offset[0]
            ydist = -self.pos_offset[1]
        else:
            xdist = -self.pos_offset[0] + new_pos_offset[0]
            ydist = -self.pos_offset[1] + new_pos_offset[1]
            
        if self.k40 != None:
            if self.Send_Rapid_Move( xdist,ydist ):
                self.pos_offset = new_pos_offset
                self.menu_View_Refresh()
        else:      
            self.pos_offset = new_pos_offset
            self.menu_View_Refresh()
    
    ################################################################################
    #                         General Settings Window                              #
    ################################################################################
    def GEN_Settings_Window(self):
        gen_width = 560
        gen_settings = Toplevel(width=gen_width, height=575) #460+75)
        gen_settings.grab_set() # Use grab_set to prevent user input in the main window
        gen_settings.focus_set()
        gen_settings.resizable(0,0)
        gen_settings.title('General Settings')
        gen_settings.iconname(""General Settings"")

        D_Yloc  = 6
        D_dY = 26
        xd_label_L = 12

        w_label=150
        w_entry=40
        w_units=45
        xd_entry_L=xd_label_L+w_label+10
        xd_units_L=xd_entry_L+w_entry+5
        sep_border=10

        #Radio Button
        D_Yloc=D_Yloc+D_dY
        self.Label_Units = Label(gen_settings,text=""Units"")
        self.Label_Units.place(x=xd_label_L, y=D_Yloc, width=113, height=21)
        self.Radio_Units_IN = Radiobutton(gen_settings,text=""inch"", value=""in"",
                                         width=""100"", anchor=W)
        self.Radio_Units_IN.place(x=w_label+22, y=D_Yloc, width=75, height=23)
        self.Radio_Units_IN.configure(variable=self.units, command=self.Entry_units_var_Callback )
        self.Radio_Units_MM = Radiobutton(gen_settings,text=""mm"", value=""mm"",
                                         width=""100"", anchor=W)
        self.Radio_Units_MM.place(x=w_label+110, y=D_Yloc, width=75, height=23)
        self.Radio_Units_MM.configure(variable=self.units, command=self.Entry_units_var_Callback )

        D_Yloc=D_Yloc+D_dY
        self.Label_init_home = Label(gen_settings,text=""Home Upon Initialize"")
        self.Label_init_home.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_init_home = Checkbutton(gen_settings,text="""", anchor=W)
        self.Checkbutton_init_home.place(x=xd_entry_L, y=D_Yloc, width=75, height=23)
        self.Checkbutton_init_home.configure(variable=self.init_home)

        
        D_Yloc=D_Yloc+D_dY
        self.Label_post_home = Label(gen_settings,text=""After Job Finishes:"")
        self.Label_post_home.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)

        Xoption_width = 120
        Xoption_col1  = xd_entry_L
        Xoption_col2  = xd_entry_L+Xoption_width
        Xoption_col3  = xd_entry_L+Xoption_width*2
        
        self.Checkbutton_post_home = Checkbutton(gen_settings,text=""Unlock Rail"", anchor=W)
        self.Checkbutton_post_home.place(x=Xoption_col1, y=D_Yloc, width=Xoption_width, height=23)
        self.Checkbutton_post_home.configure(variable=self.post_home)

        self.Checkbutton_post_beep = Checkbutton(gen_settings,text=""Beep"", anchor=W)
        self.Checkbutton_post_beep.place(x=Xoption_col2, y=D_Yloc, width=Xoption_width, height=23)
        self.Checkbutton_post_beep.configure(variable=self.post_beep)

        D_Yloc=D_Yloc+D_dY
        self.Checkbutton_post_disp = Checkbutton(gen_settings,text=""Popup Report"", anchor=W)
        self.Checkbutton_post_disp.place(x=Xoption_col1, y=D_Yloc, width=Xoption_width, height=23)
        self.Checkbutton_post_disp.configure(variable=self.post_disp)

        self.Checkbutton_post_exec = Checkbutton(gen_settings,text=""Run Batch File:"", anchor=W, command=self.Set_Input_States_BATCH)
        self.Checkbutton_post_exec.place(x=Xoption_col2, y=D_Yloc, width=Xoption_width, height=23)
        self.Checkbutton_post_exec.configure(variable=self.post_exec)


        self.Entry_Batch_Path = Entry(gen_settings)
        self.Entry_Batch_Path.place(x=Xoption_col3, y=D_Yloc, width=Xoption_width, height=23)
        self.Entry_Batch_Path.configure(textvariable=self.batch_path)
        

        D_Yloc=D_Yloc+D_dY
        self.Label_Preprocess_CRC = Label(gen_settings,text=""Preprocess CRC Data"")
        self.Label_Preprocess_CRC.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_Preprocess_CRC = Checkbutton(gen_settings,text="""", anchor=W)
        self.Checkbutton_Preprocess_CRC.place(x=xd_entry_L, y=D_Yloc, width=75, height=23)
        self.Checkbutton_Preprocess_CRC.configure(variable=self.pre_pr_crc)

        D_Yloc=D_Yloc+D_dY
        self.Label_Reduce_Memory = Label(gen_settings,text=""Reduce Memory Use"")
        self.Label_Reduce_Memory.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_Reduce_Memory = Checkbutton(gen_settings,text=""(needed for large designs or low memory computers)"", anchor=W)
        self.Checkbutton_Reduce_Memory.place(x=xd_entry_L, y=D_Yloc, width=350, height=23)
        self.Checkbutton_Reduce_Memory.configure(variable=self.reduced_mem)
        self.reduced_mem.trace_variable(""w"", self.Reduced_Memory_Callback)

        D_Yloc=D_Yloc+D_dY
        self.Label_Wait = Label(gen_settings,text=""Wait for Laser to Finish"")
        self.Label_Wait.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_Wait = Checkbutton(gen_settings,text=""(after all data has been sent over USB)"", anchor=W)
        self.Checkbutton_Wait.place(x=xd_entry_L, y=D_Yloc, width=350, height=23)
        self.Checkbutton_Wait.configure(variable=self.wait)
        #self.wait.trace_variable(""w"", self.Wait_Callback)
        
        #D_Yloc=D_Yloc+D_dY
        #self.Label_Timeout = Label(gen_settings,text=""USB Timeout"")
        #self.Label_Timeout.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        #self.Label_Timeout_u = Label(gen_settings,text=""ms"", anchor=W)
        #self.Label_Timeout_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
        #self.Entry_Timeout = Entry(gen_settings,width=""15"")
        #self.Entry_Timeout.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        #self.Entry_Timeout.configure(textvariable=self.t_timeout)
        #self.t_timeout.trace_variable(""w"", self.Entry_Timeout_Callback)
        #self.entry_set(self.Entry_Timeout,self.Entry_Timeout_Check(),2)

        #D_Yloc=D_Yloc+D_dY
        #self.Label_N_Timeouts = Label(gen_settings,text=""Number of Timeouts"")
        #self.Label_N_Timeouts.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        #self.Entry_N_Timeouts = Entry(gen_settings,width=""15"")
        #self.Entry_N_Timeouts.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        #self.Entry_N_Timeouts.configure(textvariable=self.n_timeouts)
        #self.n_timeouts.trace_variable(""w"", self.Entry_N_Timeouts_Callback)
        #self.entry_set(self.Entry_N_Timeouts,self.Entry_N_Timeouts_Check(),2)

        D_Yloc=D_Yloc+D_dY*1.25
        self.gen_separator1 = Frame(gen_settings, height=2, bd=1, relief=SUNKEN)
        self.gen_separator1.place(x=xd_label_L, y=D_Yloc,width=gen_width-40, height=2)

        D_Yloc=D_Yloc+D_dY*.25
        self.Label_Inkscape_title = Label(gen_settings,text=""Inkscape Options"")
        self.Label_Inkscape_title.place(x=xd_label_L, y=D_Yloc, width=gen_width-40, height=21)
        
        D_Yloc=D_Yloc+D_dY
        font_entry_width=215
        self.Label_Inkscape_Path = Label(gen_settings,text=""Inkscape Executable"")
        self.Label_Inkscape_Path.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Entry_Inkscape_Path = Entry(gen_settings,width=""15"")
        self.Entry_Inkscape_Path.place(x=xd_entry_L, y=D_Yloc, width=font_entry_width, height=23)
        self.Entry_Inkscape_Path.configure(textvariable=self.inkscape_path)
        self.Entry_Inkscape_Path.bind('<FocusIn>', self.Inkscape_Path_Message)
        self.Inkscape_Path = Button(gen_settings,text=""Find Inkscape"")
        self.Inkscape_Path.place(x=xd_entry_L+font_entry_width+10, y=D_Yloc, width=110, height=23)
        self.Inkscape_Path.bind(""<ButtonRelease-1>"", self.Inkscape_Path_Click)

        D_Yloc=D_Yloc+D_dY
        self.Label_Ink_Timeout = Label(gen_settings,text=""Inkscape Timeout"")
        self.Label_Ink_Timeout.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Label_Ink_Timeout_u = Label(gen_settings,text=""minutes"", anchor=W)
        self.Label_Ink_Timeout_u.place(x=xd_units_L, y=D_Yloc, width=w_units*2, height=21)
        self.Entry_Ink_Timeout = Entry(gen_settings,width=""15"")
        self.Entry_Ink_Timeout.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_Ink_Timeout.configure(textvariable=self.ink_timeout)
        self.ink_timeout.trace_variable(""w"", self.Entry_Ink_Timeout_Callback)
        self.entry_set(self.Entry_Ink_Timeout,self.Entry_Ink_Timeout_Check(),2)

        D_Yloc=D_Yloc+D_dY*1.25
        self.gen_separator2 = Frame(gen_settings, height=2, bd=1, relief=SUNKEN)
        self.gen_separator2.place(x=xd_label_L, y=D_Yloc,width=gen_width-40, height=2)

        D_Yloc=D_Yloc+D_dY*.5
        self.Label_no_com = Label(gen_settings,text=""Home in Upper Right"")
        self.Label_no_com.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_no_com = Checkbutton(gen_settings,text="""", anchor=W)
        self.Checkbutton_no_com.place(x=xd_entry_L, y=D_Yloc, width=75, height=23)
        self.Checkbutton_no_com.configure(variable=self.HomeUR)
        self.HomeUR.trace_variable(""w"",self.menu_View_Refresh_Callback)        

        D_Yloc=D_Yloc+D_dY 
        self.Label_Board_Name      = Label(gen_settings,text=""Board Name"", anchor=CENTER )
        self.Board_Name_OptionMenu = OptionMenu(gen_settings, self.board_name,
                                            ""LASER-M2"",
                                            ""LASER-M1"",
                                            ""LASER-M"",
                                            ""LASER-B2"",
                                            ""LASER-B1"",
                                            ""LASER-B"",
                                            ""LASER-A"")
        self.Label_Board_Name.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Board_Name_OptionMenu.place(x=xd_entry_L, y=D_Yloc, width=w_entry*3, height=23)

        D_Yloc=D_Yloc+D_dY
        self.Label_Laser_Area_Width = Label(gen_settings,text=""Laser Area Width"")
        self.Label_Laser_Area_Width.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Label_Laser_Area_Width_u = Label(gen_settings,textvariable=self.units, anchor=W)
        self.Label_Laser_Area_Width_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
        self.Entry_Laser_Area_Width = Entry(gen_settings,width=""15"")
        self.Entry_Laser_Area_Width.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_Laser_Area_Width.configure(textvariable=self.LaserXsize)
        self.LaserXsize.trace_variable(""w"", self.Entry_Laser_Area_Width_Callback)
        self.entry_set(self.Entry_Laser_Area_Width,self.Entry_Laser_Area_Width_Check(),2)

        D_Yloc=D_Yloc+D_dY
        self.Label_Laser_Area_Height = Label(gen_settings,text=""Laser Area Height"")
        self.Label_Laser_Area_Height.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Label_Laser_Area_Height_u = Label(gen_settings,textvariable=self.units, anchor=W)
        self.Label_Laser_Area_Height_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
        self.Entry_Laser_Area_Height = Entry(gen_settings,width=""15"")
        self.Entry_Laser_Area_Height.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_Laser_Area_Height.configure(textvariable=self.LaserYsize)
        self.LaserYsize.trace_variable(""w"", self.Entry_Laser_Area_Height_Callback)
        self.entry_set(self.Entry_Laser_Area_Height,self.Entry_Laser_Area_Height_Check(),2)

        D_Yloc=D_Yloc+D_dY
        self.Label_Laser_X_Scale = Label(gen_settings,text=""X Scale Factor"")
        self.Label_Laser_X_Scale.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Entry_Laser_X_Scale = Entry(gen_settings,width=""15"")
        self.Entry_Laser_X_Scale.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_Laser_X_Scale.configure(textvariable=self.LaserXscale)
        self.LaserXscale.trace_variable(""w"", self.Entry_Laser_X_Scale_Callback)
        self.entry_set(self.Entry_Laser_X_Scale,self.Entry_Laser_X_Scale_Check(),2)

        D_Yloc=D_Yloc+D_dY
        self.Label_Laser_Y_Scale = Label(gen_settings,text=""Y Scale Factor"")
        self.Label_Laser_Y_Scale.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Entry_Laser_Y_Scale = Entry(gen_settings,width=""15"")
        self.Entry_Laser_Y_Scale.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_Laser_Y_Scale.configure(textvariable=self.LaserYscale)
        self.LaserYscale.trace_variable(""w"", self.Entry_Laser_Y_Scale_Callback)
        self.entry_set(self.Entry_Laser_Y_Scale,self.Entry_Laser_Y_Scale_Check(),2)
                
        D_Yloc=D_Yloc+D_dY+10
        self.Label_SaveConfig = Label(gen_settings,text=""Configuration File"")
        self.Label_SaveConfig.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)

        self.GEN_SaveConfig = Button(gen_settings,text=""Save"")
        self.GEN_SaveConfig.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=21, anchor=""nw"")
        self.GEN_SaveConfig.bind(""<ButtonRelease-1>"", self.Write_Config_File)
        
        ## Buttons ##
        gen_settings.update_idletasks()
        Ybut=int(gen_settings.winfo_height())-30
        Xbut=int(gen_settings.winfo_width()/2)

        self.GEN_Close = Button(gen_settings,text=""Close"")
        self.GEN_Close.place(x=Xbut, y=Ybut, width=130, height=30, anchor=""center"")
        self.GEN_Close.bind(""<ButtonRelease-1>"", self.Close_Current_Window_Click)

        self.Set_Input_States_BATCH()

    ################################################################################
    #                          Raster Settings Window                              #
    ################################################################################
    def RASTER_Settings_Window(self):
        Wset=425+280
        Hset=330 #260
        raster_settings = Toplevel(width=Wset, height=Hset)
        raster_settings.grab_set() # Use grab_set to prevent user input in the main window
        raster_settings.focus_set()
        raster_settings.resizable(0,0)
        raster_settings.title('Raster Settings')
        raster_settings.iconname(""Raster Settings"")

        D_Yloc  = 6
        D_dY = 24
        xd_label_L = 12

        w_label=155
        w_entry=60
        w_units=35
        xd_entry_L=xd_label_L+w_label+10
        xd_units_L=xd_entry_L+w_entry+5

        D_Yloc=D_Yloc+D_dY
        self.Label_Rstep   = Label(raster_settings,text=""Scanline Step"", anchor=CENTER )
        self.Label_Rstep.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Label_Rstep_u = Label(raster_settings,text=""in"", anchor=W)
        self.Label_Rstep_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
        self.Entry_Rstep   = Entry(raster_settings,width=""15"")
        self.Entry_Rstep.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_Rstep.configure(textvariable=self.rast_step)
        self.rast_step.trace_variable(""w"", self.Entry_Rstep_Callback)

        D_Yloc=D_Yloc+D_dY
        self.Label_EngraveUP = Label(raster_settings,text=""Engrave Bottom Up"")
        self.Checkbutton_EngraveUP = Checkbutton(raster_settings,text="" "", anchor=W)
        self.Checkbutton_EngraveUP.configure(variable=self.engraveUP)
        self.Label_EngraveUP.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_EngraveUP.place(x=w_label+22, y=D_Yloc, width=75, height=23)
        
        D_Yloc=D_Yloc+D_dY
        self.Label_Halftone = Label(raster_settings,text=""Halftone (Dither)"")
        self.Label_Halftone.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_Halftone = Checkbutton(raster_settings,text="" "", anchor=W, command=self.Set_Input_States_RASTER)
        self.Checkbutton_Halftone.place(x=w_label+22, y=D_Yloc, width=75, height=23)
        self.Checkbutton_Halftone.configure(variable=self.halftone)
        self.halftone.trace_variable(""w"", self.menu_View_Refresh_Callback)

        ############
        D_Yloc=D_Yloc+D_dY 
        self.Label_Halftone_DPI      = Label(raster_settings,text=""Halftone Resolution"", anchor=CENTER )

        if self.reduced_mem.get():
            if self.ht_size == ""1000"": self.ht_size = ""500""
            if self.ht_size == ""333"":  self.ht_size = ""500""
            if self.ht_size == ""200"":  self.ht_size = ""250""
            if self.ht_size == ""143"":  self.ht_size = ""167""
            self.Halftone_DPI_OptionMenu = OptionMenu(raster_settings, self.ht_size,
                                                ""500"",
                                                ""250"",
                                                ""167"",
                                                ""125"")
        else:
            self.Halftone_DPI_OptionMenu = OptionMenu(raster_settings, self.ht_size,
                                                ""1000"",
                                                ""500"",
                                                ""333"",
                                                ""250"",
                                                ""200"",
                                                ""167"",
                                                ""143"",
                                                ""125"")

        self.Label_Halftone_DPI.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Halftone_DPI_OptionMenu.place(x=xd_entry_L, y=D_Yloc, width=w_entry+30, height=23)

        self.Label_Halftone_u = Label(raster_settings,text=""dpi"", anchor=W)
        self.Label_Halftone_u.place(x=xd_units_L+30, y=D_Yloc, width=w_units, height=21)

        ############
        D_Yloc=D_Yloc+D_dY+5
        self.Label_bezier_M1  = Label(raster_settings,
                                text=""Slope, Black (%.1f)""%(self.bezier_M1_default),
                                anchor=CENTER )
        self.bezier_M1_Slider = Scale(raster_settings, from_=1, to=50, resolution=0.1, \
                                orient=HORIZONTAL, variable=self.bezier_M1)
        self.bezier_M1_Slider.place(x=xd_entry_L, y=D_Yloc, width=(Wset-xd_entry_L-25-280 ))
        D_Yloc=D_Yloc+21
        self.Label_bezier_M1.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.bezier_M1.trace_variable(""w"", self.bezier_M1_Callback)
        
        D_Yloc=D_Yloc+D_dY-8
        self.Label_bezier_M2  = Label(raster_settings,
                                text=""Slope, White (%.2f)""%(self.bezier_M2_default),
                                anchor=CENTER )
        self.bezier_M2_Slider = Scale(raster_settings, from_=0.0, to=1, \
                                orient=HORIZONTAL,resolution=0.01, variable=self.bezier_M2)
        self.bezier_M2_Slider.place(x=xd_entry_L, y=D_Yloc, width=(Wset-xd_entry_L-25-280 ))
        D_Yloc=D_Yloc+21
        self.Label_bezier_M2.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.bezier_M2.trace_variable(""w"", self.bezier_M2_Callback)

        D_Yloc=D_Yloc+D_dY-8
        self.Label_bezier_weight   = Label(raster_settings,
                                     text=""Transition (%.1f)""%(self.bezier_M1_default),
                                     anchor=CENTER )
        self.bezier_weight_Slider = Scale(raster_settings, from_=0, to=10, resolution=0.1, \
                                    orient=HORIZONTAL, variable=self.bezier_weight)
        self.bezier_weight_Slider.place(x=xd_entry_L, y=D_Yloc, width=(Wset-xd_entry_L-25-280 ))
        D_Yloc=D_Yloc+21
        self.Label_bezier_weight.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.bezier_weight.trace_variable(""w"", self.bezier_weight_Callback)

##        show_unsharp = False
##        if DEBUG and show_unsharp:
##            D_Yloc=D_Yloc+D_dY
##            self.Label_UnsharpMask = Label(raster_settings,text=""Unsharp Mask"")
##            self.Label_UnsharpMask.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
##            self.Checkbutton_UnsharpMask = Checkbutton(raster_settings,text="" "", anchor=W, command=self.Set_Input_States_Unsharp)
##            self.Checkbutton_UnsharpMask.place(x=w_label+22, y=D_Yloc, width=75, height=23)
##            self.Checkbutton_UnsharpMask.configure(variable=self.unsharp_flag)
##            self.unsharp_flag.trace_variable(""w"", self.menu_View_Refresh_Callback)
##
##            D_Yloc=D_Yloc+D_dY
##            self.Label_Unsharp_Radius   = Label(raster_settings,text=""Unsharp Mask Radius"", anchor=CENTER )
##            self.Label_Unsharp_Radius.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
##            self.Label_Unsharp_Radius_u = Label(raster_settings,text=""Pixels"", anchor=W)
##            self.Label_Unsharp_Radius_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
##            self.Entry_Unsharp_Radius   = Entry(raster_settings,width=""15"")
##            self.Entry_Unsharp_Radius.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
##            self.Entry_Unsharp_Radius.configure(textvariable=self.unsharp_r)
##            self.unsharp_r.trace_variable(""w"", self.Entry_Unsharp_Radius_Callback)
##
##            D_Yloc=D_Yloc+D_dY
##            self.Label_Unsharp_Percent   = Label(raster_settings,text=""Unsharp Mask Percent"", anchor=CENTER )
##            self.Label_Unsharp_Percent.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
##            self.Label_Unsharp_Percent_u = Label(raster_settings,text=""%"", anchor=W)
##            self.Label_Unsharp_Percent_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
##            self.Entry_Unsharp_Percent   = Entry(raster_settings,width=""15"")
##            self.Entry_Unsharp_Percent.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
##            self.Entry_Unsharp_Percent.configure(textvariable=self.unsharp_p)
##            self.unsharp_p.trace_variable(""w"", self.Entry_Unsharp_Percent_Callback)
##
##            D_Yloc=D_Yloc+D_dY
##            self.Label_Unsharp_Threshold   = Label(raster_settings,text=""Unsharp Mask Threshold"", anchor=CENTER )
##            self.Label_Unsharp_Threshold.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
##            #self.Label_Unsharp_Threshold_u = Label(raster_settings,text=""Pixels"", anchor=W)
##            #self.Label_Unsharp_Threshold_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
##            self.Entry_Unsharp_Threshold   = Entry(raster_settings,width=""15"")
##            self.Entry_Unsharp_Threshold.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
##            self.Entry_Unsharp_Threshold.configure(textvariable=self.unsharp_t)
##            self.unsharp_t.trace_variable(""w"", self.Entry_Unsharp_Threshold_Callback)        

        # Bezier Canvas
        self.Bezier_frame = Frame(raster_settings, bd=1, relief=SUNKEN)
        self.Bezier_frame.place(x=Wset-280, y=10, height=265, width=265)
        self.BezierCanvas = Canvas(self.Bezier_frame, background=""white"")
        self.BezierCanvas.pack(side=LEFT, fill=BOTH, expand=1)
        self.BezierCanvas.create_line( 5,260-0,260,260-255,fill=""grey75"", capstyle=""round"", width = 2, tags='perm')


        M1 = self.bezier_M1_default
        M2 = self.bezier_M2_default
        w  = self.bezier_weight_default
        num = 10
        x,y = self.generate_bezier(M1,M2,w,n=num)
        for i in range(0,num):
            self.BezierCanvas.create_line( 5+x[i],260-y[i],5+x[i+1],260-y[i+1],fill=""grey85"", stipple='gray25',\
                                           capstyle=""round"", width = 2, tags='perm')
        

        ## Buttons ##
        raster_settings.update_idletasks()
        Ybut=int(raster_settings.winfo_height())-30
        Xbut=int(raster_settings.winfo_width()/2)

        self.RASTER_Close = Button(raster_settings,text=""Close"")
        self.RASTER_Close.place(x=Xbut, y=Ybut, width=130, height=30, anchor=""center"")
        self.RASTER_Close.bind(""<ButtonRelease-1>"", self.Close_Current_Window_Click)

        self.bezier_M1_Callback()
        self.Set_Input_States_RASTER()
        #if DEBUG and show_unsharp:
        #    self.Set_Input_States_Unsharp()


    ################################################################################
    #                         Rotary Settings Window                               #
    ################################################################################
    def ROTARY_Settings_Window(self):
        rotary_settings = Toplevel(width=350, height=175)
        rotary_settings.grab_set() # Use grab_set to prevent user input in the main window
        rotary_settings.focus_set()
        rotary_settings.resizable(0,0)
        rotary_settings.title('Rotary Settings')
        rotary_settings.iconname(""Rotary Settings"")

        D_Yloc  = 6
        D_dY = 30
        xd_label_L = 12

        w_label=180
        w_entry=40
        w_units=45
        xd_entry_L=xd_label_L+w_label+10
        xd_units_L=xd_entry_L+w_entry+5
        sep_border=10
        

        D_Yloc=D_Yloc+D_dY-15
        self.Label_Rotary_Enable = Label(rotary_settings,text=""Use Rotary Settings"")
        self.Label_Rotary_Enable.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_Rotary_Enable = Checkbutton(rotary_settings,text="""", anchor=W, command=self.Set_Input_States_Rotary)
        self.Checkbutton_Rotary_Enable.place(x=xd_entry_L, y=D_Yloc, width=75, height=23)
        self.Checkbutton_Rotary_Enable.configure(variable=self.rotary)

        D_Yloc=D_Yloc+D_dY
        self.Label_Laser_R_Scale = Label(rotary_settings,text=""Rotary Scale Factor (Y axis)"")
        self.Label_Laser_R_Scale.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Entry_Laser_R_Scale = Entry(rotary_settings,width=""15"")
        self.Entry_Laser_R_Scale.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_Laser_R_Scale.configure(textvariable=self.LaserRscale)
        self.LaserRscale.trace_variable(""w"", self.Entry_Laser_R_Scale_Callback)
        self.entry_set(self.Entry_Laser_R_Scale,self.Entry_Laser_R_Scale_Check(),2)

        D_Yloc=D_Yloc+D_dY
        self.Label_Laser_Rapid_Feed = Label(rotary_settings,text=""Rapid Speed (default=0)"")
        self.Label_Laser_Rapid_Feed.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Label_Laser_Rapid_Feed_u = Label(rotary_settings,textvariable=self.funits, anchor=W)
        self.Label_Laser_Rapid_Feed_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
        self.Entry_Laser_Rapid_Feed = Entry(rotary_settings,width=""15"")
        self.Entry_Laser_Rapid_Feed.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_Laser_Rapid_Feed.configure(textvariable=self.rapid_feed)
        self.rapid_feed.trace_variable(""w"", self.Entry_Laser_Rapid_Feed_Callback)
        self.entry_set(self.Entry_Laser_Rapid_Feed,self.Entry_Laser_Rapid_Feed_Check(),2)
        
        ## Buttons ##
        rotary_settings.update_idletasks()
        Ybut=int(rotary_settings.winfo_height())-30
        Xbut=int(rotary_settings.winfo_width()/2)

        self.GEN_Close = Button(rotary_settings,text=""Close"")
        self.GEN_Close.place(x=Xbut, y=Ybut, width=130, height=30, anchor=""center"")
        self.GEN_Close.bind(""<ButtonRelease-1>"", self.Close_Current_Window_Click)

        self.Set_Input_States_Rotary()

    ################################################################################
    #                            Trace Send Window                                 #
    ################################################################################

    def TRACE_Settings_Window(self, dummy=None):
        if self.GUI_Disabled:
            return
        trace_window = Toplevel(width=350, height=180)
        self.trace_window=trace_window
        trace_window.grab_set() # Use grab_set to prevent user input in the main window during calculations
        trace_window.resizable(0,0)
        trace_window.title('Trace Boundary')
        trace_window.iconname(""Trace Boundary"")

        def Close_Click():
            win_id=self.grab_current()
            self.PreviewCanvas.delete('trace')
            win_id.destroy()

        def Close_and_Send_Click():
            win_id=self.grab_current()
            self.PreviewCanvas.delete('trace')
            win_id.destroy()
            self.Trace_Eng()

        D_Yloc  = 0
        D_dY = 28
        xd_label_L = 12

        w_label=225
        w_entry=40
        w_units=50
        xd_entry_L=xd_label_L+w_label+10
        xd_units_L=xd_entry_L+w_entry+5

        D_Yloc=D_Yloc+D_dY
        self.Label_Laser_Trace = Label(trace_window,text=""Laser 'On' During Trace"")
        self.Label_Laser_Trace.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_Laser_Trace = Checkbutton(trace_window,text="""", anchor=W)
        self.Checkbutton_Laser_Trace.place(x=xd_entry_L, y=D_Yloc, width=75, height=23)
        self.Checkbutton_Laser_Trace.configure(variable=self.trace_w_laser)

        D_Yloc=D_Yloc+D_dY
        self.Label_Trace_Gap = Label(trace_window,text=""Gap Between Design and Trace"")
        self.Label_Trace_Gap.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Entry_Trace_Gap = Entry(trace_window,width=""15"")
        self.Entry_Trace_Gap.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Label_Trace_Gap_u = Label(trace_window,textvariable=self.units, anchor=W)
        self.Label_Trace_Gap_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
        self.Entry_Trace_Gap.configure(textvariable=self.trace_gap,justify='center')
        self.trace_gap.trace_variable(""w"", self.Entry_Trace_Gap_Callback)
        self.entry_set(self.Entry_Trace_Gap,self.Entry_Trace_Gap_Check(),2)
        if not PYCLIPPER:
            self.Label_Trace_Gap.configure(state=""disabled"")
            self.Label_Trace_Gap_u.configure(state=""disabled"")
            self.Entry_Trace_Gap.configure(state=""disabled"")
            
        D_Yloc=D_Yloc+D_dY
        self.Trace_Button = Button(trace_window,text=""Trace Boundary With Laser Head"",command=Close_and_Send_Click)
        self.Trace_Button.place(x=xd_label_L, y=D_Yloc, width=w_label, height=23)
        
        self.Entry_Trace_Speed = Entry(trace_window,width=""15"")
        self.Entry_Trace_Speed.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        green = ""#%02x%02x%02x"" % (0, 200, 0)
        self.Entry_Trace_Speed.configure(textvariable=self.trace_speed,justify='center',fg=green)
        self.trace_speed.trace_variable(""w"", self.Entry_Trace_Speed_Callback)
        self.entry_set(self.Entry_Trace_Speed,self.Entry_Trace_Speed_Check(),2)
        self.Label_Trace_Speed_u = Label(trace_window,textvariable=self.funits, anchor=W)
        self.Label_Trace_Speed_u.place(x=xd_units_L, y=D_Yloc, width=w_units, height=21)
        
        
        ## Buttons ##
        trace_window.update_idletasks()
        Ybut=int(trace_window.winfo_height())-30
        Xbut=int(trace_window.winfo_width()/2)

        self.Trace_Close = Button(trace_window,text=""Cancel"",command=Close_Click)
        self.Trace_Close.place(x=Xbut, y=Ybut, width=130, height=30, anchor=""center"")
        ################################################################################

    ################################################################################
    #                            EGV Send Window                                   #
    ################################################################################
    def EGV_Send_Window(self,EGV_filename):
        
        egv_send = Toplevel(width=400, height=180)
        egv_send.grab_set() # Use grab_set to prevent user input in the main window during calculations
        egv_send.resizable(0,0)
        egv_send.title('EGV Send')
        egv_send.iconname(""EGV Send"")

        D_Yloc  = 0
        D_dY = 28
        xd_label_L = 12

        w_label=150
        w_entry=40
        w_units=35
        xd_entry_L=xd_label_L+w_label+10
        xd_units_L=xd_entry_L+w_entry+5

        D_Yloc=D_Yloc+D_dY
        self.Label_Preprocess_CRC = Label(egv_send,text=""Preprocess CRC Data"")
        self.Label_Preprocess_CRC.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Checkbutton_Preprocess_CRC = Checkbutton(egv_send,text="""", anchor=W)
        self.Checkbutton_Preprocess_CRC.place(x=xd_entry_L, y=D_Yloc, width=75, height=23)
        self.Checkbutton_Preprocess_CRC.configure(variable=self.pre_pr_crc)

        D_Yloc=D_Yloc+D_dY
        self.Label_N_EGV_Passes = Label(egv_send,text=""Number of EGV Passes"")
        self.Label_N_EGV_Passes.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)
        self.Entry_N_EGV_Passes = Entry(egv_send,width=""15"")
        self.Entry_N_EGV_Passes.place(x=xd_entry_L, y=D_Yloc, width=w_entry, height=23)
        self.Entry_N_EGV_Passes.configure(textvariable=self.n_egv_passes)
        self.n_egv_passes.trace_variable(""w"", self.Entry_N_EGV_Passes_Callback)
        self.entry_set(self.Entry_N_EGV_Passes,self.Entry_N_EGV_Passes_Check(),2)

        D_Yloc=D_Yloc+D_dY
        font_entry_width=215
        self.Label_Inkscape_Path = Label(egv_send,text=""EGV File:"")
        self.Label_Inkscape_Path.place(x=xd_label_L, y=D_Yloc, width=w_label, height=21)

        EGV_Name = os.path.basename(EGV_filename)
        self.Label_Inkscape_Path = Label(egv_send,text=EGV_Name,anchor=""w"") #,bg=""yellow"")
        self.Label_Inkscape_Path.place(x=xd_entry_L, y=D_Yloc, width=200, height=21,anchor=""nw"")
        
        ## Buttons ##
        egv_send.update_idletasks()
        Ybut=int(egv_send.winfo_height())-30
        Xbut=int(egv_send.winfo_width()/2)

        self.EGV_Close = Button(egv_send,text=""Cancel"")
        self.EGV_Close.place(x=Xbut, y=Ybut, width=130, height=30, anchor=""e"")
        self.EGV_Close.bind(""<ButtonRelease-1>"", self.Close_Current_Window_Click)

        def Close_and_Send_Click():
            win_id=self.grab_current()
            win_id.destroy()
            self.Open_EGV(EGV_filename, n_passes=int( float(self.n_egv_passes.get()) ))
            
        self.EGV_Send = Button(egv_send,text=""Send EGV Data"",command=Close_and_Send_Click)
        self.EGV_Send.place(x=Xbut, y=Ybut, width=130, height=30, anchor=""w"")
        ################################################################################
        
        
################################################################################
#             Function for outputting messages to different locations          #
#            depending on what options are enabled                             #
################################################################################
def fmessage(text,newline=True):
    global QUIET
    if (not QUIET):
        if newline==True:
            try:
                sys.stdout.write(text)
                sys.stdout.write(""\n"")
                debug_message(traceback.format_exc())
            except:
                debug_message(traceback.format_exc())
                pass
        else:
            try:
                sys.stdout.write(text)
                debug_message(traceback.format_exc())
            except:
                debug_message(traceback.format_exc())
                pass

################################################################################
#                               Message Box                                    #
################################################################################
def message_box(title,message):
    title = ""%s (K40 Whisperer V%s)"" %(title,version)
    if VERSION == 3:
        tkinter.messagebox.showinfo(title,message)
    else:
        tkMessageBox.showinfo(title,message)
        pass

################################################################################
#                          Message Box ask OK/Cancel                           #
################################################################################
def message_ask_ok_cancel(title, mess):
    if VERSION == 3:
        result=tkinter.messagebox.askokcancel(title, mess)
    else:
        result=tkMessageBox.askokcancel(title, mess)
    return result

################################################################################
#                         Debug Message Box                                    #
################################################################################
def debug_message(message):
    global DEBUG
    title = ""Debug Message""
    if DEBUG:
        if VERSION == 3:
            tkinter.messagebox.showinfo(title,message)
        else:
            tkMessageBox.showinfo(title,message)
            pass

################################################################################
#                         Choose Units Dialog                                  #
################################################################################
if VERSION < 3:
    import tkSimpleDialog
else:
    import tkinter.simpledialog as tkSimpleDialog

class UnitsDialog(tkSimpleDialog.Dialog):
    def body(self, master):
        self.resizable(0,0)
        self.title('Units')
        self.iconname(""Units"")
        
        self.uom = StringVar()
        self.uom.set(""Millimeters"")

        Label(master, text=""Select DXF Import Units:"").grid(row=0)
        Radio_Units_IN = Radiobutton(master,text=""Inches"",        value=""Inches"")
        Radio_Units_MM = Radiobutton(master,text=""Millimeters"",   value=""Millimeters"")
        Radio_Units_CM = Radiobutton(master,text=""Centimeters"",   value=""Centimeters"")
        
        Radio_Units_IN.grid(row=1, sticky=W)
        Radio_Units_MM.grid(row=2, sticky=W)
        Radio_Units_CM.grid(row=3, sticky=W)

        Radio_Units_IN.configure(variable=self.uom)
        Radio_Units_MM.configure(variable=self.uom)
        Radio_Units_CM.configure(variable=self.uom)

    def apply(self):
        self.result = self.uom.get()
        return 


class toplevel_dummy():
    def winfo_exists(self):
        return False
    
class pxpiDialog(tkSimpleDialog.Dialog):
        
    def __init__(self,
                 parent,
                 units = ""mm"",
                 SVG_Size            =None,
                 SVG_ViewBox         =None,
                 SVG_inkscape_version=None):

        self.result = None
        self.svg_pxpi   = StringVar()
        self.other      = StringVar()
        self.svg_width  = StringVar()
        self.svg_height = StringVar()
        self.svg_units  = StringVar()
        self.fixed_size = False
        self.svg_units.set(units)
        if units==""mm"":
            self.scale=1.0
        else:
            self.scale=1/25.4

        
        ###################################
        ##       Set initial pxpi          #
        ###################################
        pxpi = 72.0
        if SVG_inkscape_version != None:
            if SVG_inkscape_version >=.92:
                pxpi = 96.0
            else:
                pxpi = 90.0
  
        self.svg_pxpi.set(""%d""%(pxpi))
        self.other.set(""%d""%(pxpi))

        ###################################
        ##       Set minx/miny            #
        ###################################
        if SVG_ViewBox!=None and SVG_ViewBox[0]!=None and SVG_ViewBox[1]!=None:
            self.minx_pixels = SVG_ViewBox[0]
            self.miny_pixels = SVG_ViewBox[1]
        else:
            self.minx_pixels = 0.0
            self.miny_pixels = 0.0
            
        ###################################
        ##       Set Initial Size         #
        ###################################
        if SVG_Size!=None and SVG_Size[2]!=None and SVG_Size[3]!=None:
            self.width_pixels = SVG_Size[2]
            self.height_pixels = SVG_Size[3]
        elif SVG_ViewBox!=None and SVG_ViewBox[2]!=None and SVG_ViewBox[3]!=None:
            self.width_pixels = SVG_ViewBox[2]
            self.height_pixels = SVG_ViewBox[3]
        else:
            self.width_pixels  = 500.0 
            self.height_pixels = 500.0
        ###################################
        ##       Set Initial Size         #
        ###################################
        if SVG_Size[0]!=None and SVG_Size[1]!=None:
            width  = SVG_Size[0] 
            height = SVG_Size[1]
            self.fixed_size=True
        else:
            width  = self.width_pixels/float(self.svg_pxpi.get())*25.4
            height = self.height_pixels/float(self.svg_pxpi.get())*25.4
            
        self.svg_width.set(""%f"" %(width*self.scale))
        self.svg_height.set(""%f"" %(height*self.scale))
        ###################################
        tkSimpleDialog.Dialog.__init__(self, parent) 


    def body(self, master):
        self.resizable(0,0)
        self.title('SVG Import Scale:')
        self.iconname(""SVG Scale"")
        
        ###########################################################################
        def Entry_custom_Check():
            try:
                value = float(self.other.get())
                if  value <= 0.0:
                    return 2 # Value is invalid number
            except:
                return 3     # Value not a number
            return 0         # Value is a valid number
        def Entry_custom_Callback(varName, index, mode):
            if Entry_custom_Check() > 0:
                Entry_Custom_pxpi.configure( bg = 'red' )
            else:
                Entry_Custom_pxpi.configure( bg = 'white' )
                pxpi = float(self.other.get())
                width  = self.width_pixels/pxpi*25.4
                height = self.height_pixels/pxpi*25.4
                if self.fixed_size:
                    pass
                else:
                    Set_Value(width=width*self.scale,height=height*self.scale)
                self.svg_pxpi.set(""custom"")
        ###################################################
        def Entry_Width_Check():
            try:
                value = float(self.svg_width.get())/self.scale
                if  value <= 0.0:
                    return 2 # Value is invalid number
            except:
                return 3     # Value not a number
            return 0         # Value is a valid number
        def Entry_Width_Callback(varName, index, mode):
            if Entry_Width_Check() > 0:
                Entry_Custom_Width.configure( bg = 'red' )
            else:
                Entry_Custom_Width.configure( bg = 'white' )
                width = float(self.svg_width.get())/self.scale
                pxpi = self.width_pixels*25.4/width
                height = self.height_pixels/pxpi*25.4
                Set_Value(other=pxpi,height=height*self.scale)
                self.svg_pxpi.set(""custom"")
        ###################################################
        def Entry_Height_Check():
            try:
                value = float(self.svg_height.get())
                if  value <= 0.0:
                    return 2 # Value is invalid number
            except:
                return 3     # Value not a number
            return 0         # Value is a valid number
        def Entry_Height_Callback(varName, index, mode):
            if Entry_Height_Check() > 0:
                Entry_Custom_Height.configure( bg = 'red' )
            else:
                Entry_Custom_Height.configure( bg = 'white' )
                height = float(self.svg_height.get())/self.scale
                pxpi = self.height_pixels*25.4/height
                width = self.width_pixels/pxpi*25.4
                Set_Value(other=pxpi,width=width*self.scale)
                self.svg_pxpi.set(""custom"")
        ###################################################       
        def SVG_pxpi_callback(varName, index, mode):
            if self.svg_pxpi.get() == ""custom"":
                try:
                    pxpi=float(self.other.get())
                except:
                    pass
            else:
                pxpi=float(self.svg_pxpi.get())
                width  = self.width_pixels/pxpi*25.4
                height = self.height_pixels/pxpi*25.4
                if self.fixed_size:
                    Set_Value(other=pxpi)
                else:
                    Set_Value(other=pxpi,width=width*self.scale,height=height*self.scale)
                
        ###########################################################################
                    
        def Set_Value(other=None,width=None,height=None):
            self.svg_pxpi.trace_vdelete(""w"",self.trace_id_svg_pxpi)
            self.other.trace_vdelete(""w"",self.trace_id_pxpi)
            self.svg_width.trace_vdelete(""w"",self.trace_id_width)
            self.svg_height.trace_vdelete(""w"",self.trace_id_height)
            self.update_idletasks()
            
            if other != None:
                self.other.set(""%f"" %(other))
            if width != None:
                self.svg_width.set(""%f"" %(width))
            if height != None:
                self.svg_height.set(""%f"" %(height))
            
            self.trace_id_svg_pxpi = self.svg_pxpi.trace_variable(""w"", SVG_pxpi_callback)
            self.trace_id_pxpi     = self.other.trace_variable(""w"", Entry_custom_Callback)
            self.trace_id_width   = self.svg_width.trace_variable(""w"", Entry_Width_Callback)
            self.trace_id_height  = self.svg_height.trace_variable(""w"", Entry_Height_Callback)
            self.update_idletasks()
            
        ###########################################################################
        t0=""This dialog opens if the SVG file you are opening\n""
        t1=""does not contain enough information to determine\n""
        t2=""the intended physical size of the design.\n""
        t3=""Select an SVG Import Scale:\n""
        Title_Text0 = Label(master, text=t0+t1+t2, anchor=W)
        Title_Text1 = Label(master, text=t3, anchor=W)
        
        Radio_SVG_pxpi_96   = Radiobutton(master,text="" 96 units/in"", value=""96"")
        Label_SVG_pxpi_96   = Label(master,text=""(File saved with Inkscape v0.92 or newer)"", anchor=W)
        
        Radio_SVG_pxpi_90   = Radiobutton(master,text="" 90 units/in"", value=""90"")
        Label_SVG_pxpi_90   = Label(master,text=""(File saved with Inkscape v0.91 or older)"", anchor=W)
        
        Radio_SVG_pxpi_72   = Radiobutton(master,text="" 72 units/in"", value=""72"")
        Label_SVG_pxpi_72   = Label(master,text=""(File saved with Adobe Illustrator)"", anchor=W)

        Radio_Res_Custom = Radiobutton(master,text="" Custom:"", value=""custom"")
        Bottom_row       = Label(master, text="" "")
        

        Entry_Custom_pxpi   = Entry(master,width=""10"")
        Entry_Custom_pxpi.configure(textvariable=self.other)
        Label_pxpi_units =  Label(master,text=""units/in"", anchor=W)
        self.trace_id_pxpi = self.other.trace_variable(""w"", Entry_custom_Callback)

        Label_Width =  Label(master,text=""Width"", anchor=W)
        Entry_Custom_Width   = Entry(master,width=""10"")
        Entry_Custom_Width.configure(textvariable=self.svg_width)
        Label_Width_units =  Label(master,textvariable=self.svg_units, anchor=W)
        self.trace_id_width = self.svg_width.trace_variable(""w"", Entry_Width_Callback)

        Label_Height =  Label(master,text=""Height"", anchor=W)
        Entry_Custom_Height   = Entry(master,width=""10"")
        Entry_Custom_Height.configure(textvariable=self.svg_height)
        Label_Height_units =  Label(master,textvariable=self.svg_units, anchor=W)
        self.trace_id_height = self.svg_height.trace_variable(""w"", Entry_Height_Callback)

        if self.fixed_size == True:
             Entry_Custom_Width.configure(state=""disabled"")
             Entry_Custom_Height.configure(state=""disabled"")
        ###########################################################################
        rn=0
        Title_Text0.grid(row=rn,column=0,columnspan=5, sticky=W)
        
        rn=rn+1
        Title_Text1.grid(row=rn,column=0,columnspan=5, sticky=W)

        rn=rn+1
        Radio_SVG_pxpi_96.grid(    row=rn, sticky=W)
        Label_SVG_pxpi_96.grid(    row=rn, column=1,columnspan=50, sticky=W)

        rn=rn+1
        Radio_SVG_pxpi_90.grid(    row=rn, sticky=W)
        Label_SVG_pxpi_90.grid(    row=rn, column=1,columnspan=50, sticky=W)
        
        rn=rn+1
        Radio_SVG_pxpi_72.grid(    row=rn, column=0, sticky=W)
        Label_SVG_pxpi_72.grid(    row=rn, column=1,columnspan=50, sticky=W)
        
        rn=rn+1
        Radio_Res_Custom.grid(    row=rn, column=0, sticky=W)
        Entry_Custom_pxpi.grid(    row=rn, column=1, sticky=E)
        Label_pxpi_units.grid(     row=rn, column=2, sticky=W)
        
        rn=rn+1
        Label_Width.grid(         row=rn, column=0, sticky=E)
        Entry_Custom_Width.grid(  row=rn, column=1, sticky=E)
        Label_Width_units.grid(   row=rn, column=2, sticky=W)

        rn=rn+1
        Label_Height.grid(        row=rn, column=0, sticky=E)
        Entry_Custom_Height.grid( row=rn, column=1, sticky=E)
        Label_Height_units.grid(  row=rn, column=2, sticky=W)

        rn=rn+1
        Bottom_row.grid(row=rn,columnspan=50)

        Radio_SVG_pxpi_96.configure  (variable=self.svg_pxpi)
        Radio_SVG_pxpi_90.configure  (variable=self.svg_pxpi)
        Radio_SVG_pxpi_72.configure  (variable=self.svg_pxpi)
        Radio_Res_Custom.configure  (variable=self.svg_pxpi)
        self.trace_id_svg_pxpi = self.svg_pxpi.trace_variable(""w"", SVG_pxpi_callback)
        ###########################################################################
    
    def apply(self):
        width  = float(self.svg_width.get())/self.scale
        height = float(self.svg_height.get())/self.scale
        pxpi    = float(self.other.get())
        viewbox = [self.minx_pixels, self.miny_pixels, width/25.4*pxpi, height/25.4*pxpi]
        self.result = pxpi,viewbox
        return 
        
################################################################################
#                          Startup Application                                 #
################################################################################
    
root = Tk()
app = Application(root)
app.master.title(title_text)
app.master.iconname(""K40"")
app.master.minsize(800,560)
app.master.geometry(""800x560"")
try:
    try:
        import tkFont
        default_font = tkFont.nametofont(""TkDefaultFont"")
    except:
        import tkinter.font
        default_font = tkinter.font.nametofont(""TkDefaultFont"")

    default_font.configure(size=9)
    default_font.configure(family='arial')
    #print(default_font.cget(""size""))
    #print(default_font.cget(""family""))
except:
    debug_message(""Font Set Failed."")

################################## Set Icon  ########################################
Icon_Set=False

try:
    #debug_message(""Icon set %s"" %(sys.argv[0]))
    root.iconbitmap(default=""emblem"")
    #debug_message(""Icon set worked %s"" %(sys.argv[0]))
    Icon_Set=True
except:
    debug_message(traceback.format_exc())
    Icon_Set=False
        
if not Icon_Set:
    try:
        scorch_ico_B64=b'R0lGODlhEAAQAIYAAA\
        AAABAQEBYWFhcXFxsbGyUlJSYmJikpKSwsLC4uLi8vLzExMTMzMzc3Nzg4ODk5OTs7Oz4+PkJCQkRERE\
        VFRUtLS0xMTE5OTlNTU1dXV1xcXGBgYGVlZWhoaGtra3FxcXR0dHh4eICAgISEhI+Pj5mZmZ2dnaKioq\
        Ojo62tra6urrS0tLi4uLm5ub29vcLCwsbGxsjIyMzMzM/Pz9PT09XV1dbW1tjY2Nzc3OHh4eLi4uXl5e\
        fn5+jo6Ovr6+/v7/Hx8fLy8vT09PX19fn5+fv7+/z8/P7+/v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAA\
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEKAEkALAAAAAAQABAAQAj/AJMIFBhBQYAACRIkWbgwAA\
        4kEFEECACAxBAkGH8ESEKgBZIiAIQECBAjAA8kNwIkScKgQhAkRggAIJACCZIaJxgk2clgAY4OAAoEAO\
        ABCIIDSZIwkIHEBw0YFAAA6IGDCBIkLAhMyICka9cAKZCIRTLEBIMkaA0MSNGjSBEVIgpESEK3LgMCI1\
        aAWCFDA4EDSQInwaDACBEAImLwCAFARw4HFJJcgGADyZEAL3YQcMGBBpIjHx4EeIGkRoMFJgakWADABx\
        IkPwIgcIGkdm0AMJDo1g3jQBIBRZAINyKAwxEkyHEUSMIcwYYbEgwYmQGgyI8SD5Jo327hgIIAAQ5cBs\
        CQpHySgAA7'
        icon_im =PhotoImage(data=scorch_ico_B64, format='gif')
        root.call('wm', 'iconphoto', root._w, '-default', icon_im)
    except:
        pass
#####################################################################################


if LOAD_MSG != """":
    message_box(""K40 Whisperer"",LOAD_MSG)

opts, args = None, None
try:
    opts, args = getopt.getopt(sys.argv[1:], ""hpd"",[""help"", ""pi"", ""debug""])
except:
    print('Unable interpret command line options')
    sys.exit()

for option, value in opts:
    if option in ('-h','--help'):
        print(' ')
        print('Usage: python k40_whisperer.py [-h -p]')
        print('-h    : print this help (also --help)')
        print('-p    : Small screen option (for small raspberry pi display) (also --pi)')
        sys.exit()
    elif option in ('-p','--pi'):
        print(""pi mode"")
        app.master.minsize(480,320)
        app.master.geometry(""480x320"")
    elif option in ('-d','--debug'):
        DEBUG=True

if DEBUG:
    import inspect
debug_message(""Debuging is turned on."")
    
root.mainloop()
"
PbVyxu0u,Unlocking the A Peak Global $30 Forex No Deposit Bonus: A Gateway to Risk-Free Trading,reviewbrokers,PHP,Monday 19th of February 2024 11:56:14 AM CDT,https://www.reviewbrokers.net/unlocking-the-a-peak-global-30-forex-no-deposit-bonus-a-gateway-to-risk-free-trading/
r4wmcLZN,VMProtect,AncientX,C#,Monday 19th of February 2024 11:53:03 AM CDT,/MBvkYVgZ7Qbt8zSgk3smg==
MHqrv2yb,Explore Forex Trading Risk-Free with a $30 No Deposit Bonus from Just Global Markets,fxvnpro,PHP,Monday 19th of February 2024 11:23:33 AM CDT,https://www.fxvnpro.com/explore-forex-trading-risk-free-with-a-30-no-deposit-bonus-from-just-global-markets/
NJZDqVfx,Untitled,Rofyda_Elghadban1,C++,Monday 19th of February 2024 11:07:19 AM CDT," void solve(){
  int n,counter=0;
  cin>>n;
  vector<ll>v(n);
  map<int,int>mp;
  cin(v);
  sort(all(v));
  for(int i=0;i<n;i++){
    if(v[i]<=0){
      counter=0;
      mp[counter]++;
    }else if(v[i]<=1&&v[i]>0){
      counter=1;
      mp[counter]++;
    }else if(v[i]<=3&&v[i]>1){
      counter=2;
      mp[counter]++;
    }else if(v[i]<=7&&v[i]>3){
      counter=3;
      mp[counter]++;
    }else if(v[i]<=15&&v[i]>7){
      counter=4;
      mp[counter]++;
    }else if(v[i]<=31&&v[i]>15){
      counter=5;
      mp[counter]++;
    }else if(v[i]<=63&&v[i]>31){
      counter=6;
      mp[counter]++;
    }else if(v[i]<=127&&v[i]>63){
      counter=7;
      mp[counter]++;
    }else if(v[i]<=255&&v[i]>127){
      counter=8;
      mp[counter]++;
    }else if(v[i]<=511&&v[i]>255){
      counter=9;
      mp[counter]++;
    }else if(v[i]<=1023&&v[i]>511){
      counter=10;
      mp[counter]++;
    }else if(v[i]<=2047&&v[i]>1023){
      counter=11;
      mp[counter]++;
    }else if(v[i]<=4095&&v[i]>2047){
      counter=12;
      mp[counter]++;
    }else if(v[i]<=8191&&v[i]>4095){
      counter=13;
      mp[counter]++;
    }else if(v[i]<=16383&&v[i]>8191){
      counter=14;
      mp[counter]++;
    }else if(v[i]<=32767&&v[i]>16383){
      counter=15;
      mp[counter]++;
    }else if(v[i]<=65535&&v[i]>32767){
      counter=16;
      mp[counter]++;
    }else if(v[i]<=131071&&v[i]>65535){
      counter=17;
      mp[counter]++;
    }else if(v[i]<=262143&&v[i]>131071){
      counter=18;
      mp[counter]++;
    }else if(v[i]<=524287&&v[i]>262143){
      counter=19;
      mp[counter]++;
    }else if(v[i]<=1048575&&v[i]>524287){
      counter=20;
      mp[counter]++;
    }else if(v[i]<=2097151&&v[i]>1048575){
      counter=21;
      mp[counter]++;
    }else if(v[i]<=4194303&&v[i]>2097151){
      counter=22;
      mp[counter]++;
    }else if(v[i]<=8388607&&v[i]>4194303){
      counter=23;
      mp[counter]++;
    }else if(v[i]<=16777215&&v[i]>8388607){
      counter=24;
      mp[counter]++;
    }else if(v[i]<=33554431&&v[i]>16777215){
      counter=25;
      mp[counter]++;
    }else if(v[i]<=67108863&&v[i]>33554431){
      counter=26;
      mp[counter]++;
    }else if(v[i]<=134217727&&v[i]>67108863){
      counter=27;
      mp[counter]++;
    }else if(v[i]<=268435455&&v[i]>134217727){
      counter=28;
      mp[counter]++;
    }else if(v[i]<=536870911&&v[i]>268435455){
      counter=29;
      mp[counter]++;
    }else if(v[i]<=1073741823&&v[i]>536870911){
      counter=30;
      mp[counter]++;
    }else if(v[i]<=2147483647&&v[i]>1073741823){
      counter=31;
      mp[counter]++;
    }
  }
  for(auto i:mp){
    cout<<i.first<<"" ""<<i.second<<""\n"";
  }
  cout<<""\n"";
 }"
vJuyACg8,TautologyCheckerHaskell,VladNitu,Haskell,Monday 19th of February 2024 10:27:25 AM CDT,"import Data.List (nub) -- The function 'nub' removes duplicates from a list

data Prop = Const Bool
          | Var Char
          | Not Prop
          | And Prop Prop
          | Imply Prop Prop
          | Or Prop Prop
          | Equiv Prop Prop
  deriving (Show)
          
type Assoc k v = [(k,v)]
          
find :: (Eq k) => k -> Assoc k v -> v
find k [] = error ""Key not found!""
find k ((k',x):xs)
  | k == k'   = x
  | otherwise = find k xs

type Subst = Assoc Char Bool

eval :: Subst -> Prop -> Bool
eval _ (Const b)   = b
eval s (Var x)     = find x s
eval s (Not p)     = not (eval s p)
eval s (And p q)   = eval s p && eval s q
eval s (Imply p q) = eval s p <= eval s q
eval s (Or p q) = eval s p || eval s q
eval s (Equiv p q) = eval s p == eval s q

vars :: Prop -> [Char]
vars (Const _)   = []
vars (Var x)     = [x]
vars (Not p)     = vars p
vars (And p q)   = vars p ++ vars q
vars (Imply p q) = vars p ++ vars q
vars (Or p q) = vars p ++ vars q
vars (Equiv p q) = vars p ++ vars q


bools :: Int -> [[Bool]]
bools 0       = [[]]
bools n | n>0 = map (False:) bss ++ map (True:) bss
  where bss = bools (n-1)
  
substs :: Prop -> [Subst]
substs p = map (zip vs) (bools (length vs))
  where vs = nub (vars p)
  
isTaut :: Prop -> Bool
isTaut p = and [eval s p | s <- substs p] 


isSat :: Prop -> Maybe Subst
isSat p = if maybe then Just (head [s | s <- substs p, eval s p]) else Nothing
  where maybe =  or [eval s p | s <- substs p] 
"
Pd76H5XN,Nigerian scammers [19-2-2/2024],bombaires,AIMMS,Monday 19th of February 2024 09:52:52 AM CDT,"<a href=""mailto:info@lpowellfoundation.com"">info@lpowellfoundation.com</a>
<a href=""mailto:marktuckerreall@gmail.com"">marktuckerreall@gmail.com</a>
<a href=""mailto:m.a.rk.tu.c.ke.r.r.e.a.ll@gmail.com"">m.a.rk.tu.c.ke.r.r.e.a.ll@gmail.com</a>
<a href=""mailto:markt.uc.k.e.rre.all@gmail.com"">markt.uc.k.e.rre.all@gmail.com</a>
<a href=""mailto:m.a.rk.t.u.c.ke.r.r.eal.l@gmail.com"">m.a.rk.t.u.c.ke.r.r.eal.l@gmail.com</a>
<a href=""mailto:ma.rktu.cke.rr.e.all@gmail.com"">ma.rktu.cke.rr.e.all@gmail.com</a>
<a href=""mailto:m.a.r.k.tu.c.ke.r.real.l@gmail.com"">m.a.r.k.tu.c.ke.r.real.l@gmail.com</a>
<a href=""mailto:ma.rkt.u.c.k.errea.l.l@gmail.com"">ma.rkt.u.c.k.errea.l.l@gmail.com</a>
<a href=""mailto:mark.t.u.cke.r.re.a.ll@gmail.com"">mark.t.u.cke.r.re.a.ll@gmail.com</a>
<a href=""mailto:m.a.rk.tu.c.ker.re.al.l@gmail.com"">m.a.rk.tu.c.ker.re.al.l@gmail.com</a>
<a href=""mailto:m.a.rktuc.k.e.r.r.e.a.l.l@gmail.com"">m.a.rktuc.k.e.r.r.e.a.l.l@gmail.com</a>
<a href=""mailto:ma.r.ktuc.ker.r.e.a.ll@gmail.com"">ma.r.ktuc.ker.r.e.a.ll@gmail.com</a>
<a href=""mailto:m.a.rk.tucke.r.real.l@gmail.com"">m.a.rk.tucke.r.real.l@gmail.com</a>
<a href=""mailto:mar.kt.u.ck.e.r.r.e.all@gmail.com"">mar.kt.u.ck.e.r.r.e.all@gmail.com</a>
<a href=""mailto:m.ark.t.ucke.rre.a.l.l@gmail.com"">m.ark.t.ucke.rre.a.l.l@gmail.com</a>
<a href=""mailto:mar.kt.ucker.r.eall@gmail.com"">mar.kt.ucker.r.eall@gmail.com</a>
<a href=""mailto:ma.rk.tuckerr.e.a.l.l@gmail.com"">ma.rk.tuckerr.e.a.l.l@gmail.com</a>
<a href=""mailto:ma.r.k.t.uc.k.e.r.real.l@gmail.com"">ma.r.k.t.uc.k.e.r.real.l@gmail.com</a>
<a href=""mailto:ma.r.ktuc.k.e.r.r.eal.l@gmail.com"">ma.r.ktuc.k.e.r.r.eal.l@gmail.com</a>
<a href=""mailto:m.a.r.ktu.c.k.er.r.eall@gmail.com"">m.a.r.ktu.c.k.er.r.eall@gmail.com</a>
<a href=""mailto:mar.ktu.ck.er.re.all@gmail.com"">mar.ktu.ck.er.re.all@gmail.com</a>
<a href=""mailto:m.arktuc.ke.rr.eal.l@gmail.com"">m.arktuc.ke.rr.eal.l@gmail.com</a>
<a href=""mailto:m.arkt.u.c.ke.r.r.e.al.l@gmail.com"">m.arkt.u.c.ke.r.r.e.al.l@gmail.com</a>
<a href=""mailto:m.ar.ktuck.err.eal.l@gmail.com"">m.ar.ktuck.err.eal.l@gmail.com</a>
<a href=""mailto:ma.r.k.tu.c.ke.rreall@gmail.com"">ma.r.k.tu.c.ke.rreall@gmail.com</a>
<a href=""mailto:m.ar.kt.u.c.kerr.eal.l@gmail.com"">m.ar.kt.u.c.kerr.eal.l@gmail.com</a>
<a href=""mailto:m.arktuckerreal.l@gmail.com"">m.arktuckerreal.l@gmail.com</a>
<a href=""mailto:ma.rk.t.u.c.ke.r.re.a.l.l@gmail.com"">ma.rk.t.u.c.ke.r.re.a.l.l@gmail.com</a>
<a href=""mailto:mar.k.t.u.c.ker.r.e.all@gmail.com"">mar.k.t.u.c.ker.r.e.all@gmail.com</a>
<a href=""mailto:ma.rktu.c.ke.rr.e.al.l@gmail.com"">ma.rktu.c.ke.rr.e.al.l@gmail.com</a>
<a href=""mailto:m.arkt.u.ck.er.re.all@gmail.com"">m.arkt.u.ck.er.re.all@gmail.com</a>
<a href=""mailto:ma.rk.tu.cker.re.a.ll@gmail.com"">ma.rk.tu.cker.re.a.ll@gmail.com</a>
<a href=""mailto:m.a.r.ktu.cke.rreal.l@gmail.com"">m.a.r.ktu.cke.rreal.l@gmail.com</a>
<a href=""mailto:m.ar.kt.ucke.r.r.e.all@gmail.com"">m.ar.kt.ucke.r.r.e.all@gmail.com</a>
<a href=""mailto:mar.k.t.uc.kerr.e.al.l@gmail.com"">mar.k.t.uc.kerr.e.al.l@gmail.com</a>
<a href=""mailto:m.a.rktuck.e.r.re.a.l.l@gmail.com"">m.a.rktuck.e.r.re.a.l.l@gmail.com</a>
<a href=""mailto:ma.r.ktucke.rr.e.al.l@gmail.com"">ma.r.ktucke.rr.e.al.l@gmail.com</a>
<a href=""mailto:m.ar.ktu.ck.e.r.real.l@gmail.com"">m.ar.ktu.ck.e.r.real.l@gmail.com</a>
<a href=""mailto:m.ark.tu.ckerr.eall@gmail.com"">m.ark.tu.ckerr.eall@gmail.com</a>
<a href=""mailto:marktu.cker.rea.ll@gmail.com"">marktu.cker.rea.ll@gmail.com</a>
<a href=""mailto:m.ar.k.tu.ck.e.rre.al.l@gmail.com"">m.ar.k.tu.ck.e.rre.al.l@gmail.com</a>
<a href=""mailto:ma.rk.tuc.k.err.eal.l@gmail.com"">ma.rk.tuc.k.err.eal.l@gmail.com</a>
<a href=""mailto:m.arkt.uck.e.rr.e.a.l.l@gmail.com"">m.arkt.uck.e.rr.e.a.l.l@gmail.com</a>
<a href=""mailto:markt.u.cke.r.real.l@gmail.com"">markt.u.cke.r.real.l@gmail.com</a>
<a href=""mailto:m.a.r.kt.uc.k.er.re.al.l@gmail.com"">m.a.r.kt.uc.k.er.re.al.l@gmail.com</a>
<a href=""mailto:ma.r.kt.uc.k.er.r.eall@gmail.com"">ma.r.kt.uc.k.er.r.eall@gmail.com</a>
<a href=""mailto:m.a.rktu.c.k.erre.all@gmail.com"">m.a.rktu.c.k.erre.all@gmail.com</a>
<a href=""mailto:markt.uck.err.e.al.l@gmail.com"">markt.uck.err.e.al.l@gmail.com</a>
<a href=""mailto:ma.rk.t.uck.e.r.real.l@gmail.com"">ma.rk.t.uck.e.r.real.l@gmail.com</a>
<a href=""mailto:m.a.rktu.c.k.e.rr.e.al.l@gmail.com"">m.a.rktu.c.k.e.rr.e.al.l@gmail.com</a>
<a href=""mailto:m.ar.ktu.ckerr.ea.l.l@gmail.com"">m.ar.ktu.ckerr.ea.l.l@gmail.com</a>
<a href=""mailto:m.ark.t.uc.k.err.eall@gmail.com"">m.ark.t.uc.k.err.eall@gmail.com</a>
<a href=""mailto:mark.t.u.cker.re.a.l.l@gmail.com"">mark.t.u.cker.re.a.l.l@gmail.com</a>
<a href=""mailto:m.arktu.ck.err.e.a.ll@gmail.com"">m.arktu.ck.err.e.a.ll@gmail.com</a>
<a href=""mailto:m.a.rk.t.ucke.r.re.a.ll@gmail.com"">m.a.rk.t.ucke.r.re.a.ll@gmail.com</a>
<a href=""mailto:mar.k.tuck.er.r.e.al.l@gmail.com"">mar.k.tuck.er.r.e.al.l@gmail.com</a>
<a href=""mailto:ma.rk.t.uc.k.err.ea.ll@gmail.com"">ma.rk.t.uc.k.err.ea.ll@gmail.com</a>
<a href=""mailto:m.a.r.ktu.c.ke.r.reall@gmail.com"">m.a.r.ktu.c.ke.r.reall@gmail.com</a>
<a href=""mailto:m.a.r.k.tu.c.k.e.r.re.all@gmail.com"">m.a.r.k.tu.c.k.e.r.re.all@gmail.com</a>
<a href=""mailto:m.ark.tu.c.k.err.e.al.l@gmail.com"">m.ark.tu.c.k.err.e.al.l@gmail.com</a>
<a href=""mailto:mar.ktu.c.k.er.r.e.all@gmail.com"">mar.ktu.c.k.er.r.e.all@gmail.com</a>
<a href=""mailto:mar.kt.uc.k.e.rr.e.a.ll@gmail.com"">mar.kt.uc.k.e.rr.e.a.ll@gmail.com</a>
<a href=""mailto:m.ar.kt.u.ck.e.rre.a.ll@gmail.com"">m.ar.kt.u.ck.e.rre.a.ll@gmail.com</a>
<a href=""mailto:ma.r.kt.u.c.k.e.r.re.a.l.l@gmail.com"">ma.r.kt.u.c.k.e.r.re.a.l.l@gmail.com</a>
<a href=""mailto:m.a.r.kt.u.ck.e.rr.eal.l@gmail.com"">m.a.r.kt.u.ck.e.rr.eal.l@gmail.com</a>
<a href=""mailto:ma.rkt.uck.e.rr.eall@gmail.com"">ma.rkt.uck.e.rr.eall@gmail.com</a>
<a href=""mailto:ma.rkt.uc.k.erreall@gmail.com"">ma.rkt.uc.k.erreall@gmail.com</a>
<a href=""mailto:m.ark.t.uc.k.e.r.r.eall@gmail.com"">m.ark.t.uc.k.e.r.r.eall@gmail.com</a>
<a href=""mailto:m.ar.k.tu.ck.er.rea.l.l@gmail.com"">m.ar.k.tu.ck.er.rea.l.l@gmail.com</a>
<a href=""mailto:mar.k.t.u.c.k.e.rre.a.ll@gmail.com"">mar.k.t.u.c.k.e.rre.a.ll@gmail.com</a>
<a href=""mailto:markt.uck.er.r.ea.ll@gmail.com"">markt.uck.er.r.ea.ll@gmail.com</a>
<a href=""mailto:m.a.r.kt.ucke.r.r.ea.l.l@gmail.com"">m.a.r.kt.ucke.r.r.ea.l.l@gmail.com</a>
<a href=""mailto:mark.tu.c.kerr.ea.ll@gmail.com"">mark.tu.c.kerr.ea.ll@gmail.com</a>
<a href=""mailto:ma.rk.t.uc.ker.r.ea.l.l@gmail.com"">ma.rk.t.uc.ker.r.ea.l.l@gmail.com</a>
<a href=""mailto:markt.u.cke.r.r.e.a.l.l@gmail.com"">markt.u.cke.r.r.e.a.l.l@gmail.com</a>
<a href=""mailto:m.a.rkt.uck.erre.all@gmail.com"">m.a.rkt.uck.erre.all@gmail.com</a>
<a href=""mailto:m.a.r.kt.uck.e.rre.all@gmail.com"">m.a.r.kt.uck.e.rre.all@gmail.com</a>
<a href=""mailto:mar.kt.u.c.k.e.rr.e.all@gmail.com"">mar.kt.u.c.k.e.rr.e.all@gmail.com</a>
<a href=""mailto:ma.rk.t.u.cke.rre.al.l@gmail.com"">ma.rk.t.u.cke.rre.al.l@gmail.com</a>
<a href=""mailto:m.a.rk.tu.c.kerr.e.a.l.l@gmail.com"">m.a.rk.tu.c.kerr.e.a.l.l@gmail.com</a>
<a href=""mailto:mar.kt.ucker.r.ea.l.l@gmail.com"">mar.kt.ucker.r.ea.l.l@gmail.com</a>
<a href=""mailto:mar.kt.u.c.ke.rre.a.ll@gmail.com"">mar.kt.u.c.ke.rre.a.ll@gmail.com</a>
<a href=""mailto:mar.k.tuck.er.reall@gmail.com"">mar.k.tuck.er.reall@gmail.com</a>
<a href=""mailto:m.ark.tuckerr.e.a.l.l@gmail.com"">m.ark.tuckerr.e.a.l.l@gmail.com</a>
<a href=""mailto:m.ar.kt.uck.er.r.eall@gmail.com"">m.ar.kt.uck.er.r.eall@gmail.com</a>
<a href=""mailto:m.ar.k.tuck.erre.all@gmail.com"">m.ar.k.tuck.erre.all@gmail.com</a>
<a href=""mailto:m.a.r.ktucke.r.re.all@gmail.com"">m.a.r.ktucke.r.re.all@gmail.com</a>
<a href=""mailto:m.a.rkt.u.c.k.er.re.al.l@gmail.com"">m.a.rkt.u.c.k.er.re.al.l@gmail.com</a>
<a href=""mailto:m.ark.t.uckerr.eall@gmail.com"">m.ark.t.uckerr.eall@gmail.com</a>
<a href=""mailto:ma.r.kt.uc.ker.re.al.l@gmail.com"">ma.r.kt.uc.ker.re.al.l@gmail.com</a>
<a href=""mailto:m.arkt.uckerreall@gmail.com"">m.arkt.uckerreall@gmail.com</a>
<a href=""mailto:m.a.rktu.cker.r.ea.ll@gmail.com"">m.a.rktu.cker.r.ea.ll@gmail.com</a>
<a href=""mailto:ma.rkt.uck.er.rea.l.l@gmail.com"">ma.rkt.uck.er.rea.l.l@gmail.com</a>
<a href=""mailto:mar.k.t.uck.err.e.a.ll@gmail.com"">mar.k.t.uck.err.e.a.ll@gmail.com</a>
<a href=""mailto:m.ar.kt.u.c.ke.r.r.ea.ll@gmail.com"">m.ar.kt.u.c.ke.r.r.ea.ll@gmail.com</a>
<a href=""mailto:m.arktu.c.k.e.rre.al.l@gmail.com"">m.arktu.c.k.e.rre.al.l@gmail.com</a>
<a href=""mailto:m.a.rktuck.e.rre.a.l.l@gmail.com"">m.a.rktuck.e.rre.a.l.l@gmail.com</a>
<a href=""mailto:ma.rktuc.k.err.e.a.ll@gmail.com"">ma.rktuc.k.err.e.a.ll@gmail.com</a>
<a href=""mailto:m.a.r.k.tu.c.ker.re.all@gmail.com"">m.a.r.k.tu.c.ker.re.all@gmail.com</a>
<a href=""mailto:ma.r.k.t.uck.er.re.all@gmail.com"">ma.r.k.t.uck.er.re.all@gmail.com</a>
<a href=""mailto:m.ar.ktucke.r.r.e.all@gmail.com"">m.ar.ktucke.r.r.e.all@gmail.com</a>
<a href=""mailto:m.ark.tu.c.kerr.e.al.l@gmail.com"">m.ark.tu.c.kerr.e.al.l@gmail.com</a>
<a href=""mailto:m.a.rk.t.u.ck.e.r.r.eall@gmail.com"">m.a.rk.t.u.ck.e.r.r.eall@gmail.com</a>
<a href=""mailto:mar.k.t.uc.k.err.ea.l.l@gmail.com"">mar.k.t.uc.k.err.ea.l.l@gmail.com</a>
<a href=""mailto:mark.tu.c.kerre.al.l@gmail.com"">mark.tu.c.kerre.al.l@gmail.com</a>
<a href=""mailto:m.a.r.ktuck.er.r.e.a.ll@gmail.com"">m.a.r.ktuck.er.r.e.a.ll@gmail.com</a>
<a href=""mailto:m.a.r.k.t.u.c.ke.rr.e.a.ll@gmail.com"">m.a.r.k.t.u.c.ke.rr.e.a.ll@gmail.com</a>
<a href=""mailto:m.ark.t.uc.k.err.eal.l@gmail.com"">m.ark.t.uc.k.err.eal.l@gmail.com</a>
<a href=""mailto:ma.r.ktuck.e.rr.eal.l@gmail.com"">ma.r.ktuck.e.rr.eal.l@gmail.com</a>
<a href=""mailto:m.ark.t.u.c.ker.r.eall@gmail.com"">m.ark.t.u.c.ker.r.eall@gmail.com</a>
<a href=""mailto:markt.uc.ke.r.r.e.al.l@gmail.com"">markt.uc.ke.r.r.e.al.l@gmail.com</a>
<a href=""mailto:ma.r.k.tuc.k.err.eall@gmail.com"">ma.r.k.tuc.k.err.eall@gmail.com</a>
<a href=""mailto:m.a.r.k.t.u.c.k.er.r.ea.l.l@gmail.com"">m.a.r.k.t.u.c.k.er.r.ea.l.l@gmail.com</a>
<a href=""mailto:m.a.rkt.u.c.ke.r.r.eall@gmail.com"">m.a.rkt.u.c.ke.r.r.eall@gmail.com</a>
<a href=""mailto:ma.rktuc.ker.r.eall@gmail.com"">ma.rktuc.ker.r.eall@gmail.com</a>
<a href=""mailto:m.a.rktuc.kerre.a.ll@gmail.com"">m.a.rktuc.kerre.a.ll@gmail.com</a>
<a href=""mailto:marktu.c.k.er.re.a.ll@gmail.com"">marktu.c.k.er.re.a.ll@gmail.com</a>
<a href=""mailto:m.a.rkt.u.cke.r.re.al.l@gmail.com"">m.a.rkt.u.cke.r.re.al.l@gmail.com</a>
<a href=""mailto:m.a.r.kt.u.c.k.err.e.all@gmail.com"">m.a.r.kt.u.c.k.err.e.all@gmail.com</a>
<a href=""mailto:mark.t.u.cker.r.e.a.l.l@gmail.com"">mark.t.u.cker.r.e.a.l.l@gmail.com</a>
<a href=""mailto:m.arkt.uc.k.e.r.re.a.ll@gmail.com"">m.arkt.uc.k.e.r.re.a.ll@gmail.com</a>
<a href=""mailto:m.a.rk.t.ucke.rre.a.l.l@gmail.com"">m.a.rk.t.ucke.rre.a.l.l@gmail.com</a>
<a href=""mailto:ma.rk.tuc.k.er.real.l@gmail.com"">ma.rk.tuc.k.er.real.l@gmail.com</a>
<a href=""mailto:ma.rkt.ucke.rreall@gmail.com"">ma.rkt.ucke.rreall@gmail.com</a>
<a href=""mailto:mark.t.uck.err.e.all@gmail.com"">mark.t.uck.err.e.all@gmail.com</a>
<a href=""mailto:m.ar.k.tuck.er.real.l@gmail.com"">m.ar.k.tuck.er.real.l@gmail.com</a>
<a href=""mailto:ma.r.k.t.uc.k.e.rrea.l.l@gmail.com"">ma.r.k.t.uc.k.e.rrea.l.l@gmail.com</a>
<a href=""mailto:ma.r.ktu.c.k.err.ea.ll@gmail.com"">ma.r.ktu.c.k.err.ea.ll@gmail.com</a>
<a href=""mailto:mar.k.t.uc.ke.r.r.eal.l@gmail.com"">mar.k.t.uc.ke.r.r.eal.l@gmail.com</a>
<a href=""mailto:m.arktuckerr.e.a.l.l@gmail.com"">m.arktuckerr.e.a.l.l@gmail.com</a>
<a href=""mailto:mar.ktu.c.kerrea.ll@gmail.com"">mar.ktu.c.kerrea.ll@gmail.com</a>
<a href=""mailto:m.a.rktuc.ke.rr.eall@gmail.com"">m.a.rktuc.ke.rr.eall@gmail.com</a>
<a href=""mailto:m.a.rk.tu.ck.er.r.eall@gmail.com"">m.a.rk.tu.ck.er.r.eall@gmail.com</a>
<a href=""mailto:mar.kt.uc.ker.rea.ll@gmail.com"">mar.kt.uc.ker.rea.ll@gmail.com</a>
<a href=""mailto:m.ar.ktu.c.kerreal.l@gmail.com"">m.ar.ktu.c.kerreal.l@gmail.com</a>
<a href=""mailto:markt.u.ck.err.e.a.l.l@gmail.com"">markt.u.ck.err.e.a.l.l@gmail.com</a>
<a href=""mailto:ma.rkt.uck.e.r.r.ea.ll@gmail.com"">ma.rkt.uck.e.r.r.ea.ll@gmail.com</a>
<a href=""mailto:m.ar.kt.uck.e.r.r.ea.ll@gmail.com"">m.ar.kt.uck.e.r.r.ea.ll@gmail.com</a>
<a href=""mailto:m.ar.k.tu.ck.errea.l.l@gmail.com"">m.ar.k.tu.ck.errea.l.l@gmail.com</a>
<a href=""mailto:ma.rktu.ck.e.r.r.e.al.l@gmail.com"">ma.rktu.ck.e.r.r.e.al.l@gmail.com</a>
<a href=""mailto:ma.rkt.u.c.ke.rrea.l.l@gmail.com"">ma.rkt.u.c.ke.rrea.l.l@gmail.com</a>
<a href=""mailto:m.a.rk.tuc.ke.rr.ea.l.l@gmail.com"">m.a.rk.tuc.ke.rr.ea.l.l@gmail.com</a>
<a href=""mailto:mar.k.t.uck.err.eal.l@gmail.com"">mar.k.t.uck.err.eal.l@gmail.com</a>
<a href=""mailto:m.a.r.k.t.u.c.k.err.e.al.l@gmail.com"">m.a.r.k.t.u.c.k.err.e.al.l@gmail.com</a>
<a href=""mailto:m.a.r.k.tu.c.ke.rre.a.ll@gmail.com"">m.a.r.k.tu.c.ke.rre.a.ll@gmail.com</a>
<a href=""mailto:m.ark.t.u.c.kerr.e.all@gmail.com"">m.ark.t.u.c.kerr.e.all@gmail.com</a>
<a href=""mailto:m.a.rk.t.u.ck.e.r.r.e.a.l.l@gmail.com"">m.a.rk.t.u.ck.e.r.r.e.a.l.l@gmail.com</a>
<a href=""mailto:m.ar.kt.u.c.k.er.r.e.a.ll@gmail.com"">m.ar.kt.u.c.k.er.r.e.a.ll@gmail.com</a>
<a href=""mailto:marktuck.e.rr.eall@gmail.com"">marktuck.e.rr.eall@gmail.com</a>
<a href=""mailto:m.ar.kt.u.c.k.er.re.al.l@gmail.com"">m.ar.kt.u.c.k.er.re.al.l@gmail.com</a>
<a href=""mailto:mark.t.uc.kerre.al.l@gmail.com"">mark.t.uc.kerre.al.l@gmail.com</a>
<a href=""mailto:mar.kt.u.cke.rr.e.a.ll@gmail.com"">mar.kt.u.cke.rr.e.a.ll@gmail.com</a>
<a href=""mailto:marktu.c.ker.r.eall@gmail.com"">marktu.c.ker.r.eall@gmail.com</a>
<a href=""mailto:m.a.r.k.t.uck.err.ea.l.l@gmail.com"">m.a.r.k.t.uck.err.ea.l.l@gmail.com</a>
<a href=""mailto:mark.t.ucke.r.r.eal.l@gmail.com"">mark.t.ucke.r.r.eal.l@gmail.com</a>
<a href=""mailto:ma.rktu.ck.er.r.ea.ll@gmail.com"">ma.rktu.ck.er.r.ea.ll@gmail.com</a>
<a href=""mailto:m.a.rk.tuc.k.er.r.eal.l@gmail.com"">m.a.rk.tuc.k.er.r.eal.l@gmail.com</a>
<a href=""mailto:m.ark.tuc.k.er.re.a.ll@gmail.com"">m.ark.tuc.k.er.re.a.ll@gmail.com</a>
<a href=""mailto:m.a.r.k.t.u.c.ke.rrea.ll@gmail.com"">m.a.r.k.t.u.c.ke.rrea.ll@gmail.com</a>
<a href=""mailto:ma.r.k.tu.ck.e.rr.eal.l@gmail.com"">ma.r.k.tu.ck.e.rr.eal.l@gmail.com</a>
<a href=""mailto:m.a.rktuc.ke.rre.all@gmail.com"">m.a.rktuc.ke.rre.all@gmail.com</a>
<a href=""mailto:ma.rk.tu.c.k.errea.l.l@gmail.com"">ma.rk.tu.c.k.errea.l.l@gmail.com</a>
<a href=""mailto:mar.kt.u.c.ke.r.re.all@gmail.com"">mar.kt.u.c.ke.r.re.all@gmail.com</a>
<a href=""mailto:m.a.rktuc.ke.rr.ea.ll@gmail.com"">m.a.rktuc.ke.rr.ea.ll@gmail.com</a>
<a href=""mailto:ma.r.k.t.uc.k.e.rre.a.ll@gmail.com"">ma.r.k.t.uc.k.e.rre.a.ll@gmail.com</a>
<a href=""mailto:m.a.rkt.uc.k.e.r.real.l@gmail.com"">m.a.rkt.uc.k.e.r.real.l@gmail.com</a>
<a href=""mailto:m.a.rk.t.u.cke.r.re.a.l.l@gmail.com"">m.a.rk.t.u.cke.r.re.a.l.l@gmail.com</a>
<a href=""mailto:m.arktuc.k.e.rr.e.a.l.l@gmail.com"">m.arktuc.k.e.rr.e.a.l.l@gmail.com</a>
<a href=""mailto:m.ark.tu.ck.err.e.a.ll@gmail.com"">m.ark.tu.ck.err.e.a.ll@gmail.com</a>
<a href=""mailto:m.a.r.ktu.ck.e.r.r.e.all@gmail.com"">m.a.r.ktu.ck.e.r.r.e.all@gmail.com</a>
<a href=""mailto:m.a.r.k.t.ucker.r.e.all@gmail.com"">m.a.r.k.t.ucker.r.e.all@gmail.com</a>
<a href=""mailto:mar.ktucke.r.r.e.a.ll@gmail.com"">mar.ktucke.r.r.e.a.ll@gmail.com</a>
<a href=""mailto:ma.rktu.c.ker.r.e.al.l@gmail.com"">ma.rktu.c.ker.r.e.al.l@gmail.com</a>
<a href=""mailto:ma.rkt.u.c.k.e.rr.ea.l.l@gmail.com"">ma.rkt.u.c.k.e.rr.ea.l.l@gmail.com</a>
<a href=""mailto:m.ar.kt.u.c.k.e.rre.a.l.l@gmail.com"">m.ar.kt.u.c.k.e.rre.a.l.l@gmail.com</a>
<a href=""mailto:m.ar.kt.u.c.k.er.r.eall@gmail.com"">m.ar.kt.u.c.k.er.r.eall@gmail.com</a>
<a href=""mailto:m.ar.k.tuc.ke.r.reall@gmail.com"">m.ar.k.tuc.ke.r.reall@gmail.com</a>
<a href=""mailto:m.ar.kt.u.ck.e.r.re.al.l@gmail.com"">m.ar.kt.u.ck.e.r.re.al.l@gmail.com</a>
<a href=""mailto:ma.r.ktuc.ke.r.r.e.all@gmail.com"">ma.r.ktuc.ke.r.r.e.all@gmail.com</a>
<a href=""mailto:markt.uc.ke.rr.ea.l.l@gmail.com"">markt.uc.ke.rr.ea.l.l@gmail.com</a>
<a href=""mailto:mark.t.u.ck.e.r.re.all@gmail.com"">mark.t.u.ck.e.r.re.all@gmail.com</a>
<a href=""mailto:m.ar.ktu.ck.e.rreall@gmail.com"">m.ar.ktu.ck.e.rreall@gmail.com</a>
<a href=""mailto:ma.r.kt.uc.k.erre.all@gmail.com"">ma.r.kt.uc.k.erre.all@gmail.com</a>
<a href=""mailto:m.arkt.uc.ke.rr.ea.ll@gmail.com"">m.arkt.uc.ke.rr.ea.ll@gmail.com</a>
<a href=""mailto:ma.r.kt.u.c.ke.rreal.l@gmail.com"">ma.r.kt.u.c.ke.rreal.l@gmail.com</a>
<a href=""mailto:m.ark.t.uc.ke.r.re.a.l.l@gmail.com"">m.ark.t.uc.ke.r.re.a.l.l@gmail.com</a>
<a href=""mailto:m.a.r.kt.uck.er.r.e.al.l@gmail.com"">m.a.r.kt.uck.er.r.e.al.l@gmail.com</a>
<a href=""mailto:m.a.rktuck.e.rre.a.ll@gmail.com"">m.a.rktuck.e.rre.a.ll@gmail.com</a>
<a href=""mailto:ma.rkt.u.c.k.er.reall@gmail.com"">ma.rkt.u.c.k.er.reall@gmail.com</a>
<a href=""mailto:ma.r.ktuc.k.er.rea.l.l@gmail.com"">ma.r.ktuc.k.er.rea.l.l@gmail.com</a>
<a href=""mailto:ma.r.k.tuc.k.e.rre.all@gmail.com"">ma.r.k.tuc.k.e.rre.all@gmail.com</a>
<a href=""mailto:ma.r.k.tuckerre.a.ll@gmail.com"">ma.r.k.tuckerre.a.ll@gmail.com</a>
<a href=""mailto:ma.rktu.ck.errea.ll@gmail.com"">ma.rktu.ck.errea.ll@gmail.com</a>
<a href=""mailto:m.a.r.k.tu.c.ke.r.r.e.al.l@gmail.com"">m.a.r.k.tu.c.ke.r.r.e.al.l@gmail.com</a>
<a href=""mailto:m.a.r.k.tu.c.k.errea.ll@gmail.com"">m.a.r.k.tu.c.k.errea.ll@gmail.com</a>
<a href=""mailto:m.ar.k.tuc.k.er.reall@gmail.com"">m.ar.k.tuc.k.er.reall@gmail.com</a>
<a href=""mailto:m.a.r.k.tu.cke.rr.ea.l.l@gmail.com"">m.a.r.k.tu.cke.rr.ea.l.l@gmail.com</a>
<a href=""mailto:m.a.rkt.uck.err.ea.ll@gmail.com"">m.a.rkt.uck.err.ea.ll@gmail.com</a>
<a href=""mailto:m.a.r.kt.u.c.k.e.rr.e.a.ll@gmail.com"">m.a.r.kt.u.c.k.e.rr.e.a.ll@gmail.com</a>
<a href=""mailto:m.a.r.k.t.u.c.k.errea.ll@gmail.com"">m.a.r.k.t.u.c.k.errea.ll@gmail.com</a>
<a href=""mailto:m.a.r.k.t.ucke.rre.a.l.l@gmail.com"">m.a.r.k.t.ucke.rre.a.l.l@gmail.com</a>
<a href=""mailto:mar.k.tuc.k.errea.ll@gmail.com"">mar.k.tuc.k.errea.ll@gmail.com</a>
<a href=""mailto:oliveralabuwa@gmail.com"">oliveralabuwa@gmail.com</a>
<a href=""mailto:ol.i.v.e.ral.abu.wa@gmail.com"">ol.i.v.e.ral.abu.wa@gmail.com</a>
<a href=""mailto:ol.iv.e.ra.l.ab.uwa@gmail.com"">ol.iv.e.ra.l.ab.uwa@gmail.com</a>
<a href=""mailto:oliv.eral.a.bu.w.a@gmail.com"">oliv.eral.a.bu.w.a@gmail.com</a>
<a href=""mailto:oli.ver.a.la.buwa@gmail.com"">oli.ver.a.la.buwa@gmail.com</a>
<a href=""mailto:ol.i.ver.a.lab.u.wa@gmail.com"">ol.i.ver.a.lab.u.wa@gmail.com</a>
<a href=""mailto:o.l.iver.alab.uwa@gmail.com"">o.l.iver.alab.uwa@gmail.com</a>
<a href=""mailto:o.l.ive.r.alab.uwa@gmail.com"">o.l.ive.r.alab.uwa@gmail.com</a>
<a href=""mailto:oli.ver.a.la.b.uw.a@gmail.com"">oli.ver.a.la.b.uw.a@gmail.com</a>
<a href=""mailto:o.l.i.v.eral.a.bu.wa@gmail.com"">o.l.i.v.eral.a.bu.wa@gmail.com</a>
<a href=""mailto:o.liv.er.alabuwa@gmail.com"">o.liv.er.alabuwa@gmail.com</a>
<a href=""mailto:o.li.v.er.al.a.buw.a@gmail.com"">o.li.v.er.al.a.buw.a@gmail.com</a>
<a href=""mailto:oliv.e.ra.la.b.uwa@gmail.com"">oliv.e.ra.la.b.uwa@gmail.com</a>
<a href=""mailto:ol.i.v.er.a.l.a.bu.w.a@gmail.com"">ol.i.v.er.a.l.a.bu.w.a@gmail.com</a>
<a href=""mailto:o.l.i.v.e.ral.abuw.a@gmail.com"">o.l.i.v.e.ral.abuw.a@gmail.com</a>
<a href=""mailto:oliv.er.a.l.ab.uw.a@gmail.com"">oliv.er.a.l.ab.uw.a@gmail.com</a>
<a href=""mailto:olive.ralab.uw.a@gmail.com"">olive.ralab.uw.a@gmail.com</a>
<a href=""mailto:oli.ve.r.a.la.bu.wa@gmail.com"">oli.ve.r.a.la.bu.wa@gmail.com</a>
<a href=""mailto:oliv.era.labu.wa@gmail.com"">oliv.era.labu.wa@gmail.com</a>
<a href=""mailto:o.l.i.ve.r.al.abu.w.a@gmail.com"">o.l.i.ve.r.al.abu.w.a@gmail.com</a>
<a href=""mailto:o.li.verala.b.u.w.a@gmail.com"">o.li.verala.b.u.w.a@gmail.com</a>
<a href=""mailto:o.l.iv.eral.a.b.u.w.a@gmail.com"">o.l.iv.eral.a.b.u.w.a@gmail.com</a>
<a href=""mailto:ol.i.v.e.ra.l.a.b.u.w.a@gmail.com"">ol.i.v.e.ra.l.a.b.u.w.a@gmail.com</a>
<a href=""mailto:oli.v.e.rala.bu.w.a@gmail.com"">oli.v.e.rala.bu.w.a@gmail.com</a>
<a href=""mailto:o.liv.e.r.al.a.b.uwa@gmail.com"">o.liv.e.r.al.a.b.uwa@gmail.com</a>
<a href=""mailto:o.liv.era.lab.u.wa@gmail.com"">o.liv.era.lab.u.wa@gmail.com</a>
<a href=""mailto:olive.r.a.la.b.u.wa@gmail.com"">olive.r.a.la.b.u.wa@gmail.com</a>
<a href=""mailto:o.l.i.v.e.r.a.l.a.bu.w.a@gmail.com"">o.l.i.v.e.r.a.l.a.bu.w.a@gmail.com</a>
<a href=""mailto:o.l.i.ver.a.l.abuw.a@gmail.com"">o.l.i.ver.a.l.abuw.a@gmail.com</a>
<a href=""mailto:o.l.i.ve.ral.ab.u.w.a@gmail.com"">o.l.i.ve.ral.ab.u.w.a@gmail.com</a>
<a href=""mailto:o.l.iv.e.ra.l.ab.uw.a@gmail.com"">o.l.iv.e.ra.l.ab.uw.a@gmail.com</a>
<a href=""mailto:ol.i.vera.la.buwa@gmail.com"">ol.i.vera.la.buwa@gmail.com</a>
<a href=""mailto:o.liverala.b.u.w.a@gmail.com"">o.liverala.b.u.w.a@gmail.com</a>
<a href=""mailto:o.l.iver.a.la.buw.a@gmail.com"">o.l.iver.a.la.buw.a@gmail.com</a>
<a href=""mailto:ol.i.vera.l.ab.uwa@gmail.com"">ol.i.vera.l.ab.uwa@gmail.com</a>
<a href=""mailto:o.li.ve.r.al.a.buw.a@gmail.com"">o.li.ve.r.al.a.buw.a@gmail.com</a>
<a href=""mailto:o.l.i.ver.a.l.a.b.uwa@gmail.com"">o.l.i.ver.a.l.a.b.uwa@gmail.com</a>
<a href=""mailto:olivera.labuw.a@gmail.com"">olivera.labuw.a@gmail.com</a>
<a href=""mailto:o.l.iv.er.a.l.a.b.uw.a@gmail.com"">o.l.iv.er.a.l.a.b.uw.a@gmail.com</a>
<a href=""mailto:ol.i.v.e.r.a.l.ab.uwa@gmail.com"">ol.i.v.e.r.a.l.ab.uwa@gmail.com</a>
<a href=""mailto:ol.iv.era.l.ab.uwa@gmail.com"">ol.iv.era.l.ab.uwa@gmail.com</a>
<a href=""mailto:o.li.v.e.ralabuwa@gmail.com"">o.li.v.e.ralabuwa@gmail.com</a>
<a href=""mailto:ol.iv.era.la.b.uwa@gmail.com"">ol.iv.era.la.b.uwa@gmail.com</a>
<a href=""mailto:o.li.ve.r.a.l.ab.u.wa@gmail.com"">o.li.ve.r.a.l.ab.u.wa@gmail.com</a>
<a href=""mailto:o.l.i.ve.r.a.la.b.u.wa@gmail.com"">o.l.i.ve.r.a.la.b.u.wa@gmail.com</a>
<a href=""mailto:oli.verala.bu.wa@gmail.com"">oli.verala.bu.wa@gmail.com</a>
<a href=""mailto:oli.vera.lab.uwa@gmail.com"">oli.vera.lab.uwa@gmail.com</a>
<a href=""mailto:o.liver.alab.u.w.a@gmail.com"">o.liver.alab.u.w.a@gmail.com</a>
<a href=""mailto:ol.iveral.abu.w.a@gmail.com"">ol.iveral.abu.w.a@gmail.com</a>
<a href=""mailto:o.live.r.a.l.a.buwa@gmail.com"">o.live.r.a.l.a.buwa@gmail.com</a>
<a href=""mailto:o.l.iv.e.ra.l.a.buw.a@gmail.com"">o.l.iv.e.ra.l.a.buw.a@gmail.com</a>
<a href=""mailto:oli.ver.a.l.a.bu.wa@gmail.com"">oli.ver.a.l.a.bu.wa@gmail.com</a>
<a href=""mailto:o.l.ive.ra.la.b.uwa@gmail.com"">o.l.ive.ra.la.b.uwa@gmail.com</a>
<a href=""mailto:o.liv.e.ra.la.b.uw.a@gmail.com"">o.liv.e.ra.la.b.uw.a@gmail.com</a>
<a href=""mailto:o.liv.er.a.la.b.uwa@gmail.com"">o.liv.er.a.la.b.uwa@gmail.com</a>
<a href=""mailto:olivera.l.a.b.uw.a@gmail.com"">olivera.l.a.b.uw.a@gmail.com</a>
<a href=""mailto:ol.i.v.er.al.ab.u.wa@gmail.com"">ol.i.v.er.al.ab.u.wa@gmail.com</a>
<a href=""mailto:o.l.i.vera.l.ab.u.wa@gmail.com"">o.l.i.vera.l.ab.u.wa@gmail.com</a>
<a href=""mailto:o.l.iv.er.a.l.abuw.a@gmail.com"">o.l.iv.er.a.l.abuw.a@gmail.com</a>
<a href=""mailto:ol.iv.e.r.a.la.b.uwa@gmail.com"">ol.iv.e.r.a.la.b.uwa@gmail.com</a>
<a href=""mailto:o.liv.eral.abuw.a@gmail.com"">o.liv.eral.abuw.a@gmail.com</a>
<a href=""mailto:oliveral.a.buwa@gmail.com"">oliveral.a.buwa@gmail.com</a>
<a href=""mailto:o.li.ver.a.l.a.bu.wa@gmail.com"">o.li.ver.a.l.a.bu.wa@gmail.com</a>
<a href=""mailto:o.liverala.b.uwa@gmail.com"">o.liverala.b.uwa@gmail.com</a>
<a href=""mailto:o.liv.eralab.uw.a@gmail.com"">o.liv.eralab.uw.a@gmail.com</a>
<a href=""mailto:ol.i.veralabuw.a@gmail.com"">ol.i.veralabuw.a@gmail.com</a>
<a href=""mailto:ol.i.v.er.ala.buwa@gmail.com"">ol.i.v.er.ala.buwa@gmail.com</a>
<a href=""mailto:ol.i.v.eral.a.bu.w.a@gmail.com"">ol.i.v.eral.a.bu.w.a@gmail.com</a>
<a href=""mailto:o.l.i.v.e.rala.b.u.wa@gmail.com"">o.l.i.v.e.rala.b.u.wa@gmail.com</a>
<a href=""mailto:oliver.a.l.a.bu.w.a@gmail.com"">oliver.a.l.a.bu.w.a@gmail.com</a>
<a href=""mailto:ol.i.ve.ra.l.a.bu.w.a@gmail.com"">ol.i.ve.ra.l.a.bu.w.a@gmail.com</a>
<a href=""mailto:o.l.iv.e.ra.l.abuwa@gmail.com"">o.l.iv.e.ra.l.abuwa@gmail.com</a>
<a href=""mailto:oli.ver.al.a.bu.wa@gmail.com"">oli.ver.al.a.bu.wa@gmail.com</a>
<a href=""mailto:o.liv.er.al.a.buw.a@gmail.com"">o.liv.er.al.a.buw.a@gmail.com</a>
<a href=""mailto:o.liver.ala.bu.wa@gmail.com"">o.liver.ala.bu.wa@gmail.com</a>
<a href=""mailto:o.l.i.v.er.a.l.abuwa@gmail.com"">o.l.i.v.er.a.l.abuwa@gmail.com</a>
<a href=""mailto:o.l.iv.e.r.alab.u.w.a@gmail.com"">o.l.iv.e.r.alab.u.w.a@gmail.com</a>
<a href=""mailto:o.li.ve.r.a.l.ab.u.w.a@gmail.com"">o.li.ve.r.a.l.ab.u.w.a@gmail.com</a>
<a href=""mailto:o.liver.a.lab.uw.a@gmail.com"">o.liver.a.lab.uw.a@gmail.com</a>
<a href=""mailto:oli.ve.ral.a.b.uw.a@gmail.com"">oli.ve.ral.a.b.uw.a@gmail.com</a>
<a href=""mailto:oliv.erala.buwa@gmail.com"">oliv.erala.buwa@gmail.com</a>
<a href=""mailto:o.l.ive.ralab.uw.a@gmail.com"">o.l.ive.ralab.uw.a@gmail.com</a>
<a href=""mailto:oli.ver.alabu.wa@gmail.com"">oli.ver.alabu.wa@gmail.com</a>
<a href=""mailto:ol.i.veral.a.bu.w.a@gmail.com"">ol.i.veral.a.bu.w.a@gmail.com</a>
<a href=""mailto:o.li.veralab.u.w.a@gmail.com"">o.li.veralab.u.w.a@gmail.com</a>
<a href=""mailto:o.li.veral.ab.u.wa@gmail.com"">o.li.veral.ab.u.wa@gmail.com</a>
<a href=""mailto:o.liver.a.l.a.b.u.w.a@gmail.com"">o.liver.a.l.a.b.u.w.a@gmail.com</a>
<a href=""mailto:oli.ve.r.a.l.ab.u.w.a@gmail.com"">oli.ve.r.a.l.ab.u.w.a@gmail.com</a>
<a href=""mailto:o.l.iv.e.rala.b.u.wa@gmail.com"">o.l.iv.e.rala.b.u.wa@gmail.com</a>
<a href=""mailto:ol.i.ve.ra.la.buwa@gmail.com"">ol.i.ve.ra.la.buwa@gmail.com</a>
<a href=""mailto:o.li.v.er.a.l.ab.uwa@gmail.com"">o.li.v.er.a.l.ab.uwa@gmail.com</a>
<a href=""mailto:ol.iv.e.r.a.l.a.b.uw.a@gmail.com"">ol.iv.e.r.a.l.a.b.uw.a@gmail.com</a>
<a href=""mailto:o.l.iv.eralabu.wa@gmail.com"">o.l.iv.eralabu.wa@gmail.com</a>
<a href=""mailto:oliv.e.ral.a.buwa@gmail.com"">oliv.e.ral.a.buwa@gmail.com</a>
<a href=""mailto:o.l.i.ver.a.lab.u.wa@gmail.com"">o.l.i.ver.a.lab.u.wa@gmail.com</a>
<a href=""mailto:o.li.ver.ala.buwa@gmail.com"">o.li.ver.ala.buwa@gmail.com</a>
<a href=""mailto:oliv.er.a.l.a.b.u.wa@gmail.com"">oliv.er.a.l.a.b.u.wa@gmail.com</a>
<a href=""mailto:ol.i.v.era.l.a.bu.w.a@gmail.com"">ol.i.v.era.l.a.bu.w.a@gmail.com</a>
<a href=""mailto:oli.ver.al.abu.w.a@gmail.com"">oli.ver.al.abu.w.a@gmail.com</a>
<a href=""mailto:ol.i.ver.a.la.buwa@gmail.com"">ol.i.ver.a.la.buwa@gmail.com</a>
<a href=""mailto:o.li.v.era.l.abuw.a@gmail.com"">o.li.v.era.l.abuw.a@gmail.com</a>
<a href=""mailto:o.li.v.e.r.a.la.b.u.wa@gmail.com"">o.li.v.e.r.a.la.b.u.wa@gmail.com</a>
<a href=""mailto:o.l.i.v.e.r.al.abuw.a@gmail.com"">o.l.i.v.e.r.al.abuw.a@gmail.com</a>
<a href=""mailto:ol.iver.al.ab.uwa@gmail.com"">ol.iver.al.ab.uwa@gmail.com</a>
<a href=""mailto:o.liveralabu.wa@gmail.com"">o.liveralabu.wa@gmail.com</a>
<a href=""mailto:oli.vera.l.a.b.uwa@gmail.com"">oli.vera.l.a.b.uwa@gmail.com</a>
<a href=""mailto:oliv.e.r.ala.b.u.w.a@gmail.com"">oliv.e.r.ala.b.u.w.a@gmail.com</a>
<a href=""mailto:o.l.ivera.la.b.uwa@gmail.com"">o.l.ivera.la.b.uwa@gmail.com</a>
<a href=""mailto:ol.i.v.eral.abu.w.a@gmail.com"">ol.i.v.eral.abu.w.a@gmail.com</a>
<a href=""mailto:o.li.ve.ra.la.b.u.wa@gmail.com"">o.li.ve.ra.la.b.u.wa@gmail.com</a>
<a href=""mailto:o.li.v.era.la.bu.w.a@gmail.com"">o.li.v.era.la.bu.w.a@gmail.com</a>
<a href=""mailto:ol.i.ve.ra.labuwa@gmail.com"">ol.i.ve.ra.labuwa@gmail.com</a>
<a href=""mailto:oliv.e.r.a.l.ab.uw.a@gmail.com"">oliv.e.r.a.l.ab.uw.a@gmail.com</a>
<a href=""mailto:ol.ive.ral.abu.wa@gmail.com"">ol.ive.ral.abu.wa@gmail.com</a>
<a href=""mailto:oli.v.er.al.abuwa@gmail.com"">oli.v.er.al.abuwa@gmail.com</a>
<a href=""mailto:ol.i.vera.la.b.u.w.a@gmail.com"">ol.i.vera.la.b.u.w.a@gmail.com</a>
<a href=""mailto:ol.i.ve.r.al.a.buwa@gmail.com"">ol.i.ve.r.al.a.buwa@gmail.com</a>
<a href=""mailto:oli.v.e.ra.la.bu.w.a@gmail.com"">oli.v.e.ra.la.bu.w.a@gmail.com</a>
<a href=""mailto:oli.v.era.lab.u.wa@gmail.com"">oli.v.era.lab.u.wa@gmail.com</a>
<a href=""mailto:o.liv.eral.a.b.u.w.a@gmail.com"">o.liv.eral.a.b.u.w.a@gmail.com</a>
<a href=""mailto:ol.i.veral.ab.uwa@gmail.com"">ol.i.veral.ab.uwa@gmail.com</a>
<a href=""mailto:o.liv.e.r.a.la.b.u.wa@gmail.com"">o.liv.e.r.a.la.b.u.wa@gmail.com</a>
<a href=""mailto:o.li.v.e.r.al.ab.u.wa@gmail.com"">o.li.v.e.r.al.ab.u.wa@gmail.com</a>
<a href=""mailto:oli.ve.r.al.a.bu.wa@gmail.com"">oli.ve.r.al.a.bu.wa@gmail.com</a>
<a href=""mailto:o.liv.era.la.b.u.w.a@gmail.com"">o.liv.era.la.b.u.w.a@gmail.com</a>
<a href=""mailto:ol.i.ve.ral.a.b.u.wa@gmail.com"">ol.i.ve.ral.a.b.u.wa@gmail.com</a>
<a href=""mailto:oliv.er.ala.b.uw.a@gmail.com"">oliv.er.ala.b.uw.a@gmail.com</a>
<a href=""mailto:o.l.iv.er.al.a.bu.wa@gmail.com"">o.l.iv.er.al.a.bu.wa@gmail.com</a>
<a href=""mailto:oli.v.e.r.alab.uwa@gmail.com"">oli.v.e.r.alab.uwa@gmail.com</a>
<a href=""mailto:oli.veral.abuw.a@gmail.com"">oli.veral.abuw.a@gmail.com</a>
<a href=""mailto:oli.ver.a.l.abuw.a@gmail.com"">oli.ver.a.l.abuw.a@gmail.com</a>
<a href=""mailto:oliver.ala.buw.a@gmail.com"">oliver.ala.buw.a@gmail.com</a>
<a href=""mailto:oli.ver.a.lab.u.wa@gmail.com"">oli.ver.a.lab.u.wa@gmail.com</a>
<a href=""mailto:o.l.ive.r.a.labuw.a@gmail.com"">o.l.ive.r.a.labuw.a@gmail.com</a>
<a href=""mailto:o.live.ral.ab.uwa@gmail.com"">o.live.ral.ab.uwa@gmail.com</a>
<a href=""mailto:o.liv.era.l.a.b.uwa@gmail.com"">o.liv.era.l.a.b.uwa@gmail.com</a>
<a href=""mailto:o.liv.e.ral.ab.uw.a@gmail.com"">o.liv.e.ral.ab.uw.a@gmail.com</a>
<a href=""mailto:ol.i.v.e.ral.abu.w.a@gmail.com"">ol.i.v.e.ral.abu.w.a@gmail.com</a>
<a href=""mailto:oliv.er.a.la.buwa@gmail.com"">oliv.er.a.la.buwa@gmail.com</a>
<a href=""mailto:oli.v.e.ral.abuw.a@gmail.com"">oli.v.e.ral.abuw.a@gmail.com</a>
<a href=""mailto:oliv.e.ral.ab.uw.a@gmail.com"">oliv.e.ral.ab.uw.a@gmail.com</a>
<a href=""mailto:o.li.vera.labuw.a@gmail.com"">o.li.vera.labuw.a@gmail.com</a>
<a href=""mailto:oliver.a.la.b.u.wa@gmail.com"">oliver.a.la.b.u.wa@gmail.com</a>
<a href=""mailto:oli.v.eral.abuw.a@gmail.com"">oli.v.eral.abuw.a@gmail.com</a>
<a href=""mailto:oliver.al.ab.u.w.a@gmail.com"">oliver.al.ab.u.w.a@gmail.com</a>
<a href=""mailto:o.liver.a.l.ab.uwa@gmail.com"">o.liver.a.l.ab.uwa@gmail.com</a>
<a href=""mailto:oli.veral.a.b.uwa@gmail.com"">oli.veral.a.b.uwa@gmail.com</a>
<a href=""mailto:o.li.v.er.a.l.a.b.u.w.a@gmail.com"">o.li.v.er.a.l.a.b.u.w.a@gmail.com</a>
<a href=""mailto:o.l.ive.r.a.l.ab.u.wa@gmail.com"">o.l.ive.r.a.l.ab.u.wa@gmail.com</a>
<a href=""mailto:oli.v.er.a.labu.wa@gmail.com"">oli.v.er.a.labu.wa@gmail.com</a>
<a href=""mailto:ol.iver.a.l.ab.u.w.a@gmail.com"">ol.iver.a.l.ab.u.w.a@gmail.com</a>
<a href=""mailto:o.l.i.v.e.r.a.la.bu.wa@gmail.com"">o.l.i.v.e.r.a.la.bu.wa@gmail.com</a>
<a href=""mailto:o.li.v.e.r.alab.u.w.a@gmail.com"">o.li.v.e.r.alab.u.w.a@gmail.com</a>
<a href=""mailto:ol.ive.r.al.a.buwa@gmail.com"">ol.ive.r.al.a.buwa@gmail.com</a>
<a href=""mailto:o.livera.lab.uwa@gmail.com"">o.livera.lab.uwa@gmail.com</a>
<a href=""mailto:olive.r.a.labu.wa@gmail.com"">olive.r.a.labu.wa@gmail.com</a>
<a href=""mailto:o.l.i.verala.b.u.w.a@gmail.com"">o.l.i.verala.b.u.w.a@gmail.com</a>
<a href=""mailto:o.li.v.e.r.a.lab.uwa@gmail.com"">o.li.v.e.r.a.lab.uwa@gmail.com</a>
<a href=""mailto:o.l.i.v.er.a.l.abu.w.a@gmail.com"">o.l.i.v.er.a.l.abu.w.a@gmail.com</a>
<a href=""mailto:o.li.ver.a.l.abu.wa@gmail.com"">o.li.ver.a.l.abu.wa@gmail.com</a>
<a href=""mailto:o.l.iveral.a.b.uwa@gmail.com"">o.l.iveral.a.b.uwa@gmail.com</a>
<a href=""mailto:olive.ra.la.b.uw.a@gmail.com"">olive.ra.la.b.uw.a@gmail.com</a>
<a href=""mailto:ol.i.ve.r.a.l.a.buw.a@gmail.com"">ol.i.ve.r.a.l.a.buw.a@gmail.com</a>
<a href=""mailto:o.l.i.v.era.l.ab.uwa@gmail.com"">o.l.i.v.era.l.ab.uwa@gmail.com</a>
<a href=""mailto:ol.i.v.e.r.a.lab.uw.a@gmail.com"">ol.i.v.e.r.a.lab.uw.a@gmail.com</a>
<a href=""mailto:oli.v.e.ralab.u.w.a@gmail.com"">oli.v.e.ralab.u.w.a@gmail.com</a>
<a href=""mailto:oli.ver.alab.uwa@gmail.com"">oli.ver.alab.uwa@gmail.com</a>
<a href=""mailto:o.liv.e.r.al.a.bu.w.a@gmail.com"">o.liv.e.r.al.a.bu.w.a@gmail.com</a>
<a href=""mailto:oliv.e.r.al.abu.w.a@gmail.com"">oliv.e.r.al.abu.w.a@gmail.com</a>
<a href=""mailto:o.l.ive.ral.abuwa@gmail.com"">o.l.ive.ral.abuwa@gmail.com</a>
<a href=""mailto:o.live.r.ala.bu.w.a@gmail.com"">o.live.r.ala.bu.w.a@gmail.com</a>
<a href=""mailto:o.l.i.ve.ra.la.bu.wa@gmail.com"">o.l.i.ve.ra.la.bu.wa@gmail.com</a>
<a href=""mailto:oli.ve.ra.l.ab.uwa@gmail.com"">oli.ve.ra.l.ab.uwa@gmail.com</a>
<a href=""mailto:oli.v.era.l.ab.u.w.a@gmail.com"">oli.v.era.l.ab.u.w.a@gmail.com</a>
<a href=""mailto:oli.v.er.al.a.buw.a@gmail.com"">oli.v.er.al.a.buw.a@gmail.com</a>
<a href=""mailto:oli.ver.a.la.b.u.wa@gmail.com"">oli.ver.a.la.b.u.wa@gmail.com</a>
<a href=""mailto:oli.v.eral.ab.uw.a@gmail.com"">oli.v.eral.ab.uw.a@gmail.com</a>
<a href=""mailto:oli.v.er.alab.u.wa@gmail.com"">oli.v.er.alab.u.wa@gmail.com</a>
<a href=""mailto:oli.ve.r.alabuw.a@gmail.com"">oli.ve.r.alabuw.a@gmail.com</a>
<a href=""mailto:o.l.i.v.era.l.abu.w.a@gmail.com"">o.l.i.v.era.l.abu.w.a@gmail.com</a>
<a href=""mailto:o.liver.a.l.a.b.uw.a@gmail.com"">o.liver.a.l.a.b.uw.a@gmail.com</a>
<a href=""mailto:o.l.i.ve.ra.l.a.b.u.wa@gmail.com"">o.l.i.ve.ra.l.a.b.u.wa@gmail.com</a>
<a href=""mailto:oli.verala.b.u.wa@gmail.com"">oli.verala.b.u.wa@gmail.com</a>
<a href=""mailto:oli.v.e.r.al.abuwa@gmail.com"">oli.v.e.r.al.abuwa@gmail.com</a>
<a href=""mailto:oliv.e.ra.l.abu.wa@gmail.com"">oliv.e.ra.l.abu.wa@gmail.com</a>
<a href=""mailto:o.l.i.vera.l.abuw.a@gmail.com"">o.l.i.vera.l.abuw.a@gmail.com</a>
<a href=""mailto:ol.i.ve.rala.bu.wa@gmail.com"">ol.i.ve.rala.bu.wa@gmail.com</a>
<a href=""mailto:oli.v.er.a.lab.u.wa@gmail.com"">oli.v.er.a.lab.u.wa@gmail.com</a>
<a href=""mailto:oli.veral.a.bu.wa@gmail.com"">oli.veral.a.bu.wa@gmail.com</a>
<a href=""mailto:o.li.ve.r.a.lab.uw.a@gmail.com"">o.li.ve.r.a.lab.uw.a@gmail.com</a>
<a href=""mailto:olive.r.al.abu.wa@gmail.com"">olive.r.al.abu.wa@gmail.com</a>
<a href=""mailto:o.li.v.er.a.labuwa@gmail.com"">o.li.v.er.a.labuwa@gmail.com</a>
<a href=""mailto:ol.i.vera.lab.u.w.a@gmail.com"">ol.i.vera.lab.u.w.a@gmail.com</a>
<a href=""mailto:o.liv.era.lab.u.w.a@gmail.com"">o.liv.era.lab.u.w.a@gmail.com</a>
<a href=""mailto:o.livera.l.ab.uw.a@gmail.com"">o.livera.l.ab.uw.a@gmail.com</a>
<a href=""mailto:ol.iv.erala.b.uwa@gmail.com"">ol.iv.erala.b.uwa@gmail.com</a>
<a href=""mailto:o.l.i.ve.r.al.ab.u.wa@gmail.com"">o.l.i.ve.r.al.ab.u.wa@gmail.com</a>
<a href=""mailto:o.live.ral.ab.uw.a@gmail.com"">o.live.ral.ab.uw.a@gmail.com</a>
<a href=""mailto:o.liv.er.a.la.buw.a@gmail.com"">o.liv.er.a.la.buw.a@gmail.com</a>
<a href=""mailto:o.l.i.v.er.a.l.ab.uw.a@gmail.com"">o.l.i.v.er.a.l.ab.uw.a@gmail.com</a>
<a href=""mailto:o.l.iveral.a.buwa@gmail.com"">o.l.iveral.a.buwa@gmail.com</a>
<a href=""mailto:globaldmoslam@gmail.com"">globaldmoslam@gmail.com</a>
<a href=""mailto:glo.ba.l.dmo.s.la.m@gmail.com"">glo.ba.l.dmo.s.la.m@gmail.com</a>
<a href=""mailto:g.lo.b.a.l.d.m.osl.a.m@gmail.com"">g.lo.b.a.l.d.m.osl.a.m@gmail.com</a>
<a href=""mailto:gl.o.b.aldm.os.l.a.m@gmail.com"">gl.o.b.aldm.os.l.a.m@gmail.com</a>
<a href=""mailto:g.l.ob.a.ldmos.lam@gmail.com"">g.l.ob.a.ldmos.lam@gmail.com</a>
<a href=""mailto:glo.b.ald.mos.l.am@gmail.com"">glo.b.ald.mos.l.am@gmail.com</a>
<a href=""mailto:gl.o.bal.d.m.os.la.m@gmail.com"">gl.o.bal.d.m.os.la.m@gmail.com</a>
<a href=""mailto:g.lo.baldm.o.s.la.m@gmail.com"">g.lo.baldm.o.s.la.m@gmail.com</a>
<a href=""mailto:glo.b.a.ld.moslam@gmail.com"">glo.b.a.ld.moslam@gmail.com</a>
<a href=""mailto:glo.b.a.l.dmoslam@gmail.com"">glo.b.a.l.dmoslam@gmail.com</a>
<a href=""mailto:g.lob.aldm.o.sl.am@gmail.com"">g.lob.aldm.o.sl.am@gmail.com</a>
<a href=""mailto:g.lo.bal.d.mos.la.m@gmail.com"">g.lo.bal.d.mos.la.m@gmail.com</a>
<a href=""mailto:g.lob.ald.m.o.s.l.am@gmail.com"">g.lob.ald.m.o.s.l.am@gmail.com</a>
<a href=""mailto:gl.ob.al.dm.o.sl.am@gmail.com"">gl.ob.al.dm.o.sl.am@gmail.com</a>
<a href=""mailto:glo.b.a.ldm.o.slam@gmail.com"">glo.b.a.ldm.o.slam@gmail.com</a>
<a href=""mailto:g.l.ob.a.l.dmo.sl.am@gmail.com"">g.l.ob.a.l.dmo.sl.am@gmail.com</a>
<a href=""mailto:gl.ob.a.ldmos.l.am@gmail.com"">gl.ob.a.ldmos.l.am@gmail.com</a>
<a href=""mailto:gl.o.ba.l.dm.osla.m@gmail.com"">gl.o.ba.l.dm.osla.m@gmail.com</a>
<a href=""mailto:g.lob.al.d.m.o.slam@gmail.com"">g.lob.al.d.m.o.slam@gmail.com</a>
<a href=""mailto:globa.l.d.moslam@gmail.com"">globa.l.d.moslam@gmail.com</a>
<a href=""mailto:gl.o.ba.ldmosla.m@gmail.com"">gl.o.ba.ldmosla.m@gmail.com</a>
<a href=""mailto:g.l.ob.a.l.dmos.l.a.m@gmail.com"">g.l.ob.a.l.dmos.l.a.m@gmail.com</a>
<a href=""mailto:gl.ob.ald.m.o.sla.m@gmail.com"">gl.ob.ald.m.o.sla.m@gmail.com</a>
<a href=""mailto:glo.ba.ldm.o.slam@gmail.com"">glo.ba.ldm.o.slam@gmail.com</a>
<a href=""mailto:glob.a.ldm.o.s.l.a.m@gmail.com"">glob.a.ldm.o.s.l.a.m@gmail.com</a>
<a href=""mailto:g.lo.ba.l.dmo.sl.a.m@gmail.com"">g.lo.ba.l.dmo.sl.a.m@gmail.com</a>
<a href=""mailto:gl.o.ba.ldm.o.s.la.m@gmail.com"">gl.o.ba.ldm.o.s.la.m@gmail.com</a>
<a href=""mailto:glo.b.aldm.o.sl.am@gmail.com"">glo.b.aldm.o.sl.am@gmail.com</a>
<a href=""mailto:glo.ba.ld.m.o.s.l.am@gmail.com"">glo.ba.ld.m.o.s.l.am@gmail.com</a>
<a href=""mailto:g.lob.ald.mo.slam@gmail.com"">g.lob.ald.mo.slam@gmail.com</a>
<a href=""mailto:g.lob.a.l.dm.osl.a.m@gmail.com"">g.lob.a.l.dm.osl.a.m@gmail.com</a>
<a href=""mailto:g.lo.ba.ldmos.lam@gmail.com"">g.lo.ba.ldmos.lam@gmail.com</a>
<a href=""mailto:glob.a.ld.mo.sl.a.m@gmail.com"">glob.a.ld.mo.sl.a.m@gmail.com</a>
<a href=""mailto:gl.o.bald.m.o.s.la.m@gmail.com"">gl.o.bald.m.o.s.la.m@gmail.com</a>
<a href=""mailto:g.l.obaldmosla.m@gmail.com"">g.l.obaldmosla.m@gmail.com</a>
<a href=""mailto:g.l.o.bald.mo.slam@gmail.com"">g.l.o.bald.mo.slam@gmail.com</a>
<a href=""mailto:glob.a.ld.mosla.m@gmail.com"">glob.a.ld.mosla.m@gmail.com</a>
<a href=""mailto:gl.o.b.al.dmo.s.l.am@gmail.com"">gl.o.b.al.dmo.s.l.am@gmail.com</a>
<a href=""mailto:g.l.ob.al.d.mo.s.l.a.m@gmail.com"">g.l.ob.al.d.mo.s.l.a.m@gmail.com</a>
<a href=""mailto:g.l.ob.al.dm.o.sl.am@gmail.com"">g.l.ob.al.dm.o.sl.am@gmail.com</a>
<a href=""mailto:g.lobal.d.mos.la.m@gmail.com"">g.lobal.d.mos.la.m@gmail.com</a>
<a href=""mailto:gl.ob.a.ld.m.osl.a.m@gmail.com"">gl.ob.a.ld.m.osl.a.m@gmail.com</a>
<a href=""mailto:globa.ld.m.osla.m@gmail.com"">globa.ld.m.osla.m@gmail.com</a>
<a href=""mailto:g.loba.l.d.mo.sl.am@gmail.com"">g.loba.l.d.mo.sl.am@gmail.com</a>
<a href=""mailto:g.lo.b.a.l.dmosl.am@gmail.com"">g.lo.b.a.l.dmosl.am@gmail.com</a>
<a href=""mailto:glo.b.ald.m.oslam@gmail.com"">glo.b.ald.m.oslam@gmail.com</a>
<a href=""mailto:g.lo.bal.d.mo.sla.m@gmail.com"">g.lo.bal.d.mo.sla.m@gmail.com</a>
<a href=""mailto:g.l.obaldm.o.sla.m@gmail.com"">g.l.obaldm.o.sla.m@gmail.com</a>
<a href=""mailto:gl.obal.dm.oslam@gmail.com"">gl.obal.dm.oslam@gmail.com</a>
<a href=""mailto:gl.o.ba.ldm.o.s.lam@gmail.com"">gl.o.ba.ldm.o.s.lam@gmail.com</a>
<a href=""mailto:g.l.o.b.al.d.mo.s.la.m@gmail.com"">g.l.o.b.al.d.mo.s.la.m@gmail.com</a>
<a href=""mailto:global.d.mo.sla.m@gmail.com"">global.d.mo.sla.m@gmail.com</a>
<a href=""mailto:g.l.o.b.a.l.d.m.o.sla.m@gmail.com"">g.l.o.b.a.l.d.m.o.sla.m@gmail.com</a>
<a href=""mailto:g.l.obald.mo.sl.a.m@gmail.com"">g.l.obald.mo.sl.a.m@gmail.com</a>
<a href=""mailto:glo.b.al.dm.os.la.m@gmail.com"">glo.b.al.dm.os.la.m@gmail.com</a>
<a href=""mailto:g.l.ob.a.ldmo.sl.a.m@gmail.com"">g.l.ob.a.ldmo.sl.a.m@gmail.com</a>
<a href=""mailto:glob.a.ldm.osl.am@gmail.com"">glob.a.ldm.osl.am@gmail.com</a>
<a href=""mailto:gl.oba.l.d.mo.sl.a.m@gmail.com"">gl.oba.l.d.mo.sl.a.m@gmail.com</a>
<a href=""mailto:g.lobal.d.m.osla.m@gmail.com"">g.lobal.d.m.osla.m@gmail.com</a>
<a href=""mailto:g.l.o.b.al.d.mos.l.am@gmail.com"">g.l.o.b.al.d.mos.l.am@gmail.com</a>
<a href=""mailto:gl.ob.a.l.dm.os.l.a.m@gmail.com"">gl.ob.a.l.dm.os.l.a.m@gmail.com</a>
<a href=""mailto:gl.o.b.al.dm.os.la.m@gmail.com"">gl.o.b.al.dm.os.la.m@gmail.com</a>
<a href=""mailto:gl.oba.l.d.mo.s.l.a.m@gmail.com"">gl.oba.l.d.mo.s.l.a.m@gmail.com</a>
<a href=""mailto:glob.al.d.m.o.slam@gmail.com"">glob.al.d.m.o.slam@gmail.com</a>
<a href=""mailto:gl.o.b.al.d.mo.s.l.a.m@gmail.com"">gl.o.b.al.d.mo.s.l.a.m@gmail.com</a>
<a href=""mailto:g.lob.aldmoslam@gmail.com"">g.lob.aldmoslam@gmail.com</a>
<a href=""mailto:glo.b.a.l.dm.o.sla.m@gmail.com"">glo.b.a.l.dm.o.sla.m@gmail.com</a>
<a href=""mailto:gl.oba.l.dm.os.l.am@gmail.com"">gl.oba.l.dm.os.l.am@gmail.com</a>
<a href=""mailto:g.lobaldmo.slam@gmail.com"">g.lobaldmo.slam@gmail.com</a>
<a href=""mailto:g.l.o.ba.ld.m.o.sl.a.m@gmail.com"">g.l.o.ba.ld.m.o.sl.a.m@gmail.com</a>
<a href=""mailto:g.l.o.b.a.ldmo.sl.am@gmail.com"">g.l.o.b.a.ldmo.sl.am@gmail.com</a>
<a href=""mailto:g.lob.ald.m.o.slam@gmail.com"">g.lob.ald.m.o.slam@gmail.com</a>
<a href=""mailto:g.lo.bal.d.mo.s.l.am@gmail.com"">g.lo.bal.d.mo.s.l.am@gmail.com</a>
<a href=""mailto:glo.ba.ldm.os.l.am@gmail.com"">glo.ba.ldm.os.l.am@gmail.com</a>
<a href=""mailto:glo.bal.d.mo.s.lam@gmail.com"">glo.bal.d.mo.s.lam@gmail.com</a>
<a href=""mailto:gl.o.ba.ldmo.sla.m@gmail.com"">gl.o.ba.ldmo.sla.m@gmail.com</a>
<a href=""mailto:gl.ob.a.l.d.mo.s.l.a.m@gmail.com"">gl.ob.a.l.d.mo.s.l.a.m@gmail.com</a>
<a href=""mailto:g.loba.ld.mosla.m@gmail.com"">g.loba.ld.mosla.m@gmail.com</a>
<a href=""mailto:g.lo.b.a.l.d.m.o.sla.m@gmail.com"">g.lo.b.a.l.d.m.o.sla.m@gmail.com</a>
<a href=""mailto:g.lob.a.l.dmo.s.l.a.m@gmail.com"">g.lob.a.l.dmo.s.l.a.m@gmail.com</a>
<a href=""mailto:glo.ba.l.dmo.s.l.a.m@gmail.com"">glo.ba.l.dmo.s.l.a.m@gmail.com</a>
<a href=""mailto:g.l.o.b.a.l.dm.o.sl.am@gmail.com"">g.l.o.b.a.l.dm.o.sl.am@gmail.com</a>
<a href=""mailto:gl.ob.al.d.mo.s.la.m@gmail.com"">gl.ob.al.d.mo.s.la.m@gmail.com</a>
<a href=""mailto:glo.b.a.l.dm.osla.m@gmail.com"">glo.b.a.l.dm.osla.m@gmail.com</a>
<a href=""mailto:g.l.oba.ldmosl.am@gmail.com"">g.l.oba.ldmosl.am@gmail.com</a>
<a href=""mailto:g.lo.bal.dm.o.s.la.m@gmail.com"">g.lo.bal.dm.o.s.la.m@gmail.com</a>
<a href=""mailto:gl.ob.a.l.dmo.s.l.am@gmail.com"">gl.ob.a.l.dmo.s.l.am@gmail.com</a>
<a href=""mailto:glob.a.ld.m.o.slam@gmail.com"">glob.a.ld.m.o.slam@gmail.com</a>
<a href=""mailto:g.lob.a.l.d.mosl.am@gmail.com"">g.lob.a.l.d.mosl.am@gmail.com</a>
<a href=""mailto:g.l.o.ba.ld.mo.s.la.m@gmail.com"">g.l.o.ba.ld.mo.s.la.m@gmail.com</a>
<a href=""mailto:g.lo.ba.l.dm.o.slam@gmail.com"">g.lo.ba.l.dm.o.slam@gmail.com</a>
<a href=""mailto:g.lo.bal.dmo.s.l.am@gmail.com"">g.lo.bal.dmo.s.l.am@gmail.com</a>
<a href=""mailto:g.l.ob.a.l.dm.o.sla.m@gmail.com"">g.l.ob.a.l.dm.o.sla.m@gmail.com</a>
<a href=""mailto:g.l.o.bald.m.osl.am@gmail.com"">g.l.o.bald.m.osl.am@gmail.com</a>
<a href=""mailto:g.loba.ld.m.o.s.l.a.m@gmail.com"">g.loba.ld.m.o.s.l.a.m@gmail.com</a>
<a href=""mailto:g.lo.b.a.ld.m.os.lam@gmail.com"">g.lo.b.a.ld.m.os.lam@gmail.com</a>
<a href=""mailto:global.d.m.osl.am@gmail.com"">global.d.m.osl.am@gmail.com</a>
<a href=""mailto:gl.o.bald.mo.slam@gmail.com"">gl.o.bald.mo.slam@gmail.com</a>
<a href=""mailto:glo.b.a.ld.mo.slam@gmail.com"">glo.b.a.ld.mo.slam@gmail.com</a>
<a href=""mailto:g.l.o.bald.m.o.sl.am@gmail.com"">g.l.o.bald.m.o.sl.am@gmail.com</a>
<a href=""mailto:glob.a.ld.m.osl.am@gmail.com"">glob.a.ld.m.osl.am@gmail.com</a>
<a href=""mailto:g.l.o.b.a.l.dmosl.a.m@gmail.com"">g.l.o.b.a.l.dmosl.a.m@gmail.com</a>
<a href=""mailto:g.loba.ldm.o.slam@gmail.com"">g.loba.ldm.o.slam@gmail.com</a>
<a href=""mailto:gl.ob.a.l.d.m.o.sla.m@gmail.com"">gl.ob.a.l.d.m.o.sla.m@gmail.com</a>
<a href=""mailto:g.l.ob.a.ld.mo.sl.a.m@gmail.com"">g.l.ob.a.ld.mo.sl.a.m@gmail.com</a>
<a href=""mailto:glo.bal.dmo.sl.a.m@gmail.com"">glo.bal.dmo.sl.a.m@gmail.com</a>
<a href=""mailto:glo.b.ald.m.o.sl.a.m@gmail.com"">glo.b.ald.m.o.sl.a.m@gmail.com</a>
<a href=""mailto:g.lo.bald.m.os.la.m@gmail.com"">g.lo.bald.m.os.la.m@gmail.com</a>
<a href=""mailto:gl.obal.dm.os.l.am@gmail.com"">gl.obal.dm.os.l.am@gmail.com</a>
<a href=""mailto:glob.al.d.mos.l.a.m@gmail.com"">glob.al.d.mos.l.a.m@gmail.com</a>
<a href=""mailto:glob.aldm.os.l.am@gmail.com"">glob.aldm.os.l.am@gmail.com</a>
<a href=""mailto:g.l.ob.a.l.d.mo.sl.a.m@gmail.com"">g.l.ob.a.l.d.mo.sl.a.m@gmail.com</a>
<a href=""mailto:g.l.ob.al.dm.os.l.a.m@gmail.com"">g.l.ob.al.dm.os.l.a.m@gmail.com</a>
<a href=""mailto:g.l.o.b.a.l.d.mo.sl.am@gmail.com"">g.l.o.b.a.l.d.mo.sl.am@gmail.com</a>
<a href=""mailto:glo.b.a.l.dmosla.m@gmail.com"">glo.b.a.l.dmosla.m@gmail.com</a>
<a href=""mailto:g.lo.b.al.d.mosl.am@gmail.com"">g.lo.b.al.d.mosl.am@gmail.com</a>
<a href=""mailto:glob.a.l.d.mo.s.l.am@gmail.com"">glob.a.l.d.mo.s.l.am@gmail.com</a>
<a href=""mailto:globa.ld.mos.la.m@gmail.com"">globa.ld.mos.la.m@gmail.com</a>
<a href=""mailto:gl.ob.a.ld.mo.s.la.m@gmail.com"">gl.ob.a.ld.mo.s.la.m@gmail.com</a>
<a href=""mailto:g.l.o.ba.l.d.m.osl.am@gmail.com"">g.l.o.ba.l.d.m.osl.am@gmail.com</a>
<a href=""mailto:glo.b.a.ldm.osl.a.m@gmail.com"">glo.b.a.ldm.osl.a.m@gmail.com</a>
<a href=""mailto:gl.oba.ld.mo.s.l.am@gmail.com"">gl.oba.ld.mo.s.l.am@gmail.com</a>
<a href=""mailto:g.lob.a.ld.m.os.l.a.m@gmail.com"">g.lob.a.ld.m.os.l.a.m@gmail.com</a>
<a href=""mailto:g.lob.a.l.d.m.o.s.lam@gmail.com"">g.lob.a.l.d.m.o.s.lam@gmail.com</a>
<a href=""mailto:g.l.o.bal.d.mo.sla.m@gmail.com"">g.l.o.bal.d.mo.sla.m@gmail.com</a>
<a href=""mailto:gl.o.bald.m.o.s.l.a.m@gmail.com"">gl.o.bald.m.o.s.l.a.m@gmail.com</a>
<a href=""mailto:g.l.o.b.a.l.d.m.o.slam@gmail.com"">g.l.o.b.a.l.d.m.o.slam@gmail.com</a>
<a href=""mailto:glo.ba.ld.m.o.s.la.m@gmail.com"">glo.ba.ld.m.o.s.la.m@gmail.com</a>
<a href=""mailto:g.l.o.baldm.osla.m@gmail.com"">g.l.o.baldm.osla.m@gmail.com</a>
<a href=""mailto:g.l.obal.dmosl.a.m@gmail.com"">g.l.obal.dmosl.a.m@gmail.com</a>
<a href=""mailto:gl.o.ba.ld.m.oslam@gmail.com"">gl.o.ba.ld.m.oslam@gmail.com</a>
<a href=""mailto:g.l.obaldmo.s.l.a.m@gmail.com"">g.l.obaldmo.s.l.a.m@gmail.com</a>
<a href=""mailto:gl.ob.aldm.o.s.lam@gmail.com"">gl.ob.aldm.o.s.lam@gmail.com</a>
<a href=""mailto:g.lo.b.ald.mo.sl.am@gmail.com"">g.lo.b.ald.mo.sl.am@gmail.com</a>
<a href=""mailto:g.l.oba.ld.mosl.a.m@gmail.com"">g.l.oba.ld.mosl.a.m@gmail.com</a>
<a href=""mailto:g.l.oba.l.dmo.s.lam@gmail.com"">g.l.oba.l.dmo.s.lam@gmail.com</a>
<a href=""mailto:gl.o.b.a.ld.mo.s.lam@gmail.com"">gl.o.b.a.ld.mo.s.lam@gmail.com</a>
<a href=""mailto:gl.obald.mo.slam@gmail.com"">gl.obald.mo.slam@gmail.com</a>
<a href=""mailto:gl.o.baldm.o.s.l.a.m@gmail.com"">gl.o.baldm.o.s.l.a.m@gmail.com</a>
<a href=""mailto:globald.m.os.l.a.m@gmail.com"">globald.m.os.l.a.m@gmail.com</a>
<a href=""mailto:gl.oba.ld.mo.slam@gmail.com"">gl.oba.ld.mo.slam@gmail.com</a>
<a href=""mailto:gl.o.b.a.ldm.o.s.lam@gmail.com"">gl.o.b.a.ldm.o.s.lam@gmail.com</a>
<a href=""mailto:globa.l.dmos.l.am@gmail.com"">globa.l.dmos.l.am@gmail.com</a>
<a href=""mailto:glo.b.a.ldmo.s.l.am@gmail.com"">glo.b.a.ldmo.s.l.am@gmail.com</a>
<a href=""mailto:g.lo.b.a.ldm.o.sla.m@gmail.com"">g.lo.b.a.ldm.o.sla.m@gmail.com</a>
<a href=""mailto:gl.o.bal.d.mosl.am@gmail.com"">gl.o.bal.d.mosl.am@gmail.com</a>
<a href=""mailto:glo.b.a.l.d.m.o.sl.a.m@gmail.com"">glo.b.a.l.d.m.o.sl.a.m@gmail.com</a>
<a href=""mailto:globa.ldm.osla.m@gmail.com"">globa.ldm.osla.m@gmail.com</a>
<a href=""mailto:g.lobal.d.mosl.am@gmail.com"">g.lobal.d.mosl.am@gmail.com</a>
<a href=""mailto:g.l.o.ba.l.d.mo.sla.m@gmail.com"">g.l.o.ba.l.d.mo.sla.m@gmail.com</a>
<a href=""mailto:gl.o.b.ald.m.os.l.a.m@gmail.com"">gl.o.b.ald.m.os.l.a.m@gmail.com</a>
<a href=""mailto:glob.a.l.d.m.o.s.l.am@gmail.com"">glob.a.l.d.m.o.s.l.am@gmail.com</a>
<a href=""mailto:glo.baldm.osla.m@gmail.com"">glo.baldm.osla.m@gmail.com</a>
<a href=""mailto:globa.ld.m.os.l.am@gmail.com"">globa.ld.m.os.l.am@gmail.com</a>
<a href=""mailto:g.l.o.ba.ld.m.osl.am@gmail.com"">g.l.o.ba.ld.m.osl.am@gmail.com</a>
<a href=""mailto:globa.l.dmos.la.m@gmail.com"">globa.l.dmos.la.m@gmail.com</a>
<a href=""mailto:glo.b.ald.mos.l.a.m@gmail.com"">glo.b.ald.mos.l.a.m@gmail.com</a>
<a href=""mailto:g.lobal.dmosl.am@gmail.com"">g.lobal.dmosl.am@gmail.com</a>
<a href=""mailto:g.lob.al.d.mos.l.a.m@gmail.com"">g.lob.al.d.mos.l.a.m@gmail.com</a>
<a href=""mailto:g.lobaldm.osl.am@gmail.com"">g.lobaldm.osl.am@gmail.com</a>
<a href=""mailto:glo.b.a.ld.m.o.s.l.a.m@gmail.com"">glo.b.a.ld.m.o.s.l.a.m@gmail.com</a>
<a href=""mailto:glo.baldmos.la.m@gmail.com"">glo.baldmos.la.m@gmail.com</a>
<a href=""mailto:glo.b.al.d.mo.s.l.a.m@gmail.com"">glo.b.al.d.mo.s.l.a.m@gmail.com</a>
<a href=""mailto:gl.o.ba.ld.mo.sl.am@gmail.com"">gl.o.ba.ld.mo.sl.am@gmail.com</a>
<a href=""mailto:globaldm.osl.a.m@gmail.com"">globaldm.osl.a.m@gmail.com</a>
<a href=""mailto:gl.o.ba.l.d.mo.slam@gmail.com"">gl.o.ba.l.d.mo.slam@gmail.com</a>
<a href=""mailto:g.loba.ldm.os.l.am@gmail.com"">g.loba.ldm.os.l.am@gmail.com</a>
<a href=""mailto:g.lo.ba.l.d.moslam@gmail.com"">g.lo.ba.l.d.moslam@gmail.com</a>
<a href=""mailto:g.l.oba.ldmos.l.am@gmail.com"">g.l.oba.ldmos.l.am@gmail.com</a>
<a href=""mailto:g.lobal.d.mo.sla.m@gmail.com"">g.lobal.d.mo.sla.m@gmail.com</a>
<a href=""mailto:globa.l.d.m.os.l.am@gmail.com"">globa.l.d.m.os.l.am@gmail.com</a>
<a href=""mailto:g.l.o.ba.ldmo.sla.m@gmail.com"">g.l.o.ba.ldmo.sla.m@gmail.com</a>
<a href=""mailto:g.l.o.ba.ld.mos.la.m@gmail.com"">g.l.o.ba.ld.mos.la.m@gmail.com</a>
<a href=""mailto:glob.a.l.d.mos.l.am@gmail.com"">glob.a.l.d.mos.l.am@gmail.com</a>
<a href=""mailto:g.lo.b.aldmos.l.a.m@gmail.com"">g.lo.b.aldmos.l.a.m@gmail.com</a>
<a href=""mailto:glob.a.ld.mo.s.l.a.m@gmail.com"">glob.a.ld.mo.s.l.a.m@gmail.com</a>
<a href=""mailto:g.l.oba.l.dmo.sl.a.m@gmail.com"">g.l.oba.l.dmo.sl.a.m@gmail.com</a>
<a href=""mailto:g.l.ob.aldmos.l.a.m@gmail.com"">g.l.ob.aldmos.l.a.m@gmail.com</a>
<a href=""mailto:g.lo.ba.ldm.oslam@gmail.com"">g.lo.ba.ldm.oslam@gmail.com</a>
<a href=""mailto:g.l.o.b.a.l.dmo.slam@gmail.com"">g.l.o.b.a.l.dmo.slam@gmail.com</a>
<a href=""mailto:g.l.ob.a.ldmo.s.lam@gmail.com"">g.l.ob.a.ldmo.s.lam@gmail.com</a>
<a href=""mailto:glo.bald.mo.s.l.a.m@gmail.com"">glo.bald.mo.s.l.a.m@gmail.com</a>
<a href=""mailto:g.lo.baldmos.l.am@gmail.com"">g.lo.baldmos.l.am@gmail.com</a>
<a href=""mailto:g.lo.bal.d.m.o.s.l.a.m@gmail.com"">g.lo.bal.d.m.o.s.l.a.m@gmail.com</a>
<a href=""mailto:gl.o.b.ald.mo.s.lam@gmail.com"">gl.o.b.ald.mo.s.lam@gmail.com</a>
<a href=""mailto:g.lo.ba.l.dm.os.lam@gmail.com"">g.lo.ba.l.dm.os.lam@gmail.com</a>
<a href=""mailto:glo.b.ald.mosl.a.m@gmail.com"">glo.b.ald.mosl.a.m@gmail.com</a>
<a href=""mailto:g.loba.l.d.mos.l.am@gmail.com"">g.loba.l.d.mos.l.am@gmail.com</a>
<a href=""mailto:g.l.ob.a.ld.m.o.s.lam@gmail.com"">g.l.ob.a.ld.m.o.s.lam@gmail.com</a>
<a href=""mailto:gl.o.b.a.ldm.oslam@gmail.com"">gl.o.b.a.ldm.oslam@gmail.com</a>
<a href=""mailto:gl.o.ba.ldmo.s.l.am@gmail.com"">gl.o.ba.ldmo.s.l.am@gmail.com</a>
<a href=""mailto:g.lobaldm.o.s.l.a.m@gmail.com"">g.lobaldm.o.s.l.a.m@gmail.com</a>
<a href=""mailto:g.lo.b.a.ld.mos.lam@gmail.com"">g.lo.b.a.ld.mos.lam@gmail.com</a>
<a href=""mailto:g.lo.bal.dm.o.sla.m@gmail.com"">g.lo.bal.dm.o.sla.m@gmail.com</a>
<a href=""mailto:g.l.o.b.al.d.m.o.sl.a.m@gmail.com"">g.l.o.b.al.d.m.o.sl.a.m@gmail.com</a>
<a href=""mailto:g.l.o.bal.d.m.osl.a.m@gmail.com"">g.l.o.bal.d.m.osl.a.m@gmail.com</a>
<a href=""mailto:glo.b.ald.mos.lam@gmail.com"">glo.b.ald.mos.lam@gmail.com</a>
<a href=""mailto:g.l.o.b.ald.mo.s.lam@gmail.com"">g.l.o.b.ald.mo.s.lam@gmail.com</a>
<a href=""mailto:glo.b.a.ldm.o.s.la.m@gmail.com"">glo.b.a.ldm.o.s.la.m@gmail.com</a>
<a href=""mailto:gl.obaldmo.slam@gmail.com"">gl.obaldmo.slam@gmail.com</a>
<a href=""mailto:g.l.oba.ld.mos.lam@gmail.com"">g.l.oba.ld.mos.lam@gmail.com</a>
<a href=""mailto:agentvictorokle@gmail.com"">agentvictorokle@gmail.com</a>
<a href=""mailto:age.ntv.ictor.o.k.l.e@gmail.com"">age.ntv.ictor.o.k.l.e@gmail.com</a>
<a href=""mailto:a.g.en.t.v.i.c.t.oro.k.l.e@gmail.com"">a.g.en.t.v.i.c.t.oro.k.l.e@gmail.com</a>
<a href=""mailto:ag.en.tv.icto.ro.kl.e@gmail.com"">ag.en.tv.icto.ro.kl.e@gmail.com</a>
<a href=""mailto:a.g.e.n.t.vic.toro.kl.e@gmail.com"">a.g.e.n.t.vic.toro.kl.e@gmail.com</a>
<a href=""mailto:ag.entv.ict.or.o.kle@gmail.com"">ag.entv.ict.or.o.kle@gmail.com</a>
<a href=""mailto:a.gent.vi.cto.r.o.kle@gmail.com"">a.gent.vi.cto.r.o.kle@gmail.com</a>
<a href=""mailto:ag.en.t.v.ict.or.o.k.l.e@gmail.com"">ag.en.t.v.ict.or.o.k.l.e@gmail.com</a>
<a href=""mailto:age.n.t.v.i.ctoro.k.le@gmail.com"">age.n.t.v.i.ctoro.k.le@gmail.com</a>
<a href=""mailto:a.g.en.tvic.to.rok.l.e@gmail.com"">a.g.en.tvic.to.rok.l.e@gmail.com</a>
<a href=""mailto:a.gentv.ic.t.o.rokl.e@gmail.com"">a.gentv.ic.t.o.rokl.e@gmail.com</a>
<a href=""mailto:ag.en.t.vi.ct.o.rokle@gmail.com"">ag.en.t.vi.ct.o.rokle@gmail.com</a>
<a href=""mailto:age.n.t.victor.o.kle@gmail.com"">age.n.t.victor.o.kle@gmail.com</a>
<a href=""mailto:age.ntv.ict.orok.le@gmail.com"">age.ntv.ict.orok.le@gmail.com</a>
<a href=""mailto:ag.entvi.c.tor.ok.l.e@gmail.com"">ag.entvi.c.tor.ok.l.e@gmail.com</a>
<a href=""mailto:ag.e.n.t.v.i.ct.orok.le@gmail.com"">ag.e.n.t.v.i.ct.orok.le@gmail.com</a>
<a href=""mailto:a.g.e.nt.v.ict.oro.kl.e@gmail.com"">a.g.e.nt.v.ict.oro.kl.e@gmail.com</a>
<a href=""mailto:age.n.tv.i.ctor.okle@gmail.com"">age.n.tv.i.ctor.okle@gmail.com</a>
<a href=""mailto:agen.t.vic.to.ro.k.l.e@gmail.com"">agen.t.vic.to.ro.k.l.e@gmail.com</a>
<a href=""mailto:a.g.e.n.t.v.i.c.toro.kl.e@gmail.com"">a.g.e.n.t.v.i.c.toro.kl.e@gmail.com</a>
<a href=""mailto:age.ntv.i.c.t.oro.k.le@gmail.com"">age.ntv.i.c.t.oro.k.le@gmail.com</a>
<a href=""mailto:a.ge.ntvic.t.or.o.kl.e@gmail.com"">a.ge.ntvic.t.or.o.kl.e@gmail.com</a>
<a href=""mailto:ag.ent.v.ic.t.o.r.o.k.l.e@gmail.com"">ag.ent.v.ic.t.o.r.o.k.l.e@gmail.com</a>
<a href=""mailto:agent.v.i.c.t.or.o.k.l.e@gmail.com"">agent.v.i.c.t.or.o.k.l.e@gmail.com</a>
<a href=""mailto:age.n.tvic.t.oro.kl.e@gmail.com"">age.n.tvic.t.oro.kl.e@gmail.com</a>
<a href=""mailto:ag.e.ntv.i.ctorokle@gmail.com"">ag.e.ntv.i.ctorokle@gmail.com</a>
<a href=""mailto:a.ge.ntvi.c.to.ro.kle@gmail.com"">a.ge.ntvi.c.to.ro.kle@gmail.com</a>
<a href=""mailto:a.ge.n.tvi.c.t.o.r.ok.le@gmail.com"">a.ge.n.tvi.c.t.o.r.ok.le@gmail.com</a>
<a href=""mailto:agentv.i.c.t.o.r.okl.e@gmail.com"">agentv.i.c.t.o.r.okl.e@gmail.com</a>
<a href=""mailto:ag.e.nt.vict.or.o.k.le@gmail.com"">ag.e.nt.vict.or.o.k.le@gmail.com</a>
<a href=""mailto:a.gent.vi.c.tor.o.k.l.e@gmail.com"">a.gent.vi.c.tor.o.k.l.e@gmail.com</a>
<a href=""mailto:agen.t.vi.ct.oro.k.le@gmail.com"">agen.t.vi.ct.oro.k.le@gmail.com</a>
<a href=""mailto:ag.ent.vi.c.t.orok.le@gmail.com"">ag.ent.vi.c.t.orok.le@gmail.com</a>
<a href=""mailto:a.g.e.n.t.v.i.c.to.ro.kl.e@gmail.com"">a.g.e.n.t.v.i.c.to.ro.kl.e@gmail.com</a>
<a href=""mailto:ag.ent.v.ic.t.orokl.e@gmail.com"">ag.ent.v.ic.t.orokl.e@gmail.com</a>
<a href=""mailto:ag.e.n.t.v.ict.o.r.o.k.le@gmail.com"">ag.e.n.t.v.ict.o.r.o.k.le@gmail.com</a>
<a href=""mailto:a.g.en.t.vic.tor.o.k.le@gmail.com"">a.g.en.t.vic.tor.o.k.le@gmail.com</a>
<a href=""mailto:age.ntvictoro.k.l.e@gmail.com"">age.ntvictoro.k.l.e@gmail.com</a>
<a href=""mailto:ag.entv.i.ct.o.r.ok.l.e@gmail.com"">ag.entv.i.ct.o.r.ok.l.e@gmail.com</a>
<a href=""mailto:a.g.e.nt.v.i.ct.oro.kl.e@gmail.com"">a.g.e.nt.v.i.ct.oro.kl.e@gmail.com</a>
<a href=""mailto:ag.e.n.t.v.i.cto.r.okl.e@gmail.com"">ag.e.n.t.v.i.cto.r.okl.e@gmail.com</a>
<a href=""mailto:age.nt.v.i.c.tor.okl.e@gmail.com"">age.nt.v.i.c.tor.okl.e@gmail.com</a>
<a href=""mailto:a.g.en.tvi.c.toro.k.l.e@gmail.com"">a.g.en.tvi.c.toro.k.l.e@gmail.com</a>
<a href=""mailto:ag.e.n.t.v.i.c.to.r.o.kl.e@gmail.com"">ag.e.n.t.v.i.c.to.r.o.kl.e@gmail.com</a>
<a href=""mailto:a.g.e.ntv.i.ct.o.ro.k.l.e@gmail.com"">a.g.e.ntv.i.ct.o.ro.k.l.e@gmail.com</a>
<a href=""mailto:a.ge.n.t.v.ict.o.r.o.kl.e@gmail.com"">a.ge.n.t.v.ict.o.r.o.kl.e@gmail.com</a>
<a href=""mailto:a.gen.tv.ict.or.o.kle@gmail.com"">a.gen.tv.ict.or.o.kle@gmail.com</a>
<a href=""mailto:agen.tvic.t.o.r.ok.l.e@gmail.com"">agen.tvic.t.o.r.ok.l.e@gmail.com</a>
<a href=""mailto:a.gen.tv.i.ctor.o.k.l.e@gmail.com"">a.gen.tv.i.ctor.o.k.l.e@gmail.com</a>
<a href=""mailto:a.g.en.tvict.o.rokl.e@gmail.com"">a.g.en.tvict.o.rokl.e@gmail.com</a>
<a href=""mailto:a.g.e.nt.v.ic.to.rok.le@gmail.com"">a.g.e.nt.v.ic.to.rok.le@gmail.com</a>
<a href=""mailto:ag.e.n.t.v.ic.to.ro.k.le@gmail.com"">ag.e.n.t.v.ic.to.ro.k.le@gmail.com</a>
<a href=""mailto:ag.e.n.t.victo.ro.k.le@gmail.com"">ag.e.n.t.victo.ro.k.le@gmail.com</a>
<a href=""mailto:a.ge.ntv.i.ctor.ok.l.e@gmail.com"">a.ge.ntv.i.ctor.ok.l.e@gmail.com</a>
<a href=""mailto:a.gen.tv.ic.to.r.ok.le@gmail.com"">a.gen.tv.ic.to.r.ok.le@gmail.com</a>
<a href=""mailto:ag.entv.i.ct.or.ok.le@gmail.com"">ag.entv.i.ct.or.ok.le@gmail.com</a>
<a href=""mailto:a.g.ent.v.ic.to.ro.kle@gmail.com"">a.g.ent.v.ic.to.ro.kle@gmail.com</a>
<a href=""mailto:a.g.en.t.vic.t.o.r.o.kle@gmail.com"">a.g.en.t.vic.t.o.r.o.kle@gmail.com</a>
<a href=""mailto:a.g.e.n.tvict.o.r.o.k.le@gmail.com"">a.g.e.n.tvict.o.r.o.k.le@gmail.com</a>
<a href=""mailto:ag.e.nt.vic.t.o.r.okl.e@gmail.com"">ag.e.nt.vic.t.o.r.okl.e@gmail.com</a>
<a href=""mailto:agen.t.vic.t.o.rok.l.e@gmail.com"">agen.t.vic.t.o.rok.l.e@gmail.com</a>
<a href=""mailto:a.ge.n.t.victor.o.k.l.e@gmail.com"">a.ge.n.t.victor.o.k.l.e@gmail.com</a>
<a href=""mailto:a.g.e.ntv.i.c.t.o.r.o.kle@gmail.com"">a.g.e.ntv.i.c.t.o.r.o.kle@gmail.com</a>
<a href=""mailto:a.gent.victoro.kl.e@gmail.com"">a.gent.victoro.kl.e@gmail.com</a>
<a href=""mailto:a.gent.vic.t.o.ro.kl.e@gmail.com"">a.gent.vic.t.o.ro.kl.e@gmail.com</a>
<a href=""mailto:a.gen.tv.i.c.t.or.ok.le@gmail.com"">a.gen.tv.i.c.t.or.ok.le@gmail.com</a>
<a href=""mailto:ag.e.n.t.v.ict.o.ro.k.le@gmail.com"">ag.e.n.t.v.ict.o.ro.k.le@gmail.com</a>
<a href=""mailto:a.g.e.ntvi.c.tor.o.kle@gmail.com"">a.g.e.ntvi.c.tor.o.kle@gmail.com</a>
<a href=""mailto:agentvi.ctor.o.k.l.e@gmail.com"">agentvi.ctor.o.k.l.e@gmail.com</a>
<a href=""mailto:a.gen.t.v.ict.orokl.e@gmail.com"">a.gen.t.v.ict.orokl.e@gmail.com</a>
<a href=""mailto:age.ntvi.ct.o.ro.k.l.e@gmail.com"">age.ntvi.ct.o.ro.k.l.e@gmail.com</a>
<a href=""mailto:a.g.en.tv.icto.ro.kle@gmail.com"">a.g.en.tv.icto.ro.kle@gmail.com</a>
<a href=""mailto:a.g.e.ntvi.ct.o.ro.k.l.e@gmail.com"">a.g.e.ntvi.ct.o.ro.k.l.e@gmail.com</a>
<a href=""mailto:a.g.e.ntv.ict.orokle@gmail.com"">a.g.e.ntv.ict.orokle@gmail.com</a>
<a href=""mailto:a.g.e.nt.vict.or.o.k.l.e@gmail.com"">a.g.e.nt.vict.or.o.k.l.e@gmail.com</a>
<a href=""mailto:a.g.e.n.t.v.i.ct.o.r.o.kl.e@gmail.com"">a.g.e.n.t.v.i.ct.o.r.o.kl.e@gmail.com</a>
<a href=""mailto:a.ge.nt.vi.c.to.r.o.kle@gmail.com"">a.ge.nt.vi.c.to.r.o.kle@gmail.com</a>
<a href=""mailto:agent.vi.ct.o.ro.k.l.e@gmail.com"">agent.vi.ct.o.ro.k.l.e@gmail.com</a>
<a href=""mailto:a.g.e.n.t.victoro.kl.e@gmail.com"">a.g.e.n.t.victoro.kl.e@gmail.com</a>
<a href=""mailto:agent.vict.o.r.ok.le@gmail.com"">agent.vict.o.r.ok.le@gmail.com</a>
<a href=""mailto:agen.tv.ic.to.r.okle@gmail.com"">agen.tv.ic.to.r.okle@gmail.com</a>
<a href=""mailto:a.gent.vict.o.rokl.e@gmail.com"">a.gent.vict.o.rokl.e@gmail.com</a>
<a href=""mailto:age.nt.v.ic.t.o.ro.kl.e@gmail.com"">age.nt.v.ic.t.o.ro.kl.e@gmail.com</a>
<a href=""mailto:a.g.en.t.v.i.ct.or.okl.e@gmail.com"">a.g.en.t.v.i.ct.or.okl.e@gmail.com</a>
<a href=""mailto:a.gentv.ic.t.oro.k.l.e@gmail.com"">a.gentv.ic.t.oro.k.l.e@gmail.com</a>
<a href=""mailto:a.gen.tv.i.c.to.ro.k.le@gmail.com"">a.gen.tv.i.c.to.ro.k.le@gmail.com</a>
<a href=""mailto:a.ge.n.t.v.i.ctor.o.kle@gmail.com"">a.ge.n.t.v.i.ctor.o.kle@gmail.com</a>
<a href=""mailto:a.gen.tv.i.c.to.r.okle@gmail.com"">a.gen.tv.i.c.to.r.okle@gmail.com</a>
<a href=""mailto:ag.en.tvi.c.toro.kl.e@gmail.com"">ag.en.tvi.c.toro.kl.e@gmail.com</a>
<a href=""mailto:ag.e.n.tvic.t.or.ok.l.e@gmail.com"">ag.e.n.tvic.t.or.ok.l.e@gmail.com</a>
<a href=""mailto:a.ge.ntvi.c.t.o.r.o.kl.e@gmail.com"">a.ge.ntvi.c.t.o.r.o.kl.e@gmail.com</a>
<a href=""mailto:age.n.t.vic.toro.kle@gmail.com"">age.n.t.vic.toro.kle@gmail.com</a>
<a href=""mailto:ag.ent.vi.c.tor.o.kl.e@gmail.com"">ag.ent.vi.c.tor.o.kl.e@gmail.com</a>
<a href=""mailto:ag.e.nt.vi.ct.o.r.o.k.l.e@gmail.com"">ag.e.nt.vi.ct.o.r.o.k.l.e@gmail.com</a>
<a href=""mailto:a.g.e.n.tv.ic.t.orokle@gmail.com"">a.g.e.n.tv.ic.t.orokle@gmail.com</a>
<a href=""mailto:ag.e.n.t.v.ict.o.r.o.kle@gmail.com"">ag.e.n.t.v.ict.o.r.o.kle@gmail.com</a>
<a href=""mailto:a.g.en.tv.ic.tor.o.k.le@gmail.com"">a.g.en.tv.ic.tor.o.k.le@gmail.com</a>
<a href=""mailto:a.g.e.ntvi.c.t.or.ok.le@gmail.com"">a.g.e.ntvi.c.t.or.ok.le@gmail.com</a>
<a href=""mailto:agen.t.vic.toro.k.le@gmail.com"">agen.t.vic.toro.k.le@gmail.com</a>
<a href=""mailto:a.g.entvic.to.r.o.k.l.e@gmail.com"">a.g.entvic.to.r.o.k.l.e@gmail.com</a>
<a href=""mailto:agent.vict.o.r.okle@gmail.com"">agent.vict.o.r.okle@gmail.com</a>
<a href=""mailto:a.gen.tv.ict.o.r.o.kl.e@gmail.com"">a.gen.tv.ict.o.r.o.kl.e@gmail.com</a>
<a href=""mailto:ag.e.nt.vic.t.or.okle@gmail.com"">ag.e.nt.vic.t.or.okle@gmail.com</a>
<a href=""mailto:a.g.en.tv.ic.t.orok.le@gmail.com"">a.g.en.tv.ic.t.orok.le@gmail.com</a>
<a href=""mailto:a.ge.nt.v.i.c.t.o.rokle@gmail.com"">a.ge.nt.v.i.c.t.o.rokle@gmail.com</a>
<a href=""mailto:a.g.e.n.t.v.i.ct.o.r.o.k.le@gmail.com"">a.g.e.n.t.v.i.ct.o.r.o.k.le@gmail.com</a>
<a href=""mailto:a.ge.n.tvic.t.or.o.kle@gmail.com"">a.ge.n.tvic.t.or.o.kle@gmail.com</a>
<a href=""mailto:a.g.en.t.v.i.ctor.o.k.l.e@gmail.com"">a.g.en.t.v.i.ctor.o.k.l.e@gmail.com</a>
<a href=""mailto:a.ge.n.tv.i.ct.o.r.o.k.le@gmail.com"">a.ge.n.tv.i.ct.o.r.o.k.le@gmail.com</a>
<a href=""mailto:a.g.e.n.t.vi.c.t.orokle@gmail.com"">a.g.e.n.t.vi.c.t.orokle@gmail.com</a>
<a href=""mailto:a.gentvict.o.rokle@gmail.com"">a.gentvict.o.rokle@gmail.com</a>
<a href=""mailto:a.ge.nt.vi.c.tor.ok.l.e@gmail.com"">a.ge.nt.vi.c.tor.ok.l.e@gmail.com</a>
<a href=""mailto:ag.entv.i.c.to.r.o.kle@gmail.com"">ag.entv.i.c.to.r.o.kle@gmail.com</a>
<a href=""mailto:ag.en.tvict.o.r.okl.e@gmail.com"">ag.en.tvict.o.r.okl.e@gmail.com</a>
<a href=""mailto:age.n.t.v.i.ctorok.l.e@gmail.com"">age.n.t.v.i.ctorok.l.e@gmail.com</a>
<a href=""mailto:a.gen.t.vict.o.rokl.e@gmail.com"">a.gen.t.vict.o.rokl.e@gmail.com</a>
<a href=""mailto:a.g.e.n.tv.ic.t.or.okl.e@gmail.com"">a.g.e.n.tv.ic.t.or.okl.e@gmail.com</a>
<a href=""mailto:a.g.e.nt.vict.or.o.k.le@gmail.com"">a.g.e.nt.vict.or.o.k.le@gmail.com</a>
<a href=""mailto:agentvi.c.t.orok.le@gmail.com"">agentvi.c.t.orok.le@gmail.com</a>
<a href=""mailto:a.gen.tv.ict.oro.kl.e@gmail.com"">a.gen.tv.ict.oro.kl.e@gmail.com</a>
<a href=""mailto:a.g.e.ntv.ic.t.or.o.k.l.e@gmail.com"">a.g.e.ntv.ic.t.or.o.k.l.e@gmail.com</a>
<a href=""mailto:a.g.entv.ic.to.ro.k.l.e@gmail.com"">a.g.entv.ic.to.ro.k.l.e@gmail.com</a>
<a href=""mailto:ag.e.nt.v.i.c.t.oro.k.le@gmail.com"">ag.e.nt.v.i.c.t.oro.k.le@gmail.com</a>
<a href=""mailto:a.gen.t.v.ict.o.ro.kle@gmail.com"">a.gen.t.v.ict.o.ro.kle@gmail.com</a>
<a href=""mailto:a.g.ent.v.ic.tor.o.kl.e@gmail.com"">a.g.ent.v.ic.tor.o.kl.e@gmail.com</a>
<a href=""mailto:a.g.en.tvict.or.ok.le@gmail.com"">a.g.en.tvict.or.ok.le@gmail.com</a>
<a href=""mailto:a.ge.ntvi.c.to.rokl.e@gmail.com"">a.ge.ntvi.c.to.rokl.e@gmail.com</a>
<a href=""mailto:a.g.ent.vict.or.o.k.l.e@gmail.com"">a.g.ent.vict.or.o.k.l.e@gmail.com</a>
<a href=""mailto:a.ge.nt.vic.t.o.r.okl.e@gmail.com"">a.ge.nt.vic.t.o.r.okl.e@gmail.com</a>
<a href=""mailto:ag.e.n.tvicto.rokle@gmail.com"">ag.e.n.tvicto.rokle@gmail.com</a>
<a href=""mailto:age.n.t.v.ic.t.or.ok.l.e@gmail.com"">age.n.t.v.ic.t.or.ok.l.e@gmail.com</a>
<a href=""mailto:ag.e.n.tvi.ct.or.o.kle@gmail.com"">ag.e.n.tvi.ct.or.o.kle@gmail.com</a>
<a href=""mailto:a.gen.tv.i.ctor.okl.e@gmail.com"">a.gen.tv.i.ctor.okl.e@gmail.com</a>
<a href=""mailto:a.ge.n.t.vi.ctorokle@gmail.com"">a.ge.n.t.vi.ctorokle@gmail.com</a>
<a href=""mailto:ag.e.nt.vi.ct.or.ok.le@gmail.com"">ag.e.nt.vi.ct.or.ok.le@gmail.com</a>
<a href=""mailto:age.n.tvict.or.o.k.le@gmail.com"">age.n.tvict.or.o.k.le@gmail.com</a>
<a href=""mailto:ag.entvi.c.t.o.r.o.k.le@gmail.com"">ag.entvi.c.t.o.r.o.k.le@gmail.com</a>
<a href=""mailto:ag.entv.ict.oro.k.le@gmail.com"">ag.entv.ict.oro.k.le@gmail.com</a>
<a href=""mailto:agent.vic.t.o.r.okle@gmail.com"">agent.vic.t.o.r.okle@gmail.com</a>
<a href=""mailto:a.g.en.t.v.ic.t.orokl.e@gmail.com"">a.g.en.t.v.ic.t.orokl.e@gmail.com</a>
<a href=""mailto:a.g.en.tvicto.rokle@gmail.com"">a.g.en.tvicto.rokle@gmail.com</a>
<a href=""mailto:agentv.ic.t.orokl.e@gmail.com"">agentv.ic.t.orokl.e@gmail.com</a>
<a href=""mailto:a.ge.nt.victor.o.kle@gmail.com"">a.ge.nt.victor.o.kle@gmail.com</a>
<a href=""mailto:a.g.en.tv.ict.oro.kle@gmail.com"">a.g.en.tv.ict.oro.kle@gmail.com</a>
<a href=""mailto:a.gen.tv.i.c.to.r.o.k.l.e@gmail.com"">a.gen.tv.i.c.to.r.o.k.l.e@gmail.com</a>
<a href=""mailto:a.ge.n.t.vi.ct.o.r.okl.e@gmail.com"">a.ge.n.t.vi.ct.o.r.okl.e@gmail.com</a>
<a href=""mailto:ag.en.t.vi.c.t.oro.k.l.e@gmail.com"">ag.en.t.vi.c.t.oro.k.l.e@gmail.com</a>
<a href=""mailto:ag.e.nt.v.ict.orokl.e@gmail.com"">ag.e.nt.v.ict.orokl.e@gmail.com</a>
<a href=""mailto:age.n.t.v.ic.tor.ok.l.e@gmail.com"">age.n.t.v.ic.tor.ok.l.e@gmail.com</a>
<a href=""mailto:a.g.ent.v.i.c.t.o.ro.kl.e@gmail.com"">a.g.ent.v.i.c.t.o.ro.kl.e@gmail.com</a>
<a href=""mailto:age.n.t.vic.to.r.ok.l.e@gmail.com"">age.n.t.vic.to.r.ok.l.e@gmail.com</a>
<a href=""mailto:a.ge.nt.v.i.c.tor.o.k.l.e@gmail.com"">a.ge.nt.v.i.c.tor.o.k.l.e@gmail.com</a>
<a href=""mailto:ag.e.n.tv.i.c.torokl.e@gmail.com"">ag.e.n.tv.i.c.torokl.e@gmail.com</a>
<a href=""mailto:ag.entv.ictor.ok.le@gmail.com"">ag.entv.ictor.ok.le@gmail.com</a>
<a href=""mailto:a.g.en.t.v.ict.or.o.kle@gmail.com"">a.g.en.t.v.ict.or.o.kle@gmail.com</a>
<a href=""mailto:agen.tv.i.cto.r.ok.le@gmail.com"">agen.tv.i.cto.r.ok.le@gmail.com</a>
<a href=""mailto:age.n.t.v.ic.to.r.o.kle@gmail.com"">age.n.t.v.ic.to.r.o.kle@gmail.com</a>
<a href=""mailto:a.g.e.n.tv.ic.to.ro.kle@gmail.com"">a.g.e.n.tv.ic.to.ro.kle@gmail.com</a>
<a href=""mailto:a.gen.t.vi.c.torokl.e@gmail.com"">a.gen.t.vi.c.torokl.e@gmail.com</a>
<a href=""mailto:a.gen.t.v.ic.toro.k.l.e@gmail.com"">a.gen.t.v.ic.toro.k.l.e@gmail.com</a>
<a href=""mailto:a.g.entvi.c.t.o.rok.le@gmail.com"">a.g.entvi.c.t.o.rok.le@gmail.com</a>
<a href=""mailto:ag.e.n.tv.i.c.t.o.ro.kle@gmail.com"">ag.e.n.tv.i.c.t.o.ro.kle@gmail.com</a>
<a href=""mailto:a.g.e.ntvic.t.o.r.o.k.l.e@gmail.com"">a.g.e.ntvic.t.o.r.o.k.l.e@gmail.com</a>
<a href=""mailto:agentv.i.ctoro.kle@gmail.com"">agentv.i.ctoro.kle@gmail.com</a>
<a href=""mailto:a.gen.tv.icto.r.o.k.l.e@gmail.com"">a.gen.tv.icto.r.o.k.l.e@gmail.com</a>
<a href=""mailto:a.gent.victor.o.kl.e@gmail.com"">a.gent.victor.o.kl.e@gmail.com</a>
<a href=""mailto:a.gen.tv.i.c.torokle@gmail.com"">a.gen.tv.i.c.torokle@gmail.com</a>
<a href=""mailto:age.n.t.v.i.c.t.orokl.e@gmail.com"">age.n.t.v.i.c.t.orokl.e@gmail.com</a>
<a href=""mailto:a.g.ent.vi.ct.oro.kle@gmail.com"">a.g.ent.vi.ct.oro.kle@gmail.com</a>
<a href=""mailto:age.n.tv.i.c.t.o.r.ok.le@gmail.com"">age.n.tv.i.c.t.o.r.ok.le@gmail.com</a>
<a href=""mailto:ag.en.tv.i.c.to.rok.le@gmail.com"">ag.en.tv.i.c.to.rok.le@gmail.com</a>
<a href=""mailto:age.ntvi.cto.r.o.kle@gmail.com"">age.ntvi.cto.r.o.kle@gmail.com</a>
<a href=""mailto:agen.t.v.ict.o.ro.k.l.e@gmail.com"">agen.t.v.ict.o.ro.k.l.e@gmail.com</a>
<a href=""mailto:age.ntv.i.ct.or.o.kl.e@gmail.com"">age.ntv.i.ct.or.o.kl.e@gmail.com</a>
<a href=""mailto:agen.t.v.ic.to.r.ok.le@gmail.com"">agen.t.v.ic.to.r.ok.le@gmail.com</a>
<a href=""mailto:ag.e.n.t.v.ict.or.okl.e@gmail.com"">ag.e.n.t.v.ict.or.okl.e@gmail.com</a>
<a href=""mailto:a.g.entvi.c.t.oro.k.l.e@gmail.com"">a.g.entvi.c.t.oro.k.l.e@gmail.com</a>
<a href=""mailto:a.g.en.tvic.to.ro.k.l.e@gmail.com"">a.g.en.tvic.to.ro.k.l.e@gmail.com</a>
<a href=""mailto:a.ge.n.t.v.ictor.o.kle@gmail.com"">a.ge.n.t.v.ictor.o.kle@gmail.com</a>
<a href=""mailto:a.g.e.n.tv.i.c.to.r.o.kl.e@gmail.com"">a.g.e.n.tv.i.c.to.r.o.kl.e@gmail.com</a>
<a href=""mailto:ag.en.t.vic.to.r.o.kl.e@gmail.com"">ag.en.t.vic.to.r.o.kl.e@gmail.com</a>
<a href=""mailto:a.g.en.t.vi.c.t.o.ro.k.l.e@gmail.com"">a.g.en.t.vi.c.t.o.ro.k.l.e@gmail.com</a>
<a href=""mailto:agen.tvic.t.oro.kle@gmail.com"">agen.tvic.t.oro.kle@gmail.com</a>
<a href=""mailto:a.ge.nt.v.icto.ro.kl.e@gmail.com"">a.ge.nt.v.icto.ro.kl.e@gmail.com</a>
<a href=""mailto:a.ge.n.t.v.ic.t.oro.k.l.e@gmail.com"">a.ge.n.t.v.ic.t.oro.k.l.e@gmail.com</a>
<a href=""mailto:agen.t.v.ic.t.o.ro.kle@gmail.com"">agen.t.v.ic.t.o.ro.kle@gmail.com</a>
<a href=""mailto:a.g.en.t.v.ic.to.rok.le@gmail.com"">a.g.en.t.v.ic.to.rok.le@gmail.com</a>
<a href=""mailto:a.g.ent.v.icto.r.o.k.l.e@gmail.com"">a.g.ent.v.icto.r.o.k.l.e@gmail.com</a>
<a href=""mailto:a.ge.nt.v.i.c.tor.okl.e@gmail.com"">a.ge.nt.v.i.c.tor.okl.e@gmail.com</a>
<a href=""mailto:a.gent.vict.o.r.okl.e@gmail.com"">a.gent.vict.o.r.okl.e@gmail.com</a>
<a href=""mailto:a.gent.v.ic.t.o.r.o.k.l.e@gmail.com"">a.gent.v.ic.t.o.r.o.k.l.e@gmail.com</a>
<a href=""mailto:a.ge.n.t.victor.o.kle@gmail.com"">a.ge.n.t.victor.o.kle@gmail.com</a>
<a href=""mailto:ag.e.n.t.vic.t.o.ro.kle@gmail.com"">ag.e.n.t.vic.t.o.ro.kle@gmail.com</a>
<a href=""mailto:ag.e.n.tvic.t.orokle@gmail.com"">ag.e.n.tvic.t.orokle@gmail.com</a>
<a href=""mailto:a.ge.ntv.i.ct.o.ro.kle@gmail.com"">a.ge.ntv.i.ct.o.ro.kle@gmail.com</a>
<a href=""mailto:a.gen.tvi.c.torok.le@gmail.com"">a.gen.tvi.c.torok.le@gmail.com</a>
<a href=""mailto:a.gen.tv.i.c.to.r.o.kle@gmail.com"">a.gen.tv.i.c.to.r.o.kle@gmail.com</a>
<a href=""mailto:a.g.e.n.tv.ic.to.r.okle@gmail.com"">a.g.e.n.tv.ic.to.r.okle@gmail.com</a>
<a href=""mailto:age.n.tvi.ct.o.rok.l.e@gmail.com"">age.n.tvi.ct.o.rok.l.e@gmail.com</a>
<a href=""mailto:a.g.entvi.ct.orokle@gmail.com"">a.g.entvi.ct.orokle@gmail.com</a>
<a href=""mailto:agentv.icto.ro.k.l.e@gmail.com"">agentv.icto.ro.k.l.e@gmail.com</a>
<a href=""mailto:pmbusking@gmail.com"">pmbusking@gmail.com</a>
<a href=""mailto:p.m.bu.s.k.in.g@gmail.com"">p.m.bu.s.k.in.g@gmail.com</a>
<a href=""mailto:pmbuski.ng@gmail.com"">pmbuski.ng@gmail.com</a>
<a href=""mailto:p.mb.u.skin.g@gmail.com"">p.mb.u.skin.g@gmail.com</a>
<a href=""mailto:pm.bus.ki.ng@gmail.com"">pm.bus.ki.ng@gmail.com</a>
<a href=""mailto:p.mbus.k.ing@gmail.com"">p.mbus.k.ing@gmail.com</a>
<a href=""mailto:p.m.b.us.kin.g@gmail.com"">p.m.b.us.kin.g@gmail.com</a>
<a href=""mailto:pmb.usking@gmail.com"">pmb.usking@gmail.com</a>
<a href=""mailto:p.mbu.s.king@gmail.com"">p.mbu.s.king@gmail.com</a>
<a href=""mailto:pmbus.kin.g@gmail.com"">pmbus.kin.g@gmail.com</a>
<a href=""mailto:p.mb.uski.ng@gmail.com"">p.mb.uski.ng@gmail.com</a>
<a href=""mailto:pmbusking@gmail.com"">pmbusking@gmail.com</a>
<a href=""mailto:p.m.b.u.sk.in.g@gmail.com"">p.m.b.u.sk.in.g@gmail.com</a>
<a href=""mailto:pm.busk.i.n.g@gmail.com"">pm.busk.i.n.g@gmail.com</a>
<a href=""mailto:pm.b.u.s.ki.ng@gmail.com"">pm.b.u.s.ki.ng@gmail.com</a>
<a href=""mailto:p.mb.usk.in.g@gmail.com"">p.mb.usk.in.g@gmail.com</a>
<a href=""mailto:pmbu.s.ki.n.g@gmail.com"">pmbu.s.ki.n.g@gmail.com</a>
<a href=""mailto:pm.busk.i.ng@gmail.com"">pm.busk.i.ng@gmail.com</a>
<a href=""mailto:pmb.u.sk.i.n.g@gmail.com"">pmb.u.sk.i.n.g@gmail.com</a>
<a href=""mailto:pm.bu.s.ki.n.g@gmail.com"">pm.bu.s.ki.n.g@gmail.com</a>
<a href=""mailto:pm.b.u.s.k.in.g@gmail.com"">pm.b.u.s.k.in.g@gmail.com</a>
<a href=""mailto:pm.bu.s.k.ing@gmail.com"">pm.bu.s.k.ing@gmail.com</a>
<a href=""mailto:p.mb.usk.i.n.g@gmail.com"">p.mb.usk.i.n.g@gmail.com</a>
<a href=""mailto:p.m.b.usk.in.g@gmail.com"">p.m.b.usk.in.g@gmail.com</a>
<a href=""mailto:pmb.u.s.k.i.n.g@gmail.com"">pmb.u.s.k.i.n.g@gmail.com</a>
<a href=""mailto:pm.bus.ki.n.g@gmail.com"">pm.bus.ki.n.g@gmail.com</a>
<a href=""mailto:p.mbusk.ing@gmail.com"">p.mbusk.ing@gmail.com</a>
<a href=""mailto:pmbu.s.k.in.g@gmail.com"">pmbu.s.k.in.g@gmail.com</a>
<a href=""mailto:pm.b.us.ki.ng@gmail.com"">pm.b.us.ki.ng@gmail.com</a>
<a href=""mailto:p.m.bu.s.ki.ng@gmail.com"">p.m.bu.s.ki.ng@gmail.com</a>
<a href=""mailto:pmbu.s.ki.ng@gmail.com"">pmbu.s.ki.ng@gmail.com</a>
<a href=""mailto:pmb.u.s.k.in.g@gmail.com"">pmb.u.s.k.in.g@gmail.com</a>
<a href=""mailto:p.m.busk.ing@gmail.com"">p.m.busk.ing@gmail.com</a>
<a href=""mailto:p.mbuski.ng@gmail.com"">p.mbuski.ng@gmail.com</a>
<a href=""mailto:p.mb.uskin.g@gmail.com"">p.mb.uskin.g@gmail.com</a>
<a href=""mailto:pm.b.u.sk.i.ng@gmail.com"">pm.b.u.sk.i.ng@gmail.com</a>
<a href=""mailto:p.mbuski.n.g@gmail.com"">p.mbuski.n.g@gmail.com</a>
<a href=""mailto:p.mbus.k.i.n.g@gmail.com"">p.mbus.k.i.n.g@gmail.com</a>
<a href=""mailto:p.m.busking@gmail.com"">p.m.busking@gmail.com</a>
<a href=""mailto:pm.buski.ng@gmail.com"">pm.buski.ng@gmail.com</a>
<a href=""mailto:p.mb.us.k.i.ng@gmail.com"">p.mb.us.k.i.ng@gmail.com</a>
<a href=""mailto:pm.b.u.sk.in.g@gmail.com"">pm.b.u.sk.in.g@gmail.com</a>
<a href=""mailto:p.mbu.ski.n.g@gmail.com"">p.mbu.ski.n.g@gmail.com</a>
<a href=""mailto:pmbu.s.kin.g@gmail.com"">pmbu.s.kin.g@gmail.com</a>
<a href=""mailto:p.m.b.u.s.k.in.g@gmail.com"">p.m.b.u.s.k.in.g@gmail.com</a>
<a href=""mailto:p.m.b.usk.i.ng@gmail.com"">p.m.b.usk.i.ng@gmail.com</a>
<a href=""mailto:pm.b.us.k.i.n.g@gmail.com"">pm.b.us.k.i.n.g@gmail.com</a>
<a href=""mailto:p.m.b.u.s.ki.n.g@gmail.com"">p.m.b.u.s.ki.n.g@gmail.com</a>
<a href=""mailto:p.m.b.us.k.i.n.g@gmail.com"">p.m.b.us.k.i.n.g@gmail.com</a>
<a href=""mailto:pm.bu.s.kin.g@gmail.com"">pm.bu.s.kin.g@gmail.com</a>
<a href=""mailto:pm.b.usking@gmail.com"">pm.b.usking@gmail.com</a>
<a href=""mailto:p.m.bu.s.k.ing@gmail.com"">p.m.bu.s.k.ing@gmail.com</a>
<a href=""mailto:p.mb.u.s.k.ing@gmail.com"">p.mb.u.s.k.ing@gmail.com</a>
<a href=""mailto:pmbusk.i.n.g@gmail.com"">pmbusk.i.n.g@gmail.com</a>
<a href=""mailto:pmbu.s.k.ing@gmail.com"">pmbu.s.k.ing@gmail.com</a>
<a href=""mailto:p.m.bu.sk.ing@gmail.com"">p.m.bu.sk.ing@gmail.com</a>
<a href=""mailto:pm.bus.k.i.ng@gmail.com"">pm.bus.k.i.ng@gmail.com</a>
<a href=""mailto:p.m.b.u.sk.i.n.g@gmail.com"">p.m.b.u.sk.i.n.g@gmail.com</a>
<a href=""mailto:pm.b.us.k.i.ng@gmail.com"">pm.b.us.k.i.ng@gmail.com</a>
<a href=""mailto:p.mb.usk.ing@gmail.com"">p.mb.usk.ing@gmail.com</a>
<a href=""mailto:pm.buskin.g@gmail.com"">pm.buskin.g@gmail.com</a>
<a href=""mailto:p.m.b.u.s.k.ing@gmail.com"">p.m.b.u.s.k.ing@gmail.com</a>
<a href=""mailto:p.m.b.u.s.king@gmail.com"">p.m.b.u.s.king@gmail.com</a>
<a href=""mailto:pmbu.sk.i.n.g@gmail.com"">pmbu.sk.i.n.g@gmail.com</a>
<a href=""mailto:p.mb.u.s.ki.ng@gmail.com"">p.mb.u.s.ki.ng@gmail.com</a>
<a href=""mailto:p.m.bu.sk.i.n.g@gmail.com"">p.m.bu.sk.i.n.g@gmail.com</a>
<a href=""mailto:pmb.us.ki.ng@gmail.com"">pmb.us.ki.ng@gmail.com</a>
<a href=""mailto:pm.b.u.ski.n.g@gmail.com"">pm.b.u.ski.n.g@gmail.com</a>
<a href=""mailto:pm.b.usk.i.n.g@gmail.com"">pm.b.usk.i.n.g@gmail.com</a>
<a href=""mailto:pm.bu.sk.i.ng@gmail.com"">pm.bu.sk.i.ng@gmail.com</a>
<a href=""mailto:p.m.b.us.k.in.g@gmail.com"">p.m.b.us.k.in.g@gmail.com</a>
<a href=""mailto:pmbus.k.i.n.g@gmail.com"">pmbus.k.i.n.g@gmail.com</a>
<a href=""mailto:pmb.uski.n.g@gmail.com"">pmb.uski.n.g@gmail.com</a>
<a href=""mailto:p.m.bus.k.ing@gmail.com"">p.m.bus.k.ing@gmail.com</a>
<a href=""mailto:p.mb.usk.i.ng@gmail.com"">p.mb.usk.i.ng@gmail.com</a>
<a href=""mailto:p.mbu.sking@gmail.com"">p.mbu.sking@gmail.com</a>
<a href=""mailto:pm.bu.sking@gmail.com"">pm.bu.sking@gmail.com</a>
<a href=""mailto:p.mbu.s.kin.g@gmail.com"">p.mbu.s.kin.g@gmail.com</a>
<a href=""mailto:pmbusk.ing@gmail.com"">pmbusk.ing@gmail.com</a>
<a href=""mailto:p.m.bu.sk.i.ng@gmail.com"">p.m.bu.sk.i.ng@gmail.com</a>
<a href=""mailto:p.mb.u.s.ki.n.g@gmail.com"">p.mb.u.s.ki.n.g@gmail.com</a>
<a href=""mailto:p.mbu.s.k.ing@gmail.com"">p.mbu.s.k.ing@gmail.com</a>
<a href=""mailto:pm.bu.s.k.i.n.g@gmail.com"">pm.bu.s.k.i.n.g@gmail.com</a>
<a href=""mailto:p.mb.u.sk.ing@gmail.com"">p.mb.u.sk.ing@gmail.com</a>
<a href=""mailto:p.m.b.u.sk.i.ng@gmail.com"">p.m.b.u.sk.i.ng@gmail.com</a>
<a href=""mailto:pmb.u.s.kin.g@gmail.com"">pmb.u.s.kin.g@gmail.com</a>
<a href=""mailto:p.m.b.u.ski.ng@gmail.com"">p.m.b.u.ski.ng@gmail.com</a>
<a href=""mailto:pmb.usk.i.n.g@gmail.com"">pmb.usk.i.n.g@gmail.com</a>
<a href=""mailto:pmbu.s.k.i.ng@gmail.com"">pmbu.s.k.i.ng@gmail.com</a>
<a href=""mailto:pm.b.uskin.g@gmail.com"">pm.b.uskin.g@gmail.com</a>
<a href=""mailto:p.mbuskin.g@gmail.com"">p.mbuskin.g@gmail.com</a>
<a href=""mailto:pmbusk.i.ng@gmail.com"">pmbusk.i.ng@gmail.com</a>
<a href=""mailto:pmb.u.s.king@gmail.com"">pmb.u.s.king@gmail.com</a>
<a href=""mailto:p.mb.usking@gmail.com"">p.mb.usking@gmail.com</a>
<a href=""mailto:pm.bu.s.ki.ng@gmail.com"">pm.bu.s.ki.ng@gmail.com</a>
<a href=""mailto:p.mbu.ski.ng@gmail.com"">p.mbu.ski.ng@gmail.com</a>
<a href=""mailto:pm.b.us.k.ing@gmail.com"">pm.b.us.k.ing@gmail.com</a>
<a href=""mailto:pmb.usk.i.ng@gmail.com"">pmb.usk.i.ng@gmail.com</a>
<a href=""mailto:pmb.u.ski.ng@gmail.com"">pmb.u.ski.ng@gmail.com</a>
<a href=""mailto:p.m.bus.ki.n.g@gmail.com"">p.m.bus.ki.n.g@gmail.com</a>
<a href=""mailto:p.m.b.u.s.k.i.n.g@gmail.com"">p.m.b.u.s.k.i.n.g@gmail.com</a>
<a href=""mailto:p.mb.us.kin.g@gmail.com"">p.mb.us.kin.g@gmail.com</a>
<a href=""mailto:pm.busking@gmail.com"">pm.busking@gmail.com</a>
<a href=""mailto:pm.bu.sk.in.g@gmail.com"">pm.bu.sk.in.g@gmail.com</a>
<a href=""mailto:pmbusk.in.g@gmail.com"">pmbusk.in.g@gmail.com</a>
<a href=""mailto:pm.b.usk.i.ng@gmail.com"">pm.b.usk.i.ng@gmail.com</a>
<a href=""mailto:pmbu.sking@gmail.com"">pmbu.sking@gmail.com</a>
<a href=""mailto:p.m.bu.ski.n.g@gmail.com"">p.m.bu.ski.n.g@gmail.com</a>
<a href=""mailto:pm.bus.k.ing@gmail.com"">pm.bus.k.ing@gmail.com</a>
<a href=""mailto:p.m.b.uskin.g@gmail.com"">p.m.b.uskin.g@gmail.com</a>
<a href=""mailto:p.m.bu.skin.g@gmail.com"">p.m.bu.skin.g@gmail.com</a>
<a href=""mailto:pm.busk.in.g@gmail.com"">pm.busk.in.g@gmail.com</a>
<a href=""mailto:pm.b.u.s.ki.n.g@gmail.com"">pm.b.u.s.ki.n.g@gmail.com</a>
<a href=""mailto:pm.b.u.s.k.i.n.g@gmail.com"">pm.b.u.s.k.i.n.g@gmail.com</a>
<a href=""mailto:p.mb.us.k.ing@gmail.com"">p.mb.us.k.ing@gmail.com</a>
<a href=""mailto:p.mbus.k.i.ng@gmail.com"">p.mbus.k.i.ng@gmail.com</a>
<a href=""mailto:p.m.buski.ng@gmail.com"">p.m.buski.ng@gmail.com</a>
<a href=""mailto:p.m.bu.s.kin.g@gmail.com"">p.m.bu.s.kin.g@gmail.com</a>
<a href=""mailto:pmb.u.sk.ing@gmail.com"">pmb.u.sk.ing@gmail.com</a>
<a href=""mailto:p.m.bus.k.in.g@gmail.com"">p.m.bus.k.in.g@gmail.com</a>
<a href=""mailto:p.mbusk.i.n.g@gmail.com"">p.mbusk.i.n.g@gmail.com</a>
<a href=""mailto:pmb.u.s.ki.ng@gmail.com"">pmb.u.s.ki.ng@gmail.com</a>
<a href=""mailto:p.m.bus.ki.ng@gmail.com"">p.m.bus.ki.ng@gmail.com</a>
<a href=""mailto:p.mb.u.sk.in.g@gmail.com"">p.mb.u.sk.in.g@gmail.com</a>
<a href=""mailto:p.mb.us.k.i.n.g@gmail.com"">p.mb.us.k.i.n.g@gmail.com</a>
<a href=""mailto:p.mb.u.s.k.i.n.g@gmail.com"">p.mb.u.s.k.i.n.g@gmail.com</a>
<a href=""mailto:p.mbu.skin.g@gmail.com"">p.mbu.skin.g@gmail.com</a>
<a href=""mailto:pm.bus.kin.g@gmail.com"">pm.bus.kin.g@gmail.com</a>
<a href=""mailto:pmb.us.ki.n.g@gmail.com"">pmb.us.ki.n.g@gmail.com</a>
<a href=""mailto:pm.bu.sk.ing@gmail.com"">pm.bu.sk.ing@gmail.com</a>
<a href=""mailto:pmb.u.ski.n.g@gmail.com"">pmb.u.ski.n.g@gmail.com</a>
<a href=""mailto:pmb.us.k.in.g@gmail.com"">pmb.us.k.in.g@gmail.com</a>
<a href=""mailto:pmbu.sk.i.ng@gmail.com"">pmbu.sk.i.ng@gmail.com</a>
<a href=""mailto:p.mbu.s.k.in.g@gmail.com"">p.mbu.s.k.in.g@gmail.com</a>
<a href=""mailto:p.mbu.sk.i.n.g@gmail.com"">p.mbu.sk.i.n.g@gmail.com</a>
<a href=""mailto:pm.b.u.ski.ng@gmail.com"">pm.b.u.ski.ng@gmail.com</a>
<a href=""mailto:p.m.b.u.s.k.i.ng@gmail.com"">p.m.b.u.s.k.i.ng@gmail.com</a>
<a href=""mailto:p.m.b.us.ki.ng@gmail.com"">p.m.b.us.ki.ng@gmail.com</a>
<a href=""mailto:p.mbu.s.k.i.ng@gmail.com"">p.mbu.s.k.i.ng@gmail.com</a>
<a href=""mailto:p.mb.u.sk.i.ng@gmail.com"">p.mb.u.sk.i.ng@gmail.com</a>
<a href=""mailto:p.mbu.sk.in.g@gmail.com"">p.mbu.sk.in.g@gmail.com</a>
<a href=""mailto:p.mb.us.ki.ng@gmail.com"">p.mb.us.ki.ng@gmail.com</a>
<a href=""mailto:pm.b.u.sk.ing@gmail.com"">pm.b.u.sk.ing@gmail.com</a>
<a href=""mailto:p.m.bu.sking@gmail.com"">p.m.bu.sking@gmail.com</a>
<a href=""mailto:pmbus.k.i.ng@gmail.com"">pmbus.k.i.ng@gmail.com</a>
<a href=""mailto:p.mb.u.ski.ng@gmail.com"">p.mb.u.ski.ng@gmail.com</a>
<a href=""mailto:p.mb.us.ki.n.g@gmail.com"">p.mb.us.ki.n.g@gmail.com</a>
<a href=""mailto:p.m.bus.kin.g@gmail.com"">p.m.bus.kin.g@gmail.com</a>
<a href=""mailto:pm.b.uski.n.g@gmail.com"">pm.b.uski.n.g@gmail.com</a>
<a href=""mailto:p.mb.u.s.king@gmail.com"">p.mb.u.s.king@gmail.com</a>
<a href=""mailto:pmb.u.s.ki.n.g@gmail.com"">pmb.u.s.ki.n.g@gmail.com</a>
<a href=""mailto:pm.b.uski.ng@gmail.com"">pm.b.uski.ng@gmail.com</a>
<a href=""mailto:pmb.us.king@gmail.com"">pmb.us.king@gmail.com</a>
<a href=""mailto:pmbus.k.ing@gmail.com"">pmbus.k.ing@gmail.com</a>
<a href=""mailto:p.m.bu.s.king@gmail.com"">p.m.bu.s.king@gmail.com</a>
<a href=""mailto:pmbu.sk.ing@gmail.com"">pmbu.sk.ing@gmail.com</a>
<a href=""mailto:pm.b.us.k.in.g@gmail.com"">pm.b.us.k.in.g@gmail.com</a>
<a href=""mailto:pmbus.king@gmail.com"">pmbus.king@gmail.com</a>
<a href=""mailto:p.m.b.usking@gmail.com"">p.m.b.usking@gmail.com</a>
<a href=""mailto:p.m.b.uski.n.g@gmail.com"">p.m.b.uski.n.g@gmail.com</a>
<a href=""mailto:pmb.u.s.k.i.ng@gmail.com"">pmb.u.s.k.i.ng@gmail.com</a>
<a href=""mailto:pmb.uski.ng@gmail.com"">pmb.uski.ng@gmail.com</a>
<a href=""mailto:p.m.bus.king@gmail.com"">p.m.bus.king@gmail.com</a>
<a href=""mailto:pm.b.u.s.k.ing@gmail.com"">pm.b.u.s.k.ing@gmail.com</a>
<a href=""mailto:pmbu.s.king@gmail.com"">pmbu.s.king@gmail.com</a>
<a href=""mailto:p.m.bu.ski.ng@gmail.com"">p.m.bu.ski.ng@gmail.com</a>
<a href=""mailto:p.mbus.king@gmail.com"">p.mbus.king@gmail.com</a>
<a href=""mailto:pmb.uskin.g@gmail.com"">pmb.uskin.g@gmail.com</a>
<a href=""mailto:pmb.us.k.i.n.g@gmail.com"">pmb.us.k.i.n.g@gmail.com</a>
<a href=""mailto:p.mb.u.s.k.i.ng@gmail.com"">p.mb.u.s.k.i.ng@gmail.com</a>
<a href=""mailto:pm.b.us.ki.n.g@gmail.com"">pm.b.us.ki.n.g@gmail.com</a>
<a href=""mailto:p.m.b.u.sk.ing@gmail.com"">p.m.b.u.sk.ing@gmail.com</a>
<a href=""mailto:pmb.u.sking@gmail.com"">pmb.u.sking@gmail.com</a>
<a href=""mailto:pmbu.ski.ng@gmail.com"">pmbu.ski.ng@gmail.com</a>
<a href=""mailto:p.mbu.s.ki.ng@gmail.com"">p.mbu.s.ki.ng@gmail.com</a>
<a href=""mailto:p.m.busk.in.g@gmail.com"">p.m.busk.in.g@gmail.com</a>
<a href=""mailto:pmb.u.s.k.ing@gmail.com"">pmb.u.s.k.ing@gmail.com</a>
<a href=""mailto:pmbus.ki.n.g@gmail.com"">pmbus.ki.n.g@gmail.com</a>
<a href=""mailto:pm.b.u.s.king@gmail.com"">pm.b.u.s.king@gmail.com</a>
<a href=""mailto:pm.b.u.sking@gmail.com"">pm.b.u.sking@gmail.com</a>
<a href=""mailto:p.mbu.s.ki.n.g@gmail.com"">p.mbu.s.ki.n.g@gmail.com</a>
<a href=""mailto:pmbuskin.g@gmail.com"">pmbuskin.g@gmail.com</a>
<a href=""mailto:pm.bu.sk.i.n.g@gmail.com"">pm.bu.sk.i.n.g@gmail.com</a>
<a href=""mailto:p.m.b.u.s.kin.g@gmail.com"">p.m.b.u.s.kin.g@gmail.com</a>
<a href=""mailto:pmbuski.n.g@gmail.com"">pmbuski.n.g@gmail.com</a>
<a href=""mailto:pm.bu.s.king@gmail.com"">pm.bu.s.king@gmail.com</a>
<a href=""mailto:pm.bu.s.k.in.g@gmail.com"">pm.bu.s.k.in.g@gmail.com</a>
<a href=""mailto:p.mbusking@gmail.com"">p.mbusking@gmail.com</a>
<a href=""mailto:pm.busk.ing@gmail.com"">pm.busk.ing@gmail.com</a>
<a href=""mailto:pmbus.k.in.g@gmail.com"">pmbus.k.in.g@gmail.com</a>
<a href=""mailto:p.m.bus.k.i.ng@gmail.com"">p.m.bus.k.i.ng@gmail.com</a>
<a href=""mailto:p.m.busk.i.n.g@gmail.com"">p.m.busk.i.n.g@gmail.com</a>
<a href=""mailto:pm.b.usk.ing@gmail.com"">pm.b.usk.ing@gmail.com</a>
<a href=""mailto:pmbus.ki.ng@gmail.com"">pmbus.ki.ng@gmail.com</a>
<a href=""mailto:p.m.b.uski.ng@gmail.com"">p.m.b.uski.ng@gmail.com</a>
<a href=""mailto:pm.buski.n.g@gmail.com"">pm.buski.n.g@gmail.com</a>
<a href=""mailto:pmb.us.k.ing@gmail.com"">pmb.us.k.ing@gmail.com</a>
<a href=""mailto:p.m.b.us.ki.n.g@gmail.com"">p.m.b.us.ki.n.g@gmail.com</a>
<a href=""mailto:p.mb.us.k.in.g@gmail.com"">p.mb.us.k.in.g@gmail.com</a>
<a href=""mailto:p.m.b.us.k.i.ng@gmail.com"">p.m.b.us.k.i.ng@gmail.com</a>
<a href=""mailto:p.m.b.u.skin.g@gmail.com"">p.m.b.u.skin.g@gmail.com</a>"
Th0FmSLm,Nigerian scammers [19-2-1/2024],bombaires,AIMMS,Monday 19th of February 2024 09:52:42 AM CDT,"<a href=""mailto:jeffwilkinsonkeystonebank@googlemail.com"">jeffwilkinsonkeystonebank@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+16438@googlemail.com"">jeffwilkinsonkeystonebank+16438@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+30837@googlemail.com"">jeffwilkinsonkeystonebank+30837@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+20067@googlemail.com"">jeffwilkinsonkeystonebank+20067@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+31816@googlemail.com"">jeffwilkinsonkeystonebank+31816@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+16267@googlemail.com"">jeffwilkinsonkeystonebank+16267@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+5297@googlemail.com"">jeffwilkinsonkeystonebank+5297@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+28918@googlemail.com"">jeffwilkinsonkeystonebank+28918@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+6775@googlemail.com"">jeffwilkinsonkeystonebank+6775@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+1925@googlemail.com"">jeffwilkinsonkeystonebank+1925@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+8755@googlemail.com"">jeffwilkinsonkeystonebank+8755@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+10188@googlemail.com"">jeffwilkinsonkeystonebank+10188@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+9146@googlemail.com"">jeffwilkinsonkeystonebank+9146@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+18858@googlemail.com"">jeffwilkinsonkeystonebank+18858@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+10690@googlemail.com"">jeffwilkinsonkeystonebank+10690@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+12688@googlemail.com"">jeffwilkinsonkeystonebank+12688@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+17317@googlemail.com"">jeffwilkinsonkeystonebank+17317@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+12581@googlemail.com"">jeffwilkinsonkeystonebank+12581@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+705@googlemail.com"">jeffwilkinsonkeystonebank+705@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+13975@googlemail.com"">jeffwilkinsonkeystonebank+13975@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+4894@googlemail.com"">jeffwilkinsonkeystonebank+4894@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+24983@googlemail.com"">jeffwilkinsonkeystonebank+24983@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+29257@googlemail.com"">jeffwilkinsonkeystonebank+29257@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+17017@googlemail.com"">jeffwilkinsonkeystonebank+17017@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+26968@googlemail.com"">jeffwilkinsonkeystonebank+26968@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+10482@googlemail.com"">jeffwilkinsonkeystonebank+10482@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+1188@googlemail.com"">jeffwilkinsonkeystonebank+1188@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+10759@googlemail.com"">jeffwilkinsonkeystonebank+10759@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+13652@googlemail.com"">jeffwilkinsonkeystonebank+13652@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+4521@googlemail.com"">jeffwilkinsonkeystonebank+4521@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+28319@googlemail.com"">jeffwilkinsonkeystonebank+28319@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+22313@googlemail.com"">jeffwilkinsonkeystonebank+22313@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+31461@googlemail.com"">jeffwilkinsonkeystonebank+31461@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+6903@googlemail.com"">jeffwilkinsonkeystonebank+6903@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+6424@googlemail.com"">jeffwilkinsonkeystonebank+6424@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+1003@googlemail.com"">jeffwilkinsonkeystonebank+1003@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+15663@googlemail.com"">jeffwilkinsonkeystonebank+15663@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+8160@googlemail.com"">jeffwilkinsonkeystonebank+8160@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+9541@googlemail.com"">jeffwilkinsonkeystonebank+9541@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+20809@googlemail.com"">jeffwilkinsonkeystonebank+20809@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+30569@googlemail.com"">jeffwilkinsonkeystonebank+30569@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+8820@googlemail.com"">jeffwilkinsonkeystonebank+8820@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+26879@googlemail.com"">jeffwilkinsonkeystonebank+26879@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+23744@googlemail.com"">jeffwilkinsonkeystonebank+23744@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+7905@googlemail.com"">jeffwilkinsonkeystonebank+7905@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+21010@googlemail.com"">jeffwilkinsonkeystonebank+21010@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+19862@googlemail.com"">jeffwilkinsonkeystonebank+19862@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+13337@googlemail.com"">jeffwilkinsonkeystonebank+13337@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+6118@googlemail.com"">jeffwilkinsonkeystonebank+6118@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+3433@googlemail.com"">jeffwilkinsonkeystonebank+3433@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+22896@googlemail.com"">jeffwilkinsonkeystonebank+22896@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+22790@googlemail.com"">jeffwilkinsonkeystonebank+22790@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+14608@googlemail.com"">jeffwilkinsonkeystonebank+14608@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+22266@googlemail.com"">jeffwilkinsonkeystonebank+22266@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+18285@googlemail.com"">jeffwilkinsonkeystonebank+18285@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+6914@googlemail.com"">jeffwilkinsonkeystonebank+6914@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+239@googlemail.com"">jeffwilkinsonkeystonebank+239@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+21693@googlemail.com"">jeffwilkinsonkeystonebank+21693@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+3712@googlemail.com"">jeffwilkinsonkeystonebank+3712@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+12514@googlemail.com"">jeffwilkinsonkeystonebank+12514@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+9452@googlemail.com"">jeffwilkinsonkeystonebank+9452@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+15845@googlemail.com"">jeffwilkinsonkeystonebank+15845@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+15266@googlemail.com"">jeffwilkinsonkeystonebank+15266@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+13886@googlemail.com"">jeffwilkinsonkeystonebank+13886@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+23017@googlemail.com"">jeffwilkinsonkeystonebank+23017@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+24971@googlemail.com"">jeffwilkinsonkeystonebank+24971@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+16554@googlemail.com"">jeffwilkinsonkeystonebank+16554@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+14567@googlemail.com"">jeffwilkinsonkeystonebank+14567@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+5002@googlemail.com"">jeffwilkinsonkeystonebank+5002@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+23707@googlemail.com"">jeffwilkinsonkeystonebank+23707@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+6834@googlemail.com"">jeffwilkinsonkeystonebank+6834@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+13503@googlemail.com"">jeffwilkinsonkeystonebank+13503@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+23328@googlemail.com"">jeffwilkinsonkeystonebank+23328@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+11288@googlemail.com"">jeffwilkinsonkeystonebank+11288@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+13152@googlemail.com"">jeffwilkinsonkeystonebank+13152@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+16891@googlemail.com"">jeffwilkinsonkeystonebank+16891@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+28749@googlemail.com"">jeffwilkinsonkeystonebank+28749@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+31247@googlemail.com"">jeffwilkinsonkeystonebank+31247@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+25744@googlemail.com"">jeffwilkinsonkeystonebank+25744@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+5461@googlemail.com"">jeffwilkinsonkeystonebank+5461@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+4535@googlemail.com"">jeffwilkinsonkeystonebank+4535@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+26182@googlemail.com"">jeffwilkinsonkeystonebank+26182@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+24377@googlemail.com"">jeffwilkinsonkeystonebank+24377@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+11081@googlemail.com"">jeffwilkinsonkeystonebank+11081@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+3839@googlemail.com"">jeffwilkinsonkeystonebank+3839@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+5153@googlemail.com"">jeffwilkinsonkeystonebank+5153@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+32685@googlemail.com"">jeffwilkinsonkeystonebank+32685@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+12946@googlemail.com"">jeffwilkinsonkeystonebank+12946@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+7561@googlemail.com"">jeffwilkinsonkeystonebank+7561@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+12613@googlemail.com"">jeffwilkinsonkeystonebank+12613@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+11858@googlemail.com"">jeffwilkinsonkeystonebank+11858@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+21031@googlemail.com"">jeffwilkinsonkeystonebank+21031@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+21039@googlemail.com"">jeffwilkinsonkeystonebank+21039@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+10583@googlemail.com"">jeffwilkinsonkeystonebank+10583@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+9972@googlemail.com"">jeffwilkinsonkeystonebank+9972@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+29998@googlemail.com"">jeffwilkinsonkeystonebank+29998@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+7692@googlemail.com"">jeffwilkinsonkeystonebank+7692@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+27495@googlemail.com"">jeffwilkinsonkeystonebank+27495@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+14977@googlemail.com"">jeffwilkinsonkeystonebank+14977@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+135@googlemail.com"">jeffwilkinsonkeystonebank+135@googlemail.com</a>
<a href=""mailto:jeffwilkinsonkeystonebank+28303@googlemail.com"">jeffwilkinsonkeystonebank+28303@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson@googlemail.com"">keystoneb.jeffwilkinson@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17933@googlemail.com"">keystoneb.jeffwilkinson+17933@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10801@googlemail.com"">keystoneb.jeffwilkinson+10801@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18092@googlemail.com"">keystoneb.jeffwilkinson+18092@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11797@googlemail.com"">keystoneb.jeffwilkinson+11797@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27480@googlemail.com"">keystoneb.jeffwilkinson+27480@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18719@googlemail.com"">keystoneb.jeffwilkinson+18719@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+863@googlemail.com"">keystoneb.jeffwilkinson+863@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18212@googlemail.com"">keystoneb.jeffwilkinson+18212@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2464@googlemail.com"">keystoneb.jeffwilkinson+2464@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6687@googlemail.com"">keystoneb.jeffwilkinson+6687@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4686@googlemail.com"">keystoneb.jeffwilkinson+4686@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22373@googlemail.com"">keystoneb.jeffwilkinson+22373@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20719@googlemail.com"">keystoneb.jeffwilkinson+20719@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31230@googlemail.com"">keystoneb.jeffwilkinson+31230@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9690@googlemail.com"">keystoneb.jeffwilkinson+9690@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3814@googlemail.com"">keystoneb.jeffwilkinson+3814@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14688@googlemail.com"">keystoneb.jeffwilkinson+14688@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15604@googlemail.com"">keystoneb.jeffwilkinson+15604@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27092@googlemail.com"">keystoneb.jeffwilkinson+27092@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24099@googlemail.com"">keystoneb.jeffwilkinson+24099@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5653@googlemail.com"">keystoneb.jeffwilkinson+5653@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27039@googlemail.com"">keystoneb.jeffwilkinson+27039@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6915@googlemail.com"">keystoneb.jeffwilkinson+6915@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4881@googlemail.com"">keystoneb.jeffwilkinson+4881@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6876@googlemail.com"">keystoneb.jeffwilkinson+6876@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25133@googlemail.com"">keystoneb.jeffwilkinson+25133@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24712@googlemail.com"">keystoneb.jeffwilkinson+24712@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29745@googlemail.com"">keystoneb.jeffwilkinson+29745@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27381@googlemail.com"">keystoneb.jeffwilkinson+27381@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29233@googlemail.com"">keystoneb.jeffwilkinson+29233@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16833@googlemail.com"">keystoneb.jeffwilkinson+16833@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5500@googlemail.com"">keystoneb.jeffwilkinson+5500@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8132@googlemail.com"">keystoneb.jeffwilkinson+8132@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4981@googlemail.com"">keystoneb.jeffwilkinson+4981@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19865@googlemail.com"">keystoneb.jeffwilkinson+19865@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10401@googlemail.com"">keystoneb.jeffwilkinson+10401@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18934@googlemail.com"">keystoneb.jeffwilkinson+18934@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22148@googlemail.com"">keystoneb.jeffwilkinson+22148@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16020@googlemail.com"">keystoneb.jeffwilkinson+16020@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15413@googlemail.com"">keystoneb.jeffwilkinson+15413@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11908@googlemail.com"">keystoneb.jeffwilkinson+11908@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4221@googlemail.com"">keystoneb.jeffwilkinson+4221@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6857@googlemail.com"">keystoneb.jeffwilkinson+6857@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9043@googlemail.com"">keystoneb.jeffwilkinson+9043@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9710@googlemail.com"">keystoneb.jeffwilkinson+9710@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18374@googlemail.com"">keystoneb.jeffwilkinson+18374@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8040@googlemail.com"">keystoneb.jeffwilkinson+8040@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2972@googlemail.com"">keystoneb.jeffwilkinson+2972@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12356@googlemail.com"">keystoneb.jeffwilkinson+12356@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22331@googlemail.com"">keystoneb.jeffwilkinson+22331@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23558@googlemail.com"">keystoneb.jeffwilkinson+23558@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20761@googlemail.com"">keystoneb.jeffwilkinson+20761@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11272@googlemail.com"">keystoneb.jeffwilkinson+11272@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20575@googlemail.com"">keystoneb.jeffwilkinson+20575@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8167@googlemail.com"">keystoneb.jeffwilkinson+8167@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16965@googlemail.com"">keystoneb.jeffwilkinson+16965@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2986@googlemail.com"">keystoneb.jeffwilkinson+2986@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6228@googlemail.com"">keystoneb.jeffwilkinson+6228@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20079@googlemail.com"">keystoneb.jeffwilkinson+20079@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3508@googlemail.com"">keystoneb.jeffwilkinson+3508@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2498@googlemail.com"">keystoneb.jeffwilkinson+2498@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26198@googlemail.com"">keystoneb.jeffwilkinson+26198@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24653@googlemail.com"">keystoneb.jeffwilkinson+24653@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7181@googlemail.com"">keystoneb.jeffwilkinson+7181@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10310@googlemail.com"">keystoneb.jeffwilkinson+10310@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5692@googlemail.com"">keystoneb.jeffwilkinson+5692@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+90@googlemail.com"">keystoneb.jeffwilkinson+90@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6069@googlemail.com"">keystoneb.jeffwilkinson+6069@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7879@googlemail.com"">keystoneb.jeffwilkinson+7879@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26123@googlemail.com"">keystoneb.jeffwilkinson+26123@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4124@googlemail.com"">keystoneb.jeffwilkinson+4124@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13246@googlemail.com"">keystoneb.jeffwilkinson+13246@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18145@googlemail.com"">keystoneb.jeffwilkinson+18145@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11047@googlemail.com"">keystoneb.jeffwilkinson+11047@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23897@googlemail.com"">keystoneb.jeffwilkinson+23897@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+483@googlemail.com"">keystoneb.jeffwilkinson+483@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11827@googlemail.com"">keystoneb.jeffwilkinson+11827@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17746@googlemail.com"">keystoneb.jeffwilkinson+17746@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14829@googlemail.com"">keystoneb.jeffwilkinson+14829@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30522@googlemail.com"">keystoneb.jeffwilkinson+30522@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17740@googlemail.com"">keystoneb.jeffwilkinson+17740@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12230@googlemail.com"">keystoneb.jeffwilkinson+12230@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22965@googlemail.com"">keystoneb.jeffwilkinson+22965@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1383@googlemail.com"">keystoneb.jeffwilkinson+1383@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28218@googlemail.com"">keystoneb.jeffwilkinson+28218@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24573@googlemail.com"">keystoneb.jeffwilkinson+24573@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24964@googlemail.com"">keystoneb.jeffwilkinson+24964@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29375@googlemail.com"">keystoneb.jeffwilkinson+29375@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5492@googlemail.com"">keystoneb.jeffwilkinson+5492@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1141@googlemail.com"">keystoneb.jeffwilkinson+1141@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19501@googlemail.com"">keystoneb.jeffwilkinson+19501@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7491@googlemail.com"">keystoneb.jeffwilkinson+7491@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31299@googlemail.com"">keystoneb.jeffwilkinson+31299@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26898@googlemail.com"">keystoneb.jeffwilkinson+26898@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3376@googlemail.com"">keystoneb.jeffwilkinson+3376@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24120@googlemail.com"">keystoneb.jeffwilkinson+24120@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16865@googlemail.com"">keystoneb.jeffwilkinson+16865@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6073@googlemail.com"">keystoneb.jeffwilkinson+6073@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17353@googlemail.com"">keystoneb.jeffwilkinson+17353@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8927@googlemail.com"">keystoneb.jeffwilkinson+8927@googlemail.com</a>
<a href=""mailto:keystonebankltd@googlemail.com"">keystonebankltd@googlemail.com</a>
<a href=""mailto:keystonebankltd+7435@googlemail.com"">keystonebankltd+7435@googlemail.com</a>
<a href=""mailto:keystonebankltd+25474@googlemail.com"">keystonebankltd+25474@googlemail.com</a>
<a href=""mailto:keystonebankltd+4671@googlemail.com"">keystonebankltd+4671@googlemail.com</a>
<a href=""mailto:keystonebankltd+15615@googlemail.com"">keystonebankltd+15615@googlemail.com</a>
<a href=""mailto:keystonebankltd+549@googlemail.com"">keystonebankltd+549@googlemail.com</a>
<a href=""mailto:keystonebankltd+24104@googlemail.com"">keystonebankltd+24104@googlemail.com</a>
<a href=""mailto:keystonebankltd+16466@googlemail.com"">keystonebankltd+16466@googlemail.com</a>
<a href=""mailto:keystonebankltd+19546@googlemail.com"">keystonebankltd+19546@googlemail.com</a>
<a href=""mailto:keystonebankltd+408@googlemail.com"">keystonebankltd+408@googlemail.com</a>
<a href=""mailto:keystonebankltd+31217@googlemail.com"">keystonebankltd+31217@googlemail.com</a>
<a href=""mailto:keystonebankltd+24230@googlemail.com"">keystonebankltd+24230@googlemail.com</a>
<a href=""mailto:keystonebankltd+6551@googlemail.com"">keystonebankltd+6551@googlemail.com</a>
<a href=""mailto:keystonebankltd+31319@googlemail.com"">keystonebankltd+31319@googlemail.com</a>
<a href=""mailto:keystonebankltd+25127@googlemail.com"">keystonebankltd+25127@googlemail.com</a>
<a href=""mailto:keystonebankltd+23584@googlemail.com"">keystonebankltd+23584@googlemail.com</a>
<a href=""mailto:keystonebankltd+3452@googlemail.com"">keystonebankltd+3452@googlemail.com</a>
<a href=""mailto:keystonebankltd+3909@googlemail.com"">keystonebankltd+3909@googlemail.com</a>
<a href=""mailto:keystonebankltd+26341@googlemail.com"">keystonebankltd+26341@googlemail.com</a>
<a href=""mailto:keystonebankltd+4801@googlemail.com"">keystonebankltd+4801@googlemail.com</a>
<a href=""mailto:keystonebankltd+12461@googlemail.com"">keystonebankltd+12461@googlemail.com</a>
<a href=""mailto:keystonebankltd+20529@googlemail.com"">keystonebankltd+20529@googlemail.com</a>
<a href=""mailto:keystonebankltd+9572@googlemail.com"">keystonebankltd+9572@googlemail.com</a>
<a href=""mailto:keystonebankltd+13009@googlemail.com"">keystonebankltd+13009@googlemail.com</a>
<a href=""mailto:keystonebankltd+14869@googlemail.com"">keystonebankltd+14869@googlemail.com</a>
<a href=""mailto:keystonebankltd+1275@googlemail.com"">keystonebankltd+1275@googlemail.com</a>
<a href=""mailto:keystonebankltd+29716@googlemail.com"">keystonebankltd+29716@googlemail.com</a>
<a href=""mailto:keystonebankltd+1574@googlemail.com"">keystonebankltd+1574@googlemail.com</a>
<a href=""mailto:keystonebankltd+6888@googlemail.com"">keystonebankltd+6888@googlemail.com</a>
<a href=""mailto:keystonebankltd+1548@googlemail.com"">keystonebankltd+1548@googlemail.com</a>
<a href=""mailto:keystonebankltd+14466@googlemail.com"">keystonebankltd+14466@googlemail.com</a>
<a href=""mailto:keystonebankltd+870@googlemail.com"">keystonebankltd+870@googlemail.com</a>
<a href=""mailto:keystonebankltd+9368@googlemail.com"">keystonebankltd+9368@googlemail.com</a>
<a href=""mailto:keystonebankltd+29094@googlemail.com"">keystonebankltd+29094@googlemail.com</a>
<a href=""mailto:keystonebankltd+10405@googlemail.com"">keystonebankltd+10405@googlemail.com</a>
<a href=""mailto:keystonebankltd+24660@googlemail.com"">keystonebankltd+24660@googlemail.com</a>
<a href=""mailto:keystonebankltd+10982@googlemail.com"">keystonebankltd+10982@googlemail.com</a>
<a href=""mailto:keystonebankltd+7152@googlemail.com"">keystonebankltd+7152@googlemail.com</a>
<a href=""mailto:keystonebankltd+4664@googlemail.com"">keystonebankltd+4664@googlemail.com</a>
<a href=""mailto:keystonebankltd+27192@googlemail.com"">keystonebankltd+27192@googlemail.com</a>
<a href=""mailto:keystonebankltd+27737@googlemail.com"">keystonebankltd+27737@googlemail.com</a>
<a href=""mailto:keystonebankltd+24731@googlemail.com"">keystonebankltd+24731@googlemail.com</a>
<a href=""mailto:keystonebankltd+25967@googlemail.com"">keystonebankltd+25967@googlemail.com</a>
<a href=""mailto:keystonebankltd+13156@googlemail.com"">keystonebankltd+13156@googlemail.com</a>
<a href=""mailto:keystonebankltd+14844@googlemail.com"">keystonebankltd+14844@googlemail.com</a>
<a href=""mailto:keystonebankltd+18112@googlemail.com"">keystonebankltd+18112@googlemail.com</a>
<a href=""mailto:keystonebankltd+24387@googlemail.com"">keystonebankltd+24387@googlemail.com</a>
<a href=""mailto:keystonebankltd+7426@googlemail.com"">keystonebankltd+7426@googlemail.com</a>
<a href=""mailto:keystonebankltd+10736@googlemail.com"">keystonebankltd+10736@googlemail.com</a>
<a href=""mailto:keystonebankltd+2951@googlemail.com"">keystonebankltd+2951@googlemail.com</a>
<a href=""mailto:keystonebankltd+18059@googlemail.com"">keystonebankltd+18059@googlemail.com</a>
<a href=""mailto:keystonebankltd+26062@googlemail.com"">keystonebankltd+26062@googlemail.com</a>
<a href=""mailto:keystonebankltd+26829@googlemail.com"">keystonebankltd+26829@googlemail.com</a>
<a href=""mailto:keystonebankltd+14593@googlemail.com"">keystonebankltd+14593@googlemail.com</a>
<a href=""mailto:keystonebankltd+20055@googlemail.com"">keystonebankltd+20055@googlemail.com</a>
<a href=""mailto:keystonebankltd+22830@googlemail.com"">keystonebankltd+22830@googlemail.com</a>
<a href=""mailto:keystonebankltd+5029@googlemail.com"">keystonebankltd+5029@googlemail.com</a>
<a href=""mailto:keystonebankltd+8954@googlemail.com"">keystonebankltd+8954@googlemail.com</a>
<a href=""mailto:keystonebankltd+32384@googlemail.com"">keystonebankltd+32384@googlemail.com</a>
<a href=""mailto:keystonebankltd+9600@googlemail.com"">keystonebankltd+9600@googlemail.com</a>
<a href=""mailto:keystonebankltd+10120@googlemail.com"">keystonebankltd+10120@googlemail.com</a>
<a href=""mailto:keystonebankltd+11280@googlemail.com"">keystonebankltd+11280@googlemail.com</a>
<a href=""mailto:keystonebankltd+8746@googlemail.com"">keystonebankltd+8746@googlemail.com</a>
<a href=""mailto:keystonebankltd+5558@googlemail.com"">keystonebankltd+5558@googlemail.com</a>
<a href=""mailto:keystonebankltd+28166@googlemail.com"">keystonebankltd+28166@googlemail.com</a>
<a href=""mailto:keystonebankltd+10840@googlemail.com"">keystonebankltd+10840@googlemail.com</a>
<a href=""mailto:keystonebankltd+19944@googlemail.com"">keystonebankltd+19944@googlemail.com</a>
<a href=""mailto:keystonebankltd+26604@googlemail.com"">keystonebankltd+26604@googlemail.com</a>
<a href=""mailto:keystonebankltd+10537@googlemail.com"">keystonebankltd+10537@googlemail.com</a>
<a href=""mailto:keystonebankltd+25987@googlemail.com"">keystonebankltd+25987@googlemail.com</a>
<a href=""mailto:keystonebankltd+24004@googlemail.com"">keystonebankltd+24004@googlemail.com</a>
<a href=""mailto:keystonebankltd+16021@googlemail.com"">keystonebankltd+16021@googlemail.com</a>
<a href=""mailto:keystonebankltd+30532@googlemail.com"">keystonebankltd+30532@googlemail.com</a>
<a href=""mailto:keystonebankltd+21596@googlemail.com"">keystonebankltd+21596@googlemail.com</a>
<a href=""mailto:keystonebankltd+23901@googlemail.com"">keystonebankltd+23901@googlemail.com</a>
<a href=""mailto:keystonebankltd+19845@googlemail.com"">keystonebankltd+19845@googlemail.com</a>
<a href=""mailto:keystonebankltd+260@googlemail.com"">keystonebankltd+260@googlemail.com</a>
<a href=""mailto:keystonebankltd+18673@googlemail.com"">keystonebankltd+18673@googlemail.com</a>
<a href=""mailto:keystonebankltd+3564@googlemail.com"">keystonebankltd+3564@googlemail.com</a>
<a href=""mailto:keystonebankltd+2632@googlemail.com"">keystonebankltd+2632@googlemail.com</a>
<a href=""mailto:keystonebankltd+15007@googlemail.com"">keystonebankltd+15007@googlemail.com</a>
<a href=""mailto:keystonebankltd+15545@googlemail.com"">keystonebankltd+15545@googlemail.com</a>
<a href=""mailto:keystonebankltd+9825@googlemail.com"">keystonebankltd+9825@googlemail.com</a>
<a href=""mailto:keystonebankltd+5801@googlemail.com"">keystonebankltd+5801@googlemail.com</a>
<a href=""mailto:keystonebankltd+20081@googlemail.com"">keystonebankltd+20081@googlemail.com</a>
<a href=""mailto:keystonebankltd+27212@googlemail.com"">keystonebankltd+27212@googlemail.com</a>
<a href=""mailto:keystonebankltd+23759@googlemail.com"">keystonebankltd+23759@googlemail.com</a>
<a href=""mailto:keystonebankltd+12626@googlemail.com"">keystonebankltd+12626@googlemail.com</a>
<a href=""mailto:keystonebankltd+30414@googlemail.com"">keystonebankltd+30414@googlemail.com</a>
<a href=""mailto:keystonebankltd+31710@googlemail.com"">keystonebankltd+31710@googlemail.com</a>
<a href=""mailto:keystonebankltd+26347@googlemail.com"">keystonebankltd+26347@googlemail.com</a>
<a href=""mailto:keystonebankltd+28047@googlemail.com"">keystonebankltd+28047@googlemail.com</a>
<a href=""mailto:keystonebankltd+21163@googlemail.com"">keystonebankltd+21163@googlemail.com</a>
<a href=""mailto:keystonebankltd+18882@googlemail.com"">keystonebankltd+18882@googlemail.com</a>
<a href=""mailto:keystonebankltd+20512@googlemail.com"">keystonebankltd+20512@googlemail.com</a>
<a href=""mailto:keystonebankltd+14277@googlemail.com"">keystonebankltd+14277@googlemail.com</a>
<a href=""mailto:keystonebankltd+6654@googlemail.com"">keystonebankltd+6654@googlemail.com</a>
<a href=""mailto:keystonebankltd+19613@googlemail.com"">keystonebankltd+19613@googlemail.com</a>
<a href=""mailto:keystonebankltd+17286@googlemail.com"">keystonebankltd+17286@googlemail.com</a>
<a href=""mailto:keystonebankltd+16316@googlemail.com"">keystonebankltd+16316@googlemail.com</a>
<a href=""mailto:keystonebankltd+5716@googlemail.com"">keystonebankltd+5716@googlemail.com</a>"
pRc3UrD5,Untitled,k3NGuru,YAML,Monday 19th of February 2024 09:29:54 AM CDT,"- name: Меняем схему по умолчанию
  community.postgresql.postgresql_query:
    # host: ""{{ PGSRV1 }}""
    db: ""{{ item.name }}""
    login_user: ""{{ item.user }}""
    login_password: ""{{ PGPWD }}""
    query: ALTER DATABASE %s SET search_path TO %s
    positional_args:
    - '{{ item.name }}'
    - '{{ item.name }}'
  loop: ""{{ dbname }}""

dbname:
- { name: ""admin_api"", user: ""admin_api_admin"" }
- { name: ""agenda"", user: ""agenda_admin"" }
- { name: ""client_api"", user: ""client_api_admin"" }"
v3Q75G2h,Lab1 SDA citire fiser,Alx09,C,Monday 19th of February 2024 09:25:48 AM CDT,"#include <stdio.h>
#include <stdlib.h>

int main()
{
    FILE* f;
    int numar;
   
    if (fopen_s(&f, ""in.txt"", ""rt"") != 0) {
        printf(""Fiser negasit"");
        return 0;
    }
    while (fscanf_s(f, ""%d"", &numar) != EOF) {
        printf(""%d "", numar);
    }

    return 0;
}"
SLeztvv5,Martin J. Gruenberg Imposter - Scam - Spam,bombaires,AIMMS,Monday 19th of February 2024 09:22:04 AM CDT,"<a href=""mailto:martingruenberg_009@outlook.com"">martingruenberg_009@outlook.com</a>
<a href=""mailto:martingruenberg2@gmail.com"">martingruenberg2@gmail.com</a>
<a href=""mailto:m.ar.t.in.g.ruen.be.rg.2@gmail.com"">m.ar.t.in.g.ruen.be.rg.2@gmail.com</a>
<a href=""mailto:ma.r.tin.g.rue.n.be.r.g.2@gmail.com"">ma.r.tin.g.rue.n.be.r.g.2@gmail.com</a>
<a href=""mailto:m.ar.tingr.u.e.nb.e.rg.2@gmail.com"">m.ar.tingr.u.e.nb.e.rg.2@gmail.com</a>
<a href=""mailto:m.arti.ngru.en.b.e.rg.2@gmail.com"">m.arti.ngru.en.b.e.rg.2@gmail.com</a>
<a href=""mailto:mart.ing.ruenb.e.rg.2@gmail.com"">mart.ing.ruenb.e.rg.2@gmail.com</a>
<a href=""mailto:mart.i.n.g.rue.nb.erg.2@gmail.com"">mart.i.n.g.rue.nb.erg.2@gmail.com</a>
<a href=""mailto:ma.r.t.ing.r.uen.be.r.g.2@gmail.com"">ma.r.t.ing.r.uen.be.r.g.2@gmail.com</a>
<a href=""mailto:mar.t.ing.r.ue.nber.g.2@gmail.com"">mar.t.ing.r.ue.nber.g.2@gmail.com</a>
<a href=""mailto:m.ar.t.ing.ru.e.nb.er.g.2@gmail.com"">m.ar.t.ing.ru.e.nb.er.g.2@gmail.com</a>
<a href=""mailto:ma.r.ti.ngru.e.n.b.er.g.2@gmail.com"">ma.r.ti.ngru.e.n.b.er.g.2@gmail.com</a>
<a href=""mailto:m.art.i.n.gruen.be.r.g2@gmail.com"">m.art.i.n.gruen.be.r.g2@gmail.com</a>
<a href=""mailto:m.a.r.ting.ru.en.b.er.g.2@gmail.com"">m.a.r.ting.ru.en.b.er.g.2@gmail.com</a>
<a href=""mailto:m.arti.n.g.ruenb.er.g.2@gmail.com"">m.arti.n.g.ruenb.er.g.2@gmail.com</a>
<a href=""mailto:m.a.rtin.g.ru.e.nber.g2@gmail.com"">m.a.rtin.g.ru.e.nber.g2@gmail.com</a>
<a href=""mailto:ma.r.t.i.n.g.r.ue.nb.e.r.g2@gmail.com"">ma.r.t.i.n.g.r.ue.nb.e.r.g2@gmail.com</a>
<a href=""mailto:m.a.r.ti.n.gr.u.e.nbe.rg.2@gmail.com"">m.a.r.ti.n.gr.u.e.nbe.rg.2@gmail.com</a>
<a href=""mailto:mar.t.ingr.u.en.b.erg.2@gmail.com"">mar.t.ingr.u.en.b.erg.2@gmail.com</a>
<a href=""mailto:mar.ti.ngru.enb.e.r.g2@gmail.com"">mar.ti.ngru.enb.e.r.g2@gmail.com</a>
<a href=""mailto:m.arti.ngrue.nberg.2@gmail.com"">m.arti.ngrue.nberg.2@gmail.com</a>
<a href=""mailto:m.ar.t.i.n.gruenberg.2@gmail.com"">m.ar.t.i.n.gruenberg.2@gmail.com</a>
<a href=""mailto:marti.n.g.r.ue.n.b.erg.2@gmail.com"">marti.n.g.r.ue.n.b.erg.2@gmail.com</a>
<a href=""mailto:ma.r.t.i.ng.r.u.enb.er.g.2@gmail.com"">ma.r.t.i.ng.r.u.enb.er.g.2@gmail.com</a>
<a href=""mailto:m.ar.t.ing.r.uen.berg2@gmail.com"">m.ar.t.ing.r.uen.berg2@gmail.com</a>
<a href=""mailto:m.ar.ting.r.u.e.n.b.e.r.g2@gmail.com"">m.ar.ting.r.u.e.n.b.e.r.g2@gmail.com</a>
<a href=""mailto:ma.rt.ing.r.u.enber.g2@gmail.com"">ma.rt.ing.r.u.enber.g2@gmail.com</a>
<a href=""mailto:m.ar.ti.n.g.ruenb.er.g.2@gmail.com"">m.ar.ti.n.g.ruenb.er.g.2@gmail.com</a>
<a href=""mailto:m.a.r.ti.n.g.rue.n.be.rg2@gmail.com"">m.a.r.ti.n.g.rue.n.be.rg2@gmail.com</a>
<a href=""mailto:m.a.rt.ingruenb.er.g.2@gmail.com"">m.a.rt.ingruenb.er.g.2@gmail.com</a>
<a href=""mailto:m.artingruen.b.er.g.2@gmail.com"">m.artingruen.b.er.g.2@gmail.com</a>
<a href=""mailto:ma.r.t.i.ngru.en.be.r.g.2@gmail.com"">ma.r.t.i.ngru.en.be.r.g.2@gmail.com</a>
<a href=""mailto:mar.t.ingru.en.be.r.g.2@gmail.com"">mar.t.ingru.en.be.r.g.2@gmail.com</a>
<a href=""mailto:m.a.r.tin.g.r.ue.nberg.2@gmail.com"">m.a.r.tin.g.r.ue.nberg.2@gmail.com</a>
<a href=""mailto:m.a.rtin.gr.uenber.g2@gmail.com"">m.a.rtin.gr.uenber.g2@gmail.com</a>
<a href=""mailto:m.art.in.gr.u.en.b.e.rg2@gmail.com"">m.art.in.gr.u.en.b.e.rg2@gmail.com</a>
<a href=""mailto:m.a.r.ti.ng.r.uen.b.e.rg.2@gmail.com"">m.a.r.ti.ng.r.uen.b.e.rg.2@gmail.com</a>
<a href=""mailto:m.ar.t.i.n.gr.u.en.b.e.r.g.2@gmail.com"">m.ar.t.i.n.gr.u.en.b.e.r.g.2@gmail.com</a>
<a href=""mailto:mart.in.g.ru.e.nb.e.rg.2@gmail.com"">mart.in.g.ru.e.nb.e.rg.2@gmail.com</a>
<a href=""mailto:m.a.r.ting.rue.nb.er.g2@gmail.com"">m.a.r.ting.rue.nb.er.g2@gmail.com</a>
<a href=""mailto:m.a.rt.in.g.r.u.e.n.be.rg.2@gmail.com"">m.a.rt.in.g.r.u.e.n.be.rg.2@gmail.com</a>
<a href=""mailto:m.ar.ti.n.gr.u.e.nb.erg2@gmail.com"">m.ar.ti.n.gr.u.e.nb.erg2@gmail.com</a>
<a href=""mailto:ma.rtin.gruen.be.r.g2@gmail.com"">ma.rtin.gruen.be.r.g2@gmail.com</a>
<a href=""mailto:m.a.r.t.i.ng.ruen.be.rg.2@gmail.com"">m.a.r.t.i.ng.ruen.be.rg.2@gmail.com</a>
<a href=""mailto:ma.rt.i.n.g.ruen.b.e.rg2@gmail.com"">ma.rt.i.n.g.ruen.b.e.rg2@gmail.com</a>
<a href=""mailto:mar.ti.ngru.e.nb.er.g.2@gmail.com"">mar.ti.ngru.e.nb.er.g.2@gmail.com</a>
<a href=""mailto:ma.r.tin.g.ru.e.n.be.rg.2@gmail.com"">ma.r.tin.g.ru.e.n.be.rg.2@gmail.com</a>
<a href=""mailto:ma.rtin.g.r.ue.n.b.er.g.2@gmail.com"">ma.rtin.g.r.ue.n.b.er.g.2@gmail.com</a>
<a href=""mailto:m.ar.ti.ng.r.u.enbe.r.g2@gmail.com"">m.ar.ti.ng.r.u.enbe.r.g2@gmail.com</a>
<a href=""mailto:m.ar.tingru.enb.er.g2@gmail.com"">m.ar.tingru.enb.er.g2@gmail.com</a>
<a href=""mailto:m.art.i.ngrue.n.b.er.g2@gmail.com"">m.art.i.ngrue.n.b.er.g2@gmail.com</a>
<a href=""mailto:m.arti.n.g.rue.n.b.erg2@gmail.com"">m.arti.n.g.rue.n.b.erg2@gmail.com</a>
<a href=""mailto:m.a.r.t.ingr.ue.nb.er.g2@gmail.com"">m.a.r.t.ingr.ue.nb.er.g2@gmail.com</a>
<a href=""mailto:mart.i.n.g.r.u.enberg.2@gmail.com"">mart.i.n.g.r.u.enberg.2@gmail.com</a>
<a href=""mailto:m.ar.t.ing.ruen.be.r.g2@gmail.com"">m.ar.t.ing.ruen.be.r.g2@gmail.com</a>
<a href=""mailto:m.a.rting.r.uenber.g.2@gmail.com"">m.a.rting.r.uenber.g.2@gmail.com</a>
<a href=""mailto:m.artin.gr.u.en.b.erg.2@gmail.com"">m.artin.gr.u.en.b.erg.2@gmail.com</a>
<a href=""mailto:m.a.r.ti.ngr.u.enb.er.g2@gmail.com"">m.a.r.ti.ngr.u.enb.er.g2@gmail.com</a>
<a href=""mailto:m.arti.n.gr.u.e.nb.e.rg2@gmail.com"">m.arti.n.gr.u.e.nb.e.rg2@gmail.com</a>
<a href=""mailto:ma.rting.r.u.e.nb.erg2@gmail.com"">ma.rting.r.u.e.nb.erg2@gmail.com</a>
<a href=""mailto:m.ar.t.i.ng.r.u.e.n.ber.g.2@gmail.com"">m.ar.t.i.ng.r.u.e.n.ber.g.2@gmail.com</a>
<a href=""mailto:m.a.rti.n.g.r.u.enb.e.r.g2@gmail.com"">m.a.rti.n.g.r.u.enb.e.r.g2@gmail.com</a>
<a href=""mailto:m.a.r.t.in.gr.ue.nbe.r.g.2@gmail.com"">m.a.r.t.in.gr.ue.nbe.r.g.2@gmail.com</a>
<a href=""mailto:m.a.r.t.i.ngru.e.nb.er.g.2@gmail.com"">m.a.r.t.i.ngru.e.nb.er.g.2@gmail.com</a>
<a href=""mailto:m.ar.t.ingru.enber.g2@gmail.com"">m.ar.t.ingru.enber.g2@gmail.com</a>
<a href=""mailto:m.a.r.t.i.ng.r.ue.n.berg.2@gmail.com"">m.a.r.t.i.ng.r.ue.n.berg.2@gmail.com</a>
<a href=""mailto:m.ar.ting.r.u.e.n.b.e.rg2@gmail.com"">m.ar.ting.r.u.e.n.b.e.rg2@gmail.com</a>
<a href=""mailto:m.a.r.t.ingrue.n.ber.g.2@gmail.com"">m.a.r.t.ingrue.n.ber.g.2@gmail.com</a>
<a href=""mailto:m.a.r.t.in.grue.n.b.erg.2@gmail.com"">m.a.r.t.in.grue.n.b.erg.2@gmail.com</a>
<a href=""mailto:mar.t.i.n.g.rue.n.b.erg.2@gmail.com"">mar.t.i.n.g.rue.n.b.erg.2@gmail.com</a>
<a href=""mailto:ma.r.t.i.ngr.uen.b.erg2@gmail.com"">ma.r.t.i.ngr.uen.b.erg2@gmail.com</a>
<a href=""mailto:mar.t.ingr.ue.nber.g2@gmail.com"">mar.t.ingr.ue.nber.g2@gmail.com</a>
<a href=""mailto:m.art.ingr.u.e.nber.g2@gmail.com"">m.art.ingr.u.e.nber.g2@gmail.com</a>
<a href=""mailto:m.ar.ting.r.u.e.n.b.erg.2@gmail.com"">m.ar.ting.r.u.e.n.b.erg.2@gmail.com</a>
<a href=""mailto:ma.rt.in.g.ruenber.g2@gmail.com"">ma.rt.in.g.ruenber.g2@gmail.com</a>
<a href=""mailto:m.a.rt.in.g.ru.enb.e.r.g.2@gmail.com"">m.a.rt.in.g.ru.enb.e.r.g.2@gmail.com</a>
<a href=""mailto:ma.rting.r.u.en.berg.2@gmail.com"">ma.rting.r.u.en.berg.2@gmail.com</a>
<a href=""mailto:m.ar.t.i.ngru.enb.er.g2@gmail.com"">m.ar.t.i.ngru.enb.er.g2@gmail.com</a>
<a href=""mailto:m.ar.tin.gr.u.e.n.be.rg.2@gmail.com"">m.ar.tin.gr.u.e.n.be.rg.2@gmail.com</a>
<a href=""mailto:m.a.r.t.ingrue.n.be.r.g2@gmail.com"">m.a.r.t.ingrue.n.be.r.g2@gmail.com</a>
<a href=""mailto:m.artingr.ue.nb.er.g2@gmail.com"">m.artingr.ue.nb.er.g2@gmail.com</a>
<a href=""mailto:m.a.r.t.ingr.ue.nbe.rg2@gmail.com"">m.a.r.t.ingr.ue.nbe.rg2@gmail.com</a>
<a href=""mailto:m.arti.ng.ru.e.nbe.r.g2@gmail.com"">m.arti.ng.ru.e.nbe.r.g2@gmail.com</a>
<a href=""mailto:ma.r.ti.n.g.ru.enb.er.g.2@gmail.com"">ma.r.ti.n.g.ru.enb.er.g.2@gmail.com</a>
<a href=""mailto:m.a.rtin.g.ru.e.nb.e.r.g.2@gmail.com"">m.a.rtin.g.ru.e.nb.e.r.g.2@gmail.com</a>
<a href=""mailto:ma.rti.ng.ruenbe.r.g2@gmail.com"">ma.rti.ng.ruenbe.r.g2@gmail.com</a>
<a href=""mailto:m.a.r.ting.ru.e.n.ber.g2@gmail.com"">m.a.r.ting.ru.e.n.ber.g2@gmail.com</a>
<a href=""mailto:marti.n.g.r.uen.be.r.g.2@gmail.com"">marti.n.g.r.uen.be.r.g.2@gmail.com</a>
<a href=""mailto:mar.ti.n.g.r.uenb.er.g2@gmail.com"">mar.ti.n.g.r.uenb.er.g2@gmail.com</a>
<a href=""mailto:m.a.r.t.in.g.ruenber.g.2@gmail.com"">m.a.r.t.in.g.ruenber.g.2@gmail.com</a>
<a href=""mailto:ma.r.t.i.n.gru.e.n.be.rg.2@gmail.com"">ma.r.t.i.n.gru.e.n.be.rg.2@gmail.com</a>
<a href=""mailto:m.a.r.t.ing.r.u.e.nb.e.r.g2@gmail.com"">m.a.r.t.ing.r.u.e.nb.e.r.g2@gmail.com</a>
<a href=""mailto:ma.r.ti.n.g.r.u.enb.erg.2@gmail.com"">ma.r.ti.n.g.r.u.enb.erg.2@gmail.com</a>
<a href=""mailto:m.a.rt.i.ngru.en.b.e.r.g2@gmail.com"">m.a.rt.i.ngru.en.b.e.r.g2@gmail.com</a>
<a href=""mailto:mart.i.ngru.enbe.rg2@gmail.com"">mart.i.ngru.enbe.rg2@gmail.com</a>
<a href=""mailto:ma.r.ti.n.gr.u.enb.er.g2@gmail.com"">ma.r.ti.n.gr.u.enb.er.g2@gmail.com</a>
<a href=""mailto:m.ar.t.ingr.u.en.b.erg2@gmail.com"">m.ar.t.ingr.u.en.b.erg2@gmail.com</a>
<a href=""mailto:m.artin.g.r.u.e.nberg2@gmail.com"">m.artin.g.r.u.e.nberg2@gmail.com</a>
<a href=""mailto:marting.r.u.en.b.e.rg.2@gmail.com"">marting.r.u.en.b.e.rg.2@gmail.com</a>
<a href=""mailto:ma.r.tin.grue.nbe.r.g2@gmail.com"">ma.r.tin.grue.nbe.r.g2@gmail.com</a>
<a href=""mailto:m.a.rt.ing.r.u.enberg.2@gmail.com"">m.a.rt.ing.r.u.enberg.2@gmail.com</a>
<a href=""mailto:martin.gruen.be.r.g2@gmail.com"">martin.gruen.be.r.g2@gmail.com</a>
<a href=""mailto:m.ar.t.in.grue.n.be.rg2@gmail.com"">m.ar.t.in.grue.n.be.rg2@gmail.com</a>
<a href=""mailto:ma.rt.i.ng.r.u.en.b.er.g2@gmail.com"">ma.rt.i.ng.r.u.en.b.er.g2@gmail.com</a>
<a href=""mailto:m.a.rt.in.gruenber.g.2@gmail.com"">m.a.rt.in.gruenber.g.2@gmail.com</a>
<a href=""mailto:m.ar.ti.ngru.enb.erg.2@gmail.com"">m.ar.ti.ngru.enb.erg.2@gmail.com</a>
<a href=""mailto:ma.r.tin.g.rue.nber.g.2@gmail.com"">ma.r.tin.g.rue.nber.g.2@gmail.com</a>
<a href=""mailto:mart.i.ngr.u.enb.e.rg2@gmail.com"">mart.i.ngr.u.enb.e.rg2@gmail.com</a>
<a href=""mailto:ma.r.tin.gr.uenb.e.r.g.2@gmail.com"">ma.r.tin.gr.uenb.e.r.g.2@gmail.com</a>
<a href=""mailto:ma.r.tin.g.ru.en.be.rg.2@gmail.com"">ma.r.tin.g.ru.en.be.rg.2@gmail.com</a>
<a href=""mailto:m.ar.ti.ng.rue.nbe.r.g.2@gmail.com"">m.ar.ti.ng.rue.nbe.r.g.2@gmail.com</a>
<a href=""mailto:m.ar.t.i.n.g.r.u.enbe.r.g2@gmail.com"">m.ar.t.i.n.g.r.u.enbe.r.g2@gmail.com</a>
<a href=""mailto:mart.i.n.g.r.u.en.be.r.g2@gmail.com"">mart.i.n.g.r.u.en.be.r.g2@gmail.com</a>
<a href=""mailto:m.ar.ti.n.g.r.uen.b.e.r.g2@gmail.com"">m.ar.ti.n.g.r.uen.b.e.r.g2@gmail.com</a>
<a href=""mailto:m.ar.tin.gr.uenbe.rg2@gmail.com"">m.ar.tin.gr.uenbe.rg2@gmail.com</a>
<a href=""mailto:mart.i.n.g.r.uenbe.r.g.2@gmail.com"">mart.i.n.g.r.uenbe.r.g.2@gmail.com</a>
<a href=""mailto:ma.rti.n.gruenb.er.g2@gmail.com"">ma.rti.n.gruenb.er.g2@gmail.com</a>
<a href=""mailto:m.ar.tingrue.n.b.erg2@gmail.com"">m.ar.tingrue.n.b.erg2@gmail.com</a>
<a href=""mailto:m.a.rti.ng.r.uenb.erg2@gmail.com"">m.a.rti.ng.r.uenb.erg2@gmail.com</a>
<a href=""mailto:m.a.rt.ing.ruen.berg2@gmail.com"">m.a.rt.ing.ruen.berg2@gmail.com</a>
<a href=""mailto:m.artin.grue.n.be.r.g2@gmail.com"">m.artin.grue.n.be.r.g2@gmail.com</a>
<a href=""mailto:ma.r.t.ing.ru.e.nbe.rg2@gmail.com"">ma.r.t.ing.ru.e.nbe.rg2@gmail.com</a>
<a href=""mailto:m.a.rti.n.g.r.ue.nb.erg2@gmail.com"">m.a.rti.n.g.r.ue.nb.erg2@gmail.com</a>
<a href=""mailto:martin.gr.uen.b.er.g2@gmail.com"">martin.gr.uen.b.er.g2@gmail.com</a>
<a href=""mailto:mar.ti.ng.ru.enb.e.rg.2@gmail.com"">mar.ti.ng.ru.enb.e.rg.2@gmail.com</a>
<a href=""mailto:m.a.r.t.i.ngr.u.enb.e.rg2@gmail.com"">m.a.r.t.i.ngr.u.enb.e.rg2@gmail.com</a>
<a href=""mailto:ma.rt.i.ngrue.n.ber.g2@gmail.com"">ma.rt.i.ngrue.n.ber.g2@gmail.com</a>
<a href=""mailto:m.a.rt.i.ngruenb.e.rg2@gmail.com"">m.a.rt.i.ngruenb.e.rg2@gmail.com</a>
<a href=""mailto:m.a.rt.i.ng.rue.nb.e.r.g2@gmail.com"">m.a.rt.i.ng.rue.nb.e.r.g2@gmail.com</a>
<a href=""mailto:m.arti.ng.r.u.enbe.rg2@gmail.com"">m.arti.ng.r.u.enbe.rg2@gmail.com</a>
<a href=""mailto:m.ar.tin.gru.enbe.r.g.2@gmail.com"">m.ar.tin.gru.enbe.r.g.2@gmail.com</a>
<a href=""mailto:m.ar.tingruenbe.rg.2@gmail.com"">m.ar.tingruenbe.rg.2@gmail.com</a>
<a href=""mailto:mart.i.ng.ru.enbe.rg.2@gmail.com"">mart.i.ng.ru.enbe.rg.2@gmail.com</a>
<a href=""mailto:ma.r.t.i.n.gruenbe.rg.2@gmail.com"">ma.r.t.i.n.gruenbe.rg.2@gmail.com</a>
<a href=""mailto:m.a.r.ti.n.gr.u.e.n.ber.g.2@gmail.com"">m.a.r.ti.n.gr.u.e.n.ber.g.2@gmail.com</a>
<a href=""mailto:m.artingru.e.n.b.erg2@gmail.com"">m.artingru.e.n.b.erg2@gmail.com</a>
<a href=""mailto:mart.ing.ruenbe.r.g2@gmail.com"">mart.ing.ruenbe.r.g2@gmail.com</a>
<a href=""mailto:marting.rue.n.be.r.g.2@gmail.com"">marting.rue.n.be.r.g.2@gmail.com</a>
<a href=""mailto:mar.tin.g.rue.n.b.e.r.g2@gmail.com"">mar.tin.g.rue.n.b.e.r.g2@gmail.com</a>
<a href=""mailto:m.ar.tingruen.b.e.r.g2@gmail.com"">m.ar.tingruen.b.e.r.g2@gmail.com</a>
<a href=""mailto:m.art.ing.r.ue.nb.er.g2@gmail.com"">m.art.ing.r.ue.nb.er.g2@gmail.com</a>
<a href=""mailto:mar.ti.ng.ruen.b.e.rg2@gmail.com"">mar.ti.ng.ruen.b.e.rg2@gmail.com</a>
<a href=""mailto:ma.rtin.gr.u.enb.e.r.g.2@gmail.com"">ma.rtin.gr.u.enb.e.r.g.2@gmail.com</a>
<a href=""mailto:mar.t.in.gr.uen.ber.g.2@gmail.com"">mar.t.in.gr.uen.ber.g.2@gmail.com</a>
<a href=""mailto:ma.rtin.gr.u.en.b.e.rg2@gmail.com"">ma.rtin.gr.u.en.b.e.rg2@gmail.com</a>
<a href=""mailto:marti.n.g.ru.e.n.b.erg2@gmail.com"">marti.n.g.ru.e.n.b.erg2@gmail.com</a>
<a href=""mailto:ma.rti.n.gr.u.e.nbe.r.g.2@gmail.com"">ma.rti.n.gr.u.e.nbe.r.g.2@gmail.com</a>
<a href=""mailto:marting.rue.n.b.er.g.2@gmail.com"">marting.rue.n.b.er.g.2@gmail.com</a>
<a href=""mailto:m.art.i.n.g.r.u.en.b.e.rg.2@gmail.com"">m.art.i.n.g.r.u.en.b.e.rg.2@gmail.com</a>
<a href=""mailto:mart.ingr.u.en.berg.2@gmail.com"">mart.ingr.u.en.berg.2@gmail.com</a>
<a href=""mailto:m.ar.tingr.u.en.ber.g2@gmail.com"">m.ar.tingr.u.en.ber.g2@gmail.com</a>
<a href=""mailto:m.a.r.t.ing.ru.en.b.er.g2@gmail.com"">m.a.r.t.ing.ru.en.b.er.g2@gmail.com</a>
<a href=""mailto:m.a.r.tingru.enbe.rg2@gmail.com"">m.a.r.tingru.enbe.rg2@gmail.com</a>
<a href=""mailto:martin.grue.n.b.er.g2@gmail.com"">martin.grue.n.b.er.g2@gmail.com</a>
<a href=""mailto:ma.r.t.i.n.gru.enb.er.g2@gmail.com"">ma.r.t.i.n.gru.enb.er.g2@gmail.com</a>
<a href=""mailto:m.a.rt.in.g.ru.enbe.r.g2@gmail.com"">m.a.rt.in.g.ru.enbe.r.g2@gmail.com</a>
<a href=""mailto:m.a.r.t.i.ng.r.u.en.b.e.rg.2@gmail.com"">m.a.r.t.i.ng.r.u.en.b.e.rg.2@gmail.com</a>
<a href=""mailto:m.a.r.t.ingru.en.be.rg2@gmail.com"">m.a.r.t.ingru.en.be.rg2@gmail.com</a>
<a href=""mailto:m.a.rt.i.ngru.e.n.ber.g.2@gmail.com"">m.a.rt.i.ngru.e.n.ber.g.2@gmail.com</a>
<a href=""mailto:m.ar.tin.g.rue.nb.e.r.g.2@gmail.com"">m.ar.tin.g.rue.nb.e.r.g.2@gmail.com</a>
<a href=""mailto:ma.r.t.i.ng.r.u.en.b.er.g.2@gmail.com"">ma.r.t.i.ng.r.u.en.b.er.g.2@gmail.com</a>
<a href=""mailto:martingrue.nbe.r.g2@gmail.com"">martingrue.nbe.r.g2@gmail.com</a>
<a href=""mailto:m.arti.ngruen.be.r.g2@gmail.com"">m.arti.ngruen.be.r.g2@gmail.com</a>
<a href=""mailto:m.art.i.ng.ru.e.nb.e.r.g2@gmail.com"">m.art.i.ng.ru.e.nb.e.r.g2@gmail.com</a>
<a href=""mailto:m.art.in.g.r.ue.nb.erg.2@gmail.com"">m.art.in.g.r.ue.nb.erg.2@gmail.com</a>
<a href=""mailto:marti.n.gru.e.n.ber.g2@gmail.com"">marti.n.gru.e.n.ber.g2@gmail.com</a>
<a href=""mailto:m.ar.tin.g.ru.enber.g2@gmail.com"">m.ar.tin.g.ru.enber.g2@gmail.com</a>
<a href=""mailto:m.arti.ngr.u.e.n.b.erg2@gmail.com"">m.arti.ngr.u.e.n.b.erg2@gmail.com</a>
<a href=""mailto:ma.r.tingruenb.e.rg.2@gmail.com"">ma.r.tingruenb.e.rg.2@gmail.com</a>
<a href=""mailto:mar.t.ing.r.u.e.n.berg.2@gmail.com"">mar.t.ing.r.u.e.n.berg.2@gmail.com</a>
<a href=""mailto:m.art.i.n.g.ruen.b.er.g2@gmail.com"">m.art.i.n.g.ruen.b.er.g2@gmail.com</a>
<a href=""mailto:mar.ti.ngr.uen.b.er.g2@gmail.com"">mar.ti.ngr.uen.b.er.g2@gmail.com</a>
<a href=""mailto:m.a.rt.i.n.g.ru.e.nb.erg2@gmail.com"">m.a.rt.i.n.g.ru.e.nb.erg2@gmail.com</a>
<a href=""mailto:martin.gr.u.e.n.be.r.g2@gmail.com"">martin.gr.u.e.n.be.r.g2@gmail.com</a>
<a href=""mailto:m.a.rtin.gr.u.e.nber.g.2@gmail.com"">m.a.rtin.gr.u.e.nber.g.2@gmail.com</a>
<a href=""mailto:ma.r.t.ing.ru.e.nberg2@gmail.com"">ma.r.t.ing.ru.e.nberg2@gmail.com</a>
<a href=""mailto:m.art.in.gr.u.enb.e.r.g.2@gmail.com"">m.art.in.gr.u.enb.e.r.g.2@gmail.com</a>
<a href=""mailto:m.ar.ting.ru.enb.e.rg.2@gmail.com"">m.ar.ting.ru.enb.e.rg.2@gmail.com</a>
<a href=""mailto:marting.r.u.e.n.ber.g.2@gmail.com"">marting.r.u.e.n.ber.g.2@gmail.com</a>
<a href=""mailto:marting.r.uen.b.er.g2@gmail.com"">marting.r.uen.b.er.g2@gmail.com</a>
<a href=""mailto:ma.rti.n.gru.e.nbe.r.g.2@gmail.com"">ma.rti.n.gru.e.nbe.r.g.2@gmail.com</a>
<a href=""mailto:mar.tingr.u.e.nb.er.g.2@gmail.com"">mar.tingr.u.e.nb.er.g.2@gmail.com</a>
<a href=""mailto:m.a.r.t.i.ng.r.u.e.n.be.r.g2@gmail.com"">m.a.r.t.i.ng.r.u.e.n.be.r.g2@gmail.com</a>
<a href=""mailto:m.ar.t.i.ngr.ue.n.be.rg2@gmail.com"">m.ar.t.i.ngr.ue.n.be.rg2@gmail.com</a>
<a href=""mailto:ma.r.t.ing.ru.e.nbe.r.g2@gmail.com"">ma.r.t.ing.ru.e.nbe.r.g2@gmail.com</a>
<a href=""mailto:m.ar.tin.gr.u.e.nb.er.g.2@gmail.com"">m.ar.tin.gr.u.e.nb.er.g.2@gmail.com</a>
<a href=""mailto:marti.ngr.uen.b.e.rg.2@gmail.com"">marti.ngr.uen.b.e.rg.2@gmail.com</a>
<a href=""mailto:ma.rt.i.ngru.en.b.e.r.g.2@gmail.com"">ma.rt.i.ngru.en.b.e.r.g.2@gmail.com</a>
<a href=""mailto:ma.rt.i.n.gru.e.nb.erg2@gmail.com"">ma.rt.i.n.gru.e.nb.erg2@gmail.com</a>
<a href=""mailto:m.a.r.ti.ngr.ue.n.b.e.rg2@gmail.com"">m.a.r.ti.ngr.ue.n.b.e.rg2@gmail.com</a>
<a href=""mailto:mar.ti.ngr.u.e.nb.e.rg2@gmail.com"">mar.ti.ngr.u.e.nb.e.rg2@gmail.com</a>
<a href=""mailto:ma.r.t.in.g.r.ue.n.be.r.g2@gmail.com"">ma.r.t.in.g.r.ue.n.be.r.g2@gmail.com</a>
<a href=""mailto:m.a.rti.ngr.u.en.b.e.r.g.2@gmail.com"">m.a.rti.ngr.u.en.b.e.r.g.2@gmail.com</a>
<a href=""mailto:m.a.rt.in.gr.u.e.nber.g.2@gmail.com"">m.a.rt.in.gr.u.e.nber.g.2@gmail.com</a>
<a href=""mailto:ma.r.t.i.ng.r.uen.b.e.rg2@gmail.com"">ma.r.t.i.ng.r.uen.b.e.rg2@gmail.com</a>
<a href=""mailto:ma.r.t.i.ng.r.ue.nbe.rg2@gmail.com"">ma.r.t.i.ng.r.ue.nbe.rg2@gmail.com</a>
<a href=""mailto:martingruen.b.e.r.g2@gmail.com"">martingruen.b.e.r.g2@gmail.com</a>
<a href=""mailto:m.a.rtin.g.rue.nbe.rg2@gmail.com"">m.a.rtin.g.rue.nbe.rg2@gmail.com</a>
<a href=""mailto:m.a.rtin.g.ruen.be.rg2@gmail.com"">m.a.rtin.g.ruen.be.rg2@gmail.com</a>
<a href=""mailto:mart.i.ng.r.u.enberg2@gmail.com"">mart.i.ng.r.u.enberg2@gmail.com</a>
<a href=""mailto:m.a.r.t.in.gruen.b.erg.2@gmail.com"">m.a.r.t.in.gruen.b.erg.2@gmail.com</a>
<a href=""mailto:m.a.rti.n.g.r.u.e.nb.erg.2@gmail.com"">m.a.rti.n.g.r.u.e.nb.erg.2@gmail.com</a>
<a href=""mailto:martinjgruenbergfdic@gmail.com"">martinjgruenbergfdic@gmail.com</a>
<a href=""mailto:mar.t.in.jgr.u.enb.er.gfdi.c@gmail.com"">mar.t.in.jgr.u.enb.er.gfdi.c@gmail.com</a>
<a href=""mailto:m.art.injg.r.u.e.n.b.erg.f.d.ic@gmail.com"">m.art.injg.r.u.e.n.b.erg.f.d.ic@gmail.com</a>
<a href=""mailto:ma.r.t.injgr.u.e.n.be.r.g.fdi.c@gmail.com"">ma.r.t.injgr.u.e.n.be.r.g.fdi.c@gmail.com</a>
<a href=""mailto:m.a.rti.nj.gr.ue.n.b.e.r.g.fdi.c@gmail.com"">m.a.rti.nj.gr.ue.n.b.e.r.g.fdi.c@gmail.com</a>
<a href=""mailto:ma.rti.njgr.u.en.be.rg.fdi.c@gmail.com"">ma.rti.njgr.u.en.be.rg.fdi.c@gmail.com</a>
<a href=""mailto:m.ar.tin.j.g.r.u.e.n.b.e.rg.f.dic@gmail.com"">m.ar.tin.j.g.r.u.e.n.b.e.rg.f.dic@gmail.com</a>
<a href=""mailto:ma.r.ti.nj.g.r.ue.nbe.r.g.f.dic@gmail.com"">ma.r.ti.nj.g.r.ue.nbe.r.g.f.dic@gmail.com</a>
<a href=""mailto:mar.tinj.g.rue.nbe.rg.fd.ic@gmail.com"">mar.tinj.g.rue.nbe.rg.fd.ic@gmail.com</a>
<a href=""mailto:m.ar.ti.njgru.e.nbe.r.gfdi.c@gmail.com"">m.ar.ti.njgru.e.nbe.r.gfdi.c@gmail.com</a>
<a href=""mailto:m.art.in.jgru.en.b.e.r.g.f.d.i.c@gmail.com"">m.art.in.jgru.en.b.e.r.g.f.d.i.c@gmail.com</a>
<a href=""mailto:m.ar.ti.njgr.u.en.be.rg.fdic@gmail.com"">m.ar.ti.njgr.u.en.be.rg.fdic@gmail.com</a>
<a href=""mailto:mart.in.jgru.en.b.er.gfd.ic@gmail.com"">mart.in.jgru.en.b.er.gfd.ic@gmail.com</a>
<a href=""mailto:ma.rti.n.jgr.ue.n.b.ergf.d.i.c@gmail.com"">ma.rti.n.jgr.ue.n.b.ergf.d.i.c@gmail.com</a>
<a href=""mailto:m.a.r.tin.jgru.enb.e.rg.f.dic@gmail.com"">m.a.r.tin.jgru.enb.e.rg.f.dic@gmail.com</a>
<a href=""mailto:m.ar.tinjg.r.uen.bergfd.i.c@gmail.com"">m.ar.tinjg.r.uen.bergfd.i.c@gmail.com</a>
<a href=""mailto:mart.injg.ruen.b.e.rgfdi.c@gmail.com"">mart.injg.ruen.b.e.rgfdi.c@gmail.com</a>
<a href=""mailto:m.ar.t.injg.ruenb.e.rg.fd.i.c@gmail.com"">m.ar.t.injg.ruenb.e.rg.fd.i.c@gmail.com</a>
<a href=""mailto:m.a.r.t.i.n.j.gru.en.b.e.r.gfd.ic@gmail.com"">m.a.r.t.i.n.j.gru.en.b.e.r.gfd.ic@gmail.com</a>
<a href=""mailto:m.a.rti.nj.grue.nb.e.rg.fdi.c@gmail.com"">m.a.rti.nj.grue.nb.e.rg.fdi.c@gmail.com</a>
<a href=""mailto:marti.njgr.u.e.n.bergfd.ic@gmail.com"">marti.njgr.u.e.n.bergfd.ic@gmail.com</a>
<a href=""mailto:m.a.r.ti.n.jgr.u.enber.g.fdic@gmail.com"">m.a.r.ti.n.jgr.u.enber.g.fdic@gmail.com</a>
<a href=""mailto:m.arti.n.jg.ru.e.nbe.rg.fdi.c@gmail.com"">m.arti.n.jg.ru.e.nbe.rg.fdi.c@gmail.com</a>
<a href=""mailto:m.ar.t.i.njgrue.n.be.r.gf.di.c@gmail.com"">m.ar.t.i.njgrue.n.be.r.gf.di.c@gmail.com</a>
<a href=""mailto:m.a.rti.njg.r.u.e.nbergf.d.ic@gmail.com"">m.a.rti.njg.r.u.e.nbergf.d.ic@gmail.com</a>
<a href=""mailto:ma.r.tinjg.r.ue.n.b.e.r.gf.dic@gmail.com"">ma.r.tinjg.r.ue.n.b.e.r.gf.dic@gmail.com</a>
<a href=""mailto:m.a.r.ti.n.j.gruenb.erg.f.d.ic@gmail.com"">m.a.r.ti.n.j.gruenb.erg.f.d.ic@gmail.com</a>
<a href=""mailto:mart.i.njg.ru.enber.gfd.i.c@gmail.com"">mart.i.njg.ru.enber.gfd.i.c@gmail.com</a>
<a href=""mailto:ma.rt.in.j.g.r.ue.n.be.r.g.f.d.ic@gmail.com"">ma.rt.in.j.g.r.ue.n.be.r.g.f.d.ic@gmail.com</a>
<a href=""mailto:ma.rt.i.n.j.g.r.u.enb.e.rgfdic@gmail.com"">ma.rt.i.n.j.g.r.u.enb.e.rgfdic@gmail.com</a>
<a href=""mailto:mart.in.j.gr.u.en.be.rg.f.d.i.c@gmail.com"">mart.in.j.gr.u.en.be.rg.f.d.i.c@gmail.com</a>
<a href=""mailto:ma.rt.inj.gru.e.nb.er.g.f.dic@gmail.com"">ma.rt.inj.gru.e.nb.er.g.f.dic@gmail.com</a>
<a href=""mailto:mart.in.jgr.uen.b.erg.f.d.i.c@gmail.com"">mart.in.jgr.uen.b.erg.f.d.i.c@gmail.com</a>
<a href=""mailto:m.a.r.ti.njg.ru.e.nb.erg.fd.i.c@gmail.com"">m.a.r.ti.njg.ru.e.nb.erg.fd.i.c@gmail.com</a>
<a href=""mailto:m.ar.t.inj.g.rue.n.berg.f.dic@gmail.com"">m.ar.t.inj.g.rue.n.berg.f.dic@gmail.com</a>
<a href=""mailto:m.ar.t.i.n.jg.ruen.be.rgf.d.i.c@gmail.com"">m.ar.t.i.n.jg.ruen.be.rgf.d.i.c@gmail.com</a>
<a href=""mailto:ma.rti.njg.ru.en.ber.gfdic@gmail.com"">ma.rti.njg.ru.en.ber.gfdic@gmail.com</a>
<a href=""mailto:ma.r.tin.jg.rue.n.ber.gfd.i.c@gmail.com"">ma.r.tin.jg.rue.n.ber.gfd.i.c@gmail.com</a>
<a href=""mailto:mart.in.j.g.ruenb.ergf.d.ic@gmail.com"">mart.in.j.g.ruenb.ergf.d.ic@gmail.com</a>
<a href=""mailto:m.a.rti.n.jg.r.u.e.nb.e.rg.fdic@gmail.com"">m.a.rti.n.jg.r.u.e.nb.e.rg.fdic@gmail.com</a>
<a href=""mailto:ma.r.t.i.n.j.g.r.ue.nbe.r.g.fdi.c@gmail.com"">ma.r.t.i.n.j.g.r.ue.nbe.r.g.fdi.c@gmail.com</a>
<a href=""mailto:m.arti.n.j.g.rue.nb.erg.f.d.ic@gmail.com"">m.arti.n.j.g.rue.nb.erg.f.d.ic@gmail.com</a>
<a href=""mailto:m.a.rt.in.jgr.u.enb.erg.f.dic@gmail.com"">m.a.rt.in.jgr.u.enb.erg.f.dic@gmail.com</a>
<a href=""mailto:ma.r.tinj.gru.e.nberg.f.di.c@gmail.com"">ma.r.tinj.gru.e.nberg.f.di.c@gmail.com</a>
<a href=""mailto:m.a.r.ti.nj.g.rue.nb.e.r.g.f.d.ic@gmail.com"">m.a.r.ti.nj.g.rue.nb.e.r.g.f.d.ic@gmail.com</a>
<a href=""mailto:m.a.r.tin.jgr.u.en.ber.g.f.di.c@gmail.com"">m.a.r.tin.jgr.u.en.ber.g.f.di.c@gmail.com</a>
<a href=""mailto:m.a.r.ti.n.j.gr.ue.n.be.r.g.fd.i.c@gmail.com"">m.a.r.ti.n.j.gr.ue.n.be.r.g.fd.i.c@gmail.com</a>
<a href=""mailto:ma.rt.i.njg.rue.nb.erg.fd.ic@gmail.com"">ma.rt.i.njg.rue.nb.erg.fd.ic@gmail.com</a>
<a href=""mailto:m.ar.t.i.njgru.e.nb.e.r.g.fd.ic@gmail.com"">m.ar.t.i.njgru.e.nb.e.r.g.fd.ic@gmail.com</a>
<a href=""mailto:ma.rt.in.jg.r.u.en.bergf.dic@gmail.com"">ma.rt.in.jg.r.u.en.bergf.dic@gmail.com</a>
<a href=""mailto:mart.inj.gr.u.e.n.be.r.gfdic@gmail.com"">mart.inj.gr.u.e.n.be.r.gfdic@gmail.com</a>
<a href=""mailto:ma.r.t.i.njg.rue.n.be.rg.f.dic@gmail.com"">ma.r.t.i.njg.rue.n.be.rg.f.dic@gmail.com</a>
<a href=""mailto:ma.r.tin.j.gru.e.n.be.rgfdic@gmail.com"">ma.r.tin.j.gru.e.n.be.rgfdic@gmail.com</a>
<a href=""mailto:mart.i.n.jgru.en.berg.fd.ic@gmail.com"">mart.i.n.jgru.en.berg.fd.ic@gmail.com</a>
<a href=""mailto:marti.nj.gru.en.b.e.r.gfd.i.c@gmail.com"">marti.nj.gru.en.b.e.r.gfd.i.c@gmail.com</a>
<a href=""mailto:ma.rtin.jg.r.uenbe.r.gf.dic@gmail.com"">ma.rtin.jg.r.uenbe.r.gf.dic@gmail.com</a>
<a href=""mailto:m.a.rt.inj.g.r.uenb.e.r.gfdi.c@gmail.com"">m.a.rt.inj.g.r.uenb.e.r.gfdi.c@gmail.com</a>
<a href=""mailto:ma.r.ti.n.jg.ru.enbe.rgfd.ic@gmail.com"">ma.r.ti.n.jg.ru.enbe.rgfd.ic@gmail.com</a>
<a href=""mailto:m.a.r.ti.n.j.gr.uen.b.erg.f.d.i.c@gmail.com"">m.a.r.ti.n.j.gr.uen.b.erg.f.d.i.c@gmail.com</a>
<a href=""mailto:mart.i.n.j.gru.en.b.e.rgfd.ic@gmail.com"">mart.i.n.j.gru.en.b.e.rgfd.ic@gmail.com</a>
<a href=""mailto:ma.rtin.j.gr.u.e.nberg.fd.i.c@gmail.com"">ma.rtin.j.gr.u.e.nberg.fd.i.c@gmail.com</a>
<a href=""mailto:ma.rti.nj.g.r.u.enb.ergf.d.ic@gmail.com"">ma.rti.nj.g.r.u.enb.ergf.d.ic@gmail.com</a>
<a href=""mailto:mar.t.in.jg.rue.nb.er.gf.dic@gmail.com"">mar.t.in.jg.rue.nb.er.gf.dic@gmail.com</a>
<a href=""mailto:ma.r.tinj.gr.uenb.er.gf.di.c@gmail.com"">ma.r.tinj.gr.uenb.er.gf.di.c@gmail.com</a>
<a href=""mailto:mar.ti.njgr.u.e.nbe.rg.fdi.c@gmail.com"">mar.ti.njgr.u.e.nbe.rg.fdi.c@gmail.com</a>
<a href=""mailto:mar.ti.n.j.grue.nbe.rg.fd.i.c@gmail.com"">mar.ti.n.j.grue.nbe.rg.fd.i.c@gmail.com</a>
<a href=""mailto:m.a.r.ti.njg.ru.enb.er.g.fd.i.c@gmail.com"">m.a.r.ti.njg.ru.enb.er.g.fd.i.c@gmail.com</a>
<a href=""mailto:m.a.r.t.in.jg.ru.e.n.ber.gf.di.c@gmail.com"">m.a.r.t.in.jg.ru.e.n.ber.gf.di.c@gmail.com</a>
<a href=""mailto:mar.t.i.n.jg.rue.n.b.e.r.g.fdi.c@gmail.com"">mar.t.i.n.jg.rue.n.b.e.r.g.fdi.c@gmail.com</a>
<a href=""mailto:m.ar.tin.j.g.r.u.enb.e.rgf.di.c@gmail.com"">m.ar.tin.j.g.r.u.enb.e.rgf.di.c@gmail.com</a>
<a href=""mailto:m.arti.nj.gr.ue.n.bergfd.ic@gmail.com"">m.arti.nj.gr.ue.n.bergfd.ic@gmail.com</a>
<a href=""mailto:mart.in.jg.r.ue.n.be.rgf.dic@gmail.com"">mart.in.jg.r.ue.n.be.rgf.dic@gmail.com</a>
<a href=""mailto:m.a.rt.i.n.j.g.ru.enbergfd.ic@gmail.com"">m.a.rt.i.n.j.g.ru.enbergfd.ic@gmail.com</a>
<a href=""mailto:m.ar.t.inj.g.r.ue.nber.g.f.d.i.c@gmail.com"">m.ar.t.inj.g.r.ue.nber.g.f.d.i.c@gmail.com</a>
<a href=""mailto:mar.ti.nj.grue.n.b.ergf.di.c@gmail.com"">mar.ti.nj.grue.n.b.ergf.di.c@gmail.com</a>
<a href=""mailto:mart.in.j.g.r.ue.n.be.rg.fdi.c@gmail.com"">mart.in.j.g.r.ue.n.be.rg.fdi.c@gmail.com</a>
<a href=""mailto:mar.t.i.nj.gr.ue.n.be.rgfd.ic@gmail.com"">mar.t.i.nj.gr.ue.n.be.rgfd.ic@gmail.com</a>
<a href=""mailto:m.a.rtin.j.g.rue.n.b.e.r.g.fd.i.c@gmail.com"">m.a.rtin.j.g.rue.n.b.e.r.g.fd.i.c@gmail.com</a>
<a href=""mailto:ma.r.t.i.nj.g.r.uenbergfdic@gmail.com"">ma.r.t.i.nj.g.r.uenbergfdic@gmail.com</a>
<a href=""mailto:ma.r.t.i.njgr.u.e.n.b.ergf.dic@gmail.com"">ma.r.t.i.njgr.u.e.n.b.ergf.dic@gmail.com</a>
<a href=""mailto:mar.t.injgrue.n.b.e.rgfdic@gmail.com"">mar.t.injgrue.n.b.e.rgfdic@gmail.com</a>
<a href=""mailto:m.ar.t.in.j.gru.en.b.er.gf.d.ic@gmail.com"">m.ar.t.in.j.gru.en.b.er.gf.d.ic@gmail.com</a>
<a href=""mailto:martinj.gr.ue.n.be.rgf.d.ic@gmail.com"">martinj.gr.ue.n.be.rgf.d.ic@gmail.com</a>
<a href=""mailto:m.art.in.j.gru.enb.er.gf.dic@gmail.com"">m.art.in.j.gru.enb.er.gf.dic@gmail.com</a>
<a href=""mailto:ma.r.t.inj.gr.uenb.er.g.fdic@gmail.com"">ma.r.t.inj.gr.uenb.er.g.fdic@gmail.com</a>
<a href=""mailto:mart.in.j.gr.uen.b.er.g.f.dic@gmail.com"">mart.in.j.gr.uen.b.er.g.f.dic@gmail.com</a>
<a href=""mailto:mar.ti.njg.r.u.en.b.erg.f.di.c@gmail.com"">mar.ti.njg.r.u.en.b.erg.f.di.c@gmail.com</a>
<a href=""mailto:ma.rt.injg.ru.enbe.r.gfd.ic@gmail.com"">ma.rt.injg.ru.enbe.r.gfd.ic@gmail.com</a>
<a href=""mailto:ma.r.ti.njgru.en.bergf.d.i.c@gmail.com"">ma.r.ti.njgru.en.bergf.d.i.c@gmail.com</a>
<a href=""mailto:ma.rt.in.j.g.rue.nb.er.g.fdic@gmail.com"">ma.rt.in.j.g.rue.nb.er.g.fdic@gmail.com</a>
<a href=""mailto:m.arti.nj.g.rue.nber.g.f.di.c@gmail.com"">m.arti.nj.g.rue.nber.g.f.di.c@gmail.com</a>
<a href=""mailto:ma.rt.injgr.ue.nb.er.g.fdi.c@gmail.com"">ma.rt.injgr.ue.nb.er.g.fdi.c@gmail.com</a>
<a href=""mailto:ma.rti.n.j.g.ru.en.b.er.gfdi.c@gmail.com"">ma.rti.n.j.g.ru.en.b.er.gfdi.c@gmail.com</a>
<a href=""mailto:mart.in.j.g.ruen.b.ergfd.i.c@gmail.com"">mart.in.j.g.ruen.b.ergfd.i.c@gmail.com</a>
<a href=""mailto:m.a.rt.injg.r.u.enb.e.rg.f.d.i.c@gmail.com"">m.a.rt.injg.r.u.enb.e.rg.f.d.i.c@gmail.com</a>
<a href=""mailto:ma.rt.in.j.grue.nbe.r.gfdi.c@gmail.com"">ma.rt.in.j.grue.nbe.r.gfdi.c@gmail.com</a>
<a href=""mailto:m.a.r.tinjg.r.u.e.n.ber.gfdi.c@gmail.com"">m.a.r.tinjg.r.u.e.n.ber.gfdi.c@gmail.com</a>
<a href=""mailto:ma.r.t.i.njg.r.u.enbe.rgf.d.ic@gmail.com"">ma.r.t.i.njg.r.u.enbe.rgf.d.ic@gmail.com</a>
<a href=""mailto:m.a.r.t.inj.g.r.u.e.nb.e.rgfd.i.c@gmail.com"">m.a.r.t.inj.g.r.u.e.nb.e.rgfd.i.c@gmail.com</a>
<a href=""mailto:mar.t.in.jg.ru.enbe.rg.fd.ic@gmail.com"">mar.t.in.jg.ru.enbe.rg.fd.ic@gmail.com</a>
<a href=""mailto:mart.i.njg.ruenb.er.g.fd.ic@gmail.com"">mart.i.njg.ruenb.er.g.fd.ic@gmail.com</a>
<a href=""mailto:m.artin.jgr.u.enbergfdi.c@gmail.com"">m.artin.jgr.u.enbergfdi.c@gmail.com</a>
<a href=""mailto:mart.inj.g.ru.e.n.b.ergf.d.ic@gmail.com"">mart.inj.g.ru.e.n.b.ergf.d.ic@gmail.com</a>
<a href=""mailto:marti.n.j.g.r.ue.nber.gf.d.i.c@gmail.com"">marti.n.j.g.r.ue.nber.gf.d.i.c@gmail.com</a>
<a href=""mailto:m.a.r.t.i.n.jgr.ue.n.b.e.r.gfdi.c@gmail.com"">m.a.r.t.i.n.jgr.ue.n.b.e.r.gfdi.c@gmail.com</a>
<a href=""mailto:m.a.rt.inj.gr.u.en.b.ergfd.ic@gmail.com"">m.a.rt.inj.gr.u.en.b.ergfd.ic@gmail.com</a>
<a href=""mailto:ma.r.t.i.njgr.u.e.nbe.r.g.fdic@gmail.com"">ma.r.t.i.njgr.u.e.nbe.r.g.fdic@gmail.com</a>
<a href=""mailto:marti.njgr.u.e.n.b.erg.fd.i.c@gmail.com"">marti.njgr.u.e.n.b.erg.fd.i.c@gmail.com</a>
<a href=""mailto:m.a.r.t.in.jgr.ue.nb.e.r.gf.dic@gmail.com"">m.a.r.t.in.jgr.ue.nb.e.r.gf.dic@gmail.com</a>
<a href=""mailto:ma.rti.njgr.u.e.n.be.rgfd.i.c@gmail.com"">ma.rti.njgr.u.e.n.be.rgfd.i.c@gmail.com</a>
<a href=""mailto:mart.in.jg.r.uenbe.r.g.fdi.c@gmail.com"">mart.in.jg.r.uenbe.r.g.fdi.c@gmail.com</a>
<a href=""mailto:m.a.r.ti.njgrue.n.b.erg.f.dic@gmail.com"">m.a.r.ti.njgrue.n.b.erg.f.dic@gmail.com</a>
<a href=""mailto:mart.i.njg.r.u.e.nb.er.g.fdic@gmail.com"">mart.i.njg.r.u.e.nb.er.g.fdic@gmail.com</a>
<a href=""mailto:m.ar.t.injgruenber.gfdi.c@gmail.com"">m.ar.t.injgruenber.gfdi.c@gmail.com</a>
<a href=""mailto:m.art.inj.gr.u.en.be.r.g.f.d.ic@gmail.com"">m.art.inj.gr.u.en.be.r.g.f.d.ic@gmail.com</a>
<a href=""mailto:m.a.rt.i.n.jgru.e.n.ber.gfdi.c@gmail.com"">m.a.rt.i.n.jgru.e.n.ber.gfdi.c@gmail.com</a>
<a href=""mailto:m.ar.t.i.nj.gr.uen.b.ergfd.ic@gmail.com"">m.ar.t.i.nj.gr.uen.b.ergfd.ic@gmail.com</a>
<a href=""mailto:m.ar.t.i.njg.r.uen.be.r.gf.d.ic@gmail.com"">m.ar.t.i.njg.r.uen.be.r.gf.d.ic@gmail.com</a>
<a href=""mailto:ma.rti.nj.g.rue.n.b.er.gf.d.ic@gmail.com"">ma.rti.nj.g.rue.n.b.er.gf.d.ic@gmail.com</a>
<a href=""mailto:m.ar.tinj.g.r.ue.n.b.e.r.g.fdic@gmail.com"">m.ar.tinj.g.r.ue.n.b.e.r.g.fdic@gmail.com</a>
<a href=""mailto:ma.r.ti.nj.g.r.u.en.b.erg.f.di.c@gmail.com"">ma.r.ti.nj.g.r.u.en.b.erg.f.di.c@gmail.com</a>
<a href=""mailto:m.arti.n.j.g.ru.e.nber.g.fd.i.c@gmail.com"">m.arti.n.j.g.ru.e.nber.g.fd.i.c@gmail.com</a>
<a href=""mailto:m.artin.j.g.ru.enb.er.gfdi.c@gmail.com"">m.artin.j.g.ru.enb.er.gfdi.c@gmail.com</a>
<a href=""mailto:ma.r.t.injgruen.be.r.gf.d.i.c@gmail.com"">ma.r.t.injgruen.be.r.gf.d.i.c@gmail.com</a>
<a href=""mailto:m.a.rtinj.g.r.u.e.n.b.ergfd.ic@gmail.com"">m.a.rtinj.g.r.u.e.n.b.ergfd.ic@gmail.com</a>
<a href=""mailto:m.ar.t.i.njg.r.u.e.n.b.er.g.f.d.ic@gmail.com"">m.ar.t.i.njg.r.u.e.n.b.er.g.f.d.ic@gmail.com</a>
<a href=""mailto:m.art.in.jgr.u.e.n.b.e.rg.fd.ic@gmail.com"">m.art.in.jgr.u.e.n.b.e.rg.fd.ic@gmail.com</a>
<a href=""mailto:marti.n.j.g.ru.e.nb.e.r.g.fdi.c@gmail.com"">marti.n.j.g.ru.e.nb.e.r.g.fdi.c@gmail.com</a>
<a href=""mailto:mar.ti.n.jg.r.uenber.gfd.i.c@gmail.com"">mar.ti.n.jg.r.uenber.gfd.i.c@gmail.com</a>
<a href=""mailto:m.artin.jgru.e.nbe.r.g.f.d.i.c@gmail.com"">m.artin.jgru.e.nbe.r.g.f.d.i.c@gmail.com</a>
<a href=""mailto:m.art.in.j.g.ru.enbe.r.g.f.dic@gmail.com"">m.art.in.j.g.ru.enbe.r.g.f.dic@gmail.com</a>
<a href=""mailto:mar.ti.njg.ru.en.ber.gfdic@gmail.com"">mar.ti.njg.ru.en.ber.gfdic@gmail.com</a>
<a href=""mailto:m.a.rt.i.n.j.g.rue.nb.e.r.gfdic@gmail.com"">m.a.rt.i.n.j.g.rue.nb.e.r.gfdic@gmail.com</a>
<a href=""mailto:m.art.i.nj.gr.u.enberg.fd.i.c@gmail.com"">m.art.i.nj.gr.u.enberg.fd.i.c@gmail.com</a>
<a href=""mailto:m.a.rt.i.n.j.g.r.u.e.nb.erg.fd.ic@gmail.com"">m.a.rt.i.n.j.g.r.u.e.nb.erg.fd.ic@gmail.com</a>
<a href=""mailto:m.ar.t.i.n.jg.rue.nb.e.r.g.f.d.i.c@gmail.com"">m.ar.t.i.n.jg.rue.nb.e.r.g.f.d.i.c@gmail.com</a>
<a href=""mailto:m.ar.t.in.jg.r.u.en.be.r.g.fdic@gmail.com"">m.ar.t.in.jg.r.u.en.be.r.g.fdic@gmail.com</a>
<a href=""mailto:m.a.r.t.i.nj.gruenbe.rg.f.dic@gmail.com"">m.a.r.t.i.nj.gruenbe.rg.f.dic@gmail.com</a>
<a href=""mailto:mart.injgru.e.nbe.rg.fdi.c@gmail.com"">mart.injgru.e.nbe.rg.fdi.c@gmail.com</a>
<a href=""mailto:m.a.rt.i.n.j.g.r.u.e.nb.erg.f.d.ic@gmail.com"">m.a.rt.i.n.j.g.r.u.e.nb.erg.f.d.ic@gmail.com</a>
<a href=""mailto:mart.in.j.g.ru.enber.gfdic@gmail.com"">mart.in.j.g.ru.enber.gfdic@gmail.com</a>
<a href=""mailto:mar.t.i.njgru.enbe.r.g.f.di.c@gmail.com"">mar.t.i.njgru.enbe.r.g.f.di.c@gmail.com</a>
<a href=""mailto:mar.tinjg.r.uenb.e.r.gfdic@gmail.com"">mar.tinjg.r.uenb.e.r.gfdic@gmail.com</a>
<a href=""mailto:martinj.g.ru.e.n.b.ergf.dic@gmail.com"">martinj.g.ru.e.n.b.ergf.dic@gmail.com</a>
<a href=""mailto:martinj.gr.ue.nb.e.r.gf.d.ic@gmail.com"">martinj.gr.ue.nb.e.r.gf.d.ic@gmail.com</a>
<a href=""mailto:mar.tinjg.r.uenb.ergf.d.i.c@gmail.com"">mar.tinjg.r.uenb.ergf.d.i.c@gmail.com</a>
<a href=""mailto:ma.r.ti.njgr.uen.b.e.rg.fdi.c@gmail.com"">ma.r.ti.njgr.uen.b.e.rg.fdi.c@gmail.com</a>
<a href=""mailto:ma.r.tinj.gru.en.ber.g.fd.i.c@gmail.com"">ma.r.tinj.gru.en.ber.g.fd.i.c@gmail.com</a>
<a href=""mailto:mar.t.i.n.jg.ruenb.e.r.g.f.dic@gmail.com"">mar.t.i.n.jg.ruenb.e.r.g.f.dic@gmail.com</a>
<a href=""mailto:m.a.r.tin.jgruen.be.r.gf.di.c@gmail.com"">m.a.r.tin.jgruen.be.r.gf.di.c@gmail.com</a>
<a href=""mailto:m.a.r.t.i.njg.r.ue.n.ber.gfd.ic@gmail.com"">m.a.r.t.i.njg.r.ue.n.ber.gfd.ic@gmail.com</a>
<a href=""mailto:mar.ti.njgr.ue.nb.e.rgfd.i.c@gmail.com"">mar.ti.njgr.ue.nb.e.rgfd.i.c@gmail.com</a>
<a href=""mailto:m.a.r.ti.n.jg.r.ue.n.b.e.r.g.f.dic@gmail.com"">m.a.r.ti.n.jg.r.ue.n.b.e.r.g.f.dic@gmail.com</a>
<a href=""mailto:mar.t.i.njg.ruen.ber.g.f.d.i.c@gmail.com"">mar.t.i.njg.ruen.ber.g.f.d.i.c@gmail.com</a>
<a href=""mailto:ma.rtinj.gruenb.ergf.dic@gmail.com"">ma.rtinj.gruenb.ergf.dic@gmail.com</a>
<a href=""mailto:m.artinj.g.ru.enb.e.rgfdi.c@gmail.com"">m.artinj.g.ru.enb.e.rgfdi.c@gmail.com</a>
<a href=""mailto:ma.r.t.in.jgruen.berg.f.d.ic@gmail.com"">ma.r.t.in.jgruen.berg.f.d.ic@gmail.com</a>
<a href=""mailto:ma.rti.njgr.uenber.g.fdi.c@gmail.com"">ma.rti.njgr.uenber.g.fdi.c@gmail.com</a>
<a href=""mailto:m.a.rt.in.j.gr.u.e.n.be.r.gf.d.ic@gmail.com"">m.a.rt.in.j.gr.u.e.n.be.r.gf.d.ic@gmail.com</a>
<a href=""mailto:m.artin.j.gr.uen.ber.gf.di.c@gmail.com"">m.artin.j.gr.uen.ber.gf.di.c@gmail.com</a>
<a href=""mailto:m.a.rt.in.j.g.r.u.en.ber.g.f.di.c@gmail.com"">m.a.rt.in.j.g.r.u.en.ber.g.f.di.c@gmail.com</a>
<a href=""mailto:m.a.rt.injgr.u.e.n.b.er.gfd.ic@gmail.com"">m.a.rt.injgr.u.e.n.b.er.gfd.ic@gmail.com</a>
<a href=""mailto:mart.i.njg.r.uen.bergfdi.c@gmail.com"">mart.i.njg.r.uen.bergfdi.c@gmail.com</a>
<a href=""mailto:m.a.r.tin.jgr.uenbe.r.g.fdic@gmail.com"">m.a.r.tin.jgr.uenbe.r.g.fdic@gmail.com</a>
<a href=""mailto:marti.nj.gr.u.en.bergf.dic@gmail.com"">marti.nj.gr.u.en.bergf.dic@gmail.com</a>
<a href=""mailto:mar.t.inj.g.r.u.e.nb.e.r.gfdic@gmail.com"">mar.t.inj.g.r.u.e.nb.e.r.gfdic@gmail.com</a>
<a href=""mailto:m.a.r.tinjg.r.u.enb.e.r.g.fdi.c@gmail.com"">m.a.r.tinjg.r.u.enb.e.r.g.fdi.c@gmail.com</a>
<a href=""mailto:m.a.r.ti.nj.gr.ue.n.ber.g.fd.i.c@gmail.com"">m.a.r.ti.nj.gr.ue.n.ber.g.fd.i.c@gmail.com</a>
<a href=""mailto:m.art.in.jgr.u.enberg.fd.ic@gmail.com"">m.art.in.jgr.u.enberg.fd.ic@gmail.com</a>
<a href=""mailto:ma.rtin.j.gr.ue.n.b.e.r.g.f.d.ic@gmail.com"">ma.rtin.j.gr.ue.n.b.e.r.g.f.d.ic@gmail.com</a>
<a href=""mailto:m.a.r.ti.nj.g.r.u.en.be.rg.f.d.ic@gmail.com"">m.a.r.ti.nj.g.r.u.en.be.rg.f.d.ic@gmail.com</a>
<a href=""mailto:m.a.rti.n.jg.r.uen.be.r.g.fd.i.c@gmail.com"">m.a.rti.n.jg.r.uen.be.r.g.fd.i.c@gmail.com</a>
<a href=""mailto:mar.t.i.n.j.g.ru.e.n.b.erg.fdic@gmail.com"">mar.t.i.n.j.g.ru.e.n.b.erg.fdic@gmail.com</a>
<a href=""mailto:ma.r.ti.njgr.ue.nbe.r.gfdi.c@gmail.com"">ma.r.ti.njgr.ue.nbe.r.gfdi.c@gmail.com</a>
<a href=""mailto:mart.in.jgru.en.be.r.gf.d.i.c@gmail.com"">mart.in.jgru.en.be.r.gf.d.i.c@gmail.com</a>
<a href=""mailto:m.ar.tin.j.gru.e.nb.er.gfdi.c@gmail.com"">m.ar.tin.j.gru.e.nb.er.gfdi.c@gmail.com</a>
<a href=""mailto:ma.r.tinjgr.ue.nberg.f.dic@gmail.com"">ma.r.tinjgr.ue.nberg.f.dic@gmail.com</a>
<a href=""mailto:ma.rt.in.j.gru.e.nb.e.r.gf.d.i.c@gmail.com"">ma.rt.in.j.gru.e.nb.e.r.gf.d.i.c@gmail.com</a>
<a href=""mailto:m.a.rti.n.j.gr.u.e.n.ber.gfd.i.c@gmail.com"">m.a.rti.n.j.gr.u.e.n.ber.gfd.i.c@gmail.com</a>
<a href=""mailto:mar.t.i.nj.gr.u.en.b.e.r.gf.dic@gmail.com"">mar.t.i.nj.gr.u.en.b.e.r.gf.dic@gmail.com</a>
<a href=""mailto:ma.r.t.in.jgr.uen.ber.g.fd.i.c@gmail.com"">ma.r.t.in.jgr.uen.ber.g.fd.i.c@gmail.com</a>
<a href=""mailto:m.a.rtin.jg.r.uenberg.fdic@gmail.com"">m.a.rtin.jg.r.uenberg.fdic@gmail.com</a>
<a href=""mailto:m.a.rtin.jgr.uen.b.e.rgfdi.c@gmail.com"">m.a.rtin.jgr.uen.b.e.rgfdi.c@gmail.com</a>
<a href=""mailto:m.a.rt.injg.r.u.e.nb.e.rgf.d.ic@gmail.com"">m.a.rt.injg.r.u.e.nb.e.rgf.d.ic@gmail.com</a>
<a href=""mailto:m.a.r.t.i.njg.rue.nbe.r.g.f.dic@gmail.com"">m.a.r.t.i.njg.rue.nbe.r.g.f.dic@gmail.com</a>
<a href=""mailto:m.ar.tinjgru.enb.e.rg.fdic@gmail.com"">m.ar.tinjgru.enb.e.rg.fdic@gmail.com</a>
<a href=""mailto:mar.t.inj.gr.u.en.b.ergfdic@gmail.com"">mar.t.inj.gr.u.en.b.ergfdic@gmail.com</a>
<a href=""mailto:m.art.injgrue.n.b.e.rgf.d.i.c@gmail.com"">m.art.injgrue.n.b.e.rgf.d.i.c@gmail.com</a>
<a href=""mailto:m.a.r.tin.j.g.ru.e.nberg.fdic@gmail.com"">m.a.r.tin.j.g.ru.e.nberg.fdic@gmail.com</a>
<a href=""mailto:m.a.r.ti.nj.gr.u.e.nberg.fd.ic@gmail.com"">m.a.r.ti.nj.gr.u.e.nberg.fd.ic@gmail.com</a>
<a href=""mailto:m.art.i.n.jgrue.nber.g.fd.i.c@gmail.com"">m.art.i.n.jgrue.nber.g.fd.i.c@gmail.com</a>
<a href=""mailto:m.art.i.n.j.gr.ue.n.b.erg.fd.ic@gmail.com"">m.art.i.n.j.gr.ue.n.b.erg.fd.ic@gmail.com</a>
<a href=""mailto:ma.r.tinj.gruen.b.erg.fdic@gmail.com"">ma.r.tinj.gruen.b.erg.fdic@gmail.com</a>
<a href=""mailto:m.arti.n.j.g.r.uenb.erg.fdi.c@gmail.com"">m.arti.n.j.g.r.uenb.erg.fdi.c@gmail.com</a>
<a href=""mailto:m.a.r.t.i.n.jg.rue.nb.e.r.g.fdi.c@gmail.com"">m.a.r.t.i.n.jg.rue.nb.e.r.g.fdi.c@gmail.com</a>
<a href=""mailto:ma.r.ti.njgr.u.e.n.be.r.g.f.d.ic@gmail.com"">ma.r.ti.njgr.u.e.n.be.r.g.f.d.ic@gmail.com</a>
<a href=""mailto:m.a.rt.i.n.jg.r.u.en.b.e.r.g.f.d.ic@gmail.com"">m.a.rt.i.n.jg.r.u.en.b.e.r.g.f.d.ic@gmail.com</a>
<a href=""mailto:mart.i.njg.r.u.e.nbe.rgf.di.c@gmail.com"">mart.i.njg.r.u.e.nbe.rgf.di.c@gmail.com</a>
<a href=""mailto:mar.t.injg.ruen.b.e.rgf.dic@gmail.com"">mar.t.injg.ruen.b.e.rgf.dic@gmail.com</a>
<a href=""mailto:ma.r.tinjg.rue.n.be.r.gfd.i.c@gmail.com"">ma.r.tinjg.rue.n.be.r.gfd.i.c@gmail.com</a>
<a href=""mailto:m.a.r.t.in.j.g.r.u.en.be.r.g.f.d.i.c@gmail.com"">m.a.r.t.in.j.g.r.u.en.be.r.g.f.d.i.c@gmail.com</a>
<a href=""mailto:paulphuong067@gmail.com"">paulphuong067@gmail.com</a>
<a href=""mailto:p.aul.p.h.u.o.ng06.7@gmail.com"">p.aul.p.h.u.o.ng06.7@gmail.com</a>
<a href=""mailto:paulp.hu.on.g.06.7@gmail.com"">paulp.hu.on.g.06.7@gmail.com</a>
<a href=""mailto:p.a.ulphu.o.n.g.067@gmail.com"">p.a.ulphu.o.n.g.067@gmail.com</a>
<a href=""mailto:pa.u.lphu.o.n.g0.6.7@gmail.com"">pa.u.lphu.o.n.g0.6.7@gmail.com</a>
<a href=""mailto:pau.l.ph.uo.ng06.7@gmail.com"">pau.l.ph.uo.ng06.7@gmail.com</a>
<a href=""mailto:paul.p.h.u.o.ng.06.7@gmail.com"">paul.p.h.u.o.ng.06.7@gmail.com</a>
<a href=""mailto:pau.lph.uo.n.g067@gmail.com"">pau.lph.uo.n.g067@gmail.com</a>
<a href=""mailto:pa.ul.p.h.uo.n.g.0.67@gmail.com"">pa.ul.p.h.uo.n.g.0.67@gmail.com</a>
<a href=""mailto:pa.u.l.ph.u.ong.067@gmail.com"">pa.u.l.ph.u.ong.067@gmail.com</a>
<a href=""mailto:pau.lphu.o.n.g0.6.7@gmail.com"">pau.lphu.o.n.g0.6.7@gmail.com</a>
<a href=""mailto:p.a.u.l.ph.uo.ng.0.67@gmail.com"">p.a.u.l.ph.uo.ng.0.67@gmail.com</a>
<a href=""mailto:pa.u.lph.uo.ng.06.7@gmail.com"">pa.u.lph.uo.ng.06.7@gmail.com</a>
<a href=""mailto:pau.lp.h.u.o.n.g.06.7@gmail.com"">pau.lp.h.u.o.n.g.06.7@gmail.com</a>
<a href=""mailto:pa.u.lphuon.g.0.67@gmail.com"">pa.u.lphuon.g.0.67@gmail.com</a>
<a href=""mailto:p.aul.phu.on.g06.7@gmail.com"">p.aul.phu.on.g06.7@gmail.com</a>
<a href=""mailto:p.aul.p.h.uo.n.g.0.67@gmail.com"">p.aul.p.h.uo.n.g.0.67@gmail.com</a>
<a href=""mailto:pa.u.lphuo.n.g0.6.7@gmail.com"">pa.u.lphuo.n.g0.6.7@gmail.com</a>
<a href=""mailto:pa.u.lp.hu.on.g.0.6.7@gmail.com"">pa.u.lp.hu.on.g.0.6.7@gmail.com</a>
<a href=""mailto:pa.ul.p.hu.o.n.g.067@gmail.com"">pa.ul.p.hu.o.n.g.067@gmail.com</a>
<a href=""mailto:pau.l.p.hu.ong06.7@gmail.com"">pau.l.p.hu.ong06.7@gmail.com</a>
<a href=""mailto:pa.u.l.ph.uong0.6.7@gmail.com"">pa.u.l.ph.uong0.6.7@gmail.com</a>
<a href=""mailto:paul.phuon.g0.6.7@gmail.com"">paul.phuon.g0.6.7@gmail.com</a>
<a href=""mailto:p.aulphu.ong.0.67@gmail.com"">p.aulphu.ong.0.67@gmail.com</a>
<a href=""mailto:paul.p.huo.n.g0.6.7@gmail.com"">paul.p.huo.n.g0.6.7@gmail.com</a>
<a href=""mailto:p.au.lp.h.u.o.n.g.06.7@gmail.com"">p.au.lp.h.u.o.n.g.06.7@gmail.com</a>
<a href=""mailto:p.a.u.l.ph.u.o.n.g0.67@gmail.com"">p.a.u.l.ph.u.o.n.g0.67@gmail.com</a>
<a href=""mailto:pa.ul.p.h.u.o.ng0.6.7@gmail.com"">pa.ul.p.h.u.o.ng0.6.7@gmail.com</a>
<a href=""mailto:p.aul.phu.o.ng.0.6.7@gmail.com"">p.aul.phu.o.ng.0.6.7@gmail.com</a>
<a href=""mailto:pau.lphu.o.ng.0.67@gmail.com"">pau.lphu.o.ng.0.67@gmail.com</a>
<a href=""mailto:paul.ph.uong.0.6.7@gmail.com"">paul.ph.uong.0.6.7@gmail.com</a>
<a href=""mailto:paulp.hu.on.g067@gmail.com"">paulp.hu.on.g067@gmail.com</a>
<a href=""mailto:p.a.ulph.uon.g067@gmail.com"">p.a.ulph.uon.g067@gmail.com</a>
<a href=""mailto:p.aul.ph.uong.0.67@gmail.com"">p.aul.ph.uong.0.67@gmail.com</a>
<a href=""mailto:p.au.l.p.hu.on.g.06.7@gmail.com"">p.au.l.p.hu.on.g.06.7@gmail.com</a>
<a href=""mailto:p.aul.p.h.uo.n.g06.7@gmail.com"">p.aul.p.h.uo.n.g06.7@gmail.com</a>
<a href=""mailto:p.a.u.l.phu.ong.067@gmail.com"">p.a.u.l.phu.ong.067@gmail.com</a>
<a href=""mailto:p.a.u.l.p.hu.o.n.g.06.7@gmail.com"">p.a.u.l.p.hu.o.n.g.06.7@gmail.com</a>
<a href=""mailto:p.au.lp.h.u.ong.067@gmail.com"">p.au.lp.h.u.ong.067@gmail.com</a>
<a href=""mailto:p.a.u.lphu.o.n.g.0.67@gmail.com"">p.a.u.lphu.o.n.g.0.67@gmail.com</a>
<a href=""mailto:pau.lph.u.ong.067@gmail.com"">pau.lph.u.ong.067@gmail.com</a>
<a href=""mailto:p.a.u.l.phu.o.ng06.7@gmail.com"">p.a.u.l.phu.o.ng06.7@gmail.com</a>
<a href=""mailto:pa.u.lp.hu.on.g.06.7@gmail.com"">pa.u.lp.hu.on.g.06.7@gmail.com</a>
<a href=""mailto:pa.ul.phuo.ng.0.6.7@gmail.com"">pa.ul.phuo.ng.0.6.7@gmail.com</a>
<a href=""mailto:pa.ulph.u.o.n.g.0.6.7@gmail.com"">pa.ulph.u.o.n.g.0.6.7@gmail.com</a>
<a href=""mailto:p.a.u.lph.u.ong.0.6.7@gmail.com"">p.a.u.lph.u.ong.0.6.7@gmail.com</a>
<a href=""mailto:pa.ulp.h.uo.n.g067@gmail.com"">pa.ulp.h.uo.n.g067@gmail.com</a>
<a href=""mailto:pa.u.l.phuo.ng06.7@gmail.com"">pa.u.l.phuo.ng06.7@gmail.com</a>
<a href=""mailto:paulph.u.ong0.6.7@gmail.com"">paulph.u.ong0.6.7@gmail.com</a>
<a href=""mailto:p.au.l.p.huo.ng.0.67@gmail.com"">p.au.l.p.huo.ng.0.67@gmail.com</a>
<a href=""mailto:paul.p.h.uo.ng067@gmail.com"">paul.p.h.uo.ng067@gmail.com</a>
<a href=""mailto:p.a.u.lp.h.u.o.ng.0.6.7@gmail.com"">p.a.u.lp.h.u.o.ng.0.6.7@gmail.com</a>
<a href=""mailto:p.aul.ph.u.ong.0.67@gmail.com"">p.aul.ph.u.ong.0.67@gmail.com</a>
<a href=""mailto:pa.ul.p.h.uon.g.0.6.7@gmail.com"">pa.ul.p.h.uon.g.0.6.7@gmail.com</a>
<a href=""mailto:paul.p.h.uong067@gmail.com"">paul.p.h.uong067@gmail.com</a>
<a href=""mailto:paulp.hu.ong06.7@gmail.com"">paulp.hu.ong06.7@gmail.com</a>
<a href=""mailto:paulph.uong.0.67@gmail.com"">paulph.uong.0.67@gmail.com</a>
<a href=""mailto:pau.lphuo.n.g0.67@gmail.com"">pau.lphuo.n.g0.67@gmail.com</a>
<a href=""mailto:pau.l.p.h.uo.ng.067@gmail.com"">pau.l.p.h.uo.ng.067@gmail.com</a>
<a href=""mailto:p.aulphu.on.g.0.6.7@gmail.com"">p.aulphu.on.g.0.6.7@gmail.com</a>
<a href=""mailto:p.aulp.hu.ong.067@gmail.com"">p.aulp.hu.ong.067@gmail.com</a>
<a href=""mailto:pa.ulphuong0.6.7@gmail.com"">pa.ulphuong0.6.7@gmail.com</a>
<a href=""mailto:p.au.l.p.h.uo.ng06.7@gmail.com"">p.au.l.p.h.uo.ng06.7@gmail.com</a>
<a href=""mailto:pa.u.lp.huon.g067@gmail.com"">pa.u.lp.huon.g067@gmail.com</a>
<a href=""mailto:pa.ul.phuo.ng.067@gmail.com"">pa.ul.phuo.ng.067@gmail.com</a>
<a href=""mailto:pau.l.ph.uo.n.g.0.67@gmail.com"">pau.l.ph.uo.n.g.0.67@gmail.com</a>
<a href=""mailto:p.aul.p.h.u.o.ng.067@gmail.com"">p.aul.p.h.u.o.ng.067@gmail.com</a>
<a href=""mailto:pa.u.l.ph.u.on.g0.67@gmail.com"">pa.u.l.ph.u.on.g0.67@gmail.com</a>
<a href=""mailto:paulp.h.u.ong06.7@gmail.com"">paulp.h.u.ong06.7@gmail.com</a>
<a href=""mailto:pa.ul.p.hu.ong067@gmail.com"">pa.ul.p.hu.ong067@gmail.com</a>
<a href=""mailto:pau.lph.u.ong06.7@gmail.com"">pau.lph.u.ong06.7@gmail.com</a>
<a href=""mailto:pau.lphu.on.g0.67@gmail.com"">pau.lphu.on.g0.67@gmail.com</a>
<a href=""mailto:pau.l.p.h.uo.n.g06.7@gmail.com"">pau.l.p.h.uo.n.g06.7@gmail.com</a>
<a href=""mailto:pau.l.ph.u.o.ng067@gmail.com"">pau.l.ph.u.o.ng067@gmail.com</a>
<a href=""mailto:p.aulphuo.ng.0.67@gmail.com"">p.aulphuo.ng.0.67@gmail.com</a>
<a href=""mailto:p.au.lphuo.n.g.067@gmail.com"">p.au.lphuo.n.g.067@gmail.com</a>
<a href=""mailto:p.a.u.l.phu.on.g067@gmail.com"">p.a.u.l.phu.on.g067@gmail.com</a>
<a href=""mailto:pau.lp.hu.ong0.6.7@gmail.com"">pau.lp.hu.ong0.6.7@gmail.com</a>
<a href=""mailto:p.a.u.lp.hu.o.n.g0.6.7@gmail.com"">p.a.u.lp.hu.o.n.g0.6.7@gmail.com</a>
<a href=""mailto:pa.u.lph.uong067@gmail.com"">pa.u.lph.uong067@gmail.com</a>
<a href=""mailto:pa.u.lphuo.ng0.6.7@gmail.com"">pa.u.lphuo.ng0.6.7@gmail.com</a>
<a href=""mailto:paul.phu.o.ng.0.6.7@gmail.com"">paul.phu.o.ng.0.6.7@gmail.com</a>
<a href=""mailto:p.au.lp.hu.o.ng.06.7@gmail.com"">p.au.lp.hu.o.ng.06.7@gmail.com</a>
<a href=""mailto:pau.lph.uo.n.g.06.7@gmail.com"">pau.lph.uo.n.g.06.7@gmail.com</a>
<a href=""mailto:pau.l.p.huong0.67@gmail.com"">pau.l.p.huong0.67@gmail.com</a>
<a href=""mailto:p.a.u.lphuon.g.0.67@gmail.com"">p.a.u.lphuon.g.0.67@gmail.com</a>
<a href=""mailto:pa.u.lphu.ong06.7@gmail.com"">pa.u.lphu.ong06.7@gmail.com</a>
<a href=""mailto:pa.ul.ph.u.o.n.g0.67@gmail.com"">pa.ul.ph.u.o.n.g0.67@gmail.com</a>
<a href=""mailto:p.a.ul.p.h.u.on.g067@gmail.com"">p.a.ul.p.h.u.on.g067@gmail.com</a>
<a href=""mailto:p.au.l.phuo.n.g067@gmail.com"">p.au.l.phuo.n.g067@gmail.com</a>
<a href=""mailto:p.au.l.p.huo.n.g.067@gmail.com"">p.au.l.p.huo.n.g.067@gmail.com</a>
<a href=""mailto:pa.ulp.huon.g.067@gmail.com"">pa.ulp.huon.g.067@gmail.com</a>
<a href=""mailto:p.a.u.l.phu.o.ng.0.6.7@gmail.com"">p.a.u.l.phu.o.ng.0.6.7@gmail.com</a>
<a href=""mailto:pa.ulp.h.u.o.n.g.0.6.7@gmail.com"">pa.ulp.h.u.o.n.g.0.6.7@gmail.com</a>
<a href=""mailto:p.au.lp.hu.o.n.g.06.7@gmail.com"">p.au.lp.hu.o.n.g.06.7@gmail.com</a>
<a href=""mailto:p.a.u.lph.uo.n.g067@gmail.com"">p.a.u.lph.uo.n.g067@gmail.com</a>
<a href=""mailto:pa.u.lp.hu.o.n.g067@gmail.com"">pa.u.lp.hu.o.n.g067@gmail.com</a>
<a href=""mailto:p.a.u.l.p.hu.on.g067@gmail.com"">p.a.u.l.p.hu.on.g067@gmail.com</a>
<a href=""mailto:paulp.hu.o.n.g.0.6.7@gmail.com"">paulp.hu.o.n.g.0.6.7@gmail.com</a>
<a href=""mailto:p.a.ul.phuo.n.g06.7@gmail.com"">p.a.ul.phuo.n.g06.7@gmail.com</a>
<a href=""mailto:p.au.lphu.o.ng.0.6.7@gmail.com"">p.au.lphu.o.ng.0.6.7@gmail.com</a>
<a href=""mailto:pau.lp.h.u.on.g0.6.7@gmail.com"">pau.lp.h.u.on.g0.6.7@gmail.com</a>
<a href=""mailto:pau.l.p.h.uo.ng.0.6.7@gmail.com"">pau.l.p.h.uo.ng.0.6.7@gmail.com</a>
<a href=""mailto:paulph.uo.ng.0.6.7@gmail.com"">paulph.uo.ng.0.6.7@gmail.com</a>
<a href=""mailto:pa.u.lphu.o.n.g.0.67@gmail.com"">pa.u.lphu.o.n.g.0.67@gmail.com</a>
<a href=""mailto:pau.lphu.o.ng.06.7@gmail.com"">pau.lphu.o.ng.06.7@gmail.com</a>
<a href=""mailto:pau.lph.u.ong0.67@gmail.com"">pau.lph.u.ong0.67@gmail.com</a>
<a href=""mailto:p.a.u.l.ph.uo.n.g.067@gmail.com"">p.a.u.l.ph.uo.n.g.067@gmail.com</a>
<a href=""mailto:p.aul.p.hu.o.ng.0.6.7@gmail.com"">p.aul.p.hu.o.ng.0.6.7@gmail.com</a>
<a href=""mailto:p.a.ulphu.on.g.067@gmail.com"">p.a.ulphu.on.g.067@gmail.com</a>
<a href=""mailto:pa.u.lp.hu.o.n.g.06.7@gmail.com"">pa.u.lp.hu.o.n.g.06.7@gmail.com</a>
<a href=""mailto:pau.lph.u.o.n.g.067@gmail.com"">pau.lph.u.o.n.g.067@gmail.com</a>
<a href=""mailto:p.au.l.phuo.ng0.6.7@gmail.com"">p.au.l.phuo.ng0.6.7@gmail.com</a>
<a href=""mailto:pau.l.p.huon.g.0.6.7@gmail.com"">pau.l.p.huon.g.0.6.7@gmail.com</a>
<a href=""mailto:p.a.ul.ph.u.o.ng.0.6.7@gmail.com"">p.a.ul.ph.u.o.ng.0.6.7@gmail.com</a>
<a href=""mailto:pau.l.p.hu.on.g.06.7@gmail.com"">pau.l.p.hu.on.g.06.7@gmail.com</a>
<a href=""mailto:paulp.h.uon.g.0.6.7@gmail.com"">paulp.h.uon.g.0.6.7@gmail.com</a>
<a href=""mailto:p.a.u.lp.h.u.on.g.0.6.7@gmail.com"">p.a.u.lp.h.u.on.g.0.6.7@gmail.com</a>
<a href=""mailto:p.aulp.h.uo.n.g067@gmail.com"">p.aulp.h.uo.n.g067@gmail.com</a>
<a href=""mailto:p.a.u.lp.huong0.6.7@gmail.com"">p.a.u.lp.huong0.6.7@gmail.com</a>
<a href=""mailto:p.a.u.lp.hu.o.ng067@gmail.com"">p.a.u.lp.hu.o.ng067@gmail.com</a>
<a href=""mailto:p.aulphuo.n.g067@gmail.com"">p.aulphuo.n.g067@gmail.com</a>
<a href=""mailto:paulphu.ong0.6.7@gmail.com"">paulphu.ong0.6.7@gmail.com</a>
<a href=""mailto:pau.lp.huon.g06.7@gmail.com"">pau.lp.huon.g06.7@gmail.com</a>
<a href=""mailto:paul.p.hu.ong06.7@gmail.com"">paul.p.hu.ong06.7@gmail.com</a>
<a href=""mailto:pau.l.phuo.ng.0.67@gmail.com"">pau.l.phuo.ng.0.67@gmail.com</a>
<a href=""mailto:paul.p.hu.o.n.g0.67@gmail.com"">paul.p.hu.o.n.g0.67@gmail.com</a>
<a href=""mailto:p.au.lp.hu.o.ng.067@gmail.com"">p.au.lp.hu.o.ng.067@gmail.com</a>
<a href=""mailto:pau.lphuo.ng.0.67@gmail.com"">pau.lphuo.ng.0.67@gmail.com</a>
<a href=""mailto:pa.u.l.p.h.u.on.g06.7@gmail.com"">pa.u.l.p.h.u.on.g06.7@gmail.com</a>
<a href=""mailto:pau.l.p.h.u.o.n.g0.6.7@gmail.com"">pau.l.p.h.u.o.n.g0.6.7@gmail.com</a>
<a href=""mailto:paulp.hu.o.ng.0.67@gmail.com"">paulp.hu.o.ng.0.67@gmail.com</a>
<a href=""mailto:pa.u.lph.u.o.ng0.67@gmail.com"">pa.u.lph.u.o.ng0.67@gmail.com</a>
<a href=""mailto:pa.u.l.ph.u.o.ng.067@gmail.com"">pa.u.l.ph.u.o.ng.067@gmail.com</a>
<a href=""mailto:paulphuo.ng.0.67@gmail.com"">paulphuo.ng.0.67@gmail.com</a>
<a href=""mailto:pau.l.p.h.uo.n.g0.6.7@gmail.com"">pau.l.p.h.uo.n.g0.6.7@gmail.com</a>
<a href=""mailto:p.au.l.ph.uong067@gmail.com"">p.au.l.ph.uong067@gmail.com</a>
<a href=""mailto:p.aulp.h.u.o.ng06.7@gmail.com"">p.aulp.h.u.o.ng06.7@gmail.com</a>
<a href=""mailto:pa.ulph.uo.n.g06.7@gmail.com"">pa.ulph.uo.n.g06.7@gmail.com</a>
<a href=""mailto:pau.lph.uo.n.g0.6.7@gmail.com"">pau.lph.uo.n.g0.6.7@gmail.com</a>
<a href=""mailto:p.a.ulp.huon.g0.6.7@gmail.com"">p.a.ulp.huon.g0.6.7@gmail.com</a>
<a href=""mailto:p.au.lph.uo.n.g.067@gmail.com"">p.au.lph.uo.n.g.067@gmail.com</a>
<a href=""mailto:p.aul.p.huong.06.7@gmail.com"">p.aul.p.huong.06.7@gmail.com</a>
<a href=""mailto:p.aulph.u.ong.06.7@gmail.com"">p.aulph.u.ong.06.7@gmail.com</a>
<a href=""mailto:p.a.ul.p.hu.o.ng.06.7@gmail.com"">p.a.ul.p.hu.o.ng.06.7@gmail.com</a>
<a href=""mailto:p.a.u.l.phu.o.ng0.6.7@gmail.com"">p.a.u.l.phu.o.ng0.6.7@gmail.com</a>
<a href=""mailto:pau.l.ph.u.o.n.g.0.6.7@gmail.com"">pau.l.ph.u.o.n.g.0.6.7@gmail.com</a>
<a href=""mailto:pau.lph.u.o.ng.0.6.7@gmail.com"">pau.lph.u.o.ng.0.6.7@gmail.com</a>
<a href=""mailto:p.a.ul.phuo.n.g0.67@gmail.com"">p.a.ul.phuo.n.g0.67@gmail.com</a>
<a href=""mailto:pau.lp.h.uong0.6.7@gmail.com"">pau.lp.h.uong0.6.7@gmail.com</a>
<a href=""mailto:p.a.ulph.uo.n.g067@gmail.com"">p.a.ulph.uo.n.g067@gmail.com</a>
<a href=""mailto:p.a.ul.p.hu.o.ng.067@gmail.com"">p.a.ul.p.hu.o.ng.067@gmail.com</a>
<a href=""mailto:p.a.ul.p.h.u.o.ng06.7@gmail.com"">p.a.ul.p.h.u.o.ng06.7@gmail.com</a>
<a href=""mailto:p.a.ulp.hu.o.n.g.067@gmail.com"">p.a.ulp.hu.o.n.g.067@gmail.com</a>
<a href=""mailto:pa.u.l.p.h.u.o.ng.067@gmail.com"">pa.u.l.p.h.u.o.ng.067@gmail.com</a>
<a href=""mailto:p.a.ul.phuong06.7@gmail.com"">p.a.ul.phuong06.7@gmail.com</a>
<a href=""mailto:p.a.ulp.h.uon.g0.6.7@gmail.com"">p.a.ulp.h.uon.g0.6.7@gmail.com</a>
<a href=""mailto:pau.l.ph.u.on.g.0.67@gmail.com"">pau.l.ph.u.on.g.0.67@gmail.com</a>
<a href=""mailto:p.a.u.l.phuo.ng.06.7@gmail.com"">p.a.u.l.phuo.ng.06.7@gmail.com</a>
<a href=""mailto:p.au.lp.h.uon.g.0.67@gmail.com"">p.au.lp.h.uon.g.0.67@gmail.com</a>
<a href=""mailto:pa.u.lp.huong06.7@gmail.com"">pa.u.lp.huong06.7@gmail.com</a>
<a href=""mailto:pau.l.p.h.uong06.7@gmail.com"">pau.l.p.h.uong06.7@gmail.com</a>
<a href=""mailto:pa.ul.p.h.uon.g0.6.7@gmail.com"">pa.ul.p.h.uon.g0.6.7@gmail.com</a>
<a href=""mailto:pau.l.ph.u.o.n.g.067@gmail.com"">pau.l.ph.u.o.n.g.067@gmail.com</a>
<a href=""mailto:p.au.lph.u.ong.0.6.7@gmail.com"">p.au.lph.u.ong.0.6.7@gmail.com</a>
<a href=""mailto:p.a.u.lph.uon.g06.7@gmail.com"">p.a.u.lph.uon.g06.7@gmail.com</a>
<a href=""mailto:paul.p.h.uo.n.g0.67@gmail.com"">paul.p.h.uo.n.g0.67@gmail.com</a>
<a href=""mailto:pau.lph.u.on.g0.67@gmail.com"">pau.lph.u.on.g0.67@gmail.com</a>
<a href=""mailto:p.a.ulp.h.uon.g.0.67@gmail.com"">p.a.ulp.h.uon.g.0.67@gmail.com</a>
<a href=""mailto:p.a.u.lp.h.uo.n.g.067@gmail.com"">p.a.u.lp.h.uo.n.g.067@gmail.com</a>
<a href=""mailto:p.aul.p.huo.ng0.6.7@gmail.com"">p.aul.p.huo.ng0.6.7@gmail.com</a>
<a href=""mailto:p.a.ul.ph.u.o.ng.0.67@gmail.com"">p.a.ul.ph.u.o.ng.0.67@gmail.com</a>
<a href=""mailto:p.a.u.l.ph.uo.ng.0.6.7@gmail.com"">p.a.u.l.ph.uo.ng.0.6.7@gmail.com</a>
<a href=""mailto:p.aulph.uon.g0.6.7@gmail.com"">p.aulph.uon.g0.6.7@gmail.com</a>
<a href=""mailto:pa.u.lp.h.uong.067@gmail.com"">pa.u.lp.h.uong.067@gmail.com</a>
<a href=""mailto:pa.u.l.p.hu.on.g.067@gmail.com"">pa.u.l.p.hu.on.g.067@gmail.com</a>
<a href=""mailto:p.aul.phu.on.g.06.7@gmail.com"">p.aul.phu.on.g.06.7@gmail.com</a>
<a href=""mailto:pa.u.lp.h.uon.g06.7@gmail.com"">pa.u.lp.h.uon.g06.7@gmail.com</a>
<a href=""mailto:p.a.ulph.uo.ng.0.67@gmail.com"">p.a.ulph.uo.ng.0.67@gmail.com</a>
<a href=""mailto:pa.u.l.p.huong.0.67@gmail.com"">pa.u.l.p.huong.0.67@gmail.com</a>
<a href=""mailto:p.aulp.huong067@gmail.com"">p.aulp.huong067@gmail.com</a>
<a href=""mailto:p.a.ul.p.huong.0.67@gmail.com"">p.a.ul.p.huong.0.67@gmail.com</a>
<a href=""mailto:paul.phu.o.n.g.067@gmail.com"">paul.phu.o.n.g.067@gmail.com</a>
<a href=""mailto:pa.ulphuon.g.0.67@gmail.com"">pa.ulphuon.g.0.67@gmail.com</a>
<a href=""mailto:p.au.l.p.hu.on.g.067@gmail.com"">p.au.l.p.hu.on.g.067@gmail.com</a>
<a href=""mailto:p.au.l.phu.o.n.g0.67@gmail.com"">p.au.l.phu.o.n.g0.67@gmail.com</a>
<a href=""mailto:pa.u.lp.h.uo.n.g06.7@gmail.com"">pa.u.lp.h.uo.n.g06.7@gmail.com</a>
<a href=""mailto:p.aul.ph.u.o.ng067@gmail.com"">p.aul.ph.u.o.ng067@gmail.com</a>
<a href=""mailto:p.a.u.lp.hu.on.g0.67@gmail.com"">p.a.u.lp.hu.on.g0.67@gmail.com</a>
<a href=""mailto:pau.l.p.hu.o.ng067@gmail.com"">pau.l.p.hu.o.ng067@gmail.com</a>
<a href=""mailto:pa.u.l.p.h.uong.0.6.7@gmail.com"">pa.u.l.p.h.uong.0.6.7@gmail.com</a>
<a href=""mailto:p.aulph.uo.ng.067@gmail.com"">p.aulph.uo.ng.067@gmail.com</a>
<a href=""mailto:p.a.ul.p.huo.ng06.7@gmail.com"">p.a.ul.p.huo.ng06.7@gmail.com</a>
<a href=""mailto:pa.ul.ph.uon.g06.7@gmail.com"">pa.ul.ph.uon.g06.7@gmail.com</a>
<a href=""mailto:p.a.ul.phu.o.n.g.067@gmail.com"">p.a.ul.phu.o.n.g.067@gmail.com</a>
<a href=""mailto:pa.ul.phu.on.g0.6.7@gmail.com"">pa.ul.phu.on.g0.6.7@gmail.com</a>
<a href=""mailto:p.au.l.ph.uo.n.g0.67@gmail.com"">p.au.l.ph.uo.n.g0.67@gmail.com</a>
<a href=""mailto:paul.phu.on.g.06.7@gmail.com"">paul.phu.on.g.06.7@gmail.com</a>
<a href=""mailto:p.aulp.h.uo.ng067@gmail.com"">p.aulp.h.uo.ng067@gmail.com</a>
<a href=""mailto:p.a.u.l.phu.o.n.g.06.7@gmail.com"">p.a.u.l.phu.o.n.g.06.7@gmail.com</a>
<a href=""mailto:p.au.l.p.h.uo.n.g.0.6.7@gmail.com"">p.au.l.p.h.uo.n.g.0.6.7@gmail.com</a>
<a href=""mailto:gruenbergmartinj@gmail.com"">gruenbergmartinj@gmail.com</a>
<a href=""mailto:gru.en.b.er.gm.a.rt.in.j@gmail.com"">gru.en.b.er.gm.a.rt.in.j@gmail.com</a>
<a href=""mailto:gr.u.enb.e.rgma.rt.i.nj@gmail.com"">gr.u.enb.e.rgma.rt.i.nj@gmail.com</a>
<a href=""mailto:g.r.u.e.nber.gm.artinj@gmail.com"">g.r.u.e.nber.gm.artinj@gmail.com</a>
<a href=""mailto:g.ru.en.b.erg.ma.r.t.in.j@gmail.com"">g.ru.en.b.erg.ma.r.t.in.j@gmail.com</a>
<a href=""mailto:g.r.uenbe.rg.m.art.in.j@gmail.com"">g.r.uenbe.rg.m.art.in.j@gmail.com</a>
<a href=""mailto:gr.ue.n.b.e.r.g.m.a.rti.nj@gmail.com"">gr.ue.n.b.e.r.g.m.a.rti.nj@gmail.com</a>
<a href=""mailto:gru.e.nb.e.r.g.m.a.r.tin.j@gmail.com"">gru.e.nb.e.r.g.m.a.r.tin.j@gmail.com</a>
<a href=""mailto:gr.u.enbe.r.g.m.art.i.n.j@gmail.com"">gr.u.enbe.r.g.m.art.i.n.j@gmail.com</a>
<a href=""mailto:gr.u.en.b.e.r.g.mar.t.i.nj@gmail.com"">gr.u.en.b.e.r.g.mar.t.i.nj@gmail.com</a>
<a href=""mailto:gr.ue.nb.er.g.mar.ti.n.j@gmail.com"">gr.ue.nb.er.g.mar.ti.n.j@gmail.com</a>
<a href=""mailto:g.r.uen.berg.ma.rti.n.j@gmail.com"">g.r.uen.berg.ma.rti.n.j@gmail.com</a>
<a href=""mailto:gr.u.e.nbe.rg.mar.ti.n.j@gmail.com"">gr.u.e.nbe.rg.mar.ti.n.j@gmail.com</a>
<a href=""mailto:g.r.u.en.b.e.rgma.r.tinj@gmail.com"">g.r.u.en.b.e.rgma.r.tinj@gmail.com</a>
<a href=""mailto:gru.enb.er.g.m.art.in.j@gmail.com"">gru.enb.er.g.m.art.in.j@gmail.com</a>
<a href=""mailto:g.ru.e.n.b.e.rg.mar.t.i.n.j@gmail.com"">g.ru.e.n.b.e.rg.mar.t.i.n.j@gmail.com</a>
<a href=""mailto:g.ruenb.e.r.gmar.ti.n.j@gmail.com"">g.ruenb.e.r.gmar.ti.n.j@gmail.com</a>
<a href=""mailto:g.ru.e.n.b.e.rgma.r.ti.nj@gmail.com"">g.ru.e.n.b.e.rgma.r.ti.nj@gmail.com</a>
<a href=""mailto:g.r.ue.n.b.ergm.a.rtinj@gmail.com"">g.r.ue.n.b.ergm.a.rtinj@gmail.com</a>
<a href=""mailto:g.ru.e.nb.e.rgm.art.i.nj@gmail.com"">g.ru.e.nb.e.rgm.art.i.nj@gmail.com</a>
<a href=""mailto:gr.ue.nb.e.rgmartin.j@gmail.com"">gr.ue.nb.e.rgmartin.j@gmail.com</a>
<a href=""mailto:gr.uen.b.e.r.gm.a.r.tinj@gmail.com"">gr.uen.b.e.r.gm.a.r.tinj@gmail.com</a>
<a href=""mailto:g.ru.en.ber.g.marti.nj@gmail.com"">g.ru.en.ber.g.marti.nj@gmail.com</a>
<a href=""mailto:g.ru.en.bergma.r.tin.j@gmail.com"">g.ru.en.bergma.r.tin.j@gmail.com</a>
<a href=""mailto:gru.e.n.be.r.g.ma.rt.i.n.j@gmail.com"">gru.e.n.be.r.g.ma.rt.i.n.j@gmail.com</a>
<a href=""mailto:gr.uen.b.e.r.g.m.arti.n.j@gmail.com"">gr.uen.b.e.r.g.m.arti.n.j@gmail.com</a>
<a href=""mailto:grue.n.berg.ma.r.tin.j@gmail.com"">grue.n.berg.ma.r.tin.j@gmail.com</a>
<a href=""mailto:gruen.b.e.r.g.m.ar.tin.j@gmail.com"">gruen.b.e.r.g.m.ar.tin.j@gmail.com</a>
<a href=""mailto:g.r.ue.nbe.rg.m.a.r.tin.j@gmail.com"">g.r.ue.nbe.rg.m.a.r.tin.j@gmail.com</a>
<a href=""mailto:gru.e.n.be.r.gma.r.t.in.j@gmail.com"">gru.e.n.be.r.gma.r.t.in.j@gmail.com</a>
<a href=""mailto:g.ru.enb.e.rg.ma.r.t.i.nj@gmail.com"">g.ru.enb.e.rg.ma.r.t.i.nj@gmail.com</a>
<a href=""mailto:gr.uen.b.e.rgm.art.inj@gmail.com"">gr.uen.b.e.rgm.art.inj@gmail.com</a>
<a href=""mailto:grue.nbe.r.g.marti.n.j@gmail.com"">grue.nbe.r.g.marti.n.j@gmail.com</a>
<a href=""mailto:gr.uenb.e.rgmart.i.nj@gmail.com"">gr.uenb.e.rgmart.i.nj@gmail.com</a>
<a href=""mailto:gru.e.n.b.e.r.g.m.art.i.n.j@gmail.com"">gru.e.n.b.e.r.g.m.art.i.n.j@gmail.com</a>
<a href=""mailto:g.r.uen.b.e.r.gma.r.tinj@gmail.com"">g.r.uen.b.e.r.gma.r.tinj@gmail.com</a>
<a href=""mailto:gr.uenbe.r.gm.a.rti.n.j@gmail.com"">gr.uenbe.r.gm.a.rti.n.j@gmail.com</a>
<a href=""mailto:gr.uen.b.e.rgma.rt.i.n.j@gmail.com"">gr.uen.b.e.rgma.rt.i.n.j@gmail.com</a>
<a href=""mailto:g.rue.n.b.e.rgm.a.r.ti.n.j@gmail.com"">g.rue.n.b.e.rgm.a.r.ti.n.j@gmail.com</a>
<a href=""mailto:g.rue.n.b.er.g.m.a.rti.nj@gmail.com"">g.rue.n.b.er.g.m.a.rti.nj@gmail.com</a>
<a href=""mailto:gr.ue.n.be.rgm.a.r.tinj@gmail.com"">gr.ue.n.be.rgm.a.r.tinj@gmail.com</a>
<a href=""mailto:g.ru.enbe.r.g.ma.rti.nj@gmail.com"">g.ru.enbe.r.g.ma.rti.nj@gmail.com</a>
<a href=""mailto:g.r.ue.n.b.e.r.g.ma.r.tin.j@gmail.com"">g.r.ue.n.b.e.r.g.ma.r.tin.j@gmail.com</a>
<a href=""mailto:gr.u.en.b.e.r.gmar.ti.nj@gmail.com"">gr.u.en.b.e.r.gmar.ti.nj@gmail.com</a>
<a href=""mailto:gruenb.er.gma.rti.nj@gmail.com"">gruenb.er.gma.rti.nj@gmail.com</a>
<a href=""mailto:gru.en.be.r.gmarti.n.j@gmail.com"">gru.en.be.r.gmarti.n.j@gmail.com</a>
<a href=""mailto:g.ru.e.nb.e.rgmar.tinj@gmail.com"">g.ru.e.nb.e.rgmar.tinj@gmail.com</a>
<a href=""mailto:g.ruenb.er.gmartinj@gmail.com"">g.ruenb.er.gmartinj@gmail.com</a>
<a href=""mailto:g.r.u.en.bergm.art.i.nj@gmail.com"">g.r.u.en.bergm.art.i.nj@gmail.com</a>
<a href=""mailto:g.ru.enb.er.g.ma.rt.i.n.j@gmail.com"">g.ru.enb.er.g.ma.rt.i.n.j@gmail.com</a>
<a href=""mailto:g.r.ue.nb.e.r.g.mart.inj@gmail.com"">g.r.ue.nb.e.r.g.mart.inj@gmail.com</a>
<a href=""mailto:gr.ue.n.b.e.rg.mar.ti.n.j@gmail.com"">gr.ue.n.b.e.rg.mar.ti.n.j@gmail.com</a>
<a href=""mailto:g.rue.n.b.e.rgma.rtin.j@gmail.com"">g.rue.n.b.e.rgma.rtin.j@gmail.com</a>
<a href=""mailto:gr.u.e.nberg.m.art.inj@gmail.com"">gr.u.e.nberg.m.art.inj@gmail.com</a>
<a href=""mailto:gru.e.nb.e.r.g.m.a.r.t.i.n.j@gmail.com"">gru.e.nb.e.r.g.m.a.r.t.i.n.j@gmail.com</a>
<a href=""mailto:g.rue.nbergma.rtin.j@gmail.com"">g.rue.nbergma.rtin.j@gmail.com</a>
<a href=""mailto:gru.e.n.b.erg.m.ar.t.inj@gmail.com"">gru.e.n.b.erg.m.ar.t.inj@gmail.com</a>
<a href=""mailto:grue.n.be.rg.m.a.r.tinj@gmail.com"">grue.n.be.rg.m.a.r.tinj@gmail.com</a>
<a href=""mailto:gru.en.b.e.rg.ma.rt.in.j@gmail.com"">gru.en.b.e.rg.ma.rt.in.j@gmail.com</a>
<a href=""mailto:g.ru.enbergm.a.r.ti.n.j@gmail.com"">g.ru.enbergm.a.r.ti.n.j@gmail.com</a>
<a href=""mailto:g.ru.e.n.b.er.g.m.art.inj@gmail.com"">g.ru.e.n.b.er.g.m.art.inj@gmail.com</a>
<a href=""mailto:g.r.ue.n.be.rg.ma.rt.i.n.j@gmail.com"">g.r.ue.n.be.rg.ma.rt.i.n.j@gmail.com</a>
<a href=""mailto:g.ru.e.n.be.rgmar.ti.n.j@gmail.com"">g.ru.e.n.be.rgmar.ti.n.j@gmail.com</a>
<a href=""mailto:g.r.ue.nbe.r.g.m.a.r.tinj@gmail.com"">g.r.ue.nbe.r.g.m.a.r.tinj@gmail.com</a>
<a href=""mailto:g.r.uen.b.e.rgmart.inj@gmail.com"">g.r.uen.b.e.rgmart.inj@gmail.com</a>
<a href=""mailto:g.ruen.b.e.rg.m.arti.nj@gmail.com"">g.ruen.b.e.rg.m.arti.nj@gmail.com</a>
<a href=""mailto:gr.uen.be.rg.ma.rtin.j@gmail.com"">gr.uen.be.rg.ma.rtin.j@gmail.com</a>
<a href=""mailto:gr.uenberg.m.a.rt.i.n.j@gmail.com"">gr.uenberg.m.a.rt.i.n.j@gmail.com</a>
<a href=""mailto:g.r.uen.be.r.g.m.ar.ti.n.j@gmail.com"">g.r.uen.be.r.g.m.ar.ti.n.j@gmail.com</a>
<a href=""mailto:gru.en.ber.g.mar.tin.j@gmail.com"">gru.en.ber.g.mar.tin.j@gmail.com</a>
<a href=""mailto:g.ru.e.nbergma.r.ti.nj@gmail.com"">g.ru.e.nbergma.r.ti.nj@gmail.com</a>
<a href=""mailto:gr.uen.be.rgma.rt.i.n.j@gmail.com"">gr.uen.be.rgma.rt.i.n.j@gmail.com</a>
<a href=""mailto:grue.nberg.m.a.r.t.inj@gmail.com"">grue.nberg.m.a.r.t.inj@gmail.com</a>
<a href=""mailto:g.ru.e.n.b.ergmarti.n.j@gmail.com"">g.ru.e.n.b.ergmarti.n.j@gmail.com</a>
<a href=""mailto:gr.ue.n.b.e.rg.ma.rt.i.nj@gmail.com"">gr.ue.n.b.e.rg.ma.rt.i.nj@gmail.com</a>
<a href=""mailto:gru.e.nb.e.rg.ma.r.t.inj@gmail.com"">gru.e.nb.e.rg.ma.r.t.inj@gmail.com</a>
<a href=""mailto:gr.uenb.ergm.a.rt.i.n.j@gmail.com"">gr.uenb.ergm.a.rt.i.n.j@gmail.com</a>
<a href=""mailto:g.r.ue.nb.e.r.gma.r.t.inj@gmail.com"">g.r.ue.nb.e.r.gma.r.t.inj@gmail.com</a>
<a href=""mailto:gr.uen.bergma.r.t.in.j@gmail.com"">gr.uen.bergma.r.t.in.j@gmail.com</a>
<a href=""mailto:g.r.uen.berg.m.a.rt.in.j@gmail.com"">g.r.uen.berg.m.a.rt.in.j@gmail.com</a>
<a href=""mailto:gr.u.e.nberg.mar.tinj@gmail.com"">gr.u.e.nberg.mar.tinj@gmail.com</a>
<a href=""mailto:g.r.ue.nbe.rg.ma.r.tin.j@gmail.com"">g.r.ue.nbe.rg.ma.r.tin.j@gmail.com</a>
<a href=""mailto:gr.u.en.b.e.rgma.rt.i.n.j@gmail.com"">gr.u.en.b.e.rgma.rt.i.n.j@gmail.com</a>
<a href=""mailto:gru.e.nber.g.m.ar.ti.n.j@gmail.com"">gru.e.nber.g.m.ar.ti.n.j@gmail.com</a>
<a href=""mailto:gru.e.nbergmar.t.i.n.j@gmail.com"">gru.e.nbergmar.t.i.n.j@gmail.com</a>
<a href=""mailto:g.r.ue.nber.g.ma.r.tin.j@gmail.com"">g.r.ue.nber.g.ma.r.tin.j@gmail.com</a>
<a href=""mailto:g.ru.en.be.r.gm.a.rti.nj@gmail.com"">g.ru.en.be.r.gm.a.rti.nj@gmail.com</a>
<a href=""mailto:gr.u.e.nb.e.r.gmart.i.n.j@gmail.com"">gr.u.e.nb.e.r.gmart.i.n.j@gmail.com</a>
<a href=""mailto:g.r.u.enbe.rgm.a.rti.n.j@gmail.com"">g.r.u.enbe.rgm.a.rti.n.j@gmail.com</a>
<a href=""mailto:g.r.u.e.nbergmart.i.n.j@gmail.com"">g.r.u.e.nbergmart.i.n.j@gmail.com</a>
<a href=""mailto:gr.ue.n.ber.g.m.ar.ti.nj@gmail.com"">gr.ue.n.ber.g.m.ar.ti.nj@gmail.com</a>
<a href=""mailto:g.ru.enb.e.r.gma.rt.in.j@gmail.com"">g.ru.enb.e.r.gma.rt.in.j@gmail.com</a>
<a href=""mailto:g.ru.e.nb.erg.mar.t.inj@gmail.com"">g.ru.e.nb.erg.mar.t.inj@gmail.com</a>
<a href=""mailto:grue.nbergm.a.rtin.j@gmail.com"">grue.nbergm.a.rtin.j@gmail.com</a>
<a href=""mailto:g.rue.n.b.ergma.rt.i.n.j@gmail.com"">g.rue.n.b.ergma.rt.i.n.j@gmail.com</a>
<a href=""mailto:g.rue.n.b.e.rgm.ar.t.in.j@gmail.com"">g.rue.n.b.e.rgm.ar.t.in.j@gmail.com</a>
<a href=""mailto:grue.nb.e.r.gm.ar.tinj@gmail.com"">grue.nb.e.r.gm.ar.tinj@gmail.com</a>
<a href=""mailto:gr.u.e.nber.gma.r.ti.n.j@gmail.com"">gr.u.e.nber.gma.r.ti.n.j@gmail.com</a>
<a href=""mailto:grue.n.be.rg.m.a.rt.inj@gmail.com"">grue.n.be.rg.m.a.rt.inj@gmail.com</a>
<a href=""mailto:gr.u.e.n.b.e.r.gm.art.i.nj@gmail.com"">gr.u.e.n.b.e.r.gm.art.i.nj@gmail.com</a>
<a href=""mailto:g.ru.enb.erg.m.a.r.ti.n.j@gmail.com"">g.ru.enb.erg.m.a.r.ti.n.j@gmail.com</a>
<a href=""mailto:g.rue.n.b.e.rgm.ar.tinj@gmail.com"">g.rue.n.b.e.rgm.ar.tinj@gmail.com</a>
<a href=""mailto:grue.nb.e.rg.m.arti.n.j@gmail.com"">grue.nb.e.rg.m.arti.n.j@gmail.com</a>
<a href=""mailto:grue.n.ber.g.m.a.rt.i.n.j@gmail.com"">grue.n.ber.g.m.a.rt.i.n.j@gmail.com</a>
<a href=""mailto:gr.ue.n.b.ergm.a.rt.i.nj@gmail.com"">gr.ue.n.b.ergm.a.rt.i.nj@gmail.com</a>
<a href=""mailto:grue.n.be.rg.m.art.inj@gmail.com"">grue.n.be.rg.m.art.inj@gmail.com</a>
<a href=""mailto:gruenbe.rgm.ar.t.i.nj@gmail.com"">gruenbe.rgm.ar.t.i.nj@gmail.com</a>
<a href=""mailto:g.ruen.b.erg.m.ar.t.i.nj@gmail.com"">g.ruen.b.erg.m.ar.t.i.nj@gmail.com</a>
<a href=""mailto:g.r.uenb.erg.mart.in.j@gmail.com"">g.r.uenb.erg.mart.in.j@gmail.com</a>
<a href=""mailto:g.rue.n.be.r.gma.r.ti.nj@gmail.com"">g.rue.n.be.r.gma.r.ti.nj@gmail.com</a>
<a href=""mailto:gru.e.nb.er.g.mar.t.inj@gmail.com"">gru.e.nb.er.g.mar.t.inj@gmail.com</a>
<a href=""mailto:gru.e.nbe.rg.m.ar.tinj@gmail.com"">gru.e.nbe.rg.m.ar.tinj@gmail.com</a>
<a href=""mailto:g.ru.e.n.berg.m.a.rti.n.j@gmail.com"">g.ru.e.n.berg.m.a.rti.n.j@gmail.com</a>
<a href=""mailto:gru.e.nbe.r.g.m.a.rtin.j@gmail.com"">gru.e.nbe.r.g.m.a.rtin.j@gmail.com</a>
<a href=""mailto:gr.uen.b.erg.m.a.rtin.j@gmail.com"">gr.uen.b.erg.m.a.rtin.j@gmail.com</a>
<a href=""mailto:gru.e.n.b.e.rgm.art.i.n.j@gmail.com"">gru.e.n.b.e.rgm.art.i.n.j@gmail.com</a>
<a href=""mailto:gr.u.e.n.ber.gmarti.nj@gmail.com"">gr.u.e.n.ber.gmarti.nj@gmail.com</a>
<a href=""mailto:g.r.u.e.n.b.er.g.m.a.rt.inj@gmail.com"">g.r.u.e.n.b.er.g.m.a.rt.inj@gmail.com</a>
<a href=""mailto:gr.ue.nbe.rg.mar.t.i.nj@gmail.com"">gr.ue.nbe.rg.mar.t.i.nj@gmail.com</a>
<a href=""mailto:gr.u.e.nber.g.mar.tinj@gmail.com"">gr.u.e.nber.g.mar.tinj@gmail.com</a>
<a href=""mailto:gru.e.n.b.e.r.gma.r.t.i.nj@gmail.com"">gru.e.n.b.e.r.gma.r.t.i.nj@gmail.com</a>
<a href=""mailto:gr.u.e.n.b.e.rg.m.a.r.t.i.nj@gmail.com"">gr.u.e.n.b.e.rg.m.a.r.t.i.nj@gmail.com</a>
<a href=""mailto:grue.n.ber.gm.ar.tinj@gmail.com"">grue.n.ber.gm.ar.tinj@gmail.com</a>
<a href=""mailto:gr.u.e.n.b.er.gmart.i.nj@gmail.com"">gr.u.e.n.b.er.gmart.i.nj@gmail.com</a>
<a href=""mailto:gr.uen.be.rgm.a.rti.nj@gmail.com"">gr.uen.be.rgm.a.rti.nj@gmail.com</a>
<a href=""mailto:g.ruenber.g.m.a.rti.nj@gmail.com"">g.ruenber.g.m.a.rti.nj@gmail.com</a>
<a href=""mailto:gr.ue.nbe.r.gm.ar.tinj@gmail.com"">gr.ue.nbe.r.gm.ar.tinj@gmail.com</a>
<a href=""mailto:gr.ue.nbergm.a.r.t.inj@gmail.com"">gr.ue.nbergm.a.r.t.inj@gmail.com</a>
<a href=""mailto:gruen.berg.m.ar.t.inj@gmail.com"">gruen.berg.m.ar.t.inj@gmail.com</a>
<a href=""mailto:g.r.ue.n.bergmart.i.nj@gmail.com"">g.r.ue.n.bergmart.i.nj@gmail.com</a>
<a href=""mailto:g.ruen.bergma.r.t.inj@gmail.com"">g.ruen.bergma.r.t.inj@gmail.com</a>
<a href=""mailto:g.r.uenb.e.r.gm.a.r.tinj@gmail.com"">g.r.uenb.e.r.gm.a.r.tinj@gmail.com</a>
<a href=""mailto:g.r.uenbe.r.gmar.ti.nj@gmail.com"">g.r.uenbe.r.gmar.ti.nj@gmail.com</a>
<a href=""mailto:gru.e.nber.g.ma.r.t.i.nj@gmail.com"">gru.e.nber.g.ma.r.t.i.nj@gmail.com</a>
<a href=""mailto:g.r.uenb.er.gma.r.t.inj@gmail.com"">g.r.uenb.er.gma.r.t.inj@gmail.com</a>
<a href=""mailto:g.r.u.enber.gm.a.rt.i.nj@gmail.com"">g.r.u.enber.gm.a.rt.i.nj@gmail.com</a>
<a href=""mailto:g.r.uen.be.rgmart.i.n.j@gmail.com"">g.r.uen.be.rgmart.i.n.j@gmail.com</a>
<a href=""mailto:gr.u.e.nbe.r.g.m.arti.n.j@gmail.com"">gr.u.e.nbe.r.g.m.arti.n.j@gmail.com</a>
<a href=""mailto:gr.u.enber.g.ma.r.tin.j@gmail.com"">gr.u.enber.g.ma.r.tin.j@gmail.com</a>
<a href=""mailto:g.r.u.enbe.rgm.a.rtin.j@gmail.com"">g.r.u.enbe.rgm.a.rtin.j@gmail.com</a>
<a href=""mailto:g.r.ue.nbe.rg.m.a.r.tinj@gmail.com"">g.r.ue.nbe.rg.m.a.r.tinj@gmail.com</a>
<a href=""mailto:g.r.uen.b.e.r.g.m.a.r.tinj@gmail.com"">g.r.uen.b.e.r.g.m.a.r.tinj@gmail.com</a>
<a href=""mailto:gr.uen.b.e.rgmart.in.j@gmail.com"">gr.uen.b.e.rgmart.in.j@gmail.com</a>
<a href=""mailto:gr.u.e.nb.e.rgm.artin.j@gmail.com"">gr.u.e.nb.e.rgm.artin.j@gmail.com</a>
<a href=""mailto:grue.nber.g.m.ar.ti.n.j@gmail.com"">grue.nber.g.m.ar.ti.n.j@gmail.com</a>
<a href=""mailto:g.ru.en.be.r.gmar.t.inj@gmail.com"">g.ru.en.be.r.gmar.t.inj@gmail.com</a>
<a href=""mailto:gr.uen.bergmartin.j@gmail.com"">gr.uen.bergmartin.j@gmail.com</a>
<a href=""mailto:gruenb.e.rgma.rt.inj@gmail.com"">gruenb.e.rgma.rt.inj@gmail.com</a>
<a href=""mailto:gr.ue.nber.g.m.a.r.ti.n.j@gmail.com"">gr.ue.nber.g.m.a.r.ti.n.j@gmail.com</a>
<a href=""mailto:gr.uen.b.erg.ma.rtinj@gmail.com"">gr.uen.b.erg.ma.rtinj@gmail.com</a>
<a href=""mailto:g.ru.enberg.m.ar.ti.nj@gmail.com"">g.ru.enberg.m.ar.ti.nj@gmail.com</a>
<a href=""mailto:g.ru.e.n.b.e.r.g.mart.inj@gmail.com"">g.ru.e.n.b.e.r.g.mart.inj@gmail.com</a>
<a href=""mailto:g.ru.en.b.e.r.g.m.ar.tinj@gmail.com"">g.ru.en.b.e.r.g.m.ar.tinj@gmail.com</a>
<a href=""mailto:g.r.u.e.nb.er.g.ma.r.t.in.j@gmail.com"">g.r.u.e.nb.er.g.ma.r.t.in.j@gmail.com</a>
<a href=""mailto:gru.e.n.be.rgm.a.r.tin.j@gmail.com"">gru.e.n.be.rgm.a.r.tin.j@gmail.com</a>
<a href=""mailto:g.rue.nberg.m.ar.t.inj@gmail.com"">g.rue.nberg.m.ar.t.inj@gmail.com</a>
<a href=""mailto:g.ruenb.ergmar.t.inj@gmail.com"">g.ruenb.ergmar.t.inj@gmail.com</a>
<a href=""mailto:gr.u.en.b.e.r.gma.r.ti.n.j@gmail.com"">gr.u.en.b.e.r.gma.r.ti.n.j@gmail.com</a>
<a href=""mailto:grue.nbe.r.g.m.art.i.n.j@gmail.com"">grue.nbe.r.g.m.art.i.n.j@gmail.com</a>
<a href=""mailto:gr.u.e.nb.ergm.a.rt.i.n.j@gmail.com"">gr.u.e.nb.ergm.a.rt.i.n.j@gmail.com</a>
<a href=""mailto:g.r.u.enb.er.gm.a.r.tin.j@gmail.com"">g.r.u.enb.er.gm.a.r.tin.j@gmail.com</a>
<a href=""mailto:g.r.u.e.n.b.er.g.m.art.in.j@gmail.com"">g.r.u.e.n.b.er.g.m.art.in.j@gmail.com</a>
<a href=""mailto:g.ru.enber.g.mart.i.nj@gmail.com"">g.ru.enber.g.mart.i.nj@gmail.com</a>
<a href=""mailto:g.r.u.e.n.ber.g.mar.t.i.n.j@gmail.com"">g.r.u.e.n.ber.g.mar.t.i.n.j@gmail.com</a>
<a href=""mailto:g.r.ue.n.be.r.gmar.t.in.j@gmail.com"">g.r.ue.n.be.r.gmar.t.in.j@gmail.com</a>
<a href=""mailto:gr.ue.n.b.e.r.gma.r.tinj@gmail.com"">gr.ue.n.b.e.r.gma.r.tinj@gmail.com</a>
<a href=""mailto:g.r.uen.b.ergm.ar.ti.n.j@gmail.com"">g.r.uen.b.ergm.ar.ti.n.j@gmail.com</a>
<a href=""mailto:g.ru.e.nberg.martin.j@gmail.com"">g.ru.e.nberg.martin.j@gmail.com</a>
<a href=""mailto:gru.en.bergm.a.r.t.i.n.j@gmail.com"">gru.en.bergm.a.r.t.i.n.j@gmail.com</a>
<a href=""mailto:g.rue.nb.e.rg.mart.in.j@gmail.com"">g.rue.nb.e.rg.mart.in.j@gmail.com</a>
<a href=""mailto:gr.ue.n.ber.g.m.a.rt.in.j@gmail.com"">gr.ue.n.ber.g.m.a.rt.in.j@gmail.com</a>
<a href=""mailto:g.r.ue.n.be.rgma.rtinj@gmail.com"">g.r.ue.n.be.rgma.rtinj@gmail.com</a>
<a href=""mailto:g.rue.nbe.r.g.mar.tin.j@gmail.com"">g.rue.nbe.r.g.mar.tin.j@gmail.com</a>
<a href=""mailto:g.r.u.e.n.b.er.gma.rti.n.j@gmail.com"">g.r.u.e.n.b.er.gma.rti.n.j@gmail.com</a>
<a href=""mailto:g.ru.e.nb.er.gm.a.r.t.in.j@gmail.com"">g.ru.e.nb.er.gm.a.r.t.in.j@gmail.com</a>
<a href=""mailto:g.ruen.bergmar.ti.nj@gmail.com"">g.ruen.bergmar.ti.nj@gmail.com</a>
<a href=""mailto:gruenbe.r.gmart.i.nj@gmail.com"">gruenbe.r.gmart.i.nj@gmail.com</a>
<a href=""mailto:g.rue.n.ber.g.mar.ti.n.j@gmail.com"">g.rue.n.ber.g.mar.ti.n.j@gmail.com</a>
<a href=""mailto:g.ru.enb.er.g.m.a.r.tin.j@gmail.com"">g.ru.enb.er.g.m.a.r.tin.j@gmail.com</a>
<a href=""mailto:g.r.u.enbergm.a.rtinj@gmail.com"">g.r.u.enbergm.a.rtinj@gmail.com</a>
<a href=""mailto:g.r.uen.ber.g.ma.rti.n.j@gmail.com"">g.r.uen.ber.g.ma.rti.n.j@gmail.com</a>
<a href=""mailto:g.r.u.enbe.rg.m.a.rt.inj@gmail.com"">g.r.u.enbe.rg.m.a.rt.inj@gmail.com</a>
<a href=""mailto:g.r.uen.b.erg.marti.nj@gmail.com"">g.r.uen.b.erg.marti.nj@gmail.com</a>
<a href=""mailto:g.r.ue.nberg.m.a.r.tin.j@gmail.com"">g.r.ue.nberg.m.a.r.tin.j@gmail.com</a>
<a href=""mailto:gruen.b.e.r.g.m.a.rtin.j@gmail.com"">gruen.b.e.r.g.m.a.rtin.j@gmail.com</a>
<a href=""mailto:g.ruen.be.rg.mar.tinj@gmail.com"">g.ruen.be.rg.mar.tinj@gmail.com</a>
<a href=""mailto:grue.n.ber.g.mar.t.in.j@gmail.com"">grue.n.ber.g.mar.t.in.j@gmail.com</a>
<a href=""mailto:g.ruenbe.r.g.m.a.rtinj@gmail.com"">g.ruenbe.r.g.m.a.rtinj@gmail.com</a>
<a href=""mailto:gruen.ber.g.mar.ti.nj@gmail.com"">gruen.ber.g.mar.ti.nj@gmail.com</a>
<a href=""mailto:gru.e.nb.er.g.m.a.r.t.i.nj@gmail.com"">gru.e.nb.er.g.m.a.r.t.i.nj@gmail.com</a>
<a href=""mailto:gru.e.n.be.rgmarti.n.j@gmail.com"">gru.e.n.be.rgmarti.n.j@gmail.com</a>
<a href=""mailto:g.ru.enb.e.r.gm.art.in.j@gmail.com"">g.ru.enb.e.r.gm.art.in.j@gmail.com</a>
<a href=""mailto:gr.u.e.nbe.rg.mart.inj@gmail.com"">gr.u.e.nbe.rg.mart.inj@gmail.com</a>
<a href=""mailto:grue.n.be.r.gm.a.r.t.inj@gmail.com"">grue.n.be.r.gm.a.r.t.inj@gmail.com</a>
<a href=""mailto:g.rue.n.b.e.rgmar.tin.j@gmail.com"">g.rue.n.b.e.rgmar.tin.j@gmail.com</a>
<a href=""mailto:gr.uenb.e.r.gm.a.rt.inj@gmail.com"">gr.uenb.e.r.gm.a.rt.inj@gmail.com</a>
<a href=""mailto:g.ruen.bergm.artin.j@gmail.com"">g.ruen.bergm.artin.j@gmail.com</a>
<a href=""mailto:g.ru.e.n.b.er.gma.r.ti.n.j@gmail.com"">g.ru.e.n.b.er.gma.r.ti.n.j@gmail.com</a>
<a href=""mailto:gru.en.b.erg.m.a.rt.inj@gmail.com"">gru.en.b.erg.m.a.rt.inj@gmail.com</a>
<a href=""mailto:g.ruenb.er.gm.a.rti.nj@gmail.com"">g.ruenb.er.gm.a.rti.nj@gmail.com</a>
<a href=""mailto:gr.u.e.n.b.e.r.gmart.i.nj@gmail.com"">gr.u.e.n.b.e.r.gmart.i.nj@gmail.com</a>"
GL31HjdE,Untitled,Beberr,Python,Monday 19th of February 2024 09:21:47 AM CDT,"if __name__ == '__main__':
    N = int(input())

l=[]
  
for i in range(N):
    s=input()
    if s.startswith('sort'):
        l.sort()
    elif s.startswith('insert'):
        l1=s.split(' ')
        l.insert(int(l1[1]), int(l1[2]))
    elif s.startswith('print'):
        print(l)
    elif s.startswith('reverse'):
        l.reverse()
    elif s.startswith('remove'):
        l1=s.split(' ')
        l.remove(int(l1[1]))
    elif s.startswith('append'):
        l1=s.split(' ')
        l.append(int(l1[1]))
    elif s.startswith('pop'):
        l.pop()"
A8bGyh0C,Spider-Man Cartoon Maker Win 3.1 in Dosbox,metalx1000,Bash,Monday 19th of February 2024 09:20:20 AM CDT,"#!/bin/bash
###################################################################### 
#Copyright (C) 2024  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
###################################################################### 

sudo apt install dosbox

mkdir spider-man
cd spider-man
wget -c ""https://archive.org/download/spider-man_cartoon-maker/spider-man_cartoon-maker.zip""
unzip ""spider-man_cartoon-maker.zip""
dosbox AUTOEXEC.BAT
"
ET3wxG8h,Untitled,an21151,HTML,Monday 19th of February 2024 09:14:23 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <title>Title</title>
  <link rel=""preconnect"" href=""https://fonts.googleapis.com"">
  <link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin>
  <link href=""https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap"" rel=""stylesheet"">

</head>
<body>
<style>
  body{
    background: transparent;
    margin: 0;
  }
  button {
    padding: 0;
    background-color: transparent;
    border: none;
    font-family: inherit;
    cursor: pointer;
  }
  .settings .card-settings {
    display: flex;
    align-items: flex-start;
    gap: 60px;
  }
  @media (max-width: 991px) {
    .settings .card-settings {
      flex-direction: column;
      gap: 20px;
    }
  }
  .settings .card-settings .tabs {
    box-shadow: inset 0 4px 4px 0 rgba(0, 0, 0, 0.25);
    background: #191a1f;
    border-radius: 12px;
    padding: 6px;
    display: flex;
    flex-direction: column;
    gap: 6px;
  }
  @media (max-width: 991px) {
    .settings .card-settings .tabs {
      width: 100%;
    }
  }
  .settings .card-settings .tabs li {
    list-style-type: none;
  }
  .settings .card-settings .tabs li button {
    font-weight: 400;
    font-size: 12px;
    text-transform: uppercase;
    color: #a5a5a5;
    padding: 6px 14px;
  }
  .settings .card-settings .tabs li button.active {
    box-shadow: inset 4px 4px 4px 0 rgba(255, 255, 255, 0.25), inset -4px -4px 14px 0 #f7931a;
    background: #ffbd3a;
    color: #000;
    border-radius: 8px;
  }
  .settings .card-settings .panel {
    display: none;
    width: 352px;
  }
  @media (max-width: 991px) {
    .settings .card-settings .panel {
      width: 100%;
    }
  }
  .settings .card-settings .panel .form-group {
    margin-bottom: 22px;
  }
  .settings .card-settings .panel .form-group label {
    font-weight: 500;
    font-size: 14px;
    color: #fff;
    display: block;
    margin-bottom: 4px;
  }
  .settings .card-settings .panel .form-group .input-wrapper {
    position: relative;
  }
  .settings .card-settings .panel .form-group .input-wrapper input {
    background-color: transparent;
    border: 1px solid #4b4b4b;
    border-radius: 8px;
    padding: 11px;
    font-weight: 500;
    font-size: 12px;
    line-height: 16px;
    color: #fff;
    width: 100%;
    transition: all 0.4s ease;
    box-sizing: border-box;
    -webkit-appearance: none;
    outline: none;
    font-family: inherit;
  }
  .settings .card-settings .panel .form-group .input-wrapper input::placeholder {
    color: #737373;
  }
  .settings .card-settings .panel .form-group .input-wrapper input:-webkit-autofill, .settings .card-settings .panel .form-group .input-wrapper input:-webkit-autofill:hover, .settings .card-settings .panel .form-group .input-wrapper input:-webkit-autofill:focus, .settings .card-settings .panel .form-group .input-wrapper input:-webkit-autofill:active {
    -webkit-background-clip: text;
    -webkit-text-fill-color: #fff;
    transition: background-color 5000s ease-in-out 0s;
    box-shadow: inset 0 0 20px 20px rgba(35, 35, 35, 0.1607843137);
  }
  .settings .card-settings .panel .form-group .input-wrapper input:focus {
    box-shadow: 0 4px 4px 0 rgba(75, 153, 5, 0.35);
    border: 1px solid #4b9905;
  }
  .settings .card-settings .panel .btn-green {
    width: 100%;
  }
  .settings .card-settings .panel h5 {
    margin-bottom: 24px;
    text-transform: uppercase;
  }
  .settings .card-settings .panel.active {
    display: block;
  }
  *:focus {
    outline: none;
  }
  .card{
    box-shadow: 0 14px 30px 0 rgba(13, 13, 13, 0.25), inset 4px 4px 14px 0 rgba(93, 93, 93, 0.25), inset -4px -4px 14px 0 rgba(0, 0, 0, 0.25);
    background: linear-gradient(180deg, #1f1f21 0%, #000 100%);
    padding: 14px;
    border: 1px solid #383838;
    border-radius: 12px;
    color: #fff;
    font-family: ""Poppins"", sans-serif;
  }
  .card a{
    text-decoration: none;
    color: #fff;
  }
  .btn {
    font-weight: 500;
    font-size: 14px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 9.5px 27px;
    border-radius: 8px;
    background-color: transparent;
    border: none;
    font-family: inherit;
    cursor: pointer;
  }
  .btn-green{
    color: #fff;
    box-shadow: inset 4px 4px 14px 0 rgba(139, 195, 74, 0.32), inset -4px -4px 14px 0 rgba(75, 153, 5, 0.43);
    background: #4b9905;
  }
</style>

<div class=""settings""><div class=""card""><div class=""card-settings""><ul class=""tabs""><li><button class=""active"">Profile</button></li><li><button class="""">Password</button></li><li><button class="""">two-factor authentication</button></li></ul><div class=""panel active""><form action=""""><div class=""form-group""><label for="""">User name</label><div class=""input-wrapper""><input type=""text"" placeholder=""User name""></div></div><div class=""form-group""><label for="""">Email</label><div class=""input-wrapper""><input type=""email"" placeholder=""example@email.com""></div></div><div class=""form-group""><label for="""">Phone number</label><div class=""input-wrapper""><input id=""phone"" autocomplete=""off""></div></div><button type=""submit"" class=""btn btn-green"">Save</button></form></div><div class=""panel""><form action=""""><div class=""form-group""><label for="""">Old password</label><div class=""input-wrapper""><input type=""password"" placeholder=""Old password""></div></div><div class=""form-group""><label for="""">New password</label><div class=""input-wrapper""><input type=""password"" placeholder=""New password""></div></div><div class=""form-group""><label for="""">Reset the new password</label><div class=""input-wrapper""><input type=""password"" placeholder=""Reset the new password""></div></div><button type=""submit"" class=""btn btn-green"">Save</button></form></div><div class=""panel""><h5>authenticator app</h5><button type=""button"" class=""btn btn-green"">Connect</button></div></div></div></div>

<div class=""settings""><div class=""card""><div class=""card-settings""><ul class=""tabs""><li><button class="""">Profile</button></li><li><button class=""active"">Password</button></li><li><button class="""">two-factor authentication</button></li></ul><div class=""panel""><form action=""""><div class=""form-group""><label for="""">User name</label><div class=""input-wrapper""><input type=""text"" placeholder=""User name""></div></div><div class=""form-group""><label for="""">Email</label><div class=""input-wrapper""><input type=""email"" placeholder=""example@email.com""></div></div><div class=""form-group""><label for="""">Phone number</label><div class=""input-wrapper""><input id=""phone"" autocomplete=""off""></div></div><button type=""submit"" class=""btn btn-green"">Save</button></form></div><div class=""panel active""><form action=""""><div class=""form-group""><label for="""">Old password</label><div class=""input-wrapper""><input type=""password"" placeholder=""Old password""></div></div><div class=""form-group""><label for="""">New password</label><div class=""input-wrapper""><input type=""password"" placeholder=""New password""></div></div><div class=""form-group""><label for="""">Reset the new password</label><div class=""input-wrapper""><input type=""password"" placeholder=""Reset the new password""></div></div><button type=""submit"" class=""btn btn-green"">Save</button></form></div><div class=""panel""><h5>authenticator app</h5><button type=""button"" class=""btn btn-green"">Connect</button></div></div></div></div>

<div class=""settings""><div class=""card""><div class=""card-settings""><ul class=""tabs""><li><button class="""">Profile</button></li><li><button class="""">Password</button></li><li><button class=""active"">two-factor authentication</button></li></ul><div class=""panel""><form action=""""><div class=""form-group""><label for="""">User name</label><div class=""input-wrapper""><input type=""text"" placeholder=""User name""></div></div><div class=""form-group""><label for="""">Email</label><div class=""input-wrapper""><input type=""email"" placeholder=""example@email.com""></div></div><div class=""form-group""><label for="""">Phone number</label><div class=""input-wrapper""><input id=""phone"" autocomplete=""off""></div></div><button type=""submit"" class=""btn btn-green"">Save</button></form></div><div class=""panel""><form action=""""><div class=""form-group""><label for="""">Old password</label><div class=""input-wrapper""><input type=""password"" placeholder=""Old password""></div></div><div class=""form-group""><label for="""">New password</label><div class=""input-wrapper""><input type=""password"" placeholder=""New password""></div></div><div class=""form-group""><label for="""">Reset the new password</label><div class=""input-wrapper""><input type=""password"" placeholder=""Reset the new password""></div></div><button type=""submit"" class=""btn btn-green"">Save</button></form></div><div class=""panel active""><h5>authenticator app</h5><button type=""button"" class=""btn btn-green"">Connect</button></div></div></div></div>
</body>
</html>"
Ztsb6ziq,Deck of Cards,Nenogzar,Python,Monday 19th of February 2024 09:09:55 AM CDT,"def add_card(list_card, card_name):
    if card_name not in list_card:
        list_card.append(card_name)
        print(""Card successfully added"")
    else:
        print(""Card is already in the deck"")


def remove_card(list_card, card_name):
    if card_name in list_card:
        list_card.remove(card_name)
        print(""Card successfully removed"")
    else:
        print(""Card not found"")


def remove_index_card(list_card, index):
    if 0 <= index < len(list_card):
        list_card.pop(index)
        print(""Card successfully removed"")
    else:
        print(""Index out of range"")


def insert_card(list_card, index, card_name):
    if abs(index) <= len(list_card):
        if card_name not in list_card:
            list_card.insert(index, card_name)
            print(""Card successfully added"")
        else:
            print(""Card is already added"")
    else:
        print(""Index out of range"")


cards_list = list(map(str, input().split("", "")))
manipulation_range = int(input())

for _ in range(manipulation_range):
    command = list(map(str, input().split("", "")))

    manipulation = command[0]

    if len(command) == 3:
        card_name = command[2]
        position = int(command[1])
        if manipulation == ""Insert"":
            insert_card(cards_list, position, card_name)
        else:
            print(""Invalid command format"")
    elif len(command) == 2:
        if manipulation == ""Add"":
            add_card(cards_list, command[1])
        elif manipulation == ""Remove"":
            remove_card(cards_list, command[1])
        elif manipulation == ""RemoveAt"":
            position = int(command[1])
            remove_index_card(cards_list, position)

# print(cards_list)
print("","".join(cards_list))
"
bMH9EATy,LocalMaxima,UrayFenn,C#,Monday 19th of February 2024 09:03:59 AM CDT,"namespace LocalMaxima
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int indexLastElement = 2;
            int arrayLength = 30;
            int minNumber = -20;
            int maxNumber = 30;
            string localMax = "" "";
            Random random = new Random();
            int[] numbers = new int[arrayLength];

            for (int i = 0; i < numbers.Length; i++)
            {
                numbers[i] = random.Next(minNumber, maxNumber);
                Console.Write(numbers[i] + "" "");
            }

            if (numbers[0] > numbers[1])
            {
                localMax += numbers[0] + "" "";
            }

            for (int i = 1; i < arrayLength - 1; i++)
            {
                if (numbers[i - 1] < numbers[i] && numbers[i + 1] < numbers[i])
                {
                    localMax += numbers[i] + "" "";
                }
            }

            if (numbers[numbers.Length - 1] > numbers[numbers.Length - indexLastElement])
            {
                localMax += numbers[numbers.Length - 1] + "" "";
            }

            Console.WriteLine($""\n\nЛокальные максимумы: {localMax}"");
        }
    }
}"
XFp7vUrb,News Feb19 24,Newscaster_Ned,Email,Monday 19th of February 2024 08:44:29 AM CDT,".‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎1‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎2‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎3‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎
.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎.‎‎‎ ‎‎‎T‎‎‎e‎‎‎s‎‎‎t‎‎‎ ‎‎‎c‎‎‎o‎‎‎m‎‎‎p‎‎‎l‎‎‎e‎‎‎t‎‎‎e‎‎‎.‎‎‎

A‎l‎r‎i‎g‎h‎t‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎l‎a‎t‎e‎s‎t‎ ‎J‎e‎w‎ ‎s‎t‎o‎r‎i‎e‎s‎.‎

N‎e‎g‎r‎o‎i‎d‎ ‎w‎i‎t‎h‎ ‎B‎o‎d‎y‎ ‎A‎r‎m‎o‎r‎ ‎F‎a‎t‎a‎l‎l‎y‎ ‎S‎h‎o‎o‎t‎s‎ ‎C‎h‎i‎c‎a‎g‎o‎ ‎C‎o‎p‎.‎

G‎o‎d‎d‎a‎m‎n‎ ‎o‎r‎c‎s‎ ‎j‎u‎s‎t‎ ‎g‎e‎t‎ ‎s‎t‎r‎o‎n‎g‎e‎r‎ ‎e‎a‎c‎h‎ ‎d‎a‎y‎.‎


N‎e‎g‎r‎o‎ ‎T‎r‎a‎n‎n‎y‎ ‎T‎h‎r‎o‎w‎s‎ ‎D‎o‎g‎ ‎f‎r‎o‎m‎ ‎7‎t‎h‎ ‎F‎l‎o‎o‎r‎ ‎o‎f‎ ‎P‎a‎r‎k‎i‎n‎g‎ ‎G‎a‎r‎a‎g‎e‎.‎

E‎x‎p‎e‎r‎t‎ ‎R‎i‎n‎g‎s‎ ‎A‎l‎a‎r‎m‎ ‎B‎e‎l‎l‎s‎,‎ ‎S‎a‎y‎s‎ ‎A‎I‎ ‎C‎o‎u‎l‎d‎ ‎W‎i‎p‎e‎ ‎O‎u‎t‎ ‎H‎u‎m‎a‎n‎i‎t‎y‎ ‎b‎y‎ ‎2‎0‎2‎5‎
L‎o‎s‎ ‎A‎n‎g‎e‎l‎e‎s‎ ‎C‎r‎i‎m‎e‎ ‎W‎a‎v‎e‎:‎ ‎I‎n‎s‎t‎a‎g‎r‎a‎m‎ ‎M‎o‎d‎e‎l‎ ‎C‎o‎r‎i‎n‎n‎a‎ ‎K‎o‎p‎f‎'‎s‎ ‎H‎o‎m‎e‎ ‎B‎u‎r‎g‎l‎a‎r‎i‎z‎e‎d‎
B‎a‎d‎ ‎B‎o‎t‎:‎ ‎A‎i‎r‎ ‎C‎a‎n‎a‎d‎a‎ ‎C‎h‎a‎t‎b‎o‎t‎'‎s‎ ‎A‎d‎v‎i‎c‎e‎ ‎C‎o‎s‎t‎s‎ ‎C‎u‎s‎t‎o‎m‎e‎r‎ ‎H‎u‎n‎d‎r‎e‎d‎s‎
T‎e‎x‎a‎s‎ ‎B‎o‎r‎d‎e‎r‎ ‎S‎h‎e‎r‎i‎f‎f‎'‎s‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎E‎m‎b‎e‎z‎z‎l‎e‎d‎ ‎o‎v‎e‎r‎ ‎$‎1‎ ‎M‎i‎l‎l‎i‎o‎n‎,‎ ‎F‎a‎m‎i‎l‎y‎ ‎C‎l‎a‎i‎m‎s‎
K‎C‎ ‎M‎a‎y‎o‎r‎ ‎R‎i‎p‎s‎ ‎M‎i‎s‎s‎o‎u‎r‎i‎ ‎G‎o‎v‎e‎r‎n‎o‎r‎ ‎f‎o‎r‎ ‎C‎a‎l‎l‎i‎n‎g‎ ‎C‎h‎i‎e‎f‎s‎ ‎P‎a‎r‎a‎d‎e‎ ‎S‎h‎o‎o‎t‎e‎r‎s‎ ‎'‎T‎h‎u‎g‎s‎'‎
W‎a‎t‎c‎h‎:‎ ‎A‎d‎a‎m‎ ‎S‎a‎n‎d‎l‎e‎r‎’‎s‎ ‎N‎S‎F‎W‎ ‎P‎e‎o‎p‎l‎e‎'‎s‎ ‎C‎h‎o‎i‎c‎e‎ ‎A‎w‎a‎r‎d‎s‎ ‎S‎p‎e‎e‎c‎h‎ ‎R‎o‎c‎k‎s‎ ‎C‎r‎o‎w‎d‎
I‎s‎r‎a‎e‎l‎ ‎F‎i‎n‎d‎s‎ ‎M‎e‎d‎i‎c‎i‎n‎e‎s‎ ‎f‎o‎r‎ ‎H‎o‎s‎t‎a‎g‎e‎s‎,‎ ‎U‎n‎d‎e‎l‎i‎v‎e‎r‎e‎d‎,‎ ‎a‎t‎ ‎G‎a‎z‎a‎ ‎H‎o‎s‎p‎i‎t‎a‎l‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
W‎a‎t‎c‎h‎:‎ ‎U‎2‎’‎s‎ ‎B‎o‎n‎o‎ ‎L‎e‎a‎d‎s‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎C‎r‎o‎w‎d‎ ‎i‎n‎ ‎‘‎A‎l‎e‎x‎e‎i‎ ‎N‎a‎v‎a‎l‎n‎y‎’‎ ‎C‎h‎a‎n‎t‎ ‎I‎n‎s‎i‎d‎e‎ ‎V‎e‎g‎a‎s‎ ‎S‎p‎h‎e‎r‎e‎
b‎o‎n‎ ‎s‎i‎n‎g‎s‎
U‎2‎ ‎f‎r‎o‎n‎t‎m‎a‎n‎ ‎B‎o‎n‎o‎ ‎l‎e‎d‎ ‎t‎h‎e‎ ‎c‎r‎o‎w‎d‎ ‎i‎n‎ ‎a‎ ‎c‎h‎a‎n‎t‎ ‎o‎f‎ ‎R‎u‎s‎s‎i‎a‎n‎ ‎o‎p‎p‎o‎s‎i‎t‎i‎o‎n‎ ‎l‎e‎a‎d‎e‎r‎ ‎A‎l‎e‎x‎e‎i‎ ‎N‎a‎v‎a‎l‎n‎y‎’‎s‎ ‎n‎a‎m‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎a‎k‎e‎ ‎o‎f‎ ‎h‎i‎s‎ ‎u‎n‎t‎i‎m‎e‎l‎y‎ ‎d‎e‎a‎t‎h‎.‎

‘‎A‎ ‎M‎a‎t‎t‎e‎r‎ ‎o‎f‎ ‎W‎h‎e‎n‎,‎ ‎N‎o‎t‎ ‎i‎f‎’‎:‎ ‎W‎.‎H‎.‎O‎.‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎ ‎W‎a‎r‎n‎s‎ ‎o‎f‎ ‎‘‎D‎i‎s‎e‎a‎s‎e‎ ‎X‎’‎ ‎P‎a‎n‎d‎e‎m‎i‎c‎ ‎a‎
'‎A‎ ‎M‎a‎t‎t‎e‎r‎ ‎o‎f‎ ‎W‎h‎e‎n‎,‎ ‎N‎o‎t‎ ‎i‎f‎'‎:‎ ‎W‎.‎H‎.‎O‎.‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎ ‎W‎a‎r‎n‎s‎ ‎o‎f‎ ‎'‎D‎i‎s‎e‎a‎s‎e‎ ‎X‎'‎ ‎P‎a‎n‎d‎e‎m‎i‎c‎
1‎,‎1‎3‎3‎
S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎ ‎A‎d‎m‎i‎t‎s‎ ‎F‎i‎r‎s‎t‎ ‎N‎o‎n‎-‎c‎i‎t‎i‎z‎e‎n‎ ‎t‎o‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎s‎ ‎B‎o‎a‎r‎d‎
S‎a‎n‎ ‎F‎r‎a‎n‎c‎i‎s‎c‎o‎ ‎A‎d‎m‎i‎t‎s‎ ‎F‎i‎r‎s‎t‎ ‎N‎o‎n‎-‎c‎i‎t‎i‎z‎e‎n‎ ‎t‎o‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎s‎ ‎B‎o‎a‎r‎d‎
5‎9‎5‎
‘‎F‎*‎*‎*‎ ‎A‎r‎o‎u‎n‎d‎ ‎a‎n‎d‎ ‎F‎i‎n‎d‎ ‎O‎u‎t‎’‎:‎ ‎P‎r‎o‎-‎T‎r‎u‎m‎p‎ ‎T‎r‎u‎c‎k‎e‎r‎s‎ ‎B‎o‎y‎c‎o‎t‎t‎ ‎N‎Y‎C‎ ‎A‎f‎t‎e‎r‎ ‎C‎i‎v‎i‎l‎ ‎F‎r‎a‎u‎d‎ ‎V‎e‎r‎d‎i‎c‎t‎
P‎r‎o‎-‎T‎r‎u‎m‎p‎ ‎T‎r‎u‎c‎k‎e‎r‎s‎ ‎B‎o‎y‎c‎o‎t‎t‎ ‎N‎Y‎C‎ ‎A‎f‎t‎e‎r‎ ‎C‎i‎v‎i‎l‎ ‎F‎r‎a‎u‎d‎ ‎V‎e‎r‎d‎i‎c‎t‎
9‎,‎6‎5‎5‎
H‎a‎l‎e‎y‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎S‎a‎y‎ ‎S‎h‎e‎ ‎W‎i‎l‎l‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎T‎r‎u‎m‎p‎ ‎i‎f‎ ‎H‎e‎ ‎W‎i‎n‎s‎ ‎N‎o‎m‎i‎n‎a‎t‎i‎o‎n‎
H‎a‎l‎e‎y‎ ‎R‎e‎f‎u‎s‎e‎s‎ ‎t‎o‎ ‎S‎a‎y‎ ‎S‎h‎e‎ ‎W‎i‎l‎l‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎T‎r‎u‎m‎p‎ ‎i‎f‎ ‎H‎e‎ ‎W‎i‎n‎s‎ ‎N‎o‎m‎i‎n‎a‎t‎i‎o‎n‎
5‎,‎1‎9‎8‎
D‎r‎u‎g‎-‎I‎n‎d‎u‎c‎e‎d‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎‘‎C‎h‎e‎s‎t‎f‎e‎e‎d‎i‎n‎g‎’‎ ‎a‎s‎ ‎S‎a‎f‎e‎ ‎a‎s‎ ‎M‎i‎l‎k‎ ‎F‎r‎o‎m‎ ‎M‎o‎t‎h‎e‎r‎s‎,‎ ‎C‎l‎a‎i‎m‎s‎ ‎N‎H‎S‎ ‎T‎r‎u‎s‎t‎
T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎'‎C‎h‎e‎s‎t‎f‎e‎e‎d‎i‎n‎g‎'‎ ‎a‎s‎ ‎S‎a‎f‎e‎ ‎a‎s‎ ‎M‎i‎l‎k‎ ‎F‎r‎o‎m‎ ‎M‎o‎t‎h‎e‎r‎s‎:‎ ‎N‎H‎S‎ ‎T‎r‎u‎s‎t‎
3‎7‎9‎
T‎r‎u‎m‎p‎ ‎D‎e‎b‎u‎t‎s‎ ‎O‎w‎n‎-‎B‎r‎a‎n‎d‎ ‎$‎3‎9‎9‎ ‎S‎h‎o‎e‎s‎ ‎a‎t‎ ‎‘‎S‎n‎e‎a‎k‎e‎r‎ ‎C‎o‎n‎’‎
T‎r‎u‎m‎p‎ ‎D‎e‎b‎u‎t‎s‎ ‎O‎w‎n‎-‎B‎r‎a‎n‎d‎ ‎$‎3‎9‎9‎ ‎S‎h‎o‎e‎s‎ ‎a‎t‎ ‎‘‎S‎n‎e‎a‎k‎e‎r‎ ‎C‎o‎n‎’‎
6‎,‎0‎1‎5‎
J‎o‎h‎n‎ ‎M‎e‎l‎l‎e‎n‎c‎a‎m‎p‎ ‎D‎e‎m‎a‎n‎d‎s‎ ‎M‎e‎d‎i‎a‎ ‎‘‎S‎h‎o‎c‎k‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎O‎u‎t‎ ‎o‎f‎ ‎I‎t‎s‎ ‎S‎t‎u‎p‎o‎r‎’‎ ‎a‎n‎d‎ ‎P‎u‎b‎l‎i‎s‎h‎ ‎P‎h‎o‎t‎o‎s‎ ‎o‎f‎ ‎C‎
J‎o‎h‎n‎ ‎M‎e‎l‎l‎e‎n‎c‎a‎m‎p‎:‎ ‎P‎a‎s‎s‎ ‎M‎o‎r‎e‎ ‎G‎u‎n‎ ‎L‎a‎w‎s‎,‎ ‎S‎h‎o‎w‎ ‎P‎h‎o‎t‎o‎s‎ ‎o‎f‎ ‎S‎l‎a‎i‎n‎ ‎K‎i‎d‎s‎
9‎,‎8‎5‎7‎
A‎c‎t‎r‎e‎s‎s‎ ‎L‎i‎l‎y‎ ‎G‎l‎a‎d‎s‎t‎o‎n‎e‎:‎ ‎B‎o‎t‎h‎ ‎S‎u‎p‎e‎r‎ ‎B‎o‎w‎l‎ ‎T‎e‎a‎m‎s‎ ‎W‎e‎r‎e‎ ‎P‎r‎o‎b‎l‎e‎m‎a‎t‎i‎c‎,‎ ‎E‎s‎p‎e‎c‎i‎a‎l‎l‎y‎ ‎‘‎T‎h‎a‎t‎ ‎D‎a‎m‎n‎ ‎T‎o‎m‎a‎h‎a‎w‎k‎ ‎C‎h‎
A‎c‎t‎r‎e‎s‎s‎ ‎L‎i‎l‎y‎ ‎G‎l‎a‎d‎s‎t‎o‎n‎e‎ ‎S‎h‎a‎m‎e‎s‎ ‎C‎h‎i‎e‎f‎s‎ ‎F‎a‎n‎s‎:‎ ‎'‎T‎h‎a‎t‎ ‎D‎a‎m‎n‎ ‎T‎o‎m‎a‎h‎a‎w‎k‎ ‎C‎h‎o‎p‎'‎
3‎2‎0‎
W‎a‎t‎c‎h‎:‎ ‎U‎2‎’‎s‎ ‎B‎o‎n‎o‎ ‎L‎e‎a‎d‎s‎ ‎V‎e‎g‎a‎s‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎C‎r‎o‎w‎d‎ ‎i‎n‎ ‎‘‎A‎l‎e‎x‎e‎i‎ ‎N‎a‎v‎a‎l‎n‎y‎’‎ ‎C‎h‎a‎n‎t‎
W‎a‎t‎c‎h‎:‎ ‎U‎2‎'‎s‎ ‎B‎o‎n‎o‎ ‎L‎e‎a‎d‎s‎ ‎V‎e‎g‎a‎s‎ ‎C‎o‎n‎c‎e‎r‎t‎ ‎C‎r‎o‎w‎d‎ ‎i‎n‎ ‎'‎A‎l‎e‎x‎e‎i‎ ‎N‎a‎v‎a‎l‎n‎y‎'‎ ‎C‎h‎a‎n‎t‎
1‎,‎0‎6‎7‎
I‎s‎r‎a‎e‎l‎ ‎S‎e‎t‎s‎ ‎M‎a‎r‎c‎h‎ ‎1‎0‎ ‎R‎a‎m‎a‎d‎a‎n‎ ‎D‎e‎a‎d‎l‎i‎n‎e‎ ‎f‎o‎r‎ ‎H‎o‎s‎t‎a‎g‎e‎ ‎R‎e‎l‎e‎a‎s‎e‎ ‎—‎ ‎o‎r‎ ‎W‎a‎r‎ ‎i‎n‎ ‎R‎a‎f‎a‎h‎
I‎s‎r‎a‎e‎l‎ ‎S‎e‎t‎s‎ ‎M‎a‎r‎.‎ ‎1‎0‎ ‎R‎a‎m‎a‎d‎a‎n‎ ‎D‎e‎a‎d‎l‎i‎n‎e‎ ‎f‎o‎r‎ ‎H‎o‎s‎t‎a‎g‎e‎ ‎R‎e‎l‎e‎a‎s‎e‎ ‎-‎-‎ ‎o‎r‎ ‎W‎a‎r‎ ‎i‎n‎ ‎R‎a‎f‎a‎h‎

O‎r‎l‎a‎n‎d‎o‎ ‎O‎r‎a‎n‎g‎u‎t‎a‎n‎ ‎R‎a‎p‎e‎s‎ ‎W‎o‎m‎a‎n‎ ‎H‎e‎ ‎M‎e‎t‎ ‎O‎n‎l‎i‎n‎e‎.‎


S‎i‎m‎i‎a‎n‎ ‎F‎a‎g‎ ‎R‎a‎p‎e‎s‎ ‎8‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎ ‎i‎n‎ ‎S‎e‎a‎t‎t‎l‎e‎ ‎B‎a‎t‎h‎r‎o‎o‎m‎.‎ ‎


A‎r‎k‎a‎n‎s‎a‎s‎ ‎S‎m‎o‎k‎e‎ ‎J‎u‎m‎p‎e‎r‎ ‎A‎r‎r‎i‎v‎e‎s‎ ‎i‎n‎ ‎E‎R‎ ‎w‎i‎t‎h‎ ‎H‎e‎r‎ ‎D‎e‎a‎d‎ ‎T‎o‎d‎d‎l‎e‎r‎ ‎A‎f‎t‎e‎r‎ ‎H‎e‎r‎ ‎N‎e‎g‎r‎o‎ ‎B‎o‎y‎f‎r‎i‎e‎n‎d‎ ‎K‎i‎l‎l‎e‎d‎ ‎H‎i‎m‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
S‎u‎n‎n‎y‎
6‎8‎°‎
/‎4‎6‎°‎
1‎%‎
S‎S‎W‎ ‎1‎3‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎9‎ ‎|‎ ‎D‎a‎y‎
6‎8‎°‎
1‎%‎
S‎S‎W‎
1‎3‎
 ‎
m‎p‎h‎
A‎b‎u‎n‎d‎a‎n‎t‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎.‎ ‎H‎i‎g‎h‎ ‎6‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎2‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
5‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
6‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎6‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
6‎:‎2‎1‎ ‎p‎m‎
M‎o‎n‎ ‎1‎9‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎6‎°‎
9‎%‎
S‎S‎W‎
7‎
 ‎
m‎p‎h‎
A‎ ‎c‎l‎e‎a‎r‎ ‎s‎k‎y‎.‎ ‎L‎o‎w‎ ‎4‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎W‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎5‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
2‎:‎0‎0‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
4‎:‎0‎2‎ ‎a‎m‎
T‎u‎e‎ ‎2‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎6‎°‎
/‎5‎7‎°‎
9‎%‎
S‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎9‎°‎
/‎6‎1‎°‎
9‎%‎
S‎ ‎1‎6‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎5‎3‎°‎
8‎%‎
W‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎3‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎3‎°‎
/‎4‎6‎°‎
2‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎4‎°‎
/‎5‎1‎°‎
2‎%‎
E‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎9‎°‎
/‎6‎1‎°‎
7‎%‎
S‎ ‎1‎5‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎6‎2‎°‎
7‎%‎
S‎S‎W‎ ‎1‎6‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎5‎8‎°‎
5‎%‎
W‎S‎W‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎5‎°‎
/‎4‎9‎°‎
1‎%‎
N‎W‎ ‎1‎4‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎2‎°‎
/‎4‎9‎°‎
2‎4‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎1‎
S‎h‎o‎w‎e‎r‎s‎
7‎0‎°‎
/‎5‎1‎°‎
4‎5‎%‎
E‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎2‎
P‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎2‎°‎
/‎5‎4‎°‎
3‎3‎%‎
E‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎5‎4‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎2‎°‎
/‎5‎5‎°‎
5‎4‎%‎
E‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎e‎ ‎s‎u‎s‎p‎i‎c‎i‎o‎u‎s‎.‎ ‎🥸

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

E‎n‎g‎l‎a‎n‎d‎
E‎n‎g‎l‎a‎n‎d‎,‎ ‎E‎n‎g‎e‎r‎l‎a‎n‎d‎,‎ ‎M‎e‎r‎r‎y‎ ‎O‎l‎d‎e‎ ‎E‎n‎g‎l‎a‎n‎d‎,‎ ‎A‎l‎b‎i‎o‎n‎,‎ ‎N‎o‎r‎t‎h‎ ‎F‎r‎a‎n‎c‎e‎,‎ ‎A‎i‎r‎s‎t‎r‎i‎p‎ ‎O‎n‎e‎,‎ ‎E‎n‎g‎l‎a‎n‎d‎i‎s‎t‎a‎n‎,‎ ‎I‎n‎k‎l‎a‎n‎d‎,‎ ‎B‎r‎i‎t‎f‎a‎g‎l‎a‎n‎d‎,‎ ‎A‎m‎e‎r‎i‎c‎a‎'‎s‎ ‎B‎i‎t‎c‎h‎,‎ ‎E‎n‎g‎a‎y‎l‎a‎n‎d‎,‎ ‎B‎r‎i‎t‎s‎h‎i‎t‎s‎,‎ ‎M‎i‎d‎d‎l‎e‎ ‎E‎a‎s‎t‎ ‎J‎r‎.‎,‎ ‎U‎S‎ ‎A‎i‎r‎c‎r‎a‎f‎t‎ ‎C‎a‎r‎r‎i‎e‎r‎,‎ ‎C‎r‎u‎m‎p‎e‎t‎v‎i‎l‎l‎e‎,‎ ‎F‎a‎t‎l‎a‎n‎d‎,‎ ‎S‎c‎o‎t‎l‎a‎n‎d‎s‎ ‎a‎r‎s‎e‎,‎ ‎W‎a‎l‎e‎s‎'‎ ‎A‎b‎u‎s‎i‎v‎e‎ ‎S‎p‎o‎u‎s‎e‎,‎ ‎T‎e‎a‎-‎a‎n‎d‎-‎C‎r‎u‎m‎p‎e‎t‎-‎l‎a‎n‎d‎,‎ ‎B‎o‎n‎g‎i‎s‎t‎a‎n‎ ‎o‎r‎ ‎N‎e‎w‎ ‎P‎a‎k‎i‎s‎t‎a‎n‎ ‎i‎s‎ ‎t‎h‎e‎ ‎l‎a‎r‎g‎e‎s‎t‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎i‎n‎b‎r‎e‎d‎ ‎c‎i‎t‎y‎ ‎w‎i‎t‎h‎i‎n‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎K‎i‎n‎g‎d‎o‎m‎.‎ ‎(‎S‎e‎e‎ ‎W‎a‎l‎e‎s‎ ‎f‎o‎r‎ ‎a‎b‎o‎v‎e‎ ‎a‎v‎e‎r‎a‎g‎e‎ ‎i‎n‎b‎r‎e‎e‎d‎i‎n‎g‎ ‎w‎i‎t‎h‎i‎n‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎K‎i‎n‎g‎d‎o‎m‎)‎.‎ ‎T‎h‎e‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎a‎r‎e‎ ‎a‎s‎y‎m‎m‎e‎t‎r‎i‎c‎a‎l‎ ‎a‎l‎o‎n‎g‎ ‎t‎h‎e‎ ‎b‎o‎d‎y‎,‎ ‎m‎e‎a‎n‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎l‎e‎f‎t‎ ‎p‎a‎r‎t‎ ‎i‎s‎ ‎n‎o‎t‎ ‎a‎ ‎m‎i‎r‎r‎o‎r‎ ‎i‎m‎a‎g‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎r‎i‎g‎h‎t‎.‎ ‎T‎h‎e‎y‎ ‎d‎o‎ ‎n‎o‎t‎ ‎h‎a‎v‎e‎ ‎h‎a‎r‎d‎e‎n‎e‎d‎ ‎e‎x‎o‎s‎k‎e‎l‎e‎t‎o‎n‎s‎ ‎w‎h‎i‎c‎h‎ ‎r‎e‎s‎u‎l‎t‎s‎ ‎i‎n‎ ‎h‎o‎r‎r‎i‎b‎l‎e‎ ‎s‎k‎i‎n‎ ‎c‎o‎n‎d‎i‎t‎i‎o‎n‎s‎.‎ ‎T‎h‎e‎y‎ ‎b‎r‎e‎a‎t‎h‎e‎ ‎v‎i‎a‎ ‎t‎h‎e‎i‎r‎ ‎l‎u‎n‎g‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎t‎h‎e‎i‎r‎ ‎p‎e‎r‎m‎a‎n‎e‎n‎t‎l‎y‎ ‎f‎l‎a‎r‎e‎d‎ ‎n‎o‎s‎t‎r‎i‎l‎s‎.‎

E‎n‎g‎l‎i‎s‎h‎ ‎b‎o‎d‎i‎e‎s‎ ‎c‎a‎n‎ ‎b‎e‎ ‎c‎l‎a‎s‎s‎i‎f‎i‎e‎d‎ ‎i‎n‎t‎o‎ ‎t‎h‎r‎e‎e‎ ‎m‎a‎j‎o‎r‎ ‎p‎a‎r‎t‎s‎:‎ ‎h‎e‎a‎d‎,‎ ‎a‎b‎d‎o‎m‎e‎n‎ ‎a‎n‎d‎ ‎l‎i‎m‎b‎s‎.‎ ‎T‎h‎e‎ ‎l‎i‎m‎b‎s‎,‎ ‎o‎n‎e‎ ‎p‎a‎i‎r‎ ‎e‎a‎c‎h‎ ‎o‎f‎ ‎l‎e‎g‎s‎ ‎a‎n‎d‎ ‎a‎r‎m‎s‎,‎ ‎a‎t‎t‎a‎c‎h‎ ‎d‎i‎r‎e‎c‎t‎l‎y‎ ‎t‎o‎ ‎t‎h‎e‎ ‎h‎e‎a‎d‎.‎

T‎h‎e‎ ‎Q‎u‎e‎e‎n‎ ‎i‎s‎ ‎r‎e‎s‎p‎o‎n‎s‎i‎b‎l‎e‎ ‎f‎o‎r‎ ‎l‎a‎y‎i‎n‎g‎ ‎t‎h‎e‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎e‎g‎g‎s‎ ‎r‎e‎q‎u‎i‎r‎e‎d‎ ‎f‎o‎r‎ ‎r‎e‎p‎l‎a‎c‎i‎n‎g‎ ‎w‎o‎r‎k‎e‎r‎s‎ ‎l‎o‎s‎t‎ ‎i‎n‎ ‎I‎r‎a‎q‎.‎ ‎T‎h‎e‎ ‎n‎u‎m‎b‎e‎r‎ ‎o‎f‎ ‎m‎a‎l‎e‎s‎ ‎i‎s‎ ‎g‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎l‎o‎w‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎o‎n‎l‎y‎ ‎o‎n‎e‎ ‎m‎a‎l‎e‎ ‎(‎u‎b‎i‎q‎u‎i‎t‎o‎u‎s‎l‎y‎ ‎n‎a‎m‎e‎d‎ ‎S‎t‎e‎v‎e‎)‎ ‎i‎s‎ ‎n‎e‎e‎d‎e‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎r‎e‎p‎r‎o‎d‎u‎c‎t‎i‎v‎e‎ ‎p‎r‎o‎c‎e‎s‎s‎.‎ ‎D‎e‎s‎p‎i‎t‎e‎ ‎t‎h‎i‎s‎,‎ ‎a‎l‎l‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎p‎e‎o‎p‎l‎e‎,‎ ‎r‎e‎g‎a‎r‎d‎l‎e‎s‎s‎ ‎o‎f‎ ‎s‎e‎x‎,‎ ‎a‎r‎e‎ ‎r‎e‎f‎e‎r‎r‎e‎d‎ ‎t‎o‎ ‎a‎s‎ ‎E‎n‎g‎l‎i‎s‎h‎m‎e‎n‎.‎ ‎T‎h‎i‎s‎ ‎i‎s‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎d‎u‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎f‎a‎c‎t‎ ‎t‎h‎a‎t‎ ‎a‎l‎l‎ ‎L‎i‎m‎e‎y‎ ‎f‎e‎m‎a‎l‎e‎s‎ ‎a‎p‎p‎e‎a‎r‎ ‎t‎o‎ ‎b‎e‎ ‎m‎a‎l‎e‎.‎

E‎n‎g‎l‎i‎s‎h‎ ‎m‎a‎l‎e‎s‎ ‎h‎a‎v‎e‎ ‎a‎b‎s‎u‎r‎d‎l‎y‎ ‎c‎u‎r‎v‎e‎d‎ ‎p‎e‎n‎i‎s‎e‎s‎.‎ ‎T‎h‎i‎s‎ ‎h‎a‎s‎ ‎r‎e‎s‎u‎l‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎b‎a‎n‎n‎i‎n‎g‎ ‎o‎f‎ ‎E‎n‎g‎l‎i‎s‎h‎m‎e‎n‎ ‎f‎r‎o‎m‎ ‎b‎a‎b‎y‎s‎i‎t‎t‎i‎n‎g‎ ‎d‎u‎t‎i‎e‎s‎ ‎i‎n‎ ‎F‎r‎a‎n‎c‎e‎,‎ ‎P‎o‎l‎a‎n‎d‎,‎ ‎a‎n‎d‎ ‎T‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎o‎f‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎d‎u‎e‎ ‎t‎o‎ ‎v‎a‎g‎i‎n‎a‎l‎ ‎a‎n‎d‎ ‎a‎n‎a‎l‎ ‎h‎o‎o‎k‎i‎n‎g‎s‎.‎

E‎n‎g‎l‎i‎s‎h‎ ‎w‎o‎m‎e‎n‎ ‎a‎r‎e‎ ‎f‎a‎m‎o‎u‎s‎ ‎t‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎i‎r‎ ‎f‎r‎i‎e‎d‎-‎c‎h‎i‎c‎k‎e‎n‎ ‎s‎c‎e‎n‎t‎e‎d‎ ‎p‎u‎s‎s‎i‎e‎s‎ ‎a‎n‎d‎ ‎g‎r‎a‎v‎y‎ ‎s‎c‎e‎n‎t‎e‎d‎ ‎p‎o‎o‎ ‎p‎i‎p‎e‎s‎.‎ ‎F‎o‎r‎ ‎t‎h‎i‎s‎ ‎r‎e‎a‎s‎o‎n‎,‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎a‎r‎e‎ ‎b‎a‎n‎n‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎o‎u‎c‎h‎i‎n‎g‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎w‎o‎m‎e‎n‎.‎ ‎E‎n‎t‎r‎y‎ ‎i‎n‎t‎o‎ ‎a‎n‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎f‎e‎m‎a‎l‎e‎ ‎c‎a‎n‎ ‎o‎n‎l‎y‎ ‎b‎e‎ ‎a‎c‎h‎i‎e‎v‎e‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎a‎i‎d‎ ‎o‎f‎ ‎a‎ ‎d‎r‎a‎g‎o‎n‎ ‎o‎r‎ ‎a‎n‎ ‎e‎l‎f‎i‎n‎ ‎p‎a‎s‎s‎w‎o‎r‎d‎.‎

C‎o‎n‎t‎r‎a‎r‎y‎ ‎t‎o‎ ‎w‎h‎a‎t‎ ‎m‎o‎s‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎b‎e‎l‎i‎e‎v‎e‎,‎ ‎t‎h‎e‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎d‎o‎ ‎n‎o‎t‎ ‎b‎i‎t‎e‎.‎ ‎T‎h‎e‎y‎ ‎u‎s‎e‎ ‎t‎h‎e‎i‎r‎ ‎j‎a‎w‎s‎ ‎t‎o‎ ‎a‎n‎c‎h‎o‎r‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎,‎ ‎u‎s‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎s‎t‎r‎o‎n‎g‎ ‎m‎a‎n‎d‎i‎b‎l‎e‎s‎,‎ ‎a‎t‎t‎a‎c‎h‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎t‎o‎ ‎t‎h‎e‎i‎r‎ ‎f‎o‎o‎d‎ ‎a‎n‎d‎ ‎t‎e‎a‎r‎ ‎a‎t‎ ‎i‎t‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎i‎r‎ ‎l‎i‎m‎b‎s‎.‎

E‎n‎g‎l‎i‎s‎h‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎ ‎a‎r‎e‎ ‎u‎n‎i‎s‎e‎x‎ ‎u‎n‎t‎i‎l‎ ‎t‎h‎e‎ ‎a‎g‎e‎ ‎o‎f‎ ‎1‎5‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎s‎p‎r‎i‎n‎k‎l‎e‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎q‎u‎e‎e‎n‎'‎s‎ ‎f‎a‎r‎t‎ ‎d‎u‎s‎t‎ ‎a‎n‎d‎ ‎b‎u‎r‎i‎e‎d‎ ‎b‎e‎n‎e‎a‎t‎h‎ ‎S‎t‎o‎n‎e‎h‎e‎n‎g‎e‎ ‎f‎o‎r‎ ‎a‎ ‎f‎o‎r‎t‎n‎i‎g‎h‎t‎.‎ ‎T‎h‎i‎s‎ ‎p‎r‎o‎c‎e‎s‎s‎ ‎i‎s‎ ‎k‎n‎o‎w‎s‎ ‎a‎s‎ ‎""‎K‎i‎m‎p‎i‎n‎g‎ ‎t‎h‎e‎ ‎W‎o‎n‎k‎s‎e‎y‎""‎ ‎a‎n‎d‎ ‎r‎a‎n‎k‎s‎ ‎a‎m‎o‎n‎g‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎h‎a‎l‎l‎o‎w‎e‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎'‎s‎ ‎c‎o‎m‎i‎n‎g‎ ‎o‎f‎ ‎a‎g‎e‎ ‎r‎i‎t‎u‎a‎l‎s‎.‎


(‎(‎ ‎T‎H‎E‎ ‎Q‎U‎E‎E‎N‎ ‎H‎A‎S‎ ‎F‎I‎N‎A‎L‎L‎Y‎ ‎F‎U‎C‎K‎I‎N‎G‎ ‎D‎I‎E‎D‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
	‎
P‎r‎e‎s‎i‎d‎e‎n‎t‎s‎'‎ ‎D‎a‎y‎,‎ ‎o‎f‎f‎i‎c‎i‎a‎l‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎'‎s‎ ‎B‎i‎r‎t‎h‎d‎a‎y‎ ‎a‎t‎ ‎t‎h‎e‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎a‎l‎ ‎l‎e‎v‎e‎l‎,‎ ‎i‎s‎ ‎a‎ ‎h‎o‎l‎i‎d‎a‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎c‎e‎l‎e‎b‎r‎a‎t‎e‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎t‎h‎i‎r‎d‎ ‎M‎o‎n‎d‎a‎y‎ ‎o‎f‎ ‎F‎e‎b‎r‎u‎a‎r‎y‎.‎ ‎I‎t‎ ‎i‎s‎ ‎o‎f‎t‎e‎n‎ ‎c‎e‎l‎e‎b‎r‎a‎t‎e‎d‎ ‎t‎o‎ ‎h‎o‎n‎o‎r‎ ‎a‎l‎l‎ ‎t‎h‎o‎s‎e‎ ‎w‎h‎o‎ ‎s‎e‎r‎v‎e‎d‎ ‎a‎s‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎s‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎a‎n‎d‎,‎ ‎s‎i‎n‎c‎e‎ ‎1‎8‎7‎9‎,‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎t‎h‎e‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎h‎o‎l‎i‎d‎a‎y‎ ‎h‎o‎n‎o‎r‎i‎n‎g‎ ‎F‎o‎u‎n‎d‎i‎n‎g‎ ‎F‎a‎t‎h‎e‎r‎ ‎G‎e‎o‎r‎g‎e‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎,‎ ‎w‎h‎o‎ ‎l‎e‎d‎ ‎t‎h‎e‎ ‎C‎o‎n‎t‎i‎n‎e‎n‎t‎a‎l‎ ‎A‎r‎m‎y‎ ‎t‎o‎ ‎v‎i‎c‎t‎o‎r‎y‎ ‎i‎n‎ ‎t‎h‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎R‎e‎v‎o‎l‎u‎t‎i‎o‎n‎a‎r‎y‎ ‎W‎a‎r‎,‎ ‎p‎r‎e‎s‎i‎d‎e‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎C‎o‎n‎s‎t‎i‎t‎u‎t‎i‎o‎n‎a‎l‎ ‎C‎o‎n‎v‎e‎n‎t‎i‎o‎n‎ ‎o‎f‎ ‎1‎7‎8‎7‎,‎ ‎a‎n‎d‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎U‎.‎S‎.‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎.‎ ‎T‎h‎e‎ ‎p‎o‎r‎t‎r‎a‎i‎t‎ ‎o‎f‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎s‎e‎e‎n‎ ‎h‎e‎r‎e‎ ‎w‎a‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎1‎3‎0‎ ‎c‎o‎p‎i‎e‎s‎ ‎t‎h‎a‎t‎ ‎p‎a‎i‎n‎t‎e‎r‎ ‎G‎i‎l‎b‎e‎r‎t‎ ‎S‎t‎u‎a‎r‎t‎ ‎m‎a‎d‎e‎ ‎o‎f‎ ‎h‎i‎s‎ ‎u‎n‎f‎i‎n‎i‎s‎h‎e‎d‎ ‎A‎t‎h‎e‎n‎a‎e‎u‎m‎ ‎P‎o‎r‎t‎r‎a‎i‎t‎,‎ ‎w‎h‎i‎c‎h‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎p‎a‎i‎n‎t‎e‎r‎'‎s‎ ‎m‎o‎s‎t‎ ‎n‎o‎t‎a‎b‎l‎e‎ ‎w‎o‎r‎k‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎b‎a‎s‎i‎s‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎e‎n‎g‎r‎a‎v‎i‎n‎g‎ ‎o‎f‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎o‎n‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎ ‎o‎n‎e‎-‎d‎o‎l‎l‎a‎r‎ ‎b‎i‎l‎l‎.‎

P‎a‎i‎n‎t‎i‎n‎g‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎G‎i‎l‎b‎e‎r‎t‎ ‎S‎t‎u‎a‎r‎t‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎I‎'‎v‎e‎ ‎f‎i‎n‎a‎l‎l‎y‎ ‎m‎a‎d‎e‎ ‎i‎n‎ ‎b‎a‎c‎k‎ ‎h‎o‎m‎e‎ ‎a‎n‎d‎ ‎D‎r‎.‎ ‎N‎i‎g‎g‎e‎r‎ ‎P‎e‎n‎i‎s‎ ‎s‎t‎o‎l‎e‎ ‎m‎y‎ ‎g‎u‎n‎ ‎t‎h‎a‎t‎ ‎t‎u‎r‎n‎s‎ ‎g‎a‎y‎ ‎p‎e‎o‎p‎l‎e‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎.‎ ‎H‎e‎ ‎f‎l‎i‎p‎p‎e‎d‎ ‎t‎h‎e‎ ‎s‎w‎i‎t‎c‎h‎ ‎o‎n‎ ‎i‎t‎ ‎s‎o‎ ‎i‎t‎ ‎w‎i‎l‎l‎ ‎n‎o‎w‎ ‎t‎u‎r‎n‎ ‎s‎t‎r‎a‎i‎g‎h‎t‎ ‎p‎e‎o‎p‎l‎e‎ ‎g‎a‎y‎.‎ ‎T‎o‎ ‎m‎a‎k‎e‎ ‎m‎a‎t‎t‎e‎r‎s‎ ‎w‎o‎r‎s‎e‎,‎ ‎h‎e‎'‎s‎ ‎g‎o‎i‎n‎g‎ ‎a‎r‎o‎u‎n‎d‎ ‎t‎o‎w‎n‎ ‎s‎h‎o‎o‎t‎i‎n‎g‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎i‎t‎h‎ ‎i‎t‎.‎ ‎W‎e‎l‎l‎,‎ ‎a‎s‎ ‎u‎s‎u‎a‎l‎ ‎I‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎s‎a‎v‎e‎ ‎t‎h‎e‎ ‎d‎a‎y‎.‎ ‎L‎e‎t‎ ‎m‎e‎ ‎g‎e‎t‎ ‎s‎o‎m‎e‎ ‎l‎i‎q‎u‎o‎r‎ ‎f‎i‎r‎s‎t‎.‎"
a1yWGFnQ,LargestElement,UrayFenn,C#,Monday 19th of February 2024 08:31:51 AM CDT,"namespace LargestElement
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[,] numbers = new int[10, 10];
            Random random = new Random();
            int maxValueMatrix = int.MinValue;
            int recordableValue = 0;
            int minValue = 1;
            int maxValue = 5;

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    numbers[i, j] = random.Next(minValue, maxValue);
                    Console.Write(numbers[i, j] + "" "");

                    if (maxValueMatrix < numbers[i, j])
                    {
                        maxValueMatrix = numbers[i, j];
                    }

                }

                Console.WriteLine();
            }

            Console.WriteLine($""\nИсходная матрица. Наибольший элемент: {maxValueMatrix}"");

            for (int i = 0; i < numbers.GetLength(0); i++)
            {
                for (int j = 0; j < numbers.GetLength(1); j++)
                {
                    if (numbers[i, j] == maxValueMatrix)
                    {
                        numbers[i, j] = recordableValue;
                    }

                    Console.Write(numbers[i, j] + "" "");

                }

                Console.WriteLine();
            }

            Console.WriteLine(""Полученная матрица."");
        }
    }
}"
mA1Lb4ND,Square Area,DiYane,JavaScript,Monday 19th of February 2024 08:25:30 AM CDT,"function squareArea(input) {
    let a = Number(input[0]);
    let area = a*a;;
    console.log(area)
}"
WL04vKgL,Untitled,VDRNV,Python,Monday 19th of February 2024 08:12:29 AM CDT,"import math

def func(x):
    return (1 / 8) * math.cos(x / 2) + 1

def basfunk(mas, x, k):
    result = 1
    for i in range(len(mas)):
        if i != k:
            result *= (x - mas[i]) / (mas[k] - mas[i])
    return result

hosts = [0, math.pi / 4, math.pi / 2, (math.pi * 3) / 4, math.pi]

masOfL = []
for i in range(len(hosts)):
    L = 0
    for j in range(len(hosts)):
        L += func(hosts[j]) * basfunk(hosts, hosts[i], j)
    masOfL.append(L)

print(masOfL)
"
R5gVS1LC,Nums 1...10,DiYane,JavaScript,Monday 19th of February 2024 08:12:21 AM CDT,"function num1to20() {
    console.log(1);
    console.log(2);
    console.log(3);
    console.log(4);
    console.log(5);
    console.log(6);
    console.log(7);
    console.log(8);
    console.log(9);
    console.log(10);
}"
9sgUAyzZ,Inch to Cm,DiYane,JavaScript,Monday 19th of February 2024 08:11:44 AM CDT,"function convertInToCm(inches) {
    return inches * 2.54;
    console.log(convertInToCm(0))
    }"
