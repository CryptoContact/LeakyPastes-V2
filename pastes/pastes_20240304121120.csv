id,title,username,language,date,content
wnAn2wfz,G2A.com Free Gift Card Guide Mar 2024,ounnuo,GetText,Monday 4th of March 2024 06:02:57 AM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_424020.pdf

Working as of:
04 March 2024"
BQASTUu7,data859,TestGuy1,JSON,Monday 4th of March 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '6ba372c4a296ccd82f6f496378f9668480c9f326ef5069998dcac30a4a1c5820494cd18575e22167463438db23cedfce2b33814988f2fd96f0aba0652c4efdcf064537b592b6e9a24d2ca201a5a00cb4f88e523045cfa540fdad0e360ca97e22153e560ecaf2734244fc6ed9a0bf4e530d02120cc8378bb14448b62c5e048fc7',
  otherdata: [
    'a2cbd7214fbef50e34155b2dff73163e',
    '32639a568c7980119f77a68398c61ab0',
    '7b49849637c26302fdf5cd8397f5062f',
    '8e263e9056965bb0d23d90b175d1f016',
    '3a21762ed82b823fe1d4d683d79829a4',
    'afeb275409c6d21d3c33b75ce2650b6f',
    'ab5a954bc0f8d2327de73608d244372f',
    '33ee0be942b20837d3bebe26ddda2efe'
  ]
}"
Aq4ET1wQ,Translator,Ra3Valik,PHP,Monday 4th of March 2024 05:21:35 AM CDT,"$api_key = get_option('deepl_api_key');
$text = 'This is the text that needs to be translated';

$translator = new Translator($api_key);

$result = $translator->translate_text($text, 'RU');

// пример того, что будет в $result

// Если всё хорошо
[
	'status' => 'success',
	'translated_text' => 'Вот текст, который необходимо перевести'
];

// Если что-то пошло не так
[
	'status' => 'error',
	'message' => 'Error message'
];"
7GzJPB9K,Untitled,mark-naylor-1701,Lisp,Monday 4th of March 2024 05:02:54 AM CDT,"(defun multi-yank (n)
  ""Yank the head of the kill-ring n times.""
  (interactive ""p"")
  (dotimes (_ n) (yank)))
"
F2YFaSbp,sch python generate many PDF from an image and a CSV,plirof2,JavaScript,Monday 4th of March 2024 04:52:21 AM CDT,"You can achieve this using a programming language like Python and a library like ReportLab for generating PDFs. Here's a basic outline of how you can accomplish this:

Load your image and CSV file containing the names into your Python script.
Use ReportLab to open a new PDF file and add the image onto each page.
Iterate through each name in the CSV file, add the name onto the image, and save the PDF file with the corresponding name.
Below is a sample code snippet to get you started:

 
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter
from reportlab.lib.units import inch
from reportlab.pdfbase.ttfonts import TTFont
from reportlab.pdfbase import pdfmetrics
import csv

# Load image
image_path = 'your_image.jpg'

# Load CSV file
csv_file = 'your_names.csv'

# Function to generate PDF with name
def generate_pdf(name):
    c = canvas.Canvas(f'{name}.pdf', pagesize=letter)
    c.drawImage(image_path, 0, 0, width=8.5*inch, height=11*inch)
    c.setFont(""Helvetica"", 12)
    c.drawString(100, 100, name)
    c.save()

# Main function
def main():
    # Load names from CSV file
    with open(csv_file, 'r') as file:
        reader = csv.reader(file)
        for row in reader:
            name = row[0]
            generate_pdf(name)

if __name__ == '__main__':
    main()
Replace your_image.jpg with the path to your image and your_names.csv with the path to your CSV file containing names. This script will generate a PDF file for each name in your CSV list with the name added onto the image. You may need to adjust the positioning of the name on the image to suit your needs.

Make sure to install ReportLab library, you can do it by running pip install reportlab command."
pSXkwaM9,Review TMGM,fxvnpro,PHP,Monday 4th of March 2024 04:49:38 AM CDT,https://www.fxvnpro.com/review-tmgm/
5uv4VgZc,Untitled,Diaxon,PHP,Monday 4th of March 2024 04:32:30 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
</head>
<body>
1. Wyświetl dane tekstowe z formularza w postaci drukowanych liter. Biorąc pod uwagę błędy przy odświeżaniu (pusty formularz).
    <form action=""index3.php"" method=""POST"">
        <input type=""text"" name=""text"">
        <button type=""submit"" value=""TEST"">Submit</button>
        
        <?php
        if (isset($_POST[""text""])){
            if (empty($_POST[""text""])){
                echo ""Wprowadź dane do formularza"";
            }
            echo strtoupper($_POST[""text""]);
        } 
        ?>
    </form>
Dodaj do zadania poprzedniego funkcję, która będzie zliczała liczbę znaków wprowadzonych do formularza. Jeżeli liczba znaków wprowadzonych wyniesie mniej niż 5 wyświetl stosowny komunikat.
    <form action=""index3.php"" method=""POST"">
        <input type=""text"" name=""text"">
        <button type=""submit"" value=""TEST"">Submit</button>

        <?php
        if (isset($_POST[""text""])){
            if (empty($_POST[""text""])){
                echo ""Wprowadź dane do formularza"";
            }
            $text_lenght = strlen($_POST[""text""]);
            if ($text_lenght <= 5){
                echo ""dlugosc jest mniejsza niz 5"";
            } else {
                echo ""ilość znaków: "" . $text_lenght;
            }
        }
        ?>
    </form>

    Zbuduj formularz w HTML, do którego wprowadzisz dwie liczby. Następnie wykonaj
wybrane przez Ciebie działanie matematyczne na wprowadzonych liczbach. Skrypt wyświetla
wynik oraz sprawdza czy formularze posiadają dane.


    <form action=""index3.php"" method=""POST"">
        <input type=""number"" name=""a"" />
        <input type=""number"" name=""b"" />
        <button type=""submit"" value=""TEST"">Submit</button>

        <?php
        if (isset($_POST[""a""]) && isset($_POST[""b""])){
            $a = $_POST[""a""];
            $b = $_POST[""b""];
            echo ""<br>"";
            echo ""Dodawanie: "". $a + $b;
            echo ""<br>"";
            echo ""Odejmowanie: "". $a-$b;
            echo ""<br>"";
            echo ""Mnożenie: "". $a * $b;
            echo ""<br>"";
            echo ""Dzielenie: "". $a / $b;

        }
        ?>

    </form>

    Edytuj skrypt z zadania 2. Tak aby użytkownik mógł wybrać z listy rozwijanej jakie działanie matematyczne wykona na wprowadzonych liczbach.
    <form action=""index3.php"" method=""POST"">
        <input type=""number"" name=""a"" />
        <select name=""cars"">
            <option value=""+"">+</option>
            <option value=""-"">-</option>
            <option value=""*"">*</option>
            <option value=""/"">/</option>
        </select>
        <input type=""number"" name=""b"" />
        <button type=""submit"" value=""TEST"">Submit</button>

        <?php
        if (isset($_POST[""cars""])){
            $a = $_POST[""a""];
            $b = $_POST[""b""];
            $cars = $_POST[""cars""];
            
            $result = null;
            switch ($cars) {
                case '+':
                    $result = $a + $b;
                    break;
                case '-':
                    $result = $a - $b;
                    break;
                case '*':
                    $result = $a * $b;
                    break;
                case '/':
                    $result = $a / $b;
                    break;
            }
            echo ""wynik: $result"";
        }
        ?>
    </form>
Zbuduj skrypt, za pomocą, którego wprowadzisz dwie liczby do formularza. Skrypt powinien generować liczby z podanego zakresu.
    <form action=""index3.php"" method=""POST"">
        <input type=""number"" name=""a"" />
        <input type=""number"" name=""b"" />
        <button type=""submit"">TEST</button>

        <?php
            if (isset($_POST[""a""]) && isset($_POST[""b""])){
                $a = $_POST[""a""];
                $b = $_POST[""b""];
    
                for ($i=$a;$i<=$b;$i++){
                    echo ""$i "";
                }
            }
        ?>
    </form>

    Wprowadź do zmiennej $haslo i $user dane użytkownika. Następnie utwórz formularz,
    który przeniesie użytkownika na inną stroną za pomocą INCLUDE jeżeli wpisane dane będą
    zgodne z tymi w zmiennych.

    <form action=""index3.php"" method=""POST"">
            <label>Username</label>
            <input type=""text"" name=""username"">
            <label>Password</label>
            <input type=""password"" name=""password"">
            <button type=""submit"">TEST</button>
    </form>
    <?php
        $username=""foo"";
        $password = ""bar"";
        if (isset($_POST['username']) && isset($_POST['password'])){
            if ($_POST['username'] == $username && $_POST['password'] == $password){
                include ""index.php"";
            } else {
                echo ""error"";
            } 
        }
    ?>

    Zbuduj formularz za pomocą, którego z listy rozwijanej będziesz mógł wybierać kolor strony i czcionki.



    <form action=""index3.php"" method=""POST"">
        <label for=""color"">Select Color:</label>
        <select name=""color"" id=""color"">
            <option value=""red"">Red</option>
            <option value=""blue"">Blue</option>
            <option value=""green"">Green</option>
        </select>

        <br>

        <label for=""font"">Select Font:</label>
        <select name=""font"" id=""font"">
            <option value=""Arial"">Arial</option>
            <option value=""Times New Roman"">Times New Roman</option>
            <option value=""Verdana"">Verdana</option>
        </select>

        <br>

        <button type=""submit"">Apply</button>
    </form>

    <?php
        if (isset($_POST[""color""]) && isset($_POST[""font""])) {
            $color = $_POST[""color""];
            $font = $_POST[""font""];

            echo ""<h2 style='color: $color; font-family: $font;'>Selected Color: $color</h2>"";
        }
    ?>




</body>
</html>"
b4iPJNth,Repos,sidneystreith1985,Bash,Monday 4th of March 2024 04:22:27 AM CDT,"wget -qO - 'https://proget.makedeb.org/debian-feeds/makedeb.pub' | gpg --dearmor | sudo tee /usr/share/keyrings/makedeb-archive-keyring.gpg 1> /dev/null
echo 'deb [signed-by=/usr/share/keyrings/makedeb-archive-keyring.gpg arch=all] https://proget.makedeb.org/ makedeb main' | sudo tee /etc/apt/sources.list.d/makedeb.list
sudo apt update

wget -qO - 'https://proget.makedeb.org/debian-feeds/prebuilt-mpr.pub' | gpg --dearmor | sudo tee /usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg 1> /dev/null
echo ""deb [arch=all,$(dpkg --print-architecture) signed-by=/usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg] https://proget.makedeb.org prebuilt-mpr $(lsb_release -cs)"" | sudo tee /etc/apt/sources.list.d/prebuilt-mpr.list
sudo apt update

"
BbVY9dfU,Untitled,Frun36,C++,Monday 4th of March 2024 03:55:37 AM CDT,"#include <cstddef>
#include <iomanip>
#include <iostream>
#include <utility>

typedef long double Float;

static constexpr Float COEFF = 3.;
static constexpr size_t K = 45;

std::pair<Float, Float> ascending(Float prev, Float curr, size_t curr_index);
std::pair<Float, Float> descending(Float curr, Float next, size_t curr_index);
Float get_next(Float prev, Float curr);
Float get_prev(Float curr, Float next);

int main() {
    std::cout << std::scientific;

    auto ascending_res = ascending(1., 1. / COEFF, 1);
    Float x_45 = std::get<0>(ascending_res);
    Float x_46 = std::get<1>(ascending_res);
    std::cout << ""x_45 = "" << x_45 << "" x_46 = "" << x_46 << ""\n"";

    auto descending_res = descending(x_45, x_46, 45);
    Float x_0 = std::get<0>(descending_res);
    Float x_1 = std::get<1>(descending_res);
    std::cout << ""x_0 = "" << x_0 << "" x_1 = "" << x_1 << ""\n"";
}

Float get_next(Float prev, Float curr) {
    return (10. * curr - prev * COEFF) / COEFF;
}

Float get_prev(Float curr, Float next) {
    return (10. * curr - next * COEFF) / COEFF;
}

std::pair<Float, Float> ascending(Float prev, Float curr, size_t curr_index) {
    if (curr_index == K + 1) {
        return std::make_pair(prev, curr);
    } else {
        return ascending(curr, get_next(prev, curr), curr_index + 1);
    }
}

std::pair<Float, Float> descending(Float curr, Float next, size_t curr_index) {
    if (curr_index == 0) {
        return std::make_pair(curr, next);
    } else {
        return descending(get_prev(curr, next), curr, curr_index - 1);
    }
}"
Xev5GG8s,Untitled,Frun36,C,Monday 4th of March 2024 03:54:09 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>
#include <float.h>

#define VAR_TYPE double  // badany typ zmiennej
#define COEFF ((VAR_TYPE)3.0) // Współczynnik A równania rekurencyjnego

VAR_TYPE next_element_forward(VAR_TYPE, VAR_TYPE);     // następny element w rekurencji w przód
VAR_TYPE next_element_backward(VAR_TYPE, VAR_TYPE);    // następny element w rekurencji w tył
VAR_TYPE *recursion_forward(int);                      // zwraca kolejne wyniki dla rekurencji w przód
VAR_TYPE *recursion_backward(int, VAR_TYPE, VAR_TYPE); // zwraca kolejne wyniki dla rekurencji w tył

int main()
{
    clock_t start = clock();

    VAR_TYPE *solutions_forward = recursion_forward(45);
    VAR_TYPE *solutions_backward = recursion_backward(45, solutions_forward[45], solutions_forward[46]);
    clock_t end = clock();
    float seconds = (float)(end - start) / CLOCKS_PER_SEC;
    VAR_TYPE a = 1.0;
    printf(""no.\tForward\tBackward\tDifference\n"");
    for (int i = 0; i < 47; i++)

    {
        // printf(""%.30Lf,"", fabsl(solutions_forward[i]- a));
        printf(""x_%d:\t%8.4e\t%8.4e\t%8.4e\n"", i, solutions_forward[i], solutions_backward[i], fabs(solutions_forward[i] - solutions_backward[i]));
        // printf(""x_%d: %.7Le; %.7Le; %.7Le\n"", i,solutions_forward[i], a,fabsl(a-solutions_forward[i]));
        a /= 3.0;
    }

    printf(""\n\nx_0: %.19e, \n x_1: %.19e \n"", solutions_backward[0], solutions_backward[1]);
    printf(""Time: %fs\n"", seconds);

    free(solutions_forward);
    free(solutions_backward);

    return 0;
}

VAR_TYPE next_element_forward(VAR_TYPE x_n_minus_1, VAR_TYPE x_n_minus_2)
{
    return (VAR_TYPE)(((10. * x_n_minus_1) / COEFF - (x_n_minus_2)));
}

VAR_TYPE next_element_backward(VAR_TYPE x_n_plus_1, VAR_TYPE x_n_plus_2)
{
    return (VAR_TYPE)(((10. * x_n_plus_1) / COEFF - (x_n_plus_2)));
}

VAR_TYPE *recursion_forward(int n)
{
    VAR_TYPE *solutions = malloc((n + 2) * sizeof(VAR_TYPE));

    solutions[0] = 1.0;
    solutions[1] = (VAR_TYPE)(((VAR_TYPE)(1.0)) / COEFF);

    for (int i = 2; i < (n + 2); i++)
    {
        solutions[i] = next_element_forward(solutions[i - 1], solutions[i - 2]);
    }

    return solutions;
}

VAR_TYPE *recursion_backward(int n, VAR_TYPE x_k, VAR_TYPE x_k_plus_1)
{
    VAR_TYPE *solutions = malloc((n + 2) * sizeof(VAR_TYPE));
    solutions[n + 1] = x_k_plus_1;
    solutions[n] = x_k;

    for (int i = n - 1; i >= 0; i--)
    {
        solutions[i] = next_element_backward(solutions[i + 1], solutions[i + 2]);
    }

    return solutions;
}"
i4MqG9GB,Untitled,iko1133,JSON,Monday 4th of March 2024 03:42:11 AM CDT,"{
	""error"": ""ERROR: null value in column \""regbyid\"" violates not-null constraint
	Detail: Failing row contains(1337484, f, null, 01005043542, მარიამ, კობიაშვილი, , null, null, null, null, null, null, null, null, 2024 - 03 - 04 09: 42: 20.127684, , null, null, null, null, null, null, null, null, null, , null, , null, null, null, 1994 - 08 - 03 20: 00: 00, null, null, null, null, null, 0, 1).
	"", ""
	result "": 0}"
vZGmiEtN,[VSC] Keybindings visual-studio-code,mituri,JavaScript,Monday 4th of March 2024 03:31:02 AM CDT,"// Place your key bindings in this file to override the defaultsauto[]
[
    {
        ""key"": ""ctrl+shift+d"",
        ""command"": ""-workbench.view.debug""
    },
    {
        ""key"": ""ctrl+shift+d"",
        ""command"": ""editor.action.deleteLines"",
        ""when"": ""textInputFocus && !editorReadonly""
    },
    {
        ""key"": ""ctrl+shift+k"",
        ""command"": ""-editor.action.deleteLines"",
        ""when"": ""textInputFocus && !editorReadonly""
    },
    {
        ""key"": ""ctrl+shift+s"",
        ""command"": ""workbench.action.files.saveAll""
    },
    {
        ""key"": ""ctrl+k s"",
        ""command"": ""-workbench.action.files.saveAll""
    },
    {
        ""key"": ""ctrl+pagedown"",
        ""command"": ""-workbench.action.nextEditor""
    },
    {
        ""key"": ""ctrl+shift+alt+pagedown"",
        ""command"": ""-cursorColumnSelectPageDown"",
        ""when"": ""textInputFocus""
    },
    {
        ""key"": ""ctrl+end"",
        ""command"": ""-workbench.action.terminal.scrollToBottom"",
        ""when"": ""terminalFocus""
    },
    {
        ""key"": ""ctrl+tab"",
        ""command"": ""workbench.action.nextEditor""
    },
    {
        ""key"": ""alt+s"",
        ""command"": ""-gitlens.showQuickRepoStatus"",
        ""when"": ""gitlens:enabled && config.gitlens.keymap == 'alternate'""
    },
    {
        ""key"": ""ctrl+shift+s"",
        ""command"": ""-workbench.action.files.saveAs""
    },
    {
        ""key"": ""ctrl+shift+s"",
        ""command"": ""-workbench.action.files.saveLocalFile"",
        ""when"": ""remoteFileDialogVisible""
    },
    {
        ""key"": ""ctrl+tab"",
        ""command"": ""-workbench.action.openNextRecentlyUsedEditorInGroup""
    },
    {
        ""key"": ""ctrl+tab"",
        ""command"": ""-workbench.action.quickOpenNavigateNextInEditorPicker"",
        ""when"": ""inEditorsPicker && inQuickOpen""
    },
    {
        ""key"": ""ctrl+pagedown"",
        ""command"": ""-selectNextPageSuggestion"",
        ""when"": ""suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus""
    },
    {
        ""key"": ""ctrl+shift+tab"",
        ""command"": ""-workbench.action.openPreviousRecentlyUsedEditorInGroup""
    },
    {
        ""key"": ""ctrl+shift+tab"",
        ""command"": ""-workbench.action.quickOpenNavigatePreviousInEditorPicker"",
        ""when"": ""inEditorsPicker && inQuickOpen""
    },
    {
        ""key"": ""ctrl+shift+tab"",
        ""command"": ""workbench.action.previousEditor""
    },
    {
        ""key"": ""ctrl+pageup"",
        ""command"": ""-workbench.action.previousEditor""
    },
    {
        ""key"": ""ctrl+pageup"",
        ""command"": ""-selectPrevPageSuggestion"",
        ""when"": ""suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus""
    },
    {
        ""key"": ""ctrl+pageup"",
        ""command"": ""workbench.action.moveEditorLeftInGroup""
    },
    {
        ""key"": ""ctrl+shift+pageup"",
        ""command"": ""-workbench.action.moveEditorLeftInGroup""
    },
    {
        ""key"": ""ctrl+pagedown"",
        ""command"": ""workbench.action.moveEditorRightInGroup""
    },
    {
        ""key"": ""ctrl+shift+pagedown"",
        ""command"": ""-workbench.action.moveEditorRightInGroup""
    },
    {
        ""key"": ""ctrl+shift+c"",
        ""command"": ""-workbench.action.terminal.openNativeConsole"",
        ""when"": ""!terminalFocus""
    },
    {
        ""key"": ""ctrl+shift+c"",
        ""command"": ""-workbench.action.terminal.copySelection"",
        ""when"": ""terminalFocus && terminalTextSelected""
    },
    {
        ""key"": ""ctrl+shift+c"",
        ""command"": ""workbench.panel.terminal.focus""
    },
    {
        ""key"": ""ctrl+f5"",
        ""command"": ""-workbench.action.debug.run""
    },
    {
        ""key"": ""ctrl+shift+q"",
        ""command"": ""-workbench.action.quickOpenNavigatePreviousInViewPicker"",
        ""when"": ""inQuickOpen && inViewsPicker""
    },
    {
        ""key"": ""ctrl+shift+q"",
        ""command"": ""workbench.action.keepEditor""
    },
    {
        ""key"": ""ctrl+k enter"",
        ""command"": ""-workbench.action.keepEditor""
    },
    {
        ""key"": ""ctrl+shift+w"",
        ""command"": ""-workbench.action.closeWindow""
    },
    {
        ""key"": ""ctrl+shift+1"",
        ""command"": ""-search.action.replace"",
        ""when"": ""matchFocus && replaceActive && searchViewletVisible""
    },
    {
        ""key"": ""ctrl+shift+1"",
        ""command"": ""-search.action.replaceAllInFolder"",
        ""when"": ""folderMatchFocus && replaceActive && searchViewletVisible""
    },
    {
        ""key"": ""ctrl+shift+1"",
        ""command"": ""-search.action.replaceAllInFile"",
        ""when"": ""fileMatchFocus && replaceActive && searchViewletVisible""
    },
    {
        ""key"": ""ctrl+shift+1"",
        ""command"": ""-editor.action.replaceOne"",
        ""when"": ""editorFocus && findWidgetVisible""
    },
    {
        ""key"": ""ctrl+shift+2"",
        ""command"": ""workbench.action.terminal.focusNext""
    },
    {
      ""key"": ""ctrl+shift+1"",
      ""command"": ""workbench.action.terminal.focusPrevious""
  },
  {
      ""key"": ""ctrl+alt+r"",
      ""command"": ""workbench.action.reloadWindow"",
      ""when"": ""isDevelopment""
  },
  {
      ""key"": ""ctrl+r"",
      ""command"": ""-workbench.action.reloadWindow"",
      ""when"": ""isDevelopment""
  }
  ]"
RZ1c3qfK,GameCycle,mrrsk,Lua,Monday 4th of March 2024 03:30:20 AM CDT,"gcsEvent = game.ServerStorage:WaitForChild(""GameCanStart"")
rscEvent = game.ServerStorage:WaitForChild(""RoundStateChanged"").Event
GameState = require(game.ReplicatedStorage.GameState)

function checkIfRoundCanStart()
	local players = #game.Players:GetPlayers()
	
	local function initialize()
		if not GameState.Initialized then
			GameState.Initialized = true
		end
	end
	
	if players < 3 then
		print(""Has "", players, "" players. Cannot start."")
		GameState.setValue(""CanStart"", false)
		GameState.setValue(""RoundState"", GameState.RoundStates.NotEnoughPlayers)
		initialize()
		return
	end
	print(""Has "", players, "" players. Can start!"")
	initialize()
	gcsEvent:Fire()
end

function teleportPlayers()
	local spawns = workspace.Arena.Spawns:GetChildren()
	local characters = {}
	for i, v in ipairs(game.Players:GetPlayers()) do
		table.insert(characters, v.Character)
	end
	for i, v in ipairs(characters) do
		local index = math.random(1, #spawns)
		local selectedSpawn = spawns[index]
		table.remove(spawns, index)
		v:MoveTo(selectedSpawn.Position)
		print(""Teleported ""..v.Name.."" to ""..selectedSpawn.Name)
	end
end

gcsEvent.Event:Connect(function()
	print(""GameCanStart fired"")
	GameState.setValue(""CanStart"", true)
	if GameState.IsRoundActive == false and GameState.RoundState ~= GameState.RoundStates.Intermission then
		GameState.setValue(""RoundState"", GameState.RoundStates.Intermission)
	end
end)

rscEvent:Connect(function(value: ""IsRoundActive"" | ""RoundState"" | ""PlayersRemaining"" | ""CanStart"" | ""Initialized"", newValue: boolean | number)
	checkIfRoundCanStart()
end)

game.Players.PlayerAdded:Connect(checkIfRoundCanStart)
game.Players.PlayerRemoving:Connect(checkIfRoundCanStart)

"
Xwcsq37a,GameState,mrrsk,Lua,Monday 4th of March 2024 03:29:25 AM CDT,"--!strict
local rscEvent = game.ServerStorage:WaitForChild(""RoundStateChanged"")

local module = {
	RoundStates = {
		Undefined = 0,
		NotEnoughPlayers = 1,
		Intermission = 2,
		Starting = 3,
		Arena = 4,
		Table = 5,
		Finishing = 6
	},
	
	
}

type GameStateValue = ""IsRoundActive"" | ""RoundState"" | ""PlayersRemaining"" | ""CanStart"" | ""Initialized""

module.IsRoundActive = false
module.RoundState = module.RoundStates.Undefined
module.PlayersRemaining = 0
module.CanStart = false
module.Initialized = false

function module.setValue(value: GameStateValue, newValue: boolean | number) 
	-- Type checking
	if ((value == ""RoundState"" or value == ""PlayersRemaining"") and typeof(newValue) ~= ""number"")  -- RoundState or PlayersRemaining set to something that's not a number 
			or ((value == ""IsRoundActive"" or value == ""CanStart"" or value == ""Initialized"") and typeof(newValue) ~= ""boolean"") then -- IsRoundActive or CanStart or Initialized set to not boolean
		error(""Invalid argument: ""..value.."" ""..tostring(newValue))
		return
	end
	-- RoundState checking
	if value == ""RoundState"" then
		if newValue < 1 or newValue > 6 then
			error(""Tried to set RoundState to ""..tostring(newValue))
			return
		end
	end
	-- Set the value
	print(""set"", value, tostring(newValue))
	module[tostring(value)] = newValue
	rscEvent:Fire(value, newValue)
end

return module"
23BmyzDr,Ημερολόγιο της Μεγάλης Εβδομάδας 2024,plirof2,JavaScript,Monday 4th of March 2024 03:13:53 AM CDT,"Το Ημερολόγιο της Μεγάλης Εβδομάδας 2024
Πάμε να δούμε αναλυτικά το ημερολόγιο της μεγάλης εβδομάδας.

29 Απριλίου 2024: Μεγάλη Δευτέρα  
30 Απριλίου 2024: Μεγάλη Τρίτη
1 Μαΐου 2024: Μεγάλη Τετάρτη
2 Μαΐου 2024: Μεγάλη Πέμπτη
3 Μαΐου 2024: Μεγάλη Παρασκευή
4 Μαΐου 2024: Μεγάλο Σάββατο  (4/5/24)
5 Μαΐου 2024: Κυριακή του Πάσχα
6 Μαΐου 2024: Δευτέρα του Πάσχα"
g5hr5HJh,Soccer Prediction Betting Tips 04032024,livebetpro,PHP,Monday 4th of March 2024 02:49:43 AM CDT,https://www.livebetpro.com/soccer-prediction-betting-tips-04032024/
FZZYfEZE,Untitled,Szynka013,CSS,Monday 4th of March 2024 02:21:29 AM CDT,"1. W misce roztrzep jajka widelcem lub trzepaczką. Możesz dodać mleko, jeśli lubisz bardziej puszystą konsystencję.
2. Dopraw jajka solą i pieprzem według własnego gustu.
3. Jeśli używasz dodatków takich jak cebula, papryka itp., pokrój je na małe kawałki.
4. Rozgrzej patelnię na średnim ogniu i dodaj oliwę lub masło.
5. Gdy patelnia będzie dobrze rozgrzana, dodaj jajka do patelni.
6. Jeśli dodajesz jakieś warzywa, teraz jest czas na wrzucenie ich na patelnię.
7. Smaż jajecznice przez około 2-3 minuty, mieszając delikatnie od czasu do czasu, aż jajka się zetną.
8. Jeśli dodajesz ser, posyp go po wierzchu jajecznicy w ostatniej chwili, gdy jajka jeszcze są lekko płynne.
9. Gdy jajecznica jest gotowa, przesuń ją na talerz i podawaj natychmiast, najlepiej z pieczywem lub tostami.
"
6VmSKda9,Untitled,morington,Python,Monday 4th of March 2024 01:17:55 AM CDT,"from speakerpy.lib_speak import Speaker

sp = Speaker(model_id=""ru_v3"", language=""ru"", speaker=""aidar"", device=""cpu"")
sp.speak(
	text=""Пример текста. Привет. Я твой голосовой помощник! 42 смысл жизни во вселенной."",
	sample_rate=48000
)

sp = Speaker(model_id=""ru_v3"", language=""ru"", speaker=""baya"", device=""cpu"")
sp.speak(
	text=""Пример текста. Привет. Я твой голосовой помощник! 42 смысл жизни во вселенной."",
	sample_rate=48000
)

sp = Speaker(model_id=""ru_v3"", language=""ru"", speaker=""kseniya"", device=""cpu"")
sp.speak(
	text=""Пример текста. Привет. Я твой голосовой помощник! 42 смысл жизни во вселенной."",
	sample_rate=48000
)

sp = Speaker(model_id=""ru_v3"", language=""ru"", speaker=""xenia"", device=""cpu"")
sp.speak(
	text=""Пример текста. Привет. Я твой голосовой помощник! 42 смысл жизни во вселенной."",
	sample_rate=48000
)
"
8fkHuMYX,Untitled,morington,Python,Monday 4th of March 2024 12:50:35 AM CDT,"import argparse
import json
import queue
import sys
import sounddevice as sd

from vosk import Model, KaldiRecognizer

q = queue.Queue()


def int_or_str(text):
    """"""Helper function for argument parsing.""""""
    try:
        return int(text)
    except ValueError:
        return text


def callback(indata, frames, time, status):
    """"""This is called (from a separate thread) for each audio block.""""""
    if status:
        print(status, file=sys.stderr)
    q.put(bytes(indata))


parser = argparse.ArgumentParser(add_help=False)
parser.add_argument(
    ""-l"", ""--list-devices"", action=""store_true"",
    help=""show list of audio devices and exit"")
args, remaining = parser.parse_known_args()
if args.list_devices:
    print(sd.query_devices())
    parser.exit(0)
parser = argparse.ArgumentParser(
    description=__doc__,
    formatter_class=argparse.RawDescriptionHelpFormatter,
    parents=[parser])
parser.add_argument(
    ""-f"", ""--filename"", type=str, metavar=""FILENAME"",
    help=""audio file to store recording to"")
parser.add_argument(
    ""-d"", ""--device"", type=int_or_str,
    help=""input device (numeric ID or substring)"")
parser.add_argument(
    ""-r"", ""--samplerate"", type=int, help=""sampling rate"")
parser.add_argument(
    ""-m"", ""--model"", type=str, help=""language model; e.g. en-us, fr, nl; default is en-us"")
args = parser.parse_args(remaining)

try:
    if args.samplerate is None:
        device_info = sd.query_devices(args.device, ""input"")
        # soundfile expects an int, sounddevice provides a float:
        args.samplerate = int(device_info[""default_samplerate""])

	""""""
	Работаю на Windows, поэтому путь через \\
	Файловая структура:
		\vosk_test\
			main.py
			\models\
				vosk-model-ru-0.42
				vosk-model-small-ru-0.22
	""""""

    if args.model is None:
        model = Model(model_path='models\\vosk-model-ru-0.42', lang=""ru-Ru"")
    else:
        model = Model(lang=args.model)

    if args.filename:
        dump_fn = open(args.filename, ""wb"")
    else:
        dump_fn = None

    with sd.RawInputStream(samplerate=args.samplerate, blocksize=8000, device=args.device,
                           dtype=""int16"", channels=1, callback=callback):
        print(""#"" * 80)
        print(""Press Ctrl+C to stop the recording"")
        print(""#"" * 80)

        rec = KaldiRecognizer(model, args.samplerate)
        while True:
            data = q.get()
            if rec.AcceptWaveform(data):
                t = rec.Result()
                data_text = json.loads(t)
                text = data_text.get('text')
                if text != '':
                    print(text)
            # else:
            #     print(rec.PartialResult())
            if dump_fn is not None:
                dump_fn.write(data)

except KeyboardInterrupt:
    print(""\nDone"")
    parser.exit(0)
except Exception as e:
    parser.exit(type(e).__name__ + "": "" + str(e))

"
yjdpc19C,isolate_flutter,chayanforyou,Dart,Monday 4th of March 2024 12:49:47 AM CDT,"import 'dart:async';
import 'dart:io';
import 'dart:isolate';

class FileRecorder {
  late String _filePath;
  late SendPort _sendPort;
  late ReceivePort _receivePort;
  final Completer<void> _isolateReady = Completer.sync();

  Future<void> start(String filePath) async {
    _filePath = filePath;
    _receivePort = ReceivePort();
    _receivePort.listen(_handleResponsesFromIsolate);
    await Isolate.spawn(_startRemoteIsolate, _receivePort.sendPort);
  }

  void _handleResponsesFromIsolate(dynamic message) {
    if (message is SendPort) {
      _sendPort = message;
      _isolateReady.complete();
    } else if (message is List<int>) {
      if (message.isEmpty) {
        _receivePort.close();
        return;
      }

      final contents = message.join(',');
      File file = File(_filePath);
      file.writeAsStringSync(contents, mode: FileMode.append);
    }
  }

  static void _startRemoteIsolate(SendPort port) {
    final receivePort = ReceivePort();
    port.send(receivePort.sendPort);

    receivePort.listen((dynamic message) async {
      if (message is List<int>) {
        port.send(message);
      }
    });
  }

  Future<void> record(List<int> message) async {
    await _isolateReady.future;
    _sendPort.send(message);
  }

  Future<void> stop() async {
    await record([]);
  }
}

void main() async {
  final ecg = FileRecorder();
  await ecg.start('hello.txt');
  ecg.record([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]);
  ecg.record([11, 12, 13, 14, 15, 16, 17, 18, 19, 10]);
  ecg.record([21, 22, 23, 24, 25, 26, 27, 28, 29, 20]);
  ecg.record([31, 32, 33, 34, 35, 36, 37, 38, 39, 30]);
  ecg.record([41, 42, 43, 44, 45, 46, 47, 48, 49, 40]);
  ecg.record([51, 52, 53, 54, 55, 56, 57, 58, 59, 50]);

  await ecg.stop();
}
"
nfyznpML,Untitled,Moshegitlin,C,Monday 4th of March 2024 12:19:53 AM CDT,"char *my_strtok(char *str, const char delim,int check_quotes) {
    static char *next_token = NULL; 
    char *token;
    static int check_quotes_saved;

    if (str != NULL) { // אם זה הפעם הראשונה שאני מקבל את המחרוזת
        token = str; // אני מצביע על המחרוזת
        next_token= NULL; // אני מאפס את המצביע של המחרוזת הבאה
        check_quotes_saved = check_quotes;

    } 
    else {// אם זה לא הפעם הראשונה שאני מקבל את המחרוזת
    
        if (next_token == NULL) { // אני בודק שלא הגעתי לסוף המחרוזת
            return NULL;
        }
        token = next_token;// אני מצביע על המחרוזת הבאה כדי שאני יוכל להכניס על neext_token את האות הסיומת
    }
    if(check_quotes_saved) {
        if(*token == '""') {
            token++;
            char *end = strchr(token, '""');
            // next_token = strchr(token, '""');
            if(end != NULL) {
                next_token = end;
                *next_token = '\0';
            if(*next_token+1=='\0')// אם הגעתי לסוף המחרוזת ואין רווח אז סימן שאני בסוף המחרוזת 
            next_token=NULL;
            else
            next_token+2;
            return token;
            }
            token--;
        }
    }
    
    for(int i=0;i<strlen(token);i++){ //אני מחפש את המקום הראשון שבו יש רווח
        if(*(token+i)== delim){
            next_token=token+i;
            break;
        }
        if(i==strlen(token)-1){// אם הגעתי לסוף המחרוזת ואין רווח אז סימן שאני בסוף המחרוזת 
            next_token=NULL;
        }
    }
    if (next_token != NULL) {
        *next_token = '\0';
        next_token += 1;
    }

    return token;
}

char **splitArgument(char *str)
{
    char *subStr;
    subStr = my_strtok(str, ' ',1);
    int size = 2;
    int index = 0;
    char **argumnts = (char **)malloc(size * sizeof(char *));
    *(argumnts + index) = subStr;
    while ((subStr = my_strtok(NULL, ' ',1)) != NULL)
    {
        index++;
        size++;
        argumnts = (char **)realloc(argumnts, size * sizeof(char *));
        *(argumnts + index) = subStr;
    }
    *(argumnts + (index + 1)) = NULL;

    return argumnts;
}"
07zu9Tbz,815. Bus Routes,bennyfromtheblock,Python,Monday 4th of March 2024 12:19:18 AM CDT,"# BFS
# build graph of bus routes to neighboring bus routes
# never want to visit the same bus route more than once
# stop when target is on current bus route
# BFS state: (moves, current bus route)

# TC: let N be number of bus routes, M be avg number of stops per route
# building the adj map is O(N * (N-1) * M), M is for set intersection
# SC: O(N * (N-1)), max connectivity of graph

class Solution:
    def numBusesToDestination(self, routes: List[List[int]], source: int, target: int) -> int:
        if source == target:
            return 0
        
        routes = list(map(set, routes))
        queue = deque()
        adj_map = defaultdict(set)
        visited = set()

        for bus, route in enumerate(routes):
            if source in route:
                queue.append((1, bus))
            for next_bus in range(bus+1, len(routes)):
                next_route = routes[next_bus]
                if route & next_route:
                    adj_map[bus].add(next_bus)
                    adj_map[next_bus].add(bus)

        while queue:
            moves, bus = queue.popleft()
            visited.add(bus)
            if target in routes[bus]:
                return moves
            for next_bus in adj_map[bus]:
                if next_bus not in visited:
                    queue.append((moves+1, next_bus))

        return -1"
5pXbdVRh,Home Assistant / Fensterwarnung Automation,Flo_R1der,YAML,Sunday 3rd of March 2024 11:50:32 PM CDT,"alias: Fenster-Warnung
description: """"
trigger:
  - platform: state
    entity_id:
      - sensor.fenster_kinderzimmer
    to: Auf
    for:
      hours: 0
      minutes: ""{{ states('input_number.fensterwarnung_kz')|int }}""
      seconds: 0
    id: child_rooms
    alias: ""Trigger: child_rooms""
  - platform: state
    entity_id:
      - sensor.fenster_schlafzimmer
      - sensor.fenster_bad
    to: Auf
    for:
      hours: 0
      minutes: ""{{ states('input_number.fensterwarnung')|int }}""
      seconds: 0
    id: other_rooms
    alias: ""Trigger: other_rooms""
condition:
  - alias: Check Time, based on room type
    condition: or
    conditions:
      - condition: template
        value_template: |-
          {{ trigger.id == ""other_rooms"" and
          now() >= today_at(states('input_datetime.warnungen_von')) and
          now() <= today_at(states('input_datetime.warnungen_bis')) }}
        alias: other_rooms
      - condition: template
        value_template: |-
          {{ trigger.id == ""child_rooms"" and
          now() >= today_at(states('input_datetime.warnungen_von_kz')) and
          now() <= today_at(states('input_datetime.warnungen_bis_kz')) }}
        alias: child_rooms
    enabled: true
action:
  - service: script.custom_flexible_notification
    data:
      title: ""{{ room_name | default('default_room') }}""
      message: ""{{ message | default('default_message') }}""
      data:
        visibility: public
        tag: window-guard_{{room_name}}
        sticky: ""true""
        actions:
          - action: DONE
            title: OK, ich hab ja zu gemacht
variables:
  trigger_friendly_name: ""{{ trigger.to_state.attributes.friendly_name }}""
  room_name: ""{{ trigger_friendly_name.split(' ')[1] }}""
  delay_time: ""{{ ( trigger.for.total_seconds() / 60 ) | round(0) | default('x') }}""
  temperature_sensor: ""{{ trigger.to_state.attributes.related_temp_sensor }}""
  temperature: ""{{ states(temperature_sensor) }}""
  message: ""Fenster über {{ delay_time }}min. geöffnet! Temp. {{ temperature }}°C ""
mode: parallel
max: 10
"
CRTbC0Dm,avr -gcc  code using port pin change and  timer capture and compare,Mark2020H,C,Sunday 3rd of March 2024 11:25:28 PM CDT,"#ifndef F_CPU
#define F_CPU 16000000UL
#endif

/*** 

MD Harrington  Kent  London 04/02/2024 Time  now 05:13 

And at 05:13 for some  way over 5 hours and more  since 10pm yesterday I  am busying learning on self taught basis 


Follow this link for visual  display of what this does 
https://www.instagram.com/p/C4FHGeYgG84/

https://www.facebook.com/100007080936840/videos/pcb.3658450727734256/709978437955735


 ***/ 


#include <avr/interrupt.h>
#include <avr/io.h>
#include <util/delay.h>


/* registers used 
  PCICR -> port control interrupt change register  so to enable this we set the lower 3 bits to which port we are 
   {
        PCIE0 is for port B 
        PCIE1 is for port C  // Im using port c for switching 
        PCIE2 is for port D 

  }


  We use a  mask to select which pin  we ofthe port we want to interrupt on 

  
  PCMSK0 is mask for  Port B 
 
  PCMSK1 is mask for  Port C
  PCMSK2 is mask for  Port D

  PCIFR ->  Port control Interrupt flag register 
  {
      PCIF2 -> Interrupt flag for Port D 
      PCIF1 -> Interrupt flag for Port C
      PCIF0 -> Interrupt flag for Port B

  }

  The DDX Register -> This  is for setting up port direction 

  DDRB -> PortB 
  DDRC -> PortC
  DDRD -> PortD 


*/



volatile uint8_t portdhistory = 0x00;
volatile uint8_t debounceFlag = 0; // Flag to control debounce


/* Notes On volatile 

In the context of microcontroller programming, using volatile is common when dealing with memory-mapped hardware registers 
or variables that are accessed within interrupt service routines (ISRs). Here's the effect of declaring variables as volatile:

Prevents Optimization: Without the volatile keyword, the compiler may optimize code by caching the value of a variable in a register or by reordering instructions. 
This optimization could cause issues if the variable's value can be changed by external factors, such as hardware peripherals or ISRs. 

Declaring the variable as volatile ensures that the compiler always reads the variable's value from memory 
and does not apply optimizations that assume the value remains unchanged.

    Memory Access: When a variable is declared as volatile, the compiler will generate code to read or write the variable directly 
    from memory every time it is accessed, ensuring that the most up-to-date value is used.

    Interactions with Interrupts and Hardware: In embedded systems programming, hardware peripherals 
    (such as timers, GPIO ports, etc.) may modify variables that are accessed in both normal code and interrupt service routines. 
    
    Declaring these variables as volatile ensures that the compiler does not optimize away accesses to these variables, 
    allowing correct behavior in the presence of interrupts and hardware interactions.

In your example, portdhistory and debounceFlag are likely accessed and modified by both the main code and an interrupt service routine (ISR). 
Therefore, declaring them as volatile ensures that the compiler does not optimize away their accesses and correctly handles their interaction with interrupts.


*/ 


// Protoype functions 

void init() ;

void init(){

 // Enable Pin Change Interrupt on PORTC
    PCICR |= (1 << PCIE1); // Enables PCMSK1 scan

    // Enable the Pin Change Interrupt for PC0 (pin 14)
    PCMSK1 |= (1 << PCINT8);

    // Set up port direction for PORTD as output
    DDRD = 0xFF;

    // Set up PORTC0 (pin 14) as input with internal pull-up enabled
    DDRC &= ~(1 << DDC0);
    PORTC |= (1 << PORTC0);

    portdhistory =0x80 ;

     // Configure Timer1 for debounce delay
    TCCR1B |= (1 << WGM12); // CTC mode

    /* 
      CTC stands for ""Clear Timer on Compare Match"". 
      It's a mode available in many AVR microcontrollers like those found in Arduino boards. 
      In CTC mode, the timer counts up until it reaches a specified value (the ""compare match"" value) stored in the compare match register (OCRn). 
      When the count matches this value, the timer is cleared (reset to zero), and an interrupt can be generated.
      CTC mode is useful for generating precise time intervals or for creating periodic events. 
      By adjusting the compare match value, you can control the duration between interrupts, allowing for precise timing control.


    */


    OCR1A = 625; // For 10ms debounce delay with 16MHz CPU frequency

    /*

        Determine Clock Frequency (f_clk):
        You've specified the clock frequency as 16 MHz (F_CPU).

        Choose Prescaler Value (N):
        Let's choose a prescaler value of 64. This value divides the clock frequency to determine the timer's count rate.

        Calculate Timer Tick Duration (T_tick):
        Use the formula: Ttick=1fclk/NTtick​=fclk​/N1​
        For our case: Ttick=116×106/64=6416×106=4×10−6Ttick​=16×106/641​=16×10664​=4×10−6 seconds.

        Determine Number of Timer Ticks for 10 ms Delay:
        Since we want a 10 ms delay, we need to determine how many timer ticks represent 10 ms.
        Use the formula: Number of ticks=Delay (in seconds)TtickNumber of ticks=Ttick​Delay (in seconds)​
        For a 10 ms delay: Number of ticks=10×10−34×10−6=2500
        Number of ticks=4×10−610×10−3​=2500

    Check Range:
        Ensure the calculated number of ticks fits within the range of a 16-bit timer (0 to 65535).

    Load Value into OCR1A Register:
        Finally, load the calculated value (2500) into the OCR1A register to achieve a 10 ms delay.


    */




    TIMSK1 |= (1 << OCIE1A); // Enable compare match interrupt
}


// define the ISR 

ISR (PCINT1_vect)
{
 if (!debounceFlag) {
        debounceFlag = 1; // Set debounce flag
        TCNT1 = 0; // Reset timer count
        TCCR1B |= (1 << CS11) | (1 << CS10); // Start Timer1 with prescaler 64
    }
}


ISR(TIMER1_COMPA_vect) {
    uint8_t changedBits = PINC; // Read the current status of PORTC
    if (changedBits & (1 << PINC0)) { // Check if the change occurred on pin PC0
        portdhistory >>= 1; // Shift the port value to the right by one
    }

    TCCR1B = 0; // Stop Timer1
    debounceFlag = 0; // Clear debounce flag
}

int main() {


init(); 
sei();
    
    while (1) {
            
            
            PORTD = portdhistory; // Write the updated port value to PORTD
            
             // If portdhistory reaches 0x02, reset it to 0x08
        if (portdhistory == 0x02) {
            portdhistory = 0x80;
        }
    }

} //end main 

/* Additional notes of this  who dont really like the idea of compiling  etc all of which is part and parcel of this  then here is the compiled code in hex  ready to upload to your MCU  below  and this is where you can do all sorts just within that hex  Think about that in depth  and you will soon realise something else  you perhaps  never eben thought  about 

:020000040000FA
:100000000C9434000C9446000C9446000C9446006A
:100010000C9463000C9446000C9446000C9446002B
:100020000C9446000C9446000C9446000C94480036
:100030000C9446000C9446000C9446000C94460028
:100040000C9446000C9446000C9446000C94460018
:100050000C9446000C9446000C9446000C94460008
:100060000C9446000C94460011241FBECFEFD8E03C
:10007000DEBFCDBF21E0A0E0B1E001C01D92A23003
:10008000B207E1F70E947F000C94AC000C940000D2
:100090001F920F920FB60F9211248F939F93309B54
:1000A00007C08091010190E09595879580930101AB
:1000B00010928100109200019F918F910F900FBEBE
:1000C0000F901F9018951F920F920FB60F92112448
:1000D0008F938091000181110CC081E08093000119
:1000E000109285001092840080918100836080933B
:1000F00081008F910F900FBE0F901F9018958091E7
:10010000680082608093680080916C0081608093B9
:100110006C008FEF8AB93898409A80E8809301018B
:100120008091810088608093810081E792E09093C4
:1001300089008093880080916F00826080936F00B7
:10014000789480E8909101019BB9909101019230DF
:0C015000C9F780930101F6CFF894FFCFAF
:107E0000112484B714BE81FFF0D085E080938100F7
:107E100082E08093C00088E18093C10086E0809377
:107E2000C20080E18093C4008EE0C9D0259A86E02C
:107E300020E33CEF91E0309385002093840096BBD3
:107E4000B09BFECF1D9AA8958150A9F7CC24DD24C4
:107E500088248394B5E0AB2EA1E19A2EF3E0BF2EE7
:107E6000A2D0813461F49FD0082FAFD0023811F036
:107E7000013811F484E001C083E08DD089C08234E0
:107E800011F484E103C0853419F485E0A6D080C0E4
:107E9000853579F488D0E82EFF2485D0082F10E0AE
:107EA000102F00270E291F29000F111F8ED06801E7
:107EB0006FC0863521F484E090D080E0DECF843638
:107EC00009F040C070D06FD0082F6DD080E0C81688
:107ED00080E7D80618F4F601B7BEE895C0E0D1E017
:107EE00062D089930C17E1F7F0E0CF16F0E7DF06D8
:107EF00018F0F601B7BEE89568D007B600FCFDCFD4
:107F0000A601A0E0B1E02C9130E011968C91119780
:107F100090E0982F8827822B932B1296FA010C0160
:107F200087BEE89511244E5F5F4FF1E0A038BF0790
:107F300051F7F601A7BEE89507B600FCFDCF97BE46
:107F4000E89526C08437B1F42ED02DD0F82E2BD052
:107F50003CD0F601EF2C8F010F5F1F4F84911BD097
:107F6000EA94F801C1F70894C11CD11CFA94CF0C13
:107F7000D11C0EC0853739F428D08EE10CD085E9AC
:107F80000AD08FE07ACF813511F488E018D01DD067
:107F900080E101D065CF982F8091C00085FFFCCF94
:107FA0009093C60008958091C00087FFFCCF809118
:107FB000C00084FD01C0A8958091C6000895E0E648
:107FC000F0E098E1908380830895EDDF803219F02E
:107FD00088E0F5DFFFCF84E1DECF1F93182FE3DFCA
:107FE0001150E9F7F2DF1F91089580E0E8DFEE27F6
:047FF000FF270994CA
:027FFE00040479
:00000001FF


*/ 
"
ub91eiFr,20to0_timer,Python253,Python,Sunday 3rd of March 2024 11:15:28 PM CDT,"#!/usr/bin/env python3
## -*- coding: utf-8 -*-
# A Simple 20 Second Countdown Created With Python Scripting.

__file_name__ = '20to0.py'
__author__ = 'Dan Evans'
__copyright__ = 'Copyright 2016©, Coding With Py'
__credits__ = 'Dan Evans'
__dct_url__ = 'http://purl.org/dc/terms/'
__license__ = 'Creative Commons'
__rel_url__ = 'http://creativecommons.org/licenses/by-nc/4.0/'
__version__ = 'CC-by-nc/4.0/'
__maintainer__ = 'Dan(Python253)Evans'
__email__ = 'Python253@gmail.com'
__last_update__ = '03/03/24'

""""""
20to0.py - A Simple 20 Second Countdown

This Python script, '20to0.py', authored by Dan Evans, creates a playful 20-second countdown experience.
The script utilizes a 'while' loop to decrement the countdown timer and display the remaining seconds.
To enhance the user experience, a one-second delay is introduced between each countdown step using the 'time' module, providing a real-time countdown sensation.

Feel free to use, modify, and share this script under the terms of the Creative Commons Attribution-NonCommercial 4.0 International License.
""""""

print('\n', '20to0.py is licensed under',
      '\n', 'The Creative Commons Attribution-NonCommercial',
      '\n', '4.0 International License',
      '\n' * 2, 'File Name: ' + __file_name__, '\n', 'Author: ' + __author__,
      '\n', 'Copyright: ' + __copyright__, '\n', 'Credits: ' + __credits__,
      '\n', 'DCT URL: ', '\n', __dct_url__, '\n', 'License: ' + __license__,
      '\n', 'Release URL: ', '\n', __rel_url__, '\n', 'Version: ' + __version__,
      '\n', 'Maintainer: ' + __maintainer__, '\n', 'Email: ' + __email__,
      '\n', 'Last Update: ' + __last_update__, '\n')

import time

# This Script Counts Down From 20 to 0 Seconds.
i = 20  # Edit this value for timer length in seconds
print(""\n\nCountdown Started...\n\n"")
while i > 0:
    print(i)
    time.sleep(1)  # Introduce a 1-second delay
    i -= 1

print('\nCountdown Complete!\n')
# End
"
fmS2iDNi,Untitled,Kurausukun,Bash,Sunday 3rd of March 2024 10:54:04 PM CDT,"Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
You might want to run 'apt --fix-broken install' to correct these.
The following packages have unmet dependencies:
 lib32asan8 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 lib32atomic1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 lib32gcc-s1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 lib32gomp1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 lib32itm1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 lib32quadmath0 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 lib32stdc++6 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 lib32ubsan1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libasan8 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libatomic1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libcc1-0 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libgfortran5 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libglib2.0-0:i386 : Depends: libffi8:i386 (>= 3.4) but it is not going to be installed
                     Depends: libmount1:i386 (>= 2.20.1) but it is not going to be installed
                     Depends: libpcre2-8-0:i386 (>= 10.22) but it is not going to be installed
                     Depends: libselinux1:i386 (>= 3.1~)
                     Depends: zlib1g:i386 (>= 1:1.2.2) but it is not going to be installed
 libglib2.0-0t64 : Breaks: libglib2.0-0:i386 (< 2.78.4-3)
 libgomp1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libhwasan0 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libitm1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 liblsan0 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libobjc4 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libpulse0:i386 : Depends: libasyncns0:i386 (>= 0.3) but it is not going to be installed
                  Depends: libdbus-1-3:i386 (>= 1.9.14) but it is not going to be installed
                  Depends: libsndfile1:i386 (>= 1.0.20) but it is not going to be installed
                  Depends: libsystemd0:i386
                  Depends: libx11-6:i386 but it is not going to be installed
                  Depends: libx11-xcb1:i386 (>= 2:1.8.7) but it is not going to be installed
                  Depends: libxcb1:i386 but it is not going to be installed
 libquadmath0 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libtsan2 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libubsan1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libwine:i386 : Depends: libfontconfig1:i386 (>= 2.12.6) but it is not going to be installed
                Depends: libfreetype6:i386 (>= 2.2.1) but it is not going to be installed
                Depends: libasound2:i386 (>= 1.0.16)
                Depends: libcapi20-3:i386
                Depends: libgphoto2-6:i386 (>= 2.5.10)
                Depends: libgphoto2-port12:i386 (>= 2.5.10)
                Depends: libgstreamer-plugins-base1.0-0:i386 (>= 1.0.0) but it is not going to be installed
                Depends: libgstreamer1.0-0:i386 (>= 1.4.0) but it is not going to be installed
                Depends: libpcap0.8:i386 (>= 1.10.0)
                Depends: libpcsclite1:i386 (>= 1.3.3) but it is not going to be installed
                Depends: libudev1:i386 (>= 183) but it is not going to be installed
                Depends: libusb-1.0-0:i386 (>= 2:1.0.21) but it is not going to be installed
                Depends: libwayland-client0:i386 (>= 1.20.0) but it is not going to be installed
                Depends: libx11-6:i386 but it is not going to be installed
                Depends: libxext6:i386 but it is not going to be installed
                Depends: libxkbcommon0:i386 (>= 0.5.0) but it is not going to be installed
                Depends: libxkbregistry0:i386 (>= 1.0.0) but it is not going to be installed
                Depends: ocl-icd-libopencl1:i386 but it is not going to be installed or
                         libopencl1:i386
                Depends: ocl-icd-libopencl1:i386 (>= 1.0) but it is not going to be installed or
                         libopencl-1.2-1:i386
                Recommends: libcups2:i386 (>= 1.4.0)
                Recommends: libdbus-1-3:i386 (>= 1.9.14) but it is not going to be installed
                Recommends: libgl1:i386 but it is not going to be installed
                Recommends: libgnutls30:i386 (>= 3.7.0)
                Recommends: libgssapi-krb5-2:i386 (>= 1.6.dfsg.2) but it is not going to be installed
                Recommends: libkrb5-3:i386 (>= 1.6.dfsg.2) but it is not going to be installed
                Recommends: libodbc2:i386 (>= 2.3.1) but it is not going to be installed
                Recommends: libosmesa6:i386 (>= 10.2~) but it is not going to be installed
                Recommends: libsdl2-2.0-0:i386 (>= 2.0.12)
                Recommends: libv4l-0:i386 (>= 0.5.0)
                Recommends: libvulkan1:i386 (>= 1.2.189.0) but it is not going to be installed
                Recommends: libxcomposite1:i386 (>= 1:0.4.5) but it is not going to be installed
                Recommends: libxcursor1:i386 (> 1.1.2) but it is not going to be installed
                Recommends: libxfixes3:i386 but it is not going to be installed
                Recommends: libxi6:i386 but it is not going to be installed
                Recommends: libxinerama1:i386 (>= 2:1.1.4) but it is not going to be installed
                Recommends: libxrandr2:i386 but it is not going to be installed
                Recommends: libxrender1:i386 but it is not going to be installed
                Recommends: libxxf86vm1:i386 but it is not going to be installed
                Recommends: libgl1-mesa-dri:i386 but it is not going to be installed
                Recommends: libasound2-plugins:i386 but it is not going to be installed
                Recommends: gstreamer1.0-plugins-good:i386 but it is not going to be installed
 libx32asan8 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libx32atomic1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libx32gcc-s1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libx32gomp1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libx32itm1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libx32quadmath0 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libx32stdc++6 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
 libx32ubsan1 : Depends: gcc-14-base (= 14-20240201-3) but 14-20240221-2.1 is to be installed
E: Unmet dependencies. Try 'apt --fix-broken install' with no packages (or specify a solution)."
Tf9uBsFw,210. Course Schedule II,bennyfromtheblock,Python,Sunday 3rd of March 2024 10:53:25 PM CDT,"# Good old topological sort
# indegrees and adj list
# TC: O(N) N = numcourses
# SC: O(N*(N-1)) the max connectivity of the graph, for adj_list

class Solution:
    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:
        adj_map = defaultdict(set) # course : post-reqs
        indegrees = [0] * numCourses

        for course, prereq in prerequisites:
            indegrees[course] += 1
            adj_map[prereq].add(course)

        queue = deque([c for c, indeg in enumerate(indegrees) if indeg == 0])
        order = []

        while queue:
            course = queue.popleft()
            order.append(course)
            for neighbour in adj_map[course]:
                indegrees[neighbour] -= 1
                if indegrees[neighbour] == 0:
                    queue.append(neighbour)

        return order if len(order) == numCourses else []"
0yG2jU2f,Table for funds raised,caseycrowe,HTML,Sunday 3rd of March 2024 10:16:54 PM CDT,"<table>
        <tr>
            <th>Candidate</th>
            <th>Total</th>
            <th>Non-candidate donations</th>
        </tr>
        <tr>
            <td>Michael Ter Maat</td>
            <td>$140,101.71</td>
            <td>$17,029.73</td>
        </tr>
        <tr>
            <td>Lars Mapstead</td>
            <td>$77,257.40</td>
            <td>$14,229.61 ... plus $450,000 in loans</td>
        </tr>
        <tr>
            <td>Chase Oliver</td>
            <td>$57,229.11</td>
            <td>$57,196.40</td>
        </tr>
        <tr>
            <td>Jacob Hornberger</td>
            <td>$54,388.36</td>
            <td>$54,244.00</td>
        </tr>
        <tr>
            <td>Michael Rechtenwald</td>
            <td>$35,059.71</td>
            <td>$21,978.43 ... plus $3,924.59 in offsets to expenditures</td>
        </tr>
        <tr>
            <td>Joshua Smith</td>
            <td>$13,632.61</td>
            <td>$13,632.61</td>
        </tr>
        <tr>
            <td>Robert Sansone</td>
            <td>$3,645.72</td>
            <td>$0</td>
        </tr>
        <tr>
            <td>Aaron Avouris</td>
            <td>$0</td>
            <td>$0</td>
        </tr>
    </table>"
iQ6ukcey,772. Basic Calculator III,bennyfromtheblock,Python,Sunday 3rd of March 2024 10:12:55 PM CDT,"# Treat expressions inside braces as isolated expressions, and solve them using recursion
# isoluate the sub-expressions by finding the index of the closing bracket corresponding to the opening bracket
# TC: Worst case scenario is something like '(((((((...)))))))' where we would get O(N + (N-2) + (N-4) + ...) = O(N/2 * N) = O(N^2)
# SC: recursion stack as at most N/2 deep, each stack copies input string so O(N^2) as well

class Solution:
    def calculate(self, s: str) -> int:
        s = s + '+'
        stk = []
        cur_term = 0
        op = '+'
        i = 0
        while i < len(s):
            c = s[i]
            if c.isnumeric():
                cur_term = cur_term * 10 + int(c)
                i += 1
                continue
            elif c == '(':
                # find index of closing bracket
                closing_idx = self.find_closing(s, i) #TODO
                cur_term = self.calculate(s[i+1 : closing_idx])
                i = closing_idx + 1
                continue
            
            # c is operator. Process previous operation
            if op == '+':
                stk.append(cur_term)
            elif op == '-':
                stk.append(-cur_term)
            elif op == '*':
                stk[-1] *= cur_term
            elif op == '/':
                stk[-1] = int(stk[-1] / cur_term)
            else:
                raise Error(f'unsupported operator {op}')
            
            cur_term = 0
            op = c
            i += 1

        return sum(stk)

    
    def find_closing(self, s: str, i: int) -> int:
        open_count = 1
        j = i+1
        while j < len(s):
            if s[j] == '(':
                open_count += 1
            elif s[j] == ')':
                open_count -= 1
                if not open_count:
                    return j
            j += 1

        raise Error(f'closing bracket not found for string {s} at pos {i}')"
5D7rUCxc,Untitled,MisterQuirk,Python,Sunday 3rd of March 2024 09:56:38 PM CDT,"#Task 1

# def f(a):
#     b = dict()
#     for i in range(1, len(a) + 1):
#         b[i] = i
#     return b
#
# arr = input().split()
# print(f(arr))
#

#Task 2

# print({ x : x * x for x in range(1, int(input()) + 1)})

#Task 3

# n = int(input())
# d = dict()
# for i in range(n):
#     key = input()
#     value = int(input())
#     d.update({key: value})
#
# s = 1
# for key in d:
#     s *= d.get(key)
# print(s)

#Task 4

# d = {'.': 0, ',': 0, ':': 0, ';': 0, '!': 0, '?': 0}
# 
# s = input()
# for symbol in s:
#     if symbol in d:
#         d[symbol] += 1
# 
# k = 0
# for key in d:
#     k += d.get(key)
# print(k)

#Task 5

# s = input()
# a = set()
# for sym in s:
#     if sym.isdigit():
#         a.add(sym)
# if len(a) == 0:
#     print('NO')
# else:
#     arr = list(a)
#     arr.sort()
#     print(*arr, sep='')
"
mLesCFGH,Review Pastes.io [Pastebin Alternative],xxsa,PHP,Sunday 3rd of March 2024 09:54:14 PM CDT,"https://pastes.io - Paste Tool - Pastebin Alternative Free

Pastes.io is a simple and efficient pastebin for mainly code to be distributed neatly and efficiently across the web. Website where you can paste and store any type of text or code snippets online and share it with your friends, Also You can see Recent Pastes.
 "
w4x2s0in,Read and get domains from /etc/named.conf,willysec_id,Bash,Sunday 3rd of March 2024 09:44:28 PM CDT,"grep '^zone' /etc/named.conf | cut -d'""' -f2"
SRzDaFS2,Untitled,MisterQuirk,Python,Sunday 3rd of March 2024 09:24:43 PM CDT,"#Task 1

# def f(arr):
#     return sum(arr)
#
# print(f(list(map(int, input().split()))))

#Task 2

# def f(a, b, e):
#     if b <= a <= e:
#         return True
#     else:
#         return False
#
# a1, b1, e1 = map(int, input().split())
# print(f(a1, b1, e1))

#Task 3

# def f(number):
#     if number > 0:
#         p = number
#         s = 0
#         for i in range(1, number):
#             if p % i == 0:
#                 s += i
#     return number == s
#
# n = int(input())
# print(f(n))

#Task 4

# def f(number):
#     return sum(number[0:(len(n) // 2 + 1)]) == sum(number[(-len(n) // 2):-1])
#
# n = list(map(int, input().split()))
# print(f(n))

#Task 5

# def f(number):
#     k = 0;
#     for i in range(1, number):
#         if number % i == 0:
#             k += 1
#     return k == 1
#
# n = int(input())
# print(f(n))

#Task 6

# def f(number):
#     if number == 0:
#         return 0
#     elif number == 1:
#         return 1
#     elif number == 2:
#         return 1
#     return f(number - 1) + f(number - 2)
# 
# n = int(input())
# print(f(n))
"
mZqdxZ4C,Mad,Unknown_No_1,PHP,Sunday 3rd of March 2024 08:51:33 PM CDT,MADkaNameApnePUBGidMeLikhLo
5Acc2jwc,is_valid_ip,Python253,Python,Sunday 3rd of March 2024 08:49:07 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: is_valid_ip.py
# Author: Jeoi Reqi

""""""
Valid IP Checker Script

This script prompts the user to enter an IP address and checks whether
it is in a valid IP format (IPv4 or IPv6). It utilizes a function, valid_ip,
to perform the IP validation.

Requirements:
- Python 3

Usage:
1. Run the script.
2. Enter an IP address when prompted.
3. The script will display whether the entered IP address is valid or not.
""""""

import ipaddress

def valid_ip(ip):
    """"""Check if IP address is valid.

    Args:
        ip (str): IPv4 or IPv6.

    Returns:
        bool: True if in valid IP format (IPv4/IPv6), False otherwise.

    """"""
    try:
        ipaddress.ip_address(ip)
        return True
    except Exception:
        return False

def main():
    # Get user input for IP address
    user_ip = input(""Enter an IP address: "")

    # Check if the IP address is valid
    if valid_ip(user_ip):
        print(""The entered IP address is Valid."")
    else:
        print(""The entered IP address is Not Valid."")

if __name__ == ""__main__"":
    main()

"
P5HjbY3S,Untitled,MisterQuirk,Python,Sunday 3rd of March 2024 08:31:17 PM CDT,"#Task 1

# for i in range(0, 10):
#     for j in range(1, 11):
#         print(""%3d"" % (i * j), end=' ')
#     print()

#Task 2

# l = 10
# r = 50
# c = 0
# for x in range(l, r + 1):
#     for y in range(l, r + 1):
#         for k in range(l, r + 1):
#             if y**2 + x**2 == k**2:
#                 c += 1
# print(c)

#Task 3

# def f(n):
#     a = []
#     for i in range(1, n):
#         if n % i == 0:
#             a.append(i)
#     return sum(a)
# 
# n = int(input())
# for i in range(n):
#     for j in range(i + 1, n):
#         if i == f(j) and j == f(i):
#             print(i, j)

#Task 4

# n = int(input())
# for i in range(10**(n - 1), 10**n):
#     s = 0
#     p = i
#     while p != 0:
#         s += (p % 10)**n
#         p //= 10
#     if s == i:
#         print(i, end=' ')
"
3DRhULJc,is_valid_email,Python253,Python,Sunday 3rd of March 2024 08:17:39 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: is_valid_email.py
# Author: Jeoi Reqi

""""""
Valid Email Checker Script

This script prompts the user to enter an email address and checks whether
it is in a valid email format. It utilizes a function, valid_email, to
perform the email validation.

Requirements:
- Python 3

Usage:
1. Run the script.
2. Enter an email address when prompted.
3. The script will display whether the entered email address is valid or not.
""""""

import re

def valid_email(email):
    """"""Check for a valid email address.

    Args:
        email (str): Email.

    Returns:
        bool: True if in valid email format, False otherwise.

    """"""
    return bool(re.match('^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$', email))

def main():
    # Get user input for email address
    user_email = input(""Enter an email address: "")

    # Check if the email is valid
    if valid_email(user_email):
        print(""The entered email address is Valid."")
    else:
        print(""The entered email address is Not Valid."")

if __name__ == ""__main__"":
    main()

"
qX9u2F8e,is_prime,Python253,Python,Sunday 3rd of March 2024 08:15:55 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: is_prime.py
# Author: Jeoi Reqi

""""""
Is Prime Script

This script checks whether a user-input number is a prime number or a negative prime.
Negative primes are prime numbers that are less than zero. They have the same properties as positive primes but with a negative sign. Examples include -2, -3, -5, 7... etc.
It utilizes a function, is_prime, to perform the prime number check.

Requirements:
- Python 3

Usage:
1. Run the script.
2. Enter a number when prompted.
3. The script will display whether the entered number is a prime number, a
   negative prime, or not prime.
""""""

def is_prime(number):
    """"""Check if a number is a prime number.

    Args:
        number (int): Number.

    Returns:
        bool: True if number is a prime number, False otherwise.

    """"""
    if number < 2:
        return False
    for x in range(2, int(abs(number)**0.5) + 1):
        if abs(number) % x == 0:
            return False
    return True

def main():
    # Get user input
    user_input = int(input(""Enter a number: ""))

    # Check if it's a negative prime
    if is_prime(abs(user_input)):
        if user_input < 0:
            print(f""The number {user_input} is a Negative Prime."")
        else:
            print(f""The number {user_input} is Prime."")
    else:
        print(f""The number {user_input} is Not Prime."")

if __name__ == ""__main__"":
    main()

"
xa1ZQd4G,is_palindrome,Python253,Python,Sunday 3rd of March 2024 08:15:07 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: is_palindrome.py
# Author: Jeoi Reqi

""""""
Is Palindrome Script

This script checks whether a user-input string is a palindrome or not.
It utilizes a function, is_palindrome, to perform the palindrome check.

Requirements:
- Python 3

Usage:
1. Run the script.
2. Enter a string when prompted.
3. The script will display whether the entered string is a palindrome or not.
""""""

def is_palindrome(string):
    """"""Check if string is a Palindrome.

    Args:
        string (str): String.

    Returns:
        bool: True if string is a palindrome, False otherwise.

    """"""
    string = string.strip()
    return string == string[::-1]

def main():
    # Get user input
    user_input = input(""Enter a string: "")

    # Check if the input is a palindrome
    result = is_palindrome(user_input)

    # Display the result
    if result:
        print(f""The entered string '{user_input}' is a palindrome."")
    else:
        print(f""The entered string '{user_input}' is not a palindrome."")

if __name__ == ""__main__"":
    main()

"
7iEkn5c3,get_file_size,Python253,Python,Sunday 3rd of March 2024 08:14:07 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: get_file_size.py
# Author: Jeoi Reqi

""""""
Get File Size Script (In Bytes)

This script retrieves the size of a file named 'texty.txt' in the same directory
as the script. It utilizes a function, get_file_size, to get the file size.

Requirements:
- Python 3

Usage:
1. Save the script in the same directory as the 'texty.txt' file.
2. Run the script.
3. The script will display the size of the 'texty.txt' file in bytes.
""""""

import os

def get_file_size(file):
    """"""Get file size.

    Args:
        file (str): Input file.

    Returns:
        int: Size of the file in bytes.

    """"""
    return os.stat(file).st_size

def main():
    # Specify the file path
    file_path = 'texty.txt'  # Replace 'texty.txt' with the actual file name if needed

    # Get file size
    size = get_file_size(file_path)

    # Display the result
    print(f""Size of the '{file_path}' file: {size} bytes"")

if __name__ == ""__main__"":
    main()

"
FJkNkVmC,consonants_count,Python253,Python,Sunday 3rd of March 2024 08:12:21 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: consonants_count.py
# Author: Jeoi Reqi

""""""
Consonants Count Script

This script reads text from a specified file in the same directory and counts
the number of consonants in the text. It utilizes a function, count_consonants,
to perform the consonant counting operation.

Requirements:
- Python 3

Usage:
1. Save the text file in the same directory as the script.
2. Replace 'texty.txt' with the actual file name in the script.
3. Run the script.
4. The script will display the number of consonants in the text.
""""""

def count_consonants(text):
    """"""Count the number of consonants in a text.

    Args:
        text (str): Text.

    Returns:
        int: Number of consonants in the text.

    """"""
    consonants = set(""bcdfghjklmnpqrstvwxyz"")
    return sum(char.lower() in consonants for char in text)

def read_text_from_file(file_path):
    """"""Read text from a file.

    Args:
        file_path (str): Path to the file.

    Returns:
        str: Text read from the file.

    """"""
    with open(file_path, 'r', encoding='utf-8') as file:
        return file.read()

def main():
    # Specify the file path
    file_path = 'texty.txt'  # Replace 'texty.txt' with the actual file name

    # Read text from the file
    text = read_text_from_file(file_path)

    # Count consonants
    consonant_count = count_consonants(text)

    # Display the result
    print(f""Number of consonants in the text: {consonant_count}"")

if __name__ == ""__main__"":
    main()

"
ekSTF8Xq,vowel_count,Python253,Python,Sunday 3rd of March 2024 08:11:18 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: vowel_count.py
# Author: Jeoi Reqi

""""""
Vowel Count Script

This script reads text from a specified file in the same directory and counts
the number of vowels in the text. It utilizes a function, count_vowels, to
perform the vowel counting operation.

Requirements:
- Python 3

Usage:
1. Save the text file in the same directory as the script.
2. Replace 'texty.txt' with the actual file name in the script.
3. Run the script.
4. The script will display the number of vowels in the text.
""""""

def count_vowels(text):
    """"""Count the number of vowels in a text.

    Args:
        text (str): Text.

    Returns:
        int: Number of vowels in the text.

    """"""
    vowels = ['a', 'e', 'i', 'o', 'u']
    return sum(text.lower().count(vowel) for vowel in vowels)

def read_text_from_file(file_path):
    """"""Read text from a file.

    Args:
        file_path (str): Path to the file.

    Returns:
        str: Text read from the file.

    """"""
    with open(file_path, 'r', encoding='utf-8') as file:
        return file.read()

def main():
    # Specify the file path
    file_path = 'texty.txt'  # Replace 'texty.txt' with the actual file name

    # Read text from the file
    text = read_text_from_file(file_path)

    # Count vowels
    vowel_count = count_vowels(text)

    # Display the result
    print(f""Number of vowels in the text: {vowel_count}"")

if __name__ == ""__main__"":
    main()

"
FKpDLsev,Untitled,mzh_pb,C++,Sunday 3rd of March 2024 08:10:54 PM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long

mt19937 mt(time(0));

signed main() {
  ios::sync_with_stdio(0); cin.tie(0);
  int n, m; cin >> n >> m;
  vector<int> a(n); for (auto& i : a) cin >> i;
  vector<int> b(m); for (auto& i : b) cin >> i;

  int ans = 1e18;

  int magic = 1e5 + 5e4;
  while (magic--) {

    int p = 0, v = 1; int cnt = 0;
    vector<int> bc = b;
    for (int i = 0; i < m; i++) {
      while (bc[i]--) {
        if (a[p] != v) {
          cnt++;
        }
        p++;
      }
      v = 1 - v;
    }

    p = 0, v = 0; int cnt2 = 0;
    bc = b;
    for (int i = 0; i < m; i++) {
      while (bc[i]--) {
        if (a[p] != v) {
          cnt2++;
        }
        p++;
      }
      v = 1 - v;
    }

    ans = min({ans, cnt, cnt2});

    for (int i = 0; i < n; i++) {
      swap(b[mt() % m], b[mt() % m]);
    }
  }
  cout << ans << endl;
}"
qxS6cxk6,word_count,Python253,Python,Sunday 3rd of March 2024 08:09:49 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: word_count.py
# Author: Jeoi Reqi

""""""
Word Count Script

This script reads text from a specified file in the same directory and counts
the occurrences of each word in the text. It utilizes a function, count_words,
to perform the word counting operation.

Requirements:
- Python 3

Usage:
1. Save the text file in the same directory as the script.
2. Replace 'texty.txt' with the actual file name in the script.
3. Run the script.
4. The script will display the occurrences of each word in the text.
5. The script will prompt the user if they want to save the ordered word count data to a file.

Note: The output file sorts the words by the occurence values.
""""""

import string
from collections import Counter

def count_words(text):
    """"""Count the occurrences of each word in a given sentence.

    Args:
        text (str): Text.

    Returns:
        dict: Dictionary with the occurrences of each word.

    """"""
    # Remove punctuation and convert to lowercase
    cleaned_text = ''.join(char.lower() if char.isalnum() or char.isspace() else ' ' for char in text)
    
    # Split the text into words and count occurrences
    word_counts = Counter(cleaned_text.split())
    
    return dict(word_counts)

def read_text_from_file(file_path):
    """"""Read text from a file.

    Args:
        file_path (str): Path to the file.

    Returns:
        str: Text read from the file.

    """"""
    with open(file_path, 'r', encoding='utf-8') as file:
        return file.read()

def save_to_file(word_counts):
    """"""Save word count data to 'wordcount.txt' ordered by occurrence value.

    Args:
        word_counts (dict): Dictionary with word occurrences.

    """"""
    sorted_counts = sorted(word_counts.items(), key=lambda x: x[1], reverse=True)

    with open('wordcount.txt', 'w', encoding='utf-8') as file:
        current_count = None
        for word, count in sorted_counts:
            if count != current_count:
                if current_count is not None:
                    file.write('\n')
                file.write(f""Occurence Count: {count}\n"")
                file.write(""---------------\n"")
                current_count = count
            file.write(f""{word}\n"")

def main():
    # Specify the file path
    file_path = 'texty.txt'  # Replace 'texty.txt' with the actual file name

    # Read text from the file
    text = read_text_from_file(file_path)

    # Count words
    word_counts = count_words(text)

    # Display the result
    print(""\n\n\n\n::[ Occurrences of each word in the text ]::\n"")
    for word, count in word_counts.items():
        print(f""\t\t{word}: {count}"")

    # Ask the user if they want to save the word count data to a file
    print(""\n\n\n::[ Options ]::\n"")
    print(""1. Save word count data to 'wordcount.txt'."")
    print(""2. Do not save the word count data."")
    user_choice = input(""\nEnter your choice (1 or 2): "")

    # Process user's choice
    if user_choice == '1':
        save_to_file(word_counts)
        print(""Word count data saved to 'wordcount.txt'."")
    elif user_choice != '2':
        print(""Invalid choice. Word count data not saved."")

if __name__ == ""__main__"":
    main()

"
4xn09zc2,file_count,Python253,Python,Sunday 3rd of March 2024 08:08:31 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: file_count.py
# Author: Jeoi Reqi

""""""
File Count Script

This script searches recursively in the 'test' directory (in the same directory
as the script) and counts the number of files. It utilizes a function, count_files,
to perform the file counting operation.

Requirements:
- Python 3

Usage:
1. Save the script in the same directory as the 'test' folder.
2. Run the script.
3. The script will display the number of files in the 'test' directory.
""""""

import os

def count_files(path):
    """"""Count the number of files in a directory recursively.

    Args:
        path (str): Directory.

    Returns:
        int: Number of files.

    """"""
    count = 0
    for root, dirs, files in os.walk(path):
        count += len(files)
    return count

def main():
    # Specify the directory path
    directory_path = 'test'  # Replace 'test' with the actual directory name if needed

    # Count files
    file_count = count_files(directory_path)

    # Display the result
    print(f""Number of files in the '{directory_path}' directory: {file_count}"")

if __name__ == ""__main__"":
    main()

"
fzz4ktSz,dir_count,Python253,Python,Sunday 3rd of March 2024 08:05:50 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: dir_count.py
# Author: Jeoi Reqi

""""""
Directories Count Script

This script reads the directory path from a specified folder ('test') in the
same directory and counts the number of subfolders in the directory. It
utilizes a function, count_directories, to perform the directory counting operation.

Requirements:
- Python 3

Usage:
1. Save the 'test' folder in the same directory as the script.
2. Replace 'test' with the actual folder name in the script if needed.
3. Run the script.
4. The script will display the number of subfolders in the specified directory.
""""""

import os

def count_directories(path):
    """"""Count the number of subfolders in a directory.

    Args:
        path (str): Directory.

    Returns:
        int: Number of subfolders.

    """"""
    return sum(os.path.isdir(os.path.join(path, folder)) for folder in os.listdir(path))

def main():
    # Specify the folder path
    folder_path = 'test'  # Replace 'test' with the actual folder name if needed

    # Count subfolders
    directory_count = count_directories(folder_path)

    # Display the result
    print(f""Number of subfolders in the directory: {directory_count}"")

if __name__ == ""__main__"":
    main()

"
bYnnbrMC,file_character_count,Python253,Python,Sunday 3rd of March 2024 08:03:14 PM CDT,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Filename: file_character_count.py
# Author: Jeoi Reqi

""""""
File Character Count Script

This script reads text from a specified file ('texty.txt') in the same directory
and counts the number of characters in the text. It utilizes a function,
count_characters, to perform the character counting operation.

Requirements:
- Python 3

Usage:
1. Save the 'texty.txt' file in the same directory as the script.
2. Replace 'texty.txt' with the actual file name in the script if needed.
3. Run the script.
4. The script will display the number of characters in the text file.
""""""

def count_characters(file):
    """"""Count the number of characters in a text file.

    Args:
        file (str): Path of a text file.

    Returns:
        int: Number of characters in the text file.

    """"""
    with open(file, encoding='utf-8') as f:
        content = f.read()
    return len(content)

def main():
    # Specify the file path
    file_path = 'texty.txt'  # Replace 'texty.txt' with the actual file name if needed

    # Count characters
    character_count = count_characters(file_path)

    # Display the result
    print(f""Number of characters in the text file: {character_count}"")

if __name__ == ""__main__"":
    main()

"
TMxjE2Md,465. Optimal Account Balancing,bennyfromtheblock,Python,Sunday 3rd of March 2024 07:53:46 PM CDT,"# 1. Record all balances after transactions
# 2. Keep only the non-zero balances in a list
# 3. We know the sum of this list is 0, so at most we'll have n-1 transactions.
# Goal is to create minimum number of transactions between positive and negative balances to reach 0 sum
# So let's try recursively evaluating every possibility in the transaction graph, via DFS
# at balance i, try to transact with every eligible subsequent balance (opposite sign) from i+1 to n, recurse
# backtrack afterwards
# TC: O((n-1)!)
# SC: O(n)

class Solution:
    def minTransfers(self, transactions: List[List[int]]) -> int:
        balances = defaultdict(int)

        for tx in transactions:
            payer, payee, amount = tx
            balances[payer] += amount
            balances[payee] -= amount

        balance_list = [v for v in balances.values() if v != 0]
        n = len(balance_list)

        def dfs(cur):
            while cur < n and balance_list[cur] == 0:
                cur += 1

            if cur == n:
                return 0

            txs = float('inf')
            for nxt in range(cur+1, n):
                if balance_list[nxt] * balance_list[cur] < 0:
                    balance_list[nxt] += balance_list[cur]
                    txs = min(txs, 1 + dfs(cur + 1))
                    balance_list[nxt] -= balance_list[cur]

            return txs

        return dfs(0)

    
    
    
# Approach 2: BFS
# compared to DFS, this will save some time since BFS won't evaluate paths that take more moves than absolute minimum
# however, you will need to keep copies of the state (balance list) instead of re-using the same state as in backtracking
# So trading off memory for time
# TC: O((N-1)!), same as DFS but won't evaluate more paths than necessary
# SC: Let M be min number of transactions. widest point of graph is at level M, where we have (N-1)(N-2)...(N-M) * N which reduces to O(N^(M+1))

class Solution:
    def minTransfers(self, transactions: List[List[int]]) -> int:
        balances = defaultdict(int)

        for tx in transactions:
            payer, payee, amount = tx
            balances[payer] += amount
            balances[payee] -= amount

        balance_list = [v for v in balances.values() if v != 0]
        n = len(balance_list)

        queue = deque([(0, 0, balance_list.copy())]) # moves, cur_idx, state

        while queue:
            moves, cur_idx, bal_state = queue.popleft()
            if cur_idx == n:
                return moves

            for tx_target in range(cur_idx + 1, n):
                if bal_state[tx_target] * bal_state[cur_idx] >= 0: #opposite sign only
                    continue

                new_bal_state = bal_state.copy()
                new_bal_state[tx_target] += new_bal_state[cur_idx]
                nxt = cur_idx + 1

                while nxt < n and new_bal_state[nxt] == 0:
                    nxt += 1
                    
                queue.append((moves+1, nxt, new_bal_state))

        return -1
    
    
# More optimized BFS: Since we are progressively moving our current_idx pointer forward, we don't care about
# what's behind the it. So don't copy more balanace_state than necessary

class Solution:
    def minTransfers(self, transactions: List[List[int]]) -> int:
        balances = defaultdict(int)

        for tx in transactions:
            payer, payee, amount = tx
            balances[payer] += amount
            balances[payee] -= amount

        balance_list = [v for v in balances.values() if v != 0]
        n = len(balance_list)

        queue = deque([(0, balance_list.copy())]) # moves, state

        while queue:
            moves, bal_state = queue.popleft()
            if not bal_state:
                return moves

            for tx_target in range(1, len(bal_state)):
                if bal_state[tx_target] * bal_state[0] >= 0: #opposite sign only
                    continue

                bal_state[tx_target] += bal_state[0]
                nxt = 1

                while nxt < len(bal_state) and bal_state[nxt] == 0:
                    nxt += 1

                queue.append((moves+1, bal_state[nxt:].copy()))
                bal_state[tx_target] -= bal_state[0]

        return -1
"
86cEapnv,Review Pastes.io [Pastebin Alternative],xxsa,PHP,Sunday 3rd of March 2024 07:45:07 PM CDT,https://pastes.io - Paste Tool - Pastebin Alternative Free
stvWzDw4,Mouse_libs.py,egor230,Python,Sunday 3rd of March 2024 07:42:37 PM CDT,"import time, json, os, copy, psutil, threading, re, select, glob, subprocess, psutil
from tkinter import *
from tkinter.ttk import Combobox  # импортируем только то что надо
from tkinter import messagebox
from tkinter import filedialog
from os import path
# from PIL import ImageTk, Image
from deepdiff import DeepDiff
# Управление мышью
import keyboard as keybord_from
# # Нажатие левой клавиши Ctrl
# keyboard.press('ctrl')
#
# # Отпускание левой клавиши Ctrl
# keyboard.release('ctrl')
from pynput import mouse, keyboard
from pynput.mouse import Button as Button_Controller


script = f'''#!/bin/bash
current_user=$(whoami);
echo $current_user
exit;# Завершаем выполнение скрипта
'''
# Вызываем скрипт
user = subprocess.run(['bash'], input=script, stdout=subprocess.PIPE, text=True).stdout.strip()

def check_current_active_window(user):# Получаем идентификатор активного окна
 script1 = f'''#!/bin/bash
 sleep 1;
 ps aux;
 sleep 1;
 exit
 '''
 result = str(subprocess.run(['bash'], input=script1, stdout=subprocess.PIPE, text=True).stdout)
 lines = result.split('\n')
 result=[]
 for item in lines:
  item=str(item)
  # print(item)
  if not 'root' or user in item:
   result.append(item)
 script2 = f'''#!/bin/bash
 sleep 1;
 # Получаем идентификатор активного окна
 active_window_id=$(xdotool getactivewindow)

# Получаем идентификатор процесса активного окна
 process_id_active=$(xdotool getwindowpid $active_window_id)

# Выводим результаты
 echo ""Active Window ID: $active_window_id""
 echo ""Process ID of Active Window: $process_id_active""

 sleep 1;
 exit
 '''
 result1 = subprocess.run(['bash'], input=script2, stdout=subprocess.PIPE, text=True).stdout.strip()

 # Разбиваем вывод по новой строке и извлекаем значения
 lines = result1.split('\n')
 active_window_id = int(lines[0].split(': ')[1])
 process_id_active = int(lines[1].split(': ')[1]) # print(active_window_id)
 a = []
 time.sleep(0.53)
 for line in result:   # print(line)
   user_name = ' '.join(line.split()[:1])# расположение exe
   pid_id = int(line.split()[1])  # id потока
   if user_name==user and pid_id==process_id_active:# Только процессоры запущенны от имени пользователя
    dir_process_name = ' '.join(line.split()[10:])# расположение exe
    filename = str(dir_process_name.split('\\')[-1])# имя процесса.
    if '.exe' in filename:     # print(""filename "", filename, sep="" "")
     try:      # a.append({'dir': dir_process_name, 'pid': pid_id, 'exe': filename})# нашли pid активного  окна
      return dir_process_name# активного окна
     except:
       return "" ""
 return dir_process_name
# Создаем экземпляр класса Controller для управления мышью
from pynput.keyboard import  Key, Listener

def check_star():
 process_list = [p.info for p in psutil.process_iter(attrs=['name'])]
 a=[]
 try:
  for process in process_list:   # print(process['name'])
   if 'Mouse_setting_control_for_buttons_python_for_linux' in  process['name']:
    a.append(process)
    if len(process_list)>1:
     return False
    else:
     return True
 except psutil.NoSuchProcess:
    pass
def get_path_current_active(games_checkmark_paths):# Получаем идентификатор активного окна

 try:
  active_window_id = subprocess.check_output(['xdotool', 'getactivewindow']).decode().strip()
  # Получаем идентификатор процесса, связанного с активным окном
  process_id = subprocess.check_output(['xdotool', 'getwindowpid', active_window_id]).decode().strip()
  process_list = [p.info for p in psutil.process_iter(attrs=['name', 'pid', 'exe'])]
  for process in process_list:

    if int(process_id)== int(process['pid']):# нашли pid активного  окна
     if str(process['exe']) in games_checkmark_paths:
      path_game = str(process['exe'])
      return path_game# путь к игре активного окна

  return games_checkmark_paths[0]
 except :
    pass
#Controller,
# keyboard = Controller()
#
# # Нажатие клавиши ""A""
# keyboard.press(Key.ctrl_l)
# time.sleep(0.1)  # Пауза для эмуляции удержания клавиши
# keyboard.release(Key.ctrl_l)

# import pydirectinput as directinput
# # Нажатие левой клавиши Ctrl
# directinput.keyDown('ctrl')

# Отпускание левой клавиши Ctrl
# directinput.keyUp('ctrl')

# import pyautogui
# # Нажатие левой клавиши Ctrl
# pyautogui.keyDown('ctrlleft')
#
# # Отпускание левой клавиши Ctrl
# pyautogui.keyUp('ctrlleft')
'''
keyboard: Эта библиотека предоставляет простые функции для считывания и эмуляции нажатий клавиш на клавиатуре. 
Она позволяет считывать нажатия клавиш, определять, какие клавиши были нажаты одновременно, и эмулировать 
нажатия клавиш. Однако, она не предоставляет возможности для управления мышью.

pynput: Эта библиотека предоставляет возможность управлять как клавиатурой, так и мышью на уровне операционной
системы. Она позволяет считывать и эмулировать нажатия клавиш, а также выполнять другие действия, связанные 
с мышью, такие как нажатие кнопок мыши, перемещение курсора и прокрутка колесика мыши. Она также предоставляет 
возможность мониторинга клавиатуры и мыши, а также ограничения действий пользователя.

pydirectinput: Эта библиотека предоставляет функции для эмуляции нажатий клавиш и других действий на уровне 
операционной системы. Она позволяет эмулировать нажатия клавиш, перемещение мыши, клики и другие действия. 
Она не предоставляет возможности для мониторинга клавиатуры и мыши.

pyautogui: Эта библиотека предоставляет функции для управления мышью и клавиатурой на уровне операционной системы. 
Она позволяет эмулировать нажатия клавиш, перемещение мыши, клики и другие действия. Она также предоставляет функции 
для работы с изображениями на экране и автоматизации задач на компьютере.
'''
KEYS = {"" "": 0x0,""LBUTTON"": 'mouse left', ""RBUTTON"": 'mouse right', ""WHEEL_MOUSE_BUTTON"": ""mouse middle"",
        ""WHEEL_MOUSE_UP"" : ""WHEEL_MOUSE_UP"", ""scroll_up"" : ""scroll_down"", ""MBUTTON"": 0x04, ""SCROLL_UP"": ""scroll_up"",
        ""SCROLL_DOWN"" : ""scroll_down"", ""XBUTTON1"": 0x05, ""XBUTTON2"": 0x06, ""BACKSPACE"": ""BackSpace"",
        ""TAB"": ""Tab"", ""CLEAR"": 0x0C, ""RETURN"": ""Return"", ""KP_Enter"" : ""KP_Enter"",
        ""SHIFT"": 0x10, ""CONTROL"": 0x11, ""MENU"": 0x12, ""PAUSE"": 0x13, ""CAPITAL"": 0x14,
        ""KANA"": 0x15, ""JUNJA"": 0x17, ""FINAL"": 0x18, ""KANJI"": 0x19, ""ESCAPE"": 0x1B,
        ""CONVERT"": 0x1C, ""NONCONVERT"": 0x1D, ""ACCEPT"": 0x1E, ""MODECHANGE"": 0x1F, ""SPACE"": ""space"",
        ""PRIOR"": 0x21, ""NEXT"": 0x22, ""END"": ""0x23"", ""HOME"": ""Home"", ""LEFT"": 0x25, ""UP"": 0x26,
        ""RIGHT"": 0x27, ""DOWN"": 0x28, ""SELECT"": 0x29, ""PRINT"": 0x2A, ""EXECUTE"": 0x2B, ""SNAPSHOT"": 0x2C,
        ""INSERT"": 0x2D, ""DELETE"": ""Delete"", ""HELP"": 0x2F,  ""LWIN"": ""Super_L"", ""RWIN"": ""Super_R"",

        ""KEY0"": 0, ""KEY1"": 1, ""KEY2"": 2, ""KEY3"": 3, ""KEY4"": 4, ""KEY5"": 5, ""KEY6"": 6,
        ""KEY7"": 7, ""KEY8"": 8, ""KEY9"": 9, ""A"": ""A"", ""B"": ""B"", ""C"": ""C"", ""D"": ""D"", ""E"": ""E"", ""F"": ""F"",
        ""G"": ""G"", ""H"": ""H"", ""I"": ""I"", ""J"": ""J"", ""K"": ""K"", ""L"": ""L"", ""M"": ""M"", ""N"": ""N"", ""O"": ""O"",
        ""P"": ""P"", ""Q"": ""Q"", ""R"": ""R"", ""S"": ""S"", ""T"": ""T"", ""U"": ""U"", ""V"": ""V"", ""W"": ""W"", ""X"": ""X"", ""Y"": ""Y"",
        ""Z"": ""Z"",

        ""APPS"": 0x5D, ""SLEEP"": 0x5F, ""NUMPAD0"": 0x60, ""NUMPAD1"": 79,
        ""NUMPAD2"": 80, ""NUMPAD3"": 81, ""NUMPAD4"": 82, ""NUMPAD5"": 83, ""NUMPAD6"": 84, ""NUMPAD7"": 85,
        ""NUMPAD8"": 86, ""NUMPAD9"": 87, ""MULTIPLY"": 0x6A, ""ADD"": 78, ""SEPARATOR"": 0x6C, ""SUBTRACT"": 0x6D,
        ""DECIMAL"": 0x6E, ""DIVIDE"": 0x6F, ""F1"": ""F1"", ""F2"": ""F2"", ""F3"": ""F3"", ""F4"": ""F4"", ""F5"": ""F5"",
        ""F6"": ""F6"", ""F7"": ""F7"", ""F8"": ""F8"", ""F9"": ""F9"", ""F10"": ""F10"", ""F11"": ""F11"", ""F12"": ""F12"",

        ""F13"": 0x7C, ""F14"": 0x7D, ""F15"": 0x7E, ""F16"": 0x7F, ""F17"": 0x80, ""F18"": 0x81, ""F19"": 0x82, ""F20"": 0x83, ""F21"": 0x84,
        ""F22"": 0x85, ""F23"": 0x86, ""F24"": 0x87,""NUMLOCK"": ""Num_Lock"", ""SCROLL"": ""Scroll_Lock"",
         ""OEM_FJ_JISHO"": 0x92, ""OEM_FJ_MASSHOU"": 0x93,
        ""OEM_FJ_TOUROKU"": 0x94, ""OEM_FJ_LOYA"": 0x95, ""OEM_FJ_ROYA"": 0x96, ""LSHIFT"": ""Shift_L"", ""RSHIFT"": ""Shift_R"", ""LCONTROL"": ""Control"",
        ""RCONTROL"": ""Control_R"",  ""LMENU"": 0xA4, ""RMENU"": 0xA5, ""BROWSER_BACK"": 0xA6,
        ""BROWSER_FORWARD"": 0xA7, ""BROWSER_REFRESH"": 0xA8, ""BROWSER_STOP"": 0xA9, ""BROWSER_SEARCH"": 0xAA, ""BROWSER_FAVORITES"": 0xAB, ""BROWSER_HOME"": 0xAC, ""VOLUME_MUTE"": 0xAD, ""VOLUME_DOWN"": 0xAE,
        ""VOLUME_UP"": 0xAF, ""MEDIA_NEXT_TRACK"": 0xB0, ""MEDIA_PREV_TRACK"": 0xB1, ""MEDIA_STOP"": 0xB2, ""MEDIA_PLAY_PAUSE"": 0xB3, ""LAUNCH_MAIL"": 0xB4, ""LAUNCH_MEDIA_SELECT"": 0xB5, ""LAUNCH_APP1"": 0xB6,
        ""LAUNCH_APP2"": 0xB7, ""OEM_1"": 0xBA, ""OEM_PLUS"": 0xBB, ""OEM_COMMA"": 0xBC, ""OEM_MINUS"": 0xBD, ""OEM_PERIOD"": 0xBE, "" OEM_2"": 0xBF, ""OEM_3"": 0xC0, ""ABNT_C1"": 0xC1, ""ABNT_C2"": 0xC2, ""OEM_4"": 0xDB,
        ""OEM_5"": 0xDC, ""OEM_6"": 0xDD, ""OEM_7"": 0xDE, ""OEM_8"": 0xDF, ""OEM_AX"": 0xE1,
        ""OEM_102"": 0xE2, ""ICO_HELP"": 0xE3, ""PROCESSKEY"": 0xE5, ""ICO_CLEAR"": 0xE6, ""PACKET"": 0xE7, ""OEM_RESET"": 0xE9, ""OEM_JUMP"": 0xEA, ""OEM_PA1"": 0xEB, ""OEM_PA2"": 0xEC, ""OEM_PA3"": 0xED,
        ""OEM_WSCTRL"": 0xEE, ""OEM_CUSEL"": 0xEF, ""OEM_ATTN"": 0xF0, ""OEM_FINISH"": 0xF1, ""OEM_COPY"": 0xF2, ""OEM_AUTO"": 0xF3, ""OEM_ENLW"": 0xF4, ""OEM_BACKTAB"": 0xF5, ""ATTN"": 0xF6, ""CRSEL"": 0xF7, ""EXSEL"": 0xF8, "" EREOF"": 0xF9, ""PLAY"": 0xFA, ""ZOOM"": 0xFB, ""PA1"": 0xFD, "" OEM_CLEAR"": 0xFE
        }


class ToolTip(object):

    def __init__(self, widget):
        self.widget = widget
        self.tipwindow = None
        self.id = None
        self.x = self.y = 0

    def showtip(self, text):
        ""Display text in tooltip window""
        self.text = text
        if self.tipwindow or not self.text:
            return
        x, y, cx, cy = self.widget.bbox(""insert"")
        x = x + self.widget.winfo_rootx() + 27
        y = y + cy + self.widget.winfo_rooty() +7
        self.tipwindow = tw = Toplevel(self.widget)
        tw.wm_overrideredirect(1)
        tw.wm_geometry(""+%d+%d"" % (x, y))
        label = Label(tw, text=self.text, justify=LEFT,
                      background=""#ffffe0"", relief=SOLID, borderwidth=1,
                      font=(""tahoma"", ""10"", ""normal""))
        label.pack(ipadx=1)

    def hidetip(self):
        tw = self.tipwindow
        self.tipwindow = None
        if tw:
            tw.destroy()

def CreateToolTip(widget, text):
    toolTip = ToolTip(widget)
    def enter(event):
        toolTip.showtip(text)
    def leave(event):
        toolTip.hidetip()
    widget.bind('<Enter>', enter)
    widget.bind('<Leave>', leave)
def hide_tooltip(self, event):
  if self.tooltip:
    self.tooltip.destroy()
    self.tooltip = None
"
