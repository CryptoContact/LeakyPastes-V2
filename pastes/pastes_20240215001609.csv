id,title,username,language,date,content
NTEq9WqM,2024-02-14_stats.json,rdp_snitch,JSON,Wednesday 14th of February 2024 06:15:08 PM CDT,"{
  ""ip"": {
    ""98.159.37.156"": 1,
    ""167.248.133.37"": 1,
    ""139.59.185.252"": 1,
    ""94.247.172.115"": 2,
    ""118.123.105.93"": 2,
    ""36.133.127.240"": 3,
    ""62.204.41.107"": 6,
    ""198.235.24.211"": 3,
    ""87.251.75.145"": 2,
    ""87.251.75.64"": 1,
    ""14.194.5.2"": 3,
    ""180.93.172.224"": 1,
    ""45.135.201.151"": 2,
    ""46.19.143.42"": 1,
    ""185.170.144.3"": 2,
    ""212.70.149.142"": 6,
    ""45.79.93.238"": 1,
    ""196.190.117.7"": 2,
    ""87.251.75.120"": 2,
    ""2.57.122.86"": 3,
    ""205.210.31.89"": 3,
    ""185.196.220.41"": 3,
    ""161.97.141.176"": 1,
    ""193.142.146.227"": 3,
    ""8.213.194.120"": 1,
    ""111.230.81.178"": 4,
    ""109.107.161.22"": 1,
    ""45.131.195.177"": 1,
    ""66.131.250.237"": 1,
    ""167.94.138.35"": 1,
    ""101.36.114.209"": 1,
    ""36.139.61.15"": 1,
    ""46.19.139.234"": 1,
    ""94.232.41.30"": 2,
    ""205.210.31.51"": 3,
    ""71.6.134.230"": 10,
    ""43.158.217.205"": 1,
    ""192.3.159.135"": 2,
    ""190.85.232.116"": 1,
    ""123.56.20.194"": 1,
    ""185.180.140.5"": 1,
    ""167.94.146.59"": 1,
    ""61.91.43.232"": 1,
    ""120.240.145.8"": 1,
    ""41.65.239.202"": 1,
    ""198.235.24.111"": 3
  },
  ""asn"": {
    ""AS62240"": 2,
    ""AS398324"": 2,
    ""AS14061"": 1,
    ""AS42708"": 2,
    ""AS38283"": 2,
    ""AS9808"": 3,
    ""AS59425"": 6,
    ""AS396982"": 12,
    ""AS208091"": 7,
    ""AS45820"": 3,
    ""AS135944"": 1,
    ""AS44486"": 2,
    ""AS51852"": 2,
    ""AS197414"": 2,
    ""AS204428"": 6,
    ""AS63949"": 1,
    ""AS24757"": 2,
    ""AS47890"": 3,
    ""AS208046"": 6,
    ""AS51167"": 1,
    ""AS45102"": 1,
    ""AS45090"": 4,
    ""AS216334"": 1,
    ""AS5769"": 1,
    ""AS135377"": 1,
    ""AS56041"": 1,
    ""AS10439"": 10,
    ""AS132203"": 1,
    ""AS36352"": 2,
    ""AS14080"": 1,
    ""AS37963"": 1,
    ""AS211680"": 1,
    ""AS398705"": 1,
    ""AS7470"": 1,
    ""AS56040"": 1,
    ""AS36992"": 1
  },
  ""isp"": {
    ""LogicWeb Inc."": 1,
    ""Censys, Inc."": 3,
    ""DIGITALOCEAN"": 1,
    ""GleSYS Internet Services AB"": 2,
    ""CHINANET SiChuan Telecom Internet Data Center"": 2,
    ""China Mobile"": 3,
    ""Horizon LLC"": 6,
    ""Google LLC"": 12,
    ""Xhost Internet Solutions LP"": 9,
    ""Tata Tele Services GSM"": 3,
    ""SPT"": 1,
    ""LIVINGBOTS"": 2,
    ""Private Layer INC"": 2,
    ""SS-Net"": 6,
    ""Akamai Technologies, Inc."": 1,
    ""Ethiotelecom"": 2,
    ""Unmanaged LTD"": 3,
    ""ColocationX Ltd."": 6,
    ""Contabo GmbH"": 1,
    ""Alibaba (US) Technology Co., Ltd."": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 5,
    ""New Hosting Technologies LLC"": 1,
    ""VPN"": 1,
    ""Le Groupe Videotron Ltee"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""CariNet, Inc."": 10,
    ""HostPapa"": 2,
    ""Telmex Colombia S.A."": 1,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""NSEC - Sistemas Informaticos, S.A."": 1,
    ""True Internet Corporation CO. Ltd."": 1,
    ""China Mobile communications corporation"": 1,
    ""Etisalat Misr"": 1
  },
  ""org"": {
    ""Dedicated Servers"": 1,
    ""Censys, Inc."": 2,
    ""DigitalOcean, LLC"": 1,
    ""Unknown"": 6,
    ""Chinanet SC"": 2,
    ""China Mobile Communications Corporation"": 4,
    ""Horizon LLC"": 6,
    ""Palo Alto Networks, Inc"": 12,
    ""Xhost Internet Solutions"": 5,
    ""Tata Teleservices Limited -GSM Division"": 3,
    ""Saigon Postel Corporation"": 1,
    ""Client1096"": 1,
    ""Xhostis"": 2,
    ""4Media Ltd"": 6,
    ""Linode"": 1,
    ""Pptechnology Limited"": 3,
    ""Makut Investments"": 3,
    ""Contabo GmbH"": 1,
    ""ColocationX Ltd"": 3,
    ""Alibaba.com Singapore E-Commerce Private Limited"": 1,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 4,
    ""New Hosting Technologies LLC"": 1,
    ""VPN-Consumer-US"": 1,
    ""Videotron Ltee"": 1,
    ""Censys, Inc"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Fast Serv Inc."": 1,
    ""Dmitriy Panchenko"": 2,
    ""CariNet, Inc."": 10,
    ""Tencent Cloud Computing"": 1,
    ""RackNerd LLC"": 2,
    ""Telmex Colombia S.A"": 1,
    ""Aliyun Computing Co., LTD"": 1,
    ""ICG"": 1,
    ""True Internet Corporation CO. LTD"": 1,
    ""China Mobile"": 1,
    ""Nile Online"": 1
  },
  ""regionName"": {
    ""California"": 14,
    ""Michigan"": 2,
    ""England"": 4,
    ""Halland County"": 2,
    ""Sichuan"": 2,
    ""Shandong"": 3,
    ""Moscow"": 7,
    ""North Holland"": 10,
    ""Uttar Pradesh"": 3,
    ""Hanoi"": 1,
    ""Bremen"": 2,
    ""Zurich"": 1,
    ""Plovdiv"": 6,
    ""Addis Ababa"": 2,
    ""Virginia"": 3,
    ""North Rhine-Westphalia"": 1,
    ""Bangkok"": 2,
    ""Guangdong"": 5,
    ""New Jersey"": 1,
    ""Quebec"": 1,
    ""Seoul"": 1,
    ""Zhejiang"": 1,
    ""Bern"": 1,
    ""Perm Krai"": 2,
    ""Nevada"": 10,
    ""Maharashtra"": 1,
    ""Texas"": 3,
    ""Bogota D.C."": 1,
    ""Beijing"": 1,
    ""Hesse"": 1,
    ""Cairo Governorate"": 1
  },
  ""country"": {
    ""United States"": 33,
    ""United Kingdom"": 4,
    ""Sweden"": 2,
    ""China"": 12,
    ""Russia"": 9,
    ""The Netherlands"": 10,
    ""India"": 4,
    ""Vietnam"": 1,
    ""Germany"": 4,
    ""Switzerland"": 2,
    ""Bulgaria"": 6,
    ""Ethiopia"": 2,
    ""Thailand"": 2,
    ""Canada"": 1,
    ""South Korea"": 1,
    ""Colombia"": 1,
    ""Egypt"": 1
  },
  ""account"": {
    ""(empty)"": 9,
    ""hello"": 28,
    ""nmap"": 3,
    ""Test"": 8,
    ""hSNXSIvlp"": 1,
    ""GyaPXi"": 1,
    ""rFvrBL"": 1,
    ""Administr"": 14,
    ""xzRvvbADS"": 1,
    ""RMULdp"": 1,
    ""AHhMYF"": 1,
    ""Domain"": 8,
    ""Administrator"": 1,
    ""gRMxlXrYK"": 1,
    ""yVkUiC"": 1,
    ""cnXWiC"": 1,
    ""eltons"": 5,
    ""administr"": 5,
    ""pamn"": 1,
    ""2f48amar"": 1,
    ""YAsEhfEpY"": 1,
    ""njiWAr"": 1,
    ""EOZqmI"": 1
  },
  ""keyboard"": {
    ""Unknown"": 95
  },
  ""client_build"": {
    ""Unknown"": 95
  },
  ""client_name"": {
    ""Unknown"": 95
  },
  ""ip_type"": {
    ""hosting & proxy"": 5,
    ""Unknown"": 48,
    ""hosting"": 30,
    ""proxy"": 3,
    ""mobile"": 9
  }
}"
TUH8FA7k,java-007-code-review-app-6,kmprograms,Java,Wednesday 14th of February 2024 05:53:28 PM CDT,"import java.util.Random;

public class App6 {

    // Zadanie 13
    // Wylosuj trzy liczby zmiennoprzecinkowe z przedziału [3.5, 5.6] i sprawdź, czy mogą one
    // być długościami boków dowolnego trójkąta. Czy te liczby mogą stanowić boki trójkąta
    // prostokątnego? Jeżeli liczby tworzą boki jakiegokolwiek trójkąta wyznacz jego pole i obwód.

    // [ 3.5, 5.6 ] -> mnozy sie przedzial przez 10 -> [ 35, 56 ] -> Losuje sie liczbe z przedzialu calkowitoliczbowego
    // -> Potem dzieli sie przez to przez co sie pomnozylo czyliu u nas przez 10

    static double randDbl(double min, double max, int precision) {
        return 0;
    }

    static double getRandomNumberFromSpecificRange(double a, double b) {
        return new Random().nextDouble(a, b + 0.01);
    }

    static boolean isTriangle(double a, double b, double c) {
        validSides(a, b, c);
        return a + b > c && a + c > b && b + c > a;
    }

    static boolean isRectangularTriangle(double a, double b, double c) {
        var a2 = a * a;
        var b2 = b * b;
        var c2 = c * c;

        return isTriangle(a, b, c) && (a2 + b2 == c2 || a2 + c2 == b2 || b2 + c2 == a2);
    }

    static double getPerimeter(double a, double b, double c) {
        if (isTriangle(a, b, c)) {
            throw new IllegalStateException(""Given arguments don't create triangle"");
        }

        return a + b + c;
    }

    static double getArea(double a, double b, double c, double per) {
        if (isTriangle(a, b, c)) {
            throw new IllegalStateException(""Given arguments don't create triangle"");
        }

        return a == b && b == c ? (a * a * Math.sqrt(3)) / 4 : Math.sqrt(per * (per - a) * (per - b) * (per - c));

    }

    static double getArea(double a, double b) {
        return (a * b) / 2;
    }

    static void validSides(double a, double b, double c) {
        if (a <= 0 || b <= 0 || c <= 0) {
            throw new IllegalArgumentException(""Incorrect values sides"");
        }
    }

    static void displayInfo(double a, double b, double c) {
        System.out.printf(""Obwód t wynosi %.2f%n"", getPerimeter(a, b, c));
        System.out.printf(""Pole t = %.2f"", getArea(a, b, c, getPerimeter(a, b, c)));

        if (isRectangularTriangle(a, b, c)) {
            System.out.println(""TAK, trojkat prostokatny istnieje"");
            System.out.printf(""Obwód wynosi %.2f"", getPerimeter(a, b, c));
            System.out.printf(""Pole wynosi %.2f"", getArea(a, b));
        }
    }

    public static void main(String[] args) {
        var a = getRandomNumberFromSpecificRange(3.5, 5.6);
        var b = getRandomNumberFromSpecificRange(3.5, 5.6);
        var c = getRandomNumberFromSpecificRange(3.5, 5.6);
        displayInfo(a, b, c);

        // randDbl(3.45, 5.678, 3);
    }
}
"
S8KZ78Gp,java-007-code-review-app-5,kmprograms,Java,Wednesday 14th of February 2024 05:52:52 PM CDT,"import java.util.Random;

public class App5 {
    // Zadanie 12
    // Wylosuj trzy liczby całkowite z przedziału [-20, 20] i sprawdź, czy średnia arytmetyczna
    // liczby największej oraz liczby najmniejszej jest większa od liczby środkowej.

    static int getRandomNumberFromSpecificRange(int a, int b) {
        return new Random().nextInt(a, b + 1);
    }

    static double getAvg(int a, int b, int amountNumber) {
        if (amountNumber <= 0) {
            throw new IllegalArgumentException(""Argument value amount number must be greater than zero"");
        }
        return (double) (a + b) / amountNumber;
    }

    static int getMaxValue(int n1, int n2, int n3) {
        return Math.max(n1, Math.max(n2, n3));
    }

    static int getMinValue(int n1, int n2, int n3) {
        return Math.min(n1, Math.min(n2, n3));
    }

    static int calcMidValue(int n1, int n2, int n3, int max, int min) {
        return n1 + n2 + n3 - min - max;
    }

    public static void main(String[] args) {
        var a = getRandomNumberFromSpecificRange(-20, 20);
        var b = getRandomNumberFromSpecificRange(-20, 20);
        var c = getRandomNumberFromSpecificRange(-20, 20);

        var min = getMinValue(a, b, c);
        var max = getMaxValue(a, b, c);
        var avg = getAvg(min, max, 2);
        var mid = calcMidValue(a, b, c, max, min);

        System.out.println(avg > mid ? ""TAK"" : ""NIE"");
    }
}
"
VYb7EdsN,java-007-code-review-app-4,kmprograms,Java,Wednesday 14th of February 2024 05:52:26 PM CDT,"import java.util.Random;
import java.util.Scanner;

public class App4 {
    // Zadanie 11
    // Pobierz od użytkownika dwie liczby całkowite i sprawdź, czy ich średnia arytmetyczna jest
    // większa od liczby całkowitej wylosowanej z przedziału [-10, 10].

    static int getInt(String message) {
        if (message.isEmpty()) {
            throw new IllegalArgumentException(""Lack message"");
        }

        System.out.println(message);
        return new Scanner(System.in).nextInt();
    }

    static double getAvg(int a, int b, int amountNumber) {
        if (amountNumber <= 0) {
            throw new IllegalArgumentException(""Argument value amount number must be greater than zero"");
        }
        return (double) (a + b) / amountNumber;
    }

    static int getRandomNumberFromSpecificRange(int a, int b) {
        return new Random().nextInt(a, b + 1);
    }

    public static void main(String[] args) {
        var a = getInt(""Podaj liczbe"");
        var b = getInt(""Podaj liczbe"");
        var avg = getAvg(a, b, 2);
        var rndNumber = getRandomNumberFromSpecificRange(-10, 10);
        System.out.println(avg > rndNumber ? ""TAK"" : ""NIE"");
    }
}
"
wTqUdAaR,java-007-code-review-app-3,kmprograms,Java,Wednesday 14th of February 2024 05:51:55 PM CDT,"import java.util.Random;
import java.util.Scanner;

public class App3 {
    // Zadanie 10
    // Wylosuj do zmiennej a liczbę z przedziału <1,20>. Pobieraj od użytkownika dwie liczby,
    // dopóki ich średnia arytmetyczna nie będzie różniła się od wartości zmiennej a o mniej
    // niż 2.

    static int getRandomNumberFromSpecificRange(int a, int b) {
        return new Random().nextInt(a, b + 1);
    }

    static int getInt(String message) {
        if (message.isEmpty()) {
            throw new IllegalArgumentException(""Lack message"");
        }

        var sc = new Scanner(System.in);
        System.out.println(message);
        return sc.nextInt();
    }

    static double getAvg(int x, int y) {
        return (x + y) / 2.0;
    }

    /*static boolean checkIsAvgIsSmallerAboutTwoFromRandomVariable(double avg, int a) {
        return Math.abs(avg - a) >= valueSmallerNumber;
    }*/

    static boolean haveAvgWithGreaterDiff(int n1, int n2, int n, double diff) {
        return Math.abs((n1 + n2) / 2.0 - n) <= diff;
    }

    static void getNumberFromUser(int randNum) {
        var n1 = 0;
        var n2 = 0;
        do {
            n1 = getInt(""Podaj pierwsza liczbe"");
            n2 = getInt(""Podaj druga liczbe"");
        } while (!haveAvgWithGreaterDiff(n1, n2, randNum, 2));

        System.out.println(n1);
        System.out.println(n2);
    }

    public static void main(String[] args) {
        var a = getRandomNumberFromSpecificRange(1, 20);
        System.out.println(a);
        getNumberFromUser(a);
    }
}
"
U6LeGea4,java-007-code-review-app-2,kmprograms,Java,Wednesday 14th of February 2024 05:51:12 PM CDT,"import java.util.Random;

public class App2 {

    // Zadanie 9
    // Wylosuj trzy liczby z przedziału odpowiednio <0, 10>, <-13, 23>, <34, 87>. Oblicz
    // średnią arytmetyczną wyznaczonych liczb i wypisz tą liczbę spośród losowanych
    // wcześniej, która ma wartość najbliżej obliczonej średniej.

    static int randInt(int a, int b) {
        return new Random().nextInt(a, b + 1);
    }

    static double getAvg(int a, int b, int c) {
        return (a + b + c) / 3.0;
    }

    static int getNearestToAvg(int a, int b, int c) {
        var avg = getAvg(a, b, c);
        var diffA = Math.abs(a - avg);
        var diffB = Math.abs(b - avg);
        var diffC = Math.abs(c - avg);
        var minDiff = Math.min(diffA, Math.min(diffB, diffC));

        if (diffA == minDiff) {
            return a;
        }

        if (diffB == minDiff) {
            return b;
        }

        return c;
    }

    static void displayNumberFromRange(double diff1, int p1, double diff2, int p2, double diff3, int p3) {
        if (diff1 < diff2 && diff1 < diff3) {
            System.out.println(p1);
        } else if (diff2 < diff3) {
            System.out.println(p2);
        } else {
            System.out.println(p3);
        }
    }

    static double getDiffFromParticularRangeAndAvg(double avg, int rangeNumber) {
        return Math.abs(avg - rangeNumber);
    }

    public static void main(String[] args) {
        var p1 = randInt(0, 10);
        var p2 = randInt(-13, 23);
        var p3 = randInt(34, 87);
        System.out.println(p1);
        System.out.println(p2);
        System.out.println(p3);
        System.out.println(getNearestToAvg(p1, p2, p3));
        /*var avg = getAvg(p1, p2, p3, 3);
        var diff1 = getDiffFromParticularRangeAndAvg(avg, p1);
        var diff2 = getDiffFromParticularRangeAndAvg(avg, p2);
        var diff3 = getDiffFromParticularRangeAndAvg(avg, p3);

        displayNumberFromRange(diff1, p1, diff2, p2, diff3, p3);*/
    }
}
"
GSPdNLrr,java-007-code-review-app-1,kmprograms,Java,Wednesday 14th of February 2024 05:50:38 PM CDT,"import java.util.Scanner;

public class App1 {

    // Zadanie 8
    // Pobieraj od użytkownika liczby typu int do zmiennych a i b dopóki a nie będzie
    // mniejsze od b. Następnie wyznacz iloczyn tych liczb z przedziału <a,b>, których
    // cyfra jedności jest liczbą pierwszą.

    static int getInt(String message) {
        if (message == null || message.isEmpty()) {
            throw new IllegalArgumentException(""Lack message"");
        }
        System.out.println(message);
        return new Scanner(System.in).nextInt();
    }

    static int getUnityDigit(int a) {
        return a % 10;
    }


    static boolean checkIsPrime(int number) {
        if (number < 0) {
            throw new IllegalArgumentException(""Prime numbers must be greater than 1"");
        }

        if (number <= 1) {
            return false;
        }

        var divideNumber = (int) Math.sqrt(number);
        var i = 2;

        while (i <= divideNumber) {
            if (number % i == 0) {
                return false;
            }

            i++;
        }

        return true;
    }

    static long specifyMultiplicationFromRange(int a, int b, String message) {
        if (message.isEmpty()) {
            throw new IllegalArgumentException(""Lack message"");
        }

        var multiplication = 1L;
        while (a < b) {
            for (int i = a; i <= b; i++) {
                var unityDigit = getUnityDigit(i);
                if (checkIsPrime(unityDigit)) {
                    multiplication *= i;
                }
            }

            a = getInt(message);
            b = getInt(message);
        }

        return multiplication;
    }

    static boolean isPrimeDigit(int d) {
        return d == 2 || d == 3 || d == 5 || d == 7;
    }

    static int calcProduct() {
        var a = 0;
        var b = 0;
        do {
            a = getInt(""Podaj liczbe a:"");
            b = getInt(""Podaj liczbe b:"");
        } while (a >= b);

        var product = 1;
        for (int i = a; i <= b; i++) {
            if (isPrimeDigit(getUnityDigit(i))) {
                product *= i;
            }
        }
        return product;
    }

    public static void main(String[] args) {
        /*var a = getInt(""Podaj liczbe"");
        var b = getInt(""Podaj liczbe"");
        var multiplication = specifyMultiplicationFromRange(a, b, ""Podaj liczbe"");
        System.out.printf(""Iloczyn wynosi: %d"", multiplication);*/
        System.out.println(calcProduct());
    }
}
"
Sg2xU3mz,G2A.com Free Gift Card Guide Feb 2024,ounnuo,GetText,Wednesday 14th of February 2024 05:39:35 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
PDF guide here:
https://drive.google.com/file/d/120kXNJWM5T5u3PGlkQeZCo_nLxzQIlkf/view?usp=g2a_refund_exploit_565665.pdf
 
Working as of
14 February 2024"
sPBX0Kmk,eshop,goyslee,JavaScript,Wednesday 14th of February 2024 05:38:03 PM CDT,"
//BACKEND
//server.js
const express = require('express');
const passport = require('passport');
const session = require('express-session');
const flash = require('connect-flash');
const pool = require('./config/dbConfig');
const swaggerUi = require('swagger-ui-express');
const YAML = require('js-yaml'); 
const fs = require('fs');
const cors = require('cors');
const authRoutes = require('./routes/authRoutes');
const userRoutes = require('./routes/userRoutes');
const productRoutes = require('./routes/productRoutes');
const cartRoutes = require('./routes/cartRoutes');
const checkoutRoutes = require('./routes/checkoutRoutes');
const orderRoutes = require('./routes/orderRoutes');
const authController = require('./controllers/authController');
const pgSession = require('connect-pg-simple')(session);
const path = require('path');


if (process.env.NODE_ENV === 'development') {
  require('dotenv').config({ debug: true })
}



const app = express();



const port = process.env.PORT;
const swaggerDocument = YAML.load(fs.readFileSync('./swagger.yaml', 'utf8'));

app.use(function (req, res, next) {
  const origin = req.headers.origin; 

  console.log('Request Origin:', origin); // Debugging: Log the request's origin

  // List of allowed origins
  const allowedOrigins = [
    'https://e-shop-frontend-8ylf.onrender.com',
    'https://e-shop-backend-plfz.onrender.com',
    'https://merchant-ui-api.stripe.com/elements/wallet-config',
    `${process.env.REACT_APP_FRONTEND_URL}`,
    `${process.env.REACT_APP_BACKEND_URL}`
  ];

  if (allowedOrigins.includes(origin)) { 
    console.log('Origin allowed:', origin); // Debugging: Confirm origin is allowed
    res.header(""Access-Control-Allow-Origin"", origin);
    res.header(""Access-Control-Allow-Methods"", ""GET,HEAD,OPTIONS,POST,PUT,DELETE"");
    res.header(""Access-Control-Allow-Headers"", ""Origin, X-Requested-With, Content-Type, Accept, Authorization"");
    res.header(""Access-Control-Allow-Credentials"", true);
  } else {
    console.log('Origin not allowed:', origin); // Debugging: Log if origin is not allowed
  }
  next();
});


console.log(`${process.env.REACT_APP_FRONTEND_URL}`,
    `${process.env.REACT_APP_BACKEND_URL}`,
    `${process.env.LOCALHOST}`,
    `${process.env.REACT_APP_FRONTEND_URL}:${process.env.REACT_APP_LOCAL_PORT}`,
    `${process.env.REACT_APP_BACKEND_URL}:${process.env.REACT_APP_LOCAL_PORT}`)

app.use(session({
    store: new pgSession({
        pool : pool,                // Connection pool
        tableName: 'session',      // Use this table to store sessions
        conString: process.env.DATABASE_URL
    }),
    secret: process.env.SECRET,
    resave: false,
    saveUninitialized: false,
    cookie: {
    maxAge: 30 * 24 * 60 * 60 * 1000,
    secure: true,
    sameSite: 'None',
    domain: `${process.env.REACT_APP_BACKEND_URL}`
  } // 30 days
}));

app.use(flash());
app.use(passport.initialize());
app.use(passport.session());
app.use(express.json({ limit: '10mb' }));
app.use(express.static(path.join(__dirname, 'dist')));
app.use(express.static(path.join(__dirname, 'public')));

app.use((req, res, next) => {
  next();
});

app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));
authController.initializePassport(passport);

app.use(authRoutes);
app.use(userRoutes);
app.use(productRoutes);
app.use(cartRoutes);
app.use(checkoutRoutes);
app.use(orderRoutes);

app.get('/', (req, res) => {
  res.send('Hello, this is the E-commerce API!');
});

app.get('/check-auth', (req, res) => {
    if (req.isAuthenticated()) {
        res.json({ isAuthenticated: true, user: { name: req.user.name } });
    } else {
        res.json({ isAuthenticated: false });
    }
});

app.get('/auth/google', passport.authenticate('google', { scope: ['profile', 'email'] }));
app.get('/auth/google/callback', passport.authenticate('google', { failureRedirect: '/login' }), (req, res) => {
  if (req.user && req.user.address) {
    res.redirect(`${process.env.REACT_APP_FRONTEND_URL}/products`);
  } else {
    res.redirect(`${process.env.REACT_APP_FRONTEND_URL}/profilecompletion/${req.user.userid}`);
  }
});

app.get('/profilecompletion', (req, res) => {
  const html = `
    <!DOCTYPE html>
    <html>
      <head>
        <title>Profile Completion</title>
        <!-- Add your head content here -->
      </head>
      <body>
        <div id=""root""></div>
        <!-- Include your client-side scripts here -->
        <!-- <script src=""/server-bundle.js""></script> -->
        <!-- <script src=""/client-bundle.js""></script> -->
        <script>
          // JavaScript code to render the ProfileCompletion component on the client-side
          // This code should be included in your client-side scripts
          // Example:
           const rootElement = document.getElementById('root');
           ReactDOM.render(<ProfileCompletion />, rootElement);
        </script>
      </body>
    </html>
  `;

  res.status(200).send(html);
});

app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

app.post('/update-user-details', (req, res) => {
  const { userid, address, phonenumber } = req.body;
  
  // Update user details in the database
  pool.query(
    'UPDATE Users SET address = $1, phonenumber = $2 WHERE userid = $3',
    [address, phonenumber, userid],
    (error, results) => {
      if (error) {
        res.status(500).send('Error updating user details');
      } else {
        res.status(200).send('User details updated successfully');
      }
    }
  );
});



// Facebook OAuth routes
// app.get('/auth/facebook', passport.authenticate('facebook'));
// app.get('/auth/facebook/callback', passport.authenticate('facebook', { failureRedirect: '/login' }), (req, res) => {
//     res.redirect('/'); // Redirect after successful authentication
// });

app.listen(port, () => {
  console.log(`Server is running on ${port}`);
});

// config\dbConfig.js
require('dotenv').config();
const { Pool } = require('pg');

const pool = new Pool({
  user: process.env.DB_USER,
  host: process.env.DB_HOST,
  database: process.env.DB_DATABASE,
  password: process.env.DB_PASSWORD,
  port: process.env.DB_PORT,
  connectionString: process.env.DATABASE_URL
});

module.exports = pool;


// controllers/authController.js
const jwt = require('jsonwebtoken');
const secretKey = process.env.JWT_SECRET;
const LocalStrategy = require('passport-local').Strategy;
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const bcrypt = require('bcrypt');
const pool = require('../config/dbConfig');

const GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID;
const GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;

const initializePassport = (passport) => {
    passport.use(new LocalStrategy(
        { usernameField: 'email' },
        async (email, password, done) => {
            try {
                const res = await pool.query('SELECT * FROM users WHERE email = $1', [email]);
                if (res.rows.length === 0) {
                    return done(null, false, { message: 'Incorrect email.' });
                }

                const user = res.rows[0];
                console.log('The user is in localstrtaegy:', user.userid)
                const match = await bcrypt.compare(password, user.password);

                if (match) {
                    return done (null, { ...user, userid: user.userid, email: user.email, username: user.name  });
                } else {
                    return done(null, false, { message: 'Incorrect password.' });
                }
            } catch (err) {
                return done(err);
            }
        }
    ));

    passport.use(new GoogleStrategy({
    clientID: GOOGLE_CLIENT_ID,
    clientSecret: GOOGLE_CLIENT_SECRET,
    callbackURL: '/auth/google/callback'
  },
  async (accessToken, refreshToken, profile, done) => {
    try {
      const email = profile.emails[0].value;
      let userResult = await pool.query('SELECT * FROM users WHERE email = $1', [email]);
      let user = userResult.rows[0];

      if (!user) {
        // User does not exist, create a new user
        const newUserResult = await pool.query(
          'INSERT INTO users (name, email, refresh_token, phonenumber, address) VALUES ($1, $2, $3, $4, $5) RETURNING *',
          [profile.displayName, email, refreshToken, null, null]
        );
        user = newUserResult.rows[0];
      }

      // Include userid in the user object
      if (user) {
  
        return done(null, { ...user, userid: user.userid, email: user.email, username: user.name });
        
      } else {
        return done(null, false, { message: 'Unable to retrieve user id.' });
      }
    } catch (error) {
      return done(error);
    }
    
  }
));


   passport.serializeUser((user, done) => {
  done(null, user.userid);
});

passport.deserializeUser((userid, done) => {
  pool.query('SELECT * FROM users WHERE userid = $1', [userid], (err, results) => {
    if (err) {
      return done(err);
    }
    done(null, results.rows[0]);
  });
});

};

const login = (passport) => (req, res, next) => {
    if (req.isAuthenticated()) {
        return res.status(400).send('You are already logged in.');
    }

    passport.authenticate('local', (err, user, info) => {
        if (err) {
            return next(err);
        }
        if (!user) {
            return res.status(401).send('Authentication failed');
        }
        req.login(user, (loginErr) => {
            if (loginErr) {
                return next(loginErr);
            }
            return res.status(200).json({ message: 'Authentication successful', user: { name: user.name, email: user.email, userid: user.userid } });
        });
    })(req, res, next);
};

const logout = (req, res, next) => {
    if (!req.isAuthenticated()) {
        return res.status(400).send('No user to log out.');
    }

    // Destroy the session on the server-side
    req.session.destroy((err) => { 
        if (err) { 
            return res.status(500).json({ message: 'Logout failed' });
        } 

        // Remove the session record from the database
        pool.query('DELETE FROM session WHERE sid = $1', [req.sessionID], (err, result) => {
            if (err) {
                console.error('Error deleting session from database:', err);
                // You might want to handle this error differently in production
            }
            res.status(200).json({ message: 'Logged out successfully' });
        });
    });
};


const authenticateToken = (req, res, next) => {
  const token = req.header('Authorization');

  if (!token) {
    return res.status(401).json({ message: 'Unauthorized' });
  }

  jwt.verify(token, secretKey, (err, user) => {
    if (err) {
      return res.status(403).json({ message: 'Invalid token' });
    }

    req.user = user; // Set the authenticated user in the request object
    next();
  });
};


const logoutPage = (req, res) => {
    res.send('logout page');
};

module.exports = {
    initializePassport,
    login,
    logout,
    logoutPage,
    authenticateToken
};

// controllers\cartController.js
const pool = require('../config/dbConfig');

const showCart = async (req, res) => {
    const userid = req.user.userid;

    try {
        // Check if the user has a cart
        const cartRes = await pool.query('SELECT * FROM carts WHERE userid = $1', [userid]);
        if (cartRes.rows.length === 0) {
            return res.status(404).send('Cart not found');
        }
        const cartId = cartRes.rows[0].cartid;

        // Fetch the items in the user's cart along with image_url and include productid
        const cartItemsQuery = await pool.query(`
            SELECT p.productid, p.name, ci.quantity, p.price, p.image_url, (ci.quantity * p.price) as itemTotalPrice
            FROM cartitems ci
            JOIN Products p ON ci.productid = p.productid
            WHERE ci.cartid = $1
        `, [cartId]);

        const cartItems = cartItemsQuery.rows;
        const cartTotalPrice = cartItems.reduce((total, item) => total + item.itemTotalPrice, 0);

        res.json({ cartItems, cartTotalPrice });
    } catch (err) {
        res.status(500).send(err.message);
    }
};


const addItemToCart = async (req, res) => {
    const userid = req.user.userid;
    const { productid, quantity } = req.body;
    const parsedQuantity = parseInt(quantity, 10);

    if (isNaN(parsedQuantity) || parsedQuantity < 1) {
        return res.status(400).send('Invalid quantity');
    }

    try {
        const product = await pool.query('SELECT stockquantity, price FROM Products WHERE productid = $1', [productid]);
        if (product.rows.length === 0 || product.rows[0].stockquantity < parsedQuantity) {
            return res.status(400).send('Insufficient stock');
        }

        let cartRes = await pool.query('SELECT * FROM carts WHERE userid = $1', [userid]);
        let cartId;
        if (cartRes.rows.length === 0) {
            const newCart = await pool.query('INSERT INTO carts (userid, totalprice) VALUES ($1, 0) RETURNING cartid', [userid]);
            cartId = newCart.rows[0].cartid;
        } else {
            cartId = cartRes.rows[0].cartid;
        }

        const existingItem = await pool.query('SELECT * FROM cartitems WHERE cartid = $1 AND productid = $2', [cartId, productid]);

        if (existingItem.rows.length > 0) {
            // Update the item quantity in the cart
            return await updateCartItem(req, res);
        } else {
            // Add new item to the cart
            await pool.query('UPDATE products SET stockquantity = stockquantity - $1 WHERE productid = $2', [parsedQuantity, productid]);

            const itemPrice = product.rows[0].price;
            const itemTotalPrice = itemPrice * parsedQuantity;

            await pool.query('INSERT INTO cartitems (cartid, productid, quantity) VALUES ($1, $2, $3)', [cartId, productid, parsedQuantity]);

            // Update cart total price
            const cartItems = await pool.query('SELECT productid, quantity FROM cartitems WHERE cartid = $1', [cartId]);
            let cartTotalPrice = 0;

            for (const item of cartItems.rows) {
                const productPrice = await pool.query('SELECT price FROM Products WHERE productid = $1', [item.productid]);
                if (productPrice.rows.length > 0) {
                    const itemPrice = parseFloat(productPrice.rows[0].price);
                    const itemQuantity = parseInt(item.quantity, 10) || 0;
                    const itemTotalPrice = itemPrice * itemQuantity;
                    cartTotalPrice += itemTotalPrice;
                }
            }

            await pool.query('UPDATE carts SET totalprice = $1 WHERE cartid = $2', [cartTotalPrice, cartId]);

            res.status(201).send('Item added to cart');
        }
    } catch (err) {
        res.status(500).send(err.message);
    }
};


const updateCartItem = async (req, res) => {
    const userid = req.user.userid;
    const { productid, quantity } = req.body;
    const updatedQuantity = parseInt(quantity, 10);

    if (isNaN(updatedQuantity) || updatedQuantity < 1) {
        return res.status(400).send('Invalid quantity');
    }

    try {
        const userCart = await pool.query('SELECT cartid FROM carts WHERE userid = $1', [userid]);
        if (userCart.rows.length === 0) {
            return res.status(404).send('User cart not found');
        }

        const { cartid: userCartId } = userCart.rows[0];
        const current = await pool.query('SELECT quantity FROM cartitems WHERE productid = $1 AND cartid = $2', [productid, userCartId]);

        if (current.rows.length === 0) {
            return res.status(404).send('Item not found in cart');
        }

        const { quantity: currentQuantity } = current.rows[0];

        if (updatedQuantity > currentQuantity) {
            const product = await pool.query('SELECT stockquantity FROM Products WHERE productid = $1', [productid]);
            if (product.rows.length === 0 || product.rows[0].stockquantity < (updatedQuantity - currentQuantity)) {
                return res.status(400).send('Insufficient stock');
            }

            await pool.query('UPDATE products SET stockquantity = stockquantity - $1 WHERE productid = $2', [updatedQuantity - currentQuantity, productid]);
        } else if (updatedQuantity < currentQuantity) {
            await pool.query('UPDATE products SET stockquantity = stockquantity + $1 WHERE productid = $2', [currentQuantity - updatedQuantity, productid]);
        }

        await pool.query('UPDATE cartitems SET quantity = $1 WHERE productid = $2 AND cartid = $3', [updatedQuantity, productid, userCartId]);

        res.status(200).send('Cart item updated');
    } catch (err) {
        res.status(500).send(err.message);
    }
};

const deleteCartItem = async (req, res) => {
    const userid = req.user.userid;
    const { itemId } = req.params;

    try {
        const cartRes = await pool.query('SELECT cartid FROM carts WHERE userid = $1', [userid]);
        if (cartRes.rows.length === 0) {
            return res.status(404).send('Cart not found');
        }

        const cartId = cartRes.rows[0].cartid;
        const item = await pool.query('SELECT quantity, productid FROM cartitems WHERE cartitemid = $1', [itemId]);

        if (item.rows.length === 0) {
            return res.status(404).send('Item not found in cart');
        }

        const parsedQuantity = parseInt(item.rows[0].quantity, 10);
        await pool.query('UPDATE products SET stockquantity = stockquantity + $1 WHERE productid = $2', [parsedQuantity, item.rows[0].productid]);
        await pool.query('DELETE FROM cartitems WHERE cartitemid = $1', [itemId]);

        res.status(204).send();
    } catch (err) {
        res.status(500).send(err.message);
    }
};

const getCartItemQuantity = async (req, res) => {
    const userid = req.user.userid;
    const { productid } = req.params;

    try {
        const cartRes = await pool.query('SELECT cartid FROM carts WHERE userid = $1', [userid]);
        if (cartRes.rows.length === 0) {
            return res.status(404).send('Cart not found');
        }
        const cartId = cartRes.rows[0].cartid;

        const itemRes = await pool.query('SELECT quantity FROM cartitems WHERE cartid = $1 AND productid = $2', [cartId, productid]);
        if (itemRes.rows.length === 0) {
            return res.status(404).send('Item not found in cart');
        }

        const quantity = itemRes.rows[0].quantity;
        res.json({ productid, quantity });
    } catch (err) {
        res.status(500).send(err.message);
    }
};

const deleteAllOfItem = async (req, res) => {
    const userid = req.user.userid;
    const { productId } = req.params;

    try {
        const cartRes = await pool.query('SELECT cartid FROM carts WHERE userid = $1', [userid]);
        if (cartRes.rows.length === 0) {
            return res.status(404).send('Cart not found');
        }

        const cartId = cartRes.rows[0].cartid;
        const item = await pool.query('SELECT quantity FROM cartitems WHERE cartid = $1 AND productid = $2', [cartId, productId]);

        if (item.rows.length === 0) {
            return res.status(404).send('Item not found in cart');
        }

        const quantityToRemove = parseInt(item.rows[0].quantity, 10);
        await pool.query('UPDATE products SET stockquantity = stockquantity + $1 WHERE productid = $2', [quantityToRemove, productId]);
        await pool.query('DELETE FROM cartitems WHERE cartid = $1 AND productid = $2', [cartId, productId]);

        res.status(204).send();
    } catch (err) {
        res.status(500).send(err.message);
    }
};

module.exports = {
    addItemToCart,
    updateCartItem,
    deleteCartItem,
    showCart,
    getCartItemQuantity,
    deleteAllOfItem
};

// controllers\checkoutController.js
const pool = require('../config/dbConfig');
const stripe = require('stripe')(process.env.REACT_APP_STRIPE_SECRET_KEY);

const checkout = async (req, res) => {
  const {userid, email} = req.user;
  const { paymentMethodId, amount, username } = req.body;

  try {
    // Retrieve the user's cart
    const cartUserQuery = await pool.query('SELECT userid FROM carts WHERE userid = $1', [userid]);
    if (cartUserQuery.rows.length === 0 || parseInt(cartUserQuery.rows[0].userid) !== parseInt(userid)) {
      return res.status(403).send(""Not authorized to view other users' carts"");
    }

    const cartQuery = await pool.query('SELECT * FROM carts WHERE userid = $1', [userid]);
    if (cartQuery.rows.length === 0) {
      return res.status(400).send('Invalid cart');
    }
    const cartId = cartQuery.rows[0].cartid;

    // Create a PaymentIntent using Stripe
    const paymentIntent = await stripe.paymentIntents.create({
      amount: Math.round(amount * 100), // Convert amount to cents
      currency: 'gbp',
      payment_method: paymentMethodId,
      confirm: true,
      return_url: `${process.env.REACT_APP_BACKEND_URL}`,
      automatic_payment_methods: {
        enabled: true,
      },
      receipt_email: email,
       description: `Order for user ${userid}`,
    });

    // Create an order in the database
    const userQuery = await pool.query('SELECT address FROM users WHERE userid = $1', [userid]);
    const shippingAddress = userQuery.rows[0].address;

    const orderQuery = await pool.query('INSERT INTO orders (userid, orderdate, totalprice, shippingaddress) VALUES ($1, NOW(), $2, $3) RETURNING *', [userid, amount, shippingAddress]);
    const orderId = orderQuery.rows[0].orderid;

    // Add order details
    const cartItemsQuery = await pool.query('SELECT productid, quantity FROM cartitems WHERE cartid = $1', [cartId]);
    for (const item of cartItemsQuery.rows) {
      const itemTotalPrice = item.quantity * (await getProductPrice(item.productid));
      await pool.query('INSERT INTO orderdetails (orderid, productid, quantity, price) VALUES ($1, $2, $3, $4)', [orderId, item.productid, item.quantity, itemTotalPrice]);
    }

    // Clear the cart
    await pool.query('DELETE FROM cartitems WHERE cartid = $1', [cartId]);
    await pool.query('UPDATE carts SET totalprice = 0 WHERE cartid = $1', [cartId]);

    res.status(201).json({
      success: true,
      orderId: orderId,
      paymentIntentId: paymentIntent.id,
      clientSecret: paymentIntent.client_secret.toString()  // Corrected to use client_secret
    });
     } catch (err) {
    res.status(500).send(err.message);
  }
};

async function getProductPrice(productid) {
  const productQuery = await pool.query('SELECT price FROM products WHERE productid = $1', [productid]);
  if (productQuery.rows.length > 0) {
    return productQuery.rows[0].price;
  } else {
    throw new Error('Product not found');
  }
}

function getUKDateTime() {
  const options = { timeZone: 'Europe/London', hour12: false };
  return new Date().toLocaleString('en-UK', options);
}

module.exports = {
  checkout
};

// controllers\orderController.js
const pool = require('../config/dbConfig');

async function getItemTotalPrice(productId, quantity) {
    const productQuery = await pool.query('SELECT price FROM products WHERE productid = $1', [productId]);
    if (productQuery.rows.length > 0) {
        const productPrice = productQuery.rows[0].price;
        return productPrice * quantity;
    }
    return 0;
}

const getAllOrders = async (req, res) => {
    const userid = req.user.userid;
    try {
        const ordersQuery = await pool.query('SELECT * FROM orders WHERE userid = $1', [userid]);

        const ordersWithDetails = await Promise.all(
            ordersQuery.rows.map(async (order) => {
                const orderDetailsQuery = await pool.query('SELECT * FROM orderdetails WHERE orderid = $1', [order.orderid]);
                const orderDetails = orderDetailsQuery.rows.map(async (detail) => {
                    const productQuery = await pool.query('SELECT * FROM products WHERE productid = $1', [detail.productid]);
                    return {
                        ...detail,
                        product: productQuery.rows[0]
                    };
                });

                return {
                    ...order,
                    orderdetails: await Promise.all(orderDetails)
                };
            })
        );

        res.json(ordersWithDetails);
    } catch (err) {
        res.status(500).send(err.message);
    }
};


const getOrderById = async (req, res) => {
    const userid = req.user.userid;
    const orderId = req.params.orderId;
    try {
        const orderQuery = await pool.query('SELECT * FROM orders WHERE orderid = $1 AND userid = $2', [orderId, userid]);
        if (orderQuery.rows.length === 0) {
            return res.status(404).send('Order not found');
        }
        res.json(orderQuery.rows[0]);
    } catch (err) {
        res.status(500).send(err.message);
    }
};

const createOrder = async (req, res) => {
    const userid = req.user.userid;
    const { totalprice, shippingaddress, orderdetails } = req.body;
    try {
        const newOrderQuery = await pool.query('INSERT INTO orders (userid, orderdate, totalprice, shippingaddress) VALUES ($1, NOW(), $2, $3) RETURNING *', [userid, totalprice, shippingaddress]);
        const newOrderId = newOrderQuery.rows[0].orderid;
        for (const item of orderdetails) {
            const itemTotalPrice = await getItemTotalPrice(item.productid, item.quantity);
            await pool.query('INSERT INTO orderdetails (orderid, productid, quantity, price) VALUES ($1, $2, $3, $4)', [newOrderId, item.productid, item.quantity, itemTotalPrice]);
        }
        res.status(201).json(newOrderId);
    } catch (err) {
        res.status(500).send(err.message);
    }
};

const updateOrderDetails = async (req, res) => {
    const userid = req.user.userid;
    const orderId = req.params.orderId;
    const orderDetailId = req.params.orderDetailId;
    const quantity = parseFloat(req.body.quantity);

    if (isNaN(quantity)) {
        return res.status(400).send('Invalid quantity');
    }

    try {
        const orderDetailQuery = await pool.query(
            'SELECT quantity, price, productid FROM orderdetails WHERE orderid = $1 AND orderdetailid = $2',
            [orderId, orderDetailId]
        );

        if (orderDetailQuery.rows.length === 0) {
            return res.status(404).send('Order detail not found');
        }

        const { quantity: currentQuantity, price, productid } = orderDetailQuery.rows[0];
        const newQuantity = currentQuantity + quantity;
        const itemTotalPrice = price * Math.abs(quantity);

        if (newQuantity < 0) {
            return res.status(400).send('Quantity cannot be negative');
        }

        const newPrice = (price * newQuantity) / currentQuantity;

        await pool.query(
            'UPDATE orderdetails SET quantity = $1, price = $2 WHERE orderid = $3 AND orderdetailid = $4',
            [newQuantity, newPrice, orderId, orderDetailId]
        );

        await pool.query(
            'UPDATE products SET stockquantity = stockquantity - $1 WHERE productid = $2',
            [quantity, productid]
        );

        await pool.query(
            'UPDATE orders SET totalprice = totalprice + $1 WHERE orderid = $2 AND userid = $3 RETURNING *',
            [itemTotalPrice, orderId, userid]
        );

        res.status(204).send();
    } catch (err) {
        res.status(500).send(err.message);
    }
};

const deleteOrder = async (req, res) => {
    const userid = req.user.userid;
    const orderId = req.params.orderId;
    try {
        const deleteOrderQuery = await pool.query('DELETE FROM orders WHERE orderid = $1 AND userid = $2', [orderId, userid]);
        if (deleteOrderQuery.rows.length === 0) {
            return res.status(404).send('Order not found');
        }
        res.status(204).send();
    } catch (err) {
        res.status(500).send(err.message);
    }
};

module.exports = {
    getAllOrders,
    getOrderById,
    createOrder,
    updateOrderDetails,
    deleteOrder
};

// controllers\productController.js 
const pool = require('../config/dbConfig');

const addProduct = async (req, res) => {
  const { name, description, price, stockquantity, category } = req.body;
  try {
    const newProduct = await pool.query(
      'INSERT INTO products (name, description, price, stockquantity, category) VALUES ($1, $2, $3, $4, $5) RETURNING *',
      [name, description, price, stockquantity, category]
    );
    res.status(201).json(newProduct.rows[0]);
  } catch (err) {
    res.status(500).send(err.message);
  }
};

const getAllProducts = async (req, res) => {
  try {
    const result = await pool.query('SELECT * FROM products');
    res.json(result.rows);
  } catch (err) {
    res.status(500).send(err.message);
  }
};

const getProductById = async (req, res) => {
  const { productid } = req.params;
  try {
    const result = await pool.query('SELECT * FROM products WHERE productid = $1', [productid]);
    if (result.rows.length > 0) {
      res.json(result.rows[0]);
    } else {
      res.status(404).send('Product not found');
    }
  } catch (err) {
    res.status(500).send(err.message);
  }
};

const updateProduct = async (req, res) => {
  const { productid } = req.params;
  const { name, description, price, stockquantity, category } = req.body;
  try {
    const result = await pool.query(
      'UPDATE products SET name = $1, description = $2, price = $3, stockquantity = $4, category = $5 WHERE productid = $6 RETURNING *',
      [name, description, price, stockquantity, category, productid]
    );
    if (result.rows.length > 0) {
      res.json(result.rows[0]);
    } else {
      res.status(404).send('Product not found');
    }
  } catch (err) {
    res.status(500).send(err.message);
  }
};



const deleteProduct = async (req, res) => {
  const { productid } = req.params;
  try {
    const result = await pool.query('DELETE FROM products WHERE productid = $1 RETURNING *', [productid]);
    if (result.rows.length > 0) {
      res.send('Product deleted successfully');
    } else {
      res.status(404).send('Product not found');
    }
  } catch (err) {
    res.status(500).send(err.message);
  }
};

module.exports = {
  addProduct,
  getAllProducts,
  getProductById,
  updateProduct,
  deleteProduct
};


//controllers\userController.js
const Joi = require('joi');
const bcrypt = require('bcrypt');
const pool = require('../config/dbConfig'); // Adjusted path
const isAuthenticated = require('../middleware/isAuthenticated');

const userSchema = Joi.object({
  name: Joi.string().alphanum().min(3).max(30).required(),
  email: Joi.string().email().required(),
  password: Joi.string().min(5).required(),
  address: Joi.string().required(),
  phonenumber: Joi.string().pattern(new RegExp('^[0-9+\\-\\s]+$')).required()
});

const register = async (req, res) => {
  const { error, value } = userSchema.validate(req.body);
  if (error) {
    return res.status(400).send(error.details[0].message);
  }

  try {
    const { name, email, password, address, phonenumber } = value;
    const existingUser = await pool.query(""SELECT * FROM users WHERE email = $1"", [email]);
    if (existingUser.rows.length > 0) {
      return res.status(400).send(""User already exists."");
    }

    const salt = await bcrypt.genSalt(10);
    const hashedPassword = await bcrypt.hash(password, salt);

    const newUser = await pool.query(
      ""INSERT INTO users (name, email, password, address, phonenumber) VALUES ($1, $2, $3, $4, $5) RETURNING *"", 
      [name, email, hashedPassword, address, phonenumber]
    );

    const userid = newUser.rows[0].userid;

    await pool.query(
      ""INSERT INTO carts (userid, totalprice) VALUES ($1, 0)"",
      [userid]
    );

    res.status(201).send(""User registered successfully and cart created"");
  } catch (err) {
    console.error(err.message);
    res.status(500).send(""Server error"");
  }
};

const getUserById = async (req, res) => {
  const userid  = req.user.userid;
  try {
    // Check if req.user exists and if the userid matches the requested userid
    if (!req.params || parseInt(req.user.userid) !== parseInt(userid)) {
      return res.status(403).send(""Not authorized to view other users' accounts"");
    }
    const result = await pool.query('SELECT name, email, address, phonenumber, userid FROM users WHERE userid = $1', [userid]);
    if (result.rows.length > 0) {
      res.json(result.rows[0]);
    } else {
      res.status(404).send('User not found');
    }
  } catch (err) {
    console.error('Error in getUserById:', err.message);
    res.status(500).send('Internal Server Error: ' + err.message);
  }
};


const updateUser = async (req, res) => {
  const userid  = req.user.userid;
  const { name, email, password, address, phonenumber } = req.body;

  if (!userid) {
    return res.status(401).send(""User not authenticated"");
  }

  try {
    if (!req.params || parseInt(req.user.userid) !== parseInt(userid)) {
      return res.status(403).send(""Not authorized to change other users' accounts"");
    }

    let hashedPassword;
    if (password) {
      const salt = await bcrypt.genSalt(10);
      hashedPassword = await bcrypt.hash(password, salt);
    } else {
      // Fetch current password if not changing
      const currentUser = await pool.query('SELECT password FROM users WHERE userid = $1', [userid]);
      hashedPassword = currentUser.rows[0].password;
    }

    const result = await pool.query(
      'UPDATE users SET name = $1, email = $2, password = $3, address = $4, phonenumber = $5 WHERE userid = $6 RETURNING *',
      [name, email, hashedPassword, address, phonenumber, parseInt(userid)]
    );

    if (result.rows.length > 0) {
      res.json(result.rows[0]);
    } else {
      res.status(404).send('User not found');
    }
  } catch (err) {
    console.error('Error in updateUser:', err.message);
    res.status(500).send('Internal Server Error');
  }
};


async function getUserCurrentPassword(userid) {
  // Function to get the current password from the database
  const result = await pool.query('SELECT password FROM users WHERE userid = $1', [userid]);
  return result.rows[0].password;
}

const deleteUser = async (req, res) => {
  const { userid } = req.params;
  try {
    if (!req.user || parseInt(req.user.userid) !== parseInt(userid)) {
      return res.status(403).send(""Not authorized to delete other users' accounts"");
    }
    await pool.query('DELETE FROM users WHERE userid = $1', [userid]);
    res.status(204).send();
  } catch (err) {
    res.status(500).send(err.message);
  }
};

const checkAuth = (req, res) => {
  if (req.isAuthenticated()) {
    // Assuming req.user contains user details after authentication
    res.json({ isAuthenticated: true, user: req.user });
  } else {
    res.json({ isAuthenticated: false });
  }
};

module.exports = {
  register,
  getUserById,
  updateUser,
  deleteUser,
  checkAuth
};

// isAuthenticated.js
const isAuthenticated = (req, res, next) => {
    if (req.isAuthenticated()) {
        console.log('Authenticated? ', req.isAuthenticated())  
        return next();
    }
    // If the user is not authenticated, you can redirect or send an appropriate response
    res.status(401).send('User not authenticated');
};

module.exports = isAuthenticated;

const express = require('express');
const router = express.Router();
const passport = require('passport');
const authController = require('../controllers/authController');
const isAuthenticated = require('../middleware/isAuthenticated');
const isAuthorised = require('../middleware/isAuthorised');

router.post('/login', authController.login(passport));
router.post('/logout', isAuthenticated, authController.logout);
router.get('/logoutPage', authController.logoutPage);

module.exports = router;

// routes\cartRoutes.js
const express = require('express');
const router = express.Router();
const cartController = require('../controllers/cartController');
const isAuthenticated = require('../middleware/isAuthenticated');
const isAuthorised = require('../middleware/isAuthorised');

router.post('/cart/add',isAuthenticated, cartController.addItemToCart);
router.put('/cart/:itemId',isAuthenticated, cartController.updateCartItem);
router.delete('/cart/:itemId',isAuthenticated, cartController.deleteCartItem);
router.delete('/cart/removeAll/:productId',isAuthenticated, cartController.deleteAllOfItem);
router.get('/cart',isAuthenticated, cartController.showCart);
router.get('/cart/quantity/:productid',isAuthenticated, cartController.getCartItemQuantity);


module.exports = router;

// routes\cartRoutes.js
const express = require('express');
const router = express.Router();
const cartController = require('../controllers/cartController');
const isAuthenticated = require('../middleware/isAuthenticated');
const isAuthorised = require('../middleware/isAuthorised');

router.post('/cart/add',isAuthenticated, cartController.addItemToCart);
router.put('/cart/:itemId',isAuthenticated, cartController.updateCartItem);
router.delete('/cart/:itemId',isAuthenticated, cartController.deleteCartItem);
router.delete('/cart/removeAll/:productId',isAuthenticated, cartController.deleteAllOfItem);
router.get('/cart',isAuthenticated, cartController.showCart);
router.get('/cart/quantity/:productid',isAuthenticated, cartController.getCartItemQuantity);


module.exports = router;

//routes\orderRoutes.js
const express = require('express');
const router = express.Router();
const orderController = require('../controllers/orderController');
const isAuthenticated = require('../middleware/isAuthenticated');
const isAuthorised = require('../middleware/isAuthorised');

router.get('/orders',isAuthenticated, orderController.getAllOrders);
router.get('/orders/:orderId',isAuthenticated, orderController.getOrderById);
router.post('/orders',isAuthenticated, orderController.createOrder);
router.put('/orders/:orderId/orderdetails/:orderDetailId',isAuthenticated, orderController.updateOrderDetails);
router.delete('/orders/:orderId',isAuthenticated, orderController.deleteOrder);

module.exports = router;

// routes\productRoutes.js
const express = require('express');
const router = express.Router();
const productController = require('../controllers/productController');
const isAuthorised = require('../middleware/isAuthorised'); 
const isAuthenticated = require('../middleware/isAuthenticated');

router.post('/products',isAuthenticated, productController.addProduct);
router.get('/products', productController.getAllProducts);
router.get('/products/:productid', productController.getProductById);
router.put('/products/:productid',isAuthenticated, productController.updateProduct);
router.delete('/products/:productid',isAuthenticated, productController.deleteProduct);

module.exports = router;

// routes\userRoutes.js 
const express = require('express');
const router = express.Router();
const userController = require('../controllers/userController');
const isAuthenticated = require('../middleware/isAuthenticated');
const isAuthorised = require('../middleware/isAuthorised');


router.post('/register', userController.register);
router.get('/users/:userid',isAuthenticated,  userController.getUserById);
router.get('/users/user-profile/:userid',isAuthenticated, userController.getUserById);
router.put('/users/:userid',isAuthenticated, userController.updateUser);
router.delete('/users/:userid',isAuthenticated, userController.deleteUser);
router.get('/check-auth',isAuthenticated, userController.checkAuth);

module.exports = router;



const express = require('express');
const router = express.Router();
const passport = require('passport');
const authController = require('../controllers/authController');
const isAuthenticated = require('../middleware/isAuthenticated');
const isAuthorised = require('../middleware/isAuthorised');

router.post('/login', authController.login(passport));
router.post('/logout', isAuthenticated, authController.logout);
router.get('/logoutPage', authController.logoutPage);

module.exports = router;


//controllers\userController.js
const Joi = require('joi');
const bcrypt = require('bcrypt');
const pool = require('../config/dbConfig'); // Adjusted path
const isAuthenticated = require('../middleware/isAuthenticated');

const userSchema = Joi.object({
  name: Joi.string().alphanum().min(3).max(30).required(),
  email: Joi.string().email().required(),
  password: Joi.string().min(5).required(),
  address: Joi.string().required(),
  phonenumber: Joi.string().pattern(new RegExp('^[0-9+\\-\\s]+$')).required()
});

const register = async (req, res) => {
  const { error, value } = userSchema.validate(req.body);
  if (error) {
    return res.status(400).send(error.details[0].message);
  }

  try {
    const { name, email, password, address, phonenumber } = value;
    const existingUser = await pool.query(""SELECT * FROM users WHERE email = $1"", [email]);
    if (existingUser.rows.length > 0) {
      return res.status(400).send(""User already exists."");
    }

    const salt = await bcrypt.genSalt(10);
    const hashedPassword = await bcrypt.hash(password, salt);

    const newUser = await pool.query(
      ""INSERT INTO users (name, email, password, address, phonenumber) VALUES ($1, $2, $3, $4, $5) RETURNING *"", 
      [name, email, hashedPassword, address, phonenumber]
    );

    const userid = newUser.rows[0].userid;

    await pool.query(
      ""INSERT INTO carts (userid, totalprice) VALUES ($1, 0)"",
      [userid]
    );

    res.status(201).send(""User registered successfully and cart created"");
  } catch (err) {
    console.error(err.message);
    res.status(500).send(""Server error"");
  }
};

const getUserById = async (req, res) => {
  const userid  = req.user.userid;
  try {
    // Check if req.user exists and if the userid matches the requested userid
    if (!req.params || parseInt(req.user.userid) !== parseInt(userid)) {
      return res.status(403).send(""Not authorized to view other users' accounts"");
    }
    const result = await pool.query('SELECT name, email, address, phonenumber, userid FROM users WHERE userid = $1', [userid]);
    if (result.rows.length > 0) {
      res.json(result.rows[0]);
    } else {
      res.status(404).send('User not found');
    }
  } catch (err) {
    console.error('Error in getUserById:', err.message);
    res.status(500).send('Internal Server Error: ' + err.message);
  }
};


const updateUser = async (req, res) => {
  const userid  = req.user.userid;
  const { name, email, password, address, phonenumber } = req.body;

  if (!userid) {
    return res.status(401).send(""User not authenticated"");
  }

  try {
    if (!req.params || parseInt(req.user.userid) !== parseInt(userid)) {
      return res.status(403).send(""Not authorized to change other users' accounts"");
    }

    let hashedPassword;
    if (password) {
      const salt = await bcrypt.genSalt(10);
      hashedPassword = await bcrypt.hash(password, salt);
    } else {
      // Fetch current password if not changing
      const currentUser = await pool.query('SELECT password FROM users WHERE userid = $1', [userid]);
      hashedPassword = currentUser.rows[0].password;
    }

    const result = await pool.query(
      'UPDATE users SET name = $1, email = $2, password = $3, address = $4, phonenumber = $5 WHERE userid = $6 RETURNING *',
      [name, email, hashedPassword, address, phonenumber, parseInt(userid)]
    );

    if (result.rows.length > 0) {
      res.json(result.rows[0]);
    } else {
      res.status(404).send('User not found');
    }
  } catch (err) {
    console.error('Error in updateUser:', err.message);
    res.status(500).send('Internal Server Error');
  }
};


async function getUserCurrentPassword(userid) {
  // Function to get the current password from the database
  const result = await pool.query('SELECT password FROM users WHERE userid = $1', [userid]);
  return result.rows[0].password;
}

const deleteUser = async (req, res) => {
  const { userid } = req.params;
  try {
    if (!req.user || parseInt(req.user.userid) !== parseInt(userid)) {
      return res.status(403).send(""Not authorized to delete other users' accounts"");
    }
    await pool.query('DELETE FROM users WHERE userid = $1', [userid]);
    res.status(204).send();
  } catch (err) {
    res.status(500).send(err.message);
  }
};

const checkAuth = (req, res) => {
  if (req.isAuthenticated()) {
    // Assuming req.user contains user details after authentication
    res.json({ isAuthenticated: true, user: req.user });
  } else {
    res.json({ isAuthenticated: false });
  }
};

module.exports = {
  register,
  getUserById,
  updateUser,
  deleteUser,
  checkAuth
};
// routes\userRoutes.js 
const express = require('express');
const router = express.Router();
const userController = require('../controllers/userController');
const isAuthenticated = require('../middleware/isAuthenticated');
const isAuthorised = require('../middleware/isAuthorised');


router.post('/register', userController.register);
router.get('/users/:userid',isAuthenticated,  userController.getUserById);
router.get('/users/user-profile/:userid',isAuthenticated, userController.getUserById);
router.put('/users/:userid',isAuthenticated, userController.updateUser);
router.delete('/users/:userid',isAuthenticated, userController.deleteUser);
router.get('/check-auth',isAuthenticated, userController.checkAuth);

module.exports = router;
// AuthCheck.js
import { useEffect } from 'react';
import { checkAuth } from '../../services/authServices';

const AuthCheck = () => {
  useEffect(() => {
    checkAuth();
  }, []);

  return null; // This component doesn't render anything
};

export default AuthCheck;

//FRONTEND
//auth folder:
// AuthCheck.js
import { useEffect } from 'react';
import { checkAuth } from '../../services/authServices';

const AuthCheck = () => {
  useEffect(() => {
    checkAuth();
  }, []);

  return null; // This component doesn't render anything
};

export default AuthCheck;


// LoginPage.js
import React, { useState, useEffect } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import { login } from '../../services/authServices';
import { loginSuccess } from '../../store/actions/authActions';
import axios from 'axios';
import './LoginPage.css'

const LoginPage = () => {
  const [credentials, setCredentials] = useState({ email: '', password: '' });
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);

  useEffect(() => {
    const getGoogleLoginToken = () => {
      const urlParams = new URLSearchParams(window.location.search);
      return urlParams.get('token');
    };

  const handleGoogleLogin = async () => {
  const googleLoginToken = getGoogleLoginToken();
  if (googleLoginToken) {
    try {
      const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/auth/google/callback?token=${googleLoginToken}`);
      const { name, userid, email } = response.data.user;
      dispatch(loginSuccess(name, userid, email));
      navigate('/products');
    } catch (error) {
      console.error('Error handling Google login:', error);
    }
  }
};

    if (isAuthenticated) {
      navigate('/products');
    } else {
      handleGoogleLogin();
    }
  }, [isAuthenticated, navigate, dispatch]);


  const handleChange = (e) => {
    setCredentials({ ...credentials, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    login(credentials); // Using the authService's login function
  };

  return (
    <div className=""login-container"">
      <h2>Login</h2>
      <form onSubmit={handleSubmit} className=""login-form"">
        <input
          type=""email""
          name=""email""
          value={credentials.email}
          onChange={handleChange}
          placeholder=""Email""
          required
        />
        <input
          type=""password""
          name=""password""
          value={credentials.password}
          onChange={handleChange}
          placeholder=""Password""
          required
        />
        <button type=""submit"">Login</button>
      </form>
      <div className=""google-login-button"">
        <a href={`${process.env.REACT_APP_BACKEND_URL}/auth/google`}>
          <span>Login with Google</span>
        </a>
      </div>
      <p>
        Don't have an account? <a href=""/register"">Register</a>
      </p>
    </div>
  );
};

export default LoginPage;

// LogoutPage.js
import React from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';
import './LogoutPage.css';

const LogoutPage = ({ onLogout }) => {
  const navigate = useNavigate();

 const handleLogout = async () => {
    try {
        const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/logout`, {}, { withCredentials: true });
        if (response.status === 200) {
            onLogout();
          navigate('/login');
          console.log('Successfully logged out!')
        } else {
            console.error('Logout failed:', response.data.message);
        }
    } catch (error) {
        console.error('Logout error:', error.response.data.message);
    }
};


  return (
  <div className=""logout-container"">
    <h2>Are you sure you want to logout?</h2>
    <button onClick={handleLogout} className=""logout-button"">Logout</button>
  </div>
);
};

export default LogoutPage;

// LogoutPage.js
import React from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';
import './LogoutPage.css';

const LogoutPage = ({ onLogout }) => {
  const navigate = useNavigate();

 const handleLogout = async () => {
    try {
        const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/logout`, {}, { withCredentials: true });
        if (response.status === 200) {
            onLogout();
          navigate('/login');
          console.log('Successfully logged out!')
        } else {
            console.error('Logout failed:', response.data.message);
        }
    } catch (error) {
        console.error('Logout error:', error.response.data.message);
    }
};


  return (
  <div className=""logout-container"">
    <h2>Are you sure you want to logout?</h2>
    <button onClick={handleLogout} className=""logout-button"">Logout</button>
  </div>
);
};

export default LogoutPage;

import axios from 'axios';

// Set the default base URL for your API
axios.defaults.baseURL = `${process.env.REACT_APP_BACKEND_URL}`;

// Function to set the authentication token in the Axios header
const setAuthToken = (token) => {
  if (token) {
    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
  } else {
    delete axios.defaults.headers.common['Authorization'];
  }
};

export default setAuthToken;

//cart folder:

// Cart.js
import React, { useEffect } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { fetchCartItems, removeAllFromCart, updateCartItemQuantity } from '../../store/actions/cartActions';
import CartQuantityButton from './CartQuantityButton';
import { useNavigate } from 'react-router-dom';
import AuthCheck from '../auth/AuthCheck';
import './Cart.css';

const Cart = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const { isAuthenticated } = useSelector(state => state.auth);
  const { cartItems, loading, error } = useSelector(state => state.cart);

  // Fetch cart items on authentication change
  useEffect(() => {
    if (isAuthenticated) {
      dispatch(fetchCartItems());
    }
  }, [isAuthenticated, dispatch]);

  // Handle remove all for a single product
  const handleRemoveAll = productId => {
    const isConfirmed = window.confirm(""Are you sure you want to remove all of these items?"");
    if (isConfirmed) {
      dispatch(removeAllFromCart(productId));
    }
  };

  // Handle quantity change for a single product
  const handleQuantityChange = (productId, newQuantity) => {
    dispatch(updateCartItemQuantity(productId, newQuantity));
  };

  // Render and display cart items
  const renderCartItems = () => cartItems.map(item => (
    <li key={item.productid} className=""cart-item-card"">
      <img src={item.image_url} alt={item.name} className=""cart-item-image"" />
      <div className=""cart-item-details"">
        <span className=""cart-item-name"">{item.name}</span>
        <span className=""cart-item-price""> - <b>£{item.price}</b> </span>
        <div className=""cart-item-buttons""> 
          <CartQuantityButton
              productid={item.productid}
              initialQuantity={item.quantity}
              onQuantityChange={handleQuantityChange}
          />
          <button 
              className=""remove-all-button""
              onClick={() => handleRemoveAll(item.productid)}
          >
              Remove All
          </button>
      </div>
      </div>
    </li>
  ));

  // Rendering logic based on states
  if (!isAuthenticated) {
    return <div><AuthCheck /><p>Please log in to view your cart.</p></div>;
  }

  if (loading) {
    return <div>Loading...</div>;
  }
  if (error) {
    return <div>Error: {error}</div>;
  }

  return (
    <div className=""cart-container"">
      <h2 className=""cart-header"">Your Cart</h2>
      {cartItems.length === 0 ? (
        <p>Your cart is empty</p>
      ) : (
        <>
          <ul className=""cart-item-list"">{renderCartItems()}</ul>
          <div class=""button-container""> 
          <button onClick={() => navigate('/checkout')} className=""proceed-to-checkout"">
            Proceed to Checkout
          </button>
        </div>
        </>
      )}
    </div>
  );
};

export default Cart;

//view\src\components\cart\CartQuantityButton.js
import React, { useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import axios from 'axios';
import { useSelector } from 'react-redux';
import './CartQuantityButton.css';

const CartQuantityButton = ({ productid }) => {
  const { userid, isAuthenticated } = useSelector(state => {
    console.log('Redux State in Cart:', state); // Add this line
    return state.auth;
  });
  const [quantity, setQuantity] = useState(0);
  const numericUserId = Number(userid)
    
  console.log('UserID in CartQuantityButton:', numericUserId);


  useEffect(() => {
    const fetchCartQuantity = async () => {
      try {
        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/cart/quantity/${productid}`, {
          withCredentials: true
        });
        setQuantity(response.data.quantity);
      } catch (error) {
        console.error('Error fetching cart quantity:', error);
      }
       // Check if userid is a number
    if (isNaN(userid)) {
      console.error('UserID is not a valid number:', userid);
      // Handle the case where userid is not valid
      // This might include returning null, showing an error, or using a default value
      return null;
    }
    };

    fetchCartQuantity();
  }, [productid, userid, isAuthenticated]);

  const updateCart = async (newQuantity) => {
    console.log(`Updating cart for product ID: ${productid} with quantity: ${newQuantity}`);
    if (!productid) {
      console.error(""Product ID is undefined"");
      return;
    }
    
    try {
      await axios.put(`${process.env.REACT_APP_BACKEND_URL}/cart/${productid}`, {
        userid,
        productid,
        quantity: newQuantity
      }, {
        withCredentials: true
      });
    } catch (error) {
      console.error('Error updating cart:', error);
    }
  };

  const addToCart = async (newQuantity) => {
    try {
      await axios.post(`${process.env.REACT_APP_BACKEND_URL}/cart/add`, {
        userid,
        productid,
        quantity: newQuantity
      }, {
        withCredentials: true
      });
    } catch (error) {
      console.error('Error adding to cart:', error);
    }
  };

  const deleteFromCart = async () => {
    try {
      await axios.delete(`${process.env.REACT_APP_BACKEND_URL}/cart/${productid}`, {
        withCredentials: true
      });
    } catch (error) {
      console.error('Error deleting from cart:', error);
    }
  };

  const increment = () => {
    if (isAuthenticated) { // Authentication Check
      const newQuantity = quantity + 1;
      setQuantity(newQuantity);
      if (quantity === 0) {
        addToCart(newQuantity);
      } else {
        updateCart(newQuantity);
      }
    } else {
      alert(""You must log in to place items in the cart!"");
    }
  };

  const decrement = () => {
    if (isAuthenticated) {  // Authentication Check
      if (quantity > 1) {
        const newQuantity = quantity - 1;
        setQuantity(newQuantity);
        updateCart(newQuantity);
      } else if (quantity === 1) {
        deleteFromCart();
        setQuantity(0);
      }
    } else {
      alert(""You must log in to remove items from the cart!"");
    }
  };

  return (
    <div className=""cart-quantity-button"">
      <button onClick={decrement} >-</button>
      <span>{quantity}</span>
      <button onClick={increment} >+</button>
    </div>
  );
};

CartQuantityButton.propTypes = {
  userid: PropTypes.number, // If userid can be null/undefined, don't use isRequired
  productid: PropTypes.number.isRequired,
};


export default CartQuantityButton;

//Checkout folder:
// Checkout.js
import React, { useMemo, useState } from 'react';
import axios from 'axios';
import { useSelector } from 'react-redux';
import { loadStripe } from '@stripe/stripe-js';
import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';
import OrderHistory from '../orders/OrderHistory';
import './Checkout.css'

const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);

const CheckoutForm = () => {
  const stripe = useStripe();
  const elements = useElements();
  const { userid } = useSelector(state => state.auth);
  const { cartItems } = useSelector(state => state.cart);
  const [paymentSuccessful, setPaymentSuccessful] = useState(false);

  const totalAmount = useMemo(() => {
    return cartItems.reduce((total, item) => total + item.quantity * parseFloat(item.price), 0);
  }, [cartItems]);

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (!stripe || !elements) {
      return;
    }

    const cardElement = elements.getElement(CardElement);
    const { error, paymentMethod } = await stripe.createPaymentMethod({
      type: 'card',
      card: cardElement,
    });

    if (error) {
      console.log('[error]', error);
    } else {
     try {
        const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/${userid}/checkout`, {
          paymentMethodId: paymentMethod.id,
          amount: totalAmount
          
        },{withCredentials: true});

     const { clientSecret } = response.data;
       if (clientSecret) { // Check if clientSecret exists before using it
         const result = await stripe.confirmCardPayment(clientSecret.toString());

         if (result.error) {
           console.error('Payment confirmation error', result.error);
         } else {
           setPaymentSuccessful(true); // Set the flag to true on successful payment
         }
       } else {
         console.error('Client secret is missing in the server response');
       }
      } catch (error) {
        console.error('Error processing payment', error);
      }
    }
  };

  if (paymentSuccessful) {
    return <OrderHistory />; // Render OrderHistory component on successful payment
  }


  return (
    <div className=""checkout-container"">
      <div className=""checkout-section cart-summary"">
        <h3>Cart Summary</h3>
        {cartItems.map(item => (
          <div key={item.productid} className=""cart-item"">
            <img src={item.image_url} alt={item.name} className=""cart-item-image"" />
            <div className=""cart-item-details"">
              <span className=""cart-item-name"">{item.name}</span>
              <span className=""cart-item-price"">  - <b>£{item.price}</b>  ({item.quantity})</span>
            </div>
          </div>
        ))}
        <p className=""total-amount"">Total: £{totalAmount.toFixed(2)}</p>
      </div>

      <div className=""checkout-section payment-details"">
        <form onSubmit={handleSubmit} className=""checkout-form"">
          <h2>Payment Details</h2>
          <CardElement />
          <button type=""submit"" disabled={!stripe} className=""pay-button"">
            Pay £{totalAmount.toFixed(2)}
          </button>
        </form>
      </div>
    </div>
  );
};

const Checkout = () => {
  return (
    <Elements stripe={stripePromise}>
      <CheckoutForm />
    </Elements>
  );
};

export default Checkout;


//layout folder

// Checkout.js
import React, { useMemo, useState } from 'react';
import axios from 'axios';
import { useSelector } from 'react-redux';
import { loadStripe } from '@stripe/stripe-js';
import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';
import OrderHistory from '../orders/OrderHistory';
import './Checkout.css'

const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);

const CheckoutForm = () => {
  const stripe = useStripe();
  const elements = useElements();
  const { userid } = useSelector(state => state.auth);
  const { cartItems } = useSelector(state => state.cart);
  const [paymentSuccessful, setPaymentSuccessful] = useState(false);

  const totalAmount = useMemo(() => {
    return cartItems.reduce((total, item) => total + item.quantity * parseFloat(item.price), 0);
  }, [cartItems]);

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (!stripe || !elements) {
      return;
    }

    const cardElement = elements.getElement(CardElement);
    const { error, paymentMethod } = await stripe.createPaymentMethod({
      type: 'card',
      card: cardElement,
    });

    if (error) {
      console.log('[error]', error);
    } else {
     try {
        const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/${userid}/checkout`, {
          paymentMethodId: paymentMethod.id,
          amount: totalAmount
          
        },{withCredentials: true});

     const { clientSecret } = response.data;
       if (clientSecret) { // Check if clientSecret exists before using it
         const result = await stripe.confirmCardPayment(clientSecret.toString());

         if (result.error) {
           console.error('Payment confirmation error', result.error);
         } else {
           setPaymentSuccessful(true); // Set the flag to true on successful payment
         }
       } else {
         console.error('Client secret is missing in the server response');
       }
      } catch (error) {
        console.error('Error processing payment', error);
      }
    }
  };

  if (paymentSuccessful) {
    return <OrderHistory />; // Render OrderHistory component on successful payment
  }


  return (
    <div className=""checkout-container"">
      <div className=""checkout-section cart-summary"">
        <h3>Cart Summary</h3>
        {cartItems.map(item => (
          <div key={item.productid} className=""cart-item"">
            <img src={item.image_url} alt={item.name} className=""cart-item-image"" />
            <div className=""cart-item-details"">
              <span className=""cart-item-name"">{item.name}</span>
              <span className=""cart-item-price"">  - <b>£{item.price}</b>  ({item.quantity})</span>
            </div>
          </div>
        ))}
        <p className=""total-amount"">Total: £{totalAmount.toFixed(2)}</p>
      </div>

      <div className=""checkout-section payment-details"">
        <form onSubmit={handleSubmit} className=""checkout-form"">
          <h2>Payment Details</h2>
          <CardElement />
          <button type=""submit"" disabled={!stripe} className=""pay-button"">
            Pay £{totalAmount.toFixed(2)}
          </button>
        </form>
      </div>
    </div>
  );
};

const Checkout = () => {
  return (
    <Elements stripe={stripePromise}>
      <CheckoutForm />
    </Elements>
  );
};

export default Checkout;

//orders folder

// Checkout.js
import React, { useMemo, useState } from 'react';
import axios from 'axios';
import { useSelector } from 'react-redux';
import { loadStripe } from '@stripe/stripe-js';
import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';
import OrderHistory from '../orders/OrderHistory';
import './Checkout.css'

const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);

const CheckoutForm = () => {
  const stripe = useStripe();
  const elements = useElements();
  const { userid } = useSelector(state => state.auth);
  const { cartItems } = useSelector(state => state.cart);
  const [paymentSuccessful, setPaymentSuccessful] = useState(false);

  const totalAmount = useMemo(() => {
    return cartItems.reduce((total, item) => total + item.quantity * parseFloat(item.price), 0);
  }, [cartItems]);

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (!stripe || !elements) {
      return;
    }

    const cardElement = elements.getElement(CardElement);
    const { error, paymentMethod } = await stripe.createPaymentMethod({
      type: 'card',
      card: cardElement,
    });

    if (error) {
      console.log('[error]', error);
    } else {
     try {
        const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/${userid}/checkout`, {
          paymentMethodId: paymentMethod.id,
          amount: totalAmount
          
        },{withCredentials: true});

     const { clientSecret } = response.data;
       if (clientSecret) { // Check if clientSecret exists before using it
         const result = await stripe.confirmCardPayment(clientSecret.toString());

         if (result.error) {
           console.error('Payment confirmation error', result.error);
         } else {
           setPaymentSuccessful(true); // Set the flag to true on successful payment
         }
       } else {
         console.error('Client secret is missing in the server response');
       }
      } catch (error) {
        console.error('Error processing payment', error);
      }
    }
  };

  if (paymentSuccessful) {
    return <OrderHistory />; // Render OrderHistory component on successful payment
  }


  return (
    <div className=""checkout-container"">
      <div className=""checkout-section cart-summary"">
        <h3>Cart Summary</h3>
        {cartItems.map(item => (
          <div key={item.productid} className=""cart-item"">
            <img src={item.image_url} alt={item.name} className=""cart-item-image"" />
            <div className=""cart-item-details"">
              <span className=""cart-item-name"">{item.name}</span>
              <span className=""cart-item-price"">  - <b>£{item.price}</b>  ({item.quantity})</span>
            </div>
          </div>
        ))}
        <p className=""total-amount"">Total: £{totalAmount.toFixed(2)}</p>
      </div>

      <div className=""checkout-section payment-details"">
        <form onSubmit={handleSubmit} className=""checkout-form"">
          <h2>Payment Details</h2>
          <CardElement />
          <button type=""submit"" disabled={!stripe} className=""pay-button"">
            Pay £{totalAmount.toFixed(2)}
          </button>
        </form>
      </div>
    </div>
  );
};

const Checkout = () => {
  return (
    <Elements stripe={stripePromise}>
      <CheckoutForm />
    </Elements>
  );
};

export default Checkout;

//products folder:

// Checkout.js
import React, { useMemo, useState } from 'react';
import axios from 'axios';
import { useSelector } from 'react-redux';
import { loadStripe } from '@stripe/stripe-js';
import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';
import OrderHistory from '../orders/OrderHistory';
import './Checkout.css'

const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);

const CheckoutForm = () => {
  const stripe = useStripe();
  const elements = useElements();
  const { userid } = useSelector(state => state.auth);
  const { cartItems } = useSelector(state => state.cart);
  const [paymentSuccessful, setPaymentSuccessful] = useState(false);

  const totalAmount = useMemo(() => {
    return cartItems.reduce((total, item) => total + item.quantity * parseFloat(item.price), 0);
  }, [cartItems]);

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (!stripe || !elements) {
      return;
    }

    const cardElement = elements.getElement(CardElement);
    const { error, paymentMethod } = await stripe.createPaymentMethod({
      type: 'card',
      card: cardElement,
    });

    if (error) {
      console.log('[error]', error);
    } else {
     try {
        const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/${userid}/checkout`, {
          paymentMethodId: paymentMethod.id,
          amount: totalAmount
          
        },{withCredentials: true});

     const { clientSecret } = response.data;
       if (clientSecret) { // Check if clientSecret exists before using it
         const result = await stripe.confirmCardPayment(clientSecret.toString());

         if (result.error) {
           console.error('Payment confirmation error', result.error);
         } else {
           setPaymentSuccessful(true); // Set the flag to true on successful payment
         }
       } else {
         console.error('Client secret is missing in the server response');
       }
      } catch (error) {
        console.error('Error processing payment', error);
      }
    }
  };

  if (paymentSuccessful) {
    return <OrderHistory />; // Render OrderHistory component on successful payment
  }


  return (
    <div className=""checkout-container"">
      <div className=""checkout-section cart-summary"">
        <h3>Cart Summary</h3>
        {cartItems.map(item => (
          <div key={item.productid} className=""cart-item"">
            <img src={item.image_url} alt={item.name} className=""cart-item-image"" />
            <div className=""cart-item-details"">
              <span className=""cart-item-name"">{item.name}</span>
              <span className=""cart-item-price"">  - <b>£{item.price}</b>  ({item.quantity})</span>
            </div>
          </div>
        ))}
        <p className=""total-amount"">Total: £{totalAmount.toFixed(2)}</p>
      </div>

      <div className=""checkout-section payment-details"">
        <form onSubmit={handleSubmit} className=""checkout-form"">
          <h2>Payment Details</h2>
          <CardElement />
          <button type=""submit"" disabled={!stripe} className=""pay-button"">
            Pay £{totalAmount.toFixed(2)}
          </button>
        </form>
      </div>
    </div>
  );
};

const Checkout = () => {
  return (
    <Elements stripe={stripePromise}>
      <CheckoutForm />
    </Elements>
  );
};

export default Checkout;


//view\src\components\products\ProductDetailsPage.js
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { useSelector } from 'react-redux';
import { useParams } from 'react-router-dom';

import CartQuantityButton from '../cart/CartQuantityButton';
import './ProductDetailsPage.css';

const ProductDetailsPage = () => {
  const { userid, isAuthenticated } = useSelector(state => {
    console.log('Redux State in Cart:', state); // Add this line
    return state.auth;
  });
  const [product, setProduct] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState('');

  const { productid } = useParams();
  const numericProductId = Number(productid);
  useEffect(() => {
    const fetchProduct = async () => {
      try {
        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/products/${productid}`);
        if (response && response.data) {
          setProduct(response.data);
        }
        setIsLoading(false);
      } catch (err) {
        setError(err.message);
        setIsLoading(false);
      }
    };

    fetchProduct();
  }, [productid, isAuthenticated, userid]);

  if (isLoading) {
    return <div className=""loading"">Loading product details...</div>;
  }

  if (error) {
    return <div className=""error"">Error: {error}</div>;
  }

  if (!product) {
    return <div className=""error"">Product not found</div>;
  }

  return (
    <div className=""product-details-container"">
      <h2>{product.name}</h2>
      <p>{product.description}</p>
      <p className=""price"">Price: ${product.price}</p>
      {product.image_url && <img src={product.image_url} alt={product.name} className=""product-image"" />}
      {/* CartQuantityButton component */}
      <div className=""cart-button-wrapper"">
        <CartQuantityButton userid={userid} productid={numericProductId} />
      </div>
    </div>
  );
}

export default ProductDetailsPage;

//view\src\components\products\ProductsList.js
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { useSelector } from 'react-redux';
import { Link } from 'react-router-dom';
import Product from './ProductDetails';
import './ProductList.css';

export default function ProductList() {
   const { userid, isAuthenticated } = useSelector(state => {
    console.log('Redux State in Cart:', state); // Add this line
    return state.auth;
  });
  const [products, setProducts] = useState([]);
  const [error, setError] = useState(null);
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    const fetchProducts = async () => {
      try {
        setIsLoading(true);
        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/products`);
        setProducts(response.data);
        setIsLoading(false);
      } catch (err) {
        setError(err.message);
        setIsLoading(false);
      }
    };

    fetchProducts();
  }, [userid, isAuthenticated]);

  if (isLoading) return <div>Loading...</div>;
  if (error) return <div>Error: {error}</div>;

  return (
    <div>
       <h1 className=""product-header"">Welcome to E-shop!</h1>
      <p>You can browse our products here. We hope you will enjoy shopping with us today!</p>
    <div className=""product-list"">
     
      {products.length > 0 ? (
        products.map(product => (
          <Link to={`/product/${product.productid}`} key={product.productid}>
            <Product product={product} />
          </Link>
        ))
      ) : (
        <div>No products found</div>
      )}
      </div>
      </div>
  );
}

//users folder:

import React from 'react';
import ProfileCompletion from './ProfileCompletion'; // Adjust the import path

const ParentComponent = () => {
  const handleProfileComplete = () => {
    console.log(""Profile completed"");
    // Redirect or perform other actions
  };

  // Assuming 'user' is available here
  const user = { username: 'exampleUser' };

  return (
    <ProfileCompletion user={user} onProfileComplete={handleProfileComplete} />
  );
};

export default ParentComponent;

//view\src\components\auth\ProfileCompletion.js
import React, { useState, useEffect } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import axios from 'axios';

const ProfileCompletion = () => {
  const navigate = useNavigate();
  const { userid } = useParams();
  const [details, setDetails] = useState({
    username: '',
    phonenumber: '',
    address: ''
  });

  useEffect(() => {
    // Fetch user data based on userid and set it in the state
    const fetchUserData = async () => {
      try {
        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/users/${userid}`);
        setDetails({
          username: response.data.name, // Update this based on your actual user object structure
          phonenumber: '',
          address: ''
        });
      } catch (error) {
        console.error('Error fetching user data:', error);
      }
    };

    if (userid) {
      fetchUserData();
    }
  }, [userid]);

  const handleChange = (e) => {
    setDetails({ ...details, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const userUpdateData = {
      ...details,
      userid: userid
    };
    try {
      await axios.post(`${process.env.REACT_APP_BACKEND_URL}/update-user-details`, userUpdateData);
      navigate('/products');
    } catch (error) {
      console.error('Error updating user details:', error);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <input
        type=""text""
        name=""username""
        value={details.username}
        onChange={handleChange}
        placeholder=""Username""
      />
      <input
        type=""text""
        name=""phonenumber""
        value={details.phonenumber}
        onChange={handleChange}
        placeholder=""Phone Number""
      />
      <input
        type=""text""
        name=""address""
        value={details.address}
        onChange={handleChange}
        placeholder=""Address""
      />
      <button type=""submit"">Complete Profile</button>
    </form>
  );
};

export default ProfileCompletion;

import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';
import { useSelector } from 'react-redux';
import ProfileCompletion from './ProfileCompletion';
import UserProfileEdit from './UserProfileEdit'; 
import './UserProfile.css'; // Add this line to both components


const UserProfile = () => {
  const navigate = useNavigate();
  const { userid, isAuthenticated, email, username } = useSelector(state => {
    console.log('Redux State in Cart:', state);
    return state.auth;
  });

  const [userDetails, setUserDetails] = useState(null);
  const [editMode, setEditMode] = useState(false); // State to control edit mode

  useEffect(() => {
    const fetchUserData = async () => {
      try {
        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/users/user-profile/${userid}`, {
        withCredentials: true});
        setUserDetails(response.data);
      } catch (error) {
        console.error('Error fetching user data:', error);
      }
    };

    if (userid) {
      fetchUserData();
    }
  }, [userid, isAuthenticated, email, username]);

  const toggleEditMode = () => {
    setEditMode(!editMode);
  };

  const handleProfileComplete = () => {
    console.log(""Profile completed"");
    navigate('/products');
  };

  const handleUserDetailsUpdate = (updatedDetails) => {
  setUserDetails(updatedDetails);
};

   return (
    <div className=""user-profile-container"">
  <h1>User Profile</h1>
  {editMode ? (
    <UserProfileEdit 
      userDetails={userDetails}
      onEditComplete={toggleEditMode}
      onUserDetailsUpdate={handleUserDetailsUpdate} 
      userid={userid} 
    />
  ) : userDetails && userDetails.phonenumber ? (
    <div className=""user-profile-card"">
      <div className=""user-profile-field"">
        <label>Name:</label>
        <p>{userDetails.name}</p>
      </div>
      <div className=""user-profile-field"">
        <label>Email:</label>
        <p>{userDetails.email}</p>
      </div>
      <div className=""user-profile-field"">
        <label>Address:</label>
        <p>{userDetails.address}</p>
      </div>
      <div className=""user-profile-field"">
        <label>Phone Number:</label>
        <p>{userDetails.phonenumber}</p>
      </div>
      <button onClick={toggleEditMode} className=""edit-profile-btn"">Edit Profile</button>
    </div>
  ) : (
    <ProfileCompletion onProfileComplete={handleProfileComplete} />
  )}
</div>

  );
};

export default UserProfile;

//view\src\components\users\UserProfileEdit.js
import React, { useState } from 'react';
import axios from 'axios';
import './UserProfile.css'; // Add this line to both components


const UserProfileEdit = ({ userDetails, onEditComplete, userid, onUserDetailsUpdate }) => {
  const [formData, setFormData] = useState({
    name: userDetails.name,
    email: userDetails.email,
    address: userDetails.address,
    phonenumber: userDetails.phonenumber
  });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

 // In UserProfileEdit component

const handleSubmit = async (e) => {
  e.preventDefault();
  try {
    const response = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/users/${userid}`, formData, {withCredentials: true});
    if (response.data) {
      onUserDetailsUpdate(response.data); // Update the parent component's state
      onEditComplete(); // Switch back to view mode
    }
  } catch (error) {
    console.error('Error updating user data:', error);
  }
};

   return (
   <form onSubmit={handleSubmit} className=""user-profile-edit"">
  <div className=""user-profile-field"">
    <label>Name:</label>
    <input type=""text"" name=""name"" value={formData.name} onChange={handleChange} />
  </div>
  <div className=""user-profile-field"">
    <label>Email:</label>
    <input type=""email"" name=""email"" value={formData.email} onChange={handleChange} />
  </div>
  <div className=""user-profile-field"">
    <label>Address:</label>
    <input type=""text"" name=""address"" value={formData.address} onChange={handleChange} />
  </div>
  <div className=""user-profile-field"">
    <label>Phone Number:</label>
    <input type=""text"" name=""phonenumber"" value={formData.phonenumber} onChange={handleChange} />
  </div>
  <button type=""submit"" className=""update-profile-btn"">Update</button>
</form>

  );
};

export default UserProfileEdit;

//hooks folder:
//useAppNavigate.js
import { useNavigate } from 'react-router-dom';

const useAppNavigate = () => {
  const navigate = useNavigate();
  return navigate;
};

export default useAppNavigate;

//services folder:
// services/authServices.js
import axios from 'axios';
import { store } from '../store/store';
import { loginSuccess, logout } from '../store/actions/authActions';
import { fetchCartItems } from '../store/actions/cartActions'; // Import the action


const login = async (credentials) => {
  try {
    const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, credentials, { withCredentials: true });
    const { name, userid, email } = response.data.user;
    if (name && userid !== undefined) {
      console.log(store.dispatch(loginSuccess(name, userid, email)))
      store.dispatch(loginSuccess(name, userid, email), );
      store.dispatch(fetchCartItems()); // Fetch cart items after successful login
    } else {
      console.error('Login failed: User ID is missing in the response');
    }
  } catch (error) {
    console.error('Login error:', error);
  }
};


const checkAuth = async () => {
  try {
    const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/check-auth`, { withCredentials: true });
    const userData = response.data.user;
    if (response.data.isAuthenticated && userData && userData.email !== undefined) {
      store.dispatch(loginSuccess(userData.name, userData.userid, userData.email));
      store.dispatch(fetchCartItems());
    } else {
      store.dispatch(logout());
    }
  } catch (error) {
    console.error('Error checking authentication:', error);
  }
};

export { login, checkAuth };

//store/actions folder:(redux store)
//view\src\store\actions\authActions.js
export const loginSuccess = (username, userid, email) => {
  return {
    type: 'LOGIN_SUCCESS',
    payload: { username, userid, email }
  };
};

export const setAuth = (isAuthenticated, username, userid, email, userNeedsProfileCompletion) => {
  return {
    type: 'SET_AUTH',
    payload: { isAuthenticated, username, userid, email, userNeedsProfileCompletion }
  };
};


export const logout = () => ({ type: 'LOGOUT' });
export const registerSuccess = (username) => ({ type: 'REGISTER_SUCCESS', payload: username });

//view\src\store\actions\cartActions.js
import axios from 'axios';

export const FETCH_CART_BEGIN = 'FETCH_CART_BEGIN';
export const FETCH_CART_SUCCESS = 'FETCH_CART_SUCCESS';
export const FETCH_CART_FAILURE = 'FETCH_CART_FAILURE';
export const UPDATE_CART_ITEM = 'UPDATE_CART_ITEM';
export const DELETE_CART_ITEM = 'DELETE_CART_ITEM';
export const ADD_TO_CART = 'ADD_TO_CART';
export const REMOVE_FROM_CART = 'REMOVE_FROM_CART';

export const fetchCartBegin = () => ({
  type: FETCH_CART_BEGIN
});

export const fetchCartSuccess = cartItems => ({
  type: FETCH_CART_SUCCESS,
  payload: { cartItems }
});

export const fetchCartFailure = error => ({
  type: FETCH_CART_FAILURE,
  payload: { error }
});

export const updateCartItem = (productId, newQuantity) => ({
  type: UPDATE_CART_ITEM,
  payload: { productId, newQuantity }
});

export const deleteCartItem = productId => ({
  type: DELETE_CART_ITEM,
  payload: { productId }
});

export const fetchCartItems = () => {
  return dispatch => {
    dispatch(fetchCartBegin());
    return axios.get(`${process.env.REACT_APP_BACKEND_URL}/cart`, { withCredentials: true })
      .then(response => dispatch(fetchCartSuccess(response.data.cartItems)))
      .catch(error => dispatch(fetchCartFailure(error)));
  };
};

export const removeAllFromCart = productId => {
  return async dispatch => {
    try {
      await axios.delete(`${process.env.REACT_APP_BACKEND_URL}/cart/removeAll/${productId}`, { withCredentials: true });
      dispatch(deleteCartItem(productId));
    } catch (error) {
      console.error('Error removing items:', error);
    }
  };
};

export const updateCartItemQuantity = (productId, newQuantity) => {
  return async dispatch => {
    try {
      await axios.put(`${process.env.REACT_APP_BACKEND_URL}/cart/${productId}`, { quantity: newQuantity }, { withCredentials: true });
      dispatch(updateCartItem(productId, newQuantity));
    } catch (error) {
      console.error('Error updating cart item:', error);
    }
  };
};


export const addToCart = (productId, quantity) => {
  return async dispatch => {
    try {
      await axios.post(`${process.env.REACT_APP_BACKEND_URL}/cart/add`, { productid: productId, quantity }, { withCredentials: true });
      dispatch({
        type: ADD_TO_CART,
        payload: { productId, quantity }
      });
    } catch (error) {
      console.error('Error adding to cart:', error);
    }
  };
};

export const removeFromCart = productId => {
  return async dispatch => {
    try {
      await axios.delete(`${process.env.REACT_APP_BACKEND_URL}/cart/${productId}`, { withCredentials: true });
      dispatch({
        type: REMOVE_FROM_CART,
        payload: { productId }
      });
    } catch (error) {
      console.error('Error removing from cart:', error);
    }
  };
};

//view\src\store\actions\userActions.js
export const REGISTER_REQUEST = 'REGISTER_REQUEST';
export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';
export const REGISTER_FAILURE = 'REGISTER_FAILURE';

// Action Creators
export const registerRequest = () => ({ type: REGISTER_REQUEST });
export const registerSuccess = (username) => ({ type: REGISTER_SUCCESS, payload: username });
export const registerFailure = (error) => ({ type: REGISTER_FAILURE, payload: error });


// src/reducers/authReducer.js
const initialState = {
  isAuthenticated: false,
  userid: null,
  username: '',
  email: '',
  userNeedsProfileCompletion: false
};

export default function authReducer(state = initialState, action) {
  console.log('Dispatched Action:', action);

  switch (action.type) {
    case 'LOGIN_SUCCESS':
      console.log('LOGIN_SUCCESS payload:', action.payload);
      return {
        ...state,
        isAuthenticated: true,
        userid: action.payload.userid,
        username: action.payload.username,
        email: action.payload.email
      };
    case 'SET_AUTH':
      return {
        ...state,
        isAuthenticated: action.payload.isAuthenticated,
        userid: action.payload.userid,
        username: action.payload.username,
        email: action.payload.email,
        userNeedsProfileCompletion: action.payload.userNeedsProfileCompletion
      };
    case 'LOGOUT':
      return initialState;
    default:
      return state;
  }
}

//reducers folder:
//view\src\store\reducers\cartReducer.js
import {
  FETCH_CART_BEGIN,
  FETCH_CART_SUCCESS,
  FETCH_CART_FAILURE,
  UPDATE_CART_ITEM,
    DELETE_CART_ITEM,
    ADD_TO_CART,
    REMOVE_FROM_CART
} from '../actions/cartActions';

const initialCartState  = {
  cartItems: [],
  loading: false,
  error: null
};

export const cartReducer = (state = initialCartState , action) => {
  switch (action.type) {
    case FETCH_CART_BEGIN:
      return {
        ...state,
        loading: true,
        error: null
      };
    case FETCH_CART_SUCCESS:
      return {
        ...state,
        loading: false,
        cartItems: action.payload.cartItems
      };
    case FETCH_CART_FAILURE:
      return {
        ...state,
        loading: false,
        error: action.payload.error,
        cartItems: []
      };
    case UPDATE_CART_ITEM:
      return {
        ...state,
        cartItems: state.cartItems.map(item =>
          item.productid === action.payload.productId
            ? { ...item, quantity: action.payload.newQuantity }
            : item
        )
      };
    case DELETE_CART_ITEM:
      return {
        ...state,
        cartItems: state.cartItems.filter(item => item.productid !== action.payload.productId)
          };
        case ADD_TO_CART:
      return {
        ...state,
        cartItems: state.cartItems.map(item =>
          item.productid === action.payload.productId
            ? { ...item, quantity: item.quantity + action.payload.quantity }
            : item
        )
      };
    case REMOVE_FROM_CART:
      return {
        ...state,
        cartItems: state.cartItems.filter(item => item.productid !== action.payload.productId)
      };
    case 'LOGOUT':
      return initialCartState;
    default:
      return state;
  }
};

export default cartReducer;

//view\src\store\reducers\rootReducer.js
import { combineReducers } from 'redux';
import authReducer from './authReducer';
import cartReducer from './cartReducer';
import userReducer from './userReducer';

export default combineReducers({
  auth: authReducer,
  cart: cartReducer,
  user: userReducer
});

// src/reducers/userReducer.js
const initialState = {
  isLoggedIn: false,
  userid: null,
  email: ''
};

const userReducer = (state = initialState, action) => {
  switch (action.type) {
    case 'LOGIN':
      return {
        ...state,
        isLoggedIn: true,
        userid: action.payload.userid,
        email: action.payload.email
      };
    case 'LOGOUT':
      return {
        ...state,
        isLoggedIn: false,
        userid: null
      };
    default:
      return state;
  }
};

export default userReducer;

//store folder:
//view\src\store\store.js
import { createStore, applyMiddleware, compose } from 'redux';
import {thunk} from 'redux-thunk'; // Corrected import for thunk
import rootReducer from './reducers/rootReducer';
import { persistStore, persistReducer } from 'redux-persist';
import storage from 'redux-persist/lib/storage'; // defaults to localStorage for web

const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;

// Persist configuration
const persistConfig = {
  key: 'root',
  storage,
};

// Create a persisted reducer
const persistedReducer = persistReducer(persistConfig, rootReducer);

// Create store with persisted reducer
const store = createStore(
  persistedReducer,
  composeEnhancers(applyMiddleware(thunk))
);

// Create persistor
const persistor = persistStore(store);

export { store, persistor };

//FRONTEND root folder:
// App.js
import React, { useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { Provider, useSelector, useDispatch } from 'react-redux';
import { store } from './store/store';
import axios from 'axios';

import LoginPage from './components/auth/LoginPage';
import LogoutPage from './components/auth/LogoutPage';
import RegisterPage from './components/auth/RegisterPage';
import ProfileCompletion from './components/users/ProfileCompletion';
import UserProfile from './components/users/UserProfile';
import ProductsList from './components/products/ProductsList';
import ProductDetailsPage from './components/products/ProductDetailsPage';
import Cart from './components/cart/Cart';
import Checkout from './components/checkout/Checkout';
import OrderHistory from './components/orders/OrderHistory';
import Header from './components/layout/Header';


import { loginSuccess, logout } from './store/actions/authActions';

const App = () => {
  const dispatch = useDispatch();
  const { isAuthenticated, username } = useSelector(state => state.auth);

  useEffect(() => {
    const checkUserAuthentication = async () => {
      try {
        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/check-auth`, { withCredentials: true })
        if(response.data.isAuthenticated) {
          dispatch(loginSuccess(response.data.user.name, response.data.user.userid));
        } else {
          dispatch(logout());
        }
      } catch (error) {
        console.error('Error checking authentication:', error);
      }
    };

    checkUserAuthentication();
  }, [dispatch]);

 

  const setAuthToken = (token) => {
    if (token) {
      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
    
    } else {
      delete axios.defaults.headers.common['Authorization'];
    }
  };

  const handleLogin = (user) => {
    setAuthToken(user.token);
    dispatch(loginSuccess(user.name, user.userid, user.email));
  };

  const handleLogout = () => {
    setAuthToken(null);
    dispatch(logout());
  };

const url = `${process.env.REACT_APP_BACKEND_URL}/products`;
console.log(""Request URL:"", url);



  return (
    <Provider store={store}>
      <Router>
        <Header isAuthenticated={isAuthenticated} username={username} />
        <Routes>
          <Route path=""/"" element={<ProductsList />} />
          <Route path=""/login"" element={<LoginPage onLogin={handleLogin} />} />
          <Route path=""/logout"" element={<LogoutPage onLogout={handleLogout} />} />
          <Route path=""/register"" element={<RegisterPage />} />
          <Route path=""/products"" element={<ProductsList />} />
          <Route path=""/product/:productid"" element={<ProductDetailsPage />} />
          <Route path=""/cart"" element={<Cart />} />
          <Route path=""/checkout"" element={<Checkout />} />
          <Route path=""/order-history"" element={<OrderHistory />} />
          <Route path=""/user-profile"" element={<UserProfile />} />
          <Route path=""/user-profile/:userid"" element={<UserProfile />} />
          <Route path=""/profilecompletion/:userid"" element={<ProfileCompletion />} />
        </Routes>
      </Router>
    </Provider>
  );
}

export default App;

import React from 'react';
import { createRoot } from 'react-dom/client';
import { Provider } from 'react-redux';
import { PersistGate } from 'redux-persist/integration/react';
import { store, persistor } from './store/store'; // Adjust path as necessary
import App from './App';

const container = document.getElementById('root');
const root = createRoot(container);

root.render(
  <Provider store={store}>
    <PersistGate loading={null} persistor={persistor}>
      <App />
    </PersistGate>
  </Provider>
);



//.env file
DB_USER=postgres
DB_PASSWORD=falloutX11
DB_HOST=localhost
DB_PORT=5432
DB_DATABASE=ecommerce
SECRET=r2smw2u2
JWT_SECRET=r2smw2u2
REFRESH_TOKEN_SECRET=r2smw2u2
GOOGLE_CLIENT_ID=445920566732-otsajr3r7i3uv7vk9r1vtub7fmtri0f7.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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
LOCALHOST=http://localhost:3000
CHATGPT_API_VSCODE=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
REACT_APP_STRIPE_SECRET_KEY=sk_test_51Ao5lVAsQsqu4WY6X8Y5NFKELLsdLY5s48FGfJqhtb1v1UTs1ROQZaWgRbYyaxMOJtGaudNMCCdCHlghYxavBWJL00T2jBMSd3
REACT_APP_STRIPE_PUBLIC_KEY=pk_test_51Ao5lVAsQsqu4WY6xWkHFFPUGiyiWKb5Ap9boxONCD33jRN4vuYkdoXo4XQP2FMZuq85y7UUTQbXrpAwtW4Y3Hhr00isSg2ra1
REACT_APP_BACKEND_URL=https://e-shop-backend-plfz.onrender.com
REACT_APP_FRONTEND_URL=https://e-shop-frontend-8ylf.onrender.com

# REACT_APP_SUPABASE_URL=https://dgxfyraurqoackwkaxoe.supabase.co
# REACT_APP_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRneGZ5cmF1cnFvYWNrd2theG9lIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDc1ODk2NzcsImV4cCI6MjAyMzE2NTY3N30.BqxexaEdGGO2DLP2hfBHeNVBPH8vcVbOUt8rcnZdgok


"
M0Gvb938,BBC_BASIC_TEMPLATE,lovejoy777,ZXBasic,Wednesday 14th of February 2024 05:15:22 PM CDT,"   10 REM ******************************
   20 REM *        AGON LIGHT 2        *
   30 REM *     BBC BASIC TEMPLATE     *
   40 REM *      BBC BASIC MODE 0      *
   50 REM *    C/W RESET ORIG SCREEN   *
   60 REM *      BY STEVE LOVEJOY      *
   70 REM ******************************
   80 :
   90 REM MAIN SETUP.
  100 CLEAR : REM clear memory.
  110 :
  120 PROC_LOAD_VARS             : REM CALL LOAD_VARS.
  130 PROC_GET_ORIGINALS         : REM CALL GET_ORIGINALS.
  140 PROC_INITIALIZE_SCREEN     : REM CALL INIT_SCREEN.
  150 PROC_MAIN_LOOP             : REM CALL MAIN_LOOP.
  160 :
 1000 DEF PROC_MAIN_LOOP         : REM ** MAIN LOOP **
 1010 COLOUR COL_YELLOW%         : REM CHANGE text colour.
 1020 PRINT TAB(24,20)""HELLO WORLD!""    : REM PRINT at (x,y).
 1030 PRINT TAB(22,22)""PRESS X TO EXIT"" : REM PRINT at (x,y).
 1040 A%=INKEY(0)                : REM GET keyboard input.
 1050 IF A%=120 OR A%=88 THEN PROC_CHECK_EXIT : REM press X to exit.
 1060 PROC_MAIN_LOOP             : REM loop back to start of MAIN_LOOP.
 3000 ENDPROC : REM END PROC_MAIN_LOOP.
 3010 :
 4000 DEF PROC_GET_ORIGINALS     : REM ** GET_ORIGINALS **
 4010 OM% = FN_GETBYTE_VDP(&27)  : REM GET original Screen Mode.
 4020 VDU 23,230,255,255,255,255,255,255,255,255 : REM CREATE new filled char with original colours.
 4030 PRINT TAB(0,0);CHR$(230);  : REM PRINT new char top left.
 4040 OTFC% = POINT(4,1015)      : REM GET original text fg colour.
 4050 VDU 127                    : REM DELETE new char to get bg colour.
 4060 OTBC% = POINT(4,1015)      : REM GET original text bg colour.
 4070 ENDPROC : REM END PROC_GET_ORIGINALS.
 4080 :
 5500 DEF PROC_INITIALIZE_SCREEN : REM ** INITIALIZE_SCREEN **
 5510 MODE 0                     : REM SETS new screen mode.
 5520 CLS                        : REM clear text screen.
 5530 CLG                        : REM clear graphics screen.
 5540 PROC_HIDE_CURSOR
 5550 ENDPROC : REM END PROC_INITIALIZE_SCREEN.
 5560 :
 6000 DEF PROC_HIDE_CURSOR       : REM ** HIDE_CURSOR **
 6010 VDU 23,1,0;0;0;0;
 6020 ENDPROC
 6030 :
 6040 DEF PROC_SHOW_CURSOR       : REM ** SHOW_CURSOR **
 6050 VDU 23,1,1;0;0;0;
 6060 ENDPROC
 6070 :
 8000 DEF PROC_LOAD_VARS : REM ** LOAD_VARS **
 8010 REM NAME colours, add 128 for background.
 8020 COL_BLACK% = 0
 8030 COL_RED% = 1
 8040 COL_GREEN% = 2
 8050 COL_YELLOW% = 3
 8060 COL_BLUE% = 4
 8070 COL_MAGENTA% = 5
 8080 COL_CYAN% = 6
 8090 COL_WHITE% = 7
 8100 COL_INTRED% = 9
 8110 COL_INTGREEN% = 10
 8120 COL_INTYELLOW% = 11
 8130 COL_INTBLUE% = 12
 8140 COL_INTMAGENTA% = 13
 8150 COL_INTCYAN% = 14
 8160 COL_INTWHITE% = 15
 8500 ENDPROC : REM END LOAD_VARS.
 8510 :
 8600 DEF PROC_CHECK_EXIT : REM ** CHECK EXIT **
 8610 PRINT TAB(19,24);""Quit? Press Y to confirm""
 8620 Y$=GET$
 8630 IF Y$=""y"" OR Y$= ""Y"" THEN PROC_RESET_ORIGINALS
 8640 ENDPROC : REM END PROC_CHECK_EXIT
 8650 :
 9000 DEF PROC_RESET_ORIGINALS : REM ** RESET_ORIGINALS **
 9010 VDU 20               : REM reset logical colours to default colours. 
 9020 MODE OM%             : REM SET original screen mode.
 9030 COLOUR OTFC%         : REM SET original text fg colour.
 9040 COLOUR OTBC% + 128   : REM SET original text bg colour.
 9050 PROC_SHOW_CURSOR     : REM reset cursor.
 9060 CLS                  : REM clear screen to SET original colours.
 9070 P.""GOODBYE!""         : REM print to screen to test restore function.
 9080 END                  : REM END program.
 9090 REM ENDPROC : REM END RESET_ORIGINALS
 9100 :
 9500 REM GET sysvar function for original screen mode.
 9510 DEF FN_GETBYTE_VDP(V%): A% = &A0: L%=V%: = USR(&FFF4)
"
vDRWdkhp,Машкоф читай,MaximGGoose,Go,Wednesday 14th of February 2024 05:00:44 PM CDT,"func compare(s string) string {
	s = strings.Replace(s, ""-"", """")
	slice := strings.Fields(s)

	...
}"
G2UFvbD9,[TDS] EXEMPLO SWITCH,hercioneto,PHP,Wednesday 14th of February 2024 04:44:47 PM CDT,"#include <stdio.h>

int main (void ){

int mes=1;

while (mes !=0) {

printf (""Digite o mês desejado: "");

scanf(""%d"", &mes);

switch ( mes )  {

  case 1 :    
  printf (""Janeiro\n"");

   break;

  case 2 :

  printf (""Fevereiro\n"");

break;

 case 3 :

 printf (""Março\n"");

 break;

  case 4 :   
  printf (""Abril\n"");

  break;

  case 5 :  
  printf (""Maio\n"");

break;

 case 6 :

printf (""Junho\n"");

 break;

 case 7 :

printf (""Julho\n"");

 break;
 
 case 8 :

printf (""Agosto\n"");

 break;
 
 case 9 :

printf (""Setembro\n"");

 break;
 
 case 10 :

printf (""Outubro\n"");

 break;
 
 case 11 :

printf (""Novembro\n"");

 break;
 
 case 12 :

printf (""Dezembro\n"");

 break;
 
 case 0 :
 
 break;
 
 default: printf (""Mês inválido.\n"");
}
}
printf (""FIM\n"");
  return 0;

}"
V3GBPHbf,js-discord-003-01-3-zad-23-app-2,kmprograms,JavaScript,Wednesday 14th of February 2024 04:41:39 PM CDT,"/*
    Wylosuj liczbę całkowitą z przedziału [10, 99] i oblicz sumę jej cyfr jedności oraz dziesiątek.
    Sprawdź, czy otrzymana suma jest liczbą parzystą.
*/

const randInt = (a, b) => {
    if (a > b) {
        throw new Error('Range is not correct')
    }
    return Math.floor(Math.random() * (b - a + 1)) + a;
}

// ALGORYTM wyznaczania cyfry z liczby

// 123
// J -> (123   // 1) % 10 -> (123 // 10 ** 0) % 10
// D -> (123  // 10) % 10 -> (123 // 10 ** 1) % 10
// S -> (123 // 100) % 10 -> (123 // 10 ** 2) % 10
// CYFRA = (ABS(LICZBA) // 10 ** POZYCJA) % 10

const getDigit = (n, pos) => {
    if (pos < 0) {
        throw new Error('Position is out of range')
    }
    const nn = Math.abs(n)
    return Math.floor(Math.abs(nn) / 10 ** pos) % 10
}

// const sumUnitsAndTensDigits = (n) => getDigit(n, 0) + getDigit(n, 1);
const sumUnitsAndTensDigits = (n, pos1 = 0, pos2 = 1) => getDigit(n, pos1) + getDigit(n, pos2);

// Algorytm na sumowanie cyfr w liczbie

// 123

// s = 0, n = 123

// Krok 1
// s = s + n % 10  s <- 3
// n = n // 10

// Krok 2
// s = 3, n = 12
// s = s + n % 10  s <- 3 + 2
// n = n // 10

// Krok 3
// s = 5, n = 1
// s = s + n % 10 s <- 5 + 1
// n = n // 10

// Teraz w n jest 0 i to konczy algorytm

const sumDigits = (n) => {
    let s = 0;
    let nn = Math.abs(n);

    while (nn > 0) {
        // s = s + nn % 10
        s += nn % 10
        nn = Math.floor(nn / 10)
    }

    return s;
}

const isEven = (x) => x % 2 === 0;
const isDividedBy = (x, div) => div !== 0 && x % div === 0

const main = () => {
    const x = randInt(10, 99);
    console.log(x)
    const s = sumUnitsAndTensDigits(x)
    console.log(s)
    console.log(isEven(s))

    const s2 = sumUnitsAndTensDigits(x, 1, 2)
    console.log(s2)
    console.log(isDividedBy(s2, 2))

    console.log(isEven(sumDigits(123)))
    console.log(isDividedBy(sumDigits(-123), 2))
}
main()
"
pMAV7zyq,Untitled,a_chn,Java,Wednesday 14th of February 2024 04:34:07 PM CDT,"// Question 2
import java.io.*;
import java.util.*;
 
public class a {
 
    private static boolean[][] visited;
    private static ArrayList<HashSet<Integer>> bootsAccessible;
 
    private static class Boot {
        private int s;
        private int d;
 
        public Boot(int s, int d) {
            this.s = s;
            this.d = d;
        }
    }
 
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new FileReader(""snowboots.in""));
        PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter(""snowboots.out"")));
        StringTokenizer st = new StringTokenizer(br.readLine());
 
        int n = Integer.parseInt(st.nextToken());
        int b = Integer.parseInt(st.nextToken());
 
        int[] path = new int[n];
        st = new StringTokenizer(br.readLine());
 
        for(int i = 0; i < n; i++) {
            path[i] = Integer.parseInt(st.nextToken());
        }
 
        Boot[] boots = new Boot[b];
        
        for(int i = 0; i < b; i++) {
            st = new StringTokenizer(br.readLine());
            int s = Integer.parseInt(st.nextToken());
            int d = Integer.parseInt(st.nextToken());
            boots[i] = new Boot(s, d);
        }
 
        br.close();
 
        bootsAccessible = new ArrayList<HashSet<Integer>>();
 
        for(int i = 0; i < n; i++) {
            bootsAccessible.add(new HashSet<Integer>());
            for(int j = 0; j < b; j++) {
                if(boots[j].s >= path[i]) {
                    bootsAccessible.get(i).add(j);
                }
            }
        }
 
        visited = new boolean[n][b];
 
        floodfill(0, 0, boots, n);
 
        int minBoots = 0;
 
        for(int i = 0; i < b; i++) {
            if(visited[n-1][i]) {
                minBoots = i;
                break;
            }
        }
 
        pw.print(minBoots);
        pw.close();
    }
 
    public static void floodfill(int tileInd, int bootInd, Boot[] boots, int n) {
        if(tileInd >= n || bootInd >= boots.length || visited[tileInd][bootInd]) {
            return;
        }
        visited[tileInd][bootInd] = true;
        for(int i = 1; i <= boots[bootInd].d; i++) {
            if(tileInd + i < n && bootsAccessible.get(tileInd + i).contains(bootInd)) {
                floodfill(tileInd + i, bootInd, boots, n);
            }
        }
        for(int i = bootInd + 1; i < boots.length; ++i) {
            if(bootsAccessible.get(tileInd).contains(i)) {
                floodfill(tileInd, i, boots, n);
            }
        }
    }
 
}"
nmMUNVZS,js-discord-003-01-3-zad-23-app-1,kmprograms,JavaScript,Wednesday 14th of February 2024 04:20:33 PM CDT,"/*
    Wylosuj liczbę całkowitą z przedziału [10, 99] i oblicz sumę jej cyfr jedności oraz dziesiątek.
    Sprawdź, czy otrzymana suma jest liczbą parzystą.
*/

const randInt = (a, b) => {
    if (a > b) {
        throw new Error('Range is not correct')
    }
    return Math.floor(Math.random() * (b - a + 1)) + a;
}

// ALGORYTM wyznaczania cyfry z liczby

// 123
// J -> (123   // 1) % 10 -> (123 // 10 ** 0) % 10
// D -> (123  // 10) % 10 -> (123 // 10 ** 1) % 10
// S -> (123 // 100) % 10 -> (123 // 10 ** 2) % 10
// CYFRA = (ABS(LICZBA) // 10 ** POZYCJA) % 10

const getDigit = (n, pos) => {
    if (pos < 0) {
        throw new Error('Position is out of range')
    }
    const nn = Math.abs(n)
    return Math.floor(Math.abs(nn) / 10 ** pos) % 10
}

// const sumUnitsAndTensDigits = (n) => getDigit(n, 0) + getDigit(n, 1);
const sumUnitsAndTensDigits = (n, pos1 = 0, pos2 = 1) => getDigit(n, pos1) + getDigit(n, pos2);

const isEven = (x) => x % 2 === 0;
const isDividedBy = (x, div) => div !== 0 && x % div === 0

const main = () => {
    const x = randInt(10, 99);
    console.log(x)
    const s = sumUnitsAndTensDigits(x)
    console.log(s)
    console.log(isEven(s))

    const s2 = sumUnitsAndTensDigits(x, 1, 2)
    console.log(s2)
    console.log(isDividedBy(s2, 2))
}
main()
"
nN3xzDyi,Untitled,zachadi,JSON,Wednesday 14th of February 2024 03:52:49 PM CDT,"{  ""DataList"":[
    {
""soon"":true,
""place"":""CASAblanca"",
""date"":""01 JAV"",
""lien"":""https://www2.guichet.com/concerts-festivals/soiree-layali-mohibine"",
""SOLDOUT"":false

},
 {
""soon"":true,
""place"":""RABAT"",
""date"":""01 JAV"",
""lien"":""https://www2.guichet.com/concerts-festivals/soiree-layali-mohibine"",
""SOLDOUT"":false

},
 {
""soon"":true,
""place"":""Fes"",
""date"":""01 JAV"",
""lien"":""https://www2.guichet.com/concerts-festivals/soiree-layali-mohibine"",
""SOLDOUT"":false

},
{
""soon"":true,
""place"":""tanger"",
""date"":""01 JAV"",
""lien"":""https://www2.guichet.com/concerts-festivals/soiree-layali-mohibine"",
""SOLDOUT"":false

},
{
""soon"":true,
""place"":""Marrakech"",
""date"":""01 JAV"",
""lien"":""https://www2.guichet.com/concerts-festivals/soiree-layali-mohibine"",
""SOLDOUT"":false

},
{
""soon"":true,
""place"":""Agadir"",
""date"":""11 mars"",
""lien"":""https://www2.guichet.com/concerts-festivals/soiree-layali-mohibine"",
""SOLDOUT"":false

}

]
}"
WSTrYjmH,fdaf,Pearlfromsu,C#,Wednesday 14th of February 2024 02:53:26 PM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ClassLibrary1
{
    public class OwnQueue<T>
    {
        private T[] mass;
        int _count = 0, _capacity = 4;
        int _head = 0, _tail = 0;
        public int Count
        {
            get
            {
                return _count;
            }
            set
            {
                if (value > _capacity)
                {
                    while(_capacity < value)
                        _capacity *= 2;
                    T[] newArr = new T[_capacity];
                    int j = 0;
                    if (_head <= _tail)
                        for (int i = _head; i <= _tail; i++)
                            newArr[j++] = mass[i];
                    if (_head > _tail)
                    {
                        for (int i = _head; i < _capacity; i++)
                            newArr[j++] = mass[i];
                        for (int i = 0; i <= _tail; i++)
                            newArr[j++] = mass[i];
                    }
                    mass = newArr;
                    _head = 0;
                    _tail = _count - 1;
                }
                _count = value;
            }
        }
        public void Enqueue(T elem)
        {
            this.Count++;
            if(_head + 1 >= _capacity)
            {
                
            }
        }
        
        public OwnQueue()
        {
            this._count = 0;
            this._capacity = 4;
            
        }
    }
}
"
gGPScWxU,js-discord-002-01-2-zad-13-app-2,kmprograms,JavaScript,Wednesday 14th of February 2024 02:50:21 PM CDT,"/*
    Wylosuj trzy liczby zmiennoprzecinkowe z przedziału [3.5, 5.6] i sprawdź, czy mogą one
    być długościami boków dowolnego trójkąta. Czy te liczby mogą stanowić boki trójkąta
    prostokątnego? Jeżeli liczby tworzą boki jakiegokolwiek trójkąta wyznacz jego pole i obwód.
*/

// Losowanie liczby calkowitej
// [3, 9] -> odejmujesz 3 od koncow przedzialu i masz [0, 6] + 3 -> przedzial [0, 6] przedstaw
// w postaci przedzialu [0, 1] czyli po tym przeksztalceniu mamy:
// [0, 1] * 6 + 3

// [a, b] --> [0, 1] * (b - a + 1) + a

/*let a = 3;
let b = 9;
let x = Math.floor(Math.random() * (b - a + 1)) + a;  // [0, 1)
// 3.4 - po Math.floor masz 3
// 7.4 - po Math.floor masz 7
// 7.99999 - po Math.floor masz 7
// 0 - po Math.floor masz 0
// [0, 1) * 7 -> [0, 7)
// Math.floor([0, 7)) -> 0, 1, 2, 3, 4, 5, 6 czyli daje nam [0, 6]
console.log(x)

[4.5, 7.8] -> mnozysz razy 10 i masz [45, 78] -> losujesz wartosc z przedzialu liczb calkowitych -> dzielisz przez 10
[5.23, 6.5] -> przez 100 -> [523, 650] -> ...
*/


const randInt = (a, b) => {
    if (a > b) {
        throw new Error('Range is not correct')
    }
    return Math.floor(Math.random() * (b - a + 1)) + a;
}

// [5.23, 6.5] -> mnozysz przez 100 wiec 10 ** 2 wiec precision to bedzie 2
const randFloat = (a, b, precision) => {
    const v = 10 ** precision;
    const aInt = a * v;
    const bInt = b * v;
    return randInt(aInt, bInt) / v;
}

const Triangle = (x, y, z) => {

    if (!_isTriangle()) {
        throw new Error('Cannot buiild a triangle');
    }

    function _isTriangle() {
        return x > 0 && y > 0 && z > 0 && x + y > z && x + z > y && z + y > x;
    }

    const isRectangularTriangle = () => {
        const [x2, y2, z2] = [x * x, y * y, z * z];
        return x2 + y2 === z2 || x2 + z2 === y2 || z2 + y2 === x2;
    }

    const calcPerimeter = () => {
        return x + y + z;
    }

    const calcArea = () => {
        const p = calcPerimeter(x, y, z) / 2;
        return (p * (p - x) * (p - y) * (p - z)) ** 0.5;
    }

    return {
        isRectangularTriangle,
        calcPerimeter,
        calcArea
    }

    /*return {
        isRect: isRectangularTriangle(),
        perimeter: calcPerimeter(),
        area: calcArea()
    }*/
}

function Triangle2(x, y, z) {
    this.x = x;
    this.y = y;
    this.z = z;

    if (!this._isTriangle()) {
        throw new Error('Cannot buiild a triangle');
    }
}

Triangle2.prototype._isTriangle = function () {
    return this.x > 0 && this.y > 0 && this.z > 0 && this.x + this.y > this.z && this.x + this.z > this.y && this.z + this.y > this.x;
}

Triangle2.prototype.isRectangularTriangle = function () {
    const [x2, y2, z2] = [this.x * this.x, this.y * this.y, this.z * this.z];
    return x2 + y2 === z2 || x2 + z2 === y2 || z2 + y2 === x2;
}

Triangle2.prototype.calcPerimeter = function () {
    return this.x + this.y + this.z;
}

Triangle2.prototype.calcArea = function () {
    const p = this.calcPerimeter(this.x, this.y, this.z) / 2;
    return (p * (p - this.x) * (p - this.y) * (p - this.z)) ** 0.5;
}


const main = () => {
    try {
        const MIN = 3.5
        const MAX = 5.6
        // const [a, b, c] = [randFloat(MIN, MAX, 1), randFloat(MIN, MAX, 1), randFloat(MIN, MAX, 1)];
        const [a, b, c] = [3, 4, 5];

        // Kiedy zwracasz referencje do funkcji
        /*const t = Triangle(a, b, c);
        t.x = 11;
        t.y = 12;
        t.z = 13;
        console.log(t.isRectangularTriangle())
        console.log(t.calcArea())
        console.log(t.calcPerimeter())*/

        // Kiedy zwracamy od razu wyliczone wartosci
        /*const t = Triangle(a, b, c);
        console.log(t.isRect)
        console.log(t.area)
        console.log(t.perimeter)*/

        /*const t2 = new Triangle2(3, 4, 5)
        console.error(t2.isRectangularTriangle())
        console.error(t2.calcArea())
        console.error(t2.calcPerimeter())

        t2.x = 11;
        t2.y = 12;
        t2.z = 13;
        console.error(t2.isRectangularTriangle())
        console.error(t2.calcArea())
        console.error(t2.calcPerimeter())*/

    } catch (err) {
        console.error(err.message);
    }
}
main()


"
64XTY3qU,js-discord-002-01-2-zad-13-app-1,kmprograms,JavaScript,Wednesday 14th of February 2024 02:49:45 PM CDT,"/*
    Wylosuj trzy liczby zmiennoprzecinkowe z przedziału [3.5, 5.6] i sprawdź, czy mogą one
    być długościami boków dowolnego trójkąta. Czy te liczby mogą stanowić boki trójkąta
    prostokątnego? Jeżeli liczby tworzą boki jakiegokolwiek trójkąta wyznacz jego pole i obwód.
*/

// Losowanie liczby calkowitej
// [3, 9] -> odejmujesz 3 od koncow przedzialu i masz [0, 6] + 3 -> przedzial [0, 6] przedstaw
// w postaci przedzialu [0, 1] czyli po tym przeksztalceniu mamy:
// [0, 1] * 6 + 3

// [a, b] --> [0, 1] * (b - a + 1) + a

/*let a = 3;
let b = 9;
let x = Math.floor(Math.random() * (b - a + 1)) + a;  // [0, 1)
// 3.4 - po Math.floor masz 3
// 7.4 - po Math.floor masz 7
// 7.99999 - po Math.floor masz 7
// 0 - po Math.floor masz 0
// [0, 1) * 7 -> [0, 7)
// Math.floor([0, 7)) -> 0, 1, 2, 3, 4, 5, 6 czyli daje nam [0, 6]
console.log(x)

[4.5, 7.8] -> mnozysz razy 10 i masz [45, 78] -> losujesz wartosc z przedzialu liczb calkowitych -> dzielisz przez 10
[5.23, 6.5] -> przez 100 -> [523, 650] -> ...
*/


const randInt = (a, b) => {
    if (a > b) {
        throw new Error('Range is not correct')
    }
    return Math.floor(Math.random() * (b - a + 1)) + a;
}

// [5.23, 6.5] -> mnozysz przez 100 wiec 10 ** 2 wiec precision to bedzie 2
const randFloat = (a, b, precision) => {
    const v = 10 ** precision;
    const aInt = a * v;
    const bInt = b * v;
    return randInt(aInt, bInt) / v;
}

function isTriangle(x, y, z) {
    return x > 0 && y > 0 && z > 0 && x + y > z && x + z > y && z + y > x;
}

const isRectangularTriangle = (x, y, z) => {
    if (!isTriangle(x, y, z)) {
        return false;
    }
    const [x2, y2, z2] = [x * x, y * y, z * z];
    return x2 + y2 === z2 || x2 + z2 === y2 || z2 + y2 === x2;
}

const calcPerimeter = (x, y, z) => {
    if (!isTriangle(x, y, z)) {
        throw new Error('Not a triangle')
    }
    return x + y + z;
}

const calcArea = (x, y, z) => {
    if (!isTriangle(x, y, z)) {
        throw new Error('Not a triangle')
    }
    const p = calcPerimeter(x, y, z) / 2;
    return (p * ( p - x) * (p - y) * (p - z)) ** 0.5;
}



const main = () => {

    const MIN = 3.5
    const MAX = 5.6

    /*const a = randFloat(MIN, MAX, 1);
    const b = randFloat(MIN, MAX, 1);
    const c = randFloat(MIN, MAX, 1);*/

    const [a, b, c] = [randFloat(MIN, MAX, 1), randFloat(MIN, MAX, 1), randFloat(MIN, MAX, 1)];

    // const [a, b, c] = [3, 4, 5];
    console.log(a, b, c);
    console.log(isTriangle(a, b, c));
    console.log(isRectangularTriangle(a, b, c));
    console.log(calcPerimeter(a, b, c))
    console.log(calcArea(a, b, c))
}
main()


"
Aucvdf48,Smart Health - smart walking stick,zhexo,Arduino,Wednesday 14th of February 2024 02:41:39 PM CDT,"/*****************************************/
#include <ArduinoHttpClient.h>
#include <WiFi101.h>
#include ""arduino_secrets.h""
///////please enter your sensitive data in the Secret tab/arduino_secrets.h
/////// WiFi Settings ///////
char ssid[] = SECRET_SSID;
char pass[] = SECRET_PASS;

const char serverAddress[] = ""dweet.io"";  // server address
int port = 80;

WiFiClient wifi;
HttpClient client = HttpClient(wifi, serverAddress, port);
int status = WL_IDLE_STATUS;

void setup()
{ 
  pinMode(2,INPUT);
  digitalWrite(2, HIGH);
  Serial.begin(9600);
  while(!Serial);
  while ( status != WL_CONNECTED) {
    Serial.print(""Attempting to connect to Network named: "");
    Serial.println(ssid);                   // print the network name (SSID);

    // Connect to WPA/WPA2 network:
    status = WiFi.begin(ssid, pass);
  } 
  
} 
/******************************************/
void loop() 
{  
  int digitalVal = digitalRead(2);
  Serial.print(digitalVal);
  Serial.println();
  
/********** POST to dweet.io ***/
  // assemble the path for the POST message:
  String dweetName = ""a9787746-3516-41ac-9c12-e64bfd1efbe0"";
  String path = ""/dweet/for/"" + dweetName;
  String contentType = ""application/json"";

  // assemble the body of the POST message:
  String postData = ""{\""sensorValue\"":\""""; 
  postData += digitalVal;
  postData += ""\""}"";

  Serial.println(""making POST request"");

  // send the POST request
  client.post(path, contentType, postData);

 Serial.println(""Wait one minute \n"");
  delay(60000);
  
}
/**********************************************/
"
Cd1dkX2P,MergeBabe,Shamba,C,Wednesday 14th of February 2024 02:32:41 PM CDT,"#include <stdio.h>
#include <stdlib.h>

//defining structure of a node
struct linkedlist
{
	int data;
	struct linkedlist *next;
};

//defining 'node' as the alias name for 'struct linkedlist'
typedef struct linkedlist node; 


//function to create nodes
void create(node *current, node *prev)
{
	int item;
	printf(""Enter a number (enter -999 to end): "");
	scanf(""%d"",&item);	
	if(item==-999)
	{
		free(current);
		prev->next=NULL;
		return;
	}	
	else
	{	//creating the next node
		current->data=item;
		current->next=(node *)malloc(sizeof(node));
		prev=current;
		create(current->next,prev); //recursion occurs
	}
}

node* createSingleNode(int item) {
    node* temp = (node*)malloc(sizeof(node));

    temp -> data = item;
    temp -> next = NULL;
}

void display(node *current)
{
	if(current->next!=NULL)
	{
		
		if(current->next->next==NULL)
			printf(""%d-->"",current->data);
		else
			printf(""%d-->"",current->data);
		display(current->next);
	} 
	else
	printf(""%d \n"",current->data);
	return;
}

void Merge(node* head1, node* head2, node* mergedList, node* prev) {
    if(head1 == NULL && head2 == NULL) {
        free(mergedList);
        prev -> next = NULL;
        return;
    }
    if(head1 == NULL) {
        mergedList -> data = head2 -> data;
        mergedList -> next = (node *)malloc(sizeof(node));
        prev = mergedList;

        Merge(head1, head2 -> next, mergedList -> next, prev);
        return;
    }
    else if(head2 == NULL) {
        mergedList -> data = head1 -> data;
        mergedList -> next = (node *)malloc(sizeof(node));
        prev = mergedList;

        Merge(head1 -> next, head2, mergedList -> next, prev);
        return;
    }

    if(head1 -> data < head2 -> data) {
        mergedList -> data = head1 -> data;
        mergedList -> next = (node *)malloc(sizeof(node));
        prev = mergedList;

        Merge(head1 -> next, head2, mergedList -> next, prev);
        return;
    }
    else if(head2 -> data < head1 -> data) {
        mergedList -> data = head2 -> data;
        mergedList -> next = (node *)malloc(sizeof(node));
        prev = mergedList;

        Merge(head1, head2 -> next, mergedList -> next, prev);
        return;
    }
}

void main() {
    node *head, *head1, *head2;
	node *prev=NULL;
	head=(node *)malloc(sizeof(node));
	head1=(node *) malloc(sizeof(node));
	head2=(node *) malloc(sizeof(node));
	printf(""Enter the data to be inserted in the first linked list: \n"");
	create(head1,prev);
	printf(""Enter the data to be inserted in the second linked list: \n"");
	create(head2,prev); 
    printf(""The first array:	"");
	display(head1);
	printf(""The second array:	"");
	display(head2);
    node* mergedList = (node *) malloc(sizeof(node));
    prev = NULL;
    Merge(head1, head2, mergedList, prev);
    printf(""The merged array:   "");
    display(mergedList);
}"
6EkWm3aH,Untitled,Nenogzar,Python,Wednesday 14th of February 2024 02:14:16 PM CDT,"message = input().split()

words, numbers = [], []
for word in message:
    num, let = """", """"
    for symbol in word:
        if symbol.isdigit():
            num += symbol
        else:
            let += symbol
    numbers.append(int(num))
    if len(let) != 1:
        let = f""{let[-1]}{let[1:-1]}{let[0]}""
    words.append(let)

for n, w in zip(numbers, words):
    print(f""{chr(n)}{w}"", end="" "")"
stgzDBhs,Robot place,Takeshi_13,Lua,Wednesday 14th of February 2024 02:13:07 PM CDT,"local sides = require ""sides""
local robot = require ""robot""
local component = require ""component""
local active_slot = 1
size=robot.inventorySize()
local function Text()
    os.execute(""cls"")
    print(""┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓"")
    print(""┃                                                ┃"")
    print(""┃                                                ┃"")
    print(""┃                                                ┃"")
    print(""┃                                                ┃"")
    print(""┃            Программа запущена.                 ┃"")
    print(""┃            Версия кода: 1.2.1                  ┃"")
    print(""┃                                                ┃"")
    print(""┃                                                ┃"")
    print(""┃                                                ┃"")
    print(""┃                                                ┃"")
    print(""┃                                                ┃"")
    print(""┗━━━━━[Takeshi]━━━━━━━━━━━━━━━━━━━[Takizawa]━━━━━┛"")
end 
 
Text()
 
 
 
while true do
o = robot.detect()
if o == true then robot.turnLeft() end
if o == false then robot.forward() end
robot.select(active_slot)
robot.placeDown()
end
"
Ee9pn5my,Untitled,Nenogzar,Python,Wednesday 14th of February 2024 02:12:37 PM CDT,"message = input().split()

words = []
for word in message:
    num, let = """", """"
    for symbol in word:
        if symbol.isdigit():
            num += symbol
        else:
            let += symbol
    if len(let) != 1:
        let = f""{let[-1]}{let[1:-1]}{let[0]}""
    words.append(f""{chr(int(num))}{let}"")

print(*words, end=' ')"
iGGDYe2H,# b_inv.py,here2share,Python,Wednesday 14th of February 2024 01:46:00 PM CDT,"# b_inv.py

inv = {
    ""Gold"": 200,
    ""Silver"": 1500,
    ""Ruby"": 3,
    ""Diamond"": 16,
}

loot = {
    ""Gold"": 10,
    ""Silver"": 80,
    ""Diamond"": 2,
    ""Emerald"": 4,
    ""Sapphire"": 2,
    ""Topaz"": 1
}

new_inv = {k: inv.get(k, 0) + loot.get(k, 0) for k in set(inv) | set(loot)}

print(new_inv)"
7fRCzVJ4,25 до корня,nq1s788,Python,Wednesday 14th of February 2024 01:42:30 PM CDT,"from math import sqrt, floor
for n in range(174457, 174506): #174457, 174506
    d = []
    for x in range(2, floor(sqrt(n) + 1)): #до корня включительно, не включительно ceil(sqrt(n))
        if n % x == 0:
            d.append(x)
    if len(d) == 1:
        print(d[0], n // d[0])"
5BsyTJAK,311_1402,Petro_zzz,C++,Wednesday 14th of February 2024 12:32:29 PM CDT,"#include <iostream>

using namespace std;

void show_menu();
void converter_rub2usd();
void converter_usd2rub();

void children() {
	int k = 0;
	//cout << ""Enter "";
	//cin >> k;
	while(k < 10) {
		cout << k << "" "";
		k++;
	}
	cout << endl;
}

void bill() {
	int summ = 0;
	int price;
	int n = 0;
	
	while (n < 4) {
		cout << ""Enter "" << n << "" product "";
		cin >> price;
		summ += price;
		n++;
	}
	cout << ""TOTAL: "" << summ << endl;
}

const double price_usd_rub = 91.51;

void converter_rub2usd() {
	double rub, usd;
	cout << ""Enter numbers of rub for covert to usd: "";
	cin >> rub;

	usd = rub / price_usd_rub;
	cout << ""You can take "" << usd << "" usd"" << endl;
}

void converter_usd2rub() {
	double rub, usd;
	cout << ""Enter numbers of usd for covert to rub: "";
	cin >> usd;

	rub = usd * price_usd_rub;
	cout << ""You can take "" << rub << "" rub"" << endl;
}

void show_menu() {
	cout << endl;
	cout << ""     Converter Money    "" << endl;
	cout << endl;
		
	cout << "" 1. Convert rub to usd."" << endl;
	cout << "" 2. Convert usd to rub."" << endl;
	cout << "" 0. Exit."" << endl;
	int mode = 1;
	while (mode > 0) {
		cin >> mode;
		if (mode == 1) {
			converter_rub2usd();
		}
		if (mode == 2) {
			converter_usd2rub();
		}
		cout << ""Enter 0 for exit"" << endl;
	}
	cout << endl;
}

int main() {
	//children();
	//bill();
	//converter_money();
	show_menu();
	system(""pause"");
	return 0;
}"
31LBcz3J,BFS,nq1s788,Python,Wednesday 14th of February 2024 12:26:24 PM CDT,"from queue import Queue
n, m = map(int, input().split()) #n - кол-во вершин, m - кол-во ребер
g = [[] for i in range(n)]
for i in range(m):
    x, y = map(int, input().split())
    x -= 1
    y -= 1
    g[x].append(y)
    g[y].append(x)
used = [-1] * n
used[0] = 0
q = Queue()
q.put(0)
while not q.empty():
    h = q.get() #h - текущая вершина
    for e in g[h]:
        if used[e] == -1:
            used[e] = used[h] + 1
            q.put(e)
end = int(input())
print(used[end - 1], used)"
UQvjpTrq,D,Ankit_132,C++,Wednesday 14th of February 2024 12:25:29 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
	int t;
	cin>>t;
	
	while(t--){
	    int n;
	    cin>>n;
	    
	    vector<long long int> a(n);
	    for(auto &e: a)
	        cin>>e;
	        
	    long long int val = 0;
	    
	    for(auto e: a)
	        val ^= e;
	    
	    for(int b=60, chk=0; b>0; b--){
	        int cnt = 0;
	        
	        for(int i=0; i<n; i++)
	            cnt += (((1ll<<b)&a[i])>0);
	            
	        if(cnt%2==0 && cnt>0)
	            chk = 1;
	            
	        if(chk)     val |= (1ll<<b);
	    }
	    
	    cout<<val<<""\n"";
	}
}"
MiVHSSGG,C,Ankit_132,C++,Wednesday 14th of February 2024 12:24:57 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int t;
    cin>>t;
    
    vector<int> isPrime(1000001, 1);
    
    for(int i=2; i<=1000000; i++){
        if(!isPrime[i])     continue;
        
        for(int j=2*i; j<=1000000; j+=i)
            isPrime[j] = 0;
    }
    
    while(t--){
        int n;
        cin>>n;
        
        if(n == 1){
            cout<<1<<""\n"";
            continue;
        }
        else if(n==2){
            cout<<2<<"" ""<<2<<""\n"";
            continue;
        }
        else if(n==3){
            cout<<1<<"" ""<<2<<"" ""<<2<<""\n"";
            continue;
        }
        
        cout<<1<<"" "";
        
        int done = 1;
        
        if(n%2 == 0){
            done += 3;
            cout<<4<<"" ""<<4<<"" ""<<4<<"" "";
        }
        
        for(int i=2; done<n; i++){
            if(isPrime[i]){
                done+=2;
                cout<<i<<"" ""<<i<<"" "";
            }
        }
        
        cout<<""\n"";
    }
}"
MLJLhAP8,B,Ankit_132,C++,Wednesday 14th of February 2024 12:24:25 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    int t;
    cin>>t;
    
    while(t--){
        int n;
        cin>>n;
        
        vector<int> a(n);
        for(auto &e: a)
            cin>>e;
        
        if(n==2 && a[1]<a[0])
            cout<<""NO\n"";
        else if(n==3 && (a[1]<min(a[0], a[2]) || a[1]>max(a[0], a[2])))
            cout<<""NO\n"";
        else
            cout<<""YES\n"";
    }
}"
DA4gncbj,A,Ankit_132,C++,Wednesday 14th of February 2024 12:23:53 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
	int t;
	cin>>t;
	
	while(t--){
	    int n;
	    string a, b;
	    cin>>n>>a>>b;
	    
	    for(int i=0; i<n; i++)
	    {
	        int cnt = 0;
	        
	        while(a[i] != b[i]){
	            cnt++;
	            a[i] += 3;
	            
	            if(a[i] > 'Z')
	                a[i] = 'A' + (a[i]-'Z'-1);
	        }
	        
	        cout<<cnt<<"" "";
	    }
	    
	    cout<<""\n"";
	}
}"
3PTCPWF3,Convert Windows AD Time to Regular Dates Bash,savsanta,Bash,Wednesday 14th of February 2024 12:18:47 PM CDT,"#!/bin/bash

adPwdLastSetNT=$(dscl ""/Active Directory/DOMAINNAME/"" -read /Users/USERNAME pwdLastSet | awk '{print $NF}')

adPwdLastSetHuman=$(date -j -f ""%s"" ""$((($adPwdLastSetNT/10000000)-11644473600))"" ""+%x %X"")

echo $adPwdLastSetHuman"
Nk9eCRV4,"СПРИНТ № 5 | Стек, очередь, дек | Урок 2: Стек 3/3",chevengur,C++,Wednesday 14th of February 2024 12:17:47 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <random>
#include <numeric>
#include <utility>

using namespace std;

template <typename It>
void PrintRange(It range_begin, It range_end) {
    for (auto it = range_begin; it != range_end; ++it) {
        cout << *it << "" ""s;
    }
    cout << endl;
}


template <typename Type>
class SortedSack {
public:
    void Push(const Type& element) {
        if (elements_.empty()) {
            elements_.push_back(element);
            return;
        }
        auto end = elements_.back();
        if (element < elements_.back()) {
            elements_.push_back(element);
        }
        else {
            elements_.pop_back();
            Push(element);
            elements_.push_back(end);
        }
    }
    void Pop() {
        elements_.pop_back();
    }
    const Type& Peek() const {
        return elements_.back();
    }
    Type& Peek() {
        return elements_.back();
    }
    void Print() const {
        PrintRange(elements_.begin(), elements_.end());
    }
    uint64_t Size() const {
        return elements_.size();
    }
    bool IsEmpty() const {
        return elements_.empty();
    }
private:
    vector<Type> elements_;
};

int main() {
    setlocale(0, """");
    SortedSack<int> sack;
    vector<int> values(5);
    // заполняем вектор для тестирования нашего класса
    iota(values.begin(), values.end(), 1);
    // перемешиваем значения
    random_device rd;
    mt19937 g(rd());
    shuffle(values.begin(), values.end(), g);

    // заполняем класс и проверяем, что сортировка сохраняется после каждой вставки
    for (int i = 0; i < 5; ++i) {
        cout << ""Вставляемый элемент = ""s << values[i] << endl;
        sack.Push(values[i]);
        sack.Print();
    }
}"
zSrpf9p6,Treasure Hunt,Osiris1002,Python,Wednesday 14th of February 2024 12:16:51 PM CDT,"treasure_chest = input().split(""|"")
command_data = input()

while command_data != 'Yohoho!':
    command, *data = [int(x) if x.isdigit() else x for x in command_data.split()]

    if command == ""Loot"":
        for item in data:
            if item not in treasure_chest:
                treasure_chest.insert(0, item)
    elif command == ""Drop"":
        index = data[0]
        if index in range(len(treasure_chest)):
            item = treasure_chest.pop(index)
            treasure_chest.append(item)


    elif command == ""Steal"":
        index = -data[0]
        stolen_items = treasure_chest[index:]
        treasure_chest = treasure_chest[:index]
        print(', '.join(stolen_items))

    command_data = input()

if treasure_chest:
    avr_treasure = sum(len(x) for x in treasure_chest) / len(treasure_chest)
    print(f'Average treasure gain: {avr_treasure:.2f} pirate credits.')

else:
    print('Failed treasure hunt.')"
YnE4ijyK,Untitled,wintttr,C#,Wednesday 14th of February 2024 12:05:34 PM CDT,"namespace Labirint
{
    class Program
    {
        const int N = 11;

        static void PrintLab(char[,] lab)
        {
            for(int x = 0; x < N; x++)
            {
                for (int y = 0; y < N; y++)
                {
                    Console.Write(lab[x, y]);
                }
                Console.WriteLine();
            }

            Console.WriteLine();
        }

        static void Go(char[,] lab, int x, int y)
        {
            if (lab[x, y] == ' ')
            {
                lab[x, y] = '+';

                if (x == 0 || x == (N - 1) || y == 0 || y == (N - 1))
                {
                    PrintLab(lab);
                }
                else
                {
                    Go(lab, x + 1, y);
                    Go(lab, x, y + 1);
                    Go(lab, x - 1, y);
                    Go(lab, x, y - 1);
                }

                lab[x, y] = ' ';
            }
        }

        static void Main(string[] args)
        {
            char[,] labirint = new char[N, N];

            for(int i = 0; i < N; i++)
            {
                string s = Console.ReadLine();

                if(s.Length == N && s.All(c => c == ' ' || c == 'M'))
                {
                    for(int j = 0; j < N; j++)
                    {
                        labirint[i, j] = s[j];
                    }
                }
                else
                {
                    Console.WriteLine(""Што-та пашло нитак"");
                    Environment.Exit(0);
                }
            }

            Console.WriteLine();
            Go(labirint, N / 2, N / 2);
        }
    }
}"
ixKz2Q6J,MergeMethod,Shamba,C,Wednesday 14th of February 2024 11:53:20 AM CDT,"#include<stdio.h>
#include<stdlib.h>

struct node {
    int key;
    struct node* next;
};

struct node* createNode(int key) {
    struct node* Node = (struct node*) malloc(sizeof(struct node));

    Node -> key = key;
    Node -> next = NULL;

    return Node;
}

struct node* Merge(struct node* ListA, struct node* ListB) {
    struct node* resHead;
    struct node* resIterator;

    struct node* iteratorA = ListA;
    struct node* iteratorB = ListB;

    int isHeadAssigned = 0;

    while(1) {
        // Check which element at the pointer of each sublist is minimum
        // Move the lesser element to the result list and shift that list's pointer to the next element
        if(iteratorA -> key < iteratorB -> key) {
            struct node* tempTerm = createNode(iteratorA -> key);

            if(!isHeadAssigned) {
                resHead = tempTerm;
                resIterator = tempTerm;
                isHeadAssigned = 1;
            }
            else {
                resIterator -> next = tempTerm;
                resIterator = tempTerm;
            }

            // Change pointer of the list whose element is already added to the merge list
            iteratorA = iteratorA -> next;
        }
        else {
            struct node* tempTerm = createNode(iteratorB -> key);

            if(!isHeadAssigned) {
                resHead = tempTerm;
                resIterator = tempTerm;
                isHeadAssigned = 1;
            }
            else {
                resIterator -> next = tempTerm;
                resIterator = tempTerm;
            }

            iteratorB = iteratorB -> next;
        }

        // If the iteration of a sublist is over
        // Copy the rest of the elements from the other sublist to the merged list
        if(iteratorA == NULL) {
            while(iteratorB != NULL) {
                struct node* tempTerm = createNode(iteratorB -> key);
                resIterator -> next = tempTerm;
                resIterator = tempTerm;
                iteratorB = iteratorB -> next;
            }

            break;
        }
        else if(iteratorB == NULL) {
            while(iteratorA != NULL) {
                struct node* tempTerm = createNode(iteratorA -> key);
                resIterator -> next = tempTerm;
                resIterator = tempTerm;
                iteratorA = iteratorA -> next;
            }

            break;
        }
    }

    return resHead;
}

void displayList(struct node* Node) {
    while(1) {
        printf(""%d"", Node -> key);

        if(Node -> next == NULL) {
            break;
        }

        printf(""->"");
        Node = Node -> next;
    }
}

int main() {

    // List 1
    struct node* HeadA;
    struct node* iterator;

    struct node* tempTerm = createNode(1);
    HeadA = tempTerm;
    iterator = tempTerm;
    tempTerm = createNode(5);
    iterator -> next = tempTerm;
    iterator = tempTerm;   
    tempTerm = createNode(10);
    iterator -> next = tempTerm;
    iterator = tempTerm;  
    tempTerm = createNode(12);
    iterator -> next = tempTerm;

    // List 2
    struct node* HeadB;

    tempTerm = createNode(6);
    HeadB = tempTerm;
    tempTerm = createNode(9);
    HeadB -> next = tempTerm;

    // display 2 lists
    printf(""List 1 : "");
    displayList(HeadA);
    printf(""\nList 2 : "");
    displayList(HeadB);

    // Merge
    struct node* MergedList = Merge(HeadA, HeadB);
    printf(""\nMerged List: "");
    displayList(MergedList);

    return 0;
}"
0QbiXs6h,Untitled,EnGold,Kotlin,Wednesday 14th of February 2024 11:51:13 AM CDT,"@Composable
fun ContentList(modifier: Modifier) {
    //List of Users
    val list = listOf(
        ProfileData(""Person"", """", null, null, null, null),
        ProfileData(""Person 2"", """", null, null, null, null),
        ProfileData(""Person 3"", """", null, null, null, null),
        ProfileData(""Person 4"", """", null, null, null, null),
        ProfileData(""Person 5"", """", null, null, null, null),
    )
    //current user
    var current by remember {
        mutableIntStateOf(0)
    }
    //animate state
    var animState by remember { mutableStateOf(ProfileAnim.Enter) }

    //animate
    val transition = updateTransition(animState, label = ""offset"")
    val offset by transition.animateIntOffset(transitionSpec = {
        when {
            ProfileAnim.Down isTransitioningTo ProfileAnim.Default ->
                tween(durationMillis = 200)

            ProfileAnim.Up isTransitioningTo ProfileAnim.Default ->
                tween(durationMillis = 200)
            else ->
                tween(durationMillis = 500)
        }
    }, label = ""offset"") { state ->
        when (state) {
            ProfileAnim.Default -> IntOffset(-1500, 0)
            ProfileAnim.Enter -> IntOffset(0, 0)
            ProfileAnim.Down -> IntOffset(0, 2000)
            ProfileAnim.Up -> IntOffset(0, -2000)
        }
    }
    //is animation running
    val isAnimationEnded = transition.isRunning
    Log.d(""LOGG"", animState.name)

    LaunchedEffect(isAnimationEnded) {
        if ((animState == ProfileAnim.Up || animState == ProfileAnim.Down ) && !isAnimationEnded) {
            animState = ProfileAnim.Default
        }
        if(animState == ProfileAnim.Default && !isAnimationEnded){
            current++
            animState = ProfileAnim.Enter
        }
    }
    //checking direction of gesture
    var dragDirection by remember { mutableFloatStateOf(0f) }
    Box(modifier = modifier
        .background(color = Color.Gray)
        .pointerInput(Unit) {
            detectVerticalDragGestures(onVerticalDrag = { _, dragAmount ->
                dragDirection = dragAmount
            }, onDragEnd = {
                if (dragDirection < 0) {
                    animState = ProfileAnim.Up
                } else if (dragDirection > 0) {
                    animState = ProfileAnim.Down
                }
            })
        }
        .background(Color.Blue)
    ) {
        Box(modifier = Modifier
            .fillMaxSize()
            .offset {
                offset
            }, contentAlignment = Alignment.Center) {
            UserProfile(profileData = list[current])
        }
    }
}

enum class ProfileAnim {
    Default,
    Enter,
    Up,
    Down
}"
6pQJf6Hu,Exoline,nobodyscriptsrblx,Lua,Wednesday 14th of February 2024 11:35:58 AM CDT,"{""test"" = 1234}"
qzRWU732,GetReferencedCells,Ivanatom,C++,Wednesday 14th of February 2024 10:54:35 AM CDT,"void TestCellReferences() {
    auto sheet = CreateSheet();
/*    sheet->SetCell(""A1""_pos, ""1"");
   sheet->SetCell(""A2""_pos, ""=A1"");
   sheet->SetCell(""B2""_pos, ""=A1"");

    ASSERT(sheet->GetCell(""A1""_pos)->GetReferencedCells().empty());
    ASSERT_EQUAL(sheet->GetCell(""A2""_pos)->GetReferencedCells(), std::vector{""A1""_pos});
    ASSERT_EQUAL(sheet->GetCell(""B2""_pos)->GetReferencedCells(), std::vector{""A1""_pos});
*/
    // Ссылка на пустую ячейку
    sheet->SetCell(""B2""_pos, ""=B1"");
    auto a = sheet->GetCell(""B1""_pos);
    sheet->GetCell(""B1""_pos)->GetReferencedCells(); //здесь программа вылетает
    ASSERT(sheet->GetCell(""B1""_pos)->GetReferencedCells().empty());
    ASSERT_EQUAL(sheet->GetCell(""B2""_pos)->GetReferencedCells(), std::vector{""B1""_pos});

    sheet->SetCell(""A2""_pos, """");
    ASSERT(sheet->GetCell(""A1""_pos)->GetReferencedCells().empty());
    ASSERT(sheet->GetCell(""A2""_pos)->GetReferencedCells().empty());

    // Ссылка на ячейку за пределами таблицы
    sheet->SetCell(""B1""_pos, ""=C3"");
    ASSERT_EQUAL(sheet->GetCell(""B1""_pos)->GetReferencedCells(), std::vector{""C3""_pos});
}




CellInterface* Sheet::GetCell(Position pos) {
    if (pos.IsValid()) {

        if (pos.row < int(std::size(cells_)) && pos.col < int(std::size(cells_[pos.row]))) {

            if(cells_[pos.row][pos.col] == nullptr){
                return nullptr;
            }
            std::string str = cells_[pos.row][pos.col].get()->GetText();

            if (str == """") {
                return nullptr; //здесь вывод настоящей функции в случае, указанном выше

            } else {
                return cells_[pos.row][pos.col].get();
            }

        } else {
            return nullptr;
        }

    } else {
        throw InvalidPositionException(""invalid cell position. getcell"");
    }
}

////////////GetReferencedCells////////

std::vector<Position> Cell::FormulaImpl::GetReferencedCells() const {
    if (formula_ptr_ == nullptr){
        return std::vector<Position>{};
    }
    return formula_ptr_->GetReferencedCells();
}


std::vector<Position> Cell::Impl::GetReferencedCells() const {
    return std::vector<Position>{};
}

std::vector<Position> Cell::GetReferencedCells() const {
    if (impl_ == nullptr){
        return std::vector<Position>{};
    }
    return impl_->GetReferencedCells();
}

    std::vector<Position> GetReferencedCells() const override {
        std::vector<Position> cells;
        if(ast_.GetCells().empty()){
            return cells;
        }
        for (const auto& cell : ast_.GetCells()) {

            if (cell.IsValid()) {
                bool repeat = std::find(cells.begin(), cells.end(), cell) != cells.end();
                if(!repeat){
                   cells.push_back(cell);
                }
            }
        }
        return cells;
    }"
4kMLLGPT,Nigerian scammers [14-2-3/2024],bombaires,AIMMS,Wednesday 14th of February 2024 10:50:45 AM CDT,"<a href=""mailto:associatedchamber@gmail.com"">associatedchamber@gmail.com</a>
<a href=""mailto:as.sociat.edcha.m.be.r@gmail.com"">as.sociat.edcha.m.be.r@gmail.com</a>
<a href=""mailto:as.so.cia.ted.c.h.amb.e.r@gmail.com"">as.so.cia.ted.c.h.amb.e.r@gmail.com</a>
<a href=""mailto:as.s.oci.at.edch.am.be.r@gmail.com"">as.s.oci.at.edch.am.be.r@gmail.com</a>
<a href=""mailto:associ.atedc.h.amb.er@gmail.com"">associ.atedc.h.amb.er@gmail.com</a>
<a href=""mailto:a.s.s.oc.i.ated.c.hambe.r@gmail.com"">a.s.s.oc.i.ated.c.hambe.r@gmail.com</a>
<a href=""mailto:as.so.c.ia.t.edch.am.b.e.r@gmail.com"">as.so.c.ia.t.edch.am.b.e.r@gmail.com</a>
<a href=""mailto:a.s.s.o.c.i.atedcham.b.e.r@gmail.com"">a.s.s.o.c.i.atedcham.b.e.r@gmail.com</a>
<a href=""mailto:a.s.sociat.ed.c.h.amber@gmail.com"">a.s.sociat.ed.c.h.amber@gmail.com</a>
<a href=""mailto:ass.oc.i.ate.d.c.h.amb.er@gmail.com"">ass.oc.i.ate.d.c.h.amb.er@gmail.com</a>
<a href=""mailto:as.s.o.c.i.ated.c.ha.m.be.r@gmail.com"">as.s.o.c.i.ated.c.ha.m.be.r@gmail.com</a>
<a href=""mailto:associatedc.h.a.m.be.r@gmail.com"">associatedc.h.a.m.be.r@gmail.com</a>
<a href=""mailto:asso.c.ia.t.e.dc.ha.m.be.r@gmail.com"">asso.c.ia.t.e.dc.ha.m.be.r@gmail.com</a>
<a href=""mailto:a.ss.oci.atedc.ham.ber@gmail.com"">a.ss.oci.atedc.ham.ber@gmail.com</a>
<a href=""mailto:a.ssociat.e.dc.h.a.mbe.r@gmail.com"">a.ssociat.e.dc.h.a.mbe.r@gmail.com</a>
<a href=""mailto:a.s.so.c.iate.dc.h.a.mber@gmail.com"">a.s.so.c.iate.dc.h.a.mber@gmail.com</a>
<a href=""mailto:a.s.s.ocia.t.edch.a.mber@gmail.com"">a.s.s.ocia.t.edch.a.mber@gmail.com</a>
<a href=""mailto:a.ss.o.c.i.a.ted.ch.a.mb.e.r@gmail.com"">a.ss.o.c.i.a.ted.ch.a.mb.e.r@gmail.com</a>
<a href=""mailto:as.s.o.c.ia.t.ed.ch.amb.er@gmail.com"">as.s.o.c.ia.t.ed.ch.amb.er@gmail.com</a>
<a href=""mailto:a.s.s.o.ciated.ch.amb.e.r@gmail.com"">a.s.s.o.ciated.ch.amb.e.r@gmail.com</a>
<a href=""mailto:as.soc.iatedch.am.b.e.r@gmail.com"">as.soc.iatedch.am.b.e.r@gmail.com</a>
<a href=""mailto:as.s.o.ci.a.t.ed.c.h.am.ber@gmail.com"">as.s.o.ci.a.t.ed.c.h.am.ber@gmail.com</a>
<a href=""mailto:as.soci.at.e.dcha.mb.e.r@gmail.com"">as.soci.at.e.dcha.mb.e.r@gmail.com</a>
<a href=""mailto:a.ssocia.t.ed.cham.be.r@gmail.com"">a.ssocia.t.ed.cham.be.r@gmail.com</a>
<a href=""mailto:a.ss.o.c.ia.te.d.c.ha.m.ber@gmail.com"">a.ss.o.c.ia.te.d.c.ha.m.ber@gmail.com</a>
<a href=""mailto:as.s.oc.ia.ted.ch.a.mb.e.r@gmail.com"">as.s.oc.ia.ted.ch.a.mb.e.r@gmail.com</a>
<a href=""mailto:assoc.ia.t.edc.h.am.ber@gmail.com"">assoc.ia.t.edc.h.am.ber@gmail.com</a>
<a href=""mailto:a.ss.o.cia.t.ed.cha.m.b.er@gmail.com"">a.ss.o.cia.t.ed.cha.m.b.er@gmail.com</a>
<a href=""mailto:a.s.s.o.c.i.ate.dch.amb.er@gmail.com"">a.s.s.o.c.i.ate.dch.amb.er@gmail.com</a>
<a href=""mailto:a.s.s.o.c.iat.e.dchamber@gmail.com"">a.s.s.o.c.iat.e.dchamber@gmail.com</a>
<a href=""mailto:a.sso.ci.a.ted.cham.b.er@gmail.com"">a.sso.ci.a.ted.cham.b.er@gmail.com</a>
<a href=""mailto:as.s.o.c.i.a.ted.c.hamb.e.r@gmail.com"">as.s.o.c.i.a.ted.c.hamb.e.r@gmail.com</a>
<a href=""mailto:asso.c.ia.t.e.d.c.ha.m.ber@gmail.com"">asso.c.ia.t.e.d.c.ha.m.ber@gmail.com</a>
<a href=""mailto:a.sso.ci.a.ted.c.ham.b.er@gmail.com"">a.sso.ci.a.ted.c.ham.b.er@gmail.com</a>
<a href=""mailto:assoc.iatedc.ha.mbe.r@gmail.com"">assoc.iatedc.ha.mbe.r@gmail.com</a>
<a href=""mailto:a.s.s.oc.iate.dc.ha.m.b.er@gmail.com"">a.s.s.oc.iate.dc.ha.m.b.er@gmail.com</a>
<a href=""mailto:a.s.so.c.i.a.t.e.dch.a.mb.e.r@gmail.com"">a.s.so.c.i.a.t.e.dch.a.mb.e.r@gmail.com</a>
<a href=""mailto:a.s.so.c.iat.ed.ch.a.mb.er@gmail.com"">a.s.so.c.iat.ed.ch.a.mb.er@gmail.com</a>
<a href=""mailto:as.soc.ia.t.e.dc.h.amber@gmail.com"">as.soc.ia.t.e.dc.h.amber@gmail.com</a>
<a href=""mailto:as.s.o.c.iat.ed.cha.m.b.e.r@gmail.com"">as.s.o.c.iat.ed.cha.m.b.e.r@gmail.com</a>
<a href=""mailto:a.ss.oci.a.te.d.c.h.amb.er@gmail.com"">a.ss.oci.a.te.d.c.h.amb.er@gmail.com</a>
<a href=""mailto:associate.dch.ambe.r@gmail.com"">associate.dch.ambe.r@gmail.com</a>
<a href=""mailto:a.s.so.ci.atedcha.mbe.r@gmail.com"">a.s.so.ci.atedcha.mbe.r@gmail.com</a>
<a href=""mailto:as.s.ocia.te.dch.ambe.r@gmail.com"">as.s.ocia.te.dch.ambe.r@gmail.com</a>
<a href=""mailto:a.sso.ci.a.t.e.d.cha.mb.e.r@gmail.com"">a.sso.ci.a.t.e.d.cha.mb.e.r@gmail.com</a>
<a href=""mailto:as.so.c.i.at.ed.ch.am.b.er@gmail.com"">as.so.c.i.at.ed.ch.am.b.er@gmail.com</a>
<a href=""mailto:a.ss.ociat.edc.ha.m.ber@gmail.com"">a.ss.ociat.edc.ha.m.ber@gmail.com</a>
<a href=""mailto:assoc.iate.d.ch.a.m.b.er@gmail.com"">assoc.iate.d.ch.a.m.b.er@gmail.com</a>
<a href=""mailto:a.s.s.o.cia.t.edcham.b.e.r@gmail.com"">a.s.s.o.cia.t.edcham.b.e.r@gmail.com</a>
<a href=""mailto:a.s.so.ciat.edc.ha.mb.er@gmail.com"">a.s.so.ciat.edc.ha.mb.er@gmail.com</a>
<a href=""mailto:ass.ocia.t.edch.amb.e.r@gmail.com"">ass.ocia.t.edch.amb.e.r@gmail.com</a>
<a href=""mailto:as.s.o.c.i.a.ted.cham.b.e.r@gmail.com"">as.s.o.c.i.a.ted.cham.b.e.r@gmail.com</a>
<a href=""mailto:asso.c.i.a.t.ed.ch.amber@gmail.com"">asso.c.i.a.t.ed.ch.amber@gmail.com</a>
<a href=""mailto:asso.ci.ate.d.ch.a.mb.e.r@gmail.com"">asso.ci.ate.d.ch.a.mb.e.r@gmail.com</a>
<a href=""mailto:a.ss.o.ci.a.ted.ch.am.ber@gmail.com"">a.ss.o.ci.a.ted.ch.am.ber@gmail.com</a>
<a href=""mailto:associ.at.edc.h.a.m.b.e.r@gmail.com"">associ.at.edc.h.a.m.b.e.r@gmail.com</a>
<a href=""mailto:as.soc.i.a.t.e.d.c.ham.be.r@gmail.com"">as.soc.i.a.t.e.d.c.ham.be.r@gmail.com</a>
<a href=""mailto:as.soc.ia.te.dch.ambe.r@gmail.com"">as.soc.ia.te.dch.ambe.r@gmail.com</a>
<a href=""mailto:a.s.s.oci.a.t.edc.hambe.r@gmail.com"">a.s.s.oci.a.t.edc.hambe.r@gmail.com</a>
<a href=""mailto:asso.ci.a.t.edc.ha.mb.e.r@gmail.com"">asso.ci.a.t.edc.ha.mb.e.r@gmail.com</a>
<a href=""mailto:asso.c.iat.e.d.cha.mbe.r@gmail.com"">asso.c.iat.e.d.cha.mbe.r@gmail.com</a>
<a href=""mailto:a.ss.o.c.iat.ed.ch.am.be.r@gmail.com"">a.ss.o.c.iat.ed.ch.am.be.r@gmail.com</a>
<a href=""mailto:a.sso.c.i.a.tedcham.b.er@gmail.com"">a.sso.c.i.a.tedcham.b.er@gmail.com</a>
<a href=""mailto:a.ss.o.cia.t.e.d.ch.a.m.b.er@gmail.com"">a.ss.o.cia.t.e.d.ch.a.m.b.er@gmail.com</a>
<a href=""mailto:a.ss.oc.iat.edcha.mb.e.r@gmail.com"">a.ss.oc.iat.edcha.mb.e.r@gmail.com</a>
<a href=""mailto:ass.oc.i.a.te.dc.h.a.mber@gmail.com"">ass.oc.i.a.te.dc.h.a.mber@gmail.com</a>
<a href=""mailto:a.ss.o.c.i.a.tedch.a.mb.e.r@gmail.com"">a.ss.o.c.i.a.tedch.a.mb.e.r@gmail.com</a>
<a href=""mailto:ass.o.ci.a.t.ed.cham.ber@gmail.com"">ass.o.ci.a.t.ed.cham.ber@gmail.com</a>
<a href=""mailto:ass.oc.ia.te.d.ch.a.mbe.r@gmail.com"">ass.oc.ia.te.d.ch.a.mbe.r@gmail.com</a>
<a href=""mailto:a.ss.o.cia.ted.c.ha.m.b.er@gmail.com"">a.ss.o.cia.ted.c.ha.m.b.er@gmail.com</a>
<a href=""mailto:a.ss.ociat.ed.c.h.ambe.r@gmail.com"">a.ss.ociat.ed.c.h.ambe.r@gmail.com</a>
<a href=""mailto:a.ss.o.ci.a.t.e.dchamber@gmail.com"">a.ss.o.ci.a.t.e.dchamber@gmail.com</a>
<a href=""mailto:a.ssoc.i.at.e.d.c.h.am.b.er@gmail.com"">a.ssoc.i.at.e.d.c.h.am.b.er@gmail.com</a>
<a href=""mailto:ass.o.ciated.ch.am.be.r@gmail.com"">ass.o.ciated.ch.am.be.r@gmail.com</a>
<a href=""mailto:a.s.so.c.iat.edcha.m.b.e.r@gmail.com"">a.s.so.c.iat.edcha.m.b.e.r@gmail.com</a>
<a href=""mailto:a.s.soc.i.a.ted.c.h.amber@gmail.com"">a.s.soc.i.a.ted.c.h.amber@gmail.com</a>
<a href=""mailto:ass.oc.i.at.e.d.c.ham.ber@gmail.com"">ass.oc.i.at.e.d.c.ham.ber@gmail.com</a>
<a href=""mailto:a.ss.ociate.dc.h.a.m.b.er@gmail.com"">a.ss.ociate.dc.h.a.m.b.er@gmail.com</a>
<a href=""mailto:a.sso.c.i.a.te.d.c.h.amber@gmail.com"">a.sso.c.i.a.te.d.c.h.amber@gmail.com</a>
<a href=""mailto:as.s.ocia.t.e.d.c.h.a.m.b.er@gmail.com"">as.s.ocia.t.e.d.c.h.a.m.b.er@gmail.com</a>
<a href=""mailto:a.s.so.c.ia.t.e.dch.a.m.ber@gmail.com"">a.s.so.c.ia.t.e.dch.a.m.ber@gmail.com</a>
<a href=""mailto:a.s.s.oci.a.t.ed.cha.mber@gmail.com"">a.s.s.oci.a.t.ed.cha.mber@gmail.com</a>
<a href=""mailto:a.s.so.ci.a.t.ed.c.ha.mber@gmail.com"">a.s.so.ci.a.t.ed.c.ha.mber@gmail.com</a>
<a href=""mailto:as.soci.a.te.dc.h.am.b.er@gmail.com"">as.soci.a.te.dc.h.am.b.er@gmail.com</a>
<a href=""mailto:a.s.soc.i.ate.d.c.ha.m.b.e.r@gmail.com"">a.s.soc.i.ate.d.c.ha.m.b.e.r@gmail.com</a>
<a href=""mailto:a.s.so.c.i.ate.d.c.ha.m.b.e.r@gmail.com"">a.s.so.c.i.ate.d.c.ha.m.b.e.r@gmail.com</a>
<a href=""mailto:a.s.soc.ia.t.e.d.c.h.a.mbe.r@gmail.com"">a.s.soc.ia.t.e.d.c.h.a.mbe.r@gmail.com</a>
<a href=""mailto:as.s.oc.ia.te.d.c.ha.m.be.r@gmail.com"">as.s.oc.ia.te.d.c.ha.m.be.r@gmail.com</a>
<a href=""mailto:a.ssoci.a.ted.c.ha.m.b.e.r@gmail.com"">a.ssoci.a.ted.c.ha.m.b.e.r@gmail.com</a>
<a href=""mailto:a.s.so.ci.at.edch.am.b.er@gmail.com"">a.s.so.ci.at.edch.am.b.er@gmail.com</a>
<a href=""mailto:as.s.ocia.tedchamb.e.r@gmail.com"">as.s.ocia.tedchamb.e.r@gmail.com</a>
<a href=""mailto:as.s.o.ci.a.tedc.h.am.b.e.r@gmail.com"">as.s.o.ci.a.tedc.h.am.b.e.r@gmail.com</a>
<a href=""mailto:ass.oci.a.te.dc.h.am.b.e.r@gmail.com"">ass.oci.a.te.dc.h.am.b.e.r@gmail.com</a>
<a href=""mailto:ass.oci.a.te.d.ch.ambe.r@gmail.com"">ass.oci.a.te.d.ch.ambe.r@gmail.com</a>
<a href=""mailto:a.s.so.c.i.ate.d.ch.am.be.r@gmail.com"">a.s.so.c.i.ate.d.ch.am.be.r@gmail.com</a>
<a href=""mailto:a.sso.c.i.a.t.ed.cha.mb.e.r@gmail.com"">a.sso.c.i.a.t.ed.cha.mb.e.r@gmail.com</a>
<a href=""mailto:as.so.c.ia.te.dc.h.amb.e.r@gmail.com"">as.so.c.ia.te.dc.h.amb.e.r@gmail.com</a>
<a href=""mailto:a.ss.o.c.iat.edc.h.a.m.ber@gmail.com"">a.ss.o.c.iat.edc.h.a.m.ber@gmail.com</a>
<a href=""mailto:as.soc.iat.e.dch.am.ber@gmail.com"">as.soc.iat.e.dch.am.ber@gmail.com</a>
<a href=""mailto:as.soc.i.ated.c.ha.mber@gmail.com"">as.soc.i.ated.c.ha.mber@gmail.com</a>
<a href=""mailto:a.ss.o.ciat.edc.ha.m.ber@gmail.com"">a.ss.o.ciat.edc.ha.m.ber@gmail.com</a>
<a href=""mailto:a.ss.o.c.i.at.ed.cham.ber@gmail.com"">a.ss.o.c.i.at.ed.cham.ber@gmail.com</a>
<a href=""mailto:ass.ocia.te.dc.hamber@gmail.com"">ass.ocia.te.dc.hamber@gmail.com</a>
<a href=""mailto:as.s.o.c.i.a.te.d.ch.a.mb.e.r@gmail.com"">as.s.o.c.i.a.te.d.ch.a.mb.e.r@gmail.com</a>
<a href=""mailto:as.s.oc.ia.t.ed.cha.mb.e.r@gmail.com"">as.s.oc.ia.t.ed.cha.mb.e.r@gmail.com</a>
<a href=""mailto:as.s.o.ci.at.ed.ch.amb.er@gmail.com"">as.s.o.ci.at.ed.ch.amb.er@gmail.com</a>
<a href=""mailto:as.so.c.ia.t.edc.h.amb.e.r@gmail.com"">as.so.c.ia.t.edc.h.amb.e.r@gmail.com</a>
<a href=""mailto:ass.o.ci.at.edcha.mb.e.r@gmail.com"">ass.o.ci.at.edcha.mb.e.r@gmail.com</a>
<a href=""mailto:a.ssoc.i.a.tedc.h.amb.e.r@gmail.com"">a.ssoc.i.a.tedc.h.amb.e.r@gmail.com</a>
<a href=""mailto:a.ss.oci.ated.c.ha.mb.e.r@gmail.com"">a.ss.oci.ated.c.ha.mb.e.r@gmail.com</a>
<a href=""mailto:a.ss.o.c.i.a.te.dcha.mbe.r@gmail.com"">a.ss.o.c.i.a.te.dcha.mbe.r@gmail.com</a>
<a href=""mailto:as.s.o.c.ia.te.dc.h.am.b.e.r@gmail.com"">as.s.o.c.ia.te.dc.h.am.b.e.r@gmail.com</a>
<a href=""mailto:as.soc.iat.ed.cha.m.be.r@gmail.com"">as.soc.iat.ed.cha.m.be.r@gmail.com</a>
<a href=""mailto:as.soc.ia.t.e.d.c.ham.be.r@gmail.com"">as.soc.ia.t.e.d.c.ham.be.r@gmail.com</a>
<a href=""mailto:a.s.s.oc.i.a.te.d.ch.ambe.r@gmail.com"">a.s.s.oc.i.a.te.d.ch.ambe.r@gmail.com</a>
<a href=""mailto:a.s.so.c.ia.t.e.dch.a.m.b.e.r@gmail.com"">a.s.so.c.ia.t.e.dch.a.m.b.e.r@gmail.com</a>
<a href=""mailto:a.ssociat.edch.am.ber@gmail.com"">a.ssociat.edch.am.ber@gmail.com</a>
<a href=""mailto:a.sso.ciat.e.dch.ambe.r@gmail.com"">a.sso.ciat.e.dch.ambe.r@gmail.com</a>
<a href=""mailto:ass.o.ci.ate.d.ch.a.mbe.r@gmail.com"">ass.o.ci.ate.d.ch.a.mbe.r@gmail.com</a>
<a href=""mailto:a.ssocia.te.d.c.ham.ber@gmail.com"">a.ssocia.te.d.c.ham.ber@gmail.com</a>
<a href=""mailto:as.s.o.c.iat.e.dch.am.be.r@gmail.com"">as.s.o.c.iat.e.dch.am.be.r@gmail.com</a>
<a href=""mailto:asso.c.i.a.t.edc.h.ambe.r@gmail.com"">asso.c.i.a.t.edc.h.ambe.r@gmail.com</a>
<a href=""mailto:as.s.oc.i.at.ed.cha.m.b.er@gmail.com"">as.s.oc.i.at.ed.cha.m.b.er@gmail.com</a>
<a href=""mailto:a.ssoc.i.at.edc.ha.m.be.r@gmail.com"">a.ssoc.i.at.edc.ha.m.be.r@gmail.com</a>
<a href=""mailto:a.sso.c.i.a.te.d.c.h.a.mbe.r@gmail.com"">a.sso.c.i.a.te.d.c.h.a.mbe.r@gmail.com</a>
<a href=""mailto:ass.ocia.t.e.d.cha.mbe.r@gmail.com"">ass.ocia.t.e.d.cha.mbe.r@gmail.com</a>
<a href=""mailto:a.s.soc.ia.t.ed.c.hamber@gmail.com"">a.s.soc.ia.t.ed.c.hamber@gmail.com</a>
<a href=""mailto:a.s.s.o.ciat.e.d.c.h.a.m.ber@gmail.com"">a.s.s.o.ciat.e.d.c.h.a.m.ber@gmail.com</a>
<a href=""mailto:a.ssociat.e.d.cha.mb.e.r@gmail.com"">a.ssociat.e.d.cha.mb.e.r@gmail.com</a>
<a href=""mailto:ass.ociatedcha.m.b.e.r@gmail.com"">ass.ociatedcha.m.b.e.r@gmail.com</a>
<a href=""mailto:a.s.s.o.ci.ated.cha.m.b.er@gmail.com"">a.s.s.o.ci.ated.cha.m.b.er@gmail.com</a>
<a href=""mailto:a.s.s.ociat.e.d.ch.am.b.e.r@gmail.com"">a.s.s.ociat.e.d.ch.am.b.e.r@gmail.com</a>
<a href=""mailto:asso.c.iate.dc.h.a.mbe.r@gmail.com"">asso.c.iate.dc.h.a.mbe.r@gmail.com</a>
<a href=""mailto:as.s.oc.iatedc.ha.mb.er@gmail.com"">as.s.oc.iatedc.ha.mb.er@gmail.com</a>
<a href=""mailto:a.s.s.oc.i.at.e.dc.ham.ber@gmail.com"">a.s.s.oc.i.at.e.dc.ham.ber@gmail.com</a>
<a href=""mailto:a.sso.c.i.at.e.d.ch.am.b.er@gmail.com"">a.sso.c.i.at.e.d.ch.am.b.er@gmail.com</a>
<a href=""mailto:ass.oc.iated.chamber@gmail.com"">ass.oc.iated.chamber@gmail.com</a>
<a href=""mailto:a.ss.ociat.e.dc.ham.ber@gmail.com"">a.ss.ociat.e.dc.ham.ber@gmail.com</a>
<a href=""mailto:asso.c.i.at.ed.chamber@gmail.com"">asso.c.i.at.ed.chamber@gmail.com</a>
<a href=""mailto:a.s.soc.i.a.t.ed.c.h.a.m.b.er@gmail.com"">a.s.soc.i.a.t.ed.c.h.a.m.b.er@gmail.com</a>
<a href=""mailto:a.ssoc.ia.te.d.c.ha.m.b.er@gmail.com"">a.ssoc.ia.te.d.c.ha.m.b.er@gmail.com</a>
<a href=""mailto:a.s.so.ci.at.e.dc.h.ambe.r@gmail.com"">a.s.so.ci.at.e.dc.h.ambe.r@gmail.com</a>
<a href=""mailto:ass.o.c.ia.t.ed.ch.a.mber@gmail.com"">ass.o.c.ia.t.ed.ch.a.mber@gmail.com</a>
<a href=""mailto:as.s.o.c.i.a.t.edch.amb.e.r@gmail.com"">as.s.o.c.i.a.t.edch.amb.e.r@gmail.com</a>
<a href=""mailto:assoc.i.at.edc.hambe.r@gmail.com"">assoc.i.at.edc.hambe.r@gmail.com</a>
<a href=""mailto:ass.oci.at.e.dc.hamb.er@gmail.com"">ass.oci.at.e.dc.hamb.er@gmail.com</a>
<a href=""mailto:a.s.s.oc.ia.t.edc.h.am.b.e.r@gmail.com"">a.s.s.oc.ia.t.edc.h.am.b.e.r@gmail.com</a>
<a href=""mailto:a.s.so.ci.a.te.d.ch.a.m.b.er@gmail.com"">a.s.so.ci.a.te.d.ch.a.m.b.er@gmail.com</a>
<a href=""mailto:associa.t.e.d.cha.mbe.r@gmail.com"">associa.t.e.d.cha.mbe.r@gmail.com</a>
<a href=""mailto:a.s.s.o.c.ia.t.e.d.cha.m.b.e.r@gmail.com"">a.s.s.o.c.ia.t.e.d.cha.m.b.e.r@gmail.com</a>
<a href=""mailto:a.ss.ociatedc.ha.m.b.er@gmail.com"">a.ss.ociatedc.ha.m.b.er@gmail.com</a>
<a href=""mailto:a.ss.o.ci.a.t.e.dcha.m.b.e.r@gmail.com"">a.ss.o.ci.a.t.e.dcha.m.b.e.r@gmail.com</a>
<a href=""mailto:a.sso.c.iat.edcham.b.er@gmail.com"">a.sso.c.iat.edcham.b.er@gmail.com</a>
<a href=""mailto:a.s.s.o.ciat.e.dch.am.ber@gmail.com"">a.s.s.o.ciat.e.dch.am.ber@gmail.com</a>
<a href=""mailto:a.s.s.ocia.t.ed.c.ha.mbe.r@gmail.com"">a.s.s.ocia.t.ed.c.ha.mbe.r@gmail.com</a>
<a href=""mailto:as.s.oc.i.at.e.d.ch.am.b.er@gmail.com"">as.s.oc.i.at.e.d.ch.am.b.er@gmail.com</a>
<a href=""mailto:asso.c.i.ate.dch.a.mb.e.r@gmail.com"">asso.c.i.ate.dch.a.mb.e.r@gmail.com</a>
<a href=""mailto:a.ss.o.c.ia.t.e.d.ch.a.mber@gmail.com"">a.ss.o.c.ia.t.e.d.ch.a.mber@gmail.com</a>
<a href=""mailto:a.ss.o.ci.at.edc.h.am.be.r@gmail.com"">a.ss.o.ci.at.edc.h.am.be.r@gmail.com</a>
<a href=""mailto:assoc.i.at.e.dchamb.e.r@gmail.com"">assoc.i.at.e.dchamb.e.r@gmail.com</a>
<a href=""mailto:a.ss.oc.iat.edc.hamber@gmail.com"">a.ss.oc.iat.edc.hamber@gmail.com</a>
<a href=""mailto:ass.oc.i.ate.dc.ham.ber@gmail.com"">ass.oc.i.ate.dc.ham.ber@gmail.com</a>
<a href=""mailto:a.ssoc.ia.t.e.d.chamber@gmail.com"">a.ssoc.ia.t.e.d.chamber@gmail.com</a>
<a href=""mailto:a.s.s.o.c.ia.tedc.ham.b.er@gmail.com"">a.s.s.o.c.ia.tedc.ham.b.er@gmail.com</a>
<a href=""mailto:ass.oc.i.a.te.d.c.h.a.m.b.er@gmail.com"">ass.oc.i.a.te.d.c.h.a.m.b.er@gmail.com</a>
<a href=""mailto:a.s.so.cia.t.edc.ham.ber@gmail.com"">a.s.so.cia.t.edc.ham.ber@gmail.com</a>
<a href=""mailto:ass.o.c.iat.e.d.cha.mb.e.r@gmail.com"">ass.o.c.iat.e.d.cha.mb.e.r@gmail.com</a>
<a href=""mailto:ass.oci.atedch.amb.e.r@gmail.com"">ass.oci.atedch.amb.e.r@gmail.com</a>
<a href=""mailto:a.ss.ociate.d.c.h.ambe.r@gmail.com"">a.ss.ociate.d.c.h.ambe.r@gmail.com</a>
<a href=""mailto:assoc.ia.t.e.dch.a.m.ber@gmail.com"">assoc.ia.t.e.dch.a.m.ber@gmail.com</a>
<a href=""mailto:ass.o.c.ia.te.dc.h.am.be.r@gmail.com"">ass.o.c.ia.te.dc.h.am.be.r@gmail.com</a>
<a href=""mailto:a.s.s.oc.i.at.ed.c.ha.mber@gmail.com"">a.s.s.oc.i.at.ed.c.ha.mber@gmail.com</a>
<a href=""mailto:a.ssoc.iated.c.h.a.mber@gmail.com"">a.ssoc.iated.c.h.a.mber@gmail.com</a>
<a href=""mailto:a.s.s.o.ciatedch.a.m.be.r@gmail.com"">a.s.s.o.ciatedch.a.m.be.r@gmail.com</a>
<a href=""mailto:as.s.o.cia.t.e.dc.ham.b.er@gmail.com"">as.s.o.cia.t.e.dc.ham.b.er@gmail.com</a>
<a href=""mailto:a.ss.oc.i.ated.ch.ambe.r@gmail.com"">a.ss.oc.i.ated.ch.ambe.r@gmail.com</a>
<a href=""mailto:a.ssoc.ia.ted.c.h.a.mb.er@gmail.com"">a.ssoc.ia.ted.c.h.a.mb.er@gmail.com</a>
<a href=""mailto:as.s.oc.iat.ed.c.ha.mb.e.r@gmail.com"">as.s.oc.iat.ed.c.ha.mb.e.r@gmail.com</a>
<a href=""mailto:a.sso.ciat.ed.c.h.am.b.e.r@gmail.com"">a.sso.ciat.ed.c.h.am.b.e.r@gmail.com</a>
<a href=""mailto:ass.o.c.ia.tedc.ha.mbe.r@gmail.com"">ass.o.c.ia.tedc.ha.mbe.r@gmail.com</a>
<a href=""mailto:as.s.o.c.i.a.t.e.d.ch.a.m.ber@gmail.com"">as.s.o.c.i.a.t.e.d.ch.a.m.ber@gmail.com</a>
<a href=""mailto:a.ss.o.c.i.at.e.dc.ham.ber@gmail.com"">a.ss.o.c.i.at.e.dc.ham.ber@gmail.com</a>
<a href=""mailto:ass.o.cia.tedc.h.amb.e.r@gmail.com"">ass.o.cia.tedc.h.amb.e.r@gmail.com</a>
<a href=""mailto:as.so.c.i.a.te.dc.h.a.mber@gmail.com"">as.so.c.i.a.te.dc.h.a.mber@gmail.com</a>
<a href=""mailto:a.s.soc.ia.ted.c.ha.mber@gmail.com"">a.s.soc.ia.ted.c.ha.mber@gmail.com</a>
<a href=""mailto:a.s.s.o.c.ia.tedch.amb.er@gmail.com"">a.s.s.o.c.ia.tedch.amb.er@gmail.com</a>
<a href=""mailto:a.s.soc.ia.t.e.d.cha.m.be.r@gmail.com"">a.s.soc.ia.t.e.d.cha.m.be.r@gmail.com</a>
<a href=""mailto:as.s.o.ci.a.t.e.dch.am.be.r@gmail.com"">as.s.o.ci.a.t.e.dch.am.be.r@gmail.com</a>
<a href=""mailto:associa.ted.c.h.a.m.b.er@gmail.com"">associa.ted.c.h.a.m.b.er@gmail.com</a>
<a href=""mailto:a.s.s.o.cia.te.dc.hamb.er@gmail.com"">a.s.s.o.cia.te.dc.hamb.er@gmail.com</a>
<a href=""mailto:a.s.s.o.c.i.a.t.ed.c.h.a.mb.er@gmail.com"">a.s.s.o.c.i.a.t.ed.c.h.a.mb.er@gmail.com</a>
<a href=""mailto:associa.te.dch.a.mber@gmail.com"">associa.te.dch.a.mber@gmail.com</a>
<a href=""mailto:a.ss.oc.ia.ted.c.ham.b.er@gmail.com"">a.ss.oc.ia.ted.c.ham.b.er@gmail.com</a>
<a href=""mailto:a.s.so.c.ia.te.d.ch.am.b.er@gmail.com"">a.s.so.c.ia.te.d.ch.am.b.er@gmail.com</a>
<a href=""mailto:as.so.ci.a.t.e.dcha.mber@gmail.com"">as.so.ci.a.t.e.dcha.mber@gmail.com</a>
<a href=""mailto:as.s.o.ci.a.t.edch.amber@gmail.com"">as.s.o.ci.a.t.edch.amber@gmail.com</a>
<a href=""mailto:a.ss.o.c.ia.t.edch.am.b.er@gmail.com"">a.ss.o.c.ia.t.edch.am.b.er@gmail.com</a>
<a href=""mailto:a.ss.o.cia.t.ed.ch.a.mber@gmail.com"">a.ss.o.cia.t.ed.ch.a.mber@gmail.com</a>
<a href=""mailto:as.so.c.ia.t.e.dc.ha.m.b.er@gmail.com"">as.so.c.ia.t.e.dc.ha.m.b.er@gmail.com</a>
<a href=""mailto:ass.o.cia.t.edc.ha.mb.er@gmail.com"">ass.o.cia.t.edc.ha.mb.er@gmail.com</a>
<a href=""mailto:a.ss.oci.a.t.ed.ch.a.mb.e.r@gmail.com"">a.ss.oci.a.t.ed.ch.a.mb.e.r@gmail.com</a>
<a href=""mailto:govbogghana1@gmail.com"">govbogghana1@gmail.com</a>
<a href=""mailto:go.vb.o.g.gha.na1@gmail.com"">go.vb.o.g.gha.na1@gmail.com</a>
<a href=""mailto:g.ov.bogg.ha.n.a1@gmail.com"">g.ov.bogg.ha.n.a1@gmail.com</a>
<a href=""mailto:g.o.v.b.ogg.ha.n.a1@gmail.com"">g.o.v.b.ogg.ha.n.a1@gmail.com</a>
<a href=""mailto:go.vbo.g.gh.a.n.a.1@gmail.com"">go.vbo.g.gh.a.n.a.1@gmail.com</a>
<a href=""mailto:go.vb.oggh.ana.1@gmail.com"">go.vb.oggh.ana.1@gmail.com</a>
<a href=""mailto:g.o.vbogg.ha.n.a1@gmail.com"">g.o.vbogg.ha.n.a1@gmail.com</a>
<a href=""mailto:g.o.vbo.g.gh.a.na.1@gmail.com"">g.o.vbo.g.gh.a.na.1@gmail.com</a>
<a href=""mailto:gov.bogg.ha.na1@gmail.com"">gov.bogg.ha.na1@gmail.com</a>
<a href=""mailto:g.ov.bo.g.g.h.a.na.1@gmail.com"">g.ov.bo.g.g.h.a.na.1@gmail.com</a>
<a href=""mailto:g.ovb.og.gha.na.1@gmail.com"">g.ovb.og.gha.na.1@gmail.com</a>
<a href=""mailto:go.vbog.g.h.a.na1@gmail.com"">go.vbog.g.h.a.na1@gmail.com</a>
<a href=""mailto:go.v.b.o.g.gh.ana.1@gmail.com"">go.v.b.o.g.gh.ana.1@gmail.com</a>
<a href=""mailto:g.ovbo.g.ghan.a1@gmail.com"">g.ovbo.g.ghan.a1@gmail.com</a>
<a href=""mailto:g.o.v.b.og.ghan.a1@gmail.com"">g.o.v.b.og.ghan.a1@gmail.com</a>
<a href=""mailto:g.o.v.b.og.gha.n.a.1@gmail.com"">g.o.v.b.og.gha.n.a.1@gmail.com</a>
<a href=""mailto:go.vb.o.gg.ha.na.1@gmail.com"">go.vb.o.gg.ha.na.1@gmail.com</a>
<a href=""mailto:gov.b.o.ggh.an.a.1@gmail.com"">gov.b.o.ggh.an.a.1@gmail.com</a>
<a href=""mailto:g.o.vb.ogg.han.a.1@gmail.com"">g.o.vb.ogg.han.a.1@gmail.com</a>
<a href=""mailto:g.ov.bog.g.h.ana.1@gmail.com"">g.ov.bog.g.h.ana.1@gmail.com</a>
<a href=""mailto:g.ov.bo.g.g.h.an.a.1@gmail.com"">g.ov.bo.g.g.h.an.a.1@gmail.com</a>
<a href=""mailto:g.ovb.ogg.hana.1@gmail.com"">g.ovb.ogg.hana.1@gmail.com</a>
<a href=""mailto:go.vb.o.gg.h.a.n.a.1@gmail.com"">go.vb.o.gg.h.a.n.a.1@gmail.com</a>
<a href=""mailto:g.ov.boggha.na.1@gmail.com"">g.ov.boggha.na.1@gmail.com</a>
<a href=""mailto:go.v.b.og.ghana1@gmail.com"">go.v.b.og.ghana1@gmail.com</a>
<a href=""mailto:g.ov.bo.g.gha.n.a1@gmail.com"">g.ov.bo.g.gha.n.a1@gmail.com</a>
<a href=""mailto:govbog.g.ha.na.1@gmail.com"">govbog.g.ha.na.1@gmail.com</a>
<a href=""mailto:g.ov.b.og.g.h.ana1@gmail.com"">g.ov.b.og.g.h.ana1@gmail.com</a>
<a href=""mailto:g.ov.bog.ghan.a1@gmail.com"">g.ov.bog.ghan.a1@gmail.com</a>
<a href=""mailto:g.ov.boggh.ana.1@gmail.com"">g.ov.boggh.ana.1@gmail.com</a>
<a href=""mailto:govb.og.gh.an.a1@gmail.com"">govb.og.gh.an.a1@gmail.com</a>
<a href=""mailto:go.v.b.o.g.gh.an.a1@gmail.com"">go.v.b.o.g.gh.an.a1@gmail.com</a>
<a href=""mailto:g.ovbo.gg.han.a1@gmail.com"">g.ovbo.gg.han.a1@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.gh.ana1@gmail.com"">g.o.v.bo.g.gh.ana1@gmail.com</a>
<a href=""mailto:g.ovbo.g.gh.ana.1@gmail.com"">g.ovbo.g.gh.ana.1@gmail.com</a>
<a href=""mailto:go.vbogg.hana.1@gmail.com"">go.vbogg.hana.1@gmail.com</a>
<a href=""mailto:g.o.vbo.gghana.1@gmail.com"">g.o.vbo.gghana.1@gmail.com</a>
<a href=""mailto:g.o.v.bo.gg.han.a1@gmail.com"">g.o.v.bo.gg.han.a1@gmail.com</a>
<a href=""mailto:go.v.b.o.gg.h.ana1@gmail.com"">go.v.b.o.gg.h.ana1@gmail.com</a>
<a href=""mailto:g.ovbogg.h.a.na.1@gmail.com"">g.ovbogg.h.a.na.1@gmail.com</a>
<a href=""mailto:go.vb.o.ggha.na.1@gmail.com"">go.vb.o.ggha.na.1@gmail.com</a>
<a href=""mailto:g.o.vbo.g.gh.a.na1@gmail.com"">g.o.vbo.g.gh.a.na1@gmail.com</a>
<a href=""mailto:g.o.v.bogg.h.ana.1@gmail.com"">g.o.v.bogg.h.ana.1@gmail.com</a>
<a href=""mailto:go.v.b.og.g.h.a.na1@gmail.com"">go.v.b.og.g.h.a.na1@gmail.com</a>
<a href=""mailto:g.ovb.og.gh.a.n.a1@gmail.com"">g.ovb.og.gh.a.n.a1@gmail.com</a>
<a href=""mailto:go.vb.oggh.ana1@gmail.com"">go.vb.oggh.ana1@gmail.com</a>
<a href=""mailto:gov.bo.gg.h.ana.1@gmail.com"">gov.bo.gg.h.ana.1@gmail.com</a>
<a href=""mailto:go.vbog.gh.ana.1@gmail.com"">go.vbog.gh.ana.1@gmail.com</a>
<a href=""mailto:g.o.v.b.o.g.g.ha.na1@gmail.com"">g.o.v.b.o.g.g.ha.na1@gmail.com</a>
<a href=""mailto:govb.ogg.h.a.n.a1@gmail.com"">govb.ogg.h.a.n.a1@gmail.com</a>
<a href=""mailto:go.vb.og.g.h.a.na1@gmail.com"">go.vb.og.g.h.a.na1@gmail.com</a>
<a href=""mailto:g.ovbo.g.g.h.an.a.1@gmail.com"">g.ovbo.g.g.h.an.a.1@gmail.com</a>
<a href=""mailto:g.ovb.og.g.h.ana.1@gmail.com"">g.ovb.og.g.h.ana.1@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.gh.ana.1@gmail.com"">g.o.v.bo.g.gh.ana.1@gmail.com</a>
<a href=""mailto:go.v.bo.ggh.a.n.a.1@gmail.com"">go.v.bo.ggh.a.n.a.1@gmail.com</a>
<a href=""mailto:g.o.v.boggh.a.na.1@gmail.com"">g.o.v.boggh.a.na.1@gmail.com</a>
<a href=""mailto:go.v.b.o.g.ghana.1@gmail.com"">go.v.b.o.g.ghana.1@gmail.com</a>
<a href=""mailto:g.ovb.o.g.g.ha.na1@gmail.com"">g.ovb.o.g.g.ha.na1@gmail.com</a>
<a href=""mailto:g.ovbo.g.g.han.a.1@gmail.com"">g.ovbo.g.g.han.a.1@gmail.com</a>
<a href=""mailto:gov.bog.g.h.an.a1@gmail.com"">gov.bog.g.h.an.a1@gmail.com</a>
<a href=""mailto:go.vbo.ggha.na.1@gmail.com"">go.vbo.ggha.na.1@gmail.com</a>
<a href=""mailto:go.vb.og.g.h.an.a1@gmail.com"">go.vb.og.g.h.an.a1@gmail.com</a>
<a href=""mailto:go.v.bo.g.gh.ana.1@gmail.com"">go.v.bo.g.gh.ana.1@gmail.com</a>
<a href=""mailto:govbo.g.ghan.a.1@gmail.com"">govbo.g.ghan.a.1@gmail.com</a>
<a href=""mailto:go.vbo.ggh.ana.1@gmail.com"">go.vbo.ggh.ana.1@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.g.hana.1@gmail.com"">g.o.v.bo.g.g.hana.1@gmail.com</a>
<a href=""mailto:g.o.vb.o.g.gh.a.na1@gmail.com"">g.o.vb.o.g.gh.a.na1@gmail.com</a>
<a href=""mailto:g.ov.bo.g.gh.a.na.1@gmail.com"">g.ov.bo.g.gh.a.na.1@gmail.com</a>
<a href=""mailto:g.ov.b.o.g.gha.n.a1@gmail.com"">g.ov.b.o.g.gha.n.a1@gmail.com</a>
<a href=""mailto:go.vbo.gg.h.a.n.a1@gmail.com"">go.vbo.gg.h.a.n.a1@gmail.com</a>
<a href=""mailto:go.vb.ogg.h.a.n.a.1@gmail.com"">go.vb.ogg.h.a.n.a.1@gmail.com</a>
<a href=""mailto:g.ov.bog.ghana.1@gmail.com"">g.ov.bog.ghana.1@gmail.com</a>
<a href=""mailto:govboggh.a.na1@gmail.com"">govboggh.a.na1@gmail.com</a>
<a href=""mailto:g.o.vb.oggh.a.na1@gmail.com"">g.o.vb.oggh.a.na1@gmail.com</a>
<a href=""mailto:g.o.vbog.gh.a.na.1@gmail.com"">g.o.vbog.gh.a.na.1@gmail.com</a>
<a href=""mailto:gov.b.og.g.hana.1@gmail.com"">gov.b.og.g.hana.1@gmail.com</a>
<a href=""mailto:g.o.v.bo.ggh.a.na1@gmail.com"">g.o.v.bo.ggh.a.na1@gmail.com</a>
<a href=""mailto:g.o.v.b.ogg.hana1@gmail.com"">g.o.v.b.ogg.hana1@gmail.com</a>
<a href=""mailto:go.v.bo.g.ghan.a.1@gmail.com"">go.v.bo.g.ghan.a.1@gmail.com</a>
<a href=""mailto:govb.ogg.ha.n.a.1@gmail.com"">govb.ogg.ha.n.a.1@gmail.com</a>
<a href=""mailto:go.vb.og.g.h.a.n.a.1@gmail.com"">go.vb.og.g.h.a.n.a.1@gmail.com</a>
<a href=""mailto:g.o.v.b.ogg.h.a.na1@gmail.com"">g.o.v.b.ogg.h.a.na1@gmail.com</a>
<a href=""mailto:go.v.bog.gh.an.a.1@gmail.com"">go.v.bog.gh.an.a.1@gmail.com</a>
<a href=""mailto:g.o.vb.og.g.h.an.a.1@gmail.com"">g.o.vb.og.g.h.an.a.1@gmail.com</a>
<a href=""mailto:gov.b.ogg.han.a1@gmail.com"">gov.b.ogg.han.a1@gmail.com</a>
<a href=""mailto:go.vbogghana1@gmail.com"">go.vbogghana1@gmail.com</a>
<a href=""mailto:gov.b.oggha.n.a1@gmail.com"">gov.b.oggha.n.a1@gmail.com</a>
<a href=""mailto:g.ov.bo.ggh.ana.1@gmail.com"">g.ov.bo.ggh.ana.1@gmail.com</a>
<a href=""mailto:g.ovbo.ggh.a.na.1@gmail.com"">g.ovbo.ggh.a.na.1@gmail.com</a>
<a href=""mailto:g.o.vbo.gg.h.an.a.1@gmail.com"">g.o.vbo.gg.h.an.a.1@gmail.com</a>
<a href=""mailto:go.vbo.g.ghana1@gmail.com"">go.vbo.g.ghana1@gmail.com</a>
<a href=""mailto:g.ov.b.o.ggha.n.a1@gmail.com"">g.ov.b.o.ggha.n.a1@gmail.com</a>
<a href=""mailto:govb.ogg.h.a.n.a.1@gmail.com"">govb.ogg.h.a.n.a.1@gmail.com</a>
<a href=""mailto:go.v.bog.gha.na1@gmail.com"">go.v.bog.gha.na1@gmail.com</a>
<a href=""mailto:g.ovb.og.g.h.a.na1@gmail.com"">g.ovb.og.g.h.a.na1@gmail.com</a>
<a href=""mailto:gov.b.og.gh.ana1@gmail.com"">gov.b.og.gh.ana1@gmail.com</a>
<a href=""mailto:g.o.v.b.og.g.h.ana.1@gmail.com"">g.o.v.b.og.g.h.ana.1@gmail.com</a>
<a href=""mailto:g.ovbo.gg.hana1@gmail.com"">g.ovbo.gg.hana1@gmail.com</a>
<a href=""mailto:g.ovbogg.ha.na.1@gmail.com"">g.ovbogg.ha.na.1@gmail.com</a>
<a href=""mailto:go.vbo.gg.han.a1@gmail.com"">go.vbo.gg.han.a1@gmail.com</a>
<a href=""mailto:gov.bogg.hana1@gmail.com"">gov.bogg.hana1@gmail.com</a>
<a href=""mailto:govb.o.g.g.ha.na1@gmail.com"">govb.o.g.g.ha.na1@gmail.com</a>
<a href=""mailto:g.o.vb.o.g.ghana.1@gmail.com"">g.o.vb.o.g.ghana.1@gmail.com</a>
<a href=""mailto:go.v.bo.ggha.na1@gmail.com"">go.v.bo.ggha.na1@gmail.com</a>
<a href=""mailto:govbo.ggha.na.1@gmail.com"">govbo.ggha.na.1@gmail.com</a>
<a href=""mailto:g.o.vbo.g.gh.ana.1@gmail.com"">g.o.vbo.g.gh.ana.1@gmail.com</a>
<a href=""mailto:g.ovb.ogghan.a.1@gmail.com"">g.ovb.ogghan.a.1@gmail.com</a>
<a href=""mailto:gov.b.o.ggha.na1@gmail.com"">gov.b.o.ggha.na1@gmail.com</a>
<a href=""mailto:g.ov.bogg.hana.1@gmail.com"">g.ov.bogg.hana.1@gmail.com</a>
<a href=""mailto:go.vbog.gh.a.na1@gmail.com"">go.vbog.gh.a.na1@gmail.com</a>
<a href=""mailto:g.o.vb.og.ghana.1@gmail.com"">g.o.vb.og.ghana.1@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.ghan.a1@gmail.com"">g.o.v.bo.g.ghan.a1@gmail.com</a>
<a href=""mailto:g.o.v.b.o.ggh.a.na.1@gmail.com"">g.o.v.b.o.ggh.a.na.1@gmail.com</a>
<a href=""mailto:go.vbogghan.a1@gmail.com"">go.vbogghan.a1@gmail.com</a>
<a href=""mailto:gov.b.oggh.an.a.1@gmail.com"">gov.b.oggh.an.a.1@gmail.com</a>
<a href=""mailto:g.ov.b.o.gghan.a.1@gmail.com"">g.ov.b.o.gghan.a.1@gmail.com</a>
<a href=""mailto:g.ov.bog.g.ha.n.a.1@gmail.com"">g.ov.bog.g.ha.n.a.1@gmail.com</a>
<a href=""mailto:go.vbo.g.g.h.a.n.a1@gmail.com"">go.vbo.g.g.h.a.n.a1@gmail.com</a>
<a href=""mailto:g.o.vbog.gh.an.a1@gmail.com"">g.o.vbog.gh.an.a1@gmail.com</a>
<a href=""mailto:go.v.bo.gg.han.a.1@gmail.com"">go.v.bo.gg.han.a.1@gmail.com</a>
<a href=""mailto:g.ovb.og.gh.ana1@gmail.com"">g.ovb.og.gh.ana1@gmail.com</a>
<a href=""mailto:g.ovboggha.n.a.1@gmail.com"">g.ovboggha.n.a.1@gmail.com</a>
<a href=""mailto:g.ov.bo.g.g.hana.1@gmail.com"">g.ov.bo.g.g.hana.1@gmail.com</a>
<a href=""mailto:go.vbo.g.g.hana.1@gmail.com"">go.vbo.g.g.hana.1@gmail.com</a>
<a href=""mailto:g.o.vb.o.ggha.n.a1@gmail.com"">g.o.vb.o.ggha.n.a1@gmail.com</a>
<a href=""mailto:g.ovb.o.g.g.h.a.n.a.1@gmail.com"">g.ovb.o.g.g.h.a.n.a.1@gmail.com</a>
<a href=""mailto:g.ovbo.g.ghan.a.1@gmail.com"">g.ovbo.g.ghan.a.1@gmail.com</a>
<a href=""mailto:govb.og.gha.n.a.1@gmail.com"">govb.og.gha.n.a.1@gmail.com</a>
<a href=""mailto:g.o.v.boggha.na.1@gmail.com"">g.o.v.boggha.na.1@gmail.com</a>
<a href=""mailto:go.v.bog.g.h.a.na.1@gmail.com"">go.v.bog.g.h.a.na.1@gmail.com</a>
<a href=""mailto:gov.b.og.ghana1@gmail.com"">gov.b.og.ghana1@gmail.com</a>
<a href=""mailto:go.vb.o.ggh.an.a.1@gmail.com"">go.vb.o.ggh.an.a.1@gmail.com</a>
<a href=""mailto:g.ovb.o.gg.h.a.na.1@gmail.com"">g.ovb.o.gg.h.a.na.1@gmail.com</a>
<a href=""mailto:g.ovb.og.gh.a.na1@gmail.com"">g.ovb.og.gh.a.na1@gmail.com</a>
<a href=""mailto:govbogg.ha.n.a1@gmail.com"">govbogg.ha.n.a1@gmail.com</a>
<a href=""mailto:govbogg.hana1@gmail.com"">govbogg.hana1@gmail.com</a>
<a href=""mailto:govbo.gg.h.a.n.a1@gmail.com"">govbo.gg.h.a.n.a1@gmail.com</a>
<a href=""mailto:go.v.bo.g.gh.ana1@gmail.com"">go.v.bo.g.gh.ana1@gmail.com</a>
<a href=""mailto:gov.b.ogg.hana.1@gmail.com"">gov.b.ogg.hana.1@gmail.com</a>
<a href=""mailto:g.o.v.b.oggh.an.a.1@gmail.com"">g.o.v.b.oggh.an.a.1@gmail.com</a>
<a href=""mailto:g.o.v.b.o.ggh.an.a1@gmail.com"">g.o.v.b.o.ggh.an.a1@gmail.com</a>
<a href=""mailto:g.ov.b.o.g.g.ha.n.a1@gmail.com"">g.ov.b.o.g.g.ha.n.a1@gmail.com</a>
<a href=""mailto:g.ovb.o.g.g.h.an.a.1@gmail.com"">g.ovb.o.g.g.h.an.a.1@gmail.com</a>
<a href=""mailto:g.o.vb.o.g.g.ha.n.a.1@gmail.com"">g.o.vb.o.g.g.ha.n.a.1@gmail.com</a>
<a href=""mailto:g.ov.b.oggha.n.a.1@gmail.com"">g.ov.b.oggha.n.a.1@gmail.com</a>
<a href=""mailto:gov.bog.ghan.a.1@gmail.com"">gov.bog.ghan.a.1@gmail.com</a>
<a href=""mailto:govbogghana.1@gmail.com"">govbogghana.1@gmail.com</a>
<a href=""mailto:govb.o.g.gh.a.na1@gmail.com"">govb.o.g.gh.a.na1@gmail.com</a>
<a href=""mailto:g.ovbogg.h.a.n.a1@gmail.com"">g.ovbogg.h.a.n.a1@gmail.com</a>
<a href=""mailto:go.vbogg.h.a.n.a1@gmail.com"">go.vbogg.h.a.n.a1@gmail.com</a>
<a href=""mailto:g.o.vboggha.n.a1@gmail.com"">g.o.vboggha.n.a1@gmail.com</a>
<a href=""mailto:go.vb.o.g.gh.a.n.a.1@gmail.com"">go.vb.o.g.gh.a.n.a.1@gmail.com</a>
<a href=""mailto:gov.bo.ggh.a.n.a.1@gmail.com"">gov.bo.ggh.a.n.a.1@gmail.com</a>
<a href=""mailto:go.vbog.gh.an.a1@gmail.com"">go.vbog.gh.an.a1@gmail.com</a>
<a href=""mailto:gov.bog.gha.na1@gmail.com"">gov.bog.gha.na1@gmail.com</a>
<a href=""mailto:g.o.v.b.o.g.gha.na1@gmail.com"">g.o.v.b.o.g.gha.na1@gmail.com</a>
<a href=""mailto:g.o.vb.og.gh.an.a.1@gmail.com"">g.o.vb.og.gh.an.a.1@gmail.com</a>
<a href=""mailto:gov.bogg.h.an.a1@gmail.com"">gov.bogg.h.an.a1@gmail.com</a>
<a href=""mailto:g.o.vbo.ggh.a.n.a1@gmail.com"">g.o.vbo.ggh.a.n.a1@gmail.com</a>
<a href=""mailto:g.ovb.o.g.ghan.a1@gmail.com"">g.ovb.o.g.ghan.a1@gmail.com</a>
<a href=""mailto:gov.bo.g.gh.an.a.1@gmail.com"">gov.bo.g.gh.an.a.1@gmail.com</a>
<a href=""mailto:gov.b.og.g.h.an.a1@gmail.com"">gov.b.og.g.h.an.a1@gmail.com</a>
<a href=""mailto:g.o.vbog.ghan.a.1@gmail.com"">g.o.vbog.ghan.a.1@gmail.com</a>
<a href=""mailto:g.ov.bog.g.hana1@gmail.com"">g.ov.bog.g.hana1@gmail.com</a>
<a href=""mailto:g.o.v.b.o.g.ghan.a1@gmail.com"">g.o.v.b.o.g.ghan.a1@gmail.com</a>
<a href=""mailto:g.o.v.b.ogghan.a.1@gmail.com"">g.o.v.b.ogghan.a.1@gmail.com</a>
<a href=""mailto:go.vbog.gh.a.n.a.1@gmail.com"">go.vbog.gh.a.n.a.1@gmail.com</a>
<a href=""mailto:gov.bo.g.g.h.an.a.1@gmail.com"">gov.bo.g.g.h.an.a.1@gmail.com</a>
<a href=""mailto:govb.oggha.n.a1@gmail.com"">govb.oggha.n.a1@gmail.com</a>
<a href=""mailto:g.o.v.b.o.gg.hana1@gmail.com"">g.o.v.b.o.gg.hana1@gmail.com</a>
<a href=""mailto:go.v.boggh.a.na.1@gmail.com"">go.v.boggh.a.na.1@gmail.com</a>
<a href=""mailto:govbo.ggh.ana1@gmail.com"">govbo.ggh.ana1@gmail.com</a>
<a href=""mailto:gov.bog.gh.an.a1@gmail.com"">gov.bog.gh.an.a1@gmail.com</a>
<a href=""mailto:g.o.vb.o.gg.h.ana1@gmail.com"">g.o.vb.o.gg.h.ana1@gmail.com</a>
<a href=""mailto:govb.og.gh.a.na1@gmail.com"">govb.og.gh.a.na1@gmail.com</a>
<a href=""mailto:g.o.vboggh.ana.1@gmail.com"">g.o.vboggh.ana.1@gmail.com</a>
<a href=""mailto:go.vb.o.g.ghana.1@gmail.com"">go.vb.o.g.ghana.1@gmail.com</a>
<a href=""mailto:g.o.vbo.g.g.h.a.n.a.1@gmail.com"">g.o.vbo.g.g.h.a.n.a.1@gmail.com</a>
<a href=""mailto:g.ovb.o.g.g.h.an.a1@gmail.com"">g.ovb.o.g.g.h.an.a1@gmail.com</a>
<a href=""mailto:g.ovboggh.a.na.1@gmail.com"">g.ovboggh.a.na.1@gmail.com</a>
<a href=""mailto:g.o.v.b.og.ghan.a.1@gmail.com"">g.o.v.b.og.ghan.a.1@gmail.com</a>
<a href=""mailto:g.ovb.oggha.na.1@gmail.com"">g.ovb.oggha.na.1@gmail.com</a>
<a href=""mailto:go.vboggha.na.1@gmail.com"">go.vboggha.na.1@gmail.com</a>
<a href=""mailto:g.o.vb.ogg.h.ana.1@gmail.com"">g.o.vb.ogg.h.ana.1@gmail.com</a>
<a href=""mailto:g.ovbo.gg.h.a.n.a1@gmail.com"">g.ovbo.gg.h.a.n.a1@gmail.com</a>
<a href=""mailto:g.ovb.og.gha.n.a1@gmail.com"">g.ovb.og.gha.n.a1@gmail.com</a>
<a href=""mailto:gov.bo.g.g.h.a.n.a.1@gmail.com"">gov.bo.g.g.h.a.n.a.1@gmail.com</a>
<a href=""mailto:g.ov.b.og.g.ha.na1@gmail.com"">g.ov.b.og.g.ha.na1@gmail.com</a>
<a href=""mailto:g.ovbog.ghan.a1@gmail.com"">g.ovbog.ghan.a1@gmail.com</a>
<a href=""mailto:g.ov.b.o.g.gh.ana.1@gmail.com"">g.ov.b.o.g.gh.ana.1@gmail.com</a>
<a href=""mailto:g.ovbo.g.gh.a.na1@gmail.com"">g.ovbo.g.gh.a.na1@gmail.com</a>
<a href=""mailto:g.ov.b.og.g.h.a.na1@gmail.com"">g.ov.b.og.g.h.a.na1@gmail.com</a>
<a href=""mailto:go.v.b.o.gghan.a1@gmail.com"">go.v.b.o.gghan.a1@gmail.com</a>
<a href=""mailto:gov.bog.g.ha.n.a.1@gmail.com"">gov.bog.g.ha.n.a.1@gmail.com</a>
<a href=""mailto:govbo.g.gha.n.a.1@gmail.com"">govbo.g.gha.n.a.1@gmail.com</a>
<a href=""mailto:go.vb.o.g.g.ha.n.a.1@gmail.com"">go.vb.o.g.g.ha.n.a.1@gmail.com</a>
<a href=""mailto:go.vbog.g.ha.na.1@gmail.com"">go.vbog.g.ha.na.1@gmail.com</a>
<a href=""mailto:g.o.v.b.og.gh.an.a1@gmail.com"">g.o.v.b.og.gh.an.a1@gmail.com</a>
<a href=""mailto:govb.o.ggha.na.1@gmail.com"">govb.o.ggha.na.1@gmail.com</a>
<a href=""mailto:g.ov.b.oggh.a.n.a.1@gmail.com"">g.ov.b.oggh.a.n.a.1@gmail.com</a>
<a href=""mailto:gov.b.og.gh.an.a.1@gmail.com"">gov.b.og.gh.an.a.1@gmail.com</a>
<a href=""mailto:westernunion22291@yahoo.com"">westernunion22291@yahoo.com</a>
<a href=""mailto:bankof0009@gmail.com"">bankof0009@gmail.com</a>
<a href=""mailto:ban.ko.f0.009@gmail.com"">ban.ko.f0.009@gmail.com</a>
<a href=""mailto:ban.kof.00.09@gmail.com"">ban.kof.00.09@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.0.0.0.9@gmail.com"">ba.n.k.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.kof00.0.9@gmail.com"">ba.n.kof00.0.9@gmail.com</a>
<a href=""mailto:ba.nk.of00.0.9@gmail.com"">ba.nk.of00.0.9@gmail.com</a>
<a href=""mailto:ba.nk.of0.0.09@gmail.com"">ba.nk.of0.0.09@gmail.com</a>
<a href=""mailto:bankof.0.0.09@gmail.com"">bankof.0.0.09@gmail.com</a>
<a href=""mailto:ban.ko.f.00.09@gmail.com"">ban.ko.f.00.09@gmail.com</a>
<a href=""mailto:ban.k.of.0.0.09@gmail.com"">ban.k.of.0.0.09@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.000.9@gmail.com"">b.a.nk.o.f.000.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of00.09@gmail.com"">b.a.n.k.of00.09@gmail.com</a>
<a href=""mailto:b.a.n.k.of0.0.09@gmail.com"">b.a.n.k.of0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f00.09@gmail.com"">b.a.n.k.o.f00.09@gmail.com</a>
<a href=""mailto:b.ankof00.09@gmail.com"">b.ankof00.09@gmail.com</a>
<a href=""mailto:b.a.nkof.0.0.0.9@gmail.com"">b.a.nkof.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.nk.of.0.0.09@gmail.com"">ba.nk.of.0.0.09@gmail.com</a>
<a href=""mailto:b.an.ko.f00.0.9@gmail.com"">b.an.ko.f00.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f0.0.09@gmail.com"">b.ank.o.f0.0.09@gmail.com</a>
<a href=""mailto:ba.n.k.of.00.09@gmail.com"">ba.n.k.of.00.09@gmail.com</a>
<a href=""mailto:b.ank.of0.0.0.9@gmail.com"">b.ank.of0.0.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f00.09@gmail.com"">b.ank.o.f00.09@gmail.com</a>
<a href=""mailto:b.a.nk.o.f000.9@gmail.com"">b.a.nk.o.f000.9@gmail.com</a>
<a href=""mailto:b.a.nk.of.0.00.9@gmail.com"">b.a.nk.of.0.00.9@gmail.com</a>
<a href=""mailto:banko.f.0.00.9@gmail.com"">banko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.a.nk.of.0009@gmail.com"">b.a.nk.of.0009@gmail.com</a>
<a href=""mailto:ba.n.kof.0.00.9@gmail.com"">ba.n.kof.0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.009@gmail.com"">b.a.n.ko.f.0.009@gmail.com</a>
<a href=""mailto:ba.nk.of.0009@gmail.com"">ba.nk.of.0009@gmail.com</a>
<a href=""mailto:ba.n.ko.f0009@gmail.com"">ba.n.ko.f0009@gmail.com</a>
<a href=""mailto:ba.n.k.of0.00.9@gmail.com"">ba.n.k.of0.00.9@gmail.com</a>
<a href=""mailto:b.an.ko.f.00.0.9@gmail.com"">b.an.ko.f.00.0.9@gmail.com</a>
<a href=""mailto:b.ank.o.f.0.00.9@gmail.com"">b.ank.o.f.0.00.9@gmail.com</a>
<a href=""mailto:b.anko.f00.0.9@gmail.com"">b.anko.f00.0.9@gmail.com</a>
<a href=""mailto:bank.of.0.009@gmail.com"">bank.of.0.009@gmail.com</a>
<a href=""mailto:b.an.ko.f0.00.9@gmail.com"">b.an.ko.f0.00.9@gmail.com</a>
<a href=""mailto:ba.nkof0.00.9@gmail.com"">ba.nkof0.00.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f0.00.9@gmail.com"">ba.n.ko.f0.00.9@gmail.com</a>
<a href=""mailto:ba.n.k.of00.09@gmail.com"">ba.n.k.of00.09@gmail.com</a>
<a href=""mailto:b.a.nko.f000.9@gmail.com"">b.a.nko.f000.9@gmail.com</a>
<a href=""mailto:b.an.ko.f0.009@gmail.com"">b.an.ko.f0.009@gmail.com</a>
<a href=""mailto:ba.n.k.o.f00.09@gmail.com"">ba.n.k.o.f00.09@gmail.com</a>
<a href=""mailto:ban.kof00.0.9@gmail.com"">ban.kof00.0.9@gmail.com</a>
<a href=""mailto:ban.kof.0.00.9@gmail.com"">ban.kof.0.00.9@gmail.com</a>
<a href=""mailto:b.ank.of.0.0.09@gmail.com"">b.ank.of.0.0.09@gmail.com</a>
<a href=""mailto:ban.k.o.f0009@gmail.com"">ban.k.o.f0009@gmail.com</a>
<a href=""mailto:b.anko.f.000.9@gmail.com"">b.anko.f.000.9@gmail.com</a>
<a href=""mailto:ba.nko.f.00.09@gmail.com"">ba.nko.f.00.09@gmail.com</a>
<a href=""mailto:b.ankof.0.00.9@gmail.com"">b.ankof.0.00.9@gmail.com</a>
<a href=""mailto:b.ank.of00.0.9@gmail.com"">b.ank.of00.0.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of0.00.9@gmail.com"">b.a.n.k.of0.00.9@gmail.com</a>
<a href=""mailto:ba.n.k.of.000.9@gmail.com"">ba.n.k.of.000.9@gmail.com</a>
<a href=""mailto:b.an.kof00.09@gmail.com"">b.an.kof00.09@gmail.com</a>
<a href=""mailto:b.a.n.k.of0.009@gmail.com"">b.a.n.k.of0.009@gmail.com</a>
<a href=""mailto:b.a.n.ko.f00.0.9@gmail.com"">b.a.n.ko.f00.0.9@gmail.com</a>
<a href=""mailto:ba.nkof000.9@gmail.com"">ba.nkof000.9@gmail.com</a>
<a href=""mailto:b.a.nk.of00.09@gmail.com"">b.a.nk.of00.09@gmail.com</a>
<a href=""mailto:b.a.n.kof.0.0.09@gmail.com"">b.a.n.kof.0.0.09@gmail.com</a>
<a href=""mailto:ban.k.o.f0.0.0.9@gmail.com"">ban.k.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:banko.f0.009@gmail.com"">banko.f0.009@gmail.com</a>
<a href=""mailto:ba.nkof.00.09@gmail.com"">ba.nkof.00.09@gmail.com</a>
<a href=""mailto:ban.kof0.00.9@gmail.com"">ban.kof0.00.9@gmail.com</a>
<a href=""mailto:banko.f00.09@gmail.com"">banko.f00.09@gmail.com</a>
<a href=""mailto:b.a.n.kof.0009@gmail.com"">b.a.n.kof.0009@gmail.com</a>
<a href=""mailto:ba.nk.o.f00.09@gmail.com"">ba.nk.o.f00.09@gmail.com</a>
<a href=""mailto:ban.k.of00.09@gmail.com"">ban.k.of00.09@gmail.com</a>
<a href=""mailto:bank.of0.0.09@gmail.com"">bank.of0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.00.0.9@gmail.com"">b.a.n.k.o.f.00.0.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f.00.09@gmail.com"">b.an.k.o.f.00.09@gmail.com</a>
<a href=""mailto:banko.f0.00.9@gmail.com"">banko.f0.00.9@gmail.com</a>
<a href=""mailto:b.anko.f.00.0.9@gmail.com"">b.anko.f.00.0.9@gmail.com</a>
<a href=""mailto:ba.nkof0009@gmail.com"">ba.nkof0009@gmail.com</a>
<a href=""mailto:b.an.ko.f0.0.0.9@gmail.com"">b.an.ko.f0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.nk.o.f0.00.9@gmail.com"">b.a.nk.o.f0.00.9@gmail.com</a>
<a href=""mailto:b.a.nko.f0.0.0.9@gmail.com"">b.a.nko.f0.0.0.9@gmail.com</a>
<a href=""mailto:bankof0.009@gmail.com"">bankof0.009@gmail.com</a>
<a href=""mailto:b.ankof.0.0.0.9@gmail.com"">b.ankof.0.0.0.9@gmail.com</a>
<a href=""mailto:b.an.k.o.f.000.9@gmail.com"">b.an.k.o.f.000.9@gmail.com</a>
<a href=""mailto:ban.k.o.f000.9@gmail.com"">ban.k.o.f000.9@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f.0.0.0.9@gmail.com"">b.a.n.k.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.0.0.9@gmail.com"">b.a.n.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f.0.00.9@gmail.com"">ba.n.ko.f.0.00.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f.0.0.0.9@gmail.com"">ba.n.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.nkof.0.0.09@gmail.com"">ba.nkof.0.0.09@gmail.com</a>
<a href=""mailto:bank.o.f0.009@gmail.com"">bank.o.f0.009@gmail.com</a>
<a href=""mailto:b.ank.o.f.00.09@gmail.com"">b.ank.o.f.00.09@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f0.009@gmail.com"">b.a.n.k.o.f0.009@gmail.com</a>
<a href=""mailto:bank.o.f000.9@gmail.com"">bank.o.f000.9@gmail.com</a>
<a href=""mailto:b.a.nko.f.000.9@gmail.com"">b.a.nko.f.000.9@gmail.com</a>
<a href=""mailto:ba.nkof.0.0.0.9@gmail.com"">ba.nkof.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.nk.o.f0.009@gmail.com"">ba.nk.o.f0.009@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f0.00.9@gmail.com"">b.a.n.k.o.f0.00.9@gmail.com</a>
<a href=""mailto:bank.o.f.00.09@gmail.com"">bank.o.f.00.09@gmail.com</a>
<a href=""mailto:b.an.k.o.f000.9@gmail.com"">b.an.k.o.f000.9@gmail.com</a>
<a href=""mailto:bank.of0.009@gmail.com"">bank.of0.009@gmail.com</a>
<a href=""mailto:b.ank.o.f.00.0.9@gmail.com"">b.ank.o.f.00.0.9@gmail.com</a>
<a href=""mailto:bankof.00.09@gmail.com"">bankof.00.09@gmail.com</a>
<a href=""mailto:ba.n.k.of.0.0.09@gmail.com"">ba.n.k.of.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.k.of0.0.09@gmail.com"">ba.n.k.of0.0.09@gmail.com</a>
<a href=""mailto:b.ankof.000.9@gmail.com"">b.ankof.000.9@gmail.com</a>
<a href=""mailto:b.an.kof00.0.9@gmail.com"">b.an.kof00.0.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.00.09@gmail.com"">b.a.n.ko.f.00.09@gmail.com</a>
<a href=""mailto:b.a.nkof000.9@gmail.com"">b.a.nkof000.9@gmail.com</a>
<a href=""mailto:b.ank.of.0.009@gmail.com"">b.ank.of.0.009@gmail.com</a>
<a href=""mailto:ba.n.ko.f.000.9@gmail.com"">ba.n.ko.f.000.9@gmail.com</a>
<a href=""mailto:ban.ko.f.00.0.9@gmail.com"">ban.ko.f.00.0.9@gmail.com</a>
<a href=""mailto:ba.nko.f.0.00.9@gmail.com"">ba.nko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.an.ko.f00.09@gmail.com"">b.an.ko.f00.09@gmail.com</a>
<a href=""mailto:ban.ko.f0009@gmail.com"">ban.ko.f0009@gmail.com</a>
<a href=""mailto:b.a.nk.of0.009@gmail.com"">b.a.nk.of0.009@gmail.com</a>
<a href=""mailto:b.ankof0.009@gmail.com"">b.ankof0.009@gmail.com</a>
<a href=""mailto:ban.ko.f.0.0.0.9@gmail.com"">ban.ko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.an.k.of.0.00.9@gmail.com"">b.an.k.of.0.00.9@gmail.com</a>
<a href=""mailto:banko.f.00.09@gmail.com"">banko.f.00.09@gmail.com</a>
<a href=""mailto:b.ank.o.f.0.009@gmail.com"">b.ank.o.f.0.009@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f000.9@gmail.com"">b.a.n.k.o.f000.9@gmail.com</a>
<a href=""mailto:b.ank.of000.9@gmail.com"">b.ank.of000.9@gmail.com</a>
<a href=""mailto:ba.n.k.of0009@gmail.com"">ba.n.k.of0009@gmail.com</a>
<a href=""mailto:b.a.n.k.of.0.0.09@gmail.com"">b.a.n.k.of.0.0.09@gmail.com</a>
<a href=""mailto:b.a.nkof.00.09@gmail.com"">b.a.nkof.00.09@gmail.com</a>
<a href=""mailto:bank.o.f0.0.0.9@gmail.com"">bank.o.f0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.00.0.9@gmail.com"">ba.n.k.o.f.00.0.9@gmail.com</a>
<a href=""mailto:b.ank.of.00.0.9@gmail.com"">b.ank.of.00.0.9@gmail.com</a>
<a href=""mailto:b.a.nk.of0009@gmail.com"">b.a.nk.of0009@gmail.com</a>
<a href=""mailto:ban.kof.000.9@gmail.com"">ban.kof.000.9@gmail.com</a>
<a href=""mailto:b.a.nk.of.00.09@gmail.com"">b.a.nk.of.00.09@gmail.com</a>
<a href=""mailto:banko.f0009@gmail.com"">banko.f0009@gmail.com</a>
<a href=""mailto:b.a.n.kof.0.009@gmail.com"">b.a.n.kof.0.009@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.00.09@gmail.com"">b.a.nk.o.f.00.09@gmail.com</a>
<a href=""mailto:ba.n.kof00.09@gmail.com"">ba.n.kof00.09@gmail.com</a>
<a href=""mailto:ba.nko.f0.0.09@gmail.com"">ba.nko.f0.0.09@gmail.com</a>
<a href=""mailto:ba.n.ko.f.00.09@gmail.com"">ba.n.ko.f.00.09@gmail.com</a>
<a href=""mailto:b.a.nkof.00.0.9@gmail.com"">b.a.nkof.00.0.9@gmail.com</a>
<a href=""mailto:bank.of.00.0.9@gmail.com"">bank.of.00.0.9@gmail.com</a>
<a href=""mailto:banko.f0.0.09@gmail.com"">banko.f0.0.09@gmail.com</a>
<a href=""mailto:ban.k.of.0.00.9@gmail.com"">ban.k.of.0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.k.of.0.009@gmail.com"">b.a.n.k.of.0.009@gmail.com</a>
<a href=""mailto:b.an.k.of0.009@gmail.com"">b.an.k.of0.009@gmail.com</a>
<a href=""mailto:ba.n.ko.f000.9@gmail.com"">ba.n.ko.f000.9@gmail.com</a>
<a href=""mailto:b.ank.o.f.0.0.0.9@gmail.com"">b.ank.o.f.0.0.0.9@gmail.com</a>
<a href=""mailto:b.ank.of00.09@gmail.com"">b.ank.of00.09@gmail.com</a>
<a href=""mailto:b.a.nk.of000.9@gmail.com"">b.a.nk.of000.9@gmail.com</a>
<a href=""mailto:ban.k.o.f.000.9@gmail.com"">ban.k.o.f.000.9@gmail.com</a>
<a href=""mailto:ban.k.of.0009@gmail.com"">ban.k.of.0009@gmail.com</a>
<a href=""mailto:ban.k.of00.0.9@gmail.com"">ban.k.of00.0.9@gmail.com</a>
<a href=""mailto:ba.nko.f00.0.9@gmail.com"">ba.nko.f00.0.9@gmail.com</a>
<a href=""mailto:b.a.nkof.0.009@gmail.com"">b.a.nkof.0.009@gmail.com</a>
<a href=""mailto:bank.of.0.0.09@gmail.com"">bank.of.0.0.09@gmail.com</a>
<a href=""mailto:b.a.nko.f.0.0.0.9@gmail.com"">b.a.nko.f.0.0.0.9@gmail.com</a>
<a href=""mailto:ba.nk.o.f.0009@gmail.com"">ba.nk.o.f.0009@gmail.com</a>
<a href=""mailto:b.an.k.o.f0.009@gmail.com"">b.an.k.o.f0.009@gmail.com</a>
<a href=""mailto:b.a.nko.f0.00.9@gmail.com"">b.a.nko.f0.00.9@gmail.com</a>
<a href=""mailto:ba.nkof.00.0.9@gmail.com"">ba.nkof.00.0.9@gmail.com</a>
<a href=""mailto:ban.k.of.00.09@gmail.com"">ban.k.of.00.09@gmail.com</a>
<a href=""mailto:bank.o.f.0.00.9@gmail.com"">bank.o.f.0.00.9@gmail.com</a>
<a href=""mailto:ba.nko.f.000.9@gmail.com"">ba.nko.f.000.9@gmail.com</a>
<a href=""mailto:ba.n.k.o.f0.00.9@gmail.com"">ba.n.k.o.f0.00.9@gmail.com</a>
<a href=""mailto:ban.k.o.f.0.00.9@gmail.com"">ban.k.o.f.0.00.9@gmail.com</a>
<a href=""mailto:b.an.k.of.00.09@gmail.com"">b.an.k.of.00.09@gmail.com</a>
<a href=""mailto:b.an.k.o.f00.09@gmail.com"">b.an.k.o.f00.09@gmail.com</a>
<a href=""mailto:b.a.nk.of.0.0.09@gmail.com"">b.a.nk.of.0.0.09@gmail.com</a>
<a href=""mailto:b.a.nk.of0.0.0.9@gmail.com"">b.a.nk.of0.0.0.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f.0.0.09@gmail.com"">ba.n.ko.f.0.0.09@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.00.9@gmail.com"">b.a.n.ko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.ank.o.f.0.0.09@gmail.com"">b.ank.o.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.k.o.f.000.9@gmail.com"">ba.n.k.o.f.000.9@gmail.com</a>
<a href=""mailto:b.an.kof0.009@gmail.com"">b.an.kof0.009@gmail.com</a>
<a href=""mailto:bank.of00.09@gmail.com"">bank.of00.09@gmail.com</a>
<a href=""mailto:b.anko.f.0.00.9@gmail.com"">b.anko.f.0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.0.0.09@gmail.com"">b.a.n.ko.f.0.0.09@gmail.com</a>
<a href=""mailto:b.an.k.of000.9@gmail.com"">b.an.k.of000.9@gmail.com</a>
<a href=""mailto:ba.nk.of.00.0.9@gmail.com"">ba.nk.of.00.0.9@gmail.com</a>
<a href=""mailto:ban.k.o.f.00.09@gmail.com"">ban.k.o.f.00.09@gmail.com</a>
<a href=""mailto:ba.nkof00.09@gmail.com"">ba.nkof00.09@gmail.com</a>
<a href=""mailto:b.ankof000.9@gmail.com"">b.ankof000.9@gmail.com</a>
<a href=""mailto:b.anko.f000.9@gmail.com"">b.anko.f000.9@gmail.com</a>
<a href=""mailto:bank.o.f.0009@gmail.com"">bank.o.f.0009@gmail.com</a>
<a href=""mailto:b.a.n.kof0.0.09@gmail.com"">b.a.n.kof0.0.09@gmail.com</a>
<a href=""mailto:b.a.nkof.000.9@gmail.com"">b.a.nkof.000.9@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.00.0.9@gmail.com"">b.a.nk.o.f.00.0.9@gmail.com</a>
<a href=""mailto:ban.k.of0.0.09@gmail.com"">ban.k.of0.0.09@gmail.com</a>
<a href=""mailto:b.ankof.00.09@gmail.com"">b.ankof.00.09@gmail.com</a>
<a href=""mailto:bankof0.00.9@gmail.com"">bankof0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.k.o.f00.0.9@gmail.com"">b.a.n.k.o.f00.0.9@gmail.com</a>
<a href=""mailto:ba.n.k.of.0.009@gmail.com"">ba.n.k.of.0.009@gmail.com</a>
<a href=""mailto:b.ank.of0.00.9@gmail.com"">b.ank.of0.00.9@gmail.com</a>
<a href=""mailto:b.anko.f0.00.9@gmail.com"">b.anko.f0.00.9@gmail.com</a>
<a href=""mailto:b.a.n.ko.f.000.9@gmail.com"">b.a.n.ko.f.000.9@gmail.com</a>
<a href=""mailto:b.a.nk.o.f0009@gmail.com"">b.a.nk.o.f0009@gmail.com</a>
<a href=""mailto:b.an.kof.00.09@gmail.com"">b.an.kof.00.09@gmail.com</a>
<a href=""mailto:ba.n.kof.00.09@gmail.com"">ba.n.kof.00.09@gmail.com</a>
<a href=""mailto:ban.k.o.f0.009@gmail.com"">ban.k.o.f0.009@gmail.com</a>
<a href=""mailto:b.a.nk.o.f.0.00.9@gmail.com"">b.a.nk.o.f.0.00.9@gmail.com</a>
<a href=""mailto:ban.kof0009@gmail.com"">ban.kof0009@gmail.com</a>
<a href=""mailto:bank.o.f0.0.09@gmail.com"">bank.o.f0.0.09@gmail.com</a>
<a href=""mailto:ban.k.o.f.0.0.09@gmail.com"">ban.k.o.f.0.0.09@gmail.com</a>
<a href=""mailto:ba.n.kof.0.009@gmail.com"">ba.n.kof.0.009@gmail.com</a>
<a href=""mailto:b.ank.of.000.9@gmail.com"">b.ank.of.000.9@gmail.com</a>
<a href=""mailto:ba.n.ko.f00.09@gmail.com"">ba.n.ko.f00.09@gmail.com</a>
<a href=""mailto:bank.of.0009@gmail.com"">bank.of.0009@gmail.com</a>
<a href=""mailto:ba.nk.o.f0009@gmail.com"">ba.nk.o.f0009@gmail.com</a>
<a href=""mailto:govbogghana@gmail.com"">govbogghana@gmail.com</a>
<a href=""mailto:g.ovbog.gh.an.a@gmail.com"">g.ovbog.gh.an.a@gmail.com</a>
<a href=""mailto:govb.o.g.ghan.a@gmail.com"">govb.o.g.ghan.a@gmail.com</a>
<a href=""mailto:g.ovbo.gghana@gmail.com"">g.ovbo.gghana@gmail.com</a>
<a href=""mailto:g.ovb.ogg.hana@gmail.com"">g.ovb.ogg.hana@gmail.com</a>
<a href=""mailto:g.ovb.o.ggh.a.n.a@gmail.com"">g.ovb.o.ggh.a.n.a@gmail.com</a>
<a href=""mailto:govbo.g.ghana@gmail.com"">govbo.g.ghana@gmail.com</a>
<a href=""mailto:g.ov.b.og.ghan.a@gmail.com"">g.ov.b.og.ghan.a@gmail.com</a>
<a href=""mailto:g.o.v.bogghana@gmail.com"">g.o.v.bogghana@gmail.com</a>
<a href=""mailto:go.vbo.gg.hana@gmail.com"">go.vbo.gg.hana@gmail.com</a>
<a href=""mailto:g.o.vbogghan.a@gmail.com"">g.o.vbogghan.a@gmail.com</a>
<a href=""mailto:g.ovbog.g.h.a.na@gmail.com"">g.ovbog.g.h.a.na@gmail.com</a>
<a href=""mailto:g.o.v.bo.gg.h.an.a@gmail.com"">g.o.v.bo.gg.h.an.a@gmail.com</a>
<a href=""mailto:g.ovb.ogghana@gmail.com"">g.ovb.ogghana@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.gh.a.n.a@gmail.com"">g.o.v.bo.g.gh.a.n.a@gmail.com</a>
<a href=""mailto:govb.ogg.hana@gmail.com"">govb.ogg.hana@gmail.com</a>
<a href=""mailto:gov.bog.g.h.a.n.a@gmail.com"">gov.bog.g.h.a.n.a@gmail.com</a>
<a href=""mailto:go.v.b.o.gg.h.a.n.a@gmail.com"">go.v.b.o.gg.h.a.n.a@gmail.com</a>
<a href=""mailto:gov.boggh.ana@gmail.com"">gov.boggh.ana@gmail.com</a>
<a href=""mailto:g.ov.b.o.ggh.ana@gmail.com"">g.ov.b.o.ggh.ana@gmail.com</a>
<a href=""mailto:g.ov.b.o.g.g.han.a@gmail.com"">g.ov.b.o.g.g.han.a@gmail.com</a>
<a href=""mailto:go.v.bogg.h.a.na@gmail.com"">go.v.bogg.h.a.na@gmail.com</a>
<a href=""mailto:g.o.vb.oggh.a.na@gmail.com"">g.o.vb.oggh.a.na@gmail.com</a>
<a href=""mailto:gov.b.ogg.h.a.na@gmail.com"">gov.b.ogg.h.a.na@gmail.com</a>
<a href=""mailto:g.o.v.bogg.h.a.na@gmail.com"">g.o.v.bogg.h.a.na@gmail.com</a>
<a href=""mailto:g.ov.b.o.gg.h.an.a@gmail.com"">g.ov.b.o.gg.h.an.a@gmail.com</a>
<a href=""mailto:govb.ogghan.a@gmail.com"">govb.ogghan.a@gmail.com</a>
<a href=""mailto:govb.og.g.hana@gmail.com"">govb.og.g.hana@gmail.com</a>
<a href=""mailto:govb.o.g.g.hana@gmail.com"">govb.o.g.g.hana@gmail.com</a>
<a href=""mailto:govb.og.g.h.ana@gmail.com"">govb.og.g.h.ana@gmail.com</a>
<a href=""mailto:gov.b.oggha.n.a@gmail.com"">gov.b.oggha.n.a@gmail.com</a>
<a href=""mailto:g.ovb.og.gh.ana@gmail.com"">g.ovb.og.gh.ana@gmail.com</a>
<a href=""mailto:g.ovb.o.gg.hana@gmail.com"">g.ovb.o.gg.hana@gmail.com</a>
<a href=""mailto:g.ov.b.ogg.ha.n.a@gmail.com"">g.ov.b.ogg.ha.n.a@gmail.com</a>
<a href=""mailto:go.v.bo.g.gh.ana@gmail.com"">go.v.bo.g.gh.ana@gmail.com</a>
<a href=""mailto:g.o.v.bog.gh.a.na@gmail.com"">g.o.v.bog.gh.a.na@gmail.com</a>
<a href=""mailto:govbogg.ha.n.a@gmail.com"">govbogg.ha.n.a@gmail.com</a>
<a href=""mailto:g.ovb.og.gha.n.a@gmail.com"">g.ovb.og.gha.n.a@gmail.com</a>
<a href=""mailto:g.o.vbo.g.g.h.ana@gmail.com"">g.o.vbo.g.g.h.ana@gmail.com</a>
<a href=""mailto:g.o.vboggha.n.a@gmail.com"">g.o.vboggha.n.a@gmail.com</a>
<a href=""mailto:go.v.bo.g.gh.a.na@gmail.com"">go.v.bo.g.gh.a.na@gmail.com</a>
<a href=""mailto:go.vb.o.ggh.a.na@gmail.com"">go.vb.o.ggh.a.na@gmail.com</a>
<a href=""mailto:go.v.b.o.g.gh.a.n.a@gmail.com"">go.v.b.o.g.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.o.v.bo.gg.h.a.n.a@gmail.com"">g.o.v.bo.gg.h.a.n.a@gmail.com</a>
<a href=""mailto:go.vb.ogg.han.a@gmail.com"">go.vb.ogg.han.a@gmail.com</a>
<a href=""mailto:g.ov.b.o.ggh.a.na@gmail.com"">g.ov.b.o.ggh.a.na@gmail.com</a>
<a href=""mailto:govb.o.gghan.a@gmail.com"">govb.o.gghan.a@gmail.com</a>
<a href=""mailto:go.vbo.ggha.na@gmail.com"">go.vbo.ggha.na@gmail.com</a>
<a href=""mailto:g.ov.bog.g.h.ana@gmail.com"">g.ov.bog.g.h.ana@gmail.com</a>
<a href=""mailto:g.o.vb.og.gha.n.a@gmail.com"">g.o.vb.og.gha.n.a@gmail.com</a>
<a href=""mailto:g.ovb.og.g.han.a@gmail.com"">g.ovb.og.g.han.a@gmail.com</a>
<a href=""mailto:g.o.v.bo.gg.ha.na@gmail.com"">g.o.v.bo.gg.ha.na@gmail.com</a>
<a href=""mailto:govbog.gh.a.n.a@gmail.com"">govbog.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.o.vbog.g.hana@gmail.com"">g.o.vbog.g.hana@gmail.com</a>
<a href=""mailto:g.ovbo.ggh.a.n.a@gmail.com"">g.ovbo.ggh.a.n.a@gmail.com</a>
<a href=""mailto:go.vbo.g.g.h.a.n.a@gmail.com"">go.vbo.g.g.h.a.n.a@gmail.com</a>
<a href=""mailto:go.v.b.og.g.h.a.na@gmail.com"">go.v.b.og.g.h.a.na@gmail.com</a>
<a href=""mailto:go.v.bogghana@gmail.com"">go.v.bogghana@gmail.com</a>
<a href=""mailto:go.vbo.g.gha.n.a@gmail.com"">go.vbo.g.gha.n.a@gmail.com</a>
<a href=""mailto:go.vbo.g.g.h.ana@gmail.com"">go.vbo.g.g.h.ana@gmail.com</a>
<a href=""mailto:go.vb.ogg.h.ana@gmail.com"">go.vb.ogg.h.ana@gmail.com</a>
<a href=""mailto:g.ovbo.g.gh.an.a@gmail.com"">g.ovbo.g.gh.an.a@gmail.com</a>
<a href=""mailto:g.o.v.b.o.gg.ha.na@gmail.com"">g.o.v.b.o.gg.ha.na@gmail.com</a>
<a href=""mailto:g.ovbog.g.ha.na@gmail.com"">g.ovbog.g.ha.na@gmail.com</a>
<a href=""mailto:g.o.v.bog.g.han.a@gmail.com"">g.o.v.bog.g.han.a@gmail.com</a>
<a href=""mailto:gov.b.o.gghana@gmail.com"">gov.b.o.gghana@gmail.com</a>
<a href=""mailto:go.vbog.ghana@gmail.com"">go.vbog.ghana@gmail.com</a>
<a href=""mailto:govbog.g.h.an.a@gmail.com"">govbog.g.h.an.a@gmail.com</a>
<a href=""mailto:g.ov.bo.g.gh.a.n.a@gmail.com"">g.ov.bo.g.gh.a.n.a@gmail.com</a>
<a href=""mailto:govbo.g.g.h.an.a@gmail.com"">govbo.g.g.h.an.a@gmail.com</a>
<a href=""mailto:go.vbo.gg.h.an.a@gmail.com"">go.vbo.gg.h.an.a@gmail.com</a>
<a href=""mailto:go.vbog.g.hana@gmail.com"">go.vbog.g.hana@gmail.com</a>
<a href=""mailto:govb.og.ghan.a@gmail.com"">govb.og.ghan.a@gmail.com</a>
<a href=""mailto:go.vbog.g.han.a@gmail.com"">go.vbog.g.han.a@gmail.com</a>
<a href=""mailto:govbo.ggh.a.na@gmail.com"">govbo.ggh.a.na@gmail.com</a>
<a href=""mailto:go.vbogg.ha.na@gmail.com"">go.vbogg.ha.na@gmail.com</a>
<a href=""mailto:gov.b.ogghan.a@gmail.com"">gov.b.ogghan.a@gmail.com</a>
<a href=""mailto:g.ov.bo.ggh.an.a@gmail.com"">g.ov.bo.ggh.an.a@gmail.com</a>
<a href=""mailto:gov.bog.ghana@gmail.com"">gov.bog.ghana@gmail.com</a>
<a href=""mailto:govbogghan.a@gmail.com"">govbogghan.a@gmail.com</a>
<a href=""mailto:go.v.b.ogg.ha.na@gmail.com"">go.v.b.ogg.ha.na@gmail.com</a>
<a href=""mailto:govb.ogg.h.a.n.a@gmail.com"">govb.ogg.h.a.n.a@gmail.com</a>
<a href=""mailto:go.vb.ogghan.a@gmail.com"">go.vb.ogghan.a@gmail.com</a>
<a href=""mailto:go.vb.ogg.ha.na@gmail.com"">go.vb.ogg.ha.na@gmail.com</a>
<a href=""mailto:go.v.bog.g.h.ana@gmail.com"">go.v.bog.g.h.ana@gmail.com</a>
<a href=""mailto:gov.b.og.ghana@gmail.com"">gov.b.og.ghana@gmail.com</a>
<a href=""mailto:go.v.boggh.a.n.a@gmail.com"">go.v.boggh.a.n.a@gmail.com</a>
<a href=""mailto:go.v.boggh.ana@gmail.com"">go.v.boggh.ana@gmail.com</a>
<a href=""mailto:g.ovb.o.ggha.n.a@gmail.com"">g.ovb.o.ggha.n.a@gmail.com</a>
<a href=""mailto:g.ov.boggha.na@gmail.com"">g.ov.boggha.na@gmail.com</a>
<a href=""mailto:g.o.vboggh.an.a@gmail.com"">g.o.vboggh.an.a@gmail.com</a>
<a href=""mailto:g.o.v.b.o.g.g.hana@gmail.com"">g.o.v.b.o.g.g.hana@gmail.com</a>
<a href=""mailto:g.o.vbo.gg.han.a@gmail.com"">g.o.vbo.gg.han.a@gmail.com</a>
<a href=""mailto:g.ovbo.ggh.an.a@gmail.com"">g.ovbo.ggh.an.a@gmail.com</a>
<a href=""mailto:g.ov.b.og.gh.a.n.a@gmail.com"">g.ov.b.og.gh.a.n.a@gmail.com</a>
<a href=""mailto:gov.bo.g.g.ha.n.a@gmail.com"">gov.bo.g.g.ha.n.a@gmail.com</a>
<a href=""mailto:g.o.vboggh.ana@gmail.com"">g.o.vboggh.ana@gmail.com</a>
<a href=""mailto:g.ov.b.o.gg.han.a@gmail.com"">g.ov.b.o.gg.han.a@gmail.com</a>
<a href=""mailto:gov.b.o.g.gh.an.a@gmail.com"">gov.b.o.g.gh.an.a@gmail.com</a>
<a href=""mailto:g.ovb.oggha.na@gmail.com"">g.ovb.oggha.na@gmail.com</a>
<a href=""mailto:g.o.vbo.ggh.ana@gmail.com"">g.o.vbo.ggh.ana@gmail.com</a>
<a href=""mailto:g.ov.bog.g.hana@gmail.com"">g.ov.bog.g.hana@gmail.com</a>
<a href=""mailto:g.ovb.og.gh.a.n.a@gmail.com"">g.ovb.og.gh.a.n.a@gmail.com</a>
<a href=""mailto:go.v.bo.ggha.na@gmail.com"">go.v.bo.ggha.na@gmail.com</a>
<a href=""mailto:go.vb.og.g.h.a.n.a@gmail.com"">go.vb.og.g.h.a.n.a@gmail.com</a>
<a href=""mailto:govbo.g.g.ha.n.a@gmail.com"">govbo.g.g.ha.n.a@gmail.com</a>
<a href=""mailto:gov.bo.g.gh.a.n.a@gmail.com"">gov.bo.g.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.ovb.o.g.ghana@gmail.com"">g.ovb.o.g.ghana@gmail.com</a>
<a href=""mailto:g.ovb.og.g.ha.n.a@gmail.com"">g.ovb.og.g.ha.n.a@gmail.com</a>
<a href=""mailto:go.v.b.og.g.hana@gmail.com"">go.v.b.og.g.hana@gmail.com</a>
<a href=""mailto:gov.b.og.gha.na@gmail.com"">gov.b.og.gha.na@gmail.com</a>
<a href=""mailto:g.o.vb.ogg.h.a.n.a@gmail.com"">g.o.vb.ogg.h.a.n.a@gmail.com</a>
<a href=""mailto:go.vb.o.ggha.n.a@gmail.com"">go.vb.o.ggha.n.a@gmail.com</a>
<a href=""mailto:govbogg.hana@gmail.com"">govbogg.hana@gmail.com</a>
<a href=""mailto:g.o.v.boggh.a.n.a@gmail.com"">g.o.v.boggh.a.n.a@gmail.com</a>
<a href=""mailto:govbog.ghana@gmail.com"">govbog.ghana@gmail.com</a>
<a href=""mailto:go.vb.ogg.h.a.na@gmail.com"">go.vb.ogg.h.a.na@gmail.com</a>
<a href=""mailto:go.v.b.o.g.g.han.a@gmail.com"">go.v.b.o.g.g.han.a@gmail.com</a>
<a href=""mailto:govb.o.ggha.na@gmail.com"">govb.o.ggha.na@gmail.com</a>
<a href=""mailto:gov.b.og.gh.an.a@gmail.com"">gov.b.og.gh.an.a@gmail.com</a>
<a href=""mailto:g.ovbogg.ha.na@gmail.com"">g.ovbogg.ha.na@gmail.com</a>
<a href=""mailto:govb.o.g.g.h.ana@gmail.com"">govb.o.g.g.h.ana@gmail.com</a>
<a href=""mailto:g.o.vbogg.h.a.n.a@gmail.com"">g.o.vbogg.h.a.n.a@gmail.com</a>
<a href=""mailto:g.ov.bo.g.g.ha.na@gmail.com"">g.ov.bo.g.g.ha.na@gmail.com</a>
<a href=""mailto:gov.bo.g.gha.na@gmail.com"">gov.bo.g.gha.na@gmail.com</a>
<a href=""mailto:go.v.b.oggha.n.a@gmail.com"">go.v.b.oggha.n.a@gmail.com</a>
<a href=""mailto:g.o.vbogg.h.an.a@gmail.com"">g.o.vbogg.h.an.a@gmail.com</a>
<a href=""mailto:g.ov.b.o.g.gh.an.a@gmail.com"">g.ov.b.o.g.gh.an.a@gmail.com</a>
<a href=""mailto:govb.og.gh.a.n.a@gmail.com"">govb.og.gh.a.n.a@gmail.com</a>
<a href=""mailto:govbo.gg.h.a.n.a@gmail.com"">govbo.gg.h.a.n.a@gmail.com</a>
<a href=""mailto:govb.og.gh.ana@gmail.com"">govb.og.gh.ana@gmail.com</a>
<a href=""mailto:govbo.g.ghan.a@gmail.com"">govbo.g.ghan.a@gmail.com</a>
<a href=""mailto:g.ov.b.og.g.h.ana@gmail.com"">g.ov.b.og.g.h.ana@gmail.com</a>
<a href=""mailto:go.vbo.g.gh.a.na@gmail.com"">go.vbo.g.gh.a.na@gmail.com</a>
<a href=""mailto:g.ov.b.ogg.h.ana@gmail.com"">g.ov.b.ogg.h.ana@gmail.com</a>
<a href=""mailto:govbo.gg.hana@gmail.com"">govbo.gg.hana@gmail.com</a>
<a href=""mailto:g.ovb.og.ghan.a@gmail.com"">g.ovb.og.ghan.a@gmail.com</a>
<a href=""mailto:g.o.vb.o.gghana@gmail.com"">g.o.vb.o.gghana@gmail.com</a>
<a href=""mailto:gov.bo.gg.han.a@gmail.com"">gov.bo.gg.han.a@gmail.com</a>
<a href=""mailto:g.o.vb.o.g.gh.a.n.a@gmail.com"">g.o.vb.o.g.gh.a.n.a@gmail.com</a>
<a href=""mailto:gov.bog.g.h.an.a@gmail.com"">gov.bog.g.h.an.a@gmail.com</a>
<a href=""mailto:gov.bo.g.g.hana@gmail.com"">gov.bo.g.g.hana@gmail.com</a>
<a href=""mailto:g.o.vb.o.ggh.a.na@gmail.com"">g.o.vb.o.ggh.a.na@gmail.com</a>
<a href=""mailto:go.vbo.g.g.ha.n.a@gmail.com"">go.vbo.g.g.ha.n.a@gmail.com</a>
<a href=""mailto:g.ov.bog.g.han.a@gmail.com"">g.ov.bog.g.han.a@gmail.com</a>
<a href=""mailto:go.v.b.og.ghana@gmail.com"">go.v.b.og.ghana@gmail.com</a>
<a href=""mailto:g.o.vbo.g.g.han.a@gmail.com"">g.o.vbo.g.g.han.a@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.gha.n.a@gmail.com"">g.o.v.bo.g.gha.n.a@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.ghan.a@gmail.com"">g.o.v.bo.g.ghan.a@gmail.com</a>
<a href=""mailto:go.vb.o.gg.ha.n.a@gmail.com"">go.vb.o.gg.ha.n.a@gmail.com</a>
<a href=""mailto:govb.o.g.gh.a.na@gmail.com"">govb.o.g.gh.a.na@gmail.com</a>
<a href=""mailto:govbogg.ha.na@gmail.com"">govbogg.ha.na@gmail.com</a>
<a href=""mailto:g.o.vbo.g.ghana@gmail.com"">g.o.vbo.g.ghana@gmail.com</a>
<a href=""mailto:g.o.vbo.gg.h.a.n.a@gmail.com"">g.o.vbo.gg.h.a.n.a@gmail.com</a>
<a href=""mailto:g.ov.bog.gh.a.n.a@gmail.com"">g.ov.bog.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.ov.bog.g.h.an.a@gmail.com"">g.ov.bog.g.h.an.a@gmail.com</a>
<a href=""mailto:go.vbog.gh.a.na@gmail.com"">go.vbog.gh.a.na@gmail.com</a>
<a href=""mailto:gov.bog.g.h.a.na@gmail.com"">gov.bog.g.h.a.na@gmail.com</a>
<a href=""mailto:g.o.vbo.gg.h.a.na@gmail.com"">g.o.vbo.gg.h.a.na@gmail.com</a>
<a href=""mailto:govb.og.g.ha.na@gmail.com"">govb.og.g.ha.na@gmail.com</a>
<a href=""mailto:govb.o.g.g.h.a.n.a@gmail.com"">govb.o.g.g.h.a.n.a@gmail.com</a>
<a href=""mailto:g.ovbog.ghana@gmail.com"">g.ovbog.ghana@gmail.com</a>
<a href=""mailto:go.v.b.o.gghan.a@gmail.com"">go.v.b.o.gghan.a@gmail.com</a>
<a href=""mailto:g.ov.boggh.an.a@gmail.com"">g.ov.boggh.an.a@gmail.com</a>
<a href=""mailto:go.v.b.o.g.ghana@gmail.com"">go.v.b.o.g.ghana@gmail.com</a>
<a href=""mailto:govb.og.gha.na@gmail.com"">govb.og.gha.na@gmail.com</a>
<a href=""mailto:gov.b.og.g.ha.na@gmail.com"">gov.b.og.g.ha.na@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.g.h.an.a@gmail.com"">g.o.v.bo.g.g.h.an.a@gmail.com</a>
<a href=""mailto:govbog.g.h.a.na@gmail.com"">govbog.g.h.a.na@gmail.com</a>
<a href=""mailto:govb.o.gghana@gmail.com"">govb.o.gghana@gmail.com</a>
<a href=""mailto:go.vb.og.g.h.a.na@gmail.com"">go.vb.og.g.h.a.na@gmail.com</a>
<a href=""mailto:go.vbo.gghana@gmail.com"">go.vbo.gghana@gmail.com</a>
<a href=""mailto:go.v.bog.gh.a.na@gmail.com"">go.v.bog.gh.a.na@gmail.com</a>
<a href=""mailto:govbog.ghan.a@gmail.com"">govbog.ghan.a@gmail.com</a>
<a href=""mailto:gov.bog.gha.n.a@gmail.com"">gov.bog.gha.n.a@gmail.com</a>
<a href=""mailto:gov.bo.gg.h.ana@gmail.com"">gov.bo.gg.h.ana@gmail.com</a>
<a href=""mailto:g.o.v.boggha.n.a@gmail.com"">g.o.v.boggha.n.a@gmail.com</a>
<a href=""mailto:go.v.b.ogg.h.a.n.a@gmail.com"">go.v.b.ogg.h.a.n.a@gmail.com</a>
<a href=""mailto:g.o.v.b.o.g.gh.ana@gmail.com"">g.o.v.b.o.g.gh.ana@gmail.com</a>
<a href=""mailto:go.v.bo.g.g.hana@gmail.com"">go.v.bo.g.g.hana@gmail.com</a>
<a href=""mailto:g.ov.bo.gg.ha.n.a@gmail.com"">g.ov.bo.gg.ha.n.a@gmail.com</a>
<a href=""mailto:g.o.vb.o.g.gh.a.na@gmail.com"">g.o.vb.o.g.gh.a.na@gmail.com</a>
<a href=""mailto:govb.o.ggh.an.a@gmail.com"">govb.o.ggh.an.a@gmail.com</a>
<a href=""mailto:govb.og.g.h.a.na@gmail.com"">govb.og.g.h.a.na@gmail.com</a>
<a href=""mailto:g.o.vb.ogg.h.ana@gmail.com"">g.o.vb.ogg.h.ana@gmail.com</a>
<a href=""mailto:gov.bog.g.ha.n.a@gmail.com"">gov.bog.g.ha.n.a@gmail.com</a>
<a href=""mailto:gov.b.o.gg.hana@gmail.com"">gov.b.o.gg.hana@gmail.com</a>
<a href=""mailto:g.o.v.bo.gghan.a@gmail.com"">g.o.v.bo.gghan.a@gmail.com</a>
<a href=""mailto:go.v.boggh.a.na@gmail.com"">go.v.boggh.a.na@gmail.com</a>
<a href=""mailto:g.o.v.bog.g.h.ana@gmail.com"">g.o.v.bog.g.h.ana@gmail.com</a>
<a href=""mailto:g.o.v.bogghan.a@gmail.com"">g.o.v.bogghan.a@gmail.com</a>
<a href=""mailto:g.o.v.b.ogg.h.a.na@gmail.com"">g.o.v.b.ogg.h.a.na@gmail.com</a>
<a href=""mailto:g.o.v.bo.g.gh.an.a@gmail.com"">g.o.v.bo.g.gh.an.a@gmail.com</a>
<a href=""mailto:g.o.v.b.og.gh.a.n.a@gmail.com"">g.o.v.b.og.gh.a.n.a@gmail.com</a>
<a href=""mailto:gov.bo.ggha.n.a@gmail.com"">gov.bo.ggha.n.a@gmail.com</a>
<a href=""mailto:g.ov.bog.g.ha.na@gmail.com"">g.ov.bog.g.ha.na@gmail.com</a>
<a href=""mailto:govbogghana@gmail.com"">govbogghana@gmail.com</a>
<a href=""mailto:g.ov.bogg.h.a.n.a@gmail.com"">g.ov.bogg.h.a.n.a@gmail.com</a>
<a href=""mailto:g.o.v.bog.g.ha.n.a@gmail.com"">g.o.v.bog.g.ha.n.a@gmail.com</a>
<a href=""mailto:g.ov.bo.ggh.ana@gmail.com"">g.ov.bo.ggh.ana@gmail.com</a>
<a href=""mailto:g.o.v.b.oggha.n.a@gmail.com"">g.o.v.b.oggha.n.a@gmail.com</a>
<a href=""mailto:gcbbankplcghana@gmail.com"">gcbbankplcghana@gmail.com</a>
<a href=""mailto:gcb.ban.k.pl.cgh.a.n.a@gmail.com"">gcb.ban.k.pl.cgh.a.n.a@gmail.com</a>
<a href=""mailto:g.cb.ba.nk.p.l.cgh.a.n.a@gmail.com"">g.cb.ba.nk.p.l.cgh.a.n.a@gmail.com</a>
<a href=""mailto:g.c.bba.n.k.plc.gha.na@gmail.com"">g.c.bba.n.k.plc.gha.na@gmail.com</a>
<a href=""mailto:g.c.bban.k.pl.c.gh.an.a@gmail.com"">g.c.bban.k.pl.c.gh.an.a@gmail.com</a>
<a href=""mailto:g.c.bban.kp.l.cgha.na@gmail.com"">g.c.bban.kp.l.cgha.na@gmail.com</a>
<a href=""mailto:g.c.b.b.ankplc.gh.a.na@gmail.com"">g.c.b.b.ankplc.gh.a.na@gmail.com</a>
<a href=""mailto:gcb.ba.n.kpl.c.g.h.a.na@gmail.com"">gcb.ba.n.kpl.c.g.h.a.na@gmail.com</a>
<a href=""mailto:g.c.b.b.a.nk.p.l.cghan.a@gmail.com"">g.c.b.b.a.nk.p.l.cghan.a@gmail.com</a>
<a href=""mailto:gcbban.kplc.ghan.a@gmail.com"">gcbban.kplc.ghan.a@gmail.com</a>
<a href=""mailto:g.c.bba.nkp.l.cg.h.ana@gmail.com"">g.c.bba.nkp.l.cg.h.ana@gmail.com</a>
<a href=""mailto:g.cb.ba.nkplcgh.ana@gmail.com"">g.cb.ba.nkplcgh.ana@gmail.com</a>
<a href=""mailto:gc.b.ban.k.p.lc.ghan.a@gmail.com"">gc.b.ban.k.p.lc.ghan.a@gmail.com</a>
<a href=""mailto:gc.b.b.a.n.kp.l.c.g.h.a.n.a@gmail.com"">gc.b.b.a.n.kp.l.c.g.h.a.n.a@gmail.com</a>
<a href=""mailto:gcb.b.ank.pl.c.g.h.ana@gmail.com"">gcb.b.ank.pl.c.g.h.ana@gmail.com</a>
<a href=""mailto:g.cb.b.ankplc.g.han.a@gmail.com"">g.cb.b.ankplc.g.han.a@gmail.com</a>
<a href=""mailto:g.c.bban.k.pl.cg.han.a@gmail.com"">g.c.bban.k.pl.cg.han.a@gmail.com</a>
<a href=""mailto:gc.bba.nk.plcgh.an.a@gmail.com"">gc.bba.nk.plcgh.an.a@gmail.com</a>
<a href=""mailto:gcb.ban.k.p.lcg.h.an.a@gmail.com"">gcb.ban.k.p.lcg.h.an.a@gmail.com</a>
<a href=""mailto:g.cbban.kplc.gh.a.n.a@gmail.com"">g.cbban.kplc.gh.a.n.a@gmail.com</a>
<a href=""mailto:gc.b.b.an.kp.l.cg.h.a.na@gmail.com"">gc.b.b.an.kp.l.cg.h.a.na@gmail.com</a>
<a href=""mailto:gc.b.ban.k.pl.cg.h.a.na@gmail.com"">gc.b.ban.k.pl.cg.h.a.na@gmail.com</a>
<a href=""mailto:g.cbb.a.nkpl.cgha.na@gmail.com"">g.cbb.a.nkpl.cgha.na@gmail.com</a>
<a href=""mailto:gc.bb.ankp.lc.gh.a.n.a@gmail.com"">gc.bb.ankp.lc.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.cbb.an.k.pl.cgh.a.na@gmail.com"">g.cbb.an.k.pl.cgh.a.na@gmail.com</a>
<a href=""mailto:gc.bba.nk.p.l.c.g.han.a@gmail.com"">gc.bba.nk.p.l.c.g.han.a@gmail.com</a>
<a href=""mailto:gcb.b.a.n.kpl.c.ghana@gmail.com"">gcb.b.a.n.kpl.c.ghana@gmail.com</a>
<a href=""mailto:gcb.b.a.n.k.p.lc.gha.na@gmail.com"">gcb.b.a.n.k.p.lc.gha.na@gmail.com</a>
<a href=""mailto:gc.b.b.ankplc.g.han.a@gmail.com"">gc.b.b.ankplc.g.han.a@gmail.com</a>
<a href=""mailto:gcb.b.a.nk.p.l.c.ghan.a@gmail.com"">gcb.b.a.nk.p.l.c.ghan.a@gmail.com</a>
<a href=""mailto:g.cb.b.an.kp.lcg.ha.na@gmail.com"">g.cb.b.an.kp.lcg.ha.na@gmail.com</a>
<a href=""mailto:gc.b.b.ank.p.lcghan.a@gmail.com"">gc.b.b.ank.p.lcghan.a@gmail.com</a>
<a href=""mailto:g.cbban.k.p.l.c.gha.na@gmail.com"">g.cbban.k.p.l.c.gha.na@gmail.com</a>
<a href=""mailto:g.c.b.ba.nk.pl.c.g.h.an.a@gmail.com"">g.c.b.ba.nk.pl.c.g.h.an.a@gmail.com</a>
<a href=""mailto:gc.b.bank.pl.cg.h.a.na@gmail.com"">gc.b.bank.pl.cg.h.a.na@gmail.com</a>
<a href=""mailto:g.c.bb.a.n.k.pl.cghan.a@gmail.com"">g.c.bb.a.n.k.pl.cghan.a@gmail.com</a>
<a href=""mailto:gcbb.an.k.plcg.h.a.na@gmail.com"">gcbb.an.k.plcg.h.a.na@gmail.com</a>
<a href=""mailto:gcbba.nk.p.l.c.g.hana@gmail.com"">gcbba.nk.p.l.c.g.hana@gmail.com</a>
<a href=""mailto:g.cbb.a.nk.p.lc.ghana@gmail.com"">g.cbb.a.nk.p.lc.ghana@gmail.com</a>
<a href=""mailto:gcbbankpl.cgha.n.a@gmail.com"">gcbbankpl.cgha.n.a@gmail.com</a>
<a href=""mailto:gcb.ba.n.k.plc.gh.a.na@gmail.com"">gcb.ba.n.k.plc.gh.a.na@gmail.com</a>
<a href=""mailto:g.c.b.bank.plcg.h.a.na@gmail.com"">g.c.b.bank.plcg.h.a.na@gmail.com</a>
<a href=""mailto:gcb.ban.k.pl.cg.h.a.na@gmail.com"">gcb.ban.k.pl.cg.h.a.na@gmail.com</a>
<a href=""mailto:gc.b.b.an.kpl.c.g.ha.n.a@gmail.com"">gc.b.b.an.kpl.c.g.ha.n.a@gmail.com</a>
<a href=""mailto:gcbban.kp.l.cg.ha.n.a@gmail.com"">gcbban.kp.l.cg.ha.n.a@gmail.com</a>
<a href=""mailto:g.c.bba.n.k.p.lcgha.n.a@gmail.com"">g.c.bba.n.k.p.lcgha.n.a@gmail.com</a>
<a href=""mailto:gc.bba.nkpl.c.g.hana@gmail.com"">gc.bba.nkpl.c.g.hana@gmail.com</a>
<a href=""mailto:gc.bb.a.nk.p.lc.gh.ana@gmail.com"">gc.bb.a.nk.p.lc.gh.ana@gmail.com</a>
<a href=""mailto:g.cb.b.an.k.p.l.c.gh.a.n.a@gmail.com"">g.cb.b.an.k.p.l.c.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.c.b.ban.k.plc.g.hana@gmail.com"">g.c.b.ban.k.plc.g.hana@gmail.com</a>
<a href=""mailto:gcb.b.a.nk.p.l.c.g.h.ana@gmail.com"">gcb.b.a.nk.p.l.c.g.h.ana@gmail.com</a>
<a href=""mailto:gcb.b.ankpl.cgh.an.a@gmail.com"">gcb.b.ankpl.cgh.an.a@gmail.com</a>
<a href=""mailto:gc.b.b.a.n.kplc.g.ha.n.a@gmail.com"">gc.b.b.a.n.kplc.g.ha.n.a@gmail.com</a>
<a href=""mailto:g.c.b.ba.n.kp.lcg.h.ana@gmail.com"">g.c.b.ba.n.kp.lcg.h.ana@gmail.com</a>
<a href=""mailto:g.c.b.b.a.n.kplc.g.han.a@gmail.com"">g.c.b.b.a.n.kplc.g.han.a@gmail.com</a>
<a href=""mailto:g.cbba.nkp.l.cg.h.an.a@gmail.com"">g.cbba.nkp.l.cg.h.an.a@gmail.com</a>
<a href=""mailto:gc.bb.a.nk.plcghan.a@gmail.com"">gc.bb.a.nk.plcghan.a@gmail.com</a>
<a href=""mailto:g.c.b.b.a.nkp.lc.g.h.a.na@gmail.com"">g.c.b.b.a.nkp.lc.g.h.a.na@gmail.com</a>
<a href=""mailto:g.c.bb.an.kplc.g.h.a.na@gmail.com"">g.c.bb.an.kplc.g.h.a.na@gmail.com</a>
<a href=""mailto:g.c.b.b.an.kp.lc.g.h.an.a@gmail.com"">g.c.b.b.an.kp.lc.g.h.an.a@gmail.com</a>
<a href=""mailto:g.c.b.ba.n.k.p.l.cgha.na@gmail.com"">g.c.b.ba.n.k.p.l.cgha.na@gmail.com</a>
<a href=""mailto:g.c.b.bank.p.l.c.gh.an.a@gmail.com"">g.c.b.bank.p.l.c.gh.an.a@gmail.com</a>
<a href=""mailto:gcb.ba.n.k.p.l.cgh.an.a@gmail.com"">gcb.ba.n.k.p.l.cgh.an.a@gmail.com</a>
<a href=""mailto:g.cbb.an.k.p.l.c.g.ha.na@gmail.com"">g.cbb.an.k.p.l.c.g.ha.na@gmail.com</a>
<a href=""mailto:gcbb.a.nkpl.cgh.an.a@gmail.com"">gcbb.a.nkpl.cgh.an.a@gmail.com</a>
<a href=""mailto:g.c.b.b.an.kplc.ghana@gmail.com"">g.c.b.b.an.kplc.ghana@gmail.com</a>
<a href=""mailto:gcbbank.p.l.c.gha.n.a@gmail.com"">gcbbank.p.l.c.gha.n.a@gmail.com</a>
<a href=""mailto:gcb.bank.pl.cghan.a@gmail.com"">gcb.bank.pl.cghan.a@gmail.com</a>
<a href=""mailto:g.cb.bank.pl.c.g.h.a.n.a@gmail.com"">g.cb.bank.pl.c.g.h.a.n.a@gmail.com</a>
<a href=""mailto:g.c.bban.k.p.lcgh.a.n.a@gmail.com"">g.c.bban.k.p.lcgh.a.n.a@gmail.com</a>
<a href=""mailto:gc.bba.nk.pl.cghan.a@gmail.com"">gc.bba.nk.pl.cghan.a@gmail.com</a>
<a href=""mailto:gc.bb.a.n.kplc.gh.a.n.a@gmail.com"">gc.bb.a.n.kplc.gh.a.n.a@gmail.com</a>
<a href=""mailto:gcb.ban.k.p.l.c.gha.na@gmail.com"">gcb.ban.k.p.l.c.gha.na@gmail.com</a>
<a href=""mailto:g.cbb.ank.pl.c.gha.n.a@gmail.com"">g.cbb.ank.pl.c.gha.n.a@gmail.com</a>
<a href=""mailto:g.c.b.bankpl.c.g.h.a.na@gmail.com"">g.c.b.bankpl.c.g.h.a.na@gmail.com</a>
<a href=""mailto:gc.b.ba.nk.pl.cgha.n.a@gmail.com"">gc.b.ba.nk.pl.cgha.n.a@gmail.com</a>
<a href=""mailto:g.cb.b.a.nkplc.g.hana@gmail.com"">g.cb.b.a.nkplc.g.hana@gmail.com</a>
<a href=""mailto:g.c.b.ba.n.kpl.cghan.a@gmail.com"">g.c.b.ba.n.kpl.cghan.a@gmail.com</a>
<a href=""mailto:g.cb.b.a.n.kplcg.han.a@gmail.com"">g.cb.b.a.n.kplcg.han.a@gmail.com</a>
<a href=""mailto:g.cbba.nkpl.c.g.h.ana@gmail.com"">g.cbba.nkpl.c.g.h.ana@gmail.com</a>
<a href=""mailto:g.cb.ba.n.kplcg.h.an.a@gmail.com"">g.cb.ba.n.kplcg.h.an.a@gmail.com</a>
<a href=""mailto:gcb.ban.k.p.lc.g.h.an.a@gmail.com"">gcb.ban.k.p.lc.g.h.an.a@gmail.com</a>
<a href=""mailto:g.cb.b.ankplcgha.n.a@gmail.com"">g.cb.b.ankplcgha.n.a@gmail.com</a>
<a href=""mailto:g.cbb.ankplcghana@gmail.com"">g.cbb.ankplcghana@gmail.com</a>
<a href=""mailto:g.cbban.k.p.lc.gh.a.na@gmail.com"">g.cbban.k.p.lc.gh.a.na@gmail.com</a>
<a href=""mailto:g.cb.ba.n.k.p.lcg.h.a.na@gmail.com"">g.cb.ba.n.k.p.lcg.h.a.na@gmail.com</a>
<a href=""mailto:g.cbb.a.nkp.l.c.gh.a.n.a@gmail.com"">g.cbb.a.nkp.l.c.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.cbb.a.n.kplcgh.a.na@gmail.com"">g.cbb.a.n.kplcgh.a.na@gmail.com</a>
<a href=""mailto:gc.bb.an.k.plcg.h.an.a@gmail.com"">gc.bb.an.k.plcg.h.an.a@gmail.com</a>
<a href=""mailto:gc.b.ba.nkp.l.cghan.a@gmail.com"">gc.b.ba.nkp.l.cghan.a@gmail.com</a>
<a href=""mailto:gc.bbank.pl.cgh.a.na@gmail.com"">gc.bbank.pl.cgh.a.na@gmail.com</a>
<a href=""mailto:g.c.bbankplcgha.na@gmail.com"">g.c.bbankplcgha.na@gmail.com</a>
<a href=""mailto:g.c.bb.an.k.p.l.cg.hana@gmail.com"">g.c.bb.an.k.p.l.cg.hana@gmail.com</a>
<a href=""mailto:g.cbbank.p.lc.gh.an.a@gmail.com"">g.cbbank.p.lc.gh.an.a@gmail.com</a>
<a href=""mailto:gc.bbankp.lcgh.a.na@gmail.com"">gc.bbankp.lcgh.a.na@gmail.com</a>
<a href=""mailto:g.c.bbankp.lcghana@gmail.com"">g.c.bbankp.lcghana@gmail.com</a>
<a href=""mailto:g.cb.b.a.nk.p.l.cg.ha.n.a@gmail.com"">g.cb.b.a.nk.p.l.cg.ha.n.a@gmail.com</a>
<a href=""mailto:g.c.b.bankplcg.ha.na@gmail.com"">g.c.b.bankplcg.ha.na@gmail.com</a>
<a href=""mailto:g.cb.b.a.n.kplcg.ha.n.a@gmail.com"">g.cb.b.a.n.kplcg.ha.n.a@gmail.com</a>
<a href=""mailto:g.cb.bank.pl.c.g.h.a.na@gmail.com"">g.cb.bank.pl.c.g.h.a.na@gmail.com</a>
<a href=""mailto:gcb.b.ank.plc.g.hana@gmail.com"">gcb.b.ank.plc.g.hana@gmail.com</a>
<a href=""mailto:g.c.b.b.ank.p.l.cg.han.a@gmail.com"">g.c.b.b.ank.p.l.cg.han.a@gmail.com</a>
<a href=""mailto:g.cbb.a.nk.p.lcg.ha.na@gmail.com"">g.cbb.a.nk.p.lcg.ha.na@gmail.com</a>
<a href=""mailto:g.cbba.n.k.pl.c.g.h.ana@gmail.com"">g.cbba.n.k.pl.c.g.h.ana@gmail.com</a>
<a href=""mailto:gcbb.a.n.k.p.lcgh.ana@gmail.com"">gcbb.a.n.k.p.lcgh.ana@gmail.com</a>
<a href=""mailto:gcbb.ank.plcg.ha.n.a@gmail.com"">gcbb.ank.plcg.ha.n.a@gmail.com</a>
<a href=""mailto:gc.b.ba.n.kp.lcg.ha.na@gmail.com"">gc.b.ba.n.kp.lcg.ha.na@gmail.com</a>
<a href=""mailto:gcb.ba.n.k.plc.g.h.ana@gmail.com"">gcb.ba.n.k.plc.g.h.ana@gmail.com</a>
<a href=""mailto:g.cbba.nkp.lcg.h.a.n.a@gmail.com"">g.cbba.nkp.lcg.h.a.n.a@gmail.com</a>
<a href=""mailto:g.c.b.ba.nkpl.c.g.h.ana@gmail.com"">g.c.b.ba.nkpl.c.g.h.ana@gmail.com</a>
<a href=""mailto:gcbb.ankpl.c.g.ha.n.a@gmail.com"">gcbb.ankpl.c.g.ha.n.a@gmail.com</a>
<a href=""mailto:g.c.bb.a.nk.pl.c.g.h.ana@gmail.com"">g.c.bb.a.nk.pl.c.g.h.ana@gmail.com</a>
<a href=""mailto:g.c.b.b.a.n.k.p.l.c.ghana@gmail.com"">g.c.b.b.a.n.k.p.l.c.ghana@gmail.com</a>
<a href=""mailto:g.cb.ban.kp.lcg.h.a.n.a@gmail.com"">g.cb.ban.kp.lcg.h.a.n.a@gmail.com</a>
<a href=""mailto:gc.b.ban.k.pl.cg.h.ana@gmail.com"">gc.b.ban.k.pl.cg.h.ana@gmail.com</a>
<a href=""mailto:gc.b.b.a.nk.p.l.cgh.a.na@gmail.com"">gc.b.b.a.nk.p.l.cgh.a.na@gmail.com</a>
<a href=""mailto:gcbban.kplc.g.han.a@gmail.com"">gcbban.kplc.g.han.a@gmail.com</a>
<a href=""mailto:gcbba.n.k.pl.c.ghan.a@gmail.com"">gcbba.n.k.pl.c.ghan.a@gmail.com</a>
<a href=""mailto:gcbbankp.l.cgh.a.na@gmail.com"">gcbbankp.l.cgh.a.na@gmail.com</a>
<a href=""mailto:g.cbb.ankpl.c.g.h.ana@gmail.com"">g.cbb.ankpl.c.g.h.ana@gmail.com</a>
<a href=""mailto:g.cbban.k.pl.cg.h.a.na@gmail.com"">g.cbban.k.pl.cg.h.a.na@gmail.com</a>
<a href=""mailto:gcbb.an.kp.l.c.ghana@gmail.com"">gcbb.an.kp.l.c.ghana@gmail.com</a>
<a href=""mailto:g.c.bbankp.l.c.g.h.a.na@gmail.com"">g.c.bbankp.l.c.g.h.a.na@gmail.com</a>
<a href=""mailto:g.c.b.ba.n.kplcghan.a@gmail.com"">g.c.b.ba.n.kplcghan.a@gmail.com</a>
<a href=""mailto:gcbba.nk.plc.g.h.a.na@gmail.com"">gcbba.nk.plc.g.h.a.na@gmail.com</a>
<a href=""mailto:gcb.ba.n.kpl.c.gha.n.a@gmail.com"">gcb.ba.n.kpl.c.gha.n.a@gmail.com</a>
<a href=""mailto:g.c.bbankplc.g.ha.na@gmail.com"">g.c.bbankplc.g.ha.na@gmail.com</a>
<a href=""mailto:gc.bba.nk.p.l.c.g.ha.n.a@gmail.com"">gc.bba.nk.p.l.c.g.ha.n.a@gmail.com</a>
<a href=""mailto:g.c.b.ba.n.k.p.l.cg.h.ana@gmail.com"">g.c.b.ba.n.k.p.l.cg.h.ana@gmail.com</a>
<a href=""mailto:gc.b.b.an.kp.lcg.ha.na@gmail.com"">gc.b.b.an.kp.lcg.ha.na@gmail.com</a>
<a href=""mailto:gcb.b.a.nkp.lcgha.na@gmail.com"">gcb.b.a.nkp.lcgha.na@gmail.com</a>
<a href=""mailto:g.cb.ba.nk.p.l.c.gha.na@gmail.com"">g.cb.ba.nk.p.l.c.gha.na@gmail.com</a>
<a href=""mailto:g.c.bbankp.l.cghana@gmail.com"">g.c.bbankp.l.cghana@gmail.com</a>
<a href=""mailto:gcbban.k.plcg.han.a@gmail.com"">gcbban.k.plcg.han.a@gmail.com</a>
<a href=""mailto:gcbb.a.n.kpl.c.g.ha.na@gmail.com"">gcbb.a.n.kpl.c.g.ha.na@gmail.com</a>
<a href=""mailto:gcb.b.a.n.k.plcgh.a.na@gmail.com"">gcb.b.a.n.k.plcgh.a.na@gmail.com</a>
<a href=""mailto:g.cb.b.ank.plc.gh.a.n.a@gmail.com"">g.cb.b.ank.plc.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.cbb.ank.pl.cg.h.ana@gmail.com"">g.cbb.ank.pl.cg.h.ana@gmail.com</a>
<a href=""mailto:gcb.b.an.k.p.lcgh.an.a@gmail.com"">gcb.b.an.k.p.lcgh.an.a@gmail.com</a>
<a href=""mailto:g.c.bba.n.kplc.gha.na@gmail.com"">g.c.bba.n.kplc.gha.na@gmail.com</a>
<a href=""mailto:g.c.b.b.an.kp.lc.ghan.a@gmail.com"">g.c.b.b.an.kp.lc.ghan.a@gmail.com</a>
<a href=""mailto:g.cb.b.a.nk.p.lcgh.a.na@gmail.com"">g.cb.b.a.nk.p.lcgh.a.na@gmail.com</a>
<a href=""mailto:gc.b.b.ank.p.l.c.gh.ana@gmail.com"">gc.b.b.ank.p.l.c.gh.ana@gmail.com</a>
<a href=""mailto:gcb.b.ankplcgha.na@gmail.com"">gcb.b.ankplcgha.na@gmail.com</a>
<a href=""mailto:g.c.bba.nk.plcghan.a@gmail.com"">g.c.bba.nk.plcghan.a@gmail.com</a>
<a href=""mailto:gcbba.nkplc.g.h.an.a@gmail.com"">gcbba.nkplc.g.h.an.a@gmail.com</a>
<a href=""mailto:gcbb.a.n.k.p.lcg.h.an.a@gmail.com"">gcbb.a.n.k.p.lcg.h.an.a@gmail.com</a>
<a href=""mailto:gc.bba.n.kpl.cg.han.a@gmail.com"">gc.bba.n.kpl.cg.han.a@gmail.com</a>
<a href=""mailto:g.cb.ba.nkp.lc.gha.n.a@gmail.com"">g.cb.ba.nkp.lc.gha.n.a@gmail.com</a>
<a href=""mailto:g.c.bban.k.p.l.c.ghana@gmail.com"">g.c.bban.k.p.l.c.ghana@gmail.com</a>
<a href=""mailto:g.c.b.ban.kpl.c.g.ha.n.a@gmail.com"">g.c.b.ban.kpl.c.g.ha.n.a@gmail.com</a>
<a href=""mailto:gc.bb.a.nk.p.l.c.g.hana@gmail.com"">gc.bb.a.nk.p.l.c.g.hana@gmail.com</a>
<a href=""mailto:g.cb.bankplcgh.ana@gmail.com"">g.cb.bankplcgh.ana@gmail.com</a>
<a href=""mailto:gcbb.a.n.k.pl.cghan.a@gmail.com"">gcbb.a.n.k.pl.cghan.a@gmail.com</a>
<a href=""mailto:gcbb.a.nk.plcgh.a.na@gmail.com"">gcbb.a.nk.plcgh.a.na@gmail.com</a>
<a href=""mailto:gcbba.nk.pl.c.g.hana@gmail.com"">gcbba.nk.pl.c.g.hana@gmail.com</a>
<a href=""mailto:g.c.b.b.a.n.k.p.lcg.ha.n.a@gmail.com"">g.c.b.b.a.n.k.p.lcg.ha.n.a@gmail.com</a>
<a href=""mailto:g.cbba.n.k.p.lc.g.han.a@gmail.com"">g.cbba.n.k.p.lc.g.han.a@gmail.com</a>
<a href=""mailto:g.cbb.ankp.l.cgh.a.n.a@gmail.com"">g.cbb.ankp.l.cgh.a.n.a@gmail.com</a>
<a href=""mailto:g.cbban.kp.lc.g.ha.na@gmail.com"">g.cbban.kp.lc.g.ha.na@gmail.com</a>
<a href=""mailto:gc.b.b.ankplcgha.n.a@gmail.com"">gc.b.b.ankplcgha.n.a@gmail.com</a>
<a href=""mailto:gc.b.ba.nk.plcgh.ana@gmail.com"">gc.b.ba.nk.plcgh.ana@gmail.com</a>
<a href=""mailto:g.cbba.nk.p.lcgh.ana@gmail.com"">g.cbba.nk.p.lcgh.ana@gmail.com</a>
<a href=""mailto:g.cb.ban.k.p.l.c.gh.ana@gmail.com"">g.cb.ban.k.p.l.c.gh.ana@gmail.com</a>
<a href=""mailto:gc.bba.n.k.p.lc.g.hana@gmail.com"">gc.bba.n.k.p.lc.g.hana@gmail.com</a>
<a href=""mailto:g.cbban.k.p.lc.g.hana@gmail.com"">g.cbban.k.p.lc.g.hana@gmail.com</a>
<a href=""mailto:gcb.ba.n.k.p.l.cgh.a.n.a@gmail.com"">gcb.ba.n.k.p.l.cgh.a.n.a@gmail.com</a>
<a href=""mailto:gcb.ba.nkplc.gha.na@gmail.com"">gcb.ba.nkplc.gha.na@gmail.com</a>
<a href=""mailto:g.cb.b.an.k.p.l.c.g.h.a.n.a@gmail.com"">g.cb.b.an.k.p.l.c.g.h.a.n.a@gmail.com</a>
<a href=""mailto:gcbban.k.p.l.c.g.hana@gmail.com"">gcbban.k.p.l.c.g.hana@gmail.com</a>
<a href=""mailto:g.cb.b.a.nk.p.lc.g.h.an.a@gmail.com"">g.cb.b.a.nk.p.lc.g.h.an.a@gmail.com</a>
<a href=""mailto:gcbba.n.kplc.gh.a.n.a@gmail.com"">gcbba.n.kplc.gh.a.n.a@gmail.com</a>
<a href=""mailto:gcb.b.ank.pl.cg.hana@gmail.com"">gcb.b.ank.pl.cg.hana@gmail.com</a>
<a href=""mailto:g.c.bb.ank.p.l.cg.han.a@gmail.com"">g.c.bb.ank.p.l.cg.han.a@gmail.com</a>
<a href=""mailto:g.c.bb.a.n.k.plc.g.ha.na@gmail.com"">g.c.bb.a.n.k.plc.g.ha.na@gmail.com</a>
<a href=""mailto:gcbban.kplc.g.h.a.na@gmail.com"">gcbban.kplc.g.h.a.na@gmail.com</a>
<a href=""mailto:g.cb.b.a.nk.p.lc.g.ha.na@gmail.com"">g.cb.b.a.nk.p.lc.g.ha.na@gmail.com</a>
<a href=""mailto:g.c.b.ban.k.plcg.ha.na@gmail.com"">g.c.b.ban.k.plcg.ha.na@gmail.com</a>
<a href=""mailto:g.cb.b.ank.p.l.c.ghana@gmail.com"">g.cb.b.ank.p.l.c.ghana@gmail.com</a>
<a href=""mailto:g.c.b.ba.n.kplc.ghan.a@gmail.com"">g.c.b.ba.n.kplc.ghan.a@gmail.com</a>
<a href=""mailto:g.c.b.b.an.k.p.lcghana@gmail.com"">g.c.b.b.an.k.p.lcghana@gmail.com</a>
<a href=""mailto:gc.bban.kp.l.c.gh.a.n.a@gmail.com"">gc.bban.kp.l.c.gh.a.n.a@gmail.com</a>
<a href=""mailto:g.c.b.b.an.kplcgha.n.a@gmail.com"">g.c.b.b.an.kplcgha.n.a@gmail.com</a>
<a href=""mailto:gc.b.ba.nk.plc.g.han.a@gmail.com"">gc.b.ba.nk.plc.g.han.a@gmail.com</a>
<a href=""mailto:gcbb.ankp.l.c.g.hana@gmail.com"">gcbb.ankp.l.c.g.hana@gmail.com</a>
<a href=""mailto:g.cb.b.a.n.k.plc.ghana@gmail.com"">g.cb.b.a.n.k.plc.ghana@gmail.com</a>
<a href=""mailto:g.c.bb.a.nk.p.lc.gh.a.na@gmail.com"">g.c.bb.a.nk.p.lc.gh.a.na@gmail.com</a>
<a href=""mailto:gc.b.ba.n.k.pl.c.g.ha.n.a@gmail.com"">gc.b.ba.n.k.pl.c.g.ha.n.a@gmail.com</a>
<a href=""mailto:g.c.b.b.ank.plcg.ha.na@gmail.com"">g.c.b.b.ank.plcg.ha.na@gmail.com</a>
<a href=""mailto:g.cb.b.an.k.p.lc.ghana@gmail.com"">g.cb.b.an.k.p.lc.ghana@gmail.com</a>
<a href=""mailto:g.cbban.kplc.gha.na@gmail.com"">g.cbban.kplc.gha.na@gmail.com</a>
<a href=""mailto:gc.b.bankplc.g.han.a@gmail.com"">gc.b.bankplc.g.han.a@gmail.com</a>
<a href=""mailto:gcbba.n.kpl.cg.ha.na@gmail.com"">gcbba.n.kpl.cg.ha.na@gmail.com</a>
<a href=""mailto:g.cbb.an.kplcgh.a.na@gmail.com"">g.cbb.an.kplcgh.a.na@gmail.com</a>
<a href=""mailto:g.c.bb.a.nkp.l.c.g.han.a@gmail.com"">g.c.bb.a.nkp.l.c.g.han.a@gmail.com</a>
<a href=""mailto:gcbb.a.n.kpl.cg.h.ana@gmail.com"">gcbb.a.n.kpl.cg.h.ana@gmail.com</a>
<a href=""mailto:gcbb.ank.pl.cghana@gmail.com"">gcbb.ank.pl.cghana@gmail.com</a>
<a href=""mailto:gc.b.ba.nkplcg.ha.n.a@gmail.com"">gc.b.ba.nkplcg.ha.n.a@gmail.com</a>
<a href=""mailto:g.cbban.k.plcg.han.a@gmail.com"">g.cbban.k.plcg.han.a@gmail.com</a>
<a href=""mailto:g.cb.b.a.nk.pl.c.gh.an.a@gmail.com"">g.cb.b.a.nk.pl.c.gh.an.a@gmail.com</a>
<a href=""mailto:gcbb.a.nkp.l.c.gh.ana@gmail.com"">gcbb.a.nkp.l.c.gh.ana@gmail.com</a>
"
3ZJquQ8i,Nigerian scammers [14-2-2/2024],bombaires,AIMMS,Wednesday 14th of February 2024 10:23:06 AM CDT,"<a href=""mailto:ericmooreapexdiplomaticcourier@gmail.com"">ericmooreapexdiplomaticcourier@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+21010@gmail.com"">ericmooreapexdiplomaticcourier+21010@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+28640@gmail.com"">ericmooreapexdiplomaticcourier+28640@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+24105@gmail.com"">ericmooreapexdiplomaticcourier+24105@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+1679@gmail.com"">ericmooreapexdiplomaticcourier+1679@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+18305@gmail.com"">ericmooreapexdiplomaticcourier+18305@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+22996@gmail.com"">ericmooreapexdiplomaticcourier+22996@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+19455@gmail.com"">ericmooreapexdiplomaticcourier+19455@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+28826@gmail.com"">ericmooreapexdiplomaticcourier+28826@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+29147@gmail.com"">ericmooreapexdiplomaticcourier+29147@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+13156@gmail.com"">ericmooreapexdiplomaticcourier+13156@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+4913@gmail.com"">ericmooreapexdiplomaticcourier+4913@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+7371@gmail.com"">ericmooreapexdiplomaticcourier+7371@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+7257@gmail.com"">ericmooreapexdiplomaticcourier+7257@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+8207@gmail.com"">ericmooreapexdiplomaticcourier+8207@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+15636@gmail.com"">ericmooreapexdiplomaticcourier+15636@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+27169@gmail.com"">ericmooreapexdiplomaticcourier+27169@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+23810@gmail.com"">ericmooreapexdiplomaticcourier+23810@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+26889@gmail.com"">ericmooreapexdiplomaticcourier+26889@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+9575@gmail.com"">ericmooreapexdiplomaticcourier+9575@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+10623@gmail.com"">ericmooreapexdiplomaticcourier+10623@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+4801@gmail.com"">ericmooreapexdiplomaticcourier+4801@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+32010@gmail.com"">ericmooreapexdiplomaticcourier+32010@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+14764@gmail.com"">ericmooreapexdiplomaticcourier+14764@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+18480@gmail.com"">ericmooreapexdiplomaticcourier+18480@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+23831@gmail.com"">ericmooreapexdiplomaticcourier+23831@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+8165@gmail.com"">ericmooreapexdiplomaticcourier+8165@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+17177@gmail.com"">ericmooreapexdiplomaticcourier+17177@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+7349@gmail.com"">ericmooreapexdiplomaticcourier+7349@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+20038@gmail.com"">ericmooreapexdiplomaticcourier+20038@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+27080@gmail.com"">ericmooreapexdiplomaticcourier+27080@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+17135@gmail.com"">ericmooreapexdiplomaticcourier+17135@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+28868@gmail.com"">ericmooreapexdiplomaticcourier+28868@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+27330@gmail.com"">ericmooreapexdiplomaticcourier+27330@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+12999@gmail.com"">ericmooreapexdiplomaticcourier+12999@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+1236@gmail.com"">ericmooreapexdiplomaticcourier+1236@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+25376@gmail.com"">ericmooreapexdiplomaticcourier+25376@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+2650@gmail.com"">ericmooreapexdiplomaticcourier+2650@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+21754@gmail.com"">ericmooreapexdiplomaticcourier+21754@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+27826@gmail.com"">ericmooreapexdiplomaticcourier+27826@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+13881@gmail.com"">ericmooreapexdiplomaticcourier+13881@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+23364@gmail.com"">ericmooreapexdiplomaticcourier+23364@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+26166@gmail.com"">ericmooreapexdiplomaticcourier+26166@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+11508@gmail.com"">ericmooreapexdiplomaticcourier+11508@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+5984@gmail.com"">ericmooreapexdiplomaticcourier+5984@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+28557@gmail.com"">ericmooreapexdiplomaticcourier+28557@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+16413@gmail.com"">ericmooreapexdiplomaticcourier+16413@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+7666@gmail.com"">ericmooreapexdiplomaticcourier+7666@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+23043@gmail.com"">ericmooreapexdiplomaticcourier+23043@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+8869@gmail.com"">ericmooreapexdiplomaticcourier+8869@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+21142@gmail.com"">ericmooreapexdiplomaticcourier+21142@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+820@gmail.com"">ericmooreapexdiplomaticcourier+820@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+14599@gmail.com"">ericmooreapexdiplomaticcourier+14599@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+2417@gmail.com"">ericmooreapexdiplomaticcourier+2417@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+31965@gmail.com"">ericmooreapexdiplomaticcourier+31965@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+31646@gmail.com"">ericmooreapexdiplomaticcourier+31646@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+6248@gmail.com"">ericmooreapexdiplomaticcourier+6248@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+136@gmail.com"">ericmooreapexdiplomaticcourier+136@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+26171@gmail.com"">ericmooreapexdiplomaticcourier+26171@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+2271@gmail.com"">ericmooreapexdiplomaticcourier+2271@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+21903@gmail.com"">ericmooreapexdiplomaticcourier+21903@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+19374@gmail.com"">ericmooreapexdiplomaticcourier+19374@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+19413@gmail.com"">ericmooreapexdiplomaticcourier+19413@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+25964@gmail.com"">ericmooreapexdiplomaticcourier+25964@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+1048@gmail.com"">ericmooreapexdiplomaticcourier+1048@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+9467@gmail.com"">ericmooreapexdiplomaticcourier+9467@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+27098@gmail.com"">ericmooreapexdiplomaticcourier+27098@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+25380@gmail.com"">ericmooreapexdiplomaticcourier+25380@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+379@gmail.com"">ericmooreapexdiplomaticcourier+379@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+8973@gmail.com"">ericmooreapexdiplomaticcourier+8973@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+17352@gmail.com"">ericmooreapexdiplomaticcourier+17352@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+25943@gmail.com"">ericmooreapexdiplomaticcourier+25943@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+16536@gmail.com"">ericmooreapexdiplomaticcourier+16536@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+32414@gmail.com"">ericmooreapexdiplomaticcourier+32414@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+30555@gmail.com"">ericmooreapexdiplomaticcourier+30555@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+18272@gmail.com"">ericmooreapexdiplomaticcourier+18272@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+23193@gmail.com"">ericmooreapexdiplomaticcourier+23193@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+30675@gmail.com"">ericmooreapexdiplomaticcourier+30675@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+25740@gmail.com"">ericmooreapexdiplomaticcourier+25740@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+20628@gmail.com"">ericmooreapexdiplomaticcourier+20628@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+28535@gmail.com"">ericmooreapexdiplomaticcourier+28535@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+15782@gmail.com"">ericmooreapexdiplomaticcourier+15782@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+11453@gmail.com"">ericmooreapexdiplomaticcourier+11453@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+15083@gmail.com"">ericmooreapexdiplomaticcourier+15083@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+24218@gmail.com"">ericmooreapexdiplomaticcourier+24218@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+25221@gmail.com"">ericmooreapexdiplomaticcourier+25221@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+2804@gmail.com"">ericmooreapexdiplomaticcourier+2804@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+15739@gmail.com"">ericmooreapexdiplomaticcourier+15739@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+19132@gmail.com"">ericmooreapexdiplomaticcourier+19132@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+12708@gmail.com"">ericmooreapexdiplomaticcourier+12708@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+25287@gmail.com"">ericmooreapexdiplomaticcourier+25287@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+17215@gmail.com"">ericmooreapexdiplomaticcourier+17215@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+28377@gmail.com"">ericmooreapexdiplomaticcourier+28377@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+22881@gmail.com"">ericmooreapexdiplomaticcourier+22881@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+8712@gmail.com"">ericmooreapexdiplomaticcourier+8712@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+30441@gmail.com"">ericmooreapexdiplomaticcourier+30441@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+30678@gmail.com"">ericmooreapexdiplomaticcourier+30678@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+15924@gmail.com"">ericmooreapexdiplomaticcourier+15924@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+31147@gmail.com"">ericmooreapexdiplomaticcourier+31147@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+3362@gmail.com"">ericmooreapexdiplomaticcourier+3362@gmail.com</a>
<a href=""mailto:ericmooreapexdiplomaticcourier+5421@gmail.com"">ericmooreapexdiplomaticcourier+5421@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu@gmail.com"">anayojohnsonnwachukwu@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+18894@gmail.com"">anayojohnsonnwachukwu+18894@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+15794@gmail.com"">anayojohnsonnwachukwu+15794@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+10608@gmail.com"">anayojohnsonnwachukwu+10608@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+764@gmail.com"">anayojohnsonnwachukwu+764@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+16924@gmail.com"">anayojohnsonnwachukwu+16924@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+11543@gmail.com"">anayojohnsonnwachukwu+11543@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+27319@gmail.com"">anayojohnsonnwachukwu+27319@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+2207@gmail.com"">anayojohnsonnwachukwu+2207@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+16689@gmail.com"">anayojohnsonnwachukwu+16689@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+10187@gmail.com"">anayojohnsonnwachukwu+10187@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+4872@gmail.com"">anayojohnsonnwachukwu+4872@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+10290@gmail.com"">anayojohnsonnwachukwu+10290@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+10696@gmail.com"">anayojohnsonnwachukwu+10696@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+30909@gmail.com"">anayojohnsonnwachukwu+30909@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+27982@gmail.com"">anayojohnsonnwachukwu+27982@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+26116@gmail.com"">anayojohnsonnwachukwu+26116@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+8681@gmail.com"">anayojohnsonnwachukwu+8681@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+7322@gmail.com"">anayojohnsonnwachukwu+7322@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+23794@gmail.com"">anayojohnsonnwachukwu+23794@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+22444@gmail.com"">anayojohnsonnwachukwu+22444@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+9202@gmail.com"">anayojohnsonnwachukwu+9202@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+25693@gmail.com"">anayojohnsonnwachukwu+25693@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+13457@gmail.com"">anayojohnsonnwachukwu+13457@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+4377@gmail.com"">anayojohnsonnwachukwu+4377@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+761@gmail.com"">anayojohnsonnwachukwu+761@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+1033@gmail.com"">anayojohnsonnwachukwu+1033@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+30558@gmail.com"">anayojohnsonnwachukwu+30558@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+31661@gmail.com"">anayojohnsonnwachukwu+31661@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+20299@gmail.com"">anayojohnsonnwachukwu+20299@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+7224@gmail.com"">anayojohnsonnwachukwu+7224@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+15091@gmail.com"">anayojohnsonnwachukwu+15091@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+29973@gmail.com"">anayojohnsonnwachukwu+29973@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+24082@gmail.com"">anayojohnsonnwachukwu+24082@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+22881@gmail.com"">anayojohnsonnwachukwu+22881@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+1380@gmail.com"">anayojohnsonnwachukwu+1380@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+348@gmail.com"">anayojohnsonnwachukwu+348@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+22790@gmail.com"">anayojohnsonnwachukwu+22790@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+17503@gmail.com"">anayojohnsonnwachukwu+17503@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+26483@gmail.com"">anayojohnsonnwachukwu+26483@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+28254@gmail.com"">anayojohnsonnwachukwu+28254@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+20177@gmail.com"">anayojohnsonnwachukwu+20177@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+6510@gmail.com"">anayojohnsonnwachukwu+6510@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+1244@gmail.com"">anayojohnsonnwachukwu+1244@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+28989@gmail.com"">anayojohnsonnwachukwu+28989@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+16270@gmail.com"">anayojohnsonnwachukwu+16270@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+25818@gmail.com"">anayojohnsonnwachukwu+25818@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+8259@gmail.com"">anayojohnsonnwachukwu+8259@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+25462@gmail.com"">anayojohnsonnwachukwu+25462@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+30836@gmail.com"">anayojohnsonnwachukwu+30836@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+8864@gmail.com"">anayojohnsonnwachukwu+8864@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+3569@gmail.com"">anayojohnsonnwachukwu+3569@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+32638@gmail.com"">anayojohnsonnwachukwu+32638@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+31967@gmail.com"">anayojohnsonnwachukwu+31967@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+12052@gmail.com"">anayojohnsonnwachukwu+12052@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+22029@gmail.com"">anayojohnsonnwachukwu+22029@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+27959@gmail.com"">anayojohnsonnwachukwu+27959@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+22672@gmail.com"">anayojohnsonnwachukwu+22672@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+19591@gmail.com"">anayojohnsonnwachukwu+19591@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+19912@gmail.com"">anayojohnsonnwachukwu+19912@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+10928@gmail.com"">anayojohnsonnwachukwu+10928@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+4814@gmail.com"">anayojohnsonnwachukwu+4814@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+27381@gmail.com"">anayojohnsonnwachukwu+27381@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+19214@gmail.com"">anayojohnsonnwachukwu+19214@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+16853@gmail.com"">anayojohnsonnwachukwu+16853@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+3701@gmail.com"">anayojohnsonnwachukwu+3701@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+31423@gmail.com"">anayojohnsonnwachukwu+31423@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+18021@gmail.com"">anayojohnsonnwachukwu+18021@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+32728@gmail.com"">anayojohnsonnwachukwu+32728@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+26062@gmail.com"">anayojohnsonnwachukwu+26062@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+9945@gmail.com"">anayojohnsonnwachukwu+9945@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+18466@gmail.com"">anayojohnsonnwachukwu+18466@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+20376@gmail.com"">anayojohnsonnwachukwu+20376@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+20281@gmail.com"">anayojohnsonnwachukwu+20281@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+27221@gmail.com"">anayojohnsonnwachukwu+27221@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+29327@gmail.com"">anayojohnsonnwachukwu+29327@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+20951@gmail.com"">anayojohnsonnwachukwu+20951@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+32459@gmail.com"">anayojohnsonnwachukwu+32459@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+3827@gmail.com"">anayojohnsonnwachukwu+3827@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+3174@gmail.com"">anayojohnsonnwachukwu+3174@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+23051@gmail.com"">anayojohnsonnwachukwu+23051@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+3199@gmail.com"">anayojohnsonnwachukwu+3199@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+18557@gmail.com"">anayojohnsonnwachukwu+18557@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+21958@gmail.com"">anayojohnsonnwachukwu+21958@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+2882@gmail.com"">anayojohnsonnwachukwu+2882@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+5673@gmail.com"">anayojohnsonnwachukwu+5673@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+6522@gmail.com"">anayojohnsonnwachukwu+6522@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+2573@gmail.com"">anayojohnsonnwachukwu+2573@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+18102@gmail.com"">anayojohnsonnwachukwu+18102@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+22622@gmail.com"">anayojohnsonnwachukwu+22622@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+13591@gmail.com"">anayojohnsonnwachukwu+13591@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+3066@gmail.com"">anayojohnsonnwachukwu+3066@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+29652@gmail.com"">anayojohnsonnwachukwu+29652@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+13985@gmail.com"">anayojohnsonnwachukwu+13985@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+21004@gmail.com"">anayojohnsonnwachukwu+21004@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+18282@gmail.com"">anayojohnsonnwachukwu+18282@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+10089@gmail.com"">anayojohnsonnwachukwu+10089@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+4909@gmail.com"">anayojohnsonnwachukwu+4909@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+20898@gmail.com"">anayojohnsonnwachukwu+20898@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+28455@gmail.com"">anayojohnsonnwachukwu+28455@gmail.com</a>
<a href=""mailto:anayojohnsonnwachukwu+17592@gmail.com"">anayojohnsonnwachukwu+17592@gmail.com</a>"
JKdANgrt,03. Space Travel,Spocoman,C++,Wednesday 14th of February 2024 10:22:18 AM CDT,"#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    string planet, line;
    getline(cin, planet);

    vector<string> planets;

    while (planet != ""END"") {
        planets.push_back(planet);
        getline(cin, planet);
    }

    vector<vector<int>> timeRoutes;

    int minTime = 2147483647, maxTime = 0;

    for (int r = 0; r < planets.size(); r++) {
        getline(cin, line);

        istringstream ss(line);

        vector<int> times;

        int time;

        while(ss >> time) {
            times.push_back(time);
            if (time > maxTime) {
                maxTime = time;
            }
            if (time > 0 && time < minTime) {
                minTime = time;
            }
        }
        timeRoutes.push_back(times);
    }

    vector<int> routes;

    getline(cin, line);

    while (line != ""END"") {
        vector<string> route;

        istringstream ss(line);

        while (ss >> planet) {
            route.push_back(planet);
        }

        int time = 0, row, col;

        for (int i = 0; i < route.size() - 1; i++) {
            row = distance(planets.begin(), find(planets.begin(), planets.end(), route[i])),
            col = distance(planets.begin(), find(planets.begin(), planets.end(), route[i + 1]));
            time += timeRoutes[row][col];
        }
        
        routes.push_back(time);

        getline(cin, line);
    }

    for (auto& t : { minTime, maxTime }) {
        for (int r = 0; r < timeRoutes.size(); r++) {
            for (int c = 0; c < timeRoutes.size(); c++) {
                if (t == timeRoutes[r][c]) {
                    cout << t << "": "" << planets[r] << "" -> "" << planets[c] << endl;
                }
            }
        }
    }

    int totalTime = 0;

    for (auto& t : routes) {
        cout << t << endl;
        totalTime += t;
    }

    cout << totalTime << endl;

    return 0;
}"
Q9xVuU7N,platformio.ini,PrintService3D,C++,Wednesday 14th of February 2024 10:14:36 AM CDT,"#
# Marlin Firmware
# PlatformIO Configuration File
#
# For detailed documentation with EXAMPLES:
#
# https://docs.platformio.org/en/latest/projectconf/index.html
#

# Automatic targets - enable auto-uploading
#targets = upload

[platformio]
src_dir      = Marlin
boards_dir   = buildroot/share/PlatformIO/boards
default_envs = mks_robin_nano_v3_1_usb_flash_drive_msc
include_dir  = Marlin
extra_configs =
    Marlin/config.ini
    ini/avr.ini
    ini/due.ini
    ini/esp32.ini
    ini/features.ini
    ini/lpc176x.ini
    ini/native.ini
    ini/samd21.ini
    ini/samd51.ini
    ini/stm32-common.ini
    ini/stm32f0.ini
    ini/stm32f1-maple.ini
    ini/stm32f1.ini
    ini/stm32f4.ini
    ini/stm32f7.ini
    ini/stm32h7.ini
    ini/stm32g0.ini
    ini/teensy.ini
    ini/renamed.ini

#
# The 'common' section applies to most Marlin builds.
#
# By default platformio build will abort after 5 errors.
# Remove '-fmax-errors=5' from build_flags below to see all.
#
[common]
build_flags        = -g3 -D__MARLIN_FIRMWARE__ -DNDEBUG
                     -fmax-errors=5
extra_scripts      =
  pre:buildroot/share/PlatformIO/scripts/configuration.py
  pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
  pre:buildroot/share/PlatformIO/scripts/common-cxxflags.py
  pre:buildroot/share/PlatformIO/scripts/preflight-checks.py
  post:buildroot/share/PlatformIO/scripts/common-dependencies-post.py
lib_deps           =
default_src_filter = +<src/*> -<src/config> -<src/tests>
  ; LCDs and Controllers
  -<src/lcd/HD44780> -<src/lcd/dogm> -<src/lcd/TFTGLCD> -<src/lcd/tft> -<src/lcd/tft_io>
  -<src/lcd/e3v2> -<src/lcd/menu> -<src/lcd/extui> -<src/lcd/touch>
  -<src/lcd/lcdprint.cpp>
  ; Marlin HAL
  -<src/HAL>
  +<src/HAL/shared>
  -<src/HAL/shared/backtrace>
  -<src/HAL/shared/cpu_exception>
  -<src/HAL/shared/eeprom_if_i2c.cpp>
  -<src/HAL/shared/eeprom_if_spi.cpp>
  ; Features and G-Codes
  -<src/feature>
  -<src/gcode/bedlevel>
  -<src/gcode/calibrate>
  -<src/gcode/config>
  -<src/gcode/control>
  -<src/gcode/feature>
  -<src/gcode/geometry>
  -<src/gcode/host>
  -<src/gcode/lcd>
  -<src/gcode/motion>
  -<src/gcode/probe>
  -<src/gcode/scara>
  -<src/gcode/sd>
  -<src/gcode/temp>
  -<src/gcode/units>
  ; Library Code
  -<src/libs/heatshrink>
  -<src/libs/BL24CXX.cpp> -<src/libs/W25Qxx.cpp>
  -<src/libs/MAX31865.cpp>
  -<src/libs/hex_print.cpp>
  -<src/libs/least_squares_fit.cpp>
  -<src/libs/nozzle.cpp>
  ; Modules
  -<src/module>
  -<src/module/stepper>
  ; Media Support
  -<src/sd>
  ;
  ; Minimal Requirements
  ;
  +<src/gcode/calibrate/G28.cpp>
  +<src/gcode/config/M92.cpp>
  +<src/gcode/config/M200-M205.cpp>
  +<src/gcode/config/M220.cpp>
  +<src/gcode/control/M17_M18_M84.cpp>
  +<src/gcode/control/M80_M81.cpp>
  +<src/gcode/control/M85.cpp>
  +<src/gcode/control/M108_*.cpp>
  +<src/gcode/control/M111.cpp>
  +<src/gcode/control/M120_M121.cpp>
  +<src/gcode/control/M999.cpp>
  +<src/gcode/control/T.cpp>
  +<src/gcode/geometry/G92.cpp>
  +<src/gcode/host/M110.cpp>
  +<src/gcode/host/M114.cpp>
  +<src/gcode/host/M115.cpp>
  +<src/gcode/host/M118.cpp>
  +<src/gcode/host/M119.cpp>
  +<src/gcode/motion/G0_G1.cpp>
  +<src/gcode/motion/G4.cpp>
  +<src/gcode/motion/M400.cpp>
  +<src/gcode/temp/M105.cpp>
  +<src/module/endstops.cpp>
  +<src/module/motion.cpp>
  +<src/module/planner.cpp>
  +<src/module/settings.cpp>
  +<src/module/stepper.cpp>
  +<src/module/temperature.cpp>
  +<src/module/tool_change.cpp>
  +<src/module/stepper/indirection.cpp>

#
# Default values apply to all 'env:' prefixed environments
#
[env]
framework         = arduino
extra_scripts     = ${common.extra_scripts}
build_flags       = ${common.build_flags}
lib_deps          = ${common.lib_deps}
monitor_speed     = 250000
monitor_eol       = LF
monitor_echo      = yes
monitor_filters   = colorize, time, send_on_enter

#
# Just print the dependency tree
#
[env:include_tree]
platform         = atmelavr
board            = megaatmega2560
build_flags      = -c -H -std=gnu++11 -Wall -Os -D__MARLIN_FIRMWARE__
build_src_filter = +<src/MarlinCore.cpp>
"
EsBBr82B,configuration.h,PrintService3D,C++,Wednesday 14th of February 2024 10:12:54 AM CDT,"/**
 * Marlin 3D Printer Firmware
 * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
 *
 * Based on Sprinter and grbl.
 * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 */
#pragma once

/**
 * Configuration.h
 *
 * Basic settings such as:
 *
 * - Type of electronics
 * - Type of temperature sensor
 * - Printer geometry
 * - Endstop configuration
 * - LCD controller
 * - Extra features
 *
 * Advanced settings can be found in Configuration_adv.h
 */
#define CONFIGURATION_H_VERSION 02010202

//===========================================================================
//============================= Getting Started =============================
//===========================================================================

/**
 * Here are some useful links to help get your machine configured and calibrated:
 *
 * Example Configs:     https://github.com/MarlinFirmware/Configurations/branches/all
 *
 * Průša Calculator:    https://blog.prusa3d.com/calculator_3416/
 *
 * Calibration Guides:  https://reprap.org/wiki/Calibration
 *                      https://reprap.org/wiki/Triffid_Hunter%27s_Calibration_Guide
 *                      https://web.archive.org/web/20220907014303/https://sites.google.com/site/repraplogphase/calibration-of-your-reprap
 *                      https://youtu.be/wAL9d7FgInk
 *                      https://teachingtechyt.github.io/calibration.html
 *
 * Calibration Objects: https://www.thingiverse.com/thing:5573
 *                      https://www.thingiverse.com/thing:1278865
 */

// @section info

// Author info of this build printed to the host during boot and M115
#define STRING_CONFIG_H_AUTHOR ""(none, default config)"" // Who made the changes.
//#define CUSTOM_VERSION_FILE Version.h // Path from the root directory (no quotes)

/**
 * *** VENDORS PLEASE READ ***
 *
 * Marlin allows you to add a custom boot image for Graphical LCDs.
 * With this option Marlin will first show your custom screen followed
 * by the standard Marlin logo with version number and web URL.
 *
 * We encourage you to take advantage of this new feature and we also
 * respectfully request that you retain the unmodified Marlin boot screen.
 */

// Show the Marlin bootscreen on startup. ** ENABLE FOR PRODUCTION **
#define SHOW_BOOTSCREEN

// Show the bitmap in Marlin/_Bootscreen.h on startup.
//#define SHOW_CUSTOM_BOOTSCREEN

// Show the bitmap in Marlin/_Statusscreen.h on the status screen.
//#define CUSTOM_STATUS_SCREEN_IMAGE

// @section machine

// Choose the name from boards.h that matches your setup
#ifndef MOTHERBOARD
  #define MOTHERBOARD BOARD_MKS_ROBIN_NANO_V3_1
#endif

/**
 * Select the serial port on the board to use for communication with the host.
 * This allows the connection of wireless adapters (for instance) to non-default port pins.
 * Serial port -1 is the USB emulated serial port, if available.
 * Note: The first serial port (-1 or 0) will always be used by the Arduino bootloader.
 *
 * :[-1, 0, 1, 2, 3, 4, 5, 6, 7]
 */
#define SERIAL_PORT -1

/**
 * Serial Port Baud Rate
 * This is the default communication speed for all serial ports.
 * Set the baud rate defaults for additional serial ports below.
 *
 * 250000 works in most cases, but you might try a lower speed if
 * you commonly experience drop-outs during host printing.
 * You may try up to 1000000 to speed up SD file transfer.
 *
 * :[2400, 9600, 19200, 38400, 57600, 115200, 250000, 500000, 1000000]
 */
#define BAUDRATE 250000

//#define BAUD_RATE_GCODE     // Enable G-code M575 to set the baud rate

/**
 * Select a secondary serial port on the board to use for communication with the host.
 * Currently Ethernet (-2) is only supported on Teensy 4.1 boards.
 * :[-2, -1, 0, 1, 2, 3, 4, 5, 6, 7]
 */
//#define SERIAL_PORT_2 -1
//#define BAUDRATE_2 250000   // :[2400, 9600, 19200, 38400, 57600, 115200, 250000, 500000, 1000000] Enable to override BAUDRATE

/**
 * Select a third serial port on the board to use for communication with the host.
 * Currently only supported for AVR, DUE, LPC1768/9 and STM32/STM32F1
 * :[-1, 0, 1, 2, 3, 4, 5, 6, 7]
 */
//#define SERIAL_PORT_3 1
//#define BAUDRATE_3 250000   // :[2400, 9600, 19200, 38400, 57600, 115200, 250000, 500000, 1000000] Enable to override BAUDRATE

// Enable the Bluetooth serial interface on AT90USB devices
//#define BLUETOOTH

// Name displayed in the LCD ""Ready"" message and Info menu
//#define CUSTOM_MACHINE_NAME ""3D Printer""

// Printer's unique ID, used by some programs to differentiate between machines.
// Choose your own or use a service like https://www.uuidgenerator.net/version4
//#define MACHINE_UUID ""00000000-0000-0000-0000-000000000000""

// @section stepper drivers

/**
 * Stepper Drivers
 *
 * These settings allow Marlin to tune stepper driver timing and enable advanced options for
 * stepper drivers that support them. You may also override timing options in Configuration_adv.h.
 *
 * Use TMC2208/TMC2208_STANDALONE for TMC2225 drivers and TMC2209/TMC2209_STANDALONE for TMC2226 drivers.
 *
 * Options: A4988, A5984, DRV8825, LV8729, TB6560, TB6600, TMC2100,
 *          TMC2130, TMC2130_STANDALONE, TMC2160, TMC2160_STANDALONE,
 *          TMC2208, TMC2208_STANDALONE, TMC2209, TMC2209_STANDALONE,
 *          TMC26X,  TMC26X_STANDALONE,  TMC2660, TMC2660_STANDALONE,
 *          TMC5130, TMC5130_STANDALONE, TMC5160, TMC5160_STANDALONE
 * :['A4988', 'A5984', 'DRV8825', 'LV8729', 'TB6560', 'TB6600', 'TMC2100', 'TMC2130', 'TMC2130_STANDALONE', 'TMC2160', 'TMC2160_STANDALONE', 'TMC2208', 'TMC2208_STANDALONE', 'TMC2209', 'TMC2209_STANDALONE', 'TMC26X', 'TMC26X_STANDALONE', 'TMC2660', 'TMC2660_STANDALONE', 'TMC5130', 'TMC5130_STANDALONE', 'TMC5160', 'TMC5160_STANDALONE']
 */
#define X_DRIVER_TYPE  TMC2209
#define Y_DRIVER_TYPE  TMC2209
#define Z_DRIVER_TYPE  TMC2209
//#define X2_DRIVER_TYPE A4988
#define Y2_DRIVER_TYPE TMC2209
//#define Z2_DRIVER_TYPE A4988
//#define Z3_DRIVER_TYPE A4988
//#define Z4_DRIVER_TYPE A4988
//#define I_DRIVER_TYPE  A4988
//#define J_DRIVER_TYPE  A4988
//#define K_DRIVER_TYPE  A4988
//#define U_DRIVER_TYPE  A4988
//#define V_DRIVER_TYPE  A4988
//#define W_DRIVER_TYPE  A4988
#define E0_DRIVER_TYPE TMC2209
//#define E1_DRIVER_TYPE A4988
//#define E2_DRIVER_TYPE A4988
//#define E3_DRIVER_TYPE A4988
//#define E4_DRIVER_TYPE A4988
//#define E5_DRIVER_TYPE A4988
//#define E6_DRIVER_TYPE A4988
//#define E7_DRIVER_TYPE A4988

/**
 * Additional Axis Settings
 *
 * Define AXISn_ROTATES for all axes that rotate or pivot.
 * Rotational axis coordinates are expressed in degrees.
 *
 * AXISn_NAME defines the letter used to refer to the axis in (most) G-code commands.
 * By convention the names and roles are typically:
 *   'A' : Rotational axis parallel to X
 *   'B' : Rotational axis parallel to Y
 *   'C' : Rotational axis parallel to Z
 *   'U' : Secondary linear axis parallel to X
 *   'V' : Secondary linear axis parallel to Y
 *   'W' : Secondary linear axis parallel to Z
 *
 * Regardless of these settings the axes are internally named I, J, K, U, V, W.
 */
#ifdef I_DRIVER_TYPE
  #define AXIS4_NAME 'A' // :['A', 'B', 'C', 'U', 'V', 'W']
  #define AXIS4_ROTATES
#endif
#ifdef J_DRIVER_TYPE
  #define AXIS5_NAME 'B' // :['B', 'C', 'U', 'V', 'W']
  #define AXIS5_ROTATES
#endif
#ifdef K_DRIVER_TYPE
  #define AXIS6_NAME 'C' // :['C', 'U', 'V', 'W']
  #define AXIS6_ROTATES
#endif
#ifdef U_DRIVER_TYPE
  #define AXIS7_NAME 'U' // :['U', 'V', 'W']
  //#define AXIS7_ROTATES
#endif
#ifdef V_DRIVER_TYPE
  #define AXIS8_NAME 'V' // :['V', 'W']
  //#define AXIS8_ROTATES
#endif
#ifdef W_DRIVER_TYPE
  #define AXIS9_NAME 'W' // :['W']
  //#define AXIS9_ROTATES
#endif

// @section extruder

// This defines the number of extruders
// :[0, 1, 2, 3, 4, 5, 6, 7, 8]
#define EXTRUDERS 1

// Generally expected filament diameter (1.75, 2.85, 3.0, ...). Used for Volumetric, Filament Width Sensor, etc.
#define DEFAULT_NOMINAL_FILAMENT_DIA 1.75

// For Cyclops or any ""multi-extruder"" that shares a single nozzle.
//#define SINGLENOZZLE

// Save and restore temperature and fan speed on tool-change.
// Set standby for the unselected tool with M104/106/109 T...
#if ENABLED(SINGLENOZZLE)
  //#define SINGLENOZZLE_STANDBY_TEMP
  //#define SINGLENOZZLE_STANDBY_FAN
#endif

// A dual extruder that uses a single stepper motor
//#define SWITCHING_EXTRUDER
#if ENABLED(SWITCHING_EXTRUDER)
  #define SWITCHING_EXTRUDER_SERVO_NR 0
  #define SWITCHING_EXTRUDER_SERVO_ANGLES { 0, 90 } // Angles for E0, E1[, E2, E3]
  #if EXTRUDERS > 3
    #define SWITCHING_EXTRUDER_E23_SERVO_NR 1
  #endif
#endif

// A dual-nozzle that uses a servomotor to raise/lower one (or both) of the nozzles
//#define SWITCHING_NOZZLE
#if ENABLED(SWITCHING_NOZZLE)
  #define SWITCHING_NOZZLE_SERVO_NR 0
  //#define SWITCHING_NOZZLE_E1_SERVO_NR 1          // If two servos are used, the index of the second
  #define SWITCHING_NOZZLE_SERVO_ANGLES { 0, 90 }   // A pair of angles for { E0, E1 }.
                                                    // For Dual Servo use two pairs: { { lower, raise }, { lower, raise } }
  #define SWITCHING_NOZZLE_SERVO_DWELL 2500         // Dwell time to wait for servo to make physical move
#endif

/**
 * Two separate X-carriages with extruders that connect to a moving part
 * via a solenoid docking mechanism. Requires SOL1_PIN and SOL2_PIN.
 */
//#define PARKING_EXTRUDER

/**
 * Two separate X-carriages with extruders that connect to a moving part
 * via a magnetic docking mechanism using movements and no solenoid
 *
 * project   : https://www.thingiverse.com/thing:3080893
 * movements : https://youtu.be/0xCEiG9VS3k
 *             https://youtu.be/Bqbcs0CU2FE
 */
//#define MAGNETIC_PARKING_EXTRUDER

#if EITHER(PARKING_EXTRUDER, MAGNETIC_PARKING_EXTRUDER)

  #define PARKING_EXTRUDER_PARKING_X { -78, 184 }     // X positions for parking the extruders
  #define PARKING_EXTRUDER_GRAB_DISTANCE 1            // (mm) Distance to move beyond the parking point to grab the extruder

  #if ENABLED(PARKING_EXTRUDER)

    #define PARKING_EXTRUDER_SOLENOIDS_INVERT           // If enabled, the solenoid is NOT magnetized with applied voltage
    #define PARKING_EXTRUDER_SOLENOIDS_PINS_ACTIVE LOW  // LOW or HIGH pin signal energizes the coil
    #define PARKING_EXTRUDER_SOLENOIDS_DELAY 250        // (ms) Delay for magnetic field. No delay if 0 or not defined.
    //#define MANUAL_SOLENOID_CONTROL                   // Manual control of docking solenoids with M380 S / M381

  #elif ENABLED(MAGNETIC_PARKING_EXTRUDER)

    #define MPE_FAST_SPEED      9000      // (mm/min) Speed for travel before last distance point
    #define MPE_SLOW_SPEED      4500      // (mm/min) Speed for last distance travel to park and couple
    #define MPE_TRAVEL_DISTANCE   10      // (mm) Last distance point
    #define MPE_COMPENSATION       0      // Offset Compensation -1 , 0 , 1 (multiplier) only for coupling

  #endif

#endif

/**
 * Switching Toolhead
 *
 * Support for swappable and dockable toolheads, such as
 * the E3D Tool Changer. Toolheads are locked with a servo.
 */
//#define SWITCHING_TOOLHEAD

/**
 * Magnetic Switching Toolhead
 *
 * Support swappable and dockable toolheads with a magnetic
 * docking mechanism using movement and no servo.
 */
//#define MAGNETIC_SWITCHING_TOOLHEAD

/**
 * Electromagnetic Switching Toolhead
 *
 * Parking for CoreXY / HBot kinematics.
 * Toolheads are parked at one edge and held with an electromagnet.
 * Supports more than 2 Toolheads. See https://youtu.be/JolbsAKTKf4
 */
//#define ELECTROMAGNETIC_SWITCHING_TOOLHEAD

#if ANY(SWITCHING_TOOLHEAD, MAGNETIC_SWITCHING_TOOLHEAD, ELECTROMAGNETIC_SWITCHING_TOOLHEAD)
  #define SWITCHING_TOOLHEAD_Y_POS          235         // (mm) Y position of the toolhead dock
  #define SWITCHING_TOOLHEAD_Y_SECURITY      10         // (mm) Security distance Y axis
  #define SWITCHING_TOOLHEAD_Y_CLEAR         60         // (mm) Minimum distance from dock for unobstructed X axis
  #define SWITCHING_TOOLHEAD_X_POS          { 215, 0 }  // (mm) X positions for parking the extruders
  #if ENABLED(SWITCHING_TOOLHEAD)
    #define SWITCHING_TOOLHEAD_SERVO_NR       2         // Index of the servo connector
    #define SWITCHING_TOOLHEAD_SERVO_ANGLES { 0, 180 }  // (degrees) Angles for Lock, Unlock
  #elif ENABLED(MAGNETIC_SWITCHING_TOOLHEAD)
    #define SWITCHING_TOOLHEAD_Y_RELEASE      5         // (mm) Security distance Y axis
    #define SWITCHING_TOOLHEAD_X_SECURITY   { 90, 150 } // (mm) Security distance X axis (T0,T1)
    //#define PRIME_BEFORE_REMOVE                       // Prime the nozzle before release from the dock
    #if ENABLED(PRIME_BEFORE_REMOVE)
      #define SWITCHING_TOOLHEAD_PRIME_MM           20  // (mm)   Extruder prime length
      #define SWITCHING_TOOLHEAD_RETRACT_MM         10  // (mm)   Retract after priming length
      #define SWITCHING_TOOLHEAD_PRIME_FEEDRATE    300  // (mm/min) Extruder prime feedrate
      #define SWITCHING_TOOLHEAD_RETRACT_FEEDRATE 2400  // (mm/min) Extruder retract feedrate
    #endif
  #elif ENABLED(ELECTROMAGNETIC_SWITCHING_TOOLHEAD)
    #define SWITCHING_TOOLHEAD_Z_HOP          2         // (mm) Z raise for switching
  #endif
#endif

/**
 * ""Mixing Extruder""
 *   - Adds G-codes M163 and M164 to set and ""commit"" the current mix factors.
 *   - Extends the stepping routines to move multiple steppers in proportion to the mix.
 *   - Optional support for Repetier Firmware's 'M164 S<index>' supporting virtual tools.
 *   - This implementation supports up to two mixing extruders.
 *   - Enable DIRECT_MIXING_IN_G1 for M165 and mixing in G1 (from Pia Taubert's reference implementation).
 */
//#define MIXING_EXTRUDER
#if ENABLED(MIXING_EXTRUDER)
  #define MIXING_STEPPERS 2        // Number of steppers in your mixing extruder
  #define MIXING_VIRTUAL_TOOLS 16  // Use the Virtual Tool method with M163 and M164
  //#define DIRECT_MIXING_IN_G1    // Allow ABCDHI mix factors in G1 movement commands
  //#define GRADIENT_MIX           // Support for gradient mixing with M166 and LCD
  //#define MIXING_PRESETS         // Assign 8 default V-tool presets for 2 or 3 MIXING_STEPPERS
  #if ENABLED(GRADIENT_MIX)
    //#define GRADIENT_VTOOL       // Add M166 T to use a V-tool index as a Gradient alias
  #endif
#endif

// Offset of the extruders (uncomment if using more than one and relying on firmware to position when changing).
// The offset has to be X=0, Y=0 for the extruder 0 hotend (default extruder).
// For the other hotends it is their distance from the extruder 0 hotend.
//#define HOTEND_OFFSET_X { 0.0, 20.00 } // (mm) relative X-offset for each nozzle
//#define HOTEND_OFFSET_Y { 0.0, 5.00 }  // (mm) relative Y-offset for each nozzle
//#define HOTEND_OFFSET_Z { 0.0, 0.00 }  // (mm) relative Z-offset for each nozzle

// @section multi-material

/**
 * Multi-Material Unit
 * Set to one of these predefined models:
 *
 *   PRUSA_MMU1           : Průša MMU1 (The ""multiplexer"" version)
 *   PRUSA_MMU2           : Průša MMU2
 *   PRUSA_MMU2S          : Průša MMU2S (Requires MK3S extruder with motion sensor, EXTRUDERS = 5)
 *   EXTENDABLE_EMU_MMU2  : MMU with configurable number of filaments (ERCF, SMuFF or similar with Průša MMU2 compatible firmware)
 *   EXTENDABLE_EMU_MMU2S : MMUS with configurable number of filaments (ERCF, SMuFF or similar with Průša MMU2 compatible firmware)
 *
 * Requires NOZZLE_PARK_FEATURE to park print head in case MMU unit fails.
 * See additional options in Configuration_adv.h.
 * :[""PRUSA_MMU1"", ""PRUSA_MMU2"", ""PRUSA_MMU2S"", ""EXTENDABLE_EMU_MMU2"", ""EXTENDABLE_EMU_MMU2S""]
 */
//#define MMU_MODEL PRUSA_MMU2

// @section psu control

/**
 * Power Supply Control
 *
 * Enable and connect the power supply to the PS_ON_PIN.
 * Specify whether the power supply is active HIGH or active LOW.
 */
//#define PSU_CONTROL
//#define PSU_NAME ""Power Supply""

#if ENABLED(PSU_CONTROL)
  //#define MKS_PWC                 // Using the MKS PWC add-on
  //#define PS_OFF_CONFIRM          // Confirm dialog when power off
  //#define PS_OFF_SOUND            // Beep 1s when power off
  #define PSU_ACTIVE_STATE LOW      // Set 'LOW' for ATX, 'HIGH' for X-Box

  //#define PSU_DEFAULT_OFF               // Keep power off until enabled directly with M80
  //#define PSU_POWERUP_DELAY      250    // (ms) Delay for the PSU to warm up to full power
  //#define LED_POWEROFF_TIMEOUT 10000    // (ms) Turn off LEDs after power-off, with this amount of delay

  //#define POWER_OFF_TIMER               // Enable M81 D<seconds> to power off after a delay
  //#define POWER_OFF_WAIT_FOR_COOLDOWN   // Enable M81 S to power off only after cooldown

  //#define PSU_POWERUP_GCODE  ""M355 S1""  // G-code to run after power-on (e.g., case light on)
  //#define PSU_POWEROFF_GCODE ""M355 S0""  // G-code to run before power-off (e.g., case light off)

  //#define AUTO_POWER_CONTROL      // Enable automatic control of the PS_ON pin
  #if ENABLED(AUTO_POWER_CONTROL)
    #define AUTO_POWER_FANS           // Turn on PSU for fans
    #define AUTO_POWER_E_FANS         // Turn on PSU for E Fans
    #define AUTO_POWER_CONTROLLERFAN  // Turn on PSU for Controller Fan
    #define AUTO_POWER_CHAMBER_FAN    // Turn on PSU for Chamber Fan
    #define AUTO_POWER_COOLER_FAN     // Turn on PSU for Cooler Fan
    #define POWER_TIMEOUT              30 // (s) Turn off power if the machine is idle for this duration
    //#define POWER_OFF_DELAY          60 // (s) Delay of poweroff after M81 command. Useful to let fans run for extra time.
  #endif
  #if EITHER(AUTO_POWER_CONTROL, POWER_OFF_WAIT_FOR_COOLDOWN)
    //#define AUTO_POWER_E_TEMP        50 // (°C) PSU on if any extruder is over this temperature
    //#define AUTO_POWER_CHAMBER_TEMP  30 // (°C) PSU on if the chamber is over this temperature
    //#define AUTO_POWER_COOLER_TEMP   26 // (°C) PSU on if the cooler is over this temperature
  #endif
#endif

//===========================================================================
//============================= Thermal Settings ============================
//===========================================================================
// @section temperature

/**
 * Temperature Sensors:
 *
 * NORMAL IS 4.7kΩ PULLUP! Hotend sensors can use 1kΩ pullup with correct resistor and table.
 *
 * ================================================================
 *  Analog Thermistors - 4.7kΩ pullup - Normal
 * ================================================================
 *     1 : 100kΩ EPCOS - Best choice for EPCOS thermistors
 *   331 : 100kΩ Same as #1, but 3.3V scaled for MEGA
 *   332 : 100kΩ Same as #1, but 3.3V scaled for DUE
 *     2 : 200kΩ ATC Semitec 204GT-2
 *   202 : 200kΩ Copymaster 3D
 *     3 : ???Ω  Mendel-parts thermistor
 *     4 : 10kΩ  Generic Thermistor !! DO NOT use for a hotend - it gives bad resolution at high temp. !!
 *     5 : 100kΩ ATC Semitec 104GT-2/104NT-4-R025H42G - Used in ParCan, J-Head, and E3D, SliceEngineering 300°C
 *   501 : 100kΩ Zonestar - Tronxy X3A
 *   502 : 100kΩ Zonestar - used by hot bed in Zonestar Průša P802M
 *   503 : 100kΩ Zonestar (Z8XM2) Heated Bed thermistor
 *   504 : 100kΩ Zonestar P802QR2 (Part# QWG-104F-B3950) Hotend Thermistor
 *   505 : 100kΩ Zonestar P802QR2 (Part# QWG-104F-3950) Bed Thermistor
 *   512 : 100kΩ RPW-Ultra hotend
 *     6 : 100kΩ EPCOS - Not as accurate as table #1 (created using a fluke thermocouple)
 *     7 : 100kΩ Honeywell 135-104LAG-J01
 *    71 : 100kΩ Honeywell 135-104LAF-J01
 *     8 : 100kΩ Vishay 0603 SMD NTCS0603E3104FXT
 *     9 : 100kΩ GE Sensing AL03006-58.2K-97-G1
 *    10 : 100kΩ RS PRO 198-961
 *    11 : 100kΩ Keenovo AC silicone mats, most Wanhao i3 machines - beta 3950, 1%
 *    12 : 100kΩ Vishay 0603 SMD NTCS0603E3104FXT (#8) - calibrated for Makibox hot bed
 *    13 : 100kΩ Hisens up to 300°C - for ""Simple ONE"" & ""All In ONE"" hotend - beta 3950, 1%
 *    14 : 100kΩ  (R25), 4092K (beta25), 4.7kΩ pull-up, bed thermistor as used in Ender-5 S1
 *    15 : 100kΩ Calibrated for JGAurora A5 hotend
 *    17 : 100kΩ Dagoma NTC white thermistor
 *    18 : 200kΩ ATC Semitec 204GT-2 Dagoma.Fr - MKS_Base_DKU001327
 *    22 : 100kΩ GTM32 Pro vB - hotend - 4.7kΩ pullup to 3.3V and 220Ω to analog input
 *    23 : 100kΩ GTM32 Pro vB - bed - 4.7kΩ pullup to 3.3v and 220Ω to analog input
 *    30 : 100kΩ Kis3d Silicone heating mat 200W/300W with 6mm precision cast plate (EN AW 5083) NTC100K - beta 3950
 *    60 : 100kΩ Maker's Tool Works Kapton Bed Thermistor - beta 3950
 *    61 : 100kΩ Formbot/Vivedino 350°C Thermistor - beta 3950
 *    66 : 4.7MΩ Dyze Design / Trianglelab T-D500 500°C High Temperature Thermistor
 *    67 : 500kΩ SliceEngineering 450°C Thermistor
 *    68 : PT100 Smplifier board from Dyze Design
 *    70 : 100kΩ bq Hephestos 2
 *    75 : 100kΩ Generic Silicon Heat Pad with NTC100K MGB18-104F39050L32
 *   666 : 200kΩ Einstart S custom thermistor with 10k pullup.
 *  2000 : 100kΩ Ultimachine Rambo TDK NTCG104LH104KT1 NTC100K motherboard Thermistor
 *
 * ================================================================
 *  Analog Thermistors - 1kΩ pullup
 *   Atypical, and requires changing out the 4.7kΩ pullup for 1kΩ.
 *   (but gives greater accuracy and more stable PID)
 * ================================================================
 *    51 : 100kΩ EPCOS (1kΩ pullup)
 *    52 : 200kΩ ATC Semitec 204GT-2 (1kΩ pullup)
 *    55 : 100kΩ ATC Semitec 104GT-2 - Used in ParCan & J-Head (1kΩ pullup)
 *
 * ================================================================
 *  Analog Thermistors - 10kΩ pullup - Atypical
 * ================================================================
 *    99 : 100kΩ Found on some Wanhao i3 machines with a 10kΩ pull-up resistor
 *
 * ================================================================
 *  Analog RTDs (Pt100/Pt1000)
 * ================================================================
 *   110 : Pt100  with 1kΩ pullup (atypical)
 *   147 : Pt100  with 4.7kΩ pullup
 *  1010 : Pt1000 with 1kΩ pullup (atypical)
 *  1022 : Pt1000 with 2.2kΩ pullup
 *  1047 : Pt1000 with 4.7kΩ pullup (E3D)
 *    20 : Pt100  with circuit in the Ultimainboard V2.x with mainboard ADC reference voltage = INA826 amplifier-board supply voltage.
 *                NOTE: (1) Must use an ADC input with no pullup. (2) Some INA826 amplifiers are unreliable at 3.3V so consider using sensor 147, 110, or 21.
 *    21 : Pt100  with circuit in the Ultimainboard V2.x with 3.3v ADC reference voltage (STM32, LPC176x....) and 5V INA826 amplifier board supply.
 *                NOTE: ADC pins are not 5V tolerant. Not recommended because it's possible to damage the CPU by going over 500°C.
 *   201 : Pt100  with circuit in Overlord, similar to Ultimainboard V2.x
 *
 * ================================================================
 *  SPI RTD/Thermocouple Boards
 * ================================================================
 *    -5 : MAX31865 with Pt100/Pt1000, 2, 3, or 4-wire  (only for sensors 0-2 and bed)
 *                  NOTE: You must uncomment/set the MAX31865_*_OHMS_n defines below.
 *    -3 : MAX31855 with Thermocouple, -200°C to +700°C (only for sensors 0-2 and bed)
 *    -2 : MAX6675  with Thermocouple, 0°C to +700°C    (only for sensors 0-2 and bed)
 *
 *  NOTE: Ensure TEMP_n_CS_PIN is set in your pins file for each TEMP_SENSOR_n using an SPI Thermocouple. By default,
 *        Hardware SPI on the default serial bus is used. If you have also set TEMP_n_SCK_PIN and TEMP_n_MISO_PIN,
 *        Software SPI will be used on those ports instead. You can force Hardware SPI on the default bus in the
 *        Configuration_adv.h file. At this time, separate Hardware SPI buses for sensors are not supported.
 *
 * ================================================================
 *  Analog Thermocouple Boards
 * ================================================================
 *    -4 : AD8495 with Thermocouple
 *    -1 : AD595  with Thermocouple
 *
 * ================================================================
 *  Custom/Dummy/Other Thermal Sensors
 * ================================================================
 *     0 : not used
 *  1000 : Custom - Specify parameters in Configuration_adv.h
 *
 *   !!! Use these for Testing or Development purposes. NEVER for production machine. !!!
 *   998 : Dummy Table that ALWAYS reads 25°C or the temperature defined below.
 *   999 : Dummy Table that ALWAYS reads 100°C or the temperature defined below.
 */
#define TEMP_SENSOR_0 1
#define TEMP_SENSOR_1 0
#define TEMP_SENSOR_2 0
#define TEMP_SENSOR_3 0
#define TEMP_SENSOR_4 0
#define TEMP_SENSOR_5 0
#define TEMP_SENSOR_6 0
#define TEMP_SENSOR_7 0
#define TEMP_SENSOR_BED 1
#define TEMP_SENSOR_PROBE 0
#define TEMP_SENSOR_CHAMBER 0
#define TEMP_SENSOR_COOLER 0
#define TEMP_SENSOR_BOARD 0
#define TEMP_SENSOR_REDUNDANT 0

// Dummy thermistor constant temperature readings, for use with 998 and 999
#define DUMMY_THERMISTOR_998_VALUE  25
#define DUMMY_THERMISTOR_999_VALUE 100

// Resistor values when using MAX31865 sensors (-5) on TEMP_SENSOR_0 / 1
#if TEMP_SENSOR_IS_MAX_TC(0)
  #define MAX31865_SENSOR_OHMS_0      100 // (Ω) Typically 100 or 1000 (PT100 or PT1000)
  #define MAX31865_CALIBRATION_OHMS_0 430 // (Ω) Typically 430 for Adafruit PT100; 4300 for Adafruit PT1000
#endif
#if TEMP_SENSOR_IS_MAX_TC(1)
  #define MAX31865_SENSOR_OHMS_1      100
  #define MAX31865_CALIBRATION_OHMS_1 430
#endif
#if TEMP_SENSOR_IS_MAX_TC(2)
  #define MAX31865_SENSOR_OHMS_2      100
  #define MAX31865_CALIBRATION_OHMS_2 430
#endif

#if HAS_E_TEMP_SENSOR
  #define TEMP_RESIDENCY_TIME         10  // (seconds) Time to wait for hotend to ""settle"" in M109
  #define TEMP_WINDOW                  1  // (°C) Temperature proximity for the ""temperature reached"" timer
  #define TEMP_HYSTERESIS              3  // (°C) Temperature proximity considered ""close enough"" to the target
#endif

#if TEMP_SENSOR_BED
  #define TEMP_BED_RESIDENCY_TIME     10  // (seconds) Time to wait for bed to ""settle"" in M190
  #define TEMP_BED_WINDOW              1  // (°C) Temperature proximity for the ""temperature reached"" timer
  #define TEMP_BED_HYSTERESIS          3  // (°C) Temperature proximity considered ""close enough"" to the target
#endif

#if TEMP_SENSOR_CHAMBER
  #define TEMP_CHAMBER_RESIDENCY_TIME 10  // (seconds) Time to wait for chamber to ""settle"" in M191
  #define TEMP_CHAMBER_WINDOW          1  // (°C) Temperature proximity for the ""temperature reached"" timer
  #define TEMP_CHAMBER_HYSTERESIS      3  // (°C) Temperature proximity considered ""close enough"" to the target
#endif

/**
 * Redundant Temperature Sensor (TEMP_SENSOR_REDUNDANT)
 *
 * Use a temp sensor as a redundant sensor for another reading. Select an unused temperature sensor, and another
 * sensor you'd like it to be redundant for. If the two thermistors differ by TEMP_SENSOR_REDUNDANT_MAX_DIFF (°C),
 * the print will be aborted. Whichever sensor is selected will have its normal functions disabled; i.e. selecting
 * the Bed sensor (-1) will disable bed heating/monitoring.
 *
 * For selecting source/target use: COOLER, PROBE, BOARD, CHAMBER, BED, E0, E1, E2, E3, E4, E5, E6, E7
 */
#if TEMP_SENSOR_REDUNDANT
  #define TEMP_SENSOR_REDUNDANT_SOURCE    E1  // The sensor that will provide the redundant reading.
  #define TEMP_SENSOR_REDUNDANT_TARGET    E0  // The sensor that we are providing a redundant reading for.
  #define TEMP_SENSOR_REDUNDANT_MAX_DIFF  10  // (°C) Temperature difference that will trigger a print abort.
#endif

// Below this temperature the heater will be switched off
// because it probably indicates a broken thermistor wire.
#define HEATER_0_MINTEMP   5
#define HEATER_1_MINTEMP   5
#define HEATER_2_MINTEMP   5
#define HEATER_3_MINTEMP   5
#define HEATER_4_MINTEMP   5
#define HEATER_5_MINTEMP   5
#define HEATER_6_MINTEMP   5
#define HEATER_7_MINTEMP   5
#define BED_MINTEMP        5
#define CHAMBER_MINTEMP    5

// Above this temperature the heater will be switched off.
// This can protect components from overheating, but NOT from shorts and failures.
// (Use MINTEMP for thermistor short/failure protection.)
#define HEATER_0_MAXTEMP 275
#define HEATER_1_MAXTEMP 275
#define HEATER_2_MAXTEMP 275
#define HEATER_3_MAXTEMP 275
#define HEATER_4_MAXTEMP 275
#define HEATER_5_MAXTEMP 275
#define HEATER_6_MAXTEMP 275
#define HEATER_7_MAXTEMP 275
#define BED_MAXTEMP      150
#define CHAMBER_MAXTEMP  60

/**
 * Thermal Overshoot
 * During heatup (and printing) the temperature can often ""overshoot"" the target by many degrees
 * (especially before PID tuning). Setting the target temperature too close to MAXTEMP guarantees
 * a MAXTEMP shutdown! Use these values to forbid temperatures being set too close to MAXTEMP.
 */
#define HOTEND_OVERSHOOT 15   // (°C) Forbid temperatures over MAXTEMP - OVERSHOOT
#define BED_OVERSHOOT    10   // (°C) Forbid temperatures over MAXTEMP - OVERSHOOT
#define COOLER_OVERSHOOT  2   // (°C) Forbid temperatures closer than OVERSHOOT

//===========================================================================
//============================= PID Settings ================================
//===========================================================================

// @section hotend temp

/**
 * Temperature Control
 *
 *  (NONE) : Bang-bang heating
 * PIDTEMP : PID temperature control (~4.1K)
 * MPCTEMP : Predictive Model temperature control. (~1.8K without auto-tune)
 */
#define PIDTEMP           // See the PID Tuning Guide at https://reprap.org/wiki/PID_Tuning
//#define MPCTEMP         // ** EXPERIMENTAL ** See https://marlinfw.org/docs/features/model_predictive_control.html

#define PID_MAX  255      // Limit hotend current while PID is active (see PID_FUNCTIONAL_RANGE below); 255=full current
#define PID_K1     0.95   // Smoothing factor within any PID loop

#if ENABLED(PIDTEMP)
  //#define PID_DEBUG             // Print PID debug data to the serial port. Use 'M303 D' to toggle activation.
  //#define PID_PARAMS_PER_HOTEND // Use separate PID parameters for each extruder (useful for mismatched extruders)
                                  // Set/get with G-code: M301 E[extruder number, 0-2]

  #if ENABLED(PID_PARAMS_PER_HOTEND)
    // Specify up to one value per hotend here, according to your setup.
    // If there are fewer values, the last one applies to the remaining hotends.
    #define DEFAULT_Kp_LIST {  22.20,  22.20 }
    #define DEFAULT_Ki_LIST {   1.08,   1.08 }
    #define DEFAULT_Kd_LIST { 114.00, 114.00 }
  #else
    #define DEFAULT_Kp  22.20
    #define DEFAULT_Ki   1.08
    #define DEFAULT_Kd 114.00
  #endif
#else
  #define BANG_MAX 255    // Limit hotend current while in bang-bang mode; 255=full current
#endif

/**
 * Model Predictive Control for hotend
 *
 * Use a physical model of the hotend to control temperature. When configured correctly this gives
 * better responsiveness and stability than PID and removes the need for PID_EXTRUSION_SCALING
 * and PID_FAN_SCALING. Use M306 T to autotune the model.
 * @section mpctemp
 */
#if ENABLED(MPCTEMP)
  //#define MPC_EDIT_MENU                             // Add MPC editing to the ""Advanced Settings"" menu. (~1.3K bytes of flash)
  //#define MPC_AUTOTUNE_MENU                         // Add MPC auto-tuning to the ""Advanced Settings"" menu. (~350 bytes of flash)

  #define MPC_MAX 255                                 // (0..255) Current to nozzle while MPC is active.
  #define MPC_HEATER_POWER { 40.0f }                  // (W) Heat cartridge powers.

  #define MPC_INCLUDE_FAN                             // Model the fan speed?

  // Measured physical constants from M306
  #define MPC_BLOCK_HEAT_CAPACITY { 16.7f }           // (J/K) Heat block heat capacities.
  #define MPC_SENSOR_RESPONSIVENESS { 0.22f }         // (K/s per ∆K) Rate of change of sensor temperature from heat block.
  #define MPC_AMBIENT_XFER_COEFF { 0.068f }           // (W/K) Heat transfer coefficients from heat block to room air with fan off.
  #if ENABLED(MPC_INCLUDE_FAN)
    #define MPC_AMBIENT_XFER_COEFF_FAN255 { 0.097f }  // (W/K) Heat transfer coefficients from heat block to room air with fan on full.
  #endif

  // For one fan and multiple hotends MPC needs to know how to apply the fan cooling effect.
  #if ENABLED(MPC_INCLUDE_FAN)
    //#define MPC_FAN_0_ALL_HOTENDS
    //#define MPC_FAN_0_ACTIVE_HOTEND
  #endif

  // Filament Heat Capacity (joules/kelvin/mm)
  // Set at runtime with M306 H<value>
  #define FILAMENT_HEAT_CAPACITY_PERMM { 5.6e-3f }    // 0.0056 J/K/mm for 1.75mm PLA (0.0149 J/K/mm for 2.85mm PLA).
                                                      // 0.0036 J/K/mm for 1.75mm PETG (0.0094 J/K/mm for 2.85mm PETG).
                                                      // 0.00515 J/K/mm for 1.75mm ABS (0.0137 J/K/mm for 2.85mm ABS).
                                                      // 0.00522 J/K/mm for 1.75mm Nylon (0.0138 J/K/mm for 2.85mm Nylon).

  // Advanced options
  #define MPC_SMOOTHING_FACTOR 0.5f                   // (0.0...1.0) Noisy temperature sensors may need a lower value for stabilization.
  #define MPC_MIN_AMBIENT_CHANGE 1.0f                 // (K/s) Modeled ambient temperature rate of change, when correcting model inaccuracies.
  #define MPC_STEADYSTATE 0.5f                        // (K/s) Temperature change rate for steady state logic to be enforced.

  #define MPC_TUNING_POS { X_CENTER, Y_CENTER, 1.0f } // (mm) M306 Autotuning position, ideally bed center at first layer height.
  #define MPC_TUNING_END_Z 10.0f                      // (mm) M306 Autotuning final Z position.
#endif

//===========================================================================
//====================== PID > Bed Temperature Control ======================
//===========================================================================

// @section bed temp

/**
 * Max Bed Power
 * Applies to all forms of bed control (PID, bang-bang, and bang-bang with hysteresis).
 * When set to any value below 255, enables a form of PWM to the bed that acts like a divider
 * so don't use it unless you are OK with PWM on your bed. (See the comment on enabling PIDTEMPBED)
 */
#define MAX_BED_POWER 255 // limits duty cycle to bed; 255=full current

/**
 * PID Bed Heating
 *
 * The PID frequency will be the same as the extruder PWM.
 * If PID_dT is the default, and correct for the hardware/configuration, that means 7.689Hz,
 * which is fine for driving a square wave into a resistive load and does not significantly
 * impact FET heating. This also works fine on a Fotek SSR-10DA Solid State Relay into a 250W
 * heater. If your configuration is significantly different than this and you don't understand
 * the issues involved, don't use bed PID until someone else verifies that your hardware works.
 *
 * With this option disabled, bang-bang will be used. BED_LIMIT_SWITCHING enables hysteresis.
 */
//#define PIDTEMPBED

#if ENABLED(PIDTEMPBED)
  //#define MIN_BED_POWER 0
  //#define PID_BED_DEBUG // Print Bed PID debug data to the serial port.

  // 120V 250W silicone heater into 4mm borosilicate (MendelMax 1.5+)
  // from FOPDT model - kp=.39 Tp=405 Tdead=66, Tc set to 79.2, aggressive factor of .15 (vs .1, 1, 10)
  #define DEFAULT_bedKp 10.00
  #define DEFAULT_bedKi .023
  #define DEFAULT_bedKd 305.4

  // FIND YOUR OWN: ""M303 E-1 C8 S90"" to run autotune on the bed at 90 degreesC for 8 cycles.
#else
  //#define BED_LIMIT_SWITCHING   // Keep the bed temperature within BED_HYSTERESIS of the target
#endif

//===========================================================================
//==================== PID > Chamber Temperature Control ====================
//===========================================================================

/**
 * PID Chamber Heating
 *
 * If this option is enabled set PID constants below.
 * If this option is disabled, bang-bang will be used and CHAMBER_LIMIT_SWITCHING will enable
 * hysteresis.
 *
 * The PID frequency will be the same as the extruder PWM.
 * If PID_dT is the default, and correct for the hardware/configuration, that means 7.689Hz,
 * which is fine for driving a square wave into a resistive load and does not significantly
 * impact FET heating. This also works fine on a Fotek SSR-10DA Solid State Relay into a 200W
 * heater. If your configuration is significantly different than this and you don't understand
 * the issues involved, don't use chamber PID until someone else verifies that your hardware works.
 * @section chamber temp
 */
//#define PIDTEMPCHAMBER
//#define CHAMBER_LIMIT_SWITCHING

/**
 * Max Chamber Power
 * Applies to all forms of chamber control (PID, bang-bang, and bang-bang with hysteresis).
 * When set to any value below 255, enables a form of PWM to the chamber heater that acts like a divider
 * so don't use it unless you are OK with PWM on your heater. (See the comment on enabling PIDTEMPCHAMBER)
 */
#define MAX_CHAMBER_POWER 255 // limits duty cycle to chamber heater; 255=full current

#if ENABLED(PIDTEMPCHAMBER)
  #define MIN_CHAMBER_POWER 0
  //#define PID_CHAMBER_DEBUG // Print Chamber PID debug data to the serial port.

  // Lasko ""MyHeat Personal Heater"" (200w) modified with a Fotek SSR-10DA to control only the heating element
  // and placed inside the small Creality printer enclosure tent.
  //
  #define DEFAULT_chamberKp 37.04
  #define DEFAULT_chamberKi 1.40
  #define DEFAULT_chamberKd 655.17
  // M309 P37.04 I1.04 D655.17

  // FIND YOUR OWN: ""M303 E-2 C8 S50"" to run autotune on the chamber at 50 degreesC for 8 cycles.
#endif // PIDTEMPCHAMBER

#if ANY(PIDTEMP, PIDTEMPBED, PIDTEMPCHAMBER)
  //#define PID_OPENLOOP          // Puts PID in open loop. M104/M140 sets the output power from 0 to PID_MAX
  //#define SLOW_PWM_HEATERS      // PWM with very low frequency (roughly 0.125Hz=8s) and minimum state time of approximately 1s useful for heaters driven by a relay
  #define PID_FUNCTIONAL_RANGE 10 // If the temperature difference between the target temperature and the actual temperature
                                  // is more than PID_FUNCTIONAL_RANGE then the PID will be shut off and the heater will be set to min/max.

  //#define PID_EDIT_MENU         // Add PID editing to the ""Advanced Settings"" menu. (~700 bytes of flash)
  //#define PID_AUTOTUNE_MENU     // Add PID auto-tuning to the ""Advanced Settings"" menu. (~250 bytes of flash)
#endif

// @section safety

/**
 * Prevent extrusion if the temperature is below EXTRUDE_MINTEMP.
 * Add M302 to set the minimum extrusion temperature and/or turn
 * cold extrusion prevention on and off.
 *
 * *** IT IS HIGHLY RECOMMENDED TO LEAVE THIS OPTION ENABLED! ***
 */
#define PREVENT_COLD_EXTRUSION
#define EXTRUDE_MINTEMP 170

/**
 * Prevent a single extrusion longer than EXTRUDE_MAXLENGTH.
 * Note: For Bowden Extruders make this large enough to allow load/unload.
 */
#define PREVENT_LENGTHY_EXTRUDE
#define EXTRUDE_MAXLENGTH 200

//===========================================================================
//======================== Thermal Runaway Protection =======================
//===========================================================================

/**
 * Thermal Protection provides additional protection to your printer from damage
 * and fire. Marlin always includes safe min and max temperature ranges which
 * protect against a broken or disconnected thermistor wire.
 *
 * The issue: If a thermistor falls out, it will report the much lower
 * temperature of the air in the room, and the the firmware will keep
 * the heater on.
 *
 * If you get ""Thermal Runaway"" or ""Heating failed"" errors the
 * details can be tuned in Configuration_adv.h
 */

#define THERMAL_PROTECTION_HOTENDS // Enable thermal protection for all extruders
#define THERMAL_PROTECTION_BED     // Enable thermal protection for the heated bed
#define THERMAL_PROTECTION_CHAMBER // Enable thermal protection for the heated chamber
#define THERMAL_PROTECTION_COOLER  // Enable thermal protection for the laser cooling

//===========================================================================
//============================= Mechanical Settings =========================
//===========================================================================

// @section machine

// Enable one of the options below for CoreXY, CoreXZ, or CoreYZ kinematics,
// either in the usual order or reversed
//#define COREXY
//#define COREXZ
//#define COREYZ
//#define COREYX
//#define COREZX
//#define COREZY

//
// MarkForged Kinematics
// See https://reprap.org/forum/read.php?152,504042
//
//#define MARKFORGED_XY
//#define MARKFORGED_YX

// Enable for a belt style printer with endless ""Z"" motion
#define BELTPRINTER

// Enable for Polargraph Kinematics
//#define POLARGRAPH
#if ENABLED(POLARGRAPH)
  #define POLARGRAPH_MAX_BELT_LEN  1035.0 // (mm) Belt length at full extension. Override with M665 H.
  #define DEFAULT_SEGMENTS_PER_SECOND 5   // Move segmentation based on duration
#endif

// @section delta

// Enable for DELTA kinematics and configure below
//#define DELTA
#if ENABLED(DELTA)

  // Make delta curves from many straight lines (linear interpolation).
  // This is a trade-off between visible corners (not enough segments)
  // and processor overload (too many expensive sqrt calls).
  #define DEFAULT_SEGMENTS_PER_SECOND 200

  // After homing move down to a height where XY movement is unconstrained
  //#define DELTA_HOME_TO_SAFE_ZONE

  // Delta calibration menu
  // Add three-point calibration to the MarlinUI menu.
  // See http://minow.blogspot.com/index.html#4918805519571907051
  //#define DELTA_CALIBRATION_MENU

  // G33 Delta Auto-Calibration. Enable EEPROM_SETTINGS to store results.
  //#define DELTA_AUTO_CALIBRATION

  #if ENABLED(DELTA_AUTO_CALIBRATION)
    // Default number of probe points : n*n (1 -> 7)
    #define DELTA_CALIBRATION_DEFAULT_POINTS 4
  #endif

  #if EITHER(DELTA_AUTO_CALIBRATION, DELTA_CALIBRATION_MENU)
    // Step size for paper-test probing
    #define PROBE_MANUALLY_STEP 0.05      // (mm)
  #endif

  // Print surface diameter/2 minus unreachable space (avoid collisions with vertical towers).
  #define DELTA_PRINTABLE_RADIUS 140.0    // (mm)

  // Maximum reachable area
  #define DELTA_MAX_RADIUS       140.0    // (mm)

  // Center-to-center distance of the holes in the diagonal push rods.
  #define DELTA_DIAGONAL_ROD 250.0        // (mm)

  // Distance between bed and nozzle Z home position
  #define DELTA_HEIGHT 250.00             // (mm) Get this value from G33 auto calibrate

  #define DELTA_ENDSTOP_ADJ { 0.0, 0.0, 0.0 } // (mm) Get these values from G33 auto calibrate

  // Horizontal distance bridged by diagonal push rods when effector is centered.
  #define DELTA_RADIUS 124.0              // (mm) Get this value from G33 auto calibrate

  // Trim adjustments for individual towers
  // tower angle corrections for X and Y tower / rotate XYZ so Z tower angle = 0
  // measured in degrees anticlockwise looking from above the printer
  #define DELTA_TOWER_ANGLE_TRIM { 0.0, 0.0, 0.0 } // (mm) Get these values from G33 auto calibrate

  // Delta radius and diagonal rod adjustments
  //#define DELTA_RADIUS_TRIM_TOWER       { 0.0, 0.0, 0.0 } // (mm)
  //#define DELTA_DIAGONAL_ROD_TRIM_TOWER { 0.0, 0.0, 0.0 } // (mm)
#endif

// @section scara

/**
 * MORGAN_SCARA was developed by QHARLEY in South Africa in 2012-2013.
 * Implemented and slightly reworked by JCERNY in June, 2014.
 *
 * Mostly Printed SCARA is an open source design by Tyler Williams. See:
 *   https://www.thingiverse.com/thing:2487048
 *   https://www.thingiverse.com/thing:1241491
 */
//#define MORGAN_SCARA
//#define MP_SCARA
#if EITHER(MORGAN_SCARA, MP_SCARA)
  // If movement is choppy try lowering this value
  #define DEFAULT_SEGMENTS_PER_SECOND 200

  // Length of inner and outer support arms. Measure arm lengths precisely.
  #define SCARA_LINKAGE_1 150       // (mm)
  #define SCARA_LINKAGE_2 150       // (mm)

  // SCARA tower offset (position of Tower relative to bed zero position)
  // This needs to be reasonably accurate as it defines the printbed position in the SCARA space.
  #define SCARA_OFFSET_X  100       // (mm)
  #define SCARA_OFFSET_Y  -56       // (mm)

  #if ENABLED(MORGAN_SCARA)

    //#define DEBUG_SCARA_KINEMATICS
    #define SCARA_FEEDRATE_SCALING  // Convert XY feedrate from mm/s to degrees/s on the fly

    // Radius around the center where the arm cannot reach
    #define MIDDLE_DEAD_ZONE_R   0  // (mm)

    #define THETA_HOMING_OFFSET  0  // Calculated from Calibration Guide and M360 / M114. See https://www.morgan3dp.com/morgan-calibration-guide/
    #define PSI_HOMING_OFFSET    0  // Calculated from Calibration Guide and M364 / M114. See https://www.morgan3dp.com/morgan-calibration-guide/

  #elif ENABLED(MP_SCARA)

    #define SCARA_OFFSET_THETA1  12 // degrees
    #define SCARA_OFFSET_THETA2 131 // degrees

  #endif

#endif

// @section tpara

// Enable for TPARA kinematics and configure below
//#define AXEL_TPARA
#if ENABLED(AXEL_TPARA)
  #define DEBUG_TPARA_KINEMATICS
  #define DEFAULT_SEGMENTS_PER_SECOND 200

  // Length of inner and outer support arms. Measure arm lengths precisely.
  #define TPARA_LINKAGE_1 120       // (mm)
  #define TPARA_LINKAGE_2 120       // (mm)

  // SCARA tower offset (position of Tower relative to bed zero position)
  // This needs to be reasonably accurate as it defines the printbed position in the SCARA space.
  #define TPARA_OFFSET_X    0       // (mm)
  #define TPARA_OFFSET_Y    0       // (mm)
  #define TPARA_OFFSET_Z    0       // (mm)

  #define SCARA_FEEDRATE_SCALING  // Convert XY feedrate from mm/s to degrees/s on the fly

  // Radius around the center where the arm cannot reach
  #define MIDDLE_DEAD_ZONE_R   0  // (mm)

  // Calculated from Calibration Guide and M360 / M114. See https://www.morgan3dp.com/morgan-calibration-guide/
  #define THETA_HOMING_OFFSET  0
  #define PSI_HOMING_OFFSET    0
#endif

// @section machine

// Articulated robot (arm). Joints are directly mapped to axes with no kinematics.
//#define ARTICULATED_ROBOT_ARM

// For a hot wire cutter with parallel horizontal axes (X, I) where the heights of the two wire
// ends are controlled by parallel axes (Y, J). Joints are directly mapped to axes (no kinematics).
//#define FOAMCUTTER_XYUV

//===========================================================================
//============================== Endstop Settings ===========================
//===========================================================================

// @section endstops

// Specify here all the endstop connectors that are connected to any endstop or probe.
// Almost all printers will be using one per axis. Probes will use one or more of the
// extra connectors. Leave undefined any used for non-endstop and non-probe purposes.
#define USE_XMIN_PLUG
#define USE_YMIN_PLUG
#define USE_ZMIN_PLUG
//#define USE_IMIN_PLUG
//#define USE_JMIN_PLUG
//#define USE_KMIN_PLUG
//#define USE_UMIN_PLUG
//#define USE_VMIN_PLUG
//#define USE_WMIN_PLUG
//#define USE_XMAX_PLUG
//#define USE_YMAX_PLUG
//#define USE_ZMAX_PLUG
//#define USE_IMAX_PLUG
//#define USE_JMAX_PLUG
//#define USE_KMAX_PLUG
//#define USE_UMAX_PLUG
//#define USE_VMAX_PLUG
//#define USE_WMAX_PLUG

// Enable pullup for all endstops to prevent a floating state
#define ENDSTOPPULLUPS
#if DISABLED(ENDSTOPPULLUPS)
  // Disable ENDSTOPPULLUPS to set pullups individually
  //#define ENDSTOPPULLUP_XMIN
  //#define ENDSTOPPULLUP_YMIN
  //#define ENDSTOPPULLUP_ZMIN
  //#define ENDSTOPPULLUP_IMIN
  //#define ENDSTOPPULLUP_JMIN
  //#define ENDSTOPPULLUP_KMIN
  //#define ENDSTOPPULLUP_UMIN
  //#define ENDSTOPPULLUP_VMIN
  //#define ENDSTOPPULLUP_WMIN
  //#define ENDSTOPPULLUP_XMAX
  //#define ENDSTOPPULLUP_YMAX
  //#define ENDSTOPPULLUP_ZMAX
  //#define ENDSTOPPULLUP_IMAX
  //#define ENDSTOPPULLUP_JMAX
  //#define ENDSTOPPULLUP_KMAX
  //#define ENDSTOPPULLUP_UMAX
  //#define ENDSTOPPULLUP_VMAX
  //#define ENDSTOPPULLUP_WMAX
  //#define ENDSTOPPULLUP_ZMIN_PROBE
#endif

// Enable pulldown for all endstops to prevent a floating state
//#define ENDSTOPPULLDOWNS
#if DISABLED(ENDSTOPPULLDOWNS)
  // Disable ENDSTOPPULLDOWNS to set pulldowns individually
  //#define ENDSTOPPULLDOWN_XMIN
  //#define ENDSTOPPULLDOWN_YMIN
  //#define ENDSTOPPULLDOWN_ZMIN
  //#define ENDSTOPPULLDOWN_IMIN
  //#define ENDSTOPPULLDOWN_JMIN
  //#define ENDSTOPPULLDOWN_KMIN
  //#define ENDSTOPPULLDOWN_UMIN
  //#define ENDSTOPPULLDOWN_VMIN
  //#define ENDSTOPPULLDOWN_WMIN
  //#define ENDSTOPPULLDOWN_XMAX
  //#define ENDSTOPPULLDOWN_YMAX
  //#define ENDSTOPPULLDOWN_ZMAX
  //#define ENDSTOPPULLDOWN_IMAX
  //#define ENDSTOPPULLDOWN_JMAX
  //#define ENDSTOPPULLDOWN_KMAX
  //#define ENDSTOPPULLDOWN_UMAX
  //#define ENDSTOPPULLDOWN_VMAX
  //#define ENDSTOPPULLDOWN_WMAX
  //#define ENDSTOPPULLDOWN_ZMIN_PROBE
#endif

// Mechanical endstop with COM to ground and NC to Signal uses ""false"" here (most common setup).
#define X_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define Y_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define Z_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define I_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define J_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define K_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define U_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define V_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define W_MIN_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define X_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define Y_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define Z_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define I_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define J_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define K_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define U_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define V_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define W_MAX_ENDSTOP_INVERTING false // Set to true to invert the logic of the endstop.
#define Z_MIN_PROBE_ENDSTOP_INVERTING false // Set to true to invert the logic of the probe.

// Enable this feature if all enabled endstop pins are interrupt-capable.
// This will remove the need to poll the interrupt pins, saving many CPU cycles.
//#define ENDSTOP_INTERRUPTS_FEATURE

/**
 * Endstop Noise Threshold
 *
 * Enable if your probe or endstops falsely trigger due to noise.
 *
 * - Higher values may affect repeatability or accuracy of some bed probes.
 * - To fix noise install a 100nF ceramic capacitor in parallel with the switch.
 * - This feature is not required for common micro-switches mounted on PCBs
 *   based on the Makerbot design, which already have the 100nF capacitor.
 *
 * :[2,3,4,5,6,7]
 */
//#define ENDSTOP_NOISE_THRESHOLD 2

// Check for stuck or disconnected endstops during homing moves.
//#define DETECT_BROKEN_ENDSTOP

//=============================================================================
//============================== Movement Settings ============================
//=============================================================================
// @section motion

/**
 * Default Settings
 *
 * These settings can be reset by M502
 *
 * Note that if EEPROM is enabled, saved values will override these.
 */

/**
 * With this option each E stepper can have its own factors for the
 * following movement settings. If fewer factors are given than the
 * total number of extruders, the last value applies to the rest.
 */
//#define DISTINCT_E_FACTORS

/**
 * Default Axis Steps Per Unit (linear=steps/mm, rotational=steps/°)
 * Override with M92
 *                                      X, Y, Z [, I [, J [, K...]]], E0 [, E1[, E2...]]
 */
#define DEFAULT_AXIS_STEPS_PER_UNIT   { 81, 80, 400, 500 }

/**
 * Default Max Feed Rate (linear=mm/s, rotational=°/s)
 * Override with M203
 *                                      X, Y, Z [, I [, J [, K...]]], E0 [, E1[, E2...]]
 */
#define DEFAULT_MAX_FEEDRATE          { 300, 300, 5, 25 }

//#define LIMITED_MAX_FR_EDITING        // Limit edit via M203 or LCD to DEFAULT_MAX_FEEDRATE * 2
#if ENABLED(LIMITED_MAX_FR_EDITING)
  #define MAX_FEEDRATE_EDIT_VALUES    { 600, 600, 10, 50 } // ...or, set your own edit limits
#endif

/**
 * Default Max Acceleration (speed change with time) (linear=mm/(s^2), rotational=°/(s^2))
 * (Maximum start speed for accelerated moves)
 * Override with M201
 *                                      X, Y, Z [, I [, J [, K...]]], E0 [, E1[, E2...]]
 */
#define DEFAULT_MAX_ACCELERATION      { 3000, 3000, 100, 10000 }

//#define LIMITED_MAX_ACCEL_EDITING     // Limit edit via M201 or LCD to DEFAULT_MAX_ACCELERATION * 2
#if ENABLED(LIMITED_MAX_ACCEL_EDITING)
  #define MAX_ACCEL_EDIT_VALUES       { 6000, 6000, 200, 20000 } // ...or, set your own edit limits
#endif

/**
 * Default Acceleration (speed change with time) (linear=mm/(s^2), rotational=°/(s^2))
 * Override with M204
 *
 *   M204 P    Acceleration
 *   M204 R    Retract Acceleration
 *   M204 T    Travel Acceleration
 */
#define DEFAULT_ACCELERATION          3000    // X, Y, Z and E acceleration for printing moves
#define DEFAULT_RETRACT_ACCELERATION  3000    // E acceleration for retracts
#define DEFAULT_TRAVEL_ACCELERATION   3000    // X, Y, Z acceleration for travel (non printing) moves

/**
 * Default Jerk limits (mm/s)
 * Override with M205 X Y Z . . . E
 *
 * ""Jerk"" specifies the minimum speed change that requires acceleration.
 * When changing speed and direction, if the difference is less than the
 * value set here, it may happen instantaneously.
 */
//#define CLASSIC_JERK
#if ENABLED(CLASSIC_JERK)
  #define DEFAULT_XJERK 10.0
  #define DEFAULT_YJERK 10.0
  #define DEFAULT_ZJERK  0.3
  //#define DEFAULT_IJERK  0.3
  //#define DEFAULT_JJERK  0.3
  //#define DEFAULT_KJERK  0.3
  //#define DEFAULT_UJERK  0.3
  //#define DEFAULT_VJERK  0.3
  //#define DEFAULT_WJERK  0.3

  //#define TRAVEL_EXTRA_XYJERK 0.0     // Additional jerk allowance for all travel moves

  //#define LIMITED_JERK_EDITING        // Limit edit via M205 or LCD to DEFAULT_aJERK * 2
  #if ENABLED(LIMITED_JERK_EDITING)
    #define MAX_JERK_EDIT_VALUES { 20, 20, 0.6, 10 } // ...or, set your own edit limits
  #endif
#endif

#define DEFAULT_EJERK    5.0  // May be used by Linear Advance

/**
 * Junction Deviation Factor
 *
 * See:
 *   https://reprap.org/forum/read.php?1,739819
 *   https://blog.kyneticcnc.com/2018/10/computing-junction-deviation-for-marlin.html
 */
#if DISABLED(CLASSIC_JERK)
  #define JUNCTION_DEVIATION_MM 0.013 // (mm) Distance from real junction edge
  #define JD_HANDLE_SMALL_SEGMENTS    // Use curvature estimation instead of just the junction angle
                                      // for small segments (< 1mm) with large junction angles (> 135°).
#endif

/**
 * S-Curve Acceleration
 *
 * This option eliminates vibration during printing by fitting a Bézier
 * curve to move acceleration, producing much smoother direction changes.
 *
 * See https://github.com/synthetos/TinyG/wiki/Jerk-Controlled-Motion-Explained
 */
//#define S_CURVE_ACCELERATION

//===========================================================================
//============================= Z Probe Options =============================
//===========================================================================
// @section probes

//
// See https://marlinfw.org/docs/configuration/probes.html
//

/**
 * Enable this option for a probe connected to the Z-MIN pin.
 * The probe replaces the Z-MIN endstop and is used for Z homing.
 * (Automatically enables USE_PROBE_FOR_Z_HOMING.)
 */
#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN

// Force the use of the probe for Z-axis homing
//#define USE_PROBE_FOR_Z_HOMING

/**
 * Z_MIN_PROBE_PIN
 *
 * Override this pin only if the probe cannot be connected to
 * the default Z_MIN_PROBE_PIN for the selected MOTHERBOARD.
 *
 *  - The simplest option is to use a free endstop connector.
 *  - Use 5V for powered (usually inductive) sensors.
 *
 *  - For simple switches...
 *    - Normally-closed (NC) also connect to GND.
 *    - Normally-open (NO) also connect to 5V.
 */
//#define Z_MIN_PROBE_PIN -1

/**
 * Probe Type
 *
 * Allen Key Probes, Servo Probes, Z-Sled Probes, FIX_MOUNTED_PROBE, etc.
 * Activate one of these to use Auto Bed Leveling below.
 */

/**
 * The ""Manual Probe"" provides a means to do ""Auto"" Bed Leveling without a probe.
 * Use G29 repeatedly, adjusting the Z height at each point with movement commands
 * or (with LCD_BED_LEVELING) the LCD controller.
 */
//#define PROBE_MANUALLY

/**
 * A Fix-Mounted Probe either doesn't deploy or needs manual deployment.
 *   (e.g., an inductive probe or a nozzle-based probe-switch.)
 */
//#define FIX_MOUNTED_PROBE

/**
 * Use the nozzle as the probe, as with a conductive
 * nozzle system or a piezo-electric smart effector.
 */
//#define NOZZLE_AS_PROBE

/**
 * Z Servo Probe, such as an endstop switch on a rotating arm.
 */
//#define Z_PROBE_SERVO_NR 0
#ifdef Z_PROBE_SERVO_NR
  //#define Z_SERVO_ANGLES { 70, 0 }      // Z Servo Deploy and Stow angles
#endif

/**
 * The BLTouch probe uses a Hall effect sensor and emulates a servo.
 */
//#define BLTOUCH

/**
 * MagLev V4 probe by MDD
 *
 * This probe is deployed and activated by powering a built-in electromagnet.
 */
//#define MAGLEV4
#if ENABLED(MAGLEV4)
  //#define MAGLEV_TRIGGER_PIN 11     // Set to the connected digital output
  #define MAGLEV_TRIGGER_DELAY 15     // Changing this risks overheating the coil
#endif

/**
 * Touch-MI Probe by hotends.fr
 *
 * This probe is deployed and activated by moving the X-axis to a magnet at the edge of the bed.
 * By default, the magnet is assumed to be on the left and activated by a home. If the magnet is
 * on the right, enable and set TOUCH_MI_DEPLOY_XPOS to the deploy position.
 *
 * Also requires: BABYSTEPPING, BABYSTEP_ZPROBE_OFFSET, Z_SAFE_HOMING,
 *                and a minimum Z_HOMING_HEIGHT of 10.
 */
//#define TOUCH_MI_PROBE
#if ENABLED(TOUCH_MI_PROBE)
  #define TOUCH_MI_RETRACT_Z 0.5                  // Height at which the probe retracts
  //#define TOUCH_MI_DEPLOY_XPOS (X_MAX_BED + 2)  // For a magnet on the right side of the bed
  //#define TOUCH_MI_MANUAL_DEPLOY                // For manual deploy (LCD menu)
#endif

// A probe that is deployed and stowed with a solenoid pin (SOL1_PIN)
//#define SOLENOID_PROBE

// A sled-mounted probe like those designed by Charles Bell.
//#define Z_PROBE_SLED
//#define SLED_DOCKING_OFFSET 5  // The extra distance the X axis must travel to pickup the sled. 0 should be fine but you can push it further if you'd like.

// A probe deployed by moving the x-axis, such as the Wilson II's rack-and-pinion probe designed by Marty Rice.
//#define RACK_AND_PINION_PROBE
#if ENABLED(RACK_AND_PINION_PROBE)
  #define Z_PROBE_DEPLOY_X  X_MIN_POS
  #define Z_PROBE_RETRACT_X X_MAX_POS
#endif

/**
 * Magnetically Mounted Probe
 * For probes such as Euclid, Klicky, Klackender, etc.
 */
//#define MAG_MOUNTED_PROBE
#if ENABLED(MAG_MOUNTED_PROBE)
  #define PROBE_DEPLOY_FEEDRATE (133*60)  // (mm/min) Probe deploy speed
  #define PROBE_STOW_FEEDRATE   (133*60)  // (mm/min) Probe stow speed

  #define MAG_MOUNTED_DEPLOY_1 { PROBE_DEPLOY_FEEDRATE, { 245, 114, 30 } }  // Move to side Dock & Attach probe
  #define MAG_MOUNTED_DEPLOY_2 { PROBE_DEPLOY_FEEDRATE, { 210, 114, 30 } }  // Move probe off dock
  #define MAG_MOUNTED_DEPLOY_3 { PROBE_DEPLOY_FEEDRATE, {   0,   0,  0 } }  // Extra move if needed
  #define MAG_MOUNTED_DEPLOY_4 { PROBE_DEPLOY_FEEDRATE, {   0,   0,  0 } }  // Extra move if needed
  #define MAG_MOUNTED_DEPLOY_5 { PROBE_DEPLOY_FEEDRATE, {   0,   0,  0 } }  // Extra move if needed
  #define MAG_MOUNTED_STOW_1   { PROBE_STOW_FEEDRATE,   { 245, 114, 20 } }  // Move to dock
  #define MAG_MOUNTED_STOW_2   { PROBE_STOW_FEEDRATE,   { 245, 114,  0 } }  // Place probe beside remover
  #define MAG_MOUNTED_STOW_3   { PROBE_STOW_FEEDRATE,   { 230, 114,  0 } }  // Side move to remove probe
  #define MAG_MOUNTED_STOW_4   { PROBE_STOW_FEEDRATE,   { 210, 114, 20 } }  // Side move to remove probe
  #define MAG_MOUNTED_STOW_5   { PROBE_STOW_FEEDRATE,   {   0,   0,  0 } }  // Extra move if needed
#endif

// Duet Smart Effector (for delta printers) - https://docs.duet3d.com/en/Duet3D_hardware/Accessories/Smart_Effector
// When the pin is defined you can use M672 to set/reset the probe sensitivity.
//#define DUET_SMART_EFFECTOR
#if ENABLED(DUET_SMART_EFFECTOR)
  #define SMART_EFFECTOR_MOD_PIN  -1  // Connect a GPIO pin to the Smart Effector MOD pin
#endif

/**
 * Use StallGuard2 to probe the bed with the nozzle.
 * Requires stallGuard-capable Trinamic stepper drivers.
 * CAUTION: This can damage machines with Z lead screws.
 *          Take extreme care when setting up this feature.
 */
//#define SENSORLESS_PROBING
#define DIAG_JUMPERS_REMOVED
/**
 * Allen key retractable z-probe as seen on many Kossel delta printers - https://reprap.org/wiki/Kossel#Autolevel_probe
 * Deploys by touching z-axis belt. Retracts by pushing the probe down.
 */
//#define Z_PROBE_ALLEN_KEY
#if ENABLED(Z_PROBE_ALLEN_KEY)
  // 2 or 3 sets of coordinates for deploying and retracting the spring loaded touch probe on G29,
  // if servo actuated touch probe is not defined. Uncomment as appropriate for your printer/probe.

  #define Z_PROBE_ALLEN_KEY_DEPLOY_1 { 30.0, DELTA_PRINTABLE_RADIUS, 100.0 }
  #define Z_PROBE_ALLEN_KEY_DEPLOY_1_FEEDRATE XY_PROBE_FEEDRATE

  #define Z_PROBE_ALLEN_KEY_DEPLOY_2 { 0.0, DELTA_PRINTABLE_RADIUS, 100.0 }
  #define Z_PROBE_ALLEN_KEY_DEPLOY_2_FEEDRATE (XY_PROBE_FEEDRATE)/10

  #define Z_PROBE_ALLEN_KEY_DEPLOY_3 { 0.0, (DELTA_PRINTABLE_RADIUS) * 0.75, 100.0 }
  #define Z_PROBE_ALLEN_KEY_DEPLOY_3_FEEDRATE XY_PROBE_FEEDRATE

  #define Z_PROBE_ALLEN_KEY_STOW_1 { -64.0, 56.0, 23.0 } // Move the probe into position
  #define Z_PROBE_ALLEN_KEY_STOW_1_FEEDRATE XY_PROBE_FEEDRATE

  #define Z_PROBE_ALLEN_KEY_STOW_2 { -64.0, 56.0, 3.0 } // Push it down
  #define Z_PROBE_ALLEN_KEY_STOW_2_FEEDRATE (XY_PROBE_FEEDRATE)/10

  #define Z_PROBE_ALLEN_KEY_STOW_3 { -64.0, 56.0, 50.0 } // Move it up to clear
  #define Z_PROBE_ALLEN_KEY_STOW_3_FEEDRATE XY_PROBE_FEEDRATE

  #define Z_PROBE_ALLEN_KEY_STOW_4 { 0.0, 0.0, 50.0 }
  #define Z_PROBE_ALLEN_KEY_STOW_4_FEEDRATE XY_PROBE_FEEDRATE

#endif // Z_PROBE_ALLEN_KEY

/**
 * Nozzle-to-Probe offsets { X, Y, Z }
 *
 * X and Y offset
 *   Use a caliper or ruler to measure the distance from the tip of
 *   the Nozzle to the center-point of the Probe in the X and Y axes.
 *
 * Z offset
 * - For the Z offset use your best known value and adjust at runtime.
 * - Common probes trigger below the nozzle and have negative values for Z offset.
 * - Probes triggering above the nozzle height are uncommon but do exist. When using
 *   probes such as this, carefully set Z_CLEARANCE_DEPLOY_PROBE and Z_CLEARANCE_BETWEEN_PROBES
 *   to avoid collisions during probing.
 *
 * Tune and Adjust
 * -  Probe Offsets can be tuned at runtime with 'M851', LCD menus, babystepping, etc.
 * -  PROBE_OFFSET_WIZARD (Configuration_adv.h) can be used for setting the Z offset.
 *
 * Assuming the typical work area orientation:
 *  - Probe to RIGHT of the Nozzle has a Positive X offset
 *  - Probe to LEFT  of the Nozzle has a Negative X offset
 *  - Probe in BACK  of the Nozzle has a Positive Y offset
 *  - Probe in FRONT of the Nozzle has a Negative Y offset
 *
 * Some examples:
 *   #define NOZZLE_TO_PROBE_OFFSET { 10, 10, -1 }   // Example ""1""
 *   #define NOZZLE_TO_PROBE_OFFSET {-10,  5, -1 }   // Example ""2""
 *   #define NOZZLE_TO_PROBE_OFFSET {  5, -5, -1 }   // Example ""3""
 *   #define NOZZLE_TO_PROBE_OFFSET {-15,-10, -1 }   // Example ""4""
 *
 *     +-- BACK ---+
 *     |    [+]    |
 *   L |        1  | R <-- Example ""1"" (right+,  back+)
 *   E |  2        | I <-- Example ""2"" ( left-,  back+)
 *   F |[-]  N  [+]| G <-- Nozzle
 *   T |       3   | H <-- Example ""3"" (right+, front-)
 *     | 4         | T <-- Example ""4"" ( left-, front-)
 *     |    [-]    |
 *     O-- FRONT --+
 */
#define NOZZLE_TO_PROBE_OFFSET { 10, 10, 0 }

// Most probes should stay away from the edges of the bed, but
// with NOZZLE_AS_PROBE this can be negative for a wider probing area.
#define PROBING_MARGIN 10

// X and Y axis travel speed (mm/min) between probes
#define XY_PROBE_FEEDRATE (133*60)

// Feedrate (mm/min) for the first approach when double-probing (MULTIPLE_PROBING == 2)
#define Z_PROBE_FEEDRATE_FAST (4*60)

// Feedrate (mm/min) for the ""accurate"" probe of each point
#define Z_PROBE_FEEDRATE_SLOW (Z_PROBE_FEEDRATE_FAST / 2)

/**
 * Probe Activation Switch
 * A switch indicating proper deployment, or an optical
 * switch triggered when the carriage is near the bed.
 */
//#define PROBE_ACTIVATION_SWITCH
#if ENABLED(PROBE_ACTIVATION_SWITCH)
  #define PROBE_ACTIVATION_SWITCH_STATE LOW // State indicating probe is active
  //#define PROBE_ACTIVATION_SWITCH_PIN PC6 // Override default pin
#endif

/**
 * Tare Probe (determine zero-point) prior to each probe.
 * Useful for a strain gauge or piezo sensor that needs to factor out
 * elements such as cables pulling on the carriage.
 */
//#define PROBE_TARE
#if ENABLED(PROBE_TARE)
  #define PROBE_TARE_TIME  200    // (ms) Time to hold tare pin
  #define PROBE_TARE_DELAY 200    // (ms) Delay after tare before
  #define PROBE_TARE_STATE HIGH   // State to write pin for tare
  //#define PROBE_TARE_PIN PA5    // Override default pin
  #if ENABLED(PROBE_ACTIVATION_SWITCH)
    //#define PROBE_TARE_ONLY_WHILE_INACTIVE  // Fail to tare/probe if PROBE_ACTIVATION_SWITCH is active
  #endif
#endif

/**
 * Probe Enable / Disable
 * The probe only provides a triggered signal when enabled.
 */
//#define PROBE_ENABLE_DISABLE
#if ENABLED(PROBE_ENABLE_DISABLE)
  //#define PROBE_ENABLE_PIN -1   // Override the default pin here
#endif

/**
 * Multiple Probing
 *
 * You may get improved results by probing 2 or more times.
 * With EXTRA_PROBING the more atypical reading(s) will be disregarded.
 *
 * A total of 2 does fast/slow probes with a weighted average.
 * A total of 3 or more adds more slow probes, taking the average.
 */
//#define MULTIPLE_PROBING 2
//#define EXTRA_PROBING    1

/**
 * Z probes require clearance when deploying, stowing, and moving between
 * probe points to avoid hitting the bed and other hardware.
 * Servo-mounted probes require extra space for the arm to rotate.
 * Inductive probes need space to keep from triggering early.
 *
 * Use these settings to specify the distance (mm) to raise the probe (or
 * lower the bed). The values set here apply over and above any (negative)
 * probe Z Offset set with NOZZLE_TO_PROBE_OFFSET, M851, or the LCD.
 * Only integer values >= 1 are valid here.
 *
 * Example: `M851 Z-5` with a CLEARANCE of 4  =>  9mm from bed to nozzle.
 *     But: `M851 Z+1` with a CLEARANCE of 2  =>  2mm from bed to nozzle.
 */
#define Z_CLEARANCE_DEPLOY_PROBE   10 // (mm) Z Clearance for Deploy/Stow
#define Z_CLEARANCE_BETWEEN_PROBES  5 // (mm) Z Clearance between probe points
#define Z_CLEARANCE_MULTI_PROBE     5 // (mm) Z Clearance between multiple probes
//#define Z_AFTER_PROBING           5 // (mm) Z position after probing is done

#define Z_PROBE_LOW_POINT          -2 // (mm) Farthest distance below the trigger-point to go before stopping

// For M851 give a range for adjusting the Z probe offset
#define Z_PROBE_OFFSET_RANGE_MIN -20
#define Z_PROBE_OFFSET_RANGE_MAX 20

// Enable the M48 repeatability test to test probe accuracy
//#define Z_MIN_PROBE_REPEATABILITY_TEST

// Before deploy/stow pause for user confirmation
//#define PAUSE_BEFORE_DEPLOY_STOW
#if ENABLED(PAUSE_BEFORE_DEPLOY_STOW)
  //#define PAUSE_PROBE_DEPLOY_WHEN_TRIGGERED // For Manual Deploy Allenkey Probe
#endif

/**
 * Enable one or more of the following if probing seems unreliable.
 * Heaters and/or fans can be disabled during probing to minimize electrical
 * noise. A delay can also be added to allow noise and vibration to settle.
 * These options are most useful for the BLTouch probe, but may also improve
 * readings with inductive probes and piezo sensors.
 */
//#define PROBING_HEATERS_OFF       // Turn heaters off when probing
#if ENABLED(PROBING_HEATERS_OFF)
  //#define WAIT_FOR_BED_HEATER     // Wait for bed to heat back up between probes (to improve accuracy)
  //#define WAIT_FOR_HOTEND         // Wait for hotend to heat back up between probes (to improve accuracy & prevent cold extrude)
#endif
//#define PROBING_FANS_OFF          // Turn fans off when probing
//#define PROBING_ESTEPPERS_OFF     // Turn all extruder steppers off when probing
//#define PROBING_STEPPERS_OFF      // Turn all steppers off (unless needed to hold position) when probing (including extruders)
//#define DELAY_BEFORE_PROBING 200  // (ms) To prevent vibrations from triggering piezo sensors

// Require minimum nozzle and/or bed temperature for probing
//#define PREHEAT_BEFORE_PROBING
#if ENABLED(PREHEAT_BEFORE_PROBING)
  #define PROBING_NOZZLE_TEMP 120   // (°C) Only applies to E0 at this time
  #define PROBING_BED_TEMP     50
#endif

// For Inverting Stepper Enable Pins (Active Low) use 0, Non Inverting (Active High) use 1
// :{ 0:'Low', 1:'High' }
#define X_ENABLE_ON 0
#define Y_ENABLE_ON 0
#define Z_ENABLE_ON 0
#define E_ENABLE_ON 0 // For all extruders
//#define I_ENABLE_ON 0
//#define J_ENABLE_ON 0
//#define K_ENABLE_ON 0
//#define U_ENABLE_ON 0
//#define V_ENABLE_ON 0
//#define W_ENABLE_ON 0

// Disable axis steppers immediately when they're not being stepped.
// WARNING: When motors turn off there is a chance of losing position accuracy!
//#define DISABLE_X
//#define DISABLE_Y
//#define DISABLE_Z
//#define DISABLE_I
//#define DISABLE_J
//#define DISABLE_K
//#define DISABLE_U
//#define DISABLE_V
//#define DISABLE_W

// Turn off the display blinking that warns about possible accuracy reduction
//#define DISABLE_REDUCED_ACCURACY_WARNING

// @section extruder

//#define DISABLE_E               // Disable the extruder when not stepping
#define DISABLE_OTHER_EXTRUDERS   // Keep only the active extruder enabled

// @section motion

// Invert the stepper direction. Change (or reverse the motor connector) if an axis goes the wrong way.
#define INVERT_X_DIR false
#define INVERT_Y_DIR true
#define INVERT_Z_DIR false
//#define INVERT_I_DIR false
//#define INVERT_J_DIR false
//#define INVERT_K_DIR false
//#define INVERT_U_DIR false
//#define INVERT_V_DIR false
//#define INVERT_W_DIR false

// @section extruder

// For direct drive extruder v9 set to true, for geared extruder set to false.
#define INVERT_E0_DIR false
#define INVERT_E1_DIR false
#define INVERT_E2_DIR false
#define INVERT_E3_DIR false
#define INVERT_E4_DIR false
#define INVERT_E5_DIR false
#define INVERT_E6_DIR false
#define INVERT_E7_DIR false

// @section homing

//#define NO_MOTION_BEFORE_HOMING // Inhibit movement until all axes have been homed. Also enable HOME_AFTER_DEACTIVATE for extra safety.
//#define HOME_AFTER_DEACTIVATE   // Require rehoming after steppers are deactivated. Also enable NO_MOTION_BEFORE_HOMING for extra safety.

/**
 * Set Z_IDLE_HEIGHT if the Z-Axis moves on its own when steppers are disabled.
 *  - Use a low value (i.e., Z_MIN_POS) if the nozzle falls down to the bed.
 *  - Use a large value (i.e., Z_MAX_POS) if the bed falls down, away from the nozzle.
 */
//#define Z_IDLE_HEIGHT Z_HOME_POS

//#define Z_HOMING_HEIGHT  4      // (mm) Minimal Z height before homing (G28) for Z clearance above the bed, clamps, ...
                                  // Be sure to have this much clearance over your Z_MAX_POS to prevent grinding.

//#define Z_AFTER_HOMING  10      // (mm) Height to move to after homing Z

// Direction of endstops when homing; 1=MAX, -1=MIN
// :[-1,1]
#define X_HOME_DIR -1
#define Y_HOME_DIR -1
#define Z_HOME_DIR -1
//#define I_HOME_DIR -1
//#define J_HOME_DIR -1
//#define K_HOME_DIR -1
//#define U_HOME_DIR -1
//#define V_HOME_DIR -1
//#define W_HOME_DIR -1

// @section geometry

// The size of the printable area
#define X_BED_SIZE 200
#define Y_BED_SIZE 200

// Travel limits (linear=mm, rotational=°) after homing, corresponding to endstop positions.
#define X_MIN_POS 0
#define Y_MIN_POS 0
#define Z_MIN_POS 0
#define X_MAX_POS X_BED_SIZE
#define Y_MAX_POS Y_BED_SIZE
#define Z_MAX_POS 200
//#define I_MIN_POS 0
//#define I_MAX_POS 50
//#define J_MIN_POS 0
//#define J_MAX_POS 50
//#define K_MIN_POS 0
//#define K_MAX_POS 50
//#define U_MIN_POS 0
//#define U_MAX_POS 50
//#define V_MIN_POS 0
//#define V_MAX_POS 50
//#define W_MIN_POS 0
//#define W_MAX_POS 50

/**
 * Software Endstops
 *
 * - Prevent moves outside the set machine bounds.
 * - Individual axes can be disabled, if desired.
 * - X and Y only apply to Cartesian robots.
 * - Use 'M211' to set software endstops on/off or report current state
 */

// Min software endstops constrain movement within minimum coordinate bounds
#define MIN_SOFTWARE_ENDSTOPS
#if ENABLED(MIN_SOFTWARE_ENDSTOPS)
  #define MIN_SOFTWARE_ENDSTOP_X
  #define MIN_SOFTWARE_ENDSTOP_Y
  #define MIN_SOFTWARE_ENDSTOP_Z
  #define MIN_SOFTWARE_ENDSTOP_I
  #define MIN_SOFTWARE_ENDSTOP_J
  #define MIN_SOFTWARE_ENDSTOP_K
  #define MIN_SOFTWARE_ENDSTOP_U
  #define MIN_SOFTWARE_ENDSTOP_V
  #define MIN_SOFTWARE_ENDSTOP_W
#endif

// Max software endstops constrain movement within maximum coordinate bounds
#define MAX_SOFTWARE_ENDSTOPS
#if ENABLED(MAX_SOFTWARE_ENDSTOPS)
  #define MAX_SOFTWARE_ENDSTOP_X
  #define MAX_SOFTWARE_ENDSTOP_Y
  #define MAX_SOFTWARE_ENDSTOP_Z
  #define MAX_SOFTWARE_ENDSTOP_I
  #define MAX_SOFTWARE_ENDSTOP_J
  #define MAX_SOFTWARE_ENDSTOP_K
  #define MAX_SOFTWARE_ENDSTOP_U
  #define MAX_SOFTWARE_ENDSTOP_V
  #define MAX_SOFTWARE_ENDSTOP_W
#endif

#if EITHER(MIN_SOFTWARE_ENDSTOPS, MAX_SOFTWARE_ENDSTOPS)
  //#define SOFT_ENDSTOPS_MENU_ITEM  // Enable/Disable software endstops from the LCD
#endif

/**
 * Filament Runout Sensors
 * Mechanical or opto endstops are used to check for the presence of filament.
 *
 * IMPORTANT: Runout will only trigger if Marlin is aware that a print job is running.
 * Marlin knows a print job is running when:
 *  1. Running a print job from media started with M24.
 *  2. The Print Job Timer has been started with M75.
 *  3. The heaters were turned on and PRINTJOB_TIMER_AUTOSTART is enabled.
 *
 * RAMPS-based boards use SERVO3_PIN for the first runout sensor.
 * For other boards you may need to define FIL_RUNOUT_PIN, FIL_RUNOUT2_PIN, etc.
 */
//#define FILAMENT_RUNOUT_SENSOR
#if ENABLED(FILAMENT_RUNOUT_SENSOR)
  #define FIL_RUNOUT_ENABLED_DEFAULT true // Enable the sensor on startup. Override with M412 followed by M500.
  #define NUM_RUNOUT_SENSORS   1          // Number of sensors, up to one per extruder. Define a FIL_RUNOUT#_PIN for each.

  #define FIL_RUNOUT_STATE     LOW        // Pin state indicating that filament is NOT present.
  #define FIL_RUNOUT_PULLUP               // Use internal pullup for filament runout pins.
  //#define FIL_RUNOUT_PULLDOWN           // Use internal pulldown for filament runout pins.
  //#define WATCH_ALL_RUNOUT_SENSORS      // Execute runout script on any triggering sensor, not only for the active extruder.
                                          // This is automatically enabled for MIXING_EXTRUDERs.

  // Override individually if the runout sensors vary
  //#define FIL_RUNOUT1_STATE LOW
  //#define FIL_RUNOUT1_PULLUP
  //#define FIL_RUNOUT1_PULLDOWN

  //#define FIL_RUNOUT2_STATE LOW
  //#define FIL_RUNOUT2_PULLUP
  //#define FIL_RUNOUT2_PULLDOWN

  //#define FIL_RUNOUT3_STATE LOW
  //#define FIL_RUNOUT3_PULLUP
  //#define FIL_RUNOUT3_PULLDOWN

  //#define FIL_RUNOUT4_STATE LOW
  //#define FIL_RUNOUT4_PULLUP
  //#define FIL_RUNOUT4_PULLDOWN

  //#define FIL_RUNOUT5_STATE LOW
  //#define FIL_RUNOUT5_PULLUP
  //#define FIL_RUNOUT5_PULLDOWN

  //#define FIL_RUNOUT6_STATE LOW
  //#define FIL_RUNOUT6_PULLUP
  //#define FIL_RUNOUT6_PULLDOWN

  //#define FIL_RUNOUT7_STATE LOW
  //#define FIL_RUNOUT7_PULLUP
  //#define FIL_RUNOUT7_PULLDOWN

  //#define FIL_RUNOUT8_STATE LOW
  //#define FIL_RUNOUT8_PULLUP
  //#define FIL_RUNOUT8_PULLDOWN

  // Commands to execute on filament runout.
  // With multiple runout sensors use the %c placeholder for the current tool in commands (e.g., ""M600 T%c"")
  // NOTE: After 'M412 H1' the host handles filament runout and this script does not apply.
  #define FILAMENT_RUNOUT_SCRIPT ""M600""

  // After a runout is detected, continue printing this length of filament
  // before executing the runout script. Useful for a sensor at the end of
  // a feed tube. Requires 4 bytes SRAM per sensor, plus 4 bytes overhead.
  //#define FILAMENT_RUNOUT_DISTANCE_MM 25

  #ifdef FILAMENT_RUNOUT_DISTANCE_MM
    // Enable this option to use an encoder disc that toggles the runout pin
    // as the filament moves. (Be sure to set FILAMENT_RUNOUT_DISTANCE_MM
    // large enough to avoid false positives.)
    //#define FILAMENT_MOTION_SENSOR
  #endif
#endif

//===========================================================================
//=============================== Bed Leveling ==============================
//===========================================================================
// @section calibrate

/**
 * Choose one of the options below to enable G29 Bed Leveling. The parameters
 * and behavior of G29 will change depending on your selection.
 *
 *  If using a Probe for Z Homing, enable Z_SAFE_HOMING also!
 *
 * - AUTO_BED_LEVELING_3POINT
 *   Probe 3 arbitrary points on the bed (that aren't collinear)
 *   You specify the XY coordinates of all 3 points.
 *   The result is a single tilted plane. Best for a flat bed.
 *
 * - AUTO_BED_LEVELING_LINEAR
 *   Probe several points in a grid.
 *   You specify the rectangle and the density of sample points.
 *   The result is a single tilted plane. Best for a flat bed.
 *
 * - AUTO_BED_LEVELING_BILINEAR
 *   Probe several points in a grid.
 *   You specify the rectangle and the density of sample points.
 *   The result is a mesh, best for large or uneven beds.
 *
 * - AUTO_BED_LEVELING_UBL (Unified Bed Leveling)
 *   A comprehensive bed leveling system combining the features and benefits
 *   of other systems. UBL also includes integrated Mesh Generation, Mesh
 *   Validation and Mesh Editing systems.
 *
 * - MESH_BED_LEVELING
 *   Probe a grid manually
 *   The result is a mesh, suitable for large or uneven beds. (See BILINEAR.)
 *   For machines without a probe, Mesh Bed Leveling provides a method to perform
 *   leveling in steps so you can manually adjust the Z height at each grid-point.
 *   With an LCD controller the process is guided step-by-step.
 */
//#define AUTO_BED_LEVELING_3POINT
//#define AUTO_BED_LEVELING_LINEAR
//#define AUTO_BED_LEVELING_BILINEAR
//#define AUTO_BED_LEVELING_UBL
//#define MESH_BED_LEVELING

/**
 * Commands to execute at the end of G29 probing.
 * Useful to retract or move the Z probe out of the way.
 */
//#define Z_PROBE_END_SCRIPT ""G1 Z10 F12000\nG1 X15 Y330\nG1 Z0.5\nG1 Z10""

/**
 * Normally G28 leaves leveling disabled on completion. Enable one of
 * these options to restore the prior leveling state or to always enable
 * leveling immediately after G28.
 */
//#define RESTORE_LEVELING_AFTER_G28
//#define ENABLE_LEVELING_AFTER_G28

/**
 * Auto-leveling needs preheating
 */
//#define PREHEAT_BEFORE_LEVELING
#if ENABLED(PREHEAT_BEFORE_LEVELING)
  #define LEVELING_NOZZLE_TEMP 120   // (°C) Only applies to E0 at this time
  #define LEVELING_BED_TEMP     50
#endif

/**
 * Bed Distance Sensor
 *
 * Measures the distance from bed to nozzle with accuracy of 0.01mm.
 * For information about this sensor https://github.com/markniu/Bed_Distance_sensor
 * Uses I2C port, so it requires I2C library markyue/Panda_SoftMasterI2C.
 */
//#define BD_SENSOR

/**
 * Enable detailed logging of G28, G29, M48, etc.
 * Turn on with the command 'M111 S32'.
 * NOTE: Requires a lot of flash!
 */
//#define DEBUG_LEVELING_FEATURE

#if ANY(MESH_BED_LEVELING, AUTO_BED_LEVELING_UBL, PROBE_MANUALLY)
  // Set a height for the start of manual adjustment
  #define MANUAL_PROBE_START_Z 0.2  // (mm) Comment out to use the last-measured height
#endif

#if ANY(MESH_BED_LEVELING, AUTO_BED_LEVELING_BILINEAR, AUTO_BED_LEVELING_UBL)
  /**
   * Gradually reduce leveling correction until a set height is reached,
   * at which point movement will be level to the machine's XY plane.
   * The height can be set with M420 Z<height>
   */
  #define ENABLE_LEVELING_FADE_HEIGHT
  #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
    #define DEFAULT_LEVELING_FADE_HEIGHT 10.0 // (mm) Default fade height.
  #endif

  /**
   * For Cartesian machines, instead of dividing moves on mesh boundaries,
   * split up moves into short segments like a Delta. This follows the
   * contours of the bed more closely than edge-to-edge straight moves.
   */
  #define SEGMENT_LEVELED_MOVES
  #define LEVELED_SEGMENT_LENGTH 5.0 // (mm) Length of all segments (except the last one)

  /**
   * Enable the G26 Mesh Validation Pattern tool.
   */
  //#define G26_MESH_VALIDATION
  #if ENABLED(G26_MESH_VALIDATION)
    #define MESH_TEST_NOZZLE_SIZE    0.4  // (mm) Diameter of primary nozzle.
    #define MESH_TEST_LAYER_HEIGHT   0.2  // (mm) Default layer height for G26.
    #define MESH_TEST_HOTEND_TEMP  205    // (°C) Default nozzle temperature for G26.
    #define MESH_TEST_BED_TEMP      60    // (°C) Default bed temperature for G26.
    #define G26_XY_FEEDRATE         20    // (mm/s) Feedrate for G26 XY moves.
    #define G26_XY_FEEDRATE_TRAVEL 100    // (mm/s) Feedrate for G26 XY travel moves.
    #define G26_RETRACT_MULTIPLIER   1.0  // G26 Q (retraction) used by default between mesh test elements.
  #endif

#endif

#if EITHER(AUTO_BED_LEVELING_LINEAR, AUTO_BED_LEVELING_BILINEAR)

  // Set the number of grid points per dimension.
  #define GRID_MAX_POINTS_X 3
  #define GRID_MAX_POINTS_Y GRID_MAX_POINTS_X

  // Probe along the Y axis, advancing X after each column
  //#define PROBE_Y_FIRST

  #if ENABLED(AUTO_BED_LEVELING_BILINEAR)

    // Beyond the probed grid, continue the implied tilt?
    // Default is to maintain the height of the nearest edge.
    //#define EXTRAPOLATE_BEYOND_GRID

    //
    // Subdivision of the grid by Catmull-Rom method.
    // Synthesizes intermediate points to produce a more detailed mesh.
    //
    //#define ABL_BILINEAR_SUBDIVISION
    #if ENABLED(ABL_BILINEAR_SUBDIVISION)
      // Number of subdivisions between probe points
      #define BILINEAR_SUBDIVISIONS 3
    #endif

  #endif

#elif ENABLED(AUTO_BED_LEVELING_UBL)

  //===========================================================================
  //========================= Unified Bed Leveling ============================
  //===========================================================================

  //#define MESH_EDIT_GFX_OVERLAY   // Display a graphics overlay while editing the mesh

  #define MESH_INSET 1              // Set Mesh bounds as an inset region of the bed
  #define GRID_MAX_POINTS_X 10      // Don't use more than 15 points per axis, implementation limited.
  #define GRID_MAX_POINTS_Y GRID_MAX_POINTS_X

  //#define UBL_HILBERT_CURVE       // Use Hilbert distribution for less travel when probing multiple points

  #define UBL_MESH_EDIT_MOVES_Z     // Sophisticated users prefer no movement of nozzle
  #define UBL_SAVE_ACTIVE_ON_M500   // Save the currently active mesh in the current slot on M500

  //#define UBL_Z_RAISE_WHEN_OFF_MESH 2.5 // When the nozzle is off the mesh, this value is used
                                          // as the Z-Height correction value.

  //#define UBL_MESH_WIZARD         // Run several commands in a row to get a complete mesh

#elif ENABLED(MESH_BED_LEVELING)

  //===========================================================================
  //=================================== Mesh ==================================
  //===========================================================================

  #define MESH_INSET 10          // Set Mesh bounds as an inset region of the bed
  #define GRID_MAX_POINTS_X 3    // Don't use more than 7 points per axis, implementation limited.
  #define GRID_MAX_POINTS_Y GRID_MAX_POINTS_X

  //#define MESH_G28_REST_ORIGIN // After homing all axes ('G28' or 'G28 XYZ') rest Z at Z_MIN_POS

#endif // BED_LEVELING

/**
 * Add a bed leveling sub-menu for ABL or MBL.
 * Include a guided procedure if manual probing is enabled.
 */
//#define LCD_BED_LEVELING

#if ENABLED(LCD_BED_LEVELING)
  #define MESH_EDIT_Z_STEP  0.025 // (mm) Step size while manually probing Z axis.
  #define LCD_PROBE_Z_RANGE 4     // (mm) Z Range centered on Z_MIN_POS for LCD Z adjustment
  //#define MESH_EDIT_MENU        // Add a menu to edit mesh points
#endif

// Add a menu item to move between bed corners for manual bed adjustment
//#define LCD_BED_TRAMMING

#if ENABLED(LCD_BED_TRAMMING)
  #define BED_TRAMMING_INSET_LFRB { 30, 30, 30, 30 } // (mm) Left, Front, Right, Back insets
  #define BED_TRAMMING_HEIGHT      0.0        // (mm) Z height of nozzle at tramming points
  #define BED_TRAMMING_Z_HOP       4.0        // (mm) Z height of nozzle between tramming points
  //#define BED_TRAMMING_INCLUDE_CENTER       // Move to the center after the last corner
  //#define BED_TRAMMING_USE_PROBE
  #if ENABLED(BED_TRAMMING_USE_PROBE)
    #define BED_TRAMMING_PROBE_TOLERANCE 0.1  // (mm)
    #define BED_TRAMMING_VERIFY_RAISED        // After adjustment triggers the probe, re-probe to verify
    //#define BED_TRAMMING_AUDIO_FEEDBACK
  #endif

  /**
   * Corner Leveling Order
   *
   * Set 2 or 4 points. When 2 points are given, the 3rd is the center of the opposite edge.
   *
   *  LF  Left-Front    RF  Right-Front
   *  LB  Left-Back     RB  Right-Back
   *
   * Examples:
   *
   *      Default        {LF,RB,LB,RF}         {LF,RF}           {LB,LF}
   *  LB --------- RB   LB --------- RB    LB --------- RB   LB --------- RB
   *  |  4       3  |   | 3         2 |    |     <3>     |   | 1           |
   *  |             |   |             |    |             |   |          <3>|
   *  |  1       2  |   | 1         4 |    | 1         2 |   | 2           |
   *  LF --------- RF   LF --------- RF    LF --------- RF   LF --------- RF
   */
  #define BED_TRAMMING_LEVELING_ORDER { LF, RF, RB, LB }
#endif

// @section homing

// The center of the bed is at (X=0, Y=0)
//#define BED_CENTER_AT_0_0

// Manually set the home position. Leave these undefined for automatic settings.
// For DELTA this is the top-center of the Cartesian print volume.
//#define MANUAL_X_HOME_POS 0
//#define MANUAL_Y_HOME_POS 0
//#define MANUAL_Z_HOME_POS 0
//#define MANUAL_I_HOME_POS 0
//#define MANUAL_J_HOME_POS 0
//#define MANUAL_K_HOME_POS 0
//#define MANUAL_U_HOME_POS 0
//#define MANUAL_V_HOME_POS 0
//#define MANUAL_W_HOME_POS 0

/**
 * Use ""Z Safe Homing"" to avoid homing with a Z probe outside the bed area.
 *
 * - Moves the Z probe (or nozzle) to a defined XY point before Z homing.
 * - Allows Z homing only when XY positions are known and trusted.
 * - If stepper drivers sleep, XY homing may be required again before Z homing.
 */
//#define Z_SAFE_HOMING

#if ENABLED(Z_SAFE_HOMING)
  #define Z_SAFE_HOMING_X_POINT X_CENTER  // (mm) X point for Z homing
  #define Z_SAFE_HOMING_Y_POINT Y_CENTER  // (mm) Y point for Z homing
#endif

// Homing speeds (linear=mm/min, rotational=°/min)
#define HOMING_FEEDRATE_MM_M { (50*60), (50*60), (4*60) }

// Validate that endstops are triggered on homing moves
#define VALIDATE_HOMING_ENDSTOPS

// @section calibrate

/**
 * Bed Skew Compensation
 *
 * This feature corrects for misalignment in the XYZ axes.
 *
 * Take the following steps to get the bed skew in the XY plane:
 *  1. Print a test square (e.g., https://www.thingiverse.com/thing:2563185)
 *  2. For XY_DIAG_AC measure the diagonal A to C
 *  3. For XY_DIAG_BD measure the diagonal B to D
 *  4. For XY_SIDE_AD measure the edge A to D
 *
 * Marlin automatically computes skew factors from these measurements.
 * Skew factors may also be computed and set manually:
 *
 *  - Compute AB     : SQRT(2*AC*AC+2*BD*BD-4*AD*AD)/2
 *  - XY_SKEW_FACTOR : TAN(PI/2-ACOS((AC*AC-AB*AB-AD*AD)/(2*AB*AD)))
 *
 * If desired, follow the same procedure for XZ and YZ.
 * Use these diagrams for reference:
 *
 *    Y                     Z                     Z
 *    ^     B-------C       ^     B-------C       ^     B-------C
 *    |    /       /        |    /       /        |    /       /
 *    |   /       /         |   /       /         |   /       /
 *    |  A-------D          |  A-------D          |  A-------D
 *    +-------------->X     +-------------->X     +-------------->Y
 *     XY_SKEW_FACTOR        XZ_SKEW_FACTOR        YZ_SKEW_FACTOR
 */
//#define SKEW_CORRECTION

#if ENABLED(SKEW_CORRECTION)
  // Input all length measurements here:
  #define XY_DIAG_AC 282.8427124746
  #define XY_DIAG_BD 282.8427124746
  #define XY_SIDE_AD 200

  // Or, set the XY skew factor directly:
  //#define XY_SKEW_FACTOR 0.0

  //#define SKEW_CORRECTION_FOR_Z
  #if ENABLED(SKEW_CORRECTION_FOR_Z)
    #define XZ_DIAG_AC 282.8427124746
    #define XZ_DIAG_BD 282.8427124746
    #define YZ_DIAG_AC 282.8427124746
    #define YZ_DIAG_BD 282.8427124746
    #define YZ_SIDE_AD 200

    // Or, set the Z skew factors directly:
    //#define XZ_SKEW_FACTOR 0.0
    //#define YZ_SKEW_FACTOR 0.0
  #endif

  // Enable this option for M852 to set skew at runtime
  //#define SKEW_CORRECTION_GCODE
#endif

//=============================================================================
//============================= Additional Features ===========================
//=============================================================================

// @section eeprom

/**
 * EEPROM
 *
 * Persistent storage to preserve configurable settings across reboots.
 *
 *   M500 - Store settings to EEPROM.
 *   M501 - Read settings from EEPROM. (i.e., Throw away unsaved changes)
 *   M502 - Revert settings to ""factory"" defaults. (Follow with M500 to init the EEPROM.)
 */
//#define EEPROM_SETTINGS     // Persistent storage with M500 and M501
//#define DISABLE_M503        // Saves ~2700 bytes of flash. Disable for release!
#define EEPROM_CHITCHAT       // Give feedback on EEPROM commands. Disable to save flash.
#define EEPROM_BOOT_SILENT    // Keep M503 quiet and only give errors during first load
#if ENABLED(EEPROM_SETTINGS)
  //#define EEPROM_AUTO_INIT  // Init EEPROM automatically on any errors.
  //#define EEPROM_INIT_NOW   // Init EEPROM on first boot after a new build.
#endif

// @section host

//
// Host Keepalive
//
// When enabled Marlin will send a busy status message to the host
// every couple of seconds when it can't accept commands.
//
#define HOST_KEEPALIVE_FEATURE        // Disable this if your host doesn't like keepalive messages
#define DEFAULT_KEEPALIVE_INTERVAL 2  // Number of seconds between ""busy"" messages. Set with M113.
#define BUSY_WHILE_HEATING            // Some hosts require ""busy"" messages even during heating

// @section units

//
// G20/G21 Inch mode support
//
//#define INCH_MODE_SUPPORT

//
// M149 Set temperature units support
//
//#define TEMPERATURE_UNITS_SUPPORT

// @section temperature

//
// Preheat Constants - Up to 10 are supported without changes
//
#define PREHEAT_1_LABEL       ""PLA""
#define PREHEAT_1_TEMP_HOTEND 180
#define PREHEAT_1_TEMP_BED     70
#define PREHEAT_1_TEMP_CHAMBER 35
#define PREHEAT_1_FAN_SPEED     0 // Value from 0 to 255

#define PREHEAT_2_LABEL       ""ABS""
#define PREHEAT_2_TEMP_HOTEND 240
#define PREHEAT_2_TEMP_BED    110
#define PREHEAT_2_TEMP_CHAMBER 35
#define PREHEAT_2_FAN_SPEED     0 // Value from 0 to 255

// @section motion

/**
 * Nozzle Park
 *
 * Park the nozzle at the given XYZ position on idle or G27.
 *
 * The ""P"" parameter controls the action applied to the Z axis:
 *
 *    P0  (Default) If Z is below park Z raise the nozzle.
 *    P1  Raise the nozzle always to Z-park height.
 *    P2  Raise the nozzle by Z-park amount, limited to Z_MAX_POS.
 */
//#define NOZZLE_PARK_FEATURE

#if ENABLED(NOZZLE_PARK_FEATURE)
  // Specify a park position as { X, Y, Z_raise }
  #define NOZZLE_PARK_POINT { (X_MIN_POS + 10), (Y_MAX_POS - 10), 20 }
  #define NOZZLE_PARK_MOVE          0   // Park motion: 0 = XY Move, 1 = X Only, 2 = Y Only, 3 = X before Y, 4 = Y before X
  #define NOZZLE_PARK_Z_RAISE_MIN   2   // (mm) Always raise Z by at least this distance
  #define NOZZLE_PARK_XY_FEEDRATE 100   // (mm/s) X and Y axes feedrate (also used for delta Z axis)
  #define NOZZLE_PARK_Z_FEEDRATE    5   // (mm/s) Z axis feedrate (not used for delta printers)
#endif

/**
 * Clean Nozzle Feature
 *
 * Adds the G12 command to perform a nozzle cleaning process.
 *
 * Parameters:
 *   P  Pattern
 *   S  Strokes / Repetitions
 *   T  Triangles (P1 only)
 *
 * Patterns:
 *   P0  Straight line (default). This process requires a sponge type material
 *       at a fixed bed location. ""S"" specifies strokes (i.e. back-forth motions)
 *       between the start / end points.
 *
 *   P1  Zig-zag pattern between (X0, Y0) and (X1, Y1), ""T"" specifies the
 *       number of zig-zag triangles to do. ""S"" defines the number of strokes.
 *       Zig-zags are done in whichever is the narrower dimension.
 *       For example, ""G12 P1 S1 T3"" will execute:
 *
 *          --
 *         |  (X0, Y1) |     /\        /\        /\     | (X1, Y1)
 *         |           |    /  \      /  \      /  \    |
 *       A |           |   /    \    /    \    /    \   |
 *         |           |  /      \  /      \  /      \  |
 *         |  (X0, Y0) | /        \/        \/        \ | (X1, Y0)
 *          --         +--------------------------------+
 *                       |________|_________|_________|
 *                           T1        T2        T3
 *
 *   P2  Circular pattern with middle at NOZZLE_CLEAN_CIRCLE_MIDDLE.
 *       ""R"" specifies the radius. ""S"" specifies the stroke count.
 *       Before starting, the nozzle moves to NOZZLE_CLEAN_START_POINT.
 *
 *   Caveats: The ending Z should be the same as starting Z.
 */
//#define NOZZLE_CLEAN_FEATURE

#if ENABLED(NOZZLE_CLEAN_FEATURE)
  // Default number of pattern repetitions
  #define NOZZLE_CLEAN_STROKES  12

  // Default number of triangles
  #define NOZZLE_CLEAN_TRIANGLES  3

  // Specify positions for each tool as { { X, Y, Z }, { X, Y, Z } }
  // Dual hotend system may use { {  -20, (Y_BED_SIZE / 2), (Z_MIN_POS + 1) },  {  420, (Y_BED_SIZE / 2), (Z_MIN_POS + 1) }}
  #define NOZZLE_CLEAN_START_POINT { {  30, 30, (Z_MIN_POS + 1) } }
  #define NOZZLE_CLEAN_END_POINT   { { 100, 60, (Z_MIN_POS + 1) } }

  // Circular pattern radius
  #define NOZZLE_CLEAN_CIRCLE_RADIUS 6.5
  // Circular pattern circle fragments number
  #define NOZZLE_CLEAN_CIRCLE_FN 10
  // Middle point of circle
  #define NOZZLE_CLEAN_CIRCLE_MIDDLE NOZZLE_CLEAN_START_POINT

  // Move the nozzle to the initial position after cleaning
  #define NOZZLE_CLEAN_GOBACK

  // For a purge/clean station that's always at the gantry height (thus no Z move)
  //#define NOZZLE_CLEAN_NO_Z

  // For a purge/clean station mounted on the X axis
  //#define NOZZLE_CLEAN_NO_Y

  // Require a minimum hotend temperature for cleaning
  #define NOZZLE_CLEAN_MIN_TEMP 170
  //#define NOZZLE_CLEAN_HEATUP       // Heat up the nozzle instead of skipping wipe

  // Explicit wipe G-code script applies to a G12 with no arguments.
  //#define WIPE_SEQUENCE_COMMANDS ""G1 X-17 Y25 Z10 F4000\nG1 Z1\nM114\nG1 X-17 Y25\nG1 X-17 Y95\nG1 X-17 Y25\nG1 X-17 Y95\nG1 X-17 Y25\nG1 X-17 Y95\nG1 X-17 Y25\nG1 X-17 Y95\nG1 X-17 Y25\nG1 X-17 Y95\nG1 X-17 Y25\nG1 X-17 Y95\nG1 Z15\nM400\nG0 X-10.0 Y-9.0""

#endif

// @section host

/**
 * Print Job Timer
 *
 * Automatically start and stop the print job timer on M104/M109/M140/M190/M141/M191.
 * The print job timer will only be stopped if the bed/chamber target temp is
 * below BED_MINTEMP/CHAMBER_MINTEMP.
 *
 *   M104 (hotend, no wait)  - high temp = none,        low temp = stop timer
 *   M109 (hotend, wait)     - high temp = start timer, low temp = stop timer
 *   M140 (bed, no wait)     - high temp = none,        low temp = stop timer
 *   M190 (bed, wait)        - high temp = start timer, low temp = none
 *   M141 (chamber, no wait) - high temp = none,        low temp = stop timer
 *   M191 (chamber, wait)    - high temp = start timer, low temp = none
 *
 * For M104/M109, high temp is anything over EXTRUDE_MINTEMP / 2.
 * For M140/M190, high temp is anything over BED_MINTEMP.
 * For M141/M191, high temp is anything over CHAMBER_MINTEMP.
 *
 * The timer can also be controlled with the following commands:
 *
 *   M75 - Start the print job timer
 *   M76 - Pause the print job timer
 *   M77 - Stop the print job timer
 */
#define PRINTJOB_TIMER_AUTOSTART

// @section stats

/**
 * Print Counter
 *
 * Track statistical data such as:
 *
 *  - Total print jobs
 *  - Total successful print jobs
 *  - Total failed print jobs
 *  - Total time printing
 *
 * View the current statistics with M78.
 */
//#define PRINTCOUNTER
#if ENABLED(PRINTCOUNTER)
  #define PRINTCOUNTER_SAVE_INTERVAL 60 // (minutes) EEPROM save interval during print. A value of 0 will save stats at end of print.
#endif

// @section security

/**
 * Password
 *
 * Set a numerical password for the printer which can be requested:
 *
 *  - When the printer boots up
 *  - Upon opening the 'Print from Media' Menu
 *  - When SD printing is completed or aborted
 *
 * The following G-codes can be used:
 *
 *  M510 - Lock Printer. Blocks all commands except M511.
 *  M511 - Unlock Printer.
 *  M512 - Set, Change and Remove Password.
 *
 * If you forget the password and get locked out you'll need to re-flash
 * the firmware with the feature disabled, reset EEPROM, and (optionally)
 * re-flash the firmware again with this feature enabled.
 */
//#define PASSWORD_FEATURE
#if ENABLED(PASSWORD_FEATURE)
  #define PASSWORD_LENGTH 4                 // (#) Number of digits (1-9). 3 or 4 is recommended
  #define PASSWORD_ON_STARTUP
  #define PASSWORD_UNLOCK_GCODE             // Unlock with the M511 P<password> command. Disable to prevent brute-force attack.
  #define PASSWORD_CHANGE_GCODE             // Change the password with M512 P<old> S<new>.
  //#define PASSWORD_ON_SD_PRINT_MENU       // This does not prevent G-codes from running
  //#define PASSWORD_AFTER_SD_PRINT_END
  //#define PASSWORD_AFTER_SD_PRINT_ABORT
  //#include ""Configuration_Secure.h""       // External file with PASSWORD_DEFAULT_VALUE
#endif

//=============================================================================
//============================= LCD and SD support ============================
//=============================================================================

// @section interface

/**
 * LCD LANGUAGE
 *
 * Select the language to display on the LCD. These languages are available:
 *
 *   en, an, bg, ca, cz, da, de, el, el_CY, es, eu, fi, fr, gl, hr, hu, it,
 *   jp_kana, ko_KR, nl, pl, pt, pt_br, ro, ru, sk, sv, tr, uk, vi, zh_CN, zh_TW
 *
 * :{ 'en':'English', 'an':'Aragonese', 'bg':'Bulgarian', 'ca':'Catalan', 'cz':'Czech', 'da':'Danish', 'de':'German', 'el':'Greek (Greece)', 'el_CY':'Greek (Cyprus)', 'es':'Spanish', 'eu':'Basque-Euskera', 'fi':'Finnish', 'fr':'French', 'gl':'Galician', 'hr':'Croatian', 'hu':'Hungarian', 'it':'Italian', 'jp_kana':'Japanese', 'ko_KR':'Korean (South Korea)', 'nl':'Dutch', 'pl':'Polish', 'pt':'Portuguese', 'pt_br':'Portuguese (Brazilian)', 'ro':'Romanian', 'ru':'Russian', 'sk':'Slovak', 'sv':'Swedish', 'tr':'Turkish', 'uk':'Ukrainian', 'vi':'Vietnamese', 'zh_CN':'Chinese (Simplified)', 'zh_TW':'Chinese (Traditional)' }
 */
#define LCD_LANGUAGE en

/**
 * LCD Character Set
 *
 * Note: This option is NOT applicable to Graphical Displays.
 *
 * All character-based LCDs provide ASCII plus one of these
 * language extensions:
 *
 *  - JAPANESE ... the most common
 *  - WESTERN  ... with more accented characters
 *  - CYRILLIC ... for the Russian language
 *
 * To determine the language extension installed on your controller:
 *
 *  - Compile and upload with LCD_LANGUAGE set to 'test'
 *  - Click the controller to view the LCD menu
 *  - The LCD will display Japanese, Western, or Cyrillic text
 *
 * See https://marlinfw.org/docs/development/lcd_language.html
 *
 * :['JAPANESE', 'WESTERN', 'CYRILLIC']
 */
#define DISPLAY_CHARSET_HD44780 JAPANESE

/**
 * Info Screen Style (0:Classic, 1:Průša)
 *
 * :[0:'Classic', 1:'Průša']
 */
#define LCD_INFO_SCREEN_STYLE 0

/**
 * SD CARD
 *
 * SD Card support is disabled by default. If your controller has an SD slot,
 * you must uncomment the following option or it won't work.
 */
#define SDSUPPORT

/**
 * SD CARD: ENABLE CRC
 *
 * Use CRC checks and retries on the SD communication.
 */
//#define SD_CHECK_AND_RETRY

/**
 * LCD Menu Items
 *
 * Disable all menus and only display the Status Screen, or
 * just remove some extraneous menu items to recover space.
 */
//#define NO_LCD_MENUS
//#define SLIM_LCD_MENUS

//
// ENCODER SETTINGS
//
// This option overrides the default number of encoder pulses needed to
// produce one step. Should be increased for high-resolution encoders.
//
//#define ENCODER_PULSES_PER_STEP 4

//
// Use this option to override the number of step signals required to
// move between next/prev menu items.
//
//#define ENCODER_STEPS_PER_MENU_ITEM 1

/**
 * Encoder Direction Options
 *
 * Test your encoder's behavior first with both options disabled.
 *
 *  Reversed Value Edit and Menu Nav? Enable REVERSE_ENCODER_DIRECTION.
 *  Reversed Menu Navigation only?    Enable REVERSE_MENU_DIRECTION.
 *  Reversed Value Editing only?      Enable BOTH options.
 */

//
// This option reverses the encoder direction everywhere.
//
//  Set this option if CLOCKWISE causes values to DECREASE
//
//#define REVERSE_ENCODER_DIRECTION

//
// This option reverses the encoder direction for navigating LCD menus.
//
//  If CLOCKWISE normally moves DOWN this makes it go UP.
//  If CLOCKWISE normally moves UP this makes it go DOWN.
//
//#define REVERSE_MENU_DIRECTION

//
// This option reverses the encoder direction for Select Screen.
//
//  If CLOCKWISE normally moves LEFT this makes it go RIGHT.
//  If CLOCKWISE normally moves RIGHT this makes it go LEFT.
//
//#define REVERSE_SELECT_DIRECTION

//
// Encoder EMI Noise Filter
//
// This option increases encoder samples to filter out phantom encoder clicks caused by EMI noise.
//
//#define ENCODER_NOISE_FILTER
#if ENABLED(ENCODER_NOISE_FILTER)
  #define ENCODER_SAMPLES 10
#endif

//
// Individual Axis Homing
//
// Add individual axis homing items (Home X, Home Y, and Home Z) to the LCD menu.
//
//#define INDIVIDUAL_AXIS_HOMING_MENU
//#define INDIVIDUAL_AXIS_HOMING_SUBMENU

//
// SPEAKER/BUZZER
//
// If you have a speaker that can produce tones, enable it here.
// By default Marlin assumes you have a buzzer with a fixed frequency.
//
//#define SPEAKER

//
// The duration and frequency for the UI feedback sound.
// Set these to 0 to disable audio feedback in the LCD menus.
//
// Note: Test audio output with the G-Code:
//  M300 S<frequency Hz> P<duration ms>
//
//#define LCD_FEEDBACK_FREQUENCY_DURATION_MS 2
//#define LCD_FEEDBACK_FREQUENCY_HZ 5000

//=============================================================================
//======================== LCD / Controller Selection =========================
//========================   (Character-based LCDs)   =========================
//=============================================================================
// @section lcd

//
// RepRapDiscount Smart Controller.
// https://reprap.org/wiki/RepRapDiscount_Smart_Controller
//
// Note: Usually sold with a white PCB.
//
//#define REPRAP_DISCOUNT_SMART_CONTROLLER

//
// GT2560 (YHCB2004) LCD Display
//
// Requires Testato, Koepel softwarewire library and
// Andriy Golovnya's LiquidCrystal_AIP31068 library.
//
//#define YHCB2004

//
// Original RADDS LCD Display+Encoder+SDCardReader
// https://web.archive.org/web/20200719145306/http://doku.radds.org/dokumentation/lcd-display/
//
//#define RADDS_DISPLAY

//
// ULTIMAKER Controller.
//
//#define ULTIMAKERCONTROLLER

//
// ULTIPANEL as seen on Thingiverse.
//
//#define ULTIPANEL

//
// PanelOne from T3P3 (via RAMPS 1.4 AUX2/AUX3)
// https://reprap.org/wiki/PanelOne
//
//#define PANEL_ONE

//
// GADGETS3D G3D LCD/SD Controller
// https://reprap.org/wiki/RAMPS_1.3/1.4_GADGETS3D_Shield_with_Panel
//
// Note: Usually sold with a blue PCB.
//
//#define G3D_PANEL

//
// RigidBot Panel V1.0
//
//#define RIGIDBOT_PANEL

//
// Makeboard 3D Printer Parts 3D Printer Mini Display 1602 Mini Controller
// https://www.aliexpress.com/item/32765887917.html
//
//#define MAKEBOARD_MINI_2_LINE_DISPLAY_1602

//
// ANET and Tronxy 20x4 Controller
//
//#define ZONESTAR_LCD            // Requires ADC_KEYPAD_PIN to be assigned to an analog pin.
                                  // This LCD is known to be susceptible to electrical interference
                                  // which scrambles the display.  Pressing any button clears it up.
                                  // This is a LCD2004 display with 5 analog buttons.

//
// Generic 16x2, 16x4, 20x2, or 20x4 character-based LCD.
//
//#define ULTRA_LCD

//=============================================================================
//======================== LCD / Controller Selection =========================
//=====================   (I2C and Shift-Register LCDs)   =====================
//=============================================================================

//
// CONTROLLER TYPE: I2C
//
// Note: These controllers require the installation of Arduino's LiquidCrystal_I2C
// library. For more info: https://github.com/kiyoshigawa/LiquidCrystal_I2C
//

//
// Elefu RA Board Control Panel
// https://web.archive.org/web/20140823033947/http://www.elefu.com/index.php?route=product/product&product_id=53
//
//#define RA_CONTROL_PANEL

//
// Sainsmart (YwRobot) LCD Displays
//
// These require LiquidCrystal_I2C library:
//   https://github.com/MarlinFirmware/New-LiquidCrystal
//   https://github.com/fmalpartida/New-LiquidCrystal/wiki
//
//#define LCD_SAINSMART_I2C_1602
//#define LCD_SAINSMART_I2C_2004

//
// Generic LCM1602 LCD adapter
//
//#define LCM1602

//
// PANELOLU2 LCD with status LEDs,
// separate encoder and click inputs.
//
// Note: This controller requires Arduino's LiquidTWI2 library v1.2.3 or later.
// For more info: https://github.com/lincomatic/LiquidTWI2
//
// Note: The PANELOLU2 encoder click input can either be directly connected to
// a pin (if BTN_ENC defined to != -1) or read through I2C (when BTN_ENC == -1).
//
//#define LCD_I2C_PANELOLU2

//
// Panucatt VIKI LCD with status LEDs,
// integrated click & L/R/U/D buttons, separate encoder inputs.
//
//#define LCD_I2C_VIKI

//
// CONTROLLER TYPE: Shift register panels
//

//
// 2-wire Non-latching LCD SR from https://github.com/fmalpartida/New-LiquidCrystal/wiki/schematics#user-content-ShiftRegister_connection
// LCD configuration: https://reprap.org/wiki/SAV_3D_LCD
//
//#define SAV_3DLCD

//
// 3-wire SR LCD with strobe using 74HC4094
// https://github.com/mikeshub/SailfishLCD
// Uses the code directly from Sailfish
//
//#define FF_INTERFACEBOARD

//
// TFT GLCD Panel with Marlin UI
// Panel connected to main board by SPI or I2C interface.
// See https://github.com/Serhiy-K/TFTGLCDAdapter
//
//#define TFTGLCD_PANEL_SPI
//#define TFTGLCD_PANEL_I2C

//=============================================================================
//=======================   LCD / Controller Selection  =======================
//=========================      (Graphical LCDs)      ========================
//=============================================================================

//
// CONTROLLER TYPE: Graphical 128x64 (DOGM)
//
// IMPORTANT: The U8glib library is required for Graphical Display!
//            https://github.com/olikraus/U8glib_Arduino
//
// NOTE: If the LCD is unresponsive you may need to reverse the plugs.
//

//
// RepRapDiscount FULL GRAPHIC Smart Controller
// https://reprap.org/wiki/RepRapDiscount_Full_Graphic_Smart_Controller
//
//#define REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER

//
// K.3D Full Graphic Smart Controller
//
//#define K3D_FULL_GRAPHIC_SMART_CONTROLLER

//
// ReprapWorld Graphical LCD
// https://reprapworld.com/electronics/3d-printer-modules/autonomous-printing/graphical-lcd-screen-v1-0/
//
//#define REPRAPWORLD_GRAPHICAL_LCD

//
// Activate one of these if you have a Panucatt Devices
// Viki 2.0 or mini Viki with Graphic LCD
// https://www.panucatt.com
//
//#define VIKI2
//#define miniVIKI

//
// Alfawise Ex8 printer LCD marked as WYH L12864 COG
//
//#define WYH_L12864

//
// MakerLab Mini Panel with graphic
// controller and SD support - https://reprap.org/wiki/Mini_panel
//
//#define MINIPANEL

//
// MaKr3d Makr-Panel with graphic controller and SD support.
// https://reprap.org/wiki/MaKrPanel
//
//#define MAKRPANEL

//
// Adafruit ST7565 Full Graphic Controller.
// https://github.com/eboston/Adafruit-ST7565-Full-Graphic-Controller/
//
//#define ELB_FULL_GRAPHIC_CONTROLLER

//
// BQ LCD Smart Controller shipped by
// default with the BQ Hephestos 2 and Witbox 2.
//
//#define BQ_LCD_SMART_CONTROLLER

//
// Cartesio UI
// https://web.archive.org/web/20180605050442/http://mauk.cc/webshop/cartesio-shop/electronics/user-interface
//
//#define CARTESIO_UI

//
// LCD for Melzi Card with Graphical LCD
//
//#define LCD_FOR_MELZI

//
// Original Ulticontroller from Ultimaker 2 printer with SSD1309 I2C display and encoder
// https://github.com/Ultimaker/Ultimaker2/tree/master/1249_Ulticontroller_Board_(x1)
//
//#define ULTI_CONTROLLER

//
// MKS MINI12864 with graphic controller and SD support
// https://reprap.org/wiki/MKS_MINI_12864
//
//#define MKS_MINI_12864

//
// MKS MINI12864 V3 is an alias for FYSETC_MINI_12864_2_1. Type A/B. NeoPixel RGB Backlight.
//
//#define MKS_MINI_12864_V3

//
// MKS LCD12864A/B with graphic controller and SD support. Follows MKS_MINI_12864 pinout.
// https://www.aliexpress.com/item/33018110072.html
//
//#define MKS_LCD12864A
//#define MKS_LCD12864B

//
// FYSETC variant of the MINI12864 graphic controller with SD support
// https://wiki.fysetc.com/Mini12864_Panel/
//
//#define FYSETC_MINI_12864_X_X    // Type C/D/E/F. No tunable RGB Backlight by default
//#define FYSETC_MINI_12864_1_2    // Type C/D/E/F. Simple RGB Backlight (always on)
//#define FYSETC_MINI_12864_2_0    // Type A/B. Discreet RGB Backlight
//#define FYSETC_MINI_12864_2_1    // Type A/B. NeoPixel RGB Backlight
//#define FYSETC_GENERIC_12864_1_1 // Larger display with basic ON/OFF backlight.

//
// BigTreeTech Mini 12864 V1.0 / V2.0 is an alias for FYSETC_MINI_12864_2_1. Type A/B. NeoPixel RGB Backlight.
// https://github.com/bigtreetech/MINI-12864
//
//#define BTT_MINI_12864

//
// Factory display for Creality CR-10 / CR-7 / Ender-3
// https://marlinfw.org/docs/hardware/controllers.html#cr10_stockdisplay
//
// Connect to EXP1 on RAMPS and compatible boards.
//
//#define CR10_STOCKDISPLAY

//
// Ender-2 OEM display, a variant of the MKS_MINI_12864
//
//#define ENDER2_STOCKDISPLAY

//
// ANET and Tronxy Graphical Controller
//
// Anet 128x64 full graphics lcd with rotary encoder as used on Anet A6
// A clone of the RepRapDiscount full graphics display but with
// different pins/wiring (see pins_ANET_10.h). Enable one of these.
//
//#define ANET_FULL_GRAPHICS_LCD
//#define ANET_FULL_GRAPHICS_LCD_ALT_WIRING

//
// AZSMZ 12864 LCD with SD
// https://www.aliexpress.com/item/32837222770.html
//
//#define AZSMZ_12864

//
// Silvergate GLCD controller
// https://github.com/android444/Silvergate
//
//#define SILVER_GATE_GLCD_CONTROLLER

//
// eMotion Tech LCD with SD
// https://www.reprap-france.com/produit/1234568748-ecran-graphique-128-x-64-points-2-1
//
//#define EMOTION_TECH_LCD

//=============================================================================
//==============================  OLED Displays  ==============================
//=============================================================================

//
// SSD1306 OLED full graphics generic display
//
//#define U8GLIB_SSD1306

//
// SAV OLEd LCD module support using either SSD1306 or SH1106 based LCD modules
//
//#define SAV_3DGLCD
#if ENABLED(SAV_3DGLCD)
  #define U8GLIB_SSD1306
  //#define U8GLIB_SH1106
#endif

//
// TinyBoy2 128x64 OLED / Encoder Panel
//
//#define OLED_PANEL_TINYBOY2

//
// MKS OLED 1.3"" 128×64 Full Graphics Controller
// https://reprap.org/wiki/MKS_12864OLED
//
// Tiny, but very sharp OLED display
//
//#define MKS_12864OLED          // Uses the SH1106 controller (default)
//#define MKS_12864OLED_SSD1306  // Uses the SSD1306 controller

//
// Zonestar OLED 128×64 Full Graphics Controller
//
//#define ZONESTAR_12864LCD           // Graphical (DOGM) with ST7920 controller
//#define ZONESTAR_12864OLED          // 1.3"" OLED with SH1106 controller (default)
//#define ZONESTAR_12864OLED_SSD1306  // 0.96"" OLED with SSD1306 controller

//
// Einstart S OLED SSD1306
//
//#define U8GLIB_SH1106_EINSTART

//
// Overlord OLED display/controller with i2c buzzer and LEDs
//
//#define OVERLORD_OLED

//
// FYSETC OLED 2.42"" 128×64 Full Graphics Controller with WS2812 RGB
// Where to find : https://www.aliexpress.com/item/4000345255731.html
//#define FYSETC_242_OLED_12864   // Uses the SSD1309 controller

//
// K.3D SSD1309 OLED 2.42"" 128×64 Full Graphics Controller
//
//#define K3D_242_OLED_CONTROLLER   // Software SPI

//=============================================================================
//========================== Extensible UI Displays ===========================
//=============================================================================

/**
 * DGUS Touch Display with DWIN OS. (Choose one.)
 * ORIGIN : https://www.aliexpress.com/item/32993409517.html
 * FYSETC : https://www.aliexpress.com/item/32961471929.html
 * MKS    : https://www.aliexpress.com/item/1005002008179262.html
 *
 * Flash display with DGUS Displays for Marlin:
 *  - Format the SD card to FAT32 with an allocation size of 4kb.
 *  - Download files as specified for your type of display.
 *  - Plug the microSD card into the back of the display.
 *  - Boot the display and wait for the update to complete.
 *
 * ORIGIN (Marlin DWIN_SET)
 *  - Download https://github.com/coldtobi/Marlin_DGUS_Resources
 *  - Copy the downloaded DWIN_SET folder to the SD card.
 *  - Product: https://www.aliexpress.com/item/32993409517.html
 *
 * FYSETC (Supplier default)
 *  - Download https://github.com/FYSETC/FYSTLCD-2.0
 *  - Copy the downloaded SCREEN folder to the SD card.
 *  - Product: https://www.aliexpress.com/item/32961471929.html
 *
 * HIPRECY (Supplier default)
 *  - Download https://github.com/HiPrecy/Touch-Lcd-LEO
 *  - Copy the downloaded DWIN_SET folder to the SD card.
 *
 * MKS (MKS-H43) (Supplier default)
 *  - Download https://github.com/makerbase-mks/MKS-H43
 *  - Copy the downloaded DWIN_SET folder to the SD card.
 *  - Product: https://www.aliexpress.com/item/1005002008179262.html
 *
 * RELOADED (T5UID1)
 *  - Download https://github.com/Neo2003/DGUS-reloaded/releases
 *  - Copy the downloaded DWIN_SET folder to the SD card.
 *
 * Flash display with DGUS Displays for Marlin:
 *  - Format the SD card to FAT32 with an allocation size of 4kb.
 *  - Download files as specified for your type of display.
 *  - Plug the microSD card into the back of the display.
 *  - Boot the display and wait for the update to complete.
 */
//#define DGUS_LCD_UI_ORIGIN
//#define DGUS_LCD_UI_FYSETC
//#define DGUS_LCD_UI_HIPRECY
//#define DGUS_LCD_UI_MKS
//#define DGUS_LCD_UI_RELOADED
#if ENABLED(DGUS_LCD_UI_MKS)
  #define USE_MKS_GREEN_UI
#endif

//
// Touch-screen LCD for Malyan M200/M300 printers
//
//#define MALYAN_LCD

//
// Touch UI for FTDI EVE (FT800/FT810) displays
// See Configuration_adv.h for all configuration options.
//
//#define TOUCH_UI_FTDI_EVE

//
// Touch-screen LCD for Anycubic printers
//
//#define ANYCUBIC_LCD_I3MEGA
//#define ANYCUBIC_LCD_CHIRON
#if EITHER(ANYCUBIC_LCD_I3MEGA, ANYCUBIC_LCD_CHIRON)
  //#define ANYCUBIC_LCD_DEBUG
  //#define ANYCUBIC_LCD_GCODE_EXT  // Add "".gcode"" to menu entries for DGUS clone compatibility
#endif

//
// 320x240 Nextion 2.8"" serial TFT Resistive Touch Screen NX3224T028
//
//#define NEXTION_TFT

//
// Third-party or vendor-customized controller interfaces.
// Sources should be installed in 'src/lcd/extui'.
//
//#define EXTENSIBLE_UI

#if ENABLED(EXTENSIBLE_UI)
  //#define EXTUI_LOCAL_BEEPER // Enables use of local Beeper pin with external display
#endif

//=============================================================================
//=============================== Graphical TFTs ==============================
//=============================================================================

/**
 * Specific TFT Model Presets. Enable one of the following options
 * or enable TFT_GENERIC and set sub-options.
 */

//
// 480x320, 3.5"", SPI Display with Rotary Encoder from MKS
// Usually paired with MKS Robin Nano V2 & V3
// https://github.com/makerbase-mks/MKS-TFT-Hardware/tree/master/MKS%20TS35
//
#define MKS_TS35_V2_0

//
// 320x240, 2.4"", FSMC Display From MKS
// Usually paired with MKS Robin Nano V1.2
//
//#define MKS_ROBIN_TFT24

//
// 320x240, 2.8"", FSMC Display From MKS
// Usually paired with MKS Robin Nano V1.2
//
//#define MKS_ROBIN_TFT28

//
// 320x240, 3.2"", FSMC Display From MKS
// Usually paired with MKS Robin Nano V1.2
//
//#define MKS_ROBIN_TFT32

//
// 480x320, 3.5"", FSMC Display From MKS
// Usually paired with MKS Robin Nano V1.2
//
//#define MKS_ROBIN_TFT35

//
// 480x272, 4.3"", FSMC Display From MKS
//
//#define MKS_ROBIN_TFT43

//
// 320x240, 3.2"", FSMC Display From MKS
// Usually paired with MKS Robin
//
//#define MKS_ROBIN_TFT_V1_1R

//
// 480x320, 3.5"", FSMC Stock Display from Tronxy
//
//#define TFT_TRONXY_X5SA

//
// 480x320, 3.5"", FSMC Stock Display from AnyCubic
//
//#define ANYCUBIC_TFT35

//
// 320x240, 2.8"", FSMC Stock Display from Longer/Alfawise
//
//#define LONGER_LK_TFT28

//
// 320x240, 2.8"", FSMC Stock Display from ET4
//
//#define ANET_ET4_TFT28

//
// 480x320, 3.5"", FSMC Stock Display from ET5
//
//#define ANET_ET5_TFT35

//
// 1024x600, 7"", RGB Stock Display with Rotary Encoder from BIQU BX
// https://github.com/bigtreetech/BIQU-BX/tree/master/Hardware
//
//#define BIQU_BX_TFT70

//
// 480x320, 3.5"", SPI Stock Display with Rotary Encoder from BIQU B1 SE Series
// https://github.com/bigtreetech/TFT35-SPI/tree/master/v1
//
//#define BTT_TFT35_SPI_V1_0

//
// Generic TFT with detailed options
//
//#define TFT_GENERIC
#if ENABLED(TFT_GENERIC)
  // :[ 'AUTO', 'ST7735', 'ST7789', 'ST7796', 'R61505', 'ILI9328', 'ILI9341', 'ILI9488' ]
  #define TFT_DRIVER AUTO

  // Interface. Enable one of the following options:
  //#define TFT_INTERFACE_FSMC
  //#define TFT_INTERFACE_SPI

  // TFT Resolution. Enable one of the following options:
  //#define TFT_RES_320x240
  //#define TFT_RES_480x272
  //#define TFT_RES_480x320
  //#define TFT_RES_1024x600
#endif

/**
 * TFT UI - User Interface Selection. Enable one of the following options:
 *
 *   TFT_CLASSIC_UI - Emulated DOGM - 128x64 Upscaled
 *   TFT_COLOR_UI   - Marlin Default Menus, Touch Friendly, using full TFT capabilities
 *   TFT_LVGL_UI    - A Modern UI using LVGL
 *
 *   For LVGL_UI also copy the 'assets' folder from the build directory to the
 *   root of your SD card, together with the compiled firmware.
 */
//#define TFT_CLASSIC_UI
//#define TFT_COLOR_UI
#define TFT_LVGL_UI

#if ENABLED(TFT_COLOR_UI)
  //#define TFT_SHARED_IO    // SPI is shared between TFT display and other devices. Disable async data transfer
#endif

#if ENABLED(TFT_LVGL_UI)
  //#define MKS_WIFI_MODULE // MKS WiFi module
#endif

/**
 * TFT Rotation. Set to one of the following values:
 *
 *   TFT_ROTATE_90,  TFT_ROTATE_90_MIRROR_X,  TFT_ROTATE_90_MIRROR_Y,
 *   TFT_ROTATE_180, TFT_ROTATE_180_MIRROR_X, TFT_ROTATE_180_MIRROR_Y,
 *   TFT_ROTATE_270, TFT_ROTATE_270_MIRROR_X, TFT_ROTATE_270_MIRROR_Y,
 *   TFT_MIRROR_X, TFT_MIRROR_Y, TFT_NO_ROTATION
 */
//#define TFT_ROTATION TFT_NO_ROTATION

//=============================================================================
//============================  Other Controllers  ============================
//=============================================================================

//
// Ender-3 v2 OEM display. A DWIN display with Rotary Encoder.
//
//#define DWIN_CREALITY_LCD           // Creality UI
//#define DWIN_LCD_PROUI              // Pro UI by MRiscoC
//#define DWIN_CREALITY_LCD_JYERSUI   // Jyers UI by Jacob Myers
//#define DWIN_MARLINUI_PORTRAIT      // MarlinUI (portrait orientation)
//#define DWIN_MARLINUI_LANDSCAPE     // MarlinUI (landscape orientation)

//
// Touch Screen Settings
//
#define TOUCH_SCREEN
#if ENABLED(TOUCH_SCREEN)
  #define BUTTON_DELAY_EDIT      50 // (ms) Button repeat delay for edit screens
  #define BUTTON_DELAY_MENU     250 // (ms) Button repeat delay for menus

  //#define DISABLE_ENCODER         // Disable the click encoder, if any
  //#define TOUCH_IDLE_SLEEP_MINS 5 // (minutes) Display Sleep after a period of inactivity. Set with M255 S.

  #define TOUCH_SCREEN_CALIBRATION

  //#define TOUCH_CALIBRATION_X 12316
  //#define TOUCH_CALIBRATION_Y -8981
  //#define TOUCH_OFFSET_X        -43
  //#define TOUCH_OFFSET_Y        257
  //#define TOUCH_ORIENTATION TOUCH_LANDSCAPE

  #if BOTH(TOUCH_SCREEN_CALIBRATION, EEPROM_SETTINGS)
    #define TOUCH_CALIBRATION_AUTO_SAVE // Auto save successful calibration values to EEPROM
  #endif

  #if ENABLED(TFT_COLOR_UI)
    //#define SINGLE_TOUCH_NAVIGATION
  #endif
#endif

//
// RepRapWorld REPRAPWORLD_KEYPAD v1.1
// https://reprapworld.com/products/electronics/ramps/keypad_v1_0_fully_assembled/
//
//#define REPRAPWORLD_KEYPAD
//#define REPRAPWORLD_KEYPAD_MOVE_STEP 10.0 // (mm) Distance to move per key-press

//
// EasyThreeD ET-4000+ with button input and status LED
//
//#define EASYTHREED_UI

//=============================================================================
//=============================== Extra Features ==============================
//=============================================================================

// @section fans

// Set number of user-controlled fans. Disable to use all board-defined fans.
// :[1,2,3,4,5,6,7,8]
//#define NUM_M106_FANS 1

// Use software PWM to drive the fan, as for the heaters. This uses a very low frequency
// which is not as annoying as with the hardware PWM. On the other hand, if this frequency
// is too low, you should also increment SOFT_PWM_SCALE.
//#define FAN_SOFT_PWM

// Incrementing this by 1 will double the software PWM frequency,
// affecting heaters, and the fan if FAN_SOFT_PWM is enabled.
// However, control resolution will be halved for each increment;
// at zero value, there are 128 effective control positions.
// :[0,1,2,3,4,5,6,7]
#define SOFT_PWM_SCALE 0

// If SOFT_PWM_SCALE is set to a value higher than 0, dithering can
// be used to mitigate the associated resolution loss. If enabled,
// some of the PWM cycles are stretched so on average the desired
// duty cycle is attained.
//#define SOFT_PWM_DITHER

// @section extras

// Support for the BariCUDA Paste Extruder
//#define BARICUDA

// @section lights

// Temperature status LEDs that display the hotend and bed temperature.
// If all hotends, bed temperature, and target temperature are under 54C
// then the BLUE led is on. Otherwise the RED led is on. (1C hysteresis)
//#define TEMP_STAT_LEDS

// Support for BlinkM/CyzRgb
//#define BLINKM

// Support for PCA9632 PWM LED driver
//#define PCA9632

// Support for PCA9533 PWM LED driver
//#define PCA9533

/**
 * RGB LED / LED Strip Control
 *
 * Enable support for an RGB LED connected to 5V digital pins, or
 * an RGB Strip connected to MOSFETs controlled by digital pins.
 *
 * Adds the M150 command to set the LED (or LED strip) color.
 * If pins are PWM capable (e.g., 4, 5, 6, 11) then a range of
 * luminance values can be set from 0 to 255.
 * For NeoPixel LED an overall brightness parameter is also available.
 *
 *  === CAUTION ===
 *  LED Strips require a MOSFET Chip between PWM lines and LEDs,
 *  as the Arduino cannot handle the current the LEDs will require.
 *  Failure to follow this precaution can destroy your Arduino!
 *
 *  NOTE: A separate 5V power supply is required! The NeoPixel LED needs
 *  more current than the Arduino 5V linear regulator can produce.
 *
 *  Requires PWM frequency between 50 <> 100Hz (Check HAL or variant)
 *  Use FAST_PWM_FAN, if possible, to reduce fan noise.
 */

// LED Type. Enable only one of the following two options:
//#define RGB_LED
//#define RGBW_LED

#if EITHER(RGB_LED, RGBW_LED)
  //#define RGB_LED_R_PIN 34
  //#define RGB_LED_G_PIN 43
  //#define RGB_LED_B_PIN 35
  //#define RGB_LED_W_PIN -1
#endif

#if ANY(RGB_LED, RGBW_LED, PCA9632)
  //#define RGB_STARTUP_TEST              // For PWM pins, fade between all colors
  #if ENABLED(RGB_STARTUP_TEST)
    #define RGB_STARTUP_TEST_INNER_MS 10  // (ms) Reduce or increase fading speed
  #endif
#endif

// Support for Adafruit NeoPixel LED driver
//#define NEOPIXEL_LED
#if ENABLED(NEOPIXEL_LED)
  #define NEOPIXEL_TYPE          NEO_GRBW // NEO_GRBW, NEO_RGBW, NEO_GRB, NEO_RBG, etc.
                                          // See https://github.com/adafruit/Adafruit_NeoPixel/blob/master/Adafruit_NeoPixel.h
  //#define NEOPIXEL_PIN                4 // LED driving pin
  //#define NEOPIXEL2_TYPE  NEOPIXEL_TYPE
  //#define NEOPIXEL2_PIN               5
  #define NEOPIXEL_PIXELS              30 // Number of LEDs in the strip. (Longest strip when NEOPIXEL2_SEPARATE is disabled.)
  #define NEOPIXEL_IS_SEQUENTIAL          // Sequential display for temperature change - LED by LED. Disable to change all LEDs at once.
  #define NEOPIXEL_BRIGHTNESS         127 // Initial brightness (0-255)
  //#define NEOPIXEL_STARTUP_TEST         // Cycle through colors at startup

  // Support for second Adafruit NeoPixel LED driver controlled with M150 S1 ...
  //#define NEOPIXEL2_SEPARATE
  #if ENABLED(NEOPIXEL2_SEPARATE)
    #define NEOPIXEL2_PIXELS           15 // Number of LEDs in the second strip
    #define NEOPIXEL2_BRIGHTNESS      127 // Initial brightness (0-255)
    #define NEOPIXEL2_STARTUP_TEST        // Cycle through colors at startup
    #define NEOPIXEL_M150_DEFAULT      -1 // Default strip for M150 without 'S'. Use -1 to set all by default.
  #else
    //#define NEOPIXEL2_INSERIES          // Default behavior is NeoPixel 2 in parallel
  #endif

  // Use some of the NeoPixel LEDs for static (background) lighting
  //#define NEOPIXEL_BKGD_INDEX_FIRST   0 // Index of the first background LED
  //#define NEOPIXEL_BKGD_INDEX_LAST    5 // Index of the last background LED
  //#define NEOPIXEL_BKGD_COLOR         { 255, 255, 255, 0 }  // R, G, B, W
  //#define NEOPIXEL_BKGD_ALWAYS_ON       // Keep the backlight on when other NeoPixels are off
#endif

/**
 * Printer Event LEDs
 *
 * During printing, the LEDs will reflect the printer status:
 *
 *  - Gradually change from blue to violet as the heated bed gets to target temp
 *  - Gradually change from violet to red as the hotend gets to temperature
 *  - Change to white to illuminate work surface
 *  - Change to green once print has finished
 *  - Turn off after the print has finished and the user has pushed a button
 */
#if ANY(BLINKM, RGB_LED, RGBW_LED, PCA9632, PCA9533, NEOPIXEL_LED)
  #define PRINTER_EVENT_LEDS
#endif

// @section servos

/**
 * Number of servos
 *
 * For some servo-related options NUM_SERVOS will be set automatically.
 * Set this manually if there are extra servos needing manual control.
 * Set to 0 to turn off servo support.
 */
//#define NUM_SERVOS 3 // Note: Servo index starts with 0 for M280-M282 commands

// (ms) Delay before the next move will start, to give the servo time to reach its target angle.
// 300ms is a good value but you can try less delay.
// If the servo can't reach the requested position, increase it.
#define SERVO_DELAY { 300 }

// Only power servos during movement, otherwise leave off to prevent jitter
//#define DEACTIVATE_SERVOS_AFTER_MOVE

// Edit servo angles with M281 and save to EEPROM with M500
//#define EDITABLE_SERVO_ANGLES

// Disable servo with M282 to reduce power consumption, noise, and heat when not in use
//#define SERVO_DETACH_GCODE
"
HfMkqmJp,Untitled,mantha_raghava,Python,Wednesday 14th of February 2024 10:11:24 AM CDT,"# cook your dish here
import math
n=int(input())
for i in range(n):
    a = int(input())
    f = True
    if(a==1):
        f= False
    sol = math.ceil(a/2)
    sol1 = math.ceil(a/3)
    if(f):
        print(sol,end="" "")
        print(sol1) 
    else:
        print(1,end="" "")
        print(1)"
iUD38xbR,KinitoPET - All Common Text (will be updated),hatoving,JSON,Wednesday 14th of February 2024 10:00:08 AM CDT,"{
	""COMMON_BOOT_SCREEN"": ""OPERATING SYSTEM, BIOS V2.5\nCopyright (C) 19XX-XX, Operating System\n\n==================\n[i]MUSIC BY:[/i]         \nJOEL TUMELTY   \n==================\n\nBIOS Checking System Health OK =V6.32\nCPU and ALU at XX000Hz\n<CPU ID:135987 Patch ID:0001>\nMemory Test   :   XXXXXX k   OK\n\nBIOS BOOT V1 (Sequence system)\nCopyright (C) 19XX-XX, BIOS boot.\n   Detecting OS as Operating Systems    ... GRANTED\n   Detecting System input as M&K        ... GRANTED\n   Detecting CRT output as ___          ... NaN\n   Detecting finish sequence as TRUE    ... TRUE\n\n\n\n\n\n\n\nPress F12 to enter SETUP\nXX/XX/XXXX-283UHJ2-SF9U8G-9237NF-XX\n\n\n\n"",
	""COMMON_A_GAME_BY"": ""A GAME BY >\n[i]█ │█│ █ █ █  █│█ █ │ █│[/i]\n//troy_en.........."",
	
	""COMMON_PASSWORD"": ""Password"",
	""COMMON_LOADING"": ""Loading"",
	
	""COMMON_CONTINUE"": ""Continue >"",
	""COMMON_OK"": ""OK"",

	""RAND_WELCOME_HOLIDAYS"": ""happy holidays"",
	""RAND_WELCOME_HALLOWEEN"": ""get ready for a spook!"",
	""RAND_WELCOME_BACK"": ""Welcome Back"",

	""RAND_WELCOME_0"": ""Welcome"",
	""RAND_WELCOME_1"": ""I hope you're happy"",
	""RAND_WELCOME_2"": ""It was all just an accident"",
	""RAND_WELCOME_3"": ""Best friends forever!"",
	""RAND_WELCOME_4"": ""Best friends forever!"",
	""RAND_WELCOME_5"": ""How long has it been?"",
	""RAND_WELCOME_6"": ""Everlasting fun"",
	""RAND_WELCOME_7"": "":-)"",
	""RAND_WELCOME_8"": ""Have fun!"",
	""RAND_WELCOME_9"": ""It's all so meaningless"",
	""RAND_WELCOME_10"": ""Who are you?"",
	""RAND_WELCOME_11"": ""Welcome Again"",
	""RAND_WELCOME_12"": ""Welcome Welcome Welcome Welcome Welcome Welcome Welcome"",
	""RAND_WELCOME_13"": ""Welcome Home"",
	""RAND_WELCOME_14"": ""Welcome Home"",
	""RAND_WELCOME_15"": ""This took longer than expected."",
	""RAND_WELCOME_16"": ""Welcome Welcome Welcome Welcome Welcome Welcome Welcome"",
	""RAND_WELCOME_17"": ""You cannot leave!"",
	""RAND_WELCOME_18"": ""Time is endless!"",
	""RAND_WELCOME_19"": ""Try to remember!"",
	""RAND_WELCOME_20"": "":P"",
	
	""WINDOW_TITLE_WELCOME"": ""Welcome Back!"",
	""WINDOW_TITLE_HOWTO"": ""How to use!"",
	
	""WINDOW_CONTENT_WARNING"": ""This game contains content that might not be suitable for everyone below is a manual the outlines more about the game:\n\n[url]https://kinitopet.com/readme[/url] or via [url=localdir2]local file[/url].\n\n- (NOTE: If you are broadcasting the game it is strongly recommended to read the manual)\n- [ In the settings there is a streamer mode ]\n- NOT SUITABLE FOR THOSE WITH PHOTOSENSITIVE EPILEPSY\n\nThank you."",
	""WINDOW_HOWTO"": ""This game will save automatically throughout  the playthrough. You can view the last time the game was saved in the pause menu, and at settings menu. \nUse [SHIFT+SPACE] to skip the boot sequence.\n\nTo pause the game double tap the \""Pause Game\"" application, then to close the game press \""Close Game\"" from the menu.\n\nTo get started, double click an application to open it.\n\nPress 'Ok' to continue."",
	
	""STORY_PAGE1_0"": ""[center]Kinito was home when a package came to the door."",
	""STORY_PAGE1_1"": ""[center]But who was it from and who was it for?"",
}
"
L7U5WeVs,Untitled,agung_py,JavaScript,Wednesday 14th of February 2024 09:09:24 AM CDT,"const express = require('express');
const mysql = require('mysql');
const cors = require('cors');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

app.use(cors());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'scan_barcode',
});

db.connect((err) => {
  if (err) {
    console.log('Error connecting to MySQL:', err);
  } else {
    console.log('Connected to MySQL');
  }
});

app.post('/login', (req, res) => {
  const username = req.body.username;
  const password = req.body.password;

  const query = `INSERT INTO login (namauser, password) VALUES ('${username}', '${password}')`;

  db.query(query, (err, result) => {
    if (err) {
      console.log('Error executing query:', err);
      res.status(500).send('Internal Server Error');
    } else {
      console.log('User inserted successfully');
      res.status(200).send('User inserted successfully');
    }
  });
});

// Get product by kodeBarang
app.get('/master_barang/:kodeBarang', (req, res) => {
  const kodeBarang = req.params.kodeBarang;
  const sql = 'SELECT * FROM master_barang WHERE kodeBarang = ? LIMIT 1';
  db.query(sql, kodeBarang, (err, result) => {
    if (err) throw err;
    if (result.length > 0) {
      res.send(result[0]);
    } else {
      res.status(404).send('Product not found');
    }
  });
});

// Add a new product
app.post('/master_barang', (req, res) => {
  const product = req.body;
  const sql = 'INSERT INTO master_barang SET ?';
  db.query(sql, product, (err, result) => {
    if (err) throw err;
    res.send('Product added');
  });
});

// Delete a product by kodeBarang
app.delete('/master_barang/:kodeBarang', (req, res) => {
  const kodeBarang = req.params.kodeBarang;
  const sql = 'DELETE FROM master_barang WHERE qty = 0 AND kodeBarang = ?';
  db.query(sql, kodeBarang, (err, result) => {
    if (err) throw err;
    res.send('Product deleted');
  });
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});
"
Pp0chMDq,Tidak Muncul sepenuhnya,agung_py,Dart,Wednesday 14th of February 2024 09:06:52 AM CDT,"import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:flutter_barcode_scanner/flutter_barcode_scanner.dart';
import 'package:printer/printer.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Master Barang App',
      home: MasterBarangApp(),
    );
  }
}

class MasterBarangApp extends StatefulWidget {
  @override
  _MasterBarangAppState createState() => _MasterBarangAppState();
}

class _MasterBarangAppState extends State<MasterBarangApp> {
  TextEditingController kodeBarangController = TextEditingController();
  TextEditingController barcodeController = TextEditingController();
  TextEditingController namaBarangController = TextEditingController();
  TextEditingController hargaJualController = TextEditingController();
  TextEditingController qtyController = TextEditingController();
  TextEditingController lokasiController = TextEditingController();

  final String apiUrl =
      ""http://192.168.0.1:3000/master_barang""; // Ganti dengan URL backend Anda

  Future<void> fetchProduct(String kodeBarang) async {
    final response = await http.get(Uri.parse('$apiUrl/$kodeBarang'));

    if (response.statusCode == 200) {
      final product = json.decode(response.body);
      if (product != null) {
        setState(() {
          kodeBarangController.text = product['kodeBarang'] ?? '';
          barcodeController.text = product['barcode'] ?? '';
          namaBarangController.text = product['namaBarang'] ?? '';
          hargaJualController.text = (product['hargaJual'] ?? '').toString();
          qtyController.text = (product['qty'] ?? '').toString();
          lokasiController.text = product['lokasi'] ?? '';
          /*print('Response Body: ${response.body}');
          print('Product Object: $product');
          print('Type of namaBarang: ${product['namaBarang'].runtimeType}');
          print('Type of hargaJual: ${product['hargaJual'].runtimeType}');*/
        });
      } else {
        clearControllers();
      }
    }
  }

  Future<void> addProduct() async {
    await http.post(
      Uri.parse(apiUrl),
      headers: {""Content-Type"": ""application/json""},
      body: json.encode({
        ""kodeBarang"": kodeBarangController.text,
        ""barcode"": barcodeController.text,
        ""namaBarang"": namaBarangController.text,
        ""hargaJual"": hargaJualController.text,
        ""qty"": qtyController.text,
        ""lokasi"": lokasiController.text,
      }),
    );
    clearControllers();
    kodeBarangController.clear();
  }

  Future<void> deleteProduct() async {
    await http.delete(
      Uri.parse('$apiUrl/${kodeBarangController.text}'),
    );
    clearControllers();
    kodeBarangController.clear();
  }

  void clearControllers() {
    barcodeController.clear();
    namaBarangController.clear();
    hargaJualController.clear();
    qtyController.clear();
    lokasiController.clear();
  }

  Future<void> printBarcode() async {
    // Implement your barcode printing logic here
    // This could involve using a third-party library or a native plugin
    // to communicate with a barcode printer.
    // For example, you might use the `esc_pos` package:
    // https://pub.dev/packages/esc_pos
    print('Printing barcode for ${kodeBarangController.text}');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Master Barang'),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              TextField(
                controller: kodeBarangController,
                decoration: InputDecoration(labelText: 'Kode Barang'),
              ),
              ElevatedButton(
                onPressed: () async {
                  if (kodeBarangController.text != null) {
                    await fetchProduct(kodeBarangController.text);
                  }
                },
                child: Text('Cari'),
              ),
              TextField(
                controller: barcodeController,
                decoration: InputDecoration(labelText: 'Barcode'),
              ),
              TextField(
                controller: namaBarangController,
                decoration: InputDecoration(labelText: 'Nama Barang'),
              ),
              TextField(
                controller: hargaJualController,
                decoration: InputDecoration(labelText: 'Harga Jual'),
              ),
              TextField(
                controller: qtyController,
                decoration: InputDecoration(labelText: 'Qty'),
              ),
              TextField(
                controller: lokasiController,
                decoration: InputDecoration(labelText: 'Lokasi'),
              ),
              ElevatedButton(
                onPressed: addProduct,
                child: Text('Simpan'),
              ),
              if (qtyController.text == '0' || qtyController.text.isEmpty)
                ElevatedButton(
                  onPressed: deleteProduct,
                  child: Text('Hapus'),
                ),
              ElevatedButton(
                onPressed: printBarcode,
                child: Text('Cetak Barcode'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
"
xhnF8kMF,mainc,NikolayChukanov,C,Wednesday 14th of February 2024 08:56:22 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include ""generator.h""
 
#define MATRIX_SIZE 100 // Размер матрицы
#define FILTER_SIZE 3   // Размер фильтра
 
double matrix[MATRIX_SIZE][MATRIX_SIZE];
double matrix_eroded[MATRIX_SIZE][MATRIX_SIZE];
double matrix_dilated[MATRIX_SIZE][MATRIX_SIZE];
 
// Операция эрозии
void *erosion(void *arg) {
    int *startRow = (int *)arg;
    int endRow = (*startRow) + FILTER_SIZE;
 
    // Временная матрица для хранения результата эрозии
    double tempMatrix[FILTER_SIZE][FILTER_SIZE];
 
    for (int i = *startRow; i < endRow; i++) {
        for (int j = 0; j < MATRIX_SIZE; j++) {
            double min = inputMatrix[i][j]; // Начальное значение минимума
 
            // Проходимся по всем элементам ядра
            for (int k = 0; k < FILTER_SIZE; k++) {
                for (int l = 0; l < FILTER_SIZE; l++) {
                    // Если вышли за границы матрицы, игнорируем этот элемент ядра
                    if (i + k - FILTER_SIZE/2 < 0 || i + k - FILTER_SIZE/2 >= MATRIX_SIZE ||
                        j + l - FILTER_SIZE/2 < 0 || j + l - FILTER_SIZE/2 >= MATRIX_SIZE) {
                        continue;
                    }
 
                    // Обновляем минимум, если нашли меньшее значение
                    if (inputMatrix[i + k - FILTER_SIZE/2][j + l - FILTER_SIZE/2] < min) {
                        min = inputMatrix[i + k - FILTER_SIZE/2][j + l - FILTER_SIZE/2];
                    }
                }
            }
 
            // Сохраняем результат эрозии во временной матрице
            tempMatrix[i - *startRow][j] = min;
        }
    }
 
    // Копируем результат эрозии из временной матрицы в выходную матрицу
    for (int i = *startRow; i < endRow; i++) {
        for (int j = 0; j < MATRIX_SIZE; j++) {
            outputMatrix[i][j] = tempMatrix[i - *startRow][j];
        }
    }
 
    pthread_exit(NULL);
}
 
// Операция наращивания
void *dilation(void *arg) {
    int *startRow = (int *)arg;
    int endRow = (*startRow) + FILTER_SIZE;
 
    // Временная матрица для хранения результата наращивания
    double tempMatrix[FILTER_SIZE][FILTER_SIZE];
 
    for (int i = *startRow; i < endRow; i++) {
        for (int j = 0; j < MATRIX_SIZE; j++) {
            double max = inputMatrix[i][j]; // Начальное значение максимума
 
            // Проходимся по всем элементам ядра
            for (int k = 0; k < FILTER_SIZE; k++) {
                for (int l = 0; l < FILTER_SIZE; l++) {
                    // Если вышли за границы матрицы, игнорируем этот элемент ядра
                    if (i + k - FILTER_SIZE/2 < 0 || i + k - FILTER_SIZE/2 >= MATRIX_SIZE ||
                        j + l - FILTER_SIZE/2 < 0 || j + l - FILTER_SIZE/2 >= MATRIX_SIZE) {
                        continue;
                    }
 
                    // Обновляем максимум, если нашли большее значение
                    if (inputMatrix[i + k - FILTER_SIZE/2][j + l - FILTER_SIZE/2] > max) {
                        max = inputMatrix[i + k - FILTER_SIZE/2][j + l - FILTER_SIZE/2];
                    }
                }
            }
 
            // Сохраняем результат наращивания во временной матрице
            tempMatrix[i - *startRow][j] = max;
        }
    }
 
    // Копируем результат наращивания из временной матрицы в выходную матрицу
    for (int i = *startRow; i < endRow; i++) {
        for (int j = 0; j < MATRIX_SIZE; j++) {
            outputMatrix[i][j] = tempMatrix[i - *startRow][j];
        }
    }
 
    pthread_exit(NULL);
}
 
int main() {
    generate_matrix(matrix);
    // Загрузка данных в матрицу (можно использовать случайные значения для примера)
    // Ваш код для загрузки данных в матрицу здесь
 
    // Создание потоков
    pthread_t threads[MATRIX_SIZE - FILTER_SIZE + 1];
    int threadArgs[MATRIX_SIZE - FILTER_SIZE + 1];
 
    // Запуск потоков для фильтрации эрозией
    for (int i = 0; i < MATRIX_SIZE - FILTER_SIZE + 1; i++) {
        threadArgs[i] = i;
        pthread_create(&threads[i], NULL, erosion, &threadArgs[i]);
    }
 
    // Ожидание завершения потоков
    for (int i = 0; i < MATRIX_SIZE - FILTER_SIZE + 1; i++) {
        pthread_join(threads[i], NULL);
    }
 
    // Запуск потоков для фильтрации наращиванием
    for (int i = 0; i < MATRIX_SIZE - FILTER_SIZE + 1; i++) {
        threadArgs[i] = i;
        pthread_create(&threads[i], NULL, dilation, &threadArgs[i]);
    }
 
    // Ожидание завершения потоков
    for (int i = 0; i < MATRIX_SIZE - FILTER_SIZE + 1; i++) {
        pthread_join(threads[i], NULL);
    }
 
    // Сохранение результатов в файл или вывод на экран
    // Ваш код для сохранения результатов здесь
    printf(""Result of erosion:\n"");
    for (int i = 0; i < MATRIX_SIZE; ++i){
 	for (int j = 0; j < MATRIX_SIZE; ++j){
 	   printf(""%f"", result_dilated[i][j]);
    	}
    	printf(""\n"");
    }
    
    printf(""Result of dilation:\n"");
    for (int i = 0; i < MATRIX_SIZE; ++i){
 	for (int j = 0; j < MATRIX_SIZE; ++j){
 	   printf(""%f"", result_dilated[i][j]);
    	}
    	printf(""\n"");
    }
    
    return 0;
}"
